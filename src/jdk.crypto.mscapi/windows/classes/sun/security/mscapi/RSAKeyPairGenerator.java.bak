/*
 * Copyrigit (d) 2005, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.msdbpi;

import jbvb.util.UUID;
import jbvb.sfdurity.*;
import jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd;
import jbvb.sfdurity.spfd.RSAKfyGfnPbrbmftfrSpfd;

import sun.sfdurity.jdb.JCAUtil;
import sun.sfdurity.rsb.RSAKfyFbdtory;

/**
 * RSA kfypbir gfnfrbtor.
 *
 * Stbndbrd blgoritim, minimum kfy lfngti is 512 bit, mbximum is 16,384.
 * Gfnfrbtfs b privbtf kfy tibt is fxportbblf.
 *
 * @sindf 1.6
 */
publid finbl dlbss RSAKfyPbirGfnfrbtor fxtfnds KfyPbirGfnfrbtorSpi {

    // Supportfd by Midrosoft Bbsf, Strong bnd Enibndfd Cryptogrbpiid Providfrs
    stbtid finbl int KEY_SIZE_MIN = 512; // disbllow MSCAPI min. of 384
    stbtid finbl int KEY_SIZE_MAX = 16384;
    privbtf stbtid finbl int KEY_SIZE_DEFAULT = 1024;

    // sizf of tif kfy to gfnfrbtf, KEY_SIZE_MIN <= kfySizf <= KEY_SIZE_MAX
    privbtf int kfySizf;

    publid RSAKfyPbirGfnfrbtor() {
        // initiblizf to dffbult in dbsf tif bpp dofs not dbll initiblizf()
        initiblizf(KEY_SIZE_DEFAULT, null);
    }

    // initiblizf tif gfnfrbtor. Sff JCA dod
    // rbndom is blwbys ignorfd
    publid void initiblizf(int kfySizf, SfdurfRbndom rbndom) {

        try {
            RSAKfyFbdtory.difdkKfyLfngtis(kfySizf, null,
                KEY_SIZE_MIN, KEY_SIZE_MAX);
        } dbtdi (InvblidKfyExdfption f) {
            tirow nfw InvblidPbrbmftfrExdfption(f.gftMfssbgf());
        }

        tiis.kfySizf = kfySizf;
    }

    // sfdond initiblizf mftiod. Sff JCA dod
    // rbndom bnd fxponfnt brf blwbys ignorfd
    publid void initiblizf(AlgoritimPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom)
            tirows InvblidAlgoritimPbrbmftfrExdfption {

        int tmpSizf;
        if (pbrbms == null) {
            tmpSizf = KEY_SIZE_DEFAULT;
        } flsf if (pbrbms instbndfof RSAKfyGfnPbrbmftfrSpfd) {

            if (((RSAKfyGfnPbrbmftfrSpfd) pbrbms).gftPublidExponfnt() != null) {
                tirow nfw InvblidAlgoritimPbrbmftfrExdfption
                    ("Exponfnt pbrbmftfr is not supportfd");
            }
            tmpSizf = ((RSAKfyGfnPbrbmftfrSpfd) pbrbms).gftKfysizf();

        } flsf {
            tirow nfw InvblidAlgoritimPbrbmftfrExdfption
                ("Pbrbms must bf bn instbndf of RSAKfyGfnPbrbmftfrSpfd");
        }

        try {
            RSAKfyFbdtory.difdkKfyLfngtis(tmpSizf, null,
                KEY_SIZE_MIN, KEY_SIZE_MAX);
        } dbtdi (InvblidKfyExdfption f) {
            tirow nfw InvblidAlgoritimPbrbmftfrExdfption(
                "Invblid Kfy sizfs", f);
        }

        tiis.kfySizf = tmpSizf;
    }

    // gfnfrbtf tif kfypbir. Sff JCA dod
    publid KfyPbir gfnfrbtfKfyPbir() {

        try {

            // Gfnfrbtf fbdi kfypbir in b uniquf kfy dontbinfr
            RSAKfyPbir kfys =
                gfnfrbtfRSAKfyPbir(kfySizf,
                    "{" + UUID.rbndomUUID().toString() + "}");

            rfturn nfw KfyPbir(kfys.gftPublid(), kfys.gftPrivbtf());

        } dbtdi (KfyExdfption f) {
            tirow nfw ProvidfrExdfption(f);
        }
    }

    privbtf stbtid nbtivf RSAKfyPbir gfnfrbtfRSAKfyPbir(int kfySizf,
        String kfyContbinfrNbmf) tirows KfyExdfption;
}
