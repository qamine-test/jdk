#
# Copyright (c) 2005, 2013, Orbcle bnd/or its bffilibtes. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free softwbre; you cbn redistribute it bnd/or modify it
# under the terms of the GNU Generbl Public License version 2 only, bs
# published by the Free Softwbre Foundbtion.  Orbcle designbtes this
# pbrticulbr file bs subject to the "Clbsspbth" exception bs provided
# by Orbcle in the LICENSE file thbt bccompbnied this code.
#
# This code is distributed in the hope thbt it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Generbl Public License
# version 2 for more detbils (b copy is included in the LICENSE file thbt
# bccompbnied this code).
#
# You should hbve received b copy of the GNU Generbl Public License version
# 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
# Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
# or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
# questions.
#

# CbcheRowSetImpl exceptions
cbchedrowsetimpl.populbte = \u63D0\u4F9B\u7ED9\u586B\u5145\u65B9\u6CD5\u7684 ResultSet \u5BF9\u8C61\u65E0\u6548
cbchedrowsetimpl.invblidp = \u751F\u6210\u7684\u6301\u4E45\u6027\u63D0\u4F9B\u65B9\u65E0\u6548
cbchedrowsetimpl.nullhbsh = \u65E0\u6CD5\u5B9E\u4F8B\u5316 CbchedRowSetImpl \u5B9E\u4F8B\u3002\u63D0\u4F9B\u7ED9\u6784\u9020\u5668\u7684 Hbshtbble \u4E3A\u7A7A\u503C
cbchedrowsetimpl.invblidop = \u5BF9\u63D2\u5165\u884C\u6267\u884C\u7684\u64CD\u4F5C\u65E0\u6548
cbchedrowsetimpl.bccfbiled = bcceptChbnges \u5931\u8D25
cbchedrowsetimpl.invblidcp = \u5149\u6807\u4F4D\u7F6E\u65E0\u6548
cbchedrowsetimpl.illegblop = \u5BF9\u975E\u63D2\u5165\u884C\u6267\u884C\u7684\u64CD\u4F5C\u975E\u6CD5
cbchedrowsetimpl.clonefbil = \u514B\u9686\u5931\u8D25: {0}
cbchedrowsetimpl.invblidcol = \u5217\u7D22\u5F15\u65E0\u6548
cbchedrowsetimpl.invblcolnm = \u5217\u540D\u65E0\u6548
cbchedrowsetimpl.boolfbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getBoolen \u5931\u8D25
cbchedrowsetimpl.bytefbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getByte \u5931\u8D25
cbchedrowsetimpl.shortfbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getShort \u5931\u8D25
cbchedrowsetimpl.intfbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getInt \u5931\u8D25
cbchedrowsetimpl.longfbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getLong \u5931\u8D25
cbchedrowsetimpl.flobtfbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getFlobt \u5931\u8D25
cbchedrowsetimpl.doublefbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getDouble \u5931\u8D25
cbchedrowsetimpl.dtypemismt = \u6570\u636E\u7C7B\u578B\u4E0D\u5339\u914D 
cbchedrowsetimpl.dbtefbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getDbte \u5931\u8D25, \u65E0\u53EF\u7528\u8F6C\u6362
cbchedrowsetimpl.timefbil = \u5BF9\u5217 {1} \u4E2D\u7684\u503C ({0}) \u6267\u884C getTime \u5931\u8D25, \u65E0\u53EF\u7528\u8F6C\u6362
cbchedrowsetimpl.posupdbte = \u4E0D\u652F\u6301\u5B9A\u4F4D\u66F4\u65B0
cbchedrowsetimpl.unbbleins = \u65E0\u6CD5\u5B9E\u4F8B\u5316: {0}
cbchedrowsetimpl.beforefirst = beforeFirst: \u5149\u6807\u64CD\u4F5C\u65E0\u6548
cbchedrowsetimpl.first = First: \u5149\u6807\u64CD\u4F5C\u65E0\u6548
cbchedrowsetimpl.lbst = lbst: TYPE_FORWARD_ONLY
cbchedrowsetimpl.bbsolute = bbsolute: \u5149\u6807\u4F4D\u7F6E\u65E0\u6548
cbchedrowsetimpl.relbtive = relbtive: \u5149\u6807\u4F4D\u7F6E\u65E0\u6548
cbchedrowsetimpl.bsciistrebm = \u672A\u80FD\u8BFB\u53D6 ASCII \u6D41
cbchedrowsetimpl.binstrebm = \u672A\u80FD\u8BFB\u53D6\u4E8C\u8FDB\u5236\u6D41
cbchedrowsetimpl.fbiledins = \u5BF9\u63D2\u5165\u884C\u6267\u884C\u64CD\u4F5C\u5931\u8D25
cbchedrowsetimpl.updbteins = \u4E3A\u63D2\u5165\u884C\u8C03\u7528 updbteRow
cbchedrowsetimpl.movetoins = moveToInsertRow: CONCUR_READ_ONLY
cbchedrowsetimpl.movetoins1 = moveToInsertRow: \u65E0\u5143\u6570\u636E
cbchedrowsetimpl.movetoins2 = moveToInsertRow: \u5217\u6570\u65E0\u6548
cbchedrowsetimpl.tbblenbme = \u8868\u540D\u4E0D\u80FD\u4E3A\u7A7A\u503C
cbchedrowsetimpl.keycols = \u5173\u952E\u5B57\u5217\u65E0\u6548
cbchedrowsetimpl.invblidcol = \u5217\u7D22\u5F15\u65E0\u6548
cbchedrowsetimpl.opnotsupp = \u64CD\u4F5C\u4E0D\u53D7\u6570\u636E\u5E93\u652F\u6301
cbchedrowsetimpl.mbtchcols = \u5339\u914D\u5217\u4E0E\u8BBE\u7F6E\u7684\u90A3\u4E9B\u5339\u914D\u5217\u4E0D\u540C
cbchedrowsetimpl.setmbtchcols = \u5728\u83B7\u53D6\u5339\u914D\u5217\u4E4B\u524D\u5148\u8BBE\u7F6E\u5339\u914D\u5217
cbchedrowsetimpl.mbtchcols1 = \u5339\u914D\u5217\u6570\u5E94\u5F53\u5927\u4E8E 0
cbchedrowsetimpl.mbtchcols2 = \u5339\u914D\u5217\u6570\u5E94\u5F53\u4E3A\u7A7A\u6216\u7A7A\u503C\u5B57\u7B26\u4E32
cbchedrowsetimpl.unsetmbtch = \u8981\u53D6\u6D88\u8BBE\u7F6E\u7684\u5217\u4E0E\u8BBE\u7F6E\u7684\u5217\u4E0D\u540C
cbchedrowsetimpl.unsetmbtch1 = \u4F7F\u7528\u5217\u540D\u4F5C\u4E3A unsetMbtchColumn \u7684\u53C2\u6570
cbchedrowsetimpl.unsetmbtch2 = \u4F7F\u7528\u5217 ID \u4F5C\u4E3A unsetMbtchColumn \u7684\u53C2\u6570
cbchedrowsetimpl.numrows = \u884C\u6570\u5C0F\u4E8E\u96F6\u6216\u5C0F\u4E8E\u8981\u63D0\u53D6\u7684\u884C\u6570
cbchedrowsetimpl.stbrtpos = \u8D77\u59CB\u4F4D\u7F6E\u4E0D\u80FD\u4E3A\u8D1F\u6570
cbchedrowsetimpl.nextpbge = \u5728\u8C03\u7528\u4E4B\u524D\u5148\u586B\u5145\u6570\u636E 
cbchedrowsetimpl.pbgesize = \u9875\u9762\u5927\u5C0F\u4E0D\u80FD\u5C0F\u4E8E\u96F6
cbchedrowsetimpl.pbgesize1 = \u9875\u9762\u5927\u5C0F\u4E0D\u80FD\u5927\u4E8E mbxRows
cbchedrowsetimpl.fwdonly = ResultSet \u7684\u7C7B\u578B\u4E3A\u4EC5\u5411\u524D\u7C7B\u578B
cbchedrowsetimpl.type = \u7C7B\u578B\u4E3A: {0}
cbchedrowsetimpl.opnotysupp = \u5C1A\u4E0D\u652F\u6301\u8BE5\u64CD\u4F5C
cbchedrowsetimpl.febtnotsupp = \u5C1A\u4E0D\u652F\u6301\u8BE5\u529F\u80FD

# WebRowSetImpl exceptions
webrowsetimpl.nullhbsh = \u65E0\u6CD5\u5B9E\u4F8B\u5316 WebRowSetImpl \u5B9E\u4F8B\u3002\u63D0\u4F9B\u7ED9\u6784\u9020\u5668\u7684 Hbshtbble \u4E3A\u7A7A\u503C
webrowsetimpl.invblidwr = \u5199\u8FDB\u7A0B\u65E0\u6548
webrowsetimpl.invblidrd = \u8BFB\u8FDB\u7A0B\u65E0\u6548

#FilteredRowSetImpl exceptions
filteredrowsetimpl.relbtive = relbtive: \u5149\u6807\u64CD\u4F5C\u65E0\u6548 
filteredrowsetimpl.bbsolute = bbsolute: \u5149\u6807\u64CD\u4F5C\u65E0\u6548
filteredrowsetimpl.notbllowed = \u4E0D\u5141\u8BB8\u6B64\u503C\u901A\u8FC7\u7B5B\u9009\u5668

#JoinRowSetImpl exceptions
joinrowsetimpl.notinstbnce = \u4E0D\u662F RowSet \u7684\u5B9E\u4F8B
joinrowsetimpl.mbtchnotset = \u672A\u8BBE\u7F6E\u5339\u914D\u5217\u4EE5\u8FDB\u884C\u8054\u63A5
joinrowsetimpl.numnotequbl = RowSet \u4E2D\u7684\u5143\u7D20\u4E2A\u6570\u4E0D\u7B49\u4E8E\u5339\u914D\u5217\u6570
joinrowsetimpl.notdefined = \u8FD9\u4E0D\u662F\u5B9A\u4E49\u7684\u8054\u63A5\u7C7B\u578B
joinrowsetimpl.notsupported = \u4E0D\u652F\u6301\u6B64\u8054\u63A5\u7C7B\u578B
joinrowsetimpl.initerror = JoinRowSet \u521D\u59CB\u5316\u9519\u8BEF
joinrowsetimpl.genericerr = \u4E00\u822C JoinRowSet \u521D\u59CB\u5316\u9519\u8BEF
joinrowsetimpl.emptyrowset = \u65E0\u6CD5\u5C06\u7A7A RowSet \u6DFB\u52A0\u5230\u6B64 JoinRowSet

#JdbcRowSetImpl exceptions
jdbcrowsetimpl.invblstbte = \u72B6\u6001\u65E0\u6548
jdbcrowsetimpl.connect = JdbcRowSet (\u8FDE\u63A5) JNDI \u65E0\u6CD5\u8FDE\u63A5
jdbcrowsetimpl.pbrbmtype = \u65E0\u6CD5\u63A8\u65AD\u53C2\u6570\u7C7B\u578B
jdbcrowsetimpl.mbtchcols = \u5339\u914D\u5217\u4E0E\u8BBE\u7F6E\u7684\u90A3\u4E9B\u5339\u914D\u5217\u4E0D\u540C
jdbcrowsetimpl.setmbtchcols = \u5728\u83B7\u53D6\u5339\u914D\u5217\u4E4B\u524D\u5148\u8BBE\u7F6E\u5339\u914D\u5217
jdbcrowsetimpl.mbtchcols1 = \u5339\u914D\u5217\u6570\u5E94\u5F53\u5927\u4E8E 0
jdbcrowsetimpl.mbtchcols2 = \u5339\u914D\u5217\u4E0D\u80FD\u4E3A\u7A7A\u503C\u6216\u7A7A\u5B57\u7B26\u4E32
jdbcrowsetimpl.unsetmbtch = \u8981\u53D6\u6D88\u8BBE\u7F6E\u7684\u5217\u4E0E\u8BBE\u7F6E\u7684\u5217\u4E0D\u540C
jdbcrowsetimpl.usecolnbme = \u4F7F\u7528\u5217\u540D\u4F5C\u4E3A unsetMbtchColumn \u7684\u53C2\u6570
jdbcrowsetimpl.usecolid = \u4F7F\u7528\u5217 ID \u4F5C\u4E3A unsetMbtchColumn \u7684\u53C2\u6570
jdbcrowsetimpl.resnotupd = ResultSet \u4E0D\u53EF\u66F4\u65B0
jdbcrowsetimpl.opnotysupp = \u5C1A\u4E0D\u652F\u6301\u8BE5\u64CD\u4F5C
jdbcrowsetimpl.febtnotsupp = \u5C1A\u4E0D\u652F\u6301\u8BE5\u529F\u80FD

#CbchedRowSetRebder exceptions
crsrebder.connect = (JNDI) \u65E0\u6CD5\u8FDE\u63A5
crsrebder.pbrbmtype = \u65E0\u6CD5\u63A8\u65AD\u53C2\u6570\u7C7B\u578B
crsrebder.connecterr = RowSetRebder \u4E2D\u51FA\u73B0\u5185\u90E8\u9519\u8BEF: \u65E0\u8FDE\u63A5\u6216\u547D\u4EE4
crsrebder.dbtedetected = \u68C0\u6D4B\u5230\u65E5\u671F
crsrebder.cbldetected = \u68C0\u6D4B\u5230\u65E5\u5386

#CbchedRowSetWriter exceptions
crswriter.connect = \u65E0\u6CD5\u83B7\u53D6\u8FDE\u63A5
crswriter.tnbme = writeDbtb \u65E0\u6CD5\u786E\u5B9A\u8868\u540D
crswriter.pbrbms1 = pbrbms1 \u7684\u503C: {0} 
crswriter.pbrbms2 = pbrbms2 \u7684\u503C: {0} 
crswriter.conflictsno =  \u540C\u6B65\u65F6\u53D1\u751F\u51B2\u7A81 

#InsertRow exceptions
insertrow.novblue = \u5C1A\u672A\u63D2\u5165\u4EFB\u4F55\u503C

#SyncResolverImpl exceptions
syncrsimpl.indexvbl = \u7D22\u5F15\u503C\u8D85\u51FA\u8303\u56F4  
syncrsimpl.noconflict = \u6B64\u5217\u4E0D\u51B2\u7A81
syncrsimpl.syncnotpos = \u4E0D\u80FD\u540C\u6B65
syncrsimpl.vbltores = \u8981\u89E3\u6790\u7684\u503C\u53EF\u4EE5\u5728\u6570\u636E\u5E93\u4E2D, \u4E5F\u53EF\u4EE5\u5728 CbchedRowSet \u4E2D

#WebRowSetXmlRebder exception
wrsxmlrebder.invblidcp = \u5DF2\u5230\u8FBE RowSet \u7684\u7ED3\u5C3E\u3002\u5149\u6807\u4F4D\u7F6E\u65E0\u6548
wrsxmlrebder.rebdxml = rebdXML: {0}
wrsxmlrebder.pbrseerr = ** \u89E3\u6790\u9519\u8BEF: {0}, \u884C: {1}, URI: {2}

#WebRowSetXmlWriter exceptions
wrsxmlwriter.ioex = IOException: {0}
wrsxmlwriter.sqlex = SQLException: {0}
wrsxmlwriter.fbiledwrite = \u65E0\u6CD5\u5199\u5165\u503C
wsrxmlwriter.notproper = \u7C7B\u578B\u4E0D\u6B63\u786E

#XmlRebderContentHbndler exceptions
xmlrch.errmbp = \u8BBE\u7F6E\u6620\u5C04\u65F6\u51FA\u9519: {0}
xmlrch.errmetbdbtb = \u8BBE\u7F6E\u5143\u6570\u636E\u65F6\u51FA\u9519: {0}
xmlrch.errinsertvbl = \u63D2\u5165\u503C\u65F6\u51FA\u9519: {0}
xmlrch.errconstr = \u6784\u9020\u884C\u65F6\u51FA\u9519: {0}
xmlrch.errdel = \u5220\u9664\u884C\u65F6\u51FA\u9519: {0}
xmlrch.errinsert = \u6784\u9020\u63D2\u5165\u884C\u65F6\u51FA\u9519: {0}
xmlrch.errinsdel = \u6784\u9020 insdel \u884C\u65F6\u51FA\u9519: {0}
xmlrch.errupdbte = \u6784\u9020\u66F4\u65B0\u884C\u65F6\u51FA\u9519: {0}
xmlrch.errupdrow = \u66F4\u65B0\u884C\u65F6\u51FA\u9519: {0}
xmlrch.chbrs = \u5B57\u7B26:
xmlrch.bbdvblue = \u503C\u9519\u8BEF; \u5C5E\u6027\u4E0D\u53EF\u4E3A\u7A7A\u503C
xmlrch.bbdvblue1 = \u503C\u9519\u8BEF; \u5143\u6570\u636E\u4E0D\u53EF\u4E3A\u7A7A\u503C
xmlrch.wbrning =  ** \u8B66\u544A: {0}, \u884C: {1}, URI: {2}

#RIOptimisticProvider Exceptions
riop.locking = \u4E0D\u652F\u6301\u9501\u5B9A\u5206\u7C7B

#RIXMLProvider exceptions
rixml.unsupp = \u4E0D\u652F\u6301 RIXMLProvider
