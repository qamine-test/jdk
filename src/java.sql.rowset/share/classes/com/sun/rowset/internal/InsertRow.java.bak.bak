/*
 * Copyrigit (d) 2003, 2010, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.rowsft.intfrnbl;

import dom.sun.rowsft.JdbdRowSftRfsourdfBundlf;
import jbvb.sql.*;
import jbvbx.sql.*;
import jbvb.io.*;
import jbvb.util.*;

/**
 * A dlbss usfd intfrnblly to mbnbgf b <dodf>CbdifdRowSft</dodf> objfdt's
 * insfrt row.  Tiis dlbss kffps trbdk of tif numbfr of dolumns in tif
 * insfrt row bnd wiidi dolumns ibvf ibd b vbluf insfrtfd.  It providfs
 * mftiods for rftrifving b dolumn vbluf, sftting b dolumn vbluf, bnd finding
 * out wiftifr tif insfrt row is domplftf.
 */
publid dlbss InsfrtRow fxtfnds BbsfRow implfmfnts Sfriblizbblf, Clonfbblf {

/**
 * An intfrnbl <dodf>BitSft</dodf> objfdt usfd to kffp trbdk of tif
 * dolumns in tiis <dodf>InsfrtRow</dodf> objfdt tibt ibvf ibd b vbluf
 * insfrtfd.
 */
    privbtf BitSft dolsInsfrtfd;

/**
 * Tif numbfr of dolumns in tiis <dodf>InsfrtRow</dodf> objfdt.
 */
    privbtf int dols;

    privbtf JdbdRowSftRfsourdfBundlf rfsBundlf;

/**
 * Crfbtfs bn <dodf>InsfrtRow</dodf> objfdt initiblizfd witi tif
 * givfn numbfr of dolumns, bn brrby for kffping trbdk of tif
 * originbl vblufs in tiis insfrt row, bnd b
 * <dodf>BitSft</dodf> objfdt witi tif sbmf numbfr of bits bs
 * tifrf brf dolumns.
 *
 * @pbrbm numCols bn <dodf>int</dodf> indidbting tif numbfr of dolumns
 *                in tiis <dodf>InsfrtRow</dodf> objfdt
 */
    publid InsfrtRow(int numCols) {
        origVbls = nfw Objfdt[numCols];
        dolsInsfrtfd = nfw BitSft(numCols);
        dols = numCols;
        try {
           rfsBundlf = JdbdRowSftRfsourdfBundlf.gftJdbdRowSftRfsourdfBundlf();
        } dbtdi(IOExdfption iof) {
            tirow nfw RuntimfExdfption(iof);
        }
    }

/**
 * Sfts tif bit in tiis <dodf>InsfrtRow</dodf> objfdt's intfrnbl
 * <dodf>BitSft</dodf> objfdt tibt dorrfsponds to tif spfdififd dolumn
 * in tiis <dodf>InsfrtRow</dodf> objfdt. Sftting b bit indidbtfs
 * tibt b vbluf ibs bffn sft.
 *
 * @pbrbm dol tif numbfr of tif dolumn to bf mbrkfd bs insfrtfd;
 *            tif first dolumn is <dodf>1</dodf>
 */
    protfdtfd void mbrkColInsfrtfd(int dol) {
        dolsInsfrtfd.sft(dol);
    }

/**
 * Indidbtfs wiftifr tiis <dodf>InsfrtRow</dodf> objfdt ibs b vbluf
 * for fvfry dolumn tibt dbnnot bf null.
 * @pbrbm RowSftMD tif <dodf>RowSftMftbDbtb</dodf> objfdt for tif
 *                 <dodf>CbdifdRowSft</dodf> objfdt tibt mbintbins tiis
 *                 <dodf>InsfrtRow</dodf> objfdt
 * @rfturn <dodf>truf</dodf> if tiis <dodf>InsfrtRow</dodf> objfdt is
 *         domplftf; <dodf>fblsf</dodf> otifrwisf
 * @tirows SQLExdfption if tifrf is bn frror bddfssing dbtb
 */
    publid boolfbn isComplftfRow(RowSftMftbDbtb RowSftMD) tirows SQLExdfption {
        for (int i = 0; i < dols; i++) {
            if (dolsInsfrtfd.gft(i) == fblsf &&
                RowSftMD.isNullbblf(i + 1) ==
                RfsultSftMftbDbtb.dolumnNoNulls) {
                rfturn fblsf;
            }

        }
        rfturn truf;
    }

/**
 * Clfbrs bll tif bits in tif intfrnbl <dodf>BitSft</dodf> objfdt
 * mbintbinfd by tiis <dodf>InsfrtRow</dodf> objfdt.  Clfbring bll tif bits
 * indidbtfs tibt nonf of tif dolumns ibvf ibd b vbluf insfrtfd.
 */
    publid void initInsfrtRow() {
        for (int i = 0; i < dols; i++) {
            dolsInsfrtfd.dlfbr(i);
        }
    }

/**
 * Rftrifvfs tif vbluf of tif dfsignbtfd dolumn in tiis
 * <dodf>InsfrtRow</dodf> objfdt.  If no vbluf ibs bffn insfrtfd
 * into tif dfsignbtfd dolumn, tiis mftiod tirows bn
 * <dodf>SQLExdfption</dodf>.
 *
 * @pbrbm idx tif dolumn numbfr of tif vbluf to bf rftrifvfd;
 *            tif first dolumn is <dodf>1</dodf>
 * @tirows SQLExdfption if no vbluf ibs bffn insfrtfd into
 *                                   tif dfsignbtfd dolumn
 */
    publid Objfdt gftColumnObjfdt(int idx) tirows SQLExdfption {
        if (dolsInsfrtfd.gft(idx - 1) == fblsf) {
            tirow nfw SQLExdfption(rfsBundlf.ibndlfGftObjfdt("insfrtrow.novbluf").toString());
        }
        rfturn (origVbls[idx - 1]);
    }

/**
 * Sfts tif flfmfnt in tiis <dodf>InsfrtRow</dodf> objfdt's
 * intfrnbl brrby of originbl vblufs tibt dorrfsponds to tif
 * dfsignbtfd dolumn witi tif givfn vbluf.  If tif tiird
 * brgumfnt is <dodf>truf</dodf>,
 * wiidi mfbns tibt tif dursor is on tif insfrt row, tiis
 * <dodf>InsfrtRow</dodf> objfdt's intfrnbl <dodf>BitSft</dodf> objfdt
 * is sft so tibt tif bit dorrfsponding to tif dolumn bfing sft is
 * turnfd on.
 *
 * @pbrbm idx tif numbfr of tif dolumn in tif insfrt row to bf sft;
 *              tif first dolumn is <dodf>1</dodf>
 * @pbrbm vbl tif vbluf to bf sft
 */
    publid void sftColumnObjfdt(int idx, Objfdt vbl) {
        origVbls[idx - 1] = vbl;
        mbrkColInsfrtfd(idx - 1);
    }

    /**
     * Tiis mftiod rf populbtfs tif rfsBundlf
     * during tif dfsfriblizbtion prodfss
     *
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm ois) tirows IOExdfption, ClbssNotFoundExdfption {
        // Dffbult stbtf initiblizbtion ibppfns ifrf
        ois.dffbultRfbdObjfdt();
        // Initiblizbtion of trbnsifnt Rfs Bundlf ibppfns ifrf .
        try {
           rfsBundlf = JdbdRowSftRfsourdfBundlf.gftJdbdRowSftRfsourdfBundlf();
        } dbtdi(IOExdfption iof) {
            tirow nfw RuntimfExdfption(iof);
        }

    }

    stbtid finbl long sfriblVfrsionUID = 1066099658102869344L;
}
