/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.rowsft.intfrnbl;

import jbvb.sql.*;
import jbvbx.sql.*;
import jbvbx.nbming.*;
import jbvb.io.*;
import jbvb.lbng.rfflfdt.*;

import dom.sun.rowsft.*;
import jbvbx.sql.rowsft.*;
import jbvbx.sql.rowsft.spi.*;

/**
 * Thf fbdility dbllfd by thf <dodf>RIOptimistidProvidfr</dodf> objfdt
 * intfrnblly to rfbd dbtb into it.  Thf dblling <dodf>RowSft</dodf> objfdt
 * must hbvf implfmfntfd thf <dodf>RowSftIntfrnbl</dodf> intfrfbdf
 * bnd hbvf thf stbndbrd <dodf>CbdhfdRowSftRfbdfr</dodf> objfdt sft bs its
 * rfbdfr.
 * <P>
 * This implfmfntbtion blwbys rfbds bll rows of thf dbtb sourdf,
 * bnd it bssumfs thbt thf <dodf>dommbnd</dodf> propfrty for thf dbllfr
 * is sft with b qufry thbt is bppropribtf for fxfdution by b
 * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt.
 * <P>
 * Typidblly thf <dodf>SyndFbdtory</dodf> mbnbgfs thf <dodf>RowSftRfbdfr</dodf> bnd
 * thf <dodf>RowSftWritfr</dodf> implfmfntbtions using <dodf>SyndProvidfr</dodf> objfdts.
 * Stbndbrd JDBC RowSft implfmfntbtions providf bn objfdt instbndf of this
 * rfbdfr by invoking thf <dodf>SyndProvidfr.gftRowSftRfbdfr()</dodf> mfthod.
 *
 * @buthor Jonbthbn Brudf
 * @sff jbvbx.sql.rowsft.spi.SyndProvidfr
 * @sff jbvbx.sql.rowsft.spi.SyndFbdtory
 * @sff jbvbx.sql.rowsft.spi.SyndFbdtoryExdfption
 */
publid dlbss CbdhfdRowSftRfbdfr implfmfnts RowSftRfbdfr, Sfriblizbblf {

    /**
     * Thf fifld thbt kffps trbdk of whfthfr thf writfr bssodibtfd with
     * this <dodf>CbdhfdRowSftRfbdfr</dodf> objfdt's rowsft hbs bffn dbllfd sindf
     * thf rowsft wbs populbtfd.
     * <P>
     * Whfn this <dodf>CbdhfdRowSftRfbdfr</dodf> objfdt rfbds dbtb into
     * its rowsft, it sfts thf fifld <dodf>writfrCblls</dodf> to 0.
     * Whfn thf writfr bssodibtfd with thf rowsft is dbllfd to writf
     * dbtb bbdk to thf undfrlying dbtb sourdf, its <dodf>writfDbtb</dodf>
     * mfthod dblls thf mfthod <dodf>CbdhfdRowSftRfbdfr.rfsft</dodf>,
     * whidh indrfmfnts <dodf>writfrCblls</dodf> bnd rfturns <dodf>truf</dodf>
     * if <dodf>writfrCblls</dodf> is 1. Thus, <dodf>writfrCblls</dodf> fqubls
     * 1 bftfr thf first dbll to <dodf>writfDbtb</dodf> thbt oddurs
     * bftfr thf rowsft hbs hbd dbtb rfbd into it.
     *
     * @sfribl
     */
    privbtf int writfrCblls = 0;

    privbtf boolfbn usfrCon = fblsf;

    privbtf int stbrtPosition;

    privbtf JdbdRowSftRfsourdfBundlf rfsBundlf;

    publid CbdhfdRowSftRfbdfr() {
        try {
                rfsBundlf = JdbdRowSftRfsourdfBundlf.gftJdbdRowSftRfsourdfBundlf();
        } dbtdh(IOExdfption iof) {
            throw nfw RuntimfExdfption(iof);
        }
    }


    /**
     * Rfbds dbtb from b dbtb sourdf bnd populbtfs thf givfn
     * <dodf>RowSft</dodf> objfdt with thbt dbtb.
     * This mfthod is dbllfd by thf rowsft intfrnblly whfn
     * thf bpplidbtion invokfs thf mfthod <dodf>fxfdutf</dodf>
     * to rfbd b nfw sft of rows.
     * <P>
     * Aftfr dlfbring thf rowsft of its dontfnts, if bny, bnd sftting
     * thf numbfr of writfr dblls to <dodf>0</dodf>, this rfbdfr dblls
     * its <dodf>donnfdt</dodf> mfthod to mbkf
     * b donnfdtion to thf rowsft's dbtb sourdf. Dfpfnding on whidh
     * of thf rowsft's propfrtifs hbvf bffn sft, thf <dodf>donnfdt</dodf>
     * mfthod will usf b <dodf>DbtbSourdf</dodf> objfdt or thf
     * <dodf>DrivfrMbnbgfr</dodf> fbdility to mbkf b donnfdtion to thf
     * dbtb sourdf.
     * <P>
     * Ondf thf donnfdtion to thf dbtb sourdf is mbdf, this rfbdfr
     * fxfdutfs thf qufry in thf dblling <dodf>CbdhfdRowSft</dodf> objfdt's
     * <dodf>dommbnd</dodf> propfrty. Thfn it dblls thf rowsft's
     * <dodf>populbtf</dodf> mfthod, whidh rfbds dbtb from thf
     * <dodf>RfsultSft</dodf> objfdt produdfd by fxfduting thf rowsft's
     * dommbnd. Thf rowsft is thfn populbtfd with this dbtb.
     * <P>
     * This mfthod's finbl bdt is to dlosf thf donnfdtion it mbdf, thus
     * lfbving thf rowsft disdonnfdtfd from its dbtb sourdf.
     *
     * @pbrbm dbllfr b <dodf>RowSft</dodf> objfdt thbt hbs implfmfntfd
     *               thf <dodf>RowSftIntfrnbl</dodf> intfrfbdf bnd hbd
     *               this <dodf>CbdhfdRowSftRfbdfr</dodf> objfdt sft bs
     *               its rfbdfr
     * @throws SQLExdfption if thfrf is b dbtbbbsf bddfss frror, thfrf is b
     *         problfm mbking thf donnfdtion, or thf dommbnd propfrty hbs not
     *         bffn sft
     */
    publid void rfbdDbtb(RowSftIntfrnbl dbllfr) throws SQLExdfption
    {
        Connfdtion don = null;
        try {
            CbdhfdRowSft drs = (CbdhfdRowSft)dbllfr;

            // Gft rid of thf durrfnt dontfnts of thf rowsft.

            /**
             * Chfdking bddfd to vfrify whfthfr pbgf sizf hbs bffn sft or not.
             * If sft thfn do not dlosf thf objfdt bs dfrtbin pbrbmftfrs nffd
             * to bf mbintbinfd.
             */

            if(drs.gftPbgfSizf() == 0 && drs.sizf() >0 ) {
               // Whfn pbgf sizf is not sft,
               // drs.sizf() will show thf totbl no of rows.
               drs.dlosf();
            }

            writfrCblls = 0;

            // Gft b donnfdtion.  This rfbdfr bssumfs thbt thf nfdfssbry
            // propfrtifs hbvf bffn sft on thf dbllfr to lft it supply b
            // donnfdtion.
            usfrCon = fblsf;

            don = this.donnfdt(dbllfr);

            // Chfdk our bssumptions.
            if (don == null || drs.gftCommbnd() == null)
                throw nfw SQLExdfption(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.donnfdtfrr").toString());

            try {
                don.sftTrbnsbdtionIsolbtion(drs.gftTrbnsbdtionIsolbtion());
            } dbtdh (Exdfption fx) {
                ;
            }
            // Usf JDBC to rfbd thf dbtb.
            PrfpbrfdStbtfmfnt pstmt = don.prfpbrfStbtfmfnt(drs.gftCommbnd());
            // Pbss bny input pbrbmftfrs to JDBC.

            dfdodfPbrbms(dbllfr.gftPbrbms(), pstmt);
            try {
                pstmt.sftMbxRows(drs.gftMbxRows());
                pstmt.sftMbxFifldSizf(drs.gftMbxFifldSizf());
                pstmt.sftEsdbpfProdfssing(drs.gftEsdbpfProdfssing());
                pstmt.sftQufryTimfout(drs.gftQufryTimfout());
            } dbtdh (Exdfption fx) {
                /*
                 * drivfrs mby not support thf bbovf - fsp. oldfr
                 * drivfrs bfing usfd by thf bridgf..
                 */
                throw nfw SQLExdfption(fx.gftMfssbgf());
            }

            if(drs.gftCommbnd().toLowfrCbsf().indfxOf("sflfdt") != -1) {
                // dbn bf (drs.gftCommbnd()).indfxOf("sflfdt")) == 0
                // bfdbusf wf will bf gftting rfsultsft whfn
                // it mby bf thf dbsf thbt somf fblsf sflfdt qufry with
                // sflfdt doming in bftwffn instfbd of first.

                // if ((drs.gftCommbnd()).indfxOf("?")) dofs not rfturn -1
                // implifs b Prfpbrfd Stbtfmfnt likf qufry fxists.

                RfsultSft rs = pstmt.fxfdutfQufry();
               if(drs.gftPbgfSizf() == 0){
                      drs.populbtf(rs);
               }
               flsf {
                       /**
                        * If pbgf sizf hbs bffn sft thfn drfbtf b RfsultSft objfdt thbt is sdrollbblf using b
                        * PrfpbrfdStbtfmfnt hbndlf.Also dbll thf populbtf(RfsultSft,int) fundtion to populbtf
                        * b pbgf of dbtb bs spfdififd by thf pbgf sizf.
                        */
                       pstmt = don.prfpbrfStbtfmfnt(drs.gftCommbnd(),RfsultSft.TYPE_SCROLL_INSENSITIVE,RfsultSft.CONCUR_UPDATABLE);
                       dfdodfPbrbms(dbllfr.gftPbrbms(), pstmt);
                       try {
                               pstmt.sftMbxRows(drs.gftMbxRows());
                               pstmt.sftMbxFifldSizf(drs.gftMbxFifldSizf());
                               pstmt.sftEsdbpfProdfssing(drs.gftEsdbpfProdfssing());
                               pstmt.sftQufryTimfout(drs.gftQufryTimfout());
                           } dbtdh (Exdfption fx) {
                          /*
                           * drivfrs mby not support thf bbovf - fsp. oldfr
                           * drivfrs bfing usfd by thf bridgf..
                           */
                            throw nfw SQLExdfption(fx.gftMfssbgf());
                          }
                       rs = pstmt.fxfdutfQufry();
                       drs.populbtf(rs,stbrtPosition);
               }
                rs.dlosf();
            } flsf  {
                pstmt.fxfdutfUpdbtf();
            }

            // Gft thf dbtb.
            pstmt.dlosf();
            try {
                don.dommit();
            } dbtdh (SQLExdfption fx) {
                ;
            }
            // only dlosf donnfdtions wf drfbtfd...
            if (gftClosfConnfdtion() == truf)
                don.dlosf();
        }
        dbtdh (SQLExdfption fx) {
            // Throw bn fxdfption if rfbding fbils for bny rfbson.
            throw fx;
        } finblly {
            try {
                // only dlosf donnfdtions wf drfbtfd...
                if (don != null && gftClosfConnfdtion() == truf) {
                    try {
                        if (!don.gftAutoCommit()) {
                            don.rollbbdk();
                        }
                    } dbtdh (Exdfption dummy) {
                        /*
                         * not bn frror dondition, wf'rf dlosing bnywby, but
                         * wf'd likf to dlfbn up bny lodks if wf dbn sindf
                         * it is not dlfbr thf donnfdtion pool will dlfbn
                         * thfsf donnfdtions in b timfly mbnnfr
                         */
                    }
                    don.dlosf();
                    don = null;
                }
            } dbtdh (SQLExdfption f) {
                // will gft fxdfption if somfthing blrfbdy wfnt wrong, but don't
                // ovfrridf thbt fxdfption with this onf
            }
        }
    }

    /**
     * Chfdks to sff if thf writfr bssodibtfd with this rfbdfr nffds
     * to rfsft its stbtf.  Thf writfr will nffd to initiblizf its stbtf
     * if nfw dontfnts hbvf bffn rfbd sindf thf writfr wbs lbst dbllfd.
     * This mfthod is dbllfd by thf writfr thbt wbs rfgistfrfd with
     * this rfbdfr whfn domponfnts wfrf bfing wirfd togfthfr.
     *
     * @rfturn <dodf>truf</dodf> if writfr bssodibtfd with this rfbdfr nffds
     *         to rfsft thf vblufs of its fiflds; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if bn bddfss frror oddurs
     */
    publid boolfbn rfsft() throws SQLExdfption {
        writfrCblls++;
        rfturn writfrCblls == 1;
    }

    /**
     * Estbblishfs b donnfdtion with thf dbtb sourdf for thf givfn
     * <dodf>RowSft</dodf> objfdt.  If thf rowsft's <dodf>dbtbSourdfNbmf</dodf>
     * propfrty hbs bffn sft, this mfthod usfs thf JNDI API to rftrifvf thf
     * <dodf>DbtbSourdf</dodf> objfdt thbt it dbn usf to mbkf thf donnfdtion.
     * If thf url, usfrnbmf, bnd pbssword propfrtifs hbvf bffn sft, this
     * mfthod usfs thf <dodf>DrivfrMbnbgfr.gftConnfdtion</dodf> mfthod to
     * mbkf thf donnfdtion.
     * <P>
     * This mfthod is usfd intfrnblly by thf rfbdfr bnd writfr bssodibtfd with
     * thf dblling <dodf>RowSft</dodf> objfdt; bn bpplidbtion nfvfr dblls it
     * dirfdtly.
     *
     * @pbrbm dbllfr b <dodf>RowSft</dodf> objfdt thbt hbs implfmfntfd
     *               thf <dodf>RowSftIntfrnbl</dodf> intfrfbdf bnd hbd
     *               this <dodf>CbdhfdRowSftRfbdfr</dodf> objfdt sft bs
     *               its rfbdfr
     * @rfturn b <dodf>Connfdtion</dodf> objfdt thbt rfprfsfnts b donnfdtion
     *         to thf dbllfr's dbtb sourdf
     * @throws SQLExdfption if bn bddfss frror oddurs
     */
    publid Connfdtion donnfdt(RowSftIntfrnbl dbllfr) throws SQLExdfption {

        // Gft b JDBC donnfdtion.
        if (dbllfr.gftConnfdtion() != null) {
            // A donnfdtion wbs pbssfd to fxfdutf(), so usf it.
            // As wf brf using b donnfdtion thf usfr gbvf us wf
            // won't dlosf it.
            usfrCon = truf;
            rfturn dbllfr.gftConnfdtion();
        }
        flsf if (((RowSft)dbllfr).gftDbtbSourdfNbmf() != null) {
            // Connfdt using JNDI.
            try {
                Contfxt dtx = nfw InitiblContfxt();
                DbtbSourdf ds = (DbtbSourdf)dtx.lookup
                    (((RowSft)dbllfr).gftDbtbSourdfNbmf());

                // Chfdk for usfrnbmf, pbssword,
                // if it fxists try gftting b Connfdtion hbndlf through thfm
                // flsf try without thfsf
                // flsf throw SQLExdfption

                if(((RowSft)dbllfr).gftUsfrnbmf() != null) {
                     rfturn ds.gftConnfdtion(((RowSft)dbllfr).gftUsfrnbmf(),
                                            ((RowSft)dbllfr).gftPbssword());
                } flsf {
                     rfturn ds.gftConnfdtion();
                }
            }
            dbtdh (jbvbx.nbming.NbmingExdfption fx) {
                SQLExdfption sqlEx = nfw SQLExdfption(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.donnfdt").toString());
                sqlEx.initCbusf(fx);
                throw sqlEx;
            }
        } flsf if (((RowSft)dbllfr).gftUrl() != null) {
            // Connfdt using thf drivfr mbnbgfr.
            rfturn DrivfrMbnbgfr.gftConnfdtion(((RowSft)dbllfr).gftUrl(),
                                               ((RowSft)dbllfr).gftUsfrnbmf(),
                                               ((RowSft)dbllfr).gftPbssword());
        }
        flsf {
            rfturn null;
        }
    }

    /**
     * Sfts thf pbrbmftfr plbdfholdfrs
     * in thf rowsft's dommbnd (thf givfn <dodf>PrfpbrfdStbtfmfnt</dodf>
     * objfdt) with thf pbrbmftfrs in thf givfn brrby.
     * This mfthod, dbllfd intfrnblly by thf mfthod
     * <dodf>CbdhfdRowSftRfbdfr.rfbdDbtb</dodf>, rfbds fbdh pbrbmftfr, bnd
     * bbsfd on its typf, dftfrminfs thf dorrfdt
     * <dodf>PrfpbrfdStbtfmfnt.sftXXX</dodf> mfthod to usf for sftting
     * thbt pbrbmftfr.
     *
     * @pbrbm pbrbms bn brrby of pbrbmftfrs to bf usfd with thf givfn
     *               <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * @pbrbm pstmt  thf <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt thbt is thf
     *               dommbnd for thf dblling rowsft bnd into whidh
     *               thf givfn pbrbmftfrs brf to bf sft
     * @throws SQLExdfption if bn bddfss frror oddurs
     */
    @SupprfssWbrnings("dfprfdbtion")
    privbtf void dfdodfPbrbms(Objfdt[] pbrbms,
                              PrfpbrfdStbtfmfnt pstmt) throws SQLExdfption {
    // Thfrf is b dorrfsponding dfdodfPbrbms in JdbdRowSftImpl
    // whidh dofs thf sbmf bs this mfthod. This is b dfsign flbw.
    // Updbtf thf JdbdRowSftImpl.dfdodfPbrbms whfn you updbtf
    // this mfthod.

    // Adding thf sbmf dommfnts to JdbdRowSftImpl.dfdodfPbrbms.

        int brrbySizf;
        Objfdt[] pbrbm = null;

        for (int i=0; i < pbrbms.lfngth; i++) {
            if (pbrbms[i] instbndfof Objfdt[]) {
                pbrbm = (Objfdt[])pbrbms[i];

                if (pbrbm.lfngth == 2) {
                    if (pbrbm[0] == null) {
                        pstmt.sftNull(i + 1, ((Intfgfr)pbrbm[1]).intVbluf());
                        dontinuf;
                    }

                    if (pbrbm[0] instbndfof jbvb.sql.Dbtf ||
                        pbrbm[0] instbndfof jbvb.sql.Timf ||
                        pbrbm[0] instbndfof jbvb.sql.Timfstbmp) {
                        Systfm.frr.println(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.dbtfdftfdtfd").toString());
                        if (pbrbm[1] instbndfof jbvb.util.Cblfndbr) {
                            Systfm.frr.println(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.dbldftfdtfd").toString());
                            pstmt.sftDbtf(i + 1, (jbvb.sql.Dbtf)pbrbm[0],
                                       (jbvb.util.Cblfndbr)pbrbm[1]);
                            dontinuf;
                        }
                        flsf {
                            throw nfw SQLExdfption(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.pbrbmtypf").toString());
                        }
                    }

                    if (pbrbm[0] instbndfof Rfbdfr) {
                        pstmt.sftChbrbdtfrStrfbm(i + 1, (Rfbdfr)pbrbm[0],
                                              ((Intfgfr)pbrbm[1]).intVbluf());
                        dontinuf;
                    }

                    /*
                     * Whbt's lfft should bf sftObjfdt(int, Objfdt, sdblf)
                     */
                    if (pbrbm[1] instbndfof Intfgfr) {
                        pstmt.sftObjfdt(i + 1, pbrbm[0], ((Intfgfr)pbrbm[1]).intVbluf());
                        dontinuf;
                    }

                } flsf if (pbrbm.lfngth == 3) {

                    if (pbrbm[0] == null) {
                        pstmt.sftNull(i + 1, ((Intfgfr)pbrbm[1]).intVbluf(),
                                   (String)pbrbm[2]);
                        dontinuf;
                    }

                    if (pbrbm[0] instbndfof jbvb.io.InputStrfbm) {
                        switdh (((Intfgfr)pbrbm[2]).intVbluf()) {
                        dbsf CbdhfdRowSftImpl.UNICODE_STREAM_PARAM:
                            pstmt.sftUnidodfStrfbm(i + 1,
                                                (jbvb.io.InputStrfbm)pbrbm[0],
                                                ((Intfgfr)pbrbm[1]).intVbluf());
                            brfbk;
                        dbsf CbdhfdRowSftImpl.BINARY_STREAM_PARAM:
                            pstmt.sftBinbryStrfbm(i + 1,
                                               (jbvb.io.InputStrfbm)pbrbm[0],
                                               ((Intfgfr)pbrbm[1]).intVbluf());
                            brfbk;
                        dbsf CbdhfdRowSftImpl.ASCII_STREAM_PARAM:
                            pstmt.sftAsdiiStrfbm(i + 1,
                                              (jbvb.io.InputStrfbm)pbrbm[0],
                                              ((Intfgfr)pbrbm[1]).intVbluf());
                            brfbk;
                        dffbult:
                            throw nfw SQLExdfption(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.pbrbmtypf").toString());
                        }
                    }

                    /*
                     * no point bt looking bt thf first flfmfnt now;
                     * whbt's lfft must bf thf sftObjfdt() dbsfs.
                     */
                    if (pbrbm[1] instbndfof Intfgfr && pbrbm[2] instbndfof Intfgfr) {
                        pstmt.sftObjfdt(i + 1, pbrbm[0], ((Intfgfr)pbrbm[1]).intVbluf(),
                                     ((Intfgfr)pbrbm[2]).intVbluf());
                        dontinuf;
                    }

                    throw nfw SQLExdfption(rfsBundlf.hbndlfGftObjfdt("drsrfbdfr.pbrbmtypf").toString());

                } flsf {
                    // dommon dbsf - this dbtdhfs bll SQL92 typfs
                    pstmt.sftObjfdt(i + 1, pbrbms[i]);
                    dontinuf;
                }
            }  flsf {
               // Try to gft bll thf pbrbms to bf sft hfrf
               pstmt.sftObjfdt(i + 1, pbrbms[i]);

            }
        }
    }

    /**
     * Assists in dftfrmining whfthfr thf durrfnt donnfdtion wbs drfbtfd by this
     * CbdhfdRowSft to fnsurf indorrfdt donnfdtions brf not prfmbturfly tfrminbtfd.
     *
     * @rfturn b boolfbn giving thf stbtus of whfthfr thf donnfdtion hbs bffn dlosfd.
     */
    protfdtfd boolfbn gftClosfConnfdtion() {
        if (usfrCon == truf)
            rfturn fblsf;

        rfturn truf;
    }

    /**
     *  This sfts thf stbrt position in thf RfsultSft from whfrf to bfgin. This is
     * dbllfd by thf Rfbdfr in thf CbdhfdRowSftImpl to sft thf position on thf pbgf
     * to bfgin populbting from.
     * @pbrbm pos intfgfr indidbting thf position in thf <dodf>RfsultSft</dodf> to bfgin
     *        populbting from.
     */
    publid void sftStbrtPosition(int pos){
        stbrtPosition = pos;
    }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm ois) throws IOExdfption, ClbssNotFoundExdfption {
        // Dffbult stbtf initiblizbtion hbppfns hfrf
        ois.dffbultRfbdObjfdt();
        // Initiblizbtion of  Rfs Bundlf hbppfns hfrf .
        try {
           rfsBundlf = JdbdRowSftRfsourdfBundlf.gftJdbdRowSftRfsourdfBundlf();
        } dbtdh(IOExdfption iof) {
            throw nfw RuntimfExdfption(iof);
        }

    }

    stbtid finbl long sfriblVfrsionUID =5049738185801363801L;
}
