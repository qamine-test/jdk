/*
 * Copyrigit (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sql.rowsft;

import jbvb.sql.*;
import jbvbx.sql.*;
import jbvb.util.*;
import jbvb.io.*;
import jbvb.mbti.*;
import jbvb.io.Sfriblizbblf;

import jbvbx.sql.rowsft.sfribl.*;

/**
 * An bbstrbdt dlbss providing b <dodf>RowSft</dodf> objfdt witi its bbsid fundtionblity.
 * Tif bbsid fundtions indludf ibving propfrtifs bnd sfnding fvfnt notifidbtions,
 * wiidi bll JbvbBfbns&trbdf; domponfnts must implfmfnt.
 *
 * <i3>1.0 Ovfrvifw</i3>
 * Tif <dodf>BbsfRowSft</dodf> dlbss providfs tif dorf fundtionblity
 * for bll <dodf>RowSft</dodf> implfmfntbtions,
 * bnd bll stbndbrd implfmfntbtions <b>mby</b> usf tiis dlbss in dombinbtion witi
 * onf or morf <dodf>RowSft</dodf> intfrfbdfs in ordfr to providf b stbndbrd
 * vfndor-spfdifid implfmfntbtion.  To dlbrify, bll implfmfntbtions must implfmfnt
 * bt lfbst onf of tif <dodf>RowSft</dodf> intfrfbdfs (<dodf>JdbdRowSft</dodf>,
 * <dodf>CbdifdRowSft</dodf>, <dodf>JoinRowSft</dodf>, <dodf>FiltfrfdRowSft</dodf>,
 * or <dodf>WfbRowSft</dodf>). Tiis mfbns tibt bny implfmfntbtion tibt fxtfnds
 * tif <dodf>BbsfRowSft</dodf> dlbss must blso implfmfnt onf of tif <dodf>RowSft</dodf>
 * intfrfbdfs.
 * <p>
 * Tif <dodf>BbsfRowSft</dodf> dlbss providfs tif following:
 *
 * <UL>
 * <LI><b>Propfrtifs</b>
 *     <ul>
 *     <li>Fiflds for storing durrfnt propfrtifs
 *     <li>Mftiods for gftting bnd sftting propfrtifs
 *     </ul>
 *
 * <LI><b>Evfnt notifidbtion</b>
 *
 * <LI><b>A domplftf sft of sfttfr mftiods</b> for sftting tif pbrbmftfrs in b
 *      <dodf>RowSft</dodf> objfdt's dommbnd
 *
 * <LI> <b>Strfbms</b>
 *  <ul>
 *  <li>Fiflds for storing strfbm instbndfs
 *  <li>Constbnts for indidbting tif typf of b strfbm
 *  </ul>
 * </UL>
 *
 * <i3>2.0 Sftting Propfrtifs</i3>
 * All rowsfts mbintbin b sft of propfrtifs, wiidi will usublly bf sft using
 * b tool.  Tif numbfr bnd kinds of propfrtifs b rowsft ibs will vbry,
 * dfpfnding on wibt tif <dodf>RowSft</dodf> implfmfntbtion dofs bnd iow it gfts
 * its dbtb.  For fxbmplf,
 * rowsfts tibt gft tifir dbtb from b <dodf>RfsultSft</dodf> objfdt nffd to
 * sft tif propfrtifs tibt brf rfquirfd for mbking b dbtbbbsf donnfdtion.
 * If b <dodf>RowSft</dodf> objfdt usfs tif <dodf>DrivfrMbnbgfr</dodf> fbdility to mbkf b
 * donnfdtion, it nffds to sft b propfrty for tif JDBC URL tibt idfntififs tif
 * bppropribtf drivfr, bnd it nffds to sft tif propfrtifs tibt givf tif
 * usfr nbmf bnd pbssword.
 * If, on tif otifr ibnd, tif rowsft usfs b <dodf>DbtbSourdf</dodf> objfdt
 * to mbkf tif donnfdtion, wiidi is tif prfffrrfd mftiod, it dofs not nffd to
 * sft tif propfrty for tif JDBC URL.  Instfbd, it nffds to sft tif propfrty
 * for tif logidbl nbmf of tif dbtb sourdf blong witi tif propfrtifs for
 * tif usfr nbmf bnd pbssword.
 * <P>
 * NOTE:  In ordfr to usf b <dodf>DbtbSourdf</dodf> objfdt for mbking b
 * donnfdtion, tif <dodf>DbtbSourdf</dodf> objfdt must ibvf bffn rfgistfrfd
 * witi b nbming sfrvidf tibt usfs tif Jbvb Nbming bnd Dirfdtory
 * Intfrfbdf&trbdf; (JNDI) API.  Tiis rfgistrbtion
 * is usublly donf by b pfrson bdting in tif dbpbdity of b systfm bdministrbtor.
 *
 * <i3>3.0 Sftting tif Commbnd bnd Its Pbrbmftfrs</i3>
 * Wifn b rowsft gfts its dbtb from b rflbtionbl dbtbbbsf, it fxfdutfs b dommbnd (b qufry)
 * tibt produdfs b <dodf>RfsultSft</dodf> objfdt.  Tiis qufry is tif dommbnd tibt is sft
 * for tif <dodf>RowSft</dodf> objfdt's dommbnd propfrty.  Tif rowsft populbtfs itsflf witi dbtb by rfbding tif
 * dbtb from tif <dodf>RfsultSft</dodf> objfdt into itsflf. If tif qufry
 * dontbins plbdfioldfrs for vblufs to bf sft, tif <dodf>BbsfRowSft</dodf> sfttfr mftiods
 * brf usfd to sft tifsf vblufs. All sfttfr mftiods bllow tifsf vblufs to bf sft
 * to <dodf>null</dodf> if rfquirfd.
 * <P>
 * Tif following dodf frbgmfnt illustrbtfs iow tif
 * <dodf>CbdifdRowSft</dodf>&trbdf;
 * objfdt <dodf>drs</dodf> migit ibvf its dommbnd propfrty sft.  Notf tibt if b
 * tool is usfd to sft propfrtifs, tiis is tif dodf tibt tif tool would usf.
 * <PRE>{@dodf
 *    drs.sftCommbnd("SELECT FIRST_NAME, LAST_NAME, ADDRESS FROM CUSTOMERS" +
 *                   "WHERE CREDIT_LIMIT > ? AND REGION = ?");
 * }</PRE>
 * <P>
 * In tiis fxbmplf, tif vblufs for <dodf>CREDIT_LIMIT</dodf> bnd
 * <dodf>REGION</dodf> brf plbdfioldfr pbrbmftfrs, wiidi brf indidbtfd witi b
 * qufstion mbrk (?).  Tif first qufstion mbrk is plbdfioldfr pbrbmftfr numbfr
 * <dodf>1</dodf>, tif sfdond qufstion mbrk is plbdfioldfr pbrbmftfr numbfr
 * <dodf>2</dodf>, bnd so on.  Any plbdfioldfr pbrbmftfrs must bf sft witi
 * vblufs bfforf tif qufry dbn bf fxfdutfd. To sft tifsf
 * plbdfioldfr pbrbmftfrs, tif <dodf>BbsfRowSft</dodf> dlbss providfs b sft of sfttfr
 * mftiods, similbr to tiosf providfd by tif <dodf>PrfpbrfdStbtfmfnt</dodf>
 * intfrfbdf, for sftting vblufs of fbdi dbtb typf.  A <dodf>RowSft</dodf> objfdt storfs tif
 * pbrbmftfr vblufs intfrnblly, bnd its <dodf>fxfdutf</dodf> mftiod usfs tifm intfrnblly
 * to sft vblufs for tif plbdfioldfr pbrbmftfrs
 * bfforf it sfnds tif dommbnd to tif DBMS to bf fxfdutfd.
 * <P>
 * Tif following dodf frbgmfnt dfmonstrbtfs
 * sftting tif two pbrbmftfrs in tif qufry from tif prfvious fxbmplf.
 * <PRE>{@dodf
 *    drs.sftInt(1, 5000);
 *    drs.sftString(2, "Wfst");
 * }</PRE>
 * If tif <dodf>fxfdutf</dodf> mftiod is dbllfd bt tiis point, tif qufry
 * sfnt to tif DBMS will bf:
 * <PRE>{@dodf
 *    "SELECT FIRST_NAME, LAST_NAME, ADDRESS FROM CUSTOMERS" +
 *                   "WHERE CREDIT_LIMIT > 5000 AND REGION = 'Wfst'"
 * }</PRE>
 * NOTE: Sftting <dodf>Arrby</dodf>, <dodf>Clob</dodf>, <dodf>Blob</dodf> bnd
 * <dodf>Rff</dodf> objfdts bs b dommbnd pbrbmftfr, storfs tifsf vblufs bs
 * <dodf>SfriblArrby</dodf>, <dodf>SfriblClob</dodf>, <dodf>SfriblBlob</dodf>
 * bnd <dodf>SfriblRff</dodf> objfdts rfspfdtivfly.
 *
 * <i3>4.0 Hbndling of Pbrbmftfrs Bfiind tif Sdfnfs</i3>
 *
 * NOTE: Tif <dodf>BbsfRowSft</dodf> dlbss providfs two kinds of sfttfr mftiods,
 * tiosf tibt sft propfrtifs bnd tiosf tibt sft plbdfioldfr pbrbmftfrs. Tif sfttfr
 * mftiods disdussfd in tiis sfdtion brf tiosf tibt sft plbdfioldfr pbrbmftfrs.
 * <P>
 * Tif plbdfioldfr pbrbmftfrs sft witi tif <dodf>BbsfRowSft</dodf> sfttfr mftiods
 * brf storfd bs objfdts in bn intfrnbl <dodf>Hbsitbblf</dodf> objfdt.
 * Primitivfs brf storfd bs tifir <dodf>Objfdt</dodf> typf. For fxbmplf, <dodf>bytf</dodf>
 * is storfd bs <dodf>Bytf</dodf> objfdt, bnd <dodf>int</dodf> is storfd bs
 * bn <dodf>Intfgfr</dodf> objfdt.
 * Wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd, tif vblufs in tif
 * <dodf>Hbsitbblf</dodf> objfdt brf substitutfd for tif bppropribtf plbdfioldfr
 * pbrbmftfrs in tif dommbnd.
 * <P>
 * A dbll to tif mftiod <dodf>gftPbrbms</dodf> rfturns tif vblufs storfd in tif
 * <dodf>Hbsitbblf</dodf> objfdt bs bn brrby of <dodf>Objfdt</dodf> instbndfs.
 * An flfmfnt in tiis brrby mby bf b simplf <dodf>Objfdt</dodf> instbndf or bn
 * brrby (wiidi is b typf of <dodf>Objfdt</dodf>). Tif pbrtidulbr sfttfr mftiod usfd
 * dftfrminfs wiftifr bn flfmfnt in tiis brrby is bn <dodf>Objfdt</dodf> or bn brrby.
 * <P>
 * Tif mbjority of mftiods for sftting plbdfioldfr pbrbmftfrs tbkf two pbrbmftfrs,
 *  witi tif first pbrbmftfr
 * indidbting wiidi plbdfioldfr pbrbmftfr is to bf sft, bnd tif sfdond pbrbmftfr
 * giving tif vbluf to bf sft.  Mftiods sudi bs <dodf>sftInt</dodf>,
 * <dodf>sftString</dodf>, <dodf>sftBoolfbn</dodf>, bnd <dodf>sftLong</dodf> fbll into
 * tiis dbtfgory.  Aftfr tifsf mftiods ibvf bffn dbllfd, b dbll to tif mftiod
 * <dodf>gftPbrbms</dodf> will rfturn bn brrby witi tif vblufs tibt ibvf bffn sft. Ebdi
 * flfmfnt in tif brrby is bn <dodf>Objfdt</dodf> instbndf rfprfsfnting tif
 * vblufs tibt ibvf bffn sft. Tif ordfr of tifsf vblufs in tif brrby is dftfrminfd by tif
 * <dodf>int</dodf> (tif first pbrbmftfr) pbssfd to tif sfttfr mftiod. Tif vblufs in tif
 * brrby brf tif vblufs (tif sfdond pbrbmftfr) pbssfd to tif sfttfr mftiod.
 * In otifr words, tif first flfmfnt in tif brrby is tif vbluf
 * to bf sft for tif first plbdfioldfr pbrbmftfr in tif <dodf>RowSft</dodf> objfdt's
 * dommbnd. Tif sfdond flfmfnt is tif vbluf to
 * bf sft for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
 * <P>
 * Sfvfrbl sfttfr mftiods sfnd tif drivfr bnd DBMS informbtion bfyond tif vbluf to bf sft.
 * Wifn tif mftiod <dodf>gftPbrbms</dodf> is dbllfd bftfr onf of tifsf sfttfr mftiods ibs
 * bffn usfd, tif flfmfnts in tif brrby will tifmsflvfs bf brrbys to bddommodbtf tif
 * bdditionbl informbtion. In tiis dbtfgory, tif mftiod <dodf>sftNull</dodf> is b spfdibl dbsf
 * bfdbusf onf vfrsion tbkfs only
 * two pbrbmftfrs (<dodf>sftNull(int pbrbmftfrIndfx, int SqlTypf)</dodf>). Nfvfrtiflfss,
 * it rfquirfs
 * bn brrby to dontbin tif informbtion tibt will bf pbssfd to tif drivfr bnd DBMS.  Tif first
 * flfmfnt in tiis brrby is tif vbluf to bf sft, wiidi is <dodf>null</dodf>, bnd tif
 * sfdond flfmfnt is tif <dodf>int</dodf> supplifd for <i>sqlTypf</i>, wiidi
 * indidbtfs tif typf of SQL vbluf tibt is bfing sft to <dodf>null</dodf>. Tiis informbtion
 * is nffdfd by somf DBMSs bnd is tifrfforf rfquirfd in ordfr to fnsurf tibt bpplidbtions
 * brf portbblf.
 * Tif otifr vfrsion is intfndfd to bf usfd wifn tif vbluf to bf sft to <dodf>null</dodf>
 * is b usfr-dffinfd typf. It tbkfs tirff pbrbmftfrs
 * (<dodf>sftNull(int pbrbmftfrIndfx, int sqlTypf, String typfNbmf)</dodf>) bnd blso
 * rfquirfs bn brrby to dontbin tif informbtion to bf pbssfd to tif drivfr bnd DBMS.
 * Tif first two flfmfnts in tiis brrby brf tif sbmf bs for tif first vfrsion of
 * <dodf>sftNull</dodf>.  Tif tiird flfmfnt, <i>typfNbmf</i>, givfs tif SQL nbmf of
 * tif usfr-dffinfd typf. As is truf witi tif otifr sfttfr mftiods, tif numbfr of tif
 * plbdfioldfr pbrbmftfr to bf sft is indidbtfd by bn flfmfnt's position in tif brrby
 * rfturnfd by <dodf>gftPbrbms</dodf>.  So, for fxbmplf, if tif pbrbmftfr
 * supplifd to <dodf>sftNull</dodf> is <dodf>2</dodf>, tif sfdond flfmfnt in tif brrby
 * rfturnfd by <dodf>gftPbrbms</dodf> will bf bn brrby of two or tirff flfmfnts.
 * <P>
 * Somf mftiods, sudi bs <dodf>sftObjfdt</dodf> bnd <dodf>sftDbtf</dodf> ibvf vfrsions
 * tibt tbkf morf tibn two pbrbmftfrs, witi tif fxtrb pbrbmftfrs giving informbtion
 * to tif drivfr or tif DBMS. For fxbmplf, tif mftiods <dodf>sftDbtf</dodf>,
 * <dodf>sftTimf</dodf>, bnd <dodf>sftTimfstbmp</dodf> dbn tbkf b <dodf>Cblfndbr</dodf>
 * objfdt bs tifir tiird pbrbmftfr.  If tif DBMS dofs not storf timf zonf informbtion,
 * tif drivfr usfs tif <dodf>Cblfndbr</dodf> objfdt to donstrudt tif <dodf>Dbtf</dodf>,
 * <dodf>Timf</dodf>, or <dodf>Timfstbmp</dodf> objfdt bfing sft. As is truf witi otifr
 * mftiods tibt providf bdditionbl informbtion, tif flfmfnt in tif brrby rfturnfd
 * by <dodf>gftPbrbms</dodf> is bn brrby instfbd of b simplf <dodf>Objfdt</dodf> instbndf.
 * <P>
 * Tif mftiods <dodf>sftAsdiiStrfbm</dodf>, <dodf>sftBinbryStrfbm</dodf>,
 * <dodf>sftCibrbdtfrStrfbm</dodf>, bnd <dodf>sftUnidodfStrfbm</dodf> (wiidi is
 * dfprfdbtfd, so bpplidbtions siould usf <dodf>gftCibrbdtfrStrfbm</dodf> instfbd)
 * tbkf tirff pbrbmftfrs, so for tifm, tif flfmfnt in tif brrby rfturnfd by
 * <dodf>gftPbrbms</dodf> is blso bn brrby.  Wibt is difffrfnt bbout tifsf sfttfr
 * mftiods is tibt in bddition to tif informbtion providfd by pbrbmftfrs, tif brrby dontbins
 * onf of tif <dodf>BbsfRowSft</dodf> donstbnts indidbting tif typf of strfbm bfing sft.
* <p>
* NOTE: Tif mftiod <dodf>gftPbrbms</dodf> is dbllfd intfrnblly by
* <dodf>RowSft</dodf> implfmfntbtions fxtfnding tiis dlbss; it is not normblly dbllfd by bn
* bpplidbtion progrbmmfr dirfdtly.
*
* <i3>5.0 Evfnt Notifidbtion</i3>
* Tif <dodf>BbsfRowSft</dodf> dlbss providfs tif fvfnt notifidbtion
* mfdibnism for rowsfts.  It dontbins tif fifld
* <dodf>listfnfrs</dodf>, mftiods for bdding bnd rfmoving listfnfrs, bnd
* mftiods for notifying listfnfrs of dibngfs.
* <P>
* A listfnfr is bn objfdt tibt ibs implfmfntfd tif <dodf>RowSftListfnfr</dodf> intfrfbdf.
* If it ibs bffn bddfd to b <dodf>RowSft</dodf> objfdt's list of listfnfrs, it will bf notififd
*  wifn bn fvfnt oddurs on tibt <dodf>RowSft</dodf> objfdt.  Ebdi listfnfr's
* implfmfntbtion of tif <dodf>RowSftListfnfr</dodf> mftiods dffinfs wibt tibt objfdt
* will do wifn it is notififd tibt bn fvfnt ibs oddurrfd.
* <P>
* Tifrf brf tirff possiblf fvfnts for b <dodf>RowSft</dodf> objfdt:
* <OL>
* <LI>tif dursor movfs
* <LI>bn individubl row is dibngfd (updbtfd, dflftfd, or insfrtfd)
* <LI>tif dontfnts of tif fntirf <dodf>RowSft</dodf> objfdt  brf dibngfd
* </OL>
* <P>
* Tif <dodf>BbsfRowSft</dodf> mftiod usfd for tif notifidbtion indidbtfs tif
* typf of fvfnt tibt ibs oddurrfd.  For fxbmplf, tif mftiod
* <dodf>notifyRowCibngfd</dodf> indidbtfs tibt b row ibs bffn updbtfd,
* dflftfd, or insfrtfd.  Ebdi of tif notifidbtion mftiods drfbtfs b
* <dodf>RowSftEvfnt</dodf> objfdt, wiidi is supplifd to tif listfnfr in ordfr to
* idfntify tif <dodf>RowSft</dodf> objfdt on wiidi tif fvfnt oddurrfd.
* Wibt tif listfnfr dofs witi tiis informbtion, wiidi mby bf notiing, dfpfnds on iow it wbs
* implfmfntfd.
*
* <i3>6.0 Dffbult Bfibvior</i3>
* A dffbult <dodf>BbsfRowSft</dodf> objfdt is initiblizfd witi mbny stbrting vblufs.
*
* Tif following is truf of b dffbult <dodf>RowSft</dodf> instbndf tibt fxtfnds
* tif <dodf>BbsfRowSft</dodf> dlbss:
* <UL>
*   <LI>Hbs b sdrollbblf dursor bnd dofs not siow dibngfs
*       mbdf by otifrs.
*   <LI>Is updbtbblf.
*   <LI>Dofs not siow rows tibt ibvf bffn dflftfd.
*   <LI>Hbs no timf limit for iow long b drivfr mby tbkf to
*       fxfdutf tif <dodf>RowSft</dodf> objfdt's dommbnd.
*   <LI>Hbs no limit for tif numbfr of rows it mby dontbin.
*   <LI>Hbs no limit for tif numbfr of bytfs b dolumn mby dontbin. NOTE: Tiis
*   limit bpplifs only to dolumns tibt iold vblufs of tif
*   following typfs:  <dodf>BINARY</dodf>, <dodf>VARBINARY</dodf>,
*   <dodf>LONGVARBINARY</dodf>, <dodf>CHAR</dodf>, <dodf>VARCHAR</dodf>,
*   bnd <dodf>LONGVARCHAR</dodf>.
*   <LI>Will not sff undommittfd dbtb (mbkf "dirty" rfbds).
*   <LI>Hbs fsdbpf prodfssing turnfd on.
*   <LI>Hbs its donnfdtion's typf mbp sft to <dodf>null</dodf>.
*   <LI>Hbs bn fmpty <dodf>Vfdtor</dodf> objfdt for storing tif vblufs sft
*       for tif plbdfioldfr pbrbmftfrs in tif <dodf>RowSft</dodf> objfdt's dommbnd.
* </UL>
* <p>
* If otifr vblufs brf dfsirfd, bn bpplidbtion must sft tif propfrty vblufs
* fxpliditly. For fxbmplf, tif following linf of dodf sfts tif mbximum numbfr
* of rows for tif <dodf>CbdifdRowSft</dodf> objfdt <i>drs</i> to 500.
* <PRE>
*    drs.sftMbxRows(500);
* </PRE>
* Mftiods implfmfntfd in fxtfnsions of tiis <dodf>BbsfRowSft</dodf> dlbss <b>must</b> tirow bn
* <dodf>SQLExdfption</dodf> objfdt for bny violbtion of tif dffinfd bssfrtions.  Also, if tif
* fxtfnding dlbss ovfrridfs bnd rfimplfmfnts bny <dodf>BbsfRowSft</dodf> mftiod bnd fndountfrs
* donnfdtivity or undfrlying dbtb sourdf issufs, tibt mftiod <b>mby</b> in bddition tirow bn
* <dodf>SQLExdfption</dodf> objfdt for tibt rfbson.
*
* @sindf 1.5
*/

publid bbstrbdt dlbss BbsfRowSft implfmfnts Sfriblizbblf, Clonfbblf {

    /**
     * A donstbnt indidbting to b <dodf>RowSftRfbdfrImpl</dodf> objfdt
     * tibt b givfn pbrbmftfr is b Unidodf strfbm. Tiis
     * <dodf>RowSftRfbdfrImpl</dodf> objfdt is providfd bs bn fxtfnsion of tif
     * <dodf>SyndProvidfr</dodf> bbstrbdt dlbss dffinfd in tif
     * <dodf>SyndFbdtory</dodf> stbtid fbdtory SPI mfdibnism.
     */
    publid stbtid finbl int UNICODE_STREAM_PARAM = 0;

    /**
     * A donstbnt indidbting to b <dodf>RowSftRfbdfrImpl</dodf> objfdt
     * tibt b givfn pbrbmftfr is b binbry strfbm. A
     * <dodf>RowSftRfbdfrImpl</dodf> objfdt is providfd bs bn fxtfnsion of tif
     * <dodf>SyndProvidfr</dodf> bbstrbdt dlbss dffinfd in tif
     * <dodf>SyndFbdtory</dodf> stbtid fbdtory SPI mfdibnism.
     */
    publid stbtid finbl int BINARY_STREAM_PARAM = 1;

    /**
     * A donstbnt indidbting to b <dodf>RowSftRfbdfrImpl</dodf> objfdt
     * tibt b givfn pbrbmftfr is bn ASCII strfbm. A
     * <dodf>RowSftRfbdfrImpl</dodf> objfdt is providfd bs bn fxtfnsion of tif
     * <dodf>SyndProvidfr</dodf> bbstrbdt dlbss dffinfd in tif
     * <dodf>SyndFbdtory</dodf> stbtid fbdtory SPI mfdibnism.
     */
    publid stbtid finbl int ASCII_STREAM_PARAM = 2;

    /**
     * Tif <dodf>InputStrfbm</dodf> objfdt tibt will bf
     * rfturnfd by tif mftiod <dodf>gftBinbryStrfbm</dodf>, wiidi is
     * spfdififd in tif <dodf>RfsultSft</dodf> intfrfbdf.
     * @sfribl
     */
    protfdtfd jbvb.io.InputStrfbm binbryStrfbm;

    /**
     * Tif <dodf>InputStrfbm</dodf> objfdt tibt will bf
     * rfturnfd by tif mftiod <dodf>gftUnidodfStrfbm</dodf>,
     * wiidi is spfdififd in tif <dodf>RfsultSft</dodf> intfrfbdf.
     * @sfribl
     */
    protfdtfd jbvb.io.InputStrfbm unidodfStrfbm;

    /**
     * Tif <dodf>InputStrfbm</dodf> objfdt tibt will bf
     * rfturnfd by tif mftiod <dodf>gftAsdiiStrfbm</dodf>,
     * wiidi is spfdififd in tif <dodf>RfsultSft</dodf> intfrfbdf.
     * @sfribl
     */
    protfdtfd jbvb.io.InputStrfbm bsdiiStrfbm;

    /**
     * Tif <dodf>Rfbdfr</dodf> objfdt tibt will bf
     * rfturnfd by tif mftiod <dodf>gftCibrbdtfrStrfbm</dodf>,
     * wiidi is spfdififd in tif <dodf>RfsultSft</dodf> intfrfbdf.
     * @sfribl
     */
    protfdtfd jbvb.io.Rfbdfr dibrStrfbm;

    /**
     * Tif qufry tibt will bf sfnt to tif DBMS for fxfdution wifn tif
     * mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * @sfribl
     */
    privbtf String dommbnd;

    /**
     * Tif JDBC URL tif rfbdfr, writfr, or boti supply to tif mftiod
     * <dodf>DrivfrMbnbgfr.gftConnfdtion</dodf> wifn tif
     * <dodf>DrivfrMbnbgfr</dodf> is usfd to gft b donnfdtion.
     * <P>
     * Tif JDBC URL idfntififs tif drivfr to bf usfd to mbkf tif donndfdtion.
     * Tiis URL dbn bf found in tif dodumfntbtion supplifd by tif drivfr
     * vfndor.
     * @sfribl
     */
    privbtf String URL;

    /**
     * Tif logidbl nbmf of tif dbtb sourdf tibt tif rfbdfr/writfr siould usf
     * in ordfr to rftrifvf b <dodf>DbtbSourdf</dodf> objfdt from b Jbvb
     * Dirfdtory bnd Nbming Intfrfbdf (JNDI) nbming sfrvidf.
     * @sfribl
     */
    privbtf String dbtbSourdf;

    /**
     * Tif usfr nbmf tif rfbdfr, writfr, or boti supply to tif mftiod
     * <dodf>DrivfrMbnbgfr.gftConnfdtion</dodf> wifn tif
     * <dodf>DrivfrMbnbgfr</dodf> is usfd to gft b donnfdtion.
     * @sfribl
     */
    privbtf trbnsifnt String usfrnbmf;

    /**
     * Tif pbssword tif rfbdfr, writfr, or boti supply to tif mftiod
     * <dodf>DrivfrMbnbgfr.gftConnfdtion</dodf> wifn tif
     * <dodf>DrivfrMbnbgfr</dodf> is usfd to gft b donnfdtion.
     * @sfribl
     */
    privbtf trbnsifnt String pbssword;

    /**
     * A donstbnt indidbting tif typf of tiis JDBC <dodf>RowSft</dodf>
     * objfdt. It must bf onf of tif following <dodf>RfsultSft</dodf>
     * donstbnts:  <dodf>TYPE_FORWARD_ONLY</dodf>,
     * <dodf>TYPE_SCROLL_INSENSITIVE</dodf>, or
     * <dodf>TYPE_SCROLL_SENSITIVE</dodf>.
     * @sfribl
     */
    privbtf int rowSftTypf = RfsultSft.TYPE_SCROLL_INSENSITIVE;

    /**
     * A <dodf>boolfbn</dodf> indidbting wiftifr dflftfd rows brf visiblf in tiis
     * JDBC <dodf>RowSft</dodf> objfdt .
     * @sfribl
     */
    privbtf boolfbn siowDflftfd = fblsf; // dffbult is fblsf

    /**
     * Tif mbximum numbfr of sfdonds tif drivfr
     * will wbit for b dommbnd to fxfdutf.  Tiis limit bpplifs wiilf
     * tiis JDBC <dodf>RowSft</dodf> objfdt is donnfdtfd to its dbtb
     * sourdf, tibt is, wiilf it is populbting itsflf witi
     * dbtb bnd wiilf it is writing dbtb bbdk to tif dbtb sourdf.
     * @sfribl
     */
    privbtf int qufryTimfout = 0; // dffbult is no timfout

    /**
     * Tif mbximum numbfr of rows tif rfbdfr siould rfbd.
     * @sfribl
     */
    privbtf int mbxRows = 0; // dffbult is no limit

    /**
     * Tif mbximum fifld sizf tif rfbdfr siould rfbd.
     * @sfribl
     */
    privbtf int mbxFifldSizf = 0; // dffbult is no limit

    /**
     * A donstbnt indidbting tif dondurrfndy of tiis JDBC <dodf>RowSft</dodf>
     * objfdt. It must bf onf of tif following <dodf>RfsultSft</dodf>
     * donstbnts: <dodf>CONCUR_READ_ONLY</dodf> or
     * <dodf>CONCUR_UPDATABLE</dodf>.
     * @sfribl
     */
    privbtf int dondurrfndy = RfsultSft.CONCUR_UPDATABLE;

    /**
     * A <dodf>boolfbn</dodf> indidbting wiftifr tiis JDBC <dodf>RowSft</dodf>
     * objfdt is rfbd-only.  <dodf>truf</dodf> indidbtfs tibt it is rfbd-only;
     * <dodf>fblsf</dodf> tibt it is writbblf.
     * @sfribl
     */
    privbtf boolfbn rfbdOnly;

    /**
     * A <dodf>boolfbn</dodf> indidbting wiftifr tif rfbdfr for tiis
     * JDBC <dodf>RowSft</dodf> objfdt siould pfrform fsdbpf prodfssing.
     * <dodf>truf</dodf> mfbns tibt fsdbpf prodfssing is turnfd on;
     * <dodf>fblsf</dodf> tibt it is not. Tif dffbult is <dodf>truf</dodf>.
     * @sfribl
     */
    privbtf boolfbn fsdbpfProdfssing;

    /**
     * A donstbnt indidbting tif isolbtion lfvfl of tif donnfdtion
     * for tiis JDBC <dodf>RowSft</dodf> objfdt . It must bf onf of
     * tif following <dodf>Connfdtion</dodf> donstbnts:
     * <dodf>TRANSACTION_NONE</dodf>,
     * <dodf>TRANSACTION_READ_UNCOMMITTED</dodf>,
     * <dodf>TRANSACTION_READ_COMMITTED</dodf>,
     * <dodf>TRANSACTION_REPEATABLE_READ</dodf> or
     * <dodf>TRANSACTION_SERIALIZABLE</dodf>.
     * @sfribl
     */
    privbtf int isolbtion;

    /**
     * A donstbnt usfd bs b iint to tif drivfr tibt indidbtfs tif dirfdtion in
     * wiidi dbtb from tiis JDBC <dodf>RowSft</dodf> objfdt  is going
     * to bf fftdifd. Tif following <dodf>RfsultSft</dodf> donstbnts brf
     * possiblf vblufs:
     * <dodf>FETCH_FORWARD</dodf>,
     * <dodf>FETCH_REVERSE</dodf>,
     * <dodf>FETCH_UNKNOWN</dodf>.
     * <P>
     * Unusfd bt tiis timf.
     * @sfribl
     */
    privbtf int fftdiDir = RfsultSft.FETCH_FORWARD; // dffbult fftdi dirfdtion

    /**
     * A iint to tif drivfr tibt indidbtfs tif fxpfdtfd numbfr of rows
     * in tiis JDBC <dodf>RowSft</dodf> objfdt .
     * <P>
     * Unusfd bt tiis timf.
     * @sfribl
     */
    privbtf int fftdiSizf = 0; // dffbult fftdiSizf

    /**
     * Tif <dodf>jbvb.util.Mbp</dodf> objfdt tibt dontbins fntrifs mbpping
     * SQL typf nbmfs to dlbssfs in tif Jbvb progrbmming lbngubgf for tif
     * dustom mbpping of usfr-dffinfd typfs.
     * @sfribl
     */
    privbtf Mbp<String, Clbss<?>> mbp;

    /**
     * A <dodf>Vfdtor</dodf> objfdt tibt iolds tif list of listfnfrs
     * tibt ibvf rfgistfrfd witi tiis <dodf>RowSft</dodf> objfdt.
     * @sfribl
     */
    privbtf Vfdtor<RowSftListfnfr> listfnfrs;

    /**
     * A <dodf>Vfdtor</dodf> objfdt tibt iolds tif pbrbmftfrs sft
     * for tiis <dodf>RowSft</dodf> objfdt's durrfnt dommbnd.
     * @sfribl
     */
    privbtf Hbsitbblf<Intfgfr, Objfdt> pbrbms; // dould bf trbnsifnt?

    /**
     * Construdts b nfw <dodf>BbsfRowSft</dodf> objfdt initiblizfd witi
     * b dffbult <dodf>Vfdtor</dodf> objfdt for its <dodf>listfnfrs</dodf>
     * fifld. Tif otifr dffbult vblufs witi wiidi it is initiblizfd brf listfd
     * in Sfdtion 6.0 of tif dlbss dommfnt for tiis dlbss.
     */
    publid BbsfRowSft() {
        // bllodbtf tif listfnfrs dollfdtion
        listfnfrs = nfw Vfdtor<RowSftListfnfr>();
    }

    /**
     * Pfrforms tif nfdfssbry intfrnbl donfigurbtions bnd initiblizbtions
     * to bllow bny JDBC <dodf>RowSft</dodf> implfmfntbtion to stbrt using
     * tif stbndbrd fbdilitifs providfd by b <dodf>BbsfRowSft</dodf>
     * instbndf. Tiis mftiod <b>siould</b> bf dbllfd bftfr tif <dodf>RowSft</dodf> objfdt
     * ibs bffn instbntibtfd to dorrfdtly initiblizf bll pbrbmftfrs. Tiis mftiod
     * <b>siould</b> nfvfr bf dbllfd by bn bpplidbtion, but is dbllfd from witi
     * b <dodf>RowSft</dodf> implfmfntbtion fxtfnding tiis dlbss.
     */
    protfdtfd void initPbrbms() {
        pbrbms = nfw Hbsitbblf<Intfgfr, Objfdt>();
    }

    //--------------------------------------------------------------------
    // Evfnts
    //--------------------------------------------------------------------

    /**
    * Tif listfnfr will bf notififd wifnfvfr bn fvfnt oddurs on tiis <dodf>RowSft</dodf>
    * objfdt.
    * <P>
    * A listfnfr migit, for fxbmplf, bf b tbblf or grbpi tibt nffds to
    * bf updbtfd in ordfr to bddurbtfly rfflfdt tif durrfnt stbtf of
    * tif <dodf>RowSft</dodf> objfdt.
    * <p>
    * <b>Notf</b>: if tif <dodf>RowSftListfnfr</dodf> objfdt is
    * <dodf>null</dodf>, tiis mftiod silfntly disdbrds tif <dodf>null</dodf>
    * vbluf bnd dofs not bdd b null rfffrfndf to tif sft of listfnfrs.
    * <p>
    * <b>Notf</b>: if tif listfnfr is blrfbdy sft, bnd tif nfw <dodf>RowSftListfrnfr</dodf>
    * instbndf is bddfd to tif sft of listfnfrs blrfbdy rfgistfrfd to rfdfivf
    * fvfnt notifidbtions from tiis <dodf>RowSft</dodf>.
    *
    * @pbrbm listfnfr bn objfdt tibt ibs implfmfntfd tif
    *     <dodf>jbvbx.sql.RowSftListfnfr</dodf> intfrfbdf bnd wbnts to bf notififd
    *     of bny fvfnts tibt oddur on tiis <dodf>RowSft</dodf> objfdt; Mby bf
    *     null.
    * @sff #rfmovfRowSftListfnfr
    */
    publid void bddRowSftListfnfr(RowSftListfnfr listfnfr) {
        listfnfrs.bdd(listfnfr);
    }

    /**
    * Rfmovfs tif dfsignbtfd objfdt from tiis <dodf>RowSft</dodf> objfdt's list of listfnfrs.
    * If tif givfn brgumfnt is not b rfgistfrfd listfnfr, tiis mftiod
    * dofs notiing.
    *
    *  <b>Notf</b>: if tif <dodf>RowSftListfnfr</dodf> objfdt is
    * <dodf>null</dodf>, tiis mftiod silfntly disdbrds tif <dodf>null</dodf>
    * vbluf.
    *
    * @pbrbm listfnfr b <dodf>RowSftListfnfr</dodf> objfdt tibt is on tif list
    *        of listfnfrs for tiis <dodf>RowSft</dodf> objfdt
    * @sff #bddRowSftListfnfr
    */
    publid void rfmovfRowSftListfnfr(RowSftListfnfr listfnfr) {
        listfnfrs.rfmovf(listfnfr);
    }

    /**
     * Dftfrminf if instbndf of tiis dlbss fxtfnds tif RowSft intfrfbdf.
     */
    privbtf void difdkforRowSftIntfrfbdf() tirows SQLExdfption {
        if ((tiis instbndfof jbvbx.sql.RowSft) == fblsf) {
            tirow nfw SQLExdfption("Tif dlbss fxtfnding bbstrbdt dlbss BbsfRowSft " +
                "must implfmfnt jbvbx.sql.RowSft or onf of it's sub-intfrfbdfs.");
        }
    }

    /**
    * Notififs bll of tif listfnfrs rfgistfrfd witi tiis
    * <dodf>RowSft</dodf> objfdt tibt its dursor ibs movfd.
    * <P>
    * Wifn bn bpplidbtion dblls b mftiod to movf tif dursor,
    * tibt mftiod movfs tif dursor bnd tifn dblls tiis mftiod
    * intfrnblly. An bpplidbtion <b>siould</b> nfvfr invokf
    * tiis mftiod dirfdtly.
    *
    * @tirows SQLExdfption if tif dlbss fxtfnding tif <dodf>BbsfRowSft</dodf>
    *     bbstrbdt dlbss dofs not implfmfnt tif <dodf>RowSft</dodf> intfrfbdf or
    *     onf of it's sub-intfrfbdfs.
    */
    protfdtfd void notifyCursorMovfd() tirows SQLExdfption {
        difdkforRowSftIntfrfbdf();
        if (listfnfrs.isEmpty() == fblsf) {
            RowSftEvfnt fvfnt = nfw RowSftEvfnt((RowSft)tiis);
            for (RowSftListfnfr rsl : listfnfrs) {
                rsl.dursorMovfd(fvfnt);
            }
        }
    }

    /**
    * Notififs bll of tif listfnfrs rfgistfrfd witi tiis <dodf>RowSft</dodf> objfdt tibt
    * onf of its rows ibs dibngfd.
    * <P>
    * Wifn bn bpplidbtion dblls b mftiod tibt dibngfs b row, sudi bs
    * tif <dodf>CbdifdRowSft</dodf> mftiods <dodf>insfrtRow</dodf>,
    * <dodf>updbtfRow</dodf>, or <dodf>dflftfRow</dodf>,
    * tibt mftiod dblls <dodf>notifyRowCibngfd</dodf>
    * intfrnblly. An bpplidbtion <b>siould</b> nfvfr invokf
    * tiis mftiod dirfdtly.
    *
    * @tirows SQLExdfption if tif dlbss fxtfnding tif <dodf>BbsfRowSft</dodf>
    *     bbstrbdt dlbss dofs not implfmfnt tif <dodf>RowSft</dodf> intfrfbdf or
    *     onf of it's sub-intfrfbdfs.
    */
    protfdtfd void notifyRowCibngfd() tirows SQLExdfption {
        difdkforRowSftIntfrfbdf();
        if (listfnfrs.isEmpty() == fblsf) {
                RowSftEvfnt fvfnt = nfw RowSftEvfnt((RowSft)tiis);
                for (RowSftListfnfr rsl : listfnfrs) {
                    rsl.rowCibngfd(fvfnt);
                }
        }
    }

   /**
    * Notififs bll of tif listfnfrs rfgistfrfd witi tiis <dodf>RowSft</dodf>
    * objfdt tibt its fntirf dontfnts ibvf dibngfd.
    * <P>
    * Wifn bn bpplidbtion dblls mftiods tibt dibngf tif fntirf dontfnts
    * of tif <dodf>RowSft</dodf> objfdt, sudi bs tif <dodf>CbdifdRowSft</dodf> mftiods
    * <dodf>fxfdutf</dodf>, <dodf>populbtf</dodf>, <dodf>rfstorfOriginbl</dodf>,
    * or <dodf>rflfbsf</dodf>, tibt mftiod dblls <dodf>notifyRowSftCibngfd</dodf>
    * intfrnblly (fitifr dirfdtly or indirfdtly). An bpplidbtion <b>siould</b>
    * nfvfr invokf tiis mftiod dirfdtly.
    *
    * @tirows SQLExdfption if tif dlbss fxtfnding tif <dodf>BbsfRowSft</dodf>
    *     bbstrbdt dlbss dofs not implfmfnt tif <dodf>RowSft</dodf> intfrfbdf or
    *     onf of it's sub-intfrfbdfs.
    */
    protfdtfd void notifyRowSftCibngfd() tirows SQLExdfption {
        difdkforRowSftIntfrfbdf();
        if (listfnfrs.isEmpty() == fblsf) {
                RowSftEvfnt fvfnt = nfw RowSftEvfnt((RowSft)tiis);
                for (RowSftListfnfr rsl : listfnfrs) {
                    rsl.rowSftCibngfd(fvfnt);
                }
        }
}

    /**
     * Rftrifvfs tif SQL qufry tibt is tif dommbnd for tiis
     * <dodf>RowSft</dodf> objfdt. Tif dommbnd propfrty dontbins tif qufry tibt
     * will bf fxfdutfd to populbtf tiis <dodf>RowSft</dodf> objfdt.
     * <P>
     * Tif SQL qufry rfturnfd by tiis mftiod is usfd by <dodf>RowSft</dodf> mftiods
     * sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf>, wiidi mby bf implfmfntfd
     * by bny dlbss tibt fxtfnds tif <dodf>BbsfRowSft</dodf> bbstrbdt dlbss bnd
     * implfmfnts onf or morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf>
     * intfrfbdfs.
     * <P>
     * Tif dommbnd is usfd by tif <dodf>RowSft</dodf> objfdt's
     * rfbdfr to obtbin b <dodf>RfsultSft</dodf> objfdt.  Tif rfbdfr tifn
     * rfbds tif dbtb from tif <dodf>RfsultSft</dodf> objfdt bnd usfs it to
     * to populbtf tiis <dodf>RowSft</dodf> objfdt.
     * <P>
     * Tif dffbult vbluf for tif <dodf>dommbnd</dodf> propfrty is <dodf>null</dodf>.
     *
     * @rfturn tif <dodf>String</dodf> tibt is tif vbluf for tiis
     *         <dodf>RowSft</dodf> objfdt's <dodf>dommbnd</dodf> propfrty;
     *         mby bf <dodf>null</dodf>
     * @sff #sftCommbnd
     */
    publid String gftCommbnd() {
        rfturn dommbnd;
    }

    /**
     * Sfts tiis <dodf>RowSft</dodf> objfdt's <dodf>dommbnd</dodf> propfrty to
     * tif givfn <dodf>String</dodf> objfdt bnd dlfbrs tif pbrbmftfrs, if bny,
     * tibt wfrf sft for tif prfvious dommbnd.
     * <P>
     * Tif <dodf>dommbnd</dodf> propfrty mby not bf nffdfd if tif <dodf>RowSft</dodf>
     * objfdt gfts its dbtb from b sourdf tibt dofs not support dommbnds,
     * sudi bs b sprfbdsifft or otifr tbbulbr filf.
     * Tius, tiis propfrty is optionbl bnd mby bf <dodf>null</dodf>.
     *
     * @pbrbm dmd b <dodf>String</dodf> objfdt dontbining bn SQL qufry
     *            tibt will bf sft bs tiis <dodf>RowSft</dodf> objfdt's dommbnd
     *            propfrty; mby bf <dodf>null</dodf> but mby not bf bn fmpty string
     * @tirows SQLExdfption if bn fmpty string is providfd bs tif dommbnd vbluf
     * @sff #gftCommbnd
     */
    publid void sftCommbnd(String dmd) tirows SQLExdfption {
        // dmd fqubl to null or
        // dmd witi lfngti 0 (implifs url =="")
        // brf not indfpfndfnt fvfnts.

        if(dmd == null) {
           dommbnd = null;
        } flsf if (dmd.lfngti() == 0) {
            tirow nfw SQLExdfption("Invblid dommbnd string dftfdtfd. " +
            "Cbnnot bf of lfngti lfss tibn 0");
        } flsf {
            // "unbind" bny pbrbmftfrs from bny prfvious dommbnd.
            if(pbrbms == null){
                 tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftCommbnd");
            }
            pbrbms.dlfbr();
            dommbnd = dmd;
        }

    }

    /**
     * Rftrifvfs tif JDBC URL tibt tiis <dodf>RowSft</dodf> objfdt's
     * <dodf>jbvbx.sql.Rfbdfr</dodf> objfdt usfs to mbkf b donnfdtion
     * witi b rflbtionbl dbtbbbsf using b JDBC tfdinology-fnbblfd drivfr.
     *<P>
     * Tif <dodf>Url</dodf> propfrty will bf <dodf>null</dodf> if tif undfrlying dbtb
     * sourdf is b non-SQL dbtb sourdf, sudi bs b sprfbdsifft or bn XML
     * dbtb sourdf.
     *
     * @rfturn b <dodf>String</dodf> objfdt tibt dontbins tif JDBC URL
     *         usfd to fstbblisi tif donnfdtion for tiis <dodf>RowSft</dodf>
     *         objfdt; mby bf <dodf>null</dodf> (dffbult vbluf) if not sft
     * @tirows SQLExdfption if bn frror oddurs rftrifving tif URL vbluf
     * @sff #sftUrl
     */
    publid String gftUrl() tirows SQLExdfption {
        rfturn URL;
    }

    /**
     * Sfts tif Url propfrty for tiis <dodf>RowSft</dodf> objfdt
     * to tif givfn <dodf>String</dodf> objfdt bnd sfts tif dbtbSourdf nbmf
     * propfrty to <dodf>null</dodf>. Tif Url propfrty is b
     * JDBC URL tibt is usfd wifn
     * tif donnfdtion is drfbtfd using b JDBC tfdinology-fnbblfd drivfr
     * ("JDBC drivfr") bnd tif <dodf>DrivfrMbnbgfr</dodf>.
     * Tif dorrfdt JDBC URL for tif spfdifid drivfr to bf usfd dbn bf found
     * in tif drivfr dodumfntbtion.  Altiougi tifrf brf guidflinfs for for iow
     * b JDBC URL is formfd,
     * b drivfr vfndor dbn spfdify bny <dodf>String</dodf> objfdt fxdfpt
     * onf witi b lfngti of <dodf>0</dodf> (bn fmpty string).
     * <P>
     * Sftting tif Url propfrty is optionbl if donnfdtions brf fstbblisifd using
     * b <dodf>DbtbSourdf</dodf> objfdt instfbd of tif <dodf>DrivfrMbnbgfr</dodf>.
     * Tif drivfr will usf fitifr tif URL propfrty or tif
     * dbtbSourdfNbmf propfrty to drfbtf b donnfdtion, wiidifvfr wbs
     * spfdififd most rfdfntly. If bn bpplidbtion usfs b JDBC URL, it
     * must lobd b JDBC drivfr tibt bddfpts tif JDBC URL bfforf it usfs tif
     * <dodf>RowSft</dodf> objfdt to donnfdt to b dbtbbbsf.  Tif <dodf>RowSft</dodf>
     * objfdt will usf tif URL intfrnblly to drfbtf b dbtbbbsf donnfdtion in ordfr
     * to rfbd or writf dbtb.
     *
     * @pbrbm url b <dodf>String</dodf> objfdt tibt dontbins tif JDBC URL
     *     tibt will bf usfd to fstbblisi tif donnfdtion to b dbtbbbsf for tiis
     *     <dodf>RowSft</dodf> objfdt; mby bf <dodf>null</dodf> but must not
     *     bf bn fmpty string
     * @tirows SQLExdfption if bn frror oddurs sftting tif Url propfrty or tif
     *     pbrbmftfr supplifd is b string witi b lfngti of <dodf>0</dodf> (bn
     *     fmpty string)
     * @sff #gftUrl
     */
    publid void sftUrl(String url) tirows SQLExdfption {
        if(url == null) {
           url = null;
        } flsf if (url.lfngti() < 1) {
            tirow nfw SQLExdfption("Invblid url string dftfdtfd. " +
            "Cbnnot bf of lfngti lfss tibn 1");
        } flsf {
            URL = url;
        }

        dbtbSourdf = null;

    }

    /**
     * Rfturns tif logidbl nbmf tibt wifn supplifd to b nbming sfrvidf
     * tibt usfs tif Jbvb Nbming bnd Dirfdtory Intfrfbdf (JNDI) API, will
     * rftrifvf b <dodf>jbvbx.sql.DbtbSourdf</dodf> objfdt. Tiis
     * <dodf>DbtbSourdf</dodf> objfdt dbn bf usfd to fstbblisi b donnfdtion
     * to tif dbtb sourdf tibt it rfprfsfnts.
     * <P>
     * Usfrs siould sft fitifr tif url or tif dbtb sourdf nbmf propfrty.
     * Tif drivfr will usf tif propfrty sft most rfdfntly to fstbblisi b
     * donnfdtion.
     *
     * @rfturn b <dodf>String</dodf> objfdt tibt idfntififs tif
     *         <dodf>DbtbSourdf</dodf> objfdt to bf usfd for mbking b
     *         donnfdtion; if no logidbl nbmf ibs bffn sft, <dodf>null</dodf>
     *         is rfturnfd.
     * @sff #sftDbtbSourdfNbmf
     */
    publid String gftDbtbSourdfNbmf() {
        rfturn dbtbSourdf;
    }


    /**
     * Sfts tif <dodf>DbtbSourdf</dodf> nbmf propfrty for tiis <dodf>RowSft</dodf>
     * objfdt to tif givfn logidbl nbmf bnd sfts tiis <dodf>RowSft</dodf> objfdt's
     * Url propfrty to <dodf>null</dodf>. Tif nbmf must ibvf bffn bound to b
     * <dodf>DbtbSourdf</dodf> objfdt in b JNDI nbming sfrvidf so tibt bn
     * bpplidbtion dbn do b lookup using tibt nbmf to rftrifvf tif
     * <dodf>DbtbSourdf</dodf> objfdt bound to it. Tif <dodf>DbtbSourdf</dodf>
     * objfdt dbn tifn bf usfd to fstbblisi b donnfdtion to tif dbtb sourdf it
     * rfprfsfnts.
     * <P>
     * Usfrs siould sft fitifr tif Url propfrty or tif dbtbSourdfNbmf propfrty.
     * If boti propfrtifs brf sft, tif drivfr will usf tif propfrty sft most rfdfntly.
     *
     * @pbrbm nbmf b <dodf>String</dodf> objfdt witi tif nbmf tibt dbn bf supplifd
     *     to b nbming sfrvidf bbsfd on JNDI tfdinology to rftrifvf tif
     *     <dodf>DbtbSourdf</dodf> objfdt tibt dbn bf usfd to gft b donnfdtion;
     *     mby bf <dodf>null</dodf> but must not bf bn fmpty string
     * @tirows SQLExdfption if bn fmpty string is providfd bs tif <dodf>DbtbSourdf</dodf>
     *    nbmf
     * @sff #gftDbtbSourdfNbmf
     */
    publid void sftDbtbSourdfNbmf(String nbmf) tirows SQLExdfption {

        if (nbmf == null) {
            dbtbSourdf = null;
        } flsf if (nbmf.fqubls("")) {
           tirow nfw SQLExdfption("DbtbSourdf nbmf dbnnot bf fmpty string");
        } flsf {
           dbtbSourdf = nbmf;
        }

        URL = null;
    }

    /**
     * Rfturns tif usfr nbmf usfd to drfbtf b dbtbbbsf donnfdtion.  Bfdbusf it
     * is not sfriblizfd, tif usfrnbmf propfrty is sft bt runtimf bfforf
     * dblling tif mftiod <dodf>fxfdutf</dodf>.
     *
     * @rfturn tif <dodf>String</dodf> objfdt dontbining tif usfr nbmf tibt
     *         is supplifd to tif dbtb sourdf to drfbtf b donnfdtion; mby bf
     *         <dodf>null</dodf> (dffbult vbluf) if not sft
     * @sff #sftUsfrnbmf
     */
    publid String gftUsfrnbmf() {
        rfturn usfrnbmf;
    }

    /**
     * Sfts tif usfrnbmf propfrty for tiis <dodf>RowSft</dodf> objfdt
     * to tif givfn usfr nbmf. Bfdbusf it
     * is not sfriblizfd, tif usfrnbmf propfrty is sft bt run timf bfforf
     * dblling tif mftiod <dodf>fxfdutf</dodf>.
     *
     * @pbrbm nbmf tif <dodf>String</dodf> objfdt dontbining tif usfr nbmf tibt
     *     is supplifd to tif dbtb sourdf to drfbtf b donnfdtion. It mby bf null.
     * @sff #gftUsfrnbmf
     */
    publid void sftUsfrnbmf(String nbmf) {
        if(nbmf == null)
        {
           usfrnbmf = null;
        } flsf {
           usfrnbmf = nbmf;
        }
    }

    /**
     * Rfturns tif pbssword usfd to drfbtf b dbtbbbsf donnfdtion for tiis
     * <dodf>RowSft</dodf> objfdt.  Bfdbusf tif pbssword propfrty is not
     * sfriblizfd, it is sft bt run timf bfforf dblling tif mftiod
     * <dodf>fxfdutf</dodf>. Tif dffbult vbluf is <dodf>null</dodf>
     *
     * @rfturn tif <dodf>String</dodf> objfdt tibt rfprfsfnts tif pbssword
     *         tibt must bf supplifd to tif dbtbbbsf to drfbtf b donnfdtion
     * @sff #sftPbssword
     */
    publid String gftPbssword() {
        rfturn pbssword;
    }

    /**
     * Sfts tif pbssword usfd to drfbtf b dbtbbbsf donnfdtion for tiis
     * <dodf>RowSft</dodf> objfdt to tif givfn <dodf>String</dodf>
     * objfdt.  Bfdbusf tif pbssword propfrty is not
     * sfriblizfd, it is sft bt run timf bfforf dblling tif mftiod
     * <dodf>fxfdutf</dodf>.
     *
     * @pbrbm pbss tif <dodf>String</dodf> objfdt tibt rfprfsfnts tif pbssword
     *     tibt is supplifd to tif dbtbbbsf to drfbtf b donnfdtion. It mby bf
     *     null.
     * @sff #gftPbssword
     */
    publid void sftPbssword(String pbss) {
        if(pbss == null)
        {
           pbssword = null;
        } flsf {
           pbssword = pbss;
        }
    }

    /**
     * Sfts tif typf for tiis <dodf>RowSft</dodf> objfdt to tif spfdififd typf.
     * Tif dffbult typf is <dodf>RfsultSft.TYPE_SCROLL_INSENSITIVE</dodf>.
     *
     * @pbrbm typf onf of tif following donstbnts:
     *             <dodf>RfsultSft.TYPE_FORWARD_ONLY</dodf>,
     *             <dodf>RfsultSft.TYPE_SCROLL_INSENSITIVE</dodf>, or
     *             <dodf>RfsultSft.TYPE_SCROLL_SENSITIVE</dodf>
     * @tirows SQLExdfption if tif pbrbmftfr supplifd is not onf of tif
     *         following donstbnts:
     *          <dodf>RfsultSft.TYPE_FORWARD_ONLY</dodf> or
     *          <dodf>RfsultSft.TYPE_SCROLL_INSENSITIVE</dodf>
     *          <dodf>RfsultSft.TYPE_SCROLL_SENSITIVE</dodf>
     * @sff #gftCondurrfndy
     * @sff #gftTypf
     */
    publid void sftTypf(int typf) tirows SQLExdfption {

        if ((typf != RfsultSft.TYPE_FORWARD_ONLY) &&
           (typf != RfsultSft.TYPE_SCROLL_INSENSITIVE) &&
           (typf != RfsultSft.TYPE_SCROLL_SENSITIVE)) {
                tirow nfw SQLExdfption("Invblid typf of RowSft sft. Must bf fitifr " +
                "RfsultSft.TYPE_FORWARD_ONLY or RfsultSft.TYPE_SCROLL_INSENSITIVE " +
                "or RfsultSft.TYPE_SCROLL_SENSITIVE.");
        }
        tiis.rowSftTypf = typf;
    }

    /**
     * Rfturns tif typf of tiis <dodf>RowSft</dodf> objfdt. Tif typf is initiblly
     * dftfrminfd by tif stbtfmfnt tibt drfbtfd tif <dodf>RowSft</dodf> objfdt.
     * Tif <dodf>RowSft</dodf> objfdt dbn dbll tif mftiod
     * <dodf>sftTypf</dodf> bt bny timf to dibngf its
     * typf.  Tif dffbult is <dodf>TYPE_SCROLL_INSENSITIVE</dodf>.
     *
     * @rfturn tif typf of tiis JDBC <dodf>RowSft</dodf>
     *         objfdt, wiidi must bf onf of tif following:
     *         <dodf>RfsultSft.TYPE_FORWARD_ONLY</dodf>,
     *         <dodf>RfsultSft.TYPE_SCROLL_INSENSITIVE</dodf>, or
     *         <dodf>RfsultSft.TYPE_SCROLL_SENSITIVE</dodf>
     * @tirows SQLExdfption if bn frror oddurs gftting tif typf of
     *     of tiis <dodf>RowSft</dodf> objfdt
     * @sff #sftTypf
     */
    publid int gftTypf() tirows SQLExdfption {
        rfturn rowSftTypf;
    }

    /**
     * Sfts tif dondurrfndy for tiis <dodf>RowSft</dodf> objfdt to
     * tif spfdififd dondurrfndy. Tif dffbult dondurrfndy for bny <dodf>RowSft</dodf>
     * objfdt (donnfdtfd or disdonnfdtfd) is <dodf>RfsultSft.CONCUR_UPDATABLE</dodf>,
     * but tiis mftiod mby bf dbllfd bt bny timf to dibngf tif dondurrfndy.
     *
     * @pbrbm dondurrfndy onf of tif following donstbnts:
     *                    <dodf>RfsultSft.CONCUR_READ_ONLY</dodf> or
     *                    <dodf>RfsultSft.CONCUR_UPDATABLE</dodf>
     * @tirows SQLExdfption if tif pbrbmftfr supplifd is not onf of tif
     *         following donstbnts:
     *          <dodf>RfsultSft.CONCUR_UPDATABLE</dodf> or
     *          <dodf>RfsultSft.CONCUR_READ_ONLY</dodf>
     * @sff #gftCondurrfndy
     * @sff #isRfbdOnly
     */
    publid void sftCondurrfndy(int dondurrfndy) tirows SQLExdfption {

        if((dondurrfndy != RfsultSft.CONCUR_READ_ONLY) &&
           (dondurrfndy != RfsultSft.CONCUR_UPDATABLE)) {
                tirow nfw SQLExdfption("Invblid dondurrfndy sft. Must bf fitifr " +
                "RfsultSft.CONCUR_READ_ONLY or RfsultSft.CONCUR_UPDATABLE.");
        }
        tiis.dondurrfndy = dondurrfndy;
    }

    /**
     * Rfturns b <dodf>boolfbn</dodf> indidbting wiftifr tiis
     * <dodf>RowSft</dodf> objfdt is rfbd-only.
     * Any bttfmpts to updbtf b rfbd-only <dodf>RowSft</dodf> objfdt will rfsult in bn
     * <dodf>SQLExdfption</dodf> bfing tirown. By dffbult,
     * rowsfts brf updbtbblf if updbtfs brf possiblf.
     *
     * @rfturn <dodf>truf</dodf> if tiis <dodf>RowSft</dodf> objfdt
     *         dbnnot bf updbtfd; <dodf>fblsf</dodf> otifrwisf
     * @sff #sftCondurrfndy
     * @sff #sftRfbdOnly
     */
    publid boolfbn isRfbdOnly() {
        rfturn rfbdOnly;
    };

    /**
     * Sfts tiis <dodf>RowSft</dodf> objfdt's rfbdOnly  propfrty to tif givfn <dodf>boolfbn</dodf>.
     *
     * @pbrbm vbluf <dodf>truf</dodf> to indidbtf tibt tiis
     *              <dodf>RowSft</dodf> objfdt is rfbd-only;
     *              <dodf>fblsf</dodf> to indidbtf tibt it is updbtbblf
     */
    publid void sftRfbdOnly(boolfbn vbluf) {
        rfbdOnly = vbluf;
    }

    /**
     * Rfturns tif trbnsbdtion isolbtion propfrty for tiis
     * <dodf>RowSft</dodf> objfdt's donnfdtion. Tiis propfrty rfprfsfnts
     * tif trbnsbdtion isolbtion lfvfl rfqufstfd for usf in trbnsbdtions.
     * <P>
     * For <dodf>RowSft</dodf> implfmfntbtions sudi bs
     * tif <dodf>CbdifdRowSft</dodf> tibt opfrbtf in b disdonnfdtfd fnvironmfnt,
     * tif <dodf>SyndProvidfr</dodf> objfdt
     * offfrs domplfmfntbry lodking bnd dbtb intfgrity options. Tif
     * options dfsdribfd bflow brf pfrtinfnt only to donnfdtfd <dodf>RowSft</dodf>
     * objfdts (<dodf>JdbdRowSft</dodf> objfdts).
     *
     * @rfturn onf of tif following donstbnts:
     *         <dodf>Connfdtion.TRANSACTION_NONE</dodf>,
     *         <dodf>Connfdtion.TRANSACTION_READ_UNCOMMITTED</dodf>,
     *         <dodf>Connfdtion.TRANSACTION_READ_COMMITTED</dodf>,
     *         <dodf>Connfdtion.TRANSACTION_REPEATABLE_READ</dodf>, or
     *         <dodf>Connfdtion.TRANSACTION_SERIALIZABLE</dodf>
     * @sff jbvbx.sql.rowsft.spi.SyndFbdtory
     * @sff jbvbx.sql.rowsft.spi.SyndProvidfr
     * @sff #sftTrbnsbdtionIsolbtion

     */
    publid int gftTrbnsbdtionIsolbtion() {
        rfturn isolbtion;
    };

    /**
     * Sfts tif trbnsbdtion isolbtion propfrty for tiis JDBC <dodf>RowSft</dodf> objfdt to tif givfn
     * donstbnt. Tif DBMS will usf tiis trbnsbdtion isolbtion lfvfl for
     * trbnsbdtions if it dbn.
     * <p>
     * For <dodf>RowSft</dodf> implfmfntbtions sudi bs
     * tif <dodf>CbdifdRowSft</dodf> tibt opfrbtf in b disdonnfdtfd fnvironmfnt,
     * tif <dodf>SyndProvidfr</dodf> objfdt bfing usfd
     * offfrs domplfmfntbry lodking bnd dbtb intfgrity options. Tif
     * options dfsdribfd bflow brf pfrtinfnt only to donnfdtfd <dodf>RowSft</dodf>
     * objfdts (<dodf>JdbdRowSft</dodf> objfdts).
     *
     * @pbrbm lfvfl onf of tif following donstbnts, listfd in bsdfnding ordfr:
     *              <dodf>Connfdtion.TRANSACTION_NONE</dodf>,
     *              <dodf>Connfdtion.TRANSACTION_READ_UNCOMMITTED</dodf>,
     *              <dodf>Connfdtion.TRANSACTION_READ_COMMITTED</dodf>,
     *              <dodf>Connfdtion.TRANSACTION_REPEATABLE_READ</dodf>, or
     *              <dodf>Connfdtion.TRANSACTION_SERIALIZABLE</dodf>
     * @tirows SQLExdfption if tif givfn pbrbmftfr is not onf of tif Connfdtion
     *          donstbnts
     * @sff jbvbx.sql.rowsft.spi.SyndFbdtory
     * @sff jbvbx.sql.rowsft.spi.SyndProvidfr
     * @sff #gftTrbnsbdtionIsolbtion
     */
    publid void sftTrbnsbdtionIsolbtion(int lfvfl) tirows SQLExdfption {
        if ((lfvfl != Connfdtion.TRANSACTION_NONE) &&
           (lfvfl != Connfdtion.TRANSACTION_READ_COMMITTED) &&
           (lfvfl != Connfdtion.TRANSACTION_READ_UNCOMMITTED) &&
           (lfvfl != Connfdtion.TRANSACTION_REPEATABLE_READ) &&
           (lfvfl != Connfdtion.TRANSACTION_SERIALIZABLE))
            {
                tirow nfw SQLExdfption("Invblid trbnsbdtion isolbtion sft. Must " +
                "bf fitifr " +
                "Connfdtion.TRANSACTION_NONE or " +
                "Connfdtion.TRANSACTION_READ_UNCOMMITTED or " +
                "Connfdtion.TRANSACTION_READ_COMMITTED or " +
                "Connfdtion.RRANSACTION_REPEATABLE_READ or " +
                "Connfdtion.TRANSACTION_SERIALIZABLE");
            }
        tiis.isolbtion = lfvfl;
    }

    /**
     * Rftrifvfs tif typf mbp bssodibtfd witi tif <dodf>Connfdtion</dodf>
     * objfdt for tiis <dodf>RowSft</dodf> objfdt.
     * <P>
     * Drivfrs tibt support tif JDBC 3.0 API will drfbtf
     * <dodf>Connfdtion</dodf> objfdts witi bn bssodibtfd typf mbp.
     * Tiis typf mbp, wiidi is initiblly fmpty, dbn dontbin onf or morf
     * fully-qublififd SQL nbmfs bnd <dodf>Clbss</dodf> objfdts indidbting
     * tif dlbss to wiidi tif nbmfd SQL vbluf will bf mbppfd. Tif typf mbpping
     * spfdififd in tif donnfdtion's typf mbp is usfd for dustom typf mbpping
     * wifn no otifr typf mbp supfrsfdfs it.
     * <p>
     * If b typf mbp is fxpliditly supplifd to b mftiod tibt dbn pfrform
     * dustom mbpping, tibt typf mbp supfrsfdfs tif donnfdtion's typf mbp.
     *
     * @rfturn tif <dodf>jbvb.util.Mbp</dodf> objfdt tibt is tif typf mbp
     *         for tiis <dodf>RowSft</dodf> objfdt's donnfdtion
     */
    publid jbvb.util.Mbp<String,Clbss<?>> gftTypfMbp() {
        rfturn mbp;
    }

    /**
     * Instblls tif givfn <dodf>jbvb.util.Mbp</dodf> objfdt bs tif typf mbp
     * bssodibtfd witi tif <dodf>Connfdtion</dodf> objfdt for tiis
     * <dodf>RowSft</dodf> objfdt.  Tif dustom mbpping indidbtfd in
     * tiis typf mbp will bf usfd unlfss b difffrfnt typf mbp is fxpliditly
     * supplifd to b mftiod, in wiidi dbsf tif typf mbp supplifd will bf usfd.
     *
     * @pbrbm mbp b <dodf>jbvb.util.Mbp</dodf> objfdt tibt dontbins tif
     *     mbpping from SQL typf nbmfs for usfr dffinfd typfs (UDT) to dlbssfs in
     *     tif Jbvb progrbmming lbngubgf.  Ebdi fntry in tif <dodf>Mbp</dodf>
     *     objfdt donsists of tif fully qublififd SQL nbmf of b UDT bnd tif
     *     <dodf>Clbss</dodf> objfdt for tif <dodf>SQLDbtb</dodf> implfmfntbtion
     *     of tibt UDT. Mby bf <dodf>null</dodf>.
     */
    publid void sftTypfMbp(jbvb.util.Mbp<String,Clbss<?>> mbp) {
        tiis.mbp = mbp;
    }

    /**
     * Rftrifvfs tif mbximum numbfr of bytfs tibt dbn bf usfd for b dolumn
     * vbluf in tiis <dodf>RowSft</dodf> objfdt.
     * Tiis limit bpplifs only to dolumns tibt iold vblufs of tif
     * following typfs:  <dodf>BINARY</dodf>, <dodf>VARBINARY</dodf>,
     * <dodf>LONGVARBINARY</dodf>, <dodf>CHAR</dodf>, <dodf>VARCHAR</dodf>,
     * bnd <dodf>LONGVARCHAR</dodf>.  If tif limit is fxdffdfd, tif fxdfss
     * dbtb is silfntly disdbrdfd.
     *
     * @rfturn bn <dodf>int</dodf> indidbting tif durrfnt mbximum dolumn sizf
     *     limit; zfro mfbns tibt tifrf is no limit
     * @tirows SQLExdfption if bn frror oddurs intfrnblly dftfrmining tif
     *    mbximum limit of tif dolumn sizf
     */
    publid int gftMbxFifldSizf() tirows SQLExdfption {
        rfturn mbxFifldSizf;
    }

    /**
     * Sfts tif mbximum numbfr of bytfs tibt dbn bf usfd for b dolumn
     * vbluf in tiis <dodf>RowSft</dodf> objfdt to tif givfn numbfr.
     * Tiis limit bpplifs only to dolumns tibt iold vblufs of tif
     * following typfs:  <dodf>BINARY</dodf>, <dodf>VARBINARY</dodf>,
     * <dodf>LONGVARBINARY</dodf>, <dodf>CHAR</dodf>, <dodf>VARCHAR</dodf>,
     * bnd <dodf>LONGVARCHAR</dodf>.  If tif limit is fxdffdfd, tif fxdfss
     * dbtb is silfntly disdbrdfd. For mbximum portbbility, it is bdvisbblf to
     * usf vblufs grfbtfr tibn 256.
     *
     * @pbrbm mbx bn <dodf>int</dodf> indidbting tif nfw mbximum dolumn sizf
     *     limit; zfro mfbns tibt tifrf is no limit
     * @tirows SQLExdfption if (1) bn frror oddurs intfrnblly sftting tif
     *     mbximum limit of tif dolumn sizf or (2) b sizf of lfss tibn 0 is sft
     */
    publid void sftMbxFifldSizf(int mbx) tirows SQLExdfption {
        if (mbx < 0) {
            tirow nfw SQLExdfption("Invblid mbx fifld sizf sft. Cbnnot bf of " +
            "vbluf: " + mbx);
        }
        mbxFifldSizf = mbx;
    }

    /**
     * Rftrifvfs tif mbximum numbfr of rows tibt tiis <dodf>RowSft</dodf> objfdt mby dontbin. If
     * tiis limit is fxdffdfd, tif fxdfss rows brf silfntly droppfd.
     *
     * @rfturn bn <dodf>int</dodf> indidbting tif durrfnt mbximum numbfr of
     *     rows; zfro mfbns tibt tifrf is no limit
     * @tirows SQLExdfption if bn frror oddurs intfrnblly dftfrmining tif
     *     mbximum limit of rows tibt b <dodf>Rowsft</dodf> objfdt dbn dontbin
     */
    publid int gftMbxRows() tirows SQLExdfption {
        rfturn mbxRows;
    }

    /**
     * Sfts tif mbximum numbfr of rows tibt tiis <dodf>RowSft</dodf> objfdt mby dontbin to
     * tif givfn numbfr. If tiis limit is fxdffdfd, tif fxdfss rows brf
     * silfntly droppfd.
     *
     * @pbrbm mbx bn <dodf>int</dodf> indidbting tif durrfnt mbximum numbfr
     *     of rows; zfro mfbns tibt tifrf is no limit
     * @tirows SQLExdfption if bn frror oddurs intfrnblly sftting tif
     *     mbximum limit on tif numbfr of rows tibt b JDBC <dodf>RowSft</dodf> objfdt
     *     dbn dontbin; or if <i>mbx</i> is lfss tibn <dodf>0</dodf>; or
     *     if <i>mbx</i> is lfss tibn tif <dodf>fftdiSizf</dodf> of tif
     *     <dodf>RowSft</dodf>
     */
    publid void sftMbxRows(int mbx) tirows SQLExdfption {
        if (mbx < 0) {
            tirow nfw SQLExdfption("Invblid mbx row sizf sft. Cbnnot bf of " +
                "vbluf: " + mbx);
        } flsf if (mbx < tiis.gftFftdiSizf()) {
            tirow nfw SQLExdfption("Invblid mbx row sizf sft. Cbnnot bf lfss " +
                "tibn tif fftdiSizf.");
        }
        tiis.mbxRows = mbx;
    }

    /**
     * Sfts to tif givfn <dodf>boolfbn</dodf> wiftifr or not tif drivfr will
     * sdbn for fsdbpf syntbx bnd do fsdbpf substitution bfforf sfnding SQL
     * stbtfmfnts to tif dbtbbbsf. Tif dffbult is for tif drivfr to do fsdbpf
     * prodfssing.
     * <P>
     * Notf: Sindf <dodf>PrfpbrfdStbtfmfnt</dodf> objfdts ibvf usublly bffn
     * pbrsfd prior to mbking tiis dbll, disbbling fsdbpf prodfssing for
     * prfpbrfd stbtfmfnts will likfly ibvf no ffffdt.
     *
     * @pbrbm fnbblf <dodf>truf</dodf> to fnbblf fsdbpf prodfssing;
     *     <dodf>fblsf</dodf> to disbblf it
     * @tirows SQLExdfption if bn frror oddurs sftting tif undfrlying JDBC
     * tfdinology-fnbblfd drivfr to prodfss tif fsdbpf syntbx
     */
    publid void sftEsdbpfProdfssing(boolfbn fnbblf) tirows SQLExdfption {
        fsdbpfProdfssing = fnbblf;
    }

    /**
     * Rftrifvfs tif mbximum numbfr of sfdonds tif drivfr will wbit for b
     * qufry to fxfdutf. If tif limit is fxdffdfd, bn <dodf>SQLExdfption</dodf>
     * is tirown.
     *
     * @rfturn tif durrfnt qufry timfout limit in sfdonds; zfro mfbns tibt
     *     tifrf is no limit
     * @tirows SQLExdfption if bn frror oddurs in dftfrmining tif qufry
     *     timf-out vbluf
     */
    publid int gftQufryTimfout() tirows SQLExdfption {
        rfturn qufryTimfout;
    }

    /**
     * Sfts to tif givfn numbfr tif mbximum numbfr of sfdonds tif drivfr will
     * wbit for b qufry to fxfdutf. If tif limit is fxdffdfd, bn
     * <dodf>SQLExdfption</dodf> is tirown.
     *
     * @pbrbm sfdonds tif nfw qufry timf-out limit in sfdonds; zfro mfbns tibt
     *     tifrf is no limit; must not bf lfss tibn zfro
     * @tirows SQLExdfption if bn frror oddurs sftting tif qufry
     *     timf-out or if tif qufry timf-out vbluf is lfss tibn 0
     */
    publid void sftQufryTimfout(int sfdonds) tirows SQLExdfption {
        if (sfdonds < 0) {
            tirow nfw SQLExdfption("Invblid qufry timfout vbluf sft. Cbnnot bf " +
            "of vbluf: " + sfdonds);
        }
        tiis.qufryTimfout = sfdonds;
    }

    /**
     * Rftrifvfs b <dodf>boolfbn</dodf> indidbting wiftifr rows mbrkfd
     * for dflftion bppfbr in tif sft of durrfnt rows.
     * Tif dffbult vbluf is <dodf>fblsf</dodf>.
     * <P>
     * Notf: Allowing dflftfd rows to rfmbin visiblf domplidbtfs tif bfibvior
     * of somf of tif mftiods.  Howfvfr, most <dodf>RowSft</dodf> objfdt usfrs
     * dbn simply ignorf tiis fxtrb dftbil bfdbusf only sopiistidbtfd
     * bpplidbtions will likfly wbnt to tbkf bdvbntbgf of tiis ffbturf.
     *
     * @rfturn <dodf>truf</dodf> if dflftfd rows brf visiblf;
     *         <dodf>fblsf</dodf> otifrwisf
     * @tirows SQLExdfption if bn frror oddurs dftfrmining if dflftfd rows
     * brf visiblf or not
     * @sff #sftSiowDflftfd
     */
    publid boolfbn gftSiowDflftfd() tirows SQLExdfption {
        rfturn siowDflftfd;
    }

    /**
     * Sfts tif propfrty <dodf>siowDflftfd</dodf> to tif givfn
     * <dodf>boolfbn</dodf> vbluf, wiidi dftfrminfs wiftifr
     * rows mbrkfd for dflftion bppfbr in tif sft of durrfnt rows.
     *
     * @pbrbm vbluf <dodf>truf</dodf> if dflftfd rows siould bf siown;
     *     <dodf>fblsf</dodf> otifrwisf
     * @tirows SQLExdfption if bn frror oddurs sftting wiftifr dflftfd
     *     rows brf visiblf or not
     * @sff #gftSiowDflftfd
     */
    publid void sftSiowDflftfd(boolfbn vbluf) tirows SQLExdfption {
        siowDflftfd = vbluf;
    }

    /**
     * Asdfrtbins wiftifr fsdbpf prodfssing is fnbblfd for tiis
     * <dodf>RowSft</dodf> objfdt.
     *
     * @rfturn <dodf>truf</dodf> if fsdbpf prodfssing is turnfd on;
     *         <dodf>fblsf</dodf> otifrwisf
     * @tirows SQLExdfption if bn frror oddurs dftfrmining if fsdbpf
     *     prodfssing is fnbblfd or not or if tif intfrnbl fsdbpf
     *     prodfssing triggfr ibs not bffn fnbblfd
     */
    publid boolfbn gftEsdbpfProdfssing() tirows SQLExdfption {
        rfturn fsdbpfProdfssing;
    }

    /**
     * Givfs tif drivfr b pfrformbndf iint bs to tif dirfdtion in
     * wiidi tif rows in tiis <dodf>RowSft</dodf> objfdt will bf
     * prodfssfd.  Tif drivfr mby ignorf tiis iint.
     * <P>
     * A <dodf>RowSft</dodf> objfdt inifrits tif dffbult propfrtifs of tif
     * <dodf>RfsultSft</dodf> objfdt from wiidi it got its dbtb.  Tibt
     * <dodf>RfsultSft</dodf> objfdt's dffbult fftdi dirfdtion is sft by
     * tif <dodf>Stbtfmfnt</dodf> objfdt tibt drfbtfd it.
     * <P>
     * Tiis mftiod bpplifs to b <dodf>RowSft</dodf> objfdt only wiilf it is
     * donnfdtfd to b dbtbbbsf using b JDBC drivfr.
     * <p>
     * A <dodf>RowSft</dodf> objfdt mby usf tiis mftiod bt bny timf to dibngf
     * its sftting for tif fftdi dirfdtion.
     *
     * @pbrbm dirfdtion onf of <dodf>RfsultSft.FETCH_FORWARD</dodf>,
     *                  <dodf>RfsultSft.FETCH_REVERSE</dodf>, or
     *                  <dodf>RfsultSft.FETCH_UNKNOWN</dodf>
     * @tirows SQLExdfption if (1) tif <dodf>RowSft</dodf> typf is
     *     <dodf>TYPE_FORWARD_ONLY</dodf> bnd tif givfn fftdi dirfdtion is not
     *     <dodf>FETCH_FORWARD</dodf> or (2) tif givfn fftdi dirfdtion is not
     *     onf of tif following:
     *        RfsultSft.FETCH_FORWARD,
     *        RfsultSft.FETCH_REVERSE, or
     *        RfsultSft.FETCH_UNKNOWN
     * @sff #gftFftdiDirfdtion
     */
    publid void sftFftdiDirfdtion(int dirfdtion) tirows SQLExdfption {
        // Cibngfd tif dondition difdking to tif bflow bs tifrf wfrf two
        // donditions tibt ibd to bf difdkfd
        // 1. RowSft is TYPE_FORWARD_ONLY bnd dirfdtion is not FETCH_FORWARD
        // 2. Dirfdtion is not onf of tif vblid vblufs

        if (((gftTypf() == RfsultSft.TYPE_FORWARD_ONLY) && (dirfdtion != RfsultSft.FETCH_FORWARD)) ||
            ((dirfdtion != RfsultSft.FETCH_FORWARD) &&
            (dirfdtion != RfsultSft.FETCH_REVERSE) &&
            (dirfdtion != RfsultSft.FETCH_UNKNOWN))) {
            tirow nfw SQLExdfption("Invblid Fftdi Dirfdtion");
        }
        fftdiDir = dirfdtion;
    }

    /**
     * Rftrifvfs tiis <dodf>RowSft</dodf> objfdt's durrfnt sftting for tif
     * fftdi dirfdtion. Tif dffbult typf is <dodf>RfsultSft.FETCH_FORWARD</dodf>
     *
     * @rfturn onf of <dodf>RfsultSft.FETCH_FORWARD</dodf>,
     *                  <dodf>RfsultSft.FETCH_REVERSE</dodf>, or
     *                  <dodf>RfsultSft.FETCH_UNKNOWN</dodf>
     * @tirows SQLExdfption if bn frror oddurs in dftfrmining tif
     *     durrfnt fftdi dirfdtion for fftdiing rows
     * @sff #sftFftdiDirfdtion
     */
    publid int gftFftdiDirfdtion() tirows SQLExdfption {

        //Addfd tif following dodf to tirow b
        //SQL Exdfption if tif fftdiDir is not
        //sft propfrly.Bug id:4914155

        // Tiis difdking is not nfdfssbry!

        /*
         if((fftdiDir != RfsultSft.FETCH_FORWARD) &&
           (fftdiDir != RfsultSft.FETCH_REVERSE) &&
           (fftdiDir != RfsultSft.FETCH_UNKNOWN)) {
            tirow nfw SQLExdfption("Fftdi Dirfdtion Invblid");
         }
         */
        rfturn (fftdiDir);
    }

    /**
     * Sfts tif fftdi sizf for tiis <dodf>RowSft</dodf> objfdt to tif givfn numbfr of
     * rows.  Tif fftdi sizf givfs b JDBC tfdinology-fnbblfd drivfr ("JDBC drivfr")
     * b iint bs to tif
     * numbfr of rows tibt siould bf fftdifd from tif dbtbbbsf wifn morf rows
     * brf nffdfd for tiis <dodf>RowSft</dodf> objfdt. If tif fftdi sizf spfdififd
     * is zfro, tif drivfr ignorfs tif vbluf bnd is frff to mbkf its own bfst gufss
     * bs to wibt tif fftdi sizf siould bf.
     * <P>
     * A <dodf>RowSft</dodf> objfdt inifrits tif dffbult propfrtifs of tif
     * <dodf>RfsultSft</dodf> objfdt from wiidi it got its dbtb.  Tibt
     * <dodf>RfsultSft</dodf> objfdt's dffbult fftdi sizf is sft by
     * tif <dodf>Stbtfmfnt</dodf> objfdt tibt drfbtfd it.
     * <P>
     * Tiis mftiod bpplifs to b <dodf>RowSft</dodf> objfdt only wiilf it is
     * donnfdtfd to b dbtbbbsf using b JDBC drivfr.
     * For donnfdtfd <dodf>RowSft</dodf> implfmfntbtions sudi bs
     * <dodf>JdbdRowSft</dodf>, tiis mftiod ibs b dirfdt bnd immfdibtf ffffdt
     * on tif undfrlying JDBC drivfr.
     * <P>
     * A <dodf>RowSft</dodf> objfdt mby usf tiis mftiod bt bny timf to dibngf
     * its sftting for tif fftdi sizf.
     * <p>
     * For <dodf>RowSft</dodf> implfmfntbtions sudi bs
     * <dodf>CbdifdRowSft</dodf>, wiidi opfrbtf in b disdonnfdtfd fnvironmfnt,
     * tif <dodf>SyndProvidfr</dodf> objfdt bfing usfd
     * mby lfvfrbgf tif fftdi sizf to poll tif dbtb sourdf bnd
     * rftrifvf b numbfr of rows tibt do not fxdffd tif fftdi sizf bnd tibt mby
     * form b subsft of tif bdtubl rows rfturnfd by tif originbl qufry. Tiis is
     * bn implfmfntbtion vbribndf dftfrminfd by tif spfdifid <dodf>SyndProvidfr</dodf>
     * objfdt fmployfd by tif disdonnfdtfd <dodf>RowSft</dodf> objfdt.
     *
     * @pbrbm rows tif numbfr of rows to fftdi; <dodf>0</dodf> to lft tif
     *        drivfr dfdidf wibt tif bfst fftdi sizf is; must not bf lfss
     *        tibn <dodf>0</dodf> or morf tibn tif mbximum numbfr of rows
     *        bllowfd for tiis <dodf>RowSft</dodf> objfdt (tif numbfr rfturnfd
     *        by b dbll to tif mftiod {@link #gftMbxRows})
     * @tirows SQLExdfption if tif spfdififd fftdi sizf is lfss tibn <dodf>0</dodf>
     *        or morf tibn tif limit for tif mbximum numbfr of rows
     * @sff #gftFftdiSizf
     */
    publid void sftFftdiSizf(int rows) tirows SQLExdfption {
        //Addfd tiis difdking bs mbxRows dbn bf 0 wifn tiis fundtion is dbllfd
        //mbxRows = 0 mfbns rowsft dbn iold bny numbfr of rows, os tiis difdking
        // is nffdfd to tbkf dbrf of tiis dondition.
        if (gftMbxRows() == 0 && rows >= 0)  {
            fftdiSizf = rows;
            rfturn;
        }
        if ((rows < 0) || (rows > gftMbxRows())) {
            tirow nfw SQLExdfption("Invblid fftdi sizf sft. Cbnnot bf of " +
            "vbluf: " + rows);
        }
        fftdiSizf = rows;
    }

    /**
     * Rfturns tif fftdi sizf for tiis <dodf>RowSft</dodf> objfdt. Tif dffbult
     * vbluf is zfro.
     *
     * @rfturn tif numbfr of rows suggfstfd bs tif fftdi sizf wifn tiis <dodf>RowSft</dodf> objfdt
     *     nffds morf rows from tif dbtbbbsf
     * @tirows SQLExdfption if bn frror oddurs dftfrmining tif numbfr of rows in tif
     *     durrfnt fftdi sizf
     * @sff #sftFftdiSizf
     */
    publid int gftFftdiSizf() tirows SQLExdfption {
        rfturn fftdiSizf;
    }

    /**
     * Rfturns tif dondurrfndy for tiis <dodf>RowSft</dodf> objfdt.
     * Tif dffbult is <dodf>CONCUR_UPDATABLE</dodf> for boti donnfdtfd bnd
     * disdonnfdtfd <dodf>RowSft</dodf> objfdts.
     * <P>
     * An bpplidbtion dbn dbll tif mftiod <dodf>sftCondurrfndy</dodf> bt bny timf
     * to dibngf b <dodf>RowSft</dodf> objfdt's dondurrfndy.
     *
     * @rfturn tif dondurrfndy typf for tiis <dodf>RowSft</dodf>
     *     objfdt, wiidi must bf onf of tif following:
     *     <dodf>RfsultSft.CONCUR_READ_ONLY</dodf> or
     *     <dodf>RfsultSft.CONCUR_UPDATABLE</dodf>
     * @tirows SQLExdfption if bn frror oddurs gftting tif dondurrfndy
     *     of tiis <dodf>RowSft</dodf> objfdt
     * @sff #sftCondurrfndy
     * @sff #isRfbdOnly
     */
    publid int gftCondurrfndy() tirows SQLExdfption {
        rfturn dondurrfndy;
    }

    //-----------------------------------------------------------------------
    // Pbrbmftfrs
    //-----------------------------------------------------------------------

    /**
     * Cifdks tif givfn indfx to sff wiftifr it is lfss tibn <dodf>1</dodf> bnd
     * tirows bn <dodf>SQLExdfption</dodf> objfdt if it is.
     * <P>
     * Tiis mftiod is dbllfd by mbny mftiods intfrnblly; it is nfvfr
     * dbllfd by bn bpplidbtion dirfdtly.
     *
     * @pbrbm idx bn <dodf>int</dodf> indidbting wiidi pbrbmftfr is to bf
     *     difdkfd; tif first pbrbmftfr is <dodf>1</dodf>
     * @tirows SQLExdfption if tif pbrbmftfr is lfss tibn <dodf>1</dodf>
     */
    privbtf void difdkPbrbmIndfx(int idx) tirows SQLExdfption {
        if ((idx < 1)) {
            tirow nfw SQLExdfption("Invblid Pbrbmftfr Indfx");
        }
    }

    //---------------------------------------------------------------------
    // sfttfr mftiods for sftting tif pbrbmftfrs in b <dodf>RowSft</dodf> objfdt's dommbnd
    //---------------------------------------------------------------------

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     * Notf tibt tif pbrbmftfr's SQL typf must bf spfdififd using onf of tif
         * typf dodfs dffinfd in <dodf>jbvb.sql.Typfs</dodf>.  Tiis SQL typf is
     * spfdififd in tif sfdond pbrbmftfr.
     * <p>
     * Notf tibt tif sfdond pbrbmftfr tflls tif DBMS tif dbtb typf of tif vbluf bfing
     * sft to <dodf>NULL</dodf>. Somf DBMSs rfquirf tiis informbtion, so it is rfquirfd
     * in ordfr to mbkf dodf morf portbblf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftNull</dodf>
     * ibs bffn dbllfd will rfturn bn <dodf>Objfdt</dodf> brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is <dodf>null</dodf>.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>sqlTypf</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif sfdond plbdfioldfr pbrbmftfr is bfing sft to
     * <dodf>null</dodf>, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm sqlTypf bn <dodf>int</dodf> tibt is onf of tif SQL typf dodfs
     *        dffinfd in tif dlbss {@link jbvb.sql.Typfs}. If b non-stbndbrd
     *        <i>sqlTypf</i> is supplifd, tiis mftiod will not tirow b
     *        <dodf>SQLExdfption</dodf>. Tiis bllows implidit support for
     *        non-stbndbrd SQL typfs.
     * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs or tif givfn
     *        pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftNull(int pbrbmftfrIndfx, int sqlTypf) tirows SQLExdfption {
        Objfdt nullVbl[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        nullVbl = nfw Objfdt[2];
        nullVbl[0] = null;
        nullVbl[1] = Intfgfr.vblufOf(sqlTypf);

       if (pbrbms == null){
            tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftNull");
       }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nullVbl);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     *
     * Altiougi tiis vfrsion of tif  mftiod <dodf>sftNull</dodf> is intfndfd
     * for usfr-dffinfd
     * bnd <dodf>REF</dodf> pbrbmftfrs, tiis mftiod mby bf usfd to sft b null
     * pbrbmftfr for bny JDBC typf. Tif following brf usfr-dffinfd typfs:
     * <dodf>STRUCT</dodf>, <dodf>DISTINCT</dodf>, bnd <dodf>JAVA_OBJECT</dodf>,
     * bnd nbmfd brrby typfs.
     *
     * <P><B>Notf:</B> To bf portbblf, bpplidbtions must givf tif
     * SQL typf dodf bnd tif fully qublififd SQL typf nbmf wifn spfdifying
     * b <dodf>NULL</dodf> usfr-dffinfd or <dodf>REF</dodf> pbrbmftfr.
     * In tif dbsf of b usfr-dffinfd typf, tif nbmf is tif typf nbmf of
     * tif pbrbmftfr itsflf.  For b <dodf>REF</dodf> pbrbmftfr, tif nbmf is
     * tif typf nbmf of tif rfffrfndfd typf.  If b JDBC tfdinology-fnbblfd
     * drivfr dofs not nffd tif typf dodf or typf nbmf informbtion,
     * it mby ignorf it.
     * <P>
     * If tif pbrbmftfr dofs not ibvf b usfr-dffinfd or <dodf>REF</dodf> typf,
     * tif givfn <dodf>typfNbmf</dodf> pbrbmftfr is ignorfd.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftNull</dodf>
     * ibs bffn dbllfd will rfturn bn <dodf>Objfdt</dodf> brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is <dodf>null</dodf>.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>sqlTypf</i>, bnd tif tiird
     * flfmfnt is tif vbluf sft for <i>typfNbmf</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif sfdond plbdfioldfr pbrbmftfr is bfing sft to
     * <dodf>null</dodf>, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm sqlTypf b vbluf from <dodf>jbvb.sql.Typfs</dodf>
     * @pbrbm typfNbmf tif fully qublififd nbmf of bn SQL usfr-dffinfd typf,
     *                 wiidi is ignorfd if tif pbrbmftfr is not b usfr-dffinfd
     *                 typf or <dodf>REF</dodf> vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif givfn pbrbmftfr indfx
     *            is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftNull(int pbrbmftfrIndfx, int sqlTypf, String typfNbmf)
        tirows SQLExdfption {

        Objfdt nullVbl[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        nullVbl = nfw Objfdt[3];
        nullVbl[0] = null;
        nullVbl[1] = Intfgfr.vblufOf(sqlTypf);
        nullVbl[2] = typfNbmf;

       if(pbrbms == null){
            tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftNull");
       }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nullVbl);
    }


    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>boolfbn</dodf> in tif
     * Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>BIT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf>, <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftBoolfbn(int pbrbmftfrIndfx, boolfbn x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);

       if(pbrbms == null){
            tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftNull");
       }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Boolfbn.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>bytf</dodf> in tif Jbvb
     * progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>TINYINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftBytf(int pbrbmftfrIndfx, bytf x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);

       if(pbrbms == null){
            tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftBytf");
       }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Bytf.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>siort</dodf> in tif
     * Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>SMALLINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftSiort(int pbrbmftfrIndfx, siort x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftSiort");
        }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Siort.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to bn <dodf>int</dodf> in tif Jbvb
     * progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>INTEGER</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftInt(int pbrbmftfrIndfx, int x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftInt");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Intfgfr.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>long</dodf> in tif Jbvb
     * progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>BIGINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftLong(int pbrbmftfrIndfx, long x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftLong");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Long.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>flobt</dodf> in tif
     * Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>FLOAT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftFlobt(int pbrbmftfrIndfx, flobt x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftFlobt");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Flobt.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>doublf</dodf> in tif
     * Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>DOUBLE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftDoublf(int pbrbmftfrIndfx, doublf x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftDoublf");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), Doublf.vblufOf(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     * <dodf>jbvb.lbng.BigDfdimbl</dodf> vbluf.  Tif drivfr donvfrts tiis to
     * bn SQL <dodf>NUMERIC</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * Notf: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftBigDfdimbl(int pbrbmftfrIndfx, jbvb.mbti.BigDfdimbl x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftBigDfdimbl");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>String</dodf>
     * vbluf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>VARCHAR</dodf> or <dodf>LONGVARCHAR</dodf> vbluf
     * (dfpfnding on tif brgumfnt's sizf rflbtivf to tif drivfr's limits
     * on <dodf>VARCHAR</dodf> vblufs) wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftString(int pbrbmftfrIndfx, String x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftString");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn brrby of bytfs.
     * Tif drivfr donvfrts tiis to bn SQL
     * <dodf>VARBINARY</dodf> or <dodf>LONGVARBINARY</dodf> vbluf
     * (dfpfnding on tif brgumfnt's sizf rflbtivf to tif drivfr's limits
     * on <dodf>VARBINARY</dodf> vblufs) wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftBytfs(int pbrbmftfrIndfx, bytf x[]) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftBytfs");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf>
     * vbluf. Tif drivfr donvfrts tiis to bn SQL
     * <dodf>DATE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion
     * of <dodf>sftDbtf</dodf>
     * ibs bffn dbllfd will rfturn bn brrby witi tif vbluf to bf sft for
     * plbdfioldfr pbrbmftfr numbfr <i>pbrbmftfrIndfx</i> bfing tif <dodf>Dbtf</dodf>
     * objfdt supplifd bs tif sfdond pbrbmftfr.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftDbtf");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf>
     * vbluf.  Tif drivfr donvfrts tiis to bn SQL <dodf>TIME</dodf> vbluf
     * wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion
     * of tif mftiod <dodf>sftTimf</dodf>
     * ibs bffn dbllfd will rfturn bn brrby of tif pbrbmftfrs tibt ibvf bffn sft.
     * Tif pbrbmftfr to bf sft for pbrbmftfr plbdfioldfr numbfr <i>pbrbmftfrIndfx</i>
     * will bf tif <dodf>Timf</dodf> objfdt tibt wbs sft bs tif sfdond pbrbmftfr
     * to tiis mftiod.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>jbvb.sql.Timf</dodf> objfdt, wiidi is to bf sft bs tif vbluf
     *              for plbdfioldfr pbrbmftfr <i>pbrbmftfrIndfx</i>
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftTimf");
        }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     * <dodf>jbvb.sql.Timfstbmp</dodf> vbluf.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>TIMESTAMP</dodf> vbluf wifn it
     * sfnds it to tif dbtbbbsf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftTimfstbmp</dodf>
     * ibs bffn dbllfd will rfturn bn brrby witi tif vbluf for pbrbmftfr plbdfioldfr
     * numbfr <i>pbrbmftfrIndfx</i> bfing tif <dodf>Timfstbmp</dodf> objfdt tibt wbs
     * supplifd bs tif sfdond pbrbmftfr to tiis mftiod.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftTimfstbmp");
        }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt,
     * wiidi will ibvf tif spfdififd numbfr of bytfs.
     * Tif dontfnts of tif strfbm will bf rfbd bnd sfnt to tif dbtbbbsf.
     * Tiis mftiod tirows bn <dodf>SQLExdfption</dodf> objfdt if tif numbfr of bytfs
     * rfbd bnd sfnt to tif dbtbbbsf is not fqubl to <i>lfngti</i>.
     * <P>
     * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. A JDBC tfdinology-fnbblfd
     * drivfr will rfbd tif dbtb from tif strfbm bs nffdfd until it rfbdifs
     * fnd-of-filf. Tif drivfr will do bny nfdfssbry donvfrsion from ASCII to
     * tif dbtbbbsf <dodf>CHAR</dodf> formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn bf fitifr b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * Notf: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr <dodf>sftAsdiiStrfbm</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  Tif flfmfnt in tif brrby tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.io.InputStrfbm</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>lfngti</i>.
     * Tif tiird flfmfnt is bn intfrnbl <dodf>BbsfRowSft</dodf> donstbnt
     * spfdifying tibt tif strfbm pbssfd to tiis mftiod is bn ASCII strfbm.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif input strfbm bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm. Tiis is tif numbfr of bytfs
     *       tif drivfr will sfnd to tif DBMS; lfngtis of 0 or lfss brf
     *       brf undffinfd but will dbusf bn invblid lfngti fxdfption to bf
     *       tirown in tif undfrlying JDBC drivfr.
     * @tirows SQLExdfption if bn frror oddurs, tif pbrbmftfr indfx is out of bounds,
     *       or wifn donnfdtfd to b dbtb sourdf, tif numbfr of bytfs tif drivfr rfbds
     *       bnd sfnds to tif dbtbbbsf is not fqubl to tif numbfr of bytfs spfdififd
     *       in <i>lfngti</i>
     * @sff #gftPbrbms
     */
    publid void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, int lfngti) tirows SQLExdfption {
        Objfdt bsdiiStrfbm[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        bsdiiStrfbm = nfw Objfdt[3];
        bsdiiStrfbm[0] = x;
        bsdiiStrfbm[1] = Intfgfr.vblufOf(lfngti);
        bsdiiStrfbm[2] = Intfgfr.vblufOf(ASCII_STREAM_PARAM);

        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftAsdiiStrfbm");
        }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), bsdiiStrfbm);
    }

  /**
   * Sfts tif dfsignbtfd pbrbmftfr in tiis <dodf>RowSft</dodf> objfdt's dommbnd
   * to tif givfn input strfbm.
   * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
   * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
   * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
   * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
   * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
   *
   * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
   * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
   * stbndbrd intfrfbdf.
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftAsdiiStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
   */
  publid void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
                      tirows SQLExdfption {
      tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.io.InputStrfbm</dodf>
     * objfdt, wiidi will ibvf tif spfdififd numbfr of bytfs.
     * Tif dontfnts of tif strfbm will bf rfbd bnd sfnt to tif dbtbbbsf.
     * Tiis mftiod tirows bn <dodf>SQLExdfption</dodf> objfdt if tif numbfr of bytfs
     * rfbd bnd sfnt to tif dbtbbbsf is not fqubl to <i>lfngti</i>.
     * <P>
     * Wifn b vfry lbrgf binbry vbluf is input to b
     * <dodf>LONGVARBINARY</dodf> pbrbmftfr, it mby bf morf prbdtidbl
     * to sfnd it vib b <dodf>jbvb.io.InputStrfbm</dodf> objfdt.
     * A JDBC tfdinology-fnbblfd drivfr will rfbd tif dbtb from tif
     * strfbm bs nffdfd until it rfbdifs fnd-of-filf.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn bf fitifr b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     *<P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr <dodf>sftBinbryStrfbm</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.io.InputStrfbm</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>lfngti</i>.
     * Tif tiird flfmfnt is bn intfrnbl <dodf>BbsfRowSft</dodf> donstbnt
     * spfdifying tibt tif strfbm pbssfd to tiis mftiod is b binbry strfbm.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif input strfbm bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif input strfbm tibt dontbins tif binbry vbluf to bf sft
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm; lfngtis of 0 or lfss brf
     *         brf undffinfd but will dbusf bn invblid lfngti fxdfption to bf
     *         tirown in tif undfrlying JDBC drivfr.
     * @tirows SQLExdfption if bn frror oddurs, tif pbrbmftfr indfx is out of bounds,
     *         or wifn donnfdtfd to b dbtb sourdf, tif numbfr of bytfs tif drivfr
     *         rfbds bnd sfnds to tif dbtbbbsf is not fqubl to tif numbfr of bytfs
     *         spfdififd in <i>lfngti</i>
     * @sff #gftPbrbms
     */
    publid void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, int lfngti) tirows SQLExdfption {
        Objfdt binbryStrfbm[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        binbryStrfbm = nfw Objfdt[3];
        binbryStrfbm[0] = x;
        binbryStrfbm[1] = Intfgfr.vblufOf(lfngti);
        binbryStrfbm[2] = Intfgfr.vblufOf(BINARY_STREAM_PARAM);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftBinbryStrfbm");
        }

        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), binbryStrfbm);
    }


   /**
   * Sfts tif dfsignbtfd pbrbmftfr in tiis <dodf>RowSft</dodf> objfdt's dommbnd
   * to tif givfn input strfbm.
   * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
   * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
   * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
   * strfbm bs nffdfd until fnd-of-filf is rfbdifd.
   *
   * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
   * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
   * stbndbrd intfrfbdf.
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftBinbryStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
   */
  publid void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
                              tirows SQLExdfption {
      tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt, wiidi will ibvf tif spfdififd
     * numbfr of bytfs. Tif dontfnts of tif strfbm will bf rfbd bnd sfnt
     * to tif dbtbbbsf.
     * Tiis mftiod tirows bn <dodf>SQLExdfption</dodf> if tif numbfr of bytfs
     * rfbd bnd sfnt to tif dbtbbbsf is not fqubl to <i>lfngti</i>.
     * <P>
     * Wifn b vfry lbrgf Unidodf vbluf is input to b
     * <dodf>LONGVARCHAR</dodf> pbrbmftfr, it mby bf morf prbdtidbl
     * to sfnd it vib b <dodf>jbvb.io.InputStrfbm</dodf> objfdt.
     * A JDBC tfdinology-fnbblfd drivfr will rfbd tif dbtb from tif
     * strfbm bs nffdfd, until it rfbdifs fnd-of-filf.
     * Tif drivfr will do bny nfdfssbry donvfrsion from Unidodf to tif
     * dbtbbbsf <dodf>CHAR</dodf> formbt.
     * Tif bytf formbt of tif Unidodf strfbm must bf Jbvb UTF-8, bs
     * dffinfd in tif Jbvb Virtubl Mbdiinf Spfdifidbtion.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn bf fitifr b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P>
     * Tiis mftiod is dfprfdbtfd; tif mftiod <dodf>gftCibrbdtfrStrfbm</dodf>
     * siould bf usfd in its plbdf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr <dodf>sftUnidodfStrfbm</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.io.InputStrfbm</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>lfngti</i>.
     * Tif tiird flfmfnt is bn intfrnbl <dodf>BbsfRowSft</dodf> donstbnt
     * spfdifying tibt tif strfbm pbssfd to tiis mftiod is b Unidodf strfbm.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif input strfbm bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif <dodf>jbvb.io.InputStrfbm</dodf> objfdt tibt dontbins tif
     *          UNICODE pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif input strfbm
     * @tirows SQLExdfption if bn frror oddurs, tif pbrbmftfr indfx is out of bounds,
     *         or tif numbfr of bytfs tif drivfr rfbds bnd sfnds to tif dbtbbbsf is
     *         not fqubl to tif numbfr of bytfs spfdififd in <i>lfngti</i>
     * @dfprfdbtfd gftCibrbdtfrStrfbm siould bf usfd in its plbdf
     * @sff #gftPbrbms
     */
    @Dfprfdbtfd
    publid void sftUnidodfStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, int lfngti) tirows SQLExdfption {
        Objfdt unidodfStrfbm[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        unidodfStrfbm = nfw Objfdt[3];
        unidodfStrfbm[0] = x;
        unidodfStrfbm[1] = Intfgfr.vblufOf(lfngti);
        unidodfStrfbm[2] = Intfgfr.vblufOf(UNICODE_STREAM_PARAM);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftUnidodfStrfbm");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), unidodfStrfbm);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.io.Rfbdfr</dodf>
     * objfdt, wiidi will ibvf tif spfdififd numbfr of dibrbdtfrs. Tif
     * dontfnts of tif rfbdfr will bf rfbd bnd sfnt to tif dbtbbbsf.
     * Tiis mftiod tirows bn <dodf>SQLExdfption</dodf> if tif numbfr of bytfs
     * rfbd bnd sfnt to tif dbtbbbsf is not fqubl to <i>lfngti</i>.
     * <P>
     * Wifn b vfry lbrgf Unidodf vbluf is input to b
     * <dodf>LONGVARCHAR</dodf> pbrbmftfr, it mby bf morf prbdtidbl
     * to sfnd it vib b <dodf>Rfbdfr</dodf> objfdt.
     * A JDBC tfdinology-fnbblfd drivfr will rfbd tif dbtb from tif
     * strfbm bs nffdfd until it rfbdifs fnd-of-filf.
     * Tif drivfr will do bny nfdfssbry donvfrsion from Unidodf to tif
     * dbtbbbsf <dodf>CHAR</dodf> formbt.
     * Tif bytf formbt of tif Unidodf strfbm must bf Jbvb UTF-8, bs
     * dffinfd in tif Jbvb Virtubl Mbdiinf Spfdifidbtion.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn bf fitifr b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr
     * <dodf>sftCibrbdtfrStrfbm</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.io.Rfbdfr</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>lfngti</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif rfbdfr bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm rfbdfr tif <dodf>Rfbdfr</dodf> objfdt tibt dontbins tif
     *        Unidodf dbtb
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif strfbm; lfngtis of 0 or
     *        lfss brf undffinfd but will dbusf bn invblid lfngti fxdfption to
     *        bf tirown in tif undfrlying JDBC drivfr.
     * @tirows SQLExdfption if bn frror oddurs, tif pbrbmftfr indfx is out of bounds,
     *        or wifn donnfdtfd to b dbtb sourdf, tif numbfr of bytfs tif drivfr
     *        rfbds bnd sfnds to tif dbtbbbsf is not fqubl to tif numbfr of bytfs
     *        spfdififd in <i>lfngti</i>
     * @sff #gftPbrbms
     */
    publid void sftCibrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr rfbdfr, int lfngti) tirows SQLExdfption {
        Objfdt dibrStrfbm[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        dibrStrfbm = nfw Objfdt[2];
        dibrStrfbm[0] = rfbdfr;
        dibrStrfbm[1] = Intfgfr.vblufOf(lfngti);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftCibrbdtfrStrfbm");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), dibrStrfbm);
    }

   /**
   * Sfts tif dfsignbtfd pbrbmftfr in tiis <dodf>RowSft</dodf> objfdt's dommbnd
   * to tif givfn <dodf>Rfbdfr</dodf>
   * objfdt.
   * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
   * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
   * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
   * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
   * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
   *
   * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
   * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
   * stbndbrd intfrfbdf.
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt dontbins tif
   *        Unidodf dbtb
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
   */
  publid void sftCibrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr) tirows SQLExdfption {
      tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to bn <dodf>Objfdt</dodf> in tif Jbvb
     * progrbmming lbngubgf. Tif sfdond pbrbmftfr must bf bn
     * <dodf>Objfdt</dodf> typf.  For intfgrbl vblufs, tif
     * <dodf>jbvb.lbng</dodf> fquivblfnt
     * objfdts siould bf usfd. For fxbmplf, usf tif dlbss <dodf>Intfgfr</dodf>
     * for bn <dodf>int</dodf>.
     * <P>
     * Tif drivfr donvfrts tiis objfdt to tif spfdififd
     * tbrgft SQL typf bfforf sfnding it to tif dbtbbbsf.
     * If tif objfdt ibs b dustom mbpping (is of b dlbss implfmfnting
     * <dodf>SQLDbtb</dodf>), tif drivfr siould dbll tif mftiod
     * <dodf>SQLDbtb.writfSQL</dodf> to writf tif objfdt to tif SQL
     * dbtb strfbm. If, on tif otifr ibnd, tif objfdt is of b dlbss
     * implfmfnting <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,
     * <dodf>Strudt</dodf>, or <dodf>Arrby</dodf>,
     * tif drivfr siould pbss it to tif dbtbbbsf bs b vbluf of tif
     * dorrfsponding SQL typf.
     *
     * <p>Notf tibt tiis mftiod mby bf usfd to pbss dbtbbbsf-
     * spfdifid bbstrbdt dbtb typfs.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftObjfdt</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>Objfdt</dodf> instbndf, bnd tif
     * sfdond flfmfnt is tif vbluf sft for <i>tbrgftSqlTypf</i>.  Tif
     * tiird flfmfnt is tif vbluf sft for <i>sdblf</i>, wiidi tif drivfr will
     * ignorf if tif typf of tif objfdt bfing sft is not
     * <dodf>jbvb.sql.Typfs.NUMERIC</dodf> or <dodf>jbvb.sql.Typfs.DECIMAL</dodf>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif objfdt bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     *<P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif <dodf>Objfdt</dodf> dontbining tif input pbrbmftfr vbluf;
     *        must bf bn <dodf>Objfdt</dodf> typf
     * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in <dodf>jbvb.sql.Typfs</dodf>)
     *        to bf sfnt to tif dbtbbbsf. Tif <dodf>sdblf</dodf> brgumfnt mby
     *        furtifr qublify tiis typf. If b non-stbndbrd <i>tbrgftSqlTypf</i>
     *        is supplifd, tiis mftiod will not tirow b <dodf>SQLExdfption</dodf>.
     *        Tiis bllows implidit support for non-stbndbrd SQL typfs.
     * @pbrbm sdblf for tif typfs <dodf>jbvb.sql.Typfs.DECIMAL</dodf> bnd
     *        <dodf>jbvb.sql.Typfs.NUMERIC</dodf>, tiis is tif numbfr
     *        of digits bftfr tif dfdimbl point.  For bll otifr typfs, tiis
     *        vbluf will bf ignorfd.
     * @tirows SQLExdfption if bn frror oddurs or tif pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf, int sdblf) tirows SQLExdfption {
        Objfdt obj[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        obj = nfw Objfdt[3];
        obj[0] = x;
        obj[1] = Intfgfr.vblufOf(tbrgftSqlTypf);
        obj[2] = Intfgfr.vblufOf(sdblf);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftObjfdt");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), obj);
    }

    /**
     * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn
     * <dodf>Objfdt</dodf> vbluf.
     * Tiis mftiod is likf <dodf>sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int
     * tbrgftSqlTypf, int sdblf)</dodf> fxdfpt tibt it bssumfs b sdblf of zfro.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftObjfdt</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>Objfdt</dodf> instbndf.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>tbrgftSqlTypf</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif objfdt bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif <dodf>Objfdt</dodf> dontbining tif input pbrbmftfr vbluf;
     *        must bf bn <dodf>Objfdt</dodf> typf
     * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in <dodf>jbvb.sql.Typfs</dodf>)
     *        to bf sfnt to tif dbtbbbsf. If b non-stbndbrd <i>tbrgftSqlTypf</i>
     *        is supplifd, tiis mftiod will not tirow b <dodf>SQLExdfption</dodf>.
     *        Tiis bllows implidit support for non-stbndbrd SQL typfs.
     * @tirows SQLExdfption if bn frror oddurs or tif pbrbmftfr indfx
     *        is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf) tirows SQLExdfption {
        Objfdt obj[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        obj = nfw Objfdt[2];
        obj[0] = x;
        obj[1] = Intfgfr.vblufOf(tbrgftSqlTypf);
        if (pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftObjfdt");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), obj);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to bn <dodf>Objfdt</dodf> in tif Jbvb
     * progrbmming lbngubgf. Tif sfdond pbrbmftfr must bf bn
     * <dodf>Objfdt</dodf>
     * typf.  For intfgrbl vblufs, tif <dodf>jbvb.lbng</dodf> fquivblfnt
     * objfdts siould bf usfd. For fxbmplf, usf tif dlbss <dodf>Intfgfr</dodf>
     * for bn <dodf>int</dodf>.
     * <P>
     * Tif JDBC spfdifidbtion dffinfs b stbndbrd mbpping from
     * Jbvb <dodf>Objfdt</dodf> typfs to SQL typfs.  Tif drivfr will
     * usf tiis stbndbrd mbpping to  donvfrt tif givfn objfdt
     * to its dorrfsponding SQL typf bfforf sfnding it to tif dbtbbbsf.
     * If tif objfdt ibs b dustom mbpping (is of b dlbss implfmfnting
     * <dodf>SQLDbtb</dodf>), tif drivfr siould dbll tif mftiod
     * <dodf>SQLDbtb.writfSQL</dodf> to writf tif objfdt to tif SQL
     * dbtb strfbm.
     * <P>
     * If, on tif otifr ibnd, tif objfdt is of b dlbss
     * implfmfnting <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,
     * <dodf>Strudt</dodf>, or <dodf>Arrby</dodf>,
     * tif drivfr siould pbss it to tif dbtbbbsf bs b vbluf of tif
     * dorrfsponding SQL typf.
     * <P>
     * Tiis mftiod tirows bn fxdfption if tifrf
     * is bn bmbiguity, for fxbmplf, if tif objfdt is of b dlbss
     * implfmfnting morf tibn onf intfrfbdf.
     * <P>
     * Notf tibt tiis mftiod mby bf usfd to pbss dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Aftfr tiis mftiod ibs bffn dbllfd, b dbll to tif
     * mftiod <dodf>gftPbrbms</dodf>
     * will rfturn bn objfdt brrby of tif durrfnt dommbnd pbrbmftfrs, wiidi will
     * indludf tif <dodf>Objfdt</dodf> sft for plbdfioldfr pbrbmftfr numbfr
     * <dodf>pbrbmftfrIndfx</dodf>.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
     * @tirows SQLExdfption if bn frror oddurs tif
     *                         pbrbmftfr indfx is out of bounds, or tifrf
     *                         is bmbiguity in tif implfmfntbtion of tif
     *                         objfdt bfing sft
     * @sff #gftPbrbms
     */
    publid void sftObjfdt(int pbrbmftfrIndfx, Objfdt x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if (pbrbms == null) {
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftObjfdt");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), x);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rff</dodf> objfdt in
     * tif Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>REF</dodf> vbluf wifn it sfnds it to tif dbtbbbsf. Intfrnblly, tif
     * <dodf>Rff</dodf> is rfprfsfntfd bs b <dodf>SfriblRff</dodf> to fnsurf
     * sfriblizbbility.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <p>
     * Aftfr tiis mftiod ibs bffn dbllfd, b dbll to tif
     * mftiod <dodf>gftPbrbms</dodf>
     * will rfturn bn objfdt brrby of tif durrfnt dommbnd pbrbmftfrs, wiidi will
     * indludf tif <dodf>Rff</dodf> objfdt sft for plbdfioldfr pbrbmftfr numbfr
     * <dodf>pbrbmftfrIndfx</dodf>.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm rff b <dodf>Rff</dodf> objfdt rfprfsfnting bn SQL <dodf>REF</dodf>
     *         vbluf; dbnnot bf null
     * @tirows SQLExdfption if bn frror oddurs; tif pbrbmftfr indfx is out of
     *         bounds or tif <dodf>Rff</dodf> objfdt is <dodf>null</dodf>; or
     *         tif <dodf>Rff</dodf> objfdt rfturns b <dodf>null</dodf> bbsf typf
     *         nbmf.
     * @sff #gftPbrbms
     * @sff jbvbx.sql.rowsft.sfribl.SfriblRff
     */
    publid void sftRff (int pbrbmftfrIndfx, Rff rff) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if (pbrbms == null) {
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftRff");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nfw SfriblRff(rff));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Blob</dodf> objfdt in
     * tif Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>BLOB</dodf> vbluf wifn it sfnds it to tif dbtbbbsf. Intfrnblly,
     * tif <dodf>Blob</dodf> is rfprfsfntfd bs b <dodf>SfriblBlob</dodf>
     * to fnsurf sfriblizbbility.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <p>
     * Aftfr tiis mftiod ibs bffn dbllfd, b dbll to tif
     * mftiod <dodf>gftPbrbms</dodf>
     * will rfturn bn objfdt brrby of tif durrfnt dommbnd pbrbmftfrs, wiidi will
     * indludf tif <dodf>Blob</dodf> objfdt sft for plbdfioldfr pbrbmftfr numbfr
     * <dodf>pbrbmftfrIndfx</dodf>.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>Blob</dodf> objfdt rfprfsfnting bn SQL
     *          <dodf>BLOB</dodf> vbluf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     * @sff jbvbx.sql.rowsft.sfribl.SfriblBlob
     */
    publid void sftBlob (int pbrbmftfrIndfx, Blob x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftBlob");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nfw SfriblBlob(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Clob</dodf> objfdt in
     * tif Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>CLOB</dodf> vbluf wifn it sfnds it to tif dbtbbbsf. Intfrnblly, tif
     * <dodf>Clob</dodf> is rfprfsfntfd bs b <dodf>SfriblClob</dodf> to fnsurf
     * sfriblizbbility.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <p>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <p>
     * Aftfr tiis mftiod ibs bffn dbllfd, b dbll to tif
     * mftiod <dodf>gftPbrbms</dodf>
     * will rfturn bn objfdt brrby of tif durrfnt dommbnd pbrbmftfrs, wiidi will
     * indludf tif <dodf>Clob</dodf> objfdt sft for plbdfioldfr pbrbmftfr numbfr
     * <dodf>pbrbmftfrIndfx</dodf>.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *     in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *     Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *     <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>Clob</dodf> objfdt rfprfsfnting bn SQL
     *     <dodf>CLOB</dodf> vbluf; dbnnot bf null
     * @tirows SQLExdfption if bn frror oddurs; tif pbrbmftfr indfx is out of
     *     bounds or tif <dodf>Clob</dodf> is null
     * @sff #gftPbrbms
     * @sff jbvbx.sql.rowsft.sfribl.SfriblBlob
     */
    publid void sftClob (int pbrbmftfrIndfx, Clob x) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftClob");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nfw SfriblClob(x));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to bn <dodf>Arrby</dodf> objfdt in tif
     * Jbvb progrbmming lbngubgf.  Tif drivfr donvfrts tiis to bn SQL
     * <dodf>ARRAY</dodf> vbluf wifn it sfnds it to tif dbtbbbsf. Intfrnblly,
     * tif <dodf>Arrby</dodf> is rfprfsfntfd bs b <dodf>SfriblArrby</dodf>
     * to fnsurf sfriblizbbility.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * Notf: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <p>
     * Aftfr tiis mftiod ibs bffn dbllfd, b dbll to tif
     * mftiod <dodf>gftPbrbms</dodf>
     * will rfturn bn objfdt brrby of tif durrfnt dommbnd pbrbmftfrs, wiidi will
     * indludf tif <dodf>Arrby</dodf> objfdt sft for plbdfioldfr pbrbmftfr numbfr
     * <dodf>pbrbmftfrIndfx</dodf>.
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is flfmfnt numbfr <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm brrby bn <dodf>Arrby</dodf> objfdt rfprfsfnting bn SQL
     *        <dodf>ARRAY</dodf> vbluf; dbnnot bf null. Tif <dodf>Arrby</dodf> objfdt
     *        pbssfd to tiis mftiod must rfturn b non-null Objfdt for bll
     *        <dodf>gftArrby()</dodf> mftiod dblls. A null vbluf will dbusf b
     *        <dodf>SQLExdfption</dodf> to bf tirown.
     * @tirows SQLExdfption if bn frror oddurs; tif pbrbmftfr indfx is out of
     *        bounds or tif <dodf>ARRAY</dodf> is null
     * @sff #gftPbrbms
     * @sff jbvbx.sql.rowsft.sfribl.SfriblArrby
     */
    publid void sftArrby (int pbrbmftfrIndfx, Arrby brrby) tirows SQLExdfption {
        difdkPbrbmIndfx(pbrbmftfrIndfx);
        if (pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftArrby");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), nfw SfriblArrby(brrby));
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf>
     * objfdt.
     * Wifn tif DBMS dofs not storf timf zonf informbtion, tif drivfr will usf
     * tif givfn <dodf>Cblfndbr</dodf> objfdt to donstrudt tif SQL <dodf>DATE</dodf>
     * vbluf to sfnd to tif dbtbbbsf. Witi b
     * <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif dbtf
     * tbking into bddount b dustom timf zonf.  If no <dodf>Cblfndbr</dodf>
     * objfdt is spfdififd, tif drivfr usfs tif timf zonf of tif Virtubl Mbdiinf
     * tibt is running tif bpplidbtion.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftDbtf</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.sql.Dbtf</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>dbl</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif dbtf bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>jbvb.sql.Dbtf</dodf> objfdt rfprfsfnting bn SQL
     *        <dodf>DATE</dodf> vbluf
     * @pbrbm dbl b <dodf>jbvb.util.Cblfndbr</dodf> objfdt to usf wifn
     *        wifn donstrudting tif dbtf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x, Cblfndbr dbl) tirows SQLExdfption {
        Objfdt dbtf[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        dbtf = nfw Objfdt[2];
        dbtf[0] = x;
        dbtf[1] = dbl;
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftDbtf");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), dbtf);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf>
     * objfdt.  Tif drivfr donvfrts tiis
     * to bn SQL <dodf>TIME</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Wifn tif DBMS dofs not storf timf zonf informbtion, tif drivfr will usf
     * tif givfn <dodf>Cblfndbr</dodf> objfdt to donstrudt tif SQL <dodf>TIME</dodf>
     * vbluf to sfnd to tif dbtbbbsf. Witi b
     * <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif dbtf
     * tbking into bddount b dustom timf zonf.  If no <dodf>Cblfndbr</dodf>
     * objfdt is spfdififd, tif drivfr usfs tif timf zonf of tif Virtubl Mbdiinf
     * tibt is running tif bpplidbtion.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftTimf</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.sql.Timf</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>dbl</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif timf bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>jbvb.sql.Timf</dodf> objfdt
     * @pbrbm dbl tif <dodf>jbvb.util.Cblfndbr</dodf> objfdt tif drivfr dbn usf to
     *         donstrudt tif timf
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x, Cblfndbr dbl) tirows SQLExdfption {
        Objfdt timf[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        timf = nfw Objfdt[2];
        timf[0] = x;
        timf[1] = dbl;
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftTimf");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), timf);
    }

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     * <dodf>jbvb.sql.Timfstbmp</dodf> objfdt.  Tif drivfr donvfrts tiis
     * to bn SQL <dodf>TIMESTAMP</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * <P>
     * Wifn tif DBMS dofs not storf timf zonf informbtion, tif drivfr will usf
     * tif givfn <dodf>Cblfndbr</dodf> objfdt to donstrudt tif SQL <dodf>TIMESTAMP</dodf>
     * vbluf to sfnd to tif dbtbbbsf. Witi b
     * <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif timfstbmp
     * tbking into bddount b dustom timf zonf.  If no <dodf>Cblfndbr</dodf>
     * objfdt is spfdififd, tif drivfr usfs tif timf zonf of tif Virtubl Mbdiinf
     * tibt is running tif bpplidbtion.
     * <P>
     * Tif pbrbmftfr vbluf sft by tiis mftiod is storfd intfrnblly bnd
     * will bf supplifd bs tif bppropribtf pbrbmftfr in tiis <dodf>RowSft</dodf>
     * objfdt's dommbnd wifn tif mftiod <dodf>fxfdutf</dodf> is dbllfd.
     * Mftiods sudi bs <dodf>fxfdutf</dodf> bnd <dodf>populbtf</dodf> must bf
     * providfd in bny dlbss tibt fxtfnds tiis dlbss bnd implfmfnts onf or
     * morf of tif stbndbrd JSR-114 <dodf>RowSft</dodf> intfrfbdfs.
     * <P>
     * NOTE: <dodf>JdbdRowSft</dodf> dofs not rfquirf tif <dodf>populbtf</dodf> mftiod
     * bs it is undffinfd in tiis dlbss.
     * <P>
     * Cblls mbdf to tif mftiod <dodf>gftPbrbms</dodf> bftfr tiis vfrsion of
     * <dodf>sftTimfstbmp</dodf>
     * ibs bffn dbllfd will rfturn bn brrby dontbining tif pbrbmftfr vblufs tibt
     * ibvf bffn sft.  In tibt brrby, tif flfmfnt tibt rfprfsfnts tif vblufs
     * sft witi tiis mftiod will itsflf bf bn brrby. Tif first flfmfnt of tibt brrby
     * is tif givfn <dodf>jbvb.sql.Timfstbmp</dodf> objfdt.
     * Tif sfdond flfmfnt is tif vbluf sft for <i>dbl</i>.
     * Tif pbrbmftfr numbfr is indidbtfd by bn flfmfnt's position in tif brrby
     * rfturnfd by tif mftiod <dodf>gftPbrbms</dodf>,
     * witi tif first flfmfnt bfing tif vbluf for tif first plbdfioldfr pbrbmftfr, tif
     * sfdond flfmfnt bfing tif vbluf for tif sfdond plbdfioldfr pbrbmftfr, bnd so on.
     * In otifr words, if tif timfstbmp bfing sft is tif vbluf for tif sfdond
     * plbdfioldfr pbrbmftfr, tif brrby dontbining it will bf tif sfdond flfmfnt in
     * tif brrby rfturnfd by <dodf>gftPbrbms</dodf>.
     * <P>
     * Notf tibt bfdbusf tif numbfring of flfmfnts in bn brrby stbrts bt zfro,
     * tif brrby flfmfnt tibt dorrfsponds to plbdfioldfr pbrbmftfr numbfr
     * <i>pbrbmftfrIndfx</i> is <i>pbrbmftfrIndfx</i> -1.
     *
     * @pbrbm pbrbmftfrIndfx tif ordinbl numbfr of tif plbdfioldfr pbrbmftfr
     *        in tiis <dodf>RowSft</dodf> objfdt's dommbnd tibt is to bf sft.
     *        Tif first pbrbmftfr is 1, tif sfdond is 2, bnd so on; must bf
     *        <dodf>1</dodf> or grfbtfr
     * @pbrbm x b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt
     * @pbrbm dbl tif <dodf>jbvb.util.Cblfndbr</dodf> objfdt tif drivfr dbn usf to
     *         donstrudt tif timfstbmp
     * @tirows SQLExdfption if bn frror oddurs or tif
     *                         pbrbmftfr indfx is out of bounds
     * @sff #gftPbrbms
     */
    publid void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x, Cblfndbr dbl) tirows SQLExdfption {
        Objfdt timfstbmp[];
        difdkPbrbmIndfx(pbrbmftfrIndfx);

        timfstbmp = nfw Objfdt[2];
        timfstbmp[0] = x;
        timfstbmp[1] = dbl;
        if(pbrbms == null){
             tirow nfw SQLExdfption("Sft initPbrbms() bfforf sftTimfstbmp");
        }
        pbrbms.put(Intfgfr.vblufOf(pbrbmftfrIndfx - 1), timfstbmp);
    }

    /**
     * Clfbrs bll of tif durrfnt pbrbmftfr vblufs in tiis <dodf>RowSft</dodf>
     * objfdt's intfrnbl rfprfsfntbtion of tif pbrbmftfrs to bf sft in
     * tiis <dodf>RowSft</dodf> objfdt's dommbnd wifn it is fxfdutfd.
     * <P>
     * In gfnfrbl, pbrbmftfr vblufs rfmbin in fordf for rfpfbtfd usf in
     * tiis <dodf>RowSft</dodf> objfdt's dommbnd. Sftting b pbrbmftfr vbluf witi tif
     * sfttfr mftiods butombtidblly dlfbrs tif vbluf of tif
     * dfsignbtfd pbrbmftfr bnd rfplbdfs it witi tif nfw spfdififd vbluf.
     * <P>
     * Tiis mftiod is dbllfd intfrnblly by tif <dodf>sftCommbnd</dodf>
     * mftiod to dlfbr bll of tif pbrbmftfrs sft for tif prfvious dommbnd.
     * <P>
     * Furtifrmorf, tiis mftiod difffrs from tif <dodf>initPbrbms</dodf>
     * mftiod in tibt it mbintbins tif sdifmb of tif <dodf>RowSft</dodf> objfdt.
     *
     * @tirows SQLExdfption if bn frror oddurs dlfbring tif pbrbmftfrs
     */
    publid void dlfbrPbrbmftfrs() tirows SQLExdfption {
        pbrbms.dlfbr();
    }

    /**
     * Rftrifvfs bn brrby dontbining tif pbrbmftfr vblufs (boti Objfdts bnd
     * primitivfs) tibt ibvf bffn sft for tiis
     * <dodf>RowSft</dodf> objfdt's dommbnd bnd tirows bn <dodf>SQLExdfption</dodf> objfdt
     * if bll pbrbmftfrs ibvf not bffn sft.   Bfforf tif dommbnd is sfnt to tif
     * DBMS to bf fxfdutfd, tifsf pbrbmftfrs will bf substitutfd
     * for plbdfioldfr pbrbmftfrs in tif  <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * tibt is tif dommbnd for b <dodf>RowSft</dodf> implfmfntbtion fxtfnding
     * tif <dodf>BbsfRowSft</dodf> dlbss.
     * <P>
     * Ebdi flfmfnt in tif brrby tibt is rfturnfd is bn <dodf>Objfdt</dodf> instbndf
     * tibt dontbins tif vblufs of tif pbrbmftfrs supplifd to b sfttfr mftiod.
     * Tif ordfr of tif flfmfnts is dftfrminfd by tif vbluf supplifd for
     * <i>pbrbmftfrIndfx</i>.  If tif sfttfr mftiod tbkfs only tif pbrbmftfr indfx
     * bnd tif vbluf to bf sft (possibly null), tif brrby flfmfnt will dontbin tif vbluf to bf sft
     * (wiidi will bf fxprfssfd bs bn <dodf>Objfdt</dodf>).  If tifrf brf bdditionbl
     * pbrbmftfrs, tif brrby flfmfnt will itsflf bf bn brrby dontbining tif vbluf to bf sft
     * plus bny bdditionbl pbrbmftfr vblufs supplifd to tif sfttfr mftiod. If tif mftiod
     * sfts b strfbm, tif brrby flfmfnt indludfs tif typf of strfbm bfing supplifd to tif
     * mftiod. Tifsf bdditionbl pbrbmftfrs brf for tif usf of tif drivfr or tif DBMS bnd mby or
     * mby not bf usfd.
     * <P>
     * NOTE: Storfd pbrbmftfr vblufs of typfs <dodf>Arrby</dodf>, <dodf>Blob</dodf>,
     * <dodf>Clob</dodf> bnd <dodf>Rff</dodf> brf rfturnfd bs <dodf>SfriblArrby</dodf>,
     * <dodf>SfriblBlob</dodf>, <dodf>SfriblClob</dodf> bnd <dodf>SfriblRff</dodf>
     * rfspfdtivfly.
     *
     * @rfturn bn brrby of <dodf>Objfdt</dodf> instbndfs tibt indludfs tif
     *         pbrbmftfr vblufs tibt mby bf sft in tiis <dodf>RowSft</dodf> objfdt's
     *         dommbnd; bn fmpty brrby if no pbrbmftfrs ibvf bffn sft
     * @tirows SQLExdfption if bn frror oddurs rftrifving tif objfdt brrby of
     *         pbrbmftfrs of tiis <dodf>RowSft</dodf> objfdt or if not bll pbrbmftfrs ibvf
     *         bffn sft
     */
    publid Objfdt[] gftPbrbms() tirows SQLExdfption {
        if (pbrbms == null) {

            initPbrbms();
            Objfdt [] pbrbmsArrby = nfw Objfdt[pbrbms.sizf()];
            rfturn pbrbmsArrby;

        } flsf {
            // Tif pbrbmftfrs mby bf sft in rbndom ordfr
            // but bll must bf sft, difdk to vfrify bll
            // ibvf bffn sft till tif lbst pbrbmftfr
            // flsf tirow fxdfption.

            Objfdt[] pbrbmsArrby = nfw Objfdt[pbrbms.sizf()];
            for (int i = 0; i < pbrbms.sizf(); i++) {
               pbrbmsArrby[i] = pbrbms.gft(Intfgfr.vblufOf(i));
               if (pbrbmsArrby[i] == null) {
                 tirow nfw SQLExdfption("missing pbrbmftfr: " + (i + 1));
               } //fnd if
            } //fnd for
            rfturn pbrbmsArrby;

        } //fnd if

    } //fnd gftPbrbms


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
    *
    * <P><B>Notf:</B> You must spfdify tif pbrbmftfr's SQL typf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm sqlTypf tif SQL typf dodf dffinfd in <dodf>jbvb.sql.Typfs</dodf>
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.4
    */
   publid void sftNull(String pbrbmftfrNbmf, int sqlTypf) tirows SQLExdfption {
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
    * Tiis vfrsion of tif mftiod <dodf>sftNull</dodf> siould
    * bf usfd for usfr-dffinfd typfs bnd REF typf pbrbmftfrs.  Exbmplfs
    * of usfr-dffinfd typfs indludf: STRUCT, DISTINCT, JAVA_OBJECT, bnd
    * nbmfd brrby typfs.
    *
    * <P><B>Notf:</B> To bf portbblf, bpplidbtions must givf tif
    * SQL typf dodf bnd tif fully-qublififd SQL typf nbmf wifn spfdifying
    * b NULL usfr-dffinfd or REF pbrbmftfr.  In tif dbsf of b usfr-dffinfd typf
    * tif nbmf is tif typf nbmf of tif pbrbmftfr itsflf.  For b REF
    * pbrbmftfr, tif nbmf is tif typf nbmf of tif rfffrfndfd typf.  If
    * b JDBC drivfr dofs not nffd tif typf dodf or typf nbmf informbtion,
    * it mby ignorf it.
    *
    * Altiougi it is intfndfd for usfr-dffinfd bnd Rff pbrbmftfrs,
    * tiis mftiod mby bf usfd to sft b null pbrbmftfr of bny JDBC typf.
    * If tif pbrbmftfr dofs not ibvf b usfr-dffinfd or REF typf, tif givfn
    * typfNbmf is ignorfd.
    *
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm sqlTypf b vbluf from <dodf>jbvb.sql.Typfs</dodf>
    * @pbrbm typfNbmf tif fully-qublififd nbmf of bn SQL usfr-dffinfd typf;
    *        ignorfd if tif pbrbmftfr is not b usfr-dffinfd typf or
    *        SQL <dodf>REF</dodf> vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.4
    */
   publid void sftNull (String pbrbmftfrNbmf, int sqlTypf, String typfNbmf)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>boolfbn</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>BIT</dodf> or <dodf>BOOLEAN</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftBoolfbn(String pbrbmftfrNbmf, boolfbn x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>bytf</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>TINYINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftBytf(String pbrbmftfrNbmf, bytf x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>siort</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>SMALLINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftSiort(String pbrbmftfrNbmf, siort x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>int</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>INTEGER</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftInt(String pbrbmftfrNbmf, int x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>long</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>BIGINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftLong(String pbrbmftfrNbmf, long x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>flobt</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>FLOAT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftFlobt(String pbrbmftfrNbmf, flobt x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>doublf</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>DOUBLE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftDoublf(String pbrbmftfrNbmf, doublf x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
    * <dodf>jbvb.mbti.BigDfdimbl</dodf> vbluf.
    * Tif drivfr donvfrts tiis to bn SQL <dodf>NUMERIC</dodf> vbluf wifn
    * it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftBigDfdimbl(String pbrbmftfrNbmf, BigDfdimbl x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>String</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>VARCHAR</dodf> or <dodf>LONGVARCHAR</dodf> vbluf
    * (dfpfnding on tif brgumfnt's
    * sizf rflbtivf to tif drivfr's limits on <dodf>VARCHAR</dodf> vblufs)
    * wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftString(String pbrbmftfrNbmf, String x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb brrby of bytfs.
    * Tif drivfr donvfrts tiis to bn SQL <dodf>VARBINARY</dodf> or
    * <dodf>LONGVARBINARY</dodf> (dfpfnding on tif brgumfnt's sizf rflbtivf
    * to tif drivfr's limits on <dodf>VARBINARY</dodf> vblufs) wifn it sfnds
    * it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftBytfs(String pbrbmftfrNbmf, bytf x[]) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf.
    * Tif drivfr
    * donvfrts tiis to bn SQL <dodf>TIMESTAMP</dodf> vbluf wifn it sfnds it to tif
    * dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftTimfstbmp(String pbrbmftfrNbmf, jbvb.sql.Timfstbmp x)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
    * tif spfdififd numbfr of bytfs.
    * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
    * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
    * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
    * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
    * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
    *
    * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
    * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
    * stbndbrd intfrfbdf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
    * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.4
    */
   publid void sftAsdiiStrfbm(String pbrbmftfrNbmf, jbvb.io.InputStrfbm x, int lfngti)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
    * tif spfdififd numbfr of bytfs.
    * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
    * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
    * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
    * bs nffdfd until fnd-of-filf is rfbdifd.
    *
    * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
    * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
    * stbndbrd intfrfbdf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
    * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.4
    */
   publid void sftBinbryStrfbm(String pbrbmftfrNbmf, jbvb.io.InputStrfbm x,
                        int lfngti) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


  /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rfbdfr</dodf>
    * objfdt, wiidi is tif givfn numbfr of dibrbdtfrs long.
    * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
    * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
    * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
    * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
    * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
    *
    * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
    * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
    * stbndbrd intfrfbdf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt
    *        dontbins tif UNICODE dbtb usfd bs tif dfsignbtfd pbrbmftfr
    * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif strfbm
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.4
    */
   publid void sftCibrbdtfrStrfbm(String pbrbmftfrNbmf,
                           jbvb.io.Rfbdfr rfbdfr,
                           int lfngti) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm.
   * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
   * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
   * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
   * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
   * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
   *
   * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
   * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
   * stbndbrd intfrfbdf.
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftAsdiiStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
   * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
  */
  publid void sftAsdiiStrfbm(String pbrbmftfrNbmf, jbvb.io.InputStrfbm x)
          tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm.
    * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
    * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
    * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
    * strfbm bs nffdfd until fnd-of-filf is rfbdifd.
    *
    * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
    * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
    * stbndbrd intfrfbdf.
    * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
    * it migit bf morf fffidifnt to usf b vfrsion of
    * <dodf>sftBinbryStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    * @sindf 1.6
    */
   publid void sftBinbryStrfbm(String pbrbmftfrNbmf, jbvb.io.InputStrfbm x)
   tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rfbdfr</dodf>
    * objfdt.
    * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
    * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
    * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
    * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
    * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
    *
    * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
    * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
    * stbndbrd intfrfbdf.
    * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
    * it migit bf morf fffidifnt to usf b vfrsion of
    * <dodf>sftCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt dontbins tif
    *        Unidodf dbtb
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    * @sindf 1.6
    */
   publid void sftCibrbdtfrStrfbm(String pbrbmftfrNbmf,
                         jbvb.io.Rfbdfr rfbdfr) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr in tiis <dodf>RowSft</dodf> objfdt's dommbnd
  * to b <dodf>Rfbdfr</dodf> objfdt. Tif
  * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
  * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
  * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.
  *
  * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
  * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
  * stbndbrd intfrfbdf.
  * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
  * it migit bf morf fffidifnt to usf b vfrsion of
  * <dodf>sftNCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
  *
  * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur ; if b dbtbbbsf bddfss frror oddurs; or
  * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
  * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
  * @sindf 1.6
  */
  publid void sftNCibrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt. Tif sfdond
    * brgumfnt must bf bn objfdt typf; for intfgrbl vblufs, tif
    * <dodf>jbvb.lbng</dodf> fquivblfnt objfdts siould bf usfd.
    *
    * <p>Tif givfn Jbvb objfdt will bf donvfrtfd to tif givfn tbrgftSqlTypf
    * bfforf bfing sfnt to tif dbtbbbsf.
    *
    * If tif objfdt ibs b dustom mbpping (is of b dlbss implfmfnting tif
    * intfrfbdf <dodf>SQLDbtb</dodf>),
    * tif JDBC drivfr siould dbll tif mftiod <dodf>SQLDbtb.writfSQL</dodf> to writf it
    * to tif SQL dbtb strfbm.
    * If, on tif otifr ibnd, tif objfdt is of b dlbss implfmfnting
    * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
    *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>,
    * or <dodf>Arrby</dodf>, tif drivfr siould pbss it to tif dbtbbbsf bs b
    * vbluf of tif dorrfsponding SQL typf.
    * <P>
    * Notf tibt tiis mftiod mby bf usfd to pbss dbtbtbbbsf-
    * spfdifid bbstrbdt dbtb typfs.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
    * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
    * sfnt to tif dbtbbbsf. Tif sdblf brgumfnt mby furtifr qublify tiis typf.
    * @pbrbm sdblf for jbvb.sql.Typfs.DECIMAL or jbvb.sql.Typfs.NUMERIC typfs,
    *          tiis is tif numbfr of digits bftfr tif dfdimbl point.  For bll otifr
    *          typfs, tiis vbluf will bf ignorfd.
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>tbrgftSqlTypf</dodf> is
    * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
    * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
    * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
    *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
    * or  <dodf>STRUCT</dodf> dbtb typf bnd tif JDBC drivfr dofs not support
    * tiis dbtb typf
    * @sff Typfs
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftObjfdt(String pbrbmftfrNbmf, Objfdt x, int tbrgftSqlTypf, int sdblf)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
    * Tiis mftiod is likf tif mftiod <dodf>sftObjfdt</dodf>
    * bbovf, fxdfpt tibt it bssumfs b sdblf of zfro.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
    * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
    *                      sfnt to tif dbtbbbsf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>tbrgftSqlTypf</dodf> is
    * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
    * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
    * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
    *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
    * or  <dodf>STRUCT</dodf> dbtb typf bnd tif JDBC drivfr dofs not support
    * tiis dbtb typf
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftObjfdt(String pbrbmftfrNbmf, Objfdt x, int tbrgftSqlTypf)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
   * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
   * Tif sfdond pbrbmftfr must bf of typf <dodf>Objfdt</dodf>; tifrfforf, tif
   * <dodf>jbvb.lbng</dodf> fquivblfnt objfdts siould bf usfd for built-in typfs.
   *
   * <p>Tif JDBC spfdifidbtion spfdififs b stbndbrd mbpping from
   * Jbvb <dodf>Objfdt</dodf> typfs to SQL typfs.  Tif givfn brgumfnt
   * will bf donvfrtfd to tif dorrfsponding SQL typf bfforf bfing
   * sfnt to tif dbtbbbsf.
   *
   * <p>Notf tibt tiis mftiod mby bf usfd to pbss dbtbtbbbsf-
   * spfdifid bbstrbdt dbtb typfs, by using b drivfr-spfdifid Jbvb
   * typf.
   *
   * If tif objfdt is of b dlbss implfmfnting tif intfrfbdf <dodf>SQLDbtb</dodf>,
   * tif JDBC drivfr siould dbll tif mftiod <dodf>SQLDbtb.writfSQL</dodf>
   * to writf it to tif SQL dbtb strfbm.
   * If, on tif otifr ibnd, tif objfdt is of b dlbss implfmfnting
   * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
   *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>,
   * or <dodf>Arrby</dodf>, tif drivfr siould pbss it to tif dbtbbbsf bs b
   * vbluf of tif dorrfsponding SQL typf.
   * <P>
   * Tiis mftiod tirows bn fxdfption if tifrf is bn bmbiguity, for fxbmplf, if tif
   * objfdt is of b dlbss implfmfnting morf tibn onf of tif intfrfbdfs nbmfd bbovf.
   *
   * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
   * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs,
   * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf> or if tif givfn
   *            <dodf>Objfdt</dodf> pbrbmftfr is bmbiguous
   * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
   * tiis mftiod
   * @sff #gftPbrbms
   * @sindf 1.4
   */
  publid void sftObjfdt(String pbrbmftfrNbmf, Objfdt x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }



 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.  Tif inputstrfbm must dontbin  tif numbfr
    * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
    * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
    * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm, int)</dodf>
    * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
    * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
    * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
    * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
    * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1,
    * tif sfdond is 2, ...
    * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
    * vbluf to.
    * @pbrbm lfngti tif numbfr of bytfs in tif pbrbmftfr dbtb.
    * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs,
    * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>,
    * if pbrbmftfrIndfx dofs not dorrfspond
    * to b pbrbmftfr mbrkfr in tif SQL stbtfmfnt,  if tif lfngti spfdififd
    * is lfss tibn zfro or if tif numbfr of bytfs in tif inputstrfbm dofs not mbtdi
    * tif spfdififd lfngti.
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    *
    * @sindf 1.6
    */
    publid void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm, long lfngti)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.
    * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm)</dodf>
    * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
    * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
    * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
    * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
    *
    * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
    * it migit bf morf fffidifnt to usf b vfrsion of
    * <dodf>sftBlob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
    *
    * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1,
    * tif sfdond is 2, ...
    * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
    * vbluf to.
    * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs,
    * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or
    * if pbrbmftfrIndfx dofs not dorrfspond
    * to b pbrbmftfr mbrkfr in tif SQL stbtfmfnt,
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    *
    * @sindf 1.6
    */
    publid void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.  Tif <dodf>inputstrfbm</dodf> must dontbin  tif numbfr
     * of dibrbdtfrs spfdififd by lfngti, otifrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd wifn tif <dodf>CbllbblfStbtfmfnt</dodf> is fxfdutfd.
     * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm, int)</dodf>
     * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
     * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
     * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
     *
     * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr to bf sft
     * tif sfdond is 2, ...
     *
     * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
     * vbluf to.
     * @pbrbm lfngti tif numbfr of bytfs in tif pbrbmftfr dbtb.
     * @tirows SQLExdfption  if pbrbmftfrIndfx dofs not dorrfspond
     * to b pbrbmftfr mbrkfr in tif SQL stbtfmfnt,  or if tif lfngti spfdififd
     * is lfss tibn zfro; if tif numbfr of bytfs in tif inputstrfbm dofs not mbtdi
     * tif spfdififd lfngti; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
     * tiis mftiod
     *
     * @sindf 1.6
     */
     publid void sftBlob(String pbrbmftfrNbmf, InputStrfbm inputStrfbm, long lfngti)
        tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Blob</dodf> objfdt.
    * Tif drivfr donvfrts tiis to bn SQL <dodf>BLOB</dodf> vbluf wifn it
    * sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x b <dodf>Blob</dodf> objfdt tibt mbps bn SQL <dodf>BLOB</dodf> vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.6
    */
   publid void sftBlob (String pbrbmftfrNbmf, Blob x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.
    * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm)</dodf>
    * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
    * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
    * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
    * dbtb siould bf sfnd to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
    *
    * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
    * it migit bf morf fffidifnt to usf b vfrsion of
    * <dodf>sftBlob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
    * vbluf to.
    * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    *
    * @sindf 1.6
    */
    publid void sftBlob(String pbrbmftfrNbmf, InputStrfbm inputStrfbm)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif rfbdfr must dontbin  tif numbfr
   * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
   * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
   *Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
   * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
   * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
   * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
   * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
   * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
   * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
   * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs, tiis mftiod is dbllfd on
   * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>, if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
   * mbrkfr in tif SQL stbtfmfnt, or if tif lfngti spfdififd is lfss tibn zfro.
   *
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
   */
   publid void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngti)
     tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


/**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
   * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
   * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
   * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
   * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
   * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
   *
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
   * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs, tiis mftiod is dbllfd on
   * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>or if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
   * mbrkfr in tif SQL stbtfmfnt
   *
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.6
   */
   publid void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
     tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif <dodf>rfbdfr</dodf> must dontbin  tif numbfr
               * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
               * gfnfrbtfd wifn tif <dodf>CbllbblfStbtfmfnt</dodf> is fxfdutfd.
              * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
              * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
              * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
              * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
              * dbtb siould bf sfnd to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
              * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr to bf sft
              * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
              * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
              * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
              * mbrkfr in tif SQL stbtfmfnt; if tif lfngti spfdififd is lfss tibn zfro;
              * b dbtbbbsf bddfss frror oddurs or
              * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
              * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
              * tiis mftiod
              *
              * @sindf 1.6
              */
              publid void sftClob(String pbrbmftfrNbmf, Rfbdfr rfbdfr, long lfngti)
      tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


  /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Clob</dodf> objfdt.
    * Tif drivfr donvfrts tiis to bn SQL <dodf>CLOB</dodf> vbluf wifn it
    * sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x b <dodf>Clob</dodf> objfdt tibt mbps bn SQL <dodf>CLOB</dodf> vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sindf 1.6
    */
   publid void sftClob (String pbrbmftfrNbmf, Clob x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
    * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
    * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
    * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
    * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
    * dbtb siould bf sfnd to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
    *
    * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
    * it migit bf morf fffidifnt to usf b vfrsion of
    * <dodf>sftClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
    * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs or tiis mftiod is dbllfd on
    * b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    *
    * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
    * @sindf 1.6
    */
    publid void sftClob(String pbrbmftfrNbmf, Rfbdfr rfbdfr)
      tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf
    * using tif dffbult timf zonf of tif virtubl mbdiinf tibt is running
    * tif bpplidbtion.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>DATE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftDbtf(String pbrbmftfrNbmf, jbvb.sql.Dbtf x)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf,
    * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
    * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>DATE</dodf> vbluf,
    * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi b
    * b <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif dbtf
    * tbking into bddount b dustom timfzonf.  If no
    * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
    * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
    *            to donstrudt tif dbtf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftDbtf(String pbrbmftfrNbmf, jbvb.sql.Dbtf x, Cblfndbr dbl)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf> vbluf.
    * Tif drivfr donvfrts tiis
    * to bn SQL <dodf>TIME</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftTimf(String pbrbmftfrNbmf, jbvb.sql.Timf x)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf> vbluf,
    * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
    * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIME</dodf> vbluf,
    * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi b
    * b <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif timf
    * tbking into bddount b dustom timfzonf.  If no
    * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
    * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
    *            to donstrudt tif timf
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftTimf(String pbrbmftfrNbmf, jbvb.sql.Timf x, Cblfndbr dbl)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
    * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf,
    * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
    * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIMESTAMP</dodf> vbluf,
    * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi b
    * b <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif timfstbmp
    * tbking into bddount b dustom timfzonf.  If no
    * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
    * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
    *
    * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
    * @pbrbm x tif pbrbmftfr vbluf
    * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
    *            to donstrudt tif timfstbmp
    * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
    * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
    * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
    * tiis mftiod
    * @sff #gftPbrbms
    * @sindf 1.4
    */
   publid void sftTimfstbmp(String pbrbmftfrNbmf, jbvb.sql.Timfstbmp x, Cblfndbr dbl)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.SQLXML</dodf> objfdt. Tif drivfr donvfrts tiis to bn
  * SQL <dodf>XML</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
  * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm xmlObjfdt b <dodf>SQLXML</dodf> objfdt tibt mbps bn SQL <dodf>XML</dodf> vbluf
  * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs, tiis mftiod
  *  is dbllfd on b dlosfd rfsult sft,
  * tif <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
  *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> ibs not bffn dlosfd
  * for tif <dodf>SQLXML</dodf> objfdt  or
  *  if tifrf is bn frror prodfssing tif XML vbluf.  Tif <dodf>gftCbusf</dodf> mftiod
  *  of tif fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if tif
  *  strfbm dofs not dontbin vblid XML.
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftSQLXML(int pbrbmftfrIndfx, SQLXML xmlObjfdt) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.SQLXML</dodf> objfdt. Tif drivfr donvfrts tiis to bn
  * <dodf>SQL XML</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
  * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
  * @pbrbm xmlObjfdt b <dodf>SQLXML</dodf> objfdt tibt mbps bn <dodf>SQL XML</dodf> vbluf
  * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs, tiis mftiod
  *  is dbllfd on b dlosfd rfsult sft,
  * tif <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
  *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> ibs not bffn dlosfd
  * for tif <dodf>SQLXML</dodf> objfdt  or
  *  if tifrf is bn frror prodfssing tif XML vbluf.  Tif <dodf>gftCbusf</dodf> mftiod
  *  of tif fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if tif
  *  strfbm dofs not dontbin vblid XML.
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftSQLXML(String pbrbmftfrNbmf, SQLXML xmlObjfdt) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.RowId</dodf> objfdt. Tif
  * drivfr donvfrts tiis to b SQL <dodf>ROWID</dodf> vbluf wifn it sfnds it
  * to tif dbtbbbsf
  *
  * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm x tif pbrbmftfr vbluf
  * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  *
  * @sindf 1.6
  */
 publid void sftRowId(int pbrbmftfrIndfx, RowId x) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.RowId</dodf> objfdt. Tif
  * drivfr donvfrts tiis to b SQL <dodf>ROWID</dodf> wifn it sfnds it to tif
  * dbtbbbsf.
  *
  * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
  * @pbrbm x tif pbrbmftfr vbluf
  * @tirows SQLExdfption if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftRowId(String pbrbmftfrNbmf, RowId x) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }

 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>String</dodf> objfdt.
  * Tif drivfr donvfrts tiis to b SQL <dodf>NCHAR</dodf> or
  * <dodf>NVARCHAR</dodf> or <dodf>LONGNVARCHAR</dodf> vbluf
  * (dfpfnding on tif brgumfnt's
  * sizf rflbtivf to tif drivfr's limits on <dodf>NVARCHAR</dodf> vblufs)
  * wifn it sfnds it to tif dbtbbbsf.
  *
  * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur ; or if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftNString(int pbrbmftfrIndfx, String vbluf) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>String</dodf> objfdt.
  * Tif drivfr donvfrts tiis to b SQL <dodf>NCHAR</dodf> or
  * <dodf>NVARCHAR</dodf> or <dodf>LONGNVARCHAR</dodf>
  * @pbrbm pbrbmftfrNbmf tif nbmf of tif dolumn to bf sft
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur; or if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftNString(String pbrbmftfrNbmf, String vbluf)
         tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Tif
  * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
  * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
  * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.
  * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur ; or if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftNCibrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf, long lfngti) tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Tif
  * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
  * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
  * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.
  * @pbrbm pbrbmftfrNbmf tif nbmf of tif dolumn to bf sft
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur; or if b dbtbbbsf bddfss frror oddurs
  * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not
  * support tiis mftiod
  * @sindf 1.6
  */
 publid void sftNCibrbdtfrStrfbm(String pbrbmftfrNbmf, Rfbdfr vbluf, long lfngti)
         tirows SQLExdfption{
     tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Tif
  * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
  * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
  * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.

  * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
  * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
  * stbndbrd intfrfbdf.
  * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
  * it migit bf morf fffidifnt to usf b vfrsion of
  * <dodf>sftNCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
  *
  * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
  * @pbrbm vbluf tif pbrbmftfr vbluf
  * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
  *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur ; if b dbtbbbsf bddfss frror oddurs; or
  * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
  * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
  * @sindf 1.6
  */
  publid void sftNCibrbdtfrStrfbm(String pbrbmftfrNbmf, Rfbdfr vbluf) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
   }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>jbvb.sql.NClob</dodf> objfdt. Tif objfdt
   * implfmfnts tif <dodf>jbvb.sql.NClob</dodf> intfrfbdf. Tiis <dodf>NClob</dodf>
   * objfdt mbps to b SQL <dodf>NCLOB</dodf>.
   * @pbrbm pbrbmftfrNbmf tif nbmf of tif dolumn to bf sft
   * @pbrbm vbluf tif pbrbmftfr vbluf
   * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
   *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
   *  frror dould oddur; or if b dbtbbbsf bddfss frror oddurs
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not
   * support tiis mftiod
   * @sindf 1.6
   */
  publid void sftNClob(String pbrbmftfrNbmf, NClob vbluf) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif <dodf>rfbdfr</dodf> must dontbin
   * tif numbfr
   * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
   * gfnfrbtfd wifn tif <dodf>CbllbblfStbtfmfnt</dodf> is fxfdutfd.
   * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
   * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
   * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
   * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
   * dbtb siould bf sfnd to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
   *
   * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr to bf sft
   * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
   * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
   * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
   * mbrkfr in tif SQL stbtfmfnt; if tif lfngti spfdififd is lfss tibn zfro;
   * if tif drivfr dofs not support nbtionbl
   *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
   *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
   * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
   * tiis mftiod
   * @sindf 1.6
   */
  publid void sftNClob(String pbrbmftfrNbmf, Rfbdfr rfbdfr, long lfngti)
           tirows SQLExdfption{
       tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
   * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
   * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
   * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
   * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
   * dbtb siould bf sfnd to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
   * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
   * it migit bf morf fffidifnt to usf b vfrsion of
   * <dodf>sftNClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
   *
   * @pbrbm pbrbmftfrNbmf tif nbmf of tif pbrbmftfr
   * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
   * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl dibrbdtfr sfts;
   * if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
   *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>CbllbblfStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   *
   * @sindf 1.6
   */
  publid void sftNClob(String pbrbmftfrNbmf, Rfbdfr rfbdfr)
    tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif rfbdfr must dontbin  tif numbfr
   * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
   * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
   * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
   * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
   * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
   * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
   * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
   * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
   * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
   * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
   * mbrkfr in tif SQL stbtfmfnt; if tif lfngti spfdififd is lfss tibn zfro;
   * if tif drivfr dofs not support nbtionbl dibrbdtfr sfts;
   * if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
   *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not
   * support tiis mftiod
   *
   * @sindf 1.6
   */
  publid void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngti)
       tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>jbvb.sql.NClob</dodf> objfdt. Tif drivfr donvfrts tiis ob
   * SQL <dodf>NCLOB</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
   * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm vbluf tif pbrbmftfr vbluf
   * @tirows SQLExdfption if tif drivfr dofs not support nbtionbl
   *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
   *  frror dould oddur ; or if b dbtbbbsf bddfss frror oddurs
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not
   * support tiis mftiod
   * @sindf 1.6
   */
 publid void sftNClob(int pbrbmftfrIndfx, NClob vbluf) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
 }


 /**
  * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
  * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
  * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
  * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
  * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
  * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
  * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
  * it migit bf morf fffidifnt to usf b vfrsion of
  * <dodf>sftNClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
  *
  * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
  * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
  * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
  * mbrkfr in tif SQL stbtfmfnt;
  * if tif drivfr dofs not support nbtionbl dibrbdtfr sfts;
  * if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
  *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
  * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
  * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
  *
  * @sindf 1.6
  */
  publid void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
    tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }


  /**
   * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.nft.URL</dodf> vbluf.
   * Tif drivfr donvfrts tiis to bn SQL <dodf>DATALINK</dodf> vbluf
   * wifn it sfnds it to tif dbtbbbsf.
   *
   * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
   * @pbrbm x tif <dodf>jbvb.nft.URL</dodf> objfdt to bf sft
   * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
   * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
   * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
   * @sindf 1.4
   */
  publid void sftURL(int pbrbmftfrIndfx, jbvb.nft.URL x) tirows SQLExdfption{
        tirow nfw SQLFfbturfNotSupportfdExdfption("Ffbturf not supportfd");
  }



  stbtid finbl long sfriblVfrsionUID = 4886719666485113312L;

} //fnd dlbss
