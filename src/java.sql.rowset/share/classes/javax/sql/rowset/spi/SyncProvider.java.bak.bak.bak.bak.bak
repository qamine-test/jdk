/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sql.rowsft.spi;

import jbvbx.sql.*;

/**
 * Tif syndironizbtion mfdibnism tibt providfs rfbdfr/writfr dbpbbilitifs for
 * disdonnfdtfd <dodf>RowSft</dodf> objfdts.
 * A <dodf>SyndProvidfr</dodf> implfmfntbtion is b dlbss tibt fxtfnds tif
 * <dodf>SyndProvidfr</dodf> bbstrbdt dlbss.
 * <P>
 * A <dodf>SyndProvidfr</dodf> implfmfntbtion is
 * idfntififd by b uniquf ID, wiidi is its fully qublififd dlbss nbmf.
 * Tiis nbmf must bf rfgistfrfd witi tif
 * <dodf>SyndFbdtory</dodf> SPI, tius mbking tif implfmfntbtion bvbilbblf to
 * bll <dodf>RowSft</dodf> implfmfntbtions.
 * Tif fbdtory mfdibnism in tif rfffrfndf implfmfntbtion usfs tiis nbmf to instbntibtf
 * tif implfmfntbtion, wiidi dbn tifn providf b <dodf>RowSft</dodf> objfdt witi its
 * rfbdfr (b <dodf>jbvbx.sql.RowSftRfbdfr</dodf> objfdt) bnd its writfr (b
 * <dodf>jbvbx.sql.RowSftWritfr</dodf> objfdt).
 * <P>
 * Tif Jdbd <dodf>RowSft</dodf> Implfmfntbtions spfdifidbtion providfs two
 * rfffrfndf implfmfntbtions of tif <dodf>SyndProvidfr</dodf> bbstrbdt dlbss:
 * <dodf>RIOptimistidProvidfr</dodf> bnd <dodf>RIXMLProvidfr</dodf>.
 * Tif <dodf>RIOptimistidProvidfr</dodf> dbn sft bny <dodf>RowSft</dodf>
 * implfmfntbtion witi b <dodf>RowSftRfbdfr</dodf> objfdt bnd b
 * <dodf>RowSftWritfr</dodf> objfdt.  Howfvfr, only tif <dodf>RIXMLProvidfr</dodf>
 * implfmfntbtion dbn sft bn <dodf>XmlRfbdfr</dodf> objfdt bnd bn
 * <dodf>XmlWritfr</dodf> objfdt. A <dodf>WfbRowSft</dodf> objfdt usfs tif
 * <dodf>XmlRfbdfr</dodf> objfdt to rfbd dbtb in XML formbt to populbtf itsflf witi tibt
 * dbtb.  It usfs tif <dodf>XmlWritfr</dodf> objfdt to writf itsflf to b strfbm or
 * <dodf>jbvb.io.Writfr</dodf> objfdt in XML formbt.
 *
 * <i3>1.0 Nbming Convfntion for Implfmfntbtions</i3>
 * As b guidf  to nbming <dodf>SyndProvidfr</dodf>
 * implfmfntbtions, tif following siould bf notfd:
 * <UL>
 * <li>Tif nbmf for b <dodf>SyndProvidfr</dodf> implfmfntbtion
 * is its fully qublififd dlbss nbmf.
 * <li>It is rfdommfndfd tibt vfndors supply b
 * <dodf>SyndProvidfr</dodf> implfmfntbtion in b pbdkbgf nbmfd <dodf>providfrs</dodf>.
 * </UL>
 * <p>
 * For instbndf, if b vfndor nbmfd Frfd, Ind. offfrfd b
 * <dodf>SyndProvidfr</dodf> implfmfntbtion, you dould ibvf tif following:
 * <PRE>
 *     Vfndor nbmf:  Frfd, Ind.
 *     Dombin nbmf of vfndor:  dom.frfd
 *     Pbdkbgf nbmf:  dom.frfd.providfrs
 *     SyndProvidfr implfmfntbtion dlbss nbmf:  HigiAvbilbbilityProvidfr
 *
 *     Fully qublififd dlbss nbmf of SyndProvidfr implfmfntbtion:
 *                        dom.frfd.providfrs.HigiAvbilbbilityProvidfr
 * </PRE>
 * <P>
 * Tif following linf of dodf usfs tif fully qublififd nbmf to rfgistfr
 * tiis implfmfntbtion witi tif <dodf>SyndFbdtory</dodf> stbtid instbndf.
 * <PRE>
 *     SyndFbdtory.rfgistfrProvidfr(
 *                          "dom.frfd.providfrs.HigiAvbilbbilityProvidfr");
 * </PRE>
 * <P>
 * Tif dffbult <dodf>SyndProvidfr</dodf> objfdt providfd witi tif rfffrfndf
 * implfmfntbtion usfs tif following nbmf:
 * <prf>
 *     dom.sun.rowsft.providfrs.RIOptimistidProvidfr
 * </prf>
 * <p>
 * A vfndor dbn rfgistfr b <dodf>SyndProvidfr</dodf> implfmfntbtion dlbss nbmf
 * witi Orbdlf Corporbtion by sfnding fmbil to jdbd@sun.dom.
 * Orbdlf will mbintbin b dbtbbbsf listing tif
 * bvbilbblf <dodf>SyndProvidfr</dodf> implfmfntbtions for usf witi domplibnt
 * <dodf>RowSft</dodf> implfmfntbtions.  Tiis dbtbbbsf will bf similbr to tif
 * onf blrfbdy mbintbinfd to list bvbilbblf JDBC drivfrs.
 * <P>
 * Vfndors siould rfffr to tif rfffrfndf implfmfntbtion syndironizbtion
 * providfrs for bdditionbl guidbndf on iow to implfmfnt b nfw
 * <dodf>SyndProvidfr</dodf> implfmfntbtion.
 *
 * <i3>2.0 How b <dodf>RowSft</dodf> Objfdt Gfts Its Providfr</i3>
 *
 * A disdonnfdtfd <dodf>Rowsft</dodf> objfdt mby gft bddfss to b
 * <dodf>SyndProvidfr</dodf> objfdt in onf of tif following two wbys:
 * <UL>
 *  <LI>Using b donstrudtor<BR>
 *      <PRE>
 *       CbdifdRowSft drs = nfw CbdifdRowSft(
 *                  "dom.frfd.providfrs.HigiAvbilbbilitySyndProvidfr");
 *      </PRE>
 *  <LI>Using tif <dodf>sftSyndProvidfr</dodf> mftiod
 *      <PRE>
 *       CbdifdRowSft drs = nfw CbdifdRowSft();
 *       drs.sftSyndProvidfr("dom.frfd.providfrs.HigiAvbilbbilitySyndProvidfr");
 *      </PRE>

 * </UL>
 * <p>
 * By dffbult, tif rfffrfndf implfmfntbtions of tif <dodf>RowSft</dodf> syndironizbtion
 * providfrs brf blwbys bvbilbblf to tif Jbvb plbtform.
 * If no otifr pluggbblf syndironizbtion providfrs ibvf bffn dorrfdtly
 * rfgistfrfd, tif <dodf>SyndFbdtory</dodf> will butombtidblly gfnfrbtf
 * bn instbndf of tif dffbult <dodf>SyndProvidfr</dodf> rfffrfndf implfmfntbtion.
 * Tius, in tif prfdfding dodf frbgmfnt, if no implfmfntbtion nbmfd
 * <dodf>dom.frfd.providfrs.HigiAvbilbbilitySyndProvidfr</dodf> ibs bffn
 * rfgistfrfd witi tif <dodf>SyndFbdtory</dodf> instbndf, <i>drs</i> will bf
 * bssignfd tif dffbult providfr in tif rfffrfndf implfmfntbtion, wiidi is
 * <dodf>dom.sun.rowsft.providfrs.RIOptimistidProvidfr</dodf>.
 *
 * <i3>3.0 Violbtions bnd Syndironizbtion Issufs</i3>
 * If bn updbtf bftwffn b disdonnfdtfd <dodf>RowSft</dodf> objfdt
 * bnd b dbtb sourdf violbtfs
 * tif originbl qufry or tif undfrlying dbtb sourdf donstrbints, tiis will
 * rfsult in undffinfd bfibvior for bll disdonnfdtfd <dodf>RowSft</dodf> implfmfntbtions
 * bnd tifir dfsignbtfd <dodf>SyndProvidfr</dodf> implfmfntbtions.
 * Not dffining tif bfibvior wifn sudi violbtions oddur offfrs grfbtfr flfxibility
 * for b <dodf>SyndProvidfr</dodf>
 * implfmfntbtion to dftfrminf its own bfst doursf of bdtion.
 * <p>
 * A <dodf>SyndProvidfr</dodf> implfmfntbtion
 * mby dioosf to implfmfnt b spfdifid ibndlfr to
 * ibndlf b subsft of qufry violbtions.
 * Howfvfr if bn originbl qufry violbtion or b morf gfnfrbl dbtb sourdf donstrbint
 * violbtion is not ibndlfd by tif <dodf>SyndProvidfr</dodf> implfmfntbtion,
 * bll <dodf>SyndProvidfr</dodf>
 * objfdts must tirow b <dodf>SyndProvidfrExdfption</dodf>.
 *
 * <i3>4.0 Updbtbblf SQL VIEWs</i3>
 * It is possiblf for bny disdonnfdtfd or donnfdtfd <dodf>RowSft</dodf> objfdt to bf populbtfd
 * from bn SQL qufry tibt is formulbtfd originblly from bn SQL <dodf>VIEW</dodf>.
 * Wiilf in mbny dbsfs it is possiblf for bn updbtf to bf pfrformfd to bn
 * undfrlying vifw, sudi bn updbtf rfquirfs bdditionbl mftbdbtb, wiidi mby vbry.
 * Tif <dodf>SyndProvidfr</dodf> dlbss providfs two donstbnts to indidbtf wiftifr
 * bn implfmfntbtion supports updbting bn SQL <dodf>VIEW</dodf>.
 * <ul>
 * <li><dodf><b>NONUPDATABLE_VIEW_SYNC</b></dodf> - Indidbtfs tibt b <dodf>SyndProvidfr</dodf>
 * implfmfntbtion dofs not support syndironizbtion witi bn SQL <dodf>VIEW</dodf> bs tif
 * undfrlying sourdf of dbtb for tif <dodf>RowSft</dodf> objfdt.
 * <li><dodf><b>UPDATABLE_VIEW_SYNC</b></dodf> - Indidbtfs tibt b
 * <dodf>SyndProvidfr</dodf> implfmfntbtion
 * supports syndironizbtion witi bn SQL <dodf>VIEW</dodf> bs tif undfrlying sourdf
 * of dbtb.
 * </ul>
 * <P>
 * Tif dffbult is for b <dodf>RowSft</dodf> objfdt not to bf updbtbblf if it wbs
 * populbtfd witi dbtb from bn SQL <dodf>VIEW</dodf>.
 *
 * <i3>5.0 <dodf>SyndProvidfr</dodf> Constbnts</i3>
 * Tif <dodf>SyndProvidfr</dodf> dlbss providfs tirff sfts of donstbnts tibt
 * brf usfd bs rfturn vblufs or pbrbmftfrs for <dodf>SyndProvidfr</dodf> mftiods.
 * <dodf>SyndProvidfr</dodf> objfdts mby bf implfmfntfd to pfrform syndironizbtion
 * bftwffn b <dodf>RowSft</dodf> objfdt bnd its undfrlying dbtb sourdf witi vbrying
 * dfgrffs of of dbrf. Tif first group of donstbnts indidbtf iow syndironizbtion
 * is ibndlfd. For fxbmplf, <dodf>GRADE_NONE</dodf> indidbtfs tibt b
 * <dodf>SyndProvidfr</dodf> objfdt will not tbkf bny dbrf to sff wibt dbtb is
 * vblid bnd will simply writf tif <dodf>RowSft</dodf> dbtb to tif dbtb sourdf.
 * <dodf>GRADE_MODIFIED_AT_COMMIT</dodf> indidbtfs tibt tif providfr will difdk
 * only modififd dbtb for vblidity.  Otifr grbdfs difdk bll dbtb for vblidity
 * or sft lodks wifn dbtb is modififd or lobdfd.
 * <OL>
 *  <LI>Constbnts to indidbtf tif syndironizbtion grbdf of b
 *     <dodf>SyndProvidfr</dodf> objfdt
 *   <UL>
 *    <LI>SyndProvidfr.GRADE_NONE
 *    <LI>SyndProvidfr.GRADE_MODIFIED_AT_COMMIT
 *    <LI>SyndProvidfr.GRADE_CHECK_ALL_AT_COMMIT
 *    <LI>SyndProvidfr.GRADE_LOCK_WHEN_MODIFIED
 *    <LI>SyndProvidfr.GRADE_LOCK_WHEN_LOADED
 *   </UL>
 *  <LI>Constbnts to indidbtf wibt lodks brf sft on tif dbtb sourdf
 *   <UL>
 *     <LI>SyndProvidfr.DATASOURCE_NO_LOCK
 *     <LI>SyndProvidfr.DATASOURCE_ROW_LOCK
 *     <LI>SyndProvidfr.DATASOURCE_TABLE_LOCK
 *     <LI>SyndProvidfr.DATASOURCE_DB_LOCK
 *   </UL>
 *  <LI>Constbnts to indidbtf wiftifr b <dodf>SyndProvidfr</dodf> objfdt dbn
 *       pfrform updbtfs to bn SQL <dodf>VIEW</dodf> <BR>
 *       Tifsf donstbnts brf fxplbinfd in tif prfdfding sfdtion (4.0).
 *   <UL>
 *     <LI>SyndProvidfr.UPDATABLE_VIEW_SYNC
 *     <LI>SyndProvidfr.NONUPDATABLE_VIEW_SYNC
 *   </UL>
 * </OL>
 *
 * @butior Jonbtibn Brudf
 * @sff jbvbx.sql.rowsft.spi.SyndFbdtory
 * @sff jbvbx.sql.rowsft.spi.SyndFbdtoryExdfption
 * @sindf 1.5
 */
publid bbstrbdt dlbss SyndProvidfr {

   /**
    * Crfbtfs b dffbult <dodf>SyndProvidfr</dodf> objfdt.
    */
    publid SyndProvidfr() {
    }

    /**
     * Rfturns tif uniquf idfntififr for tiis <dodf>SyndProvidfr</dodf> objfdt.
     *
     * @rfturn b <dodf>String</dodf> objfdt witi tif fully qublififd dlbss nbmf of
     *         tiis <dodf>SyndProvidfr</dodf> objfdt
     */
    publid bbstrbdt String gftProvidfrID();

    /**
     * Rfturns b <dodf>jbvbx.sql.RowSftRfbdfr</dodf> objfdt, wiidi dbn bf usfd to
     * populbtf b <dodf>RowSft</dodf> objfdt witi dbtb.
     *
     * @rfturn b <dodf>jbvbx.sql.RowSftRfbdfr</dodf> objfdt
     */
    publid bbstrbdt RowSftRfbdfr gftRowSftRfbdfr();

    /**
     * Rfturns b <dodf>jbvbx.sql.RowSftWritfr</dodf> objfdt, wiidi dbn bf
     * usfd to writf b <dodf>RowSft</dodf> objfdt's dbtb bbdk to tif
     * undfrlying dbtb sourdf.
     *
     * @rfturn b <dodf>jbvbx.sql.RowSftWritfr</dodf> objfdt
     */
    publid bbstrbdt RowSftWritfr gftRowSftWritfr();

    /**
     * Rfturns b donstbnt indidbting tif
     * grbdf of syndironizbtion b <dodf>RowSft</dodf> objfdt dbn fxpfdt from
     * tiis <dodf>SyndProvidfr</dodf> objfdt.
     *
     * @rfturn bn int tibt is onf of tif following donstbnts:
     *           SyndProvidfr.GRADE_NONE,
     *           SyndProvidfr.GRADE_CHECK_MODIFIED_AT_COMMIT,
     *           SyndProvidfr.GRADE_CHECK_ALL_AT_COMMIT,
     *           SyndProvidfr.GRADE_LOCK_WHEN_MODIFIED,
     *           SyndProvidfr.GRADE_LOCK_WHEN_LOADED
     */
    publid bbstrbdt int gftProvidfrGrbdf();


    /**
     * Sfts b lodk on tif undfrlying dbtb sourdf bt tif lfvfl indidbtfd by
     * <i>dbtbsourdf_lodk</i>. Tiis siould dbusf tif
     * <dodf>SyndProvidfr</dodf> to bdjust its bfibvior by indrfbsing or
     * dfdrfbsing tif lfvfl of optimism it providfs for b suddfssful
     * syndironizbtion.
     *
     * @pbrbm dbtbsourdf_lodk onf of tif following donstbnts indidbting tif sfvfrity
     *           lfvfl of dbtb sourdf lodk rfquirfd:
     * <prf>
     *           SyndProvidfr.DATASOURCE_NO_LOCK,
     *           SyndProvidfr.DATASOURCE_ROW_LOCK,
     *           SyndProvidfr.DATASOURCE_TABLE_LOCK,
     *           SyndProvidfr.DATASOURCE_DB_LOCK,
     * </prf>
     * @tirows SyndProvidfrExdfption if bn unsupportfd dbtb sourdf lodking lfvfl
     *           is sft.
     * @sff #gftDbtbSourdfLodk
     */
    publid bbstrbdt void sftDbtbSourdfLodk(int dbtbsourdf_lodk)
        tirows SyndProvidfrExdfption;

    /**
     * Rfturns tif durrfnt dbtb sourdf lodk sfvfrity lfvfl bdtivf in tiis
     * <dodf>SyndProvidfr</dodf> implfmfntbtion.
     *
     * @rfturn b donstbnt indidbting tif durrfnt lfvfl of dbtb sourdf lodk
     *        bdtivf in tiis <dodf>SyndProvidfr</dodf> objfdt;
     *         onf of tif following:
     * <prf>
     *           SyndProvidfr.DATASOURCE_NO_LOCK,
     *           SyndProvidfr.DATASOURCE_ROW_LOCK,
     *           SyndProvidfr.DATASOURCE_TABLE_LOCK,
     *           SyndProvidfr.DATASOURCE_DB_LOCK
     * </prf>
     * @tirows SyndProvidfrExdfption if bn frror oddurs dftfrmining tif dbtb
     *        sourdf lodking lfvfl.
     * @sff #sftDbtbSourdfLodk

     */
    publid bbstrbdt int gftDbtbSourdfLodk()
        tirows SyndProvidfrExdfption;

    /**
     * Rfturns wiftifr tiis <dodf>SyndProvidfr</dodf> implfmfntbtion
     * dbn pfrform syndironizbtion bftwffn b <dodf>RowSft</dodf> objfdt
     * bnd tif SQL <dodf>VIEW</dodf> in tif dbtb sourdf from wiidi
     * tif <dodf>RowSft</dodf> objfdt got its dbtb.
     *
     * @rfturn bn <dodf>int</dodf> sbying wiftifr tiis <dodf>SyndProvidfr</dodf>
     *         objfdt supports updbting bn SQL <dodf>VIEW</dodf>; onf of tif
     *         following:
     *            SyndProvidfr.UPDATABLE_VIEW_SYNC,
     *            SyndProvidfr.NONUPDATABLE_VIEW_SYNC
     */
    publid bbstrbdt int supportsUpdbtbblfVifw();

    /**
     * Rfturns tif rflfbsf vfrsion of tiis <dodf>SyndProvidfr</dodf> instbndf.
     *
     * @rfturn b <dodf>String</dodf> dftbiling tif rflfbsf vfrsion of tif
     *     <dodf>SyndProvidfr</dodf> implfmfntbtion
     */
    publid bbstrbdt String gftVfrsion();

    /**
     * Rfturns tif vfndor nbmf of tiis <dodf>SyndProvidfr</dodf> instbndf
     *
     * @rfturn b <dodf>String</dodf> dftbiling tif vfndor nbmf of tiis
     *     <dodf>SyndProvidfr</dodf> implfmfntbtion
     */
    publid bbstrbdt String gftVfndor();

    /*
     * Stbndbrd dfsdription of syndironizbtion grbdfs tibt b SyndProvidfr
     * dould providf.
     */

    /**
     * Indidbtfs tibt no syndironizbtion witi tif originbting dbtb sourdf is
     * providfd. A <dodf>SyndProvidfr</dodf>
     * implfmfntbtion rfturning tiis grbdf will simply bttfmpt to writf
     * updbtfs in tif <dodf>RowSft</dodf> objfdt to tif undfrlying dbtb
     * sourdf witiout difdking tif vblidity of bny dbtb.
     *
     */
    publid stbtid finbl int GRADE_NONE = 1;

    /**
     * Indidbtfs b low lfvfl optimistid syndironizbtion grbdf witi
     * rfspfdt to tif originbting dbtb sourdf.
     *
     * A <dodf>SyndProvidfr</dodf> implfmfntbtion
     * rfturning tiis grbdf will difdk only rows tibt ibvf dibngfd.
     *
     */
    publid stbtid finbl int GRADE_CHECK_MODIFIED_AT_COMMIT = 2;

    /**
     * Indidbtfs b iigi lfvfl optimistid syndironizbtion grbdf witi
     * rfspfdt to tif originbting dbtb sourdf.
     *
     * A <dodf>SyndProvidfr</dodf> implfmfntbtion
     * rfturning tiis grbdf will difdk bll rows, indluding rows tibt ibvf not
     * dibngfd.
     */
    publid stbtid finbl int GRADE_CHECK_ALL_AT_COMMIT = 3;

    /**
     * Indidbtfs b pfssimistid syndironizbtion grbdf witi
     * rfspfdt to tif originbting dbtb sourdf.
     *
     * A <dodf>SyndProvidfr</dodf>
     * implfmfntbtion rfturning tiis grbdf will lodk tif row in tif originbting
     * dbtb sourdf.
     */
    publid stbtid finbl int GRADE_LOCK_WHEN_MODIFIED = 4;

    /**
     * Indidbtfs tif most pfssimistid syndironizbtion grbdf witi
     * rfspfdt to tif originbting
     * dbtb sourdf. A <dodf>SyndProvidfr</dodf>
     * implfmfntbtion rfturning tiis grbdf will lodk tif fntirf vifw bnd/or
     * tbblf bfffdtfd by tif originbl stbtfmfnt usfd to populbtf b
     * <dodf>RowSft</dodf> objfdt.
     */
    publid stbtid finbl int GRADE_LOCK_WHEN_LOADED = 5;

    /**
     * Indidbtfs tibt no lodks rfmbin on tif originbting dbtb sourdf. Tiis is tif dffbult
     * lodk sftting for bll <dodf>SyndProvidfr</dodf> implfmfntbtions unlfss
     * otifrwisf dirfdtfd by b <dodf>RowSft</dodf> objfdt.
     */
    publid stbtid finbl int DATASOURCE_NO_LOCK = 1;

    /**
     * Indidbtfs tibt b lodk is plbdfd on tif rows tibt brf toudifd by tif originbl
     * SQL stbtfmfnt usfd to populbtf tif <dodf>RowSft</dodf> objfdt
     * tibt is using tiis <dodf>SyndProvidfr</dodf> objfdt.
     */
    publid stbtid finbl int DATASOURCE_ROW_LOCK = 2;

    /**
     * Indidbtfs tibt b lodk is plbdfd on bll tbblfs tibt brf toudifd by tif originbl
     * SQL stbtfmfnt usfd to populbtf tif <dodf>RowSft</dodf> objfdt
     * tibt is using tiis <dodf>SyndProvidfr</dodf> objfdt.
     */
    publid stbtid finbl int DATASOURCE_TABLE_LOCK = 3;

    /**
     * Indidbtfs tibt b lodk is plbdfd on tif fntirf dbtb sourdf tibt is tif sourdf of
     * dbtb for tif <dodf>RowSft</dodf> objfdt
     * tibt is using tiis <dodf>SyndProvidfr</dodf> objfdt.
     */
    publid stbtid finbl int DATASOURCE_DB_LOCK = 4;

    /**
     * Indidbtfs tibt b <dodf>SyndProvidfr</dodf> implfmfntbtion
     * supports syndironizbtion bftwffn b <dodf>RowSft</dodf> objfdt bnd
     * tif SQL <dodf>VIEW</dodf> usfd to populbtf it.
     */
    publid stbtid finbl int UPDATABLE_VIEW_SYNC = 5;

    /**
     * Indidbtfs tibt b <dodf>SyndProvidfr</dodf> implfmfntbtion
     * dofs <B>not</B> support syndironizbtion bftwffn b <dodf>RowSft</dodf>
     * objfdt bnd tif SQL <dodf>VIEW</dodf> usfd to populbtf it.
     */
    publid stbtid finbl int NONUPDATABLE_VIEW_SYNC = 6;
}
