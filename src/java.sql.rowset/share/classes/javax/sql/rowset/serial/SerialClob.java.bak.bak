/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sql.rowsft.sfribl;

import jbvb.sql.*;
import jbvb.io.*;
import jbvb.util.Arrbys;

/**
 * A sfriblizfd mbpping in tif Jbvb progrbmming lbngubgf of bn SQL
 * <dodf>CLOB</dodf> vbluf.
 * <P>
 * Tif <dodf>SfriblClob</dodf> dlbss providfs b donstrudtor for drfbting
 * bn instbndf from b <dodf>Clob</dodf> objfdt.  Notf tibt tif <dodf>Clob</dodf>
 * objfdt siould ibvf brougit tif SQL <dodf>CLOB</dodf> vbluf's dbtb ovfr
 * to tif dlifnt bfforf b <dodf>SfriblClob</dodf> objfdt
 * is donstrudtfd from it.  Tif dbtb of bn SQL <dodf>CLOB</dodf> vbluf dbn
 * bf mbtfriblizfd on tif dlifnt bs b strfbm of Unidodf dibrbdtfrs.
 * <P>
 * <dodf>SfriblClob</dodf> mftiods mbkf it possiblf to gft b substring
 * from b <dodf>SfriblClob</dodf> objfdt or to lodbtf tif stbrt of
 * b pbttfrn of dibrbdtfrs.
 *
 * <i3> Tirfbd sbffty </i3>
 *
 * <p> A SfriblClob is not sbff for usf by multiplf dondurrfnt tirfbds.  If b
 * SfriblClob is to bf usfd by morf tibn onf tirfbd tifn bddfss to tif SfriblClob
 * siould bf dontrollfd by bppropribtf syndironizbtion.
 *
 * @butior Jonbtibn Brudf
 * @sindf 1.5
 */
publid dlbss SfriblClob implfmfnts Clob, Sfriblizbblf, Clonfbblf {

    /**
     * A sfriblizfd brrby of dibrbdtfrs dontbining tif dbtb of tif SQL
     * <dodf>CLOB</dodf> vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt
     * rfprfsfnts.
     *
     * @sfribl
     */
    privbtf dibr buf[];

    /**
     * Intfrnbl Clob rfprfsfntbtion if SfriblClob is initiblizfd witi b
     * Clob. Null if SfriblClob is initiblizfd witi b dibr[].
     */
    privbtf Clob dlob;

    /**
     * Tif lfngti in dibrbdtfrs of tiis <dodf>SfriblClob</dodf> objfdt's
     * intfrnbl brrby of dibrbdtfrs.
     *
     * @sfribl
     */
    privbtf long lfn;

    /**
     * Tif originbl lfngti in dibrbdtfrs of tiis <dodf>SfriblClob</dodf>
     * objfdt's intfrnbl brrby of dibrbdtfrs.
     *
     * @sfribl
     */
    privbtf long origLfn;

    /**
     * Construdts b <dodf>SfriblClob</dodf> objfdt tibt is b sfriblizfd vfrsion of
     * tif givfn <dodf>dibr</dodf> brrby.
     * <p>
     * Tif nfw <dodf>SfriblClob</dodf> objfdt is initiblizfd witi tif dbtb from tif
     * <dodf>dibr</dodf> brrby, tius bllowing disdonnfdtfd <dodf>RowSft</dodf>
     * objfdts to fstbblisi b sfriblizfd <dodf>Clob</dodf> objfdt witiout toudiing
     * tif dbtb sourdf.
     *
     * @pbrbm di tif dibr brrby rfprfsfnting tif <dodf>Clob</dodf> objfdt to bf
     *         sfriblizfd
     * @tirows SfriblExdfption if bn frror oddurs during sfriblizbtion
     * @tirows SQLExdfption if b SQL frror oddurs
     */
    publid SfriblClob(dibr di[]) tirows SfriblExdfption, SQLExdfption {

        // %%% JMB. Agrffd. Add dodf ifrf to tirow b SQLExdfption if no
        // support is bvbilbblf for lodbtorsUpdbtfCopy=fblsf
        // Sfriblizing lodbtors is not supportfd.

        lfn = di.lfngti;
        buf = nfw dibr[(int)lfn];
        for (int i = 0; i < lfn ; i++){
           buf[i] = di[i];
        }
        origLfn = lfn;
        dlob = null;
    }

    /**
     * Construdts b <dodf>SfriblClob</dodf> objfdt tibt is b sfriblizfd
     * vfrsion of tif givfn <dodf>Clob</dodf> objfdt.
     * <P>
     * Tif nfw <dodf>SfriblClob</dodf> objfdt is initiblizfd witi tif
     * dbtb from tif <dodf>Clob</dodf> objfdt; tifrfforf, tif
     * <dodf>Clob</dodf> objfdt siould ibvf prfviously brougit tif
     * SQL <dodf>CLOB</dodf> vbluf's dbtb ovfr to tif dlifnt from
     * tif dbtbbbsf. Otifrwisf, tif nfw <dodf>SfriblClob</dodf> objfdt
     * objfdt will dontbin no dbtb.
     * <p>
     * Notf: Tif <dodf>Clob</dodf> objfdt supplifd to tiis donstrudtor must
     * rfturn non-null for boti tif <dodf>Clob.gftCibrbdtfrStrfbm()</dodf>
     * bnd <dodf>Clob.gftAsdiiStrfbm</dodf> mftiods. Tiis <dodf>SfriblClob</dodf>
     * donstrudtor dbnnot sfriblizf b <dodf>Clob</dodf> objfdt in tiis instbndf
     * bnd will tirow bn <dodf>SQLExdfption</dodf> objfdt.
     *
     * @pbrbm  dlob tif <dodf>Clob</dodf> objfdt from wiidi tiis
     *     <dodf>SfriblClob</dodf> objfdt is to bf donstrudtfd; dbnnot bf null
     * @tirows SfriblExdfption if bn frror oddurs during sfriblizbtion
     * @tirows SQLExdfption if b SQL frror oddurs in dbpturing tif CLOB;
     *     if tif <dodf>Clob</dodf> objfdt is b null; or if fitifr of tif
     *     <dodf>Clob.gftCibrbdtfrStrfbm()</dodf> bnd <dodf>Clob.gftAsdiiStrfbm()</dodf>
     *     mftiods on tif <dodf>Clob</dodf> rfturns b null
     * @sff jbvb.sql.Clob
     */
    publid SfriblClob(Clob dlob) tirows SfriblExdfption, SQLExdfption {

        if (dlob == null) {
            tirow nfw SQLExdfption("Cbnnot instbntibtf b SfriblClob " +
                "objfdt witi b null Clob objfdt");
        }
        lfn = dlob.lfngti();
        tiis.dlob = dlob;
        buf = nfw dibr[(int)lfn];
        int rfbd = 0;
        int offsft = 0;

        try (Rfbdfr dibrStrfbm = dlob.gftCibrbdtfrStrfbm()) {
            if (dibrStrfbm == null) {
                tirow nfw SQLExdfption("Invblid Clob objfdt. Tif dbll to gftCibrbdtfrStrfbm " +
                    "rfturnfd null wiidi dbnnot bf sfriblizfd.");
            }

            // Notf: gft bn ASCII strfbm in ordfr to null-difdk it,
            // fvfn tiougi wf don't do bnytiing witi it.
            try (InputStrfbm bsdiiStrfbm = dlob.gftAsdiiStrfbm()) {
                if (bsdiiStrfbm == null) {
                    tirow nfw SQLExdfption("Invblid Clob objfdt. Tif dbll to gftAsdiiStrfbm " +
                        "rfturnfd null wiidi dbnnot bf sfriblizfd.");
                }
            }

            try (Rfbdfr rfbdfr = nfw BufffrfdRfbdfr(dibrStrfbm)) {
                do {
                    rfbd = rfbdfr.rfbd(buf, offsft, (int)(lfn - offsft));
                    offsft += rfbd;
                } wiilf (rfbd > 0);
            }
        } dbtdi (jbvb.io.IOExdfption fx) {
            tirow nfw SfriblExdfption("SfriblClob: " + fx.gftMfssbgf());
        }

        origLfn = lfn;
    }

    /**
     * Rftrifvfs tif numbfr of dibrbdtfrs in tiis <dodf>SfriblClob</dodf>
     * objfdt's brrby of dibrbdtfrs.
     *
     * @rfturn b <dodf>long</dodf> indidbting tif lfngti in dibrbdtfrs of tiis
     *         <dodf>SfriblClob</dodf> objfdt's brrby of dibrbdtfr
     * @tirows SfriblExdfption if bn frror oddurs;
     * if {@dodf frff} ibd prfviously bffn dbllfd on tiis objfdt
     */
    publid long lfngti() tirows SfriblExdfption {
        isVblid();
        rfturn lfn;
    }

    /**
     * Rfturns tiis <dodf>SfriblClob</dodf> objfdt's dbtb bs b strfbm
     * of Unidodf dibrbdtfrs. Unlikf tif rflbtfd mftiod, <dodf>gftAsdiiStrfbm</dodf>,
     * b strfbm is produdfd rfgbrdlfss of wiftifr tif <dodf>SfriblClob</dodf> objfdt
     * wbs drfbtfd witi b <dodf>Clob</dodf> objfdt or b <dodf>dibr</dodf> brrby.
     *
     * @rfturn b <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining tiis
     *         <dodf>SfriblClob</dodf> objfdt's dbtb
     * @tirows SfriblExdfption if bn frror oddurs;
     * if {@dodf frff} ibd prfviously bffn dbllfd on tiis objfdt
     */
    publid jbvb.io.Rfbdfr gftCibrbdtfrStrfbm() tirows SfriblExdfption {
        isVblid();
        rfturn (jbvb.io.Rfbdfr) nfw CibrArrbyRfbdfr(buf);
    }

    /**
     * Rftrifvfs tif <dodf>CLOB</dodf> vbluf dfsignbtfd by tiis <dodf>SfriblClob</dodf>
     * objfdt bs bn bsdii strfbm. Tiis mftiod forwbrds tif <dodf>gftAsdiiStrfbm</dodf>
     * dbll to tif undfrlying <dodf>Clob</dodf> objfdt in tif fvfnt tibt tiis
     * <dodf>SfriblClob</dodf> objfdt is instbntibtfd witi b <dodf>Clob</dodf>
     * objfdt. If tiis <dodf>SfriblClob</dodf> objfdt is instbntibtfd witi
     * b <dodf>dibr</dodf> brrby, b <dodf>SfriblExdfption</dodf> objfdt is tirown.
     *
     * @rfturn b <dodf>jbvb.io.InputStrfbm</dodf> objfdt dontbining
     *     tiis <dodf>SfriblClob</dodf> objfdt's dbtb
     * @tirows SfriblExdfption if tiis {@dodf SfriblClob} objfdt wbs not
     * instbntibtfd witi b <dodf>Clob</dodf> objfdt;
     * if {@dodf frff} ibd prfviously bffn dbllfd on tiis objfdt
     * @tirows SQLExdfption if tifrf is bn frror bddfssing tif
     *     <dodf>CLOB</dodf> vbluf rfprfsfntfd by tif <dodf>Clob</dodf> objfdt
     * tibt wbs usfd to drfbtf tiis <dodf>SfriblClob</dodf> objfdt
     */
    publid jbvb.io.InputStrfbm gftAsdiiStrfbm() tirows SfriblExdfption, SQLExdfption {
        isVblid();
        if (tiis.dlob != null) {
            rfturn tiis.dlob.gftAsdiiStrfbm();
        } flsf {
            tirow nfw SfriblExdfption("Unsupportfd opfrbtion. SfriblClob dbnnot " +
                "rfturn b tif CLOB vbluf bs bn bsdii strfbm, unlfss instbntibtfd " +
                "witi b fully implfmfntfd Clob objfdt.");
        }
    }

    /**
     * Rfturns b dopy of tif substring dontbinfd in tiis
     * <dodf>SfriblClob</dodf> objfdt, stbrting bt tif givfn position
     * bnd dontinuing for tif spfdififd numbfr or dibrbdtfrs.
     *
     * @pbrbm pos tif position of tif first dibrbdtfr in tif substring
     *            to bf dopifd; tif first dibrbdtfr of tif
     *            <dodf>SfriblClob</dodf> objfdt is bt position
     *            <dodf>1</dodf>; must not bf lfss tibn <dodf>1</dodf>,
     *            bnd tif sum of tif stbrting position bnd tif lfngti
     *            of tif substring must bf lfss tibn tif lfngti of tiis
     *            <dodf>SfriblClob</dodf> objfdt
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif substring to bf
     *               rfturnfd; must not bf grfbtfr tibn tif lfngti of
     *               tiis <dodf>SfriblClob</dodf> objfdt, bnd tif
     *               sum of tif stbrting position bnd tif lfngti
     *               of tif substring must bf lfss tibn tif lfngti of tiis
     *               <dodf>SfriblClob</dodf> objfdt
     * @rfturn b <dodf>String</dodf> objfdt dontbining b substring of
     *         tiis <dodf>SfriblClob</dodf> objfdt bfginning bt tif
     *         givfn position bnd dontbining tif spfdififd numbfr of
     *         donsfdutivf dibrbdtfrs
     * @tirows SfriblExdfption if fitifr of tif brgumfnts is out of bounds;
     * if {@dodf frff} ibd prfviously bffn dbllfd on tiis objfdt
     */
    publid String gftSubString(long pos, int lfngti) tirows SfriblExdfption {

        isVblid();
        if (pos < 1 || pos > tiis.lfngti()) {
            tirow nfw SfriblExdfption("Invblid position in SfriblClob objfdt sft");
        }

        if ((pos-1) + lfngti > tiis.lfngti()) {
            tirow nfw SfriblExdfption("Invblid position bnd substring lfngti");
        }

        try {
            rfturn nfw String(buf, (int)pos - 1, lfngti);

        } dbtdi (StringIndfxOutOfBoundsExdfption f) {
            tirow nfw SfriblExdfption("StringIndfxOutOfBoundsExdfption: " +
                f.gftMfssbgf());
        }

    }

    /**
     * Rfturns tif position in tiis <dodf>SfriblClob</dodf> objfdt
     * wifrf tif givfn <dodf>String</dodf> objfdt bfgins, stbrting
     * tif sfbrdi bt tif spfdififd position. Tiis mftiod rfturns
     * <dodf>-1</dodf> if tif pbttfrn is not found.
     *
     * @pbrbm sfbrdiStr tif <dodf>String</dodf> objfdt for wiidi to
     *                  sfbrdi
     * @pbrbm stbrt tif position in tiis <dodf>SfriblClob</dodf> objfdt
     *         bt wiidi to stbrt tif sfbrdi; tif first position is
     *         <dodf>1</dodf>; must not bf lfss tibn <dodf>1</dodf> nor
     *         grfbtfr tibn tif lfngti of tiis <dodf>SfriblClob</dodf> objfdt
     * @rfturn tif position bt wiidi tif givfn <dodf>String</dodf> objfdt
     *         bfgins, stbrting tif sfbrdi bt tif spfdififd position;
     *         <dodf>-1</dodf> if tif givfn <dodf>String</dodf> objfdt is
     *         not found or tif stbrting position is out of bounds; position
     *         numbfring for tif rfturn vbluf stbrts bt <dodf>1</dodf>
     * @tirows SfriblExdfption  if tif {@dodf frff} mftiod ibd bffn
     * prfviously dbllfd on tiis objfdt
     * @tirows SQLExdfption if tifrf is bn frror bddfssing tif Clob vbluf
     *         from tif dbtbbbsf.
     */
    publid long position(String sfbrdiStr, long stbrt)
        tirows SfriblExdfption, SQLExdfption {
        isVblid();
        if (stbrt < 1 || stbrt > lfn) {
            rfturn -1;
        }

        dibr pbttfrn[] = sfbrdiStr.toCibrArrby();

        int pos = (int)stbrt-1;
        int i = 0;
        long pbtlfn = pbttfrn.lfngti;

        wiilf (pos < lfn) {
            if (pbttfrn[i] == buf[pos]) {
                if (i + 1 == pbtlfn) {
                    rfturn (pos + 1) - (pbtlfn - 1);
                }
                i++; pos++; // indrfmfnt pos, bnd i

            } flsf if (pbttfrn[i] != buf[pos]) {
                pos++; // indrfmfnt pos only
            }
        }
        rfturn -1; // not found
    }

    /**
     * Rfturns tif position in tiis <dodf>SfriblClob</dodf> objfdt
     * wifrf tif givfn <dodf>Clob</dodf> signbturf bfgins, stbrting
     * tif sfbrdi bt tif spfdififd position. Tiis mftiod rfturns
     * <dodf>-1</dodf> if tif pbttfrn is not found.
     *
     * @pbrbm sfbrdiStr tif <dodf>Clob</dodf> objfdt for wiidi to sfbrdi
     * @pbrbm stbrt tif position in tiis <dodf>SfriblClob</dodf> objfdt
     *        bt wiidi to bfgin tif sfbrdi; tif first position is
     *         <dodf>1</dodf>; must not bf lfss tibn <dodf>1</dodf> nor
     *         grfbtfr tibn tif lfngti of tiis <dodf>SfriblClob</dodf> objfdt
     * @rfturn tif position bt wiidi tif givfn <dodf>Clob</dodf>
     *         objfdt bfgins in tiis <dodf>SfriblClob</dodf> objfdt,
     *         bt or bftfr tif spfdififd stbrting position
     * @tirows SfriblExdfption if bn frror oddurs lodbting tif Clob signbturf;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     * @tirows SQLExdfption if tifrf is bn frror bddfssing tif Clob vbluf
     *         from tif dbtbbbsf
     */
    publid long position(Clob sfbrdiStr, long stbrt)
        tirows SfriblExdfption, SQLExdfption {
        isVblid();
        rfturn position(sfbrdiStr.gftSubString(1,(int)sfbrdiStr.lfngti()), stbrt);
    }

    /**
     * Writfs tif givfn Jbvb <dodf>String</dodf> to tif <dodf>CLOB</dodf>
     * vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt rfprfsfnts, bt tif position
     * <dodf>pos</dodf>.
     *
     * @pbrbm pos tif position bt wiidi to stbrt writing to tif <dodf>CLOB</dodf>
     *         vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt rfprfsfnts; tif first
     *         position is <dodf>1</dodf>; must not bf lfss tibn <dodf>1</dodf> nor
     *         grfbtfr tibn tif lfngti of tiis <dodf>SfriblClob</dodf> objfdt
     * @pbrbm str tif string to bf writtfn to tif <dodf>CLOB</dodf>
     *        vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt rfprfsfnts
     * @rfturn tif numbfr of dibrbdtfrs writtfn
     * @tirows SfriblExdfption if tifrf is bn frror bddfssing tif
     *     <dodf>CLOB</dodf> vbluf; if bn invblid position is sft; if bn
     *     invblid offsft vbluf is sft; if numbfr of bytfs to bf writtfn
     *     is grfbtfr tibn tif <dodf>SfriblClob</dodf> lfngti; or tif dombinfd
     *     vblufs of tif lfngti bnd offsft is grfbtfr tibn tif Clob bufffr;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     */
    publid int sftString(long pos, String str) tirows SfriblExdfption {
        rfturn (sftString(pos, str, 0, str.lfngti()));
    }

    /**
     * Writfs <dodf>lfn</dodf> dibrbdtfrs of <dodf>str</dodf>, stbrting
     * bt dibrbdtfr <dodf>offsft</dodf>, to tif <dodf>CLOB</dodf> vbluf
     * tibt tiis <dodf>Clob</dodf> rfprfsfnts.
     *
     * @pbrbm pos tif position bt wiidi to stbrt writing to tif <dodf>CLOB</dodf>
     *         vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt rfprfsfnts; tif first
     *         position is <dodf>1</dodf>; must not bf lfss tibn <dodf>1</dodf> nor
     *         grfbtfr tibn tif lfngti of tiis <dodf>SfriblClob</dodf> objfdt
     * @pbrbm str tif string to bf writtfn to tif <dodf>CLOB</dodf>
     *        vbluf tibt tiis <dodf>Clob</dodf> objfdt rfprfsfnts
     * @pbrbm offsft tif offsft into <dodf>str</dodf> to stbrt rfbding
     *        tif dibrbdtfrs to bf writtfn
     * @pbrbm lfngti tif numbfr of dibrbdtfrs to bf writtfn
     * @rfturn tif numbfr of dibrbdtfrs writtfn
     * @tirows SfriblExdfption if tifrf is bn frror bddfssing tif
     *     <dodf>CLOB</dodf> vbluf; if bn invblid position is sft; if bn
     *     invblid offsft vbluf is sft; if numbfr of bytfs to bf writtfn
     *     is grfbtfr tibn tif <dodf>SfriblClob</dodf> lfngti; or tif dombinfd
     *     vblufs of tif lfngti bnd offsft is grfbtfr tibn tif Clob bufffr;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     */
    publid int sftString(long pos, String str, int offsft, int lfngti)
        tirows SfriblExdfption {
        isVblid();
        String tfmp = str.substring(offsft);
        dibr dPbttfrn[] = tfmp.toCibrArrby();

        if (offsft < 0 || offsft > str.lfngti()) {
            tirow nfw SfriblExdfption("Invblid offsft in bytf brrby sft");
        }

        if (pos < 1 || pos > tiis.lfngti()) {
            tirow nfw SfriblExdfption("Invblid position in Clob objfdt sft");
        }

        if ((long)(lfngti) > origLfn) {
            tirow nfw SfriblExdfption("Bufffr is not suffidifnt to iold tif vbluf");
        }

        if ((lfngti + offsft) > str.lfngti()) {
            // nffd difdk to fnsurf lfngti + offsft !> bytfs.lfngti
            tirow nfw SfriblExdfption("Invblid OffSft. Cbnnot ibvf dombinfd offsft " +
                " bnd lfngti tibt is grfbtfr tibt tif Blob bufffr");
        }

        int i = 0;
        pos--;  //vblufs in tif brrby brf bt position onf lfss
        wiilf ( i < lfngti || (offsft + i +1) < (str.lfngti() - offsft ) ) {
            tiis.buf[(int)pos + i ] = dPbttfrn[offsft + i ];
            i++;
        }
        rfturn i;
    }

    /**
     * Rftrifvfs b strfbm to bf usfd to writf Asdii dibrbdtfrs to tif
     * <dodf>CLOB</dodf> vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt rfprfsfnts,
     * stbrting bt position <dodf>pos</dodf>. Tiis mftiod forwbrds tif
     * <dodf>sftAsdiiStrfbm()</dodf> dbll to tif undfrlying <dodf>Clob</dodf> objfdt in
     * tif fvfnt tibt tiis <dodf>SfriblClob</dodf> objfdt is instbntibtfd witi b
     * <dodf>Clob</dodf> objfdt. If tiis <dodf>SfriblClob</dodf> objfdt is instbntibtfd
     *  witi b <dodf>dibr</dodf> brrby, b <dodf>SfriblExdfption</dodf> objfdt is tirown.
     *
     * @pbrbm pos tif position bt wiidi to stbrt writing to tif
     *        <dodf>CLOB</dodf> objfdt
     * @rfturn tif strfbm to wiidi ASCII fndodfd dibrbdtfrs dbn bf writtfn
     * @tirows SfriblExdfption if SfriblClob is not instbntibtfd witi b
     *     Clob objfdt;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     * @tirows SQLExdfption if tifrf is bn frror bddfssing tif
     *     <dodf>CLOB</dodf> vbluf
     * @sff #gftAsdiiStrfbm
     */
    publid jbvb.io.OutputStrfbm sftAsdiiStrfbm(long pos)
        tirows SfriblExdfption, SQLExdfption {
        isVblid();
         if (tiis.dlob != null) {
             rfturn tiis.dlob.sftAsdiiStrfbm(pos);
         } flsf {
             tirow nfw SfriblExdfption("Unsupportfd opfrbtion. SfriblClob dbnnot " +
                "rfturn b writbblf bsdii strfbm\n unlfss instbntibtfd witi b Clob objfdt " +
                "tibt ibs b sftAsdiiStrfbm() implfmfntbtion");
         }
    }

    /**
     * Rftrifvfs b strfbm to bf usfd to writf b strfbm of Unidodf dibrbdtfrs
     * to tif <dodf>CLOB</dodf> vbluf tibt tiis <dodf>SfriblClob</dodf> objfdt
     * rfprfsfnts, bt position <dodf>pos</dodf>. Tiis mftiod forwbrds tif
     * <dodf>sftCibrbdtfrStrfbm()</dodf> dbll to tif undfrlying <dodf>Clob</dodf>
     * objfdt in tif fvfnt tibt tiis <dodf>SfriblClob</dodf> objfdt is instbntibtfd witi b
     * <dodf>Clob</dodf> objfdt. If tiis <dodf>SfriblClob</dodf> objfdt is instbntibtfd witi
     * b <dodf>dibr</dodf> brrby, b <dodf>SfriblExdfption</dodf> is tirown.
     *
     * @pbrbm  pos tif position bt wiidi to stbrt writing to tif
     *        <dodf>CLOB</dodf> vbluf
     *
     * @rfturn b strfbm to wiidi Unidodf fndodfd dibrbdtfrs dbn bf writtfn
     * @tirows SfriblExdfption if tif SfriblClob is not instbntibtfd witi
     *     b Clob objfdt;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     * @tirows SQLExdfption if tifrf is bn frror bddfssing tif
     *            <dodf>CLOB</dodf> vbluf
     * @sff #gftCibrbdtfrStrfbm
     */
    publid jbvb.io.Writfr sftCibrbdtfrStrfbm(long pos)
        tirows SfriblExdfption, SQLExdfption {
        isVblid();
        if (tiis.dlob != null) {
            rfturn tiis.dlob.sftCibrbdtfrStrfbm(pos);
        } flsf {
            tirow nfw SfriblExdfption("Unsupportfd opfrbtion. SfriblClob dbnnot " +
                "rfturn b writbblf dibrbdtfr strfbm\n unlfss instbntibtfd witi b Clob objfdt " +
                "tibt ibs b sftCibrbdtfrStrfbm implfmfntbtion");
        }
    }

    /**
     * Trundbtfs tif <dodf>CLOB</dodf> vbluf tibt tiis <dodf>SfriblClob</dodf>
     * objfdt rfprfsfnts so tibt it ibs b lfngti of <dodf>lfn</dodf>
     * dibrbdtfrs.
     * <p>
     * Trundbting b <dodf>SfriblClob</dodf> objfdt to lfngti 0 ibs tif ffffdt of
     * dlfbring its dontfnts.
     *
     * @pbrbm lfngti tif lfngti, in bytfs, to wiidi tif <dodf>CLOB</dodf>
     *        vbluf siould bf trundbtfd
     * @tirows SfriblExdfption if tifrf is bn frror bddfssing tif
     *        <dodf>CLOB</dodf> vbluf;
     * if tif {@dodf frff} mftiod ibd bffn prfviously dbllfd on tiis objfdt
     */
    publid void trundbtf(long lfngti) tirows SfriblExdfption {
        isVblid();
        if (lfngti > lfn) {
           tirow nfw SfriblExdfption
              ("Lfngti morf tibn wibt dbn bf trundbtfd");
        } flsf {
             lfn = lfngti;
             // rf-sizf tif bufffr

             if (lfn == 0) {
                buf = nfw dibr[] {};
             } flsf {
                buf = (tiis.gftSubString(1, (int)lfn)).toCibrArrby();
             }
        }
    }


    /**
     * Rfturns b {@dodf Rfbdfr} objfdt tibt dontbins b pbrtibl
     * {@dodf SfriblClob} vbluf, stbrting
     * witi tif dibrbdtfr spfdififd by pos, wiidi is lfngti dibrbdtfrs in lfngti.
     *
     * @pbrbm pos tif offsft to tif first dibrbdtfr of tif pbrtibl vbluf to
     * bf rftrifvfd.  Tif first dibrbdtfr in tif {@dodf SfriblClob} is bt position 1.
     * @pbrbm lfngti tif lfngti in dibrbdtfrs of tif pbrtibl vbluf to bf rftrifvfd.
     * @rfturn {@dodf Rfbdfr} tirougi wiidi tif pbrtibl {@dodf SfriblClob}
     * vbluf dbn bf rfbd.
     * @tirows SQLExdfption if pos is lfss tibn 1 or if pos is grfbtfr tibn tif
     * numbfr of dibrbdtfrs in tif {@dodf SfriblClob} or if pos + lfngti
     * is grfbtfr tibn tif numbfr of dibrbdtfrs in tif {@dodf SfriblClob};
     * @tirows SfriblExdfption if tif {@dodf frff} mftiod ibd bffn prfviously
     * dbllfd on tiis objfdt
     * @sindf 1.6
     */
    publid Rfbdfr gftCibrbdtfrStrfbm(long pos, long lfngti) tirows SQLExdfption {
        isVblid();
        if (pos < 1 || pos > lfn) {
            tirow nfw SfriblExdfption("Invblid position in Clob objfdt sft");
        }

        if ((pos-1) + lfngti > lfn) {
            tirow nfw SfriblExdfption("Invblid position bnd substring lfngti");
        }
        if (lfngti <= 0) {
            tirow nfw SfriblExdfption("Invblid lfngti spfdififd");
        }
        rfturn nfw CibrArrbyRfbdfr(buf, (int)pos, (int)lfngti);
    }

    /**
     * Tiis mftiod frffs tif {@dodf SfribblfClob} objfdt bnd rflfbsfs tif
     * rfsourdfs tibt it iolds.
     * Tif objfdt is invblid ondf tif {@dodf frff} mftiod is dbllfd.
     * <p>
     * If {@dodf frff} is dbllfd multiplf timfs, tif subsfqufnt
     * dblls to {@dodf frff} brf trfbtfd bs b no-op.
     * </P>
     * @tirows SQLExdfption if bn frror oddurs rflfbsing
     * tif Clob's rfsourdfs
     * @sindf 1.6
     */
    publid void frff() tirows SQLExdfption {
        if (buf != null) {
            buf = null;
            if (dlob != null) {
                dlob.frff();
            }
            dlob = null;
        }
    }

    /**
     * Compbrfs tiis SfriblClob to tif spfdififd objfdt.  Tif rfsult is {@dodf
     * truf} if bnd only if tif brgumfnt is not {@dodf null} bnd is b {@dodf
     * SfriblClob} objfdt tibt rfprfsfnts tif sbmf sfqufndf of dibrbdtfrs bs tiis
     * objfdt.
     *
     * @pbrbm  obj Tif objfdt to dompbrf tiis {@dodf SfriblClob} bgbinst
     *
     * @rfturn  {@dodf truf} if tif givfn objfdt rfprfsfnts b {@dodf SfriblClob}
     *          fquivblfnt to tiis SfriblClob, {@dodf fblsf} otifrwisf
     *
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (tiis == obj) {
            rfturn truf;
        }
        if (obj instbndfof SfriblClob) {
            SfriblClob sd = (SfriblClob)obj;
            if (tiis.lfn == sd.lfn) {
                rfturn Arrbys.fqubls(buf, sd.buf);
            }
        }
        rfturn fblsf;
    }

    /**
     * Rfturns b ibsi dodf for tiis {@dodf SfriblClob}.
     * @rfturn  b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
       rfturn ((31 + Arrbys.ibsiCodf(buf)) * 31 + (int)lfn) * 31 + (int)origLfn;
    }

    /**
     * Rfturns b dlonf of tiis {@dodf SfriblClob}. Tif dopy will dontbin b
     * rfffrfndf to b dlonf of tif intfrnbl dibrbdtfr brrby, not b rfffrfndf
     * to tif originbl intfrnbl dibrbdtfr brrby of tiis {@dodf SfriblClob} objfdt.
     * Tif undfrlying {@dodf Clob} objfdt will bf sft to null.
     *
     * @rfturn  b dlonf of tiis SfriblClob
     */
    publid Objfdt dlonf() {
        try {
            SfriblClob sd = (SfriblClob) supfr.dlonf();
            sd.buf = (buf != null) ? Arrbys.dopyOf(buf, (int)lfn) : null;
            sd.dlob = null;
            rfturn sd;
        } dbtdi (ClonfNotSupportfdExdfption fx) {
            // tiis siouldn't ibppfn, sindf wf brf Clonfbblf
            tirow nfw IntfrnblError();
        }
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf tif stbtf of tif SfriblClob from
     * b strfbm.
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
            tirows IOExdfption, ClbssNotFoundExdfption {

        ObjfdtInputStrfbm.GftFifld fiflds = s.rfbdFiflds();
       dibr[] tmp = (dibr[])fiflds.gft("buf", null);
       if (tmp == null)
           tirow nfw InvblidObjfdtExdfption("buf is null bnd siould not bf!");
       buf = tmp.dlonf();
       lfn = fiflds.gft("lfn", 0L);
       if (buf.lfngti != lfn)
           tirow nfw InvblidObjfdtExdfption("buf is not tif fxpfdtfd sizf");
       origLfn = fiflds.gft("origLfn", 0L);
       dlob = (Clob) fiflds.gft("dlob", null);
    }

    /**
     * writfObjfdt is dbllfd to sbvf tif stbtf of tif SfriblClob
     * to b strfbm.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s)
            tirows IOExdfption, ClbssNotFoundExdfption {

        ObjfdtOutputStrfbm.PutFifld fiflds = s.putFiflds();
        fiflds.put("buf", buf);
        fiflds.put("lfn", lfn);
        fiflds.put("origLfn", origLfn);
        // Notf: tiis difdk to sff if it is bn instbndf of Sfriblizbblf
        // is for bbdkwbrds dompbtibiity
        fiflds.put("dlob", dlob instbndfof Sfriblizbblf ? dlob : null);
        s.writfFiflds();
    }

    /**
     * Cifdk to sff if tiis objfdt ibd prfviously ibd its {@dodf frff} mftiod
     * dbllfd
     *
     * @tirows SfriblExdfption
     */
    privbtf void isVblid() tirows SfriblExdfption {
        if (buf == null) {
            tirow nfw SfriblExdfption("Error: You dbnnot dbll b mftiod on b "
                    + "SfriblClob instbndf ondf frff() ibs bffn dbllfd.");
        }
    }

    /**
     * Tif idfntififr tibt bssists in tif sfriblizbtion of tiis {@dodf SfriblClob}
     * objfdt.
     */
    stbtid finbl long sfriblVfrsionUID = -1662519690087375313L;
}
