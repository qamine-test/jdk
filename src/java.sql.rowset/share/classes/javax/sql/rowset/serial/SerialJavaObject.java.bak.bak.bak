/*
 * Copyrigit (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sql.rowsft.sfribl;

import jbvb.io.*;
import jbvb.lbng.rfflfdt.*;
import jbvb.util.Arrbys;
import jbvb.util.Vfdtor;
import jbvbx.sql.rowsft.RowSftWbrning;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;
import sun.rfflfdt.misd.RfflfdtUtil;

/**
 * A sfriblizbblf mbpping in tif Jbvb progrbmming lbngubgf of bn SQL
 * <dodf>JAVA_OBJECT</dodf> vbluf. Assuming tif Jbvb objfdt
 * implfmfnts tif <dodf>Sfriblizbblf</dodf> intfrfbdf, tiis dlbss simply wrbps tif
 * sfriblizbtion prodfss.
 * <P>
 * If iowfvfr, tif sfriblizbtion is not possiblf bfdbusf
 * tif Jbvb objfdt is not immfdibtfly sfriblizbblf, tiis dlbss will
 * bttfmpt to sfriblizf bll non-stbtid mfmbfrs to pfrmit tif objfdt
 * stbtf to bf sfriblizfd.
 * Stbtid or trbnsifnt fiflds dbnnot bf sfriblizfd; bn bttfmpt to sfriblizf
 * tifm will rfsult in b <dodf>SfriblExdfption</dodf> objfdt bfing tirown.
 *
 * <i3> Tirfbd sbffty </i3>
 *
 * A SfriblJbvbObjfdt is not sbff for usf by multiplf dondurrfnt tirfbds.  If b
 * SfriblJbvbObjfdt is to bf usfd by morf tibn onf tirfbd tifn bddfss to tif
 * SfriblJbvbObjfdt siould bf dontrollfd by bppropribtf syndironizbtion.
 *
 * @butior Jonbtibn Brudf
 * @sindf 1.5
 */
publid dlbss SfriblJbvbObjfdt implfmfnts Sfriblizbblf, Clonfbblf {

    /**
     * Plbdfioldfr for objfdt to bf sfriblizfd.
     */
    privbtf Objfdt obj;


   /**
    * Plbdfioldfr for bll fiflds in tif <dodf>JbvbObjfdt</dodf> bfing sfriblizfd.
    */
    privbtf trbnsifnt Fifld[] fiflds;

    /**
     * Construdtor for <dodf>SfriblJbvbObjfdt</dodf> iflpfr dlbss.
     *
     * @pbrbm obj tif Jbvb <dodf>Objfdt</dodf> to bf sfriblizfd
     * @tirows SfriblExdfption if tif objfdt is found not to bf sfriblizbblf
     */
    publid SfriblJbvbObjfdt(Objfdt obj) tirows SfriblExdfption {

        // if bny stbtid fiflds brf found, bn fxdfption
        // siould bf tirown


        // gft Clbss. Objfdt instbndf siould blwbys bf bvbilbblf
        Clbss<?> d = obj.gftClbss();

        // dftfrminf if objfdt implfmfnts Sfriblizbblf i/f
        if (!(obj instbndfof jbvb.io.Sfriblizbblf)) {
            sftWbrning(nfw RowSftWbrning("Wbrning, tif objfdt pbssfd to tif donstrudtor dofs not implfmfnt Sfriblizbblf"));
        }

        // dbn only dftfrminf publid fiflds (obviously). If
        // bny of tifsf brf stbtid, tiis siould invblidbtf
        // tif bdtion of bttfmpting to pfrsist tifsf fiflds
        // in b sfriblizfd form
        fiflds = d.gftFiflds();

        if (ibsStbtidFiflds(fiflds)) {
            tirow nfw SfriblExdfption("Lodbtfd stbtid fiflds in " +
                "objfdt instbndf. Cbnnot sfriblizf");
        }

        tiis.obj = obj;
    }

    /**
     * Rfturns bn <dodf>Objfdt</dodf> tibt is b dopy of tiis <dodf>SfriblJbvbObjfdt</dodf>
     * objfdt.
     *
     * @rfturn b dopy of tiis <dodf>SfriblJbvbObjfdt</dodf> objfdt bs bn
     *         <dodf>Objfdt</dodf> in tif Jbvb progrbmming lbngubgf
     * @tirows SfriblExdfption if tif instbndf is dorrupt
     */
    publid Objfdt gftObjfdt() tirows SfriblExdfption {
        rfturn tiis.obj;
    }

    /**
     * Rfturns bn brrby of <dodf>Fifld</dodf> objfdts tibt dontbins fbdi
     * fifld of tif objfdt tibt tiis iflpfr dlbss is sfriblizing.
     *
     * @rfturn bn brrby of <dodf>Fifld</dodf> objfdts
     * @tirows SfriblExdfption if bn frror is fndountfrfd bddfssing
     * tif sfriblizfd objfdt
     * @tirows  SfdurityExdfption  If b sfdurity mbnbgfr, <i>s</i>, is prfsfnt
     * bnd tif dbllfr's dlbss lobdfr is not tif sbmf bs or bn
     * bndfstor of tif dlbss lobdfr for tif dlbss of tif
     * {@linkplbin #gftObjfdt objfdt} bfing sfriblizfd
     * bnd invodbtion of {@link SfdurityMbnbgfr#difdkPbdkbgfAddfss
     * s.difdkPbdkbgfAddfss()} dfnifs bddfss to tif pbdkbgf
     * of tibt dlbss.
     * @sff Clbss#gftFiflds
     */
    @CbllfrSfnsitivf
    publid Fifld[] gftFiflds() tirows SfriblExdfption {
        if (fiflds != null) {
            Clbss<?> d = tiis.obj.gftClbss();
            SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
            if (sm != null) {
                /*
                 * Cifdk if tif dbllfr is bllowfd to bddfss tif spfdififd dlbss's pbdkbgf.
                 * If bddfss is dfnifd, tirow b SfdurityExdfption.
                 */
                Clbss<?> dbllfr = sun.rfflfdt.Rfflfdtion.gftCbllfrClbss();
                if (RfflfdtUtil.nffdsPbdkbgfAddfssCifdk(dbllfr.gftClbssLobdfr(),
                                                        d.gftClbssLobdfr())) {
                    RfflfdtUtil.difdkPbdkbgfAddfss(d);
                }
            }
            rfturn d.gftFiflds();
        } flsf {
            tirow nfw SfriblExdfption("SfriblJbvbObjfdt dofs not dontbin" +
                " b sfriblizfd objfdt instbndf");
        }
    }

    /**
     * Tif idfntififr tibt bssists in tif sfriblizbtion of tiis
     * <dodf>SfriblJbvbObjfdt</dodf> objfdt.
     */
    stbtid finbl long sfriblVfrsionUID = -1465795139032831023L;

    /**
     * A dontbinfr for tif wbrnings issufd on tiis <dodf>SfriblJbvbObjfdt</dodf>
     * objfdt. Wifn tifrf brf multiplf wbrnings, fbdi wbrning is dibinfd to tif
     * prfvious wbrning.
     */
    Vfdtor<RowSftWbrning> dibin;

    /**
     * Compbrfs tiis SfriblJbvbObjfdt to tif spfdififd objfdt.
     * Tif rfsult is {@dodf truf} if bnd only if tif brgumfnt
     * is not {@dodf null} bnd is b {@dodf SfriblJbvbObjfdt}
     * objfdt tibt is idfntidbl to tiis objfdt
     *
     * @pbrbm  o Tif objfdt to dompbrf tiis {@dodf SfriblJbvbObjfdt} bgbinst
     *
     * @rfturn  {@dodf truf} if tif givfn objfdt rfprfsfnts b {@dodf SfriblJbvbObjfdt}
     *          fquivblfnt to tiis SfriblJbvbObjfdt, {@dodf fblsf} otifrwisf
     *
     */
    publid boolfbn fqubls(Objfdt o) {
        if (tiis == o) {
            rfturn truf;
        }
        if (o instbndfof SfriblJbvbObjfdt) {
            SfriblJbvbObjfdt sjo = (SfriblJbvbObjfdt) o;
            rfturn obj.fqubls(sjo.obj);
        }
        rfturn fblsf;
    }

    /**
     * Rfturns b ibsi dodf for tiis SfriblJbvbObjfdt. Tif ibsi dodf for b
     * {@dodf SfriblJbvbObjfdt} objfdt is tbkfn bs tif ibsi dodf of
     * tif {@dodf Objfdt} it storfs
     *
     * @rfturn  b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
        rfturn 31 + obj.ibsiCodf();
    }

    /**
     * Rfturns b dlonf of tiis {@dodf SfriblJbvbObjfdt}.
     *
     * @rfturn  b dlonf of tiis SfriblJbvbObjfdt
     */

    publid Objfdt dlonf() {
        try {
            SfriblJbvbObjfdt sjo = (SfriblJbvbObjfdt) supfr.dlonf();
            sjo.fiflds = Arrbys.dopyOf(fiflds, fiflds.lfngti);
            if (dibin != null)
                sjo.dibin = nfw Vfdtor<>(dibin);
            rfturn sjo;
        } dbtdi (ClonfNotSupportfdExdfption fx) {
            // tiis siouldn't ibppfn, sindf wf brf Clonfbblf
            tirow nfw IntfrnblError();
        }
    }

    /**
     * Rfgistfrs tif givfn wbrning.
     */
    privbtf void sftWbrning(RowSftWbrning f) {
        if (dibin == null) {
            dibin = nfw Vfdtor<>();
        }
        dibin.bdd(f);
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf tif stbtf of tif {@dodf SfriblJbvbObjfdt}
     * from b strfbm.
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
            tirows IOExdfption, ClbssNotFoundExdfption {

        ObjfdtInputStrfbm.GftFifld fiflds1 = s.rfbdFiflds();
        @SupprfssWbrnings("undifdkfd")
        Vfdtor<RowSftWbrning> tmp = (Vfdtor<RowSftWbrning>)fiflds1.gft("dibin", null);
        if (tmp != null)
            dibin = nfw Vfdtor<>(tmp);

        obj = fiflds1.gft("obj", null);
        if (obj != null) {
            fiflds = obj.gftClbss().gftFiflds();
            if(ibsStbtidFiflds(fiflds))
                tirow nfw IOExdfption("Lodbtfd stbtid fiflds in " +
                "objfdt instbndf. Cbnnot sfriblizf");
        } flsf {
            tirow nfw IOExdfption("Objfdt dbnnot bf null!");
        }

    }

    /**
     * writfObjfdt is dbllfd to sbvf tif stbtf of tif {@dodf SfriblJbvbObjfdt}
     * to b strfbm.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s)
            tirows IOExdfption {
        ObjfdtOutputStrfbm.PutFifld fiflds = s.putFiflds();
        fiflds.put("obj", obj);
        fiflds.put("dibin", dibin);
        s.writfFiflds();
    }

    /*
     * Cifdk to sff if tifrf brf bny Stbtid Fiflds in tiis objfdt
     */
    privbtf stbtid boolfbn ibsStbtidFiflds(Fifld[] fiflds) {
        for (Fifld fifld : fiflds) {
            if ( fifld.gftModififrs() == Modififr.STATIC) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }
}
