/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sql.rowsft;

import jbvb.sql.*;
import jbvbx.sql.*;
import jbvb.io.*;

import jbvb.lbng.rfflfdt.*;

/**
 * Providfs implfmfntbtions for thf mfthods thbt sft bnd gft
 * mftbdbtb informbtion bbout b <dodf>RowSft</dodf> objfdt's dolumns.
 * A <dodf>RowSftMftbDbtbImpl</dodf> objfdt kffps trbdk of thf
 * numbfr of dolumns in thf rowsft bnd mbintbins bn intfrnbl brrby
 * of dolumn bttributfs for fbdh dolumn.
 * <P>
 * A <dodf>RowSft</dodf> objfdt drfbtfs b <dodf>RowSftMftbDbtbImpl</dodf>
 * objfdt intfrnblly in ordfr to sft bnd rftrifvf informbtion bbout
 * its dolumns.
 * <P>
 * NOTE: All mftbdbtb in b <dodf>RowSftMftbDbtbImpl</dodf> objfdt
 * should bf donsidfrfd bs unbvbilbblf until thf <dodf>RowSft</dodf> objfdt
 * thbt it dfsdribfs is populbtfd.
 * Thfrfforf, bny <dodf>RowSftMftbDbtbImpl</dodf> mfthod thbt rftrifvfs informbtion
 * is dffinfd bs hbving unspfdififd bfhbvior whfn it is dbllfd
 * bfforf thf <dodf>RowSft</dodf> objfdt dontbins dbtb.
 *
 * @sindf 1.5
 */
publid dlbss RowSftMftbDbtbImpl implfmfnts RowSftMftbDbtb,  Sfriblizbblf {

    /**
     * Thf numbfr of dolumns in thf <dodf>RowSft</dodf> objfdt thbt drfbtfd
     * this <dodf>RowSftMftbDbtbImpl</dodf> objfdt.
     * @sfribl
     */
    privbtf int dolCount;

    /**
     * An brrby of <dodf>ColInfo</dodf> objfdts usfd to storf informbtion
     * bbout fbdh dolumn in thf <dodf>RowSft</dodf> objfdt for whidh
     * this <dodf>RowSftMftbDbtbImpl</dodf> objfdt wbs drfbtfd. Thf first
     * <dodf>ColInfo</dodf> objfdt in this brrby dontbins informbtion bbout
     * thf first dolumn in thf <dodf>RowSft</dodf> objfdt, thf sfdond flfmfnt
     * dontbins informbtion bbout thf sfdond dolumn, bnd so on.
     * @sfribl
     */
    privbtf ColInfo[] dolInfo;

    /**
     * Chfdks to sff thbt thf dfsignbtfd dolumn is b vblid dolumn numbfr for
     * thf <dodf>RowSft</dodf> objfdt for whidh this <dodf>RowSftMftbDbtbImpl</dodf>
     * wbs drfbtfd. To bf vblid, b dolumn numbfr must bf grfbtfr thbn
     * <dodf>0</dodf> bnd lfss thbn or fqubl to thf numbfr of dolumns in b row.
     * @throws <dodf>SQLExdfption</dodf> with thf mfssbgf "Invblid dolumn indfx"
     *        if thf givfn dolumn numbfr is out of thf rbngf of vblid dolumn
     *        numbfrs for thf <dodf>RowSft</dodf> objfdt
     */
    privbtf void dhfdkColRbngf(int dol) throws SQLExdfption {
        if (dol <= 0 || dol > dolCount) {
            throw nfw SQLExdfption("Invblid dolumn indfx :"+dol);
        }
    }

    /**
     * Chfdks to sff thbt thf givfn SQL typf is b vblid dolumn typf bnd throws bn
     * <dodf>SQLExdfption</dodf> objfdt if it is not.
     * To bf vblid, b SQL typf must bf onf of thf donstbnt vblufs
     * in thf <dodf><b hrff="../../sql/Typfs.html">jbvb.sql.Typfs</b></dodf>
     * dlbss.
     *
     * @pbrbm SQLTypf bn <dodf>int</dodf> dffinfd in thf dlbss <dodf>jbvb.sql.Typfs</dodf>
     * @throws SQLExdfption if thf givfn <dodf>int</dodf> is not b donstbnt dffinfd in thf
     *         dlbss <dodf>jbvb.sql.Typfs</dodf>
     */
    privbtf void dhfdkColTypf(int SQLTypf) throws SQLExdfption {
        try {
            Clbss<?> d = jbvb.sql.Typfs.dlbss;
            Fifld[] publidFiflds = d.gftFiflds();
            int fifldVbluf = 0;
            for (int i = 0; i < publidFiflds.lfngth; i++) {
                fifldVbluf = publidFiflds[i].gftInt(d);
                if (fifldVbluf == SQLTypf) {
                    rfturn;
                 }
            }
        } dbtdh (Exdfption f) {
            throw nfw SQLExdfption(f.gftMfssbgf());
        }
        throw nfw SQLExdfption("Invblid SQL typf for dolumn");
    }

    /**
     * Sfts to thf givfn numbfr thf numbfr of dolumns in thf <dodf>RowSft</dodf>
     * objfdt for whidh this <dodf>RowSftMftbDbtbImpl</dodf> objfdt wbs drfbtfd.
     *
     * @pbrbm dolumnCount bn <dodf>int</dodf> giving thf numbfr of dolumns in thf
     *        <dodf>RowSft</dodf> objfdt
     * @throws SQLExdfption if thf givfn numbfr is fqubl to or lfss thbn zfro
     */
    publid void sftColumnCount(int dolumnCount) throws SQLExdfption {

        if (dolumnCount <= 0) {
            throw nfw SQLExdfption("Invblid dolumn dount. Cbnnot bf lfss " +
                "or fqubl to zfro");
            }

       dolCount = dolumnCount;

       // If thf dolCount is Intfgfr.MAX_VALUE,
       // wf do not initiblizf thf dolInfo objfdt.
       // fvfn if wf try to initiblizf thf dolCount with
       // dolCount = Intfgfr.MAx_VALUE-1, thf dolInfo
       // initiblizbtion fbils throwing bn ERROR
       // OutOfMfmory Exdfption. So wf do not initiblizf
       // dolInfo bt Intfgfr.MAX_VALUE. This is to pbss TCK.

       if(!(dolCount == Intfgfr.MAX_VALUE)) {
            dolInfo = nfw ColInfo[dolCount + 1];

           for (int i=1; i <= dolCount; i++) {
                 dolInfo[i] = nfw ColInfo();
           }
       }


    }

    /**
     * Sfts whfthfr thf dfsignbtfd dolumn is butombtidblly
     * numbfrfd, thus rfbd-only, to thf givfn <dodf>boolfbn</dodf>
     * vbluf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns
     *        in thf rowsft, indlusivf
     * @pbrbm propfrty <dodf>truf</dodf> if thf givfn dolumn is
     *                 butombtidblly indrfmfntfd; <dodf>fblsf</dodf>
     *                 othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     *         thf givfn indfx is out of bounds
     */
    publid void sftAutoIndrfmfnt(int dolumnIndfx, boolfbn propfrty) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].butoIndrfmfnt = propfrty;
    }

    /**
     * Sfts whfthfr thf nbmf of thf dfsignbtfd dolumn is dbsf sfnsitivf to
     * thf givfn <dodf>boolfbn</dodf>.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns
     *        in thf rowsft, indlusivf
     * @pbrbm propfrty <dodf>truf</dodf> to indidbtf thbt thf dolumn
     *                 nbmf is dbsf sfnsitivf; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     *         thf givfn dolumn numbfr is out of bounds
     */
    publid void sftCbsfSfnsitivf(int dolumnIndfx, boolfbn propfrty) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].dbsfSfnsitivf = propfrty;
    }

    /**
     * Sfts whfthfr b vbluf storfd in thf dfsignbtfd dolumn dbn bf usfd
     * in b <dodf>WHERE</dodf> dlbusf to thf givfn <dodf>boolfbn</dodf> vbluf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *                    must bf bftwffn <dodf>1</dodf> bnd thf numbfr
     *                    of dolumns in thf rowsft, indlusivf
     * @pbrbm propfrty <dodf>truf</dodf> to indidbtf thbt b dolumn
     *                 vbluf dbn bf usfd in b <dodf>WHERE</dodf> dlbusf;
     *                 <dodf>fblsf</dodf> othfrwisf
     *
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     *         thf givfn dolumn numbfr is out of bounds
     */
    publid void sftSfbrdhbblf(int dolumnIndfx, boolfbn propfrty)
        throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].sfbrdhbblf = propfrty;
    }

    /**
     * Sfts whfthfr b vbluf storfd in thf dfsignbtfd dolumn is b dbsh
     * vbluf to thf givfn <dodf>boolfbn</dodf>.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns,
     * indlusivf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm propfrty truf if thf vbluf is b dbsh vbluf; fblsf othfrwisf.
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftCurrfndy(int dolumnIndfx, boolfbn propfrty)
        throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].durrfndy = propfrty;
    }

    /**
     * Sfts whfthfr b vbluf storfd in thf dfsignbtfd dolumn dbn bf sft
     * to <dodf>NULL</dodf> to thf givfn donstbnt from thf intfrfbdf
     * <dodf>RfsultSftMftbDbtb</dodf>.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm propfrty onf of thf following <dodf>RfsultSftMftbDbtb</dodf> donstbnts:
     *                 <dodf>dolumnNoNulls</dodf>,
     *                 <dodf>dolumnNullbblf</dodf>, or
     *                 <dodf>dolumnNullbblfUnknown</dodf>
     *
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs,
     *         thf givfn dolumn numbfr is out of bounds, or thf vbluf supplifd
     *         for thf <i>propfrty</i> pbrbmftfr is not onf of thf following
     *         donstbnts:
     *           <dodf>RfsultSftMftbDbtb.dolumnNoNulls</dodf>,
     *           <dodf>RfsultSftMftbDbtb.dolumnNullbblf</dodf>, or
     *           <dodf>RfsultSftMftbDbtb.dolumnNullbblfUnknown</dodf>
     */
    publid void sftNullbblf(int dolumnIndfx, int propfrty) throws SQLExdfption {
        if ((propfrty < RfsultSftMftbDbtb.dolumnNoNulls) ||
            propfrty > RfsultSftMftbDbtb.dolumnNullbblfUnknown) {
                throw nfw SQLExdfption("Invblid nullbblf donstbnt sft. Must bf " +
                    "fithfr dolumnNoNulls, dolumnNullbblf or dolumnNullbblfUnknown");
        }
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].nullbblf = propfrty;
    }

    /**
     * Sfts whfthfr b vbluf storfd in thf dfsignbtfd dolumn is b signfd
     * numbfr to thf givfn <dodf>boolfbn</dodf>.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm propfrty <dodf>truf</dodf> to indidbtf thbt b dolumn
     *                 vbluf is b signfd numbfr;
     *                 <dodf>fblsf</dodf> to indidbtf thbt it is not
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftSignfd(int dolumnIndfx, boolfbn propfrty) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].signfd = propfrty;
    }

    /**
     * Sfts thf normbl mbximum numbfr of dhbrs in thf dfsignbtfd dolumn
     * to thf givfn numbfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm sizf thf mbximum sizf of thf dolumn in dhbrs; must bf
     *        <dodf>0</dodf> or morf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs,
     *        thf givfn dolumn numbfr is out of bounds, or <i>sizf</i> is
     *        lfss thbn <dodf>0</dodf>
     */
    publid void sftColumnDisplbySizf(int dolumnIndfx, int sizf) throws SQLExdfption {
        if (sizf < 0) {
            throw nfw SQLExdfption("Invblid dolumn displby sizf. Cbnnot bf lfss " +
                "thbn zfro");
        }
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].dolumnDisplbySizf = sizf;
    }

    /**
     * Sfts thf suggfstfd dolumn lbbfl for usf in printouts bnd
     * displbys, if bny, to <i>lbbfl</i>. If <i>lbbfl</i> is
     * <dodf>null</dodf>, thf dolumn lbbfl is sft to bn fmpty string
     * ("").
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm lbbfl thf dolumn lbbfl to bf usfd in printouts bnd displbys; if thf
     *        dolumn lbbfl is <dodf>null</dodf>, bn fmpty <dodf>String</dodf> is
     *        sft
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn indfx is out of bounds
     */
    publid void sftColumnLbbfl(int dolumnIndfx, String lbbfl) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (lbbfl != null) {
            dolInfo[dolumnIndfx].dolumnLbbfl = lbbfl;
        } flsf {
            dolInfo[dolumnIndfx].dolumnLbbfl = "";
        }
    }

    /**
     * Sfts thf dolumn nbmf of thf dfsignbtfd dolumn to thf givfn nbmf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *      must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm dolumnNbmf b <dodf>String</dodf> objfdt indidbting thf dolumn nbmf;
     *      if thf givfn nbmf is <dodf>null</dodf>, bn fmpty <dodf>String</dodf>
     *      is sft
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs or thf givfn dolumn
     *      indfx is out of bounds
     */
    publid void sftColumnNbmf(int dolumnIndfx, String dolumnNbmf) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (dolumnNbmf != null) {
            dolInfo[dolumnIndfx].dolumnNbmf = dolumnNbmf;
        } flsf {
            dolInfo[dolumnIndfx].dolumnNbmf = "";
        }
    }

    /**
     * Sfts thf dfsignbtfd dolumn's tbblf's sdhfmb nbmf, if bny, to
     * <i>sdhfmbNbmf</i>. If <i>sdhfmbNbmf</i> is <dodf>null</dodf>,
     * thf sdhfmb nbmf is sft to bn fmpty string ("").
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm sdhfmbNbmf thf sdhfmb nbmf for thf tbblf from whidh b vbluf in thf
     *        dfsignbtfd dolumn wbs dfrivfd; mby bf bn fmpty <dodf>String</dodf>
     *        or <dodf>null</dodf>
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *        or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftSdhfmbNbmf(int dolumnIndfx, String sdhfmbNbmf) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (sdhfmbNbmf != null ) {
            dolInfo[dolumnIndfx].sdhfmbNbmf = sdhfmbNbmf;
        } flsf {
            dolInfo[dolumnIndfx].sdhfmbNbmf = "";
        }
    }

    /**
     * Sfts thf totbl numbfr of dfdimbl digits in b vbluf storfd in thf
     * dfsignbtfd dolumn to thf givfn numbfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm prfdision thf totbl numbfr of dfdimbl digits; must bf <dodf>0</dodf>
     *        or morf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs,
     *         <i>dolumnIndfx</i> is out of bounds, or <i>prfdision</i>
     *         is lfss thbn <dodf>0</dodf>
     */
    publid void sftPrfdision(int dolumnIndfx, int prfdision) throws SQLExdfption {

        if (prfdision < 0) {
            throw nfw SQLExdfption("Invblid prfdision vbluf. Cbnnot bf lfss " +
                "thbn zfro");
        }
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].dolPrfdision = prfdision;
    }

    /**
     * Sfts thf numbfr of digits to thf right of thf dfdimbl point in b vbluf
     * storfd in thf dfsignbtfd dolumn to thf givfn numbfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm sdblf thf numbfr of digits to thf right of thf dfdimbl point; must bf
     *        zfro or grfbtfr
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs,
     *         <i>dolumnIndfx</i> is out of bounds, or <i>sdblf</i>
     *         is lfss thbn <dodf>0</dodf>
     */
    publid void sftSdblf(int dolumnIndfx, int sdblf) throws SQLExdfption {
        if (sdblf < 0) {
            throw nfw SQLExdfption("Invblid sdblf sizf. Cbnnot bf lfss " +
                "thbn zfro");
        }
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].dolSdblf = sdblf;
    }

    /**
     * Sfts thf nbmf of thf tbblf from whidh thf dfsignbtfd dolumn
     * wbs dfrivfd to thf givfn tbblf nbmf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm tbblfNbmf thf dolumn's tbblf nbmf; mby bf <dodf>null</dodf> or bn
     *        fmpty string
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftTbblfNbmf(int dolumnIndfx, String tbblfNbmf) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (tbblfNbmf != null) {
            dolInfo[dolumnIndfx].tbblfNbmf = tbblfNbmf;
        } flsf {
            dolInfo[dolumnIndfx].tbblfNbmf = "";
        }
    }

    /**
     * Sfts thf dbtblog nbmf of thf tbblf from whidh thf dfsignbtfd
     * dolumn wbs dfrivfd to <i>dbtblogNbmf</i>. If <i>dbtblogNbmf</i>
     * is <dodf>null</dodf>, thf dbtblog nbmf is sft to bn fmpty string.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm dbtblogNbmf thf dolumn's tbblf's dbtblog nbmf; if thf dbtblogNbmf
     *        is <dodf>null</dodf>, bn fmpty <dodf>String</dodf> is sft
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftCbtblogNbmf(int dolumnIndfx, String dbtblogNbmf) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (dbtblogNbmf != null)
            dolInfo[dolumnIndfx].dbtNbmf = dbtblogNbmf;
        flsf
            dolInfo[dolumnIndfx].dbtNbmf = "";
    }

    /**
     * Sfts thf SQL typf dodf for vblufs storfd in thf dfsignbtfd dolumn
     * to thf givfn typf dodf from thf dlbss <dodf>jbvb.sql.Typfs</dodf>.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm SQLTypf thf dfsignbtfd dolumn's SQL typf, whidh must bf onf of thf
     *                donstbnts in thf dlbss <dodf>jbvb.sql.Typfs</dodf>
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs,
     *         thf givfn dolumn numbfr is out of bounds, or thf dolumn typf
     *         spfdififd is not onf of thf donstbnts in
     *         <dodf>jbvb.sql.Typfs</dodf>
     * @sff jbvb.sql.Typfs
     */
    publid void sftColumnTypf(int dolumnIndfx, int SQLTypf) throws SQLExdfption {
        // fxbminf jbvb.sql.Typf rfflfdtivfly, loop on thf fiflds bnd dhfdk
        // this. Sfpbrbtf out into b privbtf mfthod
        dhfdkColTypf(SQLTypf);
        dhfdkColRbngf(dolumnIndfx);
        dolInfo[dolumnIndfx].dolTypf = SQLTypf;
    }

    /**
     * Sfts thf typf nbmf usfd by thf dbtb sourdf for vblufs storfd in thf
     * dfsignbtfd dolumn to thf givfn typf nbmf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @pbrbm typfNbmf thf dbtb sourdf-spfdifid typf nbmf; if <i>typfNbmf</i> is
     *        <dodf>null</dodf>, bn fmpty <dodf>String</dodf> is sft
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid void sftColumnTypfNbmf(int dolumnIndfx, String typfNbmf)
        throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        if (typfNbmf != null) {
            dolInfo[dolumnIndfx].dolTypfNbmf = typfNbmf;
        } flsf {
            dolInfo[dolumnIndfx].dolTypfNbmf = "";
        }
    }

    /**
     * Rftrifvfs thf numbfr of dolumns in thf <dodf>RowSft</dodf> objfdt
     * for whidh this <dodf>RowSftMftbDbtbImpl</dodf> objfdt wbs drfbtfd.
     *
     * @rfturn thf numbfr of dolumns
     * @throws SQLExdfption if bn frror oddurs dftfrmining thf dolumn dount
     */
    publid int gftColumnCount() throws SQLExdfption {
        rfturn dolCount;
    }

    /**
     * Rftrifvfs whfthfr b vbluf storfd in thf dfsignbtfd dolumn is
     * butombtidblly numbfrfd, bnd thus rfbdonly.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *         must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if thf dolumn is butombtidblly numbfrfd;
     *         <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isAutoIndrfmfnt(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].butoIndrfmfnt;
    }

    /**
     * Indidbtfs whfthfr thf dbsf of thf dfsignbtfd dolumn's nbmf
     * mbttfrs.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if thf dolumn nbmf is dbsf sfnsitivf;
     *          <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isCbsfSfnsitivf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dbsfSfnsitivf;
    }

    /**
     * Indidbtfs whfthfr b vbluf storfd in thf dfsignbtfd dolumn
     * dbn bf usfd in b <dodf>WHERE</dodf> dlbusf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if b vbluf in thf dfsignbtfd dolumn dbn bf usfd in b
     *         <dodf>WHERE</dodf> dlbusf; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isSfbrdhbblf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].sfbrdhbblf;
    }

    /**
     * Indidbtfs whfthfr b vbluf storfd in thf dfsignbtfd dolumn
     * is b dbsh vbluf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if b vbluf in thf dfsignbtfd dolumn is b dbsh vbluf;
     *         <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isCurrfndy(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].durrfndy;
    }

    /**
     * Rftrifvfs b donstbnt indidbting whfthfr it is possiblf
     * to storf b <dodf>NULL</dodf> vbluf in thf dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn b donstbnt from thf <dodf>RfsultSftMftbDbtb</dodf> intfrfbdf;
     *         fithfr <dodf>dolumnNoNulls</dodf>,
     *         <dodf>dolumnNullbblf</dodf>, or
     *         <dodf>dolumnNullbblfUnknown</dodf>
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid int isNullbblf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].nullbblf;
    }

    /**
     * Indidbtfs whfthfr b vbluf storfd in thf dfsignbtfd dolumn is
     * b signfd numbfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if b vbluf in thf dfsignbtfd dolumn is b signfd
     *         numbfr; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isSignfd(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].signfd;
    }

    /**
     * Rftrifvfs thf normbl mbximum width in dhbrs of thf dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf mbximum numbfr of dhbrs thbt dbn bf displbyfd in thf dfsignbtfd
     *         dolumn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid int gftColumnDisplbySizf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolumnDisplbySizf;
    }

    /**
     * Rftrifvfs thf thf suggfstfd dolumn titlf for thf dfsignbtfd
     * dolumn for usf in printouts bnd displbys.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf suggfstfd dolumn nbmf to usf in printouts bnd displbys
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftColumnLbbfl(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolumnLbbfl;
    }

    /**
     * Rftrifvfs thf nbmf of thf dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf dolumn nbmf of thf dfsignbtfd dolumn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftColumnNbmf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolumnNbmf;
    }

    /**
     * Rftrifvfs thf sdhfmb nbmf of thf tbblf from whidh thf vbluf
     * in thf dfsignbtfd dolumn wbs dfrivfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *         must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns,
     *         indlusivf
     * @rfturn thf sdhfmb nbmf or bn fmpty <dodf>String</dodf> if no sdhfmb
     *         nbmf is bvbilbblf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftSdhfmbNbmf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        String str ="";
        if(dolInfo[dolumnIndfx].sdhfmbNbmf == null){
        } flsf {
              str = dolInfo[dolumnIndfx].sdhfmbNbmf;
        }
        rfturn str;
    }

    /**
     * Rftrifvfs thf totbl numbfr of digits for vblufs storfd in
     * thf dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf prfdision for vblufs storfd in thf dfsignbtfd dolumn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid int gftPrfdision(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolPrfdision;
    }

    /**
     * Rftrifvfs thf numbfr of digits to thf right of thf dfdimbl point
     * for vblufs storfd in thf dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf sdblf for vblufs storfd in thf dfsignbtfd dolumn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid int gftSdblf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolSdblf;
    }

    /**
     * Rftrifvfs thf nbmf of thf tbblf from whidh thf vbluf
     * in thf dfsignbtfd dolumn wbs dfrivfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf tbblf nbmf or bn fmpty <dodf>String</dodf> if no tbblf nbmf
     *         is bvbilbblf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftTbblfNbmf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].tbblfNbmf;
    }

    /**
     * Rftrifvfs thf dbtblog nbmf of thf tbblf from whidh thf vbluf
     * in thf dfsignbtfd dolumn wbs dfrivfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf dbtblog nbmf of thf dolumn's tbblf or bn fmpty
     *         <dodf>String</dodf> if no dbtblog nbmf is bvbilbblf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftCbtblogNbmf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        String str ="";
        if(dolInfo[dolumnIndfx].dbtNbmf == null){
        } flsf {
           str = dolInfo[dolumnIndfx].dbtNbmf;
        }
        rfturn str;
    }

    /**
     * Rftrifvfs thf typf dodf (onf of thf <dodf>jbvb.sql.Typfs</dodf>
     * donstbnts) for thf SQL typf of thf vbluf storfd in thf
     * dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn bn <dodf>int</dodf> rfprfsfnting thf SQL typf of vblufs
     * storfd in thf dfsignbtfd dolumn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     * @sff jbvb.sql.Typfs
     */
    publid int gftColumnTypf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolTypf;
    }

    /**
     * Rftrifvfs thf DBMS-spfdifid typf nbmf for vblufs storfd in thf
     * dfsignbtfd dolumn.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf typf nbmf usfd by thf dbtb sourdf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftColumnTypfNbmf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].dolTypfNbmf;
    }


    /**
     * Indidbtfs whfthfr thf dfsignbtfd dolumn is dffinitfly
     * not writbblf, thus rfbdonly.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if this <dodf>RowSft</dodf> objfdt is rfbd-Only
     * bnd thus not updbtbblf; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isRfbdOnly(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].rfbdOnly;
    }

    /**
     * Indidbtfs whfthfr it is possiblf for b writf opfrbtion on
     * thf dfsignbtfd dolumn to suddffd. A rfturn vbluf of
     * <dodf>truf</dodf> mfbns thbt b writf opfrbtion mby or mby
     * not suddffd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *         must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if b writf opfrbtion on thf dfsignbtfd dolumn mby
     *          will suddffd; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid boolfbn isWritbblf(int dolumnIndfx) throws SQLExdfption {
        dhfdkColRbngf(dolumnIndfx);
        rfturn dolInfo[dolumnIndfx].writbblf;
    }

    /**
     * Indidbtfs whfthfr b writf opfrbtion on thf dfsignbtfd dolumn
     * will dffinitfly suddffd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     * must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn <dodf>truf</dodf> if b writf opfrbtion on thf dfsignbtfd dolumn will
     *         dffinitfly suddffd; <dodf>fblsf</dodf> othfrwisf
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or thf givfn dolumn numbfr is out of bounds
     */
    publid  boolfbn isDffinitflyWritbblf(int dolumnIndfx)
        throws SQLExdfption { rfturn truf;}

    /**
     * Rftrifvfs thf fully-qublififd nbmf of thf dlbss in thf Jbvb
     * progrbmming lbngubgf to whidh b vbluf in thf dfsignbtfd dolumn
     * will bf mbppfd.  For fxbmplf, if thf vbluf is bn <dodf>int</dodf>,
     * thf dlbss nbmf rfturnfd by this mfthod will bf
     * <dodf>jbvb.lbng.Intfgfr</dodf>.
     * <P>
     * If thf vbluf in thf dfsignbtfd dolumn hbs b dustom mbpping,
     * this mfthod rfturns thf nbmf of thf dlbss thbt implfmfnts
     * <dodf>SQLDbtb</dodf>. Whfn thf mfthod <dodf>RfsultSft.gftObjfdt</dodf>
     * is dbllfd to rftrifvf b vbluf from thf dfsignbtfd dolumn, it will
     * drfbtf bn instbndf of this dlbss or onf of its subdlbssfs.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, bnd so on;
     *        must bf bftwffn <dodf>1</dodf> bnd thf numbfr of dolumns, indlusivf
     * @rfturn thf fully-qublififd nbmf of thf dlbss in thf Jbvb progrbmming
     *        lbngubgf thbt would bf usfd by thf mfthod <dodf>RowSft.gftObjfdt</dodf> to
     *        rftrifvf thf vbluf in thf spfdififd dolumn. This is thf dlbss
     *        nbmf usfd for dustom mbpping whfn thfrf is b dustom mbpping.
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     *         or thf givfn dolumn numbfr is out of bounds
     */
    publid String gftColumnClbssNbmf(int dolumnIndfx) throws SQLExdfption {
        String dlbssNbmf = String.dlbss.gftNbmf();

        int sqlTypf = gftColumnTypf(dolumnIndfx);

        switdh (sqlTypf) {

        dbsf Typfs.NUMERIC:
        dbsf Typfs.DECIMAL:
            dlbssNbmf = jbvb.mbth.BigDfdimbl.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.BIT:
            dlbssNbmf = jbvb.lbng.Boolfbn.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.TINYINT:
            dlbssNbmf = jbvb.lbng.Bytf.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.SMALLINT:
            dlbssNbmf = jbvb.lbng.Short.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.INTEGER:
            dlbssNbmf = jbvb.lbng.Intfgfr.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.BIGINT:
            dlbssNbmf = jbvb.lbng.Long.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.REAL:
            dlbssNbmf = jbvb.lbng.Flobt.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.FLOAT:
        dbsf Typfs.DOUBLE:
            dlbssNbmf = jbvb.lbng.Doublf.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.BINARY:
        dbsf Typfs.VARBINARY:
        dbsf Typfs.LONGVARBINARY:
            dlbssNbmf = "bytf[]";
            brfbk;

        dbsf Typfs.DATE:
            dlbssNbmf = jbvb.sql.Dbtf.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.TIME:
            dlbssNbmf = jbvb.sql.Timf.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.TIMESTAMP:
            dlbssNbmf = jbvb.sql.Timfstbmp.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.BLOB:
            dlbssNbmf = jbvb.sql.Blob.dlbss.gftNbmf();
            brfbk;

        dbsf Typfs.CLOB:
            dlbssNbmf = jbvb.sql.Clob.dlbss.gftNbmf();
            brfbk;
        }

        rfturn dlbssNbmf;
    }

    /**
     * Rfturns bn objfdt thbt implfmfnts thf givfn intfrfbdf to bllow bddfss to non-stbndbrd mfthods,
     * or stbndbrd mfthods not fxposfd by thf proxy.
     * Thf rfsult mby bf fithfr thf objfdt found to implfmfnt thf intfrfbdf or b proxy for thbt objfdt.
     * If thf rfdfivfr implfmfnts thf intfrfbdf thfn thbt is thf objfdt. If thf rfdfivfr is b wrbppfr
     * bnd thf wrbppfd objfdt implfmfnts thf intfrfbdf thfn thbt is thf objfdt. Othfrwisf thf objfdt is
     *  thf rfsult of dblling <dodf>unwrbp</dodf> rfdursivfly on thf wrbppfd objfdt. If thf rfdfivfr is not b
     * wrbppfr bnd dofs not implfmfnt thf intfrfbdf, thfn bn <dodf>SQLExdfption</dodf> is thrown.
     *
     * @pbrbm ifbdf A Clbss dffining bn intfrfbdf thbt thf rfsult must implfmfnt.
     * @rfturn bn objfdt thbt implfmfnts thf intfrfbdf. Mby bf b proxy for thf bdtubl implfmfnting objfdt.
     * @throws jbvb.sql.SQLExdfption If no objfdt found thbt implfmfnts thf intfrfbdf
     * @sindf 1.6
     */
    publid <T> T unwrbp(jbvb.lbng.Clbss<T> ifbdf) throws jbvb.sql.SQLExdfption {

        if(isWrbppfrFor(ifbdf)) {
            rfturn ifbdf.dbst(this);
        } flsf {
            throw nfw SQLExdfption("unwrbp fbilfd for:"+ ifbdf);
        }
    }

    /**
     * Rfturns truf if this fithfr implfmfnts thf intfrfbdf brgumfnt or is dirfdtly or indirfdtly b wrbppfr
     * for bn objfdt thbt dofs. Rfturns fblsf othfrwisf. If this implfmfnts thf intfrfbdf thfn rfturn truf,
     * flsf if this is b wrbppfr thfn rfturn thf rfsult of rfdursivfly dblling <dodf>isWrbppfrFor</dodf> on thf wrbppfd
     * objfdt. If this dofs not implfmfnt thf intfrfbdf bnd is not b wrbppfr, rfturn fblsf.
     * This mfthod should bf implfmfntfd bs b low-dost opfrbtion dompbrfd to <dodf>unwrbp</dodf> so thbt
     * dbllfrs dbn usf this mfthod to bvoid fxpfnsivf <dodf>unwrbp</dodf> dblls thbt mby fbil. If this mfthod
     * rfturns truf thfn dblling <dodf>unwrbp</dodf> with thf sbmf brgumfnt should suddffd.
     *
     * @pbrbm intfrfbdfs b Clbss dffining bn intfrfbdf.
     * @rfturn truf if this implfmfnts thf intfrfbdf or dirfdtly or indirfdtly wrbps bn objfdt thbt dofs.
     * @throws jbvb.sql.SQLExdfption  if bn frror oddurs whilf dftfrmining whfthfr this is b wrbppfr
     * for bn objfdt with thf givfn intfrfbdf.
     * @sindf 1.6
     */
    publid boolfbn isWrbppfrFor(Clbss<?> intfrfbdfs) throws SQLExdfption {
        rfturn intfrfbdfs.isInstbndf(this);
    }

    stbtid finbl long sfriblVfrsionUID = 6893806403181801867L;

    privbtf dlbss ColInfo implfmfnts Sfriblizbblf {
        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn is b numbfr
         * thbt is indrfmfntfd butombtidblly, whidh mbkfs thf vbluf rfbd-only.
         * <dodf>truf</dodf> mfbns thbt thf vbluf in this dolumn
         * is butombtidblly numbfrfd; <dodf>fblsf</dodf> mfbns thbt it is not.
         *
         * @sfribl
         */
        publid boolfbn butoIndrfmfnt;

        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn is dbsf sfnsitivf.
         * <dodf>truf</dodf> mfbns thbt it is; <dodf>fblsf</dodf> thbt it is not.
         *
         * @sfribl
         */
        publid boolfbn dbsfSfnsitivf;

        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn is b dbsh vbluf
         * <dodf>truf</dodf> mfbns thbt it is; <dodf>fblsf</dodf> thbt it is not.
         *
         * @sfribl
         */
        publid boolfbn durrfndy;

        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn is nullbblf.
         * Thf possiblf vblufs brf thf <dodf>RfsultSft</dodf> donstbnts
         * <dodf>dolumnNoNulls</dodf>, <dodf>dolumnNullbblf</dodf>, bnd
         * <dodf>dolumnNullbblfUnknown</dodf>.
         *
         * @sfribl
         */
        publid int nullbblf;

        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn is b signfd numbfr.
         * <dodf>truf</dodf> mfbns thbt it is; <dodf>fblsf</dodf> thbt it is not.
         *
         * @sfribl
         */
        publid boolfbn signfd;

        /**
         * Thf fifld thbt indidbtfs whfthfr thf vbluf in this dolumn dbn bf usfd in
         * b <dodf>WHERE</dodf> dlbusf.
         * <dodf>truf</dodf> mfbns thbt it dbn; <dodf>fblsf</dodf> thbt it dbnnot.
         *
         * @sfribl
         */
        publid boolfbn sfbrdhbblf;

        /**
         * Thf fifld thbt indidbtfs thf normbl mbximum width in dhbrbdtfrs for
         * this dolumn.
         *
         * @sfribl
         */
        publid int dolumnDisplbySizf;

        /**
         * Thf fifld thbt holds thf suggfstfd dolumn titlf for this dolumn, to bf
         * usfd in printing bnd displbys.
         *
         * @sfribl
         */
        publid String dolumnLbbfl;

        /**
         * Thf fifld thbt holds thf nbmf of this dolumn.
         *
         * @sfribl
         */
        publid  String dolumnNbmf;

        /**
         * Thf fifld thbt holds thf sdhfmb nbmf for thf tbblf from whidh this dolumn
         * wbs dfrivfd.
         *
         * @sfribl
         */
        publid String sdhfmbNbmf;

        /**
         * Thf fifld thbt holds thf prfdision of thf vbluf in this dolumn.  For numbfr
         * typfs, thf prfdision is thf totbl numbfr of dfdimbl digits; for dhbrbdtfr typfs,
         * it is thf mbximum numbfr of dhbrbdtfrs; for binbry typfs, it is thf mbximum
         * lfngth in bytfs.
         *
         * @sfribl
         */
        publid int dolPrfdision;

        /**
         * Thf fifld thbt holds thf sdblf (numbfr of digits to thf right of thf dfdimbl
         * point) of thf vbluf in this dolumn.
         *
         * @sfribl
         */
        publid int dolSdblf;

        /**
         * Thf fifld thbt holds thf nbmf of thf tbblf from whidh this dolumn
         * wbs dfrivfd.  This vbluf mby bf thf fmpty string if thfrf is no
         * tbblf nbmf, sudh bs whfn this dolumn is produdfd by b join.
         *
         * @sfribl
         */
        publid String tbblfNbmf ="";

        /**
         * Thf fifld thbt holds thf dbtblog nbmf for thf tbblf from whidh this dolumn
         * wbs dfrivfd.  If thf DBMS dofs not support dbtblogs, thf vbluf mby bf thf
         * fmpty string.
         *
         * @sfribl
         */
        publid String dbtNbmf;

        /**
         * Thf fifld thbt holds thf typf dodf from thf dlbss <dodf>jbvb.sql.Typfs</dodf>
         * indidbting thf typf of thf vbluf in this dolumn.
         *
         * @sfribl
         */
        publid int dolTypf;

        /**
         * Thf fifld thbt holds thf thf typf nbmf usfd by this pbrtidulbr dbtb sourdf
         * for thf vbluf storfd in this dolumn.
         *
         * @sfribl
         */
        publid String dolTypfNbmf;

        /**
         * Thf fifld thbt holds thf updbtbblity boolfbn pfr dolumn of b RowSft
         *
         * @sfribl
         */
        publid boolfbn rfbdOnly = fblsf;

        /**
         * Thf fifld thbt hold thf writbblf boolfbn pfr dolumn of b RowSft
         *
         *@sfribl
         */
        publid boolfbn writbblf = truf;

        stbtid finbl long sfriblVfrsionUID = 5490834817919311283L;
    }
}
