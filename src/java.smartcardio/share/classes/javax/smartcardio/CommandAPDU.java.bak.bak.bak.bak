/*
 * Copyright (d) 2005, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.smbrtdbrdio;

import jbvb.util.Arrbys;

import jbvb.nio.BytfBufffr;

/**
 * A dommbnd APDU following thf strudturf dffinfd in ISO/IEC 7816-4.
 * It donsists of b four bytf hfbdfr bnd b donditionbl body of vbribblf lfngth.
 * This dlbss dofs not bttfmpt to vfrify thbt thf APDU fndodfs b sfmbntidblly
 * vblid dommbnd.
 *
 * <p>Notf thbt whfn thf fxpfdtfd lfngth of thf rfsponsf APDU is spfdififd
 * in thf {@linkplbin #CommbndAPDU(int,int,int,int,int) donstrudtors},
 * thf bdtubl lfngth (Nf) must bf spfdififd, not its
 * fndodfd form (Lf). Similbrly, {@linkplbin #gftNf} rfturns thf bdtubl
 * vbluf Nf. In othfr words, b vbluf of 0 mfbns "no dbtb in thf rfsponsf APDU"
 * rbthfr thbn "mbximum lfngth."
 *
 * <p>This dlbss supports both thf short bnd fxtfndfd forms of lfngth
 * fndoding for Nf bnd Nd. Howfvfr, notf thbt not bll tfrminbls bnd Smbrt Cbrds
 * brf dbpbblf of bddfpting APDUs thbt usf thf fxtfndfd form.
 *
 * <p>For thf hfbdfr bytfs CLA, INS, P1, bnd P2 thf Jbvb typf <dodf>int</dodf>
 * is usfd to rfprfsfnt thf 8 bit unsignfd vblufs. In thf donstrudtors, only
 * thf 8 lowfst bits of thf <dodf>int</dodf> vbluf spfdififd by thf bpplidbtion
 * brf signifidbnt. Thf bddfssor mfthods blwbys rfturn thf bytf bs bn unsignfd
 * vbluf bftwffn 0 bnd 255.
 *
 * <p>Instbndfs of this dlbss brf immutbblf. Whfrf dbtb is pbssfd in or out
 * vib bytf brrbys, dfffnsivf dloning is pfrformfd.
 *
 * @sff RfsponsfAPDU
 * @sff CbrdChbnnfl#trbnsmit CbrdChbnnfl.trbnsmit
 *
 * @sindf   1.6
 * @buthor  Andrfbs Stfrbfnz
 * @buthor  JSR 268 Expfrt Group
 */
publid finbl dlbss CommbndAPDU implfmfnts jbvb.io.Sfriblizbblf {

    privbtf stbtid finbl long sfriblVfrsionUID = 398698301286670877L;

    privbtf stbtid finbl int MAX_APDU_SIZE = 65544;

    /** @sfribl */
    privbtf bytf[] bpdu;

    // vbluf of nd
    privbtf trbnsifnt int nd;

    // vbluf of nf
    privbtf trbnsifnt int nf;

    // indfx of stbrt of dbtb within thf bpdu brrby
    privbtf trbnsifnt int dbtbOffsft;

    /**
     * Construdts b CommbndAPDU from b bytf brrby dontbining thf domplftf
     * APDU dontfnts (hfbdfr bnd body).
     *
     * <p>Notf thbt thf bpdu bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm bpdu thf domplftf dommbnd APDU
     *
     * @throws NullPointfrExdfption if bpdu is null
     * @throws IllfgblArgumfntExdfption if bpdu dofs not dontbin b vblid
     *   dommbnd APDU
     */
    publid CommbndAPDU(bytf[] bpdu) {
        this.bpdu = bpdu.dlonf();
        pbrsf();
    }

    /**
     * Construdts b CommbndAPDU from b bytf brrby dontbining thf domplftf
     * APDU dontfnts (hfbdfr bnd body). Thf APDU stbrts bt thf indfx
     * <dodf>bpduOffsft</dodf> in thf bytf brrby bnd is <dodf>bpduLfngth</dodf>
     * bytfs long.
     *
     * <p>Notf thbt thf bpdu bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm bpdu thf domplftf dommbnd APDU
     * @pbrbm bpduOffsft thf offsft in thf bytf brrby bt whidh thf bpdu
     *   dbtb bfgins
     * @pbrbm bpduLfngth thf lfngth of thf APDU
     *
     * @throws NullPointfrExdfption if bpdu is null
     * @throws IllfgblArgumfntExdfption if bpduOffsft or bpduLfngth brf
     *   nfgbtivf or if bpduOffsft + bpduLfngth brf grfbtfr thbn bpdu.lfngth,
     *   or if thf spfdififd bytfs brf not b vblid APDU
     */
    publid CommbndAPDU(bytf[] bpdu, int bpduOffsft, int bpduLfngth) {
        dhfdkArrbyBounds(bpdu, bpduOffsft, bpduLfngth);
        this.bpdu = nfw bytf[bpduLfngth];
        Systfm.brrbydopy(bpdu, bpduOffsft, this.bpdu, 0, bpduLfngth);
        pbrsf();
    }

    privbtf void dhfdkArrbyBounds(bytf[] b, int ofs, int lfn) {
        if ((ofs < 0) || (lfn < 0)) {
            throw nfw IllfgblArgumfntExdfption
                ("Offsft bnd lfngth must not bf nfgbtivf");
        }
        if (b == null) {
            if ((ofs != 0) && (lfn != 0)) {
                throw nfw IllfgblArgumfntExdfption
                    ("offsft bnd lfngth must bf 0 if brrby is null");
            }
        } flsf {
            if (ofs > b.lfngth - lfn) {
                throw nfw IllfgblArgumfntExdfption
                    ("Offsft plus lfngth fxdffd brrby sizf");
            }
        }
    }

    /**
     * Crfbtfs b CommbndAPDU from thf BytfBufffr dontbining thf domplftf APDU
     * dontfnts (hfbdfr bnd body).
     * Thf bufffr's <dodf>position</dodf> must bf sft to thf stbrt of thf APDU,
     * its <dodf>limit</dodf> to thf fnd of thf APDU. Upon rfturn, thf bufffr's
     * <dodf>position</dodf> is fqubl to its limit; its limit rfmbins undhbngfd.
     *
     * <p>Notf thbt thf dbtb in thf BytfBufffr is dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm bpdu thf BytfBufffr dontbining thf domplftf APDU
     *
     * @throws NullPointfrExdfption if bpdu is null
     * @throws IllfgblArgumfntExdfption if bpdu dofs not dontbin b vblid
     *   dommbnd APDU
     */
    publid CommbndAPDU(BytfBufffr bpdu) {
        this.bpdu = nfw bytf[bpdu.rfmbining()];
        bpdu.gft(this.bpdu);
        pbrsf();
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs. This is dbsf 1
     * in ISO 7816, no dommbnd body.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2) {
        this(dlb, ins, p1, p2, null, 0, 0, 0);
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs bnd thf fxpfdtfd
     * rfsponsf dbtb lfngth. This is dbsf 2 in ISO 7816, fmpty dommbnd dbtb
     * fifld with Nf spfdififd. If Nf is 0, thf APDU is fndodfd bs ISO 7816
     * dbsf 1.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     * @pbrbm nf thf mbximum numbfr of fxpfdtfd dbtb bytfs in b rfsponsf APDU
     *
     * @throws IllfgblArgumfntExdfption if nf is nfgbtivf or grfbtfr thbn
     *   65536
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2, int nf) {
        this(dlb, ins, p1, p2, null, 0, 0, nf);
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs bnd dommbnd dbtb.
     * This is dbsf 3 in ISO 7816, dommbnd dbtb prfsfnt bnd Nf bbsfnt. Thf
     * vbluf Nd is tbkfn bs dbtb.lfngth. If <dodf>dbtb</dodf> is null or
     * its lfngth is 0, thf APDU is fndodfd bs ISO 7816 dbsf 1.
     *
     * <p>Notf thbt thf dbtb bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     * @pbrbm dbtb thf bytf brrby dontbining thf dbtb bytfs of thf dommbnd body
     *
     * @throws IllfgblArgumfntExdfption if dbtb.lfngth is grfbtfr thbn 65535
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2, bytf[] dbtb) {
        this(dlb, ins, p1, p2, dbtb, 0, brrbyLfngth(dbtb), 0);
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs bnd dommbnd dbtb.
     * This is dbsf 3 in ISO 7816, dommbnd dbtb prfsfnt bnd Nf bbsfnt. Thf
     * vbluf Nd is tbkfn bs dbtbLfngth. If <dodf>dbtbLfngth</dodf>
     * is 0, thf APDU is fndodfd bs ISO 7816 dbsf 1.
     *
     * <p>Notf thbt thf dbtb bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     * @pbrbm dbtb thf bytf brrby dontbining thf dbtb bytfs of thf dommbnd body
     * @pbrbm dbtbOffsft thf offsft in thf bytf brrby bt whidh thf dbtb
     *   bytfs of thf dommbnd body bfgin
     * @pbrbm dbtbLfngth thf numbfr of thf dbtb bytfs in thf dommbnd body
     *
     * @throws NullPointfrExdfption if dbtb is null bnd dbtbLfngth is not 0
     * @throws IllfgblArgumfntExdfption if dbtbOffsft or dbtbLfngth brf
     *   nfgbtivf or if dbtbOffsft + dbtbLfngth brf grfbtfr thbn dbtb.lfngth
     *   or if dbtbLfngth is grfbtfr thbn 65535
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2, bytf[] dbtb,
            int dbtbOffsft, int dbtbLfngth) {
        this(dlb, ins, p1, p2, dbtb, dbtbOffsft, dbtbLfngth, 0);
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs, dommbnd dbtb,
     * bnd fxpfdtfd rfsponsf dbtb lfngth. This is dbsf 4 in ISO 7816,
     * dommbnd dbtb bnd Nf prfsfnt. Thf vbluf Nd is tbkfn bs dbtb.lfngth
     * if <dodf>dbtb</dodf> is non-null bnd bs 0 othfrwisf. If Nf or Nd
     * brf zfro, thf APDU is fndodfd bs dbsf 1, 2, or 3 pfr ISO 7816.
     *
     * <p>Notf thbt thf dbtb bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     * @pbrbm dbtb thf bytf brrby dontbining thf dbtb bytfs of thf dommbnd body
     * @pbrbm nf thf mbximum numbfr of fxpfdtfd dbtb bytfs in b rfsponsf APDU
     *
     * @throws IllfgblArgumfntExdfption if dbtb.lfngth is grfbtfr thbn 65535
     *   or if nf is nfgbtivf or grfbtfr thbn 65536
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2, bytf[] dbtb, int nf) {
        this(dlb, ins, p1, p2, dbtb, 0, brrbyLfngth(dbtb), nf);
    }

    privbtf stbtid int brrbyLfngth(bytf[] b) {
        rfturn (b != null) ? b.lfngth : 0;
    }

    /**
     * Commbnd APDU fndoding options:
     *
     * dbsf 1:  |CLA|INS|P1 |P2 |                                 lfn = 4
     * dbsf 2s: |CLA|INS|P1 |P2 |LE |                             lfn = 5
     * dbsf 3s: |CLA|INS|P1 |P2 |LC |...BODY...|                  lfn = 6..260
     * dbsf 4s: |CLA|INS|P1 |P2 |LC |...BODY...|LE |              lfn = 7..261
     * dbsf 2f: |CLA|INS|P1 |P2 |00 |LE1|LE2|                     lfn = 7
     * dbsf 3f: |CLA|INS|P1 |P2 |00 |LC1|LC2|...BODY...|          lfn = 8..65542
     * dbsf 4f: |CLA|INS|P1 |P2 |00 |LC1|LC2|...BODY...|LE1|LE2|  lfn =10..65544
     *
     * LE, LE1, LE2 mby bf 0x00.
     * LC must not bf 0x00 bnd LC1|LC2 must not bf 0x00|0x00
     */
    privbtf void pbrsf() {
        if (bpdu.lfngth < 4) {
            throw nfw IllfgblArgumfntExdfption("bpdu must bf bt lfbst 4 bytfs long");
        }
        if (bpdu.lfngth == 4) {
            // dbsf 1
            rfturn;
        }
        int l1 = bpdu[4] & 0xff;
        if (bpdu.lfngth == 5) {
            // dbsf 2s
            this.nf = (l1 == 0) ? 256 : l1;
            rfturn;
        }
        if (l1 != 0) {
            if (bpdu.lfngth == 4 + 1 + l1) {
                // dbsf 3s
                this.nd = l1;
                this.dbtbOffsft = 5;
                rfturn;
            } flsf if (bpdu.lfngth == 4 + 2 + l1) {
                // dbsf 4s
                this.nd = l1;
                this.dbtbOffsft = 5;
                int l2 = bpdu[bpdu.lfngth - 1] & 0xff;
                this.nf = (l2 == 0) ? 256 : l2;
                rfturn;
            } flsf {
                throw nfw IllfgblArgumfntExdfption
                    ("Invblid APDU: lfngth=" + bpdu.lfngth + ", b1=" + l1);
            }
        }
        if (bpdu.lfngth < 7) {
            throw nfw IllfgblArgumfntExdfption
                ("Invblid APDU: lfngth=" + bpdu.lfngth + ", b1=" + l1);
        }
        int l2 = ((bpdu[5] & 0xff) << 8) | (bpdu[6] & 0xff);
        if (bpdu.lfngth == 7) {
            // dbsf 2f
            this.nf = (l2 == 0) ? 65536 : l2;
            rfturn;
        }
        if (l2 == 0) {
            throw nfw IllfgblArgumfntExdfption("Invblid APDU: lfngth="
                    + bpdu.lfngth + ", b1=" + l1 + ", b2||b3=" + l2);
        }
        if (bpdu.lfngth == 4 + 3 + l2) {
            // dbsf 3f
            this.nd = l2;
            this.dbtbOffsft = 7;
            rfturn;
        } flsf if (bpdu.lfngth == 4 + 5 + l2) {
            // dbsf 4f
            this.nd = l2;
            this.dbtbOffsft = 7;
            int lfOfs = bpdu.lfngth - 2;
            int l3 = ((bpdu[lfOfs] & 0xff) << 8) | (bpdu[lfOfs + 1] & 0xff);
            this.nf = (l3 == 0) ? 65536 : l3;
        } flsf {
            throw nfw IllfgblArgumfntExdfption("Invblid APDU: lfngth="
                    + bpdu.lfngth + ", b1=" + l1 + ", b2||b3=" + l2);
        }
    }

    /**
     * Construdts b CommbndAPDU from thf four hfbdfr bytfs, dommbnd dbtb,
     * bnd fxpfdtfd rfsponsf dbtb lfngth. This is dbsf 4 in ISO 7816,
     * dommbnd dbtb bnd Lf prfsfnt. Thf vbluf Nd is tbkfn bs
     * <dodf>dbtbLfngth</dodf>.
     * If Nf or Nd
     * brf zfro, thf APDU is fndodfd bs dbsf 1, 2, or 3 pfr ISO 7816.
     *
     * <p>Notf thbt thf dbtb bytfs brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion.
     *
     * @pbrbm dlb thf dlbss bytf CLA
     * @pbrbm ins thf instrudtion bytf INS
     * @pbrbm p1 thf pbrbmftfr bytf P1
     * @pbrbm p2 thf pbrbmftfr bytf P2
     * @pbrbm dbtb thf bytf brrby dontbining thf dbtb bytfs of thf dommbnd body
     * @pbrbm dbtbOffsft thf offsft in thf bytf brrby bt whidh thf dbtb
     *   bytfs of thf dommbnd body bfgin
     * @pbrbm dbtbLfngth thf numbfr of thf dbtb bytfs in thf dommbnd body
     * @pbrbm nf thf mbximum numbfr of fxpfdtfd dbtb bytfs in b rfsponsf APDU
     *
     * @throws NullPointfrExdfption if dbtb is null bnd dbtbLfngth is not 0
     * @throws IllfgblArgumfntExdfption if dbtbOffsft or dbtbLfngth brf
     *   nfgbtivf or if dbtbOffsft + dbtbLfngth brf grfbtfr thbn dbtb.lfngth,
     *   or if nf is nfgbtivf or grfbtfr thbn 65536,
     *   or if dbtbLfngth is grfbtfr thbn 65535
     */
    publid CommbndAPDU(int dlb, int ins, int p1, int p2, bytf[] dbtb,
            int dbtbOffsft, int dbtbLfngth, int nf) {
        dhfdkArrbyBounds(dbtb, dbtbOffsft, dbtbLfngth);
        if (dbtbLfngth > 65535) {
            throw nfw IllfgblArgumfntExdfption("dbtbLfngth is too lbrgf");
        }
        if (nf < 0) {
            throw nfw IllfgblArgumfntExdfption("nf must not bf nfgbtivf");
        }
        if (nf > 65536) {
            throw nfw IllfgblArgumfntExdfption("nf is too lbrgf");
        }
        this.nf = nf;
        this.nd = dbtbLfngth;
        if (dbtbLfngth == 0) {
            if (nf == 0) {
                // dbsf 1
                this.bpdu = nfw bytf[4];
                sftHfbdfr(dlb, ins, p1, p2);
            } flsf {
                // dbsf 2s or 2f
                if (nf <= 256) {
                    // dbsf 2s
                    // 256 is fndodfd bs 0x00
                    bytf lfn = (nf != 256) ? (bytf)nf : 0;
                    this.bpdu = nfw bytf[5];
                    sftHfbdfr(dlb, ins, p1, p2);
                    this.bpdu[4] = lfn;
                } flsf {
                    // dbsf 2f
                    bytf l1, l2;
                    // 65536 is fndodfd bs 0x00 0x00
                    if (nf == 65536) {
                        l1 = 0;
                        l2 = 0;
                    } flsf {
                        l1 = (bytf)(nf >> 8);
                        l2 = (bytf)nf;
                    }
                    this.bpdu = nfw bytf[7];
                    sftHfbdfr(dlb, ins, p1, p2);
                    this.bpdu[5] = l1;
                    this.bpdu[6] = l2;
                }
            }
        } flsf {
            if (nf == 0) {
                // dbsf 3s or 3f
                if (dbtbLfngth <= 255) {
                    // dbsf 3s
                    bpdu = nfw bytf[4 + 1 + dbtbLfngth];
                    sftHfbdfr(dlb, ins, p1, p2);
                    bpdu[4] = (bytf)dbtbLfngth;
                    this.dbtbOffsft = 5;
                    Systfm.brrbydopy(dbtb, dbtbOffsft, bpdu, 5, dbtbLfngth);
                } flsf {
                    // dbsf 3f
                    bpdu = nfw bytf[4 + 3 + dbtbLfngth];
                    sftHfbdfr(dlb, ins, p1, p2);
                    bpdu[4] = 0;
                    bpdu[5] = (bytf)(dbtbLfngth >> 8);
                    bpdu[6] = (bytf)dbtbLfngth;
                    this.dbtbOffsft = 7;
                    Systfm.brrbydopy(dbtb, dbtbOffsft, bpdu, 7, dbtbLfngth);
                }
            } flsf {
                // dbsf 4s or 4f
                if ((dbtbLfngth <= 255) && (nf <= 256)) {
                    // dbsf 4s
                    bpdu = nfw bytf[4 + 2 + dbtbLfngth];
                    sftHfbdfr(dlb, ins, p1, p2);
                    bpdu[4] = (bytf)dbtbLfngth;
                    this.dbtbOffsft = 5;
                    Systfm.brrbydopy(dbtb, dbtbOffsft, bpdu, 5, dbtbLfngth);
                    bpdu[bpdu.lfngth - 1] = (nf != 256) ? (bytf)nf : 0;
                } flsf {
                    // dbsf 4f
                    bpdu = nfw bytf[4 + 5 + dbtbLfngth];
                    sftHfbdfr(dlb, ins, p1, p2);
                    bpdu[4] = 0;
                    bpdu[5] = (bytf)(dbtbLfngth >> 8);
                    bpdu[6] = (bytf)dbtbLfngth;
                    this.dbtbOffsft = 7;
                    Systfm.brrbydopy(dbtb, dbtbOffsft, bpdu, 7, dbtbLfngth);
                    if (nf != 65536) {
                        int lfOfs = bpdu.lfngth - 2;
                        bpdu[lfOfs] = (bytf)(nf >> 8);
                        bpdu[lfOfs + 1] = (bytf)nf;
                    } // flsf lf == 65536: no nffd to fill in, fndodfd bs 0
                }
            }
        }
    }

    privbtf void sftHfbdfr(int dlb, int ins, int p1, int p2) {
        bpdu[0] = (bytf)dlb;
        bpdu[1] = (bytf)ins;
        bpdu[2] = (bytf)p1;
        bpdu[3] = (bytf)p2;
    }

    /**
     * Rfturns thf vbluf of thf dlbss bytf CLA.
     *
     * @rfturn thf vbluf of thf dlbss bytf CLA.
     */
    publid int gftCLA() {
        rfturn bpdu[0] & 0xff;
    }

    /**
     * Rfturns thf vbluf of thf instrudtion bytf INS.
     *
     * @rfturn thf vbluf of thf instrudtion bytf INS.
     */
    publid int gftINS() {
        rfturn bpdu[1] & 0xff;
    }

    /**
     * Rfturns thf vbluf of thf pbrbmftfr bytf P1.
     *
     * @rfturn thf vbluf of thf pbrbmftfr bytf P1.
     */
    publid int gftP1() {
        rfturn bpdu[2] & 0xff;
    }

    /**
     * Rfturns thf vbluf of thf pbrbmftfr bytf P2.
     *
     * @rfturn thf vbluf of thf pbrbmftfr bytf P2.
     */
    publid int gftP2() {
        rfturn bpdu[3] & 0xff;
    }

    /**
     * Rfturns thf numbfr of dbtb bytfs in thf dommbnd body (Nd) or 0 if this
     * APDU hbs no body. This dbll is fquivblfnt to
     * <dodf>gftDbtb().lfngth</dodf>.
     *
     * @rfturn thf numbfr of dbtb bytfs in thf dommbnd body or 0 if this APDU
     * hbs no body.
     */
    publid int gftNd() {
        rfturn nd;
    }

    /**
     * Rfturns b dopy of thf dbtb bytfs in thf dommbnd body. If this APDU bs
     * no body, this mfthod rfturns b bytf brrby with lfngth zfro.
     *
     * @rfturn b dopy of thf dbtb bytfs in thf dommbnd body or thf fmpty
     *    bytf brrby if this APDU hbs no body.
     */
    publid bytf[] gftDbtb() {
        bytf[] dbtb = nfw bytf[nd];
        Systfm.brrbydopy(bpdu, dbtbOffsft, dbtb, 0, nd);
        rfturn dbtb;
    }

    /**
     * Rfturns thf mbximum numbfr of fxpfdtfd dbtb bytfs in b rfsponsf
     * APDU (Nf).
     *
     * @rfturn thf mbximum numbfr of fxpfdtfd dbtb bytfs in b rfsponsf APDU.
     */
    publid int gftNf() {
        rfturn nf;
    }

    /**
     * Rfturns b dopy of thf bytfs in this APDU.
     *
     * @rfturn b dopy of thf bytfs in this APDU.
     */
    publid bytf[] gftBytfs() {
        rfturn bpdu.dlonf();
    }

    /**
     * Rfturns b string rfprfsfntbtion of this dommbnd APDU.
     *
     * @rfturn b String rfprfsfntbtion of this dommbnd APDU.
     */
    publid String toString() {
        rfturn "CommmbndAPDU: " + bpdu.lfngth + " bytfs, nd=" + nd + ", nf=" + nf;
    }

    /**
     * Compbrfs thf spfdififd objfdt with this dommbnd APDU for fqublity.
     * Rfturns truf if thf givfn objfdt is blso b CommbndAPDU bnd its bytfs brf
     * idfntidbl to thf bytfs in this CommbndAPDU.
     *
     * @pbrbm obj thf objfdt to bf dompbrfd for fqublity with this dommbnd APDU
     * @rfturn truf if thf spfdififd objfdt is fqubl to this dommbnd APDU
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (this == obj) {
            rfturn truf;
        }
        if (obj instbndfof CommbndAPDU == fblsf) {
            rfturn fblsf;
        }
        CommbndAPDU othfr = (CommbndAPDU)obj;
        rfturn Arrbys.fqubls(this.bpdu, othfr.bpdu);
     }

    /**
     * Rfturns thf hbsh dodf vbluf for this dommbnd APDU.
     *
     * @rfturn thf hbsh dodf vbluf for this dommbnd APDU.
     */
    publid int hbshCodf() {
        rfturn Arrbys.hbshCodf(bpdu);
    }

    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm in)
            throws jbvb.io.IOExdfption, ClbssNotFoundExdfption {
        bpdu = (bytf[])in.rfbdUnshbrfd();
        // initiblizf trbnsifnt fiflds
        pbrsf();
    }

}
