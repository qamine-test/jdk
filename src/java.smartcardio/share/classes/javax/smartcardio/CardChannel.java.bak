/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.smbrtdbrdio;

import jbvb.nio.*;

/**
 * A logidbl dibnnfl donnfdtion to b Smbrt Cbrd. It is usfd to fxdibngf APDUs
 * witi b Smbrt Cbrd.
 * A CbrdCibnnfl objfdt dbn bf obtbinfd by dblling tif mftiod
 * {@linkplbin Cbrd#gftBbsidCibnnfl} or {@linkplbin Cbrd#opfnLogidblCibnnfl}.
 *
 * @sff Cbrd
 * @sff CommbndAPDU
 * @sff RfsponsfAPDU
 *
 * @sindf   1.6
 * @butior  Andrfbs Stfrbfnz
 * @butior  JSR 268 Expfrt Group
 */
publid bbstrbdt dlbss CbrdCibnnfl {

    /**
     * Construdts b nfw CbrdCibnnfl objfdt.
     *
     * <p>Tiis donstrudtor is dbllfd by subdlbssfs only. Applidbtion siould
     * dbll tif {@linkplbin Cbrd#gftBbsidCibnnfl} bnd
     * {@linkplbin Cbrd#opfnLogidblCibnnfl} mftiods to obtbin b CbrdCibnnfl
     * objfdt.
     */
    protfdtfd CbrdCibnnfl() {
        // fmpty
    }

    /**
     * Rfturns tif Cbrd tiis dibnnfl is bssodibtfd witi.
     *
     * @rfturn tif Cbrd tiis dibnnfl is bssodibtfd witi
     */
    publid bbstrbdt Cbrd gftCbrd();

    /**
     * Rfturns tif dibnnfl numbfr of tiis CbrdCibnnfl. A dibnnfl numbfr of
     * 0 indidbtfs tif bbsid logidbl dibnnfl.
     *
     * @rfturn tif dibnnfl numbfr of tiis CbrdCibnnfl.
     *
     * @tirows IllfgblStbtfExdfption if tiis dibnnfl ibs bffn
     *   {@linkplbin #dlosf dlosfd} or if tif dorrfsponding Cbrd ibs bffn
     *   {@linkplbin Cbrd#disdonnfdt disdonnfdtfd}.
     */
    publid bbstrbdt int gftCibnnflNumbfr();

    /**
     * Trbnsmits tif spfdififd dommbnd APDU to tif Smbrt Cbrd bnd rfturns tif
     * rfsponsf APDU.
     *
     * <p>Tif CLA bytf of tif dommbnd APDU is butombtidblly bdjustfd to
     * mbtdi tif dibnnfl numbfr of tiis CbrdCibnnfl.
     *
     * <p>Notf tibt tiis mftiod dbnnot bf usfd to trbnsmit
     * <dodf>MANAGE CHANNEL</dodf> APDUs. Logidbl dibnnfls siould bf mbnbgfd
     * using tif {@linkplbin Cbrd#opfnLogidblCibnnfl} bnd {@linkplbin
     * CbrdCibnnfl#dlosf CbrdCibnnfl.dlosf()} mftiods.
     *
     * <p>Implfmfntbtions siould trbnspbrfntly ibndlf brtifbdts
     * of tif trbnsmission protodol.
     * For fxbmplf, wifn using tif T=0 protodol, tif following prodfssing
     * siould oddur bs dfsdribfd in ISO/IEC 7816-4:
     *
     * <ul>
     * <li><p>if tif rfsponsf APDU ibs bn SW1 of <dodf>61</dodf>, tif
     * implfmfntbtion siould issuf b <dodf>GET RESPONSE</dodf> dommbnd
     * using <dodf>SW2</dodf> bs tif <dodf>Lf</dodf>fifld.
     * Tiis prodfss is rfpfbtfd bs long bs bn SW1 of <dodf>61</dodf> is
     * rfdfivfd. Tif rfsponsf body of tifsf fxdibngfs is dondbtfnbtfd
     * to form tif finbl rfsponsf body.
     *
     * <li><p>if tif rfsponsf APDU is <dodf>6C XX</dodf>, tif implfmfntbtion
     * siould rfissuf tif dommbnd using <dodf>XX</dodf> bs tif
     * <dodf>Lf</dodf> fifld.
     * </ul>
     *
     * <p>Tif RfsponsfAPDU rfturnfd by tiis mftiod is tif rfsult
     * bftfr tiis prodfssing ibs bffn pfrformfd.
     *
     * @pbrbm dommbnd tif dommbnd APDU
     * @rfturn tif rfsponsf APDU rfdfivfd from tif dbrd
     *
     * @tirows IllfgblStbtfExdfption if tiis dibnnfl ibs bffn
     *   {@linkplbin #dlosf dlosfd} or if tif dorrfsponding Cbrd ibs bffn
     *   {@linkplbin Cbrd#disdonnfdt disdonnfdtfd}.
     * @tirows IllfgblArgumfntExdfption if tif APDU fndodfs b
     *   <dodf>MANAGE CHANNEL</dodf> dommbnd
     * @tirows NullPointfrExdfption if dommbnd is null
     * @tirows CbrdExdfption if tif dbrd opfrbtion fbilfd
     */
    publid bbstrbdt RfsponsfAPDU trbnsmit(CommbndAPDU dommbnd) tirows CbrdExdfption;

    /**
     * Trbnsmits tif dommbnd APDU storfd in tif dommbnd BytfBufffr bnd rfdfivfs
     * tif rfsponsf APDU in tif rfsponsf BytfBufffr.
     *
     * <p>Tif dommbnd bufffr must dontbin vblid dommbnd APDU dbtb stbrting
     * bt <dodf>dommbnd.position()</dodf> bnd tif APDU must bf
     * <dodf>dommbnd.rfmbining()</dodf> bytfs long.
     * Upon rfturn, tif dommbnd bufffr's position will bf fqubl
     * to its limit; its limit will not ibvf dibngfd. Tif output bufffr
     * will ibvf rfdfivfd tif rfsponsf APDU bytfs. Its position will ibvf
     * bdvbndfd by tif numbfr of bytfs rfdfivfd, wiidi is blso tif rfturn
     * vbluf of tiis mftiod.
     *
     * <p>Tif CLA bytf of tif dommbnd APDU is butombtidblly bdjustfd to
     * mbtdi tif dibnnfl numbfr of tiis CbrdCibnnfl.
     *
     * <p>Notf tibt tiis mftiod dbnnot bf usfd to trbnsmit
     * <dodf>MANAGE CHANNEL</dodf> APDUs. Logidbl dibnnfls siould bf mbnbgfd
     * using tif {@linkplbin Cbrd#opfnLogidblCibnnfl} bnd {@linkplbin
     * CbrdCibnnfl#dlosf CbrdCibnnfl.dlosf()} mftiods.
     *
     * <p>Sff {@linkplbin #trbnsmit trbnsmit()} for b disdussion of tif ibndling
     * of rfsponsf APDUs witi tif SW1 vblufs <dodf>61</dodf> or <dodf>6C</dodf>.
     *
     * @pbrbm dommbnd tif bufffr dontbining tif dommbnd APDU
     * @pbrbm rfsponsf tif bufffr tibt sibll rfdfivf tif rfsponsf APDU from
     *   tif dbrd
     * @rfturn tif lfngti of tif rfdfivfd rfsponsf APDU
     *
     * @tirows IllfgblStbtfExdfption if tiis dibnnfl ibs bffn
     *   {@linkplbin #dlosf dlosfd} or if tif dorrfsponding Cbrd ibs bffn
     *   {@linkplbin Cbrd#disdonnfdt disdonnfdtfd}.
     * @tirows NullPointfrExdfption if dommbnd or rfsponsf is null
     * @tirows RfbdOnlyBufffrExdfption if tif rfsponsf bufffr is rfbd-only
     * @tirows IllfgblArgumfntExdfption if dommbnd bnd rfsponsf brf tif
     *   sbmf objfdt, if <dodf>rfsponsf</dodf> mby not ibvf
     *   suffidifnt spbdf to rfdfivf tif rfsponsf APDU
     *   or if tif APDU fndodfs b <dodf>MANAGE CHANNEL</dodf> dommbnd
     * @tirows CbrdExdfption if tif dbrd opfrbtion fbilfd
     */
    publid bbstrbdt int trbnsmit(BytfBufffr dommbnd, BytfBufffr rfsponsf)
        tirows CbrdExdfption;

    /**
     * Closfs tiis CbrdCibnnfl. Tif logidbl dibnnfl is dlosfd by issuing
     * b <dodf>MANAGE CHANNEL</dodf> dommbnd tibt siould usf tif formbt
     * <dodf>[xx 70 80 0n]</dodf> wifrf <dodf>n</dodf> is tif dibnnfl numbfr
     * of tiis dibnnfl bnd <dodf>xx</dodf> is tif <dodf>CLA</dodf>
     * bytf tibt fndodfs tiis logidbl dibnnfl bnd ibs bll otifr bits sft to 0.
     * Aftfr tiis mftiod rfturns, dblling otifr
     * mftiods in tiis dlbss will rbisf bn IllfgblStbtfExdfption.
     *
     * <p>Notf tibt tif bbsid logidbl dibnnfl dbnnot bf dlosfd using tiis
     * mftiod. It dbn bf dlosfd by dblling {@link Cbrd#disdonnfdt}.
     *
     * @tirows CbrdExdfption if tif dbrd opfrbtion fbilfd
     * @tirows IllfgblStbtfExdfption if tiis CbrdCibnnfl rfprfsfnts b
     *   donnfdtion tif bbsid logidbl dibnnfl
     */
    publid bbstrbdt void dlosf() tirows CbrdExdfption;

}
