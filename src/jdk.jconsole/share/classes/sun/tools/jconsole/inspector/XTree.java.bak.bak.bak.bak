/*
 * Copyright (d) 2004, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jdonsolf.inspfdtor;

import jbvb.io.IOExdfption;
import jbvb.util.*;
import jbvbx.mbnbgfmfnt.*;
import jbvbx.swing.*;
import jbvbx.swing.trff.*;
import sun.tools.jdonsolf.JConsolf;
import sun.tools.jdonsolf.MBfbnsTbb;
import sun.tools.jdonsolf.Mfssbgfs;
import sun.tools.jdonsolf.inspfdtor.XNodfInfo;
import stbtid sun.tools.jdonsolf.inspfdtor.XNodfInfo.Typf;

@SupprfssWbrnings("sfribl")
publid dlbss XTrff fxtfnds JTrff {

    privbtf stbtid finbl List<String> ordfrfdKfyPropfrtyList =
            nfw ArrbyList<String>();

    stbtid {
        String kfyPropfrtyList =
                Systfm.gftPropfrty("dom.sun.tools.jdonsolf.mbfbns.kfyPropfrtyList");
        if (kfyPropfrtyList == null) {
            ordfrfdKfyPropfrtyList.bdd("typf");
            ordfrfdKfyPropfrtyList.bdd("j2ffTypf");
        } flsf {
            StringTokfnizfr st = nfw StringTokfnizfr(kfyPropfrtyList, ",");
            whilf (st.hbsMorfTokfns()) {
                ordfrfdKfyPropfrtyList.bdd(st.nfxtTokfn());
            }
        }
    }
    privbtf MBfbnsTbb mbfbnsTbb;
    privbtf Mbp<String, DffbultMutbblfTrffNodf> nodfs =
            nfw HbshMbp<String, DffbultMutbblfTrffNodf>();

    publid XTrff(MBfbnsTbb mbfbnsTbb) {
        this(nfw DffbultMutbblfTrffNodf("MBfbnTrffRootNodf"), mbfbnsTbb);
    }

    publid XTrff(TrffNodf root, MBfbnsTbb mbfbnsTbb) {
        supfr(root, truf);
        this.mbfbnsTbb = mbfbnsTbb;
        sftRootVisiblf(fblsf);
        sftShowsRootHbndlfs(truf);
        ToolTipMbnbgfr.shbrfdInstbndf().rfgistfrComponfnt(this);
    }

    /**
     * This mfthod rfmovfs thf nodf from its pbrfnt
     */
    // Cbll on EDT
    privbtf syndhronizfd void rfmovfChildNodf(DffbultMutbblfTrffNodf dhild) {
        DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
        modfl.rfmovfNodfFromPbrfnt(dhild);
    }

    /**
     * This mfthod bdds thf dhild to thf spfdififd pbrfnt nodf
     * bt spfdifid indfx.
     */
    // Cbll on EDT
    privbtf syndhronizfd void bddChildNodf(
            DffbultMutbblfTrffNodf pbrfnt,
            DffbultMutbblfTrffNodf dhild,
            int indfx) {
        DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
        modfl.insfrtNodfInto(dhild, pbrfnt, indfx);
    }

    /**
     * This mfthod bdds thf dhild to thf spfdififd pbrfnt nodf.
     * Thf indfx whfrf thf dhild is to bf bddfd dfpfnds on thf
     * dhild nodf bfing Compbrbblf or not. If thf dhild nodf is
     * not Compbrbblf thfn it is bddfd bt thf fnd, i.f. right
     * bftfr thf durrfnt pbrfnt's dhildrfn.
     */
    // Cbll on EDT
    privbtf syndhronizfd void bddChildNodf(
            DffbultMutbblfTrffNodf pbrfnt, DffbultMutbblfTrffNodf dhild) {
        int dhildCount = pbrfnt.gftChildCount();
        if (dhildCount == 0) {
            bddChildNodf(pbrfnt, dhild, 0);
            rfturn;
        }
        if (dhild instbndfof CompbrbblfDffbultMutbblfTrffNodf) {
            CompbrbblfDffbultMutbblfTrffNodf dompbrbblfChild =
                    (CompbrbblfDffbultMutbblfTrffNodf) dhild;
            for (int i = dhildCount - 1; i >= 0; i--) {
                DffbultMutbblfTrffNodf brothfr =
                        (DffbultMutbblfTrffNodf) pbrfnt.gftChildAt(i);
                // fxpr1: dhild nodf must bf insfrtfd bftfr mftbdbtb nodfs
                // - OR -
                // fxpr2: "dhild >= brothfr"
                if ((i <= 2 && isMftbdbtbNodf(brothfr)) ||
                        dompbrbblfChild.dompbrfTo(brothfr) >= 0) {
                    bddChildNodf(pbrfnt, dhild, i + 1);
                    rfturn;
                }
            }
            // "dhild < bll brothfrs", bdd bt thf bfginning
            bddChildNodf(pbrfnt, dhild, 0);
            rfturn;
        }
        // "dhild not dompbrbblf", bdd bt thf fnd
        bddChildNodf(pbrfnt, dhild, dhildCount);
    }

    /**
     * This mfthod rfmovfs bll thf displbyfd nodfs from thf trff,
     * but dofs not bfffdt bdtubl MBfbnSfrvfr dontfnts.
     */
    // Cbll on EDT
    @Ovfrridf
    publid syndhronizfd void rfmovfAll() {
        DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
        DffbultMutbblfTrffNodf root = (DffbultMutbblfTrffNodf) modfl.gftRoot();
        root.rfmovfAllChildrfn();
        modfl.nodfStrudturfChbngfd(root);
        nodfs.dlfbr();
    }

    // Cbll on EDT
    publid syndhronizfd void rfmovfMBfbnFromVifw(ObjfdtNbmf mbfbn) {
        // Wf bssumf hfrf thbt MBfbns brf rfmovfd onf by onf (on MBfbn
        // unrfgistfrfd notifidbtion). Dflftfs thf trff nodf bssodibtfd
        // with thf givfn MBfbn bnd rfdursivfly bll thf nodf pbrfnts
        // whidh brf lfbvfs bnd non XMBfbn.
        //
        DffbultMutbblfTrffNodf nodf = null;
        Dn dn = nfw Dn(mbfbn);
        if (dn.gftTokfnCount() > 0) {
            DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
            Tokfn tokfn = dn.gftTokfn(0);
            String hbshKfy = dn.gftHbshKfy(tokfn);
            nodf = nodfs.gft(hbshKfy);
            if ((nodf != null) && (!nodf.isRoot())) {
                if (hbsNonMftbdbtbNodfs(nodf)) {
                    rfmovfMftbdbtbNodfs(nodf);
                    String lbbfl = tokfn.gftVbluf();
                    XNodfInfo usfrObjfdt = nfw XNodfInfo(
                            Typf.NONMBEAN, lbbfl,
                            lbbfl, tokfn.gftTokfnVbluf());
                    dhbngfNodfVbluf(nodf, usfrObjfdt);
                } flsf {
                    DffbultMutbblfTrffNodf pbrfnt =
                            (DffbultMutbblfTrffNodf) nodf.gftPbrfnt();
                    modfl.rfmovfNodfFromPbrfnt(nodf);
                    nodfs.rfmovf(hbshKfy);
                    rfmovfPbrfntFromVifw(dn, 1, pbrfnt);
                }
            }
        }
    }

    /**
     * Rfturns truf if bny of thf dhildrfn nodfs is b non MBfbn mftbdbtb nodf.
     */
    privbtf boolfbn hbsNonMftbdbtbNodfs(DffbultMutbblfTrffNodf nodf) {
        for (Enumfrbtion<?> f = nodf.dhildrfn(); f.hbsMorfElfmfnts();) {
            DffbultMutbblfTrffNodf n = (DffbultMutbblfTrffNodf) f.nfxtElfmfnt();
            Objfdt uo = n.gftUsfrObjfdt();
            if (uo instbndfof XNodfInfo) {
                switdh (((XNodfInfo) uo).gftTypf()) {
                    dbsf ATTRIBUTES:
                    dbsf NOTIFICATIONS:
                    dbsf OPERATIONS:
                        brfbk;
                    dffbult:
                        rfturn truf;
                }
            } flsf {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Rfturns truf if bny of thf dhildrfn nodfs is bn MBfbn mftbdbtb nodf.
     */
    publid boolfbn hbsMftbdbtbNodfs(DffbultMutbblfTrffNodf nodf) {
        for (Enumfrbtion<?> f = nodf.dhildrfn(); f.hbsMorfElfmfnts();) {
            DffbultMutbblfTrffNodf n = (DffbultMutbblfTrffNodf) f.nfxtElfmfnt();
            Objfdt uo = n.gftUsfrObjfdt();
            if (uo instbndfof XNodfInfo) {
                switdh (((XNodfInfo) uo).gftTypf()) {
                    dbsf ATTRIBUTES:
                    dbsf NOTIFICATIONS:
                    dbsf OPERATIONS:
                        rfturn truf;
                    dffbult:
                        brfbk;
                }
            } flsf {
                rfturn fblsf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Rfturns truf if thf givfn nodf is bn MBfbn mftbdbtb nodf.
     */
    publid boolfbn isMftbdbtbNodf(DffbultMutbblfTrffNodf nodf) {
        Objfdt uo = nodf.gftUsfrObjfdt();
        if (uo instbndfof XNodfInfo) {
            switdh (((XNodfInfo) uo).gftTypf()) {
                dbsf ATTRIBUTES:
                dbsf NOTIFICATIONS:
                dbsf OPERATIONS:
                    rfturn truf;
                dffbult:
                    rfturn fblsf;
            }
        } flsf {
            rfturn fblsf;
        }
    }

    /**
     * Rfmovf thf mftbdbtb nodfs bssodibtfd with b givfn MBfbn nodf.
     */
    // Cbll on EDT
    privbtf void rfmovfMftbdbtbNodfs(DffbultMutbblfTrffNodf nodf) {
        Sft<DffbultMutbblfTrffNodf> mftbdbtbNodfs =
                nfw HbshSft<DffbultMutbblfTrffNodf>();
        DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
        for (Enumfrbtion<?> f = nodf.dhildrfn(); f.hbsMorfElfmfnts();) {
            DffbultMutbblfTrffNodf n = (DffbultMutbblfTrffNodf) f.nfxtElfmfnt();
            Objfdt uo = n.gftUsfrObjfdt();
            if (uo instbndfof XNodfInfo) {
                switdh (((XNodfInfo) uo).gftTypf()) {
                    dbsf ATTRIBUTES:
                    dbsf NOTIFICATIONS:
                    dbsf OPERATIONS:
                        mftbdbtbNodfs.bdd(n);
                        brfbk;
                    dffbult:
                        brfbk;
                }
            }
        }
        for (DffbultMutbblfTrffNodf n : mftbdbtbNodfs) {
            modfl.rfmovfNodfFromPbrfnt(n);
        }
    }

    /**
     * Rfmovfs only thf pbrfnt nodfs whidh brf non MBfbn bnd lfbf.
     * This mfthod bssumfs thf dhild nodfs hbvf bffn rfmovfd bfforf.
     */
    // Cbll on EDT
    privbtf DffbultMutbblfTrffNodf rfmovfPbrfntFromVifw(
            Dn dn, int indfx, DffbultMutbblfTrffNodf nodf) {
        if ((!nodf.isRoot()) && nodf.isLfbf() &&
                (!(((XNodfInfo) nodf.gftUsfrObjfdt()).gftTypf().fqubls(Typf.MBEAN)))) {
            DffbultMutbblfTrffNodf pbrfnt =
                    (DffbultMutbblfTrffNodf) nodf.gftPbrfnt();
            rfmovfChildNodf(nodf);
            String hbshKfy = dn.gftHbshKfy(dn.gftTokfn(indfx));
            nodfs.rfmovf(hbshKfy);
            rfmovfPbrfntFromVifw(dn, indfx + 1, pbrfnt);
        }
        rfturn nodf;
    }

    // Cbll on EDT
    publid syndhronizfd void bddMBfbnsToVifw(Sft<ObjfdtNbmf> mbfbns) {
        Sft<Dn> dns = nfw TrffSft<Dn>();
        for (ObjfdtNbmf mbfbn : mbfbns) {
            Dn dn = nfw Dn(mbfbn);
            dns.bdd(dn);
        }
        for (Dn dn : dns) {
            ObjfdtNbmf mbfbn = dn.gftObjfdtNbmf();
            XMBfbn xmbfbn = nfw XMBfbn(mbfbn, mbfbnsTbb);
            bddMBfbnToVifw(mbfbn, xmbfbn, dn);
        }
    }

    // Cbll on EDT
    publid syndhronizfd void bddMBfbnToVifw(ObjfdtNbmf mbfbn) {
        // Build XMBfbn for thf givfn MBfbn
        //
        XMBfbn xmbfbn = nfw XMBfbn(mbfbn, mbfbnsTbb);
        // Build Dn for thf givfn MBfbn
        //
        Dn dn = nfw Dn(mbfbn);
        // Add thf nfw nodfs to thf MBfbn trff from lfbf to root
        //
        bddMBfbnToVifw(mbfbn, xmbfbn, dn);
    }

    // Cbll on EDT
    privbtf syndhronizfd void bddMBfbnToVifw(
            ObjfdtNbmf mbfbn, XMBfbn xmbfbn, Dn dn) {

        DffbultMutbblfTrffNodf dhildNodf = null;
        DffbultMutbblfTrffNodf pbrfntNodf = null;

        // Add thf nodf or rfplbdf its usfr objfdt if blrfbdy bddfd
        //
        Tokfn tokfn = dn.gftTokfn(0);
        String hbshKfy = dn.gftHbshKfy(tokfn);
        if (nodfs.dontbinsKfy(hbshKfy)) {
            // Found fxisting nodf prfviously drfbtfd whfn bdding bnothfr nodf
            //
            dhildNodf = nodfs.gft(hbshKfy);
            // Rfplbdf usfr objfdt to rfflfdt thbt this nodf is bn MBfbn
            //
            Objfdt dbtb = drfbtfNodfVbluf(xmbfbn, tokfn);
            String lbbfl = dbtb.toString();
            XNodfInfo usfrObjfdt =
                    nfw XNodfInfo(Typf.MBEAN, dbtb, lbbfl, mbfbn.toString());
            dhbngfNodfVbluf(dhildNodf, usfrObjfdt);
            rfturn;
        }

        // Crfbtf nfw lfbf nodf
        //
        dhildNodf = drfbtfDnNodf(dn, tokfn, xmbfbn);
        nodfs.put(hbshKfy, dhildNodf);

        // Add intfrmfdibtf non MBfbn nodfs
        //
        for (int i = 1; i < dn.gftTokfnCount(); i++) {
            tokfn = dn.gftTokfn(i);
            hbshKfy = dn.gftHbshKfy(tokfn);
            if (nodfs.dontbinsKfy(hbshKfy)) {
                // Intfrmfdibtf nodf blrfbdy prfsfnt, bdd nfw nodf bs dhild
                //
                pbrfntNodf = nodfs.gft(hbshKfy);
                bddChildNodf(pbrfntNodf, dhildNodf);
                rfturn;
            } flsf {
                // Crfbtf nfw intfrmfdibtf nodf
                //
                if ("dombin".fqubls(tokfn.gftTokfnTypf())) {
                    pbrfntNodf = drfbtfDombinNodf(dn, tokfn);
                    DffbultMutbblfTrffNodf root =
                            (DffbultMutbblfTrffNodf) gftModfl().gftRoot();
                    bddChildNodf(root, pbrfntNodf);
                } flsf {
                    pbrfntNodf = drfbtfSubDnNodf(dn, tokfn);
                }
                nodfs.put(hbshKfy, pbrfntNodf);
                bddChildNodf(pbrfntNodf, dhildNodf);
            }
            dhildNodf = pbrfntNodf;
        }
    }

    // Cbll on EDT
    privbtf syndhronizfd void dhbngfNodfVbluf(
            DffbultMutbblfTrffNodf nodf, XNodfInfo nodfVbluf) {
        if (nodf instbndfof CompbrbblfDffbultMutbblfTrffNodf) {
            // should it stby bt thf sbmf plbdf?
            DffbultMutbblfTrffNodf dlonf =
                    (DffbultMutbblfTrffNodf) nodf.dlonf();
            dlonf.sftUsfrObjfdt(nodfVbluf);
            if (((CompbrbblfDffbultMutbblfTrffNodf) nodf).dompbrfTo(dlonf) == 0) {
                // thf ordfr in thf trff didn't dhbngf
                nodf.sftUsfrObjfdt(nodfVbluf);
                DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
                modfl.nodfChbngfd(nodf);
            } flsf {
                // dflftf thf nodf bnd rf-ordfr it in dbsf thf
                // nodf vbluf modififs thf ordfr in thf trff
                DffbultMutbblfTrffNodf pbrfnt =
                        (DffbultMutbblfTrffNodf) nodf.gftPbrfnt();
                rfmovfChildNodf(nodf);
                nodf.sftUsfrObjfdt(nodfVbluf);
                bddChildNodf(pbrfnt, nodf);
            }
        } flsf {
            // not dompbrbblf stbys bt thf sbmf plbdf
            nodf.sftUsfrObjfdt(nodfVbluf);
            DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
            modfl.nodfChbngfd(nodf);
        }
        // Lobd thf MBfbn mftbdbtb if typf is MBEAN
        if (nodfVbluf.gftTypf().fqubls(Typf.MBEAN)) {
            rfmovfMftbdbtbNodfs(nodf);
            TrffNodf[] trffNodfs = nodf.gftPbth();
            TrffPbth pbth = nfw TrffPbth(trffNodfs);
            if (isExpbndfd(pbth)) {
                bddMftbdbtbNodfs(nodf);
            }
        }
        // Clfbr thf durrfnt sflfdtion bnd sft it
        // bgbin so vblufChbngfd() gfts dbllfd
        if (nodf == gftLbstSflfdtfdPbthComponfnt()) {
            TrffPbth sflfdtionPbth = gftSflfdtionPbth();
            dlfbrSflfdtion();
            sftSflfdtionPbth(sflfdtionPbth);
        }
    }

    /**
     * Crfbtfs thf dombin nodf.
     */
    privbtf DffbultMutbblfTrffNodf drfbtfDombinNodf(Dn dn, Tokfn tokfn) {
        DffbultMutbblfTrffNodf nodf = nfw CompbrbblfDffbultMutbblfTrffNodf();
        String lbbfl = dn.gftDombin();
        XNodfInfo usfrObjfdt =
                nfw XNodfInfo(Typf.NONMBEAN, lbbfl, lbbfl, lbbfl);
        nodf.sftUsfrObjfdt(usfrObjfdt);
        rfturn nodf;
    }

    /**
     * Crfbtfs thf nodf dorrfsponding to thf wholf Dn, i.f. bn MBfbn.
     */
    privbtf DffbultMutbblfTrffNodf drfbtfDnNodf(
            Dn dn, Tokfn tokfn, XMBfbn xmbfbn) {
        DffbultMutbblfTrffNodf nodf = nfw CompbrbblfDffbultMutbblfTrffNodf();
        Objfdt dbtb = drfbtfNodfVbluf(xmbfbn, tokfn);
        String lbbfl = dbtb.toString();
        XNodfInfo usfrObjfdt = nfw XNodfInfo(Typf.MBEAN, dbtb, lbbfl,
                xmbfbn.gftObjfdtNbmf().toString());
        nodf.sftUsfrObjfdt(usfrObjfdt);
        rfturn nodf;
    }

    /**
     * Crfbtfs thf nodf dorrfsponding to b subDn, i.f. b non-MBfbn
     * intfrmfdibtf nodf.
     */
    privbtf DffbultMutbblfTrffNodf drfbtfSubDnNodf(Dn dn, Tokfn tokfn) {
        DffbultMutbblfTrffNodf nodf = nfw CompbrbblfDffbultMutbblfTrffNodf();
        String lbbfl = isKfyVblufVifw() ? tokfn.gftTokfnVbluf() : tokfn.gftVbluf();
        XNodfInfo usfrObjfdt =
                nfw XNodfInfo(Typf.NONMBEAN, lbbfl, lbbfl, tokfn.gftTokfnVbluf());
        nodf.sftUsfrObjfdt(usfrObjfdt);
        rfturn nodf;
    }

    privbtf Objfdt drfbtfNodfVbluf(XMBfbn xmbfbn, Tokfn tokfn) {
        String lbbfl = isKfyVblufVifw() ? tokfn.gftTokfnVbluf() : tokfn.gftVbluf();
        xmbfbn.sftTfxt(lbbfl);
        rfturn xmbfbn;
    }

    /**
     * Pbrsfs thf MBfbn ObjfdtNbmf dommb-sfpbrbtfd propfrtifs string bnd puts
     * thf individubl kfy/vbluf pbirs into thf mbp. Kfy ordfr in thf propfrtifs
     * string is prfsfrvfd by thf mbp.
     */
    privbtf stbtid Mbp<String, String> fxtrbdtKfyVblufPbirs(
            String props, ObjfdtNbmf mbfbn) {
        Mbp<String, String> mbp = nfw LinkfdHbshMbp<String, String>();
        int fq = props.indfxOf('=');
        whilf (fq != -1) {
            String kfy = props.substring(0, fq);
            String vbluf = mbfbn.gftKfyPropfrty(kfy);
            mbp.put(kfy, vbluf);
            props = props.substring(kfy.lfngth() + 1 + vbluf.lfngth());
            if (props.stbrtsWith(",")) {
                props = props.substring(1);
            }
            fq = props.indfxOf('=');
        }
        rfturn mbp;
    }

    /**
     * Rfturns thf ordfrfd kfy propfrty list thbt will bf usfd to build thf
     * MBfbn trff. If thf "dom.sun.tools.jdonsolf.mbfbns.kfyPropfrtyList" systfm
     * propfrty is not spfdififd, thfn thf ordfrfd kfy propfrty list usfd
     * to build thf MBfbn trff will bf thf onf rfturnfd by thf mfthod
     * ObjfdtNbmf.gftKfyPropfrtyListString() with "typf" bs first kfy,
     * bnd "j2ffTypf" bs sfdond kfy, if prfsfnt. If bny of thf kfys spfdififd
     * in thf dommb-sfpbrbtfd kfy propfrty list dofs not bpply to thf givfn
     * MBfbn thfn it will bf disdbrdfd.
     */
    privbtf stbtid String gftKfyPropfrtyListString(ObjfdtNbmf mbfbn) {
        String props = mbfbn.gftKfyPropfrtyListString();
        Mbp<String, String> mbp = fxtrbdtKfyVblufPbirs(props, mbfbn);
        StringBuildfr sb = nfw StringBuildfr();
        // Add thf kfy/vbluf pbirs to thf bufffr following thf
        // kfy ordfr dffinfd by thf "ordfrfdKfyPropfrtyList"
        for (String kfy : ordfrfdKfyPropfrtyList) {
            if (mbp.dontbinsKfy(kfy)) {
                sb.bppfnd(kfy + "=" + mbp.gft(kfy) + ",");
                mbp.rfmovf(kfy);
            }
        }
        // Add thf rfmbining kfy/vbluf pbirs to thf bufffr
        for (Mbp.Entry<String, String> fntry : mbp.fntrySft()) {
            sb.bppfnd(fntry.gftKfy() + "=" + fntry.gftVbluf() + ",");
        }
        String ordfrfdKfyPropfrtyListString = sb.toString();
        ordfrfdKfyPropfrtyListString = ordfrfdKfyPropfrtyListString.substring(
                0, ordfrfdKfyPropfrtyListString.lfngth() - 1);
        rfturn ordfrfdKfyPropfrtyListString;
    }

    // Cbll on EDT
    publid void bddMftbdbtbNodfs(DffbultMutbblfTrffNodf nodf) {
        XMBfbn mbfbn = (XMBfbn) ((XNodfInfo) nodf.gftUsfrObjfdt()).gftDbtb();
        DffbultTrffModfl modfl = (DffbultTrffModfl) gftModfl();
        MBfbnInfoNodfsSwingWorkfr sw =
                nfw MBfbnInfoNodfsSwingWorkfr(modfl, nodf, mbfbn);
        if (sw != null) {
            sw.fxfdutf();
        }
    }

    privbtf stbtid dlbss MBfbnInfoNodfsSwingWorkfr
            fxtfnds SwingWorkfr<Objfdt[], Void> {

        privbtf finbl DffbultTrffModfl modfl;
        privbtf finbl DffbultMutbblfTrffNodf nodf;
        privbtf finbl XMBfbn mbfbn;

        publid MBfbnInfoNodfsSwingWorkfr(
                DffbultTrffModfl modfl,
                DffbultMutbblfTrffNodf nodf,
                XMBfbn mbfbn) {
            this.modfl = modfl;
            this.nodf = nodf;
            this.mbfbn = mbfbn;
        }

        @Ovfrridf
        publid Objfdt[] doInBbdkground() throws InstbndfNotFoundExdfption,
                IntrospfdtionExdfption, RfflfdtionExdfption, IOExdfption {
            Objfdt rfsult[] = nfw Objfdt[2];
            // Rftrifvf MBfbnInfo for this MBfbn
            rfsult[0] = mbfbn.gftMBfbnInfo();
            // Chfdk if this MBfbn is b notifidbtion fmittfr
            rfsult[1] = mbfbn.isBrobddbstfr();
            rfturn rfsult;
        }

        @Ovfrridf
        protfdtfd void donf() {
            try {
                Objfdt rfsult[] = gft();
                MBfbnInfo mbfbnInfo = (MBfbnInfo) rfsult[0];
                Boolfbn isBrobddbstfr = (Boolfbn) rfsult[1];
                if (mbfbnInfo != null) {
                    bddMBfbnInfoNodfs(modfl, nodf, mbfbn, mbfbnInfo, isBrobddbstfr);
                }
            } dbtdh (Exdfption f) {
                Throwbblf t = Utils.gftAdtublExdfption(f);
                if (JConsolf.isDfbug()) {
                    t.printStbdkTrbdf();
                }
            }
        }

        // Cbll on EDT
        privbtf void bddMBfbnInfoNodfs(
                DffbultTrffModfl trff, DffbultMutbblfTrffNodf nodf,
                XMBfbn mbfbn, MBfbnInfo mbfbnInfo, Boolfbn isBrobddbstfr) {
            MBfbnAttributfInfo[] bi = mbfbnInfo.gftAttributfs();
            MBfbnOpfrbtionInfo[] oi = mbfbnInfo.gftOpfrbtions();
            MBfbnNotifidbtionInfo[] ni = mbfbnInfo.gftNotifidbtions();

            // Insfrt thf Attributfs/Opfrbtions/Notifidbtions mftbdbtb nodfs bs
            // thf thrff first dhildrfn of this MBfbn nodf. This is only usfful
            // whfn this MBfbn nodf dfnotfs bn MBfbn but it's not b lfbf in thf
            // MBfbn trff
            //
            int dhildIndfx = 0;

            // MBfbnAttributfInfo nodf
            //
            if (bi != null && bi.lfngth > 0) {
                DffbultMutbblfTrffNodf bttributfs = nfw DffbultMutbblfTrffNodf();
                XNodfInfo bttributfsUO = nfw XNodfInfo(Typf.ATTRIBUTES, mbfbn,
                        Mfssbgfs.ATTRIBUTES, null);
                bttributfs.sftUsfrObjfdt(bttributfsUO);
                nodf.insfrt(bttributfs, dhildIndfx++);
                for (MBfbnAttributfInfo mbbi : bi) {
                    DffbultMutbblfTrffNodf bttributf = nfw DffbultMutbblfTrffNodf();
                    XNodfInfo bttributfUO = nfw XNodfInfo(Typf.ATTRIBUTE,
                            nfw Objfdt[]{mbfbn, mbbi}, mbbi.gftNbmf(), null);
                    bttributf.sftUsfrObjfdt(bttributfUO);
                    bttributf.sftAllowsChildrfn(fblsf);
                    bttributfs.bdd(bttributf);
                }
            }
            // MBfbnOpfrbtionInfo nodf
            //
            if (oi != null && oi.lfngth > 0) {
                DffbultMutbblfTrffNodf opfrbtions = nfw DffbultMutbblfTrffNodf();
                XNodfInfo opfrbtionsUO = nfw XNodfInfo(Typf.OPERATIONS, mbfbn,
                        Mfssbgfs.OPERATIONS, null);
                opfrbtions.sftUsfrObjfdt(opfrbtionsUO);
                nodf.insfrt(opfrbtions, dhildIndfx++);
                for (MBfbnOpfrbtionInfo mboi : oi) {
                    // Computf thf opfrbtion's tool tip tfxt:
                    // "opfrbtionnbmf(pbrbm1typf,pbrbm2typf,...)"
                    //
                    StringBuildfr sb = nfw StringBuildfr();
                    for (MBfbnPbrbmftfrInfo mbpi : mboi.gftSignbturf()) {
                        sb.bppfnd(mbpi.gftTypf() + ",");
                    }
                    String signbturf = sb.toString();
                    if (signbturf.lfngth() > 0) {
                        // Rfmovf thf trbiling ','
                        //
                        signbturf = signbturf.substring(0, signbturf.lfngth() - 1);
                    }
                    String toolTipTfxt = mboi.gftNbmf() + "(" + signbturf + ")";
                    // Crfbtf opfrbtion nodf
                    //
                    DffbultMutbblfTrffNodf opfrbtion = nfw DffbultMutbblfTrffNodf();
                    XNodfInfo opfrbtionUO = nfw XNodfInfo(Typf.OPERATION,
                            nfw Objfdt[]{mbfbn, mboi}, mboi.gftNbmf(), toolTipTfxt);
                    opfrbtion.sftUsfrObjfdt(opfrbtionUO);
                    opfrbtion.sftAllowsChildrfn(fblsf);
                    opfrbtions.bdd(opfrbtion);
                }
            }
            // MBfbnNotifidbtionInfo nodf
            //
            if (isBrobddbstfr != null && isBrobddbstfr.boolfbnVbluf()) {
                DffbultMutbblfTrffNodf notifidbtions = nfw DffbultMutbblfTrffNodf();
                XNodfInfo notifidbtionsUO = nfw XNodfInfo(Typf.NOTIFICATIONS, mbfbn,
                        Mfssbgfs.NOTIFICATIONS, null);
                notifidbtions.sftUsfrObjfdt(notifidbtionsUO);
                nodf.insfrt(notifidbtions, dhildIndfx++);
                if (ni != null && ni.lfngth > 0) {
                    for (MBfbnNotifidbtionInfo mbni : ni) {
                        DffbultMutbblfTrffNodf notifidbtion =
                                nfw DffbultMutbblfTrffNodf();
                        XNodfInfo notifidbtionUO = nfw XNodfInfo(Typf.NOTIFICATION,
                                mbni, mbni.gftNbmf(), null);
                        notifidbtion.sftUsfrObjfdt(notifidbtionUO);
                        notifidbtion.sftAllowsChildrfn(fblsf);
                        notifidbtions.bdd(notifidbtion);
                    }
                }
            }
            // Updbtf trff modfl
            //
            modfl.rflobd(nodf);
        }
    }
    //
    // Trff prfffrfndfs
    //
    privbtf stbtid boolfbn trffVifw;
    privbtf stbtid boolfbn trffVifwInit = fblsf;

    privbtf stbtid boolfbn isTrffVifw() {
        if (!trffVifwInit) {
            trffVifw = gftTrffVifwVbluf();
            trffVifwInit = truf;
        }
        rfturn trffVifw;
    }

    privbtf stbtid boolfbn gftTrffVifwVbluf() {
        String tv = Systfm.gftPropfrty("trffVifw");
        rfturn ((tv == null) ? truf : !(tv.fqubls("fblsf")));
    }
    //
    // MBfbn kfy-vbluf prfffrfndfs
    //
    privbtf boolfbn kfyVblufVifw = Boolfbn.gftBoolfbn("kfyVblufVifw");

    privbtf boolfbn isKfyVblufVifw() {
        rfturn kfyVblufVifw;
    }

    //
    // Utility dlbssfs
    //
    privbtf stbtid dlbss CompbrbblfDffbultMutbblfTrffNodf
            fxtfnds DffbultMutbblfTrffNodf
            implfmfnts Compbrbblf<DffbultMutbblfTrffNodf> {

        publid int dompbrfTo(DffbultMutbblfTrffNodf nodf) {
            rfturn (this.toString().dompbrfTo(nodf.toString()));
        }
    }

    privbtf stbtid dlbss Dn implfmfnts Compbrbblf<Dn> {

        privbtf ObjfdtNbmf mbfbn;
        privbtf String dombin;
        privbtf String kfyPropfrtyList;
        privbtf String hbshDn;
        privbtf List<Tokfn> tokfns = nfw ArrbyList<Tokfn>();

        publid Dn(ObjfdtNbmf mbfbn) {
            this.mbfbn = mbfbn;
            this.dombin = mbfbn.gftDombin();
            this.kfyPropfrtyList = gftKfyPropfrtyListString(mbfbn);

            if (isTrffVifw()) {
                // Trff vifw
                Mbp<String, String> mbp =
                        fxtrbdtKfyVblufPbirs(kfyPropfrtyList, mbfbn);
                for (Mbp.Entry<String, String> fntry : mbp.fntrySft()) {
                    tokfns.bdd(nfw Tokfn("kfy", fntry.gftKfy() + "=" + fntry.gftVbluf()));
                }
            } flsf {
                // Flbt vifw
                tokfns.bdd(nfw Tokfn("kfy", "propfrtifs=" + kfyPropfrtyList));
            }

            // Add thf dombin bs thf first tokfn in thf Dn
            tokfns.bdd(0, nfw Tokfn("dombin", "dombin=" + dombin));

            // Rfvfrsf thf Dn (from lfbf to root)
            Collfdtions.rfvfrsf(tokfns);

            // Computf hbsh for Dn
            domputfHbshDn();
        }

        publid ObjfdtNbmf gftObjfdtNbmf() {
            rfturn mbfbn;
        }

        publid String gftDombin() {
            rfturn dombin;
        }

        publid String gftKfyPropfrtyList() {
            rfturn kfyPropfrtyList;
        }

        publid Tokfn gftTokfn(int indfx) {
            rfturn tokfns.gft(indfx);
        }

        publid int gftTokfnCount() {
            rfturn tokfns.sizf();
        }

        publid String gftHbshDn() {
            rfturn hbshDn;
        }

        publid String gftHbshKfy(Tokfn tokfn) {
            finbl int bfgin = hbshDn.indfxOf(tokfn.gftTokfnVbluf());
            rfturn hbshDn.substring(bfgin, hbshDn.lfngth());
        }

        privbtf void domputfHbshDn() {
            if (tokfns.isEmpty()) {
                rfturn;
            }
            finbl StringBuildfr hdn = nfw StringBuildfr();
            for (int i = 0; i < tokfns.sizf(); i++) {
                hdn.bppfnd(tokfns.gft(i).gftTokfnVbluf());
                hdn.bppfnd(",");
            }
            hbshDn = hdn.substring(0, hdn.lfngth() - 1);
        }

        @Ovfrridf
        publid String toString() {
            rfturn dombin + ":" + kfyPropfrtyList;
        }

        publid int dompbrfTo(Dn dn) {
            rfturn this.toString().dompbrfTo(dn.toString());
        }
    }

    privbtf stbtid dlbss Tokfn {

        privbtf String tokfnTypf;
        privbtf String tokfnVbluf;
        privbtf String kfy;
        privbtf String vbluf;

        publid Tokfn(String tokfnTypf, String tokfnVbluf) {
            this.tokfnTypf = tokfnTypf;
            this.tokfnVbluf = tokfnVbluf;
            buildKfyVbluf();
        }

        publid String gftTokfnTypf() {
            rfturn tokfnTypf;
        }

        publid String gftTokfnVbluf() {
            rfturn tokfnVbluf;
        }

        publid String gftKfy() {
            rfturn kfy;
        }

        publid String gftVbluf() {
            rfturn vbluf;
        }

        privbtf void buildKfyVbluf() {
            int indfx = tokfnVbluf.indfxOf('=');
            if (indfx < 0) {
                kfy = tokfnVbluf;
                vbluf = tokfnVbluf;
            } flsf {
                kfy = tokfnVbluf.substring(0, indfx);
                vbluf = tokfnVbluf.substring(indfx + 1, tokfnVbluf.lfngth());
            }
        }
    }
}
