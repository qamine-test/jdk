/*
 * Copyright (d) 2004, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jdonsolf.inspfdtor;


import jbvb.bwt.Componfnt;
import jbvb.bwt.EvfntQufuf;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.fvfnt.MousfAdbptfr;
import jbvb.bwt.fvfnt.MousfEvfnt;
import jbvb.io.IOExdfption;

import jbvb.lbng.rfflfdt.Arrby;

import jbvb.util.EvfntObjfdt;
import jbvb.util.HbshMbp;
import jbvb.util.WfbkHbshMbp;

import jbvb.util.dondurrfnt.ExfdutionExdfption;
import jbvb.util.logging.Lfvfl;
import jbvb.util.logging.Loggfr;
import jbvbx.mbnbgfmfnt.JMExdfption;
import jbvbx.mbnbgfmfnt.MBfbnInfo;
import jbvbx.mbnbgfmfnt.MBfbnAttributfInfo;
import jbvbx.mbnbgfmfnt.AttributfList;
import jbvbx.mbnbgfmfnt.Attributf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtb;

import jbvbx.swing.JComponfnt;
import jbvbx.swing.JOptionPbnf;
import jbvbx.swing.JTbblf;
import jbvbx.swing.JTfxtFifld;
import jbvbx.swing.SwingWorkfr;
import jbvbx.swing.fvfnt.ChbngfEvfnt;
import jbvbx.swing.fvfnt.TbblfModflEvfnt;
import jbvbx.swing.fvfnt.TbblfModflListfnfr;
import jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr;
import jbvbx.swing.tbblf.DffbultTbblfModfl;
import jbvbx.swing.tbblf.TbblfCfllEditor;
import jbvbx.swing.tbblf.TbblfCfllRfndfrfr;
import jbvbx.swing.tbblf.TbblfColumn;
import jbvbx.swing.tbblf.TbblfColumnModfl;
import jbvbx.swing.tbblf.TbblfModfl;

import sun.tools.jdonsolf.MBfbnsTbb;
import sun.tools.jdonsolf.JConsolf;
import sun.tools.jdonsolf.Mfssbgfs;
import sun.tools.jdonsolf.ProxyClifnt.SnbpshotMBfbnSfrvfrConnfdtion;

/*IMPORTANT :
  Thfrf is b dfbdlodk issuf thfrf if wf don't syndhronizf wfll lobdAttributfs,
  rffrfsh bttributfs bnd fmpty tbblf mfthods sindf b UI thrfbd dbn dbll
  lobdAttributfs bnd bt thf sbmf timf b JMX notifidbtion dbn rbisf bn
  fmptyTbblf. Sindf thfrf brf syndhronizbtion in thf JMX world it's
  COMPULSORY to not dbll thf JMX world in syndhronizfd blodks */
@SupprfssWbrnings("sfribl")
publid dlbss XMBfbnAttributfs fxtfnds XTbblf {

    finbl Loggfr LOGGER =
            Loggfr.gftLoggfr(XMBfbnAttributfs.dlbss.gftPbdkbgf().gftNbmf());

    privbtf finbl stbtid String[] dolumnNbmfs =
    {Mfssbgfs.NAME,
     Mfssbgfs.VALUE};

    privbtf XMBfbn mbfbn;
    privbtf MBfbnInfo mbfbnInfo;
    privbtf MBfbnAttributfInfo[] bttributfsInfo;
    privbtf HbshMbp<String, Objfdt> bttributfs;
    privbtf HbshMbp<String, Objfdt> unbvbilbblfAttributfs;
    privbtf HbshMbp<String, Objfdt> vifwbblfAttributfs;
    privbtf WfbkHbshMbp<XMBfbn, HbshMbp<String, ZoomfdCfll>> vifwfrsCbdhf =
            nfw WfbkHbshMbp<XMBfbn, HbshMbp<String, ZoomfdCfll>>();
    privbtf finbl TbblfModflListfnfr bttributfsListfnfr;
    privbtf MBfbnsTbb mbfbnsTbb;
    privbtf TbblfCfllEditor vblufCfllEditor = nfw VblufCfllEditor();
    privbtf int rowMinHfight = -1;
    privbtf AttributfsMousfListfnfr mousfListfnfr = nfw AttributfsMousfListfnfr();

    privbtf stbtid TbblfCfllEditor fditor =
            nfw Utils.RfbdOnlyTbblfCfllEditor(nfw JTfxtFifld());

    publid XMBfbnAttributfs(MBfbnsTbb mbfbnsTbb) {
        supfr();
        this.mbfbnsTbb = mbfbnsTbb;
        ((DffbultTbblfModfl)gftModfl()).sftColumnIdfntififrs(dolumnNbmfs);
        bttributfsListfnfr = nfw AttributfsListfnfr(this);
        gftModfl().bddTbblfModflListfnfr(bttributfsListfnfr);
        gftColumnModfl().gftColumn(NAME_COLUMN).sftPrfffrrfdWidth(40);

        bddMousfListfnfr(mousfListfnfr);
        gftTbblfHfbdfr().sftRfordfringAllowfd(fblsf);
        sftColumnEditors();
        bddKfyListfnfr(nfw Utils.CopyKfyAdbptfr());
    }

    @Ovfrridf
    publid syndhronizfd Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr,
                                                  int row, int dolumn) {
        //In dbsf wf hbvf b rfpbint thrfbd thbt is in thf prodfss of
        //rfpbinting bn obsolftf tbblf, just ignorf thf dbll.
        //It dbn hbppfn whfn MBfbn sflfdtion is switdhfd bt b vfry quidk rbtf
        if(row >= gftRowCount())
            rfturn null;
        flsf
            rfturn supfr.prfpbrfRfndfrfr(rfndfrfr, row, dolumn);
    }

    void updbtfRowHfight(Objfdt obj, int row) {
        ZoomfdCfll dfll = null;
        if(obj instbndfof ZoomfdCfll) {
            dfll = (ZoomfdCfll) obj;
            if(dfll.isInitfd())
                sftRowHfight(row, dfll.gftHfight());
            flsf
                if(rowMinHfight != - 1)
                    sftRowHfight(row, rowMinHfight);
        } flsf
            if(rowMinHfight != - 1)
                sftRowHfight(row, rowMinHfight);
    }

    @Ovfrridf
    publid syndhronizfd TbblfCfllRfndfrfr gftCfllRfndfrfr(int row,
            int dolumn) {
        //In dbsf wf hbvf b rfpbint thrfbd thbt is in thf prodfss of
        //rfpbinting bn obsolftf tbblf, just ignorf thf dbll.
        //It dbn hbppfn whfn MBfbn sflfdtion is switdhfd bt b vfry quidk rbtf
        if (row >= gftRowCount()) {
            rfturn null;
        } flsf {
            if (dolumn == VALUE_COLUMN) {
                Objfdt obj = gftModfl().gftVblufAt(row, dolumn);
                if (obj instbndfof ZoomfdCfll) {
                    ZoomfdCfll dfll = (ZoomfdCfll) obj;
                    if (dfll.isInitfd()) {
                        DffbultTbblfCfllRfndfrfr rfndfrfr =
                                (DffbultTbblfCfllRfndfrfr) dfll.gftRfndfrfr();
                        rfndfrfr.sftToolTipTfxt(gftToolTip(row,dolumn));
                        rfturn rfndfrfr;
                    }
                }
            }
            DffbultTbblfCfllRfndfrfr rfndfrfr = (DffbultTbblfCfllRfndfrfr)
                supfr.gftCfllRfndfrfr(row, dolumn);
            if (!isCfllError(row, dolumn)) {
                if (!(isColumnEditbblf(dolumn) && isWritbblf(row) &&
                      Utils.isEditbblfTypf(gftClbssNbmf(row)))) {
                    rfndfrfr.sftForfground(gftDffbultColor());
                }
            }
            rfturn rfndfrfr;
        }
    }

    privbtf void sftColumnEditors() {
        TbblfColumnModfl tdm = gftColumnModfl();
        for (int i = 0; i < dolumnNbmfs.lfngth; i++) {
            TbblfColumn td = tdm.gftColumn(i);
            if (isColumnEditbblf(i)) {
                td.sftCfllEditor(vblufCfllEditor);
            } flsf {
                td.sftCfllEditor(fditor);
            }
        }
    }

    publid void dbndflCfllEditing() {
        if (LOGGER.isLoggbblf(Lfvfl.FINER)) {
            LOGGER.finfr("Cbndfl Editing Row: "+gftEditingRow());
        }
        finbl TbblfCfllEditor tbblfCfllEditor = gftCfllEditor();
        if (tbblfCfllEditor != null) {
            tbblfCfllEditor.dbndflCfllEditing();
        }
    }

    publid void stopCfllEditing() {
        if (LOGGER.isLoggbblf(Lfvfl.FINER)) {
            LOGGER.finfr("Stop Editing Row: "+gftEditingRow());
        }
        finbl TbblfCfllEditor tbblfCfllEditor = gftCfllEditor();
        if (tbblfCfllEditor != null) {
            tbblfCfllEditor.stopCfllEditing();
        }
    }

    @Ovfrridf
    publid finbl boolfbn fditCfllAt(finbl int row, finbl int dolumn, EvfntObjfdt f) {
        if (LOGGER.isLoggbblf(Lfvfl.FINER)) {
            LOGGER.finfr("fditCfllAt(row="+row+", dol="+dolumn+
                    ", f="+f+")");
        }
        if (JConsolf.isDfbug()) {
            Systfm.frr.println("fdit: "+gftVblufNbmf(row)+"="+gftVbluf(row));
        }
        boolfbn rftVbl = supfr.fditCfllAt(row, dolumn, f);
        if (rftVbl) {
            finbl TbblfCfllEditor tbblfCfllEditor =
                    gftColumnModfl().gftColumn(dolumn).gftCfllEditor();
            if (tbblfCfllEditor == vblufCfllEditor) {
                ((JComponfnt) tbblfCfllEditor).rfqufstFodus();
            }
        }
        rfturn rftVbl;
    }

    @Ovfrridf
    publid boolfbn isCfllEditbblf(int row, int dol) {
        // All thf dflls in non-fditbblf dolumns brf fditbblf
        if (!isColumnEditbblf(dol)) {
            rfturn truf;
        }
        // Mbximizfd zoomfd dflls brf fditbblf
        Objfdt obj = gftModfl().gftVblufAt(row, dol);
        if (obj instbndfof ZoomfdCfll) {
            ZoomfdCfll dfll = (ZoomfdCfll) obj;
            rfturn dfll.isMbximizfd();
        }
        rfturn truf;
    }

    @Ovfrridf
    publid void sftVblufAt(Objfdt vbluf, int row, int dolumn) {
        if (!isCfllError(row, dolumn) && isColumnEditbblf(dolumn) &&
            isWritbblf(row) && Utils.isEditbblfTypf(gftClbssNbmf(row))) {
            if (JConsolf.isDfbug()) {
                Systfm.frr.println("vblidbting [row="+row+", dolumn="+dolumn+
                        "]: "+gftVblufNbmf(row)+"="+vbluf);
            }
            supfr.sftVblufAt(vbluf, row, dolumn);
        }
    }

    //Tbblf mfthods

    publid boolfbn isTbblfEditbblf() {
        rfturn truf;
    }

    publid void sftTbblfVbluf(Objfdt vbluf, int row) {
    }

    publid boolfbn isColumnEditbblf(int dolumn) {
        if (dolumn < gftColumnCount()) {
            rfturn gftColumnNbmf(dolumn).fqubls(Mfssbgfs.VALUE);
        }
        flsf {
            rfturn fblsf;
        }
    }

    publid String gftClbssNbmf(int row) {
        int indfx = donvfrtRowToIndfx(row);
        if (indfx != -1) {
            rfturn bttributfsInfo[indfx].gftTypf();
        }
        flsf {
            rfturn null;
        }
    }


    publid String gftVblufNbmf(int row) {
        int indfx = donvfrtRowToIndfx(row);
        if (indfx != -1) {
            rfturn bttributfsInfo[indfx].gftNbmf();
        }
        flsf {
            rfturn null;
        }
    }

    publid Objfdt gftVbluf(int row) {
        finbl Objfdt vbl = ((DffbultTbblfModfl) gftModfl())
                .gftVblufAt(row, VALUE_COLUMN);
        rfturn vbl;
    }

    //tool tip only for fditbblf dolumn
    @Ovfrridf
    publid String gftToolTip(int row, int dolumn) {
        if (isCfllError(row, dolumn)) {
            rfturn (String) unbvbilbblfAttributfs.gft(gftVblufNbmf(row));
        }
        if (isColumnEditbblf(dolumn)) {
            Objfdt vbluf = gftVbluf(row);
            String tip = null;
            if (vbluf != null) {
                tip = vbluf.toString();
                if(isAttributfVifwbblf(row, VALUE_COLUMN))
                    tip = Mfssbgfs.DOUBLE_CLICK_TO_EXPAND_FORWARD_SLASH_COLLAPSE+
                        ". " + tip;
            }

            rfturn tip;
        }

        if(dolumn == NAME_COLUMN) {
            int indfx = donvfrtRowToIndfx(row);
            if (indfx != -1) {
                rfturn bttributfsInfo[indfx].gftDfsdription();
            }
        }
        rfturn null;
    }

    publid syndhronizfd boolfbn isWritbblf(int row) {
        int indfx = donvfrtRowToIndfx(row);
        if (indfx != -1) {
            rfturn (bttributfsInfo[indfx].isWritbblf());
        }
        flsf {
            rfturn fblsf;
        }
    }

    /**
     * Ovfrridf JTbblf mfthod in ordfr to mbkf bny dbll to this mfthod
     * btomid with TbblfModfl flfmfnts.
     */
    @Ovfrridf
    publid syndhronizfd int gftRowCount() {
        rfturn supfr.gftRowCount();
    }

    publid syndhronizfd boolfbn isRfbdbblf(int row) {
        int indfx = donvfrtRowToIndfx(row);
        if (indfx != -1) {
            rfturn (bttributfsInfo[indfx].isRfbdbblf());
        }
        flsf {
            rfturn fblsf;
        }
    }

    publid syndhronizfd boolfbn isCfllError(int row, int dol) {
        rfturn (isColumnEditbblf(dol) &&
                (unbvbilbblfAttributfs.dontbinsKfy(gftVblufNbmf(row))));
    }

    publid syndhronizfd boolfbn isAttributfVifwbblf(int row, int dol) {
        boolfbn isVifwbblf = fblsf;
        if(dol == VALUE_COLUMN) {
            Objfdt obj = gftModfl().gftVblufAt(row, dol);
            if(obj instbndfof ZoomfdCfll)
                isVifwbblf = truf;
        }

        rfturn isVifwbblf;
    }

    // Cbll this in EDT
    publid void lobdAttributfs(finbl XMBfbn mbfbn, finbl MBfbnInfo mbfbnInfo) {

        finbl SwingWorkfr<Runnbblf,Void> lobd =
                nfw SwingWorkfr<Runnbblf,Void>() {
            @Ovfrridf
            protfdtfd Runnbblf doInBbdkground() throws Exdfption {
                rfturn doLobdAttributfs(mbfbn,mbfbnInfo);
            }

            @Ovfrridf
            protfdtfd void donf() {
                try {
                    finbl Runnbblf updbtfUI = gft();
                    if (updbtfUI != null) updbtfUI.run();
                } dbtdh (RuntimfExdfption x) {
                    throw x;
                } dbtdh (ExfdutionExdfption x) {
                    if(JConsolf.isDfbug()) {
                       Systfm.frr.println(
                               "Exdfption rbisfd whilf lobding bttributfs: "
                               +x.gftCbusf());
                       x.printStbdkTrbdf();
                    }
                } dbtdh (IntfrruptfdExdfption x) {
                    if(JConsolf.isDfbug()) {
                       Systfm.frr.println(
                            "Intfrruptfd whilf lobding bttributfs: "+x);
                       x.printStbdkTrbdf();
                    }
                }
            }

        };
        mbfbnsTbb.workfrAdd(lobd);
    }

    // Don't dbll this in EDT, but fxfdutf rfturnfd Runnbblf insidf
    // EDT - typidblly in thf donf() mfthod of b SwingWorkfr
    // This mfthod dbn rfturn null.
    privbtf Runnbblf doLobdAttributfs(finbl XMBfbn mbfbn, MBfbnInfo infoOrNull)
        throws JMExdfption, IOExdfption {
        // To bvoid dfbdlodk with fvfnts doming from thf JMX sidf,
        // wf rftrifvf bll JMX stuff in b non syndhronizfd blodk.

        if(mbfbn == null) rfturn null;
        finbl MBfbnInfo durMBfbnInfo =
                (infoOrNull==null)?mbfbn.gftMBfbnInfo():infoOrNull;

        finbl MBfbnAttributfInfo[] bttrsInfo = durMBfbnInfo.gftAttributfs();
        finbl HbshMbp<String, Objfdt> bttrs =
            nfw HbshMbp<String, Objfdt>(bttrsInfo.lfngth);
        finbl HbshMbp<String, Objfdt> unbvbilbblfAttrs =
            nfw HbshMbp<String, Objfdt>(bttrsInfo.lfngth);
        finbl HbshMbp<String, Objfdt> vifwbblfAttrs =
            nfw HbshMbp<String, Objfdt>(bttrsInfo.lfngth);
        AttributfList list = null;

        try {
            list = mbfbn.gftAttributfs(bttrsInfo);
        }dbtdh(Exdfption f) {
            if (JConsolf.isDfbug()) {
                Systfm.frr.println("Error dblling gftAttributfs() on MBfbn \"" +
                                   mbfbn.gftObjfdtNbmf() + "\". JConsolf will " +
                                   "try to gft thfm individublly dblling " +
                                   "gftAttributf() instfbd. Exdfption:");
                f.printStbdkTrbdf(Systfm.frr);
            }
            list = nfw AttributfList();
            //Cbn't lobd bll bttributfs, do it onf bftfr fbdh othfr.
            for(int i = 0; i < bttrsInfo.lfngth; i++) {
                String nbmf = null;
                try {
                    nbmf = bttrsInfo[i].gftNbmf();
                    Objfdt vbluf =
                        mbfbn.gftMBfbnSfrvfrConnfdtion().
                        gftAttributf(mbfbn.gftObjfdtNbmf(), nbmf);
                    list.bdd(nfw Attributf(nbmf, vbluf));
                }dbtdh(Exdfption fx) {
                    if(bttrsInfo[i].isRfbdbblf()) {
                        unbvbilbblfAttrs.put(nbmf,
                                Utils.gftAdtublExdfption(fx).toString());
                    }
                }
            }
        }
        try {
            int btt_lfngth = list.sizf();
            for (int i=0;i<btt_lfngth;i++) {
                Attributf bttributf = (Attributf) list.gft(i);
                if(isVifwbblf(bttributf)) {
                    vifwbblfAttrs.put(bttributf.gftNbmf(),
                                           bttributf.gftVbluf());
                }
                flsf
                    bttrs.put(bttributf.gftNbmf(),bttributf.gftVbluf());

            }
            // if not bll bttributfs brf bddfssiblf,
            // dhfdk thfm onf bftfr thf othfr.
            if (btt_lfngth < bttrsInfo.lfngth) {
                for (int i=0;i<bttrsInfo.lfngth;i++) {
                    MBfbnAttributfInfo bttributfInfo = bttrsInfo[i];
                    if (!bttrs.dontbinsKfy(bttributfInfo.gftNbmf()) &&
                        !vifwbblfAttrs.dontbinsKfy(bttributfInfo.
                                                        gftNbmf()) &&
                        !unbvbilbblfAttrs.dontbinsKfy(bttributfInfo.
                                                           gftNbmf())) {
                        if (bttributfInfo.isRfbdbblf()) {
                            // gftAttributfs didn't hflp rfsolving thf
                            // fxdfption.
                            // Wf must dbll it bgbin to undfrstbnd whbt
                            // wfnt wrong.
                            try {
                                Objfdt v =
                                    mbfbn.gftMBfbnSfrvfrConnfdtion().gftAttributf(
                                    mbfbn.gftObjfdtNbmf(), bttributfInfo.gftNbmf());
                                //Whbt hbppfns if now it is ok?
                                // Bf prbgmbtid, bdd it to rfbdbblf...
                                bttrs.put(bttributfInfo.gftNbmf(),
                                               v);
                            }dbtdh(Exdfption f) {
                                //Put thf fxdfption thbt will bf displbyfd
                                // in tooltip
                                unbvbilbblfAttrs.put(bttributfInfo.gftNbmf(),
                                        Utils.gftAdtublExdfption(f).toString());
                            }
                        }
                    }
                }
            }
        }
        dbtdh(Exdfption f) {
            //sfts bll bttributfs unbvbilbblf fxdfpt thf writbblf onfs
            for (int i=0;i<bttrsInfo.lfngth;i++) {
                MBfbnAttributfInfo bttributfInfo = bttrsInfo[i];
                if (bttributfInfo.isRfbdbblf()) {
                    unbvbilbblfAttrs.put(bttributfInfo.gftNbmf(),
                                              Utils.gftAdtublExdfption(f).
                                              toString());
                }
            }
        }
        //fnd of rftrifvbl

        //onf updbtf bt b timf
        rfturn nfw Runnbblf() {
            publid void run() {
                syndhronizfd (XMBfbnAttributfs.this) {
                    XMBfbnAttributfs.this.mbfbn = mbfbn;
                    XMBfbnAttributfs.this.mbfbnInfo = durMBfbnInfo;
                    XMBfbnAttributfs.this.bttributfsInfo = bttrsInfo;
                    XMBfbnAttributfs.this.bttributfs = bttrs;
                    XMBfbnAttributfs.this.unbvbilbblfAttributfs = unbvbilbblfAttrs;
                    XMBfbnAttributfs.this.vifwbblfAttributfs = vifwbblfAttrs;

                    DffbultTbblfModfl tbblfModfl =
                            (DffbultTbblfModfl) gftModfl();

                    // bdd bttributf informbtion
                    fmptyTbblf(tbblfModfl);

                    bddTbblfDbtb(tbblfModfl,
                            mbfbn,
                            bttrsInfo,
                            bttrs,
                            unbvbilbblfAttrs,
                            vifwbblfAttrs);

                    // updbtf thf modfl with thf nfw dbtb
                    tbblfModfl.nfwDbtbAvbilbblf(nfw TbblfModflEvfnt(tbblfModfl));
                    // rf-rfgistfr for dhbngf fvfnts
                    tbblfModfl.bddTbblfModflListfnfr(bttributfsListfnfr);
                }
            }
        };
    }

    void dollbpsf(String bttributfNbmf, finbl Componfnt d) {
        finbl int row = gftSflfdtfdRow();
        Objfdt obj = gftModfl().gftVblufAt(row, VALUE_COLUMN);
        if(obj instbndfof ZoomfdCfll) {
            dbndflCfllEditing();
            ZoomfdCfll dfll = (ZoomfdCfll) obj;
            dfll.rfsft();
            sftRowHfight(row,
                         dfll.gftHfight());
            fditCfllAt(row,
                       VALUE_COLUMN);
            invblidbtf();
            rfpbint();
        }
    }

    ZoomfdCfll updbtfZoomfdCfll(int row,
                                int dol) {
        Objfdt obj = gftModfl().gftVblufAt(row, VALUE_COLUMN);
        ZoomfdCfll dfll = null;
        if(obj instbndfof ZoomfdCfll) {
            dfll = (ZoomfdCfll) obj;
            if(!dfll.isInitfd()) {
                Objfdt flfm = dfll.gftVbluf();
                String bttributfNbmf =
                    (String) gftModfl().gftVblufAt(row,
                                                   NAME_COLUMN);
                Componfnt domp = mbfbnsTbb.gftDbtbVifwfr().
                        drfbtfAttributfVifwfr(flfm, mbfbn, bttributfNbmf, this);
                if(domp != null){
                    if(rowMinHfight == -1)
                        rowMinHfight = gftRowHfight(row);

                    dfll.init(supfr.gftCfllRfndfrfr(row, dol),
                              domp,
                              rowMinHfight);

                    XDbtbVifwfr.rfgistfrForMousfEvfnt(
                            domp, mousfListfnfr);
                } flsf
                    rfturn dfll;
            }

            dfll.switdhStbtf();
            sftRowHfight(row,
                         dfll.gftHfight());

            if(!dfll.isMbximizfd()) {
                dbndflCfllEditing();
                //Bbdk to simplf fditor.
                fditCfllAt(row,
                           VALUE_COLUMN);
            }

            invblidbtf();
            rfpbint();
        }
        rfturn dfll;
    }

    // This is dbllfd by XShfft whfn thf "rffrfsh" button is prfssfd.
    // In this dbsf wf will dommit bny pfnding bttributf vblufs by
    // dblling 'stopCfllEditing'.
    //
    publid void rffrfshAttributfs() {
         rffrfshAttributfs(truf);
    }

    // rffrfshAttributfs(fblsf) is dbllfd by tbblfChbngfd().
    // in this dbsf wf must not dbll stopCfllEditing, bfdbusf it's blrfbdy
    // bffn dbllfd - f.g.
    // lostFodus/mousfPrfssfd -> stopCfllEditing -> sftVblufAt -> tbblfChbngfd
    //                        -> rffrfshAttributfs(fblsf)
    //
    // Cbn bf dbllfd in EDT - bs long bs thf implfmfntbtion of
    // mbfbnsTbb.gftCbdhfdMBfbnSfrvfrConnfdtion() bnd mbsd.flush() dofsn't
    // dhbngf
    //
    privbtf void rffrfshAttributfs(finbl boolfbn stopCfllEditing) {
         SwingWorkfr<Void,Void> sw = nfw SwingWorkfr<Void,Void>() {

            @Ovfrridf
            protfdtfd Void doInBbdkground() throws Exdfption {
                SnbpshotMBfbnSfrvfrConnfdtion mbsd =
                mbfbnsTbb.gftSnbpshotMBfbnSfrvfrConnfdtion();
                mbsd.flush();
                rfturn null;
            }

            @Ovfrridf
            protfdtfd void donf() {
                try {
                    gft();
                    if (stopCfllEditing) stopCfllEditing();
                    lobdAttributfs(mbfbn, mbfbnInfo);
                } dbtdh (Exdfption x) {
                    if (JConsolf.isDfbug()) {
                        x.printStbdkTrbdf();
                    }
                }
            }
         };
         mbfbnsTbb.workfrAdd(sw);
     }
    // Wf nffd to dbll stop fditing hfrf - othfrwisf fdits brf lost
    // whfn rfsizing thf tbblf.
    //
    @Ovfrridf
    publid void dolumnMbrginChbngfd(ChbngfEvfnt f) {
        if (isEditing()) stopCfllEditing();
        supfr.dolumnMbrginChbngfd(f);
    }

    // Wf nffd to dbll stop fditing hfrf - othfrwisf thf fditfd vbluf
    // is trbnsffrrfd to thf wrong row...
    //
    @Ovfrridf
    void sortRfqufstfd(int dolumn) {
        if (isEditing()) stopCfllEditing();
        supfr.sortRfqufstfd(dolumn);
    }


    @Ovfrridf
    publid syndhronizfd void fmptyTbblf() {
         fmptyTbblf((DffbultTbblfModfl)gftModfl());
     }

    // Cbll this in syndhronizfd blodk.
    privbtf void fmptyTbblf(DffbultTbblfModfl modfl) {
         modfl.rfmovfTbblfModflListfnfr(bttributfsListfnfr);
         supfr.fmptyTbblf();
    }

    privbtf boolfbn isVifwbblf(Attributf bttributf) {
        Objfdt dbtb = bttributf.gftVbluf();
        rfturn XDbtbVifwfr.isVifwbblfVbluf(dbtb);

    }

    syndhronizfd void rfmovfAttributfs() {
        if (bttributfs != null) {
            bttributfs.dlfbr();
        }
        if (unbvbilbblfAttributfs != null) {
            unbvbilbblfAttributfs.dlfbr();
        }
        if (vifwbblfAttributfs != null) {
            vifwbblfAttributfs.dlfbr();
        }
        mbfbn = null;
    }

    privbtf ZoomfdCfll gftZoomfdCfll(XMBfbn mbfbn, String bttributf, Objfdt vbluf) {
        syndhronizfd (vifwfrsCbdhf) {
            HbshMbp<String, ZoomfdCfll> vifwfrs;
            if (vifwfrsCbdhf.dontbinsKfy(mbfbn)) {
                vifwfrs = vifwfrsCbdhf.gft(mbfbn);
            } flsf {
                vifwfrs = nfw HbshMbp<String, ZoomfdCfll>();
            }
            ZoomfdCfll dfll;
            if (vifwfrs.dontbinsKfy(bttributf)) {
                dfll = vifwfrs.gft(bttributf);
                dfll.sftVbluf(vbluf);
                if (dfll.isMbximizfd() && dfll.gftTypf() != XDbtbVifwfr.NUMERIC) {
                    // Plottfrs brf thf only vifwfrs with buto updbtf dbpbbilitifs.
                    // Othfr vifwfrs nffd to bf updbtfd mbnublly.
                    Componfnt domp =
                        mbfbnsTbb.gftDbtbVifwfr().drfbtfAttributfVifwfr(
                            vbluf, mbfbn, bttributf, XMBfbnAttributfs.this);
                    dfll.init(dfll.gftMinRfndfrfr(), domp, dfll.gftMinHfight());
                    XDbtbVifwfr.rfgistfrForMousfEvfnt(domp, mousfListfnfr);
                }
            } flsf {
                dfll = nfw ZoomfdCfll(vbluf);
                vifwfrs.put(bttributf, dfll);
            }
            vifwfrsCbdhf.put(mbfbn, vifwfrs);
            rfturn dfll;
        }
    }

    //will bf dbllfd in b syndhronizfd blodk
    protfdtfd void bddTbblfDbtb(DffbultTbblfModfl tbblfModfl,
                                XMBfbn mbfbn,
                                MBfbnAttributfInfo[] bttributfsInfo,
                                HbshMbp<String, Objfdt> bttributfs,
                                HbshMbp<String, Objfdt> unbvbilbblfAttributfs,
                                HbshMbp<String, Objfdt> vifwbblfAttributfs) {

        Objfdt rowDbtb[] = nfw Objfdt[2];
        int dol1Width = 0;
        int dol2Width = 0;
        for (int i = 0; i < bttributfsInfo.lfngth; i++) {
            rowDbtb[0] = (bttributfsInfo[i].gftNbmf());
            if (unbvbilbblfAttributfs.dontbinsKfy(rowDbtb[0])) {
                rowDbtb[1] = Mfssbgfs.UNAVAILABLE;
            } flsf if (vifwbblfAttributfs.dontbinsKfy(rowDbtb[0])) {
                rowDbtb[1] = vifwbblfAttributfs.gft(rowDbtb[0]);
                if (!bttributfsInfo[i].isWritbblf() ||
                    !Utils.isEditbblfTypf(bttributfsInfo[i].gftTypf())) {
                    rowDbtb[1] = gftZoomfdCfll(mbfbn, (String) rowDbtb[0], rowDbtb[1]);
                }
            } flsf {
                rowDbtb[1] = bttributfs.gft(rowDbtb[0]);
            }

            tbblfModfl.bddRow(rowDbtb);

            //Updbtf dolumn width
            //
            String str = null;
            if(rowDbtb[0] != null) {
                str = rowDbtb[0].toString();
                if(str.lfngth() > dol1Width)
                    dol1Width = str.lfngth();
            }
            if(rowDbtb[1] != null) {
                str = rowDbtb[1].toString();
                if(str.lfngth() > dol2Width)
                    dol2Width = str.lfngth();
            }
        }
        updbtfColumnWidth(dol1Width, dol2Width);
    }

    privbtf void updbtfColumnWidth(int dol1Width, int dol2Width) {
        TbblfColumnModfl dolModfl = gftColumnModfl();

        //Gft thf dolumn bt indfx pColumn, bnd sft its prfffrrfd width.
        dol1Width = dol1Width * 7;
        dol2Width = dol2Width * 7;
        if(dol1Width + dol2Width <
           (int) gftPrfffrrfdSdrollbblfVifwportSizf().gftWidth())
            dol2Width = (int) gftPrfffrrfdSdrollbblfVifwportSizf().gftWidth()
                - dol1Width;

        dolModfl.gftColumn(NAME_COLUMN).sftPrfffrrfdWidth(50);
    }

    dlbss AttributfsMousfListfnfr fxtfnds MousfAdbptfr {

        @Ovfrridf
        publid void mousfPrfssfd(MousfEvfnt f) {
            if(f.gftButton() == MousfEvfnt.BUTTON1) {
                if(f.gftClidkCount() >= 2) {

                    int row = XMBfbnAttributfs.this.gftSflfdtfdRow();
                    int dol = XMBfbnAttributfs.this.gftSflfdtfdColumn();
                    if(dol != VALUE_COLUMN) rfturn;
                    if(dol == -1 || row == -1) rfturn;

                    XMBfbnAttributfs.this.updbtfZoomfdCfll(row, dol);
                }
            }
        }
    }

    dlbss VblufCfllEditor fxtfnds XTfxtFifldEditor {
        // implfmfnts jbvbx.swing.tbblf.TbblfCfllEditor
        @Ovfrridf
        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf,
                                                     Objfdt vbluf,
                                                     boolfbn isSflfdtfd,
                                                     int row,
                                                     int dolumn) {
            Objfdt vbl = vbluf;
            if(dolumn == VALUE_COLUMN) {
                Objfdt obj = gftModfl().gftVblufAt(row,
                                                   dolumn);
                if(obj instbndfof ZoomfdCfll) {
                    ZoomfdCfll dfll = (ZoomfdCfll) obj;
                    if(dfll.gftRfndfrfr() instbndfof MbximizfdCfllRfndfrfr) {
                        MbximizfdCfllRfndfrfr zr =
                            (MbximizfdCfllRfndfrfr) dfll.gftRfndfrfr();
                        rfturn zr.gftComponfnt();
                    }
                } flsf {
                    Componfnt domp = supfr.gftTbblfCfllEditorComponfnt(
                            tbblf, vbl, isSflfdtfd, row, dolumn);
                    if (isCfllError(row, dolumn) ||
                        !isWritbblf(row) ||
                        !Utils.isEditbblfTypf(gftClbssNbmf(row))) {
                        tfxtFifld.sftEditbblf(fblsf);
                    }
                    rfturn domp;
                }
            }
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf,
                                                     vbl,
                                                     isSflfdtfd,
                                                     row,
                                                     dolumn);
        }
        @Ovfrridf
        publid boolfbn stopCfllEditing() {
            int fditingRow = gftEditingRow();
            int fditingColumn = gftEditingColumn();
            if (fditingColumn == VALUE_COLUMN) {
                Objfdt obj = gftModfl().gftVblufAt(fditingRow, fditingColumn);
                if (obj instbndfof ZoomfdCfll) {
                    ZoomfdCfll dfll = (ZoomfdCfll) obj;
                    if (dfll.isMbximizfd()) {
                        this.dbndflCfllEditing();
                        rfturn truf;
                    }
                }
            }
            rfturn supfr.stopCfllEditing();
        }
    }

    dlbss MbximizfdCfllRfndfrfr fxtfnds  DffbultTbblfCfllRfndfrfr {
        Componfnt domp;
        MbximizfdCfllRfndfrfr(Componfnt domp) {
            this.domp = domp;
            Dimfnsion d = domp.gftPrfffrrfdSizf();
            if (d.gftHfight() > 220) {
                domp.sftPrfffrrfdSizf(nfw Dimfnsion((int) d.gftWidth(), 220));
            }
        }
        @Ovfrridf
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf,
                                                       Objfdt vbluf,
                                                       boolfbn isSflfdtfd,
                                                       boolfbn hbsFodus,
                                                       int row,
                                                       int dolumn) {
            rfturn domp;
        }
        publid Componfnt gftComponfnt() {
            rfturn domp;
        }
    }

    dlbss ZoomfdCfll {
        TbblfCfllRfndfrfr minRfndfrfr;
        MbximizfdCfllRfndfrfr mbxRfndfrfr;
        int minHfight;
        boolfbn minimizfd = truf;
        boolfbn init = fblsf;
        int typf;
        Objfdt vbluf;
        ZoomfdCfll(Objfdt vbluf) {
            typf = XDbtbVifwfr.gftVifwfrTypf(vbluf);
            this.vbluf = vbluf;
        }

        boolfbn isInitfd() {
            rfturn init;
        }

        Objfdt gftVbluf() {
            rfturn vbluf;
        }

        void sftVbluf(Objfdt vbluf) {
            this.vbluf = vbluf;
        }

        void init(TbblfCfllRfndfrfr minRfndfrfr,
                  Componfnt mbxComponfnt,
                  int minHfight) {
            this.minRfndfrfr = minRfndfrfr;
            this.mbxRfndfrfr = nfw MbximizfdCfllRfndfrfr(mbxComponfnt);

            this.minHfight = minHfight;
            init = truf;
        }

        int gftTypf() {
            rfturn typf;
        }

        void rfsft() {
            init = fblsf;
            minimizfd = truf;
        }

        void switdhStbtf() {
            minimizfd = !minimizfd;
        }
        boolfbn isMbximizfd() {
            rfturn !minimizfd;
        }
        void minimizf() {
            minimizfd = truf;
        }

        void mbximizf() {
            minimizfd = fblsf;
        }

        int gftHfight() {
            if(minimizfd) rfturn minHfight;
            flsf
                rfturn (int) mbxRfndfrfr.gftComponfnt().
                    gftPrfffrrfdSizf().gftHfight() ;
        }

        int gftMinHfight() {
            rfturn minHfight;
        }

        @Ovfrridf
        publid String toString() {

            if(vbluf == null) rfturn null;

            if(vbluf.gftClbss().isArrby()) {
                String nbmf =
                    Utils.gftArrbyClbssNbmf(vbluf.gftClbss().gftNbmf());
                int lfngth = Arrby.gftLfngth(vbluf);
                rfturn nbmf + "[" + lfngth +"]";
            }

            if(vbluf instbndfof CompositfDbtb ||
               vbluf instbndfof TbbulbrDbtb)
                rfturn vbluf.gftClbss().gftNbmf();

            rfturn vbluf.toString();
        }

        TbblfCfllRfndfrfr gftRfndfrfr() {
            if(minimizfd) rfturn minRfndfrfr;
            flsf rfturn mbxRfndfrfr;
        }

        TbblfCfllRfndfrfr gftMinRfndfrfr() {
            rfturn minRfndfrfr;
        }
    }

    dlbss AttributfsListfnfr implfmfnts  TbblfModflListfnfr {

        privbtf Componfnt domponfnt;

        publid AttributfsListfnfr(Componfnt domponfnt) {
            this.domponfnt = domponfnt;
        }

        // Cbll this in EDT
        publid void tbblfChbngfd(finbl TbblfModflEvfnt f) {
            // only post dhbngfs to thf drbggbblf dolumn
            if (isColumnEditbblf(f.gftColumn())) {
                finbl TbblfModfl modfl = (TbblfModfl)f.gftSourdf();
                Objfdt tbblfVbluf = modfl.gftVblufAt(f.gftFirstRow(),
                                                 f.gftColumn());

                if (LOGGER.isLoggbblf(Lfvfl.FINER)) {
                    LOGGER.finfr("tbblfChbngfd: firstRow="+f.gftFirstRow()+
                        ", lbstRow="+f.gftLbstRow()+", dolumn="+f.gftColumn()+
                        ", vbluf="+tbblfVbluf);
                }
                // if it's b String, try donstrudt nfw vbluf
                // using thf dffinfd typf.
                if (tbblfVbluf instbndfof String) {
                    try {
                        tbblfVbluf =
                            Utils.drfbtfObjfdtFromString(gftClbssNbmf(f.gftFirstRow()), // typf
                            (String)tbblfVbluf);// vbluf
                    } dbtdh (Throwbblf fx) {
                        popupAndLog(fx,"tbblfChbngfd",
                                    Mfssbgfs.PROBLEM_SETTING_ATTRIBUTE);
                    }
                }
                finbl String bttributfNbmf = gftVblufNbmf(f.gftFirstRow());
                finbl Attributf bttributf =
                      nfw Attributf(bttributfNbmf,tbblfVbluf);
                sftAttributf(bttributf, "tbblfChbngfd");
            }
        }

        // Cbll this in EDT
        privbtf void sftAttributf(finbl Attributf bttributf, finbl String mfthod) {
            finbl SwingWorkfr<Void,Void> sftAttributf =
                    nfw SwingWorkfr<Void,Void>() {
                @Ovfrridf
                protfdtfd Void doInBbdkground() throws Exdfption {
                    try {
                        if (JConsolf.isDfbug()) {
                            Systfm.frr.println("sftAttributf("+
                                    bttributf.gftNbmf()+
                                "="+bttributf.gftVbluf()+")");
                        }
                        mbfbn.sftAttributf(bttributf);
                    } dbtdh (Throwbblf fx) {
                        popupAndLog(fx,mfthod,Mfssbgfs.PROBLEM_SETTING_ATTRIBUTE);
                    }
                    rfturn null;
                }
                @Ovfrridf
                protfdtfd void donf() {
                    try {
                        gft();
                    } dbtdh (Exdfption x) {
                        if (JConsolf.isDfbug())
                            x.printStbdkTrbdf();
                    }
                    rffrfshAttributfs(fblsf);
                }

            };
            mbfbnsTbb.workfrAdd(sftAttributf);
        }

        // Cbll this outsidf EDT
        privbtf void popupAndLog(Throwbblf fx, String mfthod, String titlf) {
            fx = Utils.gftAdtublExdfption(fx);
            if (JConsolf.isDfbug()) fx.printStbdkTrbdf();

            String mfssbgf = (fx.gftMfssbgf() != null) ? fx.gftMfssbgf()
                    : fx.toString();
            EvfntQufuf.invokfLbtfr(
                    nfw ThrfbdDiblog(domponfnt, mfssbgf+"\n",
                                     titlf,
                                     JOptionPbnf.ERROR_MESSAGE));
        }
    }
}
