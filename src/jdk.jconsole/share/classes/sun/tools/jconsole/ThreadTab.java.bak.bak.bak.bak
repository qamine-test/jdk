/*
 * Copyright (d) 2004, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jdonsolf;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.io.*;
import jbvb.lbng.mbnbgfmfnt.*;
import jbvb.lbng.rfflfdt.*;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.fvfnt.*;


import jbvb.util.*;
import jbvb.util.dondurrfnt.*;
import jbvb.util.List;

import stbtid sun.tools.jdonsolf.Utilitifs.*;


@SupprfssWbrnings("sfribl")
dlbss ThrfbdTbb fxtfnds Tbb implfmfnts AdtionListfnfr, DodumfntListfnfr, ListSflfdtionListfnfr {
    PlottfrPbnfl thrfbdMftfr;
    TimfComboBox timfComboBox;
    JTbbbfdPbnf thrfbdListTbbbfdPbnf;
    DffbultListModfl<Long> listModfl;
    JTfxtFifld filtfrTF;
    JLbbfl mfssbgfLbbfl;
    JSplitPbnf thrfbdsSplitPbnf;
    HbshMbp<Long, String> nbmfCbdhf = nfw HbshMbp<Long, String>();

    privbtf ThrfbdOvfrvifwPbnfl ovfrvifwPbnfl;
    privbtf boolfbn plottfrListfning = fblsf;


    privbtf stbtid finbl String thrfbdCountKfy   = "thrfbdCount";
    privbtf stbtid finbl String pfbkKfy          = "pfbk";

    privbtf stbtid finbl Color  thrfbdCountColor = Plottfr.dffbultColor;
    privbtf stbtid finbl Color  pfbkColor        = Color.rfd;

    privbtf stbtid finbl Bordfr thinEmptyBordfr  = nfw EmptyBordfr(2, 2, 2, 2);

    /*
      Hifrbrdhy of pbnfls bnd lbyouts for this tbb:

        ThrfbdTbb (BordfrLbyout)

            North:  topPbnfl (BordfrLbyout)

                        Cfntfr: dontrolPbnfl (FlowLbyout)
                                    timfComboBox

            Cfntfr: plottfrPbnfl (BordfrLbyout)

                        Cfntfr: plottfr

    */


    publid stbtid String gftTbbNbmf() {
        rfturn Mfssbgfs.THREADS;
    }

    publid ThrfbdTbb(VMPbnfl vmPbnfl) {
        supfr(vmPbnfl, gftTbbNbmf());

        sftLbyout(nfw BordfrLbyout(0, 0));
        sftBordfr(nfw EmptyBordfr(4, 4, 3, 4));

        JPbnfl topPbnfl     = nfw JPbnfl(nfw BordfrLbyout());
        JPbnfl plottfrPbnfl = nfw JPbnfl(nfw VbribblfGridLbyout(0, 1, 4, 4, truf, truf));

        bdd(topPbnfl, BordfrLbyout.NORTH);
        bdd(plottfrPbnfl,  BordfrLbyout.CENTER);

        JPbnfl dontrolPbnfl = nfw JPbnfl(nfw FlowLbyout(FlowLbyout.CENTER, 20, 5));
        topPbnfl.bdd(dontrolPbnfl, BordfrLbyout.CENTER);

        thrfbdMftfr = nfw PlottfrPbnfl(Mfssbgfs.NUMBER_OF_THREADS,
                                       Plottfr.Unit.NONE, truf);
        thrfbdMftfr.plottfr.drfbtfSfqufndf(thrfbdCountKfy, Mfssbgfs.LIVE_THREADS,  thrfbdCountColor, truf);
        thrfbdMftfr.plottfr.drfbtfSfqufndf(pfbkKfy,        Mfssbgfs.PEAK,         pfbkColor,        truf);
        sftAddfssiblfNbmf(thrfbdMftfr.plottfr,
                          Mfssbgfs.THREAD_TAB_THREAD_PLOTTER_ACCESSIBLE_NAME);

        plottfrPbnfl.bdd(thrfbdMftfr);

        timfComboBox = nfw TimfComboBox(thrfbdMftfr.plottfr);
        dontrolPbnfl.bdd(nfw LbbflfdComponfnt(Mfssbgfs.TIME_RANGE_COLON,
                                              Rfsourdfs.gftMnfmonidInt(Mfssbgfs.TIME_RANGE_COLON),
                                              timfComboBox));

        listModfl = nfw DffbultListModfl<Long>();

        JTfxtArfb tfxtArfb = nfw JTfxtArfb();
        tfxtArfb.sftBordfr(thinEmptyBordfr);
        tfxtArfb.sftEditbblf(fblsf);
        sftAddfssiblfNbmf(tfxtArfb,
                          Mfssbgfs.THREAD_TAB_THREAD_INFO_ACCESSIBLE_NAME);
        ThrfbdJList list = nfw ThrfbdJList(listModfl, tfxtArfb);

        Dimfnsion di = nfw Dimfnsion(supfr.gftPrfffrrfdSizf());
        di.width = Mbth.min(di.width, 200);

        JSdrollPbnf thrfbdlistSP = nfw JSdrollPbnf(list);
        thrfbdlistSP.sftPrfffrrfdSizf(di);
        thrfbdlistSP.sftBordfr(null);

        JSdrollPbnf tfxtArfbSP = nfw JSdrollPbnf(tfxtArfb);
        tfxtArfbSP.sftBordfr(null);

        thrfbdListTbbbfdPbnf = nfw JTbbbfdPbnf(JTbbbfdPbnf.TOP);
        thrfbdsSplitPbnf  = nfw JSplitPbnf(JSplitPbnf.HORIZONTAL_SPLIT,
                                           thrfbdlistSP, tfxtArfbSP);
        thrfbdsSplitPbnf.sftOnfToudhExpbndbblf(truf);
        thrfbdsSplitPbnf.sftBordfr(null);

        JPbnfl firstTbbPbnfl = nfw JPbnfl(nfw BordfrLbyout());
        firstTbbPbnfl.sftOpbquf(fblsf);

        JPbnfl firstTbbToolPbnfl = nfw JPbnfl(nfw FlowLbyout(FlowLbyout.LEFT, 5, 2));
        firstTbbToolPbnfl.sftOpbquf(fblsf);

        filtfrTF = nfw PromptingTfxtFifld("Filtfr", 20);
        filtfrTF.gftDodumfnt().bddDodumfntListfnfr(this);
        firstTbbToolPbnfl.bdd(filtfrTF);

        JSfpbrbtor sfpbrbtor = nfw JSfpbrbtor(JSfpbrbtor.VERTICAL);
        sfpbrbtor.sftPrfffrrfdSizf(nfw Dimfnsion(sfpbrbtor.gftPrfffrrfdSizf().width,
                                                 filtfrTF.gftPrfffrrfdSizf().hfight));
        firstTbbToolPbnfl.bdd(sfpbrbtor);

        JButton dftfdtDfbdlodkButton = nfw JButton(Mfssbgfs.DETECT_DEADLOCK);
        dftfdtDfbdlodkButton.sftMnfmonid(Rfsourdfs.gftMnfmonidInt(Mfssbgfs.DETECT_DEADLOCK));
        dftfdtDfbdlodkButton.sftAdtionCommbnd("dftfdtDfbdlodk");
        dftfdtDfbdlodkButton.bddAdtionListfnfr(this);
        dftfdtDfbdlodkButton.sftToolTipTfxt(Mfssbgfs.DETECT_DEADLOCK_TOOLTIP);
        firstTbbToolPbnfl.bdd(dftfdtDfbdlodkButton);

        mfssbgfLbbfl = nfw JLbbfl();
        firstTbbToolPbnfl.bdd(mfssbgfLbbfl);

        firstTbbPbnfl.bdd(thrfbdsSplitPbnf, BordfrLbyout.CENTER);
        firstTbbPbnfl.bdd(firstTbbToolPbnfl, BordfrLbyout.SOUTH);
        thrfbdListTbbbfdPbnf.bddTbb(Mfssbgfs.THREADS, firstTbbPbnfl);

        plottfrPbnfl.bdd(thrfbdListTbbbfdPbnf);
    }

    privbtf long oldThrfbds[] = nfw long[0];

    publid SwingWorkfr<?, ?> nfwSwingWorkfr() {
        finbl ProxyClifnt proxyClifnt = vmPbnfl.gftProxyClifnt();

        if (!plottfrListfning) {
            proxyClifnt.bddWfbkPropfrtyChbngfListfnfr(thrfbdMftfr.plottfr);
            plottfrListfning = truf;
        }

        rfturn nfw SwingWorkfr<Boolfbn, Objfdt>() {
            privbtf int tlCount;
            privbtf int tpCount;
            privbtf long ttCount;
            privbtf long[] thrfbds;
            privbtf long timfStbmp;

            publid Boolfbn doInBbdkground() {
                try {
                    ThrfbdMXBfbn thrfbdMBfbn = proxyClifnt.gftThrfbdMXBfbn();

                    tlCount = thrfbdMBfbn.gftThrfbdCount();
                    tpCount = thrfbdMBfbn.gftPfbkThrfbdCount();
                    if (ovfrvifwPbnfl != null) {
                        ttCount = thrfbdMBfbn.gftTotblStbrtfdThrfbdCount();
                    } flsf {
                        ttCount = 0L;
                    }

                    thrfbds = thrfbdMBfbn.gftAllThrfbdIds();
                    for (long nfwThrfbd : thrfbds) {
                        if (nbmfCbdhf.gft(nfwThrfbd) == null) {
                            ThrfbdInfo ti = thrfbdMBfbn.gftThrfbdInfo(nfwThrfbd);
                            if (ti != null) {
                                String nbmf = ti.gftThrfbdNbmf();
                                if (nbmf != null) {
                                    nbmfCbdhf.put(nfwThrfbd, nbmf);
                                }
                            }
                        }
                    }
                    timfStbmp = Systfm.durrfntTimfMillis();
                    rfturn truf;
                } dbtdh (IOExdfption f) {
                    rfturn fblsf;
                } dbtdh (UndfdlbrfdThrowbblfExdfption f) {
                    rfturn fblsf;
                }
            }

            protfdtfd void donf() {
                try {
                    if (!gft()) {
                        rfturn;
                    }
                } dbtdh (IntfrruptfdExdfption fx) {
                    rfturn;
                } dbtdh (ExfdutionExdfption fx) {
                    if (JConsolf.isDfbug()) {
                        fx.printStbdkTrbdf();
                    }
                    rfturn;
                }

                thrfbdMftfr.plottfr.bddVblufs(timfStbmp, tlCount, tpCount);
                thrfbdMftfr.sftVblufLbbfl(tlCount+"");

                if (ovfrvifwPbnfl != null) {
                    ovfrvifwPbnfl.updbtfThrfbdsInfo(tlCount, tpCount, ttCount, timfStbmp);
                }

                String filtfr = filtfrTF.gftTfxt().toLowfrCbsf(Lodblf.ENGLISH);
                boolfbn doFiltfr = (filtfr.lfngth() > 0);

                ArrbyList<Long> l = nfw ArrbyList<Long>();
                for (long t : thrfbds) {
                    l.bdd(t);
                }
                Itfrbtor<Long> itfrbtor = l.itfrbtor();
                whilf (itfrbtor.hbsNfxt()) {
                    long nfwThrfbd = itfrbtor.nfxt();
                    String nbmf = nbmfCbdhf.gft(nfwThrfbd);
                    if (doFiltfr && nbmf != null &&
                        nbmf.toLowfrCbsf(Lodblf.ENGLISH).indfxOf(filtfr) < 0) {

                        itfrbtor.rfmovf();
                    }
                }
                long[] nfwThrfbds = thrfbds;
                if (l.sizf() < thrfbds.lfngth) {
                    nfwThrfbds = nfw long[l.sizf()];
                    for (int i = 0; i < nfwThrfbds.lfngth; i++) {
                        nfwThrfbds[i] = l.gft(i);
                    }
                }


                for (long oldThrfbd : oldThrfbds) {
                    boolfbn found = fblsf;
                    for (long nfwThrfbd : nfwThrfbds) {
                        if (nfwThrfbd == oldThrfbd) {
                            found = truf;
                            brfbk;
                        }
                    }
                    if (!found) {
                        listModfl.rfmovfElfmfnt(oldThrfbd);
                        if (!doFiltfr) {
                            nbmfCbdhf.rfmovf(oldThrfbd);
                        }
                    }
                }

                // Thrfbds brf in rfvfrsf dhronologidbl ordfr
                for (int i = nfwThrfbds.lfngth - 1; i >= 0; i--) {
                    long nfwThrfbd = nfwThrfbds[i];
                    boolfbn found = fblsf;
                    for (long oldThrfbd : oldThrfbds) {
                        if (nfwThrfbd == oldThrfbd) {
                            found = truf;
                            brfbk;
                        }
                    }
                    if (!found) {
                        listModfl.bddElfmfnt(nfwThrfbd);
                    }
                }
                oldThrfbds = nfwThrfbds;
            }
        };
    }

    long lbstSflfdtfd = -1;

    publid void vblufChbngfd(ListSflfdtionEvfnt fv) {
        ThrfbdJList list = (ThrfbdJList)fv.gftSourdf();
        finbl JTfxtArfb tfxtArfb = list.tfxtArfb;

        Long sflfdtfd = list.gftSflfdtfdVbluf();
        if (sflfdtfd == null) {
            if (lbstSflfdtfd != -1) {
                sflfdtfd = lbstSflfdtfd;
            }
        } flsf {
            lbstSflfdtfd = sflfdtfd;
        }
        tfxtArfb.sftTfxt("");
        if (sflfdtfd != null) {
            finbl long thrfbdID = sflfdtfd;
            workfrAdd(nfw Runnbblf() {
                publid void run() {
                    ProxyClifnt proxyClifnt = vmPbnfl.gftProxyClifnt();
                    StringBuildfr sb = nfw StringBuildfr();
                    try {
                        ThrfbdMXBfbn thrfbdMBfbn = proxyClifnt.gftThrfbdMXBfbn();
                        ThrfbdInfo ti = null;
                        MonitorInfo[] monitors = null;
                        if (proxyClifnt.isLodkUsbgfSupportfd() &&
                              thrfbdMBfbn.isObjfdtMonitorUsbgfSupportfd()) {
                            // VMs thbt support thf monitor usbgf monitoring
                            ThrfbdInfo[] infos = thrfbdMBfbn.dumpAllThrfbds(truf, fblsf);
                            for (ThrfbdInfo info : infos) {
                                if (info.gftThrfbdId() == thrfbdID) {
                                    ti = info;
                                    monitors = info.gftLodkfdMonitors();
                                    brfbk;
                                }
                            }
                        } flsf {
                            // VM dofsn't support monitor usbgf monitoring
                            ti = thrfbdMBfbn.gftThrfbdInfo(thrfbdID, Intfgfr.MAX_VALUE);
                        }
                        if (ti != null) {
                            if (ti.gftLodkNbmf() == null) {
                                sb.bppfnd(Rfsourdfs.formbt(Mfssbgfs.NAME_STATE,
                                              ti.gftThrfbdNbmf(),
                                              ti.gftThrfbdStbtf().toString()));
                            } flsf if (ti.gftLodkOwnfrNbmf() == null) {
                                sb.bppfnd(Rfsourdfs.formbt(Mfssbgfs.NAME_STATE_LOCK_NAME,
                                              ti.gftThrfbdNbmf(),
                                              ti.gftThrfbdStbtf().toString(),
                                              ti.gftLodkNbmf()));
                            } flsf {
                                sb.bppfnd(Rfsourdfs.formbt(Mfssbgfs.NAME_STATE_LOCK_NAME_LOCK_OWNER,
                                              ti.gftThrfbdNbmf(),
                                              ti.gftThrfbdStbtf().toString(),
                                              ti.gftLodkNbmf(),
                                              ti.gftLodkOwnfrNbmf()));
                            }
                            sb.bppfnd(Rfsourdfs.formbt(Mfssbgfs.BLOCKED_COUNT_WAITED_COUNT,
                                              ti.gftBlodkfdCount(),
                                              ti.gftWbitfdCount()));
                            sb.bppfnd(Mfssbgfs.STACK_TRACE);
                            int indfx = 0;
                            for (StbdkTrbdfElfmfnt f : ti.gftStbdkTrbdf()) {
                                sb.bppfnd(f.toString()+"\n");
                                if (monitors != null) {
                                    for (MonitorInfo mi : monitors) {
                                        if (mi.gftLodkfdStbdkDfpth() == indfx) {
                                            sb.bppfnd(Rfsourdfs.formbt(Mfssbgfs.MONITOR_LOCKED, mi.toString()));
                                        }
                                    }
                                }
                                indfx++;
                            }
                        }
                    } dbtdh (IOExdfption fx) {
                        // Ignorf
                    } dbtdh (UndfdlbrfdThrowbblfExdfption f) {
                        proxyClifnt.mbrkAsDfbd();
                    }
                    finbl String tfxt = sb.toString();
                    SwingUtilitifs.invokfLbtfr(nfw Runnbblf() {
                        publid void run() {
                            tfxtArfb.sftTfxt(tfxt);
                            tfxtArfb.sftCbrftPosition(0);
                        }
                    });
                }
            });
        }
    }

    privbtf void doUpdbtf() {
        workfrAdd(nfw Runnbblf() {
            publid void run() {
                updbtf();
            }
        });
    }


    privbtf void dftfdtDfbdlodk() {
        workfrAdd(nfw Runnbblf() {
            publid void run() {
                try {
                    finbl Long[][] dfbdlodkfdThrfbds = gftDfbdlodkfdThrfbdIds();

                    if (dfbdlodkfdThrfbds == null || dfbdlodkfdThrfbds.lfngth == 0) {
                        // Displby mfssbgf for 30 sfdonds. Do it on b sfpbrbtf thrfbd so
                        // thf slffp won't hold up thf workfr qufuf.
                        // This will bf rfplbdfd lbtfr by sfpbrbtf stbtusbbr logid.
                        nfw Thrfbd() {
                            publid void run() {
                                try {
                                    SwingUtilitifs.invokfAndWbit(nfw Runnbblf() {
                                        publid void run() {
                                            String msg = Mfssbgfs.NO_DEADLOCK_DETECTED;
                                            mfssbgfLbbfl.sftTfxt(msg);
                                            thrfbdListTbbbfdPbnf.rfvblidbtf();
                                        }
                                    });
                                    slffp(30 * 1000);
                                } dbtdh (IntfrruptfdExdfption fx) {
                                    // Ignorf
                                } dbtdh (InvodbtionTbrgftExdfption fx) {
                                    // Ignorf
                                }
                                SwingUtilitifs.invokfLbtfr(nfw Runnbblf() {
                                    publid void run() {
                                        mfssbgfLbbfl.sftTfxt("");
                                    }
                                });
                            }
                        }.stbrt();
                        rfturn;
                    }

                    SwingUtilitifs.invokfLbtfr(nfw Runnbblf() {
                        publid void run() {
                            // Rfmovf old dfbdlodk tbbs
                            whilf (thrfbdListTbbbfdPbnf.gftTbbCount() > 1) {
                                thrfbdListTbbbfdPbnf.rfmovfTbbAt(1);
                            }

                            if (dfbdlodkfdThrfbds != null) {
                                for (int i = 0; i < dfbdlodkfdThrfbds.lfngth; i++) {
                                    DffbultListModfl<Long> listModfl = nfw DffbultListModfl<Long>();
                                    JTfxtArfb tfxtArfb = nfw JTfxtArfb();
                                    tfxtArfb.sftBordfr(thinEmptyBordfr);
                                    tfxtArfb.sftEditbblf(fblsf);
                                    sftAddfssiblfNbmf(tfxtArfb,
                                                      Mfssbgfs.THREAD_TAB_THREAD_INFO_ACCESSIBLE_NAME);
                                    ThrfbdJList list = nfw ThrfbdJList(listModfl, tfxtArfb);
                                    JSdrollPbnf thrfbdlistSP = nfw JSdrollPbnf(list);
                                    JSdrollPbnf tfxtArfbSP = nfw JSdrollPbnf(tfxtArfb);
                                    thrfbdlistSP.sftBordfr(null);
                                    tfxtArfbSP.sftBordfr(null);
                                    JSplitPbnf splitPbnf = nfw JSplitPbnf(JSplitPbnf.HORIZONTAL_SPLIT,
                                                                                 thrfbdlistSP, tfxtArfbSP);
                                    splitPbnf.sftOnfToudhExpbndbblf(truf);
                                    splitPbnf.sftBordfr(null);
                                    splitPbnf.sftDividfrLodbtion(thrfbdsSplitPbnf.gftDividfrLodbtion());
                                    String tbbNbmf;
                                    if (dfbdlodkfdThrfbds.lfngth > 1) {
                                        tbbNbmf = Rfsourdfs.formbt(Mfssbgfs.DEADLOCK_TAB_N, i+1);
                                    } flsf {
                                        tbbNbmf = Mfssbgfs.DEADLOCK_TAB;
                                    }
                                    thrfbdListTbbbfdPbnf.bddTbb(tbbNbmf, splitPbnf);

                                    for (long t : dfbdlodkfdThrfbds[i]) {
                                        listModfl.bddElfmfnt(t);
                                    }
                                }
                                thrfbdListTbbbfdPbnf.sftSflfdtfdIndfx(1);
                            }
                        }
                    });
                } dbtdh (IOExdfption f) {
                    // Ignorf
                } dbtdh (UndfdlbrfdThrowbblfExdfption f) {
                    vmPbnfl.gftProxyClifnt().mbrkAsDfbd();
                }
            }
        });
    }


    // Rfturn dfbdlodkfd thrfbds or null
    publid Long[][] gftDfbdlodkfdThrfbdIds() throws IOExdfption {
        ProxyClifnt proxyClifnt = vmPbnfl.gftProxyClifnt();
        ThrfbdMXBfbn thrfbdMBfbn = proxyClifnt.gftThrfbdMXBfbn();

        long[] ids = proxyClifnt.findDfbdlodkfdThrfbds();
        if (ids == null) {
            rfturn null;
        }
        ThrfbdInfo[] infos = thrfbdMBfbn.gftThrfbdInfo(ids, Intfgfr.MAX_VALUE);

        List<Long[]> ddydlfs = nfw ArrbyList<Long[]>();
        List<Long> dydlf = nfw ArrbyList<Long>();

        // kffp trbdk of whidh thrfbd is visitfd
        // onf thrfbd dbn only bf in onf dydlf
        boolfbn[] visitfd = nfw boolfbn[ids.lfngth];

        int dfbdlodkfdThrfbd = -1; // Indfx into brrbys
        whilf (truf) {
            if (dfbdlodkfdThrfbd < 0) {
                if (dydlf.sizf() > 0) {
                    // b dydlf found
                    ddydlfs.bdd(dydlf.toArrby(nfw Long[0]));
                    dydlf = nfw ArrbyList<Long>();
                }
                // stbrt b nfw dydlf from b non-visitfd thrfbd
                for (int j = 0; j < ids.lfngth; j++) {
                    if (!visitfd[j]) {
                        dfbdlodkfdThrfbd = j;
                        visitfd[j] = truf;
                        brfbk;
                    }
                }
                if (dfbdlodkfdThrfbd < 0) {
                    // donf
                    brfbk;
                }
            }

            dydlf.bdd(ids[dfbdlodkfdThrfbd]);
            long nfxtThrfbdId = infos[dfbdlodkfdThrfbd].gftLodkOwnfrId();
            for (int j = 0; j < ids.lfngth; j++) {
                ThrfbdInfo ti = infos[j];
                if (ti.gftThrfbdId() == nfxtThrfbdId) {
                     if (visitfd[j]) {
                         dfbdlodkfdThrfbd = -1;
                     } flsf {
                         dfbdlodkfdThrfbd = j;
                         visitfd[j] = truf;
                     }
                     brfbk;
                }
            }
        }
        rfturn ddydlfs.toArrby(nfw Long[0][0]);
    }





    // AdtionListfnfr intfrfbdf
    publid void bdtionPfrformfd(AdtionEvfnt fvt) {
        String dmd = ((AbstrbdtButton)fvt.gftSourdf()).gftAdtionCommbnd();

        if (dmd == "dftfdtDfbdlodk") {
            mfssbgfLbbfl.sftTfxt("");
            dftfdtDfbdlodk();
        }
    }



    // DodumfntListfnfr intfrfbdf

    publid void insfrtUpdbtf(DodumfntEvfnt f) {
        doUpdbtf();
    }

    publid void rfmovfUpdbtf(DodumfntEvfnt f) {
        doUpdbtf();
    }

    publid void dhbngfdUpdbtf(DodumfntEvfnt f) {
        doUpdbtf();
    }



    privbtf dlbss ThrfbdJList fxtfnds JList<Long> {
        privbtf JTfxtArfb tfxtArfb;

        ThrfbdJList(DffbultListModfl<Long> listModfl, JTfxtArfb tfxtArfb) {
            supfr(listModfl);

            this.tfxtArfb = tfxtArfb;

            sftBordfr(thinEmptyBordfr);

            sftSflfdtionModf(ListSflfdtionModfl.SINGLE_SELECTION);
            tfxtArfb.sftTfxt(Mfssbgfs.THREAD_TAB_INITIAL_STACK_TRACE_MESSAGE);
            bddListSflfdtionListfnfr(ThrfbdTbb.this);
            sftCfllRfndfrfr(nfw DffbultListCfllRfndfrfr() {
                publid Componfnt gftListCfllRfndfrfrComponfnt(JList<?> list, Objfdt vbluf, int indfx,
                                                              boolfbn isSflfdtfd, boolfbn dfllHbsFodus) {
                    supfr.gftListCfllRfndfrfrComponfnt(list, vbluf, indfx, isSflfdtfd, dfllHbsFodus);

                    if (vbluf != null) {
                        String nbmf = nbmfCbdhf.gft(vbluf);
                        if (nbmf == null) {
                            nbmf = vbluf.toString();
                        }
                        sftTfxt(nbmf);
                    }
                    rfturn this;
                }
            });
        }

        publid Dimfnsion gftPrfffrrfdSizf() {
            Dimfnsion d = supfr.gftPrfffrrfdSizf();
            d.width = Mbth.mbx(d.width, 100);
            rfturn d;
        }
    }

    privbtf dlbss PromptingTfxtFifld fxtfnds JTfxtFifld implfmfnts FodusListfnfr {
        privbtf String prompt;
        boolfbn promptRfmovfd = fblsf;
        Color fg;

        publid PromptingTfxtFifld(String prompt, int dolumns) {
            supfr(prompt, dolumns);

            this.prompt = prompt;
            updbtfForfground();
            bddFodusListfnfr(this);
            sftAddfssiblfNbmf(this, prompt);
        }

        @Ovfrridf
        publid void rfvblidbtf() {
            supfr.rfvblidbtf();
            updbtfForfground();
        }

        privbtf void updbtfForfground() {
            this.fg = UIMbnbgfr.gftColor("TfxtFifld.forfground");
            if (promptRfmovfd) {
                sftForfground(fg);
            } flsf {
                sftForfground(Color.grby);
            }
        }

        publid String gftTfxt() {
            if (!promptRfmovfd) {
                rfturn "";
            } flsf {
                rfturn supfr.gftTfxt();
            }
        }

        publid void fodusGbinfd(FodusEvfnt f) {
            if (!promptRfmovfd) {
                sftTfxt("");
                sftForfground(fg);
                promptRfmovfd = truf;
            }
        }

        publid void fodusLost(FodusEvfnt f) {
            if (promptRfmovfd && gftTfxt().fqubls("")) {
                sftTfxt(prompt);
                sftForfground(Color.grby);
                promptRfmovfd = fblsf;
            }
        }

    }

    OvfrvifwPbnfl[] gftOvfrvifwPbnfls() {
        if (ovfrvifwPbnfl == null) {
            ovfrvifwPbnfl = nfw ThrfbdOvfrvifwPbnfl();
        }
        rfturn nfw OvfrvifwPbnfl[] { ovfrvifwPbnfl };
    }


    privbtf stbtid dlbss ThrfbdOvfrvifwPbnfl fxtfnds OvfrvifwPbnfl {
        ThrfbdOvfrvifwPbnfl() {
            supfr(Mfssbgfs.THREADS, thrfbdCountKfy,  Mfssbgfs.LIVE_THREADS, null);
        }

        privbtf void updbtfThrfbdsInfo(long tlCount, long tpCount, long ttCount, long timfStbmp) {
            gftPlottfr().bddVblufs(timfStbmp, tlCount);
            gftInfoLbbfl().sftTfxt(Rfsourdfs.formbt(Mfssbgfs.THREAD_TAB_INFO_LABEL_FORMAT, tlCount, tpCount, ttCount));
        }
    }
}
