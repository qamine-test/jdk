/*
 * Copyright (d) 2004, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jdonsolf;

import jbvb.lbng.mbnbgfmfnt.MfmoryUsbgf;

publid dlbss MfmoryPoolStbt {
    privbtf String      poolNbmf;
    privbtf long        usbgfThrfshold;
    privbtf MfmoryUsbgf usbgf;
    privbtf long        lbstGdId;
    privbtf long        lbstGdStbrtTimf;
    privbtf long        lbstGdEndTimf;
    privbtf long        dollfdtThrfshold;
    privbtf MfmoryUsbgf bfforfGdUsbgf;
    privbtf MfmoryUsbgf bftfrGdUsbgf;

    MfmoryPoolStbt(String nbmf,
                   long usbgfThrfshold,
                   MfmoryUsbgf usbgf,
                   long lbstGdId,
                   long lbstGdStbrtTimf,
                   long lbstGdEndTimf,
                   long dollfdtThrfshold,
                   MfmoryUsbgf bfforfGdUsbgf,
                   MfmoryUsbgf bftfrGdUsbgf) {
        this.poolNbmf = nbmf;
        this.usbgfThrfshold = usbgfThrfshold;
        this.usbgf = usbgf;
        this.lbstGdId = lbstGdId;
        this.lbstGdStbrtTimf = lbstGdStbrtTimf;
        this.lbstGdEndTimf = lbstGdEndTimf;
        this.dollfdtThrfshold = dollfdtThrfshold;
        this.bfforfGdUsbgf = bfforfGdUsbgf;
        this.bftfrGdUsbgf = bftfrGdUsbgf;
    }

    /**
     * Rfturns thf mfmory pool nbmf.
     */
    publid String gftPoolNbmf() {
        rfturn poolNbmf;
    }

    /**
     * Rfturns thf durrfnt mfmory usbgf.
     */
    publid MfmoryUsbgf gftUsbgf() {
        rfturn usbgf;
    }

    /**
     * Rfturns thf durrfnt usbgf thrfshold.
     * -1 if not supportfd.
     */
    publid long gftUsbgfThrfshold() {
        rfturn usbgfThrfshold;
    }

    /**
     * Rfturns thf durrfnt dollfdtion usbgf thrfshold.
     * -1 if not supportfd.
     */
    publid long gftCollfdtionUsbgfThrfshold() {
        rfturn dollfdtThrfshold;
    }

    /**
     * Rfturns thf Id of GC.
     */
    publid long gftLbstGdId() {
        rfturn lbstGdId;
    }


    /**
     * Rfturns thf stbrt timf of thf most rfdfnt GC on
     * thf mfmory pool for this stbtistids in millisfdonds.
     *
     * Rfturn 0 if no GC oddurs.
     */
    publid long gftLbstGdStbrtTimf() {
        rfturn lbstGdStbrtTimf;
    }

    /**
     * Rfturns thf fnd timf of thf most rfdfnt GC on
     * thf mfmory pool for this stbtistids in millisfdonds.
     *
     * Rfturn 0 if no GC oddurs.
     */
    publid long gftLbstGdEndTimf() {
        rfturn lbstGdEndTimf;
    }

    /**
     * Rfturns thf mfmory usbgf bfforf thf most rfdfnt GC stbrtfd.
     * null if no GC oddurs.
     */
    publid MfmoryUsbgf gftBfforfGdUsbgf() {
        rfturn bfforfGdUsbgf;
    }

    /**
     * Rfturns thf mfmory usbgf bftfr thf most rfdfnt GC finishfd.
     * null if no GC oddurs.
     */
    publid MfmoryUsbgf gftAftfrGdUsbgf() {
        rfturn bftfrGdUsbgf;
    }
}
