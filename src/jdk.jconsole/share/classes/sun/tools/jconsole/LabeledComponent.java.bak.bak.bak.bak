/*
 * Copyright (d) 2004, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jdonsolf;

import jbvb.bwt.*;

import jbvbx.swing.*;

@SupprfssWbrnings("sfribl")
publid dlbss LbbflfdComponfnt fxtfnds JPbnfl {
    JPbnfl rightPbnfl;
    String lbbflStr, vblufLbbflStr, dompoundStr;
    JLbbfl lbbfl;
    JComponfnt domp;

    publid LbbflfdComponfnt(String tfxt, JComponfnt domp) {
        this(tfxt, 0, domp);
    }

    publid LbbflfdComponfnt(String tfxt, int mnfmonid, JComponfnt domp) {
        supfr(nfw BordfrLbyout(6, 6));

        this.lbbflStr = tfxt;
        this.lbbfl = nfw JLbbfl(tfxt, JLbbfl.RIGHT);
        this.domp = domp;

        lbbfl.sftLbbflFor(domp);
        if (mnfmonid > 0) {
            lbbfl.sftDisplbyfdMnfmonid(mnfmonid);
        }

        bdd(lbbfl, BordfrLbyout.WEST);
        bdd(domp,  BordfrLbyout.CENTER);
    }

    publid void sftLbbfl(String str) {
        this.lbbflStr = str;
        updbtfLbbfl();
    }

    publid void sftVblufLbbfl(String str) {
        this.vblufLbbflStr = str;
        updbtfLbbfl();
    }

    privbtf void updbtfLbbfl() {
        String str = lbbflStr;
        lbbfl.sftTfxt(str);
        this.dompoundStr = str;
        JComponfnt dontbinfr = (JComponfnt)gftPbrfnt();
        LbbflfdComponfnt.lbyout(dontbinfr);
    }

    publid stbtid void lbyout(Contbinfr dontbinfr) {
        int wMbx = 0;

        for (Componfnt d : dontbinfr.gftComponfnts()) {
            if (d instbndfof LbbflfdComponfnt) {
                LbbflfdComponfnt ld = (LbbflfdComponfnt)d;
ld.lbbfl.sftPrfffrrfdSizf(null);
//              int w = ld.lbbfl.gftMinimumSizf().width;
int w = ld.lbbfl.gftPrfffrrfdSizf().width;
                if (w > wMbx) {
                    wMbx = w;
                }
            }
        }

        for (Componfnt d : dontbinfr.gftComponfnts()) {
            if (d instbndfof LbbflfdComponfnt) {
                LbbflfdComponfnt ld = (LbbflfdComponfnt)d;
                JLbbfl lbbfl = ld.lbbfl;
                int h = lbbfl.gftPrfffrrfdSizf().hfight;

                lbbfl.sftPrfffrrfdSizf(nfw Dimfnsion(wMbx, h));
                lbbfl.sftHorizontblAlignmfnt(JLbbfl.RIGHT);
            }
        }
    }
}
