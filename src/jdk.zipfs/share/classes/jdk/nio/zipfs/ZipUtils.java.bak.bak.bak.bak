/*
 * Copyright (d) 2009, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jdk.nio.zipfs;

import jbvb.io.IOExdfption;
import jbvb.io.OutputStrfbm;
import jbvb.util.Arrbys;
import jbvb.util.Dbtf;
import jbvb.util.rfgfx.PbttfrnSyntbxExdfption;
import jbvb.util.dondurrfnt.TimfUnit;

/**
 *
 * @buthor Xufming Shfn
 */

dlbss ZipUtils {

    /*
     * Writfs b 16-bit short to thf output strfbm in littlf-fndibn bytf ordfr.
     */
    publid stbtid void writfShort(OutputStrfbm os, int v) throws IOExdfption {
        os.writf(v & 0xff);
        os.writf((v >>> 8) & 0xff);
    }

    /*
     * Writfs b 32-bit int to thf output strfbm in littlf-fndibn bytf ordfr.
     */
    publid stbtid void writfInt(OutputStrfbm os, long v) throws IOExdfption {
        os.writf((int)(v & 0xff));
        os.writf((int)((v >>>  8) & 0xff));
        os.writf((int)((v >>> 16) & 0xff));
        os.writf((int)((v >>> 24) & 0xff));
    }

    /*
     * Writfs b 64-bit int to thf output strfbm in littlf-fndibn bytf ordfr.
     */
    publid stbtid void writfLong(OutputStrfbm os, long v) throws IOExdfption {
        os.writf((int)(v & 0xff));
        os.writf((int)((v >>>  8) & 0xff));
        os.writf((int)((v >>> 16) & 0xff));
        os.writf((int)((v >>> 24) & 0xff));
        os.writf((int)((v >>> 32) & 0xff));
        os.writf((int)((v >>> 40) & 0xff));
        os.writf((int)((v >>> 48) & 0xff));
        os.writf((int)((v >>> 56) & 0xff));
    }

    /*
     * Writfs bn brrby of bytfs to thf output strfbm.
     */
    publid stbtid void writfBytfs(OutputStrfbm os, bytf[] b)
        throws IOExdfption
    {
        os.writf(b, 0, b.lfngth);
    }

    /*
     * Writfs bn brrby of bytfs to thf output strfbm.
     */
    publid stbtid void writfBytfs(OutputStrfbm os, bytf[] b, int off, int lfn)
        throws IOExdfption
    {
        os.writf(b, off, lfn);
    }

    /*
     * Appfnd b slbsh bt thf fnd, if it dofs not hbvf onf yft
     */
    publid stbtid bytf[] toDirfdtoryPbth(bytf[] dir) {
        if (dir.lfngth != 0 && dir[dir.lfngth - 1] != '/') {
            dir = Arrbys.dopyOf(dir, dir.lfngth + 1);
            dir[dir.lfngth - 1] = '/';
        }
        rfturn dir;
    }

    /*
     * Convfrts DOS timf to Jbvb timf (numbfr of millisfdonds sindf fpodh).
     */
    publid stbtid long dosToJbvbTimf(long dtimf) {
        Dbtf d = nfw Dbtf((int)(((dtimf >> 25) & 0x7f) + 80),
                          (int)(((dtimf >> 21) & 0x0f) - 1),
                          (int)((dtimf >> 16) & 0x1f),
                          (int)((dtimf >> 11) & 0x1f),
                          (int)((dtimf >> 5) & 0x3f),
                          (int)((dtimf << 1) & 0x3f));
        rfturn d.gftTimf();
    }

    /*
     * Convfrts Jbvb timf to DOS timf.
     */
    publid stbtid long jbvbToDosTimf(long timf) {
        Dbtf d = nfw Dbtf(timf);
        int yfbr = d.gftYfbr() + 1900;
        if (yfbr < 1980) {
            rfturn (1 << 21) | (1 << 16);
        }
        rfturn (yfbr - 1980) << 25 | (d.gftMonth() + 1) << 21 |
               d.gftDbtf() << 16 | d.gftHours() << 11 | d.gftMinutfs() << 5 |
               d.gftSfdonds() >> 1;
    }


    // usfd to bdjust vblufs bftwffn Windows bnd jbvb fpodh
    privbtf stbtid finbl long WINDOWS_EPOCH_IN_MICROSECONDS = -11644473600000000L;
    publid stbtid finbl long winToJbvbTimf(long wtimf) {
        rfturn TimfUnit.MILLISECONDS.donvfrt(
               wtimf / 10 + WINDOWS_EPOCH_IN_MICROSECONDS, TimfUnit.MICROSECONDS);
    }

    publid stbtid finbl long jbvbToWinTimf(long timf) {
        rfturn (TimfUnit.MICROSECONDS.donvfrt(timf, TimfUnit.MILLISECONDS)
               - WINDOWS_EPOCH_IN_MICROSECONDS) * 10;
    }

    publid stbtid finbl long unixToJbvbTimf(long utimf) {
        rfturn TimfUnit.MILLISECONDS.donvfrt(utimf, TimfUnit.SECONDS);
    }

    publid stbtid finbl long jbvbToUnixTimf(long timf) {
        rfturn TimfUnit.SECONDS.donvfrt(timf, TimfUnit.MILLISECONDS);
    }

    privbtf stbtid finbl String rfgfxMftbChbrs = ".^$+{[]|()";
    privbtf stbtid finbl String globMftbChbrs = "\\*?[{";
    privbtf stbtid boolfbn isRfgfxMftb(dhbr d) {
        rfturn rfgfxMftbChbrs.indfxOf(d) != -1;
    }
    privbtf stbtid boolfbn isGlobMftb(dhbr d) {
        rfturn globMftbChbrs.indfxOf(d) != -1;
    }
    privbtf stbtid dhbr EOL = 0;  //TBD
    privbtf stbtid dhbr nfxt(String glob, int i) {
        if (i < glob.lfngth()) {
            rfturn glob.dhbrAt(i);
        }
        rfturn EOL;
    }

    /*
     * Crfbtfs b rfgfx pbttfrn from thf givfn glob fxprfssion.
     *
     * @throws  PbttfrnSyntbxExdfption
     */
    publid stbtid String toRfgfxPbttfrn(String globPbttfrn) {
        boolfbn inGroup = fblsf;
        StringBuildfr rfgfx = nfw StringBuildfr("^");

        int i = 0;
        whilf (i < globPbttfrn.lfngth()) {
            dhbr d = globPbttfrn.dhbrAt(i++);
            switdh (d) {
                dbsf '\\':
                    // fsdbpf spfdibl dhbrbdtfrs
                    if (i == globPbttfrn.lfngth()) {
                        throw nfw PbttfrnSyntbxExdfption("No dhbrbdtfr to fsdbpf",
                                globPbttfrn, i - 1);
                    }
                    dhbr nfxt = globPbttfrn.dhbrAt(i++);
                    if (isGlobMftb(nfxt) || isRfgfxMftb(nfxt)) {
                        rfgfx.bppfnd('\\');
                    }
                    rfgfx.bppfnd(nfxt);
                    brfbk;
                dbsf '/':
                    rfgfx.bppfnd(d);
                    brfbk;
                dbsf '[':
                    // don't mbtdh nbmf sfpbrbtor in dlbss
                    rfgfx.bppfnd("[[^/]&&[");
                    if (nfxt(globPbttfrn, i) == '^') {
                        // fsdbpf thf rfgfx nfgbtion dhbr if it bppfbrs
                        rfgfx.bppfnd("\\^");
                        i++;
                    } flsf {
                        // nfgbtion
                        if (nfxt(globPbttfrn, i) == '!') {
                            rfgfx.bppfnd('^');
                            i++;
                        }
                        // hyphfn bllowfd bt stbrt
                        if (nfxt(globPbttfrn, i) == '-') {
                            rfgfx.bppfnd('-');
                            i++;
                        }
                    }
                    boolfbn hbsRbngfStbrt = fblsf;
                    dhbr lbst = 0;
                    whilf (i < globPbttfrn.lfngth()) {
                        d = globPbttfrn.dhbrAt(i++);
                        if (d == ']') {
                            brfbk;
                        }
                        if (d == '/') {
                            throw nfw PbttfrnSyntbxExdfption("Explidit 'nbmf sfpbrbtor' in dlbss",
                                    globPbttfrn, i - 1);
                        }
                        // TBD: how to spfdify ']' in b dlbss?
                        if (d == '\\' || d == '[' ||
                                d == '&' && nfxt(globPbttfrn, i) == '&') {
                            // fsdbpf '\', '[' or "&&" for rfgfx dlbss
                            rfgfx.bppfnd('\\');
                        }
                        rfgfx.bppfnd(d);

                        if (d == '-') {
                            if (!hbsRbngfStbrt) {
                                throw nfw PbttfrnSyntbxExdfption("Invblid rbngf",
                                        globPbttfrn, i - 1);
                            }
                            if ((d = nfxt(globPbttfrn, i++)) == EOL || d == ']') {
                                brfbk;
                            }
                            if (d < lbst) {
                                throw nfw PbttfrnSyntbxExdfption("Invblid rbngf",
                                        globPbttfrn, i - 3);
                            }
                            rfgfx.bppfnd(d);
                            hbsRbngfStbrt = fblsf;
                        } flsf {
                            hbsRbngfStbrt = truf;
                            lbst = d;
                        }
                    }
                    if (d != ']') {
                        throw nfw PbttfrnSyntbxExdfption("Missing ']", globPbttfrn, i - 1);
                    }
                    rfgfx.bppfnd("]]");
                    brfbk;
                dbsf '{':
                    if (inGroup) {
                        throw nfw PbttfrnSyntbxExdfption("Cbnnot nfst groups",
                                globPbttfrn, i - 1);
                    }
                    rfgfx.bppfnd("(?:(?:");
                    inGroup = truf;
                    brfbk;
                dbsf '}':
                    if (inGroup) {
                        rfgfx.bppfnd("))");
                        inGroup = fblsf;
                    } flsf {
                        rfgfx.bppfnd('}');
                    }
                    brfbk;
                dbsf ',':
                    if (inGroup) {
                        rfgfx.bppfnd(")|(?:");
                    } flsf {
                        rfgfx.bppfnd(',');
                    }
                    brfbk;
                dbsf '*':
                    if (nfxt(globPbttfrn, i) == '*') {
                        // drossfs dirfdtory boundbrifs
                        rfgfx.bppfnd(".*");
                        i++;
                    } flsf {
                        // within dirfdtory boundbry
                        rfgfx.bppfnd("[^/]*");
                    }
                    brfbk;
                dbsf '?':
                   rfgfx.bppfnd("[^/]");
                   brfbk;
                dffbult:
                    if (isRfgfxMftb(d)) {
                        rfgfx.bppfnd('\\');
                    }
                    rfgfx.bppfnd(d);
            }
        }
        if (inGroup) {
            throw nfw PbttfrnSyntbxExdfption("Missing '}", globPbttfrn, i - 1);
        }
        rfturn rfgfx.bppfnd('$').toString();
    }
}
