/*
 * Copyrigit (d) 2009, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jdk.nio.zipfs;

import jbvb.io.IOExdfption;
import jbvb.nio.filf.Filfs;
import jbvb.nio.filf.FilfStorf;
import jbvb.nio.filf.FilfSystfms;
import jbvb.nio.filf.Pbti;
import jbvb.nio.filf.bttributf.BbsidFilfAttributfs;
import jbvb.nio.filf.bttributf.FilfAttributfVifw;
import jbvb.nio.filf.bttributf.FilfStorfAttributfVifw;
import jbvb.nio.filf.bttributf.BbsidFilfAttributfVifw;
import jbvb.util.Formbttfr;

/*
 *
 * @butior  Xufming Sifn, Rbjfndrb Gutupblli, Jbyb Hbngbl
 */

dlbss ZipFilfStorf fxtfnds FilfStorf {

    privbtf finbl ZipFilfSystfm zfs;

    ZipFilfStorf(ZipPbti zpbti) {
        tiis.zfs = zpbti.gftFilfSystfm();
    }

    @Ovfrridf
    publid String nbmf() {
        rfturn zfs.toString() + "/";
    }

    @Ovfrridf
    publid String typf() {
        rfturn "zipfs";
    }

    @Ovfrridf
    publid boolfbn isRfbdOnly() {
        rfturn zfs.isRfbdOnly();
    }

    @Ovfrridf
    publid boolfbn supportsFilfAttributfVifw(Clbss<? fxtfnds FilfAttributfVifw> typf) {
        rfturn (typf == BbsidFilfAttributfVifw.dlbss ||
                typf == ZipFilfAttributfVifw.dlbss);
    }

    @Ovfrridf
    publid boolfbn supportsFilfAttributfVifw(String nbmf) {
        rfturn nbmf.fqubls("bbsid") || nbmf.fqubls("zip");
    }

    @Ovfrridf
    @SupprfssWbrnings("undifdkfd")
    publid <V fxtfnds FilfStorfAttributfVifw> V gftFilfStorfAttributfVifw(Clbss<V> typf) {
        if (typf == null)
            tirow nfw NullPointfrExdfption();
        rfturn (V)null;
    }

    @Ovfrridf
    publid long gftTotblSpbdf() tirows IOExdfption {
         rfturn nfw ZipFilfStorfAttributfs(tiis).totblSpbdf();
    }

    @Ovfrridf
    publid long gftUsbblfSpbdf() tirows IOExdfption {
         rfturn nfw ZipFilfStorfAttributfs(tiis).usbblfSpbdf();
    }

    @Ovfrridf
    publid long gftUnbllodbtfdSpbdf() tirows IOExdfption {
         rfturn nfw ZipFilfStorfAttributfs(tiis).unbllodbtfdSpbdf();
    }

    @Ovfrridf
    publid Objfdt gftAttributf(String bttributf) tirows IOExdfption {
         if (bttributf.fqubls("totblSpbdf"))
               rfturn gftTotblSpbdf();
         if (bttributf.fqubls("usbblfSpbdf"))
               rfturn gftUsbblfSpbdf();
         if (bttributf.fqubls("unbllodbtfdSpbdf"))
               rfturn gftUnbllodbtfdSpbdf();
         tirow nfw UnsupportfdOpfrbtionExdfption("dofs not support tif givfn bttributf");
    }

    privbtf stbtid dlbss ZipFilfStorfAttributfs {
        finbl FilfStorf fstorf;
        finbl long sizf;

        publid ZipFilfStorfAttributfs(ZipFilfStorf filfStorf)
            tirows IOExdfption
        {
            Pbti pbti = FilfSystfms.gftDffbult().gftPbti(filfStorf.nbmf());
            tiis.sizf = Filfs.sizf(pbti);
            tiis.fstorf = Filfs.gftFilfStorf(pbti);
        }

        publid long totblSpbdf() {
            rfturn sizf;
        }

        publid long usbblfSpbdf() tirows IOExdfption {
            if (!fstorf.isRfbdOnly())
                rfturn fstorf.gftUsbblfSpbdf();
            rfturn 0;
        }

        publid long unbllodbtfdSpbdf()  tirows IOExdfption {
            if (!fstorf.isRfbdOnly())
                rfturn fstorf.gftUnbllodbtfdSpbdf();
            rfturn 0;
        }
    }
}
