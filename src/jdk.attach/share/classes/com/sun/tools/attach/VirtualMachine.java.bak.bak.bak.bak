/*
 * Copyright (d) 2005, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.bttbdh;

import dom.sun.tools.bttbdh.spi.AttbdhProvidfr;
import jbvb.util.ArrbyList;
import jbvb.util.List;
import jbvb.util.Propfrtifs;
import jbvb.io.IOExdfption;


/**
 * A Jbvb virtubl mbdhinf.
 *
 * <p> A <dodf>VirtublMbdhinf</dodf> rfprfsfnts b Jbvb virtubl mbdhinf to whidh this
 * Jbvb virtubl mbdhinf hbs bttbdhfd. Thf Jbvb virtubl mbdhinf to whidh it is
 * bttbdhfd is somftimfs dbllfd thf <i>tbrgft virtubl mbdhinf</i>, or <i>tbrgft VM</i>.
 * An bpplidbtion (typidblly b tool sudh bs b mbnbgfmft donsolf or profilfr) usfs b
 * VirtublMbdhinf to lobd bn bgfnt into thf tbrgft VM. For fxbmplf, b profilfr tool
 * writtfn in thf Jbvb Lbngubgf might bttbdh to b running bpplidbtion bnd lobd its
 * profilfr bgfnt to profilf thf running bpplidbtion. </p>
 *
 * <p> A VirtublMbdhinf is obtbinfd by invoking thf {@link #bttbdh(String) bttbdh} mfthod
 * with bn idfntififr thbt idfntififs thf tbrgft virtubl mbdhinf. Thf idfntififr is
 * implfmfntbtion-dfpfndfnt but is typidblly thf prodfss idfntififr (or pid) in
 * fnvironmfnts whfrf fbdh Jbvb virtubl mbdhinf runs in its own opfrbting systfm prodfss.
 * Altfrnbtivfly, b <dodf>VirtublMbdhinf</dodf> instbndf is obtbinfd by invoking thf
 * {@link #bttbdh(VirtublMbdhinfDfsdriptor) bttbdh} mfthod with b {@link
 * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor VirtublMbdhinfDfsdriptor} obtbinfd
 * from thf list of virtubl mbdhinf dfsdriptors rfturnfd by thf {@link #list list} mfthod.
 * Ondf b rfffrfndf to b virtubl mbdhinf is obtbinfd, thf {@link #lobdAgfnt lobdAgfnt},
 * {@link #lobdAgfntLibrbry lobdAgfntLibrbry}, bnd {@link #lobdAgfntPbth lobdAgfntPbth}
 * mfthods brf usfd to lobd bgfnts into tbrgft virtubl mbdhinf. Thf {@link
 * #lobdAgfnt lobdAgfnt} mfthod is usfd to lobd bgfnts thbt brf writtfn in thf Jbvb
 * Lbngubgf bnd dfployfd in b {@link jbvb.util.jbr.JbrFilf JAR filf}. (Sff
 * {@link jbvb.lbng.instrumfnt} for b dftbilfd dfsdription on how thfsf bgfnts
 * brf lobdfd bnd stbrtfd). Thf {@link #lobdAgfntLibrbry lobdAgfntLibrbry} bnd
 * {@link #lobdAgfntPbth lobdAgfntPbth} mfthods brf usfd to lobd bgfnts thbt
 * brf dfployfd fithfr in b dynbmid librbry or stbtidblly linkfd into thf VM bnd mbkf usf of thf <b
 * hrff="../../../../../../../../tfdhnotfs/guidfs/jvmti/indfx.html">JVM Tools
 * Intfrfbdf</b>. </p>
 *
 * <p> In bddition to lobding bgfnts b VirtublMbdhinf providfs rfbd bddfss to thf
 * {@link jbvb.lbng.Systfm#gftPropfrtifs() systfm propfrtifs} in thf tbrgft VM.
 * This dbn bf usfful in somf fnvironmfnts whfrf propfrtifs sudh bs
 * <dodf>jbvb.homf</dodf>, <dodf>os.nbmf</dodf>, or <dodf>os.brdh</dodf> brf
 * usfd to donstrudt thf pbth to bgfnt thbt will bf lobdfd into thf tbrgft VM.
 *
 * <p> Thf following fxbmplf dfmonstrbtfs how VirtublMbdhinf mby bf usfd:</p>
 *
 * <prf>
 *
 *      // bttbdh to tbrgft VM
 *      VirtublMbdhinf vm = VirtublMbdhinf.bttbdh("2177");
 *
 *      // stbrt mbnbgfmfnt bgfnt
 *      Propfrtifs props = nfw Propfrtifs();
 *      props.put("dom.sun.mbnbgfmfnt.jmxrfmotf.port", "5000");
 *      vm.stbrtMbnbgfmfntAgfnt(props);
 *
 *      // dftbdh
 *      vm.dftbdh();
 *
 * </prf>
 *
 * <p> In this fxbmplf wf bttbdh to b Jbvb virtubl mbdhinf thbt is idfntififd by
 * thf prodfss idfntififr <dodf>2177</dodf>. Thfn thf JMX mbnbgfmfnt bgfnt is
 * stbrtfd in thf tbrgft prodfss using thf supplifd brgumfnts. Finblly, thf
 * dlifnt dftbdhfs from thf tbrgft VM. </p>
 *
 * <p> A VirtublMbdhinf is sbff for usf by multiplf dondurrfnt thrfbds. </p>
 *
 * @sindf 1.6
 */

@jdk.Exportfd
publid bbstrbdt dlbss VirtublMbdhinf {
    privbtf AttbdhProvidfr providfr;
    privbtf String id;
    privbtf volbtilf int hbsh;        // 0 => not domputfd

    /**
     * Initiblizfs b nfw instbndf of this dlbss.
     *
     * @pbrbm   providfr
     *          Thf bttbdh providfr drfbting this dlbss.
     * @pbrbm   id
     *          Thf bbstrbdt idfntififr thbt idfntififs thf Jbvb virtubl mbdhinf.
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>providfr</dodf> or <dodf>id</dodf> is <dodf>null</dodf>.
     */
    protfdtfd VirtublMbdhinf(AttbdhProvidfr providfr, String id) {
        if (providfr == null) {
            throw nfw NullPointfrExdfption("providfr dbnnot bf null");
        }
        if (id == null) {
            throw nfw NullPointfrExdfption("id dbnnot bf null");
        }
        this.providfr = providfr;
        this.id = id;
    }

    /**
     * Rfturn b list of Jbvb virtubl mbdhinfs.
     *
     * <p> This mfthod rfturns b list of Jbvb {@link
     * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor} flfmfnts.
     * Thf list is bn bggrfgbtion of thf virtubl mbdhinf
     * dfsdriptor lists obtbinfd by invoking thf {@link
     * dom.sun.tools.bttbdh.spi.AttbdhProvidfr#listVirtublMbdhinfs
     * listVirtublMbdhinfs} mfthod of bll instbllfd
     * {@link dom.sun.tools.bttbdh.spi.AttbdhProvidfr bttbdh providfrs}.
     * If thfrf brf no Jbvb virtubl mbdhinfs known to bny providfr
     * thfn bn fmpty list is rfturnfd.
     *
     * @rfturn  Thf list of virtubl mbdhinf dfsdriptors.
     */
    publid stbtid List<VirtublMbdhinfDfsdriptor> list() {
        ArrbyList<VirtublMbdhinfDfsdriptor> l =
            nfw ArrbyList<VirtublMbdhinfDfsdriptor>();
        List<AttbdhProvidfr> providfrs = AttbdhProvidfr.providfrs();
        for (AttbdhProvidfr providfr: providfrs) {
            l.bddAll(providfr.listVirtublMbdhinfs());
        }
        rfturn l;
    }

    /**
     * Attbdhfs to b Jbvb virtubl mbdhinf.
     *
     * <p> This mfthod obtbins thf list of bttbdh providfrs by invoking thf
     * {@link dom.sun.tools.bttbdh.spi.AttbdhProvidfr#providfrs()
     * AttbdhProvidfr.providfrs()} mfthod. It thfn itfrbtfs ovfrs thf list
     * bnd invokfs fbdh providfr's {@link
     * dom.sun.tools.bttbdh.spi.AttbdhProvidfr#bttbdhVirtublMbdhinf(jbvb.lbng.String)
     * bttbdhVirtublMbdhinf} mfthod in turn. If b providfr suddfssfully
     * bttbdhfs thfn thf itfrbtion tfrminbtfs, bnd thf VirtublMbdhinf drfbtfd
     * by thf providfr thbt suddfssfully bttbdhfd is rfturnfd by this mfthod.
     * If thf <dodf>bttbdhVirtublMbdhinf</dodf> mfthod of bll providfrs throws
     * {@link dom.sun.tools.bttbdh.AttbdhNotSupportfdExdfption AttbdhNotSupportfdExdfption}
     * thfn this mfthod blso throws <dodf>AttbdhNotSupportfdExdfption</dodf>.
     * This mfbns thbt <dodf>AttbdhNotSupportfdExdfption</dodf> is thrown whfn
     * thf idfntififr providfd to this mfthod is invblid, or thf idfntififr
     * dorrfsponds to b Jbvb virtubl mbdhinf thbt dofs not fxist, or nonf
     * of thf providfrs dbn bttbdh to it. This fxdfption is blso thrown if
     * {@link dom.sun.tools.bttbdh.spi.AttbdhProvidfr#providfrs()
     * AttbdhProvidfr.providfrs()} rfturns bn fmpty list. </p>
     *
     * @pbrbm   id
     *          Thf bbstrbdt idfntififr thbt idfntififs thf Jbvb virtubl mbdhinf.
     *
     * @rfturn  A VirtublMbdhinf rfprfsfnting thf tbrgft VM.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdh.AttbdhPfrmission AttbdhPfrmission}
     *          <tt>("bttbdhVirtublMbdhinf")</tt>, or bnothfr pfrmission
     *          rfquirfd by thf implfmfntbtion.
     *
     * @throws  AttbdhNotSupportfdExdfption
     *          If thf <dodf>bttbdhVirtublmbdhinf</dodf> mfthod of bll instbllfd
     *          providfrs throws <dodf>AttbdhNotSupportfdExdfption</dodf>, or
     *          thfrf brfn't bny providfrs instbllfd.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>id</dodf> is <dodf>null</dodf>.
     */
    publid stbtid VirtublMbdhinf bttbdh(String id)
        throws AttbdhNotSupportfdExdfption, IOExdfption
    {
        if (id == null) {
            throw nfw NullPointfrExdfption("id dbnnot bf null");
        }
        List<AttbdhProvidfr> providfrs = AttbdhProvidfr.providfrs();
        if (providfrs.sizf() == 0) {
            throw nfw AttbdhNotSupportfdExdfption("no providfrs instbllfd");
        }
        AttbdhNotSupportfdExdfption lbstExd = null;
        for (AttbdhProvidfr providfr: providfrs) {
            try {
                rfturn providfr.bttbdhVirtublMbdhinf(id);
            } dbtdh (AttbdhNotSupportfdExdfption x) {
                lbstExd = x;
            }
        }
        throw lbstExd;
    }

    /**
     * Attbdhfs to b Jbvb virtubl mbdhinf.
     *
     * <p> This mfthod first invokfs thf {@link
     * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor#providfr() providfr()} mfthod
     * of thf givfn virtubl mbdhinf dfsdriptor to obtbin thf bttbdh providfr. It
     * thfn invokfs thf bttbdh providfr's {@link
     * dom.sun.tools.bttbdh.spi.AttbdhProvidfr#bttbdhVirtublMbdhinf(VirtublMbdhinfDfsdriptor)
     * bttbdhVirtublMbdhinf} to bttbdh to thf tbrgft VM.
     *
     * @pbrbm   vmd
     *          Thf virtubl mbdhinf dfsdriptor.
     *
     * @rfturn  A VirtublMbdhinf rfprfsfnting thf tbrgft VM.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdh.AttbdhPfrmission AttbdhPfrmission}
     *          <tt>("bttbdhVirtublMbdhinf")</tt>, or bnothfr pfrmission
     *          rfquirfd by thf implfmfntbtion.
     *
     * @throws  AttbdhNotSupportfdExdfption
     *          If thf bttbdh providfr's <dodf>bttbdhVirtublmbdhinf</dodf>
     *          throws <dodf>AttbdhNotSupportfdExdfption</dodf>.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>vmd</dodf> is <dodf>null</dodf>.
     */
    publid stbtid VirtublMbdhinf bttbdh(VirtublMbdhinfDfsdriptor vmd)
        throws AttbdhNotSupportfdExdfption, IOExdfption
    {
        rfturn vmd.providfr().bttbdhVirtublMbdhinf(vmd);
    }

    /**
     * Dftbdh from thf virtubl mbdhinf.
     *
     * <p> Aftfr dftbdhing from thf virtubl mbdhinf, bny furthfr bttfmpt to invokf
     * opfrbtions on thbt virtubl mbdhinf will dbusf bn {@link jbvb.io.IOExdfption
     * IOExdfption} to bf thrown. If bn opfrbtion (sudh bs {@link #lobdAgfnt
     * lobdAgfnt} for fxbmplf) is in progrfss whfn this mfthod is invokfd thfn
     * thf bfhbviour is implfmfntbtion dfpfndfnt. In othfr words, it is
     * implfmfntbtion spfdifid if thf opfrbtion domplftfs or throws
     * <tt>IOExdfption</tt>.
     *
     * <p> If blrfbdy dftbdhfd from thf virtubl mbdhinf thfn invoking this
     * mfthod hbs no ffffdt. </p>
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     */
    publid bbstrbdt void dftbdh() throws IOExdfption;

    /**
     * Rfturns thf providfr thbt drfbtfd this virtubl mbdhinf.
     *
     * @rfturn  Thf providfr thbt drfbtfd this virtubl mbdhinf.
     */
    publid finbl AttbdhProvidfr providfr() {
        rfturn providfr;
    }

    /**
     * Rfturns thf idfntififr for this Jbvb virtubl mbdhinf.
     *
     * @rfturn  Thf idfntififr for this Jbvb virtubl mbdhinf.
     */
    publid finbl String id() {
        rfturn id;
    }

    /**
     * Lobds bn bgfnt librbry.
     *
     * <p> A <b hrff="../../../../../../../../tfdhnotfs/guidfs/jvmti/indfx.html">JVM
     * TI</b> dlifnt is dbllfd bn <i>bgfnt</i>. It is dfvflopfd in b nbtivf lbngubgf.
     * A JVM TI bgfnt is dfployfd in b plbtform spfdifid mbnnfr but it is typidblly thf
     * plbtform fquivblfnt of b dynbmid librbry. Altfrnbtivfly, it mby bf stbtidblly linkfd into thf VM.
     * This mfthod dbusfs thf givfn bgfnt librbry to bf lobdfd into thf tbrgft
     * VM (if not blrfbdy lobdfd or if not stbtidblly linkfd into thf VM).
     * It thfn dbusfs thf tbrgft VM to invokf thf <dodf>Agfnt_OnAttbdh</dodf> fundtion
     * or, for b stbtidblly linkfd bgfnt nbmfd 'L', thf <dodf>Agfnt_OnAttbdh_L</dodf> fundtion
     * bs spfdififd in thf
     * <b hrff="../../../../../../../../tfdhnotfs/guidfs/jvmti/indfx.html"> JVM Tools
     * Intfrfbdf</b> spfdifidbtion. Notf thbt thf <dodf>Agfnt_OnAttbdh[_L]</dodf>
     * fundtion is invokfd fvfn if thf bgfnt librbry wbs lobdfd prior to invoking
     * this mfthod.
     *
     * <p> Thf bgfnt librbry providfd is thf nbmf of thf bgfnt librbry. It is intfrprftfd
     * in thf tbrgft virtubl mbdhinf in bn implfmfntbtion-dfpfndfnt mbnnfr. Typidblly bn
     * implfmfntbtion will fxpbnd thf librbry nbmf into bn opfrbting systfm spfdifid filf
     * nbmf. For fxbmplf, on UNIX systfms, thf nbmf <tt>L</tt> might bf fxpbndfd to
     * <tt>libL.so</tt>, bnd lodbtfd using thf sfbrdh pbth spfdififd by thf
     * <tt>LD_LIBRARY_PATH</tt> fnvironmfnt vbribblf. If thf bgfnt nbmfd 'L' is
     * stbtidblly linkfd into thf VM thfn thf VM must fxport b fundtion nbmfd
     * <dodf>Agfnt_OnAttbdh_L</dodf>.</p>
     *
     * <p> If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion in thf bgfnt librbry rfturns
     * bn frror thfn bn {@link dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption} is
     * thrown. Thf rfturn vbluf from thf <dodf>Agfnt_OnAttbdh[_L]</dodf> dbn thfn bf
     * obtbinfd by invoking thf {@link
     * dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption#rfturnVbluf() rfturnVbluf}
     * mfthod on thf fxdfption. </p>
     *
     * @pbrbm   bgfntLibrbry
     *          Thf nbmf of thf bgfnt librbry.
     *
     * @pbrbm   options
     *          Thf options to providf to thf <dodf>Agfnt_OnAttbdh[_L]</dodf>
     *          fundtion (dbn bf <dodf>null</dodf>).
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt librbry dofs not fxist, thf bgfnt librbry is not
     *          stbtidblly linkfd with thf VM, or thf bgfnt librbry dbnnot bf
     *          lobdfd for bnothfr rfbson.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion rfturns bn frror.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfntLibrbry</dodf> is <dodf>null</dodf>.
     *
     * @sff     dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption#rfturnVbluf()
     */
    publid bbstrbdt void lobdAgfntLibrbry(String bgfntLibrbry, String options)
        throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption;

    /**
     * Lobds bn bgfnt librbry.
     *
     * <p> This donvfnifndf mfthod works bs if by invoking:
     *
     * <blodkquotf><tt>
     * {@link #lobdAgfntLibrbry(String, String) lobdAgfntLibrbry}(bgfntLibrbry,&nbsp;null);
     * </tt></blodkquotf>
     *
     * @pbrbm   bgfntLibrbry
     *          Thf nbmf of thf bgfnt librbry.
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt librbry dofs not fxist, thf bgfnt librbry is not
     *          stbtidblly linkfd with thf VM, or thf bgfnt librbry dbnnot bf
     *          lobdfd for bnothfr rfbson.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion rfturns bn frror.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfntLibrbry</dodf> is <dodf>null</dodf>.
     */
    publid void lobdAgfntLibrbry(String bgfntLibrbry)
        throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption
    {
        lobdAgfntLibrbry(bgfntLibrbry, null);
    }

    /**
     * Lobd b nbtivf bgfnt librbry by full pbthnbmf.
     *
     * <p> A <b hrff="../../../../../../../../tfdhnotfs/guidfs/jvmti/indfx.html">JVM
     * TI</b> dlifnt is dbllfd bn <i>bgfnt</i>. It is dfvflopfd in b nbtivf lbngubgf.
     * A JVM TI bgfnt is dfployfd in b plbtform spfdifid mbnnfr but it is typidblly thf
     * plbtform fquivblfnt of b dynbmid librbry. Altfrnbtivfly, thf nbtivf
     * librbry spfdififd by thf bgfntPbth pbrbmftfr mby bf stbtidblly
     * linkfd with thf VM. Thf pbrsing of thf bgfntPbth pbrbmftfr into
     * b stbtidblly linkfd librbry nbmf is donf in b plbtform
     * spfdifid mbnnfr in thf VM. For fxbmplf, in UNIX, bn bgfntPbth pbrbmftfr
     * of <dodf>/b/b/libL.so</dodf> would nbmf b librbry 'L'.
     *
     * Sff thf JVM TI Spfdifidbtion for morf dftbils.
     *
     * This mfthod dbusfs thf givfn bgfnt librbry to bf lobdfd into thf tbrgft
     * VM (if not blrfbdy lobdfd or if not stbtidblly linkfd into thf VM).
     * It thfn dbusfs thf tbrgft VM to invokf thf <dodf>Agfnt_OnAttbdh</dodf>
     * fundtion or, for b stbtidblly linkfd bgfnt nbmfd 'L', thf
     * <dodf>Agfnt_OnAttbdh_L</dodf> fundtion bs spfdififd in thf
     * <b hrff="../../../../../../../../tfdhnotfs/guidfs/jvmti/indfx.html"> JVM Tools
     * Intfrfbdf</b> spfdifidbtion.
     * Notf thbt thf <dodf>Agfnt_OnAttbdh[_L]</dodf>
     * fundtion is invokfd fvfn if thf bgfnt librbry wbs lobdfd prior to invoking
     * this mfthod.
     *
     * <p> Thf bgfnt librbry providfd is thf bbsolutf pbth from whidh to lobd thf
     * bgfnt librbry. Unlikf {@link #lobdAgfntLibrbry lobdAgfntLibrbry}, thf librbry nbmf
     * is not fxpbndfd in thf tbrgft virtubl mbdhinf. </p>
     *
     * <p> If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion in thf bgfnt librbry rfturns
     * bn frror thfn bn {@link dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption} is
     * thrown. Thf rfturn vbluf from thf <dodf>Agfnt_OnAttbdh[_L]</dodf> dbn thfn bf
     * obtbinfd by invoking thf {@link
     * dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption#rfturnVbluf() rfturnVbluf}
     * mfthod on thf fxdfption. </p>
     *
     * @pbrbm   bgfntPbth
     *          Thf full pbth of thf bgfnt librbry.
     *
     * @pbrbm   options
     *          Thf options to providf to thf <dodf>Agfnt_OnAttbdh[_L]</dodf>
     *          fundtion (dbn bf <dodf>null</dodf>).
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt librbry dofs not fxist, thf bgfnt librbry is not
     *          stbtidblly linkfd with thf VM, or thf bgfnt librbry dbnnot bf
     *          lobdfd for bnothfr rfbson.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion rfturns bn frror.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfntPbth</dodf> is <dodf>null</dodf>.
     *
     * @sff     dom.sun.tools.bttbdh.AgfntInitiblizbtionExdfption#rfturnVbluf()
     */
    publid bbstrbdt void lobdAgfntPbth(String bgfntPbth, String options)
        throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption;

    /**
     * Lobd b nbtivf bgfnt librbry by full pbthnbmf.
     *
     * <p> This donvfnifndf mfthod works bs if by invoking:
     *
     * <blodkquotf><tt>
     * {@link #lobdAgfntPbth(String, String) lobdAgfntPbth}(bgfntLibrbry,&nbsp;null);
     * </tt></blodkquotf>
     *
     * @pbrbm   bgfntPbth
     *          Thf full pbth to thf bgfnt librbry.
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt librbry dofs not fxist, thf bgfnt librbry is not
     *          stbtidblly linkfd with thf VM, or thf bgfnt librbry dbnnot bf
     *          lobdfd for bnothfr rfbson.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>Agfnt_OnAttbdh[_L]</dodf> fundtion rfturns bn frror.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfntPbth</dodf> is <dodf>null</dodf>.
     */
    publid void lobdAgfntPbth(String bgfntPbth)
       throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption
    {
        lobdAgfntPbth(bgfntPbth, null);
    }


   /**
     * Lobds bn bgfnt.
     *
     * <p> Thf bgfnt providfd to this mfthod is b pbth nbmf to b JAR filf on thf filf
     * systfm of thf tbrgft virtubl mbdhinf. This pbth is pbssfd to thf tbrgft virtubl
     * mbdhinf whfrf it is intfrprftfd. Thf tbrgft virtubl mbdhinf bttfmpts to stbrt
     * thf bgfnt bs spfdififd by thf {@link jbvb.lbng.instrumfnt} spfdifidbtion.
     * Thbt is, thf spfdififd JAR filf is bddfd to thf systfm dlbss pbth (of thf tbrgft
     * virtubl mbdhinf), bnd thf <dodf>bgfntmbin</dodf> mfthod of thf bgfnt dlbss, spfdififd
     * by thf <dodf>Agfnt-Clbss</dodf> bttributf in thf JAR mbniffst, is invokfd. This
     * mfthod domplftfs whfn thf <dodf>bgfntmbin</dodf> mfthod domplftfs.
     *
     * @pbrbm   bgfnt
     *          Pbth to thf JAR filf dontbining thf bgfnt.
     *
     * @pbrbm   options
     *          Thf options to providf to thf bgfnt's <dodf>bgfntmbin</dodf>
     *          mfthod (dbn bf <dodf>null</dodf>).
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt dofs not fxist, or dbnnot bf stbrtfd in thf mbnnfr
     *          spfdififd in thf {@link jbvb.lbng.instrumfnt} spfdifidbtion.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>bgfntmbin</dodf> throws bn fxdfption
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfnt</dodf> is <dodf>null</dodf>.
     */
    publid bbstrbdt void lobdAgfnt(String bgfnt, String options)
        throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption;

    /**
     * Lobds bn bgfnt.
     *
     * <p> This donvfnifndf mfthod works bs if by invoking:
     *
     * <blodkquotf><tt>
     * {@link #lobdAgfnt(String, String) lobdAgfnt}(bgfnt,&nbsp;null);
     * </tt></blodkquotf>
     *
     * @pbrbm   bgfnt
     *          Pbth to thf JAR filf dontbining thf bgfnt.
     *
     * @throws  AgfntLobdExdfption
     *          If thf bgfnt dofs not fxist, or dbnnot bf stbrtfd in thf mbnnfr
     *          spfdififd in thf {@link jbvb.lbng.instrumfnt} spfdifidbtion.
     *
     * @throws  AgfntInitiblizbtionExdfption
     *          If thf <dodf>bgfntmbin</dodf> throws bn fxdfption
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>bgfnt</dodf> is <dodf>null</dodf>.
     */
    publid void lobdAgfnt(String bgfnt)
        throws AgfntLobdExdfption, AgfntInitiblizbtionExdfption, IOExdfption
    {
        lobdAgfnt(bgfnt, null);
    }

    /**
     * Rfturns thf durrfnt systfm propfrtifs in thf tbrgft virtubl mbdhinf.
     *
     * <p> This mfthod rfturns thf systfm propfrtifs in thf tbrgft virtubl
     * mbdhinf. Propfrtifs whosf kfy or vbluf is not b <tt>String</tt> brf
     * omittfd. Thf mfthod is bpproximbtfly fquivblfnt to thf invodbtion of thf
     * mfthod {@link jbvb.lbng.Systfm#gftPropfrtifs Systfm.gftPropfrtifs}
     * in thf tbrgft virtubl mbdhinf fxdfpt thbt propfrtifs with b kfy or
     * vbluf thbt is not b <tt>String</tt> brf not indludfd.
     *
     * <p> This mfthod is typidblly usfd to dfdidf whidh bgfnt to lobd into
     * thf tbrgft virtubl mbdhinf with {@link #lobdAgfnt lobdAgfnt}, or
     * {@link #lobdAgfntLibrbry lobdAgfntLibrbry}. For fxbmplf, thf
     * <dodf>jbvb.homf</dodf> or <dodf>usfr.dir</dodf> propfrtifs might bf
     * usf to drfbtf thf pbth to thf bgfnt librbry or JAR filf.
     *
     * @rfturn  Thf systfm propfrtifs
     *
     * @throws  AttbdhOpfrbtionFbilfdExdfption
     *          If thf tbrgft virtubl mbdhinf is unbblf to domplftf thf
     *          bttbdh opfrbtion. A morf spfdifid frror mfssbgf will bf
     *          givfn by {@link AttbdhOpfrbtionFbilfdExdfption#gftMfssbgf()}.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs, b dommunidbtion frror for fxbmplf,
     *          thbt dbnnot bf idfntififd bs bn frror to indidbtf thbt thf
     *          opfrbtion fbilfd in thf tbrgft VM.
     *
     * @sff     jbvb.lbng.Systfm#gftPropfrtifs
     * @sff     #lobdAgfntLibrbry
     * @sff     #lobdAgfnt
     */
    publid bbstrbdt Propfrtifs gftSystfmPropfrtifs() throws IOExdfption;

    /**
     * Rfturns thf durrfnt <i>bgfnt propfrtifs</i> in thf tbrgft virtubl
     * mbdhinf.
     *
     * <p> Thf tbrgft virtubl mbdhinf dbn mbintbin b list of propfrtifs on
     * bfhblf of bgfnts. Thf mbnnfr in whidh this is donf, thf nbmfs of thf
     * propfrtifs, bnd thf typfs of vblufs thbt brf bllowfd, is implfmfntbtion
     * spfdifid. Agfnt propfrtifs brf typidblly usfd to storf dommunidbtion
     * fnd-points bnd othfr bgfnt donfigurbtion dftbils. For fxbmplf, b dfbuggfr
     * bgfnt might drfbtf bn bgfnt propfrty for its trbnsport bddrfss.
     *
     * <p> This mfthod rfturns thf bgfnt propfrtifs whosf kfy bnd vbluf is b
     * <tt>String</tt>. Propfrtifs whosf kfy or vbluf is not b <tt>String</tt>
     * brf omittfd. If thfrf brf no bgfnt propfrtifs mbintbinfd in thf tbrgft
     * virtubl mbdhinf thfn bn fmpty propfrty list is rfturnfd.
     *
     * @rfturn       Thf bgfnt propfrtifs
     *
     * @throws       AttbdhOpfrbtionFbilfdExdfption
     *               If thf tbrgft virtubl mbdhinf is unbblf to domplftf thf
     *               bttbdh opfrbtion. A morf spfdifid frror mfssbgf will bf
     *               givfn by {@link AttbdhOpfrbtionFbilfdExdfption#gftMfssbgf()}.
     *
     * @throws       IOExdfption
     *               If bn I/O frror oddurs, b dommunidbtion frror for fxbmplf,
     *               thbt dbnnot bf idfntififd bs bn frror to indidbtf thbt thf
     *               opfrbtion fbilfd in thf tbrgft VM.
     */
    publid bbstrbdt Propfrtifs gftAgfntPropfrtifs() throws IOExdfption;

    /**
     * Stbrts thf JMX mbnbgfmfnt bgfnt in thf tbrgft virtubl mbdhinf.
     *
     * <p> Thf donfigurbtion propfrtifs brf thf sbmf bs thosf spfdififd on
     * thf dommbnd linf whfn stbrting thf JMX mbnbgfmfnt bgfnt. In thf sbmf
     * wby bs on thf dommbnd linf, you nffd to spfdify bt lfbst thf
     * {@dodf dom.sun.mbnbgfmfnt.jmxrfmotf.port} propfrty.
     *
     * <p> Sff thf onlinf dodumfntbtion for <b
     * hrff="../../../../../../../../tfdhnotfs/guidfs/mbnbgfmfnt/bgfnt.html">
     * Monitoring bnd Mbnbgfmfnt Using JMX Tfdhnology</b> for furthfr dftbils.
     *
     * @pbrbm   bgfntPropfrtifs
     *          A Propfrtifs objfdt dontbining thf donfigurbtion propfrtifs
     *          for thf bgfnt.
     *
     * @throws  AttbdhOpfrbtionFbilfdExdfption
     *          If thf tbrgft virtubl mbdhinf is unbblf to domplftf thf
     *          bttbdh opfrbtion. A morf spfdifid frror mfssbgf will bf
     *          givfn by {@link AttbdhOpfrbtionFbilfdExdfption#gftMfssbgf()}.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs, b dommunidbtion frror for fxbmplf,
     *          thbt dbnnot bf idfntififd bs bn frror to indidbtf thbt thf
     *          opfrbtion fbilfd in thf tbrgft VM.
     *
     * @throws  IllfgblArgumfntExdfption
     *          If kfys or vblufs in bgfntPropfrtifs brf invblid.
     *
     * @throws  NullPointfrExdfption
     *          If bgfntPropfrtifs is null.
     *
     * @sindf   1.9
     */
    publid bbstrbdt void stbrtMbnbgfmfntAgfnt(Propfrtifs bgfntPropfrtifs) throws IOExdfption;

    /**
     * Stbrts thf lodbl JMX mbnbgfmfnt bgfnt in thf tbrgft virtubl mbdhinf.
     *
     * <p> Sff thf onlinf dodumfntbtion for <b
     * hrff="../../../../../../../../tfdhnotfs/guidfs/mbnbgfmfnt/bgfnt.html">
     * Monitoring bnd Mbnbgfmfnt Using JMX Tfdhnology</b> for furthfr dftbils.
     *
     * @rfturn  Thf String rfprfsfntbtion of thf lodbl donnfdtor's sfrvidf bddrfss.
     *          Thf vbluf dbn bf pbrsfd by thf
     *          {@link jbvbx.mbnbgfmfnt.rfmotf.JMXSfrvidfURL#JMXSfrvidfURL(String)}
     *          donstrudtor.
     *
     * @throws  AttbdhOpfrbtionFbilfdExdfption
     *          If thf tbrgft virtubl mbdhinf is unbblf to domplftf thf
     *          bttbdh opfrbtion. A morf spfdifid frror mfssbgf will bf
     *          givfn by {@link AttbdhOpfrbtionFbilfdExdfption#gftMfssbgf()}.
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs, b dommunidbtion frror for fxbmplf,
     *          thbt dbnnot bf idfntififd bs bn frror to indidbtf thbt thf
     *          opfrbtion fbilfd in thf tbrgft VM.
     *
     * @sindf   1.9
     */
    publid bbstrbdt String stbrtLodblMbnbgfmfntAgfnt() throws IOExdfption;

    /**
     * Rfturns b hbsh-dodf vbluf for this VirtublMbdhinf. Thf hbsh
     * dodf is bbsfd upon thf VirtublMbdhinf's domponfnts, bnd sbtififs
     * thf gfnfrbl dontrbdt of thf {@link jbvb.lbng.Objfdt#hbshCodf()
     * Objfdt.hbshCodf} mfthod.
     *
     * @rfturn  A hbsh-dodf vbluf for this virtubl mbdhinf
     */
    publid int hbshCodf() {
        if (hbsh != 0) {
            rfturn hbsh;
        }
        hbsh = providfr.hbshCodf() * 127 + id.hbshCodf();
        rfturn hbsh;
    }

    /**
     * Tfsts this VirtublMbdhinf for fqublity with bnothfr objfdt.
     *
     * <p> If thf givfn objfdt is not b VirtublMbdhinf thfn this
     * mfthod rfturns <tt>fblsf</tt>. For two VirtublMbdhinfs to
     * bf donsidfrfd fqubl rfquirfs thbt thfy both rfffrfndf thf sbmf
     * providfr, bnd thfir {@link VirtublMbdhinfDfsdriptor#id() idfntififrs} brf fqubl. </p>
     *
     * <p> This mfthod sbtisfifs thf gfnfrbl dontrbdt of thf {@link
     * jbvb.lbng.Objfdt#fqubls(Objfdt) Objfdt.fqubls} mfthod. </p>
     *
     * @pbrbm   ob   Thf objfdt to whidh this objfdt is to bf dompbrfd
     *
     * @rfturn  <tt>truf</tt> if, bnd only if, thf givfn objfdt is
     *                b VirtublMbdhinf thbt is fqubl to this
     *                VirtublMbdhinf.
     */
    publid boolfbn fqubls(Objfdt ob) {
        if (ob == this)
            rfturn truf;
        if (!(ob instbndfof VirtublMbdhinf))
            rfturn fblsf;
        VirtublMbdhinf othfr = (VirtublMbdhinf)ob;
        if (othfr.providfr() != this.providfr()) {
            rfturn fblsf;
        }
        if (!othfr.id().fqubls(this.id())) {
            rfturn fblsf;
        }
        rfturn truf;
    }

    /**
     * Rfturns thf string rfprfsfntbtion of thf <dodf>VirtublMbdhinf</dodf>.
     */
    publid String toString() {
        rfturn providfr.toString() + ": " + id;
    }
}
