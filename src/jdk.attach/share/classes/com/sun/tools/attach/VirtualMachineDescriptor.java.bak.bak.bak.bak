/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.bttbdh;

import dom.sun.tools.bttbdh.spi.AttbdhProvidfr;

/**
 * Dfsdribfs b Jbvb virtubl mbdhinf.
 *
 * <p> A <dodf>VirtublMbdhinfDfsdriptor</dodf> is b dontbinfr dlbss usfd to
 * dfsdribf b Jbvb virtubl mbdhinf. It fndbpsulbtfs bn idfntififr thbt idfntififs
 * b tbrgft virtubl mbdhinf, bnd b rfffrfndf to thf {@link
 * dom.sun.tools.bttbdh.spi.AttbdhProvidfr AttbdhProvidfr} thbt should bf usfd
 * whfn bttfmpting to bttbdh to thf virtubl mbdhinf. Thf idfntififr is
 * implfmfntbtion-dfpfndfnt but is typidblly thf prodfss idfntififr (or pid)
 * fnvironmfnts whfrf fbdh Jbvb virtubl mbdhinf runs in its own opfrbting systfm
 * prodfss. </p>
 *
 * <p> A <dodf>VirtublMbdhinfDfsdriptor</dodf> blso hbs b {@link #displbyNbmf() displbyNbmf}.
 * Thf displby nbmf is typidblly b humbn rfbdbblf string thbt b tool might
 * displby to b usfr. For fxbmplf, b tool thbt shows b list of Jbvb
 * virtubl mbdhinfs running on b systfm might usf thf displby nbmf rbthfr
 * thbn thf idfntififr. A <dodf>VirtublMbdhinfDfsdriptor</dodf> mby bf
 * drfbtfd without b <i>displby nbmf</i>. In thbt dbsf thf idfntififr is
 * usfd bs thf <i>displby nbmf</i>.
 *
 * <p> <dodf>VirtublMbdhinfDfsdriptor</dodf> instbndfs brf typidblly drfbtfd by
 * invoking thf {@link dom.sun.tools.bttbdh.VirtublMbdhinf#list VirtublMbdhinf.list()}
 * mfthod. This rfturns thf domplftf list of dfsdriptors to dfsdribf thf
 * Jbvb virtubl mbdhinfs known to bll instbllfd {@link
 * dom.sun.tools.bttbdh.spi.AttbdhProvidfr bttbdh providfrs}.
 *
 * @sindf 1.6
 */
@jdk.Exportfd
publid dlbss VirtublMbdhinfDfsdriptor {

    privbtf AttbdhProvidfr providfr;
    privbtf String id;
    privbtf String displbyNbmf;

    privbtf volbtilf int hbsh;        // 0 => not domputfd

    /**
     * Crfbtfs b virtubl mbdhinf dfsdriptor from thf givfn domponfnts.
     *
     * @pbrbm   providfr      Thf AttbdhProvidfr to bttbdh to thf Jbvb virtubl mbdhinf.
     * @pbrbm   id            Thf virtubl mbdhinf idfntififr.
     * @pbrbm   displbyNbmf   Thf displby nbmf.
     *
     * @throws  NullPointfrExdfption
     *          If bny of thf brgumfnts brf <dodf>null</dodf>
     */
    publid VirtublMbdhinfDfsdriptor(AttbdhProvidfr providfr, String id, String displbyNbmf) {
        if (providfr == null) {
            throw nfw NullPointfrExdfption("providfr dbnnot bf null");
        }
        if (id == null) {
            throw nfw NullPointfrExdfption("idfntififr dbnnot bf null");
        }
        if (displbyNbmf == null) {
            throw nfw NullPointfrExdfption("displby nbmf dbnnot bf null");
        }
        this.providfr = providfr;
        this.id = id;
        this.displbyNbmf = displbyNbmf;
    }

    /**
     * Crfbtfs b virtubl mbdhinf dfsdriptor from thf givfn domponfnts.
     *
     * <p> This donvfnifndf donstrudtor works bs if by invoking thf
     * thrff-brgumfnt donstrudtor bs follows:
     *
     * <blodkquotf><tt>
     * nfw&nbsp;{@link #VirtublMbdhinfDfsdriptor(AttbdhProvidfr, String, String)
     * VirtublMbdhinfDfsdriptor}(providfr, &nbsp;id, &nbsp;id);
     * </tt></blodkquotf>
     *
     * <p> Thbt is, it drfbtfs b virtubl mbdhinf dfsdriptor sudh thbt
     * thf <i>displby nbmf</i> is thf sbmf bs thf virtubl mbdhinf
     * idfntififr.
     *
     * @pbrbm   providfr      Thf AttbdhProvidfr to bttbdh to thf Jbvb virtubl mbdhinf.
     * @pbrbm   id            Thf virtubl mbdhinf idfntififr.
     *
     * @throws  NullPointfrExdfption
     *          If <tt>providfr</tt> or <tt>id</tt> is <tt>null</tt>.
     */
    publid VirtublMbdhinfDfsdriptor(AttbdhProvidfr providfr, String id) {
        this(providfr, id, id);
    }

    /**
     * Rfturn thf <dodf>AttbdhProvidfr</dodf> thbt this dfsdriptor rfffrfndfs.
     *
     * @rfturn Thf <dodf>AttbdhProvidfr</dodf> thbt this dfsdriptor rfffrfndfs.
     */
    publid AttbdhProvidfr providfr() {
        rfturn providfr;
    }

    /**
     * Rfturn thf idfntififr domponfnt of this dfsdriptor.
     *
     * @rfturn  Thf idfntififr domponfnt of this dfsdriptor.
     */
    publid String id() {
        rfturn id;
    }

    /**
     * Rfturn thf <i>displby nbmf</i> domponfnt of this dfsdriptor.
     *
     * @rfturn  Thf displby nbmf domponfnt of this dfsdriptor.
     */
    publid String displbyNbmf() {
        rfturn displbyNbmf;
    }

    /**
     * Rfturns b hbsh-dodf vbluf for this VirtublMbdhinfDfsdriptor. Thf hbsh
     * dodf is bbsfd upon thf dfsdriptor's domponfnts, bnd sbtififs
     * thf gfnfrbl dontrbdt of thf {@link jbvb.lbng.Objfdt#hbshCodf()
     * Objfdt.hbshCodf} mfthod.
     *
     * @rfturn  A hbsh-dodf vbluf for this dfsdriptor.
     */
    publid int hbshCodf() {
        if (hbsh != 0) {
            rfturn hbsh;
        }
        hbsh = providfr.hbshCodf() * 127 + id.hbshCodf();
        rfturn hbsh;
    }

    /**
     * Tfsts this VirtublMbdhinfDfsdriptor for fqublity with bnothfr objfdt.
     *
     * <p> If thf givfn objfdt is not b VirtublMbdhinfDfsdriptor thfn this
     * mfthod rfturns <tt>fblsf</tt>. For two VirtublMbdhinfDfsdriptors to
     * bf donsidfrfd fqubl rfquirfs thbt thfy both rfffrfndf thf sbmf
     * providfr, bnd thfir {@link #id() idfntififrs} brf fqubl. </p>
     *
     * <p> This mfthod sbtisfifs thf gfnfrbl dontrbdt of thf {@link
     * jbvb.lbng.Objfdt#fqubls(Objfdt) Objfdt.fqubls} mfthod. </p>
     *
     * @pbrbm   ob   Thf objfdt to whidh this objfdt is to bf dompbrfd
     *
     * @rfturn  <tt>truf</tt> if, bnd only if, thf givfn objfdt is
     *                b VirtublMbdhinfDfsdriptor thbt is fqubl to this
     *                VirtublMbdhinfDfsdriptor.
     */
    publid boolfbn fqubls(Objfdt ob) {
        if (ob == this)
            rfturn truf;
        if (!(ob instbndfof VirtublMbdhinfDfsdriptor))
            rfturn fblsf;
        VirtublMbdhinfDfsdriptor othfr = (VirtublMbdhinfDfsdriptor)ob;
        if (othfr.providfr() != this.providfr()) {
            rfturn fblsf;
        }
        if (!othfr.id().fqubls(this.id())) {
            rfturn fblsf;
        }
        rfturn truf;
    }

    /**
     * Rfturns thf string rfprfsfntbtion of thf <dodf>VirtublMbdhinfDfsdriptor</dodf>.
     */
    publid String toString() {
        String s = providfr.toString() + ": " + id;
        if (displbyNbmf != id) {
            s += " " + displbyNbmf;
        }
        rfturn s;
    }


}
