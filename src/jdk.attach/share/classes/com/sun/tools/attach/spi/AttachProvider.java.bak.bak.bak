/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.bttbdi.spi;

import jbvb.io.IOExdfption;
import jbvb.util.Collfdtions;
import jbvb.util.Itfrbtor;
import jbvb.util.ArrbyList;
import jbvb.util.List;
import dom.sun.tools.bttbdi.VirtublMbdiinf;
import dom.sun.tools.bttbdi.VirtublMbdiinfDfsdriptor;
import dom.sun.tools.bttbdi.AttbdiPfrmission;
import dom.sun.tools.bttbdi.AttbdiNotSupportfdExdfption;
import jbvb.util.SfrvidfLobdfr;

/**
 * Attbdi providfr dlbss for bttbdiing to b Jbvb virtubl mbdiinf.
 *
 * <p> An bttbdi providfr is b dondrftf subdlbss of tiis dlbss tibt ibs b
 * zfro-brgumfnt donstrudtor bnd implfmfnts tif bbstrbdt mftiods spfdififd
 * bflow. </p>
 *
 * <p> An bttbdi providfr implfmfntbtion is typidblly tifd to b Jbvb virtubl
 * mbdiinf implfmfntbtion, vfrsion, or fvfn modf of opfrbtion. Tibt is, b spfdifid
 * providfr implfmfntbtion will typidblly only bf dbpbblf of bttbdiing to
 * b spfdifid Jbvb virtubl mbdiinf implfmfntbtion or vfrsion. For fxbmplf, Sun's
 * JDK implfmfntbtion siips witi providfr implfmfntbtions tibt dbn only bttbdi to
 * Sun's <i>HotSpot</i> virtubl mbdiinf. In gfnfrbl, if bn fnvironmfnt
 * donsists of Jbvb virtubl mbdiinfs of difffrfnt vfrsions bnd from difffrfnt
 * vfndors tifn tifrf will bf bn bttbdi providfr implfmfntbtion for fbdi
 * <i>fbmily</i> of implfmfntbtions or vfrsions. </p>
 *
 * <p> An bttbdi providfr is idfntififd by its {@link #nbmf <i>nbmf</i>} bnd
 * {@link #typf <i>typf</i>}. Tif <i>nbmf</i> is typidblly, but not rfquirfd to
 * bf, b nbmf tibt dorrfsponds to tif VM vfndor. Tif Sun JDK implfmfntbtion,
 * for fxbmplf, siips witi bttbdi providfrs tibt usf tif nbmf <i>"sun"</i>. Tif
 * <i>typf</i> typidblly dorrfsponds to tif bttbdi mfdibnism. For fxbmplf, bn
 * implfmfntbtion tibt usfs tif Doors intfr-prodfss dommunidbtion mfdibnism
 * migit usf tif typf <i>"doors"</i>. Tif purposf of tif nbmf bnd typf is to
 * idfntify providfrs in fnvironmfnts wifrf tifrf brf multiplf providfrs
 * instbllfd. </p>
 *
 * <p> AttbdiProvidfr implfmfntbtions brf lobdfd bnd instbntibtfd bt tif first
 * invodbtion of tif {@link #providfrs() providfrs} mftiod. Tiis mftiod
 * bttfmpts to lobd bll providfr implfmfntbtions tibt brf instbllfd on tif
 * plbtform. </p>
 *
 * <p> All of tif mftiods in tiis dlbss brf sbff for usf by multiplf
 * dondurrfnt tirfbds. </p>
 *
 * @sindf 1.6
 */

@jdk.Exportfd
publid bbstrbdt dlbss AttbdiProvidfr {

    privbtf stbtid finbl Objfdt lodk = nfw Objfdt();
    privbtf stbtid List<AttbdiProvidfr> providfrs = null;

    /**
     * Initiblizfs b nfw instbndf of tiis dlbss.  </p>
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr ibs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdi.AttbdiPfrmission AttbdiPfrmission}
     *          <tt>("drfbtfAttbdiProvidfr")</tt>
     */
    protfdtfd AttbdiProvidfr() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null)
            sm.difdkPfrmission(nfw AttbdiPfrmission("drfbtfAttbdiProvidfr"));
    }

    /**
     * Rfturn tiis providfr's nbmf. </p>
     *
     * @rfturn  Tif nbmf of tiis providfr
     */
    publid bbstrbdt String nbmf();

    /**
     * Rfturn tiis providfr's typf. </p>
     *
     * @rfturn  Tif typf of tiis providfr
     */
    publid bbstrbdt String typf();

    /**
     * Attbdifs to b Jbvb virtubl mbdiinf.
     *
     * <p> A Jbvb virtubl mbdiinf is idfntififd by bn bbstrbdt idfntififr. Tif
     * nbturf of tiis idfntififr is plbtform dfpfndfnt but in mbny dbsfs it will bf tif
     * string rfprfsfntbtion of tif prodfss idfntififr (or pid). </p>
     *
     * <p> Tiis mftiod pbrsfs tif idfntififr bnd mbps tif idfntififr to b Jbvb
     * virtubl mbdiinf (in bn implfmfntbtion dfpfndfnt mbnnfr). If tif idfntififr
     * dbnnot bf pbrsfd by tif providfr tifn bn {@link
     * dom.sun.tools.bttbdi.AttbdiNotSupportfdExdfption AttbdiNotSupportfdExdfption}
     * is tirown. Ondf pbrsfd tiis mftiod bttfmpts to bttbdi to tif Jbvb virtubl mbdiinf.
     * If tif providfr dftfdts tibt tif idfntififr dorrfsponds to b Jbvb virtubl mbdiinf
     * tibt dofs not fxist, or it dorrfsponds to b Jbvb virtubl mbdiinf tibt dofs not support
     * tif bttbdi mfdibnism implfmfntfd by tiis providfr, or it dftfdts tibt tif
     * Jbvb virtubl mbdiinf is b vfrsion to wiidi tiis providfr dbnnot bttbdi, tifn
     * bn <dodf>AttbdiNotSupportfdExdfption</dodf> is tirown. </p>
     *
     * @pbrbm  id
     *         Tif bbstrbdt idfntififr tibt idfntififs tif Jbvb virtubl mbdiinf.
     *
     * @rfturn  VirtublMbdiinf rfprfsfnting tif tbrgft virtubl mbdiinf.
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr ibs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdi.AttbdiPfrmission AttbdiPfrmission}
     *          <tt>("bttbdiVirtublMbdiinf")</tt>, or otifr pfrmission
     *          rfquirfd by tif implfmfntbtion.
     *
     * @tirows  AttbdiNotSupportfdExdfption
     *          If tif idfntififr dbnnot bf pbrsfd, or it dorrfsponds to
     *          to b Jbvb virtubl mbdiinf tibt dofs not fxist, or it
     *          dorrfsponds to b Jbvb virtubl mbdiinf wiidi tiis
     *          providfr dbnnot bttbdi.
     *
     * @tirows  IOExdfption
     *          If somf otifr I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>id</dodf> is <dodf>null</dodf>
     */
    publid bbstrbdt VirtublMbdiinf bttbdiVirtublMbdiinf(String id)
        tirows AttbdiNotSupportfdExdfption, IOExdfption;

    /**
     * Attbdifs to b Jbvb virtubl mbdiinf.
     *
     * <p> A Jbvb virtubl mbdiinf dbn bf dfsdribfd using b {@link
     * dom.sun.tools.bttbdi.VirtublMbdiinfDfsdriptor VirtublMbdiinfDfsdriptor}.
     * Tiis mftiod invokfs tif dfsdriptor's {@link
     * dom.sun.tools.bttbdi.VirtublMbdiinfDfsdriptor#providfr() providfr()} mftiod
     * to difdk tibt it is fqubl to tiis providfr. It tifn bttfmpts to bttbdi to tif
     * Jbvb virtubl mbdiinf.
     *
     * @pbrbm  vmd
     *         Tif virtubl mbdiinf dfsdriptor
     *
     * @rfturn  VirtublMbdiinf rfprfsfnting tif tbrgft virtubl mbdiinf.
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr ibs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdi.AttbdiPfrmission AttbdiPfrmission}
     *          <tt>("bttbdiVirtublMbdiinf")</tt>, or otifr pfrmission
     *          rfquirfd by tif implfmfntbtion.
     *
     * @tirows  AttbdiNotSupportfdExdfption
     *          If tif dfsdriptor's {@link
     *          dom.sun.tools.bttbdi.VirtublMbdiinfDfsdriptor#providfr() providfr()} mftiod
     *          rfturns b providfr tibt is not tiis providfr, or it dofs not dorrfspond
     *          to b Jbvb virtubl mbdiinf to wiidi tiis providfr dbn bttbdi.
     *
     * @tirows  IOExdfption
     *          If somf otifr I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>vmd</dodf> is <dodf>null</dodf>
     */
    publid VirtublMbdiinf bttbdiVirtublMbdiinf(VirtublMbdiinfDfsdriptor vmd)
        tirows AttbdiNotSupportfdExdfption, IOExdfption
    {
        if (vmd.providfr() != tiis) {
            tirow nfw AttbdiNotSupportfdExdfption("providfr mismbtdi");
        }
        rfturn bttbdiVirtublMbdiinf(vmd.id());
    }

    /**
     * Lists tif Jbvb virtubl mbdiinfs known to tiis providfr.
     *
     * <p> Tiis mftiod rfturns b list of {@link
     * dom.sun.tools.bttbdi.VirtublMbdiinfDfsdriptor} flfmfnts. Ebdi
     * <dodf>VirtublMbdiinfDfsdriptor</dodf> dfsdribfs b Jbvb virtubl mbdiinf
     * to wiidi tiis providfr dbn <i>potfntiblly</i> bttbdi.  Tifrf isn't bny
     * gubrbntff tibt invoking {@link #bttbdiVirtublMbdiinf(VirtublMbdiinfDfsdriptor)
     * bttbdiVirtublMbdiinf} on fbdi dfsdriptor in tif list will suddffd.
     *
     * @rfturn  Tif list of virtubl mbdiinf dfsdriptors wiidi dfsdribf tif
     *          Jbvb virtubl mbdiinfs known to tiis providfr (mby bf fmpty).
     */
    publid bbstrbdt List<VirtublMbdiinfDfsdriptor> listVirtublMbdiinfs();


    /**
     * Rfturns b list of tif instbllfd bttbdi providfrs.
     *
     * <p> An AttbdiProvidfr is instbllfd on tif plbtform if:
     *
     * <ul>
     *   <li><p>It is instbllfd in b JAR filf tibt is visiblf to tif dffining
     *   dlbss lobdfr of tif AttbdiProvidfr typf (usublly, but not rfquirfd
     *   to bf, tif {@link jbvb.lbng.ClbssLobdfr#gftSystfmClbssLobdfr systfm
     *   dlbss lobdfr}).</p></li>
     *
     *   <li><p>Tif JAR filf dontbins b providfr donfigurbtion nbmfd
     *   <tt>dom.sun.tools.bttbdi.spi.AttbdiProvidfr</tt> in tif rfsourdf dirfdtory
     *   <tt>META-INF/sfrvidfs</tt>. </p></li>
     *
     *   <li><p>Tif providfr donfigurbtion filf lists tif full-qublififd dlbss
     *   nbmf of tif AttbdiProvidfr implfmfntbtion. </p></li>
     * </ul>
     *
     * <p> Tif formbt of tif providfr donfigurbtion filf is onf fully-qublififd
     * dlbss nbmf pfr linf. Spbdf bnd tbb dibrbdtfrs surrounding fbdi dlbss nbmf,
     * bs wfll bs blbnk linfs brf ignorfd. Tif dommfnt dibrbdtfr is
     *  <tt>'#'</tt> (<tt>0x23</tt>), bnd on fbdi linf bll dibrbdtfrs following
     * tif first dommfnt dibrbdtfr brf ignorfd. Tif filf must bf fndodfd in
     * UTF-8. </p>
     *
     * <p> AttbdiProvidfr implfmfntbtions brf lobdfd bnd instbntibtfd
     * (using tif zfro-brg donstrudtor) bt tif first invodbtion of tiis mftiod.
     * Tif list rfturnfd by tif first invodbtion of tiis mftiod is tif list
     * of providfrs. Subsfqufnt invodbtions of tiis mftiod rfturn b list of tif sbmf
     * providfrs. Tif list is unmodifbblf.</p>
     *
     * @rfturn  A list of tif instbllfd bttbdi providfrs.
     */
    publid stbtid List<AttbdiProvidfr> providfrs() {
        syndironizfd (lodk) {
            if (providfrs == null) {
                providfrs = nfw ArrbyList<AttbdiProvidfr>();

                SfrvidfLobdfr<AttbdiProvidfr> providfrLobdfr =
                    SfrvidfLobdfr.lobd(AttbdiProvidfr.dlbss,
                                       AttbdiProvidfr.dlbss.gftClbssLobdfr());

                Itfrbtor<AttbdiProvidfr> i = providfrLobdfr.itfrbtor();

                wiilf (i.ibsNfxt()) {
                    try {
                        providfrs.bdd(i.nfxt());
                    } dbtdi (Tirowbblf t) {
                        if (t instbndfof TirfbdDfbti) {
                            TirfbdDfbti td = (TirfbdDfbti)t;
                            tirow td;
                        }
                        // Ignorf frrors bnd fxdfptions
                        Systfm.frr.println(t);
                    }
                }
            }
            rfturn Collfdtions.unmodifibblfList(providfrs);
        }
    }
}
