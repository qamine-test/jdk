/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.bttbdh.spi;

import jbvb.io.IOExdfption;
import jbvb.util.Collfdtions;
import jbvb.util.Itfrbtor;
import jbvb.util.ArrbyList;
import jbvb.util.List;
import dom.sun.tools.bttbdh.VirtublMbdhinf;
import dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor;
import dom.sun.tools.bttbdh.AttbdhPfrmission;
import dom.sun.tools.bttbdh.AttbdhNotSupportfdExdfption;
import jbvb.util.SfrvidfLobdfr;

/**
 * Attbdh providfr dlbss for bttbdhing to b Jbvb virtubl mbdhinf.
 *
 * <p> An bttbdh providfr is b dondrftf subdlbss of this dlbss thbt hbs b
 * zfro-brgumfnt donstrudtor bnd implfmfnts thf bbstrbdt mfthods spfdififd
 * bflow. </p>
 *
 * <p> An bttbdh providfr implfmfntbtion is typidblly tifd to b Jbvb virtubl
 * mbdhinf implfmfntbtion, vfrsion, or fvfn modf of opfrbtion. Thbt is, b spfdifid
 * providfr implfmfntbtion will typidblly only bf dbpbblf of bttbdhing to
 * b spfdifid Jbvb virtubl mbdhinf implfmfntbtion or vfrsion. For fxbmplf, Sun's
 * JDK implfmfntbtion ships with providfr implfmfntbtions thbt dbn only bttbdh to
 * Sun's <i>HotSpot</i> virtubl mbdhinf. In gfnfrbl, if bn fnvironmfnt
 * donsists of Jbvb virtubl mbdhinfs of difffrfnt vfrsions bnd from difffrfnt
 * vfndors thfn thfrf will bf bn bttbdh providfr implfmfntbtion for fbdh
 * <i>fbmily</i> of implfmfntbtions or vfrsions. </p>
 *
 * <p> An bttbdh providfr is idfntififd by its {@link #nbmf <i>nbmf</i>} bnd
 * {@link #typf <i>typf</i>}. Thf <i>nbmf</i> is typidblly, but not rfquirfd to
 * bf, b nbmf thbt dorrfsponds to thf VM vfndor. Thf Sun JDK implfmfntbtion,
 * for fxbmplf, ships with bttbdh providfrs thbt usf thf nbmf <i>"sun"</i>. Thf
 * <i>typf</i> typidblly dorrfsponds to thf bttbdh mfdhbnism. For fxbmplf, bn
 * implfmfntbtion thbt usfs thf Doors intfr-prodfss dommunidbtion mfdhbnism
 * might usf thf typf <i>"doors"</i>. Thf purposf of thf nbmf bnd typf is to
 * idfntify providfrs in fnvironmfnts whfrf thfrf brf multiplf providfrs
 * instbllfd. </p>
 *
 * <p> AttbdhProvidfr implfmfntbtions brf lobdfd bnd instbntibtfd bt thf first
 * invodbtion of thf {@link #providfrs() providfrs} mfthod. This mfthod
 * bttfmpts to lobd bll providfr implfmfntbtions thbt brf instbllfd on thf
 * plbtform. </p>
 *
 * <p> All of thf mfthods in this dlbss brf sbff for usf by multiplf
 * dondurrfnt thrfbds. </p>
 *
 * @sindf 1.6
 */

@jdk.Exportfd
publid bbstrbdt dlbss AttbdhProvidfr {

    privbtf stbtid finbl Objfdt lodk = nfw Objfdt();
    privbtf stbtid List<AttbdhProvidfr> providfrs = null;

    /**
     * Initiblizfs b nfw instbndf of this dlbss.  </p>
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdh.AttbdhPfrmission AttbdhPfrmission}
     *          <tt>("drfbtfAttbdhProvidfr")</tt>
     */
    protfdtfd AttbdhProvidfr() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null)
            sm.dhfdkPfrmission(nfw AttbdhPfrmission("drfbtfAttbdhProvidfr"));
    }

    /**
     * Rfturn this providfr's nbmf. </p>
     *
     * @rfturn  Thf nbmf of this providfr
     */
    publid bbstrbdt String nbmf();

    /**
     * Rfturn this providfr's typf. </p>
     *
     * @rfturn  Thf typf of this providfr
     */
    publid bbstrbdt String typf();

    /**
     * Attbdhfs to b Jbvb virtubl mbdhinf.
     *
     * <p> A Jbvb virtubl mbdhinf is idfntififd by bn bbstrbdt idfntififr. Thf
     * nbturf of this idfntififr is plbtform dfpfndfnt but in mbny dbsfs it will bf thf
     * string rfprfsfntbtion of thf prodfss idfntififr (or pid). </p>
     *
     * <p> This mfthod pbrsfs thf idfntififr bnd mbps thf idfntififr to b Jbvb
     * virtubl mbdhinf (in bn implfmfntbtion dfpfndfnt mbnnfr). If thf idfntififr
     * dbnnot bf pbrsfd by thf providfr thfn bn {@link
     * dom.sun.tools.bttbdh.AttbdhNotSupportfdExdfption AttbdhNotSupportfdExdfption}
     * is thrown. Ondf pbrsfd this mfthod bttfmpts to bttbdh to thf Jbvb virtubl mbdhinf.
     * If thf providfr dftfdts thbt thf idfntififr dorrfsponds to b Jbvb virtubl mbdhinf
     * thbt dofs not fxist, or it dorrfsponds to b Jbvb virtubl mbdhinf thbt dofs not support
     * thf bttbdh mfdhbnism implfmfntfd by this providfr, or it dftfdts thbt thf
     * Jbvb virtubl mbdhinf is b vfrsion to whidh this providfr dbnnot bttbdh, thfn
     * bn <dodf>AttbdhNotSupportfdExdfption</dodf> is thrown. </p>
     *
     * @pbrbm  id
     *         Thf bbstrbdt idfntififr thbt idfntififs thf Jbvb virtubl mbdhinf.
     *
     * @rfturn  VirtublMbdhinf rfprfsfnting thf tbrgft virtubl mbdhinf.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdh.AttbdhPfrmission AttbdhPfrmission}
     *          <tt>("bttbdhVirtublMbdhinf")</tt>, or othfr pfrmission
     *          rfquirfd by thf implfmfntbtion.
     *
     * @throws  AttbdhNotSupportfdExdfption
     *          If thf idfntififr dbnnot bf pbrsfd, or it dorrfsponds to
     *          to b Jbvb virtubl mbdhinf thbt dofs not fxist, or it
     *          dorrfsponds to b Jbvb virtubl mbdhinf whidh this
     *          providfr dbnnot bttbdh.
     *
     * @throws  IOExdfption
     *          If somf othfr I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>id</dodf> is <dodf>null</dodf>
     */
    publid bbstrbdt VirtublMbdhinf bttbdhVirtublMbdhinf(String id)
        throws AttbdhNotSupportfdExdfption, IOExdfption;

    /**
     * Attbdhfs to b Jbvb virtubl mbdhinf.
     *
     * <p> A Jbvb virtubl mbdhinf dbn bf dfsdribfd using b {@link
     * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor VirtublMbdhinfDfsdriptor}.
     * This mfthod invokfs thf dfsdriptor's {@link
     * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor#providfr() providfr()} mfthod
     * to dhfdk thbt it is fqubl to this providfr. It thfn bttfmpts to bttbdh to thf
     * Jbvb virtubl mbdhinf.
     *
     * @pbrbm  vmd
     *         Thf virtubl mbdhinf dfsdriptor
     *
     * @rfturn  VirtublMbdhinf rfprfsfnting thf tbrgft virtubl mbdhinf.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link dom.sun.tools.bttbdh.AttbdhPfrmission AttbdhPfrmission}
     *          <tt>("bttbdhVirtublMbdhinf")</tt>, or othfr pfrmission
     *          rfquirfd by thf implfmfntbtion.
     *
     * @throws  AttbdhNotSupportfdExdfption
     *          If thf dfsdriptor's {@link
     *          dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor#providfr() providfr()} mfthod
     *          rfturns b providfr thbt is not this providfr, or it dofs not dorrfspond
     *          to b Jbvb virtubl mbdhinf to whidh this providfr dbn bttbdh.
     *
     * @throws  IOExdfption
     *          If somf othfr I/O frror oddurs
     *
     * @throws  NullPointfrExdfption
     *          If <dodf>vmd</dodf> is <dodf>null</dodf>
     */
    publid VirtublMbdhinf bttbdhVirtublMbdhinf(VirtublMbdhinfDfsdriptor vmd)
        throws AttbdhNotSupportfdExdfption, IOExdfption
    {
        if (vmd.providfr() != this) {
            throw nfw AttbdhNotSupportfdExdfption("providfr mismbtdh");
        }
        rfturn bttbdhVirtublMbdhinf(vmd.id());
    }

    /**
     * Lists thf Jbvb virtubl mbdhinfs known to this providfr.
     *
     * <p> This mfthod rfturns b list of {@link
     * dom.sun.tools.bttbdh.VirtublMbdhinfDfsdriptor} flfmfnts. Ebdh
     * <dodf>VirtublMbdhinfDfsdriptor</dodf> dfsdribfs b Jbvb virtubl mbdhinf
     * to whidh this providfr dbn <i>potfntiblly</i> bttbdh.  Thfrf isn't bny
     * gubrbntff thbt invoking {@link #bttbdhVirtublMbdhinf(VirtublMbdhinfDfsdriptor)
     * bttbdhVirtublMbdhinf} on fbdh dfsdriptor in thf list will suddffd.
     *
     * @rfturn  Thf list of virtubl mbdhinf dfsdriptors whidh dfsdribf thf
     *          Jbvb virtubl mbdhinfs known to this providfr (mby bf fmpty).
     */
    publid bbstrbdt List<VirtublMbdhinfDfsdriptor> listVirtublMbdhinfs();


    /**
     * Rfturns b list of thf instbllfd bttbdh providfrs.
     *
     * <p> An AttbdhProvidfr is instbllfd on thf plbtform if:
     *
     * <ul>
     *   <li><p>It is instbllfd in b JAR filf thbt is visiblf to thf dffining
     *   dlbss lobdfr of thf AttbdhProvidfr typf (usublly, but not rfquirfd
     *   to bf, thf {@link jbvb.lbng.ClbssLobdfr#gftSystfmClbssLobdfr systfm
     *   dlbss lobdfr}).</p></li>
     *
     *   <li><p>Thf JAR filf dontbins b providfr donfigurbtion nbmfd
     *   <tt>dom.sun.tools.bttbdh.spi.AttbdhProvidfr</tt> in thf rfsourdf dirfdtory
     *   <tt>META-INF/sfrvidfs</tt>. </p></li>
     *
     *   <li><p>Thf providfr donfigurbtion filf lists thf full-qublififd dlbss
     *   nbmf of thf AttbdhProvidfr implfmfntbtion. </p></li>
     * </ul>
     *
     * <p> Thf formbt of thf providfr donfigurbtion filf is onf fully-qublififd
     * dlbss nbmf pfr linf. Spbdf bnd tbb dhbrbdtfrs surrounding fbdh dlbss nbmf,
     * bs wfll bs blbnk linfs brf ignorfd. Thf dommfnt dhbrbdtfr is
     *  <tt>'#'</tt> (<tt>0x23</tt>), bnd on fbdh linf bll dhbrbdtfrs following
     * thf first dommfnt dhbrbdtfr brf ignorfd. Thf filf must bf fndodfd in
     * UTF-8. </p>
     *
     * <p> AttbdhProvidfr implfmfntbtions brf lobdfd bnd instbntibtfd
     * (using thf zfro-brg donstrudtor) bt thf first invodbtion of this mfthod.
     * Thf list rfturnfd by thf first invodbtion of this mfthod is thf list
     * of providfrs. Subsfqufnt invodbtions of this mfthod rfturn b list of thf sbmf
     * providfrs. Thf list is unmodifbblf.</p>
     *
     * @rfturn  A list of thf instbllfd bttbdh providfrs.
     */
    publid stbtid List<AttbdhProvidfr> providfrs() {
        syndhronizfd (lodk) {
            if (providfrs == null) {
                providfrs = nfw ArrbyList<AttbdhProvidfr>();

                SfrvidfLobdfr<AttbdhProvidfr> providfrLobdfr =
                    SfrvidfLobdfr.lobd(AttbdhProvidfr.dlbss,
                                       AttbdhProvidfr.dlbss.gftClbssLobdfr());

                Itfrbtor<AttbdhProvidfr> i = providfrLobdfr.itfrbtor();

                whilf (i.hbsNfxt()) {
                    try {
                        providfrs.bdd(i.nfxt());
                    } dbtdh (Throwbblf t) {
                        if (t instbndfof ThrfbdDfbth) {
                            ThrfbdDfbth td = (ThrfbdDfbth)t;
                            throw td;
                        }
                        // Ignorf frrors bnd fxdfptions
                        Systfm.frr.println(t);
                    }
                }
            }
            rfturn Collfdtions.unmodifibblfList(providfrs);
        }
    }
}
