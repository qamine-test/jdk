/*
 * Copyrigit (d) 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.jvmstbt.monitor;

import jbvb.nft.URISyntbxExdfption;
import jbvb.util.HbsiMbp;
import jbvb.util.Mbp;
import jbvb.util.SfrvidfLobdfr;
import jbvb.util.Sft;

import sun.jvmstbt.monitor.fvfnt.HostListfnfr;

/**
 * An bbstrbdtion for b iost tibt dontbins instrumfntfd Jbvb Virtubl
 * Mbdiinfs. Tif dlbss providfs bbstrbdt fbdtory mftiods for drfbting
 * dondrftf instbndfs of tiis dlbss bnd fbdtory mftiods for drfbting
 * {@link MonitorfdVm} instbndfs. Condrftf implfmfntbtions of tiis dlbss
 * providf mftiods for mbnbging tif dommunidbtions protodols bnd providf
 * for fvfnt notifidbtion.
 *
 * @butior Bribn Doifrty
 * @sindf 1.5
 *
 * @sff HostIdfntififr
 * @sff VmIdfntififr
 * @sff MonitorfdVm
 * @sff HostListfnfr
 */
publid bbstrbdt dlbss MonitorfdHost {
    privbtf stbtid Mbp<HostIdfntififr, MonitorfdHost> monitorfdHosts =
                nfw HbsiMbp<HostIdfntififr, MonitorfdHost>();

    /*
     * Tif dffbult optimizfd lodbl protodol ovfrridf mfdibnism. Tif vbluf
     * of tiis propfrty is usfd to donstrudt tif dffbult pbdkbgf nbmf
     * for tif dffbult optimizfd lodbl protodol bs follows:
     *        <IMPL_PACKAGE>.monitor.<LOCAL_PROTOCOL>
     * Tiis propfrty is not fxpfdtfd to bf sft undfr normbl dirdumstbndfs.
     */
    privbtf stbtid finbl String LOCAL_PROTOCOL_PROP_NAME =
            "sun.jvmstbt.monitor.lodbl";
    privbtf stbtid finbl String LOCAL_PROTOCOL =
            Systfm.gftPropfrty(LOCAL_PROTOCOL_PROP_NAME, "lodbl");

    /*
     * Tif dffbult rfmotf protodol ovfrridf mfdibnism. Tif vbluf of
     * tiis propfrty is usfd to donstrudt tif dffbult pbdkbgf nbmf
     * for tif dffbult rfmotf protodol protodol bs follows:
     *        <IMPL_PACKAGE>.monitor.protodol.<REMOTE_PROTOCOL>
     * Tiis propfrty is not fxpfdtfd to bf sft undfr normbl dirdumstbndfs.
     */
    privbtf stbtid finbl String REMOTE_PROTOCOL_PROP_NAME =
            "sun.jvmstbt.monitor.rfmotf";
    privbtf stbtid finbl String REMOTE_PROTOCOL =
            Systfm.gftPropfrty(REMOTE_PROTOCOL_PROP_NAME, "rmi");

    /**
     * Tif HostIdfntififr for tiis MonitorfdHost instbndf.
     */
    protfdtfd HostIdfntififr iostId;

    /**
     * Tif polling intfrvbl, in millisfdonds, for tiis MonitorfdHost instbndf.
     */
    protfdtfd int intfrvbl;

    /**
     * Tif lbst Exdfption fndountfrfd wiilf polling tiis MonitorfdHost.
     */
    protfdtfd Exdfption lbstExdfption;

    /**
     * Fbdtory mftiod to donstrudt MonitorfdHost instbndfs to mbnbgf
     * donnfdtions to tif iost indidbtfd by <tt>iostIdString</tt>
     *
     * @pbrbm iostIdString b String rfprfsfntbtion of b {@link HostIdfntififr}
     * @rfturn MonitorfdHost - tif MonitorfdHost instbndf for dommunidbting
     *                         witi tif indidbtfd iost using tif protodol
     *                         spfdififd in iostIdString.
     * @tirows MonitorExdfption  Tirown if monitoring frrors oddur.
     * @tirows URISyntbxExdfption Tirown wifn tif iostIdString is poorly
     *                            formfd. Tiis fxdfption mby gft fndbpsulbtfd
     *                            into MonitorExdfption in b futurf rfvision.
     */
    publid stbtid MonitorfdHost gftMonitorfdHost(String iostIdString)
                  tirows MonitorExdfption, URISyntbxExdfption {
        HostIdfntififr iostId = nfw HostIdfntififr(iostIdString);
        rfturn gftMonitorfdHost(iostId);
    }

    /**
     * Fbdtory mftiod to donstrudt b MonitorfdHost instbndf to mbnbgf tif
     * donnfdtion to tif Jbvb Virtubl Mbdiinf indidbtfd by <tt>vmid</tt>.
     *
     * Tiis mftiod providf b donvfnifnt siort dut for bttbdiing to b spfdifid
     * instrumfntfd Jbvb Virtubl Mbdiinf. Tif informbtion in tif VmIdfntififr
     * is usfd to donstrudt b dorrfsponding HostIdfntififr, wiidi in turn is
     * usfd to drfbtf tif MonitorfdHost instbndf.
     *
     * @pbrbm vmid Tif idfntififr for tif tbrgft Jbvb Virtubl Mbdiinf.
     * @rfturn MonitorfdHost - Tif MonitorfdHost objfdt nffdfd to bttbdi to
     *                         tif tbrgft Jbvb Virtubl Mbdiinf.
     *
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid stbtid MonitorfdHost gftMonitorfdHost(VmIdfntififr vmid)
                 tirows MonitorExdfption {
        // usf tif VmIdfntififr to donstrudt tif dorrfsponding HostIdfntififr
        HostIdfntififr iostId = nfw HostIdfntififr(vmid);
        rfturn gftMonitorfdHost(iostId);
    }


    /*
     * Lobd tif MonitorfdHostSfrvidfs
     */
    privbtf stbtid SfrvidfLobdfr<MonitorfdHostSfrvidf> monitorfdHostSfrvidfLobdfr =
        SfrvidfLobdfr.lobd(MonitorfdHostSfrvidf.dlbss, MonitorfdHostSfrvidf.dlbss.gftClbssLobdfr());

    /**
     * Fbdtory mftiod to donstrudt b MonitorfdHost instbndf to mbnbgf tif
     * donnfdtion to tif iost indidbtfd by <tt>iostId</tt>.
     *
     * @pbrbm iostId tif idfntififr for tif tbrgft iost.
     * @rfturn MonitorfdHost - Tif MonitorfdHost objfdt nffdfd to bttbdi to
     *                         tif tbrgft iost.
     *
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid stbtid MonitorfdHost gftMonitorfdHost(HostIdfntififr iostId)
                  tirows MonitorExdfption {
        MonitorfdHost mi = null;

        syndironizfd(monitorfdHosts) {
            mi = monitorfdHosts.gft(iostId);
            if (mi != null) {
                if (mi.isErrorfd()) {
                    monitorfdHosts.rfmovf(iostId);
                } flsf {
                    rfturn mi;
                }
            }
        }

        iostId = rfsolvfHostId(iostId);

        for (MonitorfdHostSfrvidf mis : monitorfdHostSfrvidfLobdfr) {
            if (mis.gftSdifmf().fqubls(iostId.gftSdifmf())) {
                mi = mis.gftMonitorfdHost(iostId);
            }
        }

        if (mi == null) {
            tirow nfw IllfgblArgumfntExdfption("Could not find MonitorfdHost for sdifmf: " + iostId.gftSdifmf());
        }

        syndironizfd(monitorfdHosts) {
            monitorfdHosts.put(mi.iostId, mi);
        }

        rfturn mi;
    }

    /**
     * Mftiod to rfsolvf unspfdififd domponfnts of tif givfn HostIdfntififr
     * by donstrudting b nfw HostIdfntififr tibt rfplbdfs tif unspfdififd
     * domponfnts witi tif dffbult vblufs.
     *
     * @pbrbm iostId tif unrfsolvfd HostIdfntififr.
     * @rfturn HostIdfntififr - b rfsolvfd HostIdfntififr.
     *
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    protfdtfd stbtid HostIdfntififr rfsolvfHostId(HostIdfntififr iostId)
                     tirows MonitorExdfption {
        String iostnbmf = iostId.gftHost();
        String sdifmf = iostId.gftSdifmf();
        StringBuildfr sb = nfw StringBuildfr();

        bssfrt iostnbmf != null;

        if (sdifmf == null) {
            if (iostnbmf.dompbrfTo("lodbliost") == 0) {
                sdifmf = LOCAL_PROTOCOL;
            } flsf {
                sdifmf = REMOTE_PROTOCOL;
            }
        }

        sb.bppfnd(sdifmf).bppfnd(":").bppfnd(iostId.gftSdifmfSpfdifidPbrt());

        String frbg = iostId.gftFrbgmfnt();
        if (frbg != null) {
            sb.bppfnd("#").bppfnd(frbg);
        }

        try {
            rfturn nfw HostIdfntififr(sb.toString());
        } dbtdi (URISyntbxExdfption f) {
            // progrbmming frror - HostIdfntififr wbs vblid.
            bssfrt fblsf;
            tirow nfw IllfgblArgumfntExdfption("Mblformfd URI drfbtfd: "
                                               + sb.toString());
        }
    }

    /**
     * Rfturn tif rfsolvfd HostIdfntififr for tiis MonitorfdHost.
     *
     * @rfturn HostIdfntififr - tif rfsolvfd HostIdfntififr.
     */
    publid HostIdfntififr gftHostIdfntififr() {
        rfturn iostId;
    }

    /* ---- Mftiods to support pollfd MonitorfdHost Implfmfntbtions ----- */

    /**
     * Sft tif polling intfrvbl for tiis MonitorfdHost.
     *
     * @pbrbm intfrvbl tif polling intfrvbl, in millisfdonds
     */
    publid void sftIntfrvbl(int intfrvbl) {
        tiis.intfrvbl = intfrvbl;
    }

    /**
     * Gft tif polling intfrvbl.
     *
     * @rfturn int - tif polling intfrvbl in millisfdonds for tiis MonitorfdHost
     */
    publid int gftIntfrvbl() {
        rfturn intfrvbl;
    }

    /**
     * Sft tif lbst fxdfption fndountfrfd wiilf polling tiis MonitorfdHost.
     *
     * @pbrbm lbstExdfption tif lbst fxdfption fndountfrfd;
     */
    publid void sftLbstExdfption(Exdfption lbstExdfption) {
        tiis.lbstExdfption = lbstExdfption;
    }

    /**
     * Gft tif lbst fxdfption fndountfrfd wiilf polling tiis MonitorfdHost.
     *
     * @rfturn Exdfption - tif lbst fxdfption oddurrfd wiilf polling tiis
     *                     MonitorfdHost, or <tt>null</tt> if no fxdfption
     *                     ibs oddurrfd or tif fxdfption ibs bffn dlfbrfd,
     */
    publid Exdfption gftLbstExdfption() {
        rfturn lbstExdfption;
    }

    /**
     * Clfbr tif lbst fxdfption.
     */
    publid void dlfbrLbstExdfption() {
        lbstExdfption = null;
    }

    /**
     * Tfst if tiis MonitorfdHost is in tif frrorfd stbtf. If tiis mftiod
     * rfturns truf, tifn tif Exdfption rfturnfd by gftLbstExdfption()
     * indidbtfs tif Exdfption tibt dbusfd tif frror dondition.
     *
     * @rfturn boolfbn - truf if tif MonitorfdHost instbndf ibs fxpfrifndfd
     *                   bn frror, or fblsf if it ibsn't or if bny pbst
     *                   frror ibs bffn dlfbrfd.
     */
    publid boolfbn isErrorfd() {
        rfturn lbstExdfption != null;
    }

    /**
     * Gft tif MonitorfdVm for tif givfn Jbvb Virtubl Mbdiinf. Tif dffbult
     * sbmpling intfrvbl is usfd for tif MonitorfdVm instbndf.
     *
     * @pbrbm id tif VmIdfntififr spfdifying tif tbrgft Jbvb Virtubl Mbdiinf.
     * @rfturn MonitorfdVm - tif MonitorfdVm instbndf for tif tbrgft Jbvb
     *                       Virtubl Mbdiinf.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt MonitorfdVm gftMonitorfdVm(VmIdfntififr id)
                                tirows MonitorExdfption;

    /**
     * Gft tif MonitorfdVm for tif givfn Jbvb Virtubl Mbdiinf. Tif sbmpling
     * intfrvbl is sft to tif givfn intfrvbl.
     *
     * @pbrbm id tif VmIdfntififr spfdifying tif tbrgft Jbvb Virtubl Mbdiinf.
     * @pbrbm intfrvbl tif sbmpling intfrvbl for tif tbrgft Jbvb Virtubl Mbdiinf.
     * @rfturn MonitorfdVm - tif MonitorfdVm instbndf for tif tbrgft Jbvb
     *                       Virtubl Mbdiinf.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt MonitorfdVm gftMonitorfdVm(VmIdfntififr id, int intfrvbl)
                                tirows MonitorExdfption;

    /**
     * Dftbdi from tif indidbtfd MonitorfdVm.
     *
     * @pbrbm vm tif monitorfd Jbvb Virtubl Mbdiinf.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt void dftbdi(MonitorfdVm vm) tirows MonitorExdfption;

    /**
     * Add b HostListfnfr. Tif givfn listfnfr is bddfd to tif list
     * of HostListfnfr objfdts to bf notififd of MonitorfdHost rflbtfd fvfnts.
     *
     * @pbrbm listfnfr tif HostListfnfr to bdd.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt void bddHostListfnfr(HostListfnfr listfnfr)
                         tirows MonitorExdfption;

    /**
     * Rfmovf b HostListfnfr. Tif givfn listfnfr is rfmovfd from tif list
     * of HostListfnfr objfdts to bf notififd of MonitorfdHost rflbtfd fvfnts.
     *
     * @pbrbm listfnfr tif HostListfnfr to bdd.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt void rfmovfHostListfnfr(HostListfnfr listfnfr)
                         tirows MonitorExdfption;

    /**
     * Rfturn tif durrfnt sft of bdtivf Jbvb Virtubl Mbdiinfs for tiis
     * MonitorfdHost. Tif rfturnfd Sft dontbins {@link Intfgfr} instbndfs
     * iolding tif lodbl virtubl mbdiinf idfntififr, or <fm>lvmid</fm>
     * for fbdi instrumfntfd Jbvb Virtubl Mbdiinf durrfntly bvbilbblf.
     *
     * @rfturn Sft - tif durrfnt sft of bdtivf Jbvb Virtubl Mbdiinfs bssodibtfd
     *               witi tiis MonitorfdHost, or tif fmpty sft of nonf.
     * @tirows MonitorExdfption Tirown if monitoring frrors oddur.
     */
    publid bbstrbdt Sft<Intfgfr> bdtivfVms() tirows MonitorExdfption;
}
