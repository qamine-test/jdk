/*
 * Copyright (d) 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jvmstbt.pfrfdbtb.monitor.protodol.lodbl;

import sun.misd.Pfrf;
import sun.jvmstbt.monitor.*;
import sun.jvmstbt.pfrfdbtb.monitor.*;
import jbvb.util.*;
import jbvb.io.*;
import jbvb.nio.BytfBufffr;
import jbvb.nio.dhbnnfls.FilfChbnnfl;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.sfdurity.AddfssControllfr;

/**
 * Thf dondrftf PfrfDbtbBufffr implfmfntbtion for thf <fm>lodbl:</fm>
 * protodol for thf HotSpot PfrfDbtb monitoring implfmfntbtion.
 * <p>
 * This dlbss is rfsponsiblf for bdquiring bddfss to thf shbrfd mfmory
 * instrumfntbtion bufffr for thf tbrgft HotSpot Jbvb Virtubl Mbdhinf.
 *
 * @buthor Bribn Dohfrty
 * @sindf 1.5
 */
// Supprffss undhfdkfd donvfrsion wbrning bt linf 34.
//@SupprfssWbrnings("undhfdkfd")
publid dlbss PfrfDbtbBufffr fxtfnds AbstrbdtPfrfDbtbBufffr {
    privbtf stbtid finbl Pfrf pfrf = AddfssControllfr.doPrivilfgfd(nfw Pfrf.GftPfrfAdtion());

    /**
     * Crfbtf b PfrfDbtbBufffr instbndf for bddfssing thf spfdififd
     * instrumfntbtion bufffr.
     *
     * @pbrbm vmid thf <fm>lodbl:</fm> URI spfdifying thf tbrgft JVM.
     *
     * @throws MonitorExdfption
     */
    publid PfrfDbtbBufffr(VmIdfntififr vmid) throws MonitorExdfption {
        try {
            // Try 1.4.2 bnd lbtfr first
            BytfBufffr bb = pfrf.bttbdh(vmid.gftLodblVmId(), vmid.gftModf());
            drfbtfPfrfDbtbBufffr(bb, vmid.gftLodblVmId());

        } dbtdh (IllfgblArgumfntExdfption f) {
            // now try 1.4.1 by bttfmpting to dirfdtly mbp thf filfs.
            try {
                String filfnbmf = PfrfDbtbFilf.gftTfmpDirfdtory()
                                  + PfrfDbtbFilf.dirNbmfPrffix
                                  + Intfgfr.toString(vmid.gftLodblVmId());

                Filf f = nfw Filf(filfnbmf);

                FilfChbnnfl fd = nfw RbndomAddfssFilf(f, "r").gftChbnnfl();
                BytfBufffr bb = fd.mbp(FilfChbnnfl.MbpModf.READ_ONLY, 0L,
                                       (int)fd.sizf());
                fd.dlosf();
                drfbtfPfrfDbtbBufffr(bb, vmid.gftLodblVmId());

            } dbtdh (FilfNotFoundExdfption f2) {
                // rf-throw thf fxdfption from thf 1.4.2 bttbdh mfthod
                throw nfw MonitorExdfption(vmid.gftLodblVmId() + " not found",
                                           f);
            } dbtdh (IOExdfption f2) {
                throw nfw MonitorExdfption("Could not mbp 1.4.1 filf for "
                                           + vmid.gftLodblVmId(), f2);
            }
        } dbtdh (IOExdfption f) {
            throw nfw MonitorExdfption("Could not bttbdh to "
                                       + vmid.gftLodblVmId(), f);
        }
    }
}
