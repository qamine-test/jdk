/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.sql;

import jbvb.mbth.BigDfdimbl;
import jbvb.util.Cblfndbr;
import jbvb.io.Rfbdfr;
import jbvb.io.InputStrfbm;

/**
 * An objfdt thbt rfprfsfnts b prfdompilfd SQL stbtfmfnt.
 * <P>A SQL stbtfmfnt is prfdompilfd bnd storfd in b
 * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt. This objfdt dbn thfn bf usfd to
 * fffidifntly fxfdutf this stbtfmfnt multiplf timfs.
 *
 * <P><B>Notf:</B> Thf sfttfr mfthods (<dodf>sftShort</dodf>, <dodf>sftString</dodf>,
 * bnd so on) for sftting IN pbrbmftfr vblufs
 * must spfdify typfs thbt brf dompbtiblf with thf dffinfd SQL typf of
 * thf input pbrbmftfr. For instbndf, if thf IN pbrbmftfr hbs SQL typf
 * <dodf>INTEGER</dodf>, thfn thf mfthod <dodf>sftInt</dodf> should bf usfd.
 *
 * <p>If brbitrbry pbrbmftfr typf donvfrsions brf rfquirfd, thf mfthod
 * <dodf>sftObjfdt</dodf> should bf usfd with b tbrgft SQL typf.
 * <P>
 * In thf following fxbmplf of sftting b pbrbmftfr, <dodf>don</dodf> rfprfsfnts
 * bn bdtivf donnfdtion:
 * <PRE>
 *   PrfpbrfdStbtfmfnt pstmt = don.prfpbrfStbtfmfnt("UPDATE EMPLOYEES
 *                                     SET SALARY = ? WHERE ID = ?");
 *   pstmt.sftBigDfdimbl(1, 153833.00)
 *   pstmt.sftInt(2, 110592)
 * </PRE>
 *
 * @sff Connfdtion#prfpbrfStbtfmfnt
 * @sff RfsultSft
 */

publid intfrfbdf PrfpbrfdStbtfmfnt fxtfnds Stbtfmfnt {

    /**
     * Exfdutfs thf SQL qufry in this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * bnd rfturns thf <dodf>RfsultSft</dodf> objfdt gfnfrbtfd by thf qufry.
     *
     * @rfturn b <dodf>RfsultSft</dodf> objfdt thbt dontbins thf dbtb produdfd by thf
     *         qufry; nfvfr <dodf>null</dodf>
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf> or thf SQL
     *            stbtfmfnt dofs not rfturn b <dodf>RfsultSft</dodf> objfdt
     * @throws SQLTimfoutExdfption whfn thf drivfr hbs dftfrminfd thbt thf
     * timfout vbluf thbt wbs spfdififd by thf {@dodf sftQufryTimfout}
     * mfthod hbs bffn fxdffdfd bnd hbs bt lfbst bttfmptfd to dbndfl
     * thf durrfntly running {@dodf Stbtfmfnt}
     */
    RfsultSft fxfdutfQufry() throws SQLExdfption;

    /**
     * Exfdutfs thf SQL stbtfmfnt in this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * whidh must bf bn SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnt, sudh bs <dodf>INSERT</dodf>, <dodf>UPDATE</dodf> or
     * <dodf>DELETE</dodf>; or bn SQL stbtfmfnt thbt rfturns nothing,
     * sudh bs b DDL stbtfmfnt.
     *
     * @rfturn fithfr (1) thf row dount for SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnts
     *         or (2) 0 for SQL stbtfmfnts thbt rfturn nothing
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or thf SQL stbtfmfnt rfturns b <dodf>RfsultSft</dodf> objfdt
     * @throws SQLTimfoutExdfption whfn thf drivfr hbs dftfrminfd thbt thf
     * timfout vbluf thbt wbs spfdififd by thf {@dodf sftQufryTimfout}
     * mfthod hbs bffn fxdffdfd bnd hbs bt lfbst bttfmptfd to dbndfl
     * thf durrfntly running {@dodf Stbtfmfnt}
     */
    int fxfdutfUpdbtf() throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     *
     * <P><B>Notf:</B> You must spfdify thf pbrbmftfr's SQL typf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm sqlTypf thf SQL typf dodf dffinfd in <dodf>jbvb.sql.Typfs</dodf>
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>sqlTypf</dodf> is
     * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
     * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
     * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
     *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
     * or  <dodf>STRUCT</dodf> dbtb typf bnd thf JDBC drivfr dofs not support
     * this dbtb typf
     */
    void sftNull(int pbrbmftfrIndfx, int sqlTypf) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>boolfbn</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>BIT</dodf> or <dodf>BOOLEAN</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt;
     * if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBoolfbn(int pbrbmftfrIndfx, boolfbn x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>bytf</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>TINYINT</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBytf(int pbrbmftfrIndfx, bytf x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>short</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>SMALLINT</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftShort(int pbrbmftfrIndfx, short x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>int</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>INTEGER</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftInt(int pbrbmftfrIndfx, int x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>long</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>BIGINT</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftLong(int pbrbmftfrIndfx, long x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>flobt</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>REAL</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftFlobt(int pbrbmftfrIndfx, flobt x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>doublf</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>DOUBLE</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftDoublf(int pbrbmftfrIndfx, doublf x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.mbth.BigDfdimbl</dodf> vbluf.
     * Thf drivfr donvfrts this to bn SQL <dodf>NUMERIC</dodf> vbluf whfn
     * it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBigDfdimbl(int pbrbmftfrIndfx, BigDfdimbl x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb <dodf>String</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>VARCHAR</dodf> or <dodf>LONGVARCHAR</dodf> vbluf
     * (dfpfnding on thf brgumfnt's
     * sizf rflbtivf to thf drivfr's limits on <dodf>VARCHAR</dodf> vblufs)
     * whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftString(int pbrbmftfrIndfx, String x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn Jbvb brrby of bytfs.  Thf drivfr donvfrts
     * this to bn SQL <dodf>VARBINARY</dodf> or <dodf>LONGVARBINARY</dodf>
     * (dfpfnding on thf brgumfnt's sizf rflbtivf to thf drivfr's limits on
     * <dodf>VARBINARY</dodf> vblufs) whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBytfs(int pbrbmftfrIndfx, bytf x[]) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf
     * using thf dffbult timf zonf of thf virtubl mbdhinf thbt is running
     * thf bpplidbtion.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>DATE</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Timf</dodf> vbluf.
     * Thf drivfr donvfrts this
     * to bn SQL <dodf>TIME</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf.
     * Thf drivfr
     * donvfrts this to bn SQL <dodf>TIMESTAMP</dodf> vbluf whfn it sfnds it to thf
     * dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>     */
    void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Whfn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf Jbvb input strfbm thbt dontbins thf ASCII pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of bytfs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, int lfngth)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm, whidh
     * will hbvf thf spfdififd numbfr of bytfs.
     *
     * Whfn b vfry lbrgf Unidodf vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Thf dbtb will bf rfbd from thf
     * strfbm bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from Unidodf to thf dbtbbbsf dhbr formbt.
     *
     *Thf bytf formbt of thf Unidodf strfbm must bf b Jbvb UTF-8, bs dffinfd in thf
     *Jbvb Virtubl Mbdhinf Spfdifidbtion.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x b <dodf>jbvb.io.InputStrfbm</dodf> objfdt thbt dontbins thf
     *        Unidodf pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of bytfs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @dfprfdbtfd Usf {@dodf sftChbrbdtfrStrfbm}
     */
    @Dfprfdbtfd
    void sftUnidodfStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                          int lfngth) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Whfn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Thf dbtb will bf rfbd from thf
     * strfbm bs nffdfd until fnd-of-filf is rfbdhfd.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf jbvb input strfbm whidh dontbins thf binbry pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of bytfs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                         int lfngth) throws SQLExdfption;

    /**
     * Clfbrs thf durrfnt pbrbmftfr vblufs immfdibtfly.
     * <P>In gfnfrbl, pbrbmftfr vblufs rfmbin in fordf for rfpfbtfd usf of b
     * stbtfmfnt. Sftting b pbrbmftfr vbluf butombtidblly dlfbrs its
     * prfvious vbluf.  Howfvfr, in somf dbsfs it is usfful to immfdibtfly
     * rflfbsf thf rfsourdfs usfd by thf durrfnt pbrbmftfr vblufs; this dbn
     * bf donf by dblling thf mfthod <dodf>dlfbrPbrbmftfrs</dodf>.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void dlfbrPbrbmftfrs() throws SQLExdfption;

    //----------------------------------------------------------------------
    // Advbndfd ffbturfs:

   /**
    * Sfts thf vbluf of thf dfsignbtfd pbrbmftfr with thf givfn objfdt.
    *
    * This mfthod is similbr to {@link #sftObjfdt(int pbrbmftfrIndfx,
    * Objfdt x, int tbrgftSqlTypf, int sdblfOrLfngth)},
    * fxdfpt thbt it bssumfs b sdblf of zfro.
    *
    * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
    * @pbrbm x thf objfdt dontbining thf input pbrbmftfr vbluf
    * @pbrbm tbrgftSqlTypf thf SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
    *                      sfnt to thf dbtbbbsf
    * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
    * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or this
    * mfthod is dbllfd on b dlosfd PrfpbrfdStbtfmfnt
    * @fxdfption SQLFfbturfNotSupportfdExdfption if
    * thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
    * @sff Typfs
    */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf)
      throws SQLExdfption;

    /**
     * <p>Sfts thf vbluf of thf dfsignbtfd pbrbmftfr using thf givfn objfdt.
     *
     * <p>Thf JDBC spfdifidbtion spfdififs b stbndbrd mbpping from
     * Jbvb <dodf>Objfdt</dodf> typfs to SQL typfs.  Thf givfn brgumfnt
     * will bf donvfrtfd to thf dorrfsponding SQL typf bfforf bfing
     * sfnt to thf dbtbbbsf.
     *
     * <p>Notf thbt this mfthod mby bf usfd to pbss dbtbtbbbsf-
     * spfdifid bbstrbdt dbtb typfs, by using b drivfr-spfdifid Jbvb
     * typf.
     *
     * If thf objfdt is of b dlbss implfmfnting thf intfrfbdf <dodf>SQLDbtb</dodf>,
     * thf JDBC drivfr should dbll thf mfthod <dodf>SQLDbtb.writfSQL</dodf>
     * to writf it to thf SQL dbtb strfbm.
     * If, on thf othfr hbnd, thf objfdt is of b dlbss implfmfnting
     * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
     *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>, <dodf>RowId</dodf>, <dodf>SQLXML</dodf>
     * or <dodf>Arrby</dodf>, thf drivfr should pbss it to thf dbtbbbsf bs b
     * vbluf of thf dorrfsponding SQL typf.
     * <P>
     *<b>Notf:</b> Not bll dbtbbbsfs bllow for b non-typfd Null to bf sfnt to
     * thf bbdkfnd. For mbximum portbbility, thf <dodf>sftNull</dodf> or thf
     * <dodf>sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int sqlTypf)</dodf>
     * mfthod should bf usfd
     * instfbd of <dodf>sftObjfdt(int pbrbmftfrIndfx, Objfdt x)</dodf>.
     *<p>
     * <b>Notf:</b> This mfthod throws bn fxdfption if thfrf is bn bmbiguity, for fxbmplf, if thf
     * objfdt is of b dlbss implfmfnting morf thbn onf of thf intfrfbdfs nbmfd bbovf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf objfdt dontbining thf input pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     *  this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or thf typf of thf givfn objfdt is bmbiguous
     */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x) throws SQLExdfption;

    /**
     * Exfdutfs thf SQL stbtfmfnt in this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * whidh mby bf bny kind of SQL stbtfmfnt.
     * Somf prfpbrfd stbtfmfnts rfturn multiplf rfsults; thf <dodf>fxfdutf</dodf>
     * mfthod hbndlfs thfsf domplfx stbtfmfnts bs wfll bs thf simplfr
     * form of stbtfmfnts hbndlfd by thf mfthods <dodf>fxfdutfQufry</dodf>
     * bnd <dodf>fxfdutfUpdbtf</dodf>.
     * <P>
     * Thf <dodf>fxfdutf</dodf> mfthod rfturns b <dodf>boolfbn</dodf> to
     * indidbtf thf form of thf first rfsult.  You must dbll fithfr thf mfthod
     * <dodf>gftRfsultSft</dodf> or <dodf>gftUpdbtfCount</dodf>
     * to rftrifvf thf rfsult; you must dbll <dodf>gftMorfRfsults</dodf> to
     * movf to bny subsfqufnt rfsult(s).
     *
     * @rfturn <dodf>truf</dodf> if thf first rfsult is b <dodf>RfsultSft</dodf>
     *         objfdt; <dodf>fblsf</dodf> if thf first rfsult is bn updbtf
     *         dount or thfrf is no rfsult
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or bn brgumfnt is supplifd to this mfthod
     * @throws SQLTimfoutExdfption whfn thf drivfr hbs dftfrminfd thbt thf
     * timfout vbluf thbt wbs spfdififd by thf {@dodf sftQufryTimfout}
     * mfthod hbs bffn fxdffdfd bnd hbs bt lfbst bttfmptfd to dbndfl
     * thf durrfntly running {@dodf Stbtfmfnt}
     * @sff Stbtfmfnt#fxfdutf
     * @sff Stbtfmfnt#gftRfsultSft
     * @sff Stbtfmfnt#gftUpdbtfCount
     * @sff Stbtfmfnt#gftMorfRfsults

     */
    boolfbn fxfdutf() throws SQLExdfption;

    //--------------------------JDBC 2.0-----------------------------

    /**
     * Adds b sft of pbrbmftfrs to this <dodf>PrfpbrfdStbtfmfnt</dodf>
     * objfdt's bbtdh of dommbnds.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sff Stbtfmfnt#bddBbtdh
     * @sindf 1.2
     */
    void bddBbtdh() throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf
     *        Unidodf dbtb
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftChbrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr,
                          int lfngth) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn
     *  <dodf>REF(&lt;strudturfd-typf&gt;)</dodf> vbluf.
     * Thf drivfr donvfrts this to bn SQL <dodf>REF</dodf> vbluf whfn it
     * sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x bn SQL <dodf>REF</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.2
     */
    void sftRff (int pbrbmftfrIndfx, Rff x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Blob</dodf> objfdt.
     * Thf drivfr donvfrts this to bn SQL <dodf>BLOB</dodf> vbluf whfn it
     * sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x b <dodf>Blob</dodf> objfdt thbt mbps bn SQL <dodf>BLOB</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.2
     */
    void sftBlob (int pbrbmftfrIndfx, Blob x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Clob</dodf> objfdt.
     * Thf drivfr donvfrts this to bn SQL <dodf>CLOB</dodf> vbluf whfn it
     * sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x b <dodf>Clob</dodf> objfdt thbt mbps bn SQL <dodf>CLOB</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.2
     */
    void sftClob (int pbrbmftfrIndfx, Clob x) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Arrby</dodf> objfdt.
     * Thf drivfr donvfrts this to bn SQL <dodf>ARRAY</dodf> vbluf whfn it
     * sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x bn <dodf>Arrby</dodf> objfdt thbt mbps bn SQL <dodf>ARRAY</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.2
     */
    void sftArrby (int pbrbmftfrIndfx, Arrby x) throws SQLExdfption;

    /**
     * Rftrifvfs b <dodf>RfsultSftMftbDbtb</dodf> objfdt thbt dontbins
     * informbtion bbout thf dolumns of thf <dodf>RfsultSft</dodf> objfdt
     * thbt will bf rfturnfd whfn this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * is fxfdutfd.
     * <P>
     * Bfdbusf b <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt is prfdompilfd, it is
     * possiblf to know bbout thf <dodf>RfsultSft</dodf> objfdt thbt it will
     * rfturn without hbving to fxfdutf it.  Consfqufntly, it is possiblf
     * to invokf thf mfthod <dodf>gftMftbDbtb</dodf> on b
     * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt rbthfr thbn wbiting to fxfdutf
     * it bnd thfn invoking thf <dodf>RfsultSft.gftMftbDbtb</dodf> mfthod
     * on thf <dodf>RfsultSft</dodf> objfdt thbt is rfturnfd.
     * <P>
     * <B>NOTE:</B> Using this mfthod mby bf fxpfnsivf for somf drivfrs duf
     * to thf lbdk of undfrlying DBMS support.
     *
     * @rfturn thf dfsdription of b <dodf>RfsultSft</dodf> objfdt's dolumns or
     *         <dodf>null</dodf> if thf drivfr dbnnot rfturn b
     *         <dodf>RfsultSftMftbDbtb</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    RfsultSftMftbDbtb gftMftbDbtb() throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf,
     * using thf givfn <dodf>Cblfndbr</dodf> objfdt.  Thf drivfr usfs
     * thf <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>DATE</dodf> vbluf,
     * whidh thf drivfr thfn sfnds to thf dbtbbbsf.  With
     * b <dodf>Cblfndbr</dodf> objfdt, thf drivfr dbn dbldulbtf thf dbtf
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, thf drivfr usfs thf dffbult
     * timfzonf, whidh is thbt of thf virtubl mbdhinf running thf bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @pbrbm dbl thf <dodf>Cblfndbr</dodf> objfdt thf drivfr will usf
     *            to donstrudt thf dbtf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x, Cblfndbr dbl)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Timf</dodf> vbluf,
     * using thf givfn <dodf>Cblfndbr</dodf> objfdt.  Thf drivfr usfs
     * thf <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIME</dodf> vbluf,
     * whidh thf drivfr thfn sfnds to thf dbtbbbsf.  With
     * b <dodf>Cblfndbr</dodf> objfdt, thf drivfr dbn dbldulbtf thf timf
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, thf drivfr usfs thf dffbult
     * timfzonf, whidh is thbt of thf virtubl mbdhinf running thf bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @pbrbm dbl thf <dodf>Cblfndbr</dodf> objfdt thf drivfr will usf
     *            to donstrudt thf timf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x, Cblfndbr dbl)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf,
     * using thf givfn <dodf>Cblfndbr</dodf> objfdt.  Thf drivfr usfs
     * thf <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIMESTAMP</dodf> vbluf,
     * whidh thf drivfr thfn sfnds to thf dbtbbbsf.  With b
     *  <dodf>Cblfndbr</dodf> objfdt, thf drivfr dbn dbldulbtf thf timfstbmp
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, thf drivfr usfs thf dffbult
     * timfzonf, whidh is thbt of thf virtubl mbdhinf running thf bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @pbrbm dbl thf <dodf>Cblfndbr</dodf> objfdt thf drivfr will usf
     *            to donstrudt thf timfstbmp
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x, Cblfndbr dbl)
            throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     * This vfrsion of thf mfthod <dodf>sftNull</dodf> should
     * bf usfd for usfr-dffinfd typfs bnd REF typf pbrbmftfrs.  Exbmplfs
     * of usfr-dffinfd typfs indludf: STRUCT, DISTINCT, JAVA_OBJECT, bnd
     * nbmfd brrby typfs.
     *
     * <P><B>Notf:</B> To bf portbblf, bpplidbtions must givf thf
     * SQL typf dodf bnd thf fully-qublififd SQL typf nbmf whfn spfdifying
     * b NULL usfr-dffinfd or REF pbrbmftfr.  In thf dbsf of b usfr-dffinfd typf
     * thf nbmf is thf typf nbmf of thf pbrbmftfr itsflf.  For b REF
     * pbrbmftfr, thf nbmf is thf typf nbmf of thf rfffrfndfd typf.  If
     * b JDBC drivfr dofs not nffd thf typf dodf or typf nbmf informbtion,
     * it mby ignorf it.
     *
     * Although it is intfndfd for usfr-dffinfd bnd Rff pbrbmftfrs,
     * this mfthod mby bf usfd to sft b null pbrbmftfr of bny JDBC typf.
     * If thf pbrbmftfr dofs not hbvf b usfr-dffinfd or REF typf, thf givfn
     * typfNbmf is ignorfd.
     *
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm sqlTypf b vbluf from <dodf>jbvb.sql.Typfs</dodf>
     * @pbrbm typfNbmf thf fully-qublififd nbmf of bn SQL usfr-dffinfd typf;
     *  ignorfd if thf pbrbmftfr is not b usfr-dffinfd typf or REF
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>sqlTypf</dodf> is
     * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
     * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
     * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
     *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
     * or  <dodf>STRUCT</dodf> dbtb typf bnd thf JDBC drivfr dofs not support
     * this dbtb typf or if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.2
     */
  void sftNull (int pbrbmftfrIndfx, int sqlTypf, String typfNbmf)
    throws SQLExdfption;

    //------------------------- JDBC 3.0 -----------------------------------

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.nft.URL</dodf> vbluf.
     * Thf drivfr donvfrts this to bn SQL <dodf>DATALINK</dodf> vbluf
     * whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf <dodf>jbvb.nft.URL</dodf> objfdt to bf sft
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.4
     */
    void sftURL(int pbrbmftfrIndfx, jbvb.nft.URL x) throws SQLExdfption;

    /**
     * Rftrifvfs thf numbfr, typfs bnd propfrtifs of this
     * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt's pbrbmftfrs.
     *
     * @rfturn b <dodf>PbrbmftfrMftbDbtb</dodf> objfdt thbt dontbins informbtion
     *         bbout thf numbfr, typfs bnd propfrtifs for fbdh
     *  pbrbmftfr mbrkfr of this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sff PbrbmftfrMftbDbtb
     * @sindf 1.4
     */
    PbrbmftfrMftbDbtb gftPbrbmftfrMftbDbtb() throws SQLExdfption;

    //------------------------- JDBC 4.0 -----------------------------------

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.RowId</dodf> objfdt. Thf
     * drivfr donvfrts this to b SQL <dodf>ROWID</dodf> vbluf whfn it sfnds it
     * to thf dbtbbbsf
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf pbrbmftfr vbluf
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     *
     * @sindf 1.6
     */
    void sftRowId(int pbrbmftfrIndfx, RowId x) throws SQLExdfption;


    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>String</dodf> objfdt.
     * Thf drivfr donvfrts this to b SQL <dodf>NCHAR</dodf> or
     * <dodf>NVARCHAR</dodf> or <dodf>LONGNVARCHAR</dodf> vbluf
     * (dfpfnding on thf brgumfnt's
     * sizf rflbtivf to thf drivfr's limits on <dodf>NVARCHAR</dodf> vblufs)
     * whfn it sfnds it to thf dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm vbluf thf pbrbmftfr vbluf
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftNString(int pbrbmftfrIndfx, String vbluf) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Thf
     * <dodf>Rfbdfr</dodf> rfbds thf dbtb till fnd-of-filf is rfbdhfd. Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.
     * @pbrbm pbrbmftfrIndfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm vbluf thf pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftNChbrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf, long lfngth) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>jbvb.sql.NClob</dodf> objfdt. Thf drivfr donvfrts this to b
     * SQL <dodf>NCLOB</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
     * @pbrbm pbrbmftfrIndfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm vbluf thf pbrbmftfr vbluf
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, NClob vbluf) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Thf rfbdfr must dontbin  thf numbfr
     * of dhbrbdtfrs spfdififd by lfngth othfrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd whfn thf <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     *This mfthod difffrs from thf <dodf>sftChbrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mfthod
     * bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf sfnt to
     * thf sfrvfr bs b <dodf>CLOB</dodf>.  Whfn thf <dodf>sftChbrbdtfrStrfbm</dodf> mfthod is usfd, thf
     * drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs; this mfthod is dbllfd on
     * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or if thf lfngth spfdififd is lfss thbn zfro.
     *
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngth)
       throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.  Thf inputstrfbm must dontbin  thf numbfr
     * of dhbrbdtfrs spfdififd by lfngth othfrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd whfn thf <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     * This mfthod difffrs from thf <dodf>sftBinbryStrfbm (int, InputStrfbm, int)</dodf>
     * mfthod bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf
     * sfnt to thf sfrvfr bs b <dodf>BLOB</dodf>.  Whfn thf <dodf>sftBinbryStrfbm</dodf> mfthod is usfd,
     * thf drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1,
     * thf sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @pbrbm lfngth thf numbfr of bytfs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>;
     *  if thf lfngth spfdififd
     * is lfss thbn zfro or if thf numbfr of bytfs in thf inputstrfbm dofs not mbtdh
     * thf spfdififd lfngth.
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     *
     * @sindf 1.6
     */
     void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm, long lfngth)
        throws SQLExdfption;
    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Thf rfbdfr must dontbin  thf numbfr
     * of dhbrbdtfrs spfdififd by lfngth othfrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd whfn thf <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     * This mfthod difffrs from thf <dodf>sftChbrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mfthod
     * bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf sfnt to
     * thf sfrvfr bs b <dodf>NCLOB</dodf>.  Whfn thf <dodf>sftChbrbdtfrStrfbm</dodf> mfthod is usfd, thf
     * drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if thf lfngth spfdififd is lfss thbn zfro;
     * if thf drivfr dofs not support nbtionbl dhbrbdtfr sfts;
     * if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     *
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngth)
       throws SQLExdfption;

     /**
      * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>jbvb.sql.SQLXML</dodf> objfdt.
      * Thf drivfr donvfrts this to bn
      * SQL <dodf>XML</dodf> vbluf whfn it sfnds it to thf dbtbbbsf.
      *
      * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
      * @pbrbm xmlObjfdt b <dodf>SQLXML</dodf> objfdt thbt mbps bn SQL <dodf>XML</dodf> vbluf
      * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
      *  this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
      * or thf <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
      *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> hbs not bffn dlosfd for
      * thf <dodf>SQLXML</dodf> objfdt
      * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
      *
      * @sindf 1.6
      */
     void sftSQLXML(int pbrbmftfrIndfx, SQLXML xmlObjfdt) throws SQLExdfption;

    /**
     * <p>Sfts thf vbluf of thf dfsignbtfd pbrbmftfr with thf givfn objfdt.
     *
     * If thf sfdond brgumfnt is bn <dodf>InputStrfbm</dodf> thfn thf strfbm must dontbin
     * thf numbfr of bytfs spfdififd by sdblfOrLfngth.  If thf sfdond brgumfnt is b
     * <dodf>Rfbdfr</dodf> thfn thf rfbdfr must dontbin thf numbfr of dhbrbdtfrs spfdififd
     * by sdblfOrLfngth. If thfsf donditions brf not truf thf drivfr will gfnfrbtf b
     * <dodf>SQLExdfption</dodf> whfn thf prfpbrfd stbtfmfnt is fxfdutfd.
     *
     * <p>Thf givfn Jbvb objfdt will bf donvfrtfd to thf givfn tbrgftSqlTypf
     * bfforf bfing sfnt to thf dbtbbbsf.
     *
     * If thf objfdt hbs b dustom mbpping (is of b dlbss implfmfnting thf
     * intfrfbdf <dodf>SQLDbtb</dodf>),
     * thf JDBC drivfr should dbll thf mfthod <dodf>SQLDbtb.writfSQL</dodf> to
     * writf it to thf SQL dbtb strfbm.
     * If, on thf othfr hbnd, thf objfdt is of b dlbss implfmfnting
     * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
     *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>,
     * or <dodf>Arrby</dodf>, thf drivfr should pbss it to thf dbtbbbsf bs b
     * vbluf of thf dorrfsponding SQL typf.
     *
     * <p>Notf thbt this mfthod mby bf usfd to pbss dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf objfdt dontbining thf input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
     * sfnt to thf dbtbbbsf. Thf sdblf brgumfnt mby furthfr qublify this typf.
     * @pbrbm sdblfOrLfngth for <dodf>jbvb.sql.Typfs.DECIMAL</dodf>
     *          or <dodf>jbvb.sql.Typfs.NUMERIC typfs</dodf>,
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs <dodf>InputStrfbm</dodf> bnd <dodf>Rfbdfr</dodf>,
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or
     *            if thf Jbvb Objfdt spfdififd by x is bn InputStrfbm
     *            or Rfbdfr objfdt bnd thf vbluf of thf sdblf pbrbmftfr is lfss
     *            thbn zfro
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff Typfs
     *
     */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf, int sdblfOrLfngth)
            throws SQLExdfption;
   /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Whfn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf Jbvb input strfbm thbt dontbins thf ASCII pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of bytfs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
    */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, long lfngth)
            throws SQLExdfption;
    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Whfn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Thf dbtb will bf rfbd from thf
     * strfbm bs nffdfd until fnd-of-filf is rfbdhfd.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf jbvb input strfbm whidh dontbins thf binbry pbrbmftfr vbluf
     * @pbrbm lfngth thf numbfr of bytfs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                         long lfngth) throws SQLExdfption;
        /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf
     *        Unidodf dbtb
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
     */
    void sftChbrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr,
                          long lfngth) throws SQLExdfption;
    //-----
    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm.
     * Whfn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftAsdiiStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf Jbvb input strfbm thbt dontbins thf ASCII pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
       * @sindf 1.6
    */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
            throws SQLExdfption;
    /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn input strfbm.
     * Whfn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Thf dbtb will bf rfbd from thf
     * strfbm bs nffdfd until fnd-of-filf is rfbdhfd.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftBinbryStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf jbvb input strfbm whidh dontbins thf binbry pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
    throws SQLExdfption;
        /**
     * Sfts thf dfsignbtfd pbrbmftfr to thf givfn <dodf>Rfbdfr</dodf>
     * objfdt.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-filf is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf
     *        Unidodf dbtb
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
    void sftChbrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr) throws SQLExdfption;
  /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Thf
     * <dodf>Rfbdfr</dodf> rfbds thf dbtb till fnd-of-filf is rfbdhfd. Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.

     * <P><B>Notf:</B> This strfbm objfdt dbn fithfr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss thbt implfmfnts thf
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftNChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm vbluf thf pbrbmftfr vbluf
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftNChbrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf) throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
     * This mfthod difffrs from thf <dodf>sftChbrbdtfrStrfbm (int, Rfbdfr)</dodf> mfthod
     * bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf sfnt to
     * thf sfrvfr bs b <dodf>CLOB</dodf>.  Whfn thf <dodf>sftChbrbdtfrStrfbm</dodf> mfthod is usfd, thf
     * drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs; this mfthod is dbllfd on
     * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>or if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt
     *
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     * @sindf 1.6
     */
     void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
       throws SQLExdfption;

    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.
     * This mfthod difffrs from thf <dodf>sftBinbryStrfbm (int, InputStrfbm)</dodf>
     * mfthod bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf
     * sfnt to thf sfrvfr bs b <dodf>BLOB</dodf>.  Whfn thf <dodf>sftBinbryStrfbm</dodf> mfthod is usfd,
     * thf drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftBlob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1,
     * thf sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or
     * if pbrbmftfrIndfx dofs not dorrfspond
     * to b pbrbmftfr mbrkfr in thf SQL stbtfmfnt,
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     *
     * @sindf 1.6
     */
     void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm)
        throws SQLExdfption;
    /**
     * Sfts thf dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
     * This mfthod difffrs from thf <dodf>sftChbrbdtfrStrfbm (int, Rfbdfr)</dodf> mfthod
     * bfdbusf it informs thf drivfr thbt thf pbrbmftfr vbluf should bf sfnt to
     * thf sfrvfr bs b <dodf>NCLOB</dodf>.  Whfn thf <dodf>sftChbrbdtfrStrfbm</dodf> mfthod is usfd, thf
     * drivfr mby hbvf to do fxtrb work to dftfrminf whfthfr thf pbrbmftfr
     * dbtb should bf sfnt to thf sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftNClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @throws SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in thf SQL stbtfmfnt;
     * if thf drivfr dofs not support nbtionbl dhbrbdtfr sfts;
     * if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
     * this mfthod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @throws SQLFfbturfNotSupportfdExdfption  if thf JDBC drivfr dofs not support this mfthod
     *
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
       throws SQLExdfption;

    //------------------------- JDBC 4.2 -----------------------------------

    /**
     * <p>Sfts thf vbluf of thf dfsignbtfd pbrbmftfr with thf givfn objfdt.
     *
     * If thf sfdond brgumfnt is bn {@dodf InputStrfbm} thfn thf strfbm
     * must dontbin thf numbfr of bytfs spfdififd by sdblfOrLfngth.
     * If thf sfdond brgumfnt is b {@dodf Rfbdfr} thfn thf rfbdfr must
     * dontbin thf numbfr of dhbrbdtfrs spfdififd by sdblfOrLfngth. If thfsf
     * donditions brf not truf thf drivfr will gfnfrbtf b
     * {@dodf SQLExdfption} whfn thf prfpbrfd stbtfmfnt is fxfdutfd.
     *
     * <p>Thf givfn Jbvb objfdt will bf donvfrtfd to thf givfn tbrgftSqlTypf
     * bfforf bfing sfnt to thf dbtbbbsf.
     *
     * If thf objfdt hbs b dustom mbpping (is of b dlbss implfmfnting thf
     * intfrfbdf {@dodf SQLDbtb}),
     * thf JDBC drivfr should dbll thf mfthod {@dodf SQLDbtb.writfSQL} to
     * writf it to thf SQL dbtb strfbm.
     * If, on thf othfr hbnd, thf objfdt is of b dlbss implfmfnting
     * {@dodf Rff}, {@dodf Blob}, {@dodf Clob},  {@dodf NClob},
     *  {@dodf Strudt}, {@dodf jbvb.nft.URL},
     * or {@dodf Arrby}, thf drivfr should pbss it to thf dbtbbbsf bs b
     * vbluf of thf dorrfsponding SQL typf.
     *
     * <p>Notf thbt this mfthod mby bf usfd to pbss dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     *<P>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf objfdt dontbining thf input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf. Thf
     * sdblf brgumfnt mby furthfr qublify this typf.
     * @pbrbm sdblfOrLfngth for {@dodf jbvb.sql.JDBCTypf.DECIMAL}
     *          or {@dodf jbvb.sql.JDBCTypf.NUMERIC typfs},
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs {@dodf InputStrfbm} bnd {@dodf Rfbdfr},
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b
     * pbrbmftfr mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd {@dodf PrfpbrfdStbtfmfnt}  or
     *            if thf Jbvb Objfdt spfdififd by x is bn InputStrfbm
     *            or Rfbdfr objfdt bnd thf vbluf of thf sdblf pbrbmftfr is lfss
     *            thbn zfro
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, SQLTypf tbrgftSqlTypf,
             int sdblfOrLfngth) throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("sftObjfdt not implfmfntfd");
    }

    /**
     * Sfts thf vbluf of thf dfsignbtfd pbrbmftfr with thf givfn objfdt.
     *
     * This mfthod is similbr to {@link #sftObjfdt(int pbrbmftfrIndfx,
     * Objfdt x, SQLTypf tbrgftSqlTypf, int sdblfOrLfngth)},
     * fxdfpt thbt it bssumfs b sdblf of zfro.
     *<P>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm pbrbmftfrIndfx thf first pbrbmftfr is 1, thf sfdond is 2, ...
     * @pbrbm x thf objfdt dontbining thf input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b
     * pbrbmftfr mbrkfr in thf SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd {@dodf PrfpbrfdStbtfmfnt}
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, SQLTypf tbrgftSqlTypf)
      throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("sftObjfdt not implfmfntfd");
    }

    /**
     * Exfdutfs thf SQL stbtfmfnt in this <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * whidh must bf bn SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnt,
     * sudh bs <dodf>INSERT</dodf>, <dodf>UPDATE</dodf> or
     * <dodf>DELETE</dodf>; or bn SQL stbtfmfnt thbt rfturns nothing,
     * sudh bs b DDL stbtfmfnt.
     * <p>
     * This mfthod should bf usfd whfn thf rfturnfd row dount mby fxdffd
     * {@link Intfgfr#MAX_VALUE}.
     * <p>
     * Thf dffbult implfmfntbtion will throw {@dodf UnsupportfdOpfrbtionExdfption}
     *
     * @rfturn fithfr (1) thf row dount for SQL Dbtb Mbnipulbtion Lbngubgf
     * (DML) stbtfmfnts or (2) 0 for SQL stbtfmfnts thbt rfturn nothing
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * this mfthod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or thf SQL stbtfmfnt rfturns b <dodf>RfsultSft</dodf> objfdt
     * @throws SQLTimfoutExdfption whfn thf drivfr hbs dftfrminfd thbt thf
     * timfout vbluf thbt wbs spfdififd by thf {@dodf sftQufryTimfout}
     * mfthod hbs bffn fxdffdfd bnd hbs bt lfbst bttfmptfd to dbndfl
     * thf durrfntly running {@dodf Stbtfmfnt}
     * @sindf 1.8
     */
    dffbult long fxfdutfLbrgfUpdbtf() throws SQLExdfption {
        throw nfw UnsupportfdOpfrbtionExdfption("fxfdutfLbrgfUpdbtf not implfmfntfd");
    }
}
