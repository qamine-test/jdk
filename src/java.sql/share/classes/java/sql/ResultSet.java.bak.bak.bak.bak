/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.sql;

import jbvb.mbth.BigDfdimbl;
import jbvb.util.Cblfndbr;
import jbvb.io.Rfbdfr;
import jbvb.io.InputStrfbm;

/**
 * A tbblf of dbtb rfprfsfnting b dbtbbbsf rfsult sft, whidh
 * is usublly gfnfrbtfd by fxfduting b stbtfmfnt thbt qufrifs thf dbtbbbsf.
 *
 * <P>A <dodf>RfsultSft</dodf> objfdt  mbintbins b dursor pointing
 * to its durrfnt row of dbtb.  Initiblly thf dursor is positionfd
 * bfforf thf first row. Thf <dodf>nfxt</dodf> mfthod movfs thf
 * dursor to thf nfxt row, bnd bfdbusf it rfturns <dodf>fblsf</dodf>
 * whfn thfrf brf no morf rows in thf <dodf>RfsultSft</dodf> objfdt,
 * it dbn bf usfd in b <dodf>whilf</dodf> loop to itfrbtf through
 * thf rfsult sft.
 * <P>
 * A dffbult <dodf>RfsultSft</dodf> objfdt is not updbtbblf bnd
 * hbs b dursor thbt movfs forwbrd only.  Thus, you dbn
 * itfrbtf through it only ondf bnd only from thf first row to thf
 * lbst row. It is possiblf to
 * produdf <dodf>RfsultSft</dodf> objfdts thbt brf sdrollbblf bnd/or
 * updbtbblf.  Thf following dodf frbgmfnt, in whidh <dodf>don</dodf>
 * is b vblid <dodf>Connfdtion</dodf> objfdt, illustrbtfs how to mbkf
 * b rfsult sft thbt is sdrollbblf bnd insfnsitivf to updbtfs by othfrs, bnd
 * thbt is updbtbblf. Sff <dodf>RfsultSft</dodf> fiflds for othfr
 * options.
 * <PRE>
 *
 *       Stbtfmfnt stmt = don.drfbtfStbtfmfnt(
 *                                      RfsultSft.TYPE_SCROLL_INSENSITIVE,
 *                                      RfsultSft.CONCUR_UPDATABLE);
 *       RfsultSft rs = stmt.fxfdutfQufry("SELECT b, b FROM TABLE2");
 *       // rs will bf sdrollbblf, will not show dhbngfs mbdf by othfrs,
 *       // bnd will bf updbtbblf
 *
 * </PRE>
 * Thf <dodf>RfsultSft</dodf> intfrfbdf providfs
 * <i>gfttfr</i> mfthods (<dodf>gftBoolfbn</dodf>, <dodf>gftLong</dodf>, bnd so on)
 * for rftrifving dolumn vblufs from thf durrfnt row.
 * Vblufs dbn bf rftrifvfd using fithfr thf indfx numbfr of thf
 * dolumn or thf nbmf of thf dolumn.  In gfnfrbl, using thf
 * dolumn indfx will bf morf fffidifnt.  Columns brf numbfrfd from 1.
 * For mbximum portbbility, rfsult sft dolumns within fbdh row should bf
 * rfbd in lfft-to-right ordfr, bnd fbdh dolumn should bf rfbd only ondf.
 *
 * <P>For thf gfttfr mfthods, b JDBC drivfr bttfmpts
 * to donvfrt thf undfrlying dbtb to thf Jbvb typf spfdififd in thf
 * gfttfr mfthod bnd rfturns b suitbblf Jbvb vbluf.  Thf JDBC spfdifidbtion
 * hbs b tbblf showing thf bllowbblf mbppings from SQL typfs to Jbvb typfs
 * thbt dbn bf usfd by thf <dodf>RfsultSft</dodf> gfttfr mfthods.
 *
 * <P>Column nbmfs usfd bs input to gfttfr mfthods brf dbsf
 * insfnsitivf.  Whfn b gfttfr mfthod is dbllfd  with
 * b dolumn nbmf bnd sfvfrbl dolumns hbvf thf sbmf nbmf,
 * thf vbluf of thf first mbtdhing dolumn will bf rfturnfd.
 * Thf dolumn nbmf option is
 * dfsignfd to bf usfd whfn dolumn nbmfs brf usfd in thf SQL
 * qufry thbt gfnfrbtfd thf rfsult sft.
 * For dolumns thbt brf NOT fxpliditly nbmfd in thf qufry, it
 * is bfst to usf dolumn numbfrs. If dolumn nbmfs brf usfd, thf
 * progrbmmfr should tbkf dbrf to gubrbntff thbt thfy uniqufly rfffr to
 * thf intfndfd dolumns, whidh dbn bf bssurfd with thf SQL <i>AS</i> dlbusf.
 * <P>
 * A sft of updbtfr mfthods wfrf bddfd to this intfrfbdf
 * in thf JDBC 2.0 API (Jbvb&trbdf; 2 SDK,
 * Stbndbrd Edition, vfrsion 1.2). Thf dommfnts rfgbrding pbrbmftfrs
 * to thf gfttfr mfthods blso bpply to pbrbmftfrs to thf
 * updbtfr mfthods.
 *<P>
 * Thf updbtfr mfthods mby bf usfd in two wbys:
 * <ol>
 * <LI>to updbtf b dolumn vbluf in thf durrfnt row.  In b sdrollbblf
 *     <dodf>RfsultSft</dodf> objfdt, thf dursor dbn bf movfd bbdkwbrds
 *     bnd forwbrds, to bn bbsolutf position, or to b position
 *     rflbtivf to thf durrfnt row.
 *     Thf following dodf frbgmfnt updbtfs thf <dodf>NAME</dodf> dolumn
 *     in thf fifth row of thf <dodf>RfsultSft</dodf> objfdt
 *     <dodf>rs</dodf> bnd thfn usfs thf mfthod <dodf>updbtfRow</dodf>
 *     to updbtf thf dbtb sourdf tbblf from whidh <dodf>rs</dodf> wbs dfrivfd.
 * <PRE>
 *
 *       rs.bbsolutf(5); // movfs thf dursor to thf fifth row of rs
 *       rs.updbtfString("NAME", "AINSWORTH"); // updbtfs thf
 *          // <dodf>NAME</dodf> dolumn of row 5 to bf <dodf>AINSWORTH</dodf>
 *       rs.updbtfRow(); // updbtfs thf row in thf dbtb sourdf
 *
 * </PRE>
 * <LI>to insfrt dolumn vblufs into thf insfrt row.  An updbtbblf
 *     <dodf>RfsultSft</dodf> objfdt hbs b spfdibl row bssodibtfd with
 *     it thbt sfrvfs bs b stbging brfb for building b row to bf insfrtfd.
 *     Thf following dodf frbgmfnt movfs thf dursor to thf insfrt row, builds
 *     b thrff-dolumn row, bnd insfrts it into <dodf>rs</dodf> bnd into
 *     thf dbtb sourdf tbblf using thf mfthod <dodf>insfrtRow</dodf>.
 * <PRE>
 *
 *       rs.movfToInsfrtRow(); // movfs dursor to thf insfrt row
 *       rs.updbtfString(1, "AINSWORTH"); // updbtfs thf
 *          // first dolumn of thf insfrt row to bf <dodf>AINSWORTH</dodf>
 *       rs.updbtfInt(2,35); // updbtfs thf sfdond dolumn to bf <dodf>35</dodf>
 *       rs.updbtfBoolfbn(3, truf); // updbtfs thf third dolumn to <dodf>truf</dodf>
 *       rs.insfrtRow();
 *       rs.movfToCurrfntRow();
 *
 * </PRE>
 * </ol>
 * <P>A <dodf>RfsultSft</dodf> objfdt is butombtidblly dlosfd whfn thf
 * <dodf>Stbtfmfnt</dodf> objfdt thbt
 * gfnfrbtfd it is dlosfd, rf-fxfdutfd, or usfd
 * to rftrifvf thf nfxt rfsult from b sfqufndf of multiplf rfsults.
 *
 * <P>Thf numbfr, typfs bnd propfrtifs of b <dodf>RfsultSft</dodf>
 * objfdt's dolumns brf providfd by thf <dodf>RfsultSftMftbDbtb</dodf>
 * objfdt rfturnfd by thf <dodf>RfsultSft.gftMftbDbtb</dodf> mfthod.
 *
 * @sff Stbtfmfnt#fxfdutfQufry
 * @sff Stbtfmfnt#gftRfsultSft
 * @sff RfsultSftMftbDbtb
 */

publid intfrfbdf RfsultSft fxtfnds Wrbppfr, AutoClosfbblf {

    /**
     * Movfs thf dursor forwbrd onf row from its durrfnt position.
     * A <dodf>RfsultSft</dodf> dursor is initiblly positionfd
     * bfforf thf first row; thf first dbll to thf mfthod
     * <dodf>nfxt</dodf> mbkfs thf first row thf durrfnt row; thf
     * sfdond dbll mbkfs thf sfdond row thf durrfnt row, bnd so on.
     * <p>
     * Whfn b dbll to thf <dodf>nfxt</dodf> mfthod rfturns <dodf>fblsf</dodf>,
     * thf dursor is positionfd bftfr thf lbst row. Any
     * invodbtion of b <dodf>RfsultSft</dodf> mfthod whidh rfquirfs b
     * durrfnt row will rfsult in b <dodf>SQLExdfption</dodf> bfing thrown.
     *  If thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>, it is vfndor spfdififd
     * whfthfr thfir JDBC drivfr implfmfntbtion will rfturn <dodf>fblsf</dodf> or
     *  throw bn <dodf>SQLExdfption</dodf> on b
     * subsfqufnt dbll to <dodf>nfxt</dodf>.
     *
     * <P>If bn input strfbm is opfn for thf durrfnt row, b dbll
     * to thf mfthod <dodf>nfxt</dodf> will
     * impliditly dlosf it. A <dodf>RfsultSft</dodf> objfdt's
     * wbrning dhbin is dlfbrfd whfn b nfw row is rfbd.
     *
     * @rfturn <dodf>truf</dodf> if thf nfw durrfnt row is vblid;
     * <dodf>fblsf</dodf> if thfrf brf no morf rows
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    boolfbn nfxt() throws SQLExdfption;


    /**
     * Rflfbsfs this <dodf>RfsultSft</dodf> objfdt's dbtbbbsf bnd
     * JDBC rfsourdfs immfdibtfly instfbd of wbiting for
     * this to hbppfn whfn it is butombtidblly dlosfd.
     *
     * <P>Thf dlosing of b <dodf>RfsultSft</dodf> objfdt dofs <strong>not</strong> dlosf thf <dodf>Blob</dodf>,
     * <dodf>Clob</dodf> or <dodf>NClob</dodf> objfdts drfbtfd by thf <dodf>RfsultSft</dodf>. <dodf>Blob</dodf>,
     * <dodf>Clob</dodf> or <dodf>NClob</dodf> objfdts rfmbin vblid for bt lfbst thf durbtion of thf
     * trbnsbdtion in whidh thfy brf drfbtfd, unlfss thfir <dodf>frff</dodf> mfthod is invokfd.
     *<p>
     * Whfn b <dodf>RfsultSft</dodf> is dlosfd, bny <dodf>RfsultSftMftbDbtb</dodf>
     * instbndfs thbt wfrf drfbtfd by dblling thf  <dodf>gftMftbDbtb</dodf>
     * mfthod rfmbin bddfssiblf.
     *
     * <P><B>Notf:</B> A <dodf>RfsultSft</dodf> objfdt
     * is butombtidblly dlosfd by thf
     * <dodf>Stbtfmfnt</dodf> objfdt thbt gfnfrbtfd it whfn
     * thbt <dodf>Stbtfmfnt</dodf> objfdt is dlosfd,
     * rf-fxfdutfd, or is usfd to rftrifvf thf nfxt rfsult from b
     * sfqufndf of multiplf rfsults.
     *<p>
     * Cblling thf mfthod <dodf>dlosf</dodf> on b <dodf>RfsultSft</dodf>
     * objfdt thbt is blrfbdy dlosfd is b no-op.
     *
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     */
    void dlosf() throws SQLExdfption;

    /**
     * Rfports whfthfr
     * thf lbst dolumn rfbd hbd b vbluf of SQL <dodf>NULL</dodf>.
     * Notf thbt you must first dbll onf of thf gfttfr mfthods
     * on b dolumn to try to rfbd its vbluf bnd thfn dbll
     * thf mfthod <dodf>wbsNull</dodf> to sff if thf vbluf rfbd wbs
     * SQL <dodf>NULL</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if thf lbst dolumn vbluf rfbd wbs SQL
     *         <dodf>NULL</dodf> bnd <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    boolfbn wbsNull() throws SQLExdfption;

    // Mfthods for bddfssing rfsults by dolumn indfx

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>String</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    String gftString(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>boolfbn</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * <P>If thf dfsignbtfd dolumn hbs b dbtbtypf of CHAR or VARCHAR
     * bnd dontbins b "0" or hbs b dbtbtypf of BIT, TINYINT, SMALLINT, INTEGER or BIGINT
     * bnd dontbins  b 0, b vbluf of <dodf>fblsf</dodf> is rfturnfd.  If thf dfsignbtfd dolumn hbs b dbtbtypf
     * of CHAR or VARCHAR
     * bnd dontbins b "1" or hbs b dbtbtypf of BIT, TINYINT, SMALLINT, INTEGER or BIGINT
     * bnd dontbins  b 1, b vbluf of <dodf>truf</dodf> is rfturnfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>fblsf</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    boolfbn gftBoolfbn(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>bytf</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    bytf gftBytf(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>short</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    short gftShort(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * bn <dodf>int</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    int gftInt(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>long</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    long gftLong(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>flobt</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    flobt gftFlobt(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>doublf</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    doublf gftDoublf(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.BigDfdimbl</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm sdblf thf numbfr of digits to thf right of thf dfdimbl point
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @dfprfdbtfd Usf {@dodf gftBigDfdimbl(int dolumnIndfx)}
     *             or {@dodf gftBigDfdimbl(String dolumnLbbfl)}
     */
    @Dfprfdbtfd
    BigDfdimbl gftBigDfdimbl(int dolumnIndfx, int sdblf) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>bytf</dodf> brrby in thf Jbvb progrbmming lbngubgf.
     * Thf bytfs rfprfsfnt thf rbw vblufs rfturnfd by thf drivfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    bytf[] gftBytfs(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Dbtf</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Dbtf gftDbtf(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Timf</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Timf gftTimf(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Timfstbmp gftTimfstbmp(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b strfbm of ASCII dhbrbdtfrs. Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARCHAR</dodf> vblufs.
     * Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from thf dbtbbbsf formbt into ASCII.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm.  Also, b
     * strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod
     * <dodf>InputStrfbm.bvbilbblf</dodf>
     * is dbllfd whfthfr thfrf is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     * bs b strfbm of onf-bytf ASCII dhbrbdtfrs;
     * if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.io.InputStrfbm gftAsdiiStrfbm(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * bs b strfbm of two-bytf 3 dhbrbdtfrs. Thf first bytf is
     * thf high bytf; thf sfdond bytf is thf low bytf.
     *
     * Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARCHAR</dodf>vblufs.  Thf
     * JDBC drivfr will do bny nfdfssbry donvfrsion from thf dbtbbbsf
     * formbt into Unidodf.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm.
     * Also, b strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod
     * <dodf>InputStrfbm.bvbilbblf</dodf>
     * is dbllfd, whfthfr thfrf is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     *         bs b strfbm of two-bytf Unidodf dhbrbdtfrs;
     *         if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     *         <dodf>null</dodf>
     *
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @dfprfdbtfd usf <dodf>gftChbrbdtfrStrfbm</dodf> in plbdf of
     *              <dodf>gftUnidodfStrfbm</dodf>
     */
    @Dfprfdbtfd
    jbvb.io.InputStrfbm gftUnidodfStrfbm(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b  strfbm of
     * unintfrprftfd bytfs. Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARBINARY</dodf> vblufs.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm.  Also, b
     * strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod
     * <dodf>InputStrfbm.bvbilbblf</dodf>
     * is dbllfd whfthfr thfrf is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     *         bs b strfbm of unintfrprftfd bytfs;
     *         if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     *         <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.io.InputStrfbm gftBinbryStrfbm(int dolumnIndfx)
        throws SQLExdfption;


    // Mfthods for bddfssing rfsults by dolumn lbbfl

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>String</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    String gftString(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>boolfbn</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * <P>If thf dfsignbtfd dolumn hbs b dbtbtypf of CHAR or VARCHAR
     * bnd dontbins b "0" or hbs b dbtbtypf of BIT, TINYINT, SMALLINT, INTEGER or BIGINT
     * bnd dontbins  b 0, b vbluf of <dodf>fblsf</dodf> is rfturnfd.  If thf dfsignbtfd dolumn hbs b dbtbtypf
     * of CHAR or VARCHAR
     * bnd dontbins b "1" or hbs b dbtbtypf of BIT, TINYINT, SMALLINT, INTEGER or BIGINT
     * bnd dontbins  b 1, b vbluf of <dodf>truf</dodf> is rfturnfd.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>fblsf</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    boolfbn gftBoolfbn(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>bytf</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    bytf gftBytf(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>short</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    short gftShort(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * bn <dodf>int</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    int gftInt(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>long</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    long gftLong(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>flobt</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    flobt gftFlobt(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>doublf</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>0</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    doublf gftDoublf(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.mbth.BigDfdimbl</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm sdblf thf numbfr of digits to thf right of thf dfdimbl point
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @dfprfdbtfd Usf {@dodf gftBigDfdimbl(int dolumnIndfx)}
     *             or {@dodf gftBigDfdimbl(String dolumnLbbfl)}
     */
    @Dfprfdbtfd
    BigDfdimbl gftBigDfdimbl(String dolumnLbbfl, int sdblf) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>bytf</dodf> brrby in thf Jbvb progrbmming lbngubgf.
     * Thf bytfs rfprfsfnt thf rbw vblufs rfturnfd by thf drivfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    bytf[] gftBytfs(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Dbtf</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Dbtf gftDbtf(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Timf</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Timf gftTimf(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.sql.Timfstbmp gftTimfstbmp(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b strfbm of
     * ASCII dhbrbdtfrs. Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARCHAR</dodf> vblufs.
     * Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from thf dbtbbbsf formbt into ASCII.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm. Also, b
     * strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod <dodf>bvbilbblf</dodf>
     * is dbllfd whfthfr thfrf is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     * bs b strfbm of onf-bytf ASCII dhbrbdtfrs.
     * If thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf>.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.io.InputStrfbm gftAsdiiStrfbm(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b strfbm of two-bytf
     * Unidodf dhbrbdtfrs. Thf first bytf is thf high bytf; thf sfdond
     * bytf is thf low bytf.
     *
     * Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARCHAR</dodf> vblufs.
     * Thf JDBC tfdhnology-fnbblfd drivfr will
     * do bny nfdfssbry donvfrsion from thf dbtbbbsf formbt into Unidodf.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm.
     * Also, b strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod
     * <dodf>InputStrfbm.bvbilbblf</dodf> is dbllfd, whfthfr thfrf
     * is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     *         bs b strfbm of two-bytf Unidodf dhbrbdtfrs.
     *         If thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd
     *         is <dodf>null</dodf>.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @dfprfdbtfd usf <dodf>gftChbrbdtfrStrfbm</dodf> instfbd
     */
    @Dfprfdbtfd
    jbvb.io.InputStrfbm gftUnidodfStrfbm(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b strfbm of unintfrprftfd
     * <dodf>bytf</dodf>s.
     * Thf vbluf dbn thfn bf rfbd in dhunks from thf
     * strfbm. This mfthod is pbrtidulbrly
     * suitbblf for rftrifving lbrgf <dodf>LONGVARBINARY</dodf>
     * vblufs.
     *
     * <P><B>Notf:</B> All thf dbtb in thf rfturnfd strfbm must bf
     * rfbd prior to gftting thf vbluf of bny othfr dolumn. Thf nfxt
     * dbll to b gfttfr mfthod impliditly dlosfs thf strfbm. Also, b
     * strfbm mby rfturn <dodf>0</dodf> whfn thf mfthod <dodf>bvbilbblf</dodf>
     * is dbllfd whfthfr thfrf is dbtb bvbilbblf or not.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b Jbvb input strfbm thbt dflivfrs thf dbtbbbsf dolumn vbluf
     * bs b strfbm of unintfrprftfd bytfs;
     * if thf vbluf is SQL <dodf>NULL</dodf>, thf rfsult is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    jbvb.io.InputStrfbm gftBinbryStrfbm(String dolumnLbbfl)
        throws SQLExdfption;


    // Advbndfd ffbturfs:

    /**
     * Rftrifvfs thf first wbrning rfportfd by dblls on this
     * <dodf>RfsultSft</dodf> objfdt.
     * Subsfqufnt wbrnings on this <dodf>RfsultSft</dodf> objfdt
     * will bf dhbinfd to thf <dodf>SQLWbrning</dodf> objfdt thbt
     * this mfthod rfturns.
     *
     * <P>Thf wbrning dhbin is butombtidblly dlfbrfd fbdh timf b nfw
     * row is rfbd.  This mfthod mby not bf dbllfd on b <dodf>RfsultSft</dodf>
     * objfdt thbt hbs bffn dlosfd; doing so will dbusf bn
     * <dodf>SQLExdfption</dodf> to bf thrown.
     * <P>
     * <B>Notf:</B> This wbrning dhbin only dovfrs wbrnings dbusfd
     * by <dodf>RfsultSft</dodf> mfthods.  Any wbrning dbusfd by
     * <dodf>Stbtfmfnt</dodf> mfthods
     * (sudh bs rfbding OUT pbrbmftfrs) will bf dhbinfd on thf
     * <dodf>Stbtfmfnt</dodf> objfdt.
     *
     * @rfturn thf first <dodf>SQLWbrning</dodf> objfdt rfportfd or
     *         <dodf>null</dodf> if thfrf brf nonf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    SQLWbrning gftWbrnings() throws SQLExdfption;

    /**
     * Clfbrs bll wbrnings rfportfd on this <dodf>RfsultSft</dodf> objfdt.
     * Aftfr this mfthod is dbllfd, thf mfthod <dodf>gftWbrnings</dodf>
     * rfturns <dodf>null</dodf> until b nfw wbrning is
     * rfportfd for this <dodf>RfsultSft</dodf> objfdt.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    void dlfbrWbrnings() throws SQLExdfption;

    /**
     * Rftrifvfs thf nbmf of thf SQL dursor usfd by this <dodf>RfsultSft</dodf>
     * objfdt.
     *
     * <P>In SQL, b rfsult tbblf is rftrifvfd through b dursor thbt is
     * nbmfd. Thf durrfnt row of b rfsult sft dbn bf updbtfd or dflftfd
     * using b positionfd updbtf/dflftf stbtfmfnt thbt rfffrfndfs thf
     * dursor nbmf. To insurf thbt thf dursor hbs thf propfr isolbtion
     * lfvfl to support updbtf, thf dursor's <dodf>SELECT</dodf> stbtfmfnt
     * should bf of thf form <dodf>SELECT FOR UPDATE</dodf>. If
     * <dodf>FOR UPDATE</dodf> is omittfd, thf positionfd updbtfs mby fbil.
     *
     * <P>Thf JDBC API supports this SQL ffbturf by providing thf nbmf of thf
     * SQL dursor usfd by b <dodf>RfsultSft</dodf> objfdt.
     * Thf durrfnt row of b <dodf>RfsultSft</dodf> objfdt
     * is blso thf durrfnt row of this SQL dursor.
     *
     * @rfturn thf SQL nbmf for this <dodf>RfsultSft</dodf> objfdt's dursor
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     */
    String gftCursorNbmf() throws SQLExdfption;

    /**
     * Rftrifvfs thf  numbfr, typfs bnd propfrtifs of
     * this <dodf>RfsultSft</dodf> objfdt's dolumns.
     *
     * @rfturn thf dfsdription of this <dodf>RfsultSft</dodf> objfdt's dolumns
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    RfsultSftMftbDbtb gftMftbDbtb() throws SQLExdfption;

    /**
     * <p>Gfts thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * bn <dodf>Objfdt</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * <p>This mfthod will rfturn thf vbluf of thf givfn dolumn bs b
     * Jbvb objfdt.  Thf typf of thf Jbvb objfdt will bf thf dffbult
     * Jbvb objfdt typf dorrfsponding to thf dolumn's SQL typf,
     * following thf mbpping for built-in typfs spfdififd in thf JDBC
     * spfdifidbtion. If thf vbluf is bn SQL <dodf>NULL</dodf>,
     * thf drivfr rfturns b Jbvb <dodf>null</dodf>.
     *
     * <p>This mfthod mby blso bf usfd to rfbd dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     *
     * In thf JDBC 2.0 API, thf bfhbvior of mfthod
     * <dodf>gftObjfdt</dodf> is fxtfndfd to mbtfriblizf
     * dbtb of SQL usfr-dffinfd typfs.
     * <p>
     * If <dodf>Connfdtion.gftTypfMbp</dodf> dofs not throw b
     * <dodf>SQLFfbturfNotSupportfdExdfption</dodf>,
     * thfn whfn b dolumn dontbins b strudturfd or distindt vbluf,
     * thf bfhbvior of this mfthod is bs
     * if it wfrf b dbll to: <dodf>gftObjfdt(dolumnIndfx,
     * this.gftStbtfmfnt().gftConnfdtion().gftTypfMbp())</dodf>.
     *
     * If <dodf>Connfdtion.gftTypfMbp</dodf> dofs throw b
     * <dodf>SQLFfbturfNotSupportfdExdfption</dodf>,
     * thfn strudturfd vblufs brf not supportfd, bnd distindt vblufs
     * brf mbppfd to thf dffbult Jbvb dlbss bs dftfrminfd by thf
     * undfrlying SQL typf of thf DISTINCT typf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>jbvb.lbng.Objfdt</dodf> holding thf dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    Objfdt gftObjfdt(int dolumnIndfx) throws SQLExdfption;

    /**
     * <p>Gfts thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * bn <dodf>Objfdt</dodf> in thf Jbvb progrbmming lbngubgf.
     *
     * <p>This mfthod will rfturn thf vbluf of thf givfn dolumn bs b
     * Jbvb objfdt.  Thf typf of thf Jbvb objfdt will bf thf dffbult
     * Jbvb objfdt typf dorrfsponding to thf dolumn's SQL typf,
     * following thf mbpping for built-in typfs spfdififd in thf JDBC
     * spfdifidbtion. If thf vbluf is bn SQL <dodf>NULL</dodf>,
     * thf drivfr rfturns b Jbvb <dodf>null</dodf>.
     * <P>
     * This mfthod mby blso bf usfd to rfbd dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     * <P>
     * In thf JDBC 2.0 API, thf bfhbvior of thf mfthod
     * <dodf>gftObjfdt</dodf> is fxtfndfd to mbtfriblizf
     * dbtb of SQL usfr-dffinfd typfs.  Whfn b dolumn dontbins
     * b strudturfd or distindt vbluf, thf bfhbvior of this mfthod is bs
     * if it wfrf b dbll to: <dodf>gftObjfdt(dolumnIndfx,
     * this.gftStbtfmfnt().gftConnfdtion().gftTypfMbp())</dodf>.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>jbvb.lbng.Objfdt</dodf> holding thf dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     */
    Objfdt gftObjfdt(String dolumnLbbfl) throws SQLExdfption;

    //----------------------------------------------------------------

    /**
     * Mbps thf givfn <dodf>RfsultSft</dodf> dolumn lbbfl to its
     * <dodf>RfsultSft</dodf> dolumn indfx.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn indfx of thf givfn dolumn nbmf
     * @fxdfption SQLExdfption if thf <dodf>RfsultSft</dodf> objfdt
     * dofs not dontbin b dolumn lbbflfd <dodf>dolumnLbbfl</dodf>, b dbtbbbsf bddfss frror oddurs
     *  or this mfthod is dbllfd on b dlosfd rfsult sft
     */
    int findColumn(String dolumnLbbfl) throws SQLExdfption;


    //--------------------------JDBC 2.0-----------------------------------

    //---------------------------------------------------------------------
    // Gfttfrs bnd Sfttfrs
    //---------------------------------------------------------------------

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt.
     * @rfturn b <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf dolumn
     * vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf.
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.io.Rfbdfr gftChbrbdtfrStrfbm(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf dolumn
     * vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.io.Rfbdfr gftChbrbdtfrStrfbm(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.mbth.BigDfdimbl</dodf> with full prfdision.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf (full prfdision);
     * if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    BigDfdimbl gftBigDfdimbl(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.mbth.BigDfdimbl</dodf> with full prfdision.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf (full prfdision);
     * if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     *
     */
    BigDfdimbl gftBigDfdimbl(String dolumnLbbfl) throws SQLExdfption;

    //---------------------------------------------------------------------
    // Trbvfrsbl/Positioning
    //---------------------------------------------------------------------

    /**
     * Rftrifvfs whfthfr thf dursor is bfforf thf first row in
     * this <dodf>RfsultSft</dodf> objfdt.
     * <p>
     * <strong>Notf:</strong>Support for thf <dodf>isBfforfFirst</dodf> mfthod
     * is optionbl for <dodf>RfsultSft</dodf>s with b rfsult
     * sft typf of <dodf>TYPE_FORWARD_ONLY</dodf>
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is bfforf thf first row;
     * <dodf>fblsf</dodf> if thf dursor is bt bny othfr position or thf
     * rfsult sft dontbins no rows
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn isBfforfFirst() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr thf dursor is bftfr thf lbst row in
     * this <dodf>RfsultSft</dodf> objfdt.
     * <p>
     * <strong>Notf:</strong>Support for thf <dodf>isAftfrLbst</dodf> mfthod
     * is optionbl for <dodf>RfsultSft</dodf>s with b rfsult
     * sft typf of <dodf>TYPE_FORWARD_ONLY</dodf>
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is bftfr thf lbst row;
     * <dodf>fblsf</dodf> if thf dursor is bt bny othfr position or thf
     * rfsult sft dontbins no rows
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn isAftfrLbst() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr thf dursor is on thf first row of
     * this <dodf>RfsultSft</dodf> objfdt.
     * <p>
     * <strong>Notf:</strong>Support for thf <dodf>isFirst</dodf> mfthod
     * is optionbl for <dodf>RfsultSft</dodf>s with b rfsult
     * sft typf of <dodf>TYPE_FORWARD_ONLY</dodf>
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is on thf first row;
     * <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn isFirst() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr thf dursor is on thf lbst row of
     * this <dodf>RfsultSft</dodf> objfdt.
     *  <strong>Notf:</strong> Cblling thf mfthod <dodf>isLbst</dodf> mby bf fxpfnsivf
     * bfdbusf thf JDBC drivfr
     * might nffd to fftdh bhfbd onf row in ordfr to dftfrminf
     * whfthfr thf durrfnt row is thf lbst row in thf rfsult sft.
     * <p>
     * <strong>Notf:</strong> Support for thf <dodf>isLbst</dodf> mfthod
     * is optionbl for <dodf>RfsultSft</dodf>s with b rfsult
     * sft typf of <dodf>TYPE_FORWARD_ONLY</dodf>
     * @rfturn <dodf>truf</dodf> if thf dursor is on thf lbst row;
     * <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or this mfthod is
     *            dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn isLbst() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf front of
     * this <dodf>RfsultSft</dodf> objfdt, just bfforf thf
     * first row. This mfthod hbs no ffffdt if thf rfsult sft dontbins no rows.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft or thf
     * rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void bfforfFirst() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf fnd of
     * this <dodf>RfsultSft</dodf> objfdt, just bftfr thf
     * lbst row. This mfthod hbs no ffffdt if thf rfsult sft dontbins no rows.
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void bftfrLbst() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf first row in
     * this <dodf>RfsultSft</dodf> objfdt.
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is on b vblid row;
     * <dodf>fblsf</dodf> if thfrf brf no rows in thf rfsult sft
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn first() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf lbst row in
     * this <dodf>RfsultSft</dodf> objfdt.
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is on b vblid row;
     * <dodf>fblsf</dodf> if thfrf brf no rows in thf rfsult sft
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn lbst() throws SQLExdfption;

    /**
     * Rftrifvfs thf durrfnt row numbfr.  Thf first row is numbfr 1, thf
     * sfdond numbfr 2, bnd so on.
     * <p>
     * <strong>Notf:</strong>Support for thf <dodf>gftRow</dodf> mfthod
     * is optionbl for <dodf>RfsultSft</dodf>s with b rfsult
     * sft typf of <dodf>TYPE_FORWARD_ONLY</dodf>
     *
     * @rfturn thf durrfnt row numbfr; <dodf>0</dodf> if thfrf is no durrfnt row
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    int gftRow() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf givfn row numbfr in
     * this <dodf>RfsultSft</dodf> objfdt.
     *
     * <p>If thf row numbfr is positivf, thf dursor movfs to
     * thf givfn row numbfr with rfspfdt to thf
     * bfginning of thf rfsult sft.  Thf first row is row 1, thf sfdond
     * is row 2, bnd so on.
     *
     * <p>If thf givfn row numbfr is nfgbtivf, thf dursor movfs to
     * bn bbsolutf row position with rfspfdt to
     * thf fnd of thf rfsult sft.  For fxbmplf, dblling thf mfthod
     * <dodf>bbsolutf(-1)</dodf> positions thf
     * dursor on thf lbst row; dblling thf mfthod <dodf>bbsolutf(-2)</dodf>
     * movfs thf dursor to thf nfxt-to-lbst row, bnd so on.
     *
     * <p>If thf row numbfr spfdififd is zfro, thf dursor is movfd to
     * bfforf thf first row.
     *
     * <p>An bttfmpt to position thf dursor bfyond thf first/lbst row in
     * thf rfsult sft lfbvfs thf dursor bfforf thf first row or bftfr
     * thf lbst row.
     *
     * <p><B>Notf:</B> Cblling <dodf>bbsolutf(1)</dodf> is thf sbmf
     * bs dblling <dodf>first()</dodf>. Cblling <dodf>bbsolutf(-1)</dodf>
     * is thf sbmf bs dblling <dodf>lbst()</dodf>.
     *
     * @pbrbm row thf numbfr of thf row to whidh thf dursor should movf.
     *        A vbluf of zfro indidbtfs thbt thf dursor will bf positionfd
     *        bfforf thf first row; b positivf numbfr indidbtfs thf row numbfr
     *        dounting from thf bfginning of thf rfsult sft; b nfgbtivf numbfr
     *        indidbtfs thf row numbfr dounting from thf fnd of thf rfsult sft
     * @rfturn <dodf>truf</dodf> if thf dursor is movfd to b position in this
     * <dodf>RfsultSft</dodf> objfdt;
     * <dodf>fblsf</dodf> if thf dursor is bfforf thf first row or bftfr thf
     * lbst row
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn bbsolutf( int row ) throws SQLExdfption;

    /**
     * Movfs thf dursor b rflbtivf numbfr of rows, fithfr positivf or nfgbtivf.
     * Attfmpting to movf bfyond thf first/lbst row in thf
     * rfsult sft positions thf dursor bfforf/bftfr thf
     * thf first/lbst row. Cblling <dodf>rflbtivf(0)</dodf> is vblid, but dofs
     * not dhbngf thf dursor position.
     *
     * <p>Notf: Cblling thf mfthod <dodf>rflbtivf(1)</dodf>
     * is idfntidbl to dblling thf mfthod <dodf>nfxt()</dodf> bnd
     * dblling thf mfthod <dodf>rflbtivf(-1)</dodf> is idfntidbl
     * to dblling thf mfthod <dodf>prfvious()</dodf>.
     *
     * @pbrbm rows bn <dodf>int</dodf> spfdifying thf numbfr of rows to
     *        movf from thf durrfnt row; b positivf numbfr movfs thf dursor
     *        forwbrd; b nfgbtivf numbfr movfs thf dursor bbdkwbrd
     * @rfturn <dodf>truf</dodf> if thf dursor is on b row;
     *         <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;  this mfthod
     * is dbllfd on b dlosfd rfsult sft or thf rfsult sft typf is
     *            <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn rflbtivf( int rows ) throws SQLExdfption;

    /**
     * Movfs thf dursor to thf prfvious row in this
     * <dodf>RfsultSft</dodf> objfdt.
     *<p>
     * Whfn b dbll to thf <dodf>prfvious</dodf> mfthod rfturns <dodf>fblsf</dodf>,
     * thf dursor is positionfd bfforf thf first row.  Any invodbtion of b
     * <dodf>RfsultSft</dodf> mfthod whidh rfquirfs b durrfnt row will rfsult in b
     * <dodf>SQLExdfption</dodf> bfing thrown.
     *<p>
     * If bn input strfbm is opfn for thf durrfnt row, b dbll to thf mfthod
     * <dodf>prfvious</dodf> will impliditly dlosf it.  A <dodf>RfsultSft</dodf>
     *  objfdt's wbrning dhbngf is dlfbrfd whfn b nfw row is rfbd.
     *
     * @rfturn <dodf>truf</dodf> if thf dursor is now positionfd on b vblid row;
     * <dodf>fblsf</dodf> if thf dursor is positionfd bfforf thf first row
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    boolfbn prfvious() throws SQLExdfption;

    //---------------------------------------------------------------------
    // Propfrtifs
    //---------------------------------------------------------------------

    /**
     * Thf donstbnt indidbting thbt thf rows in b rfsult sft will bf
     * prodfssfd in b forwbrd dirfdtion; first-to-lbst.
     * This donstbnt is usfd by thf mfthod <dodf>sftFftdhDirfdtion</dodf>
     * bs b hint to thf drivfr, whidh thf drivfr mby ignorf.
     * @sindf 1.2
     */
    int FETCH_FORWARD = 1000;

    /**
     * Thf donstbnt indidbting thbt thf rows in b rfsult sft will bf
     * prodfssfd in b rfvfrsf dirfdtion; lbst-to-first.
     * This donstbnt is usfd by thf mfthod <dodf>sftFftdhDirfdtion</dodf>
     * bs b hint to thf drivfr, whidh thf drivfr mby ignorf.
     * @sindf 1.2
     */
    int FETCH_REVERSE = 1001;

    /**
     * Thf donstbnt indidbting thbt thf ordfr in whidh rows in b
     * rfsult sft will bf prodfssfd is unknown.
     * This donstbnt is usfd by thf mfthod <dodf>sftFftdhDirfdtion</dodf>
     * bs b hint to thf drivfr, whidh thf drivfr mby ignorf.
     */
    int FETCH_UNKNOWN = 1002;

    /**
     * Givfs b hint bs to thf dirfdtion in whidh thf rows in this
     * <dodf>RfsultSft</dodf> objfdt will bf prodfssfd.
     * Thf initibl vbluf is dftfrminfd by thf
     * <dodf>Stbtfmfnt</dodf> objfdt
     * thbt produdfd this <dodf>RfsultSft</dodf> objfdt.
     * Thf fftdh dirfdtion mby bf dhbngfd bt bny timf.
     *
     * @pbrbm dirfdtion bn <dodf>int</dodf> spfdifying thf suggfstfd
     *        fftdh dirfdtion; onf of <dodf>RfsultSft.FETCH_FORWARD</dodf>,
     *        <dodf>RfsultSft.FETCH_REVERSE</dodf>, or
     *        <dodf>RfsultSft.FETCH_UNKNOWN</dodf>
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs; this
     * mfthod is dbllfd on b dlosfd rfsult sft or
     * thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf> bnd thf fftdh
     * dirfdtion is not <dodf>FETCH_FORWARD</dodf>
     * @sindf 1.2
     * @sff Stbtfmfnt#sftFftdhDirfdtion
     * @sff #gftFftdhDirfdtion
     */
    void sftFftdhDirfdtion(int dirfdtion) throws SQLExdfption;

    /**
     * Rftrifvfs thf fftdh dirfdtion for this
     * <dodf>RfsultSft</dodf> objfdt.
     *
     * @rfturn thf durrfnt fftdh dirfdtion for this <dodf>RfsultSft</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     * @sff #sftFftdhDirfdtion
     */
    int gftFftdhDirfdtion() throws SQLExdfption;

    /**
     * Givfs thf JDBC drivfr b hint bs to thf numbfr of rows thbt should
     * bf fftdhfd from thf dbtbbbsf whfn morf rows brf nffdfd for this
     * <dodf>RfsultSft</dodf> objfdt.
     * If thf fftdh sizf spfdififd is zfro, thf JDBC drivfr
     * ignorfs thf vbluf bnd is frff to mbkf its own bfst gufss bs to whbt
     * thf fftdh sizf should bf.  Thf dffbult vbluf is sft by thf
     * <dodf>Stbtfmfnt</dodf> objfdt
     * thbt drfbtfd thf rfsult sft.  Thf fftdh sizf mby bf dhbngfd bt bny timf.
     *
     * @pbrbm rows thf numbfr of rows to fftdh
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs; this mfthod
     * is dbllfd on b dlosfd rfsult sft or thf
     * dondition {@dodf rows >= 0} is not sbtisfifd
     * @sindf 1.2
     * @sff #gftFftdhSizf
     */
    void sftFftdhSizf(int rows) throws SQLExdfption;

    /**
     * Rftrifvfs thf fftdh sizf for this
     * <dodf>RfsultSft</dodf> objfdt.
     *
     * @rfturn thf durrfnt fftdh sizf for this <dodf>RfsultSft</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     * @sff #sftFftdhSizf
     */
    int gftFftdhSizf() throws SQLExdfption;

    /**
     * Thf donstbnt indidbting thf typf for b <dodf>RfsultSft</dodf> objfdt
     * whosf dursor mby movf only forwbrd.
     * @sindf 1.2
     */
    int TYPE_FORWARD_ONLY = 1003;

    /**
     * Thf donstbnt indidbting thf typf for b <dodf>RfsultSft</dodf> objfdt
     * thbt is sdrollbblf but gfnfrblly not sfnsitivf to dhbngfs to thf dbtb
     * thbt undfrlifs thf <dodf>RfsultSft</dodf>.
     * @sindf 1.2
     */
    int TYPE_SCROLL_INSENSITIVE = 1004;

    /**
     * Thf donstbnt indidbting thf typf for b <dodf>RfsultSft</dodf> objfdt
     * thbt is sdrollbblf bnd gfnfrblly sfnsitivf to dhbngfs to thf dbtb
     * thbt undfrlifs thf <dodf>RfsultSft</dodf>.
     * @sindf 1.2
     */
    int TYPE_SCROLL_SENSITIVE = 1005;

    /**
     * Rftrifvfs thf typf of this <dodf>RfsultSft</dodf> objfdt.
     * Thf typf is dftfrminfd by thf <dodf>Stbtfmfnt</dodf> objfdt
     * thbt drfbtfd thf rfsult sft.
     *
     * @rfturn <dodf>RfsultSft.TYPE_FORWARD_ONLY</dodf>,
     *         <dodf>RfsultSft.TYPE_SCROLL_INSENSITIVE</dodf>,
     *         or <dodf>RfsultSft.TYPE_SCROLL_SENSITIVE</dodf>
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    int gftTypf() throws SQLExdfption;

    /**
     * Thf donstbnt indidbting thf dondurrfndy modf for b
     * <dodf>RfsultSft</dodf> objfdt thbt mby NOT bf updbtfd.
     * @sindf 1.2
     */
    int CONCUR_READ_ONLY = 1007;

    /**
     * Thf donstbnt indidbting thf dondurrfndy modf for b
     * <dodf>RfsultSft</dodf> objfdt thbt mby bf updbtfd.
     * @sindf 1.2
     */
    int CONCUR_UPDATABLE = 1008;

    /**
     * Rftrifvfs thf dondurrfndy modf of this <dodf>RfsultSft</dodf> objfdt.
     * Thf dondurrfndy usfd is dftfrminfd by thf
     * <dodf>Stbtfmfnt</dodf> objfdt thbt drfbtfd thf rfsult sft.
     *
     * @rfturn thf dondurrfndy typf, fithfr
     *         <dodf>RfsultSft.CONCUR_READ_ONLY</dodf>
     *         or <dodf>RfsultSft.CONCUR_UPDATABLE</dodf>
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    int gftCondurrfndy() throws SQLExdfption;

    //---------------------------------------------------------------------
    // Updbtfs
    //---------------------------------------------------------------------

    /**
     * Rftrifvfs whfthfr thf durrfnt row hbs bffn updbtfd.  Thf vbluf rfturnfd
     * dfpfnds on whfthfr or not thf rfsult sft dbn dftfdt updbtfs.
     * <p>
     * <strong>Notf:</strong> Support for thf <dodf>rowUpdbtfd</dodf> mfthod is optionbl with b rfsult sft
     * dondurrfndy of <dodf>CONCUR_READ_ONLY</dodf>
     * @rfturn <dodf>truf</dodf> if thf durrfnt row is dftfdtfd to
     * hbvf bffn visibly updbtfd by thf ownfr or bnothfr; <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sff DbtbbbsfMftbDbtb#updbtfsArfDftfdtfd
     * @sindf 1.2
     */
    boolfbn rowUpdbtfd() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr thf durrfnt row hbs hbd bn insfrtion.
     * Thf vbluf rfturnfd dfpfnds on whfthfr or not this
     * <dodf>RfsultSft</dodf> objfdt dbn dftfdt visiblf insfrts.
     * <p>
     * <strong>Notf:</strong> Support for thf <dodf>rowInsfrtfd</dodf> mfthod is optionbl with b rfsult sft
     * dondurrfndy of <dodf>CONCUR_READ_ONLY</dodf>
     * @rfturn <dodf>truf</dodf> if thf durrfnt row is dftfdtfd to
     * hbvf bffn insfrtfd; <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     *
     * @sff DbtbbbsfMftbDbtb#insfrtsArfDftfdtfd
     * @sindf 1.2
     */
    boolfbn rowInsfrtfd() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr b row hbs bffn dflftfd.  A dflftfd row mby lfbvf
     * b visiblf "holf" in b rfsult sft.  This mfthod dbn bf usfd to
     * dftfdt holfs in b rfsult sft.  Thf vbluf rfturnfd dfpfnds on whfthfr
     * or not this <dodf>RfsultSft</dodf> objfdt dbn dftfdt dflftions.
     * <p>
     * <strong>Notf:</strong> Support for thf <dodf>rowDflftfd</dodf> mfthod is optionbl with b rfsult sft
     * dondurrfndy of <dodf>CONCUR_READ_ONLY</dodf>
     * @rfturn <dodf>truf</dodf> if thf durrfnt row is dftfdtfd to
     * hbvf bffn dflftfd by thf ownfr or bnothfr; <dodf>fblsf</dodf> othfrwisf
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     *
     * @sff DbtbbbsfMftbDbtb#dflftfsArfDftfdtfd
     * @sindf 1.2
     */
    boolfbn rowDflftfd() throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>null</dodf> vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf>
     * or <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfNull(int dolumnIndfx) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>boolfbn</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBoolfbn(int dolumnIndfx, boolfbn x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>bytf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBytf(int dolumnIndfx, bytf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>short</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfShort(int dolumnIndfx, short x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>int</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfInt(int dolumnIndfx, int x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>long</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfLong(int dolumnIndfx, long x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>flobt</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfFlobt(int dolumnIndfx, flobt x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>doublf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfDoublf(int dolumnIndfx, doublf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.mbth.BigDfdimbl</dodf>
     * vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBigDfdimbl(int dolumnIndfx, BigDfdimbl x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>String</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfString(int dolumnIndfx, String x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>bytf</dodf> brrby vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBytfs(int dolumnIndfx, bytf x[]) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Dbtf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfDbtf(int dolumnIndfx, jbvb.sql.Dbtf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Timf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfTimf(int dolumnIndfx, jbvb.sql.Timf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Timfstbmp</dodf>
     * vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfTimfstbmp(int dolumnIndfx, jbvb.sql.Timfstbmp x)
      throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfAsdiiStrfbm(int dolumnIndfx,
                           jbvb.io.InputStrfbm x,
                           int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBinbryStrfbm(int dolumnIndfx,
                            jbvb.io.InputStrfbm x,
                            int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfChbrbdtfrStrfbm(int dolumnIndfx,
                             jbvb.io.Rfbdfr x,
                             int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>Objfdt</dodf> vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * If thf sfdond brgumfnt is bn <dodf>InputStrfbm</dodf> thfn thf strfbm must dontbin
     * thf numbfr of bytfs spfdififd by sdblfOrLfngth.  If thf sfdond brgumfnt is b
     * <dodf>Rfbdfr</dodf> thfn thf rfbdfr must dontbin thf numbfr of dhbrbdtfrs spfdififd
     * by sdblfOrLfngth. If thfsf donditions brf not truf thf drivfr will gfnfrbtf b
     * <dodf>SQLExdfption</dodf> whfn thf stbtfmfnt is fxfdutfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm sdblfOrLfngth for bn objfdt of <dodf>jbvb.mbth.BigDfdimbl</dodf> ,
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs <dodf>InputStrfbm</dodf> bnd <dodf>Rfbdfr</dodf>,
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfObjfdt(int dolumnIndfx, Objfdt x, int sdblfOrLfngth)
      throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>Objfdt</dodf> vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfObjfdt(int dolumnIndfx, Objfdt x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>null</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfNull(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>boolfbn</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBoolfbn(String dolumnLbbfl, boolfbn x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>bytf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBytf(String dolumnLbbfl, bytf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>short</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfShort(String dolumnLbbfl, short x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>int</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfInt(String dolumnLbbfl, int x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>long</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfLong(String dolumnLbbfl, long x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>flobt </dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfFlobt(String dolumnLbbfl, flobt x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>doublf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfDoublf(String dolumnLbbfl, doublf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.BigDfdimbl</dodf>
     * vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBigDfdimbl(String dolumnLbbfl, BigDfdimbl x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>String</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfString(String dolumnLbbfl, String x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b bytf brrby vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf>
     * or <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBytfs(String dolumnLbbfl, bytf x[]) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Dbtf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfDbtf(String dolumnLbbfl, jbvb.sql.Dbtf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Timf</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfTimf(String dolumnLbbfl, jbvb.sql.Timf x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Timfstbmp</dodf>
     * vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfTimfstbmp(String dolumnLbbfl, jbvb.sql.Timfstbmp x)
      throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfAsdiiStrfbm(String dolumnLbbfl,
                           jbvb.io.InputStrfbm x,
                           int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfBinbryStrfbm(String dolumnLbbfl,
                            jbvb.io.InputStrfbm x,
                            int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining
     *        thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfChbrbdtfrStrfbm(String dolumnLbbfl,
                             jbvb.io.Rfbdfr rfbdfr,
                             int lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>Objfdt</dodf> vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * If thf sfdond brgumfnt is bn <dodf>InputStrfbm</dodf> thfn thf strfbm must dontbin
     * thf numbfr of bytfs spfdififd by sdblfOrLfngth.  If thf sfdond brgumfnt is b
     * <dodf>Rfbdfr</dodf> thfn thf rfbdfr must dontbin thf numbfr of dhbrbdtfrs spfdififd
     * by sdblfOrLfngth. If thfsf donditions brf not truf thf drivfr will gfnfrbtf b
     * <dodf>SQLExdfption</dodf> whfn thf stbtfmfnt is fxfdutfd.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm sdblfOrLfngth for bn objfdt of <dodf>jbvb.mbth.BigDfdimbl</dodf> ,
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs <dodf>InputStrfbm</dodf> bnd <dodf>Rfbdfr</dodf>,
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfObjfdt(String dolumnLbbfl, Objfdt x, int sdblfOrLfngth)
      throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn <dodf>Objfdt</dodf> vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfObjfdt(String dolumnLbbfl, Objfdt x) throws SQLExdfption;

    /**
     * Insfrts thf dontfnts of thf insfrt row into this
     * <dodf>RfsultSft</dodf> objfdt bnd into thf dbtbbbsf.
     * Thf dursor must bf on thf insfrt row whfn this mfthod is dbllfd.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>,
     * this mfthod is dbllfd on b dlosfd rfsult sft,
     * if this mfthod is dbllfd whfn thf dursor is not on thf insfrt row,
     * or if not bll of non-nullbblf dolumns in
     * thf insfrt row hbvf bffn givfn b non-null vbluf
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void insfrtRow() throws SQLExdfption;

    /**
     * Updbtfs thf undfrlying dbtbbbsf with thf nfw dontfnts of thf
     * durrfnt row of this <dodf>RfsultSft</dodf> objfdt.
     * This mfthod dbnnot bf dbllfd whfn thf dursor is on thf insfrt row.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>;
     *  this mfthod is dbllfd on b dlosfd rfsult sft or
     * if this mfthod is dbllfd whfn thf dursor is on thf insfrt row
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void updbtfRow() throws SQLExdfption;

    /**
     * Dflftfs thf durrfnt row from this <dodf>RfsultSft</dodf> objfdt
     * bnd from thf undfrlying dbtbbbsf.  This mfthod dbnnot bf dbllfd whfn
     * thf dursor is on thf insfrt row.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>;
     * this mfthod is dbllfd on b dlosfd rfsult sft
     * or if this mfthod is dbllfd whfn thf dursor is on thf insfrt row
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void dflftfRow() throws SQLExdfption;

    /**
     * Rffrfshfs thf durrfnt row with its most rfdfnt vbluf in
     * thf dbtbbbsf.  This mfthod dbnnot bf dbllfd whfn
     * thf dursor is on thf insfrt row.
     *
     * <P>Thf <dodf>rffrfshRow</dodf> mfthod providfs b wby for bn
     * bpplidbtion to
     * fxpliditly tfll thf JDBC drivfr to rffftdh b row(s) from thf
     * dbtbbbsf.  An bpplidbtion mby wbnt to dbll <dodf>rffrfshRow</dodf> whfn
     * dbdhing or prffftdhing is bfing donf by thf JDBC drivfr to
     * fftdh thf lbtfst vbluf of b row from thf dbtbbbsf.  Thf JDBC drivfr
     * mby bdtublly rffrfsh multiplf rows bt ondf if thf fftdh sizf is
     * grfbtfr thbn onf.
     *
     * <P> All vblufs brf rffftdhfd subjfdt to thf trbnsbdtion isolbtion
     * lfvfl bnd dursor sfnsitivity.  If <dodf>rffrfshRow</dodf> is dbllfd bftfr
     * dblling bn updbtfr mfthod, but bfforf dblling
     * thf mfthod <dodf>updbtfRow</dodf>, thfn thf
     * updbtfs mbdf to thf row brf lost.  Cblling thf mfthod
     * <dodf>rffrfshRow</dodf> frfqufntly will likfly slow pfrformbndf.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     * oddurs; this mfthod is dbllfd on b dlosfd rfsult sft;
     * thf rfsult sft typf is <dodf>TYPE_FORWARD_ONLY</dodf> or if this
     * mfthod is dbllfd whfn thf dursor is on thf insfrt row
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod or this mfthod is not supportfd for thf spfdififd rfsult
     * sft typf bnd rfsult sft dondurrfndy.
     * @sindf 1.2
     */
    void rffrfshRow() throws SQLExdfption;

    /**
     * Cbndfls thf updbtfs mbdf to thf durrfnt row in this
     * <dodf>RfsultSft</dodf> objfdt.
     * This mfthod mby bf dbllfd bftfr dblling bn
     * updbtfr mfthod(s) bnd bfforf dblling
     * thf mfthod <dodf>updbtfRow</dodf> to roll bbdk
     * thf updbtfs mbdf to b row.  If no updbtfs hbvf bffn mbdf or
     * <dodf>updbtfRow</dodf> hbs blrfbdy bffn dbllfd, this mfthod hbs no
     * ffffdt.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror
     *            oddurs; this mfthod is dbllfd on b dlosfd rfsult sft;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or if this mfthod is dbllfd whfn thf dursor is
     *            on thf insfrt row
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void dbndflRowUpdbtfs() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf insfrt row.  Thf durrfnt dursor position is
     * rfmfmbfrfd whilf thf dursor is positionfd on thf insfrt row.
     *
     * Thf insfrt row is b spfdibl row bssodibtfd with bn updbtbblf
     * rfsult sft.  It is fssfntiblly b bufffr whfrf b nfw row mby
     * bf donstrudtfd by dblling thf updbtfr mfthods prior to
     * insfrting thf row into thf rfsult sft.
     *
     * Only thf updbtfr, gfttfr,
     * bnd <dodf>insfrtRow</dodf> mfthods mby bf
     * dbllfd whfn thf dursor is on thf insfrt row.  All of thf dolumns in
     * b rfsult sft must bf givfn b vbluf fbdh timf this mfthod is
     * dbllfd bfforf dblling <dodf>insfrtRow</dodf>.
     * An updbtfr mfthod must bf dbllfd bfforf b
     * gfttfr mfthod dbn bf dbllfd on b dolumn vbluf.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs; this
     * mfthod is dbllfd on b dlosfd rfsult sft
     * or thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void movfToInsfrtRow() throws SQLExdfption;

    /**
     * Movfs thf dursor to thf rfmfmbfrfd dursor position, usublly thf
     * durrfnt row.  This mfthod hbs no ffffdt if thf dursor is not on
     * thf insfrt row.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs; this
     * mfthod is dbllfd on b dlosfd rfsult sft
     *  or thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    void movfToCurrfntRow() throws SQLExdfption;

    /**
     * Rftrifvfs thf <dodf>Stbtfmfnt</dodf> objfdt thbt produdfd this
     * <dodf>RfsultSft</dodf> objfdt.
     * If thf rfsult sft wbs gfnfrbtfd somf othfr wby, sudh bs by b
     * <dodf>DbtbbbsfMftbDbtb</dodf> mfthod, this mfthod  mby rfturn
     * <dodf>null</dodf>.
     *
     * @rfturn thf <dodf>Stbtfmfnt</dodf> objfdt thbt produdfd
     * this <dodf>RfsultSft</dodf> objfdt or <dodf>null</dodf>
     * if thf rfsult sft wbs produdfd somf othfr wby
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    Stbtfmfnt gftStbtfmfnt() throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs bn <dodf>Objfdt</dodf>
     * in thf Jbvb progrbmming lbngubgf.
     * If thf vbluf is bn SQL <dodf>NULL</dodf>,
     * thf drivfr rfturns b Jbvb <dodf>null</dodf>.
     * This mfthod usfs thf givfn <dodf>Mbp</dodf> objfdt
     * for thf dustom mbpping of thf
     * SQL strudturfd or distindt typf thbt is bfing rftrifvfd.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm mbp b <dodf>jbvb.util.Mbp</dodf> objfdt thbt dontbins thf mbpping
     * from SQL typf nbmfs to dlbssfs in thf Jbvb progrbmming lbngubgf
     * @rfturn bn <dodf>Objfdt</dodf> in thf Jbvb progrbmming lbngubgf
     * rfprfsfnting thf SQL vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Objfdt gftObjfdt(int dolumnIndfx, jbvb.util.Mbp<String,Clbss<?>> mbp)
        throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Rff</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>Rff</dodf> objfdt rfprfsfnting bn SQL <dodf>REF</dodf>
     *         vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Rff gftRff(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Blob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>Blob</dodf> objfdt rfprfsfnting thf SQL
     *         <dodf>BLOB</dodf> vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Blob gftBlob(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Clob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>Clob</dodf> objfdt rfprfsfnting thf SQL
     *         <dodf>CLOB</dodf> vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Clob gftClob(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs bn <dodf>Arrby</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn bn <dodf>Arrby</dodf> objfdt rfprfsfnting thf SQL
     *         <dodf>ARRAY</dodf> vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Arrby gftArrby(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs bn <dodf>Objfdt</dodf>
     * in thf Jbvb progrbmming lbngubgf.
     * If thf vbluf is bn SQL <dodf>NULL</dodf>,
     * thf drivfr rfturns b Jbvb <dodf>null</dodf>.
     * This mfthod usfs thf spfdififd <dodf>Mbp</dodf> objfdt for
     * dustom mbpping if bppropribtf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm mbp b <dodf>jbvb.util.Mbp</dodf> objfdt thbt dontbins thf mbpping
     * from SQL typf nbmfs to dlbssfs in thf Jbvb progrbmming lbngubgf
     * @rfturn bn <dodf>Objfdt</dodf> rfprfsfnting thf SQL vbluf in thf
     *         spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Objfdt gftObjfdt(String dolumnLbbfl, jbvb.util.Mbp<String,Clbss<?>> mbp)
      throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Rff</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>Rff</dodf> objfdt rfprfsfnting thf SQL <dodf>REF</dodf>
     *         vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Rff gftRff(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Blob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>Blob</dodf> objfdt rfprfsfnting thf SQL <dodf>BLOB</dodf>
     *         vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Blob gftBlob(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>Clob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>Clob</dodf> objfdt rfprfsfnting thf SQL <dodf>CLOB</dodf>
     * vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Clob gftClob(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs bn <dodf>Arrby</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn bn <dodf>Arrby</dodf> objfdt rfprfsfnting thf SQL <dodf>ARRAY</dodf> vbluf in
     *         thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.2
     */
    Arrby gftArrby(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Dbtf</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf dbtf if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf dbtf
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Dbtf</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Dbtf gftDbtf(int dolumnIndfx, Cblfndbr dbl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Dbtf</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf dbtf if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf dbtf
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Dbtf</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Dbtf gftDbtf(String dolumnLbbfl, Cblfndbr dbl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Timf</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf timf if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf timf
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Timf</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Timf gftTimf(int dolumnIndfx, Cblfndbr dbl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Timf</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf timf if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf timf
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Timf</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Timf gftTimf(String dolumnLbbfl, Cblfndbr dbl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf timfstbmp if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf timfstbmp
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Timfstbmp gftTimfstbmp(int dolumnIndfx, Cblfndbr dbl)
      throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     * This mfthod usfs thf givfn dblfndbr to donstrudt bn bppropribtf millisfdond
     * vbluf for thf timfstbmp if thf undfrlying dbtbbbsf dofs not storf
     * timfzonf informbtion.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm dbl thf <dodf>jbvb.util.Cblfndbr</dodf> objfdt
     * to usf in donstrudting thf dbtf
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.sql.Timfstbmp</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid or
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.2
     */
    jbvb.sql.Timfstbmp gftTimfstbmp(String dolumnLbbfl, Cblfndbr dbl)
      throws SQLExdfption;

    //-------------------------- JDBC 3.0 ----------------------------------------

    /**
     * Thf donstbnt indidbting thbt opfn <dodf>RfsultSft</dodf> objfdts with this
     * holdbbility will rfmbin opfn whfn thf durrfnt trbnsbdtion is dommittfd.
     *
     * @sindf 1.4
     */
    int HOLD_CURSORS_OVER_COMMIT = 1;

    /**
     * Thf donstbnt indidbting thbt opfn <dodf>RfsultSft</dodf> objfdts with this
     * holdbbility will bf dlosfd whfn thf durrfnt trbnsbdtion is dommittfd.
     *
     * @sindf 1.4
     */
    int CLOSE_CURSORS_AT_COMMIT = 2;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.nft.URL</dodf>
     * objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf indfx of thf dolumn 1 is thf first, 2 is thf sfdond,...
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.nft.URL</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs; this mfthod
     * is dbllfd on b dlosfd rfsult sft or if b URL is mblformfd
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    jbvb.nft.URL gftURL(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.nft.URL</dodf>
     * objfdt in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf bs b <dodf>jbvb.nft.URL</dodf> objfdt;
     * if thf vbluf is SQL <dodf>NULL</dodf>,
     * thf vbluf rfturnfd is <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs; this mfthod
     * is dbllfd on b dlosfd rfsult sft or if b URL is mblformfd
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    jbvb.nft.URL gftURL(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Rff</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfRff(int dolumnIndfx, jbvb.sql.Rff x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Rff</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfRff(String dolumnLbbfl, jbvb.sql.Rff x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Blob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfBlob(int dolumnIndfx, jbvb.sql.Blob x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Blob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfBlob(String dolumnLbbfl, jbvb.sql.Blob x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Clob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfClob(int dolumnIndfx, jbvb.sql.Clob x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Clob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfClob(String dolumnLbbfl, jbvb.sql.Clob x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Arrby</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfArrby(int dolumnIndfx, jbvb.sql.Arrby x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.Arrby</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.4
     */
    void updbtfArrby(String dolumnLbbfl, jbvb.sql.Arrby x) throws SQLExdfption;

    //------------------------- JDBC 4.0 -----------------------------------

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row of this
     * <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.RowId</dodf> objfdt in thf Jbvb
     * progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is b SQL <dodf>NULL</dodf> thf
     *     vbluf rfturnfd is <dodf>null</dodf>
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    RowId gftRowId(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row of this
     * <dodf>RfsultSft</dodf> objfdt bs b <dodf>jbvb.sql.RowId</dodf> objfdt in thf Jbvb
     * progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf ; if thf vbluf is b SQL <dodf>NULL</dodf> thf
     *     vbluf rfturnfd is <dodf>null</dodf>
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    RowId gftRowId(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>RowId</dodf> vbluf. Thf updbtfr
     * mfthods brf usfd to updbtf dolumn vblufs in thf durrfnt row or thf insfrt
     * row. Thf updbtfr mfthods do not updbtf thf undfrlying dbtbbbsf; instfbd
     * thf <dodf>updbtfRow</dodf> or <dodf>insfrtRow</dodf> mfthods brf dbllfd
     * to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm x thf dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfRowId(int dolumnIndfx, RowId x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>RowId</dodf> vbluf. Thf updbtfr
     * mfthods brf usfd to updbtf dolumn vblufs in thf durrfnt row or thf insfrt
     * row. Thf updbtfr mfthods do not updbtf thf undfrlying dbtbbbsf; instfbd
     * thf <dodf>updbtfRow</dodf> or <dodf>insfrtRow</dodf> mfthods brf dbllfd
     * to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfRowId(String dolumnLbbfl, RowId x) throws SQLExdfption;

    /**
     * Rftrifvfs thf holdbbility of this <dodf>RfsultSft</dodf> objfdt
     * @rfturn  fithfr <dodf>RfsultSft.HOLD_CURSORS_OVER_COMMIT</dodf> or <dodf>RfsultSft.CLOSE_CURSORS_AT_COMMIT</dodf>
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @sindf 1.6
     */
    int gftHoldbbility() throws SQLExdfption;

    /**
     * Rftrifvfs whfthfr this <dodf>RfsultSft</dodf> objfdt hbs bffn dlosfd. A <dodf>RfsultSft</dodf> is dlosfd if thf
     * mfthod dlosf hbs bffn dbllfd on it, or if it is butombtidblly dlosfd.
     *
     * @rfturn truf if this <dodf>RfsultSft</dodf> objfdt is dlosfd; fblsf if it is still opfn
     * @throws SQLExdfption if b dbtbbbsf bddfss frror oddurs
     * @sindf 1.6
     */
    boolfbn isClosfd() throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>String</dodf> vbluf.
     * It is intfndfd for usf whfn updbting <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm nString thf vbluf for thf dolumn to bf updbtfd
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or if b dbtbbbsf bddfss frror oddurs
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNString(int dolumnIndfx, String nString) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>String</dodf> vbluf.
     * It is intfndfd for usf whfn updbting <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm nString thf vbluf for thf dolumn to bf updbtfd
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     * thf rfsult sft dondurrfndy is <CODE>CONCUR_READ_ONLY</dodf>
     *  or if b dbtbbbsf bddfss frror oddurs
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNString(String dolumnLbbfl, String nString) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.NClob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm nClob thf vbluf for thf dolumn to bf updbtfd
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     * if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(int dolumnIndfx, NClob nClob) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.NClob</dodf> vbluf.
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm nClob thf vbluf for thf dolumn to bf updbtfd
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     *  if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(String dolumnLbbfl, NClob nClob) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>NClob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>NClob</dodf> objfdt rfprfsfnting thf SQL
     *         <dodf>NCLOB</dodf> vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft
     * or if b dbtbbbsf bddfss frror oddurs
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    NClob gftNClob(int dolumnIndfx) throws SQLExdfption;

  /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b <dodf>NClob</dodf> objfdt
     * in thf Jbvb progrbmming lbngubgf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>NClob</dodf> objfdt rfprfsfnting thf SQL <dodf>NCLOB</dodf>
     * vbluf in thf spfdififd dolumn
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
   * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft
     * or if b dbtbbbsf bddfss frror oddurs
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    NClob gftNClob(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in  thf durrfnt row of
     *  this <dodf>RfsultSft</dodf> bs b
     * <dodf>jbvb.sql.SQLXML</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn b <dodf>SQLXML</dodf> objfdt thbt mbps bn <dodf>SQL XML</dodf> vbluf
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    SQLXML gftSQLXML(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in  thf durrfnt row of
     *  this <dodf>RfsultSft</dodf> bs b
     * <dodf>jbvb.sql.SQLXML</dodf> objfdt in thf Jbvb progrbmming lbngubgf.
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>SQLXML</dodf> objfdt thbt mbps bn <dodf>SQL XML</dodf> vbluf
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    SQLXML gftSQLXML(String dolumnLbbfl) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.SQLXML</dodf> vbluf.
     * Thf updbtfr
     * mfthods brf usfd to updbtf dolumn vblufs in thf durrfnt row or thf insfrt
     * row. Thf updbtfr mfthods do not updbtf thf undfrlying dbtbbbsf; instfbd
     * thf <dodf>updbtfRow</dodf> or <dodf>insfrtRow</dodf> mfthods brf dbllfd
     * to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm xmlObjfdt thf vbluf for thf dolumn to bf updbtfd
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs; this mfthod
     *  is dbllfd on b dlosfd rfsult sft;
     * thf <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
     *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> hbs not bffn dlosfd
     * for thf <dodf>SQLXML</dodf> objfdt;
     *  if thfrf is bn frror prodfssing thf XML vbluf or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>.  Thf <dodf>gftCbusf</dodf> mfthod
     *  of thf fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if thf
     *  strfbm dofs not dontbin vblid XML.
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfSQLXML(int dolumnIndfx, SQLXML xmlObjfdt) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with b <dodf>jbvb.sql.SQLXML</dodf> vbluf.
     * Thf updbtfr
     * mfthods brf usfd to updbtf dolumn vblufs in thf durrfnt row or thf insfrt
     * row. Thf updbtfr mfthods do not updbtf thf undfrlying dbtbbbsf; instfbd
     * thf <dodf>updbtfRow</dodf> or <dodf>insfrtRow</dodf> mfthods brf dbllfd
     * to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm xmlObjfdt thf dolumn vbluf
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs; this mfthod
     *  is dbllfd on b dlosfd rfsult sft;
     * thf <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
     *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> hbs not bffn dlosfd
     * for thf <dodf>SQLXML</dodf> objfdt;
     *  if thfrf is bn frror prodfssing thf XML vbluf or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>.  Thf <dodf>gftCbusf</dodf> mfthod
     *  of thf fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if thf
     *  strfbm dofs not dontbin vblid XML.
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfSQLXML(String dolumnLbbfl, SQLXML xmlObjfdt) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>String</dodf> in thf Jbvb progrbmming lbngubgf.
     * It is intfndfd for usf whfn
     * bddfssing  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    String gftNString(int dolumnIndfx) throws SQLExdfption;


    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs
     * b <dodf>String</dodf> in thf Jbvb progrbmming lbngubgf.
     * It is intfndfd for usf whfn
     * bddfssing  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn thf dolumn vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf
     * vbluf rfturnfd is <dodf>null</dodf>
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    String gftNString(String dolumnLbbfl) throws SQLExdfption;


    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt.
     * It is intfndfd for usf whfn
     * bddfssing  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     *
     * @rfturn b <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf dolumn
     * vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf.
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    jbvb.io.Rfbdfr gftNChbrbdtfrStrfbm(int dolumnIndfx) throws SQLExdfption;

    /**
     * Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bs b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt.
     * It is intfndfd for usf whfn
     * bddfssing  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @rfturn b <dodf>jbvb.io.Rfbdfr</dodf> objfdt thbt dontbins thf dolumn
     * vbluf; if thf vbluf is SQL <dodf>NULL</dodf>, thf vbluf rfturnfd is
     * <dodf>null</dodf> in thf Jbvb progrbmming lbngubgf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    jbvb.io.Rfbdfr gftNChbrbdtfrStrfbm(String dolumnLbbfl) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.   Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.
     * It is intfndfd for usf whfn
     * updbting  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf> or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNChbrbdtfrStrfbm(int dolumnIndfx,
                             jbvb.io.Rfbdfr x,
                             long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.  Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.
     * It is intfndfd for usf whfn
     * updbting  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining
     *        thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf> or this mfthod is dbllfd on b dlosfd rfsult sft
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNChbrbdtfrStrfbm(String dolumnLbbfl,
                             jbvb.io.Rfbdfr rfbdfr,
                             long lfngth) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfAsdiiStrfbm(int dolumnIndfx,
                           jbvb.io.InputStrfbm x,
                           long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBinbryStrfbm(int dolumnIndfx,
                            jbvb.io.InputStrfbm x,
                            long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfChbrbdtfrStrfbm(int dolumnIndfx,
                             jbvb.io.Rfbdfr x,
                             long lfngth) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfAsdiiStrfbm(String dolumnLbbfl,
                           jbvb.io.InputStrfbm x,
                           long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBinbryStrfbm(String dolumnLbbfl,
                            jbvb.io.InputStrfbm x,
                            long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf, whidh will hbvf
     * thf spfdififd numbfr of bytfs.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining
     *        thf nfw dolumn vbluf
     * @pbrbm lfngth thf lfngth of thf strfbm
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfChbrbdtfrStrfbm(String dolumnLbbfl,
                             jbvb.io.Rfbdfr rfbdfr,
                             long lfngth) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn input strfbm, whidh
     * will hbvf thf spfdififd numbfr of bytfs.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @pbrbm lfngth thf numbfr of bytfs in thf pbrbmftfr dbtb.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBlob(int dolumnIndfx, InputStrfbm inputStrfbm, long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn input strfbm, whidh
     * will hbvf thf spfdififd numbfr of bytfs.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @pbrbm lfngth thf numbfr of bytfs in thf pbrbmftfr dbtb.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBlob(String dolumnLbbfl, InputStrfbm inputStrfbm, long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfClob(int dolumnIndfx,  Rfbdfr rfbdfr, long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfClob(String dolumnLbbfl,  Rfbdfr rfbdfr, long lfngth) throws SQLExdfption;
   /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
    * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft,
     * if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(int dolumnIndfx,  Rfbdfr rfbdfr, long lfngth) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt, whidh is thf givfn numbfr of dhbrbdtfrs long.
     * Whfn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @pbrbm lfngth thf numbfr of dhbrbdtfrs in thf pbrbmftfr dbtb.
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid;
     * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     *  if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(String dolumnLbbfl,  Rfbdfr rfbdfr, long lfngth) throws SQLExdfption;

    //---

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.
     * It is intfndfd for usf whfn
     * updbting  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfNChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf> or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNChbrbdtfrStrfbm(int dolumnIndfx,
                             jbvb.io.Rfbdfr x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf
     * drivfr dofs thf nfdfssbry donvfrsion from Jbvb dhbrbdtfr formbt to
     * thf nbtionbl dhbrbdtfr sft in thf dbtbbbsf.
     * It is intfndfd for usf whfn
     * updbting  <dodf>NCHAR</dodf>,<dodf>NVARCHAR</dodf>
     * bnd <dodf>LONGNVARCHAR</dodf> dolumns.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfNChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining
     *        thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf> or this mfthod is dbllfd on b dlosfd rfsult sft
      * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNChbrbdtfrStrfbm(String dolumnLbbfl,
                             jbvb.io.Rfbdfr rfbdfr) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfAsdiiStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfAsdiiStrfbm(int dolumnIndfx,
                           jbvb.io.InputStrfbm x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfBinbryStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBinbryStrfbm(int dolumnIndfx,
                            jbvb.io.InputStrfbm x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfChbrbdtfrStrfbm(int dolumnIndfx,
                             jbvb.io.Rfbdfr x) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn with bn bsdii strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfAsdiiStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfAsdiiStrfbm(String dolumnLbbfl,
                           jbvb.io.InputStrfbm x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b binbry strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfBinbryStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBinbryStrfbm(String dolumnLbbfl,
                            jbvb.io.InputStrfbm x) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn with b dhbrbdtfr strfbm vbluf.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfChbrbdtfrStrfbm</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr thf <dodf>jbvb.io.Rfbdfr</dodf> objfdt dontbining
     *        thf nfw dolumn vbluf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid; if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfChbrbdtfrStrfbm(String dolumnLbbfl,
                             jbvb.io.Rfbdfr rfbdfr) throws SQLExdfption;
    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn input strfbm. Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfBlob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid; if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBlob(int dolumnIndfx, InputStrfbm inputStrfbm) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn input strfbm. Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     *   <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfBlob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm inputStrfbm An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr
     * vbluf to.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid; if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfBlob(String dolumnLbbfl, InputStrfbm inputStrfbm) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt.
     *  Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     *   <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfClob(int dolumnIndfx,  Rfbdfr rfbdfr) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt.
     *  Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid; if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfClob(String dolumnLbbfl,  Rfbdfr rfbdfr) throws SQLExdfption;
   /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     *
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfNClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond 2, ...
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @throws SQLExdfption if thf dolumnIndfx is not vblid;
    * if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft,
     * if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(int dolumnIndfx,  Rfbdfr rfbdfr) throws SQLExdfption;

    /**
     * Updbtfs thf dfsignbtfd dolumn using thf givfn <dodf>Rfbdfr</dodf>
     * objfdt.
     * Thf dbtb will bf rfbd from thf strfbm
     * bs nffdfd until fnd-of-strfbm is rfbdhfd.  Thf JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to thf dbtbbbsf dhbr formbt.
     *
     * <p>
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf <dodf>updbtfRow</dodf> or
     * <dodf>insfrtRow</dodf> mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it might bf morf fffidifnt to usf b vfrsion of
     * <dodf>updbtfNClob</dodf> whidh tbkfs b lfngth pbrbmftfr.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf of thf dolumn
     * @pbrbm rfbdfr An objfdt thbt dontbins thf dbtb to sft thf pbrbmftfr vbluf to.
     * @throws SQLExdfption if thf dolumnLbbfl is not vblid; if thf drivfr dofs not support nbtionbl
     *         dhbrbdtfr sfts;  if thf drivfr dbn dftfdt thbt b dbtb donvfrsion
     *  frror dould oddur; this mfthod is dbllfd on b dlosfd rfsult sft;
     *  if b dbtbbbsf bddfss frror oddurs or
     * thf rfsult sft dondurrfndy is <dodf>CONCUR_READ_ONLY</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.6
     */
    void updbtfNClob(String dolumnLbbfl,  Rfbdfr rfbdfr) throws SQLExdfption;

    //------------------------- JDBC 4.1 -----------------------------------


    /**
     *<p>Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bnd will donvfrt from thf
     * SQL typf of thf dolumn to thf rfqufstfd Jbvb dbtb typf, if thf
     * donvfrsion is supportfd. If thf donvfrsion is not
     * supportfd  or null is spfdififd for thf typf, b
     * <dodf>SQLExdfption</dodf> is thrown.
     *<p>
     * At b minimum, bn implfmfntbtion must support thf donvfrsions dffinfd in
     * Appfndix B, Tbblf B-3 bnd donvfrsion of bppropribtf usfr dffinfd SQL
     * typfs to b Jbvb typf whidh implfmfnts {@dodf SQLDbtb}, or {@dodf Strudt}.
     * Additionbl donvfrsions mby bf supportfd bnd brf vfndor dffinfd.
     * @pbrbm <T> thf typf of thf dlbss modflfd by this Clbss objfdt
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm typf Clbss rfprfsfnting thf Jbvb dbtb typf to donvfrt thf dfsignbtfd
     * dolumn to.
     * @rfturn bn instbndf of {@dodf typf} holding thf dolumn vbluf
     * @throws SQLExdfption if donvfrsion is not supportfd, typf is null or
     *         bnothfr frror oddurs. Thf gftCbusf() mfthod of thf
     * fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if
     * b donvfrsion frror oddurs
     * @throws SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.7
     */
     publid <T> T gftObjfdt(int dolumnIndfx, Clbss<T> typf) throws SQLExdfption;


    /**
     *<p>Rftrifvfs thf vbluf of thf dfsignbtfd dolumn in thf durrfnt row
     * of this <dodf>RfsultSft</dodf> objfdt bnd will donvfrt from thf
     * SQL typf of thf dolumn to thf rfqufstfd Jbvb dbtb typf, if thf
     * donvfrsion is supportfd. If thf donvfrsion is not
     * supportfd  or null is spfdififd for thf typf, b
     * <dodf>SQLExdfption</dodf> is thrown.
     *<p>
     * At b minimum, bn implfmfntbtion must support thf donvfrsions dffinfd in
     * Appfndix B, Tbblf B-3 bnd donvfrsion of bppropribtf usfr dffinfd SQL
     * typfs to b Jbvb typf whidh implfmfnts {@dodf SQLDbtb}, or {@dodf Strudt}.
     * Additionbl donvfrsions mby bf supportfd bnd brf vfndor dffinfd.
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS dlbusf.
     * If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is thf nbmf
     * of thf dolumn
     * @pbrbm typf Clbss rfprfsfnting thf Jbvb dbtb typf to donvfrt thf dfsignbtfd
     * dolumn to.
     * @pbrbm <T> thf typf of thf dlbss modflfd by this Clbss objfdt
     * @rfturn bn instbndf of {@dodf typf} holding thf dolumn vbluf
     * @throws SQLExdfption if donvfrsion is not supportfd, typf is null or
     *         bnothfr frror oddurs. Thf gftCbusf() mfthod of thf
     * fxdfption mby providf b morf dftbilfd fxdfption, for fxbmplf, if
     * b donvfrsion frror oddurs
     * @throws SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not support
     * this mfthod
     * @sindf 1.7
     */
     publid <T> T gftObjfdt(String dolumnLbbfl, Clbss<T> typf) throws SQLExdfption;

    //------------------------- JDBC 4.2 -----------------------------------

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn {@dodf Objfdt} vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf {@dodf updbtfRow} or
     * {@dodf insfrtRow} mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * If thf sfdond brgumfnt is bn {@dodf InputStrfbm} thfn thf strfbm must dontbin
     * thf numbfr of bytfs spfdififd by sdblfOrLfngth.  If thf sfdond brgumfnt is b
     * {@dodf Rfbdfr} thfn thf rfbdfr must dontbin thf numbfr of dhbrbdtfrs spfdififd
     * by sdblfOrLfngth. If thfsf donditions brf not truf thf drivfr will gfnfrbtf b
     * {@dodf SQLExdfption} whfn thf stbtfmfnt is fxfdutfd.
     *<p>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf
     * @pbrbm sdblfOrLfngth for bn objfdt of {@dodf jbvb.mbth.BigDfdimbl} ,
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs {@dodf InputStrfbm} bnd {@dodf Rfbdfr},
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is {@dodf CONCUR_READ_ONLY}
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not
     * support this mfthod; if thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
     dffbult void updbtfObjfdt(int dolumnIndfx, Objfdt x,
             SQLTypf tbrgftSqlTypf, int sdblfOrLfngth)  throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("updbtfObjfdt not implfmfntfd");
    }

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn {@dodf Objfdt} vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf {@dodf updbtfRow} or
     * {@dodf insfrtRow} mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * If thf sfdond brgumfnt is bn {@dodf InputStrfbm} thfn thf strfbm must
     * dontbin numbfr of bytfs spfdififd by sdblfOrLfngth.  If thf sfdond
     * brgumfnt is b {@dodf Rfbdfr} thfn thf rfbdfr must dontbin thf numbfr
     * of dhbrbdtfrs spfdififd by sdblfOrLfngth. If thfsf donditions brf not
     * truf thf drivfr will gfnfrbtf b
     * {@dodf SQLExdfption} whfn thf stbtfmfnt is fxfdutfd.
     *<p>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS
     * dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is
     * thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf
     * @pbrbm sdblfOrLfngth for bn objfdt of {@dodf jbvb.mbth.BigDfdimbl} ,
     *          this is thf numbfr of digits bftfr thf dfdimbl point. For
     *          Jbvb Objfdt typfs {@dodf InputStrfbm} bnd {@dodf Rfbdfr},
     *          this is thf lfngth
     *          of thf dbtb in thf strfbm or rfbdfr.  For bll othfr typfs,
     *          this vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is {@dodf CONCUR_READ_ONLY}
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not
     * support this mfthod; if thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void updbtfObjfdt(String dolumnLbbfl, Objfdt x,
            SQLTypf tbrgftSqlTypf, int sdblfOrLfngth) throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("updbtfObjfdt not implfmfntfd");
    }

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn {@dodf Objfdt} vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf {@dodf updbtfRow} or
     * {@dodf insfrtRow} mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm dolumnIndfx thf first dolumn is 1, thf sfdond is 2, ...
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf
     * @fxdfption SQLExdfption if thf dolumnIndfx is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is {@dodf CONCUR_READ_ONLY}
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not
     * support this mfthod; if thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void updbtfObjfdt(int dolumnIndfx, Objfdt x, SQLTypf tbrgftSqlTypf)
            throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("updbtfObjfdt not implfmfntfd");
    }

    /**
     * Updbtfs thf dfsignbtfd dolumn with bn {@dodf Objfdt} vbluf.
     *
     * Thf updbtfr mfthods brf usfd to updbtf dolumn vblufs in thf
     * durrfnt row or thf insfrt row.  Thf updbtfr mfthods do not
     * updbtf thf undfrlying dbtbbbsf; instfbd thf {@dodf updbtfRow} or
     * {@dodf insfrtRow} mfthods brf dbllfd to updbtf thf dbtbbbsf.
     *<p>
     * Thf dffbult implfmfntbtion will throw {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm dolumnLbbfl thf lbbfl for thf dolumn spfdififd with thf SQL AS
     * dlbusf.  If thf SQL AS dlbusf wbs not spfdififd, thfn thf lbbfl is
     * thf nbmf of thf dolumn
     * @pbrbm x thf nfw dolumn vbluf
     * @pbrbm tbrgftSqlTypf thf SQL typf to bf sfnt to thf dbtbbbsf
     * @fxdfption SQLExdfption if thf dolumnLbbfl is not vblid;
     * if b dbtbbbsf bddfss frror oddurs;
     * thf rfsult sft dondurrfndy is {@dodf CONCUR_READ_ONLY}
     * or this mfthod is dbllfd on b dlosfd rfsult sft
     * @fxdfption SQLFfbturfNotSupportfdExdfption if thf JDBC drivfr dofs not
     * support this mfthod; if thf JDBC drivfr dofs not support thf spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void updbtfObjfdt(String dolumnLbbfl, Objfdt x,
            SQLTypf tbrgftSqlTypf) throws SQLExdfption {
        throw nfw SQLFfbturfNotSupportfdExdfption("updbtfObjfdt not implfmfntfd");
    }
}
