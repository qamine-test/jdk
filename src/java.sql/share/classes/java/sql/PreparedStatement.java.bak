/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sql;

import jbvb.mbti.BigDfdimbl;
import jbvb.util.Cblfndbr;
import jbvb.io.Rfbdfr;
import jbvb.io.InputStrfbm;

/**
 * An objfdt tibt rfprfsfnts b prfdompilfd SQL stbtfmfnt.
 * <P>A SQL stbtfmfnt is prfdompilfd bnd storfd in b
 * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt. Tiis objfdt dbn tifn bf usfd to
 * fffidifntly fxfdutf tiis stbtfmfnt multiplf timfs.
 *
 * <P><B>Notf:</B> Tif sfttfr mftiods (<dodf>sftSiort</dodf>, <dodf>sftString</dodf>,
 * bnd so on) for sftting IN pbrbmftfr vblufs
 * must spfdify typfs tibt brf dompbtiblf witi tif dffinfd SQL typf of
 * tif input pbrbmftfr. For instbndf, if tif IN pbrbmftfr ibs SQL typf
 * <dodf>INTEGER</dodf>, tifn tif mftiod <dodf>sftInt</dodf> siould bf usfd.
 *
 * <p>If brbitrbry pbrbmftfr typf donvfrsions brf rfquirfd, tif mftiod
 * <dodf>sftObjfdt</dodf> siould bf usfd witi b tbrgft SQL typf.
 * <P>
 * In tif following fxbmplf of sftting b pbrbmftfr, <dodf>don</dodf> rfprfsfnts
 * bn bdtivf donnfdtion:
 * <PRE>
 *   PrfpbrfdStbtfmfnt pstmt = don.prfpbrfStbtfmfnt("UPDATE EMPLOYEES
 *                                     SET SALARY = ? WHERE ID = ?");
 *   pstmt.sftBigDfdimbl(1, 153833.00)
 *   pstmt.sftInt(2, 110592)
 * </PRE>
 *
 * @sff Connfdtion#prfpbrfStbtfmfnt
 * @sff RfsultSft
 */

publid intfrfbdf PrfpbrfdStbtfmfnt fxtfnds Stbtfmfnt {

    /**
     * Exfdutfs tif SQL qufry in tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * bnd rfturns tif <dodf>RfsultSft</dodf> objfdt gfnfrbtfd by tif qufry.
     *
     * @rfturn b <dodf>RfsultSft</dodf> objfdt tibt dontbins tif dbtb produdfd by tif
     *         qufry; nfvfr <dodf>null</dodf>
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf> or tif SQL
     *            stbtfmfnt dofs not rfturn b <dodf>RfsultSft</dodf> objfdt
     * @tirows SQLTimfoutExdfption wifn tif drivfr ibs dftfrminfd tibt tif
     * timfout vbluf tibt wbs spfdififd by tif {@dodf sftQufryTimfout}
     * mftiod ibs bffn fxdffdfd bnd ibs bt lfbst bttfmptfd to dbndfl
     * tif durrfntly running {@dodf Stbtfmfnt}
     */
    RfsultSft fxfdutfQufry() tirows SQLExdfption;

    /**
     * Exfdutfs tif SQL stbtfmfnt in tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * wiidi must bf bn SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnt, sudi bs <dodf>INSERT</dodf>, <dodf>UPDATE</dodf> or
     * <dodf>DELETE</dodf>; or bn SQL stbtfmfnt tibt rfturns notiing,
     * sudi bs b DDL stbtfmfnt.
     *
     * @rfturn fitifr (1) tif row dount for SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnts
     *         or (2) 0 for SQL stbtfmfnts tibt rfturn notiing
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or tif SQL stbtfmfnt rfturns b <dodf>RfsultSft</dodf> objfdt
     * @tirows SQLTimfoutExdfption wifn tif drivfr ibs dftfrminfd tibt tif
     * timfout vbluf tibt wbs spfdififd by tif {@dodf sftQufryTimfout}
     * mftiod ibs bffn fxdffdfd bnd ibs bt lfbst bttfmptfd to dbndfl
     * tif durrfntly running {@dodf Stbtfmfnt}
     */
    int fxfdutfUpdbtf() tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     *
     * <P><B>Notf:</B> You must spfdify tif pbrbmftfr's SQL typf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm sqlTypf tif SQL typf dodf dffinfd in <dodf>jbvb.sql.Typfs</dodf>
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>sqlTypf</dodf> is
     * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
     * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
     * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
     *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
     * or  <dodf>STRUCT</dodf> dbtb typf bnd tif JDBC drivfr dofs not support
     * tiis dbtb typf
     */
    void sftNull(int pbrbmftfrIndfx, int sqlTypf) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>boolfbn</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>BIT</dodf> or <dodf>BOOLEAN</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt;
     * if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBoolfbn(int pbrbmftfrIndfx, boolfbn x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>bytf</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>TINYINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBytf(int pbrbmftfrIndfx, bytf x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>siort</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>SMALLINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftSiort(int pbrbmftfrIndfx, siort x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>int</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>INTEGER</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftInt(int pbrbmftfrIndfx, int x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>long</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>BIGINT</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftLong(int pbrbmftfrIndfx, long x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>flobt</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>REAL</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftFlobt(int pbrbmftfrIndfx, flobt x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>doublf</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>DOUBLE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftDoublf(int pbrbmftfrIndfx, doublf x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.mbti.BigDfdimbl</dodf> vbluf.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>NUMERIC</dodf> vbluf wifn
     * it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBigDfdimbl(int pbrbmftfrIndfx, BigDfdimbl x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb <dodf>String</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>VARCHAR</dodf> or <dodf>LONGVARCHAR</dodf> vbluf
     * (dfpfnding on tif brgumfnt's
     * sizf rflbtivf to tif drivfr's limits on <dodf>VARCHAR</dodf> vblufs)
     * wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftString(int pbrbmftfrIndfx, String x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn Jbvb brrby of bytfs.  Tif drivfr donvfrts
     * tiis to bn SQL <dodf>VARBINARY</dodf> or <dodf>LONGVARBINARY</dodf>
     * (dfpfnding on tif brgumfnt's sizf rflbtivf to tif drivfr's limits on
     * <dodf>VARBINARY</dodf> vblufs) wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBytfs(int pbrbmftfrIndfx, bytf x[]) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf
     * using tif dffbult timf zonf of tif virtubl mbdiinf tibt is running
     * tif bpplidbtion.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>DATE</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf> vbluf.
     * Tif drivfr donvfrts tiis
     * to bn SQL <dodf>TIME</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf.
     * Tif drivfr
     * donvfrts tiis to bn SQL <dodf>TIMESTAMP</dodf> vbluf wifn it sfnds it to tif
     * dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>     */
    void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
     * tif spfdififd numbfr of bytfs.
     * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, int lfngti)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi
     * will ibvf tif spfdififd numbfr of bytfs.
     *
     * Wifn b vfry lbrgf Unidodf vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
     * strfbm bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from Unidodf to tif dbtbbbsf dibr formbt.
     *
     *Tif bytf formbt of tif Unidodf strfbm must bf b Jbvb UTF-8, bs dffinfd in tif
     *Jbvb Virtubl Mbdiinf Spfdifidbtion.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x b <dodf>jbvb.io.InputStrfbm</dodf> objfdt tibt dontbins tif
     *        Unidodf pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
     * tiis mftiod
     * @dfprfdbtfd Usf {@dodf sftCibrbdtfrStrfbm}
     */
    @Dfprfdbtfd
    void sftUnidodfStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                          int lfngti) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
     * tif spfdififd numbfr of bytfs.
     * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
     * strfbm bs nffdfd until fnd-of-filf is rfbdifd.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                         int lfngti) tirows SQLExdfption;

    /**
     * Clfbrs tif durrfnt pbrbmftfr vblufs immfdibtfly.
     * <P>In gfnfrbl, pbrbmftfr vblufs rfmbin in fordf for rfpfbtfd usf of b
     * stbtfmfnt. Sftting b pbrbmftfr vbluf butombtidblly dlfbrs its
     * prfvious vbluf.  Howfvfr, in somf dbsfs it is usfful to immfdibtfly
     * rflfbsf tif rfsourdfs usfd by tif durrfnt pbrbmftfr vblufs; tiis dbn
     * bf donf by dblling tif mftiod <dodf>dlfbrPbrbmftfrs</dodf>.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     */
    void dlfbrPbrbmftfrs() tirows SQLExdfption;

    //----------------------------------------------------------------------
    // Advbndfd ffbturfs:

   /**
    * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
    *
    * Tiis mftiod is similbr to {@link #sftObjfdt(int pbrbmftfrIndfx,
    * Objfdt x, int tbrgftSqlTypf, int sdblfOrLfngti)},
    * fxdfpt tibt it bssumfs b sdblf of zfro.
    *
    * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
    * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
    * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
    *                      sfnt to tif dbtbbbsf
    * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
    * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or tiis
    * mftiod is dbllfd on b dlosfd PrfpbrfdStbtfmfnt
    * @fxdfption SQLFfbturfNotSupportfdExdfption if
    * tif JDBC drivfr dofs not support tif spfdififd tbrgftSqlTypf
    * @sff Typfs
    */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf)
      tirows SQLExdfption;

    /**
     * <p>Sfts tif vbluf of tif dfsignbtfd pbrbmftfr using tif givfn objfdt.
     *
     * <p>Tif JDBC spfdifidbtion spfdififs b stbndbrd mbpping from
     * Jbvb <dodf>Objfdt</dodf> typfs to SQL typfs.  Tif givfn brgumfnt
     * will bf donvfrtfd to tif dorrfsponding SQL typf bfforf bfing
     * sfnt to tif dbtbbbsf.
     *
     * <p>Notf tibt tiis mftiod mby bf usfd to pbss dbtbtbbbsf-
     * spfdifid bbstrbdt dbtb typfs, by using b drivfr-spfdifid Jbvb
     * typf.
     *
     * If tif objfdt is of b dlbss implfmfnting tif intfrfbdf <dodf>SQLDbtb</dodf>,
     * tif JDBC drivfr siould dbll tif mftiod <dodf>SQLDbtb.writfSQL</dodf>
     * to writf it to tif SQL dbtb strfbm.
     * If, on tif otifr ibnd, tif objfdt is of b dlbss implfmfnting
     * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
     *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>, <dodf>RowId</dodf>, <dodf>SQLXML</dodf>
     * or <dodf>Arrby</dodf>, tif drivfr siould pbss it to tif dbtbbbsf bs b
     * vbluf of tif dorrfsponding SQL typf.
     * <P>
     *<b>Notf:</b> Not bll dbtbbbsfs bllow for b non-typfd Null to bf sfnt to
     * tif bbdkfnd. For mbximum portbbility, tif <dodf>sftNull</dodf> or tif
     * <dodf>sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int sqlTypf)</dodf>
     * mftiod siould bf usfd
     * instfbd of <dodf>sftObjfdt(int pbrbmftfrIndfx, Objfdt x)</dodf>.
     *<p>
     * <b>Notf:</b> Tiis mftiod tirows bn fxdfption if tifrf is bn bmbiguity, for fxbmplf, if tif
     * objfdt is of b dlbss implfmfnting morf tibn onf of tif intfrfbdfs nbmfd bbovf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     *  tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or tif typf of tif givfn objfdt is bmbiguous
     */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x) tirows SQLExdfption;

    /**
     * Exfdutfs tif SQL stbtfmfnt in tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * wiidi mby bf bny kind of SQL stbtfmfnt.
     * Somf prfpbrfd stbtfmfnts rfturn multiplf rfsults; tif <dodf>fxfdutf</dodf>
     * mftiod ibndlfs tifsf domplfx stbtfmfnts bs wfll bs tif simplfr
     * form of stbtfmfnts ibndlfd by tif mftiods <dodf>fxfdutfQufry</dodf>
     * bnd <dodf>fxfdutfUpdbtf</dodf>.
     * <P>
     * Tif <dodf>fxfdutf</dodf> mftiod rfturns b <dodf>boolfbn</dodf> to
     * indidbtf tif form of tif first rfsult.  You must dbll fitifr tif mftiod
     * <dodf>gftRfsultSft</dodf> or <dodf>gftUpdbtfCount</dodf>
     * to rftrifvf tif rfsult; you must dbll <dodf>gftMorfRfsults</dodf> to
     * movf to bny subsfqufnt rfsult(s).
     *
     * @rfturn <dodf>truf</dodf> if tif first rfsult is b <dodf>RfsultSft</dodf>
     *         objfdt; <dodf>fblsf</dodf> if tif first rfsult is bn updbtf
     *         dount or tifrf is no rfsult
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or bn brgumfnt is supplifd to tiis mftiod
     * @tirows SQLTimfoutExdfption wifn tif drivfr ibs dftfrminfd tibt tif
     * timfout vbluf tibt wbs spfdififd by tif {@dodf sftQufryTimfout}
     * mftiod ibs bffn fxdffdfd bnd ibs bt lfbst bttfmptfd to dbndfl
     * tif durrfntly running {@dodf Stbtfmfnt}
     * @sff Stbtfmfnt#fxfdutf
     * @sff Stbtfmfnt#gftRfsultSft
     * @sff Stbtfmfnt#gftUpdbtfCount
     * @sff Stbtfmfnt#gftMorfRfsults

     */
    boolfbn fxfdutf() tirows SQLExdfption;

    //--------------------------JDBC 2.0-----------------------------

    /**
     * Adds b sft of pbrbmftfrs to tiis <dodf>PrfpbrfdStbtfmfnt</dodf>
     * objfdt's bbtdi of dommbnds.
     *
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sff Stbtfmfnt#bddBbtdi
     * @sindf 1.2
     */
    void bddBbtdi() tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rfbdfr</dodf>
     * objfdt, wiidi is tif givfn numbfr of dibrbdtfrs long.
     * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt dontbins tif
     *        Unidodf dbtb
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftCibrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr,
                          int lfngti) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn
     *  <dodf>REF(&lt;strudturfd-typf&gt;)</dodf> vbluf.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>REF</dodf> vbluf wifn it
     * sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x bn SQL <dodf>REF</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.2
     */
    void sftRff (int pbrbmftfrIndfx, Rff x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Blob</dodf> objfdt.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>BLOB</dodf> vbluf wifn it
     * sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x b <dodf>Blob</dodf> objfdt tibt mbps bn SQL <dodf>BLOB</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.2
     */
    void sftBlob (int pbrbmftfrIndfx, Blob x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Clob</dodf> objfdt.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>CLOB</dodf> vbluf wifn it
     * sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x b <dodf>Clob</dodf> objfdt tibt mbps bn SQL <dodf>CLOB</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.2
     */
    void sftClob (int pbrbmftfrIndfx, Clob x) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Arrby</dodf> objfdt.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>ARRAY</dodf> vbluf wifn it
     * sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x bn <dodf>Arrby</dodf> objfdt tibt mbps bn SQL <dodf>ARRAY</dodf> vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.2
     */
    void sftArrby (int pbrbmftfrIndfx, Arrby x) tirows SQLExdfption;

    /**
     * Rftrifvfs b <dodf>RfsultSftMftbDbtb</dodf> objfdt tibt dontbins
     * informbtion bbout tif dolumns of tif <dodf>RfsultSft</dodf> objfdt
     * tibt will bf rfturnfd wifn tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * is fxfdutfd.
     * <P>
     * Bfdbusf b <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt is prfdompilfd, it is
     * possiblf to know bbout tif <dodf>RfsultSft</dodf> objfdt tibt it will
     * rfturn witiout ibving to fxfdutf it.  Consfqufntly, it is possiblf
     * to invokf tif mftiod <dodf>gftMftbDbtb</dodf> on b
     * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt rbtifr tibn wbiting to fxfdutf
     * it bnd tifn invoking tif <dodf>RfsultSft.gftMftbDbtb</dodf> mftiod
     * on tif <dodf>RfsultSft</dodf> objfdt tibt is rfturnfd.
     * <P>
     * <B>NOTE:</B> Using tiis mftiod mby bf fxpfnsivf for somf drivfrs duf
     * to tif lbdk of undfrlying DBMS support.
     *
     * @rfturn tif dfsdription of b <dodf>RfsultSft</dodf> objfdt's dolumns or
     *         <dodf>null</dodf> if tif drivfr dbnnot rfturn b
     *         <dodf>RfsultSftMftbDbtb</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if tif JDBC drivfr dofs not support
     * tiis mftiod
     * @sindf 1.2
     */
    RfsultSftMftbDbtb gftMftbDbtb() tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Dbtf</dodf> vbluf,
     * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
     * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>DATE</dodf> vbluf,
     * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi
     * b <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif dbtf
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
     * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
     *            to donstrudt tif dbtf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftDbtf(int pbrbmftfrIndfx, jbvb.sql.Dbtf x, Cblfndbr dbl)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timf</dodf> vbluf,
     * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
     * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIME</dodf> vbluf,
     * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi
     * b <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif timf
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
     * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
     *            to donstrudt tif timf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftTimf(int pbrbmftfrIndfx, jbvb.sql.Timf x, Cblfndbr dbl)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.Timfstbmp</dodf> vbluf,
     * using tif givfn <dodf>Cblfndbr</dodf> objfdt.  Tif drivfr usfs
     * tif <dodf>Cblfndbr</dodf> objfdt to donstrudt bn SQL <dodf>TIMESTAMP</dodf> vbluf,
     * wiidi tif drivfr tifn sfnds to tif dbtbbbsf.  Witi b
     *  <dodf>Cblfndbr</dodf> objfdt, tif drivfr dbn dbldulbtf tif timfstbmp
     * tbking into bddount b dustom timfzonf.  If no
     * <dodf>Cblfndbr</dodf> objfdt is spfdififd, tif drivfr usfs tif dffbult
     * timfzonf, wiidi is tibt of tif virtubl mbdiinf running tif bpplidbtion.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @pbrbm dbl tif <dodf>Cblfndbr</dodf> objfdt tif drivfr will usf
     *            to donstrudt tif timfstbmp
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.2
     */
    void sftTimfstbmp(int pbrbmftfrIndfx, jbvb.sql.Timfstbmp x, Cblfndbr dbl)
            tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to SQL <dodf>NULL</dodf>.
     * Tiis vfrsion of tif mftiod <dodf>sftNull</dodf> siould
     * bf usfd for usfr-dffinfd typfs bnd REF typf pbrbmftfrs.  Exbmplfs
     * of usfr-dffinfd typfs indludf: STRUCT, DISTINCT, JAVA_OBJECT, bnd
     * nbmfd brrby typfs.
     *
     * <P><B>Notf:</B> To bf portbblf, bpplidbtions must givf tif
     * SQL typf dodf bnd tif fully-qublififd SQL typf nbmf wifn spfdifying
     * b NULL usfr-dffinfd or REF pbrbmftfr.  In tif dbsf of b usfr-dffinfd typf
     * tif nbmf is tif typf nbmf of tif pbrbmftfr itsflf.  For b REF
     * pbrbmftfr, tif nbmf is tif typf nbmf of tif rfffrfndfd typf.  If
     * b JDBC drivfr dofs not nffd tif typf dodf or typf nbmf informbtion,
     * it mby ignorf it.
     *
     * Altiougi it is intfndfd for usfr-dffinfd bnd Rff pbrbmftfrs,
     * tiis mftiod mby bf usfd to sft b null pbrbmftfr of bny JDBC typf.
     * If tif pbrbmftfr dofs not ibvf b usfr-dffinfd or REF typf, tif givfn
     * typfNbmf is ignorfd.
     *
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm sqlTypf b vbluf from <dodf>jbvb.sql.Typfs</dodf>
     * @pbrbm typfNbmf tif fully-qublififd nbmf of bn SQL usfr-dffinfd typf;
     *  ignorfd if tif pbrbmftfr is not b usfr-dffinfd typf or REF
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @fxdfption SQLFfbturfNotSupportfdExdfption if <dodf>sqlTypf</dodf> is
     * b <dodf>ARRAY</dodf>, <dodf>BLOB</dodf>, <dodf>CLOB</dodf>,
     * <dodf>DATALINK</dodf>, <dodf>JAVA_OBJECT</dodf>, <dodf>NCHAR</dodf>,
     * <dodf>NCLOB</dodf>, <dodf>NVARCHAR</dodf>, <dodf>LONGNVARCHAR</dodf>,
     *  <dodf>REF</dodf>, <dodf>ROWID</dodf>, <dodf>SQLXML</dodf>
     * or  <dodf>STRUCT</dodf> dbtb typf bnd tif JDBC drivfr dofs not support
     * tiis dbtb typf or if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.2
     */
  void sftNull (int pbrbmftfrIndfx, int sqlTypf, String typfNbmf)
    tirows SQLExdfption;

    //------------------------- JDBC 3.0 -----------------------------------

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.nft.URL</dodf> vbluf.
     * Tif drivfr donvfrts tiis to bn SQL <dodf>DATALINK</dodf> vbluf
     * wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif <dodf>jbvb.nft.URL</dodf> objfdt to bf sft
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.4
     */
    void sftURL(int pbrbmftfrIndfx, jbvb.nft.URL x) tirows SQLExdfption;

    /**
     * Rftrifvfs tif numbfr, typfs bnd propfrtifs of tiis
     * <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt's pbrbmftfrs.
     *
     * @rfturn b <dodf>PbrbmftfrMftbDbtb</dodf> objfdt tibt dontbins informbtion
     *         bbout tif numbfr, typfs bnd propfrtifs for fbdi
     *  pbrbmftfr mbrkfr of tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sff PbrbmftfrMftbDbtb
     * @sindf 1.4
     */
    PbrbmftfrMftbDbtb gftPbrbmftfrMftbDbtb() tirows SQLExdfption;

    //------------------------- JDBC 4.0 -----------------------------------

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.RowId</dodf> objfdt. Tif
     * drivfr donvfrts tiis to b SQL <dodf>ROWID</dodf> vbluf wifn it sfnds it
     * to tif dbtbbbsf
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif pbrbmftfr vbluf
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     *
     * @sindf 1.6
     */
    void sftRowId(int pbrbmftfrIndfx, RowId x) tirows SQLExdfption;


    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>String</dodf> objfdt.
     * Tif drivfr donvfrts tiis to b SQL <dodf>NCHAR</dodf> or
     * <dodf>NVARCHAR</dodf> or <dodf>LONGNVARCHAR</dodf> vbluf
     * (dfpfnding on tif brgumfnt's
     * sizf rflbtivf to tif drivfr's limits on <dodf>NVARCHAR</dodf> vblufs)
     * wifn it sfnds it to tif dbtbbbsf.
     *
     * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm vbluf tif pbrbmftfr vbluf
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if tif drivfr dofs not support nbtionbl
     *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftNString(int pbrbmftfrIndfx, String vbluf) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Tif
     * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
     * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
     * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.
     * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm vbluf tif pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if tif drivfr dofs not support nbtionbl
     *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftNCibrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf, long lfngti) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>jbvb.sql.NClob</dodf> objfdt. Tif drivfr donvfrts tiis to b
     * SQL <dodf>NCLOB</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
     * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm vbluf tif pbrbmftfr vbluf
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if tif drivfr dofs not support nbtionbl
     *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, NClob vbluf) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif rfbdfr must dontbin  tif numbfr
     * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     *Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
     * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
     * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
     * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs; tiis mftiod is dbllfd on
     * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or if tif lfngti spfdififd is lfss tibn zfro.
     *
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngti)
       tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.  Tif inputstrfbm must dontbin  tif numbfr
     * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm, int)</dodf>
     * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
     * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
     * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1,
     * tif sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
     * vbluf to.
     * @pbrbm lfngti tif numbfr of bytfs in tif pbrbmftfr dbtb.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>;
     *  if tif lfngti spfdififd
     * is lfss tibn zfro or if tif numbfr of bytfs in tif inputstrfbm dofs not mbtdi
     * tif spfdififd lfngti.
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     *
     * @sindf 1.6
     */
     void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm, long lfngti)
        tirows SQLExdfption;
    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.  Tif rfbdfr must dontbin  tif numbfr
     * of dibrbdtfrs spfdififd by lfngti otifrwisf b <dodf>SQLExdfption</dodf> will bf
     * gfnfrbtfd wifn tif <dodf>PrfpbrfdStbtfmfnt</dodf> is fxfdutfd.
     * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr, int)</dodf> mftiod
     * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
     * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
     * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif pbrbmftfr dbtb.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if tif lfngti spfdififd is lfss tibn zfro;
     * if tif drivfr dofs not support nbtionbl dibrbdtfr sfts;
     * if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     *
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr, long lfngti)
       tirows SQLExdfption;

     /**
      * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>jbvb.sql.SQLXML</dodf> objfdt.
      * Tif drivfr donvfrts tiis to bn
      * SQL <dodf>XML</dodf> vbluf wifn it sfnds it to tif dbtbbbsf.
      *
      * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
      * @pbrbm xmlObjfdt b <dodf>SQLXML</dodf> objfdt tibt mbps bn SQL <dodf>XML</dodf> vbluf
      * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
      *  tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
      * or tif <dodf>jbvb.xml.trbnsform.Rfsult</dodf>,
      *  <dodf>Writfr</dodf> or <dodf>OutputStrfbm</dodf> ibs not bffn dlosfd for
      * tif <dodf>SQLXML</dodf> objfdt
      * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
      *
      * @sindf 1.6
      */
     void sftSQLXML(int pbrbmftfrIndfx, SQLXML xmlObjfdt) tirows SQLExdfption;

    /**
     * <p>Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
     *
     * If tif sfdond brgumfnt is bn <dodf>InputStrfbm</dodf> tifn tif strfbm must dontbin
     * tif numbfr of bytfs spfdififd by sdblfOrLfngti.  If tif sfdond brgumfnt is b
     * <dodf>Rfbdfr</dodf> tifn tif rfbdfr must dontbin tif numbfr of dibrbdtfrs spfdififd
     * by sdblfOrLfngti. If tifsf donditions brf not truf tif drivfr will gfnfrbtf b
     * <dodf>SQLExdfption</dodf> wifn tif prfpbrfd stbtfmfnt is fxfdutfd.
     *
     * <p>Tif givfn Jbvb objfdt will bf donvfrtfd to tif givfn tbrgftSqlTypf
     * bfforf bfing sfnt to tif dbtbbbsf.
     *
     * If tif objfdt ibs b dustom mbpping (is of b dlbss implfmfnting tif
     * intfrfbdf <dodf>SQLDbtb</dodf>),
     * tif JDBC drivfr siould dbll tif mftiod <dodf>SQLDbtb.writfSQL</dodf> to
     * writf it to tif SQL dbtb strfbm.
     * If, on tif otifr ibnd, tif objfdt is of b dlbss implfmfnting
     * <dodf>Rff</dodf>, <dodf>Blob</dodf>, <dodf>Clob</dodf>,  <dodf>NClob</dodf>,
     *  <dodf>Strudt</dodf>, <dodf>jbvb.nft.URL</dodf>,
     * or <dodf>Arrby</dodf>, tif drivfr siould pbss it to tif dbtbbbsf bs b
     * vbluf of tif dorrfsponding SQL typf.
     *
     * <p>Notf tibt tiis mftiod mby bf usfd to pbss dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf tif SQL typf (bs dffinfd in jbvb.sql.Typfs) to bf
     * sfnt to tif dbtbbbsf. Tif sdblf brgumfnt mby furtifr qublify tiis typf.
     * @pbrbm sdblfOrLfngti for <dodf>jbvb.sql.Typfs.DECIMAL</dodf>
     *          or <dodf>jbvb.sql.Typfs.NUMERIC typfs</dodf>,
     *          tiis is tif numbfr of digits bftfr tif dfdimbl point. For
     *          Jbvb Objfdt typfs <dodf>InputStrfbm</dodf> bnd <dodf>Rfbdfr</dodf>,
     *          tiis is tif lfngti
     *          of tif dbtb in tif strfbm or rfbdfr.  For bll otifr typfs,
     *          tiis vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or
     *            if tif Jbvb Objfdt spfdififd by x is bn InputStrfbm
     *            or Rfbdfr objfdt bnd tif vbluf of tif sdblf pbrbmftfr is lfss
     *            tibn zfro
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * tif JDBC drivfr dofs not support tif spfdififd tbrgftSqlTypf
     * @sff Typfs
     *
     */
    void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, int tbrgftSqlTypf, int sdblfOrLfngti)
            tirows SQLExdfption;
   /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
     * tif spfdififd numbfr of bytfs.
     * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
    */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x, long lfngti)
            tirows SQLExdfption;
    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm, wiidi will ibvf
     * tif spfdififd numbfr of bytfs.
     * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
     * strfbm bs nffdfd until fnd-of-filf is rfbdifd.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
     * @pbrbm lfngti tif numbfr of bytfs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x,
                         long lfngti) tirows SQLExdfption;
        /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rfbdfr</dodf>
     * objfdt, wiidi is tif givfn numbfr of dibrbdtfrs long.
     * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt dontbins tif
     *        Unidodf dbtb
     * @pbrbm lfngti tif numbfr of dibrbdtfrs in tif strfbm
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @sindf 1.6
     */
    void sftCibrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr,
                          long lfngti) tirows SQLExdfption;
    //-----
    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm.
     * Wifn b vfry lbrgf ASCII vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf>. Dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from ASCII to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftAsdiiStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif Jbvb input strfbm tibt dontbins tif ASCII pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
       * @sindf 1.6
    */
    void sftAsdiiStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
            tirows SQLExdfption;
    /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn input strfbm.
     * Wifn b vfry lbrgf binbry vbluf is input to b <dodf>LONGVARBINARY</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.InputStrfbm</dodf> objfdt. Tif dbtb will bf rfbd from tif
     * strfbm bs nffdfd until fnd-of-filf is rfbdifd.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftBinbryStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif jbvb input strfbm wiidi dontbins tif binbry pbrbmftfr vbluf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
    void sftBinbryStrfbm(int pbrbmftfrIndfx, jbvb.io.InputStrfbm x)
    tirows SQLExdfption;
        /**
     * Sfts tif dfsignbtfd pbrbmftfr to tif givfn <dodf>Rfbdfr</dodf>
     * objfdt.
     * Wifn b vfry lbrgf UNICODE vbluf is input to b <dodf>LONGVARCHAR</dodf>
     * pbrbmftfr, it mby bf morf prbdtidbl to sfnd it vib b
     * <dodf>jbvb.io.Rfbdfr</dodf> objfdt. Tif dbtb will bf rfbd from tif strfbm
     * bs nffdfd until fnd-of-filf is rfbdifd.  Tif JDBC drivfr will
     * do bny nfdfssbry donvfrsion from UNICODE to tif dbtbbbsf dibr formbt.
     *
     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr tif <dodf>jbvb.io.Rfbdfr</dodf> objfdt tibt dontbins tif
     *        Unidodf dbtb
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
    void sftCibrbdtfrStrfbm(int pbrbmftfrIndfx,
                          jbvb.io.Rfbdfr rfbdfr) tirows SQLExdfption;
  /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt. Tif
     * <dodf>Rfbdfr</dodf> rfbds tif dbtb till fnd-of-filf is rfbdifd. Tif
     * drivfr dofs tif nfdfssbry donvfrsion from Jbvb dibrbdtfr formbt to
     * tif nbtionbl dibrbdtfr sft in tif dbtbbbsf.

     * <P><B>Notf:</B> Tiis strfbm objfdt dbn fitifr bf b stbndbrd
     * Jbvb strfbm objfdt or your own subdlbss tibt implfmfnts tif
     * stbndbrd intfrfbdf.
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftNCibrbdtfrStrfbm</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm vbluf tif pbrbmftfr vbluf
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if tif drivfr dofs not support nbtionbl
     *         dibrbdtfr sfts;  if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur; if b dbtbbbsf bddfss frror oddurs; or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftNCibrbdtfrStrfbm(int pbrbmftfrIndfx, Rfbdfr vbluf) tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
     * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
     * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
     * tif sfrvfr bs b <dodf>CLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
     * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARCHAR</dodf> or b <dodf>CLOB</dodf>
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs; tiis mftiod is dbllfd on
     * b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>or if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt
     *
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     * @sindf 1.6
     */
     void sftClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
       tirows SQLExdfption;

    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>InputStrfbm</dodf> objfdt.
     * Tiis mftiod difffrs from tif <dodf>sftBinbryStrfbm (int, InputStrfbm)</dodf>
     * mftiod bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf
     * sfnt to tif sfrvfr bs b <dodf>BLOB</dodf>.  Wifn tif <dodf>sftBinbryStrfbm</dodf> mftiod is usfd,
     * tif drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGVARBINARY</dodf> or b <dodf>BLOB</dodf>
     *
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftBlob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1,
     * tif sfdond is 2, ...
     * @pbrbm inputStrfbm An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr
     * vbluf to.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf> or
     * if pbrbmftfrIndfx dofs not dorrfspond
     * to b pbrbmftfr mbrkfr in tif SQL stbtfmfnt,
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     *
     * @sindf 1.6
     */
     void sftBlob(int pbrbmftfrIndfx, InputStrfbm inputStrfbm)
        tirows SQLExdfption;
    /**
     * Sfts tif dfsignbtfd pbrbmftfr to b <dodf>Rfbdfr</dodf> objfdt.
     * Tiis mftiod difffrs from tif <dodf>sftCibrbdtfrStrfbm (int, Rfbdfr)</dodf> mftiod
     * bfdbusf it informs tif drivfr tibt tif pbrbmftfr vbluf siould bf sfnt to
     * tif sfrvfr bs b <dodf>NCLOB</dodf>.  Wifn tif <dodf>sftCibrbdtfrStrfbm</dodf> mftiod is usfd, tif
     * drivfr mby ibvf to do fxtrb work to dftfrminf wiftifr tif pbrbmftfr
     * dbtb siould bf sfnt to tif sfrvfr bs b <dodf>LONGNVARCHAR</dodf> or b <dodf>NCLOB</dodf>
     * <P><B>Notf:</B> Consult your JDBC drivfr dodumfntbtion to dftfrminf if
     * it migit bf morf fffidifnt to usf b vfrsion of
     * <dodf>sftNClob</dodf> wiidi tbkfs b lfngti pbrbmftfr.
     *
     * @pbrbm pbrbmftfrIndfx indfx of tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm rfbdfr An objfdt tibt dontbins tif dbtb to sft tif pbrbmftfr vbluf to.
     * @tirows SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b pbrbmftfr
     * mbrkfr in tif SQL stbtfmfnt;
     * if tif drivfr dofs not support nbtionbl dibrbdtfr sfts;
     * if tif drivfr dbn dftfdt tibt b dbtb donvfrsion
     *  frror dould oddur;  if b dbtbbbsf bddfss frror oddurs or
     * tiis mftiod is dbllfd on b dlosfd <dodf>PrfpbrfdStbtfmfnt</dodf>
     * @tirows SQLFfbturfNotSupportfdExdfption  if tif JDBC drivfr dofs not support tiis mftiod
     *
     * @sindf 1.6
     */
     void sftNClob(int pbrbmftfrIndfx, Rfbdfr rfbdfr)
       tirows SQLExdfption;

    //------------------------- JDBC 4.2 -----------------------------------

    /**
     * <p>Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
     *
     * If tif sfdond brgumfnt is bn {@dodf InputStrfbm} tifn tif strfbm
     * must dontbin tif numbfr of bytfs spfdififd by sdblfOrLfngti.
     * If tif sfdond brgumfnt is b {@dodf Rfbdfr} tifn tif rfbdfr must
     * dontbin tif numbfr of dibrbdtfrs spfdififd by sdblfOrLfngti. If tifsf
     * donditions brf not truf tif drivfr will gfnfrbtf b
     * {@dodf SQLExdfption} wifn tif prfpbrfd stbtfmfnt is fxfdutfd.
     *
     * <p>Tif givfn Jbvb objfdt will bf donvfrtfd to tif givfn tbrgftSqlTypf
     * bfforf bfing sfnt to tif dbtbbbsf.
     *
     * If tif objfdt ibs b dustom mbpping (is of b dlbss implfmfnting tif
     * intfrfbdf {@dodf SQLDbtb}),
     * tif JDBC drivfr siould dbll tif mftiod {@dodf SQLDbtb.writfSQL} to
     * writf it to tif SQL dbtb strfbm.
     * If, on tif otifr ibnd, tif objfdt is of b dlbss implfmfnting
     * {@dodf Rff}, {@dodf Blob}, {@dodf Clob},  {@dodf NClob},
     *  {@dodf Strudt}, {@dodf jbvb.nft.URL},
     * or {@dodf Arrby}, tif drivfr siould pbss it to tif dbtbbbsf bs b
     * vbluf of tif dorrfsponding SQL typf.
     *
     * <p>Notf tibt tiis mftiod mby bf usfd to pbss dbtbbbsf-spfdifid
     * bbstrbdt dbtb typfs.
     *<P>
     * Tif dffbult implfmfntbtion will tirow {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf tif SQL typf to bf sfnt to tif dbtbbbsf. Tif
     * sdblf brgumfnt mby furtifr qublify tiis typf.
     * @pbrbm sdblfOrLfngti for {@dodf jbvb.sql.JDBCTypf.DECIMAL}
     *          or {@dodf jbvb.sql.JDBCTypf.NUMERIC typfs},
     *          tiis is tif numbfr of digits bftfr tif dfdimbl point. For
     *          Jbvb Objfdt typfs {@dodf InputStrfbm} bnd {@dodf Rfbdfr},
     *          tiis is tif lfngti
     *          of tif dbtb in tif strfbm or rfbdfr.  For bll otifr typfs,
     *          tiis vbluf will bf ignorfd.
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b
     * pbrbmftfr mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs
     * or tiis mftiod is dbllfd on b dlosfd {@dodf PrfpbrfdStbtfmfnt}  or
     *            if tif Jbvb Objfdt spfdififd by x is bn InputStrfbm
     *            or Rfbdfr objfdt bnd tif vbluf of tif sdblf pbrbmftfr is lfss
     *            tibn zfro
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * tif JDBC drivfr dofs not support tif spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, SQLTypf tbrgftSqlTypf,
             int sdblfOrLfngti) tirows SQLExdfption {
        tirow nfw SQLFfbturfNotSupportfdExdfption("sftObjfdt not implfmfntfd");
    }

    /**
     * Sfts tif vbluf of tif dfsignbtfd pbrbmftfr witi tif givfn objfdt.
     *
     * Tiis mftiod is similbr to {@link #sftObjfdt(int pbrbmftfrIndfx,
     * Objfdt x, SQLTypf tbrgftSqlTypf, int sdblfOrLfngti)},
     * fxdfpt tibt it bssumfs b sdblf of zfro.
     *<P>
     * Tif dffbult implfmfntbtion will tirow {@dodf SQLFfbturfNotSupportfdExdfption}
     *
     * @pbrbm pbrbmftfrIndfx tif first pbrbmftfr is 1, tif sfdond is 2, ...
     * @pbrbm x tif objfdt dontbining tif input pbrbmftfr vbluf
     * @pbrbm tbrgftSqlTypf tif SQL typf to bf sfnt to tif dbtbbbsf
     * @fxdfption SQLExdfption if pbrbmftfrIndfx dofs not dorrfspond to b
     * pbrbmftfr mbrkfr in tif SQL stbtfmfnt; if b dbtbbbsf bddfss frror oddurs
     * or tiis mftiod is dbllfd on b dlosfd {@dodf PrfpbrfdStbtfmfnt}
     * @fxdfption SQLFfbturfNotSupportfdExdfption if
     * tif JDBC drivfr dofs not support tif spfdififd tbrgftSqlTypf
     * @sff JDBCTypf
     * @sff SQLTypf
     * @sindf 1.8
     */
    dffbult void sftObjfdt(int pbrbmftfrIndfx, Objfdt x, SQLTypf tbrgftSqlTypf)
      tirows SQLExdfption {
        tirow nfw SQLFfbturfNotSupportfdExdfption("sftObjfdt not implfmfntfd");
    }

    /**
     * Exfdutfs tif SQL stbtfmfnt in tiis <dodf>PrfpbrfdStbtfmfnt</dodf> objfdt,
     * wiidi must bf bn SQL Dbtb Mbnipulbtion Lbngubgf (DML) stbtfmfnt,
     * sudi bs <dodf>INSERT</dodf>, <dodf>UPDATE</dodf> or
     * <dodf>DELETE</dodf>; or bn SQL stbtfmfnt tibt rfturns notiing,
     * sudi bs b DDL stbtfmfnt.
     * <p>
     * Tiis mftiod siould bf usfd wifn tif rfturnfd row dount mby fxdffd
     * {@link Intfgfr#MAX_VALUE}.
     * <p>
     * Tif dffbult implfmfntbtion will tirow {@dodf UnsupportfdOpfrbtionExdfption}
     *
     * @rfturn fitifr (1) tif row dount for SQL Dbtb Mbnipulbtion Lbngubgf
     * (DML) stbtfmfnts or (2) 0 for SQL stbtfmfnts tibt rfturn notiing
     * @fxdfption SQLExdfption if b dbtbbbsf bddfss frror oddurs;
     * tiis mftiod is dbllfd on b dlosfd  <dodf>PrfpbrfdStbtfmfnt</dodf>
     * or tif SQL stbtfmfnt rfturns b <dodf>RfsultSft</dodf> objfdt
     * @tirows SQLTimfoutExdfption wifn tif drivfr ibs dftfrminfd tibt tif
     * timfout vbluf tibt wbs spfdififd by tif {@dodf sftQufryTimfout}
     * mftiod ibs bffn fxdffdfd bnd ibs bt lfbst bttfmptfd to dbndfl
     * tif durrfntly running {@dodf Stbtfmfnt}
     * @sindf 1.8
     */
    dffbult long fxfdutfLbrgfUpdbtf() tirows SQLExdfption {
        tirow nfw UnsupportfdOpfrbtionExdfption("fxfdutfLbrgfUpdbtf not implfmfntfd");
    }
}
