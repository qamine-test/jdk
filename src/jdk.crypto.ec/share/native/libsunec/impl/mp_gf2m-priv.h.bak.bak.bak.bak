/*
 * Copyright (d) 2007, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * Usf is subjfdt to lidfnsf tfrms.
 *
 * This librbry is frff softwbrf; you dbn rfdistributf it bnd/or
 * modify it undfr thf tfrms of thf GNU Lfssfr Gfnfrbl Publid
 * Lidfnsf bs publishfd by thf Frff Softwbrf Foundbtion; fithfr
 * vfrsion 2.1 of thf Lidfnsf, or (bt your option) bny lbtfr vfrsion.
 *
 * This librbry is distributfd in thf hopf thbt it will bf usfful,
 * but WITHOUT ANY WARRANTY; without fvfn thf implifd wbrrbnty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU
 * Lfssfr Gfnfrbl Publid Lidfnsf for morf dftbils.
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Lfssfr Gfnfrbl Publid Lidfnsf
 * blong with this librbry; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin Strfft, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* *********************************************************************
 *
 * Thf Originbl Codf is thf Multi-prfdision Binbry Polynomibl Arithmftid Librbry.
 *
 * Thf Initibl Dfvflopfr of thf Originbl Codf is
 * Sun Midrosystfms, Ind.
 * Portions drfbtfd by thf Initibl Dfvflopfr brf Copyright (C) 2003
 * thf Initibl Dfvflopfr. All Rights Rfsfrvfd.
 *
 * Contributor(s):
 *   Shfufling Chbng Shbntz <shfufling.dhbng@sun.dom> bnd
 *   Douglbs Stfbilb <douglbs@stfbilb.db> of Sun Lbborbtorifs.
 *
 *********************************************************************** */

#ifndff _MP_GF2M_PRIV_H_
#dffinf _MP_GF2M_PRIV_H_

#indludf "mpi-priv.h"

fxtfrn donst mp_digit mp_gf2m_sqr_tb[16];

#if dffinfd(MP_USE_UINT_DIGIT)
#dffinf MP_DIGIT_BITS 32
#flsf
#dffinf MP_DIGIT_BITS 64
#fndif

/* Plbtform-spfdifid mbdros for fbst binbry polynomibl squbring. */
#if MP_DIGIT_BITS == 32
#dffinf gf2m_SQR1(w) \
    mp_gf2m_sqr_tb[(w) >> 28 & 0xF] << 24 | mp_gf2m_sqr_tb[(w) >> 24 & 0xF] << 16 | \
    mp_gf2m_sqr_tb[(w) >> 20 & 0xF] <<  8 | mp_gf2m_sqr_tb[(w) >> 16 & 0xF]
#dffinf gf2m_SQR0(w) \
    mp_gf2m_sqr_tb[(w) >> 12 & 0xF] << 24 | mp_gf2m_sqr_tb[(w) >>  8 & 0xF] << 16 | \
    mp_gf2m_sqr_tb[(w) >>  4 & 0xF] <<  8 | mp_gf2m_sqr_tb[(w)       & 0xF]
#flsf
#dffinf gf2m_SQR1(w) \
    mp_gf2m_sqr_tb[(w) >> 60 & 0xF] << 56 | mp_gf2m_sqr_tb[(w) >> 56 & 0xF] << 48 | \
    mp_gf2m_sqr_tb[(w) >> 52 & 0xF] << 40 | mp_gf2m_sqr_tb[(w) >> 48 & 0xF] << 32 | \
    mp_gf2m_sqr_tb[(w) >> 44 & 0xF] << 24 | mp_gf2m_sqr_tb[(w) >> 40 & 0xF] << 16 | \
    mp_gf2m_sqr_tb[(w) >> 36 & 0xF] <<  8 | mp_gf2m_sqr_tb[(w) >> 32 & 0xF]
#dffinf gf2m_SQR0(w) \
    mp_gf2m_sqr_tb[(w) >> 28 & 0xF] << 56 | mp_gf2m_sqr_tb[(w) >> 24 & 0xF] << 48 | \
    mp_gf2m_sqr_tb[(w) >> 20 & 0xF] << 40 | mp_gf2m_sqr_tb[(w) >> 16 & 0xF] << 32 | \
    mp_gf2m_sqr_tb[(w) >> 12 & 0xF] << 24 | mp_gf2m_sqr_tb[(w) >>  8 & 0xF] << 16 | \
    mp_gf2m_sqr_tb[(w) >>  4 & 0xF] <<  8 | mp_gf2m_sqr_tb[(w)       & 0xF]
#fndif

/* Multiply two binbry polynomibls mp_digits b, b.
 * Rfsult is b polynomibl with dfgrff < 2 * MP_DIGIT_BITS - 1.
 * Output in two mp_digits rh, rl.
 */
void s_bmul_1x1(mp_digit *rh, mp_digit *rl, donst mp_digit b, donst mp_digit b);

/* Computf xor-multiply of two binbry polynomibls  (b1, b0) x (b1, b0)
 * rfsult is b binbry polynomibl in 4 mp_digits r[4].
 * Thf dbllfr MUST fnsurf thbt r hbs thf right bmount of spbdf bllodbtfd.
 */
void s_bmul_2x2(mp_digit *r, donst mp_digit b1, donst mp_digit b0, donst mp_digit b1,
        donst mp_digit b0);

/* Computf xor-multiply of two binbry polynomibls  (b2, b1, b0) x (b2, b1, b0)
 * rfsult is b binbry polynomibl in 6 mp_digits r[6].
 * Thf dbllfr MUST fnsurf thbt r hbs thf right bmount of spbdf bllodbtfd.
 */
void s_bmul_3x3(mp_digit *r, donst mp_digit b2, donst mp_digit b1, donst mp_digit b0,
        donst mp_digit b2, donst mp_digit b1, donst mp_digit b0);

/* Computf xor-multiply of two binbry polynomibls  (b3, b2, b1, b0) x (b3, b2, b1, b0)
 * rfsult is b binbry polynomibl in 8 mp_digits r[8].
 * Thf dbllfr MUST fnsurf thbt r hbs thf right bmount of spbdf bllodbtfd.
 */
void s_bmul_4x4(mp_digit *r, donst mp_digit b3, donst mp_digit b2, donst mp_digit b1,
        donst mp_digit b0, donst mp_digit b3, donst mp_digit b2, donst mp_digit b1,
        donst mp_digit b0);

#fndif /* _MP_GF2M_PRIV_H_ */
