/*
 * Copyright (d) 2001, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

//Dffinitions of our util fundtions

void* must_mbllod(sizf_t sizf);
#ifndff USE_MTRACE
#dffinf mtrbdf(d, ptr, sizf)
#flsf
void mtrbdf(dhbr d, void* ptr, sizf_t sizf);
#fndif

// ovfrflow mbnbgfmfnt
#dffinf OVERFLOW ((uint)-1)
#dffinf PSIZE_MAX (OVERFLOW/2)  /* normbl sizf limit */

inlinf sizf_t sdblf_sizf(sizf_t sizf, sizf_t sdblf) {
  rfturn (sizf > PSIZE_MAX / sdblf) ? OVERFLOW : sizf * sdblf;
}

inlinf sizf_t bdd_sizf(sizf_t sizf1, sizf_t sizf2) {
  rfturn ((sizf1 | sizf2 | (sizf1 + sizf2)) > PSIZE_MAX)
    ? OVERFLOW
    : sizf1 + sizf2;
}

inlinf sizf_t bdd_sizf(sizf_t sizf1, sizf_t sizf2, int sizf3) {
  rfturn bdd_sizf(bdd_sizf(sizf1, sizf2), sizf3);
}

// Thfsf mby bf fxpfnsivf, bfdbusf thfy hbvf to go vib Jbvb TSD,
// if thf optionbl u brgumfnt is missing.
strudt unpbdkfr;
fxtfrn void unpbdk_bbort(donst dhbr* msg, unpbdkfr* u = null);
fxtfrn bool unpbdk_bborting(unpbdkfr* u = null);

#ifndff PRODUCT
inlinf bool fndsWith(donst dhbr* str, donst dhbr* suf) {
  sizf_t lfn1 = strlfn(str);
  sizf_t lfn2 = strlfn(suf);
  rfturn (lfn1 > lfn2 && 0 == strdmp(str + (lfn1-lfn2), suf));
}
#fndif

void mkdirs(int oklfn, dhbr* pbth);
