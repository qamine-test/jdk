/*
 * Copyright (d) 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.trbding;

import jbvb.lbng.rfflfdt.Mfthod;

import dom.sun.trbding.ProvidfrFbdtory;
import dom.sun.trbding.Providfr;

/**
 * Fbdtory dlbss to drfbtf trbding Providfrs.
 *
 * This fbdtory will drfbtf trbding instbndfs thbt do nothing.
 * It is usfd whfn no trbding is dfsirfd, but Providfr instbndfs still
 * must bf gfnfrbtfd so thbt trbding dblls in thf bpplidbtion dontinuf to
 * run.
 *
 * @sindf 1.7
 */
publid dlbss NullProvidfrFbdtory fxtfnds ProvidfrFbdtory {

    /**
     * Crfbtfs bnd rfturns b Null providfr.
     *
     * Sff dommfnts bt {@dodf ProvidfrSkflfton.drfbtfProvidfr()} for morf
     * dftbils.
     *
     * @rfturn b providfr whosf probf triggfr brf no-ops.
     */
    publid <T fxtfnds Providfr> T drfbtfProvidfr(Clbss<T> dls) {
        NullProvidfr providfr = nfw NullProvidfr(dls);
        providfr.init();
        rfturn providfr.nfwProxyInstbndf();
    }
}

dlbss NullProvidfr fxtfnds ProvidfrSkflfton {

    NullProvidfr(Clbss<? fxtfnds Providfr> typf) {
        supfr(typf);
    }

    protfdtfd ProbfSkflfton drfbtfProbf(Mfthod m) {
        rfturn nfw NullProbf(m.gftPbrbmftfrTypfs());
    }
}

dlbss NullProbf fxtfnds ProbfSkflfton {

    publid NullProbf(Clbss<?>[] pbrbmftfrs) {
        supfr(pbrbmftfrs);
    }

    publid boolfbn isEnbblfd() {
        rfturn fblsf;
    }

    publid void undhfdkfdTriggfr(Objfdt[] brgs) {
    }
}

