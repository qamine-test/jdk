/* pkds11t.i indludf filf for PKCS #11. */
/* $Rfvision: 1.6 $ */

/* Lidfnsf to dopy bnd usf tiis softwbrf is grbntfd providfd tibt it is
 * idfntififd bs "RSA Sfdurity Ind. PKCS #11 Cryptogrbpiid Tokfn Intfrfbdf
 * (Cryptoki)" in bll mbtfribl mfntioning or rfffrfnding tiis softwbrf.

 * Lidfnsf is blso grbntfd to mbkf bnd usf dfrivbtivf works providfd tibt
 * sudi works brf idfntififd bs "dfrivfd from tif RSA Sfdurity Ind. PKCS #11
 * Cryptogrbpiid Tokfn Intfrfbdf (Cryptoki)" in bll mbtfribl mfntioning or
 * rfffrfnding tif dfrivfd work.

 * RSA Sfdurity Ind. mbkfs no rfprfsfntbtions dondfrning fitifr tif
 * mfrdibntbbility of tiis softwbrf or tif suitbbility of tiis softwbrf for
 * bny pbrtidulbr purposf. It is providfd "bs is" witiout fxprfss or implifd
 * wbrrbnty of bny kind.
 */

/* Sff top of pkds11.i for informbtion bbout tif mbdros tibt
 * must bf dffinfd bnd tif strudturf-pbdking donvfntions tibt
 * must bf sft bfforf indluding tiis filf. */

#ifndff _PKCS11T_H_
#dffinf _PKCS11T_H_ 1

#dffinf CK_TRUE 1
#dffinf CK_FALSE 0

#ifndff CK_DISABLE_TRUE_FALSE
#ifndff FALSE
#dffinf FALSE CK_FALSE
#fndif

#ifndff TRUE
#dffinf TRUE CK_TRUE
#fndif
#fndif

/* bn unsignfd 8-bit vbluf */
typfdff unsignfd dibr     CK_BYTE;

/* bn unsignfd 8-bit dibrbdtfr */
typfdff CK_BYTE           CK_CHAR;

/* bn 8-bit UTF-8 dibrbdtfr */
typfdff CK_BYTE           CK_UTF8CHAR;

/* b BYTE-sizfd Boolfbn flbg */
typfdff CK_BYTE           CK_BBOOL;

/* bn unsignfd vbluf, bt lfbst 32 bits long */
typfdff unsignfd long int CK_ULONG;

/* b signfd vbluf, tif sbmf sizf bs b CK_ULONG */
/* CK_LONG is nfw for v2.0 */
typfdff long int          CK_LONG;

/* bt lfbst 32 bits; fbdi bit is b Boolfbn flbg */
typfdff CK_ULONG          CK_FLAGS;


/* somf spfdibl vblufs for dfrtbin CK_ULONG vbribblfs */
#dffinf CK_UNAVAILABLE_INFORMATION (~0UL)
#dffinf CK_EFFECTIVELY_INFINITE    0


typfdff CK_BYTE     CK_PTR   CK_BYTE_PTR;
typfdff CK_CHAR     CK_PTR   CK_CHAR_PTR;
typfdff CK_UTF8CHAR CK_PTR   CK_UTF8CHAR_PTR;
typfdff CK_ULONG    CK_PTR   CK_ULONG_PTR;
typfdff void        CK_PTR   CK_VOID_PTR;

/* Pointfr to b CK_VOID_PTR-- i.f., pointfr to pointfr to void */
typfdff CK_VOID_PTR CK_PTR CK_VOID_PTR_PTR;


/* Tif following vbluf is blwbys invblid if usfd bs b sfssion */
/* ibndlf or objfdt ibndlf */
#dffinf CK_INVALID_HANDLE 0


typfdff strudt CK_VERSION {
  CK_BYTE       mbjor;  /* intfgfr portion of vfrsion numbfr */
  CK_BYTE       minor;  /* 1/100tis portion of vfrsion numbfr */
} CK_VERSION;

typfdff CK_VERSION CK_PTR CK_VERSION_PTR;


typfdff strudt CK_INFO {
  /* mbnufbdturfrID bnd librbryDfdription ibvf bffn dibngfd from
   * CK_CHAR to CK_UTF8CHAR for v2.10 */
  CK_VERSION    dryptokiVfrsion;     /* Cryptoki intfrfbdf vfr */
  CK_UTF8CHAR   mbnufbdturfrID[32];  /* blbnk pbddfd */
  CK_FLAGS      flbgs;               /* must bf zfro */

  /* librbryDfsdription bnd librbryVfrsion brf nfw for v2.0 */
  CK_UTF8CHAR   librbryDfsdription[32];  /* blbnk pbddfd */
  CK_VERSION    librbryVfrsion;          /* vfrsion of librbry */
} CK_INFO;

typfdff CK_INFO CK_PTR    CK_INFO_PTR;


/* CK_NOTIFICATION fnumfrbtfs tif typfs of notifidbtions tibt
 * Cryptoki providfs to bn bpplidbtion */
/* CK_NOTIFICATION ibs bffn dibngfd from bn fnum to b CK_ULONG
 * for v2.0 */
typfdff CK_ULONG CK_NOTIFICATION;
#dffinf CKN_SURRENDER       0


typfdff CK_ULONG          CK_SLOT_ID;

typfdff CK_SLOT_ID CK_PTR CK_SLOT_ID_PTR;


/* CK_SLOT_INFO providfs informbtion bbout b slot */
typfdff strudt CK_SLOT_INFO {
  /* slotDfsdription bnd mbnufbdturfrID ibvf bffn dibngfd from
   * CK_CHAR to CK_UTF8CHAR for v2.10 */
  CK_UTF8CHAR   slotDfsdription[64];  /* blbnk pbddfd */
  CK_UTF8CHAR   mbnufbdturfrID[32];   /* blbnk pbddfd */
  CK_FLAGS      flbgs;

  /* ibrdwbrfVfrsion bnd firmwbrfVfrsion brf nfw for v2.0 */
  CK_VERSION    ibrdwbrfVfrsion;  /* vfrsion of ibrdwbrf */
  CK_VERSION    firmwbrfVfrsion;  /* vfrsion of firmwbrf */
} CK_SLOT_INFO;

/* flbgs: bit flbgs tibt providf dbpbbilitifs of tif slot
 *      Bit Flbg              Mbsk        Mfbning
 */
#dffinf CKF_TOKEN_PRESENT     0x00000001  /* b tokfn is tifrf */
#dffinf CKF_REMOVABLE_DEVICE  0x00000002  /* rfmovbblf dfvidfs*/
#dffinf CKF_HW_SLOT           0x00000004  /* ibrdwbrf slot */

typfdff CK_SLOT_INFO CK_PTR CK_SLOT_INFO_PTR;


/* CK_TOKEN_INFO providfs informbtion bbout b tokfn */
typfdff strudt CK_TOKEN_INFO {
  /* lbbfl, mbnufbdturfrID, bnd modfl ibvf bffn dibngfd from
   * CK_CHAR to CK_UTF8CHAR for v2.10 */
  CK_UTF8CHAR   lbbfl[32];           /* blbnk pbddfd */
  CK_UTF8CHAR   mbnufbdturfrID[32];  /* blbnk pbddfd */
  CK_UTF8CHAR   modfl[16];           /* blbnk pbddfd */
  CK_CHAR       sfriblNumbfr[16];    /* blbnk pbddfd */
  CK_FLAGS      flbgs;               /* sff bflow */

  /* ulMbxSfssionCount, ulSfssionCount, ulMbxRwSfssionCount,
   * ulRwSfssionCount, ulMbxPinLfn, bnd ulMinPinLfn ibvf bll bffn
   * dibngfd from CK_USHORT to CK_ULONG for v2.0 */
  CK_ULONG      ulMbxSfssionCount;     /* mbx opfn sfssions */
  CK_ULONG      ulSfssionCount;        /* sfss. now opfn */
  CK_ULONG      ulMbxRwSfssionCount;   /* mbx R/W sfssions */
  CK_ULONG      ulRwSfssionCount;      /* R/W sfss. now opfn */
  CK_ULONG      ulMbxPinLfn;           /* in bytfs */
  CK_ULONG      ulMinPinLfn;           /* in bytfs */
  CK_ULONG      ulTotblPublidMfmory;   /* in bytfs */
  CK_ULONG      ulFrffPublidMfmory;    /* in bytfs */
  CK_ULONG      ulTotblPrivbtfMfmory;  /* in bytfs */
  CK_ULONG      ulFrffPrivbtfMfmory;   /* in bytfs */

  /* ibrdwbrfVfrsion, firmwbrfVfrsion, bnd timf brf nfw for
   * v2.0 */
  CK_VERSION    ibrdwbrfVfrsion;       /* vfrsion of ibrdwbrf */
  CK_VERSION    firmwbrfVfrsion;       /* vfrsion of firmwbrf */
  CK_CHAR       utdTimf[16];           /* timf */
} CK_TOKEN_INFO;

/* Tif flbgs pbrbmftfr is dffinfd bs follows:
 *      Bit Flbg                    Mbsk        Mfbning
 */
#dffinf CKF_RNG                     0x00000001  /* ibs rbndom #
                                                 * gfnfrbtor */
#dffinf CKF_WRITE_PROTECTED         0x00000002  /* tokfn is
                                                 * writf-
                                                 * protfdtfd */
#dffinf CKF_LOGIN_REQUIRED          0x00000004  /* usfr must
                                                 * login */
#dffinf CKF_USER_PIN_INITIALIZED    0x00000008  /* normbl usfr's
                                                 * PIN is sft */

/* CKF_RESTORE_KEY_NOT_NEEDED is nfw for v2.0.  If it is sft,
 * tibt mfbns tibt *fvfry* timf tif stbtf of dryptogrbpiid
 * opfrbtions of b sfssion is suddfssfully sbvfd, bll kfys
 * nffdfd to dontinuf tiosf opfrbtions brf storfd in tif stbtf */
#dffinf CKF_RESTORE_KEY_NOT_NEEDED  0x00000020

/* CKF_CLOCK_ON_TOKEN is nfw for v2.0.  If it is sft, tibt mfbns
 * tibt tif tokfn ibs somf sort of dlodk.  Tif timf on tibt
 * dlodk is rfturnfd in tif tokfn info strudturf */
#dffinf CKF_CLOCK_ON_TOKEN          0x00000040

/* CKF_PROTECTED_AUTHENTICATION_PATH is nfw for v2.0.  If it is
 * sft, tibt mfbns tibt tifrf is somf wby for tif usfr to login
 * witiout sfnding b PIN tirougi tif Cryptoki librbry itsflf */
#dffinf CKF_PROTECTED_AUTHENTICATION_PATH 0x00000100

/* CKF_DUAL_CRYPTO_OPERATIONS is nfw for v2.0.  If it is truf,
 * tibt mfbns tibt b singlf sfssion witi tif tokfn dbn pfrform
 * dubl simultbnfous dryptogrbpiid opfrbtions (digfst bnd
 * fndrypt; dfdrypt bnd digfst; sign bnd fndrypt; bnd dfdrypt
 * bnd sign) */
#dffinf CKF_DUAL_CRYPTO_OPERATIONS  0x00000200

/* CKF_TOKEN_INITIALIZED if nfw for v2.10. If it is truf, tif
 * tokfn ibs bffn initiblizfd using C_InitiblizfTokfn or bn
 * fquivblfnt mfdibnism outsidf tif sdopf of PKCS #11.
 * Cblling C_InitiblizfTokfn wifn tiis flbg is sft will dbusf
 * tif tokfn to bf rfinitiblizfd. */
#dffinf CKF_TOKEN_INITIALIZED       0x00000400

/* CKF_SECONDARY_AUTHENTICATION if nfw for v2.10. If it is
 * truf, tif tokfn supports sfdondbry butifntidbtion for
 * privbtf kfy objfdts. Tiis flbg is dfprfdbtfd in v2.11 bnd
   onwbrds. */
#dffinf CKF_SECONDARY_AUTHENTICATION  0x00000800

/* CKF_USER_PIN_COUNT_LOW if nfw for v2.10. If it is truf, bn
 * indorrfdt usfr login PIN ibs bffn fntfrfd bt lfbst ondf
 * sindf tif lbst suddfssful butifntidbtion. */
#dffinf CKF_USER_PIN_COUNT_LOW       0x00010000

/* CKF_USER_PIN_FINAL_TRY if nfw for v2.10. If it is truf,
 * supplying bn indorrfdt usfr PIN will it to bfdomf lodkfd. */
#dffinf CKF_USER_PIN_FINAL_TRY       0x00020000

/* CKF_USER_PIN_LOCKED if nfw for v2.10. If it is truf, tif
 * usfr PIN ibs bffn lodkfd. Usfr login to tif tokfn is not
 * possiblf. */
#dffinf CKF_USER_PIN_LOCKED          0x00040000

/* CKF_USER_PIN_TO_BE_CHANGED if nfw for v2.10. If it is truf,
 * tif usfr PIN vbluf is tif dffbult vbluf sft by tokfn
 * initiblizbtion or mbnufbdturing, or tif PIN ibs bffn
 * fxpirfd by tif dbrd. */
#dffinf CKF_USER_PIN_TO_BE_CHANGED   0x00080000

/* CKF_SO_PIN_COUNT_LOW if nfw for v2.10. If it is truf, bn
 * indorrfdt SO login PIN ibs bffn fntfrfd bt lfbst ondf sindf
 * tif lbst suddfssful butifntidbtion. */
#dffinf CKF_SO_PIN_COUNT_LOW         0x00100000

/* CKF_SO_PIN_FINAL_TRY if nfw for v2.10. If it is truf,
 * supplying bn indorrfdt SO PIN will it to bfdomf lodkfd. */
#dffinf CKF_SO_PIN_FINAL_TRY         0x00200000

/* CKF_SO_PIN_LOCKED if nfw for v2.10. If it is truf, tif SO
 * PIN ibs bffn lodkfd. SO login to tif tokfn is not possiblf.
 */
#dffinf CKF_SO_PIN_LOCKED            0x00400000

/* CKF_SO_PIN_TO_BE_CHANGED if nfw for v2.10. If it is truf,
 * tif SO PIN vbluf is tif dffbult vbluf sft by tokfn
 * initiblizbtion or mbnufbdturing, or tif PIN ibs bffn
 * fxpirfd by tif dbrd. */
#dffinf CKF_SO_PIN_TO_BE_CHANGED     0x00800000

typfdff CK_TOKEN_INFO CK_PTR CK_TOKEN_INFO_PTR;


/* CK_SESSION_HANDLE is b Cryptoki-bssignfd vbluf tibt
 * idfntififs b sfssion */
typfdff CK_ULONG          CK_SESSION_HANDLE;

typfdff CK_SESSION_HANDLE CK_PTR CK_SESSION_HANDLE_PTR;


/* CK_USER_TYPE fnumfrbtfs tif typfs of Cryptoki usfrs */
/* CK_USER_TYPE ibs bffn dibngfd from bn fnum to b CK_ULONG for
 * v2.0 */
typfdff CK_ULONG          CK_USER_TYPE;
/* Sfdurity Offidfr */
#dffinf CKU_SO    0
/* Normbl usfr */
#dffinf CKU_USER  1
/* Contfxt spfdifid (bddfd in v2.20) */
#dffinf CKU_CONTEXT_SPECIFIC   2

/* CK_STATE fnumfrbtfs tif sfssion stbtfs */
/* CK_STATE ibs bffn dibngfd from bn fnum to b CK_ULONG for
 * v2.0 */
typfdff CK_ULONG          CK_STATE;
#dffinf CKS_RO_PUBLIC_SESSION  0
#dffinf CKS_RO_USER_FUNCTIONS  1
#dffinf CKS_RW_PUBLIC_SESSION  2
#dffinf CKS_RW_USER_FUNCTIONS  3
#dffinf CKS_RW_SO_FUNCTIONS    4


/* CK_SESSION_INFO providfs informbtion bbout b sfssion */
typfdff strudt CK_SESSION_INFO {
  CK_SLOT_ID    slotID;
  CK_STATE      stbtf;
  CK_FLAGS      flbgs;          /* sff bflow */

  /* ulDfvidfError wbs dibngfd from CK_USHORT to CK_ULONG for
   * v2.0 */
  CK_ULONG      ulDfvidfError;  /* dfvidf-dfpfndfnt frror dodf */
} CK_SESSION_INFO;

/* Tif flbgs brf dffinfd in tif following tbblf:
 *      Bit Flbg                Mbsk        Mfbning
 */
#dffinf CKF_RW_SESSION          0x00000002  /* sfssion is r/w */
#dffinf CKF_SERIAL_SESSION      0x00000004  /* no pbrbllfl */

typfdff CK_SESSION_INFO CK_PTR CK_SESSION_INFO_PTR;


/* CK_OBJECT_HANDLE is b tokfn-spfdifid idfntififr for bn
 * objfdt  */
typfdff CK_ULONG          CK_OBJECT_HANDLE;

typfdff CK_OBJECT_HANDLE CK_PTR CK_OBJECT_HANDLE_PTR;


/* CK_OBJECT_CLASS is b vbluf tibt idfntififs tif dlbssfs (or
 * typfs) of objfdts tibt Cryptoki rfdognizfs.  It is dffinfd
 * bs follows: */
/* CK_OBJECT_CLASS wbs dibngfd from CK_USHORT to CK_ULONG for
 * v2.0 */
typfdff CK_ULONG          CK_OBJECT_CLASS;

/* Tif following dlbssfs of objfdts brf dffinfd: */
/* CKO_HW_FEATURE is nfw for v2.10 */
/* CKO_DOMAIN_PARAMETERS is nfw for v2.11 */
/* CKO_MECHANISM is nfw for v2.20 */
#dffinf CKO_DATA              0x00000000
#dffinf CKO_CERTIFICATE       0x00000001
#dffinf CKO_PUBLIC_KEY        0x00000002
#dffinf CKO_PRIVATE_KEY       0x00000003
#dffinf CKO_SECRET_KEY        0x00000004
#dffinf CKO_HW_FEATURE        0x00000005
#dffinf CKO_DOMAIN_PARAMETERS 0x00000006
#dffinf CKO_MECHANISM         0x00000007
#dffinf CKO_VENDOR_DEFINED    0x80000000

typfdff CK_OBJECT_CLASS CK_PTR CK_OBJECT_CLASS_PTR;

/* CK_HW_FEATURE_TYPE is nfw for v2.10. CK_HW_FEATURE_TYPE is b
 * vbluf tibt idfntififs tif ibrdwbrf ffbturf typf of bn objfdt
 * witi CK_OBJECT_CLASS fqubl to CKO_HW_FEATURE. */
typfdff CK_ULONG          CK_HW_FEATURE_TYPE;

/* Tif following ibrdwbrf ffbturf typfs brf dffinfd */
/* CKH_USER_INTERFACE is nfw for v2.20 */
#dffinf CKH_MONOTONIC_COUNTER  0x00000001
#dffinf CKH_CLOCK           0x00000002
#dffinf CKH_USER_INTERFACE  0x00000003
#dffinf CKH_VENDOR_DEFINED  0x80000000

/* CK_KEY_TYPE is b vbluf tibt idfntififs b kfy typf */
/* CK_KEY_TYPE wbs dibngfd from CK_USHORT to CK_ULONG for v2.0 */
typfdff CK_ULONG          CK_KEY_TYPE;

/* tif following kfy typfs brf dffinfd: */
#dffinf CKK_RSA             0x00000000
#dffinf CKK_DSA             0x00000001
#dffinf CKK_DH              0x00000002

/* CKK_ECDSA bnd CKK_KEA brf nfw for v2.0 */
/* CKK_ECDSA is dfprfdbtfd in v2.11, CKK_EC is prfffrrfd. */
#dffinf CKK_ECDSA           0x00000003
#dffinf CKK_EC              0x00000003
#dffinf CKK_X9_42_DH        0x00000004
#dffinf CKK_KEA             0x00000005

#dffinf CKK_GENERIC_SECRET  0x00000010
#dffinf CKK_RC2             0x00000011
#dffinf CKK_RC4             0x00000012
#dffinf CKK_DES             0x00000013
#dffinf CKK_DES2            0x00000014
#dffinf CKK_DES3            0x00000015

/* bll tifsf kfy typfs brf nfw for v2.0 */
#dffinf CKK_CAST            0x00000016
#dffinf CKK_CAST3           0x00000017
/* CKK_CAST5 is dfprfdbtfd in v2.11, CKK_CAST128 is prfffrrfd. */
#dffinf CKK_CAST5           0x00000018
#dffinf CKK_CAST128         0x00000018
#dffinf CKK_RC5             0x00000019
#dffinf CKK_IDEA            0x0000001A
#dffinf CKK_SKIPJACK        0x0000001B
#dffinf CKK_BATON           0x0000001C
#dffinf CKK_JUNIPER         0x0000001D
#dffinf CKK_CDMF            0x0000001E
#dffinf CKK_AES             0x0000001F

/* BlowFisi bnd TwoFisi brf nfw for v2.20 */
#dffinf CKK_BLOWFISH        0x00000020
#dffinf CKK_TWOFISH         0x00000021

#dffinf CKK_VENDOR_DEFINED  0x80000000


/* CK_CERTIFICATE_TYPE is b vbluf tibt idfntififs b dfrtifidbtf
 * typf */
/* CK_CERTIFICATE_TYPE wbs dibngfd from CK_USHORT to CK_ULONG
 * for v2.0 */
typfdff CK_ULONG          CK_CERTIFICATE_TYPE;

/* Tif following dfrtifidbtf typfs brf dffinfd: */
/* CKC_X_509_ATTR_CERT is nfw for v2.10 */
/* CKC_WTLS is nfw for v2.20 */
#dffinf CKC_X_509           0x00000000
#dffinf CKC_X_509_ATTR_CERT 0x00000001
#dffinf CKC_WTLS            0x00000002
#dffinf CKC_VENDOR_DEFINED  0x80000000


/* CK_ATTRIBUTE_TYPE is b vbluf tibt idfntififs bn bttributf
 * typf */
/* CK_ATTRIBUTE_TYPE wbs dibngfd from CK_USHORT to CK_ULONG for
 * v2.0 */
typfdff CK_ULONG          CK_ATTRIBUTE_TYPE;

/* Tif CKF_ARRAY_ATTRIBUTE flbg idfntififs bn bttributf wiidi
   donsists of bn brrby of vblufs. */
#dffinf CKF_ARRAY_ATTRIBUTE    0x40000000

/* Tif following bttributf typfs brf dffinfd: */
#dffinf CKA_CLASS              0x00000000
#dffinf CKA_TOKEN              0x00000001
#dffinf CKA_PRIVATE            0x00000002
#dffinf CKA_LABEL              0x00000003
#dffinf CKA_APPLICATION        0x00000010
#dffinf CKA_VALUE              0x00000011

/* CKA_OBJECT_ID is nfw for v2.10 */
#dffinf CKA_OBJECT_ID          0x00000012

#dffinf CKA_CERTIFICATE_TYPE   0x00000080
#dffinf CKA_ISSUER             0x00000081
#dffinf CKA_SERIAL_NUMBER      0x00000082

/* CKA_AC_ISSUER, CKA_OWNER, bnd CKA_ATTR_TYPES brf nfw
 * for v2.10 */
#dffinf CKA_AC_ISSUER          0x00000083
#dffinf CKA_OWNER              0x00000084
#dffinf CKA_ATTR_TYPES         0x00000085

/* CKA_TRUSTED is nfw for v2.11 */
#dffinf CKA_TRUSTED            0x00000086

/* CKA_CERTIFICATE_CATEGORY ...
 * CKA_CHECK_VALUE brf nfw for v2.20 */
#dffinf CKA_CERTIFICATE_CATEGORY        0x00000087
#dffinf CKA_JAVA_MIDP_SECURITY_DOMAIN   0x00000088
#dffinf CKA_URL                         0x00000089
#dffinf CKA_HASH_OF_SUBJECT_PUBLIC_KEY  0x0000008A
#dffinf CKA_HASH_OF_ISSUER_PUBLIC_KEY   0x0000008B
#dffinf CKA_CHECK_VALUE                 0x00000090

#dffinf CKA_KEY_TYPE           0x00000100
#dffinf CKA_SUBJECT            0x00000101
#dffinf CKA_ID                 0x00000102
#dffinf CKA_SENSITIVE          0x00000103
#dffinf CKA_ENCRYPT            0x00000104
#dffinf CKA_DECRYPT            0x00000105
#dffinf CKA_WRAP               0x00000106
#dffinf CKA_UNWRAP             0x00000107
#dffinf CKA_SIGN               0x00000108
#dffinf CKA_SIGN_RECOVER       0x00000109
#dffinf CKA_VERIFY             0x0000010A
#dffinf CKA_VERIFY_RECOVER     0x0000010B
#dffinf CKA_DERIVE             0x0000010C
#dffinf CKA_START_DATE         0x00000110
#dffinf CKA_END_DATE           0x00000111
#dffinf CKA_MODULUS            0x00000120
#dffinf CKA_MODULUS_BITS       0x00000121
#dffinf CKA_PUBLIC_EXPONENT    0x00000122
#dffinf CKA_PRIVATE_EXPONENT   0x00000123
#dffinf CKA_PRIME_1            0x00000124
#dffinf CKA_PRIME_2            0x00000125
#dffinf CKA_EXPONENT_1         0x00000126
#dffinf CKA_EXPONENT_2         0x00000127
#dffinf CKA_COEFFICIENT        0x00000128
#dffinf CKA_PRIME              0x00000130
#dffinf CKA_SUBPRIME           0x00000131
#dffinf CKA_BASE               0x00000132

/* CKA_PRIME_BITS bnd CKA_SUB_PRIME_BITS brf nfw for v2.11 */
#dffinf CKA_PRIME_BITS         0x00000133
#dffinf CKA_SUBPRIME_BITS      0x00000134
#dffinf CKA_SUB_PRIME_BITS     CKA_SUBPRIME_BITS
/* (To rftbin bbdkwbrds-dompbtibility) */

#dffinf CKA_VALUE_BITS         0x00000160
#dffinf CKA_VALUE_LEN          0x00000161

/* CKA_EXTRACTABLE, CKA_LOCAL, CKA_NEVER_EXTRACTABLE,
 * CKA_ALWAYS_SENSITIVE, CKA_MODIFIABLE, CKA_ECDSA_PARAMS,
 * bnd CKA_EC_POINT brf nfw for v2.0 */
#dffinf CKA_EXTRACTABLE        0x00000162
#dffinf CKA_LOCAL              0x00000163
#dffinf CKA_NEVER_EXTRACTABLE  0x00000164
#dffinf CKA_ALWAYS_SENSITIVE   0x00000165

/* CKA_KEY_GEN_MECHANISM is nfw for v2.11 */
#dffinf CKA_KEY_GEN_MECHANISM  0x00000166

#dffinf CKA_MODIFIABLE         0x00000170

/* CKA_ECDSA_PARAMS is dfprfdbtfd in v2.11,
 * CKA_EC_PARAMS is prfffrrfd. */
#dffinf CKA_ECDSA_PARAMS       0x00000180
#dffinf CKA_EC_PARAMS          0x00000180

#dffinf CKA_EC_POINT           0x00000181

/* CKA_SECONDARY_AUTH, CKA_AUTH_PIN_FLAGS,
 * brf nfw for v2.10. Dfprfdbtfd in v2.11 bnd onwbrds. */
#dffinf CKA_SECONDARY_AUTH     0x00000200
#dffinf CKA_AUTH_PIN_FLAGS     0x00000201

/* CKA_ALWAYS_AUTHENTICATE ...
 * CKA_UNWRAP_TEMPLATE brf nfw for v2.20 */
#dffinf CKA_ALWAYS_AUTHENTICATE  0x00000202

#dffinf CKA_WRAP_WITH_TRUSTED    0x00000210
#dffinf CKA_WRAP_TEMPLATE        (CKF_ARRAY_ATTRIBUTE|0x00000211)
#dffinf CKA_UNWRAP_TEMPLATE      (CKF_ARRAY_ATTRIBUTE|0x00000212)

/* CKA_HW_FEATURE_TYPE, CKA_RESET_ON_INIT, bnd CKA_HAS_RESET
 * brf nfw for v2.10 */
#dffinf CKA_HW_FEATURE_TYPE    0x00000300
#dffinf CKA_RESET_ON_INIT      0x00000301
#dffinf CKA_HAS_RESET          0x00000302

/* Tif following bttributfs brf nfw for v2.20 */
#dffinf CKA_PIXEL_X                     0x00000400
#dffinf CKA_PIXEL_Y                     0x00000401
#dffinf CKA_RESOLUTION                  0x00000402
#dffinf CKA_CHAR_ROWS                   0x00000403
#dffinf CKA_CHAR_COLUMNS                0x00000404
#dffinf CKA_COLOR                       0x00000405
#dffinf CKA_BITS_PER_PIXEL              0x00000406
#dffinf CKA_CHAR_SETS                   0x00000480
#dffinf CKA_ENCODING_METHODS            0x00000481
#dffinf CKA_MIME_TYPES                  0x00000482
#dffinf CKA_MECHANISM_TYPE              0x00000500
#dffinf CKA_REQUIRED_CMS_ATTRIBUTES     0x00000501
#dffinf CKA_DEFAULT_CMS_ATTRIBUTES      0x00000502
#dffinf CKA_SUPPORTED_CMS_ATTRIBUTES    0x00000503
#dffinf CKA_ALLOWED_MECHANISMS          (CKF_ARRAY_ATTRIBUTE|0x00000600)

#dffinf CKA_VENDOR_DEFINED     0x80000000


/* CK_ATTRIBUTE is b strudturf tibt indludfs tif typf, lfngti
 * bnd vbluf of bn bttributf */
typfdff strudt CK_ATTRIBUTE {
  CK_ATTRIBUTE_TYPE typf;
  CK_VOID_PTR       pVbluf;

  /* ulVblufLfn wfnt from CK_USHORT to CK_ULONG for v2.0 */
  CK_ULONG          ulVblufLfn;  /* in bytfs */
} CK_ATTRIBUTE;

typfdff CK_ATTRIBUTE CK_PTR CK_ATTRIBUTE_PTR;


/* CK_DATE is b strudturf tibt dffinfs b dbtf */
typfdff strudt CK_DATE{
  CK_CHAR       yfbr[4];   /* tif yfbr ("1900" - "9999") */
  CK_CHAR       monti[2];  /* tif monti ("01" - "12") */
  CK_CHAR       dby[2];    /* tif dby   ("01" - "31") */
} CK_DATE;


/* CK_MECHANISM_TYPE is b vbluf tibt idfntififs b mfdibnism
 * typf */
/* CK_MECHANISM_TYPE wbs dibngfd from CK_USHORT to CK_ULONG for
 * v2.0 */
typfdff CK_ULONG          CK_MECHANISM_TYPE;

/* tif following mfdibnism typfs brf dffinfd: */
#dffinf CKM_RSA_PKCS_KEY_PAIR_GEN      0x00000000
#dffinf CKM_RSA_PKCS                   0x00000001
#dffinf CKM_RSA_9796                   0x00000002
#dffinf CKM_RSA_X_509                  0x00000003

/* CKM_MD2_RSA_PKCS, CKM_MD5_RSA_PKCS, bnd CKM_SHA1_RSA_PKCS
 * brf nfw for v2.0.  Tify brf mfdibnisms wiidi ibsi bnd sign */
#dffinf CKM_MD2_RSA_PKCS               0x00000004
#dffinf CKM_MD5_RSA_PKCS               0x00000005
#dffinf CKM_SHA1_RSA_PKCS              0x00000006

/* CKM_RIPEMD128_RSA_PKCS, CKM_RIPEMD160_RSA_PKCS, bnd
 * CKM_RSA_PKCS_OAEP brf nfw for v2.10 */
#dffinf CKM_RIPEMD128_RSA_PKCS         0x00000007
#dffinf CKM_RIPEMD160_RSA_PKCS         0x00000008
#dffinf CKM_RSA_PKCS_OAEP              0x00000009

/* CKM_RSA_X9_31_KEY_PAIR_GEN, CKM_RSA_X9_31, CKM_SHA1_RSA_X9_31,
 * CKM_RSA_PKCS_PSS, bnd CKM_SHA1_RSA_PKCS_PSS brf nfw for v2.11 */
#dffinf CKM_RSA_X9_31_KEY_PAIR_GEN     0x0000000A
#dffinf CKM_RSA_X9_31                  0x0000000B
#dffinf CKM_SHA1_RSA_X9_31             0x0000000C
#dffinf CKM_RSA_PKCS_PSS               0x0000000D
#dffinf CKM_SHA1_RSA_PKCS_PSS          0x0000000E

#dffinf CKM_DSA_KEY_PAIR_GEN           0x00000010
#dffinf CKM_DSA                        0x00000011
#dffinf CKM_DSA_SHA1                   0x00000012
#dffinf CKM_DH_PKCS_KEY_PAIR_GEN       0x00000020
#dffinf CKM_DH_PKCS_DERIVE             0x00000021

/* CKM_X9_42_DH_KEY_PAIR_GEN, CKM_X9_42_DH_DERIVE,
 * CKM_X9_42_DH_HYBRID_DERIVE, bnd CKM_X9_42_MQV_DERIVE brf nfw for
 * v2.11 */
#dffinf CKM_X9_42_DH_KEY_PAIR_GEN      0x00000030
#dffinf CKM_X9_42_DH_DERIVE            0x00000031
#dffinf CKM_X9_42_DH_HYBRID_DERIVE     0x00000032
#dffinf CKM_X9_42_MQV_DERIVE           0x00000033

/* CKM_SHA256/384/512 brf nfw for v2.20 */
#dffinf CKM_SHA256_RSA_PKCS            0x00000040
#dffinf CKM_SHA384_RSA_PKCS            0x00000041
#dffinf CKM_SHA512_RSA_PKCS            0x00000042
#dffinf CKM_SHA256_RSA_PKCS_PSS        0x00000043
#dffinf CKM_SHA384_RSA_PKCS_PSS        0x00000044
#dffinf CKM_SHA512_RSA_PKCS_PSS        0x00000045

#dffinf CKM_RC2_KEY_GEN                0x00000100
#dffinf CKM_RC2_ECB                    0x00000101
#dffinf CKM_RC2_CBC                    0x00000102
#dffinf CKM_RC2_MAC                    0x00000103

/* CKM_RC2_MAC_GENERAL bnd CKM_RC2_CBC_PAD brf nfw for v2.0 */
#dffinf CKM_RC2_MAC_GENERAL            0x00000104
#dffinf CKM_RC2_CBC_PAD                0x00000105

#dffinf CKM_RC4_KEY_GEN                0x00000110
#dffinf CKM_RC4                        0x00000111
#dffinf CKM_DES_KEY_GEN                0x00000120
#dffinf CKM_DES_ECB                    0x00000121
#dffinf CKM_DES_CBC                    0x00000122
#dffinf CKM_DES_MAC                    0x00000123

/* CKM_DES_MAC_GENERAL bnd CKM_DES_CBC_PAD brf nfw for v2.0 */
#dffinf CKM_DES_MAC_GENERAL            0x00000124
#dffinf CKM_DES_CBC_PAD                0x00000125

#dffinf CKM_DES2_KEY_GEN               0x00000130
#dffinf CKM_DES3_KEY_GEN               0x00000131
#dffinf CKM_DES3_ECB                   0x00000132
#dffinf CKM_DES3_CBC                   0x00000133
#dffinf CKM_DES3_MAC                   0x00000134

/* CKM_DES3_MAC_GENERAL, CKM_DES3_CBC_PAD, CKM_CDMF_KEY_GEN,
 * CKM_CDMF_ECB, CKM_CDMF_CBC, CKM_CDMF_MAC,
 * CKM_CDMF_MAC_GENERAL, bnd CKM_CDMF_CBC_PAD brf nfw for v2.0 */
#dffinf CKM_DES3_MAC_GENERAL           0x00000135
#dffinf CKM_DES3_CBC_PAD               0x00000136
#dffinf CKM_CDMF_KEY_GEN               0x00000140
#dffinf CKM_CDMF_ECB                   0x00000141
#dffinf CKM_CDMF_CBC                   0x00000142
#dffinf CKM_CDMF_MAC                   0x00000143
#dffinf CKM_CDMF_MAC_GENERAL           0x00000144
#dffinf CKM_CDMF_CBC_PAD               0x00000145

/* tif following four DES mfdibnisms brf nfw for v2.20 */
#dffinf CKM_DES_OFB64                  0x00000150
#dffinf CKM_DES_OFB8                   0x00000151
#dffinf CKM_DES_CFB64                  0x00000152
#dffinf CKM_DES_CFB8                   0x00000153

#dffinf CKM_MD2                        0x00000200

/* CKM_MD2_HMAC bnd CKM_MD2_HMAC_GENERAL brf nfw for v2.0 */
#dffinf CKM_MD2_HMAC                   0x00000201
#dffinf CKM_MD2_HMAC_GENERAL           0x00000202

#dffinf CKM_MD5                        0x00000210

/* CKM_MD5_HMAC bnd CKM_MD5_HMAC_GENERAL brf nfw for v2.0 */
#dffinf CKM_MD5_HMAC                   0x00000211
#dffinf CKM_MD5_HMAC_GENERAL           0x00000212

#dffinf CKM_SHA_1                      0x00000220

/* CKM_SHA_1_HMAC bnd CKM_SHA_1_HMAC_GENERAL brf nfw for v2.0 */
#dffinf CKM_SHA_1_HMAC                 0x00000221
#dffinf CKM_SHA_1_HMAC_GENERAL         0x00000222

/* CKM_RIPEMD128, CKM_RIPEMD128_HMAC,
 * CKM_RIPEMD128_HMAC_GENERAL, CKM_RIPEMD160, CKM_RIPEMD160_HMAC,
 * bnd CKM_RIPEMD160_HMAC_GENERAL brf nfw for v2.10 */
#dffinf CKM_RIPEMD128                  0x00000230
#dffinf CKM_RIPEMD128_HMAC             0x00000231
#dffinf CKM_RIPEMD128_HMAC_GENERAL     0x00000232
#dffinf CKM_RIPEMD160                  0x00000240
#dffinf CKM_RIPEMD160_HMAC             0x00000241
#dffinf CKM_RIPEMD160_HMAC_GENERAL     0x00000242

/* CKM_SHA256/384/512 brf nfw for v2.20 */
#dffinf CKM_SHA256                     0x00000250
#dffinf CKM_SHA256_HMAC                0x00000251
#dffinf CKM_SHA256_HMAC_GENERAL        0x00000252
#dffinf CKM_SHA384                     0x00000260
#dffinf CKM_SHA384_HMAC                0x00000261
#dffinf CKM_SHA384_HMAC_GENERAL        0x00000262
#dffinf CKM_SHA512                     0x00000270
#dffinf CKM_SHA512_HMAC                0x00000271
#dffinf CKM_SHA512_HMAC_GENERAL        0x00000272

/* All of tif following mfdibnisms brf nfw for v2.0 */
/* Notf tibt CAST128 bnd CAST5 brf tif sbmf blgoritim */
#dffinf CKM_CAST_KEY_GEN               0x00000300
#dffinf CKM_CAST_ECB                   0x00000301
#dffinf CKM_CAST_CBC                   0x00000302
#dffinf CKM_CAST_MAC                   0x00000303
#dffinf CKM_CAST_MAC_GENERAL           0x00000304
#dffinf CKM_CAST_CBC_PAD               0x00000305
#dffinf CKM_CAST3_KEY_GEN              0x00000310
#dffinf CKM_CAST3_ECB                  0x00000311
#dffinf CKM_CAST3_CBC                  0x00000312
#dffinf CKM_CAST3_MAC                  0x00000313
#dffinf CKM_CAST3_MAC_GENERAL          0x00000314
#dffinf CKM_CAST3_CBC_PAD              0x00000315
#dffinf CKM_CAST5_KEY_GEN              0x00000320
#dffinf CKM_CAST128_KEY_GEN            0x00000320
#dffinf CKM_CAST5_ECB                  0x00000321
#dffinf CKM_CAST128_ECB                0x00000321
#dffinf CKM_CAST5_CBC                  0x00000322
#dffinf CKM_CAST128_CBC                0x00000322
#dffinf CKM_CAST5_MAC                  0x00000323
#dffinf CKM_CAST128_MAC                0x00000323
#dffinf CKM_CAST5_MAC_GENERAL          0x00000324
#dffinf CKM_CAST128_MAC_GENERAL        0x00000324
#dffinf CKM_CAST5_CBC_PAD              0x00000325
#dffinf CKM_CAST128_CBC_PAD            0x00000325
#dffinf CKM_RC5_KEY_GEN                0x00000330
#dffinf CKM_RC5_ECB                    0x00000331
#dffinf CKM_RC5_CBC                    0x00000332
#dffinf CKM_RC5_MAC                    0x00000333
#dffinf CKM_RC5_MAC_GENERAL            0x00000334
#dffinf CKM_RC5_CBC_PAD                0x00000335
#dffinf CKM_IDEA_KEY_GEN               0x00000340
#dffinf CKM_IDEA_ECB                   0x00000341
#dffinf CKM_IDEA_CBC                   0x00000342
#dffinf CKM_IDEA_MAC                   0x00000343
#dffinf CKM_IDEA_MAC_GENERAL           0x00000344
#dffinf CKM_IDEA_CBC_PAD               0x00000345
#dffinf CKM_GENERIC_SECRET_KEY_GEN     0x00000350
#dffinf CKM_CONCATENATE_BASE_AND_KEY   0x00000360
#dffinf CKM_CONCATENATE_BASE_AND_DATA  0x00000362
#dffinf CKM_CONCATENATE_DATA_AND_BASE  0x00000363
#dffinf CKM_XOR_BASE_AND_DATA          0x00000364
#dffinf CKM_EXTRACT_KEY_FROM_KEY       0x00000365
#dffinf CKM_SSL3_PRE_MASTER_KEY_GEN    0x00000370
#dffinf CKM_SSL3_MASTER_KEY_DERIVE     0x00000371
#dffinf CKM_SSL3_KEY_AND_MAC_DERIVE    0x00000372

/* CKM_SSL3_MASTER_KEY_DERIVE_DH, CKM_TLS_PRE_MASTER_KEY_GEN,
 * CKM_TLS_MASTER_KEY_DERIVE, CKM_TLS_KEY_AND_MAC_DERIVE, bnd
 * CKM_TLS_MASTER_KEY_DERIVE_DH brf nfw for v2.11 */
#dffinf CKM_SSL3_MASTER_KEY_DERIVE_DH  0x00000373
#dffinf CKM_TLS_PRE_MASTER_KEY_GEN     0x00000374
#dffinf CKM_TLS_MASTER_KEY_DERIVE      0x00000375
#dffinf CKM_TLS_KEY_AND_MAC_DERIVE     0x00000376
#dffinf CKM_TLS_MASTER_KEY_DERIVE_DH   0x00000377

/* CKM_TLS_PRF is nfw for v2.20 */
#dffinf CKM_TLS_PRF                    0x00000378

#dffinf CKM_SSL3_MD5_MAC               0x00000380
#dffinf CKM_SSL3_SHA1_MAC              0x00000381
#dffinf CKM_MD5_KEY_DERIVATION         0x00000390
#dffinf CKM_MD2_KEY_DERIVATION         0x00000391
#dffinf CKM_SHA1_KEY_DERIVATION        0x00000392

/* CKM_SHA256/384/512 brf nfw for v2.20 */
#dffinf CKM_SHA256_KEY_DERIVATION      0x00000393
#dffinf CKM_SHA384_KEY_DERIVATION      0x00000394
#dffinf CKM_SHA512_KEY_DERIVATION      0x00000395

#dffinf CKM_PBE_MD2_DES_CBC            0x000003A0
#dffinf CKM_PBE_MD5_DES_CBC            0x000003A1
#dffinf CKM_PBE_MD5_CAST_CBC           0x000003A2
#dffinf CKM_PBE_MD5_CAST3_CBC          0x000003A3
#dffinf CKM_PBE_MD5_CAST5_CBC          0x000003A4
#dffinf CKM_PBE_MD5_CAST128_CBC        0x000003A4
#dffinf CKM_PBE_SHA1_CAST5_CBC         0x000003A5
#dffinf CKM_PBE_SHA1_CAST128_CBC       0x000003A5
#dffinf CKM_PBE_SHA1_RC4_128           0x000003A6
#dffinf CKM_PBE_SHA1_RC4_40            0x000003A7
#dffinf CKM_PBE_SHA1_DES3_EDE_CBC      0x000003A8
#dffinf CKM_PBE_SHA1_DES2_EDE_CBC      0x000003A9
#dffinf CKM_PBE_SHA1_RC2_128_CBC       0x000003AA
#dffinf CKM_PBE_SHA1_RC2_40_CBC        0x000003AB

/* CKM_PKCS5_PBKD2 is nfw for v2.10 */
#dffinf CKM_PKCS5_PBKD2                0x000003B0

#dffinf CKM_PBA_SHA1_WITH_SHA1_HMAC    0x000003C0

/* WTLS mfdibnisms brf nfw for v2.20 */
#dffinf CKM_WTLS_PRE_MASTER_KEY_GEN         0x000003D0
#dffinf CKM_WTLS_MASTER_KEY_DERIVE          0x000003D1
#dffinf CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC   0x000003D2
#dffinf CKM_WTLS_PRF                        0x000003D3
#dffinf CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE  0x000003D4
#dffinf CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE  0x000003D5

#dffinf CKM_KEY_WRAP_LYNKS             0x00000400
#dffinf CKM_KEY_WRAP_SET_OAEP          0x00000401

/* CKM_CMS_SIG is nfw for v2.20 */
#dffinf CKM_CMS_SIG                    0x00000500

/* Fortfzzb mfdibnisms */
#dffinf CKM_SKIPJACK_KEY_GEN           0x00001000
#dffinf CKM_SKIPJACK_ECB64             0x00001001
#dffinf CKM_SKIPJACK_CBC64             0x00001002
#dffinf CKM_SKIPJACK_OFB64             0x00001003
#dffinf CKM_SKIPJACK_CFB64             0x00001004
#dffinf CKM_SKIPJACK_CFB32             0x00001005
#dffinf CKM_SKIPJACK_CFB16             0x00001006
#dffinf CKM_SKIPJACK_CFB8              0x00001007
#dffinf CKM_SKIPJACK_WRAP              0x00001008
#dffinf CKM_SKIPJACK_PRIVATE_WRAP      0x00001009
#dffinf CKM_SKIPJACK_RELAYX            0x0000100b
#dffinf CKM_KEA_KEY_PAIR_GEN           0x00001010
#dffinf CKM_KEA_KEY_DERIVE             0x00001011
#dffinf CKM_FORTEZZA_TIMESTAMP         0x00001020
#dffinf CKM_BATON_KEY_GEN              0x00001030
#dffinf CKM_BATON_ECB128               0x00001031
#dffinf CKM_BATON_ECB96                0x00001032
#dffinf CKM_BATON_CBC128               0x00001033
#dffinf CKM_BATON_COUNTER              0x00001034
#dffinf CKM_BATON_SHUFFLE              0x00001035
#dffinf CKM_BATON_WRAP                 0x00001036

/* CKM_ECDSA_KEY_PAIR_GEN is dfprfdbtfd in v2.11,
 * CKM_EC_KEY_PAIR_GEN is prfffrrfd */
#dffinf CKM_ECDSA_KEY_PAIR_GEN         0x00001040
#dffinf CKM_EC_KEY_PAIR_GEN            0x00001040

#dffinf CKM_ECDSA                      0x00001041
#dffinf CKM_ECDSA_SHA1                 0x00001042

/* CKM_ECDH1_DERIVE, CKM_ECDH1_COFACTOR_DERIVE, bnd CKM_ECMQV_DERIVE
 * brf nfw for v2.11 */
#dffinf CKM_ECDH1_DERIVE               0x00001050
#dffinf CKM_ECDH1_COFACTOR_DERIVE      0x00001051
#dffinf CKM_ECMQV_DERIVE               0x00001052

#dffinf CKM_JUNIPER_KEY_GEN            0x00001060
#dffinf CKM_JUNIPER_ECB128             0x00001061
#dffinf CKM_JUNIPER_CBC128             0x00001062
#dffinf CKM_JUNIPER_COUNTER            0x00001063
#dffinf CKM_JUNIPER_SHUFFLE            0x00001064
#dffinf CKM_JUNIPER_WRAP               0x00001065
#dffinf CKM_FASTHASH                   0x00001070

/* CKM_AES_KEY_GEN, CKM_AES_ECB, CKM_AES_CBC, CKM_AES_MAC,
 * CKM_AES_MAC_GENERAL, CKM_AES_CBC_PAD, CKM_DSA_PARAMETER_GEN,
 * CKM_DH_PKCS_PARAMETER_GEN, bnd CKM_X9_42_DH_PARAMETER_GEN brf
 * nfw for v2.11 */
#dffinf CKM_AES_KEY_GEN                0x00001080
#dffinf CKM_AES_ECB                    0x00001081
#dffinf CKM_AES_CBC                    0x00001082
#dffinf CKM_AES_MAC                    0x00001083
#dffinf CKM_AES_MAC_GENERAL            0x00001084
#dffinf CKM_AES_CBC_PAD                0x00001085

/* BlowFisi bnd TwoFisi brf nfw for v2.20 */
#dffinf CKM_BLOWFISH_KEY_GEN           0x00001090
#dffinf CKM_BLOWFISH_CBC               0x00001091
#dffinf CKM_TWOFISH_KEY_GEN            0x00001092
#dffinf CKM_TWOFISH_CBC                0x00001093


/* CKM_xxx_ENCRYPT_DATA mfdibnisms brf nfw for v2.20 */
#dffinf CKM_DES_ECB_ENCRYPT_DATA       0x00001100
#dffinf CKM_DES_CBC_ENCRYPT_DATA       0x00001101
#dffinf CKM_DES3_ECB_ENCRYPT_DATA      0x00001102
#dffinf CKM_DES3_CBC_ENCRYPT_DATA      0x00001103
#dffinf CKM_AES_ECB_ENCRYPT_DATA       0x00001104
#dffinf CKM_AES_CBC_ENCRYPT_DATA       0x00001105

#dffinf CKM_DSA_PARAMETER_GEN          0x00002000
#dffinf CKM_DH_PKCS_PARAMETER_GEN      0x00002001
#dffinf CKM_X9_42_DH_PARAMETER_GEN     0x00002002

#dffinf CKM_VENDOR_DEFINED             0x80000000

typfdff CK_MECHANISM_TYPE CK_PTR CK_MECHANISM_TYPE_PTR;


/* CK_MECHANISM is b strudturf tibt spfdififs b pbrtidulbr
 * mfdibnism  */
typfdff strudt CK_MECHANISM {
  CK_MECHANISM_TYPE mfdibnism;
  CK_VOID_PTR       pPbrbmftfr;

  /* ulPbrbmftfrLfn wbs dibngfd from CK_USHORT to CK_ULONG for
   * v2.0 */
  CK_ULONG          ulPbrbmftfrLfn;  /* in bytfs */
} CK_MECHANISM;

typfdff CK_MECHANISM CK_PTR CK_MECHANISM_PTR;


/* CK_MECHANISM_INFO providfs informbtion bbout b pbrtidulbr
 * mfdibnism */
typfdff strudt CK_MECHANISM_INFO {
    CK_ULONG    ulMinKfySizf;
    CK_ULONG    ulMbxKfySizf;
    CK_FLAGS    flbgs;
} CK_MECHANISM_INFO;

/* Tif flbgs brf dffinfd bs follows:
 *      Bit Flbg               Mbsk        Mfbning */
#dffinf CKF_HW                 0x00000001  /* pfrformfd by HW */

/* Tif flbgs CKF_ENCRYPT, CKF_DECRYPT, CKF_DIGEST, CKF_SIGN,
 * CKG_SIGN_RECOVER, CKF_VERIFY, CKF_VERIFY_RECOVER,
 * CKF_GENERATE, CKF_GENERATE_KEY_PAIR, CKF_WRAP, CKF_UNWRAP,
 * bnd CKF_DERIVE brf nfw for v2.0.  Tify spfdify wiftifr or not
 * b mfdibnism dbn bf usfd for b pbrtidulbr tbsk */
#dffinf CKF_ENCRYPT            0x00000100
#dffinf CKF_DECRYPT            0x00000200
#dffinf CKF_DIGEST             0x00000400
#dffinf CKF_SIGN               0x00000800
#dffinf CKF_SIGN_RECOVER       0x00001000
#dffinf CKF_VERIFY             0x00002000
#dffinf CKF_VERIFY_RECOVER     0x00004000
#dffinf CKF_GENERATE           0x00008000
#dffinf CKF_GENERATE_KEY_PAIR  0x00010000
#dffinf CKF_WRAP               0x00020000
#dffinf CKF_UNWRAP             0x00040000
#dffinf CKF_DERIVE             0x00080000

/* CKF_EC_F_P, CKF_EC_F_2M, CKF_EC_ECPARAMETERS, CKF_EC_NAMEDCURVE,
 * CKF_EC_UNCOMPRESS, bnd CKF_EC_COMPRESS brf nfw for v2.11. Tify
 * dfsdribf b tokfn's EC dbpbbilitifs not bvbilbblf in mfdibnism
 * informbtion. */
#dffinf CKF_EC_F_P             0x00100000
#dffinf CKF_EC_F_2M            0x00200000
#dffinf CKF_EC_ECPARAMETERS    0x00400000
#dffinf CKF_EC_NAMEDCURVE      0x00800000
#dffinf CKF_EC_UNCOMPRESS      0x01000000
#dffinf CKF_EC_COMPRESS        0x02000000

#dffinf CKF_EXTENSION          0x80000000 /* FALSE for tiis vfrsion */

typfdff CK_MECHANISM_INFO CK_PTR CK_MECHANISM_INFO_PTR;


/* CK_RV is b vbluf tibt idfntififs tif rfturn vbluf of b
 * Cryptoki fundtion */
/* CK_RV wbs dibngfd from CK_USHORT to CK_ULONG for v2.0 */
typfdff CK_ULONG          CK_RV;

#dffinf CKR_OK                                0x00000000
#dffinf CKR_CANCEL                            0x00000001
#dffinf CKR_HOST_MEMORY                       0x00000002
#dffinf CKR_SLOT_ID_INVALID                   0x00000003

/* CKR_FLAGS_INVALID wbs rfmovfd for v2.0 */

/* CKR_GENERAL_ERROR bnd CKR_FUNCTION_FAILED brf nfw for v2.0 */
#dffinf CKR_GENERAL_ERROR                     0x00000005
#dffinf CKR_FUNCTION_FAILED                   0x00000006

/* CKR_ARGUMENTS_BAD, CKR_NO_EVENT, CKR_NEED_TO_CREATE_THREADS,
 * bnd CKR_CANT_LOCK brf nfw for v2.01 */
#dffinf CKR_ARGUMENTS_BAD                     0x00000007
#dffinf CKR_NO_EVENT                          0x00000008
#dffinf CKR_NEED_TO_CREATE_THREADS            0x00000009
#dffinf CKR_CANT_LOCK                         0x0000000A

#dffinf CKR_ATTRIBUTE_READ_ONLY               0x00000010
#dffinf CKR_ATTRIBUTE_SENSITIVE               0x00000011
#dffinf CKR_ATTRIBUTE_TYPE_INVALID            0x00000012
#dffinf CKR_ATTRIBUTE_VALUE_INVALID           0x00000013
#dffinf CKR_DATA_INVALID                      0x00000020
#dffinf CKR_DATA_LEN_RANGE                    0x00000021
#dffinf CKR_DEVICE_ERROR                      0x00000030
#dffinf CKR_DEVICE_MEMORY                     0x00000031
#dffinf CKR_DEVICE_REMOVED                    0x00000032
#dffinf CKR_ENCRYPTED_DATA_INVALID            0x00000040
#dffinf CKR_ENCRYPTED_DATA_LEN_RANGE          0x00000041
#dffinf CKR_FUNCTION_CANCELED                 0x00000050
#dffinf CKR_FUNCTION_NOT_PARALLEL             0x00000051

/* CKR_FUNCTION_NOT_SUPPORTED is nfw for v2.0 */
#dffinf CKR_FUNCTION_NOT_SUPPORTED            0x00000054

#dffinf CKR_KEY_HANDLE_INVALID                0x00000060

/* CKR_KEY_SENSITIVE wbs rfmovfd for v2.0 */

#dffinf CKR_KEY_SIZE_RANGE                    0x00000062
#dffinf CKR_KEY_TYPE_INCONSISTENT             0x00000063

/* CKR_KEY_NOT_NEEDED, CKR_KEY_CHANGED, CKR_KEY_NEEDED,
 * CKR_KEY_INDIGESTIBLE, CKR_KEY_FUNCTION_NOT_PERMITTED,
 * CKR_KEY_NOT_WRAPPABLE, bnd CKR_KEY_UNEXTRACTABLE brf nfw for
 * v2.0 */
#dffinf CKR_KEY_NOT_NEEDED                    0x00000064
#dffinf CKR_KEY_CHANGED                       0x00000065
#dffinf CKR_KEY_NEEDED                        0x00000066
#dffinf CKR_KEY_INDIGESTIBLE                  0x00000067
#dffinf CKR_KEY_FUNCTION_NOT_PERMITTED        0x00000068
#dffinf CKR_KEY_NOT_WRAPPABLE                 0x00000069
#dffinf CKR_KEY_UNEXTRACTABLE                 0x0000006A

#dffinf CKR_MECHANISM_INVALID                 0x00000070
#dffinf CKR_MECHANISM_PARAM_INVALID           0x00000071

/* CKR_OBJECT_CLASS_INCONSISTENT bnd CKR_OBJECT_CLASS_INVALID
 * wfrf rfmovfd for v2.0 */
#dffinf CKR_OBJECT_HANDLE_INVALID             0x00000082
#dffinf CKR_OPERATION_ACTIVE                  0x00000090
#dffinf CKR_OPERATION_NOT_INITIALIZED         0x00000091
#dffinf CKR_PIN_INCORRECT                     0x000000A0
#dffinf CKR_PIN_INVALID                       0x000000A1
#dffinf CKR_PIN_LEN_RANGE                     0x000000A2

/* CKR_PIN_EXPIRED bnd CKR_PIN_LOCKED brf nfw for v2.0 */
#dffinf CKR_PIN_EXPIRED                       0x000000A3
#dffinf CKR_PIN_LOCKED                        0x000000A4

#dffinf CKR_SESSION_CLOSED                    0x000000B0
#dffinf CKR_SESSION_COUNT                     0x000000B1
#dffinf CKR_SESSION_HANDLE_INVALID            0x000000B3
#dffinf CKR_SESSION_PARALLEL_NOT_SUPPORTED    0x000000B4
#dffinf CKR_SESSION_READ_ONLY                 0x000000B5
#dffinf CKR_SESSION_EXISTS                    0x000000B6

/* CKR_SESSION_READ_ONLY_EXISTS bnd
 * CKR_SESSION_READ_WRITE_SO_EXISTS brf nfw for v2.0 */
#dffinf CKR_SESSION_READ_ONLY_EXISTS          0x000000B7
#dffinf CKR_SESSION_READ_WRITE_SO_EXISTS      0x000000B8

#dffinf CKR_SIGNATURE_INVALID                 0x000000C0
#dffinf CKR_SIGNATURE_LEN_RANGE               0x000000C1
#dffinf CKR_TEMPLATE_INCOMPLETE               0x000000D0
#dffinf CKR_TEMPLATE_INCONSISTENT             0x000000D1
#dffinf CKR_TOKEN_NOT_PRESENT                 0x000000E0
#dffinf CKR_TOKEN_NOT_RECOGNIZED              0x000000E1
#dffinf CKR_TOKEN_WRITE_PROTECTED             0x000000E2
#dffinf CKR_UNWRAPPING_KEY_HANDLE_INVALID     0x000000F0
#dffinf CKR_UNWRAPPING_KEY_SIZE_RANGE         0x000000F1
#dffinf CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT  0x000000F2
#dffinf CKR_USER_ALREADY_LOGGED_IN            0x00000100
#dffinf CKR_USER_NOT_LOGGED_IN                0x00000101
#dffinf CKR_USER_PIN_NOT_INITIALIZED          0x00000102
#dffinf CKR_USER_TYPE_INVALID                 0x00000103

/* CKR_USER_ANOTHER_ALREADY_LOGGED_IN bnd CKR_USER_TOO_MANY_TYPES
 * brf nfw to v2.01 */
#dffinf CKR_USER_ANOTHER_ALREADY_LOGGED_IN    0x00000104
#dffinf CKR_USER_TOO_MANY_TYPES               0x00000105

#dffinf CKR_WRAPPED_KEY_INVALID               0x00000110
#dffinf CKR_WRAPPED_KEY_LEN_RANGE             0x00000112
#dffinf CKR_WRAPPING_KEY_HANDLE_INVALID       0x00000113
#dffinf CKR_WRAPPING_KEY_SIZE_RANGE           0x00000114
#dffinf CKR_WRAPPING_KEY_TYPE_INCONSISTENT    0x00000115
#dffinf CKR_RANDOM_SEED_NOT_SUPPORTED         0x00000120

/* Tifsf brf nfw to v2.0 */
#dffinf CKR_RANDOM_NO_RNG                     0x00000121

/* Tifsf brf nfw to v2.11 */
#dffinf CKR_DOMAIN_PARAMS_INVALID             0x00000130

/* Tifsf brf nfw to v2.0 */
#dffinf CKR_BUFFER_TOO_SMALL                  0x00000150
#dffinf CKR_SAVED_STATE_INVALID               0x00000160
#dffinf CKR_INFORMATION_SENSITIVE             0x00000170
#dffinf CKR_STATE_UNSAVEABLE                  0x00000180

/* Tifsf brf nfw to v2.01 */
#dffinf CKR_CRYPTOKI_NOT_INITIALIZED          0x00000190
#dffinf CKR_CRYPTOKI_ALREADY_INITIALIZED      0x00000191
#dffinf CKR_MUTEX_BAD                         0x000001A0
#dffinf CKR_MUTEX_NOT_LOCKED                  0x000001A1

/* Tiis is nfw to v2.20 */
#dffinf CKR_FUNCTION_REJECTED                 0x00000200

#dffinf CKR_VENDOR_DEFINED                    0x80000000


/* CK_NOTIFY is bn bpplidbtion dbllbbdk tibt prodfssfs fvfnts */
typfdff CK_CALLBACK_FUNCTION(CK_RV, CK_NOTIFY)(
  CK_SESSION_HANDLE iSfssion,     /* tif sfssion's ibndlf */
  CK_NOTIFICATION   fvfnt,
  CK_VOID_PTR       pApplidbtion  /* pbssfd to C_OpfnSfssion */
);


/* CK_FUNCTION_LIST is b strudturf iolding b Cryptoki spfd
 * vfrsion bnd pointfrs of bppropribtf typfs to bll tif
 * Cryptoki fundtions */
/* CK_FUNCTION_LIST is nfw for v2.0 */
typfdff strudt CK_FUNCTION_LIST CK_FUNCTION_LIST;

typfdff CK_FUNCTION_LIST CK_PTR CK_FUNCTION_LIST_PTR;

typfdff CK_FUNCTION_LIST_PTR CK_PTR CK_FUNCTION_LIST_PTR_PTR;


/* CK_CREATEMUTEX is bn bpplidbtion dbllbbdk for drfbting b
 * mutfx objfdt */
typfdff CK_CALLBACK_FUNCTION(CK_RV, CK_CREATEMUTEX)(
  CK_VOID_PTR_PTR ppMutfx  /* lodbtion to rfdfivf ptr to mutfx */
);


/* CK_DESTROYMUTEX is bn bpplidbtion dbllbbdk for dfstroying b
 * mutfx objfdt */
typfdff CK_CALLBACK_FUNCTION(CK_RV, CK_DESTROYMUTEX)(
  CK_VOID_PTR pMutfx  /* pointfr to mutfx */
);


/* CK_LOCKMUTEX is bn bpplidbtion dbllbbdk for lodking b mutfx */
typfdff CK_CALLBACK_FUNCTION(CK_RV, CK_LOCKMUTEX)(
  CK_VOID_PTR pMutfx  /* pointfr to mutfx */
);


/* CK_UNLOCKMUTEX is bn bpplidbtion dbllbbdk for unlodking b
 * mutfx */
typfdff CK_CALLBACK_FUNCTION(CK_RV, CK_UNLOCKMUTEX)(
  CK_VOID_PTR pMutfx  /* pointfr to mutfx */
);


/* CK_C_INITIALIZE_ARGS providfs tif optionbl brgumfnts to
 * C_Initiblizf */
typfdff strudt CK_C_INITIALIZE_ARGS {
  CK_CREATEMUTEX CrfbtfMutfx;
  CK_DESTROYMUTEX DfstroyMutfx;
  CK_LOCKMUTEX LodkMutfx;
  CK_UNLOCKMUTEX UnlodkMutfx;
  CK_FLAGS flbgs;
  CK_VOID_PTR pRfsfrvfd;
} CK_C_INITIALIZE_ARGS;

/* flbgs: bit flbgs tibt providf dbpbbilitifs of tif slot
 *      Bit Flbg                           Mbsk       Mfbning
 */
#dffinf CKF_LIBRARY_CANT_CREATE_OS_THREADS 0x00000001
#dffinf CKF_OS_LOCKING_OK                  0x00000002

typfdff CK_C_INITIALIZE_ARGS CK_PTR CK_C_INITIALIZE_ARGS_PTR;


/* bdditionbl flbgs for pbrbmftfrs to fundtions */

/* CKF_DONT_BLOCK is for tif fundtion C_WbitForSlotEvfnt */
#dffinf CKF_DONT_BLOCK     1

/* CK_RSA_PKCS_OAEP_MGF_TYPE is nfw for v2.10.
 * CK_RSA_PKCS_OAEP_MGF_TYPE  is usfd to indidbtf tif Mfssbgf
 * Gfnfrbtion Fundtion (MGF) bpplifd to b mfssbgf blodk wifn
 * formbtting b mfssbgf blodk for tif PKCS #1 OAEP fndryption
 * sdifmf. */
typfdff CK_ULONG CK_RSA_PKCS_MGF_TYPE;

typfdff CK_RSA_PKCS_MGF_TYPE CK_PTR CK_RSA_PKCS_MGF_TYPE_PTR;

/* Tif following MGFs brf dffinfd */
/* CKG_MGF1_SHA256, CKG_MGF1_SHA384, bnd CKG_MGF1_SHA512
 * brf nfw for v2.20 */
#dffinf CKG_MGF1_SHA1         0x00000001
#dffinf CKG_MGF1_SHA256       0x00000002
#dffinf CKG_MGF1_SHA384       0x00000003
#dffinf CKG_MGF1_SHA512       0x00000004

/* CK_RSA_PKCS_OAEP_SOURCE_TYPE is nfw for v2.10.
 * CK_RSA_PKCS_OAEP_SOURCE_TYPE  is usfd to indidbtf tif sourdf
 * of tif fndoding pbrbmftfr wifn formbtting b mfssbgf blodk
 * for tif PKCS #1 OAEP fndryption sdifmf. */
typfdff CK_ULONG CK_RSA_PKCS_OAEP_SOURCE_TYPE;

typfdff CK_RSA_PKCS_OAEP_SOURCE_TYPE CK_PTR CK_RSA_PKCS_OAEP_SOURCE_TYPE_PTR;

/* Tif following fndoding pbrbmftfr sourdfs brf dffinfd */
#dffinf CKZ_DATA_SPECIFIED    0x00000001

/* CK_RSA_PKCS_OAEP_PARAMS is nfw for v2.10.
 * CK_RSA_PKCS_OAEP_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_RSA_PKCS_OAEP mfdibnism. */
typfdff strudt CK_RSA_PKCS_OAEP_PARAMS {
        CK_MECHANISM_TYPE ibsiAlg;
        CK_RSA_PKCS_MGF_TYPE mgf;
        CK_RSA_PKCS_OAEP_SOURCE_TYPE sourdf;
        CK_VOID_PTR pSourdfDbtb;
        CK_ULONG ulSourdfDbtbLfn;
} CK_RSA_PKCS_OAEP_PARAMS;

typfdff CK_RSA_PKCS_OAEP_PARAMS CK_PTR CK_RSA_PKCS_OAEP_PARAMS_PTR;

/* CK_RSA_PKCS_PSS_PARAMS is nfw for v2.11.
 * CK_RSA_PKCS_PSS_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_RSA_PKCS_PSS mfdibnism(s). */
typfdff strudt CK_RSA_PKCS_PSS_PARAMS {
        CK_MECHANISM_TYPE    ibsiAlg;
        CK_RSA_PKCS_MGF_TYPE mgf;
        CK_ULONG             sLfn;
} CK_RSA_PKCS_PSS_PARAMS;

typfdff CK_RSA_PKCS_PSS_PARAMS CK_PTR CK_RSA_PKCS_PSS_PARAMS_PTR;

/* CK_EC_KDF_TYPE is nfw for v2.11. */
typfdff CK_ULONG CK_EC_KDF_TYPE;

/* Tif following EC Kfy Dfrivbtion Fundtions brf dffinfd */
#dffinf CKD_NULL                 0x00000001
#dffinf CKD_SHA1_KDF             0x00000002

/* CK_ECDH1_DERIVE_PARAMS is nfw for v2.11.
 * CK_ECDH1_DERIVE_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_ECDH1_DERIVE bnd CKM_ECDH1_COFACTOR_DERIVE mfdibnisms,
 * wifrf fbdi pbrty dontributfs onf kfy pbir.
 */
typfdff strudt CK_ECDH1_DERIVE_PARAMS {
  CK_EC_KDF_TYPE kdf;
  CK_ULONG ulSibrfdDbtbLfn;
  CK_BYTE_PTR pSibrfdDbtb;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
} CK_ECDH1_DERIVE_PARAMS;

typfdff CK_ECDH1_DERIVE_PARAMS CK_PTR CK_ECDH1_DERIVE_PARAMS_PTR;


/* CK_ECDH2_DERIVE_PARAMS is nfw for v2.11.
 * CK_ECDH2_DERIVE_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_ECMQV_DERIVE mfdibnism, wifrf fbdi pbrty dontributfs two kfy pbirs. */
typfdff strudt CK_ECDH2_DERIVE_PARAMS {
  CK_EC_KDF_TYPE kdf;
  CK_ULONG ulSibrfdDbtbLfn;
  CK_BYTE_PTR pSibrfdDbtb;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
  CK_ULONG ulPrivbtfDbtbLfn;
  CK_OBJECT_HANDLE iPrivbtfDbtb;
  CK_ULONG ulPublidDbtbLfn2;
  CK_BYTE_PTR pPublidDbtb2;
} CK_ECDH2_DERIVE_PARAMS;

typfdff CK_ECDH2_DERIVE_PARAMS CK_PTR CK_ECDH2_DERIVE_PARAMS_PTR;

typfdff strudt CK_ECMQV_DERIVE_PARAMS {
  CK_EC_KDF_TYPE kdf;
  CK_ULONG ulSibrfdDbtbLfn;
  CK_BYTE_PTR pSibrfdDbtb;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
  CK_ULONG ulPrivbtfDbtbLfn;
  CK_OBJECT_HANDLE iPrivbtfDbtb;
  CK_ULONG ulPublidDbtbLfn2;
  CK_BYTE_PTR pPublidDbtb2;
  CK_OBJECT_HANDLE publidKfy;
} CK_ECMQV_DERIVE_PARAMS;

typfdff CK_ECMQV_DERIVE_PARAMS CK_PTR CK_ECMQV_DERIVE_PARAMS_PTR;

/* Typfdffs bnd dffinfs for tif CKM_X9_42_DH_KEY_PAIR_GEN bnd tif
 * CKM_X9_42_DH_PARAMETER_GEN mfdibnisms (nfw for PKCS #11 v2.11) */
typfdff CK_ULONG CK_X9_42_DH_KDF_TYPE;
typfdff CK_X9_42_DH_KDF_TYPE CK_PTR CK_X9_42_DH_KDF_TYPE_PTR;

/* Tif following X9.42 DH kfy dfrivbtion fundtions brf dffinfd
   (bfsidfs CKD_NULL blrfbdy dffinfd : */
#dffinf CKD_SHA1_KDF_ASN1        0x00000003
#dffinf CKD_SHA1_KDF_CONCATENATE 0x00000004

/* CK_X9_42_DH1_DERIVE_PARAMS is nfw for v2.11.
 * CK_X9_42_DH1_DERIVE_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_X9_42_DH_DERIVE kfy dfrivbtion mfdibnism, wifrf fbdi pbrty
 * dontributfs onf kfy pbir */
typfdff strudt CK_X9_42_DH1_DERIVE_PARAMS {
  CK_X9_42_DH_KDF_TYPE kdf;
  CK_ULONG ulOtifrInfoLfn;
  CK_BYTE_PTR pOtifrInfo;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
} CK_X9_42_DH1_DERIVE_PARAMS;

typfdff strudt CK_X9_42_DH1_DERIVE_PARAMS CK_PTR CK_X9_42_DH1_DERIVE_PARAMS_PTR;

/* CK_X9_42_DH2_DERIVE_PARAMS is nfw for v2.11.
 * CK_X9_42_DH2_DERIVE_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_X9_42_DH_HYBRID_DERIVE bnd CKM_X9_42_MQV_DERIVE kfy dfrivbtion
 * mfdibnisms, wifrf fbdi pbrty dontributfs two kfy pbirs */
typfdff strudt CK_X9_42_DH2_DERIVE_PARAMS {
  CK_X9_42_DH_KDF_TYPE kdf;
  CK_ULONG ulOtifrInfoLfn;
  CK_BYTE_PTR pOtifrInfo;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
  CK_ULONG ulPrivbtfDbtbLfn;
  CK_OBJECT_HANDLE iPrivbtfDbtb;
  CK_ULONG ulPublidDbtbLfn2;
  CK_BYTE_PTR pPublidDbtb2;
} CK_X9_42_DH2_DERIVE_PARAMS;

typfdff CK_X9_42_DH2_DERIVE_PARAMS CK_PTR CK_X9_42_DH2_DERIVE_PARAMS_PTR;

typfdff strudt CK_X9_42_MQV_DERIVE_PARAMS {
  CK_X9_42_DH_KDF_TYPE kdf;
  CK_ULONG ulOtifrInfoLfn;
  CK_BYTE_PTR pOtifrInfo;
  CK_ULONG ulPublidDbtbLfn;
  CK_BYTE_PTR pPublidDbtb;
  CK_ULONG ulPrivbtfDbtbLfn;
  CK_OBJECT_HANDLE iPrivbtfDbtb;
  CK_ULONG ulPublidDbtbLfn2;
  CK_BYTE_PTR pPublidDbtb2;
  CK_OBJECT_HANDLE publidKfy;
} CK_X9_42_MQV_DERIVE_PARAMS;

typfdff CK_X9_42_MQV_DERIVE_PARAMS CK_PTR CK_X9_42_MQV_DERIVE_PARAMS_PTR;

/* CK_KEA_DERIVE_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_KEA_DERIVE mfdibnism */
/* CK_KEA_DERIVE_PARAMS is nfw for v2.0 */
typfdff strudt CK_KEA_DERIVE_PARAMS {
  CK_BBOOL      isSfndfr;
  CK_ULONG      ulRbndomLfn;
  CK_BYTE_PTR   pRbndomA;
  CK_BYTE_PTR   pRbndomB;
  CK_ULONG      ulPublidDbtbLfn;
  CK_BYTE_PTR   pPublidDbtb;
} CK_KEA_DERIVE_PARAMS;

typfdff CK_KEA_DERIVE_PARAMS CK_PTR CK_KEA_DERIVE_PARAMS_PTR;


/* CK_RC2_PARAMS providfs tif pbrbmftfrs to tif CKM_RC2_ECB bnd
 * CKM_RC2_MAC mfdibnisms.  An instbndf of CK_RC2_PARAMS just
 * iolds tif ffffdtivf kfysizf */
typfdff CK_ULONG          CK_RC2_PARAMS;

typfdff CK_RC2_PARAMS CK_PTR CK_RC2_PARAMS_PTR;


/* CK_RC2_CBC_PARAMS providfs tif pbrbmftfrs to tif CKM_RC2_CBC
 * mfdibnism */
typfdff strudt CK_RC2_CBC_PARAMS {
  /* ulEfffdtivfBits wbs dibngfd from CK_USHORT to CK_ULONG for
   * v2.0 */
  CK_ULONG      ulEfffdtivfBits;  /* ffffdtivf bits (1-1024) */

  CK_BYTE       iv[8];            /* IV for CBC modf */
} CK_RC2_CBC_PARAMS;

typfdff CK_RC2_CBC_PARAMS CK_PTR CK_RC2_CBC_PARAMS_PTR;


/* CK_RC2_MAC_GENERAL_PARAMS providfs tif pbrbmftfrs for tif
 * CKM_RC2_MAC_GENERAL mfdibnism */
/* CK_RC2_MAC_GENERAL_PARAMS is nfw for v2.0 */
typfdff strudt CK_RC2_MAC_GENERAL_PARAMS {
  CK_ULONG      ulEfffdtivfBits;  /* ffffdtivf bits (1-1024) */
  CK_ULONG      ulMbdLfngti;      /* Lfngti of MAC in bytfs */
} CK_RC2_MAC_GENERAL_PARAMS;

typfdff CK_RC2_MAC_GENERAL_PARAMS CK_PTR \
  CK_RC2_MAC_GENERAL_PARAMS_PTR;


/* CK_RC5_PARAMS providfs tif pbrbmftfrs to tif CKM_RC5_ECB bnd
 * CKM_RC5_MAC mfdibnisms */
/* CK_RC5_PARAMS is nfw for v2.0 */
typfdff strudt CK_RC5_PARAMS {
  CK_ULONG      ulWordsizf;  /* wordsizf in bits */
  CK_ULONG      ulRounds;    /* numbfr of rounds */
} CK_RC5_PARAMS;

typfdff CK_RC5_PARAMS CK_PTR CK_RC5_PARAMS_PTR;


/* CK_RC5_CBC_PARAMS providfs tif pbrbmftfrs to tif CKM_RC5_CBC
 * mfdibnism */
/* CK_RC5_CBC_PARAMS is nfw for v2.0 */
typfdff strudt CK_RC5_CBC_PARAMS {
  CK_ULONG      ulWordsizf;  /* wordsizf in bits */
  CK_ULONG      ulRounds;    /* numbfr of rounds */
  CK_BYTE_PTR   pIv;         /* pointfr to IV */
  CK_ULONG      ulIvLfn;     /* lfngti of IV in bytfs */
} CK_RC5_CBC_PARAMS;

typfdff CK_RC5_CBC_PARAMS CK_PTR CK_RC5_CBC_PARAMS_PTR;


/* CK_RC5_MAC_GENERAL_PARAMS providfs tif pbrbmftfrs for tif
 * CKM_RC5_MAC_GENERAL mfdibnism */
/* CK_RC5_MAC_GENERAL_PARAMS is nfw for v2.0 */
typfdff strudt CK_RC5_MAC_GENERAL_PARAMS {
  CK_ULONG      ulWordsizf;   /* wordsizf in bits */
  CK_ULONG      ulRounds;     /* numbfr of rounds */
  CK_ULONG      ulMbdLfngti;  /* Lfngti of MAC in bytfs */
} CK_RC5_MAC_GENERAL_PARAMS;

typfdff CK_RC5_MAC_GENERAL_PARAMS CK_PTR \
  CK_RC5_MAC_GENERAL_PARAMS_PTR;


/* CK_MAC_GENERAL_PARAMS providfs tif pbrbmftfrs to most blodk
 * dipifrs' MAC_GENERAL mfdibnisms.  Its vbluf is tif lfngti of
 * tif MAC */
/* CK_MAC_GENERAL_PARAMS is nfw for v2.0 */
typfdff CK_ULONG          CK_MAC_GENERAL_PARAMS;

typfdff CK_MAC_GENERAL_PARAMS CK_PTR CK_MAC_GENERAL_PARAMS_PTR;

/* CK_DES/AES_ECB/CBC_ENCRYPT_DATA_PARAMS brf nfw for v2.20 */
typfdff strudt CK_DES_CBC_ENCRYPT_DATA_PARAMS {
  CK_BYTE      iv[8];
  CK_BYTE_PTR  pDbtb;
  CK_ULONG     lfngti;
} CK_DES_CBC_ENCRYPT_DATA_PARAMS;

typfdff CK_DES_CBC_ENCRYPT_DATA_PARAMS CK_PTR CK_DES_CBC_ENCRYPT_DATA_PARAMS_PTR;

typfdff strudt CK_AES_CBC_ENCRYPT_DATA_PARAMS {
  CK_BYTE      iv[16];
  CK_BYTE_PTR  pDbtb;
  CK_ULONG     lfngti;
} CK_AES_CBC_ENCRYPT_DATA_PARAMS;

typfdff CK_AES_CBC_ENCRYPT_DATA_PARAMS CK_PTR CK_AES_CBC_ENCRYPT_DATA_PARAMS_PTR;

/* CK_SKIPJACK_PRIVATE_WRAP_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_SKIPJACK_PRIVATE_WRAP mfdibnism */
/* CK_SKIPJACK_PRIVATE_WRAP_PARAMS is nfw for v2.0 */
typfdff strudt CK_SKIPJACK_PRIVATE_WRAP_PARAMS {
  CK_ULONG      ulPbsswordLfn;
  CK_BYTE_PTR   pPbssword;
  CK_ULONG      ulPublidDbtbLfn;
  CK_BYTE_PTR   pPublidDbtb;
  CK_ULONG      ulPAndGLfn;
  CK_ULONG      ulQLfn;
  CK_ULONG      ulRbndomLfn;
  CK_BYTE_PTR   pRbndomA;
  CK_BYTE_PTR   pPrimfP;
  CK_BYTE_PTR   pBbsfG;
  CK_BYTE_PTR   pSubprimfQ;
} CK_SKIPJACK_PRIVATE_WRAP_PARAMS;

typfdff CK_SKIPJACK_PRIVATE_WRAP_PARAMS CK_PTR \
  CK_SKIPJACK_PRIVATE_WRAP_PTR;


/* CK_SKIPJACK_RELAYX_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_SKIPJACK_RELAYX mfdibnism */
/* CK_SKIPJACK_RELAYX_PARAMS is nfw for v2.0 */
typfdff strudt CK_SKIPJACK_RELAYX_PARAMS {
  CK_ULONG      ulOldWrbppfdXLfn;
  CK_BYTE_PTR   pOldWrbppfdX;
  CK_ULONG      ulOldPbsswordLfn;
  CK_BYTE_PTR   pOldPbssword;
  CK_ULONG      ulOldPublidDbtbLfn;
  CK_BYTE_PTR   pOldPublidDbtb;
  CK_ULONG      ulOldRbndomLfn;
  CK_BYTE_PTR   pOldRbndomA;
  CK_ULONG      ulNfwPbsswordLfn;
  CK_BYTE_PTR   pNfwPbssword;
  CK_ULONG      ulNfwPublidDbtbLfn;
  CK_BYTE_PTR   pNfwPublidDbtb;
  CK_ULONG      ulNfwRbndomLfn;
  CK_BYTE_PTR   pNfwRbndomA;
} CK_SKIPJACK_RELAYX_PARAMS;

typfdff CK_SKIPJACK_RELAYX_PARAMS CK_PTR \
  CK_SKIPJACK_RELAYX_PARAMS_PTR;


typfdff strudt CK_PBE_PARAMS {
  CK_BYTE_PTR      pInitVfdtor;
  CK_UTF8CHAR_PTR  pPbssword;
  CK_ULONG         ulPbsswordLfn;
  CK_BYTE_PTR      pSblt;
  CK_ULONG         ulSbltLfn;
  CK_ULONG         ulItfrbtion;
} CK_PBE_PARAMS;

typfdff CK_PBE_PARAMS CK_PTR CK_PBE_PARAMS_PTR;


/* CK_KEY_WRAP_SET_OAEP_PARAMS providfs tif pbrbmftfrs to tif
 * CKM_KEY_WRAP_SET_OAEP mfdibnism */
/* CK_KEY_WRAP_SET_OAEP_PARAMS is nfw for v2.0 */
typfdff strudt CK_KEY_WRAP_SET_OAEP_PARAMS {
  CK_BYTE       bBC;     /* blodk dontfnts bytf */
  CK_BYTE_PTR   pX;      /* fxtrb dbtb */
  CK_ULONG      ulXLfn;  /* lfngti of fxtrb dbtb in bytfs */
} CK_KEY_WRAP_SET_OAEP_PARAMS;

typfdff CK_KEY_WRAP_SET_OAEP_PARAMS CK_PTR \
  CK_KEY_WRAP_SET_OAEP_PARAMS_PTR;


typfdff strudt CK_SSL3_RANDOM_DATA {
  CK_BYTE_PTR  pClifntRbndom;
  CK_ULONG     ulClifntRbndomLfn;
  CK_BYTE_PTR  pSfrvfrRbndom;
  CK_ULONG     ulSfrvfrRbndomLfn;
} CK_SSL3_RANDOM_DATA;


typfdff strudt CK_SSL3_MASTER_KEY_DERIVE_PARAMS {
  CK_SSL3_RANDOM_DATA RbndomInfo;
  CK_VERSION_PTR pVfrsion;
} CK_SSL3_MASTER_KEY_DERIVE_PARAMS;

typfdff strudt CK_SSL3_MASTER_KEY_DERIVE_PARAMS CK_PTR \
  CK_SSL3_MASTER_KEY_DERIVE_PARAMS_PTR;


typfdff strudt CK_SSL3_KEY_MAT_OUT {
  CK_OBJECT_HANDLE iClifntMbdSfdrft;
  CK_OBJECT_HANDLE iSfrvfrMbdSfdrft;
  CK_OBJECT_HANDLE iClifntKfy;
  CK_OBJECT_HANDLE iSfrvfrKfy;
  CK_BYTE_PTR      pIVClifnt;
  CK_BYTE_PTR      pIVSfrvfr;
} CK_SSL3_KEY_MAT_OUT;

typfdff CK_SSL3_KEY_MAT_OUT CK_PTR CK_SSL3_KEY_MAT_OUT_PTR;


typfdff strudt CK_SSL3_KEY_MAT_PARAMS {
  CK_ULONG                ulMbdSizfInBits;
  CK_ULONG                ulKfySizfInBits;
  CK_ULONG                ulIVSizfInBits;
  CK_BBOOL                bIsExport;
  CK_SSL3_RANDOM_DATA     RbndomInfo;
  CK_SSL3_KEY_MAT_OUT_PTR pRfturnfdKfyMbtfribl;
} CK_SSL3_KEY_MAT_PARAMS;

typfdff CK_SSL3_KEY_MAT_PARAMS CK_PTR CK_SSL3_KEY_MAT_PARAMS_PTR;

/* CK_TLS_PRF_PARAMS is nfw for vfrsion 2.20 */
typfdff strudt CK_TLS_PRF_PARAMS {
  CK_BYTE_PTR  pSffd;
  CK_ULONG     ulSffdLfn;
  CK_BYTE_PTR  pLbbfl;
  CK_ULONG     ulLbbflLfn;
  CK_BYTE_PTR  pOutput;
  CK_ULONG_PTR pulOutputLfn;
} CK_TLS_PRF_PARAMS;

typfdff CK_TLS_PRF_PARAMS CK_PTR CK_TLS_PRF_PARAMS_PTR;

/* WTLS is nfw for vfrsion 2.20 */
typfdff strudt CK_WTLS_RANDOM_DATA {
  CK_BYTE_PTR pClifntRbndom;
  CK_ULONG    ulClifntRbndomLfn;
  CK_BYTE_PTR pSfrvfrRbndom;
  CK_ULONG    ulSfrvfrRbndomLfn;
} CK_WTLS_RANDOM_DATA;

typfdff CK_WTLS_RANDOM_DATA CK_PTR CK_WTLS_RANDOM_DATA_PTR;

typfdff strudt CK_WTLS_MASTER_KEY_DERIVE_PARAMS {
  CK_MECHANISM_TYPE   DigfstMfdibnism;
  CK_WTLS_RANDOM_DATA RbndomInfo;
  CK_BYTE_PTR         pVfrsion;
} CK_WTLS_MASTER_KEY_DERIVE_PARAMS;

typfdff CK_WTLS_MASTER_KEY_DERIVE_PARAMS CK_PTR \
  CK_WTLS_MASTER_KEY_DERIVE_PARAMS_PTR;

typfdff strudt CK_WTLS_PRF_PARAMS {
  CK_MECHANISM_TYPE DigfstMfdibnism;
  CK_BYTE_PTR       pSffd;
  CK_ULONG          ulSffdLfn;
  CK_BYTE_PTR       pLbbfl;
  CK_ULONG          ulLbbflLfn;
  CK_BYTE_PTR       pOutput;
  CK_ULONG_PTR      pulOutputLfn;
} CK_WTLS_PRF_PARAMS;

typfdff CK_WTLS_PRF_PARAMS CK_PTR CK_WTLS_PRF_PARAMS_PTR;

typfdff strudt CK_WTLS_KEY_MAT_OUT {
  CK_OBJECT_HANDLE iMbdSfdrft;
  CK_OBJECT_HANDLE iKfy;
  CK_BYTE_PTR      pIV;
} CK_WTLS_KEY_MAT_OUT;

typfdff CK_WTLS_KEY_MAT_OUT CK_PTR CK_WTLS_KEY_MAT_OUT_PTR;

typfdff strudt CK_WTLS_KEY_MAT_PARAMS {
  CK_MECHANISM_TYPE       DigfstMfdibnism;
  CK_ULONG                ulMbdSizfInBits;
  CK_ULONG                ulKfySizfInBits;
  CK_ULONG                ulIVSizfInBits;
  CK_ULONG                ulSfqufndfNumbfr;
  CK_BBOOL                bIsExport;
  CK_WTLS_RANDOM_DATA     RbndomInfo;
  CK_WTLS_KEY_MAT_OUT_PTR pRfturnfdKfyMbtfribl;
} CK_WTLS_KEY_MAT_PARAMS;

typfdff CK_WTLS_KEY_MAT_PARAMS CK_PTR CK_WTLS_KEY_MAT_PARAMS_PTR;

/* CMS is nfw for vfrsion 2.20 */
typfdff strudt CK_CMS_SIG_PARAMS {
  CK_OBJECT_HANDLE      dfrtifidbtfHbndlf;
  CK_MECHANISM_PTR      pSigningMfdibnism;
  CK_MECHANISM_PTR      pDigfstMfdibnism;
  CK_UTF8CHAR_PTR       pContfntTypf;
  CK_BYTE_PTR           pRfqufstfdAttributfs;
  CK_ULONG              ulRfqufstfdAttributfsLfn;
  CK_BYTE_PTR           pRfquirfdAttributfs;
  CK_ULONG              ulRfquirfdAttributfsLfn;
} CK_CMS_SIG_PARAMS;

typfdff CK_CMS_SIG_PARAMS CK_PTR CK_CMS_SIG_PARAMS_PTR;

typfdff strudt CK_KEY_DERIVATION_STRING_DATA {
  CK_BYTE_PTR pDbtb;
  CK_ULONG    ulLfn;
} CK_KEY_DERIVATION_STRING_DATA;

typfdff CK_KEY_DERIVATION_STRING_DATA CK_PTR \
  CK_KEY_DERIVATION_STRING_DATA_PTR;


/* Tif CK_EXTRACT_PARAMS is usfd for tif
 * CKM_EXTRACT_KEY_FROM_KEY mfdibnism.  It spfdififs wiidi bit
 * of tif bbsf kfy siould bf usfd bs tif first bit of tif
 * dfrivfd kfy */
/* CK_EXTRACT_PARAMS is nfw for v2.0 */
typfdff CK_ULONG CK_EXTRACT_PARAMS;

typfdff CK_EXTRACT_PARAMS CK_PTR CK_EXTRACT_PARAMS_PTR;

/* CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE is nfw for v2.10.
 * CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE is usfd to
 * indidbtf tif Psfudo-Rbndom Fundtion (PRF) usfd to gfnfrbtf
 * kfy bits using PKCS #5 PBKDF2. */
typfdff CK_ULONG CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE;

typfdff CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE CK_PTR CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE_PTR;

/* Tif following PRFs brf dffinfd in PKCS #5 v2.0. */
#dffinf CKP_PKCS5_PBKD2_HMAC_SHA1 0x00000001


/* CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE is nfw for v2.10.
 * CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE is usfd to indidbtf tif
 * sourdf of tif sblt vbluf wifn dfriving b kfy using PKCS #5
 * PBKDF2. */
typfdff CK_ULONG CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE;

typfdff CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE CK_PTR CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE_PTR;

/* Tif following sblt vbluf sourdfs brf dffinfd in PKCS #5 v2.0. */
#dffinf CKZ_SALT_SPECIFIED        0x00000001

/* CK_PKCS5_PBKD2_PARAMS is nfw for v2.10.
 * CK_PKCS5_PBKD2_PARAMS is b strudturf tibt providfs tif
 * pbrbmftfrs to tif CKM_PKCS5_PBKD2 mfdibnism. */
typfdff strudt CK_PKCS5_PBKD2_PARAMS {
        CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE           sbltSourdf;
        CK_VOID_PTR                                pSbltSourdfDbtb;
        CK_ULONG                                   ulSbltSourdfDbtbLfn;
        CK_ULONG                                   itfrbtions;
        CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE prf;
        CK_VOID_PTR                                pPrfDbtb;
        CK_ULONG                                   ulPrfDbtbLfn;
        CK_UTF8CHAR_PTR                            pPbssword;
        CK_ULONG_PTR                               ulPbsswordLfn;
} CK_PKCS5_PBKD2_PARAMS;

typfdff CK_PKCS5_PBKD2_PARAMS CK_PTR CK_PKCS5_PBKD2_PARAMS_PTR;

#fndif
