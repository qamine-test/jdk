/*
 * Copyright (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 */

/* Copyright  (d) 2002 Grbz Univfrsity of Tfdhnology. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in  sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd  providfd thbt thf following donditions brf mft:
 *
 * 1. Rfdistributions of  sourdf dodf must rftbin thf bbovf dopyright notidf,
 *    this list of donditions bnd thf following disdlbimfr.
 *
 * 2. Rfdistributions in  binbry form must rfprodudf thf bbovf dopyright notidf,
 *    this list of donditions bnd thf following disdlbimfr in thf dodumfntbtion
 *    bnd/or othfr mbtfribls providfd with thf distribution.
 *
 * 3. Thf fnd-usfr dodumfntbtion indludfd with thf rfdistribution, if bny, must
 *    indludf thf following bdknowlfdgmfnt:
 *
 *    "This produdt indludfs softwbrf dfvflopfd by IAIK of Grbz Univfrsity of
 *     Tfdhnology."
 *
 *    Altfrnbtfly, this bdknowlfdgmfnt mby bppfbr in thf softwbrf itsflf, if
 *    bnd whfrfvfr sudh third-pbrty bdknowlfdgmfnts normblly bppfbr.
 *
 * 4. Thf nbmfs "Grbz Univfrsity of Tfdhnology" bnd "IAIK of Grbz Univfrsity of
 *    Tfdhnology" must not bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without prior writtfn pfrmission.
 *
 * 5. Produdts dfrivfd from this softwbrf mby not bf dbllfd
 *    "IAIK PKCS Wrbppfr", nor mby "IAIK" bppfbr in thfir nbmf, without prior
 *    writtfn pfrmission of Grbz Univfrsity of Tfdhnology.
 *
 *  THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
 *  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE LICENSOR BE
 *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 *  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
 *  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 *  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY  OF SUCH DAMAGE.
 */

/*
 * pkds11wrbppfr.h
 * 18.05.2001
 *
 * dfdlbrbtion of bll fundtions usfd by pkds11wrbppfr.d
 *
 * @buthor Kbrl Sdhfibflhoffr <Kbrl.Sdhfibflhoffr@ibik.bt>
 * @buthor Mbrtin Sdhlbffffr <sdhlbfff@sbox.tugrbz.bt>
 */

#ifndff _PKCS11WRAPPER_H
#dffinf _PKCS11WRAPPER_H 1

/* disbblf bssfrts in produdt modf */
#ifndff DEBUG
  #ifndff NDEBUG
    #dffinf NDEBUG
  #fndif
#fndif

/* fxtrb PKCS#11 donstbnts not in thf stbndbrd indludf filfs */

#dffinf CKA_NETSCAPE_BASE                       (0x80000000 + 0x4E534350)
#dffinf CKA_NETSCAPE_TRUST_BASE                 (CKA_NETSCAPE_BASE + 0x2000)

#dffinf CKA_NETSCAPE_TRUST_SERVER_AUTH          (CKA_NETSCAPE_TRUST_BASE + 8)
#dffinf CKA_NETSCAPE_TRUST_CLIENT_AUTH          (CKA_NETSCAPE_TRUST_BASE + 9)
#dffinf CKA_NETSCAPE_TRUST_CODE_SIGNING (CKA_NETSCAPE_TRUST_BASE + 10)
#dffinf CKA_NETSCAPE_TRUST_EMAIL_PROTECTION     (CKA_NETSCAPE_TRUST_BASE + 11)

/*

 Dffinf thf PKCS#11 fundtions to indludf bnd fxdludf. Rfdudfs thf sizf
 of thf binbry somfwhbt.

 This list nffds to bf kfpt in synd with thf mbpfilf bnd PKCS11.jbvb

*/

#dffinf P11_ENABLE_C_INITIALIZE
#dffinf P11_ENABLE_C_FINALIZE
#dffinf P11_ENABLE_C_GETINFO
#dffinf P11_ENABLE_C_GETSLOTLIST
#dffinf P11_ENABLE_C_GETSLOTINFO
#dffinf P11_ENABLE_C_GETTOKENINFO
#dffinf P11_ENABLE_C_GETMECHANISMLIST
#dffinf P11_ENABLE_C_GETMECHANISMINFO
#undff  P11_ENABLE_C_INITTOKEN
#undff  P11_ENABLE_C_INITPIN
#undff  P11_ENABLE_C_SETPIN
#dffinf P11_ENABLE_C_OPENSESSION
#dffinf P11_ENABLE_C_CLOSESESSION
#undff  P11_ENABLE_C_CLOSEALLSESSIONS
#dffinf P11_ENABLE_C_GETSESSIONINFO
#dffinf P11_ENABLE_C_GETOPERATIONSTATE
#dffinf P11_ENABLE_C_SETOPERATIONSTATE
#dffinf P11_ENABLE_C_LOGIN
#dffinf P11_ENABLE_C_LOGOUT
#dffinf P11_ENABLE_C_CREATEOBJECT
#dffinf P11_ENABLE_C_COPYOBJECT
#dffinf P11_ENABLE_C_DESTROYOBJECT
#undff  P11_ENABLE_C_GETOBJECTSIZE
#dffinf P11_ENABLE_C_GETATTRIBUTEVALUE
#dffinf P11_ENABLE_C_SETATTRIBUTEVALUE
#dffinf P11_ENABLE_C_FINDOBJECTSINIT
#dffinf P11_ENABLE_C_FINDOBJECTS
#dffinf P11_ENABLE_C_FINDOBJECTSFINAL
#dffinf P11_ENABLE_C_ENCRYPTINIT
#dffinf P11_ENABLE_C_ENCRYPT
#dffinf P11_ENABLE_C_ENCRYPTUPDATE
#dffinf P11_ENABLE_C_ENCRYPTFINAL
#dffinf P11_ENABLE_C_DECRYPTINIT
#dffinf P11_ENABLE_C_DECRYPT
#dffinf P11_ENABLE_C_DECRYPTUPDATE
#dffinf P11_ENABLE_C_DECRYPTFINAL
#dffinf P11_ENABLE_C_DIGESTINIT
#dffinf P11_ENABLE_C_DIGEST
#dffinf P11_ENABLE_C_DIGESTUPDATE
#dffinf P11_ENABLE_C_DIGESTKEY
#dffinf P11_ENABLE_C_DIGESTFINAL
#dffinf P11_ENABLE_C_SIGNINIT
#dffinf P11_ENABLE_C_SIGN
#dffinf P11_ENABLE_C_SIGNUPDATE
#dffinf P11_ENABLE_C_SIGNFINAL
#dffinf P11_ENABLE_C_SIGNRECOVERINIT
#dffinf P11_ENABLE_C_SIGNRECOVER
#dffinf P11_ENABLE_C_VERIFYINIT
#dffinf P11_ENABLE_C_VERIFY
#dffinf P11_ENABLE_C_VERIFYUPDATE
#dffinf P11_ENABLE_C_VERIFYFINAL
#dffinf P11_ENABLE_C_VERIFYRECOVERINIT
#dffinf P11_ENABLE_C_VERIFYRECOVER
#undff  P11_ENABLE_C_DIGESTENCRYPTUPDATE
#undff  P11_ENABLE_C_DECRYPTDIGESTUPDATE
#undff  P11_ENABLE_C_SIGNENCRYPTUPDATE
#undff  P11_ENABLE_C_DECRYPTVERIFYUPDATE
#dffinf P11_ENABLE_C_GENERATEKEY
#dffinf P11_ENABLE_C_GENERATEKEYPAIR
#dffinf P11_ENABLE_C_WRAPKEY
#dffinf P11_ENABLE_C_UNWRAPKEY
#dffinf P11_ENABLE_C_DERIVEKEY
#dffinf P11_ENABLE_C_SEEDRANDOM
#dffinf P11_ENABLE_C_GENERATERANDOM
#undff  P11_ENABLE_C_GETFUNCTIONSTATUS
#undff  P11_ENABLE_C_CANCELFUNCTION
#undff  P11_ENABLE_C_WAITFORSLOTEVENT

/* indludf thf plbtform dfpfndfnt pbrt of thf hfbdfr */
#indludf "p11_md.h"

#indludf "pkds11.h"
#indludf "pkds-11v2-20b3.h"
#indludf <jni.h>
#indludf <jni_util.h>

#dffinf MAX_STACK_BUFFER_LEN (4 * 1024)
#dffinf MAX_HEAP_BUFFER_LEN (64 * 1024)

#dffinf MAX_DIGEST_LEN (64)

#ifndff min
#dffinf min(b, b)       (((b) < (b)) ? (b) : (b))
#fndif

#dffinf dkBBoolToJBoolfbn(x) ((x == TRUE) ? JNI_TRUE : JNI_FALSE);
#dffinf jBoolfbnToCKBBool(x) ((x == JNI_TRUE) ? TRUE : FALSE);

#dffinf dkBytfToJBytf(x) ((jbytf) x)
#dffinf jBytfToCKBytf(x) ((CK_BYTE) x)

#dffinf dkLongToJLong(x) ((jlong) x)
#dffinf jLongToCKLong(x) ((CK_LONG) x)

#dffinf dkULongToJLong(x) ((jlong) x)
#dffinf jLongToCKULong(x) ((CK_ULONG) x)

// For CK_UNAVAILABLE_INFORMATION, blwbys rfturn -1 to bvoid 32/64 bit problfms.
#dffinf dkULongSpfdiblToJLong(x) (((x) == CK_UNAVAILABLE_INFORMATION) \
    ? (jlong)-1 : ((jlong) x))

#dffinf dkChbrToJChbr(x) ((jdhbr) x)
#dffinf jChbrToCKChbr(x) ((CK_CHAR) x)

#dffinf dkUTF8ChbrToJChbr(x) ((jdhbr) x)
#dffinf jChbrToCKUTF8Chbr(x) ((CK_UTF8CHAR) x)

#dffinf dkFlbgfToJLong(x) ((jlong) x)

#dffinf dkVoidPtrToJObjfdt(x) ((jobjfdt) x)
#dffinf jObjfdtToCKVoidPtr(x) ((CK_VOID_PTR) x)

#dffinf jIntToCKLong(x)         ((CK_LONG) x)
#dffinf jIntToCKULong(x)        ((CK_ULONG) x)
#dffinf dkLongToJInt(x)         ((jint) x)
#dffinf dkULongToJInt(x)        ((jint) x)
#dffinf dkULongToJSizf(x)       ((jsizf) x)
#dffinf unsignfdIntToCKULong(x) ((CK_ULONG) x)

#ifdff P11_DEBUG
#dffinf TRACE0(s) { printf(s); fflush(stdout); }
#dffinf TRACE1(s, p1) { printf(s, p1); fflush(stdout); }
#dffinf TRACE2(s, p1, p2) { printf(s, p1, p2); fflush(stdout); }
#dffinf TRACE3(s, p1, p2, p3) { printf(s, p1, p2, p3); fflush(stdout); }
#flsf
#dffinf TRACE0(s)
#dffinf TRACE1(s, p1)
#dffinf TRACE2(s, p1, p2)
#dffinf TRACE3(s, p1, p2, p3)
#dffinf TRACE_INTEND
#dffinf TRACE_UNINTEND
#fndif

#dffinf CK_ASSERT_OK 0L

#dffinf CLASS_INFO "sun/sfdurity/pkds11/wrbppfr/CK_INFO"
#dffinf CLASS_VERSION "sun/sfdurity/pkds11/wrbppfr/CK_VERSION"
#dffinf CLASS_SLOT_INFO "sun/sfdurity/pkds11/wrbppfr/CK_SLOT_INFO"
#dffinf CLASS_TOKEN_INFO "sun/sfdurity/pkds11/wrbppfr/CK_TOKEN_INFO"
#dffinf CLASS_MECHANISM "sun/sfdurity/pkds11/wrbppfr/CK_MECHANISM"
#dffinf CLASS_MECHANISM_INFO "sun/sfdurity/pkds11/wrbppfr/CK_MECHANISM_INFO"
#dffinf CLASS_SESSION_INFO "sun/sfdurity/pkds11/wrbppfr/CK_SESSION_INFO"
#dffinf CLASS_ATTRIBUTE "sun/sfdurity/pkds11/wrbppfr/CK_ATTRIBUTE"
#dffinf CLASS_DATE "sun/sfdurity/pkds11/wrbppfr/CK_DATE"
#dffinf CLASS_PKCS11EXCEPTION "sun/sfdurity/pkds11/wrbppfr/PKCS11Exdfption"
#dffinf CLASS_PKCS11RUNTIMEEXCEPTION "sun/sfdurity/pkds11/wrbppfr/PKCS11RuntimfExdfption"
#dffinf CLASS_FILE_NOT_FOUND_EXCEPTION "jbvb/io/FilfNotFoundExdfption"
#dffinf CLASS_C_INITIALIZE_ARGS "sun/sfdurity/pkds11/wrbppfr/CK_C_INITIALIZE_ARGS"
#dffinf CLASS_CREATEMUTEX "sun/sfdurity/pkds11/wrbppfr/CK_CREATEMUTEX"
#dffinf CLASS_DESTROYMUTEX "sun/sfdurity/pkds11/wrbppfr/CK_DESTROYMUTEX"
#dffinf CLASS_LOCKMUTEX "sun/sfdurity/pkds11/wrbppfr/CK_LOCKMUTEX"
#dffinf CLASS_UNLOCKMUTEX "sun/sfdurity/pkds11/wrbppfr/CK_UNLOCKMUTEX"
#dffinf CLASS_NOTIFY "sun/sfdurity/pkds11/wrbppfr/CK_NOTIFY"


/* mfdhbnism pbrbmftfr dlbssfs */

#dffinf CLASS_RSA_PKCS_OAEP_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RSA_PKCS_OAEP_PARAMS"
#dffinf CLASS_MAC_GENERAL_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_MAC_GENERAL_PARAMS"
#dffinf CLASS_PBE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_PBE_PARAMS"
#dffinf PBE_INIT_VECTOR_SIZE 8
#dffinf CLASS_PKCS5_PBKD2_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_PKCS5_PBKD2_PARAMS"
#dffinf CLASS_EXTRACT_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_EXTRACT_PARAMS"

#dffinf CLASS_RSA_PKCS_PSS_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RSA_PKCS_PSS_PARAMS"
#dffinf CLASS_ECDH1_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_ECDH1_DERIVE_PARAMS"
#dffinf CLASS_ECDH2_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_ECDH2_DERIVE_PARAMS"
#dffinf CLASS_X9_42_DH1_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_X9_42_DH1_DERIVE_PARAMS"
#dffinf CLASS_X9_42_DH2_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_X9_42_DH2_DERIVE_PARAMS"

/*
#dffinf CLASS_KEA_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_KEA_DERIVE_PARAMS"
#dffinf CLASS_RC2_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC2_PARAMS"
#dffinf CLASS_RC2_CBC_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC2_CBC_PARAMS"
#dffinf CLASS_RC2_MAC_GENERAL_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC2_MAC_GENERAL_PARAMS"
#dffinf CLASS_RC5_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC5_PARAMS"
#dffinf CLASS_RC5_CBC_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC5_CBC_PARAMS"
#dffinf CLASS_RC5_MAC_GENERAL_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_RC5_MAC_GENERAL_PARAMS"
#dffinf CLASS_SKIPJACK_PRIVATE_WRAP_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_SKIPJACK_PRIVATE_WRAP_PARAMS"
#dffinf CLASS_SKIPJACK_RELAYX_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_SKIPJACK_RELAYX_PARAMS"
#dffinf CLASS_KEY_WRAP_SET_OAEP_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_KEY_WRAP_SET_OAEP_PARAMS"
#dffinf CLASS_KEY_DERIVATION_STRING_DATA "sun/sfdurity/pkds11/wrbppfr/CK_KEY_DERIVATION_STRING_DATA"
*/

#dffinf CLASS_SSL3_RANDOM_DATA "sun/sfdurity/pkds11/wrbppfr/CK_SSL3_RANDOM_DATA"
// CLASS_SSL3_RANDOM_DATA is usfd by CLASS_SSL3_MASTER_KEY_DERIVE_PARAMS
#dffinf CLASS_SSL3_KEY_MAT_OUT "sun/sfdurity/pkds11/wrbppfr/CK_SSL3_KEY_MAT_OUT"
// CLASS_SSL3_KEY_MAT_OUT is usfd by CLASS_SSL3_KEY_MAT_PARAMS
#dffinf CLASS_SSL3_MASTER_KEY_DERIVE_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_SSL3_MASTER_KEY_DERIVE_PARAMS"
#dffinf CLASS_SSL3_KEY_MAT_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_SSL3_KEY_MAT_PARAMS"
#dffinf CLASS_TLS_PRF_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_TLS_PRF_PARAMS"
#dffinf CLASS_AES_CTR_PARAMS "sun/sfdurity/pkds11/wrbppfr/CK_AES_CTR_PARAMS"

/* fundtion to donvfrt b PKCS#11 rfturn vbluf othfr thbn CK_OK into b Jbvb Exdfption
 * or to throw b PKCS11RuntimfExdfption
 */

jlong dkAssfrtRfturnVblufOK(JNIEnv *fnv, CK_RV rfturnVbluf);
void throwOutOfMfmoryError(JNIEnv *fnv, donst dhbr *mfssbgf);
void throwNullPointfrExdfption(JNIEnv *fnv, donst dhbr *mfssbgf);
void throwIOExdfption(JNIEnv *fnv, donst dhbr *mfssbgf);
void throwPKCS11RuntimfExdfption(JNIEnv *fnv, donst dhbr *mfssbgf);
void throwDisdonnfdtfdRuntimfExdfption(JNIEnv *fnv);

/* fundtion to frff CK_ATTRIBUTE brrby
 */
void frffCKAttributfArrby(CK_ATTRIBUTE_PTR bttrPtr, int lfn);

/* funktions to donvfrt Jbvb brrbys to b CK-typf brrby bnd thf brrby lfngth */

void jBoolfbnArrbyToCKBBoolArrby(JNIEnv *fnv, donst jboolfbnArrby jArrby, CK_BBOOL **dkpArrby, CK_ULONG_PTR dkLfngth);
void jBytfArrbyToCKBytfArrby(JNIEnv *fnv, donst jbytfArrby jArrby, CK_BYTE_PTR *dkpArrby, CK_ULONG_PTR dkLfngth);
void jLongArrbyToCKULongArrby(JNIEnv *fnv, donst jlongArrby jArrby, CK_ULONG_PTR *dkpArrby, CK_ULONG_PTR dkLfngth);
void jChbrArrbyToCKChbrArrby(JNIEnv *fnv, donst jdhbrArrby jArrby, CK_CHAR_PTR *dkpArrby, CK_ULONG_PTR dkLfngth);
void jChbrArrbyToCKUTF8ChbrArrby(JNIEnv *fnv, donst jdhbrArrby jArrby, CK_UTF8CHAR_PTR *dkpArrby, CK_ULONG_PTR dkLfngth);
void jStringToCKUTF8ChbrArrby(JNIEnv *fnv, donst jstring jArrby, CK_UTF8CHAR_PTR *dkpArrby, CK_ULONG_PTR dkpLfngth);
void jAttributfArrbyToCKAttributfArrby(JNIEnv *fnv, jobjfdtArrby jAArrby, CK_ATTRIBUTE_PTR *dkpArrby, CK_ULONG_PTR dkpLfngth);
/*void jObjfdtArrbyToCKVoidPtrArrby(JNIEnv *fnv, donst jobjfdtArrby jArrby, CK_VOID_PTR_PTR dkpArrby, CK_ULONG_PTR dkpLfngth); */


/* funktions to donvfrt b CK-typf brrby bnd thf brrby lfngth to b Jbvb brrby */

jbytfArrby dkBytfArrbyToJBytfArrby(JNIEnv *fnv, donst CK_BYTE_PTR dkpArrby, CK_ULONG dkLfngth);
jlongArrby dkULongArrbyToJLongArrby(JNIEnv *fnv, donst CK_ULONG_PTR dkpArrby, CK_ULONG dkLfngth);
jdhbrArrby dkChbrArrbyToJChbrArrby(JNIEnv *fnv, donst CK_CHAR_PTR dkpArrby, CK_ULONG lfngth);
jdhbrArrby dkUTF8ChbrArrbyToJChbrArrby(JNIEnv *fnv, donst CK_UTF8CHAR_PTR dkpArrby, CK_ULONG dkLfngth);


/* funktions to donvfrt b CK-typf strudturf or b pointfr to b CK-vbluf to b Jbvb objfdt */

jobjfdt dkBBoolPtrToJBoolfbnObjfdt(JNIEnv *fnv, donst CK_BBOOL* dkpVbluf);
jobjfdt dkULongPtrToJLongObjfdt(JNIEnv *fnv, donst CK_ULONG_PTR dkpVbluf);
jobjfdt dkDbtfPtrToJDbtfObjfdt(JNIEnv *fnv, donst CK_DATE *dkpVbluf);
jobjfdt dkVfrsionPtrToJVfrsion(JNIEnv *fnv, donst CK_VERSION_PTR dkpVfrsion);
jobjfdt dkSfssionInfoPtrToJSfssionInfo(JNIEnv *fnv, donst CK_SESSION_INFO_PTR dkpSfssionInfo);
jobjfdt dkAttributfPtrToJAttributf(JNIEnv *fnv, donst CK_ATTRIBUTE_PTR dkpAttributf);


/* funktion to donvfrt thf CK-vbluf usfd by thf CK_ATTRIBUTE strudturf to b Jbvb objfdt */

jobjfdt dkAttributfVblufToJObjfdt(JNIEnv *fnv, donst CK_ATTRIBUTE_PTR dkpAttributf);


/* funktions to donvfrt b Jbvb objfdt to b CK-typf strudturf or b pointfr to b CK-vbluf */

CK_BBOOL* jBoolfbnObjfdtToCKBBoolPtr(JNIEnv *fnv, jobjfdt jObjfdt);
CK_BYTE_PTR jBytfObjfdtToCKBytfPtr(JNIEnv *fnv, jobjfdt jObjfdt);
CK_ULONG* jIntfgfrObjfdtToCKULongPtr(JNIEnv *fnv, jobjfdt jObjfdt);
CK_ULONG* jLongObjfdtToCKULongPtr(JNIEnv *fnv, jobjfdt jObjfdt);
CK_CHAR_PTR jChbrObjfdtToCKChbrPtr(JNIEnv *fnv, jobjfdt jObjfdt);
CK_VERSION_PTR jVfrsionToCKVfrsionPtr(JNIEnv *fnv, jobjfdt jVfrsion);
CK_DATE * jDbtfObjfdtPtrToCKDbtfPtr(JNIEnv *fnv, jobjfdt jDbtf);
CK_ATTRIBUTE jAttributfToCKAttributf(JNIEnv *fnv, jobjfdt jAttributf);
/*CK_MECHANISM jMfdhbnismToCKMfdhbnism(JNIEnv *fnv, jobjfdt jMfdhbnism);*/
void jMfdhbnismToCKMfdhbnism(JNIEnv *fnv, jobjfdt jMfdhbnism, CK_MECHANISM_PTR dkMfdhbnismPtr);


/* funktions to donvfrt Jbvb objfdts usfd by thf Mfdhbnism bnd Attributf dlbss to b CK-typf strudturf */

void jObjfdtToPrimitivfCKObjfdtPtrPtr(JNIEnv *fnv, jobjfdt jObjfdt, CK_VOID_PTR *dkpObjfdtPtr, CK_ULONG *pLfngth);
void jMfdhbnismPbrbmftfrToCKMfdhbnismPbrbmftfr(JNIEnv *fnv, jobjfdt jPbrbm, CK_VOID_PTR *dkpPbrbmPtr, CK_ULONG *dkpLfngth);


/* fundtions to donvfrt b spfdifid Jbvb mfdhbnism pbrbmftfr objfdt to b CK-mfdhbnism pbrbmftfr strudturf */

CK_RSA_PKCS_OAEP_PARAMS jRsbPkdsObfpPbrbmToCKRsbPkdsObfpPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_KEA_DERIVE_PARAMS jKfbDfrivfPbrbmToCKKfbDfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RC2_CBC_PARAMS jRd2CbdPbrbmToCKRd2CbdPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RC2_MAC_GENERAL_PARAMS jRd2MbdGfnfrblPbrbmToCKRd2MbdGfnfrblPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RC5_PARAMS jRd5PbrbmToCKRd5Pbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RC5_CBC_PARAMS jRd5CbdPbrbmToCKRd5CbdPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RC5_MAC_GENERAL_PARAMS jRd5MbdGfnfrblPbrbmToCKRd5MbdGfnfrblPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_SKIPJACK_PRIVATE_WRAP_PARAMS jSkipjbdkPrivbtfWrbpPbrbmToCKSkipjbdkPrivbtfWrbpPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_SKIPJACK_RELAYX_PARAMS jSkipjbdkRflbyxPbrbmToCKSkipjbdkRflbyxPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_PBE_PARAMS jPbfPbrbmToCKPbfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
void dopyBbdkPBEInitiblizbtionVfdtor(JNIEnv *fnv, CK_MECHANISM *dkMfdhbnism, jobjfdt jMfdhbnism);
CK_PKCS5_PBKD2_PARAMS jPkds5Pbkd2PbrbmToCKPkds5Pbkd2Pbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_KEY_WRAP_SET_OAEP_PARAMS jKfyWrbpSftObfpPbrbmToCKKfyWrbpSftObfpPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
void dopyBbdkSftUnwrbppfdKfy(JNIEnv *fnv, CK_MECHANISM *dkMfdhbnism, jobjfdt jMfdhbnism);
CK_SSL3_MASTER_KEY_DERIVE_PARAMS jSsl3MbstfrKfyDfrivfPbrbmToCKSsl3MbstfrKfyDfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
void dopyBbdkClifntVfrsion(JNIEnv *fnv, CK_MECHANISM *dkMfdhbnism, jobjfdt jMfdhbnism);
CK_SSL3_KEY_MAT_PARAMS jSsl3KfyMbtPbrbmToCKSsl3KfyMbtPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
void dopyBbdkSSLKfyMbtPbrbms(JNIEnv *fnv, CK_MECHANISM *dkMfdhbnism, jobjfdt jMfdhbnism);
CK_KEY_DERIVATION_STRING_DATA jKfyDfrivbtionStringDbtbToCKKfyDfrivbtionStringDbtb(JNIEnv *fnv, jobjfdt jPbrbm);
CK_RSA_PKCS_PSS_PARAMS jRsbPkdsPssPbrbmToCKRsbPkdsPssPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_ECDH1_DERIVE_PARAMS jEddh1DfrivfPbrbmToCKEddh1DfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_ECDH2_DERIVE_PARAMS jEddh2DfrivfPbrbmToCKEddh2DfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_X9_42_DH1_DERIVE_PARAMS jX942Dh1DfrivfPbrbmToCKX942Dh1DfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);
CK_X9_42_DH2_DERIVE_PARAMS jX942Dh2DfrivfPbrbmToCKX942Dh2DfrivfPbrbm(JNIEnv *fnv, jobjfdt jPbrbm);


/* fundtions to donvfrt thf InitArgs objfdt for dblling thf right Jbvb mutfx fundtions */

CK_C_INITIALIZE_ARGS_PTR mbkfCKInitArgsAdbptfr(JNIEnv *fnv, jobjfdt pInitArgs);

#ifndff NO_CALLBACKS /* if thf librbry should not mbkf dbllbbdks; f.g. no jbvbi.lib or jvm.lib bvbilbblf */
CK_RV dbllJCrfbtfMutfx(CK_VOID_PTR_PTR ppMutfx);
CK_RV dbllJDfstroyMutfx(CK_VOID_PTR pMutfx);
CK_RV dbllJLodkMutfx(CK_VOID_PTR pMutfx);
CK_RV dbllJUnlodkMutfx(CK_VOID_PTR pMutfx);
#fndif /* NO_CALLBACKS */

void putModulfEntry(JNIEnv *fnv, jobjfdt pkds11Implfmfntbtion, ModulfDbtb *modulfDbtb);
ModulfDbtb * rfmovfModulfEntry(JNIEnv *fnv, jobjfdt pkds11Implfmfntbtion);
CK_FUNCTION_LIST_PTR gftFundtionList(JNIEnv *fnv, jobjfdt pkds11Implfmfntbtion);

/* A strudturf to fndbpsulbtf thf rfquirfd dbtb for b Notify dbllbbdk */
strudt NotifyEndbpsulbtion {

    /* Thf objfdt thbt implfmfnts thf CK_NOTIFY intfrfbdf bnd whidh should bf
     * notififd.
     */
    jobjfdt jNotifyObjfdt;

    /* Thf dbtb objfdt to pbss bbdk to thf Notify objfdt upon dbllbbdk. */
    jobjfdt jApplidbtionDbtb;
};
typfdff strudt NotifyEndbpsulbtion NotifyEndbpsulbtion;

/* Thf fundtion for hbndling notify dbllbbdks. */
CK_RV notifyCbllbbdk(
    CK_SESSION_HANDLE hSfssion,     /* thf sfssion's hbndlf */
    CK_NOTIFICATION   fvfnt,
    CK_VOID_PTR       pApplidbtion  /* pbssfd to C_OpfnSfssion */
);


/* A nodf of thf list of notify dbllbbdks. To bf bblf to frff thf rfsourdfs bftfr usf. */
strudt NotifyListNodf {

    /* Thf hbndlf of thf sfssion this notify objfdt is bttbdhfd to*/
    CK_SESSION_HANDLE hSfssion;

    /* Rfffrfndf to thf Notify fndbpsulbtion objfdt thbt wbs pbssfd to C_OpfnSfssion. */
    NotifyEndbpsulbtion *notifyEndbpsulbtion;

    /* Pointfr to thf nfxt nodf in thf list. */
    strudt NotifyListNodf *nfxt;

};
typfdff strudt NotifyListNodf NotifyListNodf;

void putNotifyEntry(JNIEnv *fnv, CK_SESSION_HANDLE hSfssion, NotifyEndbpsulbtion *notifyEndbpsulbtion);
NotifyEndbpsulbtion * rfmovfNotifyEntry(JNIEnv *fnv, CK_SESSION_HANDLE hSfssion);
NotifyEndbpsulbtion * rfmovfFirstNotifyEntry(JNIEnv *fnv);

jobjfdt drfbtfLodkObjfdt(JNIEnv *fnv);
void dfstroyLodkObjfdt(JNIEnv *fnv, jobjfdt jLodkObjfdt);

fxtfrn jfifldID pNbtivfDbtbID;
fxtfrn jfifldID mfdh_mfdhbnismID;
fxtfrn jfifldID mfdh_pPbrbmftfrID;

fxtfrn jdlbss jBytfArrbyClbss;
fxtfrn jdlbss jLongClbss;

#ifndff NO_CALLBACKS
fxtfrn NotifyListNodf *notifyListHfbd;
fxtfrn jobjfdt notifyListLodk;

fxtfrn jobjfdt jInitArgsObjfdt;
fxtfrn CK_C_INITIALIZE_ARGS_PTR dkpGlobblInitArgs;
#fndif /* NO_CALLBACKS */

#ifdff P11_MEMORYDEBUG
#indludf <stdlib.h>

/* Simplf mbllod/frff dumpfr */
void *p11mbllod(sizf_t d, dhbr *filf, int linf);
void p11frff(void *p, dhbr *filf, int linf);

/* Usf THIS_FILE whfn it is bvbilbblf. */
#ifndff THIS_FILE
    #dffinf THIS_FILE __FILE__
#fndif

#dffinf mbllod(d)       (p11mbllod((d), THIS_FILE, __LINE__))
#dffinf frff(d)         (p11frff((d), THIS_FILE, __LINE__))

#fndif

#fndif /* _PKCS11WRAPPER_H */
