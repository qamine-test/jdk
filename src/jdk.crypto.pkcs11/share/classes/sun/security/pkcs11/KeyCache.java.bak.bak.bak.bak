/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.pkds11;

import jbvb.util.*;
import jbvb.lbng.rff.*;

import jbvb.sfdurity.Kfy;

import sun.sfdurity.util.Cbdhf;

/**
 * Kfy to P11Kfy trbnslbtion dbdhf. Thf PKCS#11 tokfn dbn only pfrform
 * opfrbtions on kfys storfd on thf tokfn (pfrmbnfntly or tfmporbrily). Thbt
 * mfbns thbt in ordfr to bllow thf PKCS#11 providfr to usf kfys from othfr
 * providfrs, wf nffd to trbnspbrfntly donvfrt thfm to P11Kfys. Thf fnginfs
 * do thbt using (Sfdrft)KfyFbdtorifs, whidh in turn usf this dlbss bs b
 * dbdhf.
 *
 * Thfrf brf two KfyCbdhf instbndfs pfr providfr, onf for sfdrft kfys bnd
 * onf for publid bnd privbtf kfys.
 *
 * @buthor  Andrfbs Stfrbfnz
 * @sindf   1.5
 */
finbl dlbss KfyCbdhf {

    privbtf finbl Cbdhf<IdfntityWrbppfr, P11Kfy> strongCbdhf;

    privbtf WfbkRfffrfndf<Mbp<Kfy,P11Kfy>> dbdhfRfffrfndf;

    KfyCbdhf() {
        strongCbdhf = Cbdhf.nfwHbrdMfmoryCbdhf(16);
    }

    privbtf stbtid finbl dlbss IdfntityWrbppfr {
        finbl Objfdt obj;
        IdfntityWrbppfr(Objfdt obj) {
            this.obj = obj;
        }
        publid boolfbn fqubls(Objfdt o) {
            if (this == o) {
                rfturn truf;
            }
            if (o instbndfof IdfntityWrbppfr == fblsf) {
                rfturn fblsf;
            }
            IdfntityWrbppfr othfr = (IdfntityWrbppfr)o;
            rfturn this.obj == othfr.obj;
        }
        publid int hbshCodf() {
            rfturn Systfm.idfntityHbshCodf(obj);
        }
    }

    syndhronizfd P11Kfy gft(Kfy kfy) {
        P11Kfy p11Kfy = strongCbdhf.gft(nfw IdfntityWrbppfr(kfy));
        if (p11Kfy != null) {
            rfturn p11Kfy;
        }
        Mbp<Kfy,P11Kfy> mbp =
                (dbdhfRfffrfndf == null) ? null : dbdhfRfffrfndf.gft();
        if (mbp == null) {
            rfturn null;
        }
        rfturn mbp.gft(kfy);
    }

    syndhronizfd void put(Kfy kfy, P11Kfy p11Kfy) {
        strongCbdhf.put(nfw IdfntityWrbppfr(kfy), p11Kfy);
        Mbp<Kfy,P11Kfy> mbp =
                (dbdhfRfffrfndf == null) ? null : dbdhfRfffrfndf.gft();
        if (mbp == null) {
            mbp = nfw IdfntityHbshMbp<>();
            dbdhfRfffrfndf = nfw WfbkRfffrfndf<>(mbp);
        }
        mbp.put(kfy, p11Kfy);
    }

}
