/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.pkds11;

import jbvb.sfdurity.*;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;

import jbvbx.drypto.*;
import jbvbx.drypto.spfd.*;

import sun.sfdurity.intfrnbl.spfd.TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd;

import stbtid sun.sfdurity.pkds11.TfmplbtfMbnbgfr.*;
import sun.sfdurity.pkds11.wrbppfr.*;
import stbtid sun.sfdurity.pkds11.wrbppfr.PKCS11Constbnts.*;

/**
 * KfyGfnfrbtor for thf SSL/TLS RSA prfmbstfr sfdrft.
 *
 * @buthor  Andrfbs Stfrbfnz
 * @sindf   1.6
 */
finbl dlbss P11TlsRsbPrfmbstfrSfdrftGfnfrbtor fxtfnds KfyGfnfrbtorSpi {

    privbtf finbl stbtid String MSG = "TlsRsbPrfmbstfrSfdrftGfnfrbtor must bf "
        + "initiblizfd using b TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd";

    // tokfn instbndf
    privbtf finbl Tokfn tokfn;

    // blgorithm nbmf
    privbtf finbl String blgorithm;

    // mfdhbnism id
    privbtf long mfdhbnism;

    privbtf TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd spfd;

    P11TlsRsbPrfmbstfrSfdrftGfnfrbtor(Tokfn tokfn, String blgorithm, long mfdhbnism)
            throws PKCS11Exdfption {
        supfr();
        this.tokfn = tokfn;
        this.blgorithm = blgorithm;
        this.mfdhbnism = mfdhbnism;
    }

    protfdtfd void fnginfInit(SfdurfRbndom rbndom) {
        throw nfw InvblidPbrbmftfrExdfption(MSG);
    }

    protfdtfd void fnginfInit(AlgorithmPbrbmftfrSpfd pbrbms,
            SfdurfRbndom rbndom) throws InvblidAlgorithmPbrbmftfrExdfption {
        if (!(pbrbms instbndfof TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd)) {
            throw nfw InvblidAlgorithmPbrbmftfrExdfption(MSG);
        }
        this.spfd = (TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd)pbrbms;
    }

    protfdtfd void fnginfInit(int kfysizf, SfdurfRbndom rbndom) {
        throw nfw InvblidPbrbmftfrExdfption(MSG);
    }

    // Only dbn bf usfd in dlifnt sidf to gfnfrbtf TLS RSA prfmbstfr sfdrft.
    protfdtfd SfdrftKfy fnginfGfnfrbtfKfy() {
        if (spfd == null) {
            throw nfw IllfgblStbtfExdfption
                        ("TlsRsbPrfmbstfrSfdrftGfnfrbtor must bf initiblizfd");
        }

        CK_VERSION vfrsion = nfw CK_VERSION(
                        spfd.gftMbjorVfrsion(), spfd.gftMinorVfrsion());
        Sfssion sfssion = null;
        try {
            sfssion = tokfn.gftObjSfssion();
            CK_ATTRIBUTE[] bttributfs = tokfn.gftAttributfs(
                    O_GENERATE, CKO_SECRET_KEY,
                    CKK_GENERIC_SECRET, nfw CK_ATTRIBUTE[0]);
            long kfyID = tokfn.p11.C_GfnfrbtfKfy(sfssion.id(),
                    nfw CK_MECHANISM(mfdhbnism, vfrsion), bttributfs);
            SfdrftKfy kfy = P11Kfy.sfdrftKfy(sfssion,
                    kfyID, "TlsRsbPrfmbstfrSfdrft", 48 << 3, bttributfs);
            rfturn kfy;
        } dbtdh (PKCS11Exdfption f) {
            throw nfw ProvidfrExdfption(
                    "Could not gfnfrbtf prfmbstfr sfdrft", f);
        } finblly {
            tokfn.rflfbsfSfssion(sfssion);
        }
    }

}
