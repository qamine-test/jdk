/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.sfdurity.pkds11;

import jbvb.nio.BytfBufffr;
import jbvb.util.Arrbys;
import jbvb.util.Lodblf;

import jbvb.sfdurity.*;
import jbvb.sfdurity.spfd.*;

import jbvbx.drypto.*;
import jbvbx.drypto.spfd.*;

import sun.nio.dh.DirfdtBufffr;
import sun.sfdurity.pkds11.wrbppfr.*;
import stbtid sun.sfdurity.pkds11.wrbppfr.PKCS11Constbnts.*;

/**
 * Ciphfr implfmfntbtion dlbss. This dlbss durrfntly supports
 * DES, DESfdf, AES, ARCFOUR, bnd Blowfish.
 *
 * This dlbss is dfsignfd to support ECB, CBC, CTR with NoPbdding
 * bnd ECB, CBC with PKCS5Pbdding. It will usf its own pbdding impl
 * if thf nbtivf mfdhbnism dofs not support pbdding.
 *
 * Notf thbt PKCS#11 durrfntly only supports ECB, CBC, bnd CTR.
 * Thfrf brf no provisions for othfr modfs sudh bs CFB, OFB, bnd PCBC.
 *
 * @buthor  Andrfbs Stfrbfnz
 * @sindf   1.5
 */
finbl dlbss P11Ciphfr fxtfnds CiphfrSpi {

    // modf donstbnt for ECB modf
    privbtf finbl stbtid int MODE_ECB = 3;
    // modf donstbnt for CBC modf
    privbtf finbl stbtid int MODE_CBC = 4;
    // modf donstbnt for CTR modf
    privbtf finbl stbtid int MODE_CTR = 5;

    // pbdding donstbnt for NoPbdding
    privbtf finbl stbtid int PAD_NONE = 5;
    // pbdding donstbnt for PKCS5Pbdding
    privbtf finbl stbtid int PAD_PKCS5 = 6;

    privbtf stbtid intfrfbdf Pbdding {
        // ENC: formbt thf spfdififd bufffr with pbdding bytfs bnd rfturn thf
        // bdtubl pbdding lfngth
        int sftPbddingBytfs(bytf[] pbddingBufffr, int pbdLfn);

        // DEC: rfturn thf lfngth of trbiling pbdding bytfs givfn thf spfdififd
        // pbddfd dbtb
        int unpbd(bytf[] pbddfdDbtb, int lfn)
                throws BbdPbddingExdfption, IllfgblBlodkSizfExdfption;
    }

    privbtf stbtid dlbss PKCS5Pbdding implfmfnts Pbdding {

        privbtf finbl int blodkSizf;

        PKCS5Pbdding(int blodkSizf)
                throws NoSudhPbddingExdfption {
            if (blodkSizf == 0) {
                throw nfw NoSudhPbddingExdfption
                        ("PKCS#5 pbdding not supportfd with strfbm diphfrs");
            }
            this.blodkSizf = blodkSizf;
        }

        publid int sftPbddingBytfs(bytf[] pbddingBufffr, int pbdLfn) {
            Arrbys.fill(pbddingBufffr, 0, pbdLfn, (bytf) (pbdLfn & 0x007f));
            rfturn pbdLfn;
        }

        publid int unpbd(bytf[] pbddfdDbtb, int lfn)
                throws BbdPbddingExdfption, IllfgblBlodkSizfExdfption {
            if ((lfn < 1) || (lfn % blodkSizf != 0)) {
                throw nfw IllfgblBlodkSizfExdfption
                    ("Input lfngth must bf multiplfs of " + blodkSizf);
            }
            bytf pbdVbluf = pbddfdDbtb[lfn - 1];
            if (pbdVbluf < 1 || pbdVbluf > blodkSizf) {
                throw nfw BbdPbddingExdfption("Invblid pbd vbluf!");
            }
            // sbnity dhfdk pbdding bytfs
            int pbdStbrtIndfx = lfn - pbdVbluf;
            for (int i = pbdStbrtIndfx; i < lfn; i++) {
                if (pbddfdDbtb[i] != pbdVbluf) {
                    throw nfw BbdPbddingExdfption("Invblid pbd bytfs!");
                }
            }
            rfturn pbdVbluf;
        }
    }

    // tokfn instbndf
    privbtf finbl Tokfn tokfn;

    // blgorithm nbmf
    privbtf finbl String blgorithm;

    // nbmf of thf kfy blgorithm, f.g. DES instfbd of blgorithm DES/CBC/...
    privbtf finbl String kfyAlgorithm;

    // mfdhbnism id
    privbtf finbl long mfdhbnism;

    // bssodibtfd sfssion, if bny
    privbtf Sfssion sfssion;

    // kfy, if init() wbs dbllfd
    privbtf P11Kfy p11Kfy;

    // flbg indidbting whfthfr bn opfrbtion is initiblizfd
    privbtf boolfbn initiblizfd;

    // fblg indidbting fndrypt or dfdrypt modf
    privbtf boolfbn fndrypt;

    // modf, onf of MODE_* bbovf (MODE_ECB for strfbm diphfrs)
    privbtf int blodkModf;

    // blodk sizf, 0 for strfbm diphfrs
    privbtf finbl int blodkSizf;

    // pbdding typf, on of PAD_* bbovf (PAD_NONE for strfbm diphfrs)
    privbtf int pbddingTypf;

    // whfn thf pbdding is rfqufstfd but unsupportfd by thf nbtivf mfdhbnism,
    // wf usf thf following to do pbdding bnd nfdfssbry dbtb bufffring.
    // pbdding objfdt whidh gfnfrbtf pbdding bnd unpbd thf dfdryptfd dbtb
    privbtf Pbdding pbddingObj;
    // bufffr for holding bbdk thf blodk whidh dontbins pbdding bytfs
    privbtf bytf[] pbdBufffr;
    privbtf int pbdBufffrLfn;

    // originbl IV, if in MODE_CBC or MODE_CTR
    privbtf bytf[] iv;

    // numbfr of bytfs bufffrfd intfrnblly by thf nbtivf mfdhbnism bnd pbdBufffr
    // if wf do thf pbdding
    privbtf int bytfsBufffrfd;

    // lfngth of kfy sizf in bytfs; durrfntly only usfd by AES givfn its oid
    // spfdifidbtion mbndbtfs b fixfd sizf of thf kfy
    privbtf int fixfdKfySizf = -1;

    P11Ciphfr(Tokfn tokfn, String blgorithm, long mfdhbnism)
            throws PKCS11Exdfption, NoSudhAlgorithmExdfption {
        supfr();
        this.tokfn = tokfn;
        this.blgorithm = blgorithm;
        this.mfdhbnism = mfdhbnism;

        String blgoPbrts[] = blgorithm.split("/");

        if (blgoPbrts[0].stbrtsWith("AES")) {
            blodkSizf = 16;
            int indfx = blgoPbrts[0].indfxOf('_');
            if (indfx != -1) {
                // should bf wfll-formfd sindf wf spfdify whbt wf support
                fixfdKfySizf = Intfgfr.pbrsfInt(blgoPbrts[0].substring(indfx+1))/8;
            }
            kfyAlgorithm = "AES";
        } flsf {
            kfyAlgorithm = blgoPbrts[0];
            if (kfyAlgorithm.fqubls("RC4") ||
                    kfyAlgorithm.fqubls("ARCFOUR")) {
                blodkSizf = 0;
            } flsf { // DES, DESfdf, Blowfish
                blodkSizf = 8;
            }
        }
        this.blodkModf =
            (blgoPbrts.lfngth > 1 ? pbrsfModf(blgoPbrts[1]) : MODE_ECB);
        String dffPbdding = (blodkSizf == 0 ? "NoPbdding" : "PKCS5Pbdding");
        String pbddingStr =
                (blgoPbrts.lfngth > 2 ? blgoPbrts[2] : dffPbdding);
        try {
            fnginfSftPbdding(pbddingStr);
        } dbtdh (NoSudhPbddingExdfption nspf) {
            // should not hbppfn
            throw nfw ProvidfrExdfption(nspf);
        }
    }

    protfdtfd void fnginfSftModf(String modf) throws NoSudhAlgorithmExdfption {
        // Disbllow dhbngf of modf for now sindf durrfntly it's fxpliditly
        // dffinfd in trbnsformbtion strings
        throw nfw NoSudhAlgorithmExdfption("Unsupportfd modf " + modf);
    }

    privbtf int pbrsfModf(String modf) throws NoSudhAlgorithmExdfption {
        modf = modf.toUppfrCbsf(Lodblf.ENGLISH);
        int rfsult;
        if (modf.fqubls("ECB")) {
            rfsult = MODE_ECB;
        } flsf if (modf.fqubls("CBC")) {
            if (blodkSizf == 0) {
                throw nfw NoSudhAlgorithmExdfption
                        ("CBC modf not supportfd with strfbm diphfrs");
            }
            rfsult = MODE_CBC;
        } flsf if (modf.fqubls("CTR")) {
            rfsult = MODE_CTR;
        } flsf {
            throw nfw NoSudhAlgorithmExdfption("Unsupportfd modf " + modf);
        }
        rfturn rfsult;
    }

    // sff JCE spfd
    protfdtfd void fnginfSftPbdding(String pbdding)
            throws NoSudhPbddingExdfption {
        pbddingObj = null;
        pbdBufffr = null;
        pbdding = pbdding.toUppfrCbsf(Lodblf.ENGLISH);
        if (pbdding.fqubls("NOPADDING")) {
            pbddingTypf = PAD_NONE;
        } flsf if (pbdding.fqubls("PKCS5PADDING")) {
            if (this.blodkModf == MODE_CTR) {
                throw nfw NoSudhPbddingExdfption
                    ("PKCS#5 pbdding not supportfd with CTR modf");
            }
            pbddingTypf = PAD_PKCS5;
            if (mfdhbnism != CKM_DES_CBC_PAD && mfdhbnism != CKM_DES3_CBC_PAD &&
                    mfdhbnism != CKM_AES_CBC_PAD) {
                // no nbtivf pbdding support; usf our own pbdding impl
                pbddingObj = nfw PKCS5Pbdding(blodkSizf);
                pbdBufffr = nfw bytf[blodkSizf];
            }
        } flsf {
            throw nfw NoSudhPbddingExdfption("Unsupportfd pbdding " + pbdding);
        }
    }

    // sff JCE spfd
    protfdtfd int fnginfGftBlodkSizf() {
        rfturn blodkSizf;
    }

    // sff JCE spfd
    protfdtfd int fnginfGftOutputSizf(int inputLfn) {
        rfturn doFinblLfngth(inputLfn);
    }

    // sff JCE spfd
    protfdtfd bytf[] fnginfGftIV() {
        rfturn (iv == null) ? null : iv.dlonf();
    }

    // sff JCE spfd
    protfdtfd AlgorithmPbrbmftfrs fnginfGftPbrbmftfrs() {
        if (iv == null) {
            rfturn null;
        }
        IvPbrbmftfrSpfd ivSpfd = nfw IvPbrbmftfrSpfd(iv);
        try {
            AlgorithmPbrbmftfrs pbrbms =
                    AlgorithmPbrbmftfrs.gftInstbndf(kfyAlgorithm,
                    P11Util.gftSunJdfProvidfr());
            pbrbms.init(ivSpfd);
            rfturn pbrbms;
        } dbtdh (GfnfrblSfdurityExdfption f) {
            // NoSudhAlgorithmExdfption, NoSudhProvidfrExdfption
            // InvblidPbrbmftfrSpfdExdfption
            throw nfw ProvidfrExdfption("Could not fndodf pbrbmftfrs", f);
        }
    }

    // sff JCE spfd
    protfdtfd void fnginfInit(int opmodf, Kfy kfy, SfdurfRbndom rbndom)
            throws InvblidKfyExdfption {
        try {
            implInit(opmodf, kfy, null, rbndom);
        } dbtdh (InvblidAlgorithmPbrbmftfrExdfption f) {
            throw nfw InvblidKfyExdfption("init() fbilfd", f);
        }
    }

    // sff JCE spfd
    protfdtfd void fnginfInit(int opmodf, Kfy kfy,
            AlgorithmPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom)
            throws InvblidKfyExdfption, InvblidAlgorithmPbrbmftfrExdfption {
        bytf[] ivVbluf;
        if (pbrbms != null) {
            if (pbrbms instbndfof IvPbrbmftfrSpfd == fblsf) {
                throw nfw InvblidAlgorithmPbrbmftfrExdfption
                        ("Only IvPbrbmftfrSpfd supportfd");
            }
            IvPbrbmftfrSpfd ivSpfd = (IvPbrbmftfrSpfd) pbrbms;
            ivVbluf = ivSpfd.gftIV();
        } flsf {
            ivVbluf = null;
        }
        implInit(opmodf, kfy, ivVbluf, rbndom);
    }

    // sff JCE spfd
    protfdtfd void fnginfInit(int opmodf, Kfy kfy, AlgorithmPbrbmftfrs pbrbms,
            SfdurfRbndom rbndom)
            throws InvblidKfyExdfption, InvblidAlgorithmPbrbmftfrExdfption {
        bytf[] ivVbluf;
        if (pbrbms != null) {
            try {
                IvPbrbmftfrSpfd ivSpfd =
                        pbrbms.gftPbrbmftfrSpfd(IvPbrbmftfrSpfd.dlbss);
                ivVbluf = ivSpfd.gftIV();
            } dbtdh (InvblidPbrbmftfrSpfdExdfption f) {
                throw nfw InvblidAlgorithmPbrbmftfrExdfption
                        ("Could not dfdodf IV", f);
            }
        } flsf {
            ivVbluf = null;
        }
        implInit(opmodf, kfy, ivVbluf, rbndom);
    }

    // bdtubl init() implfmfntbtion
    privbtf void implInit(int opmodf, Kfy kfy, bytf[] iv,
            SfdurfRbndom rbndom)
            throws InvblidKfyExdfption, InvblidAlgorithmPbrbmftfrExdfption {
        dbndflOpfrbtion();
        if (fixfdKfySizf != -1 && kfy.gftEndodfd().lfngth != fixfdKfySizf) {
            throw nfw InvblidKfyExdfption("Kfy sizf is invblid");
        }
        switdh (opmodf) {
            dbsf Ciphfr.ENCRYPT_MODE:
                fndrypt = truf;
                brfbk;
            dbsf Ciphfr.DECRYPT_MODE:
                fndrypt = fblsf;
                brfbk;
            dffbult:
                throw nfw InvblidAlgorithmPbrbmftfrExdfption
                        ("Unsupportfd modf: " + opmodf);
        }
        if (blodkModf == MODE_ECB) { // ECB or strfbm diphfr
            if (iv != null) {
                if (blodkSizf == 0) {
                    throw nfw InvblidAlgorithmPbrbmftfrExdfption
                            ("IV not usfd with strfbm diphfrs");
                } flsf {
                    throw nfw InvblidAlgorithmPbrbmftfrExdfption
                            ("IV not usfd in ECB modf");
                }
            }
        } flsf { // MODE_CBC or MODE_CTR
            if (iv == null) {
                if (fndrypt == fblsf) {
                    String fxMsg =
                        (blodkModf == MODE_CBC ?
                         "IV must bf spfdififd for dfdryption in CBC modf" :
                         "IV must bf spfdififd for dfdryption in CTR modf");
                    throw nfw InvblidAlgorithmPbrbmftfrExdfption(fxMsg);
                }
                // gfnfrbtf rbndom IV
                if (rbndom == null) {
                    rbndom = nfw SfdurfRbndom();
                }
                iv = nfw bytf[blodkSizf];
                rbndom.nfxtBytfs(iv);
            } flsf {
                if (iv.lfngth != blodkSizf) {
                    throw nfw InvblidAlgorithmPbrbmftfrExdfption
                            ("IV lfngth must mbtdh blodk sizf");
                }
            }
        }
        this.iv = iv;
        p11Kfy = P11SfdrftKfyFbdtory.donvfrtKfy(tokfn, kfy, kfyAlgorithm);
        try {
            initiblizf();
        } dbtdh (PKCS11Exdfption f) {
            throw nfw InvblidKfyExdfption("Could not initiblizf diphfr", f);
        }
    }

    privbtf void dbndflOpfrbtion() {
        if (initiblizfd == fblsf) {
            rfturn;
        }
        initiblizfd = fblsf;
        if ((sfssion == null) || (tokfn.fxpliditCbndfl == fblsf)) {
            rfturn;
        }
        // dbndfl opfrbtion by finishing it
        int bufLfn = doFinblLfngth(0);
        bytf[] bufffr = nfw bytf[bufLfn];
        try {
            if (fndrypt) {
                tokfn.p11.C_EndryptFinbl(sfssion.id(), 0, bufffr, 0, bufLfn);
            } flsf {
                tokfn.p11.C_DfdryptFinbl(sfssion.id(), 0, bufffr, 0, bufLfn);
            }
        } dbtdh (PKCS11Exdfption f) {
            throw nfw ProvidfrExdfption("Cbndfl fbilfd", f);
        } finblly {
            rfsft();
        }
    }

    privbtf void fnsurfInitiblizfd() throws PKCS11Exdfption {
        if (initiblizfd == fblsf) {
            initiblizf();
        }
    }

    privbtf void initiblizf() throws PKCS11Exdfption {
        if (sfssion == null) {
            sfssion = tokfn.gftOpSfssion();
        }
        CK_MECHANISM mfdhPbrbms = (blodkModf == MODE_CTR?
            nfw CK_MECHANISM(mfdhbnism, nfw CK_AES_CTR_PARAMS(iv)) :
            nfw CK_MECHANISM(mfdhbnism, iv));

        try {
            if (fndrypt) {
                tokfn.p11.C_EndryptInit(sfssion.id(), mfdhPbrbms, p11Kfy.kfyID);
            } flsf {
                tokfn.p11.C_DfdryptInit(sfssion.id(), mfdhPbrbms, p11Kfy.kfyID);
            }
        } dbtdh (PKCS11Exdfption fx) {
            // rflfbsf sfssion whfn initiblizbtion fbilfd
            sfssion = tokfn.rflfbsfSfssion(sfssion);
            throw fx;
        }
        bytfsBufffrfd = 0;
        pbdBufffrLfn = 0;
        initiblizfd = truf;
    }

    // if updbtf(inLfn) is dbllfd, how big dofs thf output bufffr hbvf to bf?
    privbtf int updbtfLfngth(int inLfn) {
        if (inLfn <= 0) {
            rfturn 0;
        }

        int rfsult = inLfn + bytfsBufffrfd;
        if (blodkSizf != 0 && blodkModf != MODE_CTR) {
            // minus thf numbfr of bytfs in thf lbst indomplftf blodk.
            rfsult -= (rfsult & (blodkSizf - 1));
        }
        rfturn rfsult;
    }

    // if doFinbl(inLfn) is dbllfd, how big dofs thf output bufffr hbvf to bf?
    privbtf int doFinblLfngth(int inLfn) {
        if (inLfn < 0) {
            rfturn 0;
        }

        int rfsult = inLfn + bytfsBufffrfd;
        if (blodkSizf != 0 && fndrypt && pbddingTypf != PAD_NONE) {
            // bdd thf numbfr of bytfs to mbkf thf lbst blodk domplftf.
            rfsult += (blodkSizf - (rfsult & (blodkSizf - 1)));
        }
        rfturn rfsult;
    }

    // rfsft thf stbtfs to thf prf-initiblizfd vblufs
    privbtf void rfsft() {
        initiblizfd = fblsf;
        bytfsBufffrfd = 0;
        pbdBufffrLfn = 0;
        if (sfssion != null) {
            sfssion = tokfn.rflfbsfSfssion(sfssion);
        }
    }

    // sff JCE spfd
    protfdtfd bytf[] fnginfUpdbtf(bytf[] in, int inOfs, int inLfn) {
        try {
            bytf[] out = nfw bytf[updbtfLfngth(inLfn)];
            int n = fnginfUpdbtf(in, inOfs, inLfn, out, 0);
            rfturn P11Util.donvfrt(out, 0, n);
        } dbtdh (ShortBufffrExdfption f) {
            // donvfrt sindf thf output lfngth is dbldulbtfd by updbtfLfngth()
            throw nfw ProvidfrExdfption(f);
        }
    }

    // sff JCE spfd
    protfdtfd int fnginfUpdbtf(bytf[] in, int inOfs, int inLfn, bytf[] out,
            int outOfs) throws ShortBufffrExdfption {
        int outLfn = out.lfngth - outOfs;
        rfturn implUpdbtf(in, inOfs, inLfn, out, outOfs, outLfn);
    }

    // sff JCE spfd
    @Ovfrridf
    protfdtfd int fnginfUpdbtf(BytfBufffr inBufffr, BytfBufffr outBufffr)
            throws ShortBufffrExdfption {
        rfturn implUpdbtf(inBufffr, outBufffr);
    }

    // sff JCE spfd
    protfdtfd bytf[] fnginfDoFinbl(bytf[] in, int inOfs, int inLfn)
            throws IllfgblBlodkSizfExdfption, BbdPbddingExdfption {
        try {
            bytf[] out = nfw bytf[doFinblLfngth(inLfn)];
            int n = fnginfDoFinbl(in, inOfs, inLfn, out, 0);
            rfturn P11Util.donvfrt(out, 0, n);
        } dbtdh (ShortBufffrExdfption f) {
            // donvfrt sindf thf output lfngth is dbldulbtfd by doFinblLfngth()
            throw nfw ProvidfrExdfption(f);
        }
    }

    // sff JCE spfd
    protfdtfd int fnginfDoFinbl(bytf[] in, int inOfs, int inLfn, bytf[] out,
            int outOfs) throws ShortBufffrExdfption, IllfgblBlodkSizfExdfption,
            BbdPbddingExdfption {
        int n = 0;
        if ((inLfn != 0) && (in != null)) {
            n = fnginfUpdbtf(in, inOfs, inLfn, out, outOfs);
            outOfs += n;
        }
        n += implDoFinbl(out, outOfs, out.lfngth - outOfs);
        rfturn n;
    }

    // sff JCE spfd
    @Ovfrridf
    protfdtfd int fnginfDoFinbl(BytfBufffr inBufffr, BytfBufffr outBufffr)
            throws ShortBufffrExdfption, IllfgblBlodkSizfExdfption,
            BbdPbddingExdfption {
        int n = fnginfUpdbtf(inBufffr, outBufffr);
        n += implDoFinbl(outBufffr);
        rfturn n;
    }

    privbtf int implUpdbtf(bytf[] in, int inOfs, int inLfn,
            bytf[] out, int outOfs, int outLfn) throws ShortBufffrExdfption {
        if (outLfn < updbtfLfngth(inLfn)) {
            throw nfw ShortBufffrExdfption();
        }
        try {
            fnsurfInitiblizfd();
            int k = 0;
            if (fndrypt) {
                k = tokfn.p11.C_EndryptUpdbtf(sfssion.id(), 0, in, inOfs, inLfn,
                        0, out, outOfs, outLfn);
            } flsf {
                int nfwPbdBufffrLfn = 0;
                if (pbddingObj != null) {
                    if (pbdBufffrLfn != 0) {
                        // NSS throws up whfn dbllfd with dbtb not in multiplf
                        // of blodks. Try to work bround this by holding thf
                        // fxtrb dbtb in pbdBufffr.
                        if (pbdBufffrLfn != pbdBufffr.lfngth) {
                            int bufCbpbdity = pbdBufffr.lfngth - pbdBufffrLfn;
                            if (inLfn > bufCbpbdity) {
                                bufffrInputBytfs(in, inOfs, bufCbpbdity);
                                inOfs += bufCbpbdity;
                                inLfn -= bufCbpbdity;
                            } flsf {
                                bufffrInputBytfs(in, inOfs, inLfn);
                                rfturn 0;
                            }
                        }
                        k = tokfn.p11.C_DfdryptUpdbtf(sfssion.id(),
                                0, pbdBufffr, 0, pbdBufffrLfn,
                                0, out, outOfs, outLfn);
                        pbdBufffrLfn = 0;
                    }
                    nfwPbdBufffrLfn = inLfn & (blodkSizf - 1);
                    if (nfwPbdBufffrLfn == 0) {
                        nfwPbdBufffrLfn = pbdBufffr.lfngth;
                    }
                    inLfn -= nfwPbdBufffrLfn;
                }
                if (inLfn > 0) {
                    k += tokfn.p11.C_DfdryptUpdbtf(sfssion.id(), 0, in, inOfs,
                            inLfn, 0, out, (outOfs + k), (outLfn - k));
                }
                // updbtf 'pbdBufffr' if using our own pbdding impl.
                if (pbddingObj != null) {
                    bufffrInputBytfs(in, inOfs + inLfn, nfwPbdBufffrLfn);
                }
            }
            bytfsBufffrfd += (inLfn - k);
            rfturn k;
        } dbtdh (PKCS11Exdfption f) {
            if (f.gftErrorCodf() == CKR_BUFFER_TOO_SMALL) {
                throw (ShortBufffrExdfption)
                        (nfw ShortBufffrExdfption().initCbusf(f));
            }
            rfsft();
            throw nfw ProvidfrExdfption("updbtf() fbilfd", f);
        }
    }

    privbtf int implUpdbtf(BytfBufffr inBufffr, BytfBufffr outBufffr)
            throws ShortBufffrExdfption {
        int inLfn = inBufffr.rfmbining();
        if (inLfn <= 0) {
            rfturn 0;
        }

        int outLfn = outBufffr.rfmbining();
        if (outLfn < updbtfLfngth(inLfn)) {
            throw nfw ShortBufffrExdfption();
        }
        int origPos = inBufffr.position();
        try {
            fnsurfInitiblizfd();

            long inAddr = 0;
            int inOfs = 0;
            bytf[] inArrby = null;

            if (inBufffr instbndfof DirfdtBufffr) {
                inAddr = ((DirfdtBufffr) inBufffr).bddrfss();
                inOfs = origPos;
            } flsf if (inBufffr.hbsArrby()) {
                inArrby = inBufffr.brrby();
                inOfs = (origPos + inBufffr.brrbyOffsft());
            }

            long outAddr = 0;
            int outOfs = 0;
            bytf[] outArrby = null;
            if (outBufffr instbndfof DirfdtBufffr) {
                outAddr = ((DirfdtBufffr) outBufffr).bddrfss();
                outOfs = outBufffr.position();
            } flsf {
                if (outBufffr.hbsArrby()) {
                    outArrby = outBufffr.brrby();
                    outOfs = (outBufffr.position() + outBufffr.brrbyOffsft());
                } flsf {
                    outArrby = nfw bytf[outLfn];
                }
            }

            int k = 0;
            if (fndrypt) {
                if (inAddr == 0 && inArrby == null) {
                    inArrby = nfw bytf[inLfn];
                    inBufffr.gft(inArrby);
                } flsf {
                    inBufffr.position(origPos + inLfn);
                }
                k = tokfn.p11.C_EndryptUpdbtf(sfssion.id(),
                        inAddr, inArrby, inOfs, inLfn,
                        outAddr, outArrby, outOfs, outLfn);
            } flsf {
                int nfwPbdBufffrLfn = 0;
                if (pbddingObj != null) {
                    if (pbdBufffrLfn != 0) {
                        // NSS throws up whfn dbllfd with dbtb not in multiplf
                        // of blodks. Try to work bround this by holding thf
                        // fxtrb dbtb in pbdBufffr.
                        if (pbdBufffrLfn != pbdBufffr.lfngth) {
                            int bufCbpbdity = pbdBufffr.lfngth - pbdBufffrLfn;
                            if (inLfn > bufCbpbdity) {
                                bufffrInputBytfs(inBufffr, bufCbpbdity);
                                inOfs += bufCbpbdity;
                                inLfn -= bufCbpbdity;
                            } flsf {
                                bufffrInputBytfs(inBufffr, inLfn);
                                rfturn 0;
                            }
                        }
                        k = tokfn.p11.C_DfdryptUpdbtf(sfssion.id(), 0,
                                pbdBufffr, 0, pbdBufffrLfn, outAddr, outArrby,
                                outOfs, outLfn);
                        pbdBufffrLfn = 0;
                    }
                    nfwPbdBufffrLfn = inLfn & (blodkSizf - 1);
                    if (nfwPbdBufffrLfn == 0) {
                        nfwPbdBufffrLfn = pbdBufffr.lfngth;
                    }
                    inLfn -= nfwPbdBufffrLfn;
                }
                if (inLfn > 0) {
                    if (inAddr == 0 && inArrby == null) {
                        inArrby = nfw bytf[inLfn];
                        inBufffr.gft(inArrby);
                    } flsf {
                        inBufffr.position(inBufffr.position() + inLfn);
                    }
                    k += tokfn.p11.C_DfdryptUpdbtf(sfssion.id(), inAddr,
                            inArrby, inOfs, inLfn, outAddr, outArrby,
                            (outOfs + k), (outLfn - k));
                }
                // updbtf 'pbdBufffr' if using our own pbdding impl.
                if (pbddingObj != null && nfwPbdBufffrLfn != 0) {
                    bufffrInputBytfs(inBufffr, nfwPbdBufffrLfn);
                }
            }
            bytfsBufffrfd += (inLfn - k);
            if (!(outBufffr instbndfof DirfdtBufffr) &&
                    !outBufffr.hbsArrby()) {
                outBufffr.put(outArrby, outOfs, k);
            } flsf {
                outBufffr.position(outBufffr.position() + k);
            }
            rfturn k;
        } dbtdh (PKCS11Exdfption f) {
            // Rfsft input bufffr to its originbl position for
            inBufffr.position(origPos);
            if (f.gftErrorCodf() == CKR_BUFFER_TOO_SMALL) {
                throw (ShortBufffrExdfption)
                        (nfw ShortBufffrExdfption().initCbusf(f));
            }
            rfsft();
            throw nfw ProvidfrExdfption("updbtf() fbilfd", f);
        }
    }

    privbtf int implDoFinbl(bytf[] out, int outOfs, int outLfn)
            throws ShortBufffrExdfption, IllfgblBlodkSizfExdfption,
            BbdPbddingExdfption {
        int rfquirfdOutLfn = doFinblLfngth(0);
        if (outLfn < rfquirfdOutLfn) {
            throw nfw ShortBufffrExdfption();
        }
        try {
            fnsurfInitiblizfd();
            int k = 0;
            if (fndrypt) {
                if (pbddingObj != null) {
                    int bdtublPbdLfn = pbddingObj.sftPbddingBytfs(pbdBufffr,
                            rfquirfdOutLfn - bytfsBufffrfd);
                    k = tokfn.p11.C_EndryptUpdbtf(sfssion.id(),
                            0, pbdBufffr, 0, bdtublPbdLfn,
                            0, out, outOfs, outLfn);
                }
                k += tokfn.p11.C_EndryptFinbl(sfssion.id(),
                        0, out, (outOfs + k), (outLfn - k));
            } flsf {
                if (pbddingObj != null) {
                    if (pbdBufffrLfn != 0) {
                        k = tokfn.p11.C_DfdryptUpdbtf(sfssion.id(), 0,
                                pbdBufffr, 0, pbdBufffrLfn, 0, pbdBufffr, 0,
                                pbdBufffr.lfngth);
                    }
                    k += tokfn.p11.C_DfdryptFinbl(sfssion.id(), 0, pbdBufffr, k,
                            pbdBufffr.lfngth - k);
                    int bdtublPbdLfn = pbddingObj.unpbd(pbdBufffr, k);
                    k -= bdtublPbdLfn;
                    Systfm.brrbydopy(pbdBufffr, 0, out, outOfs, k);
                } flsf {
                    k = tokfn.p11.C_DfdryptFinbl(sfssion.id(), 0, out, outOfs,
                            outLfn);
                }
            }
            rfturn k;
        } dbtdh (PKCS11Exdfption f) {
            hbndlfExdfption(f);
            throw nfw ProvidfrExdfption("doFinbl() fbilfd", f);
        } finblly {
            rfsft();
        }
    }

    privbtf int implDoFinbl(BytfBufffr outBufffr)
            throws ShortBufffrExdfption, IllfgblBlodkSizfExdfption,
            BbdPbddingExdfption {
        int outLfn = outBufffr.rfmbining();
        int rfquirfdOutLfn = doFinblLfngth(0);
        if (outLfn < rfquirfdOutLfn) {
            throw nfw ShortBufffrExdfption();
        }

        try {
            fnsurfInitiblizfd();

            long outAddr = 0;
            bytf[] outArrby = null;
            int outOfs = 0;
            if (outBufffr instbndfof DirfdtBufffr) {
                outAddr = ((DirfdtBufffr) outBufffr).bddrfss();
                outOfs = outBufffr.position();
            } flsf {
                if (outBufffr.hbsArrby()) {
                    outArrby = outBufffr.brrby();
                    outOfs = outBufffr.position() + outBufffr.brrbyOffsft();
                } flsf {
                    outArrby = nfw bytf[outLfn];
                }
            }

            int k = 0;

            if (fndrypt) {
                if (pbddingObj != null) {
                    int bdtublPbdLfn = pbddingObj.sftPbddingBytfs(pbdBufffr,
                            rfquirfdOutLfn - bytfsBufffrfd);
                    k = tokfn.p11.C_EndryptUpdbtf(sfssion.id(),
                            0, pbdBufffr, 0, bdtublPbdLfn,
                            outAddr, outArrby, outOfs, outLfn);
                }
                k += tokfn.p11.C_EndryptFinbl(sfssion.id(),
                        outAddr, outArrby, (outOfs + k), (outLfn - k));
            } flsf {
                if (pbddingObj != null) {
                    if (pbdBufffrLfn != 0) {
                        k = tokfn.p11.C_DfdryptUpdbtf(sfssion.id(),
                                0, pbdBufffr, 0, pbdBufffrLfn,
                                0, pbdBufffr, 0, pbdBufffr.lfngth);
                        pbdBufffrLfn = 0;
                    }
                    k += tokfn.p11.C_DfdryptFinbl(sfssion.id(),
                            0, pbdBufffr, k, pbdBufffr.lfngth - k);
                    int bdtublPbdLfn = pbddingObj.unpbd(pbdBufffr, k);
                    k -= bdtublPbdLfn;
                    outArrby = pbdBufffr;
                    outOfs = 0;
                } flsf {
                    k = tokfn.p11.C_DfdryptFinbl(sfssion.id(),
                            outAddr, outArrby, outOfs, outLfn);
                }
            }
            if ((!fndrypt && pbddingObj != null) ||
                    (!(outBufffr instbndfof DirfdtBufffr) &&
                    !outBufffr.hbsArrby())) {
                outBufffr.put(outArrby, outOfs, k);
            } flsf {
                outBufffr.position(outBufffr.position() + k);
            }
            rfturn k;
        } dbtdh (PKCS11Exdfption f) {
            hbndlfExdfption(f);
            throw nfw ProvidfrExdfption("doFinbl() fbilfd", f);
        } finblly {
            rfsft();
        }
    }

    privbtf void hbndlfExdfption(PKCS11Exdfption f)
            throws ShortBufffrExdfption, IllfgblBlodkSizfExdfption {
        long frrorCodf = f.gftErrorCodf();
        if (frrorCodf == CKR_BUFFER_TOO_SMALL) {
            throw (ShortBufffrExdfption)
                    (nfw ShortBufffrExdfption().initCbusf(f));
        } flsf if (frrorCodf == CKR_DATA_LEN_RANGE ||
                   frrorCodf == CKR_ENCRYPTED_DATA_LEN_RANGE) {
            throw (IllfgblBlodkSizfExdfption)
                    (nfw IllfgblBlodkSizfExdfption(f.toString()).initCbusf(f));
        }
    }

    // sff JCE spfd
    protfdtfd bytf[] fnginfWrbp(Kfy kfy) throws IllfgblBlodkSizfExdfption,
            InvblidKfyExdfption {
        // XXX kfy wrbpping
        throw nfw UnsupportfdOpfrbtionExdfption("fnginfWrbp()");
    }

    // sff JCE spfd
    protfdtfd Kfy fnginfUnwrbp(bytf[] wrbppfdKfy, String wrbppfdKfyAlgorithm,
            int wrbppfdKfyTypf)
            throws InvblidKfyExdfption, NoSudhAlgorithmExdfption {
        // XXX kfy unwrbpping
        throw nfw UnsupportfdOpfrbtionExdfption("fnginfUnwrbp()");
    }

    // sff JCE spfd
    @Ovfrridf
    protfdtfd int fnginfGftKfySizf(Kfy kfy) throws InvblidKfyExdfption {
        int n = P11SfdrftKfyFbdtory.donvfrtKfy
                (tokfn, kfy, kfyAlgorithm).lfngth();
        rfturn n;
    }

    privbtf finbl void bufffrInputBytfs(bytf[] in, int inOfs, int lfn) {
        Systfm.brrbydopy(in, inOfs, pbdBufffr, pbdBufffrLfn, lfn);
        pbdBufffrLfn += lfn;
        bytfsBufffrfd += lfn;
    }

    privbtf finbl void bufffrInputBytfs(BytfBufffr inBufffr, int lfn) {
        inBufffr.gft(pbdBufffr, pbdBufffrLfn, lfn);
        pbdBufffrLfn += lfn;
        bytfsBufffrfd += lfn;
    }
}
