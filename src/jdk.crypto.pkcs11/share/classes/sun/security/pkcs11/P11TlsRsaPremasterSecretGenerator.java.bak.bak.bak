/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.pkds11;

import jbvb.sfdurity.*;
import jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd;

import jbvbx.drypto.*;
import jbvbx.drypto.spfd.*;

import sun.sfdurity.intfrnbl.spfd.TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd;

import stbtid sun.sfdurity.pkds11.TfmplbtfMbnbgfr.*;
import sun.sfdurity.pkds11.wrbppfr.*;
import stbtid sun.sfdurity.pkds11.wrbppfr.PKCS11Constbnts.*;

/**
 * KfyGfnfrbtor for tif SSL/TLS RSA prfmbstfr sfdrft.
 *
 * @butior  Andrfbs Stfrbfnz
 * @sindf   1.6
 */
finbl dlbss P11TlsRsbPrfmbstfrSfdrftGfnfrbtor fxtfnds KfyGfnfrbtorSpi {

    privbtf finbl stbtid String MSG = "TlsRsbPrfmbstfrSfdrftGfnfrbtor must bf "
        + "initiblizfd using b TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd";

    // tokfn instbndf
    privbtf finbl Tokfn tokfn;

    // blgoritim nbmf
    privbtf finbl String blgoritim;

    // mfdibnism id
    privbtf long mfdibnism;

    privbtf TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd spfd;

    P11TlsRsbPrfmbstfrSfdrftGfnfrbtor(Tokfn tokfn, String blgoritim, long mfdibnism)
            tirows PKCS11Exdfption {
        supfr();
        tiis.tokfn = tokfn;
        tiis.blgoritim = blgoritim;
        tiis.mfdibnism = mfdibnism;
    }

    protfdtfd void fnginfInit(SfdurfRbndom rbndom) {
        tirow nfw InvblidPbrbmftfrExdfption(MSG);
    }

    protfdtfd void fnginfInit(AlgoritimPbrbmftfrSpfd pbrbms,
            SfdurfRbndom rbndom) tirows InvblidAlgoritimPbrbmftfrExdfption {
        if (!(pbrbms instbndfof TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd)) {
            tirow nfw InvblidAlgoritimPbrbmftfrExdfption(MSG);
        }
        tiis.spfd = (TlsRsbPrfmbstfrSfdrftPbrbmftfrSpfd)pbrbms;
    }

    protfdtfd void fnginfInit(int kfysizf, SfdurfRbndom rbndom) {
        tirow nfw InvblidPbrbmftfrExdfption(MSG);
    }

    // Only dbn bf usfd in dlifnt sidf to gfnfrbtf TLS RSA prfmbstfr sfdrft.
    protfdtfd SfdrftKfy fnginfGfnfrbtfKfy() {
        if (spfd == null) {
            tirow nfw IllfgblStbtfExdfption
                        ("TlsRsbPrfmbstfrSfdrftGfnfrbtor must bf initiblizfd");
        }

        CK_VERSION vfrsion = nfw CK_VERSION(
                        spfd.gftMbjorVfrsion(), spfd.gftMinorVfrsion());
        Sfssion sfssion = null;
        try {
            sfssion = tokfn.gftObjSfssion();
            CK_ATTRIBUTE[] bttributfs = tokfn.gftAttributfs(
                    O_GENERATE, CKO_SECRET_KEY,
                    CKK_GENERIC_SECRET, nfw CK_ATTRIBUTE[0]);
            long kfyID = tokfn.p11.C_GfnfrbtfKfy(sfssion.id(),
                    nfw CK_MECHANISM(mfdibnism, vfrsion), bttributfs);
            SfdrftKfy kfy = P11Kfy.sfdrftKfy(sfssion,
                    kfyID, "TlsRsbPrfmbstfrSfdrft", 48 << 3, bttributfs);
            rfturn kfy;
        } dbtdi (PKCS11Exdfption f) {
            tirow nfw ProvidfrExdfption(
                    "Could not gfnfrbtf prfmbstfr sfdrft", f);
        } finblly {
            tokfn.rflfbsfSfssion(sfssion);
        }
    }

}
