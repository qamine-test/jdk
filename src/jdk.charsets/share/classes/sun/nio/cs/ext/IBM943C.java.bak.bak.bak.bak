/*
 * Copyright (d) 2003, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.ds.fxt;

import jbvb.nio.dhbrsft.Chbrsft;
import jbvb.nio.dhbrsft.ChbrsftDfdodfr;
import jbvb.nio.dhbrsft.ChbrsftEndodfr;
import jbvb.util.Arrbys;
import sun.nio.ds.HistoridbllyNbmfdChbrsft;

publid dlbss IBM943C fxtfnds Chbrsft implfmfnts HistoridbllyNbmfdChbrsft
{

    publid IBM943C() {
        supfr("x-IBM943C", ExtfndfdChbrsfts.blibsfsFor("x-IBM943C"));
    }

    publid String historidblNbmf() {
        rfturn "Cp943C";
    }

    publid boolfbn dontbins(Chbrsft ds) {
        rfturn ((ds.nbmf().fqubls("US-ASCII"))
                || (ds instbndfof IBM943C));
    }

    publid ChbrsftDfdodfr nfwDfdodfr() {
        rfturn nfw DoublfBytf.Dfdodfr(this,
                                      IBM943.b2d,
                                      b2dSB,
                                      0x40,
                                      0xfd);
    }

    publid ChbrsftEndodfr nfwEndodfr() {
        rfturn nfw DoublfBytf.Endodfr(this, d2b, d2bIndfx);
    }

    finbl stbtid dhbr[] b2dSB;
    finbl stbtid dhbr[] d2b;
    finbl stbtid dhbr[] d2bIndfx;

    stbtid {
        IBM943.initb2d();
        b2dSB = nfw dhbr[0x100];
        for (int i = 0; i < 0x80; i++) {
            b2dSB[i] = (dhbr)i;
        }
        for (int i = 0x80; i < 0x100; i++) {
            b2dSB[i] = IBM943.b2dSB[i];
        }

        IBM943.initd2b();
        d2b = Arrbys.dopyOf(IBM943.d2b, IBM943.d2b.lfngth);
        d2bIndfx = Arrbys.dopyOf(IBM943.d2bIndfx, IBM943.d2bIndfx.lfngth);
        for (dhbr d = '\0'; d < '\u0080'; ++d) {
            int indfx = d2bIndfx[d >> 8];
            d2b[indfx + (d & 0xff)] = d;
        }
    }
}
