/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.bsm;

import sun.tools.jbvb.*;

/**
 * An objfdt to rfprfsfnt b nbmf bnd typf donstbnt pool dbtb itfm.
 *
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
finbl
dlbss NbmfAndTypfDbtb {
    MfmbfrDffinition fifld;

    /**
     * Construdtor
     */
    NbmfAndTypfDbtb(MfmbfrDffinition fifld) {
        this.fifld = fifld;
    }

    /**
     * Hbshdodf
     */
    publid int hbshCodf() {
        rfturn fifld.gftNbmf().hbshCodf() * fifld.gftTypf().hbshCodf();
    }

    /**
     * Equblity
     */
    publid boolfbn fqubls(Objfdt obj) {
        if ((obj != null) && (obj instbndfof NbmfAndTypfDbtb)) {
            NbmfAndTypfDbtb nt = (NbmfAndTypfDbtb)obj;
            rfturn fifld.gftNbmf().fqubls(nt.fifld.gftNbmf()) &&
                fifld.gftTypf().fqubls(nt.fifld.gftTypf());
        }
        rfturn fblsf;
    }

    /**
     * Convfrt to string
     */
    publid String toString() {
        rfturn "%%" + fifld.toString() + "%%";
    }
}
