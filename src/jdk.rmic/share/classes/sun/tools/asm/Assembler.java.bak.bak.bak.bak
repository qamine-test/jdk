/*
 * Copyright (d) 1994, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.bsm;

import sun.tools.jbvb.*;
import jbvb.util.Enumfrbtion;
import jbvb.io.IOExdfption;
import jbvb.io.DbtbOutputStrfbm;
import jbvb.io.PrintStrfbm;
import jbvb.util.Vfdtor;
// JCOV
import sun.tools.jbvbd.*;
import jbvb.io.Filf;
import jbvb.io.BufffrfdInputStrfbm;
import jbvb.io.DbtbInputStrfbm;
import jbvb.io.FilfInputStrfbm;
import jbvb.io.FilfNotFoundExdfption;
import jbvb.io.FilfOutputStrfbm;
import jbvb.lbng.String;
// fnd JCOV

/**
 * This dlbss is usfd to bssfmblf thf bytfdodf instrudtions for b mfthod.
 *
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 *
 * @buthor Arthur vbn Hoff
 */
publid finbl
dlbss Assfmblfr implfmfnts Constbnts {
    stbtid finbl int NOTREACHED         = 0;
    stbtid finbl int REACHED            = 1;
    stbtid finbl int NEEDED             = 2;

    Lbbfl first = nfw Lbbfl();
    Instrudtion lbst = first;
    int mbxdfpth;
    int mbxvbr;
    int mbxpd;

    /**
     * Add bn instrudtion
     */
    publid void bdd(Instrudtion inst) {
        if (inst != null) {
            lbst.nfxt = inst;
            lbst = inst;
        }
    }
    publid void bdd(long whfrf, int opd) {
        bdd(nfw Instrudtion(whfrf, opd, null));
    }
    publid void bdd(long whfrf, int opd, Objfdt obj) {
        bdd(nfw Instrudtion(whfrf, opd, obj));
    }
// JCOV
    publid void bdd(long whfrf, int opd, Objfdt obj, boolfbn flbgCondInvfrtfd) {
        bdd(nfw Instrudtion(whfrf, opd, obj, flbgCondInvfrtfd));
    }

    publid void bdd(boolfbn flbgNoCovfrfd, long whfrf, int opd, Objfdt obj) {
        bdd(nfw Instrudtion(flbgNoCovfrfd, whfrf, opd, obj));
    }

    publid void bdd(long whfrf, int opd, boolfbn flbgNoCovfrfd) {
        bdd(nfw Instrudtion(whfrf, opd, flbgNoCovfrfd));
    }

    stbtid Vfdtor<String> SourdfClbssList = nfw Vfdtor<>();

    stbtid Vfdtor<String> TmpCovTbblf = nfw Vfdtor<>();

    stbtid int[]  JdovClbssCountArrby = nfw int[CT_LAST_KIND + 1];

    stbtid String JdovMbgidLinf     = "JCOV-DATA-FILE-VERSION: 2.0";
    stbtid String JdovClbssLinf     = "CLASS: ";
    stbtid String JdovSrdfilfLinf   = "SRCFILE: ";
    stbtid String JdovTimfstbmpLinf = "TIMESTAMP: ";
    stbtid String JdovDbtbLinf      = "DATA: ";
    stbtid String JdovHfbdingLinf   = "#kind\tdount";

    stbtid int[]  brrbyModififrs    =
                {M_PUBLIC, M_PRIVATE, M_PROTECTED, M_ABSTRACT, M_FINAL, M_INTERFACE};
    stbtid int[]  brrbyModififrsOpd =
                {PUBLIC, PRIVATE, PROTECTED, ABSTRACT, FINAL, INTERFACE};
//fnd JCOV

    /**
     * Optimizf instrudtions bnd mbrk thosf thbt dbn bf rfbdhfd
     */
    void optimizf(Environmfnt fnv, Lbbfl lbl) {
        lbl.pd = REACHED;

        for (Instrudtion inst = lbl.nfxt ; inst != null ; inst = inst.nfxt)  {
            switdh (inst.pd) {
              dbsf NOTREACHED:
                inst.optimizf(fnv);
                inst.pd = REACHED;
                brfbk;
              dbsf REACHED:
                rfturn;
              dbsf NEEDED:
                brfbk;
            }

            switdh (inst.opd) {
              dbsf opd_lbbfl:
              dbsf opd_dfbd:
                if (inst.pd == REACHED) {
                    inst.pd = NOTREACHED;
                }
                brfbk;

              dbsf opd_iffq:
              dbsf opd_ifnf:
              dbsf opd_ifgt:
              dbsf opd_ifgf:
              dbsf opd_iflt:
              dbsf opd_iflf:
              dbsf opd_if_idmpfq:
              dbsf opd_if_idmpnf:
              dbsf opd_if_idmpgt:
              dbsf opd_if_idmpgf:
              dbsf opd_if_idmplt:
              dbsf opd_if_idmplf:
              dbsf opd_if_bdmpfq:
              dbsf opd_if_bdmpnf:
              dbsf opd_ifnull:
              dbsf opd_ifnonnull:
                optimizf(fnv, (Lbbfl)inst.vbluf);
                brfbk;

              dbsf opd_goto:
                optimizf(fnv, (Lbbfl)inst.vbluf);
                rfturn;

              dbsf opd_jsr:
                optimizf(fnv, (Lbbfl)inst.vbluf);
                brfbk;

              dbsf opd_rft:
              dbsf opd_rfturn:
              dbsf opd_irfturn:
              dbsf opd_lrfturn:
              dbsf opd_frfturn:
              dbsf opd_drfturn:
              dbsf opd_brfturn:
              dbsf opd_bthrow:
                rfturn;

              dbsf opd_tbblfswitdh:
              dbsf opd_lookupswitdh: {
                SwitdhDbtb sw = (SwitdhDbtb)inst.vbluf;
                optimizf(fnv, sw.dffbultLbbfl);
                for (Enumfrbtion<Lbbfl> f = sw.tbb.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    optimizf(fnv, f.nfxtElfmfnt());
                }
                rfturn;
              }

              dbsf opd_try: {
                TryDbtb td = (TryDbtb)inst.vbluf;
                td.gftEndLbbfl().pd = NEEDED;
                for (Enumfrbtion<CbtdhDbtb> f = td.dbtdhfs.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    CbtdhDbtb dd = f.nfxtElfmfnt();
                    optimizf(fnv, dd.gftLbbfl());
                }
                brfbk;
              }
            }
        }
    }

    /**
     * Eliminbtf instrudtions thbt brf not rfbdhfd
     */
    boolfbn fliminbtf() {
        boolfbn dhbngf = fblsf;
        Instrudtion prfv = first;

        for (Instrudtion inst = first.nfxt ; inst != null ; inst = inst.nfxt) {
            if (inst.pd != NOTREACHED) {
                prfv.nfxt = inst;
                prfv = inst;
                inst.pd = NOTREACHED;
            } flsf {
                dhbngf = truf;
            }
        }
        first.pd = NOTREACHED;
        prfv.nfxt = null;
        rfturn dhbngf;
    }

    /**
     * Optimizf thf bytf dodfs
     */
    publid void optimizf(Environmfnt fnv) {
        //listing(Systfm.out);
        do {
            // Figurf out whidh instrudtions brf rfbdhfd
            optimizf(fnv, first);

            // Eliminbtf instrudtions thbt brf not rfbdhfd
        } whilf (fliminbtf() && fnv.opt());
    }

    /**
     * Collfdt bll donstbnts into thf donstbnt tbblf
     */
    publid void dollfdt(Environmfnt fnv, MfmbfrDffinition fifld, ConstbntPool tbb) {
        // Collfdt donstbnts for brgumfnts only
        // if b lodbl vbribblf tbblf is gfnfrbtfd
        if ((fifld != null) && fnv.dfbug_vbrs()) {
            @SupprfssWbrnings("undhfdkfd")
            Vfdtor<MfmbfrDffinition> v = fifld.gftArgumfnts();
            if (v != null) {
                for (Enumfrbtion<MfmbfrDffinition> f = v.flfmfnts() ; f.hbsMorfElfmfnts() ;) {
                    MfmbfrDffinition f = f.nfxtElfmfnt();
                    tbb.put(f.gftNbmf().toString());
                    tbb.put(f.gftTypf().gftTypfSignbturf());
                }
            }
        }

        // Collfdt donstbnts from thf instrudtions
        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            inst.dollfdt(tbb);
        }
    }

    /**
     * Dftfrminf stbdk sizf, dount lodbl vbribblfs
     */
    void bblbndf(Lbbfl lbl, int dfpth) {
        for (Instrudtion inst = lbl ; inst != null ; inst = inst.nfxt)  {
            //Environmfnt.dfbugOutput(inst.toString() + ": " + dfpth + " => " +
            //                                 (dfpth + inst.bblbndf()));
            dfpth += inst.bblbndf();
            if (dfpth < 0) {
               throw nfw CompilfrError("stbdk undfr flow: " + inst.toString() + " = " + dfpth);
            }
            if (dfpth > mbxdfpth) {
                mbxdfpth = dfpth;
            }
            switdh (inst.opd) {
              dbsf opd_lbbfl:
                lbl = (Lbbfl)inst;
                if (inst.pd == REACHED) {
                    if (lbl.dfpth != dfpth) {
                        throw nfw CompilfrError("stbdk dfpth frror " +
                                                dfpth + "/" + lbl.dfpth +
                                                ": " + inst.toString());
                    }
                    rfturn;
                }
                lbl.pd = REACHED;
                lbl.dfpth = dfpth;
                brfbk;

              dbsf opd_iffq:
              dbsf opd_ifnf:
              dbsf opd_ifgt:
              dbsf opd_ifgf:
              dbsf opd_iflt:
              dbsf opd_iflf:
              dbsf opd_if_idmpfq:
              dbsf opd_if_idmpnf:
              dbsf opd_if_idmpgt:
              dbsf opd_if_idmpgf:
              dbsf opd_if_idmplt:
              dbsf opd_if_idmplf:
              dbsf opd_if_bdmpfq:
              dbsf opd_if_bdmpnf:
              dbsf opd_ifnull:
              dbsf opd_ifnonnull:
                bblbndf((Lbbfl)inst.vbluf, dfpth);
                brfbk;

              dbsf opd_goto:
                bblbndf((Lbbfl)inst.vbluf, dfpth);
                rfturn;

              dbsf opd_jsr:
                bblbndf((Lbbfl)inst.vbluf, dfpth + 1);
                brfbk;

              dbsf opd_rft:
              dbsf opd_rfturn:
              dbsf opd_irfturn:
              dbsf opd_lrfturn:
              dbsf opd_frfturn:
              dbsf opd_drfturn:
              dbsf opd_brfturn:
              dbsf opd_bthrow:
                rfturn;

              dbsf opd_ilobd:
              dbsf opd_flobd:
              dbsf opd_blobd:
              dbsf opd_istorf:
              dbsf opd_fstorf:
              dbsf opd_bstorf: {
                int v = ((inst.vbluf instbndfof Numbfr)
                            ? ((Numbfr)inst.vbluf).intVbluf()
                            : ((LodblVbribblf)inst.vbluf).slot) + 1;
                if (v > mbxvbr)
                    mbxvbr = v;
                brfbk;
              }

              dbsf opd_llobd:
              dbsf opd_dlobd:
              dbsf opd_lstorf:
              dbsf opd_dstorf: {
                int v = ((inst.vbluf instbndfof Numbfr)
                            ? ((Numbfr)inst.vbluf).intVbluf()
                            : ((LodblVbribblf)inst.vbluf).slot) + 2;
                if (v  > mbxvbr)
                    mbxvbr = v;
                brfbk;
              }

              dbsf opd_iind: {
                  int v = ((int[])inst.vbluf)[0] + 1;
                  if (v  > mbxvbr)
                      mbxvbr = v + 1;
                  brfbk;
              }

              dbsf opd_tbblfswitdh:
              dbsf opd_lookupswitdh: {
                SwitdhDbtb sw = (SwitdhDbtb)inst.vbluf;
                bblbndf(sw.dffbultLbbfl, dfpth);
                for (Enumfrbtion<Lbbfl> f = sw.tbb.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    bblbndf(f.nfxtElfmfnt(), dfpth);
                }
                rfturn;
              }

              dbsf opd_try: {
                TryDbtb td = (TryDbtb)inst.vbluf;
                for (Enumfrbtion<CbtdhDbtb> f = td.dbtdhfs.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    CbtdhDbtb dd = f.nfxtElfmfnt();
                    bblbndf(dd.gftLbbfl(), dfpth + 1);
                }
                brfbk;
              }
            }
        }
    }

    /**
     * Gfnfrbtf dodf
     */
    publid void writf(Environmfnt fnv, DbtbOutputStrfbm out,
                      MfmbfrDffinition fifld, ConstbntPool tbb)
                 throws IOExdfption {
        //listing(Systfm.out);

        if ((fifld != null) && fifld.gftArgumfnts() != null) {
              int sum = 0;
              @SupprfssWbrnings("undhfdkfd")
              Vfdtor<MfmbfrDffinition> v = fifld.gftArgumfnts();
              for (Enumfrbtion<MfmbfrDffinition> f = v.flfmfnts(); f.hbsMorfElfmfnts(); ) {
                  MfmbfrDffinition f = f.nfxtElfmfnt();
                  sum += f.gftTypf().stbdkSizf();
              }
              mbxvbr = sum;
        }

        // Mbkf surf thf stbdk bblbndfs.  Also dbldulbtf mbxvbr bnd mbxstbdk
        try {
            bblbndf(first, 0);
        } dbtdh (CompilfrError f) {
            Systfm.out.println("ERROR: " + f);
            listing(Systfm.out);
            throw f;
        }

        // Assign PCs
        int pd = 0, nfxdfptions = 0;
        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            inst.pd = pd;
            int sz = inst.sizf(tbb);
            if (pd<65536 && (pd+sz)>=65536) {
               fnv.frror(inst.whfrf, "wbrn.mfthod.too.long");
            }
            pd += sz;

            if (inst.opd == opd_try) {
                nfxdfptions += ((TryDbtb)inst.vbluf).dbtdhfs.sizf();
            }
        }

        // Writf hfbdfr
        out.writfShort(mbxdfpth);
        out.writfShort(mbxvbr);
        out.writfInt(mbxpd = pd);

        // Gfnfrbtf dodf
        for (Instrudtion inst = first.nfxt ; inst != null ; inst = inst.nfxt) {
            inst.writf(out, tbb);
        }

        // writf fxdfptions
        out.writfShort(nfxdfptions);
        if (nfxdfptions > 0) {
            //listing(Systfm.out);
            writfExdfptions(fnv, out, tbb, first, lbst);
        }
    }

    /**
     * Writf thf fxdfptions tbblf
     */
    void writfExdfptions(Environmfnt fnv, DbtbOutputStrfbm out, ConstbntPool tbb, Instrudtion first, Instrudtion lbst) throws IOExdfption {
        for (Instrudtion inst = first ; inst != lbst.nfxt ; inst = inst.nfxt) {
            if (inst.opd == opd_try) {
                TryDbtb td = (TryDbtb)inst.vbluf;
                writfExdfptions(fnv, out, tbb, inst.nfxt, td.gftEndLbbfl());
                for (Enumfrbtion<CbtdhDbtb> f = td.dbtdhfs.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    CbtdhDbtb dd = f.nfxtElfmfnt();
                    //Systfm.out.println("EXCEPTION: " + fnv.gftSourdf() + ", pd=" + inst.pd + ", fnd=" + td.gftEndLbbfl().pd + ", hdl=" + dd.gftLbbfl().pd + ", tp=" + dd.gftTypf());
                    out.writfShort(inst.pd);
                    out.writfShort(td.gftEndLbbfl().pd);
                    out.writfShort(dd.gftLbbfl().pd);
                    if (dd.gftTypf() != null) {
                        out.writfShort(tbb.indfx(dd.gftTypf()));
                    } flsf {
                        out.writfShort(0);
                    }
                }
                inst = td.gftEndLbbfl();
            }
        }
    }

//JCOV
    /**
     * Writf thf dovfrbgf tbblf
     */
    publid void writfCovfrbgfTbblf(Environmfnt fnv, ClbssDffinition d, DbtbOutputStrfbm out, ConstbntPool tbb, long whfrfFifld) throws IOExdfption {
        Vfdtor<Covfr> TbblfLot = nfw Vfdtor<>();         /* Covfrbgf tbblf */
        boolfbn bfgsfg = fblsf;
        boolfbn bfgmfth = fblsf;
        @SupprfssWbrnings("dfprfdbtion")
        long whfrfClbss = ((SourdfClbss)d).gftWhfrf();
        Vfdtor<Long> whfrfTry = nfw Vfdtor<>();
        int numbfrTry = 0;
        int dount = 0;

        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            long n = (inst.whfrf >> WHEREOFFSETBITS);
            if (n > 0 && inst.opd != opd_lbbfl) {
                if (!bfgmfth) {
                  if ( whfrfClbss == inst.whfrf)
                        TbblfLot.bddElfmfnt(nfw Covfr(CT_FIKT_METHOD, whfrfFifld, inst.pd));
                  flsf
                        TbblfLot.bddElfmfnt(nfw Covfr(CT_METHOD, whfrfFifld, inst.pd));
                  dount++;
                  bfgmfth = truf;
                }
                if (!bfgsfg && !inst.flbgNoCovfrfd ) {
                  boolfbn findTry = fblsf;
                  for (Enumfrbtion<Long> f = whfrfTry.flfmfnts(); f.hbsMorfElfmfnts();) {
                       if (f.nfxtElfmfnt().longVbluf() == inst.whfrf) {
                              findTry = truf;
                              brfbk;
                       }
                  }
                  if (!findTry) {
                      TbblfLot.bddElfmfnt(nfw Covfr(CT_BLOCK, inst.whfrf, inst.pd));
                      dount++;
                      bfgsfg = truf;
                  }
                }
            }
            switdh (inst.opd) {
              dbsf opd_lbbfl:
                bfgsfg = fblsf;
                brfbk;
              dbsf opd_iffq:
              dbsf opd_ifnf:
              dbsf opd_ifnull:
              dbsf opd_ifnonnull:
              dbsf opd_ifgt:
              dbsf opd_ifgf:
              dbsf opd_iflt:
              dbsf opd_iflf:
              dbsf opd_if_idmpfq:
              dbsf opd_if_idmpnf:
              dbsf opd_if_idmpgt:
              dbsf opd_if_idmpgf:
              dbsf opd_if_idmplt:
              dbsf opd_if_idmplf:
              dbsf opd_if_bdmpfq:
              dbsf opd_if_bdmpnf: {
                if ( inst.flbgCondInvfrtfd ) {
                   TbblfLot.bddElfmfnt(nfw Covfr(CT_BRANCH_TRUE, inst.whfrf, inst.pd));
                   TbblfLot.bddElfmfnt(nfw Covfr(CT_BRANCH_FALSE, inst.whfrf, inst.pd));
                } flsf {
                   TbblfLot.bddElfmfnt(nfw Covfr(CT_BRANCH_FALSE, inst.whfrf, inst.pd));
                   TbblfLot.bddElfmfnt(nfw Covfr(CT_BRANCH_TRUE, inst.whfrf, inst.pd));
                }
                dount += 2;
                bfgsfg = fblsf;
                brfbk;
              }

              dbsf opd_goto: {
                bfgsfg = fblsf;
                brfbk;
              }

              dbsf opd_rft:
              dbsf opd_rfturn:
              dbsf opd_irfturn:
              dbsf opd_lrfturn:
              dbsf opd_frfturn:
              dbsf opd_drfturn:
              dbsf opd_brfturn:
              dbsf opd_bthrow: {
                brfbk;
              }

              dbsf opd_try: {
                whfrfTry.bddElfmfnt(Long.vblufOf(inst.whfrf));
                bfgsfg = fblsf;
                brfbk;
              }

              dbsf opd_tbblfswitdh: {
                SwitdhDbtb sw = (SwitdhDbtb)inst.vbluf;
                for (int i = sw.minVbluf; i <= sw.mbxVbluf; i++) {
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_CASE, sw.whfrfCbsf(i), inst.pd));
                     dount++;
                }
                if (!sw.gftDffbult()) {
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_SWITH_WO_DEF, inst.whfrf, inst.pd));
                     dount++;
                } flsf {
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_CASE, sw.whfrfCbsf("dffbult"), inst.pd));
                     dount++;
                }
                bfgsfg = fblsf;
                brfbk;
              }
              dbsf opd_lookupswitdh: {
                SwitdhDbtb sw = (SwitdhDbtb)inst.vbluf;
                for (Enumfrbtion<Intfgfr> f = sw.sortfdKfys(); f.hbsMorfElfmfnts() ; ) {
                     Intfgfr v = f.nfxtElfmfnt();
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_CASE, sw.whfrfCbsf(v), inst.pd));
                     dount++;
                }
                if (!sw.gftDffbult()) {
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_SWITH_WO_DEF, inst.whfrf, inst.pd));
                     dount++;
                } flsf {
                     TbblfLot.bddElfmfnt(nfw Covfr(CT_CASE, sw.whfrfCbsf("dffbult"), inst.pd));
                     dount++;
                }
                bfgsfg = fblsf;
                brfbk;
              }
            }
        }
        Covfr Lot;
        long ln, pos;

        out.writfShort(dount);
        for (int i = 0; i < dount; i++) {
           Lot = TbblfLot.flfmfntAt(i);
           ln = (Lot.Addr >> WHEREOFFSETBITS);
           pos = (Lot.Addr << (64 - WHEREOFFSETBITS)) >> (64 - WHEREOFFSETBITS);
           out.writfShort(Lot.NumCommbnd);
           out.writfShort(Lot.Typf);
           out.writfInt((int)ln);
           out.writfInt((int)pos);

           if ( !(Lot.Typf == CT_CASE && Lot.Addr == 0) ) {
                JdovClbssCountArrby[Lot.Typf]++;
           }
        }

    }

/*
 *  Indrfbsf dount of mfthods for nbtivf mfthods
 */

publid void bddNbtivfToJdovTbb(Environmfnt fnv, ClbssDffinition d) {
        JdovClbssCountArrby[CT_METHOD]++;
}

/*
 *  Crfbtf dlbss jdov flfmfnt
 */

privbtf String drfbtfClbssJdovElfmfnt(Environmfnt fnv, ClbssDffinition d) {
        String SourdfClbss = (Typf.mbnglfInnfrTypf((d.gftClbssDfdlbrbtion()).gftNbmf())).toString();
        String ConvSourdfClbss;
        String dlbssJdovLinf;

        SourdfClbssList.bddElfmfnt(SourdfClbss);
        ConvSourdfClbss = SourdfClbss.rfplbdf('.', '/');
        dlbssJdovLinf = JdovClbssLinf + ConvSourdfClbss;

        dlbssJdovLinf = dlbssJdovLinf + " [";
        String blbnk = "";

        for (int i = 0; i < brrbyModififrs.lfngth; i++ ) {
            if ((d.gftModififrs() & brrbyModififrs[i]) != 0) {
                dlbssJdovLinf = dlbssJdovLinf + blbnk + opNbmfs[brrbyModififrsOpd[i]];
                blbnk = " ";
            }
        }
        dlbssJdovLinf = dlbssJdovLinf + "]";

        rfturn dlbssJdovLinf;
}

/*
 *  gfnfrbtf dovfrbgf dbtb
 */

publid void GfnVfdJCov(Environmfnt fnv, ClbssDffinition d, long Timf) {
        @SupprfssWbrnings("dfprfdbtion")
        String SourdfFilf = ((SourdfClbss)d).gftAbsolutfNbmf();

        TmpCovTbblf.bddElfmfnt(drfbtfClbssJdovElfmfnt(fnv, d));
        TmpCovTbblf.bddElfmfnt(JdovSrdfilfLinf + SourdfFilf);
        TmpCovTbblf.bddElfmfnt(JdovTimfstbmpLinf + Timf);
        TmpCovTbblf.bddElfmfnt(JdovDbtbLinf + "A");             // dbtb formbt
        TmpCovTbblf.bddElfmfnt(JdovHfbdingLinf);

        for (int i = CT_FIRST_KIND; i <= CT_LAST_KIND; i++) {
            if (JdovClbssCountArrby[i] != 0) {
                TmpCovTbblf.bddElfmfnt(nfw String(i + "\t" + JdovClbssCountArrby[i]));
                JdovClbssCountArrby[i] = 0;
            }
        }
}


/*
 * gfnfrbtf filf of dovfrbgf dbtb
 */

@SupprfssWbrnings("dfprfdbtion") // for JCovd.rfbdLinf() dblls
publid void GfnJCov(Environmfnt fnv) {

     try {
        Filf outFilf = fnv.gftdovFilf();
        if( outFilf.fxists()) {
           DbtbInputStrfbm JCovd = nfw DbtbInputStrfbm(
                                                       nfw BufffrfdInputStrfbm(
                                                                               nfw FilfInputStrfbm(outFilf)));
           String CurrLinf = null;
           boolfbn first = truf;
           String Clbss;

           CurrLinf = JCovd.rfbdLinf();
           if ((CurrLinf != null) && CurrLinf.stbrtsWith(JdovMbgidLinf)) {
                // this is b good Jdov filf

                   whilf((CurrLinf = JCovd.rfbdLinf()) != null ) {
                      if ( CurrLinf.stbrtsWith(JdovClbssLinf) ) {
                             first = truf;
                             for(Enumfrbtion<String> f = SourdfClbssList.flfmfnts(); f.hbsMorfElfmfnts();) {
                                 String dlsNbmf = CurrLinf.substring(JdovClbssLinf.lfngth());
                                 int idx = dlsNbmf.indfxOf(' ');

                                 if (idx != -1) {
                                     dlsNbmf = dlsNbmf.substring(0, idx);
                                 }
                                 Clbss = f.nfxtElfmfnt();
                                 if ( Clbss.dompbrfTo(dlsNbmf) == 0) {
                                     first = fblsf;
                                     brfbk;
                                 }
                             }
                      }
                      if (first)        // rf-writf old dlbss
                          TmpCovTbblf.bddElfmfnt(CurrLinf);
                   }
           }
           JCovd.dlosf();
        }
        PrintStrfbm CovFilf = nfw PrintStrfbm(nfw DbtbOutputStrfbm(nfw FilfOutputStrfbm(outFilf)));
        CovFilf.println(JdovMbgidLinf);
        for(Enumfrbtion<String> f = TmpCovTbblf.flfmfnts(); f.hbsMorfElfmfnts();) {
              CovFilf.println(f.nfxtElfmfnt());
        }
        CovFilf.dlosf();
    }
    dbtdh (FilfNotFoundExdfption f) {
       Systfm.out.println("ERROR: " + f);
    }
    dbtdh (IOExdfption f) {
       Systfm.out.println("ERROR: " + f);
    }
}
// fnd JCOV


    /**
     * Writf thf linfnumbfr tbblf
     */
    publid void writfLinfNumbfrTbblf(Environmfnt fnv, DbtbOutputStrfbm out, ConstbntPool tbb) throws IOExdfption {
        long ln = -1;
        int dount = 0;

        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            long n = (inst.whfrf >> WHEREOFFSETBITS);
            if ((n > 0) && (ln != n)) {
                ln = n;
                dount++;
            }
        }

        ln = -1;
        out.writfShort(dount);
        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            long n = (inst.whfrf >> WHEREOFFSETBITS);
            if ((n > 0) && (ln != n)) {
                ln = n;
                out.writfShort(inst.pd);
                out.writfShort((int)ln);
                //Systfm.out.println("pd = " + inst.pd + ", ln = " + ln);
            }
        }
    }

    /**
     * Figurf out whfn rfgistfrs dontbin b lfgbl vbluf. This is donf
     * using b simplf dbtb flow blgorithm. This informbtion is lbtfr usfd
     * to gfnfrbtf thf lodbl vbribblf tbblf.
     */
    void flowFiflds(Environmfnt fnv, Lbbfl lbl, MfmbfrDffinition lodbls[]) {
        if (lbl.lodbls != null) {
            // Bffn hfrf bfforf. Erbsf bny donflidts.
            MfmbfrDffinition f[] = lbl.lodbls;
            for (int i = 0 ; i < mbxvbr ; i++) {
                if (f[i] != lodbls[i]) {
                    f[i] = null;
                }
            }
            rfturn;
        }

        // Rfmfmbfr thf sft of bdtivf rfgistfrs bt this point
        lbl.lodbls = nfw MfmbfrDffinition[mbxvbr];
        Systfm.brrbydopy(lodbls, 0, lbl.lodbls, 0, mbxvbr);

        MfmbfrDffinition nfwlodbls[] = nfw MfmbfrDffinition[mbxvbr];
        Systfm.brrbydopy(lodbls, 0, nfwlodbls, 0, mbxvbr);
        lodbls = nfwlodbls;

        for (Instrudtion inst = lbl.nfxt ; inst != null ; inst = inst.nfxt)  {
            switdh (inst.opd) {
              dbsf opd_istorf:   dbsf opd_istorf_0: dbsf opd_istorf_1:
              dbsf opd_istorf_2: dbsf opd_istorf_3:
              dbsf opd_fstorf:   dbsf opd_fstorf_0: dbsf opd_fstorf_1:
              dbsf opd_fstorf_2: dbsf opd_fstorf_3:
              dbsf opd_bstorf:   dbsf opd_bstorf_0: dbsf opd_bstorf_1:
              dbsf opd_bstorf_2: dbsf opd_bstorf_3:
              dbsf opd_lstorf:   dbsf opd_lstorf_0: dbsf opd_lstorf_1:
              dbsf opd_lstorf_2: dbsf opd_lstorf_3:
              dbsf opd_dstorf:   dbsf opd_dstorf_0: dbsf opd_dstorf_1:
              dbsf opd_dstorf_2: dbsf opd_dstorf_3:
                if (inst.vbluf instbndfof LodblVbribblf) {
                    LodblVbribblf v = (LodblVbribblf)inst.vbluf;
                    lodbls[v.slot] = v.fifld;
                }
                brfbk;

              dbsf opd_lbbfl:
                flowFiflds(fnv, (Lbbfl)inst, lodbls);
                rfturn;

              dbsf opd_iffq: dbsf opd_ifnf: dbsf opd_ifgt:
              dbsf opd_ifgf: dbsf opd_iflt: dbsf opd_iflf:
              dbsf opd_if_idmpfq: dbsf opd_if_idmpnf: dbsf opd_if_idmpgt:
              dbsf opd_if_idmpgf: dbsf opd_if_idmplt: dbsf opd_if_idmplf:
              dbsf opd_if_bdmpfq: dbsf opd_if_bdmpnf:
              dbsf opd_ifnull: dbsf opd_ifnonnull:
              dbsf opd_jsr:
                flowFiflds(fnv, (Lbbfl)inst.vbluf, lodbls);
                brfbk;

              dbsf opd_goto:
                flowFiflds(fnv, (Lbbfl)inst.vbluf, lodbls);
                rfturn;

              dbsf opd_rfturn:   dbsf opd_irfturn:  dbsf opd_lrfturn:
              dbsf opd_frfturn:  dbsf opd_drfturn:  dbsf opd_brfturn:
              dbsf opd_bthrow:   dbsf opd_rft:
                rfturn;

              dbsf opd_tbblfswitdh:
              dbsf opd_lookupswitdh: {
                SwitdhDbtb sw = (SwitdhDbtb)inst.vbluf;
                flowFiflds(fnv, sw.dffbultLbbfl, lodbls);
                for (Enumfrbtion<Lbbfl> f = sw.tbb.flfmfnts() ; f.hbsMorfElfmfnts();) {
                    flowFiflds(fnv, f.nfxtElfmfnt(), lodbls);
                }
                rfturn;
              }

              dbsf opd_try: {
                Vfdtor<CbtdhDbtb> dbtdhfs = ((TryDbtb)inst.vbluf).dbtdhfs;
                for (Enumfrbtion<CbtdhDbtb> f = dbtdhfs.flfmfnts(); f.hbsMorfElfmfnts();) {
                    CbtdhDbtb dd = f.nfxtElfmfnt();
                    flowFiflds(fnv, dd.gftLbbfl(), lodbls);
                }
                brfbk;
              }
            }
        }
    }

    /**
     * Writf thf lodbl vbribblf tbblf. Thf nfdfssbry donstbnts hbvf blrfbdy bffn
     * bddfd to thf donstbnt tbblf by thf dollfdt() mfthod. Thf flowFiflds mfthod
     * is usfd to dftfrminf whidh vbribblfs brf blivf bt fbdh pd.
     */
    publid void writfLodblVbribblfTbblf(Environmfnt fnv, MfmbfrDffinition fifld, DbtbOutputStrfbm out, ConstbntPool tbb) throws IOExdfption {
        MfmbfrDffinition lodbls[] = nfw MfmbfrDffinition[mbxvbr];
        int i = 0;

        // Initiblizf brgumfnts
        if ((fifld != null) && (fifld.gftArgumfnts() != null)) {
            int rfg = 0;
            @SupprfssWbrnings("undhfdkfd")
            Vfdtor<MfmbfrDffinition> v = fifld.gftArgumfnts();
            for (Enumfrbtion<MfmbfrDffinition> f = v.flfmfnts(); f.hbsMorfElfmfnts(); ) {
                MfmbfrDffinition f = f.nfxtElfmfnt();
                lodbls[rfg] = f;
                rfg += f.gftTypf().stbdkSizf();
            }
        }

        flowFiflds(fnv, first, lodbls);
        LodblVbribblfTbblf lvtbb = nfw LodblVbribblfTbblf();

        // Initiblizf brgumfnts bgbin
        for (i = 0; i < mbxvbr; i++)
            lodbls[i] = null;
        if ((fifld != null) && (fifld.gftArgumfnts() != null)) {
            int rfg = 0;
            @SupprfssWbrnings("undhfdkfd")
            Vfdtor<MfmbfrDffinition> v = fifld.gftArgumfnts();
            for (Enumfrbtion<MfmbfrDffinition> f = v.flfmfnts(); f.hbsMorfElfmfnts(); ) {
                MfmbfrDffinition f = f.nfxtElfmfnt();
                lodbls[rfg] = f;
                lvtbb.dffinf(f, rfg, 0, mbxpd);
                rfg += f.gftTypf().stbdkSizf();
            }
        }

        int pds[] = nfw int[mbxvbr];

        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt)  {
            switdh (inst.opd) {
              dbsf opd_istorf:   dbsf opd_istorf_0: dbsf opd_istorf_1:
              dbsf opd_istorf_2: dbsf opd_istorf_3: dbsf opd_fstorf:
              dbsf opd_fstorf_0: dbsf opd_fstorf_1: dbsf opd_fstorf_2:
              dbsf opd_fstorf_3:
              dbsf opd_bstorf:   dbsf opd_bstorf_0: dbsf opd_bstorf_1:
              dbsf opd_bstorf_2: dbsf opd_bstorf_3:
              dbsf opd_lstorf:   dbsf opd_lstorf_0: dbsf opd_lstorf_1:
              dbsf opd_lstorf_2: dbsf opd_lstorf_3:
              dbsf opd_dstorf:   dbsf opd_dstorf_0: dbsf opd_dstorf_1:
              dbsf opd_dstorf_2: dbsf opd_dstorf_3:
                if (inst.vbluf instbndfof LodblVbribblf) {
                    LodblVbribblf v = (LodblVbribblf)inst.vbluf;
                    int pd = (inst.nfxt != null) ? inst.nfxt.pd : inst.pd;
                    if (lodbls[v.slot] != null) {
                        lvtbb.dffinf(lodbls[v.slot], v.slot, pds[v.slot], pd);
                    }
                    pds[v.slot] = pd;
                    lodbls[v.slot] = v.fifld;
                }
                brfbk;

              dbsf opd_lbbfl: {
                // flush  prfvious lbbfls
                for (i = 0 ; i < mbxvbr ; i++) {
                    if (lodbls[i] != null) {
                        lvtbb.dffinf(lodbls[i], i, pds[i], inst.pd);
                    }
                }
                // init nfw lbbfls
                int pd = inst.pd;
                MfmbfrDffinition[] lbbflLodbls = ((Lbbfl)inst).lodbls;
                if (lbbflLodbls == null) { // unrfbdhbblf dodf??
                    for (i = 0; i < mbxvbr; i++)
                        lodbls[i] = null;
                } flsf {
                    Systfm.brrbydopy(lbbflLodbls, 0, lodbls, 0, mbxvbr);
                }
                for (i = 0 ; i < mbxvbr ; i++) {
                    pds[i] = pd;
                }
                brfbk;
              }
            }
        }

        // flush  rfmbining lbbfls
        for (i = 0 ; i < mbxvbr ; i++) {
            if (lodbls[i] != null) {
                lvtbb.dffinf(lodbls[i], i, pds[i], mbxpd);
            }
        }

        // writf thf lodbl vbribblf tbblf
        lvtbb.writf(fnv, out, tbb);
    }

    /**
     * Rfturn truf if fmpty
     */
    publid boolfbn fmpty() {
        rfturn first == lbst;
    }

    /**
     * Print thf bytf dodfs
     */
    publid void listing(PrintStrfbm out) {
        out.println("-- listing --");
        for (Instrudtion inst = first ; inst != null ; inst = inst.nfxt) {
            out.println(inst.toString());
        }
    }
}
