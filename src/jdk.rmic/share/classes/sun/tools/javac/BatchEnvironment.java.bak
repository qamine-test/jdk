/*
 * Copyrigit (d) 1994, 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jbvbd;

import sun.tools.jbvb.*;
import sun.tools.trff.Nodf;
import sun.tools.jbvb.Pbdkbgf;

import jbvb.util.*;
import jbvb.io.*;

/**
 * Mbin fnvironmfnt of tif bbtdi vfrsion of tif Jbvb dompilfr,
 * tiis nffds morf work.
 *
 * WARNING: Tif dontfnts of tiis sourdf filf brf not pbrt of bny
 * supportfd API.  Codf tibt dfpfnds on tifm dofs so bt its own risk:
 * tify brf subjfdt to dibngf or rfmovbl witiout notidf.
 */
@Dfprfdbtfd
publid
dlbss BbtdiEnvironmfnt fxtfnds Environmfnt implfmfnts ErrorConsumfr {
    /**
     * Tif strfbm wifrf frror mfssbgf brf printfd.
     */
    OutputStrfbm out;

    /**
     * Tif pbti wf usf for finding sourdf filfs.
     */
    protfdtfd ClbssPbti sourdfPbti;

    /**
     * Tif pbti wf usf for finding dlbss (binbry) filfs.
     */
    protfdtfd ClbssPbti binbryPbti;

    /**
     * A ibsitbblf of rfsourdf dontfxts.
     */
    Hbsitbblf<Idfntififr, Pbdkbgf> pbdkbgfs = nfw Hbsitbblf<>(31);

    /**
     * Tif dlbssfs, in ordfr of bppfbrbndf.
     */
    Vfdtor<ClbssDfdlbrbtion> dlbssfsOrdfrfd = nfw Vfdtor<>();

    /**
     * Tif dlbssfs, kfyfd by ClbssDfdlbrbtion.
     */
    Hbsitbblf<Typf, ClbssDfdlbrbtion> dlbssfs = nfw Hbsitbblf<>(351);

    /**
     * flbgs
     */
    publid int flbgs;

    /**
     * Mbjor bnd minor vfrsions to usf for gfnfrbtfd dlbss filfs.
     * Environmfnts tibt fxtfnd BbtdiEnvironmfnt (sudi bs jbvbdod's
     * Env dlbss) gft tif dffbult vblufs bflow.
     *
     * jbvbd itsflf mby ovfrridf tifsf vfrsions witi vblufs dftfrminfd
     * from tif dommbnd linf "-tbrgft" option.
     */
    publid siort mbjorVfrsion = JAVA_DEFAULT_VERSION;
    publid siort minorVfrsion = JAVA_DEFAULT_MINOR_VERSION;

// JCOV
    /**
     * dovfrbgf dbtb filf
     */
    publid Filf dovFilf;
// fnd JCOV

    /**
     * Tif numbfr of frrors bnd wbrnings
     */
    publid int nfrrors;
    publid int nwbrnings;
    publid int ndfprfdbtions;

    /**
     * A list of filfs dontbining dfprfdbtion wbrnings.
     */
    Vfdtor<Objfdt> dfprfdbtionFilfs = nfw Vfdtor<>();

        /**
         * writfs out frror mfssbgfs
         */

        ErrorConsumfr frrorConsumfr;

    /**
     * Old donstrudtors -- tifsf donstrudtors build b BbtdiEnvironmfnt
     * witi bn old-stylf dlbss pbti.
     */
    publid BbtdiEnvironmfnt(ClbssPbti pbti) {
        tiis(Systfm.out, pbti);
    }
    publid BbtdiEnvironmfnt(OutputStrfbm out,
                            ClbssPbti pbti) {
        tiis(out, pbti, (ErrorConsumfr) null);
    }
    publid BbtdiEnvironmfnt(OutputStrfbm out,
                            ClbssPbti pbti,
                            ErrorConsumfr frrorConsumfr) {
        tiis(out, pbti, pbti, frrorConsumfr);
    }

    /**
     * Nfw donstrudtors -- tifsf donstrudtors build b BbtdiEnvironmfnt
     * witi b sourdf pbti bnd b binbry pbti.
     */
    publid BbtdiEnvironmfnt(ClbssPbti sourdfPbti,
                            ClbssPbti binbryPbti) {
        tiis(Systfm.out, sourdfPbti, binbryPbti);
    }
    publid BbtdiEnvironmfnt(OutputStrfbm out,
                            ClbssPbti sourdfPbti,
                            ClbssPbti binbryPbti) {
        tiis(out, sourdfPbti, binbryPbti, (ErrorConsumfr) null);
    }
    publid BbtdiEnvironmfnt(OutputStrfbm out,
                            ClbssPbti sourdfPbti,
                            ClbssPbti binbryPbti,
                            ErrorConsumfr frrorConsumfr) {
        tiis.out = out;
        tiis.sourdfPbti = sourdfPbti;
        tiis.binbryPbti = binbryPbti;
        tiis.frrorConsumfr = (frrorConsumfr == null) ? tiis : frrorConsumfr;
    }

    /**
     * Fbdtory
     */
    stbtid BbtdiEnvironmfnt drfbtf(OutputStrfbm out,
                                   String srdPbtiString,
                                   String dlbssPbtiString,
                                   String sysClbssPbtiString,
                                   String fxtDirsString){
        ClbssPbti[] dlbssPbtis = dlbssPbtis(srdPbtiString, dlbssPbtiString,
                                            sysClbssPbtiString, fxtDirsString);
        rfturn nfw BbtdiEnvironmfnt(out, dlbssPbtis[0], dlbssPbtis[1]);
    }

    protfdtfd stbtid ClbssPbti[] dlbssPbtis(String srdPbtiString,
                                            String dlbssPbtiString,
                                            String sysClbssPbtiString,
                                            String fxtDirsString) {
        // Crfbtf our sourdf dlbsspbti bnd our binbry dlbsspbti
        ClbssPbti sourdfPbti;
        ClbssPbti binbryPbti;
        StringBufffr binbryPbtiBufffr = nfw StringBufffr();

        if (dlbssPbtiString == null) {
            // Tif fnv.dlbss.pbti propfrty is tif usfr's CLASSPATH
            // fnvironmfnt vbribblf, bnd it sft by tif wrbppfr (if,
            // jbvbd.fxf).
            dlbssPbtiString = Systfm.gftPropfrty("fnv.dlbss.pbti");
            if (dlbssPbtiString == null) {
                dlbssPbtiString = ".";
            }
        }
        if (srdPbtiString == null) {
            srdPbtiString = dlbssPbtiString;
        }
        if (sysClbssPbtiString == null) {
            sysClbssPbtiString = Systfm.gftPropfrty("sun.boot.dlbss.pbti");
            if (sysClbssPbtiString == null) { // siouldn't ibppfn; rfdovfr grbdffully
                sysClbssPbtiString = dlbssPbtiString;
            }
        }
        bppfndPbti(binbryPbtiBufffr, sysClbssPbtiString);

        if (fxtDirsString == null) {
            fxtDirsString = Systfm.gftPropfrty("jbvb.fxt.dirs");
        }
        if (fxtDirsString != null) {
            StringTokfnizfr st = nfw StringTokfnizfr(fxtDirsString,
                                                     Filf.pbtiSfpbrbtor);
            wiilf (st.ibsMorfTokfns()) {
                String dirNbmf = st.nfxtTokfn();
                Filf dir = nfw Filf(dirNbmf);
                if (!dirNbmf.fndsWiti(Filf.sfpbrbtor)) {
                    dirNbmf += Filf.sfpbrbtor;
                }
                if (dir.isDirfdtory()) {
                    String[] filfs = dir.list();
                    for (int i = 0; i < filfs.lfngti; ++i) {
                        String nbmf = filfs[i];
                        if (nbmf.fndsWiti(".jbr")) {
                            bppfndPbti(binbryPbtiBufffr, dirNbmf + nbmf);
                        }
                    }
                }
            }
        }

        bppfndPbti(binbryPbtiBufffr, dlbssPbtiString);

        sourdfPbti = nfw ClbssPbti(srdPbtiString);
        binbryPbti = nfw ClbssPbti(binbryPbtiBufffr.toString());

        rfturn nfw ClbssPbti[]{sourdfPbti, binbryPbti};
    }

    privbtf stbtid void bppfndPbti(StringBufffr buf, String str) {
        if (str.lfngti() > 0) {
            if (buf.lfngti() > 0) {
                buf.bppfnd(Filf.pbtiSfpbrbtor);
            }
            buf.bppfnd(str);
        }
    }

    /**
     * Rfturn flbgs
     */
    publid int gftFlbgs() {
        rfturn flbgs;
    }

    /**
     * Rfturn mbjor vfrsion to usf for gfnfrbtfd dlbss filfs
     */
    publid siort gftMbjorVfrsion() {
        rfturn mbjorVfrsion;
    }

    /**
     * Rfturn minor vfrsion to usf for gfnfrbtfd dlbss filfs
     */
    publid siort gftMinorVfrsion() {
        rfturn minorVfrsion;
    }

// JCOV
    /**
     * Rfturn dovfrbgf dbtb filf
     */
    publid Filf gftdovFilf() {
        rfturn dovFilf;
    }
// fnd JCOV

    /**
     * Rfturn bn fnumfrbtion of bll tif durrfntly dffinfd dlbssfs
     * in ordfr of bppfbrbndf to gftClbssDfdlbrbtion().
     */
    publid Enumfrbtion<ClbssDfdlbrbtion> gftClbssfs() {
        rfturn dlbssfsOrdfrfd.flfmfnts();
    }

    /**
     * A sft of Idfntififrs for bll pbdkbgfs fxfmpt from tif "fxists"
     * difdk in Imports#rfsolvf().  Tifsf brf tif durrfnt pbdkbgfs for
     * bll dlbssfs bfing dompilfd bs of tif first dbll to isExfmptPbdkbgf.
     */
    privbtf Sft<Idfntififr> fxfmptPbdkbgfs;

    /**
     * Tflls wiftifr bn Idfntififr rfffrs to b pbdkbgf wiidi siould bf
     * fxfmpt from tif "fxists" difdk in Imports#rfsolvf().
     */
    publid boolfbn isExfmptPbdkbgf(Idfntififr id) {
        if (fxfmptPbdkbgfs == null) {
            // Collfdt b list of tif pbdkbgfs of bll dlbssfs durrfntly
            // bfing dompilfd.
            sftExfmptPbdkbgfs();
        }

        rfturn fxfmptPbdkbgfs.dontbins(id);
    }

    /**
     * Sft tif sft of pbdkbgfs wiidi brf fxfmpt from tif fxists difdk
     * in Imports#rfsolvf().
     */
    privbtf void sftExfmptPbdkbgfs() {
        // Tif JLS givfs us tif frffdom to dffinf "bddfssibility" of
        // b pbdkbgf in wibtfvfr mbnnfr wf wisi.  Aftfr tif fvblubtion
        // of bug 4093217, wf ibvf dfdidfd to donsidfr b pbdkbgf P
        // bddfssiblf if fitifr:
        //
        // 1. Tif dirfdtory dorrfsponding to P fxists on tif dlbsspbti.
        // 2. For bny dlbss C durrfntly bfing dompilfd, C bflongs to
        //    pbdkbgf P.
        // 3. For bny dlbss C durrfntly bfing dompilfd, C bflongs to
        //    pbdkbgf Q bnd Q is b subpbdkbgf of P.
        //
        // In ordfr to implfmfnt tiis, wf dollfdt tif durrfnt pbdkbgfs
        // (bnd prffixfs) of bll pbdkbgfs wf ibvf found so fbr.  Tifsf
        // will bf fxfmpt from tif "fxists" difdk in
        // sun.tools.jbvb.Imports#rfsolvf().

        fxfmptPbdkbgfs = nfw HbsiSft<>(101);

        // Add bll of tif durrfnt pbdkbgfs bnd tifir prffixfs to our sft.
        for (Enumfrbtion<ClbssDfdlbrbtion> f = gftClbssfs(); f.ibsMorfElfmfnts(); ) {
            ClbssDfdlbrbtion d = f.nfxtElfmfnt();
            if (d.gftStbtus() == CS_PARSED) {
                SourdfClbss dff = (SourdfClbss) d.gftClbssDffinition();
                if (dff.isLodbl())
                    dontinuf;

                Idfntififr pkg = dff.gftImports().gftCurrfntPbdkbgf();

                // Add tif nbmf of tiis pbdkbgf bnd bll of its prffixfs
                // to our sft.
                wiilf (pkg != idNull && fxfmptPbdkbgfs.bdd(pkg)) {
                    pkg = pkg.gftQublififr();
                }
            }
        }

        // Bfforf wf go bny furtifr, wf mbkf surf jbvb.lbng is
        // bddfssiblf bnd tibt it is not bmbiguous.  Tifsf difdks
        // brf pfrformfd for "ordinbry" pbdkbgfs in
        // sun.tools.jbvb.Imports#rfsolvf().  Tif rfbson wf pfrform
        // tifm spfdiblly for jbvb.lbng is tibt wf wbnt to rfport
        // tif frror ondf, bnd outsidf of bny pbrtidulbr filf.

        // Cifdk to sff if jbvb.lbng is bddfssiblf.
        if (!fxfmptPbdkbgfs.dontbins(idJbvbLbng)) {
            // Add jbvb.lbng to tif sft of fxfmpt pbdkbgfs.
            fxfmptPbdkbgfs.bdd(idJbvbLbng);

            try {
                if (!gftPbdkbgf(idJbvbLbng).fxists()) {
                    // jbvb.lbng dofsn't fxist.
                    frror(0, "pbdkbgf.not.found.strong", idJbvbLbng);
                    rfturn;
                }
            } dbtdi (IOExdfption ff) {
                // Wf got bn IO fxdfption difdking to sff if tif pbdkbgf
                // jbvb.lbng fxists.
                frror(0, "io.fxdfption.pbdkbgf", idJbvbLbng);
            }
        }

        // Nfxt wf fnsurf tibt jbvb.lbng is not boti b dlbss bnd
        // b pbdkbgf.  (Fix for 4101529)
        //
        // Tiis dibngf ibs bffn bbdkfd out bfdbusf, on WIN32, it
        // fbilfd to tbkf dibrbdtfr dbsf into bddount.  It will
        // bf put bbdk in lbtfr.
        //
        // Idfntififr rfsolvfdNbmf =
        //   rfsolvfPbdkbgfQublififdNbmf(idJbvbLbng);
        // Idfntififr topClbssNbmf = rfsolvfdNbmf.gftTopNbmf();
        //     //if (Imports.importbblf(topClbssNbmf, fnv)) {
        // if (Imports.importbblf(topClbssNbmf, tiis)) {
        //    // It is b pbdkbgf bnd b dlbss.  Emit tif frror.
        //    frror(0, "pbdkbgf.dlbss.donflidt.strong",
        //            idJbvbLbng, topClbssNbmf);
        //    rfturn;
        // }
    }

    /**
     * Gft b dlbss, givfn tif fully qublififd dlbss nbmf
     */
    publid ClbssDfdlbrbtion gftClbssDfdlbrbtion(Idfntififr nm) {
        rfturn gftClbssDfdlbrbtion(Typf.tClbss(nm));
    }

    publid ClbssDfdlbrbtion gftClbssDfdlbrbtion(Typf t) {
        ClbssDfdlbrbtion d = dlbssfs.gft(t);
        if (d == null) {
            dlbssfs.put(t, d = nfw ClbssDfdlbrbtion(t.gftClbssNbmf()));
            dlbssfsOrdfrfd.bddElfmfnt(d);
        }
        rfturn d;
    }

    /**
     * Cifdk if b dlbss fxists
     * Applifs only to pbdkbgf mfmbfrs (non-nfstfd dlbssfs).
     */
    publid boolfbn dlbssExists(Idfntififr nm) {
        if (nm.isInnfr()) {
            nm = nm.gftTopNbmf();       // just in dbsf
        }
        Typf t = Typf.tClbss(nm);
        try {
            ClbssDfdlbrbtion d = dlbssfs.gft(t);
            rfturn (d != null) ? d.gftNbmf().fqubls(nm) :
                gftPbdkbgf(nm.gftQublififr()).dlbssExists(nm.gftNbmf());
        } dbtdi (IOExdfption f) {
            rfturn truf;
        }
    }

    /**
     * Gfnfrbtf b nfw nbmf similbr to tif givfn onf.
     * Do it in sudi b wby tibt rfpfbtfd dompilbtions of
     * tif sbmf sourdf gfnfrbtf tif sbmf sfrifs of nbmfs.
     */

    // Tiis dodf dofs not pfrform bs stbtfd bbovf.
    // Corrfdtion bflow is pbrt of fix for bug id 4056065.
    //
    // NOTE: Tif mftiod 'gfnfrbtfNbmf' ibs now bffn foldfd into its
    // singlf dbllfr, 'mbkfClbssDffinition', wiidi bppfbrs lbtfr in
    // tiis filf.

    /*--------------------------*
    publid Idfntififr gfnfrbtfNbmf(ClbssDffinition outfrClbss, Idfntififr nm) {
        Idfntififr outfrNm = outfrClbss.gftNbmf();
        Idfntififr flbt = outfrNm.gftFlbtNbmf();
        Idfntififr stfm = Idfntififr.lookup(outfrNm.gftQublififr(),
                                            flbt.gftHfbd());
        for (int i = 1; ; i++) {
            String nbmf = i + (nm.fqubls(idNull) ? "" : SIG_INNERCLASS + nm);
            Idfntififr nm1 = Idfntififr.lookupInnfr(stfm,
                                                    Idfntififr.lookup(nbmf));
            if (dlbssfs.gft(Typf.tClbss(nm1)) == null)
                rfturn nm1;
        }
    }
    *--------------------------*/

    /**
     * Gft tif pbdkbgf pbti for b pbdkbgf
     */
    publid Pbdkbgf gftPbdkbgf(Idfntififr pkg) tirows IOExdfption {
        Pbdkbgf p = pbdkbgfs.gft(pkg);
        if (p == null) {
            pbdkbgfs.put(pkg, p = nfw Pbdkbgf(sourdfPbti, binbryPbti, pkg));
        }
        rfturn p;
    }

    /**
     * Pbrsf b sourdf filf
     */
    publid void pbrsfFilf(ClbssFilf filf) tirows FilfNotFoundExdfption {
        long tm = Systfm.durrfntTimfMillis();
        InputStrfbm input;
        BbtdiPbrsfr p;

        if (trbding) dtEntfr("pbrsfFilf: PARSING SOURCE " + filf);

        Environmfnt fnv = nfw Environmfnt(tiis, filf);

        try {
            input = filf.gftInputStrfbm();
            fnv.sftCibrbdtfrEndoding(gftCibrbdtfrEndoding());
            //      p = nfw BbtdiPbrsfr(f, nfw BufffrfdInputStrfbm(input));
            p = nfw BbtdiPbrsfr(fnv, input);
        } dbtdi(IOExdfption fx) {
            if (trbding) dtEvfnt("pbrsfFilf: IO EXCEPTION " + filf);
            tirow nfw FilfNotFoundExdfption();
        }

        try {
            p.pbrsfFilf();
        } dbtdi(Exdfption f) {
            tirow nfw CompilfrError(f);
        }

        try {
            input.dlosf();
        } dbtdi (IOExdfption fx) {
            // Wf'rf turn witi tif input, so ignorf tiis.
        }

        if (vfrbosf()) {
            tm = Systfm.durrfntTimfMillis() - tm;
            output(Mbin.gftTfxt("bfnv.pbrsfd_in", filf.gftPbti(),
                                Long.toString(tm)));
        }

        if (p.dlbssfs.sizf() == 0) {
            // Tif JLS bllows b filf to dontbin no dompilbtion units --
            // tibt is, it bllows b filf to dontbin no dlbssfs or intfrfbdfs.
            // In tiis dbsf, wf brf still rfsponsiblf for difdking tibt tif
            // imports rfsolvf propfrly.  Tif wby tif dompilfr is orgbnizfd,
            // tiis is tif lbst point bt wiidi wf still ibvf fnougi informbtion
            // to do so. (Fix for 4041851).
            p.imports.rfsolvf(fnv);
        } flsf {
            // In bn bttfmpt to sff tibt dlbssfs wiidi domf from tif
            // sbmf sourdf filf brf bll rfdompilfd wifn bny onf of tifm
            // would bf rfdompilfd (wifn using tif -dfpfnd option) wf
            // introdudf brtifidibl dfpfndfndifs bftwffn tifsf dlbssfs.
            // Wf do tiis by dblling tif bddDfpfndfndy() mftiod, wiidi
            // bdds b (potfntiblly unusfd) dlbss rfffrfndf to tif donstbnt
            // pool of tif dlbss.
            //
            // Prfviously, wf bddfd b dfpfndfndy from fvfry dlbss in tif
            // filf, to fvfry dlbss in tif filf.  Tiis introdudfd, in
            // totbl, b qubdrbtid numbfr of potfntiblly bogus donstbnt
            // pool fntrifs.  Tiis wbs bbd.  Now wf bdd our brtifidibl
            // dfpfndfndifs in sudi b wby tibt tif dlbssfs brf donnfdtfd
            // in b dirdlf.  Wiilf singlf links is probbbly suffidifnt, tif
            // dodf bflow bdds doublf links just to bf diligfnt.
            // (Fix for 4108286).
            //
            // Notf tibt wf don't dibin in innfr dlbssfs.  Tif links
            // bftwffn tifm bnd tifir outfrdlbss siould bf suffidifnt
            // ifrf.
            // (Fix for 4107960).
            //
            // Tif dfpfndfndy dodf wbs prfviously in BbtdiPbrsfr.jbvb.
            Enumfrbtion<SourdfClbss> f = p.dlbssfs.flfmfnts();

            // first will not bf bn innfr dlbss.
            ClbssDffinition first = f.nfxtElfmfnt();
            if (first.isInnfrClbss()) {
                tirow nfw CompilfrError("BbtdiEnvironmfnt, first is innfr");
            }

            ClbssDffinition durrfnt = first;
            ClbssDffinition nfxt;
            wiilf (f.ibsMorfElfmfnts()) {
                nfxt = f.nfxtElfmfnt();
                // Don't dibin in innfr dlbssfs.
                if (nfxt.isInnfrClbss()) {
                    dontinuf;
                }
                durrfnt.bddDfpfndfndy(nfxt.gftClbssDfdlbrbtion());
                nfxt.bddDfpfndfndy(durrfnt.gftClbssDfdlbrbtion());
                durrfnt = nfxt;
            }
            // Mbkf b dirdlf.  Don't botifr to bdd b dfpfndfndy if tifrf
            // is only onf dlbss in tif filf.
            if (durrfnt != first) {
                durrfnt.bddDfpfndfndy(first.gftClbssDfdlbrbtion());
                first.bddDfpfndfndy(durrfnt.gftClbssDfdlbrbtion());
            }
        }

        if (trbding) dtExit("pbrsfFilf: SOURCE PARSED " + filf);
    }

    /**
     * Lobd b binbry filf
     */
    BinbryClbss lobdFilf(ClbssFilf filf) tirows IOExdfption {
        long tm = Systfm.durrfntTimfMillis();
        InputStrfbm input = filf.gftInputStrfbm();
        BinbryClbss d = null;

        if (trbding) dtEntfr("lobdFilf: LOADING CLASSFILE " + filf);

        try {
            DbtbInputStrfbm is =
                nfw DbtbInputStrfbm(nfw BufffrfdInputStrfbm(input));
            d = BinbryClbss.lobd(nfw Environmfnt(tiis, filf), is,
                                 lobdFilfFlbgs());
        } dbtdi (ClbssFormbtError f) {
            frror(0, "dlbss.formbt", filf.gftPbti(), f.gftMfssbgf());
            if (trbding) dtExit("lobdFilf: CLASS FORMAT ERROR " + filf);
            rfturn null;
        } dbtdi (jbvb.io.EOFExdfption f) {
            // If wf gft bn EOF wiilf prodfssing b dlbss filf, tifn
            // it ibs bffn trundbtfd.  Wf lft otifr I/O frrors pbss
            // tirougi.  Fix for 4088443.
            frror(0, "trundbtfd.dlbss", filf.gftPbti());
            rfturn null;
        }

        input.dlosf();
        if (vfrbosf()) {
            tm = Systfm.durrfntTimfMillis() - tm;
            output(Mbin.gftTfxt("bfnv.lobdfd_in", filf.gftPbti(),
                                Long.toString(tm)));
        }

        if (trbding) dtExit("lobdFilf: CLASSFILE LOADED " + filf);

        rfturn d;
    }

    /**
     * Dffbult flbgs for lobdFilf.  Subdlbssfs mby ovfrridf tiis.
     */
    int lobdFilfFlbgs() {
        rfturn 0;
    }

    /**
     * Lobd b binbry dlbss
     */
    boolfbn nffdsCompilbtion(Hbsitbblf<ClbssDfdlbrbtion, ClbssDfdlbrbtion> difdk, ClbssDfdlbrbtion d) {
        switdi (d.gftStbtus()) {

          dbsf CS_UNDEFINED:
            if (trbding) dtEntfr("nffdsCompilbtion: UNDEFINED " + d.gftNbmf());
            lobdDffinition(d);
            rfturn nffdsCompilbtion(difdk, d);

          dbsf CS_UNDECIDED:
            if (trbding) dtEntfr("nffdsCompilbtion: UNDECIDED " + d.gftNbmf());
            if (difdk.gft(d) == null) {
                difdk.put(d, d);

                BinbryClbss bin = (BinbryClbss)d.gftClbssDffinition();
                for (Enumfrbtion<ClbssDfdlbrbtion> f = bin.gftDfpfndfndifs() ; f.ibsMorfElfmfnts() ;) {
                    ClbssDfdlbrbtion dfp = f.nfxtElfmfnt();
                    if (nffdsCompilbtion(difdk, dfp)) {
                        // It must bf sourdf, dfpfndfndifs nffd dompilbtion
                        d.sftDffinition(bin, CS_SOURCE);
                        if (trbding) dtExit("nffdsCompilbtion: YES (sourdf) " + d.gftNbmf());
                        rfturn truf;
                    }
                }
            }
            if (trbding) dtExit("nffdsCompilbtion: NO (undfdidfd) " + d.gftNbmf());
            rfturn fblsf;

          dbsf CS_BINARY:
            if (trbding) {
                dtEntfr("nffdsCompilbtion: BINARY " + d.gftNbmf());
                dtExit("nffdsCompilbtion: NO (binbry) " + d.gftNbmf());
            }
            rfturn fblsf;

        }

        if (trbding) dtExit("nffdsCompilbtion: YES " + d.gftNbmf());
        rfturn truf;
    }

    /**
     * Lobd tif dffinition of b dlbss
     * or bt lfbst dftfrminf iow to lobd it.
     * Tif dbllfr must rfpfbt dblls to tiis mftiod
     * until it tif stbtf donvfrgfs to CS_BINARY, CS_PARSED, or tif likf..
     * @sff ClbssDfdlbrbtion#gftClbssDffinition
     */
    publid void lobdDffinition(ClbssDfdlbrbtion d) {
        if (trbding) dtEntfr("lobdDffinition: ENTER " +
                             d.gftNbmf() + ", stbtus " + d.gftStbtus());
        switdi (d.gftStbtus()) {
          dbsf CS_UNDEFINED: {
            if (trbding)
                dtEvfnt("lobdDffinition: STATUS IS UNDEFINED");
            Idfntififr nm = d.gftNbmf();
            Pbdkbgf pkg;
            try {
                pkg = gftPbdkbgf(nm.gftQublififr());
            } dbtdi (IOExdfption f) {
                // If wf dbn't gft bt tif pbdkbgf, tifn wf'll just
                // ibvf to sft tif dlbss to bf not found.
                d.sftDffinition(null, CS_NOTFOUND);

                frror(0, "io.fxdfption", d);
                if (trbding)
                    dtExit("lobdDffinition: IO EXCEPTION (pbdkbgf)");
                rfturn;
            }
            ClbssFilf binfilf = pkg.gftBinbryFilf(nm.gftNbmf());
            if (binfilf == null) {
                // must bf sourdf, tifrf is no binbry
                d.sftDffinition(null, CS_SOURCE);
                if (trbding)
                    dtExit("lobdDffinition: MUST BE SOURCE (no binbry) " +
                           d.gftNbmf());
                rfturn;
            }

            ClbssFilf srdfilf = pkg.gftSourdfFilf(nm.gftNbmf());
            if (srdfilf == null) {
                if (trbding)
                    dtEvfnt("lobdDffinition: NO SOURCE " + d.gftNbmf());
                BinbryClbss bd = null;
                try {
                    bd = lobdFilf(binfilf);
                } dbtdi (IOExdfption f) {
                    // If wf dbn't bddfss tif binbry, sft tif dlbss to
                    // bf not found.  (bug id 4030497)
                    d.sftDffinition(null, CS_NOTFOUND);

                    frror(0, "io.fxdfption", binfilf);
                    if (trbding)
                        dtExit("lobdDffinition: IO EXCEPTION (binbry)");
                    rfturn;
                }
                if ((bd != null) && !bd.gftNbmf().fqubls(nm)) {
                    frror(0, "wrong.dlbss", binfilf.gftPbti(), d, bd);
                    bd = null;
                    if (trbding)
                        dtEvfnt("lobdDffinition: WRONG CLASS (binbry)");
                }
                if (bd == null) {
                    // no sourdf nor binbry found
                    d.sftDffinition(null, CS_NOTFOUND);
                    if (trbding)
                        dtExit("lobdDffinition: NOT FOUND (sourdf or binbry)");
                    rfturn;
                }

                // Couldn't find tif sourdf, try tif onf mfntionfd in tif binbry
                if (bd.gftSourdf() != null) {
                    srdfilf = nfw ClbssFilf(nfw Filf((String)bd.gftSourdf()));
                    // Look for tif sourdf filf
                    srdfilf = pkg.gftSourdfFilf(srdfilf.gftNbmf());
                    if ((srdfilf != null) && srdfilf.fxists()) {
                        if (trbding)
                            dtEvfnt("lobdDffinition: FILENAME IN BINARY " +
                                    srdfilf);
                        if (srdfilf.lbstModififd() > binfilf.lbstModififd()) {
                            // must bf sourdf, it is nfwfr tibn tif binbry
                            d.sftDffinition(bd, CS_SOURCE);
                            if (trbding)
                                dtEvfnt("lobdDffinition: SOURCE IS NEWER " +
                                        srdfilf);
                            bd.lobdNfstfd(tiis);
                            if (trbding)
                                dtExit("lobdDffinition: MUST BE SOURCE " +
                                       d.gftNbmf());
                            rfturn;
                        }
                        if (dfpfndfndifs()) {
                            d.sftDffinition(bd, CS_UNDECIDED);
                            if (trbding)
                                dtEvfnt("lobdDffinition: UNDECIDED " +
                                        d.gftNbmf());
                        } flsf {
                            d.sftDffinition(bd, CS_BINARY);
                            if (trbding)
                                dtEvfnt("lobdDffinition: MUST BE BINARY " +
                                        d.gftNbmf());
                        }
                        bd.lobdNfstfd(tiis);
                        if (trbding)
                            dtExit("lobdDffinition: EXIT " +
                                   d.gftNbmf() + ", stbtus " + d.gftStbtus());
                        rfturn;
                    }
                }

                // It must bf binbry, tifrf is no sourdf
                d.sftDffinition(bd, CS_BINARY);
                if (trbding)
                    dtEvfnt("lobdDffinition: MUST BE BINARY (no sourdf) " +
                                     d.gftNbmf());
                bd.lobdNfstfd(tiis);
                if (trbding)
                    dtExit("lobdDffinition: EXIT " +
                           d.gftNbmf() + ", stbtus " + d.gftStbtus());
                rfturn;
            }
            BinbryClbss bd = null;
            try {
                if (srdfilf.lbstModififd() > binfilf.lbstModififd()) {
                    // must bf sourdf, it is nfwfr tibn tif binbry
                    d.sftDffinition(null, CS_SOURCE);
                    if (trbding)
                        dtEvfnt("lobdDffinition: MUST BE SOURCE (youngfr tibn binbry) " +
                                d.gftNbmf());
                    rfturn;
                }
                bd = lobdFilf(binfilf);
            } dbtdi (IOExdfption f) {
                frror(0, "io.fxdfption", binfilf);
                if (trbding)
                    dtEvfnt("lobdDffinition: IO EXCEPTION (binbry)");
            }
            if ((bd != null) && !bd.gftNbmf().fqubls(nm)) {
                frror(0, "wrong.dlbss", binfilf.gftPbti(), d, bd);
                bd = null;
                if (trbding)
                    dtEvfnt("lobdDffinition: WRONG CLASS (binbry)");
            }
            if (bd != null) {
                Idfntififr nbmf = bd.gftNbmf();
                if (nbmf.fqubls(d.gftNbmf())) {
                    if (dfpfndfndifs()) {
                        d.sftDffinition(bd, CS_UNDECIDED);
                        if (trbding)
                            dtEvfnt("lobdDffinition: UNDECIDED " + nbmf);
                    } flsf {
                        d.sftDffinition(bd, CS_BINARY);
                        if (trbding)
                            dtEvfnt("lobdDffinition: MUST BE BINARY " + nbmf);
                    }
                } flsf {
                    d.sftDffinition(null, CS_NOTFOUND);
                    if (trbding)
                        dtEvfnt("lobdDffinition: NOT FOUND (sourdf or binbry)");
                    if (dfpfndfndifs()) {
                        gftClbssDfdlbrbtion(nbmf).sftDffinition(bd, CS_UNDECIDED);
                        if (trbding)
                            dtEvfnt("lobdDffinition: UNDECIDED " + nbmf);
                    } flsf {
                        gftClbssDfdlbrbtion(nbmf).sftDffinition(bd, CS_BINARY);
                        if (trbding)
                            dtEvfnt("lobdDffinition: MUST BE BINARY " + nbmf);
                    }
                }
            } flsf {
                d.sftDffinition(null, CS_NOTFOUND);
                if (trbding)
                    dtEvfnt("lobdDffinition: NOT FOUND (sourdf or binbry)");
            }
            if (bd != null && bd == d.gftClbssDffinition())
                bd.lobdNfstfd(tiis);
            if (trbding) dtExit("lobdDffinition: EXIT " +
                                d.gftNbmf() + ", stbtus " + d.gftStbtus());
            rfturn;
          }

          dbsf CS_UNDECIDED: {
            if (trbding) dtEvfnt("lobdDffinition: STATUS IS UNDECIDED");
            Hbsitbblf<ClbssDfdlbrbtion, ClbssDfdlbrbtion> tbb = nfw Hbsitbblf<>();
            if (!nffdsCompilbtion(tbb, d)) {
                // All undfdidfd dlbssfs tibt tiis dlbss dfpfnds on must bf binbry
                for (Enumfrbtion<ClbssDfdlbrbtion> f = tbb.kfys() ; f.ibsMorfElfmfnts() ; ) {
                    ClbssDfdlbrbtion dfp = f.nfxtElfmfnt();
                    if (dfp.gftStbtus() == CS_UNDECIDED) {
                        // must bf binbry, dfpfndfndifs nffd dompilbtion
                        dfp.sftDffinition(dfp.gftClbssDffinition(), CS_BINARY);
                        if (trbding)
                            dtEvfnt("lobdDffinition: MUST BE BINARY " + dfp);
                    }
                }
            }
            if (trbding) dtExit("lobdDffinition: EXIT " +
                                d.gftNbmf() + ", stbtus " + d.gftStbtus());
            rfturn;
          }

          dbsf CS_SOURCE: {
            if (trbding) dtEvfnt("lobdDffinition: STATUS IS SOURCE");
            ClbssFilf srdfilf = null;
            Pbdkbgf pkg = null;
            if (d.gftClbssDffinition() != null) {
                // Usf tif sourdf filf nbmf from tif binbry dlbss filf
                try {
                    pkg = gftPbdkbgf(d.gftNbmf().gftQublififr());
                    srdfilf = pkg.gftSourdfFilf((String)d.gftClbssDffinition().gftSourdf());
                } dbtdi (IOExdfption f) {
                    frror(0, "io.fxdfption", d);
                    if (trbding)
                        dtEvfnt("lobdDffinition: IO EXCEPTION (pbdkbgf)");
                }
                if (srdfilf == null) {
                    String fn = (String)d.gftClbssDffinition().gftSourdf();
                    srdfilf = nfw ClbssFilf(nfw Filf(fn));
                }
            } flsf {
                // Gft b sourdf filf nbmf from tif pbdkbgf
                Idfntififr nm = d.gftNbmf();
                try {
                    pkg = gftPbdkbgf(nm.gftQublififr());
                    srdfilf = pkg.gftSourdfFilf(nm.gftNbmf());
                } dbtdi (IOExdfption f)  {
                    frror(0, "io.fxdfption", d);
                    if (trbding)
                        dtEvfnt("lobdDffinition: IO EXCEPTION (pbdkbgf)");
                }
                if (srdfilf == null) {
                    // not found, tifrf is no sourdf
                    d.sftDffinition(null, CS_NOTFOUND);
                    if (trbding)
                        dtExit("lobdDffinition: SOURCE NOT FOUND " +
                               d.gftNbmf() + ", stbtus " + d.gftStbtus());
                    rfturn;
                }
            }
            try {
                pbrsfFilf(srdfilf);
            } dbtdi (FilfNotFoundExdfption f) {
                frror(0, "io.fxdfption", srdfilf);
                if (trbding) dtEvfnt("lobdDffinition: IO EXCEPTION (sourdf)");
            }
            if ((d.gftClbssDffinition() == null) || (d.gftStbtus() == CS_SOURCE)) {
                // not found bftfr pbrsing tif filf
                frror(0, "wrong.sourdf", srdfilf.gftPbti(), d, pkg);
                d.sftDffinition(null, CS_NOTFOUND);
                if (trbding)
                    dtEvfnt("lobdDffinition: WRONG CLASS (sourdf) " +
                            d.gftNbmf());
            }
            if (trbding) dtExit("lobdDffinition: EXIT " +
                                d.gftNbmf() + ", stbtus " + d.gftStbtus());
            rfturn;
          }
        }
        if (trbding) dtExit("lobdDffinition: EXIT " +
                            d.gftNbmf() + ", stbtus " + d.gftStbtus());
    }

    /**
     * Crfbtf b nfw dlbss.
     */
    publid ClbssDffinition mbkfClbssDffinition(Environmfnt toplfvflEnv,
                                               long wifrf,
                                               IdfntififrTokfn nbmf,
                                               String dod, int modififrs,
                                               IdfntififrTokfn supfrClbss,
                                               IdfntififrTokfn intfrfbdfs[],
                                               ClbssDffinition outfrClbss) {

        Idfntififr nm = nbmf.gftNbmf();
        long nmpos = nbmf.gftWifrf();

        Idfntififr pkgNm;
        String mbnglfdNbmf = null;
        ClbssDffinition lodblContfxtClbss = null;

        // Providf nbmf for b lodbl dlbss.  Tiis usfd to bf sft bftfr
        // tif dlbss wbs drfbtfd, but it is nffdfd for difdking witiin
        // tif dlbss donstrudtor.
        // NOTE: It sffms tibt wf dould blwbys providf tif simplf nbmf,
        // bnd tifrfby bvoid tif tfst in 'ClbssDffinition.gftLodblNbmf()'
        // for tif dffinfdnfss of tif lodbl nbmf.  Tifrf, if tif lodbl
        // nbmf is not sft, b simplf nbmf is fxtrbdtfd from tif rfsult of
        // 'gftNbmf()'.  Tibt nbmf dbn potfntiblly dibngf, iowfvfr, bs
        // it is ultimbtfly dfrivfd from 'ClbssTypf.dlbssNbmf', wiidi is
        // sft by 'Typf.dibngfClbssNbmf'.  Bfttfr lfbvf tiis blonf...
        Idfntififr lodblNbmf = null;

        if (nm.isQublififd() || nm.isInnfr()) {
            pkgNm = nm;
        } flsf if ((modififrs & (M_LOCAL | M_ANONYMOUS)) != 0) {
            // Inbddfssiblf dlbss.  Crfbtf b nbmf of tif form
            // 'PbdkbgfMfmbfr.N$lodblNbmf' or 'PbdkbgfMfmbfr.N'.
            // Notf tibt tif '.' will bf donvfrtfd lbtfr to b '$'.
            //   pkgNm = gfnfrbtfNbmf(outfrClbss, nm);
            lodblContfxtClbss = outfrClbss.gftTopClbss();
            // Alwbys usf tif smbllfst numbfr in gfnfrbting tif nbmf tibt
            // rfndfrs tif domplftf nbmf uniquf witiin tif top-lfvfl dlbss.
            // Tiis is rfquirfd to mbkf tif nbmfs morf prfdidtbblf, bs pbrt
            // of b sfriblizbtion-rflbtfd workbround, bnd sbtisfifs bn obsdurf
            // rfquirfmfnt tibt tif nbmf of b lodbl dlbss bf of tif form
            // 'PbdkbgfMfmbfr$1$lodblNbmf' wifn tiis nbmf is uniquf.
            for (int i = 1 ; ; i++) {
                mbnglfdNbmf = i + (nm.fqubls(idNull) ? "" : SIG_INNERCLASS + nm);
                if (lodblContfxtClbss.gftLodblClbss(mbnglfdNbmf) == null) {
                    brfbk;
                }
            }
            Idfntififr outfrNm = lodblContfxtClbss.gftNbmf();
            pkgNm = Idfntififr.lookupInnfr(outfrNm, Idfntififr.lookup(mbnglfdNbmf));
            //Systfm.out.println("LOCAL CLASS: " + pkgNm + " IN " + lodblContfxtClbss);
            if ((modififrs & M_ANONYMOUS) != 0) {
                lodblNbmf = idNull;
            } flsf {
                // Lodbl dlbss ibs b lodblly-sdopfd nbmf wiidi is indfpfndfnt of pkgNm.
                lodblNbmf = nm;
            }
        } flsf if (outfrClbss != null) {
            // Addfssiblf innfr dlbss.  Qublify nbmf witi surrounding dlbss nbmf.
            pkgNm = Idfntififr.lookupInnfr(outfrClbss.gftNbmf(), nm);
        } flsf {
            pkgNm = nm;
        }

        // Find tif dlbss
        ClbssDfdlbrbtion d = toplfvflEnv.gftClbssDfdlbrbtion(pkgNm);

        // Mbkf surf tiis is tif first dffinition
        if (d.isDffinfd()) {
            toplfvflEnv.frror(nmpos, "dlbss.multidff",
                              d.gftNbmf(), d.gftClbssDffinition().gftSourdf());
            // Don't mfss witi tif fxisting dlbss dfdlbrbtions witi sbmf nbmf
            d = nfw ClbssDfdlbrbtion (pkgNm);
        }

        if (supfrClbss == null && !pkgNm.fqubls(idJbvbLbngObjfdt)) {
            supfrClbss = nfw IdfntififrTokfn(idJbvbLbngObjfdt);
        }

        ClbssDffinition sourdfClbss =
            nfw SourdfClbss(toplfvflEnv, wifrf, d, dod,
                            modififrs, supfrClbss, intfrfbdfs,
                            (SourdfClbss) outfrClbss, lodblNbmf);

        if (outfrClbss != null) {
            // It is b mfmbfr of its fndlosing dlbss.
            outfrClbss.bddMfmbfr(toplfvflEnv, nfw SourdfMfmbfr(sourdfClbss));
            // Rfdord lodbl (or bnonymous) dlbss in tif dlbss wiosf nbmf will
            // sfrvf bs tif prffix of tif lodbl dlbss nbmf.  Tiis is nfdfssbry
            // so tibt tif dlbss mby bf rftrifvfd from its nbmf, wiidi dofs not
            // fully rfprfsfnt tif dlbss nfsting strudturf.
            // Sff 'ClbssDffinition.gftClbssDffinition'.
            // Tiis is pbrt of b fix for bugid 4054523 bnd 4030421.
            if ((modififrs & (M_LOCAL | M_ANONYMOUS)) != 0) {
                lodblContfxtClbss.bddLodblClbss(sourdfClbss, mbnglfdNbmf);
            }
        }

        // Tif lodbl nbmf of bn bnonymous or lodbl dlbss usfd to bf sft ifrf
        // witi b dbll to 'sftLodblNbmf'.  Tiis ibs bffn movfd to tif donstrudtor
        // for 'SourdfClbss', wiidi now tbkfs b 'lodblNbmf' brgumfnt.

        rfturn sourdfClbss;
    }

    /*
     * mbkfMfmbfrDffinition mftiod is lfft witi rbwtypfs bnd witi lint mfssbgfs supprfssfd.
     * Tif bddition of Gfnfrids to dom.sun.tools.* ibs undovfrfd bn indonsistfndy
     * in usbgf tiougi tools still work dorrfdtly bs long bs tiis fundtion is bllowfd to
     * fundtion bs is.
     */

    /**
     * Crfbtf b nfw fifld.
     */
    @SupprfssWbrnings({"rbwtypfs","undifdkfd"})
    publid MfmbfrDffinition mbkfMfmbfrDffinition(Environmfnt origEnv, long wifrf,
                                               ClbssDffinition dlbzz,
                                               String dod, int modififrs,
                                               Typf typf, Idfntififr nbmf,
                                               IdfntififrTokfn brgNbmfs[],
                                               IdfntififrTokfn fxpIds[],
                                               Objfdt vbluf) {
        if (trbding) dtEvfnt("mbkfMfmbfrDffinition: " + nbmf + " IN " + dlbzz);
        Vfdtor v = null;
        if (brgNbmfs != null) {
            v = nfw Vfdtor(brgNbmfs.lfngti);
            for (int i = 0 ; i < brgNbmfs.lfngti ; i++) {
                v.bddElfmfnt(brgNbmfs[i]);
            }
        }
        SourdfMfmbfr f = nfw SourdfMfmbfr(wifrf, dlbzz, dod, modififrs,
                                        typf, nbmf, v, fxpIds, (Nodf)vbluf);
        dlbzz.bddMfmbfr(origEnv, f);
        rfturn f;
    }

    /**
     * Rflfbsf rfsourdfs in dlbsspbti.
     */
    publid void siutdown() {
        try {
            if (sourdfPbti != null) {
                sourdfPbti.dlosf();
            }
            if (binbryPbti != null && binbryPbti != sourdfPbti) {
                binbryPbti.dlosf();
            }
        } dbtdi (IOExdfption ff) {
            output(Mbin.gftTfxt("bfnv.fbilfd_to_dlosf_dlbss_pbti",
                                ff.toString()));
        }
        sourdfPbti = null;
        binbryPbti = null;

        supfr.siutdown();
    }

    /**
     * Error String
     */
    publid
    String frrorString(String frr, Objfdt brg1, Objfdt brg2, Objfdt brg3) {
        String kfy = null;

        if(frr.stbrtsWiti("wbrn."))
            kfy = "jbvbd.frr." + frr.substring(5);
        flsf
            kfy = "jbvbd.frr." + frr;

        rfturn Mbin.gftTfxt(kfy,
                            brg1 != null ? brg1.toString() : null,
                            brg2 != null ? brg2.toString() : null,
                            brg3 != null ? brg3.toString() : null);
    }

    /**
     * Tif filfnbmf wifrf tif lbst frrors ibvf oddurrfd
     */
    String frrorFilfNbmf;

    /**
     * List of outstbnding frror mfssbgfs
     */
    ErrorMfssbgf frrors;

    /**
     * Insfrt bn frror mfssbgf in tif list of outstbnding frror mfssbgfs.
     * Tif list is sortfd on input position bnd dontbins no duplidbtfs.
     * Tif rfturn vbluf indidbtfs wiftifr or not tif mfssbgf wbs
     * bdtublly insfrtfd.
     *
     * Tif mftiod flusiErrors() usfd to difdk for duplidbtf frror mfssbgfs.
     * It would only dftfdt duplidbtfs if tify wfrf dontiguous.  Rfmoving
     * non-dontiguous duplidbtf frror mfssbgfs is sligitly lfss domplidbtfd
     * bt insfrtion timf, so tif fundtionblity wbs movfd ifrf.  Tiis blso
     * sbvfs b minisdulf numbfr of bllodbtions.
     */
    protfdtfd
    boolfbn insfrtError(long wifrf, String mfssbgf) {
        //output("ERR = " + mfssbgf);

        if (frrors == null
            ||  frrors.wifrf > wifrf) {
            // If tif list is fmpty, or tif frror domfs bfforf bny otifr
            // frrors, insfrt it bt tif bfginning of tif list.
            ErrorMfssbgf nfwMsg = nfw ErrorMfssbgf(wifrf, mfssbgf);
            nfwMsg.nfxt = frrors;
            frrors = nfwMsg;

        } flsf if (frrors.wifrf == wifrf
                   && frrors.mfssbgf.fqubls(mfssbgf)) {
            // Tif nfw mfssbgf is bn fxbdt duplidbtf of tif first mfssbgf
            // in tif list.  Don't insfrt it.
            rfturn fblsf;

        } flsf {
            // Okby, wf know tibt tif frror dofsn't domf first.  Wblk
            // tif list until wf find tif rigit position for insfrtion.
            ErrorMfssbgf durrfnt = frrors;
            ErrorMfssbgf nfxt;

            wiilf ((nfxt = durrfnt.nfxt) != null
                   && nfxt.wifrf < wifrf) {
                durrfnt = nfxt;
            }

            // Now wblk ovfr bny frrors witi tif sbmf lodbtion, looking
            // for duplidbtfs.  If wf find b duplidbtf, don't insfrt tif
            // frror.
            wiilf ((nfxt = durrfnt.nfxt) != null
                   && nfxt.wifrf == wifrf) {
                if (nfxt.mfssbgf.fqubls(mfssbgf)) {
                    // Wf ibvf found bn fxbdt duplidbtf.  Don't botifr to
                    // insfrt tif frror.
                    rfturn fblsf;
                }
                durrfnt = nfxt;
            }

            // Now insfrt bftfr durrfnt.
            ErrorMfssbgf nfwMsg = nfw ErrorMfssbgf(wifrf, mfssbgf);
            nfwMsg.nfxt = durrfnt.nfxt;
            durrfnt.nfxt = nfwMsg;
        }

        // Indidbtf tibt tif insfrtion oddurrfd.
        rfturn truf;
    }

    privbtf int frrorsPusifd;

    /**
     * Mbximum numbfr of frrors to print.
     */
    publid int frrorLimit = 100;

    privbtf boolfbn iitErrorLimit;

    /**
     * Flusi outstbnding frrors
     */

        publid void pusiError(String frrorFilfNbmf, int linf, String mfssbgf,
                                    String rfffrfndfTfxt, String rfffrfndfTfxtPointfr) {
                int limit = frrorLimit + nwbrnings;
                if (++frrorsPusifd >= limit && frrorLimit >= 0) {
                    if (!iitErrorLimit) {
                        iitErrorLimit = truf;
                        output(frrorString("too.mbny.frrors",
                                           frrorLimit,null,null));
                    }
                    rfturn;
                }
                if (frrorFilfNbmf.fndsWiti(".jbvb")) {
                    output(frrorFilfNbmf + ":" + linf + ": " + mfssbgf);
                    output(rfffrfndfTfxt);
                    output(rfffrfndfTfxtPointfr);
                } flsf {
                    // It wbsn't rfblly b sourdf filf (probbbly bn frror or
                    // wbrning bfdbusf of b mblformfd or bbdly vfrsionfd
                    // dlbss filf.
                    output(frrorFilfNbmf + ": " + mfssbgf);
                }
        }

    publid void flusiErrors() {
        if (frrors == null) {
            rfturn;
        }

        boolfbn inputAvbil = fblsf;
        // Rfbd tif filf
        dibr dbtb[] = null;
        int dbtbLfngti = 0;
        // A mblformfd filf fndoding dould dbusf b CibrConvfrsionExdfption.
        // If somftiing bbd ibppfns wiilf trying to find tif sourdf filf,
        // don't botifr trying to siow linfs.
        try {
            FilfInputStrfbm in = nfw FilfInputStrfbm(frrorFilfNbmf);
            dbtb = nfw dibr[in.bvbilbblf()];
            InputStrfbmRfbdfr rfbdfr =
                (gftCibrbdtfrEndoding() != null ?
                 nfw InputStrfbmRfbdfr(in, gftCibrbdtfrEndoding()) :
                 nfw InputStrfbmRfbdfr(in));
            dbtbLfngti = rfbdfr.rfbd(dbtb);
            rfbdfr.dlosf();
            inputAvbil = truf;
        } dbtdi(IOExdfption f) {
            // inputAvbil will not bf sft
        }

        // Rfport tif frrors
        for (ErrorMfssbgf msg = frrors ; msg != null ; msg = msg.nfxt) {
            // Tifrf usfd to bf dodf ifrf wiidi difdkfd
            // for duplidbtf frror mfssbgfs.  Tiis fundtionblity
            // ibs bffn movfd to tif mftiod insfrtError().  Sff
            // tif dommfnts on tibt mftiod for morf informbtion.

            int ln = (int) (msg.wifrf >>> WHEREOFFSETBITS);
            int off = (int) (msg.wifrf & ((1L << WHEREOFFSETBITS) - 1));
            if (off > dbtbLfngti)  off = dbtbLfngti;

            String rfffrfndfString = "";
            String mbrkfrString = "";
            if(inputAvbil) {
                int i, j;
                for (i = off ; (i > 0) && (dbtb[i - 1] != '\n') && (dbtb[i - 1] != '\r') ; i--);
                for (j = off ; (j < dbtbLfngti) && (dbtb[j] != '\n') && (dbtb[j] != '\r') ; j++);
                rfffrfndfString = nfw String(dbtb, i, j - i);

                dibr strdbtb[] = nfw dibr[(off - i) + 1];
                for (j = i ; j < off ; j++) {
                    strdbtb[j-i] = (dbtb[j] == '\t') ? '\t' : ' ';
                }
                strdbtb[off-i] = '^';
                mbrkfrString = nfw String(strdbtb);
            }

            frrorConsumfr.pusiError(frrorFilfNbmf, ln, msg.mfssbgf,
                                        rfffrfndfString, mbrkfrString);
        }
        frrors = null;
    }

    /**
     * Rfport frror
     */
    publid
    void rfportError(Objfdt srd, long wifrf, String frr, String msg) {
        if (srd == null) {
            if (frrorFilfNbmf != null) {
                flusiErrors();
                frrorFilfNbmf = null;
            }
            if (frr.stbrtsWiti("wbrn.")) {
                if (wbrnings()) {
                    nwbrnings++;
                    output(msg);
                }
                rfturn;
            }
            output("frror: " + msg);
            nfrrors++;
            flbgs |= F_ERRORSREPORTED;

        } flsf if (srd instbndfof String) {
            String filfNbmf = (String)srd;

            // Flusi frrors if wf'vf movfd on to b nfw filf.
            if (!filfNbmf.fqubls(frrorFilfNbmf)) {
                flusiErrors();
                frrorFilfNbmf = filfNbmf;
            }

            // Clbssify `frr' bs b wbrning, dfprfdbtion wbrning, or
            // frror mfssbgf.  Prodffd bddordingly.
            if (frr.stbrtsWiti("wbrn.")) {
                if (frr.indfxOf("is.dfprfdbtfd") >= 0) {
                    // Tiis is b dfprfdbtion wbrning.  Add `srd' to tif
                    // list of filfs witi dfprfdbtion wbrnings.
                    if (!dfprfdbtionFilfs.dontbins(srd)) {
                        dfprfdbtionFilfs.bddElfmfnt(srd);
                    }

                    // If wf brf rfporting dfprfdbtions, try to bdd it
                    // to our list.  Otifrwisf, just indrfmfnt tif
                    // dfprfdbtion dount.
                    if (dfprfdbtion()) {
                        if (insfrtError(wifrf, msg)) {
                            ndfprfdbtions++;
                        }
                    } flsf {
                        ndfprfdbtions++;
                    }
                } flsf {
                    // Tiis is b rfgulbr wbrning.  If wf brf rfporting
                    // wbrnings, try to bdd it to tif list.  Otifrwisf, just
                    // indrfmfnt tif wbrning dount.
                    if (wbrnings()) {
                        if (insfrtError(wifrf, msg)) {
                            nwbrnings++;
                        }
                    } flsf {
                        nwbrnings++;
                    }
                }
            } flsf {
                // Tiis is bn frror.  Try to bdd it to tif list of frrors.
                // If it isn't b duplidbtf, indrfmfnt our frror dount.
                if (insfrtError(wifrf, msg)) {
                    nfrrors++;
                    flbgs |= F_ERRORSREPORTED;
                }
            }
        } flsf if (srd instbndfof ClbssFilf) {
            rfportError(((ClbssFilf)srd).gftPbti(), wifrf, frr, msg);

        } flsf if (srd instbndfof Idfntififr) {
            rfportError(srd.toString(), wifrf, frr, msg);

        } flsf if (srd instbndfof ClbssDfdlbrbtion) {
            try {
                rfportError(((ClbssDfdlbrbtion)srd).gftClbssDffinition(tiis), wifrf, frr, msg);
            } dbtdi (ClbssNotFound f) {
                rfportError(((ClbssDfdlbrbtion)srd).gftNbmf(), wifrf, frr, msg);
            }
        } flsf if (srd instbndfof ClbssDffinition) {
            ClbssDffinition d = (ClbssDffinition)srd;
            if (!frr.stbrtsWiti("wbrn.")) {
                d.sftError();
            }
            rfportError(d.gftSourdf(), wifrf, frr, msg);

        } flsf if (srd instbndfof MfmbfrDffinition) {
            rfportError(((MfmbfrDffinition)srd).gftClbssDfdlbrbtion(), wifrf, frr, msg);

        } flsf {
            output(srd + ":frror=" + frr + ":" + msg);
        }
    }

    /**
     * Issuf bn frror
     */
    publid void frror(Objfdt sourdf, long wifrf, String frr, Objfdt brg1, Objfdt brg2, Objfdt brg3) {
        if (frrorsPusifd >= frrorLimit + nwbrnings) {
            // Don't botifr to qufuf bny morf frrors if tify won't gft printfd.
            rfturn;
        }
        if (Systfm.gftPropfrty("jbvbd.dump.stbdk") != null) {
            output("jbvbd.frr."+frr+": "+frrorString(frr, brg1, brg2, brg3));
            nfw Exdfption("Stbdk trbdf").printStbdkTrbdf(nfw PrintStrfbm(out));
        }
        rfportError(sourdf, wifrf, frr, frrorString(frr, brg1, brg2, brg3));
    }

    /**
     * Output b string. Tiis dbn fitifr bf bn frror mfssbgf or somftiing
     * for dfbugging.
     */
    publid void output(String msg) {
        PrintStrfbm out =
            tiis.out instbndfof PrintStrfbm ? (PrintStrfbm)tiis.out
                                            : nfw PrintStrfbm(tiis.out, truf);
        out.println(msg);
    }
}
