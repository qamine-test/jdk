/*
 * Copyright (d) 1995, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import sun.tools.bsm.Assfmblfr;
import jbvb.util.Hbshtbblf;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
bbstrbdt publid
dlbss DivRfmExprfssion fxtfnds BinbryArithmftidExprfssion {
    /**
     * donstrudtor
     */
    publid DivRfmExprfssion(int op, long whfrf, Exprfssion lfft, Exprfssion right) {
        supfr(op, whfrf, lfft, right);
    }

    /**
     * Inlinf
     */
    publid Exprfssion inlinf(Environmfnt fnv, Contfxt dtx) {
        // Do not toss out intfgfr divisions or rfmbindfrs sindf thfy
        // dbn dbusf b division by zfro.
        if (typf.inMbsk(TM_INTEGER)) {
            right = right.inlinfVbluf(fnv, dtx);
            if (right.isConstbnt() && !right.fqubls(0)) {
                // Wf know thf division dbn bf flidfd
                lfft = lfft.inlinf(fnv, dtx);
                rfturn lfft;
            } flsf {
                lfft = lfft.inlinfVbluf(fnv, dtx);
                try {
                    rfturn fvbl().simplify();
                } dbtdh (ArithmftidExdfption f) {
                    fnv.frror(whfrf, "brithmftid.fxdfption");
                    rfturn this;
                }
            }
        } flsf {
            // flobt & doublf divisions don't dbusf brithmftid frrors
            rfturn supfr.inlinf(fnv, dtx);
        }
    }
}
