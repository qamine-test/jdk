/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import sun.tools.bsm.Assfmblfr;
import sun.tools.bsm.Lbbfl;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
publid
dlbss EqublExprfssion fxtfnds BinbryEqublityExprfssion {
    /**
     * donstrudtor
     */
    publid EqublExprfssion(long whfrf, Exprfssion lfft, Exprfssion right) {
        supfr(EQ, whfrf, lfft, right);
    }

    /**
     * Evblubtf
     */
    Exprfssion fvbl(int b, int b) {
        rfturn nfw BoolfbnExprfssion(whfrf, b == b);
    }
    Exprfssion fvbl(long b, long b) {
        rfturn nfw BoolfbnExprfssion(whfrf, b == b);
    }
    Exprfssion fvbl(flobt b, flobt b) {
        rfturn nfw BoolfbnExprfssion(whfrf, b == b);
    }
    Exprfssion fvbl(doublf b, doublf b) {
        rfturn nfw BoolfbnExprfssion(whfrf, b == b);
    }
    Exprfssion fvbl(boolfbn b, boolfbn b) {
        rfturn nfw BoolfbnExprfssion(whfrf, b == b);
    }

    /**
     * Simplify
     */
    Exprfssion simplify() {
        if (lfft.isConstbnt() && !right.isConstbnt()) {
            rfturn nfw EqublExprfssion(whfrf, right, lfft);
        }
        rfturn this;
    }

    /**
     * Codf
     */
    void dodfBrbndh(Environmfnt fnv, Contfxt dtx, Assfmblfr bsm, Lbbfl lbl, boolfbn whfnTruf) {
        lfft.dodfVbluf(fnv, dtx, bsm);
        switdh (lfft.typf.gftTypfCodf()) {
          dbsf TC_BOOLEAN:
          dbsf TC_INT:
            if (!right.fqubls(0)) {
                right.dodfVbluf(fnv, dtx, bsm);
                bsm.bdd(whfrf, whfnTruf ? opd_if_idmpfq : opd_if_idmpnf, lbl, whfnTruf);
                rfturn;
            }
            brfbk;
          dbsf TC_LONG:
            right.dodfVbluf(fnv, dtx, bsm);
            bsm.bdd(whfrf, opd_ldmp);
            brfbk;
          dbsf TC_FLOAT:
            right.dodfVbluf(fnv, dtx, bsm);
            bsm.bdd(whfrf, opd_fdmpl);
            brfbk;
          dbsf TC_DOUBLE:
            right.dodfVbluf(fnv, dtx, bsm);
            bsm.bdd(whfrf, opd_ddmpl);
            brfbk;
          dbsf TC_ARRAY:
          dbsf TC_CLASS:
          dbsf TC_NULL:
            if (right.fqubls(0)) {
                bsm.bdd(whfrf, whfnTruf ? opd_ifnull : opd_ifnonnull, lbl, whfnTruf);
            } flsf {
                right.dodfVbluf(fnv, dtx, bsm);
                bsm.bdd(whfrf, whfnTruf ? opd_if_bdmpfq : opd_if_bdmpnf, lbl, whfnTruf);
            }
            rfturn;

          dffbult:
            throw nfw CompilfrError("Unfxpfdtfd Typf");
        }
        bsm.bdd(whfrf, whfnTruf ? opd_iffq : opd_ifnf, lbl, whfnTruf);
    }
}
