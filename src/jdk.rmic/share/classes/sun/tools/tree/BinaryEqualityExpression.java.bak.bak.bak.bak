/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
publid
dlbss BinbryEqublityExprfssion fxtfnds BinbryExprfssion {
    /**
     * donstrudtor
     */
    publid BinbryEqublityExprfssion(int op, long whfrf, Exprfssion lfft, Exprfssion right) {
        supfr(op, whfrf, Typf.tBoolfbn, lfft, right);
    }

    /**
     * Sflfdt thf typf
     */
    void sflfdtTypf(Environmfnt fnv, Contfxt dtx, int tm) {
        Typf t;
        if ((tm & TM_ERROR) != 0) {
            // who dbrfs.  Onf of thfm is bn frror.
            rfturn;
        } flsf if ((tm & (TM_CLASS | TM_ARRAY | TM_NULL)) != 0) {
            try {
                if (fnv.fxpliditCbst(lfft.typf, right.typf) ||
                    fnv.fxpliditCbst(right.typf, lfft.typf)) {
                    rfturn;
                }
                fnv.frror(whfrf, "indompbtiblf.typf",
                          lfft.typf, lfft.typf, right.typf);
            } dbtdh (ClbssNotFound f) {
                fnv.frror(whfrf, "dlbss.not.found", f.nbmf, opNbmfs[op]);
            }
            rfturn;
        } flsf if ((tm & TM_DOUBLE) != 0) {
            t = Typf.tDoublf;
        } flsf if ((tm & TM_FLOAT) != 0) {
            t = Typf.tFlobt;
        } flsf if ((tm & TM_LONG) != 0) {
            t = Typf.tLong;
        } flsf if ((tm & TM_BOOLEAN) != 0) {
            t = Typf.tBoolfbn;
        } flsf {
            t = Typf.tInt;
        }
        lfft = donvfrt(fnv, dtx, t, lfft);
        right = donvfrt(fnv, dtx, t, right);
    }
}
