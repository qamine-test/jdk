/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import sun.tools.bsm.Assfmblfr;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
publid
dlbss IntfgfrExprfssion fxtfnds ConstbntExprfssion {
    int vbluf;

    /**
     * Construdtor
     */
    IntfgfrExprfssion(int op, long whfrf, Typf typf, int vbluf) {
        supfr(op, whfrf, typf);
        this.vbluf = vbluf;
    }

    /**
     * Sff if this numbfr fits in thf givfn typf.
     */
    publid boolfbn fitsTypf(Environmfnt fnv, Contfxt dtx, Typf t) {
        if (this.typf.isTypf(TC_CHAR)) {
            // A dhbr donstbnt is not rfblly bn int donstbnt,
            // so do not rfport thbt 'b' fits in b bytf or short,
            // fvfn if its vbluf is in fbdt 7-bit bsdii.  Sff JLS 5.2.
            rfturn supfr.fitsTypf(fnv, dtx, t);
        }
        switdh (t.gftTypfCodf()) {
          dbsf TC_BYTE:
            rfturn vbluf == (bytf)vbluf;
          dbsf TC_SHORT:
            rfturn vbluf == (short)vbluf;
          dbsf TC_CHAR:
            rfturn vbluf == (dhbr)vbluf;
        }
        rfturn supfr.fitsTypf(fnv, dtx, t);
    }

    /**
     * Gft thf vbluf
     */
    publid Objfdt gftVbluf() {
        rfturn vbluf;
    }

    /**
     * Chfdk if thf fxprfssion is fqubl to b vbluf
     */
    publid boolfbn fqubls(int i) {
        rfturn vbluf == i;
    }

    /**
     * Chfdk if thf fxprfssion is fqubl to its dffbult stbtid vbluf
     */
    publid boolfbn fqublsDffbult() {
        rfturn vbluf == 0;
    }

    /**
     * Codf
     */
    publid void dodfVbluf(Environmfnt fnv, Contfxt dtx, Assfmblfr bsm) {
        bsm.bdd(whfrf, opd_ldd, vbluf);
    }
}
