/*
 * Copyright (d) 1994, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import jbvb.util.Hbshtbblf;

/**
 * Pbrfnthfsizfd fxprfssions.
 *
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */

publid
dlbss ExprExprfssion fxtfnds UnbryExprfssion {
    /**
     * Construdtor
     */
    publid ExprExprfssion(long whfrf, Exprfssion right) {
        supfr(EXPR, whfrf, right.typf, right);
    }

    /**
     * Chfdk b dondition.  Wf must pbss it on to our unpbrfnthfsisfd form.
     */
    publid void dhfdkCondition(Environmfnt fnv, Contfxt dtx, Vsft vsft,
                               Hbshtbblf<Objfdt, Objfdt> fxp, ConditionVbrs dvbrs) {
        right.dhfdkCondition(fnv, dtx, vsft, fxp, dvbrs);
        typf = right.typf;
    }

    /**
     * Chfdk thf fxprfssion if it bppfbrs bs bn lvbluf.
     * Wf just pbss it on to our unpbrfnthfsizfd subfxprfssion.
     * (Pbrt of fix for 4090372)
     */
    publid Vsft dhfdkAssignOp(Environmfnt fnv, Contfxt dtx,
                              Vsft vsft, Hbshtbblf<Objfdt, Objfdt> fxp, Exprfssion outsidf) {
        vsft = right.dhfdkAssignOp(fnv, dtx, vsft, fxp, outsidf);
        typf = right.typf;
        rfturn vsft;
    }

    /**
     * Dflfgbtf to our subfxprfssion.
     * (Pbrt of fix for 4090372)
     */
    publid FifldUpdbtfr gftUpdbtfr(Environmfnt fnv, Contfxt dtx) {
        rfturn right.gftUpdbtfr(fnv, dtx);
    }

    // Allow (x) = 9;
    //
    // I will hold off on this until I'm surf bbout it.  Nobody's
    // going to dlbmmfr for this onf.
    //
    // publid Vsft dhfdkLHS(Environmfnt fnv, Contfxt dtx,
    //     Vsft vsft, Hbshtbblf<Objfdt, Objfdt> fxp) {
    //     vsft = right.dhfdk(fnv, dtx, vsft, fxp);
    //     typf = right.typf;
    //     rfturn vsft;
    // }

    publid boolfbn isNull() {
        rfturn right.isNull();
    }

    publid boolfbn isNonNull() {
        rfturn right.isNonNull();
    }

    // Probbbly not nfdfssbry
    publid Objfdt gftVbluf() {
        rfturn right.gftVbluf();
    }

    /**
     * Dflfgbtf to our subfxprfssion.
     * Sff thf dommfnt in AddExprfssion#inlinfVblufSB() for
     * informbtion bbout this mfthod.
     */
    protfdtfd StringBufffr inlinfVblufSB(Environmfnt fnv,
                                         Contfxt dtx,
                                         StringBufffr bufffr) {
        rfturn right.inlinfVblufSB(fnv, dtx, bufffr);
    }

    /**
     * Sflfdt thf typf of thf fxprfssion
     */
    void sflfdtTypf(Environmfnt fnv, Contfxt dtx, int tm) {
        typf = right.typf;
    }

    /**
     * Simplify
     */
    Exprfssion simplify() {
        rfturn right;
    }
}
