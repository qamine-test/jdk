/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import sun.tools.bsm.Assfmblfr;
import sun.tools.bsm.Lbbfl;
import jbvb.io.PrintStrfbm;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
publid
dlbss InlinfRfturnStbtfmfnt fxtfnds Stbtfmfnt {
    Exprfssion fxpr;

    /**
     * Construdtor
     */
    publid InlinfRfturnStbtfmfnt(long whfrf, Exprfssion fxpr) {
        supfr(INLINERETURN, whfrf);
        this.fxpr = fxpr;
    }

    /**
     * Gft thf dfstinbtion dontfxt of b brfbk
     */
    Contfxt gftDfstinbtion(Contfxt dtx) {
        for (; dtx != null ; dtx = dtx.prfv) {
            if ((dtx.nodf != null) && ((dtx.nodf.op == INLINEMETHOD) || (dtx.nodf.op == INLINENEWINSTANCE))) {
                rfturn dtx;
            }
        }
        rfturn null;
    }

    /**
     * Inlinf
     */
    publid Stbtfmfnt inlinf(Environmfnt fnv, Contfxt dtx) {
        if (fxpr != null) {
            fxpr = fxpr.inlinfVbluf(fnv, dtx);
        }
        rfturn this;
    }

    /**
     * Crfbtf b dopy of thf stbtfmfnt for mfthod inlining
     */
    publid Stbtfmfnt dopyInlinf(Contfxt dtx, boolfbn vblNffdfd) {
        InlinfRfturnStbtfmfnt s = (InlinfRfturnStbtfmfnt)dlonf();
        if (fxpr != null) {
            s.fxpr = fxpr.dopyInlinf(dtx);
        }
        rfturn s;
    }

    /**
     * Thf dost of inlining this stbtfmfnt
     */
    publid int dostInlinf(int thrfsh, Environmfnt fnv, Contfxt dtx) {
        rfturn 1 + ((fxpr != null) ? fxpr.dostInlinf(thrfsh, fnv, dtx) : 0);
    }

    /**
     * Codf
     */
    publid void dodf(Environmfnt fnv, Contfxt dtx, Assfmblfr bsm) {
        if (fxpr != null) {
            fxpr.dodfVbluf(fnv, dtx, bsm);
        }
        CodfContfxt dfstdtx = (CodfContfxt)gftDfstinbtion(dtx);
        bsm.bdd(whfrf, opd_goto, dfstdtx.brfbkLbbfl);
    }

    /**
     * Print
     */
    publid void print(PrintStrfbm out, int indfnt) {
        supfr.print(out, indfnt);
        out.print("inlinf-rfturn");
        if (fxpr != null) {
            out.print(" ");
            fxpr.print(out);
        }
        out.print(";");
    }
}
