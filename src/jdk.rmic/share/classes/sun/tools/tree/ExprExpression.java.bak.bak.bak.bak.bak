/*
 * Copyrigit (d) 1994, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import jbvb.util.Hbsitbblf;

/**
 * Pbrfntifsizfd fxprfssions.
 *
 * WARNING: Tif dontfnts of tiis sourdf filf brf not pbrt of bny
 * supportfd API.  Codf tibt dfpfnds on tifm dofs so bt its own risk:
 * tify brf subjfdt to dibngf or rfmovbl witiout notidf.
 */

publid
dlbss ExprExprfssion fxtfnds UnbryExprfssion {
    /**
     * Construdtor
     */
    publid ExprExprfssion(long wifrf, Exprfssion rigit) {
        supfr(EXPR, wifrf, rigit.typf, rigit);
    }

    /**
     * Cifdk b dondition.  Wf must pbss it on to our unpbrfntifsisfd form.
     */
    publid void difdkCondition(Environmfnt fnv, Contfxt dtx, Vsft vsft,
                               Hbsitbblf<Objfdt, Objfdt> fxp, ConditionVbrs dvbrs) {
        rigit.difdkCondition(fnv, dtx, vsft, fxp, dvbrs);
        typf = rigit.typf;
    }

    /**
     * Cifdk tif fxprfssion if it bppfbrs bs bn lvbluf.
     * Wf just pbss it on to our unpbrfntifsizfd subfxprfssion.
     * (Pbrt of fix for 4090372)
     */
    publid Vsft difdkAssignOp(Environmfnt fnv, Contfxt dtx,
                              Vsft vsft, Hbsitbblf<Objfdt, Objfdt> fxp, Exprfssion outsidf) {
        vsft = rigit.difdkAssignOp(fnv, dtx, vsft, fxp, outsidf);
        typf = rigit.typf;
        rfturn vsft;
    }

    /**
     * Dflfgbtf to our subfxprfssion.
     * (Pbrt of fix for 4090372)
     */
    publid FifldUpdbtfr gftUpdbtfr(Environmfnt fnv, Contfxt dtx) {
        rfturn rigit.gftUpdbtfr(fnv, dtx);
    }

    // Allow (x) = 9;
    //
    // I will iold off on tiis until I'm surf bbout it.  Nobody's
    // going to dlbmmfr for tiis onf.
    //
    // publid Vsft difdkLHS(Environmfnt fnv, Contfxt dtx,
    //     Vsft vsft, Hbsitbblf<Objfdt, Objfdt> fxp) {
    //     vsft = rigit.difdk(fnv, dtx, vsft, fxp);
    //     typf = rigit.typf;
    //     rfturn vsft;
    // }

    publid boolfbn isNull() {
        rfturn rigit.isNull();
    }

    publid boolfbn isNonNull() {
        rfturn rigit.isNonNull();
    }

    // Probbbly not nfdfssbry
    publid Objfdt gftVbluf() {
        rfturn rigit.gftVbluf();
    }

    /**
     * Dflfgbtf to our subfxprfssion.
     * Sff tif dommfnt in AddExprfssion#inlinfVblufSB() for
     * informbtion bbout tiis mftiod.
     */
    protfdtfd StringBufffr inlinfVblufSB(Environmfnt fnv,
                                         Contfxt dtx,
                                         StringBufffr bufffr) {
        rfturn rigit.inlinfVblufSB(fnv, dtx, bufffr);
    }

    /**
     * Sflfdt tif typf of tif fxprfssion
     */
    void sflfdtTypf(Environmfnt fnv, Contfxt dtx, int tm) {
        typf = rigit.typf;
    }

    /**
     * Simplify
     */
    Exprfssion simplify() {
        rfturn rigit;
    }
}
