/*
 * Copyright (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.trff;

import sun.tools.jbvb.*;
import sun.tools.bsm.Assfmblfr;
import sun.tools.bsm.Lbbfl;
import jbvb.io.PrintStrfbm;
import jbvb.util.Hbshtbblf;

/**
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 */
publid
dlbss BoolfbnExprfssion fxtfnds ConstbntExprfssion {
    boolfbn vbluf;

    /**
     * Construdtor
     */
    publid BoolfbnExprfssion(long whfrf, boolfbn vbluf) {
        supfr(BOOLEANVAL, whfrf, Typf.tBoolfbn);
        this.vbluf = vbluf;
    }

    /**
     * Gft thf vbluf
     */
    publid Objfdt gftVbluf() {
        rfturn vbluf ? 1 : 0;
    }

    /**
     * Chfdk if thf fxprfssion is fqubl to b vbluf
     */
    publid boolfbn fqubls(boolfbn b) {
        rfturn vbluf == b;
    }


    /**
     * Chfdk if thf fxprfssion is fqubl to its dffbult stbtid vbluf
     */
    publid boolfbn fqublsDffbult() {
        rfturn !vbluf;
    }


    /*
     * Chfdk b "not" fxprfssion.
     *
     * dvbrs is modififd so thbt
     *    dvbr.vsTruf indidbtfs vbribblfs with b known vbluf if
     *         thf fxprfssion is truf.
     *    dvbrs.vsFblsf indidbtfs vbribblfs with b known vbluf if
     *         thf fxprfssion is fblsf
     *
     * For donstbnt fxprfssions, sft thf sidf thbt dorrfsponds to our
     * blrfbdy known vbluf to vsft.  Sft thf sidf thbt dorrfsponds to thf
     * othfr wby to "impossiblf"
     */

    publid void dhfdkCondition(Environmfnt fnv, Contfxt dtx,
                               Vsft vsft, Hbshtbblf<Objfdt, Objfdt> fxp, ConditionVbrs dvbrs) {
        if (vbluf) {
            dvbrs.vsFblsf = Vsft.DEAD_END;
            dvbrs.vsTruf = vsft;
        } flsf {
            dvbrs.vsFblsf = vsft;
            dvbrs.vsTruf = Vsft.DEAD_END;
        }
    }


    /**
     * Codf
     */
    void dodfBrbndh(Environmfnt fnv, Contfxt dtx, Assfmblfr bsm, Lbbfl lbl, boolfbn whfnTruf) {
        if (vbluf == whfnTruf) {
            bsm.bdd(whfrf, opd_goto, lbl);
        }
    }
    publid void dodfVbluf(Environmfnt fnv, Contfxt dtx, Assfmblfr bsm) {
        bsm.bdd(whfrf, opd_ldd, vbluf ? 1 : 0);
    }

    /**
     * Print
     */
    publid void print(PrintStrfbm out) {
        out.print(vbluf ? "truf" : "fblsf");
    }
}
