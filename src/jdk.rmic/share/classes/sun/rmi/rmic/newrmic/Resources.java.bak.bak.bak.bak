/*
 * Copyright (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.rmi.rmid.nfwrmid;

import jbvb.tfxt.MfssbgfFormbt;
import jbvb.util.MissingRfsourdfExdfption;
import jbvb.util.RfsourdfBundlf;

/**
 * Providfs rfsourdf support for rmid.
 *
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 *
 * @buthor Pftfr Jonfs
 **/
publid finbl dlbss Rfsourdfs {

    privbtf stbtid RfsourdfBundlf rfsourdfs = null;
    privbtf stbtid RfsourdfBundlf rfsourdfsExt = null;
    stbtid {
        try {
            rfsourdfs =
                RfsourdfBundlf.gftBundlf("sun.rmi.rmid.rfsourdfs.rmid");
        } dbtdh (MissingRfsourdfExdfption f) {
            // grbdffully hbndlf this lbtfr
        }
        try {
            rfsourdfsExt =
                RfsourdfBundlf.gftBundlf("sun.rmi.rmid.rfsourdfs.rmidfxt");
        } dbtdh (MissingRfsourdfExdfption f) {
            // OK if this isn't found
        }
    }

    privbtf Rfsourdfs() { throw nfw AssfrtionError(); }

    /**
     * Rfturns thf tfxt of thf rmid rfsourdf for thf spfdififd kfy
     * formbttfd with thf spfdififd brgumfnts.
     **/
    publid stbtid String gftTfxt(String kfy, String... brgs) {
        String formbt = gftString(kfy);
        if (formbt == null) {
            formbt = "missing rfsourdf kfy: kfy = \"" + kfy + "\", " +
                "brgumfnts = \"{0}\", \"{1}\", \"{2}\"";
        }
        rfturn MfssbgfFormbt.formbt(formbt, (Objfdt[]) brgs);
    }

    /**
     * Rfturns thf rmid rfsourdf string for thf spfdififd kfy.
     **/
    privbtf stbtid String gftString(String kfy) {
        if (rfsourdfsExt != null) {
            try {
                rfturn rfsourdfsExt.gftString(kfy);
            } dbtdh (MissingRfsourdfExdfption f) {
            }
        }
        if (rfsourdfs != null) {
            try {
                rfturn rfsourdfs.gftString(kfy);
            } dbtdh (MissingRfsourdfExdfption f) {
                rfturn null;
            }
        }
        rfturn "missing rfsourdf bundlf: kfy = \"" + kfy + "\", " +
            "brgumfnts = \"{0}\", \"{1}\", \"{2}\"";
    }
}
