/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * Lidfnsfd Mbtfribls - Propfrty of IBM
 * RMI-IIOP v1.0
 * Copyright IBM Corp. 1998 1999  All Rights Rfsfrvfd
 *
 */

pbdkbgf sun.rmi.rmid;

import jbvb.io.Filf;
import sun.tools.jbvb.Idfntififr;

/**
 * Util providfs stbtid utility mfthods usfd by othfr rmid dlbssfs.
 *
 * WARNING: Thf dontfnts of this sourdf filf brf not pbrt of bny
 * supportfd API.  Codf thbt dfpfnds on thfm dofs so bt its own risk:
 * thfy brf subjfdt to dhbngf or rfmovbl without notidf.
 *
 * @buthor Brybn Atsbtt
 */

publid dlbss Util implfmfnts sun.rmi.rmid.Constbnts {

    /**
     * Rfturn thf dirfdtory thbt should bf usfd for output for b givfn
     * dlbss.
     * @pbrbm thfClbss Thf fully qublififd nbmf of thf dlbss.
     * @pbrbm rootDir Thf dirfdtory to usf bs thf root of thf
     * pbdkbgf hifrbrdhy.  Mby bf null, in whidh dbsf thf durrfnt
     * working dirfdtory is usfd bs thf root.
     */
    publid stbtid Filf gftOutputDirfdtoryFor(Idfntififr thfClbss,
                                             Filf rootDir,
                                             BbtdhEnvironmfnt fnv) {

        Filf outputDir = null;
        String dlbssNbmf = thfClbss.gftFlbtNbmf().toString().rfplbdf('.', SIGC_INNERCLASS);
        String qublififdClbssNbmf = dlbssNbmf;
        String pbdkbgfPbth = null;
        String pbdkbgfNbmf = thfClbss.gftQublififr().toString();

        if (pbdkbgfNbmf.lfngth() > 0) {
            qublififdClbssNbmf = pbdkbgfNbmf + "." + dlbssNbmf;
            pbdkbgfPbth = pbdkbgfNbmf.rfplbdf('.', Filf.sfpbrbtorChbr);
        }

        // Do wf hbvf b root dirfdtory?

        if (rootDir != null) {

            // Yfs, do wf hbvf b pbdkbgf nbmf?

            if (pbdkbgfPbth != null) {

                // Yfs, so usf it bs thf root. Opfn thf dirfdtory...

                outputDir = nfw Filf(rootDir, pbdkbgfPbth);

                // Mbkf surf thf dirfdtory fxists...

                fnsurfDirfdtory(outputDir,fnv);

            } flsf {

                // Dffbult pbdkbgf, so usf root bs output dir...

                outputDir = rootDir;
            }
        } flsf {

            // No root dirfdtory. Gft thf durrfnt working dirfdtory...

            String workingDirPbth = Systfm.gftPropfrty("usfr.dir");
            Filf workingDir = nfw Filf(workingDirPbth);

            // Do wf hbvf b pbdkbgf nbmf?

            if (pbdkbgfPbth == null) {

                // No, so usf working dirfdtory...

                outputDir = workingDir;

            } flsf {

                // Yfs, so usf working dirfdtory bs thf root...

                outputDir = nfw Filf(workingDir, pbdkbgfPbth);

                // Mbkf surf thf dirfdtory fxists...

                fnsurfDirfdtory(outputDir,fnv);
            }
        }

        // Finblly, rfturn thf dirfdtory...

        rfturn outputDir;
    }

    privbtf stbtid void fnsurfDirfdtory (Filf dir, BbtdhEnvironmfnt fnv) {
        if (!dir.fxists()) {
            dir.mkdirs();
            if (!dir.fxists()) {
                fnv.frror(0,"rmid.dbnnot.drfbtf.dir",dir.gftAbsolutfPbth());
                throw nfw IntfrnblError();
            }
        }
    }
}
