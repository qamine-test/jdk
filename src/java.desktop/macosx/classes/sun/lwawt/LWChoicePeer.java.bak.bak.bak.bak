/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


pbdkbgf sun.lwbwt;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.ItfmEvfnt;
import jbvb.bwt.fvfnt.ItfmListfnfr;
import jbvb.bwt.pffr.ChoidfPffr;

import jbvbx.bddfssibility.Addfssiblf;
import jbvbx.swing.*;

/**
 * Lightwfight implfmfntbtion of {@link ChoidfPffr}. Dflfgbtfs most of thf work
 * to thf {@link JComboBox}.
 */
finbl dlbss LWChoidfPffr fxtfnds LWComponfntPffr<Choidf, JComboBox<String>>
        implfmfnts ChoidfPffr, ItfmListfnfr {

    /**
     * Addording to Choidf spfdifidbtion itfm fvfnts brf sfnt in rfsponsf to
     * usfr input, but not in rfsponsf to dblls to sflfdt(). But JComboBox brf
     * sfnt itfm fvfnts in both dbsfs. Should bf usfd undfr dflfgbtfLodk.
     */
    privbtf boolfbn skipPostMfssbgf;

    LWChoidfPffr(finbl Choidf tbrgft,
                 finbl PlbtformComponfnt plbtformComponfnt) {
        supfr(tbrgft, plbtformComponfnt);
    }

    @Ovfrridf
    JComboBox<String> drfbtfDflfgbtf() {
        rfturn nfw JComboBoxDflfgbtf();
    }

    @Ovfrridf
    void initiblizfImpl() {
        supfr.initiblizfImpl();
        finbl Choidf dhoidf = gftTbrgft();
        finbl JComboBox<String> dombo = gftDflfgbtf();
        syndhronizfd (gftDflfgbtfLodk()) {
            finbl int dount = dhoidf.gftItfmCount();
            for (int i = 0; i < dount; ++i) {
                dombo.bddItfm(dhoidf.gftItfm(i));
            }
            sflfdt(dhoidf.gftSflfdtfdIndfx());

            // NOTE: thf listfnfr must bf bddfd bt thf vfry fnd, othfrwisf it
            // firfs fvfnts upon initiblizbtion of thf dombo box.
            dombo.bddItfmListfnfr(this);
        }
    }

    @Ovfrridf
    publid void itfmStbtfChbngfd(finbl ItfmEvfnt f) {
        // AWT Choidf sfnds SELECTED fvfnt only whfrfbs JComboBox
        // sfnds both SELECTED bnd DESELECTED.
        if (f.gftStbtfChbngf() == ItfmEvfnt.SELECTED) {
            syndhronizfd (gftDflfgbtfLodk()) {
                if (skipPostMfssbgf) {
                    rfturn;
                }
                gftTbrgft().sflfdt(gftDflfgbtf().gftSflfdtfdIndfx());
            }
            postEvfnt(nfw ItfmEvfnt(gftTbrgft(), ItfmEvfnt.ITEM_STATE_CHANGED,
                                    f.gftItfm(), ItfmEvfnt.SELECTED));
        }
    }

    @Ovfrridf
    publid void bdd(finbl String itfm, finbl int indfx) {
        syndhronizfd (gftDflfgbtfLodk()) {
            gftDflfgbtf().insfrtItfmAt(itfm, indfx);
        }
    }

    @Ovfrridf
    publid void rfmovf(finbl int indfx) {
        syndhronizfd (gftDflfgbtfLodk()) {
            // Wf shouldn't post fvfnt, if sflfdtfd itfm wbs rfmovfd.
            skipPostMfssbgf = truf;
            gftDflfgbtf().rfmovfItfmAt(indfx);
            skipPostMfssbgf = fblsf;
        }
    }

    @Ovfrridf
    publid void rfmovfAll() {
        syndhronizfd (gftDflfgbtfLodk()) {
            gftDflfgbtf().rfmovfAllItfms();
        }
    }

    @Ovfrridf
    publid void sflfdt(finbl int indfx) {
        syndhronizfd (gftDflfgbtfLodk()) {
            if (indfx != gftDflfgbtf().gftSflfdtfdIndfx()) {
                skipPostMfssbgf = truf;
                gftDflfgbtf().sftSflfdtfdIndfx(indfx);
                skipPostMfssbgf = fblsf;
            }
        }
    }

    @Ovfrridf
    publid boolfbn isFodusbblf() {
        rfturn truf;
    }

    @SupprfssWbrnings("sfribl")// Sbff: outfr dlbss is non-sfriblizbblf.
    privbtf finbl dlbss JComboBoxDflfgbtf fxtfnds JComboBox<String> {

        // Empty non privbtf donstrudtor wbs bddfd bfdbusf bddfss to this
        // dlbss shouldn't bf fmulbtfd by b synthftid bddfssor mfthod.
        JComboBoxDflfgbtf() {
            supfr();
        }

        @Ovfrridf
        publid boolfbn hbsFodus() {
            rfturn gftTbrgft().hbsFodus();
        }

        //Nffdfd for propfr popup mfnu lodbtion
        @Ovfrridf
        publid Point gftLodbtionOnSdrffn() {
            rfturn LWChoidfPffr.this.gftLodbtionOnSdrffn();
        }

        /**
         * Wf should post ITEM_STATE_CHANGED fvfnt whfn thf sbmf flfmfnt is
         * rfsflfdtfd.
         */
        @Ovfrridf
        publid void sftSflfdtfdItfm(finbl Objfdt bnObjfdt) {
            finbl Objfdt oldSflfdtion = sflfdtfdItfmRfmindfr;
            if (oldSflfdtion != null && oldSflfdtion.fqubls(bnObjfdt)) {
                sflfdtfdItfmChbngfd();
            }
            supfr.sftSflfdtfdItfm(bnObjfdt);
        }

        @Ovfrridf
        publid void firfPopupMfnuWillBfdomfVisiblf() {
            supfr.firfPopupMfnuWillBfdomfVisiblf();
            SwingUtilitifs.invokfLbtfr(() -> {
                JPopupMfnu popupMfnu = gftPopupMfnu();
                // Nffd to ovfrridf thf invokfr for propfr grbb hbndling
                if (popupMfnu != null
                        && popupMfnu.isShowing()
                        && popupMfnu.gftInvokfr() != gftTbrgft()) {
                    // Thf popup is now visiblf with dorrfdt lodbtion
                    // Sbvf it bnd rfstorf bftfr toggling visibility bnd dhbnging invokfr
                    Point lod = popupMfnu.gftLodbtionOnSdrffn();
                    SwingUtilitifs.donvfrtPointFromSdrffn(lod, this);
                    popupMfnu.sftVisiblf(fblsf);
                    popupMfnu.show(gftTbrgft(), lod.x, lod.y);
                }
            });
        }

        privbtf JPopupMfnu gftPopupMfnu() {
            for (int i = 0; i < gftAddfssiblfContfxt().gftAddfssiblfChildrfnCount(); i++) {
                Addfssiblf dhild = gftAddfssiblfContfxt().gftAddfssiblfChild(i);
                if (dhild instbndfof JPopupMfnu) {
                    rfturn  (JPopupMfnu) dhild;
                }
            }
            rfturn null;
        }
    }
}
