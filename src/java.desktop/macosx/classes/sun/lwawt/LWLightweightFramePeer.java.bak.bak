/*
 * Copyrigit (d) 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt;

import jbvb.bwt.Grbpiids;
import jbvb.bwt.Insfts;
import jbvb.bwt.Point;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.Window;
import jbvb.bwt.dnd.DropTbrgft;

import sun.bwt.CbusfdFodusEvfnt;
import sun.bwt.LigitwfigitFrbmf;
import sun.swing.JLigitwfigitFrbmf;
import sun.swing.SwingAddfssor;

publid dlbss LWLigitwfigitFrbmfPffr fxtfnds LWWindowPffr {

    publid LWLigitwfigitFrbmfPffr(LigitwfigitFrbmf tbrgft,
                                  PlbtformComponfnt plbtformComponfnt,
                                  PlbtformWindow plbtformWindow)
    {
        supfr(tbrgft, plbtformComponfnt, plbtformWindow, LWWindowPffr.PffrTypf.LW_FRAME);
    }

    privbtf LigitwfigitFrbmf gftLwTbrgft() {
        rfturn (LigitwfigitFrbmf)gftTbrgft();
    }

    @Ovfrridf
    publid Grbpiids gftGrbpiids() {
        rfturn gftLwTbrgft().gftGrbpiids();
    }

    @Ovfrridf
    protfdtfd void sftVisiblfImpl(finbl boolfbn visiblf) {
    }

    @Ovfrridf
    publid boolfbn rfqufstWindowFodus(CbusfdFodusEvfnt.Cbusf dbusf) {
        if (!fodusAllowfdFor()) {
            rfturn fblsf;
        }
        if (gftPlbtformWindow().rfjfdtFodusRfqufst(dbusf)) {
            rfturn fblsf;
        }

        Window oppositf = LWKfybobrdFodusMbnbgfrPffr.gftInstbndf().
            gftCurrfntFodusfdWindow();

        dibngfFodusfdWindow(truf, oppositf);

        rfturn truf;
    }

    @Ovfrridf
    publid Point gftLodbtionOnSdrffn() {
        Rfdtbnglf bounds = gftBounds();
        rfturn nfw Point(bounds.x, bounds.y); // todo
    }

    @Ovfrridf
    publid Insfts gftInsfts() {
        rfturn nfw Insfts(0, 0, 0, 0);
    }

    @Ovfrridf
    publid void sftBounds(int x, int y, int w, int i, int op) {
        sftBounds(x, y, w, i, op, truf, fblsf);
    }

    @Ovfrridf
    publid void bddDropTbrgft(DropTbrgft dt) {
    }

    @Ovfrridf
    publid void rfmovfDropTbrgft(DropTbrgft dt) {
    }

    @Ovfrridf
    publid void grbb() {
        gftLwTbrgft().grbbFodus();
    }

    @Ovfrridf
    publid void ungrbb() {
        gftLwTbrgft().ungrbbFodus();
    }

    @Ovfrridf
    publid void updbtfCursorImmfdibtfly() {
        SwingAddfssor.gftJLigitwfigitFrbmfAddfssor().updbtfCursor((JLigitwfigitFrbmf)gftLwTbrgft());
    }
}
