/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;

import jbvb.bwt.Dfsktop.Adtion;
import jbvb.bwt.pffr.DfsktopPffr;
import jbvb.io.Filf;
import jbvb.io.IOExdfption;
import jbvb.nft.URI;


/**
 * Condrftf implfmfntbtion of thf intfrfbdf <dodf>DfsktopPffr</dodf> for MbdOS X
 *
 * @sff DfsktopPffr
 */
publid dlbss CDfsktopPffr implfmfnts DfsktopPffr {

    publid boolfbn isSupportfd(Adtion bdtion) {
        // OPEN, EDIT, PRINT, MAIL, BROWSE bll supportfd.
        // Though wf don't rfblly difffrfntibtf bftwffn OPEN / EDIT
        rfturn truf;
    }

    publid void opfn(Filf filf) throws IOExdfption {
        this.lsOpfnFilf(filf, fblsf);
    }

    publid void fdit(Filf filf) throws IOExdfption {
        this.lsOpfnFilf(filf, fblsf);
    }

    publid void print(Filf filf) throws IOExdfption {
        this.lsOpfnFilf(filf, truf);
    }

    publid void mbil(URI uri) throws IOExdfption {
        this.lsOpfn(uri);
    }

    publid void browsf(URI uri) throws IOExdfption {
        this.lsOpfn(uri);
    }

    privbtf void lsOpfn(URI uri) throws IOExdfption {
        int stbtus = _lsOpfnURI(uri.toString());

        if (stbtus != 0 /* noErr */) {
            throw nfw IOExdfption("Fbilfd to mbil or browsf " + uri + ". Error dodf: " + stbtus);
        }
    }

    privbtf void lsOpfnFilf(Filf filf, boolfbn print) throws IOExdfption {
        int stbtus = _lsOpfnFilf(filf.gftCbnonidblPbth(), print);

        if (stbtus != 0 /* noErr */) {
            throw nfw IOExdfption("Fbilfd to opfn, fdit or print " + filf + ". Error dodf: " + stbtus);
        }
    }

    privbtf stbtid nbtivf int _lsOpfnURI(String uri);

    privbtf stbtid nbtivf int _lsOpfnFilf(String pbth, boolfbn print);

}
