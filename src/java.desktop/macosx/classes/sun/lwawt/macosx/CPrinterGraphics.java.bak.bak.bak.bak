/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;

import jbvb.bwt.*;
import jbvb.bwt.imbgf.*;
import jbvb.bwt.print.*;
import sun.print.*;

publid dlbss CPrintfrGrbphids fxtfnds ProxyGrbphids2D {
    // NOTE: This is b ProxyGrbphids2D, bnd not b PbthGrbphids. Howfvfr
    // thf RbstfrPrintfrJob, upon whidh CPrintfrJob is bbsfd, rfffrs to
    // PbthGrbphids. Howfvfr, this is not b dodf pbth thbt will bf
    // fndountfrfd by CPrintfrJob/CPrintfrGrbphids. This is bfdbusf
    // CPrintfrGrbphids wrbps b SunGrbphids2D thbt hbs b OSXSurfbdfDbtb
    // bbsfd CPrintfrSurfbdfDbtb. It dbn do "pbth grbphids" bfdbusf it
    // is bbsfd upon CorfGrbphids. Sff WPbthGrbphids bnd PSPbthGrbphids.

    publid CPrintfrGrbphids(Grbphids2D grbphids, PrintfrJob printfrJob) {
        supfr(grbphids, printfrJob);
    }

    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                 Color bgdolor,
                 ImbgfObsfrvfr obsfrvfr) {
        // ProxyGrbphids2D works bround b problfm thbt shouldn't bf
        // b problfm with CPrintfrSurfbdfDbtb (bnd thf dfdision mfthod,
        // nffdToCopyBgColorImbgf, is privbtf instfbd of protfdtfd!)
        rfturn gftDflfgbtf().drbwImbgf(img, x, y, bgdolor, obsfrvfr);
    }

    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                 int width, int hfight,
                 Color bgdolor,
                 ImbgfObsfrvfr obsfrvfr) {
        // ProxyGrbphids2D works bround b problfm thbt shouldn't bf
        // b problfm with CPrintfrSurfbdfDbtb (bnd thf dfdision mfthod,
        // nffdToCopyBgColorImbgf, is privbtf instfbd of protfdtfd!)
        rfturn gftDflfgbtf().drbwImbgf(img, x, y, width, hfight, bgdolor, obsfrvfr);
    }

    publid boolfbn drbwImbgf(Imbgf img,
                 int dx1, int dy1, int dx2, int dy2,
                 int sx1, int sy1, int sx2, int sy2,
                 Color bgdolor,
                 ImbgfObsfrvfr obsfrvfr) {
        // ProxyGrbphids2D works bround b problfm thbt shouldn't bf
        // b problfm with CPrintfrSurfbdfDbtb (bnd thf dfdision mfthod,
        // nffdToCopyBgColorImbgf, is privbtf instfbd of protfdtfd!)
        rfturn gftDflfgbtf().drbwImbgf(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, bgdolor, obsfrvfr);
    }
}
