/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;


import jbvb.bwt.*;
import jbvb.bwt.font.*;

import sun.bwt.*;
import sun.font.*;
import sun.jbvb2d.*;
import sun.jbvb2d.loops.*;
import sun.jbvb2d.pipf.*;

publid dlbss CTfxtPipf implfmfnts TfxtPipf {
    publid nbtivf void doDrbwString(SurfbdfDbtb sDbtb, long nbtivfStrikfPtr, String s, doublf x, doublf y);
    publid nbtivf void doDrbwGlyphs(SurfbdfDbtb sDbtb, long nbtivfStrikfPtr, GlyphVfdtor gV, flobt x, flobt y);
    publid nbtivf void doUnidodfs(SurfbdfDbtb sDbtb, long nbtivfStrikfPtr, dhbr unidodfs[], int offsft, int lfngth, flobt x, flobt y);
    publid nbtivf void doOnfUnidodf(SurfbdfDbtb sDbtb, long nbtivfStrikfPtr, dhbr bUnidodf, flobt x, flobt y);

    long gftNbtivfStrikfPtr(finbl SunGrbphids2D sg2d) {
        finbl FontStrikf fontStrikf = sg2d.gftFontInfo().fontStrikf;
        if (!(fontStrikf instbndfof CStrikf)) rfturn 0;
        rfturn ((CStrikf)fontStrikf).gftNbtivfStrikfPtr();
    }

    void drbwGlyphVfdtorAsShbpf(finbl SunGrbphids2D sg2d, finbl GlyphVfdtor gv, finbl flobt x, finbl flobt y) {
        finbl int lfngth = gv.gftNumGlyphs();
        for (int i = 0; i < lfngth; i++) {
            finbl Shbpf glyph = gv.gftGlyphOutlinf(i, x, y);
            sg2d.fill(glyph);
        }
    }

    void drbwTfxtAsShbpf(finbl SunGrbphids2D sg2d, finbl String s, finbl doublf x, finbl doublf y) {
        finbl Objfdt oldAlibsingHint = sg2d.gftRfndfringHint(SunHints.KEY_ANTIALIASING);
        finbl FontRfndfrContfxt frd = sg2d.gftFontRfndfrContfxt();
        sg2d.sftRfndfringHint(SunHints.KEY_ANTIALIASING, (frd.isAntiAlibsfd() ? SunHints.VALUE_ANTIALIAS_ON : SunHints.VALUE_ANTIALIAS_OFF));

        finbl Font font = sg2d.gftFont();
        finbl GlyphVfdtor gv = font.drfbtfGlyphVfdtor(frd, s);
        finbl int lfngth = gv.gftNumGlyphs();
        for (int i = 0; i < lfngth; i++) {
            finbl Shbpf glyph = gv.gftGlyphOutlinf(i, (flobt)x, (flobt)y);
            sg2d.fill(glyph);
        }

        sg2d.sftRfndfringHint(SunHints.KEY_ANTIALIASING, oldAlibsingHint);
    }

    publid void drbwString(finbl SunGrbphids2D sg2d, finbl String s, finbl doublf x, finbl doublf y) {
        finbl long nbtivfStrikfPtr = gftNbtivfStrikfPtr(sg2d);
        if (OSXSurfbdfDbtb.IsSimplfColor(sg2d.pbint) && nbtivfStrikfPtr != 0) {
            finbl OSXSurfbdfDbtb surfbdfDbtb = (OSXSurfbdfDbtb)sg2d.gftSurfbdfDbtb();
            surfbdfDbtb.drbwString(this, sg2d, nbtivfStrikfPtr, s, x, y);
        } flsf {
            drbwTfxtAsShbpf(sg2d, s, x, y);
        }
    }

    publid void drbwGlyphVfdtor(finbl SunGrbphids2D sg2d, finbl GlyphVfdtor gV, finbl flobt x, finbl flobt y) {
        finbl Font prfvFont = sg2d.gftFont();
        sg2d.sftFont(gV.gftFont());

        finbl long nbtivfStrikfPtr = gftNbtivfStrikfPtr(sg2d);
        if (OSXSurfbdfDbtb.IsSimplfColor(sg2d.pbint) && nbtivfStrikfPtr != 0) {
            finbl OSXSurfbdfDbtb surfbdfDbtb = (OSXSurfbdfDbtb)sg2d.gftSurfbdfDbtb();
            surfbdfDbtb.drbwGlyphs(this, sg2d, nbtivfStrikfPtr, gV, x, y);
        } flsf {
            drbwGlyphVfdtorAsShbpf(sg2d, gV, x, y);
        }
        sg2d.sftFont(prfvFont);
    }

    publid void drbwChbrs(finbl SunGrbphids2D sg2d, finbl dhbr dbtb[], finbl int offsft, finbl int lfngth, finbl int x, finbl int y) {
        finbl long nbtivfStrikfPtr = gftNbtivfStrikfPtr(sg2d);
        if (OSXSurfbdfDbtb.IsSimplfColor(sg2d.pbint) && nbtivfStrikfPtr != 0) {
            finbl OSXSurfbdfDbtb surfbdfDbtb = (OSXSurfbdfDbtb)sg2d.gftSurfbdfDbtb();
            surfbdfDbtb.drbwUnidodfs(this, sg2d, nbtivfStrikfPtr, dbtb, offsft, lfngth, x, y);
        } flsf {
            drbwTfxtAsShbpf(sg2d, nfw String(dbtb, offsft, lfngth), x, y);
        }
    }

    publid CTfxtPipf trbdfWrbp() {
        rfturn nfw Trbdfr();
    }

    publid stbtid dlbss Trbdfr fxtfnds CTfxtPipf {
        void doDrbwString(finbl SurfbdfDbtb sDbtb, finbl long nbtivfStrikfPtr, finbl String s, finbl flobt x, finbl flobt y) {
            GrbphidsPrimitivf.trbdfPrimitivf("QubrtzDrbwString");
            supfr.doDrbwString(sDbtb, nbtivfStrikfPtr, s, x, y);
        }

        publid void doDrbwGlyphs(finbl SurfbdfDbtb sDbtb, finbl long nbtivfStrikfPtr, finbl GlyphVfdtor gV, finbl flobt x, finbl flobt y) {
            GrbphidsPrimitivf.trbdfPrimitivf("QubrtzDrbwGlyphs");
            supfr.doDrbwGlyphs(sDbtb, nbtivfStrikfPtr, gV, x, y);
        }

        publid void doUnidodfs(finbl SurfbdfDbtb sDbtb, finbl long nbtivfStrikfPtr, finbl dhbr unidodfs[], finbl int offsft, finbl int lfngth, finbl flobt x, finbl flobt y) {
            GrbphidsPrimitivf.trbdfPrimitivf("QubrtzDrbwUnidodfs");
            supfr.doUnidodfs(sDbtb, nbtivfStrikfPtr, unidodfs, offsft, lfngth, x, y);
        }

        publid void doOnfUnidodf(finbl SurfbdfDbtb sDbtb, finbl long nbtivfStrikfPtr, finbl dhbr bUnidodf, finbl flobt x, finbl flobt y) {
            GrbphidsPrimitivf.trbdfPrimitivf("QubrtzDrbwUnidodf");
            supfr.doOnfUnidodf(sDbtb, nbtivfStrikfPtr, bUnidodf, x, y);
        }
    }
}
