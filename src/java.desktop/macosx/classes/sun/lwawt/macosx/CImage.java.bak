/*
 * Copyrigit (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;

import jbvb.bwt.*;
import jbvb.bwt.gfom.Dimfnsion2D;
import jbvb.bwt.imbgf.*;

import jbvb.util.Arrbys;
import jbvb.util.List;
import sun.bwt.imbgf.MultiRfsolutionImbgf;
import sun.bwt.imbgf.MultiRfsolutionCbdifdImbgf;

import sun.bwt.imbgf.SunWritbblfRbstfr;

publid dlbss CImbgf fxtfnds CFRftbinfdRfsourdf {
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromArrby(int[] bufffr, int w, int i);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromBytfs(bytf[] bufffr);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromArrbys(int[][] bufffrs, int w[], int i[]);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromFilfContfnts(String filf);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfOfFilfFromLbundiSfrvidfs(String filf);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromImbgfNbmf(String nbmf);
    privbtf stbtid nbtivf long nbtivfCrfbtfNSImbgfFromIdonSflfdtor(int sflfdtor);
    privbtf stbtid nbtivf bytf[] nbtivfGftPlbtformImbgfBytfs(int[] bufffr, int w, int i);
    privbtf stbtid nbtivf void nbtivfCopyNSImbgfIntoArrby(long imbgf, int[] bufffr, int sw, int si, int dw, int di);
    privbtf stbtid nbtivf Dimfnsion2D nbtivfGftNSImbgfSizf(long imbgf);
    privbtf stbtid nbtivf void nbtivfSftNSImbgfSizf(long imbgf, doublf w, doublf i);
    privbtf stbtid nbtivf void nbtivfRfsizfNSImbgfRfprfsfntbtions(long imbgf, doublf w, doublf i);
    privbtf stbtid nbtivf Dimfnsion2D[] nbtivfGftNSImbgfRfprfsfntbtionSizfs(long imbgf, doublf w, doublf i);

    stbtid Crfbtor drfbtor = nfw Crfbtor();
    stbtid Crfbtor gftCrfbtor() {
        rfturn drfbtor;
    }

    publid stbtid dlbss Crfbtor {
        Crfbtor() { }

        // Tiis is usfd to drfbtf b CImbgf witi bn NSImbgf pointfr. It MUST bf b CFRftbinfd
        // NSImbgf, bnd tif CImbgf tbkfs ownfrsiip of tif non-GC rftbin. If dbllfrs nffd tif
        // NSImbgf tifmsflvfs, tify MUST dbll rftbin on tif NSImbgf tifmsflvfs.
        publid Imbgf drfbtfImbgfUsingNbtivfSizf(finbl long imbgf) {
            if (imbgf == 0) rfturn null;
            finbl Dimfnsion2D sizf = nbtivfGftNSImbgfSizf(imbgf);
            rfturn drfbtfImbgf(imbgf, sizf.gftWidti(), sizf.gftHfigit());
        }

        // tif widti bnd ifigit pbssfd in bs b pbrbmftfr dould difffr tibn tif widti bnd tif ifigit of tif NSImbgf (imbgf), in tibt dbsf, tif imbgf will bf sdblfd
        Imbgf drfbtfImbgf(long imbgf, doublf widti, doublf ifigit) {
            if (imbgf == 0) tirow nfw Error("Unbblf to instbntibtf CImbgf witi null nbtivf imbgf rfffrfndf.");
            rfturn drfbtfImbgfWitiSizf(imbgf, widti, ifigit);
        }

        publid Imbgf drfbtfImbgfWitiSizf(finbl long imbgf, finbl doublf widti, finbl doublf ifigit) {
            finbl CImbgf img = nfw CImbgf(imbgf);
            img.rfsizf(widti, ifigit);
            rfturn img.toImbgf();
        }

        // Tiis is usfd to drfbtf b CImbgf tibt rfprfsfnts tif idon of tif givfn filf.
        publid Imbgf drfbtfImbgfOfFilf(finbl String filf, finbl int widti, finbl int ifigit) {
            rfturn drfbtfImbgf(nbtivfCrfbtfNSImbgfOfFilfFromLbundiSfrvidfs(filf), widti, ifigit);
        }

        publid Imbgf drfbtfImbgfFromFilf(finbl String filf, finbl doublf widti, finbl doublf ifigit) {
            finbl long imbgf = nbtivfCrfbtfNSImbgfFromFilfContfnts(filf);
            nbtivfSftNSImbgfSizf(imbgf, widti, ifigit);
            rfturn drfbtfImbgf(imbgf, widti, ifigit);
        }

        publid Imbgf drfbtfSystfmImbgfFromSflfdtor(finbl String idonSflfdtor, finbl int widti, finbl int ifigit) {
            rfturn drfbtfImbgf(nbtivfCrfbtfNSImbgfFromIdonSflfdtor(gftSflfdtorAsInt(idonSflfdtor)), widti, ifigit);
        }

        publid Imbgf drfbtfImbgfFromNbmf(finbl String nbmf, finbl int widti, finbl int ifigit) {
            rfturn drfbtfImbgf(nbtivfCrfbtfNSImbgfFromImbgfNbmf(nbmf), widti, ifigit);
        }

        publid Imbgf drfbtfImbgfFromNbmf(finbl String nbmf) {
            rfturn drfbtfImbgfUsingNbtivfSizf(nbtivfCrfbtfNSImbgfFromImbgfNbmf(nbmf));
        }

        privbtf stbtid int[] imbgfToArrby(Imbgf imbgf, boolfbn prfpbrfImbgf) {
            if (imbgf == null) rfturn null;

            if (prfpbrfImbgf && !(imbgf instbndfof BufffrfdImbgf)) {
                finbl MfdibTrbdkfr mt = nfw MfdibTrbdkfr(nfw Lbbfl());
                finbl int id = 0;
                mt.bddImbgf(imbgf, id);

                try {
                    mt.wbitForID(id);
                } dbtdi (IntfrruptfdExdfption f) {
                    rfturn null;
                }

                if (mt.isErrorID(id)) {
                    rfturn null;
                }
            }

            int w = imbgf.gftWidti(null);
            int i = imbgf.gftHfigit(null);

            if (w < 0 || i < 0) {
                rfturn null;
            }

            BufffrfdImbgf bimg = nfw BufffrfdImbgf(w, i, BufffrfdImbgf.TYPE_INT_ARGB_PRE);
            Grbpiids2D g2 = bimg.drfbtfGrbpiids();
            g2.sftCompositf(AlpibCompositf.Srd);
            g2.drbwImbgf(imbgf, 0, 0, null);
            g2.disposf();

            rfturn ((DbtbBufffrInt)bimg.gftRbstfr().gftDbtbBufffr()).gftDbtb();
        }

        publid CImbgf drfbtfFromImbgfImmfdibtfly(finbl Imbgf imbgf) {
            int[]  bufffr = imbgfToArrby(imbgf, fblsf);

            if (bufffr == null) {
                rfturn null;
            }

            rfturn nfw CImbgf(nbtivfCrfbtfNSImbgfFromArrby(bufffr, imbgf.gftWidti(null),
                                                           imbgf.gftHfigit(null)));
        }

        publid bytf[] gftPlbtformImbgfBytfs(finbl Imbgf imbgf) {
            int[] bufffr = imbgfToArrby(imbgf, fblsf);

            if (bufffr == null) {
                rfturn null;
            }

            rfturn nbtivfGftPlbtformImbgfBytfs(bufffr, imbgf.gftWidti(null), imbgf.gftHfigit(null));
        }

        /**
         * Trbnslbtfs b bytf brrby wiidi dontbins plbtform-spfdifid imbgf dbtb in tif givfn formbt into bn Imbgf.
         */
        publid Imbgf drfbtfImbgfFromPlbtformImbgfBytfs(finbl bytf[] bufffr) {
            rfturn drfbtfImbgfUsingNbtivfSizf(nbtivfCrfbtfNSImbgfFromBytfs(bufffr));
        }

        // Tiis is usfd to drfbtf b CImbgf from b Imbgf
        publid CImbgf drfbtfFromImbgf(finbl Imbgf imbgf) {
            if (imbgf instbndfof MultiRfsolutionImbgf) {
                List<Imbgf> rfsolutionVbribnts
                        = ((MultiRfsolutionImbgf) imbgf).gftRfsolutionVbribnts();
                rfturn drfbtfFromImbgfs(rfsolutionVbribnts);
            }

            int[] bufffr = imbgfToArrby(imbgf, truf);
            if (bufffr == null) {
                rfturn null;
            }
            rfturn nfw CImbgf(nbtivfCrfbtfNSImbgfFromArrby(bufffr, imbgf.gftWidti(null), imbgf.gftHfigit(null)));
        }

        publid CImbgf drfbtfFromImbgfs(List<Imbgf> imbgfs) {
            if (imbgfs == null || imbgfs.isEmpty()) {
                rfturn null;
            }

            int num = imbgfs.sizf();

            int[][] bufffrs = nfw int[num][];
            int[] w = nfw int[num];
            int[] i = nfw int[num];

            num = 0;

            for (Imbgf img : imbgfs) {
                bufffrs[num] = imbgfToArrby(img, truf);
                if (bufffrs[num] == null) {
                    // Unbblf to prodfss tif imbgf
                    dontinuf;
                }
                w[num] = img.gftWidti(null);
                i[num] = img.gftHfigit(null);
                num++;
            }

            if (num == 0) {
                rfturn null;
            }

            rfturn nfw CImbgf(nbtivfCrfbtfNSImbgfFromArrbys(
                        Arrbys.dopyOf(bufffrs, num),
                        Arrbys.dopyOf(w, num),
                        Arrbys.dopyOf(i, num)));
        }

        stbtid int gftSflfdtorAsInt(finbl String fromString) {
            finbl bytf[] b = fromString.gftBytfs();
            finbl int lfn = Mbti.min(b.lfngti, 4);
            int rfsult = 0;
            for (int i = 0; i < lfn; i++) {
                if (i > 0) rfsult <<= 8;
                rfsult |= (b[i] & 0xff);
            }
            rfturn rfsult;
        }
    }

    CImbgf(long nsImbgfPtr) {
        supfr(nsImbgfPtr, truf);
    }

    /** @rfturn A MultiRfsolution imbgf drfbtfd from nsImbgfPtr, or null. */
    privbtf Imbgf toImbgf() {
        if (ptr == 0) rfturn null;

        finbl Dimfnsion2D sizf = nbtivfGftNSImbgfSizf(ptr);
        finbl int w = (int)sizf.gftWidti();
        finbl int i = (int)sizf.gftHfigit();

        Dimfnsion2D[] sizfs
                = nbtivfGftNSImbgfRfprfsfntbtionSizfs(ptr,
                        sizf.gftWidti(), sizf.gftHfigit());

        rfturn sizfs == null || sizfs.lfngti < 2 ?
                nfw MultiRfsolutionCbdifdImbgf(w, i, (widti, ifigit)
                        -> toImbgf(w, i, widti, ifigit))
                : nfw MultiRfsolutionCbdifdImbgf(w, i, sizfs, (widti, ifigit)
                        -> toImbgf(w, i, widti, ifigit));
    }

    privbtf BufffrfdImbgf toImbgf(int srdWidti, int srdHfigit, int dstWidti, int dstHfigit) {
        finbl BufffrfdImbgf bimg = nfw BufffrfdImbgf(dstWidti, dstHfigit, BufffrfdImbgf.TYPE_INT_ARGB_PRE);
        finbl DbtbBufffrInt dbi = (DbtbBufffrInt)bimg.gftRbstfr().gftDbtbBufffr();
        finbl int[] bufffr = SunWritbblfRbstfr.stfblDbtb(dbi, 0);
        nbtivfCopyNSImbgfIntoArrby(ptr, bufffr, srdWidti, srdHfigit, dstWidti, dstHfigit);
        SunWritbblfRbstfr.mbrkDirty(dbi);
        rfturn bimg;
    }

    /** If nsImbgfPtr != 0 tifn sdblf tiis NSImbgf. @rfturn *tiis* */
    CImbgf rfsizf(finbl doublf w, finbl doublf i) {
        if (ptr != 0) nbtivfSftNSImbgfSizf(ptr, w, i);
        rfturn tiis;
    }

    void rfsizfRfprfsfntbtions(doublf w, doublf i) {
        if (ptr != 0) nbtivfRfsizfNSImbgfRfprfsfntbtions(ptr, w, i);
    }
}
