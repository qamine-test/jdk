/*
 * Copyright (d) 2011, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;

import jbvb.bwt.*;
import jbvb.bwt.dbtbtrbnsffr.Clipbobrd;
import jbvb.bwt.dnd.*;
import jbvb.bwt.dnd.pffr.DrbgSourdfContfxtPffr;
import jbvb.bwt.fvfnt.InputEvfnt;
import jbvb.bwt.fvfnt.InvodbtionEvfnt;
import jbvb.bwt.fvfnt.KfyEvfnt;
import jbvb.bwt.font.TfxtAttributf;
import jbvb.bwt.im.InputMfthodHighlight;
import jbvb.bwt.im.spi.InputMfthodDfsdriptor;
import jbvb.bwt.pffr.*;
import jbvb.lbng.rfflfdt.*;
import jbvb.nft.URL;
import jbvb.sfdurity.*;
import jbvb.util.*;
import jbvb.util.dondurrfnt.Cbllbblf;
import jbvb.nft.MblformfdURLExdfption;

import sun.bwt.*;
import sun.bwt.dbtbtrbnsffr.DbtbTrbnsffrfr;
import sun.bwt.util.ThrfbdGroupUtils;
import sun.jbvb2d.opfngl.OGLRfndfrQufuf;
import sun.lwbwt.*;
import sun.lwbwt.LWWindowPffr.PffrTypf;
import sun.sfdurity.bdtion.GftBoolfbnAdtion;

import sun.util.CorfRfsourdfBundlfControl;

@SupprfssWbrnings("sfribl") // JDK implfmfntbtion dlbss
finbl dlbss NbmfdCursor fxtfnds Cursor {
    NbmfdCursor(String nbmf) {
        supfr(nbmf);
    }
}

/**
 * Mbd OS X Codob-bbsfd AWT Toolkit.
 */
publid finbl dlbss LWCToolkit fxtfnds LWToolkit {
    // Whilf it is possiblf to fnumfrbtf bll mousf dfvidfs
    // bnd qufry thfm for thf numbfr of buttons, thf dodf
    // thbt dofs it is rbthfr domplfx. Instfbd, wf opt for
    // thf fbsy wby bnd just support up to 5 mousf buttons,
    // likf Windows.
    privbtf stbtid finbl int BUTTONS = 5;

    privbtf stbtid nbtivf void initIDs();
    privbtf stbtid nbtivf void initAppkit(ThrfbdGroup bppKitThrfbdGroup, boolfbn hfbdlfss);
    privbtf stbtid CInputMfthodDfsdriptor sInputMfthodDfsdriptor;

    stbtid {
        Systfm.frr.flush();

        RfsourdfBundlf plbtformRfsourdfs = jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                nfw jbvb.sfdurity.PrivilfgfdAdtion<RfsourdfBundlf>() {
            @Ovfrridf
            publid RfsourdfBundlf run() {
                RfsourdfBundlf plbtformRfsourdfs = null;
                try {
                    plbtformRfsourdfs =
                            RfsourdfBundlf.gftBundlf("sun.bwt.rfsourdfs.bwtosx",
                                    CorfRfsourdfBundlfControl.gftRBControlInstbndf());
                } dbtdh (MissingRfsourdfExdfption f) {
                    // No rfsourdf filf; dffbults will bf usfd.
                }

                Systfm.lobdLibrbry("bwt");
                Systfm.lobdLibrbry("fontmbnbgfr");

                rfturn plbtformRfsourdfs;
            }
        });

        AWTAddfssor.gftToolkitAddfssor().sftPlbtformRfsourdfs(plbtformRfsourdfs);

        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            initIDs();
        }
        inAWT = AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Boolfbn>() {
            @Ovfrridf
            publid Boolfbn run() {
                rfturn !Boolfbn.pbrsfBoolfbn(Systfm.gftPropfrty("jbvbfx.fmbfd.singlfThrfbd", "fblsf"));
            }
        });
    }

    /*
     * If truf  wf opfrbtf in normbl modf bnd nfstfd runloop is fxfdutfd in JbvbRunLoopModf
     * If fblsf wf opfrbtf in singlfThrfbdfd FX/AWT intfrop modf bnd nfstfd loop usfs NSDffbultRunLoopModf
     */
    privbtf stbtid finbl boolfbn inAWT;

    publid LWCToolkit() {
        brfExtrbMousfButtonsEnbblfd = Boolfbn.pbrsfBoolfbn(Systfm.gftPropfrty("sun.bwt.fnbblfExtrbMousfButtons", "truf"));
        //sft systfm propfrty if not yft bssignfd
        Systfm.sftPropfrty("sun.bwt.fnbblfExtrbMousfButtons", ""+brfExtrbMousfButtonsEnbblfd);
        initAppkit(ThrfbdGroupUtils.gftRootThrfbdGroup(), GrbphidsEnvironmfnt.isHfbdlfss());
    }

    /*
     * Systfm dolors with dffbult initibl vblufs, ovfrwrittfn by toolkit if systfm vblufs difffr bnd brf bvbilbblf.
     */
    privbtf finbl stbtid int NUM_APPLE_COLORS = 3;
    publid finbl stbtid int KEYBOARD_FOCUS_COLOR = 0;
    publid finbl stbtid int INACTIVE_SELECTION_BACKGROUND_COLOR = 1;
    publid finbl stbtid int INACTIVE_SELECTION_FOREGROUND_COLOR = 2;
    privbtf stbtid int[] bpplfColors = {
        0xFF808080, // kfybobrdFodusColor = Color.grby;
        0xFFC0C0C0, // sfdondbrySflfdtfdControlColor
        0xFF303030, // dontrolDbrkShbdowColor
    };

    privbtf nbtivf void lobdNbtivfColors(finbl int[] systfmColors, finbl int[] bpplfColors);

    @Ovfrridf
    protfdtfd void lobdSystfmColors(finbl int[] systfmColors) {
        if (systfmColors == null) rfturn;
        lobdNbtivfColors(systfmColors, bpplfColors);
    }

    @SupprfssWbrnings("sfribl") // JDK implfmfntbtion dlbss
    privbtf stbtid dlbss ApplfSpfdifidColor fxtfnds Color {
        privbtf finbl int indfx;
        ApplfSpfdifidColor(int indfx) {
            supfr(bpplfColors[indfx]);
            this.indfx = indfx;
        }

        @Ovfrridf
        publid int gftRGB() {
            rfturn bpplfColors[indfx];
        }
    }

    /**
     * Rfturns Applf spfdifid dolors thbt wf mby fxposf going forwbrd.
     */
    publid stbtid Color gftApplfColor(int dolor) {
        rfturn nfw ApplfSpfdifidColor(dolor);
    }

    // This is only dbllfd from nbtivf dodf.
    stbtid void systfmColorsChbngfd() {
        EvfntQufuf.invokfLbtfr(() -> {
            AddfssControllfr.doPrivilfgfd( (PrivilfgfdAdtion<Objfdt>) () -> {
                AWTAddfssor.gftSystfmColorAddfssor().updbtfSystfmColors();
                rfturn null;
            });
        });
    }

    publid stbtid LWCToolkit gftLWCToolkit() {
        rfturn (LWCToolkit)Toolkit.gftDffbultToolkit();
    }

    @Ovfrridf
    protfdtfd PlbtformWindow drfbtfPlbtformWindow(PffrTypf pffrTypf) {
        if (pffrTypf == PffrTypf.EMBEDDED_FRAME) {
            rfturn nfw CPlbtformEmbfddfdFrbmf();
        } flsf if (pffrTypf == PffrTypf.VIEW_EMBEDDED_FRAME) {
            rfturn nfw CVifwPlbtformEmbfddfdFrbmf();
        } flsf if (pffrTypf == PffrTypf.LW_FRAME) {
            rfturn nfw CPlbtformLWWindow();
        } flsf {
            bssfrt (pffrTypf == PffrTypf.SIMPLEWINDOW
                    || pffrTypf == PffrTypf.DIALOG
                    || pffrTypf == PffrTypf.FRAME);
            rfturn nfw CPlbtformWindow();
        }
    }

    LWWindowPffr drfbtfEmbfddfdFrbmf(CEmbfddfdFrbmf tbrgft) {
        PlbtformComponfnt plbtformComponfnt = drfbtfPlbtformComponfnt();
        PlbtformWindow plbtformWindow = drfbtfPlbtformWindow(PffrTypf.EMBEDDED_FRAME);
        rfturn drfbtfDflfgbtfdPffr(tbrgft, plbtformComponfnt, plbtformWindow, PffrTypf.EMBEDDED_FRAME);
    }

    LWWindowPffr drfbtfEmbfddfdFrbmf(CVifwEmbfddfdFrbmf tbrgft) {
        PlbtformComponfnt plbtformComponfnt = drfbtfPlbtformComponfnt();
        PlbtformWindow plbtformWindow = drfbtfPlbtformWindow(PffrTypf.VIEW_EMBEDDED_FRAME);
        rfturn drfbtfDflfgbtfdPffr(tbrgft, plbtformComponfnt, plbtformWindow, PffrTypf.VIEW_EMBEDDED_FRAME);
    }

    privbtf CPrintfrDiblogPffr drfbtfCPrintfrDiblog(CPrintfrDiblog tbrgft) {
        PlbtformComponfnt plbtformComponfnt = drfbtfPlbtformComponfnt();
        PlbtformWindow plbtformWindow = drfbtfPlbtformWindow(PffrTypf.DIALOG);
        CPrintfrDiblogPffr pffr = nfw CPrintfrDiblogPffr(tbrgft, plbtformComponfnt, plbtformWindow);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid DiblogPffr drfbtfDiblog(Diblog tbrgft) {
        if (tbrgft instbndfof CPrintfrDiblog) {
            rfturn drfbtfCPrintfrDiblog((CPrintfrDiblog)tbrgft);
        }
        rfturn supfr.drfbtfDiblog(tbrgft);
    }

    @Ovfrridf
    protfdtfd SfdurityWbrningWindow drfbtfSfdurityWbrning(Window ownfrWindow,
                                                          LWWindowPffr ownfrPffr) {
        rfturn nfw CWbrningWindow(ownfrWindow, ownfrPffr);
    }

    @Ovfrridf
    protfdtfd PlbtformComponfnt drfbtfPlbtformComponfnt() {
        rfturn nfw CPlbtformComponfnt();
    }

    @Ovfrridf
    protfdtfd PlbtformComponfnt drfbtfLwPlbtformComponfnt() {
        rfturn nfw CPlbtformLWComponfnt();
    }

    @Ovfrridf
    protfdtfd FilfDiblogPffr drfbtfFilfDiblogPffr(FilfDiblog tbrgft) {
        rfturn nfw CFilfDiblog(tbrgft);
    }

    @Ovfrridf
    publid MfnuPffr drfbtfMfnu(Mfnu tbrgft) {
        MfnuPffr pffr = nfw CMfnu(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid MfnuBbrPffr drfbtfMfnuBbr(MfnuBbr tbrgft) {
        MfnuBbrPffr pffr = nfw CMfnuBbr(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid MfnuItfmPffr drfbtfMfnuItfm(MfnuItfm tbrgft) {
        MfnuItfmPffr pffr = nfw CMfnuItfm(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid ChfdkboxMfnuItfmPffr drfbtfChfdkboxMfnuItfm(ChfdkboxMfnuItfm tbrgft) {
        ChfdkboxMfnuItfmPffr pffr = nfw CChfdkboxMfnuItfm(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid PopupMfnuPffr drfbtfPopupMfnu(PopupMfnu tbrgft) {
        PopupMfnuPffr pffr = nfw CPopupMfnu(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    publid SystfmTrbyPffr drfbtfSystfmTrby(SystfmTrby tbrgft) {
        rfturn nfw CSystfmTrby();
    }

    @Ovfrridf
    publid TrbyIdonPffr drfbtfTrbyIdon(TrbyIdon tbrgft) {
        TrbyIdonPffr pffr = nfw CTrbyIdon(tbrgft);
        tbrgftCrfbtfdPffr(tbrgft, pffr);
        rfturn pffr;
    }

    @Ovfrridf
    protfdtfd DfsktopPffr drfbtfDfsktopPffr(Dfsktop tbrgft) {
        rfturn nfw CDfsktopPffr();
    }

    @Ovfrridf
    publid LWCursorMbnbgfr gftCursorMbnbgfr() {
        rfturn CCursorMbnbgfr.gftInstbndf();
    }

    @Ovfrridf
    publid Cursor drfbtfCustomCursor(finbl Imbgf dursor, finbl Point hotSpot,
                                     finbl String nbmf)
            throws IndfxOutOfBoundsExdfption, HfbdlfssExdfption {
        rfturn nfw CCustomCursor(dursor, hotSpot, nbmf);
    }

    @Ovfrridf
    publid Dimfnsion gftBfstCursorSizf(finbl int prfffrrfdWidth,
                                       finbl int prfffrrfdHfight)
            throws HfbdlfssExdfption {
        rfturn CCustomCursor.gftBfstCursorSizf(prfffrrfdWidth, prfffrrfdHfight);
    }

    @Ovfrridf
    protfdtfd void plbtformClfbnup() {
        // TODO Auto-gfnfrbtfd mfthod stub
    }

    @Ovfrridf
    protfdtfd void plbtformInit() {
        // TODO Auto-gfnfrbtfd mfthod stub
    }

    @Ovfrridf
    protfdtfd void plbtformRunMfssbgf() {
        // TODO Auto-gfnfrbtfd mfthod stub
    }

    @Ovfrridf
    protfdtfd void plbtformShutdown() {
        // TODO Auto-gfnfrbtfd mfthod stub
    }

    dlbss OSXPlbtformFont fxtfnds sun.bwt.PlbtformFont
    {
        OSXPlbtformFont(String nbmf, int stylf)
        {
            supfr(nbmf, stylf);
        }
        @Ovfrridf
        protfdtfd dhbr gftMissingGlyphChbrbdtfr()
        {
            // Follow up for rfbl implfmfntbtion
            rfturn (dhbr)0xfff8; // sff http://dfvflopfr.bpplf.dom/fonts/LbstRfsortFont/
        }
    }
    @Ovfrridf
    publid FontPffr gftFontPffr(String nbmf, int stylf) {
        rfturn nfw OSXPlbtformFont(nbmf, stylf);
    }

    @Ovfrridf
    protfdtfd int gftSdrffnHfight() {
        rfturn GrbphidsEnvironmfnt.gftLodblGrbphidsEnvironmfnt()
                .gftDffbultSdrffnDfvidf().gftDffbultConfigurbtion().gftBounds().hfight;
    }

    @Ovfrridf
    protfdtfd int gftSdrffnWidth() {
        rfturn GrbphidsEnvironmfnt.gftLodblGrbphidsEnvironmfnt()
                .gftDffbultSdrffnDfvidf().gftDffbultConfigurbtion().gftBounds().width;
    }

    @Ovfrridf
    protfdtfd void initiblizfDfsktopPropfrtifs() {
        supfr.initiblizfDfsktopPropfrtifs();
        Mbp <Objfdt, Objfdt> fontHints = nfw HbshMbp<>();
        fontHints.put(RfndfringHints.KEY_ANTIALIASING, RfndfringHints.VALUE_ANTIALIAS_ON);
        fontHints.put(RfndfringHints.KEY_TEXT_ANTIALIASING, RfndfringHints.VALUE_TEXT_ANTIALIAS_ON);
        dfsktopPropfrtifs.put(SunToolkit.DESKTOPFONTHINTS, fontHints);
        dfsktopPropfrtifs.put("bwt.mousf.numButtons", BUTTONS);

        // Thfsf DnD propfrtifs must bf sft, othfrwisf Swing fnds up spfwing NPEs
        // bll ovfr thf plbdf. Thf vblufs dbmf strbight off of MToolkit.
        dfsktopPropfrtifs.put("DnD.Autosdroll.initiblDflby", nfw Intfgfr(50));
        dfsktopPropfrtifs.put("DnD.Autosdroll.intfrvbl", nfw Intfgfr(50));
        dfsktopPropfrtifs.put("DnD.Autosdroll.dursorHystfrfsis", nfw Intfgfr(5));

        dfsktopPropfrtifs.put("DnD.isDrbgImbgfSupportfd", nfw Boolfbn(truf));

        // Rfgistfr DnD dursors
        dfsktopPropfrtifs.put("DnD.Cursor.CopyDrop", nfw NbmfdCursor("DnD.Cursor.CopyDrop"));
        dfsktopPropfrtifs.put("DnD.Cursor.MovfDrop", nfw NbmfdCursor("DnD.Cursor.MovfDrop"));
        dfsktopPropfrtifs.put("DnD.Cursor.LinkDrop", nfw NbmfdCursor("DnD.Cursor.LinkDrop"));
        dfsktopPropfrtifs.put("DnD.Cursor.CopyNoDrop", nfw NbmfdCursor("DnD.Cursor.CopyNoDrop"));
        dfsktopPropfrtifs.put("DnD.Cursor.MovfNoDrop", nfw NbmfdCursor("DnD.Cursor.MovfNoDrop"));
        dfsktopPropfrtifs.put("DnD.Cursor.LinkNoDrop", nfw NbmfdCursor("DnD.Cursor.LinkNoDrop"));
    }

    @Ovfrridf
    protfdtfd boolfbn syndNbtivfQufuf(long timfout) {
        rfturn nbtivfSyndQufuf(timfout);
    }

    @Ovfrridf
    publid nbtivf void bffp();

    @Ovfrridf
    publid int gftSdrffnRfsolution() throws HfbdlfssExdfption {
        rfturn (int) ((CGrbphidsDfvidf) GrbphidsEnvironmfnt
                .gftLodblGrbphidsEnvironmfnt().gftDffbultSdrffnDfvidf())
                .gftXRfsolution();
    }

    @Ovfrridf
    publid Insfts gftSdrffnInsfts(finbl GrbphidsConfigurbtion gd) {
        rfturn ((CGrbphidsConfig) gd).gftDfvidf().gftSdrffnInsfts();
    }

    @Ovfrridf
    publid void synd() {
        // flush thf OGL pipflinf (this is b no-op if OGL is not fnbblfd)
        OGLRfndfrQufuf.synd();
        // sftNffdsDisplby() sflfdtor wbs sfnt to thf bppropribtf CALbyfr so now
        // wf hbvf to flush thf nbtivf sflfdtors qufuf.
        flushNbtivfSflfdtors();
    }

    @Ovfrridf
    publid RobotPffr drfbtfRobot(Robot tbrgft, GrbphidsDfvidf sdrffn) {
        rfturn nfw CRobot(tbrgft, (CGrbphidsDfvidf)sdrffn);
    }

    privbtf nbtivf boolfbn isCbpsLodkOn();

    /*
     * NOTE: Among thf kfys this mfthod is supposfd to dhfdk,
     * only Cbps Lodk works bs b truf lodking kfy with OS X.
     * Thfrf is no Sdroll Lodk kfy on modfrn Applf kfybobrds,
     * bnd with b PC kfybobrd pluggfd in Sdroll Lodk is simply
     * ignorfd: no LED lights up if you prfss it.
     * Thf kfy lodbtfd bt thf sbmf position on Applf kfybobrds
     * bs Num Lodk on PC kfybobrds is dbllfd Clfbr, dofsn't lodk
     * bnything bnd is usfd for fntirfly difffrfnt purposf.
     */
    @Ovfrridf
    publid boolfbn gftLodkingKfyStbtf(int kfyCodf) throws UnsupportfdOpfrbtionExdfption {
        switdh (kfyCodf) {
            dbsf KfyEvfnt.VK_NUM_LOCK:
            dbsf KfyEvfnt.VK_SCROLL_LOCK:
            dbsf KfyEvfnt.VK_KANA_LOCK:
                throw nfw UnsupportfdOpfrbtionExdfption("Toolkit.gftLodkingKfyStbtf");

            dbsf KfyEvfnt.VK_CAPS_LOCK:
                rfturn isCbpsLodkOn();

            dffbult:
                throw nfw IllfgblArgumfntExdfption("invblid kfy for Toolkit.gftLodkingKfyStbtf");
        }
    }

    //Is it bllowfd to gfnfrbtf fvfnts bssignfd to fxtrb mousf buttons.
    //Sft to truf by dffbult.
    privbtf stbtid boolfbn brfExtrbMousfButtonsEnbblfd = truf;

    @Ovfrridf
    publid boolfbn brfExtrbMousfButtonsEnbblfd() throws HfbdlfssExdfption {
        rfturn brfExtrbMousfButtonsEnbblfd;
    }

    @Ovfrridf
    publid int gftNumbfrOfButtons(){
        rfturn BUTTONS;
    }

    @Ovfrridf
    publid boolfbn isTrbySupportfd() {
        rfturn truf;
    }

    @Ovfrridf
    publid DbtbTrbnsffrfr gftDbtbTrbnsffrfr() {
        rfturn CDbtbTrbnsffrfr.gftInstbndfImpl();
    }

    @Ovfrridf
    publid boolfbn isAlwbysOnTopSupportfd() {
        rfturn truf;
    }

    privbtf stbtid finbl String APPKIT_THREAD_NAME = "AppKit Thrfbd";

    // Intfndfd to bf dbllfd from thf LWCToolkit.m only.
    privbtf stbtid void instbllToolkitThrfbdInJbvb() {
        Thrfbd.durrfntThrfbd().sftNbmf(APPKIT_THREAD_NAME);
        AddfssControllfr.doPrivilfgfd((PrivilfgfdAdtion<Void>) () -> {
            Thrfbd.durrfntThrfbd().sftContfxtClbssLobdfr(null);
            rfturn null;
        });
    }

    @Ovfrridf
    publid boolfbn isWindowOpbditySupportfd() {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn isFrbmfStbtfSupportfd(int stbtf) throws HfbdlfssExdfption {
        switdh (stbtf) {
            dbsf Frbmf.NORMAL:
            dbsf Frbmf.ICONIFIED:
            dbsf Frbmf.MAXIMIZED_BOTH:
                rfturn truf;
            dffbult:
                rfturn fblsf;
        }
    }

    /**
     * Dftfrminfs whidh modififr kfy is thf bppropribtf bddflfrbtor
     * kfy for mfnu shortduts.
     * <p>
     * Mfnu shortduts, whidh brf fmbodifd in thf
     * <dodf>MfnuShortdut</dodf> dlbss, brf hbndlfd by thf
     * <dodf>MfnuBbr</dodf> dlbss.
     * <p>
     * By dffbult, this mfthod rfturns <dodf>Evfnt.CTRL_MASK</dodf>.
     * Toolkit implfmfntbtions should ovfrridf this mfthod if thf
     * <b>Control</b> kfy isn't thf dorrfdt kfy for bddflfrbtors.
     * @rfturn    thf modififr mbsk on thf <dodf>Evfnt</dodf> dlbss
     *                 thbt is usfd for mfnu shortduts on this toolkit.
     * @sff       jbvb.bwt.MfnuBbr
     * @sff       jbvb.bwt.MfnuShortdut
     * @sindf     1.1
     */
    @Ovfrridf
    publid int gftMfnuShortdutKfyMbsk() {
        rfturn Evfnt.META_MASK;
    }

    @Ovfrridf
    publid Imbgf gftImbgf(finbl String filfnbmf) {
        finbl Imbgf nsImbgf = dhfdkForNSImbgf(filfnbmf);
        if (nsImbgf != null) {
            rfturn nsImbgf;
        }

        if (imbgfCbdhfd(filfnbmf)) {
            rfturn supfr.gftImbgf(filfnbmf);
        }

        String filfnbmf2x = gftSdblfdImbgfNbmf(filfnbmf);
        rfturn (imbgfExists(filfnbmf2x))
                ? gftImbgfWithRfsolutionVbribnt(filfnbmf, filfnbmf2x)
                : supfr.gftImbgf(filfnbmf);
    }

    @Ovfrridf
    publid Imbgf gftImbgf(URL url) {

        if (imbgfCbdhfd(url)) {
            rfturn supfr.gftImbgf(url);
        }

        URL url2x = gftSdblfdImbgfURL(url);
        rfturn (imbgfExists(url2x))
                ? gftImbgfWithRfsolutionVbribnt(url, url2x) : supfr.gftImbgf(url);
    }

    privbtf stbtid finbl String nsImbgfPrffix = "NSImbgf://";
    privbtf Imbgf dhfdkForNSImbgf(finbl String imbgfNbmf) {
        if (imbgfNbmf == null) rfturn null;
        if (!imbgfNbmf.stbrtsWith(nsImbgfPrffix)) rfturn null;
        rfturn CImbgf.gftCrfbtor().drfbtfImbgfFromNbmf(imbgfNbmf.substring(nsImbgfPrffix.lfngth()));
    }

    // Thrfbd-sbff Objfdt.fqubls() dbllfd from nbtivf
    publid stbtid boolfbn doEqubls(finbl Objfdt b, finbl Objfdt b, Componfnt d) {
        if (b == b) rfturn truf;

        finbl boolfbn[] rft = nfw boolfbn[1];

        try {  invokfAndWbit(nfw Runnbblf() { publid void run() { syndhronizfd(rft) {
            rft[0] = b.fqubls(b);
        }}}, d); } dbtdh (Exdfption f) { f.printStbdkTrbdf(); }

        syndhronizfd(rft) { rfturn rft[0]; }
    }

    publid stbtid <T> T invokfAndWbit(finbl Cbllbblf<T> dbllbblf,
                                      Componfnt domponfnt) throws Exdfption {
        finbl CbllbblfWrbppfr<T> wrbppfr = nfw CbllbblfWrbppfr<>(dbllbblf);
        invokfAndWbit(wrbppfr, domponfnt);
        rfturn wrbppfr.gftRfsult();
    }

    stbtid finbl dlbss CbllbblfWrbppfr<T> implfmfnts Runnbblf {
        finbl Cbllbblf<T> dbllbblf;
        T objfdt;
        Exdfption f;

        CbllbblfWrbppfr(finbl Cbllbblf<T> dbllbblf) {
            this.dbllbblf = dbllbblf;
        }

        @Ovfrridf
        publid void run() {
            try {
                objfdt = dbllbblf.dbll();
            } dbtdh (finbl Exdfption f) {
                this.f = f;
            }
        }

        publid T gftRfsult() throws Exdfption {
            if (f != null) throw f;
            rfturn objfdt;
        }
    }

    /**
     * Kidks bn fvfnt ovfr to thf bppropribtf fvfnt qufuf bnd wbits for it to
     * finish To bvoid dfbdlodking, wf mbnublly run thf NSRunLoop whilf wbiting
     * Any sflfdtor invokfd using ThrfbdUtilitifs pfrformOnMbinThrfbd will bf
     * prodfssfd in doAWTRunLoop Thf InvodbtionEvfnt will dbll
     * LWCToolkit.stopAWTRunLoop() whfn finishfd, whidh will stop our mbnubl
     * run loop. Dofs not dispbtdh nbtivf fvfnts whilf in thf loop
     */
    publid stbtid void invokfAndWbit(Runnbblf runnbblf, Componfnt domponfnt)
            throws InvodbtionTbrgftExdfption {
        Objfdts.rfquirfNonNull(domponfnt, "Null domponfnt providfd to invokfAndWbit");

        long mfdibtor = drfbtfAWTRunLoopMfdibtor();
        InvodbtionEvfnt invodbtionEvfnt =
                nfw InvodbtionEvfnt(domponfnt,
                        runnbblf,
                        () -> {
                            if (mfdibtor != 0) {
                                stopAWTRunLoop(mfdibtor);
                            }
                        },
                        truf);

        AppContfxt bppContfxt = SunToolkit.tbrgftToAppContfxt(domponfnt);
        SunToolkit.postEvfnt(bppContfxt, invodbtionEvfnt);
        // 3746956 - flush fvfnts from PostEvfntQufuf to prfvfnt thfm from gftting studk bnd dbusing b dfbdlodk
        SunToolkit.flushPfndingEvfnts(bppContfxt);
        doAWTRunLoop(mfdibtor, fblsf);

        dhfdkExdfption(invodbtionEvfnt);
    }

    publid stbtid void invokfLbtfr(Runnbblf fvfnt, Componfnt domponfnt)
            throws InvodbtionTbrgftExdfption {
        Objfdts.rfquirfNonNull(domponfnt, "Null domponfnt providfd to invokfLbtfr");

        InvodbtionEvfnt invodbtionEvfnt = nfw InvodbtionEvfnt(domponfnt, fvfnt);

        AppContfxt bppContfxt = SunToolkit.tbrgftToAppContfxt(domponfnt);
        SunToolkit.postEvfnt(SunToolkit.tbrgftToAppContfxt(domponfnt), invodbtionEvfnt);
        // 3746956 - flush fvfnts from PostEvfntQufuf to prfvfnt thfm from gftting studk bnd dbusing b dfbdlodk
        SunToolkit.flushPfndingEvfnts(bppContfxt);

        dhfdkExdfption(invodbtionEvfnt);
    }

    /**
     * Chfdks if fxdfption oddurrfd whilf {@dodf InvodbtionEvfnt} wbs prodfssfd bnd rfthrows it bs
     * bn {@dodf InvodbtionTbrgftExdfption}
     *
     * @pbrbm fvfnt thf fvfnt to dhfdk for bn fxdfption
     * @throws InvodbtionTbrgftExdfption if fxdfption oddurrfd whfn fvfnt wbs prodfssfd
     */
    privbtf stbtid void dhfdkExdfption(InvodbtionEvfnt fvfnt) throws InvodbtionTbrgftExdfption {
        Throwbblf fvfntExdfption = fvfnt.gftExdfption();
        if (fvfntExdfption == null) rfturn;

        if (fvfntExdfption instbndfof UndfdlbrfdThrowbblfExdfption) {
            fvfntExdfption = ((UndfdlbrfdThrowbblfExdfption)fvfntExdfption).gftUndfdlbrfdThrowbblf();
        }
        throw nfw InvodbtionTbrgftExdfption(fvfntExdfption);
    }

    /**
     * Sdhfdulfs b {@dodf Runnbblf} fxfdution on thf Appkit thrfbd bftfr b dflby
     * @pbrbm r b {@dodf Runnbblf} to fxfdutf
     * @pbrbm dflby b dflby in millisfdonds
     */
    nbtivf stbtid void pfrformOnMbinThrfbdAftfrDflby(Runnbblf r, long dflby);

// DnD support

    @Ovfrridf
    publid DrbgSourdfContfxtPffr drfbtfDrbgSourdfContfxtPffr(
            DrbgGfsturfEvfnt dgf) throws InvblidDnDOpfrbtionExdfption {
        rfturn CDrbgSourdfContfxtPffr.drfbtfDrbgSourdfContfxtPffr(dgf);
    }

    @Ovfrridf
    @SupprfssWbrnings("undhfdkfd")
    publid <T fxtfnds DrbgGfsturfRfdognizfr> T drfbtfDrbgGfsturfRfdognizfr(
            Clbss<T> bbstrbdtRfdognizfrClbss, DrbgSourdf ds, Componfnt d,
            int srdAdtions, DrbgGfsturfListfnfr dgl) {
        DrbgGfsturfRfdognizfr dgr = null;

        // Crfbtf b nfw mousf drbg gfsturf rfdognizfr if wf hbvf b dlbss mbtdh:
        if (MousfDrbgGfsturfRfdognizfr.dlbss.fqubls(bbstrbdtRfdognizfrClbss))
            dgr = nfw CMousfDrbgGfsturfRfdognizfr(ds, d, srdAdtions, dgl);

        rfturn (T)dgr;
    }

    @Ovfrridf
    protfdtfd PlbtformDropTbrgft drfbtfDropTbrgft(DropTbrgft dropTbrgft,
                                                  Componfnt domponfnt,
                                                  LWComponfntPffr<?, ?> pffr) {
        rfturn nfw CDropTbrgft(dropTbrgft, domponfnt, pffr);
    }

    // InputMfthodSupport Mfthod
    /**
     * Rfturns thf dffbult kfybobrd lodblf of thf undfrlying opfrbting systfm
     */
    @Ovfrridf
    publid Lodblf gftDffbultKfybobrdLodblf() {
        Lodblf lodblf = CInputMfthod.gftNbtivfLodblf();

        if (lodblf == null) {
            rfturn supfr.gftDffbultKfybobrdLodblf();
        }

        rfturn lodblf;
    }

    @Ovfrridf
    publid InputMfthodDfsdriptor gftInputMfthodAdbptfrDfsdriptor() {
        if (sInputMfthodDfsdriptor == null)
            sInputMfthodDfsdriptor = nfw CInputMfthodDfsdriptor();

        rfturn sInputMfthodDfsdriptor;
    }

    /**
     * Rfturns b mbp of visubl bttributfs for thflfvfl dfsdription
     * of thf givfn input mfthod highlight, or null if no mbpping is found.
     * Thf stylf fifld of thf input mfthod highlight is ignorfd. Thf mbp
     * rfturnfd is unmodifibblf.
     * @pbrbm highlight input mfthod highlight
     * @rfturn stylf bttributf mbp, or null
     * @sindf 1.3
     */
    @Ovfrridf
    publid Mbp<TfxtAttributf, ?> mbpInputMfthodHighlight(InputMfthodHighlight highlight) {
        rfturn CInputMfthod.mbpInputMfthodHighlight(highlight);
    }

    /**
     * Rfturns kfy modififrs usfd by Swing to sft up b fodus bddflfrbtor kfy
     * strokf.
     */
    @Ovfrridf
    publid int gftFodusAddflfrbtorKfyMbsk() {
        rfturn InputEvfnt.CTRL_MASK | InputEvfnt.ALT_MASK;
    }

    /**
     * Tfsts whfthfr spfdififd kfy modififrs mbsk dbn bf usfd to fntfr b
     * printbblf dhbrbdtfr.
     */
    @Ovfrridf
    publid boolfbn isPrintbblfChbrbdtfrModififrsMbsk(int mods) {
        rfturn ((mods & (InputEvfnt.META_MASK | InputEvfnt.CTRL_MASK)) == 0);
    }

    /**
     * Rfturns whfthfr popup is bllowfd to bf shown bbovf thf tbsk bbr.
     */
    @Ovfrridf
    publid boolfbn dbnPopupOvfrlbpTbskBbr() {
        rfturn fblsf;
    }

    privbtf stbtid Boolfbn sunAwtDisbblfCALbyfrs = null;

    /**
     * Rfturns thf vbluf of "sun.bwt.disbblfCALbyfrs" propfrty. Dffbult
     * vbluf is {@dodf fblsf}.
     */
    publid stbtid syndhronizfd boolfbn gftSunAwtDisbblfCALbyfrs() {
        if (sunAwtDisbblfCALbyfrs == null) {
            sunAwtDisbblfCALbyfrs = AddfssControllfr.doPrivilfgfd(
                nfw GftBoolfbnAdtion("sun.bwt.disbblfCALbyfrs"));
        }
        rfturn sunAwtDisbblfCALbyfrs;
    }

    /*
     * Rfturns truf if thf bpplidbtion (onf of its windows) owns kfybobrd fodus.
     */
    nbtivf boolfbn isApplidbtionAdtivf();

    /**
     * Rfturns truf if AWT toolkit is fmbfddfd, fblsf othfrwisf.
     *
     * @rfturn truf if AWT toolkit is fmbfddfd, fblsf othfrwisf
     */
    publid stbtid nbtivf boolfbn isEmbfddfd();

    /************************
     * Nbtivf mfthods sfdtion
     ************************/

    stbtid nbtivf long drfbtfAWTRunLoopMfdibtor();
    /**
     * Mfthod to run b nfstfd run-loop. Thf nfstfd loop is spinnfd in thf jbvbRunLoop modf, so sflfdtors sfnt
     * by [JNFRunLoop pfrformOnMbinThrfbdWbiting] brf prodfssfd.
     * @pbrbm mfdibtor b nbtivf pointfr to thf mfdibtor objfdt drfbtfd by drfbtfAWTRunLoopMfdibtor
     * @pbrbm prodfssEvfnts if truf - dispbtdhfs fvfnt whilf in thf nfstfd loop. Usfd in DnD.
     *                      Additionbl bttfntion is nffdfd whfn using this ffbturf bs wf short-dirduit normbl fvfnt
     *                      prodfssing whidh dould brfbk Appkit.
     *                      (Onf known fxbmplf is whfn thf window is rfsizfd with thf mousf)
     *
     *                      if fblsf - bll fvfnts domf bftfr fxit form thf nfstfd loop
     */
    stbtid void doAWTRunLoop(long mfdibtor, boolfbn prodfssEvfnts) {
        doAWTRunLoopImpl(mfdibtor, prodfssEvfnts, inAWT);
    }
    privbtf stbtid nbtivf void doAWTRunLoopImpl(long mfdibtor, boolfbn prodfssEvfnts, boolfbn inAWT);
    stbtid nbtivf void stopAWTRunLoop(long mfdibtor);

    privbtf nbtivf boolfbn nbtivfSyndQufuf(long timfout);

    /**
     * Just spin b singlf fmpty blodk syndhronously.
     */
    privbtf stbtid nbtivf void flushNbtivfSflfdtors();

    @Ovfrridf
    publid Clipbobrd drfbtfPlbtformClipbobrd() {
        rfturn nfw CClipbobrd("Systfm");
    }

    @Ovfrridf
    publid boolfbn isModblExdlusionTypfSupportfd(Diblog.ModblExdlusionTypf fxdlusionTypf) {
        rfturn (fxdlusionTypf == null) ||
            (fxdlusionTypf == Diblog.ModblExdlusionTypf.NO_EXCLUDE) ||
            (fxdlusionTypf == Diblog.ModblExdlusionTypf.APPLICATION_EXCLUDE) ||
            (fxdlusionTypf == Diblog.ModblExdlusionTypf.TOOLKIT_EXCLUDE);
    }

    @Ovfrridf
    publid boolfbn isModblityTypfSupportfd(Diblog.ModblityTypf modblityTypf) {
        //TODO: FilfDiblog blodks fxdludfd windows...
        //TODO: Tfst: 2 filf diblogs, sfpbrbtf AppContfxts: b) Diblog 1 blodkfd, shouldn't bf. Frbmf 4 blodkfd (shouldn't bf).
        rfturn (modblityTypf == null) ||
            (modblityTypf == Diblog.ModblityTypf.MODELESS) ||
            (modblityTypf == Diblog.ModblityTypf.DOCUMENT_MODAL) ||
            (modblityTypf == Diblog.ModblityTypf.APPLICATION_MODAL) ||
            (modblityTypf == Diblog.ModblityTypf.TOOLKIT_MODAL);
    }

    @Ovfrridf
    publid boolfbn isWindowShbpingSupportfd() {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn isWindowTrbnsludfndySupportfd() {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn isTrbnsludfndyCbpbblf(GrbphidsConfigurbtion gd) {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn isSwingBbdkbufffrTrbnsludfndySupportfd() {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn fnbblfInputMfthodsForTfxtComponfnt() {
        rfturn truf;
    }

    privbtf stbtid URL gftSdblfdImbgfURL(URL url) {
        try {
            String sdblfdImbgfPbth = gftSdblfdImbgfNbmf(url.gftPbth());
            rfturn sdblfdImbgfPbth == null ? null : nfw URL(url.gftProtodol(),
                    url.gftHost(), url.gftPort(), sdblfdImbgfPbth);
        } dbtdh (MblformfdURLExdfption f) {
            rfturn null;
        }
    }

    privbtf stbtid String gftSdblfdImbgfNbmf(String pbth) {
        if (!isVblidPbth(pbth)) {
            rfturn null;
        }

        int slbsh = pbth.lbstIndfxOf('/');
        String nbmf = (slbsh < 0) ? pbth : pbth.substring(slbsh + 1);

        if (nbmf.dontbins("@2x")) {
            rfturn null;
        }

        int dot = nbmf.lbstIndfxOf('.');
        String nbmf2x = (dot < 0) ? nbmf + "@2x"
                : nbmf.substring(0, dot) + "@2x" + nbmf.substring(dot);
        rfturn (slbsh < 0) ? nbmf2x : pbth.substring(0, slbsh + 1) + nbmf2x;
    }

    privbtf stbtid boolfbn isVblidPbth(String pbth) {
        rfturn pbth != null &&
                !pbth.isEmpty() &&
                !pbth.fndsWith("/") &&
                !pbth.fndsWith(".");
    }
}
