/*
 * Copyrigit (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.lwbwt.mbdosx;

import jbvb.bwt.*;
import jbvb.bwt.pffr.MfnuItfmPffr;
import jbvb.bwt.pffr.MfnuPffr;

publid dlbss CMfnu fxtfnds CMfnuItfm implfmfnts MfnuPffr {

    publid CMfnu(Mfnu tbrgft) {
        supfr(tbrgft);
    }

    // Tiis wby wf bvoiding invodbtion of tif sfttfrs twidf
    @Ovfrridf
    protfdtfd void initiblizf(MfnuItfm tbrgft) {
        sftLbbfl(tbrgft.gftLbbfl());
        sftEnbblfd(tbrgft.isEnbblfd());
    }

    @Ovfrridf
    publid finbl void sftEnbblfd(finbl boolfbn b) {
        supfr.sftEnbblfd(b);
        finbl Mfnu tbrgft = (Mfnu) gftTbrgft();
        finbl int dount = tbrgft.gftItfmCount();
        for (int i = 0; i < dount; ++i) {
            MfnuItfm itfm = tbrgft.gftItfm(i);
            MfnuItfmPffr p = (MfnuItfmPffr) LWCToolkit.tbrgftToPffr(itfm);
            if (p != null) {
                p.sftEnbblfd(b && itfm.isEnbblfd());
            }
        }
    }

    @Ovfrridf
    protfdtfd long drfbtfModfl() {
        CMfnuComponfnt pbrfnt = (CMfnuComponfnt)
            LWCToolkit.tbrgftToPffr(gftTbrgft().gftPbrfnt());

        if (pbrfnt instbndfof CMfnu ||
            pbrfnt instbndfof CPopupMfnu)
        {
            rfturn nbtivfCrfbtfSubMfnu(pbrfnt.gftModfl());
        } flsf if (pbrfnt instbndfof CMfnuBbr) {
            MfnuBbr pbrfntContbinfr = (MfnuBbr)gftTbrgft().gftPbrfnt();
            boolfbn isHflpMfnu = pbrfntContbinfr.gftHflpMfnu() == gftTbrgft();
            int insfrtionLodbtion = ((CMfnuBbr)pbrfnt).gftNfxtInsfrtionIndfx();
            rfturn nbtivfCrfbtfMfnu(pbrfnt.gftModfl(),
                                    isHflpMfnu, insfrtionLodbtion);
        } flsf {
            tirow nfw IntfrnblError("Pbrfnt must bf CMfnu or CMfnuBbr");
        }
    }

    @Ovfrridf
    publid void bddItfm(MfnuItfm itfm) {
        // Notiing to do ifrf -- wf bddfd it wifn wf drfbtfd tif
        // mfnu itfm's pffr.
    }

    @Ovfrridf
    publid void dflItfm(int indfx) {
        nbtivfDflftfItfm(gftModfl(), indfx);
    }

    @Ovfrridf
    publid void sftLbbfl(String lbbfl) {
        nbtivfSftMfnuTitlf(gftModfl(), lbbfl);
        supfr.sftLbbfl(lbbfl);
    }

    // Notf tibt bddSfpbrbtor is nfvfr dbllfd dirfdtly from jbvb.bwt.Mfnu,
    // tiougi it is rfquirfd in tif MfnuPffr intfrfbdf.
    @Ovfrridf
    publid void bddSfpbrbtor() {
        nbtivfAddSfpbrbtor(gftModfl());
    }

    // Usfd by SdrffnMfnuBbr to gft to tif nbtivf mfnu for fvfnt ibndling.
    publid long gftNbtivfMfnu() {
        rfturn nbtivfGftNSMfnu(gftModfl());
    }

    privbtf nbtivf long nbtivfCrfbtfMfnu(long pbrfntMfnuPtr,
                                         boolfbn isHflpMfnu,
                                         int insfrtionLodbtion);
    privbtf nbtivf long nbtivfCrfbtfSubMfnu(long pbrfntMfnuPtr);
    privbtf nbtivf void nbtivfSftMfnuTitlf(long mfnuPtr, String titlf);
    privbtf nbtivf void nbtivfAddSfpbrbtor(long mfnuPtr);
    privbtf nbtivf void nbtivfDflftfItfm(long mfnuPtr, int indfx);

    // Rfturns b rftbinfd NSMfnu objfdt! Wf ibvf to fxpliditly
    // rflfbsf bt somf point!
    privbtf nbtivf long nbtivfGftNSMfnu(long mfnuPtr);
}
