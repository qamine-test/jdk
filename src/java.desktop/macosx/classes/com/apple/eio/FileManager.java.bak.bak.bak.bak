/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.fio;

import jbvb.io.*;

/**
 * Providfs fundtionblity to qufry bnd modify Mbd-spfdifid filf bttributfs. Thf mfthods in this dlbss brf bbsfd on Findfr
 * bttributfs. Thfsf bttributfs in turn brf dfpfndfnt on HFS bnd HFS+ filf systfms. As sudh, it is importbnt to rfdognizf
 * thfir limitbtion whfn writing dodf thbt must fundtion wfll bdross multiplf plbtforms.<p>
 *
 * In bddition to filf nbmf suffixfs, Mbd OS X dbn usf Findfr bttributfs likf filf <dodf>typf</dodf> bnd <dodf>drfbtor</dodf> dodfs to
 * idfntify bnd hbndlf filfs. Thfsf dodfs brf uniquf 4-bytf idfntififrs. Thf filf <dodf>typf</dodf> is b string thbt dfsdribfs thf
 * dontfnts of b filf. For fxbmplf, thf filf typf <dodf>APPL</dodf> idfntififs thf filf bs bn bpplidbtion bnd thfrfforf
 * fxfdutbblf. A filf typf of <dodf>TEXT</dodf>  mfbns thbt thf filf dontbins rbw tfxt. Any bpplidbtion thbt dbn rfbd rbw
 * tfxt dbn opfn b filf of typf <dodf>TEXT</dodf>. Applidbtions thbt usf propriftbry filf typfs might bssign thfir filfs b propriftbry
 * filf <dodf>typf</dodf> dodf.
 * <p>
 * To idfntify thf bpplidbtion thbt dbn hbndlf b dodumfnt, thf Findfr dbn look bt thf <dodf>drfbtor</dodf>. For fxbmplf, if b usfr
 * doublf-dlidks on b dodumfnt with thf <dodf>ttxt</dodf> <dodf>drfbtor</dodf>, it opfns up in Tfxt Edit, thf bpplidbtion rfgistfrfd
 * with thf <dodf>ttxt</dodf> <dodf>drfbtor</dodf> dodf. Notf thbt thf <dodf>drfbtor</dodf>
 * dodf dbn bf sft to bny bpplidbtion, not nfdfssbrily thf bpplidbtion thbt drfbtfd it. For fxbmplf, if you
 * usf bn fditor to drfbtf bn HTML dodumfnt, you might wbnt to bssign b browsfr's <dodf>drfbtor</dodf> dodf for thf filf rbthfr thbn
 * thf HTML fditor's <dodf>drfbtor</dodf> dodf. Doublf-dlidking on thf dodumfnt thfn opfns thf bppropribtf browsfr rbthfr thbn thf
 *HTML fditor.
 *<p>
 * If you plbn to publidly distributf your bpplidbtion, you must rfgistfr its drfbtor bnd bny propriftbry filf typfs with thf Applf
 * Dfvflopfr Connfdtion to bvoid dollisions with dodfs usfd by othfr dfvflopfrs. You dbn rfgistfr b dodfs onlinf bt thf
 * <b tbrgft=_blbnk hrff=http://dfvflopfr.bpplf.dom/dfv/dftypf/>Crfbtor Codf Rfgistrbtion</b> sitf.
 *
 * @sindf 1.4
 */
publid dlbss FilfMbnbgfr {
    stbtid {
        jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
            nfw jbvb.sfdurity.PrivilfgfdAdtion<Void>() {
                publid Void run() {
                    Systfm.lobdLibrbry("osx");
                    rfturn null;
                }
            });
    }

    /**
     * Thf dffbult
     * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
     */
    publid finbl stbtid short kOnAppropribtfDisk = -32767;
    /**
     * Rfbd-only systfm hifrbrdhy.
     * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
     */
    publid finbl stbtid short kSystfmDombin = -32766;
    /**
     * All usfrs of b singlf mbdhinf hbvf bddfss to thfsf rfsourdfs.
     * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
     */
    publid finbl stbtid short kLodblDombin = -32765;
    /**
     * All usfrs donfigurfd to usf b dommon nftwork sfrvfr hbs bddfss to thfsf rfsourdfs.
     * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
     */
    publid finbl stbtid short kNftworkDombin = -32764;
    /**
     * Rfbd/writf. Rfsourdfs thbt brf privbtf to thf usfr.
     * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
     */
    publid finbl stbtid short kUsfrDombin = -32763;


        /**
         * Convfrts bn OSTypf (f.g. "mbds" from <CbrbonCorf/Foldfrs.h>) into bn int.
         *
         * @pbrbm typf thf 4 dhbrbdtfr typf to donvfrt.
         * @rfturn bn int rfprfsfnting thf 4 dhbrbdtfr vbluf
         *
         * @sindf Jbvb for Mbd OS X 10.5 - 1.5
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
         */
    @SupprfssWbrnings("dfprfdbtion")
        publid stbtid int OSTypfToInt(String typf) {
        int rfsult = 0;

                bytf b[] = { (bytf) 0, (bytf) 0, (bytf) 0, (bytf) 0 };
                int lfn = typf.lfngth();
                if (lfn > 0) {
                        if (lfn > 4) lfn = 4;
                        typf.gftBytfs(0, lfn, b, 4 - lfn);
                }

                for (int i = 0;  i < lfn;  i++)  {
                        if (i > 0) rfsult <<= 8;
                        rfsult |= (b[i] & 0xff);
                }

        rfturn rfsult;
    }

    /**
         * Sfts thf filf <dodf>typf</dodf> bnd <dodf>drfbtor</dodf> dodfs for b filf or foldfr.
         *
         * @sindf 1.4
         */
    publid stbtid void sftFilfTypfAndCrfbtor(String filfnbmf, int typf, int drfbtor) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(filfnbmf);
        }
        _sftFilfTypfAndCrfbtor(filfnbmf, typf, drfbtor);
    }
        privbtf stbtid nbtivf void _sftFilfTypfAndCrfbtor(String filfnbmf, int typf, int drfbtor) throws IOExdfption;

    /**
         * Sfts thf filf <dodf>typf</dodf> dodf for b filf or foldfr.
         *
         * @sindf 1.4
         */
    publid stbtid void sftFilfTypf(String filfnbmf, int typf) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(filfnbmf);
        }
        _sftFilfTypf(filfnbmf, typf);
        }
    privbtf stbtid nbtivf void _sftFilfTypf(String filfnbmf, int typf) throws IOExdfption;

    /**
         * Sfts thf filf <dodf>drfbtor</dodf> dodf for b filf or foldfr.
         *
         * @sindf 1.4
         */
    publid stbtid void sftFilfCrfbtor(String filfnbmf, int drfbtor) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(filfnbmf);
        }
        _sftFilfCrfbtor(filfnbmf, drfbtor);
    }
    privbtf stbtid nbtivf void _sftFilfCrfbtor(String filfnbmf, int drfbtor) throws IOExdfption;

    /**
         * Obtbins thf filf <dodf>typf</dodf> dodf for b filf or foldfr.
         *
         * @sindf 1.4
         */
    publid stbtid int gftFilfTypf(String filfnbmf) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(filfnbmf);
        }
        rfturn _gftFilfTypf(filfnbmf);
    }
    privbtf stbtid nbtivf int _gftFilfTypf(String filfnbmf) throws IOExdfption;

    /**
         * Obtbins thf filf <dodf>drfbtor</dodf> dodf for b filf or foldfr.
         *
         * @sindf 1.4
         */
    publid stbtid int gftFilfCrfbtor(String filfnbmf) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(filfnbmf);
        }
        rfturn _gftFilfCrfbtor(filfnbmf);
    }
    privbtf stbtid nbtivf int _gftFilfCrfbtor(String filfnbmf) throws IOExdfption;


    /**
         * Lodbtfs b foldfr of b pbrtidulbr typf. Mbd OS X rfdognizfs dfrtbin spfdifid foldfrs thbt hbvf distindt purposfs.
         * For fxbmplf, thf usfr's dfsktop or tfmporbry foldfr. Thfsf foldfrs hbvf dorrfsponding dodfs. Givfn onf of thfsf dodfs,
         * this mfthod rfturns thf pbth to thbt pbrtidulbr foldfr. Cfrtbin foldfrs of b givfn typf mby bppfbr in morf thbn
         * onf dombin. For fxbmplf, blthough thfrf is only onf <dodf>root</dodf> foldfr, thfrf brf multiplf <dodf>prff</dodf>
         * foldfrs. If this mfthod is dbllfd to find thf <dodf>prff</dodf> foldfr, it will rfturn thf first onf it finds,
         * thf usfr's prfffrfndfs foldfr in <dodf>~/Librbry/Prfffrfndfs</dodf>. To fxpliditly lodbtf b foldfr in b dfrtbin
         * dombin usf <dodf>findFoldfr(short dombin, int foldfrTypf)</dodf> or <dodf>findFoldfr(short dombin, int foldfrTypf,
         * boolfbn drfbtfIfNffdfd)</dodf>.
         *
         * @rfturn thf pbth to thf foldfr sfbrdhfd for
         *
         * @sindf 1.4
         */
        publid stbtid String findFoldfr(int foldfrTypf) throws FilfNotFoundExdfption {
                rfturn findFoldfr(kOnAppropribtfDisk, foldfrTypf);
        }

    /**
         * Lodbtfs b foldfr of b pbrtidulbr typf, within b givfn dombin. Similbr to <dodf>findFoldfr(int foldfrTypf)</dodf>
         * fxdfpt thbt thf dombin to look in dbn bf spfdififd. Vblid vblufs for <dodf>dombin</dodf>indludf:
         * <dl>
         * <dt>usfr</dt>
         * <dd>Thf Usfr dombin dontbins rfsourdfs spfdifid to thf usfr who is durrfntly loggfd in</dd>
         * <dt>lodbl</dt>
         * <dd>Thf Lodbl dombin dontbins rfsourdfs shbrfd by bll usfrs of thf systfm but brf not nffdfd for thf systfm
         * itsflf to run.</dd>
         * <dt>nftwork</dt>
         * <dd>Thf Nftwork dombin dontbins rfsourdfs shbrfd by usfrs of b lodbl brfb nftwork.</dd>
         * <dt>systfm</dt>
         * <dd>Thf Systfm dombin dontbins thf opfrbting systfm rfsourdfs instbllfd by Applf.</dd>
         * </dl>
         *
         * @rfturn thf pbth to thf foldfr sfbrdhfd for
         *
         * @sindf 1.4
         */
        publid stbtid String findFoldfr(short dombin, int foldfrTypf) throws FilfNotFoundExdfption {
                rfturn findFoldfr(dombin, foldfrTypf, fblsf);
        }

    /**
         * Lodbtfs b foldfr of b pbrtidulbr typf within b givfn dombin bnd optionblly drfbting thf foldfr if it dofs
         * not fxist. Thf bfhbvior is similbr to <dodf>findFoldfr(int foldfrTypf)</dodf> bnd
         * <dodf>findFoldfr(short dombin, int foldfrTypf)</dodf> fxdfpt thbt it dbn drfbtf thf foldfr if it dofs not blrfbdy fxist.
         *
         * @pbrbm drfbtfIfNffdfd
         *            sft to <dodf>truf</dodf>, by sftting to <dodf>fblsf</dodf> thf bfhbvior will bf thf
         *            sbmf bs <dodf>findFoldfr(short dombin, int foldfrTypf, boolfbn drfbtfIfNffdfd)</dodf>
         * @rfturn thf pbth to thf foldfr sfbrdhfd for
         *
         * @sindf 1.4
         */
    publid stbtid String findFoldfr(short dombin, int foldfrTypf, boolfbn drfbtfIfNffdfd) throws FilfNotFoundExdfption {
        finbl SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkPfrmission(nfw RuntimfPfrmission("dbnExbminfFilfSystfm"));
        }

        finbl String foundFoldfr = _findFoldfr(dombin, foldfrTypf, drfbtfIfNffdfd);
        if (foundFoldfr == null) throw nfw FilfNotFoundExdfption("Cbn't find foldfr: " + Intfgfr.toHfxString(foldfrTypf));
        rfturn foundFoldfr;
    }
    privbtf stbtid nbtivf String _findFoldfr(short dombin, int foldfrTypf, boolfbn drfbtfIfNffdfd);


    /**
         * Opfns thf pbth spfdififd by b URL in thf bppropribtf bpplidbtion for thbt URL. HTTP URL's (<dodf>http://</dodf>)
         * opfn in thf dffbult browsfr bs sft in thf Intfrnft pbnf of Systfm Prfffrfndfs. Filf (<dodf>filf://</dodf>) bnd
         * FTP URL's (<dodf>ftp://</dodf>) opfn in thf Findfr. Notf thbt opfning bn FTP URL will prompt thf usfr for whfrf
         * thfy wbnt to sbvf thf downlobdfd filf(s).
         *
         * @pbrbm url
         *            thf URL for thf filf you wbnt to opfn, it dbn fithfr bf bn HTTP, FTP, or filf url
         *
         * @dfprfdbtfd this fundtionblity hbs bffn supfrsfdfd by jbvb.bwt.Dfsktop.browsf() bnd jbvb.bwt.Dfsktop.opfn()
         *
         * @sindf 1.4
         */
    @Dfprfdbtfd
    publid stbtid void opfnURL(String url) throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkPfrmission(nfw RuntimfPfrmission("dbnOpfnURLs"));
        }
        _opfnURL(url);
    }
    privbtf stbtid nbtivf void _opfnURL(String url) throws IOExdfption;

    /**
         * @rfturn full pbthnbmf for thf rfsourdf idfntififd by b givfn nbmf.
         *
         * @sindf 1.4
         */
        publid stbtid String gftRfsourdf(String rfsourdfNbmf) throws FilfNotFoundExdfption {
                rfturn gftRfsourdfFromBundlf(rfsourdfNbmf, null, null);
        }

        /**
         * @rfturn full pbthnbmf for thf rfsourdf idfntififd by b givfn nbmf bnd lodbtfd in thf spfdififd bundlf subdirfdtory.
         *
         * @sindf 1.4
         */
        publid stbtid String gftRfsourdf(String rfsourdfNbmf, String subDirNbmf) throws FilfNotFoundExdfption {
                rfturn gftRfsourdfFromBundlf(rfsourdfNbmf, subDirNbmf, null);
        }

        /**
         * Rfturns thf full pbthnbmf for thf rfsourdf idfntififd by thf givfn nbmf bnd filf fxtfnsion
         * bnd lodbtfd in thf spfdififd bundlf subdirfdtory.
         *
         * If fxtfnsion is bn fmpty string or null, thf rfturnfd pbthnbmf is thf first onf fndountfrfd whfrf thf
         * filf nbmf fxbdtly mbtdhfs nbmf.
         *
         * If subpbth is null, this mfthod sfbrdhfs thf top-lfvfl nonlodblizfd rfsourdf dirfdtory (typidblly Rfsourdfs)
         * bnd thf top-lfvfl of bny lbngubgf-spfdifid dirfdtorifs. For fxbmplf, supposf you hbvf b modfrn bundlf bnd
         * spfdify "Dodumfntbtion" for thf subpbth pbrbmftfr. This mfthod would first look in thf
         * Contfnts/Rfsourdfs/Dodumfntbtion dirfdtory of thf bundlf, followfd by thf Dodumfntbtion subdirfdtorifs of
         * fbdh lbngubgf-spfdifid .lproj dirfdtory. (Thf sfbrdh ordfr for thf lbngubgf-spfdifid dirfdtorifs
         * dorrfsponds to thf usfr's prfffrfndfs.) This mfthod dofs not rfdursf through bny othfr subdirfdtorifs bt
         * bny of thfsf lodbtions. For morf dftbils sff thf AppKit NSBundlf dodumfntbtion.
         *
         * @rfturn full pbthnbmf for thf rfsourdf idfntififd by thf givfn nbmf bnd filf fxtfnsion bnd lodbtfd in thf spfdififd bundlf subdirfdtory.
         *
         * @sindf 1.4
         */
        publid stbtid String gftRfsourdf(String rfsourdfNbmf, String subDirNbmf, String typf) throws FilfNotFoundExdfption {
                rfturn gftRfsourdfFromBundlf(rfsourdfNbmf, subDirNbmf, typf);
        }

        privbtf stbtid nbtivf String gftNbtivfRfsourdfFromBundlf(String rfsourdfNbmf, String subDirNbmf, String typf) throws FilfNotFoundExdfption;
        privbtf stbtid String gftRfsourdfFromBundlf(String rfsourdfNbmf, String subDirNbmf, String typf) throws FilfNotFoundExdfption {
                finbl SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
                if (sfdurity != null) sfdurity.dhfdkPfrmission(nfw RuntimfPfrmission("dbnRfbdBundlf"));

                finbl String rfsourdfFromBundlf = gftNbtivfRfsourdfFromBundlf(rfsourdfNbmf, subDirNbmf, typf);
                if (rfsourdfFromBundlf == null) throw nfw FilfNotFoundExdfption(rfsourdfNbmf);
                rfturn rfsourdfFromBundlf;
        }

        /**
         * Obtbins thf pbth to thf durrfnt bpplidbtion's NSBundlf, mby not
         * rfturn b vblid pbth if Jbvb wbs lbundhfd from thf dommbnd linf.
         *
         * @rfturn full pbthnbmf of thf NSBundlf of thf durrfnt bpplidbtion fxfdutbblf.
         *
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 1 - 1.6
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 2 - 1.5
         */
        publid stbtid String gftPbthToApplidbtionBundlf() {
                SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
                if (sfdurity != null) sfdurity.dhfdkPfrmission(nfw RuntimfPfrmission("dbnRfbdBundlf"));
                rfturn gftNbtivfPbthToApplidbtionBundlf();
        }

        privbtf stbtid nbtivf String gftNbtivfPbthToApplidbtionBundlf();

        /**
         * Movfs thf spfdififd filf to thf Trbsh
         *
         * @pbrbm filf
         * @rfturn rfturns truf if thf NSFilfMbnbgfr suddfssfully movfd thf filf to thf Trbsh.
         * @throws FilfNotFoundExdfption
         *
         * @sindf Jbvb for Mbd OS X 10.6 Updbtf 1 - 1.6
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 6 - 1.6, 1.5
         */
        publid stbtid boolfbn movfToTrbsh(finbl Filf filf) throws FilfNotFoundExdfption {
                if (filf == null || !filf.fxists()) throw nfw FilfNotFoundExdfption();
                finbl String filfNbmf = filf.gftAbsolutfPbth();

                finbl SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
                if (sfdurity != null) sfdurity.dhfdkWritf(filfNbmf);

                rfturn _movfToTrbsh(filfNbmf);
        }

        privbtf stbtid nbtivf boolfbn _movfToTrbsh(String filfNbmf);

        /**
         * Rfvfbls thf spfdififd filf in thf Findfr
         *
         * @pbrbm filf
         *            thf filf to rfvfbl
         * @rfturn rfturns truf if thf NSFilfMbnbgfr suddfssfully rfvfblfd thf filf in thf Findfr.
         * @throws FilfNotFoundExdfption
         *
         * @sindf Jbvb for Mbd OS X 10.6 Updbtf 1 - 1.6
         * @sindf Jbvb for Mbd OS X 10.5 Updbtf 6 - 1.6, 1.5
         */
        publid stbtid boolfbn rfvfblInFindfr(finbl Filf filf) throws FilfNotFoundExdfption {
                if (filf == null || !filf.fxists()) throw nfw FilfNotFoundExdfption();
                finbl String filfNbmf = filf.gftAbsolutfPbth();

                finbl SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
                if (sfdurity != null) sfdurity.dhfdkRfbd(filfNbmf);

                rfturn _rfvfblInFindfr(filfNbmf);
        }

        privbtf stbtid nbtivf boolfbn _rfvfblInFindfr(String filfNbmf);
}
