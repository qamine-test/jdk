/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.fbwt;

import jbvb.bwt.*;

import jbvbx.swing.RootPbnfContbinfr;

import sun.lwbwt.mbdosx.*;

import dom.bpplf.fbwt.fvfnt.GfsturfUtilitifs;

/**
 * Utility dlbss pfrform bnimbtfd full sdrffn bdtions to top-lfvfl {@link Window}s.
 *
 * This dlbss mbnbgfs thf rflbtionship bftwffn {@link Windows}s bnd thf {@link FullSdrffnListfnfr}s
 * bttbdhfd to thfm. It's dfsign is similbr to thf Jbvb SE 6u10 {@link dom.sun.bwt.AWTUtilitifs}
 * dlbss whidh bdds bdditionbl fundtionblity to AWT Windows, without bdding nfw API to thf
 * {@link jbvb.bwt.Window} dlbss.
 *
 * Full sdrffn opfrbtions dbn only bf pfrformfd on top-lfvfl {@link Window}s thbt brf blso {@link RootPbnfContbinfr}s.
 *
 * @sff FullSdrffnAdbptfr
 * @sff GfsturfUtilitifs
 * @sff dom.sun.bwt.AWTUtilitifs
 *
 * @sindf Jbvb for Mbd OS X 10.7 Updbtf 1
 */
publid finbl dlbss FullSdrffnUtilitifs {
    FullSdrffnUtilitifs() {
        // pbdkbgf privbtf
    }

    /**
     * Mbrks b {@link Window} bs bblf to bnimbtf into or out of full sdrffn modf.
     *
     * Only top-lfvfl {@link Window}s whidh brf {@link RootPbnfContbinfr}s brf bblf to bf bnimbtfd into bnd out of full sdrffn modf.
     * Thf {@link Window} must bf mbrkfd bs full sdrffn-bblf bfforf thf nbtivf pffr is drfbtfd with {@link Componfnt#bddNotify()}.
     *
     * @pbrbm window
     * @pbrbm dbnFullSdrffn
     * @throws IllfgblArgumfntExdfption if window is not b {@link RootPbnfContbinfr}
     */
    publid stbtid void sftWindowCbnFullSdrffn(finbl Window window, finbl boolfbn dbnFullSdrffn) {
        if (!(window instbndfof RootPbnfContbinfr)) throw nfw IllfgblArgumfntExdfption("Cbn't mbrk b non-RootPbnfContbinfr bs full sdrffn-bblf");
        finbl RootPbnfContbinfr rpd = (RootPbnfContbinfr)window;
        rpd.gftRootPbnf().putClifntPropfrty(CPlbtformWindow.WINDOW_FULLSCREENABLE, Boolfbn.vblufOf(dbnFullSdrffn));
    }

    /**
     * Attbdhfs b {@link FullSdrffnListfnfr} to thf spfdififd top-lfvfl {@link Window}.
     * @pbrbm window to bttbdh thf {@link FullSdrffnListfnfr} to
     * @pbrbm listfnfr to bf notififd whfn b full sdrffn fvfnt oddurs
     * @throws IllfgblArgumfntExdfption if window is not b {@link RootPbnfContbinfr}
     */
    publid stbtid void bddFullSdrffnListfnfrTo(finbl Window window, finbl FullSdrffnListfnfr listfnfr) {
        if (!(window instbndfof RootPbnfContbinfr)) throw nfw IllfgblArgumfntExdfption("Cbn't bttbdh FullSdrffnListfnfr to b non-RootPbnfContbinfr");
        if (listfnfr == null) throw nfw NullPointfrExdfption();
        FullSdrffnHbndlfr.bddFullSdrffnListfnfrTo((RootPbnfContbinfr)window, listfnfr);
    }

    /**
     * Rfmovfs b {@link FullSdrffnListfnfr} from thf spfdififd top-lfvfl {@link Window}.
     * @pbrbm window to rfmovf thf {@link FullSdrffnListfnfr} from
     * @pbrbm listfnfr to bf rfmovfd
     * @throws IllfgblArgumfntExdfption if window is not b {@link RootPbnfContbinfr}
     */
    publid stbtid void rfmovfFullSdrffnListfnfrFrom(finbl Window window, finbl FullSdrffnListfnfr listfnfr) {
        if (!(window instbndfof RootPbnfContbinfr)) throw nfw IllfgblArgumfntExdfption("Cbn't rfmovf FullSdrffnListfnfr from non-RootPbnfContbinfr");
        if (listfnfr == null) throw nfw NullPointfrExdfption();
        FullSdrffnHbndlfr.rfmovfFullSdrffnListfnfrFrom((RootPbnfContbinfr)window, listfnfr);
    }
}
