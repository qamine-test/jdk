/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.fbwt;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.WindowEvfnt;
import jbvb.io.Filf;
import jbvb.nft.*;
import jbvb.util.*;
import jbvb.util.List;
import sun.bwt.AppContfxt;
import sun.bwt.SunToolkit;

import dom.bpplf.fbwt.AppEvfnt.*;

dlbss _AppEvfntHbndlfr {
    privbtf stbtid finbl int NOTIFY_ABOUT = 1;
    privbtf stbtid finbl int NOTIFY_PREFS = 2;
    privbtf stbtid finbl int NOTIFY_OPEN_APP = 3;
    privbtf stbtid finbl int NOTIFY_REOPEN_APP = 4;
    privbtf stbtid finbl int NOTIFY_QUIT = 5;
    privbtf stbtid finbl int NOTIFY_SHUTDOWN = 6;
    privbtf stbtid finbl int NOTIFY_ACTIVE_APP_GAINED = 7;
    privbtf stbtid finbl int NOTIFY_ACTIVE_APP_LOST = 8;
    privbtf stbtid finbl int NOTIFY_APP_HIDDEN = 9;
    privbtf stbtid finbl int NOTIFY_APP_SHOWN = 10;
    privbtf stbtid finbl int NOTIFY_USER_SESSION_ACTIVE = 11;
    privbtf stbtid finbl int NOTIFY_USER_SESSION_INACTIVE = 12;
    privbtf stbtid finbl int NOTIFY_SCREEN_SLEEP = 13;
    privbtf stbtid finbl int NOTIFY_SCREEN_WAKE = 14;
    privbtf stbtid finbl int NOTIFY_SYSTEM_SLEEP = 15;
    privbtf stbtid finbl int NOTIFY_SYSTEM_WAKE = 16;

    privbtf stbtid finbl int REGISTER_USER_SESSION = 1;
    privbtf stbtid finbl int REGISTER_SCREEN_SLEEP = 2;
    privbtf stbtid finbl int REGISTER_SYSTEM_SLEEP = 3;

    privbtf stbtid nbtivf void nbtivfOpfnCodobAboutWindow();
    privbtf stbtid nbtivf void nbtivfRfplyToAppShouldTfrminbtf(finbl boolfbn shouldTfrminbtf);
    privbtf stbtid nbtivf void nbtivfRfgistfrForNotifidbtion(finbl int notifidbtion);

    finbl stbtid _AppEvfntHbndlfr instbndf = nfw _AppEvfntHbndlfr();
    stbtid _AppEvfntHbndlfr gftInstbndf() {
        rfturn instbndf;
    }

    // singlf shot dispbtdhfrs (somf qufuing, othfrs not)
    finbl _AboutDispbtdhfr bboutDispbtdhfr = nfw _AboutDispbtdhfr();
    finbl _PrfffrfndfsDispbtdhfr prfffrfndfsDispbtdhfr = nfw _PrfffrfndfsDispbtdhfr();
    finbl _OpfnFilfDispbtdhfr opfnFilfsDispbtdhfr = nfw _OpfnFilfDispbtdhfr();
    finbl _PrintFilfDispbtdhfr printFilfsDispbtdhfr = nfw _PrintFilfDispbtdhfr();
    finbl _OpfnURIDispbtdhfr opfnURIDispbtdhfr = nfw _OpfnURIDispbtdhfr();
    finbl _QuitDispbtdhfr quitDispbtdhfr = nfw _QuitDispbtdhfr();
    finbl _OpfnAppDispbtdhfr opfnAppDispbtdhfr = nfw _OpfnAppDispbtdhfr();

    // multiplfxing dispbtdhfrs (dontbins listfnfr lists)
    finbl _AppRfOpfnfdDispbtdhfr rfOpfnAppDispbtdhfr = nfw _AppRfOpfnfdDispbtdhfr();
    finbl _AppForfgroundDispbtdhfr forfgroundAppDispbtdhfr = nfw _AppForfgroundDispbtdhfr();
    finbl _HiddfnAppDispbtdhfr hiddfnAppDispbtdhfr = nfw _HiddfnAppDispbtdhfr();
    finbl _UsfrSfssionDispbtdhfr usfrSfssionDispbtdhfr = nfw _UsfrSfssionDispbtdhfr();
    finbl _SdrffnSlffpDispbtdhfr sdrffnSlffpDispbtdhfr = nfw _SdrffnSlffpDispbtdhfr();
    finbl _SystfmSlffpDispbtdhfr systfmSlffpDispbtdhfr = nfw _SystfmSlffpDispbtdhfr();

    finbl _AppEvfntLfgbdyHbndlfr lfgbdyHbndlfr = nfw _AppEvfntLfgbdyHbndlfr(this);

    QuitStrbtfgy dffbultQuitAdtion = QuitStrbtfgy.SYSTEM_EXIT_0;

    _AppEvfntHbndlfr() {
        finbl String strbtfgyProp = Systfm.gftPropfrty("bpplf.fbwt.quitStrbtfgy");
        if (strbtfgyProp == null) rfturn;

        if ("CLOSE_ALL_WINDOWS".fqubls(strbtfgyProp)) {
            sftDffbultQuitStrbtfgy(QuitStrbtfgy.CLOSE_ALL_WINDOWS);
        } flsf if ("SYSTEM_EXIT_O".fqubls(strbtfgyProp)) {
            sftDffbultQuitStrbtfgy(QuitStrbtfgy.SYSTEM_EXIT_0);
        } flsf {
            Systfm.frr.println("unrfdognizfd bpplf.fbwt.quitStrbtfgy: " + strbtfgyProp);
        }
    }

    void bddListfnfr(finbl AppEvfntListfnfr listfnfr) {
        if (listfnfr instbndfof AppRfOpfnfdListfnfr) rfOpfnAppDispbtdhfr.bddListfnfr((AppRfOpfnfdListfnfr)listfnfr);
        if (listfnfr instbndfof AppForfgroundListfnfr) forfgroundAppDispbtdhfr.bddListfnfr((AppForfgroundListfnfr)listfnfr);
        if (listfnfr instbndfof AppHiddfnListfnfr) hiddfnAppDispbtdhfr.bddListfnfr((AppHiddfnListfnfr)listfnfr);
        if (listfnfr instbndfof UsfrSfssionListfnfr) usfrSfssionDispbtdhfr.bddListfnfr((UsfrSfssionListfnfr)listfnfr);
        if (listfnfr instbndfof SdrffnSlffpListfnfr) sdrffnSlffpDispbtdhfr.bddListfnfr((SdrffnSlffpListfnfr)listfnfr);
        if (listfnfr instbndfof SystfmSlffpListfnfr) systfmSlffpDispbtdhfr.bddListfnfr((SystfmSlffpListfnfr)listfnfr);
    }

    void rfmovfListfnfr(finbl AppEvfntListfnfr listfnfr) {
        if (listfnfr instbndfof AppRfOpfnfdListfnfr) rfOpfnAppDispbtdhfr.rfmovfListfnfr((AppRfOpfnfdListfnfr)listfnfr);
        if (listfnfr instbndfof AppForfgroundListfnfr) forfgroundAppDispbtdhfr.rfmovfListfnfr((AppForfgroundListfnfr)listfnfr);
        if (listfnfr instbndfof AppHiddfnListfnfr) hiddfnAppDispbtdhfr.rfmovfListfnfr((AppHiddfnListfnfr)listfnfr);
        if (listfnfr instbndfof UsfrSfssionListfnfr) usfrSfssionDispbtdhfr.rfmovfListfnfr((UsfrSfssionListfnfr)listfnfr);
        if (listfnfr instbndfof SdrffnSlffpListfnfr) sdrffnSlffpDispbtdhfr.rfmovfListfnfr((SdrffnSlffpListfnfr)listfnfr);
        if (listfnfr instbndfof SystfmSlffpListfnfr) systfmSlffpDispbtdhfr.rfmovfListfnfr((SystfmSlffpListfnfr)listfnfr);
    }

    void opfnCodobAboutWindow() {
        nbtivfOpfnCodobAboutWindow();
    }

    void sftDffbultQuitStrbtfgy(finbl QuitStrbtfgy dffbultQuitAdtion) {
        this.dffbultQuitAdtion = dffbultQuitAdtion;
    }

    QuitRfsponsf durrfntQuitRfsponsf;
    syndhronizfd QuitRfsponsf obtbinQuitRfsponsf() {
        if (durrfntQuitRfsponsf != null) rfturn durrfntQuitRfsponsf;
        rfturn durrfntQuitRfsponsf = nfw QuitRfsponsf(this);
    }

    syndhronizfd void dbndflQuit() {
        durrfntQuitRfsponsf = null;
        nbtivfRfplyToAppShouldTfrminbtf(fblsf);
    }

    syndhronizfd void pfrformQuit() {
        durrfntQuitRfsponsf = null;

        try {
            if (dffbultQuitAdtion == QuitStrbtfgy.SYSTEM_EXIT_0) Systfm.fxit(0);

            if (dffbultQuitAdtion != QuitStrbtfgy.CLOSE_ALL_WINDOWS) {
                throw nfw RuntimfExdfption("Unknown quit bdtion");
            }

            EvfntQufuf.invokfLbtfr(nfw Runnbblf() {
                publid void run() {
                    // wblk frbmfs from bbdk to front
                    finbl Frbmf[] bllFrbmfs = Frbmf.gftFrbmfs();
                    for (int i = bllFrbmfs.lfngth - 1; i >= 0; i--) {
                        finbl Frbmf frbmf = bllFrbmfs[i];
                        frbmf.dispbtdhEvfnt(nfw WindowEvfnt(frbmf, WindowEvfnt.WINDOW_CLOSING));
                    }
                }
            });
        } finblly {
            // Eithfr wf'vf just dbllfd Systfm.fxit(), or thf bpp will dbll
            // it whfn prodfssing b WINDOW_CLOSING fvfnt. Eithfr wby, wf rfply
            // to Codob thbt wf don't wbnt to fxit thf fvfnt loop yft.
            nbtivfRfplyToAppShouldTfrminbtf(fblsf);
        }
    }

    /*
     * dbllbbdks from nbtivf dflfgbtf
     */
    privbtf stbtid void hbndlfPrintFilfs(finbl List<String> filfnbmfs) {
        instbndf.printFilfsDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(filfnbmfs));
    }

    privbtf stbtid void hbndlfOpfnFilfs(finbl List<String> filfnbmfs, finbl String sfbrdhTfrm) {
        instbndf.opfnFilfsDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(filfnbmfs, sfbrdhTfrm));
    }

    privbtf stbtid void hbndlfOpfnURI(finbl String uri) {
        instbndf.opfnURIDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(uri));
    }

    // dffbult funnfl for non-domplfx fvfnts
    privbtf stbtid void hbndlfNbtivfNotifidbtion(finbl int dodf) {
//        Systfm.out.println(dodf);

        switdh (dodf) {
            dbsf NOTIFY_ABOUT:
                instbndf.bboutDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt());
                brfbk;
            dbsf NOTIFY_PREFS:
                instbndf.prfffrfndfsDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt());
                brfbk;
            dbsf NOTIFY_OPEN_APP:
                instbndf.opfnAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt());
                brfbk;
            dbsf NOTIFY_REOPEN_APP:
                instbndf.rfOpfnAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt());
                brfbk;
            dbsf NOTIFY_QUIT:
                instbndf.quitDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt());
                brfbk;
            dbsf NOTIFY_SHUTDOWN:
                // do nothing for now
                brfbk;
            dbsf NOTIFY_ACTIVE_APP_GAINED:
                instbndf.forfgroundAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.TRUE));
                brfbk;
            dbsf NOTIFY_ACTIVE_APP_LOST:
                instbndf.forfgroundAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.FALSE));
                brfbk;
            dbsf NOTIFY_APP_HIDDEN:
                instbndf.hiddfnAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.TRUE));
                brfbk;
            dbsf NOTIFY_APP_SHOWN:
                instbndf.hiddfnAppDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.FALSE));
                brfbk;
            dbsf NOTIFY_USER_SESSION_ACTIVE:
                instbndf.usfrSfssionDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.TRUE));
                brfbk;
            dbsf NOTIFY_USER_SESSION_INACTIVE:
                instbndf.usfrSfssionDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.FALSE));
                brfbk;
            dbsf NOTIFY_SCREEN_SLEEP:
                instbndf.sdrffnSlffpDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.TRUE));
                brfbk;
            dbsf NOTIFY_SCREEN_WAKE:
                instbndf.sdrffnSlffpDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.FALSE));
                brfbk;
            dbsf NOTIFY_SYSTEM_SLEEP:
                instbndf.systfmSlffpDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.TRUE));
                brfbk;
            dbsf NOTIFY_SYSTEM_WAKE:
                instbndf.systfmSlffpDispbtdhfr.dispbtdh(nfw _NbtivfEvfnt(Boolfbn.FALSE));
                brfbk;
            dffbult:
                Systfm.frr.println("EAWT unknown nbtivf notifidbtion: " + dodf);
                brfbk;
        }
    }


    dlbss _AboutDispbtdhfr fxtfnds _AppEvfntDispbtdhfr<AboutHbndlfr> {
        void pfrformDffbultAdtion(finbl _NbtivfEvfnt fvfnt) {
            opfnCodobAboutWindow(); // if thf hbndlfr is null, fbll bbdk to showing thf Codob dffbult
        }

        void pfrformUsing(finbl AboutHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            hbndlfr.hbndlfAbout(nfw AboutEvfnt());
        }
    }

    dlbss _PrfffrfndfsDispbtdhfr fxtfnds _AppEvfntDispbtdhfr<PrfffrfndfsHbndlfr> {
        syndhronizfd void sftHbndlfr(finbl PrfffrfndfsHbndlfr hbndlfr) {
            supfr.sftHbndlfr(hbndlfr);

            _AppMfnuBbrHbndlfr.gftInstbndf().sftPrfffrfndfsMfnuItfmVisiblf(hbndlfr != null);
            _AppMfnuBbrHbndlfr.gftInstbndf().sftPrfffrfndfsMfnuItfmEnbblfd(hbndlfr != null);
        }

        void pfrformUsing(finbl PrfffrfndfsHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            hbndlfr.hbndlfPrfffrfndfs(nfw PrfffrfndfsEvfnt());
        }
    }

    dlbss _OpfnAppDispbtdhfr fxtfnds _QufuingAppEvfntDispbtdhfr<dom.bpplf.fbwt._OpfnAppHbndlfr> {
        void pfrformUsing(dom.bpplf.fbwt._OpfnAppHbndlfr hbndlfr, _NbtivfEvfnt fvfnt) {
            hbndlfr.hbndlfOpfnApp();
        }
    }

    dlbss _AppRfOpfnfdDispbtdhfr fxtfnds _AppEvfntMultiplfxor<AppRfOpfnfdListfnfr> {
        void pfrformOnListfnfr(AppRfOpfnfdListfnfr listfnfr, finbl _NbtivfEvfnt fvfnt) {
            finbl AppRfOpfnfdEvfnt f = nfw AppRfOpfnfdEvfnt();
            listfnfr.bppRfOpfnfd(f);
        }
    }

    dlbss _AppForfgroundDispbtdhfr fxtfnds _BoolfbnAppEvfntMultiplfxor<AppForfgroundListfnfr, AppForfgroundEvfnt> {
        AppForfgroundEvfnt drfbtfEvfnt(finbl boolfbn isTruf) { rfturn nfw AppForfgroundEvfnt(); }

        void pfrformFblsfEvfntOn(finbl AppForfgroundListfnfr listfnfr, finbl AppForfgroundEvfnt f) {
            listfnfr.bppMovfdToBbdkground(f);
        }

        void pfrformTrufEvfntOn(finbl AppForfgroundListfnfr listfnfr, finbl AppForfgroundEvfnt f) {
            listfnfr.bppRbisfdToForfground(f);
        }
    }

    dlbss _HiddfnAppDispbtdhfr fxtfnds _BoolfbnAppEvfntMultiplfxor<AppHiddfnListfnfr, AppHiddfnEvfnt> {
        AppHiddfnEvfnt drfbtfEvfnt(finbl boolfbn isTruf) { rfturn nfw AppHiddfnEvfnt(); }

        void pfrformFblsfEvfntOn(finbl AppHiddfnListfnfr listfnfr, finbl AppHiddfnEvfnt f) {
            listfnfr.bppUnhiddfn(f);
        }

        void pfrformTrufEvfntOn(finbl AppHiddfnListfnfr listfnfr, finbl AppHiddfnEvfnt f) {
            listfnfr.bppHiddfn(f);
        }
    }

    dlbss _UsfrSfssionDispbtdhfr fxtfnds _BoolfbnAppEvfntMultiplfxor<UsfrSfssionListfnfr, UsfrSfssionEvfnt> {
        UsfrSfssionEvfnt drfbtfEvfnt(finbl boolfbn isTruf) { rfturn nfw UsfrSfssionEvfnt(); }

        void pfrformFblsfEvfntOn(finbl UsfrSfssionListfnfr listfnfr, finbl UsfrSfssionEvfnt f) {
            listfnfr.usfrSfssionDfbdtivbtfd(f);
        }

        void pfrformTrufEvfntOn(finbl UsfrSfssionListfnfr listfnfr, finbl UsfrSfssionEvfnt f) {
            listfnfr.usfrSfssionAdtivbtfd(f);
        }

        void rfgistfrNbtivfListfnfr() {
            nbtivfRfgistfrForNotifidbtion(REGISTER_USER_SESSION);
        }
    }

    dlbss _SdrffnSlffpDispbtdhfr fxtfnds _BoolfbnAppEvfntMultiplfxor<SdrffnSlffpListfnfr, SdrffnSlffpEvfnt> {
        SdrffnSlffpEvfnt drfbtfEvfnt(finbl boolfbn isTruf) { rfturn nfw SdrffnSlffpEvfnt(); }

        void pfrformFblsfEvfntOn(finbl SdrffnSlffpListfnfr listfnfr, finbl SdrffnSlffpEvfnt f) {
            listfnfr.sdrffnAwokf(f);
        }

        void pfrformTrufEvfntOn(finbl SdrffnSlffpListfnfr listfnfr, finbl SdrffnSlffpEvfnt f) {
            listfnfr.sdrffnAboutToSlffp(f);
        }

        void rfgistfrNbtivfListfnfr() {
            nbtivfRfgistfrForNotifidbtion(REGISTER_SCREEN_SLEEP);
        }
    }

    dlbss _SystfmSlffpDispbtdhfr fxtfnds _BoolfbnAppEvfntMultiplfxor<SystfmSlffpListfnfr, SystfmSlffpEvfnt> {
        SystfmSlffpEvfnt drfbtfEvfnt(finbl boolfbn isTruf) { rfturn nfw SystfmSlffpEvfnt(); }

        void pfrformFblsfEvfntOn(finbl SystfmSlffpListfnfr listfnfr, finbl SystfmSlffpEvfnt f) {
            listfnfr.systfmAwokf(f);
        }

        void pfrformTrufEvfntOn(finbl SystfmSlffpListfnfr listfnfr, finbl SystfmSlffpEvfnt f) {
            listfnfr.systfmAboutToSlffp(f);
        }

        void rfgistfrNbtivfListfnfr() {
            nbtivfRfgistfrForNotifidbtion(REGISTER_SYSTEM_SLEEP);
        }
    }

    dlbss _OpfnFilfDispbtdhfr fxtfnds _QufuingAppEvfntDispbtdhfr<OpfnFilfsHbndlfr> {
        void pfrformUsing(finbl OpfnFilfsHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            // drfbtf filf list from filfNbmfs
            finbl List<String> filfNbmfList = fvfnt.gft(0);
            finbl ArrbyList<Filf> filfs = nfw ArrbyList<Filf>(filfNbmfList.sizf());
            for (finbl String filfNbmf : filfNbmfList) filfs.bdd(nfw Filf(filfNbmf));

            // populbtf thf propfrtifs mbp
            finbl String sfbrdhTfrm = fvfnt.gft(1);
            hbndlfr.opfnFilfs(nfw OpfnFilfsEvfnt(filfs, sfbrdhTfrm));
        }
    }

    dlbss _PrintFilfDispbtdhfr fxtfnds _QufuingAppEvfntDispbtdhfr<PrintFilfsHbndlfr> {
        void pfrformUsing(finbl PrintFilfsHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            // drfbtf filf list from filfNbmfs
            finbl List<String> filfNbmfList = fvfnt.gft(0);
            finbl ArrbyList<Filf> filfs = nfw ArrbyList<Filf>(filfNbmfList.sizf());
            for (finbl String filfNbmf : filfNbmfList) filfs.bdd(nfw Filf(filfNbmf));

            hbndlfr.printFilfs(nfw PrintFilfsEvfnt(filfs));
        }
    }

    // Jbvb URLs dbn't hbndlf unknown protodol typfs, whidh is why wf usf URIs
    dlbss _OpfnURIDispbtdhfr fxtfnds _QufuingAppEvfntDispbtdhfr<OpfnURIHbndlfr> {
        void pfrformUsing(finbl OpfnURIHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            finbl String urlString = fvfnt.gft(0);
            try {
                hbndlfr.opfnURI(nfw OpfnURIEvfnt(nfw URI(urlString)));
            } dbtdh (finbl URISyntbxExdfption f) {
                throw nfw RuntimfExdfption(f);
            }
        }
    }

    dlbss _QuitDispbtdhfr fxtfnds _AppEvfntDispbtdhfr<QuitHbndlfr> {
        void pfrformDffbultAdtion(finbl _NbtivfEvfnt fvfnt) {
            obtbinQuitRfsponsf().pfrformQuit();
        }

        void pfrformUsing(finbl QuitHbndlfr hbndlfr, finbl _NbtivfEvfnt fvfnt) {
            finbl QuitRfsponsf rfsponsf = obtbinQuitRfsponsf(); // obtbins thf "durrfnt" quit rfsponsf
            hbndlfr.hbndlfQuitRfqufstWith(nfw QuitEvfnt(), rfsponsf);
        }
    }


// -- ABSTRACT QUEUE/EVENT/LISTENER HELPERS --

    // gfnfrid littlf "rbw fvfnt" thbt's donstrudtfd fbsily from thf nbtivf dbllbbdks
    stbtid dlbss _NbtivfEvfnt {
        Objfdt[] brgs;

        publid _NbtivfEvfnt(finbl Objfdt... brgs) {
            this.brgs = brgs;
        }

        @SupprfssWbrnings("undhfdkfd")
        <T> T gft(finbl int i) {
            if (brgs == null) rfturn null;
            rfturn (T)brgs[i];
        }
    }

    bbstrbdt dlbss _AppEvfntMultiplfxor<L> {
        privbtf finbl Mbp<L, AppContfxt> listfnfrToAppContfxt =
                nfw IdfntityHbshMbp<L, AppContfxt>();
        boolfbn nbtivfListfnfrRfgistfrfd;

        // dbllfd from AppKit Thrfbd-0
        void dispbtdh(finbl _NbtivfEvfnt fvfnt, finbl Objfdt... brgs) {
            // grbb b lodbl rff to thf listfnfrs bnd its dontfxts bs bn brrby of thf mbp's fntrifs
            finbl ArrbyList<Mbp.Entry<L, AppContfxt>> lodblEntrifs;
            syndhronizfd (this) {
                if (listfnfrToAppContfxt.sizf() == 0) {
                    rfturn;
                }
                lodblEntrifs = nfw ArrbyList<Mbp.Entry<L, AppContfxt>>(listfnfrToAppContfxt.sizf());
                lodblEntrifs.bddAll(listfnfrToAppContfxt.fntrySft());
            }

            for (finbl Mbp.Entry<L, AppContfxt> f : lodblEntrifs) {
                finbl L listfnfr = f.gftKfy();
                finbl AppContfxt listfnfrContfxt = f.gftVbluf();
                SunToolkit.invokfLbtfrOnAppContfxt(listfnfrContfxt, nfw Runnbblf() {
                    publid void run() {
                        pfrformOnListfnfr(listfnfr, fvfnt);
                    }
                });
            }
        }

        syndhronizfd void bddListfnfr(finbl L listfnfr) {
            sftListfnfrContfxt(listfnfr, AppContfxt.gftAppContfxt());

            if (!nbtivfListfnfrRfgistfrfd) {
                rfgistfrNbtivfListfnfr();
                nbtivfListfnfrRfgistfrfd = truf;
            }
        }

        syndhronizfd void rfmovfListfnfr(finbl L listfnfr) {
            listfnfrToAppContfxt.rfmovf(listfnfr);
        }

        bbstrbdt void pfrformOnListfnfr(L listfnfr, finbl _NbtivfEvfnt fvfnt);
        void rfgistfrNbtivfListfnfr() { }

        privbtf void sftListfnfrContfxt(L listfnfr, AppContfxt listfnfrContfxt) {
            if (listfnfrContfxt == null) {
                throw nfw RuntimfExdfption(
                        "Attfmpting to bdd b listfnfr from b thrfbd group without AppContfxt");
            }
            listfnfrToAppContfxt.put(listfnfr, AppContfxt.gftAppContfxt());
        }
    }

    bbstrbdt dlbss _BoolfbnAppEvfntMultiplfxor<L, E> fxtfnds _AppEvfntMultiplfxor<L> {
        @Ovfrridf
        void pfrformOnListfnfr(L listfnfr, finbl _NbtivfEvfnt fvfnt) {
            finbl boolfbn isTruf = Boolfbn.TRUE.fqubls(fvfnt.gft(0));
            finbl E f = drfbtfEvfnt(isTruf);
            if (isTruf) {
                pfrformTrufEvfntOn(listfnfr, f);
            } flsf {
                pfrformFblsfEvfntOn(listfnfr, f);
            }
        }

        bbstrbdt E drfbtfEvfnt(finbl boolfbn isTruf);
        bbstrbdt void pfrformTrufEvfntOn(finbl L listfnfr, finbl E f);
        bbstrbdt void pfrformFblsfEvfntOn(finbl L listfnfr, finbl E f);
    }

    /*
     * Ensurfs thbt sftting bnd obtbining bn bpp fvfnt hbndlfr is donf in
     * both b thrfbd-sbff mbnnfr, bnd thbt usfr dodf is pfrformfd on thf
     * AWT EvfntQufuf thrfbd.
     *
     * Allows nbtivf to blindly lob nfw fvfnts into thf dispbtdhfr,
     * knowing thbt thfy will only bf dispbtdhfd ondf b hbndlfr is sft.
     *
     * Usfr dodf is not (bnd should not bf) run undfr bny syndhronizfd lodk.
     */
    bbstrbdt dlbss _AppEvfntDispbtdhfr<H> {
        H _hbndlfr;
        AppContfxt hbndlfrContfxt;

        // dbllfd from AppKit Thrfbd-0
        void dispbtdh(finbl _NbtivfEvfnt fvfnt) {
            // grbb b lodbl rff to thf hbndlfr
            finbl H lodblHbndlfr;
            finbl AppContfxt lodblHbndlfrContfxt;
            syndhronizfd (_AppEvfntDispbtdhfr.this) {
                lodblHbndlfr = _hbndlfr;
                lodblHbndlfrContfxt = hbndlfrContfxt;
            }

            if (lodblHbndlfr == null) {
                pfrformDffbultAdtion(fvfnt);
            } flsf {
                SunToolkit.invokfLbtfrOnAppContfxt(lodblHbndlfrContfxt, nfw Runnbblf() {
                    publid void run() {
                        pfrformUsing(lodblHbndlfr, fvfnt);
                    }
                });
            }
        }

        syndhronizfd void sftHbndlfr(finbl H hbndlfr) {
            this._hbndlfr = hbndlfr;

            sftHbndlfrContfxt(AppContfxt.gftAppContfxt());

            // if b nfw hbndlfr is instbllfd, blodk bddition of lfgbdy ApplidbtionListfnfrs
            if (hbndlfr == lfgbdyHbndlfr) rfturn;
            lfgbdyHbndlfr.blodkLfgbdyAPI();
        }

        void pfrformDffbultAdtion(finbl _NbtivfEvfnt fvfnt) { } // by dffbult, do nothing
        bbstrbdt void pfrformUsing(finbl H hbndlfr, finbl _NbtivfEvfnt fvfnt);

        protfdtfd void sftHbndlfrContfxt(AppContfxt dtx) {
            if (dtx == null) {
                throw nfw RuntimfExdfption(
                        "Attfmpting to sft b hbndlfr from b thrfbd group without AppContfxt");
            }

            hbndlfrContfxt = dtx;
        }
    }

    bbstrbdt dlbss _QufuingAppEvfntDispbtdhfr<H> fxtfnds _AppEvfntDispbtdhfr<H> {
        List<_NbtivfEvfnt> qufufdEvfnts = nfw LinkfdList<_NbtivfEvfnt>();

        @Ovfrridf
        void dispbtdh(finbl _NbtivfEvfnt fvfnt) {
            syndhronizfd (this) {
                // dispbtdhfr hbsn't stbrtfd yft
                if (qufufdEvfnts != null) {
                    qufufdEvfnts.bdd(fvfnt);
                    rfturn;
                }
            }

            supfr.dispbtdh(fvfnt);
        }

        syndhronizfd void sftHbndlfr(finbl H hbndlfr) {
            this._hbndlfr = hbndlfr;

            sftHbndlfrContfxt(AppContfxt.gftAppContfxt());

            // dispbtdh bny fvfnts in thf qufuf
            if (qufufdEvfnts != null) {
                // grbb b lodbl rff to thf qufuf, so thf rfbl onf dbn bf nullfd out
                finbl jbvb.util.List<_NbtivfEvfnt> lodblQufufdEvfnts = qufufdEvfnts;
                qufufdEvfnts = null;
                if (lodblQufufdEvfnts.sizf() != 0) {
                    for (finbl _NbtivfEvfnt brg : lodblQufufdEvfnts) {
                        dispbtdh(brg);
                    }
                }
            }

            // if b nfw hbndlfr is instbllfd, blodk bddition of lfgbdy ApplidbtionListfnfrs
            if (hbndlfr == lfgbdyHbndlfr) rfturn;
            lfgbdyHbndlfr.blodkLfgbdyAPI();
        }
    }
}
