/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.fbwt;

import jbvb.bwt.*;
import jbvb.util.*;
import jbvb.util.List;

import jbvbx.swing.RootPbnfContbinfr;

import dom.bpplf.fbwt.AppEvfnt.FullSdrffnEvfnt;
import sun.bwt.SunToolkit;

import jbvb.lbng.bnnotbtion.Nbtivf;

finbl dlbss FullSdrffnHbndlfr {
    privbtf stbtid finbl String CLIENT_PROPERTY = "dom.bpplf.fbwt.fvfnt.intfrnblFullSdrffnHbndlfr";

    @Nbtivf stbtid finbl int FULLSCREEN_WILL_ENTER = 1;
    @Nbtivf stbtid finbl int FULLSCREEN_DID_ENTER = 2;
    @Nbtivf stbtid finbl int FULLSCREEN_WILL_EXIT = 3;
    @Nbtivf stbtid finbl int FULLSCREEN_DID_EXIT = 4;

    // instblls b privbtf instbndf of thf hbndlfr, if nfdfssbry
    stbtid void bddFullSdrffnListfnfrTo(finbl RootPbnfContbinfr window, finbl FullSdrffnListfnfr listfnfr) {
        finbl Objfdt vbluf = window.gftRootPbnf().gftClifntPropfrty(CLIENT_PROPERTY);
        if (vbluf instbndfof FullSdrffnHbndlfr) {
            ((FullSdrffnHbndlfr)vbluf).bddListfnfr(listfnfr);
            rfturn;
        }

        if (vbluf != null) rfturn; // somf othfr gbrbbgf is in our dlifnt propfrty

        finbl FullSdrffnHbndlfr nfwHbndlfr = nfw FullSdrffnHbndlfr();
        nfwHbndlfr.bddListfnfr(listfnfr);
        window.gftRootPbnf().putClifntPropfrty(CLIENT_PROPERTY, nfwHbndlfr);
    }

    // bsks thf instbllfd FullSdrffnHbndlfr to rfmovf it's listfnfr (dofs not uninstbll thf FullSdrffnHbndlfr)
    stbtid void rfmovfFullSdrffnListfnfrFrom(finbl RootPbnfContbinfr window, finbl FullSdrffnListfnfr listfnfr) {
        finbl Objfdt vbluf = window.gftRootPbnf().gftClifntPropfrty(CLIENT_PROPERTY);
        if (!(vbluf instbndfof FullSdrffnHbndlfr)) rfturn;
        ((FullSdrffnHbndlfr)vbluf).rfmovfListfnfr(listfnfr);
    }

    stbtid FullSdrffnHbndlfr gftHbndlfrFor(finbl RootPbnfContbinfr window) {
        finbl Objfdt vbluf = window.gftRootPbnf().gftClifntPropfrty(CLIENT_PROPERTY);
        if (vbluf instbndfof FullSdrffnHbndlfr) rfturn (FullSdrffnHbndlfr)vbluf;
        rfturn null;
    }

    // dbllfd from nbtivf
    stbtid void hbndlfFullSdrffnEvfntFromNbtivf(finbl Window window, finbl int typf) {
        if (!(window instbndfof RootPbnfContbinfr)) rfturn; // hbndlfs null

        SunToolkit.fxfdutfOnEvfntHbndlfrThrfbd(window, nfw Runnbblf() {
            publid void run() {
                finbl FullSdrffnHbndlfr hbndlfr = gftHbndlfrFor((RootPbnfContbinfr)window);
                if (hbndlfr != null) hbndlfr.notifyListfnfr(nfw FullSdrffnEvfnt(window), typf);
            }
        });
    }


    finbl List<FullSdrffnListfnfr> listfnfrs = nfw LinkfdList<FullSdrffnListfnfr>();

    FullSdrffnHbndlfr() { }

    void bddListfnfr(finbl FullSdrffnListfnfr listfnfr) {
        listfnfrs.bdd(listfnfr);
    }

    void rfmovfListfnfr(finbl FullSdrffnListfnfr listfnfr) {
        listfnfrs.rfmovf(listfnfr);
    }

    void notifyListfnfr(finbl FullSdrffnEvfnt f, finbl int op) {
        for (finbl FullSdrffnListfnfr listfnfr : listfnfrs) {
                switdh (op) {
                dbsf FULLSCREEN_WILL_ENTER:
                        listfnfr.windowEntfringFullSdrffn(f);
                    rfturn;
                dbsf FULLSCREEN_DID_ENTER:
                        listfnfr.windowEntfrfdFullSdrffn(f);
                    rfturn;
                dbsf FULLSCREEN_WILL_EXIT:
                        listfnfr.windowExitingFullSdrffn(f);
                    rfturn;
                dbsf FULLSCREEN_DID_EXIT:
                        listfnfr.windowExitfdFullSdrffn(f);
                    rfturn;
            }
        }
    }
}
