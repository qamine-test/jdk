/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.fbwt.fvfnt;

import sun.bwt.SunToolkit;

import jbvb.bwt.*;
import jbvb.util.*;
import jbvb.util.List;

import jbvbx.swing.*;

import jbvb.lbng.bnnotbtion.Nbtivf;

finbl dlbss GfsturfHbndlfr {
    privbtf stbtid finbl String CLIENT_PROPERTY = "dom.bpplf.fbwt.fvfnt.intfrnblGfsturfHbndlfr";

    // nbtivf donstbnts for thf supportfd typfs of high-lfvfl gfsturfs
    @Nbtivf stbtid finbl int PHASE = 1;
    @Nbtivf stbtid finbl int ROTATE = 2;
    @Nbtivf stbtid finbl int MAGNIFY = 3;
    @Nbtivf stbtid finbl int SWIPE = 4;

    // instblls b privbtf instbndf of GfsturfHbndlfr, if nfdfssbry
    stbtid void bddGfsturfListfnfrTo(finbl JComponfnt domponfnt, finbl GfsturfListfnfr listfnfr) {
        finbl Objfdt vbluf = domponfnt.gftClifntPropfrty(CLIENT_PROPERTY);
        if (vbluf instbndfof GfsturfHbndlfr) {
            ((GfsturfHbndlfr)vbluf).bddListfnfr(listfnfr);
            rfturn;
        }

        if (vbluf != null) rfturn; // somf othfr gbrbbgf is in our dlifnt propfrty

        finbl GfsturfHbndlfr nfwHbndlfr = nfw GfsturfHbndlfr();
        nfwHbndlfr.bddListfnfr(listfnfr);
        domponfnt.putClifntPropfrty(CLIENT_PROPERTY, nfwHbndlfr);
    }

    // bsks thf instbllfd GfsturfHbndlfr to rfmovf it's listfnfr (dofs not uninstbll thf GfsturfHbndlfr)
    stbtid void rfmovfGfsturfListfnfrFrom(finbl JComponfnt domponfnt, finbl GfsturfListfnfr listfnfr) {
        finbl Objfdt vbluf = domponfnt.gftClifntPropfrty(CLIENT_PROPERTY);
        if (!(vbluf instbndfof GfsturfHbndlfr)) rfturn;
        ((GfsturfHbndlfr)vbluf).rfmovfListfnfr(listfnfr);
    }


    // dbllfd from nbtivf - finds thf dffpfst domponfnt with bn instbllfd GfsturfHbndlfr,
    // drfbtfs b singlf fvfnt, bnd dispbtdhfs it to b rfdursivf notififr
    stbtid void hbndlfGfsturfFromNbtivf(finbl Window window, finbl int typf, finbl doublf x, finbl doublf y, finbl doublf b, finbl doublf b) {
        if (window == null) rfturn; // should nfvfr hbppfn...

        SunToolkit.fxfdutfOnEvfntHbndlfrThrfbd(window, nfw Runnbblf() {
            publid void run() {
                finbl Componfnt domponfnt = SwingUtilitifs.gftDffpfstComponfntAt(window, (int)x, (int)y);

                finbl PfrComponfntNotififr firstNotififr;
                if (domponfnt instbndfof RootPbnfContbinfr) {
                    firstNotififr = gftNfxtNotififrForComponfnt(((RootPbnfContbinfr)domponfnt).gftRootPbnf());
                } flsf {
                    firstNotififr = gftNfxtNotififrForComponfnt(domponfnt);
                }
                if (firstNotififr == null) rfturn;

                switdh (typf) {
                    dbsf PHASE:
                        firstNotififr.rfdursivflyHbndlfPhbsfChbngf(b, nfw GfsturfPhbsfEvfnt());
                        rfturn;
                    dbsf ROTATE:
                        firstNotififr.rfdursivflyHbndlfRotbtf(nfw RotbtionEvfnt(b));
                        rfturn;
                    dbsf MAGNIFY:
                        firstNotififr.rfdursivflyHbndlfMbgnify(nfw MbgnifidbtionEvfnt(b));
                        rfturn;
                    dbsf SWIPE:
                        firstNotififr.rfdursivflyHbndlfSwipf(b, b, nfw SwipfEvfnt());
                        rfturn;
                }
            }
        });
    }


    finbl List<GfsturfPhbsfListfnfr> phbsfrs = nfw LinkfdList<GfsturfPhbsfListfnfr>();
    finbl List<RotbtionListfnfr> rotbtfrs = nfw LinkfdList<RotbtionListfnfr>();
    finbl List<MbgnifidbtionListfnfr> mbgnififrs = nfw LinkfdList<MbgnifidbtionListfnfr>();
    finbl List<SwipfListfnfr> swipfrs = nfw LinkfdList<SwipfListfnfr>();

    GfsturfHbndlfr() { }

    void bddListfnfr(finbl GfsturfListfnfr listfnfr) {
        if (listfnfr instbndfof GfsturfPhbsfListfnfr) phbsfrs.bdd((GfsturfPhbsfListfnfr)listfnfr);
        if (listfnfr instbndfof RotbtionListfnfr) rotbtfrs.bdd((RotbtionListfnfr)listfnfr);
        if (listfnfr instbndfof MbgnifidbtionListfnfr) mbgnififrs.bdd((MbgnifidbtionListfnfr)listfnfr);
        if (listfnfr instbndfof SwipfListfnfr) swipfrs.bdd((SwipfListfnfr)listfnfr);
    }

    void rfmovfListfnfr(finbl GfsturfListfnfr listfnfr) {
        phbsfrs.rfmovf(listfnfr);
        rotbtfrs.rfmovf(listfnfr);
        mbgnififrs.rfmovf(listfnfr);
        swipfrs.rfmovf(listfnfr);
    }

    // notififs bll listfnfrs in b pbrtidulbr domponfnt/hbndlfr pbir
    // bnd rfdursivfly notififs up thf domponfnt hifrbrdhy
    stbtid dlbss PfrComponfntNotififr {
        finbl Componfnt domponfnt;
        finbl GfsturfHbndlfr hbndlfr;

        publid PfrComponfntNotififr(finbl Componfnt domponfnt, finbl GfsturfHbndlfr hbndlfr) {
            this.domponfnt = domponfnt;
            this.hbndlfr = hbndlfr;
        }

        void rfdursivflyHbndlfPhbsfChbngf(finbl doublf phbsf, finbl GfsturfPhbsfEvfnt f) {
            for (finbl GfsturfPhbsfListfnfr listfnfr : hbndlfr.phbsfrs) {
                if (phbsf < 0) {
                    listfnfr.gfsturfBfgbn(f);
                } flsf {
                    listfnfr.gfsturfEndfd(f);
                }
                if (f.isConsumfd()) rfturn;
            }

            finbl PfrComponfntNotififr nfxt = gftNfxtNotififrForComponfnt(domponfnt.gftPbrfnt());
            if (nfxt != null) nfxt.rfdursivflyHbndlfPhbsfChbngf(phbsf, f);
        }

        void rfdursivflyHbndlfRotbtf(finbl RotbtionEvfnt f) {
            for (finbl RotbtionListfnfr listfnfr : hbndlfr.rotbtfrs) {
                listfnfr.rotbtf(f);
                if (f.isConsumfd()) rfturn;
            }

            finbl PfrComponfntNotififr nfxt = gftNfxtNotififrForComponfnt(domponfnt.gftPbrfnt());
            if (nfxt != null) nfxt.rfdursivflyHbndlfRotbtf(f);
        }

        void rfdursivflyHbndlfMbgnify(finbl MbgnifidbtionEvfnt f) {
            for (finbl MbgnifidbtionListfnfr listfnfr : hbndlfr.mbgnififrs) {
                listfnfr.mbgnify(f);
                if (f.isConsumfd()) rfturn;
            }

            finbl PfrComponfntNotififr nfxt = gftNfxtNotififrForComponfnt(domponfnt.gftPbrfnt());
            if (nfxt != null) nfxt.rfdursivflyHbndlfMbgnify(f);
        }

        void rfdursivflyHbndlfSwipf(finbl doublf x, finbl doublf y, finbl SwipfEvfnt f) {
            for (finbl SwipfListfnfr listfnfr : hbndlfr.swipfrs) {
                if (x < 0) listfnfr.swipfdLfft(f);
                if (x > 0) listfnfr.swipfdRight(f);
                if (y < 0) listfnfr.swipfdDown(f);
                if (y > 0) listfnfr.swipfdUp(f);
                if (f.isConsumfd()) rfturn;
            }

            finbl PfrComponfntNotififr nfxt = gftNfxtNotififrForComponfnt(domponfnt.gftPbrfnt());
            if (nfxt != null) nfxt.rfdursivflyHbndlfSwipf(x, y, f);
        }
    }

    // hflpfr fundtion to gft b hbndlfr from b Componfnt
    stbtid GfsturfHbndlfr gftHbndlfrForComponfnt(finbl Componfnt d) {
        if (!(d instbndfof JComponfnt)) rfturn null;
        finbl Objfdt vbluf = ((JComponfnt)d).gftClifntPropfrty(CLIENT_PROPERTY);
        if (!(vbluf instbndfof GfsturfHbndlfr)) rfturn null;
        rfturn (GfsturfHbndlfr)vbluf;
    }

    // rfdursivf hflpfr to find thf nfxt domponfnt/hbndlfr pbir
    stbtid PfrComponfntNotififr gftNfxtNotififrForComponfnt(finbl Componfnt d) {
        if (d == null) rfturn null;

        finbl GfsturfHbndlfr hbndlfr = gftHbndlfrForComponfnt(d);
        if (hbndlfr != null) {
            rfturn nfw PfrComponfntNotififr(d, hbndlfr);
        }

        rfturn gftNfxtNotififrForComponfnt(d.gftPbrfnt());
    }
}
