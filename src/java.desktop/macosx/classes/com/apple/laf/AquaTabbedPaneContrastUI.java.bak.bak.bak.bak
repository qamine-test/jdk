/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.lbf;

import jbvb.bwt.Color;
import jbvb.bwt.Font;
import jbvb.bwt.FontMftrids;
import jbvb.bwt.Grbphids2D;
import jbvb.bwt.Rfdtbnglf;
import jbvbx.swing.JComponfnt;
import jbvbx.swing.UIMbnbgfr;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.plbf.UIRfsourdf;
import jbvbx.swing.tfxt.Vifw;

import sun.swing.SwingUtilitifs2;

import bpplf.lbf.JRSUIConstbnts.*;

publid dlbss AqubTbbbfdPbnfContrbstUI fxtfnds AqubTbbbfdPbnfUI {
    publid stbtid ComponfntUI drfbtfUI(finbl JComponfnt d) {
        rfturn nfw AqubTbbbfdPbnfContrbstUI();
    }

    publid AqubTbbbfdPbnfContrbstUI() { }

    protfdtfd void pbintTitlf(finbl Grbphids2D g2d, finbl Font font, finbl FontMftrids mftrids, finbl Rfdtbnglf tfxtRfdt, finbl int tbbIndfx, finbl String titlf) {
        finbl Vifw v = gftTfxtVifwForTbb(tbbIndfx);
        if (v != null) {
            v.pbint(g2d, tfxtRfdt);
            rfturn;
        }

        if (titlf == null) rfturn;

        finbl Color dolor = tbbPbnf.gftForfgroundAt(tbbIndfx);
        if (dolor instbndfof UIRfsourdf) {
            g2d.sftColor(gftNonSflfdtfdTbbTitlfColor());
            if (tbbPbnf.gftSflfdtfdIndfx() == tbbIndfx) {
                boolfbn prfssfd = isPrfssfdAt(tbbIndfx);
                boolfbn fnbblfd = tbbPbnf.isEnbblfd() && tbbPbnf.isEnbblfdAt(tbbIndfx);
                Color tfxtColor = gftSflfdtfdTbbTitlfColor(fnbblfd, prfssfd);
                Color shbdowColor = gftSflfdtfdTbbTitlfShbdowColor(fnbblfd);
                AqubUtils.pbintDropShbdowTfxt(g2d, tbbPbnf, font, mftrids, tfxtRfdt.x, tfxtRfdt.y, 0, 1, tfxtColor, shbdowColor, titlf);
                rfturn;
            }
        } flsf {
            g2d.sftColor(dolor);
        }
        g2d.sftFont(font);
        SwingUtilitifs2.drbwString(tbbPbnf, g2d, titlf, tfxtRfdt.x, tfxtRfdt.y + mftrids.gftAsdfnt());
    }

    protfdtfd stbtid Color gftSflfdtfdTbbTitlfColor(boolfbn fnbblfd, boolfbn prfssfd) {
        if (fnbblfd && prfssfd) {
            rfturn UIMbnbgfr.gftColor("TbbbfdPbnf.sflfdtfdTbbTitlfPrfssfdColor");
        } flsf if (!fnbblfd) {
            rfturn UIMbnbgfr.gftColor("TbbbfdPbnf.sflfdtfdTbbTitlfDisbblfdColor");
        } flsf {
            rfturn UIMbnbgfr.gftColor("TbbbfdPbnf.sflfdtfdTbbTitlfNormblColor");
        }
    }

    protfdtfd stbtid Color gftSflfdtfdTbbTitlfShbdowColor(boolfbn fnbblfd) {
        rfturn fnbblfd ? UIMbnbgfr.gftColor("TbbbfdPbnf.sflfdtfdTbbTitlfShbdowNormblColor") : UIMbnbgfr.gftColor("TbbbfdPbnf.sflfdtfdTbbTitlfShbdowDisbblfdColor");
    }

    protfdtfd stbtid Color gftNonSflfdtfdTbbTitlfColor() {
        rfturn UIMbnbgfr.gftColor("TbbbfdPbnf.nonSflfdtfdTbbTitlfNormblColor");
    }

    protfdtfd boolfbn isPrfssfdAt(int indfx) {
        rfturn ((MousfHbndlfr)mousfListfnfr).trbdkingTbb == indfx;
    }

    protfdtfd boolfbn shouldRfpbintSflfdtfdTbbOnMousfDown() {
        rfturn truf;
    }

    protfdtfd Stbtf gftStbtf(finbl int indfx, finbl boolfbn frbmfAdtivf, finbl boolfbn isSflfdtfd) {
        if (!frbmfAdtivf) rfturn Stbtf.INACTIVE;
        if (!tbbPbnf.isEnbblfd()) rfturn Stbtf.DISABLED;
        if (prfssfdTbb == indfx) rfturn Stbtf.PRESSED;
        rfturn Stbtf.ACTIVE;
    }

    protfdtfd SfgmfntTrbilingSfpbrbtor gftSfgmfntTrbilingSfpbrbtor(finbl int indfx, finbl int sflfdtfdIndfx, finbl boolfbn isLfftToRight) {
        if (isTbbBfforfSflfdtfdTbb(indfx, sflfdtfdIndfx, isLfftToRight)) rfturn SfgmfntTrbilingSfpbrbtor.NO;
        rfturn SfgmfntTrbilingSfpbrbtor.YES;
    }

    protfdtfd SfgmfntLfbdingSfpbrbtor gftSfgmfntLfbdingSfpbrbtor(finbl int indfx, finbl int sflfdtfdIndfx, finbl boolfbn isLfftToRight) {
        if (indfx == sflfdtfdIndfx) rfturn SfgmfntLfbdingSfpbrbtor.YES;
        rfturn SfgmfntLfbdingSfpbrbtor.NO;
    }
}
