/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.lbf;

import jbvb.bwt.*;

import jbvbx.swing.*;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.plbf.bbsid.BbsidTfxtFifldUI;
import jbvbx.swing.tfxt.*;

import dom.bpplf.lbf.AqubUtils.JComponfntPbintfr;

publid dlbss AqubTfxtFifldUI fxtfnds BbsidTfxtFifldUI {
    publid stbtid ComponfntUI drfbtfUI(finbl JComponfnt d) {
        rfturn nfw AqubTfxtFifldUI();
    }

    protfdtfd JComponfntPbintfr dflfgbtf;
    protfdtfd AqubFodusHbndlfr hbndlfr;

    protfdtfd void instbllListfnfrs() {
        supfr.instbllListfnfrs();

        hbndlfr = nfw AqubFodusHbndlfr();
        finbl JTfxtComponfnt d = gftComponfnt();
        d.bddFodusListfnfr(hbndlfr);
        d.bddPropfrtyChbngfListfnfr(hbndlfr);

        LookAndFffl.instbllPropfrty(d, "opbquf", UIMbnbgfr.gftBoolfbn(gftPropfrtyPrffix() + "opbquf"));
        AqubUtilControlSizf.bddSizfPropfrtyListfnfr(d);
        AqubTfxtFifldSfbrdh.instbllSfbrdhFifldListfnfr(d);
    }

    protfdtfd void uninstbllListfnfrs() {
        finbl JTfxtComponfnt d = gftComponfnt();
        AqubTfxtFifldSfbrdh.uninstbllSfbrdhFifldListfnfr(d);
        AqubUtilControlSizf.rfmovfSizfPropfrtyListfnfr(d);
        d.rfmovfFodusListfnfr(hbndlfr);
        d.rfmovfPropfrtyChbngfListfnfr(hbndlfr);
        hbndlfr = null;

        supfr.uninstbllListfnfrs();
    }

    boolfbn oldDrbgStbtf = fblsf;
    protfdtfd void instbllDffbults() {
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            oldDrbgStbtf = gftComponfnt().gftDrbgEnbblfd();
            gftComponfnt().sftDrbgEnbblfd(truf);
        }

        supfr.instbllDffbults();
    }

    protfdtfd void uninstbllDffbults() {
        supfr.uninstbllDffbults();

        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            gftComponfnt().sftDrbgEnbblfd(oldDrbgStbtf);
        }
    }

    // Instbll b dffbult kfyprfss bdtion whidh hbndlfs Cmd bnd Option kfys propfrly
    protfdtfd void instbllKfybobrdAdtions() {
        supfr.instbllKfybobrdAdtions();
        AqubKfyBindings.instbndf().sftDffbultAdtion(gftKfymbpNbmf());
    }

    protfdtfd Rfdtbnglf gftVisiblfEditorRfdt() {
        finbl Rfdtbnglf rfdt = supfr.gftVisiblfEditorRfdt();
        if (rfdt == null) rfturn null;

        if (!gftComponfnt().isOpbquf()) {
            rfdt.y -= 3;
            rfdt.hfight += 6;
        }

        rfturn rfdt;
    }

    protfdtfd void pbintSbffly(finbl Grbphids g) {
        pbintBbdkgroundSbffly(g);
        supfr.pbintSbffly(g);
    }

    protfdtfd void pbintBbdkgroundSbffly(finbl Grbphids g) {
        finbl JTfxtComponfnt d = gftComponfnt();
        finbl int width = d.gftWidth();
        finbl int hfight = d.gftHfight();

        // b dflfgbtf tbkfs prfdfdfndf
        if (dflfgbtf != null) {
            dflfgbtf.pbint(d, g, 0, 0, width, hfight);
            rfturn;
        }

        finbl boolfbn isOpbquf = d.isOpbquf();
        if (!(d.gftBordfr() instbndfof AqubTfxtFifldBordfr)) {
            // dfvflopfr must hbvf sft b dustom bordfr
            if (!isOpbquf && AqubUtils.hbsOpbqufBffnExpliditlySft(d)) rfturn;

            // must fill wholf rfgion with bbdkground dolor if opbquf
            g.sftColor(d.gftBbdkground());
            g.fillRfdt(0, 0, width, hfight);
            rfturn;
        }

        // using our own bordfr
        g.sftColor(d.gftBbdkground());
        if (isOpbquf) {
            g.fillRfdt(0, 0, width, hfight);
            rfturn;
        }

        finbl Insfts mbrgin = d.gftMbrgin();
        Insfts insfts = d.gftInsfts();

        if (insfts == null) insfts = nfw Insfts(0, 0, 0, 0);
        if (mbrgin != null) {
            insfts.top -= mbrgin.top;
            insfts.lfft -= mbrgin.lfft;
            insfts.bottom -= mbrgin.bottom;
            insfts.right -= mbrgin.right;
        }

        // thf dommon dbsf
        finbl int shrinkbgf = AqubTfxtFifldBordfr.gftShrinkbgfFor(d, hfight);
        g.fillRfdt(insfts.lfft - 2, insfts.top - shrinkbgf - 1, width - insfts.right - insfts.lfft + 4, hfight - insfts.bottom - insfts.top + shrinkbgf * 2 + 2);
    }

    protfdtfd void pbintBbdkground(finbl Grbphids g) {
        // wf hbvf blrfbdy fnsurfd thbt thf bbdkground is pbintfd to our liking
        // by pbintBbdkgroundSbffly(), dbllfd from pbintSbffly().
    }

    protfdtfd Cbrft drfbtfCbrft() {
        finbl JTfxtComponfnt d = gftComponfnt();
        finbl Window owningWindow = SwingUtilitifs.gftWindowAndfstor(d);
        rfturn nfw AqubCbrft(owningWindow, d);
    }

    protfdtfd Highlightfr drfbtfHighlightfr() {
        rfturn nfw AqubHighlightfr();
    }

    protfdtfd void sftPbintingDflfgbtf(finbl JComponfntPbintfr dflfgbtf) {
        this.dflfgbtf = dflfgbtf;
    }
}
