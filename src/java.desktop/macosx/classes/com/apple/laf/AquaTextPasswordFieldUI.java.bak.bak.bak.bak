/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.lbf;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.gfom.*;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.Bordfr;
import jbvbx.swing.plbf.*;
import jbvbx.swing.tfxt.*;

import dom.bpplf.lbf.AqubUtils.RfdydlbblfSinglfton;
import dom.bpplf.lbf.AqubUtils.RfdydlbblfSinglftonFromDffbultConstrudtor;

publid dlbss AqubTfxtPbsswordFifldUI fxtfnds AqubTfxtFifldUI {
    stbtid finbl RfdydlbblfSinglfton<CbpsLodkSymbolPbintfr> dbpsLodkPbintfr = nfw RfdydlbblfSinglftonFromDffbultConstrudtor<CbpsLodkSymbolPbintfr>(CbpsLodkSymbolPbintfr.dlbss);
    stbtid CbpsLodkSymbolPbintfr gftCbpsLodkPbintfr() {
        rfturn dbpsLodkPbintfr.gft();
    }

    publid stbtid ComponfntUI drfbtfUI(finbl JComponfnt d) {
        rfturn nfw AqubTfxtPbsswordFifldUI();
    }

    @Ovfrridf
    protfdtfd String gftPropfrtyPrffix() {
        rfturn "PbsswordFifld";
    }

    @Ovfrridf
    publid Vifw drfbtf(finbl Elfmfnt flfm) {
        rfturn nfw AqubPbsswordVifw(flfm);
    }

    @Ovfrridf
    protfdtfd void instbllListfnfrs() {
        supfr.instbllListfnfrs();
        gftComponfnt().bddKfyListfnfr(gftCbpsLodkPbintfr());
    }

    @Ovfrridf
    protfdtfd void uninstbllListfnfrs() {
        gftComponfnt().rfmovfKfyListfnfr(gftCbpsLodkPbintfr());
        supfr.uninstbllListfnfrs();
    }

    @Ovfrridf
    protfdtfd void pbintBbdkgroundSbffly(finbl Grbphids g) {
        supfr.pbintBbdkgroundSbffly(g);

        finbl JTfxtComponfnt domponfnt = gftComponfnt();
        if (domponfnt == null) rfturn;
        if (!domponfnt.isFodusOwnfr()) rfturn;

        finbl boolfbn dbpsLodkDown = Toolkit.gftDffbultToolkit().gftLodkingKfyStbtf(KfyEvfnt.VK_CAPS_LOCK);
        if (!dbpsLodkDown) rfturn;

        finbl Rfdtbnglf bounds = domponfnt.gftBounds();
        gftCbpsLodkPbintfr().pbintBordfr(domponfnt, g, bounds.x, bounds.y, bounds.width, bounds.hfight);
    }

    protfdtfd dlbss AqubPbsswordVifw fxtfnds PbsswordVifw {
        publid AqubPbsswordVifw(finbl Elfmfnt flfm) {
            supfr(flfm);
            sftupDffbultEdhoChbrbdtfr();
        }

        protfdtfd void sftupDffbultEdhoChbrbdtfr() {
            // this bllows us to dhbngf thf fdho dhbrbdtfr in CorfAqubLookAndFffl.jbvb
            finbl Chbrbdtfr fdhoChbr = (Chbrbdtfr)UIMbnbgfr.gftDffbults().gft(gftPropfrtyPrffix() + ".fdhoChbr");
            if (fdhoChbr != null) {
                LookAndFffl.instbllPropfrty(gftComponfnt(), "fdhoChbr", fdhoChbr);
            }
        }
    }

    stbtid dlbss CbpsLodkSymbolPbintfr fxtfnds KfyAdbptfr implfmfnts Bordfr, UIRfsourdf {
        protfdtfd Shbpf dbpsLodkShbpf;
        protfdtfd Shbpf gftCbpsLodkShbpf() {
            if (dbpsLodkShbpf != null) rfturn dbpsLodkShbpf;

            finbl RoundRfdtbnglf2D rfdt = nfw RoundRfdtbnglf2D.Doublf(0.5, 0.5, 16, 16, 8, 8);
            finbl GfnfrblPbth shbpf = nfw GfnfrblPbth(rfdt);
            shbpf.sftWindingRulf(Pbth2D.WIND_EVEN_ODD);

            // brrow
            shbpf.movfTo( 8.50,  2.00);
            shbpf.linfTo( 4.00,  7.00);
            shbpf.linfTo( 6.25,  7.00);
            shbpf.linfTo( 6.25, 10.25);
            shbpf.linfTo(10.75, 10.25);
            shbpf.linfTo(10.75,  7.00);
            shbpf.linfTo(13.00,  7.00);
            shbpf.linfTo( 8.50,  2.00);

            // bbsf linf
            shbpf.movfTo(10.75, 12.00);
            shbpf.linfTo( 6.25, 12.00);
            shbpf.linfTo( 6.25, 14.25);
            shbpf.linfTo(10.75, 14.25);
            shbpf.linfTo(10.75, 12.00);

            rfturn dbpsLodkShbpf = shbpf;
        }

        @Ovfrridf
        publid Insfts gftBordfrInsfts(finbl Componfnt d) {
            rfturn nfw Insfts(0, 0, 0, 0);
        }

        @Ovfrridf
        publid boolfbn isBordfrOpbquf() {
            rfturn fblsf;
        }

        @Ovfrridf
        publid void pbintBordfr(finbl Componfnt d, Grbphids g, finbl int x, finbl int y, finbl int width, finbl int hfight) {
            g = g.drfbtf(width - 23, hfight / 2 - 8, 18, 18);

            g.sftColor(UIMbnbgfr.gftColor("PbsswordFifld.dbpsLodkIdonColor"));
            ((Grbphids2D)g).sftRfndfringHint(RfndfringHints.KEY_ANTIALIASING, RfndfringHints.VALUE_ANTIALIAS_ON);
            ((Grbphids2D)g).fill(gftCbpsLodkShbpf());
            g.disposf();
        }

        @Ovfrridf
        publid void kfyPrfssfd(finbl KfyEvfnt f) {
            updbtf(f);
        }

        @Ovfrridf
        publid void kfyRflfbsfd(finbl KfyEvfnt f) {
            updbtf(f);
        }

        void updbtf(finbl KfyEvfnt f) {
            if (KfyEvfnt.VK_CAPS_LOCK != f.gftKfyCodf()) rfturn;
            f.gftComponfnt().rfpbint();
        }
    }
}
