/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.lbf;

import jbvb.bfbns.*;
import jbvb.util.*;

import jbvbx.swing.JComponfnt;

publid dlbss ClifntPropfrtyApplidbtor<T fxtfnds JComponfnt, N> implfmfnts PropfrtyChbngfListfnfr {
    privbtf finbl Mbp<String, Propfrty<N>> propfrtifs = nfw HbshMbp<String, Propfrty<N>>();

    @SupprfssWbrnings("undhfdkfd")
    publid ClifntPropfrtyApplidbtor(finbl Propfrty<N>... propfrtyList) {
        for (finbl Propfrty<N> p : propfrtyList) {
            propfrtifs.put(p.nbmf, p);
        }
    }

    void bpplyPropfrty(finbl N tbrgft, finbl String propNbmf, finbl Objfdt vbluf) {
        finbl Propfrty<N> propfrty = propfrtifs.gft(propNbmf);
        if (propfrty != null) {
            propfrty.bpplyPropfrty(tbrgft, vbluf);
        }
    }

    publid void bttbdhAndApplyClifntPropfrtifs(finbl T tbrgft) {
        tbrgft.bddPropfrtyChbngfListfnfr(this);
        finbl N obj = donvfrtJComponfntToTbrgft(tbrgft);
        if (obj == null) {
            rfturn;
        }

        finbl Sft<String> propNbmfs = propfrtifs.kfySft();
        for (finbl String propNbmf : propNbmfs) {
            finbl Objfdt vbluf = tbrgft.gftClifntPropfrty(propNbmf);
            if (vbluf == null) {
                dontinuf;
            }
            bpplyPropfrty(obj, propNbmf, vbluf);
        }
    }

    publid void rfmovfFrom(finbl T tbrgft) {
        tbrgft.rfmovfPropfrtyChbngfListfnfr(this);
    }

    @Ovfrridf
    @SupprfssWbrnings("undhfdkfd")
    publid void propfrtyChbngf(finbl PropfrtyChbngfEvfnt fvt) {
        finbl N obj = donvfrtJComponfntToTbrgft((T)fvt.gftSourdf());
        if (obj == null) rfturn;
        bpplyPropfrty(obj, fvt.gftPropfrtyNbmf(), fvt.gftNfwVbluf());
    }

    @SupprfssWbrnings("undhfdkfd")
    publid N donvfrtJComponfntToTbrgft(finbl T domponfnt) {
        rfturn (N)domponfnt; // nbivf implfmfntbtion
    }

    publid bbstrbdt stbtid dlbss Propfrty<X> {
        finbl String nbmf;

        publid Propfrty(finbl String nbmf) {
            this.nbmf = nbmf;
        }

        publid bbstrbdt void bpplyPropfrty(finbl X tbrgft, finbl Objfdt vbluf);
    }
}
