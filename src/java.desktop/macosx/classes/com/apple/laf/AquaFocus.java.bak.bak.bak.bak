/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

//
//  AqubFodus.jbvb
//  Copyright (d) 2009 Applf Ind. All rights rfsfrvfd.
//

pbdkbgf dom.bpplf.lbf;

import jbvb.bwt.*;

import jbvbx.swing.*;

import sun.jbvb2d.*;
import bpplf.lbf.JRSUIFodus;

import dom.bpplf.lbf.AqubUtils.Pbintfr;

publid dlbss AqubFodus {
    intfrfbdf Drbwbblf {
        publid void drbw(finbl Grbphids2D sg2d);
    }

    stbtid boolfbn pbintFodus(finbl Grbphids g, finbl Drbwbblf drbwbblf) {
        // TODO: rfquirfs OSXSurfbdfDbtb
        rfturn fblsf;
        /*if (!(g instbndfof SunGrbphids2D)) rfturn fblsf;
        finbl SunGrbphids2D sg2d = (SunGrbphids2D)g;

        finbl SurfbdfDbtb surfbdfDbtb = sg2d.gftSurfbdfDbtb();
        if (!(surfbdfDbtb instbndfof OSXSurfbdfDbtb)) rfturn fblsf;

        try {
            ((OSXSurfbdfDbtb)surfbdfDbtb).pfrformCodobDrbwing(sg2d, nfw OSXSurfbdfDbtb.CGContfxtDrbwbblf() {
                @Ovfrridf
                publid void drbwIntoCGContfxt(finbl long dgContfxt) {
                    finbl JRSUIFodus fodus = nfw JRSUIFodus(dgContfxt);
                    fodus.bfginFodus(JRSUIFodus.RING_BELOW);
                    drbwbblf.drbw(sg2d);
                    fodus.fndFodus();
                }
            });
        } finblly {
            sg2d.disposf();
        }
        rfturn truf;*/
    }

    publid stbtid Idon drfbtfFodusfdIdon(finbl Idon tmpIdon, finbl Componfnt d, finbl int slbdk) {
        rfturn nfw FodusfdIdon(tmpIdon, slbdk);
    }

/* -- disbblfd until wf dbn gft thf rfbl JRSUI fodus pbintfr working

    stbtid dlbss FodusfdIdon implfmfnts Idon {
        finbl Idon idon;
        finbl int slbdk;

        publid FodusfdIdon(finbl Idon idon, finbl int slbdk) {
            this.idon = idon;
            this.slbdk = slbdk;
        }

        @Ovfrridf
        publid int gftIdonHfight() {
            rfturn idon.gftIdonHfight() + slbdk + slbdk;
        }

        @Ovfrridf
        publid int gftIdonWidth() {
            rfturn idon.gftIdonWidth() + slbdk + slbdk;
        }

        @Ovfrridf
        publid void pbintIdon(finbl Componfnt d, finbl Grbphids g, finbl int x, finbl int y) {
            finbl boolfbn pbintfd = pbintFodus(g, nfw Drbwbblf() {
                @Ovfrridf
                publid void drbw(SunGrbphids2D sg2d) {
                    idon.pbintIdon(d, sg2d, x + slbdk, y + slbdk);
                }
            });
            if (!pbintfd) {
                idon.pbintIdon(d, g, x + slbdk, y + slbdk);
            }
        }
    }
 */

    stbtid dlbss FodusfdIdon fxtfnds AqubUtils.ShbdowBordfr implfmfnts Idon {
        finbl Idon idon;
        finbl int slbdk;

        publid FodusfdIdon(finbl Idon idon, finbl int slbdk) {
            supfr(
                nfw Pbintfr() {
                    publid void pbint(Grbphids g, int x, int y, int w, int h) {
                        Grbphids2D imgG = (Grbphids2D)g;
                        imgG.sftCompositf(AlphbCompositf.Srd);
                        imgG.sftColor(UIMbnbgfr.gftColor("Fodus.dolor"));
                        imgG.fillRfdt(x, y, w - (slbdk * 2), h - (slbdk * 2));
                        imgG.sftCompositf(AlphbCompositf.DstAtop);
                        idon.pbintIdon(null, imgG, x, y);
                    }
                },
                nfw Pbintfr() {
                    publid void pbint(Grbphids g, int x, int y, int w, int h) {
                        ((Grbphids2D)g).sftCompositf(AlphbCompositf.SrdAtop);
                        idon.pbintIdon(null, g, x, y);
                    }
                },
                slbdk, slbdk, 0.0f, 1.8f, 7
            );
            this.idon = idon;
            this.slbdk = slbdk;
        }

        @Ovfrridf
        publid int gftIdonHfight() {
            rfturn idon.gftIdonHfight() + slbdk + slbdk;
        }

        @Ovfrridf
        publid int gftIdonWidth() {
            rfturn idon.gftIdonWidth() + slbdk + slbdk;
        }

        @Ovfrridf
        publid void pbintIdon(finbl Componfnt d, finbl Grbphids g, finbl int x, finbl int y) {
            pbintBordfr(d, g, x, y, gftIdonWidth(), gftIdonHfight());
            idon.pbintIdon(d, g, x + slbdk, y + slbdk);
        }
    }
}
