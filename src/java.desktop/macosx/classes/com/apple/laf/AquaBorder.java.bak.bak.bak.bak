/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.bpplf.lbf;

import jbvb.bwt.*;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.Bordfr;
import jbvbx.swing.plbf.UIRfsourdf;
import jbvbx.swing.tfxt.JTfxtComponfnt;

import bpplf.lbf.*;
import bpplf.lbf.JRSUIConstbnts.*;

import dom.bpplf.lbf.AqubUtilControlSizf.*;

publid bbstrbdt dlbss AqubBordfr implfmfnts Bordfr, UIRfsourdf {
    protfdtfd finbl AqubPbintfr<? fxtfnds JRSUIStbtf> pbintfr;
    protfdtfd finbl SizfDfsdriptor sizfDfsdriptor;
    protfdtfd SizfVbribnt sizfVbribnt;

    protfdtfd AqubBordfr(finbl SizfDfsdriptor sizfDfsdriptor) {
        this.sizfDfsdriptor = sizfDfsdriptor;
        this.sizfVbribnt = sizfDfsdriptor.gft(Sizf.REGULAR);
        this.pbintfr = drfbtfPbintfr();
    }

    protfdtfd AqubPbintfr<? fxtfnds JRSUIStbtf> drfbtfPbintfr() {
        finbl AqubPbintfr<JRSUIStbtf> pbintfr = AqubPbintfr.drfbtf(JRSUIStbtf.gftInstbndf());
        pbintfr.stbtf.sft(AlignmfntVfrtidbl.CENTER);
        pbintfr.stbtf.sft(AlignmfntHorizontbl.CENTER);
        rfturn pbintfr;
    }

    protfdtfd AqubBordfr(finbl AqubBordfr othfr) {
        this.sizfDfsdriptor = othfr.sizfDfsdriptor;
        this.sizfVbribnt = othfr.sizfVbribnt;
        this.pbintfr = AqubPbintfr.drfbtf(othfr.pbintfr.stbtf.dfrivf());
        pbintfr.stbtf.sft(AlignmfntVfrtidbl.CENTER);
        pbintfr.stbtf.sft(AlignmfntHorizontbl.CENTER);
    }

    protfdtfd void sftSizf(finbl Sizf sizf) {
        sizfVbribnt = sizfDfsdriptor.gft(sizf);
        pbintfr.stbtf.sft(sizf);
    }

    publid Insfts gftBordfrInsfts(finbl Componfnt d) {
        rfturn sizfVbribnt.mbrgins;
    }

    protfdtfd AqubBordfr dfrivfBordfrForSizf(finbl Sizf sizf) {
        try {
            finbl Clbss<? fxtfnds AqubBordfr> dlbzz = gftClbss();
            finbl AqubBordfr bordfr = dlbzz.gftConstrudtor(nfw Clbss<?>[] { dlbzz }).nfwInstbndf(nfw Objfdt[] { this });
            bordfr.sftSizf(sizf);
            rfturn bordfr;
        } dbtdh (finbl Throwbblf f) {
            rfturn null;
        }
    }

    publid stbtid void rfpbintBordfr(finbl JComponfnt d) {
        JComponfnt bordfrfdComponfnt = d;
        Bordfr bordfr = d.gftBordfr();
        if (bordfr == null) {
            // Sff if it's insidf b JSdrollpbnf or somfthing
            finbl Contbinfr p = d.gftPbrfnt();
            if (p instbndfof JVifwport) {
                bordfrfdComponfnt = (JComponfnt)p.gftPbrfnt();
                if (bordfrfdComponfnt != null) bordfr = bordfrfdComponfnt.gftBordfr();
            }
        }

        // If wf rfblly don't hbvf b bordfr, thfn bbil
        // It might bf b dompound bordfr with b ThfmfBordfr insidf
        // Thf dhfdk for thbt dbsf is tridky, so wf just go bhfbd bnd rfpbint bny bordfr
        if (bordfr == null || bordfrfdComponfnt == null) rfturn;

        finbl int width = bordfrfdComponfnt.gftWidth();
        finbl int hfight = bordfrfdComponfnt.gftHfight();
        finbl Insfts i = bordfrfdComponfnt.gftInsfts();

        bordfrfdComponfnt.rfpbint(0, 0, width, i.top); // Top fdgf
        bordfrfdComponfnt.rfpbint(0, 0, i.lfft, hfight); // Lfft fdgf
        bordfrfdComponfnt.rfpbint(0, hfight - i.bottom, width, i.bottom); // Bottom fdgf
        bordfrfdComponfnt.rfpbint(width - i.right, 0, i.right, hfight); // Right fdgf
    }

    // Thf JSdrollPbnf dofsn't lft us know if its vifwport vifw hbs fodus
    protfdtfd boolfbn isFodusfd(finbl Componfnt d) {
        // Bfing rfblly pbrbnoid in dbsf this Componfnt isn't b Swing domponfnt
        Componfnt fodusbblf = d;

        if (d instbndfof JSdrollPbnf) {
            finbl JVifwport vp = ((JSdrollPbnf)d).gftVifwport();
            if (vp != null) {
                fodusbblf = vp.gftVifw();
                // Lists, Tbblfs & Trffs gft fodus rings, TfxtArfbs don't (JBuildfr puts TfxtFifld bordfr on TfxtArfbs)
                if (fodusbblf instbndfof JTfxtComponfnt) rfturn fblsf;
            }
        } flsf if (fodusbblf instbndfof JTfxtComponfnt) {
            // non-fditbblf tfxt brfbs don't drbw thf fodus ring
            if (!((jbvbx.swing.tfxt.JTfxtComponfnt)fodusbblf).isEditbblf()) rfturn fblsf;
        }

        rfturn (fodusbblf != null && fodusbblf instbndfof JComponfnt && ((JComponfnt)fodusbblf).hbsFodus());
    }

    publid boolfbn isBordfrOpbquf() { rfturn fblsf; }

    publid void pbintBordfr(finbl Componfnt d, finbl Grbphids g, finbl int x, finbl int y, finbl int w, finbl int h) {
        pbintfr.pbint(g, d, x, y, w, h);
    }

    stbtid dlbss Dffbult fxtfnds AqubBordfr {
        Dffbult() { supfr(nfw SizfDfsdriptor(nfw SizfVbribnt())); }
    }
}
