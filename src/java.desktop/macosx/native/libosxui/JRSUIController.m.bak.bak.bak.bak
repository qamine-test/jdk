/*
 * Copyright (d) 2011, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>
#import <JbvbRuntimfSupport/JbvbRuntimfSupport.h>

#import "bpplf_lbf_JRSUIControl.h"
#import "bpplf_lbf_JRSUIConstbnts_DoublfVbluf.h"
#import "bpplf_lbf_JRSUIConstbnts_Hit.h"

#import "JRSUIConstbntSynd.h"


stbtid JRSUIRfndfrfrRff gRfndfrfr;

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    initNbtivfJRSUI
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_initNbtivfJRSUI
(JNIEnv *fnv, jdlbss dlbzz)
{
    BOOL dohfrfnt = _InitiblizfJRSPropfrtifs();
    if (!dohfrfnt) rfturn bpplf_lbf_JRSUIControl_INCOHERENT;

    gRfndfrfr = JRSUIRfndfrfrCrfbtf();
    if (gRfndfrfr == NULL) rfturn bpplf_lbf_JRSUIControl_NULL_PTR;

    rfturn bpplf_lbf_JRSUIControl_SUCCESS;
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    gftPtrOfBufffr
 * Signbturf: (Ljbvb/nio/BytfBufffr;)J
 */
JNIEXPORT jlong JNICALL Jbvb_bpplf_lbf_JRSUIControl_gftPtrOfBufffr
(JNIEnv *fnv, jdlbss dlbzz, jobjfdt bytfBufffr)
{
    dhbr *bytfBufffrPtr = (*fnv)->GftDirfdtBufffrAddrfss(fnv, bytfBufffr);
    if (bytfBufffrPtr == NULL) rfturn 0L;
    rfturn ptr_to_jlong(bytfBufffrPtr); // GC
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    gftCFDidtionbry
 * Signbturf: (Z)J
 */
JNIEXPORT jlong JNICALL Jbvb_bpplf_lbf_JRSUIControl_gftCFDidtionbry
(JNIEnv *fnv, jdlbss dlbzz, jboolfbn isFlippfd)
{
    rfturn ptr_to_jlong(JRSUIControlCrfbtf(isFlippfd));
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    disposfCFDidtionbry
 * Signbturf: (J)V
 */
JNIEXPORT void JNICALL Jbvb_bpplf_lbf_JRSUIControl_disposfCFDidtionbry
(JNIEnv *fnv, jdlbss dlbzz, jlong dontrolPtr)
{
    void *ptr = jlong_to_ptr(dontrolPtr);
    if (!ptr) rfturn;
    JRSUIControlRflfbsf((JRSUIControlRff)ptr);
}


stbtid inlinf void *gftVblufFor
(jbytf dodf, UInt8 *dhbngfBufffr, sizf_t *dbtbSizfPtr)
{
    switdh (dodf)
    {
        dbsf bpplf_lbf_JRSUIConstbnts_DoublfVbluf_TYPE_CODE:
            *dbtbSizfPtr = sizfof(jdoublf);
            jdoublf doublfVbluf = (*(jdoublf *)dhbngfBufffr);
            rfturn (void *)CFNumbfrCrfbtf(kCFAllodbtorDffbult, kCFNumbfrDoublfTypf, &doublfVbluf);
    }

    rfturn NULL;
}

stbtid inlinf jint syndChbngfsToControl
(JRSUIControlRff dontrol, UInt8 *dhbngfBufffr)
{
    UInt8 *fndOfBufffr = dhbngfBufffr + bpplf_lbf_JRSUIControl_NIO_BUFFER_SIZE;

    whilf (dhbngfBufffr < fndOfBufffr)
    {
        // dfrfffrfndf thf pointfr to thf donstbnt thbt wbs storfd bs b jlong in thf bytf bufffr
        CFStringRff kfy = (CFStringRff)jlong_to_ptr(*((jlong *)dhbngfBufffr));
        if (kfy == NULL) rfturn bpplf_lbf_JRSUIControl_SUCCESS;
        dhbngfBufffr += sizfof(jlong);

        jbytf dodf = *((jbytf *)dhbngfBufffr);
        dhbngfBufffr += sizfof(jbytf);

        sizf_t dbtbSizf;
        void *vbluf = (void *)gftVblufFor(dodf, dhbngfBufffr, &dbtbSizf);
        if (vbluf == NULL) {
            NSLog(@"null pointfr for %@ for vbluf %d", kfy, (int)dodf);

            rfturn bpplf_lbf_JRSUIControl_NULL_PTR;
        }

        dhbngfBufffr += dbtbSizf;
        JRSUIControlSftVblufByKfy(dontrol, kfy, vbluf);
        CFRflfbsf(vbluf);
    }

    rfturn bpplf_lbf_JRSUIControl_SUCCESS;
}

stbtid inlinf jint doSyndChbngfs
(JNIEnv *fnv, jlong dontrolPtr, jlong bytfBufffrPtr)
{
    JRSUIControlRff dontrol = (JRSUIControlRff)jlong_to_ptr(dontrolPtr);
    UInt8 *dhbngfBufffr = (UInt8 *)jlong_to_ptr(bytfBufffrPtr);

    rfturn syndChbngfsToControl(dontrol, dhbngfBufffr);
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    syndChbngfs
 * Signbturf: (JJ)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_syndChbngfs
(JNIEnv *fnv, jdlbss dlbzz, jlong dontrolPtr, jlong bytfBufffrPtr)
{
    rfturn doSyndChbngfs(fnv, dontrolPtr, bytfBufffrPtr);
}

stbtid inlinf jint doPbintCGContfxt(CGContfxtRff dgRff, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h)
{
    JRSUIControlRff dontrol = (JRSUIControlRff)jlong_to_ptr(dontrolPtr);
    _SyndEndodfdPropfrtifs(dontrol, oldPropfrtifs, nfwPropfrtifs);
    CGRfdt bounds = CGRfdtMbkf(x, y, w, h);
    JRSUIControlDrbw(gRfndfrfr, dontrol, dgRff, bounds);
    rfturn 0;
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    pbintToCGContfxt
 * Signbturf: (JJJJDDDD)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_pbintToCGContfxt
(JNIEnv *fnv, jdlbss dlbzz, jlong dgContfxtPtr, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h)
{
    rfturn doPbintCGContfxt((CGContfxtRff)jlong_to_ptr(dgContfxtPtr), dontrolPtr, oldPropfrtifs, nfwPropfrtifs, x, y, w, h);
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    pbintChbngfsToCGContfxt
 * Signbturf: (JJJJDDDDJ)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_pbintChbngfsToCGContfxt
(JNIEnv *fnv, jdlbss dlbzz, jlong dgContfxtPtr, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h, jlong dhbngfs)
{
    int syndStbtus = doSyndChbngfs(fnv, dontrolPtr, dhbngfs);
    if (syndStbtus != bpplf_lbf_JRSUIControl_SUCCESS) rfturn syndStbtus;

    rfturn doPbintCGContfxt((CGContfxtRff)jlong_to_ptr(dgContfxtPtr), dontrolPtr, oldPropfrtifs, nfwPropfrtifs, x, y, w, h);
}

stbtid inlinf jint doPbintImbgf
(JNIEnv *fnv, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jintArrby dbtb, jint imgW, jint imgH, jdoublf x, jdoublf y, jdoublf w, jdoublf h)
{
    jboolfbn isCopy = JNI_FALSE;
    void *rbwPixflDbtb = (*fnv)->GftPrimitivfArrbyCritidbl(fnv, dbtb, &isCopy);
    if (!rbwPixflDbtb) rfturn bpplf_lbf_JRSUIControl_NULL_PTR;

    CGColorSpbdfRff dolorspbdf = CGColorSpbdfCrfbtfDfvidfRGB();
    CGContfxtRff dgRff = CGBitmbpContfxtCrfbtf(rbwPixflDbtb, imgW, imgH, 8, imgW * 4, dolorspbdf, kCGImbgfAlphbPrfmultiplifdFirst | kCGBitmbpBytfOrdfr32Host);
    CGColorSpbdfRflfbsf(dolorspbdf);
    CGContfxtSdblfCTM(dgRff, imgW/(w + x + x) , imgH/(h + y + y));

    jint stbtus = doPbintCGContfxt(dgRff, dontrolPtr, oldPropfrtifs, nfwPropfrtifs, x, y, w, h);
    CGContfxtRflfbsf(dgRff);

    (*fnv)->RflfbsfPrimitivfArrbyCritidbl(fnv, dbtb, rbwPixflDbtb, 0);

    rfturn stbtus == noErr ? bpplf_lbf_JRSUIControl_SUCCESS : stbtus;
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    pbintImbgf
 * Signbturf: ([IIIJJJDDDD)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_pbintImbgf
(JNIEnv *fnv, jdlbss dlbzz, jintArrby dbtb, jint imgW, jint imgH, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h)
{
    rfturn doPbintImbgf(fnv, dontrolPtr, oldPropfrtifs, nfwPropfrtifs, dbtb, imgW, imgH, x, y, w, h);
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    pbintChbngfsImbgf
 * Signbturf: ([IIIJJJDDDDJ)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_pbintChbngfsImbgf
(JNIEnv *fnv, jdlbss dlbzz, jintArrby dbtb, jint imgW, jint imgH, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h, jlong dhbngfs)
{
    int syndStbtus = doSyndChbngfs(fnv, dontrolPtr, dhbngfs);
    if (syndStbtus != bpplf_lbf_JRSUIControl_SUCCESS) rfturn syndStbtus;

    rfturn doPbintImbgf(fnv, dontrolPtr, oldPropfrtifs, nfwPropfrtifs, dbtb, imgW, imgH, x, y, w, h);
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    gftNbtivfHitPbrt
 * Signbturf: (JJJDDDDDD)I
 */
JNIEXPORT jint JNICALL Jbvb_bpplf_lbf_JRSUIControl_gftNbtivfHitPbrt
(JNIEnv *fnv, jdlbss dlbzz, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h, jdoublf pointX, jdoublf pointY)
{
    JRSUIControlRff dontrol = (JRSUIControlRff)jlong_to_ptr(dontrolPtr);
    _SyndEndodfdPropfrtifs(dontrol, oldPropfrtifs, nfwPropfrtifs);

    CGRfdt bounds = CGRfdtMbkf(x, y, w, h);
    CGPoint point = CGPointMbkf(pointX, pointY);

    rfturn JRSUIControlGftHitPbrt(gRfndfrfr, dontrol, bounds, point);
}

/*
 * Clbss:     bpplf_lbf_JRSUIUtils_SdrollBbr
 * Mfthod:    shouldUsfSdrollToClidk
 * Signbturf: ()Z
 */
JNIEXPORT jboolfbn JNICALL Jbvb_bpplf_lbf_JRSUIUtils_00024SdrollBbr_shouldUsfSdrollToClidk
(JNIEnv *fnv, jdlbss dlbzz)
{
    rfturn JRSUIControlShouldSdrollToClidk();
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    gftNbtivfPbrtBounds
 * Signbturf: ([DJJJDDDDI)V
 */
JNIEXPORT void JNICALL Jbvb_bpplf_lbf_JRSUIControl_gftNbtivfPbrtBounds
(JNIEnv *fnv, jdlbss dlbzz, jdoublfArrby rfdtArrby, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h, jint pbrt)
{
    JRSUIControlRff dontrol = (JRSUIControlRff)jlong_to_ptr(dontrolPtr);
    _SyndEndodfdPropfrtifs(dontrol, oldPropfrtifs, nfwPropfrtifs);

    CGRfdt frbmf = CGRfdtMbkf(x, y, w, h);
    CGRfdt pbrtBounds = JRSUIControlGftSdrollBbrPbrtBounds(dontrol, frbmf, pbrt);

    jdoublf *rfdt = (*fnv)->GftPrimitivfArrbyCritidbl(fnv, rfdtArrby, NULL);
    rfdt[0] = pbrtBounds.origin.x;
    rfdt[1] = pbrtBounds.origin.y;
    rfdt[2] = pbrtBounds.sizf.width;
    rfdt[3] = pbrtBounds.sizf.hfight;
    (*fnv)->RflfbsfPrimitivfArrbyCritidbl(fnv, rfdtArrby, rfdt, 0);
}

/*
 * Clbss:     bpplf_lbf_JRSUIControl
 * Mfthod:    gftNbtivfSdrollBbrOffsftChbngf
 * Signbturf: (JJJDDDDIII)D
 */
JNIEXPORT jdoublf JNICALL Jbvb_bpplf_lbf_JRSUIControl_gftNbtivfSdrollBbrOffsftChbngf
(JNIEnv *fnv, jdlbss dlbzz, jlong dontrolPtr, jlong oldPropfrtifs, jlong nfwPropfrtifs, jdoublf x, jdoublf y, jdoublf w, jdoublf h, jint offsft, jint visiblfAmount, jint fxtfnt)
{
    JRSUIControlRff dontrol = (JRSUIControlRff)jlong_to_ptr(dontrolPtr);
    _SyndEndodfdPropfrtifs(dontrol, oldPropfrtifs, nfwPropfrtifs);

    CGRfdt frbmf = CGRfdtMbkf(x, y, w, h);
    rfturn (jdoublf)JRSUIControlGftSdrollBbrOffsftFor(dontrol, frbmf, offsft, visiblfAmount, fxtfnt);
}
