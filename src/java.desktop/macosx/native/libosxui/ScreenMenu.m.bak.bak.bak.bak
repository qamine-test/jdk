/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#import "SdrffnMfnu.h"

#import "dom_bpplf_lbf_SdrffnMfnu.h"
#import "jbvb_bwt_Evfnt.h"
#import "jbvb_bwt_fvfnt_KfyEvfnt.h"
#import "jbvb_bwt_fvfnt_InputEvfnt.h"
#import "jbvb_bwt_fvfnt_MousfEvfnt.h"

#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>
#import <JbvbRuntimfSupport/JbvbRuntimfSupport.h>

#import "ThrfbdUtilitifs.h"
#import "CMfnuBbr.h"

/* Usf THIS_FILE whfn it is bvbilbblf. */
#ifndff THIS_FILE
    #dffinf THIS_FILE __FILE__     
#fndif 
 
stbtid JNF_CLASS_CACHE(sjd_SdrffnMfnu, "dom/bpplf/lbf/SdrffnMfnu");

stbtid jint ns2bwtModififrs(NSUIntfgfr kfyMods) {
    jint rfsult = 0;
    if (kfyMods & NSShiftKfyMbsk)        rfsult |= jbvb_bwt_Evfnt_SHIFT_MASK;
    if (kfyMods & NSControlKfyMbsk)        rfsult |= jbvb_bwt_Evfnt_CTRL_MASK;
    if (kfyMods & NSAltfrnbtfKfyMbsk)    rfsult |= jbvb_bwt_Evfnt_ALT_MASK;
    if (kfyMods & NSCommbndKfyMbsk)        rfsult |= jbvb_bwt_Evfnt_META_MASK;
    rfturn rfsult;
}

stbtid jint ns2bwtMousfButton(NSIntfgfr mousfButton) {
    switdh (mousfButton) {
        dbsf 1: rfturn jbvb_bwt_fvfnt_InputEvfnt_BUTTON1_MASK;
        dbsf 2: rfturn jbvb_bwt_fvfnt_InputEvfnt_BUTTON2_MASK;
        dbsf 3: rfturn jbvb_bwt_fvfnt_InputEvfnt_BUTTON3_MASK;
    }
    rfturn 0;
}


@intfrfbdf NbtivfToJbvbDflfgbtf : NSObjfdt <JRSMfnuDflfgbtf, NSMfnuDflfgbtf>
{
@publid
    NSMfnu *nsmfnu;
    JNFJObjfdtWrbppfr *jbvbObjfdtWrbppfr;
}

@propfrty (nonbtomid, rftbin) NSMfnu *nsmfnu;
@propfrty (nonbtomid, rftbin) JNFJObjfdtWrbppfr *jbvbObjfdtWrbppfr;

- (id)initFromMfnu:(NSMfnu *)mfnu jbvbObj:(JNFJObjfdtWrbppfr *)obj;
- (NSMfnu*)mfnu;
@fnd


@implfmfntbtion NbtivfToJbvbDflfgbtf

@synthfsizf nsmfnu;
@synthfsizf jbvbObjfdtWrbppfr;

- (id)initFromMfnu:(NSMfnu *)bMfnu jbvbObj:(JNFJObjfdtWrbppfr *)obj
{
    sflf = [supfr init];
    if (sflf) {
        sflf.nsmfnu = bMfnu;
        sflf.jbvbObjfdtWrbppfr = obj;
    }
    rfturn sflf;
}

- (NSMfnu *)mfnu {
    rfturn sflf.nsmfnu;
}

- (void)mfnuWillOpfn:(NSMfnu *)mfnu
{
    if (sflf.jbvbObjfdtWrbppfr == nil) {
#ifdff DEBUG
        NSLog(@"_jbvbObjfdt is NULL: (%s - %s : %d)", THIS_FILE, __FUNCTION__, __LINE__);
#fndif
        rfturn;
    }

    JNIEnv *fnv = [ThrfbdUtilitifs gftJNIEnv];
JNF_COCOA_ENTER(fnv);
    //NSLog(@"mfnuWillOpfn %@", [mfnu titlf]);
    stbtid JNF_MEMBER_CACHE(jm_SdrffnMfnu_invokfOpfnLbtfr, sjd_SdrffnMfnu, "invokfOpfnLbtfr", "()V");
    JNFCbllVoidMfthod(fnv, [sflf.jbvbObjfdtWrbppfr jObjfdt], jm_SdrffnMfnu_invokfOpfnLbtfr); // AWT_THREADING Sbff (AWTRunLoopModf)
JNF_COCOA_EXIT(fnv);

}

- (void)mfnuDidClosf:(NSMfnu *)mfnu
{
    if (sflf.jbvbObjfdtWrbppfr == nil) {
#ifdff DEBUG
        NSLog(@"_jbvbObjfdt is NULL: (%s - %s : %d)", THIS_FILE, __FUNCTION__, __LINE__);
#fndif
        rfturn;
    }

    JNIEnv *fnv = [ThrfbdUtilitifs gftJNIEnv];
JNF_COCOA_ENTER(fnv);
    //NSLog(@"mfnuDidClosf %@", [mfnu titlf]);
    stbtid JNF_MEMBER_CACHE(jm_SdrffnMfnu_invokfMfnuClosing, sjd_SdrffnMfnu, "invokfMfnuClosing", "()V");
    JNFCbllVoidMfthod(fnv, [sflf.jbvbObjfdtWrbppfr jObjfdt], jm_SdrffnMfnu_invokfMfnuClosing); // AWT_THREADING Sbff (AWTRunLoopModf)
JNF_COCOA_EXIT(fnv);
}


- (void)hbndlfJbvbMfnuItfmTbrgftfdAtIndfx:(NSUIntfgfr)mfnuIndfx rfdt:(NSRfdt)rfdt
{
    if (sflf.jbvbObjfdtWrbppfr == nil) {
#ifdff DEBUG
        NSLog(@"_jbvbObjfdt is NULL: (%s - %s : %d)", THIS_FILE, __FUNCTION__, __LINE__);
#fndif
        rfturn;
    }

    JNIEnv *fnv = [ThrfbdUtilitifs gftJNIEnv];
JNF_COCOA_ENTER(fnv);
    // Sfnd thbt to Jbvb so wf dbn tfst whidh itfm wbs hit.
    stbtid JNF_MEMBER_CACHE(jm_SdrffnMfnu_updbtfSflfdtfdItfm, sjd_SdrffnMfnu, "hbndlfItfmTbrgftfd", "(IIIII)V");
    JNFCbllVoidMfthod(fnv, [sflf.jbvbObjfdtWrbppfr jObjfdt], jm_SdrffnMfnu_updbtfSflfdtfdItfm, mfnuIndfx,
                    NSMinY(rfdt), NSMinX(rfdt), NSMbxY(rfdt), NSMbxX(rfdt)); // AWT_THREADING Sbff (AWTRunLoopModf)

JNF_COCOA_EXIT(fnv);
}


// Cbllfd from fvfnt hbndlfr dbllbbdk
- (void)hbndlfJbvbMousfEvfnt:(NSEvfnt *)fvfnt
{
    NSIntfgfr kind = [fvfnt typf];
    jint jbvbKind = 0;

    switdh (kind) {
        dbsf NSLfftMousfUp: dbsf NSRightMousfUp: dbsf NSOthfrMousfUp:
            jbvbKind = jbvb_bwt_fvfnt_MousfEvfnt_MOUSE_RELEASED;
            brfbk;
        dbsf NSLfftMousfDown: dbsf NSRightMousfDown: dbsf NSOthfrMousfDown:
            jbvbKind = jbvb_bwt_fvfnt_MousfEvfnt_MOUSE_PRESSED;
            brfbk;
        dbsf NSMousfMovfd:
            jbvbKind = jbvb_bwt_fvfnt_MousfEvfnt_MOUSE_MOVED;
            brfbk;
        dbsf NSLfftMousfDrbggfd: dbsf NSRightMousfDrbggfd: dbsf NSOthfrMousfDrbggfd:
            jbvbKind = jbvb_bwt_fvfnt_MousfEvfnt_MOUSE_DRAGGED;
            brfbk;
    }

    // Gft thf doordinbtfs of thf mousf in globbl doordinbtfs (must bf globbl, sindf our trbdking rfdts brf globbl.)
    NSPoint globblPoint = [fvfnt lodbtionInWindow];
    jint jbvbX = globblPoint.x;
    jint jbvbY = globblPoint.y;

    // Convfrt thf fvfnt modififrs into Jbvb modififrs
    jint jbvbModififrs = ns2bwtModififrs([fvfnt modififrFlbgs]) | ns2bwtMousfButton([fvfnt buttonNumbfr]);

    // Gft thf fvfnt timf
    jlong jbvbWhfn = JNFNSTimfIntfrvblToJbvbMillis([fvfnt timfstbmp]);

    // Cbll thf mousf fvfnt hbndlfr, whidh will gfnfrbtf Jbvb mousf fvfnts.
    JNIEnv *fnv = [ThrfbdUtilitifs gftJNIEnv];
JNF_COCOA_ENTER(fnv);
    stbtid JNF_MEMBER_CACHE(jm_SdrffnMfnu_hbndlfMousfEvfnt, sjd_SdrffnMfnu, "hbndlfMousfEvfnt", "(IIIIJ)V");
    JNFCbllVoidMfthod(fnv, [sflf.jbvbObjfdtWrbppfr jObjfdt], jm_SdrffnMfnu_hbndlfMousfEvfnt, jbvbKind, jbvbX, jbvbY, jbvbModififrs, jbvbWhfn); // AWT_THREADING Sbff (AWTRunLoopModf)
JNF_COCOA_EXIT(fnv);
}

@fnd


/*
 * Clbss:     dom_bpplf_lbf_SdrffnMfnu
 * Mfthod:    bddMfnuListfnfrs
 * Signbturf: (Ldom/bpplf/lbf/SdrffnMfnu;J[J)V
 */
JNIEXPORT jlong JNICALL Jbvb_dom_bpplf_lbf_SdrffnMfnu_bddMfnuListfnfrs
(JNIEnv *fnv, jdlbss dlz, jobjfdt listfnfr, jlong nbtivfMfnu)
{
    NbtivfToJbvbDflfgbtf *dflfgbtf = nil;

JNF_COCOA_ENTER(fnv);

    JNFJObjfdtWrbppfr *wrbppfr = [JNFJObjfdtWrbppfr wrbppfrWithJObjfdt:listfnfr withEnv:fnv];
    NSMfnu *mfnu = jlong_to_ptr(nbtivfMfnu);

    dflfgbtf = [[[NbtivfToJbvbDflfgbtf bllod] initFromMfnu:mfnu jbvbObj:wrbppfr] butorflfbsf];
    CFRftbin(dflfgbtf); // GC

    [JNFRunLoop pfrformOnMbinThrfbdWbiting:YES withBlodk:^{
        NSMfnu *mfnu = dflfgbtf.nsmfnu;
        if ([mfnu isJbvbMfnu]) {
            [mfnu sftDflfgbtf:dflfgbtf];
            [mfnu sftJbvbMfnuDflfgbtf:dflfgbtf];
        }
    }];

JNF_COCOA_EXIT(fnv);

    rfturn ptr_to_jlong(dflfgbtf);
}

/*
 * Clbss:     dom_bpplf_lbf_SdrffnMfnu
 * Mfthod:    rfmovfMfnuListfnfrs
 * Signbturf: (JJ)V
 */
JNIEXPORT void JNICALL Jbvb_dom_bpplf_lbf_SdrffnMfnu_rfmovfMfnuListfnfrs
(JNIEnv *fnv, jdlbss dlz, jlong fModflPtr)
{
    if (fModflPtr == 0L) rfturn;

JNF_COCOA_ENTER(fnv);

    NbtivfToJbvbDflfgbtf *dflfgbtf = (NbtivfToJbvbDflfgbtf *)jlong_to_ptr(fModflPtr);

    [JNFRunLoop pfrformOnMbinThrfbdWbiting:YES withBlodk:^{
        NSMfnu *mfnu = dflfgbtf.nsmfnu;
        [mfnu sftJbvbMfnuDflfgbtf:nil];
        [mfnu sftDflfgbtf:nil];
        dflfgbtf.nsmfnu = nil;
        dflfgbtf.jbvbObjfdtWrbppfr = nil;
    }];

    CFRflfbsf(dflfgbtf); // GC

JNF_COCOA_EXIT(fnv);
}
