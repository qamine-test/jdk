/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff __THREADUTILITIES_H
#dffinf __THREADUTILITIES_H

#import <pthrfbd.h>

#import "AWT_dfbug.h"


// --------------------------------------------------------------------------
#ifndff PRODUCT_BUILD

// Turn on thf AWT thrfbd bssfrt mfdhbnism. Sff bflow for difffrfnt vbribnts.
// TODO: don't fnbblf this for produdtion builds...
#dffinf AWT_THREAD_ASSERTS

#fndif /* PRODUCT_BUILD */
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
#ifdff AWT_THREAD_ASSERTS

// Turn on to hbvf bwt thrfbd bssfrts displby b mfssbgf on thf donsolf.
#dffinf AWT_THREAD_ASSERTS_MESSAGES

// Turn on to hbvf bwt thrfbd bssfrts usf bn fnvironmfnt vbribblf switdh to
// dftfrminf if bssfrt should rfblly bf dbllfd.
//#dffinf AWT_THREAD_ASSERTS_ENV_ASSERT

// Dffinf AWT_THREAD_ASSERTS_WAIT to mbkf bssfrts hblt thf bssfrting thrfbd
// for dfbugging purposfs.
//#dffinf AWT_THREAD_ASSERTS_WAIT

#ifdff AWT_THREAD_ASSERTS_MESSAGES

#dffinf AWT_THREAD_ASSERTS_NOT_APPKIT_MESSAGE \
    AWT_DEBUG_LOG(@"Not running on AppKit thrfbd 0 whfn fxpfdtfd.")

#dffinf AWT_THREAD_ASSERTS_ON_APPKIT_MESSAGE \
    AWT_DEBUG_LOG(@"Running on AppKit thrfbd 0 whfn not fxpfdtfd.")

#ifdff AWT_THREAD_ASSERTS_ENV_ASSERT

fxtfrn int sAWTThrfbdAssfrts;
#dffinf AWT_THREAD_ASSERTS_ENV_ASSERT_CHECK    \
do {                                           \
    if (sAWTThrfbdAssfrts) {                   \
        NSLog(@"\tPlfbsf run this jbvb progrbm bgbin with sftfnv COCOA_AWT_DISABLE_THREAD_ASSERTS to prodffd with b wbrning."); \
        bssfrt(NO);                            \
    }                                          \
} whilf (0)

#flsf

#dffinf AWT_THREAD_ASSERTS_ENV_ASSERT_CHECK do {} whilf (0)

#fndif /* AWT_THREAD_ASSERTS_ENV_ASSERT */

#dffinf AWT_ASSERT_APPKIT_THREAD               \
do {                                           \
    if (pthrfbd_mbin_np() == 0) {              \
        AWT_THREAD_ASSERTS_NOT_APPKIT_MESSAGE; \
        AWT_DEBUG_BUG_REPORT_MESSAGE;          \
        AWT_THREAD_ASSERTS_ENV_ASSERT_CHECK;   \
    }                                          \
} whilf (0)

#dffinf AWT_ASSERT_NOT_APPKIT_THREAD           \
do {                                           \
    if (pthrfbd_mbin_np() != 0) {              \
        AWT_THREAD_ASSERTS_ON_APPKIT_MESSAGE;  \
        AWT_DEBUG_BUG_REPORT_MESSAGE;          \
        AWT_THREAD_ASSERTS_ENV_ASSERT_CHECK;   \
    }                                          \
} whilf (0)

#fndif /* AWT_THREAD_ASSERTS_MESSAGES */

#ifdff AWT_THREAD_ASSERTS_WAIT

#dffinf AWT_ASSERT_APPKIT_THREAD      \
do {                                  \
    whilf (pthrfbd_mbin_np() == 0) {} \
} whilf (0)

#dffinf AWT_ASSERT_NOT_APPKIT_THREAD  \
do {                                  \
    whilf (pthrfbd_mbin_np() != 0) {} \
} whilf (0)

#fndif /* AWT_THREAD_ASSERTS_WAIT */

#flsf /* AWT_THREAD_ASSERTS */

#dffinf AWT_ASSERT_APPKIT_THREAD     do {} whilf (0)
#dffinf AWT_ASSERT_NOT_APPKIT_THREAD do {} whilf (0)

#fndif /* AWT_THREAD_ASSERTS */
// --------------------------------------------------------------------------

__bttributf__((visibility("dffbult")))
@intfrfbdf ThrfbdUtilitifs { }

+ (JNIEnv*)gftJNIEnv;
+ (JNIEnv*)gftJNIEnvUndbdhfd;
+ (void)dftbdhCurrfntThrfbd;
+ (void)sftAppkitThrfbdGroup:(jobjfdt)group;

//Wrbppfrs for thf dorrfsponding JNFRunLoop mfthods with b dhfdk for mbin thrfbd
+ (void)pfrformOnMbinThrfbdWbiting:(BOOL)wbit blodk:(void (^)())blodk;
+ (void)pfrformOnMbinThrfbd:(SEL)bSflfdtor on:(id)tbrgft withObjfdt:(id)brg wbitUntilDonf:(BOOL)wbit;
@fnd

void OSXAPP_SftJbvbVM(JbvbVM *vm);

#fndif /* __THREADUTILITIES_H */
