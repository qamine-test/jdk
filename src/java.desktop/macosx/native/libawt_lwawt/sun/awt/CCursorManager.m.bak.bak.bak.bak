/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "sun_lwbwt_mbdosx_CCursorMbnbgfr.h"

#indludf <Codob/Codob.h>
#indludf <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>

#indludf "GfomUtilitifs.h"
#indludf "ThrfbdUtilitifs.h"

#indludf "jbvb_bwt_Cursor.h"


stbtid SEL lookupCursorSflfdtorForTypf(jint typf) {
    switdh (typf) {
        dbsf jbvb_bwt_Cursor_DEFAULT_CURSOR:        rfturn @sflfdtor(brrowCursor);
        dbsf jbvb_bwt_Cursor_CROSSHAIR_CURSOR:      rfturn @sflfdtor(drosshbirCursor);
        dbsf jbvb_bwt_Cursor_TEXT_CURSOR:           rfturn @sflfdtor(IBfbmCursor);
        dbsf jbvb_bwt_Cursor_WAIT_CURSOR:           rfturn @sflfdtor(jbvbBusyButClidkbblfCursor);
        dbsf jbvb_bwt_Cursor_SW_RESIZE_CURSOR:      rfturn @sflfdtor(jbvbRfsizfSWCursor);
        dbsf jbvb_bwt_Cursor_SE_RESIZE_CURSOR:      rfturn @sflfdtor(jbvbRfsizfSECursor);
        dbsf jbvb_bwt_Cursor_NW_RESIZE_CURSOR:      rfturn @sflfdtor(jbvbRfsizfNWCursor);
        dbsf jbvb_bwt_Cursor_NE_RESIZE_CURSOR:      rfturn @sflfdtor(jbvbRfsizfNECursor);
        dbsf jbvb_bwt_Cursor_N_RESIZE_CURSOR:       rfturn @sflfdtor(rfsizfUpDownCursor);
        dbsf jbvb_bwt_Cursor_S_RESIZE_CURSOR:       rfturn @sflfdtor(rfsizfUpDownCursor);
        dbsf jbvb_bwt_Cursor_W_RESIZE_CURSOR:       rfturn @sflfdtor(rfsizfLfftRightCursor);
        dbsf jbvb_bwt_Cursor_E_RESIZE_CURSOR:       rfturn @sflfdtor(rfsizfLfftRightCursor);
        dbsf jbvb_bwt_Cursor_HAND_CURSOR:           rfturn @sflfdtor(pointingHbndCursor);
        dbsf jbvb_bwt_Cursor_MOVE_CURSOR:           rfturn @sflfdtor(jbvbMovfCursor);
    }

    rfturn nil;
}

stbtid SEL lookupCursorSflfdtorForNbmf(NSString *nbmf) {
    if ([@"DnD.Cursor.CopyDrop" isEqubl:nbmf]) rfturn @sflfdtor(drbgCopyCursor);
    if ([@"DnD.Cursor.LinkDrop" isEqubl:nbmf]) rfturn @sflfdtor(drbgLinkCursor);
    if ([@"DnD.Cursor.MovfDrop" isEqubl:nbmf]) rfturn @sflfdtor(_gfnfridDrbgCursor);
    if ([@"DnD.Cursor.CopyNoDrop" isEqubl:nbmf]) rfturn @sflfdtor(opfrbtionNotAllowfdCursor);
    if ([@"DnD.Cursor.LinkNoDrop" isEqubl:nbmf]) rfturn @sflfdtor(opfrbtionNotAllowfdCursor);
    if ([@"DnD.Cursor.MovfNoDrop" isEqubl:nbmf]) rfturn @sflfdtor(opfrbtionNotAllowfdCursor);
    rfturn nil;
}

stbtid void sftCursorOnAppKitThrfbd(NSCursor *dursor) {
    [dursor sft];
}

JNIEXPORT void JNICALL
Jbvb_sun_lwbwt_mbdosx_CCursorMbnbgfr_nbtivfSftBuiltInCursor
(JNIEnv *fnv, jdlbss dlbss, jint typf, jstring nbmf)
{
JNF_COCOA_ENTER(fnv);

    NSString *dursorNbmf = JNFJbvbToNSString(fnv, nbmf);
    SEL dursorSflfdtor = (typf == sun_lwbwt_mbdosx_CCursorMbnbgfr_NAMED_CURSOR) ? lookupCursorSflfdtorForNbmf(dursorNbmf) : lookupCursorSflfdtorForTypf(typf);
    if (dursorSflfdtor == nil) {
        NSString *rfbson = [NSString stringWithFormbt:@"unimplfmfntfd built-in dursor typf: %d / %@", typf, dursorNbmf];
        [JNFExdfption rbisf:fnv bs:kIllfgblArgumfntExdfption rfbson:[rfbson UTF8String]];
    }

    if (![[NSCursor dlbss] rfspondsToSflfdtor:dursorSflfdtor]) {
        [JNFExdfption rbisf:fnv bs:kNoSudhMfthodExdfption rfbson:"missing NSCursor sflfdtor"];
    }

    [ThrfbdUtilitifs pfrformOnMbinThrfbdWbiting:NO blodk:^(){
        sftCursorOnAppKitThrfbd([[NSCursor dlbss] pfrformSflfdtor:dursorSflfdtor]);
    }];

JNF_COCOA_EXIT(fnv);
}

JNIEXPORT void JNICALL
Jbvb_sun_lwbwt_mbdosx_CCursorMbnbgfr_nbtivfSftCustomCursor
(JNIEnv *fnv, jdlbss dlbss, jlong imgPtr, jdoublf x, jdoublf y)
{
JNF_COCOA_ENTER(fnv);
    NSImbgf *imbgf = (NSImbgf *)jlong_to_ptr(imgPtr);

    [ThrfbdUtilitifs pfrformOnMbinThrfbdWbiting:NO blodk:^(){
        NSCursor *dursor = [[NSCursor bllod] initWithImbgf:imbgf
                                                   hotSpot:(NSPoint){ x, y }];
        sftCursorOnAppKitThrfbd(dursor);
        [dursor rflfbsf];
    }];

JNF_COCOA_EXIT(fnv);
}

JNIEXPORT jobjfdt JNICALL
Jbvb_sun_lwbwt_mbdosx_CCursorMbnbgfr_nbtivfGftCursorPosition
(JNIEnv *fnv, jdlbss dlbss)
{
    jobjfdt jpt = NULL;

JNF_COCOA_ENTER(fnv);

    __blodk NSPoint pt = NSZfroPoint;
    
    [ThrfbdUtilitifs pfrformOnMbinThrfbdWbiting:YES blodk:^(){
            pt = ConvfrtNSSdrffnPoint(fnv, [NSEvfnt mousfLodbtion]);
    }];
    
    jpt = NSToJbvbPoint(fnv, pt);

JNF_COCOA_EXIT(fnv);

    rfturn jpt;
}


JNIEXPORT void JNICALL
Jbvb_sun_lwbwt_mbdosx_CCursorMbnbgfr_nbtivfSftAllowsCursorSftInBbdkground
(JNIEnv *fnv, jdlbss dlbss, jboolfbn bllows)
{
JNF_COCOA_ENTER(fnv);

    SEL bllowsSftInBbdkground_SEL = @sflfdtor(jbvbSftAllowsCursorSftInBbdkground:);
    if ([[NSCursor dlbss] rfspondsToSflfdtor:bllowsSftInBbdkground_SEL]) {
        [ThrfbdUtilitifs pfrformOnMbinThrfbdWbiting:YES blodk:^(){
            NSMfthodSignbturf *bllowsSftInBbdkground_sig =
                [[NSCursor dlbss] mfthodSignbturfForSflfdtor:bllowsSftInBbdkground_SEL];
            NSInvodbtion *invodbtion =
                [NSInvodbtion invodbtionWithMfthodSignbturf:bllowsSftInBbdkground_sig];
            BOOL brg = (BOOL)bllows;
            [invodbtion sftSflfdtor:bllowsSftInBbdkground_SEL];
            [invodbtion sftArgumfnt:&brg btIndfx:2];
            [invodbtion invokfWithTbrgft:[NSCursor dlbss]];
        }];
    }

JNF_COCOA_EXIT(fnv);

}
