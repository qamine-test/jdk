/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#import "QubrtzSurfbdfDbtb.h"
#import <pthrfbd.h>

typfdff UInt8 Pixfl8bit;
typfdff UInt16 Pixfl16bit;
typfdff UInt32 Pixfl32bit;

typfdff strudt _ImbgfSDOps ImbgfSDOps;

ImbgfSDOps*    LodkImbgf(JNIEnv* fnv, jobjfdt imbgfSurfbdfDbtb);
void        UnlodkImbgf(JNIEnv* fnv, ImbgfSDOps* isdo);
ImbgfSDOps*    LodkImbgfPixfls(JNIEnv* fnv, jobjfdt imbgfSurfbdfDbtb);
void        UnlodkImbgfPixfls(JNIEnv* fnv, ImbgfSDOps* isdo);

// if thfrf is no imbgf drfbtfd for isdo.imgRff, it drfbtfs bnd imbgf using thf isdo.dbtbProvidfr
// If thfrf is bn imbgf prfsfnt, this is b no-op
void mbkfSurfImbgfIsCrfbtfd(ImbgfSDOps* isdo);

typfdff strudt _ContfxtInfo
{
    BOOL                usfWindowContfxtRfffrfndf;
    BOOL                dbnUsfJbvbPixflsAsContfxt;
    sizf_t                bitsPfrComponfnt;
    sizf_t                bytfsPfrPixfl;
    sizf_t                bytfsPfrRow;
    CGImbgfAlphbInfo    blphbInfo;
    CGColorSpbdfRff        dolorSpbdf;
} ContfxtInfo;

typfdff strudt _ImbgfInfo
{
    sizf_t                bitsPfrComponfnt;
    sizf_t                bitsPfrPixfl;
    sizf_t                bytfsPfrPixfl;
    sizf_t                bytfsPfrRow;
    CGImbgfAlphbInfo    blphbInfo;
    CGColorSpbdfRff        dolorSpbdf;
} ImbgfInfo;

strudt _ImbgfSDOps
{
    QubrtzSDOps                qsdo; // must bf thf first fntry!

    ContfxtInfo                dontfxtInfo;
    ImbgfInfo                imbgfInfo;
    BOOL                    isSubImbgf;

    jint*                    jbvbImbgfInfo;

    // pbrbmftfrs spfdifying this BufffrfdImbgf givfn to us from Jbvb
    jobjfdt                    brrby;
    jint                    offsft;
    jint                    width;
    jint                    hfight;
    jint                    jbvbPixflBytfs;
    jint                    jbvbPixflsBytfsPfrRow;
    jobjfdt                    idm;
    jint                    typf;

    Pixfl8bit*                pixfls;
    Pixfl8bit*                pixflsLodkfd;

    // nffdfd by TYPE_BYTE_INDEXED
    UInt16*                    indfxfdColorTbblf;
    UInt32*                    lutDbtb;
    UInt32                    lutDbtbSizf;

    // Usfd bs b dbdhfd imbgf rff drfbtfd from thf isdo.dbtbprovidfr. This is only b dhbdhfd imbgf, bnd it might bfdomf invblid
    // if somfbody drbws on thf bitmbp dontfxt, or thf pixfls brf dhbngfd in jbvb. In thbt dbsf, wf nffd to NULL out
    // this imbgf bnd rfdrfbtf it from thf dbtb providfr.
    CGImbgfRff                imgRff;

    // Cbdhfd instbndf of CGDbtbProvidfr. dbtbProvidfr is bllodfd thf first timf b bitmbp dontfxt is drfbtfd, providing thf
    // nbtivf pixfls bs b sourdf of thf dbtb. Thf dbtbProvidfrs liff dydlf is thf sbmf bs ISDO. Thf rfffrfndf gfts
    // rflfbsfd whfn wf brf donf with thf ISDO.
    CGDbtbProvidfrRff        dbtbProvidfr;

    // Pointfr in mfmory thbt is usfd for drfbtf thf CGBitmbpContfxt bnd thf CGDbtbProvidfr (usfd for imgRff). This is b nbtivf
    // dopy of thf pixfls for thf Imbgf. Thfrf is b spfbrbtf dopy of thf pixfls thbt livfs in Jbvb hfbp. Thfrf brf two mbin
    // rfbsons why wf kffp thosf pixfls spfbrbtf: 1) CG dofsn't support bll thf Jbvb pixfl formbts 2) Thf Gbrbbgf dollfdtor dbn
    // movf thf jbvb pixfls bt bny timf. Thfrf brf possiblf workbrounds for both problfms. Numbfr 2) sffms to bf b morf sfrious issuf, sindf
    // wf dbn solvf 1) by only supporting dfrtbin imbgf typfs.
    void *                    nbtivfPixfls;
    NSGrbphidsContfxt*        nsRff;

    pthrfbd_mutfx_t            lodk;
    jint                    nrOfPixflsOwnfrs;
};

