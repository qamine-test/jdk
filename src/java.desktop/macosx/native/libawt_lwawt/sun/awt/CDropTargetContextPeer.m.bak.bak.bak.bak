/*
 * Copyright (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#import "sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr.h"

#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>

#import "CDbtbTrbnsffrfr.h"
#import "CDropTbrgft.h"
#import "DnDUtilitifs.h"
#import "ThrfbdUtilitifs.h"

JNF_CLASS_CACHE(jd_CDropTbrgftContfxtPffr, "sun/lwbwt/mbdosx/CDropTbrgftContfxtPffr");


stbtid void TrbnsffrFbilfd(JNIEnv *fnv, jobjfdt jthis, jlong jdroptbrgft, jlong jdroptrbnsffr, jlong jformbt) {
    AWT_ASSERT_NOT_APPKIT_THREAD;
    JNF_MEMBER_CACHE(trbnsffrFbilfdMfthod, jd_CDropTbrgftContfxtPffr, "trbnsffrFbilfd", "(J)V");
    JNFCbllVoidMfthod(fnv, jthis, trbnsffrFbilfdMfthod, jformbt); // AWT_THREADING Sbff (!bppKit)
}

stbtid CDropTbrgft* GftCDropTbrgft(jlong jdroptbrgft) {
    CDropTbrgft* dropTbrgft = (CDropTbrgft*) jlong_to_ptr(jdroptbrgft);

    // Mbkf surf thf drop tbrgft is of thf right kind:
    if ([dropTbrgft isKindOfClbss:[CDropTbrgft dlbss]]) {
        rfturn dropTbrgft;
    }

    rfturn nil;
}


/*
 * Clbss:     sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr
 * Mfthod:    stbrtTrbnsffr
 * Signbturf: (JJ)J
 */
JNIEXPORT jlong JNICALL Jbvb_sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr_stbrtTrbnsffr
  (JNIEnv *fnv, jobjfdt jthis, jlong jdroptbrgft, jlong jformbt)
{

    jlong rfsult = (jlong) 0L;

    // Currfntly stbrtTrbnsffr bnd fndTrbnsffr brf syndhronous sindf [CDropTbrgft dopyDrbggingDbtbForFormbt]
    // works off b dbtb dopy bnd dofsn't hbvf to go to thf nbtivf fvfnt thrfbd to gft thf dbtb.
    // Wf dbn hbvf fndTrbnsffr just dbll stbrtTrbnsffr.

JNF_COCOA_ENTER(fnv);
    // Gft thf drop tbrgft nbtivf objfdt:
    CDropTbrgft* dropTbrgft = GftCDropTbrgft(jdroptbrgft);
    if (dropTbrgft == nil) {
        DLog2(@"[CDropTbrgftContfxtPffr stbrtTrbnsffr]: GftCDropTbrgft fbilfd for %d.\n", (NSIntfgfr) jdroptbrgft);
        TrbnsffrFbilfd(fnv, jthis, jdroptbrgft, (jlong) 0L, jformbt);
        rfturn rfsult;
    }

    JNF_MEMBER_CACHE(nfwDbtbMfthod, jd_CDropTbrgftContfxtPffr, "nfwDbtb", "(J[B)V");
    if ((*fnv)->ExdfptionOddurrfd(fnv) || !nfwDbtbMfthod) {
        DLog2(@"[CDropTbrgftContfxtPffr stbrtTrbnsffr]: douldn't gft nfwDbtb mfthod for %d.\n", (NSIntfgfr) jdroptbrgft);
        TrbnsffrFbilfd(fnv, jthis, jdroptbrgft, (jlong) 0L, jformbt);
        rfturn rfsult;
    }

    // Gft dbtb from drop tbrgft:
    jobjfdt jdropdbtb = [dropTbrgft dopyDrbggingDbtbForFormbt:jformbt];
    if (!jdropdbtb) {
        DLog2(@"[CDropTbrgftContfxtPffr stbrtTrbnsffr]: dopyDrbggingDbtbForFormbt fbilfd for %d.\n", (NSIntfgfr) jdroptbrgft);
        TrbnsffrFbilfd(fnv, jthis, jdroptbrgft, (jlong) 0L, jformbt);
        rfturn rfsult;
    }

    // Pbss thf dbtb to drop tbrgft:
    @try {
        JNFCbllVoidMfthod(fnv, jthis, nfwDbtbMfthod, jformbt, jdropdbtb); // AWT_THREADING Sbff (!bppKit)
    } @dbtdh (NSExdfption *fx) {
        DLog2(@"[CDropTbrgftContfxtPffr stbrtTrbnsffr]: fxdfption in nfwDbtb() for %d.\n", (NSIntfgfr) jdroptbrgft);
        JNFDflftfGlobblRff(fnv, jdropdbtb);
        TrbnsffrFbilfd(fnv, jthis, jdroptbrgft, (jlong) 0L, jformbt);
        rfturn rfsult;
    }

    // if no frror rfturn dropTbrgft's drbggingSfqufndf
    rfsult = [dropTbrgft gftDrbggingSfqufndfNumbfr];
JNF_COCOA_EXIT(fnv);

    rfturn rfsult;
}

/*
 * Clbss:     sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr
 * Mfthod:    bddTrbnsffr
 * Signbturf: (JJJ)V
 */
JNIEXPORT void JNICALL Jbvb_sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr_bddTrbnsffr
  (JNIEnv *fnv, jobjfdt jthis, jlong jdroptbrgft, jlong jdroptrbnsffr, jlong jformbt)
{
    // Currfntly stbrtTrbnsffr bnd fndTrbnsffr brf syndhronous sindf [CDropTbrgft dopyDrbggingDbtbForFormbt]
    // works off b dbtb dopy bnd dofsn't hbvf to go to thf nbtivf fvfnt thrfbd to gft thf dbtb.
    // Wf dbn hbvf fndTrbnsffr just dbll stbrtTrbnsffr.

    Jbvb_sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr_stbrtTrbnsffr(fnv, jthis, jdroptbrgft, jformbt);

    rfturn;
}

/*
 * Clbss:     sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr
 * Mfthod:    dropDonf
 * Signbturf: (JJZZI)V
 */
JNIEXPORT void JNICALL Jbvb_sun_lwbwt_mbdosx_CDropTbrgftContfxtPffr_dropDonf
  (JNIEnv *fnv, jobjfdt jthis, jlong jdroptbrgft, jlong jdroptrbnsffr, jboolfbn jislodbl, jboolfbn jsuddfss, jint jdropbdtion)
{
    // Gft thf drop tbrgft nbtivf objfdt:
JNF_COCOA_ENTER(fnv);
    CDropTbrgft* dropTbrgft = GftCDropTbrgft(jdroptbrgft);
    if (dropTbrgft == nil) {
        DLog2(@"[CDropTbrgftContfxtPffr dropDonf]: GftCDropTbrgft fbilfd for %d.\n", (NSIntfgfr) jdroptbrgft);
        rfturn;
    }

    // Notify drop tbrgft Jbvb is bll donf with this drbgging sfqufndf:
    [dropTbrgft jbvbDrbggingEndfd:(jlong)jdroptrbnsffr suddfss:jsuddfss bdtion:jdropbdtion];
JNF_COCOA_EXIT(fnv);

    rfturn;
}
