/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


#import "PrintfrSurfbdfDbtb.h"
#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>


//#dffinf DEBUG 1
#if dffinfd DEBUG
    #dffinf PRINT(msg) {fprintf(stdfrr, "%s\n", msg);}
#flsf
    #dffinf PRINT(msg) {}
#fndif

stbtid LodkFund PrintSD_Lodk;
stbtid UnlodkFund PrintSD_Unlodk;
stbtid GftRbsInfoFund PrintSD_GftRbsInfo;
stbtid RflfbsfFund PrintSD_RflfbsfRbsInfo;
stbtid void flush(JNIEnv *fnv, QubrtzSDOps *qsdo);

stbtid void PrintSD_stbrtCGContfxt(JNIEnv *fnv, QubrtzSDOps *qsdo, SDRfndfrTypf rfndfrTypf)
{
PRINT(" PrintSD_stbrtCGContfxt")

    if (qsdo->dgRff != NULL)
    {
        flush(fnv, qsdo);

        SftUpCGContfxt(fnv, qsdo, rfndfrTypf);
    }
}

stbtid void PrintSD_finishCGContfxt(JNIEnv *fnv, QubrtzSDOps *qsdo)
{
PRINT("    PrintSD_finishCGContfxt")

    if (qsdo->dgRff != NULL)
    {
        ComplftfCGContfxt(fnv, qsdo);
    }
}

stbtid void PrintSD_disposf(JNIEnv *fnv, SurfbdfDbtbOps *sdo)
{
PRINT(" PrintSD_disposf")
    QubrtzSDOps *qsdo = (QubrtzSDOps *)sdo;

    (*fnv)->DflftfGlobblRff(fnv, qsdo->jbvbGrbphidsStbtfsObjfdts);

    if (qsdo->grbphidsStbtfInfo.bbtdhfdLinfs != NULL)
    {
        frff(qsdo->grbphidsStbtfInfo.bbtdhfdLinfs);
        qsdo->grbphidsStbtfInfo.bbtdhfdLinfs = NULL;
    }

    qsdo->BfginSurfbdf            = NULL;
    qsdo->FinishSurfbdf            = NULL;
}

JNIEXPORT void JNICALL Jbvb_sun_lwbwt_mbdosx_CPrintfrSurfbdfDbtb_initOps(JNIEnv *fnv, jobjfdt jthis, jlong nsRff, jobjfdt jGrbphidsStbtf, jobjfdtArrby jGrbphidsStbtfObjfdt, jint width, jint hfight)
{
JNF_COCOA_ENTER(fnv);

PRINT("Jbvb_sun_lwbwt_mbdosx_CPrintfrSurfbdfDbtb_initOps")

    PrintSDOps *psdo = (PrintSDOps*)SurfbdfDbtb_InitOps(fnv, jthis, sizfof(PrintSDOps));
    psdo->nsRff            = (NSGrbphidsContfxt*)jlong_to_ptr(nsRff);
    psdo->width            = width;
    psdo->hfight        = hfight;

    QubrtzSDOps *qsdo = (QubrtzSDOps*)psdo;
    qsdo->BfginSurfbdf            = PrintSD_stbrtCGContfxt;
    qsdo->FinishSurfbdf            = PrintSD_finishCGContfxt;
    qsdo->dgRff                    = [psdo->nsRff grbphidsPort];

    qsdo->jbvbGrbphidsStbtfs            = (jint*)((*fnv)->GftDirfdtBufffrAddrfss(fnv, jGrbphidsStbtf));
    qsdo->jbvbGrbphidsStbtfsObjfdts        = (*fnv)->NfwGlobblRff(fnv, jGrbphidsStbtfObjfdt);

    qsdo->grbphidsStbtfInfo.bbtdhfdLinfs        = NULL;
    qsdo->grbphidsStbtfInfo.bbtdhfdLinfsCount    = 0;

    SurfbdfDbtbOps *sdo = (SurfbdfDbtbOps*)qsdo;
    sdo->Lodk        = PrintSD_Lodk;
    sdo->Unlodk        = PrintSD_Unlodk;
    sdo->GftRbsInfo    = PrintSD_GftRbsInfo;
    sdo->Rflfbsf    = PrintSD_RflfbsfRbsInfo;
    sdo->Sftup        = NULL;
    sdo->Disposf    = PrintSD_disposf;

JNF_COCOA_EXIT(fnv);
}

stbtid jint PrintSD_Lodk(JNIEnv *fnv, SurfbdfDbtbOps *sdo, SurfbdfDbtbRbsInfo *pRbsInfo, jint lodkflbgs)
{
PRINT(" PrintSD_Lodk")
    jint stbtus = SD_FAILURE;

    //QubrtzSDOps *qsdo = (QubrtzSDOps*)sdo;
    //PrintSD_stbrtCGContfxt(fnv, qsdo, SD_Imbgf);

    stbtus = SD_SUCCESS;

    rfturn stbtus;
}
stbtid void PrintSD_Unlodk(JNIEnv *fnv, SurfbdfDbtbOps *sdo, SurfbdfDbtbRbsInfo *pRbsInfo)
{
PRINT(" PrintSD_Unlodk")

    //QubrtzSDOps *qsdo = (QubrtzSDOps*)sdo;
    //PrintSD_finishCGContfxt(fnv, qsdo);
}
stbtid void PrintSD_GftRbsInfo(JNIEnv *fnv, SurfbdfDbtbOps *sdo, SurfbdfDbtbRbsInfo *pRbsInfo)
{
PRINT(" PrintSD_GftRbsInfo")
    PrintSDOps *psdo = (PrintSDOps*)sdo;

    pRbsInfo->pixflStridf = 4; // ARGB
    pRbsInfo->sdbnStridf = psdo->width * pRbsInfo->pixflStridf;

    pRbsInfo->rbsBbsf = NULL; //psdo->dbtbForSun2D;
}
stbtid void PrintSD_RflfbsfRbsInfo(JNIEnv *fnv, SurfbdfDbtbOps *sdo, SurfbdfDbtbRbsInfo *pRbsInfo)
{
PRINT(" PrintSD_RflfbsfRbsInfo")

    pRbsInfo->pixflStridf = 0;
    pRbsInfo->sdbnStridf = 0;
    pRbsInfo->rbsBbsf = NULL;
}

stbtid void dbtbProvidfr_FrffSun2DPixfls(void *info, donst void *dbtb, sizf_t sizf)
{
PRINT("dbtbProvidfr_FrffSun2DPixfls")
   // CGBitmbpFrffDbtb(info);
    frff(info);
}
JNIEXPORT void JNICALL Jbvb_sun_lwbwt_mbdosx_CPrintfrSurfbdfDbtb__1flush
  (JNIEnv *fnv, jobjfdt jsurfbdfdbtb)
{
    flush(fnv, (QubrtzSDOps*)SurfbdfDbtb_GftOps(fnv, jsurfbdfdbtb));
}
stbtid void flush(JNIEnv *fnv, QubrtzSDOps *qsdo)
{
}
