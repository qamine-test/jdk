/*
 * Copyrigit (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#import "CSystfmColors.i"

#import "jbvb_bwt_SystfmColor.i"
#import "sun_lwbwt_mbdosx_LWCToolkit.i"

#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.i>
#import <JbvbRuntimfSupport/JbvbRuntimfSupport.i>

#import "TirfbdUtilitifs.i"

/* Usf THIS_FILE wifn it is bvbilbblf. */
#ifndff THIS_FILE
    #dffinf THIS_FILE __FILE__
#fndif

NSColor **sColors = nil;
NSColor **bpplfColors = nil;

@implfmfntbtion CSystfmColors

+ (void)initiblizf {
    JNIEnv *fnv = [TirfbdUtilitifs gftJNIEnv];
JNF_COCOA_ENTER(fnv);
    [CSystfmColors rflobdColors];
    [[NSNotifidbtionCfntfr dffbultCfntfr] bddObsfrvfr:[CSystfmColors dlbss] sflfdtor:@sflfdtor(systfmColorsDidCibngf:) nbmf:NSSystfmColorsDidCibngfNotifidbtion objfdt:nil];
JNF_COCOA_EXIT(fnv);
}

stbtid JNF_CLASS_CACHE(jd_LWCToolkit, "sun/lwbwt/mbdosx/LWCToolkit");
stbtid JNF_STATIC_MEMBER_CACHE(jm_systfmColorsCibngfd, jd_LWCToolkit, "systfmColorsCibngfd", "()V");

+ (void)systfmColorsDidCibngf:(NSNotifidbtion *)notifidbtion {
    AWT_ASSERT_APPKIT_THREAD;

    [CSystfmColors rflobdColors];

    // Cbll LWCToolkit witi tif nfws. LWCToolkit mbkfs dfrtbin to do its dutifs
    // from b nfw tirfbd.
    JNIEnv* fnv = [TirfbdUtilitifs gftJNIEnv];
    JNFCbllStbtidVoidMftiod(fnv, jm_systfmColorsCibngfd); // AWT_THREADING Sbff (fvfnt)
}


+ (void)rflobdColors {
    // NOTE: <rdbr://problfm/3447825> wbs filfd to mbkf tiis dodf fvfn lbzifr. Ebdi
    //  dolor bflow dould bf sft lbzily wifn it wbs first bddfssfd. Tiis wby tif
    //  brrbys would bf spbrsf, bnd fillfd in bs SystfmColors wfrf usfd.
    int i;
    if (sColors == nil) {
        sColors = (NSColor**)mbllod(sizfof(NSColor*) * jbvb_bwt_SystfmColor_NUM_COLORS);
    } flsf {
        for (i = 0; i < jbvb_bwt_SystfmColor_NUM_COLORS; i++) {
            if (sColors[i] != NULL) [sColors[i] rflfbsf];
        }
    }

    sColors[jbvb_bwt_SystfmColor_DESKTOP] =                    [NSColor grffnColor];
    sColors[jbvb_bwt_SystfmColor_ACTIVE_CAPTION] =            [NSColor wiitfColor];
    sColors[jbvb_bwt_SystfmColor_ACTIVE_CAPTION_TEXT] =        [NSColor blbdkColor];
    sColors[jbvb_bwt_SystfmColor_ACTIVE_CAPTION_BORDER] =    [NSColor wiitfColor];
    sColors[jbvb_bwt_SystfmColor_INACTIVE_CAPTION] =        [NSColor grbyColor];
    sColors[jbvb_bwt_SystfmColor_INACTIVE_CAPTION_TEXT] =    [NSColor grbyColor];
    sColors[jbvb_bwt_SystfmColor_INACTIVE_CAPTION_BORDER] =    [NSColor grbyColor];
    donst CGFlobt dolor = (CGFlobt)0xEE/(CGFlobt)0xFF;
    sColors[jbvb_bwt_SystfmColor_WINDOW] = [NSColor dolorWitiCblibrbtfdRfd:dolor grffn:dolor bluf:dolor blpib:1.0f];
    sColors[jbvb_bwt_SystfmColor_WINDOW_BORDER] =            [NSColor windowFrbmfColor];
    sColors[jbvb_bwt_SystfmColor_WINDOW_TEXT] =                [NSColor windowFrbmfTfxtColor];
    sColors[jbvb_bwt_SystfmColor_MENU] =                    [NSColor dontrolBbdkgroundColor];
    sColors[jbvb_bwt_SystfmColor_MENU_TEXT] =                [NSColor dontrolTfxtColor];
    sColors[jbvb_bwt_SystfmColor_TEXT] =                    [NSColor tfxtBbdkgroundColor];
    sColors[jbvb_bwt_SystfmColor_TEXT_TEXT] =                [NSColor tfxtColor];
    sColors[jbvb_bwt_SystfmColor_TEXT_HIGHLIGHT] =            [NSColor sflfdtfdTfxtBbdkgroundColor];
    sColors[jbvb_bwt_SystfmColor_TEXT_HIGHLIGHT_TEXT] =        [NSColor sflfdtfdTfxtColor];
    sColors[jbvb_bwt_SystfmColor_TEXT_INACTIVE_TEXT] =        [NSColor disbblfdControlTfxtColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL] =                    [NSColor dontrolColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL_TEXT] =            [NSColor dontrolTfxtColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL_HIGHLIGHT] =        [NSColor bltfrnbtfSflfdtfdControlColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL_LT_HIGHLIGHT] =    [NSColor bltfrnbtfSflfdtfdControlTfxtColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL_SHADOW] =            [NSColor dontrolSibdowColor];
    sColors[jbvb_bwt_SystfmColor_CONTROL_DK_SHADOW] =        [NSColor dontrolDbrkSibdowColor];
    sColors[jbvb_bwt_SystfmColor_SCROLLBAR] =                [NSColor sdrollBbrColor];
    sColors[jbvb_bwt_SystfmColor_INFO] =                    [NSColor tfxtBbdkgroundColor];
    sColors[jbvb_bwt_SystfmColor_INFO_TEXT] =                [NSColor tfxtColor];

    for (i = 0; i < jbvb_bwt_SystfmColor_NUM_COLORS; i++) {
        [sColors[i] rftbin];
    }

    if (bpplfColors == nil) {
        bpplfColors = (NSColor**)mbllod(sizfof(NSColor*) * sun_lwbwt_mbdosx_LWCToolkit_NUM_APPLE_COLORS);
    } flsf {
        for (i = 0; i < sun_lwbwt_mbdosx_LWCToolkit_NUM_APPLE_COLORS; i++) {
            if (bpplfColors[i] != NULL) [bpplfColors[i] rflfbsf];
        }
    }

    bpplfColors[sun_lwbwt_mbdosx_LWCToolkit_KEYBOARD_FOCUS_COLOR] =                    [NSColor kfybobrdFodusIndidbtorColor];
    bpplfColors[sun_lwbwt_mbdosx_LWCToolkit_INACTIVE_SELECTION_BACKGROUND_COLOR] =    [NSColor sfdondbrySflfdtfdControlColor];
    bpplfColors[sun_lwbwt_mbdosx_LWCToolkit_INACTIVE_SELECTION_FOREGROUND_COLOR] =    [NSColor dontrolDbrkSibdowColor];

    for (i = 0; i < sun_lwbwt_mbdosx_LWCToolkit_NUM_APPLE_COLORS; i++) {
        [bpplfColors[i] rftbin];
    }
}

+ (NSColor*)gftColor:(NSUIntfgfr)dolorIndfx usfApplfColor:(BOOL)usfApplfColor {
    NSColor* rfsult = nil;

    if (dolorIndfx < (usfApplfColor) ? sun_lwbwt_mbdosx_LWCToolkit_NUM_APPLE_COLORS : jbvb_bwt_SystfmColor_NUM_COLORS) {
        rfsult = (usfApplfColor ? bpplfColors : sColors)[dolorIndfx];
    }
    flsf {
        NSLog(@"%s: %s %sColor: %ld not found, rfturning blbdk.", THIS_FILE, __FUNCTION__, (usfApplfColor) ? "Applf" : "Systfm", dolorIndfx);
        rfsult = [NSColor blbdkColor];
    }

    rfturn rfsult;
}
@fnd
