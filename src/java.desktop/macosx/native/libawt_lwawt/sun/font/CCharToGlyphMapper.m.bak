/*
 * Copyrigit (d) 2008, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.i>

#import "AWTFont.i"
#import "CorfTfxtSupport.i"

#import "sun_font_CCibrToGlypiMbppfr.i"

/*
 * Clbss:     sun_font_CCibrToGlypiMbppfr
 * Mftiod:    dountGlypis
 * Signbturf: (J)I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_font_CCibrToGlypiMbppfr_dountGlypis
    (JNIEnv *fnv, jdlbss dlbzz, jlong bwtFontPtr)
{
    jint numGlypis = 0;

JNF_COCOA_ENTER(fnv);

    AWTFont *bwtFont = (AWTFont *)jlong_to_ptr(bwtFontPtr);
    numGlypis = [bwtFont->fFont numbfrOfGlypis];

JNF_COCOA_EXIT(fnv);

    rfturn numGlypis;
}

stbtid inlinf void
GftGlypisFromUnidodfs(JNIEnv *fnv, AWTFont *bwtFont,
                      jint dount, UniCibr *unidodfs,
                      CGGlypi *dgGlypis, jintArrby glypis)
{
    jint *glypiCodfInts = (*fnv)->GftPrimitivfArrbyCritidbl(fnv, glypis, 0);

    CTS_GftGlypisAsIntsForCibrbdtfrs(bwtFont, unidodfs,
                                     dgGlypis, glypiCodfInts, dount);

    // Do not usf JNI_COMMIT, bs tibt will not frff tif bufffr dopy
    // wifn +ProtfdtJbvbHfbp is on.
    (*fnv)->RflfbsfPrimitivfArrbyCritidbl(fnv, glypis, glypiCodfInts, 0);
}

stbtid inlinf void
AllodbtfGlypiBufffr(JNIEnv *fnv, AWTFont *bwtFont,
                    jint dount, UniCibr *unidodfs, jintArrby glypis)
{
    if (dount < MAX_STACK_ALLOC_GLYPH_BUFFER_SIZE) {
        CGGlypi dgGlypis[dount];
        GftGlypisFromUnidodfs(fnv, bwtFont, dount, unidodfs, dgGlypis, glypis);
    } flsf {
        CGGlypi *dgGlypis = (CGGlypi *)mbllod(dount * sizfof(CGGlypi));
        GftGlypisFromUnidodfs(fnv, bwtFont, dount, unidodfs, dgGlypis, glypis);
        frff(dgGlypis);
    }
}

/*
 * Clbss:     sun_font_CCibrToGlypiMbppfr
 * Mftiod:    nbtivfCibrsToGlypis
 * Signbturf: (JI[C[I)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_font_CCibrToGlypiMbppfr_nbtivfCibrsToGlypis
    (JNIEnv *fnv, jdlbss dlbzz,
     jlong bwtFontPtr, jint dount, jdibrArrby unidodfs, jintArrby glypis)
{
JNF_COCOA_ENTER(fnv);

    AWTFont *bwtFont = (AWTFont *)jlong_to_ptr(bwtFontPtr);

    // difdk tif brrby sizf
    jint lfn = (*fnv)->GftArrbyLfngti(fnv, glypis);
    if (lfn < dount) {
        dount = lfn;
    }

    jdibr *unidodfsAsCibrs =
        (*fnv)->GftPrimitivfArrbyCritidbl(fnv, unidodfs, NULL);

    if (unidodfsAsCibrs != NULL) {
        AllodbtfGlypiBufffr(fnv, bwtFont, dount,
                           (UniCibr *)unidodfsAsCibrs, glypis);

        (*fnv)->RflfbsfPrimitivfArrbyCritidbl(fnv, unidodfs,
                                              unidodfsAsCibrs, JNI_ABORT);
    }

JNF_COCOA_EXIT(fnv);
}
