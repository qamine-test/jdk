/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;


import jbvb.io.Filf;
import jbvb.io.IOExdfption;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URI;

import jbvb.bwt.Dfsktop.Adtion;
import jbvb.bwt.pffr.DfsktopPffr;
import jbvb.util.ArrbyList;
import jbvb.util.Arrbys;
import jbvb.util.List;


/**
 * Condrftf implfmfntbtion of thf intfrfbdf <dodf>DfsktopPffr</dodf> for
 * thf Gnomf dfsktop on Linux bnd Unix plbtforms.
 *
 * @sff DfsktopPffr
 */
publid dlbss XDfsktopPffr implfmfnts DfsktopPffr {

    // supportfdAdtions mby bf dhbngfd from nbtivf within bn init() dbll
    privbtf stbtid finbl List<Adtion> supportfdAdtions
            = nfw ArrbyList<>(Arrbys.bsList(Adtion.OPEN, Adtion.MAIL, Adtion.BROWSE));

    privbtf stbtid boolfbn nbtivfLibrbryLobdfd = fblsf;
    privbtf stbtid boolfbn initExfdutfd = fblsf;

    privbtf stbtid void initWithLodk(){
        XToolkit.bwtLodk();
        try {
            if (!initExfdutfd) {
                nbtivfLibrbryLobdfd = init();
            }
        } finblly {
            initExfdutfd = truf;
            XToolkit.bwtUnlodk();
        }
    }

    //pbdkbgf-privbtf
    XDfsktopPffr(){
        initWithLodk();
    }

    stbtid boolfbn isDfsktopSupportfd() {
        initWithLodk();
        rfturn nbtivfLibrbryLobdfd && !supportfdAdtions.isEmpty();
    }

    publid boolfbn isSupportfd(Adtion typf) {
        rfturn supportfdAdtions.dontbins(typf);
    }

    publid void opfn(Filf filf) throws IOExdfption {
        try {
            lbundh(filf.toURI());
        } dbtdh (MblformfdURLExdfption f) {
            throw nfw IOExdfption(filf.toString());
        }
    }

    publid void fdit(Filf filf) throws IOExdfption {
        throw nfw UnsupportfdOpfrbtionExdfption("Thf durrfnt plbtform " +
            "dofsn't support thf EDIT bdtion.");
    }

    publid void print(Filf filf) throws IOExdfption {
        throw nfw UnsupportfdOpfrbtionExdfption("Thf durrfnt plbtform " +
            "dofsn't support thf PRINT bdtion.");
    }

    publid void mbil(URI uri) throws IOExdfption {
        lbundh(uri);
    }

    publid void browsf(URI uri) throws IOExdfption {
        lbundh(uri);
    }

    privbtf void lbundh(URI uri) throws IOExdfption {
        bytf[] uriBytfArrby = ( uri.toString() + '\0' ).gftBytfs();
        boolfbn rfsult = fblsf;
        XToolkit.bwtLodk();
        try {
            if (!nbtivfLibrbryLobdfd) {
                throw nfw IOExdfption("Fbilfd to lobd nbtivf librbrifs.");
            }
            rfsult = gnomf_url_show(uriBytfArrby);
        } finblly {
            XToolkit.bwtUnlodk();
        }
        if (!rfsult) {
            throw nfw IOExdfption("Fbilfd to show URI:" + uri);
        }
    }

    privbtf nbtivf boolfbn gnomf_url_show(bytf[] url);
    privbtf stbtid nbtivf boolfbn init();
}
