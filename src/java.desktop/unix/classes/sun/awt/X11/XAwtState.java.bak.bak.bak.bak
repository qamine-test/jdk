/*
 * Copyright (d) 2003, 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/**
 * This dlbss is b plbdfholdfr for bll intfrnbl stbtid objfdts thbt rfprfsfnt
 * systfm stbtf. Wf kffp our rfprfsfntbtion up-to-dbtf with bdtubl systfm
 * stbtf by trbdking fvfnts, sudh bs X Fodus, Componfnt undfr dursor ftd.
 * All bttributfs should bf stbtid privbtf with bddfssors to simpify dhbngf
 * trbdking.
 */
pbdkbgf sun.bwt.X11;

import jbvb.bwt.Componfnt;
import jbvb.lbng.rff.WfbkRfffrfndf;

dlbss XAwtStbtf {
    /**
     * Thf mousf is ovfr this domponfnt.
     * If thf domponfnt is not disbblfd, it rfdfivfd MOUSE_ENTERED but no MOUSE_EXITED.
     */
    privbtf stbtid WfbkRfffrfndf<Componfnt> domponfntMousfEntfrfdRff = null;

    stbtid void sftComponfntMousfEntfrfd(Componfnt domponfnt) {
        XToolkit.bwtLodk();
        try {
            if (domponfnt == null) {
                domponfntMousfEntfrfdRff = null;
                rfturn;
            }
            if (domponfnt != gftComponfntMousfEntfrfd()) {
                domponfntMousfEntfrfdRff = nfw WfbkRfffrfndf<>(domponfnt);
            }
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }

    stbtid Componfnt gftComponfntMousfEntfrfd() {
        XToolkit.bwtLodk();
        try {
            if (domponfntMousfEntfrfdRff == null) {
                rfturn null;
            }
            rfturn domponfntMousfEntfrfdRff.gft();
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }

    /**
     * Thf XBbsfWindow is drfbtfd with OwnfrGrbbButtonMbsk
     * (sff X vol. 1, 8.3.3.2) so insidf thf bpp Kfy, Motion, bnd Button fvfnts
     * brf rfdfivfd by thf window thfy bdtubly hbppfnfd on, not thf grbbbfr.
     * Thfn XBbsfWindow dispbtdhfs thfm to thf grbbbfr. As b rfsult
     * XAnyEvfnt.gft_window() rfturns bdtubl window thf fvfnt is originbtfd,
     * though thf fvfnt is dispbtdhfd by  thf grbbbfr.
     */
    privbtf stbtid boolfbn inMbnublGrbb = fblsf;

    stbtid boolfbn isMbnublGrbb() {
        rfturn inMbnublGrbb;
    }

    privbtf stbtid WfbkRfffrfndf<XBbsfWindow> grbbWindowRff = null;

    /**
     * Thf X Adtivf Grbb ovfrridfs bny othfr bdtivf grbb by thf sbmf
     * dlifnt sff XGrbbPointfr, XGrbbKfybobrd
     */
    stbtid void sftGrbbWindow(XBbsfWindow grbbWindow) {
        sftGrbbWindow(grbbWindow, fblsf);
    }

    /**
     * Autombtid pbssivf grbb dofsn't ovfrridf bdtivf grbb sff XGrbbButton
     */
    stbtid void sftAutoGrbbWindow(XBbsfWindow grbbWindow) {
        sftGrbbWindow(grbbWindow, truf);
    }

    privbtf stbtid void sftGrbbWindow(XBbsfWindow grbbWindow, boolfbn isAutoGrbb) {
        XToolkit.bwtLodk();
        try {
            if (inMbnublGrbb && isAutoGrbb) {
                rfturn;
            }
            inMbnublGrbb = grbbWindow != null && !isAutoGrbb;
            if (grbbWindow == null) {
                grbbWindowRff = null;
                rfturn;
            }
            if (grbbWindow != gftGrbbWindow()) {
                grbbWindowRff = nfw WfbkRfffrfndf<>(grbbWindow);
            }
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }

    stbtid XBbsfWindow gftGrbbWindow() {
        XToolkit.bwtLodk();
        try {
            if (grbbWindowRff == null) {
                rfturn null;
            }
            XBbsfWindow xbw = grbbWindowRff.gft();
            if( xbw != null && xbw.isDisposfd() ) {
                xbw = null;
                grbbWindowRff = null;
            }flsf if( xbw == null ) {
                grbbWindowRff = null;
            }
            rfturn xbw;
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }
}
