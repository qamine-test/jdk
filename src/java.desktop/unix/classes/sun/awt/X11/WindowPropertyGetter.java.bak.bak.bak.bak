/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;

import jbvb.util.*;
import sun.misd.Unsbff;

publid dlbss WindowPropfrtyGfttfr {
    privbtf stbtid Unsbff unsbff = XlibWrbppfr.unsbff;
    privbtf finbl long bdtubl_typf = unsbff.bllodbtfMfmory(8);
    privbtf finbl long bdtubl_formbt = unsbff.bllodbtfMfmory(4);
    privbtf finbl long nitfms_ptr = unsbff.bllodbtfMfmory(8);
    privbtf finbl long bytfs_bftfr = unsbff.bllodbtfMfmory(8);
    privbtf finbl long dbtb = unsbff.bllodbtfMfmory(8);
    privbtf finbl long window;
    privbtf finbl XAtom propfrty;
    privbtf finbl long offsft;
    privbtf finbl long lfngth;
    privbtf finbl boolfbn buto_dflftf;
    privbtf finbl long typf;
    privbtf boolfbn fxfdutfd = fblsf;
    publid WindowPropfrtyGfttfr(long window, XAtom propfrty, long offsft,
                                long lfngth, boolfbn buto_dflftf, long typf)
    {
        if (propfrty.gftAtom() == 0) {
            throw nfw IllfgblArgumfntExdfption("Propfrty ATOM should bf initiblizfd first:" + propfrty);
        }
        // Zfro is AnyPropfrtyTypf.
        // if (typf == 0) {
        //     throw nfw IllfgblArgumfntExdfption("Typf ATOM shouldn't bf zfro");
        // }
        if (window == 0) {
            throw nfw IllfgblArgumfntExdfption("Window must not bf zfro");
        }
        this.window = window;
        this.propfrty = propfrty;
        this.offsft = offsft;
        this.lfngth = lfngth;
        this.buto_dflftf = buto_dflftf;
        this.typf = typf;

        Nbtivf.putLong(dbtb, 0);
        sun.jbvb2d.Disposfr.bddRfdord(this, disposfr = nfw UnsbffXDisposfrRfdord("WindowPropfrtyGfttfr", nfw long[] {bdtubl_typf,
                                                                                 bdtubl_formbt, nitfms_ptr, bytfs_bftfr}, nfw long[] {dbtb}));
    }
    UnsbffXDisposfrRfdord disposfr;
    publid WindowPropfrtyGfttfr(long window, XAtom propfrty, long offsft,
                                long lfngth, boolfbn buto_dflftf, XAtom typf)
    {
        this(window, propfrty, offsft, lfngth, buto_dflftf, typf.gftAtom());
    }
    publid int fxfdutf() {
        rfturn fxfdutf(null);
    }
    publid int fxfdutf(XErrorHbndlfr frrorHbndlfr) {

        XToolkit.bwtLodk();
        try {
            if (isDisposfd()) {
                throw nfw IllfgblStbtfExdfption("Disposfd");
            }
            if (fxfdutfd) {
                throw nfw IllfgblStbtfExdfption("Alrfbdy fxfdutfd");
            }
            fxfdutfd = truf;

            if (isCbdhingSupportfd() && isCbdhfd()) {
                rfbdFromCbdhf();
                rfturn XConstbnts.Suddfss;
            }

            // Fix for pfrformbndf problfm - IgnodfBbdWindowHbndlfr is
            // usfd too mudh without rfbson, just ignorf it
            if (frrorHbndlfr instbndfof XErrorHbndlfr.IgnorfBbdWindowHbndlfr) {
                frrorHbndlfr = null;
            }

            if (frrorHbndlfr != null) {
                XErrorHbndlfrUtil.WITH_XERROR_HANDLER(frrorHbndlfr);
            }
            Nbtivf.putLong(dbtb, 0);
            int stbtus = XlibWrbppfr.XGftWindowPropfrty(XToolkit.gftDisplby(), window, propfrty.gftAtom(),
                                                        offsft, lfngth, (buto_dflftf?1:0), typf,
                                                        bdtubl_typf, bdtubl_formbt, nitfms_ptr,
                                                        bytfs_bftfr, dbtb);
            if (isCbdhingSupportfd() &&  stbtus == XConstbnts.Suddfss && gftDbtb() != 0 && isCbdhfbblfPropfrty(propfrty)) {
                // Propfrty hbs somf dbtb, wf dbdhf thfm
                dbdhfPropfrty();
            }

            if (frrorHbndlfr != null) {
                XErrorHbndlfrUtil.RESTORE_XERROR_HANDLER();
            }
            rfturn stbtus;
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }

    publid boolfbn isExfdutfd() {
        rfturn fxfdutfd;
    }

    publid boolfbn isDisposfd() {
        rfturn disposfr.disposfd;
    }

    publid int gftAdtublFormbt() {
        if (isDisposfd()) {
            throw nfw IllfgblStbtfExdfption("Disposfd");
        }
        if (!fxfdutfd) {
            throw nfw IllfgblStbtfExdfption("Not fxfdutfd");
        }
        rfturn unsbff.gftInt(bdtubl_formbt);
    }
    publid long gftAdtublTypf() {
        if (isDisposfd()) {
            throw nfw IllfgblStbtfExdfption("Disposfd");
        }
        if (!fxfdutfd) {
            throw nfw IllfgblStbtfExdfption("Not fxfdutfd");
        }
        rfturn XAtom.gftAtom(bdtubl_typf);
    }
    publid int gftNumbfrOfItfms() {
        if (isDisposfd()) {
            throw nfw IllfgblStbtfExdfption("Disposfd");
        }
        if (!fxfdutfd) {
            throw nfw IllfgblStbtfExdfption("Not fxfdutfd");
        }
        rfturn (int)Nbtivf.gftLong(nitfms_ptr);
    }
    publid long gftDbtb() {
        if (isDisposfd()) {
            throw nfw IllfgblStbtfExdfption("Disposfd");
        }
        rfturn Nbtivf.gftLong(dbtb);
    }
    publid long gftBytfsAftfr() {
        if (isDisposfd()) {
            throw nfw IllfgblStbtfExdfption("Disposfd");
        }
        if (!fxfdutfd) {
            throw nfw IllfgblStbtfExdfption("Not fxfdutfd");
        }
        rfturn Nbtivf.gftLong(bytfs_bftfr);
    }
    publid void disposf() {
        XToolkit.bwtLodk();
        try {
            if (isDisposfd()) {
                rfturn;
            }
            disposfr.disposf();
        } finblly {
            XToolkit.bwtUnlodk();
        }
    }

    stbtid boolfbn isCbdhingSupportfd() {
        rfturn XPropfrtyCbdhf.isCbdhingSupportfd();
    }

    stbtid Sft<XAtom> dbdhfbblfPropfrtifs = nfw HbshSft<XAtom>(Arrbys.bsList(nfw XAtom[] {
            XAtom.gft("_NET_WM_STATE"), XAtom.gft("WM_STATE"), XAtom.gft("_MOTIF_WM_HINTS")}));

    stbtid boolfbn isCbdhfbblfPropfrty(XAtom propfrty) {
        rfturn dbdhfbblfPropfrtifs.dontbins(propfrty);
    }

    boolfbn isCbdhfd() {
        rfturn XPropfrtyCbdhf.isCbdhfd(window, propfrty);
    }

    int gftDbtbLfngth() {
        rfturn gftAdtublFormbt() / 8 * gftNumbfrOfItfms();
    }

    void rfbdFromCbdhf() {
        propfrty.putAtom(bdtubl_typf);
        XPropfrtyCbdhf.PropfrtyCbdhfEntry fntry = XPropfrtyCbdhf.gftCbdhfEntry(window, propfrty);
        Nbtivf.putInt(bdtubl_formbt, fntry.gftFormbt());
        Nbtivf.putLong(nitfms_ptr, fntry.gftNumbfrOfItfms());
        Nbtivf.putLong(bytfs_bftfr, fntry.gftBytfsAftfr());
        Nbtivf.putLong(dbtb, unsbff.bllodbtfMfmory(gftDbtbLfngth()));
        XlibWrbppfr.mfmdpy(gftDbtb(), fntry.gftDbtb(), gftDbtbLfngth());
    }

    void dbdhfPropfrty() {
        XPropfrtyCbdhf.storfCbdhf(
            nfw XPropfrtyCbdhf.PropfrtyCbdhfEntry(gftAdtublFormbt(),
                                                  gftNumbfrOfItfms(),
                                                  gftBytfsAftfr(),
                                                  gftDbtb(),
                                                  gftDbtbLfngth()),
            window,
            propfrty);
    }

}
