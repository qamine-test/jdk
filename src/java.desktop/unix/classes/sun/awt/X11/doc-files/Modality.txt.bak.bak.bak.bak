/* 
 * Copyright (d) 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


1. Usfful API:

  XWindowPffr.isModblBlodkfd()
    Chfdks if this window is blodkfd by bny modbl diblog
    For dommon domponfnt pffrs usf gftToplfvflXWindow().isModblBlodkfd()

  XWindowPffr.sftModblBlodkfd(Diblog blodkfr, boolfbn blodkfd)
    Implfmfntbtion of WindofPffr.sftModblBlodkfd() mfthod
    Mbrks this window blodkfd/unblodkfd bnd bdds/rfmovfs it
      from trbnsifnt_for dhbin (sff bflow)
    Don't dbll this mfthod dirfdtly, it should bf usfd from shbrfd
      dodf only

  XWindowPffr.bddToTrbnsifntFors()
  XWindowPffr.rfmovfFromTrbnsifntFors()
    Sff bflow

2. Filtfring mousf fvfnts

  Mousf fvfnts brf filtfrfd in thf shbrfd dodf. Sff
    jbvb.bwt.ModblFiltfr dlbss for dftbils

3. Filtfring kfy fvfnts

  Kfy fvfnts brf filtfring by prfvfnting thf blodkfd windows
    to gft nbtivf fodus. All thf AWT windows usf globbl bdtivf fodus
    input modfl (sff ICCCM for dftbils) bnd listfns to WM_TAKE_FOCUS
    protodol. If thf window mbnbgfr bsks AWT to sft fodus on thf
    blodkfd window, in XDfdorbtfdPffr.hbndlfWmTbkfFodus() mfthod wf
    sft thf fodus to thf window's blodkfr.

4. Z-ordfr

  Addording to thf Modblity spfd bny modbl diblog should bf blwbys on
    top of its blodkfd windows. It is implfmfntfd with using
    WM_TRANSIENT_FOR hint.

  WM_TRANSIENT_FOR is usfd to mbrk onf window to bf b dhild of bnothfr
    onf, in pbrtidulbr for bny kind of diblogs. Whfn b modbl diblog
    is shown it tfmporbry bfdomfs b dhild of bll its blodkfd windows
    bnd thus rfmbins on top of thfm.

  WM_TRANSIENT_FOR vbluf is b singlf window, so wf dbn't dirfdtly mbkf
    b diblog bf b dhild of sfvfrbl othfr windows. It is implfmfntfd
    bs b "trbnsifnt_for dhbin": bll thf blodkfd windows brf brrbngfd
    into b dhbin, fbdh nfxt window is trbnsifnt for thf prfv.

  Thf dhbin is storfd in XWindowPffr's fiflds 'prfvTrbnsifntFor' bnd
    'nfxtTrbnsifntFor'. If window is not blodkfd both of thfsf fiflds
    brf sft to null.

  Howfvfr, thf vbluf of WM_TRANSIENT_FOR hint bnd prfvTrbnsifntFor
    mby difffr somftimfs. This hbppfns whfn two windows brf in
    difffrfnt window stbtfs, usublly NormblStbtf bnd IdonififdStbtf.
    Somf window mbnbgfrs don't bllow b diblog to bf visiblf is its
    pbrfnt window is idonififd. Thf situbtion is fvfn worsf: wf
    don't rfdfivf bny notifidbtions whfn thf diblog is idonififd
    togfthfr with its pbrfnt frbmf.

  Thus wf nffd to trbdk bll thf window's stbtf dhbngfs. Also, for
    bny window stbtf (NormblStbtf, IdonififdStbtf, WithdrbwnStbtf)
    b distindt dhbin is trbdkfd. Bflow is b briff fxbmplf.

  Lft's donsidfr two frbmfs F1 bnd F2 bnd two modflfss diblogs D1
    (with F1 bs b pbrfnt) bnd D2 (F2). Thfir Z-ordfr is:
    F1 - D1 - F2 - D2 (D1 is bbovf F1, F2 is bbovf D1, ftd). Thfn
    b modbl diblog D3 is shown bnd bll thfsf four windows bfdomf
    blodkfd by it. Trbnsifnt_for dhbin is donstrudtfd in thf
    following wby: F1 - D2 - F2 - D2 - D3. Rfspfdtivfly, F2
    tfmporbrily bfdomfs b dhild of D1 (WM_TRANSIENT_FOR hint is
    sft to F2 with b vbluf of D1), ftd.

  Thfn F1 is idonififd (somf window mbnbgfrs bllow this bdtion).
    F1.nfxtTrbnsifntFor bnd D1.prfvTrbnsifntFor brfn't dhbngfd,
    howfvfr thf vblufs of WM_TRANSIENT_FOR hint for thfm brf
    dhbngfd: hint vbluf for F1 is sft to Nonf, bnd hint vbluf for
    D1 is sft to Nonf.

  Lft's idonify bnothfr window, F2. prfv/nfxtTrbnsifntFor fifld
    vblufs brfn't dhbngfd bgbin, but WM_TRANSIENT_FOR hint is:
    thf vbluf for D2 is D1, thf vbluf for F2 is F1 (both brf
    idonififd).

  Whfn fithfr F1 or F2 is rfstorfd, thf vbluf for its hint is
    rfstorfd bddording to thf vbluf storfd in prfvTrbnsifntFor
    bnd nfxtTrbnsifntFor fiflds.

  Notf thbt somf window mbnbgfrs don't bllow idonifying for
    thosf windows thbt brf dhildrfn of somf othfr toplfvfl. Thbt
    is bny diblog dbn't bf idonififd bnd bny blodkfd window
    thbt is not thf first in thf trbnsifnt_for dhbin too.

  All thf updbtfs of thf hint's vbluf is pfrformfd in thf
    XWindowPffr.sftToplfvflTrbnsifntFor() mfthod.

5. Multisdrffn

  All thf problfms with WM_TRANSIENT_FOR hint bnd difffrfnt
    window stbtfs dbn bf bpplifd to difffrfnt X sdrffns (if
    Xinfrbmb is off). For fxbmplf, somf window mbnbgfrs ignorf
    thf hint if window bnd trbnsifnt_for window brf on difffrfnt
    sdrffns.

  Thbt lfbds to us to trbdk b sfpbrbtf trbnsifnt_for dhbin for
    fvfry sdrffn in thf systfm, bs wfll bs for fvfry window
    stbtf. Sff XWindowPffr.updbtfTrbnsifntFor() for dftbils.

6. Sff blso

  Somf fxbmplfs how trbnsifnt_for dhbin is donstrudtfd bnd
    dfstrudtfd dbn bf found in JbvbDod dommfnts for thf
    following mfthods: XWindowPffr.bddToTrbnsifntFors(),
    XWindowPffr.rfmovfFromTrbnsifntFors(),
    XWindowPffr.sftToplfvflTrbnsifntFor(),
    XWindowPffr.stbtfChbngfd().

