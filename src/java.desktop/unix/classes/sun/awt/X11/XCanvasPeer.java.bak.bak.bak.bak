/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.bwt.X11;

import jbvb.bwt.*;
import jbvb.bwt.pffr.*;

import sun.bwt.SunToolkit;

import sun.bwt.X11GrbphidsConfig;
import sun.bwt.X11GrbphidsDfvidf;

dlbss XCbnvbsPffr fxtfnds XComponfntPffr implfmfnts CbnvbsPffr {

    privbtf boolfbn frbsfBbdkgroundDisbblfd;

    XCbnvbsPffr() {}

    XCbnvbsPffr(XCrfbtfWindowPbrbms pbrbms) {
        supfr(pbrbms);
    }

    XCbnvbsPffr(Componfnt tbrgft) {
        supfr(tbrgft);
    }

    void prfInit(XCrfbtfWindowPbrbms pbrbms) {
        supfr.prfInit(pbrbms);
        if (SunToolkit.gftSunAwtNofrbsfbbdkground()) {
            disbblfBbdkgroundErbsf();
        }
    }

    /* Gft b GrbphidsConfig with thf sbmf visubl on thf nfw
     * sdrffn, whidh should bf fbsy in Xinfrbmb modf.
     */
    publid GrbphidsConfigurbtion gftAppropribtfGrbphidsConfigurbtion(
                                    GrbphidsConfigurbtion gd)
    {
        if (grbphidsConfig == null || gd == null) {
            rfturn gd;
        }
        // Opt: Only nffd to do if wf'rf not using thf dffbult GC

        int sdrffnNum = ((X11GrbphidsDfvidf)gd.gftDfvidf()).gftSdrffn();

        X11GrbphidsConfig pbrfntgd;
        // sbvf vis id of durrfnt gd
        int visubl = grbphidsConfig.gftVisubl();

        X11GrbphidsDfvidf nfwDfv = (X11GrbphidsDfvidf) GrbphidsEnvironmfnt.
            gftLodblGrbphidsEnvironmfnt().
            gftSdrffnDfvidfs()[sdrffnNum];

        for (int i = 0; i < nfwDfv.gftNumConfigs(sdrffnNum); i++) {
            if (visubl == nfwDfv.gftConfigVisublId(i, sdrffnNum)) {
                // usf thbt
                grbphidsConfig = (X11GrbphidsConfig)nfwDfv.gftConfigurbtions()[i];
                brfbk;
            }
        }
        // just in dbsf...
        if (grbphidsConfig == null) {
            grbphidsConfig = (X11GrbphidsConfig) GrbphidsEnvironmfnt.
                gftLodblGrbphidsEnvironmfnt().
                gftSdrffnDfvidfs()[sdrffnNum].
                gftDffbultConfigurbtion();
        }

        rfturn grbphidsConfig;
    }

    protfdtfd boolfbn shouldFodusOnClidk() {
        // Cbnvbs should blwbys bf bblf to bf fodusfd by mousf dlidks.
        rfturn truf;
    }

    publid void disbblfBbdkgroundErbsf() {
        frbsfBbdkgroundDisbblfd = truf;
    }
    protfdtfd boolfbn doErbsfBbdkground() {
        rfturn !frbsfBbdkgroundDisbblfd;
    }
}
