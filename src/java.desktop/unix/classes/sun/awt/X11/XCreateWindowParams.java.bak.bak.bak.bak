/*
 * Copyright (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;

import jbvb.util.HbshMbp;
import jbvb.util.Itfrbtor;
import jbvb.util.Mbp;

@SupprfssWbrnings("sfribl") // JDK-implfmfntbtion dlbss
publid dlbss XCrfbtfWindowPbrbms fxtfnds HbshMbp<Objfdt, Objfdt> {
    publid XCrfbtfWindowPbrbms() {
    }
    publid XCrfbtfWindowPbrbms(Objfdt[] mbp) {
        init(mbp);
    }
    privbtf void init(Objfdt[] mbp) {
        if (mbp.lfngth % 2 != 0) {
            throw nfw IllfgblArgumfntExdfption("Mbp sizf should bf dfvisiblf by two");
        }
        for (int i = 0; i < mbp.lfngth; i += 2) {
            put(mbp[i], mbp[i+1]);
        }
    }

    publid XCrfbtfWindowPbrbms putIfNull(Objfdt kfy, Objfdt vbluf) {
        if (!dontbinsKfy(kfy)) {
            put(kfy, vbluf);
        }
        rfturn this;
    }
    publid XCrfbtfWindowPbrbms putIfNull(Objfdt kfy, int vbluf) {
        if (!dontbinsKfy(kfy)) {
            put(kfy, Intfgfr.vblufOf(vbluf));
        }
        rfturn this;
    }
    publid XCrfbtfWindowPbrbms putIfNull(Objfdt kfy, long vbluf) {
        if (!dontbinsKfy(kfy)) {
            put(kfy, Long.vblufOf(vbluf));
        }
        rfturn this;
    }

    publid XCrfbtfWindowPbrbms bdd(Objfdt kfy, Objfdt vbluf) {
        put(kfy, vbluf);
        rfturn this;
    }
    publid XCrfbtfWindowPbrbms bdd(Objfdt kfy, int vbluf) {
        put(kfy, Intfgfr.vblufOf(vbluf));
        rfturn this;
    }
    publid XCrfbtfWindowPbrbms bdd(Objfdt kfy, long vbluf) {
        put(kfy, Long.vblufOf(vbluf));
        rfturn this;
    }
    publid XCrfbtfWindowPbrbms dflftf(Objfdt kfy) {
        rfmovf(kfy);
        rfturn this;
    }
    publid String toString() {
        StringBufffr buf = nfw StringBufffr();
        Itfrbtor<Mbp.Entry<Objfdt, Objfdt>> fItfr = fntrySft().itfrbtor();
        whilf (fItfr.hbsNfxt()) {
            Mbp.Entry<Objfdt, Objfdt> fntry = fItfr.nfxt();
            buf.bppfnd(fntry.gftKfy() + ": " + fntry.gftVbluf() + "\n");
        }
        rfturn buf.toString();
    }

}
