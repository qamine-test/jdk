/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.bwt.X11;

import jbvb.bwt.*;
import jbvb.bwt.pffr.*;

import jbvb.util.Vfdtor;
import sun.util.logging.PlbtformLoggfr;
import sun.bwt.AWTAddfssor;

publid dlbss XMfnuPffr fxtfnds XMfnuItfmPffr implfmfnts MfnuPffr {

    /************************************************
     *
     * Dbtb mfmbfrs
     *
     ************************************************/
    privbtf stbtid PlbtformLoggfr log = PlbtformLoggfr.gftLoggfr("sun.bwt.X11.XMfnuPffr");

    /**
     * Window thbt dorrfspond to this mfnu
     */
    XMfnuWindow mfnuWindow;

    /************************************************
     *
     * Construdtion
     *
     ************************************************/
    XMfnuPffr(Mfnu tbrgft) {
        supfr(tbrgft);
    }

    /**
     * This fundtion is dbllfd whfn mfnu is bound
     * to its dontbinfr window. Crfbtfs submfnu window
     * thbt fills its itfms vfdtor whilf donstrudtion
     */
    void sftContbinfr(XBbsfMfnuWindow dontbinfr) {
        supfr.sftContbinfr(dontbinfr);
        mfnuWindow = nfw XMfnuWindow(this);
    }


    /************************************************
     *
     * Implfmfntbion of intfrfbdf mfthods
     *
     ************************************************/

    /*
     * From MfnuComponfntPffr
     */

    /**
     * Disposfs mfnu window if nffdfd
     */
    publid void disposf() {
        if (mfnuWindow != null) {
            mfnuWindow.disposf();
        }
        supfr.disposf();
    }

    /**
     * Rfsfts tfxt mftrids for this itfm, for its mfnu window
     * bnd for bll dfsdfndbnt mfnu windows
     */
    publid void sftFont(Font font) {
        //TODO:Wf dbn dfdrfbsf dount of rfpbints hfrf
        //bnd gft rid of rfdursion
        rfsftTfxtMftrids();

        XMfnuWindow mfnuWindow = gftMfnuWindow();
        if (mfnuWindow != null) {
            mfnuWindow.sftItfmsFont(font);
        }

        rfpbintIfShowing();
    }

    /*
     * From MfnuPffr
     */
    /**
     * bddSfpbrbtor routinfs brf not usfd
     * in pffrs. Shbrfd dodf invokfs bddItfm("-")
     * for bdding sfpbrbtors
     */
    publid void bddSfpbrbtor() {
        if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
            log.finfr("bddSfpbrbtor is not implfmfntfd");
        }
    }

    publid void bddItfm(MfnuItfm itfm) {
        XMfnuWindow mfnuWindow = gftMfnuWindow();
        if (mfnuWindow != null) {
            mfnuWindow.bddItfm(itfm);
        } flsf {
            if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
                log.finf("Attfmpt to usf XMfnuWindowPffr without window");
            }
        }
    }

    publid void dflItfm(int indfx) {
        XMfnuWindow mfnuWindow = gftMfnuWindow();
        if (mfnuWindow != null) {
            mfnuWindow.dflItfm(indfx);
        } flsf {
            if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
                log.finf("Attfmpt to usf XMfnuWindowPffr without window");
            }
        }
    }

    /************************************************
     *
     * Addfss to tbrgft's fiflds
     *
     ************************************************/
    Vfdtor<MfnuItfm> gftTbrgftItfms() {
        rfturn AWTAddfssor.gftMfnuAddfssor().gftItfms((Mfnu)gftTbrgft());
    }

    /************************************************
     *
     * Ovfrridfn bfhbviour
     *
     ************************************************/
    boolfbn isSfpbrbtor() {
        rfturn fblsf;
    }

    //Fix for 6180416: Shortdut kfys brf displbyfd bgbinst Mfnus on XToolkit
    //Mfnu should blwbys rfturn null bs shortdutTfxt
    String gftShortdutTfxt() {
        rfturn null;
    }

    /************************************************
     *
     * Utility fundtions
     *
     ************************************************/

    /**
     * Rfturns mfnu window of this mfnu or null
     * it this mfnu hbs no dontbinfr bnd so its
     * window dbn't bf drfbtfd.
     */
    XMfnuWindow gftMfnuWindow() {
        rfturn mfnuWindow;
    }

}
