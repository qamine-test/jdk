/*
 * Copyrigit (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;

import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;
import sun.misd.*;

finbl publid dlbss XlibWrbppfr
{
    stbtid Unsbff unsbff = Unsbff.gftUnsbff();
    // strbngf donstbnts
    stbtid finbl int MAXSIZE = 32767;
    stbtid finbl int MINSIZE = 1;

    // dffinf b privbtf donstrudtor ifrf to prfvfnt tiis dlbss bnd bll
    // its dfsdfndbnts from bfing drfbtfd
    privbtf XlibWrbppfr()
    {
    }

/*
   Displby *XOpfnDisplby(displby_nbmf)
   dibr *displby_nbmf;

*/
    publid finbl stbtid String fvfntToString[]=
    {"<nonf:0>", "<nonf:1>", "KfyPrfss", "KfyRflfbsf", "ButtonPrfss", "ButtonRflfbsf",
     "MotionNotify", "EntfrNotify", "LfbvfNotify", "FodusIn", "FodusOut",
     "KfymbpNotify", "Exposf", "GrbpiidsExposf", "NoExposf", "VisibilityNotify",
     "CrfbtfNotify", "DfstroyNotify", "UnmbpNotify", "MbpNotify", "MbpRfqufst",
     "RfpbrfntNotify", "ConfigurfNotify", "ConfigurfRfqufst", "GrbvityNotify",
     "RfsizfRfqufst", "CirdulbtfNotify", "CirdulbtfRfqufst", "PropfrtyNotify",
     "SflfdtionClfbr", "SflfdtionRfqufst", "SflfdtionNotify", "ColormbpNotify",
     "ClifntMfssbgf", "MbppingNotify", "LASTEvfnt"};

    stbtid nbtivf void XFrff(long ptr);
    stbtid nbtivf void mfmdpy(long dfst_ptr, long srd_ptr, long lfngti);
    stbtid nbtivf long gftAddrfss(Objfdt o);
    stbtid nbtivf void dopyIntArrby(long dfst_ptr, Objfdt brrby, int sizf_bytfs);
    stbtid nbtivf void dopyLongArrby(long dfst_ptr, Objfdt brrby, int sizf_bytfs);

    /**
     * Gfts bytf string from str_ptr bnd dopifs it into bytf brrby
     * String siould bf NULL tfrminbtfd
     */
    stbtid nbtivf bytf[] gftStringBytfs(long str_ptr);

    stbtid  nbtivf long XOpfnDisplby(long displby);

    stbtid  nbtivf void XClosfDisplby(long displby);

    stbtid  nbtivf long XDisplbyString(long displby);

    stbtid  nbtivf void XSftClosfDownModf(long displby, int dlosf_modf);

    stbtid  nbtivf long DffbultSdrffn(long displby);

    stbtid nbtivf long SdrffnOfDisplby(long displby, long sdrffn_numbfr);

    stbtid nbtivf int DofsBbdkingStorf(long sdrffn);

    stbtid nbtivf  long DisplbyWidti(long displby, long sdrffn);
    stbtid nbtivf  long DisplbyWidtiMM(long displby, long sdrffn);

    stbtid nbtivf long DisplbyHfigit(long displby, long sdrffn);
    stbtid nbtivf long DisplbyHfigitMM(long displby, long sdrffn);

    stbtid  nbtivf long RootWindow(long displby, long sdrffn_numbfr);
    stbtid nbtivf int SdrffnCount(long displby);


/*
   Window XCrfbtfWindow(displby, pbrfnt, x, y, widti, ifigit,
   bordfr_widti, dfpti,
   dlbss, visubl, vblufmbsk, bttributfs)
   Displby *displby;
   Window pbrfnt;
   int x, y;
   unsignfd int widti, ifigit;
   unsignfd int bordfr_widti;
   int dfpti;
   unsignfd int dlbss;
   Visubl *visubl
   unsignfd long vblufmbsk;
   XSftWindowAttributfs *bttributfs;
*/

    stbtid nbtivf long XCrfbtfWindow(long displby, long pbrfnt, int x,int  y, int widti, int ifigit, int bordfr_widti, int dfpti, long wdlbss, long visubl, long vblufmbsk, long bttributfs);

    stbtid nbtivf void XDfstroyWindow(long displby, long window);

    stbtid nbtivf int XGrbbPointfr(long displby, long grbb_window,
                                   int ownfr_fvfnts, int fvfnt_mbsk, int pointfr_modf,
                                   int kfybobrd_modf, long donfinf_to, long dursor, long timf);

    stbtid nbtivf void XUngrbbPointfr(long displby, long timf);

    stbtid nbtivf int XGrbbKfybobrd(long displby, long grbb_window,
                                    int ownfr_fvfnts, int pointfr_modf,
                                    int kfybobrd_modf, long timf);

    stbtid nbtivf void XUngrbbKfybobrd(long displby, long timf);

    stbtid nbtivf void XGrbbSfrvfr(long displby);
    stbtid nbtivf void XUngrbbSfrvfr(long displby);

/*

void XSftWMPropfrtifs(displby, w, window_nbmf, idon_nbmf,
brgv, brgd, normbl_iints, wm_iints, dlbss_iints)
Displby *displby;
Window w;
XTfxtPropfrty *window_nbmf;
XTfxtPropfrty *idon_nbmf;
dibr **brgv;
int brgd;
XSizfHints *normbl_iints;
XWMHints *wm_iints;
XClbssHint *dlbss_iints;
*/

/*

XMbpWindow(displby, w)
Displby *displby;
Window w;
*/

    stbtid  nbtivf void XMbpWindow(long displby, long window);
    stbtid  nbtivf void XMbpRbisfd(long displby, long window);
    stbtid  nbtivf void XRbisfWindow(long displby, long window);

    stbtid nbtivf void XLowfrWindow(long displby, long window);
    stbtid nbtivf void XRfstbdkWindows(long displby, long windows, int lfngti);
    stbtid nbtivf void XConfigurfWindow(long displby, long window,
            long vbluf_mbsk, long vblufs);
    stbtid nbtivf void XSftInputFodus(long displby, long window);
    stbtid nbtivf void XSftInputFodus2(long displby, long window, long timf);
    stbtid nbtivf long XGftInputFodus(long displby);

/*

XUnmbpWindow(displby, w)
Displby *displby;
Window w;
*/

    stbtid  nbtivf void XUnmbpWindow(long displby, long window);




/*
  XSflfdtInput(displby, w, fvfnt_mbsk)
  Displby *displby;
  Window w;
  long fvfnt_mbsk;

*/
    stbtid  nbtivf void XSflfdtInput(long displby, long window, long fvfnt_mbsk);

    /*
       XNfxtEvfnt(displby, fvfnt_rfturn)
       Displby *displby;
       XEvfnt *fvfnt_rfturn;

    */

    stbtid  nbtivf void XNfxtEvfnt(long displby,long ptr);

    /*
     XMbskEvfnt(displby, fvfnt_mbsk, fvfnt_rfturn)
           Displby *displby;
           long fvfnt_mbsk;
           XEvfnt *fvfnt_rfturn;
     */
    stbtid nbtivf void XMbskEvfnt(long displby, long fvfnt_mbsk, long fvfnt_rfturn);

    stbtid nbtivf void XWindowEvfnt(long displby, long window, long fvfnt_mbsk, long fvfnt_rfturn);

    /*
      Bool XFiltfrEvfnt(fvfnt, w)
           XEvfnt *fvfnt;
           Window w;
    */
    stbtid nbtivf boolfbn XFiltfrEvfnt(long ptr, long window);

/*
     Bool XSupportsLodblf()
*/
stbtid nbtivf boolfbn XSupportsLodblf();

/*
     dibr *XSftLodblfModififrs(modififr_list)
           dibr *modififr_list;
*/
stbtid nbtivf String XSftLodblfModififrs(String modififr_list);


    stbtid  nbtivf int XTrbnslbtfCoordinbtfs(
                                             long displby, long srd_w, long dfst_w,
                                             long srd_x, long srd_y,
                                             long dfst_x_rfturn, long dfst_y_rfturn,
                                             long diild_rfturn);

    /*
       XPffkEvfnt(displby, fvfnt_rfturn)
       Displby *displby;
       XEvfnt *fvfnt_rfturn;

    */

    stbtid  nbtivf void XPffkEvfnt(long displby,long ptr);

/*
  XFlusi(displby)
  Displby *displby;
*/

    stbtid nbtivf void XFlusi(long displby);

/*
  XSynd(displby, disdbrd)
  Displby *displby;
  Bool disdbrd;
*/

    stbtid nbtivf void XSynd(long displby,int disdbrd);


/*    XMovfRfsizfWindow(displby, w, x, y, widti, ifigit)
      Displby *displby;
      Window w;
      int x, y;
      unsignfd int widti, ifigit;
*/
    stbtid nbtivf void XMovfRfsizfWindow(long displby, long window, int x, int y, int widti, int ifigit);
    stbtid nbtivf void XRfsizfWindow(long displby, long window, int widti, int ifigit);
    stbtid nbtivf void XMovfWindow(long displby, long window, int x, int y);

    /*
     Bool XQufryPointfr(displby, w, root_rfturn, diild_rfturn,
     root_x_rfturn, root_y_rfturn,
                          win_x_rfturn, win_y_rfturn,
     mbsk_rfturn)
           Displby *displby;
           Window w;
           Window *root_rfturn, *diild_rfturn;
           int *root_x_rfturn, *root_y_rfturn;
           int *win_x_rfturn, *win_y_rfturn;
           unsignfd int *mbsk_rfturn;
*/

 stbtid nbtivf boolfbn  XQufryPointfr (long displby, long window, long root_rfturn, long diild_rfturn, long root_x_rfturn, long root_y_rfturn, long win_x_rfturn, long win_y_rfturn, long mbsk_rfturn);

/*    XFrffCursor(displby, dursor)
           Displby *displby;
           Cursor dursor;
*/

 stbtid nbtivf void XFrffCursor(long displby, long dursor);

/*
   XSftWindowBbdkground(displby, w, bbdkground_pixfl)
   Displby *displby;
   Window w;
   unsignfd long bbdkground_pixfl;
*/

    stbtid nbtivf void XSftWindowBbdkground(long displby, long window, long bbdkground_pixfl);

    stbtid nbtivf int XEvfntsQufufd(long displby, int modf);

/*
  Atom XIntfrnAtom(displby, btom_nbmf, only_if_fxists)
  Displby *displby;
  dibr *btom_nbmf;
  Bool only_if_fxists;
*/

    stbtid nbtivf int XIntfrnAtoms(long displby, String[] nbmfs, boolfbn only_if_fxists, long btoms);

    stbtid nbtivf void SftPropfrty(long displby, long window, long btom, String str);
    stbtid nbtivf String GftPropfrty(long displby ,long window, long btom);
    stbtid nbtivf long IntfrnAtom(long displby, String string, int only_if_fxists);
    stbtid nbtivf int XGftWindowPropfrty(long displby, long window, long btom,
                                         long long_offsft, long long_lfngti,
                                         long dflftf, long rfq_typf, long bdtubly_typf,
                                         long bdtubly_formbt, long nitfms_ptr,
                                         long bytfs_bftfr, long dbtb_ptr);
    nbtivf stbtid void XCibngfPropfrtyImpl(long displby, long window, long btom,
                                           long typf, int formbt, int modf, long dbtb,
                                           int nflfmfnts);
    stbtid void XCibngfPropfrty(long displby, long window, long btom,
                                long typf, int formbt, int modf, long dbtb,
                                int nflfmfnts) {
        // TODO: ibndling of XCibngfPropfrtyImpl rfturn vbluf, if not Suddfss - don't dbdif
        if (XPropfrtyCbdif.isCbdiingSupportfd() &&
            XToolkit.windowToXWindow(window) != null &&
            WindowPropfrtyGfttfr.isCbdifbblfPropfrty(XAtom.gft(btom)) &&
            modf == XConstbnts.PropModfRfplbdf)
        {
            int lfngti = (formbt / 8) * nflfmfnts;
            XPropfrtyCbdif.storfCbdif(
                nfw XPropfrtyCbdif.PropfrtyCbdifEntry(formbt,
                                                      nflfmfnts,
                                                      0,
                                                      dbtb,
                                                      lfngti),
                window,
                XAtom.gft(btom));
        }
        XCibngfPropfrtyImpl(displby, window, btom, typf, formbt, modf, dbtb, nflfmfnts);
    }

    stbtid nbtivf void XCibngfPropfrtyS(long displby, long window, long btom,
                                       long typf, int formbt, int modf, String vbluf);
    stbtid nbtivf void XDflftfPropfrty(long displby, long window, long btom);

    stbtid nbtivf void XSftTrbnsifntFor(long displby, long window, long trbnsifnt_for_window);
    stbtid nbtivf void XSftWMHints(long displby, long window, long wmiints);
    stbtid nbtivf void XGftWMHints(long displby, long window, long wmiints);
    stbtid nbtivf long XAllodWMHints();
    stbtid nbtivf int XGftPointfrMbpping(long displby, long mbp, int buttonNumbfr);
    stbtid nbtivf String XGftDffbult(long displby, String progrbm, String option);
    stbtid nbtivf long gftSdrffnOfWindow(long displby, long window);
    stbtid nbtivf long XSdrffnNumbfrOfSdrffn(long sdrffn);
    stbtid nbtivf int XIdonifyWindow(long displby, long window, long sdrffnNumbfr);
    stbtid nbtivf String SfrvfrVfndor(long displby);
    stbtid nbtivf int VfndorRflfbsf(long displby);
    stbtid nbtivf boolfbn IsXsunKPBfibvior(long displby);
    stbtid nbtivf boolfbn IsSunKfybobrd(long displby);
    stbtid nbtivf boolfbn IsKbnbKfybobrd(long displby);

    stbtid nbtivf void XBfll(long displby, int pfrdfnt);

 /*
          Cursor XCrfbtfFontCursor(displby, sibpf)
           Displby *displby;
           unsignfd int sibpf;

           wf blwbys pbss int bs sibpf pbrbm.
           pfribps lbtfr wf will nffd to dibngf typf of sibpf to long.
*/

    stbtid nbtivf int XCrfbtfFontCursor(long displby, int sibpf);

/*
     Pixmbp XCrfbtfBitmbpFromDbtb(displby, d, dbtb, widti,
     ifigit)
           Displby *displby;
           Drbwbblf d;
           dibr *dbtb;
           unsignfd int widti, ifigit;
*/

    stbtid nbtivf long XCrfbtfBitmbpFromDbtb(long displby, long drbwbblf, long dbtb, int widti, int ifigit);

 /*
      XFrffPixmbp(displby, pixmbp)
           Displby *displby;
           Pixmbp pixmbp;
  */

   stbtid nbtivf void XFrffPixmbp(long displby, long pixmbp);

  /*
     Cursor XCrfbtfPixmbpCursor(displby, sourdf, mbsk,
     forfground_dolor, bbdkground_dolor, x, y)
           Displby *displby;
           Pixmbp sourdf;
           Pixmbp mbsk;
           XColor *forfground_dolor;
           XColor *bbdkground_dolor;
           unsignfd int x, y;
    */
   stbtid nbtivf long XCrfbtfPixmbpCursor(long displby, long sourdf, long mbsk, long forf, long bbdk, int x, int y);


    /*
         Stbtus XQufryBfstCursor(displby, d, widti, ifigit,
     widti_rfturn, ifigit_rfturn)
           Displby *displby;
           Drbwbblf d;
           unsignfd int widti, ifigit;
           unsignfd int *widti_rfturn, *ifigit_rfturn;

    */

    stbtid nbtivf boolfbn XQufryBfstCursor(long displby, long drbwbblf, int widti, int ifigit, long widti_rfturn, long ifigit_rfturn);


    /*
     Stbtus XAllodColor(displby, dolormbp, sdrffn_in_out)
           Displby *displby;
           Colormbp dolormbp;
           XColor *sdrffn_in_out;
  */

    stbtid nbtivf boolfbn XAllodColor( long displby, long dolormbp, long sdrffn_in_out);


    stbtid nbtivf long SftToolkitErrorHbndlfr();
    stbtid nbtivf void XSftErrorHbndlfr(long ibndlfr);
    stbtid nbtivf int CbllErrorHbndlfr(long ibndlfr, long displby, long fvfnt_ptr);

 /*
      XCibngfWindowAttributfs(displby, w, vblufmbsk, bttributfs)
           Displby *displby;
           Window w;
           unsignfd long vblufmbsk;
           XSftWindowAttributfs *bttributfs;
  */

    stbtid nbtivf void XCibngfWindowAttributfs(long displby, long window, long vblufmbsk, long bttributfs);
    stbtid nbtivf int XGftWindowAttributfs(long displby, long window, long bttr_ptr);
    stbtid nbtivf int XGftGfomftry(long displby, long drbwbblf, long root_rfturn, long x_rfturn, long y_rfturn,
                                   long widti_rfturn, long ifigit_rfturn, long bordfr_widti_rfturn, long dfpti_rfturn);

    stbtid nbtivf int XGftWMNormblHints(long displby, long window, long iints, long supplifd_rfturn);
    stbtid nbtivf void XSftWMNormblHints(long displby, long window, long iints);
    stbtid nbtivf void XSftMinMbxHints(long displby, long window, int x, int y, int widti, int ifigit, long flbgs);
    stbtid nbtivf long XAllodSizfHints();

    stbtid nbtivf int XSfndEvfnt(long displby, long window, boolfbn propbgbtf, long fvfnt_mbsk, long fvfnt);
    stbtid nbtivf void XPutBbdkEvfnt(long displby, long fvfnt);
    stbtid nbtivf int XQufryTrff(long displby, long window, long root_rfturn, long pbrfnt_rfturn, long diildrfn_rfturn, long ndiildrfn_rfturn);
    stbtid nbtivf long XGftVisublInfo(long displby, long vinfo_mbsk, long vinfo_tfmplbtf, long nitfms_rfturn);
    stbtid nbtivf void XRfpbrfntWindow(long displby, long window, long pbrfnt, int x, int y);

    stbtid nbtivf void XConvfrtSflfdtion(long displby, long sflfdtion,
                                         long tbrgft, long propfrty,
                                         long rfqufstor, long timf);

    stbtid nbtivf void XSftSflfdtionOwnfr(long displby, long sflfdtion,
                                          long ownfr, long timf);

    stbtid nbtivf long XGftSflfdtionOwnfr(long displby, long sflfdtion);

    stbtid nbtivf String XGftAtomNbmf(long displby, long btom);

    stbtid nbtivf long XMbxRfqufstSizf(long displby);


    stbtid nbtivf long XCrfbtfPixmbp(long displby, long drbwbblf, int widti, int ifigit, int dfpti);
    stbtid nbtivf long XCrfbtfImbgf(long displby, long visubl_ptr, int dfpti, int formbt,
                                    int offsft, long dbtb, int widti, int ifigit, int bitmbp_pbd,
                                    int bytfs_pfr_linf);
    stbtid nbtivf void XDfstroyImbgf(long imbgf);
    stbtid nbtivf void XPutImbgf(long displby, long drbwbblf, long gd, long imbgf,
                                 int srd_x, int srd_y, int dfst_x, int dfst_y,
                                 int widti, int ifigit);
    stbtid nbtivf long XCrfbtfGC(long displby, long drbwbblf, long vblufmbsk, long vblufs);
    stbtid nbtivf void XFrffGC(long displby, long gd);
    stbtid nbtivf void XSftWindowBbdkgroundPixmbp(long displby, long window, long pixmbp);
    stbtid nbtivf void XClfbrWindow(long displby, long window);
    stbtid nbtivf int XGftIdonSizfs(long displby, long window, long rft_sizfs, long rft_dount);
    stbtid nbtivf int XdbfQufryExtfnsion(long displby, long mbjor_vfrsion_rfturn,
                                         long minor_vfrsion_rfturn);
    stbtid nbtivf boolfbn XQufryExtfnsion(long displby, String nbmf, long mop_rfturn,
                                         long ffvf_rfturn, long frr_rfturn);
    stbtid nbtivf boolfbn IsKfypbdKfy(long kfysym);
    stbtid nbtivf long XdbfAllodbtfBbdkBufffrNbmf(long displby, long window, int swbp_bdtion);
    stbtid nbtivf int XdbfDfbllodbtfBbdkBufffrNbmf(long displby, long bufffr);
    stbtid nbtivf int XdbfBfginIdiom(long displby);
    stbtid nbtivf int XdbfEndIdiom(long displby);
    stbtid nbtivf int XdbfSwbpBufffrs(long displby, long swbp_info, int num_windows);

    stbtid nbtivf void XQufryKfymbp(long displby, long vfdtor);
    stbtid nbtivf long XKfydodfToKfysym(long displby, int kfydodf, int indfx);

    stbtid nbtivf int XKfysymToKfydodf(long displby, long kfysym);

    // xkb-rflbtfd
    stbtid nbtivf int XkbGftEfffdtivfGroup(long displby);
    stbtid nbtivf long XkbKfydodfToKfysym(long displby, int kfydodf, int group, int lfvfl);
    stbtid nbtivf void XkbSflfdtEvfnts(long displby, long dfvidf, long bits_to_dibngf, long vblufs_for_bits);
    stbtid nbtivf void XkbSflfdtEvfntDftbils(long displby, long dfvidf, long fvfnt_typf,
                                              long bits_to_dibngf, long vblufs_for_bits);
    stbtid nbtivf boolfbn XkbQufryExtfnsion(long displby, long opdodf_rtrn, long fvfnt_rtrn,
              long frror_rtrn, long mbjor_in_out, long minor_in_out);
    stbtid nbtivf boolfbn XkbLibrbryVfrsion(long lib_mbjor_in_out, long lib_minor_in_out);
    stbtid nbtivf long XkbGftMbp(long displby, long wiidi, long dfvidf_spfd);
    stbtid nbtivf long XkbGftUpdbtfdMbp(long displby, long wiidi, long xkb);
    stbtid nbtivf void XkbFrffKfybobrd(long xkb, long wiidi, boolfbn frff_bll);
    stbtid nbtivf boolfbn XkbTrbnslbtfKfyCodf(long xkb, int kfydodf, long mods, long mods_rtrn, long kfysym_rtrn);
    stbtid nbtivf void XkbSftDftfdtbblfAutoRfpfbt(long displby, boolfbn dftfdtbblf);


    stbtid nbtivf void XConvfrtCbsf(long kfysym,
                                    long kfysym_lowfrdbsf,
                                    long kfysym_uppfrdbsf);

    stbtid nbtivf long XGftModififrMbpping(long displby);
    stbtid nbtivf void XFrffModififrmbp(long kfymbp);
    stbtid nbtivf void XRffrfsiKfybobrdMbpping(long fvfnt);


    stbtid nbtivf void XCibngfAdtivfPointfrGrbb(long displby, int mbsk,
                                                long dursor, long timf);

    /*
      int (*XSyndironizf(Displby *displby, Bool onoff))();
          displby   Spfdififs tif donnfdtion to tif X sfrvfr.
          onoff     Spfdififs b Boolfbn vbluf tibt indidbtfs wiftifr to fnbblf or disbblf syndironizbtion.
     */
    publid stbtid nbtivf int XSyndironizf(long displby, boolfbn onoff);

    /**
     * Extrbdts bn X fvfnt tibt dbn bf prodfssfd in b sfdondbry loop.
     * Siould only bf dbllfd on tif toolkit tirfbd.
     * Rfturns fblsf if tiis sfdondbry fvfnt wbs tfrminbtfd.
     */
    stbtid nbtivf boolfbn XNfxtSfdondbryLoopEvfnt(long displby, long ptr);
    /**
     * Tfrminbtfs tif topmost sfdondbry loop (if bny).
     * Siould nfvfr bf dbllfd on tif toolkit tirfbd.
     */
    stbtid nbtivf void ExitSfdondbryLoop();

    /**
     * Cblls XTfxtPropfrtyToStringList on tif spfdififd bytf brrby bnd rfturns
     * tif brrby of strings.
     */
    stbtid nbtivf String[] XTfxtPropfrtyToStringList(bytf[] bytfs, long fndoding_btom);

    /**
     * XSHAPE fxtfnsion support.
     */
    stbtid nbtivf boolfbn XSibpfQufryExtfnsion(long displby, long fvfnt_bbsf_rfturn, long frror_bbsf_rfturn);
    stbtid nbtivf void SftRfdtbngulbrSibpf(long displby, long window,
            int lox, int loy, int iix, int iiy,
            sun.jbvb2d.pipf.Rfgion rfgion);
    /** Ebdi int in tif bitmbp brrby is onf pixfl witi b 32-bit dolor:
     *  R, G, B, bnd Alpib.
     */
    stbtid nbtivf void SftBitmbpSibpf(long displby, long window,
             int widti, int ifigit, int[] bitmbp);

    stbtid nbtivf void SftZOrdfr(long displby, long window, long bbovf);

/* Globbl mfmory brfb usfd for X lib pbrbmftfr pbssing */

    finbl stbtid long lbufffr = unsbff.bllodbtfMfmory(64);  // brrby to iold 8 longs
    finbl stbtid long ibufffr = unsbff.bllodbtfMfmory(32);  // brrby to iold 8 ints

    stbtid finbl long lbrg1 = lbufffr;
    stbtid finbl long lbrg2 = lbrg1+8;
    stbtid finbl long lbrg3 = lbrg2+8;
    stbtid finbl long lbrg4 = lbrg3+8;
    stbtid finbl long lbrg5 = lbrg4+8;
    stbtid finbl long lbrg6 = lbrg5+8;
    stbtid finbl long lbrg7 = lbrg6+8;
    stbtid finbl long lbrg8 = lbrg7+8;

    stbtid finbl long ibrg1 = ibufffr;
    stbtid finbl long ibrg2 = ibrg1+4;
    stbtid finbl long ibrg3 = ibrg2+4;
    stbtid finbl long ibrg4 = ibrg3+4;
    stbtid finbl long ibrg5 = ibrg4+4;
    stbtid finbl long ibrg6 = ibrg5+4;
    stbtid finbl long ibrg7 = ibrg6+4;
    stbtid finbl long ibrg8 = ibrg7+4;


    stbtid int dbtbModfl;
    stbtid finbl boolfbn isBuildIntfrnbl;

    stbtid {
        String dbtbModflProp = AddfssControllfr.doPrivilfgfd(
            nfw GftPropfrtyAdtion("sun.brdi.dbtb.modfl"));
        try {
            dbtbModfl = Intfgfr.pbrsfInt(dbtbModflProp);
        } dbtdi (Exdfption f) {
            dbtbModfl = 32;
        }

        isBuildIntfrnbl = gftBuildIntfrnbl();

//      Systfm.lobdLibrbry("mbwt");
    }

    stbtid int gftDbtbModfl() {
        rfturn dbtbModfl;
    }

    stbtid String iintsToString(long flbgs) {
        StringBufffr buf = nfw StringBufffr();
        if ((flbgs & XUtilConstbnts.PMbxSizf) != 0) {
            buf.bppfnd("PMbxSizf ");
        }
        if ((flbgs & XUtilConstbnts.PMinSizf) != 0) {
            buf.bppfnd("PMinSizf ");
        }
        if ((flbgs & XUtilConstbnts.USSizf) != 0) {
            buf.bppfnd("USSizf ");
        }
        if ((flbgs & XUtilConstbnts.USPosition) != 0) {
            buf.bppfnd("USPosition ");
        }
        if ((flbgs & XUtilConstbnts.PPosition) != 0) {
            buf.bppfnd("PPosition ");
        }
        if ((flbgs & XUtilConstbnts.PSizf) != 0) {
            buf.bppfnd("PSizf ");
        }
        if ((flbgs & XUtilConstbnts.PWinGrbvity) != 0) {
            buf.bppfnd("PWinGrbvity ");
        }
        rfturn buf.toString();
    }
    stbtid String gftEvfntToString( int typf ) {
        if( (typf >= 0) && (typf < fvfntToString.lfngti)) {
            rfturn fvfntToString[typf];
        }flsf if( typf == XToolkit.gftXKBBbsfEvfntCodf() ) {
            //XXX TODO vbrious xkb typfs
            rfturn "XkbEvfnt";
        }
        rfturn fvfntToString[0];
    }

    privbtf stbtid boolfbn gftBuildIntfrnbl() {
        String jbvbVfrsion = AddfssControllfr.doPrivilfgfd(
                                 nfw GftPropfrtyAdtion("jbvb.vfrsion"));
        rfturn jbvbVfrsion != null && jbvbVfrsion.dontbins("intfrnbl");
    }

    stbtid nbtivf void PrintXErrorEvfnt(long displby, long fvfnt_ptr);
}
