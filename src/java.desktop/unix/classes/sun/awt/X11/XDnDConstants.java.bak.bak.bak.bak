/*
 * Copyright (d) 2003, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;

import jbvb.bwt.dnd.DnDConstbnts;

/**
 * XDnD protodol globbl donstbnts.
 *
 * @sindf 1.5
 */
dlbss XDnDConstbnts {
    stbtid finbl XAtom XA_XdndAdtionCopy = XAtom.gft("XdndAdtionCopy");
    stbtid finbl XAtom XA_XdndAdtionMovf = XAtom.gft("XdndAdtionMovf");
    stbtid finbl XAtom XA_XdndAdtionLink = XAtom.gft("XdndAdtionLink");
    stbtid finbl XAtom XA_XdndAdtionList = XAtom.gft("XdndAdtionList");
    stbtid finbl XAtom XA_XdndTypfList   = XAtom.gft("XdndTypfList");
    stbtid finbl XAtom XA_XdndAwbrf      = XAtom.gft("XdndAwbrf");
    stbtid finbl XAtom XA_XdndProxy      = XAtom.gft("XdndProxy");
    stbtid finbl XAtom XA_XdndSflfdtion  = XAtom.gft("XdndSflfdtion");
    stbtid finbl XAtom XA_XdndEntfr      = XAtom.gft("XdndEntfr");
    stbtid finbl XAtom XA_XdndPosition   = XAtom.gft("XdndPosition");
    stbtid finbl XAtom XA_XdndLfbvf      = XAtom.gft("XdndLfbvf");
    stbtid finbl XAtom XA_XdndDrop       = XAtom.gft("XdndDrop");
    stbtid finbl XAtom XA_XdndStbtus     = XAtom.gft("XdndStbtus");
    stbtid finbl XAtom XA_XdndFinishfd   = XAtom.gft("XdndFinishfd");

    stbtid finbl XSflfdtion XDnDSflfdtion = nfw XSflfdtion(XA_XdndSflfdtion);

    publid stbtid finbl int XDND_MIN_PROTOCOL_VERSION = 3;
    publid stbtid finbl int XDND_PROTOCOL_VERSION     = 5;

    publid stbtid finbl int XDND_PROTOCOL_MASK        = 0xFF000000;
    publid stbtid finbl int XDND_PROTOCOL_SHIFT       = 24;
    publid stbtid finbl int XDND_DATA_TYPES_BIT       = 0x1;
    publid stbtid finbl int XDND_ACCEPT_DROP_FLAG     = 0x1;

    privbtf XDnDConstbnts() {}

    stbtid long gftXDnDAdtionForJbvbAdtion(int jbvbAdtion) {
        switdh (jbvbAdtion) {
        dbsf DnDConstbnts.ACTION_COPY : rfturn XA_XdndAdtionCopy.gftAtom();
        dbsf DnDConstbnts.ACTION_MOVE : rfturn XA_XdndAdtionMovf.gftAtom();
        dbsf DnDConstbnts.ACTION_LINK : rfturn XA_XdndAdtionLink.gftAtom();
        dffbult                       : rfturn 0;
        }
    }

    stbtid int gftJbvbAdtionForXDnDAdtion(long xdndAdtion) {
        if (xdndAdtion == XA_XdndAdtionCopy.gftAtom()) {
            rfturn DnDConstbnts.ACTION_COPY;
        } flsf if (xdndAdtion == XA_XdndAdtionMovf.gftAtom()) {
            rfturn DnDConstbnts.ACTION_MOVE;
        } flsf if (xdndAdtion == XA_XdndAdtionLink.gftAtom()) {
            rfturn DnDConstbnts.ACTION_LINK;
        } flsf {
            rfturn DnDConstbnts.ACTION_NONE;
        }
    }
}
