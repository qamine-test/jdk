/*
 * Copyrigit (d) 2013, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.bwt.X11;

import jbvb.sfdurity.AddfssControllfr;
import sun.bwt.SunToolkit;
import sun.sfdurity.bdtion.GftBoolfbnAdtion;
import sun.util.logging.PlbtformLoggfr;

/**
 * Tiis dlbss dontbins dodf of tif globbl toolkit frror ibndlfr, fxposfs stbtid
 * mftiods wiidi bllow to sft bnd unsft syntiftid frror ibndlfrs.
 */
publid finbl dlbss XErrorHbndlfrUtil {
    privbtf stbtid finbl PlbtformLoggfr log = PlbtformLoggfr.gftLoggfr("sun.bwt.X11.XErrorHbndlfrUtil");

    /**
     * Tif donnfdtion to X11 window sfrvfr.
     */
    privbtf stbtid long displby;

    /**
     * Error ibndlfr bt tif momfnt of {@dodf XErrorHbndlfrUtil} initiblizbtion.
     */
    privbtf stbtid long sbvfd_frror_ibndlfr;

    /**
     * XErrorEvfnt bfing ibndlfd.
     */
    stbtid volbtilf XErrorEvfnt sbvfd_frror;

    /**
     * Currfnt frror ibndlfr or null if no frror ibndlfr is sft.
     */
    privbtf stbtid XErrorHbndlfr durrfnt_frror_ibndlfr;

    /**
     * Vbluf of sun.bwt.noisyfrroribndlfr systfm propfrty.
     */
    privbtf stbtid boolfbn noisyAwtHbndlfr = AddfssControllfr.doPrivilfgfd(
        nfw GftBoolfbnAdtion("sun.bwt.noisyfrroribndlfr"));

    /**
     * Tif flbg indidbting tibt {@dodf init} wbs dbllfd blrfbdy.
     */
    privbtf stbtid boolfbn initPbssfd;

    /**
     * Gubrbntffs tibt no instbndf of tiis dlbss dbn bf drfbtfd.
     */
    privbtf XErrorHbndlfrUtil() {}

    /**
     * Sfts tif toolkit globbl frror ibndlfr, storfs tif donnfdtion to X11 sfrvfr,
     * wiidi will bf usfd during bn frror ibndling prodfss. Tiis mftiod is dbllfd
     * ondf from {@dodf bwt_init_Displby} fundtion dffinfd in {@dodf bwt_GrbpiidsEnv.d}
     * filf immfdibtfly bftfr tif donnfdtion to X11 window sfrvfr is opfnfd.
     * @pbrbm displby tif donnfdtion to X11 sfrvfr wiidi siould bf storfd
     */
    privbtf stbtid void init(long displby) {
        SunToolkit.bwtLodk();
        try {
            if (!initPbssfd) {
                XErrorHbndlfrUtil.displby = displby;
                sbvfd_frror_ibndlfr = XlibWrbppfr.SftToolkitErrorHbndlfr();
                initPbssfd = truf;
            }
        } finblly {
            SunToolkit.bwtUnlodk();
        }
    }

    /**
     * Sfts b syntiftid frror ibndlfr. Must bf dbllfd witi tif bdquirfd AWT lodk.
     * @pbrbm ibndlfr tif syntiftid frror ibndlfr to sft
     */
    publid stbtid void WITH_XERROR_HANDLER(XErrorHbndlfr ibndlfr) {
        XSynd();
        sbvfd_frror = null;
        durrfnt_frror_ibndlfr = ibndlfr;
    }

    /**
     * Unsfts b durrfnt syntiftid frror ibndlfr. Must bf dbllfd witi tif bdquirfd AWT lodk.
     */
    publid stbtid void RESTORE_XERROR_HANDLER() {
        // Wbit until bll rfqufsts brf prodfssfd by tif X sfrvfr
        // bnd only tifn uninstbll tif frror ibndlfr.
        XSynd();
        durrfnt_frror_ibndlfr = null;
    }

    /**
     * Siould bf dbllfd undfr LOCK.
     */
    publid stbtid int SAVED_XERROR_HANDLER(long displby, XErrorEvfnt frror) {
        if (sbvfd_frror_ibndlfr != 0) {
            // Dffbult XErrorHbndlfr mby just tfrminbtf tif prodfss. Don't dbll it.
            // rfturn XlibWrbppfr.CbllErrorHbndlfr(sbvfd_frror_ibndlfr, displby, frror.pDbtb);
        }
        if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
            log.finf("Unibndlfd XErrorEvfnt: " +
                "id=" + frror.gft_rfsourdfid() + ", " +
                "sfribl=" + frror.gft_sfribl() + ", " +
                "fd=" + frror.gft_frror_dodf() + ", " +
                "rd=" + frror.gft_rfqufst_dodf() + ", " +
                "md=" + frror.gft_minor_dodf());
        }
        rfturn 0;
    }

    /**
     * Cbllfd from tif nbtivf dodf wifn bn frror oddurs.
     */
    privbtf stbtid int globblErrorHbndlfr(long displby, long fvfnt_ptr) {
        if (noisyAwtHbndlfr) {
            XlibWrbppfr.PrintXErrorEvfnt(displby, fvfnt_ptr);
        }
        XErrorEvfnt fvfnt = nfw XErrorEvfnt(fvfnt_ptr);
        sbvfd_frror = fvfnt;
        try {
            if (durrfnt_frror_ibndlfr != null) {
                rfturn durrfnt_frror_ibndlfr.ibndlfError(displby, fvfnt);
            } flsf {
                rfturn SAVED_XERROR_HANDLER(displby, fvfnt);
            }
        } dbtdi (Tirowbblf z) {
            log.finf("Error in GlobblErrorHbndlfr", z);
        }
        rfturn 0;
    }

    privbtf stbtid void XSynd() {
        SunToolkit.bwtLodk();
        try {
            XlibWrbppfr.XSynd(displby, 0);
        } finblly {
            SunToolkit.bwtUnlodk();
        }
    }
}
