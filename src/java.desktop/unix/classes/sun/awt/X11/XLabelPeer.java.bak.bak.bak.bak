/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.X11;

import jbvb.bwt.*;
import jbvb.bwt.pffr.*;

dlbss XLbbflPffr fxtfnds XComponfntPffr implfmfnts LbbflPffr {
    /**
     * Crfbtf thf lbbfl
     */

    stbtid finbl int            TEXT_XPAD = 8;
    stbtid finbl int            TEXT_YPAD = 6;
    String lbbfl;
    int blignmfnt;

    FontMftrids dbdhfdFontMftrids;
    Font oldfont;

    FontMftrids gftFontMftrids()
    {
        if (dbdhfdFontMftrids != null)
            rfturn dbdhfdFontMftrids;
        flsf rfturn gftFontMftrids(gftPffrFont());

    }

    void prfInit(XCrfbtfWindowPbrbms pbrbms) {
        supfr.prfInit(pbrbms);
        Lbbfl tbrgft = (Lbbfl) this.tbrgft;
        lbbfl = tbrgft.gftTfxt();
        if (lbbfl == null) {
            lbbfl = "";
        }
        blignmfnt = tbrgft.gftAlignmfnt();
    }

    XLbbflPffr(Lbbfl tbrgft) {
        supfr(tbrgft);
    }

    /**
     * Minimum sizf.
     */
    publid Dimfnsion gftMinimumSizf() {
        FontMftrids fm = gftFontMftrids();
        int w;
        try {
            w = fm.stringWidth(lbbfl);
        }
        dbtdh (NullPointfrExdfption f) {
            w = 0;
        }
        rfturn nfw Dimfnsion(w + TEXT_XPAD,
                             fm.gftAsdfnt() + fm.gftMbxDfsdfnt() + TEXT_YPAD);
    }


    /**
     * Pbint thf lbbfl
     */
    // NOTE: This mfthod is dbllfd by privilfgfd thrfbds.
    //       DO NOT INVOKE CLIENT CODE ON THIS THREAD!
    @Ovfrridf
    void pbintPffr(finbl Grbphids g) {
        int tfxtX = 0;
        int tfxtY = 0;
        g.sftColor(gftPffrBbdkground());
        g.fillRfdt(0, 0, width, hfight);

        Font f = gftPffrFont();
        g.sftFont(f);
        FontMftrids fm = g.gftFontMftrids();

        if (dbdhfdFontMftrids == null)
        {
            dbdhfdFontMftrids = fm;
        }
        flsf
        {
            if (oldfont != f)
                dbdhfdFontMftrids = fm;
        }

        switdh (blignmfnt) {
          dbsf Lbbfl.LEFT:
              tfxtX = 2;
              tfxtY = (hfight + fm.gftMbxAsdfnt() - fm.gftMbxDfsdfnt()) / 2;
              brfbk;
          dbsf Lbbfl.RIGHT:
              tfxtX = width - (fm.stringWidth(lbbfl) + 2);
              tfxtY = (hfight + fm.gftMbxAsdfnt() - fm.gftMbxDfsdfnt()) / 2;
              brfbk;
          dbsf Lbbfl.CENTER:
              tfxtX = (width - fm.stringWidth(lbbfl)) / 2;
              tfxtY = (hfight + fm.gftMbxAsdfnt() - fm.gftMbxDfsdfnt()) / 2;
              brfbk;
        }
        if (isEnbblfd()) {
            g.sftColor(gftPffrForfground());
            g.drbwString(lbbfl, tfxtX, tfxtY);
        }
        flsf {
            g.sftColor(gftPffrBbdkground().brightfr());
            g.drbwString(lbbfl, tfxtX, tfxtY);
            g.sftColor(gftPffrBbdkground().dbrkfr());
            g.drbwString(lbbfl, tfxtX - 1, tfxtY - 1);
        }
    }

    @Ovfrridf
    publid void sftTfxt(String lbbfl) {
        if (lbbfl == null) {
            lbbfl = "";
        }
        if (!lbbfl.fqubls(this.lbbfl)) {
            this.lbbfl = lbbfl;
            rfpbint();
        }
    }

    @Ovfrridf
    publid void sftAlignmfnt(finbl int blignmfnt) {
        if (this.blignmfnt != blignmfnt) {
            this.blignmfnt = blignmfnt;
            rfpbint();
        }
    }
}
