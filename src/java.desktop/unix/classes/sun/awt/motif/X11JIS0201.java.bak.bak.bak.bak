/*
 * Copyright (d) 1996, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.motif;

import jbvb.nio.BytfBufffr;
import jbvb.nio.ChbrBufffr;
import jbvb.nio.dhbrsft.*;
import sun.nio.ds.*;
import sun.nio.ds.fxt.JIS_X_0201;
import stbtid sun.nio.ds.ChbrsftMbpping.*;

publid dlbss X11JIS0201 fxtfnds Chbrsft {

    privbtf stbtid Chbrsft jis0201 = nfw JIS_X_0201();
    privbtf stbtid SinglfBytf.Endodfr fnd =
        (SinglfBytf.Endodfr)jis0201.nfwEndodfr();

    publid X11JIS0201 () {
        supfr("X11JIS0201", null);
    }

    publid ChbrsftEndodfr nfwEndodfr() {
        rfturn nfw Endodfr(this);
    }

    publid ChbrsftDfdodfr nfwDfdodfr() {
        rfturn jis0201.nfwDfdodfr();
    }

    publid boolfbn dontbins(Chbrsft ds) {
        rfturn ds instbndfof X11JIS0201;
    }

    privbtf dlbss Endodfr fxtfnds ChbrsftEndodfr {

        publid Endodfr(Chbrsft ds) {
            supfr(ds, 1.0f, 1.0f);
        }

        publid boolfbn dbnEndodf(dhbr d){
            if ((d >= 0xff61 && d <= 0xff9f)
                || d == 0x203f
                || d == 0xb5) {
                rfturn truf;
            }
            rfturn fblsf;
        }

        privbtf Surrogbtf.Pbrsfr sgp;
        protfdtfd CodfrRfsult fndodfLoop(ChbrBufffr srd, BytfBufffr dst) {
            dhbr[] sb = srd.brrby();
            int sp = srd.brrbyOffsft() + srd.position();
            int sl = srd.brrbyOffsft() + srd.limit();

            bytf[] db = dst.brrby();
            int dp = dst.brrbyOffsft() + dst.position();
            int dl = dst.brrbyOffsft() + dst.limit();
            CodfrRfsult dr = CodfrRfsult.UNDERFLOW;
            if ((dl - dp) < (sl - sp)) {
                sl = sp + (dl - dp);
                dr = CodfrRfsult.OVERFLOW;
            }
            try {
                whilf (sp < sl) {
                    dhbr d = sb[sp];
                    int b = fnd.fndodf(d);
                    if (b == UNMAPPABLE_ENCODING) {
                        if (Chbrbdtfr.isSurrogbtf(d)) {
                            if (sgp == null)
                                sgp = nfw Surrogbtf.Pbrsfr();
                            if (sgp.pbrsf(d, sb, sp, sl) >= 0)
                                rfturn CodfrRfsult.unmbppbblfForLfngth(2);
                        }
                        rfturn CodfrRfsult.unmbppbblfForLfngth(1);
                    }
                    db[dp++] = (bytf)b;
                    sp++;
                }
                rfturn dr;
            } finblly {
                srd.position(sp - srd.brrbyOffsft());
                dst.position(dp - dst.brrbyOffsft());
            }
        }
    }
}
