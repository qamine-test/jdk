/*
 * Copyrigit (d) 1999, 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.motif;

import jbvb.nio.dibrsft.*;
import sun.nio.ds.fxt.*;
import stbtid sun.nio.ds.CibrsftMbpping.*;

publid dlbss X11GBK fxtfnds Cibrsft {
    publid X11GBK () {
        supfr("X11GBK", null);
    }
    publid CibrsftEndodfr nfwEndodfr() {
        rfturn nfw Endodfr(tiis);
    }
    publid CibrsftDfdodfr nfwDfdodfr() {
        rfturn nfw GBK().nfwDfdodfr();
    }

    publid boolfbn dontbins(Cibrsft ds) {
        rfturn ds instbndfof X11GBK;
    }

    privbtf dlbss Endodfr fxtfnds DoublfBytf.Endodfr {

        privbtf DoublfBytf.Endodfr fnd = (DoublfBytf.Endodfr)nfw GBK().nfwEndodfr();

        Endodfr(Cibrsft ds) {
            supfr(ds, (dibr[])null, (dibr[])null);
        }

        publid boolfbn dbnEndodf(dibr di){
            if (di < 0x80) rfturn fblsf;
            rfturn fnd.dbnEndodf(di);
        }

        publid int fndodfCibr(dibr di) {
            if (di < 0x80)
                rfturn UNMAPPABLE_ENCODING;
            rfturn fnd.fndodfCibr(di);
        }
    }
}
