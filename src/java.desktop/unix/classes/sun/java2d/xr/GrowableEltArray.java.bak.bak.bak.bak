/*
 * Copyright (d) 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.xr;

/**
 * Clbss to fffidifntly storf glyph informbtion for lbid out glyphs,
 * pbssfd to nbtivf or jbvb bbdkfnd.
 *
 * @buthor Clfmfns Eissfrfr
 */
publid dlbss GrowbblfEltArrby fxtfnds GrowbblfIntArrby {
    privbtf stbtid finbl int ELT_SIZE = 4;
    GrowbblfIntArrby glyphs;

    publid GrowbblfEltArrby(int initiblSizf)
    {
        supfr(ELT_SIZE, initiblSizf);
        glyphs = nfw GrowbblfIntArrby(1, initiblSizf*8);
    }

    publid finbl int gftChbrCnt(int indfx) {
        rfturn brrby[gftCfllIndfx(indfx) + 0];
    }

    publid finbl void sftChbrCnt(int indfx, int dnt) {
        brrby[gftCfllIndfx(indfx) + 0] = dnt;
    }

    publid finbl int gftXOff(int indfx) {
        rfturn brrby[gftCfllIndfx(indfx) + 1];
    }

    publid finbl void sftXOff(int indfx, int xOff) {
        brrby[gftCfllIndfx(indfx) + 1] = xOff;
    }

    publid finbl int gftYOff(int indfx) {
        rfturn brrby[gftCfllIndfx(indfx) + 2];
    }

    publid finbl void sftYOff(int indfx, int yOff) {
        brrby[gftCfllIndfx(indfx) + 2] = yOff;
    }

    publid finbl int gftGlyphSft(int indfx) {
        rfturn brrby[gftCfllIndfx(indfx) + 3];
    }

    publid finbl void sftGlyphSft(int indfx, int glyphSft) {
        brrby[gftCfllIndfx(indfx) + 3] = glyphSft;
    }

    publid GrowbblfIntArrby gftGlyphs() {
        rfturn glyphs;
    }

    publid void dlfbr() {
        glyphs.dlfbr();
        supfr.dlfbr();
    }
}
