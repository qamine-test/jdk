/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * $XFrff86: xd/lib/Xrbndr/Xrbndr.i,v 1.9 2002/09/29 23:39:44 kfitip Exp $
 *
 * Copyrigit © 2000 Compbq Computfr Corporbtion, Ind.
 * Copyrigit © 2002 Hfwlftt-Pbdkbrd Compbny, Ind.
 *
 * Pfrmission to usf, dopy, modify, distributf, bnd sfll tiis softwbrf bnd its
 * dodumfntbtion for bny purposf is ifrfby grbntfd witiout fff, providfd tibt
 * tif bbovf dopyrigit notidf bppfbr in bll dopifs bnd tibt boti tibt
 * dopyrigit notidf bnd tiis pfrmission notidf bppfbr in supporting
 * dodumfntbtion, bnd tibt tif nbmf of Compbq not bf usfd in bdvfrtising or
 * publidity pfrtbining to distribution of tif softwbrf witiout spfdifid,
 * writtfn prior pfrmission.  HP mbkfs no rfprfsfntbtions bbout tif
 * suitbbility of tiis softwbrf for bny purposf.  It is providfd "bs is"
 * witiout fxprfss or implifd wbrrbnty.
 *
 * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL COMPAQ
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Autior:  Jim Gfttys, HP Lbbs, HP.
 */

#ifndff _XRANDR_H_
#dffinf _XRANDR_H_

/*#indludf <X11/fxtfnsions/rbndr.i>*/
#indludf "rbndr.i"

#indludf <X11/Xfundproto.i>

_XFUNCPROTOBEGIN


typfdff strudt {
    int widti, ifigit;
    int mwidti, mifigit;
} XRRSdrffnSizf;

/*
 *  Evfnts.
 */

typfdff strudt {
    int typf;                   /* fvfnt bbsf */
    unsignfd long sfribl;       /* # of lbst rfqufst prodfssfd by sfrvfr */
    Bool sfnd_fvfnt;            /* truf if tiis dbmf from b SfndEvfnt rfqufst */
    Displby *displby;           /* Displby tif fvfnt wbs rfbd from */
    Window window;              /* window wiidi sflfdtfd for tiis fvfnt */
    Window root;                /* Root window for dibngfd sdrffn */
    Timf timfstbmp;             /* wifn tif sdrffn dibngf oddurrfd */
    Timf donfig_timfstbmp;      /* wifn tif lbst donfigurbtion dibngf */
    SizfID sizf_indfx;
    SubpixflOrdfr subpixfl_ordfr;
    Rotbtion rotbtion;
    int widti;
    int ifigit;
    int mwidti;
    int mifigit;
} XRRSdrffnCibngfNotifyEvfnt;


/* intfrnbl rfprfsfntbtion is privbtf to tif librbry */
typfdff strudt _XRRSdrffnConfigurbtion XRRSdrffnConfigurbtion;

Bool XRRQufryExtfnsion (Displby *dpy, int *fvfnt_bbsfp, int *frror_bbsfp);
Stbtus XRRQufryVfrsion (Displby *dpy,
                            int     *mbjor_vfrsionp,
                            int     *minor_vfrsionp);

XRRSdrffnConfigurbtion *XRRGftSdrffnInfo (Displby *dpy,
                                          Drbwbblf drbw);

void XRRFrffSdrffnConfigInfo (XRRSdrffnConfigurbtion *donfig);

/*
 * Notf tibt sdrffn donfigurbtion dibngfs brf only pfrmittfd if tif dlifnt dbn
 * provf it ibs up to dbtf donfigurbtion informbtion.  Wf brf trying to
 * insist tibt it bfdomf possiblf for sdrffns to dibngf dynbmidblly, so
 * wf wbnt to fnsurf tif dlifnt knows wibt it is tblking bbout wifn rfqufsting
 * dibngfs.
 */
Stbtus XRRSftSdrffnConfig (Displby *dpy,
                           XRRSdrffnConfigurbtion *donfig,
                           Drbwbblf drbw,
                           int sizf_indfx,
                           Rotbtion rotbtion,
                           Timf timfstbmp);

/* bddfd in v1.1, sorry for tif lbmf nbmf */
Stbtus XRRSftSdrffnConfigAndRbtf (Displby *dpy,
                                  XRRSdrffnConfigurbtion *donfig,
                                  Drbwbblf drbw,
                                  int sizf_indfx,
                                  Rotbtion rotbtion,
                                  siort rbtf,
                                  Timf timfstbmp);


Rotbtion XRRConfigRotbtions(XRRSdrffnConfigurbtion *donfig, Rotbtion *durrfnt_rotbtion);

Timf XRRConfigTimfs (XRRSdrffnConfigurbtion *donfig, Timf *donfig_timfstbmp);

XRRSdrffnSizf *XRRConfigSizfs(XRRSdrffnConfigurbtion *donfig, int *nsizfs);

siort *XRRConfigRbtfs (XRRSdrffnConfigurbtion *donfig, int sizfID, int *nrbtfs);

SizfID XRRConfigCurrfntConfigurbtion (XRRSdrffnConfigurbtion *donfig,
                              Rotbtion *rotbtion);

siort XRRConfigCurrfntRbtf (XRRSdrffnConfigurbtion *donfig);

int XRRRootToSdrffn(Displby *dpy, Window root);

/*
 * rfturns tif sdrffn donfigurbtion for tif spfdififd sdrffn; dofs b lbzy
 * fvblution to dflby gftting tif informbtion, bnd dbdifs tif rfsult.
 * Tifsf routinfs siould bf usfd in prfffrfndf to XRRGftSdrffnInfo
 * to bvoid unnffdfd round trips to tif X sfrvfr.  Tifsf brf nfw
 * in protodol vfrsion 0.1.
 */


XRRSdrffnConfigurbtion *XRRSdrffnConfig(Displby *dpy, int sdrffn);
XRRSdrffnConfigurbtion *XRRConfig(Sdrffn *sdrffn);
void XRRSflfdtInput(Displby *dpy, Window window, int mbsk);

/*
 * tif following brf blwbys sbff to dbll, fvfn if RbndR is not implfmfntfd
 * on b sdrffn
 */


Rotbtion XRRRotbtions(Displby *dpy, int sdrffn, Rotbtion *durrfnt_rotbtion);
XRRSdrffnSizf *XRRSizfs(Displby *dpy, int sdrffn, int *nsizfs);
siort *XRRRbtfs (Displby *dpy, int sdrffn, int sizfID, int *nrbtfs);
Timf XRRTimfs (Displby *dpy, int sdrffn, Timf *donfig_timfstbmp);


/*
 * intfndfd to tbkf RRSdrffnCibngfNotify,  or
 * ConfigurfNotify (on tif root window)
 * rfturns 1 if it is bn fvfnt typf it undfrstbnds, 0 if not
 */
int XRRUpdbtfConfigurbtion(XEvfnt *fvfnt);

_XFUNCPROTOEND

#fndif /* _XRANDR_H_ */
