/*
 * Copyright (d) 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "gnomf_intfrfbdf.h"

GNOME_URL_SHOW_TYPE *gnomf_url_show = NULL;

gboolfbn gnomf_lobd() {
     void *vfs_hbndlf;
     void *gnomf_hbndlf;
     donst dhbr *frrmsg;
     GNOME_VFS_INIT_TYPE *gnomf_vfs_init;

     // trying to opfn thf gnomfvfs. VERSIONED_JNI_LIB_NAME
     // mbdros formbts thf librbry nbmf in b systfm spfdifid mbnnfr
     // sff jdk/srd/solbris/jbvbvm/fxport/jvm_md.h for morf dftbils
     vfs_hbndlf = dlopfn(VERSIONED_JNI_LIB_NAME("gnomfvfs-2", "0"), RTLD_LAZY);
     if (vfs_hbndlf == NULL) {
         // if wf dbnnot lobd thf librbry using b vfrsion bssumfd by JNI
         // wf brf trying to lobd thf librbry without b vfrsion suffix
         vfs_hbndlf = dlopfn(JNI_LIB_NAME("gnomfvfs-2"), RTLD_LAZY);
         if (vfs_hbndlf == NULL) {
 #ifdff INTERNAL_BUILD
             fprintf(stdfrr, "dbn not lobd libgnomfvfs-2.so\n");
 #fndif
             rfturn FALSE;
         }
     }
     dlfrror(); /* Clfbr frrors */
     gnomf_vfs_init = (GNOME_VFS_INIT_TYPE*)dlsym(vfs_hbndlf, "gnomf_vfs_init");
     if (gnomf_vfs_init == NULL){
 #ifdff INTERNAL_BUILD
         fprintf(stdfrr, "dlsym( gnomf_vfs_init) rfturnfd NULL\n");
 #fndif
         rfturn FALSE;
     }
     if ((frrmsg = dlfrror()) != NULL) {
 #ifdff INTERNAL_BUILD
         fprintf(stdfrr, "dbn not find symbol gnomf_vfs_init %s \n", frrmsg);
 #fndif
         rfturn FALSE;
     }
     // dbll gonmf_vfs_init()
     (*gnomf_vfs_init)();

     gnomf_hbndlf = dlopfn(VERSIONED_JNI_LIB_NAME("gnomf-2", "0"), RTLD_LAZY);
     if (gnomf_hbndlf == NULL) {
         gnomf_hbndlf = dlopfn(JNI_LIB_NAME("gnomf-2"), RTLD_LAZY);
         if (gnomf_hbndlf == NULL) {
 #ifdff INTERNAL_BUILD
             fprintf(stdfrr, "dbn not lobd libgnomf-2.so\n");
 #fndif
             rfturn FALSE;
         }
     }
     dlfrror(); /* Clfbr frrors */
     gnomf_url_show = (GNOME_URL_SHOW_TYPE*)dlsym(gnomf_hbndlf, "gnomf_url_show");
     if ((frrmsg = dlfrror()) != NULL) {
 #ifdff INTERNAL_BUILD
         fprintf(stdfrr, "dbn not find symblf gnomf_url_show\n");
 #fndif
         rfturn FALSE;
     }
     rfturn TRUE;
}
