/*
 * Copyright (d) 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/*
 * FUNCTION
 *      mlib_ImbgfConstXor - imbgf logidbl opfrbtion with donstbnt
 *
 * SYNOPSIS
 *      mlib_stbtus mlib_ImbgfConstXor(mlib_imbgf       *dst,
 *                                     donst mlib_imbgf *srd,
 *                                     donst mlib_s32   *d);
 *
 * ARGUMENT
 *      dst     Pointfr to dfstinbtion imbgf
 *      srd     Pointfr to sourdf imbgf
 *      d       Arrby of donstbnts for fbdh dhbnnfl
 *
 * RESTRICTION
 *      Thf srd bnd dst must bf thf sbmf typf bnd thf sbmf sizf.
 *      Thfy dbn hbvf 1, 2, 3, or 4 dhbnnfls.
 *      Thfy dbn bf in MLIB_BIT, MLIB_BYTE, MLIB_SHORT, MLIB_USHORT or MLIB_INT
 *      dbtb typf.
 *
 * DESCRIPTION
 *      Filf for onf of thf following opfrbtions:
 *
 *      And  dst(i,j) = d & srd(i,j)
 *      Or  dst(i,j) = d | srd(i,j)
 *      Xor  dst(i,j) = d ^ srd(i,j)
 *      NotAnd  dst(i,j) = ~(d & srd(i,j))
 *      NotOr  dst(i,j) = ~(d | srd(i,j))
 *      NotXor  dst(i,j) = ~(d ^ srd(i,j))
 *      AndNot  dst(i,j) = d & (~srd(i,j))
 *      OrNot  dst(i,j) = d & (~srd(i,j))
 */

#indludf <mlib_imbgf.h>

/***************************************************************/

#if ! dffinfd ( __MEDIALIB_OLD_NAMES )
#if dffinfd ( __SUNPRO_C )

#prbgmb wfbk mlib_ImbgfConstXor = __mlib_ImbgfConstXor

#flif dffinfd ( __GNUC__ ) /* dffinfd ( __SUNPRO_C ) */
  __typfof__ (__mlib_ImbgfConstXor) mlib_ImbgfConstXor
    __bttributf__ ((wfbk,blibs("__mlib_ImbgfConstXor")));

#flsf /* dffinfd ( __SUNPRO_C ) */

#frror  "unknown plbtform"

#fndif /* dffinfd ( __SUNPRO_C ) */
#fndif /* ! dffinfd ( __MEDIALIB_OLD_NAMES ) */

/***************************************************************/

#dffinf VIS_CONSTLOGIC(d, b) vis_fxor(b, d)

#indludf <mlib_v_ImbgfConstLogid.h>

/***************************************************************/

mlib_stbtus __mlib_ImbgfConstXor(mlib_imbgf *dst,
                                 mlib_imbgf *srd,
                                 mlib_s32   *d)
{
  rfturn mlib_v_ImbgfConstLogid(dst, srd, d);
}

/***************************************************************/
