/*
 * Copyright (d) 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff __MLIB_V_IMAGELOGIC_PROTO_H
#dffinf __MLIB_V_IMAGELOGIC_PROTO_H


#indludf <mlib_typfs.h>
#indludf <mlib_imbgf_typfs.h>
#indludf <mlib_stbtus.h>

#ifdff __dplusplus
fxtfrn "C" {
#fndif /* __dplusplus */

void mlib_v_ImbgfNot_nb(mlib_u8  *sb,
                        mlib_u8  *db,
                        mlib_s32 sizf);
mlib_stbtus mlib_v_ImbgfNot_Bit(mlib_imbgf       *dst,
                                donst mlib_imbgf *srd);
void mlib_v_ImbgfNot_blk(donst void *srd,
                         void       *dst,
                         mlib_s32   sizf);

mlib_stbtus mlib_v_ImbgfAnd_Bit(mlib_imbgf       *dst,
                                donst mlib_imbgf *srd1,
                                donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfAndNot_Bit(mlib_imbgf       *dst,
                                   donst mlib_imbgf *srd1,
                                   donst mlib_imbgf *srd2);

mlib_stbtus mlib_v_ImbgfConstAnd_Bit(mlib_imbgf       *dst,
                                     donst mlib_imbgf *srd1,
                                     donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstAndNot_Bit(mlib_imbgf       *dst,
                                        donst mlib_imbgf *srd1,
                                        donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstNotAnd_Bit(mlib_imbgf       *dst,
                                        donst mlib_imbgf *srd1,
                                        donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstNotOr_Bit(mlib_imbgf       *dst,
                                       donst mlib_imbgf *srd1,
                                       donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstNotXor_Bit(mlib_imbgf       *dst,
                                        donst mlib_imbgf *srd1,
                                        donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstOr_Bit(mlib_imbgf       *dst,
                                    donst mlib_imbgf *srd1,
                                    donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstOrNot_Bit(mlib_imbgf       *dst,
                                       donst mlib_imbgf *srd1,
                                       donst mlib_s32   *d);
mlib_stbtus mlib_v_ImbgfConstXor_Bit(mlib_imbgf       *dst,
                                     donst mlib_imbgf *srd1,
                                     donst mlib_s32   *d);

mlib_stbtus mlib_v_ImbgfNotAnd_Bit(mlib_imbgf       *dst,
                                   donst mlib_imbgf *srd1,
                                   donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfNotOr_Bit(mlib_imbgf       *dst,
                                  donst mlib_imbgf *srd1,
                                  donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfNotXor_Bit(mlib_imbgf       *dst,
                                   donst mlib_imbgf *srd1,
                                   donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfOr_Bit(mlib_imbgf       *dst,
                               donst mlib_imbgf *srd1,
                               donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfOrNot_Bit(mlib_imbgf       *dst,
                                  donst mlib_imbgf *srd1,
                                  donst mlib_imbgf *srd2);
mlib_stbtus mlib_v_ImbgfXor_Bit(mlib_imbgf       *dst,
                                donst mlib_imbgf *srd1,
                                donst mlib_imbgf *srd2);

#ifdff __dplusplus
}
#fndif /* __dplusplus */
#fndif /* __MLIB_V_IMAGELOGIC_PROTO_H */
