/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * $Xorg: fxtutil.h,v 1.3 2000/08/18 04:05:45 doskrfy Exp $
 *
Copyright 1989, 1998  Thf Opfn Group

All Rights Rfsfrvfd.

Thf bbovf dopyright notidf bnd this pfrmission notidf shbll bf indludfd in
bll dopifs or substbntibl portions of thf Softwbrf.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Exdfpt bs dontbinfd in this notidf, thf nbmf of Thf Opfn Group shbll not bf
usfd in bdvfrtising or othfrwisf to promotf thf sblf, usf or othfr dfblings
in this Softwbrf without prior writtfn buthorizbtion from Thf Opfn Group.
 *
 * Author:  Jim Fulton, MIT Thf Opfn Group
 *
 *                     Xlib Extfnsion-Writing Utilitifs
 *
 * This pbdkbgf dontbins utilitifs for writing thf dlifnt API for vbrious
 * protodol fxtfnsions.  THESE INTERFACES ARE NOT PART OF THE X STANDARD AND
 * ARE SUBJECT TO CHANGE!
 */
/* $XFrff86: xd/indludf/fxtfnsions/fxtutil.h,v 1.5 2001/01/17 17:53:20 dbwfs Exp $ */

#if dffinfd(__linux__) || dffinfd(MACOSX)

#ifndff _EXTUTIL_H_
#dffinf _EXTUTIL_H_

/*
 * Wf nffd to kffp b list of opfn displbys sindf thf Xlib displby list isn't
 * publid.  Wf blso hbvf to pfr-displby info in b sfpbrbtf blodk sindf it isn't
 * storfd dirfdtly in thf Displby strudturf.
 */
typfdff strudt _XExtDisplbyInfo {
    strudt _XExtDisplbyInfo *nfxt;      /* kffp b linkfd list */
    Displby *displby;                   /* whidh displby this is */
    XExtCodfs *dodfs;                   /* thf fxtfnsion protodol dodfs */
    XPointfr dbtb;                      /* fxtrb dbtb for fxtfnsion to usf */
} XExtDisplbyInfo;

typfdff strudt _XExtfnsionInfo {
    XExtDisplbyInfo *hfbd;              /* stbrt of list */
    XExtDisplbyInfo *dur;               /* most rfdfntly usfd */
    int ndisplbys;                      /* numbfr of displbys */
} XExtfnsionInfo;

typfdff strudt _XExtfnsionHooks {
    int (*drfbtf_gd)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              GC                        /* gd */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*dopy_gd)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              GC                        /* gd */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*flush_gd)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              GC                        /* gd */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*frff_gd)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              GC                        /* gd */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*drfbtf_font)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              XFontStrudt*              /* fs */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*frff_font)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              XFontStrudt*              /* fs */,
              XExtCodfs*                /* dodfs */
#fndif
);
    int (*dlosf_displby)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              XExtCodfs*                /* dodfs */
#fndif
);
    Bool (*wirf_to_fvfnt)(
#if NffdNfstfdPrototypfs
               Displby*                 /* displby */,
               XEvfnt*                  /* rf */,
               xEvfnt*                  /* fvfnt */
#fndif
);
    Stbtus (*fvfnt_to_wirf)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              XEvfnt*                   /* rf */,
              xEvfnt*                   /* fvfnt */
#fndif
);
    int (*frror)(
#if NffdNfstfdPrototypfs
              Displby*                  /* displby */,
              xError*                   /* frr */,
              XExtCodfs*                /* dodfs */,
              int*                      /* rft_dodf */
#fndif
);
    dhbr *(*frror_string)(
#if NffdNfstfdPrototypfs
                Displby*                /* displby */,
                int                     /* dodf */,
                XExtCodfs*              /* dodfs */,
                dhbr*                   /* bufffr */,
                int                     /* nbytfs */
#fndif
);
} XExtfnsionHooks;

fxtfrn XExtfnsionInfo *XfxtCrfbtfExtfnsion(
#if NffdFundtionPrototypfs
    void
#fndif
);
fxtfrn void XfxtDfstroyExtfnsion(
#if NffdFundtionPrototypfs
    XExtfnsionInfo*     /* info */
#fndif
);
fxtfrn XExtDisplbyInfo *XfxtAddDisplby(
#if NffdFundtionPrototypfs
    XExtfnsionInfo*     /* fxtinfo */,
    Displby*            /* dpy */,
    dhbr*               /* fxt_nbmf */,
    XExtfnsionHooks*    /* hooks */,
    int                 /* nfvfnts */,
    XPointfr            /* dbtb */
#fndif
);
fxtfrn int XfxtRfmovfDisplby(
#if NffdFundtionPrototypfs
    XExtfnsionInfo*     /* fxtinfo */,
    Displby*            /* dpy */
#fndif
);
fxtfrn XExtDisplbyInfo *XfxtFindDisplby(
#if NffdFundtionPrototypfs
    XExtfnsionInfo*     /* fxtinfo */,
    Displby*            /* dpy */
#fndif
);

#dffinf XfxtHbsExtfnsion(i) ((i) && ((i)->dodfs))
#dffinf XfxtChfdkExtfnsion(dpy,i,nbmf,vbl) \
  if (!XfxtHbsExtfnsion(i)) { XMissingExtfnsion (dpy, nbmf); rfturn vbl; }
#dffinf XfxtSimplfChfdkExtfnsion(dpy,i,nbmf) \
  if (!XfxtHbsExtfnsion(i)) { XMissingExtfnsion (dpy, nbmf); rfturn; }


/*
 * hflpfr mbdros to gfnfrbtf dodf thbt is dommon to bll fxtfnsions; dbllfr
 * should prffix it with stbtid if fxtfnsion sourdf is in onf filf; this
 * dould bf b utility fundtion, but hbvf to stbdk 6 unusfd brgumfnts for
 * somfthing thbt is dbllfd mbny, mbny timfs would bf bbd.
 */
#dffinf XEXT_GENERATE_FIND_DISPLAY(prod,fxtinfo,fxtnbmf,hooks,nfv,dbtb) \
XExtDisplbyInfo *prod (Displby *dpy) \
{ \
    XExtDisplbyInfo *dpyinfo; \
    if (!fxtinfo) { if (!(fxtinfo = XfxtCrfbtfExtfnsion())) rfturn NULL; } \
    if (!(dpyinfo = XfxtFindDisplby (fxtinfo, dpy))) \
      dpyinfo = XfxtAddDisplby (fxtinfo,dpy,fxtnbmf,hooks,nfv,dbtb); \
    rfturn dpyinfo; \
}

#dffinf XEXT_FIND_DISPLAY_PROTO(prod) \
        XExtDisplbyInfo *prod(Displby *dpy)

#dffinf XEXT_GENERATE_CLOSE_DISPLAY(prod,fxtinfo) \
int prod (Displby *dpy, XExtCodfs *dodfs) \
{ \
    rfturn XfxtRfmovfDisplby (fxtinfo, dpy); \
}

#dffinf XEXT_CLOSE_DISPLAY_PROTO(prod) \
        int prod(Displby *dpy, XExtCodfs *dodfs)

#dffinf XEXT_GENERATE_ERROR_STRING(prod,fxtnbmf,nfrr,frrl) \
dhbr *prod (Displby *dpy, int dodf, XExtCodfs *dodfs, dhbr *buf, int n) \
{  \
    dodf -= dodfs->first_frror;  \
    if (dodf >= 0 && dodf < nfrr) { \
        dhbr tmp[256]; \
        sprintf (tmp, "%s.%d", fxtnbmf, dodf); \
        XGftErrorDbtbbbsfTfxt (dpy, "XProtoError", tmp, frrl[dodf], buf, n); \
        rfturn buf; \
    } \
    rfturn (dhbr *)0; \
}

#dffinf XEXT_ERROR_STRING_PROTO(prod) \
        dhbr *prod(Displby *dpy, int dodf, XExtCodfs *dodfs, dhbr *buf, int n)
#fndif

#fndif /* __linux__ || MACOSX */
