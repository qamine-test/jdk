/*
 * Copyright (d) 1998, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */




/*
 * FUNCTIONS
 *      mlib_ImbgfChbnnflInsfrt   - Copy thf sourdf imbgf into thf sflfdtfd
 *                                                        dhbnnfls of thf dfstinbtion imbgf
 *
 * SYNOPSIS
 *      mlib_stbtus mlib_ImbgfChbnnflInsfrt(mlib_imbgf *dst,
 *                                                                        mlib_imbgf *srd,
 *                                                                      mlib_s32   dmbsk);
 *
 * ARGUMENT
 *  dst     Pointfr to dfstinbtion imbgf.
 *  srd     Pointfr to sourdf imbgf.
 *  dmbsk   Dfstinbtion dhbnnfl sflfdtion mbsk.
 *              Thf lfbst signifidbnt bit (LSB) is dorrfsponding to thf
 *              lbst dhbnnfl in thf dfstinbtion imbgf dbtb.
 *              Thf bits with vbluf 1 stbnd for thf dhbnnfls sflfdtfd.
 *              If morf thbn N dhbnnfls brf sflfdtfd, thf lfftmost N
 *              dhbnnfls brf insfrtfd, whfrf N is thf numbfr of dhbnnfls
 *              in thf sourdf imbgf.
 *
 * RESTRICTION
 *              Thf srd bnd dst must hbvf thf sbmf width, hfight bnd dbtb typf.
 *              Thf srd bnd dst dbn hbvf 1, 2, 3 or 4 dhbnnfls.
 *              Thf srd bnd dst dbn bf fithfr MLIB_BYTE, MLIB_SHORT, MLIB_INT,
 *          MLIB_FLOAT or MLIB_DOUBLE.
 *
 * DESCRIPTION
 *          Copy thf sourdf imbgf into thf sflfdtfd dhbnnfls of thf dfstinbtion
 *              imbgf
 */

#indludf <stdlib.h>
#indludf "mlib_imbgf.h"
#indludf "mlib_ImbgfChfdk.h"

/***************************************************************/
/* fundtions dffinfd in mlib_v_ImbgfChbnnflInsfrt_1.d */

void
mlib_v_ImbgfChbnnflInsfrt_U8(mlib_u8  *srd,  mlib_s32 slb,
                             mlib_u8  *dst,  mlib_s32 dlb,
                             mlib_s32 dhbnnfls,
                             mlib_s32 dhbnnfld,
                             mlib_s32 width,  mlib_s32 hfight,
                             mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_D64(mlib_d64  *srd,  mlib_s32 slb,
                              mlib_d64  *dst,  mlib_s32 dlb,
                              mlib_s32 dhbnnfls,
                              mlib_s32 dhbnnfld,
                              mlib_s32 width,  mlib_s32 hfight,
                              mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16(mlib_s16 *srd,  mlib_s32 slb,
                              mlib_s16 *dst,  mlib_s32 dlb,
                              mlib_s32 dhbnnfls,
                              mlib_s32 dhbnnfld,
                              mlib_s32 width,  mlib_s32 hfight,
                              mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S32(mlib_s32 *srd,  mlib_s32 slb,
                              mlib_s32 *dst,  mlib_s32 dlb,
                              mlib_s32 dhbnnfls,
                              mlib_s32 dhbnnfld,
                              mlib_s32 width,  mlib_s32 hfight,
                              mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_12_A8D1X8(mlib_u8  *srd,
                                                               mlib_u8  *dst,
                                                         mlib_s32 dsizf,
                                                         mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_12_A8D2X8(mlib_u8  *srd,  mlib_s32 slb,
                                                               mlib_u8  *dst,  mlib_s32 dlb,
                                                       mlib_s32 xsizf, mlib_s32 ysizf,
                                                               mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_12_D1(mlib_u8  *srd,
                                                           mlib_u8  *dst,
                                                   mlib_s32 dsizf,
                                                           mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_12(mlib_u8  *srd,  mlib_s32 slb,
                                                        mlib_u8  *dst,  mlib_s32 dlb,
                                                mlib_s32 xsizf, mlib_s32 ysizf,
                                                        mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_13_A8D1X8(mlib_u8  *srd,
                                                               mlib_u8  *dst,
                                                       mlib_s32 dsizf,
                                                               mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_13_A8D2X8(mlib_u8  *srd,  mlib_s32 slb,
                                                               mlib_u8  *dst,  mlib_s32 dlb,
                                                         mlib_s32 xsizf, mlib_s32 ysizf,
                                                               mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_13_D1(mlib_u8  *srd,
                                                           mlib_u8  *dst,
                                                     mlib_s32 dsizf,
                                                           mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_13(mlib_u8  *srd,  mlib_s32 slb,
                                                        mlib_u8  *dst,  mlib_s32 dlb,
                                                  mlib_s32 xsizf, mlib_s32 ysizf,
                                                        mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_14_A8D1X8(mlib_u8  *srd,
                                                               mlib_u8  *dst,
                                                       mlib_s32 dsizf,
                                                               mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_14_A8D2X8(mlib_u8  *srd,  mlib_s32 slb,
                                                               mlib_u8  *dst,  mlib_s32 dlb,
                                                       mlib_s32 xsizf, mlib_s32 ysizf,
                                                               mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_14_D1(mlib_u8  *srd,
                                                           mlib_u8  *dst,
                                                   mlib_s32 dsizf,
                                                           mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_U8_14(mlib_u8  *srd,  mlib_s32 slb,
                                                        mlib_u8  *dst,  mlib_s32 dlb,
                                                mlib_s32 xsizf, mlib_s32 ysizf,
                                                        mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_12_A8D1X4(mlib_s16 *srd,
                                                                      mlib_s16 *dst,
                                                        mlib_s32 dsizf,
                                                                mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_12_A8D2X4(mlib_s16 *srd,  mlib_s32 slb,
                                                                      mlib_s16 *dst,  mlib_s32 dlb,
                                                        mlib_s32 xsizf, mlib_s32 ysizf,
                                                                mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_12_D1(mlib_s16 *srd,
                                                            mlib_s16 *dst,
                                                    mlib_s32 dsizf,
                                                            mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_12(mlib_s16 *srd,  mlib_s32 slb,
                                                        mlib_s16 *dst,  mlib_s32 dlb,
                                                  mlib_s32 xsizf, mlib_s32 ysizf,
                                                  mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_13_A8D1X4(mlib_s16 *srd,
                                                                      mlib_s16 *dst,
                                                        mlib_s32 dsizf,
                                                                mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_13_A8D2X4(mlib_s16 *srd,  mlib_s32 slb,
                                                                      mlib_s16 *dst,  mlib_s32 dlb,
                                                        mlib_s32 xsizf, mlib_s32 ysizf,
                                                                mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_13_D1(mlib_s16 *srd,
                                                            mlib_s16 *dst,
                                                    mlib_s32 dsizf,
                                                            mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_13(mlib_s16 *srd,  mlib_s32 slb,
                                                         mlib_s16 *dst,  mlib_s32 dlb,
                                                 mlib_s32 xsizf, mlib_s32 ysizf,
                                                         mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_14_A8D1X4(mlib_s16 *srd,
                                                                      mlib_s16 *dst,
                                                          mlib_s32 dsizf,
                                                                      mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_14_A8D2X4(mlib_s16 *srd,  mlib_s32 slb,
                                                                      mlib_s16 *dst,  mlib_s32 dlb,
                                                          mlib_s32 xsizf, mlib_s32 ysizf,
                                                                      mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_14_D1(mlib_s16 *srd,
                                                            mlib_s16 *dst,
                                                    mlib_s32 dsizf,
                                                            mlib_s32 dmbsk);
void
mlib_v_ImbgfChbnnflInsfrt_S16_14(mlib_s16 *srd,  mlib_s32 slb,
                                                         mlib_s16 *dst,  mlib_s32 dlb,
                                                 mlib_s32 xsizf, mlib_s32 ysizf,
                                                         mlib_s32 dmbsk);

/***************************************************************/
/* fundtions dffinfd in mlib_v_ImbgfChbnnflInsfrt_34.d */

void
mlib_v_ImbgfChbnnflInsfrt_U8_34R_A8D1X8(mlib_u8  *srd,
                                                                mlib_u8  *dst,
                                                                mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34R_A8D2X8(mlib_u8  *srd,  mlib_s32 slb,
                                                                mlib_u8  *dst,  mlib_s32 dlb,
                                                                mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34R_D1(mlib_u8  *srd,
                                                            mlib_u8  *dst,
                                                            mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34R(mlib_u8  *srd,  mlib_s32 slb,
                                                 mlib_u8  *dst,  mlib_s32 dlb,
                                                         mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34R_A8D1X4(mlib_s16 *srd,
                                                                 mlib_s16 *dst,
                                                                 mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34R_A8D2X4(mlib_s16 *srd,  mlib_s32 slb,
                                                                 mlib_s16 *dst,  mlib_s32 dlb,
                                                                 mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34R_D1(mlib_s16 *srd,
                                                             mlib_s16 *dst,
                                                             mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34R(mlib_s16 *srd,  mlib_s32 slb,
                                                          mlib_s16 *dst,  mlib_s32 dlb,
                                                          mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34L_A8D1X8(mlib_u8  *srd,
                                                                mlib_u8  *dst,
                                                                mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34L_A8D2X8(mlib_u8  *srd,  mlib_s32 slb,
                                                                mlib_u8  *dst,  mlib_s32 dlb,
                                                        mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34L_D1(mlib_u8  *srd,
                                                            mlib_u8  *dst,
                                                            mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_U8_34L(mlib_u8  *srd,  mlib_s32 slb,
                                                         mlib_u8  *dst,  mlib_s32 dlb,
                                                         mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34L_A8D1X4(mlib_s16 *srd,
                                                                 mlib_s16 *dst,
                                                                 mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34L_A8D2X4(mlib_s16 *srd,  mlib_s32 slb,
                                                                 mlib_s16 *dst,  mlib_s32 dlb,
                                                                 mlib_s32 xsizf, mlib_s32 ysizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34L_D1(mlib_s16 *srd,
                                                             mlib_s16 *dst,
                                                             mlib_s32 dsizf);
void
mlib_v_ImbgfChbnnflInsfrt_S16_34L(mlib_s16 *srd,  mlib_s32 slb,
                                                          mlib_s16 *dst,  mlib_s32 dlb,
                                                          mlib_s32 xsizf, mlib_s32 ysizf);


/***************************************************************/

#ifdff MLIB_TEST
mlib_stbtus
mlib_v_ImbgfChbnnflInsfrt(mlib_imbgf *dst,
                                            mlib_imbgf *srd,
                                          mlib_s32   dmbsk)
#flsf
mlib_stbtus
mlib_ImbgfChbnnflInsfrt(mlib_imbgf *dst,
                                        mlib_imbgf *srd,
                                        mlib_s32   dmbsk)
#fndif
{
  donst mlib_s32  X8 = 0x7;
  donst mlib_s32  X4 = 0x3;
  donst mlib_s32  X2 = 0x1;
  donst mlib_s32  A8D1   = MLIB_IMAGE_ALIGNED8 | MLIB_IMAGE_ONEDVECTOR;
  donst mlib_s32  A8D2X8 = MLIB_IMAGE_ALIGNED8 | MLIB_IMAGE_STRIDE8X | MLIB_IMAGE_WIDTH8X;
  donst mlib_s32  A8D2X4 = MLIB_IMAGE_ALIGNED8 | MLIB_IMAGE_STRIDE8X | MLIB_IMAGE_WIDTH4X;
  donst mlib_s32  A8D2X2 = MLIB_IMAGE_ALIGNED8 | MLIB_IMAGE_STRIDE8X | MLIB_IMAGE_WIDTH2X;

  void      *sp;                      /* pointfr for pixfl in srd */
  void      *dp;                      /* pointfr for pixfl in dst */
  mlib_s32  ndmbsk = 0;         /* normblizfd dhbnnfl mbsk */
  mlib_s32  dhbnnfls;             /* numbfr of dhbnnfls for srd */
  mlib_s32  dhbnnfld;             /* numbfr of dhbnnfls for dst */
  mlib_s32  width, hfight;/* for srd bnd dst */
  mlib_s32  stridfs;              /* stridfs in bytfs for srd */
  mlib_s32  stridfd;            /* stridfs in bytfs for dst */
  mlib_s32  flbgs;
  mlib_s32  flbgd;
  mlib_s32  dsizf;
  int         i, bit1dount = 0;

  MLIB_IMAGE_CHECK(srd);
  MLIB_IMAGE_CHECK(dst);
  MLIB_IMAGE_TYPE_EQUAL(srd,dst);
  MLIB_IMAGE_SIZE_EQUAL(srd,dst);

  dhbnnfls = mlib_ImbgfGftChbnnfls(srd);
  dhbnnfld = mlib_ImbgfGftChbnnfls(dst);
  width    = mlib_ImbgfGftWidth(srd);
  hfight   = mlib_ImbgfGftHfight(srd);
  stridfs  = mlib_ImbgfGftStridf(srd);
  stridfd  = mlib_ImbgfGftStridf(dst);
  sp       = mlib_ImbgfGftDbtb(srd);
  dp       = mlib_ImbgfGftDbtb(dst);
  flbgs    = mlib_ImbgfGftFlbgs(srd);
  flbgd    = mlib_ImbgfGftFlbgs(dst);
  dsizf    = width * hfight;

  /* normblizf thf dmbsk, bnd dount thf numbfr of bit with vbluf 1 */
  for (i = (dhbnnfld - 1); i >= 0; i--) {
    if (((dmbsk & (1 << i)) != 0) && (bit1dount < dhbnnfls)) {
      ndmbsk += (1 << i);
      bit1dount++;
    }
  }

  /* do not support thf dbsfs in whidh thf numbfr of sflfdtfd dhbnnfls is
   * lfss thbn thf nubmbfr of dhbnnfls in thf sourdf imbgf */
  if (bit1dount < dhbnnfls) {
    rfturn MLIB_FAILURE;
  }

  if (((dhbnnfls == 1) && (dhbnnfld == 1)) ||
      ((dhbnnfls == 2) && (dhbnnfld == 2)) ||
      ((dhbnnfls == 3) && (dhbnnfld == 3)) ||
      ((dhbnnfls == 4) && (dhbnnfld == 4))) {
      rfturn mlib_ImbgfCopy(dst, srd);
  }

  switdh (mlib_ImbgfGftTypf(srd)) {
    dbsf MLIB_BYTE:
      if (dhbnnfls == 1) {
        switdh (dhbnnfld) {
          dbsf 2:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X8)   == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_12_A8D1X8((mlib_u8 *)sp,
                                                                             (mlib_u8 *)dp,
                                                                             dsizf,
                                                                                     ndmbsk);
            }
            flsf if (((flbgs & A8D2X8) == 0) &&
              ((flbgd & A8D2X8) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_U8_12_A8D2X8((mlib_u8 *)sp, stridfs,
                                                                             (mlib_u8 *)dp, stridfd,
                                                                             width, hfight,
                                                                                     ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_12_D1((mlib_u8 *)sp,
                                                                                 (mlib_u8 *)dp,
                                                                                 dsizf,
                                                                                 ndmbsk);
            }
            flsf {
                mlib_v_ImbgfChbnnflInsfrt_U8_12((mlib_u8 *)sp, stridfs,
                                                                      (mlib_u8 *)dp, stridfd,
                                                                      width, hfight,
                                                                              ndmbsk);
            }
            brfbk;

          dbsf 3:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X8)   == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_13_A8D1X8((mlib_u8 *)sp,
                                                                                 (mlib_u8 *)dp,
                                                                               dsizf,
                                                                                           ndmbsk);
            }
            flsf if (((flbgs & A8D2X8) == 0) &&
              ((flbgd & A8D2X8) == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_13_A8D2X8((mlib_u8 *)sp, stridfs,
                                                                                     (mlib_u8 *)dp, stridfd,
                                                                             width, hfight,
                                                                                     ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_13_D1((mlib_u8 *)sp,
                                                                                 (mlib_u8 *)dp,
                                                                                 dsizf,
                                                                                 ndmbsk);
            }
            flsf {
              mlib_v_ImbgfChbnnflInsfrt_U8_13((mlib_u8 *)sp, stridfs,
                                                                      (mlib_u8 *)dp, stridfd,
                                                                      width, hfight,
                                                                      ndmbsk);
            }
            brfbk;

          dbsf 4:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X8)   == 0)) {
                  mlib_v_ImbgfChbnnflInsfrt_U8_14_A8D1X8((mlib_u8 *)sp,
                                                                                   (mlib_u8 *)dp,
                                                                                 dsizf,
                                                                                             ndmbsk);
            }
            flsf if (((flbgs & A8D2X8) == 0) &&
               ((flbgd & A8D2X8) == 0)) {
               mlib_v_ImbgfChbnnflInsfrt_U8_14_A8D2X8((mlib_u8 *)sp, stridfs,
                                                                      (mlib_u8 *)dp, stridfd,
                                                                              width, hfight,
                                                                                          ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
              ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_U8_14_D1((mlib_u8 *)sp,
                                                                                 (mlib_u8 *)dp,
                                                                                 dsizf,
                                                                                 ndmbsk);
            }
            flsf {
              mlib_v_ImbgfChbnnflInsfrt_U8_14((mlib_u8 *)sp, stridfs,
                                                                      (mlib_u8 *)dp, stridfd,
                                                                      width, hfight,
                                                                      ndmbsk);
            }
            brfbk;

          dffbult:
            rfturn MLIB_FAILURE;
        }
      }
      flsf {
        if ((dhbnnfls == 3) && (dhbnnfld == 4) && (ndmbsk == 7)) {
          if (((flbgs & A8D1) == 0) &&
            ((flbgd & A8D1) == 0) &&
            ((dsizf & X8)   == 0)) {
            mlib_v_ImbgfChbnnflInsfrt_U8_34R_A8D1X8((mlib_u8 *)sp,
                                                                          (mlib_u8 *)dp,
                                                                          dsizf);
          }
        flsf if (((flbgs & A8D2X8) == 0) &&
               ((flbgd & A8D2X8) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_U8_34R_A8D2X8((mlib_u8 *)sp, stridfs,
                                                                                    (mlib_u8 *)dp, stridfd,
                                                                              width, hfight);
        }
        flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_U8_34R_D1((mlib_u8 *)sp,
                                                                          (mlib_u8 *)dp,
                                                                          dsizf);
        }
        flsf {
              mlib_v_ImbgfChbnnflInsfrt_U8_34R((mlib_u8 *)sp, stridfs,
                                                                      (mlib_u8 *)dp, stridfd,
                                                                      width, hfight);
        }
      }
      flsf if ((dhbnnfls == 3) && (dhbnnfld == 4) && (ndmbsk == 14)) {
        if (((flbgs & A8D1) == 0) &&
            ((flbgd & A8D1) == 0) &&
            ((dsizf & X8)   == 0)) {
            mlib_v_ImbgfChbnnflInsfrt_U8_34L_A8D1X8((mlib_u8 *)sp,
                                                                            (mlib_u8 *)dp,
                                                                          dsizf);
              }
        flsf if (((flbgs & A8D2X8) == 0) &&
                 ((flbgd & A8D2X8) == 0)) {
                 mlib_v_ImbgfChbnnflInsfrt_U8_34L_A8D2X8((mlib_u8 *)sp, stridfs,
                                                                                  (mlib_u8 *)dp, stridfd,
                                                                          width, hfight);
        }
        flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
                 ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
                 mlib_v_ImbgfChbnnflInsfrt_U8_34L_D1((mlib_u8 *)sp,
                                                                      (mlib_u8 *)dp,
                                                                      dsizf);
        }
        flsf mlib_v_ImbgfChbnnflInsfrt_U8_34L((mlib_u8 *)sp, stridfs,
                                                                   (mlib_u8 *)dp, stridfd,
                                                                   width, hfight);
        }
      flsf {

      mlib_v_ImbgfChbnnflInsfrt_U8((mlib_u8 *)sp, stridfs,
                                                     (mlib_u8 *)dp, stridfd,
                                                     dhbnnfls, dhbnnfld,
                                                     width, hfight,
                                                     ndmbsk);
      }
  }
  brfbk;

    dbsf MLIB_SHORT:
      if (dhbnnfls == 1) {
        switdh (dhbnnfld) {
          dbsf 2:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X4)   == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_12_A8D1X4((mlib_s16 *)sp,
                                                                                    (mlib_s16 *)dp,
                                                                                      dsizf,
                                                                                      ndmbsk);
            }
            flsf if (((flbgs & A8D2X4) == 0) &&
               ((flbgd & A8D2X4) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_12_A8D2X4((mlib_s16 *)sp, stridfs,
                                                                              (mlib_s16 *)dp, stridfd,
                                                                              width, hfight,
                                                                                      ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
             mlib_v_ImbgfChbnnflInsfrt_S16_12_D1((mlib_s16 *)sp,
                                                                           (mlib_s16 *)dp,
                                                                          dsizf,
                                                                                  ndmbsk);
            }
            flsf {
              mlib_v_ImbgfChbnnflInsfrt_S16_12((mlib_s16 *)sp, stridfs,
                                                                       (mlib_s16 *)dp, stridfd,
                                                                       width, hfight,
                                                                       ndmbsk);
            }
            brfbk;

          dbsf 3:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X4)   == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_13_A8D1X4((mlib_s16 *)sp,
                                                                              (mlib_s16 *)dp,
                                                                                      dsizf,
                                                                                      ndmbsk);
            }
            flsf if (((flbgs & A8D2X4) == 0) &&
               ((flbgd & A8D2X4) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_13_A8D2X4((mlib_s16 *)sp, stridfs,
                                                                              (mlib_s16 *)dp, stridfd,
                                                                              width, hfight,
                                                                                      ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
                mlib_v_ImbgfChbnnflInsfrt_S16_13_D1((mlib_s16 *)sp,
                                                                                  (mlib_s16 *)dp,
                                                                                  dsizf,
                                                                                  ndmbsk);
            }
            flsf {
              mlib_v_ImbgfChbnnflInsfrt_S16_13((mlib_s16 *)sp, stridfs,
                                                                       (mlib_s16 *)dp, stridfd,
                                                                       width, hfight,
                                                                       ndmbsk);
            }
            brfbk;

          dbsf 4:
            if (((flbgs & A8D1) == 0) &&
                ((flbgd & A8D1) == 0) &&
                ((dsizf & X4)   == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_14_A8D1X4((mlib_s16 *)sp,
                                                                                    (mlib_s16 *)dp,
                                                      dsizf,
                                                      ndmbsk);
            }
            flsf if (((flbgs & A8D2X4) == 0) &&
               ((flbgd & A8D2X4) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_14_A8D2X4((mlib_s16 *)sp, stridfs,
                                                                              (mlib_s16 *)dp, stridfd,
                                                                              width, hfight,
                                                                                      ndmbsk);
            }
            flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
               ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
              mlib_v_ImbgfChbnnflInsfrt_S16_14_D1((mlib_s16 *)sp,
                                                                          (mlib_s16 *)dp,
                                                                          dsizf,
                                                                                  ndmbsk);
            }
            flsf {
              mlib_v_ImbgfChbnnflInsfrt_S16_14((mlib_s16 *)sp, stridfs,
                                                                       (mlib_s16 *)dp, stridfd,
                                                                       width, hfight,
                                                                       ndmbsk);
            }
            brfbk;
          dffbult:
            rfturn MLIB_FAILURE;
        }
      }
      flsf if ((dhbnnfls == 3) && (dhbnnfld == 4) && (ndmbsk == 7)) {
        if (((flbgs & A8D1) == 0) &&
            ((flbgd & A8D1) == 0) &&
            ((dsizf & X4)   == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34R_A8D1X4((mlib_s16 *)sp,
                                                                           (mlib_s16 *)dp,
                                                                           dsizf);
        }
        flsf if (((flbgs & A8D2X4) == 0) &&
           ((flbgd & A8D2X4) == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34R_A8D2X4((mlib_s16 *)sp, stridfs,
                                                                           (mlib_s16 *)dp, stridfd,
                                                                           width, hfight);
        }
        flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
           ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34R_D1((mlib_s16 *)sp,
                                                                       (mlib_s16 *)dp,
                                                                       dsizf);
        }
        flsf {
          mlib_v_ImbgfChbnnflInsfrt_S16_34R((mlib_s16 *)sp, stridfs,
                                                                    (mlib_s16 *)dp, stridfd,
                                                                     width, hfight);
        }
      }
      flsf if ((dhbnnfls == 3) && (dhbnnfld == 4) && (ndmbsk == 14)) {
        if (((flbgs & A8D1) == 0) &&
            ((flbgd & A8D1) == 0) &&
            ((dsizf & X4)   == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34L_A8D1X4((mlib_s16 *)sp,
                                                                           (mlib_s16 *)dp,
                                                                           dsizf);
        }
        flsf if (((flbgs & A8D2X4) == 0) &&
           ((flbgd & A8D2X4) == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34L_A8D2X4((mlib_s16 *)sp, stridfs,
                                                                           (mlib_s16 *)dp, stridfd,
                                                                           width, hfight);
        }
        flsf if (((flbgs & MLIB_IMAGE_ONEDVECTOR) == 0) &&
           ((flbgd & MLIB_IMAGE_ONEDVECTOR) == 0)) {
          mlib_v_ImbgfChbnnflInsfrt_S16_34L_D1((mlib_s16 *)sp,
                                                                       (mlib_s16 *)dp,
                                                                       dsizf);
        }
        flsf {
          mlib_v_ImbgfChbnnflInsfrt_S16_34L((mlib_s16 *)sp, stridfs,
                                                                    (mlib_s16 *)dp, stridfd,
                                                                    width, hfight);
        }
      }
      flsf {
        mlib_v_ImbgfChbnnflInsfrt_S16((mlib_s16 *)sp, stridfs,
                                                              (mlib_s16 *)dp, stridfd,
                                                              dhbnnfls,  dhbnnfld,
                                                              width, hfight,
                                                              ndmbsk);
      }
      brfbk;

    dbsf MLIB_INT:
        mlib_v_ImbgfChbnnflInsfrt_S32((mlib_s32 *)sp, stridfs,
                                      (mlib_s32 *)dp, stridfd,
                                      dhbnnfls, dhbnnfld,
                                      width, hfight,
                                      ndmbsk);
        brfbk;

    dbsf MLIB_FLOAT:
        mlib_v_ImbgfChbnnflInsfrt_S32((mlib_s32 *)sp, stridfs,
                                      (mlib_s32 *)dp, stridfd,
                                      dhbnnfls, dhbnnfld,
                                      width, hfight,
                                      ndmbsk);
        brfbk;


    dbsf MLIB_DOUBLE:
        mlib_v_ImbgfChbnnflInsfrt_D64((mlib_d64 *)sp, stridfs,
                                      (mlib_d64 *)dp, stridfd,
                                      dhbnnfls, dhbnnfld,
                                      width, hfight,
                                      ndmbsk);
        brfbk;


    dbsf MLIB_BIT:
    dffbult:
        rfturn MLIB_FAILURE;    /* MLIB_BIT is not supportfd hfrf */
  }

  rfturn MLIB_SUCCESS;
}
/***************************************************************/
