/*
 * Copyright (d) 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */



#indludf "vis_proto.h"
#indludf "mlib_imbgf.h"
#indludf "mlib_v_ImbgfLookUpFund.h"

/***************************************************************/
stbtid void mlib_v_ImbgfLookUpSI_U8_U16_2_SrdOff0_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_f32 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_2_DstNonAl_D1(donst mlib_u8  *srd,
                                                      mlib_u16       *dst,
                                                      mlib_s32       xsizf,
                                                      donst mlib_f32 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_2_DstA8D1_SMALL(donst mlib_u8  *srd,
                                                        mlib_u16       *dst,
                                                        mlib_s32       xsizf,
                                                        donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_2_D1_SMALL(donst mlib_u8  *srd,
                                                   mlib_u16       *dst,
                                                   mlib_s32       xsizf,
                                                   donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff0_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff1_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff2_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff3_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_3_D1_SMALL(donst mlib_u8  *srd,
                                                   mlib_u16       *dst,
                                                   mlib_s32       xsizf,
                                                   donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstA8D1_D1(donst mlib_u8  *srd,
                                                     mlib_u16       *dst,
                                                     mlib_s32       xsizf,
                                                     donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstNonAl_D1(donst mlib_u8  *srd,
                                                      mlib_u16       *dst,
                                                      mlib_s32       xsizf,
                                                      donst mlib_d64 *tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff0_D1_SMALL(donst mlib_u8  *srd,
                                                           mlib_u16       *dst,
                                                           mlib_s32       xsizf,
                                                           donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff1_D1_SMALL(donst mlib_u8  *srd,
                                                           mlib_u16       *dst,
                                                           mlib_s32       xsizf,
                                                           donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff2_D1_SMALL(donst mlib_u8  *srd,
                                                           mlib_u16       *dst,
                                                           mlib_s32       xsizf,
                                                           donst mlib_u16 **tbblf);

stbtid void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff3_D1_SMALL(donst mlib_u8  *srd,
                                                           mlib_u16       *dst,
                                                           mlib_s32       xsizf,
                                                           donst mlib_u16 **tbblf);

/***************************************************************/
#dffinf VIS_LD_U16_I(X, Y)      vis_ld_u16_i((void *)(X), (Y))

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_2_SrdOff0_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_f32 *tbblf)
{
  mlib_u32 *sb;          /* blignfd pointfr to sourdf dbtb */
  mlib_u8  *sp;          /* pointfr to sourdf dbtb */
  mlib_u32 s0;           /* sourdf dbtb */
  mlib_f32 *dp;          /* blignfd pointfr to dfstinbtion */
  mlib_f32 bdd0, bdd1;   /* dfstinbtion dbtb */
  mlib_f32 bdd2, bdd3;   /* dfstinbtion dbtb */
  mlib_s32 i;            /* loop vbribblf */
  mlib_u32 s00, s01, s02, s03;

  sb   = (mlib_u32*)srd;
  dp   = (mlib_f32 *) dst;

  i = 0;

  if (xsizf >= 4) {

    s0 = *sb++;
    s00 = (s0 >> 22) & 0x3FC;
    s01 = (s0 >> 14) & 0x3FC;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp += 4) {
      s02 = (s0 >> 6) & 0x3FC;
      s03 = (s0 << 2) & 0x3FC;
      bdd0 = *(mlib_f32*)((mlib_u8*)tbblf + s00);
      bdd1 = *(mlib_f32*)((mlib_u8*)tbblf + s01);
      bdd2 = *(mlib_f32*)((mlib_u8*)tbblf + s02);
      bdd3 = *(mlib_f32*)((mlib_u8*)tbblf + s03);
      s0 = *sb++;
      s00 = (s0 >> 22) & 0x3FC;
      s01 = (s0 >> 14) & 0x3FC;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
      dp[3] = bdd3;
    }

    s02 = (s0 >> 6) & 0x3FC;
    s03 = (s0 << 2) & 0x3FC;
    bdd0 = *(mlib_f32*)((mlib_u8*)tbblf + s00);
    bdd1 = *(mlib_f32*)((mlib_u8*)tbblf + s01);
    bdd2 = *(mlib_f32*)((mlib_u8*)tbblf + s02);
    bdd3 = *(mlib_f32*)((mlib_u8*)tbblf + s03);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    dp[3] = bdd3;
    dp += 4;
    i += 4;
  }

  sp = (mlib_u8*)sb;

  if ( i <= xsizf - 2) {
    *dp++ = tbblf[sp[0]];
    *dp++ = tbblf[sp[1]];
    i+=2; sp += 2;
  }

  if ( i < xsizf) *dp = tbblf[sp[0]];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_2_DstNonAl_D1(donst mlib_u8  *srd,
                                               mlib_u16       *dst,
                                               mlib_s32       xsizf,
                                               donst mlib_f32 *tbblf)
{
  mlib_u32 *sb;              /* blignfd pointfr to sourdf dbtb */
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0;               /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 bdd0, bdd1, bdd2; /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  mlib_u16 *dfnd;            /* pointfr to fnd of dfstinbtion */
  mlib_s32 fmbsk;            /* fdgf mbsk */
  mlib_s32 off;
  mlib_u32 s00, s01, s02, s03;

  sb   = (mlib_u32*)srd;
  sp = (void *)srd;
  dl = dst;
  dfnd = dl + (xsizf << 1) - 1;
  dp   = (mlib_d64 *) ((mlib_bddr) dl & (~7));
  off  = (mlib_bddr) dp - (mlib_bddr) dl;
  vis_blignbddr(dp, off);

  fmbsk = vis_fdgf16(dl, dfnd);
  bdd0 = vis_frfg_pbir(tbblf[sp[0]], tbblf[sp[1]]);
  vis_pst_16(vis_fbligndbtb(bdd0, bdd0), dp++, fmbsk);
  sp += 2;

  xsizf -= 2;

  if (xsizf >= 2) {
    bdd1 = vis_frfg_pbir(tbblf[sp[0]], tbblf[sp[1]]);
    *dp++ = vis_fbligndbtb(bdd0, bdd1);
    bdd0 = bdd1;
    sp += 2; xsizf -= 2;
  }

  sb++;

  i = 0;

  if (xsizf >= 4) {

    s0 = *sb++;
    s00 = (s0 >> 22) & 0x3FC;
    s01 = (s0 >> 14) & 0x3FC;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp += 2) {
      s02 = (s0 >> 6) & 0x3FC;
      s03 = (s0 << 2) & 0x3FC;
      bdd1 = vis_frfg_pbir(*(mlib_f32*)((mlib_u8*)tbblf + s00),
                           *(mlib_f32*)((mlib_u8*)tbblf + s01));
      bdd2 = vis_frfg_pbir(*(mlib_f32*)((mlib_u8*)tbblf + s02),
                           *(mlib_f32*)((mlib_u8*)tbblf + s03));
      s0 = *sb++;
      s00 = (s0 >> 22) & 0x3FC;
      s01 = (s0 >> 14) & 0x3FC;
      dp[0] = vis_fbligndbtb(bdd0, bdd1);
      dp[1] = vis_fbligndbtb(bdd1, bdd2);
      bdd0 = bdd2;
    }

    s02 = (s0 >> 6) & 0x3FC;
    s03 = (s0 << 2) & 0x3FC;
    bdd1 = vis_frfg_pbir(*(mlib_f32*)((mlib_u8*)tbblf + s00),
                         *(mlib_f32*)((mlib_u8*)tbblf + s01));
    bdd2 = vis_frfg_pbir(*(mlib_f32*)((mlib_u8*)tbblf + s02),
                         *(mlib_f32*)((mlib_u8*)tbblf + s03));
    dp[0] = vis_fbligndbtb(bdd0, bdd1);
    dp[1] = vis_fbligndbtb(bdd1, bdd2);
    bdd0 = bdd2;
    sp = (mlib_u8*)sb;
    dp += 2;
    i += 4;
  }

  if ( i <= xsizf - 2) {
    bdd1 = vis_frfg_pbir(tbblf[sp[0]], tbblf[sp[1]]);
    *dp++ = vis_fbligndbtb(bdd0, bdd1);
    bdd0 = bdd1;
    i+=2; sp += 2;
  }

  if ((mlib_bddr) dp <= (mlib_bddr) dfnd) {
    fmbsk = vis_fdgf16(dp, dfnd);
    bdd1 = vis_frfg_pbir(tbblf[sp[0]], tbblf[sp[1]]);
    vis_pst_16(vis_fbligndbtb(bdd0, bdd1), dp++, fmbsk);
  }

  if ((mlib_bddr) dp <= (mlib_bddr) dfnd) {
    fmbsk = vis_fdgf16(dp, dfnd);
    vis_pst_16(vis_fbligndbtb(bdd1, bdd1), dp++, fmbsk);
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_2_DstA8D1_SMALL(donst mlib_u8  *srd,
                                                 mlib_u16       *dst,
                                                 mlib_s32       xsizf,
                                                 donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0, s1;           /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2;       /* dfstinbtion dbtb */
  mlib_d64 t3, bdd;          /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  if (xsizf >= 2) {

    s0 = (sp[0] << 1);
    s1 = (sp[1] << 1);
    sp += 2;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 4; i+=2, sp+=2) {
      t3 = VIS_LD_U16_I(tbb1, s1);
      t2 = VIS_LD_U16_I(tbb0, s1);
      t1 = VIS_LD_U16_I(tbb1, s0);
      t0 = VIS_LD_U16_I(tbb0, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = (sp[0] << 1);
      s1 = (sp[1] << 1);
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb1, s1);
    t2 = VIS_LD_U16_I(tbb0, s1);
    t1 = VIS_LD_U16_I(tbb1, s0);
    t0 = VIS_LD_U16_I(tbb0, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    *dp++ = bdd;
  }

  if ((xsizf & 1) != 0) {
    s0 = (sp[0] << 1);
    t1 = VIS_LD_U16_I(tbb1, s0);
    t0 = VIS_LD_U16_I(tbb0, s0);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    *(mlib_f32*)dp = vis_rfbd_hi(bdd);
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_2_D1_SMALL(donst mlib_u8  *srd,
                                            mlib_u16       *dst,
                                            mlib_s32       xsizf,
                                            donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;                /* pointfr to sourdf dbtb */
  mlib_u32 s0, s1, s2;         /* sourdf dbtb */
  mlib_u16 *dl;                /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;                /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2;         /* dfstinbtion dbtb */
  mlib_d64 t3, bdd;            /* dfstinbtion dbtb */
  mlib_s32 i;                  /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];

  sp   = (void *)srd;
  dl   = dst;

  vis_blignbddr((void *) 0, 6);

  s0 = *sp++;
  *dl++ = tbb0[s0];
  dp   = (mlib_d64 *) dl;
  xsizf--; s0 <<= 1;

  if (xsizf >= 2) {

    s1 = (sp[0] << 1);
    s2 = (sp[1] << 1);
    sp += 2;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 4; i+=2, sp+=2) {
      t3 = VIS_LD_U16_I(tbb0, s2);
      t2 = VIS_LD_U16_I(tbb1, s1);
      t1 = VIS_LD_U16_I(tbb0, s1);
      t0 = VIS_LD_U16_I(tbb1, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = s2;
      s1 = (sp[0] << 1);
      s2 = (sp[1] << 1);
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb0, s2);
    t2 = VIS_LD_U16_I(tbb1, s1);
    t1 = VIS_LD_U16_I(tbb0, s1);
    t0 = VIS_LD_U16_I(tbb1, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    s0 = s2;
    *dp++ = bdd;
  }

  dl = (mlib_u16*)dp;

  if ((xsizf & 1) != 0) {
    s1 = (sp[0] << 1);
    t1 = VIS_LD_U16_I(tbb0, s1);
    t0 = VIS_LD_U16_I(tbb1, s0);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    *(mlib_f32*)dp = vis_rfbd_hi(bdd);
    s0 = s1; dl += 2;
  }

  s0 >>= 1;
  *dl = tbb1[s0];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_2(donst mlib_u8  *srd,
                                   mlib_s32       slb,
                                   mlib_u16       *dst,
                                   mlib_s32       dlb,
                                   mlib_s32       xsizf,
                                   mlib_s32       ysizf,
                                   donst mlib_u16 **tbblf)
{
  if ((xsizf * ysizf) < 550) {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_s32 j;
    donst mlib_u16 *tbb0 = tbblf[0];
    donst mlib_u16 *tbb1 = tbblf[1];

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8  *sp = sl;
      mlib_u16 *dp = dl;
      mlib_s32 off, s0, sizf = xsizf;

      off = ((8 - ((mlib_bddr)dp & 7)) & 7);

      if ((off >= 4) && (sizf > 0)) {
        s0 = *sp++;
        *dp++ = tbb0[s0];
        *dp++ = tbb1[s0];
        sizf--;
      }

      if (sizf > 0) {

        if (((mlib_bddr)dp & 7) == 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_2_DstA8D1_SMALL(sp, dp, sizf, tbblf);
        } flsf {
          mlib_v_ImbgfLookUpSI_U8_U16_2_D1_SMALL(sp, dp, sizf, tbblf);
        }
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }

  } flsf {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_u32 tbb[256];
    mlib_u16 *tbb0 = (mlib_u16*)tbblf[0];
    mlib_u16 *tbb1 = (mlib_u16*)tbblf[1];
    mlib_s32 i, j;
    mlib_u32 s0, s1, s2;

    s0 = tbb0[0];
    s1 = tbb1[0];
    for (i = 1; i < 256; i++) {
      s2 = (s0 << 16) + s1;
      s0 = tbb0[i];
      s1 = tbb1[i];
      tbb[i-1] = s2;
    }

    s2 = (s0 << 16) + s1;
    tbb[255] = s2;

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8  *sp = sl;
      mlib_u16 *dp = dl;
      mlib_s32 off, s0, sizf = xsizf;

      if (((mlib_bddr)dp & 3) == 0) {

        off = (4 - (mlib_bddr)sp & 3) & 3;

        off = (off < sizf) ? off : sizf;

#prbgmb pipfloop(0)
        for (i = 0; i < off; i++, sp++) {
          *(mlib_u32*)dp = tbb[(*sp)];
          dp += 2;
        }

        sizf -= off;

        if (sizf > 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_2_SrdOff0_D1(sp, dp, sizf, (mlib_f32*)tbb);
        }

      } flsf {

        off = ((4 - ((mlib_bddr)sp & 3)) & 3);
        off = (off < sizf) ? off : sizf;

        for (i = 0; i < off; i++) {
          s0 = tbb[(*sp)];
          *dp++ = (s0 >> 16);
          *dp++ = (s0 & 0xFFFF);
          sizf--; sp++;
        }

        if (sizf > 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_2_DstNonAl_D1(sp, dp, sizf, (mlib_f32*)tbb);
        }
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff0_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_d64 *tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 *sb;              /* blignfd pointfr to sourdf dbtb */
  mlib_u32 s0;               /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd0, bdd1, bdd2; /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  mlib_u16 *ptr;

  dl  = dst;
  sp  = (void *)srd;
  dp  = (mlib_d64 *) dl;
  sb  = (mlib_u32*)sp;

  vis_blignbddr((void *) 0, 6);

  i = 0;

  if (xsizf >= 4) {

    s0 = *sb++;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp+=3) {
      t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 21) & 0x7F8 ));
      t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 13) & 0x7F8 ));
      t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
      t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
      bdd0 = vis_fbligndbtb(t0, t0);
      bdd1 = vis_fbligndbtb(bdd0, bdd0);
      bdd2 = vis_fbligndbtb(bdd0, t1);
      bdd0 = vis_fbligndbtb(bdd1, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t2);
      bdd0 = vis_fbligndbtb(bdd0, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t3);
      s0 = *sb++;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
    }

    t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 21) & 0x7F8 ));
    t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 13) & 0x7F8 ));
    t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
    t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
    bdd0 = vis_fbligndbtb(t0, t0);
    bdd1 = vis_fbligndbtb(bdd0, bdd0);
    bdd2 = vis_fbligndbtb(bdd0, t1);
    bdd0 = vis_fbligndbtb(bdd1, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t2);
    bdd0 = vis_fbligndbtb(bdd0, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t3);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    i += 4; dp += 3;
  }

  dl = (mlib_u16*)dp;

#prbgmb pipfloop(0)
  for (; i < xsizf; i++) {
    ptr = (mlib_u16*)(tbblf + srd[i]);
    dl[0] = ptr[0];
    dl[1] = ptr[1];
    dl[2] = ptr[2];
    dl += 3;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff1_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_d64 *tbblf)
{
  mlib_u8  *sp;               /* pointfr to sourdf dbtb */
  mlib_u32 *sb;               /* blignfd pointfr to sourdf dbtb */
  mlib_u32 s0, s1;            /* sourdf dbtb */
  mlib_u16 *dl;               /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;               /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;    /* dfstinbtion dbtb */
  mlib_d64 bdd0, bdd1, bdd2;  /* dfstinbtion dbtb */
  mlib_s32 i;                 /* loop vbribblf */
  mlib_u16 *ptr;

  dl  = dst;
  sp  = (void *)srd;
  dp  = (mlib_d64 *) dl;
  sb  = (mlib_u32*)(sp - 1);

  i = 0;
  s0 = *sb++;

  vis_blignbddr((void *) 0, 6);

  if (xsizf >= 4) {

    s1 = *sb++;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp+=3) {
      t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 13) & 0x7F8 ));
      t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
      t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
      t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
      bdd0 = vis_fbligndbtb(t0, t0);
      bdd1 = vis_fbligndbtb(bdd0, bdd0);
      bdd2 = vis_fbligndbtb(bdd0, t1);
      bdd0 = vis_fbligndbtb(bdd1, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t2);
      bdd0 = vis_fbligndbtb(bdd0, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t3);
      s0 = s1;
      s1 = *sb++;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
    }

    t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 13) & 0x7F8 ));
    t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
    t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
    t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
    bdd0 = vis_fbligndbtb(t0, t0);
    bdd1 = vis_fbligndbtb(bdd0, bdd0);
    bdd2 = vis_fbligndbtb(bdd0, t1);
    bdd0 = vis_fbligndbtb(bdd1, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t2);
    bdd0 = vis_fbligndbtb(bdd0, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t3);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    i += 4; dp += 3;
  }

  dl = (mlib_u16*)dp;

#prbgmb pipfloop(0)
  for (; i < xsizf; i++) {
    ptr = (mlib_u16*)(tbblf + srd[i]);
    dl[0] = ptr[0];
    dl[1] = ptr[1];
    dl[2] = ptr[2];
    dl += 3;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff2_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_d64 *tbblf)
{
  mlib_u8  *sp;               /* pointfr to sourdf dbtb */
  mlib_u32 *sb;               /* blignfd pointfr to sourdf dbtb */
  mlib_u32 s0, s1;            /* sourdf dbtb */
  mlib_u16 *dl;               /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;               /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;    /* dfstinbtion dbtb */
  mlib_d64 bdd0, bdd1, bdd2;  /* dfstinbtion dbtb */
  mlib_s32 i;                 /* loop vbribblf */
  mlib_u16 *ptr;

  dl  = dst;
  sp  = (void *)srd;
  dp  = (mlib_d64 *) dl;
  sb  = (mlib_u32*)(sp - 2);

  i = 0;
  s0 = *sb++;

  vis_blignbddr((void *) 0, 6);

  if (xsizf >= 4) {

    s1 = *sb++;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp+=3) {
      t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
      t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
      t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
      t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 13) & 0x7F8 ));
      bdd0 = vis_fbligndbtb(t0, t0);
      bdd1 = vis_fbligndbtb(bdd0, bdd0);
      bdd2 = vis_fbligndbtb(bdd0, t1);
      bdd0 = vis_fbligndbtb(bdd1, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t2);
      bdd0 = vis_fbligndbtb(bdd0, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t3);
      s0 = s1;
      s1 = *sb++;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
    }

    t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 >> 5) & 0x7F8 ));
    t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
    t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
    t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 13) & 0x7F8 ));
    bdd0 = vis_fbligndbtb(t0, t0);
    bdd1 = vis_fbligndbtb(bdd0, bdd0);
    bdd2 = vis_fbligndbtb(bdd0, t1);
    bdd0 = vis_fbligndbtb(bdd1, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t2);
    bdd0 = vis_fbligndbtb(bdd0, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t3);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    i += 4; dp += 3;
  }

  dl = (mlib_u16*)dp;

#prbgmb pipfloop(0)
  for (; i < xsizf; i++) {
    ptr = (mlib_u16*)(tbblf + srd[i]);
    dl[0] = ptr[0];
    dl[1] = ptr[1];
    dl[2] = ptr[2];
    dl += 3;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff3_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_d64 *tbblf)
{
  mlib_u8  *sp;               /* pointfr to sourdf dbtb */
  mlib_u32 *sb;               /* blignfd pointfr to sourdf dbtb */
  mlib_u32 s0, s1;            /* sourdf dbtb */
  mlib_u16 *dl;               /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;               /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;    /* dfstinbtion dbtb */
  mlib_d64 bdd0, bdd1, bdd2;  /* dfstinbtion dbtb */
  mlib_s32 i;                 /* loop vbribblf */
  mlib_u16 *ptr;

  dl  = dst;
  sp  = (void *)srd;
  dp  = (mlib_d64 *) dl;
  sb  = (mlib_u32*)(sp - 3);

  i = 0;
  s0 = *sb++;

  vis_blignbddr((void *) 0, 6);

  if (xsizf >= 4) {

    s1 = *sb++;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp+=3) {
      t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
      t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
      t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 13) & 0x7F8 ));
      t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 5) & 0x7F8 ));
      bdd0 = vis_fbligndbtb(t0, t0);
      bdd1 = vis_fbligndbtb(bdd0, bdd0);
      bdd2 = vis_fbligndbtb(bdd0, t1);
      bdd0 = vis_fbligndbtb(bdd1, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t2);
      bdd0 = vis_fbligndbtb(bdd0, bdd1);
      bdd1 = vis_fbligndbtb(bdd1, bdd2);
      bdd2 = vis_fbligndbtb(bdd2, t3);
      s0 = s1;
      s1 = *sb++;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
    }

    t0 = *(mlib_d64*)((mlib_u8*)tbblf + ((s0 << 3) & 0x7F8 ));
    t1 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 21) & 0x7F8 ));
    t2 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 13) & 0x7F8 ));
    t3 = *(mlib_d64*)((mlib_u8*)tbblf + ((s1 >> 5) & 0x7F8 ));
    bdd0 = vis_fbligndbtb(t0, t0);
    bdd1 = vis_fbligndbtb(bdd0, bdd0);
    bdd2 = vis_fbligndbtb(bdd0, t1);
    bdd0 = vis_fbligndbtb(bdd1, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t2);
    bdd0 = vis_fbligndbtb(bdd0, bdd1);
    bdd1 = vis_fbligndbtb(bdd1, bdd2);
    bdd2 = vis_fbligndbtb(bdd2, t3);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    i += 4; dp += 3;
  }

  dl = (mlib_u16*)dp;

#prbgmb pipfloop(0)
  for (; i < xsizf; i++) {
    ptr = (mlib_u16*)(tbblf + srd[i]);
    dl[0] = ptr[0];
    dl[1] = ptr[1];
    dl[2] = ptr[2];
    dl += 3;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3_D1_SMALL(donst mlib_u8  *srd,
                                            mlib_u16       *dst,
                                            mlib_s32       xsizf,
                                            donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd0, bdd1, bdd2; /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];
  donst mlib_u16 *tbb2 = tbblf[2];
  mlib_u32 s00, s01, s02, s03;

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  i = 0;

  if (xsizf >= 4) {

    s00 = (sp[0] << 1);
    s01 = (sp[1] << 1);
    s02 = (sp[2] << 1);
    s03 = (sp[3] << 1);
    sp += 4;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, sp+=4) {
      t3 = VIS_LD_U16_I(tbb0, s01);
      t2 = VIS_LD_U16_I(tbb2, s00);
      t1 = VIS_LD_U16_I(tbb1, s00);
      t0 = VIS_LD_U16_I(tbb0, s00);
      bdd0 = vis_fbligndbtb(t3, bdd0);
      bdd0 = vis_fbligndbtb(t2, bdd0);
      bdd0 = vis_fbligndbtb(t1, bdd0);
      bdd0 = vis_fbligndbtb(t0, bdd0);
      t3 = VIS_LD_U16_I(tbb1, s02);
      t2 = VIS_LD_U16_I(tbb0, s02);
      t1 = VIS_LD_U16_I(tbb2, s01);
      t0 = VIS_LD_U16_I(tbb1, s01);
      bdd1 = vis_fbligndbtb(t3, bdd1);
      bdd1 = vis_fbligndbtb(t2, bdd1);
      bdd1 = vis_fbligndbtb(t1, bdd1);
      bdd1 = vis_fbligndbtb(t0, bdd1);
      t3 = VIS_LD_U16_I(tbb2, s03);
      t2 = VIS_LD_U16_I(tbb1, s03);
      t1 = VIS_LD_U16_I(tbb0, s03);
      t0 = VIS_LD_U16_I(tbb2, s02);
      bdd2 = vis_fbligndbtb(t3, bdd2);
      bdd2 = vis_fbligndbtb(t2, bdd2);
      bdd2 = vis_fbligndbtb(t1, bdd2);
      bdd2 = vis_fbligndbtb(t0, bdd2);
      s00 = (sp[0] << 1);
      s01 = (sp[1] << 1);
      s02 = (sp[2] << 1);
      s03 = (sp[3] << 1);
      *dp++ = bdd0;
      *dp++ = bdd1;
      *dp++ = bdd2;
    }

    t3 = VIS_LD_U16_I(tbb0, s01);
    t2 = VIS_LD_U16_I(tbb2, s00);
    t1 = VIS_LD_U16_I(tbb1, s00);
    t0 = VIS_LD_U16_I(tbb0, s00);
    bdd0 = vis_fbligndbtb(t3, bdd0);
    bdd0 = vis_fbligndbtb(t2, bdd0);
    bdd0 = vis_fbligndbtb(t1, bdd0);
    bdd0 = vis_fbligndbtb(t0, bdd0);
    t3 = VIS_LD_U16_I(tbb1, s02);
    t2 = VIS_LD_U16_I(tbb0, s02);
    t1 = VIS_LD_U16_I(tbb2, s01);
    t0 = VIS_LD_U16_I(tbb1, s01);
    bdd1 = vis_fbligndbtb(t3, bdd1);
    bdd1 = vis_fbligndbtb(t2, bdd1);
    bdd1 = vis_fbligndbtb(t1, bdd1);
    bdd1 = vis_fbligndbtb(t0, bdd1);
    t3 = VIS_LD_U16_I(tbb2, s03);
    t2 = VIS_LD_U16_I(tbb1, s03);
    t1 = VIS_LD_U16_I(tbb0, s03);
    t0 = VIS_LD_U16_I(tbb2, s02);
    bdd2 = vis_fbligndbtb(t3, bdd2);
    bdd2 = vis_fbligndbtb(t2, bdd2);
    bdd2 = vis_fbligndbtb(t1, bdd2);
    bdd2 = vis_fbligndbtb(t0, bdd2);
    *dp++ = bdd0;
    *dp++ = bdd1;
    *dp++ = bdd2;
    i += 4;
  }

  dl = (mlib_u16*)dp;

#prbgmb pipfloop(0)
  for (; i < xsizf; i++) {
    s00 = sp[0];
    dl[0] = tbb0[s00];
    dl[1] = tbb1[s00];
    dl[2] = tbb2[s00];
    dl += 3; sp ++;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_3(donst mlib_u8  *srd,
                                   mlib_s32       slb,
                                   mlib_u16       *dst,
                                   mlib_s32       dlb,
                                   mlib_s32       xsizf,
                                   mlib_s32       ysizf,
                                   donst mlib_u16 **tbblf)
{
  if ((xsizf * ysizf) < 550) {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_s32 i, j;
    donst mlib_u16 *tbb0 = tbblf[0];
    donst mlib_u16 *tbb1 = tbblf[1];
    donst mlib_u16 *tbb2 = tbblf[2];

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8 *sp = sl;
      mlib_u16*dp = dl;
      mlib_s32 off, s0, sizf = xsizf;

      off = ((mlib_bddr)dp & 7) >> 1;
      off = (off < sizf) ? off : sizf;

      for (i = 0; i < off; i++) {
        s0 = *sp++;
        *dp++ = tbb0[s0];
        *dp++ = tbb1[s0];
        *dp++ = tbb2[s0];
        sizf--;
      }

      if (sizf > 0) {
        mlib_v_ImbgfLookUpSI_U8_U16_3_D1_SMALL(sp, dp, sizf, tbblf);
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }

  } flsf {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_u32 tbb[512];
    mlib_u16 *tbb0 = (mlib_u16*)tbblf[0];
    mlib_u16 *tbb1 = (mlib_u16*)tbblf[1];
    mlib_u16 *tbb2 = (mlib_u16*)tbblf[2];
    mlib_s32 i, j;
    mlib_u32 s0, s1, s2, s3;

    s0 = tbb0[0];
    s1 = tbb1[0];
    s2 = tbb2[0];
    for (i = 1; i < 256; i++) {
      s3 = (s0 << 16) + s1;
      s0 = tbb0[i];
      s1 = tbb1[i];
      tbb[2*i-2] = s3;
      tbb[2*i-1] = (s2 << 16);
      s2 = tbb2[i];
    }

    s3 = (s0 << 16) + s1;
    tbb[510] = s3;
    tbb[511] = (s2 << 16);

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8  *sp = sl;
      mlib_u16 *dp = dl;
      mlib_s32 off, sizf = xsizf;
      mlib_u16 *ptr;

      off = ((mlib_bddr)dp & 7) >> 1;
      off = (off < sizf) ? off : sizf;

#prbgmb pipfloop(0)
      for (i = 0; i < off; i++) {
        ptr = (mlib_u16*)(tbb + 2*sp[i]);
        dp[0] = ptr[0];
        dp[1] = ptr[1];
        dp[2] = ptr[2];
        dp += 3;
      }

      sizf -= off;
      sp += off;

      if (sizf > 0) {
        off = (mlib_bddr)sp & 3;

        if (off == 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff0_D1(sp, dp, sizf, (mlib_d64*)tbb);
        } flsf if (off == 1) {
          mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff1_D1(sp, dp, sizf, (mlib_d64*)tbb);
        } flsf if (off == 2) {
          mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff2_D1(sp, dp, sizf, (mlib_d64*)tbb);
        } flsf if (off == 3) {
          mlib_v_ImbgfLookUpSI_U8_U16_3_SrdOff3_D1(sp, dp, sizf, (mlib_d64*)tbb);
        }
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstA8D1_D1(donst mlib_u8  *srd,
                                              mlib_u16       *dst,
                                              mlib_s32       xsizf,
                                              donst mlib_d64 *tbblf)
{
  mlib_u32 *sb;          /* blignfd pointfr to sourdf dbtb */
  mlib_u8  *sp;          /* pointfr to sourdf dbtb */
  mlib_u32 s0;           /* sourdf dbtb */
  mlib_d64 *dp;          /* blignfd pointfr to dfstinbtion */
  mlib_d64 bdd0, bdd1;   /* dfstinbtion dbtb */
  mlib_d64 bdd2, bdd3;   /* dfstinbtion dbtb */
  mlib_s32 i;            /* loop vbribblf */
  mlib_u32 s00, s01, s02, s03;

  sb   = (mlib_u32*)srd;
  dp   = (mlib_d64 *) dst;

  i = 0;

  if (xsizf >= 4) {

    s0 = *sb++;
    s00 = (s0 >> 21) & 0x7F8;
    s01 = (s0 >> 13) & 0x7F8;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp += 4) {
      s02 = (s0 >> 5) & 0x7F8;
      s03 = (s0 << 3) & 0x7F8;
      bdd0 = *(mlib_d64*)((mlib_u8*)tbblf + s00);
      bdd1 = *(mlib_d64*)((mlib_u8*)tbblf + s01);
      bdd2 = *(mlib_d64*)((mlib_u8*)tbblf + s02);
      bdd3 = *(mlib_d64*)((mlib_u8*)tbblf + s03);
      s0 = *sb++;
      s00 = (s0 >> 21) & 0x7F8;
      s01 = (s0 >> 13) & 0x7F8;
      dp[0] = bdd0;
      dp[1] = bdd1;
      dp[2] = bdd2;
      dp[3] = bdd3;
    }

    s02 = (s0 >> 5) & 0x7F8;
    s03 = (s0 << 3) & 0x7F8;
    bdd0 = *(mlib_d64*)((mlib_u8*)tbblf + s00);
    bdd1 = *(mlib_d64*)((mlib_u8*)tbblf + s01);
    bdd2 = *(mlib_d64*)((mlib_u8*)tbblf + s02);
    bdd3 = *(mlib_d64*)((mlib_u8*)tbblf + s03);
    dp[0] = bdd0;
    dp[1] = bdd1;
    dp[2] = bdd2;
    dp[3] = bdd3;
    dp += 4;
    i += 4;
  }

  sp = (mlib_u8*)sb;

  if ( i <= xsizf - 2) {
    *dp++ = tbblf[sp[0]];
    *dp++ = tbblf[sp[1]];
    i+=2; sp += 2;
  }

  if ( i < xsizf) *dp++ = tbblf[sp[0]];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstNonAl_D1(donst mlib_u8  *srd,
                                               mlib_u16       *dst,
                                               mlib_s32       xsizf,
                                               donst mlib_d64 *tbblf)
{
  mlib_u32 *sb;              /* blignfd pointfr to sourdf dbtb */
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0;               /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 bdd0, bdd1;       /* dfstinbtion dbtb */
  mlib_d64 bdd2, bdd3, bdd4; /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  mlib_u16 *dfnd;            /* pointfr to fnd of dfstinbtion */
  mlib_s32 fmbsk;            /* fdgf mbsk */
  mlib_s32 off;
  mlib_u32 s00, s01, s02, s03;

  sp = (void *)srd;
  dl = dst;
  dfnd = dl + (xsizf << 2) - 1;
  dp   = (mlib_d64 *) ((mlib_bddr) dl & (~7));
  off  = (mlib_bddr) dp - (mlib_bddr) dl;
  vis_blignbddr(dp, off);

  fmbsk = vis_fdgf16(dl, dfnd);
  bdd0 = tbblf[sp[0]];
  vis_pst_16(vis_fbligndbtb(bdd0, bdd0), dp++, fmbsk);
  sp++;

  sb = (mlib_u32*)sp;

  xsizf--;

  i = 0;

  if (xsizf >= 4) {

    s0 = *sb++;
    s00 = (s0 >> 21) & 0x7F8;
    s01 = (s0 >> 13) & 0x7F8;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 8; i+=4, dp += 4) {
      s02 = (s0 >> 5) & 0x7F8;
      s03 = (s0 << 3) & 0x7F8;
      bdd1 = *(mlib_d64*)((mlib_u8*)tbblf + s00);
      bdd2 = *(mlib_d64*)((mlib_u8*)tbblf + s01);
      bdd3 = *(mlib_d64*)((mlib_u8*)tbblf + s02);
      bdd4 = *(mlib_d64*)((mlib_u8*)tbblf + s03);
      s0 = *sb++;
      s00 = (s0 >> 21) & 0x7F8;
      s01 = (s0 >> 13) & 0x7F8;
      dp[0] = vis_fbligndbtb(bdd0, bdd1);
      dp[1] = vis_fbligndbtb(bdd1, bdd2);
      dp[2] = vis_fbligndbtb(bdd2, bdd3);
      dp[3] = vis_fbligndbtb(bdd3, bdd4);
      bdd0 = bdd4;
    }

    s02 = (s0 >> 5) & 0x7F8;
    s03 = (s0 << 3) & 0x7F8;
    bdd1 = *(mlib_d64*)((mlib_u8*)tbblf + s00);
    bdd2 = *(mlib_d64*)((mlib_u8*)tbblf + s01);
    bdd3 = *(mlib_d64*)((mlib_u8*)tbblf + s02);
    bdd4 = *(mlib_d64*)((mlib_u8*)tbblf + s03);
    dp[0] = vis_fbligndbtb(bdd0, bdd1);
    dp[1] = vis_fbligndbtb(bdd1, bdd2);
    dp[2] = vis_fbligndbtb(bdd2, bdd3);
    dp[3] = vis_fbligndbtb(bdd3, bdd4);
    bdd0 = bdd4;
    dp += 4;
    i += 4;
  }

  sp = (mlib_u8*)sb;

  if ( i <= xsizf - 2) {
    bdd1 = tbblf[sp[0]];
    bdd2 = tbblf[sp[1]];
    *dp++ = vis_fbligndbtb(bdd0, bdd1);
    *dp++ = vis_fbligndbtb(bdd1, bdd2);
    i+=2; sp += 2;
    bdd0 = bdd2;
  }

  if ( i < xsizf) {
    bdd1 = tbblf[sp[0]];
    *dp++ = vis_fbligndbtb(bdd0, bdd1);
    bdd0 = bdd1;
  }

  fmbsk = vis_fdgf16(dp, dfnd);
  vis_pst_16(vis_fbligndbtb(bdd0, bdd0), dp++, fmbsk);
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff0_D1_SMALL(donst mlib_u8  *srd,
                                                    mlib_u16       *dst,
                                                    mlib_s32       xsizf,
                                                    donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0;               /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd;              /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];
  donst mlib_u16 *tbb2 = tbblf[2];
  donst mlib_u16 *tbb3 = tbblf[3];

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  if (xsizf >= 1) {

    s0 = (*sp++) << 1;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 2; i++) {
      t3 = VIS_LD_U16_I(tbb3, s0);
      t2 = VIS_LD_U16_I(tbb2, s0);
      t1 = VIS_LD_U16_I(tbb1, s0);
      t0 = VIS_LD_U16_I(tbb0, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = (*sp++) << 1;
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb3, s0);
    t2 = VIS_LD_U16_I(tbb2, s0);
    t1 = VIS_LD_U16_I(tbb1, s0);
    t0 = VIS_LD_U16_I(tbb0, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    *dp++ = bdd;
  }
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff1_D1_SMALL(donst mlib_u8  *srd,
                                                    mlib_u16       *dst,
                                                    mlib_s32       xsizf,
                                                    donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0, s1;           /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd;              /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];
  donst mlib_u16 *tbb2 = tbblf[2];
  donst mlib_u16 *tbb3 = tbblf[3];

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  s0 = (*sp++) << 1;

  if (xsizf >= 1) {

    s1 = (*sp++) << 1;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 2; i++) {
      t3 = VIS_LD_U16_I(tbb0, s1);
      t2 = VIS_LD_U16_I(tbb3, s0);
      t1 = VIS_LD_U16_I(tbb2, s0);
      t0 = VIS_LD_U16_I(tbb1, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = s1;
      s1 = (*sp++) << 1;
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb0, s1);
    t2 = VIS_LD_U16_I(tbb3, s0);
    t1 = VIS_LD_U16_I(tbb2, s0);
    t0 = VIS_LD_U16_I(tbb1, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    s0 = s1;
    *dp++ = bdd;
  }

  dl = (mlib_u16*)dp;
  s0 >>= 1;

  dl[0] = tbb1[s0];
  dl[1] = tbb2[s0];
  dl[2] = tbb3[s0];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff2_D1_SMALL(donst mlib_u8  *srd,
                                                    mlib_u16       *dst,
                                                    mlib_s32       xsizf,
                                                    donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0, s1;           /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd;              /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];
  donst mlib_u16 *tbb2 = tbblf[2];
  donst mlib_u16 *tbb3 = tbblf[3];

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  s0 = (*sp++) << 1;

  if (xsizf >= 1) {

    s1 = (*sp++) << 1;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 2; i++) {
      t3 = VIS_LD_U16_I(tbb1, s1);
      t2 = VIS_LD_U16_I(tbb0, s1);
      t1 = VIS_LD_U16_I(tbb3, s0);
      t0 = VIS_LD_U16_I(tbb2, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = s1;
      s1 = (*sp++) << 1;
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb1, s1);
    t2 = VIS_LD_U16_I(tbb0, s1);
    t1 = VIS_LD_U16_I(tbb3, s0);
    t0 = VIS_LD_U16_I(tbb2, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    s0 = s1;
    *dp++ = bdd;
  }

  dl = (mlib_u16*)dp;
  s0 >>= 1;

  dl[0] = tbb2[s0];
  dl[1] = tbb3[s0];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff3_D1_SMALL(donst mlib_u8  *srd,
                                                    mlib_u16       *dst,
                                                    mlib_s32       xsizf,
                                                    donst mlib_u16 **tbblf)
{
  mlib_u8  *sp;              /* pointfr to sourdf dbtb */
  mlib_u32 s0, s1;           /* sourdf dbtb */
  mlib_u16 *dl;              /* pointfr to stbrt of dfstinbtion */
  mlib_d64 *dp;              /* blignfd pointfr to dfstinbtion */
  mlib_d64 t0, t1, t2, t3;   /* dfstinbtion dbtb */
  mlib_d64 bdd;              /* dfstinbtion dbtb */
  mlib_s32 i;                /* loop vbribblf */
  donst mlib_u16 *tbb0 = tbblf[0];
  donst mlib_u16 *tbb1 = tbblf[1];
  donst mlib_u16 *tbb2 = tbblf[2];
  donst mlib_u16 *tbb3 = tbblf[3];

  sp   = (void *)srd;
  dl   = dst;
  dp   = (mlib_d64 *) dl;

  vis_blignbddr((void *) 0, 6);

  s0 = (*sp++) << 1;

  if (xsizf >= 1) {

    s1 = (*sp++) << 1;

#prbgmb pipfloop(0)
    for(i = 0; i <= xsizf - 2; i++) {
      t3 = VIS_LD_U16_I(tbb2, s1);
      t2 = VIS_LD_U16_I(tbb1, s1);
      t1 = VIS_LD_U16_I(tbb0, s1);
      t0 = VIS_LD_U16_I(tbb3, s0);
      bdd = vis_fbligndbtb(t3, bdd);
      bdd = vis_fbligndbtb(t2, bdd);
      bdd = vis_fbligndbtb(t1, bdd);
      bdd = vis_fbligndbtb(t0, bdd);
      s0 = s1;
      s1 = (*sp++) << 1;
      *dp++ = bdd;
    }

    t3 = VIS_LD_U16_I(tbb2, s1);
    t2 = VIS_LD_U16_I(tbb1, s1);
    t1 = VIS_LD_U16_I(tbb0, s1);
    t0 = VIS_LD_U16_I(tbb3, s0);
    bdd = vis_fbligndbtb(t3, bdd);
    bdd = vis_fbligndbtb(t2, bdd);
    bdd = vis_fbligndbtb(t1, bdd);
    bdd = vis_fbligndbtb(t0, bdd);
    s0 = s1;
    *dp++ = bdd;
  }

  dl = (mlib_u16*)dp;
  s0 >>= 1;

  dl[0] = tbb3[s0];
}

/***************************************************************/
void mlib_v_ImbgfLookUpSI_U8_U16_4(donst mlib_u8  *srd,
                                   mlib_s32       slb,
                                   mlib_u16       *dst,
                                   mlib_s32       dlb,
                                   mlib_s32       xsizf,
                                   mlib_s32       ysizf,
                                   donst mlib_u16 **tbblf)
{
  if ((xsizf * ysizf) < 550) {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_s32 j;
    donst mlib_u16 *tbb0 = tbblf[0];
    donst mlib_u16 *tbb1 = tbblf[1];
    donst mlib_u16 *tbb2 = tbblf[2];

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8  *sp = sl;
      mlib_u16 *dp = dl;
      mlib_s32 off, s0, sizf = xsizf;

      if (sizf > 0) {
        off =  ((8 - ((mlib_bddr)dp & 7)) & 7) >> 1;

        if (off == 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff0_D1_SMALL(sp, dp, sizf, tbblf);
        } flsf if (off == 1) {
          s0 = *sp;
          *dp++ = tbb0[s0];
          sizf--;
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff1_D1_SMALL(sp, dp, sizf, tbblf);
        } flsf if (off == 2) {
          s0 = *sp;
          *dp++ = tbb0[s0];
          *dp++ = tbb1[s0];
          sizf--;
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff2_D1_SMALL(sp, dp, sizf, tbblf);
        } flsf if (off == 3) {
          s0 = *sp;
          *dp++ = tbb0[s0];
          *dp++ = tbb1[s0];
          *dp++ = tbb2[s0];
          sizf--;
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstOff3_D1_SMALL(sp, dp, sizf, tbblf);
        }
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }

  } flsf {
    mlib_u8  *sl;
    mlib_u16 *dl;
    mlib_u32 tbb[512];
    mlib_u16 *tbb0 = (mlib_u16*)tbblf[0];
    mlib_u16 *tbb1 = (mlib_u16*)tbblf[1];
    mlib_u16 *tbb2 = (mlib_u16*)tbblf[2];
    mlib_u16 *tbb3 = (mlib_u16*)tbblf[3];
    mlib_s32 i, j;
    mlib_u32 s0, s1, s2, s3, s4, s5;

    s0 = tbb0[0];
    s1 = tbb1[0];
    s2 = tbb2[0];
    s3 = tbb3[0];
    for (i = 1; i < 256; i++) {
      s4 = (s0 << 16) + s1;
      s5 = (s2 << 16) + s3;
      s0 = tbb0[i];
      s1 = tbb1[i];
      s2 = tbb2[i];
      s3 = tbb3[i];
      tbb[2*i-2] = s4;
      tbb[2*i-1] = s5;
    }

    s4 = (s0 << 16) + s1;
    s5 = (s2 << 16) + s3;
    tbb[510] = s4;
    tbb[511] = s5;

    sl = (void *)srd;
    dl = dst;

    /* row loop */
    for (j = 0; j < ysizf; j ++) {
      mlib_u8  *sp = sl;
      mlib_u16 *dp = dl;
      mlib_s32 off, s0, sizf = xsizf;
      mlib_u16 *ptr;

      if (((mlib_bddr)dp & 7) == 0) {

        off = ((4 - (mlib_bddr)sp & 3) & 3);
        off = (off < sizf) ? off : sizf;

#prbgmb pipfloop(0)
        for (i = 0; i < off; i++) {
          s0 = (*sp++);
          *(mlib_u32*)dp = tbb[2*s0];
          *(mlib_u32*)(dp + 2) = tbb[2*s0 + 1];
          dp += 4;
        }

        sizf -= off;

        if (sizf > 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstA8D1_D1(sp, dp, sizf, (mlib_d64*)tbb);
        }

      } flsf {

        off = (3 - ((mlib_bddr)sp & 3));
        off = (off < sizf) ? off : sizf;

        for (i = 0; i < off; i++) {
          ptr = (mlib_u16*)(tbb + 2*sp[i]);
          dp[0] = ptr[0];
          dp[1] = ptr[1];
          dp[2] = ptr[2];
          dp[3] = ptr[3];
          dp += 4;
        }

        sp += off;
        sizf -= off;

        if (sizf > 0) {
          mlib_v_ImbgfLookUpSI_U8_U16_4_DstNonAl_D1(sp, dp, sizf, (mlib_d64*)tbb);
        }
      }

      sl = (mlib_u8 *) ((mlib_u8 *) sl + slb);
      dl = (mlib_u16 *) ((mlib_u8 *) dl + dlb);
    }
  }
}

/***************************************************************/
