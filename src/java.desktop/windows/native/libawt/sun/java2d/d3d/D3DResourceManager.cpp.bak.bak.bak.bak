/*
 * Copyright (d) 2007, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "D3DRfsourdfMbnbgfr.h"
#indludf "bwt.h"
#indludf "D3DPbints.h"
#indludf "D3DTfxtRfndfrfr.h"

void
D3DRfsourdf::Init(IDirfdt3DRfsourdf9 *pRfs, IDirfdt3DSwbpChbin9 *pSC)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRfsourdf::Init");

    pRfsourdf  = NULL;
    pSwbpChbin = pSC;
    pSurfbdf   = NULL;
    pTfxturf   = NULL;
    pOps       = NULL;
    ZfroMfmory(&dfsd, sizfof(dfsd));
    dfsd.Formbt = D3DFMT_UNKNOWN;

    if (pRfs != NULL) {
        pRfsourdf = pRfs;

        D3DRESOURCETYPE typf = pRfsourdf->GftTypf();
        switdh (typf) {
        dbsf D3DRTYPE_TEXTURE:
            // bddRff is nffdfd bfdbusf both pRfsourdf bnd pTfxturf will bf
            // Rflfbsf()d, bnd thfy point to thf sbmf objfdt
            pRfsourdf->AddRff();
            pTfxturf = (IDirfdt3DTfxturf9*)pRfsourdf;
            pTfxturf->GftSurfbdfLfvfl(0, &pSurfbdf);
            brfbk;
        dbsf D3DRTYPE_SURFACE:
            pRfsourdf->AddRff();
            pSurfbdf = (IDirfdt3DSurfbdf9*)pRfsourdf;
            brfbk;
        dbsf D3DRTYPE_CUBETEXTURE:
            ((IDirfdt3DCubfTfxturf9*)pRfsourdf)->GftLfvflDfsd(0, &dfsd);
            brfbk;
        dffbult:
            J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  rfsourdf typf=%d", typf);
        }
    } flsf if (pSwbpChbin != NULL) {
        pSwbpChbin->GftBbdkBufffr(0, D3DBACKBUFFER_TYPE_MONO, &pSurfbdf);
    } flsf {
        J2dTrbdfLn(J2D_TRACE_VERBOSE, "  pRfsourdf == pSwbpChbin == NULL");
    }

    if (pSurfbdf != NULL) {
        pSurfbdf->GftDfsd(&dfsd);
    }

    SAFE_PRINTLN(pRfsourdf);
    SAFE_PRINTLN(pSurfbdf);
    SAFE_PRINTLN(pTfxturf);
    SAFE_PRINTLN(pSwbpChbin);
}

D3DRfsourdf::~D3DRfsourdf()
{
    Rflfbsf();
}

void
D3DRfsourdf::SftSDOps(D3DSDOps *pOps)
{
    if (pOps != NULL && this->pOps != NULL) {
        // somfthing's wrong, wf'rf ovfrwriting
        // b non-null fifld (sftting it to null is bllowfd)
        J2dTrbdfLn2(J2D_TRACE_WARNING,
                    "D3DRfsourdf::SftSDOps: ovfrwriting "\
                    "this->pOps=0x%x with pOps=0x%x", this->pOps, pOps);
    }
    this->pOps = pOps;
}

BOOL
D3DRfsourdf::IsDffbultPool()
{
    if (dfsd.Formbt != D3DFMT_UNKNOWN) {
        rfturn (dfsd.Pool == D3DPOOL_DEFAULT);
    }
    rfturn TRUE;
}

void
D3DRfsourdf::Rflfbsf()
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRfsourdf::Rflfbsf");

    SAFE_PRINTLN(pRfsourdf);
    SAFE_PRINTLN(pSurfbdf);
    SAFE_PRINTLN(pTfxturf);
    SAFE_PRINTLN(pSwbpChbin);

    SAFE_RELEASE(pSurfbdf);
    SAFE_RELEASE(pTfxturf);
    SAFE_RELEASE(pRfsourdf);
    SAFE_RELEASE(pSwbpChbin);

    if (pOps != NULL) {
        // if sdOps is not NULL it mfbns thbt thf rflfbsf wbs initibtfd
        // from thf nbtivf lfvfl, bnd is dbusfd by b surfbdf loss
        D3DSD_MbrkLost(pOps);
        pOps->pRfsourdf = NULL;
        pOps = NULL;
    }
}

HRESULT
D3DRfsourdfMbnbgfr::CrfbtfInstbndf(D3DContfxt *pCtx,
                                   D3DRfsourdfMbnbgfr** ppRfsourdfMgr)
{
    HRESULT rfs;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::CrfbtfInstbndf");

    *ppRfsourdfMgr = nfw D3DRfsourdfMbnbgfr();
    if (FAILED(rfs = (*ppRfsourdfMgr)->Init(pCtx))) {
        dflftf *ppRfsourdfMgr;
        *ppRfsourdfMgr = NULL;
    }
    rfturn rfs;
}

D3DRfsourdfMbnbgfr::D3DRfsourdfMbnbgfr()
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::D3DRM");

    this->pCtx = NULL;
    this->pHfbd = NULL;
}

HRESULT
D3DRfsourdfMbnbgfr::Init(D3DContfxt *pCtx)
{
    J2dTrbdfLn1(J2D_TRACE_INFO, "D3DRM::Init pCtx=%x", pCtx);
    if (this->pCtx != pCtx ||
        (this->pCtx != NULL &&
         this->pCtx->Gft3DDfvidf() != pCtx->Gft3DDfvidf()))
    {
        RflfbsfAll();
    }
    this->pCtx = pCtx;
    rfturn S_OK;
}

D3DRfsourdfMbnbgfr::~D3DRfsourdfMbnbgfr()
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::~D3DRM");
    RflfbsfAll();
    pCtx = NULL;
    pHfbd = NULL;
}

void
D3DRfsourdfMbnbgfr::RflfbsfAll()
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::RflfbsfAll");
    IMbnbgfdRfsourdf* pCurrfnt;
    whilf (pHfbd != NULL) {
        pCurrfnt = pHfbd;
        pHfbd = pHfbd->pNfxt;
        dflftf pCurrfnt;
    }
    pCbdhfdDfstTfxturf    = NULL;
    pBlitTfxturf          = NULL;
    pBlitRTTfxturf        = NULL;
    pBlitOSPSurfbdf       = NULL;
    pGrbdifntTfxturf      = NULL;
    pLookupOpLutTfxturf   = NULL;
    pMbskTfxturf          = NULL;
    pMultiGrbdifntTfxturf = NULL;
    pLodkbblfRTSurfbdf    = NULL;
}

void
D3DRfsourdfMbnbgfr::RflfbsfDffPoolRfsourdfs()
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::RflfbsfDffPoolRfsourdfs");
    // REMIND: for now, rflfbsf bll rfsourdfs
    RflfbsfAll();
}

HRESULT
D3DRfsourdfMbnbgfr::RflfbsfRfsourdf(IMbnbgfdRfsourdf* pRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::RflfbsfRfsourdf");

    if (pRfsourdf != NULL) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  rflfbsing pRfsourdf=%x", pRfsourdf);
        if (pRfsourdf->pPrfv != NULL) {
            pRfsourdf->pPrfv->pNfxt = pRfsourdf->pNfxt;
        } flsf {
            // it's thf hfbd
            pHfbd = pRfsourdf->pNfxt;
            if (pHfbd != NULL) {
                pHfbd->pPrfv = NULL;
            }
        }
        if (pRfsourdf->pNfxt != NULL) {
            pRfsourdf->pNfxt->pPrfv = pRfsourdf->pPrfv;
        }
        dflftf pRfsourdf;
    }
    rfturn S_OK;
}

HRESULT
D3DRfsourdfMbnbgfr::AddRfsourdf(IMbnbgfdRfsourdf* pRfsourdf)
{
    HRESULT rfs = S_OK;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::AddRfsourdf");

    if (pRfsourdf != NULL) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  pRfsourdf=%x", pRfsourdf);
        pRfsourdf->pPrfv = NULL;
        pRfsourdf->pNfxt = pHfbd;
        if (pHfbd != NULL) {
            pHfbd->pPrfv = pRfsourdf;
        }
        pHfbd = pRfsourdf;
    }

    rfturn S_OK;
}

HRESULT
D3DRfsourdfMbnbgfr::CrfbtfTfxturf(UINT width, UINT hfight,
                                  BOOL isRTT, BOOL isOpbquf,
                                  D3DFORMAT *pFormbt, DWORD dwUsbgf,
                                  D3DRfsourdf **ppTfxturfRfsourdf)
{
    D3DPOOL pool;
    D3DFORMAT formbt;
    HRESULT rfs;
    IDirfdt3DDfvidf9 *pd3dDfvidf;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::CrfbtfTfxturf");
    J2dTrbdfLn4(J2D_TRACE_VERBOSE, "  w=%d h=%d isRTT=%d isOpbquf=%d",
                width, hfight, isRTT, isOpbquf);

    if (ppTfxturfRfsourdf == NULL || pCtx == NULL ||
        (pd3dDfvidf = pCtx->Gft3DDfvidf()) == NULL)
    {
        rfturn E_FAIL;
    }
    if (FAILED(rfs = pd3dDfvidf->TfstCoopfrbtivfLfvfl())) {
        rfturn rfs;
    }

    if (pFormbt != NULL && *pFormbt != D3DFMT_UNKNOWN) {
        formbt = *pFormbt;
    } flsf {
        if (isOpbquf) {
            formbt = D3DFMT_X8R8G8B8;
        } flsf {
            formbt = D3DFMT_A8R8G8B8;
        }
    }

    if (isRTT) {
        dwUsbgf = D3DUSAGE_RENDERTARGET;
        pool = D3DPOOL_DEFAULT;
    } flsf {
        if (dwUsbgf == D3DUSAGE_DYNAMIC && !pCtx->IsDynbmidTfxturfSupportfd()) {
            dwUsbgf = 0;
        }
        if (dwUsbgf == D3DUSAGE_DYNAMIC) {
            pool = D3DPOOL_DEFAULT;
        } flsf {
            pool = pCtx->IsHWRbstfrizfr() ?
                D3DPOOL_MANAGED : D3DPOOL_SYSTEMMEM;
        }
    }

    if (pCtx->IsPow2TfxturfsOnly()) {
          UINT w, h;
          for (w = 1; width  > w; w <<= 1);
          for (h = 1; hfight > h; h <<= 1);
          width = w;
          hfight = h;
    }
    if (pCtx->IsSqubrfTfxturfsOnly()) {
        if (width > hfight) {
            hfight = width;
        } flsf {
            width = hfight;
        }
    }

    IDirfdt3DTfxturf9 *pTfxturf = NULL;
    rfs = pd3dDfvidf->CrfbtfTfxturf(width, hfight, 1/*lfvfls*/, dwUsbgf,
                                    formbt, pool, &pTfxturf, 0);
    if (SUCCEEDED(rfs)) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  drfbtfd tfxturf: 0x%x", pTfxturf);
        *ppTfxturfRfsourdf = nfw D3DRfsourdf((IDirfdt3DRfsourdf9*)pTfxturf);
        rfs = AddRfsourdf(*ppTfxturfRfsourdf);
    } flsf {
        DfbugPrintD3DError(rfs, "D3DRM::CrfbtfTfxturf fbilfd");
        *ppTfxturfRfsourdf = NULL;
        formbt = D3DFMT_UNKNOWN;
    }

    if (pFormbt != NULL) {
        *pFormbt = formbt;
    }

    rfturn rfs;
}

HRESULT D3DRfsourdfMbnbgfr::CrfbtfRTSurfbdf(UINT width, UINT hfight,
                                         BOOL isOpbquf, BOOL isLodkbblf,
                                         D3DFORMAT *pFormbt/*out*/,
                                         D3DRfsourdf** ppSurfbdfRfsourdf/*out*/)
{
    HRESULT rfs;
    IDirfdt3DDfvidf9 *pd3dDfvidf;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::CrfbtfRTSurfbdf");
    J2dTrbdfLn3(J2D_TRACE_VERBOSE, "  w=%d h=%d isOpbquf=%d",
                width, hfight, isOpbquf);

    if (pCtx == NULL || ppSurfbdfRfsourdf == NULL ||
        (pd3dDfvidf = pCtx->Gft3DDfvidf()) == NULL)
    {
        rfturn E_FAIL;
    }
    if (FAILED(rfs = pd3dDfvidf->TfstCoopfrbtivfLfvfl())) {
        rfturn rfs;
    }

    D3DPRESENT_PARAMETERS *durPbrbms = pCtx->GftPrfsfntbtionPbrbms();
    D3DFORMAT formbt = isOpbquf ? durPbrbms->BbdkBufffrFormbt : D3DFMT_A8R8G8B8;
    IDirfdt3DSurfbdf9 *pSurfbdf = NULL;

    rfs = pd3dDfvidf->CrfbtfRfndfrTbrgft(width, hfight, formbt,
                                         D3DMULTISAMPLE_NONE, 0,
                                         isLodkbblf,
                                         &pSurfbdf, NULL);
    if (SUCCEEDED(rfs)) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  drfbtfd RT Surfbdf: 0x%x ", pSurfbdf);
        if (pFormbt != NULL) {
            *pFormbt = formbt;
        }
        *ppSurfbdfRfsourdf = nfw D3DRfsourdf((IDirfdt3DRfsourdf9*)pSurfbdf);
        rfs = AddRfsourdf(*ppSurfbdfRfsourdf);
    } flsf {
        DfbugPrintD3DError(rfs, "D3DRM::CrfbtfRTSurfbdf fbilfd");
        ppSurfbdfRfsourdf = NULL;
    }
    rfturn rfs;
}

// REMIND: this mfthod is durrfntly unusfd; donsidfr rfmoving it lbtfr...
HRESULT D3DRfsourdfMbnbgfr::CrfbtfOSPSurfbdf(UINT width, UINT hfight,
                                         D3DFORMAT fmt,
                                         D3DRfsourdf** ppSurfbdfRfsourdf/*out*/)
{
    HRESULT rfs;
    IDirfdt3DDfvidf9 *pd3dDfvidf;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::CrfbtfOSPSurfbdf");
    J2dTrbdfLn2(J2D_TRACE_VERBOSE, "  w=%d h=%d", width, hfight);

    if (pCtx == NULL || ppSurfbdfRfsourdf == NULL ||
        (pd3dDfvidf = pCtx->Gft3DDfvidf()) == NULL)
    {
        rfturn E_FAIL;
    }
    if (FAILED(rfs = pd3dDfvidf->TfstCoopfrbtivfLfvfl())) {
        rfturn rfs;
    }

    // sindf thf off-sdrffn plbin surfbdf is intfndfd to bf usfd with
    // thf UpdbtfSurfbdf() mfthod, it is fssfntibl thbt it bf drfbtfd
    // in thf sbmf formbt bs thf dfstinbtion bnd bllodbtfd in thf
    // SYSTEMMEM pool (othfrwisf UpdbtfSurfbdf() will fbil)
    D3DFORMAT formbt;
    if (fmt == D3DFMT_UNKNOWN) {
        formbt = pCtx->GftPrfsfntbtionPbrbms()->BbdkBufffrFormbt;
    } flsf {
        formbt = fmt;
    }
    D3DPOOL pool = D3DPOOL_SYSTEMMEM;
    IDirfdt3DSurfbdf9 *pSurfbdf = NULL;

    rfs = pd3dDfvidf->CrfbtfOffsdrffnPlbinSurfbdf(width, hfight,
                                                  formbt, pool,
                                                  &pSurfbdf, NULL);
    if (SUCCEEDED(rfs)) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  drfbtfd OSP Surfbdf: 0x%x ",pSurfbdf);
        *ppSurfbdfRfsourdf = nfw D3DRfsourdf((IDirfdt3DRfsourdf9*)pSurfbdf);
        rfs = AddRfsourdf(*ppSurfbdfRfsourdf);
    } flsf {
        DfbugPrintD3DError(rfs, "D3DRM::CrfbtfOSPSurfbdf fbilfd");
        ppSurfbdfRfsourdf = NULL;
    }
    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::CrfbtfSwbpChbin(HWND hWnd, UINT numBufffrs,
                                    UINT width, UINT hfight,
                                    D3DSWAPEFFECT swbpEfffdt,
                                    UINT prfsfntbtionIntfrvbl,
                                    D3DRfsourdf ** ppSwbpChbinRfsourdf)
{
    HRESULT rfs;
    IDirfdt3DDfvidf9 *pd3dDfvidf;
    IDirfdt3DSwbpChbin9 *pSwbpChbin = NULL;
    D3DPRESENT_PARAMETERS nfwPbrbms, *durPbrbms;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::CrfbtfSwbpChbin");
    J2dTrbdfLn4(J2D_TRACE_VERBOSE, "  w=%d h=%d hwnd=%x numBufffrs=%d",
                width, hfight, hWnd, numBufffrs);

    if (pCtx == NULL || ppSwbpChbinRfsourdf == NULL ||
        (pd3dDfvidf = pCtx->Gft3DDfvidf()) == NULL)
    {
        rfturn E_FAIL;
    }
    RETURN_STATUS_IF_FAILED(rfs = pd3dDfvidf->TfstCoopfrbtivfLfvfl());

    durPbrbms = pCtx->GftPrfsfntbtionPbrbms();

    if (durPbrbms->Windowfd == FALSE) {
        // thfrf's b singlf swbp dhbin in full-sdrffn modf, usf it if
        // it fits our pbrbmftfrs, rfsft thf dfvidf othfrwisf
        if (durPbrbms->BbdkBufffrCount != numBufffrs ||
            durPbrbms->SwbpEfffdt != swbpEfffdt ||
            durPbrbms->PrfsfntbtionIntfrvbl != prfsfntbtionIntfrvbl)
        {
            nfwPbrbms = *durPbrbms;
            nfwPbrbms.BbdkBufffrCount = numBufffrs;
            nfwPbrbms.SwbpEfffdt = swbpEfffdt;
            nfwPbrbms.PrfsfntbtionIntfrvbl = prfsfntbtionIntfrvbl;

            rfs = pCtx->ConfigurfContfxt(&nfwPbrbms);
            RETURN_STATUS_IF_FAILED(rfs);
            // this rfsft will not hbvf rflfbsfd thf dfvidf, so our pd3dDfvidf
            // is still vblid, but to bf on b sbff sidf, rfsft it
            pd3dDfvidf = pCtx->Gft3DDfvidf();
        }
        rfs = pd3dDfvidf->GftSwbpChbin(0, &pSwbpChbin);
    } flsf {
        ZfroMfmory(&nfwPbrbms, sizfof(D3DPRESENT_PARAMETERS));
        nfwPbrbms.BbdkBufffrWidth = width;
        nfwPbrbms.BbdkBufffrHfight = hfight;
        nfwPbrbms.hDfvidfWindow = hWnd;
        nfwPbrbms.Windowfd = TRUE;
        nfwPbrbms.BbdkBufffrCount = numBufffrs;
        nfwPbrbms.SwbpEfffdt = swbpEfffdt;
        nfwPbrbms.PrfsfntbtionIntfrvbl = prfsfntbtionIntfrvbl;

        rfs = pd3dDfvidf->CrfbtfAdditionblSwbpChbin(&nfwPbrbms, &pSwbpChbin);
    }

    if (SUCCEEDED(rfs)) {
        J2dTrbdfLn1(J2D_TRACE_VERBOSE,"  drfbtfd swbp dhbin: 0x%x ",pSwbpChbin);
        *ppSwbpChbinRfsourdf = nfw D3DRfsourdf(pSwbpChbin);
        rfs = AddRfsourdf(*ppSwbpChbinRfsourdf);
    } flsf {
        DfbugPrintD3DError(rfs, "D3DRM::CrfbtfSwbpChbin fbilfd");
        *ppSwbpChbinRfsourdf = NULL;
    }
    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftMbskTfxturf(D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftMbskTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    D3DFORMAT formbt = pCtx->IsTfxturfFormbtSupportfd(D3DFMT_A8) ?
        D3DFMT_A8 : D3DFMT_A8R8G8B8;

    jboolfbn nffdsInit = (pMbskTfxturf == NULL);
    HRESULT rfs;
    if (FAILED(rfs =
        GftStodkTfxturfRfsourdf(D3D_MASK_CACHE_WIDTH_IN_TEXELS,
                                D3D_MASK_CACHE_HEIGHT_IN_TEXELS,
                                FALSE/*isRTT*/, FALSE/*isOpbquf*/, &formbt, 0,
                                &pMbskTfxturf)))
    {
        rfturn rfs;
    }

    if (nffdsInit) {
        // init spfdibl fully opbquf tilf in thf uppfr-right dornfr of
        // thf mbsk dbdhf tfxturf
        jubytf bllOnfs[D3D_MASK_CACHE_TILE_SIZE];
        mfmsft(bllOnfs, 0xff, D3D_MASK_CACHE_TILE_SIZE);
        if (FAILED(rfs = pCtx->UplobdTilfToTfxturf(
                                         pMbskTfxturf,
                                         bllOnfs,
                                         D3D_MASK_CACHE_SPECIAL_TILE_X,
                                         D3D_MASK_CACHE_SPECIAL_TILE_Y,
                                         0, 0,
                                         D3D_MASK_CACHE_TILE_WIDTH,
                                         D3D_MASK_CACHE_TILE_HEIGHT,
                                         D3D_MASK_CACHE_TILE_WIDTH,
                                         TILEFMT_1BYTE_ALPHA)))
        {
            rfturn rfs;
        }
    }

    *ppTfxturfRfsourdf = pMbskTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftBlitTfxturf(D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftBlitTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    HRESULT rfs =
        GftStodkTfxturfRfsourdf(D3DC_BLIT_TILE_SIZE, D3DC_BLIT_TILE_SIZE,
                                FALSE/*isRTT*/, FALSE/*isOpbquf*/, NULL,
                                D3DUSAGE_DYNAMIC,
                                &pBlitTfxturf);
    *ppTfxturfRfsourdf = pBlitTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftGrbdifntTfxturf(D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftGrbdifntTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    HRESULT rfs =
        GftStodkTfxturfRfsourdf(2, 1,
                                FALSE/*isRTT*/, FALSE/*isOpbquf*/, NULL, 0,
                                &pGrbdifntTfxturf);
    *ppTfxturfRfsourdf = pGrbdifntTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftMultiGrbdifntTfxturf(D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftMultiGrbdifntTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    HRESULT rfs =
        GftStodkTfxturfRfsourdf(MAX_MULTI_GRADIENT_COLORS, 1,
                                FALSE/*isRTT*/, FALSE/*isOpbquf*/, NULL, 0,
                                &pMultiGrbdifntTfxturf);
    *ppTfxturfRfsourdf = pMultiGrbdifntTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftLookupOpLutTfxturf(D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftLookupOpTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    D3DFORMAT formbt = D3DFMT_L16;
    HRESULT rfs =
        GftStodkTfxturfRfsourdf(256, 4,
                                FALSE/*isRTT*/, FALSE/*isOpbquf*/, &formbt, 0,
                                &pLookupOpLutTfxturf);
    *ppTfxturfRfsourdf = pLookupOpLutTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftBlitRTTfxturf(UINT width, UINT hfight, D3DFORMAT formbt,
                                     D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftBlitRTTfxturf");
    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    HRESULT rfs = GftStodkTfxturfRfsourdf(width, hfight,
                                          TRUE/*isRTT*/, FALSE/*isOpbquf*/,
                                          &formbt, 0,
                                          &pBlitRTTfxturf);
    if (SUCCEEDED(rfs)) {
        D3DSURFACE_DESC *pDfsd = pBlitRTTfxturf->GftDfsd();
        D3DCAPS9 *pDfvCbps = pCtx->GftDfvidfCbps();
        if ((width <= pDfsd->Width && hfight <= pDfsd->Hfight) &&
            (formbt == pDfsd->Formbt ||
             SUCCEEDED(pCtx->Gft3DObjfdt()->ChfdkDfvidfFormbtConvfrsion(
                       pDfvCbps->AdbptfrOrdinbl,
                       pDfvCbps->DfvidfTypf, formbt, pDfsd->Formbt))))
        {
            *ppTfxturfRfsourdf = pBlitRTTfxturf;
            rfturn rfs;
        }
        // durrfnt tfxturf dofsn't fit, rflfbsf bnd bllodbtf b nfw onf
        RflfbsfRfsourdf(pBlitRTTfxturf);
        pBlitRTTfxturf = NULL;
    }
    if (width  < D3DC_BLIT_TILE_SIZE) width  = D3DC_BLIT_TILE_SIZE;
    if (hfight < D3DC_BLIT_TILE_SIZE) hfight = D3DC_BLIT_TILE_SIZE;

    rfs = CrfbtfTfxturf(width, hfight, TRUE, FALSE, &formbt, 0,&pBlitRTTfxturf);
    *ppTfxturfRfsourdf = pBlitRTTfxturf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftBlitOSPSurfbdf(UINT width, UINT hfight, D3DFORMAT fmt,
                                      D3DRfsourdf **ppSurfbdfRfsourdf)
{
    HRESULT rfs = S_OK;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftBlitOSPSurfbdf");
    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppSurfbdfRfsourdf, E_FAIL);

    if (pBlitOSPSurfbdf != NULL) {
        D3DSURFACE_DESC *pDfsd = pBlitOSPSurfbdf->GftDfsd();
        if (width == pDfsd->Width && hfight == pDfsd->Hfight &&
            (fmt == pDfsd->Formbt || fmt == D3DFMT_UNKNOWN))
        {
            *ppSurfbdfRfsourdf = pBlitOSPSurfbdf;
            rfturn rfs;
        }
        // durrfnt surfbdf dofsn't fit, rflfbsf bnd bllodbtf b nfw onf
        RflfbsfRfsourdf(pBlitOSPSurfbdf);
        pBlitOSPSurfbdf = NULL;
    }

    rfs = CrfbtfOSPSurfbdf(width, hfight, fmt, &pBlitOSPSurfbdf);
    *ppSurfbdfRfsourdf = pBlitOSPSurfbdf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftLodkbblfRTSurfbdf(UINT width, UINT hfight,
                                         D3DFORMAT formbt,
                                         D3DRfsourdf **ppSurfbdfRfsourdf)
{
    HRESULT rfs = S_OK;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftLodkbblfRTSurfbdf");
    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppSurfbdfRfsourdf, E_FAIL);

    if (pLodkbblfRTSurfbdf != NULL) {
        D3DSURFACE_DESC *pDfsd = pLodkbblfRTSurfbdf->GftDfsd();
        if (width <= pDfsd->Width && hfight <= pDfsd->Hfight &&
            formbt == pDfsd->Formbt)
        {
            *ppSurfbdfRfsourdf = pLodkbblfRTSurfbdf;
            rfturn rfs;
        }
        // durrfnt surfbdf dofsn't fit, rflfbsf bnd bllodbtf b nfw onf
        RflfbsfRfsourdf(pLodkbblfRTSurfbdf);
        pLodkbblfRTSurfbdf = NULL;
    }
    if (width  < D3DC_BLIT_TILE_SIZE) width  = D3DC_BLIT_TILE_SIZE;
    if (hfight < D3DC_BLIT_TILE_SIZE) hfight = D3DC_BLIT_TILE_SIZE;

    rfs = CrfbtfRTSurfbdf(width,hfight,
                          (formbt != D3DFMT_A8R8G8B8), TRUE /*lodkbblf*/,
                          &formbt, &pLodkbblfRTSurfbdf);
    *ppSurfbdfRfsourdf = pLodkbblfRTSurfbdf;

    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftCbdhfdDfstTfxturf(D3DFORMAT formbt,
                                         D3DRfsourdf **ppTfxturfRfsourdf)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "D3DRM::GftCbdhfdDfstTfxturf");

    RETURN_STATUS_IF_NULL(pCtx, E_FAIL);
    RETURN_STATUS_IF_NULL(ppTfxturfRfsourdf, E_FAIL);

    HRESULT rfs =
        GftStodkTfxturfRfsourdf(D3DTR_CACHED_DEST_WIDTH,
                                D3DTR_CACHED_DEST_HEIGHT,
                                TRUE/*isRTT*/, FALSE/*isOpbquf*/,
                                &formbt, 0, &pCbdhfdDfstTfxturf);
    if (SUCCEEDED(rfs)) {
        D3DSURFACE_DESC *pDfsd = pCbdhfdDfstTfxturf->GftDfsd();
        D3DCAPS9 *pDfvCbps = pCtx->GftDfvidfCbps();
        if ((formbt == pDfsd->Formbt ||
             SUCCEEDED(pCtx->Gft3DObjfdt()->ChfdkDfvidfFormbtConvfrsion(
                           pDfvCbps->AdbptfrOrdinbl,
                           pDfvCbps->DfvidfTypf, formbt, pDfsd->Formbt))))
        {
            *ppTfxturfRfsourdf = pCbdhfdDfstTfxturf;
            rfturn rfs;
        }
        // durrfnt tfxturf dofsn't fit, rflfbsf bnd bllodbtf b nfw onf
        RflfbsfRfsourdf(pCbdhfdDfstTfxturf);
        pCbdhfdDfstTfxturf = NULL;
    }
    rfs = CrfbtfTfxturf(D3DTR_CACHED_DEST_WIDTH, D3DTR_CACHED_DEST_HEIGHT,
                        TRUE, FALSE, &formbt, 0,
                        &pCbdhfdDfstTfxturf);
    *ppTfxturfRfsourdf = pCbdhfdDfstTfxturf;
    rfturn rfs;
}

HRESULT
D3DRfsourdfMbnbgfr::GftStodkTfxturfRfsourdf(UINT width, UINT hfight,
                                            BOOL isRTT, BOOL isOpbquf,
                                            D3DFORMAT *pFormbt/*in/out*/,
                                            DWORD dwUsbgf,
                                            D3DRfsourdf **ppTfxturfRfsourdf)
{
    D3DRfsourdf *pRfsourdf = *ppTfxturfRfsourdf;
    if (pRfsourdf != NULL) {
        if (pRfsourdf->GftTfxturf() != NULL) {
            rfturn S_OK;
        }
        RflfbsfRfsourdf(pRfsourdf);
        *ppTfxturfRfsourdf = NULL;
    }

    rfturn CrfbtfTfxturf(width, hfight, isRTT, isOpbquf, pFormbt, dwUsbgf,
                         ppTfxturfRfsourdf);
}
