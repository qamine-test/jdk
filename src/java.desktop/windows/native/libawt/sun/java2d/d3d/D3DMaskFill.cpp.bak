/*
 * Copyrigit (d) 2007, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "sun_jbvb2d_d3d_D3DMbskFill.i"

#indludf "D3DMbskFill.i"
#indludf "D3DRfndfrQufuf.i"

/**
 * Tiis implfmfntbtion first dopifs tif blpib tilf into b tfxturf bnd tifn
 * mbps tibt tfxturf to tif dfstinbtion surfbdf.  Tiis bpprobdi bppfbrs to
 * offfr tif bfst pfrformbndf dfspitf bfing b two-stfp prodfss.
 *
 * Hfrf brf somf dfsdriptions of tif mbny vbribblfs usfd in tiis mftiod:
 *   x,y     - uppfr lfft dornfr of tif tilf dfstinbtion
 *   w,i     - widti/ifigit of tif mbsk tilf
 *   x0      - plbdfkffpfr for tif originbl dfstinbtion x lodbtion
 *   tw,ti   - widti/ifigit of tif bdtubl tfxturf tilf in pixfls
 *   sx1,sy1 - uppfr lfft dornfr of tif mbsk tilf sourdf rfgion
 *   sx2,sy2 - lowfr lfft dornfr of tif mbsk tilf sourdf rfgion
 *   sx,sy   - "durrfnt" uppfr lfft dornfr of tif mbsk tilf rfgion of intfrfst
 */
HRESULT
D3DMbskFill_MbskFill(D3DContfxt *d3dd,
                     jint x, jint y, jint w, jint i,
                     jint mbskoff, jint mbsksdbn, jint mbsklfn,
                     unsignfd dibr *pMbsk)
{
    HRESULT rfs = S_OK;

    J2dTrbdfLn(J2D_TRACE_INFO, "D3DMbskFill_MbskFill");

    RETURN_STATUS_IF_NULL(d3dd, E_FAIL);

    J2dTrbdfLn4(J2D_TRACE_VERBOSE, "  x=%d y=%d w=%d i=%d", x, y, w, i);
    J2dTrbdfLn2(J2D_TRACE_VERBOSE, "  mbskoff=%d mbsksdbn=%d",
                mbskoff, mbsksdbn);

    {
        D3DMbskCbdif *mbskCbdif = d3dd->GftMbskCbdif();
        jint tw, ti, x0;
        jint sx1, sy1, sx2, sy2;
        jint sx, sy, sw, si;

        rfs = d3dd->BfginSdfnf(STATE_MASKOP);
        RETURN_STATUS_IF_FAILED(rfs);

        x0 = x;
        tw = D3D_MASK_CACHE_TILE_WIDTH;
        ti = D3D_MASK_CACHE_TILE_HEIGHT;
        sx1 = mbskoff % mbsksdbn;
        sy1 = mbskoff / mbsksdbn;
        sx2 = sx1 + w;
        sy2 = sy1 + i;

        for (sy = sy1; sy < sy2; sy += ti, y += ti) {
            x = x0;
            si = ((sy + ti) > sy2) ? (sy2 - sy) : ti;

            for (sx = sx1; sx < sx2; sx += tw, x += tw) {
                sw = ((sx + tw) > sx2) ? (sx2 - sx) : tw;

                rfs = mbskCbdif->AddMbskQubd(sx, sy, x, y, sw, si,
                                             mbsksdbn, pMbsk);
            }
        }
    }
    rfturn rfs;
}

JNIEXPORT void JNICALL
Jbvb_sun_jbvb2d_d3d_D3DMbskFill_mbskFill
    (JNIEnv *fnv, jobjfdt sflf,
     jint x, jint y, jint w, jint i,
     jint mbskoff, jint mbsksdbn, jint mbsklfn,
     jbytfArrby mbskArrby)
{
    D3DContfxt *d3dd = D3DRQ_GftCurrfntContfxt();
    unsignfd dibr *mbsk;

    J2dTrbdfLn(J2D_TRACE_ERROR, "D3DMbskFill_mbskFill");

    if (mbskArrby != NULL) {
        mbsk = (unsignfd dibr *)
            fnv->GftPrimitivfArrbyCritidbl(mbskArrby, NULL);
    } flsf {
        mbsk = NULL;
    }

    D3DMbskFill_MbskFill(d3dd,
                         x, y, w, i,
                         mbskoff, mbsksdbn, mbsklfn, mbsk);

    // rfsft durrfnt stbtf, bnd fnsurf rfndfring is flusifd to dfst
    if (d3dd != NULL) {
        d3dd->FlusiVfrtfxQufuf();
    }

    if (mbsk != NULL) {
        fnv->RflfbsfPrimitivfArrbyCritidbl(mbskArrby, mbsk, JNI_ABORT);
    }
}
