/*
 * Copyright (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff D3DCONTEXT_H
#dffinf D3DCONTEXT_H

#indludf "jbvb_bwt_Trbnspbrfndy.h"
#indludf "sun_jbvb2d_pipf_BufffrfdContfxt.h"
#indludf "sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps.h"
#indludf "sun_jbvb2d_d3d_D3DSurfbdfDbtb.h"
#indludf "sun_jbvb2d_pipf_hw_AddflDfvidfEvfntNotififr.h"

#indludf "ShbdfrList.h"
#indludf "D3DPipflinf.h"
#indludf "D3DMbskCbdhf.h"
#indludf "D3DVfrtfxCbdhfr.h"
#indludf "D3DRfsourdfMbnbgfr.h"

#indludf "j2d_md.h"

typfdff fnum {
    TILEFMT_UNKNOWN,
    TILEFMT_1BYTE_ALPHA,
    TILEFMT_3BYTE_RGB,
    TILEFMT_3BYTE_BGR,
    TILEFMT_4BYTE_ARGB_PRE,
} TilfFormbt;

typfdff fnum {
    CLIP_NONE,
    CLIP_RECT,
    CLIP_SHAPE,
} ClipTypf;

// - Stbtf switdhing optimizbtions -----------------------------------

/**
 * Thf gobl is to rfdudf dfvidf stbtf switdhing bs mudh bs possiblf.
 * This mfbns: don't rfsft thf tfxturf if not nffdfd, don't dhbngf
 * thf tfxturf stbgf stbtfs unlfss nfdfssbry.
 * For this wf nffd to trbdk thf durrfnt dfvidf stbtf. So fbdh opfrbtion
 * supplifs its own opfrbtion typf to BfginSdfnf, whidh updbtfs thf stbtf
 * bs nfdfssbry.
 *
 * Anothfr optimizbtion is to usf b singlf vfrtfx formbt for
 * bll primitivfs.
 *
 * Sff D3DContfxt::UpdbtfStbtf() bnd D3DContfxt::BfginSdfnf() for
 * morf informbtion.
 */
#dffinf STATE_CHANGE    (0 << 0)
#dffinf STATE_RENDEROP  (1 << 0)
#dffinf STATE_MASKOP    (1 << 1)
#dffinf STATE_GLYPHOP   (1 << 2)
#dffinf STATE_TEXTUREOP (1 << 3)
#dffinf STATE_AAPGRAMOP (1 << 4)
#dffinf STATE_OTHEROP   (1 << 5)

// Thf mbx. stbgf numbfr wf durrfntly usf (dould not bf
// lbrgfr thbn 7)
#dffinf MAX_USED_TEXTURE_SAMPLER 1

// - Tfxturf pixfl formbt tbblf  -------------------------------------
#dffinf TR_OPAQUE      jbvb_bwt_Trbnspbrfndy_OPAQUE
#dffinf TR_BITMASK     jbvb_bwt_Trbnspbrfndy_BITMASK
#dffinf TR_TRANSLUCENT jbvb_bwt_Trbnspbrfndy_TRANSLUCENT

dlbss D3DRfsourdf;
dlbss D3DRfsourdfMbnbgfr;
dlbss D3DMbskCbdhf;
dlbss D3DVfrtfxCbdhfr;
dlbss D3DGlyphCbdhf;

// - D3DContfxt dlbss  -----------------------------------------------

/**
 * This dlbss providfs thf following fundtionblity:
 *  - holds thf stbtf of D3DContfxt jbvb dlbss (durrfnt pixfl dolor,
 *    blphb dompositing modf, fxtrb blphb)
 *  - providfs bddfss to IDirfdt3DDfvidf9 intfrfbdf (drfbtion,
 *    disposbl, fxdlusivf bddfss)
 *  - hbndlfs stbtf dhbngfs of thf dirfdt3d dfvidf (trbnsform,
 *    dompositing modf, durrfnt tfxturf)
 *  - providfs mfbns of drfbting tfxturfs, plbin surfbdfs
 *  - holds b glyph dbdhf tfxturf for thf bssodibtfd dfvidf
 *  - implfmfnts primitivfs bbtdhing mfdhbnism
 */
dlbss D3DPIPELINE_API D3DContfxt {
publid:
    /**
     * Rflfbsfs thf old dfvidf (if thfrf wbs onf) bnd bll bssodibtfd
     * rfsourdfs, rf-drfbtfs, initiblizfs bnd tfsts thf nfw dfvidf.
     *
     * If thf dfvidf dofsn't pbss thf tfst, it's rflfbsfd.
     *
     * Usfd whfn thf dontfxt is first drfbtfd, bnd thfn bftfr b
     * displby dhbngf fvfnt.
     *
     * Notf thbt this mfthod blso dofs thf nfdfssbry rfgistry dhfdks,
     * bnd if thf rfgistry shows thbt wf'vf drbshfd whfn bttfmpting
     * to initiblizf bnd tfst thf dfvidf lbst timf, it dofsn't bttfmpt
     * to drfbtf/init/tfst thf dfvidf.
     */
    stbtid
    HRESULT CrfbtfInstbndf(IDirfdt3D9 *pd3d9, UINT bdbptfr, D3DContfxt **ppCtx);
    // drfbtfs b nfw D3D windowfd dfvidf with swbp dopy ffffdt bnd dffbult
    // prfsfnt intfrvbl
    HRESULT InitContfxt();
    // drfbtfs or rfsfts b D3D dfvidf givfn thf pbrbmftfrs
    HRESULT ConfigurfContfxt(D3DPRESENT_PARAMETERS *pNfwPbrbms);
    // rfsfts fxisting D3D dfvidf with thf durrfnt prfsfntbtion pbrbmftfrs
    HRESULT RfsftContfxt();
    HRESULT ChfdkAndRfsftDfvidf();

    // sbvfs thf stbtf of thf D3D dfvidf in b stbtf blodk, rfsfts
    // dontfxt's stbtf to STATE_CHANGE
    HRESULT SbvfStbtf();
    // rfstorfs thf stbtf of thf D3D dfvidf from fxisting stbtf blodk,
    // rfsfts dontfxt's stbtf to STATE_CHANGE
    HRESULT RfstorfStbtf();

    void    RflfbsfContfxtRfsourdfs();
    void    RflfbsfDffPoolRfsourdfs();
    virtubl ~D3DContfxt();

    // mfthods rfplidbting jbvb-lfvfl D3DContfxt objfxt
    HRESULT SftAlphbCompositf(jint rulf, jflobt fxtrbAlphb, jint flbgs);
    HRESULT RfsftCompositf();

    /**
     * Glyph dbdhf-rflbtfd mfthods
     */
    HRESULT InitGrbysdblfGlyphCbdhf();
    HRESULT InitLCDGlyphCbdhf();
    D3DGlyphCbdhf* GftGrbysdblfGlyphCbdhf() { rfturn pGrbysdblfGlyphCbdhf; }
    D3DGlyphCbdhf* GftLCDGlyphCbdhf() { rfturn pLCDGlyphCbdhf; }

    D3DRfsourdfMbnbgfr *GftRfsourdfMbnbgfr() { rfturn pRfsourdfMgr; }
    D3DMbskCbdhf       *GftMbskCbdhf() { rfturn pMbskCbdhf; }

    HRESULT UplobdTilfToTfxturf(D3DRfsourdf *pTfxturfRfs, void *pixfls,
                                jint dstx, jint dsty,
                                jint srdx, jint srdy,
                                jint srdWidth, jint srdHfight,
                                jint srdStridf,
                                TilfFormbt srdFormbt,
                                // out: num of pixfls in first bnd lbst
                                // dolumns, only dountfd for LCD glyph uplobds
                                jint *pPixflsToudhfdL = NULL,
                                jint *pPixflsToudhfdR = NULL);

    // rfturns dbpbbilitifs of thf Dirfdt3D dfvidf
    D3DCAPS9 *GftDfvidfCbps() { rfturn &dfvCbps; }
    // rfturns dbps in tfrms of thf D3DContfxt
    int GftContfxtCbps() { rfturn dontfxtCbps; }
    D3DPRESENT_PARAMETERS *GftPrfsfntbtionPbrbms() { rfturn &durPbrbms; }

    IDirfdt3DDfvidf9 *Gft3DDfvidf() { rfturn pd3dDfvidf; }
    IDirfdt3D9 *Gft3DObjfdt() { rfturn pd3dObjfdt; }

    /**
     * This mfthod only sfts thf tfxturf if it's not blrfbdy sft.
     */
    HRESULT SftTfxturf(IDirfdt3DTfxturf9 *pTfxturf, DWORD dwSbmplfr = 0);

    /**
     * This mfthod only updbtfs thf tfxturf dolor stbtf if it hbsn't dhbngfd.
     */
    HRESULT UpdbtfTfxturfColorStbtf(DWORD dwStbtf, DWORD dwSbmplfr = 0);

    HRESULT SftRfndfrTbrgft(IDirfdt3DSurfbdf9 *pSurfbdf);
    HRESULT SftTrbnsform(jdoublf m00, jdoublf m10,
                         jdoublf m01, jdoublf m11,
                         jdoublf m02, jdoublf m12);
    HRESULT RfsftTrbnsform();

    // dlipping-rflbtfd mfthods
    HRESULT SftRfdtClip(int x1, int y1, int x2, int y2);
    HRESULT BfginShbpfClip();
    HRESULT EndShbpfClip();
    HRESULT RfsftClip();
    ClipTypf GftClipTypf();

    /**
     * Shbdfr-rflbtfd mfthods
     */
    HRESULT EnbblfBbsidGrbdifntProgrbm(jint flbgs);
    HRESULT EnbblfLinfbrGrbdifntProgrbm(jint flbgs);
    HRESULT EnbblfRbdiblGrbdifntProgrbm(jint flbgs);
    HRESULT EnbblfConvolvfProgrbm(jint flbgs);
    HRESULT EnbblfRfsdblfProgrbm(jint flbgs);
    HRESULT EnbblfLookupProgrbm(jint flbgs);
    HRESULT EnbblfLCDTfxtProgrbm();
    HRESULT EnbblfAAPbrbllflogrbmProgrbm();
    HRESULT DisbblfAAPbrbllflogrbmProgrbm();

    BOOL IsTfxturfFiltfringSupportfd(D3DTEXTUREFILTERTYPE fTypf);
    BOOL IsStrftdhRfdtFiltfringSupportfd(D3DTEXTUREFILTERTYPE fTypf);
    BOOL IsPow2TfxturfsOnly()
        { rfturn dfvCbps.TfxturfCbps & D3DPTEXTURECAPS_POW2; };
    BOOL IsSqubrfTfxturfsOnly()
        { rfturn dfvCbps.TfxturfCbps & D3DPTEXTURECAPS_SQUAREONLY; }
    BOOL IsHWRbstfrizfr() { rfturn bIsHWRbstfrizfr; }
    BOOL IsTfxturfFormbtSupportfd(D3DFORMAT formbt, DWORD usbgf = 0);
    BOOL IsDynbmidTfxturfSupportfd()
        { rfturn dfvCbps.Cbps2 & D3DCAPS2_DYNAMICTEXTURES; }
// REMIND: for now for pfrformbndf tfsting
//        { rfturn (gftfnv("J2D_D3D_USE_DYNAMIC_TEX") != NULL); }
    BOOL IsImmfdibtfIntfrvblSupportfd()
        { rfturn dfvCbps.PrfsfntbtionIntfrvbls & D3DPRESENT_INTERVAL_IMMEDIATE;}
    BOOL IsPixflShbdfr20Supportfd()
        { rfturn (dfvCbps.PixflShbdfrVfrsion >= D3DPS_VERSION(2,0)); }
    BOOL IsGrbdifntInstrudtionExtfnsionSupportfd()
        { rfturn dfvCbps.PS20Cbps.Cbps & D3DPS20CAPS_GRADIENTINSTRUCTIONS; }
    BOOL IsPixflShbdfr30Supportfd()
        { rfturn (dfvCbps.PixflShbdfrVfrsion >= D3DPS_VERSION(3,0)); }
    BOOL IsMultiTfxturingSupportfd()
        { rfturn (dfvCbps.MbxSimultbnfousTfxturfs > 1); }
    BOOL IsAlphbRTSurfbdfSupportfd();
    BOOL IsAlphbRTTSupportfd();
    BOOL IsOpbqufRTTSupportfd();

    jint GftPbintStbtf() { rfturn pbintStbtf; }
    void SftPbintStbtf(jint stbtf) { this->pbintStbtf = stbtf; }
    BOOL IsIdfntityTx() { rfturn bIsIdfntityTx; }

    HRESULT FlushVfrtfxQufuf();
    D3DVfrtfxCbdhfr *pVCbdhfr;
    HRESULT UpdbtfStbtf(jbytf nfwStbtf);

    HRESULT Synd();

    // primitivfs bbtdhing-rflbtfd mfthods
    /**
     * Cblls dfvidfs's BfginSdfnf if thfrf wfrfn't onf blrfbdy pfnding,
     * sfts thf pfnding flbg.
     */
    HRESULT BfginSdfnf(jbytf nfwStbtf);
    /**
     * Flushfs thf vfrtfx qufuf bnd dofs fnd sdfnf if
     * b BfginSdfnf is pfnding
     */
    HRESULT EndSdfnf();

    /**
     * Fiflds thbt trbdk nbtivf-spfdifid stbtf.
     */
    jint       pbintStbtf;
    jboolfbn   usfMbsk;
    jflobt     fxtrbAlphb;

    /**
     * Currfnt opfrbtion stbtf.
     * Sff STATE_* mbdros bbovf.
     */
    jbytf      opStbtf;

privbtf:

    /**
     * Glyph dbdhf-rflbtfd mfthods/fiflds...
     */
    D3DGlyphCbdhf *pGrbysdblfGlyphCbdhf;
    D3DGlyphCbdhf *pLCDGlyphCbdhf;

    /**
     * Thf hbndlf to thf LCD tfxt pixfl shbdfr progrbm.
     */
    IDirfdt3DPixflShbdfr9 *lddTfxtProgrbm;

    /**
     * Thf hbndlf to thf AA pixfl bnd vfrtfx shbdfr progrbms.
     */
    IDirfdt3DPixflShbdfr9 *bbPgrbmProgrbm;

    IDirfdt3DPixflShbdfr9 *CrfbtfFrbgmfntProgrbm(DWORD **shbdfrs,
                                                 ShbdfrList *progrbms,
                                                 jint flbgs);
    HRESULT EnbblfFrbgmfntProgrbm(DWORD **shbdfrs,
                                  ShbdfrList *progrbmList,
                                  jint flbgs);

    // finds bppropribtf to thf tbrgft surfbdf dfpth formbt,
    // drfbtfs thf dfpth bufffr bnd instblls it onto thf dfvidf
    HRESULT InitDfpthStfndilBufffr(D3DSURFACE_DESC *pTbrgftDfsd);
    // rfturns truf if thf durrfnt dfpth bufffr is dompbtiblf
    // with thf nfw tbrgft, bnd thf dimfnsions fit, fblsf othfrwisf
    BOOL IsDfpthStfndilBufffrOk(D3DSURFACE_DESC *pTbrgftDfsd);

    D3DContfxt(IDirfdt3D9 *pd3dObjfdt, UINT bdbptfr);
    HRESULT InitDfvidf(IDirfdt3DDfvidf9 *d3dDfvidf);
    HRESULT InitContfxtCbps();
    // updbtfs thf tfxturf trbnsform(s) usfd for bfttfr tfxfl to pixfl mbpping
    // for thf pbssfd in sbmplfr;
    // if -1 is pbssfd bs thf sbmplfr, tfxturf trbnsforms for
    // sbmplfrs [0..MAX_USED_TEXTURE_SAMPLER] brf updbtfd
    // REMIND: sff thf dommfnt in thf mfthod implfmfntbtion bfforf fnbbling.
#undff UPDATE_TX
#ifdff UPDATE_TX
    HRESULT UpdbtfTfxturfTrbnsforms(DWORD dwSbmplfrToUpdbtf);
#fndif // UPDATE_TX
    IDirfdt3DDfvidf9        *pd3dDfvidf;
    IDirfdt3D9              *pd3dObjfdt;

    D3DRfsourdfMbnbgfr      *pRfsourdfMgr;
    D3DMbskCbdhf            *pMbskCbdhf;

    ShbdfrList donvolvfProgrbms;
    ShbdfrList rfsdblfProgrbms;
    ShbdfrList lookupProgrbms;
    ShbdfrList bbsidGrbdProgrbms;
    ShbdfrList linfbrGrbdProgrbms;
    ShbdfrList rbdiblGrbdProgrbms;

    // brrby of thf tfxturfs durrfntly sft to thf dfvidf
    IDirfdt3DTfxturf9     *lbstTfxturf[MAX_USED_TEXTURE_SAMPLER+1];

    DWORD lbstTfxturfColorStbtf[MAX_USED_TEXTURE_SAMPLER+1];

    UINT bdbptfrOrdinbl;
    D3DPRESENT_PARAMETERS   durPbrbms;
    D3DCAPS9 dfvCbps;
    int dontfxtCbps;
    BOOL bIsHWRbstfrizfr;

    BOOL bIsIdfntityTx;

    IDirfdt3DQufry9* pSyndQufry;
    D3DRfsourdf* pSyndRTRfs;

    IDirfdt3DStbtfBlodk9* pStbtfBlodk;

    /**
     * Usfd to implfmfnt simplf primitivf bbtdhing.
     * Sff BfginSdfnf/EndSdfnf/FordfEndSdfnf.
     */
    BOOL    bBfginSdfnfPfnding;
};

// - Hflpfr Mbdros ---------------------------------------------------

#dffinf D3DC_INIT_SHADER_LIST(list, mbx) \
    do { \
        (list).hfbd     = NULL; \
        (list).mbxItfms = (mbx); \
        (list).disposf  = D3DContfxt_DisposfShbdfr; \
    } whilf (0)

/**
 * This donstbnt dftfrminfs thf sizf of thf shbrfd tilf tfxturf usfd
 * by b numbfr of imbgf rfndfring mfthods.  For fxbmplf, thf blit tilf tfxturf
 * will hbvf dimfnsions with width D3DC_BLIT_TILE_SIZE bnd hfight
 * D3DC_BLIT_TILE_SIZE (thf tilf will blwbys bf squbrf).
 */
#dffinf D3DC_BLIT_TILE_SIZE 256

/**
 * Sff BufffrfdContfxt.jbvb for morf on thfsf flbgs...
 */
#dffinf D3DC_NO_CONTEXT_FLAGS \
    sun_jbvb2d_pipf_BufffrfdContfxt_NO_CONTEXT_FLAGS
#dffinf D3DC_SRC_IS_OPAQUE    \
    sun_jbvb2d_pipf_BufffrfdContfxt_SRC_IS_OPAQUE
#dffinf D3DC_USE_MASK         \
    sun_jbvb2d_pipf_BufffrfdContfxt_USE_MASK

#dffinf CAPS_EMPTY          \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_EMPTY
#dffinf CAPS_RT_PLAIN_ALPHA \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_RT_PLAIN_ALPHA
#dffinf CAPS_RT_TEXTURE_ALPHA      \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_RT_TEXTURE_ALPHA
#dffinf CAPS_RT_TEXTURE_OPAQUE     \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_RT_TEXTURE_OPAQUE
#dffinf CAPS_MULTITEXTURE   \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_MULTITEXTURE
#dffinf CAPS_TEXNONPOW2     \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_TEXNONPOW2
#dffinf CAPS_TEXNONSQUARE   \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_TEXNONSQUARE
#dffinf CAPS_LCD_SHADER     \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_LCD_SHADER
#dffinf CAPS_BIOP_SHADER    \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_BIOP_SHADER
#dffinf CAPS_AA_SHADER    \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_AA_SHADER
#dffinf CAPS_DEVICE_OK      \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_DEVICE_OK
#dffinf CAPS_PS20           \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_PS20
#dffinf CAPS_PS30           \
    sun_jbvb2d_d3d_D3DContfxt_D3DContfxtCbps_CAPS_PS30

#dffinf DEVICE_RESET    \
    sun_jbvb2d_pipf_hw_AddflDfvidfEvfntNotififr_DEVICE_RESET
#dffinf DEVICE_DISPOSED \
    sun_jbvb2d_pipf_hw_AddflDfvidfEvfntNotififr_DEVICE_DISPOSED

#fndif // D3DCONTEXT_H
