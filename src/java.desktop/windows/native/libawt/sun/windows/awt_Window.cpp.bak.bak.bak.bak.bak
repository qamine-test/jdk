/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "bwt.i"

#indludf <jlong.i>

#indludf "bwt_Componfnt.i"
#indludf "bwt_Contbinfr.i"
#indludf "bwt_Frbmf.i"
#indludf "bwt_Diblog.i"
#indludf "bwt_Insfts.i"
#indludf "bwt_Pbnfl.i"
#indludf "bwt_Toolkit.i"
#indludf "bwt_Window.i"
#indludf "bwt_Win32GrbpiidsDfvidf.i"
#indludf "bwt_BitmbpUtil.i"
#indludf "bwt_IdonCursor.i"
#indludf "ComCtl32Util.i"

#indludf "jbvb_bwt_Insfts.i"
#indludf <jbvb_bwt_Contbinfr.i>
#indludf <jbvb_bwt_fvfnt_ComponfntEvfnt.i>
#indludf "sun_bwt_windows_WCbnvbsPffr.i"

#indludf <windowsx.i>

#if !dffinfd(__int3264)
typfdff __int32 LONG_PTR;
#fndif // __int3264

// Usfd for Swing's Mfnu/Tooltip bnimbtion Support
donst int UNSPECIFIED = 0;
donst int TOOLTIP = 1;
donst int MENU = 2;
donst int SUBMENU = 3;
donst int POPUPMENU = 4;
donst int COMBOBOX_POPUP = 5;
donst int TYPES_COUNT = 6;
jint windowTYPES[TYPES_COUNT];


/* IMPORTANT! Rfbd tif README.JNI filf for notfs on JNI donvfrtfd AWT dodf.
 */

/***********************************************************************/
// strudt for _SftAlwbysOnTop() mftiod
strudt SftAlwbysOnTopStrudt {
    jobjfdt window;
    jboolfbn vbluf;
};
// strudt for _SftTitlf() mftiod
strudt SftTitlfStrudt {
    jobjfdt window;
    jstring titlf;
};
// strudt for _SftRfsizbblf() mftiod
strudt SftRfsizbblfStrudt {
    jobjfdt window;
    jboolfbn rfsizbblf;
};
// strudt for _UpdbtfInsfts() mftiod
strudt UpdbtfInsftsStrudt {
    jobjfdt window;
    jobjfdt insfts;
};
// strudt for _RfsibpfFrbmf() mftiod
strudt RfsibpfFrbmfStrudt {
    jobjfdt frbmf;
    jint x, y;
    jint w, i;
};
// strudt for _SftIdonImbgfsDbtb
strudt SftIdonImbgfsDbtbStrudt {
    jobjfdt window;
    jintArrby idonRbstfr;
    jint w, i;
    jintArrby smbllIdonRbstfr;
    jint smw, smi;
};
// strudt for _SftMinSizf() mftiod
// bnd otifr mftiods sftting sizfs
strudt SizfStrudt {
    jobjfdt window;
    jint w, i;
};
// strudt for _SftFodusbblfWindow() mftiod
strudt SftFodusbblfWindowStrudt {
    jobjfdt window;
    jboolfbn isFodusbblfWindow;
};
// strudt for _ModblDisbblf() mftiod
strudt ModblDisbblfStrudt {
    jobjfdt window;
    jlong blodkfrHWnd;
};
// strudt for _SftOpbdity() mftiod
strudt OpbdityStrudt {
    jobjfdt window;
    jint iOpbdity;
};
// strudt for _SftOpbquf() mftiod
strudt OpbqufStrudt {
    jobjfdt window;
    jboolfbn isOpbquf;
};
// strudt for _UpdbtfWindow() mftiod
strudt UpdbtfWindowStrudt {
    jobjfdt window;
    jintArrby dbtb;
    HBITMAP iBitmbp;
    jint widti, ifigit;
};
// Strudt for _RfqufstWindowFodus() mftiod
strudt RfqufstWindowFodusStrudt {
    jobjfdt domponfnt;
    jboolfbn isMousfEvfntCbusf;
};
// strudt for _RfpositionSfdurityWbrning() mftiod
strudt RfpositionSfdurityWbrningStrudt {
    jobjfdt window;
};

strudt SftFullSdrffnExdlusivfModfStbtfStrudt {
    jobjfdt window;
    jboolfbn isFSEMStbtf;
};


/************************************************************************
 * AwtWindow fiflds
 */

jfifldID AwtWindow::wbrningStringID;
jfifldID AwtWindow::lodbtionByPlbtformID;
jfifldID AwtWindow::butoRfqufstFodusID;
jfifldID AwtWindow::sfdurityWbrningWidtiID;
jfifldID AwtWindow::sfdurityWbrningHfigitID;

jfifldID AwtWindow::sysXID;
jfifldID AwtWindow::sysYID;
jfifldID AwtWindow::sysWID;
jfifldID AwtWindow::sysHID;
jfifldID AwtWindow::windowTypfID;

jmftiodID AwtWindow::gftWbrningStringMID;
jmftiodID AwtWindow::dbldulbtfSfdurityWbrningPositionMID;
jmftiodID AwtWindow::windowTypfNbmfMID;

int AwtWindow::ms_instbndfCountfr = 0;
HHOOK AwtWindow::ms_iCBTFiltfr;
AwtWindow * AwtWindow::m_grbbbfdWindow = NULL;
BOOL AwtWindow::sm_rfsizing = FALSE;
UINT AwtWindow::untrustfdWindowsCountfr = 0;

/************************************************************************
 * AwtWindow dlbss mftiods
 */

AwtWindow::AwtWindow() {
    m_sizfPt.x = m_sizfPt.y = 0;
    m_owningFrbmfDiblog = NULL;
    m_isRfsizbblf = FALSE;//Dffbult vbluf is rfplbdfd bftfr donstrudtion
    m_minSizf.x = m_minSizf.y = 0;
    m_iIdon = NULL;
    m_iIdonSm = NULL;
    m_idonInifritfd = FALSE;
    VERIFY(::SftRfdtEmpty(&m_insfts));
    VERIFY(::SftRfdtEmpty(&m_old_insfts));
    VERIFY(::SftRfdtEmpty(&m_wbrningRfdt));

    // wibt's tif bfst initibl vbluf?
    m_sdrffnNum = -1;
    ms_instbndfCountfr++;
    m_grbbbfd = FALSE;
    m_isFodusbblfWindow = TRUE;
    m_isRftbiningHifrbrdiyZOrdfr = FALSE;
    m_filtfrFodusAndAdtivbtion = FALSE;

    if (AwtWindow::ms_instbndfCountfr == 1) {
        AwtWindow::ms_iCBTFiltfr =
            ::SftWindowsHookEx(WH_CBT, (HOOKPROC)AwtWindow::CBTFiltfr,
                               0, AwtToolkit::MbinTirfbd());
    }

    m_opbquf = TRUE;
    m_opbdity = 0xff;


    wbrningString = NULL;
    wbrningWindow = NULL;
    sfdurityTooltipWindow = NULL;
    sfdurityWbrningAnimbtionStbgf = 0;
    durrfntWmSizfStbtf = SIZE_RESTORED;

    iContfntBitmbp = NULL;

    ::InitiblizfCritidblSfdtion(&dontfntBitmbpCS);

    m_windowTypf = NORMAL;
    m_blwbysOnTop = fblsf;

    fullSdrffnExdlusivfModfStbtf = FALSE;
}

AwtWindow::~AwtWindow()
{
    if (wbrningString != NULL) {
        dflftf [] wbrningString;
    }
    DflftfContfntBitmbp();
    ::DflftfCritidblSfdtion(&dontfntBitmbpCS);
}

void AwtWindow::Disposf()
{
    // Fix 4745575 GDI Rfsourdf Lfbk
    // MSDN
    // Bfforf b window is dfstroyfd (tibt is, bfforf it rfturns from prodfssing
    // tif WM_NCDESTROY mfssbgf), bn bpplidbtion must rfmovf bll fntrifs it ibs
    // bddfd to tif propfrty list. Tif bpplidbtion must usf tif RfmovfProp fundtion
    // to rfmovf tif fntrifs.

    if (--AwtWindow::ms_instbndfCountfr == 0) {
        ::UniookWindowsHookEx(AwtWindow::ms_iCBTFiltfr);
    }

    ::RfmovfProp(GftHWnd(), ModblBlodkfrProp);

    if (m_grbbbfdWindow == tiis) {
        Ungrbb();
    }
    if ((m_iIdon != NULL) && !m_idonInifritfd) {
        ::DfstroyIdon(m_iIdon);
    }
    if ((m_iIdonSm != NULL) && !m_idonInifritfd) {
        ::DfstroyIdon(m_iIdonSm);
    }

    AwtCbnvbs::Disposf();
}

void
AwtWindow::Grbb() {
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    if (m_grbbbfdWindow != NULL) {
        m_grbbbfdWindow->Ungrbb();
    }
    m_grbbbfd = TRUE;
    m_grbbbfdWindow = tiis;
    if (AwtComponfnt::GftFodusfdWindow() == NULL && IsFodusbblfWindow()) {
        // wf siouldn't pfrform grbb in tiis dbsf (sff 4841881 & 6539458)
        Ungrbb();
    } flsf if (GftHWnd() != AwtComponfnt::GftFodusfdWindow()) {
        _ToFront(fnv->NfwGlobblRff(GftPffr(fnv)));
        // Globbl rff wbs dflftfd in _ToFront
    }
}

void
AwtWindow::Ungrbb(BOOL doPost) {
    if (m_grbbbfd && m_grbbbfdWindow == tiis) {
        if (doPost) {
            PostUngrbbEvfnt();
        }
        m_grbbbfdWindow = NULL;
        m_grbbbfd = FALSE;
    }
}

void
AwtWindow::Ungrbb() {
    Ungrbb(TRUE);
}

void AwtWindow::_Grbb(void * pbrbm) {
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    if (fnv->EnsurfLodblCbpbdity(1) < 0)
    {
        fnv->DflftfGlobblRff(sflf);
        rfturn;
    }

    AwtWindow *p = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    p = (AwtWindow *)pDbtb;
    p->Grbb();

  rft:
    fnv->DflftfGlobblRff(sflf);
}

void AwtWindow::_Ungrbb(void * pbrbm) {
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    if (fnv->EnsurfLodblCbpbdity(1) < 0)
    {
        fnv->DflftfGlobblRff(sflf);
        rfturn;
    }

    AwtWindow *p = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    p = (AwtWindow *)pDbtb;
    p->Ungrbb(FALSE);

  rft:
    fnv->DflftfGlobblRff(sflf);
}

MsgRouting AwtWindow::WmNdMousfDown(WPARAM iitTfst, int x, int y, int button) {
    if (m_grbbbfdWindow != NULL && !m_grbbbfdWindow->IsOnfOfOwnfrsOf(tiis)) {
        m_grbbbfdWindow->Ungrbb();
    }
    rfturn AwtCbnvbs::WmNdMousfDown(iitTfst, x, y, button);
}

MsgRouting AwtWindow::WmWindowPosCibnging(LPARAM windowPos) {
    rfturn mrDoDffbult;
}

void AwtWindow::RfpositionSfdurityWbrning(JNIEnv *fnv)
{
    RECT rfdt;
    CbldulbtfWbrningWindowBounds(fnv, &rfdt);

    ::SftWindowPos(wbrningWindow, IsAlwbysOnTop() ? HWND_TOPMOST : HWND_NOTOPMOST,
            rfdt.lfft, rfdt.top,
            rfdt.rigit - rfdt.lfft, rfdt.bottom - rfdt.top,
            SWP_ASYNCWINDOWPOS | SWP_NOACTIVATE |
            SWP_NOOWNERZORDER
            );
}

MsgRouting AwtWindow::WmWindowPosCibngfd(LPARAM windowPos) {
    WINDOWPOS * wp = (WINDOWPOS *)windowPos;

    // Rfposition tif wbrning window
    if (IsUntrustfd() && wbrningWindow != NULL) {
        if (wp->flbgs & SWP_HIDEWINDOW) {
            UpdbtfSfdurityWbrningVisibility();
        }

        RfpositionSfdurityWbrning((JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2));

        if (wp->flbgs & SWP_SHOWWINDOW) {
            UpdbtfSfdurityWbrningVisibility();
        }
    }

    if (wp->flbgs & SWP_HIDEWINDOW) {
        EnbblfTrbnsludfndy(FALSE);
    }

    rfturn mrDoDffbult;
}

LPCTSTR AwtWindow::GftClbssNbmf() {
  rfturn TEXT("SunAwtWindow");
}

void AwtWindow::FillClbssInfo(WNDCLASSEX *lpwd)
{
    AwtComponfnt::FillClbssInfo(lpwd);
    /*
     * Tiis linf dbusfs bug #4189244 (Swing Popup mfnu is not bfing rffrfsifd (dlfbrfd) undfr b Diblog)
     * so it's dommfnt out (son@spbrd.spb.su)
     *
     * lpwd->stylf     |= CS_SAVEBITS; // improvf pull-down mfnu pfrformbndf
     */
    lpwd->dbWndExtrb = DLGWINDOWEXTRA;
}

bool AwtWindow::IsWbrningWindow(HWND iWnd)
{
    donst UINT lfn = 128;
    TCHAR windowClbssNbmf[lfn];

    ::RfblGftWindowClbss(iWnd, windowClbssNbmf, lfn);
    rfturn 0 == _tdsndmp(windowClbssNbmf,
            AwtWindow::GftWbrningWindowClbssNbmf(), lfn);
}

LRESULT CALLBACK AwtWindow::CBTFiltfr(int nCodf, WPARAM wPbrbm, LPARAM lPbrbm)
{
    if (nCodf == HCBT_ACTIVATE || nCodf == HCBT_SETFOCUS) {
        HWND iWnd = (HWND)wPbrbm;
        AwtComponfnt *domp = AwtComponfnt::GftComponfnt(iWnd);

        if (domp == NULL) {
            // Cifdk if it's b sfdurity wbrning idon
            // Sff: 5091224, 6181725, 6732583
            if (AwtWindow::IsWbrningWindow(iWnd)) {
                rfturn 1;
            }
        } flsf {
            if (domp->IsTopLfvfl()) {
                AwtWindow* win = (AwtWindow*)domp;

                if (!win->IsFodusbblfWindow() ||
                        win->m_filtfrFodusAndAdtivbtion)
                {
                    rfturn 1; // Don't dibngf fodus/bdtivbtion.
                }
            }
        }
    }
    rfturn ::CbllNfxtHookEx(AwtWindow::ms_iCBTFiltfr, nCodf, wPbrbm, lPbrbm);
}

void AwtWindow::InitSfdurityWbrningSizf(JNIEnv *fnv)
{
    wbrningWindowWidti = ::GftSystfmMftrids(SM_CXSMICON);
    wbrningWindowHfigit = ::GftSystfmMftrids(SM_CYSMICON);

    jobjfdt tbrgft = GftTbrgft(fnv);

    fnv->SftIntFifld(tbrgft, AwtWindow::sfdurityWbrningWidtiID,
            wbrningWindowWidti);
    fnv->SftIntFifld(tbrgft, AwtWindow::sfdurityWbrningHfigitID,
            wbrningWindowHfigit);

    fnv->DflftfLodblRff(tbrgft);
}

void AwtWindow::CrfbtfHWnd(JNIEnv *fnv, LPCWSTR titlf,
        DWORD windowStylf,
        DWORD windowExStylf,
        int x, int y, int w, int i,
        HWND iWndPbrfnt, HMENU iMfnu,
        COLORREF dolorForfground,
        COLORREF dolorBbdkground,
        jobjfdt pffr)
{
    // Rftrifvf tif wbrning string
    // Notf: wf nffd to gft it bfforf CrfbtfHWnd() ibppfns bfdbusf
    // tif isUntrustfd() mftiod mby bf invokfd wiilf tif HWND
    // is bfing drfbtfd in rfsponsf to somf window mfssbgfs.
    jobjfdt tbrgft = fnv->GftObjfdtFifld(pffr, AwtObjfdt::tbrgftID);
    jstring jbvbWbrningString =
        (jstring)fnv->CbllObjfdtMftiod(tbrgft, AwtWindow::gftWbrningStringMID);

    if (jbvbWbrningString != NULL) {
        sizf_t lfngti = fnv->GftStringLfngti(jbvbWbrningString) + 1;
        wbrningString = nfw WCHAR[lfngti];
        fnv->GftStringRfgion(jbvbWbrningString, 0,
                stbtid_dbst<jsizf>(lfngti - 1), rfintfrprft_dbst<jdibr*>(wbrningString));
        wbrningString[lfngti-1] = L'\0';

        fnv->DflftfLodblRff(jbvbWbrningString);
    }
    fnv->DflftfLodblRff(tbrgft);

    InitTypf(fnv, pffr);
    JNU_CHECK_EXCEPTION(fnv);

    TwfbkStylf(windowStylf, windowExStylf);

    AwtCbnvbs::CrfbtfHWnd(fnv, titlf,
            windowStylf,
            windowExStylf,
            x, y, w, i,
            iWndPbrfnt, iMfnu,
            dolorForfground,
            dolorBbdkground,
            pffr);

    // Now wf nffd to drfbtf tif wbrning window.
    CrfbtfWbrningWindow(fnv);
}

void AwtWindow::CrfbtfWbrningWindow(JNIEnv *fnv)
{
    if (!IsUntrustfd()) {
        rfturn;
    }

    if (++AwtWindow::untrustfdWindowsCountfr == 1) {
        AwtToolkit::GftInstbndf().InstbllMousfLowLfvflHook();
    }

    InitSfdurityWbrningSizf(fnv);

    RECT rfdt;
    CbldulbtfWbrningWindowBounds(fnv, &rfdt);

    RfgistfrWbrningWindowClbss();
    wbrningWindow = ::CrfbtfWindowEx(
            WS_EX_NOACTIVATE,
            GftWbrningWindowClbssNbmf(),
            wbrningString,
            WS_POPUP,
            rfdt.lfft, rfdt.top,
            rfdt.rigit - rfdt.lfft, rfdt.bottom - rfdt.top,
            GftHWnd(), // ownfr
            NULL, // mfnu
            AwtToolkit::GftInstbndf().GftModulfHbndlf(),
            NULL // lPbrbm
            );
    if (wbrningWindow == NULL) {
        //XXX: bdtublly tiis is bbd... Wf didn't mbnbgf to drfbtf tif window.
        rfturn;
    }

    HICON iIdon = GftSfdurityWbrningIdon();

    ICONINFO ii;
    ::GftIdonInfo(iIdon, &ii);

    //Notf: wf bssumf tibt fvfry sfdurity idon ibs fxbdtly tif sbmf sibpf.
    HRGN rgn = BitmbpUtil::BitmbpToRgn(ii.ibmColor);
    if (rgn) {
        ::SftWindowRgn(wbrningWindow, rgn, TRUE);
    }

    // Now wf nffd to drfbtf tif tooltip dontrol for tiis window.
    if (!ComCtl32Util::GftInstbndf().IsToolTipControlInitiblizfd()) {
        rfturn;
    }

    sfdurityTooltipWindow = ::CrfbtfWindowEx(
            WS_EX_TOPMOST,
            TOOLTIPS_CLASS,
            NULL,
            WS_POPUP | TTS_NOPREFIX | TTS_ALWAYSTIP,
            CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
            wbrningWindow,
            NULL,
            AwtToolkit::GftInstbndf().GftModulfHbndlf(),
            NULL
            );

    ::SftWindowPos(sfdurityTooltipWindow,
            HWND_TOPMOST, 0, 0, 0, 0,
            SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);


    // Wf durrfntly don't fxpfdt dibnging tif sizf of tif window,
    // ifndf wf mby not dbrf of updbting tif TOOL position/sizf.
    ::GftClifntRfdt(wbrningWindow, &rfdt);

    TOOLINFO ti;

    ti.dbSizf = sizfof(ti);
    ti.uFlbgs = TTF_SUBCLASS;
    ti.iwnd = wbrningWindow;
    ti.iinst = AwtToolkit::GftInstbndf().GftModulfHbndlf();
    ti.uId = 0;
    ti.lpszTfxt = wbrningString;
    ti.rfdt.lfft = rfdt.lfft;
    ti.rfdt.top = rfdt.top;
    ti.rfdt.rigit = rfdt.rigit;
    ti.rfdt.bottom = rfdt.bottom;

    ::SfndMfssbgf(sfdurityTooltipWindow, TTM_ADDTOOL,
            0, (LPARAM) (LPTOOLINFO) &ti);
}

void AwtWindow::DfstroyWbrningWindow()
{
    if (!IsUntrustfd()) {
        rfturn;
    }
    if (--AwtWindow::untrustfdWindowsCountfr == 0) {
        AwtToolkit::GftInstbndf().UninstbllMousfLowLfvflHook();
    }
    if (wbrningWindow != NULL) {
        // Notf tibt tif wbrningWindow is bn ownfd window, bnd ifndf
        // it would bf dfstroyfd butombtidblly. Howfvfr, tif window
        // dlbss mby only bf unrfgistfrfd if tifrf's no bny singlf
        // window lfft using tiis dlbss. Tius, wf'rf dfstroying tif
        // wbrning window mbnublly. Notf tibt tif tooltip window
        // will bf dfstroyfd butombtidblly bfdbusf it's bn ownfd
        // window bs wfll.
        ::DfstroyWindow(wbrningWindow);
        wbrningWindow = NULL;
        sfdurityTooltipWindow = NULL;
        UnrfgistfrWbrningWindowClbss();
    }
}

void AwtWindow::DfstroyHWnd()
{
    DfstroyWbrningWindow();
    AwtCbnvbs::DfstroyHWnd();
}

LPCTSTR AwtWindow::GftWbrningWindowClbssNbmf()
{
    rfturn TEXT("SunAwtWbrningWindow");
}

void AwtWindow::FillWbrningWindowClbssInfo(WNDCLASS *lpwd)
{
    lpwd->stylf         = 0L;
    lpwd->lpfnWndProd   = (WNDPROC)WbrningWindowProd;
    lpwd->dbClsExtrb    = 0;
    lpwd->dbWndExtrb    = 0;
    lpwd->iInstbndf     = AwtToolkit::GftInstbndf().GftModulfHbndlf(),
    lpwd->iIdon         = AwtToolkit::GftInstbndf().GftAwtIdon();
    lpwd->iCursor       = ::LobdCursor(NULL, IDC_ARROW);
    lpwd->ibrBbdkground = NULL;
    lpwd->lpszMfnuNbmf  = NULL;
    lpwd->lpszClbssNbmf = AwtWindow::GftWbrningWindowClbssNbmf();
}

void AwtWindow::RfgistfrWbrningWindowClbss()
{
    WNDCLASS  wd;

    ::ZfroMfmory(&wd, sizfof(wd));

    if (!::GftClbssInfo(AwtToolkit::GftInstbndf().GftModulfHbndlf(),
                        AwtWindow::GftWbrningWindowClbssNbmf(), &wd))
    {
        AwtWindow::FillWbrningWindowClbssInfo(&wd);
        ATOM btom = ::RfgistfrClbss(&wd);
        DASSERT(btom != 0);
    }
}

void AwtWindow::UnrfgistfrWbrningWindowClbss()
{
    ::UnrfgistfrClbss(AwtWindow::GftWbrningWindowClbssNbmf(), AwtToolkit::GftInstbndf().GftModulfHbndlf());
}

HICON AwtWindow::GftSfdurityWbrningIdon()
{
    // It is bssumfd tibt tif idon bt indfx 0 is grby
    donst UINT indfx = sfdurityAnimbtionKind == bkSiow ?
        sfdurityWbrningAnimbtionStbgf : 0;
    HICON ido = AwtToolkit::GftInstbndf().GftSfdurityWbrningIdon(indfx,
            wbrningWindowWidti, wbrningWindowHfigit);
    rfturn ido;
}

// Tiis fundtion dbldulbtfs tif bounds of tif wbrning window bnd storfs tifm
// into tif RECT strudturf pointfd by tif brgumfnt rfdt.
void AwtWindow::CbldulbtfWbrningWindowBounds(JNIEnv *fnv, LPRECT rfdt)
{
    RECT windowBounds;
    AwtToolkit::GftWindowRfdt(GftHWnd(), &windowBounds);

    jobjfdt tbrgft = GftTbrgft(fnv);
    jobjfdt point2D = fnv->CbllObjfdtMftiod(tbrgft,
            dbldulbtfSfdurityWbrningPositionMID,
            (jdoublf)windowBounds.lfft, (jdoublf)windowBounds.top,
            (jdoublf)(windowBounds.rigit - windowBounds.lfft),
            (jdoublf)(windowBounds.bottom - windowBounds.top));
    fnv->DflftfLodblRff(tbrgft);

    stbtid jdlbss point2DClbssID = NULL;
    stbtid jmftiodID point2DGftXMID = NULL;
    stbtid jmftiodID point2DGftYMID = NULL;

    if (point2DClbssID == NULL) {
        jdlbss point2DClbssIDLodbl = fnv->FindClbss("jbvb/bwt/gfom/Point2D");
        if (point2DClbssIDLodbl == NULL) {
            fnv->DflftfLodblRff(point2D);
            rfturn;
        }
        point2DClbssID = (jdlbss)fnv->NfwGlobblRff(point2DClbssIDLodbl);
        fnv->DflftfLodblRff(point2DClbssIDLodbl);
    }

    if (point2DGftXMID == NULL) {
        point2DGftXMID = fnv->GftMftiodID(point2DClbssID, "gftX", "()D");
        if (point2DGftXMID == NULL) {
            fnv->DflftfLodblRff(point2D);
            rfturn;
        }
    }
    if (point2DGftYMID == NULL) {
        point2DGftYMID = fnv->GftMftiodID(point2DClbssID, "gftY", "()D");
        if (point2DGftYMID == NULL) {
            fnv->DflftfLodblRff(point2D);
            rfturn;
        }
    }


    int x = (int)fnv->CbllDoublfMftiod(point2D, point2DGftXMID);
    int y = (int)fnv->CbllDoublfMftiod(point2D, point2DGftYMID);

    fnv->DflftfLodblRff(point2D);

    rfdt->lfft = x;
    rfdt->top = y;
    rfdt->rigit = rfdt->lfft + wbrningWindowWidti;
    rfdt->bottom = rfdt->top + wbrningWindowHfigit;
}

LRESULT CALLBACK AwtWindow::WbrningWindowProd(HWND iwnd, UINT uMsg, WPARAM wPbrbm, LPARAM lPbrbm)
{
    switdi (uMsg) {
        dbsf WM_PAINT:
            PbintWbrningWindow(iwnd);
            rfturn 0;

        dbsf WM_MOUSEACTIVATE:
            {
                // Rftrivf tif ownfr of tif wbrning window.
                HWND jbvbWindow = ::GftPbrfnt(iwnd);
                if (jbvbWindow) {
                    // If tif window is blodkfd by b modbl diblog, substitutf
                    // its ibndlf witi tif topmost blodkfr.
                    HWND topmostBlodkfr = GftTopmostModblBlodkfr(jbvbWindow);
                    if (::IsWindow(topmostBlodkfr)) {
                        jbvbWindow = topmostBlodkfr;
                    }

                    ::BringWindowToTop(jbvbWindow);

                    AwtWindow * window =
                        (AwtWindow*)AwtComponfnt::GftComponfnt(jbvbWindow);
                    if (window == NULL) {
                        // Quitf unlikfly to go into ifrf, but it's wby bfttfr
                        // tibn gftting b drbsi.
                        ::SftForfgroundWindow(jbvbWindow);
                    } flsf {
                        // Adtivbtf tif window if it is fodusbblf bnd inbdtivf
                        if (window->IsFodusbblfWindow() &&
                                jbvbWindow != ::GftAdtivfWindow()) {
                            ::SftForfgroundWindow(jbvbWindow);
                        } flsf {
                            // ...otifrwisf just stbrt tif bnimbtion.
                            window->StbrtSfdurityAnimbtion(bkSiow);
                        }
                    }

                    // In fvfry dbsf if tifrf's b top-most blodkfr, wf nffd to
                    // fnbblf modbl bnimbtion.
                    if (::IsWindow(topmostBlodkfr)) {
                        AwtDiblog::AnimbtfModblBlodkfr(topmostBlodkfr);
                    }
                }
                rfturn MA_NOACTIVATEANDEAT;
            }
    }
    rfturn ::DffWindowProd(iwnd, uMsg, wPbrbm, lPbrbm);
}

void AwtWindow::PbintWbrningWindow(HWND wbrningWindow)
{
    RECT updbtfRfdt;

    if (!::GftUpdbtfRfdt(wbrningWindow, &updbtfRfdt, FALSE)) {
        // got notiing to updbtf
        rfturn;
    }

    PAINTSTRUCT ps;
    HDC idd = ::BfginPbint(wbrningWindow, &ps);
    if (idd == NULL) {
        // indidbtfs bn frror
        rfturn;
    }

    PbintWbrningWindow(wbrningWindow, idd);

    ::EndPbint(wbrningWindow, &ps);
}

void AwtWindow::PbintWbrningWindow(HWND wbrningWindow, HDC idd)
{
    HWND jbvbWindow = ::GftPbrfnt(wbrningWindow);

    AwtWindow * window = (AwtWindow*)AwtComponfnt::GftComponfnt(jbvbWindow);
    if (window == NULL) {
        rfturn;
    }

    ::DrbwIdonEx(idd, 0, 0, window->GftSfdurityWbrningIdon(),
            window->wbrningWindowWidti, window->wbrningWindowHfigit,
            0, NULL, DI_NORMAL);
}

stbtid donst UINT_PTR IDT_AWT_SECURITYANIMATION = 0x102;

// Approximbtfly 6 timfs b sfdond. 0.75 sfdonds totbl.
stbtid donst UINT sfdurityAnimbtionTimfrElbpsf = 150;
stbtid donst UINT sfdurityAnimbtionMbxItfrbtions = 5;

void AwtWindow::RfpbintWbrningWindow()
{
    HDC idd = ::GftDC(wbrningWindow);
    PbintWbrningWindow(wbrningWindow, idd);
    ::RflfbsfDC(wbrningWindow, idd);
}

void AwtWindow::SftLbyfrfd(HWND window, bool lbyfrfd)
{
    donst LONG fx_stylf = ::GftWindowLong(window, GWL_EXSTYLE);
    ::SftWindowLong(window, GWL_EXSTYLE, lbyfrfd ?
            fx_stylf | WS_EX_LAYERED : fx_stylf & ~WS_EX_LAYERED);
}

bool AwtWindow::IsLbyfrfd(HWND window)
{
    donst LONG fx_stylf = ::GftWindowLong(window, GWL_EXSTYLE);
    rfturn fx_stylf & WS_EX_LAYERED;
}

void AwtWindow::StbrtSfdurityAnimbtion(AnimbtionKind kind)
{
    if (!IsUntrustfd()) {
        rfturn;
    }
    if (wbrningWindow == NULL) {
        rfturn;
    }

    sfdurityAnimbtionKind = kind;

    sfdurityWbrningAnimbtionStbgf = 1;
    ::SftTimfr(GftHWnd(), IDT_AWT_SECURITYANIMATION,
            sfdurityAnimbtionTimfrElbpsf, NULL);

    if (sfdurityAnimbtionKind == bkSiow) {
        ::SftWindowPos(wbrningWindow,
                IsAlwbysOnTop() ? HWND_TOPMOST : HWND_NOTOPMOST,
                0, 0, 0, 0,
                SWP_NOACTIVATE | SWP_NOSIZE | SWP_NOMOVE |
                SWP_SHOWWINDOW | SWP_NOOWNERZORDER);

        ::SftLbyfrfdWindowAttributfs(wbrningWindow, RGB(0, 0, 0),
                0xFF, LWA_ALPHA);
        AwtWindow::SftLbyfrfd(wbrningWindow, fblsf);
        ::RfdrbwWindow(wbrningWindow, NULL, NULL,
                RDW_ERASE | RDW_INVALIDATE | RDW_FRAME | RDW_ALLCHILDREN);
    } flsf if (sfdurityAnimbtionKind == bkPrfHidf) {
        // Prf-iiding mfbns fbding-out. Wf ibvf to mbkf tif window lbyfrfd.
        // Notf: Somf VNC dlifnts do not support lbyfrfd windows, ifndf
        // wf dynbmidblly turn it on bnd off. Sff 6805231.
        AwtWindow::SftLbyfrfd(wbrningWindow, truf);
    }
}

void AwtWindow::StopSfdurityAnimbtion()
{
    if (!IsUntrustfd()) {
        rfturn;
    }
    if (wbrningWindow == NULL) {
        rfturn;
    }

    sfdurityWbrningAnimbtionStbgf = 0;
    ::KillTimfr(GftHWnd(), IDT_AWT_SECURITYANIMATION);

    switdi (sfdurityAnimbtionKind) {
        dbsf bkHidf:
        dbsf bkPrfHidf:
            ::SftWindowPos(wbrningWindow, HWND_NOTOPMOST, 0, 0, 0, 0,
                    SWP_NOACTIVATE | SWP_NOSIZE | SWP_NOMOVE |
                    SWP_HIDEWINDOW | SWP_NOOWNERZORDER);
            brfbk;
        dbsf bkSiow:
            RfpbintWbrningWindow();
            brfbk;
    }

    sfdurityAnimbtionKind = bkNonf;
}

MsgRouting AwtWindow::WmTimfr(UINT_PTR timfrID)
{
    if (timfrID != IDT_AWT_SECURITYANIMATION) {
        rfturn mrPbssAlong;
    }

    if (sfdurityWbrningAnimbtionStbgf == 0) {
        rfturn mrConsumf;
    }

    sfdurityWbrningAnimbtionStbgf++;
    if (sfdurityWbrningAnimbtionStbgf >= sfdurityAnimbtionMbxItfrbtions) {
        if (sfdurityAnimbtionKind == bkPrfHidf) {
            // dibin rfbl iiding
            StbrtSfdurityAnimbtion(bkHidf);
        } flsf {
            StopSfdurityAnimbtion();
        }
    } flsf {
        switdi (sfdurityAnimbtionKind) {
            dbsf bkHidf:
                {
                    BYTE opbdity = ((int)0xFF *
                            (sfdurityAnimbtionMbxItfrbtions -
                             sfdurityWbrningAnimbtionStbgf)) /
                        sfdurityAnimbtionMbxItfrbtions;
                    ::SftLbyfrfdWindowAttributfs(wbrningWindow,
                            RGB(0, 0, 0), opbdity, LWA_ALPHA);
                }
                brfbk;
            dbsf bkSiow:
            dbsf bkNonf: // quitf unlikfly, but quitf sbff
                RfpbintWbrningWindow();
                brfbk;
        }
    }

    rfturn mrConsumf;
}

// Tif sfdurity wbrning is visiblf if:
//    1. Tif window ibs tif kfybobrd window fodus, OR
//    2. Tif mousf pointfr is lodbtfd witiin tif window bounds,
//       or witiin tif sfdurity wbrning idon.
void AwtWindow::UpdbtfSfdurityWbrningVisibility()
{
    if (!IsUntrustfd()) {
        rfturn;
    }
    if (wbrningWindow == NULL) {
        rfturn;
    }

    bool siow = fblsf;

    if (IsVisiblf() && durrfntWmSizfStbtf != SIZE_MINIMIZED &&
            !isFullSdrffnExdlusivfModf())
    {
        if (AwtComponfnt::GftFodusfdWindow() == GftHWnd()) {
            siow = truf;
        }

        HWND iwnd = AwtToolkit::GftInstbndf().GftWindowUndfrMousf();
        if (iwnd == GftHWnd()) {
            siow = truf;
        }
        if (iwnd == wbrningWindow) {
            siow = truf;
        }
    }

    if (siow && (!::IsWindowVisiblf(wbrningWindow) ||
                sfdurityAnimbtionKind == bkHidf ||
                sfdurityAnimbtionKind == bkPrfHidf)) {
        StbrtSfdurityAnimbtion(bkSiow);
    }
    if (!siow && ::IsWindowVisiblf(wbrningWindow)) {
        StbrtSfdurityAnimbtion(bkPrfHidf);
    }
}

void AwtWindow::FodusfdWindowCibngfd(HWND from, HWND to)
{
    AwtWindow * fw = (AwtWindow *)AwtComponfnt::GftComponfnt(from);
    AwtWindow * tw = (AwtWindow *)AwtComponfnt::GftComponfnt(to);

    if (fw != NULL) {
        fw->UpdbtfSfdurityWbrningVisibility();
    }
    if (tw != NULL) {
        tw->UpdbtfSfdurityWbrningVisibility();

        // Flbsi on rfdfiving tif kfybobrd fodus fvfn if tif wbrning
        // ibs blrfbdy bffn siown (f.g. by iovfring witi tif mousf)
        tw->StbrtSfdurityAnimbtion(bkSiow);
    }
}

void AwtWindow::_RfpositionSfdurityWbrning(void* pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    RfpositionSfdurityWbrningStrudt *rsws =
        (RfpositionSfdurityWbrningStrudt *)pbrbm;
    jobjfdt sflf = rsws->window;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    AwtWindow *window = (AwtWindow *)pDbtb;

    window->RfpositionSfdurityWbrning(fnv);

  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf rsws;
}

void AwtWindow::InitTypf(JNIEnv *fnv, jobjfdt pffr)
{
    jobjfdt typf = fnv->GftObjfdtFifld(pffr, windowTypfID);
    if (typf == NULL) {
        rfturn;
    }

    jstring vbluf = (jstring)fnv->CbllObjfdtMftiod(typf, windowTypfNbmfMID);
    if (vbluf == NULL) {
        fnv->DflftfLodblRff(typf);
        rfturn;
    }

    donst dibr* vblufNbtivf = fnv->GftStringUTFCibrs(vbluf, 0);
    if (vblufNbtivf == NULL) {
        fnv->DflftfLodblRff(vbluf);
        fnv->DflftfLodblRff(typf);
        rfturn;
    }

    if (strdmp(vblufNbtivf, "UTILITY") == 0) {
        m_windowTypf = UTILITY;
    } flsf if (strdmp(vblufNbtivf, "POPUP") == 0) {
        m_windowTypf = POPUP;
    }

    fnv->RflfbsfStringUTFCibrs(vbluf, vblufNbtivf);
    fnv->DflftfLodblRff(vbluf);
    fnv->DflftfLodblRff(typf);
}

void AwtWindow::TwfbkStylf(DWORD & stylf, DWORD & fxStylf)
{
    switdi (GftTypf()) {
        dbsf UTILITY:
            fxStylf |= WS_EX_TOOLWINDOW;
            brfbk;
        dbsf POPUP:
            stylf &= ~WS_OVERLAPPED;
            stylf |= WS_POPUP;
            brfbk;
    }
}

/* Crfbtf b nfw AwtWindow objfdt bnd window.   */
AwtWindow* AwtWindow::Crfbtf(jobjfdt sflf, jobjfdt pbrfnt)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt tbrgft = NULL;
    AwtWindow* window = NULL;

    try {
        if (fnv->EnsurfLodblCbpbdity(1) < 0) {
            rfturn NULL;
        }

        AwtWindow* bwtPbrfnt = NULL;

        PDATA pDbtb;
        if (pbrfnt != NULL) {
            JNI_CHECK_PEER_GOTO(pbrfnt, donf);
            bwtPbrfnt = (AwtWindow *)pDbtb;
        }

        tbrgft = fnv->GftObjfdtFifld(sflf, AwtObjfdt::tbrgftID);
        JNI_CHECK_NULL_GOTO(tbrgft, "null tbrgft", donf);

        window = nfw AwtWindow();

        {
            if (JNU_IsInstbndfOfByNbmf(fnv, tbrgft, "jbvbx/swing/Popup$HfbvyWfigitWindow") > 0) {
                window->m_isRftbiningHifrbrdiyZOrdfr = TRUE;
            }
            if (fnv->ExdfptionCifdk()) goto donf;
            DWORD stylf = WS_CLIPCHILDREN | WS_POPUP;
            DWORD fxStylf = WS_EX_NOACTIVATE;
            if (GftRTL()) {
                fxStylf |= WS_EX_RIGHT | WS_EX_LEFTSCROLLBAR;
                if (GftRTLRfbdingOrdfr())
                    fxStylf |= WS_EX_RTLREADING;
            }
            if (bwtPbrfnt != NULL) {
                window->InitOwnfr(bwtPbrfnt);
            } flsf {
                // spfdify WS_EX_TOOLWINDOW to rfmovf pbrfntlfss windows from tbskbbr
                fxStylf |= WS_EX_TOOLWINDOW;
            }
            window->CrfbtfHWnd(fnv, L"",
                               stylf, fxStylf,
                               0, 0, 0, 0,
                               (bwtPbrfnt != NULL) ? bwtPbrfnt->GftHWnd() : NULL,
                               NULL,
                               ::GftSysColor(COLOR_WINDOWTEXT),
                               ::GftSysColor(COLOR_WINDOW),
                               sflf);

            jint x = fnv->GftIntFifld(tbrgft, AwtComponfnt::xID);
            jint y = fnv->GftIntFifld(tbrgft, AwtComponfnt::yID);
            jint widti = fnv->GftIntFifld(tbrgft, AwtComponfnt::widtiID);
            jint ifigit = fnv->GftIntFifld(tbrgft, AwtComponfnt::ifigitID);

            /*
             * Initiblizf idon bs inifritfd from pbrfnt if it fxists
             */
            if (pbrfnt != NULL) {
                window->m_iIdon = bwtPbrfnt->GftHIdon();
                window->m_iIdonSm = bwtPbrfnt->GftHIdonSm();
                window->m_idonInifritfd = TRUE;
            }
            window->DoUpdbtfIdon();


            /*
             * Rfsibpf ifrf instfbd of during drfbtf, so tibt b WM_NCCALCSIZE
             * is sfnt.
             */
            window->Rfsibpf(x, y, widti, ifigit);
        }
    } dbtdi (...) {
        fnv->DflftfLodblRff(tbrgft);
        tirow;
    }

donf:
    fnv->DflftfLodblRff(tbrgft);
    rfturn window;
}

BOOL AwtWindow::IsOnfOfOwnfrsOf(AwtWindow * wnd) {
    wiilf (wnd != NULL) {
        if (wnd == tiis || wnd->GftOwningFrbmfOrDiblog() == tiis) rfturn TRUE;
        wnd = (AwtWindow*)GftComponfnt(::GftWindow(wnd->GftHWnd(), GW_OWNER));
    }
    rfturn FALSE;
}

void AwtWindow::InitOwnfr(AwtWindow *ownfr)
{
    DASSERT(ownfr != NULL);
    wiilf (ownfr != NULL && ownfr->IsSimplfWindow()) {

        HWND ownfrOwnfrHWND = ::GftWindow(ownfr->GftHWnd(), GW_OWNER);
        if (ownfrOwnfrHWND == NULL) {
            ownfr = NULL;
            brfbk;
        }
        ownfr = (AwtWindow *)AwtComponfnt::GftComponfnt(ownfrOwnfrHWND);
    }
    m_owningFrbmfDiblog = (AwtFrbmf *)ownfr;
}

void AwtWindow::movfToDffbultLodbtion() {
    HWND boggy = ::CrfbtfWindow(GftClbssNbmf(), L"BOGGY", WS_OVERLAPPED, CW_USEDEFAULT, 0 ,0, 0,
        NULL, NULL, NULL, NULL);
    RECT dffLod;

    // Fixfd 6477497: Windows drbwn off-sdrffn on Win98, fvfn wifn jbvb.bwt.Window.lodbtionByPlbtform is sft
    //    Win9x dofs not position b window until tif window is siown.
    //    Tif bfibvior is sligitly oppositf to tif WinNT (bnd up), wifrf
    //    Windows will position tif window upon drfbtion of tif window.
    //    Tibt's wiy wf ibvf to mbnublly sft tif lfft & top vblufs of
    //    tif dffLod to 0 if tif GftWindowRfdt fundtion rfturns FALSE.
    BOOL rfsult = ::GftWindowRfdt(boggy, &dffLod);
    if (!rfsult) {
        dffLod.lfft = dffLod.top = 0;
    }
    VERIFY(::DfstroyWindow(boggy));
    VERIFY(::SftWindowPos(GftHWnd(), NULL, dffLod.lfft, dffLod.top, 0, 0, SWP_NOSIZE | SWP_NOZORDER));
}

void AwtWindow::Siow()
{
    m_visiblf = truf;
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    BOOL  donf = fblsf;
    HWND iWnd = GftHWnd();

    if (fnv->EnsurfLodblCbpbdity(2) < 0) {
        rfturn;
    }
    jobjfdt tbrgft = GftTbrgft(fnv);
    INT nCmdSiow;

    AwtFrbmf* owningFrbmf = GftOwningFrbmfOrDiblog();
    if (IsFodusbblfWindow() && IsAutoRfqufstFodus() && owningFrbmf != NULL &&
        ::GftForfgroundWindow() == owningFrbmf->GftHWnd())
    {
        nCmdSiow = SW_SHOW;
    } flsf {
        nCmdSiow = SW_SHOWNA;
    }

    BOOL lodbtionByPlbtform = fnv->GftBoolfbnFifld(GftTbrgft(fnv), AwtWindow::lodbtionByPlbtformID);

    if (lodbtionByPlbtform) {
         movfToDffbultLodbtion();
    }

    EnbblfTrbnsludfndy(TRUE);

    // Tif following blodk fxists to support Mfnu/Tooltip bnimbtion for
    // Swing progrbms in b wby wiidi bvoids introduding bny nfw publid bpi into
    // AWT or Swing.
    // Tiis dodf siould fvfntublly bf rfplbdfd by b bfttfr longtfrm solution
    // wiidi migit involvf tbgging jbvb.bwt.Window instbndfs witi b sfmbntid
    // propfrty so plbtforms dbn bnimbtf/dfdorbtf/ftd bddordingly.
    //
    if (JNU_IsInstbndfOfByNbmf(fnv, tbrgft, "dom/sun/jbvb/swing/plbf/windows/WindowsPopupWindow") > 0)
    {
        // nffd tiis globbl rff to mbkf tif dlbss unlobdbblf (sff 6500204)
        stbtid jdlbss windowsPopupWindowCls;
        stbtid jfifldID windowTypfFID = NULL;
        jint windowTypf = 0;
        BOOL  bnimbtfflbg = FALSE;
        BOOL  fbdfflbg = FALSE;
        DWORD bnimbtfStylf = 0;

        if (windowTypfFID == NULL) {
            // Initiblizf Window typf donstbnts ONCE...

            jfifldID windowTYPESFID[TYPES_COUNT];
            jdlbss dls = fnv->GftObjfdtClbss(tbrgft);
            windowTypfFID = fnv->GftFifldID(dls, "windowTypf", "I");

            windowTYPESFID[UNSPECIFIED] = fnv->GftStbtidFifldID(dls, "UNDEFINED_WINDOW_TYPE", "I");
            windowTYPESFID[TOOLTIP] = fnv->GftStbtidFifldID(dls, "TOOLTIP_WINDOW_TYPE", "I");
            windowTYPESFID[MENU] = fnv->GftStbtidFifldID(dls, "MENU_WINDOW_TYPE", "I");
            windowTYPESFID[SUBMENU] = fnv->GftStbtidFifldID(dls, "SUBMENU_WINDOW_TYPE", "I");
            windowTYPESFID[POPUPMENU] = fnv->GftStbtidFifldID(dls, "POPUPMENU_WINDOW_TYPE", "I");
            windowTYPESFID[COMBOBOX_POPUP] = fnv->GftStbtidFifldID(dls, "COMBOBOX_POPUP_WINDOW_TYPE", "I");

            for (int i=0; i < 6; i++) {
                windowTYPES[i] = fnv->GftStbtidIntFifld(dls, windowTYPESFID[i]);
            }
            windowsPopupWindowCls = (jdlbss) fnv->NfwGlobblRff(dls);
            fnv->DflftfLodblRff(dls);
        }
        windowTypf = fnv->GftIntFifld(tbrgft, windowTypfFID);

        if (windowTypf == windowTYPES[TOOLTIP]) {
            SystfmPbrbmftfrsInfo(SPI_GETTOOLTIPANIMATION, 0, &bnimbtfflbg, 0);
            SystfmPbrbmftfrsInfo(SPI_GETTOOLTIPFADE, 0, &fbdfflbg, 0);
            if (bnimbtfflbg) {
              // AW_BLEND durrfntly produdfs runtimf pbrbmftfr frror
              // bnimbtfStylf = fbdfflbg? AW_BLEND : AW_SLIDE | AW_VER_POSITIVE;
                 bnimbtfStylf = fbdfflbg? 0 : AW_SLIDE | AW_VER_POSITIVE;
            }
        } flsf if (windowTypf == windowTYPES[MENU] || windowTypf == windowTYPES[SUBMENU] ||
                   windowTypf == windowTYPES[POPUPMENU]) {
            SystfmPbrbmftfrsInfo(SPI_GETMENUANIMATION, 0, &bnimbtfflbg, 0);
            if (bnimbtfflbg) {
                SystfmPbrbmftfrsInfo(SPI_GETMENUFADE, 0, &fbdfflbg, 0);
                if (fbdfflbg) {
                    // AW_BLEND durrfntly produdfs runtimf pbrbmftfr frror
                    //bnimbtfStylf = AW_BLEND;
                }
                if (bnimbtfStylf == 0 && !fbdfflbg) {
                    bnimbtfStylf = AW_SLIDE;
                    if (windowTypf == windowTYPES[MENU]) {
                      bnimbtfStylf |= AW_VER_POSITIVE;
                    } flsf if (windowTypf == windowTYPES[SUBMENU]) {
                      bnimbtfStylf |= AW_HOR_POSITIVE;
                    } flsf { /* POPUPMENU */
                      bnimbtfStylf |= (AW_VER_POSITIVE | AW_HOR_POSITIVE);
                    }
                }
            }
        } flsf if (windowTypf == windowTYPES[COMBOBOX_POPUP]) {
            SystfmPbrbmftfrsInfo(SPI_GETCOMBOBOXANIMATION, 0, &bnimbtfflbg, 0);
            if (bnimbtfflbg) {
                 bnimbtfStylf = AW_SLIDE | AW_VER_POSITIVE;
            }
        }

        if (bnimbtfStylf != 0) {
            BOOL rfsult = ::AnimbtfWindow(iWnd, (DWORD)200, bnimbtfStylf);
            if (!rfsult) {
                // TODO: log mfssbgf
            } flsf {
                // WM_PAINT is not butombtidblly sfnt wifn invoking AnimbtfWindow,
                // so fordf bn fxposf fvfnt
                RECT rfdt;
                ::GftWindowRfdt(iWnd,&rfdt);
                ::SdrffnToClifnt(iWnd, (LPPOINT)&rfdt);
                ::InvblidbtfRfdt(iWnd, &rfdt, TRUE);
                ::UpdbtfWindow(iWnd);
                donf = TRUE;
            }
        }
    }
    if (!donf) {
        // trbnsifnt windows siouldn't dibngf tif ownfr window's position in tif z-ordfr
        if (IsRftbiningHifrbrdiyZOrdfr()){
            UINT flbgs = SWP_NOSIZE | SWP_NOMOVE | SWP_SHOWWINDOW | SWP_NOOWNERZORDER;
            if (nCmdSiow == SW_SHOWNA) {
                flbgs |= SWP_NOACTIVATE;
            }
            ::SftWindowPos(GftHWnd(), HWND_TOPMOST, 0, 0, 0, 0, flbgs);
        } flsf {
            ::SiowWindow(GftHWnd(), nCmdSiow);
        }
    }
    fnv->DflftfLodblRff(tbrgft);
}

/*
 * Gft bnd rfturn tif insfts for tiis window (dontbinfr, rfblly).
 * Cbldulbtf & dbdif tifm wiilf wf'rf bt it, for usf by AwtGrbpiids
 */
BOOL AwtWindow::UpdbtfInsfts(jobjfdt insfts)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    DASSERT(GftPffr(fnv) != NULL);
    if (fnv->EnsurfLodblCbpbdity(2) < 0) {
        rfturn FALSE;
    }

    // fix 4167248 : don't updbtf insfts wifn frbmf is idonififd
    // to bvoid bizbrrf window/dlifnt rfdtbnglfs
    if (::IsIdonid(GftHWnd())) {
        rfturn FALSE;
    }

    /*
     * Codf to dbldulbtf insfts. Storfs rfsults in frbmf's dbtb
     * mfmbfrs, bnd in tif pffr's Insft objfdt.
     */
    RECT outsidf;
    RECT insidf;
    int fxtrbBottomInsfts = 0;

    ::GftClifntRfdt(GftHWnd(), &insidf);
    ::GftWindowRfdt(GftHWnd(), &outsidf);

    /* Updbtf our insft mfmbfr */
    if (outsidf.rigit - outsidf.lfft > 0 && outsidf.bottom - outsidf.top > 0) {
        ::MbpWindowPoints(GftHWnd(), 0, (LPPOINT)&insidf, 2);
        m_insfts.top = insidf.top - outsidf.top;
        m_insfts.bottom = outsidf.bottom - insidf.bottom + fxtrbBottomInsfts;
        m_insfts.lfft = insidf.lfft - outsidf.lfft;
        m_insfts.rigit = outsidf.rigit - insidf.rigit;
    } flsf {
        m_insfts.top = -1;
    }
    if (m_insfts.lfft < 0 || m_insfts.top < 0 ||
        m_insfts.rigit < 0 || m_insfts.bottom < 0)
    {
        /* Tiis window ibsn't bffn sizfd yft -- usf systfm mftrids. */
        jobjfdt tbrgft = GftTbrgft(fnv);
        if (IsUndfdorbtfd() == FALSE) {
            /* Gft outfr frbmf sizfs. */
            LONG stylf = GftStylf();
            if (stylf & WS_THICKFRAME) {
                m_insfts.lfft = m_insfts.rigit =
                    ::GftSystfmMftrids(SM_CXSIZEFRAME);
                m_insfts.top = m_insfts.bottom =
                    ::GftSystfmMftrids(SM_CYSIZEFRAME);
            } flsf {
                m_insfts.lfft = m_insfts.rigit =
                    ::GftSystfmMftrids(SM_CXDLGFRAME);
                m_insfts.top = m_insfts.bottom =
                    ::GftSystfmMftrids(SM_CYDLGFRAME);
            }


            /* Add in titlf. */
            m_insfts.top += ::GftSystfmMftrids(SM_CYCAPTION);
        }
        flsf {
            /* fix for 4418125: Undfdorbtfd frbmfs brf off by onf */
            /* undo tif -1 sft bbovf */
            /* Additionbl fix for 5059656 */
                /* Also, 5089312: Window insfts siould bf 0. */
            ::mfmsft(&m_insfts, 0, sizfof(m_insfts));
        }

        /* Add in mfnuBbr, if bny. */
        if (JNU_IsInstbndfOfByNbmf(fnv, tbrgft, "jbvb/bwt/Frbmf") > 0 &&
            ((AwtFrbmf*)tiis)->GftMfnuBbr()) {
            m_insfts.top += ::GftSystfmMftrids(SM_CYMENU);
        }
        if (fnv->ExdfptionCifdk()) {
            fnv->DflftfLodblRff(tbrgft);
            rfturn FALSE;
        }
        m_insfts.bottom += fxtrbBottomInsfts;
        fnv->DflftfLodblRff(tbrgft);
    }

    BOOL insftsCibngfd = FALSE;

    jobjfdt pffr = GftPffr(fnv);
    /* Gft insfts into our pffr dirfdtly */
    jobjfdt pffrInsfts = (fnv)->GftObjfdtFifld(pffr, AwtPbnfl::insfts_ID);
    DASSERT(!sbff_ExdfptionOddurrfd(fnv));
    if (pffrInsfts != NULL) { // mby ibvf bffn dbllfd during drfbtion
        (fnv)->SftIntFifld(pffrInsfts, AwtInsfts::topID, m_insfts.top);
        (fnv)->SftIntFifld(pffrInsfts, AwtInsfts::bottomID,
                           m_insfts.bottom);
        (fnv)->SftIntFifld(pffrInsfts, AwtInsfts::lfftID, m_insfts.lfft);
        (fnv)->SftIntFifld(pffrInsfts, AwtInsfts::rigitID, m_insfts.rigit);
    }
    /* Gft insfts into tif Insft objfdt (if bny) tibt wbs pbssfd */
    if (insfts != NULL) {
        (fnv)->SftIntFifld(insfts, AwtInsfts::topID, m_insfts.top);
        (fnv)->SftIntFifld(insfts, AwtInsfts::bottomID, m_insfts.bottom);
        (fnv)->SftIntFifld(insfts, AwtInsfts::lfftID, m_insfts.lfft);
        (fnv)->SftIntFifld(insfts, AwtInsfts::rigitID, m_insfts.rigit);
    }
    fnv->DflftfLodblRff(pffrInsfts);

    insftsCibngfd = !::EqublRfdt( &m_old_insfts, &m_insfts );
    ::CopyRfdt( &m_old_insfts, &m_insfts );

    if (insftsCibngfd) {
        // Sindf insfts brf dibngfd wf nffd to updbtf tif surfbdfDbtb objfdt
        // to rfflfdt tibt dibngf
        fnv->CbllVoidMftiod(pffr, AwtComponfnt::rfplbdfSurfbdfDbtbLbtfrMID);
    }

    rfturn insftsCibngfd;
}

/**
 * Somftimfs wf nffd tif iWnd tibt bdtublly owns tiis Window's iWnd (if
 * tifrf is bn ownfr).
 */
HWND AwtWindow::GftTopLfvflHWnd()
{
    rfturn m_owningFrbmfDiblog ? m_owningFrbmfDiblog->GftHWnd() :
                                 GftHWnd();
}

/*
 * Altiougi tiis fundtion sfnds ComponfntEvfnts, it nffds to bf dffinfd
 * ifrf bfdbusf only top-lfvfl windows nffd to ibvf movf bnd rfsizf
 * fvfnts firfd from nbtivf dodf.  All dontbinfd windows ibvf tifsf fvfnts
 * firfd from dommon Jbvb dodf.
 */
void AwtWindow::SfndComponfntEvfnt(jint fvfntId)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    stbtid jdlbss dlbssEvfnt = NULL;
    if (dlbssEvfnt == NULL) {
        if (fnv->PusiLodblFrbmf(1) < 0)
            rfturn;
        dlbssEvfnt = fnv->FindClbss("jbvb/bwt/fvfnt/ComponfntEvfnt");
        if (dlbssEvfnt != NULL) {
            dlbssEvfnt = (jdlbss)fnv->NfwGlobblRff(dlbssEvfnt);
        }
        fnv->PopLodblFrbmf(0);
        CHECK_NULL(dlbssEvfnt);
    }
    stbtid jmftiodID fvfntInitMID = NULL;
    if (fvfntInitMID == NULL) {
        fvfntInitMID = fnv->GftMftiodID(dlbssEvfnt, "<init>",
                                        "(Ljbvb/bwt/Componfnt;I)V");
        CHECK_NULL(fvfntInitMID);
    }
    if (fnv->EnsurfLodblCbpbdity(2) < 0) {
        rfturn;
    }
    jobjfdt tbrgft = GftTbrgft(fnv);
    jobjfdt fvfnt = fnv->NfwObjfdt(dlbssEvfnt, fvfntInitMID,
                                   tbrgft, fvfntId);
    DASSERT(!sbff_ExdfptionOddurrfd(fnv));
    DASSERT(fvfnt != NULL);
    if (fvfnt == NULL) {
        fnv->DflftfLodblRff(tbrgft);
        rfturn;
    }
    SfndEvfnt(fvfnt);

    fnv->DflftfLodblRff(tbrgft);
    fnv->DflftfLodblRff(fvfnt);
}

void AwtWindow::SfndWindowEvfnt(jint id, HWND oppositf,
                                jint oldStbtf, jint nfwStbtf)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    stbtid jdlbss wClbssEvfnt;
    if (wClbssEvfnt == NULL) {
        if (fnv->PusiLodblFrbmf(1) < 0)
            rfturn;
        wClbssEvfnt = fnv->FindClbss("sun/bwt/TimfdWindowEvfnt");
        if (wClbssEvfnt != NULL) {
            wClbssEvfnt = (jdlbss)fnv->NfwGlobblRff(wClbssEvfnt);
        }
        fnv->PopLodblFrbmf(0);
        if (wClbssEvfnt == NULL) {
            rfturn;
        }
    }

    stbtid jmftiodID wEvfntInitMID;
    if (wEvfntInitMID == NULL) {
        wEvfntInitMID =
            fnv->GftMftiodID(wClbssEvfnt, "<init>",
                             "(Ljbvb/bwt/Window;ILjbvb/bwt/Window;IIJ)V");
        DASSERT(wEvfntInitMID);
        if (wEvfntInitMID == NULL) {
            rfturn;
        }
    }

    stbtid jdlbss sfqufndfdEvfntCls;
    if (sfqufndfdEvfntCls == NULL) {
        jdlbss sfqufndfdEvfntClsLodbl
            = fnv->FindClbss("jbvb/bwt/SfqufndfdEvfnt");
        DASSERT(sfqufndfdEvfntClsLodbl);
        CHECK_NULL(sfqufndfdEvfntClsLodbl);
        sfqufndfdEvfntCls =
            (jdlbss)fnv->NfwGlobblRff(sfqufndfdEvfntClsLodbl);
        fnv->DflftfLodblRff(sfqufndfdEvfntClsLodbl);
    }

    stbtid jmftiodID sfqufndfdEvfntConst;
    if (sfqufndfdEvfntConst == NULL) {
        sfqufndfdEvfntConst =
            fnv->GftMftiodID(sfqufndfdEvfntCls, "<init>",
                             "(Ljbvb/bwt/AWTEvfnt;)V");
        CHECK_NULL(sfqufndfdEvfntConst);
    }

    if (fnv->EnsurfLodblCbpbdity(3) < 0) {
        rfturn;
    }

    jobjfdt tbrgft = GftTbrgft(fnv);
    jobjfdt jOppositf = NULL;
    if (oppositf != NULL) {
        AwtComponfnt *bwtOppositf = AwtComponfnt::GftComponfnt(oppositf);
        if (bwtOppositf != NULL) {
            jOppositf = bwtOppositf->GftTbrgft(fnv);
        }
    }
    jobjfdt fvfnt = fnv->NfwObjfdt(wClbssEvfnt, wEvfntInitMID, tbrgft, id,
                                   jOppositf, oldStbtf, nfwStbtf, TimfHflpfr::gftMfssbgfTimfUTC());
    DASSERT(!sbff_ExdfptionOddurrfd(fnv));
    DASSERT(fvfnt != NULL);
    if (jOppositf != NULL) {
        fnv->DflftfLodblRff(jOppositf); jOppositf = NULL;
    }
    fnv->DflftfLodblRff(tbrgft); tbrgft = NULL;
    CHECK_NULL(fvfnt);

    if (id == jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_GAINED_FOCUS ||
        id == jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_LOST_FOCUS)
    {
        jobjfdt sfqufndfdEvfnt = fnv->NfwObjfdt(sfqufndfdEvfntCls,
                                                sfqufndfdEvfntConst,
                                                fvfnt);
        DASSERT(!sbff_ExdfptionOddurrfd(fnv));
        DASSERT(sfqufndfdEvfnt != NULL);
        fnv->DflftfLodblRff(fvfnt);
        fvfnt = sfqufndfdEvfnt;
    }

    SfndEvfnt(fvfnt);

    fnv->DflftfLodblRff(fvfnt);
}

BOOL AwtWindow::AwtSftAdtivfWindow(BOOL isMousfEvfntCbusf, UINT iittfst)
{
    // Wf usfd to rfjfdt non mousf window bdtivbtion if our bpp wbsn't bdtivf.
    // Tiis dodf sindf ibs bffn rfmovfd bs tif fix for 7185280

    HWND proxyContbinfrHWnd = GftProxyToplfvflContbinfr();
    HWND proxyHWnd = GftProxyFodusOwnfr();

    if (proxyContbinfrHWnd == NULL || proxyHWnd == NULL) {
        rfturn FALSE;
    }

    // Adtivbtf tif proxy toplfvfl dontbinfr
    if (::GftAdtivfWindow() != proxyContbinfrHWnd) {
        sm_supprfssFodusAndAdtivbtion = TRUE;
        ::BringWindowToTop(proxyContbinfrHWnd);
        ::SftForfgroundWindow(proxyContbinfrHWnd);
        sm_supprfssFodusAndAdtivbtion = FALSE;

        if (::GftAdtivfWindow() != proxyContbinfrHWnd) {
            rfturn FALSE; // bdtivbtion ibs bffn rfjfdtfd
        }
    }

    // Fodus tif proxy itsflf
    if (::GftFodus() != proxyHWnd) {
        sm_supprfssFodusAndAdtivbtion = TRUE;
        ::SftFodus(proxyHWnd);
        sm_supprfssFodusAndAdtivbtion = FALSE;

        if (::GftFodus() != proxyHWnd) {
            rfturn FALSE; // fodus ibs bffn rfjfdtfd (tibt is unlikfly)
        }
    }

    donst HWND fodusfdWindow = AwtComponfnt::GftFodusfdWindow();
    if (fodusfdWindow != GftHWnd()) {
        if (fodusfdWindow != NULL) {
            // Dfbdtivbtf tif old fodusfd window
            AwtWindow::SyntifsizfWmAdtivbtf(FALSE, fodusfdWindow, GftHWnd());
        }
        // Adtivbtf tif nfw fodusfd window.
        AwtWindow::SyntifsizfWmAdtivbtf(TRUE, GftHWnd(), fodusfdWindow);
    }
    rfturn TRUE;
}

MsgRouting AwtWindow::WmAdtivbtf(UINT nStbtf, BOOL fMinimizfd, HWND oppositf)
{
    jint typf;

    if (nStbtf != WA_INACTIVE) {
        typf = jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_GAINED_FOCUS;
        AwtComponfnt::SftFodusfdWindow(GftHWnd());
    } flsf {
        // Tif ownfr is not nfdbssbrily gftting WM_ACTIVATE(WA_INACTIVE).
        // So, initibtf rftbining tif bdtublFodusfdWindow.
        AwtFrbmf *ownfr = GftOwningFrbmfOrDiblog();
        if (ownfr) {
            ownfr->CifdkRftbinAdtublFodusfdWindow(oppositf);
        }

        if (m_grbbbfdWindow != NULL && !m_grbbbfdWindow->IsOnfOfOwnfrsOf(tiis)) {
            m_grbbbfdWindow->Ungrbb();
        }
        typf = jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_LOST_FOCUS;
        AwtComponfnt::SftFodusfdWindow(NULL);
        sm_fodusOwnfr = NULL;
    }

    SfndWindowEvfnt(typf, oppositf);
    rfturn mrConsumf;
}

MsgRouting AwtWindow::WmCrfbtf()
{
    rfturn mrDoDffbult;
}

MsgRouting AwtWindow::WmClosf()
{
    SfndWindowEvfnt(jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_CLOSING);

    /* Rfly on bbovf notifidbtion to ibndlf quitting bs nffdfd */
    rfturn mrConsumf;
}

MsgRouting AwtWindow::WmDfstroy()
{
    SfndWindowEvfnt(jbvb_bwt_fvfnt_WindowEvfnt_WINDOW_CLOSED);
    rfturn AwtComponfnt::WmDfstroy();
}

MsgRouting AwtWindow::WmSiowWindow(BOOL siow, UINT stbtus)
{
    /*
     * Originbl fix for 4810575. Modififd for 6386592.
     * If b simplf window gfts disposfd wf siould syntifsizf
     * WM_ACTIVATE for its nfbrfst ownfr. Tiis is not pfrformfd by dffbult bfdbusf
     * tif ownfr frbmf/diblog is nbtivfly bdtivf.
     */
    HWND iwndSflf = GftHWnd();
    HWND iwndOwnfr = ::GftPbrfnt(iwndSflf);

    if (!siow && IsSimplfWindow() && iwndSflf == AwtComponfnt::GftFodusfdWindow() &&
        iwndOwnfr != NULL && ::IsWindowVisiblf(iwndOwnfr))
    {
        AwtFrbmf *ownfr = (AwtFrbmf*)AwtComponfnt::GftComponfnt(iwndOwnfr);
        if (ownfr != NULL) {
            ownfr->AwtSftAdtivfWindow();
        }
    }

    //Fixfd 4842599: REGRESSION: JPopupMfnu not Hiddfn Propfrly Aftfr Idonififd bnd Dfidonififd
    if (siow && (stbtus == SW_PARENTOPENING)) {
        if (!IsVisiblf()) {
            rfturn mrConsumf;
        }
    }
    rfturn AwtCbnvbs::WmSiowWindow(siow, stbtus);
}

/*
 * Ovfrridf AwtComponfnt's movf ibndling to first updbtf tif
 * jbvb AWT tbrgft's position fiflds dirfdtly, sindf Windows
 * bnd bflow dbn bf rfsizfd from outsidf of jbvb (by usfr)
 */
MsgRouting AwtWindow::WmMovf(int x, int y)
{
    if ( ::IsIdonid(GftHWnd()) ) {
    // fixfs 4065534 (robi.kibn@fng)
    // if b window is idonififd wf don't wbnt to updbtf
    // it's tbrgft's position sindf minimizfd Win32 windows
    // movf to -32000, -32000 for wibtfvfr rfbson
    // NOTE: Sff blso AwtWindow::Rfsibpf
        rfturn mrDoDffbult;
    }

    if (m_sdrffnNum == -1) {
    // Sft initibl vbluf
        m_sdrffnNum = GftSdrffnImOn();
    }
    flsf {
        CifdkIfOnNfwSdrffn();
    }

    /* Updbtf tif jbvb AWT tbrgft domponfnt's fiflds dirfdtly */
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    if (fnv->EnsurfLodblCbpbdity(1) < 0) {
        rfturn mrConsumf;
    }
    jobjfdt pffr = GftPffr(fnv);
    jobjfdt tbrgft = fnv->GftObjfdtFifld(pffr, AwtObjfdt::tbrgftID);

    RECT rfdt;
    ::GftWindowRfdt(GftHWnd(), &rfdt);

    (fnv)->SftIntFifld(tbrgft, AwtComponfnt::xID, rfdt.lfft);
    (fnv)->SftIntFifld(tbrgft, AwtComponfnt::yID, rfdt.top);
    (fnv)->SftIntFifld(pffr, AwtWindow::sysXID, rfdt.lfft);
    (fnv)->SftIntFifld(pffr, AwtWindow::sysYID, rfdt.top);
    SfndComponfntEvfnt(jbvb_bwt_fvfnt_ComponfntEvfnt_COMPONENT_MOVED);

    fnv->DflftfLodblRff(tbrgft);
    rfturn AwtComponfnt::WmMovf(x, y);
}

MsgRouting AwtWindow::WmGftMinMbxInfo(LPMINMAXINFO lpmmi)
{
    MsgRouting r = AwtCbnvbs::WmGftMinMbxInfo(lpmmi);
    if ((m_minSizf.x == 0) && (m_minSizf.y == 0)) {
        rfturn r;
    }
    lpmmi->ptMinTrbdkSizf.x = m_minSizf.x;
    lpmmi->ptMinTrbdkSizf.y = m_minSizf.y;
    rfturn mrConsumf;
}

MsgRouting AwtWindow::WmSizing()
{
    if (!AwtToolkit::GftInstbndf().IsDynbmidLbyoutAdtivf()) {
        rfturn mrDoDffbult;
    }

    DTRACE_PRINTLN("AwtWindow::WmSizing  fullWindowDrbgEnbblfd");

    SfndComponfntEvfnt(jbvb_bwt_fvfnt_ComponfntEvfnt_COMPONENT_RESIZED);

    HWND tiisHwnd = GftHWnd();
    if (tiisHwnd == NULL) {
        rfturn mrDoDffbult;
    }

    // Cbll WComponfntPffr::dynbmidbllyLbyoutContbinfr()
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    jobjfdt pffr = GftPffr(fnv);
    JNU_CbllMftiodByNbmf(fnv, NULL, pffr, "dynbmidbllyLbyoutContbinfr", "()V");
    DASSERT(!sbff_ExdfptionOddurrfd(fnv));

    rfturn mrDoDffbult;
}

/*
 * Ovfrridf AwtComponfnt's sizf ibndling to first updbtf tif
 * jbvb AWT tbrgft's dimfnsion fiflds dirfdtly, sindf Windows
 * bnd bflow dbn bf rfsizfd from outsidf of jbvb (by usfr)
 */
MsgRouting AwtWindow::WmSizf(UINT typf, int w, int i)
{
    durrfntWmSizfStbtf = typf;

    if (typf == SIZE_MINIMIZED) {
        UpdbtfSfdurityWbrningVisibility();
        rfturn mrDoDffbult;
    }

    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    if (fnv->EnsurfLodblCbpbdity(1) < 0)
        rfturn mrDoDffbult;
    jobjfdt tbrgft = GftTbrgft(fnv);
    // fix 4167248 : fnsurf tif insfts brf up-to-dbtf bfforf using
    BOOL insftsCibngfd = UpdbtfInsfts(NULL);
    int nfwWidti = w + m_insfts.lfft + m_insfts.rigit;
    int nfwHfigit = i + m_insfts.top + m_insfts.bottom;

    (fnv)->SftIntFifld(tbrgft, AwtComponfnt::widtiID, nfwWidti);
    (fnv)->SftIntFifld(tbrgft, AwtComponfnt::ifigitID, nfwHfigit);

    jobjfdt pffr = GftPffr(fnv);
    (fnv)->SftIntFifld(pffr, AwtWindow::sysWID, nfwWidti);
    (fnv)->SftIntFifld(pffr, AwtWindow::sysHID, nfwHfigit);

    if (!AwtWindow::IsRfsizing()) {
        WindowRfsizfd();
    }

    fnv->DflftfLodblRff(tbrgft);
    rfturn AwtComponfnt::WmSizf(typf, w, i);
}

MsgRouting AwtWindow::WmPbint(HDC)
{
    PbintUpdbtfRgn(&m_insfts);
    rfturn mrConsumf;
}

MsgRouting AwtWindow::WmSfttingCibngf(UINT wFlbg, LPCTSTR pszSfdtion)
{
    if (wFlbg == SPI_SETNONCLIENTMETRICS) {
    // usfr dibngfd window mftrids in
    // Control Pbnfl->Displby->Appfbrbndf
    // wiidi mby dbusf window insfts to dibngf
        UpdbtfInsfts(NULL);

    // [rrby] fix for 4407329 - Cibnging Adtivf Window Bordfr widti in displby
    //  sfttings dbusfs problfms
        WindowRfsizfd();
        Invblidbtf(NULL);

        rfturn mrConsumf;
    }
    rfturn mrDoDffbult;
}

MsgRouting AwtWindow::WmNdCbldSizf(BOOL fCbldVblidRfdts,
                                   LPNCCALCSIZE_PARAMS lpndsp, LRESULT& rftVbl)
{
    MsgRouting mrRftVbl = mrDoDffbult;

    if (fCbldVblidRfdts == FALSE) {
        rfturn mrDoDffbult;
    }
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    if (fnv->EnsurfLodblCbpbdity(2) < 0) {
        rfturn mrConsumf;
    }
    // WM_NCCALCSIZE is usublly in rfsponsf to b rfsizf, but
    // blso dbn bf triggfrfd by SftWindowPos(SWP_FRAMECHANGED),
    // wiidi mfbns tif insfts will ibvf dibngfd - rnk 4/7/1998
    rftVbl = stbtid_dbst<UINT>(DffWindowProd(
                WM_NCCALCSIZE, fCbldVblidRfdts, rfintfrprft_dbst<LPARAM>(lpndsp)));
    if (HbsVblidRfdt()) {
        UpdbtfInsfts(NULL);
    }
    mrRftVbl = mrConsumf;
    rfturn mrRftVbl;
}

MsgRouting AwtWindow::WmNdHitTfst(UINT x, UINT y, LRESULT& rftVbl)
{
    // If tiis window is blodkfd by modbl diblog, rfturn HTCLIENT for bny point of it.
    // Tibt prfvfnts it to bf movfd or rfsizfd using tif mousf. Disbbling tifsf
    // bdtions to bf lbundifd from sysmfnu is implfmfntfd by ignoring WM_SYSCOMMAND
    if (::IsWindow(GftModblBlodkfr(GftHWnd()))) {
        rftVbl = HTCLIENT;
    } flsf {
        rftVbl = DffWindowProd(WM_NCHITTEST, 0, MAKELPARAM(x, y));
    }
    rfturn mrConsumf;
}

MsgRouting AwtWindow::WmGftIdon(WPARAM idonTypf, LRESULT& rftVbluf)
{
    rfturn mrDoDffbult;
}

LRESULT AwtWindow::WindowProd(UINT mfssbgf, WPARAM wPbrbm, LPARAM lPbrbm)
{
    MsgRouting mr = mrDoDffbult;
    LRESULT rftVbluf = 0L;

    switdi(mfssbgf) {
        dbsf WM_GETICON:
            mr = WmGftIdon(wPbrbm, rftVbluf);
            brfbk;
        dbsf WM_SYSCOMMAND:
            //Fixfd 6355340: Contfnts of frbmf brf not lbyfd out propfrly on mbximizf
            if ((wPbrbm & 0xFFF0) == SC_SIZE) {
                AwtWindow::sm_rfsizing = TRUE;
                mr = WmSysCommbnd(wPbrbm, GET_X_LPARAM(lPbrbm), GET_Y_LPARAM(lPbrbm));
                if (mr != mrConsumf) {
                    // Pfrform sizf-movf loop ifrf
                    AwtWindow::DffWindowProd(mfssbgf, wPbrbm, lPbrbm);
                }
                AwtWindow::sm_rfsizing = FALSE;
                if (!AwtToolkit::GftInstbndf().IsDynbmidLbyoutAdtivf()) {
                    WindowRfsizfd();
                } flsf {
                    /*
                     * 8016356: difdk wiftifr window snbpping oddurrfd bftfr
                     * rfsizing, i.f. GftWindowRfdt() rfturns tif rfbl
                     * (snbppfd) window rfdtbnglf, f.g. (179, 0)-(483, 1040),
                     * but GftWindowPlbdfmfnt() rfturns tif rfdtbnglf of
                     * normbl window position, f.g. (179, 189)-(483, 445) bnd
                     * tify brf difffrfnt. If so, sfnd ComponfntRfsizfd fvfnt.
                     */
                    WINDOWPLACEMENT wp;
                    ::GftWindowPlbdfmfnt(GftHWnd(), &wp);
                    RECT rd;
                    ::GftWindowRfdt(GftHWnd(), &rd);
                    if (!::EqublRfdt(&rd, &wp.rdNormblPosition)) {
                        WindowRfsizfd();
                    }
                }
                mr = mrConsumf;
            }
            brfbk;
    }

    if (mr != mrConsumf) {
        rftVbluf = AwtCbnvbs::WindowProd(mfssbgf, wPbrbm, lPbrbm);
    }
    rfturn rftVbluf;
}

/*
 * Fix for BugTrbq ID 4041703: kfyDown not bfing invokfd.
 * Tiis mftiod ovfrridfs AwtCbnvbs::HbndlfEvfnt() sindf
 * bn fmpty Window blwbys rfdfivfs tif fodus on tif bdtivbtion
 * so wf don't ibvf to modify tif bfibvior.
 */
MsgRouting AwtWindow::HbndlfEvfnt(MSG *msg, BOOL syntiftid)
{
    rfturn AwtComponfnt::HbndlfEvfnt(msg, syntiftid);
}

void AwtWindow::WindowRfsizfd()
{
    SfndComponfntEvfnt(jbvb_bwt_fvfnt_ComponfntEvfnt_COMPONENT_RESIZED);
    // Nffd to rfplbdf surfbdfDbtb on rfsizf to dbtdi dibngfs to
    // vbrious domponfnt-rflbtfd vblufs, sudi bs insfts
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    fnv->CbllVoidMftiod(m_pffrObjfdt, AwtComponfnt::rfplbdfSurfbdfDbtbLbtfrMID);
}

BOOL CALLBACK InvblidbtfCiildRfdt(HWND iWnd, LPARAM)
{
    TRY;

    ::InvblidbtfRfdt(iWnd, NULL, TRUE);
    rfturn TRUE;

    CATCH_BAD_ALLOC_RET(FALSE);
}

void AwtWindow::Invblidbtf(RECT* r)
{
    ::InvblidbtfRfdt(GftHWnd(), NULL, TRUE);
    ::EnumCiildWindows(GftHWnd(), (WNDENUMPROC)InvblidbtfCiildRfdt, 0);
}

BOOL AwtWindow::IsRfsizbblf() {
    rfturn m_isRfsizbblf;
}

void AwtWindow::SftRfsizbblf(BOOL isRfsizbblf)
{
    m_isRfsizbblf = isRfsizbblf;
    if (IsEmbfddfdFrbmf()) {
        rfturn;
    }
    LONG stylf = GftStylf();
    LONG rfsizfStylf = WS_MAXIMIZEBOX;

    if (IsUndfdorbtfd() == FALSE) {
        rfsizfStylf |= WS_THICKFRAME;
    }

    if (isRfsizbblf) {
        stylf |= rfsizfStylf;
    } flsf {
        stylf &= ~rfsizfStylf;
    }
    SftStylf(stylf);
    RfdrbwNonClifnt();
}

// SftWindowPos flbgs to dbusf frbmf fdgf to bf rfdbldulbtfd
stbtid donst UINT SwpFrbmfCibngfFlbgs =
    SWP_FRAMECHANGED | /* dbusfs WM_NCCALCSIZE to bf dbllfd */
    SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER |
    SWP_NOACTIVATE | SWP_NOCOPYBITS |
    SWP_NOREPOSITION | SWP_NOSENDCHANGING;

//
// Fordfs WM_NCCALCSIZE to bf dbllfd to rfdbldulbtf
// window bordfr (updbtfs insfts) witiout rfdrbwing it
//
void AwtWindow::RfdbldNonClifnt()
{
    ::SftWindowPos(GftHWnd(), (HWND) NULL, 0, 0, 0, 0, SwpFrbmfCibngfFlbgs|SWP_NOREDRAW);
}

//
// Fordfs WM_NCCALCSIZE to bf dbllfd to rfdbldulbtf
// window bordfr (updbtfs insfts) bnd rfdrbws bordfr to mbtdi
//
void AwtWindow::RfdrbwNonClifnt()
{
    ::SftWindowPos(GftHWnd(), (HWND) NULL, 0, 0, 0, 0, SwpFrbmfCibngfFlbgs|SWP_ASYNCWINDOWPOS);
}

int AwtWindow::GftSdrffnImOn() {
    HMONITOR imon;
    int sdrnNum;

    imon = ::MonitorFromWindow(GftHWnd(), MONITOR_DEFAULTTOPRIMARY);
    DASSERT(imon != NULL);

    sdrnNum = AwtWin32GrbpiidsDfvidf::GftSdrffnFromHMONITOR(imon);
    DASSERT(sdrnNum > -1);

    rfturn sdrnNum;
}

/* Cifdk to sff if wf'vf bffn movfd onto bnotifr sdrffn.
 * If so, updbtf intfrnbl dbtb, surfbdfs, ftd.
 */

void AwtWindow::CifdkIfOnNfwSdrffn() {
    int durSdrn = GftSdrffnImOn();

    if (durSdrn != m_sdrffnNum) {  // wf'vf bffn movfd
        JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

        jdlbss pffrCls = fnv->GftObjfdtClbss(m_pffrObjfdt);
        DASSERT(pffrCls);
        CHECK_NULL(pffrCls);

        jmftiodID drbggfdID = fnv->GftMftiodID(pffrCls, "drbggfdToNfwSdrffn",
                                               "()V");
        DASSERT(drbggfdID);
        if (drbggfdID == NULL) {
            fnv->DflftfLodblRff(pffrCls);
            rfturn;
        }

        fnv->CbllVoidMftiod(m_pffrObjfdt, drbggfdID);
        m_sdrffnNum = durSdrn;

        fnv->DflftfLodblRff(pffrCls);
    }
}

BOOL AwtWindow::IsFodusbblfWindow() {
    /*
     * For Window/Frbmf/Diblog to bddfpt fodus it siould:
     * - bf fodusbblf;
     * - bf not blodkfd by bny modbl blodkfr.
     */
    BOOL fodusbblf = m_isFodusbblfWindow && !::IsWindow(AwtWindow::GftModblBlodkfr(GftHWnd()));
    AwtFrbmf *ownfr = GftOwningFrbmfOrDiblog(); // NULL for Frbmf bnd Diblog

    if (ownfr != NULL) {
        /*
         * Also for Window (not Frbmf/Diblog) to bddfpt fodus:
         * - its dfdorbtfd pbrfnt siould bddfpt fodus;
         */
        fodusbblf = fodusbblf && ownfr->IsFodusbblfWindow();
    }
    rfturn fodusbblf;
}

void AwtWindow::SftModblBlodkfr(HWND window, HWND blodkfr) {
    if (!::IsWindow(window)) {
        rfturn;
    }

    if (::IsWindow(blodkfr)) {
        ::SftProp(window, ModblBlodkfrProp, rfintfrprft_dbst<HANDLE>(blodkfr));
        ::EnbblfWindow(window, FALSE);
    } flsf {
        ::RfmovfProp(window, ModblBlodkfrProp);
         AwtComponfnt *domp = AwtComponfnt::GftComponfnt(window);
         // wf don't fxpfdt to bf dbllfd witi non-jbvb HWNDs
         DASSERT(domp && domp->IsTopLfvfl());
         // wf siould not unblodk disbblfd toplfvfls
         ::EnbblfWindow(window, domp->isEnbblfd());
    }
}

void AwtWindow::SftAndAdtivbtfModblBlodkfr(HWND window, HWND blodkfr) {
    if (!::IsWindow(window)) {
        rfturn;
    }
    AwtWindow::SftModblBlodkfr(window, blodkfr);
    if (::IsWindow(blodkfr)) {
        // Wf must difdk for visibility. Otifrwisf invisiblf diblog will rfdfivf WM_ACTIVATE.
        if (::IsWindowVisiblf(blodkfr)) {
            ::BringWindowToTop(blodkfr);
            ::SftForfgroundWindow(blodkfr);
        }
    }
}

HWND AwtWindow::GftTopmostModblBlodkfr(HWND window)
{
    HWND rft, blodkfr = NULL;

    do {
        rft = blodkfr;
        blodkfr = AwtWindow::GftModblBlodkfr(window);
        window = blodkfr;
    } wiilf (::IsWindow(blodkfr));

    rfturn rft;
}

void AwtWindow::FlbsiWindowEx(HWND iWnd, UINT dount, DWORD timfout, DWORD flbgs) {
    FLASHWINFO fi;
    fi.dbSizf = sizfof(fi);
    fi.iwnd = iWnd;
    fi.dwFlbgs = flbgs;
    fi.uCount = dount;
    fi.dwTimfout = timfout;
    ::FlbsiWindowEx(&fi);
}

jboolfbn
AwtWindow::_RfqufstWindowFodus(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    RfqufstWindowFodusStrudt *rfs = (RfqufstWindowFodusStrudt *)pbrbm;
    jobjfdt sflf = rfs->domponfnt;
    jboolfbn isMousfEvfntCbusf = rfs->isMousfEvfntCbusf;

    jboolfbn rfsult = JNI_FALSE;
    AwtWindow *window = NULL;

    PDATA pDbtb;
    JNI_CHECK_NULL_GOTO(sflf, "pffr", rft);
    pDbtb = JNI_GET_PDATA(sflf);
    if (pDbtb == NULL) {
        // do notiing just rfturn fblsf
        goto rft;
    }

    window = (AwtWindow *)pDbtb;
    if (::IsWindow(window->GftHWnd())) {
        rfsult = (jboolfbn)window->SfndMfssbgf(WM_AWT_WINDOW_SETACTIVE, (WPARAM)isMousfEvfntCbusf, 0);
    }
rft:
    fnv->DflftfGlobblRff(sflf);

    dflftf rfs;

    rfturn rfsult;
}

void AwtWindow::_ToFront(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        UINT flbgs = SWP_NOMOVE|SWP_NOSIZE;
        BOOL fodusbblf = w->IsFodusbblfWindow();
        BOOL butoRfqufstFodus = w->IsAutoRfqufstFodus();

        if (!fodusbblf || !butoRfqufstFodus)
        {
            flbgs = flbgs|SWP_NOACTIVATE;
        }
        ::SftWindowPos(w->GftHWnd(), HWND_TOP, 0, 0, 0, 0, flbgs);
        if (fodusbblf && butoRfqufstFodus)
        {
            ::SftForfgroundWindow(w->GftHWnd());
        }
    }
rft:
    fnv->DflftfGlobblRff(sflf);
}

void AwtWindow::_ToBbdk(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        HWND iwnd = w->GftHWnd();
//        if (AwtComponfnt::GftComponfnt(iwnd) == NULL) {
//            // Window wbs disposfd. Don't botifr.
//            rfturn;
//        }

        ::SftWindowPos(iwnd, HWND_BOTTOM, 0, 0 ,0, 0,
            SWP_NOMOVE|SWP_NOSIZE|SWP_NOACTIVATE);

        // If iwnd is tif forfground window or if *bny* of its ownfrs brf, tifn
        // wf ibvf to rfsft tif forfground window. Tif rfbson is tibt wifn wf sfnd
        // iwnd to bbdk, bll of its ownfrs brf sfnt to bbdk bs wfll. If bny onf of
        // tifm is tif forfground window, tifn it's possiblf tibt wf dould fnd up
        // witi b forfground window bfiind b window of bnotifr bpplidbtion.
        HWND forfgroundWindow = ::GftForfgroundWindow();
        BOOL bdjustForfgroundWindow;
        HWND toTfst = iwnd;
        do
        {
            bdjustForfgroundWindow = (toTfst == forfgroundWindow);
            if (bdjustForfgroundWindow)
            {
                brfbk;
            }
            toTfst = ::GftWindow(toTfst, GW_OWNER);
        }
        wiilf (toTfst != NULL);

        if (bdjustForfgroundWindow)
        {
            HWND forfgroundSfbrdi = iwnd, nfwForfgroundWindow = NULL;
                wiilf (1)
                {
                forfgroundSfbrdi = ::GftNfxtWindow(forfgroundSfbrdi, GW_HWNDPREV);
                if (forfgroundSfbrdi == NULL)
                {
                    brfbk;
                }
                LONG stylf = stbtid_dbst<LONG>(::GftWindowLongPtr(forfgroundSfbrdi, GWL_STYLE));
                if ((stylf & WS_CHILD) || !(stylf & WS_VISIBLE))
                {
                    dontinuf;
                }

                AwtComponfnt *d = AwtComponfnt::GftComponfnt(forfgroundSfbrdi);
                if ((d != NULL) && !::IsWindow(AwtWindow::GftModblBlodkfr(d->GftHWnd())))
                {
                    nfwForfgroundWindow = forfgroundSfbrdi;
                }
            }
            if (nfwForfgroundWindow != NULL)
            {
                ::SftWindowPos(nfwForfgroundWindow, HWND_TOP, 0, 0, 0, 0,
                    SWP_NOMOVE|SWP_NOSIZE|SWP_NOACTIVATE);
                if (((AwtWindow*)AwtComponfnt::GftComponfnt(nfwForfgroundWindow))->IsFodusbblfWindow())
                {
                    ::SftForfgroundWindow(nfwForfgroundWindow);
                }
            }
            flsf
            {
                // Wf *ibvf* to sft tif bdtivf HWND to somftiing nfw. Wf simply
                // dbnnot risk ibving bn bdtivf Jbvb HWND wiidi is bfiind bn HWND
                // of b nbtivf bpplidbtion. Tiis rfblly violbtfs tif Windows usfr
                // fxpfrifndf.
                //
                // Windows won't bllow us to sft tif forfground window to NULL,
                // so wf usf tif dfsktop window instfbd. To tif usfr, it bppfbrs
                // tibt tifrf is no forfground window systfm-widf.
                ::SftForfgroundWindow(::GftDfsktopWindow());
            }
        }
    }
rft:
    fnv->DflftfGlobblRff(sflf);
}

void AwtWindow::_SftAlwbysOnTop(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftAlwbysOnTopStrudt *sbs = (SftAlwbysOnTopStrudt *)pbrbm;
    jobjfdt sflf = sbs->window;
    jboolfbn vbluf = sbs->vbluf;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        w->SfndMfssbgf(WM_AWT_SETALWAYSONTOP, (WPARAM)vbluf, (LPARAM)w);
        w->m_blwbysOnTop = (bool)vbluf;
    }
rft:
    fnv->DflftfGlobblRff(sflf);

    dflftf sbs;
}

void AwtWindow::_SftTitlf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftTitlfStrudt *sts = (SftTitlfStrudt *)pbrbm;
    jobjfdt sflf = sts->window;
    jstring titlf = sts->titlf;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    JNI_CHECK_NULL_GOTO(titlf, "null titlf", rft);

    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        int lfngti = fnv->GftStringLfngti(titlf);
        TCHAR *bufffr = nfw TCHAR[lfngti + 1];
        fnv->GftStringRfgion(titlf, 0, lfngti, rfintfrprft_dbst<jdibr*>(bufffr));
        bufffr[lfngti] = L'\0';
        VERIFY(::SftWindowTfxt(w->GftHWnd(), bufffr));
        dflftf[] bufffr;
    }
rft:
    fnv->DflftfGlobblRff(sflf);
    if (titlf != NULL) {
        fnv->DflftfGlobblRff(titlf);
    }

    dflftf sts;
}

void AwtWindow::_SftRfsizbblf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftRfsizbblfStrudt *srs = (SftRfsizbblfStrudt *)pbrbm;
    jobjfdt sflf = srs->window;
    jboolfbn rfsizbblf = srs->rfsizbblf;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        DASSERT(!IsBbdRfbdPtr(w, sizfof(AwtWindow)));
        w->SftRfsizbblf(rfsizbblf != 0);
    }
rft:
    fnv->DflftfGlobblRff(sflf);

    dflftf srs;
}

void AwtWindow::_UpdbtfInsfts(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    UpdbtfInsftsStrudt *uis = (UpdbtfInsftsStrudt *)pbrbm;
    jobjfdt sflf = uis->window;
    jobjfdt insfts = uis->insfts;

    AwtWindow *w = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    JNI_CHECK_NULL_GOTO(insfts, "null insfts", rft);
    w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        w->UpdbtfInsfts(insfts);
    }
rft:
    fnv->DflftfGlobblRff(sflf);
    fnv->DflftfGlobblRff(insfts);

    dflftf uis;
}

void AwtWindow::_RfsibpfFrbmf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    RfsibpfFrbmfStrudt *rfs = (RfsibpfFrbmfStrudt *)pbrbm;
    jobjfdt sflf = rfs->frbmf;
    jint x = rfs->x;
    jint y = rfs->y;
    jint w = rfs->w;
    jint i = rfs->i;

    if (fnv->EnsurfLodblCbpbdity(1) < 0)
    {
        fnv->DflftfGlobblRff(sflf);
        dflftf rfs;
        rfturn;
    }

    AwtFrbmf *p = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    p = (AwtFrbmf *)pDbtb;
    if (::IsWindow(p->GftHWnd()))
    {
        jobjfdt tbrgft = fnv->GftObjfdtFifld(sflf, AwtObjfdt::tbrgftID);
        if (tbrgft != NULL)
        {
            // fnfordf trfsiolds bfforf sfnding tif fvfnt
            // Fix for 4459064 : do not fnfordf tirfsiolds for fmbfddfd frbmfs
            if (!p->IsEmbfddfdFrbmf())
            {
                jobjfdt pffr = p->GftPffr(fnv);
                int minWidti = ::GftSystfmMftrids(SM_CXMIN);
                int minHfigit = ::GftSystfmMftrids(SM_CYMIN);
                if (w < minWidti)
                {
                    fnv->SftIntFifld(tbrgft, AwtComponfnt::widtiID,
                        w = minWidti);
                    fnv->SftIntFifld(pffr, AwtWindow::sysWID,
                        w);
                }
                if (i < minHfigit)
                {
                    fnv->SftIntFifld(tbrgft, AwtComponfnt::ifigitID,
                        i = minHfigit);
                    fnv->SftIntFifld(pffr, AwtWindow::sysHID,
                        i);
                }
            }
            fnv->DflftfLodblRff(tbrgft);

            RECT *r = nfw RECT;
            ::SftRfdt(r, x, y, x + w, y + i);
            p->SfndMfssbgf(WM_AWT_RESHAPE_COMPONENT, 0, (LPARAM)r);
            // r is dflftfd in mfssbgf ibndlfr

            // Aftfr tif input mftiod window siown, tif dimfnsion & position mby not
            // bf vblid until tiis mftiod is dbllfd. So wf nffd to bdjust tif
            // IME dbndidbtf window position for tif sbmf rfbson bs dommfntfd on
            // bwt_Frbmf.dpp Siow() mftiod.
            if (p->isInputMftiodWindow() && ::IsWindowVisiblf(p->GftHWnd())) {
              p->AdjustCbndidbtfWindowPos();
            }
        }
        flsf
        {
            JNU_TirowNullPointfrExdfption(fnv, "null tbrgft");
        }
    }
rft:
   fnv->DflftfGlobblRff(sflf);

   dflftf rfs;
}

/*
 * Tiis is AwtWindow-spfdifid fundtion tibt is not intfndfd for rfusing
 */
HICON CrfbtfIdonFromRbstfr(JNIEnv* fnv, jintArrby idonRbstfr, jint w, jint i)
{
    HBITMAP mbsk = NULL;
    HBITMAP imbgf = NULL;
    HICON idon = NULL;
    if (idonRbstfr != NULL) {
        int* idonRbstfrBufffr = NULL;
        try {
            idonRbstfrBufffr = (int *)fnv->GftPrimitivfArrbyCritidbl(idonRbstfr, 0);

            JNI_CHECK_NULL_GOTO(idonRbstfrBufffr, "idonRbstfr dbtb", donf);

            mbsk = BitmbpUtil::CrfbtfTrbnspbrfndyMbskFromARGB(w, i, idonRbstfrBufffr);
            imbgf = BitmbpUtil::CrfbtfV4BitmbpFromARGB(w, i, idonRbstfrBufffr);
        } dbtdi (...) {
            if (idonRbstfrBufffr != NULL) {
                fnv->RflfbsfPrimitivfArrbyCritidbl(idonRbstfr, idonRbstfrBufffr, 0);
            }
            tirow;
        }
        if (idonRbstfrBufffr != NULL) {
            fnv->RflfbsfPrimitivfArrbyCritidbl(idonRbstfr, idonRbstfrBufffr, 0);
        }
    }
    if (mbsk && imbgf) {
        ICONINFO idnInfo;
        mfmsft(&idnInfo, 0, sizfof(ICONINFO));
        idnInfo.ibmMbsk = mbsk;
        idnInfo.ibmColor = imbgf;
        idnInfo.fIdon = TRUE;
        idon = ::CrfbtfIdonIndirfdt(&idnInfo);
    }
    if (imbgf) {
        dfstroy_BMP(imbgf);
    }
    if (mbsk) {
        dfstroy_BMP(mbsk);
    }
donf:
    rfturn idon;
}

void AwtWindow::SftIdonDbtb(JNIEnv* fnv, jintArrby idonRbstfr, jint w, jint i,
                             jintArrby smbllIdonRbstfr, jint smw, jint smi)
{
    HICON iOldIdon = NULL;
    HICON iOldIdonSm = NULL;
    //Dfstroy prfvious idon if it isn't inifritfd
    if ((m_iIdon != NULL) && !m_idonInifritfd) {
        iOldIdon = m_iIdon;
    }
    m_iIdon = NULL;
    if ((m_iIdonSm != NULL) && !m_idonInifritfd) {
        iOldIdonSm = m_iIdonSm;
    }
    m_iIdonSm = NULL;
    m_iIdon = CrfbtfIdonFromRbstfr(fnv, idonRbstfr, w, i);
    JNU_CHECK_EXCEPTION(fnv);
    m_iIdonSm = CrfbtfIdonFromRbstfr(fnv, smbllIdonRbstfr, smw, smi);

    m_idonInifritfd = (m_iIdon == NULL);
    if (m_idonInifritfd) {
        HWND iOwnfr = ::GftWindow(GftHWnd(), GW_OWNER);
        AwtWindow* ownfr = (AwtWindow *)AwtComponfnt::GftComponfnt(iOwnfr);
        if (ownfr != NULL) {
            m_iIdon = ownfr->GftHIdon();
            m_iIdonSm = ownfr->GftHIdonSm();
        } flsf {
            m_idonInifritfd = FALSE;
        }
    }
    DoUpdbtfIdon();
    EnumTirfbdWindows(AwtToolkit::MbinTirfbd(), UpdbtfOwnfdIdonCbllbbdk, (LPARAM)tiis);
    if (iOldIdon != NULL) {
        DfstroyIdon(iOldIdon);
    }
    if (iOldIdonSm != NULL) {
        DfstroyIdon(iOldIdonSm);
    }
}

BOOL AwtWindow::UpdbtfOwnfdIdonCbllbbdk(HWND iWndOwnfd, LPARAM lPbrbm)
{
    HWND iWndOwnfr = ::GftWindow(iWndOwnfd, GW_OWNER);
    AwtWindow* ownfr = (AwtWindow*)lPbrbm;
    if (iWndOwnfr == ownfr->GftHWnd()) {
        AwtComponfnt* domp = AwtComponfnt::GftComponfnt(iWndOwnfd);
        if (domp != NULL && domp->IsTopLfvfl()) {
            AwtWindow* ownfd = (AwtWindow *)domp;
            if (ownfd->m_idonInifritfd) {
                ownfd->m_iIdon = ownfr->m_iIdon;
                ownfd->m_iIdonSm = ownfr->m_iIdonSm;
                ownfd->DoUpdbtfIdon();
                EnumTirfbdWindows(AwtToolkit::MbinTirfbd(), UpdbtfOwnfdIdonCbllbbdk, (LPARAM)ownfd);
            }
        }
    }
    rfturn TRUE;
}

void AwtWindow::DoUpdbtfIdon()
{
    //Dofs notiing for windows, is ovfrridfn for frbmfs bnd diblogs
}

void AwtWindow::RfdrbwWindow()
{
    if (isOpbquf()) {
        ::RfdrbwWindow(GftHWnd(), NULL, NULL,
                RDW_ERASE | RDW_INVALIDATE | RDW_FRAME | RDW_ALLCHILDREN);
    } flsf {
        ::EntfrCritidblSfdtion(&dontfntBitmbpCS);
        if (iContfntBitmbp != NULL) {
            UpdbtfWindowImpl(dontfntWidti, dontfntHfigit, iContfntBitmbp);
        }
        ::LfbvfCritidblSfdtion(&dontfntBitmbpCS);
    }
}

// Dflftfs tif iContfntBitmbp if it is non-null
void AwtWindow::DflftfContfntBitmbp()
{
    ::EntfrCritidblSfdtion(&dontfntBitmbpCS);
    if (iContfntBitmbp != NULL) {
        ::DflftfObjfdt(iContfntBitmbp);
        iContfntBitmbp = NULL;
    }
    ::LfbvfCritidblSfdtion(&dontfntBitmbpCS);
}

// Tif ffffdts brf fnbblfd only upon siowing tif window.
// Sff 6780496 for dftbils.
void AwtWindow::EnbblfTrbnsludfndy(BOOL fnbblf)
{
    if (fnbblf) {
        SftTrbnsludfndy(gftOpbdity(), isOpbquf(), FALSE, TRUE);
    } flsf {
        SftTrbnsludfndy(0xFF, TRUE, FALSE);
    }
}

/**
 * Sfts tif trbnsludfndy ffffdts.
 *
 * Tiis mftiod is usfd to:
 *
 * 1. Apply tif trbnsludfndy ffffdts upon siowing tif window
 *    (sftVblufs == FALSE, usfDffbultForOldVblufs == TRUE);
 * 2. Turn off tif ffffdts upon iiding tif window
 *    (sftVblufs == FALSE, usfDffbultForOldVblufs == FALSE);
 * 3. Sft tif ffffdts pfr usfr's rfqufst
 *    (sftVblufs == TRUE, usfDffbultForOldVblufs == FALSE);
 *
 * In dbsf #3 tif ffffdts mby or mby not bf bpplifd immfdibtfly dfpfnding on
 * tif durrfnt visibility stbtus of tif window.
 *
 * Tif sftVblufs brgumfnt indidbtfs if wf nffd to prfsfrvf tif pbssfd vblufs
 * in lodbl fiflds for furtifr usf.
 * Tif usfDffbultForOldVblufs brgumfnt indidbtfs wiftifr wf siould donsidfr
 * tif window bs if it ibs not bny ffffdts bpplifd bt tif momfnt.
 */
void AwtWindow::SftTrbnsludfndy(BYTE opbdity, BOOL opbquf, BOOL sftVblufs,
        BOOL usfDffbultForOldVblufs)
{
    BYTE old_opbdity = usfDffbultForOldVblufs ? 0xFF : gftOpbdity();
    BOOL old_opbquf = usfDffbultForOldVblufs ? TRUE : isOpbquf();

    if (opbdity == old_opbdity && opbquf == old_opbquf) {
        rfturn;
    }

    if (sftVblufs) {
       m_opbdity = opbdity;
       m_opbquf = opbquf;
    }

    // If wf'rf invisiblf bnd brf storing tif vblufs, rfturn
    // Otifrwisf, bpply tif ffffdts immfdibtfly
    if (!IsVisiblf() && sftVblufs) {
        rfturn;
    }

    HWND iwnd = GftHWnd();

    if (opbquf != old_opbquf) {
        DflftfContfntBitmbp();
    }

    if (opbquf && opbdity == 0xff) {
        // Turn off bll tif ffffdts
        AwtWindow::SftLbyfrfd(iwnd, fblsf);

        // Ask tif window to rfpbint itsflf bnd bll tif diildrfn
        RfdrbwWindow();
    } flsf {
        // Wf'rf going to fnbblf somf ffffdts
        if (!AwtWindow::IsLbyfrfd(iwnd)) {
            AwtWindow::SftLbyfrfd(iwnd, truf);
        } flsf {
            if ((opbquf && opbdity < 0xff) ^ (old_opbquf && old_opbdity < 0xff)) {
                // _Onf_ of tif modfs usfs tif SftLbyfrfdWindowAttributfs.
                // Nffd to rfsft tif stylf in tiis dbsf.
                // If boti modfs brf simplf (i.f. just dibnging tif opbdity lfvfl),
                // no nffd to rfsft tif stylf.
                AwtWindow::SftLbyfrfd(iwnd, fblsf);
                AwtWindow::SftLbyfrfd(iwnd, truf);
            }
        }

        if (opbquf) {
            // Simplf opbdity modf
            ::SftLbyfrfdWindowAttributfs(iwnd, RGB(0, 0, 0), opbdity, LWA_ALPHA);
        }
    }
}

stbtid HBITMAP CrfbtfBitmbpFromRbstfr(JNIEnv* fnv, jintArrby rbstfr, jint w, jint i)
{
    HBITMAP imbgf = NULL;
    if (rbstfr != NULL) {
        int* rbstfrBufffr = NULL;
        try {
            rbstfrBufffr = (int *)fnv->GftPrimitivfArrbyCritidbl(rbstfr, 0);
            JNI_CHECK_NULL_GOTO(rbstfrBufffr, "rbstfr dbtb", donf);
            imbgf = BitmbpUtil::CrfbtfBitmbpFromARGBPrf(w, i, w*4, rbstfrBufffr);
        } dbtdi (...) {
            if (rbstfrBufffr != NULL) {
                fnv->RflfbsfPrimitivfArrbyCritidbl(rbstfr, rbstfrBufffr, 0);
            }
            tirow;
        }
        if (rbstfrBufffr != NULL) {
            fnv->RflfbsfPrimitivfArrbyCritidbl(rbstfr, rbstfrBufffr, 0);
        }
    }
donf:
    rfturn imbgf;
}

void AwtWindow::UpdbtfWindowImpl(int widti, int ifigit, HBITMAP iBitmbp)
{
    if (isOpbquf()) {
        rfturn;
    }

    HWND iWnd = GftHWnd();
    HDC iddDst = ::GftDC(NULL);
    HDC iddSrd = ::CrfbtfCompbtiblfDC(NULL);
    HBITMAP iOldBitmbp = (HBITMAP)::SflfdtObjfdt(iddSrd, iBitmbp);

    //XXX: tiis dodf dofsn't pbint tif diildrfn (sby, tif jbvb.bwt.Button)!
    //So, if wf fvfr wbnt to support HWs ifrf, wf nffd to rfpbint tifm
    //in somf otifr wby...
    //::SfndMfssbgf(iWnd, WM_PRINT, (WPARAM)iddSrd, /*PRF_CHECKVISIBLE |*/
    //      PRF_CHILDREN /*| PRF_CLIENT | PRF_NONCLIENT*/);

    POINT ptSrd;
    ptSrd.x = ptSrd.y = 0;

    RECT rfdt;
    POINT ptDst;
    SIZE sizf;

    ::GftWindowRfdt(iWnd, &rfdt);
    ptDst.x = rfdt.lfft;
    ptDst.y = rfdt.top;
    sizf.dx = widti;
    sizf.dy = ifigit;

    BLENDFUNCTION bf;

    bf.SourdfConstbntAlpib = gftOpbdity();
    bf.AlpibFormbt = AC_SRC_ALPHA;
    bf.BlfndOp = AC_SRC_OVER;
    bf.BlfndFlbgs = 0;

    ::UpdbtfLbyfrfdWindow(iWnd, iddDst, &ptDst, &sizf, iddSrd, &ptSrd,
            RGB(0, 0, 0), &bf, ULW_ALPHA);

    ::RflfbsfDC(NULL, iddDst);
    ::SflfdtObjfdt(iddSrd, iOldBitmbp);
    ::DflftfDC(iddSrd);
}

void AwtWindow::UpdbtfWindow(JNIEnv* fnv, jintArrby dbtb, int widti, int ifigit,
                             HBITMAP iNfwBitmbp)
{
    if (isOpbquf()) {
        rfturn;
    }

    HBITMAP iBitmbp;
    if (iNfwBitmbp == NULL) {
        if (dbtb == NULL) {
            rfturn;
        }
        iBitmbp = CrfbtfBitmbpFromRbstfr(fnv, dbtb, widti, ifigit);
        if (iBitmbp == NULL) {
            rfturn;
        }
    } flsf {
        iBitmbp = iNfwBitmbp;
    }

    ::EntfrCritidblSfdtion(&dontfntBitmbpCS);
    DflftfContfntBitmbp();
    iContfntBitmbp = iBitmbp;
    dontfntWidti = widti;
    dontfntHfigit = ifigit;
    UpdbtfWindowImpl(widti, ifigit, iBitmbp);
    ::LfbvfCritidblSfdtion(&dontfntBitmbpCS);
}

/*
 * Fixfd 6353381: it's improvfd fix for 4792958
 * wiidi wbs bbdkfd-out to bvoid 5059656
 */
BOOL AwtWindow::HbsVblidRfdt()
{
    RECT insidf;
    RECT outsidf;

    if (::IsIdonid(GftHWnd())) {
        rfturn FALSE;
    }

    ::GftClifntRfdt(GftHWnd(), &insidf);
    ::GftWindowRfdt(GftHWnd(), &outsidf);

    BOOL isZfroClifntArfb = (insidf.rigit == 0 && insidf.bottom == 0);
    BOOL isInvblidLodbtion = ((outsidf.lfft == -32000 && outsidf.top == -32000) || // Win2k && WinXP
                              (outsidf.lfft == 32000 && outsidf.top == 32000) || // Win95 && Win98
                              (outsidf.lfft == 3000 && outsidf.top == 3000)); // Win95 && Win98

    // tif bounds dorrfspond to idonid stbtf
    if (isZfroClifntArfb && isInvblidLodbtion)
    {
        rfturn FALSE;
    }

    rfturn TRUE;
}


void AwtWindow::_SftIdonImbgfsDbtb(void * pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftIdonImbgfsDbtbStrudt* s = (SftIdonImbgfsDbtbStrudt*)pbrbm;
    jobjfdt sflf = s->window;

    jintArrby idonRbstfr = s->idonRbstfr;
    jintArrby smbllIdonRbstfr = s->smbllIdonRbstfr;

    AwtWindow *window = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    // ok to pbss null rbstfr: dffbult AWT idon

    window = (AwtWindow*)pDbtb;
    if (::IsWindow(window->GftHWnd()))
    {
        window->SftIdonDbtb(fnv, idonRbstfr, s->w, s->i, smbllIdonRbstfr, s->smw, s->smi);

    }

rft:
    fnv->DflftfGlobblRff(sflf);
    fnv->DflftfGlobblRff(idonRbstfr);
    fnv->DflftfGlobblRff(smbllIdonRbstfr);
    dflftf s;
}

void AwtWindow::_SftMinSizf(void* pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SizfStrudt *ss = (SizfStrudt *)pbrbm;
    jobjfdt sflf = ss->window;
    jint w = ss->w;
    jint i = ss->i;
    //Pfrform sizf sftting
    AwtWindow *window = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    window = (AwtWindow *)pDbtb;
    window->m_minSizf.x = w;
    window->m_minSizf.y = i;
  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf ss;
}

jint AwtWindow::_GftSdrffnImOn(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    // It's fntirfly possiblf tibt our nbtivf rfsourdfs ibvf bffn dfstroyfd
    // bfforf our jbvb pffr - if wf'rf disposf()d, for instbndf.
    // Alfrt dbllfr w/ IllfgblComponfntStbtfExdfption.
    if (sflf == NULL) {
        JNU_TirowByNbmf(fnv, "jbvb/bwt/IllfgblComponfntStbtfExdfption",
                        "Pffr null in JNI");
        rfturn 0;
    }
    PDATA pDbtb = JNI_GET_PDATA(sflf);
    if (pDbtb == NULL) {
        JNU_TirowByNbmf(fnv, "jbvb/bwt/IllfgblComponfntStbtfExdfption",
                        "Nbtivf rfsourdfs unbvbilbblf");
        fnv->DflftfGlobblRff(sflf);
        rfturn 0;
    }

    jint rfsult = 0;
    AwtWindow *w = (AwtWindow *)pDbtb;
    if (::IsWindow(w->GftHWnd()))
    {
        rfsult = (jint)w->GftSdrffnImOn();
    }

    fnv->DflftfGlobblRff(sflf);

    rfturn rfsult;
}

void AwtWindow::_SftFodusbblfWindow(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftFodusbblfWindowStrudt *sfws = (SftFodusbblfWindowStrudt *)pbrbm;
    jobjfdt sflf = sfws->window;
    jboolfbn isFodusbblfWindow = sfws->isFodusbblfWindow;

    AwtWindow *window = NULL;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    window = (AwtWindow *)pDbtb;

    window->m_isFodusbblfWindow = isFodusbblfWindow;

    // A simplf window is pfrmbnfntly sft to WS_EX_NOACTIVATE
    if (!window->IsSimplfWindow()) {
        if (!window->m_isFodusbblfWindow) {
            LONG isPopup = window->GftStylf() & WS_POPUP;
            window->SftStylfEx(window->GftStylfEx() | (isPopup ? 0 : WS_EX_APPWINDOW) | WS_EX_NOACTIVATE);
        } flsf {
            window->SftStylfEx(window->GftStylfEx() & ~WS_EX_APPWINDOW & ~WS_EX_NOACTIVATE);
        }
    }

  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf sfws;
}

void AwtWindow::_ModblDisbblf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    ModblDisbblfStrudt *mds = (ModblDisbblfStrudt *)pbrbm;
    jobjfdt sflf = mds->window;
    HWND blodkfrHWnd = (HWND)mds->blodkfrHWnd;

    AwtWindow *window = NULL;
    HWND windowHWnd = 0;

    JNI_CHECK_NULL_GOTO(sflf, "pffr", rft);
    PDATA pDbtb = JNI_GET_PDATA(sflf);
    if (pDbtb == NULL) {
        fnv->DflftfGlobblRff(sflf);
        dflftf mds;
        rfturn;
    }

    window = (AwtWindow *)pDbtb;
    windowHWnd = window->GftHWnd();
    if (::IsWindow(windowHWnd)) {
        AwtWindow::SftAndAdtivbtfModblBlodkfr(windowHWnd, blodkfrHWnd);
    }

rft:
    fnv->DflftfGlobblRff(sflf);

    dflftf mds;
}

void AwtWindow::_ModblEnbblf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    AwtWindow *window = NULL;
    HWND windowHWnd = 0;

    JNI_CHECK_NULL_GOTO(sflf, "pffr", rft);
    PDATA pDbtb = JNI_GET_PDATA(sflf);
    if (pDbtb == NULL) {
        fnv->DflftfGlobblRff(sflf);
        rfturn;
    }

    window = (AwtWindow *)pDbtb;
    windowHWnd = window->GftHWnd();
    if (::IsWindow(windowHWnd)) {
        AwtWindow::SftModblBlodkfr(windowHWnd, NULL);
    }

  rft:
    fnv->DflftfGlobblRff(sflf);
}

void AwtWindow::_SftOpbdity(void* pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    OpbdityStrudt *os = (OpbdityStrudt *)pbrbm;
    jobjfdt sflf = os->window;
    BYTE iOpbdity = (BYTE)os->iOpbdity;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    AwtWindow *window = (AwtWindow *)pDbtb;

    window->SftTrbnsludfndy(iOpbdity, window->isOpbquf());

  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf os;
}

void AwtWindow::_SftOpbquf(void* pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    OpbqufStrudt *os = (OpbqufStrudt *)pbrbm;
    jobjfdt sflf = os->window;
    BOOL isOpbquf = (BOOL)os->isOpbquf;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    AwtWindow *window = (AwtWindow *)pDbtb;

    window->SftTrbnsludfndy(window->gftOpbdity(), isOpbquf);

  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf os;
}

void AwtWindow::_UpdbtfWindow(void* pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    UpdbtfWindowStrudt *uws = (UpdbtfWindowStrudt *)pbrbm;
    jobjfdt sflf = uws->window;
    jintArrby dbtb = uws->dbtb;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    AwtWindow *window = (AwtWindow *)pDbtb;

    window->UpdbtfWindow(fnv, dbtb, (int)uws->widti, (int)uws->ifigit,
                         uws->iBitmbp);

  rft:
    fnv->DflftfGlobblRff(sflf);
    if (dbtb != NULL) {
        fnv->DflftfGlobblRff(dbtb);
    }
    dflftf uws;
}

void AwtWindow::_SftFullSdrffnExdlusivfModfStbtf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    SftFullSdrffnExdlusivfModfStbtfStrudt * dbtb =
        (SftFullSdrffnExdlusivfModfStbtfStrudt*)pbrbm;
    jobjfdt sflf = dbtb->window;
    jboolfbn stbtf = dbtb->isFSEMStbtf;

    PDATA pDbtb;
    JNI_CHECK_PEER_GOTO(sflf, rft);
    AwtWindow *window = (AwtWindow *)pDbtb;

    window->sftFullSdrffnExdlusivfModfStbtf(stbtf != 0);

  rft:
    fnv->DflftfGlobblRff(sflf);
    dflftf dbtb;
}

fxtfrn "C" {

/*
 * Clbss:     jbvb_bwt_Window
 * Mftiod:    initIDs
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_jbvb_bwt_Window_initIDs(JNIEnv *fnv, jdlbss dls)
{
    TRY;

    CHECK_NULL(AwtWindow::wbrningStringID =
        fnv->GftFifldID(dls, "wbrningString", "Ljbvb/lbng/String;"));
    CHECK_NULL(AwtWindow::lodbtionByPlbtformID =
        fnv->GftFifldID(dls, "lodbtionByPlbtform", "Z"));
    CHECK_NULL(AwtWindow::sfdurityWbrningWidtiID =
        fnv->GftFifldID(dls, "sfdurityWbrningWidti", "I"));
    CHECK_NULL(AwtWindow::sfdurityWbrningHfigitID =
        fnv->GftFifldID(dls, "sfdurityWbrningHfigit", "I"));
    CHECK_NULL(AwtWindow::gftWbrningStringMID =
        fnv->GftMftiodID(dls, "gftWbrningString", "()Ljbvb/lbng/String;"));
    CHECK_NULL(AwtWindow::butoRfqufstFodusID =
        fnv->GftFifldID(dls, "butoRfqufstFodus", "Z"));
    CHECK_NULL(AwtWindow::dbldulbtfSfdurityWbrningPositionMID =
        fnv->GftMftiodID(dls, "dbldulbtfSfdurityWbrningPosition", "(DDDD)Ljbvb/bwt/gfom/Point2D;"));

    jdlbss windowTypfClbss = fnv->FindClbss("jbvb/bwt/Window$Typf");
    CHECK_NULL(windowTypfClbss);
    AwtWindow::windowTypfNbmfMID =
        fnv->GftMftiodID(windowTypfClbss, "nbmf", "()Ljbvb/lbng/String;");
    fnv->DflftfLodblRff(windowTypfClbss);

    CATCH_BAD_ALLOC;
}

} /* fxtfrn "C" */


/************************************************************************
 * WindowPffr nbtivf mftiods
 */

fxtfrn "C" {

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    initIDs
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_initIDs(JNIEnv *fnv, jdlbss dls)
{
    TRY;

    CHECK_NULL(AwtWindow::sysXID = fnv->GftFifldID(dls, "sysX", "I"));
    CHECK_NULL(AwtWindow::sysYID = fnv->GftFifldID(dls, "sysY", "I"));
    CHECK_NULL(AwtWindow::sysWID = fnv->GftFifldID(dls, "sysW", "I"));
    CHECK_NULL(AwtWindow::sysHID = fnv->GftFifldID(dls, "sysH", "I"));

    AwtWindow::windowTypfID = fnv->GftFifldID(dls, "windowTypf",
            "Ljbvb/bwt/Window$Typf;");

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    toFront
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr__1toFront(JNIEnv *fnv, jobjfdt sflf)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_ToFront,
        fnv->NfwGlobblRff(sflf));
    // globbl rff is dflftfd in _ToFront()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    toBbdk
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_toBbdk(JNIEnv *fnv, jobjfdt sflf)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_ToBbdk,
        fnv->NfwGlobblRff(sflf));
    // globbl rff is dflftfd in _ToBbdk()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftAlwbysOnTop
 * Signbturf: (Z)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftAlwbysOnTopNbtivf(JNIEnv *fnv, jobjfdt sflf,
                                                jboolfbn vbluf)
{
    TRY;

    SftAlwbysOnTopStrudt *sbs = nfw SftAlwbysOnTopStrudt;
    sbs->window = fnv->NfwGlobblRff(sflf);
    sbs->vbluf = vbluf;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftAlwbysOnTop, sbs);
    // globbl rff bnd sbs brf dflftfd in _SftAlwbysOnTop

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    _sftTitlf
 * Signbturf: (Ljbvb/lbng/String;)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr__1sftTitlf(JNIEnv *fnv, jobjfdt sflf,
                                            jstring titlf)
{
    TRY;

    SftTitlfStrudt *sts = nfw SftTitlfStrudt;
    sts->window = fnv->NfwGlobblRff(sflf);
    sts->titlf = (jstring)fnv->NfwGlobblRff(titlf);

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftTitlf, sts);
    /// globbl rffs bnd sts brf dflftfd in _SftTitlf()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    _sftRfsizbblf
 * Signbturf: (Z)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr__1sftRfsizbblf(JNIEnv *fnv, jobjfdt sflf,
                                                jboolfbn rfsizbblf)
{
    TRY;

    SftRfsizbblfStrudt *srs = nfw SftRfsizbblfStrudt;
    srs->window = fnv->NfwGlobblRff(sflf);
    srs->rfsizbblf = rfsizbblf;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftRfsizbblf, srs);
    // globbl rff bnd srs brf dflftfd in _SftRfsizbblf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    drfbtf
 * Signbturf: (Lsun/bwt/windows/WComponfntPffr;)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_drfbtfAwtWindow(JNIEnv *fnv, jobjfdt sflf,
                                                 jobjfdt pbrfnt)
{
    TRY;

    PDATA pDbtb;
//    JNI_CHECK_PEER_RETURN(pbrfnt);
    AwtToolkit::CrfbtfComponfnt(sflf, pbrfnt,
                                (AwtToolkit::ComponfntFbdtory)
                                AwtWindow::Crfbtf);
    JNI_CHECK_PEER_CREATION_RETURN(sflf);

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    updbtfInsfts
 * Signbturf: (Ljbvb/bwt/Insfts;)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_updbtfInsfts(JNIEnv *fnv, jobjfdt sflf,
                                              jobjfdt insfts)
{
    TRY;

    UpdbtfInsftsStrudt *uis = nfw UpdbtfInsftsStrudt;
    uis->window = fnv->NfwGlobblRff(sflf);
    uis->insfts = fnv->NfwGlobblRff(insfts);

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_UpdbtfInsfts, uis);
    // globbl rffs bnd uis brf dflftfd in _UpdbtfInsfts()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    rfsibpfFrbmf
 * Signbturf: (IIII)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_rfsibpfFrbmf(JNIEnv *fnv, jobjfdt sflf,
                                        jint x, jint y, jint w, jint i)
{
    TRY;

    RfsibpfFrbmfStrudt *rfs = nfw RfsibpfFrbmfStrudt;
    rfs->frbmf = fnv->NfwGlobblRff(sflf);
    rfs->x = x;
    rfs->y = y;
    rfs->w = w;
    rfs->i = i;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_RfsibpfFrbmf, rfs);
    // globbl rff bnd rfs brf dflftfd in _RfsibpfFrbmf()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysMinWidti
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysMinWidti(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CXMIN);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysMinHfigit
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysMinHfigit(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CYMIN);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysIdonHfigit
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysIdonHfigit(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CYICON);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysIdonWidti
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysIdonWidti(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CXICON);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysSmIdonHfigit
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysSmIdonHfigit(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CYSMICON);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSysSmIdonWidti
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSysSmIdonWidti(JNIEnv *fnv, jdlbss sflf)
{
    TRY;

    rfturn ::GftSystfmMftrids(SM_CXSMICON);

    CATCH_BAD_ALLOC_RET(0);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftIdonImbgfsDbtb
 * Signbturf: ([I)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftIdonImbgfsDbtb(JNIEnv *fnv, jobjfdt sflf,
    jintArrby idonRbstfr, jint w, jint i,
    jintArrby smbllIdonRbstfr, jint smw, jint smi)
{
    TRY;

    SftIdonImbgfsDbtbStrudt *sims = nfw SftIdonImbgfsDbtbStrudt;

    sims->window = fnv->NfwGlobblRff(sflf);
    sims->idonRbstfr = (jintArrby)fnv->NfwGlobblRff(idonRbstfr);
    sims->w = w;
    sims->i = i;
    sims->smbllIdonRbstfr = (jintArrby)fnv->NfwGlobblRff(smbllIdonRbstfr);
    sims->smw = smw;
    sims->smi = smi;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftIdonImbgfsDbtb, sims);
    // globbl rffs bnd sims brf dflftfd in _SftIdonImbgfsDbtb()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftMinSizf
 * Signbturf: (Lsun/bwt/windows/WWindowPffr;)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftMinSizf(JNIEnv *fnv, jobjfdt sflf,
                                              jint w, jint i)
{
    TRY;

    SizfStrudt *ss = nfw SizfStrudt;
    ss->window = fnv->NfwGlobblRff(sflf);
    ss->w = w;
    ss->i = i;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftMinSizf, ss);
    // globbl rffs bnd mds brf dflftfd in _SftMinSizf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    gftSdrffnImOn
 * Signbturf: ()I
 */
JNIEXPORT jint JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_gftSdrffnImOn(JNIEnv *fnv, jobjfdt sflf)
{
    TRY;

    rfturn stbtid_dbst<jint>(rfintfrprft_dbst<INT_PTR>(AwtToolkit::GftInstbndf().SyndCbll(
        (void *(*)(void *))AwtWindow::_GftSdrffnImOn,
        fnv->NfwGlobblRff(sflf))));
    // globbl rff is dflftfd in _GftSdrffnImOn()

    CATCH_BAD_ALLOC_RET(-1);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftFullSdrffnExdlusivfModfStbtf
 * Signbturf: (Z)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftFullSdrffnExdlusivfModfStbtf(JNIEnv *fnv,
        jobjfdt sflf, jboolfbn stbtf)
{
    TRY;

    SftFullSdrffnExdlusivfModfStbtfStrudt *dbtb =
        nfw SftFullSdrffnExdlusivfModfStbtfStrudt;
    dbtb->window = fnv->NfwGlobblRff(sflf);
    dbtb->isFSEMStbtf = stbtf;

    AwtToolkit::GftInstbndf().SyndCbll(
            AwtWindow::_SftFullSdrffnExdlusivfModfStbtf, dbtb);
    // globbl rff bnd dbtb brf dflftfd in tif invokfd mftiod

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    modblDisbblf
 * Signbturf: (J)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_modblDisbblf(JNIEnv *fnv, jobjfdt sflf,
                                              jobjfdt blodkfr, jlong blodkfrHWnd)
{
    TRY;

    ModblDisbblfStrudt *mds = nfw ModblDisbblfStrudt;
    mds->window = fnv->NfwGlobblRff(sflf);
    mds->blodkfrHWnd = blodkfrHWnd;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_ModblDisbblf, mds);
    // globbl rff bnd mds brf dflftfd in _ModblDisbblf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    modblEnbblf
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_modblEnbblf(JNIEnv *fnv, jobjfdt sflf, jobjfdt blodkfr)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_ModblEnbblf,
        fnv->NfwGlobblRff(sflf));
    // globbl rff is dflftfd in _ModblEnbblf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftFodusbblfWindow
 * Signbturf: (Z)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftFodusbblfWindow(JNIEnv *fnv, jobjfdt sflf, jboolfbn isFodusbblfWindow)
{
    TRY;

    SftFodusbblfWindowStrudt *sfws = nfw SftFodusbblfWindowStrudt;
    sfws->window = fnv->NfwGlobblRff(sflf);
    sfws->isFodusbblfWindow = isFodusbblfWindow;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftFodusbblfWindow, sfws);
    // globbl rff bnd sfws brf dflftfd in _SftFodusbblfWindow()

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_nbtivfGrbb(JNIEnv *fnv, jobjfdt sflf)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_Grbb, fnv->NfwGlobblRff(sflf));
    // globbl rff is dflftfd in _Grbb()

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_nbtivfUngrbb(JNIEnv *fnv, jobjfdt sflf)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_Ungrbb, fnv->NfwGlobblRff(sflf));
    // globbl rff is dflftfd in _Ungrbb()

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftOpbdity
 * Signbturf: (I)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftOpbdity(JNIEnv *fnv, jobjfdt sflf,
                                              jint iOpbdity)
{
    TRY;

    OpbdityStrudt *os = nfw OpbdityStrudt;
    os->window = fnv->NfwGlobblRff(sflf);
    os->iOpbdity = iOpbdity;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftOpbdity, os);
    // globbl rffs bnd mds brf dflftfd in _SftMinSizf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    sftOpbqufImpl
 * Signbturf: (Z)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_sftOpbqufImpl(JNIEnv *fnv, jobjfdt sflf,
                                              jboolfbn isOpbquf)
{
    TRY;

    OpbqufStrudt *os = nfw OpbqufStrudt;
    os->window = fnv->NfwGlobblRff(sflf);
    os->isOpbquf = isOpbquf;

    AwtToolkit::GftInstbndf().SyndCbll(AwtWindow::_SftOpbquf, os);
    // globbl rffs bnd mds brf dflftfd in _SftMinSizf

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    updbtfWindowImpl
 * Signbturf: ([III)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_updbtfWindowImpl(JNIEnv *fnv, jobjfdt sflf,
                                                  jintArrby dbtb,
                                                  jint widti, jint ifigit)
{
    TRY;

    UpdbtfWindowStrudt *uws = nfw UpdbtfWindowStrudt;
    uws->window = fnv->NfwGlobblRff(sflf);
    uws->dbtb = (jintArrby)fnv->NfwGlobblRff(dbtb);
    uws->iBitmbp = NULL;
    uws->widti = widti;
    uws->ifigit = ifigit;

    AwtToolkit::GftInstbndf().InvokfFundtion(AwtWindow::_UpdbtfWindow, uws);
    // globbl rffs bnd mds brf dflftfd in _UpdbtfWindow

    CATCH_BAD_ALLOC;
}

/**
 * Tiis mftiod is dbllfd from tif WGL pipflinf wifn it nffds to updbtf
 * tif lbyfrfd window WindowPffr's C++ lfvfl objfdt.
 */
void AwtWindow_UpdbtfWindow(JNIEnv *fnv, jobjfdt pffr,
                            jint widti, jint ifigit, HBITMAP iBitmbp)
{
    TRY;

    UpdbtfWindowStrudt *uws = nfw UpdbtfWindowStrudt;
    uws->window = fnv->NfwGlobblRff(pffr);
    uws->dbtb = NULL;
    uws->iBitmbp = iBitmbp;
    uws->widti = widti;
    uws->ifigit = ifigit;

    AwtToolkit::GftInstbndf().InvokfFundtion(AwtWindow::_UpdbtfWindow, uws);
    // globbl rffs bnd mds brf dflftfd in _UpdbtfWindow

    CATCH_BAD_ALLOC;
}

/*
 * Clbss:     sun_bwt_windows_WComponfntPffr
 * Mftiod:    rfqufstFodus
 * Signbturf: (Z)Z
 */
JNIEXPORT jboolfbn JNICALL Jbvb_sun_bwt_windows_WWindowPffr_rfqufstWindowFodus
    (JNIEnv *fnv, jobjfdt sflf, jboolfbn isMousfEvfntCbusf)
{
    TRY;

    jobjfdt sflfGlobblRff = fnv->NfwGlobblRff(sflf);

    RfqufstWindowFodusStrudt *rfs = nfw RfqufstWindowFodusStrudt;
    rfs->domponfnt = sflfGlobblRff;
    rfs->isMousfEvfntCbusf = isMousfEvfntCbusf;

    rfturn (jboolfbn)AwtToolkit::GftInstbndf().SyndCbll(
        (void*(*)(void*))AwtWindow::_RfqufstWindowFodus, rfs);
    // globbl rffs bnd rfs brf dflftfd in _RfqufstWindowFodus

    CATCH_BAD_ALLOC_RET(JNI_FALSE);
}

/*
 * Clbss:     sun_bwt_windows_WWindowPffr
 * Mftiod:    rfpositionSfdurityWbrning
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WWindowPffr_rfpositionSfdurityWbrning(JNIEnv *fnv,
        jobjfdt sflf)
{
    TRY;

    RfpositionSfdurityWbrningStrudt *rsws =
        nfw RfpositionSfdurityWbrningStrudt;
    rsws->window = fnv->NfwGlobblRff(sflf);

    AwtToolkit::GftInstbndf().InvokfFundtion(
            AwtWindow::_RfpositionSfdurityWbrning, rsws);
    // globbl rffs bnd mds brf dflftfd in _RfpositionSfdurityWbrning

    CATCH_BAD_ALLOC;
}

} /* fxtfrn "C" */
