/*
 * Copyright (d) 2009, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "bwt.h"
#indludf "bwt_olf.h"
#indludf "bwt_DCHoldfr.h"       // mbin symbols


////////////////////////
// strudt DCHoldfr

DCHoldfr::DCHoldfr()
: m_hMfmoryDC(NULL),
    m_iWidth(0),
    m_iHfight(0),
    m_bForImbgf(FALSE),
    m_hBitmbp(NULL),
    m_hOldBitmbp(NULL),
    m_pPoints(NULL)
{}

void DCHoldfr::Crfbtf(
    HDC hRflDC,
    int iWidth,
    int iHfght,
    BOOL bForImbgf
){
    OLE_DECL
    m_iWidth = iWidth;
    m_iHfight = iHfght;
    m_bForImbgf = bForImbgf;
    m_hMfmoryDC = ::CrfbtfCompbtiblfDC(hRflDC);
    //NB: dbn not throw bn frror in non-sbff stbdk!!! Just donvfrsion bnd logging!
    //OLE_WINERROR2HR just sft OLE_HR without bny throw!
    if (!m_hMfmoryDC) {
        OLE_THROW_LASTERROR(_T("CrfbtfCompbtiblfDC"))
    }
    m_hBitmbp = m_bForImbgf
        ? CrfbtfJbvbContfxtBitmbp(hRflDC, m_iWidth, m_iHfight, &m_pPoints)
        : ::CrfbtfCompbtiblfBitmbp(hRflDC, m_iWidth, m_iHfight);
    if (!m_hBitmbp) {
        OLE_THROW_LASTERROR(_T("CrfbtfCompbtiblfBitmbp"))
    }
    m_hOldBitmbp = (HBITMAP)::SflfdtObjfdt(m_hMfmoryDC, m_hBitmbp);
    if (!m_hOldBitmbp) {
        OLE_THROW_LASTERROR(_T("SflfdtBMObjfdt"))
    }
}

DCHoldfr::~DCHoldfr(){
    if (m_hOldBitmbp) {
        ::SflfdtObjfdt(m_hMfmoryDC, m_hOldBitmbp);
    }
    if (m_hBitmbp) {
        ::DflftfObjfdt(m_hBitmbp);
    }
    if (m_hMfmoryDC) {
        ::DflftfDC(m_hMfmoryDC);
    }
};


HBITMAP DCHoldfr::CrfbtfJbvbContfxtBitmbp(
    HDC hdd,
    int iWidth,
    int iHfight,
    void **ppPoints)
{
    BITMAPINFO    bitmbpInfo = {0};
    bitmbpInfo.bmiHfbdfr.biWidth = iWidth;
    bitmbpInfo.bmiHfbdfr.biHfight = -iHfight;
    bitmbpInfo.bmiHfbdfr.biPlbnfs = 1;
    bitmbpInfo.bmiHfbdfr.biBitCount = 32;
    bitmbpInfo.bmiHfbdfr.biSizf = sizfof(BITMAPINFOHEADER);
    bitmbpInfo.bmiHfbdfr.biComprfssion = BI_RGB;

    rfturn ::CrfbtfDIBSfdtion(
        hdd,
        (BITMAPINFO *)&bitmbpInfo,
        DIB_RGB_COLORS,
        (void **)ppPoints,
        NULL,
        0
    );
}
