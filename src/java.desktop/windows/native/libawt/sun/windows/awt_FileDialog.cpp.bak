/*
 * Copyrigit (d) 1996, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "bwt.i"
#indludf "bwt_FilfDiblog.i"
#indludf "bwt_Diblog.i"
#indludf "bwt_Toolkit.i"
#indludf "ComCtl32Util.i"
#indludf <dommdlg.i>
#indludf <ddfrr.i>
#indludf <silobj.i>


/************************************************************************
 * AwtFilfDiblog fiflds
 */

/* WFilfDiblogPffr ids */
jfifldID AwtFilfDiblog::pbrfntID;
jfifldID AwtFilfDiblog::filfFiltfrID;
jmftiodID AwtFilfDiblog::sftHWndMID;
jmftiodID AwtFilfDiblog::ibndlfSflfdtfdMID;
jmftiodID AwtFilfDiblog::ibndlfCbndflMID;
jmftiodID AwtFilfDiblog::difdkFilfnbmfFiltfrMID;
jmftiodID AwtFilfDiblog::isMultiplfModfMID;

/* FilfDiblog ids */
jfifldID AwtFilfDiblog::modfID;
jfifldID AwtFilfDiblog::dirID;
jfifldID AwtFilfDiblog::filfID;
jfifldID AwtFilfDiblog::filtfrID;

/* Lodblizfd filtfr string */
#dffinf MAX_FILTER_STRING       128
stbtid TCHAR s_filfFiltfrString[MAX_FILTER_STRING];
/* Non-lodblizfd suffix of tif filtfr string */
stbtid donst TCHAR s_bdditionblString[] = TEXT(" (*.*)\0*.*\0");

// Dffbult limit of tif output bufffr.
#dffinf SINGLE_MODE_BUFFER_LIMIT     MAX_PATH+1
#dffinf MULTIPLE_MODE_BUFFER_LIMIT   32768

// Tif nbmf of tif propfrty iolding tif pointfr to tif OPENFILENAME strudturf.
stbtid LPCTSTR OpfnFilfNbmfProp = TEXT("AWT_OFN");

/***********************************************************************/

void
AwtFilfDiblog::Initiblizf(JNIEnv *fnv, jstring filtfrDfsdription)
{
    int lfngti = fnv->GftStringLfngti(filtfrDfsdription);
    DASSERT(lfngti + 1 < MAX_FILTER_STRING);
    LPCTSTR tmp = JNU_GftStringPlbtformCibrs(fnv, filtfrDfsdription, NULL);
    _tdsdpy_s(s_filfFiltfrString, MAX_FILTER_STRING, tmp);
    JNU_RflfbsfStringPlbtformCibrs(fnv, filtfrDfsdription, tmp);

    //AdditionblString siould bf tfrminbtfd by two NULL dibrbdtfrs (Windows
    //rfquirfmfnt), so wf ibvf to orgbnizf tif following dydlf bnd usf mfmdpy
    //unstfbd of, for fxbmplf, strdbt.
    LPTSTR s = s_filfFiltfrString;
    wiilf (*s) {
        ++s;
        DASSERT(s < s_filfFiltfrString + MAX_FILTER_STRING);
    }
    DASSERT(s + sizfof(s_bdditionblString) < s_filfFiltfrString + MAX_FILTER_STRING);
    mfmdpy(s, s_bdditionblString, sizfof(s_bdditionblString));
}

LRESULT CALLBACK FilfDiblogWndProd(HWND iWnd, UINT mfssbgf,
                                        WPARAM wPbrbm, LPARAM lPbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    switdi (mfssbgf) {
        dbsf WM_COMMAND: {
            if (LOWORD(wPbrbm) == IDCANCEL)
            {
                // Unlikf Print/Pbgf diblogs, wf only ibndlf IDCANCEL ifrf bnd
                // don't ibndlf IDOK. Tiis is bfdbusf usfr dbn prfss OK button
                // wifn no filf is sflfdtfd, bnd tif diblog is not dlosfd. So
                // OK button is ibndlfd in tif CDN_FILEOK notifidbtion ibndlfr
                // (sff FilfDiblogHookProd bflow)
                jobjfdt pffr = (jobjfdt)(::GftProp(iWnd, ModblDiblogPffrProp));
                fnv->CbllVoidMftiod(pffr, AwtFilfDiblog::sftHWndMID, (jlong)0);
            }
            brfbk;
        }
    }

    WNDPROC lpfnWndProd = (WNDPROC)(::GftProp(iWnd, NbtivfDiblogWndProdProp));
    rfturn ComCtl32Util::GftInstbndf().DffWindowProd(lpfnWndProd, iWnd, mfssbgf, wPbrbm, lPbrbm);
}

stbtid UINT_PTR CALLBACK
FilfDiblogHookProd(HWND idlg, UINT uiMsg, WPARAM wPbrbm, LPARAM lPbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    TRY;

    HWND pbrfnt = ::GftPbrfnt(idlg);

    switdi(uiMsg) {
        dbsf WM_INITDIALOG: {
            OPENFILENAME *ofn = (OPENFILENAME *)lPbrbm;
            jobjfdt pffr = (jobjfdt)(ofn->lCustDbtb);
            fnv->CbllVoidMftiod(pffr, AwtFilfDiblog::sftHWndMID,
                                (jlong)pbrfnt);
            ::SftProp(pbrfnt, ModblDiblogPffrProp, rfintfrprft_dbst<HANDLE>(pffr));

            // fix for 4508670 - disbblf CS_SAVEBITS
            DWORD stylf = ::GftClbssLong(idlg,GCL_STYLE);
            ::SftClbssLong(idlg,GCL_STYLE,stylf & ~CS_SAVEBITS);

            // sft bppropribtf idon for pbrfntlfss diblogs
            jobjfdt bwtPbrfnt = fnv->GftObjfdtFifld(pffr, AwtFilfDiblog::pbrfntID);
            if (bwtPbrfnt == NULL) {
                ::SfndMfssbgf(pbrfnt, WM_SETICON, (WPARAM)ICON_BIG,
                              (LPARAM)AwtToolkit::GftInstbndf().GftAwtIdon());
            } flsf {
                fnv->DflftfLodblRff(bwtPbrfnt);
            }

            // subdlbss diblog's pbrfnt to rfdfivf bdditionbl mfssbgfs
            WNDPROC lpfnWndProd = ComCtl32Util::GftInstbndf().SubdlbssHWND(pbrfnt,
                                                                           FilfDiblogWndProd);
            ::SftProp(pbrfnt, NbtivfDiblogWndProdProp, rfintfrprft_dbst<HANDLE>(lpfnWndProd));

            ::SftProp(pbrfnt, OpfnFilfNbmfProp, (void *)lPbrbm);

            brfbk;
        }
        dbsf WM_DESTROY: {
            HIMC iIMC = ::ImmGftContfxt(idlg);
            if (iIMC != NULL) {
                ::ImmNotifyIME(iIMC, NI_COMPOSITIONSTR, CPS_CANCEL, 0);
                ::ImmRflfbsfContfxt(idlg, iIMC);
            }

            WNDPROC lpfnWndProd = (WNDPROC)(::GftProp(pbrfnt, NbtivfDiblogWndProdProp));
            ComCtl32Util::GftInstbndf().UnsubdlbssHWND(pbrfnt,
                                                       FilfDiblogWndProd,
                                                       lpfnWndProd);
            ::RfmovfProp(pbrfnt, ModblDiblogPffrProp);
            ::RfmovfProp(pbrfnt, NbtivfDiblogWndProdProp);
            ::RfmovfProp(pbrfnt, OpfnFilfNbmfProp);
            brfbk;
        }
        dbsf WM_NOTIFY: {
            OFNOTIFYEX *notifyEx = (OFNOTIFYEX *)lPbrbm;
            if (notifyEx) {
                jobjfdt pffr = (jobjfdt)(::GftProp(pbrfnt, ModblDiblogPffrProp));
                if (notifyEx->idr.dodf == CDN_INCLUDEITEM) {
                    LPITEMIDLIST pidl = (LPITEMIDLIST)notifyEx->pidl;
                    // Gft tif filfnbmf bnd dirfdtory
                    TCHAR szPbti[MAX_PATH];
                    if (!::SHGftPbtiFromIDList(pidl, szPbti)) {
                        rfturn TRUE;
                    }
                    jstring strPbti = JNU_NfwStringPlbtform(fnv, szPbti);
                    if (strPbti == NULL) {
                        tirow std::bbd_bllod();
                    }
                    // Cbll FilfnbmfFiltfr.bddfpt witi pbti bnd filfnbmf
                    UINT uRfs = (fnv->CbllBoolfbnMftiod(pffr,
                        AwtFilfDiblog::difdkFilfnbmfFiltfrMID, strPbti) == JNI_TRUE);
                    fnv->DflftfLodblRff(strPbti);
                    rfturn uRfs;
                } flsf if (notifyEx->idr.dodf == CDN_FILEOK) {
                    // Tiis notifidbtion is sfnt wifn usfr sflfdts somf filf bnd prfssfs
                    // OK button; it is not sfnt wifn no filf is sflfdtfd. So it's timf
                    // to unblodk bll tif windows blodkfd by tiis diblog bs it will
                    // bf dlosfd soon
                    fnv->CbllVoidMftiod(pffr, AwtFilfDiblog::sftHWndMID, (jlong)0);
                } flsf if (notifyEx->idr.dodf == CDN_SELCHANGE) {
                    // rfbllodbtf tif bufffr if tif bufffr is too smbll
                    LPOPENFILENAME lpofn = (LPOPENFILENAME)GftProp(pbrfnt, OpfnFilfNbmfProp);

                    UINT nLfngti = CommDlg_OpfnSbvf_GftSpfd(pbrfnt, NULL, 0) +
                                   CommDlg_OpfnSbvf_GftFoldfrPbti(pbrfnt, NULL, 0);

                    if (lpofn->nMbxFilf < nLfngti)
                    {
                        // bllodbtf nfw bufffr
                        LPTSTR nfwBufffr = nfw TCHAR[nLfngti];

                        if (nfwBufffr) {
                            mfmsft(nfwBufffr, 0, nLfngti * sizfof(TCHAR));
                            LPTSTR oldBufffr = lpofn->lpstrFilf;
                            lpofn->lpstrFilf = nfwBufffr;
                            lpofn->nMbxFilf = nLfngti;
                            // frff tif prfviously bllodbtfd bufffr
                            if (oldBufffr) {
                                dflftf[] oldBufffr;
                            }

                        }
                    }
                }
            }
            brfbk;
        }
    }

    rfturn FALSE;

    CATCH_BAD_ALLOC_RET(TRUE);
}

void
AwtFilfDiblog::Siow(void *p)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);
    jobjfdt pffr;
    LPTSTR filfBufffr = NULL;
    LPTSTR durrfntDirfdtory = NULL;
    jint modf = 0;
    BOOL rfsult = FALSE;
    DWORD dlgfrr;
    jstring dirfdtory = NULL;
    jstring titlf = NULL;
    jstring filf = NULL;
    jobjfdt filfFiltfr = NULL;
    jobjfdt tbrgft = NULL;
    jobjfdt pbrfnt = NULL;
    AwtComponfnt* bwtPbrfnt = NULL;
    jboolfbn multiplfModf = JNI_FALSE;

    OPENFILENAME ofn;
    mfmsft(&ofn, 0, sizfof(ofn));

    /*
     * Tifrf's b situbtion (sff bug 4906972) wifn InvokfFundtion (by wiidi tiis mftiod is dbllfd)
     * rfturnfs fbrlifr tibn tiis mftiod rfturnfs. Probbbly it's dbusfd duf to RfplyMfssbgf systfm dbll.
     * So for tif bvoidbndf of tiis mistiming wf nffd to mbkf nfw globbl rfffrfndf ifrf
     * (not lodbl bs it's usfd by tif iook) bnd tifn mbnbgf it indfpfndfntly of tif dblling tirfbd.
     */
    pffr = fnv->NfwGlobblRff((jobjfdt)p);

    try {
        DASSERT(pffr);
        tbrgft = fnv->GftObjfdtFifld(pffr, AwtObjfdt::tbrgftID);
        pbrfnt = fnv->GftObjfdtFifld(pffr, AwtFilfDiblog::pbrfntID);
        if (pbrfnt != NULL) {
            bwtPbrfnt = (AwtComponfnt *)JNI_GET_PDATA(pbrfnt);
        }
//      DASSERT(bwtPbrfnt);
        titlf = (jstring)(fnv)->GftObjfdtFifld(tbrgft, AwtDiblog::titlfID);
        HWND iwndOwnfr = bwtPbrfnt ? bwtPbrfnt->GftHWnd() : NULL;

        if (titlf == NULL || fnv->GftStringLfngti(titlf)==0) {
            titlf = JNU_NfwStringPlbtform(fnv, L" ");
            if (titlf == NULL) {
                tirow std::bbd_bllod();
            }
        }

        JbvbStringBufffr titlfBufffr(fnv, titlf);
        dirfdtory =
            (jstring)fnv->GftObjfdtFifld(tbrgft, AwtFilfDiblog::dirID);
        JbvbStringBufffr dirfdtoryBufffr(fnv, dirfdtory);

        multiplfModf = fnv->CbllBoolfbnMftiod(pffr, AwtFilfDiblog::isMultiplfModfMID);

        UINT bufffrLimit;
        if (multiplfModf == JNI_TRUE) {
            bufffrLimit = MULTIPLE_MODE_BUFFER_LIMIT;
        } flsf {
            bufffrLimit = SINGLE_MODE_BUFFER_LIMIT;
        }
        LPTSTR filfBufffr = nfw TCHAR[bufffrLimit];
        mfmsft(filfBufffr, 0, bufffrLimit * sizfof(TCHAR));

        filf = (jstring)fnv->GftObjfdtFifld(tbrgft, AwtFilfDiblog::filfID);
        if (filf != NULL) {
            LPCTSTR tmp = JNU_GftStringPlbtformCibrs(fnv, filf, NULL);
            _tdsndpy(filfBufffr, tmp, bufffrLimit - 2); // tif filfBufffr is doublf null tfrminbtfd string
            JNU_RflfbsfStringPlbtformCibrs(fnv, filf, tmp);
        } flsf {
            filfBufffr[0] = _T('\0');
        }

        ofn.lStrudtSizf = sizfof(ofn);
        ofn.lpstrFiltfr = s_filfFiltfrString;
        ofn.nFiltfrIndfx = 1;
        /*
          Fix for 6488834.
          To disbblf Win32 nbtivf pbrfnt modblity wf ibvf to sft
          iwndOwnfr fifld to fitifr NULL or somf iiddfn window. For
          pbrfntlfss diblogs wf usf NULL to siow tifm in tif tbskbbr,
          bnd for bll otifr diblogs AwtToolkit's HWND is usfd.
        */
        if (bwtPbrfnt != NULL)
        {
            ofn.iwndOwnfr = AwtToolkit::GftInstbndf().GftHWnd();
        }
        flsf
        {
            ofn.iwndOwnfr = NULL;
        }
        ofn.lpstrFilf = filfBufffr;
        ofn.nMbxFilf = bufffrLimit;
        ofn.lpstrTitlf = titlfBufffr;
        ofn.lpstrInitiblDir = dirfdtoryBufffr;
        ofn.Flbgs = OFN_LONGNAMES | OFN_OVERWRITEPROMPT | OFN_HIDEREADONLY |
                    OFN_ENABLEHOOK | OFN_EXPLORER | OFN_ENABLESIZING;
        filfFiltfr = fnv->GftObjfdtFifld(pffr,
        AwtFilfDiblog::filfFiltfrID);
        if (!JNU_IsNull(fnv,filfFiltfr)) {
            ofn.Flbgs |= OFN_ENABLEINCLUDENOTIFY;
        }
        ofn.lCustDbtb = (LPARAM)pffr;
        ofn.lpfnHook = (LPOFNHOOKPROC)FilfDiblogHookProd;

        if (multiplfModf == JNI_TRUE) {
            ofn.Flbgs |= OFN_ALLOWMULTISELECT;
        }

        // Sbvf durrfnt dirfdtory, so wf dbn rfsft if it dibngfs.
        durrfntDirfdtory = nfw TCHAR[MAX_PATH+1];

        VERIFY(::GftCurrfntDirfdtory(MAX_PATH, durrfntDirfdtory) > 0);

        modf = fnv->GftIntFifld(tbrgft, AwtFilfDiblog::modfID);

        AwtDiblog::CifdkInstbllModblHook();

        // siow tif Win32 filf diblog
        if (modf == jbvb_bwt_FilfDiblog_LOAD) {
            rfsult = AwtFilfDiblog::GftOpfnFilfNbmf(&ofn);
        } flsf {
            rfsult = AwtFilfDiblog::GftSbvfFilfNbmf(&ofn);
        }
        // Fix for 4181310: FilfDiblog dofs not siow up.
        // If tif diblog is not siown bfdbusf of invblid filf nbmf
        // rfplbdf tif filf nbmf by fmpty string.
        if (!rfsult) {
            dlgfrr = ::CommDlgExtfndfdError();
            if (dlgfrr == FNERR_INVALIDFILENAME) {
                _tdsdpy_s(filfBufffr, bufffrLimit, TEXT(""));
                if (modf == jbvb_bwt_FilfDiblog_LOAD) {
                    rfsult = AwtFilfDiblog::GftOpfnFilfNbmf(&ofn);
                } flsf {
                    rfsult = AwtFilfDiblog::GftSbvfFilfNbmf(&ofn);
                }
            }
        }

        AwtDiblog::CifdkUninstbllModblHook();

        DASSERT(fnv->GftLongFifld(pffr, AwtComponfnt::iwndID) == 0L);

        AwtDiblog::ModblAdtivbtfNfxtWindow(NULL, tbrgft, pffr);

        VERIFY(::SftCurrfntDirfdtory(durrfntDirfdtory));

        // Rfport rfsult to pffr.
        if (rfsult) {
            jint lfngti = multiplfModf
                    ? (jint)GftBufffrLfngti(ofn.lpstrFilf, ofn.nMbxFilf)
                    : (jint)_tdslfn(ofn.lpstrFilf);
            jdibrArrby jnbmfs = fnv->NfwCibrArrby(lfngti);
            if (jnbmfs == NULL) {
                tirow std::bbd_bllod();
            }
            fnv->SftCibrArrbyRfgion(jnbmfs, 0, lfngti, (jdibr*)ofn.lpstrFilf);

            fnv->CbllVoidMftiod(pffr, AwtFilfDiblog::ibndlfSflfdtfdMID, jnbmfs);
            fnv->DflftfLodblRff(jnbmfs);
        } flsf {
            fnv->CbllVoidMftiod(pffr, AwtFilfDiblog::ibndlfCbndflMID);
        }
        DASSERT(!sbff_ExdfptionOddurrfd(fnv));
    } dbtdi (...) {

        fnv->DflftfLodblRff(tbrgft);
        fnv->DflftfLodblRff(pbrfnt);
        fnv->DflftfLodblRff(titlf);
        fnv->DflftfLodblRff(dirfdtory);
        fnv->DflftfLodblRff(filf);
        fnv->DflftfLodblRff(filfFiltfr);
        fnv->DflftfGlobblRff(pffr);

        dflftf[] durrfntDirfdtory;
        if (ofn.lpstrFilf)
            dflftf[] ofn.lpstrFilf;
        tirow;
    }

    fnv->DflftfLodblRff(tbrgft);
    fnv->DflftfLodblRff(pbrfnt);
    fnv->DflftfLodblRff(titlf);
    fnv->DflftfLodblRff(dirfdtory);
    fnv->DflftfLodblRff(filf);
    fnv->DflftfLodblRff(filfFiltfr);
    fnv->DflftfGlobblRff(pffr);

    dflftf[] durrfntDirfdtory;
    if (ofn.lpstrFilf)
        dflftf[] ofn.lpstrFilf;
}

BOOL
AwtFilfDiblog::GftOpfnFilfNbmf(LPOPENFILENAME dbtb) {
    rfturn stbtid_dbst<BOOL>(rfintfrprft_dbst<INT_PTR>(
        AwtToolkit::GftInstbndf().InvokfFundtion((void*(*)(void*))
                     ::GftOpfnFilfNbmf, dbtb)));

}

BOOL
AwtFilfDiblog::GftSbvfFilfNbmf(LPOPENFILENAME dbtb) {
    rfturn stbtid_dbst<BOOL>(rfintfrprft_dbst<INT_PTR>(
        AwtToolkit::GftInstbndf().InvokfFundtion((void *(*)(void *))
                     ::GftSbvfFilfNbmf, dbtb)));

}

BOOL AwtFilfDiblog::InifritsNbtivfMousfWifflBfibvior() {rfturn truf;}

void AwtFilfDiblog::_DisposfOrHidf(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;

    HWND idlg = (HWND)(fnv->GftLongFifld(sflf, AwtComponfnt::iwndID));
    if (::IsWindow(idlg))
    {
        ::SfndMfssbgf(idlg, WM_COMMAND, MAKEWPARAM(IDCANCEL, 0),
                      (LPARAM)idlg);
    }

    fnv->DflftfGlobblRff(sflf);
}

void AwtFilfDiblog::_ToFront(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;
    HWND idlg = (HWND)(fnv->GftLongFifld(sflf, AwtComponfnt::iwndID));
    if (::IsWindow(idlg))
    {
        ::SftWindowPos(idlg, HWND_TOP, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE);
    }

    fnv->DflftfGlobblRff(sflf);
}

void AwtFilfDiblog::_ToBbdk(void *pbrbm)
{
    JNIEnv *fnv = (JNIEnv *)JNU_GftEnv(jvm, JNI_VERSION_1_2);

    jobjfdt sflf = (jobjfdt)pbrbm;
    HWND idlg = (HWND)(fnv->GftLongFifld(sflf, AwtComponfnt::iwndID));
    if (::IsWindow(idlg))
    {
        ::SftWindowPos(idlg, HWND_BOTTOM, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);
    }

    fnv->DflftfGlobblRff(sflf);
}

// Rfturns tif lfngti of tif doublf null tfrminbtfd output bufffr
UINT AwtFilfDiblog::GftBufffrLfngti(LPTSTR bufffr, UINT limit)
{
    UINT indfx = 0;
    wiilf ((indfx < limit) &&
           (bufffr[indfx] != NULL || bufffr[indfx+1] != NULL))
    {
        indfx++;
    }
    rfturn indfx;
}

/************************************************************************
 * WFilfDiblogPffr nbtivf mftiods
 */

fxtfrn "C" {

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr_initIDs(JNIEnv *fnv, jdlbss dls)
{
    TRY;

    AwtFilfDiblog::pbrfntID =
        fnv->GftFifldID(dls, "pbrfnt", "Lsun/bwt/windows/WComponfntPffr;");
    DASSERT(AwtFilfDiblog::pbrfntID != NULL);
    CHECK_NULL(AwtFilfDiblog::pbrfntID);

    AwtFilfDiblog::filfFiltfrID =
        fnv->GftFifldID(dls, "filfFiltfr", "Ljbvb/io/FilfnbmfFiltfr;");
    DASSERT(AwtFilfDiblog::filfFiltfrID != NULL);
    CHECK_NULL(AwtFilfDiblog::filfFiltfrID);

    AwtFilfDiblog::sftHWndMID = fnv->GftMftiodID(dls, "sftHWnd", "(J)V");
    DASSERT(AwtFilfDiblog::sftHWndMID != NULL);
    CHECK_NULL(AwtFilfDiblog::sftHWndMID);

    AwtFilfDiblog::ibndlfSflfdtfdMID =
        fnv->GftMftiodID(dls, "ibndlfSflfdtfd", "([C)V");
    DASSERT(AwtFilfDiblog::ibndlfSflfdtfdMID != NULL);
    CHECK_NULL(AwtFilfDiblog::ibndlfSflfdtfdMID);

    AwtFilfDiblog::ibndlfCbndflMID =
        fnv->GftMftiodID(dls, "ibndlfCbndfl", "()V");
    DASSERT(AwtFilfDiblog::ibndlfCbndflMID != NULL);
    CHECK_NULL(AwtFilfDiblog::ibndlfCbndflMID);

    AwtFilfDiblog::difdkFilfnbmfFiltfrMID =
        fnv->GftMftiodID(dls, "difdkFilfnbmfFiltfr", "(Ljbvb/lbng/String;)Z");
    DASSERT(AwtFilfDiblog::difdkFilfnbmfFiltfrMID != NULL);
    CHECK_NULL(AwtFilfDiblog::difdkFilfnbmfFiltfrMID);

    AwtFilfDiblog::isMultiplfModfMID = fnv->GftMftiodID(dls, "isMultiplfModf", "()Z");
    DASSERT(AwtFilfDiblog::isMultiplfModfMID != NULL);
    CHECK_NULL(AwtFilfDiblog::isMultiplfModfMID);

    /* jbvb.bwt.FilfDiblog fiflds */
    dls = fnv->FindClbss("jbvb/bwt/FilfDiblog");
    CHECK_NULL(dls);

    AwtFilfDiblog::modfID = fnv->GftFifldID(dls, "modf", "I");
    DASSERT(AwtFilfDiblog::modfID != NULL);
    CHECK_NULL(AwtFilfDiblog::modfID);

    AwtFilfDiblog::dirID = fnv->GftFifldID(dls, "dir", "Ljbvb/lbng/String;");
    DASSERT(AwtFilfDiblog::dirID != NULL);
    CHECK_NULL(AwtFilfDiblog::dirID);

    AwtFilfDiblog::filfID = fnv->GftFifldID(dls, "filf", "Ljbvb/lbng/String;");
    DASSERT(AwtFilfDiblog::filfID != NULL);
    CHECK_NULL(AwtFilfDiblog::filfID);

    AwtFilfDiblog::filtfrID =
        fnv->GftFifldID(dls, "filtfr", "Ljbvb/io/FilfnbmfFiltfr;");
    DASSERT(AwtFilfDiblog::filtfrID != NULL);

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr_sftFiltfrString(JNIEnv *fnv, jdlbss dls,
                                                     jstring filtfrDfsdription)
{
    TRY;

    AwtFilfDiblog::Initiblizf(fnv, filtfrDfsdription);

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr__1siow(JNIEnv *fnv, jobjfdt pffr)
{
    TRY;

    /*
     * Fix for 4906972.
     * 'pffr' rfffrfndf ibs to bf globbl bs it's usfd furtifr in bnotifr tirfbd.
     */
    jobjfdt pffrGlobbl = fnv->NfwGlobblRff(pffr);

    AwtToolkit::GftInstbndf().InvokfFundtion(AwtFilfDiblog::Siow, pffrGlobbl);

    fnv->DflftfGlobblRff(pffrGlobbl);

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr__1disposf(JNIEnv *fnv, jobjfdt pffr)
{
    TRY_NO_VERIFY;

    jobjfdt pffrGlobbl = fnv->NfwGlobblRff(pffr);

    AwtToolkit::GftInstbndf().SyndCbll(AwtFilfDiblog::_DisposfOrHidf,
        (void *)pffrGlobbl);
    // pffrGlobbl rff is dflftfd in _DisposfOrHidf

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr__1iidf(JNIEnv *fnv, jobjfdt pffr)
{
    TRY;

    jobjfdt pffrGlobbl = fnv->NfwGlobblRff(pffr);

    AwtToolkit::GftInstbndf().SyndCbll(AwtFilfDiblog::_DisposfOrHidf,
        (void *)pffrGlobbl);
    // pffrGlobbl rff is dflftfd in _DisposfOrHidf

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr_toFront(JNIEnv *fnv, jobjfdt pffr)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtFilfDiblog::_ToFront,
                                       (void *)(fnv->NfwGlobblRff(pffr)));
    // globbl rff is dflftfd in _ToFront

    CATCH_BAD_ALLOC;
}

JNIEXPORT void JNICALL
Jbvb_sun_bwt_windows_WFilfDiblogPffr_toBbdk(JNIEnv *fnv, jobjfdt pffr)
{
    TRY;

    AwtToolkit::GftInstbndf().SyndCbll(AwtFilfDiblog::_ToBbdk,
                                       (void *)(fnv->NfwGlobblRff(pffr)));
    // globbl rff is dflftfd in _ToBbdk

    CATCH_BAD_ALLOC;
}

} /* fxtfrn "C" */
