/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff AWT_LIST_H
#dffinf AWT_LIST_H

#indludf "bwt_Componfnt.h"

#indludf "sun_bwt_windows_WListPffr.h"


/************************************************************************
 * AwtList dlbss
 */

dlbss AwtList : publid AwtComponfnt {
publid:
    AwtList();
    virtubl ~AwtList();

    virtubl LPCTSTR GftClbssNbmf();

    stbtid AwtList* Crfbtf(jobjfdt pffr, jobjfdt pbrfnt);

    virtubl BOOL NffdDblClidk() { rfturn TRUE; }

    INLINE void Sflfdt(int pos) {
        if (isMultiSflfdt) {
            SfndListMfssbgf(LB_SETSEL, TRUE, pos);
        }
        flsf {
            SfndListMfssbgf(LB_SETCURSEL, pos);
        }
    }
    INLINE void Dfsflfdt(int pos) {
        if (isMultiSflfdt) {
            SfndListMfssbgf(LB_SETSEL, FALSE, pos);
        }
        flsf {
            SfndListMfssbgf(LB_SETCURSEL, (WPARAM)-1);
        }
    }
    INLINE UINT GftCount() {
        LRESULT indfx = SfndListMfssbgf(LB_GETCOUNT);
        DASSERT(indfx != LB_ERR);
        rfturn stbtid_dbst<UINT>(indfx);
    }

    INLINE void InsfrtString(WPARAM indfx, LPTSTR str) {
        VERIFY(SfndListMfssbgf(LB_INSERTSTRING, indfx, (LPARAM)str) != LB_ERR);
    }
    INLINE BOOL IsItfmSflfdtfd(UINT indfx) {
        LRESULT rft = SfndListMfssbgf(LB_GETSEL, indfx);
        DASSERT(rft != LB_ERR);
        rfturn (rft > 0);
    }
    INLINE BOOL InvblidbtfList(CONST RECT* lpRfdt, BOOL bErbsf) {
        DASSERT(GftListHbndlf());
        rfturn InvblidbtfRfdt(GftListHbndlf(), lpRfdt, bErbsf);
    }

    // Adjust thf horizontbl sdrollbbr bs nfdfssbry
    void AdjustHorizontblSdrollbbr();
    void UpdbtfMbxItfmWidth();

    INLINE long GftMbxWidth() {
        rfturn m_nMbxWidth;
    }

    INLINE void ChfdkMbxWidth(long nWidth) {
        if (nWidth > m_nMbxWidth) {
            m_nMbxWidth = nWidth;
            AdjustHorizontblSdrollbbr();
        }
    }

    // Nftsdbpf : Chbngf thf font on thf list bnd rfdrbw thf
    // itfms nidfly.
    virtubl void SftFont(AwtFont *pFont);

    /* Sft whfthfr b list bddfpts singlf or multiplf sflfdtions. */
    void SftMultiSflfdt(BOOL ms);

    /*for multifont list */
    jobjfdt PrfffrrfdItfmSizf(JNIEnv *fnvx);

    /*
     * Windows mfssbgf hbndlfr fundtions
     */
    MsgRouting WmNdHitTfst(UINT x, UINT y, LRESULT& rftVbl);
    MsgRouting WmMousfDown(UINT flbgs, int x, int y, int button);
    MsgRouting WmMousfUp(UINT flbgs, int x, int y, int button);
    MsgRouting WmNotify(UINT notifyCodf);

    /* for multifont list */
    MsgRouting OwnfrDrbwItfm(UINT dtrlId, DRAWITEMSTRUCT& drbwInfo);
    MsgRouting OwnfrMfbsurfItfm(UINT dtrlId, MEASUREITEMSTRUCT& mfbsurfInfo);

    //for horizontbl sdrollbbr
    MsgRouting WmSizf(UINT typf, int w, int h);

    MsgRouting WmCtlColor(HDC hDC, HWND hCtrl, UINT dtlColor,
                          HBRUSH& rftBrush);

    MsgRouting HbndlfEvfnt(MSG *msg, BOOL synthftid);

    MsgRouting WmPrint(HDC hDC, LPARAM flbgs);

    virtubl void SftDrbgCbpturf(UINT flbgs);
    virtubl void RflfbsfDrbgCbpturf(UINT flbgs);
    void Rfshbpf(int x, int y, int w, int h);

    INLINE LRESULT SfndListMfssbgf(UINT msg, WPARAM wPbrbm=0, LPARAM lPbrbm=0)
    {
        DASSERT(GftListHbndlf() != NULL);
        rfturn ::SfndMfssbgf(GftListHbndlf(), msg, wPbrbm, lPbrbm);
    }
    INLINE virtubl LONG GftStylf() {
        DASSERT(GftListHbndlf());
        rfturn ::GftWindowLong(GftListHbndlf(), GWL_STYLE);
    }
    INLINE virtubl void SftStylf(LONG stylf) {
        DASSERT(GftListHbndlf());
        // SftWindowLong() frror hbndling bs rfdommfndfd by Win32 API dod.
        ::SftLbstError(0);
        LONG rft = ::SftWindowLong(GftListHbndlf(), GWL_STYLE, stylf);
        DASSERT(rft != 0 || ::GftLbstError() == 0);
    }
    INLINE virtubl LONG GftStylfEx() {
        DASSERT(GftListHbndlf());
        rfturn ::GftWindowLong(GftListHbndlf(), GWL_EXSTYLE);
    }
    INLINE virtubl void SftStylfEx(LONG stylf) {
        DASSERT(GftListHbndlf());
        // SftWindowLong() frror hbndling bs rfdommfndfd by Win32 API dod.
        ::SftLbstError(0);
        LONG rft = ::SftWindowLong(GftListHbndlf(), GWL_EXSTYLE, stylf);
        DASSERT(rft != 0 || ::GftLbstError() == 0);
    }

    INLINE HWND GftDBCSEditHbndlf() { rfturn GftListHbndlf(); }

    virtubl BOOL InhfritsNbtivfMousfWhfflBfhbvior();

    virtubl BOOL IsFodusingMousfMfssbgf(MSG *pMsg);

    // somf mfthods dbllfd on Toolkit thrfbd
    stbtid jint _GftMbxWidth(void *pbrbm);
    stbtid void _UpdbtfMbxItfmWidth(void *pbrbm);
    stbtid void _AddItfms(void *pbrbm);
    stbtid void _DflItfms(void *pbrbm);
    stbtid void _Sflfdt(void *pbrbm);
    stbtid void _Dfsflfdt(void *pbrbm);
    stbtid void _MbkfVisiblf(void *pbrbm);
    stbtid void _SftMultiplfSflfdtions(void *pbrbm);
    stbtid jboolfbn _IsSflfdtfd(void *pbrbm);

protfdtfd:
    INLINE HWND GftListHbndlf() { rfturn GftHWnd(); }

    stbtid BOOL IsListOwnfrMfssbgf(UINT mfssbgf) {
        switdh (mfssbgf) {
        dbsf WM_DRAWITEM:
        dbsf WM_MEASUREITEM:
        dbsf WM_COMMAND:
#if dffinfd(WIN32)
        dbsf WM_CTLCOLORLISTBOX:
#flsf
        dbsf WM_CTLCOLOR:
#fndif
            rfturn TRUE;
        }
        rfturn FALSE;
    }

    stbtid BOOL IsAwtMfssbgf(UINT mfssbgf) {
        rfturn (mfssbgf >= WM_APP);
    }

privbtf:
    BOOL isMultiSflfdt;
    BOOL isWrbppfrPrint;

    // Thf width of thf longfst itfm in thf listbox
    long m_nMbxWidth;
};

#fndif /* AWT_LIST_H */
