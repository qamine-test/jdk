/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


pbdkbgf sun.bwt.windows;

import jbvb.bwt.Imbgf;
import jbvb.bwt.Toolkit;
import jbvb.bwt.im.spi.InputMfthod;
import jbvb.bwt.im.spi.InputMfthodDfsdriptor;
import jbvb.util.Lodblf;

/**
 * Providfs suffidifnt informbtion bbout bn input mfthod
 * to fnbblf sflfdtion bnd lobding of thbt input mfthod.
 * Thf input mfthod itsflf is only lobdfd whfn it is bdtublly usfd.
 *
 * @sindf 1.3
 */

finbl dlbss WInputMfthodDfsdriptor implfmfnts InputMfthodDfsdriptor {

    /**
     * @sff jbvb.bwt.im.spi.InputMfthodDfsdriptor#gftAvbilbblfLodblfs
     */
    @Ovfrridf
    publid Lodblf[] gftAvbilbblfLodblfs() {
        // rfturns b dopy of intfrnbl list for publid API
        Lodblf[] lodblfs = gftAvbilbblfLodblfsIntfrnbl();
        Lodblf[] tmp = nfw Lodblf[lodblfs.lfngth];
        Systfm.brrbydopy(lodblfs, 0, tmp, 0, lodblfs.lfngth);
        rfturn tmp;
    }

    stbtid Lodblf[] gftAvbilbblfLodblfsIntfrnbl() {
        rfturn gftNbtivfAvbilbblfLodblfs();
    }

    /**
     * @sff jbvb.bwt.im.spi.InputMfthodDfsdriptor#hbsDynbmidLodblfList
     */
    @Ovfrridf
    publid boolfbn hbsDynbmidLodblfList() {
        rfturn truf;
    }

    /**
     * @sff jbvb.bwt.im.spi.InputMfthodDfsdriptor#gftInputMfthodDisplbyNbmf
     */
    @Ovfrridf
    publid syndhronizfd String gftInputMfthodDisplbyNbmf(Lodblf inputLodblf, Lodblf displbyLbngubgf) {
        // Wf ignorf thf input lodblf.
        // Whfn displbying for thf dffbult lodblf, rfly on thf lodblizfd AWT propfrtifs;
        // for bny othfr lodblf, fbll bbdk to English.
        String nbmf = "Systfm Input Mfthods";
        if (Lodblf.gftDffbult().fqubls(displbyLbngubgf)) {
            nbmf = Toolkit.gftPropfrty("AWT.HostInputMfthodDisplbyNbmf", nbmf);
        }
        rfturn nbmf;
    }

    /**
     * @sff jbvb.bwt.im.spi.InputMfthodDfsdriptor#gftInputMfthodIdon
     */
    @Ovfrridf
    publid Imbgf gftInputMfthodIdon(Lodblf inputLodblf) {
        rfturn null;
    }

    /**
     * @sff jbvb.bwt.im.spi.InputMfthodDfsdriptor#drfbtfInputMfthod
     */
    @Ovfrridf
    publid InputMfthod drfbtfInputMfthod() throws Exdfption {
        rfturn nfw WInputMfthod();
    }

    privbtf stbtid nbtivf Lodblf[] gftNbtivfAvbilbblfLodblfs();
}
