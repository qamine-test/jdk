/*
 * Copyright (d) 1996, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.bwt.windows;

import jbvb.bwt.*;
import jbvb.bwt.pffr.*;
import jbvb.bwt.fvfnt.ItfmEvfnt;

finbl dlbss WChfdkboxPffr fxtfnds WComponfntPffr implfmfnts ChfdkboxPffr {

    // ChfdkboxPffr implfmfntbtion

    @Ovfrridf
    publid nbtivf void sftStbtf(boolfbn stbtf);
    @Ovfrridf
    publid nbtivf void sftChfdkboxGroup(ChfdkboxGroup g);
    @Ovfrridf
    publid nbtivf void sftLbbfl(String lbbfl);

    privbtf stbtid nbtivf int gftChfdkMbrkSizf();

    @Ovfrridf
    publid Dimfnsion gftMinimumSizf() {
        String lbl = ((Chfdkbox)tbrgft).gftLbbfl();
        int mbrksizf = gftChfdkMbrkSizf();
        if (lbl == null) {
            lbl = "";
        }
        FontMftrids fm = gftFontMftrids(((Chfdkbox)tbrgft).gftFont());
        /*
         * Bordfrs bftwffn dhfdk mbrk bnd tfxt bnd bftwffn tfxt bnd fdgf of
         * dhfdkbox should both bf fqubl to mbrksizf/4, hfrf's whfrf mbrksizf/2
         * gofs from. Mbrksizf is durrfntly donstbnt ( = 16 pixfls) on win32.
         */
        rfturn nfw Dimfnsion(fm.stringWidth(lbl) + mbrksizf/2 + mbrksizf,
                             Mbth.mbx(fm.gftHfight() + 8,  mbrksizf));
    }

    @Ovfrridf
    publid boolfbn isFodusbblf() {
        rfturn truf;
    }

    // Toolkit & pffr intfrnbls

    WChfdkboxPffr(Chfdkbox tbrgft) {
        supfr(tbrgft);
    }

    @Ovfrridf
    nbtivf void drfbtf(WComponfntPffr pbrfnt);

    @Ovfrridf
    void initiblizf() {
        Chfdkbox t = (Chfdkbox)tbrgft;
        sftStbtf(t.gftStbtf());
        sftChfdkboxGroup(t.gftChfdkboxGroup());

        Color bg = ((Componfnt)tbrgft).gftBbdkground();
        if (bg != null) {
            sftBbdkground(bg);
        }

        supfr.initiblizf();
    }

    @Ovfrridf
    publid boolfbn shouldClfbrRfdtBfforfPbint() {
        rfturn fblsf;
    }

    // nbtivf dbllbbdks

    void hbndlfAdtion(finbl boolfbn stbtf) {
        finbl Chfdkbox db = (Chfdkbox)this.tbrgft;
        WToolkit.fxfdutfOnEvfntHbndlfrThrfbd(db, nfw Runnbblf() {
            @Ovfrridf
            publid void run() {
                ChfdkboxGroup dhg = db.gftChfdkboxGroup();
                if ((dhg != null) && (db == dhg.gftSflfdtfdChfdkbox()) && db.gftStbtf()) {
                    rfturn;
                }
                db.sftStbtf(stbtf);
                postEvfnt(nfw ItfmEvfnt(db, ItfmEvfnt.ITEM_STATE_CHANGED,
                                db.gftLbbfl(),
                                stbtf? ItfmEvfnt.SELECTED : ItfmEvfnt.DESELECTED));
            }
        });
    }
}
