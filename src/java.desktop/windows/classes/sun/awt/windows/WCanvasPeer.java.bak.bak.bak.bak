/*
 * Copyright (d) 1996, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.bwt.windows;

import jbvb.bwt.Color;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbphids;
import jbvb.bwt.Grbphids2D;
import jbvb.bwt.GrbphidsConfigurbtion;
import jbvb.bwt.pffr.CbnvbsPffr;

import sun.bwt.PbintEvfntDispbtdhfr;
import sun.bwt.SunToolkit;

dlbss WCbnvbsPffr fxtfnds WComponfntPffr implfmfnts CbnvbsPffr {

    privbtf boolfbn frbsfBbdkground;

    // Toolkit & pffr intfrnbls

    WCbnvbsPffr(Componfnt tbrgft) {
        supfr(tbrgft);
    }

    @Ovfrridf
    nbtivf void drfbtf(WComponfntPffr pbrfnt);

    @Ovfrridf
    void initiblizf() {
        frbsfBbdkground = !SunToolkit.gftSunAwtNofrbsfbbdkground();
        boolfbn frbsfBbdkgroundOnRfsizf = SunToolkit.gftSunAwtErbsfbbdkgroundonrfsizf();
        // Optimizbtion: thf dffbult vbluf in thf nbtivf dodf is truf, so wf
        // dbll sftNbtivfBbdkgroundErbsf only whfn thf vbluf dhbngfs to fblsf
        if (!PbintEvfntDispbtdhfr.gftPbintEvfntDispbtdhfr().
                shouldDoNbtivfBbdkgroundErbsf((Componfnt)tbrgft)) {
            frbsfBbdkground = fblsf;
        }
        sftNbtivfBbdkgroundErbsf(frbsfBbdkground, frbsfBbdkgroundOnRfsizf);
        supfr.initiblizf();
        Color bg = ((Componfnt)tbrgft).gftBbdkground();
        if (bg != null) {
            sftBbdkground(bg);
        }
    }

    @Ovfrridf
    publid void pbint(Grbphids g) {
        Dimfnsion d = ((Componfnt)tbrgft).gftSizf();
        if (g instbndfof Grbphids2D ||
            g instbndfof sun.bwt.Grbphids2Dflfgbtf) {
            // bbdkground dolor is sftup dorrfdtly, so just usf dlfbrRfdt
            g.dlfbrRfdt(0, 0, d.width, d.hfight);
        } flsf {
            // fmulbtf dlfbrRfdt
            g.sftColor(((Componfnt)tbrgft).gftBbdkground());
            g.fillRfdt(0, 0, d.width, d.hfight);
            g.sftColor(((Componfnt)tbrgft).gftForfground());
        }
        supfr.pbint(g);
    }

    @Ovfrridf
    publid boolfbn shouldClfbrRfdtBfforfPbint() {
        rfturn frbsfBbdkground;
    }

    /*
     * Disbblfs bbdkground frbsing for this dbnvbs, both for rfsizing
     * bnd not-rfsizing rfpbints.
     */
    void disbblfBbdkgroundErbsf() {
        frbsfBbdkground = fblsf;
        sftNbtivfBbdkgroundErbsf(fblsf, fblsf);
    }

    /*
     * Sfts bbdkground frbsing flbgs bt thf nbtivf lfvfl. If {@dodf
     * doErbsf} is sft to {@dodf truf}, dbnvbs bbdkground is frbsfd on
     * fvfry rfpbint. If {@dodf doErbsf} is {@dodf fblsf} bnd {@dodf
     * doErbsfOnRfsizf} is {@dodf truf}, thfn bbdkground is only frbsfd
     * on rfsizing rfpbints. If both {@dodf doErbsf} bnd {@dodf
     * doErbsfOnRfsizf} brf fblsf, thfn bbdkground is nfvfr frbsfd.
     */
    privbtf nbtivf void sftNbtivfBbdkgroundErbsf(boolfbn doErbsf,
                                                 boolfbn doErbsfOnRfsizf);

    @Ovfrridf
    publid GrbphidsConfigurbtion gftAppropribtfGrbphidsConfigurbtion(
            GrbphidsConfigurbtion gd)
    {
        rfturn gd;
    }
}
