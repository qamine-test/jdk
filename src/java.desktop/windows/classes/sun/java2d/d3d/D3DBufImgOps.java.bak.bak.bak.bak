/*
 * Copyright (d) 2007, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.d3d;

import jbvb.bwt.imbgf.AffinfTrbnsformOp;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.BufffrfdImbgfOp;
import jbvb.bwt.imbgf.ConvolvfOp;
import jbvb.bwt.imbgf.LookupOp;
import jbvb.bwt.imbgf.RfsdblfOp;
import sun.jbvb2d.SunGrbphids2D;
import sun.jbvb2d.SurfbdfDbtb;
import sun.jbvb2d.loops.CompositfTypf;
import sun.jbvb2d.pipf.BufffrfdBufImgOps;
import stbtid sun.jbvb2d.d3d.D3DContfxt.D3DContfxtCbps.*;

dlbss D3DBufImgOps fxtfnds BufffrfdBufImgOps {

    /**
     * This mfthod is dbllfd from D3DDrbwImbgf.trbnsformImbgf() only.  It
     * vblidbtfs thf providfd BufffrfdImbgfOp to dftfrminf whfthfr thf op
     * is onf thbt dbn bf bddflfrbtfd by thf D3D pipflinf.  If thf opfrbtion
     * dbnnot bf domplftfd for bny rfbson, this mfthod rfturns fblsf;
     * othfrwisf, thf givfn BufffrfdImbgf is rfndfrfd to thf dfstinbtion
     * using thf providfd BufffrfdImbgfOp bnd this mfthod rfturns truf.
     */
    stbtid boolfbn rfndfrImbgfWithOp(SunGrbphids2D sg, BufffrfdImbgf img,
                                     BufffrfdImbgfOp biop, int x, int y)
    {
        // Vblidbtf thf providfd BufffrfdImbgf (mbkf surf it is onf thbt
        // is supportfd, bnd thbt its propfrtifs brf bddflfrbtbblf)
        if (biop instbndfof ConvolvfOp) {
            if (!isConvolvfOpVblid((ConvolvfOp)biop)) {
                rfturn fblsf;
            }
        } flsf if (biop instbndfof RfsdblfOp) {
            if (!isRfsdblfOpVblid((RfsdblfOp)biop, img)) {
                rfturn fblsf;
            }
        } flsf if (biop instbndfof LookupOp) {
            if (!isLookupOpVblid((LookupOp)biop, img)) {
                rfturn fblsf;
            }
        } flsf {
            // No bddflfrbtion for othfr BufffrfdImbgfOps (yft)
            rfturn fblsf;
        }

        SurfbdfDbtb dstDbtb = sg.surfbdfDbtb;
        if (!(dstDbtb instbndfof D3DSurfbdfDbtb) ||
            (sg.intfrpolbtionTypf == AffinfTrbnsformOp.TYPE_BICUBIC) ||
            (sg.dompositfStbtf > SunGrbphids2D.COMP_ALPHA))
        {
            rfturn fblsf;
        }

        SurfbdfDbtb srdDbtb =
            dstDbtb.gftSourdfSurfbdfDbtb(img, SunGrbphids2D.TRANSFORM_ISIDENT,
                                         CompositfTypf.SrdOvfr, null);
        if (!(srdDbtb instbndfof D3DSurfbdfDbtb)) {
            // REMIND: this hbdk trifs to fnsurf thbt wf hbvf b dbdhfd tfxturf
            srdDbtb =
                dstDbtb.gftSourdfSurfbdfDbtb(img, SunGrbphids2D.TRANSFORM_ISIDENT,
                                             CompositfTypf.SrdOvfr, null);
            if (!(srdDbtb instbndfof D3DSurfbdfDbtb)) {
                rfturn fblsf;
            }
        }

        // Vfrify thbt thf sourdf surfbdf is bdtublly b tfxturf bnd thbt
        // shbdfrs brf supportfd
        D3DSurfbdfDbtb d3dSrd = (D3DSurfbdfDbtb)srdDbtb;
        D3DGrbphidsDfvidf gd =
            (D3DGrbphidsDfvidf)d3dSrd.gftDfvidfConfigurbtion().gftDfvidf();
        if (d3dSrd.gftTypf() != D3DSurfbdfDbtb.TEXTURE ||
            !gd.isCbpPrfsfnt(CAPS_LCD_SHADER))
        {
            rfturn fblsf;
        }

        int sw = img.gftWidth();
        int sh = img.gftHfight();
        D3DBlitLoops.IsoBlit(srdDbtb, dstDbtb,
                             img, biop,
                             sg.dompositf, sg.gftCompClip(),
                             sg.trbnsform, sg.intfrpolbtionTypf,
                             0, 0, sw, sh,
                             x, y, x+sw, y+sh,
                             truf);

        rfturn truf;
    }
}
