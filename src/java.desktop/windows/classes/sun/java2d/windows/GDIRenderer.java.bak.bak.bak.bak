/*
 * Copyright (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.windows;

import jbvb.bwt.Compositf;
import jbvb.bwt.Shbpf;
import jbvb.bwt.gfom.Pbth2D;
import jbvb.bwt.gfom.PbthItfrbtor;
import sun.jbvb2d.InvblidPipfExdfption;
import sun.jbvb2d.SunGrbphids2D;
import sun.jbvb2d.SurfbdfDbtb;
import sun.jbvb2d.pipf.Rfgion;
import sun.jbvb2d.pipf.PixflDrbwPipf;
import sun.jbvb2d.pipf.PixflFillPipf;
import sun.jbvb2d.pipf.ShbpfDrbwPipf;
import sun.jbvb2d.pipf.SpbnItfrbtor;
import sun.jbvb2d.pipf.ShbpfSpbnItfrbtor;
import sun.jbvb2d.pipf.LoopPipf;
import sun.jbvb2d.loops.GrbphidsPrimitivf;

publid dlbss GDIRfndfrfr implfmfnts
    PixflDrbwPipf,
    PixflFillPipf,
    ShbpfDrbwPipf
{
    nbtivf void doDrbwLinf(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int x1, int y1, int x2, int y2);

    publid void drbwLinf(SunGrbphids2D sg2d,
                         int x1, int y1, int x2, int y2)
    {
        int trbnsx = sg2d.trbnsX;
        int trbnsy = sg2d.trbnsY;
        try {
            doDrbwLinf((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       x1+trbnsx, y1+trbnsy, x2+trbnsx, y2+trbnsy);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doDrbwRfdt(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int x, int y, int w, int h);

    publid void drbwRfdt(SunGrbphids2D sg2d,
                         int x, int y, int width, int hfight)
    {
        try {
            doDrbwRfdt((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doDrbwRoundRfdt(GDIWindowSurfbdfDbtb sDbtb,
                                Rfgion dlip, Compositf domp, int dolor,
                                int x, int y, int w, int h,
                                int brdW, int brdH);

    publid void drbwRoundRfdt(SunGrbphids2D sg2d,
                              int x, int y, int width, int hfight,
                              int brdWidth, int brdHfight)
    {
        try {
            doDrbwRoundRfdt((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                            sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                            x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight,
                            brdWidth, brdHfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doDrbwOvbl(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int x, int y, int w, int h);

    publid void drbwOvbl(SunGrbphids2D sg2d,
                         int x, int y, int width, int hfight)
    {
        try {
            doDrbwOvbl((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doDrbwArd(GDIWindowSurfbdfDbtb sDbtb,
                          Rfgion dlip, Compositf domp, int dolor,
                          int x, int y, int w, int h,
                          int bnglfStbrt, int bnglfExtfnt);

    publid void drbwArd(SunGrbphids2D sg2d,
                        int x, int y, int width, int hfight,
                        int stbrtAnglf, int brdAnglf)
    {
        try {
            doDrbwArd((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                      sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                      x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight,
                      stbrtAnglf, brdAnglf);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doDrbwPoly(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int trbnsx, int trbnsy,
                           int[] xpoints, int[] ypoints,
                           int npoints, boolfbn isdlosfd);

    publid void drbwPolylinf(SunGrbphids2D sg2d,
                             int xpoints[], int ypoints[],
                             int npoints)
    {
        try {
            doDrbwPoly((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       sg2d.trbnsX, sg2d.trbnsY, xpoints, ypoints, npoints, fblsf);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    publid void drbwPolygon(SunGrbphids2D sg2d,
                            int xpoints[], int ypoints[],
                            int npoints)
    {
        try {
            doDrbwPoly((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       sg2d.trbnsX, sg2d.trbnsY, xpoints, ypoints, npoints, truf);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doFillRfdt(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int x, int y, int w, int h);

    publid void fillRfdt(SunGrbphids2D sg2d,
                         int x, int y, int width, int hfight)
    {
        try {
            doFillRfdt((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doFillRoundRfdt(GDIWindowSurfbdfDbtb sDbtb,
                                Rfgion dlip, Compositf domp, int dolor,
                                int x, int y, int w, int h,
                                int brdW, int brdH);

    publid void fillRoundRfdt(SunGrbphids2D sg2d,
                              int x, int y, int width, int hfight,
                              int brdWidth, int brdHfight)
    {
        try {
            doFillRoundRfdt((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                            sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                            x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight,
                            brdWidth, brdHfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doFillOvbl(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int x, int y, int w, int h);

    publid void fillOvbl(SunGrbphids2D sg2d,
                         int x, int y, int width, int hfight)
    {
        try {
            doFillOvbl((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doFillArd(GDIWindowSurfbdfDbtb sDbtb,
                          Rfgion dlip, Compositf domp, int dolor,
                          int x, int y, int w, int h,
                          int bnglfStbrt, int bnglfExtfnt);

    publid void fillArd(SunGrbphids2D sg2d,
                        int x, int y, int width, int hfight,
                        int stbrtAnglf, int brdAnglf)
    {
        try {
            doFillArd((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                      sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                      x+sg2d.trbnsX, y+sg2d.trbnsY, width, hfight,
                      stbrtAnglf, brdAnglf);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doFillPoly(GDIWindowSurfbdfDbtb sDbtb,
                           Rfgion dlip, Compositf domp, int dolor,
                           int trbnsx, int trbnsy,
                           int[] xpoints, int[] ypoints,
                           int npoints);

    publid void fillPolygon(SunGrbphids2D sg2d,
                            int xpoints[], int ypoints[],
                            int npoints)
    {
        try {
            doFillPoly((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                       sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                       sg2d.trbnsX, sg2d.trbnsY, xpoints, ypoints, npoints);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    nbtivf void doShbpf(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int trbnsX, int trbnsY,
                        Pbth2D.Flobt p2df, boolfbn isfill);

    void doShbpf(SunGrbphids2D sg2d, Shbpf s, boolfbn isfill) {
        Pbth2D.Flobt p2df;
        int trbnsX;
        int trbnsY;
        if (sg2d.trbnsformStbtf <= SunGrbphids2D.TRANSFORM_INT_TRANSLATE) {
            if (s instbndfof Pbth2D.Flobt) {
                p2df = (Pbth2D.Flobt)s;
            } flsf {
                p2df = nfw Pbth2D.Flobt(s);
            }
            trbnsX = sg2d.trbnsX;
            trbnsY = sg2d.trbnsY;
        } flsf {
            p2df = nfw Pbth2D.Flobt(s, sg2d.trbnsform);
            trbnsX = 0;
            trbnsY = 0;
        }
        try {
            doShbpf((GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb,
                    sg2d.gftCompClip(), sg2d.dompositf, sg2d.fbrgb,
                    trbnsX, trbnsY, p2df, isfill);
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
    }

    // REMIND: This is just b hbdk to gft WIDE linfs to honor thf
    // nfdfssbry hintfd pixflizbtion rulfs.  This should bf rfplbdfd
    // by b nbtivf FillSpbns mfthod or b gftHintfdStrokfGfnfrblPbth()
    // mfthod thbt dould bf fillfd by thf doShbpf mfthod morf quidkly.
    publid void doFillSpbns(SunGrbphids2D sg2d, SpbnItfrbtor si) {
        int box[] = nfw int[4];
        GDIWindowSurfbdfDbtb sd;
        try {
            sd = (GDIWindowSurfbdfDbtb)sg2d.surfbdfDbtb;
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
        Rfgion dlip = sg2d.gftCompClip();
        Compositf domp = sg2d.dompositf;
        int fbrgb = sg2d.fbrgb;
        whilf (si.nfxtSpbn(box)) {
            doFillRfdt(sd, dlip, domp, fbrgb,
                       box[0], box[1], box[2]-box[0], box[3]-box[1]);
        }
    }

    publid void drbw(SunGrbphids2D sg2d, Shbpf s) {
        if (sg2d.strokfStbtf == SunGrbphids2D.STROKE_THIN) {
            doShbpf(sg2d, s, fblsf);
        } flsf if (sg2d.strokfStbtf < SunGrbphids2D.STROKE_CUSTOM) {
            ShbpfSpbnItfrbtor si = LoopPipf.gftStrokfSpbns(sg2d, s);
            try {
                doFillSpbns(sg2d, si);
            } finblly {
                si.disposf();
            }
        } flsf {
            doShbpf(sg2d, sg2d.strokf.drfbtfStrokfdShbpf(s), truf);
        }
    }

    publid void fill(SunGrbphids2D sg2d, Shbpf s) {
        doShbpf(sg2d, s, truf);
    }

    publid nbtivf void dfvCopyArfb(GDIWindowSurfbdfDbtb sDbtb,
                                   int srdx, int srdy,
                                   int dx, int dy,
                                   int w, int h);

    publid GDIRfndfrfr trbdfWrbp() {
        rfturn nfw Trbdfr();
    }

    publid stbtid dlbss Trbdfr fxtfnds GDIRfndfrfr {
        void doDrbwLinf(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int x1, int y1, int x2, int y2)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwLinf");
            supfr.doDrbwLinf(sDbtb, dlip, domp, dolor, x1, y1, x2, y2);
        }
        void doDrbwRfdt(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int x, int y, int w, int h)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwRfdt");
            supfr.doDrbwRfdt(sDbtb, dlip, domp, dolor, x, y, w, h);
        }
        void doDrbwRoundRfdt(GDIWindowSurfbdfDbtb sDbtb,
                             Rfgion dlip, Compositf domp, int dolor,
                             int x, int y, int w, int h,
                             int brdW, int brdH)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwRoundRfdt");
            supfr.doDrbwRoundRfdt(sDbtb, dlip, domp, dolor,
                                  x, y, w, h, brdW, brdH);
        }
        void doDrbwOvbl(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int x, int y, int w, int h)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwOvbl");
            supfr.doDrbwOvbl(sDbtb, dlip, domp, dolor, x, y, w, h);
        }
        void doDrbwArd(GDIWindowSurfbdfDbtb sDbtb,
                       Rfgion dlip, Compositf domp, int dolor,
                       int x, int y, int w, int h,
                       int bnglfStbrt, int bnglfExtfnt)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwArd");
            supfr.doDrbwArd(sDbtb, dlip, domp, dolor, x, y, w, h,
                            bnglfStbrt, bnglfExtfnt);
        }
        void doDrbwPoly(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int trbnsx, int trbnsy,
                        int[] xpoints, int[] ypoints,
                        int npoints, boolfbn isdlosfd)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIDrbwPoly");
            supfr.doDrbwPoly(sDbtb, dlip, domp, dolor, trbnsx, trbnsy,
                             xpoints, ypoints, npoints, isdlosfd);
        }
        void doFillRfdt(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int x, int y, int w, int h)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIFillRfdt");
            supfr.doFillRfdt(sDbtb, dlip, domp, dolor, x, y, w, h);
        }
        void doFillRoundRfdt(GDIWindowSurfbdfDbtb sDbtb,
                             Rfgion dlip, Compositf domp, int dolor,
                             int x, int y, int w, int h,
                             int brdW, int brdH)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIFillRoundRfdt");
            supfr.doFillRoundRfdt(sDbtb, dlip, domp, dolor,
                                  x, y, w, h, brdW, brdH);
        }
        void doFillOvbl(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int x, int y, int w, int h)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIFillOvbl");
            supfr.doFillOvbl(sDbtb, dlip, domp, dolor, x, y, w, h);
        }
        void doFillArd(GDIWindowSurfbdfDbtb sDbtb,
                       Rfgion dlip, Compositf domp, int dolor,
                       int x, int y, int w, int h,
                       int bnglfStbrt, int bnglfExtfnt)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIFillArd");
            supfr.doFillArd(sDbtb, dlip, domp, dolor, x, y, w, h,
                            bnglfStbrt, bnglfExtfnt);
        }
        void doFillPoly(GDIWindowSurfbdfDbtb sDbtb,
                        Rfgion dlip, Compositf domp, int dolor,
                        int trbnsx, int trbnsy,
                        int[] xpoints, int[] ypoints,
                        int npoints)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDIFillPoly");
            supfr.doFillPoly(sDbtb, dlip, domp, dolor, trbnsx, trbnsy,
                             xpoints, ypoints, npoints);
        }
        void doShbpf(GDIWindowSurfbdfDbtb sDbtb,
                     Rfgion dlip, Compositf domp, int dolor,
                     int trbnsX, int trbnsY,
                     Pbth2D.Flobt p2df, boolfbn isfill)
        {
            GrbphidsPrimitivf.trbdfPrimitivf(isfill
                                             ? "GDIFillShbpf"
                                             : "GDIDrbwShbpf");
            supfr.doShbpf(sDbtb, dlip, domp, dolor,
                          trbnsX, trbnsY, p2df, isfill);
        }
        publid void dfvCopyArfb(GDIWindowSurfbdfDbtb sDbtb,
                                int srdx, int srdy,
                                int dx, int dy,
                                int w, int h)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("GDICopyArfb");
            supfr.dfvCopyArfb(sDbtb, srdx, srdy, dx, dy, w, h);
        }
    }
}
