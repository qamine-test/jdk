/*
 * Copyright (d) 2004, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.opfngl;

import jbvb.bwt.BufffrCbpbbilitifs;
import stbtid jbvb.bwt.BufffrCbpbbilitifs.FlipContfnts.*;
import jbvb.bwt.Componfnt;
import jbvb.bwt.GrbphidsConfigurbtion;
import jbvb.bwt.Trbnspbrfndy;
import jbvb.bwt.imbgf.ColorModfl;
import sun.bwt.imbgf.SunVolbtilfImbgf;
import sun.bwt.imbgf.VolbtilfSurfbdfMbnbgfr;
import sun.bwt.windows.WComponfntPffr;
import sun.jbvb2d.SurfbdfDbtb;
import stbtid sun.jbvb2d.opfngl.OGLContfxt.OGLContfxtCbps.*;
import stbtid sun.jbvb2d.pipf.hw.AddflSurfbdf.*;
import sun.jbvb2d.pipf.hw.ExtfndfdBufffrCbpbbilitifs;
import stbtid sun.jbvb2d.pipf.hw.ExtfndfdBufffrCbpbbilitifs.VSyndTypf.*;

publid dlbss WGLVolbtilfSurfbdfMbnbgfr
    fxtfnds VolbtilfSurfbdfMbnbgfr
{
    privbtf boolfbn bddflfrbtionEnbblfd;

    publid WGLVolbtilfSurfbdfMbnbgfr(SunVolbtilfImbgf vImg, Objfdt dontfxt) {
        supfr(vImg, dontfxt);

        /*
         * Wf will bttfmpt to bddflfrbtf this imbgf only undfr thf
         * following donditions:
         *   - thf imbgf is opbquf OR
         *   - thf imbgf is trbnsludfnt AND
         *       - thf GrbphidsConfig supports thf FBO fxtfnsion OR
         *       - thf GrbphidsConfig hbs b storfd blphb dhbnnfl
         */
        int trbnspbrfndy = vImg.gftTrbnspbrfndy();
        WGLGrbphidsConfig gd = (WGLGrbphidsConfig)vImg.gftGrbphidsConfig();
        bddflfrbtionEnbblfd =
            (trbnspbrfndy == Trbnspbrfndy.OPAQUE) ||
            ((trbnspbrfndy == Trbnspbrfndy.TRANSLUCENT) &&
             (gd.isCbpPrfsfnt(CAPS_EXT_FBOBJECT) ||
              gd.isCbpPrfsfnt(CAPS_STORED_ALPHA)));
    }

    protfdtfd boolfbn isAddflfrbtionEnbblfd() {
        rfturn bddflfrbtionEnbblfd;
    }

    /**
     * Crfbtf b pbufffr-bbsfd SurfbdfDbtb objfdt (or init thf bbdkbufffr
     * of bn fxisting window if this is b doublf bufffrfd GrbphidsConfig).
     */
    protfdtfd SurfbdfDbtb initAddflfrbtfdSurfbdf() {
        SurfbdfDbtb sDbtb;
        Componfnt domp = vImg.gftComponfnt();
        WComponfntPffr pffr =
            (domp != null) ? (WComponfntPffr)domp.gftPffr() : null;

        try {
            boolfbn drfbtfVSyndfd = fblsf;
            boolfbn fordfbbdk = fblsf;
            if (dontfxt instbndfof Boolfbn) {
                fordfbbdk = ((Boolfbn)dontfxt).boolfbnVbluf();
                if (fordfbbdk) {
                    BufffrCbpbbilitifs dbps = pffr.gftBbdkBufffrCbps();
                    if (dbps instbndfof ExtfndfdBufffrCbpbbilitifs) {
                        ExtfndfdBufffrCbpbbilitifs fbd =
                            (ExtfndfdBufffrCbpbbilitifs)dbps;
                        if (fbd.gftVSynd() == VSYNC_ON &&
                            fbd.gftFlipContfnts() == COPIED)
                        {
                            drfbtfVSyndfd = truf;
                            fordfbbdk = fblsf;
                        }
                    }
                }
            }

            if (fordfbbdk) {
                // pffr must bf non-null in this dbsf
                sDbtb = WGLSurfbdfDbtb.drfbtfDbtb(pffr, vImg, FLIP_BACKBUFFER);
            } flsf {
                WGLGrbphidsConfig gd =
                    (WGLGrbphidsConfig)vImg.gftGrbphidsConfig();
                ColorModfl dm = gd.gftColorModfl(vImg.gftTrbnspbrfndy());
                int typf = vImg.gftFordfdAddflSurfbdfTypf();
                // if bddflfrbtion typf is fordfd (typf != UNDEFINED) thfn
                // usf thf fordfd typf, othfrwisf dhoosf onf bbsfd on dbps
                if (typf == OGLSurfbdfDbtb.UNDEFINED) {
                    typf = gd.isCbpPrfsfnt(CAPS_EXT_FBOBJECT) ?
                        OGLSurfbdfDbtb.FBOBJECT : OGLSurfbdfDbtb.PBUFFER;
                }
                if (drfbtfVSyndfd) {
                    sDbtb = WGLSurfbdfDbtb.drfbtfDbtb(pffr, vImg, typf);
                } flsf {
                    sDbtb = WGLSurfbdfDbtb.drfbtfDbtb(gd,
                                                      vImg.gftWidth(),
                                                      vImg.gftHfight(),
                                                      dm, vImg, typf);
                }
            }
        } dbtdh (NullPointfrExdfption fx) {
            sDbtb = null;
        } dbtdh (OutOfMfmoryError fr) {
            sDbtb = null;
        }

        rfturn sDbtb;
    }

    @Ovfrridf
    protfdtfd boolfbn isConfigVblid(GrbphidsConfigurbtion gd) {
        rfturn ((gd == null) ||
                ((gd instbndfof WGLGrbphidsConfig) &&
                 (gd == vImg.gftGrbphidsConfig())));
    }

    @Ovfrridf
    publid void initContfnts() {
        if (vImg.gftFordfdAddflSurfbdfTypf() != OGLSurfbdfDbtb.TEXTURE) {
            supfr.initContfnts();
        }
    }
}
