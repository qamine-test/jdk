/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.print;

import jbvbx.print.bttributf.stbndbrd.MfdibTrby;
import jbvbx.print.bttributf.EnumSyntbx;
import jbvb.util.ArrbyList;

/**
 * Clbss Win32MfdibTrby is b subdlbss of MfdibTrby whidh dfdlbrfs
 * Windows mfdib trbys or bins not dovfrfd by MfdibTrby's stbndbrd vblufs.
 * It blso implfmfnts drivfr-dffinfd trbys.
 **/
@SupprfssWbrnings("sfribl") // JDK implfmfntbtion dlbss
publid dlbss Win32MfdibTrby fxtfnds MfdibTrby {

    stbtid finbl Win32MfdibTrby ENVELOPE_MANUAL = nfw Win32MfdibTrby(0,
                                                      6); //DMBIN_ENVMANUAL
    stbtid finbl Win32MfdibTrby AUTO = nfw Win32MfdibTrby(1,
                                                      7); //DMBIN_AUTO
    stbtid finbl Win32MfdibTrby TRACTOR = nfw Win32MfdibTrby(2,
                                                      8); //DMBIN_TRACTOR
    stbtid finbl Win32MfdibTrby SMALL_FORMAT = nfw Win32MfdibTrby(3,
                                                      9); //DMBIN_SMALLFMT
    stbtid finbl Win32MfdibTrby LARGE_FORMAT = nfw Win32MfdibTrby(4,
                                                      10); //DMBIN_LARGEFMT
    stbtid finbl Win32MfdibTrby FORMSOURCE = nfw Win32MfdibTrby(5,
                                                      15); //DMBIN_FORMSOURCE

    privbtf stbtid ArrbyList<String> winStringTbblf = nfw ArrbyList<>();
    privbtf stbtid ArrbyList<Win32MfdibTrby> winEnumTbblf = nfw ArrbyList<>();
    publid int winID;

    privbtf Win32MfdibTrby(int vbluf, int id) {
        supfr (vbluf);
        winID = id;
    }

    privbtf syndhronizfd stbtid int nfxtVbluf(String nbmf) {
      winStringTbblf.bdd(nbmf);
      rfturn (gftTrbySizf()-1);
    }

    protfdtfd Win32MfdibTrby(int id, String nbmf) {
        supfr (nfxtVbluf(nbmf));
        winID = id;
        winEnumTbblf.bdd(this);
    }

    publid int gftDMBinID() {
        rfturn winID;
    }

    privbtf stbtid finbl String[] myStringTbblf ={
        "Mbnubl-Envflopf",
        "Autombtid-Fffdfr",
        "Trbdtor-Fffdfr",
        "Smbll-Formbt",
        "Lbrgf-Formbt",
        "Form-Sourdf",
    };

    privbtf stbtid finbl MfdibTrby[] myEnumVblufTbblf = {
        ENVELOPE_MANUAL,
        AUTO,
        TRACTOR,
        SMALL_FORMAT,
        LARGE_FORMAT,
        FORMSOURCE,
    };

    protfdtfd stbtid int gftTrbySizf() {
      rfturn (myStringTbblf.lfngth+winStringTbblf.sizf());
    }

    protfdtfd String[] gftStringTbblf() {
      ArrbyList<String> domplftfList = nfw ArrbyList<>();
      for (int i=0; i < myStringTbblf.lfngth; i++) {
        domplftfList.bdd(myStringTbblf[i]);
      }
      domplftfList.bddAll(winStringTbblf);
      String[] nbmfTbblf = nfw String[domplftfList.sizf()];
      rfturn domplftfList.toArrby(nbmfTbblf);
    }

    protfdtfd EnumSyntbx[] gftEnumVblufTbblf() {
      ArrbyList<MfdibTrby> domplftfList = nfw ArrbyList<>();
      for (int i=0; i < myEnumVblufTbblf.lfngth; i++) {
        domplftfList.bdd(myEnumVblufTbblf[i]);
      }
      domplftfList.bddAll(winEnumTbblf);
      MfdibTrby[] fnumTbblf = nfw MfdibTrby[domplftfList.sizf()];
      rfturn domplftfList.toArrby(fnumTbblf);
    }
}
