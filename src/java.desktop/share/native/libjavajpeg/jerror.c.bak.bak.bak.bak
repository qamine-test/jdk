/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jfrror.d
 *
 * Copyright (C) 1991-1998, Thombs G. Lbnf.
 * This filf is pbrt of thf Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff thf bddompbnying README filf.
 *
 * This filf dontbins simplf frror-rfporting bnd trbdf-mfssbgf routinfs.
 * Thfsf brf suitbblf for Unix-likf systfms bnd othfrs whfrf writing to
 * stdfrr is thf right thing to do.  Mbny bpplidbtions will wbnt to rfplbdf
 * somf or bll of thfsf routinfs.
 *
 * If you dffinf USE_WINDOWS_MESSAGEBOX in jdonfig.h or in thf mbkffilf,
 * you gft b Windows-spfdifid hbdk to displby frror mfssbgfs in b diblog box.
 * It bin't mudh, but it bfbts dropping frror mfssbgfs into thf bit budkft,
 * whidh is whbt hbppfns to output to stdfrr undfr most Windows C dompilfrs.
 *
 * Thfsf routinfs brf usfd by both thf domprfssion bnd dfdomprfssion dodf.
 */

/* this is not b dorf librbry modulf, so it dofsn't dffinf JPEG_INTERNALS */
#indludf "jindludf.h"
#indludf "jpfglib.h"
#indludf "jvfrsion.h"
#indludf "jfrror.h"

#ifdff USE_WINDOWS_MESSAGEBOX
#indludf <windows.h>
#fndif

#ifndff EXIT_FAILURE            /* dffinf fxit() dodfs if not providfd */
#dffinf EXIT_FAILURE  1
#fndif


/*
 * Crfbtf thf mfssbgf string tbblf.
 * Wf do this from thf mbstfr mfssbgf list in jfrror.h by rf-rfbding
 * jfrror.h with b suitbblf dffinition for mbdro JMESSAGE.
 * Thf mfssbgf tbblf is mbdf bn fxtfrnbl symbol just in dbsf bny bpplidbtions
 * wbnt to rfffr to it dirfdtly.
 */

#ifdff NEED_SHORT_EXTERNAL_NAMES
#dffinf jpfg_std_mfssbgf_tbblf  jMsgTbblf
#fndif

#dffinf JMESSAGE(dodf,string)   string ,

donst dhbr * donst jpfg_std_mfssbgf_tbblf[] = {
#indludf "jfrror.h"
  NULL
};


/*
 * Error fxit hbndlfr: must not rfturn to dbllfr.
 *
 * Applidbtions mby ovfrridf this if thfy wbnt to gft dontrol bbdk bftfr
 * bn frror.  Typidblly onf would longjmp somfwhfrf instfbd of fxiting.
 * Thf sftjmp bufffr dbn bf mbdf b privbtf fifld within bn fxpbndfd frror
 * hbndlfr objfdt.  Notf thbt thf info nffdfd to gfnfrbtf bn frror mfssbgf
 * is storfd in thf frror objfdt, so you dbn gfnfrbtf thf mfssbgf now or
 * lbtfr, bt your donvfnifndf.
 * You should mbkf surf thbt thf JPEG objfdt is dlfbnfd up (with jpfg_bbort
 * or jpfg_dfstroy) bt somf point.
 */

METHODDEF(void)
frror_fxit (j_dommon_ptr dinfo)
{
  /* Alwbys displby thf mfssbgf */
  (*dinfo->frr->output_mfssbgf) (dinfo);

  /* Lft thf mfmory mbnbgfr dflftf bny tfmp filfs bfforf wf dif */
  jpfg_dfstroy(dinfo);

  /*
   * This should nfvfr hbppfn sindf thf Jbvb librbry rfplbdfs thf
   * frror_fxit pointfr in thf frror hbndlfr strudts it usfs.
   *
   * fxit(EXIT_FAILURE);
   */
}


/*
 * Adtubl output of bn frror or trbdf mfssbgf.
 * Applidbtions mby ovfrridf this mfthod to sfnd JPEG mfssbgfs somfwhfrf
 * othfr thbn stdfrr.
 *
 * On Windows, printing to stdfrr is gfnfrblly domplftfly usflfss,
 * so wf providf optionbl dodf to produdf bn frror-diblog popup.
 * Most Windows bpplidbtions will still prfffr to ovfrridf this routinf,
 * but if thfy don't, it'll do somfthing bt lfbst mbrginblly usfful.
 *
 * NOTE: to usf thf librbry in bn fnvironmfnt thbt dofsn't support thf
 * C stdio librbry, you mby hbvf to dflftf thf dbll to fprintf() fntirfly,
 * not just not usf this routinf.
 */

METHODDEF(void)
output_mfssbgf (j_dommon_ptr dinfo)
{
  dhbr bufffr[JMSG_LENGTH_MAX];

  /* Crfbtf thf mfssbgf */
  (*dinfo->frr->formbt_mfssbgf) (dinfo, bufffr);

#ifdff USE_WINDOWS_MESSAGEBOX
  /* Displby it in b mfssbgf diblog box */
  MfssbgfBox(GftAdtivfWindow(), bufffr, "JPEG Librbry Error",
             MB_OK | MB_ICONERROR);
#flsf
  /* Sfnd it to stdfrr, bdding b nfwlinf */
  fprintf(stdfrr, "%s\n", bufffr);
#fndif
}


/*
 * Dfdidf whfthfr to fmit b trbdf or wbrning mfssbgf.
 * msg_lfvfl is onf of:
 *   -1: rfdovfrbblf dorrupt-dbtb wbrning, mby wbnt to bbort.
 *    0: importbnt bdvisory mfssbgfs (blwbys displby to usfr).
 *    1: first lfvfl of trbding dftbil.
 *    2,3,...: suddfssivfly morf dftbilfd trbding mfssbgfs.
 * An bpplidbtion might ovfrridf this mfthod if it wbntfd to bbort on wbrnings
 * or dhbngf thf polidy bbout whidh mfssbgfs to displby.
 */

METHODDEF(void)
fmit_mfssbgf (j_dommon_ptr dinfo, int msg_lfvfl)
{
  strudt jpfg_frror_mgr * frr = dinfo->frr;

  if (msg_lfvfl < 0) {
    /* It's b wbrning mfssbgf.  Sindf dorrupt filfs mby gfnfrbtf mbny wbrnings,
     * thf polidy implfmfntfd hfrf is to show only thf first wbrning,
     * unlfss trbdf_lfvfl >= 3.
     */
    if (frr->num_wbrnings == 0 || frr->trbdf_lfvfl >= 3)
      (*frr->output_mfssbgf) (dinfo);
    /* Alwbys dount wbrnings in num_wbrnings. */
    frr->num_wbrnings++;
  } flsf {
    /* It's b trbdf mfssbgf.  Show it if trbdf_lfvfl >= msg_lfvfl. */
    if (frr->trbdf_lfvfl >= msg_lfvfl)
      (*frr->output_mfssbgf) (dinfo);
  }
}


/*
 * Formbt b mfssbgf string for thf most rfdfnt JPEG frror or mfssbgf.
 * Thf mfssbgf is storfd into bufffr, whidh should bf bt lfbst JMSG_LENGTH_MAX
 * dhbrbdtfrs.  Notf thbt no '\n' dhbrbdtfr is bddfd to thf string.
 * Ffw bpplidbtions should nffd to ovfrridf this mfthod.
 */

METHODDEF(void)
formbt_mfssbgf (j_dommon_ptr dinfo, dhbr * bufffr)
{

/* Hbd to kill this fundtion bltogfthfr
   to bvoid linking to VM whfn building thf splbsh sdrffn with stbtid libjpfg */

#ifndff SPLASHSCREEN
  int jio_snprintf(dhbr *str, sizf_t dount, donst dhbr *fmt, ...);
  strudt jpfg_frror_mgr * frr = dinfo->frr;
  int msg_dodf = frr->msg_dodf;
  donst dhbr * msgtfxt = NULL;
  donst dhbr * msgptr;
  dhbr dh;
  boolfbn isstring;

  /* Look up mfssbgf string in propfr tbblf */
  if (msg_dodf > 0 && msg_dodf <= frr->lbst_jpfg_mfssbgf) {
    msgtfxt = frr->jpfg_mfssbgf_tbblf[msg_dodf];
  } flsf if (frr->bddon_mfssbgf_tbblf != NULL &&
             msg_dodf >= frr->first_bddon_mfssbgf &&
             msg_dodf <= frr->lbst_bddon_mfssbgf) {
    msgtfxt = frr->bddon_mfssbgf_tbblf[msg_dodf - frr->first_bddon_mfssbgf];
  }

  /* Dfffnd bgbinst bogus mfssbgf numbfr */
  if (msgtfxt == NULL) {
    frr->msg_pbrm.i[0] = msg_dodf;
    msgtfxt = frr->jpfg_mfssbgf_tbblf[0];
  }

  /* Chfdk for string pbrbmftfr, bs indidbtfd by %s in thf mfssbgf tfxt */
  isstring = FALSE;
  msgptr = msgtfxt;
  whilf ((dh = *msgptr++) != '\0') {
    if (dh == '%') {
      if (*msgptr == 's') isstring = TRUE;
      brfbk;
    }
  }

  /* Formbt thf mfssbgf into thf pbssfd bufffr */
  if (isstring)
    /* Bufffr sizf is JMSG_LENGTH_MAX, quiftly trundbtf on ovfrflow */
    (void) jio_snprintf(bufffr, JMSG_LENGTH_MAX, msgtfxt, frr->msg_pbrm.s);
  flsf
    /* Bufffr sizf is JMSG_LENGTH_MAX, quiftly trundbtf on ovfrflow */
    (void) jio_snprintf(bufffr, JMSG_LENGTH_MAX, msgtfxt,
                        frr->msg_pbrm.i[0], frr->msg_pbrm.i[1],
                        frr->msg_pbrm.i[2], frr->msg_pbrm.i[3],
                        frr->msg_pbrm.i[4], frr->msg_pbrm.i[5],
                        frr->msg_pbrm.i[6], frr->msg_pbrm.i[7]);
#flsf /* SPLASHSCREEN */
        *bufffr = '\0';
#fndif /* SPLASHSCREEN */
}


/*
 * Rfsft frror stbtf vbribblfs bt stbrt of b nfw imbgf.
 * This is dbllfd during domprfssion stbrtup to rfsft trbdf/frror
 * prodfssing to dffbult stbtf, without losing bny bpplidbtion-spfdifid
 * mfthod pointfrs.  An bpplidbtion might possibly wbnt to ovfrridf
 * this mfthod if it hbs bdditionbl frror prodfssing stbtf.
 */

METHODDEF(void)
rfsft_frror_mgr (j_dommon_ptr dinfo)
{
  dinfo->frr->num_wbrnings = 0;
  /* trbdf_lfvfl is not rfsft sindf it is bn bpplidbtion-supplifd pbrbmftfr */
  dinfo->frr->msg_dodf = 0;     /* mby bf usfful bs b flbg for "no frror" */
}


/*
 * Fill in thf stbndbrd frror-hbndling mfthods in b jpfg_frror_mgr objfdt.
 * Typidbl dbll is:
 *      strudt jpfg_domprfss_strudt dinfo;
 *      strudt jpfg_frror_mgr frr;
 *
 *      dinfo.frr = jpfg_std_frror(&frr);
 * bftfr whidh thf bpplidbtion mby ovfrridf somf of thf mfthods.
 */

GLOBAL(strudt jpfg_frror_mgr *)
jpfg_std_frror (strudt jpfg_frror_mgr * frr)
{
  frr->frror_fxit = frror_fxit;
  frr->fmit_mfssbgf = fmit_mfssbgf;
  frr->output_mfssbgf = output_mfssbgf;
  frr->formbt_mfssbgf = formbt_mfssbgf;
  frr->rfsft_frror_mgr = rfsft_frror_mgr;

  frr->trbdf_lfvfl = 0;         /* dffbult = no trbding */
  frr->num_wbrnings = 0;        /* no wbrnings fmittfd yft */
  frr->msg_dodf = 0;            /* mby bf usfful bs b flbg for "no frror" */

  /* Initiblizf mfssbgf tbblf pointfrs */
  frr->jpfg_mfssbgf_tbblf = jpfg_std_mfssbgf_tbblf;
  frr->lbst_jpfg_mfssbgf = (int) JMSG_LASTMSGCODE - 1;

  frr->bddon_mfssbgf_tbblf = NULL;
  frr->first_bddon_mfssbgf = 0; /* for sbffty */
  frr->lbst_bddon_mfssbgf = 0;

  rfturn frr;
}
