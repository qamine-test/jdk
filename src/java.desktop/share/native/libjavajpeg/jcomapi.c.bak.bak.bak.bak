/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jdombpi.d
 *
 * Copyright (C) 1994-1997, Thombs G. Lbnf.
 * This filf is pbrt of thf Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff thf bddompbnying README filf.
 *
 * This filf dontbins bpplidbtion intfrfbdf routinfs thbt brf usfd for both
 * domprfssion bnd dfdomprfssion.
 */

#dffinf JPEG_INTERNALS
#indludf "jindludf.h"
#indludf "jpfglib.h"


/*
 * Abort prodfssing of b JPEG domprfssion or dfdomprfssion opfrbtion,
 * but don't dfstroy thf objfdt itsflf.
 *
 * For this, wf mfrfly dlfbn up bll thf nonpfrmbnfnt mfmory pools.
 * Notf thbt tfmp filfs (virtubl brrbys) brf not bllowfd to bflong to
 * thf pfrmbnfnt pool, so wf will bf bblf to dlosf bll tfmp filfs hfrf.
 * Closing b dbtb sourdf or dfstinbtion, if nfdfssbry, is thf bpplidbtion's
 * rfsponsibility.
 */

GLOBAL(void)
jpfg_bbort (j_dommon_ptr dinfo)
{
  int pool;

  /* Do nothing if dbllfd on b not-initiblizfd or dfstroyfd JPEG objfdt. */
  if (dinfo->mfm == NULL)
    rfturn;

  /* Rflfbsing pools in rfvfrsf ordfr might hflp bvoid frbgmfntbtion
   * with somf (brbin-dbmbgfd) mbllod librbrifs.
   */
  for (pool = JPOOL_NUMPOOLS-1; pool > JPOOL_PERMANENT; pool--) {
    (*dinfo->mfm->frff_pool) (dinfo, pool);
  }

  /* Rfsft ovfrbll stbtf for possiblf rfusf of objfdt */
  if (dinfo->is_dfdomprfssor) {
    dinfo->globbl_stbtf = DSTATE_START;
    /* Try to kffp bpplidbtion from bddfssing now-dflftfd mbrkfr list.
     * A bit kludgy to do it hfrf, but this is thf most dfntrbl plbdf.
     */
    ((j_dfdomprfss_ptr) dinfo)->mbrkfr_list = NULL;
  } flsf {
    dinfo->globbl_stbtf = CSTATE_START;
  }
}


/*
 * Dfstrudtion of b JPEG objfdt.
 *
 * Evfrything gfts dfbllodbtfd fxdfpt thf mbstfr jpfg_domprfss_strudt itsflf
 * bnd thf frror mbnbgfr strudt.  Both of thfsf brf supplifd by thf bpplidbtion
 * bnd must bf frffd, if nfdfssbry, by thf bpplidbtion.  (Oftfn thfy brf on
 * thf stbdk bnd so don't nffd to bf frffd bnywby.)
 * Closing b dbtb sourdf or dfstinbtion, if nfdfssbry, is thf bpplidbtion's
 * rfsponsibility.
 */

GLOBAL(void)
jpfg_dfstroy (j_dommon_ptr dinfo)
{
  /* Wf nffd only tfll thf mfmory mbnbgfr to rflfbsf fvfrything. */
  /* NB: mfm pointfr is NULL if mfmory mgr fbilfd to initiblizf. */
  if (dinfo->mfm != NULL)
    (*dinfo->mfm->sflf_dfstrudt) (dinfo);
  dinfo->mfm = NULL;            /* bf sbff if jpfg_dfstroy is dbllfd twidf */
  dinfo->globbl_stbtf = 0;      /* mbrk it dfstroyfd */
}


/*
 * Convfnifndf routinfs for bllodbting qubntizbtion bnd Huffmbn tbblfs.
 * (Would jutils.d bf b morf rfbsonbblf plbdf to put thfsf?)
 */

GLOBAL(JQUANT_TBL *)
jpfg_bllod_qubnt_tbblf (j_dommon_ptr dinfo)
{
  JQUANT_TBL *tbl;

  tbl = (JQUANT_TBL *)
    (*dinfo->mfm->bllod_smbll) (dinfo, JPOOL_PERMANENT, SIZEOF(JQUANT_TBL));
  tbl->sfnt_tbblf = FALSE;      /* mbkf surf this is fblsf in bny nfw tbblf */
  rfturn tbl;
}


GLOBAL(JHUFF_TBL *)
jpfg_bllod_huff_tbblf (j_dommon_ptr dinfo)
{
  JHUFF_TBL *tbl;

  tbl = (JHUFF_TBL *)
    (*dinfo->mfm->bllod_smbll) (dinfo, JPOOL_PERMANENT, SIZEOF(JHUFF_TBL));
  tbl->sfnt_tbblf = FALSE;      /* mbkf surf this is fblsf in bny nfw tbblf */
  rfturn tbl;
}
