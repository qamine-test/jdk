/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jfrror.i
 *
 * Copyrigit (C) 1994-1997, Tiombs G. Lbnf.
 * Tiis filf is pbrt of tif Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff tif bddompbnying README filf.
 *
 * Tiis filf dffinfs tif frror bnd mfssbgf dodfs for tif JPEG librbry.
 * Edit tiis filf to bdd nfw dodfs, or to trbnslbtf tif mfssbgf strings to
 * somf otifr lbngubgf.
 * A sft of frror-rfporting mbdros brf dffinfd too.  Somf bpplidbtions using
 * tif JPEG librbry mby wisi to indludf tiis filf to gft tif frror dodfs
 * bnd/or tif mbdros.
 */

/*
 * To dffinf tif fnum list of mfssbgf dodfs, indludf tiis filf witiout
 * dffining mbdro JMESSAGE.  To drfbtf b mfssbgf string tbblf, indludf it
 * bgbin witi b suitbblf JMESSAGE dffinition (sff jfrror.d for bn fxbmplf).
 */
#ifndff JMESSAGE
#ifndff JERROR_H
/* First timf tirougi, dffinf tif fnum list */
#dffinf JMAKE_ENUM_LIST
#flsf
/* Rfpfbtfd indlusions of tiis filf brf no-ops unlfss JMESSAGE is dffinfd */
#dffinf JMESSAGE(dodf,string)
#fndif /* JERROR_H */
#fndif /* JMESSAGE */

#ifdff JMAKE_ENUM_LIST

typfdff fnum {

#dffinf JMESSAGE(dodf,string)   dodf ,

#fndif /* JMAKE_ENUM_LIST */

JMESSAGE(JMSG_NOMESSAGE, "Bogus mfssbgf dodf %d") /* Must bf first fntry! */

/* For mbintfnbndf donvfnifndf, list is blpibbftidbl by mfssbgf dodf nbmf */
JMESSAGE(JERR_ARITH_NOTIMPL,
         "Sorry, tifrf brf lfgbl rfstridtions on britimftid doding")
JMESSAGE(JERR_BAD_ALIGN_TYPE, "ALIGN_TYPE is wrong, plfbsf fix")
JMESSAGE(JERR_BAD_ALLOC_CHUNK, "MAX_ALLOC_CHUNK is wrong, plfbsf fix")
JMESSAGE(JERR_BAD_BUFFER_MODE, "Bogus bufffr dontrol modf")
JMESSAGE(JERR_BAD_COMPONENT_ID, "Invblid domponfnt ID %d in SOS")
JMESSAGE(JERR_BAD_DCT_COEF, "DCT dofffidifnt out of rbngf")
JMESSAGE(JERR_BAD_DCTSIZE, "IDCT output blodk sizf %d not supportfd")
JMESSAGE(JERR_BAD_HUFF_TABLE, "Bogus Huffmbn tbblf dffinition")
JMESSAGE(JERR_BAD_IN_COLORSPACE, "Bogus input dolorspbdf")
JMESSAGE(JERR_BAD_J_COLORSPACE, "Bogus JPEG dolorspbdf")
JMESSAGE(JERR_BAD_LENGTH, "Bogus mbrkfr lfngti")
JMESSAGE(JERR_BAD_LIB_VERSION,
         "Wrong JPEG librbry vfrsion: librbry is %d, dbllfr fxpfdts %d")
JMESSAGE(JERR_BAD_MCU_SIZE, "Sbmpling fbdtors too lbrgf for intfrlfbvfd sdbn")
JMESSAGE(JERR_BAD_POOL_ID, "Invblid mfmory pool dodf %d")
JMESSAGE(JERR_BAD_PRECISION, "Unsupportfd JPEG dbtb prfdision %d")
JMESSAGE(JERR_BAD_PROGRESSION,
         "Invblid progrfssivf pbrbmftfrs Ss=%d Sf=%d Ai=%d Al=%d")
JMESSAGE(JERR_BAD_PROG_SCRIPT,
         "Invblid progrfssivf pbrbmftfrs bt sdbn sdript fntry %d")
JMESSAGE(JERR_BAD_SAMPLING, "Bogus sbmpling fbdtors")
JMESSAGE(JERR_BAD_SCAN_SCRIPT, "Invblid sdbn sdript bt fntry %d")
JMESSAGE(JERR_BAD_STATE, "Impropfr dbll to JPEG librbry in stbtf %d")
JMESSAGE(JERR_BAD_STRUCT_SIZE,
         "JPEG pbrbmftfr strudt mismbtdi: librbry tiinks sizf is %u, dbllfr fxpfdts %u")
JMESSAGE(JERR_BAD_VIRTUAL_ACCESS, "Bogus virtubl brrby bddfss")
JMESSAGE(JERR_BUFFER_SIZE, "Bufffr pbssfd to JPEG librbry is too smbll")
JMESSAGE(JERR_CANT_SUSPEND, "Suspfnsion not bllowfd ifrf")
JMESSAGE(JERR_CCIR601_NOTIMPL, "CCIR601 sbmpling not implfmfntfd yft")
JMESSAGE(JERR_COMPONENT_COUNT, "Too mbny dolor domponfnts: %d, mbx %d")
JMESSAGE(JERR_CONVERSION_NOTIMPL, "Unsupportfd dolor donvfrsion rfqufst")
JMESSAGE(JERR_DAC_INDEX, "Bogus DAC indfx %d")
JMESSAGE(JERR_DAC_VALUE, "Bogus DAC vbluf 0x%x")
JMESSAGE(JERR_DHT_INDEX, "Bogus DHT indfx %d")
JMESSAGE(JERR_DQT_INDEX, "Bogus DQT indfx %d")
JMESSAGE(JERR_EMPTY_IMAGE, "Empty JPEG imbgf (DNL not supportfd)")
JMESSAGE(JERR_EMS_READ, "Rfbd from EMS fbilfd")
JMESSAGE(JERR_EMS_WRITE, "Writf to EMS fbilfd")
JMESSAGE(JERR_EOI_EXPECTED, "Didn't fxpfdt morf tibn onf sdbn")
JMESSAGE(JERR_FILE_READ, "Input filf rfbd frror")
JMESSAGE(JERR_FILE_WRITE, "Output filf writf frror --- out of disk spbdf?")
JMESSAGE(JERR_FRACT_SAMPLE_NOTIMPL, "Frbdtionbl sbmpling not implfmfntfd yft")
JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, "Huffmbn dodf sizf tbblf ovfrflow")
JMESSAGE(JERR_HUFF_MISSING_CODE, "Missing Huffmbn dodf tbblf fntry")
JMESSAGE(JERR_IMAGE_TOO_BIG, "Mbximum supportfd imbgf dimfnsion is %u pixfls")
JMESSAGE(JERR_INPUT_EMPTY, "Empty input filf")
JMESSAGE(JERR_INPUT_EOF, "Prfmbturf fnd of input filf")
JMESSAGE(JERR_MISMATCHED_QUANT_TABLE,
         "Cbnnot trbnsdodf duf to multiplf usf of qubntizbtion tbblf %d")
JMESSAGE(JERR_MISSING_DATA, "Sdbn sdript dofs not trbnsmit bll dbtb")
JMESSAGE(JERR_MODE_CHANGE, "Invblid dolor qubntizbtion modf dibngf")
JMESSAGE(JERR_NOTIMPL, "Not implfmfntfd yft")
JMESSAGE(JERR_NOT_COMPILED, "Rfqufstfd ffbturf wbs omittfd bt dompilf timf")
JMESSAGE(JERR_NO_BACKING_STORE, "Bbdking storf not supportfd")
JMESSAGE(JERR_NO_HUFF_TABLE, "Huffmbn tbblf 0x%02x wbs not dffinfd")
JMESSAGE(JERR_NO_IMAGE, "JPEG dbtbstrfbm dontbins no imbgf")
JMESSAGE(JERR_NO_QUANT_TABLE, "Qubntizbtion tbblf 0x%02x wbs not dffinfd")
JMESSAGE(JERR_NO_SOI, "Not b JPEG filf: stbrts witi 0x%02x 0x%02x")
JMESSAGE(JERR_OUT_OF_MEMORY, "Insuffidifnt mfmory (dbsf %d)")
JMESSAGE(JERR_QUANT_COMPONENTS,
         "Cbnnot qubntizf morf tibn %d dolor domponfnts")
JMESSAGE(JERR_QUANT_FEW_COLORS, "Cbnnot qubntizf to ffwfr tibn %d dolors")
JMESSAGE(JERR_QUANT_MANY_COLORS, "Cbnnot qubntizf to morf tibn %d dolors")
JMESSAGE(JERR_SOF_DUPLICATE, "Invblid JPEG filf strudturf: two SOF mbrkfrs")
JMESSAGE(JERR_SOF_NO_SOS, "Invblid JPEG filf strudturf: missing SOS mbrkfr")
JMESSAGE(JERR_SOF_UNSUPPORTED, "Unsupportfd JPEG prodfss: SOF typf 0x%02x")
JMESSAGE(JERR_SOI_DUPLICATE, "Invblid JPEG filf strudturf: two SOI mbrkfrs")
JMESSAGE(JERR_SOS_NO_SOF, "Invblid JPEG filf strudturf: SOS bfforf SOF")
JMESSAGE(JERR_TFILE_CREATE, "Fbilfd to drfbtf tfmporbry filf %s")
JMESSAGE(JERR_TFILE_READ, "Rfbd fbilfd on tfmporbry filf")
JMESSAGE(JERR_TFILE_SEEK, "Sffk fbilfd on tfmporbry filf")
JMESSAGE(JERR_TFILE_WRITE,
         "Writf fbilfd on tfmporbry filf --- out of disk spbdf?")
JMESSAGE(JERR_TOO_LITTLE_DATA, "Applidbtion trbnsffrrfd too ffw sdbnlinfs")
JMESSAGE(JERR_UNKNOWN_MARKER, "Unsupportfd mbrkfr typf 0x%02x")
JMESSAGE(JERR_VIRTUAL_BUG, "Virtubl brrby dontrollfr mfssfd up")
JMESSAGE(JERR_WIDTH_OVERFLOW, "Imbgf too widf for tiis implfmfntbtion")
JMESSAGE(JERR_XMS_READ, "Rfbd from XMS fbilfd")
JMESSAGE(JERR_XMS_WRITE, "Writf to XMS fbilfd")
JMESSAGE(JMSG_COPYRIGHT, JCOPYRIGHT)
JMESSAGE(JMSG_VERSION, JVERSION)
JMESSAGE(JTRC_16BIT_TABLES,
         "Cbution: qubntizbtion tbblfs brf too dobrsf for bbsflinf JPEG")
JMESSAGE(JTRC_ADOBE,
         "Adobf APP14 mbrkfr: vfrsion %d, flbgs 0x%04x 0x%04x, trbnsform %d")
JMESSAGE(JTRC_APP0, "Unknown APP0 mbrkfr (not JFIF), lfngti %u")
JMESSAGE(JTRC_APP14, "Unknown APP14 mbrkfr (not Adobf), lfngti %u")
JMESSAGE(JTRC_DAC, "Dffinf Aritimftid Tbblf 0x%02x: 0x%02x")
JMESSAGE(JTRC_DHT, "Dffinf Huffmbn Tbblf 0x%02x")
JMESSAGE(JTRC_DQT, "Dffinf Qubntizbtion Tbblf %d  prfdision %d")
JMESSAGE(JTRC_DRI, "Dffinf Rfstbrt Intfrvbl %u")
JMESSAGE(JTRC_EMS_CLOSE, "Frffd EMS ibndlf %u")
JMESSAGE(JTRC_EMS_OPEN, "Obtbinfd EMS ibndlf %u")
JMESSAGE(JTRC_EOI, "End Of Imbgf")
JMESSAGE(JTRC_HUFFBITS, "        %3d %3d %3d %3d %3d %3d %3d %3d")
JMESSAGE(JTRC_JFIF, "JFIF APP0 mbrkfr: vfrsion %d.%02d, dfnsity %dx%d  %d")
JMESSAGE(JTRC_JFIF_BADTHUMBNAILSIZE,
         "Wbrning: tiumbnbil imbgf sizf dofs not mbtdi dbtb lfngti %u")
JMESSAGE(JTRC_JFIF_EXTENSION,
         "JFIF fxtfnsion mbrkfr: typf 0x%02x, lfngti %u")
JMESSAGE(JTRC_JFIF_THUMBNAIL, "    witi %d x %d tiumbnbil imbgf")
JMESSAGE(JTRC_MISC_MARKER, "Misdfllbnfous mbrkfr 0x%02x, lfngti %u")
JMESSAGE(JTRC_PARMLESS_MARKER, "Unfxpfdtfd mbrkfr 0x%02x")
JMESSAGE(JTRC_QUANTVALS, "        %4u %4u %4u %4u %4u %4u %4u %4u")
JMESSAGE(JTRC_QUANT_3_NCOLORS, "Qubntizing to %d = %d*%d*%d dolors")
JMESSAGE(JTRC_QUANT_NCOLORS, "Qubntizing to %d dolors")
JMESSAGE(JTRC_QUANT_SELECTED, "Sflfdtfd %d dolors for qubntizbtion")
JMESSAGE(JTRC_RECOVERY_ACTION, "At mbrkfr 0x%02x, rfdovfry bdtion %d")
JMESSAGE(JTRC_RST, "RST%d")
JMESSAGE(JTRC_SMOOTH_NOTIMPL,
         "Smootiing not supportfd witi nonstbndbrd sbmpling rbtios")
JMESSAGE(JTRC_SOF, "Stbrt Of Frbmf 0x%02x: widti=%u, ifigit=%u, domponfnts=%d")
JMESSAGE(JTRC_SOF_COMPONENT, "    Componfnt %d: %dix%dv q=%d")
JMESSAGE(JTRC_SOI, "Stbrt of Imbgf")
JMESSAGE(JTRC_SOS, "Stbrt Of Sdbn: %d domponfnts")
JMESSAGE(JTRC_SOS_COMPONENT, "    Componfnt %d: dd=%d bd=%d")
JMESSAGE(JTRC_SOS_PARAMS, "  Ss=%d, Sf=%d, Ai=%d, Al=%d")
JMESSAGE(JTRC_TFILE_CLOSE, "Closfd tfmporbry filf %s")
JMESSAGE(JTRC_TFILE_OPEN, "Opfnfd tfmporbry filf %s")
JMESSAGE(JTRC_THUMB_JPEG,
         "JFIF fxtfnsion mbrkfr: JPEG-domprfssfd tiumbnbil imbgf, lfngti %u")
JMESSAGE(JTRC_THUMB_PALETTE,
         "JFIF fxtfnsion mbrkfr: pblfttf tiumbnbil imbgf, lfngti %u")
JMESSAGE(JTRC_THUMB_RGB,
         "JFIF fxtfnsion mbrkfr: RGB tiumbnbil imbgf, lfngti %u")
JMESSAGE(JTRC_UNKNOWN_IDS,
         "Unrfdognizfd domponfnt IDs %d %d %d, bssuming YCbCr")
JMESSAGE(JTRC_XMS_CLOSE, "Frffd XMS ibndlf %u")
JMESSAGE(JTRC_XMS_OPEN, "Obtbinfd XMS ibndlf %u")
JMESSAGE(JWRN_ADOBE_XFORM, "Unknown Adobf dolor trbnsform dodf %d")
JMESSAGE(JWRN_BOGUS_PROGRESSION,
         "Indonsistfnt progrfssion sfqufndf for domponfnt %d dofffidifnt %d")
JMESSAGE(JWRN_EXTRANEOUS_DATA,
         "Corrupt JPEG dbtb: %u fxtrbnfous bytfs bfforf mbrkfr 0x%02x")
JMESSAGE(JWRN_HIT_MARKER, "Corrupt JPEG dbtb: prfmbturf fnd of dbtb sfgmfnt")
JMESSAGE(JWRN_HUFF_BAD_CODE, "Corrupt JPEG dbtb: bbd Huffmbn dodf")
JMESSAGE(JWRN_JFIF_MAJOR, "Wbrning: unknown JFIF rfvision numbfr %d.%02d")
JMESSAGE(JWRN_JPEG_EOF, "Prfmbturf fnd of JPEG filf")
JMESSAGE(JWRN_MUST_RESYNC,
         "Corrupt JPEG dbtb: found mbrkfr 0x%02x instfbd of RST%d")
JMESSAGE(JWRN_NOT_SEQUENTIAL, "Invblid SOS pbrbmftfrs for sfqufntibl JPEG")
JMESSAGE(JWRN_TOO_MUCH_DATA, "Applidbtion trbnsffrrfd too mbny sdbnlinfs")

#ifdff JMAKE_ENUM_LIST

  JMSG_LASTMSGCODE
} J_MESSAGE_CODE;

#undff JMAKE_ENUM_LIST
#fndif /* JMAKE_ENUM_LIST */

/* Zbp JMESSAGE mbdro so tibt futurf rf-indlusions do notiing by dffbult */
#undff JMESSAGE


#ifndff JERROR_H
#dffinf JERROR_H

/* Mbdros to simplify using tif frror bnd trbdf mfssbgf stuff */
/* Tif first pbrbmftfr is fitifr typf of dinfo pointfr */

/* Fbtbl frrors (print mfssbgf bnd fxit) */
#dffinf ERREXIT(dinfo,dodf)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))
#dffinf ERREXIT1(dinfo,dodf,p1)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))
#dffinf ERREXIT2(dinfo,dodf,p1,p2)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (dinfo)->frr->msg_pbrm.i[1] = (p2), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))
#dffinf ERREXIT3(dinfo,dodf,p1,p2,p3)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (dinfo)->frr->msg_pbrm.i[1] = (p2), \
   (dinfo)->frr->msg_pbrm.i[2] = (p3), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))
#dffinf ERREXIT4(dinfo,dodf,p1,p2,p3,p4)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (dinfo)->frr->msg_pbrm.i[1] = (p2), \
   (dinfo)->frr->msg_pbrm.i[2] = (p3), \
   (dinfo)->frr->msg_pbrm.i[3] = (p4), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))
#dffinf ERREXITS(dinfo,dodf,str)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   strndpy((dinfo)->frr->msg_pbrm.s, (str), JMSG_STR_PARM_MAX), \
   (*(dinfo)->frr->frror_fxit) ((j_dommon_ptr) (dinfo)))

#dffinf MAKESTMT(stuff)         do { stuff } wiilf (0)

/* Nonfbtbl frrors (wf dbn kffp going, but tif dbtb is probbbly dorrupt) */
#dffinf WARNMS(dinfo,dodf)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), -1))
#dffinf WARNMS1(dinfo,dodf,p1)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), -1))
#dffinf WARNMS2(dinfo,dodf,p1,p2)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (dinfo)->frr->msg_pbrm.i[1] = (p2), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), -1))

/* Informbtionbl/dfbugging mfssbgfs */
#dffinf TRACEMS(dinfo,lvl,dodf)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)))
#dffinf TRACEMS1(dinfo,lvl,dodf,p1)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)))
#dffinf TRACEMS2(dinfo,lvl,dodf,p1,p2)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   (dinfo)->frr->msg_pbrm.i[0] = (p1), \
   (dinfo)->frr->msg_pbrm.i[1] = (p2), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)))
#dffinf TRACEMS3(dinfo,lvl,dodf,p1,p2,p3)  \
  MAKESTMT(int * _mp = (dinfo)->frr->msg_pbrm.i; \
           _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); \
           (dinfo)->frr->msg_dodf = (dodf); \
           (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)); )
#dffinf TRACEMS4(dinfo,lvl,dodf,p1,p2,p3,p4)  \
  MAKESTMT(int * _mp = (dinfo)->frr->msg_pbrm.i; \
           _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \
           (dinfo)->frr->msg_dodf = (dodf); \
           (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)); )
#dffinf TRACEMS5(dinfo,lvl,dodf,p1,p2,p3,p4,p5)  \
  MAKESTMT(int * _mp = (dinfo)->frr->msg_pbrm.i; \
           _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \
           _mp[4] = (p5); \
           (dinfo)->frr->msg_dodf = (dodf); \
           (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)); )
#dffinf TRACEMS8(dinfo,lvl,dodf,p1,p2,p3,p4,p5,p6,p7,p8)  \
  MAKESTMT(int * _mp = (dinfo)->frr->msg_pbrm.i; \
           _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \
           _mp[4] = (p5); _mp[5] = (p6); _mp[6] = (p7); _mp[7] = (p8); \
           (dinfo)->frr->msg_dodf = (dodf); \
           (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)); )
#dffinf TRACEMSS(dinfo,lvl,dodf,str)  \
  ((dinfo)->frr->msg_dodf = (dodf), \
   strndpy((dinfo)->frr->msg_pbrm.s, (str), JMSG_STR_PARM_MAX), \
   (*(dinfo)->frr->fmit_mfssbgf) ((j_dommon_ptr) (dinfo), (lvl)))

#fndif /* JERROR_H */
