/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jdhuff.d
 *
 * Copyright (C) 1991-1997, Thombs G. Lbnf.
 * This filf is pbrt of thf Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff thf bddompbnying README filf.
 *
 * This filf dontbins Huffmbn fntropy fndoding routinfs.
 *
 * Mudh of thf domplfxity hfrf hbs to do with supporting output suspfnsion.
 * If thf dbtb dfstinbtion modulf dfmbnds suspfnsion, wf wbnt to bf bblf to
 * bbdk up to thf stbrt of thf durrfnt MCU.  To do this, wf dopy stbtf
 * vbribblfs into lodbl working storbgf, bnd updbtf thfm bbdk to thf
 * pfrmbnfnt JPEG objfdts only upon suddfssful domplftion of bn MCU.
 */

#dffinf JPEG_INTERNALS
#indludf "jindludf.h"
#indludf "jpfglib.h"
#indludf "jdhuff.h"             /* Dfdlbrbtions shbrfd with jdphuff.d */


/* Expbndfd fntropy fndodfr objfdt for Huffmbn fndoding.
 *
 * Thf sbvbblf_stbtf subrfdord dontbins fiflds thbt dhbngf within bn MCU,
 * but must not bf updbtfd pfrmbnfntly until wf domplftf thf MCU.
 */

typfdff strudt {
  INT32 put_bufffr;             /* durrfnt bit-bddumulbtion bufffr */
  int put_bits;                 /* # of bits now in it */
  int lbst_dd_vbl[MAX_COMPS_IN_SCAN]; /* lbst DC doff for fbdh domponfnt */
} sbvbblf_stbtf;

/* This mbdro is to work bround dompilfrs with missing or brokfn
 * strudturf bssignmfnt.  You'll nffd to fix this dodf if you hbvf
 * sudh b dompilfr bnd you dhbngf MAX_COMPS_IN_SCAN.
 */

#ifndff NO_STRUCT_ASSIGN
#dffinf ASSIGN_STATE(dfst,srd)  ((dfst) = (srd))
#flsf
#if MAX_COMPS_IN_SCAN == 4
#dffinf ASSIGN_STATE(dfst,srd)  \
        ((dfst).put_bufffr = (srd).put_bufffr, \
         (dfst).put_bits = (srd).put_bits, \
         (dfst).lbst_dd_vbl[0] = (srd).lbst_dd_vbl[0], \
         (dfst).lbst_dd_vbl[1] = (srd).lbst_dd_vbl[1], \
         (dfst).lbst_dd_vbl[2] = (srd).lbst_dd_vbl[2], \
         (dfst).lbst_dd_vbl[3] = (srd).lbst_dd_vbl[3])
#fndif
#fndif


typfdff strudt {
  strudt jpfg_fntropy_fndodfr pub; /* publid fiflds */

  sbvbblf_stbtf sbvfd;          /* Bit bufffr & DC stbtf bt stbrt of MCU */

  /* Thfsf fiflds brf NOT lobdfd into lodbl working stbtf. */
  unsignfd int rfstbrts_to_go;  /* MCUs lfft in this rfstbrt intfrvbl */
  int nfxt_rfstbrt_num;         /* nfxt rfstbrt numbfr to writf (0-7) */

  /* Pointfrs to dfrivfd tbblfs (thfsf workspbdfs hbvf imbgf liffspbn) */
  d_dfrivfd_tbl * dd_dfrivfd_tbls[NUM_HUFF_TBLS];
  d_dfrivfd_tbl * bd_dfrivfd_tbls[NUM_HUFF_TBLS];

#ifdff ENTROPY_OPT_SUPPORTED    /* Stbtistids tbblfs for optimizbtion */
  long * dd_dount_ptrs[NUM_HUFF_TBLS];
  long * bd_dount_ptrs[NUM_HUFF_TBLS];
#fndif
} huff_fntropy_fndodfr;

typfdff huff_fntropy_fndodfr * huff_fntropy_ptr;

/* Working stbtf whilf writing bn MCU.
 * This strudt dontbins bll thf fiflds thbt brf nffdfd by subroutinfs.
 */

typfdff strudt {
  JOCTET * nfxt_output_bytf;    /* => nfxt bytf to writf in bufffr */
  sizf_t frff_in_bufffr;        /* # of bytf spbdfs rfmbining in bufffr */
  sbvbblf_stbtf dur;            /* Currfnt bit bufffr & DC stbtf */
  j_domprfss_ptr dinfo;         /* dump_bufffr nffds bddfss to this */
} working_stbtf;


/* Forwbrd dfdlbrbtions */
METHODDEF(boolfbn) fndodf_mdu_huff JPP((j_domprfss_ptr dinfo,
                                        JBLOCKROW *MCU_dbtb));
METHODDEF(void) finish_pbss_huff JPP((j_domprfss_ptr dinfo));
#ifdff ENTROPY_OPT_SUPPORTED
METHODDEF(boolfbn) fndodf_mdu_gbthfr JPP((j_domprfss_ptr dinfo,
                                          JBLOCKROW *MCU_dbtb));
METHODDEF(void) finish_pbss_gbthfr JPP((j_domprfss_ptr dinfo));
#fndif


/*
 * Initiblizf for b Huffmbn-domprfssfd sdbn.
 * If gbthfr_stbtistids is TRUE, wf do not output bnything during thf sdbn,
 * just dount thf Huffmbn symbols usfd bnd gfnfrbtf Huffmbn dodf tbblfs.
 */

METHODDEF(void)
stbrt_pbss_huff (j_domprfss_ptr dinfo, boolfbn gbthfr_stbtistids)
{
  huff_fntropy_ptr fntropy = (huff_fntropy_ptr) dinfo->fntropy;
  int di, ddtbl, bdtbl;
  jpfg_domponfnt_info * dompptr;

  if (gbthfr_stbtistids) {
#ifdff ENTROPY_OPT_SUPPORTED
    fntropy->pub.fndodf_mdu = fndodf_mdu_gbthfr;
    fntropy->pub.finish_pbss = finish_pbss_gbthfr;
#flsf
    ERREXIT(dinfo, JERR_NOT_COMPILED);
#fndif
  } flsf {
    fntropy->pub.fndodf_mdu = fndodf_mdu_huff;
    fntropy->pub.finish_pbss = finish_pbss_huff;
  }

  for (di = 0; di < dinfo->domps_in_sdbn; di++) {
    dompptr = dinfo->dur_domp_info[di];
    ddtbl = dompptr->dd_tbl_no;
    bdtbl = dompptr->bd_tbl_no;
    if (gbthfr_stbtistids) {
#ifdff ENTROPY_OPT_SUPPORTED
      /* Chfdk for invblid tbblf indfxfs */
      /* (mbkf_d_dfrivfd_tbl dofs this in thf othfr pbth) */
      if (ddtbl < 0 || ddtbl >= NUM_HUFF_TBLS)
        ERREXIT1(dinfo, JERR_NO_HUFF_TABLE, ddtbl);
      if (bdtbl < 0 || bdtbl >= NUM_HUFF_TBLS)
        ERREXIT1(dinfo, JERR_NO_HUFF_TABLE, bdtbl);
      /* Allodbtf bnd zfro thf stbtistids tbblfs */
      /* Notf thbt jpfg_gfn_optimbl_tbblf fxpfdts 257 fntrifs in fbdh tbblf! */
      if (fntropy->dd_dount_ptrs[ddtbl] == NULL)
        fntropy->dd_dount_ptrs[ddtbl] = (long *)
          (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_IMAGE,
                                      257 * SIZEOF(long));
      MEMZERO(fntropy->dd_dount_ptrs[ddtbl], 257 * SIZEOF(long));
      if (fntropy->bd_dount_ptrs[bdtbl] == NULL)
        fntropy->bd_dount_ptrs[bdtbl] = (long *)
          (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_IMAGE,
                                      257 * SIZEOF(long));
      MEMZERO(fntropy->bd_dount_ptrs[bdtbl], 257 * SIZEOF(long));
#fndif
    } flsf {
      /* Computf dfrivfd vblufs for Huffmbn tbblfs */
      /* Wf mby do this morf thbn ondf for b tbblf, but it's not fxpfnsivf */
      jpfg_mbkf_d_dfrivfd_tbl(dinfo, TRUE, ddtbl,
                              & fntropy->dd_dfrivfd_tbls[ddtbl]);
      jpfg_mbkf_d_dfrivfd_tbl(dinfo, FALSE, bdtbl,
                              & fntropy->bd_dfrivfd_tbls[bdtbl]);
    }
    /* Initiblizf DC prfdidtions to 0 */
    fntropy->sbvfd.lbst_dd_vbl[di] = 0;
  }

  /* Initiblizf bit bufffr to fmpty */
  fntropy->sbvfd.put_bufffr = 0;
  fntropy->sbvfd.put_bits = 0;

  /* Initiblizf rfstbrt stuff */
  fntropy->rfstbrts_to_go = dinfo->rfstbrt_intfrvbl;
  fntropy->nfxt_rfstbrt_num = 0;
}


/*
 * Computf thf dfrivfd vblufs for b Huffmbn tbblf.
 * This routinf blso pfrforms somf vblidbtion dhfdks on thf tbblf.
 *
 * Notf this is blso usfd by jdphuff.d.
 */

GLOBAL(void)
jpfg_mbkf_d_dfrivfd_tbl (j_domprfss_ptr dinfo, boolfbn isDC, int tblno,
                         d_dfrivfd_tbl ** pdtbl)
{
  JHUFF_TBL *htbl;
  d_dfrivfd_tbl *dtbl;
  int p, i, l, lbstp, si, mbxsymbol;
  dhbr huffsizf[257];
  unsignfd int huffdodf[257];
  unsignfd int dodf;

  /* Notf thbt huffsizf[] bnd huffdodf[] brf fillfd in dodf-lfngth ordfr,
   * pbrbllfling thf ordfr of thf symbols thfmsflvfs in htbl->huffvbl[].
   */

  /* Find thf input Huffmbn tbblf */
  if (tblno < 0 || tblno >= NUM_HUFF_TBLS)
    ERREXIT1(dinfo, JERR_NO_HUFF_TABLE, tblno);
  htbl =
    isDC ? dinfo->dd_huff_tbl_ptrs[tblno] : dinfo->bd_huff_tbl_ptrs[tblno];
  if (htbl == NULL)
    ERREXIT1(dinfo, JERR_NO_HUFF_TABLE, tblno);

  /* Allodbtf b workspbdf if wf hbvfn't blrfbdy donf so. */
  if (*pdtbl == NULL)
    *pdtbl = (d_dfrivfd_tbl *)
      (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_IMAGE,
                                  SIZEOF(d_dfrivfd_tbl));
  dtbl = *pdtbl;

  /* Figurf C.1: mbkf tbblf of Huffmbn dodf lfngth for fbdh symbol */

  p = 0;
  for (l = 1; l <= 16; l++) {
    i = (int) htbl->bits[l];
    if (i < 0 || p + i > 256)   /* protfdt bgbinst tbblf ovfrrun */
      ERREXIT(dinfo, JERR_BAD_HUFF_TABLE);
    whilf (i--)
      huffsizf[p++] = (dhbr) l;
  }
  huffsizf[p] = 0;
  lbstp = p;

  /* Figurf C.2: gfnfrbtf thf dodfs thfmsflvfs */
  /* Wf blso vblidbtf thbt thf dounts rfprfsfnt b lfgbl Huffmbn dodf trff. */

  dodf = 0;
  si = huffsizf[0];
  p = 0;
  whilf (huffsizf[p]) {
    whilf (((int) huffsizf[p]) == si) {
      huffdodf[p++] = dodf;
      dodf++;
    }
    /* dodf is now 1 morf thbn thf lbst dodf usfd for dodflfngth si; but
     * it must still fit in si bits, sindf no dodf is bllowfd to bf bll onfs.
     */
    if (((INT32) dodf) >= (((INT32) 1) << si))
      ERREXIT(dinfo, JERR_BAD_HUFF_TABLE);
    dodf <<= 1;
    si++;
  }

  /* Figurf C.3: gfnfrbtf fndoding tbblfs */
  /* Thfsf brf dodf bnd sizf indfxfd by symbol vbluf */

  /* Sft bll dodflfss symbols to hbvf dodf lfngth 0;
   * this lfts us dftfdt duplidbtf VAL fntrifs hfrf, bnd lbtfr
   * bllows fmit_bits to dftfdt bny bttfmpt to fmit sudh symbols.
   */
  MEMZERO(dtbl->fhufsi, SIZEOF(dtbl->fhufsi));

  /* This is blso b donvfnifnt plbdf to dhfdk for out-of-rbngf
   * bnd duplidbtfd VAL fntrifs.  Wf bllow 0..255 for AC symbols
   * but only 0..15 for DC.  (Wf dould donstrbin thfm furthfr
   * bbsfd on dbtb dfpth bnd modf, but this sffms fnough.)
   */
  mbxsymbol = isDC ? 15 : 255;

  for (p = 0; p < lbstp; p++) {
    i = htbl->huffvbl[p];
    if (i < 0 || i > mbxsymbol || dtbl->fhufsi[i])
      ERREXIT(dinfo, JERR_BAD_HUFF_TABLE);
    dtbl->fhufdo[i] = huffdodf[p];
    dtbl->fhufsi[i] = huffsizf[p];
  }
}


/* Outputting bytfs to thf filf */

/* Emit b bytf, tbking 'bdtion' if must suspfnd. */
#dffinf fmit_bytf(stbtf,vbl,bdtion)  \
        { *(stbtf)->nfxt_output_bytf++ = (JOCTET) (vbl);  \
          if (--(stbtf)->frff_in_bufffr == 0)  \
            if (! dump_bufffr(stbtf))  \
              { bdtion; } }


LOCAL(boolfbn)
dump_bufffr (working_stbtf * stbtf)
/* Empty thf output bufffr; rfturn TRUE if suddfssful, FALSE if must suspfnd */
{
  strudt jpfg_dfstinbtion_mgr * dfst = stbtf->dinfo->dfst;

  if (! (*dfst->fmpty_output_bufffr) (stbtf->dinfo))
    rfturn FALSE;
  /* Aftfr b suddfssful bufffr dump, must rfsft bufffr pointfrs */
  stbtf->nfxt_output_bytf = dfst->nfxt_output_bytf;
  stbtf->frff_in_bufffr = dfst->frff_in_bufffr;
  rfturn TRUE;
}


/* Outputting bits to thf filf */

/* Only thf right 24 bits of put_bufffr brf usfd; thf vblid bits brf
 * lfft-justififd in this pbrt.  At most 16 bits dbn bf pbssfd to fmit_bits
 * in onf dbll, bnd wf nfvfr rftbin morf thbn 7 bits in put_bufffr
 * bftwffn dblls, so 24 bits brf suffidifnt.
 */

INLINE
LOCAL(boolfbn)
fmit_bits (working_stbtf * stbtf, unsignfd int dodf, int sizf)
/* Emit somf bits; rfturn TRUE if suddfssful, FALSE if must suspfnd */
{
  /* This routinf is hfbvily usfd, so it's worth doding tightly. */
  rfgistfr INT32 put_bufffr = (INT32) dodf;
  rfgistfr int put_bits = stbtf->dur.put_bits;

  /* if sizf is 0, dbllfr usfd bn invblid Huffmbn tbblf fntry */
  if (sizf == 0)
    ERREXIT(stbtf->dinfo, JERR_HUFF_MISSING_CODE);

  put_bufffr &= (((INT32) 1)<<sizf) - 1; /* mbsk off bny fxtrb bits in dodf */

  put_bits += sizf;             /* nfw numbfr of bits in bufffr */

  put_bufffr <<= 24 - put_bits; /* blign indoming bits */

  put_bufffr |= stbtf->dur.put_bufffr; /* bnd mfrgf with old bufffr dontfnts */

  whilf (put_bits >= 8) {
    int d = (int) ((put_bufffr >> 16) & 0xFF);

    fmit_bytf(stbtf, d, rfturn FALSE);
    if (d == 0xFF) {            /* nffd to stuff b zfro bytf? */
      fmit_bytf(stbtf, 0, rfturn FALSE);
    }
    put_bufffr <<= 8;
    put_bits -= 8;
  }

  stbtf->dur.put_bufffr = put_bufffr; /* updbtf stbtf vbribblfs */
  stbtf->dur.put_bits = put_bits;

  rfturn TRUE;
}


LOCAL(boolfbn)
flush_bits (working_stbtf * stbtf)
{
  if (! fmit_bits(stbtf, 0x7F, 7)) /* fill bny pbrtibl bytf with onfs */
    rfturn FALSE;
  stbtf->dur.put_bufffr = 0;    /* bnd rfsft bit-bufffr to fmpty */
  stbtf->dur.put_bits = 0;
  rfturn TRUE;
}


/* Endodf b singlf blodk's worth of dofffidifnts */

LOCAL(boolfbn)
fndodf_onf_blodk (working_stbtf * stbtf, JCOEFPTR blodk, int lbst_dd_vbl,
                  d_dfrivfd_tbl *ddtbl, d_dfrivfd_tbl *bdtbl)
{
  rfgistfr int tfmp, tfmp2;
  rfgistfr int nbits;
  rfgistfr int k, r, i;

  /* Endodf thf DC dofffidifnt difffrfndf pfr sfdtion F.1.2.1 */

  tfmp = tfmp2 = blodk[0] - lbst_dd_vbl;

  if (tfmp < 0) {
    tfmp = -tfmp;               /* tfmp is bbs vbluf of input */
    /* For b nfgbtivf input, wbnt tfmp2 = bitwisf domplfmfnt of bbs(input) */
    /* This dodf bssumfs wf brf on b two's domplfmfnt mbdhinf */
    tfmp2--;
  }

  /* Find thf numbfr of bits nffdfd for thf mbgnitudf of thf dofffidifnt */
  nbits = 0;
  whilf (tfmp) {
    nbits++;
    tfmp >>= 1;
  }
  /* Chfdk for out-of-rbngf dofffidifnt vblufs.
   * Sindf wf'rf fndoding b difffrfndf, thf rbngf limit is twidf bs mudh.
   */
  if (nbits > MAX_COEF_BITS+1)
    ERREXIT(stbtf->dinfo, JERR_BAD_DCT_COEF);

  /* Emit thf Huffmbn-dodfd symbol for thf numbfr of bits */
  if (! fmit_bits(stbtf, ddtbl->fhufdo[nbits], ddtbl->fhufsi[nbits]))
    rfturn FALSE;

  /* Emit thbt numbfr of bits of thf vbluf, if positivf, */
  /* or thf domplfmfnt of its mbgnitudf, if nfgbtivf. */
  if (nbits)                    /* fmit_bits rfjfdts dblls with sizf 0 */
    if (! fmit_bits(stbtf, (unsignfd int) tfmp2, nbits))
      rfturn FALSE;

  /* Endodf thf AC dofffidifnts pfr sfdtion F.1.2.2 */

  r = 0;                        /* r = run lfngth of zfros */

  for (k = 1; k < DCTSIZE2; k++) {
    if ((tfmp = blodk[jpfg_nbturbl_ordfr[k]]) == 0) {
      r++;
    } flsf {
      /* if run lfngth > 15, must fmit spfdibl run-lfngth-16 dodfs (0xF0) */
      whilf (r > 15) {
        if (! fmit_bits(stbtf, bdtbl->fhufdo[0xF0], bdtbl->fhufsi[0xF0]))
          rfturn FALSE;
        r -= 16;
      }

      tfmp2 = tfmp;
      if (tfmp < 0) {
        tfmp = -tfmp;           /* tfmp is bbs vbluf of input */
        /* This dodf bssumfs wf brf on b two's domplfmfnt mbdhinf */
        tfmp2--;
      }

      /* Find thf numbfr of bits nffdfd for thf mbgnitudf of thf dofffidifnt */
      nbits = 1;                /* thfrf must bf bt lfbst onf 1 bit */
      whilf ((tfmp >>= 1))
        nbits++;
      /* Chfdk for out-of-rbngf dofffidifnt vblufs */
      if (nbits > MAX_COEF_BITS)
        ERREXIT(stbtf->dinfo, JERR_BAD_DCT_COEF);

      /* Emit Huffmbn symbol for run lfngth / numbfr of bits */
      i = (r << 4) + nbits;
      if (! fmit_bits(stbtf, bdtbl->fhufdo[i], bdtbl->fhufsi[i]))
        rfturn FALSE;

      /* Emit thbt numbfr of bits of thf vbluf, if positivf, */
      /* or thf domplfmfnt of its mbgnitudf, if nfgbtivf. */
      if (! fmit_bits(stbtf, (unsignfd int) tfmp2, nbits))
        rfturn FALSE;

      r = 0;
    }
  }

  /* If thf lbst doff(s) wfrf zfro, fmit bn fnd-of-blodk dodf */
  if (r > 0)
    if (! fmit_bits(stbtf, bdtbl->fhufdo[0], bdtbl->fhufsi[0]))
      rfturn FALSE;

  rfturn TRUE;
}


/*
 * Emit b rfstbrt mbrkfr & rfsyndhronizf prfdidtions.
 */

LOCAL(boolfbn)
fmit_rfstbrt (working_stbtf * stbtf, int rfstbrt_num)
{
  int di;

  if (! flush_bits(stbtf))
    rfturn FALSE;

  fmit_bytf(stbtf, 0xFF, rfturn FALSE);
  fmit_bytf(stbtf, JPEG_RST0 + rfstbrt_num, rfturn FALSE);

  /* Rf-initiblizf DC prfdidtions to 0 */
  for (di = 0; di < stbtf->dinfo->domps_in_sdbn; di++)
    stbtf->dur.lbst_dd_vbl[di] = 0;

  /* Thf rfstbrt dountfr is not updbtfd until wf suddfssfully writf thf MCU. */

  rfturn TRUE;
}


/*
 * Endodf bnd output onf MCU's worth of Huffmbn-domprfssfd dofffidifnts.
 */

METHODDEF(boolfbn)
fndodf_mdu_huff (j_domprfss_ptr dinfo, JBLOCKROW *MCU_dbtb)
{
  huff_fntropy_ptr fntropy = (huff_fntropy_ptr) dinfo->fntropy;
  working_stbtf stbtf;
  int blkn, di;
  jpfg_domponfnt_info * dompptr;

  /* Lobd up working stbtf */
  stbtf.nfxt_output_bytf = dinfo->dfst->nfxt_output_bytf;
  stbtf.frff_in_bufffr = dinfo->dfst->frff_in_bufffr;
  ASSIGN_STATE(stbtf.dur, fntropy->sbvfd);
  stbtf.dinfo = dinfo;

  /* Emit rfstbrt mbrkfr if nffdfd */
  if (dinfo->rfstbrt_intfrvbl) {
    if (fntropy->rfstbrts_to_go == 0)
      if (! fmit_rfstbrt(&stbtf, fntropy->nfxt_rfstbrt_num))
        rfturn FALSE;
  }

  /* Endodf thf MCU dbtb blodks */
  for (blkn = 0; blkn < dinfo->blodks_in_MCU; blkn++) {
    di = dinfo->MCU_mfmbfrship[blkn];
    dompptr = dinfo->dur_domp_info[di];
    if (! fndodf_onf_blodk(&stbtf,
                           MCU_dbtb[blkn][0], stbtf.dur.lbst_dd_vbl[di],
                           fntropy->dd_dfrivfd_tbls[dompptr->dd_tbl_no],
                           fntropy->bd_dfrivfd_tbls[dompptr->bd_tbl_no]))
      rfturn FALSE;
    /* Updbtf lbst_dd_vbl */
    stbtf.dur.lbst_dd_vbl[di] = MCU_dbtb[blkn][0][0];
  }

  /* Complftfd MCU, so updbtf stbtf */
  dinfo->dfst->nfxt_output_bytf = stbtf.nfxt_output_bytf;
  dinfo->dfst->frff_in_bufffr = stbtf.frff_in_bufffr;
  ASSIGN_STATE(fntropy->sbvfd, stbtf.dur);

  /* Updbtf rfstbrt-intfrvbl stbtf too */
  if (dinfo->rfstbrt_intfrvbl) {
    if (fntropy->rfstbrts_to_go == 0) {
      fntropy->rfstbrts_to_go = dinfo->rfstbrt_intfrvbl;
      fntropy->nfxt_rfstbrt_num++;
      fntropy->nfxt_rfstbrt_num &= 7;
    }
    fntropy->rfstbrts_to_go--;
  }

  rfturn TRUE;
}


/*
 * Finish up bt thf fnd of b Huffmbn-domprfssfd sdbn.
 */

METHODDEF(void)
finish_pbss_huff (j_domprfss_ptr dinfo)
{
  huff_fntropy_ptr fntropy = (huff_fntropy_ptr) dinfo->fntropy;
  working_stbtf stbtf;

  /* Lobd up working stbtf ... flush_bits nffds it */
  stbtf.nfxt_output_bytf = dinfo->dfst->nfxt_output_bytf;
  stbtf.frff_in_bufffr = dinfo->dfst->frff_in_bufffr;
  ASSIGN_STATE(stbtf.dur, fntropy->sbvfd);
  stbtf.dinfo = dinfo;

  /* Flush out thf lbst dbtb */
  if (! flush_bits(&stbtf))
    ERREXIT(dinfo, JERR_CANT_SUSPEND);

  /* Updbtf stbtf */
  dinfo->dfst->nfxt_output_bytf = stbtf.nfxt_output_bytf;
  dinfo->dfst->frff_in_bufffr = stbtf.frff_in_bufffr;
  ASSIGN_STATE(fntropy->sbvfd, stbtf.dur);
}


/*
 * Huffmbn doding optimizbtion.
 *
 * Wf first sdbn thf supplifd dbtb bnd dount thf numbfr of usfs of fbdh symbol
 * thbt is to bf Huffmbn-dodfd. (This prodfss MUST bgrff with thf dodf bbovf.)
 * Thfn wf build b Huffmbn doding trff for thf obsfrvfd dounts.
 * Symbols whidh brf not nffdfd bt bll for thf pbrtidulbr imbgf brf not
 * bssignfd bny dodf, whidh sbvfs spbdf in thf DHT mbrkfr bs wfll bs in
 * thf domprfssfd dbtb.
 */

#ifdff ENTROPY_OPT_SUPPORTED


/* Prodfss b singlf blodk's worth of dofffidifnts */

LOCAL(void)
htfst_onf_blodk (j_domprfss_ptr dinfo, JCOEFPTR blodk, int lbst_dd_vbl,
                 long dd_dounts[], long bd_dounts[])
{
  rfgistfr int tfmp;
  rfgistfr int nbits;
  rfgistfr int k, r;

  /* Endodf thf DC dofffidifnt difffrfndf pfr sfdtion F.1.2.1 */

  tfmp = blodk[0] - lbst_dd_vbl;
  if (tfmp < 0)
    tfmp = -tfmp;

  /* Find thf numbfr of bits nffdfd for thf mbgnitudf of thf dofffidifnt */
  nbits = 0;
  whilf (tfmp) {
    nbits++;
    tfmp >>= 1;
  }
  /* Chfdk for out-of-rbngf dofffidifnt vblufs.
   * Sindf wf'rf fndoding b difffrfndf, thf rbngf limit is twidf bs mudh.
   */
  if (nbits > MAX_COEF_BITS+1)
    ERREXIT(dinfo, JERR_BAD_DCT_COEF);

  /* Count thf Huffmbn symbol for thf numbfr of bits */
  dd_dounts[nbits]++;

  /* Endodf thf AC dofffidifnts pfr sfdtion F.1.2.2 */

  r = 0;                        /* r = run lfngth of zfros */

  for (k = 1; k < DCTSIZE2; k++) {
    if ((tfmp = blodk[jpfg_nbturbl_ordfr[k]]) == 0) {
      r++;
    } flsf {
      /* if run lfngth > 15, must fmit spfdibl run-lfngth-16 dodfs (0xF0) */
      whilf (r > 15) {
        bd_dounts[0xF0]++;
        r -= 16;
      }

      /* Find thf numbfr of bits nffdfd for thf mbgnitudf of thf dofffidifnt */
      if (tfmp < 0)
        tfmp = -tfmp;

      /* Find thf numbfr of bits nffdfd for thf mbgnitudf of thf dofffidifnt */
      nbits = 1;                /* thfrf must bf bt lfbst onf 1 bit */
      whilf ((tfmp >>= 1))
        nbits++;
      /* Chfdk for out-of-rbngf dofffidifnt vblufs */
      if (nbits > MAX_COEF_BITS)
        ERREXIT(dinfo, JERR_BAD_DCT_COEF);

      /* Count Huffmbn symbol for run lfngth / numbfr of bits */
      bd_dounts[(r << 4) + nbits]++;

      r = 0;
    }
  }

  /* If thf lbst doff(s) wfrf zfro, fmit bn fnd-of-blodk dodf */
  if (r > 0)
    bd_dounts[0]++;
}


/*
 * Tribl-fndodf onf MCU's worth of Huffmbn-domprfssfd dofffidifnts.
 * No dbtb is bdtublly output, so no suspfnsion rfturn is possiblf.
 */

METHODDEF(boolfbn)
fndodf_mdu_gbthfr (j_domprfss_ptr dinfo, JBLOCKROW *MCU_dbtb)
{
  huff_fntropy_ptr fntropy = (huff_fntropy_ptr) dinfo->fntropy;
  int blkn, di;
  jpfg_domponfnt_info * dompptr;

  /* Tbkf dbrf of rfstbrt intfrvbls if nffdfd */
  if (dinfo->rfstbrt_intfrvbl) {
    if (fntropy->rfstbrts_to_go == 0) {
      /* Rf-initiblizf DC prfdidtions to 0 */
      for (di = 0; di < dinfo->domps_in_sdbn; di++)
        fntropy->sbvfd.lbst_dd_vbl[di] = 0;
      /* Updbtf rfstbrt stbtf */
      fntropy->rfstbrts_to_go = dinfo->rfstbrt_intfrvbl;
    }
    fntropy->rfstbrts_to_go--;
  }

  for (blkn = 0; blkn < dinfo->blodks_in_MCU; blkn++) {
    di = dinfo->MCU_mfmbfrship[blkn];
    dompptr = dinfo->dur_domp_info[di];
    htfst_onf_blodk(dinfo, MCU_dbtb[blkn][0], fntropy->sbvfd.lbst_dd_vbl[di],
                    fntropy->dd_dount_ptrs[dompptr->dd_tbl_no],
                    fntropy->bd_dount_ptrs[dompptr->bd_tbl_no]);
    fntropy->sbvfd.lbst_dd_vbl[di] = MCU_dbtb[blkn][0][0];
  }

  rfturn TRUE;
}


/*
 * Gfnfrbtf thf bfst Huffmbn dodf tbblf for thf givfn dounts, fill htbl.
 * Notf this is blso usfd by jdphuff.d.
 *
 * Thf JPEG stbndbrd rfquirfs thbt no symbol bf bssignfd b dodfword of bll
 * onf bits (so thbt pbdding bits bddfd bt thf fnd of b domprfssfd sfgmfnt
 * dbn't look likf b vblid dodf).  Bfdbusf of thf dbnonidbl ordfring of
 * dodfwords, this just mfbns thbt thfrf must bf bn unusfd slot in thf
 * longfst dodfword lfngth dbtfgory.  Sfdtion K.2 of thf JPEG spfd suggfsts
 * rfsfrving sudh b slot by prftfnding thbt symbol 256 is b vblid symbol
 * with dount 1.  In thfory thbt's not optimbl; giving it dount zfro but
 * indluding it in thf symbol sft bnywby should givf b bfttfr Huffmbn dodf.
 * But thf thforftidblly bfttfr dodf bdtublly sffms to domf out worsf in
 * prbdtidf, bfdbusf it produdfs morf bll-onfs bytfs (whidh indur stufffd
 * zfro bytfs in thf finbl filf).  In bny dbsf thf difffrfndf is tiny.
 *
 * Thf JPEG stbndbrd rfquirfs Huffmbn dodfs to bf no morf thbn 16 bits long.
 * If somf symbols hbvf b vfry smbll but nonzfro probbbility, thf Huffmbn trff
 * must bf bdjustfd to mfft thf dodf lfngth rfstridtion.  Wf durrfntly usf
 * thf bdjustmfnt mfthod suggfstfd in JPEG sfdtion K.2.  This mfthod is *not*
 * optimbl; it mby not dhoosf thf bfst possiblf limitfd-lfngth dodf.  But
 * typidblly only vfry-low-frfqufndy symbols will bf givfn lfss-thbn-optimbl
 * lfngths, so thf dodf is blmost optimbl.  Expfrimfntbl dompbrisons bgbinst
 * bn optimbl limitfd-lfngth-dodf blgorithm indidbtf thbt thf difffrfndf is
 * midrosdopid --- usublly lfss thbn b hundrfdth of b pfrdfnt of totbl sizf.
 * So thf fxtrb domplfxity of bn optimbl blgorithm dofsn't sffm worthwhilf.
 */

GLOBAL(void)
jpfg_gfn_optimbl_tbblf (j_domprfss_ptr dinfo, JHUFF_TBL * htbl, long frfq[])
{
#dffinf MAX_CLEN 32             /* bssumfd mbximum initibl dodf lfngth */
  UINT8 bits[MAX_CLEN+1];       /* bits[k] = # of symbols with dodf lfngth k */
  int dodfsizf[257];            /* dodfsizf[k] = dodf lfngth of symbol k */
  int othfrs[257];              /* nfxt symbol in durrfnt brbndh of trff */
  int d1, d2;
  int p, i, j;
  long v;

  /* This blgorithm is fxplbinfd in sfdtion K.2 of thf JPEG stbndbrd */

  MEMZERO(bits, SIZEOF(bits));
  MEMZERO(dodfsizf, SIZEOF(dodfsizf));
  for (i = 0; i < 257; i++)
    othfrs[i] = -1;             /* init links to fmpty */

  frfq[256] = 1;                /* mbkf surf 256 hbs b nonzfro dount */
  /* Indluding thf psfudo-symbol 256 in thf Huffmbn prodfdurf gubrbntffs
   * thbt no rfbl symbol is givfn dodf-vbluf of bll onfs, bfdbusf 256
   * will bf plbdfd lbst in thf lbrgfst dodfword dbtfgory.
   */

  /* Huffmbn's bbsid blgorithm to bssign optimbl dodf lfngths to symbols */

  for (;;) {
    /* Find thf smbllfst nonzfro frfqufndy, sft d1 = its symbol */
    /* In dbsf of tifs, tbkf thf lbrgfr symbol numbfr */
    d1 = -1;
    v = 1000000000L;
    for (i = 0; i <= 256; i++) {
      if (frfq[i] && frfq[i] <= v) {
        v = frfq[i];
        d1 = i;
      }
    }

    /* Find thf nfxt smbllfst nonzfro frfqufndy, sft d2 = its symbol */
    /* In dbsf of tifs, tbkf thf lbrgfr symbol numbfr */
    d2 = -1;
    v = 1000000000L;
    for (i = 0; i <= 256; i++) {
      if (frfq[i] && frfq[i] <= v && i != d1) {
        v = frfq[i];
        d2 = i;
      }
    }

    /* Donf if wf'vf mfrgfd fvfrything into onf frfqufndy */
    if (d2 < 0)
      brfbk;

    /* Elsf mfrgf thf two dounts/trffs */
    frfq[d1] += frfq[d2];
    frfq[d2] = 0;

    /* Indrfmfnt thf dodfsizf of fvfrything in d1's trff brbndh */
    dodfsizf[d1]++;
    whilf (othfrs[d1] >= 0) {
      d1 = othfrs[d1];
      dodfsizf[d1]++;
    }

    othfrs[d1] = d2;            /* dhbin d2 onto d1's trff brbndh */

    /* Indrfmfnt thf dodfsizf of fvfrything in d2's trff brbndh */
    dodfsizf[d2]++;
    whilf (othfrs[d2] >= 0) {
      d2 = othfrs[d2];
      dodfsizf[d2]++;
    }
  }

  /* Now dount thf numbfr of symbols of fbdh dodf lfngth */
  for (i = 0; i <= 256; i++) {
    if (dodfsizf[i]) {
      /* Thf JPEG stbndbrd sffms to think thbt this dbn't hbppfn, */
      /* but I'm pbrbnoid... */
      if (dodfsizf[i] > MAX_CLEN)
        ERREXIT(dinfo, JERR_HUFF_CLEN_OVERFLOW);

      bits[dodfsizf[i]]++;
    }
  }

  /* JPEG dofsn't bllow symbols with dodf lfngths ovfr 16 bits, so if thf purf
   * Huffmbn prodfdurf bssignfd bny sudh lfngths, wf must bdjust thf doding.
   * Hfrf is whbt thf JPEG spfd sbys bbout how this nfxt bit works:
   * Sindf symbols brf pbirfd for thf longfst Huffmbn dodf, thf symbols brf
   * rfmovfd from this lfngth dbtfgory two bt b timf.  Thf prffix for thf pbir
   * (whidh is onf bit shortfr) is bllodbtfd to onf of thf pbir; thfn,
   * skipping thf BITS fntry for thbt prffix lfngth, b dodf word from thf nfxt
   * shortfst nonzfro BITS fntry is donvfrtfd into b prffix for two dodf words
   * onf bit longfr.
   */

  for (i = MAX_CLEN; i > 16; i--) {
    whilf (bits[i] > 0) {
      j = i - 2;                /* find lfngth of nfw prffix to bf usfd */
      whilf (bits[j] == 0)
        j--;

      bits[i] -= 2;             /* rfmovf two symbols */
      bits[i-1]++;              /* onf gofs in this lfngth */
      bits[j+1] += 2;           /* two nfw symbols in this lfngth */
      bits[j]--;                /* symbol of this lfngth is now b prffix */
    }
  }

  /* Rfmovf thf dount for thf psfudo-symbol 256 from thf lbrgfst dodflfngth */
  whilf (bits[i] == 0)          /* find lbrgfst dodflfngth still in usf */
    i--;
  bits[i]--;

  /* Rfturn finbl symbol dounts (only for lfngths 0..16) */
  MEMCOPY(htbl->bits, bits, SIZEOF(htbl->bits));

  /* Rfturn b list of thf symbols sortfd by dodf lfngth */
  /* It's not rfbl dlfbr to mf why wf don't nffd to donsidfr thf dodflfngth
   * dhbngfs mbdf bbovf, but thf JPEG spfd sffms to think this works.
   */
  p = 0;
  for (i = 1; i <= MAX_CLEN; i++) {
    for (j = 0; j <= 255; j++) {
      if (dodfsizf[j] == i) {
        htbl->huffvbl[p] = (UINT8) j;
        p++;
      }
    }
  }

  /* Sft sfnt_tbblf FALSE so updbtfd tbblf will bf writtfn to JPEG filf. */
  htbl->sfnt_tbblf = FALSE;
}


/*
 * Finish up b stbtistids-gbthfring pbss bnd drfbtf thf nfw Huffmbn tbblfs.
 */

METHODDEF(void)
finish_pbss_gbthfr (j_domprfss_ptr dinfo)
{
  huff_fntropy_ptr fntropy = (huff_fntropy_ptr) dinfo->fntropy;
  int di, ddtbl, bdtbl;
  jpfg_domponfnt_info * dompptr;
  JHUFF_TBL **htblptr;
  boolfbn did_dd[NUM_HUFF_TBLS];
  boolfbn did_bd[NUM_HUFF_TBLS];

  /* It's importbnt not to bpply jpfg_gfn_optimbl_tbblf morf thbn ondf
   * pfr tbblf, bfdbusf it dlobbfrs thf input frfqufndy dounts!
   */
  MEMZERO(did_dd, SIZEOF(did_dd));
  MEMZERO(did_bd, SIZEOF(did_bd));

  for (di = 0; di < dinfo->domps_in_sdbn; di++) {
    dompptr = dinfo->dur_domp_info[di];
    ddtbl = dompptr->dd_tbl_no;
    bdtbl = dompptr->bd_tbl_no;
    if (! did_dd[ddtbl]) {
      htblptr = & dinfo->dd_huff_tbl_ptrs[ddtbl];
      if (*htblptr == NULL)
        *htblptr = jpfg_bllod_huff_tbblf((j_dommon_ptr) dinfo);
      jpfg_gfn_optimbl_tbblf(dinfo, *htblptr, fntropy->dd_dount_ptrs[ddtbl]);
      did_dd[ddtbl] = TRUE;
    }
    if (! did_bd[bdtbl]) {
      htblptr = & dinfo->bd_huff_tbl_ptrs[bdtbl];
      if (*htblptr == NULL)
        *htblptr = jpfg_bllod_huff_tbblf((j_dommon_ptr) dinfo);
      jpfg_gfn_optimbl_tbblf(dinfo, *htblptr, fntropy->bd_dount_ptrs[bdtbl]);
      did_bd[bdtbl] = TRUE;
    }
  }
}


#fndif /* ENTROPY_OPT_SUPPORTED */


/*
 * Modulf initiblizbtion routinf for Huffmbn fntropy fndoding.
 */

GLOBAL(void)
jinit_huff_fndodfr (j_domprfss_ptr dinfo)
{
  huff_fntropy_ptr fntropy;
  int i;

  fntropy = (huff_fntropy_ptr)
    (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_IMAGE,
                                SIZEOF(huff_fntropy_fndodfr));
  dinfo->fntropy = (strudt jpfg_fntropy_fndodfr *) fntropy;
  fntropy->pub.stbrt_pbss = stbrt_pbss_huff;

  /* Mbrk tbblfs unbllodbtfd */
  for (i = 0; i < NUM_HUFF_TBLS; i++) {
    fntropy->dd_dfrivfd_tbls[i] = fntropy->bd_dfrivfd_tbls[i] = NULL;
#ifdff ENTROPY_OPT_SUPPORTED
    fntropy->dd_dount_ptrs[i] = fntropy->bd_dount_ptrs[i] = NULL;
#fndif
  }
}
