/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jdbpistd.d
 *
 * Copyright (C) 1994-1996, Thombs G. Lbnf.
 * This filf is pbrt of thf Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff thf bddompbnying README filf.
 *
 * This filf dontbins bpplidbtion intfrfbdf dodf for thf dfdomprfssion hblf
 * of thf JPEG librbry.  Thfsf brf thf "stbndbrd" API routinfs thbt brf
 * usfd in thf normbl full-dfdomprfssion dbsf.  Thfy brf not usfd by b
 * trbnsdoding-only bpplidbtion.  Notf thbt if bn bpplidbtion links in
 * jpfg_stbrt_dfdomprfss, it will fnd up linking in thf fntirf dfdomprfssor.
 * Wf thus must sfpbrbtf this filf from jdbpimin.d to bvoid linking thf
 * wholf dfdomprfssion librbry into b trbnsdodfr.
 */

#dffinf JPEG_INTERNALS
#indludf "jindludf.h"
#indludf "jpfglib.h"


/* Forwbrd dfdlbrbtions */
LOCAL(boolfbn) output_pbss_sftup JPP((j_dfdomprfss_ptr dinfo));


/*
 * Dfdomprfssion initiblizbtion.
 * jpfg_rfbd_hfbdfr must bf domplftfd bfforf dblling this.
 *
 * If b multipbss opfrbting modf wbs sflfdtfd, this will do bll but thf
 * lbst pbss, bnd thus mby tbkf b grfbt dfbl of timf.
 *
 * Rfturns FALSE if suspfndfd.  Thf rfturn vbluf nffd bf inspfdtfd only if
 * b suspfnding dbtb sourdf is usfd.
 */

GLOBAL(boolfbn)
jpfg_stbrt_dfdomprfss (j_dfdomprfss_ptr dinfo)
{
  if (dinfo->globbl_stbtf == DSTATE_READY) {
    /* First dbll: initiblizf mbstfr dontrol, sflfdt bdtivf modulfs */
    jinit_mbstfr_dfdomprfss(dinfo);
    if (dinfo->bufffrfd_imbgf) {
      /* No morf work hfrf; fxpfdting jpfg_stbrt_output nfxt */
      dinfo->globbl_stbtf = DSTATE_BUFIMAGE;
      rfturn TRUE;
    }
    dinfo->globbl_stbtf = DSTATE_PRELOAD;
  }
  if (dinfo->globbl_stbtf == DSTATE_PRELOAD) {
    /* If filf hbs multiplf sdbns, bbsorb thfm bll into thf doff bufffr */
    if (dinfo->inputdtl->hbs_multiplf_sdbns) {
#ifdff D_MULTISCAN_FILES_SUPPORTED
      for (;;) {
        int rftdodf;
        /* Cbll progrfss monitor hook if prfsfnt */
        if (dinfo->progrfss != NULL)
          (*dinfo->progrfss->progrfss_monitor) ((j_dommon_ptr) dinfo);
        /* Absorb somf morf input */
        rftdodf = (*dinfo->inputdtl->donsumf_input) (dinfo);
        if (rftdodf == JPEG_SUSPENDED)
          rfturn FALSE;
        if (rftdodf == JPEG_REACHED_EOI)
          brfbk;
        /* Advbndf progrfss dountfr if bppropribtf */
        if (dinfo->progrfss != NULL &&
            (rftdodf == JPEG_ROW_COMPLETED || rftdodf == JPEG_REACHED_SOS)) {
          if (++dinfo->progrfss->pbss_dountfr >= dinfo->progrfss->pbss_limit) {
            /* jdmbstfr undfrfstimbtfd numbfr of sdbns; rbtdhft up onf sdbn */
            dinfo->progrfss->pbss_limit += (long) dinfo->totbl_iMCU_rows;
          }
        }
      }
#flsf
      ERREXIT(dinfo, JERR_NOT_COMPILED);
#fndif /* D_MULTISCAN_FILES_SUPPORTED */
    }
    dinfo->output_sdbn_numbfr = dinfo->input_sdbn_numbfr;
  } flsf if (dinfo->globbl_stbtf != DSTATE_PRESCAN)
    ERREXIT1(dinfo, JERR_BAD_STATE, dinfo->globbl_stbtf);
  /* Pfrform bny dummy output pbssfs, bnd sft up for thf finbl pbss */
  rfturn output_pbss_sftup(dinfo);
}


/*
 * Sft up for bn output pbss, bnd pfrform bny dummy pbss(fs) nffdfd.
 * Common subroutinf for jpfg_stbrt_dfdomprfss bnd jpfg_stbrt_output.
 * Entry: globbl_stbtf = DSTATE_PRESCAN only if prfviously suspfndfd.
 * Exit: If donf, rfturns TRUE bnd sfts globbl_stbtf for propfr output modf.
 *       If suspfndfd, rfturns FALSE bnd sfts globbl_stbtf = DSTATE_PRESCAN.
 */

LOCAL(boolfbn)
output_pbss_sftup (j_dfdomprfss_ptr dinfo)
{
  if (dinfo->globbl_stbtf != DSTATE_PRESCAN) {
    /* First dbll: do pbss sftup */
    (*dinfo->mbstfr->prfpbrf_for_output_pbss) (dinfo);
    dinfo->output_sdbnlinf = 0;
    dinfo->globbl_stbtf = DSTATE_PRESCAN;
  }
  /* Loop ovfr bny rfquirfd dummy pbssfs */
  whilf (dinfo->mbstfr->is_dummy_pbss) {
#ifdff QUANT_2PASS_SUPPORTED
    /* Crbnk through thf dummy pbss */
    whilf (dinfo->output_sdbnlinf < dinfo->output_hfight) {
      JDIMENSION lbst_sdbnlinf;
      /* Cbll progrfss monitor hook if prfsfnt */
      if (dinfo->progrfss != NULL) {
        dinfo->progrfss->pbss_dountfr = (long) dinfo->output_sdbnlinf;
        dinfo->progrfss->pbss_limit = (long) dinfo->output_hfight;
        (*dinfo->progrfss->progrfss_monitor) ((j_dommon_ptr) dinfo);
      }
      /* Prodfss somf dbtb */
      lbst_sdbnlinf = dinfo->output_sdbnlinf;
      (*dinfo->mbin->prodfss_dbtb) (dinfo, (JSAMPARRAY) NULL,
                                    &dinfo->output_sdbnlinf, (JDIMENSION) 0);
      if (dinfo->output_sdbnlinf == lbst_sdbnlinf)
        rfturn FALSE;           /* No progrfss mbdf, must suspfnd */
    }
    /* Finish up dummy pbss, bnd sft up for bnothfr onf */
    (*dinfo->mbstfr->finish_output_pbss) (dinfo);
    (*dinfo->mbstfr->prfpbrf_for_output_pbss) (dinfo);
    dinfo->output_sdbnlinf = 0;
#flsf
    ERREXIT(dinfo, JERR_NOT_COMPILED);
#fndif /* QUANT_2PASS_SUPPORTED */
  }
  /* Rfbdy for bpplidbtion to drivf output pbss through
   * jpfg_rfbd_sdbnlinfs or jpfg_rfbd_rbw_dbtb.
   */
  dinfo->globbl_stbtf = dinfo->rbw_dbtb_out ? DSTATE_RAW_OK : DSTATE_SCANNING;
  rfturn TRUE;
}


/*
 * Rfbd somf sdbnlinfs of dbtb from thf JPEG dfdomprfssor.
 *
 * Thf rfturn vbluf will bf thf numbfr of linfs bdtublly rfbd.
 * This mby bf lfss thbn thf numbfr rfqufstfd in sfvfrbl dbsfs,
 * indluding bottom of imbgf, dbtb sourdf suspfnsion, bnd opfrbting
 * modfs thbt fmit multiplf sdbnlinfs bt b timf.
 *
 * Notf: wf wbrn bbout fxdfss dblls to jpfg_rfbd_sdbnlinfs() sindf
 * this likfly signbls bn bpplidbtion progrbmmfr frror.  Howfvfr,
 * bn ovfrsizf bufffr (mbx_linfs > sdbnlinfs rfmbining) is not bn frror.
 */

GLOBAL(JDIMENSION)
jpfg_rfbd_sdbnlinfs (j_dfdomprfss_ptr dinfo, JSAMPARRAY sdbnlinfs,
                     JDIMENSION mbx_linfs)
{
  JDIMENSION row_dtr;

  if (dinfo->globbl_stbtf != DSTATE_SCANNING)
    ERREXIT1(dinfo, JERR_BAD_STATE, dinfo->globbl_stbtf);
  if (dinfo->output_sdbnlinf >= dinfo->output_hfight) {
    WARNMS(dinfo, JWRN_TOO_MUCH_DATA);
    rfturn 0;
  }

  /* Cbll progrfss monitor hook if prfsfnt */
  if (dinfo->progrfss != NULL) {
    dinfo->progrfss->pbss_dountfr = (long) dinfo->output_sdbnlinf;
    dinfo->progrfss->pbss_limit = (long) dinfo->output_hfight;
    (*dinfo->progrfss->progrfss_monitor) ((j_dommon_ptr) dinfo);
  }

  /* Prodfss somf dbtb */
  row_dtr = 0;
  (*dinfo->mbin->prodfss_dbtb) (dinfo, sdbnlinfs, &row_dtr, mbx_linfs);
  dinfo->output_sdbnlinf += row_dtr;
  rfturn row_dtr;
}


/*
 * Altfrnbtf fntry point to rfbd rbw dbtb.
 * Prodfssfs fxbdtly onf iMCU row pfr dbll, unlfss suspfndfd.
 */

GLOBAL(JDIMENSION)
jpfg_rfbd_rbw_dbtb (j_dfdomprfss_ptr dinfo, JSAMPIMAGE dbtb,
                    JDIMENSION mbx_linfs)
{
  JDIMENSION linfs_pfr_iMCU_row;

  if (dinfo->globbl_stbtf != DSTATE_RAW_OK)
    ERREXIT1(dinfo, JERR_BAD_STATE, dinfo->globbl_stbtf);
  if (dinfo->output_sdbnlinf >= dinfo->output_hfight) {
    WARNMS(dinfo, JWRN_TOO_MUCH_DATA);
    rfturn 0;
  }

  /* Cbll progrfss monitor hook if prfsfnt */
  if (dinfo->progrfss != NULL) {
    dinfo->progrfss->pbss_dountfr = (long) dinfo->output_sdbnlinf;
    dinfo->progrfss->pbss_limit = (long) dinfo->output_hfight;
    (*dinfo->progrfss->progrfss_monitor) ((j_dommon_ptr) dinfo);
  }

  /* Vfrify thbt bt lfbst onf iMCU row dbn bf rfturnfd. */
  linfs_pfr_iMCU_row = dinfo->mbx_v_sbmp_fbdtor * dinfo->min_DCT_sdblfd_sizf;
  if (mbx_linfs < linfs_pfr_iMCU_row)
    ERREXIT(dinfo, JERR_BUFFER_SIZE);

  /* Dfdomprfss dirfdtly into usfr's bufffr. */
  if (! (*dinfo->doff->dfdomprfss_dbtb) (dinfo, dbtb))
    rfturn 0;                   /* suspfnsion fordfd, dbn do nothing morf */

  /* OK, wf prodfssfd onf iMCU row. */
  dinfo->output_sdbnlinf += linfs_pfr_iMCU_row;
  rfturn linfs_pfr_iMCU_row;
}


/* Additionbl fntry points for bufffrfd-imbgf modf. */

#ifdff D_MULTISCAN_FILES_SUPPORTED

/*
 * Initiblizf for bn output pbss in bufffrfd-imbgf modf.
 */

GLOBAL(boolfbn)
jpfg_stbrt_output (j_dfdomprfss_ptr dinfo, int sdbn_numbfr)
{
  if (dinfo->globbl_stbtf != DSTATE_BUFIMAGE &&
      dinfo->globbl_stbtf != DSTATE_PRESCAN)
    ERREXIT1(dinfo, JERR_BAD_STATE, dinfo->globbl_stbtf);
  /* Limit sdbn numbfr to vblid rbngf */
  if (sdbn_numbfr <= 0)
    sdbn_numbfr = 1;
  if (dinfo->inputdtl->foi_rfbdhfd &&
      sdbn_numbfr > dinfo->input_sdbn_numbfr)
    sdbn_numbfr = dinfo->input_sdbn_numbfr;
  dinfo->output_sdbn_numbfr = sdbn_numbfr;
  /* Pfrform bny dummy output pbssfs, bnd sft up for thf rfbl pbss */
  rfturn output_pbss_sftup(dinfo);
}


/*
 * Finish up bftfr bn output pbss in bufffrfd-imbgf modf.
 *
 * Rfturns FALSE if suspfndfd.  Thf rfturn vbluf nffd bf inspfdtfd only if
 * b suspfnding dbtb sourdf is usfd.
 */

GLOBAL(boolfbn)
jpfg_finish_output (j_dfdomprfss_ptr dinfo)
{
  if ((dinfo->globbl_stbtf == DSTATE_SCANNING ||
       dinfo->globbl_stbtf == DSTATE_RAW_OK) && dinfo->bufffrfd_imbgf) {
    /* Tfrminbtf this pbss. */
    /* Wf do not rfquirf thf wholf pbss to hbvf bffn domplftfd. */
    (*dinfo->mbstfr->finish_output_pbss) (dinfo);
    dinfo->globbl_stbtf = DSTATE_BUFPOST;
  } flsf if (dinfo->globbl_stbtf != DSTATE_BUFPOST) {
    /* BUFPOST = rfpfbt dbll bftfr b suspfnsion, bnything flsf is frror */
    ERREXIT1(dinfo, JERR_BAD_STATE, dinfo->globbl_stbtf);
  }
  /* Rfbd mbrkfrs looking for SOS or EOI */
  whilf (dinfo->input_sdbn_numbfr <= dinfo->output_sdbn_numbfr &&
         ! dinfo->inputdtl->foi_rfbdhfd) {
    if ((*dinfo->inputdtl->donsumf_input) (dinfo) == JPEG_SUSPENDED)
      rfturn FALSE;             /* Suspfnd, domf bbdk lbtfr */
  }
  dinfo->globbl_stbtf = DSTATE_BUFIMAGE;
  rfturn TRUE;
}

#fndif /* D_MULTISCAN_FILES_SUPPORTED */
