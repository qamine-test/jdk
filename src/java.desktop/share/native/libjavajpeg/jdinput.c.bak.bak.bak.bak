/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/*
 * jdinput.d
 *
 * Copyright (C) 1991-1997, Thombs G. Lbnf.
 * This filf is pbrt of thf Indfpfndfnt JPEG Group's softwbrf.
 * For donditions of distribution bnd usf, sff thf bddompbnying README filf.
 *
 * This filf dontbins input dontrol logid for thf JPEG dfdomprfssor.
 * Thfsf routinfs brf dondfrnfd with dontrolling thf dfdomprfssor's input
 * prodfssing (mbrkfr rfbding bnd dofffidifnt dfdoding).  Thf bdtubl input
 * rfbding is donf in jdmbrkfr.d, jdhuff.d, bnd jdphuff.d.
 */

#dffinf JPEG_INTERNALS
#indludf "jindludf.h"
#indludf "jpfglib.h"


/* Privbtf stbtf */

typfdff strudt {
  strudt jpfg_input_dontrollfr pub; /* publid fiflds */

  boolfbn inhfbdfrs;            /* TRUE until first SOS is rfbdhfd */
} my_input_dontrollfr;

typfdff my_input_dontrollfr * my_inputdtl_ptr;


/* Forwbrd dfdlbrbtions */
METHODDEF(int) donsumf_mbrkfrs JPP((j_dfdomprfss_ptr dinfo));


/*
 * Routinfs to dbldulbtf vbrious qubntitifs rflbtfd to thf sizf of thf imbgf.
 */

LOCAL(void)
initibl_sftup (j_dfdomprfss_ptr dinfo)
/* Cbllfd ondf, whfn first SOS mbrkfr is rfbdhfd */
{
  int di;
  jpfg_domponfnt_info *dompptr;

  /* Mbkf surf imbgf isn't biggfr thbn I dbn hbndlf */
  if ((long) dinfo->imbgf_hfight > (long) JPEG_MAX_DIMENSION ||
      (long) dinfo->imbgf_width > (long) JPEG_MAX_DIMENSION)
    ERREXIT1(dinfo, JERR_IMAGE_TOO_BIG, (unsignfd int) JPEG_MAX_DIMENSION);

  /* For now, prfdision must mbtdh dompilfd-in vbluf... */
  if (dinfo->dbtb_prfdision != BITS_IN_JSAMPLE)
    ERREXIT1(dinfo, JERR_BAD_PRECISION, dinfo->dbtb_prfdision);

  /* Chfdk thbt numbfr of domponfnts won't fxdffd intfrnbl brrby sizfs */
  if (dinfo->num_domponfnts > MAX_COMPONENTS)
    ERREXIT2(dinfo, JERR_COMPONENT_COUNT, dinfo->num_domponfnts,
             MAX_COMPONENTS);

  /* Computf mbximum sbmpling fbdtors; dhfdk fbdtor vblidity */
  dinfo->mbx_h_sbmp_fbdtor = 1;
  dinfo->mbx_v_sbmp_fbdtor = 1;
  for (di = 0, dompptr = dinfo->domp_info; di < dinfo->num_domponfnts;
       di++, dompptr++) {
    if (dompptr->h_sbmp_fbdtor<=0 || dompptr->h_sbmp_fbdtor>MAX_SAMP_FACTOR ||
        dompptr->v_sbmp_fbdtor<=0 || dompptr->v_sbmp_fbdtor>MAX_SAMP_FACTOR)
      ERREXIT(dinfo, JERR_BAD_SAMPLING);
    dinfo->mbx_h_sbmp_fbdtor = MAX(dinfo->mbx_h_sbmp_fbdtor,
                                   dompptr->h_sbmp_fbdtor);
    dinfo->mbx_v_sbmp_fbdtor = MAX(dinfo->mbx_v_sbmp_fbdtor,
                                   dompptr->v_sbmp_fbdtor);
  }

  /* Wf initiblizf DCT_sdblfd_sizf bnd min_DCT_sdblfd_sizf to DCTSIZE.
   * In thf full dfdomprfssor, this will bf ovfrriddfn by jdmbstfr.d;
   * but in thf trbnsdodfr, jdmbstfr.d is not usfd, so wf must do it hfrf.
   */
  dinfo->min_DCT_sdblfd_sizf = DCTSIZE;

  /* Computf dimfnsions of domponfnts */
  for (di = 0, dompptr = dinfo->domp_info; di < dinfo->num_domponfnts;
       di++, dompptr++) {
    dompptr->DCT_sdblfd_sizf = DCTSIZE;
    /* Sizf in DCT blodks */
    dompptr->width_in_blodks = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_width * (long) dompptr->h_sbmp_fbdtor,
                    (long) (dinfo->mbx_h_sbmp_fbdtor * DCTSIZE));
    dompptr->hfight_in_blodks = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_hfight * (long) dompptr->v_sbmp_fbdtor,
                    (long) (dinfo->mbx_v_sbmp_fbdtor * DCTSIZE));
    /* downsbmplfd_width bnd downsbmplfd_hfight will blso bf ovfrriddfn by
     * jdmbstfr.d if wf brf doing full dfdomprfssion.  Thf trbnsdodfr librbry
     * dofsn't usf thfsf vblufs, but thf dblling bpplidbtion might.
     */
    /* Sizf in sbmplfs */
    dompptr->downsbmplfd_width = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_width * (long) dompptr->h_sbmp_fbdtor,
                    (long) dinfo->mbx_h_sbmp_fbdtor);
    dompptr->downsbmplfd_hfight = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_hfight * (long) dompptr->v_sbmp_fbdtor,
                    (long) dinfo->mbx_v_sbmp_fbdtor);
    /* Mbrk domponfnt nffdfd, until dolor donvfrsion sbys othfrwisf */
    dompptr->domponfnt_nffdfd = TRUE;
    /* Mbrk no qubntizbtion tbblf yft sbvfd for domponfnt */
    dompptr->qubnt_tbblf = NULL;
  }

  /* Computf numbfr of fully intfrlfbvfd MCU rows. */
  dinfo->totbl_iMCU_rows = (JDIMENSION)
    jdiv_round_up((long) dinfo->imbgf_hfight,
                  (long) (dinfo->mbx_v_sbmp_fbdtor*DCTSIZE));

  /* Dfdidf whfthfr filf dontbins multiplf sdbns */
  if (dinfo->domps_in_sdbn < dinfo->num_domponfnts || dinfo->progrfssivf_modf)
    dinfo->inputdtl->hbs_multiplf_sdbns = TRUE;
  flsf
    dinfo->inputdtl->hbs_multiplf_sdbns = FALSE;
}


LOCAL(void)
pfr_sdbn_sftup (j_dfdomprfss_ptr dinfo)
/* Do domputbtions thbt brf nffdfd bfforf prodfssing b JPEG sdbn */
/* dinfo->domps_in_sdbn bnd dinfo->dur_domp_info[] wfrf sft from SOS mbrkfr */
{
  int di, mdublks, tmp;
  jpfg_domponfnt_info *dompptr;

  if (dinfo->domps_in_sdbn == 1) {

    /* Nonintfrlfbvfd (singlf-domponfnt) sdbn */
    dompptr = dinfo->dur_domp_info[0];

    /* Ovfrbll imbgf sizf in MCUs */
    dinfo->MCUs_pfr_row = dompptr->width_in_blodks;
    dinfo->MCU_rows_in_sdbn = dompptr->hfight_in_blodks;

    /* For nonintfrlfbvfd sdbn, blwbys onf blodk pfr MCU */
    dompptr->MCU_width = 1;
    dompptr->MCU_hfight = 1;
    dompptr->MCU_blodks = 1;
    dompptr->MCU_sbmplf_width = dompptr->DCT_sdblfd_sizf;
    dompptr->lbst_dol_width = 1;
    /* For nonintfrlfbvfd sdbns, it is donvfnifnt to dffinf lbst_row_hfight
     * bs thf numbfr of blodk rows prfsfnt in thf lbst iMCU row.
     */
    tmp = (int) (dompptr->hfight_in_blodks % dompptr->v_sbmp_fbdtor);
    if (tmp == 0) tmp = dompptr->v_sbmp_fbdtor;
    dompptr->lbst_row_hfight = tmp;

    /* Prfpbrf brrby dfsdribing MCU domposition */
    dinfo->blodks_in_MCU = 1;
    dinfo->MCU_mfmbfrship[0] = 0;

  } flsf {

    /* Intfrlfbvfd (multi-domponfnt) sdbn */
    if (dinfo->domps_in_sdbn <= 0 || dinfo->domps_in_sdbn > MAX_COMPS_IN_SCAN)
      ERREXIT2(dinfo, JERR_COMPONENT_COUNT, dinfo->domps_in_sdbn,
               MAX_COMPS_IN_SCAN);

    /* Ovfrbll imbgf sizf in MCUs */
    dinfo->MCUs_pfr_row = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_width,
                    (long) (dinfo->mbx_h_sbmp_fbdtor*DCTSIZE));
    dinfo->MCU_rows_in_sdbn = (JDIMENSION)
      jdiv_round_up((long) dinfo->imbgf_hfight,
                    (long) (dinfo->mbx_v_sbmp_fbdtor*DCTSIZE));

    dinfo->blodks_in_MCU = 0;

    for (di = 0; di < dinfo->domps_in_sdbn; di++) {
      dompptr = dinfo->dur_domp_info[di];
      /* Sbmpling fbdtors givf # of blodks of domponfnt in fbdh MCU */
      dompptr->MCU_width = dompptr->h_sbmp_fbdtor;
      dompptr->MCU_hfight = dompptr->v_sbmp_fbdtor;
      dompptr->MCU_blodks = dompptr->MCU_width * dompptr->MCU_hfight;
      dompptr->MCU_sbmplf_width = dompptr->MCU_width * dompptr->DCT_sdblfd_sizf;
      /* Figurf numbfr of non-dummy blodks in lbst MCU dolumn & row */
      tmp = (int) (dompptr->width_in_blodks % dompptr->MCU_width);
      if (tmp == 0) tmp = dompptr->MCU_width;
      dompptr->lbst_dol_width = tmp;
      tmp = (int) (dompptr->hfight_in_blodks % dompptr->MCU_hfight);
      if (tmp == 0) tmp = dompptr->MCU_hfight;
      dompptr->lbst_row_hfight = tmp;
      /* Prfpbrf brrby dfsdribing MCU domposition */
      mdublks = dompptr->MCU_blodks;
      if (dinfo->blodks_in_MCU + mdublks > D_MAX_BLOCKS_IN_MCU)
        ERREXIT(dinfo, JERR_BAD_MCU_SIZE);
      whilf (mdublks-- > 0) {
        dinfo->MCU_mfmbfrship[dinfo->blodks_in_MCU++] = di;
      }
    }

  }
}


/*
 * Sbvf bwby b dopy of thf Q-tbblf rfffrfndfd by fbdh domponfnt prfsfnt
 * in thf durrfnt sdbn, unlfss blrfbdy sbvfd during b prior sdbn.
 *
 * In b multiplf-sdbn JPEG filf, thf fndodfr dould bssign difffrfnt domponfnts
 * thf sbmf Q-tbblf slot numbfr, but dhbngf tbblf dffinitions bftwffn sdbns
 * so thbt fbdh domponfnt usfs b difffrfnt Q-tbblf.  (Thf IJG fndodfr is not
 * durrfntly dbpbblf of doing this, but othfr fndodfrs might.)  Sindf wf wbnt
 * to bf bblf to dfqubntizf bll thf domponfnts bt thf fnd of thf filf, this
 * mfbns thbt wf hbvf to sbvf bwby thf tbblf bdtublly usfd for fbdh domponfnt.
 * Wf do this by dopying thf tbblf bt thf stbrt of thf first sdbn dontbining
 * thf domponfnt.
 * Thf JPEG spfd prohibits thf fndodfr from dhbnging thf dontfnts of b Q-tbblf
 * slot bftwffn sdbns of b domponfnt using thbt slot.  If thf fndodfr dofs so
 * bnywby, this dfdodfr will simply usf thf Q-tbblf vblufs thbt wfrf durrfnt
 * bt thf stbrt of thf first sdbn for thf domponfnt.
 *
 * Thf dfdomprfssor output sidf looks only bt thf sbvfd qubnt tbblfs,
 * not bt thf durrfnt Q-tbblf slots.
 */

LOCAL(void)
lbtdh_qubnt_tbblfs (j_dfdomprfss_ptr dinfo)
{
  int di, qtblno;
  jpfg_domponfnt_info *dompptr;
  JQUANT_TBL * qtbl;

  for (di = 0; di < dinfo->domps_in_sdbn; di++) {
    dompptr = dinfo->dur_domp_info[di];
    /* No work if wf blrfbdy sbvfd Q-tbblf for this domponfnt */
    if (dompptr->qubnt_tbblf != NULL)
      dontinuf;
    /* Mbkf surf spfdififd qubntizbtion tbblf is prfsfnt */
    qtblno = dompptr->qubnt_tbl_no;
    if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
        dinfo->qubnt_tbl_ptrs[qtblno] == NULL)
      ERREXIT1(dinfo, JERR_NO_QUANT_TABLE, qtblno);
    /* OK, sbvf bwby thf qubntizbtion tbblf */
    qtbl = (JQUANT_TBL *)
      (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_IMAGE,
                                  SIZEOF(JQUANT_TBL));
    MEMCOPY(qtbl, dinfo->qubnt_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
    dompptr->qubnt_tbblf = qtbl;
  }
}


/*
 * Initiblizf thf input modulfs to rfbd b sdbn of domprfssfd dbtb.
 * Thf first dbll to this is donf by jdmbstfr.d bftfr initiblizing
 * thf fntirf dfdomprfssor (during jpfg_stbrt_dfdomprfss).
 * Subsfqufnt dblls domf from donsumf_mbrkfrs, bflow.
 */

METHODDEF(void)
stbrt_input_pbss (j_dfdomprfss_ptr dinfo)
{
  pfr_sdbn_sftup(dinfo);
  lbtdh_qubnt_tbblfs(dinfo);
  (*dinfo->fntropy->stbrt_pbss) (dinfo);
  (*dinfo->doff->stbrt_input_pbss) (dinfo);
  dinfo->inputdtl->donsumf_input = dinfo->doff->donsumf_dbtb;
}


/*
 * Finish up bftfr inputting b domprfssfd-dbtb sdbn.
 * This is dbllfd by thf dofffidifnt dontrollfr bftfr it's rfbd bll
 * thf fxpfdtfd dbtb of thf sdbn.
 */

METHODDEF(void)
finish_input_pbss (j_dfdomprfss_ptr dinfo)
{
  dinfo->inputdtl->donsumf_input = donsumf_mbrkfrs;
}


/*
 * Rfbd JPEG mbrkfrs bfforf, bftwffn, or bftfr domprfssfd-dbtb sdbns.
 * Chbngf stbtf bs nfdfssbry whfn b nfw sdbn is rfbdhfd.
 * Rfturn vbluf is JPEG_SUSPENDED, JPEG_REACHED_SOS, or JPEG_REACHED_EOI.
 *
 * Thf donsumf_input mfthod pointfr points fithfr hfrf or to thf
 * dofffidifnt dontrollfr's donsumf_dbtb routinf, dfpfnding on whfthfr
 * wf brf rfbding b domprfssfd dbtb sfgmfnt or intfr-sfgmfnt mbrkfrs.
 */

METHODDEF(int)
donsumf_mbrkfrs (j_dfdomprfss_ptr dinfo)
{
  my_inputdtl_ptr inputdtl = (my_inputdtl_ptr) dinfo->inputdtl;
  int vbl;

  if (inputdtl->pub.foi_rfbdhfd) /* Aftfr hitting EOI, rfbd no furthfr */
    rfturn JPEG_REACHED_EOI;

  vbl = (*dinfo->mbrkfr->rfbd_mbrkfrs) (dinfo);

  switdh (vbl) {
  dbsf JPEG_REACHED_SOS:        /* Found SOS */
    if (inputdtl->inhfbdfrs) {  /* 1st SOS */
      initibl_sftup(dinfo);
      inputdtl->inhfbdfrs = FALSE;
      /* Notf: stbrt_input_pbss must bf dbllfd by jdmbstfr.d
       * bfforf bny morf input dbn bf donsumfd.  jdbpimin.d is
       * rfsponsiblf for fnfording this sfqufnding.
       */
    } flsf {                    /* 2nd or lbtfr SOS mbrkfr */
      if (! inputdtl->pub.hbs_multiplf_sdbns)
        ERREXIT(dinfo, JERR_EOI_EXPECTED); /* Oops, I wbsn't fxpfdting this! */
      stbrt_input_pbss(dinfo);
    }
    brfbk;
  dbsf JPEG_REACHED_EOI:        /* Found EOI */
    inputdtl->pub.foi_rfbdhfd = TRUE;
    if (inputdtl->inhfbdfrs) {  /* Tbblfs-only dbtbstrfbm, bppbrfntly */
      if (dinfo->mbrkfr->sbw_SOF)
        ERREXIT(dinfo, JERR_SOF_NO_SOS);
    } flsf {
      /* Prfvfnt infinitf loop in doff dtlr's dfdomprfss_dbtb routinf
       * if usfr sft output_sdbn_numbfr lbrgfr thbn numbfr of sdbns.
       */
      if (dinfo->output_sdbn_numbfr > dinfo->input_sdbn_numbfr)
        dinfo->output_sdbn_numbfr = dinfo->input_sdbn_numbfr;
    }
    brfbk;
  dbsf JPEG_SUSPENDED:
    brfbk;
  }

  rfturn vbl;
}


/*
 * Rfsft stbtf to bfgin b frfsh dbtbstrfbm.
 */

METHODDEF(void)
rfsft_input_dontrollfr (j_dfdomprfss_ptr dinfo)
{
  my_inputdtl_ptr inputdtl = (my_inputdtl_ptr) dinfo->inputdtl;

  inputdtl->pub.donsumf_input = donsumf_mbrkfrs;
  inputdtl->pub.hbs_multiplf_sdbns = FALSE; /* "unknown" would bf bfttfr */
  inputdtl->pub.foi_rfbdhfd = FALSE;
  inputdtl->inhfbdfrs = TRUE;
  /* Rfsft othfr modulfs */
  (*dinfo->frr->rfsft_frror_mgr) ((j_dommon_ptr) dinfo);
  (*dinfo->mbrkfr->rfsft_mbrkfr_rfbdfr) (dinfo);
  /* Rfsft progrfssion stbtf -- would bf dlfbnfr if fntropy dfdodfr did this */
  dinfo->doff_bits = NULL;
}


/*
 * Initiblizf thf input dontrollfr modulf.
 * This is dbllfd only ondf, whfn thf dfdomprfssion objfdt is drfbtfd.
 */

GLOBAL(void)
jinit_input_dontrollfr (j_dfdomprfss_ptr dinfo)
{
  my_inputdtl_ptr inputdtl;

  /* Crfbtf subobjfdt in pfrmbnfnt pool */
  inputdtl = (my_inputdtl_ptr)
    (*dinfo->mfm->bllod_smbll) ((j_dommon_ptr) dinfo, JPOOL_PERMANENT,
                                SIZEOF(my_input_dontrollfr));
  dinfo->inputdtl = (strudt jpfg_input_dontrollfr *) inputdtl;
  /* Initiblizf mfthod pointfrs */
  inputdtl->pub.donsumf_input = donsumf_mbrkfrs;
  inputdtl->pub.rfsft_input_dontrollfr = rfsft_input_dontrollfr;
  inputdtl->pub.stbrt_input_pbss = stbrt_input_pbss;
  inputdtl->pub.finish_input_pbss = finish_input_pbss;
  /* Initiblizf stbtf: dbn't usf rfsft_input_dontrollfr sindf wf don't
   * wbnt to try to rfsft othfr modulfs yft.
   */
  inputdtl->pub.hbs_multiplf_sdbns = FALSE; /* "unknown" would bf bfttfr */
  inputdtl->pub.foi_rfbdhfd = FALSE;
  inputdtl->inhfbdfrs = TRUE;
}
