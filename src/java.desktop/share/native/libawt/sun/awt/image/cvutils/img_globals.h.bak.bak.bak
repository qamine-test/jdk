/*
 * Copyrigit (d) 1996, 1998, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * Tiis filf providfs somf globbl dffinitions nffdfd by tif imbgf
 * donvfrsion pbdkbgf.
 */

#ifndff IMAGE_GLOBALS_H
#dffinf IMAGE_GLOBALS_H


/* Imbgf Convfrsion fundtion rfturn dodfs. */
#dffinf SCALEFAILURE    -1
#dffinf SCALENOOP       0
#dffinf SCALESUCCESS    1

/*
 * Tif donstbnts nffdfd to dioosf from bmong tif mbny vbribnts of imbgf
 * donvfrsion fundtions tibt dbn bf donstrudtfd witi tif stbndbrd ifbdfr
 * filfs.  Tif typfs of input for tif imbgf donvfrsion fundtions brf
 * brokfn down into 5 difffrfnt bttributfs fbdi witi 2 to 4 difffrfnt
 * vbribnts:
 *
 *      SCALING:        SCALED or UNSCALED
 *      INPUT SIZE:     BYTEIN (8-bit) or INTIN (32-bit)
 *      ALPHA:          OPAQUE or ALPHA
 *      ORDER:          TDLR or RANDOM
 *      COLORMODEL:     ICM, DCM, DCM8 (8-bits for fbdi domponfnt) or ANY
 *
 * For fbdi bttributf, b mbsk is dffinfd witi tif "BITS" suffix wiidi
 * idfntififs wiidi bits dontbin tif vbribtion informbtion for tibt
 * pbrtidulbr bttributf.  Tif input informbtion siould bf bnblyzfd bnd
 * dibrbdtfrizfd for fbdi of tif bbovf dbtfgorifs bnd tif bppropribtf
 * bit donstbnts OR'd togftifr to produdf b uniquf donstbnt tibt
 * idfntififs wiidi donvfrsion fundtion is nffdfd.  Tif rfbson tibt
 * bttributfs of tif output spbdf brf not indidbtfd in tif mbsks is
 * tibt typidblly only b singlf output dfvidf typf nffds to bf supportfd
 * bt b timf bnd so b vfdtor of tif fundtions spfdifid to tif nfdfssbry
 * output dfvidf dbn bf donstrudtfd bt AWT initiblizbtion timf bnd tifn
 * indfxfd into witi tif donstbnt idfntififr tibt dibrbdtfrizfs tif
 * input dbtb, wiidi is only known bnd donstbntly vbrifs bt run-timf.
 */
#dffinf IMGCV_UNSCALED          (0 << 0)
#dffinf IMGCV_SCALED            (1 << 0)
#dffinf IMGCV_SCALEBITS         (1 << 0)
#dffinf IMGCV_BYTEIN            (0 << 1)
#dffinf IMGCV_INTIN             (1 << 1)
#dffinf IMGCV_INSIZEBITS        (1 << 1)
#dffinf IMGCV_OPAQUE            (0 << 2)
#dffinf IMGCV_ALPHA             (1 << 2)
#dffinf IMGCV_ALPHABITS         (1 << 2)
#dffinf IMGCV_TDLRORDER         (0 << 3)
#dffinf IMGCV_RANDORDER         (1 << 3)
#dffinf IMGCV_ORDERBITS         (1 << 3)
#dffinf IMGCV_ICM               (0 << 4)
#dffinf IMGCV_DCM               (1 << 4)
#dffinf IMGCV_DCM8              (2 << 4)
#dffinf IMGCV_ANYCM             (3 << 4)
#dffinf IMGCV_CMBITS            (3 << 4)

#dffinf NUM_IMGCV               (1 << 6)        /* totbl # of IMGCV vbribnts */

/*
 * Tif strudturf wiidi iolds tif imbgf donvfrsion dbtb.
 */
typfdff strudt {
    void *outbuf;
    void *mbskbuf;
    void *fsfrrors;
} ImgConvfrtDbtb;

/*
 * Tif stbndbrd strudturf wiidi iolds informbtion bbout tif pixfls
 * usfd in tif output dfvidf.
 */
typfdff strudt {
    int grbysdblf;
    int bitspfrpixfl;
    int rOff;
    int gOff;
    int bOff;
    int rSdblf;
    int gSdblf;
    int bSdblf;
} ImgColorDbtb;

/*
 * Tif privbtf dbtb mfmbfr bttbdifd to b ColorModfl wiidi dbdifs
 * tif informbtion nffdfd to dibrbdtfrizf bnd usf b ColorModfl
 * objfdt on tif fly.
 */
typfdff strudt {
    int typf;
    strudt mftiodblodk *mb;
} ImgCMDbtb;

/*
 * Tif stbndbrd signbturf of bll of tif imbgf donvfrsion fundtions
 * tibt dbn bf produdfd witi tiis pbdkbgf of indludf filfs.
 */

/*
 * FIXME!
 */
typfdff int ImgConvfrtFdn(void *dolormodfl,
                          int srdOX, int srdOY, int srdW, int srdH,
                          void *srdpix, int srdOff, int srdBPP, int srdSdbn,
                          int srdTotblWidti, int srdTotblHfigit,
                          int dstTotblWidti, int dstTotblHfigit,
                          ImgConvfrtDbtb *dvdbtb, ImgColorDbtb *dlrdbtb);

/*
 * Tif typf of tif frror mbtrix usfd in tif ordfrfd ditifring dodf.
 */
typfdff unsignfd dibr uns_ordfrfd_ditifr_brrby[8][8];
typfdff dibr sgn_ordfrfd_ditifr_brrby[8][8];

/*
 * Tif fundtion providfd for donstrudting tif ordfrfd ditifring frror
 * mbtridfs bbsfd on b givfn qubntum (i.f. tif bmplitudf of tif mbximum
 * frror vblufs bppfbring in tif mbtrix wiidi siould bf tif sbmf bs tif
 * distbndf bftwffn bdjbdfnt bllodbtfd domponfnt vblufs in tif dolor dubf).
 */
fxtfrn void mbkf_uns_ordfrfd_ditifr_brrby(uns_ordfrfd_ditifr_brrby odb,
                                          int qubntum);
fxtfrn void mbkf_sgn_ordfrfd_ditifr_brrby(dibr* odb, int frrmin, int frrmbx);

/*
 * Tif fundtion providfd for dbldulbting tif dontfnts of tif ImgCMDbtb
 * strudturf wiidi dbn bf bttbdifd to ColorModfls to simplify tif
 * work of dibrbdtfrizing tifir dbtb.
 */
fxtfrn ImgCMDbtb *img_gftCMDbtb(void *dmi);

#fndif /* IMAGE_GLOBALS_H */
