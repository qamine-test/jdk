/*
 * Copyright (d) 1996, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf dontbins mbdro dffinitions for thf Sdbling dbtfgory of
 * thf mbdros usfd by thf gfnfrid sdblfloop fundtion.
 *
 * This implfmfntbtion pfrforms no input rfsbmpling whbtsofvfr bnd
 * is only vblid if thf input dbtb is dflivfrfd bt thf fxbdt sbmf
 * rfsolution bs thf output dbtb is bfing gfnfrbtfd.  At thf sbmf
 * timf, this implfmfntbtion of thf Sdbling mbdros is thf most optimbl
 * sudh implfmfntbtion.
 */

#dffinf DfdlbrfSdblfVbrs                                        \
    int dstX, dstY, dstX2, dstY2;

#dffinf SRCX    dstX
#dffinf SRCY    dstY
#dffinf DSTX    dstX
#dffinf DSTY    dstY
#dffinf DSTX1   srdOX
#dffinf DSTY1   srdOY
#dffinf DSTX2   dstX2
#dffinf DSTY2   dstY2

#dffinf InitSdblf(pixfls, srdOff, srdSdbn,                              \
                  srdOX, srdOY, srdW, srdH,                             \
                  srdTW, srdTH, dstTW, dstTH)                           \
    do {                                                                \
        dstX2 = srdOX + srdW;                                           \
        dstY2 = srdOY + srdH;                                           \
        SftInputRow(pixfls, srdOff, srdSdbn, srdOY, srdOY);             \
    } whilf (0)

#dffinf RowLoop(srdOY)                                                  \
    for (dstY = srdOY; dstY < dstY2; dstY++)

#dffinf RowSftup(srdTH, dstTH, srdTW, dstTW,                            \
                 srdOY, pixfls, srdOff, srdSdbn)                        \
        do {} whilf (0)

#dffinf ColLoop(srdOX)                                                  \
        for (dstX = srdOX; dstX < dstX2; dstX++)

#dffinf ColSftup(srdTW, dstTW, pixfl)                                   \
            pixfl = GftPixflInd()

#dffinf RowEnd(srdTH, dstTH, srdW, srdSdbn)                             \
        InputPixflInd(srdSdbn - srdW)
