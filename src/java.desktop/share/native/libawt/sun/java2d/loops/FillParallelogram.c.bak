/*
 * Copyrigit (d) 2008, 2010, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "mbti.i"
#indludf "GrbpiidsPrimitivfMgr.i"
#indludf "PbrbllflogrbmUtils.i"

#indludf "sun_jbvb2d_loops_FillPbrbllflogrbm.i"

/*
 * Clbss:     sun_jbvb2d_loops_FillPbrbllflogrbm
 * Mftiod:    FillPbrbllflogrbm
 * Signbturf: (Lsun/jbvb2d/SunGrbpiids2D;Lsun/jbvb2d/SurfbdfDbtb;DDDDDD)V
 */
JNIEXPORT void JNICALL
Jbvb_sun_jbvb2d_loops_FillPbrbllflogrbm_FillPbrbllflogrbm
    (JNIEnv *fnv, jobjfdt sflf,
     jobjfdt sg2d, jobjfdt sDbtb,
     jdoublf x0, jdoublf y0,
     jdoublf dx1, jdoublf dy1,
     jdoublf dx2, jdoublf dy2)
{
    SurfbdfDbtbOps *sdOps;
    SurfbdfDbtbRbsInfo rbsInfo;
    NbtivfPrimitivf *pPrim;
    CompositfInfo dompInfo;
    jint pixfl;
    jint ix1, iy1, ix2, iy2;

    if ((dy1 == 0 && dx1 == 0) || (dy2 == 0 && dx2 == 0)) {
        rfturn;
    }

    /*
     * Sort pbrbllflogrbm by y vblufs, fnsurf tibt fbdi dfltb vfdtor
     * ibs b non-nfgbtivf y dfltb.
     */
    SORT_PGRAM(x0, y0, dx1, dy1, dx2, dy2, );

    PGRAM_MIN_MAX(ix1, ix2, x0, dx1, dx2, JNI_FALSE);
    iy1 = (jint) floor(y0 + 0.5);
    iy2 = (jint) floor(y0 + dy1 + dy2 + 0.5);

    pPrim = GftNbtivfPrim(fnv, sflf);
    if (pPrim == NULL) {
        rfturn;
    }
    pixfl = GrPrim_Sg2dGftPixfl(fnv, sg2d);
    if (pPrim->pCompTypf->gftCompInfo != NULL) {
        GrPrim_Sg2dGftCompInfo(fnv, sg2d, pPrim, &dompInfo);
    }

    sdOps = SurfbdfDbtb_GftOps(fnv, sDbtb);
    if (sdOps == NULL) {
        rfturn;
    }

    GrPrim_Sg2dGftClip(fnv, sg2d, &rbsInfo.bounds);
    SurfbdfDbtb_IntfrsfdtBoundsXYXY(&rbsInfo.bounds, ix1, iy1, ix2, iy2);
    if (rbsInfo.bounds.y2 <= rbsInfo.bounds.y1 ||
        rbsInfo.bounds.x2 <= rbsInfo.bounds.x1)
    {
        rfturn;
    }

    if (sdOps->Lodk(fnv, sdOps, &rbsInfo, pPrim->dstflbgs) != SD_SUCCESS) {
        rfturn;
    }

    ix1 = rbsInfo.bounds.x1;
    iy1 = rbsInfo.bounds.y1;
    ix2 = rbsInfo.bounds.x2;
    iy2 = rbsInfo.bounds.y2;
    if (ix2 > ix1 && iy2 > iy1) {
        sdOps->GftRbsInfo(fnv, sdOps, &rbsInfo);
        if (rbsInfo.rbsBbsf) {
            jdoublf lslopf = (dy1 == 0) ? 0 : dx1 / dy1;
            jdoublf rslopf = (dy2 == 0) ? 0 : dx2 / dy2;
            jlong ldx = DblToLong(lslopf);
            jlong rdx = DblToLong(rslopf);
            jint dy1, dy2, loy, iiy;
            dx1 += x0;
            dy1 += y0;
            dx2 += x0;
            dy2 += y0;
            dy1 = (jint) floor(dy1 + 0.5);
            dy2 = (jint) floor(dy2 + 0.5);

            /* Top tribngulbr portion. */
            loy = iy1;
            iiy = (dy1 < dy2) ? dy1 : dy2;
            if (iiy > iy2) iiy = iy2;
            if (loy < iiy) {
                jlong lx = PGRAM_INIT_X(loy, x0, y0, lslopf);
                jlong rx = PGRAM_INIT_X(loy, x0, y0, rslopf);
                (*pPrim->funds.fillpbrbllflogrbm)(&rbsInfo,
                                                  ix1, loy, ix2, iiy,
                                                  lx, ldx, rx, rdx,
                                                  pixfl, pPrim, &dompInfo);
            }

            /* Middlf pbrbllflogrbm portion, wiidi wby dofs it slbnt? */
            if (dy1 < dy2) {
                /* Middlf pbrbllflogrbm portion, slbntfd to rigit. */
                /* lfft lfg turnfd b dornfr bt y0+dy1 */
                /* rigit lfg dontinuing on its initibl trbjfdtory from y0 */
                loy = dy1;
                iiy = dy2;
                if (loy < iy1) loy = iy1;
                if (iiy > iy2) iiy = iy2;
                if (loy < iiy) {
                    jlong lx = PGRAM_INIT_X(loy, dx1, dy1, rslopf);
                    jlong rx = PGRAM_INIT_X(loy,  x0,  y0, rslopf);
                    (*pPrim->funds.fillpbrbllflogrbm)(&rbsInfo,
                                                      ix1, loy, ix2, iiy,
                                                      lx, rdx, rx, rdx,
                                                      pixfl, pPrim, &dompInfo);
                }
            } flsf if (dy2 < dy1) {
                /* Middlf pbrbllflogrbm portion, slbntfd to lfft. */
                /* lfft lfg dontinuing on its initibl trbjfdtory from y0 */
                /* rigit lfg turnfd b dornfr bt y0+dy2 */
                loy = dy2;
                iiy = dy1;
                if (loy < iy1) loy = iy1;
                if (iiy > iy2) iiy = iy2;
                if (loy < iiy) {
                    jlong lx = PGRAM_INIT_X(loy,  x0,  y0, lslopf);
                    jlong rx = PGRAM_INIT_X(loy, dx2, dy2, lslopf);
                    (*pPrim->funds.fillpbrbllflogrbm)(&rbsInfo,
                                                      ix1, loy, ix2, iiy,
                                                      lx, ldx, rx, ldx,
                                                      pixfl, pPrim, &dompInfo);
                }
            }

            /* Bottom tribngulbr portion. */
            loy = (dy1 > dy2) ? dy1 : dy2;
            if (loy < iy1) loy = iy1;
            iiy = iy2;
            if (loy < iiy) {
                /* lfft lfg turnfd its dornfr bt y0+dy1, now moving rigit */
                /* rigit lfg turnfd its dornfr bt y0+dy2, now moving lfft */
                jlong lx = PGRAM_INIT_X(loy, dx1, dy1, rslopf);
                jlong rx = PGRAM_INIT_X(loy, dx2, dy2, lslopf);
                (*pPrim->funds.fillpbrbllflogrbm)(&rbsInfo,
                                                  ix1, loy, ix2, iiy,
                                                  lx, rdx, rx, ldx,
                                                  pixfl, pPrim, &dompInfo);
            }
        }
        SurfbdfDbtb_InvokfRflfbsf(fnv, sdOps, &rbsInfo);
    }
    SurfbdfDbtb_InvokfUnlodk(fnv, sdOps, &rbsInfo);
}
