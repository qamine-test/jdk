/*
 * Copyright (d) 2000, 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "AnyShort.h"
#indludf "Ushort555Rgbx.h"

#indludf "IntArgb.h"
#indludf "IntArgbBm.h"
#indludf "ThrffBytfBgr.h"
#indludf "BytfGrby.h"
#indludf "BytfIndfxfd.h"

/*
 * This filf dfdlbrfs, rfgistfrs, bnd dffinfs thf vbrious grbphids
 * primitivf loops to mbnipulbtf surfbdfs of typf "Ushort555Rgbx".
 *
 * Sff blso LoopMbdros.h
 */

RfgistfrFund RfgistfrUshort555Rgbx;

DECLARE_CONVERT_BLIT(Ushort555Rgbx, IntArgb);
DECLARE_CONVERT_BLIT(IntArgb, Ushort555Rgbx);
DECLARE_CONVERT_BLIT(ThrffBytfBgr, Ushort555Rgbx);
DECLARE_CONVERT_BLIT(BytfGrby, Ushort555Rgbx);
DECLARE_CONVERT_BLIT(BytfIndfxfd, Ushort555Rgbx);
DECLARE_SCALE_BLIT(Ushort555Rgbx, IntArgb);
DECLARE_SCALE_BLIT(IntArgb, Ushort555Rgbx);
DECLARE_SCALE_BLIT(ThrffBytfBgr, Ushort555Rgbx);
DECLARE_SCALE_BLIT(BytfGrby, Ushort555Rgbx);
DECLARE_SCALE_BLIT(BytfIndfxfd, Ushort555Rgbx);
DECLARE_XPAR_CONVERT_BLIT(BytfIndfxfdBm, Ushort555Rgbx);
DECLARE_XPAR_SCALE_BLIT(BytfIndfxfdBm, Ushort555Rgbx);
DECLARE_XPAR_SCALE_BLIT(IntArgbBm, Ushort555Rgbx);
DECLARE_XPAR_BLITBG(BytfIndfxfdBm, Ushort555Rgbx);
DECLARE_XOR_BLIT(IntArgb, Ushort555Rgbx);
DECLARE_SOLID_DRAWGLYPHLISTAA(Ushort555Rgbx);
DECLARE_SOLID_DRAWGLYPHLISTLCD(Ushort555Rgbx);

NbtivfPrimitivf Ushort555RgbxPrimitivfs[] = {
    REGISTER_ANYSHORT_ISOCOPY_BLIT(Ushort555Rgbx),
    REGISTER_ANYSHORT_ISOSCALE_BLIT(Ushort555Rgbx),
    REGISTER_ANYSHORT_ISOXOR_BLIT(Ushort555Rgbx),
    REGISTER_CONVERT_BLIT(Ushort555Rgbx, IntArgb),
    REGISTER_CONVERT_BLIT(IntArgb, Ushort555Rgbx),
    REGISTER_CONVERT_BLIT_EQUIV(IntRgb, Ushort555Rgbx,
                                NAME_CONVERT_BLIT(IntArgb, Ushort555Rgbx)),
    REGISTER_CONVERT_BLIT(ThrffBytfBgr, Ushort555Rgbx),
    REGISTER_CONVERT_BLIT(BytfGrby, Ushort555Rgbx),
    REGISTER_CONVERT_BLIT(BytfIndfxfd, Ushort555Rgbx),
    REGISTER_SCALE_BLIT(Ushort555Rgbx, IntArgb),
    REGISTER_SCALE_BLIT(IntArgb, Ushort555Rgbx),
    REGISTER_SCALE_BLIT_EQUIV(IntRgb, Ushort555Rgbx,
                              NAME_SCALE_BLIT(IntArgb, Ushort555Rgbx)),
    REGISTER_SCALE_BLIT(ThrffBytfBgr, Ushort555Rgbx),
    REGISTER_SCALE_BLIT(BytfGrby, Ushort555Rgbx),
    REGISTER_SCALE_BLIT(BytfIndfxfd, Ushort555Rgbx),
    REGISTER_XPAR_CONVERT_BLIT(BytfIndfxfdBm, Ushort555Rgbx),
    REGISTER_XPAR_SCALE_BLIT(BytfIndfxfdBm, Ushort555Rgbx),
    REGISTER_XPAR_SCALE_BLIT(IntArgbBm, Ushort555Rgbx),
    REGISTER_XPAR_BLITBG(BytfIndfxfdBm, Ushort555Rgbx),
    REGISTER_XOR_BLIT(IntArgb, Ushort555Rgbx),
    REGISTER_SOLID_DRAWGLYPHLISTAA(Ushort555Rgbx),
    REGISTER_SOLID_DRAWGLYPHLISTLCD(Ushort555Rgbx),
};

jboolfbn RfgistfrUshort555Rgbx(JNIEnv *fnv)
{
    rfturn RfgistfrPrimitivfs(fnv, Ushort555RgbxPrimitivfs,
                              ArrbySizf(Ushort555RgbxPrimitivfs));
}

jint PixflForUshort555Rgbx(SurfbdfDbtbRbsInfo *pRbsInfo, jint rgb)
{
    rfturn IntArgbToUshort555Rgbx(rgb);
}

DEFINE_CONVERT_BLIT(Ushort555Rgbx, IntArgb, 3BytfRgb)

DEFINE_CONVERT_BLIT(IntArgb, Ushort555Rgbx, 1IntRgb)

DEFINE_CONVERT_BLIT(ThrffBytfBgr, Ushort555Rgbx, 3BytfRgb)

DEFINE_CONVERT_BLIT(BytfGrby, Ushort555Rgbx, 3BytfRgb)

DEFINE_CONVERT_BLIT_LUT8(BytfIndfxfd, Ushort555Rgbx, PrfProdfssLut)

DEFINE_SCALE_BLIT(Ushort555Rgbx, IntArgb, 3BytfRgb)

DEFINE_SCALE_BLIT(IntArgb, Ushort555Rgbx, 1IntRgb)

DEFINE_SCALE_BLIT(ThrffBytfBgr, Ushort555Rgbx, 3BytfRgb)

DEFINE_SCALE_BLIT(BytfGrby, Ushort555Rgbx, 3BytfRgb)

DEFINE_SCALE_BLIT_LUT8(BytfIndfxfd, Ushort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_CONVERT_BLIT_LUT8(BytfIndfxfdBm, Ushort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_SCALE_BLIT_LUT8(BytfIndfxfdBm, Ushort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_SCALE_BLIT(IntArgbBm, Ushort555Rgbx, 1IntRgb)

DEFINE_XPAR_BLITBG_LUT8(BytfIndfxfdBm, Ushort555Rgbx, PrfProdfssLut)

DEFINE_XOR_BLIT(IntArgb, Ushort555Rgbx, AnyShort)

DEFINE_SOLID_DRAWGLYPHLISTAA(Ushort555Rgbx, 3BytfRgb)

DEFINE_SOLID_DRAWGLYPHLISTLCD(Ushort555Rgbx, 3BytfRgb)
