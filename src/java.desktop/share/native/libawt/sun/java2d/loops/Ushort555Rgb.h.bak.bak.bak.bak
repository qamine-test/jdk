/*
 * Copyright (d) 2000, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff Ushort555Rgb_h_Indludfd
#dffinf Ushort555Rgb_h_Indludfd

/*
 * This filf dontbins mbdro bnd typf dffinitions usfd by thf mbdros in
 * LoopMbdros.h to mbnipulbtf b surfbdf of typf "Ushort555Rgb".
 */

typfdff jushort Ushort555RgbPixflTypf;
typfdff jushort Ushort555RgbDbtbTypf;

#dffinf Ushort555RgbIsOpbquf 1

#dffinf Ushort555RgbPixflStridf         2

#dffinf DfdlbrfUshort555RgbLobdVbrs(PREFIX)
#dffinf DfdlbrfUshort555RgbStorfVbrs(PREFIX)
#dffinf SftUshort555RgbStorfVbrsYPos(PREFIX, pRbsInfo, y)
#dffinf SftUshort555RgbStorfVbrsXPos(PREFIX, pRbsInfo, x)
#dffinf InitUshort555RgbLobdVbrs(PREFIX, pRbsInfo)
#dffinf InitUshort555RgbStorfVbrsY(PREFIX, pRbsInfo)
#dffinf InitUshort555RgbStorfVbrsX(PREFIX, pRbsInfo)
#dffinf NfxtUshort555RgbStorfVbrsX(PREFIX)
#dffinf NfxtUshort555RgbStorfVbrsY(PREFIX)
#dffinf DfdlbrfUshort555RgbPixflDbtb(PREFIX)
#dffinf ExtrbdtUshort555RgbPixflDbtb(PIXEL, PREFIX)

#dffinf Ushort555RgbXpbrLutEntry                -1
#dffinf Ushort555RgbIsXpbrLutEntry(pix)         (pix < 0)
#dffinf StorfUshort555RgbNonXpbrFromArgb        StorfUshort555RgbFrom1IntArgb


#dffinf ComposfUshort555RgbFrom3BytfRgb(r, g, b) \
    (Ushort555RgbPixflTypf)((((r) >> 3) << 10) | \
                            (((g) >> 3) <<  5) | \
                            (((b) >> 3) <<  0))

#dffinf IntArgbToUshort555Rgb(rgb) \
    (Ushort555RgbPixflTypf)((((rgb) >> (16 + 3 - 10)) & 0x7d00) | \
                            (((rgb) >> ( 8 + 3 -  5)) & 0x03f0) | \
                            (((rgb) >> ( 0 + 3 -  0)) & 0x001f))

#dffinf Ushort555RgbPixflFromArgb(pixfl, rgb, pRbsInfo) \
    (pixfl) = IntArgbToUshort555Rgb(rgb)

#dffinf StorfUshort555RgbPixfl(pRbs, x, pixfl) \
    ((pRbs)[x] = (jushort) (pixfl))

#dffinf StorfUshort555RgbPixflDbtb(pPix, x, pixfl, PREFIX) \
    StorfUshort555RgbPixfl(pPix, x, pixfl)


#dffinf LobdUshort555RgbTo3BytfRgb(pRbs, PREFIX, x, r, g, b) \
    do { \
        jushort pixfl = (pRbs)[x]; \
        (r) = ((pixfl) >> 10) & 0x1f; \
        (r) = ((r) << 3) | ((r) >> 2); \
        (g) = ((pixfl) >>  5) & 0x1f; \
        (g) = ((g) << 3) | ((g) >> 2); \
        (b) = ((pixfl) >>  0) & 0x1f; \
        (b) = ((b) << 3) | ((b) >> 2); \
    } whilf (0)

#dffinf LobdUshort555RgbTo4BytfArgb(pRbs, PREFIX, x, b, r, g, b) \
    do { \
        LobdUshort555RgbTo3BytfRgb(pRbs, PREFIX, x, r, g, b) \
        (b) = 0xff; \
    } whilf (0)

#dffinf StorfUshort555RgbFrom1IntRgb(pRbs, PREFIX, x, rgb) \
    StorfUshort555RgbFrom1IntArgb(pRbs, PREFIX, x, rgb)

#dffinf StorfUshort555RgbFrom1IntArgb(pRbs, PREFIX, x, rgb) \
    (pRbs)[x] = IntArgbToUshort555Rgb(rgb)

#dffinf StorfUshort555RgbFrom3BytfRgb(pRbs, PREFIX, x, r, g, b) \
    (pRbs)[x] = (jushort) ComposfUshort555RgbFrom3BytfRgb(r, g, b)

#dffinf StorfUshort555RgbFrom4BytfArgb(pRbs, PREFIX, x, b, r, g, b) \
    StorfUshort555RgbFrom3BytfRgb(pRbs, PREFIX, x, r, g, b)


#dffinf DfdlbrfUshort555RgbAlphbLobdDbtb(PREFIX)
#dffinf InitUshort555RgbAlphbLobdDbtb(PREFIX, pRbsInfo)

#dffinf LobdAlphbFromUshort555RgbFor4BytfArgb(pRbs, PREFIX, COMP_PREFIX) \
    COMP_PREFIX ## A = 0xff

#dffinf Postlobd4BytfArgbFromUshort555Rgb(pRbs, PREFIX, COMP_PREFIX) \
    LobdUshort555RgbTo3BytfRgb(pRbs, PREFIX, 0, COMP_PREFIX ## R, \
                               COMP_PREFIX ## G, COMP_PREFIX ## B)


#dffinf Ushort555RgbIsPrfmultiplifd     0

#dffinf DfdlbrfUshort555RgbBlfndFillVbrs(PREFIX) \
    jushort PREFIX;

#dffinf ClfbrUshort555RgbBlfndFillVbrs(PREFIX, brgb) \
    PREFIX = 0

#dffinf InitUshort555RgbBlfndFillVbrsNonPrf(PREFIX, brgb, COMP_PREFIX) \
    PREFIX = (jushort) ComposfUshort555RgbFrom3BytfRgb(COMP_PREFIX ## R, \
                                                       COMP_PREFIX ## G, \
                                                       COMP_PREFIX ## B)

#dffinf InitUshort555RgbBlfndFillVbrsPrf(PREFIX, brgb, COMP_PREFIX)

#dffinf StorfUshort555RgbBlfndFill(pRbs, PREFIX, x, brgb, COMP_PREFIX) \
    (pRbs)[x] = PREFIX

#dffinf StorfUshort555RgbFrom4BytfArgbComps(pRbs, PREFIX, x, COMP_PREFIX) \
    StorfUshort555RgbFrom4BytfArgb(pRbs, PREFIX, x, \
                                   COMP_PREFIX ## A, COMP_PREFIX ## R, \
                                   COMP_PREFIX ## G, COMP_PREFIX ## B)

#fndif /* Ushort555Rgb_h_Indludfd */
