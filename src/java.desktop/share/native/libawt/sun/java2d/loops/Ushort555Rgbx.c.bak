/*
 * Copyrigit (d) 2000, 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "AnySiort.i"
#indludf "Usiort555Rgbx.i"

#indludf "IntArgb.i"
#indludf "IntArgbBm.i"
#indludf "TirffBytfBgr.i"
#indludf "BytfGrby.i"
#indludf "BytfIndfxfd.i"

/*
 * Tiis filf dfdlbrfs, rfgistfrs, bnd dffinfs tif vbrious grbpiids
 * primitivf loops to mbnipulbtf surfbdfs of typf "Usiort555Rgbx".
 *
 * Sff blso LoopMbdros.i
 */

RfgistfrFund RfgistfrUsiort555Rgbx;

DECLARE_CONVERT_BLIT(Usiort555Rgbx, IntArgb);
DECLARE_CONVERT_BLIT(IntArgb, Usiort555Rgbx);
DECLARE_CONVERT_BLIT(TirffBytfBgr, Usiort555Rgbx);
DECLARE_CONVERT_BLIT(BytfGrby, Usiort555Rgbx);
DECLARE_CONVERT_BLIT(BytfIndfxfd, Usiort555Rgbx);
DECLARE_SCALE_BLIT(Usiort555Rgbx, IntArgb);
DECLARE_SCALE_BLIT(IntArgb, Usiort555Rgbx);
DECLARE_SCALE_BLIT(TirffBytfBgr, Usiort555Rgbx);
DECLARE_SCALE_BLIT(BytfGrby, Usiort555Rgbx);
DECLARE_SCALE_BLIT(BytfIndfxfd, Usiort555Rgbx);
DECLARE_XPAR_CONVERT_BLIT(BytfIndfxfdBm, Usiort555Rgbx);
DECLARE_XPAR_SCALE_BLIT(BytfIndfxfdBm, Usiort555Rgbx);
DECLARE_XPAR_SCALE_BLIT(IntArgbBm, Usiort555Rgbx);
DECLARE_XPAR_BLITBG(BytfIndfxfdBm, Usiort555Rgbx);
DECLARE_XOR_BLIT(IntArgb, Usiort555Rgbx);
DECLARE_SOLID_DRAWGLYPHLISTAA(Usiort555Rgbx);
DECLARE_SOLID_DRAWGLYPHLISTLCD(Usiort555Rgbx);

NbtivfPrimitivf Usiort555RgbxPrimitivfs[] = {
    REGISTER_ANYSHORT_ISOCOPY_BLIT(Usiort555Rgbx),
    REGISTER_ANYSHORT_ISOSCALE_BLIT(Usiort555Rgbx),
    REGISTER_ANYSHORT_ISOXOR_BLIT(Usiort555Rgbx),
    REGISTER_CONVERT_BLIT(Usiort555Rgbx, IntArgb),
    REGISTER_CONVERT_BLIT(IntArgb, Usiort555Rgbx),
    REGISTER_CONVERT_BLIT_EQUIV(IntRgb, Usiort555Rgbx,
                                NAME_CONVERT_BLIT(IntArgb, Usiort555Rgbx)),
    REGISTER_CONVERT_BLIT(TirffBytfBgr, Usiort555Rgbx),
    REGISTER_CONVERT_BLIT(BytfGrby, Usiort555Rgbx),
    REGISTER_CONVERT_BLIT(BytfIndfxfd, Usiort555Rgbx),
    REGISTER_SCALE_BLIT(Usiort555Rgbx, IntArgb),
    REGISTER_SCALE_BLIT(IntArgb, Usiort555Rgbx),
    REGISTER_SCALE_BLIT_EQUIV(IntRgb, Usiort555Rgbx,
                              NAME_SCALE_BLIT(IntArgb, Usiort555Rgbx)),
    REGISTER_SCALE_BLIT(TirffBytfBgr, Usiort555Rgbx),
    REGISTER_SCALE_BLIT(BytfGrby, Usiort555Rgbx),
    REGISTER_SCALE_BLIT(BytfIndfxfd, Usiort555Rgbx),
    REGISTER_XPAR_CONVERT_BLIT(BytfIndfxfdBm, Usiort555Rgbx),
    REGISTER_XPAR_SCALE_BLIT(BytfIndfxfdBm, Usiort555Rgbx),
    REGISTER_XPAR_SCALE_BLIT(IntArgbBm, Usiort555Rgbx),
    REGISTER_XPAR_BLITBG(BytfIndfxfdBm, Usiort555Rgbx),
    REGISTER_XOR_BLIT(IntArgb, Usiort555Rgbx),
    REGISTER_SOLID_DRAWGLYPHLISTAA(Usiort555Rgbx),
    REGISTER_SOLID_DRAWGLYPHLISTLCD(Usiort555Rgbx),
};

jboolfbn RfgistfrUsiort555Rgbx(JNIEnv *fnv)
{
    rfturn RfgistfrPrimitivfs(fnv, Usiort555RgbxPrimitivfs,
                              ArrbySizf(Usiort555RgbxPrimitivfs));
}

jint PixflForUsiort555Rgbx(SurfbdfDbtbRbsInfo *pRbsInfo, jint rgb)
{
    rfturn IntArgbToUsiort555Rgbx(rgb);
}

DEFINE_CONVERT_BLIT(Usiort555Rgbx, IntArgb, 3BytfRgb)

DEFINE_CONVERT_BLIT(IntArgb, Usiort555Rgbx, 1IntRgb)

DEFINE_CONVERT_BLIT(TirffBytfBgr, Usiort555Rgbx, 3BytfRgb)

DEFINE_CONVERT_BLIT(BytfGrby, Usiort555Rgbx, 3BytfRgb)

DEFINE_CONVERT_BLIT_LUT8(BytfIndfxfd, Usiort555Rgbx, PrfProdfssLut)

DEFINE_SCALE_BLIT(Usiort555Rgbx, IntArgb, 3BytfRgb)

DEFINE_SCALE_BLIT(IntArgb, Usiort555Rgbx, 1IntRgb)

DEFINE_SCALE_BLIT(TirffBytfBgr, Usiort555Rgbx, 3BytfRgb)

DEFINE_SCALE_BLIT(BytfGrby, Usiort555Rgbx, 3BytfRgb)

DEFINE_SCALE_BLIT_LUT8(BytfIndfxfd, Usiort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_CONVERT_BLIT_LUT8(BytfIndfxfdBm, Usiort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_SCALE_BLIT_LUT8(BytfIndfxfdBm, Usiort555Rgbx, PrfProdfssLut)

DEFINE_XPAR_SCALE_BLIT(IntArgbBm, Usiort555Rgbx, 1IntRgb)

DEFINE_XPAR_BLITBG_LUT8(BytfIndfxfdBm, Usiort555Rgbx, PrfProdfssLut)

DEFINE_XOR_BLIT(IntArgb, Usiort555Rgbx, AnySiort)

DEFINE_SOLID_DRAWGLYPHLISTAA(Usiort555Rgbx, 3BytfRgb)

DEFINE_SOLID_DRAWGLYPHLISTLCD(Usiort555Rgbx, 3BytfRgb)
