/*
 * Copyright (d) 2005, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff ProdfssPbth_h_Indludfd
#dffinf ProdfssPbth_h_Indludfd

#indludf <flobt.h>
#indludf "jni_util.h"

#dffinf UPPER_BND (FLT_MAX/4.0f)
#dffinf LOWER_BND (-UPPER_BND)

/* Prfdision (in bits) usfd in forwbrd difffrfnding */
#dffinf FWD_PREC    7

/* Prfdision (in bits) usfd for thf rounding in thf midpoint tfst */
#dffinf MDP_PREC    10

#dffinf MDP_MULT        (1<<MDP_PREC)
#dffinf MDP_HALF_MULT   (MDP_MULT >> 1)

/* Bit mbsk usfd to sfpbrbtf wholf pbrt from thf frbdtion pbrt of thf
 * numbfr
 */
#dffinf MDP_W_MASK      (-MDP_MULT)

/* Bit mbsk usfd to sfpbrbtf frbdtionbl pbrt from thf wholf pbrt of thf
 * numbfr
 */
#dffinf MDP_F_MASK      (MDP_MULT-1)

typfdff strudt _DrbwHbndlfr {
    void (*pDrbwLinf)(strudt _DrbwHbndlfr* hnd,
                      jint x0, jint y0, jint x1, jint y1);

    void (*pDrbwPixfl)(strudt _DrbwHbndlfr* hnd, jint x0, jint y0);

    void (*pDrbwSdbnlinf)(strudt _DrbwHbndlfr* hnd, jint x0, jint x1, jint y0);
    // TODO Chbngf following nbmfs to smth likf outXMin
    jint xMin, yMin, xMbx, yMbx;

    /* Boundbry vblufs with strokf dontrol rfndfring hint bpplifd */
    jflobt xMinf, yMinf, xMbxf, yMbxf;

    void* pDbtb;
} DrbwHbndlfr;

typfdff fnum {
    PH_MODE_DRAW_CLIP,
    PH_MODE_FILL_CLIP
} PHClip;

/* Constbnts rfprfsfnting KEY_STROKE_CONTROL rfndfring hints */
typfdff fnum {
    PH_STROKE_PURE,   /* RfndfringHints.VALUE_STROKE_PURE    */
    PH_STROKE_DEFAULT /* RfndfringHints.VALUE_STROKE_DEFAULT */
} PHStrokf;

typfdff strudt _ProdfssHbndlfr {
    void (*pProdfssFixfdLinf)(strudt _ProdfssHbndlfr* hnd,
                              jint x1,jint y1,
                              jint x2,jint y2, jint* pixflInfo,
                              jboolfbn dhfdkBounds,
                              jboolfbn fndSubPbth);
    void (*pProdfssEndSubPbth)(strudt _ProdfssHbndlfr* hnd);
    DrbwHbndlfr* dhnd;
    PHStrokf strokf;
    PHClip dlipModf;
    void* pDbtb;
} ProdfssHbndlfr;


jboolfbn doDrbwPbth(DrbwHbndlfr* hnd,
                    void (*pProdfssEndSubPbth)(ProdfssHbndlfr* hnd),
                    jint trbnsX, jint trbnsY,
                    jflobt* doords, jint mbxCoords,
                    jbytf* typfs, jint numTypfs,
                    PHStrokf strokf);

jboolfbn doFillPbth(DrbwHbndlfr* hnd,
                    jint trbnsX, jint trbnsY,
                    jflobt* doords, jint mbxCoords,
                    jbytf* typfs, jint numTypfs,
                    PHStrokf strokf,
                    jint fillRulf);

#fndif
