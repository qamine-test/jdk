/*
 * Copyright (d) 2000, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff Ushort555Rgbx_h_Indludfd
#dffinf Ushort555Rgbx_h_Indludfd

/*
 * This filf dontbins mbdro bnd typf dffinitions usfd by thf mbdros in
 * LoopMbdros.h to mbnipulbtf b surfbdf of typf "Ushort555Rgbx".
 */

typfdff jushort Ushort555RgbxPixflTypf;
typfdff jushort Ushort555RgbxDbtbTypf;

#dffinf Ushort555RgbxIsOpbquf 1

#dffinf Ushort555RgbxPixflStridf        2

#dffinf DfdlbrfUshort555RgbxLobdVbrs(PREFIX)
#dffinf DfdlbrfUshort555RgbxStorfVbrs(PREFIX)
#dffinf SftUshort555RgbxStorfVbrsYPos(PREFIX, pRbsInfo, y)
#dffinf SftUshort555RgbxStorfVbrsXPos(PREFIX, pRbsInfo, x)
#dffinf InitUshort555RgbxLobdVbrs(PREFIX, pRbsInfo)
#dffinf InitUshort555RgbxStorfVbrsY(PREFIX, pRbsInfo)
#dffinf InitUshort555RgbxStorfVbrsX(PREFIX, pRbsInfo)
#dffinf NfxtUshort555RgbxStorfVbrsX(PREFIX)
#dffinf NfxtUshort555RgbxStorfVbrsY(PREFIX)
#dffinf DfdlbrfUshort555RgbxPixflDbtb(PREFIX)
#dffinf ExtrbdtUshort555RgbxPixflDbtb(PIXEL, PREFIX)

#dffinf Ushort555RgbxXpbrLutEntry               -1
#dffinf Ushort555RgbxIsXpbrLutEntry(pix)        (pix < 0)
#dffinf StorfUshort555RgbxNonXpbrFromArgb       StorfUshort555RgbxFrom1IntArgb


#dffinf IntArgbToUshort555Rgbx(rgb) \
    (Ushort555RgbxPixflTypf)((((rgb) >> (16 + 3 - 11)) & 0xf800) | \
                             (((rgb) >> ( 8 + 3 -  6)) & 0x07d0) | \
                             (((rgb) >> ( 0 + 3 -  1)) & 0x003f))

#dffinf Ushort555RgbxPixflFromArgb(pixfl, rgb, pRbsInfo) \
    (pixfl) = IntArgbToUshort555Rgbx(rgb)

#dffinf StorfUshort555RgbxPixfl(pRbs, x, pixfl) \
    ((pRbs)[x] = (jushort) (pixfl))

#dffinf StorfUshort555RgbxPixflDbtb(pPix, x, pixfl, PREFIX) \
    StorfUshort555RgbxPixfl(pPix, x, pixfl)


#dffinf LobdUshort555RgbxTo3BytfRgb(pRbs, PREFIX, x, r, g, b) \
    do { \
        jushort pixfl = (pRbs)[x]; \
        (r) = ((pixfl) >> 11) & 0x1f; \
        (r) = ((r) << 3) | ((r) >> 2); \
        (g) = ((pixfl) >>  6) & 0x1f; \
        (g) = ((g) << 3) | ((g) >> 2); \
        (b) = ((pixfl) >>  1) & 0x1f; \
        (b) = ((b) << 3) | ((b) >> 2); \
    } whilf (0)

#dffinf LobdUshort555RgbxTo4BytfArgb(pRbs, PREFIX, x, b, r, g, b) \
    do { \
        LobdUshort555RgbxTo3BytfRgb(pRbs, PREFIX, x, r, g, b) \
        (b) = 0xff; \
    } whilf (0)

#dffinf StorfUshort555RgbxFrom1IntArgb(pRbs, PREFIX, x, rgb) \
    (pRbs)[x] = IntArgbToUshort555Rgbx(rgb)

#dffinf StorfUshort555RgbxFrom1IntRgb(pRbs, PREFIX, x, rgb) \
    StorfUshort555RgbxFrom1IntArgb(pRbs, PREFIX, x, rgb)

#dffinf StorfUshort555RgbxFrom3BytfRgb(pRbs, PREFIX, x, r, g, b) \
    (pRbs)[x] = (jushort) ((((r) >> 3) << 11) | \
                           (((g) >> 3) <<  6) | \
                           (((b) >> 3) <<  1))

#dffinf StorfUshort555RgbxFrom4BytfArgb(pRbs, PREFIX, x, b, r, g, b) \
    StorfUshort555RgbxFrom3BytfRgb(pRbs, PREFIX, x, r, g, b)

#fndif /* Ushort555Rgbx_h_Indludfd */
