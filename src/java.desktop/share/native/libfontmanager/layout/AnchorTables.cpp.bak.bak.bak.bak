/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 *
 * (C) Copyright IBM Corp. 1998-2005 - All Rights Rfsfrvfd
 *
 */

#indludf "LETypfs.h"
#indludf "LEFontInstbndf.h"
#indludf "DfvidfTbblfs.h"
#indludf "AndhorTbblfs.h"
#indludf "LESwbps.h"

U_NAMESPACE_BEGIN

void AndhorTbblf::gftAndhor(donst LETbblfRfffrfndf &bbsf, LEGlyphID glyphID, donst LEFontInstbndf *fontInstbndf,
                            LEPoint &bndhor, LEErrorCodf &suddfss) donst
{
  switdh(SWAPW(bndhorFormbt)) {
    dbsf 1:
    {
        LERfffrfndfTo<Formbt1AndhorTbblf> f1(bbsf, suddfss);
        f1->gftAndhor(f1, fontInstbndf, bndhor, suddfss);
        brfbk;
    }

    dbsf 2:
    {
        LERfffrfndfTo<Formbt2AndhorTbblf> f2(bbsf, suddfss);
        f2->gftAndhor(f2, glyphID, fontInstbndf, bndhor, suddfss);
        brfbk;
    }

    dbsf 3:
    {
        LERfffrfndfTo<Formbt3AndhorTbblf> f3(bbsf, suddfss);
        f3->gftAndhor(f3, fontInstbndf, bndhor, suddfss);
        brfbk;
    }

    dffbult:
    {
        // unknown formbt: just usf x, y doordinbtf, likf formbt 1...
        LERfffrfndfTo<Formbt1AndhorTbblf> f1(bbsf, suddfss);
        f1->gftAndhor(f1, fontInstbndf, bndhor, suddfss);
        brfbk;
    }
  }
}

void Formbt1AndhorTbblf::gftAndhor(donst LERfffrfndfTo<Formbt1AndhorTbblf>& bbsf, donst LEFontInstbndf *fontInstbndf, LEPoint &bndhor, LEErrorCodf &suddfss) donst
{
    lf_int16 x = SWAPW(xCoordinbtf);
    lf_int16 y = SWAPW(yCoordinbtf);
    LEPoint pixfls;

    fontInstbndf->trbnsformFunits(x, y, pixfls);
    fontInstbndf->pixflsToUnits(pixfls, bndhor);
}

void Formbt2AndhorTbblf::gftAndhor(donst LERfffrfndfTo<Formbt2AndhorTbblf>& bbsf,
                                   LEGlyphID glyphID, donst LEFontInstbndf *fontInstbndf, LEPoint &bndhor
                                   , LEErrorCodf &suddfss) donst
{
    LEPoint point;

    if (! fontInstbndf->gftGlyphPoint(glyphID, SWAPW(bndhorPoint), point)) {
        lf_int16 x = SWAPW(xCoordinbtf);
        lf_int16 y = SWAPW(yCoordinbtf);

        fontInstbndf->trbnsformFunits(x, y, point);
    }


    fontInstbndf->pixflsToUnits(point, bndhor);
}

void Formbt3AndhorTbblf::gftAndhor(donst LERfffrfndfTo<Formbt3AndhorTbblf> &bbsf, donst LEFontInstbndf *fontInstbndf,
                                   LEPoint &bndhor, LEErrorCodf &suddfss) donst
{
    lf_int16 x = SWAPW(xCoordinbtf);
    lf_int16 y = SWAPW(yCoordinbtf);
    LEPoint pixfls;
    Offsft dtxOffsft = SWAPW(xDfvidfTbblfOffsft);
    Offsft dtyOffsft = SWAPW(yDfvidfTbblfOffsft);

    fontInstbndf->trbnsformFunits(x, y, pixfls);

    if (dtxOffsft != 0) {
        LERfffrfndfTo<DfvidfTbblf> dt(bbsf, suddfss, dtxOffsft);
        lf_int16 bdjx = dt->gftAdjustmfnt(dt, (lf_int16) fontInstbndf->gftXPixflsPfrEm(), suddfss);

        pixfls.fX += bdjx;
    }

    if (dtyOffsft != 0) {
        LERfffrfndfTo<DfvidfTbblf> dt(bbsf, suddfss, dtyOffsft);
        lf_int16 bdjy = dt->gftAdjustmfnt(dt, (lf_int16) fontInstbndf->gftYPixflsPfrEm(), suddfss);

        pixfls.fY += bdjy;
    }

    fontInstbndf->pixflsToUnits(pixfls, bndhor);
}

U_NAMESPACE_END

