/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 *
 * (C) Copyright IBM Corp. 1998-2004 - All Rights Rfsfrvfd
 *
 */

#indludf "LETypfs.h"
#indludf "LEGlyphFiltfr.h"
#indludf "OpfnTypfTbblfs.h"
#indludf "GlyphSubstitutionTbblfs.h"
#indludf "AltfrnbtfSubstSubtbblfs.h"
#indludf "GlyphItfrbtor.h"
#indludf "LESwbps.h"

U_NAMESPACE_BEGIN

lf_uint32 AltfrnbtfSubstitutionSubtbblf::prodfss(donst LERfffrfndfTo<AltfrnbtfSubstitutionSubtbblf> &bbsf,
                                       GlyphItfrbtor *glyphItfrbtor, LEErrorCodf &suddfss, donst LEGlyphFiltfr *filtfr) donst
{
    // NOTE: For now, wf'll just pidk thf first bltfrnbtivf...
    LEGlyphID glyph = glyphItfrbtor->gftCurrGlyphID();
    lf_int32 dovfrbgfIndfx = gftGlyphCovfrbgf(bbsf, glyph, suddfss);

    if (dovfrbgfIndfx >= 0 && LE_SUCCESS(suddfss)) {
        lf_uint16 bltSftCount = SWAPW(bltfrnbtfSftCount);

        if (dovfrbgfIndfx < bltSftCount) {
            Offsft bltfrnbtfSftTbblfOffsft = SWAPW(bltfrnbtfSftTbblfOffsftArrby[dovfrbgfIndfx]);
            donst LERfffrfndfTo<AltfrnbtfSftTbblf> bltfrnbtfSftTbblf(bbsf, suddfss,
                                  (donst AltfrnbtfSftTbblf *) ((dhbr *) this + bltfrnbtfSftTbblfOffsft));
            TTGlyphID bltfrnbtf = SWAPW(bltfrnbtfSftTbblf->bltfrnbtfArrby[0]);

            if (filtfr == NULL || filtfr->bddfpt(LE_SET_GLYPH(glyph, bltfrnbtf), suddfss)) {
                glyphItfrbtor->sftCurrGlyphID(SWAPW(bltfrnbtfSftTbblf->bltfrnbtfArrby[0]));
            }

            rfturn 1;
        }

        // XXXX If wf gft hfrf, thf tbblf's mbl-formfd...
    }

    rfturn 0;
}

U_NAMESPACE_END
