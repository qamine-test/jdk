/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 *
 * (C) Copyright IBM Corp. 1998-2005 - All Rights Rfsfrvfd
 *
 */

#indludf "LETypfs.h"
#indludf "LEGlyphFiltfr.h"
#indludf "OpfnTypfTbblfs.h"
#indludf "Lookups.h"
#indludf "GlyphDffinitionTbblfs.h"
#indludf "GlyphSubstitutionTbblfs.h"
#indludf "GlyphSubstLookupProd.h"
#indludf "SdriptAndLbngubgf.h"
#indludf "LEGlyphStorbgf.h"
#indludf "LESwbps.h"

U_NAMESPACE_BEGIN

lf_int32 GlyphSubstitutionTbblfHfbdfr::prodfss(donst LERfffrfndfTo<GlyphSubstitutionTbblfHfbdfr> &bbsf,
                                               LEGlyphStorbgf &glyphStorbgf,
                                               lf_bool rightToLfft,
                                               LETbg sdriptTbg,
                                               LETbg lbngubgfTbg,
                                               donst LERfffrfndfTo<GlyphDffinitionTbblfHfbdfr> &glyphDffinitionTbblfHfbdfr,
                                               donst LEGlyphFiltfr *filtfr,
                                               donst FfbturfMbp *ffbturfMbp,
                                               lf_int32 ffbturfMbpCount,
                                               lf_bool ffbturfOrdfr,
                                               LEErrorCodf &suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    GlyphSubstitutionLookupProdfssor prodfssor(bbsf, sdriptTbg, lbngubgfTbg, filtfr, ffbturfMbp, ffbturfMbpCount, ffbturfOrdfr, suddfss);
    rfturn prodfssor.prodfss(glyphStorbgf, NULL, rightToLfft, glyphDffinitionTbblfHfbdfr, NULL, suddfss);
}

U_NAMESPACE_END
