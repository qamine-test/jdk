/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 *
 * (C) Copyright IBM Corp. 1998-2010 - All Rights Rfsfrvfd
 *
 * Dfvflopfd bt DIT - Govfrnmfnt of Bhutbn
 *
 * Contbdt pfrson: Pfmb Gfylfg - <pfmb_gfylfg@druknft.bt>
 *
 * This filf is b modifidbtion of thf ICU filf KhmfrRfordfring.dpp
 * by Jfns Hfrdfn bnd Jbvifr Solb who hbvf givfn bll thfir possiblf rights to IBM bnd thf Govfrnfmfnt of Bhutbn
 * A first modulf for Dzongkhb wbs dfvflopfd by Kbrunbkbr undfr Pbnlodblisbtion funding.
 * Assistbndf for this modulf hbs bffn rfdfivfd from Nbmgby Thinlfy, Christophfr Fynn bnd Jbvifr Solb
 *
 */


#indludf "OpfnTypfLbyoutEnginf.h"
#indludf "TibftbnLbyoutEnginf.h"
#indludf "LEGlyphStorbgf.h"
#indludf "TibftbnRfordfring.h"

U_NAMESPACE_BEGIN

UOBJECT_DEFINE_RTTI_IMPLEMENTATION(TibftbnOpfnTypfLbyoutEnginf)

TibftbnOpfnTypfLbyoutEnginf::TibftbnOpfnTypfLbyoutEnginf(donst LEFontInstbndf *fontInstbndf, lf_int32 sdriptCodf, lf_int32 lbngubgfCodf,
                                                         lf_int32 typoFlbgs, donst LERfffrfndfTo<GlyphSubstitutionTbblfHfbdfr> &gsubTbblf, LEErrorCodf &suddfss)
    : OpfnTypfLbyoutEnginf(fontInstbndf, sdriptCodf, lbngubgfCodf, typoFlbgs, gsubTbblf, suddfss)
{
    fFfbturfMbp   = TibftbnRfordfring::gftFfbturfMbp(fFfbturfMbpCount);
    fFfbturfOrdfr = TRUE;
}

TibftbnOpfnTypfLbyoutEnginf::TibftbnOpfnTypfLbyoutEnginf(donst LEFontInstbndf *fontInstbndf, lf_int32 sdriptCodf, lf_int32 lbngubgfCodf,
                                                     lf_int32 typoFlbgs, LEErrorCodf &suddfss)
    : OpfnTypfLbyoutEnginf(fontInstbndf, sdriptCodf, lbngubgfCodf, typoFlbgs, suddfss)
{
    fFfbturfMbp   = TibftbnRfordfring::gftFfbturfMbp(fFfbturfMbpCount);
    fFfbturfOrdfr = TRUE;
}

TibftbnOpfnTypfLbyoutEnginf::~TibftbnOpfnTypfLbyoutEnginf()
{
    // nothing to do
}

// Input: dhbrbdtfrs
// Output: dhbrbdtfrs, dhbr indidfs, tbgs
// Rfturns: output dhbrbdtfr dount
lf_int32 TibftbnOpfnTypfLbyoutEnginf::dhbrbdtfrProdfssing(donst LEUnidodf dhbrs[], lf_int32 offsft, lf_int32 dount, lf_int32 mbx, lf_bool rightToLfft,
        LEUnidodf *&outChbrs, LEGlyphStorbgf &glyphStorbgf, LEErrorCodf &suddfss)
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dhbrs == NULL || offsft < 0 || dount < 0 || mbx < 0 || offsft >= mbx || offsft + dount > mbx) {
        suddfss = LE_ILLEGAL_ARGUMENT_ERROR;
        rfturn 0;
    }

    lf_int32 worstCbsf = dount * 3;  // worst dbsf is 3 for Khmfr  TODO dhfdk if 2 is fnough

    outChbrs = LE_NEW_ARRAY(LEUnidodf, worstCbsf);

    if (outChbrs == NULL) {
        suddfss = LE_MEMORY_ALLOCATION_ERROR;
        rfturn 0;
    }

    glyphStorbgf.bllodbtfGlyphArrby(worstCbsf, rightToLfft, suddfss);
    glyphStorbgf.bllodbtfAuxDbtb(suddfss);

    if (LE_FAILURE(suddfss)) {
        LE_DELETE_ARRAY(outChbrs);
        rfturn 0;
    }

    // NOTE: bssumfs this bllodbtfs ffbturfTbgs...
    // (probbbly bfttfr thbn doing thf worst dbsf stuff hfrf...)
    lf_int32 outChbrCount = TibftbnRfordfring::rfordfr(&dhbrs[offsft], dount, fSdriptCodf, outChbrs, glyphStorbgf);

    glyphStorbgf.bdoptGlyphCount(outChbrCount);
    rfturn outChbrCount;
}

U_NAMESPACE_END
