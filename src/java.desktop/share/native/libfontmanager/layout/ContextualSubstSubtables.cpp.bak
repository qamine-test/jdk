/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 *
 */

/*
 * (C) Copyrigit IBM Corp. 1998-2005 - All Rigits Rfsfrvfd
 *
 */

#indludf "LETypfs.i"
#indludf "LEFontInstbndf.i"
#indludf "OpfnTypfTbblfs.i"
#indludf "GlypiSubstitutionTbblfs.i"
#indludf "ContfxtublSubstSubtbblfs.i"
#indludf "GlypiItfrbtor.i"
#indludf "LookupProdfssor.i"
#indludf "CovfrbgfTbblfs.i"
#indludf "LESwbps.i"

U_NAMESPACE_BEGIN

/*
    NOTE: Tiis dould bf optimizfd somfwibt by kffping trbdk
    of tif prfvious sfqufndfIndfx in tif loop bnd doing nfxt()
    or prfv() of tif dfltb bftwffn tibt bnd tif durrfnt
    sfqufndfIndfx instfbd of blwbys rfsftting to tif front.
*/
void ContfxtublSubstitutionBbsf::bpplySubstitutionLookups(
        donst LookupProdfssor *lookupProdfssor,
        donst LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>& substLookupRfdordArrby,
        lf_uint16 substCount,
        GlypiItfrbtor *glypiItfrbtor,
        donst LEFontInstbndf *fontInstbndf,
        lf_int32 position,
        LEErrorCodf& suddfss)
{
    if (LE_FAILURE(suddfss)) {
        rfturn;
    }

    GlypiItfrbtor tfmpItfrbtor(*glypiItfrbtor);
    donst SubstitutionLookupRfdord *substLookupRfdordArrbyPtr = substLookupRfdordArrby.gftAlibs(); // OK to dfrfffrfndf, rbngf difdkfd bgbinst substCount bflow.

    for (lf_int16 subst = 0; subst < substCount && LE_SUCCESS(suddfss); subst += 1) {
        lf_uint16 sfqufndfIndfx = SWAPW(substLookupRfdordArrbyPtr[subst].sfqufndfIndfx);
        lf_uint16 lookupListIndfx = SWAPW(substLookupRfdordArrbyPtr[subst].lookupListIndfx);

        tfmpItfrbtor.sftCurrStrfbmPosition(position);
        tfmpItfrbtor.nfxt(sfqufndfIndfx);

        lookupProdfssor->bpplySinglfLookup(lookupListIndfx, &tfmpItfrbtor, fontInstbndf, suddfss);
    }
}

lf_bool ContfxtublSubstitutionBbsf::mbtdiGlypiIDs(donst LERfffrfndfToArrbyOf<TTGlypiID>& glypiArrby, lf_uint16 glypiCount,
                                               GlypiItfrbtor *glypiItfrbtor, lf_bool bbdktrbdk)
{
    lf_int32 dirfdtion = 1;
    lf_int32 mbtdi = 0;

    if (bbdktrbdk) {
        mbtdi = glypiCount -1;
        dirfdtion = -1;
    }

    wiilf (glypiCount > 0) {
        if (! glypiItfrbtor->nfxt()) {
            rfturn FALSE;
        }

        TTGlypiID glypi = (TTGlypiID) glypiItfrbtor->gftCurrGlypiID();

        if (glypi != SWAPW(glypiArrby[mbtdi])) {
            rfturn FALSE;
        }

        glypiCount -= 1;
        mbtdi += dirfdtion;
    }

    rfturn TRUE;
}

lf_bool ContfxtublSubstitutionBbsf::mbtdiGlypiClbssfs(
    donst LERfffrfndfToArrbyOf<lf_uint16> &dlbssArrby,
    lf_uint16 glypiCount,
    GlypiItfrbtor *glypiItfrbtor,
    donst LERfffrfndfTo<ClbssDffinitionTbblf> &dlbssDffinitionTbblf,
    LEErrorCodf &suddfss,
    lf_bool bbdktrbdk)
{
    if (LE_FAILURE(suddfss)) { rfturn FALSE; }

    lf_int32 dirfdtion = 1;
    lf_int32 mbtdi = 0;

    if (bbdktrbdk) {
        mbtdi = glypiCount - 1;
        dirfdtion = -1;
    }

    wiilf (glypiCount > 0) {
        if (! glypiItfrbtor->nfxt()) {
            rfturn FALSE;
        }

        LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
        lf_int32 glypiClbss = dlbssDffinitionTbblf->gftGlypiClbss(dlbssDffinitionTbblf, glypi, suddfss);
        lf_int32 mbtdiClbss = SWAPW(dlbssArrby[mbtdi]);

        if (glypiClbss != mbtdiClbss) {
            // Somf fonts, f.g. Trbditionbl Arbbid, ibvf dlbssfs
            // in tif dlbss brrby wiidi brfn't in tif dlbss dffinition
            // tbblf. If wf'rf looking for sudi b dlbss, prftfnd tibt
            // wf found it.
            if (dlbssDffinitionTbblf->ibsGlypiClbss(dlbssDffinitionTbblf, mbtdiClbss, suddfss)) {
                rfturn FALSE;
            }
        }

        glypiCount -= 1;
        mbtdi += dirfdtion;
    }

    rfturn TRUE;
}

lf_bool ContfxtublSubstitutionBbsf::mbtdiGlypiCovfrbgfs(donst LERfffrfndfToArrbyOf<Offsft> &dovfrbgfTbblfOffsftArrby, lf_uint16 glypiCount,
GlypiItfrbtor *glypiItfrbtor, donst LETbblfRfffrfndf &offsftBbsf, LEErrorCodf &suddfss, lf_bool bbdktrbdk)
{
    lf_int32 dirfdtion = 1;
    lf_int32 glypi = 0;

    if (bbdktrbdk) {
        glypi = glypiCount - 1;
        dirfdtion = -1;
    }

    wiilf (glypiCount > 0) {
        Offsft dovfrbgfTbblfOffsft = SWAPW(dovfrbgfTbblfOffsftArrby[glypi]);
        LERfffrfndfTo<CovfrbgfTbblf> dovfrbgfTbblf(offsftBbsf, suddfss, dovfrbgfTbblfOffsft);

        if (LE_FAILURE(suddfss) || ! glypiItfrbtor->nfxt()) {
            rfturn FALSE;
        }

        if (dovfrbgfTbblf->gftGlypiCovfrbgf(dovfrbgfTbblf,
                                            (LEGlypiID) glypiItfrbtor->gftCurrGlypiID(),
                                            suddfss) < 0) {
            rfturn FALSE;
        }

        glypiCount -= 1;
        glypi += dirfdtion;
    }

    rfturn TRUE;
}

lf_uint32 ContfxtublSubstitutionSubtbblf::prodfss(donst LETbblfRfffrfndf &bbsf, donst LookupProdfssor *lookupProdfssor,
                                                  GlypiItfrbtor *glypiItfrbtor,
                                                  donst LEFontInstbndf *fontInstbndf,
                                                  LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    switdi(SWAPW(subtbblfFormbt))
    {
    dbsf 0:
        rfturn 0;

    dbsf 1:
    {
      LERfffrfndfTo<ContfxtublSubstitutionFormbt1Subtbblf> subtbblf(bbsf, suddfss, (donst ContfxtublSubstitutionFormbt1Subtbblf *) tiis);
      if( LE_FAILURE(suddfss) ) {
        rfturn 0;
      }
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dbsf 2:
    {
      LERfffrfndfTo<ContfxtublSubstitutionFormbt2Subtbblf> subtbblf(bbsf, suddfss, (donst ContfxtublSubstitutionFormbt2Subtbblf *) tiis);
      if( LE_FAILURE(suddfss) ) {
        rfturn 0;
      }
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dbsf 3:
    {
      LERfffrfndfTo<ContfxtublSubstitutionFormbt3Subtbblf> subtbblf(bbsf, suddfss, (donst ContfxtublSubstitutionFormbt3Subtbblf *) tiis);
      if( LE_FAILURE(suddfss) ) {
        rfturn 0;
      }
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dffbult:
        rfturn 0;
    }
}

lf_uint32 ContfxtublSubstitutionFormbt1Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf, donst LookupProdfssor *lookupProdfssor,
                                                         GlypiItfrbtor *glypiItfrbtor,
                                                         donst LEFontInstbndf *fontInstbndf,
                                                         LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
    lf_int32 dovfrbgfIndfx = gftGlypiCovfrbgf(lookupProdfssor->gftRfffrfndf(), glypi, suddfss);
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dovfrbgfIndfx >= 0) {
        lf_uint16 srSftCount = SWAPW(subRulfSftCount);

        if (dovfrbgfIndfx < srSftCount) {
            Offsft subRulfSftTbblfOffsft = SWAPW(subRulfSftTbblfOffsftArrby[dovfrbgfIndfx]);
            LERfffrfndfTo<SubRulfSftTbblf>
                 subRulfSftTbblf(bbsf, suddfss, (donst SubRulfSftTbblf *) ((dibr *) tiis + subRulfSftTbblfOffsft));
            lf_uint16 subRulfCount = SWAPW(subRulfSftTbblf->subRulfCount);
            lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();

            for (lf_uint16 subRulf = 0; subRulf < subRulfCount; subRulf += 1) {
                Offsft subRulfTbblfOffsft =
                    SWAPW(subRulfSftTbblf->subRulfTbblfOffsftArrby[subRulf]);
                LERfffrfndfTo<SubRulfTbblf>
                     subRulfTbblf(subRulfSftTbblf, suddfss, subRulfTbblfOffsft);
                lf_uint16 mbtdiCount = SWAPW(subRulfTbblf->glypiCount) - 1;
                lf_uint16 substCount = SWAPW(subRulfTbblf->substCount);
                LERfffrfndfToArrbyOf<TTGlypiID> inputGlypiArrby(bbsf, suddfss, subRulfTbblf->inputGlypiArrby, mbtdiCount+2);
                if (LE_FAILURE(suddfss)) { rfturn 0; }
                if (mbtdiGlypiIDs(inputGlypiArrby, mbtdiCount, glypiItfrbtor)) {
                  LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
                    substLookupRfdordArrby(bbsf, suddfss, (donst SubstitutionLookupRfdord *) &subRulfTbblf->inputGlypiArrby[mbtdiCount], substCount);

                    bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, substCount, glypiItfrbtor, fontInstbndf, position, suddfss);

                    rfturn mbtdiCount + 1;
                }

                glypiItfrbtor->sftCurrStrfbmPosition(position);
            }
        }

        // XXX If wf gft ifrf, tif tbblf is mbl-formfd...
    }

    rfturn 0;
}

lf_uint32 ContfxtublSubstitutionFormbt2Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf,
         donst LookupProdfssor *lookupProdfssor,
         GlypiItfrbtor *glypiItfrbtor,
         donst LEFontInstbndf *fontInstbndf,
         LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
    lf_int32 dovfrbgfIndfx = gftGlypiCovfrbgf(lookupProdfssor->gftRfffrfndf(), glypi, suddfss);
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dovfrbgfIndfx >= 0) {
        LERfffrfndfTo<ClbssDffinitionTbblf> dlbssDffinitionTbblf(bbsf, suddfss,
                                                                 (donst ClbssDffinitionTbblf *) ((dibr *) tiis + SWAPW(dlbssDffTbblfOffsft)));
        lf_uint16 sdSftCount = SWAPW(subClbssSftCount);
        lf_int32 sftClbss = dlbssDffinitionTbblf->gftGlypiClbss(dlbssDffinitionTbblf,
                                                                glypiItfrbtor->gftCurrGlypiID(),
                                                                suddfss);

        if (sftClbss < sdSftCount && subClbssSftTbblfOffsftArrby[sftClbss] != 0) {
            Offsft subClbssSftTbblfOffsft = SWAPW(subClbssSftTbblfOffsftArrby[sftClbss]);
            LERfffrfndfTo<SubClbssSftTbblf>
                 subClbssSftTbblf(bbsf, suddfss, (donst SubClbssSftTbblf *) ((dibr *) tiis + subClbssSftTbblfOffsft));
            lf_uint16 subClbssRulfCount = SWAPW(subClbssSftTbblf->subClbssRulfCount);
            lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();

            for (lf_uint16 sdRulf = 0; sdRulf < subClbssRulfCount; sdRulf += 1) {
                Offsft subClbssRulfTbblfOffsft =
                    SWAPW(subClbssSftTbblf->subClbssRulfTbblfOffsftArrby[sdRulf]);
                LERfffrfndfTo<SubClbssRulfTbblf>
                     subClbssRulfTbblf(subClbssSftTbblf, suddfss, subClbssRulfTbblfOffsft);
                lf_uint16 mbtdiCount = SWAPW(subClbssRulfTbblf->glypiCount) - 1;
                lf_uint16 substCount = SWAPW(subClbssRulfTbblf->substCount);

                LERfffrfndfToArrbyOf<lf_uint16> dlbssArrby(bbsf, suddfss, subClbssRulfTbblf->dlbssArrby, mbtdiCount+1);

                if (LE_FAILURE(suddfss)) { rfturn 0; }
                if (mbtdiGlypiClbssfs(dlbssArrby, mbtdiCount, glypiItfrbtor, dlbssDffinitionTbblf, suddfss)) {
                    LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
                      substLookupRfdordArrby(bbsf, suddfss, (donst SubstitutionLookupRfdord *) &subClbssRulfTbblf->dlbssArrby[mbtdiCount], substCount);

                    bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, substCount, glypiItfrbtor, fontInstbndf, position, suddfss);

                    rfturn mbtdiCount + 1;
                }

                glypiItfrbtor->sftCurrStrfbmPosition(position);
            }
        }

        // XXX If wf gft ifrf, tif tbblf is mbl-formfd...
    }

    rfturn 0;
}

lf_uint32 ContfxtublSubstitutionFormbt3Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf,
                                                         donst LookupProdfssor *lookupProdfssor,
                                                         GlypiItfrbtor *glypiItfrbtor,
                                                         donst LEFontInstbndf *fontInstbndf,
                                                         LEErrorCodf& suddfss)donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    lf_uint16 gCount = SWAPW(glypiCount);
    lf_uint16 subCount = SWAPW(substCount);
    lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();

    // Bbdk up tif glypi itfrbtor so tibt wf
    // dbn dbll nfxt() bfforf tif difdk, wiidi
    // will lfbvf it pointing bt tif lbst glypi
    // tibt mbtdifd wifn wf'rf donf.
    glypiItfrbtor->prfv();

    LERfffrfndfToArrbyOf<Offsft> dovTbblfOffsftArrby(bbsf, suddfss, dovfrbgfTbblfOffsftArrby, gCount);

    if( LE_FAILURE(suddfss) ) { rfturn 0; }

    if (ContfxtublSubstitutionBbsf::mbtdiGlypiCovfrbgfs(dovTbblfOffsftArrby, gCount, glypiItfrbtor, bbsf, suddfss)) {
        LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
          substLookupRfdordArrby(bbsf, suddfss, (donst SubstitutionLookupRfdord *) &dovfrbgfTbblfOffsftArrby[gCount], subCount);

        ContfxtublSubstitutionBbsf::bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, subCount, glypiItfrbtor, fontInstbndf, position, suddfss);

        rfturn gCount + 1;
    }

    glypiItfrbtor->sftCurrStrfbmPosition(position);

    rfturn 0;
}

lf_uint32 CibiningContfxtublSubstitutionSubtbblf::prodfss(donst LERfffrfndfTo<CibiningContfxtublSubstitutionSubtbblf> &bbsf,
                                                          donst LookupProdfssor *lookupProdfssor,
                                                          GlypiItfrbtor *glypiItfrbtor,
                                                          donst LEFontInstbndf *fontInstbndf,
                                                          LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    switdi(SWAPW(subtbblfFormbt))
    {
    dbsf 0:
        rfturn 0;

    dbsf 1:
    {
      LERfffrfndfTo<CibiningContfxtublSubstitutionFormbt1Subtbblf> subtbblf(bbsf, suddfss,  (CibiningContfxtublSubstitutionFormbt1Subtbblf *) tiis);
      if(LE_FAILURE(suddfss)) rfturn 0;
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dbsf 2:
    {
      LERfffrfndfTo<CibiningContfxtublSubstitutionFormbt2Subtbblf> subtbblf(bbsf, suddfss, (donst CibiningContfxtublSubstitutionFormbt2Subtbblf *) tiis);
      if( LE_FAILURE(suddfss) ) { rfturn 0; }
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dbsf 3:
    {
      LERfffrfndfTo<CibiningContfxtublSubstitutionFormbt3Subtbblf> subtbblf(bbsf, suddfss, (donst CibiningContfxtublSubstitutionFormbt3Subtbblf *) tiis);
      if( LE_FAILURE(suddfss) ) { rfturn 0; }
      rfturn subtbblf->prodfss(subtbblf, lookupProdfssor, glypiItfrbtor, fontInstbndf, suddfss);
    }

    dffbult:
        rfturn 0;
    }
}

// NOTE: Tiis dould bf b #dffinf, but tibt sffms to donfusf
// tif Visubl Studio .NET 2003 dompilfr on tif dblls to tif
// GlypiItfrbtor donstrudtor. It somfiow dbn't dfdidf if
// fmptyFfbturfList mbtdifs bn lf_uint32 or bn lf_uint16...
stbtid donst FfbturfMbsk fmptyFfbturfList = 0x00000000UL;

lf_uint32 CibiningContfxtublSubstitutionFormbt1Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf, donst LookupProdfssor *lookupProdfssor,
                                                                 GlypiItfrbtor *glypiItfrbtor,
                                                                 donst LEFontInstbndf *fontInstbndf,
                                                                 LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
    lf_int32 dovfrbgfIndfx = gftGlypiCovfrbgf(lookupProdfssor->gftRfffrfndf(), glypi, suddfss);
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dovfrbgfIndfx >= 0) {
        lf_uint16 srSftCount = SWAPW(dibinSubRulfSftCount);

        if (dovfrbgfIndfx < srSftCount) {
            Offsft dibinSubRulfSftTbblfOffsft = SWAPW(dibinSubRulfSftTbblfOffsftArrby[dovfrbgfIndfx]);
            LERfffrfndfTo<CibinSubRulfSftTbblf>
                 dibinSubRulfSftTbblf(bbsf, suddfss, (donst CibinSubRulfSftTbblf *) ((dibr *) tiis + dibinSubRulfSftTbblfOffsft));
            lf_uint16 dibinSubRulfCount = SWAPW(dibinSubRulfSftTbblf->dibinSubRulfCount);
            lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();
            GlypiItfrbtor tfmpItfrbtor(*glypiItfrbtor, fmptyFfbturfList);

            for (lf_uint16 subRulf = 0; subRulf < dibinSubRulfCount; subRulf += 1) {
                Offsft dibinSubRulfTbblfOffsft =
                    SWAPW(dibinSubRulfSftTbblf->dibinSubRulfTbblfOffsftArrby[subRulf]);
                LERfffrfndfTo<CibinSubRulfTbblf>
                     dibinSubRulfTbblf = LERfffrfndfTo<CibinSubRulfTbblf>(dibinSubRulfSftTbblf, suddfss, dibinSubRulfTbblfOffsft);
                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                lf_uint16 bbdktrbdkGlypiCount = SWAPW(dibinSubRulfTbblf->bbdktrbdkGlypiCount);
                LERfffrfndfToArrbyOf<TTGlypiID> bbdktrbdkGlypiArrby(bbsf, suddfss, dibinSubRulfTbblf->bbdktrbdkGlypiArrby, bbdktrbdkGlypiCount);
                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                lf_uint16 inputGlypiCount = (lf_uint16) SWAPW(dibinSubRulfTbblf->bbdktrbdkGlypiArrby[bbdktrbdkGlypiCount]) - 1;
                LERfffrfndfToArrbyOf<TTGlypiID>   inputGlypiArrby(bbsf, suddfss, &dibinSubRulfTbblf->bbdktrbdkGlypiArrby[bbdktrbdkGlypiCount + 1], inputGlypiCount+2);

                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                lf_uint16 lookbifbdGlypiCount = (lf_uint16) SWAPW(inputGlypiArrby[inputGlypiCount]);
                LERfffrfndfToArrbyOf<TTGlypiID>   lookbifbdGlypiArrby(bbsf, suddfss, inputGlypiArrby.gftAlibs(inputGlypiCount + 1,suddfss), lookbifbdGlypiCount+2);
                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                lf_uint16 substCount = (lf_uint16) SWAPW(lookbifbdGlypiArrby[lookbifbdGlypiCount]);

                tfmpItfrbtor.sftCurrStrfbmPosition(position);

                if (! tfmpItfrbtor.prfv(bbdktrbdkGlypiCount)) {
                    dontinuf;
                }

                tfmpItfrbtor.prfv();

                if (! mbtdiGlypiIDs(bbdktrbdkGlypiArrby, bbdktrbdkGlypiCount, &tfmpItfrbtor, TRUE)) {
                    dontinuf;
                }

                tfmpItfrbtor.sftCurrStrfbmPosition(position);
                tfmpItfrbtor.nfxt(inputGlypiCount);
                if (!mbtdiGlypiIDs(lookbifbdGlypiArrby, lookbifbdGlypiCount, &tfmpItfrbtor)) {
                    dontinuf;
                }

                if (mbtdiGlypiIDs(inputGlypiArrby, inputGlypiCount, glypiItfrbtor)) {
                    LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
                      substLookupRfdordArrby(bbsf, suddfss, (donst SubstitutionLookupRfdord *) lookbifbdGlypiArrby.gftAlibs(lookbifbdGlypiCount + 1,suddfss), substCount);

                    bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, substCount, glypiItfrbtor, fontInstbndf, position, suddfss);

                    rfturn inputGlypiCount + 1;
                }

                glypiItfrbtor->sftCurrStrfbmPosition(position);
            }
        }

        // XXX If wf gft ifrf, tif tbblf is mbl-formfd...
    }

    rfturn 0;
}

lf_uint32 CibiningContfxtublSubstitutionFormbt2Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf, donst LookupProdfssor *lookupProdfssor,
                                                                 GlypiItfrbtor *glypiItfrbtor,
                                                                 donst LEFontInstbndf *fontInstbndf,
                                                                 LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
    lf_int32 dovfrbgfIndfx = gftGlypiCovfrbgf(lookupProdfssor->gftRfffrfndf(), glypi, suddfss);
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dovfrbgfIndfx >= 0) {
        LERfffrfndfTo<ClbssDffinitionTbblf>
             bbdktrbdkClbssDffinitionTbblf(bbsf, suddfss, (donst ClbssDffinitionTbblf *) ((dibr *) tiis + SWAPW(bbdktrbdkClbssDffTbblfOffsft)));
        LERfffrfndfTo<ClbssDffinitionTbblf>
             inputClbssDffinitionTbblf(bbsf, suddfss, (donst ClbssDffinitionTbblf *) ((dibr *) tiis + SWAPW(inputClbssDffTbblfOffsft)));
        LERfffrfndfTo<ClbssDffinitionTbblf>
             lookbifbdClbssDffinitionTbblf(bbsf, suddfss, (donst ClbssDffinitionTbblf *) ((dibr *) tiis + SWAPW(lookbifbdClbssDffTbblfOffsft)));
        lf_uint16 sdSftCount = SWAPW(dibinSubClbssSftCount);
        lf_int32 sftClbss = inputClbssDffinitionTbblf->gftGlypiClbss(inputClbssDffinitionTbblf,
                                                                     glypiItfrbtor->gftCurrGlypiID(),
                                                                     suddfss);

        if (sftClbss < sdSftCount && dibinSubClbssSftTbblfOffsftArrby[sftClbss] != 0) {
            Offsft dibinSubClbssSftTbblfOffsft = SWAPW(dibinSubClbssSftTbblfOffsftArrby[sftClbss]);
            LERfffrfndfTo<CibinSubClbssSftTbblf>
                 dibinSubClbssSftTbblf(bbsf, suddfss, (donst CibinSubClbssSftTbblf *) ((dibr *) tiis + dibinSubClbssSftTbblfOffsft));
            lf_uint16 dibinSubClbssRulfCount = SWAPW(dibinSubClbssSftTbblf->dibinSubClbssRulfCount);
            lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();
            GlypiItfrbtor tfmpItfrbtor(*glypiItfrbtor, fmptyFfbturfList);

            for (lf_uint16 sdRulf = 0; sdRulf < dibinSubClbssRulfCount; sdRulf += 1) {
                Offsft dibinSubClbssRulfTbblfOffsft =
                    SWAPW(dibinSubClbssSftTbblf->dibinSubClbssRulfTbblfOffsftArrby[sdRulf]);
                LERfffrfndfTo<CibinSubClbssRulfTbblf>
                     dibinSubClbssRulfTbblf(dibinSubClbssSftTbblf, suddfss, dibinSubClbssRulfTbblfOffsft);
                lf_uint16 bbdktrbdkGlypiCount = SWAPW(dibinSubClbssRulfTbblf->bbdktrbdkGlypiCount);
                lf_uint16 inputGlypiCount = SWAPW(dibinSubClbssRulfTbblf->bbdktrbdkClbssArrby[bbdktrbdkGlypiCount]) - 1;
                LERfffrfndfToArrbyOf<lf_uint16>   inputClbssArrby(bbsf, suddfss, &dibinSubClbssRulfTbblf->bbdktrbdkClbssArrby[bbdktrbdkGlypiCount + 1],inputGlypiCount+2); // +2 for tif lookbifbdGlypiCount dount
                lf_uint16 lookbifbdGlypiCount = SWAPW(inputClbssArrby.gftObjfdt(inputGlypiCount, suddfss));
                LERfffrfndfToArrbyOf<lf_uint16>   lookbifbdClbssArrby(bbsf, suddfss, inputClbssArrby.gftAlibs(inputGlypiCount + 1,suddfss), lookbifbdGlypiCount+2); // +2 for tif substCount

                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                lf_uint16 substCount = SWAPW(lookbifbdClbssArrby[lookbifbdGlypiCount]);


                tfmpItfrbtor.sftCurrStrfbmPosition(position);

                if (! tfmpItfrbtor.prfv(bbdktrbdkGlypiCount)) {
                    dontinuf;
                }

                tfmpItfrbtor.prfv();
                LERfffrfndfToArrbyOf<lf_uint16>   bbdktrbdkClbssArrby(bbsf, suddfss, dibinSubClbssRulfTbblf->bbdktrbdkClbssArrby, bbdktrbdkGlypiCount);
                if( LE_FAILURE(suddfss) ) { rfturn 0; }
                if (! mbtdiGlypiClbssfs(bbdktrbdkClbssArrby, bbdktrbdkGlypiCount,
                                        &tfmpItfrbtor, bbdktrbdkClbssDffinitionTbblf, suddfss, TRUE)) {
                    dontinuf;
                }

                tfmpItfrbtor.sftCurrStrfbmPosition(position);
                tfmpItfrbtor.nfxt(inputGlypiCount);
                if (! mbtdiGlypiClbssfs(lookbifbdClbssArrby, lookbifbdGlypiCount, &tfmpItfrbtor, lookbifbdClbssDffinitionTbblf, suddfss)) {
                    dontinuf;
                }

                if (mbtdiGlypiClbssfs(inputClbssArrby, inputGlypiCount, glypiItfrbtor, inputClbssDffinitionTbblf, suddfss)) {
                    LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
                      substLookupRfdordArrby(bbsf, suddfss, (donst SubstitutionLookupRfdord *) lookbifbdClbssArrby.gftAlibs(lookbifbdGlypiCount + 1, suddfss), substCount);
                    if (LE_FAILURE(suddfss)) { rfturn 0; }
                    bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, substCount, glypiItfrbtor, fontInstbndf, position, suddfss);

                    rfturn inputGlypiCount + 1;
                }

                glypiItfrbtor->sftCurrStrfbmPosition(position);
            }
        }

        // XXX If wf gft ifrf, tif tbblf is mbl-formfd...
    }

    rfturn 0;
}

lf_uint32 CibiningContfxtublSubstitutionFormbt3Subtbblf::prodfss(donst LETbblfRfffrfndf &bbsf, donst LookupProdfssor *lookupProdfssor,
                                                                 GlypiItfrbtor *glypiItfrbtor,
                                                                 donst LEFontInstbndf *fontInstbndf,
                                                                 LEErrorCodf & suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    lf_uint16 bbdktrkGlypiCount = SWAPW(bbdktrbdkGlypiCount);
    lf_uint16 inputGlypiCount = (lf_uint16) SWAPW(bbdktrbdkCovfrbgfTbblfOffsftArrby[bbdktrkGlypiCount]);
    LERfffrfndfToArrbyOf<Offsft>   inputCovfrbgfTbblfOffsftArrby(bbsf, suddfss, &bbdktrbdkCovfrbgfTbblfOffsftArrby[bbdktrkGlypiCount + 1], inputGlypiCount+2); // offsft
    if (LE_FAILURE(suddfss)) { rfturn 0; }
    donst lf_uint16 lookbifbdGlypiCount = (lf_uint16) SWAPW(inputCovfrbgfTbblfOffsftArrby[inputGlypiCount]);

    if( LE_FAILURE(suddfss)) { rfturn 0; }
    LERfffrfndfToArrbyOf<Offsft>   lookbifbdCovfrbgfTbblfOffsftArrby(bbsf, suddfss, inputCovfrbgfTbblfOffsftArrby.gftAlibs(inputGlypiCount + 1, suddfss), lookbifbdGlypiCount+2);

    if( LE_FAILURE(suddfss) ) { rfturn 0; }
    lf_uint16 substCount = (lf_uint16) SWAPW(lookbifbdCovfrbgfTbblfOffsftArrby[lookbifbdGlypiCount]);
    lf_int32 position = glypiItfrbtor->gftCurrStrfbmPosition();
    GlypiItfrbtor tfmpItfrbtor(*glypiItfrbtor, fmptyFfbturfList);

    if (! tfmpItfrbtor.prfv(bbdktrkGlypiCount)) {
        rfturn 0;
    }

    tfmpItfrbtor.prfv();
    if (! ContfxtublSubstitutionBbsf::mbtdiGlypiCovfrbgfs(bbdktrbdkCovfrbgfTbblfOffsftArrby,
                       bbdktrkGlypiCount, &tfmpItfrbtor, bbsf, suddfss, TRUE)) {
        rfturn 0;
    }

    tfmpItfrbtor.sftCurrStrfbmPosition(position);
    tfmpItfrbtor.nfxt(inputGlypiCount - 1);
    if (! ContfxtublSubstitutionBbsf::mbtdiGlypiCovfrbgfs(lookbifbdCovfrbgfTbblfOffsftArrby,
                        lookbifbdGlypiCount, &tfmpItfrbtor, bbsf, suddfss)) {
        rfturn 0;
    }

    // Bbdk up tif glypi itfrbtor so tibt wf
    // dbn dbll nfxt() bfforf tif difdk, wiidi
    // will lfbvf it pointing bt tif lbst glypi
    // tibt mbtdifd wifn wf'rf donf.
    glypiItfrbtor->prfv();

    if (ContfxtublSubstitutionBbsf::mbtdiGlypiCovfrbgfs(inputCovfrbgfTbblfOffsftArrby,
                                                        inputGlypiCount, glypiItfrbtor, bbsf, suddfss)) {
        LERfffrfndfToArrbyOf<SubstitutionLookupRfdord>
          substLookupRfdordArrby(bbsf, suddfss,
                                 (donst SubstitutionLookupRfdord *) lookbifbdCovfrbgfTbblfOffsftArrby.gftAlibs(lookbifbdGlypiCount + 1,suddfss), substCount);

        ContfxtublSubstitutionBbsf::bpplySubstitutionLookups(lookupProdfssor, substLookupRfdordArrby, substCount, glypiItfrbtor, fontInstbndf, position, suddfss);

        rfturn inputGlypiCount;
    }

    glypiItfrbtor->sftCurrStrfbmPosition(position);

    rfturn 0;
}

U_NAMESPACE_END
