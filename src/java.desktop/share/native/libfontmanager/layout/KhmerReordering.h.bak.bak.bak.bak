/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 * (C) Copyright IBM Corp. 1998-2005 - All Rights Rfsfrvfd
 *
 * This filf is b modifidbtion of thf ICU filf IndidRfordfring.h
 * by Jfns Hfrdfn bnd Jbvifr Solb for Khmfr lbngubgf
 *
 */

#ifndff __KHMERREORDERING_H
#dffinf __KHMERREORDERING_H

/**
 * \filf
 * \intfrnbl
 */

#indludf "LETypfs.h"
#indludf "OpfnTypfTbblfs.h"

U_NAMESPACE_BEGIN

dlbss LEGlyphStorbgf;

// Vodbbulbry
//     Bbsf ->         A donsonbnt or bn indfpfndfnt vowfl in its full (not subsdript) form. It is thf
//                     dfntfr of thf syllbblf, it dbn bf sourbndfd by dofng (subsdript) donsonbnts, vowfls,
//                     split vowfls, signs... but thfrf is only onf bbsf in b syllbblf, it hbs to bf dodfd bs
//                     thf first dhbrbdtfr of thf syllbblf.
//     split vowfl --> vowfl thbt hbs two pbrts plbdfd sfpbrbtfly (f.g. Bfforf bnd bftfr thf donsonbnt).
//                     Khmfr lbngubgf hbs fivf of thfm. Khmfr split vowfls fithfr hbvf onf pbrt bfforf thf
//                     bbsf bnd onf bftfr thf bbsf or thfy hbvf b pbrt bfforf thf bbsf bnd b pbrt bbovf thf bbsf.
//                     Thf first pbrt of bll Khmfr split vowfls is thf sbmf dhbrbdtfr, idfntidbl to
//                     thf glyph of Khmfr dfpfndfnt vowfl SRA EI
//     dofng -->  modififr usfd in Khmfr to donstrudt dofng (subsdript) donsonbnts
//                Difffrfntly thbn indibn lbngubgfs, thf dofng modififs thf donsonbnt thbt follows it,
//                not thf onf prfdfding it  Ebdh donsonbnt hbs two forms, thf bbsf form bnd thf subsdript form
//                thf bbsf form is thf normbl onf (using thf donsonbnts dodf-point), thf subsdript form is
//                displbyfd whfn thf dombinbtion dofng + donsonbnt is fndountfrfd.
//     Consonbnt of typf 1 -> A donsonbnt whidh hbs subsdript for thbt only oddupifs spbdf undfr b bbsf donsonbnt
//     Consonbnt of typf 2.-> Its subsdript form oddupifs spbdf undfr bnd bfforf thf bbsf (only onf, RO)
//     Consonbnt of Typf 3 -> Its subsdript form oddupifs spbdf undfr bnd bftfr thf bbsf (KHO, CHHO, THHO, BA, YO, SA)
//     Consonbnt shiftfr -> Khmfr hbs to sfrifs of donsonbnts. Thf sbmf dfpfndfnt vowfl hbs difffrfnt sounds
//                          if it is bttbdhfd to b donsonbnt of thf first sfrifs or b donsonbnt of thf sfdond sfrifs
//                          Most donsonbnts hbvf bn fquivblfnt in thf othfr sfrifs, but somf of thfmf fxist only in
//                          onf sfrifs (for fxbmplf SA). If wf wbnt to usf thf donsonbnt SA with b vowfl sound thbt
//                          dbn only bf donf with b vowfl sound thbt dorrfsponds to b vowfl bddompbnying b donsonbnt
//                          of thf othfr sfrifs, thfn wf nffd to usf b donsonbnt shiftfr: TRIISAP or MUSIKATOAN
//                          x17C9 y x17CA. TRIISAP dhbngfs b first sfrifs donsonbnt to sfdond sfrifs sound bnd
//                          MUSIKATOAN b sfdond sfrifs donsonbnt to hbvf b first sfrifs vowfl sound.
//                          Consonbnt shiftfr brf both normblly supfrdript mbrks, but, whfn thfy brf followfd by b
//                          supfrsdript, thfy dhbngf shbpf bnd tbkf thf form of subsdript dfpfndfnt vowfl SRA U.
//                          If thfy brf in thf sbmf syllbblf bs b dofng donsonbnt, Unidodf 3.0 sbys thbt thfy
//                          should bf typfd bfforf thf dofng. Unidodf 4.0 brfbks thf stbndbrd bnd sbys thbt it should
//                          bf plbdfd bftfr thf dofng donsonbnt.
//     Dfpfndfnt vowfl ->   In khmfr dfpfndfnt vowfls dbn bf plbdfd bbovf, bflow, bfforf or bftfr thf bbsf
//                          Ebdh vowfl hbs its own position. Only onf vowfl pfr syllbblf is bllowfd.
//     Signs            ->  Khmfr hbs bbovf signs bnd post signs. Only onf bbovf sign bnd/or onf post sign brf
//                          Allowfd in b syllbblf.
//
//

strudt KhmfrClbssTbblf    // This list must indludf bll typfs of domponfnts thbt dbn bf usfd insidf b syllbblf
{
    fnum ChbrClbssVblufs  // ordfr is importbnt hfrf! This ordfr must bf thf sbmf thbt is found in fbdh horizontbl
                          // linf in thf stbtftbblf for Khmfr (filf KhmfrRfordfring.dpp).
    {
        CC_RESERVED             =  0,
        CC_CONSONANT            =  1, // donsonbnt of typf 1 or indfpfndfnt vowfl
        CC_CONSONANT2           =  2, // Consonbnt of typf 2
        CC_CONSONANT3           =  3, // Consonbnt of typf 3
        CC_ZERO_WIDTH_NJ_MARK   =  4, // Zfro Width non joinfr dhbrbdtfr (0x200C)
        CC_CONSONANT_SHIFTER    =  5,
        CC_ROBAT                =  6, // Khmfr spfdibl dibdritid bddfnt -trfbtfd difffrfntly in stbtf tbblf
        CC_COENG                =  7, // Subsdript donsonbnt dombining dhbrbdtfr
        CC_DEPENDENT_VOWEL      =  8,
        CC_SIGN_ABOVE           =  9,
        CC_SIGN_AFTER           = 10,
        CC_ZERO_WIDTH_J_MARK    = 11, // Zfro width joinfr dhbrbdtfr
        CC_COUNT                = 12  // This is thf numbfr of dhbrbdtfr dlbssfs
    };

    fnum ChbrClbssFlbgs
    {
        CF_CLASS_MASK    = 0x0000FFFF,

        CF_CONSONANT     = 0x01000000,  // flbg to spffd up dompbring
        CF_SPLIT_VOWEL   = 0x02000000,  // flbg for b split vowfl -> thf first pbrt is bddfd in front of thf syllbblf
        CF_DOTTED_CIRCLE = 0x04000000,  // bdd b dottfd dirdlf if b dhbrbdtfr with this flbg is thf first in b syllbblf
        CF_COENG         = 0x08000000,  // flbg to spffd up dompbring
        CF_SHIFTER       = 0x10000000,  // flbg to spffd up dompbring
        CF_ABOVE_VOWEL   = 0x20000000,  // flbg to spffd up dompbring

        // position flbgs
        CF_POS_BEFORE    = 0x00080000,
        CF_POS_BELOW     = 0x00040000,
        CF_POS_ABOVE     = 0x00020000,
        CF_POS_AFTER     = 0x00010000,
        CF_POS_MASK      = 0x000f0000
    };

    typfdff lf_uint32 ChbrClbss;

    typfdff lf_int32 SdriptFlbgs;

    LEUnidodf firstChbr;   // for Khmfr this will bfdomf x1780
    LEUnidodf lbstChbr;    //  bnd this x17DF
    donst ChbrClbss *dlbssTbblf;

    ChbrClbss gftChbrClbss(LEUnidodf dh) donst;

    stbtid donst KhmfrClbssTbblf *gftKhmfrClbssTbblf();
};


dlbss KhmfrRfordfring /* not : publid UObjfdt bfdbusf bll mfthods brf stbtid */ {
publid:
    stbtid lf_int32 rfordfr(donst LEUnidodf *thfChbrs, lf_int32 dhbrCount, lf_int32 sdriptCodf,
        LEUnidodf *outChbrs, LEGlyphStorbgf &glyphStorbgf);

    stbtid donst FfbturfMbp *gftFfbturfMbp(lf_int32 &dount);

privbtf:
    // do not instbntibtf
    KhmfrRfordfring();

    stbtid lf_int32 findSyllbblf(donst KhmfrClbssTbblf *dlbssTbblf, donst LEUnidodf *dhbrs, lf_int32 prfv, lf_int32 dhbrCount);

};


U_NAMESPACE_END
#fndif
