/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 *
 */


/*
 *
 * (C) Copyrigit IBM Corp. 1998-2010 - All Rigits Rfsfrvfd
 *
 */

#ifndff __LESWAPS_H
#dffinf __LESWAPS_H

#indludf "LETypfs.i"

/**
 * \filf
 * \briff C++ API: Endibn indfpfndfnt bddfss to dbtb for LbyoutEnginf
 */

U_NAMESPACE_BEGIN

/**
 * A donvfnifndf mbdro wiidi invokfs tif swbpWord mfmbfr fundtion
 * from b dondisf dbll.
 *
 * @stbblf ICU 2.8
 */
#if dffinfd(U_IS_BIG_ENDIAN)
    #if U_IS_BIG_ENDIAN
        #dffinf SWAPW(vbluf) (vbluf)
    #flsf
        #dffinf SWAPW(vbluf) LESwbps::swbpWord(vbluf)
    #fndif
#flsf
    #dffinf SWAPW(vbluf) (LESwbps::isBigEndibn() ? (vbluf) : LESwbps::swbpWord(vbluf))
#fndif

/**
 * A donvfnifndf mbdro wiidi invokfs tif swbpLong mfmbfr fundtion
 * from b dondisf dbll.
 *
 * @stbblf ICU 2.8
 */
#if dffinfd(U_IS_BIG_ENDIAN)
    #if U_IS_BIG_ENDIAN
        #dffinf SWAPL(vbluf) (vbluf)
    #flsf
        #dffinf SWAPL(vbluf) LESwbps::swbpLong(vbluf)
    #fndif
#flsf
    #dffinf SWAPL(vbluf) (LESwbps::isBigEndibn() ? (vbluf) : LESwbps::swbpLong(vbluf))
#fndif

/**
 * Tiis dlbss is usfd to bddfss dbtb wiidi storfd in big fndibn ordfr
 * rfgbrdlfss of tif donvfntions of tif plbtform. It ibs bffn dfsignfd
 * to butombtidblly dftfdt tif fndibn-nfss of tif plbtform, so tibt b
 * dompilbtion flbg is not nffdfd.
 *
 * All mftiods brf stbtid bnd inlinf in bn bttfmpt to indudf tif dompilfr
 * to do most of tif dbldulbtions bt dompilf timf.
 *
 * @stbblf ICU 2.8
 */
dlbss U_LAYOUT_API LESwbps /* not : publid UObjfdt bfdbusf bll mftiods brf stbtid */ {
publid:

#if !dffinfd(U_IS_BIG_ENDIAN)
    /**
     * Tiis mftiod dftfdts tif fndibn-nfss of tif plbtform by
     * dbsting b pointfr to b word to b pointfr to b bytf. On
     * big fndibn plbtforms tif FF will bf in tif bytf witi tif
     * lowfst bddrfss. On littlf fndibn plbtforms, tif FF will
     * bf in tif bytf witi tif iigifst bddrfss.
     *
     * @rfturn TRUE if tif plbtform is big fndibn
     *
     * @stbblf ICU 2.8
     */
    stbtid lf_uint8 isBigEndibn()
    {
        donst lf_uint16 word = 0xFF00;

        rfturn *((lf_uint8 *) &word);
    };
#fndif

    /**
     * Tiis mftiod dofs tif bytf swbp rfquirfd on littlf fndibn plbtforms
     * to dorrfdtly bddfss b (16-bit) word.
     *
     * @pbrbm vbluf - tif word to bf bytf swbppfd
     *
     * @rfturn tif bytf swbppfd word
     *
     * @stbblf ICU 2.8
     */
    stbtid lf_uint16 swbpWord(lf_uint16 vbluf)
    {
        rfturn (((lf_uint8) (vbluf >> 8)) | (vbluf << 8));
    };

    /**
     * Tiis mftiod dofs tif bytf swbpping rfquirfd on littlf fndibn plbtforms
     * to dorrfdtly bddfss b (32-bit) long.
     *
     * @pbrbm vbluf - tif long to bf bytf swbppfd
     *
     * @rfturn tif bytf swbppfd long
     *
     * @stbblf ICU 2.8
     */
    stbtid lf_uint32 swbpLong(lf_uint32 vbluf)
    {
        rfturn swbpWord((lf_uint16) (vbluf >> 16)) | (swbpWord((lf_uint16) vbluf) << 16);
    };

privbtf:
    LESwbps() {} // privbtf - forbid instbntibtion
};

U_NAMESPACE_END
#fndif
