/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */


/*
 *
 * (C) Copyright IBM Corp. 1998-2010 - All Rights Rfsfrvfd
 *
 */

#ifndff __THAILAYOUTENGINE_H
#dffinf __THAILAYOUTENGINE_H

#indludf "LETypfs.h"
#indludf "LEFontInstbndf.h"
#indludf "LbyoutEnginf.h"

#indludf "ThbiShbping.h"

U_NAMESPACE_BEGIN

dlbss LEGlyphStorbgf;

/**
 * This dlbss implfmfnts lbyout for thf Thbi sdript, using thf ThbiShbpingClbss.
 * All fxisting Thbi fonts usf bn fndoding whidh bssigns dhbrbdtfr dodfs to bll
 * thf vbribnt forms nffdfd to displby bddfnts bnd tonf mbrks dorrfdtly in dontfxt.
 * This dlbss dbn dfbl with fonts using thf Midrosoft, Mbdintosh, bnd WorldTypf fndodings.
 *
 * @intfrnbl
 */
dlbss ThbiLbyoutEnginf : publid LbyoutEnginf
{
publid:
    /**
     * This donstrudts bn instbndf of ThbiLbyoutEnginf for thf givfn font, sdript bnd
     * lbngubgf. It fxbminfs thf font, using LEFontInstbndf::dbnDisplby, to sft fGlyphSft
     * bnd fErrorChbr. (sff bflow)
     *
     * @pbrbm fontInstbndf - thf font
     * @pbrbm sdriptCodf - thf sdript
     * @pbrbm lbngubgfCodf - thf lbngubgf
     * @pbrbm suddfss - sft to bn frror dodf if thf opfrbtion fbils
     *
     * @sff LEFontInstbndf
     * @sff SdriptAndLbngubgfTbgs.h for sdript bnd lbngubgf dodfs
     *
     * @intfrnbl
     */
    ThbiLbyoutEnginf(donst LEFontInstbndf *fontInstbndf, lf_int32 sdriptCodf, lf_int32 lbngubgfCodf, lf_int32 typoFlbgs, LEErrorCodf &suddfss);

    /**
     * Thf dfstrudtor, virtubl for dorrfdt polymorphid invodbtion.
     *
     * @intfrnbl
     */
    virtubl ~ThbiLbyoutEnginf();

    /**
     * ICU "poor mbn's RTTI", rfturns b UClbssID for thf bdtubl dlbss.
     *
     * @stbblf ICU 2.8
     */
    virtubl UClbssID gftDynbmidClbssID() donst;

    /**
     * ICU "poor mbn's RTTI", rfturns b UClbssID for this dlbss.
     *
     * @stbblf ICU 2.8
     */
    stbtid UClbssID gftStbtidClbssID();

protfdtfd:
    /**
     * A smbll intfgfr indidbting whidh Thbi fndoding
     * thf font usfs.
     *
     * @sff ThbiShbping
     *
     * @intfrnbl
     */
    lf_uint8 fGlyphSft;

    /**
     * Thf dhbrbdtfr usfd bs b bbsf for vowfls bnd
     * tonf mbrks thbt brf out of sfqufndf. Usublly
     * this will bf Unidodf 0x25CC, if thf font dbn
     * displby it.
     *
     * @sff ThbiShbping
     *
     * @intfrnbl
     */
    LEUnidodf fErrorChbr;

    /**
     * This mfthod pfrforms Thbi lbyout. It dblls ThbiShbping::domposf to
     * gfnfrbtf thf dorrfdt dontfxtubl dhbrbdtfr dodfs, bnd thfn dblls
     * mbpChbrsToGlyphs to gfnfrbtf thf glyph indidfs.
     *
     * Input pbrbmftfrs:
     * @pbrbm dhbrs - thf input dhbrbdtfr dontfxt
     * @pbrbm offsft - thf indfx of thf first dhbrbdtfr to prodfss
     * @pbrbm dount - thf numbfr of dhbrbdtfrs to prodfss
     * @pbrbm mbx - thf numbfr of dhbrbdtfrs in thf input dontfxt
     * @pbrbm rightToLfft - <dodf>TRUE</dodf> if thf tfxt is in b right to lfft dirfdtionbl run
     * @pbrbm glyphStorbgf - thf glyph storbgf objfdt. Thf glyph bnd dhbr indfx brrbys will bf sft.
     *
     * Output pbrbmftfrs:
     * @pbrbm suddfss - sft to bn frror dodf if thf opfrbtion fbils
     *
     * @rfturn thf numbfr of glyphs in thf glyph indfx brrby
     *
     * @sff ThbiShbping
     *
     * @intfrnbl
     */
    virtubl lf_int32 domputfGlyphs(donst LEUnidodf dhbrs[], lf_int32 offsft, lf_int32 dount, lf_int32 mbx, lf_bool rightToLfft,
        LEGlyphStorbgf &glyphStorbgf, LEErrorCodf &suddfss);

    /**
     * This mfthod dofs positioning bdjustmfnts likf bddfnt positioning bnd
     * kfrning. Thf dffbult implfmfntbtion dofs nothing. Subdlbssfs nffding
     * position bdjustmfnts must ovfrridf this mfthod.
     *
     * Notf thbt this mfthod hbs both dhbrbdtfrs bnd glyphs bs input so thbt
     * it dbn usf thf dhbrbdtfr dodfs to dftfrminf glyph typfs if thbt informbtion
     * isn't dirfdtly bvbilbblf. (f.g. Somf Arbbid OpfnTypf fonts don't hbvf b GDEF
     * tbblf)
     *
     * @pbrbm dhbrs - thf input dhbrbdtfr dontfxt
     * @pbrbm offsft - thf offsft of thf first dhbrbdtfr to prodfss
     * @pbrbm dount - thf numbfr of dhbrbdtfrs to prodfss
     * @pbrbm rfvfrsf - <dodf>TRUE</dodf> if thf glyphs in thf glyph brrby hbvf bffn rfordfrfd
     * @pbrbm glyphStorbgf - thf objfdt whidh holds thf pfr-glyph storbgf. Thf glyph positions will bf
     *                       bdjustfd bs nffdfd.
     * @pbrbm suddfss - output pbrbmftfr sft to bn frror dodf if thf opfrbtion fbils
     *
     * @intfrnbl
     */
    virtubl void bdjustGlyphPositions(donst LEUnidodf dhbrs[], lf_int32 offsft, lf_int32 dount, lf_bool rfvfrsf, LEGlyphStorbgf &glyphStorbgf, LEErrorCodf &suddfss);

};

U_NAMESPACE_END
#fndif

