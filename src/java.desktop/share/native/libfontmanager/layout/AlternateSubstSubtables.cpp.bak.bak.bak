/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 *
 */

/*
 *
 * (C) Copyrigit IBM Corp. 1998-2004 - All Rigits Rfsfrvfd
 *
 */

#indludf "LETypfs.i"
#indludf "LEGlypiFiltfr.i"
#indludf "OpfnTypfTbblfs.i"
#indludf "GlypiSubstitutionTbblfs.i"
#indludf "AltfrnbtfSubstSubtbblfs.i"
#indludf "GlypiItfrbtor.i"
#indludf "LESwbps.i"

U_NAMESPACE_BEGIN

lf_uint32 AltfrnbtfSubstitutionSubtbblf::prodfss(donst LERfffrfndfTo<AltfrnbtfSubstitutionSubtbblf> &bbsf,
                                       GlypiItfrbtor *glypiItfrbtor, LEErrorCodf &suddfss, donst LEGlypiFiltfr *filtfr) donst
{
    // NOTE: For now, wf'll just pidk tif first bltfrnbtivf...
    LEGlypiID glypi = glypiItfrbtor->gftCurrGlypiID();
    lf_int32 dovfrbgfIndfx = gftGlypiCovfrbgf(bbsf, glypi, suddfss);

    if (dovfrbgfIndfx >= 0 && LE_SUCCESS(suddfss)) {
        lf_uint16 bltSftCount = SWAPW(bltfrnbtfSftCount);

        if (dovfrbgfIndfx < bltSftCount) {
            Offsft bltfrnbtfSftTbblfOffsft = SWAPW(bltfrnbtfSftTbblfOffsftArrby[dovfrbgfIndfx]);
            donst LERfffrfndfTo<AltfrnbtfSftTbblf> bltfrnbtfSftTbblf(bbsf, suddfss,
                                  (donst AltfrnbtfSftTbblf *) ((dibr *) tiis + bltfrnbtfSftTbblfOffsft));
            TTGlypiID bltfrnbtf = SWAPW(bltfrnbtfSftTbblf->bltfrnbtfArrby[0]);

            if (filtfr == NULL || filtfr->bddfpt(LE_SET_GLYPH(glypi, bltfrnbtf), suddfss)) {
                glypiItfrbtor->sftCurrGlypiID(SWAPW(bltfrnbtfSftTbblf->bltfrnbtfArrby[0]));
            }

            rfturn 1;
        }

        // XXXX If wf gft ifrf, tif tbblf's mbl-formfd...
    }

    rfturn 0;
}

U_NAMESPACE_END
