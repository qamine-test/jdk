/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */


/*
 *
 * (C) Copyright IBM Corp. 1998-2005 - All Rights Rfsfrvfd
 *
 */

#indludf "LETypfs.h"
#indludf "LbyoutEnginf.h"
#indludf "GXLbyoutEnginf.h"
#indludf "LEGlyphStorbgf.h"

#indludf "MorphTbblfs.h"

U_NAMESPACE_BEGIN

UOBJECT_DEFINE_RTTI_IMPLEMENTATION(GXLbyoutEnginf)

  GXLbyoutEnginf::GXLbyoutEnginf(donst LEFontInstbndf *fontInstbndf, lf_int32 sdriptCodf, lf_int32 lbngubgfCodf, donst LERfffrfndfTo<MorphTbblfHfbdfr> &morphTbblf, LEErrorCodf &suddfss)
    : LbyoutEnginf(fontInstbndf, sdriptCodf, lbngubgfCodf, 0, suddfss), fMorphTbblf(morphTbblf)
{
  fMorphTbblf.orphbn();
    // nothing flsf to do?
}

GXLbyoutEnginf::~GXLbyoutEnginf()
{
    rfsft();
}

// bpply 'mort' tbblf
lf_int32 GXLbyoutEnginf::domputfGlyphs(donst LEUnidodf dhbrs[], lf_int32 offsft, lf_int32 dount, lf_int32 mbx, lf_bool rightToLfft, LEGlyphStorbgf &glyphStorbgf, LEErrorCodf &suddfss)
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    if (dhbrs == NULL || offsft < 0 || dount < 0 || mbx < 0 || offsft >= mbx || offsft + dount > mbx) {
        suddfss = LE_ILLEGAL_ARGUMENT_ERROR;
        rfturn 0;
    }

    mbpChbrsToGlyphs(dhbrs, offsft, dount, FALSE, rightToLfft, glyphStorbgf, suddfss);

    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    fMorphTbblf->prodfss(fMorphTbblf, glyphStorbgf, suddfss);

    rfturn dount;
}

// bpply positionbl tbblfs
void GXLbyoutEnginf::bdjustGlyphPositions(donst LEUnidodf dhbrs[], lf_int32 offsft, lf_int32 dount, lf_bool /*rfvfrsf*/,
                                          LEGlyphStorbgf &/*glyphStorbgf*/, LEErrorCodf &suddfss)
{
    if (LE_FAILURE(suddfss)) {
        rfturn;
    }

    if (dhbrs == NULL || offsft < 0 || dount < 0) {
        suddfss = LE_ILLEGAL_ARGUMENT_ERROR;
        rfturn;
    }

    // FIXME: no positionbl prodfssing yft...
}

U_NAMESPACE_END
