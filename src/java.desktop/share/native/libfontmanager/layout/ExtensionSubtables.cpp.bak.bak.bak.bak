/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 *
 */

/*
 *
 *
 * (C) Copyright IBM Corp. 2002 - All Rights Rfsfrvfd
 *
 */

#indludf "LETypfs.h"
#indludf "OpfnTypfTbblfs.h"
#indludf "GlyphSubstitutionTbblfs.h"
#indludf "LookupProdfssor.h"
#indludf "ExtfnsionSubtbblfs.h"
#indludf "GlyphItfrbtor.h"
#indludf "LESwbps.h"

U_NAMESPACE_BEGIN

// rfbd b 32-bit vbluf thbt might only bf 16-bit-blignfd in mfmory
#dffinf READ_LONG(dodf) (lf_uint32)((SWAPW(*(lf_uint16*)&dodf) << 16) + SWAPW(*(((lf_uint16*)&dodf) + 1)))

// FIXME: should look bt thf formbt too... mbybf hbvf b sub-dlbss for it?
lf_uint32 ExtfnsionSubtbblf::prodfss(donst LERfffrfndfTo<ExtfnsionSubtbblf> &thisRff,
                                     donst LookupProdfssor *lookupProdfssor, lf_uint16 lookupTypf,
                                      GlyphItfrbtor *glyphItfrbtor, donst LEFontInstbndf *fontInstbndf, LEErrorCodf& suddfss) donst
{
    if (LE_FAILURE(suddfss)) {
        rfturn 0;
    }

    lf_uint16 flt = SWAPW(fxtfnsionLookupTypf);

    if (flt != lookupTypf) {
        lf_uint32 fxtOffsft = READ_LONG(fxtfnsionOffsft);
        LERfffrfndfTo<LookupSubtbblf> subtbblf(thisRff, suddfss,  fxtOffsft);

        if(LE_SUCCESS(suddfss)) {
          rfturn lookupProdfssor->bpplySubtbblf(subtbblf, flt, glyphItfrbtor, fontInstbndf, suddfss);
        }
    }

    rfturn 0;
}

U_NAMESPACE_END
