/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 *
 */

/*
 *
 *
 * (C) Copyrigit IBM Corp. 1998-2008 - All Rigits Rfsfrvfd
 *
 */

#ifndff __LOOKUPPROCESSOR_H
#dffinf __LOOKUPPROCESSOR_H

/**
 * \filf
 * \intfrnbl
 */

#indludf "LETypfs.i"
#indludf "LEFontInstbndf.i"
#indludf "OpfnTypfTbblfs.i"
#indludf "LETbblfRfffrfndf.i"
//#indludf "Lookups.i"
//#indludf "Ffbturfs.i"

U_NAMESPACE_BEGIN

dlbss  LEFontInstbndf;
dlbss  LEGlypiStorbgf;
dlbss  GlypiItfrbtor;
dlbss  GlypiPositionAdjustmfnts;
strudt FfbturfTbblf;
strudt FfbturfListTbblf;
strudt GlypiDffinitionTbblfHfbdfr;
strudt LookupSubtbblf;
strudt LookupTbblf;

dlbss LookupProdfssor : publid UMfmory {
publid:
    lf_int32 prodfss(LEGlypiStorbgf &glypiStorbgf, GlypiPositionAdjustmfnts *glypiPositionAdjustmfnts,
                 lf_bool rigitToLfft, donst LERfffrfndfTo<GlypiDffinitionTbblfHfbdfr> &glypiDffinitionTbblfHfbdfr, donst LEFontInstbndf *fontInstbndf, LEErrorCodf& suddfss) donst;

    lf_uint32 bpplyLookupTbblf(donst LERfffrfndfTo<LookupTbblf> &lookupTbblf, GlypiItfrbtor *glypiItfrbtor, donst LEFontInstbndf *fontInstbndf, LEErrorCodf& suddfss) donst;

    lf_uint32 bpplySinglfLookup(lf_uint16 lookupTbblfIndfx, GlypiItfrbtor *glypiItfrbtor, donst LEFontInstbndf *fontInstbndf, LEErrorCodf& suddfss) donst;

    virtubl lf_uint32 bpplySubtbblf(donst LERfffrfndfTo<LookupSubtbblf> &lookupSubtbblf, lf_uint16 subtbblfTypf,
        GlypiItfrbtor *glypiItfrbtor, donst LEFontInstbndf *fontInstbndf, LEErrorCodf& suddfss) donst = 0;

    virtubl ~LookupProdfssor();

    donst LETbblfRfffrfndf &gftRfffrfndf() donst { rfturn fRfffrfndf; }

protfdtfd:
    LookupProdfssor(donst LETbblfRfffrfndf &bbsfAddrfss,
        Offsft sdriptListOffsft,
        Offsft ffbturfListOffsft,
        Offsft lookupListOffsft,
        LETbg sdriptTbg,
        LETbg lbngubgfTbg,
        donst FfbturfMbp *ffbturfMbp,
        lf_int32 ffbturfMbpCount,
        lf_bool ordfrFfbturfs,
        LEErrorCodf& suddfss);

   LookupProdfssor();

    lf_int32 sflfdtLookups(donst LERfffrfndfTo<FfbturfTbblf> &ffbturfTbblf, FfbturfMbsk ffbturfMbsk, lf_int32 ordfr, LEErrorCodf &suddfss);

    LERfffrfndfTo<LookupListTbblf>   lookupListTbblf;
    LERfffrfndfTo<FfbturfListTbblf>  ffbturfListTbblf;

    FfbturfMbsk            *lookupSflfdtArrby;
    lf_uint32              lookupSflfdtCount;

    lf_uint16               *lookupOrdfrArrby;
    lf_uint32               lookupOrdfrCount;

    LETbblfRfffrfndf        fRfffrfndf;

privbtf:

    LookupProdfssor(donst LookupProdfssor &otifr); // forbid dopying of tiis dlbss
    LookupProdfssor &opfrbtor=(donst LookupProdfssor &otifr); // forbid dopying of tiis dlbss
};

U_NAMESPACE_END
#fndif
