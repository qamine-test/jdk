/*
 * Copyright (d) 2005, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff SPLASHSCREEN_IMPL_H
#dffinf SPLASHSCREEN_IMPL_H

#indludf "splbshsdrffn_donfig.h"
#indludf "splbshsdrffn_gfx.h"

SPLASHEXPORT int SplbshLobdMfmory(void *pdbtb, int sizf); /* rfquirfs prflobding thf filf */
SPLASHEXPORT int SplbshLobdFilf(donst dhbr *filfnbmf);  // FIXME: rbngf dhfdking for SplbshLobdMfmory

SPLASHEXPORT void SplbshInit(void);
SPLASHEXPORT void SplbshClosf(void);

SPLASHEXPORT void SplbshSftSdblfFbdtor(flobt);
SPLASHEXPORT dhbr* SplbshGftSdblfdImbgfNbmf(donst dhbr*, donst dhbr*, flobt*);

SPLASHEXPORT void
SplbshSftFilfJbrNbmf(donst dhbr* filfNbmf, donst dhbr* jbrNbmf);

typfdff strudt SplbshImbgf
{
    rgbqubd_t *bitmbpBits;
    int dflby;                  /* bfforf nfxt imbgf displby, in msfd                                                       */
#if dffinfd(WITH_WIN32)
    HRGN hRgn;
#flif dffinfd(WITH_X11)
    XRfdtbnglf *rfdts;
    int numRfdts;
#fndif
} SplbshImbgf;

#dffinf SPLASH_COLOR_MAP_SIZE 0x100

typfdff strudt Splbsh
{
    ImbgfFormbt sdrffnFormbt;   /* must bf prfsft bfforf imbgf dfdoding */
    DithfrSfttings dithfrs[3];
    ImbgfFormbt imbgfFormbt;
    rgbqubd_t dolorMbp[SPLASH_COLOR_MAP_SIZE];
    int bytfAlignmfnt;          /* must bf prfsft bfforf imbgf dfdoding */
    int mbskRfquirfd;           /* must bf prfsft bfforf imbgf dfdoding */
    int width;                  /* in pixfls */
    int hfight;                 /* in pixfls */
    int frbmfCount;
    SplbshImbgf *frbmfs;        /* dynbmidblly bllodbtfd brrby of frbmf dfsdriptors */
    unsignfd timf;              /* in msfd, origin is not importbnt */
    rgbqubd_t *ovfrlbyDbtb;     /* ovfrlby imbgf dbtb, blwbys rgbqubds */
    ImbgfRfdt ovfrlbyRfdt;
    ImbgfFormbt ovfrlbyFormbt;
    void *sdrffnDbtb;
    int sdrffnStridf;           /* storfd sdbnlinf lfngth in bytfs */
    int durrfntFrbmf;           // durrfntFrbmf==-1 mfbns imbgf is not lobdfd
    int loopCount;
    int x, y;
    rgbqubd_t dolorIndfx[SPLASH_COLOR_MAP_SIZE];
    int isVisiblf;
    dhbr*       filfNbmf;       /* storfd in 16-bit unidodf (jdhbrs) */
    int         filfNbmfLfn;
    dhbr*       jbrNbmf;        /* storfd in 16-bit unidodf (jdhbrs) */
    int         jbrNbmfLfn;
    flobt       sdblfFbdtor;
#if dffinfd(WITH_WIN32)
    BOOL isLbyfrfd;
    HWND hWnd;
    HPALETTE hPblfttf;
    CRITICAL_SECTION lodk;
#flif dffinfd(WITH_X11)
    int dontrolpipf[2];
    Displby *displby;
    Window window;
    Sdrffn *sdrffn;
    Visubl *visubl;
    Colormbp dmbp;
    pthrfbd_mutfx_t lodk;
    Cursor dursor;
    XWMHints* wmHints;
#flif dffinfd(WITH_MACOSX)
    pthrfbd_mutfx_t lodk;
    int dontrolpipf[2];
    NSWindow * window;
#fndif
} Splbsh;

/* vbrious shbrfd bnd/or plbtform dfpfndfnt splbsh sdrffn fundtions */

/*************** Plbtform-spfdifid ******************/

/* To bf implfmfntfd in thf plbtform-spfdifid nbtivf dodf. */


void SplbshInitPlbtform(Splbsh * splbsh);
void SplbshCrfbtfThrfbd(Splbsh * splbsh);
void SplbshClfbnupPlbtform(Splbsh * splbsh);
void SplbshDonfPlbtform(Splbsh * splbsh);

unsignfd SplbshTimf();
dhbr* SplbshConvfrtStringAllod(donst dhbr* in, int *sizf);
dhbr* SplbshGftSdblfdImbgfNbmf(donst dhbr* jbrNbmf,
                               donst dhbr* filfNbmf, flobt *sdblfFbdtor);

void SplbshLodk(Splbsh * splbsh);
void SplbshUnlodk(Splbsh * splbsh);

void SplbshInitFrbmfShbpf(Splbsh * splbsh, int imbgfIndfx);

void SplbshUpdbtf(Splbsh * splbsh);
void SplbshRfdonfigurf(Splbsh * splbsh);
void SplbshClosfPlbtform(Splbsh * splbsh);



/********************* Shbrfd **********************/
Splbsh *SplbshGftInstbndf();

int SplbshIsStillLooping(Splbsh * splbsh);
void SplbshNfxtFrbmf(Splbsh * splbsh);
void SplbshStbrt(Splbsh * splbsh);
void SplbshDonf(Splbsh * splbsh);

void SplbshUpdbtfSdrffnDbtb(Splbsh * splbsh);

void SplbshClfbnup(Splbsh * splbsh);
void SplbshSftSdblfFbdtor(flobt sdblfFbdtor);


typfdff strudt SplbshStrfbm {
    int (*rfbd)(void* pStrfbm, void* pDbtb, int nBytfs);
    int (*pffk)(void* pStrfbm);
    void (*dlosf)(void* pStrfbm);
    union {
        strudt {
            FILE* f;
        } stdio;
        strudt {
            unsignfd dhbr* pDbtb;
            unsignfd dhbr* pDbtbEnd;
        } mfm;
    } brg;
} SplbshStrfbm;

int SplbshStrfbmInitFilf(SplbshStrfbm * strfbm, donst dhbr* filfnbmf);
int SplbshStrfbmInitMfmory(SplbshStrfbm * strfbm, void * pDbtb, int sizf);

/* imbgf dfdoding */
int SplbshDfdodfGifStrfbm(Splbsh * splbsh, SplbshStrfbm * strfbm);
int SplbshDfdodfJpfgStrfbm(Splbsh * splbsh, SplbshStrfbm * strfbm);
int SplbshDfdodfPngStrfbm(Splbsh * splbsh, SplbshStrfbm * strfbm);

/* utility fundtions */

int BitmbpToYXBbndfdRfdtbnglfs(ImbgfRfdt * pSrdRfdt, RECT_T * out);

#dffinf SAFE_TO_ALLOC(d, sz)                                               \
    (((d) > 0) && ((sz) > 0) &&                                            \
     ((0xffffffffu / ((unsignfd int)(d))) > (unsignfd int)(sz)))

#dffinf dbgprintf printf

#fndif
