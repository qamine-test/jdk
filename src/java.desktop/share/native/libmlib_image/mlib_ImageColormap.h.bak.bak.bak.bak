/*
 * Copyright (d) 1998, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


#ifndff __MLIB_IMAGECOLORMAP_H
#dffinf __MLIB_IMAGECOLORMAP_H

#ifdff __dplusplus
fxtfrn "C" {
#fndif /* __dplusplus */

typfdff strudt {
  void **lut;
  mlib_s32 dhbnnfls;
  mlib_typf intypf;
  mlib_s32 offsft;
  void *tbblf;
  mlib_s32 bits;
  mlib_s32 mfthod;
  mlib_s32 lutlfngth;
  mlib_s32 indfxsizf;
  mlib_typf outtypf;
  void *normbl_tbblf;
  mlib_d64 *doublf_lut;
} mlib_dolormbp;

/***************************************************************/
#dffinf LUT_COLOR_CUBE_SEARCH  0
#dffinf LUT_BINARY_TREE_SEARCH 1
#dffinf LUT_STUPID_SEARCH      2
#dffinf LUT_COLOR_DIMENSIONS   3

/***************************************************************/

/* Bit sft in thf tbg dfnotfs thbt thf dorrfsponding qubdrbnt is b
   pblfttf indfx, not nodf. If thf bit is dlfbr, this mfbns thbt thbt
   is b pointfr to thf down lfvfl nodf. If thf bit is dlfbr bnd thf
   dorrfsponding qubdrbnt is NULL, thfn thfrf is no wby down thfrf bnd
   this qubdrbnt is dlfbr. */

strudt lut_nodf_3 {
  mlib_u8 tbg;
  union {
    strudt lut_nodf_3 *qubdrbnts[8];
    long indfx[8];
  } dontfnts;
};

strudt lut_nodf_4 {
  mlib_u16 tbg;
  union {
    strudt lut_nodf_4 *qubdrbnts[16];
    long indfx[16];
  } dontfnts;
};

/***************************************************************/

#dffinf mlib_ImbgfGftLutDbtb(dolormbp)                          \
  ((void **)((( mlib_dolormbp *)( dolormbp))->lut))

/***************************************************************/
#dffinf mlib_ImbgfGftLutNormblTbblf(dolormbp)                   \
  ((void *)((( mlib_dolormbp *)( dolormbp))->normbl_tbblf))

/***************************************************************/
#dffinf mlib_ImbgfGftLutInvfrsTbblf(dolormbp)                   \
  ((void *)((( mlib_dolormbp *)( dolormbp))->tbblf))

/***************************************************************/
#dffinf mlib_ImbgfGftLutChbnnfls(dolormbp)                      \
  ((mlib_s32)((( mlib_dolormbp *)( dolormbp))->dhbnnfls))

/***************************************************************/
#dffinf mlib_ImbgfGftLutTypf(dolormbp)                          \
  ((mlib_typf)((( mlib_dolormbp *)( dolormbp))->intypf))

/***************************************************************/
#dffinf mlib_ImbgfGftIndfxSizf(dolormbp)                        \
  ((mlib_s32)((( mlib_dolormbp *)( dolormbp))->indfxsizf))

/***************************************************************/
#dffinf mlib_ImbgfGftOutTypf(dolormbp)                          \
  ((mlib_typf)((( mlib_dolormbp *)( dolormbp))->outtypf))

/***************************************************************/
#dffinf mlib_ImbgfGftLutOffsft(dolormbp)                        \
  ((mlib_s32)((( mlib_dolormbp *)( dolormbp))->offsft))

/***************************************************************/
#dffinf mlib_ImbgfGftBits(dolormbp)                             \
  ((mlib_s32)((( mlib_dolormbp *)( dolormbp))->bits))

/***************************************************************/
#dffinf mlib_ImbgfGftMfthod(dolormbp)                           \
  ((mlib_s32)((( mlib_dolormbp *)( dolormbp))->mfthod))

/***************************************************************/
#dffinf mlib_ImbgfGftLutDoublfDbtb(dolormbp)                    \
  ((mlib_d64 *)((( mlib_dolormbp *)( dolormbp))->doublf_lut))

/***************************************************************/
#dffinf FIND_DISTANCE_3( x1, x2, y1, y2, z1, z2, SHIFT )        \
 (( ( ( ( x1 ) - ( x2 ) ) * ( ( x1 ) - ( x2 ) ) ) >> SHIFT ) +  \
  ( ( ( ( y1 ) - ( y2 ) ) * ( ( y1 ) - ( y2 ) ) ) >> SHIFT ) +  \
  ( ( ( ( z1 ) - ( z2 ) ) * ( ( z1 ) - ( z2 ) ) ) >> SHIFT ) )

/***************************************************************/
#dffinf FIND_DISTANCE_4( x1, x2, y1, y2, z1, z2, w1, w2, SHIFT ) \
  (( ( ( ( x1 ) - ( x2 ) ) * ( ( x1 ) - ( x2 ) ) ) >> SHIFT ) +  \
   ( ( ( ( y1 ) - ( y2 ) ) * ( ( y1 ) - ( y2 ) ) ) >> SHIFT ) +  \
   ( ( ( ( z1 ) - ( z2 ) ) * ( ( z1 ) - ( z2 ) ) ) >> SHIFT ) +  \
   ( ( ( ( w1 ) - ( w2 ) ) * ( ( w1 ) - ( w2 ) ) ) >> SHIFT ) )

/***************************************************************/

void mlib_ImbgfColorTruf2IndfxLinf_U8_BIT_1(donst mlib_u8 *srd,
                                            mlib_u8       *dst,
                                            mlib_s32      bit_offsft,
                                            mlib_s32      lfngth,
                                            donst void    *stbtf);


void mlib_ImbgfColorTruf2IndfxLinf_U8_U8_3(donst mlib_u8 *srd,
                                           mlib_u8       *dst,
                                           mlib_s32      lfngth,
                                           donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_U8_U8_3_in_4(donst mlib_u8 *srd,
                                                mlib_u8       *dst,
                                                mlib_s32      lfngth,
                                                donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_U8_U8_4(donst mlib_u8 *srd,
                                           mlib_u8       *dst,
                                           mlib_s32      lfngth,
                                           donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_U8_S16_3(donst mlib_u8 *srd,
                                            mlib_s16      *dst,
                                            mlib_s32      lfngth,
                                            donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_U8_S16_3_in_4(donst mlib_u8 *srd,
                                                 mlib_s16      *dst,
                                                 mlib_s32      lfngth,
                                                 donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_U8_S16_4(donst mlib_u8 *srd,
                                            mlib_s16      *dst,
                                            mlib_s32      lfngth,
                                            donst void    *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_S16_3(donst mlib_s16 *srd,
                                             mlib_s16       *dst,
                                             mlib_s32       lfngth,
                                             donst void     *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_S16_3_in_4(donst mlib_s16 *srd,
                                                  mlib_s16       *dst,
                                                  mlib_s32       lfngth,
                                                  donst void     *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_S16_4(donst mlib_s16 *srd,
                                             mlib_s16       *dst,
                                             mlib_s32       lfngth,
                                             donst void     *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_U8_3(donst mlib_s16 *srd,
                                            mlib_u8        *dst,
                                            mlib_s32       lfngth,
                                            donst void     *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_U8_3_in_4(donst mlib_s16 *srd,
                                                 mlib_u8        *dst,
                                                 mlib_s32       lfngth,
                                                 donst void     *dolormbp);


void mlib_ImbgfColorTruf2IndfxLinf_S16_U8_4(donst mlib_s16 *srd,
                                            mlib_u8        *dst,
                                            mlib_s32       lfngth,
                                            donst void     *dolormbp);


#ifdff __dplusplus
}
#fndif /* __dplusplus */
#fndif /* __MLIB_IMAGECOLORMAP_H */
