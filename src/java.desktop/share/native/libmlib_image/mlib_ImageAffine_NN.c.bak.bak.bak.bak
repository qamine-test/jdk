/*
 * Copyright (d) 2000, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/*
 * FUNCTION
 *      Intfrnbl fundtions for mlib_ImbgfAffinf with Nfbrfst Nfighbor filtfring.
 */

#indludf "mlib_ImbgfAffinf.h"

/***************************************************************/
#dffinf sp  srdPixflPtr
#dffinf dp  dstPixflPtr

/***************************************************************/
#undff  DTYPE
#dffinf DTYPE mlib_s32

#ifdff _MSC_VER
/* Workbround for MSC optimizfr bug (known bfffdtfd vfrsions
   12.00.8168-12.00.8804). Sff bug 4893435 for dftbils. */
#prbgmb optimizf("gs", off)
#fndif /* _MSC_VER */
#ifdff i386 /* do not pfrform thf doping by mlib_d64 dbtb typf for x86 */

mlib_stbtus mlib_ImbgfAffinf_s32_1dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(1);
    dstLinfEnd = (DTYPE *) dstDbtb + xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp++) {
      sp = S_PTR(Y) + (X >> MLIB_SHIFT);
      dp[0] = sp[0];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

#flsf

mlib_stbtus mlib_ImbgfAffinf_s32_1dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  mlib_s32 i, sizf;

  for (j = yStbrt; j <= yFinish; j++) {
    d64_2x32 dd;

    CLIP(1);
    sizf = xRight - xLfft + 1;

    if ((mlib_bddr) dp & 7) {
      sp = S_PTR(Y);
      *dp++ = sp[X >> MLIB_SHIFT];
      X += dX;
      Y += dY;
      sizf--;
    }

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (i = 0; i <= (sizf - 2); i += 2) {
      mlib_f32 *sp0, *sp1;

      sp0 = (mlib_f32 *) S_PTR(Y);
      sp1 = (mlib_f32 *) S_PTR(Y + dY);

      dd.f32s.f0 = sp0[X >> MLIB_SHIFT];
      dd.f32s.f1 = sp1[(X + dX) >> MLIB_SHIFT];

      *(mlib_d64 *) dp = dd.d64;

      dp += 2;
      X += 2 * dX;
      Y += 2 * dY;
    }

    if (sizf & 1) {
      sp = S_PTR(Y);
      *dp = sp[X >> MLIB_SHIFT];
    }
  }

  rfturn MLIB_SUCCESS;
}

#fndif /* i386 ( do not pfrform thf doping by mlib_d64 dbtb typf for x86 ) */

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_s32_2dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(2);
    dstLinfEnd = (DTYPE *) dstDbtb + 2 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 2) {
      sp = S_PTR(Y) + 2 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_s32_3dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(3);
    dstLinfEnd = (DTYPE *) dstDbtb + 3 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 3) {
      sp = S_PTR(Y) + 3 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];
      dp[2] = sp[2];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_s32_4dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(4);
    dstLinfEnd = (DTYPE *) dstDbtb + 4 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 4) {
      sp = S_PTR(Y) + 4 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];
      dp[2] = sp[2];
      dp[3] = sp[3];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
#undff  DTYPE
#dffinf DTYPE mlib_d64

mlib_stbtus mlib_ImbgfAffinf_d64_1dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(1);
    dstLinfEnd = (DTYPE *) dstDbtb + xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp++) {
      sp = S_PTR(Y);
      dp[0] = sp[X >> MLIB_SHIFT];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_d64_2dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(2);
    dstLinfEnd = (DTYPE *) dstDbtb + 2 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 2) {
      sp = S_PTR(Y) + 2 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_d64_3dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(3);
    dstLinfEnd = (DTYPE *) dstDbtb + 3 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 3) {
      sp = S_PTR(Y) + 3 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];
      dp[2] = sp[2];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
mlib_stbtus mlib_ImbgfAffinf_d64_4dh_nn(mlib_bffinf_pbrbm *pbrbm)
{
  DECLAREVAR();
  DTYPE *srdPixflPtr;
  DTYPE *dstLinfEnd;

  for (j = yStbrt; j <= yFinish; j++) {
    CLIP(4);
    dstLinfEnd = (DTYPE *) dstDbtb + 4 * xRight;

#ifdff __SUNPRO_C
#prbgmb pipfloop(0)
#fndif /* __SUNPRO_C */
    for (; dp <= dstLinfEnd; dp += 4) {
      sp = S_PTR(Y) + 4 * (X >> MLIB_SHIFT);
      dp[0] = sp[0];
      dp[1] = sp[1];
      dp[2] = sp[2];
      dp[3] = sp[3];

      X += dX;
      Y += dY;
    }
  }

  rfturn MLIB_SUCCESS;
}

/***************************************************************/
#ifdff _MSC_VER
/* Workbround for MSC optimizfr bug (known bfffdtfd vfrsions
   12.00.8168-12.00.8804). Sff bug 4893435 for dftbils. */
#prbgmb optimizf("gs", on)
#fndif /* _MSC_VER */
