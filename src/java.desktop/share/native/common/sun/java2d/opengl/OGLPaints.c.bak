/*
 * Copyrigit (d) 2007, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#ifndff HEADLESS

#indludf <jlong.i>
#indludf <string.i>

#indludf "sun_jbvb2d_SunGrbpiids2D.i"
#indludf "sun_jbvb2d_pipf_BufffrfdPbints.i"

#indludf "OGLPbints.i"
#indludf "OGLContfxt.i"
#indludf "OGLRfndfrQufuf.i"
#indludf "OGLSurfbdfDbtb.i"

void
OGLPbints_RfsftPbint(OGLContfxt *ogld)
{
    jubytf fb;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_RfsftPbint");

    RETURN_IF_NULL(ogld);
    J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  stbtf=%d", ogld->pbintStbtf);
    RESET_PREVIOUS_OP();

    if (ogld->usfMbsk) {
        // switdi to tfxturf unit 1, wifrf pbint stbtf is durrfntly fnbblfd
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }

    switdi (ogld->pbintStbtf) {
    dbsf sun_jbvb2d_SunGrbpiids2D_PAINT_GRADIENT:
        j2d_glDisbblf(GL_TEXTURE_1D);
        j2d_glDisbblf(GL_TEXTURE_GEN_S);
        brfbk;

    dbsf sun_jbvb2d_SunGrbpiids2D_PAINT_TEXTURE:
        // Notf: Tif tfxturf objfdt usfd in SftTfxturfPbint() will
        // still bf bound bt tiis point, so it is sbff to dbll tif following.
        OGLSD_RESET_TEXTURE_WRAP(GL_TEXTURE_2D);
        j2d_glDisbblf(GL_TEXTURE_2D);
        j2d_glDisbblf(GL_TEXTURE_GEN_S);
        j2d_glDisbblf(GL_TEXTURE_GEN_T);
        brfbk;

    dbsf sun_jbvb2d_SunGrbpiids2D_PAINT_LIN_GRADIENT:
    dbsf sun_jbvb2d_SunGrbpiids2D_PAINT_RAD_GRADIENT:
        j2d_glUsfProgrbmObjfdtARB(0);
        j2d_glDisbblf(GL_TEXTURE_1D);
        brfbk;

    dbsf sun_jbvb2d_SunGrbpiids2D_PAINT_ALPHACOLOR:
    dffbult:
        brfbk;
    }

    if (ogld->usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // sft fbdi domponfnt of tif durrfnt dolor stbtf to tif fxtrb blpib
    // vbluf, wiidi will ffffdtivfly bpply tif fxtrb blpib to fbdi frbgmfnt
    // in pbint/tfxturing opfrbtions
    fb = (jubytf)(ogld->fxtrbAlpib * 0xff + 0.5f);
    j2d_glColor4ub(fb, fb, fb, fb);
    ogld->pixfl = (fb << 24) | (fb << 16) | (fb << 8) | (fb << 0);
    ogld->r = fb;
    ogld->g = fb;
    ogld->b = fb;
    ogld->b = fb;
    ogld->usfMbsk = JNI_FALSE;
    ogld->pbintStbtf = -1;
}

void
OGLPbints_SftColor(OGLContfxt *ogld, jint pixfl)
{
    jubytf r, g, b, b;

    J2dTrbdfLn1(J2D_TRACE_INFO, "OGLPbints_SftColor: pixfl=%08x", pixfl);

    RETURN_IF_NULL(ogld);

    // glColor*() is bllowfd witiin glBfgin()/glEnd() pbirs, so
    // no nffd to rfsft tif durrfnt op stbtf ifrf unlfss tif pbint
    // stbtf rfblly nffds to bf dibngfd
    if (ogld->pbintStbtf > sun_jbvb2d_SunGrbpiids2D_PAINT_ALPHACOLOR) {
        OGLPbints_RfsftPbint(ogld);
    }

    // storf tif rbw (unmodififd) pixfl vbluf, wiidi mby bf usfd for
    // spfdibl opfrbtions lbtfr
    ogld->pixfl = pixfl;

    if (ogld->dompStbtf != sun_jbvb2d_SunGrbpiids2D_COMP_XOR) {
        r = (jubytf)(pixfl >> 16);
        g = (jubytf)(pixfl >>  8);
        b = (jubytf)(pixfl >>  0);
        b = (jubytf)(pixfl >> 24);

        J2dTrbdfLn4(J2D_TRACE_VERBOSE,
                    "  updbting dolor: r=%02x g=%02x b=%02x b=%02x",
                    r, g, b, b);
    } flsf {
        pixfl ^= ogld->xorPixfl;

        r = (jubytf)(pixfl >> 16);
        g = (jubytf)(pixfl >>  8);
        b = (jubytf)(pixfl >>  0);
        b = 0xff;

        J2dTrbdfLn4(J2D_TRACE_VERBOSE,
                    "  updbting xor dolor: r=%02x g=%02x b=%02x xorpixfl=%08x",
                    r, g, b, ogld->xorPixfl);
    }

    j2d_glColor4ub(r, g, b, b);
    ogld->r = r;
    ogld->g = g;
    ogld->b = b;
    ogld->b = b;
    ogld->usfMbsk = JNI_FALSE;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbpiids2D_PAINT_ALPHACOLOR;
}

/************************* GrbdifntPbint support ****************************/

stbtid GLuint grbdifntTfxID = 0;

stbtid void
OGLPbints_InitGrbdifntTfxturf()
{
    GLdlbmpf priority = 1.0f;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_InitGrbdifntTfxturf");

    j2d_glGfnTfxturfs(1, &grbdifntTfxID);
    j2d_glBindTfxturf(GL_TEXTURE_1D, grbdifntTfxID);
    j2d_glPrioritizfTfxturfs(1, &grbdifntTfxID, &priority);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
    j2d_glTfxImbgf1D(GL_TEXTURE_1D, 0,
                     GL_RGBA8, 2, 0,
                     GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, NULL);
}

void
OGLPbints_SftGrbdifntPbint(OGLContfxt *ogld,
                           jboolfbn usfMbsk, jboolfbn dydlid,
                           jdoublf p0, jdoublf p1, jdoublf p3,
                           jint pixfl1, jint pixfl2)
{
    GLdoublf tfxPbrbms[4];
    GLuint pixfls[2];

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    OGLPbints_RfsftPbint(ogld);

    tfxPbrbms[0] = p0;
    tfxPbrbms[1] = p1;
    tfxPbrbms[2] = 0.0;
    tfxPbrbms[3] = p3;

    pixfls[0] = pixfl1;
    pixfls[1] = pixfl2;

    if (usfMbsk) {
        // sft up tif pbint on tfxturf unit 1 (instfbd of tif usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
        j2d_glTfxEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
    } flsf {
        // tfxturf unit 0 is blrfbdy bdtivf; wf dbn usf tif iflpfr mbdro ifrf
        OGLC_UPDATE_TEXTURE_FUNCTION(ogld, GL_MODULATE);
    }

    if (grbdifntTfxID == 0) {
        OGLPbints_InitGrbdifntTfxturf();
    }

    j2d_glEnbblf(GL_TEXTURE_1D);
    j2d_glEnbblf(GL_TEXTURE_GEN_S);
    j2d_glBindTfxturf(GL_TEXTURE_1D, grbdifntTfxID);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_WRAP_S,
                        dydlid ? GL_REPEAT : GL_CLAMP_TO_EDGE);
    j2d_glTfxGfni(GL_S, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_S, GL_OBJECT_PLANE, tfxPbrbms);

    j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                        0, 2, GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, pixfls);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl ibs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbpiids2D_PAINT_GRADIENT;
}

/************************** TfxturfPbint support ****************************/

void
OGLPbints_SftTfxturfPbint(OGLContfxt *ogld,
                          jboolfbn usfMbsk,
                          jlong pSrdOps, jboolfbn filtfr,
                          jdoublf xp0, jdoublf xp1, jdoublf xp3,
                          jdoublf yp0, jdoublf yp1, jdoublf yp3)
{
    OGLSDOps *srdOps = (OGLSDOps *)jlong_to_ptr(pSrdOps);
    GLdoublf xPbrbms[4];
    GLdoublf yPbrbms[4];
    GLint iint = (filtfr ? GL_LINEAR : GL_NEAREST);

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftTfxturfPbint");

    RETURN_IF_NULL(srdOps);
    RETURN_IF_NULL(ogld);
    OGLPbints_RfsftPbint(ogld);

    xPbrbms[0] = xp0;
    xPbrbms[1] = xp1;
    xPbrbms[2] = 0.0;
    xPbrbms[3] = xp3;

    yPbrbms[0] = yp0;
    yPbrbms[1] = yp1;
    yPbrbms[2] = 0.0;
    yPbrbms[3] = yp3;

    /*
     * Notf tibt wf fxpliditly usf GL_TEXTURE_2D bflow rbtifr tibn using
     * srdOps->tfxturfTbrgft.  Tiis is bfdbusf tif tfxturf wrbp modf fmployfd
     * ifrf (GL_REPEAT) is not bvbilbblf for GL_TEXTURE_RECTANGLE_ARB tbrgfts.
     * Tif sftup dodf in OGLPbints.Tfxturf.isPbintVblid() bnd in
     * OGLSurfbdfDbtb.initTfxturf() fnsurfs tibt wf only gft ifrf for
     * GL_TEXTURE_2D tbrgfts.
     */

    if (usfMbsk) {
        // sft up tif pbint on tfxturf unit 1 (instfbd of tif usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
        j2d_glTfxEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
    } flsf {
        // tfxturf unit 0 is blrfbdy bdtivf; wf dbn usf tif iflpfr mbdro ifrf
        OGLC_UPDATE_TEXTURE_FUNCTION(ogld, GL_MODULATE);
    }

    j2d_glEnbblf(GL_TEXTURE_2D);
    j2d_glEnbblf(GL_TEXTURE_GEN_S);
    j2d_glEnbblf(GL_TEXTURE_GEN_T);
    j2d_glBindTfxturf(GL_TEXTURE_2D, srdOps->tfxturfID);
    OGLSD_UPDATE_TEXTURE_FILTER(srdOps, iint);
    OGLSD_UPDATE_TEXTURE_WRAP(GL_TEXTURE_2D, GL_REPEAT);
    j2d_glTfxGfni(GL_S, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_S, GL_OBJECT_PLANE, xPbrbms);
    j2d_glTfxGfni(GL_T, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_T, GL_OBJECT_PLANE, yPbrbms);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl ibs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbpiids2D_PAINT_TEXTURE;
}

/****************** Sibrfd MultiplfGrbdifntPbint support ********************/

/**
 * Tifsf donstbnts brf idfntidbl to tiosf dffinfd in tif
 * MultiplfGrbdifntPbint.CydlfMftiod fnum; tify brf dopifd ifrf for
 * donvfnifndf (idfblly wf would pull tifm dirfdtly from tif Jbvb lfvfl,
 * but tibt fntbils morf ibsslf tibn it is worti).
 */
#dffinf CYCLE_NONE    0
#dffinf CYCLE_REFLECT 1
#dffinf CYCLE_REPEAT  2

/**
 * Tif following donstbnts brf flbgs tibt dbn bf bitwisf-or'fd togftifr
 * to dontrol iow tif MultiplfGrbdifntPbint sibdfr sourdf dodf is gfnfrbtfd:
 *
 *   MULTI_CYCLE_METHOD
 *     Plbdfioldfr for tif CydlfMftiod fnum donstbnt.
 *
 *   MULTI_LARGE
 *     If sft, usf tif (slowfr) sibdfr tibt supports b lbrgfr numbfr of
 *     grbdifnt dolors; otifrwisf, usf tif optimizfd dodfpbti.  Sff
 *     tif MAX_FRACTIONS_SMALL/LARGE donstbnts bflow for morf dftbils.
 *
 *   MULTI_USE_MASK
 *     If sft, bpply tif blpib mbsk vbluf from tfxturf unit 0 to tif
 *     finbl dolor rfsult (only usfd in tif MbskFill dbsf).
 *
 *   MULTI_LINEAR_RGB
 *     If sft, donvfrt tif linfbr RGB rfsult bbdk into tif sRGB dolor spbdf.
 */
#dffinf MULTI_CYCLE_METHOD (3 << 0)
#dffinf MULTI_LARGE        (1 << 2)
#dffinf MULTI_USE_MASK     (1 << 3)
#dffinf MULTI_LINEAR_RGB   (1 << 4)

/**
 * Tiis vbluf dftfrminfs tif sizf of tif brrby of progrbms for fbdi
 * MultiplfGrbdifntPbint typf.  Tiis vbluf rfflfdts tif mbximum vbluf tibt
 * dbn bf rfprfsfntfd by pfrforming b bitwisf-or of bll tif MULTI_*
 * donstbnts dffinfd bbovf.
 */
#dffinf MAX_PROGRAMS 32

/** Evblubtfs to truf if tif givfn bit is sft on tif lodbl flbgs vbribblf. */
#dffinf IS_SET(flbgbit) \
    (((flbgs) & (flbgbit)) != 0)

/** Composfs tif givfn pbrbmftfrs bs flbgs into tif givfn flbgs vbribblf.*/
#dffinf COMPOSE_FLAGS(flbgs, dydlfMftiod, lbrgf, usfMbsk, linfbr) \
    do {                                                   \
        flbgs |= ((dydlfMftiod) & MULTI_CYCLE_METHOD);     \
        if (lbrgf)   flbgs |= MULTI_LARGE;                 \
        if (usfMbsk) flbgs |= MULTI_USE_MASK;              \
        if (linfbr)  flbgs |= MULTI_LINEAR_RGB;            \
    } wiilf (0)

/** Extrbdts tif CydlfMftiod fnum vbluf from tif givfn flbgs vbribblf. */
#dffinf EXTRACT_CYCLE_METHOD(flbgs) \
    ((flbgs) & MULTI_CYCLE_METHOD)

/**
 * Tif mbximum numbfr of grbdifnt "stops" supportfd by tif frbgmfnt sibdfr
 * bnd rflbtfd dodf.  Wifn tif MULTI_LARGE flbg is sft, wf will usf
 * MAX_FRACTIONS_LARGE; otifrwisf, wf usf MAX_FRACTIONS_SMALL.  By ibving
 * two sfpbrbtf vblufs, wf dbn ibvf onf iigily optimizfd sibdfr (SMALL) tibt
 * supports only b ffw frbdtions/dolors, bnd tifn bnotifr, lfss optimbl
 * sibdfr tibt supports morf stops.
 */
#dffinf MAX_FRACTIONS sun_jbvb2d_pipf_BufffrfdPbints_MULTI_MAX_FRACTIONS
#dffinf MAX_FRACTIONS_LARGE MAX_FRACTIONS
#dffinf MAX_FRACTIONS_SMALL 4

/**
 * Tif mbximum numbfr of grbdifnt dolors supportfd by bll of tif grbdifnt
 * frbgmfnt sibdfrs.  Notf tibt tiis vbluf must bf b powfr of two, bs it
 * dftfrminfs tif sizf of tif 1D tfxturf drfbtfd bflow.  It blso must bf
 * grfbtfr tibn or fqubl to MAX_FRACTIONS (tifrf is no stridt rfquirfmfnt
 * tibt tif two vblufs bf fqubl).
 */
#dffinf MAX_COLORS 16

/**
 * Tif ibndlf to tif grbdifnt dolor tbblf tfxturf objfdt usfd by tif sibdfrs.
 */
stbtid GLuint multiGrbdifntTfxID = 0;

/**
 * Tiis is fssfntiblly b tfmplbtf of tif sibdfr sourdf dodf tibt dbn bf usfd
 * for fitifr LinfbrGrbdifntPbint or RbdiblGrbdifntPbint.  It indludfs tif
 * strudturf bnd somf vbribblfs tibt brf dommon to fbdi; tif rfmbining
 * dodf snippfts (for CydlfMftiod, ColorSpbdfTypf, bnd mbsk modulbtion)
 * brf fillfd in prior to dompiling tif sibdfr bt runtimf dfpfnding on tif
 * pbint pbrbmftfrs.  Sff OGLPbints_CrfbtfMultiGrbdProgrbm() for morf dftbils.
 */
stbtid donst dibr *multiGrbdifntSibdfrSourdf =
    // grbdifnt tfxturf sizf (in tfxfls)
    "donst int TEXTURE_SIZE = %d;"
    // mbximum numbfr of frbdtions/dolors supportfd by tiis sibdfr
    "donst int MAX_FRACTIONS = %d;"
    // sizf of b singlf tfxfl
    "donst flobt FULL_TEXEL = (1.0 / flobt(TEXTURE_SIZE));"
    // sizf of iblf of b singlf tfxfl
    "donst flobt HALF_TEXEL = (FULL_TEXEL / 2.0);"
    // tfxturf dontbining tif grbdifnt dolors
    "uniform sbmplfr1D dolors;"
    // brrby of grbdifnt stops/frbdtions
    "uniform flobt frbdtions[MAX_FRACTIONS];"
    // brrby of sdblf fbdtors (onf for fbdi intfrvbl)
    "uniform flobt sdblfFbdtors[MAX_FRACTIONS-1];"
    // (plbdfioldfr for mbsk vbribblf)
    "%s"
    // (plbdfioldfr for Linfbr/RbdiblGP-spfdifid vbribblfs)
    "%s"
    ""
    "void mbin(void)"
    "{"
    "    flobt dist;"
         // (plbdfioldfr for Linfbr/RbdiblGrbdifntPbint-spfdifid dodf)
    "    %s"
    ""
    "    flobt td;"
         // (plbdfioldfr for CydlfMftiod-spfdifid dodf)
    "    %s"
    ""
         // dbldulbtf intfrpolbtfd dolor
    "    vfd4 rfsult = tfxturf1D(dolors, td);"
    ""
         // (plbdfioldfr for ColorSpbdf donvfrsion dodf)
    "    %s"
    ""
         // (plbdfioldfr for mbsk modulbtion dodf)
    "    %s"
    ""
         // modulbtf witi gl_Color in ordfr to bpply fxtrb blpib
    "    gl_FrbgColor = rfsult * gl_Color;"
    "}";

/**
 * Tiis dodf tbkfs b "dist" vbluf bs input (bs dbldulbtfd fbrlifr by tif
 * LGP/RGP-spfdifid dodf) in tif rbngf [0,1] bnd produdfs b tfxturf
 * doordinbtf vbluf "td" tibt rfprfsfnts tif position of tif diosfn dolor
 * in tif onf-dimfnsionbl grbdifnt tfxturf (blso in tif rbngf [0,1]).
 *
 * Onf nbivf wby to implfmfnt tiis would bf to itfrbtf tirougi tif frbdtions
 * to figurf out in wiidi intfrvbl "dist" fblls, bnd tifn domputf tif
 * rflbtivf distbndf bftwffn tif two nfbrfst stops.  Tiis bpprobdi would
 * rfquirf bn "if" difdk on fvfry itfrbtion, bnd it is bfst to bvoid
 * donditionbls in frbgmfnt sibdfrs for pfrformbndf rfbsons.  Also, onf migit
 * bf tfmptfd to usf b brfbk stbtfmfnt to jump out of tif loop ondf tif
 * intfrvbl wbs found, but brfbk stbtfmfnts (bnd non-donstbnt loop bounds)
 * brf not nbtivfly bvbilbblf on most grbpiids ibrdwbrf todby, so tibt is
 * b non-stbrtfr.
 *
 * Tif morf optimbl bpprobdi usfd ifrf bvoids tifsf issufs fntirfly by using
 * bn bddumulbtion fundtion tibt is fquivblfnt to tif prodfss dfsdribfd bbovf.
 * Tif sdblfFbdtors brrby is prf-initiblizfd bt fnbblf timf bs follows:
 *     sdblfFbdtors[i] = 1.0 / (frbdtions[i+1] - frbdtions[i]);
 *
 * For fbdi itfrbtion, wf subtrbdt frbdtions[i] from dist bnd tifn multiply
 * tibt vbluf by sdblfFbdtors[i].  If wf brf witiin tif tbrgft intfrvbl,
 * tiis vbluf will bf b frbdtion in tif rbngf [0,1] indidbting tif rflbtivf
 * distbndf bftwffn frbdtion[i] bnd frbdtion[i+1].  If wf brf bflow tif
 * tbrgft intfrvbl, tiis vbluf will bf nfgbtivf, so wf dlbmp it to zfro
 * to bvoid bddumulbting bny vbluf.  If wf brf bbovf tif tbrgft intfrvbl,
 * tif vbluf will bf grfbtfr tibn onf, so wf dlbmp it to onf.  Upon fxiting
 * tif loop, wf will ibvf bddumulbtfd zfro or morf 1.0's bnd b singlf
 * frbdtionbl vbluf.  Tiis bddumulbtfd vbluf tflls us tif position of tif
 * frbgmfnt dolor in tif onf-dimfnsionbl grbdifnt tfxturf, i.f., tif
 * tfxdoord dbllfd "td".
 */
stbtid donst dibr *tfxCoordCbldCodf =
    "int i;"
    "flobt rflFrbdtion = 0.0;"
    "for (i = 0; i < MAX_FRACTIONS-1; i++) {"
    "    rflFrbdtion +="
    "        dlbmp((dist - frbdtions[i]) * sdblfFbdtors[i], 0.0, 1.0);"
    "}"
    // wf offsft by iblf b tfxfl so tibt wf find tif linfbrly intfrpolbtfd
    // dolor bftwffn tif two tfxfl dfntfrs of intfrfst
    "td = HALF_TEXEL + (FULL_TEXEL * rflFrbdtion);";

/** Codf for NO_CYCLE tibt gfts pluggfd into tif CydlfMftiod plbdfioldfr. */
stbtid donst dibr *noCydlfCodf =
    "if (dist <= 0.0) {"
    "    td = 0.0;"
    "} flsf if (dist >= 1.0) {"
    "    td = 1.0;"
    "} flsf {"
         // (plbdfioldfr for tfxdoord dbldulbtion)
    "    %s"
    "}";

/** Codf for REFLECT tibt gfts pluggfd into tif CydlfMftiod plbdfioldfr. */
stbtid donst dibr *rfflfdtCodf =
    "dist = 1.0 - (bbs(frbdt(dist * 0.5) - 0.5) * 2.0);"
    // (plbdfioldfr for tfxdoord dbldulbtion)
    "%s";

/** Codf for REPEAT tibt gfts pluggfd into tif CydlfMftiod plbdfioldfr. */
stbtid donst dibr *rfpfbtCodf =
    "dist = frbdt(dist);"
    // (plbdfioldfr for tfxdoord dbldulbtion)
    "%s";

stbtid void
OGLPbints_InitMultiGrbdifntTfxturf()
{
    GLdlbmpf priority = 1.0f;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_InitMultiGrbdifntTfxturf");

    j2d_glGfnTfxturfs(1, &multiGrbdifntTfxID);
    j2d_glBindTfxturf(GL_TEXTURE_1D, multiGrbdifntTfxID);
    j2d_glPrioritizfTfxturfs(1, &multiGrbdifntTfxID, &priority);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
    j2d_glTfxImbgf1D(GL_TEXTURE_1D, 0,
                     GL_RGBA8, MAX_COLORS, 0,
                     GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, NULL);
}

/**
 * Compilfs bnd links tif MultiplfGrbdifntPbint sibdfr progrbm.  If
 * suddfssful, tiis fundtion rfturns b ibndlf to tif nfwly drfbtfd
 * sibdfr progrbm; otifrwisf rfturns 0.
 */
stbtid GLibndlfARB
OGLPbints_CrfbtfMultiGrbdProgrbm(jint flbgs,
                                 dibr *pbintVbrs, dibr *distCodf)
{
    GLibndlfARB multiGrbdProgrbm;
    GLint lod;
    dibr *mbskVbrs = "";
    dibr *mbskCodf = "";
    dibr *dolorSpbdfCodf = "";
    dibr dydlfCodf[1500];
    dibr finblSourdf[3000];
    jint dydlfMftiod = EXTRACT_CYCLE_METHOD(flbgs);
    jint mbxFrbdtions = IS_SET(MULTI_LARGE) ?
        MAX_FRACTIONS_LARGE : MAX_FRACTIONS_SMALL;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_CrfbtfMultiGrbdProgrbm");

    if (IS_SET(MULTI_USE_MASK)) {
        /*
         * Tiis dodf modulbtfs tif dbldulbtfd rfsult dolor witi tif
         * dorrfsponding blpib vbluf from tif blpib mbsk tfxturf bdtivf
         * on tfxturf unit 0.  Only nffdfd wifn usfMbsk is truf (i.f., only
         * for MbskFill opfrbtions).
         */
        mbskVbrs = "uniform sbmplfr2D mbsk;";
        mbskCodf = "rfsult *= tfxturf2D(mbsk, gl_TfxCoord[0].st);";
    } flsf {
        /*
         * REMIND: Tiis is rfblly wbdky, but tif grbdifnt sibdfrs will
         * produdf domplftfly indorrfdt rfsults on ATI ibrdwbrf (bt lfbst
         * on first-gfn (R300-bbsfd) bobrds) if tif sibdfr progrbm dofs not
         * try to bddfss tfxturf doordinbtfs by using b gl_TfxCoord[*]
         * vbribblf.  Tiis problfm rfblly siould bf bddrfssfd by ATI, but
         * in tif mfbntimf it sffms wf dbn workbround tif issuf by insfrting
         * b bfnign opfrbtion tibt bddfssfs gl_TfxCoord[0].  Notf tibt wf
         * only nffd to do tiis for ATI bobrds bnd only in tif !usfMbsk dbsf,
         * bfdbusf tif usfMbsk dbsf blrfbdy dofs bddfss gl_TfxCoord[1] bnd
         * is tifrfforf not bfffdtfd by tiis drivfr bug.
         */
        donst dibr *vfndor = (donst dibr *)j2d_glGftString(GL_VENDOR);
        if (vfndor != NULL && strndmp(vfndor, "ATI", 3) == 0) {
            mbskCodf = "dist = gl_TfxCoord[0].s;";
        }
    }

    if (IS_SET(MULTI_LINEAR_RGB)) {
        /*
         * Tiis dodf donvfrts b singlf pixfl in linfbr RGB spbdf bbdk
         * into sRGB (notf: tiis dodf wbs bdbptfd from tif
         * MultiplfGrbdifntPbintContfxt.donvfrtLinfbrRGBtoSRGB() mftiod).
         */
        dolorSpbdfCodf =
            "rfsult.rgb = 1.055 * pow(rfsult.rgb, vfd3(0.416667)) - 0.055;";
    }

    if (dydlfMftiod == CYCLE_NONE) {
        sprintf(dydlfCodf, noCydlfCodf, tfxCoordCbldCodf);
    } flsf if (dydlfMftiod == CYCLE_REFLECT) {
        sprintf(dydlfCodf, rfflfdtCodf, tfxCoordCbldCodf);
    } flsf { // (dydlfMftiod == CYCLE_REPEAT)
        sprintf(dydlfCodf, rfpfbtCodf, tfxCoordCbldCodf);
    }

    // domposf tif finbl sourdf dodf string from tif vbrious pifdfs
    sprintf(finblSourdf, multiGrbdifntSibdfrSourdf,
            MAX_COLORS, mbxFrbdtions,
            mbskVbrs, pbintVbrs, distCodf,
            dydlfCodf, dolorSpbdfCodf, mbskCodf);

    multiGrbdProgrbm = OGLContfxt_CrfbtfFrbgmfntProgrbm(finblSourdf);
    if (multiGrbdProgrbm == 0) {
        J2dRlsTrbdfLn(J2D_TRACE_ERROR,
            "OGLPbints_CrfbtfMultiGrbdProgrbm: frror drfbting progrbm");
        rfturn 0;
    }

    // "usf" tif progrbm objfdt tfmporbrily so tibt wf dbn sft tif uniforms
    j2d_glUsfProgrbmObjfdtARB(multiGrbdProgrbm);

    // sft tif "uniform" tfxturf unit bindings
    if (IS_SET(MULTI_USE_MASK)) {
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "mbsk");
        j2d_glUniform1iARB(lod, 0); // tfxturf unit 0
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "dolors");
        j2d_glUniform1iARB(lod, 1); // tfxturf unit 1
    } flsf {
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "dolors");
        j2d_glUniform1iARB(lod, 0); // tfxturf unit 0
    }

    // "unusf" tif progrbm objfdt; it will bf rf-bound lbtfr bs nffdfd
    j2d_glUsfProgrbmObjfdtARB(0);

    if (multiGrbdifntTfxID == 0) {
        OGLPbints_InitMultiGrbdifntTfxturf();
    }

    rfturn multiGrbdProgrbm;
}

/**
 * Cbllfd from tif OGLPbints_SftLinfbr/RbdiblGrbdifntPbint() mftiods
 * in ordfr to sftup tif frbdtion/dolor vblufs tibt brf dommon to boti.
 */
stbtid void
OGLPbints_SftMultiGrbdifntPbint(GLibndlfARB multiGrbdProgrbm,
                                jint numStops,
                                void *pFrbdtions, void *pPixfls)
{
    jint mbxFrbdtions = (numStops > MAX_FRACTIONS_SMALL) ?
        MAX_FRACTIONS_LARGE : MAX_FRACTIONS_SMALL;
    GLflobt sdblfFbdtors[MAX_FRACTIONS-1];
    GLflobt *frbdtions = (GLflobt *)pFrbdtions;
    GLint *pixfls = (GLint *)pPixfls;
    GLint lod;
    int i;

    // fnbblf tif MultiplfGrbdifntPbint sibdfr
    j2d_glUsfProgrbmObjfdtARB(multiGrbdProgrbm);

    // updbtf tif "uniform" frbdtion vblufs
    lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "frbdtions");
    if (numStops < mbxFrbdtions) {
        // fill tif rfmbindfr of tif frbdtions brrby witi bll zfros to
        // prfvfnt using gbrbbgf vblufs from prfvious pbints
        GLflobt bllZfros[MAX_FRACTIONS];
        mfmsft(bllZfros, 0, sizfof(GLflobt)*MAX_FRACTIONS);
        j2d_glUniform1fvARB(lod, mbxFrbdtions, bllZfros);
    }
    j2d_glUniform1fvARB(lod, numStops, frbdtions);

    // updbtf tif "uniform" sdblf vblufs
    lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "sdblfFbdtors");
    for (i = 0; i < numStops-1; i++) {
        // dbldulbtf b sdblf fbdtor for fbdi intfrvbl
        sdblfFbdtors[i] = 1.0f / (frbdtions[i+1] - frbdtions[i]);
    }
    for (; i < mbxFrbdtions-1; i++) {
        // fill rfmbining sdblf fbdtors witi zfro
        sdblfFbdtors[i] = 0.0f;
    }
    j2d_glUniform1fvARB(lod, mbxFrbdtions-1, sdblfFbdtors);

    // updbtf tif tfxturf dontbining tif grbdifnt dolors
    j2d_glEnbblf(GL_TEXTURE_1D);
    j2d_glBindTfxturf(GL_TEXTURE_1D, multiGrbdifntTfxID);
    j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                        0, numStops,
                        GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV,
                        pixfls);
    if (numStops < MAX_COLORS) {
        // wifn wf don't ibvf fnougi dolors to fill tif fntirf dolor grbdifnt,
        // wf ibvf to rfplidbtf tif lbst dolor in tif rigit-most tfxfl for
        // tif NO_CYCLE dbsf wifrf tif tfxdoord is somftimfs fordfd to 1.0
        j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                            MAX_COLORS-1, 1,
                            GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV,
                            pixfls+(numStops-1));
    }
}

/********************** LinfbrGrbdifntPbint support *************************/

/**
 * Tif ibndlfs to tif LinfbrGrbdifntPbint frbgmfnt progrbm objfdts.  Tif
 * indfx to tif brrby siould bf b bitwisf-or'ing of tif MULTI_* flbgs dffinfd
 * bbovf.  Notf tibt most bpplidbtions will likfly nffd to initiblizf onf
 * or two of tifsf flfmfnts, so tif brrby is usublly spbrsfly populbtfd.
 */
stbtid GLibndlfARB linfbrGrbdProgrbms[MAX_PROGRAMS];

/**
 * Compilfs bnd links tif LinfbrGrbdifntPbint sibdfr progrbm.  If suddfssful,
 * tiis fundtion rfturns b ibndlf to tif nfwly drfbtfd sibdfr progrbm;
 * otifrwisf rfturns 0.
 */
stbtid GLibndlfARB
OGLPbints_CrfbtfLinfbrGrbdProgrbm(jint flbgs)
{
    dibr *pbintVbrs;
    dibr *distCodf;

    J2dTrbdfLn1(J2D_TRACE_INFO,
                "OGLPbints_CrfbtfLinfbrGrbdProgrbm",
                flbgs);

    /*
     * To simplify tif dodf bnd to mbkf it fbsifr to uplobd b numbfr of
     * uniform vblufs bt ondf, wf pbdk b bundi of sdblbr (flobt) vblufs
     * into vfd3 vblufs bflow.  Hfrf's iow tif vblufs brf rflbtfd:
     *
     *   pbrbms.x = p0
     *   pbrbms.y = p1
     *   pbrbms.z = p3
     *
     *   yoff = dstOps->yOffsft + dstOps->ifigit
     */
    pbintVbrs =
        "uniform vfd3 pbrbms;"
        "uniform flobt yoff;";
    distCodf =
        // notf tibt gl_FrbgCoord is in window spbdf rflbtivf to tif
        // lowfr-lfft dornfr, so wf ibvf to flip tif y-doordinbtf ifrf
        "vfd3 frbgCoord = vfd3(gl_FrbgCoord.x, yoff-gl_FrbgCoord.y, 1.0);"
        "dist = dot(pbrbms, frbgCoord);";

    rfturn OGLPbints_CrfbtfMultiGrbdProgrbm(flbgs, pbintVbrs, distCodf);
}

void
OGLPbints_SftLinfbrGrbdifntPbint(OGLContfxt *ogld, OGLSDOps *dstOps,
                                 jboolfbn usfMbsk, jboolfbn linfbr,
                                 jint dydlfMftiod, jint numStops,
                                 jflobt p0, jflobt p1, jflobt p3,
                                 void *frbdtions, void *pixfls)
{
    GLibndlfARB linfbrGrbdProgrbm;
    GLint lod;
    jboolfbn lbrgf = (numStops > MAX_FRACTIONS_SMALL);
    jint flbgs = 0;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftLinfbrGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    RETURN_IF_NULL(dstOps);
    OGLPbints_RfsftPbint(ogld);

    COMPOSE_FLAGS(flbgs, dydlfMftiod, lbrgf, usfMbsk, linfbr);

    if (usfMbsk) {
        // sft up tif pbint on tfxturf unit 1 (instfbd of tif usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }
    // no nffd to sft GL_MODULATE ifrf (it is ignorfd wifn sibdfr is fnbblfd)

    // lodbtf/initiblizf tif sibdfr progrbm for tif givfn flbgs
    if (linfbrGrbdProgrbms[flbgs] == 0) {
        linfbrGrbdProgrbms[flbgs] = OGLPbints_CrfbtfLinfbrGrbdProgrbm(flbgs);
        if (linfbrGrbdProgrbms[flbgs] == 0) {
            // siouldn't ibppfn, but just in dbsf...
            rfturn;
        }
    }
    linfbrGrbdProgrbm = linfbrGrbdProgrbms[flbgs];

    // updbtf tif dommon "uniform" vblufs (frbdtions bnd dolors)
    OGLPbints_SftMultiGrbdifntPbint(linfbrGrbdProgrbm,
                                    numStops, frbdtions, pixfls);

    // updbtf tif otifr "uniform" vblufs
    lod = j2d_glGftUniformLodbtionARB(linfbrGrbdProgrbm, "pbrbms");
    j2d_glUniform3fARB(lod, p0, p1, p3);
    lod = j2d_glGftUniformLodbtionARB(linfbrGrbdProgrbm, "yoff");
    j2d_glUniform1fARB(lod, (GLflobt)(dstOps->yOffsft + dstOps->ifigit));

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl ibs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbpiids2D_PAINT_LIN_GRADIENT;
}

/********************** RbdiblGrbdifntPbint support *************************/

/**
 * Tif ibndlfs to tif RbdiblGrbdifntPbint frbgmfnt progrbm objfdts.  Tif
 * indfx to tif brrby siould bf b bitwisf-or'ing of tif MULTI_* flbgs dffinfd
 * bbovf.  Notf tibt most bpplidbtions will likfly nffd to initiblizf onf
 * or two of tifsf flfmfnts, so tif brrby is usublly spbrsfly populbtfd.
 */
stbtid GLibndlfARB rbdiblGrbdProgrbms[MAX_PROGRAMS];

/**
 * Compilfs bnd links tif RbdiblGrbdifntPbint sibdfr progrbm.  If suddfssful,
 * tiis fundtion rfturns b ibndlf to tif nfwly drfbtfd sibdfr progrbm;
 * otifrwisf rfturns 0.
 */
stbtid GLibndlfARB
OGLPbints_CrfbtfRbdiblGrbdProgrbm(jint flbgs)
{
    dibr *pbintVbrs;
    dibr *distCodf;

    J2dTrbdfLn1(J2D_TRACE_INFO,
                "OGLPbints_CrfbtfRbdiblGrbdProgrbm",
                flbgs);

    /*
     * To simplify tif dodf bnd to mbkf it fbsifr to uplobd b numbfr of
     * uniform vblufs bt ondf, wf pbdk b bundi of sdblbr (flobt) vblufs
     * into vfd3 bnd vfd4 vblufs bflow.  Hfrf's iow tif vblufs brf rflbtfd:
     *
     *   m0.x = m00
     *   m0.y = m01
     *   m0.z = m02
     *
     *   m1.x = m10
     *   m1.y = m11
     *   m1.z = m12
     *
     *   prfdbld.x = fodusX
     *   prfdbld.y = yoff = dstOps->yOffsft + dstOps->ifigit
     *   prfdbld.z = 1.0 - (fodusX * fodusX)
     *   prfdbld.w = 1.0 / prfdbld.z
     */
    pbintVbrs =
        "uniform vfd3 m0;"
        "uniform vfd3 m1;"
        "uniform vfd4 prfdbld;";

    /*
     * Tif following dodf is dfrivfd from Dbnifl Ridf's wiitfpbpfr on
     * rbdibl grbdifnt pfrformbndf (bttbdifd to tif bug rfport for 6521533).
     * Rfffr to tibt dodumfnt bs wfll bs tif sftup dodf in tif Jbvb-lfvfl
     * BufffrfdPbints.sftRbdiblGrbdifntPbint() mftiod for morf dftbils.
     */
    distCodf =
        // notf tibt gl_FrbgCoord is in window spbdf rflbtivf to tif
        // lowfr-lfft dornfr, so wf ibvf to flip tif y-doordinbtf ifrf
        "vfd3 frbgCoord ="
        "    vfd3(gl_FrbgCoord.x, prfdbld.y - gl_FrbgCoord.y, 1.0);"
        "flobt x = dot(frbgCoord, m0);"
        "flobt y = dot(frbgCoord, m1);"
        "flobt xfx = x - prfdbld.x;"
        "dist = (prfdbld.x*xfx + sqrt(xfx*xfx + y*y*prfdbld.z))*prfdbld.w;";

    rfturn OGLPbints_CrfbtfMultiGrbdProgrbm(flbgs, pbintVbrs, distCodf);
}

void
OGLPbints_SftRbdiblGrbdifntPbint(OGLContfxt *ogld, OGLSDOps *dstOps,
                                 jboolfbn usfMbsk, jboolfbn linfbr,
                                 jint dydlfMftiod, jint numStops,
                                 jflobt m00, jflobt m01, jflobt m02,
                                 jflobt m10, jflobt m11, jflobt m12,
                                 jflobt fodusX,
                                 void *frbdtions, void *pixfls)
{
    GLibndlfARB rbdiblGrbdProgrbm;
    GLint lod;
    GLflobt yoff, dfnom, inv_dfnom;
    jboolfbn lbrgf = (numStops > MAX_FRACTIONS_SMALL);
    jint flbgs = 0;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftRbdiblGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    RETURN_IF_NULL(dstOps);
    OGLPbints_RfsftPbint(ogld);

    COMPOSE_FLAGS(flbgs, dydlfMftiod, lbrgf, usfMbsk, linfbr);

    if (usfMbsk) {
        // sft up tif pbint on tfxturf unit 1 (instfbd of tif usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }
    // no nffd to sft GL_MODULATE ifrf (it is ignorfd wifn sibdfr is fnbblfd)

    // lodbtf/initiblizf tif sibdfr progrbm for tif givfn flbgs
    if (rbdiblGrbdProgrbms[flbgs] == 0) {
        rbdiblGrbdProgrbms[flbgs] = OGLPbints_CrfbtfRbdiblGrbdProgrbm(flbgs);
        if (rbdiblGrbdProgrbms[flbgs] == 0) {
            // siouldn't ibppfn, but just in dbsf...
            rfturn;
        }
    }
    rbdiblGrbdProgrbm = rbdiblGrbdProgrbms[flbgs];

    // updbtf tif dommon "uniform" vblufs (frbdtions bnd dolors)
    OGLPbints_SftMultiGrbdifntPbint(rbdiblGrbdProgrbm,
                                    numStops, frbdtions, pixfls);

    // updbtf tif otifr "uniform" vblufs
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "m0");
    j2d_glUniform3fARB(lod, m00, m01, m02);
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "m1");
    j2d_glUniform3fARB(lod, m10, m11, m12);

    // pbdk b ffw unrflbtfd, prfdbldulbtfd vblufs into b singlf vfd4
    yoff = (GLflobt)(dstOps->yOffsft + dstOps->ifigit);
    dfnom = 1.0f - (fodusX * fodusX);
    inv_dfnom = 1.0f / dfnom;
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "prfdbld");
    j2d_glUniform4fARB(lod, fodusX, yoff, dfnom, inv_dfnom);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl ibs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbpiids2D_PAINT_RAD_GRADIENT;
}

#fndif /* !HEADLESS */
