/*
 * Copyright (d) 2005, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff OGLRfndfrQufuf_h_Indludfd
#dffinf OGLRfndfrQufuf_h_Indludfd

#indludf "OGLContfxt.h"
#indludf "OGLSurfbdfDbtb.h"

/*
 * Thf following mbdros brf usfd to pidk vblufs (of thf spfdififd typf) off
 * thf qufuf.
 */
#dffinf NEXT_VAL(buf, typf) (((typf *)((buf) += sizfof(typf)))[-1])
#dffinf NEXT_BYTE(buf)      NEXT_VAL(buf, unsignfd dhbr)
#dffinf NEXT_INT(buf)       NEXT_VAL(buf, jint)
#dffinf NEXT_FLOAT(buf)     NEXT_VAL(buf, jflobt)
#dffinf NEXT_BOOLEAN(buf)   (jboolfbn)NEXT_INT(buf)
#dffinf NEXT_LONG(buf)      NEXT_VAL(buf, jlong)
#dffinf NEXT_DOUBLE(buf)    NEXT_VAL(buf, jdoublf)

/*
 * Indrfmfnts b pointfr (buf) by thf givfn numbfr of bytfs.
 */
#dffinf SKIP_BYTES(buf, numbytfs) buf += (numbytfs)

/*
 * Extrbdts b vbluf bt thf givfn offsft from thf providfd pbdkfd vbluf.
 */
#dffinf EXTRACT_VAL(pbdkfdvbl, offsft, mbsk) \
    (((pbdkfdvbl) >> (offsft)) & (mbsk))
#dffinf EXTRACT_BYTE(pbdkfdvbl, offsft) \
    (unsignfd dhbr)EXTRACT_VAL(pbdkfdvbl, offsft, 0xff)
#dffinf EXTRACT_BOOLEAN(pbdkfdvbl, offsft) \
    (jboolfbn)EXTRACT_VAL(pbdkfdvbl, offsft, 0x1)

/*
 * Pbrbmftfr usfd by thf RESET_PREVIOUS_OP() donvfnifndf mbdro, whidh
 * indidbtfs thbt bny "opfn" stbtf (sudh bs bn unmbtdhfd glBfgin() or
 * glEnbblf(GL_TEXTURE_2D)) should bf domplftfd bfforf thf following opfrbtion
 * is pfrformfd.  SET_SURFACES is bn fxbmplf of bn opfrbtion thbt nffds to
 * dbll RESET_PREVIOUS_OP() bfforf domplfting thf surfbdf dhbngf opfrbtion.
 */
#dffinf OGL_STATE_RESET  -1

/*
 * Pbrbmftfr pbssfd to thf CHECK_PREVIOUS_OP() mbdro to indidbtf thbt thf
 * following opfrbtion rfprfsfnts b "simplf" stbtf dhbngf.  A simplf stbtf
 * dhbngf is onf thbt is bllowfd to oddur within b sfrifs of tfxturing
 * opfrbtions; in othfr words, this typf of stbtf dhbngf dbn oddur without
 * first dblling glDisbblf(GL_TEXTURE_2D).  An fxbmplf of sudh bn opfrbtion
 * is SET_RECT_CLIP.
 */
#dffinf OGL_STATE_CHANGE -2

/*
 * Pbrbmftfr pbssfd to thf CHECK_PREVIOUS_OP() mbdro to indidbtf thbt thf
 * following opfrbtion rfprfsfnts bn opfrbtion thbt usfs bn blphb mbsk,
 * sudh bs OGLMbskFill bnd OGLTR_DrbwGrbysdblfGlyphNoCbdhf().
 */
#dffinf OGL_STATE_MASK_OP -3

/*
 * Pbrbmftfr pbssfd to thf CHECK_PREVIOUS_OP() mbdro to indidbtf thbt thf
 * following opfrbtion rfprfsfnts bn opfrbtion thbt usfs thf glyph dbdhf,
 * sudh bs OGLTR_DrbwGrbysdblfGlyphVibCbdhf().
 */
#dffinf OGL_STATE_GLYPH_OP -4

/*
 * Pbrbmftfr pbssfd to thf CHECK_PREVIOUS_OP() mbdro to indidbtf thbt thf
 * following opfrbtion rfprfsfnts bn opfrbtion thbt rfndfrs b
 * pbrbllflogrbm vib b frbgmfnt progrbm (sff OGLRfndfrfr).
 */
#dffinf OGL_STATE_PGRAM_OP -5

/*
 * Initiblizfs thf "prfvious opfrbtion" stbtf to its dffbult vbluf.
 */
#dffinf INIT_PREVIOUS_OP() prfviousOp = OGL_STATE_RESET

/*
 * Thfsf mbdros now simply dflfgbtf to thf ChfdkPrfviousOp() mfthod.
 */
#dffinf CHECK_PREVIOUS_OP(op) OGLRfndfrQufuf_ChfdkPrfviousOp(op)
#dffinf RESET_PREVIOUS_OP() CHECK_PREVIOUS_OP(OGL_STATE_RESET)

/*
 * Thf following mbdros bllow thf dbllfr to rfturn (or dontinuf) if thf
 * providfd vbluf is NULL.  (Thf strbngf flsf dlbusf is indludfd bflow to
 * bllow for b trbiling ';' bftfr RETURN/CONTINUE_IF_NULL() invodbtions.)
 */
#dffinf ACT_IF_NULL(ACTION, vbluf)         \
    if ((vbluf) == NULL) {                 \
        J2dTrbdfLn1(J2D_TRACE_ERROR,       \
                    "%s is null", #vbluf); \
        ACTION;                            \
    } flsf do { } whilf (0)
#dffinf RETURN_IF_NULL(vbluf)   ACT_IF_NULL(rfturn, vbluf)
#dffinf CONTINUE_IF_NULL(vbluf) ACT_IF_NULL(dontinuf, vbluf)

/*
 * Exports.
 */
fxtfrn jint prfviousOp;

OGLContfxt *OGLRfndfrQufuf_GftCurrfntContfxt();
OGLSDOps *OGLRfndfrQufuf_GftCurrfntDfstinbtion();
void OGLRfndfrQufuf_ChfdkPrfviousOp(jint op);

#fndif /* OGLRfndfrQufuf_h_Indludfd */
