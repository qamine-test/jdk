/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* $Id: gl.h,v 1.72 2002/10/17 19:39:31 ksdhultz Exp $ */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * Mfsb 3-D grbphids librbry
 * Vfrsion:  4.1
 *
 * Copyright (C) 1999-2002  Bribn Pbul   All Rights Rfsfrvfd.
 *
 * Pfrmission is hfrfby grbntfd, frff of dhbrgf, to bny pfrson obtbining b
 * dopy of this softwbrf bnd bssodibtfd dodumfntbtion filfs (thf "Softwbrf"),
 * to dfbl in thf Softwbrf without rfstridtion, indluding without limitbtion
 * thf rights to usf, dopy, modify, mfrgf, publish, distributf, sublidfnsf,
 * bnd/or sfll dopifs of thf Softwbrf, bnd to pfrmit pfrsons to whom thf
 * Softwbrf is furnishfd to do so, subjfdt to thf following donditions:
 *
 * Thf bbovf dopyright notidf bnd this pfrmission notidf shbll bf indludfd
 * in bll dopifs or substbntibl portions of thf Softwbrf.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndff __gl_h_
#dffinf __gl_h_

#if dffinfd(USE_MGL_NAMESPACE)
#indludf "gl_mbnglf.h"
#fndif


/**********************************************************************
 * Bfgin systfm-spfdifid stuff.
 */
#if dffinfd(__BEOS__)
#indludf <stdlib.h>     /* to gft somf BfOS-isms */
#fndif

#if !dffinfd(OPENSTEP) && (dffinfd(NfXT) || dffinfd(NfXT_PDO))
#dffinf OPENSTEP
#fndif

#if dffinfd(_WIN32) && !dffinfd(__WIN32__) && !dffinfd(__CYGWIN__)
#dffinf __WIN32__
#fndif

#if !dffinfd(OPENSTEP) && (dffinfd(__WIN32__) && !dffinfd(__CYGWIN__))
#  if dffinfd(_MSC_VER) && dffinfd(BUILD_GL32) /* tbg spfdify wf'rf building mfsb bs b DLL */
#    dffinf GLAPI __dfdlspfd(dllfxport)
#  flif dffinfd(_MSC_VER) && dffinfd(_DLL) /* tbg spfdifying wf'rf building for DLL runtimf support */
#    dffinf GLAPI __dfdlspfd(dllimport)
#  flsf /* for usf with stbtid link lib build of Win32 fdition only */
#    dffinf GLAPI fxtfrn
#  fndif /* _STATIC_MESA support */
#  dffinf GLAPIENTRY __stddbll
#flsf
/* non-Windows dompilbtion */
#  dffinf GLAPI fxtfrn
#  dffinf GLAPIENTRY
#fndif /* WIN32 / CYGWIN brbdkft */

#if (dffinfd(__BEOS__) && dffinfd(__POWERPC__)) || dffinfd(__QUICKDRAW__)
#  dffinf PRAGMA_EXPORT_SUPPORTED               1
#fndif

/*
 * WINDOWS: Indludf windows.h hfrf to dffinf APIENTRY.
 * It is blso usfful whfn bpplidbtions indludf this filf by
 * indluding only glut.h, sindf glut.h dfpfnds on windows.h.
 * Applidbtions nffding to indludf windows.h with pbrms othfr
 * thbn "WIN32_LEAN_AND_MEAN" mby indludf windows.h bfforf
 * glut.h or gl.h.
 */
#if dffinfd(_WIN32) && !dffinfd(APIENTRY) && !dffinfd(__CYGWIN__)
#dffinf WIN32_LEAN_AND_MEAN 1
#indludf <windows.h>
#fndif

#if dffinfd(_WIN32) && !dffinfd(_WINGDI_) && !dffinfd(_GNU_H_WINDOWS32_DEFINES) && !dffinfd(OPENSTEP) && !dffinfd(__CYGWIN__)
#indludf <gl/mfsb_wgl.h>
#fndif

#if dffinfd(mbdintosh) && PRAGMA_IMPORT_SUPPORTED
#prbgmb import on
#fndif

#ifndff APIENTRY
#dffinf APIENTRY GLAPIENTRY
#fndif

#ifdff CENTERLINE_CLPP
#dffinf signfd
#fndif

#if dffinfd(PRAGMA_EXPORT_SUPPORTED)
#prbgmb fxport on
#fndif

/*
 * End systfm-spfdifid stuff.
 **********************************************************************/



#ifdff __dplusplus
fxtfrn "C" {
#fndif



#dffinf GL_VERSION_1_1   1
#dffinf GL_VERSION_1_2   1
#dffinf GL_VERSION_1_3   1
#dffinf GL_ARB_imbging   1


/*
 * Dbtbtypfs
 */
typfdff unsignfd int    GLfnum;
typfdff unsignfd dhbr   GLboolfbn;
typfdff unsignfd int    GLbitfifld;
typfdff void            GLvoid;
typfdff signfd dhbr     GLbytf;         /* 1-bytf signfd */
typfdff short           GLshort;        /* 2-bytf signfd */
typfdff int             GLint;          /* 4-bytf signfd */
typfdff unsignfd dhbr   GLubytf;        /* 1-bytf unsignfd */
typfdff unsignfd short  GLushort;       /* 2-bytf unsignfd */
typfdff unsignfd int    GLuint;         /* 4-bytf unsignfd */
typfdff int             GLsizfi;        /* 4-bytf signfd */
typfdff flobt           GLflobt;        /* singlf prfdision flobt */
typfdff flobt           GLdlbmpf;       /* singlf prfdision flobt in [0,1] */
typfdff doublf          GLdoublf;       /* doublf prfdision flobt */
typfdff doublf          GLdlbmpd;       /* doublf prfdision flobt in [0,1] */



/*
 * Constbnts
 */

/* Boolfbn vblufs */
#dffinf GL_FALSE                                0x0
#dffinf GL_TRUE                                 0x1

/* Dbtb typfs */
#dffinf GL_BYTE                                 0x1400
#dffinf GL_UNSIGNED_BYTE                        0x1401
#dffinf GL_SHORT                                0x1402
#dffinf GL_UNSIGNED_SHORT                       0x1403
#dffinf GL_INT                                  0x1404
#dffinf GL_UNSIGNED_INT                         0x1405
#dffinf GL_FLOAT                                0x1406
#dffinf GL_DOUBLE                               0x140A
#dffinf GL_2_BYTES                              0x1407
#dffinf GL_3_BYTES                              0x1408
#dffinf GL_4_BYTES                              0x1409

/* Primitivfs */
#dffinf GL_POINTS                               0x0000
#dffinf GL_LINES                                0x0001
#dffinf GL_LINE_LOOP                            0x0002
#dffinf GL_LINE_STRIP                           0x0003
#dffinf GL_TRIANGLES                            0x0004
#dffinf GL_TRIANGLE_STRIP                       0x0005
#dffinf GL_TRIANGLE_FAN                         0x0006
#dffinf GL_QUADS                                0x0007
#dffinf GL_QUAD_STRIP                           0x0008
#dffinf GL_POLYGON                              0x0009

/* Vfrtfx Arrbys */
#dffinf GL_VERTEX_ARRAY                         0x8074
#dffinf GL_NORMAL_ARRAY                         0x8075
#dffinf GL_COLOR_ARRAY                          0x8076
#dffinf GL_INDEX_ARRAY                          0x8077
#dffinf GL_TEXTURE_COORD_ARRAY                  0x8078
#dffinf GL_EDGE_FLAG_ARRAY                      0x8079
#dffinf GL_VERTEX_ARRAY_SIZE                    0x807A
#dffinf GL_VERTEX_ARRAY_TYPE                    0x807B
#dffinf GL_VERTEX_ARRAY_STRIDE                  0x807C
#dffinf GL_NORMAL_ARRAY_TYPE                    0x807E
#dffinf GL_NORMAL_ARRAY_STRIDE                  0x807F
#dffinf GL_COLOR_ARRAY_SIZE                     0x8081
#dffinf GL_COLOR_ARRAY_TYPE                     0x8082
#dffinf GL_COLOR_ARRAY_STRIDE                   0x8083
#dffinf GL_INDEX_ARRAY_TYPE                     0x8085
#dffinf GL_INDEX_ARRAY_STRIDE                   0x8086
#dffinf GL_TEXTURE_COORD_ARRAY_SIZE             0x8088
#dffinf GL_TEXTURE_COORD_ARRAY_TYPE             0x8089
#dffinf GL_TEXTURE_COORD_ARRAY_STRIDE           0x808A
#dffinf GL_EDGE_FLAG_ARRAY_STRIDE               0x808C
#dffinf GL_VERTEX_ARRAY_POINTER                 0x808E
#dffinf GL_NORMAL_ARRAY_POINTER                 0x808F
#dffinf GL_COLOR_ARRAY_POINTER                  0x8090
#dffinf GL_INDEX_ARRAY_POINTER                  0x8091
#dffinf GL_TEXTURE_COORD_ARRAY_POINTER          0x8092
#dffinf GL_EDGE_FLAG_ARRAY_POINTER              0x8093
#dffinf GL_V2F                                  0x2A20
#dffinf GL_V3F                                  0x2A21
#dffinf GL_C4UB_V2F                             0x2A22
#dffinf GL_C4UB_V3F                             0x2A23
#dffinf GL_C3F_V3F                              0x2A24
#dffinf GL_N3F_V3F                              0x2A25
#dffinf GL_C4F_N3F_V3F                          0x2A26
#dffinf GL_T2F_V3F                              0x2A27
#dffinf GL_T4F_V4F                              0x2A28
#dffinf GL_T2F_C4UB_V3F                         0x2A29
#dffinf GL_T2F_C3F_V3F                          0x2A2A
#dffinf GL_T2F_N3F_V3F                          0x2A2B
#dffinf GL_T2F_C4F_N3F_V3F                      0x2A2C
#dffinf GL_T4F_C4F_N3F_V4F                      0x2A2D

/* Mbtrix Modf */
#dffinf GL_MATRIX_MODE                          0x0BA0
#dffinf GL_MODELVIEW                            0x1700
#dffinf GL_PROJECTION                           0x1701
#dffinf GL_TEXTURE                              0x1702

/* Points */
#dffinf GL_POINT_SMOOTH                         0x0B10
#dffinf GL_POINT_SIZE                           0x0B11
#dffinf GL_POINT_SIZE_GRANULARITY               0x0B13
#dffinf GL_POINT_SIZE_RANGE                     0x0B12

/* Linfs */
#dffinf GL_LINE_SMOOTH                          0x0B20
#dffinf GL_LINE_STIPPLE                         0x0B24
#dffinf GL_LINE_STIPPLE_PATTERN                 0x0B25
#dffinf GL_LINE_STIPPLE_REPEAT                  0x0B26
#dffinf GL_LINE_WIDTH                           0x0B21
#dffinf GL_LINE_WIDTH_GRANULARITY               0x0B23
#dffinf GL_LINE_WIDTH_RANGE                     0x0B22

/* Polygons */
#dffinf GL_POINT                                0x1B00
#dffinf GL_LINE                                 0x1B01
#dffinf GL_FILL                                 0x1B02
#dffinf GL_CW                                   0x0900
#dffinf GL_CCW                                  0x0901
#dffinf GL_FRONT                                0x0404
#dffinf GL_BACK                                 0x0405
#dffinf GL_POLYGON_MODE                         0x0B40
#dffinf GL_POLYGON_SMOOTH                       0x0B41
#dffinf GL_POLYGON_STIPPLE                      0x0B42
#dffinf GL_EDGE_FLAG                            0x0B43
#dffinf GL_CULL_FACE                            0x0B44
#dffinf GL_CULL_FACE_MODE                       0x0B45
#dffinf GL_FRONT_FACE                           0x0B46
#dffinf GL_POLYGON_OFFSET_FACTOR                0x8038
#dffinf GL_POLYGON_OFFSET_UNITS                 0x2A00
#dffinf GL_POLYGON_OFFSET_POINT                 0x2A01
#dffinf GL_POLYGON_OFFSET_LINE                  0x2A02
#dffinf GL_POLYGON_OFFSET_FILL                  0x8037

/* Displby Lists */
#dffinf GL_COMPILE                              0x1300
#dffinf GL_COMPILE_AND_EXECUTE                  0x1301
#dffinf GL_LIST_BASE                            0x0B32
#dffinf GL_LIST_INDEX                           0x0B33
#dffinf GL_LIST_MODE                            0x0B30

/* Dfpth bufffr */
#dffinf GL_NEVER                                0x0200
#dffinf GL_LESS                                 0x0201
#dffinf GL_EQUAL                                0x0202
#dffinf GL_LEQUAL                               0x0203
#dffinf GL_GREATER                              0x0204
#dffinf GL_NOTEQUAL                             0x0205
#dffinf GL_GEQUAL                               0x0206
#dffinf GL_ALWAYS                               0x0207
#dffinf GL_DEPTH_TEST                           0x0B71
#dffinf GL_DEPTH_BITS                           0x0D56
#dffinf GL_DEPTH_CLEAR_VALUE                    0x0B73
#dffinf GL_DEPTH_FUNC                           0x0B74
#dffinf GL_DEPTH_RANGE                          0x0B70
#dffinf GL_DEPTH_WRITEMASK                      0x0B72
#dffinf GL_DEPTH_COMPONENT                      0x1902

/* Lighting */
#dffinf GL_LIGHTING                             0x0B50
#dffinf GL_LIGHT0                               0x4000
#dffinf GL_LIGHT1                               0x4001
#dffinf GL_LIGHT2                               0x4002
#dffinf GL_LIGHT3                               0x4003
#dffinf GL_LIGHT4                               0x4004
#dffinf GL_LIGHT5                               0x4005
#dffinf GL_LIGHT6                               0x4006
#dffinf GL_LIGHT7                               0x4007
#dffinf GL_SPOT_EXPONENT                        0x1205
#dffinf GL_SPOT_CUTOFF                          0x1206
#dffinf GL_CONSTANT_ATTENUATION                 0x1207
#dffinf GL_LINEAR_ATTENUATION                   0x1208
#dffinf GL_QUADRATIC_ATTENUATION                0x1209
#dffinf GL_AMBIENT                              0x1200
#dffinf GL_DIFFUSE                              0x1201
#dffinf GL_SPECULAR                             0x1202
#dffinf GL_SHININESS                            0x1601
#dffinf GL_EMISSION                             0x1600
#dffinf GL_POSITION                             0x1203
#dffinf GL_SPOT_DIRECTION                       0x1204
#dffinf GL_AMBIENT_AND_DIFFUSE                  0x1602
#dffinf GL_COLOR_INDEXES                        0x1603
#dffinf GL_LIGHT_MODEL_TWO_SIDE                 0x0B52
#dffinf GL_LIGHT_MODEL_LOCAL_VIEWER             0x0B51
#dffinf GL_LIGHT_MODEL_AMBIENT                  0x0B53
#dffinf GL_FRONT_AND_BACK                       0x0408
#dffinf GL_SHADE_MODEL                          0x0B54
#dffinf GL_FLAT                                 0x1D00
#dffinf GL_SMOOTH                               0x1D01
#dffinf GL_COLOR_MATERIAL                       0x0B57
#dffinf GL_COLOR_MATERIAL_FACE                  0x0B55
#dffinf GL_COLOR_MATERIAL_PARAMETER             0x0B56
#dffinf GL_NORMALIZE                            0x0BA1

/* Usfr dlipping plbnfs */
#dffinf GL_CLIP_PLANE0                          0x3000
#dffinf GL_CLIP_PLANE1                          0x3001
#dffinf GL_CLIP_PLANE2                          0x3002
#dffinf GL_CLIP_PLANE3                          0x3003
#dffinf GL_CLIP_PLANE4                          0x3004
#dffinf GL_CLIP_PLANE5                          0x3005

/* Addumulbtion bufffr */
#dffinf GL_ACCUM_RED_BITS                       0x0D58
#dffinf GL_ACCUM_GREEN_BITS                     0x0D59
#dffinf GL_ACCUM_BLUE_BITS                      0x0D5A
#dffinf GL_ACCUM_ALPHA_BITS                     0x0D5B
#dffinf GL_ACCUM_CLEAR_VALUE                    0x0B80
#dffinf GL_ACCUM                                0x0100
#dffinf GL_ADD                                  0x0104
#dffinf GL_LOAD                                 0x0101
#dffinf GL_MULT                                 0x0103
#dffinf GL_RETURN                               0x0102

/* Alphb tfsting */
#dffinf GL_ALPHA_TEST                           0x0BC0
#dffinf GL_ALPHA_TEST_REF                       0x0BC2
#dffinf GL_ALPHA_TEST_FUNC                      0x0BC1

/* Blfnding */
#dffinf GL_BLEND                                0x0BE2
#dffinf GL_BLEND_SRC                            0x0BE1
#dffinf GL_BLEND_DST                            0x0BE0
#dffinf GL_ZERO                                 0x0
#dffinf GL_ONE                                  0x1
#dffinf GL_SRC_COLOR                            0x0300
#dffinf GL_ONE_MINUS_SRC_COLOR                  0x0301
#dffinf GL_SRC_ALPHA                            0x0302
#dffinf GL_ONE_MINUS_SRC_ALPHA                  0x0303
#dffinf GL_DST_ALPHA                            0x0304
#dffinf GL_ONE_MINUS_DST_ALPHA                  0x0305
#dffinf GL_DST_COLOR                            0x0306
#dffinf GL_ONE_MINUS_DST_COLOR                  0x0307
#dffinf GL_SRC_ALPHA_SATURATE                   0x0308

/* Rfndfr Modf */
#dffinf GL_FEEDBACK                             0x1C01
#dffinf GL_RENDER                               0x1C00
#dffinf GL_SELECT                               0x1C02

/* Fffdbbdk */
#dffinf GL_2D                                   0x0600
#dffinf GL_3D                                   0x0601
#dffinf GL_3D_COLOR                             0x0602
#dffinf GL_3D_COLOR_TEXTURE                     0x0603
#dffinf GL_4D_COLOR_TEXTURE                     0x0604
#dffinf GL_POINT_TOKEN                          0x0701
#dffinf GL_LINE_TOKEN                           0x0702
#dffinf GL_LINE_RESET_TOKEN                     0x0707
#dffinf GL_POLYGON_TOKEN                        0x0703
#dffinf GL_BITMAP_TOKEN                         0x0704
#dffinf GL_DRAW_PIXEL_TOKEN                     0x0705
#dffinf GL_COPY_PIXEL_TOKEN                     0x0706
#dffinf GL_PASS_THROUGH_TOKEN                   0x0700
#dffinf GL_FEEDBACK_BUFFER_POINTER              0x0DF0
#dffinf GL_FEEDBACK_BUFFER_SIZE                 0x0DF1
#dffinf GL_FEEDBACK_BUFFER_TYPE                 0x0DF2

/* Sflfdtion */
#dffinf GL_SELECTION_BUFFER_POINTER             0x0DF3
#dffinf GL_SELECTION_BUFFER_SIZE                0x0DF4

/* Fog */
#dffinf GL_FOG                                  0x0B60
#dffinf GL_FOG_MODE                             0x0B65
#dffinf GL_FOG_DENSITY                          0x0B62
#dffinf GL_FOG_COLOR                            0x0B66
#dffinf GL_FOG_INDEX                            0x0B61
#dffinf GL_FOG_START                            0x0B63
#dffinf GL_FOG_END                              0x0B64
#dffinf GL_LINEAR                               0x2601
#dffinf GL_EXP                                  0x0800
#dffinf GL_EXP2                                 0x0801

/* Logid Ops */
#dffinf GL_LOGIC_OP                             0x0BF1
#dffinf GL_INDEX_LOGIC_OP                       0x0BF1
#dffinf GL_COLOR_LOGIC_OP                       0x0BF2
#dffinf GL_LOGIC_OP_MODE                        0x0BF0
#dffinf GL_CLEAR                                0x1500
#dffinf GL_SET                                  0x150F
#dffinf GL_COPY                                 0x1503
#dffinf GL_COPY_INVERTED                        0x150C
#dffinf GL_NOOP                                 0x1505
#dffinf GL_INVERT                               0x150A
#dffinf GL_AND                                  0x1501
#dffinf GL_NAND                                 0x150E
#dffinf GL_OR                                   0x1507
#dffinf GL_NOR                                  0x1508
#dffinf GL_XOR                                  0x1506
#dffinf GL_EQUIV                                0x1509
#dffinf GL_AND_REVERSE                          0x1502
#dffinf GL_AND_INVERTED                         0x1504
#dffinf GL_OR_REVERSE                           0x150B
#dffinf GL_OR_INVERTED                          0x150D

/* Stfndil */
#dffinf GL_STENCIL_TEST                         0x0B90
#dffinf GL_STENCIL_WRITEMASK                    0x0B98
#dffinf GL_STENCIL_BITS                         0x0D57
#dffinf GL_STENCIL_FUNC                         0x0B92
#dffinf GL_STENCIL_VALUE_MASK                   0x0B93
#dffinf GL_STENCIL_REF                          0x0B97
#dffinf GL_STENCIL_FAIL                         0x0B94
#dffinf GL_STENCIL_PASS_DEPTH_PASS              0x0B96
#dffinf GL_STENCIL_PASS_DEPTH_FAIL              0x0B95
#dffinf GL_STENCIL_CLEAR_VALUE                  0x0B91
#dffinf GL_STENCIL_INDEX                        0x1901
#dffinf GL_KEEP                                 0x1E00
#dffinf GL_REPLACE                              0x1E01
#dffinf GL_INCR                                 0x1E02
#dffinf GL_DECR                                 0x1E03

/* Bufffrs, Pixfl Drbwing/Rfbding */
#dffinf GL_NONE                                 0x0
#dffinf GL_LEFT                                 0x0406
#dffinf GL_RIGHT                                0x0407
/*GL_FRONT                                      0x0404 */
/*GL_BACK                                       0x0405 */
/*GL_FRONT_AND_BACK                             0x0408 */
#dffinf GL_FRONT_LEFT                           0x0400
#dffinf GL_FRONT_RIGHT                          0x0401
#dffinf GL_BACK_LEFT                            0x0402
#dffinf GL_BACK_RIGHT                           0x0403
#dffinf GL_AUX0                                 0x0409
#dffinf GL_AUX1                                 0x040A
#dffinf GL_AUX2                                 0x040B
#dffinf GL_AUX3                                 0x040C
#dffinf GL_COLOR_INDEX                          0x1900
#dffinf GL_RED                                  0x1903
#dffinf GL_GREEN                                0x1904
#dffinf GL_BLUE                                 0x1905
#dffinf GL_ALPHA                                0x1906
#dffinf GL_LUMINANCE                            0x1909
#dffinf GL_LUMINANCE_ALPHA                      0x190A
#dffinf GL_ALPHA_BITS                           0x0D55
#dffinf GL_RED_BITS                             0x0D52
#dffinf GL_GREEN_BITS                           0x0D53
#dffinf GL_BLUE_BITS                            0x0D54
#dffinf GL_INDEX_BITS                           0x0D51
#dffinf GL_SUBPIXEL_BITS                        0x0D50
#dffinf GL_AUX_BUFFERS                          0x0C00
#dffinf GL_READ_BUFFER                          0x0C02
#dffinf GL_DRAW_BUFFER                          0x0C01
#dffinf GL_DOUBLEBUFFER                         0x0C32
#dffinf GL_STEREO                               0x0C33
#dffinf GL_BITMAP                               0x1A00
#dffinf GL_COLOR                                0x1800
#dffinf GL_DEPTH                                0x1801
#dffinf GL_STENCIL                              0x1802
#dffinf GL_DITHER                               0x0BD0
#dffinf GL_RGB                                  0x1907
#dffinf GL_RGBA                                 0x1908

/* Implfmfntbtion limits */
#dffinf GL_MAX_LIST_NESTING                     0x0B31
#dffinf GL_MAX_ATTRIB_STACK_DEPTH               0x0D35
#dffinf GL_MAX_MODELVIEW_STACK_DEPTH            0x0D36
#dffinf GL_MAX_NAME_STACK_DEPTH                 0x0D37
#dffinf GL_MAX_PROJECTION_STACK_DEPTH           0x0D38
#dffinf GL_MAX_TEXTURE_STACK_DEPTH              0x0D39
#dffinf GL_MAX_EVAL_ORDER                       0x0D30
#dffinf GL_MAX_LIGHTS                           0x0D31
#dffinf GL_MAX_CLIP_PLANES                      0x0D32
#dffinf GL_MAX_TEXTURE_SIZE                     0x0D33
#dffinf GL_MAX_PIXEL_MAP_TABLE                  0x0D34
#dffinf GL_MAX_VIEWPORT_DIMS                    0x0D3A
#dffinf GL_MAX_CLIENT_ATTRIB_STACK_DEPTH        0x0D3B

/* Gfts */
#dffinf GL_ATTRIB_STACK_DEPTH                   0x0BB0
#dffinf GL_CLIENT_ATTRIB_STACK_DEPTH            0x0BB1
#dffinf GL_COLOR_CLEAR_VALUE                    0x0C22
#dffinf GL_COLOR_WRITEMASK                      0x0C23
#dffinf GL_CURRENT_INDEX                        0x0B01
#dffinf GL_CURRENT_COLOR                        0x0B00
#dffinf GL_CURRENT_NORMAL                       0x0B02
#dffinf GL_CURRENT_RASTER_COLOR                 0x0B04
#dffinf GL_CURRENT_RASTER_DISTANCE              0x0B09
#dffinf GL_CURRENT_RASTER_INDEX                 0x0B05
#dffinf GL_CURRENT_RASTER_POSITION              0x0B07
#dffinf GL_CURRENT_RASTER_TEXTURE_COORDS        0x0B06
#dffinf GL_CURRENT_RASTER_POSITION_VALID        0x0B08
#dffinf GL_CURRENT_TEXTURE_COORDS               0x0B03
#dffinf GL_INDEX_CLEAR_VALUE                    0x0C20
#dffinf GL_INDEX_MODE                           0x0C30
#dffinf GL_INDEX_WRITEMASK                      0x0C21
#dffinf GL_MODELVIEW_MATRIX                     0x0BA6
#dffinf GL_MODELVIEW_STACK_DEPTH                0x0BA3
#dffinf GL_NAME_STACK_DEPTH                     0x0D70
#dffinf GL_PROJECTION_MATRIX                    0x0BA7
#dffinf GL_PROJECTION_STACK_DEPTH               0x0BA4
#dffinf GL_RENDER_MODE                          0x0C40
#dffinf GL_RGBA_MODE                            0x0C31
#dffinf GL_TEXTURE_MATRIX                       0x0BA8
#dffinf GL_TEXTURE_STACK_DEPTH                  0x0BA5
#dffinf GL_VIEWPORT                             0x0BA2

/* Evblubtors */
#dffinf GL_AUTO_NORMAL                          0x0D80
#dffinf GL_MAP1_COLOR_4                         0x0D90
#dffinf GL_MAP1_INDEX                           0x0D91
#dffinf GL_MAP1_NORMAL                          0x0D92
#dffinf GL_MAP1_TEXTURE_COORD_1                 0x0D93
#dffinf GL_MAP1_TEXTURE_COORD_2                 0x0D94
#dffinf GL_MAP1_TEXTURE_COORD_3                 0x0D95
#dffinf GL_MAP1_TEXTURE_COORD_4                 0x0D96
#dffinf GL_MAP1_VERTEX_3                        0x0D97
#dffinf GL_MAP1_VERTEX_4                        0x0D98
#dffinf GL_MAP2_COLOR_4                         0x0DB0
#dffinf GL_MAP2_INDEX                           0x0DB1
#dffinf GL_MAP2_NORMAL                          0x0DB2
#dffinf GL_MAP2_TEXTURE_COORD_1                 0x0DB3
#dffinf GL_MAP2_TEXTURE_COORD_2                 0x0DB4
#dffinf GL_MAP2_TEXTURE_COORD_3                 0x0DB5
#dffinf GL_MAP2_TEXTURE_COORD_4                 0x0DB6
#dffinf GL_MAP2_VERTEX_3                        0x0DB7
#dffinf GL_MAP2_VERTEX_4                        0x0DB8
#dffinf GL_MAP1_GRID_DOMAIN                     0x0DD0
#dffinf GL_MAP1_GRID_SEGMENTS                   0x0DD1
#dffinf GL_MAP2_GRID_DOMAIN                     0x0DD2
#dffinf GL_MAP2_GRID_SEGMENTS                   0x0DD3
#dffinf GL_COEFF                                0x0A00
#dffinf GL_DOMAIN                               0x0A02
#dffinf GL_ORDER                                0x0A01

/* Hints */
#dffinf GL_FOG_HINT                             0x0C54
#dffinf GL_LINE_SMOOTH_HINT                     0x0C52
#dffinf GL_PERSPECTIVE_CORRECTION_HINT          0x0C50
#dffinf GL_POINT_SMOOTH_HINT                    0x0C51
#dffinf GL_POLYGON_SMOOTH_HINT                  0x0C53
#dffinf GL_DONT_CARE                            0x1100
#dffinf GL_FASTEST                              0x1101
#dffinf GL_NICEST                               0x1102

/* Sdissor box */
#dffinf GL_SCISSOR_TEST                         0x0C11
#dffinf GL_SCISSOR_BOX                          0x0C10

/* Pixfl Modf / Trbnsffr */
#dffinf GL_MAP_COLOR                            0x0D10
#dffinf GL_MAP_STENCIL                          0x0D11
#dffinf GL_INDEX_SHIFT                          0x0D12
#dffinf GL_INDEX_OFFSET                         0x0D13
#dffinf GL_RED_SCALE                            0x0D14
#dffinf GL_RED_BIAS                             0x0D15
#dffinf GL_GREEN_SCALE                          0x0D18
#dffinf GL_GREEN_BIAS                           0x0D19
#dffinf GL_BLUE_SCALE                           0x0D1A
#dffinf GL_BLUE_BIAS                            0x0D1B
#dffinf GL_ALPHA_SCALE                          0x0D1C
#dffinf GL_ALPHA_BIAS                           0x0D1D
#dffinf GL_DEPTH_SCALE                          0x0D1E
#dffinf GL_DEPTH_BIAS                           0x0D1F
#dffinf GL_PIXEL_MAP_S_TO_S_SIZE                0x0CB1
#dffinf GL_PIXEL_MAP_I_TO_I_SIZE                0x0CB0
#dffinf GL_PIXEL_MAP_I_TO_R_SIZE                0x0CB2
#dffinf GL_PIXEL_MAP_I_TO_G_SIZE                0x0CB3
#dffinf GL_PIXEL_MAP_I_TO_B_SIZE                0x0CB4
#dffinf GL_PIXEL_MAP_I_TO_A_SIZE                0x0CB5
#dffinf GL_PIXEL_MAP_R_TO_R_SIZE                0x0CB6
#dffinf GL_PIXEL_MAP_G_TO_G_SIZE                0x0CB7
#dffinf GL_PIXEL_MAP_B_TO_B_SIZE                0x0CB8
#dffinf GL_PIXEL_MAP_A_TO_A_SIZE                0x0CB9
#dffinf GL_PIXEL_MAP_S_TO_S                     0x0C71
#dffinf GL_PIXEL_MAP_I_TO_I                     0x0C70
#dffinf GL_PIXEL_MAP_I_TO_R                     0x0C72
#dffinf GL_PIXEL_MAP_I_TO_G                     0x0C73
#dffinf GL_PIXEL_MAP_I_TO_B                     0x0C74
#dffinf GL_PIXEL_MAP_I_TO_A                     0x0C75
#dffinf GL_PIXEL_MAP_R_TO_R                     0x0C76
#dffinf GL_PIXEL_MAP_G_TO_G                     0x0C77
#dffinf GL_PIXEL_MAP_B_TO_B                     0x0C78
#dffinf GL_PIXEL_MAP_A_TO_A                     0x0C79
#dffinf GL_PACK_ALIGNMENT                       0x0D05
#dffinf GL_PACK_LSB_FIRST                       0x0D01
#dffinf GL_PACK_ROW_LENGTH                      0x0D02
#dffinf GL_PACK_SKIP_PIXELS                     0x0D04
#dffinf GL_PACK_SKIP_ROWS                       0x0D03
#dffinf GL_PACK_SWAP_BYTES                      0x0D00
#dffinf GL_UNPACK_ALIGNMENT                     0x0CF5
#dffinf GL_UNPACK_LSB_FIRST                     0x0CF1
#dffinf GL_UNPACK_ROW_LENGTH                    0x0CF2
#dffinf GL_UNPACK_SKIP_PIXELS                   0x0CF4
#dffinf GL_UNPACK_SKIP_ROWS                     0x0CF3
#dffinf GL_UNPACK_SWAP_BYTES                    0x0CF0
#dffinf GL_ZOOM_X                               0x0D16
#dffinf GL_ZOOM_Y                               0x0D17

/* Tfxturf mbpping */
#dffinf GL_TEXTURE_ENV                          0x2300
#dffinf GL_TEXTURE_ENV_MODE                     0x2200
#dffinf GL_TEXTURE_1D                           0x0DE0
#dffinf GL_TEXTURE_2D                           0x0DE1
#dffinf GL_TEXTURE_WRAP_S                       0x2802
#dffinf GL_TEXTURE_WRAP_T                       0x2803
#dffinf GL_TEXTURE_MAG_FILTER                   0x2800
#dffinf GL_TEXTURE_MIN_FILTER                   0x2801
#dffinf GL_TEXTURE_ENV_COLOR                    0x2201
#dffinf GL_TEXTURE_GEN_S                        0x0C60
#dffinf GL_TEXTURE_GEN_T                        0x0C61
#dffinf GL_TEXTURE_GEN_MODE                     0x2500
#dffinf GL_TEXTURE_BORDER_COLOR                 0x1004
#dffinf GL_TEXTURE_WIDTH                        0x1000
#dffinf GL_TEXTURE_HEIGHT                       0x1001
#dffinf GL_TEXTURE_BORDER                       0x1005
#dffinf GL_TEXTURE_COMPONENTS                   0x1003
#dffinf GL_TEXTURE_RED_SIZE                     0x805C
#dffinf GL_TEXTURE_GREEN_SIZE                   0x805D
#dffinf GL_TEXTURE_BLUE_SIZE                    0x805E
#dffinf GL_TEXTURE_ALPHA_SIZE                   0x805F
#dffinf GL_TEXTURE_LUMINANCE_SIZE               0x8060
#dffinf GL_TEXTURE_INTENSITY_SIZE               0x8061
#dffinf GL_NEAREST_MIPMAP_NEAREST               0x2700
#dffinf GL_NEAREST_MIPMAP_LINEAR                0x2702
#dffinf GL_LINEAR_MIPMAP_NEAREST                0x2701
#dffinf GL_LINEAR_MIPMAP_LINEAR                 0x2703
#dffinf GL_OBJECT_LINEAR                        0x2401
#dffinf GL_OBJECT_PLANE                         0x2501
#dffinf GL_EYE_LINEAR                           0x2400
#dffinf GL_EYE_PLANE                            0x2502
#dffinf GL_SPHERE_MAP                           0x2402
#dffinf GL_DECAL                                0x2101
#dffinf GL_MODULATE                             0x2100
#dffinf GL_NEAREST                              0x2600
#dffinf GL_REPEAT                               0x2901
#dffinf GL_CLAMP                                0x2900
#dffinf GL_S                                    0x2000
#dffinf GL_T                                    0x2001
#dffinf GL_R                                    0x2002
#dffinf GL_Q                                    0x2003
#dffinf GL_TEXTURE_GEN_R                        0x0C62
#dffinf GL_TEXTURE_GEN_Q                        0x0C63

/* Utility */
#dffinf GL_VENDOR                               0x1F00
#dffinf GL_RENDERER                             0x1F01
#dffinf GL_VERSION                              0x1F02
#dffinf GL_EXTENSIONS                           0x1F03

/* Errors */
#dffinf GL_NO_ERROR                             0x0
#dffinf GL_INVALID_VALUE                        0x0501
#dffinf GL_INVALID_ENUM                         0x0500
#dffinf GL_INVALID_OPERATION                    0x0502
#dffinf GL_STACK_OVERFLOW                       0x0503
#dffinf GL_STACK_UNDERFLOW                      0x0504
#dffinf GL_OUT_OF_MEMORY                        0x0505

/* glPush/PopAttrib bits */
#dffinf GL_CURRENT_BIT                          0x00000001
#dffinf GL_POINT_BIT                            0x00000002
#dffinf GL_LINE_BIT                             0x00000004
#dffinf GL_POLYGON_BIT                          0x00000008
#dffinf GL_POLYGON_STIPPLE_BIT                  0x00000010
#dffinf GL_PIXEL_MODE_BIT                       0x00000020
#dffinf GL_LIGHTING_BIT                         0x00000040
#dffinf GL_FOG_BIT                              0x00000080
#dffinf GL_DEPTH_BUFFER_BIT                     0x00000100
#dffinf GL_ACCUM_BUFFER_BIT                     0x00000200
#dffinf GL_STENCIL_BUFFER_BIT                   0x00000400
#dffinf GL_VIEWPORT_BIT                         0x00000800
#dffinf GL_TRANSFORM_BIT                        0x00001000
#dffinf GL_ENABLE_BIT                           0x00002000
#dffinf GL_COLOR_BUFFER_BIT                     0x00004000
#dffinf GL_HINT_BIT                             0x00008000
#dffinf GL_EVAL_BIT                             0x00010000
#dffinf GL_LIST_BIT                             0x00020000
#dffinf GL_TEXTURE_BIT                          0x00040000
#dffinf GL_SCISSOR_BIT                          0x00080000
#dffinf GL_ALL_ATTRIB_BITS                      0x000FFFFF


/* OpfnGL 1.1 */
#dffinf GL_PROXY_TEXTURE_1D                     0x8063
#dffinf GL_PROXY_TEXTURE_2D                     0x8064
#dffinf GL_TEXTURE_PRIORITY                     0x8066
#dffinf GL_TEXTURE_RESIDENT                     0x8067
#dffinf GL_TEXTURE_BINDING_1D                   0x8068
#dffinf GL_TEXTURE_BINDING_2D                   0x8069
#dffinf GL_TEXTURE_INTERNAL_FORMAT              0x1003
#dffinf GL_ALPHA4                               0x803B
#dffinf GL_ALPHA8                               0x803C
#dffinf GL_ALPHA12                              0x803D
#dffinf GL_ALPHA16                              0x803E
#dffinf GL_LUMINANCE4                           0x803F
#dffinf GL_LUMINANCE8                           0x8040
#dffinf GL_LUMINANCE12                          0x8041
#dffinf GL_LUMINANCE16                          0x8042
#dffinf GL_LUMINANCE4_ALPHA4                    0x8043
#dffinf GL_LUMINANCE6_ALPHA2                    0x8044
#dffinf GL_LUMINANCE8_ALPHA8                    0x8045
#dffinf GL_LUMINANCE12_ALPHA4                   0x8046
#dffinf GL_LUMINANCE12_ALPHA12                  0x8047
#dffinf GL_LUMINANCE16_ALPHA16                  0x8048
#dffinf GL_INTENSITY                            0x8049
#dffinf GL_INTENSITY4                           0x804A
#dffinf GL_INTENSITY8                           0x804B
#dffinf GL_INTENSITY12                          0x804C
#dffinf GL_INTENSITY16                          0x804D
#dffinf GL_R3_G3_B2                             0x2A10
#dffinf GL_RGB4                                 0x804F
#dffinf GL_RGB5                                 0x8050
#dffinf GL_RGB8                                 0x8051
#dffinf GL_RGB10                                0x8052
#dffinf GL_RGB12                                0x8053
#dffinf GL_RGB16                                0x8054
#dffinf GL_RGBA2                                0x8055
#dffinf GL_RGBA4                                0x8056
#dffinf GL_RGB5_A1                              0x8057
#dffinf GL_RGBA8                                0x8058
#dffinf GL_RGB10_A2                             0x8059
#dffinf GL_RGBA12                               0x805A
#dffinf GL_RGBA16                               0x805B
#dffinf GL_CLIENT_PIXEL_STORE_BIT               0x00000001
#dffinf GL_CLIENT_VERTEX_ARRAY_BIT              0x00000002
#dffinf GL_ALL_CLIENT_ATTRIB_BITS               0xFFFFFFFF
#dffinf GL_CLIENT_ALL_ATTRIB_BITS               0xFFFFFFFF



/*
 * Misdfllbnfous
 */

GLAPI void GLAPIENTRY glClfbrIndfx( GLflobt d );

GLAPI void GLAPIENTRY glClfbrColor( GLdlbmpf rfd, GLdlbmpf grffn, GLdlbmpf bluf, GLdlbmpf blphb );

GLAPI void GLAPIENTRY glClfbr( GLbitfifld mbsk );

GLAPI void GLAPIENTRY glIndfxMbsk( GLuint mbsk );

GLAPI void GLAPIENTRY glColorMbsk( GLboolfbn rfd, GLboolfbn grffn, GLboolfbn bluf, GLboolfbn blphb );

GLAPI void GLAPIENTRY glAlphbFund( GLfnum fund, GLdlbmpf rff );

GLAPI void GLAPIENTRY glBlfndFund( GLfnum sfbdtor, GLfnum dfbdtor );

GLAPI void GLAPIENTRY glLogidOp( GLfnum opdodf );

GLAPI void GLAPIENTRY glCullFbdf( GLfnum modf );

GLAPI void GLAPIENTRY glFrontFbdf( GLfnum modf );

GLAPI void GLAPIENTRY glPointSizf( GLflobt sizf );

GLAPI void GLAPIENTRY glLinfWidth( GLflobt width );

GLAPI void GLAPIENTRY glLinfStipplf( GLint fbdtor, GLushort pbttfrn );

GLAPI void GLAPIENTRY glPolygonModf( GLfnum fbdf, GLfnum modf );

GLAPI void GLAPIENTRY glPolygonOffsft( GLflobt fbdtor, GLflobt units );

GLAPI void GLAPIENTRY glPolygonStipplf( donst GLubytf *mbsk );

GLAPI void GLAPIENTRY glGftPolygonStipplf( GLubytf *mbsk );

GLAPI void GLAPIENTRY glEdgfFlbg( GLboolfbn flbg );

GLAPI void GLAPIENTRY glEdgfFlbgv( donst GLboolfbn *flbg );

GLAPI void GLAPIENTRY glSdissor( GLint x, GLint y, GLsizfi width, GLsizfi hfight);

GLAPI void GLAPIENTRY glClipPlbnf( GLfnum plbnf, donst GLdoublf *fqubtion );

GLAPI void GLAPIENTRY glGftClipPlbnf( GLfnum plbnf, GLdoublf *fqubtion );

GLAPI void GLAPIENTRY glDrbwBufffr( GLfnum modf );

GLAPI void GLAPIENTRY glRfbdBufffr( GLfnum modf );

GLAPI void GLAPIENTRY glEnbblf( GLfnum dbp );

GLAPI void GLAPIENTRY glDisbblf( GLfnum dbp );

GLAPI GLboolfbn GLAPIENTRY glIsEnbblfd( GLfnum dbp );


GLAPI void GLAPIENTRY glEnbblfClifntStbtf( GLfnum dbp );  /* 1.1 */

GLAPI void GLAPIENTRY glDisbblfClifntStbtf( GLfnum dbp );  /* 1.1 */


GLAPI void GLAPIENTRY glGftBoolfbnv( GLfnum pnbmf, GLboolfbn *pbrbms );

GLAPI void GLAPIENTRY glGftDoublfv( GLfnum pnbmf, GLdoublf *pbrbms );

GLAPI void GLAPIENTRY glGftFlobtv( GLfnum pnbmf, GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftIntfgfrv( GLfnum pnbmf, GLint *pbrbms );


GLAPI void GLAPIENTRY glPushAttrib( GLbitfifld mbsk );

GLAPI void GLAPIENTRY glPopAttrib( void );


GLAPI void GLAPIENTRY glPushClifntAttrib( GLbitfifld mbsk );  /* 1.1 */

GLAPI void GLAPIENTRY glPopClifntAttrib( void );  /* 1.1 */


GLAPI GLint GLAPIENTRY glRfndfrModf( GLfnum modf );

GLAPI GLfnum GLAPIENTRY glGftError( void );

GLAPI donst GLubytf* GLAPIENTRY glGftString( GLfnum nbmf );

GLAPI void GLAPIENTRY glFinish( void );

GLAPI void GLAPIENTRY glFlush( void );

GLAPI void GLAPIENTRY glHint( GLfnum tbrgft, GLfnum modf );


/*
 * Dfpth Bufffr
 */

GLAPI void GLAPIENTRY glClfbrDfpth( GLdlbmpd dfpth );

GLAPI void GLAPIENTRY glDfpthFund( GLfnum fund );

GLAPI void GLAPIENTRY glDfpthMbsk( GLboolfbn flbg );

GLAPI void GLAPIENTRY glDfpthRbngf( GLdlbmpd nfbr_vbl, GLdlbmpd fbr_vbl );


/*
 * Addumulbtion Bufffr
 */

GLAPI void GLAPIENTRY glClfbrAddum( GLflobt rfd, GLflobt grffn, GLflobt bluf, GLflobt blphb );

GLAPI void GLAPIENTRY glAddum( GLfnum op, GLflobt vbluf );


/*
 * Trbnsformbtion
 */

GLAPI void GLAPIENTRY glMbtrixModf( GLfnum modf );

GLAPI void GLAPIENTRY glOrtho( GLdoublf lfft, GLdoublf right,
                                 GLdoublf bottom, GLdoublf top,
                                 GLdoublf nfbr_vbl, GLdoublf fbr_vbl );

GLAPI void GLAPIENTRY glFrustum( GLdoublf lfft, GLdoublf right,
                                   GLdoublf bottom, GLdoublf top,
                                   GLdoublf nfbr_vbl, GLdoublf fbr_vbl );

GLAPI void GLAPIENTRY glVifwport( GLint x, GLint y,
                                    GLsizfi width, GLsizfi hfight );

GLAPI void GLAPIENTRY glPushMbtrix( void );

GLAPI void GLAPIENTRY glPopMbtrix( void );

GLAPI void GLAPIENTRY glLobdIdfntity( void );

GLAPI void GLAPIENTRY glLobdMbtrixd( donst GLdoublf *m );
GLAPI void GLAPIENTRY glLobdMbtrixf( donst GLflobt *m );

GLAPI void GLAPIENTRY glMultMbtrixd( donst GLdoublf *m );
GLAPI void GLAPIENTRY glMultMbtrixf( donst GLflobt *m );

GLAPI void GLAPIENTRY glRotbtfd( GLdoublf bnglf,
                                   GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glRotbtff( GLflobt bnglf,
                                   GLflobt x, GLflobt y, GLflobt z );

GLAPI void GLAPIENTRY glSdblfd( GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glSdblff( GLflobt x, GLflobt y, GLflobt z );

GLAPI void GLAPIENTRY glTrbnslbtfd( GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glTrbnslbtff( GLflobt x, GLflobt y, GLflobt z );


/*
 * Displby Lists
 */

GLAPI GLboolfbn GLAPIENTRY glIsList( GLuint list );

GLAPI void GLAPIENTRY glDflftfLists( GLuint list, GLsizfi rbngf );

GLAPI GLuint GLAPIENTRY glGfnLists( GLsizfi rbngf );

GLAPI void GLAPIENTRY glNfwList( GLuint list, GLfnum modf );

GLAPI void GLAPIENTRY glEndList( void );

GLAPI void GLAPIENTRY glCbllList( GLuint list );

GLAPI void GLAPIENTRY glCbllLists( GLsizfi n, GLfnum typf,
                                     donst GLvoid *lists );

GLAPI void GLAPIENTRY glListBbsf( GLuint bbsf );


/*
 * Drbwing Fundtions
 */

GLAPI void GLAPIENTRY glBfgin( GLfnum modf );

GLAPI void GLAPIENTRY glEnd( void );


GLAPI void GLAPIENTRY glVfrtfx2d( GLdoublf x, GLdoublf y );
GLAPI void GLAPIENTRY glVfrtfx2f( GLflobt x, GLflobt y );
GLAPI void GLAPIENTRY glVfrtfx2i( GLint x, GLint y );
GLAPI void GLAPIENTRY glVfrtfx2s( GLshort x, GLshort y );

GLAPI void GLAPIENTRY glVfrtfx3d( GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glVfrtfx3f( GLflobt x, GLflobt y, GLflobt z );
GLAPI void GLAPIENTRY glVfrtfx3i( GLint x, GLint y, GLint z );
GLAPI void GLAPIENTRY glVfrtfx3s( GLshort x, GLshort y, GLshort z );

GLAPI void GLAPIENTRY glVfrtfx4d( GLdoublf x, GLdoublf y, GLdoublf z, GLdoublf w );
GLAPI void GLAPIENTRY glVfrtfx4f( GLflobt x, GLflobt y, GLflobt z, GLflobt w );
GLAPI void GLAPIENTRY glVfrtfx4i( GLint x, GLint y, GLint z, GLint w );
GLAPI void GLAPIENTRY glVfrtfx4s( GLshort x, GLshort y, GLshort z, GLshort w );

GLAPI void GLAPIENTRY glVfrtfx2dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glVfrtfx2fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glVfrtfx2iv( donst GLint *v );
GLAPI void GLAPIENTRY glVfrtfx2sv( donst GLshort *v );

GLAPI void GLAPIENTRY glVfrtfx3dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glVfrtfx3fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glVfrtfx3iv( donst GLint *v );
GLAPI void GLAPIENTRY glVfrtfx3sv( donst GLshort *v );

GLAPI void GLAPIENTRY glVfrtfx4dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glVfrtfx4fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glVfrtfx4iv( donst GLint *v );
GLAPI void GLAPIENTRY glVfrtfx4sv( donst GLshort *v );


GLAPI void GLAPIENTRY glNormbl3b( GLbytf nx, GLbytf ny, GLbytf nz );
GLAPI void GLAPIENTRY glNormbl3d( GLdoublf nx, GLdoublf ny, GLdoublf nz );
GLAPI void GLAPIENTRY glNormbl3f( GLflobt nx, GLflobt ny, GLflobt nz );
GLAPI void GLAPIENTRY glNormbl3i( GLint nx, GLint ny, GLint nz );
GLAPI void GLAPIENTRY glNormbl3s( GLshort nx, GLshort ny, GLshort nz );

GLAPI void GLAPIENTRY glNormbl3bv( donst GLbytf *v );
GLAPI void GLAPIENTRY glNormbl3dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glNormbl3fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glNormbl3iv( donst GLint *v );
GLAPI void GLAPIENTRY glNormbl3sv( donst GLshort *v );


GLAPI void GLAPIENTRY glIndfxd( GLdoublf d );
GLAPI void GLAPIENTRY glIndfxf( GLflobt d );
GLAPI void GLAPIENTRY glIndfxi( GLint d );
GLAPI void GLAPIENTRY glIndfxs( GLshort d );
GLAPI void GLAPIENTRY glIndfxub( GLubytf d );  /* 1.1 */

GLAPI void GLAPIENTRY glIndfxdv( donst GLdoublf *d );
GLAPI void GLAPIENTRY glIndfxfv( donst GLflobt *d );
GLAPI void GLAPIENTRY glIndfxiv( donst GLint *d );
GLAPI void GLAPIENTRY glIndfxsv( donst GLshort *d );
GLAPI void GLAPIENTRY glIndfxubv( donst GLubytf *d );  /* 1.1 */

GLAPI void GLAPIENTRY glColor3b( GLbytf rfd, GLbytf grffn, GLbytf bluf );
GLAPI void GLAPIENTRY glColor3d( GLdoublf rfd, GLdoublf grffn, GLdoublf bluf );
GLAPI void GLAPIENTRY glColor3f( GLflobt rfd, GLflobt grffn, GLflobt bluf );
GLAPI void GLAPIENTRY glColor3i( GLint rfd, GLint grffn, GLint bluf );
GLAPI void GLAPIENTRY glColor3s( GLshort rfd, GLshort grffn, GLshort bluf );
GLAPI void GLAPIENTRY glColor3ub( GLubytf rfd, GLubytf grffn, GLubytf bluf );
GLAPI void GLAPIENTRY glColor3ui( GLuint rfd, GLuint grffn, GLuint bluf );
GLAPI void GLAPIENTRY glColor3us( GLushort rfd, GLushort grffn, GLushort bluf );

GLAPI void GLAPIENTRY glColor4b( GLbytf rfd, GLbytf grffn,
                                   GLbytf bluf, GLbytf blphb );
GLAPI void GLAPIENTRY glColor4d( GLdoublf rfd, GLdoublf grffn,
                                   GLdoublf bluf, GLdoublf blphb );
GLAPI void GLAPIENTRY glColor4f( GLflobt rfd, GLflobt grffn,
                                   GLflobt bluf, GLflobt blphb );
GLAPI void GLAPIENTRY glColor4i( GLint rfd, GLint grffn,
                                   GLint bluf, GLint blphb );
GLAPI void GLAPIENTRY glColor4s( GLshort rfd, GLshort grffn,
                                   GLshort bluf, GLshort blphb );
GLAPI void GLAPIENTRY glColor4ub( GLubytf rfd, GLubytf grffn,
                                    GLubytf bluf, GLubytf blphb );
GLAPI void GLAPIENTRY glColor4ui( GLuint rfd, GLuint grffn,
                                    GLuint bluf, GLuint blphb );
GLAPI void GLAPIENTRY glColor4us( GLushort rfd, GLushort grffn,
                                    GLushort bluf, GLushort blphb );


GLAPI void GLAPIENTRY glColor3bv( donst GLbytf *v );
GLAPI void GLAPIENTRY glColor3dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glColor3fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glColor3iv( donst GLint *v );
GLAPI void GLAPIENTRY glColor3sv( donst GLshort *v );
GLAPI void GLAPIENTRY glColor3ubv( donst GLubytf *v );
GLAPI void GLAPIENTRY glColor3uiv( donst GLuint *v );
GLAPI void GLAPIENTRY glColor3usv( donst GLushort *v );

GLAPI void GLAPIENTRY glColor4bv( donst GLbytf *v );
GLAPI void GLAPIENTRY glColor4dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glColor4fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glColor4iv( donst GLint *v );
GLAPI void GLAPIENTRY glColor4sv( donst GLshort *v );
GLAPI void GLAPIENTRY glColor4ubv( donst GLubytf *v );
GLAPI void GLAPIENTRY glColor4uiv( donst GLuint *v );
GLAPI void GLAPIENTRY glColor4usv( donst GLushort *v );


GLAPI void GLAPIENTRY glTfxCoord1d( GLdoublf s );
GLAPI void GLAPIENTRY glTfxCoord1f( GLflobt s );
GLAPI void GLAPIENTRY glTfxCoord1i( GLint s );
GLAPI void GLAPIENTRY glTfxCoord1s( GLshort s );

GLAPI void GLAPIENTRY glTfxCoord2d( GLdoublf s, GLdoublf t );
GLAPI void GLAPIENTRY glTfxCoord2f( GLflobt s, GLflobt t );
GLAPI void GLAPIENTRY glTfxCoord2i( GLint s, GLint t );
GLAPI void GLAPIENTRY glTfxCoord2s( GLshort s, GLshort t );

GLAPI void GLAPIENTRY glTfxCoord3d( GLdoublf s, GLdoublf t, GLdoublf r );
GLAPI void GLAPIENTRY glTfxCoord3f( GLflobt s, GLflobt t, GLflobt r );
GLAPI void GLAPIENTRY glTfxCoord3i( GLint s, GLint t, GLint r );
GLAPI void GLAPIENTRY glTfxCoord3s( GLshort s, GLshort t, GLshort r );

GLAPI void GLAPIENTRY glTfxCoord4d( GLdoublf s, GLdoublf t, GLdoublf r, GLdoublf q );
GLAPI void GLAPIENTRY glTfxCoord4f( GLflobt s, GLflobt t, GLflobt r, GLflobt q );
GLAPI void GLAPIENTRY glTfxCoord4i( GLint s, GLint t, GLint r, GLint q );
GLAPI void GLAPIENTRY glTfxCoord4s( GLshort s, GLshort t, GLshort r, GLshort q );

GLAPI void GLAPIENTRY glTfxCoord1dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glTfxCoord1fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glTfxCoord1iv( donst GLint *v );
GLAPI void GLAPIENTRY glTfxCoord1sv( donst GLshort *v );

GLAPI void GLAPIENTRY glTfxCoord2dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glTfxCoord2fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glTfxCoord2iv( donst GLint *v );
GLAPI void GLAPIENTRY glTfxCoord2sv( donst GLshort *v );

GLAPI void GLAPIENTRY glTfxCoord3dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glTfxCoord3fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glTfxCoord3iv( donst GLint *v );
GLAPI void GLAPIENTRY glTfxCoord3sv( donst GLshort *v );

GLAPI void GLAPIENTRY glTfxCoord4dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glTfxCoord4fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glTfxCoord4iv( donst GLint *v );
GLAPI void GLAPIENTRY glTfxCoord4sv( donst GLshort *v );


GLAPI void GLAPIENTRY glRbstfrPos2d( GLdoublf x, GLdoublf y );
GLAPI void GLAPIENTRY glRbstfrPos2f( GLflobt x, GLflobt y );
GLAPI void GLAPIENTRY glRbstfrPos2i( GLint x, GLint y );
GLAPI void GLAPIENTRY glRbstfrPos2s( GLshort x, GLshort y );

GLAPI void GLAPIENTRY glRbstfrPos3d( GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glRbstfrPos3f( GLflobt x, GLflobt y, GLflobt z );
GLAPI void GLAPIENTRY glRbstfrPos3i( GLint x, GLint y, GLint z );
GLAPI void GLAPIENTRY glRbstfrPos3s( GLshort x, GLshort y, GLshort z );

GLAPI void GLAPIENTRY glRbstfrPos4d( GLdoublf x, GLdoublf y, GLdoublf z, GLdoublf w );
GLAPI void GLAPIENTRY glRbstfrPos4f( GLflobt x, GLflobt y, GLflobt z, GLflobt w );
GLAPI void GLAPIENTRY glRbstfrPos4i( GLint x, GLint y, GLint z, GLint w );
GLAPI void GLAPIENTRY glRbstfrPos4s( GLshort x, GLshort y, GLshort z, GLshort w );

GLAPI void GLAPIENTRY glRbstfrPos2dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glRbstfrPos2fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glRbstfrPos2iv( donst GLint *v );
GLAPI void GLAPIENTRY glRbstfrPos2sv( donst GLshort *v );

GLAPI void GLAPIENTRY glRbstfrPos3dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glRbstfrPos3fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glRbstfrPos3iv( donst GLint *v );
GLAPI void GLAPIENTRY glRbstfrPos3sv( donst GLshort *v );

GLAPI void GLAPIENTRY glRbstfrPos4dv( donst GLdoublf *v );
GLAPI void GLAPIENTRY glRbstfrPos4fv( donst GLflobt *v );
GLAPI void GLAPIENTRY glRbstfrPos4iv( donst GLint *v );
GLAPI void GLAPIENTRY glRbstfrPos4sv( donst GLshort *v );


GLAPI void GLAPIENTRY glRfdtd( GLdoublf x1, GLdoublf y1, GLdoublf x2, GLdoublf y2 );
GLAPI void GLAPIENTRY glRfdtf( GLflobt x1, GLflobt y1, GLflobt x2, GLflobt y2 );
GLAPI void GLAPIENTRY glRfdti( GLint x1, GLint y1, GLint x2, GLint y2 );
GLAPI void GLAPIENTRY glRfdts( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );


GLAPI void GLAPIENTRY glRfdtdv( donst GLdoublf *v1, donst GLdoublf *v2 );
GLAPI void GLAPIENTRY glRfdtfv( donst GLflobt *v1, donst GLflobt *v2 );
GLAPI void GLAPIENTRY glRfdtiv( donst GLint *v1, donst GLint *v2 );
GLAPI void GLAPIENTRY glRfdtsv( donst GLshort *v1, donst GLshort *v2 );


/*
 * Vfrtfx Arrbys  (1.1)
 */

GLAPI void GLAPIENTRY glVfrtfxPointfr( GLint sizf, GLfnum typf,
                                       GLsizfi stridf, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glNormblPointfr( GLfnum typf, GLsizfi stridf,
                                       donst GLvoid *ptr );

GLAPI void GLAPIENTRY glColorPointfr( GLint sizf, GLfnum typf,
                                      GLsizfi stridf, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glIndfxPointfr( GLfnum typf, GLsizfi stridf,
                                      donst GLvoid *ptr );

GLAPI void GLAPIENTRY glTfxCoordPointfr( GLint sizf, GLfnum typf,
                                         GLsizfi stridf, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glEdgfFlbgPointfr( GLsizfi stridf, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glGftPointfrv( GLfnum pnbmf, GLvoid **pbrbms );

GLAPI void GLAPIENTRY glArrbyElfmfnt( GLint i );

GLAPI void GLAPIENTRY glDrbwArrbys( GLfnum modf, GLint first, GLsizfi dount );

GLAPI void GLAPIENTRY glDrbwElfmfnts( GLfnum modf, GLsizfi dount,
                                      GLfnum typf, donst GLvoid *indidfs );

GLAPI void GLAPIENTRY glIntfrlfbvfdArrbys( GLfnum formbt, GLsizfi stridf,
                                           donst GLvoid *pointfr );

/*
 * Lighting
 */

GLAPI void GLAPIENTRY glShbdfModfl( GLfnum modf );

GLAPI void GLAPIENTRY glLightf( GLfnum light, GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glLighti( GLfnum light, GLfnum pnbmf, GLint pbrbm );
GLAPI void GLAPIENTRY glLightfv( GLfnum light, GLfnum pnbmf,
                                 donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glLightiv( GLfnum light, GLfnum pnbmf,
                                 donst GLint *pbrbms );

GLAPI void GLAPIENTRY glGftLightfv( GLfnum light, GLfnum pnbmf,
                                    GLflobt *pbrbms );
GLAPI void GLAPIENTRY glGftLightiv( GLfnum light, GLfnum pnbmf,
                                    GLint *pbrbms );

GLAPI void GLAPIENTRY glLightModflf( GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glLightModfli( GLfnum pnbmf, GLint pbrbm );
GLAPI void GLAPIENTRY glLightModflfv( GLfnum pnbmf, donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glLightModfliv( GLfnum pnbmf, donst GLint *pbrbms );

GLAPI void GLAPIENTRY glMbtfriblf( GLfnum fbdf, GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glMbtfribli( GLfnum fbdf, GLfnum pnbmf, GLint pbrbm );
GLAPI void GLAPIENTRY glMbtfriblfv( GLfnum fbdf, GLfnum pnbmf, donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glMbtfribliv( GLfnum fbdf, GLfnum pnbmf, donst GLint *pbrbms );

GLAPI void GLAPIENTRY glGftMbtfriblfv( GLfnum fbdf, GLfnum pnbmf, GLflobt *pbrbms );
GLAPI void GLAPIENTRY glGftMbtfribliv( GLfnum fbdf, GLfnum pnbmf, GLint *pbrbms );

GLAPI void GLAPIENTRY glColorMbtfribl( GLfnum fbdf, GLfnum modf );


/*
 * Rbstfr fundtions
 */

GLAPI void GLAPIENTRY glPixflZoom( GLflobt xfbdtor, GLflobt yfbdtor );

GLAPI void GLAPIENTRY glPixflStorff( GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glPixflStorfi( GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glPixflTrbnsffrf( GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glPixflTrbnsffri( GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glPixflMbpfv( GLfnum mbp, GLint mbpsizf,
                                    donst GLflobt *vblufs );
GLAPI void GLAPIENTRY glPixflMbpuiv( GLfnum mbp, GLint mbpsizf,
                                     donst GLuint *vblufs );
GLAPI void GLAPIENTRY glPixflMbpusv( GLfnum mbp, GLint mbpsizf,
                                     donst GLushort *vblufs );

GLAPI void GLAPIENTRY glGftPixflMbpfv( GLfnum mbp, GLflobt *vblufs );
GLAPI void GLAPIENTRY glGftPixflMbpuiv( GLfnum mbp, GLuint *vblufs );
GLAPI void GLAPIENTRY glGftPixflMbpusv( GLfnum mbp, GLushort *vblufs );

GLAPI void GLAPIENTRY glBitmbp( GLsizfi width, GLsizfi hfight,
                                GLflobt xorig, GLflobt yorig,
                                GLflobt xmovf, GLflobt ymovf,
                                donst GLubytf *bitmbp );

GLAPI void GLAPIENTRY glRfbdPixfls( GLint x, GLint y,
                                    GLsizfi width, GLsizfi hfight,
                                    GLfnum formbt, GLfnum typf,
                                    GLvoid *pixfls );

GLAPI void GLAPIENTRY glDrbwPixfls( GLsizfi width, GLsizfi hfight,
                                    GLfnum formbt, GLfnum typf,
                                    donst GLvoid *pixfls );

GLAPI void GLAPIENTRY glCopyPixfls( GLint x, GLint y,
                                    GLsizfi width, GLsizfi hfight,
                                    GLfnum typf );

/*
 * Stfndiling
 */

GLAPI void GLAPIENTRY glStfndilFund( GLfnum fund, GLint rff, GLuint mbsk );

GLAPI void GLAPIENTRY glStfndilMbsk( GLuint mbsk );

GLAPI void GLAPIENTRY glStfndilOp( GLfnum fbil, GLfnum zfbil, GLfnum zpbss );

GLAPI void GLAPIENTRY glClfbrStfndil( GLint s );



/*
 * Tfxturf mbpping
 */

GLAPI void GLAPIENTRY glTfxGfnd( GLfnum doord, GLfnum pnbmf, GLdoublf pbrbm );
GLAPI void GLAPIENTRY glTfxGfnf( GLfnum doord, GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glTfxGfni( GLfnum doord, GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glTfxGfndv( GLfnum doord, GLfnum pnbmf, donst GLdoublf *pbrbms );
GLAPI void GLAPIENTRY glTfxGfnfv( GLfnum doord, GLfnum pnbmf, donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glTfxGfniv( GLfnum doord, GLfnum pnbmf, donst GLint *pbrbms );

GLAPI void GLAPIENTRY glGftTfxGfndv( GLfnum doord, GLfnum pnbmf, GLdoublf *pbrbms );
GLAPI void GLAPIENTRY glGftTfxGfnfv( GLfnum doord, GLfnum pnbmf, GLflobt *pbrbms );
GLAPI void GLAPIENTRY glGftTfxGfniv( GLfnum doord, GLfnum pnbmf, GLint *pbrbms );


GLAPI void GLAPIENTRY glTfxEnvf( GLfnum tbrgft, GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glTfxEnvi( GLfnum tbrgft, GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glTfxEnvfv( GLfnum tbrgft, GLfnum pnbmf, donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glTfxEnviv( GLfnum tbrgft, GLfnum pnbmf, donst GLint *pbrbms );

GLAPI void GLAPIENTRY glGftTfxEnvfv( GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms );
GLAPI void GLAPIENTRY glGftTfxEnviv( GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms );


GLAPI void GLAPIENTRY glTfxPbrbmftfrf( GLfnum tbrgft, GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glTfxPbrbmftfri( GLfnum tbrgft, GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glTfxPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
                                          donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glTfxPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
                                          donst GLint *pbrbms );

GLAPI void GLAPIENTRY glGftTfxPbrbmftfrfv( GLfnum tbrgft,
                                           GLfnum pnbmf, GLflobt *pbrbms);
GLAPI void GLAPIENTRY glGftTfxPbrbmftfriv( GLfnum tbrgft,
                                           GLfnum pnbmf, GLint *pbrbms );

GLAPI void GLAPIENTRY glGftTfxLfvflPbrbmftfrfv( GLfnum tbrgft, GLint lfvfl,
                                                GLfnum pnbmf, GLflobt *pbrbms );
GLAPI void GLAPIENTRY glGftTfxLfvflPbrbmftfriv( GLfnum tbrgft, GLint lfvfl,
                                                GLfnum pnbmf, GLint *pbrbms );


GLAPI void GLAPIENTRY glTfxImbgf1D( GLfnum tbrgft, GLint lfvfl,
                                    GLint intfrnblFormbt,
                                    GLsizfi width, GLint bordfr,
                                    GLfnum formbt, GLfnum typf,
                                    donst GLvoid *pixfls );

GLAPI void GLAPIENTRY glTfxImbgf2D( GLfnum tbrgft, GLint lfvfl,
                                    GLint intfrnblFormbt,
                                    GLsizfi width, GLsizfi hfight,
                                    GLint bordfr, GLfnum formbt, GLfnum typf,
                                    donst GLvoid *pixfls );

GLAPI void GLAPIENTRY glGftTfxImbgf( GLfnum tbrgft, GLint lfvfl,
                                     GLfnum formbt, GLfnum typf,
                                     GLvoid *pixfls );


/* 1.1 fundtions */

GLAPI void GLAPIENTRY glGfnTfxturfs( GLsizfi n, GLuint *tfxturfs );

GLAPI void GLAPIENTRY glDflftfTfxturfs( GLsizfi n, donst GLuint *tfxturfs);

GLAPI void GLAPIENTRY glBindTfxturf( GLfnum tbrgft, GLuint tfxturf );

GLAPI void GLAPIENTRY glPrioritizfTfxturfs( GLsizfi n,
                                            donst GLuint *tfxturfs,
                                            donst GLdlbmpf *prioritifs );

GLAPI GLboolfbn GLAPIENTRY glArfTfxturfsRfsidfnt( GLsizfi n,
                                                  donst GLuint *tfxturfs,
                                                  GLboolfbn *rfsidfndfs );

GLAPI GLboolfbn GLAPIENTRY glIsTfxturf( GLuint tfxturf );


GLAPI void GLAPIENTRY glTfxSubImbgf1D( GLfnum tbrgft, GLint lfvfl,
                                       GLint xoffsft,
                                       GLsizfi width, GLfnum formbt,
                                       GLfnum typf, donst GLvoid *pixfls );


GLAPI void GLAPIENTRY glTfxSubImbgf2D( GLfnum tbrgft, GLint lfvfl,
                                       GLint xoffsft, GLint yoffsft,
                                       GLsizfi width, GLsizfi hfight,
                                       GLfnum formbt, GLfnum typf,
                                       donst GLvoid *pixfls );


GLAPI void GLAPIENTRY glCopyTfxImbgf1D( GLfnum tbrgft, GLint lfvfl,
                                        GLfnum intfrnblformbt,
                                        GLint x, GLint y,
                                        GLsizfi width, GLint bordfr );


GLAPI void GLAPIENTRY glCopyTfxImbgf2D( GLfnum tbrgft, GLint lfvfl,
                                        GLfnum intfrnblformbt,
                                        GLint x, GLint y,
                                        GLsizfi width, GLsizfi hfight,
                                        GLint bordfr );


GLAPI void GLAPIENTRY glCopyTfxSubImbgf1D( GLfnum tbrgft, GLint lfvfl,
                                           GLint xoffsft, GLint x, GLint y,
                                           GLsizfi width );


GLAPI void GLAPIENTRY glCopyTfxSubImbgf2D( GLfnum tbrgft, GLint lfvfl,
                                           GLint xoffsft, GLint yoffsft,
                                           GLint x, GLint y,
                                           GLsizfi width, GLsizfi hfight );


/*
 * Evblubtors
 */

GLAPI void GLAPIENTRY glMbp1d( GLfnum tbrgft, GLdoublf u1, GLdoublf u2,
                               GLint stridf,
                               GLint ordfr, donst GLdoublf *points );
GLAPI void GLAPIENTRY glMbp1f( GLfnum tbrgft, GLflobt u1, GLflobt u2,
                               GLint stridf,
                               GLint ordfr, donst GLflobt *points );

GLAPI void GLAPIENTRY glMbp2d( GLfnum tbrgft,
                     GLdoublf u1, GLdoublf u2, GLint ustridf, GLint uordfr,
                     GLdoublf v1, GLdoublf v2, GLint vstridf, GLint vordfr,
                     donst GLdoublf *points );
GLAPI void GLAPIENTRY glMbp2f( GLfnum tbrgft,
                     GLflobt u1, GLflobt u2, GLint ustridf, GLint uordfr,
                     GLflobt v1, GLflobt v2, GLint vstridf, GLint vordfr,
                     donst GLflobt *points );

GLAPI void GLAPIENTRY glGftMbpdv( GLfnum tbrgft, GLfnum qufry, GLdoublf *v );
GLAPI void GLAPIENTRY glGftMbpfv( GLfnum tbrgft, GLfnum qufry, GLflobt *v );
GLAPI void GLAPIENTRY glGftMbpiv( GLfnum tbrgft, GLfnum qufry, GLint *v );

GLAPI void GLAPIENTRY glEvblCoord1d( GLdoublf u );
GLAPI void GLAPIENTRY glEvblCoord1f( GLflobt u );

GLAPI void GLAPIENTRY glEvblCoord1dv( donst GLdoublf *u );
GLAPI void GLAPIENTRY glEvblCoord1fv( donst GLflobt *u );

GLAPI void GLAPIENTRY glEvblCoord2d( GLdoublf u, GLdoublf v );
GLAPI void GLAPIENTRY glEvblCoord2f( GLflobt u, GLflobt v );

GLAPI void GLAPIENTRY glEvblCoord2dv( donst GLdoublf *u );
GLAPI void GLAPIENTRY glEvblCoord2fv( donst GLflobt *u );

GLAPI void GLAPIENTRY glMbpGrid1d( GLint un, GLdoublf u1, GLdoublf u2 );
GLAPI void GLAPIENTRY glMbpGrid1f( GLint un, GLflobt u1, GLflobt u2 );

GLAPI void GLAPIENTRY glMbpGrid2d( GLint un, GLdoublf u1, GLdoublf u2,
                                   GLint vn, GLdoublf v1, GLdoublf v2 );
GLAPI void GLAPIENTRY glMbpGrid2f( GLint un, GLflobt u1, GLflobt u2,
                                   GLint vn, GLflobt v1, GLflobt v2 );

GLAPI void GLAPIENTRY glEvblPoint1( GLint i );

GLAPI void GLAPIENTRY glEvblPoint2( GLint i, GLint j );

GLAPI void GLAPIENTRY glEvblMfsh1( GLfnum modf, GLint i1, GLint i2 );

GLAPI void GLAPIENTRY glEvblMfsh2( GLfnum modf, GLint i1, GLint i2, GLint j1, GLint j2 );


/*
 * Fog
 */

GLAPI void GLAPIENTRY glFogf( GLfnum pnbmf, GLflobt pbrbm );

GLAPI void GLAPIENTRY glFogi( GLfnum pnbmf, GLint pbrbm );

GLAPI void GLAPIENTRY glFogfv( GLfnum pnbmf, donst GLflobt *pbrbms );

GLAPI void GLAPIENTRY glFogiv( GLfnum pnbmf, donst GLint *pbrbms );


/*
 * Sflfdtion bnd Fffdbbdk
 */

GLAPI void GLAPIENTRY glFffdbbdkBufffr( GLsizfi sizf, GLfnum typf, GLflobt *bufffr );

GLAPI void GLAPIENTRY glPbssThrough( GLflobt tokfn );

GLAPI void GLAPIENTRY glSflfdtBufffr( GLsizfi sizf, GLuint *bufffr );

GLAPI void GLAPIENTRY glInitNbmfs( void );

GLAPI void GLAPIENTRY glLobdNbmf( GLuint nbmf );

GLAPI void GLAPIENTRY glPushNbmf( GLuint nbmf );

GLAPI void GLAPIENTRY glPopNbmf( void );



/*
 * OpfnGL 1.2
 */

#dffinf GL_RESCALE_NORMAL                       0x803A
#dffinf GL_CLAMP_TO_EDGE                        0x812F
#dffinf GL_MAX_ELEMENTS_VERTICES                0x80E8
#dffinf GL_MAX_ELEMENTS_INDICES                 0x80E9
#dffinf GL_BGR                                  0x80E0
#dffinf GL_BGRA                                 0x80E1
#dffinf GL_UNSIGNED_BYTE_3_3_2                  0x8032
#dffinf GL_UNSIGNED_BYTE_2_3_3_REV              0x8362
#dffinf GL_UNSIGNED_SHORT_5_6_5                 0x8363
#dffinf GL_UNSIGNED_SHORT_5_6_5_REV             0x8364
#dffinf GL_UNSIGNED_SHORT_4_4_4_4               0x8033
#dffinf GL_UNSIGNED_SHORT_4_4_4_4_REV           0x8365
#dffinf GL_UNSIGNED_SHORT_5_5_5_1               0x8034
#dffinf GL_UNSIGNED_SHORT_1_5_5_5_REV           0x8366
#dffinf GL_UNSIGNED_INT_8_8_8_8                 0x8035
#dffinf GL_UNSIGNED_INT_8_8_8_8_REV             0x8367
#dffinf GL_UNSIGNED_INT_10_10_10_2              0x8036
#dffinf GL_UNSIGNED_INT_2_10_10_10_REV          0x8368
#dffinf GL_LIGHT_MODEL_COLOR_CONTROL            0x81F8
#dffinf GL_SINGLE_COLOR                         0x81F9
#dffinf GL_SEPARATE_SPECULAR_COLOR              0x81FA
#dffinf GL_TEXTURE_MIN_LOD                      0x813A
#dffinf GL_TEXTURE_MAX_LOD                      0x813B
#dffinf GL_TEXTURE_BASE_LEVEL                   0x813C
#dffinf GL_TEXTURE_MAX_LEVEL                    0x813D
#dffinf GL_SMOOTH_POINT_SIZE_RANGE              0x0B12
#dffinf GL_SMOOTH_POINT_SIZE_GRANULARITY        0x0B13
#dffinf GL_SMOOTH_LINE_WIDTH_RANGE              0x0B22
#dffinf GL_SMOOTH_LINE_WIDTH_GRANULARITY        0x0B23
#dffinf GL_ALIASED_POINT_SIZE_RANGE             0x846D
#dffinf GL_ALIASED_LINE_WIDTH_RANGE             0x846E
#dffinf GL_PACK_SKIP_IMAGES                     0x806B
#dffinf GL_PACK_IMAGE_HEIGHT                    0x806C
#dffinf GL_UNPACK_SKIP_IMAGES                   0x806D
#dffinf GL_UNPACK_IMAGE_HEIGHT                  0x806E
#dffinf GL_TEXTURE_3D                           0x806F
#dffinf GL_PROXY_TEXTURE_3D                     0x8070
#dffinf GL_TEXTURE_DEPTH                        0x8071
#dffinf GL_TEXTURE_WRAP_R                       0x8072
#dffinf GL_MAX_3D_TEXTURE_SIZE                  0x8073
#dffinf GL_TEXTURE_BINDING_3D                   0x806A

GLAPI void GLAPIENTRY glDrbwRbngfElfmfnts( GLfnum modf, GLuint stbrt,
        GLuint fnd, GLsizfi dount, GLfnum typf, donst GLvoid *indidfs );

GLAPI void GLAPIENTRY glTfxImbgf3D( GLfnum tbrgft, GLint lfvfl,
                                      GLint intfrnblFormbt,
                                      GLsizfi width, GLsizfi hfight,
                                      GLsizfi dfpth, GLint bordfr,
                                      GLfnum formbt, GLfnum typf,
                                      donst GLvoid *pixfls );

GLAPI void GLAPIENTRY glTfxSubImbgf3D( GLfnum tbrgft, GLint lfvfl,
                                         GLint xoffsft, GLint yoffsft,
                                         GLint zoffsft, GLsizfi width,
                                         GLsizfi hfight, GLsizfi dfpth,
                                         GLfnum formbt,
                                         GLfnum typf, donst GLvoid *pixfls);

GLAPI void GLAPIENTRY glCopyTfxSubImbgf3D( GLfnum tbrgft, GLint lfvfl,
                                             GLint xoffsft, GLint yoffsft,
                                             GLint zoffsft, GLint x,
                                             GLint y, GLsizfi width,
                                             GLsizfi hfight );

typfdff void (APIENTRY * PFNGLDRAWRANGEELEMENTSPROC) (GLfnum modf, GLuint stbrt, GLuint fnd, GLsizfi dount, GLfnum typf, donst GLvoid *indidfs);
typfdff void (APIENTRY * PFNGLTEXIMAGE3DPROC) (GLfnum tbrgft, GLint lfvfl, GLint intfrnblformbt, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLint bordfr, GLfnum formbt, GLfnum typf, donst GLvoid *pixfls);
typfdff void (APIENTRY * PFNGLTEXSUBIMAGE3DPROC) (GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLfnum formbt, GLfnum typf, donst GLvoid *pixfls);
typfdff void (APIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC) (GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLint x, GLint y, GLsizfi width, GLsizfi hfight);


/*
 * GL_ARB_imbging
 */

#dffinf GL_CONSTANT_COLOR                       0x8001
#dffinf GL_ONE_MINUS_CONSTANT_COLOR             0x8002
#dffinf GL_CONSTANT_ALPHA                       0x8003
#dffinf GL_ONE_MINUS_CONSTANT_ALPHA             0x8004
#dffinf GL_COLOR_TABLE                          0x80D0
#dffinf GL_POST_CONVOLUTION_COLOR_TABLE         0x80D1
#dffinf GL_POST_COLOR_MATRIX_COLOR_TABLE        0x80D2
#dffinf GL_PROXY_COLOR_TABLE                    0x80D3
#dffinf GL_PROXY_POST_CONVOLUTION_COLOR_TABLE   0x80D4
#dffinf GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE  0x80D5
#dffinf GL_COLOR_TABLE_SCALE                    0x80D6
#dffinf GL_COLOR_TABLE_BIAS                     0x80D7
#dffinf GL_COLOR_TABLE_FORMAT                   0x80D8
#dffinf GL_COLOR_TABLE_WIDTH                    0x80D9
#dffinf GL_COLOR_TABLE_RED_SIZE                 0x80DA
#dffinf GL_COLOR_TABLE_GREEN_SIZE               0x80DB
#dffinf GL_COLOR_TABLE_BLUE_SIZE                0x80DC
#dffinf GL_COLOR_TABLE_ALPHA_SIZE               0x80DD
#dffinf GL_COLOR_TABLE_LUMINANCE_SIZE           0x80DE
#dffinf GL_COLOR_TABLE_INTENSITY_SIZE           0x80DF
#dffinf GL_CONVOLUTION_1D                       0x8010
#dffinf GL_CONVOLUTION_2D                       0x8011
#dffinf GL_SEPARABLE_2D                         0x8012
#dffinf GL_CONVOLUTION_BORDER_MODE              0x8013
#dffinf GL_CONVOLUTION_FILTER_SCALE             0x8014
#dffinf GL_CONVOLUTION_FILTER_BIAS              0x8015
#dffinf GL_REDUCE                               0x8016
#dffinf GL_CONVOLUTION_FORMAT                   0x8017
#dffinf GL_CONVOLUTION_WIDTH                    0x8018
#dffinf GL_CONVOLUTION_HEIGHT                   0x8019
#dffinf GL_MAX_CONVOLUTION_WIDTH                0x801A
#dffinf GL_MAX_CONVOLUTION_HEIGHT               0x801B
#dffinf GL_POST_CONVOLUTION_RED_SCALE           0x801C
#dffinf GL_POST_CONVOLUTION_GREEN_SCALE         0x801D
#dffinf GL_POST_CONVOLUTION_BLUE_SCALE          0x801E
#dffinf GL_POST_CONVOLUTION_ALPHA_SCALE         0x801F
#dffinf GL_POST_CONVOLUTION_RED_BIAS            0x8020
#dffinf GL_POST_CONVOLUTION_GREEN_BIAS          0x8021
#dffinf GL_POST_CONVOLUTION_BLUE_BIAS           0x8022
#dffinf GL_POST_CONVOLUTION_ALPHA_BIAS          0x8023
#dffinf GL_CONSTANT_BORDER                      0x8151
#dffinf GL_REPLICATE_BORDER                     0x8153
#dffinf GL_CONVOLUTION_BORDER_COLOR             0x8154
#dffinf GL_COLOR_MATRIX                         0x80B1
#dffinf GL_COLOR_MATRIX_STACK_DEPTH             0x80B2
#dffinf GL_MAX_COLOR_MATRIX_STACK_DEPTH         0x80B3
#dffinf GL_POST_COLOR_MATRIX_RED_SCALE          0x80B4
#dffinf GL_POST_COLOR_MATRIX_GREEN_SCALE        0x80B5
#dffinf GL_POST_COLOR_MATRIX_BLUE_SCALE         0x80B6
#dffinf GL_POST_COLOR_MATRIX_ALPHA_SCALE        0x80B7
#dffinf GL_POST_COLOR_MATRIX_RED_BIAS           0x80B8
#dffinf GL_POST_COLOR_MATRIX_GREEN_BIAS         0x80B9
#dffinf GL_POST_COLOR_MATRIX_BLUE_BIAS          0x80BA
#dffinf GL_POST_COLOR_MATRIX_ALPHA_BIAS         0x80BB
#dffinf GL_HISTOGRAM                            0x8024
#dffinf GL_PROXY_HISTOGRAM                      0x8025
#dffinf GL_HISTOGRAM_WIDTH                      0x8026
#dffinf GL_HISTOGRAM_FORMAT                     0x8027
#dffinf GL_HISTOGRAM_RED_SIZE                   0x8028
#dffinf GL_HISTOGRAM_GREEN_SIZE                 0x8029
#dffinf GL_HISTOGRAM_BLUE_SIZE                  0x802A
#dffinf GL_HISTOGRAM_ALPHA_SIZE                 0x802B
#dffinf GL_HISTOGRAM_LUMINANCE_SIZE             0x802C
#dffinf GL_HISTOGRAM_SINK                       0x802D
#dffinf GL_MINMAX                               0x802E
#dffinf GL_MINMAX_FORMAT                        0x802F
#dffinf GL_MINMAX_SINK                          0x8030
#dffinf GL_TABLE_TOO_LARGE                      0x8031
#dffinf GL_BLEND_EQUATION                       0x8009
#dffinf GL_MIN                                  0x8007
#dffinf GL_MAX                                  0x8008
#dffinf GL_FUNC_ADD                             0x8006
#dffinf GL_FUNC_SUBTRACT                        0x800A
#dffinf GL_FUNC_REVERSE_SUBTRACT                0x800B
#dffinf GL_BLEND_COLOR                          0x8005


GLAPI void GLAPIENTRY glColorTbblf( GLfnum tbrgft, GLfnum intfrnblformbt,
                                    GLsizfi width, GLfnum formbt,
                                    GLfnum typf, donst GLvoid *tbblf );

GLAPI void GLAPIENTRY glColorSubTbblf( GLfnum tbrgft,
                                       GLsizfi stbrt, GLsizfi dount,
                                       GLfnum formbt, GLfnum typf,
                                       donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glColorTbblfPbrbmftfriv(GLfnum tbrgft, GLfnum pnbmf,
                                              donst GLint *pbrbms);

GLAPI void GLAPIENTRY glColorTbblfPbrbmftfrfv(GLfnum tbrgft, GLfnum pnbmf,
                                              donst GLflobt *pbrbms);

GLAPI void GLAPIENTRY glCopyColorSubTbblf( GLfnum tbrgft, GLsizfi stbrt,
                                           GLint x, GLint y, GLsizfi width );

GLAPI void GLAPIENTRY glCopyColorTbblf( GLfnum tbrgft, GLfnum intfrnblformbt,
                                        GLint x, GLint y, GLsizfi width );

GLAPI void GLAPIENTRY glGftColorTbblf( GLfnum tbrgft, GLfnum formbt,
                                       GLfnum typf, GLvoid *tbblf );

GLAPI void GLAPIENTRY glGftColorTbblfPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
                                                  GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftColorTbblfPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
                                                  GLint *pbrbms );

GLAPI void GLAPIENTRY glBlfndEqubtion( GLfnum modf );

GLAPI void GLAPIENTRY glBlfndColor( GLdlbmpf rfd, GLdlbmpf grffn,
                                    GLdlbmpf bluf, GLdlbmpf blphb );

GLAPI void GLAPIENTRY glHistogrbm( GLfnum tbrgft, GLsizfi width,
                                   GLfnum intfrnblformbt, GLboolfbn sink );

GLAPI void GLAPIENTRY glRfsftHistogrbm( GLfnum tbrgft );

GLAPI void GLAPIENTRY glGftHistogrbm( GLfnum tbrgft, GLboolfbn rfsft,
                                      GLfnum formbt, GLfnum typf,
                                      GLvoid *vblufs );

GLAPI void GLAPIENTRY glGftHistogrbmPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
                                                 GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftHistogrbmPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
                                                 GLint *pbrbms );

GLAPI void GLAPIENTRY glMinmbx( GLfnum tbrgft, GLfnum intfrnblformbt,
                                GLboolfbn sink );

GLAPI void GLAPIENTRY glRfsftMinmbx( GLfnum tbrgft );

GLAPI void GLAPIENTRY glGftMinmbx( GLfnum tbrgft, GLboolfbn rfsft,
                                   GLfnum formbt, GLfnum typfs,
                                   GLvoid *vblufs );

GLAPI void GLAPIENTRY glGftMinmbxPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
                                              GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftMinmbxPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
                                              GLint *pbrbms );

GLAPI void GLAPIENTRY glConvolutionFiltfr1D( GLfnum tbrgft,
        GLfnum intfrnblformbt, GLsizfi width, GLfnum formbt, GLfnum typf,
        donst GLvoid *imbgf );

GLAPI void GLAPIENTRY glConvolutionFiltfr2D( GLfnum tbrgft,
        GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLfnum formbt,
        GLfnum typf, donst GLvoid *imbgf );

GLAPI void GLAPIENTRY glConvolutionPbrbmftfrf( GLfnum tbrgft, GLfnum pnbmf,
        GLflobt pbrbms );

GLAPI void GLAPIENTRY glConvolutionPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
        donst GLflobt *pbrbms );

GLAPI void GLAPIENTRY glConvolutionPbrbmftfri( GLfnum tbrgft, GLfnum pnbmf,
        GLint pbrbms );

GLAPI void GLAPIENTRY glConvolutionPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
        donst GLint *pbrbms );

GLAPI void GLAPIENTRY glCopyConvolutionFiltfr1D( GLfnum tbrgft,
        GLfnum intfrnblformbt, GLint x, GLint y, GLsizfi width );

GLAPI void GLAPIENTRY glCopyConvolutionFiltfr2D( GLfnum tbrgft,
        GLfnum intfrnblformbt, GLint x, GLint y, GLsizfi width,
        GLsizfi hfight);

GLAPI void GLAPIENTRY glGftConvolutionFiltfr( GLfnum tbrgft, GLfnum formbt,
        GLfnum typf, GLvoid *imbgf );

GLAPI void GLAPIENTRY glGftConvolutionPbrbmftfrfv( GLfnum tbrgft, GLfnum pnbmf,
        GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftConvolutionPbrbmftfriv( GLfnum tbrgft, GLfnum pnbmf,
        GLint *pbrbms );

GLAPI void GLAPIENTRY glSfpbrbblfFiltfr2D( GLfnum tbrgft,
        GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLfnum formbt,
        GLfnum typf, donst GLvoid *row, donst GLvoid *dolumn );

GLAPI void GLAPIENTRY glGftSfpbrbblfFiltfr( GLfnum tbrgft, GLfnum formbt,
        GLfnum typf, GLvoid *row, GLvoid *dolumn, GLvoid *spbn );

typfdff void (APIENTRY * PFNGLBLENDCOLORPROC) (GLdlbmpf rfd, GLdlbmpf grffn, GLdlbmpf bluf, GLdlbmpf blphb);
typfdff void (APIENTRY * PFNGLBLENDEQUATIONPROC) (GLfnum modf);
typfdff void (APIENTRY * PFNGLCOLORTABLEPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLsizfi width, GLfnum formbt, GLfnum typf, donst GLvoid *tbblf);
typfdff void (APIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, donst GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, donst GLint *pbrbms);
typfdff void (APIENTRY * PFNGLCOPYCOLORTABLEPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLint x, GLint y, GLsizfi width);
typfdff void (APIENTRY * PFNGLGETCOLORTABLEPROC) (GLfnum tbrgft, GLfnum formbt, GLfnum typf, GLvoid *tbblf);
typfdff void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms);
typfdff void (APIENTRY * PFNGLCOLORSUBTABLEPROC) (GLfnum tbrgft, GLsizfi stbrt, GLsizfi dount, GLfnum formbt, GLfnum typf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOPYCOLORSUBTABLEPROC) (GLfnum tbrgft, GLsizfi stbrt, GLint x, GLint y, GLsizfi width);
typfdff void (APIENTRY * PFNGLCONVOLUTIONFILTER1DPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLsizfi width, GLfnum formbt, GLfnum typf, donst GLvoid *imbgf);
typfdff void (APIENTRY * PFNGLCONVOLUTIONFILTER2DPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLfnum formbt, GLfnum typf, donst GLvoid *imbgf);
typfdff void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC) (GLfnum tbrgft, GLfnum pnbmf, GLflobt pbrbms);
typfdff void (APIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, donst GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC) (GLfnum tbrgft, GLfnum pnbmf, GLint pbrbms);
typfdff void (APIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, donst GLint *pbrbms);
typfdff void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLint x, GLint y, GLsizfi width);
typfdff void (APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLint x, GLint y, GLsizfi width, GLsizfi hfight);
typfdff void (APIENTRY * PFNGLGETCONVOLUTIONFILTERPROC) (GLfnum tbrgft, GLfnum formbt, GLfnum typf, GLvoid *imbgf);
typfdff void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms);
typfdff void (APIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLfnum tbrgft, GLfnum formbt, GLfnum typf, GLvoid *row, GLvoid *dolumn, GLvoid *spbn);
typfdff void (APIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLfnum formbt, GLfnum typf, donst GLvoid *row, donst GLvoid *dolumn);
typfdff void (APIENTRY * PFNGLGETHISTOGRAMPROC) (GLfnum tbrgft, GLboolfbn rfsft, GLfnum formbt, GLfnum typf, GLvoid *vblufs);
typfdff void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms);
typfdff void (APIENTRY * PFNGLGETMINMAXPROC) (GLfnum tbrgft, GLboolfbn rfsft, GLfnum formbt, GLfnum typf, GLvoid *vblufs);
typfdff void (APIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms);
typfdff void (APIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms);
typfdff void (APIENTRY * PFNGLHISTOGRAMPROC) (GLfnum tbrgft, GLsizfi width, GLfnum intfrnblformbt, GLboolfbn sink);
typfdff void (APIENTRY * PFNGLMINMAXPROC) (GLfnum tbrgft, GLfnum intfrnblformbt, GLboolfbn sink);
typfdff void (APIENTRY * PFNGLRESETHISTOGRAMPROC) (GLfnum tbrgft);
typfdff void (APIENTRY * PFNGLRESETMINMAXPROC) (GLfnum tbrgft);



/*
 * OpfnGL 1.3
 */

/* multitfxturf */
#dffinf GL_TEXTURE0                             0x84C0
#dffinf GL_TEXTURE1                             0x84C1
#dffinf GL_TEXTURE2                             0x84C2
#dffinf GL_TEXTURE3                             0x84C3
#dffinf GL_TEXTURE4                             0x84C4
#dffinf GL_TEXTURE5                             0x84C5
#dffinf GL_TEXTURE6                             0x84C6
#dffinf GL_TEXTURE7                             0x84C7
#dffinf GL_TEXTURE8                             0x84C8
#dffinf GL_TEXTURE9                             0x84C9
#dffinf GL_TEXTURE10                            0x84CA
#dffinf GL_TEXTURE11                            0x84CB
#dffinf GL_TEXTURE12                            0x84CC
#dffinf GL_TEXTURE13                            0x84CD
#dffinf GL_TEXTURE14                            0x84CE
#dffinf GL_TEXTURE15                            0x84CF
#dffinf GL_TEXTURE16                            0x84D0
#dffinf GL_TEXTURE17                            0x84D1
#dffinf GL_TEXTURE18                            0x84D2
#dffinf GL_TEXTURE19                            0x84D3
#dffinf GL_TEXTURE20                            0x84D4
#dffinf GL_TEXTURE21                            0x84D5
#dffinf GL_TEXTURE22                            0x84D6
#dffinf GL_TEXTURE23                            0x84D7
#dffinf GL_TEXTURE24                            0x84D8
#dffinf GL_TEXTURE25                            0x84D9
#dffinf GL_TEXTURE26                            0x84DA
#dffinf GL_TEXTURE27                            0x84DB
#dffinf GL_TEXTURE28                            0x84DC
#dffinf GL_TEXTURE29                            0x84DD
#dffinf GL_TEXTURE30                            0x84DE
#dffinf GL_TEXTURE31                            0x84DF
#dffinf GL_ACTIVE_TEXTURE                       0x84E0
#dffinf GL_CLIENT_ACTIVE_TEXTURE                0x84E1
#dffinf GL_MAX_TEXTURE_UNITS                    0x84E2
/* tfxturf_dubf_mbp */
#dffinf GL_NORMAL_MAP                           0x8511
#dffinf GL_REFLECTION_MAP                       0x8512
#dffinf GL_TEXTURE_CUBE_MAP                     0x8513
#dffinf GL_TEXTURE_BINDING_CUBE_MAP             0x8514
#dffinf GL_TEXTURE_CUBE_MAP_POSITIVE_X          0x8515
#dffinf GL_TEXTURE_CUBE_MAP_NEGATIVE_X          0x8516
#dffinf GL_TEXTURE_CUBE_MAP_POSITIVE_Y          0x8517
#dffinf GL_TEXTURE_CUBE_MAP_NEGATIVE_Y          0x8518
#dffinf GL_TEXTURE_CUBE_MAP_POSITIVE_Z          0x8519
#dffinf GL_TEXTURE_CUBE_MAP_NEGATIVE_Z          0x851A
#dffinf GL_PROXY_TEXTURE_CUBE_MAP               0x851B
#dffinf GL_MAX_CUBE_MAP_TEXTURE_SIZE            0x851C
/* tfxturf_domprfssion */
#dffinf GL_COMPRESSED_ALPHA                     0x84E9
#dffinf GL_COMPRESSED_LUMINANCE                 0x84EA
#dffinf GL_COMPRESSED_LUMINANCE_ALPHA           0x84EB
#dffinf GL_COMPRESSED_INTENSITY                 0x84EC
#dffinf GL_COMPRESSED_RGB                       0x84ED
#dffinf GL_COMPRESSED_RGBA                      0x84EE
#dffinf GL_TEXTURE_COMPRESSION_HINT             0x84EF
#dffinf GL_TEXTURE_COMPRESSED_IMAGE_SIZE        0x86A0
#dffinf GL_TEXTURE_COMPRESSED                   0x86A1
#dffinf GL_NUM_COMPRESSED_TEXTURE_FORMATS       0x86A2
#dffinf GL_COMPRESSED_TEXTURE_FORMATS           0x86A3
/* multisbmplf */
#dffinf GL_MULTISAMPLE                          0x809D
#dffinf GL_SAMPLE_ALPHA_TO_COVERAGE             0x809E
#dffinf GL_SAMPLE_ALPHA_TO_ONE                  0x809F
#dffinf GL_SAMPLE_COVERAGE                      0x80A0
#dffinf GL_SAMPLE_BUFFERS                       0x80A8
#dffinf GL_SAMPLES                              0x80A9
#dffinf GL_SAMPLE_COVERAGE_VALUE                0x80AA
#dffinf GL_SAMPLE_COVERAGE_INVERT               0x80AB
#dffinf GL_MULTISAMPLE_BIT                      0x20000000
/* trbnsposf_mbtrix */
#dffinf GL_TRANSPOSE_MODELVIEW_MATRIX           0x84E3
#dffinf GL_TRANSPOSE_PROJECTION_MATRIX          0x84E4
#dffinf GL_TRANSPOSE_TEXTURE_MATRIX             0x84E5
#dffinf GL_TRANSPOSE_COLOR_MATRIX               0x84E6
/* tfxturf_fnv_dombinf */
#dffinf GL_COMBINE                              0x8570
#dffinf GL_COMBINE_RGB                          0x8571
#dffinf GL_COMBINE_ALPHA                        0x8572
#dffinf GL_SOURCE0_RGB                          0x8580
#dffinf GL_SOURCE1_RGB                          0x8581
#dffinf GL_SOURCE2_RGB                          0x8582
#dffinf GL_SOURCE0_ALPHA                        0x8588
#dffinf GL_SOURCE1_ALPHA                        0x8589
#dffinf GL_SOURCE2_ALPHA                        0x858A
#dffinf GL_OPERAND0_RGB                         0x8590
#dffinf GL_OPERAND1_RGB                         0x8591
#dffinf GL_OPERAND2_RGB                         0x8592
#dffinf GL_OPERAND0_ALPHA                       0x8598
#dffinf GL_OPERAND1_ALPHA                       0x8599
#dffinf GL_OPERAND2_ALPHA                       0x859A
#dffinf GL_RGB_SCALE                            0x8573
#dffinf GL_ADD_SIGNED                           0x8574
#dffinf GL_INTERPOLATE                          0x8575
#dffinf GL_SUBTRACT                             0x84E7
#dffinf GL_CONSTANT                             0x8576
#dffinf GL_PRIMARY_COLOR                        0x8577
#dffinf GL_PREVIOUS                             0x8578
/* tfxturf_fnv_dot3 */
#dffinf GL_DOT3_RGB                             0x86AE
#dffinf GL_DOT3_RGBA                            0x86AF
/* tfxturf_bordfr_dlbmp */
#dffinf GL_CLAMP_TO_BORDER                      0x812D

GLAPI void GLAPIENTRY glAdtivfTfxturf( GLfnum tfxturf );

GLAPI void GLAPIENTRY glClifntAdtivfTfxturf( GLfnum tfxturf );

GLAPI void GLAPIENTRY glComprfssfdTfxImbgf1D( GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glComprfssfdTfxImbgf2D( GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glComprfssfdTfxImbgf3D( GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glComprfssfdTfxSubImbgf1D( GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLsizfi width, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glComprfssfdTfxSubImbgf2D( GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLsizfi width, GLsizfi hfight, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glComprfssfdTfxSubImbgf3D( GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glGftComprfssfdTfxImbgf( GLfnum tbrgft, GLint lod, GLvoid *img );

GLAPI void GLAPIENTRY glMultiTfxCoord1d( GLfnum tbrgft, GLdoublf s );

GLAPI void GLAPIENTRY glMultiTfxCoord1dv( GLfnum tbrgft, donst GLdoublf *v );

GLAPI void GLAPIENTRY glMultiTfxCoord1f( GLfnum tbrgft, GLflobt s );

GLAPI void GLAPIENTRY glMultiTfxCoord1fv( GLfnum tbrgft, donst GLflobt *v );

GLAPI void GLAPIENTRY glMultiTfxCoord1i( GLfnum tbrgft, GLint s );

GLAPI void GLAPIENTRY glMultiTfxCoord1iv( GLfnum tbrgft, donst GLint *v );

GLAPI void GLAPIENTRY glMultiTfxCoord1s( GLfnum tbrgft, GLshort s );

GLAPI void GLAPIENTRY glMultiTfxCoord1sv( GLfnum tbrgft, donst GLshort *v );

GLAPI void GLAPIENTRY glMultiTfxCoord2d( GLfnum tbrgft, GLdoublf s, GLdoublf t );

GLAPI void GLAPIENTRY glMultiTfxCoord2dv( GLfnum tbrgft, donst GLdoublf *v );

GLAPI void GLAPIENTRY glMultiTfxCoord2f( GLfnum tbrgft, GLflobt s, GLflobt t );

GLAPI void GLAPIENTRY glMultiTfxCoord2fv( GLfnum tbrgft, donst GLflobt *v );

GLAPI void GLAPIENTRY glMultiTfxCoord2i( GLfnum tbrgft, GLint s, GLint t );

GLAPI void GLAPIENTRY glMultiTfxCoord2iv( GLfnum tbrgft, donst GLint *v );

GLAPI void GLAPIENTRY glMultiTfxCoord2s( GLfnum tbrgft, GLshort s, GLshort t );

GLAPI void GLAPIENTRY glMultiTfxCoord2sv( GLfnum tbrgft, donst GLshort *v );

GLAPI void GLAPIENTRY glMultiTfxCoord3d( GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r );

GLAPI void GLAPIENTRY glMultiTfxCoord3dv( GLfnum tbrgft, donst GLdoublf *v );

GLAPI void GLAPIENTRY glMultiTfxCoord3f( GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r );

GLAPI void GLAPIENTRY glMultiTfxCoord3fv( GLfnum tbrgft, donst GLflobt *v );

GLAPI void GLAPIENTRY glMultiTfxCoord3i( GLfnum tbrgft, GLint s, GLint t, GLint r );

GLAPI void GLAPIENTRY glMultiTfxCoord3iv( GLfnum tbrgft, donst GLint *v );

GLAPI void GLAPIENTRY glMultiTfxCoord3s( GLfnum tbrgft, GLshort s, GLshort t, GLshort r );

GLAPI void GLAPIENTRY glMultiTfxCoord3sv( GLfnum tbrgft, donst GLshort *v );

GLAPI void GLAPIENTRY glMultiTfxCoord4d( GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r, GLdoublf q );

GLAPI void GLAPIENTRY glMultiTfxCoord4dv( GLfnum tbrgft, donst GLdoublf *v );

GLAPI void GLAPIENTRY glMultiTfxCoord4f( GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r, GLflobt q );

GLAPI void GLAPIENTRY glMultiTfxCoord4fv( GLfnum tbrgft, donst GLflobt *v );

GLAPI void GLAPIENTRY glMultiTfxCoord4i( GLfnum tbrgft, GLint s, GLint t, GLint r, GLint q );

GLAPI void GLAPIENTRY glMultiTfxCoord4iv( GLfnum tbrgft, donst GLint *v );

GLAPI void GLAPIENTRY glMultiTfxCoord4s( GLfnum tbrgft, GLshort s, GLshort t, GLshort r, GLshort q );

GLAPI void GLAPIENTRY glMultiTfxCoord4sv( GLfnum tbrgft, donst GLshort *v );


GLAPI void GLAPIENTRY glLobdTrbnsposfMbtrixd( donst GLdoublf m[16] );

GLAPI void GLAPIENTRY glLobdTrbnsposfMbtrixf( donst GLflobt m[16] );

GLAPI void GLAPIENTRY glMultTrbnsposfMbtrixd( donst GLdoublf m[16] );

GLAPI void GLAPIENTRY glMultTrbnsposfMbtrixf( donst GLflobt m[16] );

GLAPI void GLAPIENTRY glSbmplfCovfrbgf( GLdlbmpf vbluf, GLboolfbn invfrt );

typfdff void (APIENTRY * PFNGLACTIVETEXTUREPROC) (GLfnum tfxturf);
typfdff void (APIENTRY * PFNGLCLIENTACTIVETEXTUREPROC) (GLfnum tfxturf);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1DPROC) (GLfnum tbrgft, GLdoublf s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1DVPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1FPROC) (GLfnum tbrgft, GLflobt s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1FVPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1IPROC) (GLfnum tbrgft, GLint s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1IVPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1SPROC) (GLfnum tbrgft, GLshort s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1SVPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2DPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2DVPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2FPROC) (GLfnum tbrgft, GLflobt s, GLflobt t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2FVPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2IPROC) (GLfnum tbrgft, GLint s, GLint t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2IVPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2SPROC) (GLfnum tbrgft, GLshort s, GLshort t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2SVPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3DPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3DVPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3FPROC) (GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3FVPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3IPROC) (GLfnum tbrgft, GLint s, GLint t, GLint r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3IVPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3SPROC) (GLfnum tbrgft, GLshort s, GLshort t, GLshort r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3SVPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4DPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r, GLdoublf q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4DVPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4FPROC) (GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r, GLflobt q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4FVPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4IPROC) (GLfnum tbrgft, GLint s, GLint t, GLint r, GLint q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4IVPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4SPROC) (GLfnum tbrgft, GLshort s, GLshort t, GLshort r, GLshort q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4SVPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC) (donst GLflobt *m);
typfdff void (APIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC) (donst GLdoublf *m);
typfdff void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC) (donst GLflobt *m);
typfdff void (APIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC) (donst GLdoublf *m);
typfdff void (APIENTRY * PFNGLSAMPLECOVERAGEPROC) (GLdlbmpf vbluf, GLboolfbn invfrt);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLsizfi hfight, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblformbt, GLsizfi width, GLint bordfr, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLsizfi width, GLsizfi hfight, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLsizfi width, GLfnum formbt, GLsizfi imbgfSizf, donst GLvoid *dbtb);
typfdff void (APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLfnum tbrgft, GLint lfvfl, void *img);


/*
 * GL_ARB_multitfxturf (ARB fxtfnsion 1 bnd OpfnGL 1.2.1)
 */
#ifndff GL_ARB_multitfxturf
#dffinf GL_ARB_multitfxturf 1

#dffinf GL_TEXTURE0_ARB                         0x84C0
#dffinf GL_TEXTURE1_ARB                         0x84C1
#dffinf GL_TEXTURE2_ARB                         0x84C2
#dffinf GL_TEXTURE3_ARB                         0x84C3
#dffinf GL_TEXTURE4_ARB                         0x84C4
#dffinf GL_TEXTURE5_ARB                         0x84C5
#dffinf GL_TEXTURE6_ARB                         0x84C6
#dffinf GL_TEXTURE7_ARB                         0x84C7
#dffinf GL_TEXTURE8_ARB                         0x84C8
#dffinf GL_TEXTURE9_ARB                         0x84C9
#dffinf GL_TEXTURE10_ARB                        0x84CA
#dffinf GL_TEXTURE11_ARB                        0x84CB
#dffinf GL_TEXTURE12_ARB                        0x84CC
#dffinf GL_TEXTURE13_ARB                        0x84CD
#dffinf GL_TEXTURE14_ARB                        0x84CE
#dffinf GL_TEXTURE15_ARB                        0x84CF
#dffinf GL_TEXTURE16_ARB                        0x84D0
#dffinf GL_TEXTURE17_ARB                        0x84D1
#dffinf GL_TEXTURE18_ARB                        0x84D2
#dffinf GL_TEXTURE19_ARB                        0x84D3
#dffinf GL_TEXTURE20_ARB                        0x84D4
#dffinf GL_TEXTURE21_ARB                        0x84D5
#dffinf GL_TEXTURE22_ARB                        0x84D6
#dffinf GL_TEXTURE23_ARB                        0x84D7
#dffinf GL_TEXTURE24_ARB                        0x84D8
#dffinf GL_TEXTURE25_ARB                        0x84D9
#dffinf GL_TEXTURE26_ARB                        0x84DA
#dffinf GL_TEXTURE27_ARB                        0x84DB
#dffinf GL_TEXTURE28_ARB                        0x84DC
#dffinf GL_TEXTURE29_ARB                        0x84DD
#dffinf GL_TEXTURE30_ARB                        0x84DE
#dffinf GL_TEXTURE31_ARB                        0x84DF
#dffinf GL_ACTIVE_TEXTURE_ARB                   0x84E0
#dffinf GL_CLIENT_ACTIVE_TEXTURE_ARB            0x84E1
#dffinf GL_MAX_TEXTURE_UNITS_ARB                0x84E2

GLAPI void GLAPIENTRY glAdtivfTfxturfARB(GLfnum tfxturf);
GLAPI void GLAPIENTRY glClifntAdtivfTfxturfARB(GLfnum tfxturf);
GLAPI void GLAPIENTRY glMultiTfxCoord1dARB(GLfnum tbrgft, GLdoublf s);
GLAPI void GLAPIENTRY glMultiTfxCoord1dvARB(GLfnum tbrgft, donst GLdoublf *v);
GLAPI void GLAPIENTRY glMultiTfxCoord1fARB(GLfnum tbrgft, GLflobt s);
GLAPI void GLAPIENTRY glMultiTfxCoord1fvARB(GLfnum tbrgft, donst GLflobt *v);
GLAPI void GLAPIENTRY glMultiTfxCoord1iARB(GLfnum tbrgft, GLint s);
GLAPI void GLAPIENTRY glMultiTfxCoord1ivARB(GLfnum tbrgft, donst GLint *v);
GLAPI void GLAPIENTRY glMultiTfxCoord1sARB(GLfnum tbrgft, GLshort s);
GLAPI void GLAPIENTRY glMultiTfxCoord1svARB(GLfnum tbrgft, donst GLshort *v);
GLAPI void GLAPIENTRY glMultiTfxCoord2dARB(GLfnum tbrgft, GLdoublf s, GLdoublf t);
GLAPI void GLAPIENTRY glMultiTfxCoord2dvARB(GLfnum tbrgft, donst GLdoublf *v);
GLAPI void GLAPIENTRY glMultiTfxCoord2fARB(GLfnum tbrgft, GLflobt s, GLflobt t);
GLAPI void GLAPIENTRY glMultiTfxCoord2fvARB(GLfnum tbrgft, donst GLflobt *v);
GLAPI void GLAPIENTRY glMultiTfxCoord2iARB(GLfnum tbrgft, GLint s, GLint t);
GLAPI void GLAPIENTRY glMultiTfxCoord2ivARB(GLfnum tbrgft, donst GLint *v);
GLAPI void GLAPIENTRY glMultiTfxCoord2sARB(GLfnum tbrgft, GLshort s, GLshort t);
GLAPI void GLAPIENTRY glMultiTfxCoord2svARB(GLfnum tbrgft, donst GLshort *v);
GLAPI void GLAPIENTRY glMultiTfxCoord3dARB(GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r);
GLAPI void GLAPIENTRY glMultiTfxCoord3dvARB(GLfnum tbrgft, donst GLdoublf *v);
GLAPI void GLAPIENTRY glMultiTfxCoord3fARB(GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r);
GLAPI void GLAPIENTRY glMultiTfxCoord3fvARB(GLfnum tbrgft, donst GLflobt *v);
GLAPI void GLAPIENTRY glMultiTfxCoord3iARB(GLfnum tbrgft, GLint s, GLint t, GLint r);
GLAPI void GLAPIENTRY glMultiTfxCoord3ivARB(GLfnum tbrgft, donst GLint *v);
GLAPI void GLAPIENTRY glMultiTfxCoord3sARB(GLfnum tbrgft, GLshort s, GLshort t, GLshort r);
GLAPI void GLAPIENTRY glMultiTfxCoord3svARB(GLfnum tbrgft, donst GLshort *v);
GLAPI void GLAPIENTRY glMultiTfxCoord4dARB(GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r, GLdoublf q);
GLAPI void GLAPIENTRY glMultiTfxCoord4dvARB(GLfnum tbrgft, donst GLdoublf *v);
GLAPI void GLAPIENTRY glMultiTfxCoord4fARB(GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r, GLflobt q);
GLAPI void GLAPIENTRY glMultiTfxCoord4fvARB(GLfnum tbrgft, donst GLflobt *v);
GLAPI void GLAPIENTRY glMultiTfxCoord4iARB(GLfnum tbrgft, GLint s, GLint t, GLint r, GLint q);
GLAPI void GLAPIENTRY glMultiTfxCoord4ivARB(GLfnum tbrgft, donst GLint *v);
GLAPI void GLAPIENTRY glMultiTfxCoord4sARB(GLfnum tbrgft, GLshort s, GLshort t, GLshort r, GLshort q);
GLAPI void GLAPIENTRY glMultiTfxCoord4svARB(GLfnum tbrgft, donst GLshort *v);

typfdff void (APIENTRY * PFNGLACTIVETEXTUREARBPROC) (GLfnum tfxturf);
typfdff void (APIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLfnum tfxturf);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1DARBPROC) (GLfnum tbrgft, GLdoublf s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1DVARBPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1FARBPROC) (GLfnum tbrgft, GLflobt s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1FVARBPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1IARBPROC) (GLfnum tbrgft, GLint s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1IVARBPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1SARBPROC) (GLfnum tbrgft, GLshort s);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD1SVARBPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2DARBPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2DVARBPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2FARBPROC) (GLfnum tbrgft, GLflobt s, GLflobt t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2FVARBPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2IARBPROC) (GLfnum tbrgft, GLint s, GLint t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2IVARBPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2SARBPROC) (GLfnum tbrgft, GLshort s, GLshort t);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD2SVARBPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3DARBPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3DVARBPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3FARBPROC) (GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3FVARBPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3IARBPROC) (GLfnum tbrgft, GLint s, GLint t, GLint r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3IVARBPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3SARBPROC) (GLfnum tbrgft, GLshort s, GLshort t, GLshort r);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD3SVARBPROC) (GLfnum tbrgft, donst GLshort *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4DARBPROC) (GLfnum tbrgft, GLdoublf s, GLdoublf t, GLdoublf r, GLdoublf q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4DVARBPROC) (GLfnum tbrgft, donst GLdoublf *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4FARBPROC) (GLfnum tbrgft, GLflobt s, GLflobt t, GLflobt r, GLflobt q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4FVARBPROC) (GLfnum tbrgft, donst GLflobt *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4IARBPROC) (GLfnum tbrgft, GLint s, GLint t, GLint r, GLint q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4IVARBPROC) (GLfnum tbrgft, donst GLint *v);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4SARBPROC) (GLfnum tbrgft, GLshort s, GLshort t, GLshort r, GLshort q);
typfdff void (APIENTRY * PFNGLMULTITEXCOORD4SVARBPROC) (GLfnum tbrgft, donst GLshort *v);

#fndif /* GL_ARB_multitfxturf */



/*
 * Dffinf this tokfn if you wbnt "old-stylf" hfbdfr filf bfhbviour (fxtfnsions
 * dffinfd in gl.h).  Othfrwisf, fxtfnsions will bf indludfd from glfxt.h.
 */
#if dffinfd(GL_GLEXT_LEGACY)


/*
 * 1. GL_EXT_bbgr
 */
#ifndff GL_EXT_bbgr
#dffinf GL_EXT_bbgr 1

#dffinf GL_ABGR_EXT                             0x8000

#fndif /* GL_EXT_bbgr */



/*
 * 2. GL_EXT_blfnd_dolor
 */
#ifndff GL_EXT_blfnd_dolor
#dffinf GL_EXT_blfnd_dolor 1

#dffinf GL_CONSTANT_COLOR_EXT                   0x8001
#dffinf GL_ONE_MINUS_CONSTANT_COLOR_EXT         0x8002
#dffinf GL_CONSTANT_ALPHA_EXT                   0x8003
#dffinf GL_ONE_MINUS_CONSTANT_ALPHA_EXT         0x8004
#dffinf GL_BLEND_COLOR_EXT                      0x8005

GLAPI void GLAPIENTRY glBlfndColorEXT( GLdlbmpf rfd, GLdlbmpf grffn, GLdlbmpf bluf, GLdlbmpf blphb );

#fndif /* GL_EXT_blfnd_dolor */



/*
 * 3. GL_EXT_polygon_offsft
 */
#ifndff GL_EXT_polygon_offsft
#dffinf GL_EXT_polygon_offsft 1

#dffinf GL_POLYGON_OFFSET_EXT                   0x8037
#dffinf GL_POLYGON_OFFSET_FACTOR_EXT            0x8038
#dffinf GL_POLYGON_OFFSET_BIAS_EXT              0x8039

GLAPI void GLAPIENTRY glPolygonOffsftEXT( GLflobt fbdtor, GLflobt bibs );

#fndif /* GL_EXT_polygon_offsft */



/*
 * 6. GL_EXT_tfxturf3D
 */
#ifndff GL_EXT_tfxturf3D
#dffinf GL_EXT_tfxturf3D 1

#dffinf GL_PACK_SKIP_IMAGES_EXT                 0x806B
#dffinf GL_PACK_IMAGE_HEIGHT_EXT                0x806C
#dffinf GL_UNPACK_SKIP_IMAGES_EXT               0x806D
#dffinf GL_UNPACK_IMAGE_HEIGHT_EXT              0x806E
#dffinf GL_TEXTURE_3D_EXT                       0x806F
#dffinf GL_PROXY_TEXTURE_3D_EXT                 0x8070
#dffinf GL_TEXTURE_DEPTH_EXT                    0x8071
#dffinf GL_TEXTURE_WRAP_R_EXT                   0x8072
#dffinf GL_MAX_3D_TEXTURE_SIZE_EXT              0x8073
#dffinf GL_TEXTURE_3D_BINDING_EXT               0x806A

GLAPI void GLAPIENTRY glTfxImbgf3DEXT( GLfnum tbrgft, GLint lfvfl, GLfnum intfrnblFormbt, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLint bordfr, GLfnum formbt, GLfnum typf, donst GLvoid *pixfls );

GLAPI void GLAPIENTRY glTfxSubImbgf3DEXT( GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLsizfi width, GLsizfi hfight, GLsizfi dfpth, GLfnum formbt, GLfnum typf, donst GLvoid *pixfls);

GLAPI void GLAPIENTRY glCopyTfxSubImbgf3DEXT( GLfnum tbrgft, GLint lfvfl, GLint xoffsft, GLint yoffsft, GLint zoffsft, GLint x, GLint y, GLsizfi width, GLsizfi hfight );

#fndif /* GL_EXT_tfxturf3D */



/*
 * 20. GL_EXT_tfxturf_objfdt
 */
#ifndff GL_EXT_tfxturf_objfdt
#dffinf GL_EXT_tfxturf_objfdt 1

#dffinf GL_TEXTURE_PRIORITY_EXT                 0x8066
#dffinf GL_TEXTURE_RESIDENT_EXT                 0x8067
#dffinf GL_TEXTURE_1D_BINDING_EXT               0x8068
#dffinf GL_TEXTURE_2D_BINDING_EXT               0x8069

GLAPI void GLAPIENTRY glGfnTfxturfsEXT( GLsizfi n, GLuint *tfxturfs );

GLAPI void GLAPIENTRY glDflftfTfxturfsEXT( GLsizfi n, donst GLuint *tfxturfs);

GLAPI void GLAPIENTRY glBindTfxturfEXT( GLfnum tbrgft, GLuint tfxturf );

GLAPI void GLAPIENTRY glPrioritizfTfxturfsEXT( GLsizfi n, donst GLuint *tfxturfs, donst GLdlbmpf *prioritifs );

GLAPI GLboolfbn GLAPIENTRY glArfTfxturfsRfsidfntEXT( GLsizfi n, donst GLuint *tfxturfs, GLboolfbn *rfsidfndfs );

GLAPI GLboolfbn GLAPIENTRY glIsTfxturfEXT( GLuint tfxturf );

#fndif /* GL_EXT_tfxturf_objfdt */



/*
 * 27. GL_EXT_rfsdblf_normbl
 */
#ifndff GL_EXT_rfsdblf_normbl
#dffinf GL_EXT_rfsdblf_normbl 1

#dffinf GL_RESCALE_NORMAL_EXT                   0x803A

#fndif /* GL_EXT_rfsdblf_normbl */



/*
 * 30. GL_EXT_vfrtfx_brrby
 */
#ifndff GL_EXT_vfrtfx_brrby
#dffinf GL_EXT_vfrtfx_brrby 1

#dffinf GL_VERTEX_ARRAY_EXT                     0x8074
#dffinf GL_NORMAL_ARRAY_EXT                     0x8075
#dffinf GL_COLOR_ARRAY_EXT                      0x8076
#dffinf GL_INDEX_ARRAY_EXT                      0x8077
#dffinf GL_TEXTURE_COORD_ARRAY_EXT              0x8078
#dffinf GL_EDGE_FLAG_ARRAY_EXT                  0x8079
#dffinf GL_VERTEX_ARRAY_SIZE_EXT                0x807A
#dffinf GL_VERTEX_ARRAY_TYPE_EXT                0x807B
#dffinf GL_VERTEX_ARRAY_STRIDE_EXT              0x807C
#dffinf GL_VERTEX_ARRAY_COUNT_EXT               0x807D
#dffinf GL_NORMAL_ARRAY_TYPE_EXT                0x807E
#dffinf GL_NORMAL_ARRAY_STRIDE_EXT              0x807F
#dffinf GL_NORMAL_ARRAY_COUNT_EXT               0x8080
#dffinf GL_COLOR_ARRAY_SIZE_EXT                 0x8081
#dffinf GL_COLOR_ARRAY_TYPE_EXT                 0x8082
#dffinf GL_COLOR_ARRAY_STRIDE_EXT               0x8083
#dffinf GL_COLOR_ARRAY_COUNT_EXT                0x8084
#dffinf GL_INDEX_ARRAY_TYPE_EXT                 0x8085
#dffinf GL_INDEX_ARRAY_STRIDE_EXT               0x8086
#dffinf GL_INDEX_ARRAY_COUNT_EXT                0x8087
#dffinf GL_TEXTURE_COORD_ARRAY_SIZE_EXT         0x8088
#dffinf GL_TEXTURE_COORD_ARRAY_TYPE_EXT         0x8089
#dffinf GL_TEXTURE_COORD_ARRAY_STRIDE_EXT       0x808A
#dffinf GL_TEXTURE_COORD_ARRAY_COUNT_EXT        0x808B
#dffinf GL_EDGE_FLAG_ARRAY_STRIDE_EXT           0x808C
#dffinf GL_EDGE_FLAG_ARRAY_COUNT_EXT            0x808D
#dffinf GL_VERTEX_ARRAY_POINTER_EXT             0x808E
#dffinf GL_NORMAL_ARRAY_POINTER_EXT             0x808F
#dffinf GL_COLOR_ARRAY_POINTER_EXT              0x8090
#dffinf GL_INDEX_ARRAY_POINTER_EXT              0x8091
#dffinf GL_TEXTURE_COORD_ARRAY_POINTER_EXT      0x8092
#dffinf GL_EDGE_FLAG_ARRAY_POINTER_EXT          0x8093

GLAPI void GLAPIENTRY glVfrtfxPointfrEXT( GLint sizf, GLfnum typf, GLsizfi stridf, GLsizfi dount, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glNormblPointfrEXT( GLfnum typf, GLsizfi stridf, GLsizfi dount, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glColorPointfrEXT( GLint sizf, GLfnum typf, GLsizfi stridf, GLsizfi dount, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glIndfxPointfrEXT( GLfnum typf, GLsizfi stridf, GLsizfi dount, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glTfxCoordPointfrEXT( GLint sizf, GLfnum typf, GLsizfi stridf, GLsizfi dount, donst GLvoid *ptr );

GLAPI void GLAPIENTRY glEdgfFlbgPointfrEXT( GLsizfi stridf, GLsizfi dount, donst GLboolfbn *ptr );

GLAPI void GLAPIENTRY glGftPointfrvEXT( GLfnum pnbmf, GLvoid **pbrbms );

GLAPI void GLAPIENTRY glArrbyElfmfntEXT( GLint i );

GLAPI void GLAPIENTRY glDrbwArrbysEXT( GLfnum modf, GLint first, GLsizfi dount );

#fndif /* GL_EXT_vfrtfx_brrby */



/*
 * 35. GL_SGIS_tfxturf_fdgf_dlbmp
 */
#ifndff GL_SGIS_tfxturf_fdgf_dlbmp
#dffinf GL_SGIS_tfxturf_fdgf_dlbmp 1

#dffinf GL_CLAMP_TO_EDGE_SGIS                   0x812F

#fndif /* GL_SGIS_tfxturf_fdgf_dlbmp */



/*
 * 37. GL_EXT_blfnd_minmbx
 */
#ifndff GL_EXT_blfnd_minmbx
#dffinf GL_EXT_blfnd_minmbx 1

#dffinf GL_FUNC_ADD_EXT                         0x8006
#dffinf GL_MIN_EXT                              0x8007
#dffinf GL_MAX_EXT                              0x8008
#dffinf GL_BLEND_EQUATION_EXT                   0x8009

GLAPI void GLAPIENTRY glBlfndEqubtionEXT( GLfnum modf );

#fndif /* GL_EXT_blfnd_minmbx */



/*
 * 38. GL_EXT_blfnd_subtrbdt (rfquirfs GL_EXT_blfnd_mbx )
 */
#ifndff GL_EXT_blfnd_subtrbdt
#dffinf GL_EXT_blfnd_subtrbdt 1

#dffinf GL_FUNC_SUBTRACT_EXT                    0x800A
#dffinf GL_FUNC_REVERSE_SUBTRACT_EXT            0x800B

#fndif /* GL_EXT_blfnd_subtrbdt */



/*
 * 39. GL_EXT_blfnd_logid_op
 */
#ifndff GL_EXT_blfnd_logid_op
#dffinf GL_EXT_blfnd_logid_op 1

/* No nfw tokfns or fundtions */

#fndif /* GL_EXT_blfnd_logid_op */



/*
 * 54. GL_EXT_point_pbrbmftfrs
 */
#ifndff GL_EXT_point_pbrbmftfrs
#dffinf GL_EXT_point_pbrbmftfrs 1

#dffinf GL_POINT_SIZE_MIN_EXT                   0x8126
#dffinf GL_POINT_SIZE_MAX_EXT                   0x8127
#dffinf GL_POINT_FADE_THRESHOLD_SIZE_EXT        0x8128
#dffinf GL_DISTANCE_ATTENUATION_EXT             0x8129

GLAPI void GLAPIENTRY glPointPbrbmftfrfEXT( GLfnum pnbmf, GLflobt pbrbm );
GLAPI void GLAPIENTRY glPointPbrbmftfrfvEXT( GLfnum pnbmf, donst GLflobt *pbrbms );
GLAPI void GLAPIENTRY glPointPbrbmftfrfSGIS(GLfnum pnbmf, GLflobt pbrbm);
GLAPI void GLAPIENTRY glPointPbrbmftfrfvSGIS(GLfnum pnbmf, donst GLflobt *pbrbms);

#fndif /* GL_EXT_point_pbrbmftfrs */



/*
 * 78. GL_EXT_pblfttfd_tfxturf
 */
#ifndff GL_EXT_pblfttfd_tfxturf
#dffinf GL_EXT_pblfttfd_tfxturf 1

#dffinf GL_TABLE_TOO_LARGE_EXT                  0x8031
#dffinf GL_COLOR_TABLE_FORMAT_EXT               0x80D8
#dffinf GL_COLOR_TABLE_WIDTH_EXT                0x80D9
#dffinf GL_COLOR_TABLE_RED_SIZE_EXT             0x80DA
#dffinf GL_COLOR_TABLE_GREEN_SIZE_EXT           0x80DB
#dffinf GL_COLOR_TABLE_BLUE_SIZE_EXT            0x80DC
#dffinf GL_COLOR_TABLE_ALPHA_SIZE_EXT           0x80DD
#dffinf GL_COLOR_TABLE_LUMINANCE_SIZE_EXT       0x80DE
#dffinf GL_COLOR_TABLE_INTENSITY_SIZE_EXT       0x80DF
#dffinf GL_TEXTURE_INDEX_SIZE_EXT               0x80ED
#dffinf GL_COLOR_INDEX1_EXT                     0x80E2
#dffinf GL_COLOR_INDEX2_EXT                     0x80E3
#dffinf GL_COLOR_INDEX4_EXT                     0x80E4
#dffinf GL_COLOR_INDEX8_EXT                     0x80E5
#dffinf GL_COLOR_INDEX12_EXT                    0x80E6
#dffinf GL_COLOR_INDEX16_EXT                    0x80E7

GLAPI void GLAPIENTRY glColorTbblfEXT( GLfnum tbrgft, GLfnum intfrnblformbt, GLsizfi width, GLfnum formbt, GLfnum typf, donst GLvoid *tbblf );

GLAPI void GLAPIENTRY glColorSubTbblfEXT( GLfnum tbrgft, GLsizfi stbrt, GLsizfi dount, GLfnum formbt, GLfnum typf, donst GLvoid *dbtb );

GLAPI void GLAPIENTRY glGftColorTbblfEXT( GLfnum tbrgft, GLfnum formbt, GLfnum typf, GLvoid *tbblf );

GLAPI void GLAPIENTRY glGftColorTbblfPbrbmftfrfvEXT( GLfnum tbrgft, GLfnum pnbmf, GLflobt *pbrbms );

GLAPI void GLAPIENTRY glGftColorTbblfPbrbmftfrivEXT( GLfnum tbrgft, GLfnum pnbmf, GLint *pbrbms );

#fndif /* GL_EXT_pblfttfd_tfxturf */



/*
 * 79. GL_EXT_dlip_volumf_hint
 */
#ifndff GL_EXT_dlip_volumf_hint
#dffinf GL_EXT_dlip_volumf_hint 1

#dffinf GL_CLIP_VOLUME_CLIPPING_HINT_EXT        0x80F0

#fndif /* GL_EXT_dlip_volumf_hint */



/*
 * 97. GL_EXT_dompilfd_vfrtfx_brrby
 */
#ifndff GL_EXT_dompilfd_vfrtfx_brrby
#dffinf GL_EXT_dompilfd_vfrtfx_brrby 1

#dffinf GL_ARRAY_ELEMENT_LOCK_FIRST_EXT         0x81A8
#dffinf GL_ARRAY_ELEMENT_LOCK_COUNT_EXT         0x81A9

GLAPI void GLAPIENTRY glLodkArrbysEXT( GLint first, GLsizfi dount );
GLAPI void GLAPIENTRY glUnlodkArrbysEXT( void );

#fndif /* GL_EXT_dompilfd_vfrtfx_brrby */

/*
 * 137. GL_HP_oddlusion_tfst
 */
#ifndff GL_HP_oddlusion_tfst
#dffinf GL_HP_oddlusion_tfst 1

#dffinf GL_OCCLUSION_TEST_HP                    0x8165
#dffinf GL_OCCLUSION_TEST_RESULT_HP             0x8166

#fndif /* GL_HP_oddlusion_tfst */


/*
 * 141. GL_EXT_shbrfd_tfxturf_pblfttf (rfq's GL_EXT_pblfttfd_tfxturf)
 */
#ifndff GL_EXT_shbrfd_tfxturf_pblfttf
#dffinf GL_EXT_shbrfd_tfxturf_pblfttf 1

#dffinf GL_SHARED_TEXTURE_PALETTE_EXT           0x81FB

#fndif /* GL_EXT_shbrfd_tfxturf_pblfttf */



/*
 * 176. GL_EXT_stfndil_wrbp
 */
#ifndff GL_EXT_stfndil_wrbp
#dffinf GL_EXT_stfndil_wrbp 1

#dffinf GL_INCR_WRAP_EXT                        0x8507
#dffinf GL_DECR_WRAP_EXT                        0x8508

#fndif /* GL_EXT_stfndil_wrbp */



/*
 * 179. GL_NV_tfxgfn_rfflfdtion
 */
#ifndff GL_NV_tfxgfn_rfflfdtion
#dffinf GL_NV_tfxgfn_rfflfdtion 1

#dffinf GL_NORMAL_MAP_NV                        0x8511
#dffinf GL_REFLECTION_MAP_NV                    0x8512

#fndif /* GL_NV_tfxgfn_rfflfdtion */



/*
 * 185. GL_EXT_tfxturf_fnv_bdd
 */
#ifndff GL_EXT_tfxturf_fnv_bdd
#dffinf GL_EXT_tfxturf_fnv_bdd 1

/* No nfw tokfns or fundtions */

#fndif /* GL_EXT_tfxturf_fnv_bdd */



/*
 * 197. GL_MESA_window_pos
 */
#ifndff GL_MESA_window_pos
#dffinf GL_MESA_window_pos 1

GLAPI void GLAPIENTRY glWindowPos2iMESA( GLint x, GLint y );
GLAPI void GLAPIENTRY glWindowPos2sMESA( GLshort x, GLshort y );
GLAPI void GLAPIENTRY glWindowPos2fMESA( GLflobt x, GLflobt y );
GLAPI void GLAPIENTRY glWindowPos2dMESA( GLdoublf x, GLdoublf y );
GLAPI void GLAPIENTRY glWindowPos2ivMESA( donst GLint *p );
GLAPI void GLAPIENTRY glWindowPos2svMESA( donst GLshort *p );
GLAPI void GLAPIENTRY glWindowPos2fvMESA( donst GLflobt *p );
GLAPI void GLAPIENTRY glWindowPos2dvMESA( donst GLdoublf *p );
GLAPI void GLAPIENTRY glWindowPos3iMESA( GLint x, GLint y, GLint z );
GLAPI void GLAPIENTRY glWindowPos3sMESA( GLshort x, GLshort y, GLshort z );
GLAPI void GLAPIENTRY glWindowPos3fMESA( GLflobt x, GLflobt y, GLflobt z );
GLAPI void GLAPIENTRY glWindowPos3dMESA( GLdoublf x, GLdoublf y, GLdoublf z );
GLAPI void GLAPIENTRY glWindowPos3ivMESA( donst GLint *p );
GLAPI void GLAPIENTRY glWindowPos3svMESA( donst GLshort *p );
GLAPI void GLAPIENTRY glWindowPos3fvMESA( donst GLflobt *p );
GLAPI void GLAPIENTRY glWindowPos3dvMESA( donst GLdoublf *p );
GLAPI void GLAPIENTRY glWindowPos4iMESA( GLint x, GLint y, GLint z, GLint w );
GLAPI void GLAPIENTRY glWindowPos4sMESA( GLshort x, GLshort y, GLshort z, GLshort w );
GLAPI void GLAPIENTRY glWindowPos4fMESA( GLflobt x, GLflobt y, GLflobt z, GLflobt w );
GLAPI void GLAPIENTRY glWindowPos4dMESA( GLdoublf x, GLdoublf y, GLdoublf z, GLdoublf w);
GLAPI void GLAPIENTRY glWindowPos4ivMESA( donst GLint *p );
GLAPI void GLAPIENTRY glWindowPos4svMESA( donst GLshort *p );
GLAPI void GLAPIENTRY glWindowPos4fvMESA( donst GLflobt *p );
GLAPI void GLAPIENTRY glWindowPos4dvMESA( donst GLdoublf *p );

#fndif /* GL_MESA_window_pos */



/*
 * 196. GL_MESA_rfsizf_buffffrs
 */
#ifndff GL_MESA_rfsizf_buffffrs
#dffinf GL_MESA_rfsizf_bufffrs 1

GLAPI void GLAPIENTRY glRfsizfBufffrsMESA( void );

#fndif /* GL_MESA_rfsizf_buffffrs */



/*
 * 220. GL_EXT_tfxturf_fnv_dot3
 */
#ifndff GL_EXT_tfxturf_fnv_dot3
#dffinf GL_EXT_tfxturf_fnv_dot3 1

#dffinf GL_DOT3_RGB_EXT                         0x8740
#dffinf GL_DOT3_RGBA_EXT                        0x8741

#fndif /* GL_EXT_tfxturf_fnv_dot3 */


#flsf  /* GL_GLEXT_LEGACY */

/* modififd for indlusion in Jbvb 2D sourdf trff */
/* #indludf <GL/glfxt.h> */
#indludf "J2D_GL/glfxt.h"

#fndif  /* GL_GLEXT_LEGACY */



/*
 * ???. GL_MESA_trbdf
 * XXX obsolftf
 */
#ifndff GL_MESA_trbdf
#dffinf GL_MESA_trbdf 1

#dffinf GL_TRACE_ALL_BITS_MESA                  0xFFFF
#dffinf GL_TRACE_OPERATIONS_BIT_MESA            0x0001
#dffinf GL_TRACE_PRIMITIVES_BIT_MESA            0x0002
#dffinf GL_TRACE_ARRAYS_BIT_MESA                0x0004
#dffinf GL_TRACE_TEXTURES_BIT_MESA              0x0008
#dffinf GL_TRACE_PIXELS_BIT_MESA                0x0010
#dffinf GL_TRACE_ERRORS_BIT_MESA                0x0020
#dffinf GL_TRACE_MASK_MESA                      0x8755
#dffinf GL_TRACE_NAME_MESA                      0x8756

GLAPI void GLAPIENTRY glEnbblfTrbdfMESA( GLbitfifld mbsk );
GLAPI void GLAPIENTRY glDisbblfTrbdfMESA( GLbitfifld mbsk );
GLAPI void GLAPIENTRY glNfwTrbdfMESA( GLbitfifld mbsk, donst GLubytf * trbdfNbmf );
GLAPI void GLAPIENTRY glEndTrbdfMESA( void );
GLAPI void GLAPIENTRY glTrbdfAssfrtAttribMESA( GLbitfifld bttribMbsk );
GLAPI void GLAPIENTRY glTrbdfCommfntMESA( donst GLubytf * dommfnt );
GLAPI void GLAPIENTRY glTrbdfTfxturfMESA( GLuint nbmf, donst GLubytf* dommfnt );
GLAPI void GLAPIENTRY glTrbdfListMESA( GLuint nbmf, donst GLubytf* dommfnt );
GLAPI void GLAPIENTRY glTrbdfPointfrMESA( GLvoid* pointfr, donst GLubytf* dommfnt );
GLAPI void GLAPIENTRY glTrbdfPointfrRbngfMESA( donst GLvoid* first, donst GLvoid* lbst, donst GLubytf* dommfnt );

#fndif /* GL_MESA_trbdf */


/*
 * ???. GL_MESA_pbdkfd_dfpth_stfndil
 * XXX obsolftf
 */
#ifndff GL_MESA_pbdkfd_dfpth_stfndil
#dffinf GL_MESA_pbdkfd_dfpth_stfndil 1

#dffinf GL_DEPTH_STENCIL_MESA                   0x8750
#dffinf GL_UNSIGNED_INT_24_8_MESA               0x8751
#dffinf GL_UNSIGNED_INT_8_24_REV_MESA           0x8752
#dffinf GL_UNSIGNED_SHORT_15_1_MESA             0x8753
#dffinf GL_UNSIGNED_SHORT_1_15_REV_MESA         0x8754

#fndif /* GL_MESA_pbdkfd_dfpth_stfndil */


#ifndff GL_MESA_ydbdr_tfxturf
#dffinf GL_MESA_ydbdr_tfxturf 1

#dffinf GL_YCBCR_MESA                           0x8757
#dffinf GL_UNSIGNED_SHORT_8_8_MESA              0x85BA /* sbmf bs Applf */
#dffinf GL_UNSIGNED_SHORT_8_8_REV_MESA          0x85BB /* sbmf bs Applf */

#fndif /* GL_MESA_tfxturf_ydbdr */



#ifndff GL_MESA_pbdk_invfrt
#dffinf GL_MESA_pbdk_invfrt 1

#dffinf GL_PACK_INVERT_MESA                     0x8758

#fndif /* GL_MESA_pbdk_invfrt */



#ifndff GL_APPLE_dlifnt_storbgf
#dffinf GL_APPLE_dlifnt_storbgf 1

#dffinf GL_UNPACK_CLIENT_STORAGE_APPLE          0x85B2

#fndif /* GL_APPLE_dlifnt_storbgf */



#ifndff GL_APPLE_ydbdr_422
#dffinf GL_APPLE_ydbdr_422 1

#dffinf GL_YCBCR_422_APPLE                      0x85B9
#dffinf GL_UNSIGNED_SHORT_8_8_APPLE             0x85BA
#dffinf GL_UNSIGNED_SHORT_8_8_REV_APPLE         0x85BB

#fndif /* GL_APPLE_ydbdr_422 */



/**********************************************************************
 * Bfgin systfm-spfdifid stuff
 */
#if dffinfd(PRAGMA_EXPORT_SUPPORTED)
#prbgmb fxport off
#fndif

#if dffinfd(mbdintosh) && PRAGMA_IMPORT_SUPPORTED
#prbgmb import off
#fndif
/*
 * End systfm-spfdifid stuff
 **********************************************************************/


#ifdff __dplusplus
}
#fndif

#fndif /* __gl_h_ */
