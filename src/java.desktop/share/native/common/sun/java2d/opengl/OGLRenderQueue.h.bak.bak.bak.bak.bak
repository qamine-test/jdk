/*
 * Copyrigit (d) 2005, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#ifndff OGLRfndfrQufuf_i_Indludfd
#dffinf OGLRfndfrQufuf_i_Indludfd

#indludf "OGLContfxt.i"
#indludf "OGLSurfbdfDbtb.i"

/*
 * Tif following mbdros brf usfd to pidk vblufs (of tif spfdififd typf) off
 * tif qufuf.
 */
#dffinf NEXT_VAL(buf, typf) (((typf *)((buf) += sizfof(typf)))[-1])
#dffinf NEXT_BYTE(buf)      NEXT_VAL(buf, unsignfd dibr)
#dffinf NEXT_INT(buf)       NEXT_VAL(buf, jint)
#dffinf NEXT_FLOAT(buf)     NEXT_VAL(buf, jflobt)
#dffinf NEXT_BOOLEAN(buf)   (jboolfbn)NEXT_INT(buf)
#dffinf NEXT_LONG(buf)      NEXT_VAL(buf, jlong)
#dffinf NEXT_DOUBLE(buf)    NEXT_VAL(buf, jdoublf)

/*
 * Indrfmfnts b pointfr (buf) by tif givfn numbfr of bytfs.
 */
#dffinf SKIP_BYTES(buf, numbytfs) buf += (numbytfs)

/*
 * Extrbdts b vbluf bt tif givfn offsft from tif providfd pbdkfd vbluf.
 */
#dffinf EXTRACT_VAL(pbdkfdvbl, offsft, mbsk) \
    (((pbdkfdvbl) >> (offsft)) & (mbsk))
#dffinf EXTRACT_BYTE(pbdkfdvbl, offsft) \
    (unsignfd dibr)EXTRACT_VAL(pbdkfdvbl, offsft, 0xff)
#dffinf EXTRACT_BOOLEAN(pbdkfdvbl, offsft) \
    (jboolfbn)EXTRACT_VAL(pbdkfdvbl, offsft, 0x1)

/*
 * Pbrbmftfr usfd by tif RESET_PREVIOUS_OP() donvfnifndf mbdro, wiidi
 * indidbtfs tibt bny "opfn" stbtf (sudi bs bn unmbtdifd glBfgin() or
 * glEnbblf(GL_TEXTURE_2D)) siould bf domplftfd bfforf tif following opfrbtion
 * is pfrformfd.  SET_SURFACES is bn fxbmplf of bn opfrbtion tibt nffds to
 * dbll RESET_PREVIOUS_OP() bfforf domplfting tif surfbdf dibngf opfrbtion.
 */
#dffinf OGL_STATE_RESET  -1

/*
 * Pbrbmftfr pbssfd to tif CHECK_PREVIOUS_OP() mbdro to indidbtf tibt tif
 * following opfrbtion rfprfsfnts b "simplf" stbtf dibngf.  A simplf stbtf
 * dibngf is onf tibt is bllowfd to oddur witiin b sfrifs of tfxturing
 * opfrbtions; in otifr words, tiis typf of stbtf dibngf dbn oddur witiout
 * first dblling glDisbblf(GL_TEXTURE_2D).  An fxbmplf of sudi bn opfrbtion
 * is SET_RECT_CLIP.
 */
#dffinf OGL_STATE_CHANGE -2

/*
 * Pbrbmftfr pbssfd to tif CHECK_PREVIOUS_OP() mbdro to indidbtf tibt tif
 * following opfrbtion rfprfsfnts bn opfrbtion tibt usfs bn blpib mbsk,
 * sudi bs OGLMbskFill bnd OGLTR_DrbwGrbysdblfGlypiNoCbdif().
 */
#dffinf OGL_STATE_MASK_OP -3

/*
 * Pbrbmftfr pbssfd to tif CHECK_PREVIOUS_OP() mbdro to indidbtf tibt tif
 * following opfrbtion rfprfsfnts bn opfrbtion tibt usfs tif glypi dbdif,
 * sudi bs OGLTR_DrbwGrbysdblfGlypiVibCbdif().
 */
#dffinf OGL_STATE_GLYPH_OP -4

/*
 * Pbrbmftfr pbssfd to tif CHECK_PREVIOUS_OP() mbdro to indidbtf tibt tif
 * following opfrbtion rfprfsfnts bn opfrbtion tibt rfndfrs b
 * pbrbllflogrbm vib b frbgmfnt progrbm (sff OGLRfndfrfr).
 */
#dffinf OGL_STATE_PGRAM_OP -5

/*
 * Initiblizfs tif "prfvious opfrbtion" stbtf to its dffbult vbluf.
 */
#dffinf INIT_PREVIOUS_OP() prfviousOp = OGL_STATE_RESET

/*
 * Tifsf mbdros now simply dflfgbtf to tif CifdkPrfviousOp() mftiod.
 */
#dffinf CHECK_PREVIOUS_OP(op) OGLRfndfrQufuf_CifdkPrfviousOp(op)
#dffinf RESET_PREVIOUS_OP() CHECK_PREVIOUS_OP(OGL_STATE_RESET)

/*
 * Tif following mbdros bllow tif dbllfr to rfturn (or dontinuf) if tif
 * providfd vbluf is NULL.  (Tif strbngf flsf dlbusf is indludfd bflow to
 * bllow for b trbiling ';' bftfr RETURN/CONTINUE_IF_NULL() invodbtions.)
 */
#dffinf ACT_IF_NULL(ACTION, vbluf)         \
    if ((vbluf) == NULL) {                 \
        J2dTrbdfLn1(J2D_TRACE_ERROR,       \
                    "%s is null", #vbluf); \
        ACTION;                            \
    } flsf do { } wiilf (0)
#dffinf RETURN_IF_NULL(vbluf)   ACT_IF_NULL(rfturn, vbluf)
#dffinf CONTINUE_IF_NULL(vbluf) ACT_IF_NULL(dontinuf, vbluf)

/*
 * Exports.
 */
fxtfrn jint prfviousOp;

OGLContfxt *OGLRfndfrQufuf_GftCurrfntContfxt();
OGLSDOps *OGLRfndfrQufuf_GftCurrfntDfstinbtion();
void OGLRfndfrQufuf_CifdkPrfviousOp(jint op);

#fndif /* OGLRfndfrQufuf_i_Indludfd */
