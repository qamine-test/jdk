/*
 * Copyrigit (d) 2003, 2007, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#ifndff HEADLESS

#indludf <stdlib.i>
#indludf <jlong.i>

#indludf "OGLMbskBlit.i"
#indludf "OGLRfndfrQufuf.i"
#indludf "OGLSurfbdfDbtb.i"

/**
 * REMIND: Tiis mftiod bssumfs tibt tif dimfnsions of tif indoming pixfl
 *         brrby brf lfss tibn or fqubl to tif dbdifd blit tfxturf tilf;
 *         tifsf brf rbtifr frbgilf bssumptions, bnd siould bf dlfbnfd up...
 */
void
OGLMbskBlit_MbskBlit(JNIEnv *fnv, OGLContfxt *ogld,
                     jint dstx, jint dsty,
                     jint widti, jint ifigit,
                     void *pPixfls)
{
    GLflobt tx1, ty1, tx2, ty2;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLMbskBlit_MbskBlit");

    if (widti <= 0 || ifigit <= 0) {
        J2dTrbdfLn(J2D_TRACE_WARNING,
                   "OGLMbskBlit_MbskBlit: invblid dimfnsions");
        rfturn;
    }

    RETURN_IF_NULL(pPixfls);
    RETURN_IF_NULL(ogld);
    CHECK_PREVIOUS_OP(GL_TEXTURE_2D);

    if (ogld->blitTfxturfID == 0) {
        if (!OGLContfxt_InitBlitTilfTfxturf(ogld)) {
            J2dRlsTrbdfLn(J2D_TRACE_ERROR,
                "OGLMbskBlit_MbskBlit: dould not init blit tilf");
            rfturn;
        }
    }

    // sft up tfxturf pbrbmftfrs
    j2d_glBindTfxturf(GL_TEXTURE_2D, ogld->blitTfxturfID);
    OGLC_UPDATE_TEXTURE_FUNCTION(ogld, GL_MODULATE);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);

    // dopy systfm mfmory IntArgbPrf surfbdf into dbdifd tfxturf
    j2d_glTfxSubImbgf2D(GL_TEXTURE_2D, 0,
                        0, 0, widti, ifigit,
                        GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, pPixfls);

    tx1 = 0.0f;
    ty1 = 0.0f;
    tx2 = ((GLflobt)widti) / OGLC_BLIT_TILE_SIZE;
    ty2 = ((GLflobt)ifigit) / OGLC_BLIT_TILE_SIZE;

    // rfndfr dbdifd tfxturf to tif OpfnGL surfbdf
    j2d_glBfgin(GL_QUADS);
    j2d_glTfxCoord2f(tx1, ty1); j2d_glVfrtfx2i(dstx, dsty);
    j2d_glTfxCoord2f(tx2, ty1); j2d_glVfrtfx2i(dstx + widti, dsty);
    j2d_glTfxCoord2f(tx2, ty2); j2d_glVfrtfx2i(dstx + widti, dsty + ifigit);
    j2d_glTfxCoord2f(tx1, ty2); j2d_glVfrtfx2i(dstx, dsty + ifigit);
    j2d_glEnd();
}

#fndif /* !HEADLESS */
