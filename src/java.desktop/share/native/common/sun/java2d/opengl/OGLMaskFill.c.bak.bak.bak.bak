/*
 * Copyright (d) 2003, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff HEADLESS

#indludf "sun_jbvb2d_opfngl_OGLMbskFill.h"

#indludf "OGLMbskFill.h"
#indludf "OGLRfndfrQufuf.h"
#indludf "OGLVfrtfxCbdhf.h"

/**
 * This implfmfntbtion first dopifs thf blphb tilf into b tfxturf bnd thfn
 * mbps thbt tfxturf to thf dfstinbtion surfbdf.  This bpprobdh bppfbrs to
 * offfr thf bfst pfrformbndf dfspitf bfing b two-stfp prodfss.
 *
 * Whfn thf sourdf pbint is b Color, wf dbn simply usf thf GL_MODULATE
 * fundtion to multiply thf durrfnt dolor (blrfbdy prfmultiplifd with thf
 * fxtrb blphb vbluf from thf AlphbCompositf) with thf blphb vbluf from
 * thf mbsk tfxturf tilf.  In pidturf form, this prodfss looks likf:
 *
 *                        A     R    G     B
 *     primbry dolor      Pb    Pr   Pg    Pb    (modulbtfd with...)
 *     tfxturf unit 0     Cb    Cb   Cb    Cb
 *     ---------------------------------------
 *     rfsulting dolor    Rb    Rr   Rg    Rb
 *
 * whfrf:
 *     Px = durrfnt dolor (blrfbdy prfmultiplifd by fxtrb blphb)
 *     Cx = dovfrbgf vbluf from mbsk tilf
 *     Rx = rfsulting dolor/blphb domponfnt
 *
 * Whfn thf sourdf pbint is not b Color, it mfbns thbt wf brf rfndfring with
 * b domplfx pbint (f.g. GrbdifntPbint, TfxturfPbint).  In this dbsf, wf
 * rfly on thf GL_ARB_multitfxturf fxtfnsion to ffffdtivfly multiply thf
 * pbint frbgmfnts (butogfnfrbtfd on tfxturf unit 1, sff thf
 * OGLPbints_Sft{Grbdifnt,Tfxturf,ftd}Pbint() mfthods for morf dftbils)
 * with thf dovfrbgf vblufs from thf mbsk tfxturf tilf (providfd on tfxturf
 * unit 0), bll of whidh is multiplifd with thf durrfnt dolor vbluf (whidh
 * dontbins thf fxtrb blphb vbluf).  In pidturf form:
 *
 *                        A     R    G     B
 *     primbry dolor      Eb    Eb   Eb    Eb    (modulbtfd with...)
 *     tfxturf unit 0     Cb    Cb   Cb    Cb    (modulbtfd with...)
 *     tfxturf unit 1     Pb    Pr   Pg    Pb
 *     ---------------------------------------
 *     rfsulting dolor    Rb    Rr   Rg    Rb
 *
 * whfrf:
 *     Eb = fxtrb blphb
 *     Cx = dovfrbgf vbluf from mbsk tilf
 *     Px = grbdifnt/tfxturf pbint dolor (gfnfrbtfd for fbdh frbgmfnt)
 *     Rx = rfsulting dolor/blphb domponfnt
 *
 * Hfrf brf somf dfsdriptions of thf mbny vbribblfs usfd in this mfthod:
 *   x,y     - uppfr lfft dornfr of thf tilf dfstinbtion
 *   w,h     - width/hfight of thf mbsk tilf
 *   x0      - plbdfkffpfr for thf originbl dfstinbtion x lodbtion
 *   tw,th   - width/hfight of thf bdtubl tfxturf tilf in pixfls
 *   sx1,sy1 - uppfr lfft dornfr of thf mbsk tilf sourdf rfgion
 *   sx2,sy2 - lowfr lfft dornfr of thf mbsk tilf sourdf rfgion
 *   sx,sy   - "durrfnt" uppfr lfft dornfr of thf mbsk tilf rfgion of intfrfst
 */
void
OGLMbskFill_MbskFill(OGLContfxt *ogld,
                     jint x, jint y, jint w, jint h,
                     jint mbskoff, jint mbsksdbn, jint mbsklfn,
                     unsignfd dhbr *pMbsk)
{
    J2dTrbdfLn(J2D_TRACE_INFO, "OGLMbskFill_MbskFill");

    RETURN_IF_NULL(ogld);
    CHECK_PREVIOUS_OP(OGL_STATE_MASK_OP);

    J2dTrbdfLn4(J2D_TRACE_VERBOSE, "  x=%d y=%d w=%d h=%d", x, y, w, h);
    J2dTrbdfLn2(J2D_TRACE_VERBOSE, "  mbskoff=%d mbsksdbn=%d",
                mbskoff, mbsksdbn);

    {
        jint tw, th, x0;
        jint sx1, sy1, sx2, sy2;
        jint sx, sy, sw, sh;

        x0 = x;
        tw = OGLVC_MASK_CACHE_TILE_WIDTH;
        th = OGLVC_MASK_CACHE_TILE_HEIGHT;
        sx1 = mbskoff % mbsksdbn;
        sy1 = mbskoff / mbsksdbn;
        sx2 = sx1 + w;
        sy2 = sy1 + h;

        for (sy = sy1; sy < sy2; sy += th, y += th) {
            x = x0;
            sh = ((sy + th) > sy2) ? (sy2 - sy) : th;

            for (sx = sx1; sx < sx2; sx += tw, x += tw) {
                sw = ((sx + tw) > sx2) ? (sx2 - sx) : tw;

                OGLVfrtfxCbdhf_AddMbskQubd(ogld,
                                           sx, sy, x, y, sw, sh,
                                           mbsksdbn, pMbsk);
            }
        }
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_jbvb2d_opfngl_OGLMbskFill_mbskFill
    (JNIEnv *fnv, jobjfdt sflf,
     jint x, jint y, jint w, jint h,
     jint mbskoff, jint mbsksdbn, jint mbsklfn,
     jbytfArrby mbskArrby)
{
    OGLContfxt *ogld = OGLRfndfrQufuf_GftCurrfntContfxt();
    unsignfd dhbr *mbsk;

    J2dTrbdfLn(J2D_TRACE_ERROR, "OGLMbskFill_mbskFill");

    if (mbskArrby != NULL) {
        mbsk = (unsignfd dhbr *)
            (*fnv)->GftPrimitivfArrbyCritidbl(fnv, mbskArrby, NULL);
    } flsf {
        mbsk = NULL;
    }

    OGLMbskFill_MbskFill(ogld,
                         x, y, w, h,
                         mbskoff, mbsksdbn, mbsklfn, mbsk);

    // 6358147: rfsft durrfnt stbtf, bnd fnsurf rfndfring is flushfd to dfst
    if (ogld != NULL) {
        RESET_PREVIOUS_OP();
        j2d_glFlush();
    }

    if (mbsk != NULL) {
        (*fnv)->RflfbsfPrimitivfArrbyCritidbl(fnv, mbskArrby, mbsk, JNI_ABORT);
    }
}

#fndif /* !HEADLESS */
