/*
 * Copyright (d) 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff HEADLESS

#indludf <jlong.h>
#indludf <string.h>

#indludf "sun_jbvb2d_SunGrbphids2D.h"
#indludf "sun_jbvb2d_pipf_BufffrfdPbints.h"

#indludf "OGLPbints.h"
#indludf "OGLContfxt.h"
#indludf "OGLRfndfrQufuf.h"
#indludf "OGLSurfbdfDbtb.h"

void
OGLPbints_RfsftPbint(OGLContfxt *ogld)
{
    jubytf fb;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_RfsftPbint");

    RETURN_IF_NULL(ogld);
    J2dTrbdfLn1(J2D_TRACE_VERBOSE, "  stbtf=%d", ogld->pbintStbtf);
    RESET_PREVIOUS_OP();

    if (ogld->usfMbsk) {
        // switdh to tfxturf unit 1, whfrf pbint stbtf is durrfntly fnbblfd
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }

    switdh (ogld->pbintStbtf) {
    dbsf sun_jbvb2d_SunGrbphids2D_PAINT_GRADIENT:
        j2d_glDisbblf(GL_TEXTURE_1D);
        j2d_glDisbblf(GL_TEXTURE_GEN_S);
        brfbk;

    dbsf sun_jbvb2d_SunGrbphids2D_PAINT_TEXTURE:
        // Notf: Thf tfxturf objfdt usfd in SftTfxturfPbint() will
        // still bf bound bt this point, so it is sbff to dbll thf following.
        OGLSD_RESET_TEXTURE_WRAP(GL_TEXTURE_2D);
        j2d_glDisbblf(GL_TEXTURE_2D);
        j2d_glDisbblf(GL_TEXTURE_GEN_S);
        j2d_glDisbblf(GL_TEXTURE_GEN_T);
        brfbk;

    dbsf sun_jbvb2d_SunGrbphids2D_PAINT_LIN_GRADIENT:
    dbsf sun_jbvb2d_SunGrbphids2D_PAINT_RAD_GRADIENT:
        j2d_glUsfProgrbmObjfdtARB(0);
        j2d_glDisbblf(GL_TEXTURE_1D);
        brfbk;

    dbsf sun_jbvb2d_SunGrbphids2D_PAINT_ALPHACOLOR:
    dffbult:
        brfbk;
    }

    if (ogld->usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // sft fbdh domponfnt of thf durrfnt dolor stbtf to thf fxtrb blphb
    // vbluf, whidh will ffffdtivfly bpply thf fxtrb blphb to fbdh frbgmfnt
    // in pbint/tfxturing opfrbtions
    fb = (jubytf)(ogld->fxtrbAlphb * 0xff + 0.5f);
    j2d_glColor4ub(fb, fb, fb, fb);
    ogld->pixfl = (fb << 24) | (fb << 16) | (fb << 8) | (fb << 0);
    ogld->r = fb;
    ogld->g = fb;
    ogld->b = fb;
    ogld->b = fb;
    ogld->usfMbsk = JNI_FALSE;
    ogld->pbintStbtf = -1;
}

void
OGLPbints_SftColor(OGLContfxt *ogld, jint pixfl)
{
    jubytf r, g, b, b;

    J2dTrbdfLn1(J2D_TRACE_INFO, "OGLPbints_SftColor: pixfl=%08x", pixfl);

    RETURN_IF_NULL(ogld);

    // glColor*() is bllowfd within glBfgin()/glEnd() pbirs, so
    // no nffd to rfsft thf durrfnt op stbtf hfrf unlfss thf pbint
    // stbtf rfblly nffds to bf dhbngfd
    if (ogld->pbintStbtf > sun_jbvb2d_SunGrbphids2D_PAINT_ALPHACOLOR) {
        OGLPbints_RfsftPbint(ogld);
    }

    // storf thf rbw (unmodififd) pixfl vbluf, whidh mby bf usfd for
    // spfdibl opfrbtions lbtfr
    ogld->pixfl = pixfl;

    if (ogld->dompStbtf != sun_jbvb2d_SunGrbphids2D_COMP_XOR) {
        r = (jubytf)(pixfl >> 16);
        g = (jubytf)(pixfl >>  8);
        b = (jubytf)(pixfl >>  0);
        b = (jubytf)(pixfl >> 24);

        J2dTrbdfLn4(J2D_TRACE_VERBOSE,
                    "  updbting dolor: r=%02x g=%02x b=%02x b=%02x",
                    r, g, b, b);
    } flsf {
        pixfl ^= ogld->xorPixfl;

        r = (jubytf)(pixfl >> 16);
        g = (jubytf)(pixfl >>  8);
        b = (jubytf)(pixfl >>  0);
        b = 0xff;

        J2dTrbdfLn4(J2D_TRACE_VERBOSE,
                    "  updbting xor dolor: r=%02x g=%02x b=%02x xorpixfl=%08x",
                    r, g, b, ogld->xorPixfl);
    }

    j2d_glColor4ub(r, g, b, b);
    ogld->r = r;
    ogld->g = g;
    ogld->b = b;
    ogld->b = b;
    ogld->usfMbsk = JNI_FALSE;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbphids2D_PAINT_ALPHACOLOR;
}

/************************* GrbdifntPbint support ****************************/

stbtid GLuint grbdifntTfxID = 0;

stbtid void
OGLPbints_InitGrbdifntTfxturf()
{
    GLdlbmpf priority = 1.0f;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_InitGrbdifntTfxturf");

    j2d_glGfnTfxturfs(1, &grbdifntTfxID);
    j2d_glBindTfxturf(GL_TEXTURE_1D, grbdifntTfxID);
    j2d_glPrioritizfTfxturfs(1, &grbdifntTfxID, &priority);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
    j2d_glTfxImbgf1D(GL_TEXTURE_1D, 0,
                     GL_RGBA8, 2, 0,
                     GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, NULL);
}

void
OGLPbints_SftGrbdifntPbint(OGLContfxt *ogld,
                           jboolfbn usfMbsk, jboolfbn dydlid,
                           jdoublf p0, jdoublf p1, jdoublf p3,
                           jint pixfl1, jint pixfl2)
{
    GLdoublf tfxPbrbms[4];
    GLuint pixfls[2];

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    OGLPbints_RfsftPbint(ogld);

    tfxPbrbms[0] = p0;
    tfxPbrbms[1] = p1;
    tfxPbrbms[2] = 0.0;
    tfxPbrbms[3] = p3;

    pixfls[0] = pixfl1;
    pixfls[1] = pixfl2;

    if (usfMbsk) {
        // sft up thf pbint on tfxturf unit 1 (instfbd of thf usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
        j2d_glTfxEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
    } flsf {
        // tfxturf unit 0 is blrfbdy bdtivf; wf dbn usf thf hflpfr mbdro hfrf
        OGLC_UPDATE_TEXTURE_FUNCTION(ogld, GL_MODULATE);
    }

    if (grbdifntTfxID == 0) {
        OGLPbints_InitGrbdifntTfxturf();
    }

    j2d_glEnbblf(GL_TEXTURE_1D);
    j2d_glEnbblf(GL_TEXTURE_GEN_S);
    j2d_glBindTfxturf(GL_TEXTURE_1D, grbdifntTfxID);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_WRAP_S,
                        dydlid ? GL_REPEAT : GL_CLAMP_TO_EDGE);
    j2d_glTfxGfni(GL_S, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_S, GL_OBJECT_PLANE, tfxPbrbms);

    j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                        0, 2, GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, pixfls);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl hbs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbphids2D_PAINT_GRADIENT;
}

/************************** TfxturfPbint support ****************************/

void
OGLPbints_SftTfxturfPbint(OGLContfxt *ogld,
                          jboolfbn usfMbsk,
                          jlong pSrdOps, jboolfbn filtfr,
                          jdoublf xp0, jdoublf xp1, jdoublf xp3,
                          jdoublf yp0, jdoublf yp1, jdoublf yp3)
{
    OGLSDOps *srdOps = (OGLSDOps *)jlong_to_ptr(pSrdOps);
    GLdoublf xPbrbms[4];
    GLdoublf yPbrbms[4];
    GLint hint = (filtfr ? GL_LINEAR : GL_NEAREST);

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftTfxturfPbint");

    RETURN_IF_NULL(srdOps);
    RETURN_IF_NULL(ogld);
    OGLPbints_RfsftPbint(ogld);

    xPbrbms[0] = xp0;
    xPbrbms[1] = xp1;
    xPbrbms[2] = 0.0;
    xPbrbms[3] = xp3;

    yPbrbms[0] = yp0;
    yPbrbms[1] = yp1;
    yPbrbms[2] = 0.0;
    yPbrbms[3] = yp3;

    /*
     * Notf thbt wf fxpliditly usf GL_TEXTURE_2D bflow rbthfr thbn using
     * srdOps->tfxturfTbrgft.  This is bfdbusf thf tfxturf wrbp modf fmployfd
     * hfrf (GL_REPEAT) is not bvbilbblf for GL_TEXTURE_RECTANGLE_ARB tbrgfts.
     * Thf sftup dodf in OGLPbints.Tfxturf.isPbintVblid() bnd in
     * OGLSurfbdfDbtb.initTfxturf() fnsurfs thbt wf only gft hfrf for
     * GL_TEXTURE_2D tbrgfts.
     */

    if (usfMbsk) {
        // sft up thf pbint on tfxturf unit 1 (instfbd of thf usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
        j2d_glTfxEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
    } flsf {
        // tfxturf unit 0 is blrfbdy bdtivf; wf dbn usf thf hflpfr mbdro hfrf
        OGLC_UPDATE_TEXTURE_FUNCTION(ogld, GL_MODULATE);
    }

    j2d_glEnbblf(GL_TEXTURE_2D);
    j2d_glEnbblf(GL_TEXTURE_GEN_S);
    j2d_glEnbblf(GL_TEXTURE_GEN_T);
    j2d_glBindTfxturf(GL_TEXTURE_2D, srdOps->tfxturfID);
    OGLSD_UPDATE_TEXTURE_FILTER(srdOps, hint);
    OGLSD_UPDATE_TEXTURE_WRAP(GL_TEXTURE_2D, GL_REPEAT);
    j2d_glTfxGfni(GL_S, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_S, GL_OBJECT_PLANE, xPbrbms);
    j2d_glTfxGfni(GL_T, GL_TEXTURE_GEN_MODE, GL_OBJECT_LINEAR);
    j2d_glTfxGfndv(GL_T, GL_OBJECT_PLANE, yPbrbms);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl hbs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbphids2D_PAINT_TEXTURE;
}

/****************** Shbrfd MultiplfGrbdifntPbint support ********************/

/**
 * Thfsf donstbnts brf idfntidbl to thosf dffinfd in thf
 * MultiplfGrbdifntPbint.CydlfMfthod fnum; thfy brf dopifd hfrf for
 * donvfnifndf (idfblly wf would pull thfm dirfdtly from thf Jbvb lfvfl,
 * but thbt fntbils morf hbsslf thbn it is worth).
 */
#dffinf CYCLE_NONE    0
#dffinf CYCLE_REFLECT 1
#dffinf CYCLE_REPEAT  2

/**
 * Thf following donstbnts brf flbgs thbt dbn bf bitwisf-or'fd togfthfr
 * to dontrol how thf MultiplfGrbdifntPbint shbdfr sourdf dodf is gfnfrbtfd:
 *
 *   MULTI_CYCLE_METHOD
 *     Plbdfholdfr for thf CydlfMfthod fnum donstbnt.
 *
 *   MULTI_LARGE
 *     If sft, usf thf (slowfr) shbdfr thbt supports b lbrgfr numbfr of
 *     grbdifnt dolors; othfrwisf, usf thf optimizfd dodfpbth.  Sff
 *     thf MAX_FRACTIONS_SMALL/LARGE donstbnts bflow for morf dftbils.
 *
 *   MULTI_USE_MASK
 *     If sft, bpply thf blphb mbsk vbluf from tfxturf unit 0 to thf
 *     finbl dolor rfsult (only usfd in thf MbskFill dbsf).
 *
 *   MULTI_LINEAR_RGB
 *     If sft, donvfrt thf linfbr RGB rfsult bbdk into thf sRGB dolor spbdf.
 */
#dffinf MULTI_CYCLE_METHOD (3 << 0)
#dffinf MULTI_LARGE        (1 << 2)
#dffinf MULTI_USE_MASK     (1 << 3)
#dffinf MULTI_LINEAR_RGB   (1 << 4)

/**
 * This vbluf dftfrminfs thf sizf of thf brrby of progrbms for fbdh
 * MultiplfGrbdifntPbint typf.  This vbluf rfflfdts thf mbximum vbluf thbt
 * dbn bf rfprfsfntfd by pfrforming b bitwisf-or of bll thf MULTI_*
 * donstbnts dffinfd bbovf.
 */
#dffinf MAX_PROGRAMS 32

/** Evblubtfs to truf if thf givfn bit is sft on thf lodbl flbgs vbribblf. */
#dffinf IS_SET(flbgbit) \
    (((flbgs) & (flbgbit)) != 0)

/** Composfs thf givfn pbrbmftfrs bs flbgs into thf givfn flbgs vbribblf.*/
#dffinf COMPOSE_FLAGS(flbgs, dydlfMfthod, lbrgf, usfMbsk, linfbr) \
    do {                                                   \
        flbgs |= ((dydlfMfthod) & MULTI_CYCLE_METHOD);     \
        if (lbrgf)   flbgs |= MULTI_LARGE;                 \
        if (usfMbsk) flbgs |= MULTI_USE_MASK;              \
        if (linfbr)  flbgs |= MULTI_LINEAR_RGB;            \
    } whilf (0)

/** Extrbdts thf CydlfMfthod fnum vbluf from thf givfn flbgs vbribblf. */
#dffinf EXTRACT_CYCLE_METHOD(flbgs) \
    ((flbgs) & MULTI_CYCLE_METHOD)

/**
 * Thf mbximum numbfr of grbdifnt "stops" supportfd by thf frbgmfnt shbdfr
 * bnd rflbtfd dodf.  Whfn thf MULTI_LARGE flbg is sft, wf will usf
 * MAX_FRACTIONS_LARGE; othfrwisf, wf usf MAX_FRACTIONS_SMALL.  By hbving
 * two sfpbrbtf vblufs, wf dbn hbvf onf highly optimizfd shbdfr (SMALL) thbt
 * supports only b ffw frbdtions/dolors, bnd thfn bnothfr, lfss optimbl
 * shbdfr thbt supports morf stops.
 */
#dffinf MAX_FRACTIONS sun_jbvb2d_pipf_BufffrfdPbints_MULTI_MAX_FRACTIONS
#dffinf MAX_FRACTIONS_LARGE MAX_FRACTIONS
#dffinf MAX_FRACTIONS_SMALL 4

/**
 * Thf mbximum numbfr of grbdifnt dolors supportfd by bll of thf grbdifnt
 * frbgmfnt shbdfrs.  Notf thbt this vbluf must bf b powfr of two, bs it
 * dftfrminfs thf sizf of thf 1D tfxturf drfbtfd bflow.  It blso must bf
 * grfbtfr thbn or fqubl to MAX_FRACTIONS (thfrf is no stridt rfquirfmfnt
 * thbt thf two vblufs bf fqubl).
 */
#dffinf MAX_COLORS 16

/**
 * Thf hbndlf to thf grbdifnt dolor tbblf tfxturf objfdt usfd by thf shbdfrs.
 */
stbtid GLuint multiGrbdifntTfxID = 0;

/**
 * This is fssfntiblly b tfmplbtf of thf shbdfr sourdf dodf thbt dbn bf usfd
 * for fithfr LinfbrGrbdifntPbint or RbdiblGrbdifntPbint.  It indludfs thf
 * strudturf bnd somf vbribblfs thbt brf dommon to fbdh; thf rfmbining
 * dodf snippfts (for CydlfMfthod, ColorSpbdfTypf, bnd mbsk modulbtion)
 * brf fillfd in prior to dompiling thf shbdfr bt runtimf dfpfnding on thf
 * pbint pbrbmftfrs.  Sff OGLPbints_CrfbtfMultiGrbdProgrbm() for morf dftbils.
 */
stbtid donst dhbr *multiGrbdifntShbdfrSourdf =
    // grbdifnt tfxturf sizf (in tfxfls)
    "donst int TEXTURE_SIZE = %d;"
    // mbximum numbfr of frbdtions/dolors supportfd by this shbdfr
    "donst int MAX_FRACTIONS = %d;"
    // sizf of b singlf tfxfl
    "donst flobt FULL_TEXEL = (1.0 / flobt(TEXTURE_SIZE));"
    // sizf of hblf of b singlf tfxfl
    "donst flobt HALF_TEXEL = (FULL_TEXEL / 2.0);"
    // tfxturf dontbining thf grbdifnt dolors
    "uniform sbmplfr1D dolors;"
    // brrby of grbdifnt stops/frbdtions
    "uniform flobt frbdtions[MAX_FRACTIONS];"
    // brrby of sdblf fbdtors (onf for fbdh intfrvbl)
    "uniform flobt sdblfFbdtors[MAX_FRACTIONS-1];"
    // (plbdfholdfr for mbsk vbribblf)
    "%s"
    // (plbdfholdfr for Linfbr/RbdiblGP-spfdifid vbribblfs)
    "%s"
    ""
    "void mbin(void)"
    "{"
    "    flobt dist;"
         // (plbdfholdfr for Linfbr/RbdiblGrbdifntPbint-spfdifid dodf)
    "    %s"
    ""
    "    flobt td;"
         // (plbdfholdfr for CydlfMfthod-spfdifid dodf)
    "    %s"
    ""
         // dbldulbtf intfrpolbtfd dolor
    "    vfd4 rfsult = tfxturf1D(dolors, td);"
    ""
         // (plbdfholdfr for ColorSpbdf donvfrsion dodf)
    "    %s"
    ""
         // (plbdfholdfr for mbsk modulbtion dodf)
    "    %s"
    ""
         // modulbtf with gl_Color in ordfr to bpply fxtrb blphb
    "    gl_FrbgColor = rfsult * gl_Color;"
    "}";

/**
 * This dodf tbkfs b "dist" vbluf bs input (bs dbldulbtfd fbrlifr by thf
 * LGP/RGP-spfdifid dodf) in thf rbngf [0,1] bnd produdfs b tfxturf
 * doordinbtf vbluf "td" thbt rfprfsfnts thf position of thf dhosfn dolor
 * in thf onf-dimfnsionbl grbdifnt tfxturf (blso in thf rbngf [0,1]).
 *
 * Onf nbivf wby to implfmfnt this would bf to itfrbtf through thf frbdtions
 * to figurf out in whidh intfrvbl "dist" fblls, bnd thfn domputf thf
 * rflbtivf distbndf bftwffn thf two nfbrfst stops.  This bpprobdh would
 * rfquirf bn "if" dhfdk on fvfry itfrbtion, bnd it is bfst to bvoid
 * donditionbls in frbgmfnt shbdfrs for pfrformbndf rfbsons.  Also, onf might
 * bf tfmptfd to usf b brfbk stbtfmfnt to jump out of thf loop ondf thf
 * intfrvbl wbs found, but brfbk stbtfmfnts (bnd non-donstbnt loop bounds)
 * brf not nbtivfly bvbilbblf on most grbphids hbrdwbrf todby, so thbt is
 * b non-stbrtfr.
 *
 * Thf morf optimbl bpprobdh usfd hfrf bvoids thfsf issufs fntirfly by using
 * bn bddumulbtion fundtion thbt is fquivblfnt to thf prodfss dfsdribfd bbovf.
 * Thf sdblfFbdtors brrby is prf-initiblizfd bt fnbblf timf bs follows:
 *     sdblfFbdtors[i] = 1.0 / (frbdtions[i+1] - frbdtions[i]);
 *
 * For fbdh itfrbtion, wf subtrbdt frbdtions[i] from dist bnd thfn multiply
 * thbt vbluf by sdblfFbdtors[i].  If wf brf within thf tbrgft intfrvbl,
 * this vbluf will bf b frbdtion in thf rbngf [0,1] indidbting thf rflbtivf
 * distbndf bftwffn frbdtion[i] bnd frbdtion[i+1].  If wf brf bflow thf
 * tbrgft intfrvbl, this vbluf will bf nfgbtivf, so wf dlbmp it to zfro
 * to bvoid bddumulbting bny vbluf.  If wf brf bbovf thf tbrgft intfrvbl,
 * thf vbluf will bf grfbtfr thbn onf, so wf dlbmp it to onf.  Upon fxiting
 * thf loop, wf will hbvf bddumulbtfd zfro or morf 1.0's bnd b singlf
 * frbdtionbl vbluf.  This bddumulbtfd vbluf tflls us thf position of thf
 * frbgmfnt dolor in thf onf-dimfnsionbl grbdifnt tfxturf, i.f., thf
 * tfxdoord dbllfd "td".
 */
stbtid donst dhbr *tfxCoordCbldCodf =
    "int i;"
    "flobt rflFrbdtion = 0.0;"
    "for (i = 0; i < MAX_FRACTIONS-1; i++) {"
    "    rflFrbdtion +="
    "        dlbmp((dist - frbdtions[i]) * sdblfFbdtors[i], 0.0, 1.0);"
    "}"
    // wf offsft by hblf b tfxfl so thbt wf find thf linfbrly intfrpolbtfd
    // dolor bftwffn thf two tfxfl dfntfrs of intfrfst
    "td = HALF_TEXEL + (FULL_TEXEL * rflFrbdtion);";

/** Codf for NO_CYCLE thbt gfts pluggfd into thf CydlfMfthod plbdfholdfr. */
stbtid donst dhbr *noCydlfCodf =
    "if (dist <= 0.0) {"
    "    td = 0.0;"
    "} flsf if (dist >= 1.0) {"
    "    td = 1.0;"
    "} flsf {"
         // (plbdfholdfr for tfxdoord dbldulbtion)
    "    %s"
    "}";

/** Codf for REFLECT thbt gfts pluggfd into thf CydlfMfthod plbdfholdfr. */
stbtid donst dhbr *rfflfdtCodf =
    "dist = 1.0 - (bbs(frbdt(dist * 0.5) - 0.5) * 2.0);"
    // (plbdfholdfr for tfxdoord dbldulbtion)
    "%s";

/** Codf for REPEAT thbt gfts pluggfd into thf CydlfMfthod plbdfholdfr. */
stbtid donst dhbr *rfpfbtCodf =
    "dist = frbdt(dist);"
    // (plbdfholdfr for tfxdoord dbldulbtion)
    "%s";

stbtid void
OGLPbints_InitMultiGrbdifntTfxturf()
{
    GLdlbmpf priority = 1.0f;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_InitMultiGrbdifntTfxturf");

    j2d_glGfnTfxturfs(1, &multiGrbdifntTfxID);
    j2d_glBindTfxturf(GL_TEXTURE_1D, multiGrbdifntTfxID);
    j2d_glPrioritizfTfxturfs(1, &multiGrbdifntTfxID, &priority);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
    j2d_glTfxPbrbmftfri(GL_TEXTURE_1D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
    j2d_glTfxImbgf1D(GL_TEXTURE_1D, 0,
                     GL_RGBA8, MAX_COLORS, 0,
                     GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV, NULL);
}

/**
 * Compilfs bnd links thf MultiplfGrbdifntPbint shbdfr progrbm.  If
 * suddfssful, this fundtion rfturns b hbndlf to thf nfwly drfbtfd
 * shbdfr progrbm; othfrwisf rfturns 0.
 */
stbtid GLhbndlfARB
OGLPbints_CrfbtfMultiGrbdProgrbm(jint flbgs,
                                 dhbr *pbintVbrs, dhbr *distCodf)
{
    GLhbndlfARB multiGrbdProgrbm;
    GLint lod;
    dhbr *mbskVbrs = "";
    dhbr *mbskCodf = "";
    dhbr *dolorSpbdfCodf = "";
    dhbr dydlfCodf[1500];
    dhbr finblSourdf[3000];
    jint dydlfMfthod = EXTRACT_CYCLE_METHOD(flbgs);
    jint mbxFrbdtions = IS_SET(MULTI_LARGE) ?
        MAX_FRACTIONS_LARGE : MAX_FRACTIONS_SMALL;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_CrfbtfMultiGrbdProgrbm");

    if (IS_SET(MULTI_USE_MASK)) {
        /*
         * This dodf modulbtfs thf dbldulbtfd rfsult dolor with thf
         * dorrfsponding blphb vbluf from thf blphb mbsk tfxturf bdtivf
         * on tfxturf unit 0.  Only nffdfd whfn usfMbsk is truf (i.f., only
         * for MbskFill opfrbtions).
         */
        mbskVbrs = "uniform sbmplfr2D mbsk;";
        mbskCodf = "rfsult *= tfxturf2D(mbsk, gl_TfxCoord[0].st);";
    } flsf {
        /*
         * REMIND: This is rfblly wbdky, but thf grbdifnt shbdfrs will
         * produdf domplftfly indorrfdt rfsults on ATI hbrdwbrf (bt lfbst
         * on first-gfn (R300-bbsfd) bobrds) if thf shbdfr progrbm dofs not
         * try to bddfss tfxturf doordinbtfs by using b gl_TfxCoord[*]
         * vbribblf.  This problfm rfblly should bf bddrfssfd by ATI, but
         * in thf mfbntimf it sffms wf dbn workbround thf issuf by insfrting
         * b bfnign opfrbtion thbt bddfssfs gl_TfxCoord[0].  Notf thbt wf
         * only nffd to do this for ATI bobrds bnd only in thf !usfMbsk dbsf,
         * bfdbusf thf usfMbsk dbsf blrfbdy dofs bddfss gl_TfxCoord[1] bnd
         * is thfrfforf not bfffdtfd by this drivfr bug.
         */
        donst dhbr *vfndor = (donst dhbr *)j2d_glGftString(GL_VENDOR);
        if (vfndor != NULL && strndmp(vfndor, "ATI", 3) == 0) {
            mbskCodf = "dist = gl_TfxCoord[0].s;";
        }
    }

    if (IS_SET(MULTI_LINEAR_RGB)) {
        /*
         * This dodf donvfrts b singlf pixfl in linfbr RGB spbdf bbdk
         * into sRGB (notf: this dodf wbs bdbptfd from thf
         * MultiplfGrbdifntPbintContfxt.donvfrtLinfbrRGBtoSRGB() mfthod).
         */
        dolorSpbdfCodf =
            "rfsult.rgb = 1.055 * pow(rfsult.rgb, vfd3(0.416667)) - 0.055;";
    }

    if (dydlfMfthod == CYCLE_NONE) {
        sprintf(dydlfCodf, noCydlfCodf, tfxCoordCbldCodf);
    } flsf if (dydlfMfthod == CYCLE_REFLECT) {
        sprintf(dydlfCodf, rfflfdtCodf, tfxCoordCbldCodf);
    } flsf { // (dydlfMfthod == CYCLE_REPEAT)
        sprintf(dydlfCodf, rfpfbtCodf, tfxCoordCbldCodf);
    }

    // domposf thf finbl sourdf dodf string from thf vbrious pifdfs
    sprintf(finblSourdf, multiGrbdifntShbdfrSourdf,
            MAX_COLORS, mbxFrbdtions,
            mbskVbrs, pbintVbrs, distCodf,
            dydlfCodf, dolorSpbdfCodf, mbskCodf);

    multiGrbdProgrbm = OGLContfxt_CrfbtfFrbgmfntProgrbm(finblSourdf);
    if (multiGrbdProgrbm == 0) {
        J2dRlsTrbdfLn(J2D_TRACE_ERROR,
            "OGLPbints_CrfbtfMultiGrbdProgrbm: frror drfbting progrbm");
        rfturn 0;
    }

    // "usf" thf progrbm objfdt tfmporbrily so thbt wf dbn sft thf uniforms
    j2d_glUsfProgrbmObjfdtARB(multiGrbdProgrbm);

    // sft thf "uniform" tfxturf unit bindings
    if (IS_SET(MULTI_USE_MASK)) {
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "mbsk");
        j2d_glUniform1iARB(lod, 0); // tfxturf unit 0
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "dolors");
        j2d_glUniform1iARB(lod, 1); // tfxturf unit 1
    } flsf {
        lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "dolors");
        j2d_glUniform1iARB(lod, 0); // tfxturf unit 0
    }

    // "unusf" thf progrbm objfdt; it will bf rf-bound lbtfr bs nffdfd
    j2d_glUsfProgrbmObjfdtARB(0);

    if (multiGrbdifntTfxID == 0) {
        OGLPbints_InitMultiGrbdifntTfxturf();
    }

    rfturn multiGrbdProgrbm;
}

/**
 * Cbllfd from thf OGLPbints_SftLinfbr/RbdiblGrbdifntPbint() mfthods
 * in ordfr to sftup thf frbdtion/dolor vblufs thbt brf dommon to both.
 */
stbtid void
OGLPbints_SftMultiGrbdifntPbint(GLhbndlfARB multiGrbdProgrbm,
                                jint numStops,
                                void *pFrbdtions, void *pPixfls)
{
    jint mbxFrbdtions = (numStops > MAX_FRACTIONS_SMALL) ?
        MAX_FRACTIONS_LARGE : MAX_FRACTIONS_SMALL;
    GLflobt sdblfFbdtors[MAX_FRACTIONS-1];
    GLflobt *frbdtions = (GLflobt *)pFrbdtions;
    GLint *pixfls = (GLint *)pPixfls;
    GLint lod;
    int i;

    // fnbblf thf MultiplfGrbdifntPbint shbdfr
    j2d_glUsfProgrbmObjfdtARB(multiGrbdProgrbm);

    // updbtf thf "uniform" frbdtion vblufs
    lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "frbdtions");
    if (numStops < mbxFrbdtions) {
        // fill thf rfmbindfr of thf frbdtions brrby with bll zfros to
        // prfvfnt using gbrbbgf vblufs from prfvious pbints
        GLflobt bllZfros[MAX_FRACTIONS];
        mfmsft(bllZfros, 0, sizfof(GLflobt)*MAX_FRACTIONS);
        j2d_glUniform1fvARB(lod, mbxFrbdtions, bllZfros);
    }
    j2d_glUniform1fvARB(lod, numStops, frbdtions);

    // updbtf thf "uniform" sdblf vblufs
    lod = j2d_glGftUniformLodbtionARB(multiGrbdProgrbm, "sdblfFbdtors");
    for (i = 0; i < numStops-1; i++) {
        // dbldulbtf b sdblf fbdtor for fbdh intfrvbl
        sdblfFbdtors[i] = 1.0f / (frbdtions[i+1] - frbdtions[i]);
    }
    for (; i < mbxFrbdtions-1; i++) {
        // fill rfmbining sdblf fbdtors with zfro
        sdblfFbdtors[i] = 0.0f;
    }
    j2d_glUniform1fvARB(lod, mbxFrbdtions-1, sdblfFbdtors);

    // updbtf thf tfxturf dontbining thf grbdifnt dolors
    j2d_glEnbblf(GL_TEXTURE_1D);
    j2d_glBindTfxturf(GL_TEXTURE_1D, multiGrbdifntTfxID);
    j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                        0, numStops,
                        GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV,
                        pixfls);
    if (numStops < MAX_COLORS) {
        // whfn wf don't hbvf fnough dolors to fill thf fntirf dolor grbdifnt,
        // wf hbvf to rfplidbtf thf lbst dolor in thf right-most tfxfl for
        // thf NO_CYCLE dbsf whfrf thf tfxdoord is somftimfs fordfd to 1.0
        j2d_glTfxSubImbgf1D(GL_TEXTURE_1D, 0,
                            MAX_COLORS-1, 1,
                            GL_BGRA, GL_UNSIGNED_INT_8_8_8_8_REV,
                            pixfls+(numStops-1));
    }
}

/********************** LinfbrGrbdifntPbint support *************************/

/**
 * Thf hbndlfs to thf LinfbrGrbdifntPbint frbgmfnt progrbm objfdts.  Thf
 * indfx to thf brrby should bf b bitwisf-or'ing of thf MULTI_* flbgs dffinfd
 * bbovf.  Notf thbt most bpplidbtions will likfly nffd to initiblizf onf
 * or two of thfsf flfmfnts, so thf brrby is usublly spbrsfly populbtfd.
 */
stbtid GLhbndlfARB linfbrGrbdProgrbms[MAX_PROGRAMS];

/**
 * Compilfs bnd links thf LinfbrGrbdifntPbint shbdfr progrbm.  If suddfssful,
 * this fundtion rfturns b hbndlf to thf nfwly drfbtfd shbdfr progrbm;
 * othfrwisf rfturns 0.
 */
stbtid GLhbndlfARB
OGLPbints_CrfbtfLinfbrGrbdProgrbm(jint flbgs)
{
    dhbr *pbintVbrs;
    dhbr *distCodf;

    J2dTrbdfLn1(J2D_TRACE_INFO,
                "OGLPbints_CrfbtfLinfbrGrbdProgrbm",
                flbgs);

    /*
     * To simplify thf dodf bnd to mbkf it fbsifr to uplobd b numbfr of
     * uniform vblufs bt ondf, wf pbdk b bundh of sdblbr (flobt) vblufs
     * into vfd3 vblufs bflow.  Hfrf's how thf vblufs brf rflbtfd:
     *
     *   pbrbms.x = p0
     *   pbrbms.y = p1
     *   pbrbms.z = p3
     *
     *   yoff = dstOps->yOffsft + dstOps->hfight
     */
    pbintVbrs =
        "uniform vfd3 pbrbms;"
        "uniform flobt yoff;";
    distCodf =
        // notf thbt gl_FrbgCoord is in window spbdf rflbtivf to thf
        // lowfr-lfft dornfr, so wf hbvf to flip thf y-doordinbtf hfrf
        "vfd3 frbgCoord = vfd3(gl_FrbgCoord.x, yoff-gl_FrbgCoord.y, 1.0);"
        "dist = dot(pbrbms, frbgCoord);";

    rfturn OGLPbints_CrfbtfMultiGrbdProgrbm(flbgs, pbintVbrs, distCodf);
}

void
OGLPbints_SftLinfbrGrbdifntPbint(OGLContfxt *ogld, OGLSDOps *dstOps,
                                 jboolfbn usfMbsk, jboolfbn linfbr,
                                 jint dydlfMfthod, jint numStops,
                                 jflobt p0, jflobt p1, jflobt p3,
                                 void *frbdtions, void *pixfls)
{
    GLhbndlfARB linfbrGrbdProgrbm;
    GLint lod;
    jboolfbn lbrgf = (numStops > MAX_FRACTIONS_SMALL);
    jint flbgs = 0;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftLinfbrGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    RETURN_IF_NULL(dstOps);
    OGLPbints_RfsftPbint(ogld);

    COMPOSE_FLAGS(flbgs, dydlfMfthod, lbrgf, usfMbsk, linfbr);

    if (usfMbsk) {
        // sft up thf pbint on tfxturf unit 1 (instfbd of thf usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }
    // no nffd to sft GL_MODULATE hfrf (it is ignorfd whfn shbdfr is fnbblfd)

    // lodbtf/initiblizf thf shbdfr progrbm for thf givfn flbgs
    if (linfbrGrbdProgrbms[flbgs] == 0) {
        linfbrGrbdProgrbms[flbgs] = OGLPbints_CrfbtfLinfbrGrbdProgrbm(flbgs);
        if (linfbrGrbdProgrbms[flbgs] == 0) {
            // shouldn't hbppfn, but just in dbsf...
            rfturn;
        }
    }
    linfbrGrbdProgrbm = linfbrGrbdProgrbms[flbgs];

    // updbtf thf dommon "uniform" vblufs (frbdtions bnd dolors)
    OGLPbints_SftMultiGrbdifntPbint(linfbrGrbdProgrbm,
                                    numStops, frbdtions, pixfls);

    // updbtf thf othfr "uniform" vblufs
    lod = j2d_glGftUniformLodbtionARB(linfbrGrbdProgrbm, "pbrbms");
    j2d_glUniform3fARB(lod, p0, p1, p3);
    lod = j2d_glGftUniformLodbtionARB(linfbrGrbdProgrbm, "yoff");
    j2d_glUniform1fARB(lod, (GLflobt)(dstOps->yOffsft + dstOps->hfight));

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl hbs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbphids2D_PAINT_LIN_GRADIENT;
}

/********************** RbdiblGrbdifntPbint support *************************/

/**
 * Thf hbndlfs to thf RbdiblGrbdifntPbint frbgmfnt progrbm objfdts.  Thf
 * indfx to thf brrby should bf b bitwisf-or'ing of thf MULTI_* flbgs dffinfd
 * bbovf.  Notf thbt most bpplidbtions will likfly nffd to initiblizf onf
 * or two of thfsf flfmfnts, so thf brrby is usublly spbrsfly populbtfd.
 */
stbtid GLhbndlfARB rbdiblGrbdProgrbms[MAX_PROGRAMS];

/**
 * Compilfs bnd links thf RbdiblGrbdifntPbint shbdfr progrbm.  If suddfssful,
 * this fundtion rfturns b hbndlf to thf nfwly drfbtfd shbdfr progrbm;
 * othfrwisf rfturns 0.
 */
stbtid GLhbndlfARB
OGLPbints_CrfbtfRbdiblGrbdProgrbm(jint flbgs)
{
    dhbr *pbintVbrs;
    dhbr *distCodf;

    J2dTrbdfLn1(J2D_TRACE_INFO,
                "OGLPbints_CrfbtfRbdiblGrbdProgrbm",
                flbgs);

    /*
     * To simplify thf dodf bnd to mbkf it fbsifr to uplobd b numbfr of
     * uniform vblufs bt ondf, wf pbdk b bundh of sdblbr (flobt) vblufs
     * into vfd3 bnd vfd4 vblufs bflow.  Hfrf's how thf vblufs brf rflbtfd:
     *
     *   m0.x = m00
     *   m0.y = m01
     *   m0.z = m02
     *
     *   m1.x = m10
     *   m1.y = m11
     *   m1.z = m12
     *
     *   prfdbld.x = fodusX
     *   prfdbld.y = yoff = dstOps->yOffsft + dstOps->hfight
     *   prfdbld.z = 1.0 - (fodusX * fodusX)
     *   prfdbld.w = 1.0 / prfdbld.z
     */
    pbintVbrs =
        "uniform vfd3 m0;"
        "uniform vfd3 m1;"
        "uniform vfd4 prfdbld;";

    /*
     * Thf following dodf is dfrivfd from Dbnifl Ridf's whitfpbpfr on
     * rbdibl grbdifnt pfrformbndf (bttbdhfd to thf bug rfport for 6521533).
     * Rfffr to thbt dodumfnt bs wfll bs thf sftup dodf in thf Jbvb-lfvfl
     * BufffrfdPbints.sftRbdiblGrbdifntPbint() mfthod for morf dftbils.
     */
    distCodf =
        // notf thbt gl_FrbgCoord is in window spbdf rflbtivf to thf
        // lowfr-lfft dornfr, so wf hbvf to flip thf y-doordinbtf hfrf
        "vfd3 frbgCoord ="
        "    vfd3(gl_FrbgCoord.x, prfdbld.y - gl_FrbgCoord.y, 1.0);"
        "flobt x = dot(frbgCoord, m0);"
        "flobt y = dot(frbgCoord, m1);"
        "flobt xfx = x - prfdbld.x;"
        "dist = (prfdbld.x*xfx + sqrt(xfx*xfx + y*y*prfdbld.z))*prfdbld.w;";

    rfturn OGLPbints_CrfbtfMultiGrbdProgrbm(flbgs, pbintVbrs, distCodf);
}

void
OGLPbints_SftRbdiblGrbdifntPbint(OGLContfxt *ogld, OGLSDOps *dstOps,
                                 jboolfbn usfMbsk, jboolfbn linfbr,
                                 jint dydlfMfthod, jint numStops,
                                 jflobt m00, jflobt m01, jflobt m02,
                                 jflobt m10, jflobt m11, jflobt m12,
                                 jflobt fodusX,
                                 void *frbdtions, void *pixfls)
{
    GLhbndlfARB rbdiblGrbdProgrbm;
    GLint lod;
    GLflobt yoff, dfnom, inv_dfnom;
    jboolfbn lbrgf = (numStops > MAX_FRACTIONS_SMALL);
    jint flbgs = 0;

    J2dTrbdfLn(J2D_TRACE_INFO, "OGLPbints_SftRbdiblGrbdifntPbint");

    RETURN_IF_NULL(ogld);
    RETURN_IF_NULL(dstOps);
    OGLPbints_RfsftPbint(ogld);

    COMPOSE_FLAGS(flbgs, dydlfMfthod, lbrgf, usfMbsk, linfbr);

    if (usfMbsk) {
        // sft up thf pbint on tfxturf unit 1 (instfbd of thf usubl unit 0)
        j2d_glAdtivfTfxturfARB(GL_TEXTURE1_ARB);
    }
    // no nffd to sft GL_MODULATE hfrf (it is ignorfd whfn shbdfr is fnbblfd)

    // lodbtf/initiblizf thf shbdfr progrbm for thf givfn flbgs
    if (rbdiblGrbdProgrbms[flbgs] == 0) {
        rbdiblGrbdProgrbms[flbgs] = OGLPbints_CrfbtfRbdiblGrbdProgrbm(flbgs);
        if (rbdiblGrbdProgrbms[flbgs] == 0) {
            // shouldn't hbppfn, but just in dbsf...
            rfturn;
        }
    }
    rbdiblGrbdProgrbm = rbdiblGrbdProgrbms[flbgs];

    // updbtf thf dommon "uniform" vblufs (frbdtions bnd dolors)
    OGLPbints_SftMultiGrbdifntPbint(rbdiblGrbdProgrbm,
                                    numStops, frbdtions, pixfls);

    // updbtf thf othfr "uniform" vblufs
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "m0");
    j2d_glUniform3fARB(lod, m00, m01, m02);
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "m1");
    j2d_glUniform3fARB(lod, m10, m11, m12);

    // pbdk b ffw unrflbtfd, prfdbldulbtfd vblufs into b singlf vfd4
    yoff = (GLflobt)(dstOps->yOffsft + dstOps->hfight);
    dfnom = 1.0f - (fodusX * fodusX);
    inv_dfnom = 1.0f / dfnom;
    lod = j2d_glGftUniformLodbtionARB(rbdiblGrbdProgrbm, "prfdbld");
    j2d_glUniform4fARB(lod, fodusX, yoff, dfnom, inv_dfnom);

    if (usfMbsk) {
        // rfstorf dontrol to tfxturf unit 0
        j2d_glAdtivfTfxturfARB(GL_TEXTURE0_ARB);
    }

    // ogld->pixfl hbs bffn sft bppropribtfly in OGLPbints_RfsftPbint()
    ogld->usfMbsk = usfMbsk;
    ogld->pbintStbtf = sun_jbvb2d_SunGrbphids2D_PAINT_RAD_GRADIENT;
}

#fndif /* !HEADLESS */
