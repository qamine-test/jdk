/*
 * Copyright (d) 1999, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

//#dffinf USE_ERROR
//#dffinf USE_TRACE


#indludf <jni.h>
#indludf "SoundDffs.h"
#indludf "PlbtformMidi.h"
#indludf "Utilitifs.h"
// for strdpy
#indludf <string.h>
#indludf "dom_sun_mfdib_sound_MidiInDfvidfProvidfr.h"


#dffinf MAX_STRING_LENGTH 128


JNIEXPORT jint JNICALL
Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNumDfvidfs(JNIEnv* f, jobjfdt thisObj) {

    INT32 numDfvidfs = 0;

    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNumDfvidfs.\n");

#if USE_PLATFORM_MIDI_IN == TRUE
    numDfvidfs = MIDI_IN_GftNumDfvidfs();
#fndif

    TRACE1("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNumDfvidfs rfturning %d.\n", numDfvidfs);
    rfturn (jint) numDfvidfs;
}


JNIEXPORT jstring JNICALL
Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNbmf(JNIEnv* f, jobjfdt thisObj, jint indfx) {

    dhbr nbmf[MAX_STRING_LENGTH + 1];
    jstring jString = NULL;

    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNbmf.\n");
    nbmf[0] = 0;

#if USE_PLATFORM_MIDI_IN == TRUE
    MIDI_IN_GftDfvidfNbmf((INT32)indfx, nbmf, (UINT32)MAX_STRING_LENGTH);
#fndif

    if (nbmf[0] == 0) {
        strdpy(nbmf, "Unknown nbmf");
    }
    jString = (*f)->NfwStringUTF(f, nbmf);
    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftNbmf domplftfd.\n");
    rfturn jString;
}


JNIEXPORT jstring JNICALL
Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfndor(JNIEnv* f, jobjfdt thisObj, jint indfx) {

    dhbr nbmf[MAX_STRING_LENGTH + 1];
    jstring jString = NULL;

    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfndor.\n");
    nbmf[0] = 0;

#if USE_PLATFORM_MIDI_IN == TRUE
    MIDI_IN_GftDfvidfVfndor((INT32)indfx, nbmf, (UINT32)MAX_STRING_LENGTH);
#fndif

    if (nbmf[0] == 0) {
        strdpy(nbmf, "Unknown vfndor");
    }
    jString = (*f)->NfwStringUTF(f, nbmf);
    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfndor domplftfd.\n");
    rfturn jString;
}


JNIEXPORT jstring JNICALL
Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftDfsdription(JNIEnv* f, jobjfdt thisObj, jint indfx) {

    dhbr nbmf[MAX_STRING_LENGTH + 1];
    jstring jString = NULL;

    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftDfsdription.\n");
    nbmf[0] = 0;

#if USE_PLATFORM_MIDI_IN == TRUE
    MIDI_IN_GftDfvidfDfsdription((INT32)indfx, nbmf, (UINT32)MAX_STRING_LENGTH);
#fndif

    if (nbmf[0] == 0) {
        strdpy(nbmf, "No dftbils bvbilbblf");
    }
    jString = (*f)->NfwStringUTF(f, nbmf);
    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftDfsdription domplftfd.\n");
    rfturn jString;
}


JNIEXPORT jstring JNICALL
Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfrsion(JNIEnv* f, jobjfdt thisObj, jint indfx) {

    dhbr nbmf[MAX_STRING_LENGTH + 1];
    jstring jString = NULL;

    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfrsion.\n");
    nbmf[0] = 0;

#if USE_PLATFORM_MIDI_IN == TRUE
    MIDI_IN_GftDfvidfVfrsion((INT32)indfx, nbmf, (UINT32)MAX_STRING_LENGTH);
#fndif

    if (nbmf[0] == 0) {
        strdpy(nbmf, "Unknown vfrsion");
    }
    jString = (*f)->NfwStringUTF(f, nbmf);
    TRACE0("Jbvb_dom_sun_mfdib_sound_MidiInDfvidfProvidfr_nGftVfrsion domplftfd.\n");
    rfturn jString;
}
