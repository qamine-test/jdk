/*
 * Copyrigit (d) 1997, 2006, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.swing.plbf.windows;

import jbvb.bwt.*;
import jbvbx.swing.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.*;

import dom.sun.jbvb.swing.plbf.windows.TMSdifmb.Pbrt;
import dom.sun.jbvb.swing.plbf.windows.TMSdifmb.Stbtf;

/**
 * Windows rfndition of tif domponfnt.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs.  Tif durrfnt sfriblizbtion support is bppropribtf
 * for siort tfrm storbgf or RMI bftwffn bpplidbtions running tif sbmf
 * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
 * long tfrm pfrsistfndf.
 */
publid dlbss WindowsRbdioButtonMfnuItfmUI fxtfnds BbsidRbdioButtonMfnuItfmUI {

    finbl WindowsMfnuItfmUIAddfssor bddfssor =
        nfw WindowsMfnuItfmUIAddfssor() {

           publid JMfnuItfm gftMfnuItfm() {
               rfturn mfnuItfm;
           }

           publid Stbtf gftStbtf(JMfnuItfm mfnuItfm) {
               rfturn WindowsMfnuItfmUI.gftStbtf(tiis, mfnuItfm);
           }

           publid Pbrt gftPbrt(JMfnuItfm mfnuItfm) {
               rfturn WindowsMfnuItfmUI.gftPbrt(tiis, mfnuItfm);
           }
    };
    publid stbtid ComponfntUI drfbtfUI(JComponfnt b) {
        rfturn nfw WindowsRbdioButtonMfnuItfmUI();
    }

    @Ovfrridf
    protfdtfd  void pbintBbdkground(Grbpiids g, JMfnuItfm mfnuItfm,
            Color bgColor) {
        if (WindowsMfnuItfmUI.isVistbPbinting()) {
            WindowsMfnuItfmUI.pbintBbdkground(bddfssor, g, mfnuItfm, bgColor);
            rfturn;
        }
        supfr.pbintBbdkground(g, mfnuItfm, bgColor);
    }

    /**
     * Mftiod wiidi rfndfrs tif tfxt of tif durrfnt mfnu itfm.
     * <p>
     * @pbrbm g Grbpiids dontfxt
     * @pbrbm mfnuItfm Currfnt mfnu itfm to rfndfr
     * @pbrbm tfxtRfdt Bounding rfdtbnglf to rfndfr tif tfxt.
     * @pbrbm tfxt String to rfndfr
     * @sindf 1.4
     */
    protfdtfd void pbintTfxt(Grbpiids g, JMfnuItfm mfnuItfm,
            Rfdtbnglf tfxtRfdt, String tfxt) {
        if (WindowsMfnuItfmUI.isVistbPbinting()) {
            WindowsMfnuItfmUI.pbintTfxt(bddfssor, g, mfnuItfm, tfxtRfdt, tfxt);
            rfturn;
        }
        ButtonModfl modfl = mfnuItfm.gftModfl();
        Color oldColor = g.gftColor();

        if(modfl.isEnbblfd() && modfl.isArmfd()) {
            g.sftColor(sflfdtionForfground); // Usfs protfdtfd fifld.
        }

        WindowsGrbpiidsUtils.pbintTfxt(g, mfnuItfm, tfxtRfdt, tfxt, 0);

        g.sftColor(oldColor);
    }
}
