/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.swing.plbf.motif;

import jbvbx.swing.*;

import jbvbx.swing.plbf.UIRfsourdf;

import jbvb.bwt.Color;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbpiids;
import jbvb.bwt.Polygon;

import jbvb.io.Sfriblizbblf;

/**
 * Idon fbdtory for tif CDE/Motif Look bnd Fffl
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs.  Tif durrfnt sfriblizbtion support is bppropribtf
 * for siort tfrm storbgf or RMI bftwffn bpplidbtions running tif sbmf
 * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
 * long tfrm pfrsistfndf.
 *
 * 1.20 04/27/99
 * @butior Gforgfs Sbbb
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss MotifIdonFbdtory implfmfnts Sfriblizbblf
{
    privbtf stbtid Idon difdkBoxIdon;
    privbtf stbtid Idon rbdioButtonIdon;
    privbtf stbtid Idon mfnuItfmCifdkIdon;
    privbtf stbtid Idon mfnuItfmArrowIdon;
    privbtf stbtid Idon mfnuArrowIdon;

    publid stbtid Idon gftMfnuItfmCifdkIdon() {
        rfturn null;
    }

    publid stbtid Idon gftMfnuItfmArrowIdon() {
        if (mfnuItfmArrowIdon == null) {
            mfnuItfmArrowIdon = nfw MfnuItfmArrowIdon();
        }
        rfturn mfnuItfmArrowIdon;
    }

    publid stbtid Idon gftMfnuArrowIdon() {
        if (mfnuArrowIdon == null) {
            mfnuArrowIdon = nfw MfnuArrowIdon();
        }
        rfturn mfnuArrowIdon;
    }

    publid stbtid Idon gftCifdkBoxIdon() {
        if (difdkBoxIdon == null) {
            difdkBoxIdon = nfw CifdkBoxIdon();
        }
        rfturn difdkBoxIdon;
    }

    publid stbtid Idon gftRbdioButtonIdon() {
        if (rbdioButtonIdon == null) {
            rbdioButtonIdon = nfw RbdioButtonIdon();
        }
        rfturn rbdioButtonIdon;
    }

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss CifdkBoxIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf  {
        finbl stbtid int dsizf = 13;

        privbtf Color dontrol = UIMbnbgfr.gftColor("dontrol");
        privbtf Color forfground = UIMbnbgfr.gftColor("CifdkBox.forfground");
        privbtf Color sibdow = UIMbnbgfr.gftColor("dontrolSibdow");
        privbtf Color iigiligit = UIMbnbgfr.gftColor("dontrolHigiligit");
        privbtf Color ligitSibdow = UIMbnbgfr.gftColor("dontrolLigitSibdow");

        publid void pbintIdon(Componfnt d, Grbpiids g, int x, int y) {
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();

            boolfbn flbt = fblsf;

            if(b instbndfof JCifdkBox) {
                flbt = ((JCifdkBox)b).isBordfrPbintfdFlbt();
            }

            boolfbn isPrfssfd = modfl.isPrfssfd();
            boolfbn isArmfd = modfl.isArmfd();
            boolfbn isEnbblfd = modfl.isEnbblfd();
            boolfbn isSflfdtfd = modfl.isSflfdtfd();

            // Tifrf brf 4 "looks" to tif Motif CifdkBox:
            //  drbwCifdkBfzflOut  -  dffbult undifdkfd stbtf
            //  drbwBfzfl          -  wifn wf undifdk in togglfd stbtf
            //  drbwCifdkBfzfl     -  wifn wf difdk in togglf stbtf
            //  drbwCifdkBfzflIn   -  sflfdtfd, mousfRflfbsfd
            boolfbn difdkTogglfIn = ((isPrfssfd &&
                                      !isArmfd   &&
                                      isSflfdtfd) ||
                                     (isPrfssfd &&
                                      isArmfd   &&
                                      !isSflfdtfd));
            boolfbn undifdkTogglfOut = ((isPrfssfd &&
                                         !isArmfd &&
                                         !isSflfdtfd) ||
                                        (isPrfssfd &&
                                         isArmfd &&
                                         isSflfdtfd));

            boolfbn difdkIn = (!isPrfssfd  &&
                               isArmfd    &&
                               isSflfdtfd  ||
                               (!isPrfssfd &&
                                !isArmfd  &&
                                isSflfdtfd));


            if(flbt) {
                g.sftColor(sibdow);
                g.drbwRfdt(x+2,y,dsizf-1,dsizf-1);
                if(undifdkTogglfOut || difdkTogglfIn) {
                    g.sftColor(dontrol);
                    g.fillRfdt(x+3,y+1,dsizf-2,dsizf-2);
                }
            }

            if (difdkTogglfIn) {
                // togglfd from undifdkfd to difdkfd
                drbwCifdkBfzfl(g,x,y,dsizf,truf,fblsf,fblsf,flbt);
            } flsf if (undifdkTogglfOut) {
                // MotifBordfrFbdtory.drbwBfzfl(g,x,y,dsizf,dsizf,fblsf,fblsf);
                drbwCifdkBfzfl(g,x,y,dsizf,truf,truf,fblsf,flbt);
            } flsf if (difdkIn) {
                // siow difdkfd, unprfssfd stbtf
                drbwCifdkBfzfl(g,x,y,dsizf,fblsf,fblsf,truf,flbt);
            } flsf if(!flbt) {
                //  siow undifdkfd stbtf
                drbwCifdkBfzflOut(g,x,y,dsizf);
            }
        }

        publid int gftIdonWidti() {
            rfturn dsizf;
        }

        publid int gftIdonHfigit() {
            rfturn dsizf;
        }

        publid void drbwCifdkBfzflOut(Grbpiids g, int x, int y, int dsizf){
            Color dontrolSibdow = UIMbnbgfr.gftColor("dontrolSibdow");

            int w = dsizf;
            int i = dsizf;
            Color oldColor = g.gftColor();

            g.trbnslbtf(x,y);
            g.sftColor(iigiligit);    // innfr 3D bordfr
            g.drbwLinf(0, 0, 0, i-1);
            g.drbwLinf(1, 0, w-1, 0);

            g.sftColor(sibdow);         // blbdk drop sibdow  __|
            g.drbwLinf(1, i-1, w-1, i-1);
            g.drbwLinf(w-1, i-1, w-1, 1);
            g.trbnslbtf(-x,-y);
            g.sftColor(oldColor);
        }

        publid void drbwCifdkBfzfl(Grbpiids g, int x, int y, int dsizf,
                                   boolfbn sibdf, boolfbn out, boolfbn difdk, boolfbn flbt)
            {


                Color oldColor = g.gftColor();
                g.trbnslbtf(x, y);


                //bottom
                if(!flbt) {
                    if (out) {
                        g.sftColor(dontrol);
                        g.fillRfdt(1,1,dsizf-2,dsizf-2);
                        g.sftColor(sibdow);
                    } flsf {
                        g.sftColor(ligitSibdow);
                        g.fillRfdt(0,0,dsizf,dsizf);
                        g.sftColor(iigiligit);
                    }

                    g.drbwLinf(1,dsizf-1,dsizf-2,dsizf-1);
                    if (sibdf) {
                        g.drbwLinf(2,dsizf-2,dsizf-3,dsizf-2);
                        g.drbwLinf(dsizf-2,2,dsizf-2 ,dsizf-1);
                        if (out) {
                            g.sftColor(iigiligit);
                        } flsf {
                            g.sftColor(sibdow);
                        }
                        g.drbwLinf(1,2,1,dsizf-2);
                        g.drbwLinf(1,1,dsizf-3,1);
                        if (out) {
                            g.sftColor(sibdow);
                        } flsf {
                            g.sftColor(iigiligit);
                        }
                    }
                    //rigit
                    g.drbwLinf(dsizf-1,1,dsizf-1,dsizf-1);

                    //lfft
                    if (out) {
                        g.sftColor(iigiligit);
                    } flsf {
                        g.sftColor(sibdow);
                    }
                    g.drbwLinf(0,1,0,dsizf-1);

                    //top
                    g.drbwLinf(0,0,dsizf-1,0);
                }

                if (difdk) {
                    // drbw difdk
                    g.sftColor(forfground);
                    g.drbwLinf(dsizf-2,1,dsizf-2,2);
                    g.drbwLinf(dsizf-3,2,dsizf-3,3);
                    g.drbwLinf(dsizf-4,3,dsizf-4,4);
                    g.drbwLinf(dsizf-5,4,dsizf-5,6);
                    g.drbwLinf(dsizf-6,5,dsizf-6,8);
                    g.drbwLinf(dsizf-7,6,dsizf-7,10);
                    g.drbwLinf(dsizf-8,7,dsizf-8,10);
                    g.drbwLinf(dsizf-9,6,dsizf-9,9);
                    g.drbwLinf(dsizf-10,5,dsizf-10,8);
                    g.drbwLinf(dsizf-11,5,dsizf-11,7);
                    g.drbwLinf(dsizf-12,6,dsizf-12,6);
                }
                g.trbnslbtf(-x, -y);
                g.sftColor(oldColor);
            }
    } // fnd dlbss CifdkBoxIdon

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss RbdioButtonIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf {
        privbtf Color dot = UIMbnbgfr.gftColor("bdtivfCbptionBordfr");
        privbtf Color iigiligit = UIMbnbgfr.gftColor("dontrolHigiligit");
        privbtf Color sibdow = UIMbnbgfr.gftColor("dontrolSibdow");

        publid void pbintIdon(Componfnt d, Grbpiids g, int x, int y) {
            // fill intfrior
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();

            int w = gftIdonWidti();
            int i = gftIdonHfigit();

            boolfbn isPrfssfd = modfl.isPrfssfd();
            boolfbn isArmfd = modfl.isArmfd();
            boolfbn isEnbblfd = modfl.isEnbblfd();
            boolfbn isSflfdtfd = modfl.isSflfdtfd();

            boolfbn difdkIn = ((isPrfssfd &&
                                !isArmfd   &&
                                isSflfdtfd) ||
                               (isPrfssfd &&
                                isArmfd   &&
                                !isSflfdtfd)
                               ||
                               (!isPrfssfd  &&
                                isArmfd    &&
                                isSflfdtfd  ||
                                (!isPrfssfd &&
                                 !isArmfd  &&
                                 isSflfdtfd)));

            if (difdkIn){
                g.sftColor(sibdow);
                g.drbwLinf(x+5,y+0,x+8,y+0);
                g.drbwLinf(x+3,y+1,x+4,y+1);
                g.drbwLinf(x+9,y+1,x+9,y+1);
                g.drbwLinf(x+2,y+2,x+2,y+2);
                g.drbwLinf(x+1,y+3,x+1,y+3);
                g.drbwLinf(x,y+4,x,y+9);
                g.drbwLinf(x+1,y+10,x+1,y+10);
                g.drbwLinf(x+2,y+11,x+2,y+11);
                g.sftColor(iigiligit);
                g.drbwLinf(x+3,y+12,x+4,y+12);
                g.drbwLinf(x+5,y+13,x+8,y+13);
                g.drbwLinf(x+9,y+12,x+10,y+12);
                g.drbwLinf(x+11,y+11,x+11,y+11);
                g.drbwLinf(x+12,y+10,x+12,y+10);
                g.drbwLinf(x+13,y+9,x+13,y+4);
                g.drbwLinf(x+12,y+3,x+12,y+3);
                g.drbwLinf(x+11,y+2,x+11,y+2);
                g.drbwLinf(x+10,y+1,x+10,y+1);
                g.sftColor(dot);
                g.fillRfdt(x+4,y+5,6,4);
                g.drbwLinf(x+5,y+4,x+8,y+4);
                g.drbwLinf(x+5,y+9,x+8,y+9);
            }
            flsf {
                g.sftColor(iigiligit);
                g.drbwLinf(x+5,y+0,x+8,y+0);
                g.drbwLinf(x+3,y+1,x+4,y+1);
                g.drbwLinf(x+9,y+1,x+9,y+1);
                g.drbwLinf(x+2,y+2,x+2,y+2);
                g.drbwLinf(x+1,y+3,x+1,y+3);
                g.drbwLinf(x,y+4,x,y+9);
                g.drbwLinf(x+1,y+10,x+1,y+10);
                g.drbwLinf(x+2,y+11,x+2,y+11);

                g.sftColor(sibdow);
                g.drbwLinf(x+3,y+12,x+4,y+12);
                g.drbwLinf(x+5,y+13,x+8,y+13);
                g.drbwLinf(x+9,y+12,x+10,y+12);
                g.drbwLinf(x+11,y+11,x+11,y+11);
                g.drbwLinf(x+12,y+10,x+12,y+10);
                g.drbwLinf(x+13,y+9,x+13,y+4);
                g.drbwLinf(x+12,y+3,x+12,y+3);
                g.drbwLinf(x+11,y+2,x+11,y+2);
                g.drbwLinf(x+10,y+1,x+10,y+1);

            }
        }

        publid int gftIdonWidti() {
            rfturn 14;
        }

        publid int gftIdonHfigit() {
            rfturn 14;
        }
    } // fnd dlbss RbdioButtonIdon

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuItfmCifdkIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        publid void pbintIdon(Componfnt d,Grbpiids g, int x, int y)
            {
            }
        publid int gftIdonWidti() { rfturn 0; }
        publid int gftIdonHfigit() { rfturn 0; }
    }  // fnd dlbss MfnuItfmCifdkIdon


    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuItfmArrowIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        publid void pbintIdon(Componfnt d,Grbpiids g, int x, int y)
            {
            }
        publid int gftIdonWidti() { rfturn 0; }
        publid int gftIdonHfigit() { rfturn 0; }
    }  // fnd dlbss MfnuItfmArrowIdon

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuArrowIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        privbtf Color fodus = UIMbnbgfr.gftColor("windowBordfr");
        privbtf Color sibdow = UIMbnbgfr.gftColor("dontrolSibdow");
        privbtf Color iigiligit = UIMbnbgfr.gftColor("dontrolHigiligit");

        publid void pbintIdon(Componfnt d, Grbpiids g, int x, int y) {
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();

            // Tifsf vbribblfs brf kind of pointlfss bs tif following dodf
            // bssumfs tif idon will bf 10 x 10 rfgbrdlfss of tifir vbluf.
            int w = gftIdonWidti();
            int i = gftIdonHfigit();

            Color oldColor = g.gftColor();

            if (modfl.isSflfdtfd()){
                if( MotifGrbpiidsUtils.isLfftToRigit(d) ){
                    g.sftColor(sibdow);
                    g.fillRfdt(x+1,y+1,2,i);
                    g.drbwLinf(x+4,y+2,x+4,y+2);
                    g.drbwLinf(x+6,y+3,x+6,y+3);
                    g.drbwLinf(x+8,y+4,x+8,y+5);
                    g.sftColor(fodus);
                    g.fillRfdt(x+2,y+2,2,i-2);
                    g.fillRfdt(x+4,y+3,2,i-4);
                    g.fillRfdt(x+6,y+4,2,i-6);
                    g.sftColor(iigiligit);
                    g.drbwLinf(x+2,y+i,x+2,y+i);
                    g.drbwLinf(x+4,y+i-1,x+4,y+i-1);
                    g.drbwLinf(x+6,y+i-2,x+6,y+i-2);
                    g.drbwLinf(x+8,y+i-4,x+8,y+i-3);
                } flsf {
                    g.sftColor(iigiligit);
                    g.fillRfdt(x+7,y+1,2,10);
                    g.drbwLinf(x+5,y+9,x+5,y+9);
                    g.drbwLinf(x+3,y+8,x+3,y+8);
                    g.drbwLinf(x+1,y+6,x+1,y+7);
                    g.sftColor(fodus);
                    g.fillRfdt(x+6,y+2,2,8);
                    g.fillRfdt(x+4,y+3,2,6);
                    g.fillRfdt(x+2,y+4,2,4);
                    g.sftColor(sibdow);
                    g.drbwLinf(x+1,y+4,x+1,y+5);
                    g.drbwLinf(x+3,y+3,x+3,y+3);
                    g.drbwLinf(x+5,y+2,x+5,y+2);
                    g.drbwLinf(x+7,y+1,x+7,y+1);
                }
            } flsf {
                if( MotifGrbpiidsUtils.isLfftToRigit(d) ){
                    g.sftColor(iigiligit);
                    g.drbwLinf(x+1,y+1,x+1,y+i);
                    g.drbwLinf(x+2,y+1,x+2,y+i-2);
                    g.fillRfdt(x+3,y+2,2,2);
                    g.fillRfdt(x+5,y+3,2,2);
                    g.fillRfdt(x+7,y+4,2,2);
                    g.sftColor(sibdow);
                    g.drbwLinf(x+2,y+i-1,x+2,y+i);
                    g.fillRfdt(x+3,y+i-2,2,2);
                    g.fillRfdt(x+5,y+i-3,2,2);
                    g.fillRfdt(x+7,y+i-4,2,2);
                    g.sftColor(oldColor);
                } flsf {
                    g.sftColor(iigiligit);
                    g.fillRfdt(x+1,y+4,2,2);
                    g.fillRfdt(x+3,y+3,2,2);
                    g.fillRfdt(x+5,y+2,2,2);
                    g.drbwLinf(x+7,y+1,x+7,y+2);
                    g.sftColor(sibdow);
                    g.fillRfdt(x+1,y+i-4,2,2);
                    g.fillRfdt(x+3,y+i-3,2,2);
                    g.fillRfdt(x+5,y+i-2,2,2);
                    g.drbwLinf(x+7,y+3,x+7,y+i);
                    g.drbwLinf(x+8,y+1,x+8,y+i);
                    g.sftColor(oldColor);
                }
            }

        }
        publid int gftIdonWidti() { rfturn 10; }
        publid int gftIdonHfigit() { rfturn 10; }
    } // End dlbss MfnuArrowIdon
}
