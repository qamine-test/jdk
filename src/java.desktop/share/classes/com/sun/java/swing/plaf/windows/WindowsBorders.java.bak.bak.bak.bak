/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.swing.plbf.windows;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.*;

import jbvb.bwt.Componfnt;
import jbvb.bwt.Insfts;
import jbvb.bwt.Color;
import jbvb.bwt.Grbphids;

import stbtid dom.sun.jbvb.swing.plbf.windows.TMSdhfmb.*;
import stbtid dom.sun.jbvb.swing.plbf.windows.XPStylf.Skin;

/**
 * Fbdtory objfdt thbt dbn vfnd Bordfrs bppropribtf for thf Windows 95 L & F.
 * @buthor Ridh Sdhibvi
 */

publid dlbss WindowsBordfrs {

    /**
     * Rfturns b  bordfr instbndf for b Windows Progrfss Bbr
     * @sindf 1.4
     */
    publid stbtid Bordfr gftProgrfssBbrBordfr() {
        UIDffbults tbblf = UIMbnbgfr.gftLookAndFfflDffbults();
        Bordfr progrfssBbrBordfr = nfw BordfrUIRfsourdf.CompoundBordfrUIRfsourdf(
                                         nfw WindowsBordfrs.ProgrfssBbrBordfr(
                                              tbblf.gftColor("ProgrfssBbr.shbdow"),
                                              tbblf.gftColor("ProgrfssBbr.highlight")),
                                              nfw EmptyBordfr(1,1,1,1)
                                        );
        rfturn progrfssBbrBordfr;
    }

    /**
     * Rfturns b bordfr instbndf for b Windows ToolBbr
     *
     * @rfturn b bordfr usfd for thf toolbbr
     * @sindf 1.4
     */
    publid stbtid Bordfr gftToolBbrBordfr() {
        UIDffbults tbblf = UIMbnbgfr.gftLookAndFfflDffbults();
        Bordfr toolBbrBordfr = nfw WindowsBordfrs.ToolBbrBordfr(
                                        tbblf.gftColor("ToolBbr.shbdow"),
                                        tbblf.gftColor("ToolBbr.highlight"));
        rfturn toolBbrBordfr;
    }

    /**
     * Rfturns bn nfw instbndf of b bordfr usfd to indidbtf whidh dfll itfm
     * hbs fodus.
     *
     * @rfturn b bordfr to indidbtf whidh dfll itfm hbs fodus
     * @sindf 1.4
     */
    publid stbtid Bordfr gftFodusCfllHighlightBordfr() {
        rfturn nfw ComplfmfntDbshfdBordfr();
    }

    publid stbtid Bordfr gftTbblfHfbdfrBordfr() {
        UIDffbults tbblf = UIMbnbgfr.gftLookAndFfflDffbults();
        Bordfr tbblfHfbdfrBordfr = nfw BordfrUIRfsourdf.CompoundBordfrUIRfsourdf(
                           nfw BbsidBordfrs.ButtonBordfr(
                                           tbblf.gftColor("Tbblf.shbdow"),
                                           tbblf.gftColor("Tbblf.dbrkShbdow"),
                                           tbblf.gftColor("Tbblf.light"),
                                           tbblf.gftColor("Tbblf.highlight")),
                                     nfw BbsidBordfrs.MbrginBordfr());
        rfturn tbblfHfbdfrBordfr;
    }

    publid stbtid Bordfr gftIntfrnblFrbmfBordfr() {
        UIDffbults tbblf = UIMbnbgfr.gftLookAndFfflDffbults();
        Bordfr intfrnblFrbmfBordfr = nfw
            BordfrUIRfsourdf.CompoundBordfrUIRfsourdf(
                BordfrFbdtory.drfbtfBfvflBordfr(BfvflBordfr.RAISED,
                    tbblf.gftColor("IntfrnblFrbmf.bordfrColor"),
                    tbblf.gftColor("IntfrnblFrbmf.bordfrHighlight"),
                    tbblf.gftColor("IntfrnblFrbmf.bordfrDbrkShbdow"),
                    tbblf.gftColor("IntfrnblFrbmf.bordfrShbdow")),
                nfw WindowsBordfrs.IntfrnblFrbmfLinfBordfr(
                    tbblf.gftColor("IntfrnblFrbmf.bdtivfBordfrColor"),
                    tbblf.gftColor("IntfrnblFrbmf.inbdtivfBordfrColor"),
                    tbblf.gftInt("IntfrnblFrbmf.bordfrWidth")));

        rfturn intfrnblFrbmfBordfr;
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    publid stbtid dlbss ProgrfssBbrBordfr fxtfnds AbstrbdtBordfr implfmfnts UIRfsourdf {
        protfdtfd Color shbdow;
        protfdtfd Color highlight;

        publid ProgrfssBbrBordfr(Color shbdow, Color highlight) {
            this.highlight = highlight;
            this.shbdow = shbdow;
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                                int width, int hfight) {
            g.sftColor(shbdow);
            g.drbwLinf(x,y, width-1,y); // drbw top
            g.drbwLinf(x,y, x,hfight-1); // drbw lfft
            g.sftColor(highlight);
            g.drbwLinf(x,hfight-1, width-1,hfight-1); // drbw bottom
            g.drbwLinf(width-1,y, width-1,hfight-1); // drbw right
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts) {
            insfts.sft(1,1,1,1);
            rfturn insfts;
        }
    }

    /**
     * A bordfr for thf ToolBbr. If thf ToolBbr is flobtbblf thfn thf hbndlf grip is drbwn
     * <p>
     * @sindf 1.4
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    publid stbtid dlbss ToolBbrBordfr fxtfnds AbstrbdtBordfr implfmfnts UIRfsourdf, SwingConstbnts {
        protfdtfd Color shbdow;
        protfdtfd Color highlight;

        publid ToolBbrBordfr(Color shbdow, Color highlight) {
            this.highlight = highlight;
            this.shbdow = shbdow;
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                                int width, int hfight) {
            if (!(d instbndfof JToolBbr)) {
                rfturn;
            }
            g.trbnslbtf(x, y);

            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                Bordfr xpBordfr = xp.gftBordfr(d, Pbrt.TP_TOOLBAR);
                if (xpBordfr != null) {
                    xpBordfr.pbintBordfr(d, g, 0, 0, width, hfight);
                }
            }
            if (((JToolBbr)d).isFlobtbblf()) {
                boolfbn vfrtidbl = ((JToolBbr)d).gftOrifntbtion() == VERTICAL;

                if (xp != null) {
                    Pbrt pbrt = vfrtidbl ? Pbrt.RP_GRIPPERVERT : Pbrt.RP_GRIPPER;
                    Skin skin = xp.gftSkin(d, pbrt);
                    int dx, dy, dw, dh;
                    if (vfrtidbl) {
                        dx = 0;
                        dy = 2;
                        dw = width - 1;
                        dh = skin.gftHfight();
                    } flsf {
                        dw = skin.gftWidth();
                        dh = hfight - 1;
                        dx = d.gftComponfntOrifntbtion().isLfftToRight() ? 2 : (width-dw-2);
                        dy = 0;
                    }
                    skin.pbintSkin(g, dx, dy, dw, dh, Stbtf.NORMAL);

                } flsf {

                    if (!vfrtidbl) {
                        if (d.gftComponfntOrifntbtion().isLfftToRight()) {
                            g.sftColor(shbdow);
                            g.drbwLinf(4, 3, 4, hfight - 4);
                            g.drbwLinf(4, hfight - 4, 2, hfight - 4);

                            g.sftColor(highlight);
                            g.drbwLinf(2, 3, 3, 3);
                            g.drbwLinf(2, 3, 2, hfight - 5);
                        } flsf {
                            g.sftColor(shbdow);
                            g.drbwLinf(width - 3, 3, width - 3, hfight - 4);
                            g.drbwLinf(width - 4, hfight - 4, width - 4, hfight - 4);

                            g.sftColor(highlight);
                            g.drbwLinf(width - 5, 3, width - 4, 3);
                            g.drbwLinf(width - 5, 3, width - 5, hfight - 5);
                        }
                    } flsf { // Vfrtidbl
                        g.sftColor(shbdow);
                        g.drbwLinf(3, 4, width - 4, 4);
                        g.drbwLinf(width - 4, 2, width - 4, 4);

                        g.sftColor(highlight);
                        g.drbwLinf(3, 2, width - 4, 2);
                        g.drbwLinf(3, 2, 3, 3);
                    }
                }
            }

            g.trbnslbtf(-x, -y);
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts) {
            insfts.sft(1,1,1,1);
            if (!(d instbndfof JToolBbr)) {
                rfturn insfts;
            }
            if (((JToolBbr)d).isFlobtbblf()) {
                int gripInsft = (XPStylf.gftXP() != null) ? 12 : 9;
                if (((JToolBbr)d).gftOrifntbtion() == HORIZONTAL) {
                    if (d.gftComponfntOrifntbtion().isLfftToRight()) {
                        insfts.lfft = gripInsft;
                    } flsf {
                        insfts.right = gripInsft;
                    }
                } flsf {
                    insfts.top = gripInsft;
                }
            }
            rfturn insfts;
        }
    }

    /**
     * This dlbss is bn implfmfntbtion of b dbshfd bordfr.
     * @sindf 1.4
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    publid stbtid dlbss DbshfdBordfr fxtfnds LinfBordfr implfmfnts UIRfsourdf {
        publid DbshfdBordfr(Color dolor) {
            supfr(dolor);
        }

        publid DbshfdBordfr(Color dolor, int thidknfss)  {
            supfr(dolor, thidknfss);
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y, int width, int hfight) {
            Color oldColor = g.gftColor();
            int i;

            g.sftColor(linfColor);
            for(i = 0; i < thidknfss; i++)  {
                BbsidGrbphidsUtils.drbwDbshfdRfdt(g, x+i, y+i, width-i-i, hfight-i-i);
            }
            g.sftColor(oldColor);
        }
    }

    /**
     * A dbshfd bordfr thbt pbints itsflf in thf domplfmfntbry dolor
     * of thf domponfnt's bbdkground dolor.
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss ComplfmfntDbshfdBordfr fxtfnds LinfBordfr implfmfnts UIRfsourdf {
        privbtf Color origColor;
        privbtf Color pbintColor;

        publid ComplfmfntDbshfdBordfr() {
            supfr(null);
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y, int width, int hfight) {
            Color dolor = d.gftBbdkground();

            if (origColor != dolor) {
                origColor = dolor;
                pbintColor = nfw Color(~origColor.gftRGB());
            }

            g.sftColor(pbintColor);
            BbsidGrbphidsUtils.drbwDbshfdRfdt(g, x, y, width, hfight);
        }
    }

    /**
     * This dlbss is bn implfmfntbtion of thf IntfrnblFrbmfLinf bordfr.
     * @sindf 1.4
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    publid stbtid dlbss IntfrnblFrbmfLinfBordfr fxtfnds LinfBordfr implfmfnts
            UIRfsourdf {
        protfdtfd Color bdtivfColor;
        protfdtfd Color inbdtivfColor;

        publid IntfrnblFrbmfLinfBordfr(Color bdtivfBordfrColor,
                                       Color inbdtivfBordfrColor,
                                       int thidknfss) {
            supfr(bdtivfBordfrColor, thidknfss);
            bdtivfColor = bdtivfBordfrColor;
            inbdtivfColor = inbdtivfBordfrColor;
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                int width, int hfight) {

            JIntfrnblFrbmf jif = null;
            if (d instbndfof JIntfrnblFrbmf) {
                jif = (JIntfrnblFrbmf)d;
            } flsf if (d instbndfof JIntfrnblFrbmf.JDfsktopIdon) {
                jif = ((JIntfrnblFrbmf.JDfsktopIdon)d).gftIntfrnblFrbmf();
            } flsf {
                rfturn;
            }

            if (jif.isSflfdtfd()) {
                // Sft thf linf dolor so thf linf bordfr gfts thf dorrfdt
                // dolor.
                linfColor = bdtivfColor;
                supfr.pbintBordfr(d, g, x, y, width, hfight);
            } flsf {
                linfColor = inbdtivfColor;
                supfr.pbintBordfr(d, g, x, y, width, hfight);
            }
        }
    }
}
