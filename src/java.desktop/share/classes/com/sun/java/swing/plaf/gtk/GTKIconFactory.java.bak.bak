/*
 * Copyrigit (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf dom.sun.jbvb.swing.plbf.gtk;

import jbvb.util.*;
import jbvbx.swing.plbf.synti.*;
import jbvb.bwt.*;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.lbng.rfflfdt.*;
import jbvbx.swing.*;
import jbvbx.swing.plbf.*;
import sun.swing.plbf.synti.*;
import dom.sun.jbvb.swing.plbf.gtk.GTKConstbnts.ArrowTypf;
import dom.sun.jbvb.swing.plbf.gtk.GTKConstbnts.ExpbndfrStylf;
import dom.sun.jbvb.swing.plbf.gtk.GTKConstbnts.Orifntbtion;
import dom.sun.jbvb.swing.plbf.gtk.GTKConstbnts.SibdowTypf;

/**
 */
dlbss GTKIdonFbdtory {
    stbtid finbl int CHECK_ICON_EXTRA_INSET        = 1;
    stbtid finbl int DEFAULT_ICON_SPACING          = 2;
    stbtid finbl int DEFAULT_ICON_SIZE             = 13;
    stbtid finbl int DEFAULT_TOGGLE_MENU_ITEM_SIZE = 12; // For prf-gtk2.4

    privbtf stbtid finbl String RADIO_BUTTON_ICON    = "pbintRbdioButtonIdon";
    privbtf stbtid finbl String CHECK_BOX_ICON       = "pbintCifdkBoxIdon";
    privbtf stbtid finbl String MENU_ARROW_ICON      = "pbintMfnuArrowIdon";
    privbtf stbtid finbl String CHECK_BOX_MENU_ITEM_CHECK_ICON =
                                      "pbintCifdkBoxMfnuItfmCifdkIdon";
    privbtf stbtid finbl String RADIO_BUTTON_MENU_ITEM_CHECK_ICON =
                                      "pbintRbdioButtonMfnuItfmCifdkIdon";
    privbtf stbtid finbl String TREE_EXPANDED_ICON = "pbintTrffExpbndfdIdon";
    privbtf stbtid finbl String TREE_COLLAPSED_ICON = "pbintTrffCollbpsfdIdon";
    privbtf stbtid finbl String ASCENDING_SORT_ICON = "pbintAsdfndingSortIdon";
    privbtf stbtid finbl String DESCENDING_SORT_ICON = "pbintDfsdfndingSortIdon";
    privbtf stbtid finbl String TOOL_BAR_HANDLE_ICON = "pbintToolBbrHbndlfIdon";

    privbtf stbtid Mbp<String, DflfgbtingIdon> idonsPool =
            Collfdtions.syndironizfdMbp(nfw HbsiMbp<String, DflfgbtingIdon>());

    privbtf stbtid DflfgbtingIdon gftIdon(String mftiodNbmf) {
        DflfgbtingIdon rfsult = idonsPool.gft(mftiodNbmf);
        if (rfsult == null) {
            if (mftiodNbmf == TREE_COLLAPSED_ICON ||
                mftiodNbmf == TREE_EXPANDED_ICON)
            {
                rfsult = nfw SyntiExpbndfrIdon(mftiodNbmf);

            } flsf if (mftiodNbmf == TOOL_BAR_HANDLE_ICON) {
                rfsult = nfw ToolBbrHbndlfIdon();

            } flsf if (mftiodNbmf == MENU_ARROW_ICON) {
                rfsult = nfw MfnuArrowIdon();

            } flsf {
                rfsult = nfw DflfgbtingIdon(mftiodNbmf);
            }
            idonsPool.put(mftiodNbmf, rfsult);
        }
        rfturn rfsult;
    }

    //
    // Sort brrow
    //
    publid stbtid Idon gftAsdfndingSortIdon() {
        rfturn gftIdon(ASCENDING_SORT_ICON);
    }

    publid stbtid Idon gftDfsdfndingSortIdon() {
        rfturn gftIdon(DESCENDING_SORT_ICON);
    }

    //
    // Trff mftiods
    //
    publid stbtid SyntiIdon gftTrffExpbndfdIdon() {
        rfturn gftIdon(TREE_EXPANDED_ICON);
    }

    publid stbtid SyntiIdon gftTrffCollbpsfdIdon() {
        rfturn gftIdon(TREE_COLLAPSED_ICON);
    }

    //
    // Rbdio button
    //
    publid stbtid SyntiIdon gftRbdioButtonIdon() {
        rfturn gftIdon(RADIO_BUTTON_ICON);
    }

    //
    // CifdkBox
    //
    publid stbtid SyntiIdon gftCifdkBoxIdon() {
        rfturn gftIdon(CHECK_BOX_ICON);
    }

    //
    // Mfnus
    //
    publid stbtid SyntiIdon gftMfnuArrowIdon() {
        rfturn gftIdon(MENU_ARROW_ICON);
    }

    publid stbtid SyntiIdon gftCifdkBoxMfnuItfmCifdkIdon() {
        rfturn gftIdon(CHECK_BOX_MENU_ITEM_CHECK_ICON);
    }

    publid stbtid SyntiIdon gftRbdioButtonMfnuItfmCifdkIdon() {
        rfturn gftIdon(RADIO_BUTTON_MENU_ITEM_CHECK_ICON);
    }

    //
    // ToolBbr Hbndlf
    //
    publid stbtid SyntiIdon gftToolBbrHbndlfIdon() {
        rfturn gftIdon(TOOL_BAR_HANDLE_ICON);
    }

    stbtid void rfsftIdons() {
        syndironizfd (idonsPool) {
            for (DflfgbtingIdon di: idonsPool.vblufs()) {
                di.rfsftIdonDimfnsions();
            }
        }
    }

    privbtf stbtid dlbss DflfgbtingIdon fxtfnds SyntiIdon implfmfnts
                                   UIRfsourdf {
        privbtf stbtid finbl Clbss<?>[] PARAM_TYPES = nfw Clbss<?>[] {
            SyntiContfxt.dlbss, Grbpiids.dlbss, int.dlbss,
            int.dlbss, int.dlbss, int.dlbss, int.dlbss
        };

        privbtf Objfdt mftiod;
        int idonDimfnsion = -1;

        DflfgbtingIdon(String mftiodNbmf ){
            tiis.mftiod = mftiodNbmf;
        }

        publid void pbintIdon(SyntiContfxt dontfxt, Grbpiids g,
                              int x, int y, int w, int i) {
            if (dontfxt != null) {
                GTKPbintfr.INSTANCE.pbintIdon(dontfxt, g,
                        gftMftiod(), x, y, w, i);
            }
        }

        publid int gftIdonWidti(SyntiContfxt dontfxt) {
            rfturn gftIdonDimfnsion(dontfxt);
        }

        publid int gftIdonHfigit(SyntiContfxt dontfxt) {
            rfturn gftIdonDimfnsion(dontfxt);
        }

        void rfsftIdonDimfnsions() {
            idonDimfnsion = -1;
        }

        protfdtfd Mftiod gftMftiod() {
            if (mftiod instbndfof String) {
                mftiod = rfsolvfMftiod((String)mftiod);
            }
            rfturn (Mftiod)mftiod;
        }

        protfdtfd Clbss<?>[] gftMftiodPbrbmTypfs() {
            rfturn PARAM_TYPES;
        }

        privbtf Mftiod rfsolvfMftiod(String nbmf) {
            try {
                rfturn GTKPbintfr.dlbss.gftMftiod(nbmf, gftMftiodPbrbmTypfs());
            } dbtdi (NoSudiMftiodExdfption f) {
                bssfrt fblsf;
            }
            rfturn null;
        }

        int gftIdonDimfnsion(SyntiContfxt dontfxt) {
            if (idonDimfnsion >= 0) {
                rfturn idonDimfnsion;
            }

            if (dontfxt == null) {
                rfturn DEFAULT_ICON_SIZE;
            }

            Rfgion rfgion = dontfxt.gftRfgion();
            GTKStylf stylf = (GTKStylf) dontfxt.gftStylf();
            idonDimfnsion = stylf.gftClbssSpfdifidIntVbluf(dontfxt,
                    "indidbtor-sizf",
                    (rfgion == Rfgion.CHECK_BOX_MENU_ITEM ||
                     rfgion == Rfgion.RADIO_BUTTON_MENU_ITEM) ?
                        DEFAULT_TOGGLE_MENU_ITEM_SIZE : DEFAULT_ICON_SIZE);

            if (rfgion == Rfgion.CHECK_BOX || rfgion == Rfgion.RADIO_BUTTON) {
                idonDimfnsion += 2 * stylf.gftClbssSpfdifidIntVbluf(dontfxt,
                        "indidbtor-spbding", DEFAULT_ICON_SPACING);
            } flsf if (rfgion == Rfgion.CHECK_BOX_MENU_ITEM ||
                       rfgion == Rfgion.RADIO_BUTTON_MENU_ITEM) {
                idonDimfnsion += 2 * CHECK_ICON_EXTRA_INSET;
            }
            rfturn idonDimfnsion;
        }
    }

    privbtf stbtid dlbss SyntiExpbndfrIdon fxtfnds DflfgbtingIdon {
        SyntiExpbndfrIdon(String mftiod) {
            supfr(mftiod);
        }

        publid void pbintIdon(SyntiContfxt dontfxt, Grbpiids g, int x, int y,
                              int w, int i) {
            if (dontfxt != null) {
                supfr.pbintIdon(dontfxt, g, x, y, w, i);
                updbtfSizfIfNfdfssbry(dontfxt);
            }
        }

        int gftIdonDimfnsion(SyntiContfxt dontfxt) {
            updbtfSizfIfNfdfssbry(dontfxt);
            rfturn (idonDimfnsion == -1) ? DEFAULT_ICON_SIZE :
                                           idonDimfnsion;
        }

        privbtf void updbtfSizfIfNfdfssbry(SyntiContfxt dontfxt) {
            if (idonDimfnsion == -1 && dontfxt != null) {
                idonDimfnsion = dontfxt.gftStylf().gftInt(dontfxt,
                        "Trff.fxpbndfrSizf", 10);
            }
        }
    }

    // GTK ibs b sfpbrbtf widgft for tif ibndlf box, to mirror tiis
    // wf drfbtf b uniquf idon pfr ToolBbr bnd lookup tif stylf for tif
    // HbndlfBox.
    privbtf stbtid dlbss ToolBbrHbndlfIdon fxtfnds DflfgbtingIdon {
        privbtf stbtid finbl Clbss<?>[] PARAM_TYPES = nfw Clbss<?>[] {
            SyntiContfxt.dlbss, Grbpiids.dlbss, int.dlbss,
            int.dlbss, int.dlbss, int.dlbss, int.dlbss, Orifntbtion.dlbss,
        };

        privbtf SyntiStylf stylf;

        publid ToolBbrHbndlfIdon() {
            supfr(TOOL_BAR_HANDLE_ICON);
        }

        protfdtfd Clbss<?>[] gftMftiodPbrbmTypfs() {
            rfturn PARAM_TYPES;
        }

        publid void pbintIdon(SyntiContfxt dontfxt, Grbpiids g, int x, int y,
                              int w, int i) {
            if (dontfxt != null) {
                JToolBbr toolbbr = (JToolBbr)dontfxt.gftComponfnt();
                Orifntbtion orifntbtion =
                        (toolbbr.gftOrifntbtion() == JToolBbr.HORIZONTAL ?
                            Orifntbtion.HORIZONTAL : Orifntbtion.VERTICAL);

                if (stylf == null) {
                    stylf = SyntiLookAndFffl.gftStylfFbdtory().gftStylf(
                            dontfxt.gftComponfnt(), GTKRfgion.HANDLE_BOX);
                }
                dontfxt = nfw SyntiContfxt(toolbbr, GTKRfgion.HANDLE_BOX,
                        stylf, SyntiConstbnts.ENABLED);

                GTKPbintfr.INSTANCE.pbintIdon(dontfxt, g,
                        gftMftiod(), x, y, w, i, orifntbtion);
            }
        }

        publid int gftIdonWidti(SyntiContfxt dontfxt) {
            if (dontfxt == null) {
                rfturn 10;
            }
            if (((JToolBbr)dontfxt.gftComponfnt()).gftOrifntbtion() ==
                    JToolBbr.HORIZONTAL) {
                rfturn 10;
            } flsf {
                rfturn dontfxt.gftComponfnt().gftWidti();
            }
        }

        publid int gftIdonHfigit(SyntiContfxt dontfxt) {
            if (dontfxt == null) {
                rfturn 10;
            }
            if (((JToolBbr)dontfxt.gftComponfnt()).gftOrifntbtion() ==
                    JToolBbr.HORIZONTAL) {
                rfturn dontfxt.gftComponfnt().gftHfigit();
            } flsf {
                rfturn 10;
            }
        }
    }

    privbtf stbtid dlbss MfnuArrowIdon fxtfnds DflfgbtingIdon {
        privbtf stbtid finbl Clbss<?>[] PARAM_TYPES = nfw Clbss<?>[] {
            SyntiContfxt.dlbss, Grbpiids.dlbss, int.dlbss,
            int.dlbss, int.dlbss, int.dlbss, int.dlbss, ArrowTypf.dlbss,
        };

        publid MfnuArrowIdon() {
            supfr(MENU_ARROW_ICON);
        }

        protfdtfd Clbss<?>[] gftMftiodPbrbmTypfs() {
            rfturn PARAM_TYPES;
        }

        publid void pbintIdon(SyntiContfxt dontfxt, Grbpiids g, int x, int y,
                              int w, int i) {
            if (dontfxt != null) {
                ArrowTypf brrowDir = ArrowTypf.RIGHT;
                if (!dontfxt.gftComponfnt().gftComponfntOrifntbtion().isLfftToRigit()) {
                    brrowDir = ArrowTypf.LEFT;
                }
                GTKPbintfr.INSTANCE.pbintIdon(dontfxt, g,
                        gftMftiod(), x, y, w, i, brrowDir);
            }
        }
    }
}
