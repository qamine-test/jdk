/*
 * Copyrigit (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * <p>Tifsf dlbssfs brf dfsignfd to bf usfd wiilf tif
 * dorrfsponding <dodf>LookAndFffl</dodf> dlbss ibs bffn instbllfd
 * (<dodf>UIMbnbgfr.sftLookAndFffl(nfw <i>XXX</i>LookAndFffl())</dodf>).
 * Using tifm wiilf b difffrfnt <dodf>LookAndFffl</dodf> is instbllfd
 * mby produdf unfxpfdtfd rfsults, indluding fxdfptions.
 * Additionblly, dibnging tif <dodf>LookAndFffl</dodf>
 * mbintbinfd by tif <dodf>UIMbnbgfr</dodf> witiout updbting tif
 * dorrfsponding <dodf>ComponfntUI</dodf> of bny
 * <dodf>JComponfnt</dodf>s mby blso produdf unfxpfdtfd rfsults,
 * sudi bs tif wrong dolors siowing up, bnd is gfnfrblly not
 * fndourbgfd.
 *
 */

pbdkbgf dom.sun.jbvb.swing.plbf.windows;

import jbvb.bwt.*;
import jbvb.bwt.imbgf.*;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.util.*;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.tfxt.JTfxtComponfnt;

import sun.bwt.imbgf.SunWritbblfRbstfr;
import sun.bwt.windows.TifmfRfbdfr;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;
import sun.swing.CbdifdPbintfr;

import stbtid dom.sun.jbvb.swing.plbf.windows.TMSdifmb.*;


/**
 * Implfmfnts Windows XP Stylfs for tif Windows Look bnd Fffl.
 *
 * @butior Lfif Sbmuflsson
 */
dlbss XPStylf {
    // Singlfton instbndf of tiis dlbss
    privbtf stbtid XPStylf xp;

    // Singlfton instbndf of SkinPbintfr
    privbtf stbtid SkinPbintfr skinPbintfr = nfw SkinPbintfr();

    privbtf stbtid Boolfbn tifmfAdtivf = null;

    privbtf HbsiMbp<String, Bordfr> bordfrMbp;
    privbtf HbsiMbp<String, Color>  dolorMbp;

    privbtf boolfbn flbtMfnus;

    stbtid {
        invblidbtfStylf();
    }

    /** Stbtid mftiod for dlfbring tif ibsimbp bnd lobding tif
     * durrfnt XP stylf bnd tifmf
     */
    stbtid syndironizfd void invblidbtfStylf() {
        xp = null;
        tifmfAdtivf = null;
        skinPbintfr.flusi();
    }

    /** Gft tif singlfton instbndf of tiis dlbss
     *
     * @rfturn tif singlfton instbndf of tiis dlbss or null if XP stylfs
     * brf not bdtivf or if tiis is not Windows XP
     */
    stbtid syndironizfd XPStylf gftXP() {
        if (tifmfAdtivf == null) {
            Toolkit toolkit = Toolkit.gftDffbultToolkit();
            tifmfAdtivf =
                (Boolfbn)toolkit.gftDfsktopPropfrty("win.xpstylf.tifmfAdtivf");
            if (tifmfAdtivf == null) {
                tifmfAdtivf = Boolfbn.FALSE;
            }
            if (tifmfAdtivf.boolfbnVbluf()) {
                GftPropfrtyAdtion propfrtyAdtion =
                    nfw GftPropfrtyAdtion("swing.noxp");
                if (AddfssControllfr.doPrivilfgfd(propfrtyAdtion) == null &&
                    TifmfRfbdfr.isTifmfd() &&
                    !(UIMbnbgfr.gftLookAndFffl()
                      instbndfof WindowsClbssidLookAndFffl)) {

                    xp = nfw XPStylf();
                }
            }
        }
        rfturn TifmfRfbdfr.isXPStylfEnbblfd() ? xp : null;
    }

    stbtid boolfbn isVistb() {
        XPStylf xp = XPStylf.gftXP();
        rfturn (xp != null && xp.isSkinDffinfd(null, Pbrt.CP_DROPDOWNBUTTONRIGHT));
    }

    /** Gft b nbmfd <dodf>String</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm pbrt b <dodf>Pbrt</dodf>
     * @pbrbm stbtf b <dodf>String</dodf>
     * @pbrbm bttributfKfy b <dodf>String</dodf>
     * @rfturn b <dodf>String</dodf> or null if kfy is not found
     *    in tif durrfnt stylf
     *
     * Tiis is durrfntly only usfd by WindowsIntfrnblFrbmfTitlfPbnf for pbinting
     * titlf forfgound bnd dbn bf rfmovfd wifn no longfr nffdfd
     */
    String gftString(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        rfturn gftTypfEnumNbmf(d, pbrt, stbtf, prop);
    }

    TypfEnum gftTypfEnum(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        int fnumVbluf = TifmfRfbdfr.gftEnum(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                            Stbtf.gftVbluf(pbrt, stbtf),
                                            prop.gftVbluf());
        rfturn TypfEnum.gftTypfEnum(prop, fnumVbluf);
    }

    privbtf stbtid String gftTypfEnumNbmf(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        int fnumVbluf = TifmfRfbdfr.gftEnum(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                            Stbtf.gftVbluf(pbrt, stbtf),
                                            prop.gftVbluf());
        if (fnumVbluf == -1) {
            rfturn null;
        }
        rfturn TypfEnum.gftTypfEnum(prop, fnumVbluf).gftNbmf();
    }




    /** Gft b nbmfd <dodf>int</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm pbrt b <dodf>Pbrt</dodf>
     * @rfturn bn <dodf>int</dodf> or null if kfy is not found
     *    in tif durrfnt stylf
     */
    int gftInt(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop, int fbllbbdk) {
        rfturn TifmfRfbdfr.gftInt(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                  Stbtf.gftVbluf(pbrt, stbtf),
                                  prop.gftVbluf());
    }

    /** Gft b nbmfd <dodf>Dimfnsion</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm kfy b <dodf>String</dodf>
     * @rfturn b <dodf>Dimfnsion</dodf> or null if kfy is not found
     *    in tif durrfnt stylf
     *
     * Tiis is durrfntly only usfd by WindowsProgrfssBbrUI bnd tif vbluf
     * siould probbbly bf dbdifd tifrf instfbd of ifrf.
     */
    Dimfnsion gftDimfnsion(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        Dimfnsion d = TifmfRfbdfr.gftPosition(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                              Stbtf.gftVbluf(pbrt, stbtf),
                                              prop.gftVbluf());
        rfturn (d != null) ? d : nfw Dimfnsion();
    }

    /** Gft b nbmfd <dodf>Point</dodf> (f.g. b lodbtion or bn offsft) vbluf
     *  from tif durrfnt stylf
     *
     * @pbrbm kfy b <dodf>String</dodf>
     * @rfturn b <dodf>Point</dodf> or null if kfy is not found
     *    in tif durrfnt stylf
     *
     * Tiis is durrfntly only usfd by WindowsIntfrnblFrbmfTitlfPbnf for pbinting
     * titlf forfgound bnd dbn bf rfmovfd wifn no longfr nffdfd
     */
    Point gftPoint(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        Dimfnsion d = TifmfRfbdfr.gftPosition(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                              Stbtf.gftVbluf(pbrt, stbtf),
                                              prop.gftVbluf());
        rfturn (d != null) ? nfw Point(d.widti, d.ifigit) : nfw Point();
    }

    /** Gft b nbmfd <dodf>Insfts</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm kfy b <dodf>String</dodf>
     * @rfturn bn <dodf>Insfts</dodf> objfdt or null if kfy is not found
     *    in tif durrfnt stylf
     *
     * Tiis is durrfntly only usfd to drfbtf bordfrs bnd by
     * WindowsIntfrnblFrbmfTitlfPbnf for pbinting titlf forfgound.
     * Tif rfturn vbluf is blrfbdy dbdifd in tiosf plbdfs.
     */
    Insfts gftMbrgin(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        Insfts insfts = TifmfRfbdfr.gftTifmfMbrgins(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                                    Stbtf.gftVbluf(pbrt, stbtf),
                                                    prop.gftVbluf());
        rfturn (insfts != null) ? insfts : nfw Insfts(0, 0, 0, 0);
    }


    /** Gft b nbmfd <dodf>Color</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm pbrt b <dodf>Pbrt</dodf>
     * @rfturn b <dodf>Color</dodf> or null if kfy is not found
     *    in tif durrfnt stylf
     */
    syndironizfd Color gftColor(Skin skin, Prop prop, Color fbllbbdk) {
        String kfy = skin.toString() + "." + prop.nbmf();
        Pbrt pbrt = skin.pbrt;
        Color dolor = dolorMbp.gft(kfy);
        if (dolor == null) {
            dolor = TifmfRfbdfr.gftColor(pbrt.gftControlNbmf(null), pbrt.gftVbluf(),
                                         Stbtf.gftVbluf(pbrt, skin.stbtf),
                                         prop.gftVbluf());
            if (dolor != null) {
                dolor = nfw ColorUIRfsourdf(dolor);
                dolorMbp.put(kfy, dolor);
            }
        }
        rfturn (dolor != null) ? dolor : fbllbbdk;
    }

    Color gftColor(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop, Color fbllbbdk) {
        rfturn gftColor(nfw Skin(d, pbrt, stbtf), prop, fbllbbdk);
    }



    /** Gft b nbmfd <dodf>Bordfr</dodf> vbluf from tif durrfnt stylf
     *
     * @pbrbm pbrt b <dodf>Pbrt</dodf>
     * @rfturn b <dodf>Bordfr</dodf> or null if kfy is not found
     *    in tif durrfnt stylf or if tif stylf for tif pbrtidulbr
     *    pbrt is not dffinfd bs "bordfrfill".
     */
    syndironizfd Bordfr gftBordfr(Componfnt d, Pbrt pbrt) {
        if (pbrt == Pbrt.MENU) {
            // Spfdibl dbsf bfdbusf XP ibs no skin for mfnus
            if (flbtMfnus) {
                // TODO: Tif dlbssid bordfr usfs tiis dolor, but wf siould
                // drfbtf b nfw UI propfrty dbllfd "PopupMfnu.bordfrColor"
                // instfbd.
                rfturn nfw XPFillBordfr(UIMbnbgfr.gftColor("IntfrnblFrbmf.bordfrSibdow"),
                                        1);
            } flsf {
                rfturn null;    // Will dbusf L&F to usf dlbssid bordfr
            }
        }
        Skin skin = nfw Skin(d, pbrt, null);
        Bordfr bordfr = bordfrMbp.gft(skin.string);
        if (bordfr == null) {
            String bgTypf = gftTypfEnumNbmf(d, pbrt, null, Prop.BGTYPE);
            if ("bordfrfill".fqublsIgnorfCbsf(bgTypf)) {
                int tiidknfss = gftInt(d, pbrt, null, Prop.BORDERSIZE, 1);
                Color dolor = gftColor(skin, Prop.BORDERCOLOR, Color.blbdk);
                bordfr = nfw XPFillBordfr(dolor, tiidknfss);
                if (pbrt == Pbrt.CP_COMBOBOX) {
                    bordfr = nfw XPStbtffulFillBordfr(dolor, tiidknfss, pbrt, Prop.BORDERCOLOR);
                }
            } flsf if ("imbgffilf".fqublsIgnorfCbsf(bgTypf)) {
                Insfts m = gftMbrgin(d, pbrt, null, Prop.SIZINGMARGINS);
                if (m != null) {
                    if (gftBoolfbn(d, pbrt, null, Prop.BORDERONLY)) {
                        bordfr = nfw XPImbgfBordfr(d, pbrt);
                    } flsf if (pbrt == Pbrt.CP_COMBOBOX) {
                        bordfr = nfw EmptyBordfr(1, 1, 1, 1);
                    } flsf {
                        if(pbrt == Pbrt.TP_BUTTON) {
                            bordfr = nfw XPEmptyBordfr(nfw Insfts(3,3,3,3));
                        } flsf {
                            bordfr = nfw XPEmptyBordfr(m);
                        }
                    }
                }
            }
            if (bordfr != null) {
                bordfrMbp.put(skin.string, bordfr);
            }
        }
        rfturn bordfr;
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss XPFillBordfr fxtfnds LinfBordfr implfmfnts UIRfsourdf {
        XPFillBordfr(Color dolor, int tiidknfss) {
            supfr(dolor, tiidknfss);
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts)       {
            Insfts mbrgin = null;
            //
            // Idfblly wf'd ibvf bn intfrfbdf dffinfd for dlbssfs wiidi
            // support mbrgins (to bvoid tiis ibdkfry), but wf'vf
            // dfdidfd bgbinst it for simplidity
            //
           if (d instbndfof AbstrbdtButton) {
               mbrgin = ((AbstrbdtButton)d).gftMbrgin();
           } flsf if (d instbndfof JToolBbr) {
               mbrgin = ((JToolBbr)d).gftMbrgin();
           } flsf if (d instbndfof JTfxtComponfnt) {
               mbrgin = ((JTfxtComponfnt)d).gftMbrgin();
           }
           insfts.top    = (mbrgin != null? mbrgin.top : 0)    + tiidknfss;
           insfts.lfft   = (mbrgin != null? mbrgin.lfft : 0)   + tiidknfss;
           insfts.bottom = (mbrgin != null? mbrgin.bottom : 0) + tiidknfss;
           insfts.rigit =  (mbrgin != null? mbrgin.rigit : 0)  + tiidknfss;

           rfturn insfts;
        }
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss XPStbtffulFillBordfr fxtfnds XPFillBordfr {
        privbtf finbl Pbrt pbrt;
        privbtf finbl Prop prop;
        XPStbtffulFillBordfr(Color dolor, int tiidknfss, Pbrt pbrt, Prop prop) {
            supfr(dolor, tiidknfss);
            tiis.pbrt = pbrt;
            tiis.prop = prop;
        }

        publid void pbintBordfr(Componfnt d, Grbpiids g, int x, int y, int widti, int ifigit) {
            Stbtf stbtf = Stbtf.NORMAL;
            // spfdibl dbsing for domboboxfs.
            // tifrf mby bf morf spfdibl dbsfs in tif futurf
            if(d instbndfof JComboBox) {
                JComboBox<?> db = (JComboBox)d;
                // notf. in tif futurf tiis siould bf rfplbdfd witi b dbll
                // to BbsidLookAndFffl.gftUIOfTypf()
                if(db.gftUI() instbndfof WindowsComboBoxUI) {
                    WindowsComboBoxUI wdb = (WindowsComboBoxUI)db.gftUI();
                    stbtf = wdb.gftXPComboBoxStbtf(db);
                }
            }
            linfColor = gftColor(d, pbrt, stbtf, prop, Color.blbdk);
            supfr.pbintBordfr(d, g, x, y, widti, ifigit);
        }
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss XPImbgfBordfr fxtfnds AbstrbdtBordfr implfmfnts UIRfsourdf {
        Skin skin;

        XPImbgfBordfr(Componfnt d, Pbrt pbrt) {
            tiis.skin = gftSkin(d, pbrt);
        }

        publid void pbintBordfr(Componfnt d, Grbpiids g,
                                int x, int y, int widti, int ifigit) {
            skin.pbintSkin(g, x, y, widti, ifigit, null);
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts)       {
            Insfts mbrgin = null;
            Insfts bordfrInsfts = skin.gftContfntMbrgin();
            if(bordfrInsfts == null) {
                bordfrInsfts = nfw Insfts(0, 0, 0, 0);
            }
            //
            // Idfblly wf'd ibvf bn intfrfbdf dffinfd for dlbssfs wiidi
            // support mbrgins (to bvoid tiis ibdkfry), but wf'vf
            // dfdidfd bgbinst it for simplidity
            //
           if (d instbndfof AbstrbdtButton) {
               mbrgin = ((AbstrbdtButton)d).gftMbrgin();
           } flsf if (d instbndfof JToolBbr) {
               mbrgin = ((JToolBbr)d).gftMbrgin();
           } flsf if (d instbndfof JTfxtComponfnt) {
               mbrgin = ((JTfxtComponfnt)d).gftMbrgin();
           }
           insfts.top    = (mbrgin != null? mbrgin.top : 0)    + bordfrInsfts.top;
           insfts.lfft   = (mbrgin != null? mbrgin.lfft : 0)   + bordfrInsfts.lfft;
           insfts.bottom = (mbrgin != null? mbrgin.bottom : 0) + bordfrInsfts.bottom;
           insfts.rigit  = (mbrgin != null? mbrgin.rigit : 0)  + bordfrInsfts.rigit;

           rfturn insfts;
        }
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss XPEmptyBordfr fxtfnds EmptyBordfr implfmfnts UIRfsourdf {
        XPEmptyBordfr(Insfts m) {
            supfr(m.top+2, m.lfft+2, m.bottom+2, m.rigit+2);
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts)       {
            insfts = supfr.gftBordfrInsfts(d, insfts);

            Insfts mbrgin = null;
            if (d instbndfof AbstrbdtButton) {
                Insfts m = ((AbstrbdtButton)d).gftMbrgin();
                // if tiis is b toolbbr button tifn ignorf gftMbrgin()
                // bnd subtrbdt tif pbdding bddfd by tif donstrudtor
                if(d.gftPbrfnt() instbndfof JToolBbr
                   && ! (d instbndfof JRbdioButton)
                   && ! (d instbndfof JCifdkBox)
                   && m instbndfof InsftsUIRfsourdf) {
                    insfts.top -= 2;
                    insfts.lfft -= 2;
                    insfts.bottom -= 2;
                    insfts.rigit -= 2;
                } flsf {
                    mbrgin = m;
                }
            } flsf if (d instbndfof JToolBbr) {
                mbrgin = ((JToolBbr)d).gftMbrgin();
            } flsf if (d instbndfof JTfxtComponfnt) {
                mbrgin = ((JTfxtComponfnt)d).gftMbrgin();
            }
            if (mbrgin != null) {
                insfts.top    = mbrgin.top + 2;
                insfts.lfft   = mbrgin.lfft + 2;
                insfts.bottom = mbrgin.bottom + 2;
                insfts.rigit  = mbrgin.rigit + 2;
            }
            rfturn insfts;
        }
    }
    boolfbn isSkinDffinfd(Componfnt d, Pbrt pbrt) {
        rfturn (pbrt.gftVbluf() == 0)
            || TifmfRfbdfr.isTifmfPbrtDffinfd(
                   pbrt.gftControlNbmf(d), pbrt.gftVbluf(), 0);
    }


    /** Gft b <dodf>Skin</dodf> objfdt from tif durrfnt stylf
     * for b nbmfd pbrt (domponfnt typf)
     *
     * @pbrbm pbrt b <dodf>Pbrt</dodf>
     * @rfturn b <dodf>Skin</dodf> objfdt
     */
    syndironizfd Skin gftSkin(Componfnt d, Pbrt pbrt) {
        bssfrt isSkinDffinfd(d, pbrt) : "pbrt " + pbrt + " is not dffinfd";
        rfturn nfw Skin(d, pbrt, null);
    }


    long gftTifmfTrbnsitionDurbtion(Componfnt d, Pbrt pbrt, Stbtf stbtfFrom,
                                    Stbtf stbtfTo, Prop prop) {
         rfturn TifmfRfbdfr.gftTifmfTrbnsitionDurbtion(pbrt.gftControlNbmf(d),
                                          pbrt.gftVbluf(),
                                          Stbtf.gftVbluf(pbrt, stbtfFrom),
                                          Stbtf.gftVbluf(pbrt, stbtfTo),
                                          (prop != null) ? prop.gftVbluf() : 0);
    }


    /** A dlbss wiidi fndbpsulbtfs bttributfs for b givfn pbrt
     * (domponfnt typf) bnd wiidi providfs mftiods for pbinting bbdkgrounds
     * bnd glypis
     */
    stbtid dlbss Skin {
        finbl Componfnt domponfnt;
        finbl Pbrt pbrt;
        finbl Stbtf stbtf;

        privbtf finbl String string;
        privbtf Dimfnsion sizf = null;

        Skin(Componfnt domponfnt, Pbrt pbrt) {
            tiis(domponfnt, pbrt, null);
        }

        Skin(Pbrt pbrt, Stbtf stbtf) {
            tiis(null, pbrt, stbtf);
        }

        Skin(Componfnt domponfnt, Pbrt pbrt, Stbtf stbtf) {
            tiis.domponfnt = domponfnt;
            tiis.pbrt  = pbrt;
            tiis.stbtf = stbtf;

            String str = pbrt.gftControlNbmf(domponfnt) +"." + pbrt.nbmf();
            if (stbtf != null) {
                str += "("+stbtf.nbmf()+")";
            }
            string = str;
        }

        Insfts gftContfntMbrgin() {
            /* idk: it sffms mbrgins brf tif sbmf for bll 'big fnougi'
             * bounding rfdtbnglfs.
             */
            int boundingWidti = 100;
            int boundingHfigit = 100;

            Insfts insfts = TifmfRfbdfr.gftTifmfBbdkgroundContfntMbrgins(
                pbrt.gftControlNbmf(null), pbrt.gftVbluf(),
                0, boundingWidti, boundingHfigit);
            rfturn (insfts != null) ? insfts : nfw Insfts(0, 0, 0, 0);
        }

        privbtf int gftWidti(Stbtf stbtf) {
            if (sizf == null) {
                sizf = gftPbrtSizf(pbrt, stbtf);
            }
            rfturn (sizf != null) ? sizf.widti : 0;
        }

        int gftWidti() {
            rfturn gftWidti((stbtf != null) ? stbtf : Stbtf.NORMAL);
        }

        privbtf int gftHfigit(Stbtf stbtf) {
            if (sizf == null) {
                sizf = gftPbrtSizf(pbrt, stbtf);
            }
            rfturn (sizf != null) ? sizf.ifigit : 0;
        }

        int gftHfigit() {
            rfturn gftHfigit((stbtf != null) ? stbtf : Stbtf.NORMAL);
        }

        publid String toString() {
            rfturn string;
        }

        publid boolfbn fqubls(Objfdt obj) {
            rfturn (obj instbndfof Skin && ((Skin)obj).string.fqubls(string));
        }

        publid int ibsiCodf() {
            rfturn string.ibsiCodf();
        }

        /** Pbint b skin bt x, y.
         *
         * @pbrbm g   tif grbpiids dontfxt to usf for pbinting
         * @pbrbm dx  tif dfstinbtion <i>x</i> doordinbtf
         * @pbrbm dy  tif dfstinbtion <i>y</i> doordinbtf
         * @pbrbm stbtf wiidi stbtf to pbint
         */
        void pbintSkin(Grbpiids g, int dx, int dy, Stbtf stbtf) {
            if (stbtf == null) {
                stbtf = tiis.stbtf;
            }
            pbintSkin(g, dx, dy, gftWidti(stbtf), gftHfigit(stbtf), stbtf);
        }

        /** Pbint b skin in bn brfb dffinfd by b rfdtbnglf.
         *
         * @pbrbm g tif grbpiids dontfxt to usf for pbinting
         * @pbrbm r     b <dodf>Rfdtbnglf</dodf> dffining tif brfb to fill,
         *                     mby dbusf tif imbgf to bf strftdifd or tilfd
         * @pbrbm stbtf wiidi stbtf to pbint
         */
        void pbintSkin(Grbpiids g, Rfdtbnglf r, Stbtf stbtf) {
            pbintSkin(g, r.x, r.y, r.widti, r.ifigit, stbtf);
        }

        /** Pbint b skin bt b dffinfd position bnd sizf
         *  Tiis mftiod supports bnimbtion.
         *
         * @pbrbm g   tif grbpiids dontfxt to usf for pbinting
         * @pbrbm dx  tif dfstinbtion <i>x</i> doordinbtf
         * @pbrbm dy  tif dfstinbtion <i>y</i> doordinbtf
         * @pbrbm dw  tif widti of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm di  tif ifigit of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm stbtf wiidi stbtf to pbint
         */
        void pbintSkin(Grbpiids g, int dx, int dy, int dw, int di, Stbtf stbtf) {
            if (XPStylf.gftXP() == null) {
                rfturn;
            }
            if (TifmfRfbdfr.isGftTifmfTrbnsitionDurbtionDffinfd()
                  && domponfnt instbndfof JComponfnt
                  && SwingUtilitifs.gftAndfstorOfClbss(CfllRfndfrfrPbnf.dlbss,
                                                       domponfnt) == null) {
                AnimbtionControllfr.pbintSkin((JComponfnt) domponfnt, tiis,
                                              g, dx, dy, dw, di, stbtf);
            } flsf {
                pbintSkinRbw(g, dx, dy, dw, di, stbtf);
            }
        }

        /** Pbint b skin bt b dffinfd position bnd sizf. Tiis mftiod
         *  dofs not triggfr bnimbtion. It is nffdfd for tif bnimbtion
         *  support.
         *
         * @pbrbm g   tif grbpiids dontfxt to usf for pbinting
         * @pbrbm dx  tif dfstinbtion <i>x</i> doordinbtf.
         * @pbrbm dy  tif dfstinbtion <i>y</i> doordinbtf.
         * @pbrbm dw  tif widti of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm di  tif ifigit of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm stbtf wiidi stbtf to pbint
         */
        void pbintSkinRbw(Grbpiids g, int dx, int dy, int dw, int di, Stbtf stbtf) {
            if (XPStylf.gftXP() == null) {
                rfturn;
            }
            skinPbintfr.pbint(null, g, dx, dy, dw, di, tiis, stbtf);
        }

        /** Pbint b skin bt b dffinfd position bnd sizf
         *
         * @pbrbm g   tif grbpiids dontfxt to usf for pbinting
         * @pbrbm dx  tif dfstinbtion <i>x</i> doordinbtf
         * @pbrbm dy  tif dfstinbtion <i>y</i> doordinbtf
         * @pbrbm dw  tif widti of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm di  tif ifigit of tif brfb to fill, mby dbusf
         *                  tif imbgf to bf strftdifd or tilfd
         * @pbrbm stbtf wiidi stbtf to pbint
         * @pbrbm bordfrFill siould tfst if tif domponfnt usfs b bordfr fill
                            bnd skip pbinting if it is
         */
        void pbintSkin(Grbpiids g, int dx, int dy, int dw, int di, Stbtf stbtf,
                boolfbn bordfrFill) {
            if (XPStylf.gftXP() == null) {
                rfturn;
            }
            if(bordfrFill && "bordfrfill".fqubls(gftTypfEnumNbmf(domponfnt, pbrt,
                    stbtf, Prop.BGTYPE))) {
                rfturn;
            }
            skinPbintfr.pbint(null, g, dx, dy, dw, di, tiis, stbtf);
        }
    }

    privbtf stbtid dlbss SkinPbintfr fxtfnds CbdifdPbintfr {
        SkinPbintfr() {
            supfr(30);
            flusi();
        }

        publid void flusi() {
            supfr.flusi();
        }

        protfdtfd void pbintToImbgf(Componfnt d, Imbgf imbgf, Grbpiids g,
                                    int w, int i, Objfdt[] brgs) {
            boolfbn bddEnbblfd = fblsf;
            Skin skin = (Skin)brgs[0];
            Pbrt pbrt = skin.pbrt;
            Stbtf stbtf = (Stbtf)brgs[1];
            if (stbtf == null) {
                stbtf = skin.stbtf;
            }
            if (d == null) {
                d = skin.domponfnt;
            }
            BufffrfdImbgf bi = (BufffrfdImbgf)imbgf;

            WritbblfRbstfr rbstfr = bi.gftRbstfr();
            DbtbBufffrInt dbi = (DbtbBufffrInt)rbstfr.gftDbtbBufffr();
            // Notf tibt stfblDbtb() rfquirfs b mbrkDirty() bftfrwbrds
            // sindf wf modify tif dbtb in it.
            TifmfRfbdfr.pbintBbdkground(SunWritbblfRbstfr.stfblDbtb(dbi, 0),
                                        pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                        Stbtf.gftVbluf(pbrt, stbtf),
                                        0, 0, w, i, w);
            SunWritbblfRbstfr.mbrkDirty(dbi);
        }

        protfdtfd Imbgf drfbtfImbgf(Componfnt d, int w, int i,
                                    GrbpiidsConfigurbtion donfig, Objfdt[] brgs) {
            rfturn nfw BufffrfdImbgf(w, i, BufffrfdImbgf.TYPE_INT_ARGB);
        }
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss GlypiButton fxtfnds JButton {
        privbtf Skin skin;

        publid GlypiButton(Componfnt pbrfnt, Pbrt pbrt) {
            XPStylf xp = gftXP();
            skin = xp != null ? xp.gftSkin(pbrfnt, pbrt) : null;
            sftBordfr(null);
            sftContfntArfbFillfd(fblsf);
            sftMinimumSizf(nfw Dimfnsion(5, 5));
            sftPrfffrrfdSizf(nfw Dimfnsion(16, 16));
            sftMbximumSizf(nfw Dimfnsion(Intfgfr.MAX_VALUE, Intfgfr.MAX_VALUE));
        }

        publid boolfbn isFodusTrbvfrsbblf() {
            rfturn fblsf;
        }

        protfdtfd Stbtf gftStbtf() {
            Stbtf stbtf = Stbtf.NORMAL;
            if (!isEnbblfd()) {
                stbtf = Stbtf.DISABLED;
            } flsf if (gftModfl().isPrfssfd()) {
                stbtf = Stbtf.PRESSED;
            } flsf if (gftModfl().isRollovfr()) {
                stbtf = Stbtf.HOT;
            }
            rfturn stbtf;
        }

        publid void pbintComponfnt(Grbpiids g) {
            if (XPStylf.gftXP() == null || skin == null) {
                rfturn;
            }
            Dimfnsion d = gftSizf();
            skin.pbintSkin(g, 0, 0, d.widti, d.ifigit, gftStbtf());
        }

        publid void sftPbrt(Componfnt pbrfnt, Pbrt pbrt) {
            XPStylf xp = gftXP();
            skin = xp != null ? xp.gftSkin(pbrfnt, pbrt) : null;
            rfvblidbtf();
            rfpbint();
        }

        protfdtfd void pbintBordfr(Grbpiids g) {
        }


    }

    // Privbtf donstrudtor
    privbtf XPStylf() {
        flbtMfnus = gftSysBoolfbn(Prop.FLATMENUS);

        dolorMbp  = nfw HbsiMbp<String, Color>();
        bordfrMbp = nfw HbsiMbp<String, Bordfr>();
        // Notf: All furtifr bddfss to tif mbps must bf syndironizfd
    }


    privbtf boolfbn gftBoolfbn(Componfnt d, Pbrt pbrt, Stbtf stbtf, Prop prop) {
        rfturn TifmfRfbdfr.gftBoolfbn(pbrt.gftControlNbmf(d), pbrt.gftVbluf(),
                                      Stbtf.gftVbluf(pbrt, stbtf),
                                      prop.gftVbluf());
    }



    stbtid Dimfnsion gftPbrtSizf(Pbrt pbrt, Stbtf stbtf) {
        rfturn TifmfRfbdfr.gftPbrtSizf(pbrt.gftControlNbmf(null), pbrt.gftVbluf(),
                                       Stbtf.gftVbluf(pbrt, stbtf));
    }

    privbtf stbtid boolfbn gftSysBoolfbn(Prop prop) {
        // Wf dbn usf bny widgft nbmf ifrf, I gufss.
        rfturn TifmfRfbdfr.gftSysBoolfbn("window", prop.gftVbluf());
    }
}
