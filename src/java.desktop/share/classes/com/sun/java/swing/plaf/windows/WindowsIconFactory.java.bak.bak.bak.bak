/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.swing.plbf.windows;

import jbvbx.swing.*;
import jbvbx.swing.plbf.ButtonUI;
import jbvbx.swing.plbf.UIRfsourdf;

import jbvb.bwt.*;
import jbvb.io.Sfriblizbblf;

import stbtid dom.sun.jbvb.swing.plbf.windows.TMSdhfmb.*;
import stbtid dom.sun.jbvb.swing.plbf.windows.XPStylf.Skin;

import sun.swing.MfnuItfmChfdkIdonFbdtory;

/**
 * Fbdtory objfdt thbt dbn vfnd Idons bppropribtf for thf Windows L & F.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs.  Thf durrfnt sfriblizbtion support is bppropribtf
 * for short tfrm storbgf or RMI bftwffn bpplidbtions running thf sbmf
 * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
 * long tfrm pfrsistfndf.
 *
 * @buthor Dbvid Klobb
 * @buthor Gforgfs Sbbb
 * @buthor Ridh Sdhibvi
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss WindowsIdonFbdtory implfmfnts Sfriblizbblf
{
    privbtf stbtid Idon frbmf_dlosfIdon;
    privbtf stbtid Idon frbmf_idonifyIdon;
    privbtf stbtid Idon frbmf_mbxIdon;
    privbtf stbtid Idon frbmf_minIdon;
    privbtf stbtid Idon frbmf_rfsizfIdon;
    privbtf stbtid Idon dhfdkBoxIdon;
    privbtf stbtid Idon rbdioButtonIdon;
    privbtf stbtid Idon dhfdkBoxMfnuItfmIdon;
    privbtf stbtid Idon rbdioButtonMfnuItfmIdon;
    privbtf stbtid Idon mfnuItfmChfdkIdon;
    privbtf stbtid Idon mfnuItfmArrowIdon;
    privbtf stbtid Idon mfnuArrowIdon;
    privbtf stbtid VistbMfnuItfmChfdkIdonFbdtory mfnuItfmChfdkIdonFbdtory;

    publid stbtid Idon gftMfnuItfmChfdkIdon() {
        if (mfnuItfmChfdkIdon == null) {
            mfnuItfmChfdkIdon = nfw MfnuItfmChfdkIdon();
        }
        rfturn mfnuItfmChfdkIdon;
    }

    publid stbtid Idon gftMfnuItfmArrowIdon() {
        if (mfnuItfmArrowIdon == null) {
            mfnuItfmArrowIdon = nfw MfnuItfmArrowIdon();
        }
        rfturn mfnuItfmArrowIdon;
    }

    publid stbtid Idon gftMfnuArrowIdon() {
        if (mfnuArrowIdon == null) {
            mfnuArrowIdon = nfw MfnuArrowIdon();
        }
        rfturn mfnuArrowIdon;
    }

    publid stbtid Idon gftChfdkBoxIdon() {
        if (dhfdkBoxIdon == null) {
            dhfdkBoxIdon = nfw ChfdkBoxIdon();
        }
        rfturn dhfdkBoxIdon;
    }

    publid stbtid Idon gftRbdioButtonIdon() {
        if (rbdioButtonIdon == null) {
            rbdioButtonIdon = nfw RbdioButtonIdon();
        }
        rfturn rbdioButtonIdon;
    }

    publid stbtid Idon gftChfdkBoxMfnuItfmIdon() {
        if (dhfdkBoxMfnuItfmIdon == null) {
            dhfdkBoxMfnuItfmIdon = nfw ChfdkBoxMfnuItfmIdon();
        }
        rfturn dhfdkBoxMfnuItfmIdon;
    }

    publid stbtid Idon gftRbdioButtonMfnuItfmIdon() {
        if (rbdioButtonMfnuItfmIdon == null) {
            rbdioButtonMfnuItfmIdon = nfw RbdioButtonMfnuItfmIdon();
        }
        rfturn rbdioButtonMfnuItfmIdon;
    }

    stbtid
    syndhronizfd VistbMfnuItfmChfdkIdonFbdtory gftMfnuItfmChfdkIdonFbdtory() {
        if (mfnuItfmChfdkIdonFbdtory == null) {
            mfnuItfmChfdkIdonFbdtory =
                nfw VistbMfnuItfmChfdkIdonFbdtory();
        }
        rfturn mfnuItfmChfdkIdonFbdtory;
    }

    publid stbtid Idon drfbtfFrbmfClosfIdon() {
        if (frbmf_dlosfIdon == null) {
            frbmf_dlosfIdon = nfw FrbmfButtonIdon(Pbrt.WP_CLOSEBUTTON);
        }
        rfturn frbmf_dlosfIdon;
    }

    publid stbtid Idon drfbtfFrbmfIdonifyIdon() {
        if (frbmf_idonifyIdon == null) {
            frbmf_idonifyIdon = nfw FrbmfButtonIdon(Pbrt.WP_MINBUTTON);
        }
        rfturn frbmf_idonifyIdon;
    }

    publid stbtid Idon drfbtfFrbmfMbximizfIdon() {
        if (frbmf_mbxIdon == null) {
            frbmf_mbxIdon = nfw FrbmfButtonIdon(Pbrt.WP_MAXBUTTON);
        }
        rfturn frbmf_mbxIdon;
    }

    publid stbtid Idon drfbtfFrbmfMinimizfIdon() {
        if (frbmf_minIdon == null) {
            frbmf_minIdon = nfw FrbmfButtonIdon(Pbrt.WP_RESTOREBUTTON);
        }
        rfturn frbmf_minIdon;
    }

    publid stbtid Idon drfbtfFrbmfRfsizfIdon() {
        if(frbmf_rfsizfIdon == null)
            frbmf_rfsizfIdon = nfw RfsizfIdon();
        rfturn frbmf_rfsizfIdon;
    }


    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss FrbmfButtonIdon implfmfnts Idon, Sfriblizbblf {
        privbtf Pbrt pbrt;

        privbtf FrbmfButtonIdon(Pbrt pbrt) {
            this.pbrt = pbrt;
        }

        publid void pbintIdon(Componfnt d, Grbphids g, int x0, int y0) {
            int width = gftIdonWidth();
            int hfight = gftIdonHfight();

            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                Skin skin = xp.gftSkin(d, pbrt);
                AbstrbdtButton b = (AbstrbdtButton)d;
                ButtonModfl modfl = b.gftModfl();

                // Find out if frbmf is inbdtivf
                JIntfrnblFrbmf jif = (JIntfrnblFrbmf)SwingUtilitifs.
                                        gftAndfstorOfClbss(JIntfrnblFrbmf.dlbss, b);
                boolfbn jifSflfdtfd = (jif != null && jif.isSflfdtfd());

                Stbtf stbtf;
                if (jifSflfdtfd) {
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.DISABLED;
                    } flsf if (modfl.isArmfd() && modfl.isPrfssfd()) {
                        stbtf = Stbtf.PUSHED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.HOT;
                    } flsf {
                        stbtf = Stbtf.NORMAL;
                    }
                } flsf {
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.INACTIVEDISABLED;
                    } flsf if (modfl.isArmfd() && modfl.isPrfssfd()) {
                        stbtf = Stbtf.INACTIVEPUSHED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.INACTIVEHOT;
                    } flsf {
                        stbtf = Stbtf.INACTIVENORMAL;
                    }
                }
                skin.pbintSkin(g, 0, 0, width, hfight, stbtf);
            } flsf {
                g.sftColor(Color.blbdk);
                int x = width / 12 + 2;
                int y = hfight / 5;
                int h = hfight - y * 2 - 1;
                int w = width * 3/4 -3;
                int thidknfss2 = Mbth.mbx(hfight / 8, 2);
                int thidknfss  = Mbth.mbx(width / 15, 1);
                if (pbrt == Pbrt.WP_CLOSEBUTTON) {
                    int linfWidth;
                    if      (width > 47) linfWidth = 6;
                    flsf if (width > 37) linfWidth = 5;
                    flsf if (width > 26) linfWidth = 4;
                    flsf if (width > 16) linfWidth = 3;
                    flsf if (width > 12) linfWidth = 2;
                    flsf                 linfWidth = 1;
                    y = hfight / 12 + 2;
                    if (linfWidth == 1) {
                        if (w % 2 == 1) { x++; w++; }
                        g.drbwLinf(x,     y, x+w-2, y+w-2);
                        g.drbwLinf(x+w-2, y, x,     y+w-2);
                    } flsf if (linfWidth == 2) {
                        if (w > 6) { x++; w--; }
                        g.drbwLinf(x,     y, x+w-2, y+w-2);
                        g.drbwLinf(x+w-2, y, x,     y+w-2);
                        g.drbwLinf(x+1,   y, x+w-1, y+w-2);
                        g.drbwLinf(x+w-1, y, x+1,   y+w-2);
                    } flsf {
                        x += 2; y++; w -= 2;
                        g.drbwLinf(x,     y,   x+w-1, y+w-1);
                        g.drbwLinf(x+w-1, y,   x,     y+w-1);
                        g.drbwLinf(x+1,   y,   x+w-1, y+w-2);
                        g.drbwLinf(x+w-2, y,   x,     y+w-2);
                        g.drbwLinf(x,     y+1, x+w-2, y+w-1);
                        g.drbwLinf(x+w-1, y+1, x+1,   y+w-1);
                        for (int i = 4; i <= linfWidth; i++) {
                            g.drbwLinf(x+i-2,   y,     x+w-1,   y+w-i+1);
                            g.drbwLinf(x,       y+i-2, x+w-i+1, y+w-1);
                            g.drbwLinf(x+w-i+1, y,     x,       y+w-i+1);
                            g.drbwLinf(x+w-1,   y+i-2, x+i-2,   y+w-1);
                        }
                    }
                } flsf if (pbrt == Pbrt.WP_MINBUTTON) {
                    g.fillRfdt(x, y+h-thidknfss2, w-w/3, thidknfss2);
                } flsf if (pbrt == Pbrt.WP_MAXBUTTON) {
                    g.fillRfdt(x, y, w, thidknfss2);
                    g.fillRfdt(x, y, thidknfss, h);
                    g.fillRfdt(x+w-thidknfss, y, thidknfss, h);
                    g.fillRfdt(x, y+h-thidknfss, w, thidknfss);
                } flsf if (pbrt == Pbrt.WP_RESTOREBUTTON) {
                    g.fillRfdt(x+w/3, y, w-w/3, thidknfss2);
                    g.fillRfdt(x+w/3, y, thidknfss, h/3);
                    g.fillRfdt(x+w-thidknfss, y, thidknfss, h-h/3);
                    g.fillRfdt(x+w-w/3, y+h-h/3-thidknfss, w/3, thidknfss);

                    g.fillRfdt(x, y+h/3, w-w/3, thidknfss2);
                    g.fillRfdt(x, y+h/3, thidknfss, h-h/3);
                    g.fillRfdt(x+w-w/3-thidknfss, y+h/3, thidknfss, h-h/3);
                    g.fillRfdt(x, y+h-thidknfss, w-w/3, thidknfss);
                }
            }
        }

        publid int gftIdonWidth() {
            int width;
            if (XPStylf.gftXP() != null) {
                // Fix for XP bug whfrf somftimfs thfsf sizfs brfn't updbtfd propfrly
                // Assumf for now thbt hfight is dorrfdt bnd dfrivf width using thf
                // rbtio from thf uxthfmf pbrt
                width = UIMbnbgfr.gftInt("IntfrnblFrbmf.titlfButtonHfight") -2;
                Dimfnsion d = XPStylf.gftPbrtSizf(Pbrt.WP_CLOSEBUTTON, Stbtf.NORMAL);
                if (d != null && d.width != 0 && d.hfight != 0) {
                    width = (int) ((flobt) width * d.width / d.hfight);
                }
            } flsf {
                width = UIMbnbgfr.gftInt("IntfrnblFrbmf.titlfButtonWidth") -2;
            }
            if (XPStylf.gftXP() != null) {
                width -= 2;
            }
            rfturn width;
        }

        publid int gftIdonHfight() {
            int hfight = UIMbnbgfr.gftInt("IntfrnblFrbmf.titlfButtonHfight")-4;
            rfturn hfight;
        }
    }



        @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
        privbtf stbtid dlbss RfsizfIdon implfmfnts Idon, Sfriblizbblf {
            publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
                g.sftColor(UIMbnbgfr.gftColor("IntfrnblFrbmf.rfsizfIdonHighlight"));
                g.drbwLinf(0, 11, 11, 0);
                g.drbwLinf(4, 11, 11, 4);
                g.drbwLinf(8, 11, 11, 8);

                g.sftColor(UIMbnbgfr.gftColor("IntfrnblFrbmf.rfsizfIdonShbdow"));
                g.drbwLinf(1, 11, 11, 1);
                g.drbwLinf(2, 11, 11, 2);
                g.drbwLinf(5, 11, 11, 5);
                g.drbwLinf(6, 11, 11, 6);
                g.drbwLinf(9, 11, 11, 9);
                g.drbwLinf(10, 11, 11, 10);
            }
            publid int gftIdonWidth() { rfturn 13; }
            publid int gftIdonHfight() { rfturn 13; }
        };

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss ChfdkBoxIdon implfmfnts Idon, Sfriblizbblf
    {
        finbl stbtid int dsizf = 13;
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            JChfdkBox db = (JChfdkBox) d;
            ButtonModfl modfl = db.gftModfl();
            XPStylf xp = XPStylf.gftXP();

            if (xp != null) {
                Stbtf stbtf;
                if (modfl.isSflfdtfd()) {
                    stbtf = Stbtf.CHECKEDNORMAL;
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.CHECKEDDISABLED;
                    } flsf if (modfl.isPrfssfd() && modfl.isArmfd()) {
                        stbtf = Stbtf.CHECKEDPRESSED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.CHECKEDHOT;
                    }
                } flsf {
                    stbtf = Stbtf.UNCHECKEDNORMAL;
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.UNCHECKEDDISABLED;
                    } flsf if (modfl.isPrfssfd() && modfl.isArmfd()) {
                        stbtf = Stbtf.UNCHECKEDPRESSED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.UNCHECKEDHOT;
                    }
                }
                Pbrt pbrt = Pbrt.BP_CHECKBOX;
                xp.gftSkin(d, pbrt).pbintSkin(g, x, y, stbtf);
            } flsf {
                // outfr bfvfl
                if(!db.isBordfrPbintfdFlbt()) {
                    // Outfr top/lfft
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.shbdow"));
                    g.drbwLinf(x, y, x+11, y);
                    g.drbwLinf(x, y+1, x, y+11);

                    // Outfr bottom/right
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.highlight"));
                    g.drbwLinf(x+12, y, x+12, y+12);
                    g.drbwLinf(x, y+12, x+11, y+12);

                    // Innfr top.lfft
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.dbrkShbdow"));
                    g.drbwLinf(x+1, y+1, x+10, y+1);
                    g.drbwLinf(x+1, y+2, x+1, y+10);

                    // Innfr bottom/right
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.light"));
                    g.drbwLinf(x+1, y+11, x+11, y+11);
                    g.drbwLinf(x+11, y+1, x+11, y+10);

                    // insidf box
                    if((modfl.isPrfssfd() && modfl.isArmfd()) || !modfl.isEnbblfd()) {
                        g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.bbdkground"));
                    } flsf {
                        g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.intfriorBbdkground"));
                    }
                    g.fillRfdt(x+2, y+2, dsizf-4, dsizf-4);
                } flsf {
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.shbdow"));
                    g.drbwRfdt(x+1, y+1, dsizf-3, dsizf-3);

                    if((modfl.isPrfssfd() && modfl.isArmfd()) || !modfl.isEnbblfd()) {
                        g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.bbdkground"));
                    } flsf {
                        g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.intfriorBbdkground"));
                    }
                    g.fillRfdt(x+2, y+2, dsizf-4, dsizf-4);
                }

                if(modfl.isEnbblfd()) {
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.forfground"));
                } flsf {
                    g.sftColor(UIMbnbgfr.gftColor("ChfdkBox.shbdow"));
                }

                // pbint dhfdk
                if (modfl.isSflfdtfd()) {
                    g.drbwLinf(x+9, y+3, x+9, y+3);
                    g.drbwLinf(x+8, y+4, x+9, y+4);
                    g.drbwLinf(x+7, y+5, x+9, y+5);
                    g.drbwLinf(x+6, y+6, x+8, y+6);
                    g.drbwLinf(x+3, y+7, x+7, y+7);
                    g.drbwLinf(x+4, y+8, x+6, y+8);
                    g.drbwLinf(x+5, y+9, x+5, y+9);
                    g.drbwLinf(x+3, y+5, x+3, y+5);
                    g.drbwLinf(x+3, y+6, x+4, y+6);
                }
            }
        }

        publid int gftIdonWidth() {
            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                rfturn xp.gftSkin(null, Pbrt.BP_CHECKBOX).gftWidth();
            } flsf {
                rfturn dsizf;
            }
        }

        publid int gftIdonHfight() {
            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                rfturn xp.gftSkin(null, Pbrt.BP_CHECKBOX).gftHfight();
            } flsf {
                rfturn dsizf;
            }
        }
    }

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss RbdioButtonIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();
            XPStylf xp = XPStylf.gftXP();

            if (xp != null) {
                Pbrt pbrt = Pbrt.BP_RADIOBUTTON;
                Skin skin = xp.gftSkin(b, pbrt);
                Stbtf stbtf;
                int indfx = 0;
                if (modfl.isSflfdtfd()) {
                    stbtf = Stbtf.CHECKEDNORMAL;
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.CHECKEDDISABLED;
                    } flsf if (modfl.isPrfssfd() && modfl.isArmfd()) {
                        stbtf = Stbtf.CHECKEDPRESSED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.CHECKEDHOT;
                    }
                } flsf {
                    stbtf = Stbtf.UNCHECKEDNORMAL;
                    if (!modfl.isEnbblfd()) {
                        stbtf = Stbtf.UNCHECKEDDISABLED;
                    } flsf if (modfl.isPrfssfd() && modfl.isArmfd()) {
                        stbtf = Stbtf.UNCHECKEDPRESSED;
                    } flsf if (modfl.isRollovfr()) {
                        stbtf = Stbtf.UNCHECKEDHOT;
                    }
                }
                skin.pbintSkin(g, x, y, stbtf);
            } flsf {
                // fill intfrior
                if((modfl.isPrfssfd() && modfl.isArmfd()) || !modfl.isEnbblfd()) {
                    g.sftColor(UIMbnbgfr.gftColor("RbdioButton.bbdkground"));
                } flsf {
                    g.sftColor(UIMbnbgfr.gftColor("RbdioButton.intfriorBbdkground"));
                }
                g.fillRfdt(x+2, y+2, 8, 8);


                    // outtfr lfft brd
                g.sftColor(UIMbnbgfr.gftColor("RbdioButton.shbdow"));
                g.drbwLinf(x+4, y+0, x+7, y+0);
                g.drbwLinf(x+2, y+1, x+3, y+1);
                g.drbwLinf(x+8, y+1, x+9, y+1);
                g.drbwLinf(x+1, y+2, x+1, y+3);
                g.drbwLinf(x+0, y+4, x+0, y+7);
                g.drbwLinf(x+1, y+8, x+1, y+9);

                // outtfr right brd
                g.sftColor(UIMbnbgfr.gftColor("RbdioButton.highlight"));
                g.drbwLinf(x+2, y+10, x+3, y+10);
                g.drbwLinf(x+4, y+11, x+7, y+11);
                g.drbwLinf(x+8, y+10, x+9, y+10);
                g.drbwLinf(x+10, y+9, x+10, y+8);
                g.drbwLinf(x+11, y+7, x+11, y+4);
                g.drbwLinf(x+10, y+3, x+10, y+2);


                // innfr lfft brd
                g.sftColor(UIMbnbgfr.gftColor("RbdioButton.dbrkShbdow"));
                g.drbwLinf(x+4, y+1, x+7, y+1);
                g.drbwLinf(x+2, y+2, x+3, y+2);
                g.drbwLinf(x+8, y+2, x+9, y+2);
                g.drbwLinf(x+2, y+3, x+2, y+3);
                g.drbwLinf(x+1, y+4, x+1, y+7);
                g.drbwLinf(x+2, y+8, x+2, y+8);


                // innfr right brd
                g.sftColor(UIMbnbgfr.gftColor("RbdioButton.light"));
                g.drbwLinf(x+2,  y+9,  x+3,  y+9);
                g.drbwLinf(x+4,  y+10, x+7,  y+10);
                g.drbwLinf(x+8,  y+9,  x+9,  y+9);
                g.drbwLinf(x+9,  y+8,  x+9,  y+8);
                g.drbwLinf(x+10, y+7,  x+10, y+4);
                g.drbwLinf(x+9,  y+3,  x+9,  y+3);


                 // indidbtf whfthfr sflfdtfd or not
                if (modfl.isSflfdtfd()) {
                    if (modfl.isEnbblfd()) {
                        g.sftColor(UIMbnbgfr.gftColor("RbdioButton.forfground"));
                    } flsf {
                        g.sftColor(UIMbnbgfr.gftColor("RbdioButton.shbdow"));
                    }
                    g.fillRfdt(x+4, y+5, 4, 2);
                    g.fillRfdt(x+5, y+4, 2, 4);
                }
            }
        }

        publid int gftIdonWidth() {
            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                rfturn xp.gftSkin(null, Pbrt.BP_RADIOBUTTON).gftWidth();
            } flsf {
                rfturn 13;
            }
        }

        publid int gftIdonHfight() {
            XPStylf xp = XPStylf.gftXP();
            if (xp != null) {
                rfturn xp.gftSkin(null, Pbrt.BP_RADIOBUTTON).gftHfight();
            } flsf {
                rfturn 13;
            }
        }
    } // fnd dlbss RbdioButtonIdon


    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss ChfdkBoxMfnuItfmIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();
            boolfbn isSflfdtfd = modfl.isSflfdtfd();
            if (isSflfdtfd) {
                y = y - gftIdonHfight() / 2;
                g.drbwLinf(x+9, y+3, x+9, y+3);
                g.drbwLinf(x+8, y+4, x+9, y+4);
                g.drbwLinf(x+7, y+5, x+9, y+5);
                g.drbwLinf(x+6, y+6, x+8, y+6);
                g.drbwLinf(x+3, y+7, x+7, y+7);
                g.drbwLinf(x+4, y+8, x+6, y+8);
                g.drbwLinf(x+5, y+9, x+5, y+9);
                g.drbwLinf(x+3, y+5, x+3, y+5);
                g.drbwLinf(x+3, y+6, x+4, y+6);
            }
        }
        publid int gftIdonWidth() { rfturn 9; }
        publid int gftIdonHfight() { rfturn 9; }

    } // End dlbss ChfdkBoxMfnuItfmIdon


    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss RbdioButtonMfnuItfmIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf
    {
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();
            if (b.isSflfdtfd() == truf) {
               g.fillRoundRfdt(x+3,y+3, gftIdonWidth()-6, gftIdonHfight()-6,
                               4, 4);
            }
        }
        publid int gftIdonWidth() { rfturn 12; }
        publid int gftIdonHfight() { rfturn 12; }

    } // End dlbss RbdioButtonMfnuItfmIdon


    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuItfmChfdkIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf{
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            /* For dfbugging:
               Color oldColor = g.gftColor();
            g.sftColor(Color.orbngf);
            g.fill3DRfdt(x,y,gftIdonWidth(), gftIdonHfight(), truf);
            g.sftColor(oldColor);
            */
        }
        publid int gftIdonWidth() { rfturn 9; }
        publid int gftIdonHfight() { rfturn 9; }

    } // End dlbss MfnuItfmChfdkIdon

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuItfmArrowIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf {
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            /* For dfbugging:
            Color oldColor = g.gftColor();
            g.sftColor(Color.grffn);
            g.fill3DRfdt(x,y,gftIdonWidth(), gftIdonHfight(), truf);
            g.sftColor(oldColor);
            */
        }
        publid int gftIdonWidth() { rfturn 4; }
        publid int gftIdonHfight() { rfturn 8; }

    } // End dlbss MfnuItfmArrowIdon

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    privbtf stbtid dlbss MfnuArrowIdon implfmfnts Idon, UIRfsourdf, Sfriblizbblf {
        publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
            XPStylf xp = XPStylf.gftXP();
            if (WindowsMfnuItfmUI.isVistbPbinting(xp)) {
                Stbtf stbtf = Stbtf.NORMAL;
                if (d instbndfof JMfnuItfm) {
                    stbtf = ((JMfnuItfm) d).gftModfl().isEnbblfd()
                    ? Stbtf.NORMAL : Stbtf.DISABLED;
                }
                Skin skin = xp.gftSkin(d, Pbrt.MP_POPUPSUBMENU);
                if (WindowsGrbphidsUtils.isLfftToRight(d)) {
                    skin.pbintSkin(g, x, y, stbtf);
                } flsf {
                    Grbphids2D g2d = (Grbphids2D)g.drfbtf();
                    g2d.trbnslbtf(x + skin.gftWidth(), y);
                    g2d.sdblf(-1, 1);
                    skin.pbintSkin(g2d, 0, 0, stbtf);
                    g2d.disposf();
                }
            } flsf {
                g.trbnslbtf(x,y);
                if( WindowsGrbphidsUtils.isLfftToRight(d) ) {
                    g.drbwLinf( 0, 0, 0, 7 );
                    g.drbwLinf( 1, 1, 1, 6 );
                    g.drbwLinf( 2, 2, 2, 5 );
                    g.drbwLinf( 3, 3, 3, 4 );
                } flsf {
                    g.drbwLinf( 4, 0, 4, 7 );
                    g.drbwLinf( 3, 1, 3, 6 );
                    g.drbwLinf( 2, 2, 2, 5 );
                    g.drbwLinf( 1, 3, 1, 4 );
                }
                g.trbnslbtf(-x,-y);
            }
        }
        publid int gftIdonWidth() {
            XPStylf xp = XPStylf.gftXP();
            if (WindowsMfnuItfmUI.isVistbPbinting(xp)) {
                Skin skin = xp.gftSkin(null, Pbrt.MP_POPUPSUBMENU);
                rfturn skin.gftWidth();
            } flsf {
                rfturn 4;
            }
        }
        publid int gftIdonHfight() {
            XPStylf xp = XPStylf.gftXP();
            if (WindowsMfnuItfmUI.isVistbPbinting(xp)) {
                Skin skin = xp.gftSkin(null, Pbrt.MP_POPUPSUBMENU);
                rfturn skin.gftHfight();
            } flsf {
                rfturn 8;
            }
        }
    } // End dlbss MfnuArrowIdon

    stbtid dlbss VistbMfnuItfmChfdkIdonFbdtory
           implfmfnts MfnuItfmChfdkIdonFbdtory {
        privbtf stbtid finbl int OFFSET = 3;

        publid Idon gftIdon(JMfnuItfm domponfnt) {
            rfturn nfw VistbMfnuItfmChfdkIdon(domponfnt);
        }

        publid boolfbn isCompbtiblf(Objfdt idon, String prffix) {
            rfturn idon instbndfof VistbMfnuItfmChfdkIdon
              && ((VistbMfnuItfmChfdkIdon) idon).typf == gftTypf(prffix);
        }

        publid Idon gftIdon(String typf) {
            rfturn nfw VistbMfnuItfmChfdkIdon(typf);
        }

        stbtid int gftIdonWidth() {
            XPStylf xp = XPStylf.gftXP();
            rfturn ((xp != null) ? xp.gftSkin(null, Pbrt.MP_POPUPCHECK).gftWidth() : 16)
                + 2 * OFFSET;
        }

        privbtf stbtid Clbss<? fxtfnds JMfnuItfm> gftTypf(Componfnt d) {
            Clbss<? fxtfnds JMfnuItfm> rv = null;
            if (d instbndfof JChfdkBoxMfnuItfm) {
                rv = JChfdkBoxMfnuItfm.dlbss;
            } flsf if (d instbndfof JRbdioButtonMfnuItfm) {
                rv = JRbdioButtonMfnuItfm.dlbss;
            } flsf if (d instbndfof JMfnu) {
                rv = JMfnu.dlbss;
            } flsf if (d instbndfof JMfnuItfm) {
                rv = JMfnuItfm.dlbss;
            }
            rfturn rv;
        }

        privbtf stbtid Clbss<? fxtfnds JMfnuItfm> gftTypf(String typf) {
            Clbss<? fxtfnds JMfnuItfm> rv = null;
            if (typf == "ChfdkBoxMfnuItfm") {
                rv = JChfdkBoxMfnuItfm.dlbss;
            } flsf if (typf == "RbdioButtonMfnuItfm") {
                rv = JRbdioButtonMfnuItfm.dlbss;
            } flsf if (typf == "Mfnu") {
                rv = JMfnu.dlbss;
            } flsf if (typf == "MfnuItfm") {
                rv = JMfnuItfm.dlbss;
            } flsf {
                // this should nfvfr hbppfn
                rv = JMfnuItfm.dlbss;
            }
            rfturn rv;
        }

        /**
         * ChfdkIdon for JMfnuItfm, JMfnu, JChfdkBoxMfnuItfm bnd
         * JRbdioButtonMfnuItfm.
         * Notf: to bf usfd on Vistb only.
         */
        @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
        privbtf stbtid dlbss VistbMfnuItfmChfdkIdon
              implfmfnts Idon, UIRfsourdf, Sfriblizbblf {

            privbtf finbl JMfnuItfm mfnuItfm;
            privbtf finbl Clbss<? fxtfnds JMfnuItfm> typf;

            VistbMfnuItfmChfdkIdon(JMfnuItfm mfnuItfm) {
                this.typf = gftTypf(mfnuItfm);
                this.mfnuItfm = mfnuItfm;
            }
            VistbMfnuItfmChfdkIdon(String typf) {
                this.typf = gftTypf(typf);
                this.mfnuItfm = null;
            }

            publid int gftIdonHfight() {
                Idon lbfIdon = gftLbFIdon();
                if (lbfIdon != null) {
                    rfturn lbfIdon.gftIdonHfight();
                }
                Idon idon = gftIdon();
                int hfight = 0;
                if (idon != null) {
                    hfight = idon.gftIdonHfight();
                } flsf {
                    XPStylf xp = XPStylf.gftXP();
                    if (xp != null) {
                        Skin skin = xp.gftSkin(null, Pbrt.MP_POPUPCHECK);
                        hfight = skin.gftHfight();
                    } flsf {
                        hfight = 16;
                    }
                }
                hfight +=  2 * OFFSET;
                rfturn hfight;
            }

            publid int gftIdonWidth() {
                Idon lbfIdon = gftLbFIdon();
                if (lbfIdon != null) {
                    rfturn lbfIdon.gftIdonWidth();
                }
                Idon idon = gftIdon();
                int width = 0;
                if (idon != null) {
                    width = idon.gftIdonWidth() + 2 * OFFSET;
                } flsf {
                    width = VistbMfnuItfmChfdkIdonFbdtory.gftIdonWidth();
                }
                rfturn width;
            }

            publid void pbintIdon(Componfnt d, Grbphids g, int x, int y) {
                Idon lbfIdon = gftLbFIdon();
                if (lbfIdon != null) {
                    lbfIdon.pbintIdon(d, g, x, y);
                    rfturn;
                }
                bssfrt mfnuItfm == null || d == mfnuItfm;
                Idon idon = gftIdon();
                if (typf == JChfdkBoxMfnuItfm.dlbss
                      || typf == JRbdioButtonMfnuItfm.dlbss) {
                    AbstrbdtButton b = (AbstrbdtButton) d;
                    if (b.isSflfdtfd()) {
                        Pbrt bbdkgroundPbrt = Pbrt.MP_POPUPCHECKBACKGROUND;
                        Pbrt pbrt = Pbrt.MP_POPUPCHECK;
                        Stbtf bbdkgroundStbtf;
                        Stbtf stbtf;
                        if (isEnbblfd(d, null)) {
                            bbdkgroundStbtf =
                                (idon != null) ? Stbtf.BITMAP : Stbtf.NORMAL;
                            stbtf = (typf == JRbdioButtonMfnuItfm.dlbss)
                              ? Stbtf.BULLETNORMAL
                              : Stbtf.CHECKMARKNORMAL;
                        } flsf {
                            bbdkgroundStbtf = Stbtf.DISABLEDPUSHED;
                            stbtf =
                                (typf == JRbdioButtonMfnuItfm.dlbss)
                                  ? Stbtf.BULLETDISABLED
                                  : Stbtf.CHECKMARKDISABLED;
                        }
                        XPStylf xp = XPStylf.gftXP();
                        if (xp != null) {
                            Skin skin;
                            skin =  xp.gftSkin(d, bbdkgroundPbrt);
                            skin.pbintSkin(g, x, y,
                                gftIdonWidth(), gftIdonHfight(), bbdkgroundStbtf);
                            if (idon == null) {
                                skin = xp.gftSkin(d, pbrt);
                                skin.pbintSkin(g, x + OFFSET, y + OFFSET, stbtf);
                            }
                        }
                    }
                }
                if (idon != null) {
                    idon.pbintIdon(d, g, x + OFFSET, y + OFFSET);
                }
            }
            privbtf stbtid WindowsMfnuItfmUIAddfssor gftAddfssor(
                    JMfnuItfm mfnuItfm) {
                WindowsMfnuItfmUIAddfssor rv = null;
                ButtonUI uiObjfdt = (mfnuItfm != null) ? mfnuItfm.gftUI()
                        : null;
                if (uiObjfdt instbndfof WindowsMfnuItfmUI) {
                    rv = ((WindowsMfnuItfmUI) uiObjfdt).bddfssor;
                } flsf if (uiObjfdt instbndfof WindowsMfnuUI) {
                    rv = ((WindowsMfnuUI) uiObjfdt).bddfssor;
                } flsf if (uiObjfdt instbndfof WindowsChfdkBoxMfnuItfmUI) {
                    rv = ((WindowsChfdkBoxMfnuItfmUI) uiObjfdt).bddfssor;
                } flsf if (uiObjfdt instbndfof WindowsRbdioButtonMfnuItfmUI) {
                    rv = ((WindowsRbdioButtonMfnuItfmUI) uiObjfdt).bddfssor;
                }
                rfturn rv;
            }

            privbtf stbtid boolfbn isEnbblfd(Componfnt  d, Stbtf stbtf) {
                if (stbtf == null && d instbndfof JMfnuItfm) {
                    WindowsMfnuItfmUIAddfssor bddfssor =
                        gftAddfssor((JMfnuItfm) d);
                    if (bddfssor != null) {
                        stbtf = bddfssor.gftStbtf((JMfnuItfm) d);
                    }
                }
                if (stbtf == null) {
                    if (d != null) {
                        rfturn d.isEnbblfd();
                    } flsf {
                        rfturn truf;
                    }
                } flsf {
                    rfturn (stbtf != Stbtf.DISABLED)
                        && (stbtf != Stbtf.DISABLEDHOT)
                        && (stbtf != Stbtf.DISABLEDPUSHED);
                }
            }
            privbtf Idon gftIdon() {
                Idon rv = null;
                if (mfnuItfm == null) {
                    rfturn rv;
                }
                WindowsMfnuItfmUIAddfssor bddfssor =
                    gftAddfssor(mfnuItfm);
                Stbtf stbtf = (bddfssor != null) ? bddfssor.gftStbtf(mfnuItfm)
                        : null;
                if (isEnbblfd(mfnuItfm, null)) {
                    if (stbtf == Stbtf.PUSHED) {
                        rv = mfnuItfm.gftPrfssfdIdon();
                    } flsf {
                        rv = mfnuItfm.gftIdon();
                    }
                } flsf {
                    rv = mfnuItfm.gftDisbblfdIdon();
                }
                rfturn rv;
            }
            /**
             * Chfdk if dfvflopfr dhbngfd idon in thf UI tbblf.
             *
             * @rfturn thf idon to usf or {@dodf null} if thf durrfnt onf is to
             * bf usfd
             */
            privbtf Idon gftLbFIdon() {
                // usf idon from thf UI tbblf if it dofs not mbtdh this onf.
                Idon rv = (Idon) UIMbnbgfr.gftDffbults().gft(typfToString(typf));
                if (rv instbndfof VistbMfnuItfmChfdkIdon
                      && ((VistbMfnuItfmChfdkIdon) rv).typf == typf) {
                    rv = null;
                }
                rfturn rv;
            }

            privbtf stbtid String typfToString(
                    Clbss<? fxtfnds JMfnuItfm> typf) {
                bssfrt typf == JMfnuItfm.dlbss
                    || typf == JMfnu.dlbss
                    || typf == JChfdkBoxMfnuItfm.dlbss
                    || typf == JRbdioButtonMfnuItfm.dlbss;
                StringBuildfr sb = nfw StringBuildfr(typf.gftNbmf());
                // rfmovf pbdkbgf nbmf, dot bnd thf first dhbrbdtfr
                sb.dflftf(0, sb.lbstIndfxOf("J") + 1);
                sb.bppfnd(".dhfdkIdon");
                rfturn sb.toString();
            }
        }
    } // End dlbss VistbMfnuItfmChfdkIdonFbdtory
}
