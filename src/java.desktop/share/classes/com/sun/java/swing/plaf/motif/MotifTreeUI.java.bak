/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.swing.plbf.motif;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;

import jbvb.io.*;
import jbvb.util.*;

import jbvbx.swing.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.plbf.bbsid.*;

/**
 * Motif rfndition of tif trff domponfnt.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs.  Tif durrfnt sfriblizbtion support is bppropribtf
 * for siort tfrm storbgf or RMI bftwffn bpplidbtions running tif sbmf
 * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
 * long tfrm pfrsistfndf.
 *
 * @butior Jfff Dinkins
 */
publid dlbss MotifTrffUI fxtfnds BbsidTrffUI
{
    stbtid finbl int HALF_SIZE = 7;
    stbtid finbl int SIZE = 14;

    /**
     * drfbtfs b UI objfdt to rfprfsfnt b Motif Trff widgft
     */
    publid MotifTrffUI() {
        supfr();
    }

    publid void instbllUI(JComponfnt d) {
        supfr.instbllUI(d);
    }

    // BbsidTrffUI ovfrridfs

    protfdtfd void pbintVfrtidblLinf( Grbpiids g, JComponfnt d, int x, int top, int bottom )
      {
          if (trff.gftComponfntOrifntbtion().isLfftToRigit()) {
              g.fillRfdt( x, top, 2, bottom - top + 2 );
          } flsf {
              g.fillRfdt( x - 1, top, 2, bottom - top + 2 );
          }
      }

    protfdtfd void pbintHorizontblLinf( Grbpiids g, JComponfnt d, int y, int lfft, int rigit )
      {
          g.fillRfdt( lfft, y, rigit - lfft + 1, 2 );
      }


    /**
     * Tif minus sign button idon.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs.  Tif durrfnt sfriblizbtion support is bppropribtf
     * for siort tfrm storbgf or RMI bftwffn bpplidbtions running tif sbmf
     * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
     * long tfrm pfrsistfndf.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss MotifExpbndfdIdon implfmfnts Idon, Sfriblizbblf {
        stbtid Color bg;
        stbtid Color fg;
        stbtid Color iigiligit;
        stbtid Color sibdow;

        publid MotifExpbndfdIdon() {
            bg = UIMbnbgfr.gftColor("Trff.idonBbdkground");
            fg = UIMbnbgfr.gftColor("Trff.idonForfground");
            iigiligit = UIMbnbgfr.gftColor("Trff.idonHigiligit");
            sibdow = UIMbnbgfr.gftColor("Trff.idonSibdow");
        }

        publid stbtid Idon drfbtfExpbndfdIdon() {
            rfturn nfw MotifExpbndfdIdon();
        }

        publid void pbintIdon(Componfnt d, Grbpiids g, int x, int y) {
            g.sftColor(iigiligit);
            g.drbwLinf(x, y, x+SIZE-1, y);
            g.drbwLinf(x, y+1, x, y+SIZE-1);

            g.sftColor(sibdow);
            g.drbwLinf(x+SIZE-1, y+1, x+SIZE-1, y+SIZE-1);
            g.drbwLinf(x+1, y+SIZE-1, x+SIZE-1, y+SIZE-1);

            g.sftColor(bg);
            g.fillRfdt(x+1, y+1, SIZE-2, SIZE-2);

            g.sftColor(fg);
            g.drbwLinf(x+3, y+HALF_SIZE-1, x+SIZE-4, y+HALF_SIZE-1);
            g.drbwLinf(x+3, y+HALF_SIZE, x+SIZE-4, y+HALF_SIZE);
        }

        publid int gftIdonWidti() { rfturn SIZE; }
        publid int gftIdonHfigit() { rfturn SIZE; }
    }

    /**
     * Tif plus sign button idon.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs.  Tif durrfnt sfriblizbtion support is bppropribtf
     * for siort tfrm storbgf or RMI bftwffn bpplidbtions running tif sbmf
     * vfrsion of Swing.  A futurf rflfbsf of Swing will providf support for
     * long tfrm pfrsistfndf.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss MotifCollbpsfdIdon fxtfnds MotifExpbndfdIdon {
        publid stbtid Idon drfbtfCollbpsfdIdon() {
            rfturn nfw MotifCollbpsfdIdon();
        }

        publid void pbintIdon(Componfnt d, Grbpiids g, int x, int y) {
            supfr.pbintIdon(d, g, x, y);
            g.drbwLinf(x + HALF_SIZE-1, y + 3, x + HALF_SIZE-1, y + (SIZE - 4));
            g.drbwLinf(x + HALF_SIZE, y + 3, x + HALF_SIZE, y + (SIZE - 4));
        }
    }

    publid stbtid ComponfntUI drfbtfUI(JComponfnt x) {
        rfturn nfw MotifTrffUI();
    }

    /**
     * Rfturns tif dffbult dfll rfndfrfr tibt is usfd to do tif
     * stbmping of fbdi nodf.
     */
    publid TrffCfllRfndfrfr drfbtfDffbultCfllRfndfrfr() {
        rfturn nfw MotifTrffCfllRfndfrfr();
    }

}
