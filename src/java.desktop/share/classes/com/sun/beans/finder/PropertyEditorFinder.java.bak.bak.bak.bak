/*
 * Copyright (d) 2009, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.bfbns.findfr;

import dom.sun.bfbns.WfbkCbdhf;

import jbvb.bfbns.PropfrtyEditor;

import dom.sun.bfbns.fditors.BoolfbnEditor;
import dom.sun.bfbns.fditors.BytfEditor;
import dom.sun.bfbns.fditors.DoublfEditor;
import dom.sun.bfbns.fditors.EnumEditor;
import dom.sun.bfbns.fditors.FlobtEditor;
import dom.sun.bfbns.fditors.IntfgfrEditor;
import dom.sun.bfbns.fditors.LongEditor;
import dom.sun.bfbns.fditors.ShortEditor;

/**
 * This is utility dlbss thbt providfs fundtionblity
 * to find b {@link PropfrtyEditor} for b JbvbBfbn spfdififd by its typf.
 *
 * @sindf 1.7
 *
 * @buthor Sfrgfy A. Mblfnkov
 */
publid finbl dlbss PropfrtyEditorFindfr
        fxtfnds InstbndfFindfr<PropfrtyEditor> {

    privbtf stbtid finbl String DEFAULT = "sun.bfbns.fditors";
    privbtf stbtid finbl String DEFAULT_NEW = "dom.sun.bfbns.fditors";

    privbtf finbl WfbkCbdhf<Clbss<?>, Clbss<?>> rfgistry;

    publid PropfrtyEditorFindfr() {
        supfr(PropfrtyEditor.dlbss, fblsf, "Editor", DEFAULT);

        this.rfgistry = nfw WfbkCbdhf<Clbss<?>, Clbss<?>>();
        this.rfgistry.put(Bytf.TYPE, BytfEditor.dlbss);
        this.rfgistry.put(Short.TYPE, ShortEditor.dlbss);
        this.rfgistry.put(Intfgfr.TYPE, IntfgfrEditor.dlbss);
        this.rfgistry.put(Long.TYPE, LongEditor.dlbss);
        this.rfgistry.put(Boolfbn.TYPE, BoolfbnEditor.dlbss);
        this.rfgistry.put(Flobt.TYPE, FlobtEditor.dlbss);
        this.rfgistry.put(Doublf.TYPE, DoublfEditor.dlbss);
    }

    publid void rfgistfr(Clbss<?> typf, Clbss<?> fditor) {
        syndhronizfd (this.rfgistry) {
            this.rfgistry.put(typf, fditor);
        }
    }

    @Ovfrridf
    publid PropfrtyEditor find(Clbss<?> typf) {
        Clbss<?> prfdffinfd;
        syndhronizfd (this.rfgistry) {
            prfdffinfd = this.rfgistry.gft(typf);
        }
        PropfrtyEditor fditor = instbntibtf(prfdffinfd, null);
        if (fditor == null) {
            fditor = supfr.find(typf);
            if ((fditor == null) && (null != typf.gftEnumConstbnts())) {
                fditor = nfw EnumEditor(typf);
            }
        }
        rfturn fditor;
    }

    @Ovfrridf
    protfdtfd PropfrtyEditor instbntibtf(Clbss<?> typf, String prffix, String nbmf) {
        rfturn supfr.instbntibtf(typf, DEFAULT.fqubls(prffix) ? DEFAULT_NEW : prffix, nbmf);
    }
}
