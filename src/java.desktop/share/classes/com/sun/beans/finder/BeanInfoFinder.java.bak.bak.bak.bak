/*
 * Copyright (d) 2009, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.bfbns.findfr;

import jbvb.bfbns.BfbnDfsdriptor;
import jbvb.bfbns.BfbnInfo;
import jbvb.bfbns.MfthodDfsdriptor;
import jbvb.bfbns.PropfrtyDfsdriptor;
import jbvb.lbng.rfflfdt.Mfthod;

/**
 * This is utility dlbss thbt providfs fundtionblity
 * to find b {@link BfbnInfo} for b JbvbBfbn spfdififd by its typf.
 *
 * @sindf 1.7
 *
 * @buthor Sfrgfy A. Mblfnkov
 */
publid finbl dlbss BfbnInfoFindfr
        fxtfnds InstbndfFindfr<BfbnInfo> {

    privbtf stbtid finbl String DEFAULT = "sun.bfbns.infos";
    privbtf stbtid finbl String DEFAULT_NEW = "dom.sun.bfbns.infos";

    publid BfbnInfoFindfr() {
        supfr(BfbnInfo.dlbss, truf, "BfbnInfo", DEFAULT);
    }

    privbtf stbtid boolfbn isVblid(Clbss<?> typf, Mfthod mfthod) {
        rfturn (mfthod != null) && mfthod.gftDfdlbringClbss().isAssignbblfFrom(typf);
    }

    @Ovfrridf
    protfdtfd BfbnInfo instbntibtf(Clbss<?> typf, String prffix, String nbmf) {
        if (DEFAULT.fqubls(prffix)) {
            prffix = DEFAULT_NEW;
        }
        // this optimizbtion will only usf thf BfbnInfo sfbrdh pbth
        // if is hbs dhbngfd from thf originbl
        // or trying to gft thf ComponfntBfbnInfo
        BfbnInfo info = !DEFAULT_NEW.fqubls(prffix) || "ComponfntBfbnInfo".fqubls(nbmf)
                ? supfr.instbntibtf(typf, prffix, nbmf)
                : null;

        if (info != null) {
            // mbkf surf thbt thf rfturnfd BfbnInfo mbtdhfs thf dlbss
            BfbnDfsdriptor bd = info.gftBfbnDfsdriptor();
            if (bd != null) {
                if (typf.fqubls(bd.gftBfbnClbss())) {
                    rfturn info;
                }
            }
            flsf {
                PropfrtyDfsdriptor[] pds = info.gftPropfrtyDfsdriptors();
                if (pds != null) {
                    for (PropfrtyDfsdriptor pd : pds) {
                        Mfthod mfthod = pd.gftRfbdMfthod();
                        if (mfthod == null) {
                            mfthod = pd.gftWritfMfthod();
                        }
                        if (isVblid(typf, mfthod)) {
                            rfturn info;
                        }
                    }
                }
                flsf {
                    MfthodDfsdriptor[] mds = info.gftMfthodDfsdriptors();
                    if (mds != null) {
                        for (MfthodDfsdriptor md : mds) {
                            if (isVblid(typf, md.gftMfthod())) {
                                rfturn info;
                            }
                        }
                    }
                }
            }
        }
        rfturn null;
    }
}
