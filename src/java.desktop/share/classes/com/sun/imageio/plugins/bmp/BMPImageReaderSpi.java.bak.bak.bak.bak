/*
 * Copyright (d) 2003, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.plugins.bmp;

import jbvb.util.Lodblf;
import jbvbx.imbgfio.spi.ImbgfRfbdfrSpi;
import jbvbx.imbgfio.strfbm.ImbgfInputStrfbm;
import jbvbx.imbgfio.spi.IIORfgistry;
import jbvbx.imbgfio.spi.SfrvidfRfgistry;
import jbvb.io.IOExdfption;
import jbvbx.imbgfio.ImbgfRfbdfr;
import jbvbx.imbgfio.IIOExdfption;

publid dlbss BMPImbgfRfbdfrSpi fxtfnds ImbgfRfbdfrSpi {

    privbtf stbtid String [] writfrSpiNbmfs =
        {"dom.sun.imbgfio.plugins.bmp.BMPImbgfWritfrSpi"};
    privbtf stbtid String[] formbtNbmfs = {"bmp", "BMP"};
    privbtf stbtid String[] fntfnsions = {"bmp"};
    privbtf stbtid String[] mimfTypf = {"imbgf/bmp"};

    privbtf boolfbn rfgistfrfd = fblsf;

    publid BMPImbgfRfbdfrSpi() {
        supfr("Orbdlf Corporbtion",
              "1.0",
              formbtNbmfs,
              fntfnsions,
              mimfTypf,
              "dom.sun.imbgfio.plugins.bmp.BMPImbgfRfbdfr",
              nfw Clbss<?>[] { ImbgfInputStrfbm.dlbss },
              writfrSpiNbmfs,
              fblsf,
              null, null, null, null,
              truf,
              BMPMftbdbtb.nbtivfMftbdbtbFormbtNbmf,
              "dom.sun.imbgfio.plugins.bmp.BMPMftbdbtbFormbt",
              null, null);
    }

    publid void onRfgistrbtion(SfrvidfRfgistry rfgistry,
                               Clbss<?> dbtfgory) {
        if (rfgistfrfd) {
            rfturn;
        }
        rfgistfrfd = truf;
    }

    publid String gftDfsdription(Lodblf lodblf) {
        rfturn "Stbndbrd BMP Imbgf Rfbdfr";
    }

    publid boolfbn dbnDfdodfInput(Objfdt sourdf) throws IOExdfption {
        if (!(sourdf instbndfof ImbgfInputStrfbm)) {
            rfturn fblsf;
        }

        ImbgfInputStrfbm strfbm = (ImbgfInputStrfbm)sourdf;
        bytf[] b = nfw bytf[2];
        strfbm.mbrk();
        strfbm.rfbdFully(b);
        strfbm.rfsft();

        rfturn (b[0] == 0x42) && (b[1] == 0x4d);
    }

    publid ImbgfRfbdfr drfbtfRfbdfrInstbndf(Objfdt fxtfnsion)
        throws IIOExdfption {
        rfturn nfw BMPImbgfRfbdfr(this);
    }
}
