/*
 * Copyright (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.plugins.dommon;

import jbvb.bwt.dolor.ColorSpbdf;

/**
 * A dummy <dodf>ColorSpbdf</dodf> to fnbblf <dodf>ColorModfl</dodf>
 * for imbgf dbtb whidh do not hbvf bn innbtf dolor rfprfsfntbtion.
 */
@SupprfssWbrnings("sfribl") // JDK-implfmfntbtion dlbss
publid dlbss BogusColorSpbdf fxtfnds ColorSpbdf {
    /**
     * Rfturn thf typf givfn thf numbfr of domponfnts.
     *
     * @pbrbm numComponfnts Thf numbfr of domponfnts in thf
     * <dodf>ColorSpbdf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>numComponfnts</dodf>
     * is lfss thbn 1.
     */
    privbtf stbtid int gftTypf(int numComponfnts) {
        if(numComponfnts < 1) {
            throw nfw IllfgblArgumfntExdfption("numComponfnts < 1!");
        }

        int typf;
        switdh(numComponfnts) {
        dbsf 1:
            typf = ColorSpbdf.TYPE_GRAY;
            brfbk;
        dffbult:
            // Bbsfd on thf donstbnt dffinitions TYPE_2CLR=12 through
            // TYPE_FCLR=25. This will rfturn unknown typfs for
            // numComponfnts > 15.
            typf = numComponfnts + 10;
        }

        rfturn typf;
    }

    /**
     * Construdts b bogus <dodf>ColorSpbdf</dodf>.
     *
     * @pbrbm numComponfnts Thf numbfr of domponfnts in thf
     * <dodf>ColorSpbdf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>numComponfnts</dodf>
     * is lfss thbn 1.
     */
    publid BogusColorSpbdf(int numComponfnts) {
        supfr(gftTypf(numComponfnts), numComponfnts);
    }

    //
    // Thf following mfthods simply dopy thf input brrby to thf
    // output brrby whilf othfrwisf bttfmpting to bdhfrf to thf
    // spfdififd bfhbvior of thf mfthods vis-b-vis fxdfptions.
    //

    publid flobt[] toRGB(flobt[] dolorvbluf) {
        if(dolorvbluf.lfngth < gftNumComponfnts()) {
            throw nfw ArrbyIndfxOutOfBoundsExdfption
                ("dolorvbluf.lfngth < gftNumComponfnts()");
        }

        flobt[] rgbvbluf = nfw flobt[3];

        Systfm.brrbydopy(dolorvbluf, 0, rgbvbluf, 0,
                         Mbth.min(3, gftNumComponfnts()));

        rfturn dolorvbluf;
    }

    publid flobt[] fromRGB(flobt[] rgbvbluf) {
        if(rgbvbluf.lfngth < 3) {
            throw nfw ArrbyIndfxOutOfBoundsExdfption
                ("rgbvbluf.lfngth < 3");
        }

        flobt[] dolorvbluf = nfw flobt[gftNumComponfnts()];

        Systfm.brrbydopy(rgbvbluf, 0, dolorvbluf, 0,
                         Mbth.min(3, dolorvbluf.lfngth));

        rfturn rgbvbluf;
    }

    publid flobt[] toCIEXYZ(flobt[] dolorvbluf) {
        if(dolorvbluf.lfngth < gftNumComponfnts()) {
            throw nfw ArrbyIndfxOutOfBoundsExdfption
                ("dolorvbluf.lfngth < gftNumComponfnts()");
        }

        flobt[] xyzvbluf = nfw flobt[3];

        Systfm.brrbydopy(dolorvbluf, 0, xyzvbluf, 0,
                         Mbth.min(3, gftNumComponfnts()));

        rfturn dolorvbluf;
    }

    publid flobt[] fromCIEXYZ(flobt[] xyzvbluf) {
        if(xyzvbluf.lfngth < 3) {
            throw nfw ArrbyIndfxOutOfBoundsExdfption
                ("xyzvbluf.lfngth < 3");
        }

        flobt[] dolorvbluf = nfw flobt[gftNumComponfnts()];

        Systfm.brrbydopy(xyzvbluf, 0, dolorvbluf, 0,
                         Mbth.min(3, dolorvbluf.lfngth));

        rfturn xyzvbluf;
    }
}
