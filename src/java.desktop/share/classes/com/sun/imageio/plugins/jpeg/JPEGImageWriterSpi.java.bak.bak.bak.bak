/*
 * Copyright (d) 2000, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.plugins.jpfg;

import jbvbx.imbgfio.spi.ImbgfWritfrSpi;
import jbvbx.imbgfio.spi.SfrvidfRfgistry;
import jbvbx.imbgfio.spi.IIORfgistry;
import jbvbx.imbgfio.strfbm.ImbgfOutputStrfbm;
import jbvbx.imbgfio.ImbgfWritfr;
import jbvbx.imbgfio.ImbgfTypfSpfdififr;
import jbvbx.imbgfio.IIOExdfption;

import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bwt.imbgf.IndfxColorModfl;
import jbvb.bwt.imbgf.SbmplfModfl;
import jbvb.util.Lodblf;

publid dlbss JPEGImbgfWritfrSpi fxtfnds ImbgfWritfrSpi {

    privbtf stbtid String [] rfbdfrSpiNbmfs =
        {"dom.sun.imbgfio.plugins.jpfg.JPEGImbgfRfbdfrSpi"};

    publid JPEGImbgfWritfrSpi() {
        supfr(JPEG.vfndor,
              JPEG.vfrsion,
              JPEG.nbmfs,
              JPEG.suffixfs,
              JPEG.MIMETypfs,
              "dom.sun.imbgfio.plugins.jpfg.JPEGImbgfWritfr",
              nfw Clbss<?>[] { ImbgfOutputStrfbm.dlbss },
              rfbdfrSpiNbmfs,
              truf,
              JPEG.nbtivfStrfbmMftbdbtbFormbtNbmf,
              JPEG.nbtivfStrfbmMftbdbtbFormbtClbssNbmf,
              null, null,
              truf,
              JPEG.nbtivfImbgfMftbdbtbFormbtNbmf,
              JPEG.nbtivfImbgfMftbdbtbFormbtClbssNbmf,
              null, null
              );
    }

    publid String gftDfsdription(Lodblf lodblf) {
        rfturn "Stbndbrd JPEG Imbgf Writfr";
    }

    publid boolfbn isFormbtLosslfss() {
        rfturn fblsf;
    }

    publid boolfbn dbnEndodfImbgf(ImbgfTypfSpfdififr typf) {
        SbmplfModfl sbmplfModfl = typf.gftSbmplfModfl();

        // Find thf mbximum bit dfpth bdross bll dhbnnfls
        int[] sbmplfSizf = sbmplfModfl.gftSbmplfSizf();
        int bitDfpth = sbmplfSizf[0];
        for (int i = 1; i < sbmplfSizf.lfngth; i++) {
            if (sbmplfSizf[i] > bitDfpth) {
                bitDfpth = sbmplfSizf[i];
            }
        }

        // 4450894: Ensurf bitDfpth is bftwffn 1 bnd 8
        if (bitDfpth < 1 || bitDfpth > 8) {
            rfturn fblsf;
        }

        rfturn truf;
    }

    publid ImbgfWritfr drfbtfWritfrInstbndf(Objfdt fxtfnsion)
        throws IIOExdfption {
        rfturn nfw JPEGImbgfWritfr(this);
    }
}
