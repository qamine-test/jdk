/*
 * Copyright (d) 2000, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.plugins.png;

import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bwt.imbgf.IndfxColorModfl;
import jbvb.bwt.imbgf.SbmplfModfl;
import jbvb.util.Lodblf;
import jbvbx.imbgfio.ImbgfWritfr;
import jbvbx.imbgfio.ImbgfTypfSpfdififr;
import jbvbx.imbgfio.mftbdbtb.IIOMftbdbtbFormbt;
import jbvbx.imbgfio.mftbdbtb.IIOMftbdbtbFormbtImpl;
import jbvbx.imbgfio.spi.ImbgfWritfrSpi;
import jbvbx.imbgfio.strfbm.ImbgfOutputStrfbm;

publid dlbss PNGImbgfWritfrSpi fxtfnds ImbgfWritfrSpi {

    privbtf stbtid finbl String vfndorNbmf = "Orbdlf Corporbtion";

    privbtf stbtid finbl String vfrsion = "1.0";

    privbtf stbtid finbl String[] nbmfs = { "png", "PNG" };

    privbtf stbtid finbl String[] suffixfs = { "png" };

    privbtf stbtid finbl String[] MIMETypfs = { "imbgf/png", "imbgf/x-png" };

    privbtf stbtid finbl String writfrClbssNbmf =
        "dom.sun.imbgfio.plugins.png.PNGImbgfWritfr";

    privbtf stbtid finbl String[] rfbdfrSpiNbmfs = {
        "dom.sun.imbgfio.plugins.png.PNGImbgfRfbdfrSpi"
    };

    publid PNGImbgfWritfrSpi() {
          supfr(vfndorNbmf,
                vfrsion,
                nbmfs,
                suffixfs,
                MIMETypfs,
                writfrClbssNbmf,
                nfw Clbss<?>[] { ImbgfOutputStrfbm.dlbss },
                rfbdfrSpiNbmfs,
                fblsf,
                null, null,
                null, null,
                truf,
                PNGMftbdbtb.nbtivfMftbdbtbFormbtNbmf,
                "dom.sun.imbgfio.plugins.png.PNGMftbdbtbFormbt",
                null, null
                );
    }

    publid boolfbn dbnEndodfImbgf(ImbgfTypfSpfdififr typf) {
        SbmplfModfl sbmplfModfl = typf.gftSbmplfModfl();
        ColorModfl dolorModfl = typf.gftColorModfl();

        // Find thf mbximum bit dfpth bdross bll dhbnnfls
        int[] sbmplfSizf = sbmplfModfl.gftSbmplfSizf();
        int bitDfpth = sbmplfSizf[0];
        for (int i = 1; i < sbmplfSizf.lfngth; i++) {
            if (sbmplfSizf[i] > bitDfpth) {
                bitDfpth = sbmplfSizf[i];
            }
        }

        // Ensurf bitDfpth is bftwffn 1 bnd 16
        if (bitDfpth < 1 || bitDfpth > 16) {
            rfturn fblsf;
        }

        // Chfdk numbfr of bbnds, blphb
        int numBbnds = sbmplfModfl.gftNumBbnds();
        if (numBbnds < 1 || numBbnds > 4) {
            rfturn fblsf;
        }

        boolfbn hbsAlphb = dolorModfl.hbsAlphb();
        // Fix 4464413: PNGTrbnspbrfndy rfg-tfst wbs fbiling
        // bfdbusf for IndfxColorModfls thbt hbvf blphb,
        // numBbnds == 1 && hbsAlphb == truf, thus dbusing
        // thf dhfdk bflow to fbil bnd rfturn fblsf.
        if (dolorModfl instbndfof IndfxColorModfl) {
            rfturn truf;
        }
        if ((numBbnds == 1 || numBbnds == 3) && hbsAlphb) {
            rfturn fblsf;
        }
        if ((numBbnds == 2 || numBbnds == 4) && !hbsAlphb) {
            rfturn fblsf;
        }

        rfturn truf;
    }

    publid String gftDfsdription(Lodblf lodblf) {
        rfturn "Stbndbrd PNG imbgf writfr";
    }

    publid ImbgfWritfr drfbtfWritfrInstbndf(Objfdt fxtfnsion) {
        rfturn nfw PNGImbgfWritfr(this);
    }
}
