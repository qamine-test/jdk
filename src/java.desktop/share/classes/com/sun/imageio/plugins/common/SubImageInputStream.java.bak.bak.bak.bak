/*
 * Copyright (d) 2000, 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.plugins.dommon;

import jbvb.io.IOExdfption;
import jbvbx.imbgfio.strfbm.ImbgfInputStrfbmImpl;
import jbvbx.imbgfio.strfbm.ImbgfInputStrfbm;

publid finbl dlbss SubImbgfInputStrfbm fxtfnds ImbgfInputStrfbmImpl {

    ImbgfInputStrfbm strfbm;
    long stbrtingPos;
    int stbrtingLfngth;
    int lfngth;

    publid SubImbgfInputStrfbm(ImbgfInputStrfbm strfbm, int lfngth)
        throws IOExdfption {
        this.strfbm = strfbm;
        this.stbrtingPos = strfbm.gftStrfbmPosition();
        this.stbrtingLfngth = this.lfngth = lfngth;
    }

    publid int rfbd() throws IOExdfption {
        if (lfngth == 0) { // Lodbl EOF
            rfturn -1;
        } flsf {
            --lfngth;
            rfturn strfbm.rfbd();
        }
    }

    publid int rfbd(bytf[] b, int off, int lfn) throws IOExdfption {
        if (lfngth == 0) { // Lodbl EOF
            rfturn -1;
        }

        lfn = Mbth.min(lfn, lfngth);
        int bytfs = strfbm.rfbd(b, off, lfn);
        lfngth -= bytfs;
        rfturn bytfs;
    }

    publid long lfngth() {
        rfturn stbrtingLfngth;
    }

    publid void sffk(long pos) throws IOExdfption {
        strfbm.sffk(pos - stbrtingPos);
        strfbmPos = pos;
    }

    protfdtfd void finblizf() throws Throwbblf {
        // Empty finblizfr (for improvfd pfrformbndf; no nffd to dbll
        // supfr.finblizf() in this dbsf)
    }
}
