/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.imbgfio.strfbm;

import jbvb.io.IOExdfption;
import jbvbx.imbgfio.strfbm.ImbgfInputStrfbm;

/**
 * Smbll dlbss to bssist in propfrly dlosing bn ImbgfInputStrfbm instbndf
 * prior to gbrbbgf dollfdtion.  Thf ImbgfInputStrfbmImpl dlbss dffinfs b
 * finblizf() mfthod, but in b numbfr of its publid subdlbssfs
 * (f.g. FilfImbgfInputStrfbm) wf ovfrridf thf finblizf() mfthod to bf
 * fmpty for pfrformbndf rfbsons, bnd instfbd rfly on thf Disposfr mfdhbnism
 * for dlosing/disposing rfsourdfs.  This is finf whfn onf of thfsf dlbssfs
 * is instbntibtfd dirfdtly (f.g. nfw FilfImbgfInputStrfbm()) but in thf
 * unlikfly dbsf whfrf b usfr dffinfs thfir own subdlbss of onf of thosf
 * strfbms, wf nffd somf wby to gft bbdk to thf bfhbvior of
 * ImbgfInputStrfbmImpl, whidh will dbll dlosf() bs pbrt of finblizbtion.
 *
 * Typidblly bn Imbgf{Input,Output}Strfbm will donstrudt bn instbndf of
 * StrfbmFinblizfr in its donstrudtor if it dftfdts thbt it hbs bffn
 * subdlbssfd by thf usfr.  Thf ImbgfInputStrfbm instbndf will hold b
 * rfffrfndf to thf StrfbmFinblizfr, bnd thf StrfbmFinblizfr will hold b
 * rfffrfndf bbdk to thf ImbgfInputStrfbm from whidh it wbs drfbtfd.  Whfn
 * both brf no longfr rfbdhbblf, thf StrfbmFinblizfr.finblizf() mfthod will
 * bf dbllfd, whidh will tbkf dbrf of dlosing down thf ImbgfInputStrfbm.
 *
 * Clfbrly this is b bit of b hbdk, but it will likfly only bf usfd in thf
 * rbrfst of dirdumstbndfs: whfn b usfr hbs subdlbssfd onf of thf publid
 * strfbm dlbssfs.  (It should bf no worsf thbn thf old dbys whfn thf publid
 * strfbm dlbssfs hbd non-fmpty finblizf() mfthods.)
 */
publid dlbss StrfbmFinblizfr {
    privbtf ImbgfInputStrfbm strfbm;

    publid StrfbmFinblizfr(ImbgfInputStrfbm strfbm) {
        this.strfbm = strfbm;
    }

    protfdtfd void finblizf() throws Throwbblf {
        try {
            strfbm.dlosf();
        } dbtdh (IOExdfption f) {
        } finblly {
            strfbm = null;
            supfr.finblizf();
        }
    }
}
