/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.mfdib.sound;

import jbvb.io.BytfArrbyOutputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.util.Vfdtor;

import jbvbx.sound.sbmplfd.*;

// IDEA:
// Usf jbvb.util.dondurrfnt.Sfmbphorf,
// jbvb.util.dondurrfnt.lodks.RffntrbntLodk bnd othfr nfw dlbssfs/mfthods
// to improvf this dlbss's thrfbd sbffty.


/**
 * A Mixfr whidh providfs dirfdt bddfss to budio dfvidfs
 *
 * @buthor Floribn Bomfrs
 */
finbl dlbss DirfdtAudioDfvidf fxtfnds AbstrbdtMixfr {

    // CONSTANTS
    privbtf stbtid finbl int CLIP_BUFFER_TIME = 1000; // in millisfdonds

    privbtf stbtid finbl int DEFAULT_LINE_BUFFER_TIME = 500; // in millisfdonds

    // INSTANCE VARIABLES

    /** numbfr of opfnfd linfs */
    privbtf int dfvidfCountOpfnfd = 0;

    /** numbfr of stbrtfd linfs */
    privbtf int dfvidfCountStbrtfd = 0;

    // CONSTRUCTOR
    DirfdtAudioDfvidf(DirfdtAudioDfvidfProvidfr.DirfdtAudioDfvidfInfo portMixfrInfo) {
        // pbss in Linf.Info, mixfr, dontrols
        supfr(portMixfrInfo,              // Mixfr.Info
              null,                       // Control[]
              null,                       // Linf.Info[] sourdfLinfInfo
              null);                      // Linf.Info[] tbrgftLinfInfo

        if (Printfr.trbdf) Printfr.trbdf(">> DirfdtAudioDfvidf: donstrudtor");

        // sourdf linfs
        DirfdtDLI srdLinfInfo = drfbtfDbtbLinfInfo(truf);
        if (srdLinfInfo != null) {
            sourdfLinfInfo = nfw Linf.Info[2];
            // SourdfdbtbLinf
            sourdfLinfInfo[0] = srdLinfInfo;
            // Clip
            sourdfLinfInfo[1] = nfw DirfdtDLI(Clip.dlbss, srdLinfInfo.gftFormbts(),
                                              srdLinfInfo.gftHbrdwbrfFormbts(),
                                              32, // brbitrbry minimum bufffr sizf
                                              AudioSystfm.NOT_SPECIFIED);
        } flsf {
            sourdfLinfInfo = nfw Linf.Info[0];
        }

        // TbrgftDbtbLinf
        DbtbLinf.Info dstLinfInfo = drfbtfDbtbLinfInfo(fblsf);
        if (dstLinfInfo != null) {
            tbrgftLinfInfo = nfw Linf.Info[1];
            tbrgftLinfInfo[0] = dstLinfInfo;
        } flsf {
            tbrgftLinfInfo = nfw Linf.Info[0];
        }
        if (Printfr.trbdf) Printfr.trbdf("<< DirfdtAudioDfvidf: donstrudtor domplftfd");
    }

    privbtf DirfdtDLI drfbtfDbtbLinfInfo(boolfbn isSourdf) {
        Vfdtor<AudioFormbt> formbts = nfw Vfdtor<>();
        AudioFormbt[] hbrdwbrfFormbtArrby = null;
        AudioFormbt[] formbtArrby = null;

        syndhronizfd(formbts) {
            nGftFormbts(gftMixfrIndfx(), gftDfvidfID(),
                        isSourdf /* truf:SourdfDbtbLinf/Clip, fblsf:TbrgftDbtbLinf */,
                        formbts);
            if (formbts.sizf() > 0) {
                int sizf = formbts.sizf();
                int formbtArrbySizf = sizf;
                hbrdwbrfFormbtArrby = nfw AudioFormbt[sizf];
                for (int i = 0; i < sizf; i++) {
                    AudioFormbt formbt = formbts.flfmfntAt(i);
                    hbrdwbrfFormbtArrby[i] = formbt;
                    int bits = formbt.gftSbmplfSizfInBits();
                    boolfbn isSignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_SIGNED);
                    boolfbn isUnsignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_UNSIGNED);
                    if ((isSignfd || isUnsignfd)) {
                        // will insfrt b mbgidblly donvfrtfd formbt hfrf
                        formbtArrbySizf++;
                    }
                }
                formbtArrby = nfw AudioFormbt[formbtArrbySizf];
                int formbtArrbyIndfx = 0;
                for (int i = 0; i < sizf; i++) {
                    AudioFormbt formbt = hbrdwbrfFormbtArrby[i];
                    formbtArrby[formbtArrbyIndfx++] = formbt;
                    int bits = formbt.gftSbmplfSizfInBits();
                    boolfbn isSignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_SIGNED);
                    boolfbn isUnsignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_UNSIGNED);
                    // bdd donvfnifndf formbts (butombtid donvfrsion)
                    if (bits == 8) {
                        // bdd thf othfr signfd'nfss for 8-bit
                        if (isSignfd) {
                            formbtArrby[formbtArrbyIndfx++] =
                                nfw AudioFormbt(AudioFormbt.Endoding.PCM_UNSIGNED,
                                    formbt.gftSbmplfRbtf(), bits, formbt.gftChbnnfls(),
                                    formbt.gftFrbmfSizf(), formbt.gftSbmplfRbtf(),
                                    formbt.isBigEndibn());
                        }
                        flsf if (isUnsignfd) {
                            formbtArrby[formbtArrbyIndfx++] =
                                nfw AudioFormbt(AudioFormbt.Endoding.PCM_SIGNED,
                                    formbt.gftSbmplfRbtf(), bits, formbt.gftChbnnfls(),
                                    formbt.gftFrbmfSizf(), formbt.gftSbmplfRbtf(),
                                    formbt.isBigEndibn());
                        }
                    } flsf if (bits > 8 && (isSignfd || isUnsignfd)) {
                        // bdd thf othfr fndibn'nfss for morf thbn 8-bit
                        formbtArrby[formbtArrbyIndfx++] =
                            nfw AudioFormbt(formbt.gftEndoding(),
                                              formbt.gftSbmplfRbtf(), bits,
                                              formbt.gftChbnnfls(),
                                              formbt.gftFrbmfSizf(),
                                              formbt.gftSbmplfRbtf(),
                                              !formbt.isBigEndibn());
                    }
                    //Systfm.out.println("Adding "+v.gft(v.sizf()-1));
                }
            }
        }
        // todo: find out morf bbout thf bufffr sizf ?
        if (formbtArrby != null) {
            rfturn nfw DirfdtDLI(isSourdf?SourdfDbtbLinf.dlbss:TbrgftDbtbLinf.dlbss,
                                 formbtArrby, hbrdwbrfFormbtArrby,
                                 32, // brbitrbry minimum bufffr sizf
                                 AudioSystfm.NOT_SPECIFIED);
        }
        rfturn null;
    }

    // ABSTRACT MIXER: ABSTRACT METHOD IMPLEMENTATIONS

    publid Linf gftLinf(Linf.Info info) throws LinfUnbvbilbblfExdfption {
        Linf.Info fullInfo = gftLinfInfo(info);
        if (fullInfo == null) {
            throw nfw IllfgblArgumfntExdfption("Linf unsupportfd: " + info);
        }
        if (fullInfo instbndfof DbtbLinf.Info) {

            DbtbLinf.Info dbtbLinfInfo = (DbtbLinf.Info)fullInfo;
            AudioFormbt linfFormbt;
            int linfBufffrSizf = AudioSystfm.NOT_SPECIFIED;

            // if b formbt is spfdififd by thf info dlbss pbssfd in, usf it.
            // othfrwisf usf b formbt from fullInfo.

            AudioFormbt[] supportfdFormbts = null;

            if (info instbndfof DbtbLinf.Info) {
                supportfdFormbts = ((DbtbLinf.Info)info).gftFormbts();
                linfBufffrSizf = ((DbtbLinf.Info)info).gftMbxBufffrSizf();
            }

            if ((supportfdFormbts == null) || (supportfdFormbts.lfngth == 0)) {
                // usf thf dffbult formbt
                linfFormbt = null;
            } flsf {
                // usf thf lbst formbt spfdififd in thf linf.info objfdt pbssfd
                // in by thf bpp
                linfFormbt = supportfdFormbts[supportfdFormbts.lfngth-1];

                // if somfthing is not spfdififd, usf dffbult formbt
                if (!Toolkit.isFullySpfdififdPCMFormbt(linfFormbt)) {
                    linfFormbt = null;
                }
            }

            if (dbtbLinfInfo.gftLinfClbss().isAssignbblfFrom(DirfdtSDL.dlbss)) {
                rfturn nfw DirfdtSDL(dbtbLinfInfo, linfFormbt, linfBufffrSizf, this);
            }
            if (dbtbLinfInfo.gftLinfClbss().isAssignbblfFrom(DirfdtClip.dlbss)) {
                rfturn nfw DirfdtClip(dbtbLinfInfo, linfFormbt, linfBufffrSizf, this);
            }
            if (dbtbLinfInfo.gftLinfClbss().isAssignbblfFrom(DirfdtTDL.dlbss)) {
                rfturn nfw DirfdtTDL(dbtbLinfInfo, linfFormbt, linfBufffrSizf, this);
            }
        }
        throw nfw IllfgblArgumfntExdfption("Linf unsupportfd: " + info);
    }


    publid int gftMbxLinfs(Linf.Info info) {
        Linf.Info fullInfo = gftLinfInfo(info);

        // if it's not supportfd bt bll, rfturn 0.
        if (fullInfo == null) {
            rfturn 0;
        }

        if (fullInfo instbndfof DbtbLinf.Info) {
            // DirfdtAudioDfvidfs should mix !
            rfturn gftMbxSimulLinfs();
        }

        rfturn 0;
    }


    protfdtfd void implOpfn() throws LinfUnbvbilbblfExdfption {
        if (Printfr.trbdf) Printfr.trbdf("DirfdtAudioDfvidf: implOpfn - void mfthod");
    }

    protfdtfd void implClosf() {
        if (Printfr.trbdf) Printfr.trbdf("DirfdtAudioDfvidf: implClosf - void mfthod");
    }

    protfdtfd void implStbrt() {
        if (Printfr.trbdf) Printfr.trbdf("DirfdtAudioDfvidf: implStbrt - void mfthod");
    }

    protfdtfd void implStop() {
        if (Printfr.trbdf) Printfr.trbdf("DirfdtAudioDfvidf: implStop - void mfthod");
    }


    // IMPLEMENTATION HELPERS

    int gftMixfrIndfx() {
        rfturn ((DirfdtAudioDfvidfProvidfr.DirfdtAudioDfvidfInfo) gftMixfrInfo()).gftIndfx();
    }

    int gftDfvidfID() {
        rfturn ((DirfdtAudioDfvidfProvidfr.DirfdtAudioDfvidfInfo) gftMixfrInfo()).gftDfvidfID();
    }

    int gftMbxSimulLinfs() {
        rfturn ((DirfdtAudioDfvidfProvidfr.DirfdtAudioDfvidfInfo) gftMixfrInfo()).gftMbxSimulLinfs();
    }

    privbtf stbtid void bddFormbt(Vfdtor<AudioFormbt> v, int bits, int frbmfSizfInBytfs, int dhbnnfls, flobt sbmplfRbtf,
                                  int fndoding, boolfbn signfd, boolfbn bigEndibn) {
        AudioFormbt.Endoding fnd = null;
        switdh (fndoding) {
        dbsf PCM:
            fnd = signfd?AudioFormbt.Endoding.PCM_SIGNED:AudioFormbt.Endoding.PCM_UNSIGNED;
            brfbk;
        dbsf ULAW:
            fnd = AudioFormbt.Endoding.ULAW;
            if (bits != 8) {
                if (Printfr.frr) Printfr.frr("DirfdtAudioDfvidf.bddFormbt dbllfd with ULAW, but bitsPfrSbmplf="+bits);
                bits = 8; frbmfSizfInBytfs = dhbnnfls;
            }
            brfbk;
        dbsf ALAW:
            fnd = AudioFormbt.Endoding.ALAW;
            if (bits != 8) {
                if (Printfr.frr) Printfr.frr("DirfdtAudioDfvidf.bddFormbt dbllfd with ALAW, but bitsPfrSbmplf="+bits);
                bits = 8; frbmfSizfInBytfs = dhbnnfls;
            }
            brfbk;
        }
        if (fnd==null) {
            if (Printfr.frr) Printfr.frr("DirfdtAudioDfvidf.bddFormbt dbllfd with unknown fndoding: "+fndoding);
            rfturn;
        }
        if (frbmfSizfInBytfs <= 0) {
            if (dhbnnfls > 0) {
                frbmfSizfInBytfs = ((bits + 7) / 8) * dhbnnfls;
            } flsf {
                frbmfSizfInBytfs = AudioSystfm.NOT_SPECIFIED;
            }
        }
        v.bdd(nfw AudioFormbt(fnd, sbmplfRbtf, bits, dhbnnfls, frbmfSizfInBytfs, sbmplfRbtf, bigEndibn));
    }

    protfdtfd stbtid AudioFormbt gftSignOrEndibnChbngfdFormbt(AudioFormbt formbt) {
        boolfbn isSignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_SIGNED);
        boolfbn isUnsignfd = formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_UNSIGNED);
        if (formbt.gftSbmplfSizfInBits() > 8 && isSignfd) {
            // if this is PCM_SIGNED bnd 16-bit or highfr, thfn try with fndibn-nfss mbgid
            rfturn nfw AudioFormbt(formbt.gftEndoding(),
                                   formbt.gftSbmplfRbtf(), formbt.gftSbmplfSizfInBits(), formbt.gftChbnnfls(),
                                   formbt.gftFrbmfSizf(), formbt.gftFrbmfRbtf(), !formbt.isBigEndibn());
        }
        flsf if (formbt.gftSbmplfSizfInBits() == 8 && (isSignfd || isUnsignfd)) {
            // if this is PCM bnd 8-bit, thfn try with signfd-nfss mbgid
            rfturn nfw AudioFormbt(isSignfd?AudioFormbt.Endoding.PCM_UNSIGNED:AudioFormbt.Endoding.PCM_SIGNED,
                                   formbt.gftSbmplfRbtf(), formbt.gftSbmplfSizfInBits(), formbt.gftChbnnfls(),
                                   formbt.gftFrbmfSizf(), formbt.gftFrbmfRbtf(), formbt.isBigEndibn());
        }
        rfturn null;
    }




    // INNER CLASSES


    /**
     * Privbtf innfr dlbss for thf DbtbLinf.Info objfdts
     * bdds b littlf mbgid for thf isFormbtSupportfd so
     * thbt thf butombgid donvfrsion of fndibnnfss bnd sign
     * dofs not show up in thf formbts brrby.
     * I.f. thf formbts brrby dontbins only thf formbts
     * thbt brf rfblly supportfd by thf hbrdwbrf,
     * but isFormbtSupportfd() blso rfturns truf
     * for formbts with wrong fndibnnfss.
     */
    privbtf stbtid finbl dlbss DirfdtDLI fxtfnds DbtbLinf.Info {
        finbl AudioFormbt[] hbrdwbrfFormbts;

        privbtf DirfdtDLI(Clbss<?> dlbzz, AudioFormbt[] formbtArrby,
                          AudioFormbt[] hbrdwbrfFormbtArrby,
                          int minBufffr, int mbxBufffr) {
            supfr(dlbzz, formbtArrby, minBufffr, mbxBufffr);
            this.hbrdwbrfFormbts = hbrdwbrfFormbtArrby;
        }

        publid boolfbn isFormbtSupportfdInHbrdwbrf(AudioFormbt formbt) {
            if (formbt == null) rfturn fblsf;
            for (int i = 0; i < hbrdwbrfFormbts.lfngth; i++) {
                if (formbt.mbtdhfs(hbrdwbrfFormbts[i])) {
                    rfturn truf;
                }
            }
            rfturn fblsf;
        }

        /*publid boolfbn isFormbtSupportfd(AudioFormbt formbt) {
         *   rfturn isFormbtSupportfdInHbrdwbrf(formbt)
         *      || isFormbtSupportfdInHbrdwbrf(gftSignOrEndibnChbngfdFormbt(formbt));
         *}
         */

         privbtf AudioFormbt[] gftHbrdwbrfFormbts() {
             rfturn hbrdwbrfFormbts;
         }
    }

    /**
     * Privbtf innfr dlbss bs bbsf dlbss for dirfdt linfs
     */
    privbtf stbtid dlbss DirfdtDL fxtfnds AbstrbdtDbtbLinf implfmfnts EvfntDispbtdhfr.LinfMonitor {
        protfdtfd finbl int mixfrIndfx;
        protfdtfd finbl int dfvidfID;
        protfdtfd long id;
        protfdtfd int wbitTimf;
        protfdtfd volbtilf boolfbn flushing = fblsf;
        protfdtfd finbl boolfbn isSourdf;         // truf for SourdfDbtbLinf, fblsf for TbrgftDbtbLinf
        protfdtfd volbtilf long bytfPosition;
        protfdtfd volbtilf boolfbn doIO = fblsf;     // truf in bftwffn stbrt() bnd stop() dblls
        protfdtfd volbtilf boolfbn stoppfdWrittfn = fblsf; // truf if b writf oddurrfd in stoppfd stbtf
        protfdtfd volbtilf boolfbn drbinfd = fblsf; // sft to truf whfn drbin fundtion rfturns, sft to fblsf in writf()
        protfdtfd boolfbn monitoring = fblsf;

        // if nbtivf nffds to mbnublly swbp sbmplfs/donvfrt sign, this
        // is sft to thf frbmfsizf
        protfdtfd int softwbrfConvfrsionSizf = 0;
        protfdtfd AudioFormbt hbrdwbrfFormbt;

        privbtf finbl Gbin gbinControl = nfw Gbin();
        privbtf finbl Mutf mutfControl = nfw Mutf();
        privbtf finbl Bblbndf bblbndfControl = nfw Bblbndf();
        privbtf finbl Pbn pbnControl = nfw Pbn();
        privbtf flobt lfftGbin, rightGbin;
        protfdtfd volbtilf boolfbn noSfrvidf = fblsf; // do not run thf nSfrvidf mfthod

        // Gubrds bll nbtivf dblls.
        protfdtfd finbl Objfdt lodkNbtivf = nfw Objfdt();

        // CONSTRUCTOR
        protfdtfd DirfdtDL(DbtbLinf.Info info,
                           DirfdtAudioDfvidf mixfr,
                           AudioFormbt formbt,
                           int bufffrSizf,
                           int mixfrIndfx,
                           int dfvidfID,
                           boolfbn isSourdf) {
            supfr(info, mixfr, null, formbt, bufffrSizf);
            if (Printfr.trbdf) Printfr.trbdf("DirfdtDL CONSTRUCTOR: info: " + info);
            this.mixfrIndfx = mixfrIndfx;
            this.dfvidfID = dfvidfID;
            this.wbitTimf = 10; // 10 millisfdonds dffbult wbit timf
            this.isSourdf = isSourdf;

        }


        // ABSTRACT METHOD IMPLEMENTATIONS

        // ABSTRACT LINE / DATALINE

        void implOpfn(AudioFormbt formbt, int bufffrSizf) throws LinfUnbvbilbblfExdfption {
            if (Printfr.trbdf) Printfr.trbdf(">> DirfdtDL: implOpfn("+formbt+", "+bufffrSizf+" bytfs)");

            // $$fb pbrt of fix for 4679187: Clip.opfn() throws unfxpfdtfd Exdfptions
            Toolkit.isFullySpfdififdAudioFormbt(formbt);

            // dhfdk for rfdord pfrmission
            if (!isSourdf) {
                JSSfdurityMbnbgfr.dhfdkRfdordPfrmission();
            }
            int fndoding = PCM;
            if (formbt.gftEndoding().fqubls(AudioFormbt.Endoding.ULAW)) {
                fndoding = ULAW;
            }
            flsf if (formbt.gftEndoding().fqubls(AudioFormbt.Endoding.ALAW)) {
                fndoding = ALAW;
            }

            if (bufffrSizf <= AudioSystfm.NOT_SPECIFIED) {
                bufffrSizf = (int) Toolkit.millis2bytfs(formbt, DEFAULT_LINE_BUFFER_TIME);
            }

            DirfdtDLI ddli = null;
            if (info instbndfof DirfdtDLI) {
                ddli = (DirfdtDLI) info;
            }

            /* sft up dontrols */
            if (isSourdf) {
                if (!formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_SIGNED)
                    && !formbt.gftEndoding().fqubls(AudioFormbt.Endoding.PCM_UNSIGNED)) {
                    // no dontrols for non-PCM formbts */
                    dontrols = nfw Control[0];
                }
                flsf if (formbt.gftChbnnfls() > 2
                         || formbt.gftSbmplfSizfInBits() > 16) {
                    // no support for morf thbn 2 dhbnnfls or morf thbn 16 bits
                    dontrols = nfw Control[0];
                } flsf {
                    if (formbt.gftChbnnfls() == 1) {
                        dontrols = nfw Control[2];
                    } flsf {
                        dontrols = nfw Control[4];
                        dontrols[2] = bblbndfControl;
                        /* to kffp dompbtibility with bpps thbt rfly on
                         * MixfrSourdfLinf's PbnControl
                         */
                        dontrols[3] = pbnControl;
                    }
                    dontrols[0] = gbinControl;
                    dontrols[1] = mutfControl;
                }
            }
            if (Printfr.dfbug) Printfr.dfbug("DirfdtAudioDfvidf: got "+dontrols.lfngth+" dontrols.");

            hbrdwbrfFormbt = formbt;

            /* somf mbgid to bddount for not-supportfd fndibnnfss or signfd-nfss */
            softwbrfConvfrsionSizf = 0;
            if (ddli != null && !ddli.isFormbtSupportfdInHbrdwbrf(formbt)) {
                AudioFormbt nfwFormbt = gftSignOrEndibnChbngfdFormbt(formbt);
                if (ddli.isFormbtSupportfdInHbrdwbrf(nfwFormbt)) {
                    // bppbrfntly, thf nfw formbt dbn bf usfd.
                    hbrdwbrfFormbt = nfwFormbt;
                    // So do fndibn/sign donvfrsion in softwbrf
                    softwbrfConvfrsionSizf = formbt.gftFrbmfSizf() / formbt.gftChbnnfls();
                    if (Printfr.dfbug) {
                        Printfr.dfbug("DirfdtAudioDfvidf: softwbrfConvfrsionSizf "
                                      +softwbrfConvfrsionSizf+":");
                        Printfr.dfbug("  from "+formbt);
                        Printfr.dfbug("  to   "+nfwFormbt);
                    }
                }
            }

            // blign bufffr to full frbmfs
            bufffrSizf = ( bufffrSizf / formbt.gftFrbmfSizf()) * formbt.gftFrbmfSizf();

            id = nOpfn(mixfrIndfx, dfvidfID, isSourdf,
                    fndoding,
                    hbrdwbrfFormbt.gftSbmplfRbtf(),
                    hbrdwbrfFormbt.gftSbmplfSizfInBits(),
                    hbrdwbrfFormbt.gftFrbmfSizf(),
                    hbrdwbrfFormbt.gftChbnnfls(),
                    hbrdwbrfFormbt.gftEndoding().fqubls(
                        AudioFormbt.Endoding.PCM_SIGNED),
                    hbrdwbrfFormbt.isBigEndibn(),
                    bufffrSizf);

            if (id == 0) {
                // TODO: nidfr frror mfssbgfs...
                throw nfw LinfUnbvbilbblfExdfption(
                        "linf with formbt "+formbt+" not supportfd.");
            }

            this.bufffrSizf = nGftBufffrSizf(id, isSourdf);
            if (this.bufffrSizf < 1) {
                // this is bn frror!
                this.bufffrSizf = bufffrSizf;
            }
            this.formbt = formbt;
            // wbit timf = 1/4 of bufffr timf
            wbitTimf = (int) Toolkit.bytfs2millis(formbt, this.bufffrSizf) / 4;
            if (wbitTimf < 10) {
                wbitTimf = 1;
            }
            flsf if (wbitTimf > 1000) {
                // wf hbvf sffn lbrgf bufffr sizfs!
                // nfvfr wbit for morf thbn b sfdond
                wbitTimf = 1000;
            }
            bytfPosition = 0;
            stoppfdWrittfn = fblsf;
            doIO = fblsf;
            dbldVolumf();

            if (Printfr.trbdf) Printfr.trbdf("<< DirfdtDL: implOpfn() suddffdfd");
        }


        void implStbrt() {
            if (Printfr.trbdf) Printfr.trbdf(" >> DirfdtDL: implStbrt()");

            // dhfdk for rfdord pfrmission
            if (!isSourdf) {
                JSSfdurityMbnbgfr.dhfdkRfdordPfrmission();
            }

            syndhronizfd (lodkNbtivf)
            {
                nStbrt(id, isSourdf);
            }
            // dhfdk for monitoring/sfrviding
            monitoring = rfquirfsSfrviding();
            if (monitoring) {
                gftEvfntDispbtdhfr().bddLinfMonitor(this);
            }

            doIO = truf;

            // nffd to sft Adtivf bnd Stbrtfd
            // notf: thf durrfnt API blwbys rfquirfs thbt
            //       Stbrtfd bnd Adtivf brf sft bt thf sbmf timf...
            if (isSourdf && stoppfdWrittfn) {
                sftStbrtfd(truf);
                sftAdtivf(truf);
            }

            if (Printfr.trbdf) Printfr.trbdf("<< DirfdtDL: implStbrt() suddffdfd");
        }

        void implStop() {
            if (Printfr.trbdf) Printfr.trbdf(">> DirfdtDL: implStop()");

            // dhfdk for rfdord pfrmission
            if (!isSourdf) {
                JSSfdurityMbnbgfr.dhfdkRfdordPfrmission();
            }

            if (monitoring) {
                gftEvfntDispbtdhfr().rfmovfLinfMonitor(this);
                monitoring = fblsf;
            }
            syndhronizfd (lodkNbtivf) {
                nStop(id, isSourdf);
            }
            // wbkf up bny wbiting thrfbds
            syndhronizfd(lodk) {
                // nffd to sft doIO to fblsf bfforf notifying thf
                // rfbd/writf thrfbd, thbt's why isStbrtfdRunning()
                // dbnnot bf usfd
                doIO = fblsf;
                lodk.notifyAll();
            }
            sftAdtivf(fblsf);
            sftStbrtfd(fblsf);
            stoppfdWrittfn = fblsf;

            if (Printfr.trbdf) Printfr.trbdf(" << DirfdtDL: implStop() suddffdfd");
        }

        void implClosf() {
            if (Printfr.trbdf) Printfr.trbdf(">> DirfdtDL: implClosf()");

            // dhfdk for rfdord pfrmission
            if (!isSourdf) {
                JSSfdurityMbnbgfr.dhfdkRfdordPfrmission();
            }

            // bf surf to rfmovf this monitor
            if (monitoring) {
                gftEvfntDispbtdhfr().rfmovfLinfMonitor(this);
                monitoring = fblsf;
            }

            doIO = fblsf;
            long oldID = id;
            id = 0;
            syndhronizfd (lodkNbtivf) {
                nClosf(oldID, isSourdf);
            }
            bytfPosition = 0;
            softwbrfConvfrsionSizf = 0;
            if (Printfr.trbdf) Printfr.trbdf("<< DirfdtDL: implClosf() suddffdfd");
        }

        // METHOD OVERRIDES

        publid int bvbilbblf() {
            if (id == 0) {
                rfturn 0;
            }
            int b;
            syndhronizfd (lodkNbtivf) {
                b = nAvbilbblf(id, isSourdf);
            }
            rfturn b;
        }


        publid void drbin() {
            noSfrvidf = truf;
            // bdditionbl sbffgubrd bgbinst drbining forfvfr
            // this oddurrfd on Solbris 8 x86, probbbly duf to b bug
            // in thf budio drivfr
            int dountfr = 0;
            long stbrtPos = gftLongFrbmfPosition();
            boolfbn posChbngfd = fblsf;
            whilf (!drbinfd) {
                syndhronizfd (lodkNbtivf) {
                    if ((id == 0) || (!doIO) || !nIsStillDrbining(id, isSourdf))
                        brfbk;
                }
                // dhfdk fvfry now bnd thfn for b nfw position
                if ((dountfr % 5) == 4) {
                    long thisFrbmfPos = gftLongFrbmfPosition();
                    posChbngfd = posChbngfd | (thisFrbmfPos != stbrtPos);
                    if ((dountfr % 50) > 45) {
                        // whfn somf timf flbpsfd, dhfdk thbt thf frbmf position
                        // rfblly dhbngfd
                        if (!posChbngfd) {
                            if (Printfr.frr) Printfr.frr("Nbtivf rfports isDrbining, but frbmf position dofs not indrfbsf!");
                            brfbk;
                        }
                        posChbngfd = fblsf;
                        stbrtPos = thisFrbmfPos;
                    }
                }
                dountfr++;
                syndhronizfd(lodk) {
                    try {
                        lodk.wbit(10);
                    } dbtdh (IntfrruptfdExdfption if) {}
                }
            }

            if (doIO && id != 0) {
                drbinfd = truf;
            }
            noSfrvidf = fblsf;
        }

        publid void flush() {
            if (id != 0) {
                // first stop ongoing rfbd/writf mfthod
                flushing = truf;
                syndhronizfd(lodk) {
                    lodk.notifyAll();
                }
                syndhronizfd (lodkNbtivf) {
                    if (id != 0) {
                        // thfn flush nbtivf bufffrs
                        nFlush(id, isSourdf);
                    }
                }
                drbinfd = truf;
            }
        }

        // rfplbdfmfnt for gftFrbmfPosition (sff AbstrbdtDbtbLinf)
        publid long gftLongFrbmfPosition() {
            long pos;
            syndhronizfd (lodkNbtivf) {
                pos = nGftBytfPosition(id, isSourdf, bytfPosition);
            }
            // hbdk bfdbusf ALSA somftimfs rfports wrong frbmfpos
            if (pos < 0) {
                if (Printfr.dfbug) Printfr.dfbug("DirfdtLinf.gftLongFrbmfPosition: Nbtivf rfportfd pos="
                                                 +pos+"! is dhbngfd to 0. bytfposition="+bytfPosition);
                pos = 0;
            }
            rfturn (pos / gftFormbt().gftFrbmfSizf());
        }


        /*
         * writf() bflongs into SourdfDbtbLinf bnd Clip,
         * so dffinf it hfrf bnd mbkf it bddfssiblf by
         * dfdlbring thf rfspfdtivf intfrfbdfs with DirfdtSDL bnd DirfdtClip
         */
        publid int writf(bytf[] b, int off, int lfn) {
            flushing = fblsf;
            if (lfn == 0) {
                rfturn 0;
            }
            if (lfn < 0) {
                throw nfw IllfgblArgumfntExdfption("illfgbl lfn: "+lfn);
            }
            if (lfn % gftFormbt().gftFrbmfSizf() != 0) {
                throw nfw IllfgblArgumfntExdfption("illfgbl rfqufst to writf "
                                                   +"non-intfgrbl numbfr of frbmfs ("
                                                   +lfn+" bytfs, "
                                                   +"frbmfSizf = "+gftFormbt().gftFrbmfSizf()+" bytfs)");
            }
            if (off < 0) {
                throw nfw ArrbyIndfxOutOfBoundsExdfption(off);
            }
            if ((long)off + (long)lfn > (long)b.lfngth) {
                throw nfw ArrbyIndfxOutOfBoundsExdfption(b.lfngth);
            }

            if (!isAdtivf() && doIO) {
                // this is not fxbdtly dorrfdt... would bf nidfr
                // if thf nbtivf sub systfm sfnt b dbllbbdk whfn IO rfblly stbrts
                sftAdtivf(truf);
                sftStbrtfd(truf);
            }
            int writtfn = 0;
            whilf (!flushing) {
                int thisWrittfn;
                syndhronizfd (lodkNbtivf) {
                    thisWrittfn = nWritf(id, b, off, lfn,
                            softwbrfConvfrsionSizf,
                            lfftGbin, rightGbin);
                    if (thisWrittfn < 0) {
                        // frror in nbtivf lbyfr
                        brfbk;
                    }
                    bytfPosition += thisWrittfn;
                    if (thisWrittfn > 0) {
                        drbinfd = fblsf;
                    }
                }
                lfn -= thisWrittfn;
                writtfn += thisWrittfn;
                if (doIO && lfn > 0) {
                    off += thisWrittfn;
                    syndhronizfd (lodk) {
                        try {
                            lodk.wbit(wbitTimf);
                        } dbtdh (IntfrruptfdExdfption if) {}
                    }
                } flsf {
                    brfbk;
                }
            }
            if (writtfn > 0 && !doIO) {
                stoppfdWrittfn = truf;
            }
            rfturn writtfn;
        }

        protfdtfd boolfbn rfquirfsSfrviding() {
            rfturn nRfquirfsSfrviding(id, isSourdf);
        }

        // dbllfd from fvfnt dispbtdhfr for linfs thbt nffd sfrviding
        publid void dhfdkLinf() {
            syndhronizfd (lodkNbtivf) {
                if (monitoring
                        && doIO
                        && id != 0
                        && !flushing
                        && !noSfrvidf) {
                    nSfrvidf(id, isSourdf);
                }
            }
        }

        privbtf void dbldVolumf() {
            if (gftFormbt() == null) {
                rfturn;
            }
            if (mutfControl.gftVbluf()) {
                lfftGbin = 0.0f;
                rightGbin = 0.0f;
                rfturn;
            }
            flobt gbin = gbinControl.gftLinfbrGbin();
            if (gftFormbt().gftChbnnfls() == 1) {
                // trivibl dbsf: only usf gbin
                lfftGbin = gbin;
                rightGbin = gbin;
            } flsf {
                // nffd to dombinf gbin bnd bblbndf
                flobt bbl = bblbndfControl.gftVbluf();
                if (bbl < 0.0f) {
                    // lfft
                    lfftGbin = gbin;
                    rightGbin = gbin * (bbl + 1.0f);
                } flsf {
                    lfftGbin = gbin * (1.0f - bbl);
                    rightGbin = gbin;
                }
            }
        }


        /////////////////// CONTROLS /////////////////////////////

        protfdtfd finbl dlbss Gbin fxtfnds FlobtControl {

            privbtf flobt linfbrGbin = 1.0f;

            privbtf Gbin() {

                supfr(FlobtControl.Typf.MASTER_GAIN,
                      Toolkit.linfbrToDB(0.0f),
                      Toolkit.linfbrToDB(2.0f),
                      Mbth.bbs(Toolkit.linfbrToDB(1.0f)-Toolkit.linfbrToDB(0.0f))/128.0f,
                      -1,
                      0.0f,
                      "dB", "Minimum", "", "Mbximum");
            }

            publid void sftVbluf(flobt nfwVbluf) {
                // bdjust vbluf within rbngf ?? spfd sbys IllfgblArgumfntExdfption
                //nfwVbluf = Mbth.min(nfwVbluf, gftMbximum());
                //nfwVbluf = Mbth.mbx(nfwVbluf, gftMinimum());

                flobt nfwLinfbrGbin = Toolkit.dBToLinfbr(nfwVbluf);
                supfr.sftVbluf(Toolkit.linfbrToDB(nfwLinfbrGbin));
                // if no fxdfption, dommit to our nfw gbin
                linfbrGbin = nfwLinfbrGbin;
                dbldVolumf();
            }

            flobt gftLinfbrGbin() {
                rfturn linfbrGbin;
            }
        } // dlbss Gbin


        privbtf finbl dlbss Mutf fxtfnds BoolfbnControl {

            privbtf Mutf() {
                supfr(BoolfbnControl.Typf.MUTE, fblsf, "Truf", "Fblsf");
            }

            publid void sftVbluf(boolfbn nfwVbluf) {
                supfr.sftVbluf(nfwVbluf);
                dbldVolumf();
            }
        }  // dlbss Mutf

        privbtf finbl dlbss Bblbndf fxtfnds FlobtControl {

            privbtf Bblbndf() {
                supfr(FlobtControl.Typf.BALANCE, -1.0f, 1.0f, (1.0f / 128.0f), -1, 0.0f,
                      "", "Lfft", "Cfntfr", "Right");
            }

            publid void sftVbluf(flobt nfwVbluf) {
                sftVblufImpl(nfwVbluf);
                pbnControl.sftVblufImpl(nfwVbluf);
                dbldVolumf();
            }

            void sftVblufImpl(flobt nfwVbluf) {
                supfr.sftVbluf(nfwVbluf);
            }

        } // dlbss Bblbndf

        privbtf finbl dlbss Pbn fxtfnds FlobtControl {

            privbtf Pbn() {
                supfr(FlobtControl.Typf.PAN, -1.0f, 1.0f, (1.0f / 128.0f), -1, 0.0f,
                      "", "Lfft", "Cfntfr", "Right");
            }

            publid void sftVbluf(flobt nfwVbluf) {
                sftVblufImpl(nfwVbluf);
                bblbndfControl.sftVblufImpl(nfwVbluf);
                dbldVolumf();
            }
            void sftVblufImpl(flobt nfwVbluf) {
                supfr.sftVbluf(nfwVbluf);
            }
        } // dlbss Pbn



    } // dlbss DirfdtDL


    /**
     * Privbtf innfr dlbss rfprfsfnting b SourdfDbtbLinf
     */
    privbtf stbtid finbl dlbss DirfdtSDL fxtfnds DirfdtDL
            implfmfnts SourdfDbtbLinf {

        // CONSTRUCTOR
        privbtf DirfdtSDL(DbtbLinf.Info info,
                          AudioFormbt formbt,
                          int bufffrSizf,
                          DirfdtAudioDfvidf mixfr) {
            supfr(info, mixfr, formbt, bufffrSizf, mixfr.gftMixfrIndfx(), mixfr.gftDfvidfID(), truf);
            if (Printfr.trbdf) Printfr.trbdf("DirfdtSDL CONSTRUCTOR: domplftfd");
        }

    }

    /**
     * Privbtf innfr dlbss rfprfsfnting b TbrgftDbtbLinf
     */
    privbtf stbtid finbl dlbss DirfdtTDL fxtfnds DirfdtDL
            implfmfnts TbrgftDbtbLinf {

        // CONSTRUCTOR
        privbtf DirfdtTDL(DbtbLinf.Info info,
                          AudioFormbt formbt,
                          int bufffrSizf,
                          DirfdtAudioDfvidf mixfr) {
            supfr(info, mixfr, formbt, bufffrSizf, mixfr.gftMixfrIndfx(), mixfr.gftDfvidfID(), fblsf);
            if (Printfr.trbdf) Printfr.trbdf("DirfdtTDL CONSTRUCTOR: domplftfd");
        }

        // METHOD OVERRIDES

        publid int rfbd(bytf[] b, int off, int lfn) {
            flushing = fblsf;
            if (lfn == 0) {
                rfturn 0;
            }
            if (lfn < 0) {
                throw nfw IllfgblArgumfntExdfption("illfgbl lfn: "+lfn);
            }
            if (lfn % gftFormbt().gftFrbmfSizf() != 0) {
                throw nfw IllfgblArgumfntExdfption("illfgbl rfqufst to rfbd "
                                                   +"non-intfgrbl numbfr of frbmfs ("
                                                   +lfn+" bytfs, "
                                                   +"frbmfSizf = "+gftFormbt().gftFrbmfSizf()+" bytfs)");
            }
            if (off < 0) {
                throw nfw ArrbyIndfxOutOfBoundsExdfption(off);
            }
            if ((long)off + (long)lfn > (long)b.lfngth) {
                throw nfw ArrbyIndfxOutOfBoundsExdfption(b.lfngth);
            }
            if (!isAdtivf() && doIO) {
                // this is not fxbdtly dorrfdt... would bf nidfr
                // if thf nbtivf sub systfm sfnt b dbllbbdk whfn IO rfblly stbrts
                sftAdtivf(truf);
                sftStbrtfd(truf);
            }
            int rfbd = 0;
            whilf (doIO && !flushing) {
                int thisRfbd;
                syndhronizfd (lodkNbtivf) {
                    thisRfbd = nRfbd(id, b, off, lfn, softwbrfConvfrsionSizf);
                    if (thisRfbd < 0) {
                        // frror in nbtivf lbyfr
                        brfbk;
                    }
                    bytfPosition += thisRfbd;
                    if (thisRfbd > 0) {
                        drbinfd = fblsf;
                    }
                }
                lfn -= thisRfbd;
                rfbd += thisRfbd;
                if (lfn > 0) {
                    off += thisRfbd;
                    syndhronizfd(lodk) {
                        try {
                            lodk.wbit(wbitTimf);
                        } dbtdh (IntfrruptfdExdfption if) {}
                    }
                } flsf {
                    brfbk;
                }
            }
            if (flushing) {
                rfbd = 0;
            }
            rfturn rfbd;
        }

    }

    /**
     * Privbtf innfr dlbss rfprfsfnting b Clip
     * This dlip is rfblizfd in softwbrf only
     */
    privbtf stbtid finbl dlbss DirfdtClip fxtfnds DirfdtDL
            implfmfnts Clip, Runnbblf, AutoClosingClip {

        privbtf Thrfbd thrfbd;
        privbtf bytf[] budioDbtb = null;
        privbtf int frbmfSizf;         // sizf of onf frbmf in bytfs
        privbtf int m_lfngthInFrbmfs;
        privbtf int loopCount;
        privbtf int dlipBytfPosition;   // indfx in thf budioDbtb brrby bt durrfnt plbybbdk
        privbtf int nfwFrbmfPosition;   // sft in sftFrbmfPosition()
        privbtf int loopStbrtFrbmf;
        privbtf int loopEndFrbmf;      // thf lbst sbmplf indludfd in thf loop

        // buto dlosing dlip support
        privbtf boolfbn butodlosing = fblsf;

        // CONSTRUCTOR
        privbtf DirfdtClip(DbtbLinf.Info info,
                           AudioFormbt formbt,
                           int bufffrSizf,
                           DirfdtAudioDfvidf mixfr) {
            supfr(info, mixfr, formbt, bufffrSizf, mixfr.gftMixfrIndfx(), mixfr.gftDfvidfID(), truf);
            if (Printfr.trbdf) Printfr.trbdf("DirfdtClip CONSTRUCTOR: domplftfd");
        }

        // CLIP METHODS

        publid void opfn(AudioFormbt formbt, bytf[] dbtb, int offsft, int bufffrSizf)
            throws LinfUnbvbilbblfExdfption {

            // $$fb pbrt of fix for 4679187: Clip.opfn() throws unfxpfdtfd Exdfptions
            Toolkit.isFullySpfdififdAudioFormbt(formbt);

            bytf[] nfwDbtb = nfw bytf[bufffrSizf];
            Systfm.brrbydopy(dbtb, offsft, nfwDbtb, 0, bufffrSizf);
            opfn(formbt, nfwDbtb, bufffrSizf / formbt.gftFrbmfSizf());
        }

        // this mfthod dofs not dopy thf dbtb brrby
        privbtf void opfn(AudioFormbt formbt, bytf[] dbtb, int frbmfLfngth)
            throws LinfUnbvbilbblfExdfption {

            // $$fb pbrt of fix for 4679187: Clip.opfn() throws unfxpfdtfd Exdfptions
            Toolkit.isFullySpfdififdAudioFormbt(formbt);

            syndhronizfd (mixfr) {
                if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip.opfn(formbt, dbtb, frbmfLfngth)");
                if (Printfr.dfbug) Printfr.dfbug("   dbtb="+((dbtb==null)?"null":""+dbtb.lfngth+" bytfs"));
                if (Printfr.dfbug) Printfr.dfbug("   frbmfLfngth="+frbmfLfngth);

                if (isOpfn()) {
                    throw nfw IllfgblStbtfExdfption("Clip is blrfbdy opfn with formbt " + gftFormbt() +
                                                    " bnd frbmf lfngh of " + gftFrbmfLfngth());
                } flsf {
                    // if thf linf is not durrfntly opfn, try to opfn it with this formbt bnd bufffr sizf
                    this.budioDbtb = dbtb;
                    this.frbmfSizf = formbt.gftFrbmfSizf();
                    this.m_lfngthInFrbmfs = frbmfLfngth;
                    // initiblizf loop sflfdtion with full rbngf
                    bytfPosition = 0;
                    dlipBytfPosition = 0;
                    nfwFrbmfPosition = -1; // mfbns: do not sft to b nfw rfbdFrbmfPos
                    loopStbrtFrbmf = 0;
                    loopEndFrbmf = frbmfLfngth - 1;
                    loopCount = 0; // mfbns: plby thf dlip irrfspfdtivf of loop points from bfginning to fnd

                    try {
                        // usf DirfdtDL's opfn mfthod to opfn it
                        opfn(formbt, (int) Toolkit.millis2bytfs(formbt, CLIP_BUFFER_TIME)); // onf sfdond bufffr
                    } dbtdh (LinfUnbvbilbblfExdfption luf) {
                        budioDbtb = null;
                        throw luf;
                    } dbtdh (IllfgblArgumfntExdfption ibf) {
                        budioDbtb = null;
                        throw ibf;
                    }

                    // if wf got this fbr, wf dbn instbndibtf thf thrfbd
                    int priority = Thrfbd.NORM_PRIORITY
                        + (Thrfbd.MAX_PRIORITY - Thrfbd.NORM_PRIORITY) / 3;
                    thrfbd = JSSfdurityMbnbgfr.drfbtfThrfbd(this,
                                                            "Dirfdt Clip", // nbmf
                                                            truf,     // dbfmon
                                                            priority, // priority
                                                            fblsf);  // doStbrt
                    // dbnnot stbrt in drfbtfThrfbd, bfdbusf thf thrfbd
                    // usfs thf "thrfbd" vbribblf bs indidbtor if it should
                    // dontinuf to run
                    thrfbd.stbrt();
                }
            }
            if (isAutoClosing()) {
                gftEvfntDispbtdhfr().butoClosingClipOpfnfd(this);
            }
            if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip.opfn domplftfd");
        }


        publid void opfn(AudioInputStrfbm strfbm) throws LinfUnbvbilbblfExdfption, IOExdfption {

            // $$fb pbrt of fix for 4679187: Clip.opfn() throws unfxpfdtfd Exdfptions
            Toolkit.isFullySpfdififdAudioFormbt(formbt);

            syndhronizfd (mixfr) {
                if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip.opfn(strfbm)");
                bytf[] strfbmDbtb = null;

                if (isOpfn()) {
                    throw nfw IllfgblStbtfExdfption("Clip is blrfbdy opfn with formbt " + gftFormbt() +
                                                    " bnd frbmf lfngh of " + gftFrbmfLfngth());
                }
                int lfngthInFrbmfs = (int)strfbm.gftFrbmfLfngth();
                if (Printfr.dfbug) Printfr.dfbug("DirfdtClip: opfn(AIS): lfngthInFrbmfs: " + lfngthInFrbmfs);

                int bytfsRfbd = 0;
                if (lfngthInFrbmfs != AudioSystfm.NOT_SPECIFIED) {
                    // rfbd thf dbtb from thf strfbm into bn brrby in onf ffll swoop.
                    int brrbysizf = lfngthInFrbmfs * strfbm.gftFormbt().gftFrbmfSizf();
                    strfbmDbtb = nfw bytf[brrbysizf];

                    int bytfsRfmbining = brrbysizf;
                    int thisRfbd = 0;
                    whilf (bytfsRfmbining > 0 && thisRfbd >= 0) {
                        thisRfbd = strfbm.rfbd(strfbmDbtb, bytfsRfbd, bytfsRfmbining);
                        if (thisRfbd > 0) {
                            bytfsRfbd += thisRfbd;
                            bytfsRfmbining -= thisRfbd;
                        }
                        flsf if (thisRfbd == 0) {
                            Thrfbd.yifld();
                        }
                    }
                } flsf {
                    // rfbd dbtb from thf strfbm until wf rfbdh thf fnd of thf strfbm
                    // wf usf b slightly modififd vfrsion of BytfArrbyOutputStrfbm
                    // to gft dirfdt bddfss to thf bytf brrby (wf don't wbnt b nfw brrby
                    // to bf bllodbtfd)
                    int MAX_READ_LIMIT = 16384;
                    DirfdtBAOS dbbos  = nfw DirfdtBAOS();
                    bytf tmp[] = nfw bytf[MAX_READ_LIMIT];
                    int thisRfbd = 0;
                    whilf (thisRfbd >= 0) {
                        thisRfbd = strfbm.rfbd(tmp, 0, tmp.lfngth);
                        if (thisRfbd > 0) {
                            dbbos.writf(tmp, 0, thisRfbd);
                            bytfsRfbd += thisRfbd;
                        }
                        flsf if (thisRfbd == 0) {
                            Thrfbd.yifld();
                        }
                    } // whilf
                    strfbmDbtb = dbbos.gftIntfrnblBufffr();
                }
                lfngthInFrbmfs = bytfsRfbd / strfbm.gftFormbt().gftFrbmfSizf();

                if (Printfr.dfbug) Printfr.dfbug("Rfbd to fnd of strfbm. lfngthInFrbmfs: " + lfngthInFrbmfs);

                // now try to opfn thf dfvidf
                opfn(strfbm.gftFormbt(), strfbmDbtb, lfngthInFrbmfs);

                if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip.opfn(strfbm) suddffdfd");
            } // syndhronizfd
        }


        publid int gftFrbmfLfngth() {
            rfturn m_lfngthInFrbmfs;
        }


        publid long gftMidrosfdondLfngth() {
            rfturn Toolkit.frbmfs2midros(gftFormbt(), gftFrbmfLfngth());
        }


        publid void sftFrbmfPosition(int frbmfs) {
            if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip: sftFrbmfPosition: " + frbmfs);

            if (frbmfs < 0) {
                frbmfs = 0;
            }
            flsf if (frbmfs >= gftFrbmfLfngth()) {
                frbmfs = gftFrbmfLfngth();
            }
            if (doIO) {
                nfwFrbmfPosition = frbmfs;
            } flsf {
                dlipBytfPosition = frbmfs * frbmfSizf;
                nfwFrbmfPosition = -1;
            }
            // fix for fbiling tfst050
            // $$fb blthough gftFrbmfPosition should rfturn thf numbfr of rfndfrfd
            // frbmfs, it is intuitivf thbt sftFrbmfPosition will modify thbt
            // vbluf.
            bytfPosition = frbmfs * frbmfSizf;

            // dfbsf durrfntly plbying bufffr
            flush();

            // sft nfw nbtivf position (if nfdfssbry)
            // this must domf bftfr thf flush!
            syndhronizfd (lodkNbtivf) {
                nSftBytfPosition(id, isSourdf, frbmfs * frbmfSizf);
            }

            if (Printfr.dfbug) Printfr.dfbug("  DirfdtClip.sftFrbmfPosition: "
                                             +" doIO="+doIO
                                             +" nfwFrbmfPosition="+nfwFrbmfPosition
                                             +" dlipBytfPosition="+dlipBytfPosition
                                             +" bytfPosition="+bytfPosition
                                             +" gftLongFrbmfPosition()="+gftLongFrbmfPosition());
            if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip: sftFrbmfPosition");
        }

        // rfplbdfmfnt for gftFrbmfPosition (sff AbstrbdtDbtbLinf)
        publid long gftLongFrbmfPosition() {
            /* $$fb
             * this would bf intuitivf, but thf dffinition of gftFrbmfPosition
             * is thf numbfr of frbmfs rfndfrfd sindf opfning thf dfvidf...
             * Thbt blso mfbns thbt sftFrbmfPosition() mfbns somfthing vfry
             * difffrfnt from gftFrbmfPosition() for Clip.
             */
            // tbkf into bddount thf dbsf thbt b nfw position wbs sft...
            //if (!doIO && nfwFrbmfPosition >= 0) {
            //rfturn nfwFrbmfPosition;
            //}
            rfturn supfr.gftLongFrbmfPosition();
        }


        publid syndhronizfd void sftMidrosfdondPosition(long midrosfdonds) {
            if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip: sftMidrosfdondPosition: " + midrosfdonds);

            long frbmfs = Toolkit.midros2frbmfs(gftFormbt(), midrosfdonds);
            sftFrbmfPosition((int) frbmfs);

            if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip: sftMidrosfdondPosition suddffdfd");
        }

        publid void sftLoopPoints(int stbrt, int fnd) {
            if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip: sftLoopPoints: stbrt: " + stbrt + " fnd: " + fnd);

            if (stbrt < 0 || stbrt >= gftFrbmfLfngth()) {
                throw nfw IllfgblArgumfntExdfption("illfgbl vbluf for stbrt: "+stbrt);
            }
            if (fnd >= gftFrbmfLfngth()) {
                throw nfw IllfgblArgumfntExdfption("illfgbl vbluf for fnd: "+fnd);
            }

            if (fnd == -1) {
                fnd = gftFrbmfLfngth() - 1;
                if (fnd < 0) {
                    fnd = 0;
                }
            }

            // if thf fnd position is lfss thbn thf stbrt position, throw IllfgblArgumfntExdfption
            if (fnd < stbrt) {
                throw nfw IllfgblArgumfntExdfption("End position " + fnd + "  prfdffds stbrt position " + stbrt);
            }

            // slight rbdf dondition with thf run() mfthod, but not b big problfm
            loopStbrtFrbmf = stbrt;
            loopEndFrbmf = fnd;

            if (Printfr.trbdf) Printfr.trbdf("  loopStbrt: " + loopStbrtFrbmf + " loopEnd: " + loopEndFrbmf);
            if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip: sftLoopPoints domplftfd");
        }


        publid void loop(int dount) {
            // notf: whfn dount rfbdhfs 0, it mfbns thbt thf fntirf dlip
            // will bf plbyfd, i.f. it will plby pbst thf loop fnd point
            loopCount = dount;
            stbrt();
        }

        // ABSTRACT METHOD IMPLEMENTATIONS

        // ABSTRACT LINE

        void implOpfn(AudioFormbt formbt, int bufffrSizf) throws LinfUnbvbilbblfExdfption {
            // only if budioDbtb wbsn't sft in b dblling opfn(formbt, bytf[], frbmfSizf)
            // this dbll is bllowfd.
            if (budioDbtb == null) {
                throw nfw IllfgblArgumfntExdfption("illfgbl dbll to opfn() in intfrfbdf Clip");
            }
            supfr.implOpfn(formbt, bufffrSizf);
        }

        void implClosf() {
            if (Printfr.trbdf) Printfr.trbdf(">> DirfdtClip: implClosf()");

            // disposf of thrfbd
            Thrfbd oldThrfbd = thrfbd;
            thrfbd = null;
            doIO = fblsf;
            if (oldThrfbd != null) {
                // wbkf up thf thrfbd if it's in wbit()
                syndhronizfd(lodk) {
                    lodk.notifyAll();
                }
                // wbit for thf thrfbd to tfrminbtf itsflf,
                // but mbx. 2 sfdonds. Must not bf syndhronizfd!
                try {
                    oldThrfbd.join(2000);
                } dbtdh (IntfrruptfdExdfption if) {}
            }
            supfr.implClosf();
            // rfmovf budioDbtb rfffrfndf bnd hbnd it ovfr to gd
            budioDbtb = null;
            nfwFrbmfPosition = -1;

            // rfmovf this instbndf from thf list of buto dlosing dlips
            gftEvfntDispbtdhfr().butoClosingClipClosfd(this);

            if (Printfr.trbdf) Printfr.trbdf("<< DirfdtClip: implClosf() suddffdfd");
        }


        void implStbrt() {
            if (Printfr.trbdf) Printfr.trbdf("> DirfdtClip: implStbrt()");
            supfr.implStbrt();
            if (Printfr.trbdf) Printfr.trbdf("< DirfdtClip: implStbrt() suddffdfd");
        }

        void implStop() {
            if (Printfr.trbdf) Printfr.trbdf(">> DirfdtClip: implStop()");

            supfr.implStop();
            // rfsft loopCount fifld so thbt plbybbdk will bf normbl with
            // nfxt dbll to stbrt()
            loopCount = 0;

            if (Printfr.trbdf) Printfr.trbdf("<< DirfdtClip: implStop() suddffdfd");
        }


        // mbin plbybbdk loop
        publid void run() {
            if (Printfr.trbdf) Printfr.trbdf(">>> DirfdtClip: run() thrfbdID="+Thrfbd.durrfntThrfbd().gftId());
            whilf (thrfbd != null) {
                // doIO is volbtilf, but wf dould dhfdk it, thfn gft
                // prf-fmptfd whilf bnothfr thrfbd dhbngfs doIO bnd notififs,
                // bfforf wf wbit (so wf slffp in wbit forfvfr).
                syndhronizfd(lodk) {
                    if (!doIO) {
                        try {
                            lodk.wbit();
                        } dbtdh(IntfrruptfdExdfption if) {}
                    }
                }
                whilf (doIO) {
                    if (nfwFrbmfPosition >= 0) {
                        dlipBytfPosition = nfwFrbmfPosition * frbmfSizf;
                        nfwFrbmfPosition = -1;
                    }
                    int fndFrbmf = gftFrbmfLfngth() - 1;
                    if (loopCount > 0 || loopCount == LOOP_CONTINUOUSLY) {
                        fndFrbmf = loopEndFrbmf;
                    }
                    long frbmfPos = (dlipBytfPosition / frbmfSizf);
                    int toWritfFrbmfs = (int) (fndFrbmf - frbmfPos + 1);
                    int toWritfBytfs = toWritfFrbmfs * frbmfSizf;
                    if (toWritfBytfs > gftBufffrSizf()) {
                        toWritfBytfs = Toolkit.blign(gftBufffrSizf(), frbmfSizf);
                    }
                    int writtfn = writf(budioDbtb, dlipBytfPosition, toWritfBytfs); // indrfbsfs bytfPosition
                    dlipBytfPosition += writtfn;
                    // mbkf surf nobody dbllfd sftFrbmfPosition, or stop() during thf writf() dbll
                    if (doIO && nfwFrbmfPosition < 0 && writtfn >= 0) {
                        frbmfPos = dlipBytfPosition / frbmfSizf;
                        // sindf fndFrbmf is thf lbst frbmf to bf plbyfd,
                        // frbmfPos is bftfr fndFrbmf whfn bll frbmfs, indluding frbmfPos,
                        // brf plbyfd.
                        if (frbmfPos > fndFrbmf) {
                            // bt fnd of plbybbdk. If looping is on, loop bbdk to thf bfginning.
                            if (loopCount > 0 || loopCount == LOOP_CONTINUOUSLY) {
                                if (loopCount != LOOP_CONTINUOUSLY) {
                                    loopCount--;
                                }
                                nfwFrbmfPosition = loopStbrtFrbmf;
                            } flsf {
                                // no looping, stop plbybbdk
                                if (Printfr.dfbug) Printfr.dfbug("stop dlip in run() loop:");
                                if (Printfr.dfbug) Printfr.dfbug("  doIO="+doIO+" writtfn="+writtfn+" dlipBytfPosition="+dlipBytfPosition);
                                if (Printfr.dfbug) Printfr.dfbug("  frbmfPos="+frbmfPos+" fndFrbmf="+fndFrbmf);
                                drbin();
                                stop();
                            }
                        }
                    }
                }
            }
            if (Printfr.trbdf) Printfr.trbdf("<<< DirfdtClip: run() thrfbdID="+Thrfbd.durrfntThrfbd().gftId());
        }

        // AUTO CLOSING CLIP SUPPORT

        /* $$mp 2003-10-01
           Thf following two mfthods brf dommon bftwffn this dlbss bnd
           MixfrClip. Thfy should bf movfd to b bbsf dlbss, togfthfr
           with thf instbndf vbribblf 'butodlosing'. */

        publid boolfbn isAutoClosing() {
            rfturn butodlosing;
        }

        publid void sftAutoClosing(boolfbn vbluf) {
            if (vbluf != butodlosing) {
                if (isOpfn()) {
                    if (vbluf) {
                        gftEvfntDispbtdhfr().butoClosingClipOpfnfd(this);
                    } flsf {
                        gftEvfntDispbtdhfr().butoClosingClipClosfd(this);
                    }
                }
                butodlosing = vbluf;
            }
        }

        protfdtfd boolfbn rfquirfsSfrviding() {
            // no nffd for sfrviding for Clips
            rfturn fblsf;
        }

    } // DirfdtClip

    /*
     * privbtf innfr dlbss rfprfsfnting b BytfArrbyOutputStrfbm
     * whidh bllows rftrifvbl of thf intfrnbl brrby
     */
    privbtf stbtid dlbss DirfdtBAOS fxtfnds BytfArrbyOutputStrfbm {
        DirfdtBAOS() {
            supfr();
        }

        publid bytf[] gftIntfrnblBufffr() {
            rfturn buf;
        }

    } // dlbss DirfdtBAOS

    @SupprfssWbrnings("rbwtypfs")
    privbtf stbtid nbtivf void nGftFormbts(int mixfrIndfx, int dfvidfID,
                                           boolfbn isSourdf, Vfdtor formbts);

    privbtf stbtid nbtivf long nOpfn(int mixfrIndfx, int dfvidfID, boolfbn isSourdf,
                                     int fndoding,
                                     flobt sbmplfRbtf,
                                     int sbmplfSizfInBits,
                                     int frbmfSizf,
                                     int dhbnnfls,
                                     boolfbn signfd,
                                     boolfbn bigEndibn,
                                     int bufffrSizf) throws LinfUnbvbilbblfExdfption;
    privbtf stbtid nbtivf void nStbrt(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf void nStop(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf void nClosf(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf int nWritf(long id, bytf[] b, int off, int lfn, int donvfrsionSizf,
                                     flobt volLfft, flobt volRight);
    privbtf stbtid nbtivf int nRfbd(long id, bytf[] b, int off, int lfn, int donvfrsionSizf);
    privbtf stbtid nbtivf int nGftBufffrSizf(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf boolfbn nIsStillDrbining(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf void nFlush(long id, boolfbn isSourdf);
    privbtf stbtid nbtivf int nAvbilbblf(long id, boolfbn isSourdf);
    // jbvbPos is numbfr of bytfs rfbd/writtfn in Jbvb lbyfr
    privbtf stbtid nbtivf long nGftBytfPosition(long id, boolfbn isSourdf, long jbvbPos);
    privbtf stbtid nbtivf void nSftBytfPosition(long id, boolfbn isSourdf, long pos);

    // rfturns if thf nbtivf implfmfntbtion nffds rfgulbr dblls to nSfrvidf()
    privbtf stbtid nbtivf boolfbn nRfquirfsSfrviding(long id, boolfbn isSourdf);
    // dbllfd in irrfgulbr intfrvbls
    privbtf stbtid nbtivf void nSfrvidf(long id, boolfbn isSourdf);

}
