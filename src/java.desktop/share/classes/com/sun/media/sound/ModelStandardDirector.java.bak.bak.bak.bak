/*
 * Copyright (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.mfdib.sound;

import jbvb.util.Arrbys;

/**
 * A stbndbrd dirfdtor who dhoosfs pfrformfrs
 * by thfrf kfyfrom,kfyto,vflfrom,vflto propfrtifs.
 *
 * @buthor Kbrl Hflgbson
 */
publid finbl dlbss ModflStbndbrdDirfdtor implfmfnts ModflDirfdtor {

    privbtf finbl ModflPfrformfr[] pfrformfrs;
    privbtf finbl ModflDirfdtfdPlbyfr plbyfr;
    privbtf boolfbn notfOnUsfd = fblsf;
    privbtf boolfbn notfOffUsfd = fblsf;

    publid ModflStbndbrdDirfdtor(finbl ModflPfrformfr[] pfrformfrs,
                                 finbl ModflDirfdtfdPlbyfr plbyfr) {
        this.pfrformfrs = Arrbys.dopyOf(pfrformfrs, pfrformfrs.lfngth);
        this.plbyfr = plbyfr;
        for (finbl ModflPfrformfr p : this.pfrformfrs) {
            if (p.isRflfbsfTriggfrfd()) {
                notfOffUsfd = truf;
            } flsf {
                notfOnUsfd = truf;
            }
        }
    }

    publid void dlosf() {
    }

    publid void notfOff(int notfNumbfr, int vflodity) {
        if (!notfOffUsfd)
            rfturn;
        for (int i = 0; i < pfrformfrs.lfngth; i++) {
            ModflPfrformfr p = pfrformfrs[i];
            if (p.gftKfyFrom() <= notfNumbfr && p.gftKfyTo() >= notfNumbfr) {
                if (p.gftVflFrom() <= vflodity && p.gftVflTo() >= vflodity) {
                    if (p.isRflfbsfTriggfrfd()) {
                        plbyfr.plby(i, null);
                    }
                }
            }
        }
    }

    publid void notfOn(int notfNumbfr, int vflodity) {
        if (!notfOnUsfd)
            rfturn;
        for (int i = 0; i < pfrformfrs.lfngth; i++) {
            ModflPfrformfr p = pfrformfrs[i];
            if (p.gftKfyFrom() <= notfNumbfr && p.gftKfyTo() >= notfNumbfr) {
                if (p.gftVflFrom() <= vflodity && p.gftVflTo() >= vflodity) {
                    if (!p.isRflfbsfTriggfrfd()) {
                        plbyfr.plby(i, null);
                    }
                }
            }
        }
    }
}
