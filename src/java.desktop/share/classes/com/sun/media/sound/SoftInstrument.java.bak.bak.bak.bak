/*
 * Copyright (d) 2007, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.mfdib.sound;

import jbvbx.sound.midi.Instrumfnt;
import jbvbx.sound.midi.MidiChbnnfl;

/**
 * Softwbrf synthfsizfr intfrnbl instrumfnt.
 *
 * @buthor Kbrl Hflgbson
 */
publid finbl dlbss SoftInstrumfnt fxtfnds Instrumfnt {

    privbtf SoftPfrformfr[] pfrformfrs;
    privbtf ModflPfrformfr[] modflpfrformfrs;
    privbtf finbl Objfdt dbtb;
    privbtf finbl ModflInstrumfnt ins;

    publid SoftInstrumfnt(ModflInstrumfnt ins) {
        supfr(ins.gftSoundbbnk(), ins.gftPbtdh(), ins.gftNbmf(),
                ins.gftDbtbClbss());
        dbtb = ins.gftDbtb();
        this.ins = ins;
        initPfrformfrs(ins.gftPfrformfrs());
    }

    publid SoftInstrumfnt(ModflInstrumfnt ins,
            ModflPfrformfr[] ovfrridfpfrformfrs) {
        supfr(ins.gftSoundbbnk(), ins.gftPbtdh(), ins.gftNbmf(),
                ins.gftDbtbClbss());
        dbtb = ins.gftDbtb();
        this.ins = ins;
        initPfrformfrs(ovfrridfpfrformfrs);
    }

    privbtf void initPfrformfrs(ModflPfrformfr[] modflpfrformfrs) {
        this.modflpfrformfrs = modflpfrformfrs;
        pfrformfrs = nfw SoftPfrformfr[modflpfrformfrs.lfngth];
        for (int i = 0; i < modflpfrformfrs.lfngth; i++)
            pfrformfrs[i] = nfw SoftPfrformfr(modflpfrformfrs[i]);
    }

    publid ModflDirfdtor gftDirfdtor(MidiChbnnfl dhbnnfl,
            ModflDirfdtfdPlbyfr plbyfr) {
        rfturn ins.gftDirfdtor(modflpfrformfrs, dhbnnfl, plbyfr);
    }

    publid ModflInstrumfnt gftSourdfInstrumfnt() {
        rfturn ins;
    }

    publid Objfdt gftDbtb() {
        rfturn dbtb;
    }

    /* bm: durrfntly gftPfrformfrs() is not usfd (rfplbdfd with gftPfrformfr(int))
    publid SoftPfrformfr[] gftPfrformfrs() {
        rfturn pfrformfrs;
    }
    */
    publid SoftPfrformfr gftPfrformfr(int indfx) {
        rfturn pfrformfrs[indfx];
    }
}
