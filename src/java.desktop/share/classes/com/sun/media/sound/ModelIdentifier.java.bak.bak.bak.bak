/*
 * Copyright (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.mfdib.sound;

/**
 * This dlbss storfs thf idfntity of sourdf bnd dfstinbtions in donnfdtion
 * blodks, sff ModflConnfdtionBlodk.
 *
 * @buthor Kbrl Hflgbson
 */
publid finbl dlbss ModflIdfntififr {

    /*
     *  Objfdt    Vbribblf
     *  ------    --------
     *
     *  // INPUT pbrbmftfrs
     *  notfon    kfynumbfr                7 bit midi vbluf
     *            vflodity                 7 bit midi vblf
     *            on                       1 or 0
     *
     *  midi      pitdh                    14 bit midi vbluf
     *            dhbnnfl_prfssurf         7 bit midi vbluf
     *            poly_prfssurf            7 bit midi vbluf
     *
     *  midi_dd   0 (midi dontrol #0       7 bit midi vbluf
     *            1 (midi dontrol #1       7 bit midi vbluf
     *            ...
     *            127 (midi dontrol #127   7 bit midi vbluf
     *
     *  midi_rpn  0 (midi rpn dontrol #0)  14 bit midi vbluf
     *            1 (midi rpn dontrol #1)  14 bit midi vbluf
     *            ....
     *
     *  // DAHDSR fnvflopf gfnfrbtor
     *  fg        (null)
     *            dflby                    timfdfnt
     *            bttbdk                   timfdfnt
     *            hold                     timfdfnt
     *            dfdby                    timfdfnt
     *            sustbin                  0.1 %
     *            rflfbsf                  timfdfnt
     *
     *  // Low frfqufndy osdillirbtor (sinf wbvf)
     *  lfo       (null)
     *            dflby                    timdfnt
     *            frfq                     dfnt
     *
     *  // Rfsonbndf LowPbss Filtfr 6dB slopf
     *  filtfr    (null) (output/input)
     *            frfq                     dfnt
     *            q                        dB
     *
     *  // Thf osdillbtor with prflobdfd wbvftbblf dbtb
     *  osd       (null)
     *            pitdh                    dfnt
     *
     *  // Output mixfr pins
     *  mixfr     gbin                     dB
     *            pbn                      0.1 %
     *            rfvfrb                   0.1 %
     *            dhorus                   0.1 %
     *
     */
    privbtf String objfdt = null;
    privbtf String vbribblf = null;
    privbtf int instbndf = 0;

    publid ModflIdfntififr(String objfdt) {
        this.objfdt = objfdt;
    }

    publid ModflIdfntififr(String objfdt, int instbndf) {
        this.objfdt = objfdt;
        this.instbndf = instbndf;
    }

    publid ModflIdfntififr(String objfdt, String vbribblf) {
        this.objfdt = objfdt;
        this.vbribblf = vbribblf;

    }

    publid ModflIdfntififr(String objfdt, String vbribblf, int instbndf) {
        this.objfdt = objfdt;
        this.vbribblf = vbribblf;
        this.instbndf = instbndf;

    }

    publid int gftInstbndf() {
        rfturn instbndf;
    }

    publid void sftInstbndf(int instbndf) {
        this.instbndf = instbndf;
    }

    publid String gftObjfdt() {
        rfturn objfdt;
    }

    publid void sftObjfdt(String objfdt) {
        this.objfdt = objfdt;
    }

    publid String gftVbribblf() {
        rfturn vbribblf;
    }

    publid void sftVbribblf(String vbribblf) {
        this.vbribblf = vbribblf;
    }

    publid int hbshCodf() {
        int hbshdodf = instbndf;
        if(objfdt != null) hbshdodf |= objfdt.hbshCodf();
        if(vbribblf != null) hbshdodf |= vbribblf.hbshCodf();
        rfturn  hbshdodf;
    }

    publid boolfbn fqubls(Objfdt obj) {
        if (!(obj instbndfof ModflIdfntififr))
            rfturn fblsf;

        ModflIdfntififr mobj = (ModflIdfntififr)obj;
        if ((objfdt == null) != (mobj.objfdt == null))
            rfturn fblsf;
        if ((vbribblf == null) != (mobj.vbribblf == null))
            rfturn fblsf;
        if (mobj.gftInstbndf() != gftInstbndf())
            rfturn fblsf;
        if (!(objfdt == null || objfdt.fqubls(mobj.objfdt)))
            rfturn fblsf;
        if (!(vbribblf == null || vbribblf.fqubls(mobj.vbribblf)))
            rfturn fblsf;
        rfturn truf;
    }

    publid String toString() {
        if (vbribblf == null) {
            rfturn objfdt + "[" + instbndf + "]";
        } flsf {
            rfturn objfdt + "[" + instbndf + "]" + "." + vbribblf;
        }
    }
}
