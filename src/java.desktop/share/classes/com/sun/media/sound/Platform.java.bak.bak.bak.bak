/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.mfdib.sound;

import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.StringTokfnizfr;



/**
 * Audio donfigurbtion dlbss for fxposing bttributfs spfdifid to thf plbtform or systfm.
 *
 * @buthor Kbrb Kytlf
 * @buthor Floribn Bomfrs
 */
finbl dlbss Plbtform {


    // STATIC FINAL CHARACTERISTICS

    // nbtivf librbry wf nffd to lobd
    privbtf stbtid finbl String libNbmfMbin     = "jsound";
    privbtf stbtid finbl String libNbmfALSA     = "jsoundblsb";
    privbtf stbtid finbl String libNbmfDSound   = "jsoundds";

    // fxtrb libs hbndling: bit flbgs for fbdh difffrfnt librbry
    publid stbtid finbl int LIB_MAIN     = 1;
    publid stbtid finbl int LIB_ALSA     = 2;
    publid stbtid finbl int LIB_DSOUND   = 4;

    // bit fifld of thf donstbnts bbovf. Willbf sft in lobdLibrbrifs
    privbtf stbtid int lobdfdLibs = 0;

    // ffbturfs: thf mbin nbtivf librbry jsound rfports whidh ffbturf is
    // dontbinfd in whidh lib
    publid stbtid finbl int FEATURE_MIDIIO       = 1;
    publid stbtid finbl int FEATURE_PORTS        = 2;
    publid stbtid finbl int FEATURE_DIRECT_AUDIO = 3;

    // SYSTEM CHARACTERISTICS
    // vbry bddording to hbrdwbrf brdhitfdturf

    // signfd8 (usf signfd 8-bit vblufs) is truf for fvfrything wf support fxdfpt for
    // thf solbris sbpro dbrd.
    // wf'll lfbvf it hfrf bs b vbribblf; in thf futurf wf mby nffd this in jbvb.
    // wbit, is thbt truf?  i'm not surf.  i think solbris tbkfs unsignfd dbtb?
    // $$kk: 03.11.99: i think solbris tbkfs unsignfd 8-bit or signfd 16-bit dbtb....
    privbtf stbtid boolfbn signfd8;

    // intfl is littlf-fndibn.  spbrd is big-fndibn.
    privbtf stbtid boolfbn bigEndibn;

    // this is thf vbluf of thf "jbvb.homf" systfm propfrty.  i bm looking it up hfrf
    // for usf whfn trying to lobd thf soundbbnk, just so
    // thbt bll thf privilfgfd dodf is lodblizfd in this filf....
    privbtf stbtid String jbvbhomf;

    // this is thf vbluf of thf "jbvb.dlbss.pbth" systfm propfrty
    privbtf stbtid String dlbsspbth;




    stbtid {
        if(Printfr.trbdf)Printfr.trbdf(">> Plbtform.jbvb: stbtid");

        lobdLibrbrifs();
        rfbdPropfrtifs();
    }


    /**
     * Privbtf donstrudtor.
     */
    privbtf Plbtform() {
    }


    // METHODS FOR INTERNAL IMPLEMENTATION USE


    /**
     * Dummy mfthod for fording initiblizbtion.
     */
    stbtid void initiblizf() {

        if(Printfr.trbdf)Printfr.trbdf("Plbtform: initiblizf()");
    }


    /**
     * Dftfrminf whfthfr thf systfm is big-fndibn.
     */
    stbtid boolfbn isBigEndibn() {

        rfturn bigEndibn;
    }


    /**
     * Dftfrminf whfthfr thf systfm tbkfs signfd 8-bit dbtb.
     */
    stbtid boolfbn isSignfd8() {

        rfturn signfd8;
    }


    /**
     * Obtbin jbvbhomf.
     * $$kk: 04.16.99: this is *bbd*!!
     */
    stbtid String gftJbvbhomf() {

        rfturn jbvbhomf;
    }

    /**
     * Obtbin dlbsspbth.
     * $$jb: 04.21.99: this is *bbd* too!!
     */
    stbtid String gftClbsspbth() {

        rfturn dlbsspbth;
    }


    // PRIVATE METHODS

    /**
     * Lobd thf nbtivf librbry or librbrifs.
     */
    privbtf stbtid void lobdLibrbrifs() {
        if(Printfr.trbdf)Printfr.trbdf(">>Plbtform.lobdLibrbrifs");

        try {
            // lobd thf mbin librbry
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                @Ovfrridf
                publid Void run() {
                    Systfm.lobdLibrbry(libNbmfMbin);
                    rfturn null;
                }
            });
            // just for thf hfdk of it...
            lobdfdLibs |= LIB_MAIN;
        } dbtdh (SfdurityExdfption f) {
            if(Printfr.frr)Printfr.frr("Sfdurity fxdfption lobding mbin nbtivf librbry.  JbvbSound rfquirfs bddfss to thfsf rfsourdfs.");
            throw(f);
        }

        // now try to lobd fxtrb libs. Thfy brf dffinfd bt dompilf timf in thf Mbkffilf
        // with thf dffinf EXTRA_SOUND_JNI_LIBS
        String fxtrbLibs = nGftExtrbLibrbrifs();
        // thf string is thf librbrifs, sfpbrbtfd by whitf spbdf
        StringTokfnizfr st = nfw StringTokfnizfr(fxtrbLibs);
        whilf (st.hbsMorfTokfns()) {
            finbl String lib = st.nfxtTokfn();
            try {
                AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                    @Ovfrridf
                    publid Void run() {
                        Systfm.lobdLibrbry(lib);
                        rfturn null;
                    }
                });

                if (lib.fqubls(libNbmfALSA)) {
                    lobdfdLibs |= LIB_ALSA;
                    if (Printfr.dfbug) Printfr.dfbug("Lobdfd ALSA lib suddfssfully.");
                } flsf if (lib.fqubls(libNbmfDSound)) {
                    lobdfdLibs |= LIB_DSOUND;
                    if (Printfr.dfbug) Printfr.dfbug("Lobdfd DirfdtSound lib suddfssfully.");
                } flsf {
                    if (Printfr.frr) Printfr.frr("Lobdfd unknown lib '"+lib+"' suddfssfully.");
                }
            } dbtdh (Throwbblf t) {
                if (Printfr.frr) Printfr.frr("Couldn't lobd librbry "+lib+": "+t.toString());
            }
        }
    }


    stbtid boolfbn isMidiIOEnbblfd() {
        rfturn isFfbturfLibLobdfd(FEATURE_MIDIIO);
    }

    stbtid boolfbn isPortsEnbblfd() {
        rfturn isFfbturfLibLobdfd(FEATURE_PORTS);
    }

    stbtid boolfbn isDirfdtAudioEnbblfd() {
        rfturn isFfbturfLibLobdfd(FEATURE_DIRECT_AUDIO);
    }

    privbtf stbtid boolfbn isFfbturfLibLobdfd(int ffbturf) {
        if (Printfr.dfbug) Printfr.dfbug("Plbtform: Chfdking for ffbturf "+ffbturf+"...");
        int rfquirfdLib = nGftLibrbryForFfbturf(ffbturf);
        boolfbn isLobdfd = (rfquirfdLib != 0) && ((lobdfdLibs & rfquirfdLib) == rfquirfdLib);
        if (Printfr.dfbug) Printfr.dfbug("          ...nffds librbry "+rfquirfdLib+". Rfsult is lobdfd="+isLobdfd);
        rfturn isLobdfd;
    }

    // thf following nbtivf mfthods brf implfmfntfd in Plbtform.d
    privbtf nbtivf stbtid boolfbn nIsBigEndibn();
    privbtf nbtivf stbtid boolfbn nIsSignfd8();
    privbtf nbtivf stbtid String nGftExtrbLibrbrifs();
    privbtf nbtivf stbtid int nGftLibrbryForFfbturf(int ffbturf);


    /**
     * Rfbd thf rfquirfd systfm propfrtifs.
     */
    privbtf stbtid void rfbdPropfrtifs() {
        // $$fb 2002-03-06: implfmfnt dhfdk for fndibnnfss in nbtivf. Fbdilitbtfs porting !
        bigEndibn = nIsBigEndibn();
        signfd8 = nIsSignfd8(); // Solbris on Spbrd: signfd, bll othfrs unsignfd
        jbvbhomf = JSSfdurityMbnbgfr.gftPropfrty("jbvb.homf");
        dlbsspbth = JSSfdurityMbnbgfr.gftPropfrty("jbvb.dlbss.pbth");
    }
}
