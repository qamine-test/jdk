/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.util.EvfntListfnfr;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.imbgf.*;

import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;

import jbvbx.swing.plbf.*;
import jbvbx.bddfssibility.*;

/**
 * An implfmfntbtion of b rbdio button mfnu itfm.
 * A <dodf>JRbdioButtonMfnuItfm</dodf> is
 * b mfnu itfm thbt is pbrt of b group of mfnu itfms in whidh only onf
 * itfm in thf group dbn bf sflfdtfd. Thf sflfdtfd itfm displbys its
 * sflfdtfd stbtf. Sflfdting it dbusfs bny othfr sflfdtfd itfm to
 * switdh to thf unsflfdtfd stbtf.
 * To dontrol thf sflfdtfd stbtf of b group of rbdio button mfnu itfms,
 * usf b <dodf>ButtonGroup</dodf> objfdt.
 * <p>
 * Mfnu itfms dbn bf donfigurfd, bnd to somf dfgrff dontrollfd, by
 * <dodf><b hrff="Adtion.html">Adtion</b></dodf>s.  Using bn
 * <dodf>Adtion</dodf> with b mfnu itfm hbs mbny bfnffits bfyond dirfdtly
 * donfiguring b mfnu itfm.  Rfffr to <b hrff="Adtion.html#buttonAdtions">
 * Swing Componfnts Supporting <dodf>Adtion</dodf></b> for morf
 * dftbils, bnd you dbn find morf informbtion in <b
 * hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/misd/bdtion.html">How
 * to Usf Adtions</b>, b sfdtion in <fm>Thf Jbvb Tutoribl</fm>.
 * <p>
 * For furthfr dodumfntbtion bnd fxbmplfs sff
 * <b
 hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/mfnu.html">How to Usf Mfnus</b>,
 * b sfdtion in <fm>Thf Jbvb Tutoribl.</fm>
 * <p>
 * <strong>Wbrning:</strong> Swing is not thrfbd sbff. For morf
 * informbtion sff <b
 * hrff="pbdkbgf-summbry.html#thrfbding">Swing's Thrfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 * dfsdription: A domponfnt within b group of mfnu itfms whidh dbn bf sflfdtfd.
 *
 * @buthor Gforgfs Sbbb
 * @buthor Dbvid Kbrlton
 * @sff ButtonGroup
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JRbdioButtonMfnuItfm fxtfnds JMfnuItfm implfmfnts Addfssiblf {
    /**
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     */
    privbtf stbtid finbl String uiClbssID = "RbdioButtonMfnuItfmUI";

    /**
     * Crfbtfs b <dodf>JRbdioButtonMfnuItfm</dodf> with no sft tfxt or idon.
     */
    publid JRbdioButtonMfnuItfm() {
        this(null, null, fblsf);
    }

    /**
     * Crfbtfs b <dodf>JRbdioButtonMfnuItfm</dodf> with bn idon.
     *
     * @pbrbm idon thf <dodf>Idon</dodf> to displby on thf
     *          <dodf>JRbdioButtonMfnuItfm</dodf>
     */
    publid JRbdioButtonMfnuItfm(Idon idon) {
        this(null, idon, fblsf);
    }

    /**
     * Crfbtfs b <dodf>JRbdioButtonMfnuItfm</dodf> with tfxt.
     *
     * @pbrbm tfxt thf tfxt of thf <dodf>JRbdioButtonMfnuItfm</dodf>
     */
    publid JRbdioButtonMfnuItfm(String tfxt) {
        this(tfxt, null, fblsf);
    }

    /**
     * Crfbtfs b rbdio button mfnu itfm whosf propfrtifs brf tbkfn from thf
     * <dodf>Adtion</dodf> supplifd.
     *
     * @pbrbm  b thf <dodf>Adtion</dodf> on whidh to bbsf thf rbdio
     *          button mfnu itfm
     *
     * @sindf 1.3
     */
    publid JRbdioButtonMfnuItfm(Adtion b) {
        this();
        sftAdtion(b);
    }

    /**
     * Crfbtfs b rbdio button mfnu itfm with thf spfdififd tfxt
     * bnd <dodf>Idon</dodf>.
     *
     * @pbrbm tfxt thf tfxt of thf <dodf>JRbdioButtonMfnuItfm</dodf>
     * @pbrbm idon thf idon to displby on thf <dodf>JRbdioButtonMfnuItfm</dodf>
     */
    publid JRbdioButtonMfnuItfm(String tfxt, Idon idon) {
        this(tfxt, idon, fblsf);
    }

    /**
     * Crfbtfs b rbdio button mfnu itfm with thf spfdififd tfxt
     * bnd sflfdtion stbtf.
     *
     * @pbrbm tfxt thf tfxt of thf <dodf>ChfdkBoxMfnuItfm</dodf>
     * @pbrbm sflfdtfd thf sflfdtfd stbtf of thf <dodf>ChfdkBoxMfnuItfm</dodf>
     */
    publid JRbdioButtonMfnuItfm(String tfxt, boolfbn sflfdtfd) {
        this(tfxt);
        sftSflfdtfd(sflfdtfd);
    }

    /**
     * Crfbtfs b rbdio button mfnu itfm with thf spfdififd imbgf
     * bnd sflfdtion stbtf, but no tfxt.
     *
     * @pbrbm idon  thf imbgf thbt thf button should displby
     * @pbrbm sflfdtfd  if truf, thf button is initiblly sflfdtfd;
     *                  othfrwisf, thf button is initiblly unsflfdtfd
     */
    publid JRbdioButtonMfnuItfm(Idon idon, boolfbn sflfdtfd) {
        this(null, idon, sflfdtfd);
    }

    /**
     * Crfbtfs b rbdio button mfnu itfm thbt hbs thf spfdififd
     * tfxt, imbgf, bnd sflfdtion stbtf.  All othfr donstrudtors
     * dfffr to this onf.
     *
     * @pbrbm tfxt  thf string displbyfd on thf rbdio button
     * @pbrbm idon  thf imbgf thbt thf button should displby
     * @pbrbm sflfdtfd if {@dodf truf}, thf button is initiblly sflfdtfd,
     *                 othfrwisf, thf button is initiblly unsflfdtfd
     */
    publid JRbdioButtonMfnuItfm(String tfxt, Idon idon, boolfbn sflfdtfd) {
        supfr(tfxt, idon);
        sftModfl(nfw JTogglfButton.TogglfButtonModfl());
        sftSflfdtfd(sflfdtfd);
        sftFodusbblf(fblsf);
    }

    /**
     * Rfturns thf nbmf of thf L&bmp;F dlbss thbt rfndfrs this domponfnt.
     *
     * @rfturn thf string "RbdioButtonMfnuItfmUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     */
    publid String gftUIClbssID() {
        rfturn uiClbssID;
    }

    /**
     * Sff <dodf>rfbdObjfdt</dodf> bnd <dodf>writfObjfdt</dodf> in
     * <dodf>JComponfnt</dodf> for morf
     * informbtion bbout sfriblizbtion in Swing.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) throws IOExdfption {
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(this);
            JComponfnt.sftWritfObjCountfr(this, --dount);
            if (dount == 0 && ui != null) {
                ui.instbllUI(this);
            }
        }
    }


    /**
     * Rfturns b string rfprfsfntbtion of this
     * <dodf>JRbdioButtonMfnuItfm</dodf>.  This mfthod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of this
     *          <dodf>JRbdioButtonMfnuItfm</dodf>
     */
    protfdtfd String pbrbmString() {
        rfturn supfr.pbrbmString();
    }

    /**
     * Ovfrridfn to rfturn truf, JRbdioButtonMfnuItfm supports
     * thf sflfdtfd stbtf.
     */
    boolfbn shouldUpdbtfSflfdtfdStbtfFromAdtion() {
        rfturn truf;
    }

/////////////////
// Addfssibility support
////////////////

    /**
     * Gfts thf AddfssiblfContfxt bssodibtfd with this JRbdioButtonMfnuItfm.
     * For JRbdioButtonMfnuItfms, thf AddfssiblfContfxt tbkfs thf form of bn
     * AddfssiblfJRbdioButtonMfnuItfm.
     * A nfw AddfssiblfJRbdioButtonMfnuItfm instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn AddfssiblfJRbdioButtonMfnuItfm thbt sfrvfs bs thf
     *         AddfssiblfContfxt of this JRbdioButtonMfnuItfm
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJRbdioButtonMfnuItfm();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>JRbdioButtonMfnuItfm</dodf> dlbss.  It providfs bn
     * implfmfntbtion of thf Jbvb Addfssibility API bppropribtf to
     * <dodf>JRbdioButtonMfnuItfm</dodf> usfr-intfrfbdf flfmfnts.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    protfdtfd dlbss AddfssiblfJRbdioButtonMfnuItfm fxtfnds AddfssiblfJMfnuItfm {
        /**
         * Gft thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf
         * objfdt
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.RADIO_BUTTON;
        }
    } // innfr dlbss AddfssiblfJRbdioButtonMfnuItfm
}
