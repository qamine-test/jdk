/*
/*
/*
/*
/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 *
 *
 *
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 *
 *
 *
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 *
 *
 *
 *
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 *
 *
 *
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 */
 */
 */
 */
 */





pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;





import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;





import jbvb.bpplft.Applft;
import jbvb.bpplft.Applft;
import jbvb.bpplft.Applft;
import jbvb.bpplft.Applft;
import jbvb.bpplft.Applft;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.print.*;
import jbvb.bwt.print.*;
import jbvb.bwt.print.*;
import jbvb.bwt.print.*;
import jbvb.bwt.print.*;





import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;





import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.IOExdfption;
import jbvb.io.IOExdfption;
import jbvb.io.IOExdfption;
import jbvb.io.IOExdfption;





import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;





import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.tbblf.*;
import jbvbx.swing.tbblf.*;
import jbvbx.swing.tbblf.*;
import jbvbx.swing.tbblf.*;
import jbvbx.swing.tbblf.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.bordfr.*;





import jbvb.tfxt.NumbfrFormbt;
import jbvb.tfxt.NumbfrFormbt;
import jbvb.tfxt.NumbfrFormbt;
import jbvb.tfxt.NumbfrFormbt;
import jbvb.tfxt.NumbfrFormbt;
import jbvb.tfxt.DbtfFormbt;
import jbvb.tfxt.DbtfFormbt;
import jbvb.tfxt.DbtfFormbt;
import jbvb.tfxt.DbtfFormbt;
import jbvb.tfxt.DbtfFormbt;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.tfxt.MfssbgfFormbt;





import jbvbx.print.bttributf.*;
import jbvbx.print.bttributf.*;
import jbvbx.print.bttributf.*;
import jbvbx.print.bttributf.*;
import jbvbx.print.bttributf.*;
import jbvbx.print.PrintSfrvidf;
import jbvbx.print.PrintSfrvidf;
import jbvbx.print.PrintSfrvidf;
import jbvbx.print.PrintSfrvidf;
import jbvbx.print.PrintSfrvidf;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.rfflfdt.misd.RfflfdtUtil;





import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import sun.swing.PrintingStbtus;
import sun.swing.PrintingStbtus;
import sun.swing.PrintingStbtus;
import sun.swing.PrintingStbtus;
import sun.swing.PrintingStbtus;





/**
/**
/**
/**
/**
 * Tif <dodf>JTbblf</dodf> is usfd to displby bnd fdit rfgulbr two-dimfnsionbl tbblfs
 * Tif <dodf>JTbblf</dodf> is usfd to displby bnd fdit rfgulbr two-dimfnsionbl tbblfs
 * Tif <dodf>JTbblf</dodf> is usfd to displby bnd fdit rfgulbr two-dimfnsionbl tbblfs
 * Tif <dodf>JTbblf</dodf> is usfd to displby bnd fdit rfgulbr two-dimfnsionbl tbblfs
 * Tif <dodf>JTbblf</dodf> is usfd to displby bnd fdit rfgulbr two-dimfnsionbl tbblfs
 * of dflls.
 * of dflls.
 * of dflls.
 * of dflls.
 * of dflls.
 * Sff <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tbblf.itml">How to Usf Tbblfs</b>
 * Sff <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tbblf.itml">How to Usf Tbblfs</b>
 * Sff <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tbblf.itml">How to Usf Tbblfs</b>
 * Sff <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tbblf.itml">How to Usf Tbblfs</b>
 * Sff <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tbblf.itml">How to Usf Tbblfs</b>
 * in <fm>Tif Jbvb Tutoribl</fm>
 * in <fm>Tif Jbvb Tutoribl</fm>
 * in <fm>Tif Jbvb Tutoribl</fm>
 * in <fm>Tif Jbvb Tutoribl</fm>
 * in <fm>Tif Jbvb Tutoribl</fm>
 * for tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using <dodf>JTbblf</dodf>.
 * for tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using <dodf>JTbblf</dodf>.
 * for tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using <dodf>JTbblf</dodf>.
 * for tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using <dodf>JTbblf</dodf>.
 * for tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using <dodf>JTbblf</dodf>.
 *
 *
 *
 *
 *
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Tif <dodf>JTbblf</dodf> ibs mbny
 * Tif <dodf>JTbblf</dodf> ibs mbny
 * Tif <dodf>JTbblf</dodf> ibs mbny
 * Tif <dodf>JTbblf</dodf> ibs mbny
 * Tif <dodf>JTbblf</dodf> ibs mbny
 * fbdilitifs tibt mbkf it possiblf to dustomizf its rfndfring bnd fditing
 * fbdilitifs tibt mbkf it possiblf to dustomizf its rfndfring bnd fditing
 * fbdilitifs tibt mbkf it possiblf to dustomizf its rfndfring bnd fditing
 * fbdilitifs tibt mbkf it possiblf to dustomizf its rfndfring bnd fditing
 * fbdilitifs tibt mbkf it possiblf to dustomizf its rfndfring bnd fditing
 * but providfs dffbults for tifsf ffbturfs so tibt simplf tbblfs dbn bf
 * but providfs dffbults for tifsf ffbturfs so tibt simplf tbblfs dbn bf
 * but providfs dffbults for tifsf ffbturfs so tibt simplf tbblfs dbn bf
 * but providfs dffbults for tifsf ffbturfs so tibt simplf tbblfs dbn bf
 * but providfs dffbults for tifsf ffbturfs so tibt simplf tbblfs dbn bf
 * sft up fbsily.  For fxbmplf, to sft up b tbblf witi 10 rows bnd 10
 * sft up fbsily.  For fxbmplf, to sft up b tbblf witi 10 rows bnd 10
 * sft up fbsily.  For fxbmplf, to sft up b tbblf witi 10 rows bnd 10
 * sft up fbsily.  For fxbmplf, to sft up b tbblf witi 10 rows bnd 10
 * sft up fbsily.  For fxbmplf, to sft up b tbblf witi 10 rows bnd 10
 * dolumns of numbfrs:
 * dolumns of numbfrs:
 * dolumns of numbfrs:
 * dolumns of numbfrs:
 * dolumns of numbfrs:
 *
 *
 *
 *
 *
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 *      TbblfModfl dbtbModfl = nfw AbstrbdtTbblfModfl() {
 *      TbblfModfl dbtbModfl = nfw AbstrbdtTbblfModfl() {
 *      TbblfModfl dbtbModfl = nfw AbstrbdtTbblfModfl() {
 *      TbblfModfl dbtbModfl = nfw AbstrbdtTbblfModfl() {
 *      TbblfModfl dbtbModfl = nfw AbstrbdtTbblfModfl() {
 *          publid int gftColumnCount() { rfturn 10; }
 *          publid int gftColumnCount() { rfturn 10; }
 *          publid int gftColumnCount() { rfturn 10; }
 *          publid int gftColumnCount() { rfturn 10; }
 *          publid int gftColumnCount() { rfturn 10; }
 *          publid int gftRowCount() { rfturn 10;}
 *          publid int gftRowCount() { rfturn 10;}
 *          publid int gftRowCount() { rfturn 10;}
 *          publid int gftRowCount() { rfturn 10;}
 *          publid int gftRowCount() { rfturn 10;}
 *          publid Objfdt gftVblufAt(int row, int dol) { rfturn nfw Intfgfr(row*dol); }
 *          publid Objfdt gftVblufAt(int row, int dol) { rfturn nfw Intfgfr(row*dol); }
 *          publid Objfdt gftVblufAt(int row, int dol) { rfturn nfw Intfgfr(row*dol); }
 *          publid Objfdt gftVblufAt(int row, int dol) { rfturn nfw Intfgfr(row*dol); }
 *          publid Objfdt gftVblufAt(int row, int dol) { rfturn nfw Intfgfr(row*dol); }
 *      };
 *      };
 *      };
 *      };
 *      };
 *      JTbblf tbblf = nfw JTbblf(dbtbModfl);
 *      JTbblf tbblf = nfw JTbblf(dbtbModfl);
 *      JTbblf tbblf = nfw JTbblf(dbtbModfl);
 *      JTbblf tbblf = nfw JTbblf(dbtbModfl);
 *      JTbblf tbblf = nfw JTbblf(dbtbModfl);
 *      JSdrollPbnf sdrollpbnf = nfw JSdrollPbnf(tbblf);
 *      JSdrollPbnf sdrollpbnf = nfw JSdrollPbnf(tbblf);
 *      JSdrollPbnf sdrollpbnf = nfw JSdrollPbnf(tbblf);
 *      JSdrollPbnf sdrollpbnf = nfw JSdrollPbnf(tbblf);
 *      JSdrollPbnf sdrollpbnf = nfw JSdrollPbnf(tbblf);
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * {@dodf JTbblf}s brf typidblly plbdfd insidf of b {@dodf JSdrollPbnf}.  By
 * {@dodf JTbblf}s brf typidblly plbdfd insidf of b {@dodf JSdrollPbnf}.  By
 * {@dodf JTbblf}s brf typidblly plbdfd insidf of b {@dodf JSdrollPbnf}.  By
 * {@dodf JTbblf}s brf typidblly plbdfd insidf of b {@dodf JSdrollPbnf}.  By
 * {@dodf JTbblf}s brf typidblly plbdfd insidf of b {@dodf JSdrollPbnf}.  By
 * dffbult, b {@dodf JTbblf} will bdjust its widti sudi tibt
 * dffbult, b {@dodf JTbblf} will bdjust its widti sudi tibt
 * dffbult, b {@dodf JTbblf} will bdjust its widti sudi tibt
 * dffbult, b {@dodf JTbblf} will bdjust its widti sudi tibt
 * dffbult, b {@dodf JTbblf} will bdjust its widti sudi tibt
 * b iorizontbl sdrollbbr is unnfdfssbry.  To bllow for b iorizontbl sdrollbbr,
 * b iorizontbl sdrollbbr is unnfdfssbry.  To bllow for b iorizontbl sdrollbbr,
 * b iorizontbl sdrollbbr is unnfdfssbry.  To bllow for b iorizontbl sdrollbbr,
 * b iorizontbl sdrollbbr is unnfdfssbry.  To bllow for b iorizontbl sdrollbbr,
 * b iorizontbl sdrollbbr is unnfdfssbry.  To bllow for b iorizontbl sdrollbbr,
 * invokf {@link #sftAutoRfsizfModf} witi {@dodf AUTO_RESIZE_OFF}.
 * invokf {@link #sftAutoRfsizfModf} witi {@dodf AUTO_RESIZE_OFF}.
 * invokf {@link #sftAutoRfsizfModf} witi {@dodf AUTO_RESIZE_OFF}.
 * invokf {@link #sftAutoRfsizfModf} witi {@dodf AUTO_RESIZE_OFF}.
 * invokf {@link #sftAutoRfsizfModf} witi {@dodf AUTO_RESIZE_OFF}.
 * Notf tibt if you wisi to usf b <dodf>JTbblf</dodf> in b stbndblonf
 * Notf tibt if you wisi to usf b <dodf>JTbblf</dodf> in b stbndblonf
 * Notf tibt if you wisi to usf b <dodf>JTbblf</dodf> in b stbndblonf
 * Notf tibt if you wisi to usf b <dodf>JTbblf</dodf> in b stbndblonf
 * Notf tibt if you wisi to usf b <dodf>JTbblf</dodf> in b stbndblonf
 * vifw (outsidf of b <dodf>JSdrollPbnf</dodf>) bnd wbnt tif ifbdfr
 * vifw (outsidf of b <dodf>JSdrollPbnf</dodf>) bnd wbnt tif ifbdfr
 * vifw (outsidf of b <dodf>JSdrollPbnf</dodf>) bnd wbnt tif ifbdfr
 * vifw (outsidf of b <dodf>JSdrollPbnf</dodf>) bnd wbnt tif ifbdfr
 * vifw (outsidf of b <dodf>JSdrollPbnf</dodf>) bnd wbnt tif ifbdfr
 * displbyfd, you dbn gft it using {@link #gftTbblfHfbdfr} bnd
 * displbyfd, you dbn gft it using {@link #gftTbblfHfbdfr} bnd
 * displbyfd, you dbn gft it using {@link #gftTbblfHfbdfr} bnd
 * displbyfd, you dbn gft it using {@link #gftTbblfHfbdfr} bnd
 * displbyfd, you dbn gft it using {@link #gftTbblfHfbdfr} bnd
 * displby it sfpbrbtfly.
 * displby it sfpbrbtfly.
 * displby it sfpbrbtfly.
 * displby it sfpbrbtfly.
 * displby it sfpbrbtfly.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * To fnbblf sorting bnd filtfring of rows, usf b
 * To fnbblf sorting bnd filtfring of rows, usf b
 * To fnbblf sorting bnd filtfring of rows, usf b
 * To fnbblf sorting bnd filtfring of rows, usf b
 * To fnbblf sorting bnd filtfring of rows, usf b
 * {@dodf RowSortfr}.
 * {@dodf RowSortfr}.
 * {@dodf RowSortfr}.
 * {@dodf RowSortfr}.
 * {@dodf RowSortfr}.
 * You dbn sft up b row sortfr in fitifr of two wbys:
 * You dbn sft up b row sortfr in fitifr of two wbys:
 * You dbn sft up b row sortfr in fitifr of two wbys:
 * You dbn sft up b row sortfr in fitifr of two wbys:
 * You dbn sft up b row sortfr in fitifr of two wbys:
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 *   <li>Dirfdtly sft tif {@dodf RowSortfr}. For fxbmplf:
 *   <li>Dirfdtly sft tif {@dodf RowSortfr}. For fxbmplf:
 *   <li>Dirfdtly sft tif {@dodf RowSortfr}. For fxbmplf:
 *   <li>Dirfdtly sft tif {@dodf RowSortfr}. For fxbmplf:
 *   <li>Dirfdtly sft tif {@dodf RowSortfr}. For fxbmplf:
 *        {@dodf tbblf.sftRowSortfr(nfw TbblfRowSortfr(modfl))}.
 *        {@dodf tbblf.sftRowSortfr(nfw TbblfRowSortfr(modfl))}.
 *        {@dodf tbblf.sftRowSortfr(nfw TbblfRowSortfr(modfl))}.
 *        {@dodf tbblf.sftRowSortfr(nfw TbblfRowSortfr(modfl))}.
 *        {@dodf tbblf.sftRowSortfr(nfw TbblfRowSortfr(modfl))}.
 *   <li>Sft tif {@dodf butoCrfbtfRowSortfr}
 *   <li>Sft tif {@dodf butoCrfbtfRowSortfr}
 *   <li>Sft tif {@dodf butoCrfbtfRowSortfr}
 *   <li>Sft tif {@dodf butoCrfbtfRowSortfr}
 *   <li>Sft tif {@dodf butoCrfbtfRowSortfr}
 *       propfrty to {@dodf truf}, so tibt tif {@dodf JTbblf}
 *       propfrty to {@dodf truf}, so tibt tif {@dodf JTbblf}
 *       propfrty to {@dodf truf}, so tibt tif {@dodf JTbblf}
 *       propfrty to {@dodf truf}, so tibt tif {@dodf JTbblf}
 *       propfrty to {@dodf truf}, so tibt tif {@dodf JTbblf}
 *       drfbtfs b {@dodf RowSortfr} for
 *       drfbtfs b {@dodf RowSortfr} for
 *       drfbtfs b {@dodf RowSortfr} for
 *       drfbtfs b {@dodf RowSortfr} for
 *       drfbtfs b {@dodf RowSortfr} for
 *       you. For fxbmplf: {@dodf sftAutoCrfbtfRowSortfr(truf)}.
 *       you. For fxbmplf: {@dodf sftAutoCrfbtfRowSortfr(truf)}.
 *       you. For fxbmplf: {@dodf sftAutoCrfbtfRowSortfr(truf)}.
 *       you. For fxbmplf: {@dodf sftAutoCrfbtfRowSortfr(truf)}.
 *       you. For fxbmplf: {@dodf sftAutoCrfbtfRowSortfr(truf)}.
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Wifn dfsigning bpplidbtions tibt usf tif <dodf>JTbblf</dodf> it is worti pbying
 * Wifn dfsigning bpplidbtions tibt usf tif <dodf>JTbblf</dodf> it is worti pbying
 * Wifn dfsigning bpplidbtions tibt usf tif <dodf>JTbblf</dodf> it is worti pbying
 * Wifn dfsigning bpplidbtions tibt usf tif <dodf>JTbblf</dodf> it is worti pbying
 * Wifn dfsigning bpplidbtions tibt usf tif <dodf>JTbblf</dodf> it is worti pbying
 * dlosf bttfntion to tif dbtb strudturfs tibt will rfprfsfnt tif tbblf's dbtb.
 * dlosf bttfntion to tif dbtb strudturfs tibt will rfprfsfnt tif tbblf's dbtb.
 * dlosf bttfntion to tif dbtb strudturfs tibt will rfprfsfnt tif tbblf's dbtb.
 * dlosf bttfntion to tif dbtb strudturfs tibt will rfprfsfnt tif tbblf's dbtb.
 * dlosf bttfntion to tif dbtb strudturfs tibt will rfprfsfnt tif tbblf's dbtb.
 * Tif <dodf>DffbultTbblfModfl</dodf> is b modfl implfmfntbtion tibt
 * Tif <dodf>DffbultTbblfModfl</dodf> is b modfl implfmfntbtion tibt
 * Tif <dodf>DffbultTbblfModfl</dodf> is b modfl implfmfntbtion tibt
 * Tif <dodf>DffbultTbblfModfl</dodf> is b modfl implfmfntbtion tibt
 * Tif <dodf>DffbultTbblfModfl</dodf> is b modfl implfmfntbtion tibt
 * usfs b <dodf>Vfdtor</dodf> of <dodf>Vfdtor</dodf>s of <dodf>Objfdt</dodf>s to
 * usfs b <dodf>Vfdtor</dodf> of <dodf>Vfdtor</dodf>s of <dodf>Objfdt</dodf>s to
 * usfs b <dodf>Vfdtor</dodf> of <dodf>Vfdtor</dodf>s of <dodf>Objfdt</dodf>s to
 * usfs b <dodf>Vfdtor</dodf> of <dodf>Vfdtor</dodf>s of <dodf>Objfdt</dodf>s to
 * usfs b <dodf>Vfdtor</dodf> of <dodf>Vfdtor</dodf>s of <dodf>Objfdt</dodf>s to
 * storf tif dfll vblufs. As wfll bs dopying tif dbtb from bn
 * storf tif dfll vblufs. As wfll bs dopying tif dbtb from bn
 * storf tif dfll vblufs. As wfll bs dopying tif dbtb from bn
 * storf tif dfll vblufs. As wfll bs dopying tif dbtb from bn
 * storf tif dfll vblufs. As wfll bs dopying tif dbtb from bn
 * bpplidbtion into tif <dodf>DffbultTbblfModfl</dodf>,
 * bpplidbtion into tif <dodf>DffbultTbblfModfl</dodf>,
 * bpplidbtion into tif <dodf>DffbultTbblfModfl</dodf>,
 * bpplidbtion into tif <dodf>DffbultTbblfModfl</dodf>,
 * bpplidbtion into tif <dodf>DffbultTbblfModfl</dodf>,
 * it is blso possiblf to wrbp tif dbtb in tif mftiods of tif
 * it is blso possiblf to wrbp tif dbtb in tif mftiods of tif
 * it is blso possiblf to wrbp tif dbtb in tif mftiods of tif
 * it is blso possiblf to wrbp tif dbtb in tif mftiods of tif
 * it is blso possiblf to wrbp tif dbtb in tif mftiods of tif
 * <dodf>TbblfModfl</dodf> intfrfbdf so tibt tif dbtb dbn bf pbssfd to tif
 * <dodf>TbblfModfl</dodf> intfrfbdf so tibt tif dbtb dbn bf pbssfd to tif
 * <dodf>TbblfModfl</dodf> intfrfbdf so tibt tif dbtb dbn bf pbssfd to tif
 * <dodf>TbblfModfl</dodf> intfrfbdf so tibt tif dbtb dbn bf pbssfd to tif
 * <dodf>TbblfModfl</dodf> intfrfbdf so tibt tif dbtb dbn bf pbssfd to tif
 * <dodf>JTbblf</dodf> dirfdtly, bs in tif fxbmplf bbovf. Tiis oftfn rfsults
 * <dodf>JTbblf</dodf> dirfdtly, bs in tif fxbmplf bbovf. Tiis oftfn rfsults
 * <dodf>JTbblf</dodf> dirfdtly, bs in tif fxbmplf bbovf. Tiis oftfn rfsults
 * <dodf>JTbblf</dodf> dirfdtly, bs in tif fxbmplf bbovf. Tiis oftfn rfsults
 * <dodf>JTbblf</dodf> dirfdtly, bs in tif fxbmplf bbovf. Tiis oftfn rfsults
 * in morf fffidifnt bpplidbtions bfdbusf tif modfl is frff to dioosf tif
 * in morf fffidifnt bpplidbtions bfdbusf tif modfl is frff to dioosf tif
 * in morf fffidifnt bpplidbtions bfdbusf tif modfl is frff to dioosf tif
 * in morf fffidifnt bpplidbtions bfdbusf tif modfl is frff to dioosf tif
 * in morf fffidifnt bpplidbtions bfdbusf tif modfl is frff to dioosf tif
 * intfrnbl rfprfsfntbtion tibt bfst suits tif dbtb.
 * intfrnbl rfprfsfntbtion tibt bfst suits tif dbtb.
 * intfrnbl rfprfsfntbtion tibt bfst suits tif dbtb.
 * intfrnbl rfprfsfntbtion tibt bfst suits tif dbtb.
 * intfrnbl rfprfsfntbtion tibt bfst suits tif dbtb.
 * A good rulf of tiumb for dfdiding wiftifr to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * A good rulf of tiumb for dfdiding wiftifr to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * A good rulf of tiumb for dfdiding wiftifr to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * A good rulf of tiumb for dfdiding wiftifr to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * A good rulf of tiumb for dfdiding wiftifr to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * or tif <dodf>DffbultTbblfModfl</dodf> is to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * or tif <dodf>DffbultTbblfModfl</dodf> is to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * or tif <dodf>DffbultTbblfModfl</dodf> is to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * or tif <dodf>DffbultTbblfModfl</dodf> is to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * or tif <dodf>DffbultTbblfModfl</dodf> is to usf tif <dodf>AbstrbdtTbblfModfl</dodf>
 * bs tif bbsf dlbss for drfbting subdlbssfs bnd tif <dodf>DffbultTbblfModfl</dodf>
 * bs tif bbsf dlbss for drfbting subdlbssfs bnd tif <dodf>DffbultTbblfModfl</dodf>
 * bs tif bbsf dlbss for drfbting subdlbssfs bnd tif <dodf>DffbultTbblfModfl</dodf>
 * bs tif bbsf dlbss for drfbting subdlbssfs bnd tif <dodf>DffbultTbblfModfl</dodf>
 * bs tif bbsf dlbss for drfbting subdlbssfs bnd tif <dodf>DffbultTbblfModfl</dodf>
 * wifn subdlbssing is not rfquirfd.
 * wifn subdlbssing is not rfquirfd.
 * wifn subdlbssing is not rfquirfd.
 * wifn subdlbssing is not rfquirfd.
 * wifn subdlbssing is not rfquirfd.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Tif "TbblfExbmplf" dirfdtory in tif dfmo brfb of tif sourdf distribution
 * Tif "TbblfExbmplf" dirfdtory in tif dfmo brfb of tif sourdf distribution
 * Tif "TbblfExbmplf" dirfdtory in tif dfmo brfb of tif sourdf distribution
 * Tif "TbblfExbmplf" dirfdtory in tif dfmo brfb of tif sourdf distribution
 * Tif "TbblfExbmplf" dirfdtory in tif dfmo brfb of tif sourdf distribution
 * givfs b numbfr of domplftf fxbmplfs of <dodf>JTbblf</dodf> usbgf,
 * givfs b numbfr of domplftf fxbmplfs of <dodf>JTbblf</dodf> usbgf,
 * givfs b numbfr of domplftf fxbmplfs of <dodf>JTbblf</dodf> usbgf,
 * givfs b numbfr of domplftf fxbmplfs of <dodf>JTbblf</dodf> usbgf,
 * givfs b numbfr of domplftf fxbmplfs of <dodf>JTbblf</dodf> usbgf,
 * dovfring iow tif <dodf>JTbblf</dodf> dbn bf usfd to providf bn
 * dovfring iow tif <dodf>JTbblf</dodf> dbn bf usfd to providf bn
 * dovfring iow tif <dodf>JTbblf</dodf> dbn bf usfd to providf bn
 * dovfring iow tif <dodf>JTbblf</dodf> dbn bf usfd to providf bn
 * dovfring iow tif <dodf>JTbblf</dodf> dbn bf usfd to providf bn
 * fditbblf vifw of dbtb tbkfn from b dbtbbbsf bnd iow to modify
 * fditbblf vifw of dbtb tbkfn from b dbtbbbsf bnd iow to modify
 * fditbblf vifw of dbtb tbkfn from b dbtbbbsf bnd iow to modify
 * fditbblf vifw of dbtb tbkfn from b dbtbbbsf bnd iow to modify
 * fditbblf vifw of dbtb tbkfn from b dbtbbbsf bnd iow to modify
 * tif dolumns in tif displby to usf spfdiblizfd rfndfrfrs bnd fditors.
 * tif dolumns in tif displby to usf spfdiblizfd rfndfrfrs bnd fditors.
 * tif dolumns in tif displby to usf spfdiblizfd rfndfrfrs bnd fditors.
 * tif dolumns in tif displby to usf spfdiblizfd rfndfrfrs bnd fditors.
 * tif dolumns in tif displby to usf spfdiblizfd rfndfrfrs bnd fditors.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Tif <dodf>JTbblf</dodf> usfs intfgfrs fxdlusivfly to rfffr to boti tif rows bnd tif dolumns
 * Tif <dodf>JTbblf</dodf> usfs intfgfrs fxdlusivfly to rfffr to boti tif rows bnd tif dolumns
 * Tif <dodf>JTbblf</dodf> usfs intfgfrs fxdlusivfly to rfffr to boti tif rows bnd tif dolumns
 * Tif <dodf>JTbblf</dodf> usfs intfgfrs fxdlusivfly to rfffr to boti tif rows bnd tif dolumns
 * Tif <dodf>JTbblf</dodf> usfs intfgfrs fxdlusivfly to rfffr to boti tif rows bnd tif dolumns
 * of tif modfl tibt it displbys. Tif <dodf>JTbblf</dodf> simply tbkfs b tbbulbr rbngf of dflls
 * of tif modfl tibt it displbys. Tif <dodf>JTbblf</dodf> simply tbkfs b tbbulbr rbngf of dflls
 * of tif modfl tibt it displbys. Tif <dodf>JTbblf</dodf> simply tbkfs b tbbulbr rbngf of dflls
 * of tif modfl tibt it displbys. Tif <dodf>JTbblf</dodf> simply tbkfs b tbbulbr rbngf of dflls
 * of tif modfl tibt it displbys. Tif <dodf>JTbblf</dodf> simply tbkfs b tbbulbr rbngf of dflls
 * bnd usfs <dodf>gftVblufAt(int, int)</dodf> to rftrifvf tif
 * bnd usfs <dodf>gftVblufAt(int, int)</dodf> to rftrifvf tif
 * bnd usfs <dodf>gftVblufAt(int, int)</dodf> to rftrifvf tif
 * bnd usfs <dodf>gftVblufAt(int, int)</dodf> to rftrifvf tif
 * bnd usfs <dodf>gftVblufAt(int, int)</dodf> to rftrifvf tif
 * vblufs from tif modfl during pbinting.  It is importbnt to rfmfmbfr tibt
 * vblufs from tif modfl during pbinting.  It is importbnt to rfmfmbfr tibt
 * vblufs from tif modfl during pbinting.  It is importbnt to rfmfmbfr tibt
 * vblufs from tif modfl during pbinting.  It is importbnt to rfmfmbfr tibt
 * vblufs from tif modfl during pbinting.  It is importbnt to rfmfmbfr tibt
 * tif dolumn bnd row indfxfs rfturnfd by vbrious <dodf>JTbblf</dodf> mftiods
 * tif dolumn bnd row indfxfs rfturnfd by vbrious <dodf>JTbblf</dodf> mftiods
 * tif dolumn bnd row indfxfs rfturnfd by vbrious <dodf>JTbblf</dodf> mftiods
 * tif dolumn bnd row indfxfs rfturnfd by vbrious <dodf>JTbblf</dodf> mftiods
 * tif dolumn bnd row indfxfs rfturnfd by vbrious <dodf>JTbblf</dodf> mftiods
 * brf in tfrms of tif <dodf>JTbblf</dodf> (tif vifw) bnd brf not
 * brf in tfrms of tif <dodf>JTbblf</dodf> (tif vifw) bnd brf not
 * brf in tfrms of tif <dodf>JTbblf</dodf> (tif vifw) bnd brf not
 * brf in tfrms of tif <dodf>JTbblf</dodf> (tif vifw) bnd brf not
 * brf in tfrms of tif <dodf>JTbblf</dodf> (tif vifw) bnd brf not
 * nfdfssbrily tif sbmf indfxfs usfd by tif modfl.
 * nfdfssbrily tif sbmf indfxfs usfd by tif modfl.
 * nfdfssbrily tif sbmf indfxfs usfd by tif modfl.
 * nfdfssbrily tif sbmf indfxfs usfd by tif modfl.
 * nfdfssbrily tif sbmf indfxfs usfd by tif modfl.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * By dffbult, dolumns mby bf rfbrrbngfd in tif <dodf>JTbblf</dodf> so tibt tif
 * By dffbult, dolumns mby bf rfbrrbngfd in tif <dodf>JTbblf</dodf> so tibt tif
 * By dffbult, dolumns mby bf rfbrrbngfd in tif <dodf>JTbblf</dodf> so tibt tif
 * By dffbult, dolumns mby bf rfbrrbngfd in tif <dodf>JTbblf</dodf> so tibt tif
 * By dffbult, dolumns mby bf rfbrrbngfd in tif <dodf>JTbblf</dodf> so tibt tif
 * vifw's dolumns bppfbr in b difffrfnt ordfr to tif dolumns in tif modfl.
 * vifw's dolumns bppfbr in b difffrfnt ordfr to tif dolumns in tif modfl.
 * vifw's dolumns bppfbr in b difffrfnt ordfr to tif dolumns in tif modfl.
 * vifw's dolumns bppfbr in b difffrfnt ordfr to tif dolumns in tif modfl.
 * vifw's dolumns bppfbr in b difffrfnt ordfr to tif dolumns in tif modfl.
 * Tiis dofs not bfffdt tif implfmfntbtion of tif modfl bt bll: wifn tif
 * Tiis dofs not bfffdt tif implfmfntbtion of tif modfl bt bll: wifn tif
 * Tiis dofs not bfffdt tif implfmfntbtion of tif modfl bt bll: wifn tif
 * Tiis dofs not bfffdt tif implfmfntbtion of tif modfl bt bll: wifn tif
 * Tiis dofs not bfffdt tif implfmfntbtion of tif modfl bt bll: wifn tif
 * dolumns brf rfordfrfd, tif <dodf>JTbblf</dodf> mbintbins tif nfw ordfr of tif dolumns
 * dolumns brf rfordfrfd, tif <dodf>JTbblf</dodf> mbintbins tif nfw ordfr of tif dolumns
 * dolumns brf rfordfrfd, tif <dodf>JTbblf</dodf> mbintbins tif nfw ordfr of tif dolumns
 * dolumns brf rfordfrfd, tif <dodf>JTbblf</dodf> mbintbins tif nfw ordfr of tif dolumns
 * dolumns brf rfordfrfd, tif <dodf>JTbblf</dodf> mbintbins tif nfw ordfr of tif dolumns
 * intfrnblly bnd donvfrts its dolumn indidfs bfforf qufrying tif modfl.
 * intfrnblly bnd donvfrts its dolumn indidfs bfforf qufrying tif modfl.
 * intfrnblly bnd donvfrts its dolumn indidfs bfforf qufrying tif modfl.
 * intfrnblly bnd donvfrts its dolumn indidfs bfforf qufrying tif modfl.
 * intfrnblly bnd donvfrts its dolumn indidfs bfforf qufrying tif modfl.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * So, wifn writing b <dodf>TbblfModfl</dodf>, it is not nfdfssbry to listfn for dolumn
 * So, wifn writing b <dodf>TbblfModfl</dodf>, it is not nfdfssbry to listfn for dolumn
 * So, wifn writing b <dodf>TbblfModfl</dodf>, it is not nfdfssbry to listfn for dolumn
 * So, wifn writing b <dodf>TbblfModfl</dodf>, it is not nfdfssbry to listfn for dolumn
 * So, wifn writing b <dodf>TbblfModfl</dodf>, it is not nfdfssbry to listfn for dolumn
 * rfordfring fvfnts bs tif modfl will bf qufrifd in its own doordinbtf
 * rfordfring fvfnts bs tif modfl will bf qufrifd in its own doordinbtf
 * rfordfring fvfnts bs tif modfl will bf qufrifd in its own doordinbtf
 * rfordfring fvfnts bs tif modfl will bf qufrifd in its own doordinbtf
 * rfordfring fvfnts bs tif modfl will bf qufrifd in its own doordinbtf
 * systfm rfgbrdlfss of wibt is ibppfning in tif vifw.
 * systfm rfgbrdlfss of wibt is ibppfning in tif vifw.
 * systfm rfgbrdlfss of wibt is ibppfning in tif vifw.
 * systfm rfgbrdlfss of wibt is ibppfning in tif vifw.
 * systfm rfgbrdlfss of wibt is ibppfning in tif vifw.
 * In tif fxbmplfs brfb tifrf is b dfmonstrbtion of b sorting blgoritim mbking
 * In tif fxbmplfs brfb tifrf is b dfmonstrbtion of b sorting blgoritim mbking
 * In tif fxbmplfs brfb tifrf is b dfmonstrbtion of b sorting blgoritim mbking
 * In tif fxbmplfs brfb tifrf is b dfmonstrbtion of b sorting blgoritim mbking
 * In tif fxbmplfs brfb tifrf is b dfmonstrbtion of b sorting blgoritim mbking
 * usf of fxbdtly tiis tfdiniquf to intfrposf yft bnotifr doordinbtf systfm
 * usf of fxbdtly tiis tfdiniquf to intfrposf yft bnotifr doordinbtf systfm
 * usf of fxbdtly tiis tfdiniquf to intfrposf yft bnotifr doordinbtf systfm
 * usf of fxbdtly tiis tfdiniquf to intfrposf yft bnotifr doordinbtf systfm
 * usf of fxbdtly tiis tfdiniquf to intfrposf yft bnotifr doordinbtf systfm
 * wifrf tif ordfr of tif rows is dibngfd, rbtifr tibn tif ordfr of tif dolumns.
 * wifrf tif ordfr of tif rows is dibngfd, rbtifr tibn tif ordfr of tif dolumns.
 * wifrf tif ordfr of tif rows is dibngfd, rbtifr tibn tif ordfr of tif dolumns.
 * wifrf tif ordfr of tif rows is dibngfd, rbtifr tibn tif ordfr of tif dolumns.
 * wifrf tif ordfr of tif rows is dibngfd, rbtifr tibn tif ordfr of tif dolumns.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Similbrly wifn using tif sorting bnd filtfring fundtionblity
 * Similbrly wifn using tif sorting bnd filtfring fundtionblity
 * Similbrly wifn using tif sorting bnd filtfring fundtionblity
 * Similbrly wifn using tif sorting bnd filtfring fundtionblity
 * Similbrly wifn using tif sorting bnd filtfring fundtionblity
 * providfd by <dodf>RowSortfr</dodf> tif undfrlying
 * providfd by <dodf>RowSortfr</dodf> tif undfrlying
 * providfd by <dodf>RowSortfr</dodf> tif undfrlying
 * providfd by <dodf>RowSortfr</dodf> tif undfrlying
 * providfd by <dodf>RowSortfr</dodf> tif undfrlying
 * <dodf>TbblfModfl</dodf> dofs not nffd to know iow to do sorting,
 * <dodf>TbblfModfl</dodf> dofs not nffd to know iow to do sorting,
 * <dodf>TbblfModfl</dodf> dofs not nffd to know iow to do sorting,
 * <dodf>TbblfModfl</dodf> dofs not nffd to know iow to do sorting,
 * <dodf>TbblfModfl</dodf> dofs not nffd to know iow to do sorting,
 * rbtifr <dodf>RowSortfr</dodf> will ibndlf it.  Coordinbtf
 * rbtifr <dodf>RowSortfr</dodf> will ibndlf it.  Coordinbtf
 * rbtifr <dodf>RowSortfr</dodf> will ibndlf it.  Coordinbtf
 * rbtifr <dodf>RowSortfr</dodf> will ibndlf it.  Coordinbtf
 * rbtifr <dodf>RowSortfr</dodf> will ibndlf it.  Coordinbtf
 * donvfrsions will bf nfdfssbry wifn using tif row bbsfd mftiods of
 * donvfrsions will bf nfdfssbry wifn using tif row bbsfd mftiods of
 * donvfrsions will bf nfdfssbry wifn using tif row bbsfd mftiods of
 * donvfrsions will bf nfdfssbry wifn using tif row bbsfd mftiods of
 * donvfrsions will bf nfdfssbry wifn using tif row bbsfd mftiods of
 * <dodf>JTbblf</dodf> witi tif undfrlying <dodf>TbblfModfl</dodf>.
 * <dodf>JTbblf</dodf> witi tif undfrlying <dodf>TbblfModfl</dodf>.
 * <dodf>JTbblf</dodf> witi tif undfrlying <dodf>TbblfModfl</dodf>.
 * <dodf>JTbblf</dodf> witi tif undfrlying <dodf>TbblfModfl</dodf>.
 * <dodf>JTbblf</dodf> witi tif undfrlying <dodf>TbblfModfl</dodf>.
 * All of <dodf>JTbblf</dodf>s row bbsfd mftiods brf in tfrms of tif
 * All of <dodf>JTbblf</dodf>s row bbsfd mftiods brf in tfrms of tif
 * All of <dodf>JTbblf</dodf>s row bbsfd mftiods brf in tfrms of tif
 * All of <dodf>JTbblf</dodf>s row bbsfd mftiods brf in tfrms of tif
 * All of <dodf>JTbblf</dodf>s row bbsfd mftiods brf in tfrms of tif
 * <dodf>RowSortfr</dodf>, wiidi is not nfdfssbrily tif sbmf bs tibt
 * <dodf>RowSortfr</dodf>, wiidi is not nfdfssbrily tif sbmf bs tibt
 * <dodf>RowSortfr</dodf>, wiidi is not nfdfssbrily tif sbmf bs tibt
 * <dodf>RowSortfr</dodf>, wiidi is not nfdfssbrily tif sbmf bs tibt
 * <dodf>RowSortfr</dodf>, wiidi is not nfdfssbrily tif sbmf bs tibt
 * of tif undfrlying <dodf>TbblfModfl</dodf>.  For fxbmplf, tif
 * of tif undfrlying <dodf>TbblfModfl</dodf>.  For fxbmplf, tif
 * of tif undfrlying <dodf>TbblfModfl</dodf>.  For fxbmplf, tif
 * of tif undfrlying <dodf>TbblfModfl</dodf>.  For fxbmplf, tif
 * of tif undfrlying <dodf>TbblfModfl</dodf>.  For fxbmplf, tif
 * sflfdtion is blwbys in tfrms of <dodf>JTbblf</dodf> so tibt wifn
 * sflfdtion is blwbys in tfrms of <dodf>JTbblf</dodf> so tibt wifn
 * sflfdtion is blwbys in tfrms of <dodf>JTbblf</dodf> so tibt wifn
 * sflfdtion is blwbys in tfrms of <dodf>JTbblf</dodf> so tibt wifn
 * sflfdtion is blwbys in tfrms of <dodf>JTbblf</dodf> so tibt wifn
 * using <dodf>RowSortfr</dodf> you will nffd to donvfrt using
 * using <dodf>RowSortfr</dodf> you will nffd to donvfrt using
 * using <dodf>RowSortfr</dodf> you will nffd to donvfrt using
 * using <dodf>RowSortfr</dodf> you will nffd to donvfrt using
 * using <dodf>RowSortfr</dodf> you will nffd to donvfrt using
 * <dodf>donvfrtRowIndfxToVifw</dodf> or
 * <dodf>donvfrtRowIndfxToVifw</dodf> or
 * <dodf>donvfrtRowIndfxToVifw</dodf> or
 * <dodf>donvfrtRowIndfxToVifw</dodf> or
 * <dodf>donvfrtRowIndfxToVifw</dodf> or
 * <dodf>donvfrtRowIndfxToModfl</dodf>.  Tif following siows iow to
 * <dodf>donvfrtRowIndfxToModfl</dodf>.  Tif following siows iow to
 * <dodf>donvfrtRowIndfxToModfl</dodf>.  Tif following siows iow to
 * <dodf>donvfrtRowIndfxToModfl</dodf>.  Tif following siows iow to
 * <dodf>donvfrtRowIndfxToModfl</dodf>.  Tif following siows iow to
 * donvfrt doordinbtfs from <dodf>JTbblf</dodf> to tibt of tif
 * donvfrt doordinbtfs from <dodf>JTbblf</dodf> to tibt of tif
 * donvfrt doordinbtfs from <dodf>JTbblf</dodf> to tibt of tif
 * donvfrt doordinbtfs from <dodf>JTbblf</dodf> to tibt of tif
 * donvfrt doordinbtfs from <dodf>JTbblf</dodf> to tibt of tif
 * undfrlying modfl:
 * undfrlying modfl:
 * undfrlying modfl:
 * undfrlying modfl:
 * undfrlying modfl:
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 *   int[] sflfdtion = tbblf.gftSflfdtfdRows();
 *   int[] sflfdtion = tbblf.gftSflfdtfdRows();
 *   int[] sflfdtion = tbblf.gftSflfdtfdRows();
 *   int[] sflfdtion = tbblf.gftSflfdtfdRows();
 *   int[] sflfdtion = tbblf.gftSflfdtfdRows();
 *   for (int i = 0; i &lt; sflfdtion.lfngti; i++) {
 *   for (int i = 0; i &lt; sflfdtion.lfngti; i++) {
 *   for (int i = 0; i &lt; sflfdtion.lfngti; i++) {
 *   for (int i = 0; i &lt; sflfdtion.lfngti; i++) {
 *   for (int i = 0; i &lt; sflfdtion.lfngti; i++) {
 *     sflfdtion[i] = tbblf.donvfrtRowIndfxToModfl(sflfdtion[i]);
 *     sflfdtion[i] = tbblf.donvfrtRowIndfxToModfl(sflfdtion[i]);
 *     sflfdtion[i] = tbblf.donvfrtRowIndfxToModfl(sflfdtion[i]);
 *     sflfdtion[i] = tbblf.donvfrtRowIndfxToModfl(sflfdtion[i]);
 *     sflfdtion[i] = tbblf.donvfrtRowIndfxToModfl(sflfdtion[i]);
 *   }
 *   }
 *   }
 *   }
 *   }
 *   // sflfdtion is now in tfrms of tif undfrlying TbblfModfl
 *   // sflfdtion is now in tfrms of tif undfrlying TbblfModfl
 *   // sflfdtion is now in tfrms of tif undfrlying TbblfModfl
 *   // sflfdtion is now in tfrms of tif undfrlying TbblfModfl
 *   // sflfdtion is now in tfrms of tif undfrlying TbblfModfl
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * By dffbult if sorting is fnbblfd <dodf>JTbblf</dodf> will pfrsist tif
 * By dffbult if sorting is fnbblfd <dodf>JTbblf</dodf> will pfrsist tif
 * By dffbult if sorting is fnbblfd <dodf>JTbblf</dodf> will pfrsist tif
 * By dffbult if sorting is fnbblfd <dodf>JTbblf</dodf> will pfrsist tif
 * By dffbult if sorting is fnbblfd <dodf>JTbblf</dodf> will pfrsist tif
 * sflfdtion bnd vbribblf row ifigits in tfrms of tif modfl on
 * sflfdtion bnd vbribblf row ifigits in tfrms of tif modfl on
 * sflfdtion bnd vbribblf row ifigits in tfrms of tif modfl on
 * sflfdtion bnd vbribblf row ifigits in tfrms of tif modfl on
 * sflfdtion bnd vbribblf row ifigits in tfrms of tif modfl on
 * sorting.  For fxbmplf if row 0, in tfrms of tif undfrlying modfl,
 * sorting.  For fxbmplf if row 0, in tfrms of tif undfrlying modfl,
 * sorting.  For fxbmplf if row 0, in tfrms of tif undfrlying modfl,
 * sorting.  For fxbmplf if row 0, in tfrms of tif undfrlying modfl,
 * sorting.  For fxbmplf if row 0, in tfrms of tif undfrlying modfl,
 * is durrfntly sflfdtfd, bftfr tif sort row 0, in tfrms of tif
 * is durrfntly sflfdtfd, bftfr tif sort row 0, in tfrms of tif
 * is durrfntly sflfdtfd, bftfr tif sort row 0, in tfrms of tif
 * is durrfntly sflfdtfd, bftfr tif sort row 0, in tfrms of tif
 * is durrfntly sflfdtfd, bftfr tif sort row 0, in tfrms of tif
 * undfrlying modfl will bf sflfdtfd.  Visublly tif sflfdtion mby
 * undfrlying modfl will bf sflfdtfd.  Visublly tif sflfdtion mby
 * undfrlying modfl will bf sflfdtfd.  Visublly tif sflfdtion mby
 * undfrlying modfl will bf sflfdtfd.  Visublly tif sflfdtion mby
 * undfrlying modfl will bf sflfdtfd.  Visublly tif sflfdtion mby
 * dibngf, but in tfrms of tif undfrlying modfl it will rfmbin tif
 * dibngf, but in tfrms of tif undfrlying modfl it will rfmbin tif
 * dibngf, but in tfrms of tif undfrlying modfl it will rfmbin tif
 * dibngf, but in tfrms of tif undfrlying modfl it will rfmbin tif
 * dibngf, but in tfrms of tif undfrlying modfl it will rfmbin tif
 * sbmf.  Tif onf fxdfption to tibt is if tif modfl indfx is no longfr
 * sbmf.  Tif onf fxdfption to tibt is if tif modfl indfx is no longfr
 * sbmf.  Tif onf fxdfption to tibt is if tif modfl indfx is no longfr
 * sbmf.  Tif onf fxdfption to tibt is if tif modfl indfx is no longfr
 * sbmf.  Tif onf fxdfption to tibt is if tif modfl indfx is no longfr
 * visiblf or wbs rfmovfd.  For fxbmplf, if row 0 in tfrms of modfl
 * visiblf or wbs rfmovfd.  For fxbmplf, if row 0 in tfrms of modfl
 * visiblf or wbs rfmovfd.  For fxbmplf, if row 0 in tfrms of modfl
 * visiblf or wbs rfmovfd.  For fxbmplf, if row 0 in tfrms of modfl
 * visiblf or wbs rfmovfd.  For fxbmplf, if row 0 in tfrms of modfl
 * wbs filtfrfd out tif sflfdtion will bf fmpty bftfr tif sort.
 * wbs filtfrfd out tif sflfdtion will bf fmpty bftfr tif sort.
 * wbs filtfrfd out tif sflfdtion will bf fmpty bftfr tif sort.
 * wbs filtfrfd out tif sflfdtion will bf fmpty bftfr tif sort.
 * wbs filtfrfd out tif sflfdtion will bf fmpty bftfr tif sort.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * J2SE 5 bdds mftiods to <dodf>JTbblf</dodf> to providf donvfnifnt bddfss to somf
 * J2SE 5 bdds mftiods to <dodf>JTbblf</dodf> to providf donvfnifnt bddfss to somf
 * J2SE 5 bdds mftiods to <dodf>JTbblf</dodf> to providf donvfnifnt bddfss to somf
 * J2SE 5 bdds mftiods to <dodf>JTbblf</dodf> to providf donvfnifnt bddfss to somf
 * J2SE 5 bdds mftiods to <dodf>JTbblf</dodf> to providf donvfnifnt bddfss to somf
 * dommon printing nffds. Simplf nfw {@link #print()} mftiods bllow for quidk
 * dommon printing nffds. Simplf nfw {@link #print()} mftiods bllow for quidk
 * dommon printing nffds. Simplf nfw {@link #print()} mftiods bllow for quidk
 * dommon printing nffds. Simplf nfw {@link #print()} mftiods bllow for quidk
 * dommon printing nffds. Simplf nfw {@link #print()} mftiods bllow for quidk
 * bnd fbsy bddition of printing support to your bpplidbtion. In bddition, b nfw
 * bnd fbsy bddition of printing support to your bpplidbtion. In bddition, b nfw
 * bnd fbsy bddition of printing support to your bpplidbtion. In bddition, b nfw
 * bnd fbsy bddition of printing support to your bpplidbtion. In bddition, b nfw
 * bnd fbsy bddition of printing support to your bpplidbtion. In bddition, b nfw
 * {@link #gftPrintbblf} mftiod is bvbilbblf for morf bdvbndfd printing nffds.
 * {@link #gftPrintbblf} mftiod is bvbilbblf for morf bdvbndfd printing nffds.
 * {@link #gftPrintbblf} mftiod is bvbilbblf for morf bdvbndfd printing nffds.
 * {@link #gftPrintbblf} mftiod is bvbilbblf for morf bdvbndfd printing nffds.
 * {@link #gftPrintbblf} mftiod is bvbilbblf for morf bdvbndfd printing nffds.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * As for bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf
 * As for bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf
 * As for bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf
 * As for bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf
 * As for bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf
 * {@link InputMbp} bnd {@link AdtionMbp} to bssodibtf bn
 * {@link InputMbp} bnd {@link AdtionMbp} to bssodibtf bn
 * {@link InputMbp} bnd {@link AdtionMbp} to bssodibtf bn
 * {@link InputMbp} bnd {@link AdtionMbp} to bssodibtf bn
 * {@link InputMbp} bnd {@link AdtionMbp} to bssodibtf bn
 * {@link Adtion} objfdt witi b {@link KfyStrokf} bnd fxfdutf tif
 * {@link Adtion} objfdt witi b {@link KfyStrokf} bnd fxfdutf tif
 * {@link Adtion} objfdt witi b {@link KfyStrokf} bnd fxfdutf tif
 * {@link Adtion} objfdt witi b {@link KfyStrokf} bnd fxfdutf tif
 * {@link Adtion} objfdt witi b {@link KfyStrokf} bnd fxfdutf tif
 * bdtion undfr spfdififd donditions.
 * bdtion undfr spfdififd donditions.
 * bdtion undfr spfdififd donditions.
 * bdtion undfr spfdififd donditions.
 * bdtion undfr spfdififd donditions.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 * dfsdription: A domponfnt wiidi displbys dbtb in b two dimfnsionbl grid.
 * dfsdription: A domponfnt wiidi displbys dbtb in b two dimfnsionbl grid.
 * dfsdription: A domponfnt wiidi displbys dbtb in b two dimfnsionbl grid.
 * dfsdription: A domponfnt wiidi displbys dbtb in b two dimfnsionbl grid.
 * dfsdription: A domponfnt wiidi displbys dbtb in b two dimfnsionbl grid.
 *
 *
 *
 *
 *
 * @butior Piilip Milnf
 * @butior Piilip Milnf
 * @butior Piilip Milnf
 * @butior Piilip Milnf
 * @butior Piilip Milnf
 * @butior Sibnnon Hidkfy (printing support)
 * @butior Sibnnon Hidkfy (printing support)
 * @butior Sibnnon Hidkfy (printing support)
 * @butior Sibnnon Hidkfy (printing support)
 * @butior Sibnnon Hidkfy (printing support)
 * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
 * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
 * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
 * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
 * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
 * @sff jbvbx.swing.tbblf.TbblfRowSortfr
 * @sff jbvbx.swing.tbblf.TbblfRowSortfr
 * @sff jbvbx.swing.tbblf.TbblfRowSortfr
 * @sff jbvbx.swing.tbblf.TbblfRowSortfr
 * @sff jbvbx.swing.tbblf.TbblfRowSortfr
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 */
 */
 */
 */
 */
/* Tif first vfrsions of tif JTbblf, dontbinfd in Swing-0.1 tirougi
/* Tif first vfrsions of tif JTbblf, dontbinfd in Swing-0.1 tirougi
/* Tif first vfrsions of tif JTbblf, dontbinfd in Swing-0.1 tirougi
/* Tif first vfrsions of tif JTbblf, dontbinfd in Swing-0.1 tirougi
/* Tif first vfrsions of tif JTbblf, dontbinfd in Swing-0.1 tirougi
 * Swing-0.4, wfrf writtfn by Albn Ciung.
 * Swing-0.4, wfrf writtfn by Albn Ciung.
 * Swing-0.4, wfrf writtfn by Albn Ciung.
 * Swing-0.4, wfrf writtfn by Albn Ciung.
 * Swing-0.4, wfrf writtfn by Albn Ciung.
 */
 */
 */
 */
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JTbblf fxtfnds JComponfnt implfmfnts TbblfModflListfnfr, Sdrollbblf,
publid dlbss JTbblf fxtfnds JComponfnt implfmfnts TbblfModflListfnfr, Sdrollbblf,
publid dlbss JTbblf fxtfnds JComponfnt implfmfnts TbblfModflListfnfr, Sdrollbblf,
publid dlbss JTbblf fxtfnds JComponfnt implfmfnts TbblfModflListfnfr, Sdrollbblf,
publid dlbss JTbblf fxtfnds JComponfnt implfmfnts TbblfModflListfnfr, Sdrollbblf,
    TbblfColumnModflListfnfr, ListSflfdtionListfnfr, CfllEditorListfnfr,
    TbblfColumnModflListfnfr, ListSflfdtionListfnfr, CfllEditorListfnfr,
    TbblfColumnModflListfnfr, ListSflfdtionListfnfr, CfllEditorListfnfr,
    TbblfColumnModflListfnfr, ListSflfdtionListfnfr, CfllEditorListfnfr,
    TbblfColumnModflListfnfr, ListSflfdtionListfnfr, CfllEditorListfnfr,
    Addfssiblf, RowSortfrListfnfr
    Addfssiblf, RowSortfrListfnfr
    Addfssiblf, RowSortfrListfnfr
    Addfssiblf, RowSortfrListfnfr
    Addfssiblf, RowSortfrListfnfr
{
{
{
{
{
//
//
//
//
//
// Stbtid Constbnts
// Stbtid Constbnts
// Stbtid Constbnts
// Stbtid Constbnts
// Stbtid Constbnts
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     */
     */
     */
     */
     */
    privbtf stbtid finbl String uiClbssID = "TbblfUI";
    privbtf stbtid finbl String uiClbssID = "TbblfUI";
    privbtf stbtid finbl String uiClbssID = "TbblfUI";
    privbtf stbtid finbl String uiClbssID = "TbblfUI";
    privbtf stbtid finbl String uiClbssID = "TbblfUI";





    /** Do not bdjust dolumn widtis butombtidblly; usf b iorizontbl sdrollbbr instfbd. */
    /** Do not bdjust dolumn widtis butombtidblly; usf b iorizontbl sdrollbbr instfbd. */
    /** Do not bdjust dolumn widtis butombtidblly; usf b iorizontbl sdrollbbr instfbd. */
    /** Do not bdjust dolumn widtis butombtidblly; usf b iorizontbl sdrollbbr instfbd. */
    /** Do not bdjust dolumn widtis butombtidblly; usf b iorizontbl sdrollbbr instfbd. */
    publid stbtid finbl int     AUTO_RESIZE_OFF = 0;
    publid stbtid finbl int     AUTO_RESIZE_OFF = 0;
    publid stbtid finbl int     AUTO_RESIZE_OFF = 0;
    publid stbtid finbl int     AUTO_RESIZE_OFF = 0;
    publid stbtid finbl int     AUTO_RESIZE_OFF = 0;





    /** Wifn b dolumn is bdjustfd in tif UI, bdjust tif nfxt dolumn tif oppositf wby. */
    /** Wifn b dolumn is bdjustfd in tif UI, bdjust tif nfxt dolumn tif oppositf wby. */
    /** Wifn b dolumn is bdjustfd in tif UI, bdjust tif nfxt dolumn tif oppositf wby. */
    /** Wifn b dolumn is bdjustfd in tif UI, bdjust tif nfxt dolumn tif oppositf wby. */
    /** Wifn b dolumn is bdjustfd in tif UI, bdjust tif nfxt dolumn tif oppositf wby. */
    publid stbtid finbl int     AUTO_RESIZE_NEXT_COLUMN = 1;
    publid stbtid finbl int     AUTO_RESIZE_NEXT_COLUMN = 1;
    publid stbtid finbl int     AUTO_RESIZE_NEXT_COLUMN = 1;
    publid stbtid finbl int     AUTO_RESIZE_NEXT_COLUMN = 1;
    publid stbtid finbl int     AUTO_RESIZE_NEXT_COLUMN = 1;





    /** During UI bdjustmfnt, dibngf subsfqufnt dolumns to prfsfrvf tif totbl widti;
    /** During UI bdjustmfnt, dibngf subsfqufnt dolumns to prfsfrvf tif totbl widti;
    /** During UI bdjustmfnt, dibngf subsfqufnt dolumns to prfsfrvf tif totbl widti;
    /** During UI bdjustmfnt, dibngf subsfqufnt dolumns to prfsfrvf tif totbl widti;
    /** During UI bdjustmfnt, dibngf subsfqufnt dolumns to prfsfrvf tif totbl widti;
      * tiis is tif dffbult bfibvior. */
      * tiis is tif dffbult bfibvior. */
      * tiis is tif dffbult bfibvior. */
      * tiis is tif dffbult bfibvior. */
      * tiis is tif dffbult bfibvior. */
    publid stbtid finbl int     AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;
    publid stbtid finbl int     AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;
    publid stbtid finbl int     AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;
    publid stbtid finbl int     AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;
    publid stbtid finbl int     AUTO_RESIZE_SUBSEQUENT_COLUMNS = 2;





    /** During bll rfsizf opfrbtions, bpply bdjustmfnts to tif lbst dolumn only. */
    /** During bll rfsizf opfrbtions, bpply bdjustmfnts to tif lbst dolumn only. */
    /** During bll rfsizf opfrbtions, bpply bdjustmfnts to tif lbst dolumn only. */
    /** During bll rfsizf opfrbtions, bpply bdjustmfnts to tif lbst dolumn only. */
    /** During bll rfsizf opfrbtions, bpply bdjustmfnts to tif lbst dolumn only. */
    publid stbtid finbl int     AUTO_RESIZE_LAST_COLUMN = 3;
    publid stbtid finbl int     AUTO_RESIZE_LAST_COLUMN = 3;
    publid stbtid finbl int     AUTO_RESIZE_LAST_COLUMN = 3;
    publid stbtid finbl int     AUTO_RESIZE_LAST_COLUMN = 3;
    publid stbtid finbl int     AUTO_RESIZE_LAST_COLUMN = 3;





    /** During bll rfsizf opfrbtions, proportionbtfly rfsizf bll dolumns. */
    /** During bll rfsizf opfrbtions, proportionbtfly rfsizf bll dolumns. */
    /** During bll rfsizf opfrbtions, proportionbtfly rfsizf bll dolumns. */
    /** During bll rfsizf opfrbtions, proportionbtfly rfsizf bll dolumns. */
    /** During bll rfsizf opfrbtions, proportionbtfly rfsizf bll dolumns. */
    publid stbtid finbl int     AUTO_RESIZE_ALL_COLUMNS = 4;
    publid stbtid finbl int     AUTO_RESIZE_ALL_COLUMNS = 4;
    publid stbtid finbl int     AUTO_RESIZE_ALL_COLUMNS = 4;
    publid stbtid finbl int     AUTO_RESIZE_ALL_COLUMNS = 4;
    publid stbtid finbl int     AUTO_RESIZE_ALL_COLUMNS = 4;










    /**
    /**
    /**
    /**
    /**
     * Printing modfs, usfd in printing <dodf>JTbblf</dodf>s.
     * Printing modfs, usfd in printing <dodf>JTbblf</dodf>s.
     * Printing modfs, usfd in printing <dodf>JTbblf</dodf>s.
     * Printing modfs, usfd in printing <dodf>JTbblf</dodf>s.
     * Printing modfs, usfd in printing <dodf>JTbblf</dodf>s.
     *
     *
     *
     *
     *
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid fnum PrintModf {
    publid fnum PrintModf {
    publid fnum PrintModf {
    publid fnum PrintModf {
    publid fnum PrintModf {





        /**
        /**
        /**
        /**
        /**
         * Printing modf tibt prints tif tbblf bt its durrfnt sizf,
         * Printing modf tibt prints tif tbblf bt its durrfnt sizf,
         * Printing modf tibt prints tif tbblf bt its durrfnt sizf,
         * Printing modf tibt prints tif tbblf bt its durrfnt sizf,
         * Printing modf tibt prints tif tbblf bt its durrfnt sizf,
         * sprfbding boti dolumns bnd rows bdross multiplf pbgfs if nfdfssbry.
         * sprfbding boti dolumns bnd rows bdross multiplf pbgfs if nfdfssbry.
         * sprfbding boti dolumns bnd rows bdross multiplf pbgfs if nfdfssbry.
         * sprfbding boti dolumns bnd rows bdross multiplf pbgfs if nfdfssbry.
         * sprfbding boti dolumns bnd rows bdross multiplf pbgfs if nfdfssbry.
         */
         */
         */
         */
         */
        NORMAL,
        NORMAL,
        NORMAL,
        NORMAL,
        NORMAL,





        /**
        /**
        /**
        /**
        /**
         * Printing modf tibt sdblfs tif output smbllfr, if nfdfssbry,
         * Printing modf tibt sdblfs tif output smbllfr, if nfdfssbry,
         * Printing modf tibt sdblfs tif output smbllfr, if nfdfssbry,
         * Printing modf tibt sdblfs tif output smbllfr, if nfdfssbry,
         * Printing modf tibt sdblfs tif output smbllfr, if nfdfssbry,
         * to fit tif tbblf's fntirf widti (bnd tifrfby bll dolumns) on fbdi pbgf;
         * to fit tif tbblf's fntirf widti (bnd tifrfby bll dolumns) on fbdi pbgf;
         * to fit tif tbblf's fntirf widti (bnd tifrfby bll dolumns) on fbdi pbgf;
         * to fit tif tbblf's fntirf widti (bnd tifrfby bll dolumns) on fbdi pbgf;
         * to fit tif tbblf's fntirf widti (bnd tifrfby bll dolumns) on fbdi pbgf;
         * Rows brf sprfbd bdross multiplf pbgfs bs nfdfssbry.
         * Rows brf sprfbd bdross multiplf pbgfs bs nfdfssbry.
         * Rows brf sprfbd bdross multiplf pbgfs bs nfdfssbry.
         * Rows brf sprfbd bdross multiplf pbgfs bs nfdfssbry.
         * Rows brf sprfbd bdross multiplf pbgfs bs nfdfssbry.
         */
         */
         */
         */
         */
        FIT_WIDTH
        FIT_WIDTH
        FIT_WIDTH
        FIT_WIDTH
        FIT_WIDTH
    }
    }
    }
    }
    }










//
//
//
//
//
// Instbndf Vbribblfs
// Instbndf Vbribblfs
// Instbndf Vbribblfs
// Instbndf Vbribblfs
// Instbndf Vbribblfs
//
//
//
//
//





    /** Tif <dodf>TbblfModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfModfl</dodf> of tif tbblf. */
    protfdtfd TbblfModfl        dbtbModfl;
    protfdtfd TbblfModfl        dbtbModfl;
    protfdtfd TbblfModfl        dbtbModfl;
    protfdtfd TbblfModfl        dbtbModfl;
    protfdtfd TbblfModfl        dbtbModfl;





    /** Tif <dodf>TbblfColumnModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfColumnModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfColumnModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfColumnModfl</dodf> of tif tbblf. */
    /** Tif <dodf>TbblfColumnModfl</dodf> of tif tbblf. */
    protfdtfd TbblfColumnModfl  dolumnModfl;
    protfdtfd TbblfColumnModfl  dolumnModfl;
    protfdtfd TbblfColumnModfl  dolumnModfl;
    protfdtfd TbblfColumnModfl  dolumnModfl;
    protfdtfd TbblfColumnModfl  dolumnModfl;





    /** Tif <dodf>ListSflfdtionModfl</dodf> of tif tbblf, usfd to kffp trbdk of row sflfdtions. */
    /** Tif <dodf>ListSflfdtionModfl</dodf> of tif tbblf, usfd to kffp trbdk of row sflfdtions. */
    /** Tif <dodf>ListSflfdtionModfl</dodf> of tif tbblf, usfd to kffp trbdk of row sflfdtions. */
    /** Tif <dodf>ListSflfdtionModfl</dodf> of tif tbblf, usfd to kffp trbdk of row sflfdtions. */
    /** Tif <dodf>ListSflfdtionModfl</dodf> of tif tbblf, usfd to kffp trbdk of row sflfdtions. */
    protfdtfd ListSflfdtionModfl sflfdtionModfl;
    protfdtfd ListSflfdtionModfl sflfdtionModfl;
    protfdtfd ListSflfdtionModfl sflfdtionModfl;
    protfdtfd ListSflfdtionModfl sflfdtionModfl;
    protfdtfd ListSflfdtionModfl sflfdtionModfl;





    /** Tif <dodf>TbblfHfbdfr</dodf> working witi tif tbblf. */
    /** Tif <dodf>TbblfHfbdfr</dodf> working witi tif tbblf. */
    /** Tif <dodf>TbblfHfbdfr</dodf> working witi tif tbblf. */
    /** Tif <dodf>TbblfHfbdfr</dodf> working witi tif tbblf. */
    /** Tif <dodf>TbblfHfbdfr</dodf> working witi tif tbblf. */
    protfdtfd JTbblfHfbdfr      tbblfHfbdfr;
    protfdtfd JTbblfHfbdfr      tbblfHfbdfr;
    protfdtfd JTbblfHfbdfr      tbblfHfbdfr;
    protfdtfd JTbblfHfbdfr      tbblfHfbdfr;
    protfdtfd JTbblfHfbdfr      tbblfHfbdfr;





    /** Tif ifigit in pixfls of fbdi row in tif tbblf. */
    /** Tif ifigit in pixfls of fbdi row in tif tbblf. */
    /** Tif ifigit in pixfls of fbdi row in tif tbblf. */
    /** Tif ifigit in pixfls of fbdi row in tif tbblf. */
    /** Tif ifigit in pixfls of fbdi row in tif tbblf. */
    protfdtfd int               rowHfigit;
    protfdtfd int               rowHfigit;
    protfdtfd int               rowHfigit;
    protfdtfd int               rowHfigit;
    protfdtfd int               rowHfigit;





    /** Tif ifigit in pixfls of tif mbrgin bftwffn tif dflls in fbdi row. */
    /** Tif ifigit in pixfls of tif mbrgin bftwffn tif dflls in fbdi row. */
    /** Tif ifigit in pixfls of tif mbrgin bftwffn tif dflls in fbdi row. */
    /** Tif ifigit in pixfls of tif mbrgin bftwffn tif dflls in fbdi row. */
    /** Tif ifigit in pixfls of tif mbrgin bftwffn tif dflls in fbdi row. */
    protfdtfd int               rowMbrgin;
    protfdtfd int               rowMbrgin;
    protfdtfd int               rowMbrgin;
    protfdtfd int               rowMbrgin;
    protfdtfd int               rowMbrgin;





    /** Tif dolor of tif grid. */
    /** Tif dolor of tif grid. */
    /** Tif dolor of tif grid. */
    /** Tif dolor of tif grid. */
    /** Tif dolor of tif grid. */
    protfdtfd Color             gridColor;
    protfdtfd Color             gridColor;
    protfdtfd Color             gridColor;
    protfdtfd Color             gridColor;
    protfdtfd Color             gridColor;





    /** Tif tbblf drbws iorizontbl linfs bftwffn dflls if <dodf>siowHorizontblLinfs</dodf> is truf. */
    /** Tif tbblf drbws iorizontbl linfs bftwffn dflls if <dodf>siowHorizontblLinfs</dodf> is truf. */
    /** Tif tbblf drbws iorizontbl linfs bftwffn dflls if <dodf>siowHorizontblLinfs</dodf> is truf. */
    /** Tif tbblf drbws iorizontbl linfs bftwffn dflls if <dodf>siowHorizontblLinfs</dodf> is truf. */
    /** Tif tbblf drbws iorizontbl linfs bftwffn dflls if <dodf>siowHorizontblLinfs</dodf> is truf. */
    protfdtfd boolfbn           siowHorizontblLinfs;
    protfdtfd boolfbn           siowHorizontblLinfs;
    protfdtfd boolfbn           siowHorizontblLinfs;
    protfdtfd boolfbn           siowHorizontblLinfs;
    protfdtfd boolfbn           siowHorizontblLinfs;





    /** Tif tbblf drbws vfrtidbl linfs bftwffn dflls if <dodf>siowVfrtidblLinfs</dodf> is truf. */
    /** Tif tbblf drbws vfrtidbl linfs bftwffn dflls if <dodf>siowVfrtidblLinfs</dodf> is truf. */
    /** Tif tbblf drbws vfrtidbl linfs bftwffn dflls if <dodf>siowVfrtidblLinfs</dodf> is truf. */
    /** Tif tbblf drbws vfrtidbl linfs bftwffn dflls if <dodf>siowVfrtidblLinfs</dodf> is truf. */
    /** Tif tbblf drbws vfrtidbl linfs bftwffn dflls if <dodf>siowVfrtidblLinfs</dodf> is truf. */
    protfdtfd boolfbn           siowVfrtidblLinfs;
    protfdtfd boolfbn           siowVfrtidblLinfs;
    protfdtfd boolfbn           siowVfrtidblLinfs;
    protfdtfd boolfbn           siowVfrtidblLinfs;
    protfdtfd boolfbn           siowVfrtidblLinfs;





    /**
    /**
    /**
    /**
    /**
     *  Dftfrminfs if tif tbblf butombtidblly rfsizfs tif
     *  Dftfrminfs if tif tbblf butombtidblly rfsizfs tif
     *  Dftfrminfs if tif tbblf butombtidblly rfsizfs tif
     *  Dftfrminfs if tif tbblf butombtidblly rfsizfs tif
     *  Dftfrminfs if tif tbblf butombtidblly rfsizfs tif
     *  widti of tif tbblf's dolumns to tbkf up tif fntirf widti of tif
     *  widti of tif tbblf's dolumns to tbkf up tif fntirf widti of tif
     *  widti of tif tbblf's dolumns to tbkf up tif fntirf widti of tif
     *  widti of tif tbblf's dolumns to tbkf up tif fntirf widti of tif
     *  widti of tif tbblf's dolumns to tbkf up tif fntirf widti of tif
     *  tbblf, bnd iow it dofs tif rfsizing.
     *  tbblf, bnd iow it dofs tif rfsizing.
     *  tbblf, bnd iow it dofs tif rfsizing.
     *  tbblf, bnd iow it dofs tif rfsizing.
     *  tbblf, bnd iow it dofs tif rfsizing.
     */
     */
     */
     */
     */
    protfdtfd int               butoRfsizfModf;
    protfdtfd int               butoRfsizfModf;
    protfdtfd int               butoRfsizfModf;
    protfdtfd int               butoRfsizfModf;
    protfdtfd int               butoRfsizfModf;





    /**
    /**
    /**
    /**
    /**
     *  Tif tbblf will qufry tif <dodf>TbblfModfl</dodf> to build tif dffbult
     *  Tif tbblf will qufry tif <dodf>TbblfModfl</dodf> to build tif dffbult
     *  Tif tbblf will qufry tif <dodf>TbblfModfl</dodf> to build tif dffbult
     *  Tif tbblf will qufry tif <dodf>TbblfModfl</dodf> to build tif dffbult
     *  Tif tbblf will qufry tif <dodf>TbblfModfl</dodf> to build tif dffbult
     *  sft of dolumns if tiis is truf.
     *  sft of dolumns if tiis is truf.
     *  sft of dolumns if tiis is truf.
     *  sft of dolumns if tiis is truf.
     *  sft of dolumns if tiis is truf.
     */
     */
     */
     */
     */
    protfdtfd boolfbn           butoCrfbtfColumnsFromModfl;
    protfdtfd boolfbn           butoCrfbtfColumnsFromModfl;
    protfdtfd boolfbn           butoCrfbtfColumnsFromModfl;
    protfdtfd boolfbn           butoCrfbtfColumnsFromModfl;
    protfdtfd boolfbn           butoCrfbtfColumnsFromModfl;





    /** Usfd by tif <dodf>Sdrollbblf</dodf> intfrfbdf to dftfrminf tif initibl visiblf brfb. */
    /** Usfd by tif <dodf>Sdrollbblf</dodf> intfrfbdf to dftfrminf tif initibl visiblf brfb. */
    /** Usfd by tif <dodf>Sdrollbblf</dodf> intfrfbdf to dftfrminf tif initibl visiblf brfb. */
    /** Usfd by tif <dodf>Sdrollbblf</dodf> intfrfbdf to dftfrminf tif initibl visiblf brfb. */
    /** Usfd by tif <dodf>Sdrollbblf</dodf> intfrfbdf to dftfrminf tif initibl visiblf brfb. */
    protfdtfd Dimfnsion         prfffrrfdVifwportSizf;
    protfdtfd Dimfnsion         prfffrrfdVifwportSizf;
    protfdtfd Dimfnsion         prfffrrfdVifwportSizf;
    protfdtfd Dimfnsion         prfffrrfdVifwportSizf;
    protfdtfd Dimfnsion         prfffrrfdVifwportSizf;





    /** Truf if row sflfdtion is bllowfd in tiis tbblf. */
    /** Truf if row sflfdtion is bllowfd in tiis tbblf. */
    /** Truf if row sflfdtion is bllowfd in tiis tbblf. */
    /** Truf if row sflfdtion is bllowfd in tiis tbblf. */
    /** Truf if row sflfdtion is bllowfd in tiis tbblf. */
    protfdtfd boolfbn           rowSflfdtionAllowfd;
    protfdtfd boolfbn           rowSflfdtionAllowfd;
    protfdtfd boolfbn           rowSflfdtionAllowfd;
    protfdtfd boolfbn           rowSflfdtionAllowfd;
    protfdtfd boolfbn           rowSflfdtionAllowfd;





    /**
    /**
    /**
    /**
    /**
     * Obsolftf bs of Jbvb 2 plbtform v1.3.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.3.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.3.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.3.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.3.  Plfbsf usf tif
     * <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd tif
     * <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd tif
     * <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd tif
     * <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd tif
     * <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnModfl</dodf> instfbd. Or usf tif
     * <dodf>dolumnModfl</dodf> instfbd. Or usf tif
     * <dodf>dolumnModfl</dodf> instfbd. Or usf tif
     * <dodf>dolumnModfl</dodf> instfbd. Or usf tif
     * <dodf>dolumnModfl</dodf> instfbd. Or usf tif
     * mftiod <dodf>gftCfllSflfdtionEnbblfd</dodf>.
     * mftiod <dodf>gftCfllSflfdtionEnbblfd</dodf>.
     * mftiod <dodf>gftCfllSflfdtionEnbblfd</dodf>.
     * mftiod <dodf>gftCfllSflfdtionEnbblfd</dodf>.
     * mftiod <dodf>gftCfllSflfdtionEnbblfd</dodf>.
     */
     */
     */
     */
     */
    /*
    /*
    /*
    /*
    /*
     * If truf, boti b row sflfdtion bnd b dolumn sflfdtion
     * If truf, boti b row sflfdtion bnd b dolumn sflfdtion
     * If truf, boti b row sflfdtion bnd b dolumn sflfdtion
     * If truf, boti b row sflfdtion bnd b dolumn sflfdtion
     * If truf, boti b row sflfdtion bnd b dolumn sflfdtion
     * dbn bf non-fmpty bt tif sbmf timf, tif sflfdtfd dflls brf tif
     * dbn bf non-fmpty bt tif sbmf timf, tif sflfdtfd dflls brf tif
     * dbn bf non-fmpty bt tif sbmf timf, tif sflfdtfd dflls brf tif
     * dbn bf non-fmpty bt tif sbmf timf, tif sflfdtfd dflls brf tif
     * dbn bf non-fmpty bt tif sbmf timf, tif sflfdtfd dflls brf tif
     * tif dflls wiosf row bnd dolumn brf boti sflfdtfd.
     * tif dflls wiosf row bnd dolumn brf boti sflfdtfd.
     * tif dflls wiosf row bnd dolumn brf boti sflfdtfd.
     * tif dflls wiosf row bnd dolumn brf boti sflfdtfd.
     * tif dflls wiosf row bnd dolumn brf boti sflfdtfd.
     */
     */
     */
     */
     */
    protfdtfd boolfbn           dfllSflfdtionEnbblfd;
    protfdtfd boolfbn           dfllSflfdtionEnbblfd;
    protfdtfd boolfbn           dfllSflfdtionEnbblfd;
    protfdtfd boolfbn           dfllSflfdtionEnbblfd;
    protfdtfd boolfbn           dfllSflfdtionEnbblfd;





    /** If fditing, tif <dodf>Componfnt</dodf> tibt is ibndling tif fditing. */
    /** If fditing, tif <dodf>Componfnt</dodf> tibt is ibndling tif fditing. */
    /** If fditing, tif <dodf>Componfnt</dodf> tibt is ibndling tif fditing. */
    /** If fditing, tif <dodf>Componfnt</dodf> tibt is ibndling tif fditing. */
    /** If fditing, tif <dodf>Componfnt</dodf> tibt is ibndling tif fditing. */
    trbnsifnt protfdtfd Componfnt       fditorComp;
    trbnsifnt protfdtfd Componfnt       fditorComp;
    trbnsifnt protfdtfd Componfnt       fditorComp;
    trbnsifnt protfdtfd Componfnt       fditorComp;
    trbnsifnt protfdtfd Componfnt       fditorComp;





    /**
    /**
    /**
    /**
    /**
     * Tif bdtivf dfll fditor objfdt, tibt ovfrwritfs tif sdrffn rfbl fstbtf
     * Tif bdtivf dfll fditor objfdt, tibt ovfrwritfs tif sdrffn rfbl fstbtf
     * Tif bdtivf dfll fditor objfdt, tibt ovfrwritfs tif sdrffn rfbl fstbtf
     * Tif bdtivf dfll fditor objfdt, tibt ovfrwritfs tif sdrffn rfbl fstbtf
     * Tif bdtivf dfll fditor objfdt, tibt ovfrwritfs tif sdrffn rfbl fstbtf
     * oddupifd by tif durrfnt dfll bnd bllows tif usfr to dibngf its dontfnts.
     * oddupifd by tif durrfnt dfll bnd bllows tif usfr to dibngf its dontfnts.
     * oddupifd by tif durrfnt dfll bnd bllows tif usfr to dibngf its dontfnts.
     * oddupifd by tif durrfnt dfll bnd bllows tif usfr to dibngf its dontfnts.
     * oddupifd by tif durrfnt dfll bnd bllows tif usfr to dibngf its dontfnts.
     * {@dodf null} if tif tbblf isn't durrfntly fditing.
     * {@dodf null} if tif tbblf isn't durrfntly fditing.
     * {@dodf null} if tif tbblf isn't durrfntly fditing.
     * {@dodf null} if tif tbblf isn't durrfntly fditing.
     * {@dodf null} if tif tbblf isn't durrfntly fditing.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TbblfCfllEditor dfllEditor;
    trbnsifnt protfdtfd TbblfCfllEditor dfllEditor;
    trbnsifnt protfdtfd TbblfCfllEditor dfllEditor;
    trbnsifnt protfdtfd TbblfCfllEditor dfllEditor;
    trbnsifnt protfdtfd TbblfCfllEditor dfllEditor;





    /** Idfntififs tif dolumn of tif dfll bfing fditfd. */
    /** Idfntififs tif dolumn of tif dfll bfing fditfd. */
    /** Idfntififs tif dolumn of tif dfll bfing fditfd. */
    /** Idfntififs tif dolumn of tif dfll bfing fditfd. */
    /** Idfntififs tif dolumn of tif dfll bfing fditfd. */
    trbnsifnt protfdtfd int             fditingColumn;
    trbnsifnt protfdtfd int             fditingColumn;
    trbnsifnt protfdtfd int             fditingColumn;
    trbnsifnt protfdtfd int             fditingColumn;
    trbnsifnt protfdtfd int             fditingColumn;





    /** Idfntififs tif row of tif dfll bfing fditfd. */
    /** Idfntififs tif row of tif dfll bfing fditfd. */
    /** Idfntififs tif row of tif dfll bfing fditfd. */
    /** Idfntififs tif row of tif dfll bfing fditfd. */
    /** Idfntififs tif row of tif dfll bfing fditfd. */
    trbnsifnt protfdtfd int             fditingRow;
    trbnsifnt protfdtfd int             fditingRow;
    trbnsifnt protfdtfd int             fditingRow;
    trbnsifnt protfdtfd int             fditingRow;
    trbnsifnt protfdtfd int             fditingRow;





   /**
   /**
   /**
   /**
   /**
     * A tbblf of objfdts tibt displby tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby tif dontfnts of b dfll,
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultRfndfrfrsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultRfndfrfrsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultRfndfrfrsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultRfndfrfrsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultRfndfrfrsByColumnClbss;
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllRfndfrfr>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllRfndfrfr>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllRfndfrfr>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllRfndfrfr>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllRfndfrfr>.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.





    /**
    /**
    /**
    /**
    /**
     * A tbblf of objfdts tibt displby bnd fdit tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby bnd fdit tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby bnd fdit tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby bnd fdit tif dontfnts of b dfll,
     * A tbblf of objfdts tibt displby bnd fdit tif dontfnts of b dfll,
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * indfxfd by dlbss bs dfdlbrfd in <dodf>gftColumnClbss</dodf>
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultEditorsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultEditorsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultEditorsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultEditorsByColumnClbss;
    trbnsifnt protfdtfd Hbsitbblf<Objfdt, Objfdt> dffbultEditorsByColumnClbss;
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllEditor>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllEditor>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllEditor>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllEditor>.
    // Logidbly, tif bbovf is b Hbsitbblf<Clbss<?>, TbblfCfllEditor>.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.
    // It is dfdlbrfd otifrwisf to bddomodbtf using UIDffbults.





    /** Tif forfground dolor of sflfdtfd dflls. */
    /** Tif forfground dolor of sflfdtfd dflls. */
    /** Tif forfground dolor of sflfdtfd dflls. */
    /** Tif forfground dolor of sflfdtfd dflls. */
    /** Tif forfground dolor of sflfdtfd dflls. */
    protfdtfd Color sflfdtionForfground;
    protfdtfd Color sflfdtionForfground;
    protfdtfd Color sflfdtionForfground;
    protfdtfd Color sflfdtionForfground;
    protfdtfd Color sflfdtionForfground;





    /** Tif bbdkground dolor of sflfdtfd dflls. */
    /** Tif bbdkground dolor of sflfdtfd dflls. */
    /** Tif bbdkground dolor of sflfdtfd dflls. */
    /** Tif bbdkground dolor of sflfdtfd dflls. */
    /** Tif bbdkground dolor of sflfdtfd dflls. */
    protfdtfd Color sflfdtionBbdkground;
    protfdtfd Color sflfdtionBbdkground;
    protfdtfd Color sflfdtionBbdkground;
    protfdtfd Color sflfdtionBbdkground;
    protfdtfd Color sflfdtionBbdkground;





//
//
//
//
//
// Privbtf stbtf
// Privbtf stbtf
// Privbtf stbtf
// Privbtf stbtf
// Privbtf stbtf
//
//
//
//
//





    // WARNING: If you dirfdtly bddfss tiis fifld you siould blso dibngf tif
    // WARNING: If you dirfdtly bddfss tiis fifld you siould blso dibngf tif
    // WARNING: If you dirfdtly bddfss tiis fifld you siould blso dibngf tif
    // WARNING: If you dirfdtly bddfss tiis fifld you siould blso dibngf tif
    // WARNING: If you dirfdtly bddfss tiis fifld you siould blso dibngf tif
    // SortMbnbgfr.modflRowSizfs fifld bs wfll.
    // SortMbnbgfr.modflRowSizfs fifld bs wfll.
    // SortMbnbgfr.modflRowSizfs fifld bs wfll.
    // SortMbnbgfr.modflRowSizfs fifld bs wfll.
    // SortMbnbgfr.modflRowSizfs fifld bs wfll.
    privbtf SizfSfqufndf rowModfl;
    privbtf SizfSfqufndf rowModfl;
    privbtf SizfSfqufndf rowModfl;
    privbtf SizfSfqufndf rowModfl;
    privbtf SizfSfqufndf rowModfl;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn surrfndfrsFodusOnKfystrokf;
    privbtf boolfbn surrfndfrsFodusOnKfystrokf;
    privbtf boolfbn surrfndfrsFodusOnKfystrokf;
    privbtf boolfbn surrfndfrsFodusOnKfystrokf;
    privbtf boolfbn surrfndfrsFodusOnKfystrokf;
    privbtf PropfrtyCibngfListfnfr fditorRfmovfr = null;
    privbtf PropfrtyCibngfListfnfr fditorRfmovfr = null;
    privbtf PropfrtyCibngfListfnfr fditorRfmovfr = null;
    privbtf PropfrtyCibngfListfnfr fditorRfmovfr = null;
    privbtf PropfrtyCibngfListfnfr fditorRfmovfr = null;
    /**
    /**
    /**
    /**
    /**
     * Tif lbst vbluf of gftVblufIsAdjusting from tif dolumn sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif dolumn sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif dolumn sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif dolumn sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif dolumn sflfdtion modfls
     * dolumnSflfdtionCibngfd notifidbtion. Usfd to tfst if b rfpbint is
     * dolumnSflfdtionCibngfd notifidbtion. Usfd to tfst if b rfpbint is
     * dolumnSflfdtionCibngfd notifidbtion. Usfd to tfst if b rfpbint is
     * dolumnSflfdtionCibngfd notifidbtion. Usfd to tfst if b rfpbint is
     * dolumnSflfdtionCibngfd notifidbtion. Usfd to tfst if b rfpbint is
     * nffdfd.
     * nffdfd.
     * nffdfd.
     * nffdfd.
     * nffdfd.
     */
     */
     */
     */
     */
    privbtf boolfbn dolumnSflfdtionAdjusting;
    privbtf boolfbn dolumnSflfdtionAdjusting;
    privbtf boolfbn dolumnSflfdtionAdjusting;
    privbtf boolfbn dolumnSflfdtionAdjusting;
    privbtf boolfbn dolumnSflfdtionAdjusting;
    /**
    /**
    /**
    /**
    /**
     * Tif lbst vbluf of gftVblufIsAdjusting from tif row sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif row sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif row sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif row sflfdtion modfls
     * Tif lbst vbluf of gftVblufIsAdjusting from tif row sflfdtion modfls
     * vblufCibngfd notifidbtion. Usfd to tfst if b rfpbint is nffdfd.
     * vblufCibngfd notifidbtion. Usfd to tfst if b rfpbint is nffdfd.
     * vblufCibngfd notifidbtion. Usfd to tfst if b rfpbint is nffdfd.
     * vblufCibngfd notifidbtion. Usfd to tfst if b rfpbint is nffdfd.
     * vblufCibngfd notifidbtion. Usfd to tfst if b rfpbint is nffdfd.
     */
     */
     */
     */
     */
    privbtf boolfbn rowSflfdtionAdjusting;
    privbtf boolfbn rowSflfdtionAdjusting;
    privbtf boolfbn rowSflfdtionAdjusting;
    privbtf boolfbn rowSflfdtionAdjusting;
    privbtf boolfbn rowSflfdtionAdjusting;





    /**
    /**
    /**
    /**
    /**
     * To dommunidbtf frrors bftwffn tirfbds during printing.
     * To dommunidbtf frrors bftwffn tirfbds during printing.
     * To dommunidbtf frrors bftwffn tirfbds during printing.
     * To dommunidbtf frrors bftwffn tirfbds during printing.
     * To dommunidbtf frrors bftwffn tirfbds during printing.
     */
     */
     */
     */
     */
    privbtf Tirowbblf printError;
    privbtf Tirowbblf printError;
    privbtf Tirowbblf printError;
    privbtf Tirowbblf printError;
    privbtf Tirowbblf printError;





    /**
    /**
    /**
    /**
    /**
     * Truf wifn sftRowHfigit(int) ibs bffn invokfd.
     * Truf wifn sftRowHfigit(int) ibs bffn invokfd.
     * Truf wifn sftRowHfigit(int) ibs bffn invokfd.
     * Truf wifn sftRowHfigit(int) ibs bffn invokfd.
     * Truf wifn sftRowHfigit(int) ibs bffn invokfd.
     */
     */
     */
     */
     */
    privbtf boolfbn isRowHfigitSft;
    privbtf boolfbn isRowHfigitSft;
    privbtf boolfbn isRowHfigitSft;
    privbtf boolfbn isRowHfigitSft;
    privbtf boolfbn isRowHfigitSft;





    /**
    /**
    /**
    /**
    /**
     * If truf, on b sort tif sflfdtion is rfsft.
     * If truf, on b sort tif sflfdtion is rfsft.
     * If truf, on b sort tif sflfdtion is rfsft.
     * If truf, on b sort tif sflfdtion is rfsft.
     * If truf, on b sort tif sflfdtion is rfsft.
     */
     */
     */
     */
     */
    privbtf boolfbn updbtfSflfdtionOnSort;
    privbtf boolfbn updbtfSflfdtionOnSort;
    privbtf boolfbn updbtfSflfdtionOnSort;
    privbtf boolfbn updbtfSflfdtionOnSort;
    privbtf boolfbn updbtfSflfdtionOnSort;





    /**
    /**
    /**
    /**
    /**
     * Informbtion usfd in sorting.
     * Informbtion usfd in sorting.
     * Informbtion usfd in sorting.
     * Informbtion usfd in sorting.
     * Informbtion usfd in sorting.
     */
     */
     */
     */
     */
    privbtf trbnsifnt SortMbnbgfr sortMbnbgfr;
    privbtf trbnsifnt SortMbnbgfr sortMbnbgfr;
    privbtf trbnsifnt SortMbnbgfr sortMbnbgfr;
    privbtf trbnsifnt SortMbnbgfr sortMbnbgfr;
    privbtf trbnsifnt SortMbnbgfr sortMbnbgfr;





    /**
    /**
    /**
    /**
    /**
     * If truf, wifn sortfrCibngfd is invokfd it's vbluf is ignorfd.
     * If truf, wifn sortfrCibngfd is invokfd it's vbluf is ignorfd.
     * If truf, wifn sortfrCibngfd is invokfd it's vbluf is ignorfd.
     * If truf, wifn sortfrCibngfd is invokfd it's vbluf is ignorfd.
     * If truf, wifn sortfrCibngfd is invokfd it's vbluf is ignorfd.
     */
     */
     */
     */
     */
    privbtf boolfbn ignorfSortCibngf;
    privbtf boolfbn ignorfSortCibngf;
    privbtf boolfbn ignorfSortCibngf;
    privbtf boolfbn ignorfSortCibngf;
    privbtf boolfbn ignorfSortCibngf;





    /**
    /**
    /**
    /**
    /**
     * Wiftifr or not sortfrCibngfd ibs bffn invokfd.
     * Wiftifr or not sortfrCibngfd ibs bffn invokfd.
     * Wiftifr or not sortfrCibngfd ibs bffn invokfd.
     * Wiftifr or not sortfrCibngfd ibs bffn invokfd.
     * Wiftifr or not sortfrCibngfd ibs bffn invokfd.
     */
     */
     */
     */
     */
    privbtf boolfbn sortfrCibngfd;
    privbtf boolfbn sortfrCibngfd;
    privbtf boolfbn sortfrCibngfd;
    privbtf boolfbn sortfrCibngfd;
    privbtf boolfbn sortfrCibngfd;





    /**
    /**
    /**
    /**
    /**
     * If truf, bny timf tif modfl dibngfs b nfw RowSortfr is sft.
     * If truf, bny timf tif modfl dibngfs b nfw RowSortfr is sft.
     * If truf, bny timf tif modfl dibngfs b nfw RowSortfr is sft.
     * If truf, bny timf tif modfl dibngfs b nfw RowSortfr is sft.
     * If truf, bny timf tif modfl dibngfs b nfw RowSortfr is sft.
     */
     */
     */
     */
     */
    privbtf boolfbn butoCrfbtfRowSortfr;
    privbtf boolfbn butoCrfbtfRowSortfr;
    privbtf boolfbn butoCrfbtfRowSortfr;
    privbtf boolfbn butoCrfbtfRowSortfr;
    privbtf boolfbn butoCrfbtfRowSortfr;





    /**
    /**
    /**
    /**
    /**
     * Wiftifr or not tif tbblf blwbys fills tif vifwport ifigit.
     * Wiftifr or not tif tbblf blwbys fills tif vifwport ifigit.
     * Wiftifr or not tif tbblf blwbys fills tif vifwport ifigit.
     * Wiftifr or not tif tbblf blwbys fills tif vifwport ifigit.
     * Wiftifr or not tif tbblf blwbys fills tif vifwport ifigit.
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     */
     */
     */
     */
     */
    privbtf boolfbn fillsVifwportHfigit;
    privbtf boolfbn fillsVifwportHfigit;
    privbtf boolfbn fillsVifwportHfigit;
    privbtf boolfbn fillsVifwportHfigit;
    privbtf boolfbn fillsVifwportHfigit;





    /**
    /**
    /**
    /**
    /**
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     */
     */
     */
     */
     */
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;





    /**
    /**
    /**
    /**
    /**
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     */
     */
     */
     */
     */
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;





    /**
    /**
    /**
    /**
    /**
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * b drop lodbtion for b <dodf>JTbblf</dodf>.
     * b drop lodbtion for b <dodf>JTbblf</dodf>.
     * b drop lodbtion for b <dodf>JTbblf</dodf>.
     * b drop lodbtion for b <dodf>JTbblf</dodf>.
     * b drop lodbtion for b <dodf>JTbblf</dodf>.
     *
     *
     *
     *
     *
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
        privbtf finbl int row;
        privbtf finbl int row;
        privbtf finbl int row;
        privbtf finbl int row;
        privbtf finbl int row;
        privbtf finbl int dol;
        privbtf finbl int dol;
        privbtf finbl int dol;
        privbtf finbl int dol;
        privbtf finbl int dol;
        privbtf finbl boolfbn isInsfrtRow;
        privbtf finbl boolfbn isInsfrtRow;
        privbtf finbl boolfbn isInsfrtRow;
        privbtf finbl boolfbn isInsfrtRow;
        privbtf finbl boolfbn isInsfrtRow;
        privbtf finbl boolfbn isInsfrtCol;
        privbtf finbl boolfbn isInsfrtCol;
        privbtf finbl boolfbn isInsfrtCol;
        privbtf finbl boolfbn isInsfrtCol;
        privbtf finbl boolfbn isInsfrtCol;





        privbtf DropLodbtion(Point p, int row, int dol,
        privbtf DropLodbtion(Point p, int row, int dol,
        privbtf DropLodbtion(Point p, int row, int dol,
        privbtf DropLodbtion(Point p, int row, int dol,
        privbtf DropLodbtion(Point p, int row, int dol,
                             boolfbn isInsfrtRow, boolfbn isInsfrtCol) {
                             boolfbn isInsfrtRow, boolfbn isInsfrtCol) {
                             boolfbn isInsfrtRow, boolfbn isInsfrtCol) {
                             boolfbn isInsfrtRow, boolfbn isInsfrtCol) {
                             boolfbn isInsfrtRow, boolfbn isInsfrtCol) {





            supfr(p);
            supfr(p);
            supfr(p);
            supfr(p);
            supfr(p);
            tiis.row = row;
            tiis.row = row;
            tiis.row = row;
            tiis.row = row;
            tiis.row = row;
            tiis.dol = dol;
            tiis.dol = dol;
            tiis.dol = dol;
            tiis.dol = dol;
            tiis.dol = dol;
            tiis.isInsfrtRow = isInsfrtRow;
            tiis.isInsfrtRow = isInsfrtRow;
            tiis.isInsfrtRow = isInsfrtRow;
            tiis.isInsfrtRow = isInsfrtRow;
            tiis.isInsfrtRow = isInsfrtRow;
            tiis.isInsfrtCol = isInsfrtCol;
            tiis.isInsfrtCol = isInsfrtCol;
            tiis.isInsfrtCol = isInsfrtCol;
            tiis.isInsfrtCol = isInsfrtCol;
            tiis.isInsfrtCol = isInsfrtCol;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif row indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif row indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif row indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif row indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif row indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * <dodf>isInsfrtRow()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtRow()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtRow()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtRow()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtRow()</dodf>. If tibt mftiod rfturns
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * row siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * row siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * row siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * row siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * row siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * of bn fxisting row on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting row on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting row on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting row on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting row on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * bnd no row dould bf dbldulbtfd.
         * bnd no row dould bf dbldulbtfd.
         * bnd no row dould bf dbldulbtfd.
         * bnd no row dould bf dbldulbtfd.
         * bnd no row dould bf dbldulbtfd.
         *
         *
         *
         *
         *
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         */
         */
         */
         */
         */
        publid int gftRow() {
        publid int gftRow() {
        publid int gftRow() {
        publid int gftRow() {
        publid int gftRow() {
            rfturn row;
            rfturn row;
            rfturn row;
            rfturn row;
            rfturn row;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dolumn indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif dolumn indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif dolumn indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif dolumn indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * Rfturns tif dolumn indfx wifrf b droppfd itfm siould bf plbdfd in tif
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * tbblf. Intfrprftbtion of tif vbluf dfpfnds on tif rfturn of
         * <dodf>isInsfrtColumn()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtColumn()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtColumn()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtColumn()</dodf>. If tibt mftiod rfturns
         * <dodf>isInsfrtColumn()</dodf>. If tibt mftiod rfturns
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * <dodf>truf</dodf> tiis vbluf indidbtfs tif indfx wifrf b nfw
         * dolumn siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * dolumn siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * dolumn siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * dolumn siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * dolumn siould bf insfrtfd. Otifrwisf, it rfprfsfnts tif vbluf
         * of bn fxisting dolumn on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting dolumn on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting dolumn on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting dolumn on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * of bn fxisting dolumn on wiidi tif dbtb wbs droppfd. Tiis indfx is
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * in tfrms of tif vifw.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr fmpty spbdf,
         * bnd no dolumn dould bf dbldulbtfd.
         * bnd no dolumn dould bf dbldulbtfd.
         * bnd no dolumn dould bf dbldulbtfd.
         * bnd no dolumn dould bf dbldulbtfd.
         * bnd no dolumn dould bf dbldulbtfd.
         *
         *
         *
         *
         *
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         * @rfturn tif drop row
         */
         */
         */
         */
         */
        publid int gftColumn() {
        publid int gftColumn() {
        publid int gftColumn() {
        publid int gftColumn() {
        publid int gftColumn() {
            rfturn dol;
            rfturn dol;
            rfturn dol;
            rfturn dol;
            rfturn dol;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * of b row.
         * of b row.
         * of b row.
         * of b row.
         * of b row.
         *
         *
         *
         *
         *
         * @rfturn wiftifr or not tiis is bn insfrt row
         * @rfturn wiftifr or not tiis is bn insfrt row
         * @rfturn wiftifr or not tiis is bn insfrt row
         * @rfturn wiftifr or not tiis is bn insfrt row
         * @rfturn wiftifr or not tiis is bn insfrt row
         */
         */
         */
         */
         */
        publid boolfbn isInsfrtRow() {
        publid boolfbn isInsfrtRow() {
        publid boolfbn isInsfrtRow() {
        publid boolfbn isInsfrtRow() {
        publid boolfbn isInsfrtRow() {
            rfturn isInsfrtRow;
            rfturn isInsfrtRow;
            rfturn isInsfrtRow;
            rfturn isInsfrtRow;
            rfturn isInsfrtRow;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * Rfturns wiftifr or not tiis lodbtion rfprfsfnts bn insfrt
         * of b dolumn.
         * of b dolumn.
         * of b dolumn.
         * of b dolumn.
         * of b dolumn.
         *
         *
         *
         *
         *
         * @rfturn wiftifr or not tiis is bn insfrt dolumn
         * @rfturn wiftifr or not tiis is bn insfrt dolumn
         * @rfturn wiftifr or not tiis is bn insfrt dolumn
         * @rfturn wiftifr or not tiis is bn insfrt dolumn
         * @rfturn wiftifr or not tiis is bn insfrt dolumn
         */
         */
         */
         */
         */
        publid boolfbn isInsfrtColumn() {
        publid boolfbn isInsfrtColumn() {
        publid boolfbn isInsfrtColumn() {
        publid boolfbn isInsfrtColumn() {
        publid boolfbn isInsfrtColumn() {
            rfturn isInsfrtCol;
            rfturn isInsfrtCol;
            rfturn isInsfrtCol;
            rfturn isInsfrtCol;
            rfturn isInsfrtCol;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         *
         *
         *
         *
         *
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         */
         */
         */
         */
         */
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "row=" + row + ","
                   + "row=" + row + ","
                   + "row=" + row + ","
                   + "row=" + row + ","
                   + "row=" + row + ","
                   + "dolumn=" + dol + ","
                   + "dolumn=" + dol + ","
                   + "dolumn=" + dol + ","
                   + "dolumn=" + dol + ","
                   + "dolumn=" + dol + ","
                   + "insfrtRow=" + isInsfrtRow + ","
                   + "insfrtRow=" + isInsfrtRow + ","
                   + "insfrtRow=" + isInsfrtRow + ","
                   + "insfrtRow=" + isInsfrtRow + ","
                   + "insfrtRow=" + isInsfrtRow + ","
                   + "insfrtColumn=" + isInsfrtCol + "]";
                   + "insfrtColumn=" + isInsfrtCol + "]";
                   + "insfrtColumn=" + isInsfrtCol + "]";
                   + "insfrtColumn=" + isInsfrtCol + "]";
                   + "insfrtColumn=" + isInsfrtCol + "]";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





//
//
//
//
//
// Construdtors
// Construdtors
// Construdtors
// Construdtors
// Construdtors
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Construdts b dffbult <dodf>JTbblf</dodf> tibt is initiblizfd witi b dffbult
     * Construdts b dffbult <dodf>JTbblf</dodf> tibt is initiblizfd witi b dffbult
     * Construdts b dffbult <dodf>JTbblf</dodf> tibt is initiblizfd witi b dffbult
     * Construdts b dffbult <dodf>JTbblf</dodf> tibt is initiblizfd witi b dffbult
     * Construdts b dffbult <dodf>JTbblf</dodf> tibt is initiblizfd witi b dffbult
     * dbtb modfl, b dffbult dolumn modfl, bnd b dffbult sflfdtion
     * dbtb modfl, b dffbult dolumn modfl, bnd b dffbult sflfdtion
     * dbtb modfl, b dffbult dolumn modfl, bnd b dffbult sflfdtion
     * dbtb modfl, b dffbult dolumn modfl, bnd b dffbult sflfdtion
     * dbtb modfl, b dffbult dolumn modfl, bnd b dffbult sflfdtion
     * modfl.
     * modfl.
     * modfl.
     * modfl.
     * modfl.
     *
     *
     *
     *
     *
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     */
     */
     */
     */
     */
    publid JTbblf() {
    publid JTbblf() {
    publid JTbblf() {
    publid JTbblf() {
    publid JTbblf() {
        tiis(null, null, null);
        tiis(null, null, null);
        tiis(null, null, null);
        tiis(null, null, null);
        tiis(null, null, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * <dodf>dm</dodf> bs tif dbtb modfl, b dffbult dolumn modfl,
     * <dodf>dm</dodf> bs tif dbtb modfl, b dffbult dolumn modfl,
     * <dodf>dm</dodf> bs tif dbtb modfl, b dffbult dolumn modfl,
     * <dodf>dm</dodf> bs tif dbtb modfl, b dffbult dolumn modfl,
     * <dodf>dm</dodf> bs tif dbtb modfl, b dffbult dolumn modfl,
     * bnd b dffbult sflfdtion modfl.
     * bnd b dffbult sflfdtion modfl.
     * bnd b dffbult sflfdtion modfl.
     * bnd b dffbult sflfdtion modfl.
     * bnd b dffbult sflfdtion modfl.
     *
     *
     *
     *
     *
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     */
     */
     */
     */
     */
    publid JTbblf(TbblfModfl dm) {
    publid JTbblf(TbblfModfl dm) {
    publid JTbblf(TbblfModfl dm) {
    publid JTbblf(TbblfModfl dm) {
    publid JTbblf(TbblfModfl dm) {
        tiis(dm, null, null);
        tiis(dm, null, null);
        tiis(dm, null, null);
        tiis(dm, null, null);
        tiis(dm, null, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf>
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf>
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf>
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf>
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf>
     * bs tif dolumn modfl, bnd b dffbult sflfdtion modfl.
     * bs tif dolumn modfl, bnd b dffbult sflfdtion modfl.
     * bs tif dolumn modfl, bnd b dffbult sflfdtion modfl.
     * bs tif dolumn modfl, bnd b dffbult sflfdtion modfl.
     * bs tif dolumn modfl, bnd b dffbult sflfdtion modfl.
     *
     *
     *
     *
     *
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     */
     */
     */
     */
     */
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm) {
        tiis(dm, dm, null);
        tiis(dm, dm, null);
        tiis(dm, dm, null);
        tiis(dm, dm, null);
        tiis(dm, dm, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * Construdts b <dodf>JTbblf</dodf> tibt is initiblizfd witi
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf> bs tif
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf> bs tif
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf> bs tif
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf> bs tif
     * <dodf>dm</dodf> bs tif dbtb modfl, <dodf>dm</dodf> bs tif
     * dolumn modfl, bnd <dodf>sm</dodf> bs tif sflfdtion modfl.
     * dolumn modfl, bnd <dodf>sm</dodf> bs tif sflfdtion modfl.
     * dolumn modfl, bnd <dodf>sm</dodf> bs tif sflfdtion modfl.
     * dolumn modfl, bnd <dodf>sm</dodf> bs tif sflfdtion modfl.
     * dolumn modfl, bnd <dodf>sm</dodf> bs tif sflfdtion modfl.
     * If bny of tif pbrbmftfrs brf <dodf>null</dodf> tiis mftiod
     * If bny of tif pbrbmftfrs brf <dodf>null</dodf> tiis mftiod
     * If bny of tif pbrbmftfrs brf <dodf>null</dodf> tiis mftiod
     * If bny of tif pbrbmftfrs brf <dodf>null</dodf> tiis mftiod
     * If bny of tif pbrbmftfrs brf <dodf>null</dodf> tiis mftiod
     * will initiblizf tif tbblf witi tif dorrfsponding dffbult modfl.
     * will initiblizf tif tbblf witi tif dorrfsponding dffbult modfl.
     * will initiblizf tif tbblf witi tif dorrfsponding dffbult modfl.
     * will initiblizf tif tbblf witi tif dorrfsponding dffbult modfl.
     * will initiblizf tif tbblf witi tif dorrfsponding dffbult modfl.
     * Tif <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg is sft to fblsf
     * Tif <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg is sft to fblsf
     * Tif <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg is sft to fblsf
     * Tif <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg is sft to fblsf
     * Tif <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg is sft to fblsf
     * if <dodf>dm</dodf> is non-null, otifrwisf it is sft to truf
     * if <dodf>dm</dodf> is non-null, otifrwisf it is sft to truf
     * if <dodf>dm</dodf> is non-null, otifrwisf it is sft to truf
     * if <dodf>dm</dodf> is non-null, otifrwisf it is sft to truf
     * if <dodf>dm</dodf> is non-null, otifrwisf it is sft to truf
     * bnd tif dolumn modfl is populbtfd witi suitbblf
     * bnd tif dolumn modfl is populbtfd witi suitbblf
     * bnd tif dolumn modfl is populbtfd witi suitbblf
     * bnd tif dolumn modfl is populbtfd witi suitbblf
     * bnd tif dolumn modfl is populbtfd witi suitbblf
     * <dodf>TbblfColumns</dodf> for tif dolumns in <dodf>dm</dodf>.
     * <dodf>TbblfColumns</dodf> for tif dolumns in <dodf>dm</dodf>.
     * <dodf>TbblfColumns</dodf> for tif dolumns in <dodf>dm</dodf>.
     * <dodf>TbblfColumns</dodf> for tif dolumns in <dodf>dm</dodf>.
     * <dodf>TbblfColumns</dodf> for tif dolumns in <dodf>dm</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dbtb modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm dm        tif dolumn modfl for tif tbblf
     * @pbrbm sm        tif row sflfdtion modfl for tif tbblf
     * @pbrbm sm        tif row sflfdtion modfl for tif tbblf
     * @pbrbm sm        tif row sflfdtion modfl for tif tbblf
     * @pbrbm sm        tif row sflfdtion modfl for tif tbblf
     * @pbrbm sm        tif row sflfdtion modfl for tif tbblf
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultDbtbModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultColumnModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     * @sff #drfbtfDffbultSflfdtionModfl
     */
     */
     */
     */
     */
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm, ListSflfdtionModfl sm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm, ListSflfdtionModfl sm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm, ListSflfdtionModfl sm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm, ListSflfdtionModfl sm) {
    publid JTbblf(TbblfModfl dm, TbblfColumnModfl dm, ListSflfdtionModfl sm) {
        supfr();
        supfr();
        supfr();
        supfr();
        supfr();
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);





        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
                           JComponfnt.gftMbnbgingFodusForwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusForwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusForwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusForwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusForwbrdTrbvfrsblKfys());
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
        sftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
                           JComponfnt.gftMbnbgingFodusBbdkwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusBbdkwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusBbdkwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusBbdkwbrdTrbvfrsblKfys());
                           JComponfnt.gftMbnbgingFodusBbdkwbrdTrbvfrsblKfys());
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
            dm = drfbtfDffbultColumnModfl();
            dm = drfbtfDffbultColumnModfl();
            dm = drfbtfDffbultColumnModfl();
            dm = drfbtfDffbultColumnModfl();
            dm = drfbtfDffbultColumnModfl();
            butoCrfbtfColumnsFromModfl = truf;
            butoCrfbtfColumnsFromModfl = truf;
            butoCrfbtfColumnsFromModfl = truf;
            butoCrfbtfColumnsFromModfl = truf;
            butoCrfbtfColumnsFromModfl = truf;
        }
        }
        }
        }
        }
        sftColumnModfl(dm);
        sftColumnModfl(dm);
        sftColumnModfl(dm);
        sftColumnModfl(dm);
        sftColumnModfl(dm);





        if (sm == null) {
        if (sm == null) {
        if (sm == null) {
        if (sm == null) {
        if (sm == null) {
            sm = drfbtfDffbultSflfdtionModfl();
            sm = drfbtfDffbultSflfdtionModfl();
            sm = drfbtfDffbultSflfdtionModfl();
            sm = drfbtfDffbultSflfdtionModfl();
            sm = drfbtfDffbultSflfdtionModfl();
        }
        }
        }
        }
        }
        sftSflfdtionModfl(sm);
        sftSflfdtionModfl(sm);
        sftSflfdtionModfl(sm);
        sftSflfdtionModfl(sm);
        sftSflfdtionModfl(sm);





    // Sft tif modfl lbst, tibt wby if tif butoCrfbtColumnsFromModfl ibs
    // Sft tif modfl lbst, tibt wby if tif butoCrfbtColumnsFromModfl ibs
    // Sft tif modfl lbst, tibt wby if tif butoCrfbtColumnsFromModfl ibs
    // Sft tif modfl lbst, tibt wby if tif butoCrfbtColumnsFromModfl ibs
    // Sft tif modfl lbst, tibt wby if tif butoCrfbtColumnsFromModfl ibs
    // bffn sft bbovf, wf will butombtidblly populbtf bn fmpty dolumnModfl
    // bffn sft bbovf, wf will butombtidblly populbtf bn fmpty dolumnModfl
    // bffn sft bbovf, wf will butombtidblly populbtf bn fmpty dolumnModfl
    // bffn sft bbovf, wf will butombtidblly populbtf bn fmpty dolumnModfl
    // bffn sft bbovf, wf will butombtidblly populbtf bn fmpty dolumnModfl
    // witi suitbblf dolumns for tif nfw modfl.
    // witi suitbblf dolumns for tif nfw modfl.
    // witi suitbblf dolumns for tif nfw modfl.
    // witi suitbblf dolumns for tif nfw modfl.
    // witi suitbblf dolumns for tif nfw modfl.
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
        if (dm == null) {
            dm = drfbtfDffbultDbtbModfl();
            dm = drfbtfDffbultDbtbModfl();
            dm = drfbtfDffbultDbtbModfl();
            dm = drfbtfDffbultDbtbModfl();
            dm = drfbtfDffbultDbtbModfl();
        }
        }
        }
        }
        }
        sftModfl(dm);
        sftModfl(dm);
        sftModfl(dm);
        sftModfl(dm);
        sftModfl(dm);





        initiblizfLodblVbrs();
        initiblizfLodblVbrs();
        initiblizfLodblVbrs();
        initiblizfLodblVbrs();
        initiblizfLodblVbrs();
        updbtfUI();
        updbtfUI();
        updbtfUI();
        updbtfUI();
        updbtfUI();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> witi <dodf>numRows</dodf>
     * Construdts b <dodf>JTbblf</dodf> witi <dodf>numRows</dodf>
     * Construdts b <dodf>JTbblf</dodf> witi <dodf>numRows</dodf>
     * Construdts b <dodf>JTbblf</dodf> witi <dodf>numRows</dodf>
     * Construdts b <dodf>JTbblf</dodf> witi <dodf>numRows</dodf>
     * bnd <dodf>numColumns</dodf> of fmpty dflls using
     * bnd <dodf>numColumns</dodf> of fmpty dflls using
     * bnd <dodf>numColumns</dodf> of fmpty dflls using
     * bnd <dodf>numColumns</dodf> of fmpty dflls using
     * bnd <dodf>numColumns</dodf> of fmpty dflls using
     * <dodf>DffbultTbblfModfl</dodf>.  Tif dolumns will ibvf
     * <dodf>DffbultTbblfModfl</dodf>.  Tif dolumns will ibvf
     * <dodf>DffbultTbblfModfl</dodf>.  Tif dolumns will ibvf
     * <dodf>DffbultTbblfModfl</dodf>.  Tif dolumns will ibvf
     * <dodf>DffbultTbblfModfl</dodf>.  Tif dolumns will ibvf
     * nbmfs of tif form "A", "B", "C", ftd.
     * nbmfs of tif form "A", "B", "C", ftd.
     * nbmfs of tif form "A", "B", "C", ftd.
     * nbmfs of tif form "A", "B", "C", ftd.
     * nbmfs of tif form "A", "B", "C", ftd.
     *
     *
     *
     *
     *
     * @pbrbm numRows           tif numbfr of rows tif tbblf iolds
     * @pbrbm numRows           tif numbfr of rows tif tbblf iolds
     * @pbrbm numRows           tif numbfr of rows tif tbblf iolds
     * @pbrbm numRows           tif numbfr of rows tif tbblf iolds
     * @pbrbm numRows           tif numbfr of rows tif tbblf iolds
     * @pbrbm numColumns        tif numbfr of dolumns tif tbblf iolds
     * @pbrbm numColumns        tif numbfr of dolumns tif tbblf iolds
     * @pbrbm numColumns        tif numbfr of dolumns tif tbblf iolds
     * @pbrbm numColumns        tif numbfr of dolumns tif tbblf iolds
     * @pbrbm numColumns        tif numbfr of dolumns tif tbblf iolds
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     */
     */
     */
     */
     */
    publid JTbblf(int numRows, int numColumns) {
    publid JTbblf(int numRows, int numColumns) {
    publid JTbblf(int numRows, int numColumns) {
    publid JTbblf(int numRows, int numColumns) {
    publid JTbblf(int numRows, int numColumns) {
        tiis(nfw DffbultTbblfModfl(numRows, numColumns));
        tiis(nfw DffbultTbblfModfl(numRows, numColumns));
        tiis(nfw DffbultTbblfModfl(numRows, numColumns));
        tiis(nfw DffbultTbblfModfl(numRows, numColumns));
        tiis(nfw DffbultTbblfModfl(numRows, numColumns));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif
     * <dodf>Vfdtor</dodf> of <dodf>Vfdtors</dodf>, <dodf>rowDbtb</dodf>,
     * <dodf>Vfdtor</dodf> of <dodf>Vfdtors</dodf>, <dodf>rowDbtb</dodf>,
     * <dodf>Vfdtor</dodf> of <dodf>Vfdtors</dodf>, <dodf>rowDbtb</dodf>,
     * <dodf>Vfdtor</dodf> of <dodf>Vfdtors</dodf>, <dodf>rowDbtb</dodf>,
     * <dodf>Vfdtor</dodf> of <dodf>Vfdtors</dodf>, <dodf>rowDbtb</dodf>,
     * witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.  Tif
     * witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.  Tif
     * witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.  Tif
     * witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.  Tif
     * witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.  Tif
     * <dodf>Vfdtors</dodf> dontbinfd in <dodf>rowDbtb</dodf>
     * <dodf>Vfdtors</dodf> dontbinfd in <dodf>rowDbtb</dodf>
     * <dodf>Vfdtors</dodf> dontbinfd in <dodf>rowDbtb</dodf>
     * <dodf>Vfdtors</dodf> dontbinfd in <dodf>rowDbtb</dodf>
     * <dodf>Vfdtors</dodf> dontbinfd in <dodf>rowDbtb</dodf>
     * siould dontbin tif vblufs for tibt row. In otifr words,
     * siould dontbin tif vblufs for tibt row. In otifr words,
     * siould dontbin tif vblufs for tibt row. In otifr words,
     * siould dontbin tif vblufs for tibt row. In otifr words,
     * siould dontbin tif vblufs for tibt row. In otifr words,
     * tif vbluf of tif dfll bt row 1, dolumn 5 dbn bf obtbinfd
     * tif vbluf of tif dfll bt row 1, dolumn 5 dbn bf obtbinfd
     * tif vbluf of tif dfll bt row 1, dolumn 5 dbn bf obtbinfd
     * tif vbluf of tif dfll bt row 1, dolumn 5 dbn bf obtbinfd
     * tif vbluf of tif dfll bt row 1, dolumn 5 dbn bf obtbinfd
     * witi tif following dodf:
     * witi tif following dodf:
     * witi tif following dodf:
     * witi tif following dodf:
     * witi tif following dodf:
     *
     *
     *
     *
     *
     * <prf>((Vfdtor)rowDbtb.flfmfntAt(1)).flfmfntAt(5);</prf>
     * <prf>((Vfdtor)rowDbtb.flfmfntAt(1)).flfmfntAt(5);</prf>
     * <prf>((Vfdtor)rowDbtb.flfmfntAt(1)).flfmfntAt(5);</prf>
     * <prf>((Vfdtor)rowDbtb.flfmfntAt(1)).flfmfntAt(5);</prf>
     * <prf>((Vfdtor)rowDbtb.flfmfntAt(1)).flfmfntAt(5);</prf>
     *
     *
     *
     *
     *
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     */
     */
     */
     */
     */
    publid JTbblf(Vfdtor<Vfdtor<Objfdt>> rowDbtb, Vfdtor<Objfdt> dolumnNbmfs) {
    publid JTbblf(Vfdtor<Vfdtor<Objfdt>> rowDbtb, Vfdtor<Objfdt> dolumnNbmfs) {
    publid JTbblf(Vfdtor<Vfdtor<Objfdt>> rowDbtb, Vfdtor<Objfdt> dolumnNbmfs) {
    publid JTbblf(Vfdtor<Vfdtor<Objfdt>> rowDbtb, Vfdtor<Objfdt> dolumnNbmfs) {
    publid JTbblf(Vfdtor<Vfdtor<Objfdt>> rowDbtb, Vfdtor<Objfdt> dolumnNbmfs) {
        tiis(nfw DffbultTbblfModfl(rowDbtb, dolumnNbmfs));
        tiis(nfw DffbultTbblfModfl(rowDbtb, dolumnNbmfs));
        tiis(nfw DffbultTbblfModfl(rowDbtb, dolumnNbmfs));
        tiis(nfw DffbultTbblfModfl(rowDbtb, dolumnNbmfs));
        tiis(nfw DffbultTbblfModfl(rowDbtb, dolumnNbmfs));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif two dimfnsionbl brrby,
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif two dimfnsionbl brrby,
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif two dimfnsionbl brrby,
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif two dimfnsionbl brrby,
     * Construdts b <dodf>JTbblf</dodf> to displby tif vblufs in tif two dimfnsionbl brrby,
     * <dodf>rowDbtb</dodf>, witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.
     * <dodf>rowDbtb</dodf>, witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.
     * <dodf>rowDbtb</dodf>, witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.
     * <dodf>rowDbtb</dodf>, witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.
     * <dodf>rowDbtb</dodf>, witi dolumn nbmfs, <dodf>dolumnNbmfs</dodf>.
     * <dodf>rowDbtb</dodf> is bn brrby of rows, so tif vbluf of tif dfll bt row 1,
     * <dodf>rowDbtb</dodf> is bn brrby of rows, so tif vbluf of tif dfll bt row 1,
     * <dodf>rowDbtb</dodf> is bn brrby of rows, so tif vbluf of tif dfll bt row 1,
     * <dodf>rowDbtb</dodf> is bn brrby of rows, so tif vbluf of tif dfll bt row 1,
     * <dodf>rowDbtb</dodf> is bn brrby of rows, so tif vbluf of tif dfll bt row 1,
     * dolumn 5 dbn bf obtbinfd witi tif following dodf:
     * dolumn 5 dbn bf obtbinfd witi tif following dodf:
     * dolumn 5 dbn bf obtbinfd witi tif following dodf:
     * dolumn 5 dbn bf obtbinfd witi tif following dodf:
     * dolumn 5 dbn bf obtbinfd witi tif following dodf:
     *
     *
     *
     *
     *
     * <prf> rowDbtb[1][5]; </prf>
     * <prf> rowDbtb[1][5]; </prf>
     * <prf> rowDbtb[1][5]; </prf>
     * <prf> rowDbtb[1][5]; </prf>
     * <prf> rowDbtb[1][5]; </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * All rows must bf of tif sbmf lfngti bs <dodf>dolumnNbmfs</dodf>.
     * All rows must bf of tif sbmf lfngti bs <dodf>dolumnNbmfs</dodf>.
     * All rows must bf of tif sbmf lfngti bs <dodf>dolumnNbmfs</dodf>.
     * All rows must bf of tif sbmf lfngti bs <dodf>dolumnNbmfs</dodf>.
     * All rows must bf of tif sbmf lfngti bs <dodf>dolumnNbmfs</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm rowDbtb           tif dbtb for tif nfw tbblf
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     * @pbrbm dolumnNbmfs       nbmfs of fbdi dolumn
     */
     */
     */
     */
     */
    publid JTbblf(finbl Objfdt[][] rowDbtb, finbl Objfdt[] dolumnNbmfs) {
    publid JTbblf(finbl Objfdt[][] rowDbtb, finbl Objfdt[] dolumnNbmfs) {
    publid JTbblf(finbl Objfdt[][] rowDbtb, finbl Objfdt[] dolumnNbmfs) {
    publid JTbblf(finbl Objfdt[][] rowDbtb, finbl Objfdt[] dolumnNbmfs) {
    publid JTbblf(finbl Objfdt[][] rowDbtb, finbl Objfdt[] dolumnNbmfs) {
        tiis(nfw AbstrbdtTbblfModfl() {
        tiis(nfw AbstrbdtTbblfModfl() {
        tiis(nfw AbstrbdtTbblfModfl() {
        tiis(nfw AbstrbdtTbblfModfl() {
        tiis(nfw AbstrbdtTbblfModfl() {
            publid String gftColumnNbmf(int dolumn) { rfturn dolumnNbmfs[dolumn].toString(); }
            publid String gftColumnNbmf(int dolumn) { rfturn dolumnNbmfs[dolumn].toString(); }
            publid String gftColumnNbmf(int dolumn) { rfturn dolumnNbmfs[dolumn].toString(); }
            publid String gftColumnNbmf(int dolumn) { rfturn dolumnNbmfs[dolumn].toString(); }
            publid String gftColumnNbmf(int dolumn) { rfturn dolumnNbmfs[dolumn].toString(); }
            publid int gftRowCount() { rfturn rowDbtb.lfngti; }
            publid int gftRowCount() { rfturn rowDbtb.lfngti; }
            publid int gftRowCount() { rfturn rowDbtb.lfngti; }
            publid int gftRowCount() { rfturn rowDbtb.lfngti; }
            publid int gftRowCount() { rfturn rowDbtb.lfngti; }
            publid int gftColumnCount() { rfturn dolumnNbmfs.lfngti; }
            publid int gftColumnCount() { rfturn dolumnNbmfs.lfngti; }
            publid int gftColumnCount() { rfturn dolumnNbmfs.lfngti; }
            publid int gftColumnCount() { rfturn dolumnNbmfs.lfngti; }
            publid int gftColumnCount() { rfturn dolumnNbmfs.lfngti; }
            publid Objfdt gftVblufAt(int row, int dol) { rfturn rowDbtb[row][dol]; }
            publid Objfdt gftVblufAt(int row, int dol) { rfturn rowDbtb[row][dol]; }
            publid Objfdt gftVblufAt(int row, int dol) { rfturn rowDbtb[row][dol]; }
            publid Objfdt gftVblufAt(int row, int dol) { rfturn rowDbtb[row][dol]; }
            publid Objfdt gftVblufAt(int row, int dol) { rfturn rowDbtb[row][dol]; }
            publid boolfbn isCfllEditbblf(int row, int dolumn) { rfturn truf; }
            publid boolfbn isCfllEditbblf(int row, int dolumn) { rfturn truf; }
            publid boolfbn isCfllEditbblf(int row, int dolumn) { rfturn truf; }
            publid boolfbn isCfllEditbblf(int row, int dolumn) { rfturn truf; }
            publid boolfbn isCfllEditbblf(int row, int dolumn) { rfturn truf; }
            publid void sftVblufAt(Objfdt vbluf, int row, int dol) {
            publid void sftVblufAt(Objfdt vbluf, int row, int dol) {
            publid void sftVblufAt(Objfdt vbluf, int row, int dol) {
            publid void sftVblufAt(Objfdt vbluf, int row, int dol) {
            publid void sftVblufAt(Objfdt vbluf, int row, int dol) {
                rowDbtb[row][dol] = vbluf;
                rowDbtb[row][dol] = vbluf;
                rowDbtb[row][dol] = vbluf;
                rowDbtb[row][dol] = vbluf;
                rowDbtb[row][dol] = vbluf;
                firfTbblfCfllUpdbtfd(row, dol);
                firfTbblfCfllUpdbtfd(row, dol);
                firfTbblfCfllUpdbtfd(row, dol);
                firfTbblfCfllUpdbtfd(row, dol);
                firfTbblfCfllUpdbtfd(row, dol);
            }
            }
            }
            }
            }
        });
        });
        });
        });
        });
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cblls tif <dodf>donfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>donfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>donfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>donfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>donfigurfEndlosingSdrollPbnf</dodf> mftiod.
     *
     *
     *
     *
     *
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     */
     */
     */
     */
     */
    publid void bddNotify() {
    publid void bddNotify() {
    publid void bddNotify() {
    publid void bddNotify() {
    publid void bddNotify() {
        supfr.bddNotify();
        supfr.bddNotify();
        supfr.bddNotify();
        supfr.bddNotify();
        supfr.bddNotify();
        donfigurfEndlosingSdrollPbnf();
        donfigurfEndlosingSdrollPbnf();
        donfigurfEndlosingSdrollPbnf();
        donfigurfEndlosingSdrollPbnf();
        donfigurfEndlosingSdrollPbnf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * If tiis <dodf>JTbblf</dodf> is tif <dodf>vifwportVifw</dodf> of bn fndlosing <dodf>JSdrollPbnf</dodf>
     * If tiis <dodf>JTbblf</dodf> is tif <dodf>vifwportVifw</dodf> of bn fndlosing <dodf>JSdrollPbnf</dodf>
     * If tiis <dodf>JTbblf</dodf> is tif <dodf>vifwportVifw</dodf> of bn fndlosing <dodf>JSdrollPbnf</dodf>
     * If tiis <dodf>JTbblf</dodf> is tif <dodf>vifwportVifw</dodf> of bn fndlosing <dodf>JSdrollPbnf</dodf>
     * If tiis <dodf>JTbblf</dodf> is tif <dodf>vifwportVifw</dodf> of bn fndlosing <dodf>JSdrollPbnf</dodf>
     * (tif usubl situbtion), donfigurf tiis <dodf>SdrollPbnf</dodf> by, bmongst otifr tiings,
     * (tif usubl situbtion), donfigurf tiis <dodf>SdrollPbnf</dodf> by, bmongst otifr tiings,
     * (tif usubl situbtion), donfigurf tiis <dodf>SdrollPbnf</dodf> by, bmongst otifr tiings,
     * (tif usubl situbtion), donfigurf tiis <dodf>SdrollPbnf</dodf> by, bmongst otifr tiings,
     * (tif usubl situbtion), donfigurf tiis <dodf>SdrollPbnf</dodf> by, bmongst otifr tiings,
     * instblling tif tbblf's <dodf>tbblfHfbdfr</dodf> bs tif <dodf>dolumnHfbdfrVifw</dodf> of tif sdroll pbnf.
     * instblling tif tbblf's <dodf>tbblfHfbdfr</dodf> bs tif <dodf>dolumnHfbdfrVifw</dodf> of tif sdroll pbnf.
     * instblling tif tbblf's <dodf>tbblfHfbdfr</dodf> bs tif <dodf>dolumnHfbdfrVifw</dodf> of tif sdroll pbnf.
     * instblling tif tbblf's <dodf>tbblfHfbdfr</dodf> bs tif <dodf>dolumnHfbdfrVifw</dodf> of tif sdroll pbnf.
     * instblling tif tbblf's <dodf>tbblfHfbdfr</dodf> bs tif <dodf>dolumnHfbdfrVifw</dodf> of tif sdroll pbnf.
     * Wifn b <dodf>JTbblf</dodf> is bddfd to b <dodf>JSdrollPbnf</dodf> in tif usubl wby,
     * Wifn b <dodf>JTbblf</dodf> is bddfd to b <dodf>JSdrollPbnf</dodf> in tif usubl wby,
     * Wifn b <dodf>JTbblf</dodf> is bddfd to b <dodf>JSdrollPbnf</dodf> in tif usubl wby,
     * Wifn b <dodf>JTbblf</dodf> is bddfd to b <dodf>JSdrollPbnf</dodf> in tif usubl wby,
     * Wifn b <dodf>JTbblf</dodf> is bddfd to b <dodf>JSdrollPbnf</dodf> in tif usubl wby,
     * using <dodf>nfw JSdrollPbnf(myTbblf)</dodf>, <dodf>bddNotify</dodf> is
     * using <dodf>nfw JSdrollPbnf(myTbblf)</dodf>, <dodf>bddNotify</dodf> is
     * using <dodf>nfw JSdrollPbnf(myTbblf)</dodf>, <dodf>bddNotify</dodf> is
     * using <dodf>nfw JSdrollPbnf(myTbblf)</dodf>, <dodf>bddNotify</dodf> is
     * using <dodf>nfw JSdrollPbnf(myTbblf)</dodf>, <dodf>bddNotify</dodf> is
     * dbllfd in tif <dodf>JTbblf</dodf> (wifn tif tbblf is bddfd to tif vifwport).
     * dbllfd in tif <dodf>JTbblf</dodf> (wifn tif tbblf is bddfd to tif vifwport).
     * dbllfd in tif <dodf>JTbblf</dodf> (wifn tif tbblf is bddfd to tif vifwport).
     * dbllfd in tif <dodf>JTbblf</dodf> (wifn tif tbblf is bddfd to tif vifwport).
     * dbllfd in tif <dodf>JTbblf</dodf> (wifn tif tbblf is bddfd to tif vifwport).
     * <dodf>JTbblf</dodf>'s <dodf>bddNotify</dodf> mftiod in turn dblls tiis mftiod,
     * <dodf>JTbblf</dodf>'s <dodf>bddNotify</dodf> mftiod in turn dblls tiis mftiod,
     * <dodf>JTbblf</dodf>'s <dodf>bddNotify</dodf> mftiod in turn dblls tiis mftiod,
     * <dodf>JTbblf</dodf>'s <dodf>bddNotify</dodf> mftiod in turn dblls tiis mftiod,
     * <dodf>JTbblf</dodf>'s <dodf>bddNotify</dodf> mftiod in turn dblls tiis mftiod,
     * wiidi is protfdtfd so tibt tiis dffbult instbllbtion prodfdurf dbn
     * wiidi is protfdtfd so tibt tiis dffbult instbllbtion prodfdurf dbn
     * wiidi is protfdtfd so tibt tiis dffbult instbllbtion prodfdurf dbn
     * wiidi is protfdtfd so tibt tiis dffbult instbllbtion prodfdurf dbn
     * wiidi is protfdtfd so tibt tiis dffbult instbllbtion prodfdurf dbn
     * bf ovfrriddfn by b subdlbss.
     * bf ovfrriddfn by b subdlbss.
     * bf ovfrriddfn by b subdlbss.
     * bf ovfrriddfn by b subdlbss.
     * bf ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @sff #bddNotify
     * @sff #bddNotify
     * @sff #bddNotify
     * @sff #bddNotify
     * @sff #bddNotify
     */
     */
     */
     */
     */
    protfdtfd void donfigurfEndlosingSdrollPbnf() {
    protfdtfd void donfigurfEndlosingSdrollPbnf() {
    protfdtfd void donfigurfEndlosingSdrollPbnf() {
    protfdtfd void donfigurfEndlosingSdrollPbnf() {
    protfdtfd void donfigurfEndlosingSdrollPbnf() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                }
                }
                }
                }
                }
                sdrollPbnf.sftColumnHfbdfrVifw(gftTbblfHfbdfr());
                sdrollPbnf.sftColumnHfbdfrVifw(gftTbblfHfbdfr());
                sdrollPbnf.sftColumnHfbdfrVifw(gftTbblfHfbdfr());
                sdrollPbnf.sftColumnHfbdfrVifw(gftTbblfHfbdfr());
                sdrollPbnf.sftColumnHfbdfrVifw(gftTbblfHfbdfr());
                // donfigurf tif sdrollpbnf for bny LAF dfpfndfnt sfttings
                // donfigurf tif sdrollpbnf for bny LAF dfpfndfnt sfttings
                // donfigurf tif sdrollpbnf for bny LAF dfpfndfnt sfttings
                // donfigurf tif sdrollpbnf for bny LAF dfpfndfnt sfttings
                // donfigurf tif sdrollpbnf for bny LAF dfpfndfnt sfttings
                donfigurfEndlosingSdrollPbnfUI();
                donfigurfEndlosingSdrollPbnfUI();
                donfigurfEndlosingSdrollPbnfUI();
                donfigurfEndlosingSdrollPbnfUI();
                donfigurfEndlosingSdrollPbnfUI();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Tiis is b sub-pbrt of donfigurfEndlosingSdrollPbnf() tibt donfigurfs
     * Tiis is b sub-pbrt of donfigurfEndlosingSdrollPbnf() tibt donfigurfs
     * Tiis is b sub-pbrt of donfigurfEndlosingSdrollPbnf() tibt donfigurfs
     * Tiis is b sub-pbrt of donfigurfEndlosingSdrollPbnf() tibt donfigurfs
     * Tiis is b sub-pbrt of donfigurfEndlosingSdrollPbnf() tibt donfigurfs
     * bnytiing on tif sdrollpbnf tibt mby dibngf wifn tif look bnd fffl
     * bnytiing on tif sdrollpbnf tibt mby dibngf wifn tif look bnd fffl
     * bnytiing on tif sdrollpbnf tibt mby dibngf wifn tif look bnd fffl
     * bnytiing on tif sdrollpbnf tibt mby dibngf wifn tif look bnd fffl
     * bnytiing on tif sdrollpbnf tibt mby dibngf wifn tif look bnd fffl
     * dibngfs. It nffdfd to bf split out from donfigurfEndlosingSdrollPbnf() so
     * dibngfs. It nffdfd to bf split out from donfigurfEndlosingSdrollPbnf() so
     * dibngfs. It nffdfd to bf split out from donfigurfEndlosingSdrollPbnf() so
     * dibngfs. It nffdfd to bf split out from donfigurfEndlosingSdrollPbnf() so
     * dibngfs. It nffdfd to bf split out from donfigurfEndlosingSdrollPbnf() so
     * tibt it dbn bf dbllfd from updbtfUI() wifn tif LAF dibngfs witiout
     * tibt it dbn bf dbllfd from updbtfUI() wifn tif LAF dibngfs witiout
     * tibt it dbn bf dbllfd from updbtfUI() wifn tif LAF dibngfs witiout
     * tibt it dbn bf dbllfd from updbtfUI() wifn tif LAF dibngfs witiout
     * tibt it dbn bf dbllfd from updbtfUI() wifn tif LAF dibngfs witiout
     * dbusing tif rfgrfssion found in bug 6687962. Tiis wbs bfdbusf updbtfUI()
     * dbusing tif rfgrfssion found in bug 6687962. Tiis wbs bfdbusf updbtfUI()
     * dbusing tif rfgrfssion found in bug 6687962. Tiis wbs bfdbusf updbtfUI()
     * dbusing tif rfgrfssion found in bug 6687962. Tiis wbs bfdbusf updbtfUI()
     * dbusing tif rfgrfssion found in bug 6687962. Tiis wbs bfdbusf updbtfUI()
     * is dbllfd from tif donstrudtor wiidi tifn dbusfd
     * is dbllfd from tif donstrudtor wiidi tifn dbusfd
     * is dbllfd from tif donstrudtor wiidi tifn dbusfd
     * is dbllfd from tif donstrudtor wiidi tifn dbusfd
     * is dbllfd from tif donstrudtor wiidi tifn dbusfd
     * donfigurfEndlosingSdrollPbnf() to bf dbllfd by tif donstrudtor wiidi
     * donfigurfEndlosingSdrollPbnf() to bf dbllfd by tif donstrudtor wiidi
     * donfigurfEndlosingSdrollPbnf() to bf dbllfd by tif donstrudtor wiidi
     * donfigurfEndlosingSdrollPbnf() to bf dbllfd by tif donstrudtor wiidi
     * donfigurfEndlosingSdrollPbnf() to bf dbllfd by tif donstrudtor wiidi
     * dibngfs its dontrbdt for bny subdlbss tibt ovfrridfs it. So by splitting
     * dibngfs its dontrbdt for bny subdlbss tibt ovfrridfs it. So by splitting
     * dibngfs its dontrbdt for bny subdlbss tibt ovfrridfs it. So by splitting
     * dibngfs its dontrbdt for bny subdlbss tibt ovfrridfs it. So by splitting
     * dibngfs its dontrbdt for bny subdlbss tibt ovfrridfs it. So by splitting
     * it out in tiis wby donfigurfEndlosingSdrollPbnfUI() dbn bf dbllfd boti
     * it out in tiis wby donfigurfEndlosingSdrollPbnfUI() dbn bf dbllfd boti
     * it out in tiis wby donfigurfEndlosingSdrollPbnfUI() dbn bf dbllfd boti
     * it out in tiis wby donfigurfEndlosingSdrollPbnfUI() dbn bf dbllfd boti
     * it out in tiis wby donfigurfEndlosingSdrollPbnfUI() dbn bf dbllfd boti
     * from donfigurfEndlosingSdrollPbnf() bnd updbtfUI() in b sbff mbnor.
     * from donfigurfEndlosingSdrollPbnf() bnd updbtfUI() in b sbff mbnor.
     * from donfigurfEndlosingSdrollPbnf() bnd updbtfUI() in b sbff mbnor.
     * from donfigurfEndlosingSdrollPbnf() bnd updbtfUI() in b sbff mbnor.
     * from donfigurfEndlosingSdrollPbnf() bnd updbtfUI() in b sbff mbnor.
     */
     */
     */
     */
     */
    privbtf void donfigurfEndlosingSdrollPbnfUI() {
    privbtf void donfigurfEndlosingSdrollPbnfUI() {
    privbtf void donfigurfEndlosingSdrollPbnfUI() {
    privbtf void donfigurfEndlosingSdrollPbnfUI() {
    privbtf void donfigurfEndlosingSdrollPbnfUI() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                }
                }
                }
                }
                }
                //  sdrollPbnf.gftVifwport().sftBbdkingStorfEnbblfd(truf);
                //  sdrollPbnf.gftVifwport().sftBbdkingStorfEnbblfd(truf);
                //  sdrollPbnf.gftVifwport().sftBbdkingStorfEnbblfd(truf);
                //  sdrollPbnf.gftVifwport().sftBbdkingStorfEnbblfd(truf);
                //  sdrollPbnf.gftVifwport().sftBbdkingStorfEnbblfd(truf);
                Bordfr bordfr = sdrollPbnf.gftBordfr();
                Bordfr bordfr = sdrollPbnf.gftBordfr();
                Bordfr bordfr = sdrollPbnf.gftBordfr();
                Bordfr bordfr = sdrollPbnf.gftBordfr();
                Bordfr bordfr = sdrollPbnf.gftBordfr();
                if (bordfr == null || bordfr instbndfof UIRfsourdf) {
                if (bordfr == null || bordfr instbndfof UIRfsourdf) {
                if (bordfr == null || bordfr instbndfof UIRfsourdf) {
                if (bordfr == null || bordfr instbndfof UIRfsourdf) {
                if (bordfr == null || bordfr instbndfof UIRfsourdf) {
                    Bordfr sdrollPbnfBordfr =
                    Bordfr sdrollPbnfBordfr =
                    Bordfr sdrollPbnfBordfr =
                    Bordfr sdrollPbnfBordfr =
                    Bordfr sdrollPbnfBordfr =
                        UIMbnbgfr.gftBordfr("Tbblf.sdrollPbnfBordfr");
                        UIMbnbgfr.gftBordfr("Tbblf.sdrollPbnfBordfr");
                        UIMbnbgfr.gftBordfr("Tbblf.sdrollPbnfBordfr");
                        UIMbnbgfr.gftBordfr("Tbblf.sdrollPbnfBordfr");
                        UIMbnbgfr.gftBordfr("Tbblf.sdrollPbnfBordfr");
                    if (sdrollPbnfBordfr != null) {
                    if (sdrollPbnfBordfr != null) {
                    if (sdrollPbnfBordfr != null) {
                    if (sdrollPbnfBordfr != null) {
                    if (sdrollPbnfBordfr != null) {
                        sdrollPbnf.sftBordfr(sdrollPbnfBordfr);
                        sdrollPbnf.sftBordfr(sdrollPbnfBordfr);
                        sdrollPbnf.sftBordfr(sdrollPbnfBordfr);
                        sdrollPbnf.sftBordfr(sdrollPbnfBordfr);
                        sdrollPbnf.sftBordfr(sdrollPbnfBordfr);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                // bdd JSdrollBbr dornfr domponfnt if bvbilbblf from LAF bnd not blrfbdy sft by tif usfr
                // bdd JSdrollBbr dornfr domponfnt if bvbilbblf from LAF bnd not blrfbdy sft by tif usfr
                // bdd JSdrollBbr dornfr domponfnt if bvbilbblf from LAF bnd not blrfbdy sft by tif usfr
                // bdd JSdrollBbr dornfr domponfnt if bvbilbblf from LAF bnd not blrfbdy sft by tif usfr
                // bdd JSdrollBbr dornfr domponfnt if bvbilbblf from LAF bnd not blrfbdy sft by tif usfr
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                if (dornfr == null || dornfr instbndfof UIRfsourdf){
                if (dornfr == null || dornfr instbndfof UIRfsourdf){
                if (dornfr == null || dornfr instbndfof UIRfsourdf){
                if (dornfr == null || dornfr instbndfof UIRfsourdf){
                if (dornfr == null || dornfr instbndfof UIRfsourdf){
                    dornfr = null;
                    dornfr = null;
                    dornfr = null;
                    dornfr = null;
                    dornfr = null;
                    try {
                    try {
                    try {
                    try {
                    try {
                        dornfr = (Componfnt) UIMbnbgfr.gft(
                        dornfr = (Componfnt) UIMbnbgfr.gft(
                        dornfr = (Componfnt) UIMbnbgfr.gft(
                        dornfr = (Componfnt) UIMbnbgfr.gft(
                        dornfr = (Componfnt) UIMbnbgfr.gft(
                                "Tbblf.sdrollPbnfCornfrComponfnt");
                                "Tbblf.sdrollPbnfCornfrComponfnt");
                                "Tbblf.sdrollPbnfCornfrComponfnt");
                                "Tbblf.sdrollPbnfCornfrComponfnt");
                                "Tbblf.sdrollPbnfCornfrComponfnt");
                    } dbtdi (Exdfption f) {
                    } dbtdi (Exdfption f) {
                    } dbtdi (Exdfption f) {
                    } dbtdi (Exdfption f) {
                    } dbtdi (Exdfption f) {
                        // just ignorf bnd don't sft dornfr
                        // just ignorf bnd don't sft dornfr
                        // just ignorf bnd don't sft dornfr
                        // just ignorf bnd don't sft dornfr
                        // just ignorf bnd don't sft dornfr
                    }
                    }
                    }
                    }
                    }
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                            dornfr);
                            dornfr);
                            dornfr);
                            dornfr);
                            dornfr);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cblls tif <dodf>undonfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>undonfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>undonfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>undonfigurfEndlosingSdrollPbnf</dodf> mftiod.
     * Cblls tif <dodf>undonfigurfEndlosingSdrollPbnf</dodf> mftiod.
     *
     *
     *
     *
     *
     * @sff #undonfigurfEndlosingSdrollPbnf
     * @sff #undonfigurfEndlosingSdrollPbnf
     * @sff #undonfigurfEndlosingSdrollPbnf
     * @sff #undonfigurfEndlosingSdrollPbnf
     * @sff #undonfigurfEndlosingSdrollPbnf
     */
     */
     */
     */
     */
    publid void rfmovfNotify() {
    publid void rfmovfNotify() {
    publid void rfmovfNotify() {
    publid void rfmovfNotify() {
    publid void rfmovfNotify() {
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        undonfigurfEndlosingSdrollPbnf();
        undonfigurfEndlosingSdrollPbnf();
        undonfigurfEndlosingSdrollPbnf();
        undonfigurfEndlosingSdrollPbnf();
        undonfigurfEndlosingSdrollPbnf();
        supfr.rfmovfNotify();
        supfr.rfmovfNotify();
        supfr.rfmovfNotify();
        supfr.rfmovfNotify();
        supfr.rfmovfNotify();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfvfrsfs tif ffffdt of <dodf>donfigurfEndlosingSdrollPbnf</dodf>
     * Rfvfrsfs tif ffffdt of <dodf>donfigurfEndlosingSdrollPbnf</dodf>
     * Rfvfrsfs tif ffffdt of <dodf>donfigurfEndlosingSdrollPbnf</dodf>
     * Rfvfrsfs tif ffffdt of <dodf>donfigurfEndlosingSdrollPbnf</dodf>
     * Rfvfrsfs tif ffffdt of <dodf>donfigurfEndlosingSdrollPbnf</dodf>
     * by rfplbding tif <dodf>dolumnHfbdfrVifw</dodf> of tif fndlosing
     * by rfplbding tif <dodf>dolumnHfbdfrVifw</dodf> of tif fndlosing
     * by rfplbding tif <dodf>dolumnHfbdfrVifw</dodf> of tif fndlosing
     * by rfplbding tif <dodf>dolumnHfbdfrVifw</dodf> of tif fndlosing
     * by rfplbding tif <dodf>dolumnHfbdfrVifw</dodf> of tif fndlosing
     * sdroll pbnf witi <dodf>null</dodf>. <dodf>JTbblf</dodf>'s
     * sdroll pbnf witi <dodf>null</dodf>. <dodf>JTbblf</dodf>'s
     * sdroll pbnf witi <dodf>null</dodf>. <dodf>JTbblf</dodf>'s
     * sdroll pbnf witi <dodf>null</dodf>. <dodf>JTbblf</dodf>'s
     * sdroll pbnf witi <dodf>null</dodf>. <dodf>JTbblf</dodf>'s
     * <dodf>rfmovfNotify</dodf> mftiod dblls
     * <dodf>rfmovfNotify</dodf> mftiod dblls
     * <dodf>rfmovfNotify</dodf> mftiod dblls
     * <dodf>rfmovfNotify</dodf> mftiod dblls
     * <dodf>rfmovfNotify</dodf> mftiod dblls
     * tiis mftiod, wiidi is protfdtfd so tibt tiis dffbult uninstbllbtion
     * tiis mftiod, wiidi is protfdtfd so tibt tiis dffbult uninstbllbtion
     * tiis mftiod, wiidi is protfdtfd so tibt tiis dffbult uninstbllbtion
     * tiis mftiod, wiidi is protfdtfd so tibt tiis dffbult uninstbllbtion
     * tiis mftiod, wiidi is protfdtfd so tibt tiis dffbult uninstbllbtion
     * prodfdurf dbn bf ovfrriddfn by b subdlbss.
     * prodfdurf dbn bf ovfrriddfn by b subdlbss.
     * prodfdurf dbn bf ovfrriddfn by b subdlbss.
     * prodfdurf dbn bf ovfrriddfn by b subdlbss.
     * prodfdurf dbn bf ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @sff #rfmovfNotify
     * @sff #rfmovfNotify
     * @sff #rfmovfNotify
     * @sff #rfmovfNotify
     * @sff #rfmovfNotify
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sff #donfigurfEndlosingSdrollPbnf
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    protfdtfd void undonfigurfEndlosingSdrollPbnf() {
    protfdtfd void undonfigurfEndlosingSdrollPbnf() {
    protfdtfd void undonfigurfEndlosingSdrollPbnf() {
    protfdtfd void undonfigurfEndlosingSdrollPbnf() {
    protfdtfd void undonfigurfEndlosingSdrollPbnf() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            JVifwport port = (JVifwport) pbrfnt;
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            Contbinfr gp = port.gftPbrfnt();
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
            if (gp instbndfof JSdrollPbnf) {
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                JSdrollPbnf sdrollPbnf = (JSdrollPbnf)gp;
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // Mbkf dfrtbin wf brf tif vifwPort's vifw bnd not, for
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // fxbmplf, tif rowHfbdfrVifw of tif sdrollPbnf -
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                // bn implfmfntor of fixfd dolumns migit do tiis.
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                JVifwport vifwport = sdrollPbnf.gftVifwport();
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                if (vifwport == null ||
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                        SwingUtilitifs.gftUnwrbppfdVifw(vifwport) != tiis) {
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                }
                }
                }
                }
                }
                sdrollPbnf.sftColumnHfbdfrVifw(null);
                sdrollPbnf.sftColumnHfbdfrVifw(null);
                sdrollPbnf.sftColumnHfbdfrVifw(null);
                sdrollPbnf.sftColumnHfbdfrVifw(null);
                sdrollPbnf.sftColumnHfbdfrVifw(null);
                // rfmovf SdrollPbnf dornfr if onf wbs bddfd by tif LAF
                // rfmovf SdrollPbnf dornfr if onf wbs bddfd by tif LAF
                // rfmovf SdrollPbnf dornfr if onf wbs bddfd by tif LAF
                // rfmovf SdrollPbnf dornfr if onf wbs bddfd by tif LAF
                // rfmovf SdrollPbnf dornfr if onf wbs bddfd by tif LAF
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                Componfnt dornfr =
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                        sdrollPbnf.gftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER);
                if (dornfr instbndfof UIRfsourdf){
                if (dornfr instbndfof UIRfsourdf){
                if (dornfr instbndfof UIRfsourdf){
                if (dornfr instbndfof UIRfsourdf){
                if (dornfr instbndfof UIRfsourdf){
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                    sdrollPbnf.sftCornfr(JSdrollPbnf.UPPER_TRAILING_CORNER,
                            null);
                            null);
                            null);
                            null);
                            null);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
            if (!isRowHfigitSft) {
            if (!isRowHfigitSft) {
            if (!isRowHfigitSft) {
            if (!isRowHfigitSft) {
            if (!isRowHfigitSft) {
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                isRowHfigitSft = fblsf;
                isRowHfigitSft = fblsf;
                isRowHfigitSft = fblsf;
                isRowHfigitSft = fblsf;
                isRowHfigitSft = fblsf;
            }
            }
            }
            }
            }
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
        supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
        supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
        supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
        supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
    }
    }
    }
    }
    }





//
//
//
//
//
// Stbtid Mftiods
// Stbtid Mftiods
// Stbtid Mftiods
// Stbtid Mftiods
// Stbtid Mftiods
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Equivblfnt to <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * Equivblfnt to <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * Equivblfnt to <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * Equivblfnt to <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * Equivblfnt to <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm bTbblf b {@dodf JTbblf} to bf usfd for tif sdroll pbnf
     * @pbrbm bTbblf b {@dodf JTbblf} to bf usfd for tif sdroll pbnf
     * @pbrbm bTbblf b {@dodf JTbblf} to bf usfd for tif sdroll pbnf
     * @pbrbm bTbblf b {@dodf JTbblf} to bf usfd for tif sdroll pbnf
     * @pbrbm bTbblf b {@dodf JTbblf} to bf usfd for tif sdroll pbnf
     * @rfturn b {@dodf JSdrollPbnf} drfbtfd using {@dodf bTbblf}
     * @rfturn b {@dodf JSdrollPbnf} drfbtfd using {@dodf bTbblf}
     * @rfturn b {@dodf JSdrollPbnf} drfbtfd using {@dodf bTbblf}
     * @rfturn b {@dodf JSdrollPbnf} drfbtfd using {@dodf bTbblf}
     * @rfturn b {@dodf JSdrollPbnf} drfbtfd using {@dodf bTbblf}
     * @dfprfdbtfd As of Swing vfrsion 1.0.2,
     * @dfprfdbtfd As of Swing vfrsion 1.0.2,
     * @dfprfdbtfd As of Swing vfrsion 1.0.2,
     * @dfprfdbtfd As of Swing vfrsion 1.0.2,
     * @dfprfdbtfd As of Swing vfrsion 1.0.2,
     * rfplbdfd by <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * rfplbdfd by <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * rfplbdfd by <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * rfplbdfd by <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     * rfplbdfd by <dodf>nfw JSdrollPbnf(bTbblf)</dodf>.
     */
     */
     */
     */
     */
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    stbtid publid JSdrollPbnf drfbtfSdrollPbnfForTbblf(JTbblf bTbblf) {
    stbtid publid JSdrollPbnf drfbtfSdrollPbnfForTbblf(JTbblf bTbblf) {
    stbtid publid JSdrollPbnf drfbtfSdrollPbnfForTbblf(JTbblf bTbblf) {
    stbtid publid JSdrollPbnf drfbtfSdrollPbnfForTbblf(JTbblf bTbblf) {
    stbtid publid JSdrollPbnf drfbtfSdrollPbnfForTbblf(JTbblf bTbblf) {
        rfturn nfw JSdrollPbnf(bTbblf);
        rfturn nfw JSdrollPbnf(bTbblf);
        rfturn nfw JSdrollPbnf(bTbblf);
        rfturn nfw JSdrollPbnf(bTbblf);
        rfturn nfw JSdrollPbnf(bTbblf);
    }
    }
    }
    }
    }





//
//
//
//
//
// Tbblf Attributfs
// Tbblf Attributfs
// Tbblf Attributfs
// Tbblf Attributfs
// Tbblf Attributfs
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>tbblfHfbdfr</dodf> working witi tiis <dodf>JTbblf</dodf> to <dodf>nfwHfbdfr</dodf>.
     * Sfts tif <dodf>tbblfHfbdfr</dodf> working witi tiis <dodf>JTbblf</dodf> to <dodf>nfwHfbdfr</dodf>.
     * Sfts tif <dodf>tbblfHfbdfr</dodf> working witi tiis <dodf>JTbblf</dodf> to <dodf>nfwHfbdfr</dodf>.
     * Sfts tif <dodf>tbblfHfbdfr</dodf> working witi tiis <dodf>JTbblf</dodf> to <dodf>nfwHfbdfr</dodf>.
     * Sfts tif <dodf>tbblfHfbdfr</dodf> working witi tiis <dodf>JTbblf</dodf> to <dodf>nfwHfbdfr</dodf>.
     * It is lfgbl to ibvf b <dodf>null</dodf> <dodf>tbblfHfbdfr</dodf>.
     * It is lfgbl to ibvf b <dodf>null</dodf> <dodf>tbblfHfbdfr</dodf>.
     * It is lfgbl to ibvf b <dodf>null</dodf> <dodf>tbblfHfbdfr</dodf>.
     * It is lfgbl to ibvf b <dodf>null</dodf> <dodf>tbblfHfbdfr</dodf>.
     * It is lfgbl to ibvf b <dodf>null</dodf> <dodf>tbblfHfbdfr</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   tbblfHfbdfr                       nfw tbblfHfbdfr
     * @pbrbm   tbblfHfbdfr                       nfw tbblfHfbdfr
     * @pbrbm   tbblfHfbdfr                       nfw tbblfHfbdfr
     * @pbrbm   tbblfHfbdfr                       nfw tbblfHfbdfr
     * @pbrbm   tbblfHfbdfr                       nfw tbblfHfbdfr
     * @sff     #gftTbblfHfbdfr
     * @sff     #gftTbblfHfbdfr
     * @sff     #gftTbblfHfbdfr
     * @sff     #gftTbblfHfbdfr
     * @sff     #gftTbblfHfbdfr
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif JTbblfHfbdfr instbndf wiidi rfndfrs tif dolumn ifbdfrs.
     *  dfsdription: Tif JTbblfHfbdfr instbndf wiidi rfndfrs tif dolumn ifbdfrs.
     *  dfsdription: Tif JTbblfHfbdfr instbndf wiidi rfndfrs tif dolumn ifbdfrs.
     *  dfsdription: Tif JTbblfHfbdfr instbndf wiidi rfndfrs tif dolumn ifbdfrs.
     *  dfsdription: Tif JTbblfHfbdfr instbndf wiidi rfndfrs tif dolumn ifbdfrs.
     */
     */
     */
     */
     */
    publid void sftTbblfHfbdfr(JTbblfHfbdfr tbblfHfbdfr) {
    publid void sftTbblfHfbdfr(JTbblfHfbdfr tbblfHfbdfr) {
    publid void sftTbblfHfbdfr(JTbblfHfbdfr tbblfHfbdfr) {
    publid void sftTbblfHfbdfr(JTbblfHfbdfr tbblfHfbdfr) {
    publid void sftTbblfHfbdfr(JTbblfHfbdfr tbblfHfbdfr) {
        if (tiis.tbblfHfbdfr != tbblfHfbdfr) {
        if (tiis.tbblfHfbdfr != tbblfHfbdfr) {
        if (tiis.tbblfHfbdfr != tbblfHfbdfr) {
        if (tiis.tbblfHfbdfr != tbblfHfbdfr) {
        if (tiis.tbblfHfbdfr != tbblfHfbdfr) {
            JTbblfHfbdfr old = tiis.tbblfHfbdfr;
            JTbblfHfbdfr old = tiis.tbblfHfbdfr;
            JTbblfHfbdfr old = tiis.tbblfHfbdfr;
            JTbblfHfbdfr old = tiis.tbblfHfbdfr;
            JTbblfHfbdfr old = tiis.tbblfHfbdfr;
            // Rflfbsf tif old ifbdfr
            // Rflfbsf tif old ifbdfr
            // Rflfbsf tif old ifbdfr
            // Rflfbsf tif old ifbdfr
            // Rflfbsf tif old ifbdfr
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
                old.sftTbblf(null);
                old.sftTbblf(null);
                old.sftTbblf(null);
                old.sftTbblf(null);
                old.sftTbblf(null);
            }
            }
            }
            }
            }
            tiis.tbblfHfbdfr = tbblfHfbdfr;
            tiis.tbblfHfbdfr = tbblfHfbdfr;
            tiis.tbblfHfbdfr = tbblfHfbdfr;
            tiis.tbblfHfbdfr = tbblfHfbdfr;
            tiis.tbblfHfbdfr = tbblfHfbdfr;
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
                tbblfHfbdfr.sftTbblf(tiis);
                tbblfHfbdfr.sftTbblf(tiis);
                tbblfHfbdfr.sftTbblf(tiis);
                tbblfHfbdfr.sftTbblf(tiis);
                tbblfHfbdfr.sftTbblf(tiis);
            }
            }
            }
            }
            }
            firfPropfrtyCibngf("tbblfHfbdfr", old, tbblfHfbdfr);
            firfPropfrtyCibngf("tbblfHfbdfr", old, tbblfHfbdfr);
            firfPropfrtyCibngf("tbblfHfbdfr", old, tbblfHfbdfr);
            firfPropfrtyCibngf("tbblfHfbdfr", old, tbblfHfbdfr);
            firfPropfrtyCibngf("tbblfHfbdfr", old, tbblfHfbdfr);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>tbblfHfbdfr</dodf> usfd by tiis <dodf>JTbblf</dodf>.
     * Rfturns tif <dodf>tbblfHfbdfr</dodf> usfd by tiis <dodf>JTbblf</dodf>.
     * Rfturns tif <dodf>tbblfHfbdfr</dodf> usfd by tiis <dodf>JTbblf</dodf>.
     * Rfturns tif <dodf>tbblfHfbdfr</dodf> usfd by tiis <dodf>JTbblf</dodf>.
     * Rfturns tif <dodf>tbblfHfbdfr</dodf> usfd by tiis <dodf>JTbblf</dodf>.
     *
     *
     *
     *
     *
     * @rfturn  tif <dodf>tbblfHfbdfr</dodf> usfd by tiis tbblf
     * @rfturn  tif <dodf>tbblfHfbdfr</dodf> usfd by tiis tbblf
     * @rfturn  tif <dodf>tbblfHfbdfr</dodf> usfd by tiis tbblf
     * @rfturn  tif <dodf>tbblfHfbdfr</dodf> usfd by tiis tbblf
     * @rfturn  tif <dodf>tbblfHfbdfr</dodf> usfd by tiis tbblf
     * @sff     #sftTbblfHfbdfr
     * @sff     #sftTbblfHfbdfr
     * @sff     #sftTbblfHfbdfr
     * @sff     #sftTbblfHfbdfr
     * @sff     #sftTbblfHfbdfr
     */
     */
     */
     */
     */
    publid JTbblfHfbdfr gftTbblfHfbdfr() {
    publid JTbblfHfbdfr gftTbblfHfbdfr() {
    publid JTbblfHfbdfr gftTbblfHfbdfr() {
    publid JTbblfHfbdfr gftTbblfHfbdfr() {
    publid JTbblfHfbdfr gftTbblfHfbdfr() {
        rfturn tbblfHfbdfr;
        rfturn tbblfHfbdfr;
        rfturn tbblfHfbdfr;
        rfturn tbblfHfbdfr;
        rfturn tbblfHfbdfr;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif ifigit, in pixfls, of bll dflls to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit, in pixfls, of bll dflls to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit, in pixfls, of bll dflls to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit, in pixfls, of bll dflls to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit, in pixfls, of bll dflls to <dodf>rowHfigit</dodf>,
     * rfvblidbtfs, bnd rfpbints.
     * rfvblidbtfs, bnd rfpbints.
     * rfvblidbtfs, bnd rfpbints.
     * rfvblidbtfs, bnd rfpbints.
     * rfvblidbtfs, bnd rfpbints.
     * Tif ifigit of tif dflls will bf fqubl to tif row ifigit minus
     * Tif ifigit of tif dflls will bf fqubl to tif row ifigit minus
     * Tif ifigit of tif dflls will bf fqubl to tif row ifigit minus
     * Tif ifigit of tif dflls will bf fqubl to tif row ifigit minus
     * Tif ifigit of tif dflls will bf fqubl to tif row ifigit minus
     * tif row mbrgin.
     * tif row mbrgin.
     * tif row mbrgin.
     * tif row mbrgin.
     * tif row mbrgin.
     *
     *
     *
     *
     *
     * @pbrbm   rowHfigit                       nfw row ifigit
     * @pbrbm   rowHfigit                       nfw row ifigit
     * @pbrbm   rowHfigit                       nfw row ifigit
     * @pbrbm   rowHfigit                       nfw row ifigit
     * @pbrbm   rowHfigit                       nfw row ifigit
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     * @sff     #gftRowHfigit
     * @sff     #gftRowHfigit
     * @sff     #gftRowHfigit
     * @sff     #gftRowHfigit
     * @sff     #gftRowHfigit
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif ifigit of tif spfdififd row.
     *  dfsdription: Tif ifigit of tif spfdififd row.
     *  dfsdription: Tif ifigit of tif spfdififd row.
     *  dfsdription: Tif ifigit of tif spfdififd row.
     *  dfsdription: Tif ifigit of tif spfdififd row.
     */
     */
     */
     */
     */
    publid void sftRowHfigit(int rowHfigit) {
    publid void sftRowHfigit(int rowHfigit) {
    publid void sftRowHfigit(int rowHfigit) {
    publid void sftRowHfigit(int rowHfigit) {
    publid void sftRowHfigit(int rowHfigit) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
        }
        }
        }
        }
        }
        int old = tiis.rowHfigit;
        int old = tiis.rowHfigit;
        int old = tiis.rowHfigit;
        int old = tiis.rowHfigit;
        int old = tiis.rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
            sortMbnbgfr.modflRowSizfs = null;
            sortMbnbgfr.modflRowSizfs = null;
            sortMbnbgfr.modflRowSizfs = null;
            sortMbnbgfr.modflRowSizfs = null;
            sortMbnbgfr.modflRowSizfs = null;
        }
        }
        }
        }
        }
        isRowHfigitSft = truf;
        isRowHfigitSft = truf;
        isRowHfigitSft = truf;
        isRowHfigitSft = truf;
        isRowHfigitSft = truf;
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        firfPropfrtyCibngf("rowHfigit", old, rowHfigit);
        firfPropfrtyCibngf("rowHfigit", old, rowHfigit);
        firfPropfrtyCibngf("rowHfigit", old, rowHfigit);
        firfPropfrtyCibngf("rowHfigit", old, rowHfigit);
        firfPropfrtyCibngf("rowHfigit", old, rowHfigit);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif ifigit of b tbblf row, in pixfls.
     * Rfturns tif ifigit of b tbblf row, in pixfls.
     * Rfturns tif ifigit of b tbblf row, in pixfls.
     * Rfturns tif ifigit of b tbblf row, in pixfls.
     * Rfturns tif ifigit of b tbblf row, in pixfls.
     *
     *
     *
     *
     *
     * @rfturn  tif ifigit in pixfls of b tbblf row
     * @rfturn  tif ifigit in pixfls of b tbblf row
     * @rfturn  tif ifigit in pixfls of b tbblf row
     * @rfturn  tif ifigit in pixfls of b tbblf row
     * @rfturn  tif ifigit in pixfls of b tbblf row
     * @sff     #sftRowHfigit
     * @sff     #sftRowHfigit
     * @sff     #sftRowHfigit
     * @sff     #sftRowHfigit
     * @sff     #sftRowHfigit
     */
     */
     */
     */
     */
    publid int gftRowHfigit() {
    publid int gftRowHfigit() {
    publid int gftRowHfigit() {
    publid int gftRowHfigit() {
    publid int gftRowHfigit() {
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
    }
    }
    }
    }
    }





    privbtf SizfSfqufndf gftRowModfl() {
    privbtf SizfSfqufndf gftRowModfl() {
    privbtf SizfSfqufndf gftRowModfl() {
    privbtf SizfSfqufndf gftRowModfl() {
    privbtf SizfSfqufndf gftRowModfl() {
        if (rowModfl == null) {
        if (rowModfl == null) {
        if (rowModfl == null) {
        if (rowModfl == null) {
        if (rowModfl == null) {
            rowModfl = nfw SizfSfqufndf(gftRowCount(), gftRowHfigit());
            rowModfl = nfw SizfSfqufndf(gftRowCount(), gftRowHfigit());
            rowModfl = nfw SizfSfqufndf(gftRowCount(), gftRowHfigit());
            rowModfl = nfw SizfSfqufndf(gftRowCount(), gftRowHfigit());
            rowModfl = nfw SizfSfqufndf(gftRowCount(), gftRowHfigit());
        }
        }
        }
        }
        }
        rfturn rowModfl;
        rfturn rowModfl;
        rfturn rowModfl;
        rfturn rowModfl;
        rfturn rowModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif ifigit for <dodf>row</dodf> to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit for <dodf>row</dodf> to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit for <dodf>row</dodf> to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit for <dodf>row</dodf> to <dodf>rowHfigit</dodf>,
     * Sfts tif ifigit for <dodf>row</dodf> to <dodf>rowHfigit</dodf>,
     * rfvblidbtfs, bnd rfpbints. Tif ifigit of tif dflls in tiis row
     * rfvblidbtfs, bnd rfpbints. Tif ifigit of tif dflls in tiis row
     * rfvblidbtfs, bnd rfpbints. Tif ifigit of tif dflls in tiis row
     * rfvblidbtfs, bnd rfpbints. Tif ifigit of tif dflls in tiis row
     * rfvblidbtfs, bnd rfpbints. Tif ifigit of tif dflls in tiis row
     * will bf fqubl to tif row ifigit minus tif row mbrgin.
     * will bf fqubl to tif row ifigit minus tif row mbrgin.
     * will bf fqubl to tif row ifigit minus tif row mbrgin.
     * will bf fqubl to tif row ifigit minus tif row mbrgin.
     * will bf fqubl to tif row ifigit minus tif row mbrgin.
     *
     *
     *
     *
     *
     * @pbrbm   row                             tif row wiosf ifigit is bfing
     * @pbrbm   row                             tif row wiosf ifigit is bfing
     * @pbrbm   row                             tif row wiosf ifigit is bfing
     * @pbrbm   row                             tif row wiosf ifigit is bfing
     * @pbrbm   row                             tif row wiosf ifigit is bfing
                                                dibngfd
                                                dibngfd
                                                dibngfd
                                                dibngfd
                                                dibngfd
     * @pbrbm   rowHfigit                       nfw row ifigit, in pixfls
     * @pbrbm   rowHfigit                       nfw row ifigit, in pixfls
     * @pbrbm   rowHfigit                       nfw row ifigit, in pixfls
     * @pbrbm   rowHfigit                       nfw row ifigit, in pixfls
     * @pbrbm   rowHfigit                       nfw row ifigit, in pixfls
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>rowHfigit</dodf> is
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     *                                          lfss tibn 1
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif ifigit in pixfls of tif dflls in <dodf>row</dodf>
     *  dfsdription: Tif ifigit in pixfls of tif dflls in <dodf>row</dodf>
     *  dfsdription: Tif ifigit in pixfls of tif dflls in <dodf>row</dodf>
     *  dfsdription: Tif ifigit in pixfls of tif dflls in <dodf>row</dodf>
     *  dfsdription: Tif ifigit in pixfls of tif dflls in <dodf>row</dodf>
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    publid void sftRowHfigit(int row, int rowHfigit) {
    publid void sftRowHfigit(int row, int rowHfigit) {
    publid void sftRowHfigit(int row, int rowHfigit) {
    publid void sftRowHfigit(int row, int rowHfigit) {
    publid void sftRowHfigit(int row, int rowHfigit) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
        if (rowHfigit <= 0) {
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
            tirow nfw IllfgblArgumfntExdfption("Nfw row ifigit lfss tibn 1");
        }
        }
        }
        }
        }
        gftRowModfl().sftSizf(row, rowHfigit);
        gftRowModfl().sftSizf(row, rowHfigit);
        gftRowModfl().sftSizf(row, rowHfigit);
        gftRowModfl().sftSizf(row, rowHfigit);
        gftRowModfl().sftSizf(row, rowHfigit);
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
            sortMbnbgfr.sftVifwRowHfigit(row, rowHfigit);
            sortMbnbgfr.sftVifwRowHfigit(row, rowHfigit);
            sortMbnbgfr.sftVifwRowHfigit(row, rowHfigit);
            sortMbnbgfr.sftVifwRowHfigit(row, rowHfigit);
            sortMbnbgfr.sftVifwRowHfigit(row, rowHfigit);
        }
        }
        }
        }
        }
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif ifigit, in pixfls, of tif dflls in <dodf>row</dodf>.
     * Rfturns tif ifigit, in pixfls, of tif dflls in <dodf>row</dodf>.
     * Rfturns tif ifigit, in pixfls, of tif dflls in <dodf>row</dodf>.
     * Rfturns tif ifigit, in pixfls, of tif dflls in <dodf>row</dodf>.
     * Rfturns tif ifigit, in pixfls, of tif dflls in <dodf>row</dodf>.
     * @pbrbm   row              tif row wiosf ifigit is to bf rfturnfd
     * @pbrbm   row              tif row wiosf ifigit is to bf rfturnfd
     * @pbrbm   row              tif row wiosf ifigit is to bf rfturnfd
     * @pbrbm   row              tif row wiosf ifigit is to bf rfturnfd
     * @pbrbm   row              tif row wiosf ifigit is to bf rfturnfd
     * @rfturn tif ifigit, in pixfls, of tif dflls in tif row
     * @rfturn tif ifigit, in pixfls, of tif dflls in tif row
     * @rfturn tif ifigit, in pixfls, of tif dflls in tif row
     * @rfturn tif ifigit, in pixfls, of tif dflls in tif row
     * @rfturn tif ifigit, in pixfls, of tif dflls in tif row
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    publid int gftRowHfigit(int row) {
    publid int gftRowHfigit(int row) {
    publid int gftRowHfigit(int row) {
    publid int gftRowHfigit(int row) {
    publid int gftRowHfigit(int row) {
        rfturn (rowModfl == null) ? gftRowHfigit() : rowModfl.gftSizf(row);
        rfturn (rowModfl == null) ? gftRowHfigit() : rowModfl.gftSizf(row);
        rfturn (rowModfl == null) ? gftRowHfigit() : rowModfl.gftSizf(row);
        rfturn (rowModfl == null) ? gftRowHfigit() : rowModfl.gftSizf(row);
        rfturn (rowModfl == null) ? gftRowHfigit() : rowModfl.gftSizf(row);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif bmount of fmpty spbdf bftwffn dflls in bdjbdfnt rows.
     * Sfts tif bmount of fmpty spbdf bftwffn dflls in bdjbdfnt rows.
     * Sfts tif bmount of fmpty spbdf bftwffn dflls in bdjbdfnt rows.
     * Sfts tif bmount of fmpty spbdf bftwffn dflls in bdjbdfnt rows.
     * Sfts tif bmount of fmpty spbdf bftwffn dflls in bdjbdfnt rows.
     *
     *
     *
     *
     *
     * @pbrbm  rowMbrgin  tif numbfr of pixfls bftwffn dflls in b row
     * @pbrbm  rowMbrgin  tif numbfr of pixfls bftwffn dflls in b row
     * @pbrbm  rowMbrgin  tif numbfr of pixfls bftwffn dflls in b row
     * @pbrbm  rowMbrgin  tif numbfr of pixfls bftwffn dflls in b row
     * @pbrbm  rowMbrgin  tif numbfr of pixfls bftwffn dflls in b row
     * @sff     #gftRowMbrgin
     * @sff     #gftRowMbrgin
     * @sff     #gftRowMbrgin
     * @sff     #gftRowMbrgin
     * @sff     #gftRowMbrgin
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif bmount of spbdf bftwffn dflls.
     *  dfsdription: Tif bmount of spbdf bftwffn dflls.
     *  dfsdription: Tif bmount of spbdf bftwffn dflls.
     *  dfsdription: Tif bmount of spbdf bftwffn dflls.
     *  dfsdription: Tif bmount of spbdf bftwffn dflls.
     */
     */
     */
     */
     */
    publid void sftRowMbrgin(int rowMbrgin) {
    publid void sftRowMbrgin(int rowMbrgin) {
    publid void sftRowMbrgin(int rowMbrgin) {
    publid void sftRowMbrgin(int rowMbrgin) {
    publid void sftRowMbrgin(int rowMbrgin) {
        int old = tiis.rowMbrgin;
        int old = tiis.rowMbrgin;
        int old = tiis.rowMbrgin;
        int old = tiis.rowMbrgin;
        int old = tiis.rowMbrgin;
        tiis.rowMbrgin = rowMbrgin;
        tiis.rowMbrgin = rowMbrgin;
        tiis.rowMbrgin = rowMbrgin;
        tiis.rowMbrgin = rowMbrgin;
        tiis.rowMbrgin = rowMbrgin;
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        firfPropfrtyCibngf("rowMbrgin", old, rowMbrgin);
        firfPropfrtyCibngf("rowMbrgin", old, rowMbrgin);
        firfPropfrtyCibngf("rowMbrgin", old, rowMbrgin);
        firfPropfrtyCibngf("rowMbrgin", old, rowMbrgin);
        firfPropfrtyCibngf("rowMbrgin", old, rowMbrgin);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Gfts tif bmount of fmpty spbdf, in pixfls, bftwffn dflls. Equivblfnt to:
     * Gfts tif bmount of fmpty spbdf, in pixfls, bftwffn dflls. Equivblfnt to:
     * Gfts tif bmount of fmpty spbdf, in pixfls, bftwffn dflls. Equivblfnt to:
     * Gfts tif bmount of fmpty spbdf, in pixfls, bftwffn dflls. Equivblfnt to:
     * Gfts tif bmount of fmpty spbdf, in pixfls, bftwffn dflls. Equivblfnt to:
     * <dodf>gftIntfrdfllSpbding().ifigit</dodf>.
     * <dodf>gftIntfrdfllSpbding().ifigit</dodf>.
     * <dodf>gftIntfrdfllSpbding().ifigit</dodf>.
     * <dodf>gftIntfrdfllSpbding().ifigit</dodf>.
     * <dodf>gftIntfrdfllSpbding().ifigit</dodf>.
     * @rfturn tif numbfr of pixfls bftwffn dflls in b row
     * @rfturn tif numbfr of pixfls bftwffn dflls in b row
     * @rfturn tif numbfr of pixfls bftwffn dflls in b row
     * @rfturn tif numbfr of pixfls bftwffn dflls in b row
     * @rfturn tif numbfr of pixfls bftwffn dflls in b row
     *
     *
     *
     *
     *
     * @sff     #sftRowMbrgin
     * @sff     #sftRowMbrgin
     * @sff     #sftRowMbrgin
     * @sff     #sftRowMbrgin
     * @sff     #sftRowMbrgin
     */
     */
     */
     */
     */
    publid int gftRowMbrgin() {
    publid int gftRowMbrgin() {
    publid int gftRowMbrgin() {
    publid int gftRowMbrgin() {
    publid int gftRowMbrgin() {
        rfturn rowMbrgin;
        rfturn rowMbrgin;
        rfturn rowMbrgin;
        rfturn rowMbrgin;
        rfturn rowMbrgin;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>rowMbrgin</dodf> bnd tif <dodf>dolumnMbrgin</dodf> --
     * Sfts tif <dodf>rowMbrgin</dodf> bnd tif <dodf>dolumnMbrgin</dodf> --
     * Sfts tif <dodf>rowMbrgin</dodf> bnd tif <dodf>dolumnMbrgin</dodf> --
     * Sfts tif <dodf>rowMbrgin</dodf> bnd tif <dodf>dolumnMbrgin</dodf> --
     * Sfts tif <dodf>rowMbrgin</dodf> bnd tif <dodf>dolumnMbrgin</dodf> --
     * tif ifigit bnd widti of tif spbdf bftwffn dflls -- to
     * tif ifigit bnd widti of tif spbdf bftwffn dflls -- to
     * tif ifigit bnd widti of tif spbdf bftwffn dflls -- to
     * tif ifigit bnd widti of tif spbdf bftwffn dflls -- to
     * tif ifigit bnd widti of tif spbdf bftwffn dflls -- to
     * <dodf>intfrdfllSpbding</dodf>.
     * <dodf>intfrdfllSpbding</dodf>.
     * <dodf>intfrdfllSpbding</dodf>.
     * <dodf>intfrdfllSpbding</dodf>.
     * <dodf>intfrdfllSpbding</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   intfrdfllSpbding        b <dodf>Dimfnsion</dodf>
     * @pbrbm   intfrdfllSpbding        b <dodf>Dimfnsion</dodf>
     * @pbrbm   intfrdfllSpbding        b <dodf>Dimfnsion</dodf>
     * @pbrbm   intfrdfllSpbding        b <dodf>Dimfnsion</dodf>
     * @pbrbm   intfrdfllSpbding        b <dodf>Dimfnsion</dodf>
     *                                  spfdifying tif nfw widti
     *                                  spfdifying tif nfw widti
     *                                  spfdifying tif nfw widti
     *                                  spfdifying tif nfw widti
     *                                  spfdifying tif nfw widti
     *                                  bnd ifigit bftwffn dflls
     *                                  bnd ifigit bftwffn dflls
     *                                  bnd ifigit bftwffn dflls
     *                                  bnd ifigit bftwffn dflls
     *                                  bnd ifigit bftwffn dflls
     * @sff     #gftIntfrdfllSpbding
     * @sff     #gftIntfrdfllSpbding
     * @sff     #gftIntfrdfllSpbding
     * @sff     #gftIntfrdfllSpbding
     * @sff     #gftIntfrdfllSpbding
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  dfsdription: Tif spbding bftwffn tif dflls,
     *  dfsdription: Tif spbding bftwffn tif dflls,
     *  dfsdription: Tif spbding bftwffn tif dflls,
     *  dfsdription: Tif spbding bftwffn tif dflls,
     *  dfsdription: Tif spbding bftwffn tif dflls,
     *               drbwn in tif bbdkground dolor of tif JTbblf.
     *               drbwn in tif bbdkground dolor of tif JTbblf.
     *               drbwn in tif bbdkground dolor of tif JTbblf.
     *               drbwn in tif bbdkground dolor of tif JTbblf.
     *               drbwn in tif bbdkground dolor of tif JTbblf.
     */
     */
     */
     */
     */
    publid void sftIntfrdfllSpbding(Dimfnsion intfrdfllSpbding) {
    publid void sftIntfrdfllSpbding(Dimfnsion intfrdfllSpbding) {
    publid void sftIntfrdfllSpbding(Dimfnsion intfrdfllSpbding) {
    publid void sftIntfrdfllSpbding(Dimfnsion intfrdfllSpbding) {
    publid void sftIntfrdfllSpbding(Dimfnsion intfrdfllSpbding) {
        // Sft tif rowMbrgin ifrf bnd dolumnMbrgin in tif TbblfColumnModfl
        // Sft tif rowMbrgin ifrf bnd dolumnMbrgin in tif TbblfColumnModfl
        // Sft tif rowMbrgin ifrf bnd dolumnMbrgin in tif TbblfColumnModfl
        // Sft tif rowMbrgin ifrf bnd dolumnMbrgin in tif TbblfColumnModfl
        // Sft tif rowMbrgin ifrf bnd dolumnMbrgin in tif TbblfColumnModfl
        sftRowMbrgin(intfrdfllSpbding.ifigit);
        sftRowMbrgin(intfrdfllSpbding.ifigit);
        sftRowMbrgin(intfrdfllSpbding.ifigit);
        sftRowMbrgin(intfrdfllSpbding.ifigit);
        sftRowMbrgin(intfrdfllSpbding.ifigit);
        gftColumnModfl().sftColumnMbrgin(intfrdfllSpbding.widti);
        gftColumnModfl().sftColumnMbrgin(intfrdfllSpbding.widti);
        gftColumnModfl().sftColumnMbrgin(intfrdfllSpbding.widti);
        gftColumnModfl().sftColumnMbrgin(intfrdfllSpbding.widti);
        gftColumnModfl().sftColumnMbrgin(intfrdfllSpbding.widti);





        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif iorizontbl bnd vfrtidbl spbdf bftwffn dflls.
     * Rfturns tif iorizontbl bnd vfrtidbl spbdf bftwffn dflls.
     * Rfturns tif iorizontbl bnd vfrtidbl spbdf bftwffn dflls.
     * Rfturns tif iorizontbl bnd vfrtidbl spbdf bftwffn dflls.
     * Rfturns tif iorizontbl bnd vfrtidbl spbdf bftwffn dflls.
     * Tif dffbult spbding is look bnd fffl dfpfndfnt.
     * Tif dffbult spbding is look bnd fffl dfpfndfnt.
     * Tif dffbult spbding is look bnd fffl dfpfndfnt.
     * Tif dffbult spbding is look bnd fffl dfpfndfnt.
     * Tif dffbult spbding is look bnd fffl dfpfndfnt.
     *
     *
     *
     *
     *
     * @rfturn  tif iorizontbl bnd vfrtidbl spbding bftwffn dflls
     * @rfturn  tif iorizontbl bnd vfrtidbl spbding bftwffn dflls
     * @rfturn  tif iorizontbl bnd vfrtidbl spbding bftwffn dflls
     * @rfturn  tif iorizontbl bnd vfrtidbl spbding bftwffn dflls
     * @rfturn  tif iorizontbl bnd vfrtidbl spbding bftwffn dflls
     * @sff     #sftIntfrdfllSpbding
     * @sff     #sftIntfrdfllSpbding
     * @sff     #sftIntfrdfllSpbding
     * @sff     #sftIntfrdfllSpbding
     * @sff     #sftIntfrdfllSpbding
     */
     */
     */
     */
     */
    publid Dimfnsion gftIntfrdfllSpbding() {
    publid Dimfnsion gftIntfrdfllSpbding() {
    publid Dimfnsion gftIntfrdfllSpbding() {
    publid Dimfnsion gftIntfrdfllSpbding() {
    publid Dimfnsion gftIntfrdfllSpbding() {
        rfturn nfw Dimfnsion(gftColumnModfl().gftColumnMbrgin(), rowMbrgin);
        rfturn nfw Dimfnsion(gftColumnModfl().gftColumnMbrgin(), rowMbrgin);
        rfturn nfw Dimfnsion(gftColumnModfl().gftColumnMbrgin(), rowMbrgin);
        rfturn nfw Dimfnsion(gftColumnModfl().gftColumnMbrgin(), rowMbrgin);
        rfturn nfw Dimfnsion(gftColumnModfl().gftColumnMbrgin(), rowMbrgin);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif dolor usfd to drbw grid linfs to <dodf>gridColor</dodf> bnd rfdisplbys.
     * Sfts tif dolor usfd to drbw grid linfs to <dodf>gridColor</dodf> bnd rfdisplbys.
     * Sfts tif dolor usfd to drbw grid linfs to <dodf>gridColor</dodf> bnd rfdisplbys.
     * Sfts tif dolor usfd to drbw grid linfs to <dodf>gridColor</dodf> bnd rfdisplbys.
     * Sfts tif dolor usfd to drbw grid linfs to <dodf>gridColor</dodf> bnd rfdisplbys.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     *
     *
     *
     *
     *
     * @pbrbm   gridColor                       tif nfw dolor of tif grid linfs
     * @pbrbm   gridColor                       tif nfw dolor of tif grid linfs
     * @pbrbm   gridColor                       tif nfw dolor of tif grid linfs
     * @pbrbm   gridColor                       tif nfw dolor of tif grid linfs
     * @pbrbm   gridColor                       tif nfw dolor of tif grid linfs
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>gridColor</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>gridColor</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>gridColor</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>gridColor</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>gridColor</dodf> is <dodf>null</dodf>
     * @sff     #gftGridColor
     * @sff     #gftGridColor
     * @sff     #gftGridColor
     * @sff     #gftGridColor
     * @sff     #gftGridColor
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif grid dolor.
     *  dfsdription: Tif grid dolor.
     *  dfsdription: Tif grid dolor.
     *  dfsdription: Tif grid dolor.
     *  dfsdription: Tif grid dolor.
     */
     */
     */
     */
     */
    publid void sftGridColor(Color gridColor) {
    publid void sftGridColor(Color gridColor) {
    publid void sftGridColor(Color gridColor) {
    publid void sftGridColor(Color gridColor) {
    publid void sftGridColor(Color gridColor) {
        if (gridColor == null) {
        if (gridColor == null) {
        if (gridColor == null) {
        if (gridColor == null) {
        if (gridColor == null) {
            tirow nfw IllfgblArgumfntExdfption("Nfw dolor is null");
            tirow nfw IllfgblArgumfntExdfption("Nfw dolor is null");
            tirow nfw IllfgblArgumfntExdfption("Nfw dolor is null");
            tirow nfw IllfgblArgumfntExdfption("Nfw dolor is null");
            tirow nfw IllfgblArgumfntExdfption("Nfw dolor is null");
        }
        }
        }
        }
        }
        Color old = tiis.gridColor;
        Color old = tiis.gridColor;
        Color old = tiis.gridColor;
        Color old = tiis.gridColor;
        Color old = tiis.gridColor;
        tiis.gridColor = gridColor;
        tiis.gridColor = gridColor;
        tiis.gridColor = gridColor;
        tiis.gridColor = gridColor;
        tiis.gridColor = gridColor;
        firfPropfrtyCibngf("gridColor", old, gridColor);
        firfPropfrtyCibngf("gridColor", old, gridColor);
        firfPropfrtyCibngf("gridColor", old, gridColor);
        firfPropfrtyCibngf("gridColor", old, gridColor);
        firfPropfrtyCibngf("gridColor", old, gridColor);
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dolor usfd to drbw grid linfs.
     * Rfturns tif dolor usfd to drbw grid linfs.
     * Rfturns tif dolor usfd to drbw grid linfs.
     * Rfturns tif dolor usfd to drbw grid linfs.
     * Rfturns tif dolor usfd to drbw grid linfs.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     * Tif dffbult dolor is look bnd fffl dfpfndfnt.
     *
     *
     *
     *
     *
     * @rfturn  tif dolor usfd to drbw grid linfs
     * @rfturn  tif dolor usfd to drbw grid linfs
     * @rfturn  tif dolor usfd to drbw grid linfs
     * @rfturn  tif dolor usfd to drbw grid linfs
     * @rfturn  tif dolor usfd to drbw grid linfs
     * @sff     #sftGridColor
     * @sff     #sftGridColor
     * @sff     #sftGridColor
     * @sff     #sftGridColor
     * @sff     #sftGridColor
     */
     */
     */
     */
     */
    publid Color gftGridColor() {
    publid Color gftGridColor() {
    publid Color gftGridColor() {
    publid Color gftGridColor() {
    publid Color gftGridColor() {
        rfturn gridColor;
        rfturn gridColor;
        rfturn gridColor;
        rfturn gridColor;
        rfturn gridColor;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     *  Sfts wiftifr tif tbblf drbws grid linfs bround dflls.
     *  Sfts wiftifr tif tbblf drbws grid linfs bround dflls.
     *  Sfts wiftifr tif tbblf drbws grid linfs bround dflls.
     *  Sfts wiftifr tif tbblf drbws grid linfs bround dflls.
     *  Sfts wiftifr tif tbblf drbws grid linfs bround dflls.
     *  If <dodf>siowGrid</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowGrid</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowGrid</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowGrid</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowGrid</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  Tifrf is no <dodf>gftSiowGrid</dodf> mftiod bs tiis stbtf is ifld
     *  Tifrf is no <dodf>gftSiowGrid</dodf> mftiod bs tiis stbtf is ifld
     *  Tifrf is no <dodf>gftSiowGrid</dodf> mftiod bs tiis stbtf is ifld
     *  Tifrf is no <dodf>gftSiowGrid</dodf> mftiod bs tiis stbtf is ifld
     *  Tifrf is no <dodf>gftSiowGrid</dodf> mftiod bs tiis stbtf is ifld
     *  in two vbribblfs -- <dodf>siowHorizontblLinfs</dodf> bnd <dodf>siowVfrtidblLinfs</dodf> --
     *  in two vbribblfs -- <dodf>siowHorizontblLinfs</dodf> bnd <dodf>siowVfrtidblLinfs</dodf> --
     *  in two vbribblfs -- <dodf>siowHorizontblLinfs</dodf> bnd <dodf>siowVfrtidblLinfs</dodf> --
     *  in two vbribblfs -- <dodf>siowHorizontblLinfs</dodf> bnd <dodf>siowVfrtidblLinfs</dodf> --
     *  in two vbribblfs -- <dodf>siowHorizontblLinfs</dodf> bnd <dodf>siowVfrtidblLinfs</dodf> --
     *  fbdi of wiidi dbn bf qufrifd indfpfndfntly.
     *  fbdi of wiidi dbn bf qufrifd indfpfndfntly.
     *  fbdi of wiidi dbn bf qufrifd indfpfndfntly.
     *  fbdi of wiidi dbn bf qufrifd indfpfndfntly.
     *  fbdi of wiidi dbn bf qufrifd indfpfndfntly.
     *
     *
     *
     *
     *
     * @pbrbm   siowGrid                 truf if tbblf vifw siould drbw grid linfs
     * @pbrbm   siowGrid                 truf if tbblf vifw siould drbw grid linfs
     * @pbrbm   siowGrid                 truf if tbblf vifw siould drbw grid linfs
     * @pbrbm   siowGrid                 truf if tbblf vifw siould drbw grid linfs
     * @pbrbm   siowGrid                 truf if tbblf vifw siould drbw grid linfs
     *
     *
     *
     *
     *
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  dfsdription: Tif dolor usfd to drbw tif grid linfs.
     *  dfsdription: Tif dolor usfd to drbw tif grid linfs.
     *  dfsdription: Tif dolor usfd to drbw tif grid linfs.
     *  dfsdription: Tif dolor usfd to drbw tif grid linfs.
     *  dfsdription: Tif dolor usfd to drbw tif grid linfs.
     */
     */
     */
     */
     */
    publid void sftSiowGrid(boolfbn siowGrid) {
    publid void sftSiowGrid(boolfbn siowGrid) {
    publid void sftSiowGrid(boolfbn siowGrid) {
    publid void sftSiowGrid(boolfbn siowGrid) {
    publid void sftSiowGrid(boolfbn siowGrid) {
        sftSiowHorizontblLinfs(siowGrid);
        sftSiowHorizontblLinfs(siowGrid);
        sftSiowHorizontblLinfs(siowGrid);
        sftSiowHorizontblLinfs(siowGrid);
        sftSiowHorizontblLinfs(siowGrid);
        sftSiowVfrtidblLinfs(siowGrid);
        sftSiowVfrtidblLinfs(siowGrid);
        sftSiowVfrtidblLinfs(siowGrid);
        sftSiowVfrtidblLinfs(siowGrid);
        sftSiowVfrtidblLinfs(siowGrid);





        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     *  Sfts wiftifr tif tbblf drbws iorizontbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws iorizontbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws iorizontbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws iorizontbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws iorizontbl linfs bftwffn dflls.
     *  If <dodf>siowHorizontblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowHorizontblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowHorizontblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowHorizontblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowHorizontblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *
     *
     *
     *
     *
     * @pbrbm   siowHorizontblLinfs      truf if tbblf vifw siould drbw iorizontbl linfs
     * @pbrbm   siowHorizontblLinfs      truf if tbblf vifw siould drbw iorizontbl linfs
     * @pbrbm   siowHorizontblLinfs      truf if tbblf vifw siould drbw iorizontbl linfs
     * @pbrbm   siowHorizontblLinfs      truf if tbblf vifw siould drbw iorizontbl linfs
     * @pbrbm   siowHorizontblLinfs      truf if tbblf vifw siould drbw iorizontbl linfs
     * @sff     #gftSiowHorizontblLinfs
     * @sff     #gftSiowHorizontblLinfs
     * @sff     #gftSiowHorizontblLinfs
     * @sff     #gftSiowHorizontblLinfs
     * @sff     #gftSiowHorizontblLinfs
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Wiftifr iorizontbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr iorizontbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr iorizontbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr iorizontbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr iorizontbl linfs siould bf drbwn in bftwffn tif dflls.
     */
     */
     */
     */
     */
    publid void sftSiowHorizontblLinfs(boolfbn siowHorizontblLinfs) {
    publid void sftSiowHorizontblLinfs(boolfbn siowHorizontblLinfs) {
    publid void sftSiowHorizontblLinfs(boolfbn siowHorizontblLinfs) {
    publid void sftSiowHorizontblLinfs(boolfbn siowHorizontblLinfs) {
    publid void sftSiowHorizontblLinfs(boolfbn siowHorizontblLinfs) {
        boolfbn old = tiis.siowHorizontblLinfs;
        boolfbn old = tiis.siowHorizontblLinfs;
        boolfbn old = tiis.siowHorizontblLinfs;
        boolfbn old = tiis.siowHorizontblLinfs;
        boolfbn old = tiis.siowHorizontblLinfs;
        tiis.siowHorizontblLinfs = siowHorizontblLinfs;
        tiis.siowHorizontblLinfs = siowHorizontblLinfs;
        tiis.siowHorizontblLinfs = siowHorizontblLinfs;
        tiis.siowHorizontblLinfs = siowHorizontblLinfs;
        tiis.siowHorizontblLinfs = siowHorizontblLinfs;
        firfPropfrtyCibngf("siowHorizontblLinfs", old, siowHorizontblLinfs);
        firfPropfrtyCibngf("siowHorizontblLinfs", old, siowHorizontblLinfs);
        firfPropfrtyCibngf("siowHorizontblLinfs", old, siowHorizontblLinfs);
        firfPropfrtyCibngf("siowHorizontblLinfs", old, siowHorizontblLinfs);
        firfPropfrtyCibngf("siowHorizontblLinfs", old, siowHorizontblLinfs);





        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     *  Sfts wiftifr tif tbblf drbws vfrtidbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws vfrtidbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws vfrtidbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws vfrtidbl linfs bftwffn dflls.
     *  Sfts wiftifr tif tbblf drbws vfrtidbl linfs bftwffn dflls.
     *  If <dodf>siowVfrtidblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowVfrtidblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowVfrtidblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowVfrtidblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *  If <dodf>siowVfrtidblLinfs</dodf> is truf it dofs; if it is fblsf it dofsn't.
     *
     *
     *
     *
     *
     * @pbrbm   siowVfrtidblLinfs              truf if tbblf vifw siould drbw vfrtidbl linfs
     * @pbrbm   siowVfrtidblLinfs              truf if tbblf vifw siould drbw vfrtidbl linfs
     * @pbrbm   siowVfrtidblLinfs              truf if tbblf vifw siould drbw vfrtidbl linfs
     * @pbrbm   siowVfrtidblLinfs              truf if tbblf vifw siould drbw vfrtidbl linfs
     * @pbrbm   siowVfrtidblLinfs              truf if tbblf vifw siould drbw vfrtidbl linfs
     * @sff     #gftSiowVfrtidblLinfs
     * @sff     #gftSiowVfrtidblLinfs
     * @sff     #gftSiowVfrtidblLinfs
     * @sff     #gftSiowVfrtidblLinfs
     * @sff     #gftSiowVfrtidblLinfs
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowGrid
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Wiftifr vfrtidbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr vfrtidbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr vfrtidbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr vfrtidbl linfs siould bf drbwn in bftwffn tif dflls.
     *  dfsdription: Wiftifr vfrtidbl linfs siould bf drbwn in bftwffn tif dflls.
     */
     */
     */
     */
     */
    publid void sftSiowVfrtidblLinfs(boolfbn siowVfrtidblLinfs) {
    publid void sftSiowVfrtidblLinfs(boolfbn siowVfrtidblLinfs) {
    publid void sftSiowVfrtidblLinfs(boolfbn siowVfrtidblLinfs) {
    publid void sftSiowVfrtidblLinfs(boolfbn siowVfrtidblLinfs) {
    publid void sftSiowVfrtidblLinfs(boolfbn siowVfrtidblLinfs) {
        boolfbn old = tiis.siowVfrtidblLinfs;
        boolfbn old = tiis.siowVfrtidblLinfs;
        boolfbn old = tiis.siowVfrtidblLinfs;
        boolfbn old = tiis.siowVfrtidblLinfs;
        boolfbn old = tiis.siowVfrtidblLinfs;
        tiis.siowVfrtidblLinfs = siowVfrtidblLinfs;
        tiis.siowVfrtidblLinfs = siowVfrtidblLinfs;
        tiis.siowVfrtidblLinfs = siowVfrtidblLinfs;
        tiis.siowVfrtidblLinfs = siowVfrtidblLinfs;
        tiis.siowVfrtidblLinfs = siowVfrtidblLinfs;
        firfPropfrtyCibngf("siowVfrtidblLinfs", old, siowVfrtidblLinfs);
        firfPropfrtyCibngf("siowVfrtidblLinfs", old, siowVfrtidblLinfs);
        firfPropfrtyCibngf("siowVfrtidblLinfs", old, siowVfrtidblLinfs);
        firfPropfrtyCibngf("siowVfrtidblLinfs", old, siowVfrtidblLinfs);
        firfPropfrtyCibngf("siowVfrtidblLinfs", old, siowVfrtidblLinfs);
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        // Rfdrbw
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     *
     *
     *
     *
     *
     * @rfturn  truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws iorizontbl linfs bftwffn dflls, fblsf if it
     *          dofsn't
     *          dofsn't
     *          dofsn't
     *          dofsn't
     *          dofsn't
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     * @sff     #sftSiowHorizontblLinfs
     */
     */
     */
     */
     */
    publid boolfbn gftSiowHorizontblLinfs() {
    publid boolfbn gftSiowHorizontblLinfs() {
    publid boolfbn gftSiowHorizontblLinfs() {
    publid boolfbn gftSiowHorizontblLinfs() {
    publid boolfbn gftSiowHorizontblLinfs() {
        rfturn siowHorizontblLinfs;
        rfturn siowHorizontblLinfs;
        rfturn siowHorizontblLinfs;
        rfturn siowHorizontblLinfs;
        rfturn siowHorizontblLinfs;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * Rfturns truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     * dofsn't. Tif dffbult vbluf is look bnd fffl dfpfndfnt.
     *
     *
     *
     *
     *
     * @rfturn  truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     * @rfturn  truf if tif tbblf drbws vfrtidbl linfs bftwffn dflls, fblsf if it
     *          dofsn't
     *          dofsn't
     *          dofsn't
     *          dofsn't
     *          dofsn't
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     * @sff     #sftSiowVfrtidblLinfs
     */
     */
     */
     */
     */
    publid boolfbn gftSiowVfrtidblLinfs() {
    publid boolfbn gftSiowVfrtidblLinfs() {
    publid boolfbn gftSiowVfrtidblLinfs() {
    publid boolfbn gftSiowVfrtidblLinfs() {
    publid boolfbn gftSiowVfrtidblLinfs() {
        rfturn siowVfrtidblLinfs;
        rfturn siowVfrtidblLinfs;
        rfturn siowVfrtidblLinfs;
        rfturn siowVfrtidblLinfs;
        rfturn siowVfrtidblLinfs;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif tbblf's buto rfsizf modf wifn tif tbblf is rfsizfd.  For furtifr
     * Sfts tif tbblf's buto rfsizf modf wifn tif tbblf is rfsizfd.  For furtifr
     * Sfts tif tbblf's buto rfsizf modf wifn tif tbblf is rfsizfd.  For furtifr
     * Sfts tif tbblf's buto rfsizf modf wifn tif tbblf is rfsizfd.  For furtifr
     * Sfts tif tbblf's buto rfsizf modf wifn tif tbblf is rfsizfd.  For furtifr
     * informbtion on iow tif difffrfnt rfsizf modfs work, sff
     * informbtion on iow tif difffrfnt rfsizf modfs work, sff
     * informbtion on iow tif difffrfnt rfsizf modfs work, sff
     * informbtion on iow tif difffrfnt rfsizf modfs work, sff
     * informbtion on iow tif difffrfnt rfsizf modfs work, sff
     * {@link #doLbyout}.
     * {@link #doLbyout}.
     * {@link #doLbyout}.
     * {@link #doLbyout}.
     * {@link #doLbyout}.
     *
     *
     *
     *
     *
     * @pbrbm   modf Onf of 5 lfgbl vblufs:
     * @pbrbm   modf Onf of 5 lfgbl vblufs:
     * @pbrbm   modf Onf of 5 lfgbl vblufs:
     * @pbrbm   modf Onf of 5 lfgbl vblufs:
     * @pbrbm   modf Onf of 5 lfgbl vblufs:
     *                   AUTO_RESIZE_OFF,
     *                   AUTO_RESIZE_OFF,
     *                   AUTO_RESIZE_OFF,
     *                   AUTO_RESIZE_OFF,
     *                   AUTO_RESIZE_OFF,
     *                   AUTO_RESIZE_NEXT_COLUMN,
     *                   AUTO_RESIZE_NEXT_COLUMN,
     *                   AUTO_RESIZE_NEXT_COLUMN,
     *                   AUTO_RESIZE_NEXT_COLUMN,
     *                   AUTO_RESIZE_NEXT_COLUMN,
     *                   AUTO_RESIZE_SUBSEQUENT_COLUMNS,
     *                   AUTO_RESIZE_SUBSEQUENT_COLUMNS,
     *                   AUTO_RESIZE_SUBSEQUENT_COLUMNS,
     *                   AUTO_RESIZE_SUBSEQUENT_COLUMNS,
     *                   AUTO_RESIZE_SUBSEQUENT_COLUMNS,
     *                   AUTO_RESIZE_LAST_COLUMN,
     *                   AUTO_RESIZE_LAST_COLUMN,
     *                   AUTO_RESIZE_LAST_COLUMN,
     *                   AUTO_RESIZE_LAST_COLUMN,
     *                   AUTO_RESIZE_LAST_COLUMN,
     *                   AUTO_RESIZE_ALL_COLUMNS
     *                   AUTO_RESIZE_ALL_COLUMNS
     *                   AUTO_RESIZE_ALL_COLUMNS
     *                   AUTO_RESIZE_ALL_COLUMNS
     *                   AUTO_RESIZE_ALL_COLUMNS
     *
     *
     *
     *
     *
     * @sff     #gftAutoRfsizfModf
     * @sff     #gftAutoRfsizfModf
     * @sff     #gftAutoRfsizfModf
     * @sff     #gftAutoRfsizfModf
     * @sff     #gftAutoRfsizfModf
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Wiftifr tif dolumns siould bdjust tifmsflvfs butombtidblly.
     *  dfsdription: Wiftifr tif dolumns siould bdjust tifmsflvfs butombtidblly.
     *  dfsdription: Wiftifr tif dolumns siould bdjust tifmsflvfs butombtidblly.
     *  dfsdription: Wiftifr tif dolumns siould bdjust tifmsflvfs butombtidblly.
     *  dfsdription: Wiftifr tif dolumns siould bdjust tifmsflvfs butombtidblly.
     *        fnum: AUTO_RESIZE_OFF                JTbblf.AUTO_RESIZE_OFF
     *        fnum: AUTO_RESIZE_OFF                JTbblf.AUTO_RESIZE_OFF
     *        fnum: AUTO_RESIZE_OFF                JTbblf.AUTO_RESIZE_OFF
     *        fnum: AUTO_RESIZE_OFF                JTbblf.AUTO_RESIZE_OFF
     *        fnum: AUTO_RESIZE_OFF                JTbblf.AUTO_RESIZE_OFF
     *              AUTO_RESIZE_NEXT_COLUMN        JTbblf.AUTO_RESIZE_NEXT_COLUMN
     *              AUTO_RESIZE_NEXT_COLUMN        JTbblf.AUTO_RESIZE_NEXT_COLUMN
     *              AUTO_RESIZE_NEXT_COLUMN        JTbblf.AUTO_RESIZE_NEXT_COLUMN
     *              AUTO_RESIZE_NEXT_COLUMN        JTbblf.AUTO_RESIZE_NEXT_COLUMN
     *              AUTO_RESIZE_NEXT_COLUMN        JTbblf.AUTO_RESIZE_NEXT_COLUMN
     *              AUTO_RESIZE_SUBSEQUENT_COLUMNS JTbblf.AUTO_RESIZE_SUBSEQUENT_COLUMNS
     *              AUTO_RESIZE_SUBSEQUENT_COLUMNS JTbblf.AUTO_RESIZE_SUBSEQUENT_COLUMNS
     *              AUTO_RESIZE_SUBSEQUENT_COLUMNS JTbblf.AUTO_RESIZE_SUBSEQUENT_COLUMNS
     *              AUTO_RESIZE_SUBSEQUENT_COLUMNS JTbblf.AUTO_RESIZE_SUBSEQUENT_COLUMNS
     *              AUTO_RESIZE_SUBSEQUENT_COLUMNS JTbblf.AUTO_RESIZE_SUBSEQUENT_COLUMNS
     *              AUTO_RESIZE_LAST_COLUMN        JTbblf.AUTO_RESIZE_LAST_COLUMN
     *              AUTO_RESIZE_LAST_COLUMN        JTbblf.AUTO_RESIZE_LAST_COLUMN
     *              AUTO_RESIZE_LAST_COLUMN        JTbblf.AUTO_RESIZE_LAST_COLUMN
     *              AUTO_RESIZE_LAST_COLUMN        JTbblf.AUTO_RESIZE_LAST_COLUMN
     *              AUTO_RESIZE_LAST_COLUMN        JTbblf.AUTO_RESIZE_LAST_COLUMN
     *              AUTO_RESIZE_ALL_COLUMNS        JTbblf.AUTO_RESIZE_ALL_COLUMNS
     *              AUTO_RESIZE_ALL_COLUMNS        JTbblf.AUTO_RESIZE_ALL_COLUMNS
     *              AUTO_RESIZE_ALL_COLUMNS        JTbblf.AUTO_RESIZE_ALL_COLUMNS
     *              AUTO_RESIZE_ALL_COLUMNS        JTbblf.AUTO_RESIZE_ALL_COLUMNS
     *              AUTO_RESIZE_ALL_COLUMNS        JTbblf.AUTO_RESIZE_ALL_COLUMNS
     */
     */
     */
     */
     */
    publid void sftAutoRfsizfModf(int modf) {
    publid void sftAutoRfsizfModf(int modf) {
    publid void sftAutoRfsizfModf(int modf) {
    publid void sftAutoRfsizfModf(int modf) {
    publid void sftAutoRfsizfModf(int modf) {
        if ((modf == AUTO_RESIZE_OFF) ||
        if ((modf == AUTO_RESIZE_OFF) ||
        if ((modf == AUTO_RESIZE_OFF) ||
        if ((modf == AUTO_RESIZE_OFF) ||
        if ((modf == AUTO_RESIZE_OFF) ||
            (modf == AUTO_RESIZE_NEXT_COLUMN) ||
            (modf == AUTO_RESIZE_NEXT_COLUMN) ||
            (modf == AUTO_RESIZE_NEXT_COLUMN) ||
            (modf == AUTO_RESIZE_NEXT_COLUMN) ||
            (modf == AUTO_RESIZE_NEXT_COLUMN) ||
            (modf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) ||
            (modf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) ||
            (modf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) ||
            (modf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) ||
            (modf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) ||
            (modf == AUTO_RESIZE_LAST_COLUMN) ||
            (modf == AUTO_RESIZE_LAST_COLUMN) ||
            (modf == AUTO_RESIZE_LAST_COLUMN) ||
            (modf == AUTO_RESIZE_LAST_COLUMN) ||
            (modf == AUTO_RESIZE_LAST_COLUMN) ||
            (modf == AUTO_RESIZE_ALL_COLUMNS)) {
            (modf == AUTO_RESIZE_ALL_COLUMNS)) {
            (modf == AUTO_RESIZE_ALL_COLUMNS)) {
            (modf == AUTO_RESIZE_ALL_COLUMNS)) {
            (modf == AUTO_RESIZE_ALL_COLUMNS)) {
            int old = butoRfsizfModf;
            int old = butoRfsizfModf;
            int old = butoRfsizfModf;
            int old = butoRfsizfModf;
            int old = butoRfsizfModf;
            butoRfsizfModf = modf;
            butoRfsizfModf = modf;
            butoRfsizfModf = modf;
            butoRfsizfModf = modf;
            butoRfsizfModf = modf;
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
                tbblfHfbdfr.rfsizfAndRfpbint();
                tbblfHfbdfr.rfsizfAndRfpbint();
                tbblfHfbdfr.rfsizfAndRfpbint();
                tbblfHfbdfr.rfsizfAndRfpbint();
                tbblfHfbdfr.rfsizfAndRfpbint();
            }
            }
            }
            }
            }
            firfPropfrtyCibngf("butoRfsizfModf", old, butoRfsizfModf);
            firfPropfrtyCibngf("butoRfsizfModf", old, butoRfsizfModf);
            firfPropfrtyCibngf("butoRfsizfModf", old, butoRfsizfModf);
            firfPropfrtyCibngf("butoRfsizfModf", old, butoRfsizfModf);
            firfPropfrtyCibngf("butoRfsizfModf", old, butoRfsizfModf);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif buto rfsizf modf of tif tbblf.  Tif dffbult modf
     * Rfturns tif buto rfsizf modf of tif tbblf.  Tif dffbult modf
     * Rfturns tif buto rfsizf modf of tif tbblf.  Tif dffbult modf
     * Rfturns tif buto rfsizf modf of tif tbblf.  Tif dffbult modf
     * Rfturns tif buto rfsizf modf of tif tbblf.  Tif dffbult modf
     * is AUTO_RESIZE_SUBSEQUENT_COLUMNS.
     * is AUTO_RESIZE_SUBSEQUENT_COLUMNS.
     * is AUTO_RESIZE_SUBSEQUENT_COLUMNS.
     * is AUTO_RESIZE_SUBSEQUENT_COLUMNS.
     * is AUTO_RESIZE_SUBSEQUENT_COLUMNS.
     *
     *
     *
     *
     *
     * @rfturn  tif butoRfsizfModf of tif tbblf
     * @rfturn  tif butoRfsizfModf of tif tbblf
     * @rfturn  tif butoRfsizfModf of tif tbblf
     * @rfturn  tif butoRfsizfModf of tif tbblf
     * @rfturn  tif butoRfsizfModf of tif tbblf
     *
     *
     *
     *
     *
     * @sff     #sftAutoRfsizfModf
     * @sff     #sftAutoRfsizfModf
     * @sff     #sftAutoRfsizfModf
     * @sff     #sftAutoRfsizfModf
     * @sff     #sftAutoRfsizfModf
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     * @sff     #doLbyout
     */
     */
     */
     */
     */
    publid int gftAutoRfsizfModf() {
    publid int gftAutoRfsizfModf() {
    publid int gftAutoRfsizfModf() {
    publid int gftAutoRfsizfModf() {
    publid int gftAutoRfsizfModf() {
        rfturn butoRfsizfModf;
        rfturn butoRfsizfModf;
        rfturn butoRfsizfModf;
        rfturn butoRfsizfModf;
        rfturn butoRfsizfModf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tiis tbblf's <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg.
     * Sfts tiis tbblf's <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg.
     * Sfts tiis tbblf's <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg.
     * Sfts tiis tbblf's <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg.
     * Sfts tiis tbblf's <dodf>butoCrfbtfColumnsFromModfl</dodf> flbg.
     * Tiis mftiod dblls <dodf>drfbtfDffbultColumnsFromModfl</dodf> if
     * Tiis mftiod dblls <dodf>drfbtfDffbultColumnsFromModfl</dodf> if
     * Tiis mftiod dblls <dodf>drfbtfDffbultColumnsFromModfl</dodf> if
     * Tiis mftiod dblls <dodf>drfbtfDffbultColumnsFromModfl</dodf> if
     * Tiis mftiod dblls <dodf>drfbtfDffbultColumnsFromModfl</dodf> if
     * <dodf>butoCrfbtfColumnsFromModfl</dodf> dibngfs from fblsf to truf.
     * <dodf>butoCrfbtfColumnsFromModfl</dodf> dibngfs from fblsf to truf.
     * <dodf>butoCrfbtfColumnsFromModfl</dodf> dibngfs from fblsf to truf.
     * <dodf>butoCrfbtfColumnsFromModfl</dodf> dibngfs from fblsf to truf.
     * <dodf>butoCrfbtfColumnsFromModfl</dodf> dibngfs from fblsf to truf.
     *
     *
     *
     *
     *
     * @pbrbm   butoCrfbtfColumnsFromModfl   truf if <dodf>JTbblf</dodf> siould butombtidblly drfbtf dolumns
     * @pbrbm   butoCrfbtfColumnsFromModfl   truf if <dodf>JTbblf</dodf> siould butombtidblly drfbtf dolumns
     * @pbrbm   butoCrfbtfColumnsFromModfl   truf if <dodf>JTbblf</dodf> siould butombtidblly drfbtf dolumns
     * @pbrbm   butoCrfbtfColumnsFromModfl   truf if <dodf>JTbblf</dodf> siould butombtidblly drfbtf dolumns
     * @pbrbm   butoCrfbtfColumnsFromModfl   truf if <dodf>JTbblf</dodf> siould butombtidblly drfbtf dolumns
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Autombtidblly populbtfs tif dolumnModfl wifn b nfw TbblfModfl is submittfd.
     *  dfsdription: Autombtidblly populbtfs tif dolumnModfl wifn b nfw TbblfModfl is submittfd.
     *  dfsdription: Autombtidblly populbtfs tif dolumnModfl wifn b nfw TbblfModfl is submittfd.
     *  dfsdription: Autombtidblly populbtfs tif dolumnModfl wifn b nfw TbblfModfl is submittfd.
     *  dfsdription: Autombtidblly populbtfs tif dolumnModfl wifn b nfw TbblfModfl is submittfd.
     */
     */
     */
     */
     */
    publid void sftAutoCrfbtfColumnsFromModfl(boolfbn butoCrfbtfColumnsFromModfl) {
    publid void sftAutoCrfbtfColumnsFromModfl(boolfbn butoCrfbtfColumnsFromModfl) {
    publid void sftAutoCrfbtfColumnsFromModfl(boolfbn butoCrfbtfColumnsFromModfl) {
    publid void sftAutoCrfbtfColumnsFromModfl(boolfbn butoCrfbtfColumnsFromModfl) {
    publid void sftAutoCrfbtfColumnsFromModfl(boolfbn butoCrfbtfColumnsFromModfl) {
        if (tiis.butoCrfbtfColumnsFromModfl != butoCrfbtfColumnsFromModfl) {
        if (tiis.butoCrfbtfColumnsFromModfl != butoCrfbtfColumnsFromModfl) {
        if (tiis.butoCrfbtfColumnsFromModfl != butoCrfbtfColumnsFromModfl) {
        if (tiis.butoCrfbtfColumnsFromModfl != butoCrfbtfColumnsFromModfl) {
        if (tiis.butoCrfbtfColumnsFromModfl != butoCrfbtfColumnsFromModfl) {
            boolfbn old = tiis.butoCrfbtfColumnsFromModfl;
            boolfbn old = tiis.butoCrfbtfColumnsFromModfl;
            boolfbn old = tiis.butoCrfbtfColumnsFromModfl;
            boolfbn old = tiis.butoCrfbtfColumnsFromModfl;
            boolfbn old = tiis.butoCrfbtfColumnsFromModfl;
            tiis.butoCrfbtfColumnsFromModfl = butoCrfbtfColumnsFromModfl;
            tiis.butoCrfbtfColumnsFromModfl = butoCrfbtfColumnsFromModfl;
            tiis.butoCrfbtfColumnsFromModfl = butoCrfbtfColumnsFromModfl;
            tiis.butoCrfbtfColumnsFromModfl = butoCrfbtfColumnsFromModfl;
            tiis.butoCrfbtfColumnsFromModfl = butoCrfbtfColumnsFromModfl;
            if (butoCrfbtfColumnsFromModfl) {
            if (butoCrfbtfColumnsFromModfl) {
            if (butoCrfbtfColumnsFromModfl) {
            if (butoCrfbtfColumnsFromModfl) {
            if (butoCrfbtfColumnsFromModfl) {
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
            }
            }
            }
            }
            }
            firfPropfrtyCibngf("butoCrfbtfColumnsFromModfl", old, butoCrfbtfColumnsFromModfl);
            firfPropfrtyCibngf("butoCrfbtfColumnsFromModfl", old, butoCrfbtfColumnsFromModfl);
            firfPropfrtyCibngf("butoCrfbtfColumnsFromModfl", old, butoCrfbtfColumnsFromModfl);
            firfPropfrtyCibngf("butoCrfbtfColumnsFromModfl", old, butoCrfbtfColumnsFromModfl);
            firfPropfrtyCibngf("butoCrfbtfColumnsFromModfl", old, butoCrfbtfColumnsFromModfl);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dftfrminfs wiftifr tif tbblf will drfbtf dffbult dolumns from tif modfl.
     * Dftfrminfs wiftifr tif tbblf will drfbtf dffbult dolumns from tif modfl.
     * Dftfrminfs wiftifr tif tbblf will drfbtf dffbult dolumns from tif modfl.
     * Dftfrminfs wiftifr tif tbblf will drfbtf dffbult dolumns from tif modfl.
     * Dftfrminfs wiftifr tif tbblf will drfbtf dffbult dolumns from tif modfl.
     * If truf, <dodf>sftModfl</dodf> will dlfbr bny fxisting dolumns bnd
     * If truf, <dodf>sftModfl</dodf> will dlfbr bny fxisting dolumns bnd
     * If truf, <dodf>sftModfl</dodf> will dlfbr bny fxisting dolumns bnd
     * If truf, <dodf>sftModfl</dodf> will dlfbr bny fxisting dolumns bnd
     * If truf, <dodf>sftModfl</dodf> will dlfbr bny fxisting dolumns bnd
     * drfbtf nfw dolumns from tif nfw modfl.  Also, if tif fvfnt in
     * drfbtf nfw dolumns from tif nfw modfl.  Also, if tif fvfnt in
     * drfbtf nfw dolumns from tif nfw modfl.  Also, if tif fvfnt in
     * drfbtf nfw dolumns from tif nfw modfl.  Also, if tif fvfnt in
     * drfbtf nfw dolumns from tif nfw modfl.  Also, if tif fvfnt in
     * tif <dodf>tbblfCibngfd</dodf> notifidbtion spfdififs tibt tif
     * tif <dodf>tbblfCibngfd</dodf> notifidbtion spfdififs tibt tif
     * tif <dodf>tbblfCibngfd</dodf> notifidbtion spfdififs tibt tif
     * tif <dodf>tbblfCibngfd</dodf> notifidbtion spfdififs tibt tif
     * tif <dodf>tbblfCibngfd</dodf> notifidbtion spfdififs tibt tif
     * fntirf tbblf dibngfd, tifn tif dolumns will bf rfbuilt.
     * fntirf tbblf dibngfd, tifn tif dolumns will bf rfbuilt.
     * fntirf tbblf dibngfd, tifn tif dolumns will bf rfbuilt.
     * fntirf tbblf dibngfd, tifn tif dolumns will bf rfbuilt.
     * fntirf tbblf dibngfd, tifn tif dolumns will bf rfbuilt.
     * Tif dffbult is truf.
     * Tif dffbult is truf.
     * Tif dffbult is truf.
     * Tif dffbult is truf.
     * Tif dffbult is truf.
     *
     *
     *
     *
     *
     * @rfturn  tif butoCrfbtfColumnsFromModfl of tif tbblf
     * @rfturn  tif butoCrfbtfColumnsFromModfl of tif tbblf
     * @rfturn  tif butoCrfbtfColumnsFromModfl of tif tbblf
     * @rfturn  tif butoCrfbtfColumnsFromModfl of tif tbblf
     * @rfturn  tif butoCrfbtfColumnsFromModfl of tif tbblf
     * @sff     #sftAutoCrfbtfColumnsFromModfl
     * @sff     #sftAutoCrfbtfColumnsFromModfl
     * @sff     #sftAutoCrfbtfColumnsFromModfl
     * @sff     #sftAutoCrfbtfColumnsFromModfl
     * @sff     #sftAutoCrfbtfColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     * @sff     #drfbtfDffbultColumnsFromModfl
     */
     */
     */
     */
     */
    publid boolfbn gftAutoCrfbtfColumnsFromModfl() {
    publid boolfbn gftAutoCrfbtfColumnsFromModfl() {
    publid boolfbn gftAutoCrfbtfColumnsFromModfl() {
    publid boolfbn gftAutoCrfbtfColumnsFromModfl() {
    publid boolfbn gftAutoCrfbtfColumnsFromModfl() {
        rfturn butoCrfbtfColumnsFromModfl;
        rfturn butoCrfbtfColumnsFromModfl;
        rfturn butoCrfbtfColumnsFromModfl;
        rfturn butoCrfbtfColumnsFromModfl;
        rfturn butoCrfbtfColumnsFromModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Crfbtfs dffbult dolumns for tif tbblf from
     * Crfbtfs dffbult dolumns for tif tbblf from
     * Crfbtfs dffbult dolumns for tif tbblf from
     * Crfbtfs dffbult dolumns for tif tbblf from
     * Crfbtfs dffbult dolumns for tif tbblf from
     * tif dbtb modfl using tif <dodf>gftColumnCount</dodf> mftiod
     * tif dbtb modfl using tif <dodf>gftColumnCount</dodf> mftiod
     * tif dbtb modfl using tif <dodf>gftColumnCount</dodf> mftiod
     * tif dbtb modfl using tif <dodf>gftColumnCount</dodf> mftiod
     * tif dbtb modfl using tif <dodf>gftColumnCount</dodf> mftiod
     * dffinfd in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * dffinfd in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * dffinfd in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * dffinfd in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * dffinfd in tif <dodf>TbblfModfl</dodf> intfrfbdf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Clfbrs bny fxisting dolumns bfforf drfbting tif
     * Clfbrs bny fxisting dolumns bfforf drfbting tif
     * Clfbrs bny fxisting dolumns bfforf drfbting tif
     * Clfbrs bny fxisting dolumns bfforf drfbting tif
     * Clfbrs bny fxisting dolumns bfforf drfbting tif
     * nfw dolumns bbsfd on informbtion from tif modfl.
     * nfw dolumns bbsfd on informbtion from tif modfl.
     * nfw dolumns bbsfd on informbtion from tif modfl.
     * nfw dolumns bbsfd on informbtion from tif modfl.
     * nfw dolumns bbsfd on informbtion from tif modfl.
     *
     *
     *
     *
     *
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     * @sff     #gftAutoCrfbtfColumnsFromModfl
     */
     */
     */
     */
     */
    publid void drfbtfDffbultColumnsFromModfl() {
    publid void drfbtfDffbultColumnsFromModfl() {
    publid void drfbtfDffbultColumnsFromModfl() {
    publid void drfbtfDffbultColumnsFromModfl() {
    publid void drfbtfDffbultColumnsFromModfl() {
        TbblfModfl m = gftModfl();
        TbblfModfl m = gftModfl();
        TbblfModfl m = gftModfl();
        TbblfModfl m = gftModfl();
        TbblfModfl m = gftModfl();
        if (m != null) {
        if (m != null) {
        if (m != null) {
        if (m != null) {
        if (m != null) {
            // Rfmovf bny durrfnt dolumns
            // Rfmovf bny durrfnt dolumns
            // Rfmovf bny durrfnt dolumns
            // Rfmovf bny durrfnt dolumns
            // Rfmovf bny durrfnt dolumns
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            wiilf (dm.gftColumnCount() > 0) {
            wiilf (dm.gftColumnCount() > 0) {
            wiilf (dm.gftColumnCount() > 0) {
            wiilf (dm.gftColumnCount() > 0) {
            wiilf (dm.gftColumnCount() > 0) {
                dm.rfmovfColumn(dm.gftColumn(0));
                dm.rfmovfColumn(dm.gftColumn(0));
                dm.rfmovfColumn(dm.gftColumn(0));
                dm.rfmovfColumn(dm.gftColumn(0));
                dm.rfmovfColumn(dm.gftColumn(0));
            }
            }
            }
            }
            }





            // Crfbtf nfw dolumns from tif dbtb modfl info
            // Crfbtf nfw dolumns from tif dbtb modfl info
            // Crfbtf nfw dolumns from tif dbtb modfl info
            // Crfbtf nfw dolumns from tif dbtb modfl info
            // Crfbtf nfw dolumns from tif dbtb modfl info
            for (int i = 0; i < m.gftColumnCount(); i++) {
            for (int i = 0; i < m.gftColumnCount(); i++) {
            for (int i = 0; i < m.gftColumnCount(); i++) {
            for (int i = 0; i < m.gftColumnCount(); i++) {
            for (int i = 0; i < m.gftColumnCount(); i++) {
                TbblfColumn nfwColumn = nfw TbblfColumn(i);
                TbblfColumn nfwColumn = nfw TbblfColumn(i);
                TbblfColumn nfwColumn = nfw TbblfColumn(i);
                TbblfColumn nfwColumn = nfw TbblfColumn(i);
                TbblfColumn nfwColumn = nfw TbblfColumn(i);
                bddColumn(nfwColumn);
                bddColumn(nfwColumn);
                bddColumn(nfwColumn);
                bddColumn(nfwColumn);
                bddColumn(nfwColumn);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts b dffbult dfll rfndfrfr to bf usfd if no rfndfrfr ibs bffn sft in
     * Sfts b dffbult dfll rfndfrfr to bf usfd if no rfndfrfr ibs bffn sft in
     * Sfts b dffbult dfll rfndfrfr to bf usfd if no rfndfrfr ibs bffn sft in
     * Sfts b dffbult dfll rfndfrfr to bf usfd if no rfndfrfr ibs bffn sft in
     * Sfts b dffbult dfll rfndfrfr to bf usfd if no rfndfrfr ibs bffn sft in
     * b <dodf>TbblfColumn</dodf>. If rfndfrfr is <dodf>null</dodf>,
     * b <dodf>TbblfColumn</dodf>. If rfndfrfr is <dodf>null</dodf>,
     * b <dodf>TbblfColumn</dodf>. If rfndfrfr is <dodf>null</dodf>,
     * b <dodf>TbblfColumn</dodf>. If rfndfrfr is <dodf>null</dodf>,
     * b <dodf>TbblfColumn</dodf>. If rfndfrfr is <dodf>null</dodf>,
     * rfmovfs tif dffbult rfndfrfr for tiis dolumn dlbss.
     * rfmovfs tif dffbult rfndfrfr for tiis dolumn dlbss.
     * rfmovfs tif dffbult rfndfrfr for tiis dolumn dlbss.
     * rfmovfs tif dffbult rfndfrfr for tiis dolumn dlbss.
     * rfmovfs tif dffbult rfndfrfr for tiis dolumn dlbss.
     *
     *
     *
     *
     *
     * @pbrbm  dolumnClbss     sft tif dffbult dfll rfndfrfr for tiis dolumnClbss
     * @pbrbm  dolumnClbss     sft tif dffbult dfll rfndfrfr for tiis dolumnClbss
     * @pbrbm  dolumnClbss     sft tif dffbult dfll rfndfrfr for tiis dolumnClbss
     * @pbrbm  dolumnClbss     sft tif dffbult dfll rfndfrfr for tiis dolumnClbss
     * @pbrbm  dolumnClbss     sft tif dffbult dfll rfndfrfr for tiis dolumnClbss
     * @pbrbm  rfndfrfr        dffbult dfll rfndfrfr to bf usfd for tiis
     * @pbrbm  rfndfrfr        dffbult dfll rfndfrfr to bf usfd for tiis
     * @pbrbm  rfndfrfr        dffbult dfll rfndfrfr to bf usfd for tiis
     * @pbrbm  rfndfrfr        dffbult dfll rfndfrfr to bf usfd for tiis
     * @pbrbm  rfndfrfr        dffbult dfll rfndfrfr to bf usfd for tiis
     *                         dolumnClbss
     *                         dolumnClbss
     *                         dolumnClbss
     *                         dolumnClbss
     *                         dolumnClbss
     * @sff     #gftDffbultRfndfrfr
     * @sff     #gftDffbultRfndfrfr
     * @sff     #gftDffbultRfndfrfr
     * @sff     #gftDffbultRfndfrfr
     * @sff     #gftDffbultRfndfrfr
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     */
     */
     */
     */
     */
    publid void sftDffbultRfndfrfr(Clbss<?> dolumnClbss, TbblfCfllRfndfrfr rfndfrfr) {
    publid void sftDffbultRfndfrfr(Clbss<?> dolumnClbss, TbblfCfllRfndfrfr rfndfrfr) {
    publid void sftDffbultRfndfrfr(Clbss<?> dolumnClbss, TbblfCfllRfndfrfr rfndfrfr) {
    publid void sftDffbultRfndfrfr(Clbss<?> dolumnClbss, TbblfCfllRfndfrfr rfndfrfr) {
    publid void sftDffbultRfndfrfr(Clbss<?> dolumnClbss, TbblfCfllRfndfrfr rfndfrfr) {
        if (rfndfrfr != null) {
        if (rfndfrfr != null) {
        if (rfndfrfr != null) {
        if (rfndfrfr != null) {
        if (rfndfrfr != null) {
            dffbultRfndfrfrsByColumnClbss.put(dolumnClbss, rfndfrfr);
            dffbultRfndfrfrsByColumnClbss.put(dolumnClbss, rfndfrfr);
            dffbultRfndfrfrsByColumnClbss.put(dolumnClbss, rfndfrfr);
            dffbultRfndfrfrsByColumnClbss.put(dolumnClbss, rfndfrfr);
            dffbultRfndfrfrsByColumnClbss.put(dolumnClbss, rfndfrfr);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            dffbultRfndfrfrsByColumnClbss.rfmovf(dolumnClbss);
            dffbultRfndfrfrsByColumnClbss.rfmovf(dolumnClbss);
            dffbultRfndfrfrsByColumnClbss.rfmovf(dolumnClbss);
            dffbultRfndfrfrsByColumnClbss.rfmovf(dolumnClbss);
            dffbultRfndfrfrsByColumnClbss.rfmovf(dolumnClbss);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dfll rfndfrfr to bf usfd wifn no rfndfrfr ibs bffn sft in
     * Rfturns tif dfll rfndfrfr to bf usfd wifn no rfndfrfr ibs bffn sft in
     * Rfturns tif dfll rfndfrfr to bf usfd wifn no rfndfrfr ibs bffn sft in
     * Rfturns tif dfll rfndfrfr to bf usfd wifn no rfndfrfr ibs bffn sft in
     * Rfturns tif dfll rfndfrfr to bf usfd wifn no rfndfrfr ibs bffn sft in
     * b <dodf>TbblfColumn</dodf>. During tif rfndfring of dflls tif rfndfrfr is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif rfndfring of dflls tif rfndfrfr is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif rfndfring of dflls tif rfndfrfr is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif rfndfring of dflls tif rfndfrfr is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif rfndfring of dflls tif rfndfrfr is fftdifd from
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     *
     *
     *
     *
     *
     * @pbrbm   dolumnClbss   rfturn tif dffbult dfll rfndfrfr
     * @pbrbm   dolumnClbss   rfturn tif dffbult dfll rfndfrfr
     * @pbrbm   dolumnClbss   rfturn tif dffbult dfll rfndfrfr
     * @pbrbm   dolumnClbss   rfturn tif dffbult dfll rfndfrfr
     * @pbrbm   dolumnClbss   rfturn tif dffbult dfll rfndfrfr
     *                        for tiis dolumnClbss
     *                        for tiis dolumnClbss
     *                        for tiis dolumnClbss
     *                        for tiis dolumnClbss
     *                        for tiis dolumnClbss
     * @rfturn  tif rfndfrfr for tiis dolumnClbss
     * @rfturn  tif rfndfrfr for tiis dolumnClbss
     * @rfturn  tif rfndfrfr for tiis dolumnClbss
     * @rfturn  tif rfndfrfr for tiis dolumnClbss
     * @rfturn  tif rfndfrfr for tiis dolumnClbss
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     */
     */
     */
     */
     */
    publid TbblfCfllRfndfrfr gftDffbultRfndfrfr(Clbss<?> dolumnClbss) {
    publid TbblfCfllRfndfrfr gftDffbultRfndfrfr(Clbss<?> dolumnClbss) {
    publid TbblfCfllRfndfrfr gftDffbultRfndfrfr(Clbss<?> dolumnClbss) {
    publid TbblfCfllRfndfrfr gftDffbultRfndfrfr(Clbss<?> dolumnClbss) {
    publid TbblfCfllRfndfrfr gftDffbultRfndfrfr(Clbss<?> dolumnClbss) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            Objfdt rfndfrfr = dffbultRfndfrfrsByColumnClbss.gft(dolumnClbss);
            Objfdt rfndfrfr = dffbultRfndfrfrsByColumnClbss.gft(dolumnClbss);
            Objfdt rfndfrfr = dffbultRfndfrfrsByColumnClbss.gft(dolumnClbss);
            Objfdt rfndfrfr = dffbultRfndfrfrsByColumnClbss.gft(dolumnClbss);
            Objfdt rfndfrfr = dffbultRfndfrfrsByColumnClbss.gft(dolumnClbss);
            if (rfndfrfr != null) {
            if (rfndfrfr != null) {
            if (rfndfrfr != null) {
            if (rfndfrfr != null) {
            if (rfndfrfr != null) {
                rfturn (TbblfCfllRfndfrfr)rfndfrfr;
                rfturn (TbblfCfllRfndfrfr)rfndfrfr;
                rfturn (TbblfCfllRfndfrfr)rfndfrfr;
                rfturn (TbblfCfllRfndfrfr)rfndfrfr;
                rfturn (TbblfCfllRfndfrfr)rfndfrfr;
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                Clbss<?> d = dolumnClbss.gftSupfrdlbss();
                Clbss<?> d = dolumnClbss.gftSupfrdlbss();
                Clbss<?> d = dolumnClbss.gftSupfrdlbss();
                Clbss<?> d = dolumnClbss.gftSupfrdlbss();
                Clbss<?> d = dolumnClbss.gftSupfrdlbss();
                if (d == null && dolumnClbss != Objfdt.dlbss) {
                if (d == null && dolumnClbss != Objfdt.dlbss) {
                if (d == null && dolumnClbss != Objfdt.dlbss) {
                if (d == null && dolumnClbss != Objfdt.dlbss) {
                if (d == null && dolumnClbss != Objfdt.dlbss) {
                    d = Objfdt.dlbss;
                    d = Objfdt.dlbss;
                    d = Objfdt.dlbss;
                    d = Objfdt.dlbss;
                    d = Objfdt.dlbss;
                }
                }
                }
                }
                }
                rfturn gftDffbultRfndfrfr(d);
                rfturn gftDffbultRfndfrfr(d);
                rfturn gftDffbultRfndfrfr(d);
                rfturn gftDffbultRfndfrfr(d);
                rfturn gftDffbultRfndfrfr(d);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts b dffbult dfll fditor to bf usfd if no fditor ibs bffn sft in
     * Sfts b dffbult dfll fditor to bf usfd if no fditor ibs bffn sft in
     * Sfts b dffbult dfll fditor to bf usfd if no fditor ibs bffn sft in
     * Sfts b dffbult dfll fditor to bf usfd if no fditor ibs bffn sft in
     * Sfts b dffbult dfll fditor to bf usfd if no fditor ibs bffn sft in
     * b <dodf>TbblfColumn</dodf>. If no fditing is rfquirfd in b tbblf, or b
     * b <dodf>TbblfColumn</dodf>. If no fditing is rfquirfd in b tbblf, or b
     * b <dodf>TbblfColumn</dodf>. If no fditing is rfquirfd in b tbblf, or b
     * b <dodf>TbblfColumn</dodf>. If no fditing is rfquirfd in b tbblf, or b
     * b <dodf>TbblfColumn</dodf>. If no fditing is rfquirfd in b tbblf, or b
     * pbrtidulbr dolumn in b tbblf, usfs tif <dodf>isCfllEditbblf</dodf>
     * pbrtidulbr dolumn in b tbblf, usfs tif <dodf>isCfllEditbblf</dodf>
     * pbrtidulbr dolumn in b tbblf, usfs tif <dodf>isCfllEditbblf</dodf>
     * pbrtidulbr dolumn in b tbblf, usfs tif <dodf>isCfllEditbblf</dodf>
     * pbrtidulbr dolumn in b tbblf, usfs tif <dodf>isCfllEditbblf</dodf>
     * mftiod in tif <dodf>TbblfModfl</dodf> intfrfbdf to fnsurf tibt tiis
     * mftiod in tif <dodf>TbblfModfl</dodf> intfrfbdf to fnsurf tibt tiis
     * mftiod in tif <dodf>TbblfModfl</dodf> intfrfbdf to fnsurf tibt tiis
     * mftiod in tif <dodf>TbblfModfl</dodf> intfrfbdf to fnsurf tibt tiis
     * mftiod in tif <dodf>TbblfModfl</dodf> intfrfbdf to fnsurf tibt tiis
     * <dodf>JTbblf</dodf> will not stbrt bn fditor in tifsf dolumns.
     * <dodf>JTbblf</dodf> will not stbrt bn fditor in tifsf dolumns.
     * <dodf>JTbblf</dodf> will not stbrt bn fditor in tifsf dolumns.
     * <dodf>JTbblf</dodf> will not stbrt bn fditor in tifsf dolumns.
     * <dodf>JTbblf</dodf> will not stbrt bn fditor in tifsf dolumns.
     * If fditor is <dodf>null</dodf>, rfmovfs tif dffbult fditor for tiis
     * If fditor is <dodf>null</dodf>, rfmovfs tif dffbult fditor for tiis
     * If fditor is <dodf>null</dodf>, rfmovfs tif dffbult fditor for tiis
     * If fditor is <dodf>null</dodf>, rfmovfs tif dffbult fditor for tiis
     * If fditor is <dodf>null</dodf>, rfmovfs tif dffbult fditor for tiis
     * dolumn dlbss.
     * dolumn dlbss.
     * dolumn dlbss.
     * dolumn dlbss.
     * dolumn dlbss.
     *
     *
     *
     *
     *
     * @pbrbm  dolumnClbss  sft tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm  dolumnClbss  sft tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm  dolumnClbss  sft tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm  dolumnClbss  sft tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm  dolumnClbss  sft tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm  fditor   dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @pbrbm  fditor   dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @pbrbm  fditor   dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @pbrbm  fditor   dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @pbrbm  fditor   dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @sff     TbblfModfl#isCfllEditbblf
     * @sff     TbblfModfl#isCfllEditbblf
     * @sff     TbblfModfl#isCfllEditbblf
     * @sff     TbblfModfl#isCfllEditbblf
     * @sff     TbblfModfl#isCfllEditbblf
     * @sff     #gftDffbultEditor
     * @sff     #gftDffbultEditor
     * @sff     #gftDffbultEditor
     * @sff     #gftDffbultEditor
     * @sff     #gftDffbultEditor
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     * @sff     #sftDffbultRfndfrfr
     */
     */
     */
     */
     */
    publid void sftDffbultEditor(Clbss<?> dolumnClbss, TbblfCfllEditor fditor) {
    publid void sftDffbultEditor(Clbss<?> dolumnClbss, TbblfCfllEditor fditor) {
    publid void sftDffbultEditor(Clbss<?> dolumnClbss, TbblfCfllEditor fditor) {
    publid void sftDffbultEditor(Clbss<?> dolumnClbss, TbblfCfllEditor fditor) {
    publid void sftDffbultEditor(Clbss<?> dolumnClbss, TbblfCfllEditor fditor) {
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
            dffbultEditorsByColumnClbss.put(dolumnClbss, fditor);
            dffbultEditorsByColumnClbss.put(dolumnClbss, fditor);
            dffbultEditorsByColumnClbss.put(dolumnClbss, fditor);
            dffbultEditorsByColumnClbss.put(dolumnClbss, fditor);
            dffbultEditorsByColumnClbss.put(dolumnClbss, fditor);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            dffbultEditorsByColumnClbss.rfmovf(dolumnClbss);
            dffbultEditorsByColumnClbss.rfmovf(dolumnClbss);
            dffbultEditorsByColumnClbss.rfmovf(dolumnClbss);
            dffbultEditorsByColumnClbss.rfmovf(dolumnClbss);
            dffbultEditorsByColumnClbss.rfmovf(dolumnClbss);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif fditor to bf usfd wifn no fditor ibs bffn sft in
     * Rfturns tif fditor to bf usfd wifn no fditor ibs bffn sft in
     * Rfturns tif fditor to bf usfd wifn no fditor ibs bffn sft in
     * Rfturns tif fditor to bf usfd wifn no fditor ibs bffn sft in
     * Rfturns tif fditor to bf usfd wifn no fditor ibs bffn sft in
     * b <dodf>TbblfColumn</dodf>. During tif fditing of dflls tif fditor is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif fditing of dflls tif fditor is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif fditing of dflls tif fditor is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif fditing of dflls tif fditor is fftdifd from
     * b <dodf>TbblfColumn</dodf>. During tif fditing of dflls tif fditor is fftdifd from
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * b <dodf>Hbsitbblf</dodf> of fntrifs bddording to tif dlbss of tif dflls in tif dolumn. If
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tifrf is no fntry for tiis <dodf>dolumnClbss</dodf> tif mftiod rfturns
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * tif fntry for tif most spfdifid supfrdlbss. Tif <dodf>JTbblf</dodf> instblls fntrifs
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * for <dodf>Objfdt</dodf>, <dodf>Numbfr</dodf>, bnd <dodf>Boolfbn</dodf>, bll of wiidi dbn bf modififd
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     * or rfplbdfd.
     *
     *
     *
     *
     *
     * @pbrbm   dolumnClbss  rfturn tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm   dolumnClbss  rfturn tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm   dolumnClbss  rfturn tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm   dolumnClbss  rfturn tif dffbult dfll fditor for tiis dolumnClbss
     * @pbrbm   dolumnClbss  rfturn tif dffbult dfll fditor for tiis dolumnClbss
     * @rfturn tif dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @rfturn tif dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @rfturn tif dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @rfturn tif dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @rfturn tif dffbult dfll fditor to bf usfd for tiis dolumnClbss
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #sftDffbultEditor
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     * @sff     #gftColumnClbss
     */
     */
     */
     */
     */
    publid TbblfCfllEditor gftDffbultEditor(Clbss<?> dolumnClbss) {
    publid TbblfCfllEditor gftDffbultEditor(Clbss<?> dolumnClbss) {
    publid TbblfCfllEditor gftDffbultEditor(Clbss<?> dolumnClbss) {
    publid TbblfCfllEditor gftDffbultEditor(Clbss<?> dolumnClbss) {
    publid TbblfCfllEditor gftDffbultEditor(Clbss<?> dolumnClbss) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
        if (dolumnClbss == null) {
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            Objfdt fditor = dffbultEditorsByColumnClbss.gft(dolumnClbss);
            Objfdt fditor = dffbultEditorsByColumnClbss.gft(dolumnClbss);
            Objfdt fditor = dffbultEditorsByColumnClbss.gft(dolumnClbss);
            Objfdt fditor = dffbultEditorsByColumnClbss.gft(dolumnClbss);
            Objfdt fditor = dffbultEditorsByColumnClbss.gft(dolumnClbss);
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
                rfturn (TbblfCfllEditor)fditor;
                rfturn (TbblfCfllEditor)fditor;
                rfturn (TbblfCfllEditor)fditor;
                rfturn (TbblfCfllEditor)fditor;
                rfturn (TbblfCfllEditor)fditor;
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                rfturn gftDffbultEditor(dolumnClbss.gftSupfrdlbss());
                rfturn gftDffbultEditor(dolumnClbss.gftSupfrdlbss());
                rfturn gftDffbultEditor(dolumnClbss.gftSupfrdlbss());
                rfturn gftDffbultEditor(dolumnClbss.gftSupfrdlbss());
                rfturn gftDffbultEditor(dolumnClbss.gftSupfrdlbss());
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * tbblf's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * tbblf's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * tbblf's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * tbblf's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * tbblf's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif tbblf's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif tbblf's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif tbblf's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif tbblf's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif tbblf's
     * {@dodf TbblfUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TbblfUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TbblfUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TbblfUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TbblfUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * bn itfm (in singlf sflfdtion modf) or b sflfdtion (in otifr sflfdtion
     * bn itfm (in singlf sflfdtion modf) or b sflfdtion (in otifr sflfdtion
     * bn itfm (in singlf sflfdtion modf) or b sflfdtion (in otifr sflfdtion
     * bn itfm (in singlf sflfdtion modf) or b sflfdtion (in otifr sflfdtion
     * bn itfm (in singlf sflfdtion modf) or b sflfdtion (in otifr sflfdtion
     * modfs) bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * modfs) bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * modfs) bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * modfs) bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * modfs) bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * tbblf's {@dodf TrbnsffrHbndlfr}.
     * tbblf's {@dodf TrbnsffrHbndlfr}.
     * tbblf's {@dodf TrbnsffrHbndlfr}.
     * tbblf's {@dodf TrbnsffrHbndlfr}.
     * tbblf's {@dodf TrbnsffrHbndlfr}.
     *
     *
     *
     *
     *
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     *
     *
     *
     *
     *
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     */
     */
     */
     */
     */
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
        }
        }
        }
        }
        }
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     *
     *
     *
     *
     *
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * bfffdting tif bdtubl sflfdtion in tif tbblf.
     * bfffdting tif bdtubl sflfdtion in tif tbblf.
     * bfffdting tif bdtubl sflfdtion in tif tbblf.
     * bfffdting tif bdtubl sflfdtion in tif tbblf.
     * bfffdting tif bdtubl sflfdtion in tif tbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <dodf>JTbblf</dodf> supports tif following drop modfs:
     * <dodf>JTbblf</dodf> supports tif following drop modfs:
     * <dodf>JTbblf</dodf> supports tif following drop modfs:
     * <dodf>JTbblf</dodf> supports tif following drop modfs:
     * <dodf>JTbblf</dodf> supports tif following drop modfs:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_ROWS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_COLS</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT_COLS</dodf></li>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     *
     *
     *
     *
     *
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT_ROWS:
                dbsf INSERT_ROWS:
                dbsf INSERT_ROWS:
                dbsf INSERT_ROWS:
                dbsf INSERT_ROWS:
                dbsf INSERT_COLS:
                dbsf INSERT_COLS:
                dbsf INSERT_COLS:
                dbsf INSERT_COLS:
                dbsf INSERT_COLS:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT_ROWS:
                dbsf ON_OR_INSERT_ROWS:
                dbsf ON_OR_INSERT_ROWS:
                dbsf ON_OR_INSERT_ROWS:
                dbsf ON_OR_INSERT_ROWS:
                dbsf ON_OR_INSERT_COLS:
                dbsf ON_OR_INSERT_COLS:
                dbsf ON_OR_INSERT_COLS:
                dbsf ON_OR_INSERT_COLS:
                dbsf ON_OR_INSERT_COLS:
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for tbblf");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for tbblf");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for tbblf");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for tbblf");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for tbblf");
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     *
     *
     *
     *
     *
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     */
     */
     */
     */
     */
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;





        int row = rowAtPoint(p);
        int row = rowAtPoint(p);
        int row = rowAtPoint(p);
        int row = rowAtPoint(p);
        int row = rowAtPoint(p);
        int dol = dolumnAtPoint(p);
        int dol = dolumnAtPoint(p);
        int dol = dolumnAtPoint(p);
        int dol = dolumnAtPoint(p);
        int dol = dolumnAtPoint(p);
        boolfbn outsidf = Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")
        boolfbn outsidf = Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")
        boolfbn outsidf = Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")
        boolfbn outsidf = Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")
        boolfbn outsidf = Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")
                          && SwingUtilitifs2.pointOutsidfPrffSizf(tiis, row, dol, p);
                          && SwingUtilitifs2.pointOutsidfPrffSizf(tiis, row, dol, p);
                          && SwingUtilitifs2.pointOutsidfPrffSizf(tiis, row, dol, p);
                          && SwingUtilitifs2.pointOutsidfPrffSizf(tiis, row, dol, p);
                          && SwingUtilitifs2.pointOutsidfPrffSizf(tiis, row, dol, p);





        Rfdtbnglf rfdt = gftCfllRfdt(row, dol, truf);
        Rfdtbnglf rfdt = gftCfllRfdt(row, dol, truf);
        Rfdtbnglf rfdt = gftCfllRfdt(row, dol, truf);
        Rfdtbnglf rfdt = gftCfllRfdt(row, dol, truf);
        Rfdtbnglf rfdt = gftCfllRfdt(row, dol, truf);
        Sfdtion xSfdtion, ySfdtion;
        Sfdtion xSfdtion, ySfdtion;
        Sfdtion xSfdtion, ySfdtion;
        Sfdtion xSfdtion, ySfdtion;
        Sfdtion xSfdtion, ySfdtion;
        boolfbn bftwffn = fblsf;
        boolfbn bftwffn = fblsf;
        boolfbn bftwffn = fblsf;
        boolfbn bftwffn = fblsf;
        boolfbn bftwffn = fblsf;
        boolfbn ltr = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn ltr = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn ltr = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn ltr = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn ltr = gftComponfntOrifntbtion().isLfftToRigit();





        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf ON:
            dbsf ON:
            dbsf ON:
            dbsf ON:
            dbsf ON:
                if (row == -1 || dol == -1 || outsidf) {
                if (row == -1 || dol == -1 || outsidf) {
                if (row == -1 || dol == -1 || outsidf) {
                if (row == -1 || dol == -1 || outsidf) {
                if (row == -1 || dol == -1 || outsidf) {
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    lodbtion = nfw DropLodbtion(p, row, dol, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, fblsf, fblsf);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);





                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    }
                    }
                    }
                    }
                    }
                } flsf if (xSfdtion == LEADING || xSfdtion == TRAILING) {
                } flsf if (xSfdtion == LEADING || xSfdtion == TRAILING) {
                } flsf if (xSfdtion == LEADING || xSfdtion == TRAILING) {
                } flsf if (xSfdtion == LEADING || xSfdtion == TRAILING) {
                } flsf if (xSfdtion == LEADING || xSfdtion == TRAILING) {
                    ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                    ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                    ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                    ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                    ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                    if (ySfdtion == LEADING) {
                    if (ySfdtion == LEADING) {
                    if (ySfdtion == LEADING) {
                    if (ySfdtion == LEADING) {
                    if (ySfdtion == LEADING) {
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                    } flsf if (ySfdtion == TRAILING) {
                    } flsf if (ySfdtion == TRAILING) {
                    } flsf if (ySfdtion == TRAILING) {
                    } flsf if (ySfdtion == TRAILING) {
                    } flsf if (ySfdtion == TRAILING) {
                        row++;
                        row++;
                        row++;
                        row++;
                        row++;
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                        bftwffn = truf;
                    }
                    }
                    }
                    }
                    }





                    lodbtion = nfw DropLodbtion(p, row,
                    lodbtion = nfw DropLodbtion(p, row,
                    lodbtion = nfw DropLodbtion(p, row,
                    lodbtion = nfw DropLodbtion(p, row,
                    lodbtion = nfw DropLodbtion(p, row,
                                                xSfdtion == TRAILING ? dol + 1 : dol,
                                                xSfdtion == TRAILING ? dol + 1 : dol,
                                                xSfdtion == TRAILING ? dol + 1 : dol,
                                                xSfdtion == TRAILING ? dol + 1 : dol,
                                                xSfdtion == TRAILING ? dol + 1 : dol,
                                                bftwffn, truf);
                                                bftwffn, truf);
                                                bftwffn, truf);
                                                bftwffn, truf);
                                                bftwffn, truf);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                    if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                    if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                    if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                    if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                        row++;
                        row++;
                        row++;
                        row++;
                        row++;
                    }
                    }
                    }
                    }
                    }





                    lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                }
                }
                }
                }
                }





                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf INSERT_ROWS:
            dbsf INSERT_ROWS:
            dbsf INSERT_ROWS:
            dbsf INSERT_ROWS:
            dbsf INSERT_ROWS:
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, fblsf) == TRAILING) {
                    row++;
                    row++;
                    row++;
                    row++;
                    row++;
                }
                }
                }
                }
                }





                lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, truf, fblsf);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf ON_OR_INSERT_ROWS:
            dbsf ON_OR_INSERT_ROWS:
            dbsf ON_OR_INSERT_ROWS:
            dbsf ON_OR_INSERT_ROWS:
            dbsf ON_OR_INSERT_ROWS:
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                    row++;
                    row++;
                    row++;
                    row++;
                    row++;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                }
                }
                }
                }
                }





                lodbtion = nfw DropLodbtion(p, row, dol, bftwffn, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, bftwffn, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, bftwffn, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, bftwffn, fblsf);
                lodbtion = nfw DropLodbtion(p, row, dol, bftwffn, fblsf);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf INSERT_COLS:
            dbsf INSERT_COLS:
            dbsf INSERT_COLS:
            dbsf INSERT_COLS:
            dbsf INSERT_COLS:
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                    lodbtion = nfw DropLodbtion(p, gftColumnCount(), dol, fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, gftColumnCount(), dol, fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, gftColumnCount(), dol, fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, gftColumnCount(), dol, fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, gftColumnCount(), dol, fblsf, truf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, fblsf) == TRAILING) {
                if (SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, fblsf) == TRAILING) {
                    dol++;
                    dol++;
                    dol++;
                    dol++;
                    dol++;
                }
                }
                }
                }
                }





                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, truf);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, truf);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, truf);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, truf);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, truf);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf ON_OR_INSERT_COLS:
            dbsf ON_OR_INSERT_COLS:
            dbsf ON_OR_INSERT_COLS:
            dbsf ON_OR_INSERT_COLS:
            dbsf ON_OR_INSERT_COLS:
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    lodbtion = nfw DropLodbtion(p, -1, -1, fblsf, fblsf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                if (dol == -1) {
                    lodbtion = nfw DropLodbtion(p, row, gftColumnCount(), fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, row, gftColumnCount(), fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, row, gftColumnCount(), fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, row, gftColumnCount(), fblsf, truf);
                    lodbtion = nfw DropLodbtion(p, row, gftColumnCount(), fblsf, truf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                if (xSfdtion == LEADING) {
                if (xSfdtion == LEADING) {
                if (xSfdtion == LEADING) {
                if (xSfdtion == LEADING) {
                if (xSfdtion == LEADING) {
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                } flsf if (xSfdtion == TRAILING) {
                } flsf if (xSfdtion == TRAILING) {
                } flsf if (xSfdtion == TRAILING) {
                } flsf if (xSfdtion == TRAILING) {
                } flsf if (xSfdtion == TRAILING) {
                    dol++;
                    dol++;
                    dol++;
                    dol++;
                    dol++;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                }
                }
                }
                }
                }





                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, bftwffn);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, bftwffn);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, bftwffn);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, bftwffn);
                lodbtion = nfw DropLodbtion(p, row, dol, fblsf, bftwffn);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                if (row == -1 && dol == -1) {
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    lodbtion = nfw DropLodbtion(p, 0, 0, truf, truf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);
                xSfdtion = SwingUtilitifs2.lifsInHorizontbl(rfdt, p, ltr, truf);





                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                    if (xSfdtion == LEADING) {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, truf);
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                    } flsf if (xSfdtion == TRAILING) {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol + 1, truf, truf);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                        lodbtion = nfw DropLodbtion(p, gftRowCount(), dol, truf, fblsf);
                    }
                    }
                    }
                    }
                    }





                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                ySfdtion = SwingUtilitifs2.lifsInVfrtidbl(rfdt, p, truf);
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                if (ySfdtion == LEADING) {
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                } flsf if (ySfdtion == TRAILING) {
                    row++;
                    row++;
                    row++;
                    row++;
                    row++;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                    bftwffn = truf;
                }
                }
                }
                }
                }





                lodbtion = nfw DropLodbtion(p, row,
                lodbtion = nfw DropLodbtion(p, row,
                lodbtion = nfw DropLodbtion(p, row,
                lodbtion = nfw DropLodbtion(p, row,
                lodbtion = nfw DropLodbtion(p, row,
                                            xSfdtion == TRAILING ? dol + 1 : dol,
                                            xSfdtion == TRAILING ? dol + 1 : dol,
                                            xSfdtion == TRAILING ? dol + 1 : dol,
                                            xSfdtion == TRAILING ? dol + 1 : dol,
                                            xSfdtion == TRAILING ? dol + 1 : dol,
                                            bftwffn,
                                            bftwffn,
                                            bftwffn,
                                            bftwffn,
                                            bftwffn,
                                            xSfdtion != MIDDLE);
                                            xSfdtion != MIDDLE);
                                            xSfdtion != MIDDLE);
                                            xSfdtion != MIDDLE);
                                            xSfdtion != MIDDLE);





                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dffbult:
            dffbult:
            dffbult:
            dffbult:
            dffbult:
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
        }
        }
        }
        }
        }





        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     *
     *
     *
     *
     *
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     */
     */
     */
     */
     */
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {





        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        DropLodbtion tbblfLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion tbblfLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion tbblfLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion tbblfLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion tbblfLodbtion = (DropLodbtion)lodbtion;





        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
            if (tbblfLodbtion == null) {
            if (tbblfLodbtion == null) {
            if (tbblfLodbtion == null) {
            if (tbblfLodbtion == null) {
            if (tbblfLodbtion == null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                    dlfbrSflfdtion();
                    dlfbrSflfdtion();
                    dlfbrSflfdtion();
                    dlfbrSflfdtion();
                    dlfbrSflfdtion();





                    int[] rows = ((int[][])stbtf)[0];
                    int[] rows = ((int[][])stbtf)[0];
                    int[] rows = ((int[][])stbtf)[0];
                    int[] rows = ((int[][])stbtf)[0];
                    int[] rows = ((int[][])stbtf)[0];
                    int[] dols = ((int[][])stbtf)[1];
                    int[] dols = ((int[][])stbtf)[1];
                    int[] dols = ((int[][])stbtf)[1];
                    int[] dols = ((int[][])stbtf)[1];
                    int[] dols = ((int[][])stbtf)[1];
                    int[] bndilfbds = ((int[][])stbtf)[2];
                    int[] bndilfbds = ((int[][])stbtf)[2];
                    int[] bndilfbds = ((int[][])stbtf)[2];
                    int[] bndilfbds = ((int[][])stbtf)[2];
                    int[] bndilfbds = ((int[][])stbtf)[2];





                    for (int row : rows) {
                    for (int row : rows) {
                    for (int row : rows) {
                    for (int row : rows) {
                    for (int row : rows) {
                        bddRowSflfdtionIntfrvbl(row, row);
                        bddRowSflfdtionIntfrvbl(row, row);
                        bddRowSflfdtionIntfrvbl(row, row);
                        bddRowSflfdtionIntfrvbl(row, row);
                        bddRowSflfdtionIntfrvbl(row, row);
                    }
                    }
                    }
                    }
                    }





                    for (int dol : dols) {
                    for (int dol : dols) {
                    for (int dol : dols) {
                    for (int dol : dols) {
                    for (int dol : dols) {
                        bddColumnSflfdtionIntfrvbl(dol, dol);
                        bddColumnSflfdtionIntfrvbl(dol, dol);
                        bddColumnSflfdtionIntfrvbl(dol, dol);
                        bddColumnSflfdtionIntfrvbl(dol, dol);
                        bddColumnSflfdtionIntfrvbl(dol, dol);
                    }
                    }
                    }
                    }
                    }





                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                            gftSflfdtionModfl(), bndilfbds[1], bndilfbds[0]);
                            gftSflfdtionModfl(), bndilfbds[1], bndilfbds[0]);
                            gftSflfdtionModfl(), bndilfbds[1], bndilfbds[0]);
                            gftSflfdtionModfl(), bndilfbds[1], bndilfbds[0]);
                            gftSflfdtionModfl(), bndilfbds[1], bndilfbds[0]);





                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                            gftColumnModfl().gftSflfdtionModfl(),
                            gftColumnModfl().gftSflfdtionModfl(),
                            gftColumnModfl().gftSflfdtionModfl(),
                            gftColumnModfl().gftSflfdtionModfl(),
                            gftColumnModfl().gftSflfdtionModfl(),
                            bndilfbds[3], bndilfbds[2]);
                            bndilfbds[3], bndilfbds[2]);
                            bndilfbds[3], bndilfbds[2]);
                            bndilfbds[3], bndilfbds[2]);
                            bndilfbds[3], bndilfbds[2]);
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                    rftVbl = nfw int[][]{
                    rftVbl = nfw int[][]{
                    rftVbl = nfw int[][]{
                    rftVbl = nfw int[][]{
                    rftVbl = nfw int[][]{
                        gftSflfdtfdRows(),
                        gftSflfdtfdRows(),
                        gftSflfdtfdRows(),
                        gftSflfdtfdRows(),
                        gftSflfdtfdRows(),
                        gftSflfdtfdColumns(),
                        gftSflfdtfdColumns(),
                        gftSflfdtfdColumns(),
                        gftSflfdtfdColumns(),
                        gftSflfdtfdColumns(),
                        {gftAdjustfdIndfx(gftSflfdtionModfl()
                        {gftAdjustfdIndfx(gftSflfdtionModfl()
                        {gftAdjustfdIndfx(gftSflfdtionModfl()
                        {gftAdjustfdIndfx(gftSflfdtionModfl()
                        {gftAdjustfdIndfx(gftSflfdtionModfl()
                             .gftAndiorSflfdtionIndfx(), truf),
                             .gftAndiorSflfdtionIndfx(), truf),
                             .gftAndiorSflfdtionIndfx(), truf),
                             .gftAndiorSflfdtionIndfx(), truf),
                             .gftAndiorSflfdtionIndfx(), truf),
                         gftAdjustfdIndfx(gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftSflfdtionModfl()
                             .gftLfbdSflfdtionIndfx(), truf),
                             .gftLfbdSflfdtionIndfx(), truf),
                             .gftLfbdSflfdtionIndfx(), truf),
                             .gftLfbdSflfdtionIndfx(), truf),
                             .gftLfbdSflfdtionIndfx(), truf),
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                             .gftAndiorSflfdtionIndfx(), fblsf),
                             .gftAndiorSflfdtionIndfx(), fblsf),
                             .gftAndiorSflfdtionIndfx(), fblsf),
                             .gftAndiorSflfdtionIndfx(), fblsf),
                             .gftAndiorSflfdtionIndfx(), fblsf),
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                         gftAdjustfdIndfx(gftColumnModfl().gftSflfdtionModfl()
                             .gftLfbdSflfdtionIndfx(), fblsf)}};
                             .gftLfbdSflfdtionIndfx(), fblsf)}};
                             .gftLfbdSflfdtionIndfx(), fblsf)}};
                             .gftLfbdSflfdtionIndfx(), fblsf)}};
                             .gftLfbdSflfdtionIndfx(), fblsf)}};
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                }
                }
                }
                }
                }





                if (tbblfLodbtion.gftRow() == -1) {
                if (tbblfLodbtion.gftRow() == -1) {
                if (tbblfLodbtion.gftRow() == -1) {
                if (tbblfLodbtion.gftRow() == -1) {
                if (tbblfLodbtion.gftRow() == -1) {
                    dlfbrSflfdtionAndLfbdAndior();
                    dlfbrSflfdtionAndLfbdAndior();
                    dlfbrSflfdtionAndLfbdAndior();
                    dlfbrSflfdtionAndLfbdAndior();
                    dlfbrSflfdtionAndLfbdAndior();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    sftRowSflfdtionIntfrvbl(tbblfLodbtion.gftRow(),
                    sftRowSflfdtionIntfrvbl(tbblfLodbtion.gftRow(),
                    sftRowSflfdtionIntfrvbl(tbblfLodbtion.gftRow(),
                    sftRowSflfdtionIntfrvbl(tbblfLodbtion.gftRow(),
                    sftRowSflfdtionIntfrvbl(tbblfLodbtion.gftRow(),
                                            tbblfLodbtion.gftRow());
                                            tbblfLodbtion.gftRow());
                                            tbblfLodbtion.gftRow());
                                            tbblfLodbtion.gftRow());
                                            tbblfLodbtion.gftRow());
                    sftColumnSflfdtionIntfrvbl(tbblfLodbtion.gftColumn(),
                    sftColumnSflfdtionIntfrvbl(tbblfLodbtion.gftColumn(),
                    sftColumnSflfdtionIntfrvbl(tbblfLodbtion.gftColumn(),
                    sftColumnSflfdtionIntfrvbl(tbblfLodbtion.gftColumn(),
                    sftColumnSflfdtionIntfrvbl(tbblfLodbtion.gftColumn(),
                                               tbblfLodbtion.gftColumn());
                                               tbblfLodbtion.gftColumn());
                                               tbblfLodbtion.gftColumn());
                                               tbblfLodbtion.gftColumn());
                                               tbblfLodbtion.gftColumn());
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        dropLodbtion = tbblfLodbtion;
        dropLodbtion = tbblfLodbtion;
        dropLodbtion = tbblfLodbtion;
        dropLodbtion = tbblfLodbtion;
        dropLodbtion = tbblfLodbtion;
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);





        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Spfdififs wiftifr b {@dodf RowSortfr} siould bf drfbtfd for tif
     * Spfdififs wiftifr b {@dodf RowSortfr} siould bf drfbtfd for tif
     * Spfdififs wiftifr b {@dodf RowSortfr} siould bf drfbtfd for tif
     * Spfdififs wiftifr b {@dodf RowSortfr} siould bf drfbtfd for tif
     * Spfdififs wiftifr b {@dodf RowSortfr} siould bf drfbtfd for tif
     * tbblf wifnfvfr its modfl dibngfs.
     * tbblf wifnfvfr its modfl dibngfs.
     * tbblf wifnfvfr its modfl dibngfs.
     * tbblf wifnfvfr its modfl dibngfs.
     * tbblf wifnfvfr its modfl dibngfs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn {@dodf sftAutoCrfbtfRowSortfr(truf)} is invokfd, b {@dodf
     * Wifn {@dodf sftAutoCrfbtfRowSortfr(truf)} is invokfd, b {@dodf
     * Wifn {@dodf sftAutoCrfbtfRowSortfr(truf)} is invokfd, b {@dodf
     * Wifn {@dodf sftAutoCrfbtfRowSortfr(truf)} is invokfd, b {@dodf
     * Wifn {@dodf sftAutoCrfbtfRowSortfr(truf)} is invokfd, b {@dodf
     * TbblfRowSortfr} is immfdibtfly drfbtfd bnd instbllfd on tif
     * TbblfRowSortfr} is immfdibtfly drfbtfd bnd instbllfd on tif
     * TbblfRowSortfr} is immfdibtfly drfbtfd bnd instbllfd on tif
     * TbblfRowSortfr} is immfdibtfly drfbtfd bnd instbllfd on tif
     * TbblfRowSortfr} is immfdibtfly drfbtfd bnd instbllfd on tif
     * tbblf.  Wiilf tif {@dodf butoCrfbtfRowSortfr} propfrty rfmbins
     * tbblf.  Wiilf tif {@dodf butoCrfbtfRowSortfr} propfrty rfmbins
     * tbblf.  Wiilf tif {@dodf butoCrfbtfRowSortfr} propfrty rfmbins
     * tbblf.  Wiilf tif {@dodf butoCrfbtfRowSortfr} propfrty rfmbins
     * tbblf.  Wiilf tif {@dodf butoCrfbtfRowSortfr} propfrty rfmbins
     * {@dodf truf}, fvfry timf tif modfl is dibngfd, b nfw {@dodf
     * {@dodf truf}, fvfry timf tif modfl is dibngfd, b nfw {@dodf
     * {@dodf truf}, fvfry timf tif modfl is dibngfd, b nfw {@dodf
     * {@dodf truf}, fvfry timf tif modfl is dibngfd, b nfw {@dodf
     * {@dodf truf}, fvfry timf tif modfl is dibngfd, b nfw {@dodf
     * TbblfRowSortfr} is drfbtfd bnd sft bs tif tbblf's row sortfr.
     * TbblfRowSortfr} is drfbtfd bnd sft bs tif tbblf's row sortfr.
     * TbblfRowSortfr} is drfbtfd bnd sft bs tif tbblf's row sortfr.
     * TbblfRowSortfr} is drfbtfd bnd sft bs tif tbblf's row sortfr.
     * TbblfRowSortfr} is drfbtfd bnd sft bs tif tbblf's row sortfr.
     * Tif dffbult vbluf for tif {@dodf butoCrfbtfRowSortfr}
     * Tif dffbult vbluf for tif {@dodf butoCrfbtfRowSortfr}
     * Tif dffbult vbluf for tif {@dodf butoCrfbtfRowSortfr}
     * Tif dffbult vbluf for tif {@dodf butoCrfbtfRowSortfr}
     * Tif dffbult vbluf for tif {@dodf butoCrfbtfRowSortfr}
     * propfrty is {@dodf fblsf}.
     * propfrty is {@dodf fblsf}.
     * propfrty is {@dodf fblsf}.
     * propfrty is {@dodf fblsf}.
     * propfrty is {@dodf fblsf}.
     *
     *
     *
     *
     *
     * @pbrbm butoCrfbtfRowSortfr wiftifr or not b {@dodf RowSortfr}
     * @pbrbm butoCrfbtfRowSortfr wiftifr or not b {@dodf RowSortfr}
     * @pbrbm butoCrfbtfRowSortfr wiftifr or not b {@dodf RowSortfr}
     * @pbrbm butoCrfbtfRowSortfr wiftifr or not b {@dodf RowSortfr}
     * @pbrbm butoCrfbtfRowSortfr wiftifr or not b {@dodf RowSortfr}
     *        siould bf butombtidblly drfbtfd
     *        siould bf butombtidblly drfbtfd
     *        siould bf butombtidblly drfbtfd
     *        siould bf butombtidblly drfbtfd
     *        siould bf butombtidblly drfbtfd
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *    prfffrrfd: truf
     *    prfffrrfd: truf
     *    prfffrrfd: truf
     *    prfffrrfd: truf
     *    prfffrrfd: truf
     *  dfsdription: Wiftifr or not to turn on sorting by dffbult.
     *  dfsdription: Wiftifr or not to turn on sorting by dffbult.
     *  dfsdription: Wiftifr or not to turn on sorting by dffbult.
     *  dfsdription: Wiftifr or not to turn on sorting by dffbult.
     *  dfsdription: Wiftifr or not to turn on sorting by dffbult.
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid void sftAutoCrfbtfRowSortfr(boolfbn butoCrfbtfRowSortfr) {
    publid void sftAutoCrfbtfRowSortfr(boolfbn butoCrfbtfRowSortfr) {
    publid void sftAutoCrfbtfRowSortfr(boolfbn butoCrfbtfRowSortfr) {
    publid void sftAutoCrfbtfRowSortfr(boolfbn butoCrfbtfRowSortfr) {
    publid void sftAutoCrfbtfRowSortfr(boolfbn butoCrfbtfRowSortfr) {
        boolfbn oldVbluf = tiis.butoCrfbtfRowSortfr;
        boolfbn oldVbluf = tiis.butoCrfbtfRowSortfr;
        boolfbn oldVbluf = tiis.butoCrfbtfRowSortfr;
        boolfbn oldVbluf = tiis.butoCrfbtfRowSortfr;
        boolfbn oldVbluf = tiis.butoCrfbtfRowSortfr;
        tiis.butoCrfbtfRowSortfr = butoCrfbtfRowSortfr;
        tiis.butoCrfbtfRowSortfr = butoCrfbtfRowSortfr;
        tiis.butoCrfbtfRowSortfr = butoCrfbtfRowSortfr;
        tiis.butoCrfbtfRowSortfr = butoCrfbtfRowSortfr;
        tiis.butoCrfbtfRowSortfr = butoCrfbtfRowSortfr;
        if (butoCrfbtfRowSortfr) {
        if (butoCrfbtfRowSortfr) {
        if (butoCrfbtfRowSortfr) {
        if (butoCrfbtfRowSortfr) {
        if (butoCrfbtfRowSortfr) {
            sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(gftModfl()));
            sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(gftModfl()));
            sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(gftModfl()));
            sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(gftModfl()));
            sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(gftModfl()));
        }
        }
        }
        }
        }
        firfPropfrtyCibngf("butoCrfbtfRowSortfr", oldVbluf,
        firfPropfrtyCibngf("butoCrfbtfRowSortfr", oldVbluf,
        firfPropfrtyCibngf("butoCrfbtfRowSortfr", oldVbluf,
        firfPropfrtyCibngf("butoCrfbtfRowSortfr", oldVbluf,
        firfPropfrtyCibngf("butoCrfbtfRowSortfr", oldVbluf,
                           butoCrfbtfRowSortfr);
                           butoCrfbtfRowSortfr);
                           butoCrfbtfRowSortfr);
                           butoCrfbtfRowSortfr);
                           butoCrfbtfRowSortfr);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns {@dodf truf} if wifnfvfr tif modfl dibngfs, b nfw
     * Rfturns {@dodf truf} if wifnfvfr tif modfl dibngfs, b nfw
     * Rfturns {@dodf truf} if wifnfvfr tif modfl dibngfs, b nfw
     * Rfturns {@dodf truf} if wifnfvfr tif modfl dibngfs, b nfw
     * Rfturns {@dodf truf} if wifnfvfr tif modfl dibngfs, b nfw
     * {@dodf RowSortfr} siould bf drfbtfd bnd instbllfd
     * {@dodf RowSortfr} siould bf drfbtfd bnd instbllfd
     * {@dodf RowSortfr} siould bf drfbtfd bnd instbllfd
     * {@dodf RowSortfr} siould bf drfbtfd bnd instbllfd
     * {@dodf RowSortfr} siould bf drfbtfd bnd instbllfd
     * bs tif tbblf's sortfr; otifrwisf, rfturns {@dodf fblsf}.
     * bs tif tbblf's sortfr; otifrwisf, rfturns {@dodf fblsf}.
     * bs tif tbblf's sortfr; otifrwisf, rfturns {@dodf fblsf}.
     * bs tif tbblf's sortfr; otifrwisf, rfturns {@dodf fblsf}.
     * bs tif tbblf's sortfr; otifrwisf, rfturns {@dodf fblsf}.
     *
     *
     *
     *
     *
     * @rfturn truf if b {@dodf RowSortfr} siould bf drfbtfd wifn
     * @rfturn truf if b {@dodf RowSortfr} siould bf drfbtfd wifn
     * @rfturn truf if b {@dodf RowSortfr} siould bf drfbtfd wifn
     * @rfturn truf if b {@dodf RowSortfr} siould bf drfbtfd wifn
     * @rfturn truf if b {@dodf RowSortfr} siould bf drfbtfd wifn
     *         tif modfl dibngfs
     *         tif modfl dibngfs
     *         tif modfl dibngfs
     *         tif modfl dibngfs
     *         tif modfl dibngfs
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid boolfbn gftAutoCrfbtfRowSortfr() {
    publid boolfbn gftAutoCrfbtfRowSortfr() {
    publid boolfbn gftAutoCrfbtfRowSortfr() {
    publid boolfbn gftAutoCrfbtfRowSortfr() {
    publid boolfbn gftAutoCrfbtfRowSortfr() {
        rfturn butoCrfbtfRowSortfr;
        rfturn butoCrfbtfRowSortfr;
        rfturn butoCrfbtfRowSortfr;
        rfturn butoCrfbtfRowSortfr;
        rfturn butoCrfbtfRowSortfr;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Spfdififs wiftifr tif sflfdtion siould bf updbtfd bftfr sorting.
     * Spfdififs wiftifr tif sflfdtion siould bf updbtfd bftfr sorting.
     * Spfdififs wiftifr tif sflfdtion siould bf updbtfd bftfr sorting.
     * Spfdififs wiftifr tif sflfdtion siould bf updbtfd bftfr sorting.
     * Spfdififs wiftifr tif sflfdtion siould bf updbtfd bftfr sorting.
     * If truf, on sorting tif sflfdtion is rfsft sudi tibt
     * If truf, on sorting tif sflfdtion is rfsft sudi tibt
     * If truf, on sorting tif sflfdtion is rfsft sudi tibt
     * If truf, on sorting tif sflfdtion is rfsft sudi tibt
     * If truf, on sorting tif sflfdtion is rfsft sudi tibt
     * tif sbmf rows, in tfrms of tif modfl, rfmbin sflfdtfd.  Tif dffbult
     * tif sbmf rows, in tfrms of tif modfl, rfmbin sflfdtfd.  Tif dffbult
     * tif sbmf rows, in tfrms of tif modfl, rfmbin sflfdtfd.  Tif dffbult
     * tif sbmf rows, in tfrms of tif modfl, rfmbin sflfdtfd.  Tif dffbult
     * tif sbmf rows, in tfrms of tif modfl, rfmbin sflfdtfd.  Tif dffbult
     * is truf.
     * is truf.
     * is truf.
     * is truf.
     * is truf.
     *
     *
     *
     *
     *
     * @pbrbm updbtf wiftifr or not to updbtf tif sflfdtion on sorting
     * @pbrbm updbtf wiftifr or not to updbtf tif sflfdtion on sorting
     * @pbrbm updbtf wiftifr or not to updbtf tif sflfdtion on sorting
     * @pbrbm updbtf wiftifr or not to updbtf tif sflfdtion on sorting
     * @pbrbm updbtf wiftifr or not to updbtf tif sflfdtion on sorting
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *       fxpfrt: truf
     *       fxpfrt: truf
     *       fxpfrt: truf
     *       fxpfrt: truf
     *       fxpfrt: truf
     *  dfsdription: Wiftifr or not to updbtf tif sflfdtion on sorting
     *  dfsdription: Wiftifr or not to updbtf tif sflfdtion on sorting
     *  dfsdription: Wiftifr or not to updbtf tif sflfdtion on sorting
     *  dfsdription: Wiftifr or not to updbtf tif sflfdtion on sorting
     *  dfsdription: Wiftifr or not to updbtf tif sflfdtion on sorting
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid void sftUpdbtfSflfdtionOnSort(boolfbn updbtf) {
    publid void sftUpdbtfSflfdtionOnSort(boolfbn updbtf) {
    publid void sftUpdbtfSflfdtionOnSort(boolfbn updbtf) {
    publid void sftUpdbtfSflfdtionOnSort(boolfbn updbtf) {
    publid void sftUpdbtfSflfdtionOnSort(boolfbn updbtf) {
        if (updbtfSflfdtionOnSort != updbtf) {
        if (updbtfSflfdtionOnSort != updbtf) {
        if (updbtfSflfdtionOnSort != updbtf) {
        if (updbtfSflfdtionOnSort != updbtf) {
        if (updbtfSflfdtionOnSort != updbtf) {
            updbtfSflfdtionOnSort = updbtf;
            updbtfSflfdtionOnSort = updbtf;
            updbtfSflfdtionOnSort = updbtf;
            updbtfSflfdtionOnSort = updbtf;
            updbtfSflfdtionOnSort = updbtf;
            firfPropfrtyCibngf("updbtfSflfdtionOnSort", !updbtf, updbtf);
            firfPropfrtyCibngf("updbtfSflfdtionOnSort", !updbtf, updbtf);
            firfPropfrtyCibngf("updbtfSflfdtionOnSort", !updbtf, updbtf);
            firfPropfrtyCibngf("updbtfSflfdtionOnSort", !updbtf, updbtf);
            firfPropfrtyCibngf("updbtfSflfdtionOnSort", !updbtf, updbtf);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif sflfdtion siould bf updbtfd bftfr sorting.
     * Rfturns truf if tif sflfdtion siould bf updbtfd bftfr sorting.
     * Rfturns truf if tif sflfdtion siould bf updbtfd bftfr sorting.
     * Rfturns truf if tif sflfdtion siould bf updbtfd bftfr sorting.
     * Rfturns truf if tif sflfdtion siould bf updbtfd bftfr sorting.
     *
     *
     *
     *
     *
     * @rfturn wiftifr to updbtf tif sflfdtion on b sort
     * @rfturn wiftifr to updbtf tif sflfdtion on b sort
     * @rfturn wiftifr to updbtf tif sflfdtion on b sort
     * @rfturn wiftifr to updbtf tif sflfdtion on b sort
     * @rfturn wiftifr to updbtf tif sflfdtion on b sort
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid boolfbn gftUpdbtfSflfdtionOnSort() {
    publid boolfbn gftUpdbtfSflfdtionOnSort() {
    publid boolfbn gftUpdbtfSflfdtionOnSort() {
    publid boolfbn gftUpdbtfSflfdtionOnSort() {
    publid boolfbn gftUpdbtfSflfdtionOnSort() {
        rfturn updbtfSflfdtionOnSort;
        rfturn updbtfSflfdtionOnSort;
        rfturn updbtfSflfdtionOnSort;
        rfturn updbtfSflfdtionOnSort;
        rfturn updbtfSflfdtionOnSort;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>RowSortfr</dodf>.  <dodf>RowSortfr</dodf> is usfd
     * Sfts tif <dodf>RowSortfr</dodf>.  <dodf>RowSortfr</dodf> is usfd
     * Sfts tif <dodf>RowSortfr</dodf>.  <dodf>RowSortfr</dodf> is usfd
     * Sfts tif <dodf>RowSortfr</dodf>.  <dodf>RowSortfr</dodf> is usfd
     * Sfts tif <dodf>RowSortfr</dodf>.  <dodf>RowSortfr</dodf> is usfd
     * to providf sorting bnd filtfring to b <dodf>JTbblf</dodf>.
     * to providf sorting bnd filtfring to b <dodf>JTbblf</dodf>.
     * to providf sorting bnd filtfring to b <dodf>JTbblf</dodf>.
     * to providf sorting bnd filtfring to b <dodf>JTbblf</dodf>.
     * to providf sorting bnd filtfring to b <dodf>JTbblf</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod dlfbrs tif sflfdtion bnd rfsfts bny vbribblf row ifigits.
     * Tiis mftiod dlfbrs tif sflfdtion bnd rfsfts bny vbribblf row ifigits.
     * Tiis mftiod dlfbrs tif sflfdtion bnd rfsfts bny vbribblf row ifigits.
     * Tiis mftiod dlfbrs tif sflfdtion bnd rfsfts bny vbribblf row ifigits.
     * Tiis mftiod dlfbrs tif sflfdtion bnd rfsfts bny vbribblf row ifigits.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod firfs b <dodf>PropfrtyCibngfEvfnt</dodf> wifn bppropribtf,
     * Tiis mftiod firfs b <dodf>PropfrtyCibngfEvfnt</dodf> wifn bppropribtf,
     * Tiis mftiod firfs b <dodf>PropfrtyCibngfEvfnt</dodf> wifn bppropribtf,
     * Tiis mftiod firfs b <dodf>PropfrtyCibngfEvfnt</dodf> wifn bppropribtf,
     * Tiis mftiod firfs b <dodf>PropfrtyCibngfEvfnt</dodf> wifn bppropribtf,
     * witi tif propfrty nbmf <dodf>"rowSortfr"</dodf>.  For
     * witi tif propfrty nbmf <dodf>"rowSortfr"</dodf>.  For
     * witi tif propfrty nbmf <dodf>"rowSortfr"</dodf>.  For
     * witi tif propfrty nbmf <dodf>"rowSortfr"</dodf>.  For
     * witi tif propfrty nbmf <dodf>"rowSortfr"</dodf>.  For
     * bbdkwbrd-dompbtibility, tiis mftiod firfs bn bdditionbl fvfnt witi tif
     * bbdkwbrd-dompbtibility, tiis mftiod firfs bn bdditionbl fvfnt witi tif
     * bbdkwbrd-dompbtibility, tiis mftiod firfs bn bdditionbl fvfnt witi tif
     * bbdkwbrd-dompbtibility, tiis mftiod firfs bn bdditionbl fvfnt witi tif
     * bbdkwbrd-dompbtibility, tiis mftiod firfs bn bdditionbl fvfnt witi tif
     * propfrty nbmf <dodf>"sortfr"</dodf>.
     * propfrty nbmf <dodf>"sortfr"</dodf>.
     * propfrty nbmf <dodf>"sortfr"</dodf>.
     * propfrty nbmf <dodf>"sortfr"</dodf>.
     * propfrty nbmf <dodf>"sortfr"</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif undfrlying modfl of tif <dodf>RowSortfr</dodf> difffrs from
     * If tif undfrlying modfl of tif <dodf>RowSortfr</dodf> difffrs from
     * If tif undfrlying modfl of tif <dodf>RowSortfr</dodf> difffrs from
     * If tif undfrlying modfl of tif <dodf>RowSortfr</dodf> difffrs from
     * If tif undfrlying modfl of tif <dodf>RowSortfr</dodf> difffrs from
     * tibt of tiis <dodf>JTbblf</dodf> undffinfd bfibvior will rfsult.
     * tibt of tiis <dodf>JTbblf</dodf> undffinfd bfibvior will rfsult.
     * tibt of tiis <dodf>JTbblf</dodf> undffinfd bfibvior will rfsult.
     * tibt of tiis <dodf>JTbblf</dodf> undffinfd bfibvior will rfsult.
     * tibt of tiis <dodf>JTbblf</dodf> undffinfd bfibvior will rfsult.
     *
     *
     *
     *
     *
     * @pbrbm sortfr tif <dodf>RowSortfr</dodf>; <dodf>null</dodf> turns
     * @pbrbm sortfr tif <dodf>RowSortfr</dodf>; <dodf>null</dodf> turns
     * @pbrbm sortfr tif <dodf>RowSortfr</dodf>; <dodf>null</dodf> turns
     * @pbrbm sortfr tif <dodf>RowSortfr</dodf>; <dodf>null</dodf> turns
     * @pbrbm sortfr tif <dodf>RowSortfr</dodf>; <dodf>null</dodf> turns
     *        sorting off
     *        sorting off
     *        sorting off
     *        sorting off
     *        sorting off
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif tbblf's RowSortfr
     *  dfsdription: Tif tbblf's RowSortfr
     *  dfsdription: Tif tbblf's RowSortfr
     *  dfsdription: Tif tbblf's RowSortfr
     *  dfsdription: Tif tbblf's RowSortfr
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid void sftRowSortfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
    publid void sftRowSortfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
    publid void sftRowSortfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
    publid void sftRowSortfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
    publid void sftRowSortfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
        RowSortfr<? fxtfnds TbblfModfl> oldRowSortfr = null;
        RowSortfr<? fxtfnds TbblfModfl> oldRowSortfr = null;
        RowSortfr<? fxtfnds TbblfModfl> oldRowSortfr = null;
        RowSortfr<? fxtfnds TbblfModfl> oldRowSortfr = null;
        RowSortfr<? fxtfnds TbblfModfl> oldRowSortfr = null;
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
            oldRowSortfr = sortMbnbgfr.sortfr;
            oldRowSortfr = sortMbnbgfr.sortfr;
            oldRowSortfr = sortMbnbgfr.sortfr;
            oldRowSortfr = sortMbnbgfr.sortfr;
            oldRowSortfr = sortMbnbgfr.sortfr;
            sortMbnbgfr.disposf();
            sortMbnbgfr.disposf();
            sortMbnbgfr.disposf();
            sortMbnbgfr.disposf();
            sortMbnbgfr.disposf();
            sortMbnbgfr = null;
            sortMbnbgfr = null;
            sortMbnbgfr = null;
            sortMbnbgfr = null;
            sortMbnbgfr = null;
        }
        }
        }
        }
        }
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        rowModfl = null;
        dlfbrSflfdtionAndLfbdAndior();
        dlfbrSflfdtionAndLfbdAndior();
        dlfbrSflfdtionAndLfbdAndior();
        dlfbrSflfdtionAndLfbdAndior();
        dlfbrSflfdtionAndLfbdAndior();
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
            sortMbnbgfr = nfw SortMbnbgfr(sortfr);
            sortMbnbgfr = nfw SortMbnbgfr(sortfr);
            sortMbnbgfr = nfw SortMbnbgfr(sortfr);
            sortMbnbgfr = nfw SortMbnbgfr(sortfr);
            sortMbnbgfr = nfw SortMbnbgfr(sortfr);
        }
        }
        }
        }
        }
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        firfPropfrtyCibngf("rowSortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("rowSortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("rowSortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("rowSortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("rowSortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("sortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("sortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("sortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("sortfr", oldRowSortfr, sortfr);
        firfPropfrtyCibngf("sortfr", oldRowSortfr, sortfr);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif objfdt rfsponsiblf for sorting.
     * Rfturns tif objfdt rfsponsiblf for sorting.
     * Rfturns tif objfdt rfsponsiblf for sorting.
     * Rfturns tif objfdt rfsponsiblf for sorting.
     * Rfturns tif objfdt rfsponsiblf for sorting.
     *
     *
     *
     *
     *
     * @rfturn tif objfdt rfsponsiblf for sorting
     * @rfturn tif objfdt rfsponsiblf for sorting
     * @rfturn tif objfdt rfsponsiblf for sorting
     * @rfturn tif objfdt rfsponsiblf for sorting
     * @rfturn tif objfdt rfsponsiblf for sorting
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid RowSortfr<? fxtfnds TbblfModfl> gftRowSortfr() {
    publid RowSortfr<? fxtfnds TbblfModfl> gftRowSortfr() {
    publid RowSortfr<? fxtfnds TbblfModfl> gftRowSortfr() {
    publid RowSortfr<? fxtfnds TbblfModfl> gftRowSortfr() {
    publid RowSortfr<? fxtfnds TbblfModfl> gftRowSortfr() {
        rfturn (sortMbnbgfr != null) ? sortMbnbgfr.sortfr : null;
        rfturn (sortMbnbgfr != null) ? sortMbnbgfr.sortfr : null;
        rfturn (sortMbnbgfr != null) ? sortMbnbgfr.sortfr : null;
        rfturn (sortMbnbgfr != null) ? sortMbnbgfr.sortfr : null;
        rfturn (sortMbnbgfr != null) ? sortMbnbgfr.sortfr : null;
    }
    }
    }
    }
    }





//
//
//
//
//
// Sflfdtion mftiods
// Sflfdtion mftiods
// Sflfdtion mftiods
// Sflfdtion mftiods
// Sflfdtion mftiods
//
//
//
//
//
    /**
    /**
    /**
    /**
    /**
     * Sfts tif tbblf's sflfdtion modf to bllow only singlf sflfdtions, b singlf
     * Sfts tif tbblf's sflfdtion modf to bllow only singlf sflfdtions, b singlf
     * Sfts tif tbblf's sflfdtion modf to bllow only singlf sflfdtions, b singlf
     * Sfts tif tbblf's sflfdtion modf to bllow only singlf sflfdtions, b singlf
     * Sfts tif tbblf's sflfdtion modf to bllow only singlf sflfdtions, b singlf
     * dontiguous intfrvbl, or multiplf intfrvbls.
     * dontiguous intfrvbl, or multiplf intfrvbls.
     * dontiguous intfrvbl, or multiplf intfrvbls.
     * dontiguous intfrvbl, or multiplf intfrvbls.
     * dontiguous intfrvbl, or multiplf intfrvbls.
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <dodf>JTbblf</dodf> providfs bll tif mftiods for ibndling
     * <dodf>JTbblf</dodf> providfs bll tif mftiods for ibndling
     * <dodf>JTbblf</dodf> providfs bll tif mftiods for ibndling
     * <dodf>JTbblf</dodf> providfs bll tif mftiods for ibndling
     * <dodf>JTbblf</dodf> providfs bll tif mftiods for ibndling
     * dolumn bnd row sflfdtion.  Wifn sftting stbtfs,
     * dolumn bnd row sflfdtion.  Wifn sftting stbtfs,
     * dolumn bnd row sflfdtion.  Wifn sftting stbtfs,
     * dolumn bnd row sflfdtion.  Wifn sftting stbtfs,
     * dolumn bnd row sflfdtion.  Wifn sftting stbtfs,
     * sudi bs <dodf>sftSflfdtionModf</dodf>, it not only
     * sudi bs <dodf>sftSflfdtionModf</dodf>, it not only
     * sudi bs <dodf>sftSflfdtionModf</dodf>, it not only
     * sudi bs <dodf>sftSflfdtionModf</dodf>, it not only
     * sudi bs <dodf>sftSflfdtionModf</dodf>, it not only
     * updbtfs tif modf for tif row sflfdtion modfl but blso sfts similbr
     * updbtfs tif modf for tif row sflfdtion modfl but blso sfts similbr
     * updbtfs tif modf for tif row sflfdtion modfl but blso sfts similbr
     * updbtfs tif modf for tif row sflfdtion modfl but blso sfts similbr
     * updbtfs tif modf for tif row sflfdtion modfl but blso sfts similbr
     * vblufs in tif sflfdtion modfl of tif <dodf>dolumnModfl</dodf>.
     * vblufs in tif sflfdtion modfl of tif <dodf>dolumnModfl</dodf>.
     * vblufs in tif sflfdtion modfl of tif <dodf>dolumnModfl</dodf>.
     * vblufs in tif sflfdtion modfl of tif <dodf>dolumnModfl</dodf>.
     * vblufs in tif sflfdtion modfl of tif <dodf>dolumnModfl</dodf>.
     * If you wbnt to ibvf tif row bnd dolumn sflfdtion modfls opfrbting
     * If you wbnt to ibvf tif row bnd dolumn sflfdtion modfls opfrbting
     * If you wbnt to ibvf tif row bnd dolumn sflfdtion modfls opfrbting
     * If you wbnt to ibvf tif row bnd dolumn sflfdtion modfls opfrbting
     * If you wbnt to ibvf tif row bnd dolumn sflfdtion modfls opfrbting
     * in difffrfnt modfs, sft tifm boti dirfdtly.
     * in difffrfnt modfs, sft tifm boti dirfdtly.
     * in difffrfnt modfs, sft tifm boti dirfdtly.
     * in difffrfnt modfs, sft tifm boti dirfdtly.
     * in difffrfnt modfs, sft tifm boti dirfdtly.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Boti tif row bnd dolumn sflfdtion modfls for <dodf>JTbblf</dodf>
     * Boti tif row bnd dolumn sflfdtion modfls for <dodf>JTbblf</dodf>
     * Boti tif row bnd dolumn sflfdtion modfls for <dodf>JTbblf</dodf>
     * Boti tif row bnd dolumn sflfdtion modfls for <dodf>JTbblf</dodf>
     * Boti tif row bnd dolumn sflfdtion modfls for <dodf>JTbblf</dodf>
     * dffbult to using b <dodf>DffbultListSflfdtionModfl</dodf>
     * dffbult to using b <dodf>DffbultListSflfdtionModfl</dodf>
     * dffbult to using b <dodf>DffbultListSflfdtionModfl</dodf>
     * dffbult to using b <dodf>DffbultListSflfdtionModfl</dodf>
     * dffbult to using b <dodf>DffbultListSflfdtionModfl</dodf>
     * so tibt <dodf>JTbblf</dodf> works tif sbmf wby bs tif
     * so tibt <dodf>JTbblf</dodf> works tif sbmf wby bs tif
     * so tibt <dodf>JTbblf</dodf> works tif sbmf wby bs tif
     * so tibt <dodf>JTbblf</dodf> works tif sbmf wby bs tif
     * so tibt <dodf>JTbblf</dodf> works tif sbmf wby bs tif
     * <dodf>JList</dodf>. Sff tif <dodf>sftSflfdtionModf</dodf> mftiod
     * <dodf>JList</dodf>. Sff tif <dodf>sftSflfdtionModf</dodf> mftiod
     * <dodf>JList</dodf>. Sff tif <dodf>sftSflfdtionModf</dodf> mftiod
     * <dodf>JList</dodf>. Sff tif <dodf>sftSflfdtionModf</dodf> mftiod
     * <dodf>JList</dodf>. Sff tif <dodf>sftSflfdtionModf</dodf> mftiod
     * in <dodf>JList</dodf> for dftbils bbout tif modfs.
     * in <dodf>JList</dodf> for dftbils bbout tif modfs.
     * in <dodf>JList</dodf> for dftbils bbout tif modfs.
     * in <dodf>JList</dodf> for dftbils bbout tif modfs.
     * in <dodf>JList</dodf> for dftbils bbout tif modfs.
     *
     *
     *
     *
     *
     * @pbrbm sflfdtionModf tif modf usfd by tif row bnd dolumn sflfdtion modfls
     * @pbrbm sflfdtionModf tif modf usfd by tif row bnd dolumn sflfdtion modfls
     * @pbrbm sflfdtionModf tif modf usfd by tif row bnd dolumn sflfdtion modfls
     * @pbrbm sflfdtionModf tif modf usfd by tif row bnd dolumn sflfdtion modfls
     * @pbrbm sflfdtionModf tif modf usfd by tif row bnd dolumn sflfdtion modfls
     * @sff JList#sftSflfdtionModf
     * @sff JList#sftSflfdtionModf
     * @sff JList#sftSflfdtionModf
     * @sff JList#sftSflfdtionModf
     * @sff JList#sftSflfdtionModf
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * dfsdription: Tif sflfdtion modf usfd by tif row bnd dolumn sflfdtion modfls.
     * dfsdription: Tif sflfdtion modf usfd by tif row bnd dolumn sflfdtion modfls.
     * dfsdription: Tif sflfdtion modf usfd by tif row bnd dolumn sflfdtion modfls.
     * dfsdription: Tif sflfdtion modf usfd by tif row bnd dolumn sflfdtion modfls.
     * dfsdription: Tif sflfdtion modf usfd by tif row bnd dolumn sflfdtion modfls.
     *        fnum: SINGLE_SELECTION            ListSflfdtionModfl.SINGLE_SELECTION
     *        fnum: SINGLE_SELECTION            ListSflfdtionModfl.SINGLE_SELECTION
     *        fnum: SINGLE_SELECTION            ListSflfdtionModfl.SINGLE_SELECTION
     *        fnum: SINGLE_SELECTION            ListSflfdtionModfl.SINGLE_SELECTION
     *        fnum: SINGLE_SELECTION            ListSflfdtionModfl.SINGLE_SELECTION
     *              SINGLE_INTERVAL_SELECTION   ListSflfdtionModfl.SINGLE_INTERVAL_SELECTION
     *              SINGLE_INTERVAL_SELECTION   ListSflfdtionModfl.SINGLE_INTERVAL_SELECTION
     *              SINGLE_INTERVAL_SELECTION   ListSflfdtionModfl.SINGLE_INTERVAL_SELECTION
     *              SINGLE_INTERVAL_SELECTION   ListSflfdtionModfl.SINGLE_INTERVAL_SELECTION
     *              SINGLE_INTERVAL_SELECTION   ListSflfdtionModfl.SINGLE_INTERVAL_SELECTION
     *              MULTIPLE_INTERVAL_SELECTION ListSflfdtionModfl.MULTIPLE_INTERVAL_SELECTION
     *              MULTIPLE_INTERVAL_SELECTION ListSflfdtionModfl.MULTIPLE_INTERVAL_SELECTION
     *              MULTIPLE_INTERVAL_SELECTION ListSflfdtionModfl.MULTIPLE_INTERVAL_SELECTION
     *              MULTIPLE_INTERVAL_SELECTION ListSflfdtionModfl.MULTIPLE_INTERVAL_SELECTION
     *              MULTIPLE_INTERVAL_SELECTION ListSflfdtionModfl.MULTIPLE_INTERVAL_SELECTION
     */
     */
     */
     */
     */
    publid void sftSflfdtionModf(int sflfdtionModf) {
    publid void sftSflfdtionModf(int sflfdtionModf) {
    publid void sftSflfdtionModf(int sflfdtionModf) {
    publid void sftSflfdtionModf(int sflfdtionModf) {
    publid void sftSflfdtionModf(int sflfdtionModf) {
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftColumnModfl().gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftColumnModfl().gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftColumnModfl().gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftColumnModfl().gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
        gftColumnModfl().gftSflfdtionModfl().sftSflfdtionModf(sflfdtionModf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts wiftifr tif rows in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif rows in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif rows in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif rows in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif rows in tiis modfl dbn bf sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm rowSflfdtionAllowfd   truf if tiis modfl will bllow row sflfdtion
     * @pbrbm rowSflfdtionAllowfd   truf if tiis modfl will bllow row sflfdtion
     * @pbrbm rowSflfdtionAllowfd   truf if tiis modfl will bllow row sflfdtion
     * @pbrbm rowSflfdtionAllowfd   truf if tiis modfl will bllow row sflfdtion
     * @pbrbm rowSflfdtionAllowfd   truf if tiis modfl will bllow row sflfdtion
     * @sff #gftRowSflfdtionAllowfd
     * @sff #gftRowSflfdtionAllowfd
     * @sff #gftRowSflfdtionAllowfd
     * @sff #gftRowSflfdtionAllowfd
     * @sff #gftRowSflfdtionAllowfd
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: If truf, bn fntirf row is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf row is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf row is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf row is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf row is sflfdtfd for fbdi sflfdtfd dfll.
     */
     */
     */
     */
     */
    publid void sftRowSflfdtionAllowfd(boolfbn rowSflfdtionAllowfd) {
    publid void sftRowSflfdtionAllowfd(boolfbn rowSflfdtionAllowfd) {
    publid void sftRowSflfdtionAllowfd(boolfbn rowSflfdtionAllowfd) {
    publid void sftRowSflfdtionAllowfd(boolfbn rowSflfdtionAllowfd) {
    publid void sftRowSflfdtionAllowfd(boolfbn rowSflfdtionAllowfd) {
        boolfbn old = tiis.rowSflfdtionAllowfd;
        boolfbn old = tiis.rowSflfdtionAllowfd;
        boolfbn old = tiis.rowSflfdtionAllowfd;
        boolfbn old = tiis.rowSflfdtionAllowfd;
        boolfbn old = tiis.rowSflfdtionAllowfd;
        tiis.rowSflfdtionAllowfd = rowSflfdtionAllowfd;
        tiis.rowSflfdtionAllowfd = rowSflfdtionAllowfd;
        tiis.rowSflfdtionAllowfd = rowSflfdtionAllowfd;
        tiis.rowSflfdtionAllowfd = rowSflfdtionAllowfd;
        tiis.rowSflfdtionAllowfd = rowSflfdtionAllowfd;
        if (old != rowSflfdtionAllowfd) {
        if (old != rowSflfdtionAllowfd) {
        if (old != rowSflfdtionAllowfd) {
        if (old != rowSflfdtionAllowfd) {
        if (old != rowSflfdtionAllowfd) {
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }
        firfPropfrtyCibngf("rowSflfdtionAllowfd", old, rowSflfdtionAllowfd);
        firfPropfrtyCibngf("rowSflfdtionAllowfd", old, rowSflfdtionAllowfd);
        firfPropfrtyCibngf("rowSflfdtionAllowfd", old, rowSflfdtionAllowfd);
        firfPropfrtyCibngf("rowSflfdtionAllowfd", old, rowSflfdtionAllowfd);
        firfPropfrtyCibngf("rowSflfdtionAllowfd", old, rowSflfdtionAllowfd);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if rows dbn bf sflfdtfd.
     * Rfturns truf if rows dbn bf sflfdtfd.
     * Rfturns truf if rows dbn bf sflfdtfd.
     * Rfturns truf if rows dbn bf sflfdtfd.
     * Rfturns truf if rows dbn bf sflfdtfd.
     *
     *
     *
     *
     *
     * @rfturn truf if rows dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if rows dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if rows dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if rows dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if rows dbn bf sflfdtfd, otifrwisf fblsf
     * @sff #sftRowSflfdtionAllowfd
     * @sff #sftRowSflfdtionAllowfd
     * @sff #sftRowSflfdtionAllowfd
     * @sff #sftRowSflfdtionAllowfd
     * @sff #sftRowSflfdtionAllowfd
     */
     */
     */
     */
     */
    publid boolfbn gftRowSflfdtionAllowfd() {
    publid boolfbn gftRowSflfdtionAllowfd() {
    publid boolfbn gftRowSflfdtionAllowfd() {
    publid boolfbn gftRowSflfdtionAllowfd() {
    publid boolfbn gftRowSflfdtionAllowfd() {
        rfturn rowSflfdtionAllowfd;
        rfturn rowSflfdtionAllowfd;
        rfturn rowSflfdtionAllowfd;
        rfturn rowSflfdtionAllowfd;
        rfturn rowSflfdtionAllowfd;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts wiftifr tif dolumns in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif dolumns in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif dolumns in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif dolumns in tiis modfl dbn bf sflfdtfd.
     * Sfts wiftifr tif dolumns in tiis modfl dbn bf sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm dolumnSflfdtionAllowfd   truf if tiis modfl will bllow dolumn sflfdtion
     * @pbrbm dolumnSflfdtionAllowfd   truf if tiis modfl will bllow dolumn sflfdtion
     * @pbrbm dolumnSflfdtionAllowfd   truf if tiis modfl will bllow dolumn sflfdtion
     * @pbrbm dolumnSflfdtionAllowfd   truf if tiis modfl will bllow dolumn sflfdtion
     * @pbrbm dolumnSflfdtionAllowfd   truf if tiis modfl will bllow dolumn sflfdtion
     * @sff #gftColumnSflfdtionAllowfd
     * @sff #gftColumnSflfdtionAllowfd
     * @sff #gftColumnSflfdtionAllowfd
     * @sff #gftColumnSflfdtionAllowfd
     * @sff #gftColumnSflfdtionAllowfd
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: If truf, bn fntirf dolumn is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf dolumn is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf dolumn is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf dolumn is sflfdtfd for fbdi sflfdtfd dfll.
     *  dfsdription: If truf, bn fntirf dolumn is sflfdtfd for fbdi sflfdtfd dfll.
     */
     */
     */
     */
     */
    publid void sftColumnSflfdtionAllowfd(boolfbn dolumnSflfdtionAllowfd) {
    publid void sftColumnSflfdtionAllowfd(boolfbn dolumnSflfdtionAllowfd) {
    publid void sftColumnSflfdtionAllowfd(boolfbn dolumnSflfdtionAllowfd) {
    publid void sftColumnSflfdtionAllowfd(boolfbn dolumnSflfdtionAllowfd) {
    publid void sftColumnSflfdtionAllowfd(boolfbn dolumnSflfdtionAllowfd) {
        boolfbn old = dolumnModfl.gftColumnSflfdtionAllowfd();
        boolfbn old = dolumnModfl.gftColumnSflfdtionAllowfd();
        boolfbn old = dolumnModfl.gftColumnSflfdtionAllowfd();
        boolfbn old = dolumnModfl.gftColumnSflfdtionAllowfd();
        boolfbn old = dolumnModfl.gftColumnSflfdtionAllowfd();
        dolumnModfl.sftColumnSflfdtionAllowfd(dolumnSflfdtionAllowfd);
        dolumnModfl.sftColumnSflfdtionAllowfd(dolumnSflfdtionAllowfd);
        dolumnModfl.sftColumnSflfdtionAllowfd(dolumnSflfdtionAllowfd);
        dolumnModfl.sftColumnSflfdtionAllowfd(dolumnSflfdtionAllowfd);
        dolumnModfl.sftColumnSflfdtionAllowfd(dolumnSflfdtionAllowfd);
        if (old != dolumnSflfdtionAllowfd) {
        if (old != dolumnSflfdtionAllowfd) {
        if (old != dolumnSflfdtionAllowfd) {
        if (old != dolumnSflfdtionAllowfd) {
        if (old != dolumnSflfdtionAllowfd) {
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }
        firfPropfrtyCibngf("dolumnSflfdtionAllowfd", old, dolumnSflfdtionAllowfd);
        firfPropfrtyCibngf("dolumnSflfdtionAllowfd", old, dolumnSflfdtionAllowfd);
        firfPropfrtyCibngf("dolumnSflfdtionAllowfd", old, dolumnSflfdtionAllowfd);
        firfPropfrtyCibngf("dolumnSflfdtionAllowfd", old, dolumnSflfdtionAllowfd);
        firfPropfrtyCibngf("dolumnSflfdtionAllowfd", old, dolumnSflfdtionAllowfd);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if dolumns dbn bf sflfdtfd.
     * Rfturns truf if dolumns dbn bf sflfdtfd.
     * Rfturns truf if dolumns dbn bf sflfdtfd.
     * Rfturns truf if dolumns dbn bf sflfdtfd.
     * Rfturns truf if dolumns dbn bf sflfdtfd.
     *
     *
     *
     *
     *
     * @rfturn truf if dolumns dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if dolumns dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if dolumns dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if dolumns dbn bf sflfdtfd, otifrwisf fblsf
     * @rfturn truf if dolumns dbn bf sflfdtfd, otifrwisf fblsf
     * @sff #sftColumnSflfdtionAllowfd
     * @sff #sftColumnSflfdtionAllowfd
     * @sff #sftColumnSflfdtionAllowfd
     * @sff #sftColumnSflfdtionAllowfd
     * @sff #sftColumnSflfdtionAllowfd
     */
     */
     */
     */
     */
    publid boolfbn gftColumnSflfdtionAllowfd() {
    publid boolfbn gftColumnSflfdtionAllowfd() {
    publid boolfbn gftColumnSflfdtionAllowfd() {
    publid boolfbn gftColumnSflfdtionAllowfd() {
    publid boolfbn gftColumnSflfdtionAllowfd() {
        rfturn dolumnModfl.gftColumnSflfdtionAllowfd();
        rfturn dolumnModfl.gftColumnSflfdtionAllowfd();
        rfturn dolumnModfl.gftColumnSflfdtionAllowfd();
        rfturn dolumnModfl.gftColumnSflfdtionAllowfd();
        rfturn dolumnModfl.gftColumnSflfdtionAllowfd();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts wiftifr tiis tbblf bllows boti b dolumn sflfdtion bnd b
     * Sfts wiftifr tiis tbblf bllows boti b dolumn sflfdtion bnd b
     * Sfts wiftifr tiis tbblf bllows boti b dolumn sflfdtion bnd b
     * Sfts wiftifr tiis tbblf bllows boti b dolumn sflfdtion bnd b
     * Sfts wiftifr tiis tbblf bllows boti b dolumn sflfdtion bnd b
     * row sflfdtion to fxist simultbnfously. Wifn sft,
     * row sflfdtion to fxist simultbnfously. Wifn sft,
     * row sflfdtion to fxist simultbnfously. Wifn sft,
     * row sflfdtion to fxist simultbnfously. Wifn sft,
     * row sflfdtion to fxist simultbnfously. Wifn sft,
     * tif tbblf trfbts tif intfrsfdtion of tif row bnd dolumn sflfdtion
     * tif tbblf trfbts tif intfrsfdtion of tif row bnd dolumn sflfdtion
     * tif tbblf trfbts tif intfrsfdtion of tif row bnd dolumn sflfdtion
     * tif tbblf trfbts tif intfrsfdtion of tif row bnd dolumn sflfdtion
     * tif tbblf trfbts tif intfrsfdtion of tif row bnd dolumn sflfdtion
     * modfls bs tif sflfdtfd dflls. Ovfrridf <dodf>isCfllSflfdtfd</dodf> to
     * modfls bs tif sflfdtfd dflls. Ovfrridf <dodf>isCfllSflfdtfd</dodf> to
     * modfls bs tif sflfdtfd dflls. Ovfrridf <dodf>isCfllSflfdtfd</dodf> to
     * modfls bs tif sflfdtfd dflls. Ovfrridf <dodf>isCfllSflfdtfd</dodf> to
     * modfls bs tif sflfdtfd dflls. Ovfrridf <dodf>isCfllSflfdtfd</dodf> to
     * dibngf tiis dffbult bfibvior. Tiis mftiod is fquivblfnt to sftting
     * dibngf tiis dffbult bfibvior. Tiis mftiod is fquivblfnt to sftting
     * dibngf tiis dffbult bfibvior. Tiis mftiod is fquivblfnt to sftting
     * dibngf tiis dffbult bfibvior. Tiis mftiod is fquivblfnt to sftting
     * dibngf tiis dffbult bfibvior. Tiis mftiod is fquivblfnt to sftting
     * boti tif <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd
     * boti tif <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd
     * boti tif <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd
     * boti tif <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd
     * boti tif <dodf>rowSflfdtionAllowfd</dodf> propfrty bnd
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnSflfdtionAllowfd</dodf> propfrty of tif
     * <dodf>dolumnModfl</dodf> to tif supplifd vbluf.
     * <dodf>dolumnModfl</dodf> to tif supplifd vbluf.
     * <dodf>dolumnModfl</dodf> to tif supplifd vbluf.
     * <dodf>dolumnModfl</dodf> to tif supplifd vbluf.
     * <dodf>dolumnModfl</dodf> to tif supplifd vbluf.
     *
     *
     *
     *
     *
     * @pbrbm  dfllSflfdtionEnbblfd     truf if simultbnfous row bnd dolumn
     * @pbrbm  dfllSflfdtionEnbblfd     truf if simultbnfous row bnd dolumn
     * @pbrbm  dfllSflfdtionEnbblfd     truf if simultbnfous row bnd dolumn
     * @pbrbm  dfllSflfdtionEnbblfd     truf if simultbnfous row bnd dolumn
     * @pbrbm  dfllSflfdtionEnbblfd     truf if simultbnfous row bnd dolumn
     *                                  sflfdtion is bllowfd
     *                                  sflfdtion is bllowfd
     *                                  sflfdtion is bllowfd
     *                                  sflfdtion is bllowfd
     *                                  sflfdtion is bllowfd
     * @sff #gftCfllSflfdtionEnbblfd
     * @sff #gftCfllSflfdtionEnbblfd
     * @sff #gftCfllSflfdtionEnbblfd
     * @sff #gftCfllSflfdtionEnbblfd
     * @sff #gftCfllSflfdtionEnbblfd
     * @sff #isCfllSflfdtfd
     * @sff #isCfllSflfdtfd
     * @sff #isCfllSflfdtfd
     * @sff #isCfllSflfdtfd
     * @sff #isCfllSflfdtfd
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: Sflfdt b rfdtbngulbr rfgion of dflls rbtifr tibn
     *  dfsdription: Sflfdt b rfdtbngulbr rfgion of dflls rbtifr tibn
     *  dfsdription: Sflfdt b rfdtbngulbr rfgion of dflls rbtifr tibn
     *  dfsdription: Sflfdt b rfdtbngulbr rfgion of dflls rbtifr tibn
     *  dfsdription: Sflfdt b rfdtbngulbr rfgion of dflls rbtifr tibn
     *               rows or dolumns.
     *               rows or dolumns.
     *               rows or dolumns.
     *               rows or dolumns.
     *               rows or dolumns.
     */
     */
     */
     */
     */
    publid void sftCfllSflfdtionEnbblfd(boolfbn dfllSflfdtionEnbblfd) {
    publid void sftCfllSflfdtionEnbblfd(boolfbn dfllSflfdtionEnbblfd) {
    publid void sftCfllSflfdtionEnbblfd(boolfbn dfllSflfdtionEnbblfd) {
    publid void sftCfllSflfdtionEnbblfd(boolfbn dfllSflfdtionEnbblfd) {
    publid void sftCfllSflfdtionEnbblfd(boolfbn dfllSflfdtionEnbblfd) {
        sftRowSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftRowSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftRowSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftRowSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftRowSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftColumnSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftColumnSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftColumnSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftColumnSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        sftColumnSflfdtionAllowfd(dfllSflfdtionEnbblfd);
        boolfbn old = tiis.dfllSflfdtionEnbblfd;
        boolfbn old = tiis.dfllSflfdtionEnbblfd;
        boolfbn old = tiis.dfllSflfdtionEnbblfd;
        boolfbn old = tiis.dfllSflfdtionEnbblfd;
        boolfbn old = tiis.dfllSflfdtionEnbblfd;
        tiis.dfllSflfdtionEnbblfd = dfllSflfdtionEnbblfd;
        tiis.dfllSflfdtionEnbblfd = dfllSflfdtionEnbblfd;
        tiis.dfllSflfdtionEnbblfd = dfllSflfdtionEnbblfd;
        tiis.dfllSflfdtionEnbblfd = dfllSflfdtionEnbblfd;
        tiis.dfllSflfdtionEnbblfd = dfllSflfdtionEnbblfd;
        firfPropfrtyCibngf("dfllSflfdtionEnbblfd", old, dfllSflfdtionEnbblfd);
        firfPropfrtyCibngf("dfllSflfdtionEnbblfd", old, dfllSflfdtionEnbblfd);
        firfPropfrtyCibngf("dfllSflfdtionEnbblfd", old, dfllSflfdtionEnbblfd);
        firfPropfrtyCibngf("dfllSflfdtionEnbblfd", old, dfllSflfdtionEnbblfd);
        firfPropfrtyCibngf("dfllSflfdtionEnbblfd", old, dfllSflfdtionEnbblfd);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd.
     * Rfturns truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd.
     * Rfturns truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd.
     * Rfturns truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd.
     * Rfturns truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd.
     * Equivblfnt to <dodf>gftRowSflfdtionAllowfd() &bmp;&bmp;
     * Equivblfnt to <dodf>gftRowSflfdtionAllowfd() &bmp;&bmp;
     * Equivblfnt to <dodf>gftRowSflfdtionAllowfd() &bmp;&bmp;
     * Equivblfnt to <dodf>gftRowSflfdtionAllowfd() &bmp;&bmp;
     * Equivblfnt to <dodf>gftRowSflfdtionAllowfd() &bmp;&bmp;
     * gftColumnSflfdtionAllowfd()</dodf>.
     * gftColumnSflfdtionAllowfd()</dodf>.
     * gftColumnSflfdtionAllowfd()</dodf>.
     * gftColumnSflfdtionAllowfd()</dodf>.
     * gftColumnSflfdtionAllowfd()</dodf>.
     *
     *
     *
     *
     *
     * @rfturn truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd
     * @rfturn truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd
     * @rfturn truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd
     * @rfturn truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd
     * @rfturn truf if boti row bnd dolumn sflfdtion modfls brf fnbblfd
     *
     *
     *
     *
     *
     * @sff #sftCfllSflfdtionEnbblfd
     * @sff #sftCfllSflfdtionEnbblfd
     * @sff #sftCfllSflfdtionEnbblfd
     * @sff #sftCfllSflfdtionEnbblfd
     * @sff #sftCfllSflfdtionEnbblfd
     */
     */
     */
     */
     */
    publid boolfbn gftCfllSflfdtionEnbblfd() {
    publid boolfbn gftCfllSflfdtionEnbblfd() {
    publid boolfbn gftCfllSflfdtionEnbblfd() {
    publid boolfbn gftCfllSflfdtionEnbblfd() {
    publid boolfbn gftCfllSflfdtionEnbblfd() {
        rfturn gftRowSflfdtionAllowfd() && gftColumnSflfdtionAllowfd();
        rfturn gftRowSflfdtionAllowfd() && gftColumnSflfdtionAllowfd();
        rfturn gftRowSflfdtionAllowfd() && gftColumnSflfdtionAllowfd();
        rfturn gftRowSflfdtionAllowfd() && gftColumnSflfdtionAllowfd();
        rfturn gftRowSflfdtionAllowfd() && gftColumnSflfdtionAllowfd();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     *  Sflfdts bll rows, dolumns, bnd dflls in tif tbblf.
     *  Sflfdts bll rows, dolumns, bnd dflls in tif tbblf.
     *  Sflfdts bll rows, dolumns, bnd dflls in tif tbblf.
     *  Sflfdts bll rows, dolumns, bnd dflls in tif tbblf.
     *  Sflfdts bll rows, dolumns, bnd dflls in tif tbblf.
     */
     */
     */
     */
     */
    publid void sflfdtAll() {
    publid void sflfdtAll() {
    publid void sflfdtAll() {
    publid void sflfdtAll() {
    publid void sflfdtAll() {
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
        }
        }
        }
        }
        }
        if (gftRowCount() > 0 && gftColumnCount() > 0) {
        if (gftRowCount() > 0 && gftColumnCount() > 0) {
        if (gftRowCount() > 0 && gftColumnCount() > 0) {
        if (gftRowCount() > 0 && gftColumnCount() > 0) {
        if (gftRowCount() > 0 && gftColumnCount() > 0) {
            int oldLfbd;
            int oldLfbd;
            int oldLfbd;
            int oldLfbd;
            int oldLfbd;
            int oldAndior;
            int oldAndior;
            int oldAndior;
            int oldAndior;
            int oldAndior;
            ListSflfdtionModfl sflModfl;
            ListSflfdtionModfl sflModfl;
            ListSflfdtionModfl sflModfl;
            ListSflfdtionModfl sflModfl;
            ListSflfdtionModfl sflModfl;





            sflModfl = sflfdtionModfl;
            sflModfl = sflfdtionModfl;
            sflModfl = sflfdtionModfl;
            sflModfl = sflfdtionModfl;
            sflModfl = sflfdtionModfl;
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), truf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), truf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), truf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), truf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), truf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), truf);





            sftRowSflfdtionIntfrvbl(0, gftRowCount()-1);
            sftRowSflfdtionIntfrvbl(0, gftRowCount()-1);
            sftRowSflfdtionIntfrvbl(0, gftRowCount()-1);
            sftRowSflfdtionIntfrvbl(0, gftRowCount()-1);
            sftRowSflfdtionIntfrvbl(0, gftRowCount()-1);





            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);





            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);





            sflModfl = dolumnModfl.gftSflfdtionModfl();
            sflModfl = dolumnModfl.gftSflfdtionModfl();
            sflModfl = dolumnModfl.gftSflfdtionModfl();
            sflModfl = dolumnModfl.gftSflfdtionModfl();
            sflModfl = dolumnModfl.gftSflfdtionModfl();
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            sflModfl.sftVblufIsAdjusting(truf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), fblsf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), fblsf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), fblsf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), fblsf);
            oldLfbd = gftAdjustfdIndfx(sflModfl.gftLfbdSflfdtionIndfx(), fblsf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), fblsf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), fblsf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), fblsf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), fblsf);
            oldAndior = gftAdjustfdIndfx(sflModfl.gftAndiorSflfdtionIndfx(), fblsf);





            sftColumnSflfdtionIntfrvbl(0, gftColumnCount()-1);
            sftColumnSflfdtionIntfrvbl(0, gftColumnCount()-1);
            sftColumnSflfdtionIntfrvbl(0, gftColumnCount()-1);
            sftColumnSflfdtionIntfrvbl(0, gftColumnCount()-1);
            sftColumnSflfdtionIntfrvbl(0, gftColumnCount()-1);





            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            // tiis is donf to rfstorf tif bndior bnd lfbd
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);
            SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(sflModfl, oldLfbd, oldAndior);





            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
            sflModfl.sftVblufIsAdjusting(fblsf);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dfsflfdts bll sflfdtfd dolumns bnd rows.
     * Dfsflfdts bll sflfdtfd dolumns bnd rows.
     * Dfsflfdts bll sflfdtfd dolumns bnd rows.
     * Dfsflfdts bll sflfdtfd dolumns bnd rows.
     * Dfsflfdts bll sflfdtfd dolumns bnd rows.
     */
     */
     */
     */
     */
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        dolumnModfl.gftSflfdtionModfl().dlfbrSflfdtion();
        dolumnModfl.gftSflfdtionModfl().dlfbrSflfdtion();
        dolumnModfl.gftSflfdtionModfl().dlfbrSflfdtion();
        dolumnModfl.gftSflfdtionModfl().dlfbrSflfdtion();
        dolumnModfl.gftSflfdtionModfl().dlfbrSflfdtion();
    }
    }
    }
    }
    }





    privbtf void dlfbrSflfdtionAndLfbdAndior() {
    privbtf void dlfbrSflfdtionAndLfbdAndior() {
    privbtf void dlfbrSflfdtionAndLfbdAndior() {
    privbtf void dlfbrSflfdtionAndLfbdAndior() {
    privbtf void dlfbrSflfdtionAndLfbdAndior() {
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(truf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(truf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(truf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(truf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(truf);





        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();





        sflfdtionModfl.sftAndiorSflfdtionIndfx(-1);
        sflfdtionModfl.sftAndiorSflfdtionIndfx(-1);
        sflfdtionModfl.sftAndiorSflfdtionIndfx(-1);
        sflfdtionModfl.sftAndiorSflfdtionIndfx(-1);
        sflfdtionModfl.sftAndiorSflfdtionIndfx(-1);
        sflfdtionModfl.sftLfbdSflfdtionIndfx(-1);
        sflfdtionModfl.sftLfbdSflfdtionIndfx(-1);
        sflfdtionModfl.sftLfbdSflfdtionIndfx(-1);
        sflfdtionModfl.sftLfbdSflfdtionIndfx(-1);
        sflfdtionModfl.sftLfbdSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftAndiorSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftAndiorSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftAndiorSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftAndiorSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftAndiorSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftLfbdSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftLfbdSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftLfbdSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftLfbdSflfdtionIndfx(-1);
        dolumnModfl.gftSflfdtionModfl().sftLfbdSflfdtionIndfx(-1);





        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(fblsf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(fblsf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(fblsf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(fblsf);
        dolumnModfl.gftSflfdtionModfl().sftVblufIsAdjusting(fblsf);
    }
    }
    }
    }
    }





    privbtf int gftAdjustfdIndfx(int indfx, boolfbn row) {
    privbtf int gftAdjustfdIndfx(int indfx, boolfbn row) {
    privbtf int gftAdjustfdIndfx(int indfx, boolfbn row) {
    privbtf int gftAdjustfdIndfx(int indfx, boolfbn row) {
    privbtf int gftAdjustfdIndfx(int indfx, boolfbn row) {
        int dompbrf = row ? gftRowCount() : gftColumnCount();
        int dompbrf = row ? gftRowCount() : gftColumnCount();
        int dompbrf = row ? gftRowCount() : gftColumnCount();
        int dompbrf = row ? gftRowCount() : gftColumnCount();
        int dompbrf = row ? gftRowCount() : gftColumnCount();
        rfturn indfx < dompbrf ? indfx : -1;
        rfturn indfx < dompbrf ? indfx : -1;
        rfturn indfx < dompbrf ? indfx : -1;
        rfturn indfx < dompbrf ? indfx : -1;
        rfturn indfx < dompbrf ? indfx : -1;
    }
    }
    }
    }
    }





    privbtf int boundRow(int row) tirows IllfgblArgumfntExdfption {
    privbtf int boundRow(int row) tirows IllfgblArgumfntExdfption {
    privbtf int boundRow(int row) tirows IllfgblArgumfntExdfption {
    privbtf int boundRow(int row) tirows IllfgblArgumfntExdfption {
    privbtf int boundRow(int row) tirows IllfgblArgumfntExdfption {
        if (row < 0 || row >= gftRowCount()) {
        if (row < 0 || row >= gftRowCount()) {
        if (row < 0 || row >= gftRowCount()) {
        if (row < 0 || row >= gftRowCount()) {
        if (row < 0 || row >= gftRowCount()) {
            tirow nfw IllfgblArgumfntExdfption("Row indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Row indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Row indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Row indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Row indfx out of rbngf");
        }
        }
        }
        }
        }
        rfturn row;
        rfturn row;
        rfturn row;
        rfturn row;
        rfturn row;
    }
    }
    }
    }
    }





    privbtf int boundColumn(int dol) {
    privbtf int boundColumn(int dol) {
    privbtf int boundColumn(int dol) {
    privbtf int boundColumn(int dol) {
    privbtf int boundColumn(int dol) {
        if (dol< 0 || dol >= gftColumnCount()) {
        if (dol< 0 || dol >= gftColumnCount()) {
        if (dol< 0 || dol >= gftColumnCount()) {
        if (dol< 0 || dol >= gftColumnCount()) {
        if (dol< 0 || dol >= gftColumnCount()) {
            tirow nfw IllfgblArgumfntExdfption("Column indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Column indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Column indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Column indfx out of rbngf");
            tirow nfw IllfgblArgumfntExdfption("Column indfx out of rbngf");
        }
        }
        }
        }
        }
        rfturn dol;
        rfturn dol;
        rfturn dol;
        rfturn dol;
        rfturn dol;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * indlusivf.
     * indlusivf.
     * indlusivf.
     * indlusivf.
     * indlusivf.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void sftRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
        sflfdtionModfl.sftSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.sftSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.sftSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.sftSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.sftSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Sflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * indlusivf.
     * indlusivf.
     * indlusivf.
     * indlusivf.
     * indlusivf.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void sftColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
        dolumnModfl.gftSflfdtionModfl().sftSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().sftSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().sftSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().sftSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().sftSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf, to
     * Adds tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf, to
     * Adds tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf, to
     * Adds tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf, to
     * Adds tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf, to
     * tif durrfnt sflfdtion.
     * tif durrfnt sflfdtion.
     * tif durrfnt sflfdtion.
     * tif durrfnt sflfdtion.
     * tif durrfnt sflfdtion.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or <dodf>indfx1</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or <dodf>indfx1</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or <dodf>indfx1</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or <dodf>indfx1</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or <dodf>indfx1</dodf>
     *                                          lif outsidf [0, <dodf>gftRowCount()</dodf>-1]
     *                                          lif outsidf [0, <dodf>gftRowCount()</dodf>-1]
     *                                          lif outsidf [0, <dodf>gftRowCount()</dodf>-1]
     *                                          lif outsidf [0, <dodf>gftRowCount()</dodf>-1]
     *                                          lif outsidf [0, <dodf>gftRowCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void bddRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
        sflfdtionModfl.bddSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.bddSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.bddSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.bddSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.bddSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Adds tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Adds tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Adds tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * Adds tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>,
     * indlusivf, to tif durrfnt sflfdtion.
     * indlusivf, to tif durrfnt sflfdtion.
     * indlusivf, to tif durrfnt sflfdtion.
     * indlusivf, to tif durrfnt sflfdtion.
     * indlusivf, to tif durrfnt sflfdtion.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void bddColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
        dolumnModfl.gftSflfdtionModfl().bddSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().bddSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().bddSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().bddSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().bddSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dfsflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif rows from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     *                                          [0, <dodf>gftRowCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void rfmovfRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfRowSflfdtionIntfrvbl(int indfx0, int indfx1) {
        sflfdtionModfl.rfmovfSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.rfmovfSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.rfmovfSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.rfmovfSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
        sflfdtionModfl.rfmovfSflfdtionIntfrvbl(boundRow(indfx0), boundRow(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dfsflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     * Dfsflfdts tif dolumns from <dodf>indfx0</dodf> to <dodf>indfx1</dodf>, indlusivf.
     *
     *
     *
     *
     *
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>indfx0</dodf> or
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          <dodf>indfx1</dodf> lif outsidf
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     *                                          [0, <dodf>gftColumnCount()</dodf>-1]
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx0 onf fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     * @pbrbm   indfx1 tif otifr fnd of tif intfrvbl
     */
     */
     */
     */
     */
    publid void rfmovfColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfColumnSflfdtionIntfrvbl(int indfx0, int indfx1) {
        dolumnModfl.gftSflfdtionModfl().rfmovfSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().rfmovfSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().rfmovfSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().rfmovfSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
        dolumnModfl.gftSflfdtionModfl().rfmovfSflfdtionIntfrvbl(boundColumn(indfx0), boundColumn(indfx1));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif first sflfdtfd row, -1 if no row is sflfdtfd.
     * Rfturns tif indfx of tif first sflfdtfd row, -1 if no row is sflfdtfd.
     * Rfturns tif indfx of tif first sflfdtfd row, -1 if no row is sflfdtfd.
     * Rfturns tif indfx of tif first sflfdtfd row, -1 if no row is sflfdtfd.
     * Rfturns tif indfx of tif first sflfdtfd row, -1 if no row is sflfdtfd.
     * @rfturn tif indfx of tif first sflfdtfd row
     * @rfturn tif indfx of tif first sflfdtfd row
     * @rfturn tif indfx of tif first sflfdtfd row
     * @rfturn tif indfx of tif first sflfdtfd row
     * @rfturn tif indfx of tif first sflfdtfd row
     */
     */
     */
     */
     */
    publid int gftSflfdtfdRow() {
    publid int gftSflfdtfdRow() {
    publid int gftSflfdtfdRow() {
    publid int gftSflfdtfdRow() {
    publid int gftSflfdtfdRow() {
        rfturn sflfdtionModfl.gftMinSflfdtionIndfx();
        rfturn sflfdtionModfl.gftMinSflfdtionIndfx();
        rfturn sflfdtionModfl.gftMinSflfdtionIndfx();
        rfturn sflfdtionModfl.gftMinSflfdtionIndfx();
        rfturn sflfdtionModfl.gftMinSflfdtionIndfx();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif first sflfdtfd dolumn,
     * Rfturns tif indfx of tif first sflfdtfd dolumn,
     * Rfturns tif indfx of tif first sflfdtfd dolumn,
     * Rfturns tif indfx of tif first sflfdtfd dolumn,
     * Rfturns tif indfx of tif first sflfdtfd dolumn,
     * -1 if no dolumn is sflfdtfd.
     * -1 if no dolumn is sflfdtfd.
     * -1 if no dolumn is sflfdtfd.
     * -1 if no dolumn is sflfdtfd.
     * -1 if no dolumn is sflfdtfd.
     * @rfturn tif indfx of tif first sflfdtfd dolumn
     * @rfturn tif indfx of tif first sflfdtfd dolumn
     * @rfturn tif indfx of tif first sflfdtfd dolumn
     * @rfturn tif indfx of tif first sflfdtfd dolumn
     * @rfturn tif indfx of tif first sflfdtfd dolumn
     */
     */
     */
     */
     */
    publid int gftSflfdtfdColumn() {
    publid int gftSflfdtfdColumn() {
    publid int gftSflfdtfdColumn() {
    publid int gftSflfdtfdColumn() {
    publid int gftSflfdtfdColumn() {
        rfturn dolumnModfl.gftSflfdtionModfl().gftMinSflfdtionIndfx();
        rfturn dolumnModfl.gftSflfdtionModfl().gftMinSflfdtionIndfx();
        rfturn dolumnModfl.gftSflfdtionModfl().gftMinSflfdtionIndfx();
        rfturn dolumnModfl.gftSflfdtionModfl().gftMinSflfdtionIndfx();
        rfturn dolumnModfl.gftSflfdtionModfl().gftMinSflfdtionIndfx();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indidfs of bll sflfdtfd rows.
     * Rfturns tif indidfs of bll sflfdtfd rows.
     * Rfturns tif indidfs of bll sflfdtfd rows.
     * Rfturns tif indidfs of bll sflfdtfd rows.
     * Rfturns tif indidfs of bll sflfdtfd rows.
     *
     *
     *
     *
     *
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd rows,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd rows,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd rows,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd rows,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd rows,
     *         or bn fmpty brrby if no row is sflfdtfd
     *         or bn fmpty brrby if no row is sflfdtfd
     *         or bn fmpty brrby if no row is sflfdtfd
     *         or bn fmpty brrby if no row is sflfdtfd
     *         or bn fmpty brrby if no row is sflfdtfd
     * @sff #gftSflfdtfdRow
     * @sff #gftSflfdtfdRow
     * @sff #gftSflfdtfdRow
     * @sff #gftSflfdtfdRow
     * @sff #gftSflfdtfdRow
     */
     */
     */
     */
     */
    publid int[] gftSflfdtfdRows() {
    publid int[] gftSflfdtfdRows() {
    publid int[] gftSflfdtfdRows() {
    publid int[] gftSflfdtfdRows() {
    publid int[] gftSflfdtfdRows() {
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();





        if ((iMin == -1) || (iMbx == -1)) {
        if ((iMin == -1) || (iMbx == -1)) {
        if ((iMin == -1) || (iMbx == -1)) {
        if ((iMin == -1) || (iMbx == -1)) {
        if ((iMin == -1) || (iMbx == -1)) {
            rfturn nfw int[0];
            rfturn nfw int[0];
            rfturn nfw int[0];
            rfturn nfw int[0];
            rfturn nfw int[0];
        }
        }
        }
        }
        }





        int[] rvTmp = nfw int[1+ (iMbx - iMin)];
        int[] rvTmp = nfw int[1+ (iMbx - iMin)];
        int[] rvTmp = nfw int[1+ (iMbx - iMin)];
        int[] rvTmp = nfw int[1+ (iMbx - iMin)];
        int[] rvTmp = nfw int[1+ (iMbx - iMin)];
        int n = 0;
        int n = 0;
        int n = 0;
        int n = 0;
        int n = 0;
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
                rvTmp[n++] = i;
                rvTmp[n++] = i;
                rvTmp[n++] = i;
                rvTmp[n++] = i;
                rvTmp[n++] = i;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        int[] rv = nfw int[n];
        int[] rv = nfw int[n];
        int[] rv = nfw int[n];
        int[] rv = nfw int[n];
        int[] rv = nfw int[n];
        Systfm.brrbydopy(rvTmp, 0, rv, 0, n);
        Systfm.brrbydopy(rvTmp, 0, rv, 0, n);
        Systfm.brrbydopy(rvTmp, 0, rv, 0, n);
        Systfm.brrbydopy(rvTmp, 0, rv, 0, n);
        Systfm.brrbydopy(rvTmp, 0, rv, 0, n);
        rfturn rv;
        rfturn rv;
        rfturn rv;
        rfturn rv;
        rfturn rv;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indidfs of bll sflfdtfd dolumns.
     * Rfturns tif indidfs of bll sflfdtfd dolumns.
     * Rfturns tif indidfs of bll sflfdtfd dolumns.
     * Rfturns tif indidfs of bll sflfdtfd dolumns.
     * Rfturns tif indidfs of bll sflfdtfd dolumns.
     *
     *
     *
     *
     *
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd dolumns,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd dolumns,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd dolumns,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd dolumns,
     * @rfturn bn brrby of intfgfrs dontbining tif indidfs of bll sflfdtfd dolumns,
     *         or bn fmpty brrby if no dolumn is sflfdtfd
     *         or bn fmpty brrby if no dolumn is sflfdtfd
     *         or bn fmpty brrby if no dolumn is sflfdtfd
     *         or bn fmpty brrby if no dolumn is sflfdtfd
     *         or bn fmpty brrby if no dolumn is sflfdtfd
     * @sff #gftSflfdtfdColumn
     * @sff #gftSflfdtfdColumn
     * @sff #gftSflfdtfdColumn
     * @sff #gftSflfdtfdColumn
     * @sff #gftSflfdtfdColumn
     */
     */
     */
     */
     */
    publid int[] gftSflfdtfdColumns() {
    publid int[] gftSflfdtfdColumns() {
    publid int[] gftSflfdtfdColumns() {
    publid int[] gftSflfdtfdColumns() {
    publid int[] gftSflfdtfdColumns() {
        rfturn dolumnModfl.gftSflfdtfdColumns();
        rfturn dolumnModfl.gftSflfdtfdColumns();
        rfturn dolumnModfl.gftSflfdtfdColumns();
        rfturn dolumnModfl.gftSflfdtfdColumns();
        rfturn dolumnModfl.gftSflfdtfdColumns();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of sflfdtfd rows.
     * Rfturns tif numbfr of sflfdtfd rows.
     * Rfturns tif numbfr of sflfdtfd rows.
     * Rfturns tif numbfr of sflfdtfd rows.
     * Rfturns tif numbfr of sflfdtfd rows.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of sflfdtfd rows, 0 if no rows brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd rows, 0 if no rows brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd rows, 0 if no rows brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd rows, 0 if no rows brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd rows, 0 if no rows brf sflfdtfd
     */
     */
     */
     */
     */
    publid int gftSflfdtfdRowCount() {
    publid int gftSflfdtfdRowCount() {
    publid int gftSflfdtfdRowCount() {
    publid int gftSflfdtfdRowCount() {
    publid int gftSflfdtfdRowCount() {
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMin = sflfdtionModfl.gftMinSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int iMbx = sflfdtionModfl.gftMbxSflfdtionIndfx();
        int dount = 0;
        int dount = 0;
        int dount = 0;
        int dount = 0;
        int dount = 0;





        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
        for(int i = iMin; i <= iMbx; i++) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
            if (sflfdtionModfl.isSflfdtfdIndfx(i)) {
                dount++;
                dount++;
                dount++;
                dount++;
                dount++;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn dount;
        rfturn dount;
        rfturn dount;
        rfturn dount;
        rfturn dount;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of sflfdtfd dolumns.
     * Rfturns tif numbfr of sflfdtfd dolumns.
     * Rfturns tif numbfr of sflfdtfd dolumns.
     * Rfturns tif numbfr of sflfdtfd dolumns.
     * Rfturns tif numbfr of sflfdtfd dolumns.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of sflfdtfd dolumns, 0 if no dolumns brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd dolumns, 0 if no dolumns brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd dolumns, 0 if no dolumns brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd dolumns, 0 if no dolumns brf sflfdtfd
     * @rfturn tif numbfr of sflfdtfd dolumns, 0 if no dolumns brf sflfdtfd
     */
     */
     */
     */
     */
    publid int gftSflfdtfdColumnCount() {
    publid int gftSflfdtfdColumnCount() {
    publid int gftSflfdtfdColumnCount() {
    publid int gftSflfdtfdColumnCount() {
    publid int gftSflfdtfdColumnCount() {
        rfturn dolumnModfl.gftSflfdtfdColumnCount();
        rfturn dolumnModfl.gftSflfdtfdColumnCount();
        rfturn dolumnModfl.gftSflfdtfdColumnCount();
        rfturn dolumnModfl.gftSflfdtfdColumnCount();
        rfturn dolumnModfl.gftSflfdtfdColumnCount();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of rows,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of rows,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of rows,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of rows,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of rows,
     * bnd tif row bt tibt indfx is sflfdtfd.
     * bnd tif row bt tibt indfx is sflfdtfd.
     * bnd tif row bt tibt indfx is sflfdtfd.
     * bnd tif row bt tibt indfx is sflfdtfd.
     * bnd tif row bt tibt indfx is sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm row b row in tif row modfl
     * @pbrbm row b row in tif row modfl
     * @pbrbm row b row in tif row modfl
     * @pbrbm row b row in tif row modfl
     * @pbrbm row b row in tif row modfl
     * @rfturn truf if <dodf>row</dodf> is b vblid indfx bnd tif row bt
     * @rfturn truf if <dodf>row</dodf> is b vblid indfx bnd tif row bt
     * @rfturn truf if <dodf>row</dodf> is b vblid indfx bnd tif row bt
     * @rfturn truf if <dodf>row</dodf> is b vblid indfx bnd tif row bt
     * @rfturn truf if <dodf>row</dodf> is b vblid indfx bnd tif row bt
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first row)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first row)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first row)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first row)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first row)
     */
     */
     */
     */
     */
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
        rfturn sflfdtionModfl.isSflfdtfdIndfx(row);
        rfturn sflfdtionModfl.isSflfdtfdIndfx(row);
        rfturn sflfdtionModfl.isSflfdtfdIndfx(row);
        rfturn sflfdtionModfl.isSflfdtfdIndfx(row);
        rfturn sflfdtionModfl.isSflfdtfdIndfx(row);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of dolumns,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of dolumns,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of dolumns,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of dolumns,
     * Rfturns truf if tif spfdififd indfx is in tif vblid rbngf of dolumns,
     * bnd tif dolumn bt tibt indfx is sflfdtfd.
     * bnd tif dolumn bt tibt indfx is sflfdtfd.
     * bnd tif dolumn bt tibt indfx is sflfdtfd.
     * bnd tif dolumn bt tibt indfx is sflfdtfd.
     * bnd tif dolumn bt tibt indfx is sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm   dolumn   tif dolumn in tif dolumn modfl
     * @pbrbm   dolumn   tif dolumn in tif dolumn modfl
     * @pbrbm   dolumn   tif dolumn in tif dolumn modfl
     * @pbrbm   dolumn   tif dolumn in tif dolumn modfl
     * @pbrbm   dolumn   tif dolumn in tif dolumn modfl
     * @rfturn truf if <dodf>dolumn</dodf> is b vblid indfx bnd tif dolumn bt
     * @rfturn truf if <dodf>dolumn</dodf> is b vblid indfx bnd tif dolumn bt
     * @rfturn truf if <dodf>dolumn</dodf> is b vblid indfx bnd tif dolumn bt
     * @rfturn truf if <dodf>dolumn</dodf> is b vblid indfx bnd tif dolumn bt
     * @rfturn truf if <dodf>dolumn</dodf> is b vblid indfx bnd tif dolumn bt
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first dolumn)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first dolumn)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first dolumn)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first dolumn)
     *              tibt indfx is sflfdtfd (wifrf 0 is tif first dolumn)
     */
     */
     */
     */
     */
    publid boolfbn isColumnSflfdtfd(int dolumn) {
    publid boolfbn isColumnSflfdtfd(int dolumn) {
    publid boolfbn isColumnSflfdtfd(int dolumn) {
    publid boolfbn isColumnSflfdtfd(int dolumn) {
    publid boolfbn isColumnSflfdtfd(int dolumn) {
        rfturn dolumnModfl.gftSflfdtionModfl().isSflfdtfdIndfx(dolumn);
        rfturn dolumnModfl.gftSflfdtionModfl().isSflfdtfdIndfx(dolumn);
        rfturn dolumnModfl.gftSflfdtionModfl().isSflfdtfdIndfx(dolumn);
        rfturn dolumnModfl.gftSflfdtionModfl().isSflfdtfdIndfx(dolumn);
        rfturn dolumnModfl.gftSflfdtionModfl().isSflfdtfdIndfx(dolumn);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif spfdififd indidfs brf in tif vblid rbngf of rows
     * Rfturns truf if tif spfdififd indidfs brf in tif vblid rbngf of rows
     * Rfturns truf if tif spfdififd indidfs brf in tif vblid rbngf of rows
     * Rfturns truf if tif spfdififd indidfs brf in tif vblid rbngf of rows
     * Rfturns truf if tif spfdififd indidfs brf in tif vblid rbngf of rows
     * bnd dolumns bnd tif dfll bt tif spfdififd position is sflfdtfd.
     * bnd dolumns bnd tif dfll bt tif spfdififd position is sflfdtfd.
     * bnd dolumns bnd tif dfll bt tif spfdififd position is sflfdtfd.
     * bnd dolumns bnd tif dfll bt tif spfdififd position is sflfdtfd.
     * bnd dolumns bnd tif dfll bt tif spfdififd position is sflfdtfd.
     * @pbrbm row   tif row bfing qufrifd
     * @pbrbm row   tif row bfing qufrifd
     * @pbrbm row   tif row bfing qufrifd
     * @pbrbm row   tif row bfing qufrifd
     * @pbrbm row   tif row bfing qufrifd
     * @pbrbm dolumn  tif dolumn bfing qufrifd
     * @pbrbm dolumn  tif dolumn bfing qufrifd
     * @pbrbm dolumn  tif dolumn bfing qufrifd
     * @pbrbm dolumn  tif dolumn bfing qufrifd
     * @pbrbm dolumn  tif dolumn bfing qufrifd
     *
     *
     *
     *
     *
     * @rfturn truf if <dodf>row</dodf> bnd <dodf>dolumn</dodf> brf vblid indidfs
     * @rfturn truf if <dodf>row</dodf> bnd <dodf>dolumn</dodf> brf vblid indidfs
     * @rfturn truf if <dodf>row</dodf> bnd <dodf>dolumn</dodf> brf vblid indidfs
     * @rfturn truf if <dodf>row</dodf> bnd <dodf>dolumn</dodf> brf vblid indidfs
     * @rfturn truf if <dodf>row</dodf> bnd <dodf>dolumn</dodf> brf vblid indidfs
     *              bnd tif dfll bt indfx <dodf>(row, dolumn)</dodf> is sflfdtfd,
     *              bnd tif dfll bt indfx <dodf>(row, dolumn)</dodf> is sflfdtfd,
     *              bnd tif dfll bt indfx <dodf>(row, dolumn)</dodf> is sflfdtfd,
     *              bnd tif dfll bt indfx <dodf>(row, dolumn)</dodf> is sflfdtfd,
     *              bnd tif dfll bt indfx <dodf>(row, dolumn)</dodf> is sflfdtfd,
     *              wifrf tif first row bnd first dolumn brf bt indfx 0
     *              wifrf tif first row bnd first dolumn brf bt indfx 0
     *              wifrf tif first row bnd first dolumn brf bt indfx 0
     *              wifrf tif first row bnd first dolumn brf bt indfx 0
     *              wifrf tif first row bnd first dolumn brf bt indfx 0
     */
     */
     */
     */
     */
    publid boolfbn isCfllSflfdtfd(int row, int dolumn) {
    publid boolfbn isCfllSflfdtfd(int row, int dolumn) {
    publid boolfbn isCfllSflfdtfd(int row, int dolumn) {
    publid boolfbn isCfllSflfdtfd(int row, int dolumn) {
    publid boolfbn isCfllSflfdtfd(int row, int dolumn) {
        if (!gftRowSflfdtionAllowfd() && !gftColumnSflfdtionAllowfd()) {
        if (!gftRowSflfdtionAllowfd() && !gftColumnSflfdtionAllowfd()) {
        if (!gftRowSflfdtionAllowfd() && !gftColumnSflfdtionAllowfd()) {
        if (!gftRowSflfdtionAllowfd() && !gftColumnSflfdtionAllowfd()) {
        if (!gftRowSflfdtionAllowfd() && !gftColumnSflfdtionAllowfd()) {
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        }
        }
        }
        }
        }
        rfturn (!gftRowSflfdtionAllowfd() || isRowSflfdtfd(row)) &&
        rfturn (!gftRowSflfdtionAllowfd() || isRowSflfdtfd(row)) &&
        rfturn (!gftRowSflfdtionAllowfd() || isRowSflfdtfd(row)) &&
        rfturn (!gftRowSflfdtionAllowfd() || isRowSflfdtfd(row)) &&
        rfturn (!gftRowSflfdtionAllowfd() || isRowSflfdtfd(row)) &&
               (!gftColumnSflfdtionAllowfd() || isColumnSflfdtfd(dolumn));
               (!gftColumnSflfdtionAllowfd() || isColumnSflfdtfd(dolumn));
               (!gftColumnSflfdtionAllowfd() || isColumnSflfdtfd(dolumn));
               (!gftColumnSflfdtionAllowfd() || isColumnSflfdtfd(dolumn));
               (!gftColumnSflfdtionAllowfd() || isColumnSflfdtfd(dolumn));
    }
    }
    }
    }
    }





    privbtf void dibngfSflfdtionModfl(ListSflfdtionModfl sm, int indfx,
    privbtf void dibngfSflfdtionModfl(ListSflfdtionModfl sm, int indfx,
    privbtf void dibngfSflfdtionModfl(ListSflfdtionModfl sm, int indfx,
    privbtf void dibngfSflfdtionModfl(ListSflfdtionModfl sm, int indfx,
    privbtf void dibngfSflfdtionModfl(ListSflfdtionModfl sm, int indfx,
                                      boolfbn togglf, boolfbn fxtfnd, boolfbn sflfdtfd,
                                      boolfbn togglf, boolfbn fxtfnd, boolfbn sflfdtfd,
                                      boolfbn togglf, boolfbn fxtfnd, boolfbn sflfdtfd,
                                      boolfbn togglf, boolfbn fxtfnd, boolfbn sflfdtfd,
                                      boolfbn togglf, boolfbn fxtfnd, boolfbn sflfdtfd,
                                      int bndior, boolfbn bndiorSflfdtfd) {
                                      int bndior, boolfbn bndiorSflfdtfd) {
                                      int bndior, boolfbn bndiorSflfdtfd) {
                                      int bndior, boolfbn bndiorSflfdtfd) {
                                      int bndior, boolfbn bndiorSflfdtfd) {
        if (fxtfnd) {
        if (fxtfnd) {
        if (fxtfnd) {
        if (fxtfnd) {
        if (fxtfnd) {
            if (togglf) {
            if (togglf) {
            if (togglf) {
            if (togglf) {
            if (togglf) {
                if (bndiorSflfdtfd) {
                if (bndiorSflfdtfd) {
                if (bndiorSflfdtfd) {
                if (bndiorSflfdtfd) {
                if (bndiorSflfdtfd) {
                    sm.bddSflfdtionIntfrvbl(bndior, indfx);
                    sm.bddSflfdtionIntfrvbl(bndior, indfx);
                    sm.bddSflfdtionIntfrvbl(bndior, indfx);
                    sm.bddSflfdtionIntfrvbl(bndior, indfx);
                    sm.bddSflfdtionIntfrvbl(bndior, indfx);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    sm.rfmovfSflfdtionIntfrvbl(bndior, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(bndior, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(bndior, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(bndior, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(bndior, indfx);
                    // tiis is b Windows-only bfibvior tibt wf wbnt for filf lists
                    // tiis is b Windows-only bfibvior tibt wf wbnt for filf lists
                    // tiis is b Windows-only bfibvior tibt wf wbnt for filf lists
                    // tiis is b Windows-only bfibvior tibt wf wbnt for filf lists
                    // tiis is b Windows-only bfibvior tibt wf wbnt for filf lists
                    if (Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")) {
                    if (Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")) {
                    if (Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")) {
                    if (Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")) {
                    if (Boolfbn.TRUE == gftClifntPropfrty("Tbblf.isFilfList")) {
                        sm.bddSflfdtionIntfrvbl(indfx, indfx);
                        sm.bddSflfdtionIntfrvbl(indfx, indfx);
                        sm.bddSflfdtionIntfrvbl(indfx, indfx);
                        sm.bddSflfdtionIntfrvbl(indfx, indfx);
                        sm.bddSflfdtionIntfrvbl(indfx, indfx);
                        sm.sftAndiorSflfdtionIndfx(bndior);
                        sm.sftAndiorSflfdtionIndfx(bndior);
                        sm.sftAndiorSflfdtionIndfx(bndior);
                        sm.sftAndiorSflfdtionIndfx(bndior);
                        sm.sftAndiorSflfdtionIndfx(bndior);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                sm.sftSflfdtionIntfrvbl(bndior, indfx);
                sm.sftSflfdtionIntfrvbl(bndior, indfx);
                sm.sftSflfdtionIntfrvbl(bndior, indfx);
                sm.sftSflfdtionIntfrvbl(bndior, indfx);
                sm.sftSflfdtionIntfrvbl(bndior, indfx);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            if (togglf) {
            if (togglf) {
            if (togglf) {
            if (togglf) {
            if (togglf) {
                if (sflfdtfd) {
                if (sflfdtfd) {
                if (sflfdtfd) {
                if (sflfdtfd) {
                if (sflfdtfd) {
                    sm.rfmovfSflfdtionIntfrvbl(indfx, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(indfx, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(indfx, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(indfx, indfx);
                    sm.rfmovfSflfdtionIntfrvbl(indfx, indfx);
                }
                }
                }
                }
                }
                flsf {
                flsf {
                flsf {
                flsf {
                flsf {
                    sm.bddSflfdtionIntfrvbl(indfx, indfx);
                    sm.bddSflfdtionIntfrvbl(indfx, indfx);
                    sm.bddSflfdtionIntfrvbl(indfx, indfx);
                    sm.bddSflfdtionIntfrvbl(indfx, indfx);
                    sm.bddSflfdtionIntfrvbl(indfx, indfx);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                sm.sftSflfdtionIntfrvbl(indfx, indfx);
                sm.sftSflfdtionIntfrvbl(indfx, indfx);
                sm.sftSflfdtionIntfrvbl(indfx, indfx);
                sm.sftSflfdtionIntfrvbl(indfx, indfx);
                sm.sftSflfdtionIntfrvbl(indfx, indfx);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Updbtfs tif sflfdtion modfls of tif tbblf, dfpfnding on tif stbtf of tif
     * Updbtfs tif sflfdtion modfls of tif tbblf, dfpfnding on tif stbtf of tif
     * Updbtfs tif sflfdtion modfls of tif tbblf, dfpfnding on tif stbtf of tif
     * Updbtfs tif sflfdtion modfls of tif tbblf, dfpfnding on tif stbtf of tif
     * Updbtfs tif sflfdtion modfls of tif tbblf, dfpfnding on tif stbtf of tif
     * two flbgs: <dodf>togglf</dodf> bnd <dodf>fxtfnd</dodf>. Most dibngfs
     * two flbgs: <dodf>togglf</dodf> bnd <dodf>fxtfnd</dodf>. Most dibngfs
     * two flbgs: <dodf>togglf</dodf> bnd <dodf>fxtfnd</dodf>. Most dibngfs
     * two flbgs: <dodf>togglf</dodf> bnd <dodf>fxtfnd</dodf>. Most dibngfs
     * two flbgs: <dodf>togglf</dodf> bnd <dodf>fxtfnd</dodf>. Most dibngfs
     * to tif sflfdtion tibt brf tif rfsult of kfybobrd or mousf fvfnts rfdfivfd
     * to tif sflfdtion tibt brf tif rfsult of kfybobrd or mousf fvfnts rfdfivfd
     * to tif sflfdtion tibt brf tif rfsult of kfybobrd or mousf fvfnts rfdfivfd
     * to tif sflfdtion tibt brf tif rfsult of kfybobrd or mousf fvfnts rfdfivfd
     * to tif sflfdtion tibt brf tif rfsult of kfybobrd or mousf fvfnts rfdfivfd
     * by tif UI brf dibnnflfd tirougi tiis mftiod so tibt tif bfibvior mby bf
     * by tif UI brf dibnnflfd tirougi tiis mftiod so tibt tif bfibvior mby bf
     * by tif UI brf dibnnflfd tirougi tiis mftiod so tibt tif bfibvior mby bf
     * by tif UI brf dibnnflfd tirougi tiis mftiod so tibt tif bfibvior mby bf
     * by tif UI brf dibnnflfd tirougi tiis mftiod so tibt tif bfibvior mby bf
     * ovfrriddfn by b subdlbss. Somf UIs mby nffd morf fundtionblity tibn
     * ovfrriddfn by b subdlbss. Somf UIs mby nffd morf fundtionblity tibn
     * ovfrriddfn by b subdlbss. Somf UIs mby nffd morf fundtionblity tibn
     * ovfrriddfn by b subdlbss. Somf UIs mby nffd morf fundtionblity tibn
     * ovfrriddfn by b subdlbss. Somf UIs mby nffd morf fundtionblity tibn
     * tiis mftiod providfs, sudi bs wifn mbnipulbting tif lfbd for disdontiguous
     * tiis mftiod providfs, sudi bs wifn mbnipulbting tif lfbd for disdontiguous
     * tiis mftiod providfs, sudi bs wifn mbnipulbting tif lfbd for disdontiguous
     * tiis mftiod providfs, sudi bs wifn mbnipulbting tif lfbd for disdontiguous
     * tiis mftiod providfs, sudi bs wifn mbnipulbting tif lfbd for disdontiguous
     * sflfdtion, bnd mby not dbll into tiis mftiod for somf sflfdtion dibngfs.
     * sflfdtion, bnd mby not dbll into tiis mftiod for somf sflfdtion dibngfs.
     * sflfdtion, bnd mby not dbll into tiis mftiod for somf sflfdtion dibngfs.
     * sflfdtion, bnd mby not dbll into tiis mftiod for somf sflfdtion dibngfs.
     * sflfdtion, bnd mby not dbll into tiis mftiod for somf sflfdtion dibngfs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis implfmfntbtion usfs tif following donvfntions:
     * Tiis implfmfntbtion usfs tif following donvfntions:
     * Tiis implfmfntbtion usfs tif following donvfntions:
     * Tiis implfmfntbtion usfs tif following donvfntions:
     * Tiis implfmfntbtion usfs tif following donvfntions:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     *      Clfbr tif prfvious sflfdtion bnd fnsurf tif nfw dfll is sflfdtfd.
     *      Clfbr tif prfvious sflfdtion bnd fnsurf tif nfw dfll is sflfdtfd.
     *      Clfbr tif prfvious sflfdtion bnd fnsurf tif nfw dfll is sflfdtfd.
     *      Clfbr tif prfvious sflfdtion bnd fnsurf tif nfw dfll is sflfdtfd.
     *      Clfbr tif prfvious sflfdtion bnd fnsurf tif nfw dfll is sflfdtfd.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>fblsf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     *      Extfnd tif prfvious sflfdtion from tif bndior to tif spfdififd dfll,
     *      Extfnd tif prfvious sflfdtion from tif bndior to tif spfdififd dfll,
     *      Extfnd tif prfvious sflfdtion from tif bndior to tif spfdififd dfll,
     *      Extfnd tif prfvious sflfdtion from tif bndior to tif spfdififd dfll,
     *      Extfnd tif prfvious sflfdtion from tif bndior to tif spfdififd dfll,
     *      dlfbring bll otifr sflfdtions.
     *      dlfbring bll otifr sflfdtions.
     *      dlfbring bll otifr sflfdtions.
     *      dlfbring bll otifr sflfdtions.
     *      dlfbring bll otifr sflfdtions.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>fblsf</fm>.
     *      If tif spfdififd dfll is sflfdtfd, dfsflfdt it. If it is not sflfdtfd, sflfdt it.
     *      If tif spfdififd dfll is sflfdtfd, dfsflfdt it. If it is not sflfdtfd, sflfdt it.
     *      If tif spfdififd dfll is sflfdtfd, dfsflfdt it. If it is not sflfdtfd, sflfdt it.
     *      If tif spfdififd dfll is sflfdtfd, dfsflfdt it. If it is not sflfdtfd, sflfdt it.
     *      If tif spfdififd dfll is sflfdtfd, dfsflfdt it. If it is not sflfdtfd, sflfdt it.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     * <li> <dodf>togglf</dodf>: <fm>truf</fm>, <dodf>fxtfnd</dodf>: <fm>truf</fm>.
     *      Apply tif sflfdtion stbtf of tif bndior to bll dflls bftwffn it bnd tif
     *      Apply tif sflfdtion stbtf of tif bndior to bll dflls bftwffn it bnd tif
     *      Apply tif sflfdtion stbtf of tif bndior to bll dflls bftwffn it bnd tif
     *      Apply tif sflfdtion stbtf of tif bndior to bll dflls bftwffn it bnd tif
     *      Apply tif sflfdtion stbtf of tif bndior to bll dflls bftwffn it bnd tif
     *      spfdififd dfll.
     *      spfdififd dfll.
     *      spfdififd dfll.
     *      spfdififd dfll.
     *      spfdififd dfll.
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * @pbrbm  rowIndfx   bfffdts tif sflfdtion bt <dodf>row</dodf>
     * @pbrbm  rowIndfx   bfffdts tif sflfdtion bt <dodf>row</dodf>
     * @pbrbm  rowIndfx   bfffdts tif sflfdtion bt <dodf>row</dodf>
     * @pbrbm  rowIndfx   bfffdts tif sflfdtion bt <dodf>row</dodf>
     * @pbrbm  rowIndfx   bfffdts tif sflfdtion bt <dodf>row</dodf>
     * @pbrbm  dolumnIndfx  bfffdts tif sflfdtion bt <dodf>dolumn</dodf>
     * @pbrbm  dolumnIndfx  bfffdts tif sflfdtion bt <dodf>dolumn</dodf>
     * @pbrbm  dolumnIndfx  bfffdts tif sflfdtion bt <dodf>dolumn</dodf>
     * @pbrbm  dolumnIndfx  bfffdts tif sflfdtion bt <dodf>dolumn</dodf>
     * @pbrbm  dolumnIndfx  bfffdts tif sflfdtion bt <dodf>dolumn</dodf>
     * @pbrbm  togglf  sff dfsdription bbovf
     * @pbrbm  togglf  sff dfsdription bbovf
     * @pbrbm  togglf  sff dfsdription bbovf
     * @pbrbm  togglf  sff dfsdription bbovf
     * @pbrbm  togglf  sff dfsdription bbovf
     * @pbrbm  fxtfnd  if truf, fxtfnd tif durrfnt sflfdtion
     * @pbrbm  fxtfnd  if truf, fxtfnd tif durrfnt sflfdtion
     * @pbrbm  fxtfnd  if truf, fxtfnd tif durrfnt sflfdtion
     * @pbrbm  fxtfnd  if truf, fxtfnd tif durrfnt sflfdtion
     * @pbrbm  fxtfnd  if truf, fxtfnd tif durrfnt sflfdtion
     *
     *
     *
     *
     *
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    publid void dibngfSflfdtion(int rowIndfx, int dolumnIndfx, boolfbn togglf, boolfbn fxtfnd) {
    publid void dibngfSflfdtion(int rowIndfx, int dolumnIndfx, boolfbn togglf, boolfbn fxtfnd) {
    publid void dibngfSflfdtion(int rowIndfx, int dolumnIndfx, boolfbn togglf, boolfbn fxtfnd) {
    publid void dibngfSflfdtion(int rowIndfx, int dolumnIndfx, boolfbn togglf, boolfbn fxtfnd) {
    publid void dibngfSflfdtion(int rowIndfx, int dolumnIndfx, boolfbn togglf, boolfbn fxtfnd) {
        ListSflfdtionModfl rsm = gftSflfdtionModfl();
        ListSflfdtionModfl rsm = gftSflfdtionModfl();
        ListSflfdtionModfl rsm = gftSflfdtionModfl();
        ListSflfdtionModfl rsm = gftSflfdtionModfl();
        ListSflfdtionModfl rsm = gftSflfdtionModfl();
        ListSflfdtionModfl dsm = gftColumnModfl().gftSflfdtionModfl();
        ListSflfdtionModfl dsm = gftColumnModfl().gftSflfdtionModfl();
        ListSflfdtionModfl dsm = gftColumnModfl().gftSflfdtionModfl();
        ListSflfdtionModfl dsm = gftColumnModfl().gftSflfdtionModfl();
        ListSflfdtionModfl dsm = gftColumnModfl().gftSflfdtionModfl();





        int bndiorRow = gftAdjustfdIndfx(rsm.gftAndiorSflfdtionIndfx(), truf);
        int bndiorRow = gftAdjustfdIndfx(rsm.gftAndiorSflfdtionIndfx(), truf);
        int bndiorRow = gftAdjustfdIndfx(rsm.gftAndiorSflfdtionIndfx(), truf);
        int bndiorRow = gftAdjustfdIndfx(rsm.gftAndiorSflfdtionIndfx(), truf);
        int bndiorRow = gftAdjustfdIndfx(rsm.gftAndiorSflfdtionIndfx(), truf);
        int bndiorCol = gftAdjustfdIndfx(dsm.gftAndiorSflfdtionIndfx(), fblsf);
        int bndiorCol = gftAdjustfdIndfx(dsm.gftAndiorSflfdtionIndfx(), fblsf);
        int bndiorCol = gftAdjustfdIndfx(dsm.gftAndiorSflfdtionIndfx(), fblsf);
        int bndiorCol = gftAdjustfdIndfx(dsm.gftAndiorSflfdtionIndfx(), fblsf);
        int bndiorCol = gftAdjustfdIndfx(dsm.gftAndiorSflfdtionIndfx(), fblsf);





        boolfbn bndiorSflfdtfd = truf;
        boolfbn bndiorSflfdtfd = truf;
        boolfbn bndiorSflfdtfd = truf;
        boolfbn bndiorSflfdtfd = truf;
        boolfbn bndiorSflfdtfd = truf;





        if (bndiorRow == -1) {
        if (bndiorRow == -1) {
        if (bndiorRow == -1) {
        if (bndiorRow == -1) {
        if (bndiorRow == -1) {
            if (gftRowCount() > 0) {
            if (gftRowCount() > 0) {
            if (gftRowCount() > 0) {
            if (gftRowCount() > 0) {
            if (gftRowCount() > 0) {
                bndiorRow = 0;
                bndiorRow = 0;
                bndiorRow = 0;
                bndiorRow = 0;
                bndiorRow = 0;
            }
            }
            }
            }
            }
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
        }
        }
        }
        }
        }





        if (bndiorCol == -1) {
        if (bndiorCol == -1) {
        if (bndiorCol == -1) {
        if (bndiorCol == -1) {
        if (bndiorCol == -1) {
            if (gftColumnCount() > 0) {
            if (gftColumnCount() > 0) {
            if (gftColumnCount() > 0) {
            if (gftColumnCount() > 0) {
            if (gftColumnCount() > 0) {
                bndiorCol = 0;
                bndiorCol = 0;
                bndiorCol = 0;
                bndiorCol = 0;
                bndiorCol = 0;
            }
            }
            }
            }
            }
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
            bndiorSflfdtfd = fblsf;
        }
        }
        }
        }
        }





        // Cifdk tif sflfdtion ifrf rbtifr tibn in fbdi sflfdtion modfl.
        // Cifdk tif sflfdtion ifrf rbtifr tibn in fbdi sflfdtion modfl.
        // Cifdk tif sflfdtion ifrf rbtifr tibn in fbdi sflfdtion modfl.
        // Cifdk tif sflfdtion ifrf rbtifr tibn in fbdi sflfdtion modfl.
        // Cifdk tif sflfdtion ifrf rbtifr tibn in fbdi sflfdtion modfl.
        // Tiis is signifidbnt in dfll sflfdtion modf if wf brf supposfd
        // Tiis is signifidbnt in dfll sflfdtion modf if wf brf supposfd
        // Tiis is signifidbnt in dfll sflfdtion modf if wf brf supposfd
        // Tiis is signifidbnt in dfll sflfdtion modf if wf brf supposfd
        // Tiis is signifidbnt in dfll sflfdtion modf if wf brf supposfd
        // to bf toggling tif sflfdtion. In tiis dbsf it is bfttfr to
        // to bf toggling tif sflfdtion. In tiis dbsf it is bfttfr to
        // to bf toggling tif sflfdtion. In tiis dbsf it is bfttfr to
        // to bf toggling tif sflfdtion. In tiis dbsf it is bfttfr to
        // to bf toggling tif sflfdtion. In tiis dbsf it is bfttfr to
        // fnsurf tibt tif dfll's sflfdtion stbtf will indffd bf dibngfd.
        // fnsurf tibt tif dfll's sflfdtion stbtf will indffd bf dibngfd.
        // fnsurf tibt tif dfll's sflfdtion stbtf will indffd bf dibngfd.
        // fnsurf tibt tif dfll's sflfdtion stbtf will indffd bf dibngfd.
        // fnsurf tibt tif dfll's sflfdtion stbtf will indffd bf dibngfd.
        // If tiis wfrf donf in tif dodf for tif sflfdtion modfl it
        // If tiis wfrf donf in tif dodf for tif sflfdtion modfl it
        // If tiis wfrf donf in tif dodf for tif sflfdtion modfl it
        // If tiis wfrf donf in tif dodf for tif sflfdtion modfl it
        // If tiis wfrf donf in tif dodf for tif sflfdtion modfl it
        // migit lfbvf b dfll in sflfdtion stbtf if tif row wbs
        // migit lfbvf b dfll in sflfdtion stbtf if tif row wbs
        // migit lfbvf b dfll in sflfdtion stbtf if tif row wbs
        // migit lfbvf b dfll in sflfdtion stbtf if tif row wbs
        // migit lfbvf b dfll in sflfdtion stbtf if tif row wbs
        // sflfdtfd but tif dolumn wbs not - bs it would togglf tifm boti.
        // sflfdtfd but tif dolumn wbs not - bs it would togglf tifm boti.
        // sflfdtfd but tif dolumn wbs not - bs it would togglf tifm boti.
        // sflfdtfd but tif dolumn wbs not - bs it would togglf tifm boti.
        // sflfdtfd but tif dolumn wbs not - bs it would togglf tifm boti.
        boolfbn sflfdtfd = isCfllSflfdtfd(rowIndfx, dolumnIndfx);
        boolfbn sflfdtfd = isCfllSflfdtfd(rowIndfx, dolumnIndfx);
        boolfbn sflfdtfd = isCfllSflfdtfd(rowIndfx, dolumnIndfx);
        boolfbn sflfdtfd = isCfllSflfdtfd(rowIndfx, dolumnIndfx);
        boolfbn sflfdtfd = isCfllSflfdtfd(rowIndfx, dolumnIndfx);
        bndiorSflfdtfd = bndiorSflfdtfd && isCfllSflfdtfd(bndiorRow, bndiorCol);
        bndiorSflfdtfd = bndiorSflfdtfd && isCfllSflfdtfd(bndiorRow, bndiorCol);
        bndiorSflfdtfd = bndiorSflfdtfd && isCfllSflfdtfd(bndiorRow, bndiorCol);
        bndiorSflfdtfd = bndiorSflfdtfd && isCfllSflfdtfd(bndiorRow, bndiorCol);
        bndiorSflfdtfd = bndiorSflfdtfd && isCfllSflfdtfd(bndiorRow, bndiorCol);





        dibngfSflfdtionModfl(dsm, dolumnIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(dsm, dolumnIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(dsm, dolumnIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(dsm, dolumnIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(dsm, dolumnIndfx, togglf, fxtfnd, sflfdtfd,
                             bndiorCol, bndiorSflfdtfd);
                             bndiorCol, bndiorSflfdtfd);
                             bndiorCol, bndiorSflfdtfd);
                             bndiorCol, bndiorSflfdtfd);
                             bndiorCol, bndiorSflfdtfd);
        dibngfSflfdtionModfl(rsm, rowIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(rsm, rowIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(rsm, rowIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(rsm, rowIndfx, togglf, fxtfnd, sflfdtfd,
        dibngfSflfdtionModfl(rsm, rowIndfx, togglf, fxtfnd, sflfdtfd,
                             bndiorRow, bndiorSflfdtfd);
                             bndiorRow, bndiorSflfdtfd);
                             bndiorRow, bndiorSflfdtfd);
                             bndiorRow, bndiorSflfdtfd);
                             bndiorRow, bndiorSflfdtfd);





        // Sdroll bftfr dibnging tif sflfdtion bs blit sdrolling is immfdibtf,
        // Sdroll bftfr dibnging tif sflfdtion bs blit sdrolling is immfdibtf,
        // Sdroll bftfr dibnging tif sflfdtion bs blit sdrolling is immfdibtf,
        // Sdroll bftfr dibnging tif sflfdtion bs blit sdrolling is immfdibtf,
        // Sdroll bftfr dibnging tif sflfdtion bs blit sdrolling is immfdibtf,
        // so tibt if wf dbusf tif rfpbint bftfr tif sdroll wf fnd up pbinting
        // so tibt if wf dbusf tif rfpbint bftfr tif sdroll wf fnd up pbinting
        // so tibt if wf dbusf tif rfpbint bftfr tif sdroll wf fnd up pbinting
        // so tibt if wf dbusf tif rfpbint bftfr tif sdroll wf fnd up pbinting
        // so tibt if wf dbusf tif rfpbint bftfr tif sdroll wf fnd up pbinting
        // fvfrytiing!
        // fvfrytiing!
        // fvfrytiing!
        // fvfrytiing!
        // fvfrytiing!
        if (gftAutosdrolls()) {
        if (gftAutosdrolls()) {
        if (gftAutosdrolls()) {
        if (gftAutosdrolls()) {
        if (gftAutosdrolls()) {
            Rfdtbnglf dfllRfdt = gftCfllRfdt(rowIndfx, dolumnIndfx, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(rowIndfx, dolumnIndfx, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(rowIndfx, dolumnIndfx, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(rowIndfx, dolumnIndfx, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(rowIndfx, dolumnIndfx, fblsf);
            if (dfllRfdt != null) {
            if (dfllRfdt != null) {
            if (dfllRfdt != null) {
            if (dfllRfdt != null) {
            if (dfllRfdt != null) {
                sdrollRfdtToVisiblf(dfllRfdt);
                sdrollRfdtToVisiblf(dfllRfdt);
                sdrollRfdtToVisiblf(dfllRfdt);
                sdrollRfdtToVisiblf(dfllRfdt);
                sdrollRfdtToVisiblf(dfllRfdt);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif forfground dolor for sflfdtfd dflls.
     * Rfturns tif forfground dolor for sflfdtfd dflls.
     * Rfturns tif forfground dolor for sflfdtfd dflls.
     * Rfturns tif forfground dolor for sflfdtfd dflls.
     * Rfturns tif forfground dolor for sflfdtfd dflls.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>Color</dodf> objfdt for tif forfground propfrty
     * @rfturn tif <dodf>Color</dodf> objfdt for tif forfground propfrty
     * @rfturn tif <dodf>Color</dodf> objfdt for tif forfground propfrty
     * @rfturn tif <dodf>Color</dodf> objfdt for tif forfground propfrty
     * @rfturn tif <dodf>Color</dodf> objfdt for tif forfground propfrty
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     */
     */
     */
     */
     */
    publid Color gftSflfdtionForfground() {
    publid Color gftSflfdtionForfground() {
    publid Color gftSflfdtionForfground() {
    publid Color gftSflfdtionForfground() {
    publid Color gftSflfdtionForfground() {
        rfturn sflfdtionForfground;
        rfturn sflfdtionForfground;
        rfturn sflfdtionForfground;
        rfturn sflfdtionForfground;
        rfturn sflfdtionForfground;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif forfground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif forfground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif forfground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif forfground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif forfground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * dbn usf tiis dolor to rfndfr tfxt bnd grbpiids for sflfdtfd
     * dbn usf tiis dolor to rfndfr tfxt bnd grbpiids for sflfdtfd
     * dbn usf tiis dolor to rfndfr tfxt bnd grbpiids for sflfdtfd
     * dbn usf tiis dolor to rfndfr tfxt bnd grbpiids for sflfdtfd
     * dbn usf tiis dolor to rfndfr tfxt bnd grbpiids for sflfdtfd
     * dflls.
     * dflls.
     * dflls.
     * dflls.
     * dflls.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm sflfdtionForfground  tif <dodf>Color</dodf> to usf in tif forfground
     * @pbrbm sflfdtionForfground  tif <dodf>Color</dodf> to usf in tif forfground
     * @pbrbm sflfdtionForfground  tif <dodf>Color</dodf> to usf in tif forfground
     * @pbrbm sflfdtionForfground  tif <dodf>Color</dodf> to usf in tif forfground
     * @pbrbm sflfdtionForfground  tif <dodf>Color</dodf> to usf in tif forfground
     *                             for sflfdtfd list itfms
     *                             for sflfdtfd list itfms
     *                             for sflfdtfd list itfms
     *                             for sflfdtfd list itfms
     *                             for sflfdtfd list itfms
     * @sff #gftSflfdtionForfground
     * @sff #gftSflfdtionForfground
     * @sff #gftSflfdtionForfground
     * @sff #gftSflfdtionForfground
     * @sff #gftSflfdtionForfground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *       bound: truf
     *       bound: truf
     *       bound: truf
     *       bound: truf
     *       bound: truf
     * dfsdription: A dffbult forfground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult forfground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult forfground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult forfground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult forfground dolor for sflfdtfd dflls.
     */
     */
     */
     */
     */
    publid void sftSflfdtionForfground(Color sflfdtionForfground) {
    publid void sftSflfdtionForfground(Color sflfdtionForfground) {
    publid void sftSflfdtionForfground(Color sflfdtionForfground) {
    publid void sftSflfdtionForfground(Color sflfdtionForfground) {
    publid void sftSflfdtionForfground(Color sflfdtionForfground) {
        Color old = tiis.sflfdtionForfground;
        Color old = tiis.sflfdtionForfground;
        Color old = tiis.sflfdtionForfground;
        Color old = tiis.sflfdtionForfground;
        Color old = tiis.sflfdtionForfground;
        tiis.sflfdtionForfground = sflfdtionForfground;
        tiis.sflfdtionForfground = sflfdtionForfground;
        tiis.sflfdtionForfground = sflfdtionForfground;
        tiis.sflfdtionForfground = sflfdtionForfground;
        tiis.sflfdtionForfground = sflfdtionForfground;
        firfPropfrtyCibngf("sflfdtionForfground", old, sflfdtionForfground);
        firfPropfrtyCibngf("sflfdtionForfground", old, sflfdtionForfground);
        firfPropfrtyCibngf("sflfdtionForfground", old, sflfdtionForfground);
        firfPropfrtyCibngf("sflfdtionForfground", old, sflfdtionForfground);
        firfPropfrtyCibngf("sflfdtionForfground", old, sflfdtionForfground);
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif bbdkground dolor for sflfdtfd dflls.
     * Rfturns tif bbdkground dolor for sflfdtfd dflls.
     * Rfturns tif bbdkground dolor for sflfdtfd dflls.
     * Rfturns tif bbdkground dolor for sflfdtfd dflls.
     * Rfturns tif bbdkground dolor for sflfdtfd dflls.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>Color</dodf> usfd for tif bbdkground of sflfdtfd list itfms
     * @rfturn tif <dodf>Color</dodf> usfd for tif bbdkground of sflfdtfd list itfms
     * @rfturn tif <dodf>Color</dodf> usfd for tif bbdkground of sflfdtfd list itfms
     * @rfturn tif <dodf>Color</dodf> usfd for tif bbdkground of sflfdtfd list itfms
     * @rfturn tif <dodf>Color</dodf> usfd for tif bbdkground of sflfdtfd list itfms
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionBbdkground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     */
     */
     */
     */
     */
    publid Color gftSflfdtionBbdkground() {
    publid Color gftSflfdtionBbdkground() {
    publid Color gftSflfdtionBbdkground() {
    publid Color gftSflfdtionBbdkground() {
    publid Color gftSflfdtionBbdkground() {
        rfturn sflfdtionBbdkground;
        rfturn sflfdtionBbdkground;
        rfturn sflfdtionBbdkground;
        rfturn sflfdtionBbdkground;
        rfturn sflfdtionBbdkground;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif bbdkground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif bbdkground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif bbdkground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif bbdkground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * Sfts tif bbdkground dolor for sflfdtfd dflls.  Cfll rfndfrfrs
     * dbn usf tiis dolor to tif fill sflfdtfd dflls.
     * dbn usf tiis dolor to tif fill sflfdtfd dflls.
     * dbn usf tiis dolor to tif fill sflfdtfd dflls.
     * dbn usf tiis dolor to tif fill sflfdtfd dflls.
     * dbn usf tiis dolor to tif fill sflfdtfd dflls.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * Tif dffbult vbluf of tiis propfrty is dffinfd by tif look
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * bnd fffl implfmfntbtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     * Tiis is b <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/jbvbbfbns/writing/propfrtifs.itml">JbvbBfbns</b> bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm sflfdtionBbdkground  tif <dodf>Color</dodf> to usf for tif bbdkground
     * @pbrbm sflfdtionBbdkground  tif <dodf>Color</dodf> to usf for tif bbdkground
     * @pbrbm sflfdtionBbdkground  tif <dodf>Color</dodf> to usf for tif bbdkground
     * @pbrbm sflfdtionBbdkground  tif <dodf>Color</dodf> to usf for tif bbdkground
     * @pbrbm sflfdtionBbdkground  tif <dodf>Color</dodf> to usf for tif bbdkground
     *                             of sflfdtfd dflls
     *                             of sflfdtfd dflls
     *                             of sflfdtfd dflls
     *                             of sflfdtfd dflls
     *                             of sflfdtfd dflls
     * @sff #gftSflfdtionBbdkground
     * @sff #gftSflfdtionBbdkground
     * @sff #gftSflfdtionBbdkground
     * @sff #gftSflfdtionBbdkground
     * @sff #gftSflfdtionBbdkground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftSflfdtionForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftForfground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftBbdkground
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @sff #sftFont
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *       bound: truf
     *       bound: truf
     *       bound: truf
     *       bound: truf
     *       bound: truf
     * dfsdription: A dffbult bbdkground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult bbdkground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult bbdkground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult bbdkground dolor for sflfdtfd dflls.
     * dfsdription: A dffbult bbdkground dolor for sflfdtfd dflls.
     */
     */
     */
     */
     */
    publid void sftSflfdtionBbdkground(Color sflfdtionBbdkground) {
    publid void sftSflfdtionBbdkground(Color sflfdtionBbdkground) {
    publid void sftSflfdtionBbdkground(Color sflfdtionBbdkground) {
    publid void sftSflfdtionBbdkground(Color sflfdtionBbdkground) {
    publid void sftSflfdtionBbdkground(Color sflfdtionBbdkground) {
        Color old = tiis.sflfdtionBbdkground;
        Color old = tiis.sflfdtionBbdkground;
        Color old = tiis.sflfdtionBbdkground;
        Color old = tiis.sflfdtionBbdkground;
        Color old = tiis.sflfdtionBbdkground;
        tiis.sflfdtionBbdkground = sflfdtionBbdkground;
        tiis.sflfdtionBbdkground = sflfdtionBbdkground;
        tiis.sflfdtionBbdkground = sflfdtionBbdkground;
        tiis.sflfdtionBbdkground = sflfdtionBbdkground;
        tiis.sflfdtionBbdkground = sflfdtionBbdkground;
        firfPropfrtyCibngf("sflfdtionBbdkground", old, sflfdtionBbdkground);
        firfPropfrtyCibngf("sflfdtionBbdkground", old, sflfdtionBbdkground);
        firfPropfrtyCibngf("sflfdtionBbdkground", old, sflfdtionBbdkground);
        firfPropfrtyCibngf("sflfdtionBbdkground", old, sflfdtionBbdkground);
        firfPropfrtyCibngf("sflfdtionBbdkground", old, sflfdtionBbdkground);
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>TbblfColumn</dodf> objfdt for tif dolumn in tif tbblf
     * Rfturns tif <dodf>TbblfColumn</dodf> objfdt for tif dolumn in tif tbblf
     * Rfturns tif <dodf>TbblfColumn</dodf> objfdt for tif dolumn in tif tbblf
     * Rfturns tif <dodf>TbblfColumn</dodf> objfdt for tif dolumn in tif tbblf
     * Rfturns tif <dodf>TbblfColumn</dodf> objfdt for tif dolumn in tif tbblf
     * wiosf idfntififr is fqubl to <dodf>idfntififr</dodf>, wifn dompbrfd using
     * wiosf idfntififr is fqubl to <dodf>idfntififr</dodf>, wifn dompbrfd using
     * wiosf idfntififr is fqubl to <dodf>idfntififr</dodf>, wifn dompbrfd using
     * wiosf idfntififr is fqubl to <dodf>idfntififr</dodf>, wifn dompbrfd using
     * wiosf idfntififr is fqubl to <dodf>idfntififr</dodf>, wifn dompbrfd using
     * <dodf>fqubls</dodf>.
     * <dodf>fqubls</dodf>.
     * <dodf>fqubls</dodf>.
     * <dodf>fqubls</dodf>.
     * <dodf>fqubls</dodf>.
     *
     *
     *
     *
     *
     * @rfturn  tif <dodf>TbblfColumn</dodf> objfdt tibt mbtdifs tif idfntififr
     * @rfturn  tif <dodf>TbblfColumn</dodf> objfdt tibt mbtdifs tif idfntififr
     * @rfturn  tif <dodf>TbblfColumn</dodf> objfdt tibt mbtdifs tif idfntififr
     * @rfturn  tif <dodf>TbblfColumn</dodf> objfdt tibt mbtdifs tif idfntififr
     * @rfturn  tif <dodf>TbblfColumn</dodf> objfdt tibt mbtdifs tif idfntififr
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>idfntififr</dodf> is <dodf>null</dodf> or no <dodf>TbblfColumn</dodf> ibs tiis idfntififr
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>idfntififr</dodf> is <dodf>null</dodf> or no <dodf>TbblfColumn</dodf> ibs tiis idfntififr
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>idfntififr</dodf> is <dodf>null</dodf> or no <dodf>TbblfColumn</dodf> ibs tiis idfntififr
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>idfntififr</dodf> is <dodf>null</dodf> or no <dodf>TbblfColumn</dodf> ibs tiis idfntififr
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>idfntififr</dodf> is <dodf>null</dodf> or no <dodf>TbblfColumn</dodf> ibs tiis idfntififr
     *
     *
     *
     *
     *
     * @pbrbm   idfntififr                      tif idfntififr objfdt
     * @pbrbm   idfntififr                      tif idfntififr objfdt
     * @pbrbm   idfntififr                      tif idfntififr objfdt
     * @pbrbm   idfntififr                      tif idfntififr objfdt
     * @pbrbm   idfntififr                      tif idfntififr objfdt
     */
     */
     */
     */
     */
    publid TbblfColumn gftColumn(Objfdt idfntififr) {
    publid TbblfColumn gftColumn(Objfdt idfntififr) {
    publid TbblfColumn gftColumn(Objfdt idfntififr) {
    publid TbblfColumn gftColumn(Objfdt idfntififr) {
    publid TbblfColumn gftColumn(Objfdt idfntififr) {
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        int dolumnIndfx = dm.gftColumnIndfx(idfntififr);
        int dolumnIndfx = dm.gftColumnIndfx(idfntififr);
        int dolumnIndfx = dm.gftColumnIndfx(idfntififr);
        int dolumnIndfx = dm.gftColumnIndfx(idfntififr);
        int dolumnIndfx = dm.gftColumnIndfx(idfntififr);
        rfturn dm.gftColumn(dolumnIndfx);
        rfturn dm.gftColumn(dolumnIndfx);
        rfturn dm.gftColumn(dolumnIndfx);
        rfturn dm.gftColumn(dolumnIndfx);
        rfturn dm.gftColumn(dolumnIndfx);
    }
    }
    }
    }
    }





//
//
//
//
//
// Informblly implfmfnt tif TbblfModfl intfrfbdf.
// Informblly implfmfnt tif TbblfModfl intfrfbdf.
// Informblly implfmfnt tif TbblfModfl intfrfbdf.
// Informblly implfmfnt tif TbblfModfl intfrfbdf.
// Informblly implfmfnt tif TbblfModfl intfrfbdf.
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Mbps tif indfx of tif dolumn in tif vifw bt
     * Mbps tif indfx of tif dolumn in tif vifw bt
     * Mbps tif indfx of tif dolumn in tif vifw bt
     * Mbps tif indfx of tif dolumn in tif vifw bt
     * Mbps tif indfx of tif dolumn in tif vifw bt
     * <dodf>vifwColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>vifwColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>vifwColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>vifwColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>vifwColumnIndfx</dodf> to tif indfx of tif dolumn
     * in tif tbblf modfl.  Rfturns tif indfx of tif dorrfsponding
     * in tif tbblf modfl.  Rfturns tif indfx of tif dorrfsponding
     * in tif tbblf modfl.  Rfturns tif indfx of tif dorrfsponding
     * in tif tbblf modfl.  Rfturns tif indfx of tif dorrfsponding
     * in tif tbblf modfl.  Rfturns tif indfx of tif dorrfsponding
     * dolumn in tif modfl.  If <dodf>vifwColumnIndfx</dodf>
     * dolumn in tif modfl.  If <dodf>vifwColumnIndfx</dodf>
     * dolumn in tif modfl.  If <dodf>vifwColumnIndfx</dodf>
     * dolumn in tif modfl.  If <dodf>vifwColumnIndfx</dodf>
     * dolumn in tif modfl.  If <dodf>vifwColumnIndfx</dodf>
     * is lfss tibn zfro, rfturns <dodf>vifwColumnIndfx</dodf>.
     * is lfss tibn zfro, rfturns <dodf>vifwColumnIndfx</dodf>.
     * is lfss tibn zfro, rfturns <dodf>vifwColumnIndfx</dodf>.
     * is lfss tibn zfro, rfturns <dodf>vifwColumnIndfx</dodf>.
     * is lfss tibn zfro, rfturns <dodf>vifwColumnIndfx</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   vifwColumnIndfx     tif indfx of tif dolumn in tif vifw
     * @pbrbm   vifwColumnIndfx     tif indfx of tif dolumn in tif vifw
     * @pbrbm   vifwColumnIndfx     tif indfx of tif dolumn in tif vifw
     * @pbrbm   vifwColumnIndfx     tif indfx of tif dolumn in tif vifw
     * @pbrbm   vifwColumnIndfx     tif indfx of tif dolumn in tif vifw
     * @rfturn  tif indfx of tif dorrfsponding dolumn in tif modfl
     * @rfturn  tif indfx of tif dorrfsponding dolumn in tif modfl
     * @rfturn  tif indfx of tif dorrfsponding dolumn in tif modfl
     * @rfturn  tif indfx of tif dorrfsponding dolumn in tif modfl
     * @rfturn  tif indfx of tif dorrfsponding dolumn in tif modfl
     *
     *
     *
     *
     *
     * @sff #donvfrtColumnIndfxToVifw
     * @sff #donvfrtColumnIndfxToVifw
     * @sff #donvfrtColumnIndfxToVifw
     * @sff #donvfrtColumnIndfxToVifw
     * @sff #donvfrtColumnIndfxToVifw
     */
     */
     */
     */
     */
    publid int donvfrtColumnIndfxToModfl(int vifwColumnIndfx) {
    publid int donvfrtColumnIndfxToModfl(int vifwColumnIndfx) {
    publid int donvfrtColumnIndfxToModfl(int vifwColumnIndfx) {
    publid int donvfrtColumnIndfxToModfl(int vifwColumnIndfx) {
    publid int donvfrtColumnIndfxToModfl(int vifwColumnIndfx) {
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToModfl(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToModfl(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToModfl(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToModfl(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToModfl(
                gftColumnModfl(), vifwColumnIndfx);
                gftColumnModfl(), vifwColumnIndfx);
                gftColumnModfl(), vifwColumnIndfx);
                gftColumnModfl(), vifwColumnIndfx);
                gftColumnModfl(), vifwColumnIndfx);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Mbps tif indfx of tif dolumn in tif tbblf modfl bt
     * Mbps tif indfx of tif dolumn in tif tbblf modfl bt
     * Mbps tif indfx of tif dolumn in tif tbblf modfl bt
     * Mbps tif indfx of tif dolumn in tif tbblf modfl bt
     * Mbps tif indfx of tif dolumn in tif tbblf modfl bt
     * <dodf>modflColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>modflColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>modflColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>modflColumnIndfx</dodf> to tif indfx of tif dolumn
     * <dodf>modflColumnIndfx</dodf> to tif indfx of tif dolumn
     * in tif vifw.  Rfturns tif indfx of tif
     * in tif vifw.  Rfturns tif indfx of tif
     * in tif vifw.  Rfturns tif indfx of tif
     * in tif vifw.  Rfturns tif indfx of tif
     * in tif vifw.  Rfturns tif indfx of tif
     * dorrfsponding dolumn in tif vifw; rfturns -1 if tiis dolumn is not
     * dorrfsponding dolumn in tif vifw; rfturns -1 if tiis dolumn is not
     * dorrfsponding dolumn in tif vifw; rfturns -1 if tiis dolumn is not
     * dorrfsponding dolumn in tif vifw; rfturns -1 if tiis dolumn is not
     * dorrfsponding dolumn in tif vifw; rfturns -1 if tiis dolumn is not
     * bfing displbyfd.  If <dodf>modflColumnIndfx</dodf> is lfss tibn zfro,
     * bfing displbyfd.  If <dodf>modflColumnIndfx</dodf> is lfss tibn zfro,
     * bfing displbyfd.  If <dodf>modflColumnIndfx</dodf> is lfss tibn zfro,
     * bfing displbyfd.  If <dodf>modflColumnIndfx</dodf> is lfss tibn zfro,
     * bfing displbyfd.  If <dodf>modflColumnIndfx</dodf> is lfss tibn zfro,
     * rfturns <dodf>modflColumnIndfx</dodf>.
     * rfturns <dodf>modflColumnIndfx</dodf>.
     * rfturns <dodf>modflColumnIndfx</dodf>.
     * rfturns <dodf>modflColumnIndfx</dodf>.
     * rfturns <dodf>modflColumnIndfx</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   modflColumnIndfx     tif indfx of tif dolumn in tif modfl
     * @pbrbm   modflColumnIndfx     tif indfx of tif dolumn in tif modfl
     * @pbrbm   modflColumnIndfx     tif indfx of tif dolumn in tif modfl
     * @pbrbm   modflColumnIndfx     tif indfx of tif dolumn in tif modfl
     * @pbrbm   modflColumnIndfx     tif indfx of tif dolumn in tif modfl
     * @rfturn   tif indfx of tif dorrfsponding dolumn in tif vifw
     * @rfturn   tif indfx of tif dorrfsponding dolumn in tif vifw
     * @rfturn   tif indfx of tif dorrfsponding dolumn in tif vifw
     * @rfturn   tif indfx of tif dorrfsponding dolumn in tif vifw
     * @rfturn   tif indfx of tif dorrfsponding dolumn in tif vifw
     *
     *
     *
     *
     *
     * @sff #donvfrtColumnIndfxToModfl
     * @sff #donvfrtColumnIndfxToModfl
     * @sff #donvfrtColumnIndfxToModfl
     * @sff #donvfrtColumnIndfxToModfl
     * @sff #donvfrtColumnIndfxToModfl
     */
     */
     */
     */
     */
    publid int donvfrtColumnIndfxToVifw(int modflColumnIndfx) {
    publid int donvfrtColumnIndfxToVifw(int modflColumnIndfx) {
    publid int donvfrtColumnIndfxToVifw(int modflColumnIndfx) {
    publid int donvfrtColumnIndfxToVifw(int modflColumnIndfx) {
    publid int donvfrtColumnIndfxToVifw(int modflColumnIndfx) {
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToVifw(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToVifw(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToVifw(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToVifw(
        rfturn SwingUtilitifs2.donvfrtColumnIndfxToVifw(
                gftColumnModfl(), modflColumnIndfx);
                gftColumnModfl(), modflColumnIndfx);
                gftColumnModfl(), modflColumnIndfx);
                gftColumnModfl(), modflColumnIndfx);
                gftColumnModfl(), modflColumnIndfx);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Mbps tif indfx of tif row in tfrms of tif
     * Mbps tif indfx of tif row in tfrms of tif
     * Mbps tif indfx of tif row in tfrms of tif
     * Mbps tif indfx of tif row in tfrms of tif
     * Mbps tif indfx of tif row in tfrms of tif
     * <dodf>TbblfModfl</dodf> to tif vifw.  If tif dontfnts of tif
     * <dodf>TbblfModfl</dodf> to tif vifw.  If tif dontfnts of tif
     * <dodf>TbblfModfl</dodf> to tif vifw.  If tif dontfnts of tif
     * <dodf>TbblfModfl</dodf> to tif vifw.  If tif dontfnts of tif
     * <dodf>TbblfModfl</dodf> to tif vifw.  If tif dontfnts of tif
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     *
     *
     *
     *
     *
     * @pbrbm modflRowIndfx tif indfx of tif row in tfrms of tif modfl
     * @pbrbm modflRowIndfx tif indfx of tif row in tfrms of tif modfl
     * @pbrbm modflRowIndfx tif indfx of tif row in tfrms of tif modfl
     * @pbrbm modflRowIndfx tif indfx of tif row in tfrms of tif modfl
     * @pbrbm modflRowIndfx tif indfx of tif row in tfrms of tif modfl
     * @rfturn tif indfx of tif dorrfsponding row in tif vifw, or -1 if
     * @rfturn tif indfx of tif dorrfsponding row in tif vifw, or -1 if
     * @rfturn tif indfx of tif dorrfsponding row in tif vifw, or -1 if
     * @rfturn tif indfx of tif dorrfsponding row in tif vifw, or -1 if
     * @rfturn tif indfx of tif dorrfsponding row in tif vifw, or -1 if
     *         tif row isn't visiblf
     *         tif row isn't visiblf
     *         tif row isn't visiblf
     *         tif row isn't visiblf
     *         tif row isn't visiblf
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     *         indfx outsidf tif numbfr of rows of tif <dodf>TbblfModfl</dodf>
     *         indfx outsidf tif numbfr of rows of tif <dodf>TbblfModfl</dodf>
     *         indfx outsidf tif numbfr of rows of tif <dodf>TbblfModfl</dodf>
     *         indfx outsidf tif numbfr of rows of tif <dodf>TbblfModfl</dodf>
     *         indfx outsidf tif numbfr of rows of tif <dodf>TbblfModfl</dodf>
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid int donvfrtRowIndfxToVifw(int modflRowIndfx) {
    publid int donvfrtRowIndfxToVifw(int modflRowIndfx) {
    publid int donvfrtRowIndfxToVifw(int modflRowIndfx) {
    publid int donvfrtRowIndfxToVifw(int modflRowIndfx) {
    publid int donvfrtRowIndfxToVifw(int modflRowIndfx) {
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
            rfturn sortfr.donvfrtRowIndfxToVifw(modflRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToVifw(modflRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToVifw(modflRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToVifw(modflRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToVifw(modflRowIndfx);
        }
        }
        }
        }
        }
        rfturn modflRowIndfx;
        rfturn modflRowIndfx;
        rfturn modflRowIndfx;
        rfturn modflRowIndfx;
        rfturn modflRowIndfx;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Mbps tif indfx of tif row in tfrms of tif vifw to tif
     * Mbps tif indfx of tif row in tfrms of tif vifw to tif
     * Mbps tif indfx of tif row in tfrms of tif vifw to tif
     * Mbps tif indfx of tif row in tfrms of tif vifw to tif
     * Mbps tif indfx of tif row in tfrms of tif vifw to tif
     * undfrlying <dodf>TbblfModfl</dodf>.  If tif dontfnts of tif
     * undfrlying <dodf>TbblfModfl</dodf>.  If tif dontfnts of tif
     * undfrlying <dodf>TbblfModfl</dodf>.  If tif dontfnts of tif
     * undfrlying <dodf>TbblfModfl</dodf>.  If tif dontfnts of tif
     * undfrlying <dodf>TbblfModfl</dodf>.  If tif dontfnts of tif
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     * modfl brf not sortfd tif modfl bnd vifw indidfs brf tif sbmf.
     *
     *
     *
     *
     *
     * @pbrbm vifwRowIndfx tif indfx of tif row in tif vifw
     * @pbrbm vifwRowIndfx tif indfx of tif row in tif vifw
     * @pbrbm vifwRowIndfx tif indfx of tif row in tif vifw
     * @pbrbm vifwRowIndfx tif indfx of tif row in tif vifw
     * @pbrbm vifwRowIndfx tif indfx of tif row in tif vifw
     * @rfturn tif indfx of tif dorrfsponding row in tif modfl
     * @rfturn tif indfx of tif dorrfsponding row in tif modfl
     * @rfturn tif indfx of tif dorrfsponding row in tif modfl
     * @rfturn tif indfx of tif dorrfsponding row in tif modfl
     * @rfturn tif indfx of tif dorrfsponding row in tif modfl
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     * @tirows IndfxOutOfBoundsExdfption if sorting is fnbblfd bnd pbssfd bn
     *         indfx outsidf tif rbngf of tif <dodf>JTbblf</dodf> bs
     *         indfx outsidf tif rbngf of tif <dodf>JTbblf</dodf> bs
     *         indfx outsidf tif rbngf of tif <dodf>JTbblf</dodf> bs
     *         indfx outsidf tif rbngf of tif <dodf>JTbblf</dodf> bs
     *         indfx outsidf tif rbngf of tif <dodf>JTbblf</dodf> bs
     *         dftfrminfd by tif mftiod <dodf>gftRowCount</dodf>
     *         dftfrminfd by tif mftiod <dodf>gftRowCount</dodf>
     *         dftfrminfd by tif mftiod <dodf>gftRowCount</dodf>
     *         dftfrminfd by tif mftiod <dodf>gftRowCount</dodf>
     *         dftfrminfd by tif mftiod <dodf>gftRowCount</dodf>
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff jbvbx.swing.tbblf.TbblfRowSortfr
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid int donvfrtRowIndfxToModfl(int vifwRowIndfx) {
    publid int donvfrtRowIndfxToModfl(int vifwRowIndfx) {
    publid int donvfrtRowIndfxToModfl(int vifwRowIndfx) {
    publid int donvfrtRowIndfxToModfl(int vifwRowIndfx) {
    publid int donvfrtRowIndfxToModfl(int vifwRowIndfx) {
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
            rfturn sortfr.donvfrtRowIndfxToModfl(vifwRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToModfl(vifwRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToModfl(vifwRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToModfl(vifwRowIndfx);
            rfturn sortfr.donvfrtRowIndfxToModfl(vifwRowIndfx);
        }
        }
        }
        }
        }
        rfturn vifwRowIndfx;
        rfturn vifwRowIndfx;
        rfturn vifwRowIndfx;
        rfturn vifwRowIndfx;
        rfturn vifwRowIndfx;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of rows tibt dbn bf siown in tif
     * Rfturns tif numbfr of rows tibt dbn bf siown in tif
     * Rfturns tif numbfr of rows tibt dbn bf siown in tif
     * Rfturns tif numbfr of rows tibt dbn bf siown in tif
     * Rfturns tif numbfr of rows tibt dbn bf siown in tif
     * <dodf>JTbblf</dodf>, givfn unlimitfd spbdf.  If b
     * <dodf>JTbblf</dodf>, givfn unlimitfd spbdf.  If b
     * <dodf>JTbblf</dodf>, givfn unlimitfd spbdf.  If b
     * <dodf>JTbblf</dodf>, givfn unlimitfd spbdf.  If b
     * <dodf>JTbblf</dodf>, givfn unlimitfd spbdf.  If b
     * <dodf>RowSortfr</dodf> witi b filtfr ibs bffn spfdififd, tif
     * <dodf>RowSortfr</dodf> witi b filtfr ibs bffn spfdififd, tif
     * <dodf>RowSortfr</dodf> witi b filtfr ibs bffn spfdififd, tif
     * <dodf>RowSortfr</dodf> witi b filtfr ibs bffn spfdififd, tif
     * <dodf>RowSortfr</dodf> witi b filtfr ibs bffn spfdififd, tif
     * numbfr of rows rfturnfd mby difffr from tibt of tif undfrlying
     * numbfr of rows rfturnfd mby difffr from tibt of tif undfrlying
     * numbfr of rows rfturnfd mby difffr from tibt of tif undfrlying
     * numbfr of rows rfturnfd mby difffr from tibt of tif undfrlying
     * numbfr of rows rfturnfd mby difffr from tibt of tif undfrlying
     * <dodf>TbblfModfl</dodf>.
     * <dodf>TbblfModfl</dodf>.
     * <dodf>TbblfModfl</dodf>.
     * <dodf>TbblfModfl</dodf>.
     * <dodf>TbblfModfl</dodf>.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of rows siown in tif <dodf>JTbblf</dodf>
     * @rfturn tif numbfr of rows siown in tif <dodf>JTbblf</dodf>
     * @rfturn tif numbfr of rows siown in tif <dodf>JTbblf</dodf>
     * @rfturn tif numbfr of rows siown in tif <dodf>JTbblf</dodf>
     * @rfturn tif numbfr of rows siown in tif <dodf>JTbblf</dodf>
     * @sff #gftColumnCount
     * @sff #gftColumnCount
     * @sff #gftColumnCount
     * @sff #gftColumnCount
     * @sff #gftColumnCount
     */
     */
     */
     */
     */
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        RowSortfr<?> sortfr = gftRowSortfr();
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
        if (sortfr != null) {
            rfturn sortfr.gftVifwRowCount();
            rfturn sortfr.gftVifwRowCount();
            rfturn sortfr.gftVifwRowCount();
            rfturn sortfr.gftVifwRowCount();
            rfturn sortfr.gftVifwRowCount();
        }
        }
        }
        }
        }
        rfturn gftModfl().gftRowCount();
        rfturn gftModfl().gftRowCount();
        rfturn gftModfl().gftRowCount();
        rfturn gftModfl().gftRowCount();
        rfturn gftModfl().gftRowCount();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of dolumns in tif dolumn modfl. Notf tibt tiis mby
     * Rfturns tif numbfr of dolumns in tif dolumn modfl. Notf tibt tiis mby
     * Rfturns tif numbfr of dolumns in tif dolumn modfl. Notf tibt tiis mby
     * Rfturns tif numbfr of dolumns in tif dolumn modfl. Notf tibt tiis mby
     * Rfturns tif numbfr of dolumns in tif dolumn modfl. Notf tibt tiis mby
     * bf difffrfnt from tif numbfr of dolumns in tif tbblf modfl.
     * bf difffrfnt from tif numbfr of dolumns in tif tbblf modfl.
     * bf difffrfnt from tif numbfr of dolumns in tif tbblf modfl.
     * bf difffrfnt from tif numbfr of dolumns in tif tbblf modfl.
     * bf difffrfnt from tif numbfr of dolumns in tif tbblf modfl.
     *
     *
     *
     *
     *
     * @rfturn  tif numbfr of dolumns in tif tbblf
     * @rfturn  tif numbfr of dolumns in tif tbblf
     * @rfturn  tif numbfr of dolumns in tif tbblf
     * @rfturn  tif numbfr of dolumns in tif tbblf
     * @rfturn  tif numbfr of dolumns in tif tbblf
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #gftRowCount
     * @sff #rfmovfColumn
     * @sff #rfmovfColumn
     * @sff #rfmovfColumn
     * @sff #rfmovfColumn
     * @sff #rfmovfColumn
     */
     */
     */
     */
     */
    publid int gftColumnCount() {
    publid int gftColumnCount() {
    publid int gftColumnCount() {
    publid int gftColumnCount() {
    publid int gftColumnCount() {
        rfturn gftColumnModfl().gftColumnCount();
        rfturn gftColumnModfl().gftColumnCount();
        rfturn gftColumnModfl().gftColumnCount();
        rfturn gftColumnModfl().gftColumnCount();
        rfturn gftColumnModfl().gftColumnCount();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif nbmf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif nbmf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif nbmf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif nbmf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif nbmf of tif dolumn bppfbring in tif vifw bt
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm  dolumn    tif dolumn in tif vifw bfing qufrifd
     * @pbrbm  dolumn    tif dolumn in tif vifw bfing qufrifd
     * @pbrbm  dolumn    tif dolumn in tif vifw bfing qufrifd
     * @pbrbm  dolumn    tif dolumn in tif vifw bfing qufrifd
     * @pbrbm  dolumn    tif dolumn in tif vifw bfing qufrifd
     * @rfturn tif nbmf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif nbmf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif nbmf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif nbmf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif nbmf of tif dolumn bt position <dodf>dolumn</dodf>
                        in tif vifw wifrf tif first dolumn is dolumn 0
                        in tif vifw wifrf tif first dolumn is dolumn 0
                        in tif vifw wifrf tif first dolumn is dolumn 0
                        in tif vifw wifrf tif first dolumn is dolumn 0
                        in tif vifw wifrf tif first dolumn is dolumn 0
     */
     */
     */
     */
     */
    publid String gftColumnNbmf(int dolumn) {
    publid String gftColumnNbmf(int dolumn) {
    publid String gftColumnNbmf(int dolumn) {
    publid String gftColumnNbmf(int dolumn) {
    publid String gftColumnNbmf(int dolumn) {
        rfturn gftModfl().gftColumnNbmf(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnNbmf(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnNbmf(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnNbmf(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnNbmf(donvfrtColumnIndfxToModfl(dolumn));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif typf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif typf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif typf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif typf of tif dolumn bppfbring in tif vifw bt
     * Rfturns tif typf of tif dolumn bppfbring in tif vifw bt
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     * dolumn position <dodf>dolumn</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   dolumn   tif dolumn in tif vifw bfing qufrifd
     * @pbrbm   dolumn   tif dolumn in tif vifw bfing qufrifd
     * @pbrbm   dolumn   tif dolumn in tif vifw bfing qufrifd
     * @pbrbm   dolumn   tif dolumn in tif vifw bfing qufrifd
     * @pbrbm   dolumn   tif dolumn in tif vifw bfing qufrifd
     * @rfturn tif typf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif typf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif typf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif typf of tif dolumn bt position <dodf>dolumn</dodf>
     * @rfturn tif typf of tif dolumn bt position <dodf>dolumn</dodf>
     *          in tif vifw wifrf tif first dolumn is dolumn 0
     *          in tif vifw wifrf tif first dolumn is dolumn 0
     *          in tif vifw wifrf tif first dolumn is dolumn 0
     *          in tif vifw wifrf tif first dolumn is dolumn 0
     *          in tif vifw wifrf tif first dolumn is dolumn 0
     */
     */
     */
     */
     */
    publid Clbss<?> gftColumnClbss(int dolumn) {
    publid Clbss<?> gftColumnClbss(int dolumn) {
    publid Clbss<?> gftColumnClbss(int dolumn) {
    publid Clbss<?> gftColumnClbss(int dolumn) {
    publid Clbss<?> gftColumnClbss(int dolumn) {
        rfturn gftModfl().gftColumnClbss(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnClbss(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnClbss(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnClbss(donvfrtColumnIndfxToModfl(dolumn));
        rfturn gftModfl().gftColumnClbss(donvfrtColumnIndfxToModfl(dolumn));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dfll vbluf bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * Rfturns tif dfll vbluf bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * Rfturns tif dfll vbluf bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * Rfturns tif dfll vbluf bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * Rfturns tif dfll vbluf bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *
     *
     *
     *
     *
     * @pbrbm   row             tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row             tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row             tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row             tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row             tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn          tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn          tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn          tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn          tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn          tif dolumn wiosf vbluf is to bf qufrifd
     * @rfturn  tif Objfdt bt tif spfdififd dfll
     * @rfturn  tif Objfdt bt tif spfdififd dfll
     * @rfturn  tif Objfdt bt tif spfdififd dfll
     * @rfturn  tif Objfdt bt tif spfdififd dfll
     * @rfturn  tif Objfdt bt tif spfdififd dfll
     */
     */
     */
     */
     */
    publid Objfdt gftVblufAt(int row, int dolumn) {
    publid Objfdt gftVblufAt(int row, int dolumn) {
    publid Objfdt gftVblufAt(int row, int dolumn) {
    publid Objfdt gftVblufAt(int row, int dolumn) {
    publid Objfdt gftVblufAt(int row, int dolumn) {
        rfturn gftModfl().gftVblufAt(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().gftVblufAt(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().gftVblufAt(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().gftVblufAt(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().gftVblufAt(donvfrtRowIndfxToModfl(row),
                                     donvfrtColumnIndfxToModfl(dolumn));
                                     donvfrtColumnIndfxToModfl(dolumn));
                                     donvfrtColumnIndfxToModfl(dolumn));
                                     donvfrtColumnIndfxToModfl(dolumn));
                                     donvfrtColumnIndfxToModfl(dolumn));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif vbluf for tif dfll in tif tbblf modfl bt <dodf>row</dodf>
     * Sfts tif vbluf for tif dfll in tif tbblf modfl bt <dodf>row</dodf>
     * Sfts tif vbluf for tif dfll in tif tbblf modfl bt <dodf>row</dodf>
     * Sfts tif vbluf for tif dfll in tif tbblf modfl bt <dodf>row</dodf>
     * Sfts tif vbluf for tif dfll in tif tbblf modfl bt <dodf>row</dodf>
     * bnd <dodf>dolumn</dodf>.
     * bnd <dodf>dolumn</dodf>.
     * bnd <dodf>dolumn</dodf>.
     * bnd <dodf>dolumn</dodf>.
     * bnd <dodf>dolumn</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *
     *
     *
     *
     *
     * <dodf>bVbluf</dodf> is tif nfw vbluf.
     * <dodf>bVbluf</dodf> is tif nfw vbluf.
     * <dodf>bVbluf</dodf> is tif nfw vbluf.
     * <dodf>bVbluf</dodf> is tif nfw vbluf.
     * <dodf>bVbluf</dodf> is tif nfw vbluf.
     *
     *
     *
     *
     *
     * @pbrbm   bVbluf          tif nfw vbluf
     * @pbrbm   bVbluf          tif nfw vbluf
     * @pbrbm   bVbluf          tif nfw vbluf
     * @pbrbm   bVbluf          tif nfw vbluf
     * @pbrbm   bVbluf          tif nfw vbluf
     * @pbrbm   row             tif row of tif dfll to bf dibngfd
     * @pbrbm   row             tif row of tif dfll to bf dibngfd
     * @pbrbm   row             tif row of tif dfll to bf dibngfd
     * @pbrbm   row             tif row of tif dfll to bf dibngfd
     * @pbrbm   row             tif row of tif dfll to bf dibngfd
     * @pbrbm   dolumn          tif dolumn of tif dfll to bf dibngfd
     * @pbrbm   dolumn          tif dolumn of tif dfll to bf dibngfd
     * @pbrbm   dolumn          tif dolumn of tif dfll to bf dibngfd
     * @pbrbm   dolumn          tif dolumn of tif dfll to bf dibngfd
     * @pbrbm   dolumn          tif dolumn of tif dfll to bf dibngfd
     * @sff #gftVblufAt
     * @sff #gftVblufAt
     * @sff #gftVblufAt
     * @sff #gftVblufAt
     * @sff #gftVblufAt
     */
     */
     */
     */
     */
    publid void sftVblufAt(Objfdt bVbluf, int row, int dolumn) {
    publid void sftVblufAt(Objfdt bVbluf, int row, int dolumn) {
    publid void sftVblufAt(Objfdt bVbluf, int row, int dolumn) {
    publid void sftVblufAt(Objfdt bVbluf, int row, int dolumn) {
    publid void sftVblufAt(Objfdt bVbluf, int row, int dolumn) {
        gftModfl().sftVblufAt(bVbluf, donvfrtRowIndfxToModfl(row),
        gftModfl().sftVblufAt(bVbluf, donvfrtRowIndfxToModfl(row),
        gftModfl().sftVblufAt(bVbluf, donvfrtRowIndfxToModfl(row),
        gftModfl().sftVblufAt(bVbluf, donvfrtRowIndfxToModfl(row),
        gftModfl().sftVblufAt(bVbluf, donvfrtRowIndfxToModfl(row),
                              donvfrtColumnIndfxToModfl(dolumn));
                              donvfrtColumnIndfxToModfl(dolumn));
                              donvfrtColumnIndfxToModfl(dolumn));
                              donvfrtColumnIndfxToModfl(dolumn));
                              donvfrtColumnIndfxToModfl(dolumn));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif dfll bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>
     * Rfturns truf if tif dfll bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>
     * Rfturns truf if tif dfll bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>
     * Rfturns truf if tif dfll bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>
     * Rfturns truf if tif dfll bt <dodf>row</dodf> bnd <dodf>dolumn</dodf>
     * is fditbblf.  Otifrwisf, invoking <dodf>sftVblufAt</dodf> on tif dfll
     * is fditbblf.  Otifrwisf, invoking <dodf>sftVblufAt</dodf> on tif dfll
     * is fditbblf.  Otifrwisf, invoking <dodf>sftVblufAt</dodf> on tif dfll
     * is fditbblf.  Otifrwisf, invoking <dodf>sftVblufAt</dodf> on tif dfll
     * is fditbblf.  Otifrwisf, invoking <dodf>sftVblufAt</dodf> on tif dfll
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     * <b>Notf</b>: Tif dolumn is spfdififd in tif tbblf vifw's displby
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr, bnd not in tif <dodf>TbblfModfl</dodf>'s dolumn
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              ordfr.  Tiis is bn importbnt distindtion bfdbusf bs tif
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              usfr rfbrrbngfs tif dolumns in tif tbblf,
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              tif dolumn bt b givfn indfx in tif vifw will dibngf.
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              Mfbnwiilf tif usfr's bdtions nfvfr bfffdt tif modfl's
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *              dolumn ordfring.
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     * @pbrbm   row      tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row      tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row      tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row      tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   row      tif row wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn   tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn   tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn   tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn   tif dolumn wiosf vbluf is to bf qufrifd
     * @pbrbm   dolumn   tif dolumn wiosf vbluf is to bf qufrifd
     * @rfturn  truf if tif dfll is fditbblf
     * @rfturn  truf if tif dfll is fditbblf
     * @rfturn  truf if tif dfll is fditbblf
     * @rfturn  truf if tif dfll is fditbblf
     * @rfturn  truf if tif dfll is fditbblf
     * @sff #sftVblufAt
     * @sff #sftVblufAt
     * @sff #sftVblufAt
     * @sff #sftVblufAt
     * @sff #sftVblufAt
     */
     */
     */
     */
     */
    publid boolfbn isCfllEditbblf(int row, int dolumn) {
    publid boolfbn isCfllEditbblf(int row, int dolumn) {
    publid boolfbn isCfllEditbblf(int row, int dolumn) {
    publid boolfbn isCfllEditbblf(int row, int dolumn) {
    publid boolfbn isCfllEditbblf(int row, int dolumn) {
        rfturn gftModfl().isCfllEditbblf(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().isCfllEditbblf(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().isCfllEditbblf(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().isCfllEditbblf(donvfrtRowIndfxToModfl(row),
        rfturn gftModfl().isCfllEditbblf(donvfrtRowIndfxToModfl(row),
                                         donvfrtColumnIndfxToModfl(dolumn));
                                         donvfrtColumnIndfxToModfl(dolumn));
                                         donvfrtColumnIndfxToModfl(dolumn));
                                         donvfrtColumnIndfxToModfl(dolumn));
                                         donvfrtColumnIndfxToModfl(dolumn));
    }
    }
    }
    }
    }
//
//
//
//
//
// Adding bnd rfmoving dolumns in tif vifw
// Adding bnd rfmoving dolumns in tif vifw
// Adding bnd rfmoving dolumns in tif vifw
// Adding bnd rfmoving dolumns in tif vifw
// Adding bnd rfmoving dolumns in tif vifw
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     *  Appfnds <dodf>bColumn</dodf> to tif fnd of tif brrby of dolumns ifld by
     *  Appfnds <dodf>bColumn</dodf> to tif fnd of tif brrby of dolumns ifld by
     *  Appfnds <dodf>bColumn</dodf> to tif fnd of tif brrby of dolumns ifld by
     *  Appfnds <dodf>bColumn</dodf> to tif fnd of tif brrby of dolumns ifld by
     *  Appfnds <dodf>bColumn</dodf> to tif fnd of tif brrby of dolumns ifld by
     *  tiis <dodf>JTbblf</dodf>'s dolumn modfl.
     *  tiis <dodf>JTbblf</dodf>'s dolumn modfl.
     *  tiis <dodf>JTbblf</dodf>'s dolumn modfl.
     *  tiis <dodf>JTbblf</dodf>'s dolumn modfl.
     *  tiis <dodf>JTbblf</dodf>'s dolumn modfl.
     *  If tif dolumn nbmf of <dodf>bColumn</dodf> is <dodf>null</dodf>,
     *  If tif dolumn nbmf of <dodf>bColumn</dodf> is <dodf>null</dodf>,
     *  If tif dolumn nbmf of <dodf>bColumn</dodf> is <dodf>null</dodf>,
     *  If tif dolumn nbmf of <dodf>bColumn</dodf> is <dodf>null</dodf>,
     *  If tif dolumn nbmf of <dodf>bColumn</dodf> is <dodf>null</dodf>,
     *  sfts tif dolumn nbmf of <dodf>bColumn</dodf> to tif nbmf
     *  sfts tif dolumn nbmf of <dodf>bColumn</dodf> to tif nbmf
     *  sfts tif dolumn nbmf of <dodf>bColumn</dodf> to tif nbmf
     *  sfts tif dolumn nbmf of <dodf>bColumn</dodf> to tif nbmf
     *  sfts tif dolumn nbmf of <dodf>bColumn</dodf> to tif nbmf
     *  rfturnfd by <dodf>gftModfl().gftColumnNbmf()</dodf>.
     *  rfturnfd by <dodf>gftModfl().gftColumnNbmf()</dodf>.
     *  rfturnfd by <dodf>gftModfl().gftColumnNbmf()</dodf>.
     *  rfturnfd by <dodf>gftModfl().gftColumnNbmf()</dodf>.
     *  rfturnfd by <dodf>gftModfl().gftColumnNbmf()</dodf>.
     *  <p>
     *  <p>
     *  <p>
     *  <p>
     *  <p>
     *  To bdd b dolumn to tiis <dodf>JTbblf</dodf> to displby tif
     *  To bdd b dolumn to tiis <dodf>JTbblf</dodf> to displby tif
     *  To bdd b dolumn to tiis <dodf>JTbblf</dodf> to displby tif
     *  To bdd b dolumn to tiis <dodf>JTbblf</dodf> to displby tif
     *  To bdd b dolumn to tiis <dodf>JTbblf</dodf> to displby tif
     *  <dodf>modflColumn</dodf>'ti dolumn of dbtb in tif modfl witi b
     *  <dodf>modflColumn</dodf>'ti dolumn of dbtb in tif modfl witi b
     *  <dodf>modflColumn</dodf>'ti dolumn of dbtb in tif modfl witi b
     *  <dodf>modflColumn</dodf>'ti dolumn of dbtb in tif modfl witi b
     *  <dodf>modflColumn</dodf>'ti dolumn of dbtb in tif modfl witi b
     *  givfn <dodf>widti</dodf>, <dodf>dfllRfndfrfr</dodf>,
     *  givfn <dodf>widti</dodf>, <dodf>dfllRfndfrfr</dodf>,
     *  givfn <dodf>widti</dodf>, <dodf>dfllRfndfrfr</dodf>,
     *  givfn <dodf>widti</dodf>, <dodf>dfllRfndfrfr</dodf>,
     *  givfn <dodf>widti</dodf>, <dodf>dfllRfndfrfr</dodf>,
     *  bnd <dodf>dfllEditor</dodf> you dbn usf:
     *  bnd <dodf>dfllEditor</dodf> you dbn usf:
     *  bnd <dodf>dfllEditor</dodf> you dbn usf:
     *  bnd <dodf>dfllEditor</dodf> you dbn usf:
     *  bnd <dodf>dfllEditor</dodf> you dbn usf:
     *  <prf>
     *  <prf>
     *  <prf>
     *  <prf>
     *  <prf>
     *
     *
     *
     *
     *
     *      bddColumn(nfw TbblfColumn(modflColumn, widti, dfllRfndfrfr, dfllEditor));
     *      bddColumn(nfw TbblfColumn(modflColumn, widti, dfllRfndfrfr, dfllEditor));
     *      bddColumn(nfw TbblfColumn(modflColumn, widti, dfllRfndfrfr, dfllEditor));
     *      bddColumn(nfw TbblfColumn(modflColumn, widti, dfllRfndfrfr, dfllEditor));
     *      bddColumn(nfw TbblfColumn(modflColumn, widti, dfllRfndfrfr, dfllEditor));
     *
     *
     *
     *
     *
     *  </prf>
     *  </prf>
     *  </prf>
     *  </prf>
     *  </prf>
     *  [Any of tif <dodf>TbblfColumn</dodf> donstrudtors dbn bf usfd
     *  [Any of tif <dodf>TbblfColumn</dodf> donstrudtors dbn bf usfd
     *  [Any of tif <dodf>TbblfColumn</dodf> donstrudtors dbn bf usfd
     *  [Any of tif <dodf>TbblfColumn</dodf> donstrudtors dbn bf usfd
     *  [Any of tif <dodf>TbblfColumn</dodf> donstrudtors dbn bf usfd
     *  instfbd of tiis onf.]
     *  instfbd of tiis onf.]
     *  instfbd of tiis onf.]
     *  instfbd of tiis onf.]
     *  instfbd of tiis onf.]
     *  Tif modfl dolumn numbfr is storfd insidf tif <dodf>TbblfColumn</dodf>
     *  Tif modfl dolumn numbfr is storfd insidf tif <dodf>TbblfColumn</dodf>
     *  Tif modfl dolumn numbfr is storfd insidf tif <dodf>TbblfColumn</dodf>
     *  Tif modfl dolumn numbfr is storfd insidf tif <dodf>TbblfColumn</dodf>
     *  Tif modfl dolumn numbfr is storfd insidf tif <dodf>TbblfColumn</dodf>
     *  bnd is usfd during rfndfring bnd fditing to lodbtf tif bppropribtfs
     *  bnd is usfd during rfndfring bnd fditing to lodbtf tif bppropribtfs
     *  bnd is usfd during rfndfring bnd fditing to lodbtf tif bppropribtfs
     *  bnd is usfd during rfndfring bnd fditing to lodbtf tif bppropribtfs
     *  bnd is usfd during rfndfring bnd fditing to lodbtf tif bppropribtfs
     *  dbtb vblufs in tif modfl. Tif modfl dolumn numbfr dofs not dibngf
     *  dbtb vblufs in tif modfl. Tif modfl dolumn numbfr dofs not dibngf
     *  dbtb vblufs in tif modfl. Tif modfl dolumn numbfr dofs not dibngf
     *  dbtb vblufs in tif modfl. Tif modfl dolumn numbfr dofs not dibngf
     *  dbtb vblufs in tif modfl. Tif modfl dolumn numbfr dofs not dibngf
     *  wifn dolumns brf rfordfrfd in tif vifw.
     *  wifn dolumns brf rfordfrfd in tif vifw.
     *  wifn dolumns brf rfordfrfd in tif vifw.
     *  wifn dolumns brf rfordfrfd in tif vifw.
     *  wifn dolumns brf rfordfrfd in tif vifw.
     *
     *
     *
     *
     *
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf bddfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf bddfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf bddfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf bddfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf bddfd
     *  @sff    #rfmovfColumn
     *  @sff    #rfmovfColumn
     *  @sff    #rfmovfColumn
     *  @sff    #rfmovfColumn
     *  @sff    #rfmovfColumn
     */
     */
     */
     */
     */
    publid void bddColumn(TbblfColumn bColumn) {
    publid void bddColumn(TbblfColumn bColumn) {
    publid void bddColumn(TbblfColumn bColumn) {
    publid void bddColumn(TbblfColumn bColumn) {
    publid void bddColumn(TbblfColumn bColumn) {
        if (bColumn.gftHfbdfrVbluf() == null) {
        if (bColumn.gftHfbdfrVbluf() == null) {
        if (bColumn.gftHfbdfrVbluf() == null) {
        if (bColumn.gftHfbdfrVbluf() == null) {
        if (bColumn.gftHfbdfrVbluf() == null) {
            int modflColumn = bColumn.gftModflIndfx();
            int modflColumn = bColumn.gftModflIndfx();
            int modflColumn = bColumn.gftModflIndfx();
            int modflColumn = bColumn.gftModflIndfx();
            int modflColumn = bColumn.gftModflIndfx();
            String dolumnNbmf = gftModfl().gftColumnNbmf(modflColumn);
            String dolumnNbmf = gftModfl().gftColumnNbmf(modflColumn);
            String dolumnNbmf = gftModfl().gftColumnNbmf(modflColumn);
            String dolumnNbmf = gftModfl().gftColumnNbmf(modflColumn);
            String dolumnNbmf = gftModfl().gftColumnNbmf(modflColumn);
            bColumn.sftHfbdfrVbluf(dolumnNbmf);
            bColumn.sftHfbdfrVbluf(dolumnNbmf);
            bColumn.sftHfbdfrVbluf(dolumnNbmf);
            bColumn.sftHfbdfrVbluf(dolumnNbmf);
            bColumn.sftHfbdfrVbluf(dolumnNbmf);
        }
        }
        }
        }
        }
        gftColumnModfl().bddColumn(bColumn);
        gftColumnModfl().bddColumn(bColumn);
        gftColumnModfl().bddColumn(bColumn);
        gftColumnModfl().bddColumn(bColumn);
        gftColumnModfl().bddColumn(bColumn);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     *  Rfmovfs <dodf>bColumn</dodf> from tiis <dodf>JTbblf</dodf>'s
     *  Rfmovfs <dodf>bColumn</dodf> from tiis <dodf>JTbblf</dodf>'s
     *  Rfmovfs <dodf>bColumn</dodf> from tiis <dodf>JTbblf</dodf>'s
     *  Rfmovfs <dodf>bColumn</dodf> from tiis <dodf>JTbblf</dodf>'s
     *  Rfmovfs <dodf>bColumn</dodf> from tiis <dodf>JTbblf</dodf>'s
     *  brrby of dolumns.  Notf: tiis mftiod dofs not rfmovf tif dolumn
     *  brrby of dolumns.  Notf: tiis mftiod dofs not rfmovf tif dolumn
     *  brrby of dolumns.  Notf: tiis mftiod dofs not rfmovf tif dolumn
     *  brrby of dolumns.  Notf: tiis mftiod dofs not rfmovf tif dolumn
     *  brrby of dolumns.  Notf: tiis mftiod dofs not rfmovf tif dolumn
     *  of dbtb from tif modfl; it just rfmovfs tif <dodf>TbblfColumn</dodf>
     *  of dbtb from tif modfl; it just rfmovfs tif <dodf>TbblfColumn</dodf>
     *  of dbtb from tif modfl; it just rfmovfs tif <dodf>TbblfColumn</dodf>
     *  of dbtb from tif modfl; it just rfmovfs tif <dodf>TbblfColumn</dodf>
     *  of dbtb from tif modfl; it just rfmovfs tif <dodf>TbblfColumn</dodf>
     *  tibt wbs rfsponsiblf for displbying it.
     *  tibt wbs rfsponsiblf for displbying it.
     *  tibt wbs rfsponsiblf for displbying it.
     *  tibt wbs rfsponsiblf for displbying it.
     *  tibt wbs rfsponsiblf for displbying it.
     *
     *
     *
     *
     *
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf rfmovfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf rfmovfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf rfmovfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf rfmovfd
     *  @pbrbm  bColumn         tif <dodf>TbblfColumn</dodf> to bf rfmovfd
     *  @sff    #bddColumn
     *  @sff    #bddColumn
     *  @sff    #bddColumn
     *  @sff    #bddColumn
     *  @sff    #bddColumn
     */
     */
     */
     */
     */
    publid void rfmovfColumn(TbblfColumn bColumn) {
    publid void rfmovfColumn(TbblfColumn bColumn) {
    publid void rfmovfColumn(TbblfColumn bColumn) {
    publid void rfmovfColumn(TbblfColumn bColumn) {
    publid void rfmovfColumn(TbblfColumn bColumn) {
        gftColumnModfl().rfmovfColumn(bColumn);
        gftColumnModfl().rfmovfColumn(bColumn);
        gftColumnModfl().rfmovfColumn(bColumn);
        gftColumnModfl().rfmovfColumn(bColumn);
        gftColumnModfl().rfmovfColumn(bColumn);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Movfs tif dolumn <dodf>dolumn</dodf> to tif position durrfntly
     * Movfs tif dolumn <dodf>dolumn</dodf> to tif position durrfntly
     * Movfs tif dolumn <dodf>dolumn</dodf> to tif position durrfntly
     * Movfs tif dolumn <dodf>dolumn</dodf> to tif position durrfntly
     * Movfs tif dolumn <dodf>dolumn</dodf> to tif position durrfntly
     * oddupifd by tif dolumn <dodf>tbrgftColumn</dodf> in tif vifw.
     * oddupifd by tif dolumn <dodf>tbrgftColumn</dodf> in tif vifw.
     * oddupifd by tif dolumn <dodf>tbrgftColumn</dodf> in tif vifw.
     * oddupifd by tif dolumn <dodf>tbrgftColumn</dodf> in tif vifw.
     * oddupifd by tif dolumn <dodf>tbrgftColumn</dodf> in tif vifw.
     * Tif old dolumn bt <dodf>tbrgftColumn</dodf> is
     * Tif old dolumn bt <dodf>tbrgftColumn</dodf> is
     * Tif old dolumn bt <dodf>tbrgftColumn</dodf> is
     * Tif old dolumn bt <dodf>tbrgftColumn</dodf> is
     * Tif old dolumn bt <dodf>tbrgftColumn</dodf> is
     * siiftfd lfft or rigit to mbkf room.
     * siiftfd lfft or rigit to mbkf room.
     * siiftfd lfft or rigit to mbkf room.
     * siiftfd lfft or rigit to mbkf room.
     * siiftfd lfft or rigit to mbkf room.
     *
     *
     *
     *
     *
     * @pbrbm   dolumn                  tif indfx of dolumn to bf movfd
     * @pbrbm   dolumn                  tif indfx of dolumn to bf movfd
     * @pbrbm   dolumn                  tif indfx of dolumn to bf movfd
     * @pbrbm   dolumn                  tif indfx of dolumn to bf movfd
     * @pbrbm   dolumn                  tif indfx of dolumn to bf movfd
     * @pbrbm   tbrgftColumn            tif nfw indfx of tif dolumn
     * @pbrbm   tbrgftColumn            tif nfw indfx of tif dolumn
     * @pbrbm   tbrgftColumn            tif nfw indfx of tif dolumn
     * @pbrbm   tbrgftColumn            tif nfw indfx of tif dolumn
     * @pbrbm   tbrgftColumn            tif nfw indfx of tif dolumn
     */
     */
     */
     */
     */
    publid void movfColumn(int dolumn, int tbrgftColumn) {
    publid void movfColumn(int dolumn, int tbrgftColumn) {
    publid void movfColumn(int dolumn, int tbrgftColumn) {
    publid void movfColumn(int dolumn, int tbrgftColumn) {
    publid void movfColumn(int dolumn, int tbrgftColumn) {
        gftColumnModfl().movfColumn(dolumn, tbrgftColumn);
        gftColumnModfl().movfColumn(dolumn, tbrgftColumn);
        gftColumnModfl().movfColumn(dolumn, tbrgftColumn);
        gftColumnModfl().movfColumn(dolumn, tbrgftColumn);
        gftColumnModfl().movfColumn(dolumn, tbrgftColumn);
    }
    }
    }
    }
    }





//
//
//
//
//
// Covfr mftiods for vbrious modfls bnd iflpfr mftiods
// Covfr mftiods for vbrious modfls bnd iflpfr mftiods
// Covfr mftiods for vbrious modfls bnd iflpfr mftiods
// Covfr mftiods for vbrious modfls bnd iflpfr mftiods
// Covfr mftiods for vbrious modfls bnd iflpfr mftiods
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * [0, <dodf>gftColumnCount()</dodf>-1].
     * [0, <dodf>gftColumnCount()</dodf>-1].
     * [0, <dodf>gftColumnCount()</dodf>-1].
     * [0, <dodf>gftColumnCount()</dodf>-1].
     * [0, <dodf>gftColumnCount()</dodf>-1].
     *
     *
     *
     *
     *
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @rfturn  tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif dolumn tibt <dodf>point</dodf> lifs in,
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          [0, <dodf>gftColumnCount()</dodf>-1]
     *          [0, <dodf>gftColumnCount()</dodf>-1]
     *          [0, <dodf>gftColumnCount()</dodf>-1]
     *          [0, <dodf>gftColumnCount()</dodf>-1]
     *          [0, <dodf>gftColumnCount()</dodf>-1]
     * @sff     #rowAtPoint
     * @sff     #rowAtPoint
     * @sff     #rowAtPoint
     * @sff     #rowAtPoint
     * @sff     #rowAtPoint
     */
     */
     */
     */
     */
    publid int dolumnAtPoint(Point point) {
    publid int dolumnAtPoint(Point point) {
    publid int dolumnAtPoint(Point point) {
    publid int dolumnAtPoint(Point point) {
    publid int dolumnAtPoint(Point point) {
        int x = point.x;
        int x = point.x;
        int x = point.x;
        int x = point.x;
        int x = point.x;
        if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
        if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
        if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
        if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
        if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
            x = gftWidti() - x - 1;
            x = gftWidti() - x - 1;
            x = gftWidti() - x - 1;
            x = gftWidti() - x - 1;
            x = gftWidti() - x - 1;
        }
        }
        }
        }
        }
        rfturn gftColumnModfl().gftColumnIndfxAtX(x);
        rfturn gftColumnModfl().gftColumnIndfxAtX(x);
        rfturn gftColumnModfl().gftColumnIndfxAtX(x);
        rfturn gftColumnModfl().gftColumnIndfxAtX(x);
        rfturn gftColumnModfl().gftColumnIndfxAtX(x);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * Rfturns tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * or -1 if tif rfsult is not in tif rbngf
     * [0, <dodf>gftRowCount()</dodf>-1].
     * [0, <dodf>gftRowCount()</dodf>-1].
     * [0, <dodf>gftRowCount()</dodf>-1].
     * [0, <dodf>gftRowCount()</dodf>-1].
     * [0, <dodf>gftRowCount()</dodf>-1].
     *
     *
     *
     *
     *
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @pbrbm   point   tif lodbtion of intfrfst
     * @rfturn  tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     * @rfturn  tif indfx of tif row tibt <dodf>point</dodf> lifs in,
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          or -1 if tif rfsult is not in tif rbngf
     *          [0, <dodf>gftRowCount()</dodf>-1]
     *          [0, <dodf>gftRowCount()</dodf>-1]
     *          [0, <dodf>gftRowCount()</dodf>-1]
     *          [0, <dodf>gftRowCount()</dodf>-1]
     *          [0, <dodf>gftRowCount()</dodf>-1]
     * @sff     #dolumnAtPoint
     * @sff     #dolumnAtPoint
     * @sff     #dolumnAtPoint
     * @sff     #dolumnAtPoint
     * @sff     #dolumnAtPoint
     */
     */
     */
     */
     */
    publid int rowAtPoint(Point point) {
    publid int rowAtPoint(Point point) {
    publid int rowAtPoint(Point point) {
    publid int rowAtPoint(Point point) {
    publid int rowAtPoint(Point point) {
        int y = point.y;
        int y = point.y;
        int y = point.y;
        int y = point.y;
        int y = point.y;
        int rfsult = (rowModfl == null) ?  y/gftRowHfigit() : rowModfl.gftIndfx(y);
        int rfsult = (rowModfl == null) ?  y/gftRowHfigit() : rowModfl.gftIndfx(y);
        int rfsult = (rowModfl == null) ?  y/gftRowHfigit() : rowModfl.gftIndfx(y);
        int rfsult = (rowModfl == null) ?  y/gftRowHfigit() : rowModfl.gftIndfx(y);
        int rfsult = (rowModfl == null) ?  y/gftRowHfigit() : rowModfl.gftIndfx(y);
        if (rfsult < 0) {
        if (rfsult < 0) {
        if (rfsult < 0) {
        if (rfsult < 0) {
        if (rfsult < 0) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        flsf if (rfsult >= gftRowCount()) {
        flsf if (rfsult >= gftRowCount()) {
        flsf if (rfsult >= gftRowCount()) {
        flsf if (rfsult >= gftRowCount()) {
        flsf if (rfsult >= gftRowCount()) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            rfturn rfsult;
            rfturn rfsult;
            rfturn rfsult;
            rfturn rfsult;
            rfturn rfsult;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b rfdtbnglf for tif dfll tibt lifs bt tif intfrsfdtion of
     * Rfturns b rfdtbnglf for tif dfll tibt lifs bt tif intfrsfdtion of
     * Rfturns b rfdtbnglf for tif dfll tibt lifs bt tif intfrsfdtion of
     * Rfturns b rfdtbnglf for tif dfll tibt lifs bt tif intfrsfdtion of
     * Rfturns b rfdtbnglf for tif dfll tibt lifs bt tif intfrsfdtion of
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>.
     * If <dodf>indludfSpbding</dodf> is truf tifn tif vbluf rfturnfd
     * If <dodf>indludfSpbding</dodf> is truf tifn tif vbluf rfturnfd
     * If <dodf>indludfSpbding</dodf> is truf tifn tif vbluf rfturnfd
     * If <dodf>indludfSpbding</dodf> is truf tifn tif vbluf rfturnfd
     * If <dodf>indludfSpbding</dodf> is truf tifn tif vbluf rfturnfd
     * ibs tif full ifigit bnd widti of tif row bnd dolumn
     * ibs tif full ifigit bnd widti of tif row bnd dolumn
     * ibs tif full ifigit bnd widti of tif row bnd dolumn
     * ibs tif full ifigit bnd widti of tif row bnd dolumn
     * ibs tif full ifigit bnd widti of tif row bnd dolumn
     * spfdififd. If it is fblsf, tif rfturnfd rfdtbnglf is insft by tif
     * spfdififd. If it is fblsf, tif rfturnfd rfdtbnglf is insft by tif
     * spfdififd. If it is fblsf, tif rfturnfd rfdtbnglf is insft by tif
     * spfdififd. If it is fblsf, tif rfturnfd rfdtbnglf is insft by tif
     * spfdififd. If it is fblsf, tif rfturnfd rfdtbnglf is insft by tif
     * intfrdfll spbding to rfturn tif truf bounds of tif rfndfring or
     * intfrdfll spbding to rfturn tif truf bounds of tif rfndfring or
     * intfrdfll spbding to rfturn tif truf bounds of tif rfndfring or
     * intfrdfll spbding to rfturn tif truf bounds of tif rfndfring or
     * intfrdfll spbding to rfturn tif truf bounds of tif rfndfring or
     * fditing domponfnt bs it will bf sft during rfndfring.
     * fditing domponfnt bs it will bf sft during rfndfring.
     * fditing domponfnt bs it will bf sft during rfndfring.
     * fditing domponfnt bs it will bf sft during rfndfring.
     * fditing domponfnt bs it will bf sft during rfndfring.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif dolumn indfx is vblid but tif row indfx is lfss
     * If tif dolumn indfx is vblid but tif row indfx is lfss
     * If tif dolumn indfx is vblid but tif row indfx is lfss
     * If tif dolumn indfx is vblid but tif row indfx is lfss
     * If tif dolumn indfx is vblid but tif row indfx is lfss
     * tibn zfro tif mftiod rfturns b rfdtbnglf witi tif
     * tibn zfro tif mftiod rfturns b rfdtbnglf witi tif
     * tibn zfro tif mftiod rfturns b rfdtbnglf witi tif
     * tibn zfro tif mftiod rfturns b rfdtbnglf witi tif
     * tibn zfro tif mftiod rfturns b rfdtbnglf witi tif
     * <dodf>y</dodf> bnd <dodf>ifigit</dodf> vblufs sft bppropribtfly
     * <dodf>y</dodf> bnd <dodf>ifigit</dodf> vblufs sft bppropribtfly
     * <dodf>y</dodf> bnd <dodf>ifigit</dodf> vblufs sft bppropribtfly
     * <dodf>y</dodf> bnd <dodf>ifigit</dodf> vblufs sft bppropribtfly
     * <dodf>y</dodf> bnd <dodf>ifigit</dodf> vblufs sft bppropribtfly
     * bnd tif <dodf>x</dodf> bnd <dodf>widti</dodf> vblufs boti sft
     * bnd tif <dodf>x</dodf> bnd <dodf>widti</dodf> vblufs boti sft
     * bnd tif <dodf>x</dodf> bnd <dodf>widti</dodf> vblufs boti sft
     * bnd tif <dodf>x</dodf> bnd <dodf>widti</dodf> vblufs boti sft
     * bnd tif <dodf>x</dodf> bnd <dodf>widti</dodf> vblufs boti sft
     * to zfro. In gfnfrbl, wifn fitifr tif row or dolumn indidfs indidbtf b
     * to zfro. In gfnfrbl, wifn fitifr tif row or dolumn indidfs indidbtf b
     * to zfro. In gfnfrbl, wifn fitifr tif row or dolumn indidfs indidbtf b
     * to zfro. In gfnfrbl, wifn fitifr tif row or dolumn indidfs indidbtf b
     * to zfro. In gfnfrbl, wifn fitifr tif row or dolumn indidfs indidbtf b
     * dfll outsidf tif bppropribtf rbngf, tif mftiod rfturns b rfdtbnglf
     * dfll outsidf tif bppropribtf rbngf, tif mftiod rfturns b rfdtbnglf
     * dfll outsidf tif bppropribtf rbngf, tif mftiod rfturns b rfdtbnglf
     * dfll outsidf tif bppropribtf rbngf, tif mftiod rfturns b rfdtbnglf
     * dfll outsidf tif bppropribtf rbngf, tif mftiod rfturns b rfdtbnglf
     * dfpidting tif dlosfst fdgf of tif dlosfst dfll tibt is witiin
     * dfpidting tif dlosfst fdgf of tif dlosfst dfll tibt is witiin
     * dfpidting tif dlosfst fdgf of tif dlosfst dfll tibt is witiin
     * dfpidting tif dlosfst fdgf of tif dlosfst dfll tibt is witiin
     * dfpidting tif dlosfst fdgf of tif dlosfst dfll tibt is witiin
     * tif tbblf's rbngf. Wifn boti row bnd dolumn indidfs brf out
     * tif tbblf's rbngf. Wifn boti row bnd dolumn indidfs brf out
     * tif tbblf's rbngf. Wifn boti row bnd dolumn indidfs brf out
     * tif tbblf's rbngf. Wifn boti row bnd dolumn indidfs brf out
     * tif tbblf's rbngf. Wifn boti row bnd dolumn indidfs brf out
     * of rbngf tif rfturnfd rfdtbnglf dovfrs tif dlosfst
     * of rbngf tif rfturnfd rfdtbnglf dovfrs tif dlosfst
     * of rbngf tif rfturnfd rfdtbnglf dovfrs tif dlosfst
     * of rbngf tif rfturnfd rfdtbnglf dovfrs tif dlosfst
     * of rbngf tif rfturnfd rfdtbnglf dovfrs tif dlosfst
     * point of tif dlosfst dfll.
     * point of tif dlosfst dfll.
     * point of tif dlosfst dfll.
     * point of tif dlosfst dfll.
     * point of tif dlosfst dfll.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * In bll dbsfs, dbldulbtions tibt usf tiis mftiod to dbldulbtf
     * In bll dbsfs, dbldulbtions tibt usf tiis mftiod to dbldulbtf
     * In bll dbsfs, dbldulbtions tibt usf tiis mftiod to dbldulbtf
     * In bll dbsfs, dbldulbtions tibt usf tiis mftiod to dbldulbtf
     * In bll dbsfs, dbldulbtions tibt usf tiis mftiod to dbldulbtf
     * rfsults blong onf bxis will not fbil bfdbusf of bnomblifs in
     * rfsults blong onf bxis will not fbil bfdbusf of bnomblifs in
     * rfsults blong onf bxis will not fbil bfdbusf of bnomblifs in
     * rfsults blong onf bxis will not fbil bfdbusf of bnomblifs in
     * rfsults blong onf bxis will not fbil bfdbusf of bnomblifs in
     * dbldulbtions blong tif otifr bxis. Wifn tif dfll is not vblid
     * dbldulbtions blong tif otifr bxis. Wifn tif dfll is not vblid
     * dbldulbtions blong tif otifr bxis. Wifn tif dfll is not vblid
     * dbldulbtions blong tif otifr bxis. Wifn tif dfll is not vblid
     * dbldulbtions blong tif otifr bxis. Wifn tif dfll is not vblid
     * tif <dodf>indludfSpbding</dodf> pbrbmftfr is ignorfd.
     * tif <dodf>indludfSpbding</dodf> pbrbmftfr is ignorfd.
     * tif <dodf>indludfSpbding</dodf> pbrbmftfr is ignorfd.
     * tif <dodf>indludfSpbding</dodf> pbrbmftfr is ignorfd.
     * tif <dodf>indludfSpbding</dodf> pbrbmftfr is ignorfd.
     *
     *
     *
     *
     *
     * @pbrbm   row                   tif row indfx wifrf tif dfsirfd dfll
     * @pbrbm   row                   tif row indfx wifrf tif dfsirfd dfll
     * @pbrbm   row                   tif row indfx wifrf tif dfsirfd dfll
     * @pbrbm   row                   tif row indfx wifrf tif dfsirfd dfll
     * @pbrbm   row                   tif row indfx wifrf tif dfsirfd dfll
     *                                is lodbtfd
     *                                is lodbtfd
     *                                is lodbtfd
     *                                is lodbtfd
     *                                is lodbtfd
     * @pbrbm   dolumn                tif dolumn indfx wifrf tif dfsirfd dfll
     * @pbrbm   dolumn                tif dolumn indfx wifrf tif dfsirfd dfll
     * @pbrbm   dolumn                tif dolumn indfx wifrf tif dfsirfd dfll
     * @pbrbm   dolumn                tif dolumn indfx wifrf tif dfsirfd dfll
     * @pbrbm   dolumn                tif dolumn indfx wifrf tif dfsirfd dfll
     *                                is lodbtfd in tif displby; tiis is not
     *                                is lodbtfd in tif displby; tiis is not
     *                                is lodbtfd in tif displby; tiis is not
     *                                is lodbtfd in tif displby; tiis is not
     *                                is lodbtfd in tif displby; tiis is not
     *                                nfdfssbrily tif sbmf bs tif dolumn indfx
     *                                nfdfssbrily tif sbmf bs tif dolumn indfx
     *                                nfdfssbrily tif sbmf bs tif dolumn indfx
     *                                nfdfssbrily tif sbmf bs tif dolumn indfx
     *                                nfdfssbrily tif sbmf bs tif dolumn indfx
     *                                in tif dbtb modfl for tif tbblf; tif
     *                                in tif dbtb modfl for tif tbblf; tif
     *                                in tif dbtb modfl for tif tbblf; tif
     *                                in tif dbtb modfl for tif tbblf; tif
     *                                in tif dbtb modfl for tif tbblf; tif
     *                                {@link #donvfrtColumnIndfxToVifw(int)}
     *                                {@link #donvfrtColumnIndfxToVifw(int)}
     *                                {@link #donvfrtColumnIndfxToVifw(int)}
     *                                {@link #donvfrtColumnIndfxToVifw(int)}
     *                                {@link #donvfrtColumnIndfxToVifw(int)}
     *                                mftiod mby bf usfd to donvfrt b dbtb
     *                                mftiod mby bf usfd to donvfrt b dbtb
     *                                mftiod mby bf usfd to donvfrt b dbtb
     *                                mftiod mby bf usfd to donvfrt b dbtb
     *                                mftiod mby bf usfd to donvfrt b dbtb
     *                                modfl dolumn indfx to b displby
     *                                modfl dolumn indfx to b displby
     *                                modfl dolumn indfx to b displby
     *                                modfl dolumn indfx to b displby
     *                                modfl dolumn indfx to b displby
     *                                dolumn indfx
     *                                dolumn indfx
     *                                dolumn indfx
     *                                dolumn indfx
     *                                dolumn indfx
     * @pbrbm   indludfSpbding        if fblsf, rfturn tif truf dfll bounds -
     * @pbrbm   indludfSpbding        if fblsf, rfturn tif truf dfll bounds -
     * @pbrbm   indludfSpbding        if fblsf, rfturn tif truf dfll bounds -
     * @pbrbm   indludfSpbding        if fblsf, rfturn tif truf dfll bounds -
     * @pbrbm   indludfSpbding        if fblsf, rfturn tif truf dfll bounds -
     *                                domputfd by subtrbdting tif intfrdfll
     *                                domputfd by subtrbdting tif intfrdfll
     *                                domputfd by subtrbdting tif intfrdfll
     *                                domputfd by subtrbdting tif intfrdfll
     *                                domputfd by subtrbdting tif intfrdfll
     *                                spbding from tif ifigit bnd widtis of
     *                                spbding from tif ifigit bnd widtis of
     *                                spbding from tif ifigit bnd widtis of
     *                                spbding from tif ifigit bnd widtis of
     *                                spbding from tif ifigit bnd widtis of
     *                                tif dolumn bnd row modfls
     *                                tif dolumn bnd row modfls
     *                                tif dolumn bnd row modfls
     *                                tif dolumn bnd row modfls
     *                                tif dolumn bnd row modfls
     *
     *
     *
     *
     *
     * @rfturn  tif rfdtbnglf dontbining tif dfll bt lodbtion
     * @rfturn  tif rfdtbnglf dontbining tif dfll bt lodbtion
     * @rfturn  tif rfdtbnglf dontbining tif dfll bt lodbtion
     * @rfturn  tif rfdtbnglf dontbining tif dfll bt lodbtion
     * @rfturn  tif rfdtbnglf dontbining tif dfll bt lodbtion
     *          <dodf>row</dodf>,<dodf>dolumn</dodf>
     *          <dodf>row</dodf>,<dodf>dolumn</dodf>
     *          <dodf>row</dodf>,<dodf>dolumn</dodf>
     *          <dodf>row</dodf>,<dodf>dolumn</dodf>
     *          <dodf>row</dodf>,<dodf>dolumn</dodf>
     * @sff #gftIntfrdfllSpbding
     * @sff #gftIntfrdfllSpbding
     * @sff #gftIntfrdfllSpbding
     * @sff #gftIntfrdfllSpbding
     * @sff #gftIntfrdfllSpbding
     */
     */
     */
     */
     */
    publid Rfdtbnglf gftCfllRfdt(int row, int dolumn, boolfbn indludfSpbding) {
    publid Rfdtbnglf gftCfllRfdt(int row, int dolumn, boolfbn indludfSpbding) {
    publid Rfdtbnglf gftCfllRfdt(int row, int dolumn, boolfbn indludfSpbding) {
    publid Rfdtbnglf gftCfllRfdt(int row, int dolumn, boolfbn indludfSpbding) {
    publid Rfdtbnglf gftCfllRfdt(int row, int dolumn, boolfbn indludfSpbding) {
        Rfdtbnglf r = nfw Rfdtbnglf();
        Rfdtbnglf r = nfw Rfdtbnglf();
        Rfdtbnglf r = nfw Rfdtbnglf();
        Rfdtbnglf r = nfw Rfdtbnglf();
        Rfdtbnglf r = nfw Rfdtbnglf();
        boolfbn vblid = truf;
        boolfbn vblid = truf;
        boolfbn vblid = truf;
        boolfbn vblid = truf;
        boolfbn vblid = truf;
        if (row < 0) {
        if (row < 0) {
        if (row < 0) {
        if (row < 0) {
        if (row < 0) {
            // y = ifigit = 0;
            // y = ifigit = 0;
            // y = ifigit = 0;
            // y = ifigit = 0;
            // y = ifigit = 0;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
        }
        }
        }
        }
        }
        flsf if (row >= gftRowCount()) {
        flsf if (row >= gftRowCount()) {
        flsf if (row >= gftRowCount()) {
        flsf if (row >= gftRowCount()) {
        flsf if (row >= gftRowCount()) {
            r.y = gftHfigit();
            r.y = gftHfigit();
            r.y = gftHfigit();
            r.y = gftHfigit();
            r.y = gftHfigit();
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            r.ifigit = gftRowHfigit(row);
            r.ifigit = gftRowHfigit(row);
            r.ifigit = gftRowHfigit(row);
            r.ifigit = gftRowHfigit(row);
            r.ifigit = gftRowHfigit(row);
            r.y = (rowModfl == null) ? row * r.ifigit : rowModfl.gftPosition(row);
            r.y = (rowModfl == null) ? row * r.ifigit : rowModfl.gftPosition(row);
            r.y = (rowModfl == null) ? row * r.ifigit : rowModfl.gftPosition(row);
            r.y = (rowModfl == null) ? row * r.ifigit : rowModfl.gftPosition(row);
            r.y = (rowModfl == null) ? row * r.ifigit : rowModfl.gftPosition(row);
        }
        }
        }
        }
        }





        if (dolumn < 0) {
        if (dolumn < 0) {
        if (dolumn < 0) {
        if (dolumn < 0) {
        if (dolumn < 0) {
            if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( !gftComponfntOrifntbtion().isLfftToRigit() ) {
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
            }
            }
            }
            }
            }
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
        }
        }
        }
        }
        }
        flsf if (dolumn >= gftColumnCount()) {
        flsf if (dolumn >= gftColumnCount()) {
        flsf if (dolumn >= gftColumnCount()) {
        flsf if (dolumn >= gftColumnCount()) {
        flsf if (dolumn >= gftColumnCount()) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
                r.x = gftWidti();
            }
            }
            }
            }
            }
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            // otifrwisf, x = widti = 0;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
            vblid = fblsf;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            TbblfColumnModfl dm = gftColumnModfl();
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
            if( gftComponfntOrifntbtion().isLfftToRigit() ) {
                for(int i = 0; i < dolumn; i++) {
                for(int i = 0; i < dolumn; i++) {
                for(int i = 0; i < dolumn; i++) {
                for(int i = 0; i < dolumn; i++) {
                for(int i = 0; i < dolumn; i++) {
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                for(int i = dm.gftColumnCount()-1; i > dolumn; i--) {
                for(int i = dm.gftColumnCount()-1; i > dolumn; i--) {
                for(int i = dm.gftColumnCount()-1; i > dolumn; i--) {
                for(int i = dm.gftColumnCount()-1; i > dolumn; i--) {
                for(int i = dm.gftColumnCount()-1; i > dolumn; i--) {
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                    r.x += dm.gftColumn(i).gftWidti();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            r.widti = dm.gftColumn(dolumn).gftWidti();
            r.widti = dm.gftColumn(dolumn).gftWidti();
            r.widti = dm.gftColumn(dolumn).gftWidti();
            r.widti = dm.gftColumn(dolumn).gftWidti();
            r.widti = dm.gftColumn(dolumn).gftWidti();
        }
        }
        }
        }
        }





        if (vblid && !indludfSpbding) {
        if (vblid && !indludfSpbding) {
        if (vblid && !indludfSpbding) {
        if (vblid && !indludfSpbding) {
        if (vblid && !indludfSpbding) {
            // Bound tif mbrgins by tifir bssodibtfd dimfnsions to prfvfnt
            // Bound tif mbrgins by tifir bssodibtfd dimfnsions to prfvfnt
            // Bound tif mbrgins by tifir bssodibtfd dimfnsions to prfvfnt
            // Bound tif mbrgins by tifir bssodibtfd dimfnsions to prfvfnt
            // Bound tif mbrgins by tifir bssodibtfd dimfnsions to prfvfnt
            // rfturning bounds witi nfgbtivf dimfnsions.
            // rfturning bounds witi nfgbtivf dimfnsions.
            // rfturning bounds witi nfgbtivf dimfnsions.
            // rfturning bounds witi nfgbtivf dimfnsions.
            // rfturning bounds witi nfgbtivf dimfnsions.
            int rm = Mbti.min(gftRowMbrgin(), r.ifigit);
            int rm = Mbti.min(gftRowMbrgin(), r.ifigit);
            int rm = Mbti.min(gftRowMbrgin(), r.ifigit);
            int rm = Mbti.min(gftRowMbrgin(), r.ifigit);
            int rm = Mbti.min(gftRowMbrgin(), r.ifigit);
            int dm = Mbti.min(gftColumnModfl().gftColumnMbrgin(), r.widti);
            int dm = Mbti.min(gftColumnModfl().gftColumnMbrgin(), r.widti);
            int dm = Mbti.min(gftColumnModfl().gftColumnMbrgin(), r.widti);
            int dm = Mbti.min(gftColumnModfl().gftColumnMbrgin(), r.widti);
            int dm = Mbti.min(gftColumnModfl().gftColumnMbrgin(), r.widti);
            // Tiis is not tif sbmf bs grow(), it rounds difffrfntly.
            // Tiis is not tif sbmf bs grow(), it rounds difffrfntly.
            // Tiis is not tif sbmf bs grow(), it rounds difffrfntly.
            // Tiis is not tif sbmf bs grow(), it rounds difffrfntly.
            // Tiis is not tif sbmf bs grow(), it rounds difffrfntly.
            r.sftBounds(r.x + dm/2, r.y + rm/2, r.widti - dm, r.ifigit - rm);
            r.sftBounds(r.x + dm/2, r.y + rm/2, r.widti - dm, r.ifigit - rm);
            r.sftBounds(r.x + dm/2, r.y + rm/2, r.widti - dm, r.ifigit - rm);
            r.sftBounds(r.x + dm/2, r.y + rm/2, r.widti - dm, r.ifigit - rm);
            r.sftBounds(r.x + dm/2, r.y + rm/2, r.widti - dm, r.ifigit - rm);
        }
        }
        }
        }
        }
        rfturn r;
        rfturn r;
        rfturn r;
        rfturn r;
        rfturn r;
    }
    }
    }
    }
    }





    privbtf int vifwIndfxForColumn(TbblfColumn bColumn) {
    privbtf int vifwIndfxForColumn(TbblfColumn bColumn) {
    privbtf int vifwIndfxForColumn(TbblfColumn bColumn) {
    privbtf int vifwIndfxForColumn(TbblfColumn bColumn) {
    privbtf int vifwIndfxForColumn(TbblfColumn bColumn) {
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        for (int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for (int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for (int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for (int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for (int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
            if (dm.gftColumn(dolumn) == bColumn) {
            if (dm.gftColumn(dolumn) == bColumn) {
            if (dm.gftColumn(dolumn) == bColumn) {
            if (dm.gftColumn(dolumn) == bColumn) {
            if (dm.gftColumn(dolumn) == bColumn) {
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbusfs tiis tbblf to lby out its rows bnd dolumns.  Ovfrriddfn so
     * Cbusfs tiis tbblf to lby out its rows bnd dolumns.  Ovfrriddfn so
     * Cbusfs tiis tbblf to lby out its rows bnd dolumns.  Ovfrriddfn so
     * Cbusfs tiis tbblf to lby out its rows bnd dolumns.  Ovfrriddfn so
     * Cbusfs tiis tbblf to lby out its rows bnd dolumns.  Ovfrriddfn so
     * tibt dolumns dbn bf rfsizfd to bddommodbtf b dibngf in tif sizf of
     * tibt dolumns dbn bf rfsizfd to bddommodbtf b dibngf in tif sizf of
     * tibt dolumns dbn bf rfsizfd to bddommodbtf b dibngf in tif sizf of
     * tibt dolumns dbn bf rfsizfd to bddommodbtf b dibngf in tif sizf of
     * tibt dolumns dbn bf rfsizfd to bddommodbtf b dibngf in tif sizf of
     * b dontbining pbrfnt.
     * b dontbining pbrfnt.
     * b dontbining pbrfnt.
     * b dontbining pbrfnt.
     * b dontbining pbrfnt.
     * Rfsizfs onf or morf of tif dolumns in tif tbblf
     * Rfsizfs onf or morf of tif dolumns in tif tbblf
     * Rfsizfs onf or morf of tif dolumns in tif tbblf
     * Rfsizfs onf or morf of tif dolumns in tif tbblf
     * Rfsizfs onf or morf of tif dolumns in tif tbblf
     * so tibt tif totbl widti of bll of tiis <dodf>JTbblf</dodf>'s
     * so tibt tif totbl widti of bll of tiis <dodf>JTbblf</dodf>'s
     * so tibt tif totbl widti of bll of tiis <dodf>JTbblf</dodf>'s
     * so tibt tif totbl widti of bll of tiis <dodf>JTbblf</dodf>'s
     * so tibt tif totbl widti of bll of tiis <dodf>JTbblf</dodf>'s
     * dolumns is fqubl to tif widti of tif tbblf.
     * dolumns is fqubl to tif widti of tif tbblf.
     * dolumns is fqubl to tif widti of tif tbblf.
     * dolumns is fqubl to tif widti of tif tbblf.
     * dolumns is fqubl to tif widti of tif tbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Bfforf tif lbyout bfgins tif mftiod gfts tif
     * Bfforf tif lbyout bfgins tif mftiod gfts tif
     * Bfforf tif lbyout bfgins tif mftiod gfts tif
     * Bfforf tif lbyout bfgins tif mftiod gfts tif
     * Bfforf tif lbyout bfgins tif mftiod gfts tif
     * <dodf>rfsizingColumn</dodf> of tif <dodf>tbblfHfbdfr</dodf>.
     * <dodf>rfsizingColumn</dodf> of tif <dodf>tbblfHfbdfr</dodf>.
     * <dodf>rfsizingColumn</dodf> of tif <dodf>tbblfHfbdfr</dodf>.
     * <dodf>rfsizingColumn</dodf> of tif <dodf>tbblfHfbdfr</dodf>.
     * <dodf>rfsizingColumn</dodf> of tif <dodf>tbblfHfbdfr</dodf>.
     * Wifn tif mftiod is dbllfd bs b rfsult of tif rfsizing of bn fndlosing window,
     * Wifn tif mftiod is dbllfd bs b rfsult of tif rfsizing of bn fndlosing window,
     * Wifn tif mftiod is dbllfd bs b rfsult of tif rfsizing of bn fndlosing window,
     * Wifn tif mftiod is dbllfd bs b rfsult of tif rfsizing of bn fndlosing window,
     * Wifn tif mftiod is dbllfd bs b rfsult of tif rfsizing of bn fndlosing window,
     * tif <dodf>rfsizingColumn</dodf> is <dodf>null</dodf>. Tiis mfbns tibt rfsizing
     * tif <dodf>rfsizingColumn</dodf> is <dodf>null</dodf>. Tiis mfbns tibt rfsizing
     * tif <dodf>rfsizingColumn</dodf> is <dodf>null</dodf>. Tiis mfbns tibt rfsizing
     * tif <dodf>rfsizingColumn</dodf> is <dodf>null</dodf>. Tiis mfbns tibt rfsizing
     * tif <dodf>rfsizingColumn</dodf> is <dodf>null</dodf>. Tiis mfbns tibt rfsizing
     * ibs tbkfn plbdf "outsidf" tif <dodf>JTbblf</dodf> bnd tif dibngf -
     * ibs tbkfn plbdf "outsidf" tif <dodf>JTbblf</dodf> bnd tif dibngf -
     * ibs tbkfn plbdf "outsidf" tif <dodf>JTbblf</dodf> bnd tif dibngf -
     * ibs tbkfn plbdf "outsidf" tif <dodf>JTbblf</dodf> bnd tif dibngf -
     * ibs tbkfn plbdf "outsidf" tif <dodf>JTbblf</dodf> bnd tif dibngf -
     * or "dfltb" - siould bf distributfd to bll of tif dolumns rfgbrdlfss
     * or "dfltb" - siould bf distributfd to bll of tif dolumns rfgbrdlfss
     * or "dfltb" - siould bf distributfd to bll of tif dolumns rfgbrdlfss
     * or "dfltb" - siould bf distributfd to bll of tif dolumns rfgbrdlfss
     * or "dfltb" - siould bf distributfd to bll of tif dolumns rfgbrdlfss
     * of tiis <dodf>JTbblf</dodf>'s butombtid rfsizf modf.
     * of tiis <dodf>JTbblf</dodf>'s butombtid rfsizf modf.
     * of tiis <dodf>JTbblf</dodf>'s butombtid rfsizf modf.
     * of tiis <dodf>JTbblf</dodf>'s butombtid rfsizf modf.
     * of tiis <dodf>JTbblf</dodf>'s butombtid rfsizf modf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif <dodf>rfsizingColumn</dodf> is not <dodf>null</dodf>, it is onf of
     * If tif <dodf>rfsizingColumn</dodf> is not <dodf>null</dodf>, it is onf of
     * If tif <dodf>rfsizingColumn</dodf> is not <dodf>null</dodf>, it is onf of
     * If tif <dodf>rfsizingColumn</dodf> is not <dodf>null</dodf>, it is onf of
     * If tif <dodf>rfsizingColumn</dodf> is not <dodf>null</dodf>, it is onf of
     * tif dolumns in tif tbblf tibt ibs dibngfd sizf rbtifr tibn
     * tif dolumns in tif tbblf tibt ibs dibngfd sizf rbtifr tibn
     * tif dolumns in tif tbblf tibt ibs dibngfd sizf rbtifr tibn
     * tif dolumns in tif tbblf tibt ibs dibngfd sizf rbtifr tibn
     * tif dolumns in tif tbblf tibt ibs dibngfd sizf rbtifr tibn
     * tif tbblf itsflf. In tiis dbsf tif buto-rfsizf modfs govfrn
     * tif tbblf itsflf. In tiis dbsf tif buto-rfsizf modfs govfrn
     * tif tbblf itsflf. In tiis dbsf tif buto-rfsizf modfs govfrn
     * tif tbblf itsflf. In tiis dbsf tif buto-rfsizf modfs govfrn
     * tif tbblf itsflf. In tiis dbsf tif buto-rfsizf modfs govfrn
     * tif wby tif fxtrb (or dffidit) spbdf is distributfd
     * tif wby tif fxtrb (or dffidit) spbdf is distributfd
     * tif wby tif fxtrb (or dffidit) spbdf is distributfd
     * tif wby tif fxtrb (or dffidit) spbdf is distributfd
     * tif wby tif fxtrb (or dffidit) spbdf is distributfd
     * bmongst tif bvbilbblf dolumns.
     * bmongst tif bvbilbblf dolumns.
     * bmongst tif bvbilbblf dolumns.
     * bmongst tif bvbilbblf dolumns.
     * bmongst tif bvbilbblf dolumns.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif modfs brf:
     * Tif modfs brf:
     * Tif modfs brf:
     * Tif modfs brf:
     * Tif modfs brf:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <li>  AUTO_RESIZE_OFF: Don't butombtidblly bdjust tif dolumn's
     * <li>  AUTO_RESIZE_OFF: Don't butombtidblly bdjust tif dolumn's
     * <li>  AUTO_RESIZE_OFF: Don't butombtidblly bdjust tif dolumn's
     * <li>  AUTO_RESIZE_OFF: Don't butombtidblly bdjust tif dolumn's
     * <li>  AUTO_RESIZE_OFF: Don't butombtidblly bdjust tif dolumn's
     * widtis bt bll. Usf b iorizontbl sdrollbbr to bddommodbtf tif
     * widtis bt bll. Usf b iorizontbl sdrollbbr to bddommodbtf tif
     * widtis bt bll. Usf b iorizontbl sdrollbbr to bddommodbtf tif
     * widtis bt bll. Usf b iorizontbl sdrollbbr to bddommodbtf tif
     * widtis bt bll. Usf b iorizontbl sdrollbbr to bddommodbtf tif
     * dolumns wifn tifir sum fxdffds tif widti of tif
     * dolumns wifn tifir sum fxdffds tif widti of tif
     * dolumns wifn tifir sum fxdffds tif widti of tif
     * dolumns wifn tifir sum fxdffds tif widti of tif
     * dolumns wifn tifir sum fxdffds tif widti of tif
     * <dodf>Vifwport</dodf>.  If tif <dodf>JTbblf</dodf> is not
     * <dodf>Vifwport</dodf>.  If tif <dodf>JTbblf</dodf> is not
     * <dodf>Vifwport</dodf>.  If tif <dodf>JTbblf</dodf> is not
     * <dodf>Vifwport</dodf>.  If tif <dodf>JTbblf</dodf> is not
     * <dodf>Vifwport</dodf>.  If tif <dodf>JTbblf</dodf> is not
     * fndlosfd in b <dodf>JSdrollPbnf</dodf> tiis mby
     * fndlosfd in b <dodf>JSdrollPbnf</dodf> tiis mby
     * fndlosfd in b <dodf>JSdrollPbnf</dodf> tiis mby
     * fndlosfd in b <dodf>JSdrollPbnf</dodf> tiis mby
     * fndlosfd in b <dodf>JSdrollPbnf</dodf> tiis mby
     * lfbvf pbrts of tif tbblf invisiblf.
     * lfbvf pbrts of tif tbblf invisiblf.
     * lfbvf pbrts of tif tbblf invisiblf.
     * lfbvf pbrts of tif tbblf invisiblf.
     * lfbvf pbrts of tif tbblf invisiblf.
     * <li>  AUTO_RESIZE_NEXT_COLUMN: Usf just tif dolumn bftfr tif
     * <li>  AUTO_RESIZE_NEXT_COLUMN: Usf just tif dolumn bftfr tif
     * <li>  AUTO_RESIZE_NEXT_COLUMN: Usf just tif dolumn bftfr tif
     * <li>  AUTO_RESIZE_NEXT_COLUMN: Usf just tif dolumn bftfr tif
     * <li>  AUTO_RESIZE_NEXT_COLUMN: Usf just tif dolumn bftfr tif
     * rfsizing dolumn. Tiis rfsults in tif "boundbry" or dividfr
     * rfsizing dolumn. Tiis rfsults in tif "boundbry" or dividfr
     * rfsizing dolumn. Tiis rfsults in tif "boundbry" or dividfr
     * rfsizing dolumn. Tiis rfsults in tif "boundbry" or dividfr
     * rfsizing dolumn. Tiis rfsults in tif "boundbry" or dividfr
     * bftwffn bdjbdfnt dflls bfing indfpfndfntly bdjustbblf.
     * bftwffn bdjbdfnt dflls bfing indfpfndfntly bdjustbblf.
     * bftwffn bdjbdfnt dflls bfing indfpfndfntly bdjustbblf.
     * bftwffn bdjbdfnt dflls bfing indfpfndfntly bdjustbblf.
     * bftwffn bdjbdfnt dflls bfing indfpfndfntly bdjustbblf.
     * <li>  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Usf bll dolumns bftfr tif
     * <li>  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Usf bll dolumns bftfr tif
     * <li>  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Usf bll dolumns bftfr tif
     * <li>  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Usf bll dolumns bftfr tif
     * <li>  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Usf bll dolumns bftfr tif
     * onf bfing bdjustfd to bbsorb tif dibngfs.  Tiis is tif
     * onf bfing bdjustfd to bbsorb tif dibngfs.  Tiis is tif
     * onf bfing bdjustfd to bbsorb tif dibngfs.  Tiis is tif
     * onf bfing bdjustfd to bbsorb tif dibngfs.  Tiis is tif
     * onf bfing bdjustfd to bbsorb tif dibngfs.  Tiis is tif
     * dffbult bfibvior.
     * dffbult bfibvior.
     * dffbult bfibvior.
     * dffbult bfibvior.
     * dffbult bfibvior.
     * <li>  AUTO_RESIZE_LAST_COLUMN: Autombtidblly bdjust tif
     * <li>  AUTO_RESIZE_LAST_COLUMN: Autombtidblly bdjust tif
     * <li>  AUTO_RESIZE_LAST_COLUMN: Autombtidblly bdjust tif
     * <li>  AUTO_RESIZE_LAST_COLUMN: Autombtidblly bdjust tif
     * <li>  AUTO_RESIZE_LAST_COLUMN: Autombtidblly bdjust tif
     * sizf of tif lbst dolumn only. If tif bounds of tif lbst dolumn
     * sizf of tif lbst dolumn only. If tif bounds of tif lbst dolumn
     * sizf of tif lbst dolumn only. If tif bounds of tif lbst dolumn
     * sizf of tif lbst dolumn only. If tif bounds of tif lbst dolumn
     * sizf of tif lbst dolumn only. If tif bounds of tif lbst dolumn
     * prfvfnt tif dfsirfd sizf from bfing bllodbtfd, sft tif
     * prfvfnt tif dfsirfd sizf from bfing bllodbtfd, sft tif
     * prfvfnt tif dfsirfd sizf from bfing bllodbtfd, sft tif
     * prfvfnt tif dfsirfd sizf from bfing bllodbtfd, sft tif
     * prfvfnt tif dfsirfd sizf from bfing bllodbtfd, sft tif
     * widti of tif lbst dolumn to tif bppropribtf limit bnd mbkf
     * widti of tif lbst dolumn to tif bppropribtf limit bnd mbkf
     * widti of tif lbst dolumn to tif bppropribtf limit bnd mbkf
     * widti of tif lbst dolumn to tif bppropribtf limit bnd mbkf
     * widti of tif lbst dolumn to tif bppropribtf limit bnd mbkf
     * no furtifr bdjustmfnts.
     * no furtifr bdjustmfnts.
     * no furtifr bdjustmfnts.
     * no furtifr bdjustmfnts.
     * no furtifr bdjustmfnts.
     * <li>  AUTO_RESIZE_ALL_COLUMNS: Sprfbd tif dfltb bmongst bll tif dolumns
     * <li>  AUTO_RESIZE_ALL_COLUMNS: Sprfbd tif dfltb bmongst bll tif dolumns
     * <li>  AUTO_RESIZE_ALL_COLUMNS: Sprfbd tif dfltb bmongst bll tif dolumns
     * <li>  AUTO_RESIZE_ALL_COLUMNS: Sprfbd tif dfltb bmongst bll tif dolumns
     * <li>  AUTO_RESIZE_ALL_COLUMNS: Sprfbd tif dfltb bmongst bll tif dolumns
     * in tif <dodf>JTbblf</dodf>, indluding tif onf tibt is bfing
     * in tif <dodf>JTbblf</dodf>, indluding tif onf tibt is bfing
     * in tif <dodf>JTbblf</dodf>, indluding tif onf tibt is bfing
     * in tif <dodf>JTbblf</dodf>, indluding tif onf tibt is bfing
     * in tif <dodf>JTbblf</dodf>, indluding tif onf tibt is bfing
     * bdjustfd.
     * bdjustfd.
     * bdjustfd.
     * bdjustfd.
     * bdjustfd.
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b> Wifn b <dodf>JTbblf</dodf> mbkfs bdjustmfnts
     * <b>Notf:</b> Wifn b <dodf>JTbblf</dodf> mbkfs bdjustmfnts
     * <b>Notf:</b> Wifn b <dodf>JTbblf</dodf> mbkfs bdjustmfnts
     * <b>Notf:</b> Wifn b <dodf>JTbblf</dodf> mbkfs bdjustmfnts
     * <b>Notf:</b> Wifn b <dodf>JTbblf</dodf> mbkfs bdjustmfnts
     *   to tif widtis of tif dolumns it rfspfdts tifir minimum bnd
     *   to tif widtis of tif dolumns it rfspfdts tifir minimum bnd
     *   to tif widtis of tif dolumns it rfspfdts tifir minimum bnd
     *   to tif widtis of tif dolumns it rfspfdts tifir minimum bnd
     *   to tif widtis of tif dolumns it rfspfdts tifir minimum bnd
     *   mbximum vblufs bbsolutfly.  It is tifrfforf possiblf tibt,
     *   mbximum vblufs bbsolutfly.  It is tifrfforf possiblf tibt,
     *   mbximum vblufs bbsolutfly.  It is tifrfforf possiblf tibt,
     *   mbximum vblufs bbsolutfly.  It is tifrfforf possiblf tibt,
     *   mbximum vblufs bbsolutfly.  It is tifrfforf possiblf tibt,
     *   fvfn bftfr tiis mftiod is dbllfd, tif totbl widti of tif dolumns
     *   fvfn bftfr tiis mftiod is dbllfd, tif totbl widti of tif dolumns
     *   fvfn bftfr tiis mftiod is dbllfd, tif totbl widti of tif dolumns
     *   fvfn bftfr tiis mftiod is dbllfd, tif totbl widti of tif dolumns
     *   fvfn bftfr tiis mftiod is dbllfd, tif totbl widti of tif dolumns
     *   is still not fqubl to tif widti of tif tbblf. Wifn tiis ibppfns
     *   is still not fqubl to tif widti of tif tbblf. Wifn tiis ibppfns
     *   is still not fqubl to tif widti of tif tbblf. Wifn tiis ibppfns
     *   is still not fqubl to tif widti of tif tbblf. Wifn tiis ibppfns
     *   is still not fqubl to tif widti of tif tbblf. Wifn tiis ibppfns
     *   tif <dodf>JTbblf</dodf> dofs not put itsflf
     *   tif <dodf>JTbblf</dodf> dofs not put itsflf
     *   tif <dodf>JTbblf</dodf> dofs not put itsflf
     *   tif <dodf>JTbblf</dodf> dofs not put itsflf
     *   tif <dodf>JTbblf</dodf> dofs not put itsflf
     *   in AUTO_RESIZE_OFF modf to bring up b sdroll bbr, or brfbk otifr
     *   in AUTO_RESIZE_OFF modf to bring up b sdroll bbr, or brfbk otifr
     *   in AUTO_RESIZE_OFF modf to bring up b sdroll bbr, or brfbk otifr
     *   in AUTO_RESIZE_OFF modf to bring up b sdroll bbr, or brfbk otifr
     *   in AUTO_RESIZE_OFF modf to bring up b sdroll bbr, or brfbk otifr
     *   dommitmfnts of its durrfnt buto-rfsizf modf -- instfbd it
     *   dommitmfnts of its durrfnt buto-rfsizf modf -- instfbd it
     *   dommitmfnts of its durrfnt buto-rfsizf modf -- instfbd it
     *   dommitmfnts of its durrfnt buto-rfsizf modf -- instfbd it
     *   dommitmfnts of its durrfnt buto-rfsizf modf -- instfbd it
     *   bllows its bounds to bf sft lbrgfr (or smbllfr) tibn tif totbl of tif
     *   bllows its bounds to bf sft lbrgfr (or smbllfr) tibn tif totbl of tif
     *   bllows its bounds to bf sft lbrgfr (or smbllfr) tibn tif totbl of tif
     *   bllows its bounds to bf sft lbrgfr (or smbllfr) tibn tif totbl of tif
     *   bllows its bounds to bf sft lbrgfr (or smbllfr) tibn tif totbl of tif
     *   dolumn minimum or mbximum, mfbning, fitifr tibt tifrf
     *   dolumn minimum or mbximum, mfbning, fitifr tibt tifrf
     *   dolumn minimum or mbximum, mfbning, fitifr tibt tifrf
     *   dolumn minimum or mbximum, mfbning, fitifr tibt tifrf
     *   dolumn minimum or mbximum, mfbning, fitifr tibt tifrf
     *   will not bf fnougi room to displby bll of tif dolumns, or tibt tif
     *   will not bf fnougi room to displby bll of tif dolumns, or tibt tif
     *   will not bf fnougi room to displby bll of tif dolumns, or tibt tif
     *   will not bf fnougi room to displby bll of tif dolumns, or tibt tif
     *   will not bf fnougi room to displby bll of tif dolumns, or tibt tif
     *   dolumns will not fill tif <dodf>JTbblf</dodf>'s bounds.
     *   dolumns will not fill tif <dodf>JTbblf</dodf>'s bounds.
     *   dolumns will not fill tif <dodf>JTbblf</dodf>'s bounds.
     *   dolumns will not fill tif <dodf>JTbblf</dodf>'s bounds.
     *   dolumns will not fill tif <dodf>JTbblf</dodf>'s bounds.
     *   Tifsf rfspfdtivfly, rfsult in tif dlipping of somf dolumns
     *   Tifsf rfspfdtivfly, rfsult in tif dlipping of somf dolumns
     *   Tifsf rfspfdtivfly, rfsult in tif dlipping of somf dolumns
     *   Tifsf rfspfdtivfly, rfsult in tif dlipping of somf dolumns
     *   Tifsf rfspfdtivfly, rfsult in tif dlipping of somf dolumns
     *   or bn brfb bfing pbintfd in tif <dodf>JTbblf</dodf>'s
     *   or bn brfb bfing pbintfd in tif <dodf>JTbblf</dodf>'s
     *   or bn brfb bfing pbintfd in tif <dodf>JTbblf</dodf>'s
     *   or bn brfb bfing pbintfd in tif <dodf>JTbblf</dodf>'s
     *   or bn brfb bfing pbintfd in tif <dodf>JTbblf</dodf>'s
     *   bbdkground dolor during pbinting.
     *   bbdkground dolor during pbinting.
     *   bbdkground dolor during pbinting.
     *   bbdkground dolor during pbinting.
     *   bbdkground dolor during pbinting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     *   Tif mfdibnism for distributing tif dfltb bmongst tif bvbilbblf
     *   Tif mfdibnism for distributing tif dfltb bmongst tif bvbilbblf
     *   Tif mfdibnism for distributing tif dfltb bmongst tif bvbilbblf
     *   Tif mfdibnism for distributing tif dfltb bmongst tif bvbilbblf
     *   Tif mfdibnism for distributing tif dfltb bmongst tif bvbilbblf
     *   dolumns is providfd in b privbtf mftiod in tif <dodf>JTbblf</dodf>
     *   dolumns is providfd in b privbtf mftiod in tif <dodf>JTbblf</dodf>
     *   dolumns is providfd in b privbtf mftiod in tif <dodf>JTbblf</dodf>
     *   dolumns is providfd in b privbtf mftiod in tif <dodf>JTbblf</dodf>
     *   dolumns is providfd in b privbtf mftiod in tif <dodf>JTbblf</dodf>
     *   dlbss:
     *   dlbss:
     *   dlbss:
     *   dlbss:
     *   dlbss:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *   bdjustSizfs(long tbrgftSizf, finbl Rfsizbblf3 r, boolfbn invfrsf)
     *   bdjustSizfs(long tbrgftSizf, finbl Rfsizbblf3 r, boolfbn invfrsf)
     *   bdjustSizfs(long tbrgftSizf, finbl Rfsizbblf3 r, boolfbn invfrsf)
     *   bdjustSizfs(long tbrgftSizf, finbl Rfsizbblf3 r, boolfbn invfrsf)
     *   bdjustSizfs(long tbrgftSizf, finbl Rfsizbblf3 r, boolfbn invfrsf)
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     *   bn fxplbnbtion of wiidi is providfd in tif following sfdtion.
     *   bn fxplbnbtion of wiidi is providfd in tif following sfdtion.
     *   bn fxplbnbtion of wiidi is providfd in tif following sfdtion.
     *   bn fxplbnbtion of wiidi is providfd in tif following sfdtion.
     *   bn fxplbnbtion of wiidi is providfd in tif following sfdtion.
     *   <dodf>Rfsizbblf3</dodf> is b privbtf
     *   <dodf>Rfsizbblf3</dodf> is b privbtf
     *   <dodf>Rfsizbblf3</dodf> is b privbtf
     *   <dodf>Rfsizbblf3</dodf> is b privbtf
     *   <dodf>Rfsizbblf3</dodf> is b privbtf
     *   intfrfbdf tibt bllows bny dbtb strudturf dontbining b dollfdtion
     *   intfrfbdf tibt bllows bny dbtb strudturf dontbining b dollfdtion
     *   intfrfbdf tibt bllows bny dbtb strudturf dontbining b dollfdtion
     *   intfrfbdf tibt bllows bny dbtb strudturf dontbining b dollfdtion
     *   intfrfbdf tibt bllows bny dbtb strudturf dontbining b dollfdtion
     *   of flfmfnts witi b sizf, prfffrrfd sizf, mbximum sizf bnd minimum sizf
     *   of flfmfnts witi b sizf, prfffrrfd sizf, mbximum sizf bnd minimum sizf
     *   of flfmfnts witi b sizf, prfffrrfd sizf, mbximum sizf bnd minimum sizf
     *   of flfmfnts witi b sizf, prfffrrfd sizf, mbximum sizf bnd minimum sizf
     *   of flfmfnts witi b sizf, prfffrrfd sizf, mbximum sizf bnd minimum sizf
     *   to ibvf its flfmfnts mbnipulbtfd by tif blgoritim.
     *   to ibvf its flfmfnts mbnipulbtfd by tif blgoritim.
     *   to ibvf its flfmfnts mbnipulbtfd by tif blgoritim.
     *   to ibvf its flfmfnts mbnipulbtfd by tif blgoritim.
     *   to ibvf its flfmfnts mbnipulbtfd by tif blgoritim.
     *
     *
     *
     *
     *
     * <H3> Distributing tif dfltb </H3>
     * <H3> Distributing tif dfltb </H3>
     * <H3> Distributing tif dfltb </H3>
     * <H3> Distributing tif dfltb </H3>
     * <H3> Distributing tif dfltb </H3>
     *
     *
     *
     *
     *
     * <H4> Ovfrvifw </H4>
     * <H4> Ovfrvifw </H4>
     * <H4> Ovfrvifw </H4>
     * <H4> Ovfrvifw </H4>
     * <H4> Ovfrvifw </H4>
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * Cbll "DELTA" tif difffrfndf bftwffn tif tbrgft sizf bnd tif
     * Cbll "DELTA" tif difffrfndf bftwffn tif tbrgft sizf bnd tif
     * Cbll "DELTA" tif difffrfndf bftwffn tif tbrgft sizf bnd tif
     * Cbll "DELTA" tif difffrfndf bftwffn tif tbrgft sizf bnd tif
     * Cbll "DELTA" tif difffrfndf bftwffn tif tbrgft sizf bnd tif
     * sum of tif prfffrrfd sizfs of tif flfmfnts in r. Tif individubl
     * sum of tif prfffrrfd sizfs of tif flfmfnts in r. Tif individubl
     * sum of tif prfffrrfd sizfs of tif flfmfnts in r. Tif individubl
     * sum of tif prfffrrfd sizfs of tif flfmfnts in r. Tif individubl
     * sum of tif prfffrrfd sizfs of tif flfmfnts in r. Tif individubl
     * sizfs brf dbldulbtfd by tbking tif originbl prfffrrfd
     * sizfs brf dbldulbtfd by tbking tif originbl prfffrrfd
     * sizfs brf dbldulbtfd by tbking tif originbl prfffrrfd
     * sizfs brf dbldulbtfd by tbking tif originbl prfffrrfd
     * sizfs brf dbldulbtfd by tbking tif originbl prfffrrfd
     * sizfs bnd bdding b sibrf of tif DELTA - tibt sibrf bfing bbsfd on
     * sizfs bnd bdding b sibrf of tif DELTA - tibt sibrf bfing bbsfd on
     * sizfs bnd bdding b sibrf of tif DELTA - tibt sibrf bfing bbsfd on
     * sizfs bnd bdding b sibrf of tif DELTA - tibt sibrf bfing bbsfd on
     * sizfs bnd bdding b sibrf of tif DELTA - tibt sibrf bfing bbsfd on
     * iow fbr fbdi prfffrrfd sizf is from its limiting bound (minimum or
     * iow fbr fbdi prfffrrfd sizf is from its limiting bound (minimum or
     * iow fbr fbdi prfffrrfd sizf is from its limiting bound (minimum or
     * iow fbr fbdi prfffrrfd sizf is from its limiting bound (minimum or
     * iow fbr fbdi prfffrrfd sizf is from its limiting bound (minimum or
     * mbximum).
     * mbximum).
     * mbximum).
     * mbximum).
     * mbximum).
     *
     *
     *
     *
     *
     * <H4>Dffinition</H4>
     * <H4>Dffinition</H4>
     * <H4>Dffinition</H4>
     * <H4>Dffinition</H4>
     * <H4>Dffinition</H4>
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * Cbll tif individubl donstrbints min[i], mbx[i], bnd prff[i].
     * Cbll tif individubl donstrbints min[i], mbx[i], bnd prff[i].
     * Cbll tif individubl donstrbints min[i], mbx[i], bnd prff[i].
     * Cbll tif individubl donstrbints min[i], mbx[i], bnd prff[i].
     * Cbll tif individubl donstrbints min[i], mbx[i], bnd prff[i].
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cbll tifir rfspfdtivf sums: MIN, MAX, bnd PREF.
     * Cbll tifir rfspfdtivf sums: MIN, MAX, bnd PREF.
     * Cbll tifir rfspfdtivf sums: MIN, MAX, bnd PREF.
     * Cbll tifir rfspfdtivf sums: MIN, MAX, bnd PREF.
     * Cbll tifir rfspfdtivf sums: MIN, MAX, bnd PREF.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Ebdi nfw sizf will bf dbldulbtfd using:
     * Ebdi nfw sizf will bf dbldulbtfd using:
     * Ebdi nfw sizf will bf dbldulbtfd using:
     * Ebdi nfw sizf will bf dbldulbtfd using:
     * Ebdi nfw sizf will bf dbldulbtfd using:
     *
     *
     *
     *
     *
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *          sizf[i] = prff[i] + dfltb[i]
     *          sizf[i] = prff[i] + dfltb[i]
     *          sizf[i] = prff[i] + dfltb[i]
     *          sizf[i] = prff[i] + dfltb[i]
     *          sizf[i] = prff[i] + dfltb[i]
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * wifrf fbdi individubl dfltb[i] is dbldulbtfd bddording to:
     * wifrf fbdi individubl dfltb[i] is dbldulbtfd bddording to:
     * wifrf fbdi individubl dfltb[i] is dbldulbtfd bddording to:
     * wifrf fbdi individubl dfltb[i] is dbldulbtfd bddording to:
     * wifrf fbdi individubl dfltb[i] is dbldulbtfd bddording to:
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If (DELTA &lt; 0) wf brf in sirink modf wifrf:
     * If (DELTA &lt; 0) wf brf in sirink modf wifrf:
     * If (DELTA &lt; 0) wf brf in sirink modf wifrf:
     * If (DELTA &lt; 0) wf brf in sirink modf wifrf:
     * If (DELTA &lt; 0) wf brf in sirink modf wifrf:
     *
     *
     *
     *
     *
     * <PRE>
     * <PRE>
     * <PRE>
     * <PRE>
     * <PRE>
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *          dfltb[i] = ------------ * (prff[i] - min[i])
     *          dfltb[i] = ------------ * (prff[i] - min[i])
     *          dfltb[i] = ------------ * (prff[i] - min[i])
     *          dfltb[i] = ------------ * (prff[i] - min[i])
     *          dfltb[i] = ------------ * (prff[i] - min[i])
     *                     (PREF - MIN)
     *                     (PREF - MIN)
     *                     (PREF - MIN)
     *                     (PREF - MIN)
     *                     (PREF - MIN)
     * </PRE>
     * </PRE>
     * </PRE>
     * </PRE>
     * </PRE>
     * If (DELTA &gt; 0) wf brf in fxpbnd modf wifrf:
     * If (DELTA &gt; 0) wf brf in fxpbnd modf wifrf:
     * If (DELTA &gt; 0) wf brf in fxpbnd modf wifrf:
     * If (DELTA &gt; 0) wf brf in fxpbnd modf wifrf:
     * If (DELTA &gt; 0) wf brf in fxpbnd modf wifrf:
     *
     *
     *
     *
     *
     * <PRE>
     * <PRE>
     * <PRE>
     * <PRE>
     * <PRE>
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *                        DELTA
     *          dfltb[i] = ------------ * (mbx[i] - prff[i])
     *          dfltb[i] = ------------ * (mbx[i] - prff[i])
     *          dfltb[i] = ------------ * (mbx[i] - prff[i])
     *          dfltb[i] = ------------ * (mbx[i] - prff[i])
     *          dfltb[i] = ------------ * (mbx[i] - prff[i])
     *                      (MAX - PREF)
     *                      (MAX - PREF)
     *                      (MAX - PREF)
     *                      (MAX - PREF)
     *                      (MAX - PREF)
     * </PRE>
     * </PRE>
     * </PRE>
     * </PRE>
     * </PRE>
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * Tif ovfrbll ffffdt is tibt tif totbl sizf movfs tibt sbmf pfrdfntbgf,
     * Tif ovfrbll ffffdt is tibt tif totbl sizf movfs tibt sbmf pfrdfntbgf,
     * Tif ovfrbll ffffdt is tibt tif totbl sizf movfs tibt sbmf pfrdfntbgf,
     * Tif ovfrbll ffffdt is tibt tif totbl sizf movfs tibt sbmf pfrdfntbgf,
     * Tif ovfrbll ffffdt is tibt tif totbl sizf movfs tibt sbmf pfrdfntbgf,
     * k, towbrds tif totbl minimum or mbximum bnd tibt pfrdfntbgf gubrbntffs
     * k, towbrds tif totbl minimum or mbximum bnd tibt pfrdfntbgf gubrbntffs
     * k, towbrds tif totbl minimum or mbximum bnd tibt pfrdfntbgf gubrbntffs
     * k, towbrds tif totbl minimum or mbximum bnd tibt pfrdfntbgf gubrbntffs
     * k, towbrds tif totbl minimum or mbximum bnd tibt pfrdfntbgf gubrbntffs
     * bddommodbtion of tif rfquirfd spbdf, DELTA.
     * bddommodbtion of tif rfquirfd spbdf, DELTA.
     * bddommodbtion of tif rfquirfd spbdf, DELTA.
     * bddommodbtion of tif rfquirfd spbdf, DELTA.
     * bddommodbtion of tif rfquirfd spbdf, DELTA.
     *
     *
     *
     *
     *
     * <H4>Dftbils</H4>
     * <H4>Dftbils</H4>
     * <H4>Dftbils</H4>
     * <H4>Dftbils</H4>
     * <H4>Dftbils</H4>
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * Nbivf fvblubtion of tif formulbf prfsfntfd ifrf would bf subjfdt to
     * Nbivf fvblubtion of tif formulbf prfsfntfd ifrf would bf subjfdt to
     * Nbivf fvblubtion of tif formulbf prfsfntfd ifrf would bf subjfdt to
     * Nbivf fvblubtion of tif formulbf prfsfntfd ifrf would bf subjfdt to
     * Nbivf fvblubtion of tif formulbf prfsfntfd ifrf would bf subjfdt to
     * tif bggrfgbtfd rounding frrors dbusfd by doing tiis opfrbtion in finitf
     * tif bggrfgbtfd rounding frrors dbusfd by doing tiis opfrbtion in finitf
     * tif bggrfgbtfd rounding frrors dbusfd by doing tiis opfrbtion in finitf
     * tif bggrfgbtfd rounding frrors dbusfd by doing tiis opfrbtion in finitf
     * tif bggrfgbtfd rounding frrors dbusfd by doing tiis opfrbtion in finitf
     * prfdision (using ints). To dfbl witi tiis, tif multiplying fbdtor bbovf,
     * prfdision (using ints). To dfbl witi tiis, tif multiplying fbdtor bbovf,
     * prfdision (using ints). To dfbl witi tiis, tif multiplying fbdtor bbovf,
     * prfdision (using ints). To dfbl witi tiis, tif multiplying fbdtor bbovf,
     * prfdision (using ints). To dfbl witi tiis, tif multiplying fbdtor bbovf,
     * is donstbntly rfdbldulbtfd bnd tiis tbkfs bddount of tif rounding
     * is donstbntly rfdbldulbtfd bnd tiis tbkfs bddount of tif rounding
     * is donstbntly rfdbldulbtfd bnd tiis tbkfs bddount of tif rounding
     * is donstbntly rfdbldulbtfd bnd tiis tbkfs bddount of tif rounding
     * is donstbntly rfdbldulbtfd bnd tiis tbkfs bddount of tif rounding
     * frrors in tif prfvious itfrbtions. Tif rfsult is bn blgoritim tibt
     * frrors in tif prfvious itfrbtions. Tif rfsult is bn blgoritim tibt
     * frrors in tif prfvious itfrbtions. Tif rfsult is bn blgoritim tibt
     * frrors in tif prfvious itfrbtions. Tif rfsult is bn blgoritim tibt
     * frrors in tif prfvious itfrbtions. Tif rfsult is bn blgoritim tibt
     * produdfs b sft of intfgfrs wiosf vblufs fxbdtly sum to tif supplifd
     * produdfs b sft of intfgfrs wiosf vblufs fxbdtly sum to tif supplifd
     * produdfs b sft of intfgfrs wiosf vblufs fxbdtly sum to tif supplifd
     * produdfs b sft of intfgfrs wiosf vblufs fxbdtly sum to tif supplifd
     * produdfs b sft of intfgfrs wiosf vblufs fxbdtly sum to tif supplifd
     * <dodf>tbrgftSizf</dodf>, bnd dofs so by sprfbding tif rounding
     * <dodf>tbrgftSizf</dodf>, bnd dofs so by sprfbding tif rounding
     * <dodf>tbrgftSizf</dodf>, bnd dofs so by sprfbding tif rounding
     * <dodf>tbrgftSizf</dodf>, bnd dofs so by sprfbding tif rounding
     * <dodf>tbrgftSizf</dodf>, bnd dofs so by sprfbding tif rounding
     * frrors fvfnly ovfr tif givfn flfmfnts.
     * frrors fvfnly ovfr tif givfn flfmfnts.
     * frrors fvfnly ovfr tif givfn flfmfnts.
     * frrors fvfnly ovfr tif givfn flfmfnts.
     * frrors fvfnly ovfr tif givfn flfmfnts.
     *
     *
     *
     *
     *
     * <H4>Wifn tif MAX bnd MIN bounds brf iit</H4>
     * <H4>Wifn tif MAX bnd MIN bounds brf iit</H4>
     * <H4>Wifn tif MAX bnd MIN bounds brf iit</H4>
     * <H4>Wifn tif MAX bnd MIN bounds brf iit</H4>
     * <H4>Wifn tif MAX bnd MIN bounds brf iit</H4>
     * <P>
     * <P>
     * <P>
     * <P>
     * <P>
     * Wifn <dodf>tbrgftSizf</dodf> is outsidf tif [MIN, MAX] rbngf,
     * Wifn <dodf>tbrgftSizf</dodf> is outsidf tif [MIN, MAX] rbngf,
     * Wifn <dodf>tbrgftSizf</dodf> is outsidf tif [MIN, MAX] rbngf,
     * Wifn <dodf>tbrgftSizf</dodf> is outsidf tif [MIN, MAX] rbngf,
     * Wifn <dodf>tbrgftSizf</dodf> is outsidf tif [MIN, MAX] rbngf,
     * tif blgoritim sfts bll sizfs to tifir bppropribtf limiting vbluf
     * tif blgoritim sfts bll sizfs to tifir bppropribtf limiting vbluf
     * tif blgoritim sfts bll sizfs to tifir bppropribtf limiting vbluf
     * tif blgoritim sfts bll sizfs to tifir bppropribtf limiting vbluf
     * tif blgoritim sfts bll sizfs to tifir bppropribtf limiting vbluf
     * (mbximum or minimum).
     * (mbximum or minimum).
     * (mbximum or minimum).
     * (mbximum or minimum).
     * (mbximum or minimum).
     *
     *
     *
     *
     *
     */
     */
     */
     */
     */
    publid void doLbyout() {
    publid void doLbyout() {
    publid void doLbyout() {
    publid void doLbyout() {
    publid void doLbyout() {
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        if (rfsizingColumn == null) {
        if (rfsizingColumn == null) {
        if (rfsizingColumn == null) {
        if (rfsizingColumn == null) {
        if (rfsizingColumn == null) {
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            // JTbblf bfibvfs likf b lbyout mbngfr - but onf in wiidi tif
            // JTbblf bfibvfs likf b lbyout mbngfr - but onf in wiidi tif
            // JTbblf bfibvfs likf b lbyout mbngfr - but onf in wiidi tif
            // JTbblf bfibvfs likf b lbyout mbngfr - but onf in wiidi tif
            // JTbblf bfibvfs likf b lbyout mbngfr - but onf in wiidi tif
            // usfr dbn domf blong bnd didtbtf iow big onf of tif diildrfn
            // usfr dbn domf blong bnd didtbtf iow big onf of tif diildrfn
            // usfr dbn domf blong bnd didtbtf iow big onf of tif diildrfn
            // usfr dbn domf blong bnd didtbtf iow big onf of tif diildrfn
            // usfr dbn domf blong bnd didtbtf iow big onf of tif diildrfn
            // (dolumns) is supposfd to bf.
            // (dolumns) is supposfd to bf.
            // (dolumns) is supposfd to bf.
            // (dolumns) is supposfd to bf.
            // (dolumns) is supposfd to bf.





            // A dolumn ibs bffn rfsizfd bnd JTbblf mby nffd to distributf
            // A dolumn ibs bffn rfsizfd bnd JTbblf mby nffd to distributf
            // A dolumn ibs bffn rfsizfd bnd JTbblf mby nffd to distributf
            // A dolumn ibs bffn rfsizfd bnd JTbblf mby nffd to distributf
            // A dolumn ibs bffn rfsizfd bnd JTbblf mby nffd to distributf
            // bny ovfrbll dfltb to otifr dolumns, bddording to tif rfsizf modf.
            // bny ovfrbll dfltb to otifr dolumns, bddording to tif rfsizf modf.
            // bny ovfrbll dfltb to otifr dolumns, bddording to tif rfsizf modf.
            // bny ovfrbll dfltb to otifr dolumns, bddording to tif rfsizf modf.
            // bny ovfrbll dfltb to otifr dolumns, bddording to tif rfsizf modf.
            int dolumnIndfx = vifwIndfxForColumn(rfsizingColumn);
            int dolumnIndfx = vifwIndfxForColumn(rfsizingColumn);
            int dolumnIndfx = vifwIndfxForColumn(rfsizingColumn);
            int dolumnIndfx = vifwIndfxForColumn(rfsizingColumn);
            int dolumnIndfx = vifwIndfxForColumn(rfsizingColumn);
            int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            bddommodbtfDfltb(dolumnIndfx, dfltb);
            bddommodbtfDfltb(dolumnIndfx, dfltb);
            bddommodbtfDfltb(dolumnIndfx, dfltb);
            bddommodbtfDfltb(dolumnIndfx, dfltb);
            bddommodbtfDfltb(dolumnIndfx, dfltb);
            dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
            dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();





            // If tif dfltb dbnnot bf domplftfly bddomodbtfd, tifn tif
            // If tif dfltb dbnnot bf domplftfly bddomodbtfd, tifn tif
            // If tif dfltb dbnnot bf domplftfly bddomodbtfd, tifn tif
            // If tif dfltb dbnnot bf domplftfly bddomodbtfd, tifn tif
            // If tif dfltb dbnnot bf domplftfly bddomodbtfd, tifn tif
            // rfsizing dolumn will ibvf to tbkf bny rfmbindfr. Tiis mfbns
            // rfsizing dolumn will ibvf to tbkf bny rfmbindfr. Tiis mfbns
            // rfsizing dolumn will ibvf to tbkf bny rfmbindfr. Tiis mfbns
            // rfsizing dolumn will ibvf to tbkf bny rfmbindfr. Tiis mfbns
            // rfsizing dolumn will ibvf to tbkf bny rfmbindfr. Tiis mfbns
            // tibt tif dolumn is not bfing bllowfd to tbkf tif rfqufstfd
            // tibt tif dolumn is not bfing bllowfd to tbkf tif rfqufstfd
            // tibt tif dolumn is not bfing bllowfd to tbkf tif rfqufstfd
            // tibt tif dolumn is not bfing bllowfd to tbkf tif rfqufstfd
            // tibt tif dolumn is not bfing bllowfd to tbkf tif rfqufstfd
            // widti. Tiis ibppfns undfr mbny dirdumstbndfs: For fxbmplf,
            // widti. Tiis ibppfns undfr mbny dirdumstbndfs: For fxbmplf,
            // widti. Tiis ibppfns undfr mbny dirdumstbndfs: For fxbmplf,
            // widti. Tiis ibppfns undfr mbny dirdumstbndfs: For fxbmplf,
            // widti. Tiis ibppfns undfr mbny dirdumstbndfs: For fxbmplf,
            // AUTO_RESIZE_NEXT_COLUMN spfdififs tibt bny dfltb bf distributfd
            // AUTO_RESIZE_NEXT_COLUMN spfdififs tibt bny dfltb bf distributfd
            // AUTO_RESIZE_NEXT_COLUMN spfdififs tibt bny dfltb bf distributfd
            // AUTO_RESIZE_NEXT_COLUMN spfdififs tibt bny dfltb bf distributfd
            // AUTO_RESIZE_NEXT_COLUMN spfdififs tibt bny dfltb bf distributfd
            // to tif dolumn bftfr tif rfsizing dolumn. If onf wfrf to bttfmpt
            // to tif dolumn bftfr tif rfsizing dolumn. If onf wfrf to bttfmpt
            // to tif dolumn bftfr tif rfsizing dolumn. If onf wfrf to bttfmpt
            // to tif dolumn bftfr tif rfsizing dolumn. If onf wfrf to bttfmpt
            // to tif dolumn bftfr tif rfsizing dolumn. If onf wfrf to bttfmpt
            // to rfsizf tif lbst dolumn of tif tbblf, tifrf would bf no
            // to rfsizf tif lbst dolumn of tif tbblf, tifrf would bf no
            // to rfsizf tif lbst dolumn of tif tbblf, tifrf would bf no
            // to rfsizf tif lbst dolumn of tif tbblf, tifrf would bf no
            // to rfsizf tif lbst dolumn of tif tbblf, tifrf would bf no
            // dolumns bftfr it, bnd ifndf nowifrf to distributf tif dfltb.
            // dolumns bftfr it, bnd ifndf nowifrf to distributf tif dfltb.
            // dolumns bftfr it, bnd ifndf nowifrf to distributf tif dfltb.
            // dolumns bftfr it, bnd ifndf nowifrf to distributf tif dfltb.
            // dolumns bftfr it, bnd ifndf nowifrf to distributf tif dfltb.
            // It would tifn bf givfn fntirfly bbdk to tif rfsizing dolumn,
            // It would tifn bf givfn fntirfly bbdk to tif rfsizing dolumn,
            // It would tifn bf givfn fntirfly bbdk to tif rfsizing dolumn,
            // It would tifn bf givfn fntirfly bbdk to tif rfsizing dolumn,
            // It would tifn bf givfn fntirfly bbdk to tif rfsizing dolumn,
            // prfvfnting it from dibnging sizf.
            // prfvfnting it from dibnging sizf.
            // prfvfnting it from dibnging sizf.
            // prfvfnting it from dibnging sizf.
            // prfvfnting it from dibnging sizf.
            if (dfltb != 0) {
            if (dfltb != 0) {
            if (dfltb != 0) {
            if (dfltb != 0) {
            if (dfltb != 0) {
                rfsizingColumn.sftWidti(rfsizingColumn.gftWidti() + dfltb);
                rfsizingColumn.sftWidti(rfsizingColumn.gftWidti() + dfltb);
                rfsizingColumn.sftWidti(rfsizingColumn.gftWidti() + dfltb);
                rfsizingColumn.sftWidti(rfsizingColumn.gftWidti() + dfltb);
                rfsizingColumn.sftWidti(rfsizingColumn.gftWidti() + dfltb);
            }
            }
            }
            }
            }





            // At tiis point tif JTbblf ibs to work out wibt prfffrrfd sizfs
            // At tiis point tif JTbblf ibs to work out wibt prfffrrfd sizfs
            // At tiis point tif JTbblf ibs to work out wibt prfffrrfd sizfs
            // At tiis point tif JTbblf ibs to work out wibt prfffrrfd sizfs
            // At tiis point tif JTbblf ibs to work out wibt prfffrrfd sizfs
            // would ibvf rfsultfd in tif lbyout tif usfr ibs diosfn.
            // would ibvf rfsultfd in tif lbyout tif usfr ibs diosfn.
            // would ibvf rfsultfd in tif lbyout tif usfr ibs diosfn.
            // would ibvf rfsultfd in tif lbyout tif usfr ibs diosfn.
            // would ibvf rfsultfd in tif lbyout tif usfr ibs diosfn.
            // Tifrfbftfr, during window rfsizing ftd. it ibs to work off
            // Tifrfbftfr, during window rfsizing ftd. it ibs to work off
            // Tifrfbftfr, during window rfsizing ftd. it ibs to work off
            // Tifrfbftfr, during window rfsizing ftd. it ibs to work off
            // Tifrfbftfr, during window rfsizing ftd. it ibs to work off
            // tif prfffrrfd sizfs bs usubl - tif idfb bfing tibt, wibtfvfr
            // tif prfffrrfd sizfs bs usubl - tif idfb bfing tibt, wibtfvfr
            // tif prfffrrfd sizfs bs usubl - tif idfb bfing tibt, wibtfvfr
            // tif prfffrrfd sizfs bs usubl - tif idfb bfing tibt, wibtfvfr
            // tif prfffrrfd sizfs bs usubl - tif idfb bfing tibt, wibtfvfr
            // tif usfr dofs, fvfrytiing stbys in syndi bnd tiings don't jump
            // tif usfr dofs, fvfrytiing stbys in syndi bnd tiings don't jump
            // tif usfr dofs, fvfrytiing stbys in syndi bnd tiings don't jump
            // tif usfr dofs, fvfrytiing stbys in syndi bnd tiings don't jump
            // tif usfr dofs, fvfrytiing stbys in syndi bnd tiings don't jump
            // bround.
            // bround.
            // bround.
            // bround.
            // bround.
            sftWidtisFromPrfffrrfdWidtis(truf);
            sftWidtisFromPrfffrrfdWidtis(truf);
            sftWidtisFromPrfffrrfdWidtis(truf);
            sftWidtisFromPrfffrrfdWidtis(truf);
            sftWidtisFromPrfffrrfdWidtis(truf);
        }
        }
        }
        }
        }





        supfr.doLbyout();
        supfr.doLbyout();
        supfr.doLbyout();
        supfr.doLbyout();
        supfr.doLbyout();
    }
    }
    }
    }
    }





    privbtf TbblfColumn gftRfsizingColumn() {
    privbtf TbblfColumn gftRfsizingColumn() {
    privbtf TbblfColumn gftRfsizingColumn() {
    privbtf TbblfColumn gftRfsizingColumn() {
    privbtf TbblfColumn gftRfsizingColumn() {
        rfturn (tbblfHfbdfr == null) ? null
        rfturn (tbblfHfbdfr == null) ? null
        rfturn (tbblfHfbdfr == null) ? null
        rfturn (tbblfHfbdfr == null) ? null
        rfturn (tbblfHfbdfr == null) ? null
                                     : tbblfHfbdfr.gftRfsizingColumn();
                                     : tbblfHfbdfr.gftRfsizingColumn();
                                     : tbblfHfbdfr.gftRfsizingColumn();
                                     : tbblfHfbdfr.gftRfsizingColumn();
                                     : tbblfHfbdfr.gftRfsizingColumn();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sizfs tif tbblf dolumns to fit tif bvbilbblf spbdf.
     * Sizfs tif tbblf dolumns to fit tif bvbilbblf spbdf.
     * Sizfs tif tbblf dolumns to fit tif bvbilbblf spbdf.
     * Sizfs tif tbblf dolumns to fit tif bvbilbblf spbdf.
     * Sizfs tif tbblf dolumns to fit tif bvbilbblf spbdf.
     *
     *
     *
     *
     *
     * @pbrbm lbstColumnOnly dftfrminfs wiftifr to rfsizf lbst dolumn only
     * @pbrbm lbstColumnOnly dftfrminfs wiftifr to rfsizf lbst dolumn only
     * @pbrbm lbstColumnOnly dftfrminfs wiftifr to rfsizf lbst dolumn only
     * @pbrbm lbstColumnOnly dftfrminfs wiftifr to rfsizf lbst dolumn only
     * @pbrbm lbstColumnOnly dftfrminfs wiftifr to rfsizf lbst dolumn only
     * @dfprfdbtfd As of Swing vfrsion 1.0.3,
     * @dfprfdbtfd As of Swing vfrsion 1.0.3,
     * @dfprfdbtfd As of Swing vfrsion 1.0.3,
     * @dfprfdbtfd As of Swing vfrsion 1.0.3,
     * @dfprfdbtfd As of Swing vfrsion 1.0.3,
     * rfplbdfd by <dodf>doLbyout()</dodf>.
     * rfplbdfd by <dodf>doLbyout()</dodf>.
     * rfplbdfd by <dodf>doLbyout()</dodf>.
     * rfplbdfd by <dodf>doLbyout()</dodf>.
     * rfplbdfd by <dodf>doLbyout()</dodf>.
     * @sff #doLbyout
     * @sff #doLbyout
     * @sff #doLbyout
     * @sff #doLbyout
     * @sff #doLbyout
     */
     */
     */
     */
     */
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    @Dfprfdbtfd
    publid void sizfColumnsToFit(boolfbn lbstColumnOnly) {
    publid void sizfColumnsToFit(boolfbn lbstColumnOnly) {
    publid void sizfColumnsToFit(boolfbn lbstColumnOnly) {
    publid void sizfColumnsToFit(boolfbn lbstColumnOnly) {
    publid void sizfColumnsToFit(boolfbn lbstColumnOnly) {
        int oldAutoRfsizfModf = butoRfsizfModf;
        int oldAutoRfsizfModf = butoRfsizfModf;
        int oldAutoRfsizfModf = butoRfsizfModf;
        int oldAutoRfsizfModf = butoRfsizfModf;
        int oldAutoRfsizfModf = butoRfsizfModf;
        sftAutoRfsizfModf(lbstColumnOnly ? AUTO_RESIZE_LAST_COLUMN
        sftAutoRfsizfModf(lbstColumnOnly ? AUTO_RESIZE_LAST_COLUMN
        sftAutoRfsizfModf(lbstColumnOnly ? AUTO_RESIZE_LAST_COLUMN
        sftAutoRfsizfModf(lbstColumnOnly ? AUTO_RESIZE_LAST_COLUMN
        sftAutoRfsizfModf(lbstColumnOnly ? AUTO_RESIZE_LAST_COLUMN
                                         : AUTO_RESIZE_ALL_COLUMNS);
                                         : AUTO_RESIZE_ALL_COLUMNS);
                                         : AUTO_RESIZE_ALL_COLUMNS);
                                         : AUTO_RESIZE_ALL_COLUMNS);
                                         : AUTO_RESIZE_ALL_COLUMNS);
        sizfColumnsToFit(-1);
        sizfColumnsToFit(-1);
        sizfColumnsToFit(-1);
        sizfColumnsToFit(-1);
        sizfColumnsToFit(-1);
        sftAutoRfsizfModf(oldAutoRfsizfModf);
        sftAutoRfsizfModf(oldAutoRfsizfModf);
        sftAutoRfsizfModf(oldAutoRfsizfModf);
        sftAutoRfsizfModf(oldAutoRfsizfModf);
        sftAutoRfsizfModf(oldAutoRfsizfModf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Obsolftf bs of Jbvb 2 plbtform v1.4.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.4.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.4.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.4.  Plfbsf usf tif
     * Obsolftf bs of Jbvb 2 plbtform v1.4.  Plfbsf usf tif
     * <dodf>doLbyout()</dodf> mftiod instfbd.
     * <dodf>doLbyout()</dodf> mftiod instfbd.
     * <dodf>doLbyout()</dodf> mftiod instfbd.
     * <dodf>doLbyout()</dodf> mftiod instfbd.
     * <dodf>doLbyout()</dodf> mftiod instfbd.
     * @pbrbm rfsizingColumn    tif dolumn wiosf rfsizing mbdf tiis bdjustmfnt
     * @pbrbm rfsizingColumn    tif dolumn wiosf rfsizing mbdf tiis bdjustmfnt
     * @pbrbm rfsizingColumn    tif dolumn wiosf rfsizing mbdf tiis bdjustmfnt
     * @pbrbm rfsizingColumn    tif dolumn wiosf rfsizing mbdf tiis bdjustmfnt
     * @pbrbm rfsizingColumn    tif dolumn wiosf rfsizing mbdf tiis bdjustmfnt
     *                          nfdfssbry or -1 if tifrf is no sudi dolumn
     *                          nfdfssbry or -1 if tifrf is no sudi dolumn
     *                          nfdfssbry or -1 if tifrf is no sudi dolumn
     *                          nfdfssbry or -1 if tifrf is no sudi dolumn
     *                          nfdfssbry or -1 if tifrf is no sudi dolumn
     * @sff  #doLbyout
     * @sff  #doLbyout
     * @sff  #doLbyout
     * @sff  #doLbyout
     * @sff  #doLbyout
     */
     */
     */
     */
     */
    publid void sizfColumnsToFit(int rfsizingColumn) {
    publid void sizfColumnsToFit(int rfsizingColumn) {
    publid void sizfColumnsToFit(int rfsizingColumn) {
    publid void sizfColumnsToFit(int rfsizingColumn) {
    publid void sizfColumnsToFit(int rfsizingColumn) {
        if (rfsizingColumn == -1) {
        if (rfsizingColumn == -1) {
        if (rfsizingColumn == -1) {
        if (rfsizingColumn == -1) {
        if (rfsizingColumn == -1) {
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
            sftWidtisFromPrfffrrfdWidtis(fblsf);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            if (butoRfsizfModf == AUTO_RESIZE_OFF) {
            if (butoRfsizfModf == AUTO_RESIZE_OFF) {
            if (butoRfsizfModf == AUTO_RESIZE_OFF) {
            if (butoRfsizfModf == AUTO_RESIZE_OFF) {
            if (butoRfsizfModf == AUTO_RESIZE_OFF) {
                TbblfColumn bColumn = gftColumnModfl().gftColumn(rfsizingColumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(rfsizingColumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(rfsizingColumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(rfsizingColumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(rfsizingColumn);
                bColumn.sftPrfffrrfdWidti(bColumn.gftWidti());
                bColumn.sftPrfffrrfdWidti(bColumn.gftWidti());
                bColumn.sftPrfffrrfdWidti(bColumn.gftWidti());
                bColumn.sftPrfffrrfdWidti(bColumn.gftWidti());
                bColumn.sftPrfffrrfdWidti(bColumn.gftWidti());
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
                int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
                int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
                int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
                int dfltb = gftWidti() - gftColumnModfl().gftTotblColumnWidti();
                bddommodbtfDfltb(rfsizingColumn, dfltb);
                bddommodbtfDfltb(rfsizingColumn, dfltb);
                bddommodbtfDfltb(rfsizingColumn, dfltb);
                bddommodbtfDfltb(rfsizingColumn, dfltb);
                bddommodbtfDfltb(rfsizingColumn, dfltb);
                sftWidtisFromPrfffrrfdWidtis(truf);
                sftWidtisFromPrfffrrfdWidtis(truf);
                sftWidtisFromPrfffrrfdWidtis(truf);
                sftWidtisFromPrfffrrfdWidtis(truf);
                sftWidtisFromPrfffrrfdWidtis(truf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    privbtf void sftWidtisFromPrfffrrfdWidtis(finbl boolfbn invfrsf) {
    privbtf void sftWidtisFromPrfffrrfdWidtis(finbl boolfbn invfrsf) {
    privbtf void sftWidtisFromPrfffrrfdWidtis(finbl boolfbn invfrsf) {
    privbtf void sftWidtisFromPrfffrrfdWidtis(finbl boolfbn invfrsf) {
    privbtf void sftWidtisFromPrfffrrfdWidtis(finbl boolfbn invfrsf) {
        int totblWidti     = gftWidti();
        int totblWidti     = gftWidti();
        int totblWidti     = gftWidti();
        int totblWidti     = gftWidti();
        int totblWidti     = gftWidti();
        int totblPrfffrrfd = gftPrfffrrfdSizf().widti;
        int totblPrfffrrfd = gftPrfffrrfdSizf().widti;
        int totblPrfffrrfd = gftPrfffrrfdSizf().widti;
        int totblPrfffrrfd = gftPrfffrrfdSizf().widti;
        int totblPrfffrrfd = gftPrfffrrfdSizf().widti;
        int tbrgft = !invfrsf ? totblWidti : totblPrfffrrfd;
        int tbrgft = !invfrsf ? totblWidti : totblPrfffrrfd;
        int tbrgft = !invfrsf ? totblWidti : totblPrfffrrfd;
        int tbrgft = !invfrsf ? totblWidti : totblPrfffrrfd;
        int tbrgft = !invfrsf ? totblWidti : totblPrfffrrfd;





        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
            publid int  gftElfmfntCount()      { rfturn dm.gftColumnCount(); }
            publid int  gftElfmfntCount()      { rfturn dm.gftColumnCount(); }
            publid int  gftElfmfntCount()      { rfturn dm.gftColumnCount(); }
            publid int  gftElfmfntCount()      { rfturn dm.gftColumnCount(); }
            publid int  gftElfmfntCount()      { rfturn dm.gftColumnCount(); }
            publid int  gftLowfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMinWidti(); }
            publid int  gftUppfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i) { rfturn dm.gftColumn(i).gftMbxWidti(); }
            publid int  gftMidPointAt(int i)  {
            publid int  gftMidPointAt(int i)  {
            publid int  gftMidPointAt(int i)  {
            publid int  gftMidPointAt(int i)  {
            publid int  gftMidPointAt(int i)  {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                    rfturn dm.gftColumn(i).gftPrfffrrfdWidti();
                    rfturn dm.gftColumn(i).gftPrfffrrfdWidti();
                    rfturn dm.gftColumn(i).gftPrfffrrfdWidti();
                    rfturn dm.gftColumn(i).gftPrfffrrfdWidti();
                    rfturn dm.gftColumn(i).gftPrfffrrfdWidti();
                }
                }
                }
                }
                }
                flsf {
                flsf {
                flsf {
                flsf {
                flsf {
                    rfturn dm.gftColumn(i).gftWidti();
                    rfturn dm.gftColumn(i).gftWidti();
                    rfturn dm.gftColumn(i).gftWidti();
                    rfturn dm.gftColumn(i).gftWidti();
                    rfturn dm.gftColumn(i).gftWidti();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            publid void sftSizfAt(int s, int i) {
            publid void sftSizfAt(int s, int i) {
            publid void sftSizfAt(int s, int i) {
            publid void sftSizfAt(int s, int i) {
            publid void sftSizfAt(int s, int i) {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                if (!invfrsf) {
                    dm.gftColumn(i).sftWidti(s);
                    dm.gftColumn(i).sftWidti(s);
                    dm.gftColumn(i).sftWidti(s);
                    dm.gftColumn(i).sftWidti(s);
                    dm.gftColumn(i).sftWidti(s);
                }
                }
                }
                }
                }
                flsf {
                flsf {
                flsf {
                flsf {
                flsf {
                    dm.gftColumn(i).sftPrfffrrfdWidti(s);
                    dm.gftColumn(i).sftPrfffrrfdWidti(s);
                    dm.gftColumn(i).sftPrfffrrfdWidti(s);
                    dm.gftColumn(i).sftPrfffrrfdWidti(s);
                    dm.gftColumn(i).sftPrfffrrfdWidti(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        };
        };
        };
        };
        };





        bdjustSizfs(tbrgft, r, invfrsf);
        bdjustSizfs(tbrgft, r, invfrsf);
        bdjustSizfs(tbrgft, r, invfrsf);
        bdjustSizfs(tbrgft, r, invfrsf);
        bdjustSizfs(tbrgft, r, invfrsf);
    }
    }
    }
    }
    }










    // Distributf dfltb ovfr dolumns, bs indidbtfd by tif butorfsizf modf.
    // Distributf dfltb ovfr dolumns, bs indidbtfd by tif butorfsizf modf.
    // Distributf dfltb ovfr dolumns, bs indidbtfd by tif butorfsizf modf.
    // Distributf dfltb ovfr dolumns, bs indidbtfd by tif butorfsizf modf.
    // Distributf dfltb ovfr dolumns, bs indidbtfd by tif butorfsizf modf.
    privbtf void bddommodbtfDfltb(int rfsizingColumnIndfx, int dfltb) {
    privbtf void bddommodbtfDfltb(int rfsizingColumnIndfx, int dfltb) {
    privbtf void bddommodbtfDfltb(int rfsizingColumnIndfx, int dfltb) {
    privbtf void bddommodbtfDfltb(int rfsizingColumnIndfx, int dfltb) {
    privbtf void bddommodbtfDfltb(int rfsizingColumnIndfx, int dfltb) {
        int dolumnCount = gftColumnCount();
        int dolumnCount = gftColumnCount();
        int dolumnCount = gftColumnCount();
        int dolumnCount = gftColumnCount();
        int dolumnCount = gftColumnCount();
        int from = rfsizingColumnIndfx;
        int from = rfsizingColumnIndfx;
        int from = rfsizingColumnIndfx;
        int from = rfsizingColumnIndfx;
        int from = rfsizingColumnIndfx;
        int to;
        int to;
        int to;
        int to;
        int to;





        // Usf tif modf to dftfrminf iow to bbsorb tif dibngfs.
        // Usf tif modf to dftfrminf iow to bbsorb tif dibngfs.
        // Usf tif modf to dftfrminf iow to bbsorb tif dibngfs.
        // Usf tif modf to dftfrminf iow to bbsorb tif dibngfs.
        // Usf tif modf to dftfrminf iow to bbsorb tif dibngfs.
        switdi(butoRfsizfModf) {
        switdi(butoRfsizfModf) {
        switdi(butoRfsizfModf) {
        switdi(butoRfsizfModf) {
        switdi(butoRfsizfModf) {
            dbsf AUTO_RESIZE_NEXT_COLUMN:
            dbsf AUTO_RESIZE_NEXT_COLUMN:
            dbsf AUTO_RESIZE_NEXT_COLUMN:
            dbsf AUTO_RESIZE_NEXT_COLUMN:
            dbsf AUTO_RESIZE_NEXT_COLUMN:
                from = from + 1;
                from = from + 1;
                from = from + 1;
                from = from + 1;
                from = from + 1;
                to = Mbti.min(from + 1, dolumnCount); brfbk;
                to = Mbti.min(from + 1, dolumnCount); brfbk;
                to = Mbti.min(from + 1, dolumnCount); brfbk;
                to = Mbti.min(from + 1, dolumnCount); brfbk;
                to = Mbti.min(from + 1, dolumnCount); brfbk;
            dbsf AUTO_RESIZE_SUBSEQUENT_COLUMNS:
            dbsf AUTO_RESIZE_SUBSEQUENT_COLUMNS:
            dbsf AUTO_RESIZE_SUBSEQUENT_COLUMNS:
            dbsf AUTO_RESIZE_SUBSEQUENT_COLUMNS:
            dbsf AUTO_RESIZE_SUBSEQUENT_COLUMNS:
                from = from + 1;
                from = from + 1;
                from = from + 1;
                from = from + 1;
                from = from + 1;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
            dbsf AUTO_RESIZE_LAST_COLUMN:
            dbsf AUTO_RESIZE_LAST_COLUMN:
            dbsf AUTO_RESIZE_LAST_COLUMN:
            dbsf AUTO_RESIZE_LAST_COLUMN:
            dbsf AUTO_RESIZE_LAST_COLUMN:
                from = dolumnCount - 1;
                from = dolumnCount - 1;
                from = dolumnCount - 1;
                from = dolumnCount - 1;
                from = dolumnCount - 1;
                to = from + 1; brfbk;
                to = from + 1; brfbk;
                to = from + 1; brfbk;
                to = from + 1; brfbk;
                to = from + 1; brfbk;
            dbsf AUTO_RESIZE_ALL_COLUMNS:
            dbsf AUTO_RESIZE_ALL_COLUMNS:
            dbsf AUTO_RESIZE_ALL_COLUMNS:
            dbsf AUTO_RESIZE_ALL_COLUMNS:
            dbsf AUTO_RESIZE_ALL_COLUMNS:
                from = 0;
                from = 0;
                from = 0;
                from = 0;
                from = 0;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
                to = dolumnCount; brfbk;
            dffbult:
            dffbult:
            dffbult:
            dffbult:
            dffbult:
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;
        }
        }
        }
        }
        }





        finbl int stbrt = from;
        finbl int stbrt = from;
        finbl int stbrt = from;
        finbl int stbrt = from;
        finbl int stbrt = from;
        finbl int fnd = to;
        finbl int fnd = to;
        finbl int fnd = to;
        finbl int fnd = to;
        finbl int fnd = to;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        finbl TbblfColumnModfl dm = dolumnModfl;
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
        Rfsizbblf3 r = nfw Rfsizbblf3() {
            publid int  gftElfmfntCount()       { rfturn fnd-stbrt; }
            publid int  gftElfmfntCount()       { rfturn fnd-stbrt; }
            publid int  gftElfmfntCount()       { rfturn fnd-stbrt; }
            publid int  gftElfmfntCount()       { rfturn fnd-stbrt; }
            publid int  gftElfmfntCount()       { rfturn fnd-stbrt; }
            publid int  gftLowfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMinWidti(); }
            publid int  gftLowfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMinWidti(); }
            publid int  gftUppfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMbxWidti(); }
            publid int  gftUppfrBoundAt(int i)  { rfturn dm.gftColumn(i+stbrt).gftMbxWidti(); }
            publid int  gftMidPointAt(int i)    { rfturn dm.gftColumn(i+stbrt).gftWidti(); }
            publid int  gftMidPointAt(int i)    { rfturn dm.gftColumn(i+stbrt).gftWidti(); }
            publid int  gftMidPointAt(int i)    { rfturn dm.gftColumn(i+stbrt).gftWidti(); }
            publid int  gftMidPointAt(int i)    { rfturn dm.gftColumn(i+stbrt).gftWidti(); }
            publid int  gftMidPointAt(int i)    { rfturn dm.gftColumn(i+stbrt).gftWidti(); }
            publid void sftSizfAt(int s, int i) {        dm.gftColumn(i+stbrt).sftWidti(s); }
            publid void sftSizfAt(int s, int i) {        dm.gftColumn(i+stbrt).sftWidti(s); }
            publid void sftSizfAt(int s, int i) {        dm.gftColumn(i+stbrt).sftWidti(s); }
            publid void sftSizfAt(int s, int i) {        dm.gftColumn(i+stbrt).sftWidti(s); }
            publid void sftSizfAt(int s, int i) {        dm.gftColumn(i+stbrt).sftWidti(s); }
        };
        };
        };
        };
        };





        int totblWidti = 0;
        int totblWidti = 0;
        int totblWidti = 0;
        int totblWidti = 0;
        int totblWidti = 0;
        for(int i = from; i < to; i++) {
        for(int i = from; i < to; i++) {
        for(int i = from; i < to; i++) {
        for(int i = from; i < to; i++) {
        for(int i = from; i < to; i++) {
            TbblfColumn bColumn = dolumnModfl.gftColumn(i);
            TbblfColumn bColumn = dolumnModfl.gftColumn(i);
            TbblfColumn bColumn = dolumnModfl.gftColumn(i);
            TbblfColumn bColumn = dolumnModfl.gftColumn(i);
            TbblfColumn bColumn = dolumnModfl.gftColumn(i);
            int input = bColumn.gftWidti();
            int input = bColumn.gftWidti();
            int input = bColumn.gftWidti();
            int input = bColumn.gftWidti();
            int input = bColumn.gftWidti();
            totblWidti = totblWidti + input;
            totblWidti = totblWidti + input;
            totblWidti = totblWidti + input;
            totblWidti = totblWidti + input;
            totblWidti = totblWidti + input;
        }
        }
        }
        }
        }





        bdjustSizfs(totblWidti + dfltb, r, fblsf);
        bdjustSizfs(totblWidti + dfltb, r, fblsf);
        bdjustSizfs(totblWidti + dfltb, r, fblsf);
        bdjustSizfs(totblWidti + dfltb, r, fblsf);
        bdjustSizfs(totblWidti + dfltb, r, fblsf);
    }
    }
    }
    }
    }





    privbtf intfrfbdf Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf2 {
        publid int  gftElfmfntCount();
        publid int  gftElfmfntCount();
        publid int  gftElfmfntCount();
        publid int  gftElfmfntCount();
        publid int  gftElfmfntCount();
        publid int  gftLowfrBoundAt(int i);
        publid int  gftLowfrBoundAt(int i);
        publid int  gftLowfrBoundAt(int i);
        publid int  gftLowfrBoundAt(int i);
        publid int  gftLowfrBoundAt(int i);
        publid int  gftUppfrBoundAt(int i);
        publid int  gftUppfrBoundAt(int i);
        publid int  gftUppfrBoundAt(int i);
        publid int  gftUppfrBoundAt(int i);
        publid int  gftUppfrBoundAt(int i);
        publid void sftSizfAt(int nfwSizf, int i);
        publid void sftSizfAt(int nfwSizf, int i);
        publid void sftSizfAt(int nfwSizf, int i);
        publid void sftSizfAt(int nfwSizf, int i);
        publid void sftSizfAt(int nfwSizf, int i);
    }
    }
    }
    }
    }





    privbtf intfrfbdf Rfsizbblf3 fxtfnds Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf3 fxtfnds Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf3 fxtfnds Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf3 fxtfnds Rfsizbblf2 {
    privbtf intfrfbdf Rfsizbblf3 fxtfnds Rfsizbblf2 {
        publid int  gftMidPointAt(int i);
        publid int  gftMidPointAt(int i);
        publid int  gftMidPointAt(int i);
        publid int  gftMidPointAt(int i);
        publid int  gftMidPointAt(int i);
    }
    }
    }
    }
    }










    privbtf void bdjustSizfs(long tbrgft, finbl Rfsizbblf3 r, boolfbn invfrsf) {
    privbtf void bdjustSizfs(long tbrgft, finbl Rfsizbblf3 r, boolfbn invfrsf) {
    privbtf void bdjustSizfs(long tbrgft, finbl Rfsizbblf3 r, boolfbn invfrsf) {
    privbtf void bdjustSizfs(long tbrgft, finbl Rfsizbblf3 r, boolfbn invfrsf) {
    privbtf void bdjustSizfs(long tbrgft, finbl Rfsizbblf3 r, boolfbn invfrsf) {
        int N = r.gftElfmfntCount();
        int N = r.gftElfmfntCount();
        int N = r.gftElfmfntCount();
        int N = r.gftElfmfntCount();
        int N = r.gftElfmfntCount();
        long totblPrfffrrfd = 0;
        long totblPrfffrrfd = 0;
        long totblPrfffrrfd = 0;
        long totblPrfffrrfd = 0;
        long totblPrfffrrfd = 0;
        for(int i = 0; i < N; i++) {
        for(int i = 0; i < N; i++) {
        for(int i = 0; i < N; i++) {
        for(int i = 0; i < N; i++) {
        for(int i = 0; i < N; i++) {
            totblPrfffrrfd += r.gftMidPointAt(i);
            totblPrfffrrfd += r.gftMidPointAt(i);
            totblPrfffrrfd += r.gftMidPointAt(i);
            totblPrfffrrfd += r.gftMidPointAt(i);
            totblPrfffrrfd += r.gftMidPointAt(i);
        }
        }
        }
        }
        }
        Rfsizbblf2 s;
        Rfsizbblf2 s;
        Rfsizbblf2 s;
        Rfsizbblf2 s;
        Rfsizbblf2 s;
        if ((tbrgft < totblPrfffrrfd) == !invfrsf) {
        if ((tbrgft < totblPrfffrrfd) == !invfrsf) {
        if ((tbrgft < totblPrfffrrfd) == !invfrsf) {
        if ((tbrgft < totblPrfffrrfd) == !invfrsf) {
        if ((tbrgft < totblPrfffrrfd) == !invfrsf) {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftLowfrBoundAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftLowfrBoundAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftLowfrBoundAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftLowfrBoundAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftLowfrBoundAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }





            };
            };
            };
            };
            };
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
            s = nfw Rfsizbblf2() {
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftElfmfntCount()      { rfturn r.gftElfmfntCount(); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftLowfrBoundAt(int i) { rfturn r.gftMidPointAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftUppfrBoundAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftUppfrBoundAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftUppfrBoundAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftUppfrBoundAt(i); }
                publid int  gftUppfrBoundAt(int i) { rfturn r.gftUppfrBoundAt(i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }
                publid void sftSizfAt(int nfwSizf, int i) { r.sftSizfAt(nfwSizf, i); }





            };
            };
            };
            };
            };
        }
        }
        }
        }
        }
        bdjustSizfs(tbrgft, s, !invfrsf);
        bdjustSizfs(tbrgft, s, !invfrsf);
        bdjustSizfs(tbrgft, s, !invfrsf);
        bdjustSizfs(tbrgft, s, !invfrsf);
        bdjustSizfs(tbrgft, s, !invfrsf);
    }
    }
    }
    }
    }





    privbtf void bdjustSizfs(long tbrgft, Rfsizbblf2 r, boolfbn limitToRbngf) {
    privbtf void bdjustSizfs(long tbrgft, Rfsizbblf2 r, boolfbn limitToRbngf) {
    privbtf void bdjustSizfs(long tbrgft, Rfsizbblf2 r, boolfbn limitToRbngf) {
    privbtf void bdjustSizfs(long tbrgft, Rfsizbblf2 r, boolfbn limitToRbngf) {
    privbtf void bdjustSizfs(long tbrgft, Rfsizbblf2 r, boolfbn limitToRbngf) {
        long totblLowfrBound = 0;
        long totblLowfrBound = 0;
        long totblLowfrBound = 0;
        long totblLowfrBound = 0;
        long totblLowfrBound = 0;
        long totblUppfrBound = 0;
        long totblUppfrBound = 0;
        long totblUppfrBound = 0;
        long totblUppfrBound = 0;
        long totblUppfrBound = 0;
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
            totblLowfrBound += r.gftLowfrBoundAt(i);
            totblLowfrBound += r.gftLowfrBoundAt(i);
            totblLowfrBound += r.gftLowfrBoundAt(i);
            totblLowfrBound += r.gftLowfrBoundAt(i);
            totblLowfrBound += r.gftLowfrBoundAt(i);
            totblUppfrBound += r.gftUppfrBoundAt(i);
            totblUppfrBound += r.gftUppfrBoundAt(i);
            totblUppfrBound += r.gftUppfrBoundAt(i);
            totblUppfrBound += r.gftUppfrBoundAt(i);
            totblUppfrBound += r.gftUppfrBoundAt(i);
        }
        }
        }
        }
        }





        if (limitToRbngf) {
        if (limitToRbngf) {
        if (limitToRbngf) {
        if (limitToRbngf) {
        if (limitToRbngf) {
            tbrgft = Mbti.min(Mbti.mbx(totblLowfrBound, tbrgft), totblUppfrBound);
            tbrgft = Mbti.min(Mbti.mbx(totblLowfrBound, tbrgft), totblUppfrBound);
            tbrgft = Mbti.min(Mbti.mbx(totblLowfrBound, tbrgft), totblUppfrBound);
            tbrgft = Mbti.min(Mbti.mbx(totblLowfrBound, tbrgft), totblUppfrBound);
            tbrgft = Mbti.min(Mbti.mbx(totblLowfrBound, tbrgft), totblUppfrBound);
        }
        }
        }
        }
        }





        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
        for(int i = 0; i < r.gftElfmfntCount(); i++) {
            int lowfrBound = r.gftLowfrBoundAt(i);
            int lowfrBound = r.gftLowfrBoundAt(i);
            int lowfrBound = r.gftLowfrBoundAt(i);
            int lowfrBound = r.gftLowfrBoundAt(i);
            int lowfrBound = r.gftLowfrBoundAt(i);
            int uppfrBound = r.gftUppfrBoundAt(i);
            int uppfrBound = r.gftUppfrBoundAt(i);
            int uppfrBound = r.gftUppfrBoundAt(i);
            int uppfrBound = r.gftUppfrBoundAt(i);
            int uppfrBound = r.gftUppfrBoundAt(i);
            // Cifdk for zfro. Tiis ibppfns wifn tif distribution of tif dfltb
            // Cifdk for zfro. Tiis ibppfns wifn tif distribution of tif dfltb
            // Cifdk for zfro. Tiis ibppfns wifn tif distribution of tif dfltb
            // Cifdk for zfro. Tiis ibppfns wifn tif distribution of tif dfltb
            // Cifdk for zfro. Tiis ibppfns wifn tif distribution of tif dfltb
            // finisifs fbrly duf to b sfrifs of "fixfd" fntrifs bt tif fnd.
            // finisifs fbrly duf to b sfrifs of "fixfd" fntrifs bt tif fnd.
            // finisifs fbrly duf to b sfrifs of "fixfd" fntrifs bt tif fnd.
            // finisifs fbrly duf to b sfrifs of "fixfd" fntrifs bt tif fnd.
            // finisifs fbrly duf to b sfrifs of "fixfd" fntrifs bt tif fnd.
            // In tiis dbsf, lowfrBound == uppfrBound, for bll subsfqufnt tfrms.
            // In tiis dbsf, lowfrBound == uppfrBound, for bll subsfqufnt tfrms.
            // In tiis dbsf, lowfrBound == uppfrBound, for bll subsfqufnt tfrms.
            // In tiis dbsf, lowfrBound == uppfrBound, for bll subsfqufnt tfrms.
            // In tiis dbsf, lowfrBound == uppfrBound, for bll subsfqufnt tfrms.
            int nfwSizf;
            int nfwSizf;
            int nfwSizf;
            int nfwSizf;
            int nfwSizf;
            if (totblLowfrBound == totblUppfrBound) {
            if (totblLowfrBound == totblUppfrBound) {
            if (totblLowfrBound == totblUppfrBound) {
            if (totblLowfrBound == totblUppfrBound) {
            if (totblLowfrBound == totblUppfrBound) {
                nfwSizf = lowfrBound;
                nfwSizf = lowfrBound;
                nfwSizf = lowfrBound;
                nfwSizf = lowfrBound;
                nfwSizf = lowfrBound;
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                doublf f = (doublf)(tbrgft - totblLowfrBound)/(totblUppfrBound - totblLowfrBound);
                doublf f = (doublf)(tbrgft - totblLowfrBound)/(totblUppfrBound - totblLowfrBound);
                doublf f = (doublf)(tbrgft - totblLowfrBound)/(totblUppfrBound - totblLowfrBound);
                doublf f = (doublf)(tbrgft - totblLowfrBound)/(totblUppfrBound - totblLowfrBound);
                doublf f = (doublf)(tbrgft - totblLowfrBound)/(totblUppfrBound - totblLowfrBound);
                nfwSizf = (int)Mbti.round(lowfrBound+f*(uppfrBound - lowfrBound));
                nfwSizf = (int)Mbti.round(lowfrBound+f*(uppfrBound - lowfrBound));
                nfwSizf = (int)Mbti.round(lowfrBound+f*(uppfrBound - lowfrBound));
                nfwSizf = (int)Mbti.round(lowfrBound+f*(uppfrBound - lowfrBound));
                nfwSizf = (int)Mbti.round(lowfrBound+f*(uppfrBound - lowfrBound));
                // Wf'd nffd to round mbnublly in bn bll intfgfr vfrsion.
                // Wf'd nffd to round mbnublly in bn bll intfgfr vfrsion.
                // Wf'd nffd to round mbnublly in bn bll intfgfr vfrsion.
                // Wf'd nffd to round mbnublly in bn bll intfgfr vfrsion.
                // Wf'd nffd to round mbnublly in bn bll intfgfr vfrsion.
                // sizf[i] = (int)(((totblUppfrBound - tbrgft) * lowfrBound +
                // sizf[i] = (int)(((totblUppfrBound - tbrgft) * lowfrBound +
                // sizf[i] = (int)(((totblUppfrBound - tbrgft) * lowfrBound +
                // sizf[i] = (int)(((totblUppfrBound - tbrgft) * lowfrBound +
                // sizf[i] = (int)(((totblUppfrBound - tbrgft) * lowfrBound +
                //     (tbrgft - totblLowfrBound) * uppfrBound)/(totblUppfrBound-totblLowfrBound));
                //     (tbrgft - totblLowfrBound) * uppfrBound)/(totblUppfrBound-totblLowfrBound));
                //     (tbrgft - totblLowfrBound) * uppfrBound)/(totblUppfrBound-totblLowfrBound));
                //     (tbrgft - totblLowfrBound) * uppfrBound)/(totblUppfrBound-totblLowfrBound));
                //     (tbrgft - totblLowfrBound) * uppfrBound)/(totblUppfrBound-totblLowfrBound));
            }
            }
            }
            }
            }
            r.sftSizfAt(nfwSizf, i);
            r.sftSizfAt(nfwSizf, i);
            r.sftSizfAt(nfwSizf, i);
            r.sftSizfAt(nfwSizf, i);
            r.sftSizfAt(nfwSizf, i);
            tbrgft -= nfwSizf;
            tbrgft -= nfwSizf;
            tbrgft -= nfwSizf;
            tbrgft -= nfwSizf;
            tbrgft -= nfwSizf;
            totblLowfrBound -= lowfrBound;
            totblLowfrBound -= lowfrBound;
            totblLowfrBound -= lowfrBound;
            totblLowfrBound -= lowfrBound;
            totblLowfrBound -= lowfrBound;
            totblUppfrBound -= uppfrBound;
            totblUppfrBound -= uppfrBound;
            totblUppfrBound -= uppfrBound;
            totblUppfrBound -= uppfrBound;
            totblUppfrBound -= uppfrBound;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * mftiod in ordfr to bllow tif rfndfrfr's tips to bf usfd
     * mftiod in ordfr to bllow tif rfndfrfr's tips to bf usfd
     * mftiod in ordfr to bllow tif rfndfrfr's tips to bf usfd
     * mftiod in ordfr to bllow tif rfndfrfr's tips to bf usfd
     * mftiod in ordfr to bllow tif rfndfrfr's tips to bf usfd
     * if it ibs tfxt sft.
     * if it ibs tfxt sft.
     * if it ibs tfxt sft.
     * if it ibs tfxt sft.
     * if it ibs tfxt sft.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b> For <dodf>JTbblf</dodf> to propfrly displby
     * <b>Notf:</b> For <dodf>JTbblf</dodf> to propfrly displby
     * <b>Notf:</b> For <dodf>JTbblf</dodf> to propfrly displby
     * <b>Notf:</b> For <dodf>JTbblf</dodf> to propfrly displby
     * <b>Notf:</b> For <dodf>JTbblf</dodf> to propfrly displby
     * tooltips of its rfndfrfrs
     * tooltips of its rfndfrfrs
     * tooltips of its rfndfrfrs
     * tooltips of its rfndfrfrs
     * tooltips of its rfndfrfrs
     * <dodf>JTbblf</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>JTbblf</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>JTbblf</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>JTbblf</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>JTbblf</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>ToolTipMbnbgfr</dodf>.
     * <dodf>ToolTipMbnbgfr</dodf>.
     * <dodf>ToolTipMbnbgfr</dodf>.
     * <dodf>ToolTipMbnbgfr</dodf>.
     * <dodf>ToolTipMbnbgfr</dodf>.
     * Tiis is donf butombtidblly in <dodf>initiblizfLodblVbrs</dodf>,
     * Tiis is donf butombtidblly in <dodf>initiblizfLodblVbrs</dodf>,
     * Tiis is donf butombtidblly in <dodf>initiblizfLodblVbrs</dodf>,
     * Tiis is donf butombtidblly in <dodf>initiblizfLodblVbrs</dodf>,
     * Tiis is donf butombtidblly in <dodf>initiblizfLodblVbrs</dodf>,
     * but if bt b lbtfr point <dodf>JTbblf</dodf> is told
     * but if bt b lbtfr point <dodf>JTbblf</dodf> is told
     * but if bt b lbtfr point <dodf>JTbblf</dodf> is told
     * but if bt b lbtfr point <dodf>JTbblf</dodf> is told
     * but if bt b lbtfr point <dodf>JTbblf</dodf> is told
     * <dodf>sftToolTipTfxt(null)</dodf> it will unrfgistfr tif tbblf
     * <dodf>sftToolTipTfxt(null)</dodf> it will unrfgistfr tif tbblf
     * <dodf>sftToolTipTfxt(null)</dodf> it will unrfgistfr tif tbblf
     * <dodf>sftToolTipTfxt(null)</dodf> it will unrfgistfr tif tbblf
     * <dodf>sftToolTipTfxt(null)</dodf> it will unrfgistfr tif tbblf
     * domponfnt, bnd no tips from rfndfrfrs will displby bnymorf.
     * domponfnt, bnd no tips from rfndfrfrs will displby bnymorf.
     * domponfnt, bnd no tips from rfndfrfrs will displby bnymorf.
     * domponfnt, bnd no tips from rfndfrfrs will displby bnymorf.
     * domponfnt, bnd no tips from rfndfrfrs will displby bnymorf.
     *
     *
     *
     *
     *
     * @sff JComponfnt#gftToolTipTfxt
     * @sff JComponfnt#gftToolTipTfxt
     * @sff JComponfnt#gftToolTipTfxt
     * @sff JComponfnt#gftToolTipTfxt
     * @sff JComponfnt#gftToolTipTfxt
     */
     */
     */
     */
     */
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
        String tip = null;
        String tip = null;
        String tip = null;
        String tip = null;
        String tip = null;
        Point p = fvfnt.gftPoint();
        Point p = fvfnt.gftPoint();
        Point p = fvfnt.gftPoint();
        Point p = fvfnt.gftPoint();
        Point p = fvfnt.gftPoint();





        // Lodbtf tif rfndfrfr undfr tif fvfnt lodbtion
        // Lodbtf tif rfndfrfr undfr tif fvfnt lodbtion
        // Lodbtf tif rfndfrfr undfr tif fvfnt lodbtion
        // Lodbtf tif rfndfrfr undfr tif fvfnt lodbtion
        // Lodbtf tif rfndfrfr undfr tif fvfnt lodbtion
        int iitColumnIndfx = dolumnAtPoint(p);
        int iitColumnIndfx = dolumnAtPoint(p);
        int iitColumnIndfx = dolumnAtPoint(p);
        int iitColumnIndfx = dolumnAtPoint(p);
        int iitColumnIndfx = dolumnAtPoint(p);
        int iitRowIndfx = rowAtPoint(p);
        int iitRowIndfx = rowAtPoint(p);
        int iitRowIndfx = rowAtPoint(p);
        int iitRowIndfx = rowAtPoint(p);
        int iitRowIndfx = rowAtPoint(p);





        if ((iitColumnIndfx != -1) && (iitRowIndfx != -1)) {
        if ((iitColumnIndfx != -1) && (iitRowIndfx != -1)) {
        if ((iitColumnIndfx != -1) && (iitRowIndfx != -1)) {
        if ((iitColumnIndfx != -1) && (iitRowIndfx != -1)) {
        if ((iitColumnIndfx != -1) && (iitRowIndfx != -1)) {
            TbblfCfllRfndfrfr rfndfrfr = gftCfllRfndfrfr(iitRowIndfx, iitColumnIndfx);
            TbblfCfllRfndfrfr rfndfrfr = gftCfllRfndfrfr(iitRowIndfx, iitColumnIndfx);
            TbblfCfllRfndfrfr rfndfrfr = gftCfllRfndfrfr(iitRowIndfx, iitColumnIndfx);
            TbblfCfllRfndfrfr rfndfrfr = gftCfllRfndfrfr(iitRowIndfx, iitColumnIndfx);
            TbblfCfllRfndfrfr rfndfrfr = gftCfllRfndfrfr(iitRowIndfx, iitColumnIndfx);
            Componfnt domponfnt = prfpbrfRfndfrfr(rfndfrfr, iitRowIndfx, iitColumnIndfx);
            Componfnt domponfnt = prfpbrfRfndfrfr(rfndfrfr, iitRowIndfx, iitColumnIndfx);
            Componfnt domponfnt = prfpbrfRfndfrfr(rfndfrfr, iitRowIndfx, iitColumnIndfx);
            Componfnt domponfnt = prfpbrfRfndfrfr(rfndfrfr, iitRowIndfx, iitColumnIndfx);
            Componfnt domponfnt = prfpbrfRfndfrfr(rfndfrfr, iitRowIndfx, iitColumnIndfx);





            // Now ibvf to sff if tif domponfnt is b JComponfnt bfforf
            // Now ibvf to sff if tif domponfnt is b JComponfnt bfforf
            // Now ibvf to sff if tif domponfnt is b JComponfnt bfforf
            // Now ibvf to sff if tif domponfnt is b JComponfnt bfforf
            // Now ibvf to sff if tif domponfnt is b JComponfnt bfforf
            // gftting tif tip
            // gftting tif tip
            // gftting tif tip
            // gftting tif tip
            // gftting tif tip
            if (domponfnt instbndfof JComponfnt) {
            if (domponfnt instbndfof JComponfnt) {
            if (domponfnt instbndfof JComponfnt) {
            if (domponfnt instbndfof JComponfnt) {
            if (domponfnt instbndfof JComponfnt) {
                // Convfrt tif fvfnt to tif rfndfrfr's doordinbtf systfm
                // Convfrt tif fvfnt to tif rfndfrfr's doordinbtf systfm
                // Convfrt tif fvfnt to tif rfndfrfr's doordinbtf systfm
                // Convfrt tif fvfnt to tif rfndfrfr's doordinbtf systfm
                // Convfrt tif fvfnt to tif rfndfrfr's doordinbtf systfm
                Rfdtbnglf dfllRfdt = gftCfllRfdt(iitRowIndfx, iitColumnIndfx, fblsf);
                Rfdtbnglf dfllRfdt = gftCfllRfdt(iitRowIndfx, iitColumnIndfx, fblsf);
                Rfdtbnglf dfllRfdt = gftCfllRfdt(iitRowIndfx, iitColumnIndfx, fblsf);
                Rfdtbnglf dfllRfdt = gftCfllRfdt(iitRowIndfx, iitColumnIndfx, fblsf);
                Rfdtbnglf dfllRfdt = gftCfllRfdt(iitRowIndfx, iitColumnIndfx, fblsf);
                p.trbnslbtf(-dfllRfdt.x, -dfllRfdt.y);
                p.trbnslbtf(-dfllRfdt.x, -dfllRfdt.y);
                p.trbnslbtf(-dfllRfdt.x, -dfllRfdt.y);
                p.trbnslbtf(-dfllRfdt.x, -dfllRfdt.y);
                p.trbnslbtf(-dfllRfdt.x, -dfllRfdt.y);
                MousfEvfnt nfwEvfnt = nfw MousfEvfnt(domponfnt, fvfnt.gftID(),
                MousfEvfnt nfwEvfnt = nfw MousfEvfnt(domponfnt, fvfnt.gftID(),
                MousfEvfnt nfwEvfnt = nfw MousfEvfnt(domponfnt, fvfnt.gftID(),
                MousfEvfnt nfwEvfnt = nfw MousfEvfnt(domponfnt, fvfnt.gftID(),
                MousfEvfnt nfwEvfnt = nfw MousfEvfnt(domponfnt, fvfnt.gftID(),
                                          fvfnt.gftWifn(), fvfnt.gftModififrs(),
                                          fvfnt.gftWifn(), fvfnt.gftModififrs(),
                                          fvfnt.gftWifn(), fvfnt.gftModififrs(),
                                          fvfnt.gftWifn(), fvfnt.gftModififrs(),
                                          fvfnt.gftWifn(), fvfnt.gftModififrs(),
                                          p.x, p.y,
                                          p.x, p.y,
                                          p.x, p.y,
                                          p.x, p.y,
                                          p.x, p.y,
                                          fvfnt.gftXOnSdrffn(),
                                          fvfnt.gftXOnSdrffn(),
                                          fvfnt.gftXOnSdrffn(),
                                          fvfnt.gftXOnSdrffn(),
                                          fvfnt.gftXOnSdrffn(),
                                          fvfnt.gftYOnSdrffn(),
                                          fvfnt.gftYOnSdrffn(),
                                          fvfnt.gftYOnSdrffn(),
                                          fvfnt.gftYOnSdrffn(),
                                          fvfnt.gftYOnSdrffn(),
                                          fvfnt.gftClidkCount(),
                                          fvfnt.gftClidkCount(),
                                          fvfnt.gftClidkCount(),
                                          fvfnt.gftClidkCount(),
                                          fvfnt.gftClidkCount(),
                                          fvfnt.isPopupTriggfr(),
                                          fvfnt.isPopupTriggfr(),
                                          fvfnt.isPopupTriggfr(),
                                          fvfnt.isPopupTriggfr(),
                                          fvfnt.isPopupTriggfr(),
                                          MousfEvfnt.NOBUTTON);
                                          MousfEvfnt.NOBUTTON);
                                          MousfEvfnt.NOBUTTON);
                                          MousfEvfnt.NOBUTTON);
                                          MousfEvfnt.NOBUTTON);





                tip = ((JComponfnt)domponfnt).gftToolTipTfxt(nfwEvfnt);
                tip = ((JComponfnt)domponfnt).gftToolTipTfxt(nfwEvfnt);
                tip = ((JComponfnt)domponfnt).gftToolTipTfxt(nfwEvfnt);
                tip = ((JComponfnt)domponfnt).gftToolTipTfxt(nfwEvfnt);
                tip = ((JComponfnt)domponfnt).gftToolTipTfxt(nfwEvfnt);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        if (tip == null)
        if (tip == null)
        if (tip == null)
        if (tip == null)
        if (tip == null)
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();





        rfturn tip;
        rfturn tip;
        rfturn tip;
        rfturn tip;
        rfturn tip;
    }
    }
    }
    }
    }





//
//
//
//
//
// Editing Support
// Editing Support
// Editing Support
// Editing Support
// Editing Support
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Sfts wiftifr fditors in tiis JTbblf gft tif kfybobrd fodus
     * Sfts wiftifr fditors in tiis JTbblf gft tif kfybobrd fodus
     * Sfts wiftifr fditors in tiis JTbblf gft tif kfybobrd fodus
     * Sfts wiftifr fditors in tiis JTbblf gft tif kfybobrd fodus
     * Sfts wiftifr fditors in tiis JTbblf gft tif kfybobrd fodus
     * wifn bn fditor is bdtivbtfd bs b rfsult of tif JTbblf
     * wifn bn fditor is bdtivbtfd bs b rfsult of tif JTbblf
     * wifn bn fditor is bdtivbtfd bs b rfsult of tif JTbblf
     * wifn bn fditor is bdtivbtfd bs b rfsult of tif JTbblf
     * wifn bn fditor is bdtivbtfd bs b rfsult of tif JTbblf
     * forwbrding kfybobrd fvfnts for b dfll.
     * forwbrding kfybobrd fvfnts for b dfll.
     * forwbrding kfybobrd fvfnts for b dfll.
     * forwbrding kfybobrd fvfnts for b dfll.
     * forwbrding kfybobrd fvfnts for b dfll.
     * By dffbult, tiis propfrty is fblsf, bnd tif JTbblf
     * By dffbult, tiis propfrty is fblsf, bnd tif JTbblf
     * By dffbult, tiis propfrty is fblsf, bnd tif JTbblf
     * By dffbult, tiis propfrty is fblsf, bnd tif JTbblf
     * By dffbult, tiis propfrty is fblsf, bnd tif JTbblf
     * rftbins tif fodus unlfss tif dfll is dlidkfd.
     * rftbins tif fodus unlfss tif dfll is dlidkfd.
     * rftbins tif fodus unlfss tif dfll is dlidkfd.
     * rftbins tif fodus unlfss tif dfll is dlidkfd.
     * rftbins tif fodus unlfss tif dfll is dlidkfd.
     *
     *
     *
     *
     *
     * @pbrbm surrfndfrsFodusOnKfystrokf truf if tif fditor siould gft tif fodus
     * @pbrbm surrfndfrsFodusOnKfystrokf truf if tif fditor siould gft tif fodus
     * @pbrbm surrfndfrsFodusOnKfystrokf truf if tif fditor siould gft tif fodus
     * @pbrbm surrfndfrsFodusOnKfystrokf truf if tif fditor siould gft tif fodus
     * @pbrbm surrfndfrsFodusOnKfystrokf truf if tif fditor siould gft tif fodus
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     * @sff #gftSurrfndfrsFodusOnKfystrokf
     * @sff #gftSurrfndfrsFodusOnKfystrokf
     * @sff #gftSurrfndfrsFodusOnKfystrokf
     * @sff #gftSurrfndfrsFodusOnKfystrokf
     * @sff #gftSurrfndfrsFodusOnKfystrokf
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid void sftSurrfndfrsFodusOnKfystrokf(boolfbn surrfndfrsFodusOnKfystrokf) {
    publid void sftSurrfndfrsFodusOnKfystrokf(boolfbn surrfndfrsFodusOnKfystrokf) {
    publid void sftSurrfndfrsFodusOnKfystrokf(boolfbn surrfndfrsFodusOnKfystrokf) {
    publid void sftSurrfndfrsFodusOnKfystrokf(boolfbn surrfndfrsFodusOnKfystrokf) {
    publid void sftSurrfndfrsFodusOnKfystrokf(boolfbn surrfndfrsFodusOnKfystrokf) {
        tiis.surrfndfrsFodusOnKfystrokf = surrfndfrsFodusOnKfystrokf;
        tiis.surrfndfrsFodusOnKfystrokf = surrfndfrsFodusOnKfystrokf;
        tiis.surrfndfrsFodusOnKfystrokf = surrfndfrsFodusOnKfystrokf;
        tiis.surrfndfrsFodusOnKfystrokf = surrfndfrsFodusOnKfystrokf;
        tiis.surrfndfrsFodusOnKfystrokf = surrfndfrsFodusOnKfystrokf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif fditor siould gft tif fodus
     * Rfturns truf if tif fditor siould gft tif fodus
     * Rfturns truf if tif fditor siould gft tif fodus
     * Rfturns truf if tif fditor siould gft tif fodus
     * Rfturns truf if tif fditor siould gft tif fodus
     * wifn kfystrokfs dbusf tif fditor to bf bdtivbtfd
     * wifn kfystrokfs dbusf tif fditor to bf bdtivbtfd
     * wifn kfystrokfs dbusf tif fditor to bf bdtivbtfd
     * wifn kfystrokfs dbusf tif fditor to bf bdtivbtfd
     * wifn kfystrokfs dbusf tif fditor to bf bdtivbtfd
     *
     *
     *
     *
     *
     * @rfturn  truf if tif fditor siould gft tif fodus
     * @rfturn  truf if tif fditor siould gft tif fodus
     * @rfturn  truf if tif fditor siould gft tif fodus
     * @rfturn  truf if tif fditor siould gft tif fodus
     * @rfturn  truf if tif fditor siould gft tif fodus
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          wifn kfystrokfs dbusf tif fditor to bf
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *          bdtivbtfd
     *
     *
     *
     *
     *
     * @sff #sftSurrfndfrsFodusOnKfystrokf
     * @sff #sftSurrfndfrsFodusOnKfystrokf
     * @sff #sftSurrfndfrsFodusOnKfystrokf
     * @sff #sftSurrfndfrsFodusOnKfystrokf
     * @sff #sftSurrfndfrsFodusOnKfystrokf
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid boolfbn gftSurrfndfrsFodusOnKfystrokf() {
    publid boolfbn gftSurrfndfrsFodusOnKfystrokf() {
    publid boolfbn gftSurrfndfrsFodusOnKfystrokf() {
    publid boolfbn gftSurrfndfrsFodusOnKfystrokf() {
    publid boolfbn gftSurrfndfrsFodusOnKfystrokf() {
        rfturn surrfndfrsFodusOnKfystrokf;
        rfturn surrfndfrsFodusOnKfystrokf;
        rfturn surrfndfrsFodusOnKfystrokf;
        rfturn surrfndfrsFodusOnKfystrokf;
        rfturn surrfndfrsFodusOnKfystrokf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * Notf tibt tiis is b donvfnifndf mftiod for
     * Notf tibt tiis is b donvfnifndf mftiod for
     * Notf tibt tiis is b donvfnifndf mftiod for
     * Notf tibt tiis is b donvfnifndf mftiod for
     * Notf tibt tiis is b donvfnifndf mftiod for
     * <dodf>fditCfllAt(int, int, null)</dodf>.
     * <dodf>fditCfllAt(int, int, null)</dodf>.
     * <dodf>fditCfllAt(int, int, null)</dodf>.
     * <dodf>fditCfllAt(int, int, null)</dodf>.
     * <dodf>fditCfllAt(int, int, null)</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   row                             tif row to bf fditfd
     * @pbrbm   row                             tif row to bf fditfd
     * @pbrbm   row                             tif row to bf fditfd
     * @pbrbm   row                             tif row to bf fditfd
     * @pbrbm   row                             tif row to bf fditfd
     * @pbrbm   dolumn                          tif dolumn to bf fditfd
     * @pbrbm   dolumn                          tif dolumn to bf fditfd
     * @pbrbm   dolumn                          tif dolumn to bf fditfd
     * @pbrbm   dolumn                          tif dolumn to bf fditfd
     * @pbrbm   dolumn                          tif dolumn to bf fditfd
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     */
     */
     */
     */
     */
    publid boolfbn fditCfllAt(int row, int dolumn) {
    publid boolfbn fditCfllAt(int row, int dolumn) {
    publid boolfbn fditCfllAt(int row, int dolumn) {
    publid boolfbn fditCfllAt(int row, int dolumn) {
    publid boolfbn fditCfllAt(int row, int dolumn) {
        rfturn fditCfllAt(row, dolumn, null);
        rfturn fditCfllAt(row, dolumn, null);
        rfturn fditCfllAt(row, dolumn, null);
        rfturn fditCfllAt(row, dolumn, null);
        rfturn fditCfllAt(row, dolumn, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * Progrbmmbtidblly stbrts fditing tif dfll bt <dodf>row</dodf> bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * <dodf>dolumn</dodf>, if tiosf indidfs brf in tif vblid rbngf, bnd
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * tif dfll bt tiosf indidfs is fditbblf.
     * To prfvfnt tif <dodf>JTbblf</dodf> from
     * To prfvfnt tif <dodf>JTbblf</dodf> from
     * To prfvfnt tif <dodf>JTbblf</dodf> from
     * To prfvfnt tif <dodf>JTbblf</dodf> from
     * To prfvfnt tif <dodf>JTbblf</dodf> from
     * fditing b pbrtidulbr tbblf, dolumn or dfll vbluf, rfturn fblsf from
     * fditing b pbrtidulbr tbblf, dolumn or dfll vbluf, rfturn fblsf from
     * fditing b pbrtidulbr tbblf, dolumn or dfll vbluf, rfturn fblsf from
     * fditing b pbrtidulbr tbblf, dolumn or dfll vbluf, rfturn fblsf from
     * fditing b pbrtidulbr tbblf, dolumn or dfll vbluf, rfturn fblsf from
     * tif <dodf>isCfllEditbblf</dodf> mftiod in tif <dodf>TbblfModfl</dodf>
     * tif <dodf>isCfllEditbblf</dodf> mftiod in tif <dodf>TbblfModfl</dodf>
     * tif <dodf>isCfllEditbblf</dodf> mftiod in tif <dodf>TbblfModfl</dodf>
     * tif <dodf>isCfllEditbblf</dodf> mftiod in tif <dodf>TbblfModfl</dodf>
     * tif <dodf>isCfllEditbblf</dodf> mftiod in tif <dodf>TbblfModfl</dodf>
     * intfrfbdf.
     * intfrfbdf.
     * intfrfbdf.
     * intfrfbdf.
     * intfrfbdf.
     *
     *
     *
     *
     *
     * @pbrbm   row     tif row to bf fditfd
     * @pbrbm   row     tif row to bf fditfd
     * @pbrbm   row     tif row to bf fditfd
     * @pbrbm   row     tif row to bf fditfd
     * @pbrbm   row     tif row to bf fditfd
     * @pbrbm   dolumn  tif dolumn to bf fditfd
     * @pbrbm   dolumn  tif dolumn to bf fditfd
     * @pbrbm   dolumn  tif dolumn to bf fditfd
     * @pbrbm   dolumn  tif dolumn to bf fditfd
     * @pbrbm   dolumn  tif dolumn to bf fditfd
     * @pbrbm   f       fvfnt to pbss into <dodf>siouldSflfdtCfll</dodf>;
     * @pbrbm   f       fvfnt to pbss into <dodf>siouldSflfdtCfll</dodf>;
     * @pbrbm   f       fvfnt to pbss into <dodf>siouldSflfdtCfll</dodf>;
     * @pbrbm   f       fvfnt to pbss into <dodf>siouldSflfdtCfll</dodf>;
     * @pbrbm   f       fvfnt to pbss into <dodf>siouldSflfdtCfll</dodf>;
     *                  notf tibt bs of Jbvb 2 plbtform v1.2, tif dbll to
     *                  notf tibt bs of Jbvb 2 plbtform v1.2, tif dbll to
     *                  notf tibt bs of Jbvb 2 plbtform v1.2, tif dbll to
     *                  notf tibt bs of Jbvb 2 plbtform v1.2, tif dbll to
     *                  notf tibt bs of Jbvb 2 plbtform v1.2, tif dbll to
     *                  <dodf>siouldSflfdtCfll</dodf> is no longfr mbdf
     *                  <dodf>siouldSflfdtCfll</dodf> is no longfr mbdf
     *                  <dodf>siouldSflfdtCfll</dodf> is no longfr mbdf
     *                  <dodf>siouldSflfdtCfll</dodf> is no longfr mbdf
     *                  <dodf>siouldSflfdtCfll</dodf> is no longfr mbdf
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     * @rfturn  fblsf if for bny rfbson tif dfll dbnnot bf fditfd,
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     *                or if tif indidfs brf invblid
     */
     */
     */
     */
     */
    publid boolfbn fditCfllAt(int row, int dolumn, EvfntObjfdt f){
    publid boolfbn fditCfllAt(int row, int dolumn, EvfntObjfdt f){
    publid boolfbn fditCfllAt(int row, int dolumn, EvfntObjfdt f){
    publid boolfbn fditCfllAt(int row, int dolumn, EvfntObjfdt f){
    publid boolfbn fditCfllAt(int row, int dolumn, EvfntObjfdt f){
        if (dfllEditor != null && !dfllEditor.stopCfllEditing()) {
        if (dfllEditor != null && !dfllEditor.stopCfllEditing()) {
        if (dfllEditor != null && !dfllEditor.stopCfllEditing()) {
        if (dfllEditor != null && !dfllEditor.stopCfllEditing()) {
        if (dfllEditor != null && !dfllEditor.stopCfllEditing()) {
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        }
        }
        }
        }
        }





        if (row < 0 || row >= gftRowCount() ||
        if (row < 0 || row >= gftRowCount() ||
        if (row < 0 || row >= gftRowCount() ||
        if (row < 0 || row >= gftRowCount() ||
        if (row < 0 || row >= gftRowCount() ||
            dolumn < 0 || dolumn >= gftColumnCount()) {
            dolumn < 0 || dolumn >= gftColumnCount()) {
            dolumn < 0 || dolumn >= gftColumnCount()) {
            dolumn < 0 || dolumn >= gftColumnCount()) {
            dolumn < 0 || dolumn >= gftColumnCount()) {
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        }
        }
        }
        }
        }





        if (!isCfllEditbblf(row, dolumn))
        if (!isCfllEditbblf(row, dolumn))
        if (!isCfllEditbblf(row, dolumn))
        if (!isCfllEditbblf(row, dolumn))
        if (!isCfllEditbblf(row, dolumn))
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;





        if (fditorRfmovfr == null) {
        if (fditorRfmovfr == null) {
        if (fditorRfmovfr == null) {
        if (fditorRfmovfr == null) {
        if (fditorRfmovfr == null) {
            KfybobrdFodusMbnbgfr fm =
            KfybobrdFodusMbnbgfr fm =
            KfybobrdFodusMbnbgfr fm =
            KfybobrdFodusMbnbgfr fm =
            KfybobrdFodusMbnbgfr fm =
                KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
                KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
                KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
                KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
                KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
            fditorRfmovfr = nfw CfllEditorRfmovfr(fm);
            fditorRfmovfr = nfw CfllEditorRfmovfr(fm);
            fditorRfmovfr = nfw CfllEditorRfmovfr(fm);
            fditorRfmovfr = nfw CfllEditorRfmovfr(fm);
            fditorRfmovfr = nfw CfllEditorRfmovfr(fm);
            fm.bddPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            fm.bddPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            fm.bddPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            fm.bddPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            fm.bddPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
        }
        }
        }
        }
        }





        TbblfCfllEditor fditor = gftCfllEditor(row, dolumn);
        TbblfCfllEditor fditor = gftCfllEditor(row, dolumn);
        TbblfCfllEditor fditor = gftCfllEditor(row, dolumn);
        TbblfCfllEditor fditor = gftCfllEditor(row, dolumn);
        TbblfCfllEditor fditor = gftCfllEditor(row, dolumn);
        if (fditor != null && fditor.isCfllEditbblf(f)) {
        if (fditor != null && fditor.isCfllEditbblf(f)) {
        if (fditor != null && fditor.isCfllEditbblf(f)) {
        if (fditor != null && fditor.isCfllEditbblf(f)) {
        if (fditor != null && fditor.isCfllEditbblf(f)) {
            fditorComp = prfpbrfEditor(fditor, row, dolumn);
            fditorComp = prfpbrfEditor(fditor, row, dolumn);
            fditorComp = prfpbrfEditor(fditor, row, dolumn);
            fditorComp = prfpbrfEditor(fditor, row, dolumn);
            fditorComp = prfpbrfEditor(fditor, row, dolumn);
            if (fditorComp == null) {
            if (fditorComp == null) {
            if (fditorComp == null) {
            if (fditorComp == null) {
            if (fditorComp == null) {
                rfmovfEditor();
                rfmovfEditor();
                rfmovfEditor();
                rfmovfEditor();
                rfmovfEditor();
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            fditorComp.sftBounds(gftCfllRfdt(row, dolumn, fblsf));
            fditorComp.sftBounds(gftCfllRfdt(row, dolumn, fblsf));
            fditorComp.sftBounds(gftCfllRfdt(row, dolumn, fblsf));
            fditorComp.sftBounds(gftCfllRfdt(row, dolumn, fblsf));
            fditorComp.sftBounds(gftCfllRfdt(row, dolumn, fblsf));
            bdd(fditorComp);
            bdd(fditorComp);
            bdd(fditorComp);
            bdd(fditorComp);
            bdd(fditorComp);
            fditorComp.vblidbtf();
            fditorComp.vblidbtf();
            fditorComp.vblidbtf();
            fditorComp.vblidbtf();
            fditorComp.vblidbtf();
            fditorComp.rfpbint();
            fditorComp.rfpbint();
            fditorComp.rfpbint();
            fditorComp.rfpbint();
            fditorComp.rfpbint();





            sftCfllEditor(fditor);
            sftCfllEditor(fditor);
            sftCfllEditor(fditor);
            sftCfllEditor(fditor);
            sftCfllEditor(fditor);
            sftEditingRow(row);
            sftEditingRow(row);
            sftEditingRow(row);
            sftEditingRow(row);
            sftEditingRow(row);
            sftEditingColumn(dolumn);
            sftEditingColumn(dolumn);
            sftEditingColumn(dolumn);
            sftEditingColumn(dolumn);
            sftEditingColumn(dolumn);
            fditor.bddCfllEditorListfnfr(tiis);
            fditor.bddCfllEditorListfnfr(tiis);
            fditor.bddCfllEditorListfnfr(tiis);
            fditor.bddCfllEditorListfnfr(tiis);
            fditor.bddCfllEditorListfnfr(tiis);





            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if b dfll is bfing fditfd.
     * Rfturns truf if b dfll is bfing fditfd.
     * Rfturns truf if b dfll is bfing fditfd.
     * Rfturns truf if b dfll is bfing fditfd.
     * Rfturns truf if b dfll is bfing fditfd.
     *
     *
     *
     *
     *
     * @rfturn  truf if tif tbblf is fditing b dfll
     * @rfturn  truf if tif tbblf is fditing b dfll
     * @rfturn  truf if tif tbblf is fditing b dfll
     * @rfturn  truf if tif tbblf is fditing b dfll
     * @rfturn  truf if tif tbblf is fditing b dfll
     * @sff     #fditingColumn
     * @sff     #fditingColumn
     * @sff     #fditingColumn
     * @sff     #fditingColumn
     * @sff     #fditingColumn
     * @sff     #fditingRow
     * @sff     #fditingRow
     * @sff     #fditingRow
     * @sff     #fditingRow
     * @sff     #fditingRow
     */
     */
     */
     */
     */
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
        rfturn dfllEditor != null;
        rfturn dfllEditor != null;
        rfturn dfllEditor != null;
        rfturn dfllEditor != null;
        rfturn dfllEditor != null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif domponfnt tibt is ibndling tif fditing sfssion.
     * Rfturns tif domponfnt tibt is ibndling tif fditing sfssion.
     * Rfturns tif domponfnt tibt is ibndling tif fditing sfssion.
     * Rfturns tif domponfnt tibt is ibndling tif fditing sfssion.
     * Rfturns tif domponfnt tibt is ibndling tif fditing sfssion.
     * If notiing is bfing fditfd, rfturns null.
     * If notiing is bfing fditfd, rfturns null.
     * If notiing is bfing fditfd, rfturns null.
     * If notiing is bfing fditfd, rfturns null.
     * If notiing is bfing fditfd, rfturns null.
     *
     *
     *
     *
     *
     * @rfturn  Componfnt ibndling fditing sfssion
     * @rfturn  Componfnt ibndling fditing sfssion
     * @rfturn  Componfnt ibndling fditing sfssion
     * @rfturn  Componfnt ibndling fditing sfssion
     * @rfturn  Componfnt ibndling fditing sfssion
     */
     */
     */
     */
     */
    publid Componfnt gftEditorComponfnt() {
    publid Componfnt gftEditorComponfnt() {
    publid Componfnt gftEditorComponfnt() {
    publid Componfnt gftEditorComponfnt() {
    publid Componfnt gftEditorComponfnt() {
        rfturn fditorComp;
        rfturn fditorComp;
        rfturn fditorComp;
        rfturn fditorComp;
        rfturn fditorComp;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     *
     *
     *
     *
     *
     * @rfturn  tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif dolumn tibt dontbins tif dfll durrfntly
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     */
     */
     */
     */
     */
    publid int gftEditingColumn() {
    publid int gftEditingColumn() {
    publid int gftEditingColumn() {
    publid int gftEditingColumn() {
    publid int gftEditingColumn() {
        rfturn fditingColumn;
        rfturn fditingColumn;
        rfturn fditingColumn;
        rfturn fditingColumn;
        rfturn fditingColumn;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indfx of tif row tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif row tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif row tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif row tibt dontbins tif dfll durrfntly
     * Rfturns tif indfx of tif row tibt dontbins tif dfll durrfntly
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     * bfing fditfd.  If notiing is bfing fditfd, rfturns -1.
     *
     *
     *
     *
     *
     * @rfturn  tif indfx of tif row tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif row tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif row tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif row tibt dontbins tif dfll durrfntly
     * @rfturn  tif indfx of tif row tibt dontbins tif dfll durrfntly
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     *          bfing fditfd; rfturns -1 if notiing bfing fditfd
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     */
     */
     */
     */
     */
    publid int gftEditingRow() {
    publid int gftEditingRow() {
    publid int gftEditingRow() {
    publid int gftEditingRow() {
    publid int gftEditingRow() {
        rfturn fditingRow;
        rfturn fditingRow;
        rfturn fditingRow;
        rfturn fditingRow;
        rfturn fditingRow;
    }
    }
    }
    }
    }





//
//
//
//
//
// Mbnbging TbblfUI
// Mbnbging TbblfUI
// Mbnbging TbblfUI
// Mbnbging TbblfUI
// Mbnbging TbblfUI
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TbblfUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TbblfUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TbblfUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TbblfUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TbblfUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     */
     */
     */
     */
     */
    publid TbblfUI gftUI() {
    publid TbblfUI gftUI() {
    publid TbblfUI gftUI() {
    publid TbblfUI gftUI() {
    publid TbblfUI gftUI() {
        rfturn (TbblfUI)ui;
        rfturn (TbblfUI)ui;
        rfturn (TbblfUI)ui;
        rfturn (TbblfUI)ui;
        rfturn (TbblfUI)ui;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt bnd rfpbints.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt bnd rfpbints.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt bnd rfpbints.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt bnd rfpbints.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt bnd rfpbints.
     *
     *
     *
     *
     *
     * @pbrbm ui  tif TbblfUI L&bmp;F objfdt
     * @pbrbm ui  tif TbblfUI L&bmp;F objfdt
     * @pbrbm ui  tif TbblfUI L&bmp;F objfdt
     * @pbrbm ui  tif TbblfUI L&bmp;F objfdt
     * @pbrbm ui  tif TbblfUI L&bmp;F objfdt
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     */
     */
     */
     */
     */
    publid void sftUI(TbblfUI ui) {
    publid void sftUI(TbblfUI ui) {
    publid void sftUI(TbblfUI ui) {
    publid void sftUI(TbblfUI ui) {
    publid void sftUI(TbblfUI ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
            supfr.sftUI(ui);
            supfr.sftUI(ui);
            supfr.sftUI(ui);
            supfr.sftUI(ui);
            supfr.sftUI(ui);
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     *
     *
     *
     *
     *
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     */
     */
     */
     */
     */
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
        // Updbtf tif UIs of tif dfll rfndfrfrs, dfll fditors bnd ifbdfr rfndfrfrs.
        // Updbtf tif UIs of tif dfll rfndfrfrs, dfll fditors bnd ifbdfr rfndfrfrs.
        // Updbtf tif UIs of tif dfll rfndfrfrs, dfll fditors bnd ifbdfr rfndfrfrs.
        // Updbtf tif UIs of tif dfll rfndfrfrs, dfll fditors bnd ifbdfr rfndfrfrs.
        // Updbtf tif UIs of tif dfll rfndfrfrs, dfll fditors bnd ifbdfr rfndfrfrs.
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        TbblfColumnModfl dm = gftColumnModfl();
        for(int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for(int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for(int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for(int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
        for(int dolumn = 0; dolumn < dm.gftColumnCount(); dolumn++) {
            TbblfColumn bColumn = dm.gftColumn(dolumn);
            TbblfColumn bColumn = dm.gftColumn(dolumn);
            TbblfColumn bColumn = dm.gftColumn(dolumn);
            TbblfColumn bColumn = dm.gftColumn(dolumn);
            TbblfColumn bColumn = dm.gftColumn(dolumn);
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllEditor());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllEditor());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllEditor());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllEditor());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftCfllEditor());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftHfbdfrRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftHfbdfrRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftHfbdfrRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftHfbdfrRfndfrfr());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(bColumn.gftHfbdfrRfndfrfr());
        }
        }
        }
        }
        }





        // Updbtf tif UIs of bll tif dffbult rfndfrfrs.
        // Updbtf tif UIs of bll tif dffbult rfndfrfrs.
        // Updbtf tif UIs of bll tif dffbult rfndfrfrs.
        // Updbtf tif UIs of bll tif dffbult rfndfrfrs.
        // Updbtf tif UIs of bll tif dffbult rfndfrfrs.
        Enumfrbtion<?> dffbultRfndfrfrs = dffbultRfndfrfrsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultRfndfrfrs = dffbultRfndfrfrsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultRfndfrfrs = dffbultRfndfrfrsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultRfndfrfrs = dffbultRfndfrfrsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultRfndfrfrs = dffbultRfndfrfrsByColumnClbss.flfmfnts();
        wiilf (dffbultRfndfrfrs.ibsMorfElfmfnts()) {
        wiilf (dffbultRfndfrfrs.ibsMorfElfmfnts()) {
        wiilf (dffbultRfndfrfrs.ibsMorfElfmfnts()) {
        wiilf (dffbultRfndfrfrs.ibsMorfElfmfnts()) {
        wiilf (dffbultRfndfrfrs.ibsMorfElfmfnts()) {
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultRfndfrfrs.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultRfndfrfrs.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultRfndfrfrs.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultRfndfrfrs.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultRfndfrfrs.nfxtElfmfnt());
        }
        }
        }
        }
        }





        // Updbtf tif UIs of bll tif dffbult fditors.
        // Updbtf tif UIs of bll tif dffbult fditors.
        // Updbtf tif UIs of bll tif dffbult fditors.
        // Updbtf tif UIs of bll tif dffbult fditors.
        // Updbtf tif UIs of bll tif dffbult fditors.
        Enumfrbtion<?> dffbultEditors = dffbultEditorsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultEditors = dffbultEditorsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultEditors = dffbultEditorsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultEditors = dffbultEditorsByColumnClbss.flfmfnts();
        Enumfrbtion<?> dffbultEditors = dffbultEditorsByColumnClbss.flfmfnts();
        wiilf (dffbultEditors.ibsMorfElfmfnts()) {
        wiilf (dffbultEditors.ibsMorfElfmfnts()) {
        wiilf (dffbultEditors.ibsMorfElfmfnts()) {
        wiilf (dffbultEditors.ibsMorfElfmfnts()) {
        wiilf (dffbultEditors.ibsMorfElfmfnts()) {
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultEditors.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultEditors.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultEditors.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultEditors.nfxtElfmfnt());
            SwingUtilitifs.updbtfRfndfrfrOrEditorUI(dffbultEditors.nfxtElfmfnt());
        }
        }
        }
        }
        }





        // Updbtf tif UI of tif tbblf ifbdfr
        // Updbtf tif UI of tif tbblf ifbdfr
        // Updbtf tif UI of tif tbblf ifbdfr
        // Updbtf tif UI of tif tbblf ifbdfr
        // Updbtf tif UI of tif tbblf ifbdfr
        if (tbblfHfbdfr != null && tbblfHfbdfr.gftPbrfnt() == null) {
        if (tbblfHfbdfr != null && tbblfHfbdfr.gftPbrfnt() == null) {
        if (tbblfHfbdfr != null && tbblfHfbdfr.gftPbrfnt() == null) {
        if (tbblfHfbdfr != null && tbblfHfbdfr.gftPbrfnt() == null) {
        if (tbblfHfbdfr != null && tbblfHfbdfr.gftPbrfnt() == null) {
            tbblfHfbdfr.updbtfUI();
            tbblfHfbdfr.updbtfUI();
            tbblfHfbdfr.updbtfUI();
            tbblfHfbdfr.updbtfUI();
            tbblfHfbdfr.updbtfUI();
        }
        }
        }
        }
        }





        // Updbtf UI bpplifd to pbrfnt SdrollPbnf
        // Updbtf UI bpplifd to pbrfnt SdrollPbnf
        // Updbtf UI bpplifd to pbrfnt SdrollPbnf
        // Updbtf UI bpplifd to pbrfnt SdrollPbnf
        // Updbtf UI bpplifd to pbrfnt SdrollPbnf
        donfigurfEndlosingSdrollPbnfUI();
        donfigurfEndlosingSdrollPbnfUI();
        donfigurfEndlosingSdrollPbnfUI();
        donfigurfEndlosingSdrollPbnfUI();
        donfigurfEndlosingSdrollPbnfUI();





        sftUI((TbblfUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TbblfUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TbblfUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TbblfUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TbblfUI)UIMbnbgfr.gftUI(tiis));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif suffix usfd to donstrudt tif nbmf of tif L&bmp;F dlbss usfd to
     * Rfturns tif suffix usfd to donstrudt tif nbmf of tif L&bmp;F dlbss usfd to
     * Rfturns tif suffix usfd to donstrudt tif nbmf of tif L&bmp;F dlbss usfd to
     * Rfturns tif suffix usfd to donstrudt tif nbmf of tif L&bmp;F dlbss usfd to
     * Rfturns tif suffix usfd to donstrudt tif nbmf of tif L&bmp;F dlbss usfd to
     * rfndfr tiis domponfnt.
     * rfndfr tiis domponfnt.
     * rfndfr tiis domponfnt.
     * rfndfr tiis domponfnt.
     * rfndfr tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif string "TbblfUI"
     * @rfturn tif string "TbblfUI"
     * @rfturn tif string "TbblfUI"
     * @rfturn tif string "TbblfUI"
     * @rfturn tif string "TbblfUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     */
     */
     */
     */
     */
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
    }
    }
    }
    }
    }










//
//
//
//
//
// Mbnbging modfls
// Mbnbging modfls
// Mbnbging modfls
// Mbnbging modfls
// Mbnbging modfls
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Sfts tif dbtb modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dbtb modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dbtb modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dbtb modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dbtb modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * witi it for listfnfr notifidbtions from tif nfw dbtb modfl.
     * witi it for listfnfr notifidbtions from tif nfw dbtb modfl.
     * witi it for listfnfr notifidbtions from tif nfw dbtb modfl.
     * witi it for listfnfr notifidbtions from tif nfw dbtb modfl.
     * witi it for listfnfr notifidbtions from tif nfw dbtb modfl.
     *
     *
     *
     *
     *
     * @pbrbm   dbtbModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dbtbModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dbtbModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dbtbModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dbtbModfl        tif nfw dbtb sourdf for tiis tbblf
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @sff     #gftModfl
     * @sff     #gftModfl
     * @sff     #gftModfl
     * @sff     #gftModfl
     * @sff     #gftModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif modfl tibt is tif sourdf of tif dbtb for tiis vifw.
     *  dfsdription: Tif modfl tibt is tif sourdf of tif dbtb for tiis vifw.
     *  dfsdription: Tif modfl tibt is tif sourdf of tif dbtb for tiis vifw.
     *  dfsdription: Tif modfl tibt is tif sourdf of tif dbtb for tiis vifw.
     *  dfsdription: Tif modfl tibt is tif sourdf of tif dbtb for tiis vifw.
     */
     */
     */
     */
     */
    publid void sftModfl(TbblfModfl dbtbModfl) {
    publid void sftModfl(TbblfModfl dbtbModfl) {
    publid void sftModfl(TbblfModfl dbtbModfl) {
    publid void sftModfl(TbblfModfl dbtbModfl) {
    publid void sftModfl(TbblfModfl dbtbModfl) {
        if (dbtbModfl == null) {
        if (dbtbModfl == null) {
        if (dbtbModfl == null) {
        if (dbtbModfl == null) {
        if (dbtbModfl == null) {
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null TbblfModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null TbblfModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null TbblfModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null TbblfModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null TbblfModfl");
        }
        }
        }
        }
        }
        if (tiis.dbtbModfl != dbtbModfl) {
        if (tiis.dbtbModfl != dbtbModfl) {
        if (tiis.dbtbModfl != dbtbModfl) {
        if (tiis.dbtbModfl != dbtbModfl) {
        if (tiis.dbtbModfl != dbtbModfl) {
            TbblfModfl old = tiis.dbtbModfl;
            TbblfModfl old = tiis.dbtbModfl;
            TbblfModfl old = tiis.dbtbModfl;
            TbblfModfl old = tiis.dbtbModfl;
            TbblfModfl old = tiis.dbtbModfl;
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
                old.rfmovfTbblfModflListfnfr(tiis);
                old.rfmovfTbblfModflListfnfr(tiis);
                old.rfmovfTbblfModflListfnfr(tiis);
                old.rfmovfTbblfModflListfnfr(tiis);
                old.rfmovfTbblfModflListfnfr(tiis);
            }
            }
            }
            }
            }
            tiis.dbtbModfl = dbtbModfl;
            tiis.dbtbModfl = dbtbModfl;
            tiis.dbtbModfl = dbtbModfl;
            tiis.dbtbModfl = dbtbModfl;
            tiis.dbtbModfl = dbtbModfl;
            dbtbModfl.bddTbblfModflListfnfr(tiis);
            dbtbModfl.bddTbblfModflListfnfr(tiis);
            dbtbModfl.bddTbblfModflListfnfr(tiis);
            dbtbModfl.bddTbblfModflListfnfr(tiis);
            dbtbModfl.bddTbblfModflListfnfr(tiis);





            tbblfCibngfd(nfw TbblfModflEvfnt(dbtbModfl, TbblfModflEvfnt.HEADER_ROW));
            tbblfCibngfd(nfw TbblfModflEvfnt(dbtbModfl, TbblfModflEvfnt.HEADER_ROW));
            tbblfCibngfd(nfw TbblfModflEvfnt(dbtbModfl, TbblfModflEvfnt.HEADER_ROW));
            tbblfCibngfd(nfw TbblfModflEvfnt(dbtbModfl, TbblfModflEvfnt.HEADER_ROW));
            tbblfCibngfd(nfw TbblfModflEvfnt(dbtbModfl, TbblfModflEvfnt.HEADER_ROW));





            firfPropfrtyCibngf("modfl", old, dbtbModfl);
            firfPropfrtyCibngf("modfl", old, dbtbModfl);
            firfPropfrtyCibngf("modfl", old, dbtbModfl);
            firfPropfrtyCibngf("modfl", old, dbtbModfl);
            firfPropfrtyCibngf("modfl", old, dbtbModfl);





            if (gftAutoCrfbtfRowSortfr()) {
            if (gftAutoCrfbtfRowSortfr()) {
            if (gftAutoCrfbtfRowSortfr()) {
            if (gftAutoCrfbtfRowSortfr()) {
            if (gftAutoCrfbtfRowSortfr()) {
                sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(dbtbModfl));
                sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(dbtbModfl));
                sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(dbtbModfl));
                sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(dbtbModfl));
                sftRowSortfr(nfw TbblfRowSortfr<TbblfModfl>(dbtbModfl));
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis
     * Rfturns tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis
     * Rfturns tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis
     * Rfturns tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis
     * Rfturns tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis
     * <dodf>JTbblf</dodf>.
     * <dodf>JTbblf</dodf>.
     * <dodf>JTbblf</dodf>.
     * <dodf>JTbblf</dodf>.
     * <dodf>JTbblf</dodf>.
     *
     *
     *
     *
     *
     * @rfturn  tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis <dodf>JTbblf</dodf>
     * @rfturn  tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis <dodf>JTbblf</dodf>
     * @rfturn  tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis <dodf>JTbblf</dodf>
     * @rfturn  tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis <dodf>JTbblf</dodf>
     * @rfturn  tif <dodf>TbblfModfl</dodf> tibt providfs tif dbtb displbyfd by tiis <dodf>JTbblf</dodf>
     * @sff     #sftModfl
     * @sff     #sftModfl
     * @sff     #sftModfl
     * @sff     #sftModfl
     * @sff     #sftModfl
     */
     */
     */
     */
     */
    publid TbblfModfl gftModfl() {
    publid TbblfModfl gftModfl() {
    publid TbblfModfl gftModfl() {
    publid TbblfModfl gftModfl() {
    publid TbblfModfl gftModfl() {
        rfturn dbtbModfl;
        rfturn dbtbModfl;
        rfturn dbtbModfl;
        rfturn dbtbModfl;
        rfturn dbtbModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif dolumn modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dolumn modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dolumn modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dolumn modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * Sfts tif dolumn modfl for tiis tbblf to <dodf>nfwModfl</dodf> bnd rfgistfrs
     * for listfnfr notifidbtions from tif nfw dolumn modfl. Also sfts
     * for listfnfr notifidbtions from tif nfw dolumn modfl. Also sfts
     * for listfnfr notifidbtions from tif nfw dolumn modfl. Also sfts
     * for listfnfr notifidbtions from tif nfw dolumn modfl. Also sfts
     * for listfnfr notifidbtions from tif nfw dolumn modfl. Also sfts
     * tif dolumn modfl of tif <dodf>JTbblfHfbdfr</dodf> to <dodf>dolumnModfl</dodf>.
     * tif dolumn modfl of tif <dodf>JTbblfHfbdfr</dodf> to <dodf>dolumnModfl</dodf>.
     * tif dolumn modfl of tif <dodf>JTbblfHfbdfr</dodf> to <dodf>dolumnModfl</dodf>.
     * tif dolumn modfl of tif <dodf>JTbblfHfbdfr</dodf> to <dodf>dolumnModfl</dodf>.
     * tif dolumn modfl of tif <dodf>JTbblfHfbdfr</dodf> to <dodf>dolumnModfl</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm   dolumnModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dolumnModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dolumnModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dolumnModfl        tif nfw dbtb sourdf for tiis tbblf
     * @pbrbm   dolumnModfl        tif nfw dbtb sourdf for tiis tbblf
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>dolumnModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>dolumnModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>dolumnModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>dolumnModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>dolumnModfl</dodf> is <dodf>null</dodf>
     * @sff     #gftColumnModfl
     * @sff     #gftColumnModfl
     * @sff     #gftColumnModfl
     * @sff     #gftColumnModfl
     * @sff     #gftColumnModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif objfdt govfrning tif wby dolumns bppfbr in tif vifw.
     *  dfsdription: Tif objfdt govfrning tif wby dolumns bppfbr in tif vifw.
     *  dfsdription: Tif objfdt govfrning tif wby dolumns bppfbr in tif vifw.
     *  dfsdription: Tif objfdt govfrning tif wby dolumns bppfbr in tif vifw.
     *  dfsdription: Tif objfdt govfrning tif wby dolumns bppfbr in tif vifw.
     */
     */
     */
     */
     */
    publid void sftColumnModfl(TbblfColumnModfl dolumnModfl) {
    publid void sftColumnModfl(TbblfColumnModfl dolumnModfl) {
    publid void sftColumnModfl(TbblfColumnModfl dolumnModfl) {
    publid void sftColumnModfl(TbblfColumnModfl dolumnModfl) {
    publid void sftColumnModfl(TbblfColumnModfl dolumnModfl) {
        if (dolumnModfl == null) {
        if (dolumnModfl == null) {
        if (dolumnModfl == null) {
        if (dolumnModfl == null) {
        if (dolumnModfl == null) {
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null ColumnModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null ColumnModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null ColumnModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null ColumnModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null ColumnModfl");
        }
        }
        }
        }
        }
        TbblfColumnModfl old = tiis.dolumnModfl;
        TbblfColumnModfl old = tiis.dolumnModfl;
        TbblfColumnModfl old = tiis.dolumnModfl;
        TbblfColumnModfl old = tiis.dolumnModfl;
        TbblfColumnModfl old = tiis.dolumnModfl;
        if (dolumnModfl != old) {
        if (dolumnModfl != old) {
        if (dolumnModfl != old) {
        if (dolumnModfl != old) {
        if (dolumnModfl != old) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
            if (old != null) {
                old.rfmovfColumnModflListfnfr(tiis);
                old.rfmovfColumnModflListfnfr(tiis);
                old.rfmovfColumnModflListfnfr(tiis);
                old.rfmovfColumnModflListfnfr(tiis);
                old.rfmovfColumnModflListfnfr(tiis);
            }
            }
            }
            }
            }
            tiis.dolumnModfl = dolumnModfl;
            tiis.dolumnModfl = dolumnModfl;
            tiis.dolumnModfl = dolumnModfl;
            tiis.dolumnModfl = dolumnModfl;
            tiis.dolumnModfl = dolumnModfl;
            dolumnModfl.bddColumnModflListfnfr(tiis);
            dolumnModfl.bddColumnModflListfnfr(tiis);
            dolumnModfl.bddColumnModflListfnfr(tiis);
            dolumnModfl.bddColumnModflListfnfr(tiis);
            dolumnModfl.bddColumnModflListfnfr(tiis);





            // Sft tif dolumn modfl of tif ifbdfr bs wfll.
            // Sft tif dolumn modfl of tif ifbdfr bs wfll.
            // Sft tif dolumn modfl of tif ifbdfr bs wfll.
            // Sft tif dolumn modfl of tif ifbdfr bs wfll.
            // Sft tif dolumn modfl of tif ifbdfr bs wfll.
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
            if (tbblfHfbdfr != null) {
                tbblfHfbdfr.sftColumnModfl(dolumnModfl);
                tbblfHfbdfr.sftColumnModfl(dolumnModfl);
                tbblfHfbdfr.sftColumnModfl(dolumnModfl);
                tbblfHfbdfr.sftColumnModfl(dolumnModfl);
                tbblfHfbdfr.sftColumnModfl(dolumnModfl);
            }
            }
            }
            }
            }





            firfPropfrtyCibngf("dolumnModfl", old, dolumnModfl);
            firfPropfrtyCibngf("dolumnModfl", old, dolumnModfl);
            firfPropfrtyCibngf("dolumnModfl", old, dolumnModfl);
            firfPropfrtyCibngf("dolumnModfl", old, dolumnModfl);
            firfPropfrtyCibngf("dolumnModfl", old, dolumnModfl);
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>TbblfColumnModfl</dodf> tibt dontbins bll dolumn informbtion
     * Rfturns tif <dodf>TbblfColumnModfl</dodf> tibt dontbins bll dolumn informbtion
     * Rfturns tif <dodf>TbblfColumnModfl</dodf> tibt dontbins bll dolumn informbtion
     * Rfturns tif <dodf>TbblfColumnModfl</dodf> tibt dontbins bll dolumn informbtion
     * Rfturns tif <dodf>TbblfColumnModfl</dodf> tibt dontbins bll dolumn informbtion
     * of tiis tbblf.
     * of tiis tbblf.
     * of tiis tbblf.
     * of tiis tbblf.
     * of tiis tbblf.
     *
     *
     *
     *
     *
     * @rfturn  tif objfdt tibt providfs tif dolumn stbtf of tif tbblf
     * @rfturn  tif objfdt tibt providfs tif dolumn stbtf of tif tbblf
     * @rfturn  tif objfdt tibt providfs tif dolumn stbtf of tif tbblf
     * @rfturn  tif objfdt tibt providfs tif dolumn stbtf of tif tbblf
     * @rfturn  tif objfdt tibt providfs tif dolumn stbtf of tif tbblf
     * @sff     #sftColumnModfl
     * @sff     #sftColumnModfl
     * @sff     #sftColumnModfl
     * @sff     #sftColumnModfl
     * @sff     #sftColumnModfl
     */
     */
     */
     */
     */
    publid TbblfColumnModfl gftColumnModfl() {
    publid TbblfColumnModfl gftColumnModfl() {
    publid TbblfColumnModfl gftColumnModfl() {
    publid TbblfColumnModfl gftColumnModfl() {
    publid TbblfColumnModfl gftColumnModfl() {
        rfturn dolumnModfl;
        rfturn dolumnModfl;
        rfturn dolumnModfl;
        rfturn dolumnModfl;
        rfturn dolumnModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif row sflfdtion modfl for tiis tbblf to <dodf>nfwModfl</dodf>
     * Sfts tif row sflfdtion modfl for tiis tbblf to <dodf>nfwModfl</dodf>
     * Sfts tif row sflfdtion modfl for tiis tbblf to <dodf>nfwModfl</dodf>
     * Sfts tif row sflfdtion modfl for tiis tbblf to <dodf>nfwModfl</dodf>
     * Sfts tif row sflfdtion modfl for tiis tbblf to <dodf>nfwModfl</dodf>
     * bnd rfgistfrs for listfnfr notifidbtions from tif nfw sflfdtion modfl.
     * bnd rfgistfrs for listfnfr notifidbtions from tif nfw sflfdtion modfl.
     * bnd rfgistfrs for listfnfr notifidbtions from tif nfw sflfdtion modfl.
     * bnd rfgistfrs for listfnfr notifidbtions from tif nfw sflfdtion modfl.
     * bnd rfgistfrs for listfnfr notifidbtions from tif nfw sflfdtion modfl.
     *
     *
     *
     *
     *
     * @pbrbm   nfwModfl        tif nfw sflfdtion modfl
     * @pbrbm   nfwModfl        tif nfw sflfdtion modfl
     * @pbrbm   nfwModfl        tif nfw sflfdtion modfl
     * @pbrbm   nfwModfl        tif nfw sflfdtion modfl
     * @pbrbm   nfwModfl        tif nfw sflfdtion modfl
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @fxdfption IllfgblArgumfntExdfption      if <dodf>nfwModfl</dodf> is <dodf>null</dodf>
     * @sff     #gftSflfdtionModfl
     * @sff     #gftSflfdtionModfl
     * @sff     #gftSflfdtionModfl
     * @sff     #gftSflfdtionModfl
     * @sff     #gftSflfdtionModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      dfsdription: Tif sflfdtion modfl for rows.
     *      dfsdription: Tif sflfdtion modfl for rows.
     *      dfsdription: Tif sflfdtion modfl for rows.
     *      dfsdription: Tif sflfdtion modfl for rows.
     *      dfsdription: Tif sflfdtion modfl for rows.
     */
     */
     */
     */
     */
    publid void sftSflfdtionModfl(ListSflfdtionModfl nfwModfl) {
    publid void sftSflfdtionModfl(ListSflfdtionModfl nfwModfl) {
    publid void sftSflfdtionModfl(ListSflfdtionModfl nfwModfl) {
    publid void sftSflfdtionModfl(ListSflfdtionModfl nfwModfl) {
    publid void sftSflfdtionModfl(ListSflfdtionModfl nfwModfl) {
        if (nfwModfl == null) {
        if (nfwModfl == null) {
        if (nfwModfl == null) {
        if (nfwModfl == null) {
        if (nfwModfl == null) {
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null SflfdtionModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null SflfdtionModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null SflfdtionModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null SflfdtionModfl");
            tirow nfw IllfgblArgumfntExdfption("Cbnnot sft b null SflfdtionModfl");
        }
        }
        }
        }
        }





        ListSflfdtionModfl oldModfl = sflfdtionModfl;
        ListSflfdtionModfl oldModfl = sflfdtionModfl;
        ListSflfdtionModfl oldModfl = sflfdtionModfl;
        ListSflfdtionModfl oldModfl = sflfdtionModfl;
        ListSflfdtionModfl oldModfl = sflfdtionModfl;





        if (nfwModfl != oldModfl) {
        if (nfwModfl != oldModfl) {
        if (nfwModfl != oldModfl) {
        if (nfwModfl != oldModfl) {
        if (nfwModfl != oldModfl) {
            if (oldModfl != null) {
            if (oldModfl != null) {
            if (oldModfl != null) {
            if (oldModfl != null) {
            if (oldModfl != null) {
                oldModfl.rfmovfListSflfdtionListfnfr(tiis);
                oldModfl.rfmovfListSflfdtionListfnfr(tiis);
                oldModfl.rfmovfListSflfdtionListfnfr(tiis);
                oldModfl.rfmovfListSflfdtionListfnfr(tiis);
                oldModfl.rfmovfListSflfdtionListfnfr(tiis);
            }
            }
            }
            }
            }





            sflfdtionModfl = nfwModfl;
            sflfdtionModfl = nfwModfl;
            sflfdtionModfl = nfwModfl;
            sflfdtionModfl = nfwModfl;
            sflfdtionModfl = nfwModfl;
            nfwModfl.bddListSflfdtionListfnfr(tiis);
            nfwModfl.bddListSflfdtionListfnfr(tiis);
            nfwModfl.bddListSflfdtionListfnfr(tiis);
            nfwModfl.bddListSflfdtionListfnfr(tiis);
            nfwModfl.bddListSflfdtionListfnfr(tiis);





            firfPropfrtyCibngf("sflfdtionModfl", oldModfl, nfwModfl);
            firfPropfrtyCibngf("sflfdtionModfl", oldModfl, nfwModfl);
            firfPropfrtyCibngf("sflfdtionModfl", oldModfl, nfwModfl);
            firfPropfrtyCibngf("sflfdtionModfl", oldModfl, nfwModfl);
            firfPropfrtyCibngf("sflfdtionModfl", oldModfl, nfwModfl);
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>ListSflfdtionModfl</dodf> tibt is usfd to mbintbin row
     * Rfturns tif <dodf>ListSflfdtionModfl</dodf> tibt is usfd to mbintbin row
     * Rfturns tif <dodf>ListSflfdtionModfl</dodf> tibt is usfd to mbintbin row
     * Rfturns tif <dodf>ListSflfdtionModfl</dodf> tibt is usfd to mbintbin row
     * Rfturns tif <dodf>ListSflfdtionModfl</dodf> tibt is usfd to mbintbin row
     * sflfdtion stbtf.
     * sflfdtion stbtf.
     * sflfdtion stbtf.
     * sflfdtion stbtf.
     * sflfdtion stbtf.
     *
     *
     *
     *
     *
     * @rfturn  tif objfdt tibt providfs row sflfdtion stbtf, <dodf>null</dodf>
     * @rfturn  tif objfdt tibt providfs row sflfdtion stbtf, <dodf>null</dodf>
     * @rfturn  tif objfdt tibt providfs row sflfdtion stbtf, <dodf>null</dodf>
     * @rfturn  tif objfdt tibt providfs row sflfdtion stbtf, <dodf>null</dodf>
     * @rfturn  tif objfdt tibt providfs row sflfdtion stbtf, <dodf>null</dodf>
     *          if row sflfdtion is not bllowfd
     *          if row sflfdtion is not bllowfd
     *          if row sflfdtion is not bllowfd
     *          if row sflfdtion is not bllowfd
     *          if row sflfdtion is not bllowfd
     * @sff     #sftSflfdtionModfl
     * @sff     #sftSflfdtionModfl
     * @sff     #sftSflfdtionModfl
     * @sff     #sftSflfdtionModfl
     * @sff     #sftSflfdtionModfl
     */
     */
     */
     */
     */
    publid ListSflfdtionModfl gftSflfdtionModfl() {
    publid ListSflfdtionModfl gftSflfdtionModfl() {
    publid ListSflfdtionModfl gftSflfdtionModfl() {
    publid ListSflfdtionModfl gftSflfdtionModfl() {
    publid ListSflfdtionModfl gftSflfdtionModfl() {
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
    }
    }
    }
    }
    }





//
//
//
//
//
// RowSortfrListfnfr
// RowSortfrListfnfr
// RowSortfrListfnfr
// RowSortfrListfnfr
// RowSortfrListfnfr
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * <dodf>RowSortfrListfnfr</dodf> notifidbtion tibt tif
     * <dodf>RowSortfrListfnfr</dodf> notifidbtion tibt tif
     * <dodf>RowSortfrListfnfr</dodf> notifidbtion tibt tif
     * <dodf>RowSortfrListfnfr</dodf> notifidbtion tibt tif
     * <dodf>RowSortfrListfnfr</dodf> notifidbtion tibt tif
     * <dodf>RowSortfr</dodf> ibs dibngfd in somf wby.
     * <dodf>RowSortfr</dodf> ibs dibngfd in somf wby.
     * <dodf>RowSortfr</dodf> ibs dibngfd in somf wby.
     * <dodf>RowSortfr</dodf> ibs dibngfd in somf wby.
     * <dodf>RowSortfr</dodf> ibs dibngfd in somf wby.
     *
     *
     *
     *
     *
     * @pbrbm f tif <dodf>RowSortfrEvfnt</dodf> dfsdribing tif dibngf
     * @pbrbm f tif <dodf>RowSortfrEvfnt</dodf> dfsdribing tif dibngf
     * @pbrbm f tif <dodf>RowSortfrEvfnt</dodf> dfsdribing tif dibngf
     * @pbrbm f tif <dodf>RowSortfrEvfnt</dodf> dfsdribing tif dibngf
     * @pbrbm f tif <dodf>RowSortfrEvfnt</dodf> dfsdribing tif dibngf
     * @tirows NullPointfrExdfption if <dodf>f</dodf> is <dodf>null</dodf>
     * @tirows NullPointfrExdfption if <dodf>f</dodf> is <dodf>null</dodf>
     * @tirows NullPointfrExdfption if <dodf>f</dodf> is <dodf>null</dodf>
     * @tirows NullPointfrExdfption if <dodf>f</dodf> is <dodf>null</dodf>
     * @tirows NullPointfrExdfption if <dodf>f</dodf> is <dodf>null</dodf>
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid void sortfrCibngfd(RowSortfrEvfnt f) {
    publid void sortfrCibngfd(RowSortfrEvfnt f) {
    publid void sortfrCibngfd(RowSortfrEvfnt f) {
    publid void sortfrCibngfd(RowSortfrEvfnt f) {
    publid void sortfrCibngfd(RowSortfrEvfnt f) {
        if (f.gftTypf() == RowSortfrEvfnt.Typf.SORT_ORDER_CHANGED) {
        if (f.gftTypf() == RowSortfrEvfnt.Typf.SORT_ORDER_CHANGED) {
        if (f.gftTypf() == RowSortfrEvfnt.Typf.SORT_ORDER_CHANGED) {
        if (f.gftTypf() == RowSortfrEvfnt.Typf.SORT_ORDER_CHANGED) {
        if (f.gftTypf() == RowSortfrEvfnt.Typf.SORT_ORDER_CHANGED) {
            JTbblfHfbdfr ifbdfr = gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = gftTbblfHfbdfr();
            if (ifbdfr != null) {
            if (ifbdfr != null) {
            if (ifbdfr != null) {
            if (ifbdfr != null) {
            if (ifbdfr != null) {
                ifbdfr.rfpbint();
                ifbdfr.rfpbint();
                ifbdfr.rfpbint();
                ifbdfr.rfpbint();
                ifbdfr.rfpbint();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf if (f.gftTypf() == RowSortfrEvfnt.Typf.SORTED) {
        flsf if (f.gftTypf() == RowSortfrEvfnt.Typf.SORTED) {
        flsf if (f.gftTypf() == RowSortfrEvfnt.Typf.SORTED) {
        flsf if (f.gftTypf() == RowSortfrEvfnt.Typf.SORTED) {
        flsf if (f.gftTypf() == RowSortfrEvfnt.Typf.SORTED) {
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            if (!ignorfSortCibngf) {
            if (!ignorfSortCibngf) {
            if (!ignorfSortCibngf) {
            if (!ignorfSortCibngf) {
            if (!ignorfSortCibngf) {
                sortfdTbblfCibngfd(f, null);
                sortfdTbblfCibngfd(f, null);
                sortfdTbblfCibngfd(f, null);
                sortfdTbblfCibngfd(f, null);
                sortfdTbblfCibngfd(f, null);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * SortMbnbgfr providfs support for mbnbging tif sflfdtion bnd vbribblf
     * SortMbnbgfr providfs support for mbnbging tif sflfdtion bnd vbribblf
     * SortMbnbgfr providfs support for mbnbging tif sflfdtion bnd vbribblf
     * SortMbnbgfr providfs support for mbnbging tif sflfdtion bnd vbribblf
     * SortMbnbgfr providfs support for mbnbging tif sflfdtion bnd vbribblf
     * row ifigits wifn sorting is fnbblfd. Tiis informbtion is fndbpsulbtfd
     * row ifigits wifn sorting is fnbblfd. Tiis informbtion is fndbpsulbtfd
     * row ifigits wifn sorting is fnbblfd. Tiis informbtion is fndbpsulbtfd
     * row ifigits wifn sorting is fnbblfd. Tiis informbtion is fndbpsulbtfd
     * row ifigits wifn sorting is fnbblfd. Tiis informbtion is fndbpsulbtfd
     * into b dlbss to bvoid bulking up JTbblf.
     * into b dlbss to bvoid bulking up JTbblf.
     * into b dlbss to bvoid bulking up JTbblf.
     * into b dlbss to bvoid bulking up JTbblf.
     * into b dlbss to bvoid bulking up JTbblf.
     */
     */
     */
     */
     */
    privbtf finbl dlbss SortMbnbgfr {
    privbtf finbl dlbss SortMbnbgfr {
    privbtf finbl dlbss SortMbnbgfr {
    privbtf finbl dlbss SortMbnbgfr {
    privbtf finbl dlbss SortMbnbgfr {
        RowSortfr<? fxtfnds TbblfModfl> sortfr;
        RowSortfr<? fxtfnds TbblfModfl> sortfr;
        RowSortfr<? fxtfnds TbblfModfl> sortfr;
        RowSortfr<? fxtfnds TbblfModfl> sortfr;
        RowSortfr<? fxtfnds TbblfModfl> sortfr;





        // Sflfdtion, in tfrms of tif modfl. Tiis is lbzily drfbtfd
        // Sflfdtion, in tfrms of tif modfl. Tiis is lbzily drfbtfd
        // Sflfdtion, in tfrms of tif modfl. Tiis is lbzily drfbtfd
        // Sflfdtion, in tfrms of tif modfl. Tiis is lbzily drfbtfd
        // Sflfdtion, in tfrms of tif modfl. Tiis is lbzily drfbtfd
        // bs nffdfd.
        // bs nffdfd.
        // bs nffdfd.
        // bs nffdfd.
        // bs nffdfd.
        privbtf ListSflfdtionModfl modflSflfdtion;
        privbtf ListSflfdtionModfl modflSflfdtion;
        privbtf ListSflfdtionModfl modflSflfdtion;
        privbtf ListSflfdtionModfl modflSflfdtion;
        privbtf ListSflfdtionModfl modflSflfdtion;
        privbtf int modflLfbdIndfx;
        privbtf int modflLfbdIndfx;
        privbtf int modflLfbdIndfx;
        privbtf int modflLfbdIndfx;
        privbtf int modflLfbdIndfx;
        // Sft to truf wiilf in tif prodfss of dibnging tif sflfdtion.
        // Sft to truf wiilf in tif prodfss of dibnging tif sflfdtion.
        // Sft to truf wiilf in tif prodfss of dibnging tif sflfdtion.
        // Sft to truf wiilf in tif prodfss of dibnging tif sflfdtion.
        // Sft to truf wiilf in tif prodfss of dibnging tif sflfdtion.
        // If tiis is truf tif sflfdtion dibngf is ignorfd.
        // If tiis is truf tif sflfdtion dibngf is ignorfd.
        // If tiis is truf tif sflfdtion dibngf is ignorfd.
        // If tiis is truf tif sflfdtion dibngf is ignorfd.
        // If tiis is truf tif sflfdtion dibngf is ignorfd.
        privbtf boolfbn syndingSflfdtion;
        privbtf boolfbn syndingSflfdtion;
        privbtf boolfbn syndingSflfdtion;
        privbtf boolfbn syndingSflfdtion;
        privbtf boolfbn syndingSflfdtion;
        // Tfmporbry dbdif of sflfdtion, in tfrms of modfl. Tiis is only usfd
        // Tfmporbry dbdif of sflfdtion, in tfrms of modfl. Tiis is only usfd
        // Tfmporbry dbdif of sflfdtion, in tfrms of modfl. Tiis is only usfd
        // Tfmporbry dbdif of sflfdtion, in tfrms of modfl. Tiis is only usfd
        // Tfmporbry dbdif of sflfdtion, in tfrms of modfl. Tiis is only usfd
        // if wf don't nffd tif full wfigit of modflSflfdtion.
        // if wf don't nffd tif full wfigit of modflSflfdtion.
        // if wf don't nffd tif full wfigit of modflSflfdtion.
        // if wf don't nffd tif full wfigit of modflSflfdtion.
        // if wf don't nffd tif full wfigit of modflSflfdtion.
        privbtf int[] lbstModflSflfdtion;
        privbtf int[] lbstModflSflfdtion;
        privbtf int[] lbstModflSflfdtion;
        privbtf int[] lbstModflSflfdtion;
        privbtf int[] lbstModflSflfdtion;





        // Hfigits of tif rows in tfrms of tif modfl.
        // Hfigits of tif rows in tfrms of tif modfl.
        // Hfigits of tif rows in tfrms of tif modfl.
        // Hfigits of tif rows in tfrms of tif modfl.
        // Hfigits of tif rows in tfrms of tif modfl.
        privbtf SizfSfqufndf modflRowSizfs;
        privbtf SizfSfqufndf modflRowSizfs;
        privbtf SizfSfqufndf modflRowSizfs;
        privbtf SizfSfqufndf modflRowSizfs;
        privbtf SizfSfqufndf modflRowSizfs;










        SortMbnbgfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
        SortMbnbgfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
        SortMbnbgfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
        SortMbnbgfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
        SortMbnbgfr(RowSortfr<? fxtfnds TbblfModfl> sortfr) {
            tiis.sortfr = sortfr;
            tiis.sortfr = sortfr;
            tiis.sortfr = sortfr;
            tiis.sortfr = sortfr;
            tiis.sortfr = sortfr;
            sortfr.bddRowSortfrListfnfr(JTbblf.tiis);
            sortfr.bddRowSortfrListfnfr(JTbblf.tiis);
            sortfr.bddRowSortfrListfnfr(JTbblf.tiis);
            sortfr.bddRowSortfrListfnfr(JTbblf.tiis);
            sortfr.bddRowSortfrListfnfr(JTbblf.tiis);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Disposfs bny rfsourdfs usfd by tiis SortMbnbgfr.
         * Disposfs bny rfsourdfs usfd by tiis SortMbnbgfr.
         * Disposfs bny rfsourdfs usfd by tiis SortMbnbgfr.
         * Disposfs bny rfsourdfs usfd by tiis SortMbnbgfr.
         * Disposfs bny rfsourdfs usfd by tiis SortMbnbgfr.
         */
         */
         */
         */
         */
        publid void disposf() {
        publid void disposf() {
        publid void disposf() {
        publid void disposf() {
        publid void disposf() {
            if (sortfr != null) {
            if (sortfr != null) {
            if (sortfr != null) {
            if (sortfr != null) {
            if (sortfr != null) {
                sortfr.rfmovfRowSortfrListfnfr(JTbblf.tiis);
                sortfr.rfmovfRowSortfrListfnfr(JTbblf.tiis);
                sortfr.rfmovfRowSortfrListfnfr(JTbblf.tiis);
                sortfr.rfmovfRowSortfrListfnfr(JTbblf.tiis);
                sortfr.rfmovfRowSortfrListfnfr(JTbblf.tiis);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif ifigit for b row bt b spfdififd indfx.
         * Sfts tif ifigit for b row bt b spfdififd indfx.
         * Sfts tif ifigit for b row bt b spfdififd indfx.
         * Sfts tif ifigit for b row bt b spfdififd indfx.
         * Sfts tif ifigit for b row bt b spfdififd indfx.
         */
         */
         */
         */
         */
        publid void sftVifwRowHfigit(int vifwIndfx, int rowHfigit) {
        publid void sftVifwRowHfigit(int vifwIndfx, int rowHfigit) {
        publid void sftVifwRowHfigit(int vifwIndfx, int rowHfigit) {
        publid void sftVifwRowHfigit(int vifwIndfx, int rowHfigit) {
        publid void sftVifwRowHfigit(int vifwIndfx, int rowHfigit) {
            if (modflRowSizfs == null) {
            if (modflRowSizfs == null) {
            if (modflRowSizfs == null) {
            if (modflRowSizfs == null) {
            if (modflRowSizfs == null) {
                modflRowSizfs = nfw SizfSfqufndf(gftModfl().gftRowCount(),
                modflRowSizfs = nfw SizfSfqufndf(gftModfl().gftRowCount(),
                modflRowSizfs = nfw SizfSfqufndf(gftModfl().gftRowCount(),
                modflRowSizfs = nfw SizfSfqufndf(gftModfl().gftRowCount(),
                modflRowSizfs = nfw SizfSfqufndf(gftModfl().gftRowCount(),
                                                 gftRowHfigit());
                                                 gftRowHfigit());
                                                 gftRowHfigit());
                                                 gftRowHfigit());
                                                 gftRowHfigit());
            }
            }
            }
            }
            }
            modflRowSizfs.sftSizf(donvfrtRowIndfxToModfl(vifwIndfx),rowHfigit);
            modflRowSizfs.sftSizf(donvfrtRowIndfxToModfl(vifwIndfx),rowHfigit);
            modflRowSizfs.sftSizf(donvfrtRowIndfxToModfl(vifwIndfx),rowHfigit);
            modflRowSizfs.sftSizf(donvfrtRowIndfxToModfl(vifwIndfx),rowHfigit);
            modflRowSizfs.sftSizf(donvfrtRowIndfxToModfl(vifwIndfx),rowHfigit);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Invokfd wifn tif undfrlying modfl ibs domplftfly dibngfd.
         * Invokfd wifn tif undfrlying modfl ibs domplftfly dibngfd.
         * Invokfd wifn tif undfrlying modfl ibs domplftfly dibngfd.
         * Invokfd wifn tif undfrlying modfl ibs domplftfly dibngfd.
         * Invokfd wifn tif undfrlying modfl ibs domplftfly dibngfd.
         */
         */
         */
         */
         */
        publid void bllCibngfd() {
        publid void bllCibngfd() {
        publid void bllCibngfd() {
        publid void bllCibngfd() {
        publid void bllCibngfd() {
            modflLfbdIndfx = -1;
            modflLfbdIndfx = -1;
            modflLfbdIndfx = -1;
            modflLfbdIndfx = -1;
            modflLfbdIndfx = -1;
            modflSflfdtion = null;
            modflSflfdtion = null;
            modflSflfdtion = null;
            modflSflfdtion = null;
            modflSflfdtion = null;
            modflRowSizfs = null;
            modflRowSizfs = null;
            modflRowSizfs = null;
            modflRowSizfs = null;
            modflRowSizfs = null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Invokfd wifn tif sflfdtion, on tif vifw, ibs dibngfd.
         * Invokfd wifn tif sflfdtion, on tif vifw, ibs dibngfd.
         * Invokfd wifn tif sflfdtion, on tif vifw, ibs dibngfd.
         * Invokfd wifn tif sflfdtion, on tif vifw, ibs dibngfd.
         * Invokfd wifn tif sflfdtion, on tif vifw, ibs dibngfd.
         */
         */
         */
         */
         */
        publid void vifwSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void vifwSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void vifwSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void vifwSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void vifwSflfdtionCibngfd(ListSflfdtionEvfnt f) {
            if (!syndingSflfdtion && modflSflfdtion != null) {
            if (!syndingSflfdtion && modflSflfdtion != null) {
            if (!syndingSflfdtion && modflSflfdtion != null) {
            if (!syndingSflfdtion && modflSflfdtion != null) {
            if (!syndingSflfdtion && modflSflfdtion != null) {
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Invokfd wifn fitifr tif tbblf modfl ibs dibngfd, or tif RowSortfr
         * Invokfd wifn fitifr tif tbblf modfl ibs dibngfd, or tif RowSortfr
         * Invokfd wifn fitifr tif tbblf modfl ibs dibngfd, or tif RowSortfr
         * Invokfd wifn fitifr tif tbblf modfl ibs dibngfd, or tif RowSortfr
         * Invokfd wifn fitifr tif tbblf modfl ibs dibngfd, or tif RowSortfr
         * ibs dibngfd. Tiis is invokfd prior to notifying tif sortfr of tif
         * ibs dibngfd. Tiis is invokfd prior to notifying tif sortfr of tif
         * ibs dibngfd. Tiis is invokfd prior to notifying tif sortfr of tif
         * ibs dibngfd. Tiis is invokfd prior to notifying tif sortfr of tif
         * ibs dibngfd. Tiis is invokfd prior to notifying tif sortfr of tif
         * dibngf.
         * dibngf.
         * dibngf.
         * dibngf.
         * dibngf.
         */
         */
         */
         */
         */
        publid void prfpbrfForCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prfpbrfForCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prfpbrfForCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prfpbrfForCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prfpbrfForCibngf(RowSortfrEvfnt sortEvfnt,
                                     ModflCibngf dibngf) {
                                     ModflCibngf dibngf) {
                                     ModflCibngf dibngf) {
                                     ModflCibngf dibngf) {
                                     ModflCibngf dibngf) {
            if (gftUpdbtfSflfdtionOnSort()) {
            if (gftUpdbtfSflfdtionOnSort()) {
            if (gftUpdbtfSflfdtionOnSort()) {
            if (gftUpdbtfSflfdtionOnSort()) {
            if (gftUpdbtfSflfdtionOnSort()) {
                dbdifSflfdtion(sortEvfnt, dibngf);
                dbdifSflfdtion(sortEvfnt, dibngf);
                dbdifSflfdtion(sortEvfnt, dibngf);
                dbdifSflfdtion(sortEvfnt, dibngf);
                dbdifSflfdtion(sortEvfnt, dibngf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Updbtfs tif intfrnbl dbdif of tif sflfdtion bbsfd on tif dibngf.
         * Updbtfs tif intfrnbl dbdif of tif sflfdtion bbsfd on tif dibngf.
         * Updbtfs tif intfrnbl dbdif of tif sflfdtion bbsfd on tif dibngf.
         * Updbtfs tif intfrnbl dbdif of tif sflfdtion bbsfd on tif dibngf.
         * Updbtfs tif intfrnbl dbdif of tif sflfdtion bbsfd on tif dibngf.
         */
         */
         */
         */
         */
        privbtf void dbdifSflfdtion(RowSortfrEvfnt sortEvfnt,
        privbtf void dbdifSflfdtion(RowSortfrEvfnt sortEvfnt,
        privbtf void dbdifSflfdtion(RowSortfrEvfnt sortEvfnt,
        privbtf void dbdifSflfdtion(RowSortfrEvfnt sortEvfnt,
        privbtf void dbdifSflfdtion(RowSortfrEvfnt sortEvfnt,
                                    ModflCibngf dibngf) {
                                    ModflCibngf dibngf) {
                                    ModflCibngf dibngf) {
                                    ModflCibngf dibngf) {
                                    ModflCibngf dibngf) {
            if (sortEvfnt != null) {
            if (sortEvfnt != null) {
            if (sortEvfnt != null) {
            if (sortEvfnt != null) {
            if (sortEvfnt != null) {
                // sort ordfr dibngfd. If modflSflfdtion is null bnd filtfring
                // sort ordfr dibngfd. If modflSflfdtion is null bnd filtfring
                // sort ordfr dibngfd. If modflSflfdtion is null bnd filtfring
                // sort ordfr dibngfd. If modflSflfdtion is null bnd filtfring
                // sort ordfr dibngfd. If modflSflfdtion is null bnd filtfring
                // is fnbblfd wf nffd to dbdif tif sflfdtion in tfrms of tif
                // is fnbblfd wf nffd to dbdif tif sflfdtion in tfrms of tif
                // is fnbblfd wf nffd to dbdif tif sflfdtion in tfrms of tif
                // is fnbblfd wf nffd to dbdif tif sflfdtion in tfrms of tif
                // is fnbblfd wf nffd to dbdif tif sflfdtion in tfrms of tif
                // undfrlying modfl, tiis will bllow us to dorrfdtly rfstorf
                // undfrlying modfl, tiis will bllow us to dorrfdtly rfstorf
                // undfrlying modfl, tiis will bllow us to dorrfdtly rfstorf
                // undfrlying modfl, tiis will bllow us to dorrfdtly rfstorf
                // undfrlying modfl, tiis will bllow us to dorrfdtly rfstorf
                // tif sflfdtion fvfn if rows brf filtfrfd out.
                // tif sflfdtion fvfn if rows brf filtfrfd out.
                // tif sflfdtion fvfn if rows brf filtfrfd out.
                // tif sflfdtion fvfn if rows brf filtfrfd out.
                // tif sflfdtion fvfn if rows brf filtfrfd out.
                if (modflSflfdtion == null &&
                if (modflSflfdtion == null &&
                if (modflSflfdtion == null &&
                if (modflSflfdtion == null &&
                if (modflSflfdtion == null &&
                        sortfr.gftVifwRowCount() != gftModfl().gftRowCount()) {
                        sortfr.gftVifwRowCount() != gftModfl().gftRowCount()) {
                        sortfr.gftVifwRowCount() != gftModfl().gftRowCount()) {
                        sortfr.gftVifwRowCount() != gftModfl().gftRowCount()) {
                        sortfr.gftVifwRowCount() != gftModfl().gftRowCount()) {
                    modflSflfdtion = nfw DffbultListSflfdtionModfl();
                    modflSflfdtion = nfw DffbultListSflfdtionModfl();
                    modflSflfdtion = nfw DffbultListSflfdtionModfl();
                    modflSflfdtion = nfw DffbultListSflfdtionModfl();
                    modflSflfdtion = nfw DffbultListSflfdtionModfl();
                    ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                    ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                    ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                    ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                    ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                    int min = vifwSflfdtion.gftMinSflfdtionIndfx();
                    int min = vifwSflfdtion.gftMinSflfdtionIndfx();
                    int min = vifwSflfdtion.gftMinSflfdtionIndfx();
                    int min = vifwSflfdtion.gftMinSflfdtionIndfx();
                    int min = vifwSflfdtion.gftMinSflfdtionIndfx();
                    int mbx = vifwSflfdtion.gftMbxSflfdtionIndfx();
                    int mbx = vifwSflfdtion.gftMbxSflfdtionIndfx();
                    int mbx = vifwSflfdtion.gftMbxSflfdtionIndfx();
                    int mbx = vifwSflfdtion.gftMbxSflfdtionIndfx();
                    int mbx = vifwSflfdtion.gftMbxSflfdtionIndfx();
                    int modflIndfx;
                    int modflIndfx;
                    int modflIndfx;
                    int modflIndfx;
                    int modflIndfx;
                    for (int vifwIndfx = min; vifwIndfx <= mbx; vifwIndfx++) {
                    for (int vifwIndfx = min; vifwIndfx <= mbx; vifwIndfx++) {
                    for (int vifwIndfx = min; vifwIndfx <= mbx; vifwIndfx++) {
                    for (int vifwIndfx = min; vifwIndfx <= mbx; vifwIndfx++) {
                    for (int vifwIndfx = min; vifwIndfx <= mbx; vifwIndfx++) {
                        if (vifwSflfdtion.isSflfdtfdIndfx(vifwIndfx)) {
                        if (vifwSflfdtion.isSflfdtfdIndfx(vifwIndfx)) {
                        if (vifwSflfdtion.isSflfdtfdIndfx(vifwIndfx)) {
                        if (vifwSflfdtion.isSflfdtfdIndfx(vifwIndfx)) {
                        if (vifwSflfdtion.isSflfdtfdIndfx(vifwIndfx)) {
                            modflIndfx = donvfrtRowIndfxToModfl(
                            modflIndfx = donvfrtRowIndfxToModfl(
                            modflIndfx = donvfrtRowIndfxToModfl(
                            modflIndfx = donvfrtRowIndfxToModfl(
                            modflIndfx = donvfrtRowIndfxToModfl(
                                    sortEvfnt, vifwIndfx);
                                    sortEvfnt, vifwIndfx);
                                    sortEvfnt, vifwIndfx);
                                    sortEvfnt, vifwIndfx);
                                    sortEvfnt, vifwIndfx);
                            if (modflIndfx != -1) {
                            if (modflIndfx != -1) {
                            if (modflIndfx != -1) {
                            if (modflIndfx != -1) {
                            if (modflIndfx != -1) {
                                modflSflfdtion.bddSflfdtionIntfrvbl(
                                modflSflfdtion.bddSflfdtionIntfrvbl(
                                modflSflfdtion.bddSflfdtionIntfrvbl(
                                modflSflfdtion.bddSflfdtionIntfrvbl(
                                modflSflfdtion.bddSflfdtionIntfrvbl(
                                    modflIndfx, modflIndfx);
                                    modflIndfx, modflIndfx);
                                    modflIndfx, modflIndfx);
                                    modflIndfx, modflIndfx);
                                    modflIndfx, modflIndfx);
                            }
                            }
                            }
                            }
                            }
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                    modflIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                    modflIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                    modflIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                    modflIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                    modflIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                            vifwSflfdtion.gftLfbdSflfdtionIndfx());
                            vifwSflfdtion.gftLfbdSflfdtionIndfx());
                            vifwSflfdtion.gftLfbdSflfdtionIndfx());
                            vifwSflfdtion.gftLfbdSflfdtionIndfx());
                            vifwSflfdtion.gftLfbdSflfdtionIndfx());
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                    SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                            modflSflfdtion, modflIndfx, modflIndfx);
                            modflSflfdtion, modflIndfx, modflIndfx);
                            modflSflfdtion, modflIndfx, modflIndfx);
                            modflSflfdtion, modflIndfx, modflIndfx);
                            modflSflfdtion, modflIndfx, modflIndfx);
                } flsf if (modflSflfdtion == null) {
                } flsf if (modflSflfdtion == null) {
                } flsf if (modflSflfdtion == null) {
                } flsf if (modflSflfdtion == null) {
                } flsf if (modflSflfdtion == null) {
                    // Sorting dibngfd, ibvfn't dbdifd sflfdtion in tfrms
                    // Sorting dibngfd, ibvfn't dbdifd sflfdtion in tfrms
                    // Sorting dibngfd, ibvfn't dbdifd sflfdtion in tfrms
                    // Sorting dibngfd, ibvfn't dbdifd sflfdtion in tfrms
                    // Sorting dibngfd, ibvfn't dbdifd sflfdtion in tfrms
                    // of modfl bnd no filtfring. Tfmporbrily dbdif sflfdtion.
                    // of modfl bnd no filtfring. Tfmporbrily dbdif sflfdtion.
                    // of modfl bnd no filtfring. Tfmporbrily dbdif sflfdtion.
                    // of modfl bnd no filtfring. Tfmporbrily dbdif sflfdtion.
                    // of modfl bnd no filtfring. Tfmporbrily dbdif sflfdtion.
                    dbdifModflSflfdtion(sortEvfnt);
                    dbdifModflSflfdtion(sortEvfnt);
                    dbdifModflSflfdtion(sortEvfnt);
                    dbdifModflSflfdtion(sortEvfnt);
                    dbdifModflSflfdtion(sortEvfnt);
                }
                }
                }
                }
                }
            } flsf if (dibngf.bllRowsCibngfd) {
            } flsf if (dibngf.bllRowsCibngfd) {
            } flsf if (dibngf.bllRowsCibngfd) {
            } flsf if (dibngf.bllRowsCibngfd) {
            } flsf if (dibngf.bllRowsCibngfd) {
                // All tif rows ibvf dibngfd, diudk bny dbdifd sflfdtion.
                // All tif rows ibvf dibngfd, diudk bny dbdifd sflfdtion.
                // All tif rows ibvf dibngfd, diudk bny dbdifd sflfdtion.
                // All tif rows ibvf dibngfd, diudk bny dbdifd sflfdtion.
                // All tif rows ibvf dibngfd, diudk bny dbdifd sflfdtion.
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
                modflSflfdtion = null;
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
                // Tbblf dibngfd, rfflfdt dibngfs in dbdifd sflfdtion modfl.
                // Tbblf dibngfd, rfflfdt dibngfs in dbdifd sflfdtion modfl.
                // Tbblf dibngfd, rfflfdt dibngfs in dbdifd sflfdtion modfl.
                // Tbblf dibngfd, rfflfdt dibngfs in dbdifd sflfdtion modfl.
                // Tbblf dibngfd, rfflfdt dibngfs in dbdifd sflfdtion modfl.
                switdi(dibngf.typf) {
                switdi(dibngf.typf) {
                switdi(dibngf.typf) {
                switdi(dibngf.typf) {
                switdi(dibngf.typf) {
                dbsf TbblfModflEvfnt.DELETE:
                dbsf TbblfModflEvfnt.DELETE:
                dbsf TbblfModflEvfnt.DELETE:
                dbsf TbblfModflEvfnt.DELETE:
                dbsf TbblfModflEvfnt.DELETE:
                    modflSflfdtion.rfmovfIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.rfmovfIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.rfmovfIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.rfmovfIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.rfmovfIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                                                       dibngf.fndModflIndfx);
                                                       dibngf.fndModflIndfx);
                                                       dibngf.fndModflIndfx);
                                                       dibngf.fndModflIndfx);
                                                       dibngf.fndModflIndfx);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                dbsf TbblfModflEvfnt.INSERT:
                dbsf TbblfModflEvfnt.INSERT:
                dbsf TbblfModflEvfnt.INSERT:
                dbsf TbblfModflEvfnt.INSERT:
                dbsf TbblfModflEvfnt.INSERT:
                    modflSflfdtion.insfrtIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.insfrtIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.insfrtIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.insfrtIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                    modflSflfdtion.insfrtIndfxIntfrvbl(dibngf.stbrtModflIndfx,
                                                       dibngf.lfngti,
                                                       dibngf.lfngti,
                                                       dibngf.lfngti,
                                                       dibngf.lfngti,
                                                       dibngf.lfngti,
                                                       truf);
                                                       truf);
                                                       truf);
                                                       truf);
                                                       truf);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                dffbult:
                dffbult:
                dffbult:
                dffbult:
                dffbult:
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // tbblf dibngfd, but ibvfn't dbdifd rows, tfmporbrily
                // tbblf dibngfd, but ibvfn't dbdifd rows, tfmporbrily
                // tbblf dibngfd, but ibvfn't dbdifd rows, tfmporbrily
                // tbblf dibngfd, but ibvfn't dbdifd rows, tfmporbrily
                // tbblf dibngfd, but ibvfn't dbdifd rows, tfmporbrily
                // dbdif tifm.
                // dbdif tifm.
                // dbdif tifm.
                // dbdif tifm.
                // dbdif tifm.
                dbdifModflSflfdtion(null);
                dbdifModflSflfdtion(null);
                dbdifModflSflfdtion(null);
                dbdifModflSflfdtion(null);
                dbdifModflSflfdtion(null);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        privbtf void dbdifModflSflfdtion(RowSortfrEvfnt sortEvfnt) {
        privbtf void dbdifModflSflfdtion(RowSortfrEvfnt sortEvfnt) {
        privbtf void dbdifModflSflfdtion(RowSortfrEvfnt sortEvfnt) {
        privbtf void dbdifModflSflfdtion(RowSortfrEvfnt sortEvfnt) {
        privbtf void dbdifModflSflfdtion(RowSortfrEvfnt sortEvfnt) {
            lbstModflSflfdtion = donvfrtSflfdtionToModfl(sortEvfnt);
            lbstModflSflfdtion = donvfrtSflfdtionToModfl(sortEvfnt);
            lbstModflSflfdtion = donvfrtSflfdtionToModfl(sortEvfnt);
            lbstModflSflfdtion = donvfrtSflfdtionToModfl(sortEvfnt);
            lbstModflSflfdtion = donvfrtSflfdtionToModfl(sortEvfnt);
            modflLfbdIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
            modflLfbdIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
            modflLfbdIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
            modflLfbdIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
            modflLfbdIndfx = donvfrtRowIndfxToModfl(sortEvfnt,
                        sflfdtionModfl.gftLfbdSflfdtionIndfx());
                        sflfdtionModfl.gftLfbdSflfdtionIndfx());
                        sflfdtionModfl.gftLfbdSflfdtionIndfx());
                        sflfdtionModfl.gftLfbdSflfdtionIndfx());
                        sflfdtionModfl.gftLfbdSflfdtionIndfx());
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Inovkfd wifn fitifr tif tbblf ibs dibngfd or tif sortfr ibs dibngfd
         * Inovkfd wifn fitifr tif tbblf ibs dibngfd or tif sortfr ibs dibngfd
         * Inovkfd wifn fitifr tif tbblf ibs dibngfd or tif sortfr ibs dibngfd
         * Inovkfd wifn fitifr tif tbblf ibs dibngfd or tif sortfr ibs dibngfd
         * Inovkfd wifn fitifr tif tbblf ibs dibngfd or tif sortfr ibs dibngfd
         * bnd bftfr tif sortfr ibs bffn notififd. If nfdfssbry tiis will
         * bnd bftfr tif sortfr ibs bffn notififd. If nfdfssbry tiis will
         * bnd bftfr tif sortfr ibs bffn notififd. If nfdfssbry tiis will
         * bnd bftfr tif sortfr ibs bffn notififd. If nfdfssbry tiis will
         * bnd bftfr tif sortfr ibs bffn notififd. If nfdfssbry tiis will
         * rfbpply tif sflfdtion bnd vbribblf row ifigits.
         * rfbpply tif sflfdtion bnd vbribblf row ifigits.
         * rfbpply tif sflfdtion bnd vbribblf row ifigits.
         * rfbpply tif sflfdtion bnd vbribblf row ifigits.
         * rfbpply tif sflfdtion bnd vbribblf row ifigits.
         */
         */
         */
         */
         */
        publid void prodfssCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prodfssCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prodfssCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prodfssCibngf(RowSortfrEvfnt sortEvfnt,
        publid void prodfssCibngf(RowSortfrEvfnt sortEvfnt,
                                  ModflCibngf dibngf,
                                  ModflCibngf dibngf,
                                  ModflCibngf dibngf,
                                  ModflCibngf dibngf,
                                  ModflCibngf dibngf,
                                  boolfbn sortfrCibngfd) {
                                  boolfbn sortfrCibngfd) {
                                  boolfbn sortfrCibngfd) {
                                  boolfbn sortfrCibngfd) {
                                  boolfbn sortfrCibngfd) {
            if (dibngf != null) {
            if (dibngf != null) {
            if (dibngf != null) {
            if (dibngf != null) {
            if (dibngf != null) {
                if (dibngf.bllRowsCibngfd) {
                if (dibngf.bllRowsCibngfd) {
                if (dibngf.bllRowsCibngfd) {
                if (dibngf.bllRowsCibngfd) {
                if (dibngf.bllRowsCibngfd) {
                    modflRowSizfs = null;
                    modflRowSizfs = null;
                    modflRowSizfs = null;
                    modflRowSizfs = null;
                    modflRowSizfs = null;
                    rowModfl = null;
                    rowModfl = null;
                    rowModfl = null;
                    rowModfl = null;
                    rowModfl = null;
                } flsf if (modflRowSizfs != null) {
                } flsf if (modflRowSizfs != null) {
                } flsf if (modflRowSizfs != null) {
                } flsf if (modflRowSizfs != null) {
                } flsf if (modflRowSizfs != null) {
                    if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                    if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                    if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                    if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                    if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                        modflRowSizfs.insfrtEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.insfrtEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.insfrtEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.insfrtEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.insfrtEntrifs(dibngf.stbrtModflIndfx,
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.stbrtModflIndfx + 1,
                                                    dibngf.stbrtModflIndfx + 1,
                                                    dibngf.stbrtModflIndfx + 1,
                                                    dibngf.stbrtModflIndfx + 1,
                                                    dibngf.stbrtModflIndfx + 1,
                                                    gftRowHfigit());
                                                    gftRowHfigit());
                                                    gftRowHfigit());
                                                    gftRowHfigit());
                                                    gftRowHfigit());
                    } flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                    } flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                    } flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                    } flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                    } flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                        modflRowSizfs.rfmovfEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.rfmovfEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.rfmovfEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.rfmovfEntrifs(dibngf.stbrtModflIndfx,
                        modflRowSizfs.rfmovfEntrifs(dibngf.stbrtModflIndfx,
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.fndModflIndfx -
                                                    dibngf.stbrtModflIndfx +1 );
                                                    dibngf.stbrtModflIndfx +1 );
                                                    dibngf.stbrtModflIndfx +1 );
                                                    dibngf.stbrtModflIndfx +1 );
                                                    dibngf.stbrtModflIndfx +1 );
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if (sortfrCibngfd) {
            if (sortfrCibngfd) {
            if (sortfrCibngfd) {
            if (sortfrCibngfd) {
            if (sortfrCibngfd) {
                sftVifwRowHfigitsFromModfl();
                sftVifwRowHfigitsFromModfl();
                sftVifwRowHfigitsFromModfl();
                sftVifwRowHfigitsFromModfl();
                sftVifwRowHfigitsFromModfl();
                rfstorfSflfdtion(dibngf);
                rfstorfSflfdtion(dibngf);
                rfstorfSflfdtion(dibngf);
                rfstorfSflfdtion(dibngf);
                rfstorfSflfdtion(dibngf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfsfts tif vbribblf row ifigits in tfrms of tif vifw from
         * Rfsfts tif vbribblf row ifigits in tfrms of tif vifw from
         * Rfsfts tif vbribblf row ifigits in tfrms of tif vifw from
         * Rfsfts tif vbribblf row ifigits in tfrms of tif vifw from
         * Rfsfts tif vbribblf row ifigits in tfrms of tif vifw from
         * tibt of tif vbribblf row ifigits in tfrms of tif modfl.
         * tibt of tif vbribblf row ifigits in tfrms of tif modfl.
         * tibt of tif vbribblf row ifigits in tfrms of tif modfl.
         * tibt of tif vbribblf row ifigits in tfrms of tif modfl.
         * tibt of tif vbribblf row ifigits in tfrms of tif modfl.
         */
         */
         */
         */
         */
        privbtf void sftVifwRowHfigitsFromModfl() {
        privbtf void sftVifwRowHfigitsFromModfl() {
        privbtf void sftVifwRowHfigitsFromModfl() {
        privbtf void sftVifwRowHfigitsFromModfl() {
        privbtf void sftVifwRowHfigitsFromModfl() {
            if (modflRowSizfs != null) {
            if (modflRowSizfs != null) {
            if (modflRowSizfs != null) {
            if (modflRowSizfs != null) {
            if (modflRowSizfs != null) {
                rowModfl.sftSizfs(gftRowCount(), gftRowHfigit());
                rowModfl.sftSizfs(gftRowCount(), gftRowHfigit());
                rowModfl.sftSizfs(gftRowCount(), gftRowHfigit());
                rowModfl.sftSizfs(gftRowCount(), gftRowHfigit());
                rowModfl.sftSizfs(gftRowCount(), gftRowHfigit());
                for (int vifwIndfx = gftRowCount() - 1; vifwIndfx >= 0;
                for (int vifwIndfx = gftRowCount() - 1; vifwIndfx >= 0;
                for (int vifwIndfx = gftRowCount() - 1; vifwIndfx >= 0;
                for (int vifwIndfx = gftRowCount() - 1; vifwIndfx >= 0;
                for (int vifwIndfx = gftRowCount() - 1; vifwIndfx >= 0;
                         vifwIndfx--) {
                         vifwIndfx--) {
                         vifwIndfx--) {
                         vifwIndfx--) {
                         vifwIndfx--) {
                    int modflIndfx = donvfrtRowIndfxToModfl(vifwIndfx);
                    int modflIndfx = donvfrtRowIndfxToModfl(vifwIndfx);
                    int modflIndfx = donvfrtRowIndfxToModfl(vifwIndfx);
                    int modflIndfx = donvfrtRowIndfxToModfl(vifwIndfx);
                    int modflIndfx = donvfrtRowIndfxToModfl(vifwIndfx);
                    rowModfl.sftSizf(vifwIndfx,
                    rowModfl.sftSizf(vifwIndfx,
                    rowModfl.sftSizf(vifwIndfx,
                    rowModfl.sftSizf(vifwIndfx,
                    rowModfl.sftSizf(vifwIndfx,
                                     modflRowSizfs.gftSizf(modflIndfx));
                                     modflRowSizfs.gftSizf(modflIndfx));
                                     modflRowSizfs.gftSizf(modflIndfx));
                                     modflRowSizfs.gftSizf(modflIndfx));
                                     modflRowSizfs.gftSizf(modflIndfx));
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfstorfs tif sflfdtion from tibt in tfrms of tif modfl.
         * Rfstorfs tif sflfdtion from tibt in tfrms of tif modfl.
         * Rfstorfs tif sflfdtion from tibt in tfrms of tif modfl.
         * Rfstorfs tif sflfdtion from tibt in tfrms of tif modfl.
         * Rfstorfs tif sflfdtion from tibt in tfrms of tif modfl.
         */
         */
         */
         */
         */
        privbtf void rfstorfSflfdtion(ModflCibngf dibngf) {
        privbtf void rfstorfSflfdtion(ModflCibngf dibngf) {
        privbtf void rfstorfSflfdtion(ModflCibngf dibngf) {
        privbtf void rfstorfSflfdtion(ModflCibngf dibngf) {
        privbtf void rfstorfSflfdtion(ModflCibngf dibngf) {
            syndingSflfdtion = truf;
            syndingSflfdtion = truf;
            syndingSflfdtion = truf;
            syndingSflfdtion = truf;
            syndingSflfdtion = truf;
            if (lbstModflSflfdtion != null) {
            if (lbstModflSflfdtion != null) {
            if (lbstModflSflfdtion != null) {
            if (lbstModflSflfdtion != null) {
            if (lbstModflSflfdtion != null) {
                rfstorfSortingSflfdtion(lbstModflSflfdtion,
                rfstorfSortingSflfdtion(lbstModflSflfdtion,
                rfstorfSortingSflfdtion(lbstModflSflfdtion,
                rfstorfSortingSflfdtion(lbstModflSflfdtion,
                rfstorfSortingSflfdtion(lbstModflSflfdtion,
                                        modflLfbdIndfx, dibngf);
                                        modflLfbdIndfx, dibngf);
                                        modflLfbdIndfx, dibngf);
                                        modflLfbdIndfx, dibngf);
                                        modflLfbdIndfx, dibngf);
                lbstModflSflfdtion = null;
                lbstModflSflfdtion = null;
                lbstModflSflfdtion = null;
                lbstModflSflfdtion = null;
                lbstModflSflfdtion = null;
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
            } flsf if (modflSflfdtion != null) {
                ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                ListSflfdtionModfl vifwSflfdtion = gftSflfdtionModfl();
                vifwSflfdtion.sftVblufIsAdjusting(truf);
                vifwSflfdtion.sftVblufIsAdjusting(truf);
                vifwSflfdtion.sftVblufIsAdjusting(truf);
                vifwSflfdtion.sftVblufIsAdjusting(truf);
                vifwSflfdtion.sftVblufIsAdjusting(truf);
                vifwSflfdtion.dlfbrSflfdtion();
                vifwSflfdtion.dlfbrSflfdtion();
                vifwSflfdtion.dlfbrSflfdtion();
                vifwSflfdtion.dlfbrSflfdtion();
                vifwSflfdtion.dlfbrSflfdtion();
                int min = modflSflfdtion.gftMinSflfdtionIndfx();
                int min = modflSflfdtion.gftMinSflfdtionIndfx();
                int min = modflSflfdtion.gftMinSflfdtionIndfx();
                int min = modflSflfdtion.gftMinSflfdtionIndfx();
                int min = modflSflfdtion.gftMinSflfdtionIndfx();
                int mbx = modflSflfdtion.gftMbxSflfdtionIndfx();
                int mbx = modflSflfdtion.gftMbxSflfdtionIndfx();
                int mbx = modflSflfdtion.gftMbxSflfdtionIndfx();
                int mbx = modflSflfdtion.gftMbxSflfdtionIndfx();
                int mbx = modflSflfdtion.gftMbxSflfdtionIndfx();
                int vifwIndfx;
                int vifwIndfx;
                int vifwIndfx;
                int vifwIndfx;
                int vifwIndfx;
                for (int modflIndfx = min; modflIndfx <= mbx; modflIndfx++) {
                for (int modflIndfx = min; modflIndfx <= mbx; modflIndfx++) {
                for (int modflIndfx = min; modflIndfx <= mbx; modflIndfx++) {
                for (int modflIndfx = min; modflIndfx <= mbx; modflIndfx++) {
                for (int modflIndfx = min; modflIndfx <= mbx; modflIndfx++) {
                    if (modflSflfdtion.isSflfdtfdIndfx(modflIndfx)) {
                    if (modflSflfdtion.isSflfdtfdIndfx(modflIndfx)) {
                    if (modflSflfdtion.isSflfdtfdIndfx(modflIndfx)) {
                    if (modflSflfdtion.isSflfdtfdIndfx(modflIndfx)) {
                    if (modflSflfdtion.isSflfdtfdIndfx(modflIndfx)) {
                        vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx);
                        vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx);
                        vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx);
                        vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx);
                        vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx);
                        if (vifwIndfx != -1) {
                        if (vifwIndfx != -1) {
                        if (vifwIndfx != -1) {
                        if (vifwIndfx != -1) {
                        if (vifwIndfx != -1) {
                            vifwSflfdtion.bddSflfdtionIntfrvbl(vifwIndfx,
                            vifwSflfdtion.bddSflfdtionIntfrvbl(vifwIndfx,
                            vifwSflfdtion.bddSflfdtionIntfrvbl(vifwIndfx,
                            vifwSflfdtion.bddSflfdtionIntfrvbl(vifwIndfx,
                            vifwSflfdtion.bddSflfdtionIntfrvbl(vifwIndfx,
                                                               vifwIndfx);
                                                               vifwIndfx);
                                                               vifwIndfx);
                                                               vifwIndfx);
                                                               vifwIndfx);
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                // Rfstorf tif lfbd
                // Rfstorf tif lfbd
                // Rfstorf tif lfbd
                // Rfstorf tif lfbd
                // Rfstorf tif lfbd
                int vifwLfbdIndfx = modflSflfdtion.gftLfbdSflfdtionIndfx();
                int vifwLfbdIndfx = modflSflfdtion.gftLfbdSflfdtionIndfx();
                int vifwLfbdIndfx = modflSflfdtion.gftLfbdSflfdtionIndfx();
                int vifwLfbdIndfx = modflSflfdtion.gftLfbdSflfdtionIndfx();
                int vifwLfbdIndfx = modflSflfdtion.gftLfbdSflfdtionIndfx();
                if (vifwLfbdIndfx != -1 && !modflSflfdtion.isSflfdtionEmpty()) {
                if (vifwLfbdIndfx != -1 && !modflSflfdtion.isSflfdtionEmpty()) {
                if (vifwLfbdIndfx != -1 && !modflSflfdtion.isSflfdtionEmpty()) {
                if (vifwLfbdIndfx != -1 && !modflSflfdtion.isSflfdtionEmpty()) {
                if (vifwLfbdIndfx != -1 && !modflSflfdtion.isSflfdtionEmpty()) {
                    vifwLfbdIndfx = donvfrtRowIndfxToVifw(vifwLfbdIndfx);
                    vifwLfbdIndfx = donvfrtRowIndfxToVifw(vifwLfbdIndfx);
                    vifwLfbdIndfx = donvfrtRowIndfxToVifw(vifwLfbdIndfx);
                    vifwLfbdIndfx = donvfrtRowIndfxToVifw(vifwLfbdIndfx);
                    vifwLfbdIndfx = donvfrtRowIndfxToVifw(vifwLfbdIndfx);
                }
                }
                }
                }
                }
                SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                        vifwSflfdtion, vifwLfbdIndfx, vifwLfbdIndfx);
                        vifwSflfdtion, vifwLfbdIndfx, vifwLfbdIndfx);
                        vifwSflfdtion, vifwLfbdIndfx, vifwLfbdIndfx);
                        vifwSflfdtion, vifwLfbdIndfx, vifwLfbdIndfx);
                        vifwSflfdtion, vifwLfbdIndfx, vifwLfbdIndfx);
                vifwSflfdtion.sftVblufIsAdjusting(fblsf);
                vifwSflfdtion.sftVblufIsAdjusting(fblsf);
                vifwSflfdtion.sftVblufIsAdjusting(fblsf);
                vifwSflfdtion.sftVblufIsAdjusting(fblsf);
                vifwSflfdtion.sftVblufIsAdjusting(fblsf);
            }
            }
            }
            }
            }
            syndingSflfdtion = fblsf;
            syndingSflfdtion = fblsf;
            syndingSflfdtion = fblsf;
            syndingSflfdtion = fblsf;
            syndingSflfdtion = fblsf;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * ModflCibngf is usfd wifn sorting to rfstorf stbtf, it dorrfsponds
     * ModflCibngf is usfd wifn sorting to rfstorf stbtf, it dorrfsponds
     * ModflCibngf is usfd wifn sorting to rfstorf stbtf, it dorrfsponds
     * ModflCibngf is usfd wifn sorting to rfstorf stbtf, it dorrfsponds
     * ModflCibngf is usfd wifn sorting to rfstorf stbtf, it dorrfsponds
     * to dbtb from b TbblfModflEvfnt.  Tif vblufs brf prfdbldulbtfd bs
     * to dbtb from b TbblfModflEvfnt.  Tif vblufs brf prfdbldulbtfd bs
     * to dbtb from b TbblfModflEvfnt.  Tif vblufs brf prfdbldulbtfd bs
     * to dbtb from b TbblfModflEvfnt.  Tif vblufs brf prfdbldulbtfd bs
     * to dbtb from b TbblfModflEvfnt.  Tif vblufs brf prfdbldulbtfd bs
     * tify brf usfd fxtfnsivfly.
     * tify brf usfd fxtfnsivfly.
     * tify brf usfd fxtfnsivfly.
     * tify brf usfd fxtfnsivfly.
     * tify brf usfd fxtfnsivfly.
     */
     */
     */
     */
     */
    privbtf finbl dlbss ModflCibngf {
    privbtf finbl dlbss ModflCibngf {
    privbtf finbl dlbss ModflCibngf {
    privbtf finbl dlbss ModflCibngf {
    privbtf finbl dlbss ModflCibngf {
        // Stbrting indfx of tif dibngf, in tfrms of tif modfl
        // Stbrting indfx of tif dibngf, in tfrms of tif modfl
        // Stbrting indfx of tif dibngf, in tfrms of tif modfl
        // Stbrting indfx of tif dibngf, in tfrms of tif modfl
        // Stbrting indfx of tif dibngf, in tfrms of tif modfl
        int stbrtModflIndfx;
        int stbrtModflIndfx;
        int stbrtModflIndfx;
        int stbrtModflIndfx;
        int stbrtModflIndfx;





        // Ending indfx of tif dibngf, in tfrms of tif modfl
        // Ending indfx of tif dibngf, in tfrms of tif modfl
        // Ending indfx of tif dibngf, in tfrms of tif modfl
        // Ending indfx of tif dibngf, in tfrms of tif modfl
        // Ending indfx of tif dibngf, in tfrms of tif modfl
        int fndModflIndfx;
        int fndModflIndfx;
        int fndModflIndfx;
        int fndModflIndfx;
        int fndModflIndfx;





        // Typf of dibngf
        // Typf of dibngf
        // Typf of dibngf
        // Typf of dibngf
        // Typf of dibngf
        int typf;
        int typf;
        int typf;
        int typf;
        int typf;





        // Numbfr of rows in tif modfl
        // Numbfr of rows in tif modfl
        // Numbfr of rows in tif modfl
        // Numbfr of rows in tif modfl
        // Numbfr of rows in tif modfl
        int modflRowCount;
        int modflRowCount;
        int modflRowCount;
        int modflRowCount;
        int modflRowCount;





        // Tif fvfnt tibt triggfrfd tiis.
        // Tif fvfnt tibt triggfrfd tiis.
        // Tif fvfnt tibt triggfrfd tiis.
        // Tif fvfnt tibt triggfrfd tiis.
        // Tif fvfnt tibt triggfrfd tiis.
        TbblfModflEvfnt fvfnt;
        TbblfModflEvfnt fvfnt;
        TbblfModflEvfnt fvfnt;
        TbblfModflEvfnt fvfnt;
        TbblfModflEvfnt fvfnt;





        // Lfngti of tif dibngf (fnd - stbrt + 1)
        // Lfngti of tif dibngf (fnd - stbrt + 1)
        // Lfngti of tif dibngf (fnd - stbrt + 1)
        // Lfngti of tif dibngf (fnd - stbrt + 1)
        // Lfngti of tif dibngf (fnd - stbrt + 1)
        int lfngti;
        int lfngti;
        int lfngti;
        int lfngti;
        int lfngti;





        // Truf if tif fvfnt indidbtfs bll tif dontfnts ibvf dibngfd
        // Truf if tif fvfnt indidbtfs bll tif dontfnts ibvf dibngfd
        // Truf if tif fvfnt indidbtfs bll tif dontfnts ibvf dibngfd
        // Truf if tif fvfnt indidbtfs bll tif dontfnts ibvf dibngfd
        // Truf if tif fvfnt indidbtfs bll tif dontfnts ibvf dibngfd
        boolfbn bllRowsCibngfd;
        boolfbn bllRowsCibngfd;
        boolfbn bllRowsCibngfd;
        boolfbn bllRowsCibngfd;
        boolfbn bllRowsCibngfd;





        ModflCibngf(TbblfModflEvfnt f) {
        ModflCibngf(TbblfModflEvfnt f) {
        ModflCibngf(TbblfModflEvfnt f) {
        ModflCibngf(TbblfModflEvfnt f) {
        ModflCibngf(TbblfModflEvfnt f) {
            stbrtModflIndfx = Mbti.mbx(0, f.gftFirstRow());
            stbrtModflIndfx = Mbti.mbx(0, f.gftFirstRow());
            stbrtModflIndfx = Mbti.mbx(0, f.gftFirstRow());
            stbrtModflIndfx = Mbti.mbx(0, f.gftFirstRow());
            stbrtModflIndfx = Mbti.mbx(0, f.gftFirstRow());
            fndModflIndfx = f.gftLbstRow();
            fndModflIndfx = f.gftLbstRow();
            fndModflIndfx = f.gftLbstRow();
            fndModflIndfx = f.gftLbstRow();
            fndModflIndfx = f.gftLbstRow();
            modflRowCount = gftModfl().gftRowCount();
            modflRowCount = gftModfl().gftRowCount();
            modflRowCount = gftModfl().gftRowCount();
            modflRowCount = gftModfl().gftRowCount();
            modflRowCount = gftModfl().gftRowCount();
            if (fndModflIndfx < 0) {
            if (fndModflIndfx < 0) {
            if (fndModflIndfx < 0) {
            if (fndModflIndfx < 0) {
            if (fndModflIndfx < 0) {
                fndModflIndfx = Mbti.mbx(0, modflRowCount - 1);
                fndModflIndfx = Mbti.mbx(0, modflRowCount - 1);
                fndModflIndfx = Mbti.mbx(0, modflRowCount - 1);
                fndModflIndfx = Mbti.mbx(0, modflRowCount - 1);
                fndModflIndfx = Mbti.mbx(0, modflRowCount - 1);
            }
            }
            }
            }
            }
            lfngti = fndModflIndfx - stbrtModflIndfx + 1;
            lfngti = fndModflIndfx - stbrtModflIndfx + 1;
            lfngti = fndModflIndfx - stbrtModflIndfx + 1;
            lfngti = fndModflIndfx - stbrtModflIndfx + 1;
            lfngti = fndModflIndfx - stbrtModflIndfx + 1;
            typf = f.gftTypf();
            typf = f.gftTypf();
            typf = f.gftTypf();
            typf = f.gftTypf();
            typf = f.gftTypf();
            fvfnt = f;
            fvfnt = f;
            fvfnt = f;
            fvfnt = f;
            fvfnt = f;
            bllRowsCibngfd = (f.gftLbstRow() == Intfgfr.MAX_VALUE);
            bllRowsCibngfd = (f.gftLbstRow() == Intfgfr.MAX_VALUE);
            bllRowsCibngfd = (f.gftLbstRow() == Intfgfr.MAX_VALUE);
            bllRowsCibngfd = (f.gftLbstRow() == Intfgfr.MAX_VALUE);
            bllRowsCibngfd = (f.gftLbstRow() == Intfgfr.MAX_VALUE);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn <dodf>sortfrCibngfd</dodf> is invokfd, or
     * Invokfd wifn <dodf>sortfrCibngfd</dodf> is invokfd, or
     * Invokfd wifn <dodf>sortfrCibngfd</dodf> is invokfd, or
     * Invokfd wifn <dodf>sortfrCibngfd</dodf> is invokfd, or
     * Invokfd wifn <dodf>sortfrCibngfd</dodf> is invokfd, or
     * wifn <dodf>tbblfCibngfd</dodf> is invokfd bnd sorting is fnbblfd.
     * wifn <dodf>tbblfCibngfd</dodf> is invokfd bnd sorting is fnbblfd.
     * wifn <dodf>tbblfCibngfd</dodf> is invokfd bnd sorting is fnbblfd.
     * wifn <dodf>tbblfCibngfd</dodf> is invokfd bnd sorting is fnbblfd.
     * wifn <dodf>tbblfCibngfd</dodf> is invokfd bnd sorting is fnbblfd.
     */
     */
     */
     */
     */
    privbtf void sortfdTbblfCibngfd(RowSortfrEvfnt sortfdEvfnt,
    privbtf void sortfdTbblfCibngfd(RowSortfrEvfnt sortfdEvfnt,
    privbtf void sortfdTbblfCibngfd(RowSortfrEvfnt sortfdEvfnt,
    privbtf void sortfdTbblfCibngfd(RowSortfrEvfnt sortfdEvfnt,
    privbtf void sortfdTbblfCibngfd(RowSortfrEvfnt sortfdEvfnt,
                                    TbblfModflEvfnt f) {
                                    TbblfModflEvfnt f) {
                                    TbblfModflEvfnt f) {
                                    TbblfModflEvfnt f) {
                                    TbblfModflEvfnt f) {
        int fditingModflIndfx = -1;
        int fditingModflIndfx = -1;
        int fditingModflIndfx = -1;
        int fditingModflIndfx = -1;
        int fditingModflIndfx = -1;
        ModflCibngf dibngf = (f != null) ? nfw ModflCibngf(f) : null;
        ModflCibngf dibngf = (f != null) ? nfw ModflCibngf(f) : null;
        ModflCibngf dibngf = (f != null) ? nfw ModflCibngf(f) : null;
        ModflCibngf dibngf = (f != null) ? nfw ModflCibngf(f) : null;
        ModflCibngf dibngf = (f != null) ? nfw ModflCibngf(f) : null;





        if ((dibngf == null || !dibngf.bllRowsCibngfd) &&
        if ((dibngf == null || !dibngf.bllRowsCibngfd) &&
        if ((dibngf == null || !dibngf.bllRowsCibngfd) &&
        if ((dibngf == null || !dibngf.bllRowsCibngfd) &&
        if ((dibngf == null || !dibngf.bllRowsCibngfd) &&
                tiis.fditingRow != -1) {
                tiis.fditingRow != -1) {
                tiis.fditingRow != -1) {
                tiis.fditingRow != -1) {
                tiis.fditingRow != -1) {
            fditingModflIndfx = donvfrtRowIndfxToModfl(sortfdEvfnt,
            fditingModflIndfx = donvfrtRowIndfxToModfl(sortfdEvfnt,
            fditingModflIndfx = donvfrtRowIndfxToModfl(sortfdEvfnt,
            fditingModflIndfx = donvfrtRowIndfxToModfl(sortfdEvfnt,
            fditingModflIndfx = donvfrtRowIndfxToModfl(sortfdEvfnt,
                                                       tiis.fditingRow);
                                                       tiis.fditingRow);
                                                       tiis.fditingRow);
                                                       tiis.fditingRow);
                                                       tiis.fditingRow);
        }
        }
        }
        }
        }





        sortMbnbgfr.prfpbrfForCibngf(sortfdEvfnt, dibngf);
        sortMbnbgfr.prfpbrfForCibngf(sortfdEvfnt, dibngf);
        sortMbnbgfr.prfpbrfForCibngf(sortfdEvfnt, dibngf);
        sortMbnbgfr.prfpbrfForCibngf(sortfdEvfnt, dibngf);
        sortMbnbgfr.prfpbrfForCibngf(sortfdEvfnt, dibngf);





        if (f != null) {
        if (f != null) {
        if (f != null) {
        if (f != null) {
        if (f != null) {
            if (dibngf.typf == TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf == TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf == TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf == TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf == TbblfModflEvfnt.UPDATE) {
                rfpbintSortfdRows(dibngf);
                rfpbintSortfdRows(dibngf);
                rfpbintSortfdRows(dibngf);
                rfpbintSortfdRows(dibngf);
                rfpbintSortfdRows(dibngf);
            }
            }
            }
            }
            }
            notifySortfr(dibngf);
            notifySortfr(dibngf);
            notifySortfr(dibngf);
            notifySortfr(dibngf);
            notifySortfr(dibngf);
            if (dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (dibngf.typf != TbblfModflEvfnt.UPDATE) {
                // If tif Sortfr is unsortfd wf will not ibvf rfdfivfd
                // If tif Sortfr is unsortfd wf will not ibvf rfdfivfd
                // If tif Sortfr is unsortfd wf will not ibvf rfdfivfd
                // If tif Sortfr is unsortfd wf will not ibvf rfdfivfd
                // If tif Sortfr is unsortfd wf will not ibvf rfdfivfd
                // notifidbtion, fordf trfbting insfrt/dflftf bs b dibngf.
                // notifidbtion, fordf trfbting insfrt/dflftf bs b dibngf.
                // notifidbtion, fordf trfbting insfrt/dflftf bs b dibngf.
                // notifidbtion, fordf trfbting insfrt/dflftf bs b dibngf.
                // notifidbtion, fordf trfbting insfrt/dflftf bs b dibngf.
                sortfrCibngfd = truf;
                sortfrCibngfd = truf;
                sortfrCibngfd = truf;
                sortfrCibngfd = truf;
                sortfrCibngfd = truf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
            sortfrCibngfd = truf;
        }
        }
        }
        }
        }





        sortMbnbgfr.prodfssCibngf(sortfdEvfnt, dibngf, sortfrCibngfd);
        sortMbnbgfr.prodfssCibngf(sortfdEvfnt, dibngf, sortfrCibngfd);
        sortMbnbgfr.prodfssCibngf(sortfdEvfnt, dibngf, sortfrCibngfd);
        sortMbnbgfr.prodfssCibngf(sortfdEvfnt, dibngf, sortfrCibngfd);
        sortMbnbgfr.prodfssCibngf(sortfdEvfnt, dibngf, sortfrCibngfd);





        if (sortfrCibngfd) {
        if (sortfrCibngfd) {
        if (sortfrCibngfd) {
        if (sortfrCibngfd) {
        if (sortfrCibngfd) {
            // Updbtf tif fditing row
            // Updbtf tif fditing row
            // Updbtf tif fditing row
            // Updbtf tif fditing row
            // Updbtf tif fditing row
            if (tiis.fditingRow != -1) {
            if (tiis.fditingRow != -1) {
            if (tiis.fditingRow != -1) {
            if (tiis.fditingRow != -1) {
            if (tiis.fditingRow != -1) {
                int nfwIndfx = (fditingModflIndfx == -1) ? -1 :
                int nfwIndfx = (fditingModflIndfx == -1) ? -1 :
                int nfwIndfx = (fditingModflIndfx == -1) ? -1 :
                int nfwIndfx = (fditingModflIndfx == -1) ? -1 :
                int nfwIndfx = (fditingModflIndfx == -1) ? -1 :
                        donvfrtRowIndfxToVifw(fditingModflIndfx,dibngf);
                        donvfrtRowIndfxToVifw(fditingModflIndfx,dibngf);
                        donvfrtRowIndfxToVifw(fditingModflIndfx,dibngf);
                        donvfrtRowIndfxToVifw(fditingModflIndfx,dibngf);
                        donvfrtRowIndfxToVifw(fditingModflIndfx,dibngf);
                rfstorfSortingEditingRow(nfwIndfx);
                rfstorfSortingEditingRow(nfwIndfx);
                rfstorfSortingEditingRow(nfwIndfx);
                rfstorfSortingEditingRow(nfwIndfx);
                rfstorfSortingEditingRow(nfwIndfx);
            }
            }
            }
            }
            }





            // And ibndlf tif bppropribtf rfpbinting.
            // And ibndlf tif bppropribtf rfpbinting.
            // And ibndlf tif bppropribtf rfpbinting.
            // And ibndlf tif bppropribtf rfpbinting.
            // And ibndlf tif bppropribtf rfpbinting.
            if (f == null || dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (f == null || dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (f == null || dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (f == null || dibngf.typf != TbblfModflEvfnt.UPDATE) {
            if (f == null || dibngf.typf != TbblfModflEvfnt.UPDATE) {
                rfsizfAndRfpbint();
                rfsizfAndRfpbint();
                rfsizfAndRfpbint();
                rfsizfAndRfpbint();
                rfsizfAndRfpbint();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        // Cifdk if lfbd/bndior nffd to bf rfsft.
        // Cifdk if lfbd/bndior nffd to bf rfsft.
        // Cifdk if lfbd/bndior nffd to bf rfsft.
        // Cifdk if lfbd/bndior nffd to bf rfsft.
        // Cifdk if lfbd/bndior nffd to bf rfsft.
        if (dibngf != null && dibngf.bllRowsCibngfd) {
        if (dibngf != null && dibngf.bllRowsCibngfd) {
        if (dibngf != null && dibngf.bllRowsCibngfd) {
        if (dibngf != null && dibngf.bllRowsCibngfd) {
        if (dibngf != null && dibngf.bllRowsCibngfd) {
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfpbints tif sort of sortfd rows in rfsponsf to b TbblfModflEvfnt.
     * Rfpbints tif sort of sortfd rows in rfsponsf to b TbblfModflEvfnt.
     * Rfpbints tif sort of sortfd rows in rfsponsf to b TbblfModflEvfnt.
     * Rfpbints tif sort of sortfd rows in rfsponsf to b TbblfModflEvfnt.
     * Rfpbints tif sort of sortfd rows in rfsponsf to b TbblfModflEvfnt.
     */
     */
     */
     */
     */
    privbtf void rfpbintSortfdRows(ModflCibngf dibngf) {
    privbtf void rfpbintSortfdRows(ModflCibngf dibngf) {
    privbtf void rfpbintSortfdRows(ModflCibngf dibngf) {
    privbtf void rfpbintSortfdRows(ModflCibngf dibngf) {
    privbtf void rfpbintSortfdRows(ModflCibngf dibngf) {
        if (dibngf.stbrtModflIndfx > dibngf.fndModflIndfx ||
        if (dibngf.stbrtModflIndfx > dibngf.fndModflIndfx ||
        if (dibngf.stbrtModflIndfx > dibngf.fndModflIndfx ||
        if (dibngf.stbrtModflIndfx > dibngf.fndModflIndfx ||
        if (dibngf.stbrtModflIndfx > dibngf.fndModflIndfx ||
                dibngf.stbrtModflIndfx + 10 < dibngf.fndModflIndfx) {
                dibngf.stbrtModflIndfx + 10 < dibngf.fndModflIndfx) {
                dibngf.stbrtModflIndfx + 10 < dibngf.fndModflIndfx) {
                dibngf.stbrtModflIndfx + 10 < dibngf.fndModflIndfx) {
                dibngf.stbrtModflIndfx + 10 < dibngf.fndModflIndfx) {
            // Too mudi ibs dibngfd, punt
            // Too mudi ibs dibngfd, punt
            // Too mudi ibs dibngfd, punt
            // Too mudi ibs dibngfd, punt
            // Too mudi ibs dibngfd, punt
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        int fvfntColumn = dibngf.fvfnt.gftColumn();
        int fvfntColumn = dibngf.fvfnt.gftColumn();
        int fvfntColumn = dibngf.fvfnt.gftColumn();
        int fvfntColumn = dibngf.fvfnt.gftColumn();
        int fvfntColumn = dibngf.fvfnt.gftColumn();
        int dolumnVifwIndfx = fvfntColumn;
        int dolumnVifwIndfx = fvfntColumn;
        int dolumnVifwIndfx = fvfntColumn;
        int dolumnVifwIndfx = fvfntColumn;
        int dolumnVifwIndfx = fvfntColumn;
        if (dolumnVifwIndfx == TbblfModflEvfnt.ALL_COLUMNS) {
        if (dolumnVifwIndfx == TbblfModflEvfnt.ALL_COLUMNS) {
        if (dolumnVifwIndfx == TbblfModflEvfnt.ALL_COLUMNS) {
        if (dolumnVifwIndfx == TbblfModflEvfnt.ALL_COLUMNS) {
        if (dolumnVifwIndfx == TbblfModflEvfnt.ALL_COLUMNS) {
            dolumnVifwIndfx = 0;
            dolumnVifwIndfx = 0;
            dolumnVifwIndfx = 0;
            dolumnVifwIndfx = 0;
            dolumnVifwIndfx = 0;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            dolumnVifwIndfx = donvfrtColumnIndfxToVifw(dolumnVifwIndfx);
            dolumnVifwIndfx = donvfrtColumnIndfxToVifw(dolumnVifwIndfx);
            dolumnVifwIndfx = donvfrtColumnIndfxToVifw(dolumnVifwIndfx);
            dolumnVifwIndfx = donvfrtColumnIndfxToVifw(dolumnVifwIndfx);
            dolumnVifwIndfx = donvfrtColumnIndfxToVifw(dolumnVifwIndfx);
            if (dolumnVifwIndfx == -1) {
            if (dolumnVifwIndfx == -1) {
            if (dolumnVifwIndfx == -1) {
            if (dolumnVifwIndfx == -1) {
            if (dolumnVifwIndfx == -1) {
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        int modflIndfx = dibngf.stbrtModflIndfx;
        int modflIndfx = dibngf.stbrtModflIndfx;
        int modflIndfx = dibngf.stbrtModflIndfx;
        int modflIndfx = dibngf.stbrtModflIndfx;
        int modflIndfx = dibngf.stbrtModflIndfx;
        wiilf (modflIndfx <= dibngf.fndModflIndfx) {
        wiilf (modflIndfx <= dibngf.fndModflIndfx) {
        wiilf (modflIndfx <= dibngf.fndModflIndfx) {
        wiilf (modflIndfx <= dibngf.fndModflIndfx) {
        wiilf (modflIndfx <= dibngf.fndModflIndfx) {
            int vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx++);
            int vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx++);
            int vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx++);
            int vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx++);
            int vifwIndfx = donvfrtRowIndfxToVifw(modflIndfx++);
            if (vifwIndfx != -1) {
            if (vifwIndfx != -1) {
            if (vifwIndfx != -1) {
            if (vifwIndfx != -1) {
            if (vifwIndfx != -1) {
                Rfdtbnglf dirty = gftCfllRfdt(vifwIndfx, dolumnVifwIndfx,
                Rfdtbnglf dirty = gftCfllRfdt(vifwIndfx, dolumnVifwIndfx,
                Rfdtbnglf dirty = gftCfllRfdt(vifwIndfx, dolumnVifwIndfx,
                Rfdtbnglf dirty = gftCfllRfdt(vifwIndfx, dolumnVifwIndfx,
                Rfdtbnglf dirty = gftCfllRfdt(vifwIndfx, dolumnVifwIndfx,
                                              fblsf);
                                              fblsf);
                                              fblsf);
                                              fblsf);
                                              fblsf);
                int x = dirty.x;
                int x = dirty.x;
                int x = dirty.x;
                int x = dirty.x;
                int x = dirty.x;
                int w = dirty.widti;
                int w = dirty.widti;
                int w = dirty.widti;
                int w = dirty.widti;
                int w = dirty.widti;
                if (fvfntColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                if (fvfntColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                if (fvfntColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                if (fvfntColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                if (fvfntColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                    x = 0;
                    x = 0;
                    x = 0;
                    x = 0;
                    x = 0;
                    w = gftWidti();
                    w = gftWidti();
                    w = gftWidti();
                    w = gftWidti();
                    w = gftWidti();
                }
                }
                }
                }
                }
                rfpbint(x, dirty.y, w, dirty.ifigit);
                rfpbint(x, dirty.y, w, dirty.ifigit);
                rfpbint(x, dirty.y, w, dirty.ifigit);
                rfpbint(x, dirty.y, w, dirty.ifigit);
                rfpbint(x, dirty.y, w, dirty.ifigit);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfstorfs tif sflfdtion bftfr b modfl fvfnt/sort ordfr dibngfs.
     * Rfstorfs tif sflfdtion bftfr b modfl fvfnt/sort ordfr dibngfs.
     * Rfstorfs tif sflfdtion bftfr b modfl fvfnt/sort ordfr dibngfs.
     * Rfstorfs tif sflfdtion bftfr b modfl fvfnt/sort ordfr dibngfs.
     * Rfstorfs tif sflfdtion bftfr b modfl fvfnt/sort ordfr dibngfs.
     * All doordinbtfs brf in tfrms of tif modfl.
     * All doordinbtfs brf in tfrms of tif modfl.
     * All doordinbtfs brf in tfrms of tif modfl.
     * All doordinbtfs brf in tfrms of tif modfl.
     * All doordinbtfs brf in tfrms of tif modfl.
     */
     */
     */
     */
     */
    privbtf void rfstorfSortingSflfdtion(int[] sflfdtion, int lfbd,
    privbtf void rfstorfSortingSflfdtion(int[] sflfdtion, int lfbd,
    privbtf void rfstorfSortingSflfdtion(int[] sflfdtion, int lfbd,
    privbtf void rfstorfSortingSflfdtion(int[] sflfdtion, int lfbd,
    privbtf void rfstorfSortingSflfdtion(int[] sflfdtion, int lfbd,
            ModflCibngf dibngf) {
            ModflCibngf dibngf) {
            ModflCibngf dibngf) {
            ModflCibngf dibngf) {
            ModflCibngf dibngf) {
        // Convfrt tif sflfdtion from modfl to vifw
        // Convfrt tif sflfdtion from modfl to vifw
        // Convfrt tif sflfdtion from modfl to vifw
        // Convfrt tif sflfdtion from modfl to vifw
        // Convfrt tif sflfdtion from modfl to vifw
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
            sflfdtion[i] = donvfrtRowIndfxToVifw(sflfdtion[i], dibngf);
            sflfdtion[i] = donvfrtRowIndfxToVifw(sflfdtion[i], dibngf);
            sflfdtion[i] = donvfrtRowIndfxToVifw(sflfdtion[i], dibngf);
            sflfdtion[i] = donvfrtRowIndfxToVifw(sflfdtion[i], dibngf);
            sflfdtion[i] = donvfrtRowIndfxToVifw(sflfdtion[i], dibngf);
        }
        }
        }
        }
        }
        lfbd = donvfrtRowIndfxToVifw(lfbd, dibngf);
        lfbd = donvfrtRowIndfxToVifw(lfbd, dibngf);
        lfbd = donvfrtRowIndfxToVifw(lfbd, dibngf);
        lfbd = donvfrtRowIndfxToVifw(lfbd, dibngf);
        lfbd = donvfrtRowIndfxToVifw(lfbd, dibngf);





        // Cifdk for tif dommon dbsf of no dibngf in sflfdtion for 1 row
        // Cifdk for tif dommon dbsf of no dibngf in sflfdtion for 1 row
        // Cifdk for tif dommon dbsf of no dibngf in sflfdtion for 1 row
        // Cifdk for tif dommon dbsf of no dibngf in sflfdtion for 1 row
        // Cifdk for tif dommon dbsf of no dibngf in sflfdtion for 1 row
        if (sflfdtion.lfngti == 0 ||
        if (sflfdtion.lfngti == 0 ||
        if (sflfdtion.lfngti == 0 ||
        if (sflfdtion.lfngti == 0 ||
        if (sflfdtion.lfngti == 0 ||
            (sflfdtion.lfngti == 1 && sflfdtion[0] == gftSflfdtfdRow())) {
            (sflfdtion.lfngti == 1 && sflfdtion[0] == gftSflfdtfdRow())) {
            (sflfdtion.lfngti == 1 && sflfdtion[0] == gftSflfdtfdRow())) {
            (sflfdtion.lfngti == 1 && sflfdtion[0] == gftSflfdtfdRow())) {
            (sflfdtion.lfngti == 1 && sflfdtion[0] == gftSflfdtfdRow())) {
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }





        // And bpply tif nfw sflfdtion
        // And bpply tif nfw sflfdtion
        // And bpply tif nfw sflfdtion
        // And bpply tif nfw sflfdtion
        // And bpply tif nfw sflfdtion
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.sftVblufIsAdjusting(truf);
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        sflfdtionModfl.dlfbrSflfdtion();
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
            if (sflfdtion[i] != -1) {
            if (sflfdtion[i] != -1) {
            if (sflfdtion[i] != -1) {
            if (sflfdtion[i] != -1) {
            if (sflfdtion[i] != -1) {
                sflfdtionModfl.bddSflfdtionIntfrvbl(sflfdtion[i],
                sflfdtionModfl.bddSflfdtionIntfrvbl(sflfdtion[i],
                sflfdtionModfl.bddSflfdtionIntfrvbl(sflfdtion[i],
                sflfdtionModfl.bddSflfdtionIntfrvbl(sflfdtion[i],
                sflfdtionModfl.bddSflfdtionIntfrvbl(sflfdtion[i],
                                                    sflfdtion[i]);
                                                    sflfdtion[i]);
                                                    sflfdtion[i]);
                                                    sflfdtion[i]);
                                                    sflfdtion[i]);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
        SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
        SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
        SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
        SwingUtilitifs2.sftLfbdAndiorWitioutSflfdtion(
                sflfdtionModfl, lfbd, lfbd);
                sflfdtionModfl, lfbd, lfbd);
                sflfdtionModfl, lfbd, lfbd);
                sflfdtionModfl, lfbd, lfbd);
                sflfdtionModfl, lfbd, lfbd);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
        sflfdtionModfl.sftVblufIsAdjusting(fblsf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfstorfs tif fditing row bftfr b modfl fvfnt/sort ordfr dibngf.
     * Rfstorfs tif fditing row bftfr b modfl fvfnt/sort ordfr dibngf.
     * Rfstorfs tif fditing row bftfr b modfl fvfnt/sort ordfr dibngf.
     * Rfstorfs tif fditing row bftfr b modfl fvfnt/sort ordfr dibngf.
     * Rfstorfs tif fditing row bftfr b modfl fvfnt/sort ordfr dibngf.
     *
     *
     *
     *
     *
     * @pbrbm fditingRow nfw indfx of tif fditingRow, in tfrms of tif vifw
     * @pbrbm fditingRow nfw indfx of tif fditingRow, in tfrms of tif vifw
     * @pbrbm fditingRow nfw indfx of tif fditingRow, in tfrms of tif vifw
     * @pbrbm fditingRow nfw indfx of tif fditingRow, in tfrms of tif vifw
     * @pbrbm fditingRow nfw indfx of tif fditingRow, in tfrms of tif vifw
     */
     */
     */
     */
     */
    privbtf void rfstorfSortingEditingRow(int fditingRow) {
    privbtf void rfstorfSortingEditingRow(int fditingRow) {
    privbtf void rfstorfSortingEditingRow(int fditingRow) {
    privbtf void rfstorfSortingEditingRow(int fditingRow) {
    privbtf void rfstorfSortingEditingRow(int fditingRow) {
        if (fditingRow == -1) {
        if (fditingRow == -1) {
        if (fditingRow == -1) {
        if (fditingRow == -1) {
        if (fditingRow == -1) {
            // Editing row no longfr bfing siown, dbndfl fditing
            // Editing row no longfr bfing siown, dbndfl fditing
            // Editing row no longfr bfing siown, dbndfl fditing
            // Editing row no longfr bfing siown, dbndfl fditing
            // Editing row no longfr bfing siown, dbndfl fditing
            TbblfCfllEditor fditor = gftCfllEditor();
            TbblfCfllEditor fditor = gftCfllEditor();
            TbblfCfllEditor fditor = gftCfllEditor();
            TbblfCfllEditor fditor = gftCfllEditor();
            TbblfCfllEditor fditor = gftCfllEditor();
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
            if (fditor != null) {
                // First try bnd dbndfl
                // First try bnd dbndfl
                // First try bnd dbndfl
                // First try bnd dbndfl
                // First try bnd dbndfl
                fditor.dbndflCfllEditing();
                fditor.dbndflCfllEditing();
                fditor.dbndflCfllEditing();
                fditor.dbndflCfllEditing();
                fditor.dbndflCfllEditing();
                if (gftCfllEditor() != null) {
                if (gftCfllEditor() != null) {
                if (gftCfllEditor() != null) {
                if (gftCfllEditor() != null) {
                if (gftCfllEditor() != null) {
                    // CfllEditor didn't dfdf dontrol, fordffully
                    // CfllEditor didn't dfdf dontrol, fordffully
                    // CfllEditor didn't dfdf dontrol, fordffully
                    // CfllEditor didn't dfdf dontrol, fordffully
                    // CfllEditor didn't dfdf dontrol, fordffully
                    // rfmovf it
                    // rfmovf it
                    // rfmovf it
                    // rfmovf it
                    // rfmovf it
                    rfmovfEditor();
                    rfmovfEditor();
                    rfmovfEditor();
                    rfmovfEditor();
                    rfmovfEditor();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            // Rfpositioning ibndlfd in BbsidTbblfUI
            // Rfpositioning ibndlfd in BbsidTbblfUI
            // Rfpositioning ibndlfd in BbsidTbblfUI
            // Rfpositioning ibndlfd in BbsidTbblfUI
            // Rfpositioning ibndlfd in BbsidTbblfUI
            tiis.fditingRow = fditingRow;
            tiis.fditingRow = fditingRow;
            tiis.fditingRow = fditingRow;
            tiis.fditingRow = fditingRow;
            tiis.fditingRow = fditingRow;
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs tif sortfr of b dibngf in tif undfrlying modfl.
     * Notififs tif sortfr of b dibngf in tif undfrlying modfl.
     * Notififs tif sortfr of b dibngf in tif undfrlying modfl.
     * Notififs tif sortfr of b dibngf in tif undfrlying modfl.
     * Notififs tif sortfr of b dibngf in tif undfrlying modfl.
     */
     */
     */
     */
     */
    privbtf void notifySortfr(ModflCibngf dibngf) {
    privbtf void notifySortfr(ModflCibngf dibngf) {
    privbtf void notifySortfr(ModflCibngf dibngf) {
    privbtf void notifySortfr(ModflCibngf dibngf) {
    privbtf void notifySortfr(ModflCibngf dibngf) {
        try {
        try {
        try {
        try {
        try {
            ignorfSortCibngf = truf;
            ignorfSortCibngf = truf;
            ignorfSortCibngf = truf;
            ignorfSortCibngf = truf;
            ignorfSortCibngf = truf;
            sortfrCibngfd = fblsf;
            sortfrCibngfd = fblsf;
            sortfrCibngfd = fblsf;
            sortfrCibngfd = fblsf;
            sortfrCibngfd = fblsf;
            switdi(dibngf.typf) {
            switdi(dibngf.typf) {
            switdi(dibngf.typf) {
            switdi(dibngf.typf) {
            switdi(dibngf.typf) {
            dbsf TbblfModflEvfnt.UPDATE:
            dbsf TbblfModflEvfnt.UPDATE:
            dbsf TbblfModflEvfnt.UPDATE:
            dbsf TbblfModflEvfnt.UPDATE:
            dbsf TbblfModflEvfnt.UPDATE:
                if (dibngf.fvfnt.gftLbstRow() == Intfgfr.MAX_VALUE) {
                if (dibngf.fvfnt.gftLbstRow() == Intfgfr.MAX_VALUE) {
                if (dibngf.fvfnt.gftLbstRow() == Intfgfr.MAX_VALUE) {
                if (dibngf.fvfnt.gftLbstRow() == Intfgfr.MAX_VALUE) {
                if (dibngf.fvfnt.gftLbstRow() == Intfgfr.MAX_VALUE) {
                    sortMbnbgfr.sortfr.bllRowsCibngfd();
                    sortMbnbgfr.sortfr.bllRowsCibngfd();
                    sortMbnbgfr.sortfr.bllRowsCibngfd();
                    sortMbnbgfr.sortfr.bllRowsCibngfd();
                    sortMbnbgfr.sortfr.bllRowsCibngfd();
                } flsf if (dibngf.fvfnt.gftColumn() ==
                } flsf if (dibngf.fvfnt.gftColumn() ==
                } flsf if (dibngf.fvfnt.gftColumn() ==
                } flsf if (dibngf.fvfnt.gftColumn() ==
                } flsf if (dibngf.fvfnt.gftColumn() ==
                           TbblfModflEvfnt.ALL_COLUMNS) {
                           TbblfModflEvfnt.ALL_COLUMNS) {
                           TbblfModflEvfnt.ALL_COLUMNS) {
                           TbblfModflEvfnt.ALL_COLUMNS) {
                           TbblfModflEvfnt.ALL_COLUMNS) {
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                                       dibngf.fndModflIndfx);
                                       dibngf.fndModflIndfx);
                                       dibngf.fndModflIndfx);
                                       dibngf.fndModflIndfx);
                                       dibngf.fndModflIndfx);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                    sortMbnbgfr.sortfr.rowsUpdbtfd(dibngf.stbrtModflIndfx,
                                       dibngf.fndModflIndfx,
                                       dibngf.fndModflIndfx,
                                       dibngf.fndModflIndfx,
                                       dibngf.fndModflIndfx,
                                       dibngf.fndModflIndfx,
                                       dibngf.fvfnt.gftColumn());
                                       dibngf.fvfnt.gftColumn());
                                       dibngf.fvfnt.gftColumn());
                                       dibngf.fvfnt.gftColumn());
                                       dibngf.fvfnt.gftColumn());
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf TbblfModflEvfnt.INSERT:
            dbsf TbblfModflEvfnt.INSERT:
            dbsf TbblfModflEvfnt.INSERT:
            dbsf TbblfModflEvfnt.INSERT:
            dbsf TbblfModflEvfnt.INSERT:
                sortMbnbgfr.sortfr.rowsInsfrtfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsInsfrtfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsInsfrtfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsInsfrtfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsInsfrtfd(dibngf.stbrtModflIndfx,
                                    dibngf.fndModflIndfx);
                                    dibngf.fndModflIndfx);
                                    dibngf.fndModflIndfx);
                                    dibngf.fndModflIndfx);
                                    dibngf.fndModflIndfx);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf TbblfModflEvfnt.DELETE:
            dbsf TbblfModflEvfnt.DELETE:
            dbsf TbblfModflEvfnt.DELETE:
            dbsf TbblfModflEvfnt.DELETE:
            dbsf TbblfModflEvfnt.DELETE:
                sortMbnbgfr.sortfr.rowsDflftfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsDflftfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsDflftfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsDflftfd(dibngf.stbrtModflIndfx,
                sortMbnbgfr.sortfr.rowsDflftfd(dibngf.stbrtModflIndfx,
                                   dibngf.fndModflIndfx);
                                   dibngf.fndModflIndfx);
                                   dibngf.fndModflIndfx);
                                   dibngf.fndModflIndfx);
                                   dibngf.fndModflIndfx);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            }
            }
            }
            }
            }
        } finblly {
        } finblly {
        } finblly {
        } finblly {
        } finblly {
            ignorfSortCibngf = fblsf;
            ignorfSortCibngf = fblsf;
            ignorfSortCibngf = fblsf;
            ignorfSortCibngf = fblsf;
            ignorfSortCibngf = fblsf;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Convfrts b modfl indfx to vifw indfx.  Tiis is dbllfd wifn tif
     * Convfrts b modfl indfx to vifw indfx.  Tiis is dbllfd wifn tif
     * Convfrts b modfl indfx to vifw indfx.  Tiis is dbllfd wifn tif
     * Convfrts b modfl indfx to vifw indfx.  Tiis is dbllfd wifn tif
     * Convfrts b modfl indfx to vifw indfx.  Tiis is dbllfd wifn tif
     * sortfr or modfl dibngfs bnd sorting is fnbblfd.
     * sortfr or modfl dibngfs bnd sorting is fnbblfd.
     * sortfr or modfl dibngfs bnd sorting is fnbblfd.
     * sortfr or modfl dibngfs bnd sorting is fnbblfd.
     * sortfr or modfl dibngfs bnd sorting is fnbblfd.
     *
     *
     *
     *
     *
     * @pbrbm dibngf dfsdribfs tif TbblfModflEvfnt tibt initibtfd tif dibngf;
     * @pbrbm dibngf dfsdribfs tif TbblfModflEvfnt tibt initibtfd tif dibngf;
     * @pbrbm dibngf dfsdribfs tif TbblfModflEvfnt tibt initibtfd tif dibngf;
     * @pbrbm dibngf dfsdribfs tif TbblfModflEvfnt tibt initibtfd tif dibngf;
     * @pbrbm dibngf dfsdribfs tif TbblfModflEvfnt tibt initibtfd tif dibngf;
     *        will bf null if dbllfd bs tif rfsult of b sort
     *        will bf null if dbllfd bs tif rfsult of b sort
     *        will bf null if dbllfd bs tif rfsult of b sort
     *        will bf null if dbllfd bs tif rfsult of b sort
     *        will bf null if dbllfd bs tif rfsult of b sort
     */
     */
     */
     */
     */
    privbtf int donvfrtRowIndfxToVifw(int modflIndfx, ModflCibngf dibngf) {
    privbtf int donvfrtRowIndfxToVifw(int modflIndfx, ModflCibngf dibngf) {
    privbtf int donvfrtRowIndfxToVifw(int modflIndfx, ModflCibngf dibngf) {
    privbtf int donvfrtRowIndfxToVifw(int modflIndfx, ModflCibngf dibngf) {
    privbtf int donvfrtRowIndfxToVifw(int modflIndfx, ModflCibngf dibngf) {
        if (modflIndfx < 0) {
        if (modflIndfx < 0) {
        if (modflIndfx < 0) {
        if (modflIndfx < 0) {
        if (modflIndfx < 0) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        if (dibngf != null && modflIndfx >= dibngf.stbrtModflIndfx) {
        if (dibngf != null && modflIndfx >= dibngf.stbrtModflIndfx) {
        if (dibngf != null && modflIndfx >= dibngf.stbrtModflIndfx) {
        if (dibngf != null && modflIndfx >= dibngf.stbrtModflIndfx) {
        if (dibngf != null && modflIndfx >= dibngf.stbrtModflIndfx) {
            if (dibngf.typf == TbblfModflEvfnt.INSERT) {
            if (dibngf.typf == TbblfModflEvfnt.INSERT) {
            if (dibngf.typf == TbblfModflEvfnt.INSERT) {
            if (dibngf.typf == TbblfModflEvfnt.INSERT) {
            if (dibngf.typf == TbblfModflEvfnt.INSERT) {
                if (modflIndfx + dibngf.lfngti >= dibngf.modflRowCount) {
                if (modflIndfx + dibngf.lfngti >= dibngf.modflRowCount) {
                if (modflIndfx + dibngf.lfngti >= dibngf.modflRowCount) {
                if (modflIndfx + dibngf.lfngti >= dibngf.modflRowCount) {
                if (modflIndfx + dibngf.lfngti >= dibngf.modflRowCount) {
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                }
                }
                }
                }
                }
                rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                        modflIndfx + dibngf.lfngti);
                        modflIndfx + dibngf.lfngti);
                        modflIndfx + dibngf.lfngti);
                        modflIndfx + dibngf.lfngti);
                        modflIndfx + dibngf.lfngti);
            }
            }
            }
            }
            }
            flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
            flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
            flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
            flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
            flsf if (dibngf.typf == TbblfModflEvfnt.DELETE) {
                if (modflIndfx <= dibngf.fndModflIndfx) {
                if (modflIndfx <= dibngf.fndModflIndfx) {
                if (modflIndfx <= dibngf.fndModflIndfx) {
                if (modflIndfx <= dibngf.fndModflIndfx) {
                if (modflIndfx <= dibngf.fndModflIndfx) {
                    // dflftfd
                    // dflftfd
                    // dflftfd
                    // dflftfd
                    // dflftfd
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                    rfturn -1;
                }
                }
                }
                }
                }
                flsf {
                flsf {
                flsf {
                flsf {
                flsf {
                    if (modflIndfx - dibngf.lfngti >= dibngf.modflRowCount) {
                    if (modflIndfx - dibngf.lfngti >= dibngf.modflRowCount) {
                    if (modflIndfx - dibngf.lfngti >= dibngf.modflRowCount) {
                    if (modflIndfx - dibngf.lfngti >= dibngf.modflRowCount) {
                    if (modflIndfx - dibngf.lfngti >= dibngf.modflRowCount) {
                        rfturn -1;
                        rfturn -1;
                        rfturn -1;
                        rfturn -1;
                        rfturn -1;
                    }
                    }
                    }
                    }
                    }
                    rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                    rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                    rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                    rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                    rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(
                            modflIndfx - dibngf.lfngti);
                            modflIndfx - dibngf.lfngti);
                            modflIndfx - dibngf.lfngti);
                            modflIndfx - dibngf.lfngti);
                            modflIndfx - dibngf.lfngti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            // flsf, updbtfd
            // flsf, updbtfd
            // flsf, updbtfd
            // flsf, updbtfd
            // flsf, updbtfd
        }
        }
        }
        }
        }
        if (modflIndfx >= gftModfl().gftRowCount()) {
        if (modflIndfx >= gftModfl().gftRowCount()) {
        if (modflIndfx >= gftModfl().gftRowCount()) {
        if (modflIndfx >= gftModfl().gftRowCount()) {
        if (modflIndfx >= gftModfl().gftRowCount()) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(modflIndfx);
        rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(modflIndfx);
        rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(modflIndfx);
        rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(modflIndfx);
        rfturn sortMbnbgfr.sortfr.donvfrtRowIndfxToVifw(modflIndfx);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Convfrts tif sflfdtion to modfl doordinbtfs.  Tiis is usfd wifn
     * Convfrts tif sflfdtion to modfl doordinbtfs.  Tiis is usfd wifn
     * Convfrts tif sflfdtion to modfl doordinbtfs.  Tiis is usfd wifn
     * Convfrts tif sflfdtion to modfl doordinbtfs.  Tiis is usfd wifn
     * Convfrts tif sflfdtion to modfl doordinbtfs.  Tiis is usfd wifn
     * tif modfl dibngfs or tif sortfr dibngfs.
     * tif modfl dibngfs or tif sortfr dibngfs.
     * tif modfl dibngfs or tif sortfr dibngfs.
     * tif modfl dibngfs or tif sortfr dibngfs.
     * tif modfl dibngfs or tif sortfr dibngfs.
     */
     */
     */
     */
     */
    privbtf int[] donvfrtSflfdtionToModfl(RowSortfrEvfnt f) {
    privbtf int[] donvfrtSflfdtionToModfl(RowSortfrEvfnt f) {
    privbtf int[] donvfrtSflfdtionToModfl(RowSortfrEvfnt f) {
    privbtf int[] donvfrtSflfdtionToModfl(RowSortfrEvfnt f) {
    privbtf int[] donvfrtSflfdtionToModfl(RowSortfrEvfnt f) {
        int[] sflfdtion = gftSflfdtfdRows();
        int[] sflfdtion = gftSflfdtfdRows();
        int[] sflfdtion = gftSflfdtfdRows();
        int[] sflfdtion = gftSflfdtfdRows();
        int[] sflfdtion = gftSflfdtfdRows();
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
        for (int i = sflfdtion.lfngti - 1; i >= 0; i--) {
            sflfdtion[i] = donvfrtRowIndfxToModfl(f, sflfdtion[i]);
            sflfdtion[i] = donvfrtRowIndfxToModfl(f, sflfdtion[i]);
            sflfdtion[i] = donvfrtRowIndfxToModfl(f, sflfdtion[i]);
            sflfdtion[i] = donvfrtRowIndfxToModfl(f, sflfdtion[i]);
            sflfdtion[i] = donvfrtRowIndfxToModfl(f, sflfdtion[i]);
        }
        }
        }
        }
        }
        rfturn sflfdtion;
        rfturn sflfdtion;
        rfturn sflfdtion;
        rfturn sflfdtion;
        rfturn sflfdtion;
    }
    }
    }
    }
    }





    privbtf int donvfrtRowIndfxToModfl(RowSortfrEvfnt f, int vifwIndfx) {
    privbtf int donvfrtRowIndfxToModfl(RowSortfrEvfnt f, int vifwIndfx) {
    privbtf int donvfrtRowIndfxToModfl(RowSortfrEvfnt f, int vifwIndfx) {
    privbtf int donvfrtRowIndfxToModfl(RowSortfrEvfnt f, int vifwIndfx) {
    privbtf int donvfrtRowIndfxToModfl(RowSortfrEvfnt f, int vifwIndfx) {
        if (f != null) {
        if (f != null) {
        if (f != null) {
        if (f != null) {
        if (f != null) {
            if (f.gftPrfviousRowCount() == 0) {
            if (f.gftPrfviousRowCount() == 0) {
            if (f.gftPrfviousRowCount() == 0) {
            if (f.gftPrfviousRowCount() == 0) {
            if (f.gftPrfviousRowCount() == 0) {
                rfturn vifwIndfx;
                rfturn vifwIndfx;
                rfturn vifwIndfx;
                rfturn vifwIndfx;
                rfturn vifwIndfx;
            }
            }
            }
            }
            }
            // rbngf difdking ibndlfd by RowSortfrEvfnt
            // rbngf difdking ibndlfd by RowSortfrEvfnt
            // rbngf difdking ibndlfd by RowSortfrEvfnt
            // rbngf difdking ibndlfd by RowSortfrEvfnt
            // rbngf difdking ibndlfd by RowSortfrEvfnt
            rfturn f.donvfrtPrfviousRowIndfxToModfl(vifwIndfx);
            rfturn f.donvfrtPrfviousRowIndfxToModfl(vifwIndfx);
            rfturn f.donvfrtPrfviousRowIndfxToModfl(vifwIndfx);
            rfturn f.donvfrtPrfviousRowIndfxToModfl(vifwIndfx);
            rfturn f.donvfrtPrfviousRowIndfxToModfl(vifwIndfx);
        }
        }
        }
        }
        }
        // Mbkf surf tif vifwIndfx is vblid
        // Mbkf surf tif vifwIndfx is vblid
        // Mbkf surf tif vifwIndfx is vblid
        // Mbkf surf tif vifwIndfx is vblid
        // Mbkf surf tif vifwIndfx is vblid
        if (vifwIndfx < 0 || vifwIndfx >= gftRowCount()) {
        if (vifwIndfx < 0 || vifwIndfx >= gftRowCount()) {
        if (vifwIndfx < 0 || vifwIndfx >= gftRowCount()) {
        if (vifwIndfx < 0 || vifwIndfx >= gftRowCount()) {
        if (vifwIndfx < 0 || vifwIndfx >= gftRowCount()) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        rfturn donvfrtRowIndfxToModfl(vifwIndfx);
        rfturn donvfrtRowIndfxToModfl(vifwIndfx);
        rfturn donvfrtRowIndfxToModfl(vifwIndfx);
        rfturn donvfrtRowIndfxToModfl(vifwIndfx);
        rfturn donvfrtRowIndfxToModfl(vifwIndfx);
    }
    }
    }
    }
    }





//
//
//
//
//
// Implfmfnting TbblfModflListfnfr intfrfbdf
// Implfmfnting TbblfModflListfnfr intfrfbdf
// Implfmfnting TbblfModflListfnfr intfrfbdf
// Implfmfnting TbblfModflListfnfr intfrfbdf
// Implfmfnting TbblfModflListfnfr intfrfbdf
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn tiis tbblf's <dodf>TbblfModfl</dodf> gfnfrbtfs
     * Invokfd wifn tiis tbblf's <dodf>TbblfModfl</dodf> gfnfrbtfs
     * Invokfd wifn tiis tbblf's <dodf>TbblfModfl</dodf> gfnfrbtfs
     * Invokfd wifn tiis tbblf's <dodf>TbblfModfl</dodf> gfnfrbtfs
     * Invokfd wifn tiis tbblf's <dodf>TbblfModfl</dodf> gfnfrbtfs
     * b <dodf>TbblfModflEvfnt</dodf>.
     * b <dodf>TbblfModflEvfnt</dodf>.
     * b <dodf>TbblfModflEvfnt</dodf>.
     * b <dodf>TbblfModflEvfnt</dodf>.
     * b <dodf>TbblfModflEvfnt</dodf>.
     * Tif <dodf>TbblfModflEvfnt</dodf> siould bf donstrudtfd in tif
     * Tif <dodf>TbblfModflEvfnt</dodf> siould bf donstrudtfd in tif
     * Tif <dodf>TbblfModflEvfnt</dodf> siould bf donstrudtfd in tif
     * Tif <dodf>TbblfModflEvfnt</dodf> siould bf donstrudtfd in tif
     * Tif <dodf>TbblfModflEvfnt</dodf> siould bf donstrudtfd in tif
     * doordinbtf systfm of tif modfl; tif bppropribtf mbpping to tif
     * doordinbtf systfm of tif modfl; tif bppropribtf mbpping to tif
     * doordinbtf systfm of tif modfl; tif bppropribtf mbpping to tif
     * doordinbtf systfm of tif modfl; tif bppropribtf mbpping to tif
     * doordinbtf systfm of tif modfl; tif bppropribtf mbpping to tif
     * vifw doordinbtf systfm is pfrformfd by tiis <dodf>JTbblf</dodf>
     * vifw doordinbtf systfm is pfrformfd by tiis <dodf>JTbblf</dodf>
     * vifw doordinbtf systfm is pfrformfd by tiis <dodf>JTbblf</dodf>
     * vifw doordinbtf systfm is pfrformfd by tiis <dodf>JTbblf</dodf>
     * vifw doordinbtf systfm is pfrformfd by tiis <dodf>JTbblf</dodf>
     * wifn it rfdfivfs tif fvfnt.
     * wifn it rfdfivfs tif fvfnt.
     * wifn it rfdfivfs tif fvfnt.
     * wifn it rfdfivfs tif fvfnt.
     * wifn it rfdfivfs tif fvfnt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by <dodf>JTbblf</dodf>.
     * brf usfd intfrnblly by <dodf>JTbblf</dodf>.
     * brf usfd intfrnblly by <dodf>JTbblf</dodf>.
     * brf usfd intfrnblly by <dodf>JTbblf</dodf>.
     * brf usfd intfrnblly by <dodf>JTbblf</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt bs of 1.3, tiis mftiod dlfbrs tif sflfdtion, if bny.
     * Notf tibt bs of 1.3, tiis mftiod dlfbrs tif sflfdtion, if bny.
     * Notf tibt bs of 1.3, tiis mftiod dlfbrs tif sflfdtion, if bny.
     * Notf tibt bs of 1.3, tiis mftiod dlfbrs tif sflfdtion, if bny.
     * Notf tibt bs of 1.3, tiis mftiod dlfbrs tif sflfdtion, if bny.
     */
     */
     */
     */
     */
    publid void tbblfCibngfd(TbblfModflEvfnt f) {
    publid void tbblfCibngfd(TbblfModflEvfnt f) {
    publid void tbblfCibngfd(TbblfModflEvfnt f) {
    publid void tbblfCibngfd(TbblfModflEvfnt f) {
    publid void tbblfCibngfd(TbblfModflEvfnt f) {
        if (f == null || f.gftFirstRow() == TbblfModflEvfnt.HEADER_ROW) {
        if (f == null || f.gftFirstRow() == TbblfModflEvfnt.HEADER_ROW) {
        if (f == null || f.gftFirstRow() == TbblfModflEvfnt.HEADER_ROW) {
        if (f == null || f.gftFirstRow() == TbblfModflEvfnt.HEADER_ROW) {
        if (f == null || f.gftFirstRow() == TbblfModflEvfnt.HEADER_ROW) {
            // Tif wiolf tiing dibngfd
            // Tif wiolf tiing dibngfd
            // Tif wiolf tiing dibngfd
            // Tif wiolf tiing dibngfd
            // Tif wiolf tiing dibngfd
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();





            rowModfl = null;
            rowModfl = null;
            rowModfl = null;
            rowModfl = null;
            rowModfl = null;





            if (sortMbnbgfr != null) {
            if (sortMbnbgfr != null) {
            if (sortMbnbgfr != null) {
            if (sortMbnbgfr != null) {
            if (sortMbnbgfr != null) {
                try {
                try {
                try {
                try {
                try {
                    ignorfSortCibngf = truf;
                    ignorfSortCibngf = truf;
                    ignorfSortCibngf = truf;
                    ignorfSortCibngf = truf;
                    ignorfSortCibngf = truf;
                    sortMbnbgfr.sortfr.modflStrudturfCibngfd();
                    sortMbnbgfr.sortfr.modflStrudturfCibngfd();
                    sortMbnbgfr.sortfr.modflStrudturfCibngfd();
                    sortMbnbgfr.sortfr.modflStrudturfCibngfd();
                    sortMbnbgfr.sortfr.modflStrudturfCibngfd();
                } finblly {
                } finblly {
                } finblly {
                } finblly {
                } finblly {
                    ignorfSortCibngf = fblsf;
                    ignorfSortCibngf = fblsf;
                    ignorfSortCibngf = fblsf;
                    ignorfSortCibngf = fblsf;
                    ignorfSortCibngf = fblsf;
                }
                }
                }
                }
                }
                sortMbnbgfr.bllCibngfd();
                sortMbnbgfr.bllCibngfd();
                sortMbnbgfr.bllCibngfd();
                sortMbnbgfr.bllCibngfd();
                sortMbnbgfr.bllCibngfd();
            }
            }
            }
            }
            }





            if (gftAutoCrfbtfColumnsFromModfl()) {
            if (gftAutoCrfbtfColumnsFromModfl()) {
            if (gftAutoCrfbtfColumnsFromModfl()) {
            if (gftAutoCrfbtfColumnsFromModfl()) {
            if (gftAutoCrfbtfColumnsFromModfl()) {
                // Tiis will ffffdt invblidbtion of tif JTbblf bnd JTbblfHfbdfr.
                // Tiis will ffffdt invblidbtion of tif JTbblf bnd JTbblfHfbdfr.
                // Tiis will ffffdt invblidbtion of tif JTbblf bnd JTbblfHfbdfr.
                // Tiis will ffffdt invblidbtion of tif JTbblf bnd JTbblfHfbdfr.
                // Tiis will ffffdt invblidbtion of tif JTbblf bnd JTbblfHfbdfr.
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                drfbtfDffbultColumnsFromModfl();
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;
            }
            }
            }
            }
            }





            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }





        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
            sortfdTbblfCibngfd(null, f);
            sortfdTbblfCibngfd(null, f);
            sortfdTbblfCibngfd(null, f);
            sortfdTbblfCibngfd(null, f);
            sortfdTbblfCibngfd(null, f);
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }





        // Tif totblRowHfigit dbldulbtfd bflow will bf indorrfdt if
        // Tif totblRowHfigit dbldulbtfd bflow will bf indorrfdt if
        // Tif totblRowHfigit dbldulbtfd bflow will bf indorrfdt if
        // Tif totblRowHfigit dbldulbtfd bflow will bf indorrfdt if
        // Tif totblRowHfigit dbldulbtfd bflow will bf indorrfdt if
        // tifrf brf vbribblf ifigit rows. Rfpbint tif visiblf rfgion,
        // tifrf brf vbribblf ifigit rows. Rfpbint tif visiblf rfgion,
        // tifrf brf vbribblf ifigit rows. Rfpbint tif visiblf rfgion,
        // tifrf brf vbribblf ifigit rows. Rfpbint tif visiblf rfgion,
        // tifrf brf vbribblf ifigit rows. Rfpbint tif visiblf rfgion,
        // but don't rfturn bs b rfvblidbtf mby bf nfdfssbry bs wfll.
        // but don't rfturn bs b rfvblidbtf mby bf nfdfssbry bs wfll.
        // but don't rfturn bs b rfvblidbtf mby bf nfdfssbry bs wfll.
        // but don't rfturn bs b rfvblidbtf mby bf nfdfssbry bs wfll.
        // but don't rfturn bs b rfvblidbtf mby bf nfdfssbry bs wfll.
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
            rfpbint();
        }
        }
        }
        }
        }





        if (f.gftTypf() == TbblfModflEvfnt.INSERT) {
        if (f.gftTypf() == TbblfModflEvfnt.INSERT) {
        if (f.gftTypf() == TbblfModflEvfnt.INSERT) {
        if (f.gftTypf() == TbblfModflEvfnt.INSERT) {
        if (f.gftTypf() == TbblfModflEvfnt.INSERT) {
            tbblfRowsInsfrtfd(f);
            tbblfRowsInsfrtfd(f);
            tbblfRowsInsfrtfd(f);
            tbblfRowsInsfrtfd(f);
            tbblfRowsInsfrtfd(f);
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }





        if (f.gftTypf() == TbblfModflEvfnt.DELETE) {
        if (f.gftTypf() == TbblfModflEvfnt.DELETE) {
        if (f.gftTypf() == TbblfModflEvfnt.DELETE) {
        if (f.gftTypf() == TbblfModflEvfnt.DELETE) {
        if (f.gftTypf() == TbblfModflEvfnt.DELETE) {
            tbblfRowsDflftfd(f);
            tbblfRowsDflftfd(f);
            tbblfRowsDflftfd(f);
            tbblfRowsDflftfd(f);
            tbblfRowsDflftfd(f);
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }





        int modflColumn = f.gftColumn();
        int modflColumn = f.gftColumn();
        int modflColumn = f.gftColumn();
        int modflColumn = f.gftColumn();
        int modflColumn = f.gftColumn();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();





        Rfdtbnglf dirtyRfgion;
        Rfdtbnglf dirtyRfgion;
        Rfdtbnglf dirtyRfgion;
        Rfdtbnglf dirtyRfgion;
        Rfdtbnglf dirtyRfgion;
        if (modflColumn == TbblfModflEvfnt.ALL_COLUMNS) {
        if (modflColumn == TbblfModflEvfnt.ALL_COLUMNS) {
        if (modflColumn == TbblfModflEvfnt.ALL_COLUMNS) {
        if (modflColumn == TbblfModflEvfnt.ALL_COLUMNS) {
        if (modflColumn == TbblfModflEvfnt.ALL_COLUMNS) {
            // 1 or morf rows dibngfd
            // 1 or morf rows dibngfd
            // 1 or morf rows dibngfd
            // 1 or morf rows dibngfd
            // 1 or morf rows dibngfd
            dirtyRfgion = nfw Rfdtbnglf(0, stbrt * gftRowHfigit(),
            dirtyRfgion = nfw Rfdtbnglf(0, stbrt * gftRowHfigit(),
            dirtyRfgion = nfw Rfdtbnglf(0, stbrt * gftRowHfigit(),
            dirtyRfgion = nfw Rfdtbnglf(0, stbrt * gftRowHfigit(),
            dirtyRfgion = nfw Rfdtbnglf(0, stbrt * gftRowHfigit(),
                                        gftColumnModfl().gftTotblColumnWidti(), 0);
                                        gftColumnModfl().gftTotblColumnWidti(), 0);
                                        gftColumnModfl().gftTotblColumnWidti(), 0);
                                        gftColumnModfl().gftTotblColumnWidti(), 0);
                                        gftColumnModfl().gftTotblColumnWidti(), 0);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            // A dfll or dolumn of dflls ibs dibngfd.
            // A dfll or dolumn of dflls ibs dibngfd.
            // A dfll or dolumn of dflls ibs dibngfd.
            // A dfll or dolumn of dflls ibs dibngfd.
            // A dfll or dolumn of dflls ibs dibngfd.
            // Unlikf tif rfst of tif mftiods in tif JTbblf, tif TbblfModflEvfnt
            // Unlikf tif rfst of tif mftiods in tif JTbblf, tif TbblfModflEvfnt
            // Unlikf tif rfst of tif mftiods in tif JTbblf, tif TbblfModflEvfnt
            // Unlikf tif rfst of tif mftiods in tif JTbblf, tif TbblfModflEvfnt
            // Unlikf tif rfst of tif mftiods in tif JTbblf, tif TbblfModflEvfnt
            // usfs tif doordinbtf systfm of tif modfl instfbd of tif vifw.
            // usfs tif doordinbtf systfm of tif modfl instfbd of tif vifw.
            // usfs tif doordinbtf systfm of tif modfl instfbd of tif vifw.
            // usfs tif doordinbtf systfm of tif modfl instfbd of tif vifw.
            // usfs tif doordinbtf systfm of tif modfl instfbd of tif vifw.
            // Tiis is tif only plbdf in tif JTbblf wifrf tiis "rfvfrsf mbpping"
            // Tiis is tif only plbdf in tif JTbblf wifrf tiis "rfvfrsf mbpping"
            // Tiis is tif only plbdf in tif JTbblf wifrf tiis "rfvfrsf mbpping"
            // Tiis is tif only plbdf in tif JTbblf wifrf tiis "rfvfrsf mbpping"
            // Tiis is tif only plbdf in tif JTbblf wifrf tiis "rfvfrsf mbpping"
            // is usfd.
            // is usfd.
            // is usfd.
            // is usfd.
            // is usfd.
            int dolumn = donvfrtColumnIndfxToVifw(modflColumn);
            int dolumn = donvfrtColumnIndfxToVifw(modflColumn);
            int dolumn = donvfrtColumnIndfxToVifw(modflColumn);
            int dolumn = donvfrtColumnIndfxToVifw(modflColumn);
            int dolumn = donvfrtColumnIndfxToVifw(modflColumn);
            dirtyRfgion = gftCfllRfdt(stbrt, dolumn, fblsf);
            dirtyRfgion = gftCfllRfdt(stbrt, dolumn, fblsf);
            dirtyRfgion = gftCfllRfdt(stbrt, dolumn, fblsf);
            dirtyRfgion = gftCfllRfdt(stbrt, dolumn, fblsf);
            dirtyRfgion = gftCfllRfdt(stbrt, dolumn, fblsf);
        }
        }
        }
        }
        }





        // Now bdjust tif ifigit of tif dirty rfgion bddording to tif vbluf of "fnd".
        // Now bdjust tif ifigit of tif dirty rfgion bddording to tif vbluf of "fnd".
        // Now bdjust tif ifigit of tif dirty rfgion bddording to tif vbluf of "fnd".
        // Now bdjust tif ifigit of tif dirty rfgion bddording to tif vbluf of "fnd".
        // Now bdjust tif ifigit of tif dirty rfgion bddording to tif vbluf of "fnd".
        // Cifdk for Intfgfr.MAX_VALUE bs tiis will dbusf bn ovfrflow.
        // Cifdk for Intfgfr.MAX_VALUE bs tiis will dbusf bn ovfrflow.
        // Cifdk for Intfgfr.MAX_VALUE bs tiis will dbusf bn ovfrflow.
        // Cifdk for Intfgfr.MAX_VALUE bs tiis will dbusf bn ovfrflow.
        // Cifdk for Intfgfr.MAX_VALUE bs tiis will dbusf bn ovfrflow.
        if (fnd != Intfgfr.MAX_VALUE) {
        if (fnd != Intfgfr.MAX_VALUE) {
        if (fnd != Intfgfr.MAX_VALUE) {
        if (fnd != Intfgfr.MAX_VALUE) {
        if (fnd != Intfgfr.MAX_VALUE) {
            dirtyRfgion.ifigit = (fnd-stbrt+1)*gftRowHfigit();
            dirtyRfgion.ifigit = (fnd-stbrt+1)*gftRowHfigit();
            dirtyRfgion.ifigit = (fnd-stbrt+1)*gftRowHfigit();
            dirtyRfgion.ifigit = (fnd-stbrt+1)*gftRowHfigit();
            dirtyRfgion.ifigit = (fnd-stbrt+1)*gftRowHfigit();
            rfpbint(dirtyRfgion.x, dirtyRfgion.y, dirtyRfgion.widti, dirtyRfgion.ifigit);
            rfpbint(dirtyRfgion.x, dirtyRfgion.y, dirtyRfgion.widti, dirtyRfgion.ifigit);
            rfpbint(dirtyRfgion.x, dirtyRfgion.y, dirtyRfgion.widti, dirtyRfgion.ifigit);
            rfpbint(dirtyRfgion.x, dirtyRfgion.y, dirtyRfgion.widti, dirtyRfgion.ifigit);
            rfpbint(dirtyRfgion.x, dirtyRfgion.y, dirtyRfgion.widti, dirtyRfgion.ifigit);
        }
        }
        }
        }
        }
        // In fbdt, if tif fnd is Intfgfr.MAX_VALUE wf nffd to rfvblidbtf bnywby
        // In fbdt, if tif fnd is Intfgfr.MAX_VALUE wf nffd to rfvblidbtf bnywby
        // In fbdt, if tif fnd is Intfgfr.MAX_VALUE wf nffd to rfvblidbtf bnywby
        // In fbdt, if tif fnd is Intfgfr.MAX_VALUE wf nffd to rfvblidbtf bnywby
        // In fbdt, if tif fnd is Intfgfr.MAX_VALUE wf nffd to rfvblidbtf bnywby
        // bfdbusf tif sdrollbbr mby nffd rfpbinting.
        // bfdbusf tif sdrollbbr mby nffd rfpbinting.
        // bfdbusf tif sdrollbbr mby nffd rfpbinting.
        // bfdbusf tif sdrollbbr mby nffd rfpbinting.
        // bfdbusf tif sdrollbbr mby nffd rfpbinting.
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            dlfbrSflfdtionAndLfbdAndior();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rfsizfAndRfpbint();
            rowModfl = null;
            rowModfl = null;
            rowModfl = null;
            rowModfl = null;
            rowModfl = null;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Invokfd wifn rows ibvf bffn insfrtfd into tif tbblf.
     * Invokfd wifn rows ibvf bffn insfrtfd into tif tbblf.
     * Invokfd wifn rows ibvf bffn insfrtfd into tif tbblf.
     * Invokfd wifn rows ibvf bffn insfrtfd into tif tbblf.
     * Invokfd wifn rows ibvf bffn insfrtfd into tif tbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif insfrtion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif insfrtion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif insfrtion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif insfrtion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif insfrtion
     */
     */
     */
     */
     */
    privbtf void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
        }
        }
        }
        }
        }
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
        }
        }
        }
        }
        }





        // Adjust tif sflfdtion to bddount for tif nfw rows.
        // Adjust tif sflfdtion to bddount for tif nfw rows.
        // Adjust tif sflfdtion to bddount for tif nfw rows.
        // Adjust tif sflfdtion to bddount for tif nfw rows.
        // Adjust tif sflfdtion to bddount for tif nfw rows.
        int lfngti = fnd - stbrt + 1;
        int lfngti = fnd - stbrt + 1;
        int lfngti = fnd - stbrt + 1;
        int lfngti = fnd - stbrt + 1;
        int lfngti = fnd - stbrt + 1;
        sflfdtionModfl.insfrtIndfxIntfrvbl(stbrt, lfngti, truf);
        sflfdtionModfl.insfrtIndfxIntfrvbl(stbrt, lfngti, truf);
        sflfdtionModfl.insfrtIndfxIntfrvbl(stbrt, lfngti, truf);
        sflfdtionModfl.insfrtIndfxIntfrvbl(stbrt, lfngti, truf);
        sflfdtionModfl.insfrtIndfxIntfrvbl(stbrt, lfngti, truf);





        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
            rowModfl.insfrtEntrifs(stbrt, lfngti, gftRowHfigit());
            rowModfl.insfrtEntrifs(stbrt, lfngti, gftRowHfigit());
            rowModfl.insfrtEntrifs(stbrt, lfngti, gftRowHfigit());
            rowModfl.insfrtEntrifs(stbrt, lfngti, gftRowHfigit());
            rowModfl.insfrtEntrifs(stbrt, lfngti, gftRowHfigit());
        }
        }
        }
        }
        }
        int ri = gftRowHfigit() ;
        int ri = gftRowHfigit() ;
        int ri = gftRowHfigit() ;
        int ri = gftRowHfigit() ;
        int ri = gftRowHfigit() ;
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                           (gftRowCount()-stbrt) * ri);
                                           (gftRowCount()-stbrt) * ri);
                                           (gftRowCount()-stbrt) * ri);
                                           (gftRowCount()-stbrt) * ri);
                                           (gftRowCount()-stbrt) * ri);





        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Invokfd wifn rows ibvf bffn rfmovfd from tif tbblf.
     * Invokfd wifn rows ibvf bffn rfmovfd from tif tbblf.
     * Invokfd wifn rows ibvf bffn rfmovfd from tif tbblf.
     * Invokfd wifn rows ibvf bffn rfmovfd from tif tbblf.
     * Invokfd wifn rows ibvf bffn rfmovfd from tif tbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif dflftion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif dflftion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif dflftion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif dflftion
     * @pbrbm f tif TbblfModflEvfnt fndbpsulbting tif dflftion
     */
     */
     */
     */
     */
    privbtf void tbblfRowsDflftfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsDflftfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsDflftfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsDflftfd(TbblfModflEvfnt f) {
    privbtf void tbblfRowsDflftfd(TbblfModflEvfnt f) {
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int stbrt = f.gftFirstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        int fnd = f.gftLbstRow();
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
        if (stbrt < 0) {
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
            stbrt = 0;
        }
        }
        }
        }
        }
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
        if (fnd < 0) {
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
            fnd = gftRowCount()-1;
        }
        }
        }
        }
        }





        int dflftfdCount = fnd - stbrt + 1;
        int dflftfdCount = fnd - stbrt + 1;
        int dflftfdCount = fnd - stbrt + 1;
        int dflftfdCount = fnd - stbrt + 1;
        int dflftfdCount = fnd - stbrt + 1;
        int prfviousRowCount = gftRowCount() + dflftfdCount;
        int prfviousRowCount = gftRowCount() + dflftfdCount;
        int prfviousRowCount = gftRowCount() + dflftfdCount;
        int prfviousRowCount = gftRowCount() + dflftfdCount;
        int prfviousRowCount = gftRowCount() + dflftfdCount;
        // Adjust tif sflfdtion to bddount for tif nfw rows
        // Adjust tif sflfdtion to bddount for tif nfw rows
        // Adjust tif sflfdtion to bddount for tif nfw rows
        // Adjust tif sflfdtion to bddount for tif nfw rows
        // Adjust tif sflfdtion to bddount for tif nfw rows
        sflfdtionModfl.rfmovfIndfxIntfrvbl(stbrt, fnd);
        sflfdtionModfl.rfmovfIndfxIntfrvbl(stbrt, fnd);
        sflfdtionModfl.rfmovfIndfxIntfrvbl(stbrt, fnd);
        sflfdtionModfl.rfmovfIndfxIntfrvbl(stbrt, fnd);
        sflfdtionModfl.rfmovfIndfxIntfrvbl(stbrt, fnd);





        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        // If wf ibvf vbribblf ifigit rows, bdjust tif row modfl.
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
        if (rowModfl != null) {
            rowModfl.rfmovfEntrifs(stbrt, dflftfdCount);
            rowModfl.rfmovfEntrifs(stbrt, dflftfdCount);
            rowModfl.rfmovfEntrifs(stbrt, dflftfdCount);
            rowModfl.rfmovfEntrifs(stbrt, dflftfdCount);
            rowModfl.rfmovfEntrifs(stbrt, dflftfdCount);
        }
        }
        }
        }
        }





        int ri = gftRowHfigit();
        int ri = gftRowHfigit();
        int ri = gftRowHfigit();
        int ri = gftRowHfigit();
        int ri = gftRowHfigit();
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
        Rfdtbnglf drbwRfdt = nfw Rfdtbnglf(0, stbrt * ri,
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        gftColumnModfl().gftTotblColumnWidti(),
                                        (prfviousRowCount - stbrt) * ri);
                                        (prfviousRowCount - stbrt) * ri);
                                        (prfviousRowCount - stbrt) * ri);
                                        (prfviousRowCount - stbrt) * ri);
                                        (prfviousRowCount - stbrt) * ri);





        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // PENDING(milnf) rfvblidbtf dblls rfpbint() if pbrfnt is b SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        // rfpbint still rfquirfd in tif unusubl dbsf wifrf tifrf is no SdrollPbnf
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
        rfpbint(drbwRfdt);
    }
    }
    }
    }
    }





//
//
//
//
//
// Implfmfnting TbblfColumnModflListfnfr intfrfbdf
// Implfmfnting TbblfColumnModflListfnfr intfrfbdf
// Implfmfnting TbblfColumnModflListfnfr intfrfbdf
// Implfmfnting TbblfColumnModflListfnfr intfrfbdf
// Implfmfnting TbblfColumnModflListfnfr intfrfbdf
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn b dolumn is bddfd to tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is bddfd to tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is bddfd to tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is bddfd to tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is bddfd to tif tbblf dolumn modfl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     */
     */
     */
     */
     */
    publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
    publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
    publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
    publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
    publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
        }
        }
        }
        }
        }
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn b dolumn is rfmovfd from tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is rfmovfd from tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is rfmovfd from tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is rfmovfd from tif tbblf dolumn modfl.
     * Invokfd wifn b dolumn is rfmovfd from tif tbblf dolumn modfl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     */
     */
     */
     */
     */
    publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        // If I'm durrfntly fditing, tifn I siould stop fditing
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
        }
        }
        }
        }
        }
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn b dolumn is rfpositionfd. If b dfll is bfing
     * Invokfd wifn b dolumn is rfpositionfd. If b dfll is bfing
     * Invokfd wifn b dolumn is rfpositionfd. If b dfll is bfing
     * Invokfd wifn b dolumn is rfpositionfd. If b dfll is bfing
     * Invokfd wifn b dolumn is rfpositionfd. If b dfll is bfing
     * fditfd, tifn fditing is stoppfd bnd tif dfll is rfdrbwn.
     * fditfd, tifn fditing is stoppfd bnd tif dfll is rfdrbwn.
     * fditfd, tifn fditing is stoppfd bnd tif dfll is rfdrbwn.
     * fditfd, tifn fditing is stoppfd bnd tif dfll is rfdrbwn.
     * fditfd, tifn fditing is stoppfd bnd tif dfll is rfdrbwn.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     */
     */
     */
     */
     */
    publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
    publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
        }
        }
        }
        }
        }
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn b dolumn is movfd duf to b mbrgin dibngf.
     * Invokfd wifn b dolumn is movfd duf to b mbrgin dibngf.
     * Invokfd wifn b dolumn is movfd duf to b mbrgin dibngf.
     * Invokfd wifn b dolumn is movfd duf to b mbrgin dibngf.
     * Invokfd wifn b dolumn is movfd duf to b mbrgin dibngf.
     * If b dfll is bfing fditfd, tifn fditing is stoppfd bnd tif dfll
     * If b dfll is bfing fditfd, tifn fditing is stoppfd bnd tif dfll
     * If b dfll is bfing fditfd, tifn fditing is stoppfd bnd tif dfll
     * If b dfll is bfing fditfd, tifn fditing is stoppfd bnd tif dfll
     * If b dfll is bfing fditfd, tifn fditing is stoppfd bnd tif dfll
     * is rfdrbwn.
     * is rfdrbwn.
     * is rfdrbwn.
     * is rfdrbwn.
     * is rfdrbwn.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm  f    tif fvfnt rfdfivfd
     * @pbrbm  f    tif fvfnt rfdfivfd
     * @pbrbm  f    tif fvfnt rfdfivfd
     * @pbrbm  f    tif fvfnt rfdfivfd
     * @pbrbm  f    tif fvfnt rfdfivfd
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     */
     */
     */
     */
     */
    publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
    publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
    publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
    publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
    publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
        if (isEditing() && !gftCfllEditor().stopCfllEditing()) {
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
            gftCfllEditor().dbndflCfllEditing();
        }
        }
        }
        }
        }
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        TbblfColumn rfsizingColumn = gftRfsizingColumn();
        // Nffd to do tiis ifrf, bfforf tif pbrfnt's
        // Nffd to do tiis ifrf, bfforf tif pbrfnt's
        // Nffd to do tiis ifrf, bfforf tif pbrfnt's
        // Nffd to do tiis ifrf, bfforf tif pbrfnt's
        // Nffd to do tiis ifrf, bfforf tif pbrfnt's
        // lbyout mbnbgfr dblls gftPrfffrrfdSizf().
        // lbyout mbnbgfr dblls gftPrfffrrfdSizf().
        // lbyout mbnbgfr dblls gftPrfffrrfdSizf().
        // lbyout mbnbgfr dblls gftPrfffrrfdSizf().
        // lbyout mbnbgfr dblls gftPrfffrrfdSizf().
        if (rfsizingColumn != null && butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (rfsizingColumn != null && butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (rfsizingColumn != null && butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (rfsizingColumn != null && butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (rfsizingColumn != null && butoRfsizfModf == AUTO_RESIZE_OFF) {
            rfsizingColumn.sftPrfffrrfdWidti(rfsizingColumn.gftWidti());
            rfsizingColumn.sftPrfffrrfdWidti(rfsizingColumn.gftWidti());
            rfsizingColumn.sftPrfffrrfdWidti(rfsizingColumn.gftWidti());
            rfsizingColumn.sftPrfffrrfdWidti(rfsizingColumn.gftWidti());
            rfsizingColumn.sftPrfffrrfdWidti(rfsizingColumn.gftWidti());
        }
        }
        }
        }
        }
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
    }
    }
    }
    }
    }





    privbtf int limit(int i, int b, int b) {
    privbtf int limit(int i, int b, int b) {
    privbtf int limit(int i, int b, int b) {
    privbtf int limit(int i, int b, int b) {
    privbtf int limit(int i, int b, int b) {
        rfturn Mbti.min(b, Mbti.mbx(i, b));
        rfturn Mbti.min(b, Mbti.mbx(i, b));
        rfturn Mbti.min(b, Mbti.mbx(i, b));
        rfturn Mbti.min(b, Mbti.mbx(i, b));
        rfturn Mbti.min(b, Mbti.mbx(i, b));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn tif sflfdtion modfl of tif <dodf>TbblfColumnModfl</dodf>
     * Invokfd wifn tif sflfdtion modfl of tif <dodf>TbblfColumnModfl</dodf>
     * Invokfd wifn tif sflfdtion modfl of tif <dodf>TbblfColumnModfl</dodf>
     * Invokfd wifn tif sflfdtion modfl of tif <dodf>TbblfColumnModfl</dodf>
     * Invokfd wifn tif sflfdtion modfl of tif <dodf>TbblfColumnModfl</dodf>
     * is dibngfd.
     * is dibngfd.
     * is dibngfd.
     * is dibngfd.
     * is dibngfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     * @sff TbblfColumnModflListfnfr
     */
     */
     */
     */
     */
    publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
    publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
    publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
    publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
    publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        if (dolumnSflfdtionAdjusting && !isAdjusting) {
        if (dolumnSflfdtionAdjusting && !isAdjusting) {
        if (dolumnSflfdtionAdjusting && !isAdjusting) {
        if (dolumnSflfdtionAdjusting && !isAdjusting) {
        if (dolumnSflfdtionAdjusting && !isAdjusting) {
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            dolumnSflfdtionAdjusting = fblsf;
            dolumnSflfdtionAdjusting = fblsf;
            dolumnSflfdtionAdjusting = fblsf;
            dolumnSflfdtionAdjusting = fblsf;
            dolumnSflfdtionAdjusting = fblsf;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        dolumnSflfdtionAdjusting = isAdjusting;
        dolumnSflfdtionAdjusting = isAdjusting;
        dolumnSflfdtionAdjusting = isAdjusting;
        dolumnSflfdtionAdjusting = isAdjusting;
        dolumnSflfdtionAdjusting = isAdjusting;
        // Tif gftCfllRfdt() dbll will fbil unlfss tifrf is bt lfbst onf row.
        // Tif gftCfllRfdt() dbll will fbil unlfss tifrf is bt lfbst onf row.
        // Tif gftCfllRfdt() dbll will fbil unlfss tifrf is bt lfbst onf row.
        // Tif gftCfllRfdt() dbll will fbil unlfss tifrf is bt lfbst onf row.
        // Tif gftCfllRfdt() dbll will fbil unlfss tifrf is bt lfbst onf row.
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftColumnCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftColumnCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftColumnCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftColumnCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftColumnCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftColumnCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftColumnCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftColumnCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftColumnCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftColumnCount()-1);
        int minRow = 0;
        int minRow = 0;
        int minRow = 0;
        int minRow = 0;
        int minRow = 0;
        int mbxRow = gftRowCount() - 1;
        int mbxRow = gftRowCount() - 1;
        int mbxRow = gftRowCount() - 1;
        int mbxRow = gftRowCount() - 1;
        int mbxRow = gftRowCount() - 1;
        if (gftRowSflfdtionAllowfd()) {
        if (gftRowSflfdtionAllowfd()) {
        if (gftRowSflfdtionAllowfd()) {
        if (gftRowSflfdtionAllowfd()) {
        if (gftRowSflfdtionAllowfd()) {
            minRow = sflfdtionModfl.gftMinSflfdtionIndfx();
            minRow = sflfdtionModfl.gftMinSflfdtionIndfx();
            minRow = sflfdtionModfl.gftMinSflfdtionIndfx();
            minRow = sflfdtionModfl.gftMinSflfdtionIndfx();
            minRow = sflfdtionModfl.gftMinSflfdtionIndfx();
            mbxRow = sflfdtionModfl.gftMbxSflfdtionIndfx();
            mbxRow = sflfdtionModfl.gftMbxSflfdtionIndfx();
            mbxRow = sflfdtionModfl.gftMbxSflfdtionIndfx();
            mbxRow = sflfdtionModfl.gftMbxSflfdtionIndfx();
            mbxRow = sflfdtionModfl.gftMbxSflfdtionIndfx();
            int lfbdRow = gftAdjustfdIndfx(sflfdtionModfl.gftLfbdSflfdtionIndfx(), truf);
            int lfbdRow = gftAdjustfdIndfx(sflfdtionModfl.gftLfbdSflfdtionIndfx(), truf);
            int lfbdRow = gftAdjustfdIndfx(sflfdtionModfl.gftLfbdSflfdtionIndfx(), truf);
            int lfbdRow = gftAdjustfdIndfx(sflfdtionModfl.gftLfbdSflfdtionIndfx(), truf);
            int lfbdRow = gftAdjustfdIndfx(sflfdtionModfl.gftLfbdSflfdtionIndfx(), truf);





            if (minRow == -1 || mbxRow == -1) {
            if (minRow == -1 || mbxRow == -1) {
            if (minRow == -1 || mbxRow == -1) {
            if (minRow == -1 || mbxRow == -1) {
            if (minRow == -1 || mbxRow == -1) {
                if (lfbdRow == -1) {
                if (lfbdRow == -1) {
                if (lfbdRow == -1) {
                if (lfbdRow == -1) {
                if (lfbdRow == -1) {
                    // notiing to rfpbint, rfturn
                    // notiing to rfpbint, rfturn
                    // notiing to rfpbint, rfturn
                    // notiing to rfpbint, rfturn
                    // notiing to rfpbint, rfturn
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                }
                }
                }
                }
                }





                // only tiing to rfpbint is tif lfbd
                // only tiing to rfpbint is tif lfbd
                // only tiing to rfpbint is tif lfbd
                // only tiing to rfpbint is tif lfbd
                // only tiing to rfpbint is tif lfbd
                minRow = mbxRow = lfbdRow;
                minRow = mbxRow = lfbdRow;
                minRow = mbxRow = lfbdRow;
                minRow = mbxRow = lfbdRow;
                minRow = mbxRow = lfbdRow;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // Wf nffd to donsidfr morf tibn just tif rbngf bftwffn
                // Wf nffd to donsidfr morf tibn just tif rbngf bftwffn
                // Wf nffd to donsidfr morf tibn just tif rbngf bftwffn
                // Wf nffd to donsidfr morf tibn just tif rbngf bftwffn
                // Wf nffd to donsidfr morf tibn just tif rbngf bftwffn
                // tif min bnd mbx sflfdtfd indfx. Tif lfbd row, wiidi dould
                // tif min bnd mbx sflfdtfd indfx. Tif lfbd row, wiidi dould
                // tif min bnd mbx sflfdtfd indfx. Tif lfbd row, wiidi dould
                // tif min bnd mbx sflfdtfd indfx. Tif lfbd row, wiidi dould
                // tif min bnd mbx sflfdtfd indfx. Tif lfbd row, wiidi dould
                // bf outsidf tiis rbngf, siould bf donsidfrfd blso.
                // bf outsidf tiis rbngf, siould bf donsidfrfd blso.
                // bf outsidf tiis rbngf, siould bf donsidfrfd blso.
                // bf outsidf tiis rbngf, siould bf donsidfrfd blso.
                // bf outsidf tiis rbngf, siould bf donsidfrfd blso.
                if (lfbdRow != -1) {
                if (lfbdRow != -1) {
                if (lfbdRow != -1) {
                if (lfbdRow != -1) {
                if (lfbdRow != -1) {
                    minRow = Mbti.min(minRow, lfbdRow);
                    minRow = Mbti.min(minRow, lfbdRow);
                    minRow = Mbti.min(minRow, lfbdRow);
                    minRow = Mbti.min(minRow, lfbdRow);
                    minRow = Mbti.min(minRow, lfbdRow);
                    mbxRow = Mbti.mbx(mbxRow, lfbdRow);
                    mbxRow = Mbti.mbx(mbxRow, lfbdRow);
                    mbxRow = Mbti.mbx(mbxRow, lfbdRow);
                    mbxRow = Mbti.mbx(mbxRow, lfbdRow);
                    mbxRow = Mbti.mbx(mbxRow, lfbdRow);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        Rfdtbnglf firstColumnRfdt = gftCfllRfdt(minRow, firstIndfx, fblsf);
        Rfdtbnglf firstColumnRfdt = gftCfllRfdt(minRow, firstIndfx, fblsf);
        Rfdtbnglf firstColumnRfdt = gftCfllRfdt(minRow, firstIndfx, fblsf);
        Rfdtbnglf firstColumnRfdt = gftCfllRfdt(minRow, firstIndfx, fblsf);
        Rfdtbnglf firstColumnRfdt = gftCfllRfdt(minRow, firstIndfx, fblsf);
        Rfdtbnglf lbstColumnRfdt = gftCfllRfdt(mbxRow, lbstIndfx, fblsf);
        Rfdtbnglf lbstColumnRfdt = gftCfllRfdt(mbxRow, lbstIndfx, fblsf);
        Rfdtbnglf lbstColumnRfdt = gftCfllRfdt(mbxRow, lbstIndfx, fblsf);
        Rfdtbnglf lbstColumnRfdt = gftCfllRfdt(mbxRow, lbstIndfx, fblsf);
        Rfdtbnglf lbstColumnRfdt = gftCfllRfdt(mbxRow, lbstIndfx, fblsf);
        Rfdtbnglf dirtyRfgion = firstColumnRfdt.union(lbstColumnRfdt);
        Rfdtbnglf dirtyRfgion = firstColumnRfdt.union(lbstColumnRfdt);
        Rfdtbnglf dirtyRfgion = firstColumnRfdt.union(lbstColumnRfdt);
        Rfdtbnglf dirtyRfgion = firstColumnRfdt.union(lbstColumnRfdt);
        Rfdtbnglf dirtyRfgion = firstColumnRfdt.union(lbstColumnRfdt);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
    }
    }
    }
    }
    }





//
//
//
//
//
// Implfmfnting ListSflfdtionListfnfr intfrfbdf
// Implfmfnting ListSflfdtionListfnfr intfrfbdf
// Implfmfnting ListSflfdtionListfnfr intfrfbdf
// Implfmfnting ListSflfdtionListfnfr intfrfbdf
// Implfmfnting ListSflfdtionListfnfr intfrfbdf
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn tif row sflfdtion dibngfs -- rfpbints to siow tif nfw
     * Invokfd wifn tif row sflfdtion dibngfs -- rfpbints to siow tif nfw
     * Invokfd wifn tif row sflfdtion dibngfs -- rfpbints to siow tif nfw
     * Invokfd wifn tif row sflfdtion dibngfs -- rfpbints to siow tif nfw
     * Invokfd wifn tif row sflfdtion dibngfs -- rfpbints to siow tif nfw
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @pbrbm f   tif fvfnt rfdfivfd
     * @sff ListSflfdtionListfnfr
     * @sff ListSflfdtionListfnfr
     * @sff ListSflfdtionListfnfr
     * @sff ListSflfdtionListfnfr
     * @sff ListSflfdtionListfnfr
     */
     */
     */
     */
     */
    publid void vblufCibngfd(ListSflfdtionEvfnt f) {
    publid void vblufCibngfd(ListSflfdtionEvfnt f) {
    publid void vblufCibngfd(ListSflfdtionEvfnt f) {
    publid void vblufCibngfd(ListSflfdtionEvfnt f) {
    publid void vblufCibngfd(ListSflfdtionEvfnt f) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
        if (sortMbnbgfr != null) {
            sortMbnbgfr.vifwSflfdtionCibngfd(f);
            sortMbnbgfr.vifwSflfdtionCibngfd(f);
            sortMbnbgfr.vifwSflfdtionCibngfd(f);
            sortMbnbgfr.vifwSflfdtionCibngfd(f);
            sortMbnbgfr.vifwSflfdtionCibngfd(f);
        }
        }
        }
        }
        }
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        boolfbn isAdjusting = f.gftVblufIsAdjusting();
        if (rowSflfdtionAdjusting && !isAdjusting) {
        if (rowSflfdtionAdjusting && !isAdjusting) {
        if (rowSflfdtionAdjusting && !isAdjusting) {
        if (rowSflfdtionAdjusting && !isAdjusting) {
        if (rowSflfdtionAdjusting && !isAdjusting) {
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // Tif bssumption is tibt wifn tif modfl is no longfr bdjusting
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // wf will ibvf blrfbdy gottfn bll tif dibngfs, bnd tifrfforf
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            // don't nffd to do bn bdditionbl pbint.
            rowSflfdtionAdjusting = fblsf;
            rowSflfdtionAdjusting = fblsf;
            rowSflfdtionAdjusting = fblsf;
            rowSflfdtionAdjusting = fblsf;
            rowSflfdtionAdjusting = fblsf;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        rowSflfdtionAdjusting = isAdjusting;
        rowSflfdtionAdjusting = isAdjusting;
        rowSflfdtionAdjusting = isAdjusting;
        rowSflfdtionAdjusting = isAdjusting;
        rowSflfdtionAdjusting = isAdjusting;
        // Tif gftCfllRfdt() dblls will fbil unlfss tifrf is bt lfbst onf dolumn.
        // Tif gftCfllRfdt() dblls will fbil unlfss tifrf is bt lfbst onf dolumn.
        // Tif gftCfllRfdt() dblls will fbil unlfss tifrf is bt lfbst onf dolumn.
        // Tif gftCfllRfdt() dblls will fbil unlfss tifrf is bt lfbst onf dolumn.
        // Tif gftCfllRfdt() dblls will fbil unlfss tifrf is bt lfbst onf dolumn.
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
        if (gftRowCount() <= 0 || gftColumnCount() <= 0) {
            rfturn;
            rfturn;
            rfturn;
            rfturn;
            rfturn;
        }
        }
        }
        }
        }
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftRowCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftRowCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftRowCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftRowCount()-1);
        int firstIndfx = limit(f.gftFirstIndfx(), 0, gftRowCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftRowCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftRowCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftRowCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftRowCount()-1);
        int lbstIndfx = limit(f.gftLbstIndfx(), 0, gftRowCount()-1);
        Rfdtbnglf firstRowRfdt = gftCfllRfdt(firstIndfx, 0, fblsf);
        Rfdtbnglf firstRowRfdt = gftCfllRfdt(firstIndfx, 0, fblsf);
        Rfdtbnglf firstRowRfdt = gftCfllRfdt(firstIndfx, 0, fblsf);
        Rfdtbnglf firstRowRfdt = gftCfllRfdt(firstIndfx, 0, fblsf);
        Rfdtbnglf firstRowRfdt = gftCfllRfdt(firstIndfx, 0, fblsf);
        Rfdtbnglf lbstRowRfdt = gftCfllRfdt(lbstIndfx, gftColumnCount()-1, fblsf);
        Rfdtbnglf lbstRowRfdt = gftCfllRfdt(lbstIndfx, gftColumnCount()-1, fblsf);
        Rfdtbnglf lbstRowRfdt = gftCfllRfdt(lbstIndfx, gftColumnCount()-1, fblsf);
        Rfdtbnglf lbstRowRfdt = gftCfllRfdt(lbstIndfx, gftColumnCount()-1, fblsf);
        Rfdtbnglf lbstRowRfdt = gftCfllRfdt(lbstIndfx, gftColumnCount()-1, fblsf);
        Rfdtbnglf dirtyRfgion = firstRowRfdt.union(lbstRowRfdt);
        Rfdtbnglf dirtyRfgion = firstRowRfdt.union(lbstRowRfdt);
        Rfdtbnglf dirtyRfgion = firstRowRfdt.union(lbstRowRfdt);
        Rfdtbnglf dirtyRfgion = firstRowRfdt.union(lbstRowRfdt);
        Rfdtbnglf dirtyRfgion = firstRowRfdt.union(lbstRowRfdt);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
        rfpbint(dirtyRfgion);
    }
    }
    }
    }
    }





//
//
//
//
//
// Implfmfnting tif CfllEditorListfnfr intfrfbdf
// Implfmfnting tif CfllEditorListfnfr intfrfbdf
// Implfmfnting tif CfllEditorListfnfr intfrfbdf
// Implfmfnting tif CfllEditorListfnfr intfrfbdf
// Implfmfnting tif CfllEditorListfnfr intfrfbdf
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd bnd tif
     * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd bnd tif
     * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd bnd tif
     * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd bnd tif
     * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd bnd tif
     * fditor is disdbrdfd.
     * fditor is disdbrdfd.
     * fditor is disdbrdfd.
     * fditor is disdbrdfd.
     * fditor is disdbrdfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     */
     */
     */
     */
     */
    publid void fditingStoppfd(CibngfEvfnt f) {
    publid void fditingStoppfd(CibngfEvfnt f) {
    publid void fditingStoppfd(CibngfEvfnt f) {
    publid void fditingStoppfd(CibngfEvfnt f) {
    publid void fditingStoppfd(CibngfEvfnt f) {
        // Tbkf in tif nfw vbluf
        // Tbkf in tif nfw vbluf
        // Tbkf in tif nfw vbluf
        // Tbkf in tif nfw vbluf
        // Tbkf in tif nfw vbluf
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
        if (fditor != null) {
            Objfdt vbluf = fditor.gftCfllEditorVbluf();
            Objfdt vbluf = fditor.gftCfllEditorVbluf();
            Objfdt vbluf = fditor.gftCfllEditorVbluf();
            Objfdt vbluf = fditor.gftCfllEditorVbluf();
            Objfdt vbluf = fditor.gftCfllEditorVbluf();
            sftVblufAt(vbluf, fditingRow, fditingColumn);
            sftVblufAt(vbluf, fditingRow, fditingColumn);
            sftVblufAt(vbluf, fditingRow, fditingColumn);
            sftVblufAt(vbluf, fditingRow, fditingColumn);
            sftVblufAt(vbluf, fditingRow, fditingColumn);
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
            rfmovfEditor();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
     * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
     * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
     * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
     * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
     * bnd tif dfll is rfndfrfd ondf bgbin.
     * bnd tif dfll is rfndfrfd ondf bgbin.
     * bnd tif dfll is rfndfrfd ondf bgbin.
     * bnd tif dfll is rfndfrfd ondf bgbin.
     * bnd tif dfll is rfndfrfd ondf bgbin.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * Applidbtion dodf will not usf tifsf mftiods fxpliditly, tify
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     * brf usfd intfrnblly by JTbblf.
     *
     *
     *
     *
     *
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @pbrbm  f  tif fvfnt rfdfivfd
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     * @sff CfllEditorListfnfr
     */
     */
     */
     */
     */
    publid void fditingCbndflfd(CibngfEvfnt f) {
    publid void fditingCbndflfd(CibngfEvfnt f) {
    publid void fditingCbndflfd(CibngfEvfnt f) {
    publid void fditingCbndflfd(CibngfEvfnt f) {
    publid void fditingCbndflfd(CibngfEvfnt f) {
        rfmovfEditor();
        rfmovfEditor();
        rfmovfEditor();
        rfmovfEditor();
        rfmovfEditor();
    }
    }
    }
    }
    }





//
//
//
//
//
// Implfmfnting tif Sdrollbblf intfrfbdf
// Implfmfnting tif Sdrollbblf intfrfbdf
// Implfmfnting tif Sdrollbblf intfrfbdf
// Implfmfnting tif Sdrollbblf intfrfbdf
// Implfmfnting tif Sdrollbblf intfrfbdf
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Sfts tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Sfts tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Sfts tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Sfts tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Sfts tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     *
     *
     *
     *
     *
     * @pbrbm sizf  b <dodf>Dimfnsion</dodf> objfdt spfdifying tif <dodf>prfffrrfdSizf</dodf> of b
     * @pbrbm sizf  b <dodf>Dimfnsion</dodf> objfdt spfdifying tif <dodf>prfffrrfdSizf</dodf> of b
     * @pbrbm sizf  b <dodf>Dimfnsion</dodf> objfdt spfdifying tif <dodf>prfffrrfdSizf</dodf> of b
     * @pbrbm sizf  b <dodf>Dimfnsion</dodf> objfdt spfdifying tif <dodf>prfffrrfdSizf</dodf> of b
     * @pbrbm sizf  b <dodf>Dimfnsion</dodf> objfdt spfdifying tif <dodf>prfffrrfdSizf</dodf> of b
     *              <dodf>JVifwport</dodf> wiosf vifw is tiis tbblf
     *              <dodf>JVifwport</dodf> wiosf vifw is tiis tbblf
     *              <dodf>JVifwport</dodf> wiosf vifw is tiis tbblf
     *              <dodf>JVifwport</dodf> wiosf vifw is tiis tbblf
     *              <dodf>JVifwport</dodf> wiosf vifw is tiis tbblf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * dfsdription: Tif prfffrrfd sizf of tif vifwport.
     * dfsdription: Tif prfffrrfd sizf of tif vifwport.
     * dfsdription: Tif prfffrrfd sizf of tif vifwport.
     * dfsdription: Tif prfffrrfd sizf of tif vifwport.
     * dfsdription: Tif prfffrrfd sizf of tif vifwport.
     */
     */
     */
     */
     */
    publid void sftPrfffrrfdSdrollbblfVifwportSizf(Dimfnsion sizf) {
    publid void sftPrfffrrfdSdrollbblfVifwportSizf(Dimfnsion sizf) {
    publid void sftPrfffrrfdSdrollbblfVifwportSizf(Dimfnsion sizf) {
    publid void sftPrfffrrfdSdrollbblfVifwportSizf(Dimfnsion sizf) {
    publid void sftPrfffrrfdSdrollbblfVifwportSizf(Dimfnsion sizf) {
        prfffrrfdVifwportSizf = sizf;
        prfffrrfdVifwportSizf = sizf;
        prfffrrfdVifwportSizf = sizf;
        prfffrrfdVifwportSizf = sizf;
        prfffrrfdVifwportSizf = sizf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Rfturns tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Rfturns tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Rfturns tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     * Rfturns tif prfffrrfd sizf of tif vifwport for tiis tbblf.
     *
     *
     *
     *
     *
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif <dodf>prfffrrfdSizf</dodf> of tif <dodf>JVifwport</dodf>
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif <dodf>prfffrrfdSizf</dodf> of tif <dodf>JVifwport</dodf>
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif <dodf>prfffrrfdSizf</dodf> of tif <dodf>JVifwport</dodf>
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif <dodf>prfffrrfdSizf</dodf> of tif <dodf>JVifwport</dodf>
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif <dodf>prfffrrfdSizf</dodf> of tif <dodf>JVifwport</dodf>
     *         wiidi displbys tiis tbblf
     *         wiidi displbys tiis tbblf
     *         wiidi displbys tiis tbblf
     *         wiidi displbys tiis tbblf
     *         wiidi displbys tiis tbblf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     * @sff Sdrollbblf#gftPrfffrrfdSdrollbblfVifwportSizf
     */
     */
     */
     */
     */
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
        rfturn prfffrrfdVifwportSizf;
        rfturn prfffrrfdVifwportSizf;
        rfturn prfffrrfdVifwportSizf;
        rfturn prfffrrfdVifwportSizf;
        rfturn prfffrrfdVifwportSizf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif sdroll indrfmfnt (in pixfls) tibt domplftfly fxposfs onf nfw
     * Rfturns tif sdroll indrfmfnt (in pixfls) tibt domplftfly fxposfs onf nfw
     * Rfturns tif sdroll indrfmfnt (in pixfls) tibt domplftfly fxposfs onf nfw
     * Rfturns tif sdroll indrfmfnt (in pixfls) tibt domplftfly fxposfs onf nfw
     * Rfturns tif sdroll indrfmfnt (in pixfls) tibt domplftfly fxposfs onf nfw
     * row or dolumn (dfpfnding on tif orifntbtion).
     * row or dolumn (dfpfnding on tif orifntbtion).
     * row or dolumn (dfpfnding on tif orifntbtion).
     * row or dolumn (dfpfnding on tif orifntbtion).
     * row or dolumn (dfpfnding on tif orifntbtion).
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod is dbllfd fbdi timf tif usfr rfqufsts b unit sdroll.
     * Tiis mftiod is dbllfd fbdi timf tif usfr rfqufsts b unit sdroll.
     * Tiis mftiod is dbllfd fbdi timf tif usfr rfqufsts b unit sdroll.
     * Tiis mftiod is dbllfd fbdi timf tif usfr rfqufsts b unit sdroll.
     * Tiis mftiod is dbllfd fbdi timf tif usfr rfqufsts b unit sdroll.
     *
     *
     *
     *
     *
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     *                  or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *                  or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *                  or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *                  or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *                  or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     *                  grfbtfr tibn zfro for down/rigit
     *                  grfbtfr tibn zfro for down/rigit
     *                  grfbtfr tibn zfro for down/rigit
     *                  grfbtfr tibn zfro for down/rigit
     *                  grfbtfr tibn zfro for down/rigit
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @sff Sdrollbblf#gftSdrollbblfUnitIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfUnitIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfUnitIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfUnitIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfUnitIndrfmfnt
     */
     */
     */
     */
     */
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
                                          int orifntbtion,
                                          int orifntbtion,
                                          int orifntbtion,
                                          int orifntbtion,
                                          int orifntbtion,
                                          int dirfdtion) {
                                          int dirfdtion) {
                                          int dirfdtion) {
                                          int dirfdtion) {
                                          int dirfdtion) {
        int lfbdingRow;
        int lfbdingRow;
        int lfbdingRow;
        int lfbdingRow;
        int lfbdingRow;
        int lfbdingCol;
        int lfbdingCol;
        int lfbdingCol;
        int lfbdingCol;
        int lfbdingCol;
        Rfdtbnglf lfbdingCfllRfdt;
        Rfdtbnglf lfbdingCfllRfdt;
        Rfdtbnglf lfbdingCfllRfdt;
        Rfdtbnglf lfbdingCfllRfdt;
        Rfdtbnglf lfbdingCfllRfdt;





        int lfbdingVisiblfEdgf;
        int lfbdingVisiblfEdgf;
        int lfbdingVisiblfEdgf;
        int lfbdingVisiblfEdgf;
        int lfbdingVisiblfEdgf;
        int lfbdingCfllEdgf;
        int lfbdingCfllEdgf;
        int lfbdingCfllEdgf;
        int lfbdingCfllEdgf;
        int lfbdingCfllEdgf;
        int lfbdingCfllSizf;
        int lfbdingCfllSizf;
        int lfbdingCfllSizf;
        int lfbdingCfllSizf;
        int lfbdingCfllSizf;





        lfbdingRow = gftLfbdingRow(visiblfRfdt);
        lfbdingRow = gftLfbdingRow(visiblfRfdt);
        lfbdingRow = gftLfbdingRow(visiblfRfdt);
        lfbdingRow = gftLfbdingRow(visiblfRfdt);
        lfbdingRow = gftLfbdingRow(visiblfRfdt);
        lfbdingCol = gftLfbdingCol(visiblfRfdt);
        lfbdingCol = gftLfbdingCol(visiblfRfdt);
        lfbdingCol = gftLfbdingCol(visiblfRfdt);
        lfbdingCol = gftLfbdingCol(visiblfRfdt);
        lfbdingCol = gftLfbdingCol(visiblfRfdt);
        if (orifntbtion == SwingConstbnts.VERTICAL && lfbdingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && lfbdingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && lfbdingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && lfbdingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && lfbdingRow < 0) {
            // Couldn't find lfbding row - rfturn somf dffbult vbluf
            // Couldn't find lfbding row - rfturn somf dffbult vbluf
            // Couldn't find lfbding row - rfturn somf dffbult vbluf
            // Couldn't find lfbding row - rfturn somf dffbult vbluf
            // Couldn't find lfbding row - rfturn somf dffbult vbluf
            rfturn gftRowHfigit();
            rfturn gftRowHfigit();
            rfturn gftRowHfigit();
            rfturn gftRowHfigit();
            rfturn gftRowHfigit();
        }
        }
        }
        }
        }
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && lfbdingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && lfbdingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && lfbdingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && lfbdingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && lfbdingCol < 0) {
            // Couldn't find lfbding dol - rfturn somf dffbult vbluf
            // Couldn't find lfbding dol - rfturn somf dffbult vbluf
            // Couldn't find lfbding dol - rfturn somf dffbult vbluf
            // Couldn't find lfbding dol - rfturn somf dffbult vbluf
            // Couldn't find lfbding dol - rfturn somf dffbult vbluf
            rfturn 100;
            rfturn 100;
            rfturn 100;
            rfturn 100;
            rfturn 100;
        }
        }
        }
        }
        }





        // Notf tibt it's possiblf for onf of lfbdingCol or lfbdingRow to bf
        // Notf tibt it's possiblf for onf of lfbdingCol or lfbdingRow to bf
        // Notf tibt it's possiblf for onf of lfbdingCol or lfbdingRow to bf
        // Notf tibt it's possiblf for onf of lfbdingCol or lfbdingRow to bf
        // Notf tibt it's possiblf for onf of lfbdingCol or lfbdingRow to bf
        // -1, dfpfnding on tif orifntbtion.  Tiis is okby, bs gftCfllRfdt()
        // -1, dfpfnding on tif orifntbtion.  Tiis is okby, bs gftCfllRfdt()
        // -1, dfpfnding on tif orifntbtion.  Tiis is okby, bs gftCfllRfdt()
        // -1, dfpfnding on tif orifntbtion.  Tiis is okby, bs gftCfllRfdt()
        // -1, dfpfnding on tif orifntbtion.  Tiis is okby, bs gftCfllRfdt()
        // still providfs fnougi informbtion to dbldulbtf tif unit indrfmfnt.
        // still providfs fnougi informbtion to dbldulbtf tif unit indrfmfnt.
        // still providfs fnougi informbtion to dbldulbtf tif unit indrfmfnt.
        // still providfs fnougi informbtion to dbldulbtf tif unit indrfmfnt.
        // still providfs fnougi informbtion to dbldulbtf tif unit indrfmfnt.
        lfbdingCfllRfdt = gftCfllRfdt(lfbdingRow, lfbdingCol, truf);
        lfbdingCfllRfdt = gftCfllRfdt(lfbdingRow, lfbdingCol, truf);
        lfbdingCfllRfdt = gftCfllRfdt(lfbdingRow, lfbdingCol, truf);
        lfbdingCfllRfdt = gftCfllRfdt(lfbdingRow, lfbdingCol, truf);
        lfbdingCfllRfdt = gftCfllRfdt(lfbdingRow, lfbdingCol, truf);
        lfbdingVisiblfEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        lfbdingVisiblfEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        lfbdingVisiblfEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        lfbdingVisiblfEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        lfbdingVisiblfEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        lfbdingCfllEdgf = lfbdingEdgf(lfbdingCfllRfdt, orifntbtion);
        lfbdingCfllEdgf = lfbdingEdgf(lfbdingCfllRfdt, orifntbtion);
        lfbdingCfllEdgf = lfbdingEdgf(lfbdingCfllRfdt, orifntbtion);
        lfbdingCfllEdgf = lfbdingEdgf(lfbdingCfllRfdt, orifntbtion);
        lfbdingCfllEdgf = lfbdingEdgf(lfbdingCfllRfdt, orifntbtion);





        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
            lfbdingCfllSizf = lfbdingCfllRfdt.ifigit;
            lfbdingCfllSizf = lfbdingCfllRfdt.ifigit;
            lfbdingCfllSizf = lfbdingCfllRfdt.ifigit;
            lfbdingCfllSizf = lfbdingCfllRfdt.ifigit;
            lfbdingCfllSizf = lfbdingCfllRfdt.ifigit;





        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            lfbdingCfllSizf = lfbdingCfllRfdt.widti;
            lfbdingCfllSizf = lfbdingCfllRfdt.widti;
            lfbdingCfllSizf = lfbdingCfllRfdt.widti;
            lfbdingCfllSizf = lfbdingCfllRfdt.widti;
            lfbdingCfllSizf = lfbdingCfllRfdt.widti;
        }
        }
        }
        }
        }





        // 4 dbsfs:
        // 4 dbsfs:
        // 4 dbsfs:
        // 4 dbsfs:
        // 4 dbsfs:
        // #1: Lfbding dfll fully visiblf, rfvfbl nfxt dfll
        // #1: Lfbding dfll fully visiblf, rfvfbl nfxt dfll
        // #1: Lfbding dfll fully visiblf, rfvfbl nfxt dfll
        // #1: Lfbding dfll fully visiblf, rfvfbl nfxt dfll
        // #1: Lfbding dfll fully visiblf, rfvfbl nfxt dfll
        // #2: Lfbding dfll fully visiblf, iidf lfbding dfll
        // #2: Lfbding dfll fully visiblf, iidf lfbding dfll
        // #2: Lfbding dfll fully visiblf, iidf lfbding dfll
        // #2: Lfbding dfll fully visiblf, iidf lfbding dfll
        // #2: Lfbding dfll fully visiblf, iidf lfbding dfll
        // #3: Lfbding dfll pbrtiblly visiblf, iidf rfst of lfbding dfll
        // #3: Lfbding dfll pbrtiblly visiblf, iidf rfst of lfbding dfll
        // #3: Lfbding dfll pbrtiblly visiblf, iidf rfst of lfbding dfll
        // #3: Lfbding dfll pbrtiblly visiblf, iidf rfst of lfbding dfll
        // #3: Lfbding dfll pbrtiblly visiblf, iidf rfst of lfbding dfll
        // #4: Lfbding dfll pbrtiblly visiblf, rfvfbl rfst of lfbding dfll
        // #4: Lfbding dfll pbrtiblly visiblf, rfvfbl rfst of lfbding dfll
        // #4: Lfbding dfll pbrtiblly visiblf, rfvfbl rfst of lfbding dfll
        // #4: Lfbding dfll pbrtiblly visiblf, rfvfbl rfst of lfbding dfll
        // #4: Lfbding dfll pbrtiblly visiblf, rfvfbl rfst of lfbding dfll





        if (lfbdingVisiblfEdgf == lfbdingCfllEdgf) { // Lfbding dfll is fully
        if (lfbdingVisiblfEdgf == lfbdingCfllEdgf) { // Lfbding dfll is fully
        if (lfbdingVisiblfEdgf == lfbdingCfllEdgf) { // Lfbding dfll is fully
        if (lfbdingVisiblfEdgf == lfbdingCfllEdgf) { // Lfbding dfll is fully
        if (lfbdingVisiblfEdgf == lfbdingCfllEdgf) { // Lfbding dfll is fully
                                                     // visiblf
                                                     // visiblf
                                                     // visiblf
                                                     // visiblf
                                                     // visiblf
            // Cbsf #1: Rfvfbl prfvious dfll
            // Cbsf #1: Rfvfbl prfvious dfll
            // Cbsf #1: Rfvfbl prfvious dfll
            // Cbsf #1: Rfvfbl prfvious dfll
            // Cbsf #1: Rfvfbl prfvious dfll
            if (dirfdtion < 0) {
            if (dirfdtion < 0) {
            if (dirfdtion < 0) {
            if (dirfdtion < 0) {
            if (dirfdtion < 0) {
                int rftVbl = 0;
                int rftVbl = 0;
                int rftVbl = 0;
                int rftVbl = 0;
                int rftVbl = 0;





                if (orifntbtion == SwingConstbnts.VERTICAL) {
                if (orifntbtion == SwingConstbnts.VERTICAL) {
                if (orifntbtion == SwingConstbnts.VERTICAL) {
                if (orifntbtion == SwingConstbnts.VERTICAL) {
                if (orifntbtion == SwingConstbnts.VERTICAL) {
                    // Loop pbst bny zfro-ifigit rows
                    // Loop pbst bny zfro-ifigit rows
                    // Loop pbst bny zfro-ifigit rows
                    // Loop pbst bny zfro-ifigit rows
                    // Loop pbst bny zfro-ifigit rows
                    wiilf (--lfbdingRow >= 0) {
                    wiilf (--lfbdingRow >= 0) {
                    wiilf (--lfbdingRow >= 0) {
                    wiilf (--lfbdingRow >= 0) {
                    wiilf (--lfbdingRow >= 0) {
                        rftVbl = gftRowHfigit(lfbdingRow);
                        rftVbl = gftRowHfigit(lfbdingRow);
                        rftVbl = gftRowHfigit(lfbdingRow);
                        rftVbl = gftRowHfigit(lfbdingRow);
                        rftVbl = gftRowHfigit(lfbdingRow);
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                flsf { // HORIZONTAL
                flsf { // HORIZONTAL
                flsf { // HORIZONTAL
                flsf { // HORIZONTAL
                flsf { // HORIZONTAL
                    // Loop pbst bny zfro-widti dols
                    // Loop pbst bny zfro-widti dols
                    // Loop pbst bny zfro-widti dols
                    // Loop pbst bny zfro-widti dols
                    // Loop pbst bny zfro-widti dols
                    wiilf (--lfbdingCol >= 0) {
                    wiilf (--lfbdingCol >= 0) {
                    wiilf (--lfbdingCol >= 0) {
                    wiilf (--lfbdingCol >= 0) {
                    wiilf (--lfbdingCol >= 0) {
                        rftVbl = gftCfllRfdt(lfbdingRow, lfbdingCol, truf).widti;
                        rftVbl = gftCfllRfdt(lfbdingRow, lfbdingCol, truf).widti;
                        rftVbl = gftCfllRfdt(lfbdingRow, lfbdingCol, truf).widti;
                        rftVbl = gftCfllRfdt(lfbdingRow, lfbdingCol, truf).widti;
                        rftVbl = gftCfllRfdt(lfbdingRow, lfbdingCol, truf).widti;
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                        if (rftVbl != 0) {
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
            }
            }
            }
            }
            }
            flsf { // Cbsf #2: iidf lfbding dfll
            flsf { // Cbsf #2: iidf lfbding dfll
            flsf { // Cbsf #2: iidf lfbding dfll
            flsf { // Cbsf #2: iidf lfbding dfll
            flsf { // Cbsf #2: iidf lfbding dfll
                rfturn lfbdingCfllSizf;
                rfturn lfbdingCfllSizf;
                rfturn lfbdingCfllSizf;
                rfturn lfbdingCfllSizf;
                rfturn lfbdingCfllSizf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf { // Lfbding dfll is pbrtiblly iiddfn
        flsf { // Lfbding dfll is pbrtiblly iiddfn
        flsf { // Lfbding dfll is pbrtiblly iiddfn
        flsf { // Lfbding dfll is pbrtiblly iiddfn
        flsf { // Lfbding dfll is pbrtiblly iiddfn
            // Computf visiblf, iiddfn portions
            // Computf visiblf, iiddfn portions
            // Computf visiblf, iiddfn portions
            // Computf visiblf, iiddfn portions
            // Computf visiblf, iiddfn portions
            int iiddfnAmt = Mbti.bbs(lfbdingVisiblfEdgf - lfbdingCfllEdgf);
            int iiddfnAmt = Mbti.bbs(lfbdingVisiblfEdgf - lfbdingCfllEdgf);
            int iiddfnAmt = Mbti.bbs(lfbdingVisiblfEdgf - lfbdingCfllEdgf);
            int iiddfnAmt = Mbti.bbs(lfbdingVisiblfEdgf - lfbdingCfllEdgf);
            int iiddfnAmt = Mbti.bbs(lfbdingVisiblfEdgf - lfbdingCfllEdgf);
            int visiblfAmt = lfbdingCfllSizf - iiddfnAmt;
            int visiblfAmt = lfbdingCfllSizf - iiddfnAmt;
            int visiblfAmt = lfbdingCfllSizf - iiddfnAmt;
            int visiblfAmt = lfbdingCfllSizf - iiddfnAmt;
            int visiblfAmt = lfbdingCfllSizf - iiddfnAmt;





            if (dirfdtion > 0) {
            if (dirfdtion > 0) {
            if (dirfdtion > 0) {
            if (dirfdtion > 0) {
            if (dirfdtion > 0) {
                // Cbsf #3: iidf siowing portion of lfbding dfll
                // Cbsf #3: iidf siowing portion of lfbding dfll
                // Cbsf #3: iidf siowing portion of lfbding dfll
                // Cbsf #3: iidf siowing portion of lfbding dfll
                // Cbsf #3: iidf siowing portion of lfbding dfll
                rfturn visiblfAmt;
                rfturn visiblfAmt;
                rfturn visiblfAmt;
                rfturn visiblfAmt;
                rfturn visiblfAmt;
            }
            }
            }
            }
            }
            flsf { // Cbsf #4: rfvfbl iiddfn portion of lfbding dfll
            flsf { // Cbsf #4: rfvfbl iiddfn portion of lfbding dfll
            flsf { // Cbsf #4: rfvfbl iiddfn portion of lfbding dfll
            flsf { // Cbsf #4: rfvfbl iiddfn portion of lfbding dfll
            flsf { // Cbsf #4: rfvfbl iiddfn portion of lfbding dfll
                rfturn iiddfnAmt;
                rfturn iiddfnAmt;
                rfturn iiddfnAmt;
                rfturn iiddfnAmt;
                rfturn iiddfnAmt;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns <dodf>visiblfRfdt.ifigit</dodf> or
     * Rfturns <dodf>visiblfRfdt.ifigit</dodf> or
     * Rfturns <dodf>visiblfRfdt.ifigit</dodf> or
     * Rfturns <dodf>visiblfRfdt.ifigit</dodf> or
     * Rfturns <dodf>visiblfRfdt.ifigit</dodf> or
     * <dodf>visiblfRfdt.widti</dodf>,
     * <dodf>visiblfRfdt.widti</dodf>,
     * <dodf>visiblfRfdt.widti</dodf>,
     * <dodf>visiblfRfdt.widti</dodf>,
     * <dodf>visiblfRfdt.widti</dodf>,
     * dfpfnding on tiis tbblf's orifntbtion.  Notf tibt bs of Swing 1.1.1
     * dfpfnding on tiis tbblf's orifntbtion.  Notf tibt bs of Swing 1.1.1
     * dfpfnding on tiis tbblf's orifntbtion.  Notf tibt bs of Swing 1.1.1
     * dfpfnding on tiis tbblf's orifntbtion.  Notf tibt bs of Swing 1.1.1
     * dfpfnding on tiis tbblf's orifntbtion.  Notf tibt bs of Swing 1.1.1
     * (Jbvb 2 v 1.2.2) tif vbluf
     * (Jbvb 2 v 1.2.2) tif vbluf
     * (Jbvb 2 v 1.2.2) tif vbluf
     * (Jbvb 2 v 1.2.2) tif vbluf
     * (Jbvb 2 v 1.2.2) tif vbluf
     * rfturnfd will fnsurf tibt tif vifwport is dlfbnly blignfd on
     * rfturnfd will fnsurf tibt tif vifwport is dlfbnly blignfd on
     * rfturnfd will fnsurf tibt tif vifwport is dlfbnly blignfd on
     * rfturnfd will fnsurf tibt tif vifwport is dlfbnly blignfd on
     * rfturnfd will fnsurf tibt tif vifwport is dlfbnly blignfd on
     * b row boundbry.
     * b row boundbry.
     * b row boundbry.
     * b row boundbry.
     * b row boundbry.
     *
     *
     *
     *
     *
     * @rfturn <dodf>visiblfRfdt.ifigit</dodf> or
     * @rfturn <dodf>visiblfRfdt.ifigit</dodf> or
     * @rfturn <dodf>visiblfRfdt.ifigit</dodf> or
     * @rfturn <dodf>visiblfRfdt.ifigit</dodf> or
     * @rfturn <dodf>visiblfRfdt.ifigit</dodf> or
     *                                  <dodf>visiblfRfdt.widti</dodf>
     *                                  <dodf>visiblfRfdt.widti</dodf>
     *                                  <dodf>visiblfRfdt.widti</dodf>
     *                                  <dodf>visiblfRfdt.widti</dodf>
     *                                  <dodf>visiblfRfdt.widti</dodf>
     *                                  pfr tif orifntbtion
     *                                  pfr tif orifntbtion
     *                                  pfr tif orifntbtion
     *                                  pfr tif orifntbtion
     *                                  pfr tif orifntbtion
     * @sff Sdrollbblf#gftSdrollbblfBlodkIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfBlodkIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfBlodkIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfBlodkIndrfmfnt
     * @sff Sdrollbblf#gftSdrollbblfBlodkIndrfmfnt
     */
     */
     */
     */
     */
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
            int orifntbtion, int dirfdtion) {
            int orifntbtion, int dirfdtion) {
            int orifntbtion, int dirfdtion) {
            int orifntbtion, int dirfdtion) {
            int orifntbtion, int dirfdtion) {





        if (gftRowCount() == 0) {
        if (gftRowCount() == 0) {
        if (gftRowCount() == 0) {
        if (gftRowCount() == 0) {
        if (gftRowCount() == 0) {
            // Siort-dirduit fmpty tbblf modfl
            // Siort-dirduit fmpty tbblf modfl
            // Siort-dirduit fmpty tbblf modfl
            // Siort-dirduit fmpty tbblf modfl
            // Siort-dirduit fmpty tbblf modfl
            if (SwingConstbnts.VERTICAL == orifntbtion) {
            if (SwingConstbnts.VERTICAL == orifntbtion) {
            if (SwingConstbnts.VERTICAL == orifntbtion) {
            if (SwingConstbnts.VERTICAL == orifntbtion) {
            if (SwingConstbnts.VERTICAL == orifntbtion) {
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                rfturn (ri > 0) ? Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri) :
                rfturn (ri > 0) ? Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri) :
                rfturn (ri > 0) ? Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri) :
                rfturn (ri > 0) ? Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri) :
                rfturn (ri > 0) ? Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri) :
                                  visiblfRfdt.ifigit;
                                  visiblfRfdt.ifigit;
                                  visiblfRfdt.ifigit;
                                  visiblfRfdt.ifigit;
                                  visiblfRfdt.ifigit;
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                rfturn visiblfRfdt.widti;
                rfturn visiblfRfdt.widti;
                rfturn visiblfRfdt.widti;
                rfturn visiblfRfdt.widti;
                rfturn visiblfRfdt.widti;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        // Siortdut for vfrtidbl sdrolling of b tbblf w/ uniform row ifigit
        // Siortdut for vfrtidbl sdrolling of b tbblf w/ uniform row ifigit
        // Siortdut for vfrtidbl sdrolling of b tbblf w/ uniform row ifigit
        // Siortdut for vfrtidbl sdrolling of b tbblf w/ uniform row ifigit
        // Siortdut for vfrtidbl sdrolling of b tbblf w/ uniform row ifigit
        if (null == rowModfl && SwingConstbnts.VERTICAL == orifntbtion) {
        if (null == rowModfl && SwingConstbnts.VERTICAL == orifntbtion) {
        if (null == rowModfl && SwingConstbnts.VERTICAL == orifntbtion) {
        if (null == rowModfl && SwingConstbnts.VERTICAL == orifntbtion) {
        if (null == rowModfl && SwingConstbnts.VERTICAL == orifntbtion) {
            int row = rowAtPoint(visiblfRfdt.gftLodbtion());
            int row = rowAtPoint(visiblfRfdt.gftLodbtion());
            int row = rowAtPoint(visiblfRfdt.gftLodbtion());
            int row = rowAtPoint(visiblfRfdt.gftLodbtion());
            int row = rowAtPoint(visiblfRfdt.gftLodbtion());
            bssfrt row != -1;
            bssfrt row != -1;
            bssfrt row != -1;
            bssfrt row != -1;
            bssfrt row != -1;
            int dol = dolumnAtPoint(visiblfRfdt.gftLodbtion());
            int dol = dolumnAtPoint(visiblfRfdt.gftLodbtion());
            int dol = dolumnAtPoint(visiblfRfdt.gftLodbtion());
            int dol = dolumnAtPoint(visiblfRfdt.gftLodbtion());
            int dol = dolumnAtPoint(visiblfRfdt.gftLodbtion());
            Rfdtbnglf dfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(row, dol, truf);





            if (dfllRfdt.y == visiblfRfdt.y) {
            if (dfllRfdt.y == visiblfRfdt.y) {
            if (dfllRfdt.y == visiblfRfdt.y) {
            if (dfllRfdt.y == visiblfRfdt.y) {
            if (dfllRfdt.y == visiblfRfdt.y) {
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                int ri = gftRowHfigit();
                bssfrt ri > 0;
                bssfrt ri > 0;
                bssfrt ri > 0;
                bssfrt ri > 0;
                bssfrt ri > 0;
                rfturn Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri);
                rfturn Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri);
                rfturn Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri);
                rfturn Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri);
                rfturn Mbti.mbx(ri, (visiblfRfdt.ifigit / ri) * ri);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        if (dirfdtion < 0) {
        if (dirfdtion < 0) {
        if (dirfdtion < 0) {
        if (dirfdtion < 0) {
        if (dirfdtion < 0) {
            rfturn gftPrfviousBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftPrfviousBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftPrfviousBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftPrfviousBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftPrfviousBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            rfturn gftNfxtBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftNfxtBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftNfxtBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftNfxtBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
            rfturn gftNfxtBlodkIndrfmfnt(visiblfRfdt, orifntbtion);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd to gft tif blodk indrfmfnt for upwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for upwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for upwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for upwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for upwbrd sdrolling in dbsfs of
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     */
     */
     */
     */
     */
    privbtf int gftPrfviousBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftPrfviousBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftPrfviousBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftPrfviousBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftPrfviousBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
                                          int orifntbtion) {
                                          int orifntbtion) {
                                          int orifntbtion) {
                                          int orifntbtion) {
                                          int orifntbtion) {
        // Mfbsurf bbdk from visiblf lfbding fdgf
        // Mfbsurf bbdk from visiblf lfbding fdgf
        // Mfbsurf bbdk from visiblf lfbding fdgf
        // Mfbsurf bbdk from visiblf lfbding fdgf
        // Mfbsurf bbdk from visiblf lfbding fdgf
        // If wf iit tif dfll on its lfbding fdgf, it bfdomfs tif lfbding dfll.
        // If wf iit tif dfll on its lfbding fdgf, it bfdomfs tif lfbding dfll.
        // If wf iit tif dfll on its lfbding fdgf, it bfdomfs tif lfbding dfll.
        // If wf iit tif dfll on its lfbding fdgf, it bfdomfs tif lfbding dfll.
        // If wf iit tif dfll on its lfbding fdgf, it bfdomfs tif lfbding dfll.
        // Elsf, usf following dfll
        // Elsf, usf following dfll
        // Elsf, usf following dfll
        // Elsf, usf following dfll
        // Elsf, usf following dfll





        int row;
        int row;
        int row;
        int row;
        int row;
        int dol;
        int dol;
        int dol;
        int dol;
        int dol;





        int   nfwEdgf;
        int   nfwEdgf;
        int   nfwEdgf;
        int   nfwEdgf;
        int   nfwEdgf;
        Point nfwCfllLod;
        Point nfwCfllLod;
        Point nfwCfllLod;
        Point nfwCfllLod;
        Point nfwCfllLod;





        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        boolfbn lfftToRigit = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn lfftToRigit = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn lfftToRigit = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn lfftToRigit = gftComponfntOrifntbtion().isLfftToRigit();
        boolfbn lfftToRigit = gftComponfntOrifntbtion().isLfftToRigit();
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;





        // Rougily dftfrminf tif nfw lfbding fdgf by mfbsuring bbdk from tif
        // Rougily dftfrminf tif nfw lfbding fdgf by mfbsuring bbdk from tif
        // Rougily dftfrminf tif nfw lfbding fdgf by mfbsuring bbdk from tif
        // Rougily dftfrminf tif nfw lfbding fdgf by mfbsuring bbdk from tif
        // Rougily dftfrminf tif nfw lfbding fdgf by mfbsuring bbdk from tif
        // lfbding visiblf fdgf by tif sizf of tif visiblf rfdt, bnd find tif
        // lfbding visiblf fdgf by tif sizf of tif visiblf rfdt, bnd find tif
        // lfbding visiblf fdgf by tif sizf of tif visiblf rfdt, bnd find tif
        // lfbding visiblf fdgf by tif sizf of tif visiblf rfdt, bnd find tif
        // lfbding visiblf fdgf by tif sizf of tif visiblf rfdt, bnd find tif
        // dfll tifrf.
        // dfll tifrf.
        // dfll tifrf.
        // dfll tifrf.
        // dfll tifrf.
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.ifigit;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.ifigit;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.ifigit;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.ifigit;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.ifigit;
            int x = visiblfRfdt.x + (lfftToRigit ? 0 : visiblfRfdt.widti);
            int x = visiblfRfdt.x + (lfftToRigit ? 0 : visiblfRfdt.widti);
            int x = visiblfRfdt.x + (lfftToRigit ? 0 : visiblfRfdt.widti);
            int x = visiblfRfdt.x + (lfftToRigit ? 0 : visiblfRfdt.widti);
            int x = visiblfRfdt.x + (lfftToRigit ? 0 : visiblfRfdt.widti);
            nfwCfllLod = nfw Point(x, nfwEdgf);
            nfwCfllLod = nfw Point(x, nfwEdgf);
            nfwCfllLod = nfw Point(x, nfwEdgf);
            nfwCfllLod = nfw Point(x, nfwEdgf);
            nfwCfllLod = nfw Point(x, nfwEdgf);
        }
        }
        }
        }
        }
        flsf if (lfftToRigit) {
        flsf if (lfftToRigit) {
        flsf if (lfftToRigit) {
        flsf if (lfftToRigit) {
        flsf if (lfftToRigit) {
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf - visiblfRfdt.widti;
            nfwCfllLod = nfw Point(nfwEdgf, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf, visiblfRfdt.y);
        }
        }
        }
        }
        }
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
            nfwEdgf = visiblfLfbdingEdgf + visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf + visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf + visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf + visiblfRfdt.widti;
            nfwEdgf = visiblfLfbdingEdgf + visiblfRfdt.widti;
            nfwCfllLod = nfw Point(nfwEdgf - 1, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf - 1, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf - 1, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf - 1, visiblfRfdt.y);
            nfwCfllLod = nfw Point(nfwEdgf - 1, visiblfRfdt.y);
        }
        }
        }
        }
        }
        row = rowAtPoint(nfwCfllLod);
        row = rowAtPoint(nfwCfllLod);
        row = rowAtPoint(nfwCfllLod);
        row = rowAtPoint(nfwCfllLod);
        row = rowAtPoint(nfwCfllLod);
        dol = dolumnAtPoint(nfwCfllLod);
        dol = dolumnAtPoint(nfwCfllLod);
        dol = dolumnAtPoint(nfwCfllLod);
        dol = dolumnAtPoint(nfwCfllLod);
        dol = dolumnAtPoint(nfwCfllLod);





        // If wf'rf mfbsuring pbst tif bfginning of tif tbblf, wf gft bn invblid
        // If wf'rf mfbsuring pbst tif bfginning of tif tbblf, wf gft bn invblid
        // If wf'rf mfbsuring pbst tif bfginning of tif tbblf, wf gft bn invblid
        // If wf'rf mfbsuring pbst tif bfginning of tif tbblf, wf gft bn invblid
        // If wf'rf mfbsuring pbst tif bfginning of tif tbblf, wf gft bn invblid
        // dfll.  Just go to tif bfginning of tif tbblf in tiis dbsf.
        // dfll.  Just go to tif bfginning of tif tbblf in tiis dbsf.
        // dfll.  Just go to tif bfginning of tif tbblf in tiis dbsf.
        // dfll.  Just go to tif bfginning of tif tbblf in tiis dbsf.
        // dfll.  Just go to tif bfginning of tif tbblf in tiis dbsf.
        if (orifntbtion == SwingConstbnts.VERTICAL & row < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL & row < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL & row < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL & row < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL & row < 0) {
            nfwLfbdingEdgf = 0;
            nfwLfbdingEdgf = 0;
            nfwLfbdingEdgf = 0;
            nfwLfbdingEdgf = 0;
            nfwLfbdingEdgf = 0;
        }
        }
        }
        }
        }
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL & dol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL & dol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL & dol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL & dol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL & dol < 0) {
            if (lfftToRigit) {
            if (lfftToRigit) {
            if (lfftToRigit) {
            if (lfftToRigit) {
            if (lfftToRigit) {
                nfwLfbdingEdgf = 0;
                nfwLfbdingEdgf = 0;
                nfwLfbdingEdgf = 0;
                nfwLfbdingEdgf = 0;
                nfwLfbdingEdgf = 0;
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                nfwLfbdingEdgf = gftWidti();
                nfwLfbdingEdgf = gftWidti();
                nfwLfbdingEdgf = gftWidti();
                nfwLfbdingEdgf = gftWidti();
                nfwLfbdingEdgf = gftWidti();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            // Rffinf our mfbsurfmfnt
            // Rffinf our mfbsurfmfnt
            // Rffinf our mfbsurfmfnt
            // Rffinf our mfbsurfmfnt
            // Rffinf our mfbsurfmfnt
            Rfdtbnglf nfwCfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf nfwCfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf nfwCfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf nfwCfllRfdt = gftCfllRfdt(row, dol, truf);
            Rfdtbnglf nfwCfllRfdt = gftCfllRfdt(row, dol, truf);
            int nfwCfllLfbdingEdgf = lfbdingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllLfbdingEdgf = lfbdingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllLfbdingEdgf = lfbdingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllLfbdingEdgf = lfbdingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllLfbdingEdgf = lfbdingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllTrbilingEdgf = trbilingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllTrbilingEdgf = trbilingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllTrbilingEdgf = trbilingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllTrbilingEdgf = trbilingEdgf(nfwCfllRfdt, orifntbtion);
            int nfwCfllTrbilingEdgf = trbilingEdgf(nfwCfllRfdt, orifntbtion);





            // Usublly, wf iit in tif middlf of nfwCfll, bnd wbnt to sdroll to
            // Usublly, wf iit in tif middlf of nfwCfll, bnd wbnt to sdroll to
            // Usublly, wf iit in tif middlf of nfwCfll, bnd wbnt to sdroll to
            // Usublly, wf iit in tif middlf of nfwCfll, bnd wbnt to sdroll to
            // Usublly, wf iit in tif middlf of nfwCfll, bnd wbnt to sdroll to
            // tif bfginning of tif dfll bftfr nfwCfll.  But tifrf brf b
            // tif bfginning of tif dfll bftfr nfwCfll.  But tifrf brf b
            // tif bfginning of tif dfll bftfr nfwCfll.  But tifrf brf b
            // tif bfginning of tif dfll bftfr nfwCfll.  But tifrf brf b
            // tif bfginning of tif dfll bftfr nfwCfll.  But tifrf brf b
            // douplf dornfr dbsfs wifrf wf wbnt to sdroll to tif bfginning of
            // douplf dornfr dbsfs wifrf wf wbnt to sdroll to tif bfginning of
            // douplf dornfr dbsfs wifrf wf wbnt to sdroll to tif bfginning of
            // douplf dornfr dbsfs wifrf wf wbnt to sdroll to tif bfginning of
            // douplf dornfr dbsfs wifrf wf wbnt to sdroll to tif bfginning of
            // nfwCfll itsflf.  Tifsf dbsfs brf:
            // nfwCfll itsflf.  Tifsf dbsfs brf:
            // nfwCfll itsflf.  Tifsf dbsfs brf:
            // nfwCfll itsflf.  Tifsf dbsfs brf:
            // nfwCfll itsflf.  Tifsf dbsfs brf:
            // 1) nfwCfll is so lbrgf tibt it fnds bt or fxtfnds into tif
            // 1) nfwCfll is so lbrgf tibt it fnds bt or fxtfnds into tif
            // 1) nfwCfll is so lbrgf tibt it fnds bt or fxtfnds into tif
            // 1) nfwCfll is so lbrgf tibt it fnds bt or fxtfnds into tif
            // 1) nfwCfll is so lbrgf tibt it fnds bt or fxtfnds into tif
            //    visiblfRfdt (nfwCfll is tif lfbding dfll, or is bdjbdfnt to
            //    visiblfRfdt (nfwCfll is tif lfbding dfll, or is bdjbdfnt to
            //    visiblfRfdt (nfwCfll is tif lfbding dfll, or is bdjbdfnt to
            //    visiblfRfdt (nfwCfll is tif lfbding dfll, or is bdjbdfnt to
            //    visiblfRfdt (nfwCfll is tif lfbding dfll, or is bdjbdfnt to
            //    tif lfbding dfll)
            //    tif lfbding dfll)
            //    tif lfbding dfll)
            //    tif lfbding dfll)
            //    tif lfbding dfll)
            // 2) nfwEdgf ibppfns to fbll rigit on tif bfginning of b dfll
            // 2) nfwEdgf ibppfns to fbll rigit on tif bfginning of b dfll
            // 2) nfwEdgf ibppfns to fbll rigit on tif bfginning of b dfll
            // 2) nfwEdgf ibppfns to fbll rigit on tif bfginning of b dfll
            // 2) nfwEdgf ibppfns to fbll rigit on tif bfginning of b dfll





            // Cbsf 1
            // Cbsf 1
            // Cbsf 1
            // Cbsf 1
            // Cbsf 1
            if ((orifntbtion == SwingConstbnts.VERTICAL || lfftToRigit) &&
            if ((orifntbtion == SwingConstbnts.VERTICAL || lfftToRigit) &&
            if ((orifntbtion == SwingConstbnts.VERTICAL || lfftToRigit) &&
            if ((orifntbtion == SwingConstbnts.VERTICAL || lfftToRigit) &&
            if ((orifntbtion == SwingConstbnts.VERTICAL || lfftToRigit) &&
                (nfwCfllTrbilingEdgf >= visiblfLfbdingEdgf)) {
                (nfwCfllTrbilingEdgf >= visiblfLfbdingEdgf)) {
                (nfwCfllTrbilingEdgf >= visiblfLfbdingEdgf)) {
                (nfwCfllTrbilingEdgf >= visiblfLfbdingEdgf)) {
                (nfwCfllTrbilingEdgf >= visiblfLfbdingEdgf)) {
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
            }
            }
            }
            }
            }
            flsf if (orifntbtion == SwingConstbnts.HORIZONTAL &&
            flsf if (orifntbtion == SwingConstbnts.HORIZONTAL &&
            flsf if (orifntbtion == SwingConstbnts.HORIZONTAL &&
            flsf if (orifntbtion == SwingConstbnts.HORIZONTAL &&
            flsf if (orifntbtion == SwingConstbnts.HORIZONTAL &&
                     !lfftToRigit &&
                     !lfftToRigit &&
                     !lfftToRigit &&
                     !lfftToRigit &&
                     !lfftToRigit &&
                     nfwCfllTrbilingEdgf <= visiblfLfbdingEdgf) {
                     nfwCfllTrbilingEdgf <= visiblfLfbdingEdgf) {
                     nfwCfllTrbilingEdgf <= visiblfLfbdingEdgf) {
                     nfwCfllTrbilingEdgf <= visiblfLfbdingEdgf) {
                     nfwCfllTrbilingEdgf <= visiblfLfbdingEdgf) {
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
            }
            }
            }
            }
            }
            // Cbsf 2:
            // Cbsf 2:
            // Cbsf 2:
            // Cbsf 2:
            // Cbsf 2:
            flsf if (nfwEdgf == nfwCfllLfbdingEdgf) {
            flsf if (nfwEdgf == nfwCfllLfbdingEdgf) {
            flsf if (nfwEdgf == nfwCfllLfbdingEdgf) {
            flsf if (nfwEdgf == nfwCfllLfbdingEdgf) {
            flsf if (nfwEdgf == nfwCfllLfbdingEdgf) {
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
                nfwLfbdingEdgf = nfwCfllLfbdingEdgf;
            }
            }
            }
            }
            }
            // Common dbsf: sdroll to dfll bftfr nfwCfll
            // Common dbsf: sdroll to dfll bftfr nfwCfll
            // Common dbsf: sdroll to dfll bftfr nfwCfll
            // Common dbsf: sdroll to dfll bftfr nfwCfll
            // Common dbsf: sdroll to dfll bftfr nfwCfll
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                nfwLfbdingEdgf = nfwCfllTrbilingEdgf;
                nfwLfbdingEdgf = nfwCfllTrbilingEdgf;
                nfwLfbdingEdgf = nfwCfllTrbilingEdgf;
                nfwLfbdingEdgf = nfwCfllTrbilingEdgf;
                nfwLfbdingEdgf = nfwCfllTrbilingEdgf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn Mbti.bbs(visiblfLfbdingEdgf - nfwLfbdingEdgf);
        rfturn Mbti.bbs(visiblfLfbdingEdgf - nfwLfbdingEdgf);
        rfturn Mbti.bbs(visiblfLfbdingEdgf - nfwLfbdingEdgf);
        rfturn Mbti.bbs(visiblfLfbdingEdgf - nfwLfbdingEdgf);
        rfturn Mbti.bbs(visiblfLfbdingEdgf - nfwLfbdingEdgf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd to gft tif blodk indrfmfnt for downwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for downwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for downwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for downwbrd sdrolling in dbsfs of
     * Cbllfd to gft tif blodk indrfmfnt for downwbrd sdrolling in dbsfs of
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * iorizontbl sdrolling, or for vfrtidbl sdrolling of b tbblf witi
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     * vbribblf row ifigits.
     */
     */
     */
     */
     */
    privbtf int gftNfxtBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftNfxtBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftNfxtBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftNfxtBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    privbtf int gftNfxtBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
                                      int orifntbtion) {
                                      int orifntbtion) {
                                      int orifntbtion) {
                                      int orifntbtion) {
                                      int orifntbtion) {
        // Find tif dfll bt tif trbiling fdgf.  Rfturn tif distbndf to put
        // Find tif dfll bt tif trbiling fdgf.  Rfturn tif distbndf to put
        // Find tif dfll bt tif trbiling fdgf.  Rfturn tif distbndf to put
        // Find tif dfll bt tif trbiling fdgf.  Rfturn tif distbndf to put
        // Find tif dfll bt tif trbiling fdgf.  Rfturn tif distbndf to put
        // tibt dfll bt tif lfbding fdgf.
        // tibt dfll bt tif lfbding fdgf.
        // tibt dfll bt tif lfbding fdgf.
        // tibt dfll bt tif lfbding fdgf.
        // tibt dfll bt tif lfbding fdgf.
        int trbilingRow = gftTrbilingRow(visiblfRfdt);
        int trbilingRow = gftTrbilingRow(visiblfRfdt);
        int trbilingRow = gftTrbilingRow(visiblfRfdt);
        int trbilingRow = gftTrbilingRow(visiblfRfdt);
        int trbilingRow = gftTrbilingRow(visiblfRfdt);
        int trbilingCol = gftTrbilingCol(visiblfRfdt);
        int trbilingCol = gftTrbilingCol(visiblfRfdt);
        int trbilingCol = gftTrbilingCol(visiblfRfdt);
        int trbilingCol = gftTrbilingCol(visiblfRfdt);
        int trbilingCol = gftTrbilingCol(visiblfRfdt);





        Rfdtbnglf dfllRfdt;
        Rfdtbnglf dfllRfdt;
        Rfdtbnglf dfllRfdt;
        Rfdtbnglf dfllRfdt;
        Rfdtbnglf dfllRfdt;
        boolfbn dfllFillsVis;
        boolfbn dfllFillsVis;
        boolfbn dfllFillsVis;
        boolfbn dfllFillsVis;
        boolfbn dfllFillsVis;





        int dfllLfbdingEdgf;
        int dfllLfbdingEdgf;
        int dfllLfbdingEdgf;
        int dfllLfbdingEdgf;
        int dfllLfbdingEdgf;
        int dfllTrbilingEdgf;
        int dfllTrbilingEdgf;
        int dfllTrbilingEdgf;
        int dfllTrbilingEdgf;
        int dfllTrbilingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int nfwLfbdingEdgf;
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);
        int visiblfLfbdingEdgf = lfbdingEdgf(visiblfRfdt, orifntbtion);





        // If wf douldn't find trbiling dfll, just rfturn tif sizf of tif
        // If wf douldn't find trbiling dfll, just rfturn tif sizf of tif
        // If wf douldn't find trbiling dfll, just rfturn tif sizf of tif
        // If wf douldn't find trbiling dfll, just rfturn tif sizf of tif
        // If wf douldn't find trbiling dfll, just rfturn tif sizf of tif
        // visiblfRfdt.  Notf tibt, for instbndf, wf don't nffd tif
        // visiblfRfdt.  Notf tibt, for instbndf, wf don't nffd tif
        // visiblfRfdt.  Notf tibt, for instbndf, wf don't nffd tif
        // visiblfRfdt.  Notf tibt, for instbndf, wf don't nffd tif
        // visiblfRfdt.  Notf tibt, for instbndf, wf don't nffd tif
        // trbilingCol to prodffd if wf'rf sdrolling vfrtidblly, bfdbusf
        // trbilingCol to prodffd if wf'rf sdrolling vfrtidblly, bfdbusf
        // trbilingCol to prodffd if wf'rf sdrolling vfrtidblly, bfdbusf
        // trbilingCol to prodffd if wf'rf sdrolling vfrtidblly, bfdbusf
        // trbilingCol to prodffd if wf'rf sdrolling vfrtidblly, bfdbusf
        // dfllRfdt will still fill in tif rfquirfd dimfnsions.  Tiis would
        // dfllRfdt will still fill in tif rfquirfd dimfnsions.  Tiis would
        // dfllRfdt will still fill in tif rfquirfd dimfnsions.  Tiis would
        // dfllRfdt will still fill in tif rfquirfd dimfnsions.  Tiis would
        // dfllRfdt will still fill in tif rfquirfd dimfnsions.  Tiis would
        // ibppfn if wf'rf sdrolling vfrtidblly, bnd tif tbblf is not widf
        // ibppfn if wf'rf sdrolling vfrtidblly, bnd tif tbblf is not widf
        // ibppfn if wf'rf sdrolling vfrtidblly, bnd tif tbblf is not widf
        // ibppfn if wf'rf sdrolling vfrtidblly, bnd tif tbblf is not widf
        // ibppfn if wf'rf sdrolling vfrtidblly, bnd tif tbblf is not widf
        // fnougi to fill tif visiblfRfdt.
        // fnougi to fill tif visiblfRfdt.
        // fnougi to fill tif visiblfRfdt.
        // fnougi to fill tif visiblfRfdt.
        // fnougi to fill tif visiblfRfdt.
        if (orifntbtion == SwingConstbnts.VERTICAL && trbilingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && trbilingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && trbilingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && trbilingRow < 0) {
        if (orifntbtion == SwingConstbnts.VERTICAL && trbilingRow < 0) {
            rfturn visiblfRfdt.ifigit;
            rfturn visiblfRfdt.ifigit;
            rfturn visiblfRfdt.ifigit;
            rfturn visiblfRfdt.ifigit;
            rfturn visiblfRfdt.ifigit;
        }
        }
        }
        }
        }
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && trbilingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && trbilingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && trbilingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && trbilingCol < 0) {
        flsf if (orifntbtion == SwingConstbnts.HORIZONTAL && trbilingCol < 0) {
            rfturn visiblfRfdt.widti;
            rfturn visiblfRfdt.widti;
            rfturn visiblfRfdt.widti;
            rfturn visiblfRfdt.widti;
            rfturn visiblfRfdt.widti;
        }
        }
        }
        }
        }
        dfllRfdt = gftCfllRfdt(trbilingRow, trbilingCol, truf);
        dfllRfdt = gftCfllRfdt(trbilingRow, trbilingCol, truf);
        dfllRfdt = gftCfllRfdt(trbilingRow, trbilingCol, truf);
        dfllRfdt = gftCfllRfdt(trbilingRow, trbilingCol, truf);
        dfllRfdt = gftCfllRfdt(trbilingRow, trbilingCol, truf);
        dfllLfbdingEdgf = lfbdingEdgf(dfllRfdt, orifntbtion);
        dfllLfbdingEdgf = lfbdingEdgf(dfllRfdt, orifntbtion);
        dfllLfbdingEdgf = lfbdingEdgf(dfllRfdt, orifntbtion);
        dfllLfbdingEdgf = lfbdingEdgf(dfllRfdt, orifntbtion);
        dfllLfbdingEdgf = lfbdingEdgf(dfllRfdt, orifntbtion);
        dfllTrbilingEdgf = trbilingEdgf(dfllRfdt, orifntbtion);
        dfllTrbilingEdgf = trbilingEdgf(dfllRfdt, orifntbtion);
        dfllTrbilingEdgf = trbilingEdgf(dfllRfdt, orifntbtion);
        dfllTrbilingEdgf = trbilingEdgf(dfllRfdt, orifntbtion);
        dfllTrbilingEdgf = trbilingEdgf(dfllRfdt, orifntbtion);





        if (orifntbtion == SwingConstbnts.VERTICAL ||
        if (orifntbtion == SwingConstbnts.VERTICAL ||
        if (orifntbtion == SwingConstbnts.VERTICAL ||
        if (orifntbtion == SwingConstbnts.VERTICAL ||
        if (orifntbtion == SwingConstbnts.VERTICAL ||
            gftComponfntOrifntbtion().isLfftToRigit()) {
            gftComponfntOrifntbtion().isLfftToRigit()) {
            gftComponfntOrifntbtion().isLfftToRigit()) {
            gftComponfntOrifntbtion().isLfftToRigit()) {
            gftComponfntOrifntbtion().isLfftToRigit()) {
            dfllFillsVis = dfllLfbdingEdgf <= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf <= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf <= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf <= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf <= visiblfLfbdingEdgf;
        }
        }
        }
        }
        }
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
            dfllFillsVis = dfllLfbdingEdgf >= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf >= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf >= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf >= visiblfLfbdingEdgf;
            dfllFillsVis = dfllLfbdingEdgf >= visiblfLfbdingEdgf;
        }
        }
        }
        }
        }





        if (dfllFillsVis) {
        if (dfllFillsVis) {
        if (dfllFillsVis) {
        if (dfllFillsVis) {
        if (dfllFillsVis) {
            // Tif visiblfRfdt dontbins b singlf lbrgf dfll.  Sdroll to tif fnd
            // Tif visiblfRfdt dontbins b singlf lbrgf dfll.  Sdroll to tif fnd
            // Tif visiblfRfdt dontbins b singlf lbrgf dfll.  Sdroll to tif fnd
            // Tif visiblfRfdt dontbins b singlf lbrgf dfll.  Sdroll to tif fnd
            // Tif visiblfRfdt dontbins b singlf lbrgf dfll.  Sdroll to tif fnd
            // of tiis dfll, so tif following dfll is tif first dfll.
            // of tiis dfll, so tif following dfll is tif first dfll.
            // of tiis dfll, so tif following dfll is tif first dfll.
            // of tiis dfll, so tif following dfll is tif first dfll.
            // of tiis dfll, so tif following dfll is tif first dfll.
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
        }
        }
        }
        }
        }
        flsf if (dfllTrbilingEdgf == trbilingEdgf(visiblfRfdt, orifntbtion)) {
        flsf if (dfllTrbilingEdgf == trbilingEdgf(visiblfRfdt, orifntbtion)) {
        flsf if (dfllTrbilingEdgf == trbilingEdgf(visiblfRfdt, orifntbtion)) {
        flsf if (dfllTrbilingEdgf == trbilingEdgf(visiblfRfdt, orifntbtion)) {
        flsf if (dfllTrbilingEdgf == trbilingEdgf(visiblfRfdt, orifntbtion)) {
            // Tif trbiling dfll ibppfns to fnd rigit bt tif fnd of tif
            // Tif trbiling dfll ibppfns to fnd rigit bt tif fnd of tif
            // Tif trbiling dfll ibppfns to fnd rigit bt tif fnd of tif
            // Tif trbiling dfll ibppfns to fnd rigit bt tif fnd of tif
            // Tif trbiling dfll ibppfns to fnd rigit bt tif fnd of tif
            // visiblfRfdt.  Agbin, sdroll to tif bfginning of tif nfxt dfll.
            // visiblfRfdt.  Agbin, sdroll to tif bfginning of tif nfxt dfll.
            // visiblfRfdt.  Agbin, sdroll to tif bfginning of tif nfxt dfll.
            // visiblfRfdt.  Agbin, sdroll to tif bfginning of tif nfxt dfll.
            // visiblfRfdt.  Agbin, sdroll to tif bfginning of tif nfxt dfll.
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
            nfwLfbdingEdgf = dfllTrbilingEdgf;
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            // Common dbsf: tif trbiling dfll is pbrtiblly visiblf, bnd isn't
            // Common dbsf: tif trbiling dfll is pbrtiblly visiblf, bnd isn't
            // Common dbsf: tif trbiling dfll is pbrtiblly visiblf, bnd isn't
            // Common dbsf: tif trbiling dfll is pbrtiblly visiblf, bnd isn't
            // Common dbsf: tif trbiling dfll is pbrtiblly visiblf, bnd isn't
            // big fnougi to tbkf up tif fntirf visiblfRfdt.  Sdroll so it
            // big fnougi to tbkf up tif fntirf visiblfRfdt.  Sdroll so it
            // big fnougi to tbkf up tif fntirf visiblfRfdt.  Sdroll so it
            // big fnougi to tbkf up tif fntirf visiblfRfdt.  Sdroll so it
            // big fnougi to tbkf up tif fntirf visiblfRfdt.  Sdroll so it
            // bfdomfs tif lfbding dfll.
            // bfdomfs tif lfbding dfll.
            // bfdomfs tif lfbding dfll.
            // bfdomfs tif lfbding dfll.
            // bfdomfs tif lfbding dfll.
            nfwLfbdingEdgf = dfllLfbdingEdgf;
            nfwLfbdingEdgf = dfllLfbdingEdgf;
            nfwLfbdingEdgf = dfllLfbdingEdgf;
            nfwLfbdingEdgf = dfllLfbdingEdgf;
            nfwLfbdingEdgf = dfllLfbdingEdgf;
        }
        }
        }
        }
        }
        rfturn Mbti.bbs(nfwLfbdingEdgf - visiblfLfbdingEdgf);
        rfturn Mbti.bbs(nfwLfbdingEdgf - visiblfLfbdingEdgf);
        rfturn Mbti.bbs(nfwLfbdingEdgf - visiblfLfbdingEdgf);
        rfturn Mbti.bbs(nfwLfbdingEdgf - visiblfLfbdingEdgf);
        rfturn Mbti.bbs(nfwLfbdingEdgf - visiblfLfbdingEdgf);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturn tif row bt tif top of tif visiblfRfdt
     * Rfturn tif row bt tif top of tif visiblfRfdt
     * Rfturn tif row bt tif top of tif visiblfRfdt
     * Rfturn tif row bt tif top of tif visiblfRfdt
     * Rfturn tif row bt tif top of tif visiblfRfdt
     *
     *
     *
     *
     *
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     */
     */
     */
     */
     */
    privbtf int gftLfbdingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingRow(Rfdtbnglf visiblfRfdt) {
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;





        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
        }
        }
        }
        }
        }
        rfturn rowAtPoint(lfbdingPoint);
        rfturn rowAtPoint(lfbdingPoint);
        rfturn rowAtPoint(lfbdingPoint);
        rfturn rowAtPoint(lfbdingPoint);
        rfturn rowAtPoint(lfbdingPoint);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturn tif dolumn bt tif lfbding fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif lfbding fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif lfbding fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif lfbding fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif lfbding fdgf of tif visiblfRfdt.
     *
     *
     *
     *
     *
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     */
     */
     */
     */
     */
    privbtf int gftLfbdingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftLfbdingCol(Rfdtbnglf visiblfRfdt) {
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;
        Point lfbdingPoint;





        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            lfbdingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            lfbdingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
                                     visiblfRfdt.y);
        }
        }
        }
        }
        }
        rfturn dolumnAtPoint(lfbdingPoint);
        rfturn dolumnAtPoint(lfbdingPoint);
        rfturn dolumnAtPoint(lfbdingPoint);
        rfturn dolumnAtPoint(lfbdingPoint);
        rfturn dolumnAtPoint(lfbdingPoint);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturn tif row bt tif bottom of tif visiblfRfdt.
     * Rfturn tif row bt tif bottom of tif visiblfRfdt.
     * Rfturn tif row bt tif bottom of tif visiblfRfdt.
     * Rfturn tif row bt tif bottom of tif visiblfRfdt.
     * Rfturn tif row bt tif bottom of tif visiblfRfdt.
     *
     *
     *
     *
     *
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     */
     */
     */
     */
     */
    privbtf int gftTrbilingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingRow(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingRow(Rfdtbnglf visiblfRfdt) {
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;





        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
            trbilingPoint = nfw Point(visiblfRfdt.x,
            trbilingPoint = nfw Point(visiblfRfdt.x,
            trbilingPoint = nfw Point(visiblfRfdt.x,
            trbilingPoint = nfw Point(visiblfRfdt.x,
            trbilingPoint = nfw Point(visiblfRfdt.x,
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
                                      visiblfRfdt.y + visiblfRfdt.ifigit - 1);
        }
        }
        }
        }
        }
        rfturn rowAtPoint(trbilingPoint);
        rfturn rowAtPoint(trbilingPoint);
        rfturn rowAtPoint(trbilingPoint);
        rfturn rowAtPoint(trbilingPoint);
        rfturn rowAtPoint(trbilingPoint);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturn tif dolumn bt tif trbiling fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif trbiling fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif trbiling fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif trbiling fdgf of tif visiblfRfdt.
     * Rfturn tif dolumn bt tif trbiling fdgf of tif visiblfRfdt.
     *
     *
     *
     *
     *
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     * Mby rfturn -1
     */
     */
     */
     */
     */
    privbtf int gftTrbilingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingCol(Rfdtbnglf visiblfRfdt) {
    privbtf int gftTrbilingCol(Rfdtbnglf visiblfRfdt) {
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;
        Point trbilingPoint;





        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
        if (gftComponfntOrifntbtion().isLfftToRigit()) {
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
            trbilingPoint = nfw Point(visiblfRfdt.x + visiblfRfdt.widti - 1,
                                      visiblfRfdt.y);
                                      visiblfRfdt.y);
                                      visiblfRfdt.y);
                                      visiblfRfdt.y);
                                      visiblfRfdt.y);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            trbilingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            trbilingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            trbilingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            trbilingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
            trbilingPoint = nfw Point(visiblfRfdt.x, visiblfRfdt.y);
        }
        }
        }
        }
        }
        rfturn dolumnAtPoint(trbilingPoint);
        rfturn dolumnAtPoint(trbilingPoint);
        rfturn dolumnAtPoint(trbilingPoint);
        rfturn dolumnAtPoint(trbilingPoint);
        rfturn dolumnAtPoint(trbilingPoint);
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturns tif lfbding fdgf ("bfginning") of tif givfn Rfdtbnglf.
     * Rfturns tif lfbding fdgf ("bfginning") of tif givfn Rfdtbnglf.
     * Rfturns tif lfbding fdgf ("bfginning") of tif givfn Rfdtbnglf.
     * Rfturns tif lfbding fdgf ("bfginning") of tif givfn Rfdtbnglf.
     * Rfturns tif lfbding fdgf ("bfginning") of tif givfn Rfdtbnglf.
     * For VERTICAL, tiis is tif top, for lfft-to-rigit, tif lfft sidf, bnd for
     * For VERTICAL, tiis is tif top, for lfft-to-rigit, tif lfft sidf, bnd for
     * For VERTICAL, tiis is tif top, for lfft-to-rigit, tif lfft sidf, bnd for
     * For VERTICAL, tiis is tif top, for lfft-to-rigit, tif lfft sidf, bnd for
     * For VERTICAL, tiis is tif top, for lfft-to-rigit, tif lfft sidf, bnd for
     * rigit-to-lfft, tif rigit sidf.
     * rigit-to-lfft, tif rigit sidf.
     * rigit-to-lfft, tif rigit sidf.
     * rigit-to-lfft, tif rigit sidf.
     * rigit-to-lfft, tif rigit sidf.
     */
     */
     */
     */
     */
    privbtf int lfbdingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int lfbdingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int lfbdingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int lfbdingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int lfbdingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
            rfturn rfdt.y;
            rfturn rfdt.y;
            rfturn rfdt.y;
            rfturn rfdt.y;
            rfturn rfdt.y;
        }
        }
        }
        }
        }
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
        }
        }
        }
        }
        }
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /*
    /*
    /*
    /*
    /*
     * Rfturns tif trbiling fdgf ("fnd") of tif givfn Rfdtbnglf.
     * Rfturns tif trbiling fdgf ("fnd") of tif givfn Rfdtbnglf.
     * Rfturns tif trbiling fdgf ("fnd") of tif givfn Rfdtbnglf.
     * Rfturns tif trbiling fdgf ("fnd") of tif givfn Rfdtbnglf.
     * Rfturns tif trbiling fdgf ("fnd") of tif givfn Rfdtbnglf.
     * For VERTICAL, tiis is tif bottom, for lfft-to-rigit, tif rigit sidf, bnd
     * For VERTICAL, tiis is tif bottom, for lfft-to-rigit, tif rigit sidf, bnd
     * For VERTICAL, tiis is tif bottom, for lfft-to-rigit, tif rigit sidf, bnd
     * For VERTICAL, tiis is tif bottom, for lfft-to-rigit, tif rigit sidf, bnd
     * For VERTICAL, tiis is tif bottom, for lfft-to-rigit, tif rigit sidf, bnd
     * for rigit-to-lfft, tif lfft sidf.
     * for rigit-to-lfft, tif lfft sidf.
     * for rigit-to-lfft, tif lfft sidf.
     * for rigit-to-lfft, tif lfft sidf.
     * for rigit-to-lfft, tif lfft sidf.
     */
     */
     */
     */
     */
    privbtf int trbilingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int trbilingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int trbilingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int trbilingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
    privbtf int trbilingEdgf(Rfdtbnglf rfdt, int orifntbtion) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
        if (orifntbtion == SwingConstbnts.VERTICAL) {
            rfturn rfdt.y + rfdt.ifigit;
            rfturn rfdt.y + rfdt.ifigit;
            rfturn rfdt.y + rfdt.ifigit;
            rfturn rfdt.y + rfdt.ifigit;
            rfturn rfdt.y + rfdt.ifigit;
        }
        }
        }
        }
        }
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
        flsf if (gftComponfntOrifntbtion().isLfftToRigit()) {
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
            rfturn rfdt.x + rfdt.widti;
        }
        }
        }
        }
        }
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
        flsf { // Horizontbl, rigit-to-lfft
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
            rfturn rfdt.x;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns fblsf if <dodf>butoRfsizfModf</dodf> is sft to
     * Rfturns fblsf if <dodf>butoRfsizfModf</dodf> is sft to
     * Rfturns fblsf if <dodf>butoRfsizfModf</dodf> is sft to
     * Rfturns fblsf if <dodf>butoRfsizfModf</dodf> is sft to
     * Rfturns fblsf if <dodf>butoRfsizfModf</dodf> is sft to
     * <dodf>AUTO_RESIZE_OFF</dodf>, wiidi indidbtfs tibt tif
     * <dodf>AUTO_RESIZE_OFF</dodf>, wiidi indidbtfs tibt tif
     * <dodf>AUTO_RESIZE_OFF</dodf>, wiidi indidbtfs tibt tif
     * <dodf>AUTO_RESIZE_OFF</dodf>, wiidi indidbtfs tibt tif
     * <dodf>AUTO_RESIZE_OFF</dodf>, wiidi indidbtfs tibt tif
     * widti of tif vifwport dofs not dftfrminf tif widti
     * widti of tif vifwport dofs not dftfrminf tif widti
     * widti of tif vifwport dofs not dftfrminf tif widti
     * widti of tif vifwport dofs not dftfrminf tif widti
     * widti of tif vifwport dofs not dftfrminf tif widti
     * of tif tbblf.  Otifrwisf rfturns truf.
     * of tif tbblf.  Otifrwisf rfturns truf.
     * of tif tbblf.  Otifrwisf rfturns truf.
     * of tif tbblf.  Otifrwisf rfturns truf.
     * of tif tbblf.  Otifrwisf rfturns truf.
     *
     *
     *
     *
     *
     * @rfturn fblsf if <dodf>butoRfsizfModf</dodf> is sft
     * @rfturn fblsf if <dodf>butoRfsizfModf</dodf> is sft
     * @rfturn fblsf if <dodf>butoRfsizfModf</dodf> is sft
     * @rfturn fblsf if <dodf>butoRfsizfModf</dodf> is sft
     * @rfturn fblsf if <dodf>butoRfsizfModf</dodf> is sft
     *   to <dodf>AUTO_RESIZE_OFF</dodf>, otifrwisf rfturns truf
     *   to <dodf>AUTO_RESIZE_OFF</dodf>, otifrwisf rfturns truf
     *   to <dodf>AUTO_RESIZE_OFF</dodf>, otifrwisf rfturns truf
     *   to <dodf>AUTO_RESIZE_OFF</dodf>, otifrwisf rfturns truf
     *   to <dodf>AUTO_RESIZE_OFF</dodf>, otifrwisf rfturns truf
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     */
     */
     */
     */
     */
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
        rfturn !(butoRfsizfModf == AUTO_RESIZE_OFF);
        rfturn !(butoRfsizfModf == AUTO_RESIZE_OFF);
        rfturn !(butoRfsizfModf == AUTO_RESIZE_OFF);
        rfturn !(butoRfsizfModf == AUTO_RESIZE_OFF);
        rfturn !(butoRfsizfModf == AUTO_RESIZE_OFF);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns {@dodf fblsf} to indidbtf tibt tif ifigit of tif vifwport dofs
     * Rfturns {@dodf fblsf} to indidbtf tibt tif ifigit of tif vifwport dofs
     * Rfturns {@dodf fblsf} to indidbtf tibt tif ifigit of tif vifwport dofs
     * Rfturns {@dodf fblsf} to indidbtf tibt tif ifigit of tif vifwport dofs
     * Rfturns {@dodf fblsf} to indidbtf tibt tif ifigit of tif vifwport dofs
     * not dftfrminf tif ifigit of tif tbblf, unlfss
     * not dftfrminf tif ifigit of tif tbblf, unlfss
     * not dftfrminf tif ifigit of tif tbblf, unlfss
     * not dftfrminf tif ifigit of tif tbblf, unlfss
     * not dftfrminf tif ifigit of tif tbblf, unlfss
     * {@dodf gftFillsVifwportHfigit} is {@dodf truf} bnd tif prfffrrfd ifigit
     * {@dodf gftFillsVifwportHfigit} is {@dodf truf} bnd tif prfffrrfd ifigit
     * {@dodf gftFillsVifwportHfigit} is {@dodf truf} bnd tif prfffrrfd ifigit
     * {@dodf gftFillsVifwportHfigit} is {@dodf truf} bnd tif prfffrrfd ifigit
     * {@dodf gftFillsVifwportHfigit} is {@dodf truf} bnd tif prfffrrfd ifigit
     * of tif tbblf is smbllfr tibn tif vifwport's ifigit.
     * of tif tbblf is smbllfr tibn tif vifwport's ifigit.
     * of tif tbblf is smbllfr tibn tif vifwport's ifigit.
     * of tif tbblf is smbllfr tibn tif vifwport's ifigit.
     * of tif tbblf is smbllfr tibn tif vifwport's ifigit.
     *
     *
     *
     *
     *
     * @rfturn {@dodf fblsf} unlfss {@dodf gftFillsVifwportHfigit} is
     * @rfturn {@dodf fblsf} unlfss {@dodf gftFillsVifwportHfigit} is
     * @rfturn {@dodf fblsf} unlfss {@dodf gftFillsVifwportHfigit} is
     * @rfturn {@dodf fblsf} unlfss {@dodf gftFillsVifwportHfigit} is
     * @rfturn {@dodf fblsf} unlfss {@dodf gftFillsVifwportHfigit} is
     *         {@dodf truf} bnd tif tbblf nffds to bf strftdifd to fill
     *         {@dodf truf} bnd tif tbblf nffds to bf strftdifd to fill
     *         {@dodf truf} bnd tif tbblf nffds to bf strftdifd to fill
     *         {@dodf truf} bnd tif tbblf nffds to bf strftdifd to fill
     *         {@dodf truf} bnd tif tbblf nffds to bf strftdifd to fill
     *         tif vifwport
     *         tif vifwport
     *         tif vifwport
     *         tif vifwport
     *         tif vifwport
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     */
     */
     */
     */
     */
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        rfturn gftFillsVifwportHfigit()
        rfturn gftFillsVifwportHfigit()
        rfturn gftFillsVifwportHfigit()
        rfturn gftFillsVifwportHfigit()
        rfturn gftFillsVifwportHfigit()
               && pbrfnt instbndfof JVifwport
               && pbrfnt instbndfof JVifwport
               && pbrfnt instbndfof JVifwport
               && pbrfnt instbndfof JVifwport
               && pbrfnt instbndfof JVifwport
               && pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
               && pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
               && pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
               && pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
               && pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Sfts wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Sfts wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Sfts wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Sfts wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * to fill tif ifigit of bn fndlosing vifwport. If tif prfffrrfd
     * to fill tif ifigit of bn fndlosing vifwport. If tif prfffrrfd
     * to fill tif ifigit of bn fndlosing vifwport. If tif prfffrrfd
     * to fill tif ifigit of bn fndlosing vifwport. If tif prfffrrfd
     * to fill tif ifigit of bn fndlosing vifwport. If tif prfffrrfd
     * ifigit of tif tbblf is smbllfr tibn tif vifwport, tifn tif tbblf
     * ifigit of tif tbblf is smbllfr tibn tif vifwport, tifn tif tbblf
     * ifigit of tif tbblf is smbllfr tibn tif vifwport, tifn tif tbblf
     * ifigit of tif tbblf is smbllfr tibn tif vifwport, tifn tif tbblf
     * ifigit of tif tbblf is smbllfr tibn tif vifwport, tifn tif tbblf
     * will bf strftdifd to fill tif vifwport. In otifr words, tiis
     * will bf strftdifd to fill tif vifwport. In otifr words, tiis
     * will bf strftdifd to fill tif vifwport. In otifr words, tiis
     * will bf strftdifd to fill tif vifwport. In otifr words, tiis
     * will bf strftdifd to fill tif vifwport. In otifr words, tiis
     * fnsurfs tif tbblf is nfvfr smbllfr tibn tif vifwport.
     * fnsurfs tif tbblf is nfvfr smbllfr tibn tif vifwport.
     * fnsurfs tif tbblf is nfvfr smbllfr tibn tif vifwport.
     * fnsurfs tif tbblf is nfvfr smbllfr tibn tif vifwport.
     * fnsurfs tif tbblf is nfvfr smbllfr tibn tif vifwport.
     * Tif dffbult for tiis propfrty is {@dodf fblsf}.
     * Tif dffbult for tiis propfrty is {@dodf fblsf}.
     * Tif dffbult for tiis propfrty is {@dodf fblsf}.
     * Tif dffbult for tiis propfrty is {@dodf fblsf}.
     * Tif dffbult for tiis propfrty is {@dodf fblsf}.
     *
     *
     *
     *
     *
     * @pbrbm fillsVifwportHfigit wiftifr or not tiis tbblf is blwbys
     * @pbrbm fillsVifwportHfigit wiftifr or not tiis tbblf is blwbys
     * @pbrbm fillsVifwportHfigit wiftifr or not tiis tbblf is blwbys
     * @pbrbm fillsVifwportHfigit wiftifr or not tiis tbblf is blwbys
     * @pbrbm fillsVifwportHfigit wiftifr or not tiis tbblf is blwbys
     *        mbdf lbrgf fnougi to fill tif ifigit of bn fndlosing
     *        mbdf lbrgf fnougi to fill tif ifigit of bn fndlosing
     *        mbdf lbrgf fnougi to fill tif ifigit of bn fndlosing
     *        mbdf lbrgf fnougi to fill tif ifigit of bn fndlosing
     *        mbdf lbrgf fnougi to fill tif ifigit of bn fndlosing
     *        vifwport
     *        vifwport
     *        vifwport
     *        vifwport
     *        vifwport
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftFillsVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sff #gftSdrollbblfTrbdksVifwportHfigit
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      bound: truf
     *      dfsdription: Wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *      dfsdription: Wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *      dfsdription: Wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *      dfsdription: Wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *      dfsdription: Wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *                   to fill tif ifigit of bn fndlosing vifwport
     *                   to fill tif ifigit of bn fndlosing vifwport
     *                   to fill tif ifigit of bn fndlosing vifwport
     *                   to fill tif ifigit of bn fndlosing vifwport
     *                   to fill tif ifigit of bn fndlosing vifwport
     */
     */
     */
     */
     */
    publid void sftFillsVifwportHfigit(boolfbn fillsVifwportHfigit) {
    publid void sftFillsVifwportHfigit(boolfbn fillsVifwportHfigit) {
    publid void sftFillsVifwportHfigit(boolfbn fillsVifwportHfigit) {
    publid void sftFillsVifwportHfigit(boolfbn fillsVifwportHfigit) {
    publid void sftFillsVifwportHfigit(boolfbn fillsVifwportHfigit) {
        boolfbn old = tiis.fillsVifwportHfigit;
        boolfbn old = tiis.fillsVifwportHfigit;
        boolfbn old = tiis.fillsVifwportHfigit;
        boolfbn old = tiis.fillsVifwportHfigit;
        boolfbn old = tiis.fillsVifwportHfigit;
        tiis.fillsVifwportHfigit = fillsVifwportHfigit;
        tiis.fillsVifwportHfigit = fillsVifwportHfigit;
        tiis.fillsVifwportHfigit = fillsVifwportHfigit;
        tiis.fillsVifwportHfigit = fillsVifwportHfigit;
        tiis.fillsVifwportHfigit = fillsVifwportHfigit;
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        rfsizfAndRfpbint();
        firfPropfrtyCibngf("fillsVifwportHfigit", old, fillsVifwportHfigit);
        firfPropfrtyCibngf("fillsVifwportHfigit", old, fillsVifwportHfigit);
        firfPropfrtyCibngf("fillsVifwportHfigit", old, fillsVifwportHfigit);
        firfPropfrtyCibngf("fillsVifwportHfigit", old, fillsVifwportHfigit);
        firfPropfrtyCibngf("fillsVifwportHfigit", old, fillsVifwportHfigit);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Rfturns wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Rfturns wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Rfturns wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * Rfturns wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * to fill tif ifigit of bn fndlosing vifwport.
     * to fill tif ifigit of bn fndlosing vifwport.
     * to fill tif ifigit of bn fndlosing vifwport.
     * to fill tif ifigit of bn fndlosing vifwport.
     * to fill tif ifigit of bn fndlosing vifwport.
     *
     *
     *
     *
     *
     * @rfturn wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * @rfturn wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * @rfturn wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * @rfturn wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     * @rfturn wiftifr or not tiis tbblf is blwbys mbdf lbrgf fnougi
     *         to fill tif ifigit of bn fndlosing vifwport
     *         to fill tif ifigit of bn fndlosing vifwport
     *         to fill tif ifigit of bn fndlosing vifwport
     *         to fill tif ifigit of bn fndlosing vifwport
     *         to fill tif ifigit of bn fndlosing vifwport
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sff #sftFillsVifwportHfigit
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid boolfbn gftFillsVifwportHfigit() {
    publid boolfbn gftFillsVifwportHfigit() {
    publid boolfbn gftFillsVifwportHfigit() {
    publid boolfbn gftFillsVifwportHfigit() {
    publid boolfbn gftFillsVifwportHfigit() {
        rfturn fillsVifwportHfigit;
        rfturn fillsVifwportHfigit;
        rfturn fillsVifwportHfigit;
        rfturn fillsVifwportHfigit;
        rfturn fillsVifwportHfigit;
    }
    }
    }
    }
    }





//
//
//
//
//
// Protfdtfd Mftiods
// Protfdtfd Mftiods
// Protfdtfd Mftiods
// Protfdtfd Mftiods
// Protfdtfd Mftiods
//
//
//
//
//





    protfdtfd boolfbn prodfssKfyBinding(KfyStrokf ks, KfyEvfnt f,
    protfdtfd boolfbn prodfssKfyBinding(KfyStrokf ks, KfyEvfnt f,
    protfdtfd boolfbn prodfssKfyBinding(KfyStrokf ks, KfyEvfnt f,
    protfdtfd boolfbn prodfssKfyBinding(KfyStrokf ks, KfyEvfnt f,
    protfdtfd boolfbn prodfssKfyBinding(KfyStrokf ks, KfyEvfnt f,
                                        int dondition, boolfbn prfssfd) {
                                        int dondition, boolfbn prfssfd) {
                                        int dondition, boolfbn prfssfd) {
                                        int dondition, boolfbn prfssfd) {
                                        int dondition, boolfbn prfssfd) {
        boolfbn rftVbluf = supfr.prodfssKfyBinding(ks, f, dondition, prfssfd);
        boolfbn rftVbluf = supfr.prodfssKfyBinding(ks, f, dondition, prfssfd);
        boolfbn rftVbluf = supfr.prodfssKfyBinding(ks, f, dondition, prfssfd);
        boolfbn rftVbluf = supfr.prodfssKfyBinding(ks, f, dondition, prfssfd);
        boolfbn rftVbluf = supfr.prodfssKfyBinding(ks, f, dondition, prfssfd);





        // Stbrt fditing wifn b kfy is typfd. UI dlbssfs dbn disbblf tiis bfibvior
        // Stbrt fditing wifn b kfy is typfd. UI dlbssfs dbn disbblf tiis bfibvior
        // Stbrt fditing wifn b kfy is typfd. UI dlbssfs dbn disbblf tiis bfibvior
        // Stbrt fditing wifn b kfy is typfd. UI dlbssfs dbn disbblf tiis bfibvior
        // Stbrt fditing wifn b kfy is typfd. UI dlbssfs dbn disbblf tiis bfibvior
        // by sftting tif dlifnt propfrty JTbblf.butoStbrtsEdit to Boolfbn.FALSE.
        // by sftting tif dlifnt propfrty JTbblf.butoStbrtsEdit to Boolfbn.FALSE.
        // by sftting tif dlifnt propfrty JTbblf.butoStbrtsEdit to Boolfbn.FALSE.
        // by sftting tif dlifnt propfrty JTbblf.butoStbrtsEdit to Boolfbn.FALSE.
        // by sftting tif dlifnt propfrty JTbblf.butoStbrtsEdit to Boolfbn.FALSE.
        if (!rftVbluf && dondition == WHEN_ANCESTOR_OF_FOCUSED_COMPONENT &&
        if (!rftVbluf && dondition == WHEN_ANCESTOR_OF_FOCUSED_COMPONENT &&
        if (!rftVbluf && dondition == WHEN_ANCESTOR_OF_FOCUSED_COMPONENT &&
        if (!rftVbluf && dondition == WHEN_ANCESTOR_OF_FOCUSED_COMPONENT &&
        if (!rftVbluf && dondition == WHEN_ANCESTOR_OF_FOCUSED_COMPONENT &&
            isFodusOwnfr() &&
            isFodusOwnfr() &&
            isFodusOwnfr() &&
            isFodusOwnfr() &&
            isFodusOwnfr() &&
            !Boolfbn.FALSE.fqubls(gftClifntPropfrty("JTbblf.butoStbrtsEdit"))) {
            !Boolfbn.FALSE.fqubls(gftClifntPropfrty("JTbblf.butoStbrtsEdit"))) {
            !Boolfbn.FALSE.fqubls(gftClifntPropfrty("JTbblf.butoStbrtsEdit"))) {
            !Boolfbn.FALSE.fqubls(gftClifntPropfrty("JTbblf.butoStbrtsEdit"))) {
            !Boolfbn.FALSE.fqubls(gftClifntPropfrty("JTbblf.butoStbrtsEdit"))) {
            // Wf do not ibvf b binding for tif fvfnt.
            // Wf do not ibvf b binding for tif fvfnt.
            // Wf do not ibvf b binding for tif fvfnt.
            // Wf do not ibvf b binding for tif fvfnt.
            // Wf do not ibvf b binding for tif fvfnt.
            Componfnt fditorComponfnt = gftEditorComponfnt();
            Componfnt fditorComponfnt = gftEditorComponfnt();
            Componfnt fditorComponfnt = gftEditorComponfnt();
            Componfnt fditorComponfnt = gftEditorComponfnt();
            Componfnt fditorComponfnt = gftEditorComponfnt();
            if (fditorComponfnt == null) {
            if (fditorComponfnt == null) {
            if (fditorComponfnt == null) {
            if (fditorComponfnt == null) {
            if (fditorComponfnt == null) {
                // Only bttfmpt to instbll tif fditor on b KEY_PRESSED,
                // Only bttfmpt to instbll tif fditor on b KEY_PRESSED,
                // Only bttfmpt to instbll tif fditor on b KEY_PRESSED,
                // Only bttfmpt to instbll tif fditor on b KEY_PRESSED,
                // Only bttfmpt to instbll tif fditor on b KEY_PRESSED,
                if (f == null || f.gftID() != KfyEvfnt.KEY_PRESSED) {
                if (f == null || f.gftID() != KfyEvfnt.KEY_PRESSED) {
                if (f == null || f.gftID() != KfyEvfnt.KEY_PRESSED) {
                if (f == null || f.gftID() != KfyEvfnt.KEY_PRESSED) {
                if (f == null || f.gftID() != KfyEvfnt.KEY_PRESSED) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
                // Don't stbrt wifn just b modififr is prfssfd
                // Don't stbrt wifn just b modififr is prfssfd
                // Don't stbrt wifn just b modififr is prfssfd
                // Don't stbrt wifn just b modififr is prfssfd
                // Don't stbrt wifn just b modififr is prfssfd
                int dodf = f.gftKfyCodf();
                int dodf = f.gftKfyCodf();
                int dodf = f.gftKfyCodf();
                int dodf = f.gftKfyCodf();
                int dodf = f.gftKfyCodf();
                if (dodf == KfyEvfnt.VK_SHIFT || dodf == KfyEvfnt.VK_CONTROL ||
                if (dodf == KfyEvfnt.VK_SHIFT || dodf == KfyEvfnt.VK_CONTROL ||
                if (dodf == KfyEvfnt.VK_SHIFT || dodf == KfyEvfnt.VK_CONTROL ||
                if (dodf == KfyEvfnt.VK_SHIFT || dodf == KfyEvfnt.VK_CONTROL ||
                if (dodf == KfyEvfnt.VK_SHIFT || dodf == KfyEvfnt.VK_CONTROL ||
                    dodf == KfyEvfnt.VK_ALT) {
                    dodf == KfyEvfnt.VK_ALT) {
                    dodf == KfyEvfnt.VK_ALT) {
                    dodf == KfyEvfnt.VK_ALT) {
                    dodf == KfyEvfnt.VK_ALT) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
                // Try to instbll tif fditor
                // Try to instbll tif fditor
                // Try to instbll tif fditor
                // Try to instbll tif fditor
                // Try to instbll tif fditor
                int lfbdRow = gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                int lfbdRow = gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                int lfbdRow = gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                int lfbdRow = gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                int lfbdRow = gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                int lfbdColumn = gftColumnModfl().gftSflfdtionModfl().
                int lfbdColumn = gftColumnModfl().gftSflfdtionModfl().
                int lfbdColumn = gftColumnModfl().gftSflfdtionModfl().
                int lfbdColumn = gftColumnModfl().gftSflfdtionModfl().
                int lfbdColumn = gftColumnModfl().gftSflfdtionModfl().
                                   gftLfbdSflfdtionIndfx();
                                   gftLfbdSflfdtionIndfx();
                                   gftLfbdSflfdtionIndfx();
                                   gftLfbdSflfdtionIndfx();
                                   gftLfbdSflfdtionIndfx();
                if (lfbdRow != -1 && lfbdColumn != -1 && !isEditing()) {
                if (lfbdRow != -1 && lfbdColumn != -1 && !isEditing()) {
                if (lfbdRow != -1 && lfbdColumn != -1 && !isEditing()) {
                if (lfbdRow != -1 && lfbdColumn != -1 && !isEditing()) {
                if (lfbdRow != -1 && lfbdColumn != -1 && !isEditing()) {
                    if (!fditCfllAt(lfbdRow, lfbdColumn, f)) {
                    if (!fditCfllAt(lfbdRow, lfbdColumn, f)) {
                    if (!fditCfllAt(lfbdRow, lfbdColumn, f)) {
                    if (!fditCfllAt(lfbdRow, lfbdColumn, f)) {
                    if (!fditCfllAt(lfbdRow, lfbdColumn, f)) {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                fditorComponfnt = gftEditorComponfnt();
                fditorComponfnt = gftEditorComponfnt();
                fditorComponfnt = gftEditorComponfnt();
                fditorComponfnt = gftEditorComponfnt();
                fditorComponfnt = gftEditorComponfnt();
                if (fditorComponfnt == null) {
                if (fditorComponfnt == null) {
                if (fditorComponfnt == null) {
                if (fditorComponfnt == null) {
                if (fditorComponfnt == null) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            // If tif fditorComponfnt is b JComponfnt, pbss tif fvfnt to it.
            // If tif fditorComponfnt is b JComponfnt, pbss tif fvfnt to it.
            // If tif fditorComponfnt is b JComponfnt, pbss tif fvfnt to it.
            // If tif fditorComponfnt is b JComponfnt, pbss tif fvfnt to it.
            // If tif fditorComponfnt is b JComponfnt, pbss tif fvfnt to it.
            if (fditorComponfnt instbndfof JComponfnt) {
            if (fditorComponfnt instbndfof JComponfnt) {
            if (fditorComponfnt instbndfof JComponfnt) {
            if (fditorComponfnt instbndfof JComponfnt) {
            if (fditorComponfnt instbndfof JComponfnt) {
                rftVbluf = ((JComponfnt)fditorComponfnt).prodfssKfyBinding
                rftVbluf = ((JComponfnt)fditorComponfnt).prodfssKfyBinding
                rftVbluf = ((JComponfnt)fditorComponfnt).prodfssKfyBinding
                rftVbluf = ((JComponfnt)fditorComponfnt).prodfssKfyBinding
                rftVbluf = ((JComponfnt)fditorComponfnt).prodfssKfyBinding
                                        (ks, f, WHEN_FOCUSED, prfssfd);
                                        (ks, f, WHEN_FOCUSED, prfssfd);
                                        (ks, f, WHEN_FOCUSED, prfssfd);
                                        (ks, f, WHEN_FOCUSED, prfssfd);
                                        (ks, f, WHEN_FOCUSED, prfssfd);
                // If wf ibvf stbrtfd bn fditor bs b rfsult of tif usfr
                // If wf ibvf stbrtfd bn fditor bs b rfsult of tif usfr
                // If wf ibvf stbrtfd bn fditor bs b rfsult of tif usfr
                // If wf ibvf stbrtfd bn fditor bs b rfsult of tif usfr
                // If wf ibvf stbrtfd bn fditor bs b rfsult of tif usfr
                // prfssing b kfy bnd tif surrfndfrsFodusOnKfystrokf propfrty
                // prfssing b kfy bnd tif surrfndfrsFodusOnKfystrokf propfrty
                // prfssing b kfy bnd tif surrfndfrsFodusOnKfystrokf propfrty
                // prfssing b kfy bnd tif surrfndfrsFodusOnKfystrokf propfrty
                // prfssing b kfy bnd tif surrfndfrsFodusOnKfystrokf propfrty
                // is truf, givf tif fodus to tif nfw fditor.
                // is truf, givf tif fodus to tif nfw fditor.
                // is truf, givf tif fodus to tif nfw fditor.
                // is truf, givf tif fodus to tif nfw fditor.
                // is truf, givf tif fodus to tif nfw fditor.
                if (gftSurrfndfrsFodusOnKfystrokf()) {
                if (gftSurrfndfrsFodusOnKfystrokf()) {
                if (gftSurrfndfrsFodusOnKfystrokf()) {
                if (gftSurrfndfrsFodusOnKfystrokf()) {
                if (gftSurrfndfrsFodusOnKfystrokf()) {
                    fditorComponfnt.rfqufstFodus();
                    fditorComponfnt.rfqufstFodus();
                    fditorComponfnt.rfqufstFodus();
                    fditorComponfnt.rfqufstFodus();
                    fditorComponfnt.rfqufstFodus();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn rftVbluf;
        rfturn rftVbluf;
        rfturn rftVbluf;
        rfturn rftVbluf;
        rfturn rftVbluf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Crfbtfs dffbult dfll rfndfrfrs for objfdts, numbfrs, doublfs, dbtfs,
     * Crfbtfs dffbult dfll rfndfrfrs for objfdts, numbfrs, doublfs, dbtfs,
     * Crfbtfs dffbult dfll rfndfrfrs for objfdts, numbfrs, doublfs, dbtfs,
     * Crfbtfs dffbult dfll rfndfrfrs for objfdts, numbfrs, doublfs, dbtfs,
     * Crfbtfs dffbult dfll rfndfrfrs for objfdts, numbfrs, doublfs, dbtfs,
     * boolfbns, bnd idons.
     * boolfbns, bnd idons.
     * boolfbns, bnd idons.
     * boolfbns, bnd idons.
     * boolfbns, bnd idons.
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     *
     *
     *
     *
     *
     */
     */
     */
     */
     */
    protfdtfd void drfbtfDffbultRfndfrfrs() {
    protfdtfd void drfbtfDffbultRfndfrfrs() {
    protfdtfd void drfbtfDffbultRfndfrfrs() {
    protfdtfd void drfbtfDffbultRfndfrfrs() {
    protfdtfd void drfbtfDffbultRfndfrfrs() {
        dffbultRfndfrfrsByColumnClbss = nfw UIDffbults(8, 0.75f);
        dffbultRfndfrfrsByColumnClbss = nfw UIDffbults(8, 0.75f);
        dffbultRfndfrfrsByColumnClbss = nfw UIDffbults(8, 0.75f);
        dffbultRfndfrfrsByColumnClbss = nfw UIDffbults(8, 0.75f);
        dffbultRfndfrfrsByColumnClbss = nfw UIDffbults(8, 0.75f);





        // Objfdts
        // Objfdts
        // Objfdts
        // Objfdts
        // Objfdts
        dffbultRfndfrfrsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw DffbultTbblfCfllRfndfrfr.UIRfsourdf());
                t -> nfw DffbultTbblfCfllRfndfrfr.UIRfsourdf());
                t -> nfw DffbultTbblfCfllRfndfrfr.UIRfsourdf());
                t -> nfw DffbultTbblfCfllRfndfrfr.UIRfsourdf());
                t -> nfw DffbultTbblfCfllRfndfrfr.UIRfsourdf());





        // Numbfrs
        // Numbfrs
        // Numbfrs
        // Numbfrs
        // Numbfrs
        dffbultRfndfrfrsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw NumbfrRfndfrfr());
                t -> nfw NumbfrRfndfrfr());
                t -> nfw NumbfrRfndfrfr());
                t -> nfw NumbfrRfndfrfr());
                t -> nfw NumbfrRfndfrfr());





        // Doublfs bnd Flobts
        // Doublfs bnd Flobts
        // Doublfs bnd Flobts
        // Doublfs bnd Flobts
        // Doublfs bnd Flobts
        dffbultRfndfrfrsByColumnClbss.put(Flobt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Flobt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Flobt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Flobt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Flobt.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
        dffbultRfndfrfrsByColumnClbss.put(Doublf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Doublf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Doublf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Doublf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Doublf.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());
                t -> nfw DoublfRfndfrfr());





        // Dbtfs
        // Dbtfs
        // Dbtfs
        // Dbtfs
        // Dbtfs
        dffbultRfndfrfrsByColumnClbss.put(Dbtf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Dbtf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Dbtf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Dbtf.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Dbtf.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw DbtfRfndfrfr());
                t -> nfw DbtfRfndfrfr());
                t -> nfw DbtfRfndfrfr());
                t -> nfw DbtfRfndfrfr());
                t -> nfw DbtfRfndfrfr());





        // Idons bnd ImbgfIdons
        // Idons bnd ImbgfIdons
        // Idons bnd ImbgfIdons
        // Idons bnd ImbgfIdons
        // Idons bnd ImbgfIdons
        dffbultRfndfrfrsByColumnClbss.put(Idon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Idon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Idon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Idon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Idon.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
        dffbultRfndfrfrsByColumnClbss.put(ImbgfIdon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(ImbgfIdon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(ImbgfIdon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(ImbgfIdon.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(ImbgfIdon.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());
                t -> nfw IdonRfndfrfr());





        // Boolfbns
        // Boolfbns
        // Boolfbns
        // Boolfbns
        // Boolfbns
        dffbultRfndfrfrsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultRfndfrfrsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw BoolfbnRfndfrfr());
                t -> nfw BoolfbnRfndfrfr());
                t -> nfw BoolfbnRfndfrfr());
                t -> nfw BoolfbnRfndfrfr());
                t -> nfw BoolfbnRfndfrfr());
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dffbult Rfndfrfrs
     * Dffbult Rfndfrfrs
     * Dffbult Rfndfrfrs
     * Dffbult Rfndfrfrs
     * Dffbult Rfndfrfrs
     **/
     **/
     **/
     **/
     **/
    stbtid dlbss NumbfrRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss NumbfrRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss NumbfrRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss NumbfrRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss NumbfrRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
        publid NumbfrRfndfrfr() {
        publid NumbfrRfndfrfr() {
        publid NumbfrRfndfrfr() {
        publid NumbfrRfndfrfr() {
        publid NumbfrRfndfrfr() {
            supfr();
            supfr();
            supfr();
            supfr();
            supfr();
            sftHorizontblAlignmfnt(JLbbfl.RIGHT);
            sftHorizontblAlignmfnt(JLbbfl.RIGHT);
            sftHorizontblAlignmfnt(JLbbfl.RIGHT);
            sftHorizontblAlignmfnt(JLbbfl.RIGHT);
            sftHorizontblAlignmfnt(JLbbfl.RIGHT);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    stbtid dlbss DoublfRfndfrfr fxtfnds NumbfrRfndfrfr {
    stbtid dlbss DoublfRfndfrfr fxtfnds NumbfrRfndfrfr {
    stbtid dlbss DoublfRfndfrfr fxtfnds NumbfrRfndfrfr {
    stbtid dlbss DoublfRfndfrfr fxtfnds NumbfrRfndfrfr {
    stbtid dlbss DoublfRfndfrfr fxtfnds NumbfrRfndfrfr {
        NumbfrFormbt formbttfr;
        NumbfrFormbt formbttfr;
        NumbfrFormbt formbttfr;
        NumbfrFormbt formbttfr;
        NumbfrFormbt formbttfr;
        publid DoublfRfndfrfr() { supfr(); }
        publid DoublfRfndfrfr() { supfr(); }
        publid DoublfRfndfrfr() { supfr(); }
        publid DoublfRfndfrfr() { supfr(); }
        publid DoublfRfndfrfr() { supfr(); }





        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
                formbttfr = NumbfrFormbt.gftInstbndf();
                formbttfr = NumbfrFormbt.gftInstbndf();
                formbttfr = NumbfrFormbt.gftInstbndf();
                formbttfr = NumbfrFormbt.gftInstbndf();
                formbttfr = NumbfrFormbt.gftInstbndf();
            }
            }
            }
            }
            }
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    stbtid dlbss DbtfRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss DbtfRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss DbtfRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss DbtfRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss DbtfRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
        DbtfFormbt formbttfr;
        DbtfFormbt formbttfr;
        DbtfFormbt formbttfr;
        DbtfFormbt formbttfr;
        DbtfFormbt formbttfr;
        publid DbtfRfndfrfr() { supfr(); }
        publid DbtfRfndfrfr() { supfr(); }
        publid DbtfRfndfrfr() { supfr(); }
        publid DbtfRfndfrfr() { supfr(); }
        publid DbtfRfndfrfr() { supfr(); }





        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
        publid void sftVbluf(Objfdt vbluf) {
            if (formbttfr==null) {
            if (formbttfr==null) {
            if (formbttfr==null) {
            if (formbttfr==null) {
            if (formbttfr==null) {
                formbttfr = DbtfFormbt.gftDbtfInstbndf();
                formbttfr = DbtfFormbt.gftDbtfInstbndf();
                formbttfr = DbtfFormbt.gftDbtfInstbndf();
                formbttfr = DbtfFormbt.gftDbtfInstbndf();
                formbttfr = DbtfFormbt.gftDbtfInstbndf();
            }
            }
            }
            }
            }
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
            sftTfxt((vbluf == null) ? "" : formbttfr.formbt(vbluf));
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    stbtid dlbss IdonRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss IdonRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss IdonRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss IdonRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
    stbtid dlbss IdonRfndfrfr fxtfnds DffbultTbblfCfllRfndfrfr.UIRfsourdf {
        publid IdonRfndfrfr() {
        publid IdonRfndfrfr() {
        publid IdonRfndfrfr() {
        publid IdonRfndfrfr() {
        publid IdonRfndfrfr() {
            supfr();
            supfr();
            supfr();
            supfr();
            supfr();
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
        }
        }
        }
        }
        }
        publid void sftVbluf(Objfdt vbluf) { sftIdon((vbluf instbndfof Idon) ? (Idon)vbluf : null); }
        publid void sftVbluf(Objfdt vbluf) { sftIdon((vbluf instbndfof Idon) ? (Idon)vbluf : null); }
        publid void sftVbluf(Objfdt vbluf) { sftIdon((vbluf instbndfof Idon) ? (Idon)vbluf : null); }
        publid void sftVbluf(Objfdt vbluf) { sftIdon((vbluf instbndfof Idon) ? (Idon)vbluf : null); }
        publid void sftVbluf(Objfdt vbluf) { sftIdon((vbluf instbndfof Idon) ? (Idon)vbluf : null); }
    }
    }
    }
    }
    }










    stbtid dlbss BoolfbnRfndfrfr fxtfnds JCifdkBox implfmfnts TbblfCfllRfndfrfr, UIRfsourdf
    stbtid dlbss BoolfbnRfndfrfr fxtfnds JCifdkBox implfmfnts TbblfCfllRfndfrfr, UIRfsourdf
    stbtid dlbss BoolfbnRfndfrfr fxtfnds JCifdkBox implfmfnts TbblfCfllRfndfrfr, UIRfsourdf
    stbtid dlbss BoolfbnRfndfrfr fxtfnds JCifdkBox implfmfnts TbblfCfllRfndfrfr, UIRfsourdf
    stbtid dlbss BoolfbnRfndfrfr fxtfnds JCifdkBox implfmfnts TbblfCfllRfndfrfr, UIRfsourdf
    {
    {
    {
    {
    {
        privbtf stbtid finbl Bordfr noFodusBordfr = nfw EmptyBordfr(1, 1, 1, 1);
        privbtf stbtid finbl Bordfr noFodusBordfr = nfw EmptyBordfr(1, 1, 1, 1);
        privbtf stbtid finbl Bordfr noFodusBordfr = nfw EmptyBordfr(1, 1, 1, 1);
        privbtf stbtid finbl Bordfr noFodusBordfr = nfw EmptyBordfr(1, 1, 1, 1);
        privbtf stbtid finbl Bordfr noFodusBordfr = nfw EmptyBordfr(1, 1, 1, 1);





        publid BoolfbnRfndfrfr() {
        publid BoolfbnRfndfrfr() {
        publid BoolfbnRfndfrfr() {
        publid BoolfbnRfndfrfr() {
        publid BoolfbnRfndfrfr() {
            supfr();
            supfr();
            supfr();
            supfr();
            supfr();
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftHorizontblAlignmfnt(JLbbfl.CENTER);
            sftBordfrPbintfd(truf);
            sftBordfrPbintfd(truf);
            sftBordfrPbintfd(truf);
            sftBordfrPbintfd(truf);
            sftBordfrPbintfd(truf);
        }
        }
        }
        }
        }





        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
                                                       boolfbn isSflfdtfd, boolfbn ibsFodus, int row, int dolumn) {
                                                       boolfbn isSflfdtfd, boolfbn ibsFodus, int row, int dolumn) {
                                                       boolfbn isSflfdtfd, boolfbn ibsFodus, int row, int dolumn) {
                                                       boolfbn isSflfdtfd, boolfbn ibsFodus, int row, int dolumn) {
                                                       boolfbn isSflfdtfd, boolfbn ibsFodus, int row, int dolumn) {
            if (isSflfdtfd) {
            if (isSflfdtfd) {
            if (isSflfdtfd) {
            if (isSflfdtfd) {
            if (isSflfdtfd) {
                sftForfground(tbblf.gftSflfdtionForfground());
                sftForfground(tbblf.gftSflfdtionForfground());
                sftForfground(tbblf.gftSflfdtionForfground());
                sftForfground(tbblf.gftSflfdtionForfground());
                sftForfground(tbblf.gftSflfdtionForfground());
                supfr.sftBbdkground(tbblf.gftSflfdtionBbdkground());
                supfr.sftBbdkground(tbblf.gftSflfdtionBbdkground());
                supfr.sftBbdkground(tbblf.gftSflfdtionBbdkground());
                supfr.sftBbdkground(tbblf.gftSflfdtionBbdkground());
                supfr.sftBbdkground(tbblf.gftSflfdtionBbdkground());
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                sftForfground(tbblf.gftForfground());
                sftForfground(tbblf.gftForfground());
                sftForfground(tbblf.gftForfground());
                sftForfground(tbblf.gftForfground());
                sftForfground(tbblf.gftForfground());
                sftBbdkground(tbblf.gftBbdkground());
                sftBbdkground(tbblf.gftBbdkground());
                sftBbdkground(tbblf.gftBbdkground());
                sftBbdkground(tbblf.gftBbdkground());
                sftBbdkground(tbblf.gftBbdkground());
            }
            }
            }
            }
            }
            sftSflfdtfd((vbluf != null && ((Boolfbn)vbluf).boolfbnVbluf()));
            sftSflfdtfd((vbluf != null && ((Boolfbn)vbluf).boolfbnVbluf()));
            sftSflfdtfd((vbluf != null && ((Boolfbn)vbluf).boolfbnVbluf()));
            sftSflfdtfd((vbluf != null && ((Boolfbn)vbluf).boolfbnVbluf()));
            sftSflfdtfd((vbluf != null && ((Boolfbn)vbluf).boolfbnVbluf()));





            if (ibsFodus) {
            if (ibsFodus) {
            if (ibsFodus) {
            if (ibsFodus) {
            if (ibsFodus) {
                sftBordfr(UIMbnbgfr.gftBordfr("Tbblf.fodusCfllHigiligitBordfr"));
                sftBordfr(UIMbnbgfr.gftBordfr("Tbblf.fodusCfllHigiligitBordfr"));
                sftBordfr(UIMbnbgfr.gftBordfr("Tbblf.fodusCfllHigiligitBordfr"));
                sftBordfr(UIMbnbgfr.gftBordfr("Tbblf.fodusCfllHigiligitBordfr"));
                sftBordfr(UIMbnbgfr.gftBordfr("Tbblf.fodusCfllHigiligitBordfr"));
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                sftBordfr(noFodusBordfr);
                sftBordfr(noFodusBordfr);
                sftBordfr(noFodusBordfr);
                sftBordfr(noFodusBordfr);
                sftBordfr(noFodusBordfr);
            }
            }
            }
            }
            }





            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Crfbtfs dffbult dfll fditors for objfdts, numbfrs, bnd boolfbn vblufs.
     * Crfbtfs dffbult dfll fditors for objfdts, numbfrs, bnd boolfbn vblufs.
     * Crfbtfs dffbult dfll fditors for objfdts, numbfrs, bnd boolfbn vblufs.
     * Crfbtfs dffbult dfll fditors for objfdts, numbfrs, bnd boolfbn vblufs.
     * Crfbtfs dffbult dfll fditors for objfdts, numbfrs, bnd boolfbn vblufs.
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     */
     */
     */
     */
     */
    protfdtfd void drfbtfDffbultEditors() {
    protfdtfd void drfbtfDffbultEditors() {
    protfdtfd void drfbtfDffbultEditors() {
    protfdtfd void drfbtfDffbultEditors() {
    protfdtfd void drfbtfDffbultEditors() {
        dffbultEditorsByColumnClbss = nfw UIDffbults(3, 0.75f);
        dffbultEditorsByColumnClbss = nfw UIDffbults(3, 0.75f);
        dffbultEditorsByColumnClbss = nfw UIDffbults(3, 0.75f);
        dffbultEditorsByColumnClbss = nfw UIDffbults(3, 0.75f);
        dffbultEditorsByColumnClbss = nfw UIDffbults(3, 0.75f);





        // Objfdts
        // Objfdts
        // Objfdts
        // Objfdts
        // Objfdts
        dffbultEditorsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Objfdt.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw GfnfridEditor());
                t -> nfw GfnfridEditor());
                t -> nfw GfnfridEditor());
                t -> nfw GfnfridEditor());
                t -> nfw GfnfridEditor());





        // Numbfrs
        // Numbfrs
        // Numbfrs
        // Numbfrs
        // Numbfrs
        dffbultEditorsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Numbfr.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw NumbfrEditor());
                t -> nfw NumbfrEditor());
                t -> nfw NumbfrEditor());
                t -> nfw NumbfrEditor());
                t -> nfw NumbfrEditor());





        // Boolfbns
        // Boolfbns
        // Boolfbns
        // Boolfbns
        // Boolfbns
        dffbultEditorsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
        dffbultEditorsByColumnClbss.put(Boolfbn.dlbss, (UIDffbults.LbzyVbluf)
                t -> nfw BoolfbnEditor());
                t -> nfw BoolfbnEditor());
                t -> nfw BoolfbnEditor());
                t -> nfw BoolfbnEditor());
                t -> nfw BoolfbnEditor());
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dffbult Editors
     * Dffbult Editors
     * Dffbult Editors
     * Dffbult Editors
     * Dffbult Editors
     */
     */
     */
     */
     */
    stbtid dlbss GfnfridEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss GfnfridEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss GfnfridEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss GfnfridEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss GfnfridEditor fxtfnds DffbultCfllEditor {





        Clbss<?>[] brgTypfs = nfw Clbss<?>[]{String.dlbss};
        Clbss<?>[] brgTypfs = nfw Clbss<?>[]{String.dlbss};
        Clbss<?>[] brgTypfs = nfw Clbss<?>[]{String.dlbss};
        Clbss<?>[] brgTypfs = nfw Clbss<?>[]{String.dlbss};
        Clbss<?>[] brgTypfs = nfw Clbss<?>[]{String.dlbss};
        jbvb.lbng.rfflfdt.Construdtor<?> donstrudtor;
        jbvb.lbng.rfflfdt.Construdtor<?> donstrudtor;
        jbvb.lbng.rfflfdt.Construdtor<?> donstrudtor;
        jbvb.lbng.rfflfdt.Construdtor<?> donstrudtor;
        jbvb.lbng.rfflfdt.Construdtor<?> donstrudtor;
        Objfdt vbluf;
        Objfdt vbluf;
        Objfdt vbluf;
        Objfdt vbluf;
        Objfdt vbluf;





        publid GfnfridEditor() {
        publid GfnfridEditor() {
        publid GfnfridEditor() {
        publid GfnfridEditor() {
        publid GfnfridEditor() {
            supfr(nfw JTfxtFifld());
            supfr(nfw JTfxtFifld());
            supfr(nfw JTfxtFifld());
            supfr(nfw JTfxtFifld());
            supfr(nfw JTfxtFifld());
            gftComponfnt().sftNbmf("Tbblf.fditor");
            gftComponfnt().sftNbmf("Tbblf.fditor");
            gftComponfnt().sftNbmf("Tbblf.fditor");
            gftComponfnt().sftNbmf("Tbblf.fditor");
            gftComponfnt().sftNbmf("Tbblf.fditor");
        }
        }
        }
        }
        }





        publid boolfbn stopCfllEditing() {
        publid boolfbn stopCfllEditing() {
        publid boolfbn stopCfllEditing() {
        publid boolfbn stopCfllEditing() {
        publid boolfbn stopCfllEditing() {
            String s = (String)supfr.gftCfllEditorVbluf();
            String s = (String)supfr.gftCfllEditorVbluf();
            String s = (String)supfr.gftCfllEditorVbluf();
            String s = (String)supfr.gftCfllEditorVbluf();
            String s = (String)supfr.gftCfllEditorVbluf();
            // Hfrf wf brf dfbling witi tif dbsf wifrf b usfr
            // Hfrf wf brf dfbling witi tif dbsf wifrf b usfr
            // Hfrf wf brf dfbling witi tif dbsf wifrf b usfr
            // Hfrf wf brf dfbling witi tif dbsf wifrf b usfr
            // Hfrf wf brf dfbling witi tif dbsf wifrf b usfr
            // ibs dflftfd tif string vbluf in b dfll, possibly
            // ibs dflftfd tif string vbluf in b dfll, possibly
            // ibs dflftfd tif string vbluf in b dfll, possibly
            // ibs dflftfd tif string vbluf in b dfll, possibly
            // ibs dflftfd tif string vbluf in b dfll, possibly
            // bftfr b fbilfd vblidbtion. Rfturn null, so tibt
            // bftfr b fbilfd vblidbtion. Rfturn null, so tibt
            // bftfr b fbilfd vblidbtion. Rfturn null, so tibt
            // bftfr b fbilfd vblidbtion. Rfturn null, so tibt
            // bftfr b fbilfd vblidbtion. Rfturn null, so tibt
            // tify ibvf tif option to rfplbdf tif vbluf witi
            // tify ibvf tif option to rfplbdf tif vbluf witi
            // tify ibvf tif option to rfplbdf tif vbluf witi
            // tify ibvf tif option to rfplbdf tif vbluf witi
            // tify ibvf tif option to rfplbdf tif vbluf witi
            // null or usf fsdbpf to rfstorf tif originbl.
            // null or usf fsdbpf to rfstorf tif originbl.
            // null or usf fsdbpf to rfstorf tif originbl.
            // null or usf fsdbpf to rfstorf tif originbl.
            // null or usf fsdbpf to rfstorf tif originbl.
            // For Strings, rfturn "" for bbdkwbrd dompbtibility.
            // For Strings, rfturn "" for bbdkwbrd dompbtibility.
            // For Strings, rfturn "" for bbdkwbrd dompbtibility.
            // For Strings, rfturn "" for bbdkwbrd dompbtibility.
            // For Strings, rfturn "" for bbdkwbrd dompbtibility.
            try {
            try {
            try {
            try {
            try {
                if ("".fqubls(s)) {
                if ("".fqubls(s)) {
                if ("".fqubls(s)) {
                if ("".fqubls(s)) {
                if ("".fqubls(s)) {
                    if (donstrudtor.gftDfdlbringClbss() == String.dlbss) {
                    if (donstrudtor.gftDfdlbringClbss() == String.dlbss) {
                    if (donstrudtor.gftDfdlbringClbss() == String.dlbss) {
                    if (donstrudtor.gftDfdlbringClbss() == String.dlbss) {
                    if (donstrudtor.gftDfdlbringClbss() == String.dlbss) {
                        vbluf = s;
                        vbluf = s;
                        vbluf = s;
                        vbluf = s;
                        vbluf = s;
                    }
                    }
                    }
                    }
                    }
                    rfturn supfr.stopCfllEditing();
                    rfturn supfr.stopCfllEditing();
                    rfturn supfr.stopCfllEditing();
                    rfturn supfr.stopCfllEditing();
                    rfturn supfr.stopCfllEditing();
                }
                }
                }
                }
                }





                SwingUtilitifs2.difdkAddfss(donstrudtor.gftModififrs());
                SwingUtilitifs2.difdkAddfss(donstrudtor.gftModififrs());
                SwingUtilitifs2.difdkAddfss(donstrudtor.gftModififrs());
                SwingUtilitifs2.difdkAddfss(donstrudtor.gftModififrs());
                SwingUtilitifs2.difdkAddfss(donstrudtor.gftModififrs());
                vbluf = donstrudtor.nfwInstbndf(nfw Objfdt[]{s});
                vbluf = donstrudtor.nfwInstbndf(nfw Objfdt[]{s});
                vbluf = donstrudtor.nfwInstbndf(nfw Objfdt[]{s});
                vbluf = donstrudtor.nfwInstbndf(nfw Objfdt[]{s});
                vbluf = donstrudtor.nfwInstbndf(nfw Objfdt[]{s});
            }
            }
            }
            }
            }
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
                ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.rfd));
                ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.rfd));
                ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.rfd));
                ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.rfd));
                ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.rfd));
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            rfturn supfr.stopCfllEditing();
            rfturn supfr.stopCfllEditing();
            rfturn supfr.stopCfllEditing();
            rfturn supfr.stopCfllEditing();
            rfturn supfr.stopCfllEditing();
        }
        }
        }
        }
        }





        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf, Objfdt vbluf,
        publid Componfnt gftTbblfCfllEditorComponfnt(JTbblf tbblf, Objfdt vbluf,
                                                 boolfbn isSflfdtfd,
                                                 boolfbn isSflfdtfd,
                                                 boolfbn isSflfdtfd,
                                                 boolfbn isSflfdtfd,
                                                 boolfbn isSflfdtfd,
                                                 int row, int dolumn) {
                                                 int row, int dolumn) {
                                                 int row, int dolumn) {
                                                 int row, int dolumn) {
                                                 int row, int dolumn) {
            tiis.vbluf = null;
            tiis.vbluf = null;
            tiis.vbluf = null;
            tiis.vbluf = null;
            tiis.vbluf = null;
            ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.blbdk));
            ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.blbdk));
            ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.blbdk));
            ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.blbdk));
            ((JComponfnt)gftComponfnt()).sftBordfr(nfw LinfBordfr(Color.blbdk));
            try {
            try {
            try {
            try {
            try {
                Clbss<?> typf = tbblf.gftColumnClbss(dolumn);
                Clbss<?> typf = tbblf.gftColumnClbss(dolumn);
                Clbss<?> typf = tbblf.gftColumnClbss(dolumn);
                Clbss<?> typf = tbblf.gftColumnClbss(dolumn);
                Clbss<?> typf = tbblf.gftColumnClbss(dolumn);
                // Sindf our obligbtion is to produdf b vbluf wiidi is
                // Sindf our obligbtion is to produdf b vbluf wiidi is
                // Sindf our obligbtion is to produdf b vbluf wiidi is
                // Sindf our obligbtion is to produdf b vbluf wiidi is
                // Sindf our obligbtion is to produdf b vbluf wiidi is
                // bssignbblf for tif rfquirfd typf it is OK to usf tif
                // bssignbblf for tif rfquirfd typf it is OK to usf tif
                // bssignbblf for tif rfquirfd typf it is OK to usf tif
                // bssignbblf for tif rfquirfd typf it is OK to usf tif
                // bssignbblf for tif rfquirfd typf it is OK to usf tif
                // String donstrudtor for dolumns wiidi brf dfdlbrfd
                // String donstrudtor for dolumns wiidi brf dfdlbrfd
                // String donstrudtor for dolumns wiidi brf dfdlbrfd
                // String donstrudtor for dolumns wiidi brf dfdlbrfd
                // String donstrudtor for dolumns wiidi brf dfdlbrfd
                // to dontbin Objfdts. A String is bn Objfdt.
                // to dontbin Objfdts. A String is bn Objfdt.
                // to dontbin Objfdts. A String is bn Objfdt.
                // to dontbin Objfdts. A String is bn Objfdt.
                // to dontbin Objfdts. A String is bn Objfdt.
                if (typf == Objfdt.dlbss) {
                if (typf == Objfdt.dlbss) {
                if (typf == Objfdt.dlbss) {
                if (typf == Objfdt.dlbss) {
                if (typf == Objfdt.dlbss) {
                    typf = String.dlbss;
                    typf = String.dlbss;
                    typf = String.dlbss;
                    typf = String.dlbss;
                    typf = String.dlbss;
                }
                }
                }
                }
                }
                RfflfdtUtil.difdkPbdkbgfAddfss(typf);
                RfflfdtUtil.difdkPbdkbgfAddfss(typf);
                RfflfdtUtil.difdkPbdkbgfAddfss(typf);
                RfflfdtUtil.difdkPbdkbgfAddfss(typf);
                RfflfdtUtil.difdkPbdkbgfAddfss(typf);
                SwingUtilitifs2.difdkAddfss(typf.gftModififrs());
                SwingUtilitifs2.difdkAddfss(typf.gftModififrs());
                SwingUtilitifs2.difdkAddfss(typf.gftModififrs());
                SwingUtilitifs2.difdkAddfss(typf.gftModififrs());
                SwingUtilitifs2.difdkAddfss(typf.gftModififrs());
                donstrudtor = typf.gftConstrudtor(brgTypfs);
                donstrudtor = typf.gftConstrudtor(brgTypfs);
                donstrudtor = typf.gftConstrudtor(brgTypfs);
                donstrudtor = typf.gftConstrudtor(brgTypfs);
                donstrudtor = typf.gftConstrudtor(brgTypfs);
            }
            }
            }
            }
            }
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
            dbtdi (Exdfption f) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf, vbluf, isSflfdtfd, row, dolumn);
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf, vbluf, isSflfdtfd, row, dolumn);
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf, vbluf, isSflfdtfd, row, dolumn);
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf, vbluf, isSflfdtfd, row, dolumn);
            rfturn supfr.gftTbblfCfllEditorComponfnt(tbblf, vbluf, isSflfdtfd, row, dolumn);
        }
        }
        }
        }
        }





        publid Objfdt gftCfllEditorVbluf() {
        publid Objfdt gftCfllEditorVbluf() {
        publid Objfdt gftCfllEditorVbluf() {
        publid Objfdt gftCfllEditorVbluf() {
        publid Objfdt gftCfllEditorVbluf() {
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    stbtid dlbss NumbfrEditor fxtfnds GfnfridEditor {
    stbtid dlbss NumbfrEditor fxtfnds GfnfridEditor {
    stbtid dlbss NumbfrEditor fxtfnds GfnfridEditor {
    stbtid dlbss NumbfrEditor fxtfnds GfnfridEditor {
    stbtid dlbss NumbfrEditor fxtfnds GfnfridEditor {





        publid NumbfrEditor() {
        publid NumbfrEditor() {
        publid NumbfrEditor() {
        publid NumbfrEditor() {
        publid NumbfrEditor() {
            ((JTfxtFifld)gftComponfnt()).sftHorizontblAlignmfnt(JTfxtFifld.RIGHT);
            ((JTfxtFifld)gftComponfnt()).sftHorizontblAlignmfnt(JTfxtFifld.RIGHT);
            ((JTfxtFifld)gftComponfnt()).sftHorizontblAlignmfnt(JTfxtFifld.RIGHT);
            ((JTfxtFifld)gftComponfnt()).sftHorizontblAlignmfnt(JTfxtFifld.RIGHT);
            ((JTfxtFifld)gftComponfnt()).sftHorizontblAlignmfnt(JTfxtFifld.RIGHT);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    stbtid dlbss BoolfbnEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss BoolfbnEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss BoolfbnEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss BoolfbnEditor fxtfnds DffbultCfllEditor {
    stbtid dlbss BoolfbnEditor fxtfnds DffbultCfllEditor {
        publid BoolfbnEditor() {
        publid BoolfbnEditor() {
        publid BoolfbnEditor() {
        publid BoolfbnEditor() {
        publid BoolfbnEditor() {
            supfr(nfw JCifdkBox());
            supfr(nfw JCifdkBox());
            supfr(nfw JCifdkBox());
            supfr(nfw JCifdkBox());
            supfr(nfw JCifdkBox());
            JCifdkBox difdkBox = (JCifdkBox)gftComponfnt();
            JCifdkBox difdkBox = (JCifdkBox)gftComponfnt();
            JCifdkBox difdkBox = (JCifdkBox)gftComponfnt();
            JCifdkBox difdkBox = (JCifdkBox)gftComponfnt();
            JCifdkBox difdkBox = (JCifdkBox)gftComponfnt();
            difdkBox.sftHorizontblAlignmfnt(JCifdkBox.CENTER);
            difdkBox.sftHorizontblAlignmfnt(JCifdkBox.CENTER);
            difdkBox.sftHorizontblAlignmfnt(JCifdkBox.CENTER);
            difdkBox.sftHorizontblAlignmfnt(JCifdkBox.CENTER);
            difdkBox.sftHorizontblAlignmfnt(JCifdkBox.CENTER);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Initiblizfs tbblf propfrtifs to tifir dffbult vblufs.
     * Initiblizfs tbblf propfrtifs to tifir dffbult vblufs.
     * Initiblizfs tbblf propfrtifs to tifir dffbult vblufs.
     * Initiblizfs tbblf propfrtifs to tifir dffbult vblufs.
     * Initiblizfs tbblf propfrtifs to tifir dffbult vblufs.
     */
     */
     */
     */
     */
    protfdtfd void initiblizfLodblVbrs() {
    protfdtfd void initiblizfLodblVbrs() {
    protfdtfd void initiblizfLodblVbrs() {
    protfdtfd void initiblizfLodblVbrs() {
    protfdtfd void initiblizfLodblVbrs() {
        updbtfSflfdtionOnSort = truf;
        updbtfSflfdtionOnSort = truf;
        updbtfSflfdtionOnSort = truf;
        updbtfSflfdtionOnSort = truf;
        updbtfSflfdtionOnSort = truf;
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();





        sftTbblfHfbdfr(drfbtfDffbultTbblfHfbdfr());
        sftTbblfHfbdfr(drfbtfDffbultTbblfHfbdfr());
        sftTbblfHfbdfr(drfbtfDffbultTbblfHfbdfr());
        sftTbblfHfbdfr(drfbtfDffbultTbblfHfbdfr());
        sftTbblfHfbdfr(drfbtfDffbultTbblfHfbdfr());





        sftSiowGrid(truf);
        sftSiowGrid(truf);
        sftSiowGrid(truf);
        sftSiowGrid(truf);
        sftSiowGrid(truf);
        sftAutoRfsizfModf(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        sftAutoRfsizfModf(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        sftAutoRfsizfModf(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        sftAutoRfsizfModf(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        sftAutoRfsizfModf(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        sftRowHfigit(16);
        sftRowHfigit(16);
        sftRowHfigit(16);
        sftRowHfigit(16);
        sftRowHfigit(16);
        isRowHfigitSft = fblsf;
        isRowHfigitSft = fblsf;
        isRowHfigitSft = fblsf;
        isRowHfigitSft = fblsf;
        isRowHfigitSft = fblsf;
        sftRowMbrgin(1);
        sftRowMbrgin(1);
        sftRowMbrgin(1);
        sftRowMbrgin(1);
        sftRowMbrgin(1);
        sftRowSflfdtionAllowfd(truf);
        sftRowSflfdtionAllowfd(truf);
        sftRowSflfdtionAllowfd(truf);
        sftRowSflfdtionAllowfd(truf);
        sftRowSflfdtionAllowfd(truf);
        sftCfllEditor(null);
        sftCfllEditor(null);
        sftCfllEditor(null);
        sftCfllEditor(null);
        sftCfllEditor(null);
        sftEditingColumn(-1);
        sftEditingColumn(-1);
        sftEditingColumn(-1);
        sftEditingColumn(-1);
        sftEditingColumn(-1);
        sftEditingRow(-1);
        sftEditingRow(-1);
        sftEditingRow(-1);
        sftEditingRow(-1);
        sftEditingRow(-1);
        sftSurrfndfrsFodusOnKfystrokf(fblsf);
        sftSurrfndfrsFodusOnKfystrokf(fblsf);
        sftSurrfndfrsFodusOnKfystrokf(fblsf);
        sftSurrfndfrsFodusOnKfystrokf(fblsf);
        sftSurrfndfrsFodusOnKfystrokf(fblsf);
        sftPrfffrrfdSdrollbblfVifwportSizf(nfw Dimfnsion(450, 400));
        sftPrfffrrfdSdrollbblfVifwportSizf(nfw Dimfnsion(450, 400));
        sftPrfffrrfdSdrollbblfVifwportSizf(nfw Dimfnsion(450, 400));
        sftPrfffrrfdSdrollbblfVifwportSizf(nfw Dimfnsion(450, 400));
        sftPrfffrrfdSdrollbblfVifwportSizf(nfw Dimfnsion(450, 400));





        // I'm rfgistfrfd to do tool tips so wf dbn drbw tips for tif rfndfrfrs
        // I'm rfgistfrfd to do tool tips so wf dbn drbw tips for tif rfndfrfrs
        // I'm rfgistfrfd to do tool tips so wf dbn drbw tips for tif rfndfrfrs
        // I'm rfgistfrfd to do tool tips so wf dbn drbw tips for tif rfndfrfrs
        // I'm rfgistfrfd to do tool tips so wf dbn drbw tips for tif rfndfrfrs
        ToolTipMbnbgfr toolTipMbnbgfr = ToolTipMbnbgfr.sibrfdInstbndf();
        ToolTipMbnbgfr toolTipMbnbgfr = ToolTipMbnbgfr.sibrfdInstbndf();
        ToolTipMbnbgfr toolTipMbnbgfr = ToolTipMbnbgfr.sibrfdInstbndf();
        ToolTipMbnbgfr toolTipMbnbgfr = ToolTipMbnbgfr.sibrfdInstbndf();
        ToolTipMbnbgfr toolTipMbnbgfr = ToolTipMbnbgfr.sibrfdInstbndf();
        toolTipMbnbgfr.rfgistfrComponfnt(tiis);
        toolTipMbnbgfr.rfgistfrComponfnt(tiis);
        toolTipMbnbgfr.rfgistfrComponfnt(tiis);
        toolTipMbnbgfr.rfgistfrComponfnt(tiis);
        toolTipMbnbgfr.rfgistfrComponfnt(tiis);





        sftAutosdrolls(truf);
        sftAutosdrolls(truf);
        sftAutosdrolls(truf);
        sftAutosdrolls(truf);
        sftAutosdrolls(truf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dffbult tbblf modfl objfdt, wiidi is
     * Rfturns tif dffbult tbblf modfl objfdt, wiidi is
     * Rfturns tif dffbult tbblf modfl objfdt, wiidi is
     * Rfturns tif dffbult tbblf modfl objfdt, wiidi is
     * Rfturns tif dffbult tbblf modfl objfdt, wiidi is
     * b <dodf>DffbultTbblfModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * mftiod to rfturn b difffrfnt tbblf modfl objfdt.
     * mftiod to rfturn b difffrfnt tbblf modfl objfdt.
     * mftiod to rfturn b difffrfnt tbblf modfl objfdt.
     * mftiod to rfturn b difffrfnt tbblf modfl objfdt.
     * mftiod to rfturn b difffrfnt tbblf modfl objfdt.
     *
     *
     *
     *
     *
     * @rfturn tif dffbult tbblf modfl objfdt
     * @rfturn tif dffbult tbblf modfl objfdt
     * @rfturn tif dffbult tbblf modfl objfdt
     * @rfturn tif dffbult tbblf modfl objfdt
     * @rfturn tif dffbult tbblf modfl objfdt
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfModfl
     */
     */
     */
     */
     */
    protfdtfd TbblfModfl drfbtfDffbultDbtbModfl() {
    protfdtfd TbblfModfl drfbtfDffbultDbtbModfl() {
    protfdtfd TbblfModfl drfbtfDffbultDbtbModfl() {
    protfdtfd TbblfModfl drfbtfDffbultDbtbModfl() {
    protfdtfd TbblfModfl drfbtfDffbultDbtbModfl() {
        rfturn nfw DffbultTbblfModfl();
        rfturn nfw DffbultTbblfModfl();
        rfturn nfw DffbultTbblfModfl();
        rfturn nfw DffbultTbblfModfl();
        rfturn nfw DffbultTbblfModfl();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dffbult dolumn modfl objfdt, wiidi is
     * Rfturns tif dffbult dolumn modfl objfdt, wiidi is
     * Rfturns tif dffbult dolumn modfl objfdt, wiidi is
     * Rfturns tif dffbult dolumn modfl objfdt, wiidi is
     * Rfturns tif dffbult dolumn modfl objfdt, wiidi is
     * b <dodf>DffbultTbblfColumnModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfColumnModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfColumnModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfColumnModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultTbblfColumnModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * mftiod to rfturn b difffrfnt dolumn modfl objfdt.
     * mftiod to rfturn b difffrfnt dolumn modfl objfdt.
     * mftiod to rfturn b difffrfnt dolumn modfl objfdt.
     * mftiod to rfturn b difffrfnt dolumn modfl objfdt.
     * mftiod to rfturn b difffrfnt dolumn modfl objfdt.
     *
     *
     *
     *
     *
     * @rfturn tif dffbult dolumn modfl objfdt
     * @rfturn tif dffbult dolumn modfl objfdt
     * @rfturn tif dffbult dolumn modfl objfdt
     * @rfturn tif dffbult dolumn modfl objfdt
     * @rfturn tif dffbult dolumn modfl objfdt
     * @sff jbvbx.swing.tbblf.DffbultTbblfColumnModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfColumnModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfColumnModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfColumnModfl
     * @sff jbvbx.swing.tbblf.DffbultTbblfColumnModfl
     */
     */
     */
     */
     */
    protfdtfd TbblfColumnModfl drfbtfDffbultColumnModfl() {
    protfdtfd TbblfColumnModfl drfbtfDffbultColumnModfl() {
    protfdtfd TbblfColumnModfl drfbtfDffbultColumnModfl() {
    protfdtfd TbblfColumnModfl drfbtfDffbultColumnModfl() {
    protfdtfd TbblfColumnModfl drfbtfDffbultColumnModfl() {
        rfturn nfw DffbultTbblfColumnModfl();
        rfturn nfw DffbultTbblfColumnModfl();
        rfturn nfw DffbultTbblfColumnModfl();
        rfturn nfw DffbultTbblfColumnModfl();
        rfturn nfw DffbultTbblfColumnModfl();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dffbult sflfdtion modfl objfdt, wiidi is
     * Rfturns tif dffbult sflfdtion modfl objfdt, wiidi is
     * Rfturns tif dffbult sflfdtion modfl objfdt, wiidi is
     * Rfturns tif dffbult sflfdtion modfl objfdt, wiidi is
     * Rfturns tif dffbult sflfdtion modfl objfdt, wiidi is
     * b <dodf>DffbultListSflfdtionModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultListSflfdtionModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultListSflfdtionModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultListSflfdtionModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>DffbultListSflfdtionModfl</dodf>.  A subdlbss dbn ovfrridf tiis
     * mftiod to rfturn b difffrfnt sflfdtion modfl objfdt.
     * mftiod to rfturn b difffrfnt sflfdtion modfl objfdt.
     * mftiod to rfturn b difffrfnt sflfdtion modfl objfdt.
     * mftiod to rfturn b difffrfnt sflfdtion modfl objfdt.
     * mftiod to rfturn b difffrfnt sflfdtion modfl objfdt.
     *
     *
     *
     *
     *
     * @rfturn tif dffbult sflfdtion modfl objfdt
     * @rfturn tif dffbult sflfdtion modfl objfdt
     * @rfturn tif dffbult sflfdtion modfl objfdt
     * @rfturn tif dffbult sflfdtion modfl objfdt
     * @rfturn tif dffbult sflfdtion modfl objfdt
     * @sff jbvbx.swing.DffbultListSflfdtionModfl
     * @sff jbvbx.swing.DffbultListSflfdtionModfl
     * @sff jbvbx.swing.DffbultListSflfdtionModfl
     * @sff jbvbx.swing.DffbultListSflfdtionModfl
     * @sff jbvbx.swing.DffbultListSflfdtionModfl
     */
     */
     */
     */
     */
    protfdtfd ListSflfdtionModfl drfbtfDffbultSflfdtionModfl() {
    protfdtfd ListSflfdtionModfl drfbtfDffbultSflfdtionModfl() {
    protfdtfd ListSflfdtionModfl drfbtfDffbultSflfdtionModfl() {
    protfdtfd ListSflfdtionModfl drfbtfDffbultSflfdtionModfl() {
    protfdtfd ListSflfdtionModfl drfbtfDffbultSflfdtionModfl() {
        rfturn nfw DffbultListSflfdtionModfl();
        rfturn nfw DffbultListSflfdtionModfl();
        rfturn nfw DffbultListSflfdtionModfl();
        rfturn nfw DffbultListSflfdtionModfl();
        rfturn nfw DffbultListSflfdtionModfl();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif dffbult tbblf ifbdfr objfdt, wiidi is
     * Rfturns tif dffbult tbblf ifbdfr objfdt, wiidi is
     * Rfturns tif dffbult tbblf ifbdfr objfdt, wiidi is
     * Rfturns tif dffbult tbblf ifbdfr objfdt, wiidi is
     * Rfturns tif dffbult tbblf ifbdfr objfdt, wiidi is
     * b <dodf>JTbblfHfbdfr</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>JTbblfHfbdfr</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>JTbblfHfbdfr</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>JTbblfHfbdfr</dodf>.  A subdlbss dbn ovfrridf tiis
     * b <dodf>JTbblfHfbdfr</dodf>.  A subdlbss dbn ovfrridf tiis
     * mftiod to rfturn b difffrfnt tbblf ifbdfr objfdt.
     * mftiod to rfturn b difffrfnt tbblf ifbdfr objfdt.
     * mftiod to rfturn b difffrfnt tbblf ifbdfr objfdt.
     * mftiod to rfturn b difffrfnt tbblf ifbdfr objfdt.
     * mftiod to rfturn b difffrfnt tbblf ifbdfr objfdt.
     *
     *
     *
     *
     *
     * @rfturn tif dffbult tbblf ifbdfr objfdt
     * @rfturn tif dffbult tbblf ifbdfr objfdt
     * @rfturn tif dffbult tbblf ifbdfr objfdt
     * @rfturn tif dffbult tbblf ifbdfr objfdt
     * @rfturn tif dffbult tbblf ifbdfr objfdt
     * @sff jbvbx.swing.tbblf.JTbblfHfbdfr
     * @sff jbvbx.swing.tbblf.JTbblfHfbdfr
     * @sff jbvbx.swing.tbblf.JTbblfHfbdfr
     * @sff jbvbx.swing.tbblf.JTbblfHfbdfr
     * @sff jbvbx.swing.tbblf.JTbblfHfbdfr
     */
     */
     */
     */
     */
    protfdtfd JTbblfHfbdfr drfbtfDffbultTbblfHfbdfr() {
    protfdtfd JTbblfHfbdfr drfbtfDffbultTbblfHfbdfr() {
    protfdtfd JTbblfHfbdfr drfbtfDffbultTbblfHfbdfr() {
    protfdtfd JTbblfHfbdfr drfbtfDffbultTbblfHfbdfr() {
    protfdtfd JTbblfHfbdfr drfbtfDffbultTbblfHfbdfr() {
        rfturn nfw JTbblfHfbdfr(dolumnModfl);
        rfturn nfw JTbblfHfbdfr(dolumnModfl);
        rfturn nfw JTbblfHfbdfr(dolumnModfl);
        rfturn nfw JTbblfHfbdfr(dolumnModfl);
        rfturn nfw JTbblfHfbdfr(dolumnModfl);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Equivblfnt to <dodf>rfvblidbtf</dodf> followfd by <dodf>rfpbint</dodf>.
     * Equivblfnt to <dodf>rfvblidbtf</dodf> followfd by <dodf>rfpbint</dodf>.
     * Equivblfnt to <dodf>rfvblidbtf</dodf> followfd by <dodf>rfpbint</dodf>.
     * Equivblfnt to <dodf>rfvblidbtf</dodf> followfd by <dodf>rfpbint</dodf>.
     * Equivblfnt to <dodf>rfvblidbtf</dodf> followfd by <dodf>rfpbint</dodf>.
     */
     */
     */
     */
     */
    protfdtfd void rfsizfAndRfpbint() {
    protfdtfd void rfsizfAndRfpbint() {
    protfdtfd void rfsizfAndRfpbint() {
    protfdtfd void rfsizfAndRfpbint() {
    protfdtfd void rfsizfAndRfpbint() {
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif bdtivf dfll fditor, wiidi is {@dodf null} if tif tbblf
     * Rfturns tif bdtivf dfll fditor, wiidi is {@dodf null} if tif tbblf
     * Rfturns tif bdtivf dfll fditor, wiidi is {@dodf null} if tif tbblf
     * Rfturns tif bdtivf dfll fditor, wiidi is {@dodf null} if tif tbblf
     * Rfturns tif bdtivf dfll fditor, wiidi is {@dodf null} if tif tbblf
     * is not durrfntly fditing.
     * is not durrfntly fditing.
     * is not durrfntly fditing.
     * is not durrfntly fditing.
     * is not durrfntly fditing.
     *
     *
     *
     *
     *
     * @rfturn tif {@dodf TbblfCfllEditor} tibt dofs tif fditing,
     * @rfturn tif {@dodf TbblfCfllEditor} tibt dofs tif fditing,
     * @rfturn tif {@dodf TbblfCfllEditor} tibt dofs tif fditing,
     * @rfturn tif {@dodf TbblfCfllEditor} tibt dofs tif fditing,
     * @rfturn tif {@dodf TbblfCfllEditor} tibt dofs tif fditing,
     *         or {@dodf null} if tif tbblf is not durrfntly fditing.
     *         or {@dodf null} if tif tbblf is not durrfntly fditing.
     *         or {@dodf null} if tif tbblf is not durrfntly fditing.
     *         or {@dodf null} if tif tbblf is not durrfntly fditing.
     *         or {@dodf null} if tif tbblf is not durrfntly fditing.
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #gftCfllEditor(int, int)
     * @sff #gftCfllEditor(int, int)
     * @sff #gftCfllEditor(int, int)
     * @sff #gftCfllEditor(int, int)
     * @sff #gftCfllEditor(int, int)
     */
     */
     */
     */
     */
    publid TbblfCfllEditor gftCfllEditor() {
    publid TbblfCfllEditor gftCfllEditor() {
    publid TbblfCfllEditor gftCfllEditor() {
    publid TbblfCfllEditor gftCfllEditor() {
    publid TbblfCfllEditor gftCfllEditor() {
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif bdtivf dfll fditor.
     * Sfts tif bdtivf dfll fditor.
     * Sfts tif bdtivf dfll fditor.
     * Sfts tif bdtivf dfll fditor.
     * Sfts tif bdtivf dfll fditor.
     *
     *
     *
     *
     *
     * @pbrbm bnEditor tif bdtivf dfll fditor
     * @pbrbm bnEditor tif bdtivf dfll fditor
     * @pbrbm bnEditor tif bdtivf dfll fditor
     * @pbrbm bnEditor tif bdtivf dfll fditor
     * @pbrbm bnEditor tif bdtivf dfll fditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @sff #dfllEditor
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  bound: truf
     *  dfsdription: Tif tbblf's bdtivf dfll fditor.
     *  dfsdription: Tif tbblf's bdtivf dfll fditor.
     *  dfsdription: Tif tbblf's bdtivf dfll fditor.
     *  dfsdription: Tif tbblf's bdtivf dfll fditor.
     *  dfsdription: Tif tbblf's bdtivf dfll fditor.
     */
     */
     */
     */
     */
    publid void sftCfllEditor(TbblfCfllEditor bnEditor) {
    publid void sftCfllEditor(TbblfCfllEditor bnEditor) {
    publid void sftCfllEditor(TbblfCfllEditor bnEditor) {
    publid void sftCfllEditor(TbblfCfllEditor bnEditor) {
    publid void sftCfllEditor(TbblfCfllEditor bnEditor) {
        TbblfCfllEditor oldEditor = dfllEditor;
        TbblfCfllEditor oldEditor = dfllEditor;
        TbblfCfllEditor oldEditor = dfllEditor;
        TbblfCfllEditor oldEditor = dfllEditor;
        TbblfCfllEditor oldEditor = dfllEditor;
        dfllEditor = bnEditor;
        dfllEditor = bnEditor;
        dfllEditor = bnEditor;
        dfllEditor = bnEditor;
        dfllEditor = bnEditor;
        firfPropfrtyCibngf("tbblfCfllEditor", oldEditor, bnEditor);
        firfPropfrtyCibngf("tbblfCfllEditor", oldEditor, bnEditor);
        firfPropfrtyCibngf("tbblfCfllEditor", oldEditor, bnEditor);
        firfPropfrtyCibngf("tbblfCfllEditor", oldEditor, bnEditor);
        firfPropfrtyCibngf("tbblfCfllEditor", oldEditor, bnEditor);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>fditingColumn</dodf> vbribblf.
     * Sfts tif <dodf>fditingColumn</dodf> vbribblf.
     * Sfts tif <dodf>fditingColumn</dodf> vbribblf.
     * Sfts tif <dodf>fditingColumn</dodf> vbribblf.
     * Sfts tif <dodf>fditingColumn</dodf> vbribblf.
     * @pbrbm bColumn  tif dolumn of tif dfll to bf fditfd
     * @pbrbm bColumn  tif dolumn of tif dfll to bf fditfd
     * @pbrbm bColumn  tif dolumn of tif dfll to bf fditfd
     * @pbrbm bColumn  tif dolumn of tif dfll to bf fditfd
     * @pbrbm bColumn  tif dolumn of tif dfll to bf fditfd
     *
     *
     *
     *
     *
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     * @sff #fditingColumn
     */
     */
     */
     */
     */
    publid void sftEditingColumn(int bColumn) {
    publid void sftEditingColumn(int bColumn) {
    publid void sftEditingColumn(int bColumn) {
    publid void sftEditingColumn(int bColumn) {
    publid void sftEditingColumn(int bColumn) {
        fditingColumn = bColumn;
        fditingColumn = bColumn;
        fditingColumn = bColumn;
        fditingColumn = bColumn;
        fditingColumn = bColumn;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>fditingRow</dodf> vbribblf.
     * Sfts tif <dodf>fditingRow</dodf> vbribblf.
     * Sfts tif <dodf>fditingRow</dodf> vbribblf.
     * Sfts tif <dodf>fditingRow</dodf> vbribblf.
     * Sfts tif <dodf>fditingRow</dodf> vbribblf.
     * @pbrbm bRow  tif row of tif dfll to bf fditfd
     * @pbrbm bRow  tif row of tif dfll to bf fditfd
     * @pbrbm bRow  tif row of tif dfll to bf fditfd
     * @pbrbm bRow  tif row of tif dfll to bf fditfd
     * @pbrbm bRow  tif row of tif dfll to bf fditfd
     *
     *
     *
     *
     *
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     * @sff #fditingRow
     */
     */
     */
     */
     */
    publid void sftEditingRow(int bRow) {
    publid void sftEditingRow(int bRow) {
    publid void sftEditingRow(int bRow) {
    publid void sftEditingRow(int bRow) {
    publid void sftEditingRow(int bRow) {
        fditingRow = bRow;
        fditingRow = bRow;
        fditingRow = bRow;
        fditingRow = bRow;
        fditingRow = bRow;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn bppropribtf rfndfrfr for tif dfll spfdififd by tiis row bnd
     * Rfturns bn bppropribtf rfndfrfr for tif dfll spfdififd by tiis row bnd
     * Rfturns bn bppropribtf rfndfrfr for tif dfll spfdififd by tiis row bnd
     * Rfturns bn bppropribtf rfndfrfr for tif dfll spfdififd by tiis row bnd
     * Rfturns bn bppropribtf rfndfrfr for tif dfll spfdififd by tiis row bnd
     * dolumn. If tif <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null
     * dolumn. If tif <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null
     * dolumn. If tif <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null
     * dolumn. If tif <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null
     * dolumn. If tif <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null
     * rfndfrfr, rfturns tibt.  If not, finds tif dlbss of tif dbtb in
     * rfndfrfr, rfturns tibt.  If not, finds tif dlbss of tif dbtb in
     * rfndfrfr, rfturns tibt.  If not, finds tif dlbss of tif dbtb in
     * rfndfrfr, rfturns tibt.  If not, finds tif dlbss of tif dbtb in
     * rfndfrfr, rfturns tibt.  If not, finds tif dlbss of tif dbtb in
     * tiis dolumn (using <dodf>gftColumnClbss</dodf>)
     * tiis dolumn (using <dodf>gftColumnClbss</dodf>)
     * tiis dolumn (using <dodf>gftColumnClbss</dodf>)
     * tiis dolumn (using <dodf>gftColumnClbss</dodf>)
     * tiis dolumn (using <dodf>gftColumnClbss</dodf>)
     * bnd rfturns tif dffbult rfndfrfr for tiis typf of dbtb.
     * bnd rfturns tif dffbult rfndfrfr for tiis typf of dbtb.
     * bnd rfturns tif dffbult rfndfrfr for tiis typf of dbtb.
     * bnd rfturns tif dffbult rfndfrfr for tiis typf of dbtb.
     * bnd rfturns tif dffbult rfndfrfr for tiis typf of dbtb.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * usf tiis mftiod to providf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf rfndfrfrs so tibt tiis dffbult bfibvior
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     * @rfturn tif bssignfd rfndfrfr; if <dodf>null</dodf>
     * @rfturn tif bssignfd rfndfrfr; if <dodf>null</dodf>
     * @rfturn tif bssignfd rfndfrfr; if <dodf>null</dodf>
     * @rfturn tif bssignfd rfndfrfr; if <dodf>null</dodf>
     * @rfturn tif bssignfd rfndfrfr; if <dodf>null</dodf>
     *                  rfturns tif dffbult rfndfrfr
     *                  rfturns tif dffbult rfndfrfr
     *                  rfturns tif dffbult rfndfrfr
     *                  rfturns tif dffbult rfndfrfr
     *                  rfturns tif dffbult rfndfrfr
     *                  for tiis typf of objfdt
     *                  for tiis typf of objfdt
     *                  for tiis typf of objfdt
     *                  for tiis typf of objfdt
     *                  for tiis typf of objfdt
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.DffbultTbblfCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.TbblfColumn#sftCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.TbblfColumn#sftCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.TbblfColumn#sftCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.TbblfColumn#sftCfllRfndfrfr
     * @sff jbvbx.swing.tbblf.TbblfColumn#sftCfllRfndfrfr
     * @sff #sftDffbultRfndfrfr
     * @sff #sftDffbultRfndfrfr
     * @sff #sftDffbultRfndfrfr
     * @sff #sftDffbultRfndfrfr
     * @sff #sftDffbultRfndfrfr
     */
     */
     */
     */
     */
    publid TbblfCfllRfndfrfr gftCfllRfndfrfr(int row, int dolumn) {
    publid TbblfCfllRfndfrfr gftCfllRfndfrfr(int row, int dolumn) {
    publid TbblfCfllRfndfrfr gftCfllRfndfrfr(int row, int dolumn) {
    publid TbblfCfllRfndfrfr gftCfllRfndfrfr(int row, int dolumn) {
    publid TbblfCfllRfndfrfr gftCfllRfndfrfr(int row, int dolumn) {
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfCfllRfndfrfr rfndfrfr = tbblfColumn.gftCfllRfndfrfr();
        TbblfCfllRfndfrfr rfndfrfr = tbblfColumn.gftCfllRfndfrfr();
        TbblfCfllRfndfrfr rfndfrfr = tbblfColumn.gftCfllRfndfrfr();
        TbblfCfllRfndfrfr rfndfrfr = tbblfColumn.gftCfllRfndfrfr();
        TbblfCfllRfndfrfr rfndfrfr = tbblfColumn.gftCfllRfndfrfr();
        if (rfndfrfr == null) {
        if (rfndfrfr == null) {
        if (rfndfrfr == null) {
        if (rfndfrfr == null) {
        if (rfndfrfr == null) {
            rfndfrfr = gftDffbultRfndfrfr(gftColumnClbss(dolumn));
            rfndfrfr = gftDffbultRfndfrfr(gftColumnClbss(dolumn));
            rfndfrfr = gftDffbultRfndfrfr(gftColumnClbss(dolumn));
            rfndfrfr = gftDffbultRfndfrfr(gftColumnClbss(dolumn));
            rfndfrfr = gftDffbultRfndfrfr(gftColumnClbss(dolumn));
        }
        }
        }
        }
        }
        rfturn rfndfrfr;
        rfturn rfndfrfr;
        rfturn rfndfrfr;
        rfturn rfndfrfr;
        rfturn rfndfrfr;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Prfpbrfs tif rfndfrfr by qufrying tif dbtb modfl for tif
     * Prfpbrfs tif rfndfrfr by qufrying tif dbtb modfl for tif
     * Prfpbrfs tif rfndfrfr by qufrying tif dbtb modfl for tif
     * Prfpbrfs tif rfndfrfr by qufrying tif dbtb modfl for tif
     * Prfpbrfs tif rfndfrfr by qufrying tif dbtb modfl for tif
     * vbluf bnd sflfdtion stbtf
     * vbluf bnd sflfdtion stbtf
     * vbluf bnd sflfdtion stbtf
     * vbluf bnd sflfdtion stbtf
     * vbluf bnd sflfdtion stbtf
     * of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * Rfturns tif domponfnt (mby bf b <dodf>Componfnt</dodf>
     * Rfturns tif domponfnt (mby bf b <dodf>Componfnt</dodf>
     * Rfturns tif domponfnt (mby bf b <dodf>Componfnt</dodf>
     * Rfturns tif domponfnt (mby bf b <dodf>Componfnt</dodf>
     * Rfturns tif domponfnt (mby bf b <dodf>Componfnt</dodf>
     * or b <dodf>JComponfnt</dodf>) undfr tif fvfnt lodbtion.
     * or b <dodf>JComponfnt</dodf>) undfr tif fvfnt lodbtion.
     * or b <dodf>JComponfnt</dodf>) undfr tif fvfnt lodbtion.
     * or b <dodf>JComponfnt</dodf>) undfr tif fvfnt lodbtion.
     * or b <dodf>JComponfnt</dodf>) undfr tif fvfnt lodbtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During b printing opfrbtion, tiis mftiod will donfigurf tif
     * During b printing opfrbtion, tiis mftiod will donfigurf tif
     * During b printing opfrbtion, tiis mftiod will donfigurf tif
     * During b printing opfrbtion, tiis mftiod will donfigurf tif
     * During b printing opfrbtion, tiis mftiod will donfigurf tif
     * rfndfrfr witiout indidbting sflfdtion or fodus, to prfvfnt
     * rfndfrfr witiout indidbting sflfdtion or fodus, to prfvfnt
     * rfndfrfr witiout indidbting sflfdtion or fodus, to prfvfnt
     * rfndfrfr witiout indidbting sflfdtion or fodus, to prfvfnt
     * rfndfrfr witiout indidbting sflfdtion or fodus, to prfvfnt
     * tifm from bppfbring in tif printfd output. To do otifr
     * tifm from bppfbring in tif printfd output. To do otifr
     * tifm from bppfbring in tif printfd output. To do otifr
     * tifm from bppfbring in tif printfd output. To do otifr
     * tifm from bppfbring in tif printfd output. To do otifr
     * dustomizbtions bbsfd on wiftifr or not tif tbblf is bfing
     * dustomizbtions bbsfd on wiftifr or not tif tbblf is bfing
     * dustomizbtions bbsfd on wiftifr or not tif tbblf is bfing
     * dustomizbtions bbsfd on wiftifr or not tif tbblf is bfing
     * dustomizbtions bbsfd on wiftifr or not tif tbblf is bfing
     * printfd, you dbn difdk tif vbluf of
     * printfd, you dbn difdk tif vbluf of
     * printfd, you dbn difdk tif vbluf of
     * printfd, you dbn difdk tif vbluf of
     * printfd, you dbn difdk tif vbluf of
     * {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}, fitifr ifrf
     * {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}, fitifr ifrf
     * {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}, fitifr ifrf
     * {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}, fitifr ifrf
     * {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}, fitifr ifrf
     * or witiin dustom rfndfrfrs.
     * or witiin dustom rfndfrfrs.
     * or witiin dustom rfndfrfrs.
     * or witiin dustom rfndfrfrs.
     * or witiin dustom rfndfrfrs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * usf tiis mftiod to prfpbrf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf rfndfrfrs so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf rfndfrfrs so tibt tiis dffbult bfibvior
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @pbrbm rfndfrfr  tif <dodf>TbblfCfllRfndfrfr</dodf> to prfpbrf
     * @pbrbm rfndfrfr  tif <dodf>TbblfCfllRfndfrfr</dodf> to prfpbrf
     * @pbrbm rfndfrfr  tif <dodf>TbblfCfllRfndfrfr</dodf> to prfpbrf
     * @pbrbm rfndfrfr  tif <dodf>TbblfCfllRfndfrfr</dodf> to prfpbrf
     * @pbrbm rfndfrfr  tif <dodf>TbblfCfllRfndfrfr</dodf> to prfpbrf
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to rfndfr, wifrf 0 is tif first row
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     * @pbrbm dolumn    tif dolumn of tif dfll to rfndfr,
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     * @rfturn          tif <dodf>Componfnt</dodf> undfr tif fvfnt lodbtion
     * @rfturn          tif <dodf>Componfnt</dodf> undfr tif fvfnt lodbtion
     * @rfturn          tif <dodf>Componfnt</dodf> undfr tif fvfnt lodbtion
     * @rfturn          tif <dodf>Componfnt</dodf> undfr tif fvfnt lodbtion
     * @rfturn          tif <dodf>Componfnt</dodf> undfr tif fvfnt lodbtion
     */
     */
     */
     */
     */
    publid Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr, int row, int dolumn) {
    publid Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr, int row, int dolumn) {
    publid Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr, int row, int dolumn) {
    publid Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr, int row, int dolumn) {
    publid Componfnt prfpbrfRfndfrfr(TbblfCfllRfndfrfr rfndfrfr, int row, int dolumn) {
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);





        boolfbn isSflfdtfd = fblsf;
        boolfbn isSflfdtfd = fblsf;
        boolfbn isSflfdtfd = fblsf;
        boolfbn isSflfdtfd = fblsf;
        boolfbn isSflfdtfd = fblsf;
        boolfbn ibsFodus = fblsf;
        boolfbn ibsFodus = fblsf;
        boolfbn ibsFodus = fblsf;
        boolfbn ibsFodus = fblsf;
        boolfbn ibsFodus = fblsf;





        // Only indidbtf tif sflfdtion bnd fodusfd dfll if not printing
        // Only indidbtf tif sflfdtion bnd fodusfd dfll if not printing
        // Only indidbtf tif sflfdtion bnd fodusfd dfll if not printing
        // Only indidbtf tif sflfdtion bnd fodusfd dfll if not printing
        // Only indidbtf tif sflfdtion bnd fodusfd dfll if not printing
        if (!isPbintingForPrint()) {
        if (!isPbintingForPrint()) {
        if (!isPbintingForPrint()) {
        if (!isPbintingForPrint()) {
        if (!isPbintingForPrint()) {
            isSflfdtfd = isCfllSflfdtfd(row, dolumn);
            isSflfdtfd = isCfllSflfdtfd(row, dolumn);
            isSflfdtfd = isCfllSflfdtfd(row, dolumn);
            isSflfdtfd = isCfllSflfdtfd(row, dolumn);
            isSflfdtfd = isCfllSflfdtfd(row, dolumn);





            boolfbn rowIsLfbd =
            boolfbn rowIsLfbd =
            boolfbn rowIsLfbd =
            boolfbn rowIsLfbd =
            boolfbn rowIsLfbd =
                (sflfdtionModfl.gftLfbdSflfdtionIndfx() == row);
                (sflfdtionModfl.gftLfbdSflfdtionIndfx() == row);
                (sflfdtionModfl.gftLfbdSflfdtionIndfx() == row);
                (sflfdtionModfl.gftLfbdSflfdtionIndfx() == row);
                (sflfdtionModfl.gftLfbdSflfdtionIndfx() == row);
            boolfbn dolIsLfbd =
            boolfbn dolIsLfbd =
            boolfbn dolIsLfbd =
            boolfbn dolIsLfbd =
            boolfbn dolIsLfbd =
                (dolumnModfl.gftSflfdtionModfl().gftLfbdSflfdtionIndfx() == dolumn);
                (dolumnModfl.gftSflfdtionModfl().gftLfbdSflfdtionIndfx() == dolumn);
                (dolumnModfl.gftSflfdtionModfl().gftLfbdSflfdtionIndfx() == dolumn);
                (dolumnModfl.gftSflfdtionModfl().gftLfbdSflfdtionIndfx() == dolumn);
                (dolumnModfl.gftSflfdtionModfl().gftLfbdSflfdtionIndfx() == dolumn);





            ibsFodus = (rowIsLfbd && dolIsLfbd) && isFodusOwnfr();
            ibsFodus = (rowIsLfbd && dolIsLfbd) && isFodusOwnfr();
            ibsFodus = (rowIsLfbd && dolIsLfbd) && isFodusOwnfr();
            ibsFodus = (rowIsLfbd && dolIsLfbd) && isFodusOwnfr();
            ibsFodus = (rowIsLfbd && dolIsLfbd) && isFodusOwnfr();
        }
        }
        }
        }
        }





        rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(tiis, vbluf,
        rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(tiis, vbluf,
        rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(tiis, vbluf,
        rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(tiis, vbluf,
        rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(tiis, vbluf,
                                                      isSflfdtfd, ibsFodus,
                                                      isSflfdtfd, ibsFodus,
                                                      isSflfdtfd, ibsFodus,
                                                      isSflfdtfd, ibsFodus,
                                                      isSflfdtfd, ibsFodus,
                                                      row, dolumn);
                                                      row, dolumn);
                                                      row, dolumn);
                                                      row, dolumn);
                                                      row, dolumn);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn bppropribtf fditor for tif dfll spfdififd by
     * Rfturns bn bppropribtf fditor for tif dfll spfdififd by
     * Rfturns bn bppropribtf fditor for tif dfll spfdififd by
     * Rfturns bn bppropribtf fditor for tif dfll spfdififd by
     * Rfturns bn bppropribtf fditor for tif dfll spfdififd by
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>. If tif
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>. If tif
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>. If tif
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>. If tif
     * <dodf>row</dodf> bnd <dodf>dolumn</dodf>. If tif
     * <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null fditor,
     * <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null fditor,
     * <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null fditor,
     * <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null fditor,
     * <dodf>TbblfColumn</dodf> for tiis dolumn ibs b non-null fditor,
     * rfturns tibt.  If not, finds tif dlbss of tif dbtb in tiis
     * rfturns tibt.  If not, finds tif dlbss of tif dbtb in tiis
     * rfturns tibt.  If not, finds tif dlbss of tif dbtb in tiis
     * rfturns tibt.  If not, finds tif dlbss of tif dbtb in tiis
     * rfturns tibt.  If not, finds tif dlbss of tif dbtb in tiis
     * dolumn (using <dodf>gftColumnClbss</dodf>)
     * dolumn (using <dodf>gftColumnClbss</dodf>)
     * dolumn (using <dodf>gftColumnClbss</dodf>)
     * dolumn (using <dodf>gftColumnClbss</dodf>)
     * dolumn (using <dodf>gftColumnClbss</dodf>)
     * bnd rfturns tif dffbult fditor for tiis typf of dbtb.
     * bnd rfturns tif dffbult fditor for tiis typf of dbtb.
     * bnd rfturns tif dffbult fditor for tiis typf of dbtb.
     * bnd rfturns tif dffbult fditor for tiis typf of dbtb.
     * bnd rfturns tif dffbult fditor for tiis typf of dbtb.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * usf tiis mftiod to providf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to providf fditors so tibt tiis dffbult bfibvior
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @pbrbm row       tif row of tif dfll to fdit, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to fdit, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to fdit, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to fdit, wifrf 0 is tif first row
     * @pbrbm row       tif row of tif dfll to fdit, wifrf 0 is tif first row
     * @pbrbm dolumn    tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn    tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn    tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn    tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn    tif dolumn of tif dfll to fdit,
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     *                  wifrf 0 is tif first dolumn
     * @rfturn          tif fditor for tiis dfll;
     * @rfturn          tif fditor for tiis dfll;
     * @rfturn          tif fditor for tiis dfll;
     * @rfturn          tif fditor for tiis dfll;
     * @rfturn          tif fditor for tiis dfll;
     *                  if <dodf>null</dodf> rfturn tif dffbult fditor for
     *                  if <dodf>null</dodf> rfturn tif dffbult fditor for
     *                  if <dodf>null</dodf> rfturn tif dffbult fditor for
     *                  if <dodf>null</dodf> rfturn tif dffbult fditor for
     *                  if <dodf>null</dodf> rfturn tif dffbult fditor for
     *                  tiis typf of dfll
     *                  tiis typf of dfll
     *                  tiis typf of dfll
     *                  tiis typf of dfll
     *                  tiis typf of dfll
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     * @sff DffbultCfllEditor
     */
     */
     */
     */
     */
    publid TbblfCfllEditor gftCfllEditor(int row, int dolumn) {
    publid TbblfCfllEditor gftCfllEditor(int row, int dolumn) {
    publid TbblfCfllEditor gftCfllEditor(int row, int dolumn) {
    publid TbblfCfllEditor gftCfllEditor(int row, int dolumn) {
    publid TbblfCfllEditor gftCfllEditor(int row, int dolumn) {
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfColumn tbblfColumn = gftColumnModfl().gftColumn(dolumn);
        TbblfCfllEditor fditor = tbblfColumn.gftCfllEditor();
        TbblfCfllEditor fditor = tbblfColumn.gftCfllEditor();
        TbblfCfllEditor fditor = tbblfColumn.gftCfllEditor();
        TbblfCfllEditor fditor = tbblfColumn.gftCfllEditor();
        TbblfCfllEditor fditor = tbblfColumn.gftCfllEditor();
        if (fditor == null) {
        if (fditor == null) {
        if (fditor == null) {
        if (fditor == null) {
        if (fditor == null) {
            fditor = gftDffbultEditor(gftColumnClbss(dolumn));
            fditor = gftDffbultEditor(gftColumnClbss(dolumn));
            fditor = gftDffbultEditor(gftColumnClbss(dolumn));
            fditor = gftDffbultEditor(gftColumnClbss(dolumn));
            fditor = gftDffbultEditor(gftColumnClbss(dolumn));
        }
        }
        }
        }
        }
        rfturn fditor;
        rfturn fditor;
        rfturn fditor;
        rfturn fditor;
        rfturn fditor;
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Prfpbrfs tif fditor by qufrying tif dbtb modfl for tif vbluf bnd
     * Prfpbrfs tif fditor by qufrying tif dbtb modfl for tif vbluf bnd
     * Prfpbrfs tif fditor by qufrying tif dbtb modfl for tif vbluf bnd
     * Prfpbrfs tif fditor by qufrying tif dbtb modfl for tif vbluf bnd
     * Prfpbrfs tif fditor by qufrying tif dbtb modfl for tif vbluf bnd
     * sflfdtion stbtf of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * sflfdtion stbtf of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * sflfdtion stbtf of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * sflfdtion stbtf of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * sflfdtion stbtf of tif dfll bt <dodf>row</dodf>, <dodf>dolumn</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * <b>Notf:</b>
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * Tirougiout tif tbblf pbdkbgf, tif intfrnbl implfmfntbtions blwbys
     * usf tiis mftiod to prfpbrf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf fditors so tibt tiis dffbult bfibvior
     * usf tiis mftiod to prfpbrf fditors so tibt tiis dffbult bfibvior
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     * dbn bf sbffly ovfrriddfn by b subdlbss.
     *
     *
     *
     *
     *
     * @pbrbm fditor  tif <dodf>TbblfCfllEditor</dodf> to sft up
     * @pbrbm fditor  tif <dodf>TbblfCfllEditor</dodf> to sft up
     * @pbrbm fditor  tif <dodf>TbblfCfllEditor</dodf> to sft up
     * @pbrbm fditor  tif <dodf>TbblfCfllEditor</dodf> to sft up
     * @pbrbm fditor  tif <dodf>TbblfCfllEditor</dodf> to sft up
     * @pbrbm row     tif row of tif dfll to fdit,
     * @pbrbm row     tif row of tif dfll to fdit,
     * @pbrbm row     tif row of tif dfll to fdit,
     * @pbrbm row     tif row of tif dfll to fdit,
     * @pbrbm row     tif row of tif dfll to fdit,
     *                wifrf 0 is tif first row
     *                wifrf 0 is tif first row
     *                wifrf 0 is tif first row
     *                wifrf 0 is tif first row
     *                wifrf 0 is tif first row
     * @pbrbm dolumn  tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn  tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn  tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn  tif dolumn of tif dfll to fdit,
     * @pbrbm dolumn  tif dolumn of tif dfll to fdit,
     *                wifrf 0 is tif first dolumn
     *                wifrf 0 is tif first dolumn
     *                wifrf 0 is tif first dolumn
     *                wifrf 0 is tif first dolumn
     *                wifrf 0 is tif first dolumn
     * @rfturn tif <dodf>Componfnt</dodf> bfing fditfd
     * @rfturn tif <dodf>Componfnt</dodf> bfing fditfd
     * @rfturn tif <dodf>Componfnt</dodf> bfing fditfd
     * @rfturn tif <dodf>Componfnt</dodf> bfing fditfd
     * @rfturn tif <dodf>Componfnt</dodf> bfing fditfd
     */
     */
     */
     */
     */
    publid Componfnt prfpbrfEditor(TbblfCfllEditor fditor, int row, int dolumn) {
    publid Componfnt prfpbrfEditor(TbblfCfllEditor fditor, int row, int dolumn) {
    publid Componfnt prfpbrfEditor(TbblfCfllEditor fditor, int row, int dolumn) {
    publid Componfnt prfpbrfEditor(TbblfCfllEditor fditor, int row, int dolumn) {
    publid Componfnt prfpbrfEditor(TbblfCfllEditor fditor, int row, int dolumn) {
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        Objfdt vbluf = gftVblufAt(row, dolumn);
        boolfbn isSflfdtfd = isCfllSflfdtfd(row, dolumn);
        boolfbn isSflfdtfd = isCfllSflfdtfd(row, dolumn);
        boolfbn isSflfdtfd = isCfllSflfdtfd(row, dolumn);
        boolfbn isSflfdtfd = isCfllSflfdtfd(row, dolumn);
        boolfbn isSflfdtfd = isCfllSflfdtfd(row, dolumn);
        Componfnt domp = fditor.gftTbblfCfllEditorComponfnt(tiis, vbluf, isSflfdtfd,
        Componfnt domp = fditor.gftTbblfCfllEditorComponfnt(tiis, vbluf, isSflfdtfd,
        Componfnt domp = fditor.gftTbblfCfllEditorComponfnt(tiis, vbluf, isSflfdtfd,
        Componfnt domp = fditor.gftTbblfCfllEditorComponfnt(tiis, vbluf, isSflfdtfd,
        Componfnt domp = fditor.gftTbblfCfllEditorComponfnt(tiis, vbluf, isSflfdtfd,
                                                  row, dolumn);
                                                  row, dolumn);
                                                  row, dolumn);
                                                  row, dolumn);
                                                  row, dolumn);
        if (domp instbndfof JComponfnt) {
        if (domp instbndfof JComponfnt) {
        if (domp instbndfof JComponfnt) {
        if (domp instbndfof JComponfnt) {
        if (domp instbndfof JComponfnt) {
            JComponfnt jComp = (JComponfnt)domp;
            JComponfnt jComp = (JComponfnt)domp;
            JComponfnt jComp = (JComponfnt)domp;
            JComponfnt jComp = (JComponfnt)domp;
            JComponfnt jComp = (JComponfnt)domp;
            if (jComp.gftNfxtFodusbblfComponfnt() == null) {
            if (jComp.gftNfxtFodusbblfComponfnt() == null) {
            if (jComp.gftNfxtFodusbblfComponfnt() == null) {
            if (jComp.gftNfxtFodusbblfComponfnt() == null) {
            if (jComp.gftNfxtFodusbblfComponfnt() == null) {
                jComp.sftNfxtFodusbblfComponfnt(tiis);
                jComp.sftNfxtFodusbblfComponfnt(tiis);
                jComp.sftNfxtFodusbblfComponfnt(tiis);
                jComp.sftNfxtFodusbblfComponfnt(tiis);
                jComp.sftNfxtFodusbblfComponfnt(tiis);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn domp;
        rfturn domp;
        rfturn domp;
        rfturn domp;
        rfturn domp;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Disdbrds tif fditor objfdt bnd frffs tif rfbl fstbtf it usfd for
     * Disdbrds tif fditor objfdt bnd frffs tif rfbl fstbtf it usfd for
     * Disdbrds tif fditor objfdt bnd frffs tif rfbl fstbtf it usfd for
     * Disdbrds tif fditor objfdt bnd frffs tif rfbl fstbtf it usfd for
     * Disdbrds tif fditor objfdt bnd frffs tif rfbl fstbtf it usfd for
     * dfll rfndfring.
     * dfll rfndfring.
     * dfll rfndfring.
     * dfll rfndfring.
     * dfll rfndfring.
     */
     */
     */
     */
     */
    publid void rfmovfEditor() {
    publid void rfmovfEditor() {
    publid void rfmovfEditor() {
    publid void rfmovfEditor() {
    publid void rfmovfEditor() {
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
            rfmovfPropfrtyCibngfListfnfr("pfrmbnfntFodusOwnfr", fditorRfmovfr);
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;
        fditorRfmovfr = null;





        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        TbblfCfllEditor fditor = gftCfllEditor();
        if(fditor != null) {
        if(fditor != null) {
        if(fditor != null) {
        if(fditor != null) {
        if(fditor != null) {
            fditor.rfmovfCfllEditorListfnfr(tiis);
            fditor.rfmovfCfllEditorListfnfr(tiis);
            fditor.rfmovfCfllEditorListfnfr(tiis);
            fditor.rfmovfCfllEditorListfnfr(tiis);
            fditor.rfmovfCfllEditorListfnfr(tiis);
            if (fditorComp != null) {
            if (fditorComp != null) {
            if (fditorComp != null) {
            if (fditorComp != null) {
            if (fditorComp != null) {
                Componfnt fodusOwnfr =
                Componfnt fodusOwnfr =
                Componfnt fodusOwnfr =
                Componfnt fodusOwnfr =
                Componfnt fodusOwnfr =
                        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().gftFodusOwnfr();
                        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().gftFodusOwnfr();
                        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().gftFodusOwnfr();
                        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().gftFodusOwnfr();
                        KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr().gftFodusOwnfr();
                boolfbn isFodusOwnfrInTifTbblf = fodusOwnfr != null?
                boolfbn isFodusOwnfrInTifTbblf = fodusOwnfr != null?
                boolfbn isFodusOwnfrInTifTbblf = fodusOwnfr != null?
                boolfbn isFodusOwnfrInTifTbblf = fodusOwnfr != null?
                boolfbn isFodusOwnfrInTifTbblf = fodusOwnfr != null?
                        SwingUtilitifs.isDfsdfndingFrom(fodusOwnfr, tiis):fblsf;
                        SwingUtilitifs.isDfsdfndingFrom(fodusOwnfr, tiis):fblsf;
                        SwingUtilitifs.isDfsdfndingFrom(fodusOwnfr, tiis):fblsf;
                        SwingUtilitifs.isDfsdfndingFrom(fodusOwnfr, tiis):fblsf;
                        SwingUtilitifs.isDfsdfndingFrom(fodusOwnfr, tiis):fblsf;
                rfmovf(fditorComp);
                rfmovf(fditorComp);
                rfmovf(fditorComp);
                rfmovf(fditorComp);
                rfmovf(fditorComp);
                if(isFodusOwnfrInTifTbblf) {
                if(isFodusOwnfrInTifTbblf) {
                if(isFodusOwnfrInTifTbblf) {
                if(isFodusOwnfrInTifTbblf) {
                if(isFodusOwnfrInTifTbblf) {
                    rfqufstFodusInWindow();
                    rfqufstFodusInWindow();
                    rfqufstFodusInWindow();
                    rfqufstFodusInWindow();
                    rfqufstFodusInWindow();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            Rfdtbnglf dfllRfdt = gftCfllRfdt(fditingRow, fditingColumn, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(fditingRow, fditingColumn, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(fditingRow, fditingColumn, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(fditingRow, fditingColumn, fblsf);
            Rfdtbnglf dfllRfdt = gftCfllRfdt(fditingRow, fditingColumn, fblsf);





            sftCfllEditor(null);
            sftCfllEditor(null);
            sftCfllEditor(null);
            sftCfllEditor(null);
            sftCfllEditor(null);
            sftEditingColumn(-1);
            sftEditingColumn(-1);
            sftEditingColumn(-1);
            sftEditingColumn(-1);
            sftEditingColumn(-1);
            sftEditingRow(-1);
            sftEditingRow(-1);
            sftEditingRow(-1);
            sftEditingRow(-1);
            sftEditingRow(-1);
            fditorComp = null;
            fditorComp = null;
            fditorComp = null;
            fditorComp = null;
            fditorComp = null;





            rfpbint(dfllRfdt);
            rfpbint(dfllRfdt);
            rfpbint(dfllRfdt);
            rfpbint(dfllRfdt);
            rfpbint(dfllRfdt);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





//
//
//
//
//
// Sfriblizbtion
// Sfriblizbtion
// Sfriblizbtion
// Sfriblizbtion
// Sfriblizbtion
//
//
//
//
//





    /**
    /**
    /**
    /**
    /**
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * informbtion bbout sfriblizbtion in Swing.
     * informbtion bbout sfriblizbtion in Swing.
     * informbtion bbout sfriblizbtion in Swing.
     * informbtion bbout sfriblizbtion in Swing.
     * informbtion bbout sfriblizbtion in Swing.
     */
     */
     */
     */
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
        tirows IOExdfption, ClbssNotFoundExdfption
        tirows IOExdfption, ClbssNotFoundExdfption
        tirows IOExdfption, ClbssNotFoundExdfption
        tirows IOExdfption, ClbssNotFoundExdfption
        tirows IOExdfption, ClbssNotFoundExdfption
    {
    {
    {
    {
    {
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        if ((ui != null) && (gftUIClbssID().fqubls(uiClbssID))) {
        if ((ui != null) && (gftUIClbssID().fqubls(uiClbssID))) {
        if ((ui != null) && (gftUIClbssID().fqubls(uiClbssID))) {
        if ((ui != null) && (gftUIClbssID().fqubls(uiClbssID))) {
        if ((ui != null) && (gftUIClbssID().fqubls(uiClbssID))) {
            ui.instbllUI(tiis);
            ui.instbllUI(tiis);
            ui.instbllUI(tiis);
            ui.instbllUI(tiis);
            ui.instbllUI(tiis);
        }
        }
        }
        }
        }
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultRfndfrfrs();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();
        drfbtfDffbultEditors();





        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // rfgistfrfd by JComponfnt.rfbdObjfdt() bnd wf don't wbnt
        // rfgistfrfd by JComponfnt.rfbdObjfdt() bnd wf don't wbnt
        // rfgistfrfd by JComponfnt.rfbdObjfdt() bnd wf don't wbnt
        // rfgistfrfd by JComponfnt.rfbdObjfdt() bnd wf don't wbnt
        // rfgistfrfd by JComponfnt.rfbdObjfdt() bnd wf don't wbnt
        // to rf-rfgistfr ifrf
        // to rf-rfgistfr ifrf
        // to rf-rfgistfr ifrf
        // to rf-rfgistfr ifrf
        // to rf-rfgistfr ifrf
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
            ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(tiis);
         }
         }
         }
         }
         }
    }
    }
    }
    }
    }





    /* Cbllfd from tif JComponfnt's EnbblfSfriblizbtionFodusListfnfr to
    /* Cbllfd from tif JComponfnt's EnbblfSfriblizbtionFodusListfnfr to
    /* Cbllfd from tif JComponfnt's EnbblfSfriblizbtionFodusListfnfr to
    /* Cbllfd from tif JComponfnt's EnbblfSfriblizbtionFodusListfnfr to
    /* Cbllfd from tif JComponfnt's EnbblfSfriblizbtionFodusListfnfr to
     * do bny Swing-spfdifid prf-sfriblizbtion donfigurbtion.
     * do bny Swing-spfdifid prf-sfriblizbtion donfigurbtion.
     * do bny Swing-spfdifid prf-sfriblizbtion donfigurbtion.
     * do bny Swing-spfdifid prf-sfriblizbtion donfigurbtion.
     * do bny Swing-spfdifid prf-sfriblizbtion donfigurbtion.
     */
     */
     */
     */
     */
    void dompWritfObjfdtNotify() {
    void dompWritfObjfdtNotify() {
    void dompWritfObjfdtNotify() {
    void dompWritfObjfdtNotify() {
    void dompWritfObjfdtNotify() {
        supfr.dompWritfObjfdtNotify();
        supfr.dompWritfObjfdtNotify();
        supfr.dompWritfObjfdtNotify();
        supfr.dompWritfObjfdtNotify();
        supfr.dompWritfObjfdtNotify();
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // If ToolTipTfxt != null, tifn tif tooltip ibs blrfbdy bffn
        // unrfgistfrfd by JComponfnt.dompWritfObjfdtNotify()
        // unrfgistfrfd by JComponfnt.dompWritfObjfdtNotify()
        // unrfgistfrfd by JComponfnt.dompWritfObjfdtNotify()
        // unrfgistfrfd by JComponfnt.dompWritfObjfdtNotify()
        // unrfgistfrfd by JComponfnt.dompWritfObjfdtNotify()
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
        if (gftToolTipTfxt() == null) {
            ToolTipMbnbgfr.sibrfdInstbndf().unrfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().unrfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().unrfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().unrfgistfrComponfnt(tiis);
            ToolTipMbnbgfr.sibrfdInstbndf().unrfgistfrComponfnt(tiis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b string rfprfsfntbtion of tiis tbblf. Tiis mftiod
     * Rfturns b string rfprfsfntbtion of tiis tbblf. Tiis mftiod
     * Rfturns b string rfprfsfntbtion of tiis tbblf. Tiis mftiod
     * Rfturns b string rfprfsfntbtion of tiis tbblf. Tiis mftiod
     * Rfturns b string rfprfsfntbtion of tiis tbblf. Tiis mftiod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     *
     *
     *
     *
     *
     * @rfturn  b string rfprfsfntbtion of tiis tbblf
     * @rfturn  b string rfprfsfntbtion of tiis tbblf
     * @rfturn  b string rfprfsfntbtion of tiis tbblf
     * @rfturn  b string rfprfsfntbtion of tiis tbblf
     * @rfturn  b string rfprfsfntbtion of tiis tbblf
     */
     */
     */
     */
     */
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
        String gridColorString = (gridColor != null ?
        String gridColorString = (gridColor != null ?
        String gridColorString = (gridColor != null ?
        String gridColorString = (gridColor != null ?
        String gridColorString = (gridColor != null ?
                                  gridColor.toString() : "");
                                  gridColor.toString() : "");
                                  gridColor.toString() : "");
                                  gridColor.toString() : "");
                                  gridColor.toString() : "");
        String siowHorizontblLinfsString = (siowHorizontblLinfs ?
        String siowHorizontblLinfsString = (siowHorizontblLinfs ?
        String siowHorizontblLinfsString = (siowHorizontblLinfs ?
        String siowHorizontblLinfsString = (siowHorizontblLinfs ?
        String siowHorizontblLinfsString = (siowHorizontblLinfs ?
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
        String siowVfrtidblLinfsString = (siowVfrtidblLinfs ?
        String siowVfrtidblLinfsString = (siowVfrtidblLinfs ?
        String siowVfrtidblLinfsString = (siowVfrtidblLinfs ?
        String siowVfrtidblLinfsString = (siowVfrtidblLinfs ?
        String siowVfrtidblLinfsString = (siowVfrtidblLinfs ?
                                          "truf" : "fblsf");
                                          "truf" : "fblsf");
                                          "truf" : "fblsf");
                                          "truf" : "fblsf");
                                          "truf" : "fblsf");
        String butoRfsizfModfString;
        String butoRfsizfModfString;
        String butoRfsizfModfString;
        String butoRfsizfModfString;
        String butoRfsizfModfString;
        if (butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (butoRfsizfModf == AUTO_RESIZE_OFF) {
        if (butoRfsizfModf == AUTO_RESIZE_OFF) {
            butoRfsizfModfString = "AUTO_RESIZE_OFF";
            butoRfsizfModfString = "AUTO_RESIZE_OFF";
            butoRfsizfModfString = "AUTO_RESIZE_OFF";
            butoRfsizfModfString = "AUTO_RESIZE_OFF";
            butoRfsizfModfString = "AUTO_RESIZE_OFF";
        } flsf if (butoRfsizfModf == AUTO_RESIZE_NEXT_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_NEXT_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_NEXT_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_NEXT_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_NEXT_COLUMN) {
            butoRfsizfModfString = "AUTO_RESIZE_NEXT_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_NEXT_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_NEXT_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_NEXT_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_NEXT_COLUMN";
        } flsf if (butoRfsizfModf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_SUBSEQUENT_COLUMNS) {
            butoRfsizfModfString = "AUTO_RESIZE_SUBSEQUENT_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_SUBSEQUENT_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_SUBSEQUENT_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_SUBSEQUENT_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_SUBSEQUENT_COLUMNS";
        } flsf if (butoRfsizfModf == AUTO_RESIZE_LAST_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_LAST_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_LAST_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_LAST_COLUMN) {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_LAST_COLUMN) {
            butoRfsizfModfString = "AUTO_RESIZE_LAST_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_LAST_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_LAST_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_LAST_COLUMN";
            butoRfsizfModfString = "AUTO_RESIZE_LAST_COLUMN";
        } flsf if (butoRfsizfModf == AUTO_RESIZE_ALL_COLUMNS)  {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_ALL_COLUMNS)  {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_ALL_COLUMNS)  {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_ALL_COLUMNS)  {
        } flsf if (butoRfsizfModf == AUTO_RESIZE_ALL_COLUMNS)  {
            butoRfsizfModfString = "AUTO_RESIZE_ALL_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_ALL_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_ALL_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_ALL_COLUMNS";
            butoRfsizfModfString = "AUTO_RESIZE_ALL_COLUMNS";
        } flsf butoRfsizfModfString = "";
        } flsf butoRfsizfModfString = "";
        } flsf butoRfsizfModfString = "";
        } flsf butoRfsizfModfString = "";
        } flsf butoRfsizfModfString = "";
        String butoCrfbtfColumnsFromModflString = (butoCrfbtfColumnsFromModfl ?
        String butoCrfbtfColumnsFromModflString = (butoCrfbtfColumnsFromModfl ?
        String butoCrfbtfColumnsFromModflString = (butoCrfbtfColumnsFromModfl ?
        String butoCrfbtfColumnsFromModflString = (butoCrfbtfColumnsFromModfl ?
        String butoCrfbtfColumnsFromModflString = (butoCrfbtfColumnsFromModfl ?
                                                   "truf" : "fblsf");
                                                   "truf" : "fblsf");
                                                   "truf" : "fblsf");
                                                   "truf" : "fblsf");
                                                   "truf" : "fblsf");
        String prfffrrfdVifwportSizfString = (prfffrrfdVifwportSizf != null ?
        String prfffrrfdVifwportSizfString = (prfffrrfdVifwportSizf != null ?
        String prfffrrfdVifwportSizfString = (prfffrrfdVifwportSizf != null ?
        String prfffrrfdVifwportSizfString = (prfffrrfdVifwportSizf != null ?
        String prfffrrfdVifwportSizfString = (prfffrrfdVifwportSizf != null ?
                                              prfffrrfdVifwportSizf.toString()
                                              prfffrrfdVifwportSizf.toString()
                                              prfffrrfdVifwportSizf.toString()
                                              prfffrrfdVifwportSizf.toString()
                                              prfffrrfdVifwportSizf.toString()
                                              : "");
                                              : "");
                                              : "");
                                              : "");
                                              : "");
        String rowSflfdtionAllowfdString = (rowSflfdtionAllowfd ?
        String rowSflfdtionAllowfdString = (rowSflfdtionAllowfd ?
        String rowSflfdtionAllowfdString = (rowSflfdtionAllowfd ?
        String rowSflfdtionAllowfdString = (rowSflfdtionAllowfd ?
        String rowSflfdtionAllowfdString = (rowSflfdtionAllowfd ?
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
        String dfllSflfdtionEnbblfdString = (dfllSflfdtionEnbblfd ?
        String dfllSflfdtionEnbblfdString = (dfllSflfdtionEnbblfd ?
        String dfllSflfdtionEnbblfdString = (dfllSflfdtionEnbblfd ?
        String dfllSflfdtionEnbblfdString = (dfllSflfdtionEnbblfd ?
        String dfllSflfdtionEnbblfdString = (dfllSflfdtionEnbblfd ?
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
                                            "truf" : "fblsf");
        String sflfdtionForfgroundString = (sflfdtionForfground != null ?
        String sflfdtionForfgroundString = (sflfdtionForfground != null ?
        String sflfdtionForfgroundString = (sflfdtionForfground != null ?
        String sflfdtionForfgroundString = (sflfdtionForfground != null ?
        String sflfdtionForfgroundString = (sflfdtionForfground != null ?
                                            sflfdtionForfground.toString() :
                                            sflfdtionForfground.toString() :
                                            sflfdtionForfground.toString() :
                                            sflfdtionForfground.toString() :
                                            sflfdtionForfground.toString() :
                                            "");
                                            "");
                                            "");
                                            "");
                                            "");
        String sflfdtionBbdkgroundString = (sflfdtionBbdkground != null ?
        String sflfdtionBbdkgroundString = (sflfdtionBbdkground != null ?
        String sflfdtionBbdkgroundString = (sflfdtionBbdkground != null ?
        String sflfdtionBbdkgroundString = (sflfdtionBbdkground != null ?
        String sflfdtionBbdkgroundString = (sflfdtionBbdkground != null ?
                                            sflfdtionBbdkground.toString() :
                                            sflfdtionBbdkground.toString() :
                                            sflfdtionBbdkground.toString() :
                                            sflfdtionBbdkground.toString() :
                                            sflfdtionBbdkground.toString() :
                                            "");
                                            "");
                                            "");
                                            "");
                                            "");





        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        ",butoCrfbtfColumnsFromModfl=" + butoCrfbtfColumnsFromModflString +
        ",butoCrfbtfColumnsFromModfl=" + butoCrfbtfColumnsFromModflString +
        ",butoCrfbtfColumnsFromModfl=" + butoCrfbtfColumnsFromModflString +
        ",butoCrfbtfColumnsFromModfl=" + butoCrfbtfColumnsFromModflString +
        ",butoCrfbtfColumnsFromModfl=" + butoCrfbtfColumnsFromModflString +
        ",butoRfsizfModf=" + butoRfsizfModfString +
        ",butoRfsizfModf=" + butoRfsizfModfString +
        ",butoRfsizfModf=" + butoRfsizfModfString +
        ",butoRfsizfModf=" + butoRfsizfModfString +
        ",butoRfsizfModf=" + butoRfsizfModfString +
        ",dfllSflfdtionEnbblfd=" + dfllSflfdtionEnbblfdString +
        ",dfllSflfdtionEnbblfd=" + dfllSflfdtionEnbblfdString +
        ",dfllSflfdtionEnbblfd=" + dfllSflfdtionEnbblfdString +
        ",dfllSflfdtionEnbblfd=" + dfllSflfdtionEnbblfdString +
        ",dfllSflfdtionEnbblfd=" + dfllSflfdtionEnbblfdString +
        ",fditingColumn=" + fditingColumn +
        ",fditingColumn=" + fditingColumn +
        ",fditingColumn=" + fditingColumn +
        ",fditingColumn=" + fditingColumn +
        ",fditingColumn=" + fditingColumn +
        ",fditingRow=" + fditingRow +
        ",fditingRow=" + fditingRow +
        ",fditingRow=" + fditingRow +
        ",fditingRow=" + fditingRow +
        ",fditingRow=" + fditingRow +
        ",gridColor=" + gridColorString +
        ",gridColor=" + gridColorString +
        ",gridColor=" + gridColorString +
        ",gridColor=" + gridColorString +
        ",gridColor=" + gridColorString +
        ",prfffrrfdVifwportSizf=" + prfffrrfdVifwportSizfString +
        ",prfffrrfdVifwportSizf=" + prfffrrfdVifwportSizfString +
        ",prfffrrfdVifwportSizf=" + prfffrrfdVifwportSizfString +
        ",prfffrrfdVifwportSizf=" + prfffrrfdVifwportSizfString +
        ",prfffrrfdVifwportSizf=" + prfffrrfdVifwportSizfString +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowMbrgin=" + rowMbrgin +
        ",rowMbrgin=" + rowMbrgin +
        ",rowMbrgin=" + rowMbrgin +
        ",rowMbrgin=" + rowMbrgin +
        ",rowMbrgin=" + rowMbrgin +
        ",rowSflfdtionAllowfd=" + rowSflfdtionAllowfdString +
        ",rowSflfdtionAllowfd=" + rowSflfdtionAllowfdString +
        ",rowSflfdtionAllowfd=" + rowSflfdtionAllowfdString +
        ",rowSflfdtionAllowfd=" + rowSflfdtionAllowfdString +
        ",rowSflfdtionAllowfd=" + rowSflfdtionAllowfdString +
        ",sflfdtionBbdkground=" + sflfdtionBbdkgroundString +
        ",sflfdtionBbdkground=" + sflfdtionBbdkgroundString +
        ",sflfdtionBbdkground=" + sflfdtionBbdkgroundString +
        ",sflfdtionBbdkground=" + sflfdtionBbdkgroundString +
        ",sflfdtionBbdkground=" + sflfdtionBbdkgroundString +
        ",sflfdtionForfground=" + sflfdtionForfgroundString +
        ",sflfdtionForfground=" + sflfdtionForfgroundString +
        ",sflfdtionForfground=" + sflfdtionForfgroundString +
        ",sflfdtionForfground=" + sflfdtionForfgroundString +
        ",sflfdtionForfground=" + sflfdtionForfgroundString +
        ",siowHorizontblLinfs=" + siowHorizontblLinfsString +
        ",siowHorizontblLinfs=" + siowHorizontblLinfsString +
        ",siowHorizontblLinfs=" + siowHorizontblLinfsString +
        ",siowHorizontblLinfs=" + siowHorizontblLinfsString +
        ",siowHorizontblLinfs=" + siowHorizontblLinfsString +
        ",siowVfrtidblLinfs=" + siowVfrtidblLinfsString;
        ",siowVfrtidblLinfs=" + siowVfrtidblLinfsString;
        ",siowVfrtidblLinfs=" + siowVfrtidblLinfsString;
        ",siowVfrtidblLinfs=" + siowVfrtidblLinfsString;
        ",siowVfrtidblLinfs=" + siowVfrtidblLinfsString;
    }
    }
    }
    }
    }





    // Tiis dlbss trbdks dibngfs in tif kfybobrd fodus stbtf. It is usfd
    // Tiis dlbss trbdks dibngfs in tif kfybobrd fodus stbtf. It is usfd
    // Tiis dlbss trbdks dibngfs in tif kfybobrd fodus stbtf. It is usfd
    // Tiis dlbss trbdks dibngfs in tif kfybobrd fodus stbtf. It is usfd
    // Tiis dlbss trbdks dibngfs in tif kfybobrd fodus stbtf. It is usfd
    // wifn tif JTbblf is fditing to dftfrminf wifn to dbndfl tif fdit.
    // wifn tif JTbblf is fditing to dftfrminf wifn to dbndfl tif fdit.
    // wifn tif JTbblf is fditing to dftfrminf wifn to dbndfl tif fdit.
    // wifn tif JTbblf is fditing to dftfrminf wifn to dbndfl tif fdit.
    // wifn tif JTbblf is fditing to dftfrminf wifn to dbndfl tif fdit.
    // If fodus switdifs to b domponfnt outsidf of tif jtbblf, but in tif
    // If fodus switdifs to b domponfnt outsidf of tif jtbblf, but in tif
    // If fodus switdifs to b domponfnt outsidf of tif jtbblf, but in tif
    // If fodus switdifs to b domponfnt outsidf of tif jtbblf, but in tif
    // If fodus switdifs to b domponfnt outsidf of tif jtbblf, but in tif
    // sbmf window, tiis will dbndfl fditing.
    // sbmf window, tiis will dbndfl fditing.
    // sbmf window, tiis will dbndfl fditing.
    // sbmf window, tiis will dbndfl fditing.
    // sbmf window, tiis will dbndfl fditing.
    dlbss CfllEditorRfmovfr implfmfnts PropfrtyCibngfListfnfr {
    dlbss CfllEditorRfmovfr implfmfnts PropfrtyCibngfListfnfr {
    dlbss CfllEditorRfmovfr implfmfnts PropfrtyCibngfListfnfr {
    dlbss CfllEditorRfmovfr implfmfnts PropfrtyCibngfListfnfr {
    dlbss CfllEditorRfmovfr implfmfnts PropfrtyCibngfListfnfr {
        KfybobrdFodusMbnbgfr fodusMbnbgfr;
        KfybobrdFodusMbnbgfr fodusMbnbgfr;
        KfybobrdFodusMbnbgfr fodusMbnbgfr;
        KfybobrdFodusMbnbgfr fodusMbnbgfr;
        KfybobrdFodusMbnbgfr fodusMbnbgfr;





        publid CfllEditorRfmovfr(KfybobrdFodusMbnbgfr fm) {
        publid CfllEditorRfmovfr(KfybobrdFodusMbnbgfr fm) {
        publid CfllEditorRfmovfr(KfybobrdFodusMbnbgfr fm) {
        publid CfllEditorRfmovfr(KfybobrdFodusMbnbgfr fm) {
        publid CfllEditorRfmovfr(KfybobrdFodusMbnbgfr fm) {
            tiis.fodusMbnbgfr = fm;
            tiis.fodusMbnbgfr = fm;
            tiis.fodusMbnbgfr = fm;
            tiis.fodusMbnbgfr = fm;
            tiis.fodusMbnbgfr = fm;
        }
        }
        }
        }
        }





        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
            if (!isEditing() || gftClifntPropfrty("tfrminbtfEditOnFodusLost") != Boolfbn.TRUE) {
            if (!isEditing() || gftClifntPropfrty("tfrminbtfEditOnFodusLost") != Boolfbn.TRUE) {
            if (!isEditing() || gftClifntPropfrty("tfrminbtfEditOnFodusLost") != Boolfbn.TRUE) {
            if (!isEditing() || gftClifntPropfrty("tfrminbtfEditOnFodusLost") != Boolfbn.TRUE) {
            if (!isEditing() || gftClifntPropfrty("tfrminbtfEditOnFodusLost") != Boolfbn.TRUE) {
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;
            }
            }
            }
            }
            }





            Componfnt d = fodusMbnbgfr.gftPfrmbnfntFodusOwnfr();
            Componfnt d = fodusMbnbgfr.gftPfrmbnfntFodusOwnfr();
            Componfnt d = fodusMbnbgfr.gftPfrmbnfntFodusOwnfr();
            Componfnt d = fodusMbnbgfr.gftPfrmbnfntFodusOwnfr();
            Componfnt d = fodusMbnbgfr.gftPfrmbnfntFodusOwnfr();
            wiilf (d != null) {
            wiilf (d != null) {
            wiilf (d != null) {
            wiilf (d != null) {
            wiilf (d != null) {
                if (d == JTbblf.tiis) {
                if (d == JTbblf.tiis) {
                if (d == JTbblf.tiis) {
                if (d == JTbblf.tiis) {
                if (d == JTbblf.tiis) {
                    // fodus rfmbins insidf tif tbblf
                    // fodus rfmbins insidf tif tbblf
                    // fodus rfmbins insidf tif tbblf
                    // fodus rfmbins insidf tif tbblf
                    // fodus rfmbins insidf tif tbblf
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                } flsf if ((d instbndfof Window) ||
                } flsf if ((d instbndfof Window) ||
                } flsf if ((d instbndfof Window) ||
                } flsf if ((d instbndfof Window) ||
                } flsf if ((d instbndfof Window) ||
                           (d instbndfof Applft && d.gftPbrfnt() == null)) {
                           (d instbndfof Applft && d.gftPbrfnt() == null)) {
                           (d instbndfof Applft && d.gftPbrfnt() == null)) {
                           (d instbndfof Applft && d.gftPbrfnt() == null)) {
                           (d instbndfof Applft && d.gftPbrfnt() == null)) {
                    if (d == SwingUtilitifs.gftRoot(JTbblf.tiis)) {
                    if (d == SwingUtilitifs.gftRoot(JTbblf.tiis)) {
                    if (d == SwingUtilitifs.gftRoot(JTbblf.tiis)) {
                    if (d == SwingUtilitifs.gftRoot(JTbblf.tiis)) {
                    if (d == SwingUtilitifs.gftRoot(JTbblf.tiis)) {
                        if (!gftCfllEditor().stopCfllEditing()) {
                        if (!gftCfllEditor().stopCfllEditing()) {
                        if (!gftCfllEditor().stopCfllEditing()) {
                        if (!gftCfllEditor().stopCfllEditing()) {
                        if (!gftCfllEditor().stopCfllEditing()) {
                            gftCfllEditor().dbndflCfllEditing();
                            gftCfllEditor().dbndflCfllEditing();
                            gftCfllEditor().dbndflCfllEditing();
                            gftCfllEditor().dbndflCfllEditing();
                            gftCfllEditor().dbndflCfllEditing();
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }
                d = d.gftPbrfnt();
                d = d.gftPbrfnt();
                d = d.gftPbrfnt();
                d = d.gftPbrfnt();
                d = d.gftPbrfnt();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





/////////////////
/////////////////
/////////////////
/////////////////
/////////////////
// Printing Support
// Printing Support
// Printing Support
// Printing Support
// Printing Support
/////////////////
/////////////////
/////////////////
/////////////////
/////////////////





    /**
    /**
    /**
    /**
    /**
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * tiis <dodf>JTbblf</dodf> in modf <dodf>PrintModf.FIT_WIDTH</dodf>,
     * tiis <dodf>JTbblf</dodf> in modf <dodf>PrintModf.FIT_WIDTH</dodf>,
     * tiis <dodf>JTbblf</dodf> in modf <dodf>PrintModf.FIT_WIDTH</dodf>,
     * tiis <dodf>JTbblf</dodf> in modf <dodf>PrintModf.FIT_WIDTH</dodf>,
     * tiis <dodf>JTbblf</dodf> in modf <dodf>PrintModf.FIT_WIDTH</dodf>,
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     *
     *
     *
     *
     *
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     *
     *
     *
     *
     *
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid boolfbn print() tirows PrintfrExdfption {
    publid boolfbn print() tirows PrintfrExdfption {
    publid boolfbn print() tirows PrintfrExdfption {
    publid boolfbn print() tirows PrintfrExdfption {
    publid boolfbn print() tirows PrintfrExdfption {





        rfturn print(PrintModf.FIT_WIDTH);
        rfturn print(PrintModf.FIT_WIDTH);
        rfturn print(PrintModf.FIT_WIDTH);
        rfturn print(PrintModf.FIT_WIDTH);
        rfturn print(PrintModf.FIT_WIDTH);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * witi no ifbdfr or footfr tfxt. A modbl progrfss diblog, witi bn bbort
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * option, will bf siown for tif durbtion of printing.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     *
     *
     *
     *
     *
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     *
     *
     *
     *
     *
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid boolfbn print(PrintModf printModf) tirows PrintfrExdfption {
    publid boolfbn print(PrintModf printModf) tirows PrintfrExdfption {
    publid boolfbn print(PrintModf printModf) tirows PrintfrExdfption {
    publid boolfbn print(PrintModf printModf) tirows PrintfrExdfption {
    publid boolfbn print(PrintModf printModf) tirows PrintfrExdfption {





        rfturn print(printModf, null, null);
        rfturn print(printModf, null, null);
        rfturn print(printModf, null, null);
        rfturn print(printModf, null, null);
        rfturn print(printModf, null, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * A donvfnifndf mftiod tibt displbys b printing diblog, bnd tifn prints
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * tiis <dodf>JTbblf</dodf> in tif givfn printing modf,
     * witi tif spfdififd ifbdfr bnd footfr tfxt. A modbl progrfss diblog,
     * witi tif spfdififd ifbdfr bnd footfr tfxt. A modbl progrfss diblog,
     * witi tif spfdififd ifbdfr bnd footfr tfxt. A modbl progrfss diblog,
     * witi tif spfdififd ifbdfr bnd footfr tfxt. A modbl progrfss diblog,
     * witi tif spfdififd ifbdfr bnd footfr tfxt. A modbl progrfss diblog,
     * witi bn bbort option, will bf siown for tif durbtion of printing.
     * witi bn bbort option, will bf siown for tif durbtion of printing.
     * witi bn bbort option, will bf siown for tif durbtion of printing.
     * witi bn bbort option, will bf siown for tif durbtion of printing.
     * witi bn bbort option, will bf siown for tif durbtion of printing.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * Notf: In ifbdlfss modf, no diblogs brf siown bnd printing
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     * oddurs on tif dffbult printfr.
     *
     *
     *
     *
     *
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     *                          or null for nonf
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     *
     *
     *
     *
     *
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt footfrFormbt) tirows PrintfrExdfption {
                         MfssbgfFormbt footfrFormbt) tirows PrintfrExdfption {
                         MfssbgfFormbt footfrFormbt) tirows PrintfrExdfption {
                         MfssbgfFormbt footfrFormbt) tirows PrintfrExdfption {
                         MfssbgfFormbt footfrFormbt) tirows PrintfrExdfption {





        boolfbn siowDiblogs = !GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn siowDiblogs = !GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn siowDiblogs = !GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn siowDiblogs = !GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn siowDiblogs = !GrbpiidsEnvironmfnt.isHfbdlfss();
        rfturn print(printModf, ifbdfrFormbt, footfrFormbt,
        rfturn print(printModf, ifbdfrFormbt, footfrFormbt,
        rfturn print(printModf, ifbdfrFormbt, footfrFormbt,
        rfturn print(printModf, ifbdfrFormbt, footfrFormbt,
        rfturn print(printModf, ifbdfrFormbt, footfrFormbt,
                     siowDiblogs, null, siowDiblogs);
                     siowDiblogs, null, siowDiblogs);
                     siowDiblogs, null, siowDiblogs);
                     siowDiblogs, null, siowDiblogs);
                     siowDiblogs, null, siowDiblogs);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Prints tiis tbblf, bs spfdififd by tif fully ffbturfd
     * Prints tiis tbblf, bs spfdififd by tif fully ffbturfd
     * Prints tiis tbblf, bs spfdififd by tif fully ffbturfd
     * Prints tiis tbblf, bs spfdififd by tif fully ffbturfd
     * Prints tiis tbblf, bs spfdififd by tif fully ffbturfd
     * {@link #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * {@link #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * {@link #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * {@link #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * {@link #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf) print}
     * boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf) print}
     * boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf) print}
     * boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf) print}
     * boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf) print}
     * mftiod, witi tif dffbult printfr spfdififd bs tif print sfrvidf.
     * mftiod, witi tif dffbult printfr spfdififd bs tif print sfrvidf.
     * mftiod, witi tif dffbult printfr spfdififd bs tif print sfrvidf.
     * mftiod, witi tif dffbult printfr spfdififd bs tif print sfrvidf.
     * mftiod, witi tif dffbult printfr spfdififd bs tif print sfrvidf.
     *
     *
     *
     *
     *
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     * @tirows SfdurityExdfption if tiis tirfbd is not bllowfd to
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     *                           initibtf b print job rfqufst
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn, PrintSfrvidf)
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     *
     *
     *
     *
     *
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         boolfbn intfrbdtivf) tirows PrintfrExdfption,
                         boolfbn intfrbdtivf) tirows PrintfrExdfption,
                         boolfbn intfrbdtivf) tirows PrintfrExdfption,
                         boolfbn intfrbdtivf) tirows PrintfrExdfption,
                         boolfbn intfrbdtivf) tirows PrintfrExdfption,
                                                     HfbdlfssExdfption {
                                                     HfbdlfssExdfption {
                                                     HfbdlfssExdfption {
                                                     HfbdlfssExdfption {
                                                     HfbdlfssExdfption {





        rfturn print(printModf,
        rfturn print(printModf,
        rfturn print(printModf,
        rfturn print(printModf,
        rfturn print(printModf,
                     ifbdfrFormbt,
                     ifbdfrFormbt,
                     ifbdfrFormbt,
                     ifbdfrFormbt,
                     ifbdfrFormbt,
                     footfrFormbt,
                     footfrFormbt,
                     footfrFormbt,
                     footfrFormbt,
                     footfrFormbt,
                     siowPrintDiblog,
                     siowPrintDiblog,
                     siowPrintDiblog,
                     siowPrintDiblog,
                     siowPrintDiblog,
                     bttr,
                     bttr,
                     bttr,
                     bttr,
                     bttr,
                     intfrbdtivf,
                     intfrbdtivf,
                     intfrbdtivf,
                     intfrbdtivf,
                     intfrbdtivf,
                     null);
                     null);
                     null);
                     null);
                     null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Prints tiis <dodf>JTbblf</dodf>. Tbkfs stfps tibt tif mbjority of
     * Prints tiis <dodf>JTbblf</dodf>. Tbkfs stfps tibt tif mbjority of
     * Prints tiis <dodf>JTbblf</dodf>. Tbkfs stfps tibt tif mbjority of
     * Prints tiis <dodf>JTbblf</dodf>. Tbkfs stfps tibt tif mbjority of
     * Prints tiis <dodf>JTbblf</dodf>. Tbkfs stfps tibt tif mbjority of
     * dfvflopfrs would tbkf in ordfr to print b <dodf>JTbblf</dodf>.
     * dfvflopfrs would tbkf in ordfr to print b <dodf>JTbblf</dodf>.
     * dfvflopfrs would tbkf in ordfr to print b <dodf>JTbblf</dodf>.
     * dfvflopfrs would tbkf in ordfr to print b <dodf>JTbblf</dodf>.
     * dfvflopfrs would tbkf in ordfr to print b <dodf>JTbblf</dodf>.
     * In siort, it prfpbrfs tif tbblf, dblls <dodf>gftPrintbblf</dodf> to
     * In siort, it prfpbrfs tif tbblf, dblls <dodf>gftPrintbblf</dodf> to
     * In siort, it prfpbrfs tif tbblf, dblls <dodf>gftPrintbblf</dodf> to
     * In siort, it prfpbrfs tif tbblf, dblls <dodf>gftPrintbblf</dodf> to
     * In siort, it prfpbrfs tif tbblf, dblls <dodf>gftPrintbblf</dodf> to
     * fftdi bn bppropribtf <dodf>Printbblf</dodf>, bnd tifn sfnds it to tif
     * fftdi bn bppropribtf <dodf>Printbblf</dodf>, bnd tifn sfnds it to tif
     * fftdi bn bppropribtf <dodf>Printbblf</dodf>, bnd tifn sfnds it to tif
     * fftdi bn bppropribtf <dodf>Printbblf</dodf>, bnd tifn sfnds it to tif
     * fftdi bn bppropribtf <dodf>Printbblf</dodf>, bnd tifn sfnds it to tif
     * printfr.
     * printfr.
     * printfr.
     * printfr.
     * printfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * A <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr or not
     * A <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr or not
     * A <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr or not
     * A <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr or not
     * A <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr or not
     * b printing diblog is displbyfd to tif usfr. Wifn it is, tif usfr mby
     * b printing diblog is displbyfd to tif usfr. Wifn it is, tif usfr mby
     * b printing diblog is displbyfd to tif usfr. Wifn it is, tif usfr mby
     * b printing diblog is displbyfd to tif usfr. Wifn it is, tif usfr mby
     * b printing diblog is displbyfd to tif usfr. Wifn it is, tif usfr mby
     * usf tif diblog to dibngf tif dfstinbtion printfr or printing bttributfs,
     * usf tif diblog to dibngf tif dfstinbtion printfr or printing bttributfs,
     * usf tif diblog to dibngf tif dfstinbtion printfr or printing bttributfs,
     * usf tif diblog to dibngf tif dfstinbtion printfr or printing bttributfs,
     * usf tif diblog to dibngf tif dfstinbtion printfr or printing bttributfs,
     * or fvfn to dbndfl tif print. Anotifr two pbrbmftfrs bllow for b
     * or fvfn to dbndfl tif print. Anotifr two pbrbmftfrs bllow for b
     * or fvfn to dbndfl tif print. Anotifr two pbrbmftfrs bllow for b
     * or fvfn to dbndfl tif print. Anotifr two pbrbmftfrs bllow for b
     * or fvfn to dbndfl tif print. Anotifr two pbrbmftfrs bllow for b
     * <dodf>PrintSfrvidf</dodf> bnd printing bttributfs to bf spfdififd.
     * <dodf>PrintSfrvidf</dodf> bnd printing bttributfs to bf spfdififd.
     * <dodf>PrintSfrvidf</dodf> bnd printing bttributfs to bf spfdififd.
     * <dodf>PrintSfrvidf</dodf> bnd printing bttributfs to bf spfdififd.
     * <dodf>PrintSfrvidf</dodf> bnd printing bttributfs to bf spfdififd.
     * Tifsf pbrbmftfrs dbn bf usfd fitifr to providf initibl vblufs for tif
     * Tifsf pbrbmftfrs dbn bf usfd fitifr to providf initibl vblufs for tif
     * Tifsf pbrbmftfrs dbn bf usfd fitifr to providf initibl vblufs for tif
     * Tifsf pbrbmftfrs dbn bf usfd fitifr to providf initibl vblufs for tif
     * Tifsf pbrbmftfrs dbn bf usfd fitifr to providf initibl vblufs for tif
     * print diblog, or to spfdify vblufs wifn tif diblog is not siown.
     * print diblog, or to spfdify vblufs wifn tif diblog is not siown.
     * print diblog, or to spfdify vblufs wifn tif diblog is not siown.
     * print diblog, or to spfdify vblufs wifn tif diblog is not siown.
     * print diblog, or to spfdify vblufs wifn tif diblog is not siown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * A sfdond <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr
     * A sfdond <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr
     * A sfdond <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr
     * A sfdond <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr
     * A sfdond <dodf>boolfbn</dodf> pbrbmftfr bllows you to spfdify wiftifr
     * or not to pfrform printing in bn intfrbdtivf modf. If <dodf>truf</dodf>,
     * or not to pfrform printing in bn intfrbdtivf modf. If <dodf>truf</dodf>,
     * or not to pfrform printing in bn intfrbdtivf modf. If <dodf>truf</dodf>,
     * or not to pfrform printing in bn intfrbdtivf modf. If <dodf>truf</dodf>,
     * or not to pfrform printing in bn intfrbdtivf modf. If <dodf>truf</dodf>,
     * b modbl progrfss diblog, witi bn bbort option, is displbyfd for tif
     * b modbl progrfss diblog, witi bn bbort option, is displbyfd for tif
     * b modbl progrfss diblog, witi bn bbort option, is displbyfd for tif
     * b modbl progrfss diblog, witi bn bbort option, is displbyfd for tif
     * b modbl progrfss diblog, witi bn bbort option, is displbyfd for tif
     * durbtion of printing . Tiis diblog blso prfvfnts bny usfr bdtion wiidi
     * durbtion of printing . Tiis diblog blso prfvfnts bny usfr bdtion wiidi
     * durbtion of printing . Tiis diblog blso prfvfnts bny usfr bdtion wiidi
     * durbtion of printing . Tiis diblog blso prfvfnts bny usfr bdtion wiidi
     * durbtion of printing . Tiis diblog blso prfvfnts bny usfr bdtion wiidi
     * mby bfffdt tif tbblf. Howfvfr, it dbn not prfvfnt tif tbblf from bfing
     * mby bfffdt tif tbblf. Howfvfr, it dbn not prfvfnt tif tbblf from bfing
     * mby bfffdt tif tbblf. Howfvfr, it dbn not prfvfnt tif tbblf from bfing
     * mby bfffdt tif tbblf. Howfvfr, it dbn not prfvfnt tif tbblf from bfing
     * mby bfffdt tif tbblf. Howfvfr, it dbn not prfvfnt tif tbblf from bfing
     * modififd by dodf (for fxbmplf, bnotifr tirfbd tibt posts updbtfs using
     * modififd by dodf (for fxbmplf, bnotifr tirfbd tibt posts updbtfs using
     * modififd by dodf (for fxbmplf, bnotifr tirfbd tibt posts updbtfs using
     * modififd by dodf (for fxbmplf, bnotifr tirfbd tibt posts updbtfs using
     * modififd by dodf (for fxbmplf, bnotifr tirfbd tibt posts updbtfs using
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf>). It is tifrfforf tif
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf>). It is tifrfforf tif
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf>). It is tifrfforf tif
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf>). It is tifrfforf tif
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf>). It is tifrfforf tif
     * rfsponsibility of tif dfvflopfr to fnsurf tibt no otifr dodf modififs
     * rfsponsibility of tif dfvflopfr to fnsurf tibt no otifr dodf modififs
     * rfsponsibility of tif dfvflopfr to fnsurf tibt no otifr dodf modififs
     * rfsponsibility of tif dfvflopfr to fnsurf tibt no otifr dodf modififs
     * rfsponsibility of tif dfvflopfr to fnsurf tibt no otifr dodf modififs
     * tif tbblf in bny wby during printing (invblid modifidbtions indludf
     * tif tbblf in bny wby during printing (invblid modifidbtions indludf
     * tif tbblf in bny wby during printing (invblid modifidbtions indludf
     * tif tbblf in bny wby during printing (invblid modifidbtions indludf
     * tif tbblf in bny wby during printing (invblid modifidbtions indludf
     * dibngfs in: sizf, rfndfrfrs, or undfrlying dbtb). Printing bfibvior is
     * dibngfs in: sizf, rfndfrfrs, or undfrlying dbtb). Printing bfibvior is
     * dibngfs in: sizf, rfndfrfrs, or undfrlying dbtb). Printing bfibvior is
     * dibngfs in: sizf, rfndfrfrs, or undfrlying dbtb). Printing bfibvior is
     * dibngfs in: sizf, rfndfrfrs, or undfrlying dbtb). Printing bfibvior is
     * undffinfd wifn tif tbblf is dibngfd during printing.
     * undffinfd wifn tif tbblf is dibngfd during printing.
     * undffinfd wifn tif tbblf is dibngfd during printing.
     * undffinfd wifn tif tbblf is dibngfd during printing.
     * undffinfd wifn tif tbblf is dibngfd during printing.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If <dodf>fblsf</dodf> is spfdififd for tiis pbrbmftfr, no diblog will
     * If <dodf>fblsf</dodf> is spfdififd for tiis pbrbmftfr, no diblog will
     * If <dodf>fblsf</dodf> is spfdififd for tiis pbrbmftfr, no diblog will
     * If <dodf>fblsf</dodf> is spfdififd for tiis pbrbmftfr, no diblog will
     * If <dodf>fblsf</dodf> is spfdififd for tiis pbrbmftfr, no diblog will
     * bf displbyfd bnd printing will bfgin immfdibtfly on tif fvfnt-dispbtdi
     * bf displbyfd bnd printing will bfgin immfdibtfly on tif fvfnt-dispbtdi
     * bf displbyfd bnd printing will bfgin immfdibtfly on tif fvfnt-dispbtdi
     * bf displbyfd bnd printing will bfgin immfdibtfly on tif fvfnt-dispbtdi
     * bf displbyfd bnd printing will bfgin immfdibtfly on tif fvfnt-dispbtdi
     * tirfbd. Tiis blodks bny otifr fvfnts, indluding rfpbints, from bfing
     * tirfbd. Tiis blodks bny otifr fvfnts, indluding rfpbints, from bfing
     * tirfbd. Tiis blodks bny otifr fvfnts, indluding rfpbints, from bfing
     * tirfbd. Tiis blodks bny otifr fvfnts, indluding rfpbints, from bfing
     * tirfbd. Tiis blodks bny otifr fvfnts, indluding rfpbints, from bfing
     * prodfssfd until printing is domplftf. Altiougi tiis ffffdtivfly prfvfnts
     * prodfssfd until printing is domplftf. Altiougi tiis ffffdtivfly prfvfnts
     * prodfssfd until printing is domplftf. Altiougi tiis ffffdtivfly prfvfnts
     * prodfssfd until printing is domplftf. Altiougi tiis ffffdtivfly prfvfnts
     * prodfssfd until printing is domplftf. Altiougi tiis ffffdtivfly prfvfnts
     * tif tbblf from bfing dibngfd, it dofsn't providf b good usfr fxpfrifndf.
     * tif tbblf from bfing dibngfd, it dofsn't providf b good usfr fxpfrifndf.
     * tif tbblf from bfing dibngfd, it dofsn't providf b good usfr fxpfrifndf.
     * tif tbblf from bfing dibngfd, it dofsn't providf b good usfr fxpfrifndf.
     * tif tbblf from bfing dibngfd, it dofsn't providf b good usfr fxpfrifndf.
     * For tiis rfbson, spfdifying <dodf>fblsf</dodf> is only rfdommfndfd wifn
     * For tiis rfbson, spfdifying <dodf>fblsf</dodf> is only rfdommfndfd wifn
     * For tiis rfbson, spfdifying <dodf>fblsf</dodf> is only rfdommfndfd wifn
     * For tiis rfbson, spfdifying <dodf>fblsf</dodf> is only rfdommfndfd wifn
     * For tiis rfbson, spfdifying <dodf>fblsf</dodf> is only rfdommfndfd wifn
     * printing from bn bpplidbtion witi no visiblf GUI.
     * printing from bn bpplidbtion witi no visiblf GUI.
     * printing from bn bpplidbtion witi no visiblf GUI.
     * printing from bn bpplidbtion witi no visiblf GUI.
     * printing from bn bpplidbtion witi no visiblf GUI.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf: Attfmpting to siow tif printing diblog or run intfrbdtivfly, wiilf
     * Notf: Attfmpting to siow tif printing diblog or run intfrbdtivfly, wiilf
     * Notf: Attfmpting to siow tif printing diblog or run intfrbdtivfly, wiilf
     * Notf: Attfmpting to siow tif printing diblog or run intfrbdtivfly, wiilf
     * Notf: Attfmpting to siow tif printing diblog or run intfrbdtivfly, wiilf
     * in ifbdlfss modf, will rfsult in b <dodf>HfbdlfssExdfption</dodf>.
     * in ifbdlfss modf, will rfsult in b <dodf>HfbdlfssExdfption</dodf>.
     * in ifbdlfss modf, will rfsult in b <dodf>HfbdlfssExdfption</dodf>.
     * in ifbdlfss modf, will rfsult in b <dodf>HfbdlfssExdfption</dodf>.
     * in ifbdlfss modf, will rfsult in b <dodf>HfbdlfssExdfption</dodf>.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Bfforf fftdiing tif printbblf, tiis mftiod will grbdffully tfrminbtf
     * Bfforf fftdiing tif printbblf, tiis mftiod will grbdffully tfrminbtf
     * Bfforf fftdiing tif printbblf, tiis mftiod will grbdffully tfrminbtf
     * Bfforf fftdiing tif printbblf, tiis mftiod will grbdffully tfrminbtf
     * Bfforf fftdiing tif printbblf, tiis mftiod will grbdffully tfrminbtf
     * fditing, if nfdfssbry, to prfvfnt bn fditor from siowing in tif printfd
     * fditing, if nfdfssbry, to prfvfnt bn fditor from siowing in tif printfd
     * fditing, if nfdfssbry, to prfvfnt bn fditor from siowing in tif printfd
     * fditing, if nfdfssbry, to prfvfnt bn fditor from siowing in tif printfd
     * fditing, if nfdfssbry, to prfvfnt bn fditor from siowing in tif printfd
     * rfsult. Additionblly, <dodf>JTbblf</dodf> will prfpbrf its rfndfrfrs
     * rfsult. Additionblly, <dodf>JTbblf</dodf> will prfpbrf its rfndfrfrs
     * rfsult. Additionblly, <dodf>JTbblf</dodf> will prfpbrf its rfndfrfrs
     * rfsult. Additionblly, <dodf>JTbblf</dodf> will prfpbrf its rfndfrfrs
     * rfsult. Additionblly, <dodf>JTbblf</dodf> will prfpbrf its rfndfrfrs
     * during printing sudi tibt sflfdtion bnd fodus brf not indidbtfd.
     * during printing sudi tibt sflfdtion bnd fodus brf not indidbtfd.
     * during printing sudi tibt sflfdtion bnd fodus brf not indidbtfd.
     * during printing sudi tibt sflfdtion bnd fodus brf not indidbtfd.
     * during printing sudi tibt sflfdtion bnd fodus brf not indidbtfd.
     * As fbr bs dustomizing furtifr iow tif tbblf looks in tif printout,
     * As fbr bs dustomizing furtifr iow tif tbblf looks in tif printout,
     * As fbr bs dustomizing furtifr iow tif tbblf looks in tif printout,
     * As fbr bs dustomizing furtifr iow tif tbblf looks in tif printout,
     * As fbr bs dustomizing furtifr iow tif tbblf looks in tif printout,
     * dfvflopfrs dbn providf dustom rfndfrfrs or pbint dodf tibt donditionblizf
     * dfvflopfrs dbn providf dustom rfndfrfrs or pbint dodf tibt donditionblizf
     * dfvflopfrs dbn providf dustom rfndfrfrs or pbint dodf tibt donditionblizf
     * dfvflopfrs dbn providf dustom rfndfrfrs or pbint dodf tibt donditionblizf
     * dfvflopfrs dbn providf dustom rfndfrfrs or pbint dodf tibt donditionblizf
     * on tif vbluf of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}.
     * on tif vbluf of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}.
     * on tif vbluf of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}.
     * on tif vbluf of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}.
     * on tif vbluf of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Sff {@link #gftPrintbblf} for morf dfsdription on iow tif tbblf is
     * Sff {@link #gftPrintbblf} for morf dfsdription on iow tif tbblf is
     * Sff {@link #gftPrintbblf} for morf dfsdription on iow tif tbblf is
     * Sff {@link #gftPrintbblf} for morf dfsdription on iow tif tbblf is
     * Sff {@link #gftPrintbblf} for morf dfsdription on iow tif tbblf is
     * printfd.
     * printfd.
     * printfd.
     * printfd.
     * printfd.
     *
     *
     *
     *
     *
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf        tif printing modf tibt tif printbblf siould usf
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  ifbdfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          to bf usfd in printing b ifbdfr,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     * @pbrbm  footfrFormbt     b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          to bf usfd in printing b footfr,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  siowPrintDiblog  wiftifr or not to displby b print diblog
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     * @pbrbm  bttr             b <dodf>PrintRfqufstAttributfSft</dodf>
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          spfdifying bny printing bttributfs,
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     *                          or <dodf>null</dodf> for nonf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  intfrbdtivf      wiftifr or not to print in bn intfrbdtivf modf
     * @pbrbm  sfrvidf          tif dfstinbtion <dodf>PrintSfrvidf</dodf>,
     * @pbrbm  sfrvidf          tif dfstinbtion <dodf>PrintSfrvidf</dodf>,
     * @pbrbm  sfrvidf          tif dfstinbtion <dodf>PrintSfrvidf</dodf>,
     * @pbrbm  sfrvidf          tif dfstinbtion <dodf>PrintSfrvidf</dodf>,
     * @pbrbm  sfrvidf          tif dfstinbtion <dodf>PrintSfrvidf</dodf>,
     *                          or <dodf>null</dodf> to usf tif dffbult printfr
     *                          or <dodf>null</dodf> to usf tif dffbult printfr
     *                          or <dodf>null</dodf> to usf tif dffbult printfr
     *                          or <dodf>null</dodf> to usf tif dffbult printfr
     *                          or <dodf>null</dodf> to usf tif dffbult printfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @rfturn truf, unlfss printing is dbndfllfd by tif usfr
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     * @tirows HfbdlfssExdfption if tif mftiod is bskfd to siow b printing
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           diblog or run intfrbdtivfly, bnd
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           <dodf>GrbpiidsEnvironmfnt.isHfbdlfss</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     *                           rfturns <dodf>truf</dodf>
     * @tirows  SfdurityExdfption if b sfdurity mbnbgfr fxists bnd its
     * @tirows  SfdurityExdfption if b sfdurity mbnbgfr fxists bnd its
     * @tirows  SfdurityExdfption if b sfdurity mbnbgfr fxists bnd its
     * @tirows  SfdurityExdfption if b sfdurity mbnbgfr fxists bnd its
     * @tirows  SfdurityExdfption if b sfdurity mbnbgfr fxists bnd its
     *          {@link jbvb.lbng.SfdurityMbnbgfr#difdkPrintJobAddfss}
     *          {@link jbvb.lbng.SfdurityMbnbgfr#difdkPrintJobAddfss}
     *          {@link jbvb.lbng.SfdurityMbnbgfr#difdkPrintJobAddfss}
     *          {@link jbvb.lbng.SfdurityMbnbgfr#difdkPrintJobAddfss}
     *          {@link jbvb.lbng.SfdurityMbnbgfr#difdkPrintJobAddfss}
     *          mftiod disbllows tiis tirfbd from drfbting b print job rfqufst
     *          mftiod disbllows tiis tirfbd from drfbting b print job rfqufst
     *          mftiod disbllows tiis tirfbd from drfbting b print job rfqufst
     *          mftiod disbllows tiis tirfbd from drfbting b print job rfqufst
     *          mftiod disbllows tiis tirfbd from drfbting b print job rfqufst
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     * @tirows PrintfrExdfption if bn frror in tif print systfm dbusfs tif job
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     *                          to bf bbortfd
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff #gftPrintbblf
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     *
     *
     *
     *
     *
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
    publid boolfbn print(PrintModf printModf,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt ifbdfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         MfssbgfFormbt footfrFormbt,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         boolfbn siowPrintDiblog,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         PrintRfqufstAttributfSft bttr,
                         boolfbn intfrbdtivf,
                         boolfbn intfrbdtivf,
                         boolfbn intfrbdtivf,
                         boolfbn intfrbdtivf,
                         boolfbn intfrbdtivf,
                         PrintSfrvidf sfrvidf) tirows PrintfrExdfption,
                         PrintSfrvidf sfrvidf) tirows PrintfrExdfption,
                         PrintSfrvidf sfrvidf) tirows PrintfrExdfption,
                         PrintSfrvidf sfrvidf) tirows PrintfrExdfption,
                         PrintSfrvidf sfrvidf) tirows PrintfrExdfption,
                                                      HfbdlfssExdfption {
                                                      HfbdlfssExdfption {
                                                      HfbdlfssExdfption {
                                                      HfbdlfssExdfption {
                                                      HfbdlfssExdfption {





        // domplbin fbrly if bn invblid pbrbmftfr is spfdififd for ifbdlfss modf
        // domplbin fbrly if bn invblid pbrbmftfr is spfdififd for ifbdlfss modf
        // domplbin fbrly if bn invblid pbrbmftfr is spfdififd for ifbdlfss modf
        // domplbin fbrly if bn invblid pbrbmftfr is spfdififd for ifbdlfss modf
        // domplbin fbrly if bn invblid pbrbmftfr is spfdififd for ifbdlfss modf
        boolfbn isHfbdlfss = GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn isHfbdlfss = GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn isHfbdlfss = GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn isHfbdlfss = GrbpiidsEnvironmfnt.isHfbdlfss();
        boolfbn isHfbdlfss = GrbpiidsEnvironmfnt.isHfbdlfss();
        if (isHfbdlfss) {
        if (isHfbdlfss) {
        if (isHfbdlfss) {
        if (isHfbdlfss) {
        if (isHfbdlfss) {
            if (siowPrintDiblog) {
            if (siowPrintDiblog) {
            if (siowPrintDiblog) {
            if (siowPrintDiblog) {
            if (siowPrintDiblog) {
                tirow nfw HfbdlfssExdfption("Cbn't siow print diblog.");
                tirow nfw HfbdlfssExdfption("Cbn't siow print diblog.");
                tirow nfw HfbdlfssExdfption("Cbn't siow print diblog.");
                tirow nfw HfbdlfssExdfption("Cbn't siow print diblog.");
                tirow nfw HfbdlfssExdfption("Cbn't siow print diblog.");
            }
            }
            }
            }
            }





            if (intfrbdtivf) {
            if (intfrbdtivf) {
            if (intfrbdtivf) {
            if (intfrbdtivf) {
            if (intfrbdtivf) {
                tirow nfw HfbdlfssExdfption("Cbn't run intfrbdtivfly.");
                tirow nfw HfbdlfssExdfption("Cbn't run intfrbdtivfly.");
                tirow nfw HfbdlfssExdfption("Cbn't run intfrbdtivfly.");
                tirow nfw HfbdlfssExdfption("Cbn't run intfrbdtivfly.");
                tirow nfw HfbdlfssExdfption("Cbn't run intfrbdtivfly.");
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        // Gft b PrintfrJob.
        // Gft b PrintfrJob.
        // Gft b PrintfrJob.
        // Gft b PrintfrJob.
        // Gft b PrintfrJob.
        // Do tiis bfforf bnytiing witi sidf-ffffdts sindf it mby tirow b
        // Do tiis bfforf bnytiing witi sidf-ffffdts sindf it mby tirow b
        // Do tiis bfforf bnytiing witi sidf-ffffdts sindf it mby tirow b
        // Do tiis bfforf bnytiing witi sidf-ffffdts sindf it mby tirow b
        // Do tiis bfforf bnytiing witi sidf-ffffdts sindf it mby tirow b
        // sfdurity fxdfption - in wiidi dbsf wf don't wbnt to do bnytiing flsf.
        // sfdurity fxdfption - in wiidi dbsf wf don't wbnt to do bnytiing flsf.
        // sfdurity fxdfption - in wiidi dbsf wf don't wbnt to do bnytiing flsf.
        // sfdurity fxdfption - in wiidi dbsf wf don't wbnt to do bnytiing flsf.
        // sfdurity fxdfption - in wiidi dbsf wf don't wbnt to do bnytiing flsf.
        finbl PrintfrJob job = PrintfrJob.gftPrintfrJob();
        finbl PrintfrJob job = PrintfrJob.gftPrintfrJob();
        finbl PrintfrJob job = PrintfrJob.gftPrintfrJob();
        finbl PrintfrJob job = PrintfrJob.gftPrintfrJob();
        finbl PrintfrJob job = PrintfrJob.gftPrintfrJob();





        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
        if (isEditing()) {
            // try to stop dfll fditing, bnd fbiling tibt, dbndfl it
            // try to stop dfll fditing, bnd fbiling tibt, dbndfl it
            // try to stop dfll fditing, bnd fbiling tibt, dbndfl it
            // try to stop dfll fditing, bnd fbiling tibt, dbndfl it
            // try to stop dfll fditing, bnd fbiling tibt, dbndfl it
            if (!gftCfllEditor().stopCfllEditing()) {
            if (!gftCfllEditor().stopCfllEditing()) {
            if (!gftCfllEditor().stopCfllEditing()) {
            if (!gftCfllEditor().stopCfllEditing()) {
            if (!gftCfllEditor().stopCfllEditing()) {
                gftCfllEditor().dbndflCfllEditing();
                gftCfllEditor().dbndflCfllEditing();
                gftCfllEditor().dbndflCfllEditing();
                gftCfllEditor().dbndflCfllEditing();
                gftCfllEditor().dbndflCfllEditing();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        if (bttr == null) {
        if (bttr == null) {
        if (bttr == null) {
        if (bttr == null) {
        if (bttr == null) {
            bttr = nfw HbsiPrintRfqufstAttributfSft();
            bttr = nfw HbsiPrintRfqufstAttributfSft();
            bttr = nfw HbsiPrintRfqufstAttributfSft();
            bttr = nfw HbsiPrintRfqufstAttributfSft();
            bttr = nfw HbsiPrintRfqufstAttributfSft();
        }
        }
        }
        }
        }





        finbl PrintingStbtus printingStbtus;
        finbl PrintingStbtus printingStbtus;
        finbl PrintingStbtus printingStbtus;
        finbl PrintingStbtus printingStbtus;
        finbl PrintingStbtus printingStbtus;





         // fftdi tif Printbblf
         // fftdi tif Printbblf
         // fftdi tif Printbblf
         // fftdi tif Printbblf
         // fftdi tif Printbblf
        Printbblf printbblf =
        Printbblf printbblf =
        Printbblf printbblf =
        Printbblf printbblf =
        Printbblf printbblf =
             gftPrintbblf(printModf, ifbdfrFormbt, footfrFormbt);
             gftPrintbblf(printModf, ifbdfrFormbt, footfrFormbt);
             gftPrintbblf(printModf, ifbdfrFormbt, footfrFormbt);
             gftPrintbblf(printModf, ifbdfrFormbt, footfrFormbt);
             gftPrintbblf(printModf, ifbdfrFormbt, footfrFormbt);





        if (intfrbdtivf) {
        if (intfrbdtivf) {
        if (intfrbdtivf) {
        if (intfrbdtivf) {
        if (intfrbdtivf) {
            // wrbp tif Printbblf so tibt wf dbn print on bnotifr tirfbd
            // wrbp tif Printbblf so tibt wf dbn print on bnotifr tirfbd
            // wrbp tif Printbblf so tibt wf dbn print on bnotifr tirfbd
            // wrbp tif Printbblf so tibt wf dbn print on bnotifr tirfbd
            // wrbp tif Printbblf so tibt wf dbn print on bnotifr tirfbd
            printbblf = nfw TirfbdSbffPrintbblf(printbblf);
            printbblf = nfw TirfbdSbffPrintbblf(printbblf);
            printbblf = nfw TirfbdSbffPrintbblf(printbblf);
            printbblf = nfw TirfbdSbffPrintbblf(printbblf);
            printbblf = nfw TirfbdSbffPrintbblf(printbblf);
            printingStbtus = PrintingStbtus.drfbtfPrintingStbtus(tiis, job);
            printingStbtus = PrintingStbtus.drfbtfPrintingStbtus(tiis, job);
            printingStbtus = PrintingStbtus.drfbtfPrintingStbtus(tiis, job);
            printingStbtus = PrintingStbtus.drfbtfPrintingStbtus(tiis, job);
            printingStbtus = PrintingStbtus.drfbtfPrintingStbtus(tiis, job);
            printbblf = printingStbtus.drfbtfNotifidbtionPrintbblf(printbblf);
            printbblf = printingStbtus.drfbtfNotifidbtionPrintbblf(printbblf);
            printbblf = printingStbtus.drfbtfNotifidbtionPrintbblf(printbblf);
            printbblf = printingStbtus.drfbtfNotifidbtionPrintbblf(printbblf);
            printbblf = printingStbtus.drfbtfNotifidbtionPrintbblf(printbblf);
        } flsf {
        } flsf {
        } flsf {
        } flsf {
        } flsf {
            // to plfbsf dompilfr
            // to plfbsf dompilfr
            // to plfbsf dompilfr
            // to plfbsf dompilfr
            // to plfbsf dompilfr
            printingStbtus = null;
            printingStbtus = null;
            printingStbtus = null;
            printingStbtus = null;
            printingStbtus = null;
        }
        }
        }
        }
        }





        // sft tif printbblf on tif PrintfrJob
        // sft tif printbblf on tif PrintfrJob
        // sft tif printbblf on tif PrintfrJob
        // sft tif printbblf on tif PrintfrJob
        // sft tif printbblf on tif PrintfrJob
        job.sftPrintbblf(printbblf);
        job.sftPrintbblf(printbblf);
        job.sftPrintbblf(printbblf);
        job.sftPrintbblf(printbblf);
        job.sftPrintbblf(printbblf);





        // if spfdififd, sft tif PrintSfrvidf on tif PrintfrJob
        // if spfdififd, sft tif PrintSfrvidf on tif PrintfrJob
        // if spfdififd, sft tif PrintSfrvidf on tif PrintfrJob
        // if spfdififd, sft tif PrintSfrvidf on tif PrintfrJob
        // if spfdififd, sft tif PrintSfrvidf on tif PrintfrJob
        if (sfrvidf != null) {
        if (sfrvidf != null) {
        if (sfrvidf != null) {
        if (sfrvidf != null) {
        if (sfrvidf != null) {
            job.sftPrintSfrvidf(sfrvidf);
            job.sftPrintSfrvidf(sfrvidf);
            job.sftPrintSfrvidf(sfrvidf);
            job.sftPrintSfrvidf(sfrvidf);
            job.sftPrintSfrvidf(sfrvidf);
        }
        }
        }
        }
        }





        // if rfqufstfd, siow tif print diblog
        // if rfqufstfd, siow tif print diblog
        // if rfqufstfd, siow tif print diblog
        // if rfqufstfd, siow tif print diblog
        // if rfqufstfd, siow tif print diblog
        if (siowPrintDiblog && !job.printDiblog(bttr)) {
        if (siowPrintDiblog && !job.printDiblog(bttr)) {
        if (siowPrintDiblog && !job.printDiblog(bttr)) {
        if (siowPrintDiblog && !job.printDiblog(bttr)) {
        if (siowPrintDiblog && !job.printDiblog(bttr)) {
            // tif usfr dbndfllfd tif print diblog
            // tif usfr dbndfllfd tif print diblog
            // tif usfr dbndfllfd tif print diblog
            // tif usfr dbndfllfd tif print diblog
            // tif usfr dbndfllfd tif print diblog
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        }
        }
        }
        }
        }





        // if not intfrbdtivf, just print on tiis tirfbd (no diblog)
        // if not intfrbdtivf, just print on tiis tirfbd (no diblog)
        // if not intfrbdtivf, just print on tiis tirfbd (no diblog)
        // if not intfrbdtivf, just print on tiis tirfbd (no diblog)
        // if not intfrbdtivf, just print on tiis tirfbd (no diblog)
        if (!intfrbdtivf) {
        if (!intfrbdtivf) {
        if (!intfrbdtivf) {
        if (!intfrbdtivf) {
        if (!intfrbdtivf) {
            // do tif printing
            // do tif printing
            // do tif printing
            // do tif printing
            // do tif printing
            job.print(bttr);
            job.print(bttr);
            job.print(bttr);
            job.print(bttr);
            job.print(bttr);





            // wf'rf donf
            // wf'rf donf
            // wf'rf donf
            // wf'rf donf
            // wf'rf donf
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        // mbkf surf tiis is dlfbr sindf wf'll difdk it bftfr
        // mbkf surf tiis is dlfbr sindf wf'll difdk it bftfr
        // mbkf surf tiis is dlfbr sindf wf'll difdk it bftfr
        // mbkf surf tiis is dlfbr sindf wf'll difdk it bftfr
        // mbkf surf tiis is dlfbr sindf wf'll difdk it bftfr
        printError = null;
        printError = null;
        printError = null;
        printError = null;
        printError = null;





        // to syndironizf on
        // to syndironizf on
        // to syndironizf on
        // to syndironizf on
        // to syndironizf on
        finbl Objfdt lodk = nfw Objfdt();
        finbl Objfdt lodk = nfw Objfdt();
        finbl Objfdt lodk = nfw Objfdt();
        finbl Objfdt lodk = nfw Objfdt();
        finbl Objfdt lodk = nfw Objfdt();





        // dopifd so wf dbn bddfss from tif innfr dlbss
        // dopifd so wf dbn bddfss from tif innfr dlbss
        // dopifd so wf dbn bddfss from tif innfr dlbss
        // dopifd so wf dbn bddfss from tif innfr dlbss
        // dopifd so wf dbn bddfss from tif innfr dlbss
        finbl PrintRfqufstAttributfSft dopyAttr = bttr;
        finbl PrintRfqufstAttributfSft dopyAttr = bttr;
        finbl PrintRfqufstAttributfSft dopyAttr = bttr;
        finbl PrintRfqufstAttributfSft dopyAttr = bttr;
        finbl PrintRfqufstAttributfSft dopyAttr = bttr;





        // tiis runnbblf will bf usfd to do tif printing
        // tiis runnbblf will bf usfd to do tif printing
        // tiis runnbblf will bf usfd to do tif printing
        // tiis runnbblf will bf usfd to do tif printing
        // tiis runnbblf will bf usfd to do tif printing
        // (bnd sbvf bny tirowbblfs) on bnotifr tirfbd
        // (bnd sbvf bny tirowbblfs) on bnotifr tirfbd
        // (bnd sbvf bny tirowbblfs) on bnotifr tirfbd
        // (bnd sbvf bny tirowbblfs) on bnotifr tirfbd
        // (bnd sbvf bny tirowbblfs) on bnotifr tirfbd
        Runnbblf runnbblf = nfw Runnbblf() {
        Runnbblf runnbblf = nfw Runnbblf() {
        Runnbblf runnbblf = nfw Runnbblf() {
        Runnbblf runnbblf = nfw Runnbblf() {
        Runnbblf runnbblf = nfw Runnbblf() {
            publid void run() {
            publid void run() {
            publid void run() {
            publid void run() {
            publid void run() {
                try {
                try {
                try {
                try {
                try {
                    // do tif printing
                    // do tif printing
                    // do tif printing
                    // do tif printing
                    // do tif printing
                    job.print(dopyAttr);
                    job.print(dopyAttr);
                    job.print(dopyAttr);
                    job.print(dopyAttr);
                    job.print(dopyAttr);
                } dbtdi (Tirowbblf t) {
                } dbtdi (Tirowbblf t) {
                } dbtdi (Tirowbblf t) {
                } dbtdi (Tirowbblf t) {
                } dbtdi (Tirowbblf t) {
                    // sbvf bny Tirowbblf to bf rftirown
                    // sbvf bny Tirowbblf to bf rftirown
                    // sbvf bny Tirowbblf to bf rftirown
                    // sbvf bny Tirowbblf to bf rftirown
                    // sbvf bny Tirowbblf to bf rftirown
                    syndironizfd(lodk) {
                    syndironizfd(lodk) {
                    syndironizfd(lodk) {
                    syndironizfd(lodk) {
                    syndironizfd(lodk) {
                        printError = t;
                        printError = t;
                        printError = t;
                        printError = t;
                        printError = t;
                    }
                    }
                    }
                    }
                    }
                } finblly {
                } finblly {
                } finblly {
                } finblly {
                } finblly {
                    // wf'rf finisifd - iidf tif diblog
                    // wf'rf finisifd - iidf tif diblog
                    // wf'rf finisifd - iidf tif diblog
                    // wf'rf finisifd - iidf tif diblog
                    // wf'rf finisifd - iidf tif diblog
                    printingStbtus.disposf();
                    printingStbtus.disposf();
                    printingStbtus.disposf();
                    printingStbtus.disposf();
                    printingStbtus.disposf();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        };
        };
        };
        };
        };





        // stbrt printing on bnotifr tirfbd
        // stbrt printing on bnotifr tirfbd
        // stbrt printing on bnotifr tirfbd
        // stbrt printing on bnotifr tirfbd
        // stbrt printing on bnotifr tirfbd
        Tirfbd ti = nfw Tirfbd(runnbblf);
        Tirfbd ti = nfw Tirfbd(runnbblf);
        Tirfbd ti = nfw Tirfbd(runnbblf);
        Tirfbd ti = nfw Tirfbd(runnbblf);
        Tirfbd ti = nfw Tirfbd(runnbblf);
        ti.stbrt();
        ti.stbrt();
        ti.stbrt();
        ti.stbrt();
        ti.stbrt();





        printingStbtus.siowModbl(truf);
        printingStbtus.siowModbl(truf);
        printingStbtus.siowModbl(truf);
        printingStbtus.siowModbl(truf);
        printingStbtus.siowModbl(truf);





        // look for bny frror tibt tif printing mby ibvf gfnfrbtfd
        // look for bny frror tibt tif printing mby ibvf gfnfrbtfd
        // look for bny frror tibt tif printing mby ibvf gfnfrbtfd
        // look for bny frror tibt tif printing mby ibvf gfnfrbtfd
        // look for bny frror tibt tif printing mby ibvf gfnfrbtfd
        Tirowbblf pf;
        Tirowbblf pf;
        Tirowbblf pf;
        Tirowbblf pf;
        Tirowbblf pf;
        syndironizfd(lodk) {
        syndironizfd(lodk) {
        syndironizfd(lodk) {
        syndironizfd(lodk) {
        syndironizfd(lodk) {
            pf = printError;
            pf = printError;
            pf = printError;
            pf = printError;
            pf = printError;
            printError = null;
            printError = null;
            printError = null;
            printError = null;
            printError = null;
        }
        }
        }
        }
        }





        // difdk tif typf of frror bnd ibndlf it
        // difdk tif typf of frror bnd ibndlf it
        // difdk tif typf of frror bnd ibndlf it
        // difdk tif typf of frror bnd ibndlf it
        // difdk tif typf of frror bnd ibndlf it
        if (pf != null) {
        if (pf != null) {
        if (pf != null) {
        if (pf != null) {
        if (pf != null) {
            // b subdlbss of PrintfrExdfption mfbning tif job wbs bbortfd,
            // b subdlbss of PrintfrExdfption mfbning tif job wbs bbortfd,
            // b subdlbss of PrintfrExdfption mfbning tif job wbs bbortfd,
            // b subdlbss of PrintfrExdfption mfbning tif job wbs bbortfd,
            // b subdlbss of PrintfrExdfption mfbning tif job wbs bbortfd,
            // in tiis dbsf, by tif usfr
            // in tiis dbsf, by tif usfr
            // in tiis dbsf, by tif usfr
            // in tiis dbsf, by tif usfr
            // in tiis dbsf, by tif usfr
            if (pf instbndfof PrintfrAbortExdfption) {
            if (pf instbndfof PrintfrAbortExdfption) {
            if (pf instbndfof PrintfrAbortExdfption) {
            if (pf instbndfof PrintfrAbortExdfption) {
            if (pf instbndfof PrintfrAbortExdfption) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            } flsf if (pf instbndfof PrintfrExdfption) {
            } flsf if (pf instbndfof PrintfrExdfption) {
            } flsf if (pf instbndfof PrintfrExdfption) {
            } flsf if (pf instbndfof PrintfrExdfption) {
            } flsf if (pf instbndfof PrintfrExdfption) {
                tirow (PrintfrExdfption)pf;
                tirow (PrintfrExdfption)pf;
                tirow (PrintfrExdfption)pf;
                tirow (PrintfrExdfption)pf;
                tirow (PrintfrExdfption)pf;
            } flsf if (pf instbndfof RuntimfExdfption) {
            } flsf if (pf instbndfof RuntimfExdfption) {
            } flsf if (pf instbndfof RuntimfExdfption) {
            } flsf if (pf instbndfof RuntimfExdfption) {
            } flsf if (pf instbndfof RuntimfExdfption) {
                tirow (RuntimfExdfption)pf;
                tirow (RuntimfExdfption)pf;
                tirow (RuntimfExdfption)pf;
                tirow (RuntimfExdfption)pf;
                tirow (RuntimfExdfption)pf;
            } flsf if (pf instbndfof Error) {
            } flsf if (pf instbndfof Error) {
            } flsf if (pf instbndfof Error) {
            } flsf if (pf instbndfof Error) {
            } flsf if (pf instbndfof Error) {
                tirow (Error)pf;
                tirow (Error)pf;
                tirow (Error)pf;
                tirow (Error)pf;
                tirow (Error)pf;
            }
            }
            }
            }
            }





            // dbn not ibppfn
            // dbn not ibppfn
            // dbn not ibppfn
            // dbn not ibppfn
            // dbn not ibppfn
            tirow nfw AssfrtionError(pf);
            tirow nfw AssfrtionError(pf);
            tirow nfw AssfrtionError(pf);
            tirow nfw AssfrtionError(pf);
            tirow nfw AssfrtionError(pf);
        }
        }
        }
        }
        }





        rfturn truf;
        rfturn truf;
        rfturn truf;
        rfturn truf;
        rfturn truf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturn b <dodf>Printbblf</dodf> for usf in printing tiis JTbblf.
     * Rfturn b <dodf>Printbblf</dodf> for usf in printing tiis JTbblf.
     * Rfturn b <dodf>Printbblf</dodf> for usf in printing tiis JTbblf.
     * Rfturn b <dodf>Printbblf</dodf> for usf in printing tiis JTbblf.
     * Rfturn b <dodf>Printbblf</dodf> for usf in printing tiis JTbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod is mfbnt for tiosf wisiing to dustomizf tif dffbult
     * Tiis mftiod is mfbnt for tiosf wisiing to dustomizf tif dffbult
     * Tiis mftiod is mfbnt for tiosf wisiing to dustomizf tif dffbult
     * Tiis mftiod is mfbnt for tiosf wisiing to dustomizf tif dffbult
     * Tiis mftiod is mfbnt for tiosf wisiing to dustomizf tif dffbult
     * <dodf>Printbblf</dodf> implfmfntbtion usfd by <dodf>JTbblf</dodf>'s
     * <dodf>Printbblf</dodf> implfmfntbtion usfd by <dodf>JTbblf</dodf>'s
     * <dodf>Printbblf</dodf> implfmfntbtion usfd by <dodf>JTbblf</dodf>'s
     * <dodf>Printbblf</dodf> implfmfntbtion usfd by <dodf>JTbblf</dodf>'s
     * <dodf>Printbblf</dodf> implfmfntbtion usfd by <dodf>JTbblf</dodf>'s
     * <dodf>print</dodf> mftiods. Dfvflopfrs wbnting simply to print tif tbblf
     * <dodf>print</dodf> mftiods. Dfvflopfrs wbnting simply to print tif tbblf
     * <dodf>print</dodf> mftiods. Dfvflopfrs wbnting simply to print tif tbblf
     * <dodf>print</dodf> mftiods. Dfvflopfrs wbnting simply to print tif tbblf
     * <dodf>print</dodf> mftiods. Dfvflopfrs wbnting simply to print tif tbblf
     * siould usf onf of tiosf mftiods dirfdtly.
     * siould usf onf of tiosf mftiods dirfdtly.
     * siould usf onf of tiosf mftiods dirfdtly.
     * siould usf onf of tiosf mftiods dirfdtly.
     * siould usf onf of tiosf mftiods dirfdtly.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif <dodf>Printbblf</dodf> dbn bf rfqufstfd in onf of two printing modfs.
     * Tif <dodf>Printbblf</dodf> dbn bf rfqufstfd in onf of two printing modfs.
     * Tif <dodf>Printbblf</dodf> dbn bf rfqufstfd in onf of two printing modfs.
     * Tif <dodf>Printbblf</dodf> dbn bf rfqufstfd in onf of two printing modfs.
     * Tif <dodf>Printbblf</dodf> dbn bf rfqufstfd in onf of two printing modfs.
     * In boti modfs, it sprfbds tbblf rows nbturblly in sfqufndf bdross
     * In boti modfs, it sprfbds tbblf rows nbturblly in sfqufndf bdross
     * In boti modfs, it sprfbds tbblf rows nbturblly in sfqufndf bdross
     * In boti modfs, it sprfbds tbblf rows nbturblly in sfqufndf bdross
     * In boti modfs, it sprfbds tbblf rows nbturblly in sfqufndf bdross
     * multiplf pbgfs, fitting bs mbny rows bs possiblf pfr pbgf.
     * multiplf pbgfs, fitting bs mbny rows bs possiblf pfr pbgf.
     * multiplf pbgfs, fitting bs mbny rows bs possiblf pfr pbgf.
     * multiplf pbgfs, fitting bs mbny rows bs possiblf pfr pbgf.
     * multiplf pbgfs, fitting bs mbny rows bs possiblf pfr pbgf.
     * <dodf>PrintModf.NORMAL</dodf> spfdififs tibt tif tbblf bf
     * <dodf>PrintModf.NORMAL</dodf> spfdififs tibt tif tbblf bf
     * <dodf>PrintModf.NORMAL</dodf> spfdififs tibt tif tbblf bf
     * <dodf>PrintModf.NORMAL</dodf> spfdififs tibt tif tbblf bf
     * <dodf>PrintModf.NORMAL</dodf> spfdififs tibt tif tbblf bf
     * printfd bt its durrfnt sizf. In tiis modf, tifrf mby bf b nffd to sprfbd
     * printfd bt its durrfnt sizf. In tiis modf, tifrf mby bf b nffd to sprfbd
     * printfd bt its durrfnt sizf. In tiis modf, tifrf mby bf b nffd to sprfbd
     * printfd bt its durrfnt sizf. In tiis modf, tifrf mby bf b nffd to sprfbd
     * printfd bt its durrfnt sizf. In tiis modf, tifrf mby bf b nffd to sprfbd
     * dolumns bdross pbgfs in b similbr mbnnfr to tibt of tif rows. Wifn tif
     * dolumns bdross pbgfs in b similbr mbnnfr to tibt of tif rows. Wifn tif
     * dolumns bdross pbgfs in b similbr mbnnfr to tibt of tif rows. Wifn tif
     * dolumns bdross pbgfs in b similbr mbnnfr to tibt of tif rows. Wifn tif
     * dolumns bdross pbgfs in b similbr mbnnfr to tibt of tif rows. Wifn tif
     * nffd brisfs, dolumns brf distributfd in bn ordfr donsistfnt witi tif
     * nffd brisfs, dolumns brf distributfd in bn ordfr donsistfnt witi tif
     * nffd brisfs, dolumns brf distributfd in bn ordfr donsistfnt witi tif
     * nffd brisfs, dolumns brf distributfd in bn ordfr donsistfnt witi tif
     * nffd brisfs, dolumns brf distributfd in bn ordfr donsistfnt witi tif
     * tbblf's <dodf>ComponfntOrifntbtion</dodf>.
     * tbblf's <dodf>ComponfntOrifntbtion</dodf>.
     * tbblf's <dodf>ComponfntOrifntbtion</dodf>.
     * tbblf's <dodf>ComponfntOrifntbtion</dodf>.
     * tbblf's <dodf>ComponfntOrifntbtion</dodf>.
     * <dodf>PrintModf.FIT_WIDTH</dodf> spfdififs tibt tif output bf
     * <dodf>PrintModf.FIT_WIDTH</dodf> spfdififs tibt tif output bf
     * <dodf>PrintModf.FIT_WIDTH</dodf> spfdififs tibt tif output bf
     * <dodf>PrintModf.FIT_WIDTH</dodf> spfdififs tibt tif output bf
     * <dodf>PrintModf.FIT_WIDTH</dodf> spfdififs tibt tif output bf
     * sdblfd smbllfr, if nfdfssbry, to fit tif tbblf's fntirf widti
     * sdblfd smbllfr, if nfdfssbry, to fit tif tbblf's fntirf widti
     * sdblfd smbllfr, if nfdfssbry, to fit tif tbblf's fntirf widti
     * sdblfd smbllfr, if nfdfssbry, to fit tif tbblf's fntirf widti
     * sdblfd smbllfr, if nfdfssbry, to fit tif tbblf's fntirf widti
     * (bnd tifrfby bll dolumns) on fbdi pbgf. Widti bnd ifigit brf sdblfd
     * (bnd tifrfby bll dolumns) on fbdi pbgf. Widti bnd ifigit brf sdblfd
     * (bnd tifrfby bll dolumns) on fbdi pbgf. Widti bnd ifigit brf sdblfd
     * (bnd tifrfby bll dolumns) on fbdi pbgf. Widti bnd ifigit brf sdblfd
     * (bnd tifrfby bll dolumns) on fbdi pbgf. Widti bnd ifigit brf sdblfd
     * fqublly, mbintbining tif bspfdt rbtio of tif output.
     * fqublly, mbintbining tif bspfdt rbtio of tif output.
     * fqublly, mbintbining tif bspfdt rbtio of tif output.
     * fqublly, mbintbining tif bspfdt rbtio of tif output.
     * fqublly, mbintbining tif bspfdt rbtio of tif output.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif <dodf>Printbblf</dodf> ifbds tif portion of tbblf on fbdi pbgf
     * Tif <dodf>Printbblf</dodf> ifbds tif portion of tbblf on fbdi pbgf
     * Tif <dodf>Printbblf</dodf> ifbds tif portion of tbblf on fbdi pbgf
     * Tif <dodf>Printbblf</dodf> ifbds tif portion of tbblf on fbdi pbgf
     * Tif <dodf>Printbblf</dodf> ifbds tif portion of tbblf on fbdi pbgf
     * witi tif bppropribtf sfdtion from tif tbblf's <dodf>JTbblfHfbdfr</dodf>,
     * witi tif bppropribtf sfdtion from tif tbblf's <dodf>JTbblfHfbdfr</dodf>,
     * witi tif bppropribtf sfdtion from tif tbblf's <dodf>JTbblfHfbdfr</dodf>,
     * witi tif bppropribtf sfdtion from tif tbblf's <dodf>JTbblfHfbdfr</dodf>,
     * witi tif bppropribtf sfdtion from tif tbblf's <dodf>JTbblfHfbdfr</dodf>,
     * if it ibs onf.
     * if it ibs onf.
     * if it ibs onf.
     * if it ibs onf.
     * if it ibs onf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Hfbdfr bnd footfr tfxt dbn bf bddfd to tif output by providing
     * Hfbdfr bnd footfr tfxt dbn bf bddfd to tif output by providing
     * Hfbdfr bnd footfr tfxt dbn bf bddfd to tif output by providing
     * Hfbdfr bnd footfr tfxt dbn bf bddfd to tif output by providing
     * Hfbdfr bnd footfr tfxt dbn bf bddfd to tif output by providing
     * <dodf>MfssbgfFormbt</dodf> brgumfnts. Tif printing dodf rfqufsts
     * <dodf>MfssbgfFormbt</dodf> brgumfnts. Tif printing dodf rfqufsts
     * <dodf>MfssbgfFormbt</dodf> brgumfnts. Tif printing dodf rfqufsts
     * <dodf>MfssbgfFormbt</dodf> brgumfnts. Tif printing dodf rfqufsts
     * <dodf>MfssbgfFormbt</dodf> brgumfnts. Tif printing dodf rfqufsts
     * Strings from tif formbts, providing b singlf itfm wiidi mby bf indludfd
     * Strings from tif formbts, providing b singlf itfm wiidi mby bf indludfd
     * Strings from tif formbts, providing b singlf itfm wiidi mby bf indludfd
     * Strings from tif formbts, providing b singlf itfm wiidi mby bf indludfd
     * Strings from tif formbts, providing b singlf itfm wiidi mby bf indludfd
     * in tif formbttfd string: bn <dodf>Intfgfr</dodf> rfprfsfnting tif durrfnt
     * in tif formbttfd string: bn <dodf>Intfgfr</dodf> rfprfsfnting tif durrfnt
     * in tif formbttfd string: bn <dodf>Intfgfr</dodf> rfprfsfnting tif durrfnt
     * in tif formbttfd string: bn <dodf>Intfgfr</dodf> rfprfsfnting tif durrfnt
     * in tif formbttfd string: bn <dodf>Intfgfr</dodf> rfprfsfnting tif durrfnt
     * pbgf numbfr.
     * pbgf numbfr.
     * pbgf numbfr.
     * pbgf numbfr.
     * pbgf numbfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * You brf fndourbgfd to rfbd tif dodumfntbtion for
     * You brf fndourbgfd to rfbd tif dodumfntbtion for
     * You brf fndourbgfd to rfbd tif dodumfntbtion for
     * You brf fndourbgfd to rfbd tif dodumfntbtion for
     * You brf fndourbgfd to rfbd tif dodumfntbtion for
     * <dodf>MfssbgfFormbt</dodf> bs somf dibrbdtfrs, sudi bs singlf-quotf,
     * <dodf>MfssbgfFormbt</dodf> bs somf dibrbdtfrs, sudi bs singlf-quotf,
     * <dodf>MfssbgfFormbt</dodf> bs somf dibrbdtfrs, sudi bs singlf-quotf,
     * <dodf>MfssbgfFormbt</dodf> bs somf dibrbdtfrs, sudi bs singlf-quotf,
     * <dodf>MfssbgfFormbt</dodf> bs somf dibrbdtfrs, sudi bs singlf-quotf,
     * brf spfdibl bnd nffd to bf fsdbpfd.
     * brf spfdibl bnd nffd to bf fsdbpfd.
     * brf spfdibl bnd nffd to bf fsdbpfd.
     * brf spfdibl bnd nffd to bf fsdbpfd.
     * brf spfdibl bnd nffd to bf fsdbpfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Hfrf's bn fxbmplf of drfbting b <dodf>MfssbgfFormbt</dodf> tibt dbn bf
     * Hfrf's bn fxbmplf of drfbting b <dodf>MfssbgfFormbt</dodf> tibt dbn bf
     * Hfrf's bn fxbmplf of drfbting b <dodf>MfssbgfFormbt</dodf> tibt dbn bf
     * Hfrf's bn fxbmplf of drfbting b <dodf>MfssbgfFormbt</dodf> tibt dbn bf
     * Hfrf's bn fxbmplf of drfbting b <dodf>MfssbgfFormbt</dodf> tibt dbn bf
     * usfd to print "Dukf's Tbblf: Pbgf - " bnd tif durrfnt pbgf numbfr:
     * usfd to print "Dukf's Tbblf: Pbgf - " bnd tif durrfnt pbgf numbfr:
     * usfd to print "Dukf's Tbblf: Pbgf - " bnd tif durrfnt pbgf numbfr:
     * usfd to print "Dukf's Tbblf: Pbgf - " bnd tif durrfnt pbgf numbfr:
     * usfd to print "Dukf's Tbblf: Pbgf - " bnd tif durrfnt pbgf numbfr:
     *
     *
     *
     *
     *
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *     // notidf tif fsdbping of tif singlf quotf
     *     // notidf tif fsdbping of tif singlf quotf
     *     // notidf tif fsdbping of tif singlf quotf
     *     // notidf tif fsdbping of tif singlf quotf
     *     // notidf tif fsdbping of tif singlf quotf
     *     // notidf iow tif pbgf numbfr is indludfd witi "{0}"
     *     // notidf iow tif pbgf numbfr is indludfd witi "{0}"
     *     // notidf iow tif pbgf numbfr is indludfd witi "{0}"
     *     // notidf iow tif pbgf numbfr is indludfd witi "{0}"
     *     // notidf iow tif pbgf numbfr is indludfd witi "{0}"
     *     MfssbgfFormbt formbt = nfw MfssbgfFormbt("Dukf''s Tbblf: Pbgf - {0}");
     *     MfssbgfFormbt formbt = nfw MfssbgfFormbt("Dukf''s Tbblf: Pbgf - {0}");
     *     MfssbgfFormbt formbt = nfw MfssbgfFormbt("Dukf''s Tbblf: Pbgf - {0}");
     *     MfssbgfFormbt formbt = nfw MfssbgfFormbt("Dukf''s Tbblf: Pbgf - {0}");
     *     MfssbgfFormbt formbt = nfw MfssbgfFormbt("Dukf''s Tbblf: Pbgf - {0}");
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif <dodf>Printbblf</dodf> donstrbins wibt it drbws to tif printbblf
     * Tif <dodf>Printbblf</dodf> donstrbins wibt it drbws to tif printbblf
     * Tif <dodf>Printbblf</dodf> donstrbins wibt it drbws to tif printbblf
     * Tif <dodf>Printbblf</dodf> donstrbins wibt it drbws to tif printbblf
     * Tif <dodf>Printbblf</dodf> donstrbins wibt it drbws to tif printbblf
     * brfb of fbdi pbgf tibt it prints. Undfr dfrtbin dirdumstbndfs, it mby
     * brfb of fbdi pbgf tibt it prints. Undfr dfrtbin dirdumstbndfs, it mby
     * brfb of fbdi pbgf tibt it prints. Undfr dfrtbin dirdumstbndfs, it mby
     * brfb of fbdi pbgf tibt it prints. Undfr dfrtbin dirdumstbndfs, it mby
     * brfb of fbdi pbgf tibt it prints. Undfr dfrtbin dirdumstbndfs, it mby
     * find it impossiblf to fit bll of b pbgf's dontfnt into tibt brfb. In
     * find it impossiblf to fit bll of b pbgf's dontfnt into tibt brfb. In
     * find it impossiblf to fit bll of b pbgf's dontfnt into tibt brfb. In
     * find it impossiblf to fit bll of b pbgf's dontfnt into tibt brfb. In
     * find it impossiblf to fit bll of b pbgf's dontfnt into tibt brfb. In
     * tifsf dbsfs tif output mby bf dlippfd, but tif implfmfntbtion
     * tifsf dbsfs tif output mby bf dlippfd, but tif implfmfntbtion
     * tifsf dbsfs tif output mby bf dlippfd, but tif implfmfntbtion
     * tifsf dbsfs tif output mby bf dlippfd, but tif implfmfntbtion
     * tifsf dbsfs tif output mby bf dlippfd, but tif implfmfntbtion
     * mbkfs bn fffort to do somftiing rfbsonbblf. Hfrf brf b ffw situbtions
     * mbkfs bn fffort to do somftiing rfbsonbblf. Hfrf brf b ffw situbtions
     * mbkfs bn fffort to do somftiing rfbsonbblf. Hfrf brf b ffw situbtions
     * mbkfs bn fffort to do somftiing rfbsonbblf. Hfrf brf b ffw situbtions
     * mbkfs bn fffort to do somftiing rfbsonbblf. Hfrf brf b ffw situbtions
     * wifrf tiis is known to oddur, bnd iow tify mby bf ibndlfd by tiis
     * wifrf tiis is known to oddur, bnd iow tify mby bf ibndlfd by tiis
     * wifrf tiis is known to oddur, bnd iow tify mby bf ibndlfd by tiis
     * wifrf tiis is known to oddur, bnd iow tify mby bf ibndlfd by tiis
     * wifrf tiis is known to oddur, bnd iow tify mby bf ibndlfd by tiis
     * pbrtidulbr implfmfntbtion:
     * pbrtidulbr implfmfntbtion:
     * pbrtidulbr implfmfntbtion:
     * pbrtidulbr implfmfntbtion:
     * pbrtidulbr implfmfntbtion:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     *   <li>In bny modf, wifn tif ifbdfr or footfr tfxt is too widf to fit
     *   <li>In bny modf, wifn tif ifbdfr or footfr tfxt is too widf to fit
     *   <li>In bny modf, wifn tif ifbdfr or footfr tfxt is too widf to fit
     *   <li>In bny modf, wifn tif ifbdfr or footfr tfxt is too widf to fit
     *   <li>In bny modf, wifn tif ifbdfr or footfr tfxt is too widf to fit
     *       domplftfly in tif printbblf brfb -- print bs mudi of tif tfxt bs
     *       domplftfly in tif printbblf brfb -- print bs mudi of tif tfxt bs
     *       domplftfly in tif printbblf brfb -- print bs mudi of tif tfxt bs
     *       domplftfly in tif printbblf brfb -- print bs mudi of tif tfxt bs
     *       domplftfly in tif printbblf brfb -- print bs mudi of tif tfxt bs
     *       possiblf stbrting from tif bfginning, bs dftfrminfd by tif tbblf's
     *       possiblf stbrting from tif bfginning, bs dftfrminfd by tif tbblf's
     *       possiblf stbrting from tif bfginning, bs dftfrminfd by tif tbblf's
     *       possiblf stbrting from tif bfginning, bs dftfrminfd by tif tbblf's
     *       possiblf stbrting from tif bfginning, bs dftfrminfd by tif tbblf's
     *       <dodf>ComponfntOrifntbtion</dodf>.
     *       <dodf>ComponfntOrifntbtion</dodf>.
     *       <dodf>ComponfntOrifntbtion</dodf>.
     *       <dodf>ComponfntOrifntbtion</dodf>.
     *       <dodf>ComponfntOrifntbtion</dodf>.
     *   <li>In bny modf, wifn b row is too tbll to fit in tif
     *   <li>In bny modf, wifn b row is too tbll to fit in tif
     *   <li>In bny modf, wifn b row is too tbll to fit in tif
     *   <li>In bny modf, wifn b row is too tbll to fit in tif
     *   <li>In bny modf, wifn b row is too tbll to fit in tif
     *       printbblf brfb -- print tif uppfr-most portion of tif row
     *       printbblf brfb -- print tif uppfr-most portion of tif row
     *       printbblf brfb -- print tif uppfr-most portion of tif row
     *       printbblf brfb -- print tif uppfr-most portion of tif row
     *       printbblf brfb -- print tif uppfr-most portion of tif row
     *       bnd pbint no lowfr bordfr on tif tbblf.
     *       bnd pbint no lowfr bordfr on tif tbblf.
     *       bnd pbint no lowfr bordfr on tif tbblf.
     *       bnd pbint no lowfr bordfr on tif tbblf.
     *       bnd pbint no lowfr bordfr on tif tbblf.
     *   <li>In <dodf>PrintModf.NORMAL</dodf> wifn b dolumn
     *   <li>In <dodf>PrintModf.NORMAL</dodf> wifn b dolumn
     *   <li>In <dodf>PrintModf.NORMAL</dodf> wifn b dolumn
     *   <li>In <dodf>PrintModf.NORMAL</dodf> wifn b dolumn
     *   <li>In <dodf>PrintModf.NORMAL</dodf> wifn b dolumn
     *       is too widf to fit in tif printbblf brfb -- print tif dfntfr
     *       is too widf to fit in tif printbblf brfb -- print tif dfntfr
     *       is too widf to fit in tif printbblf brfb -- print tif dfntfr
     *       is too widf to fit in tif printbblf brfb -- print tif dfntfr
     *       is too widf to fit in tif printbblf brfb -- print tif dfntfr
     *       portion of tif dolumn bnd lfbvf tif lfft bnd rigit bordfrs
     *       portion of tif dolumn bnd lfbvf tif lfft bnd rigit bordfrs
     *       portion of tif dolumn bnd lfbvf tif lfft bnd rigit bordfrs
     *       portion of tif dolumn bnd lfbvf tif lfft bnd rigit bordfrs
     *       portion of tif dolumn bnd lfbvf tif lfft bnd rigit bordfrs
     *       off tif tbblf.
     *       off tif tbblf.
     *       off tif tbblf.
     *       off tif tbblf.
     *       off tif tbblf.
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * It is fntirfly vblid for tiis <dodf>Printbblf</dodf> to bf wrbppfd
     * It is fntirfly vblid for tiis <dodf>Printbblf</dodf> to bf wrbppfd
     * It is fntirfly vblid for tiis <dodf>Printbblf</dodf> to bf wrbppfd
     * It is fntirfly vblid for tiis <dodf>Printbblf</dodf> to bf wrbppfd
     * It is fntirfly vblid for tiis <dodf>Printbblf</dodf> to bf wrbppfd
     * insidf bnotifr in ordfr to drfbtf domplfx rfports bnd dodumfnts. You mby
     * insidf bnotifr in ordfr to drfbtf domplfx rfports bnd dodumfnts. You mby
     * insidf bnotifr in ordfr to drfbtf domplfx rfports bnd dodumfnts. You mby
     * insidf bnotifr in ordfr to drfbtf domplfx rfports bnd dodumfnts. You mby
     * insidf bnotifr in ordfr to drfbtf domplfx rfports bnd dodumfnts. You mby
     * fvfn rfqufst tibt difffrfnt pbgfs bf rfndfrfd into difffrfnt sizfd
     * fvfn rfqufst tibt difffrfnt pbgfs bf rfndfrfd into difffrfnt sizfd
     * fvfn rfqufst tibt difffrfnt pbgfs bf rfndfrfd into difffrfnt sizfd
     * fvfn rfqufst tibt difffrfnt pbgfs bf rfndfrfd into difffrfnt sizfd
     * fvfn rfqufst tibt difffrfnt pbgfs bf rfndfrfd into difffrfnt sizfd
     * printbblf brfbs. Tif implfmfntbtion must bf prfpbrfd to ibndlf tiis
     * printbblf brfbs. Tif implfmfntbtion must bf prfpbrfd to ibndlf tiis
     * printbblf brfbs. Tif implfmfntbtion must bf prfpbrfd to ibndlf tiis
     * printbblf brfbs. Tif implfmfntbtion must bf prfpbrfd to ibndlf tiis
     * printbblf brfbs. Tif implfmfntbtion must bf prfpbrfd to ibndlf tiis
     * (possibly by doing its lbyout dbldulbtions on tif fly). Howfvfr,
     * (possibly by doing its lbyout dbldulbtions on tif fly). Howfvfr,
     * (possibly by doing its lbyout dbldulbtions on tif fly). Howfvfr,
     * (possibly by doing its lbyout dbldulbtions on tif fly). Howfvfr,
     * (possibly by doing its lbyout dbldulbtions on tif fly). Howfvfr,
     * providing difffrfnt ifigits to fbdi pbgf will likfly not work wfll
     * providing difffrfnt ifigits to fbdi pbgf will likfly not work wfll
     * providing difffrfnt ifigits to fbdi pbgf will likfly not work wfll
     * providing difffrfnt ifigits to fbdi pbgf will likfly not work wfll
     * providing difffrfnt ifigits to fbdi pbgf will likfly not work wfll
     * witi <dodf>PrintModf.NORMAL</dodf> wifn it ibs to sprfbd dolumns
     * witi <dodf>PrintModf.NORMAL</dodf> wifn it ibs to sprfbd dolumns
     * witi <dodf>PrintModf.NORMAL</dodf> wifn it ibs to sprfbd dolumns
     * witi <dodf>PrintModf.NORMAL</dodf> wifn it ibs to sprfbd dolumns
     * witi <dodf>PrintModf.NORMAL</dodf> wifn it ibs to sprfbd dolumns
     * bdross pbgfs.
     * bdross pbgfs.
     * bdross pbgfs.
     * bdross pbgfs.
     * bdross pbgfs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * As fbr bs dustomizing iow tif tbblf looks in tif printfd rfsult,
     * As fbr bs dustomizing iow tif tbblf looks in tif printfd rfsult,
     * As fbr bs dustomizing iow tif tbblf looks in tif printfd rfsult,
     * As fbr bs dustomizing iow tif tbblf looks in tif printfd rfsult,
     * As fbr bs dustomizing iow tif tbblf looks in tif printfd rfsult,
     * <dodf>JTbblf</dodf> itsflf will tbkf dbrf of iiding tif sflfdtion
     * <dodf>JTbblf</dodf> itsflf will tbkf dbrf of iiding tif sflfdtion
     * <dodf>JTbblf</dodf> itsflf will tbkf dbrf of iiding tif sflfdtion
     * <dodf>JTbblf</dodf> itsflf will tbkf dbrf of iiding tif sflfdtion
     * <dodf>JTbblf</dodf> itsflf will tbkf dbrf of iiding tif sflfdtion
     * bnd fodus during printing. For bdditionbl dustomizbtions, your
     * bnd fodus during printing. For bdditionbl dustomizbtions, your
     * bnd fodus during printing. For bdditionbl dustomizbtions, your
     * bnd fodus during printing. For bdditionbl dustomizbtions, your
     * bnd fodus during printing. For bdditionbl dustomizbtions, your
     * rfndfrfrs or pbinting dodf dbn dustomizf tif look bbsfd on tif vbluf
     * rfndfrfrs or pbinting dodf dbn dustomizf tif look bbsfd on tif vbluf
     * rfndfrfrs or pbinting dodf dbn dustomizf tif look bbsfd on tif vbluf
     * rfndfrfrs or pbinting dodf dbn dustomizf tif look bbsfd on tif vbluf
     * rfndfrfrs or pbinting dodf dbn dustomizf tif look bbsfd on tif vbluf
     * of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}
     * of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}
     * of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}
     * of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}
     * of {@link jbvbx.swing.JComponfnt#isPbintingForPrint()}
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Also, <i>bfforf</i> dblling tiis mftiod you mby wisi to <i>first</i>
     * Also, <i>bfforf</i> dblling tiis mftiod you mby wisi to <i>first</i>
     * Also, <i>bfforf</i> dblling tiis mftiod you mby wisi to <i>first</i>
     * Also, <i>bfforf</i> dblling tiis mftiod you mby wisi to <i>first</i>
     * Also, <i>bfforf</i> dblling tiis mftiod you mby wisi to <i>first</i>
     * modify tif stbtf of tif tbblf, sudi bs to dbndfl dfll fditing or
     * modify tif stbtf of tif tbblf, sudi bs to dbndfl dfll fditing or
     * modify tif stbtf of tif tbblf, sudi bs to dbndfl dfll fditing or
     * modify tif stbtf of tif tbblf, sudi bs to dbndfl dfll fditing or
     * modify tif stbtf of tif tbblf, sudi bs to dbndfl dfll fditing or
     * ibvf tif usfr sizf tif tbblf bppropribtfly. Howfvfr, you must not
     * ibvf tif usfr sizf tif tbblf bppropribtfly. Howfvfr, you must not
     * ibvf tif usfr sizf tif tbblf bppropribtfly. Howfvfr, you must not
     * ibvf tif usfr sizf tif tbblf bppropribtfly. Howfvfr, you must not
     * ibvf tif usfr sizf tif tbblf bppropribtfly. Howfvfr, you must not
     * modify tif stbtf of tif tbblf <i>bftfr</i> tiis <dodf>Printbblf</dodf>
     * modify tif stbtf of tif tbblf <i>bftfr</i> tiis <dodf>Printbblf</dodf>
     * modify tif stbtf of tif tbblf <i>bftfr</i> tiis <dodf>Printbblf</dodf>
     * modify tif stbtf of tif tbblf <i>bftfr</i> tiis <dodf>Printbblf</dodf>
     * modify tif stbtf of tif tbblf <i>bftfr</i> tiis <dodf>Printbblf</dodf>
     * ibs bffn fftdifd (invblid modifidbtions indludf dibngfs in sizf or
     * ibs bffn fftdifd (invblid modifidbtions indludf dibngfs in sizf or
     * ibs bffn fftdifd (invblid modifidbtions indludf dibngfs in sizf or
     * ibs bffn fftdifd (invblid modifidbtions indludf dibngfs in sizf or
     * ibs bffn fftdifd (invblid modifidbtions indludf dibngfs in sizf or
     * undfrlying dbtb). Tif bfibvior of tif rfturnfd <dodf>Printbblf</dodf>
     * undfrlying dbtb). Tif bfibvior of tif rfturnfd <dodf>Printbblf</dodf>
     * undfrlying dbtb). Tif bfibvior of tif rfturnfd <dodf>Printbblf</dodf>
     * undfrlying dbtb). Tif bfibvior of tif rfturnfd <dodf>Printbblf</dodf>
     * undfrlying dbtb). Tif bfibvior of tif rfturnfd <dodf>Printbblf</dodf>
     * is undffinfd ondf tif tbblf ibs bffn dibngfd.
     * is undffinfd ondf tif tbblf ibs bffn dibngfd.
     * is undffinfd ondf tif tbblf ibs bffn dibngfd.
     * is undffinfd ondf tif tbblf ibs bffn dibngfd.
     * is undffinfd ondf tif tbblf ibs bffn dibngfd.
     *
     *
     *
     *
     *
     * @pbrbm  printModf     tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf     tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf     tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf     tif printing modf tibt tif printbblf siould usf
     * @pbrbm  printModf     tif printing modf tibt tif printbblf siould usf
     * @pbrbm  ifbdfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  ifbdfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  ifbdfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  ifbdfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  ifbdfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     *                       bf usfd in printing b ifbdfr, or null for nonf
     *                       bf usfd in printing b ifbdfr, or null for nonf
     *                       bf usfd in printing b ifbdfr, or null for nonf
     *                       bf usfd in printing b ifbdfr, or null for nonf
     *                       bf usfd in printing b ifbdfr, or null for nonf
     * @pbrbm  footfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  footfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  footfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  footfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     * @pbrbm  footfrFormbt  b <dodf>MfssbgfFormbt</dodf> spfdifying tif tfxt to
     *                       bf usfd in printing b footfr, or null for nonf
     *                       bf usfd in printing b footfr, or null for nonf
     *                       bf usfd in printing b footfr, or null for nonf
     *                       bf usfd in printing b footfr, or null for nonf
     *                       bf usfd in printing b footfr, or null for nonf
     * @rfturn b <dodf>Printbblf</dodf> for printing tiis JTbblf
     * @rfturn b <dodf>Printbblf</dodf> for printing tiis JTbblf
     * @rfturn b <dodf>Printbblf</dodf> for printing tiis JTbblf
     * @rfturn b <dodf>Printbblf</dodf> for printing tiis JTbblf
     * @rfturn b <dodf>Printbblf</dodf> for printing tiis JTbblf
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     * @sff #print(JTbblf.PrintModf, MfssbgfFormbt, MfssbgfFormbt,
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     *             boolfbn, PrintRfqufstAttributfSft, boolfbn)
     * @sff Printbblf
     * @sff Printbblf
     * @sff Printbblf
     * @sff Printbblf
     * @sff Printbblf
     * @sff PrintfrJob
     * @sff PrintfrJob
     * @sff PrintfrJob
     * @sff PrintfrJob
     * @sff PrintfrJob
     *
     *
     *
     *
     *
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     * @sindf 1.5
     */
     */
     */
     */
     */
    publid Printbblf gftPrintbblf(PrintModf printModf,
    publid Printbblf gftPrintbblf(PrintModf printModf,
    publid Printbblf gftPrintbblf(PrintModf printModf,
    publid Printbblf gftPrintbblf(PrintModf printModf,
    publid Printbblf gftPrintbblf(PrintModf printModf,
                                  MfssbgfFormbt ifbdfrFormbt,
                                  MfssbgfFormbt ifbdfrFormbt,
                                  MfssbgfFormbt ifbdfrFormbt,
                                  MfssbgfFormbt ifbdfrFormbt,
                                  MfssbgfFormbt ifbdfrFormbt,
                                  MfssbgfFormbt footfrFormbt) {
                                  MfssbgfFormbt footfrFormbt) {
                                  MfssbgfFormbt footfrFormbt) {
                                  MfssbgfFormbt footfrFormbt) {
                                  MfssbgfFormbt footfrFormbt) {





        rfturn nfw TbblfPrintbblf(tiis, printModf, ifbdfrFormbt, footfrFormbt);
        rfturn nfw TbblfPrintbblf(tiis, printModf, ifbdfrFormbt, footfrFormbt);
        rfturn nfw TbblfPrintbblf(tiis, printModf, ifbdfrFormbt, footfrFormbt);
        rfturn nfw TbblfPrintbblf(tiis, printModf, ifbdfrFormbt, footfrFormbt);
        rfturn nfw TbblfPrintbblf(tiis, printModf, ifbdfrFormbt, footfrFormbt);
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * A <dodf>Printbblf</dodf> implfmfntbtion tibt wrbps bnotifr
     * A <dodf>Printbblf</dodf> implfmfntbtion tibt wrbps bnotifr
     * A <dodf>Printbblf</dodf> implfmfntbtion tibt wrbps bnotifr
     * A <dodf>Printbblf</dodf> implfmfntbtion tibt wrbps bnotifr
     * A <dodf>Printbblf</dodf> implfmfntbtion tibt wrbps bnotifr
     * <dodf>Printbblf</dodf>, mbking it sbff for printing on bnotifr tirfbd.
     * <dodf>Printbblf</dodf>, mbking it sbff for printing on bnotifr tirfbd.
     * <dodf>Printbblf</dodf>, mbking it sbff for printing on bnotifr tirfbd.
     * <dodf>Printbblf</dodf>, mbking it sbff for printing on bnotifr tirfbd.
     * <dodf>Printbblf</dodf>, mbking it sbff for printing on bnotifr tirfbd.
     */
     */
     */
     */
     */
    privbtf dlbss TirfbdSbffPrintbblf implfmfnts Printbblf {
    privbtf dlbss TirfbdSbffPrintbblf implfmfnts Printbblf {
    privbtf dlbss TirfbdSbffPrintbblf implfmfnts Printbblf {
    privbtf dlbss TirfbdSbffPrintbblf implfmfnts Printbblf {
    privbtf dlbss TirfbdSbffPrintbblf implfmfnts Printbblf {





        /** Tif dflfgbtf <dodf>Printbblf</dodf>. */
        /** Tif dflfgbtf <dodf>Printbblf</dodf>. */
        /** Tif dflfgbtf <dodf>Printbblf</dodf>. */
        /** Tif dflfgbtf <dodf>Printbblf</dodf>. */
        /** Tif dflfgbtf <dodf>Printbblf</dodf>. */
        privbtf Printbblf printDflfgbtf;
        privbtf Printbblf printDflfgbtf;
        privbtf Printbblf printDflfgbtf;
        privbtf Printbblf printDflfgbtf;
        privbtf Printbblf printDflfgbtf;





        /**
        /**
        /**
        /**
        /**
         * To dommunidbtf bny rfturn vbluf wifn dflfgbting.
         * To dommunidbtf bny rfturn vbluf wifn dflfgbting.
         * To dommunidbtf bny rfturn vbluf wifn dflfgbting.
         * To dommunidbtf bny rfturn vbluf wifn dflfgbting.
         * To dommunidbtf bny rfturn vbluf wifn dflfgbting.
         */
         */
         */
         */
         */
        privbtf int rftVbl;
        privbtf int rftVbl;
        privbtf int rftVbl;
        privbtf int rftVbl;
        privbtf int rftVbl;





        /**
        /**
        /**
        /**
        /**
         * To dommunidbtf bny <dodf>Tirowbblf</dodf> wifn dflfgbting.
         * To dommunidbtf bny <dodf>Tirowbblf</dodf> wifn dflfgbting.
         * To dommunidbtf bny <dodf>Tirowbblf</dodf> wifn dflfgbting.
         * To dommunidbtf bny <dodf>Tirowbblf</dodf> wifn dflfgbting.
         * To dommunidbtf bny <dodf>Tirowbblf</dodf> wifn dflfgbting.
         */
         */
         */
         */
         */
        privbtf Tirowbblf rftTirowbblf;
        privbtf Tirowbblf rftTirowbblf;
        privbtf Tirowbblf rftTirowbblf;
        privbtf Tirowbblf rftTirowbblf;
        privbtf Tirowbblf rftTirowbblf;





        /**
        /**
        /**
        /**
        /**
         * Construdt b <dodf>TirfbdSbffPrintbblf</dodf> bround tif givfn
         * Construdt b <dodf>TirfbdSbffPrintbblf</dodf> bround tif givfn
         * Construdt b <dodf>TirfbdSbffPrintbblf</dodf> bround tif givfn
         * Construdt b <dodf>TirfbdSbffPrintbblf</dodf> bround tif givfn
         * Construdt b <dodf>TirfbdSbffPrintbblf</dodf> bround tif givfn
         * dflfgbtf.
         * dflfgbtf.
         * dflfgbtf.
         * dflfgbtf.
         * dflfgbtf.
         *
         *
         *
         *
         *
         * @pbrbm printDflfgbtf tif <dodf>Printbblf</dodf> to dflfgbtf to
         * @pbrbm printDflfgbtf tif <dodf>Printbblf</dodf> to dflfgbtf to
         * @pbrbm printDflfgbtf tif <dodf>Printbblf</dodf> to dflfgbtf to
         * @pbrbm printDflfgbtf tif <dodf>Printbblf</dodf> to dflfgbtf to
         * @pbrbm printDflfgbtf tif <dodf>Printbblf</dodf> to dflfgbtf to
         */
         */
         */
         */
         */
        publid TirfbdSbffPrintbblf(Printbblf printDflfgbtf) {
        publid TirfbdSbffPrintbblf(Printbblf printDflfgbtf) {
        publid TirfbdSbffPrintbblf(Printbblf printDflfgbtf) {
        publid TirfbdSbffPrintbblf(Printbblf printDflfgbtf) {
        publid TirfbdSbffPrintbblf(Printbblf printDflfgbtf) {
            tiis.printDflfgbtf = printDflfgbtf;
            tiis.printDflfgbtf = printDflfgbtf;
            tiis.printDflfgbtf = printDflfgbtf;
            tiis.printDflfgbtf = printDflfgbtf;
            tiis.printDflfgbtf = printDflfgbtf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Prints tif spfdififd pbgf into tif givfn {@link Grbpiids}
         * Prints tif spfdififd pbgf into tif givfn {@link Grbpiids}
         * Prints tif spfdififd pbgf into tif givfn {@link Grbpiids}
         * Prints tif spfdififd pbgf into tif givfn {@link Grbpiids}
         * Prints tif spfdififd pbgf into tif givfn {@link Grbpiids}
         * dontfxt, in tif spfdififd formbt.
         * dontfxt, in tif spfdififd formbt.
         * dontfxt, in tif spfdififd formbt.
         * dontfxt, in tif spfdififd formbt.
         * dontfxt, in tif spfdififd formbt.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Rfgbrdlfss of wibt tirfbd tiis mftiod is dbllfd on, bll dblls into
         * Rfgbrdlfss of wibt tirfbd tiis mftiod is dbllfd on, bll dblls into
         * Rfgbrdlfss of wibt tirfbd tiis mftiod is dbllfd on, bll dblls into
         * Rfgbrdlfss of wibt tirfbd tiis mftiod is dbllfd on, bll dblls into
         * Rfgbrdlfss of wibt tirfbd tiis mftiod is dbllfd on, bll dblls into
         * tif dflfgbtf will bf donf on tif fvfnt-dispbtdi tirfbd.
         * tif dflfgbtf will bf donf on tif fvfnt-dispbtdi tirfbd.
         * tif dflfgbtf will bf donf on tif fvfnt-dispbtdi tirfbd.
         * tif dflfgbtf will bf donf on tif fvfnt-dispbtdi tirfbd.
         * tif dflfgbtf will bf donf on tif fvfnt-dispbtdi tirfbd.
         *
         *
         *
         *
         *
         * @pbrbm   grbpiids    tif dontfxt into wiidi tif pbgf is drbwn
         * @pbrbm   grbpiids    tif dontfxt into wiidi tif pbgf is drbwn
         * @pbrbm   grbpiids    tif dontfxt into wiidi tif pbgf is drbwn
         * @pbrbm   grbpiids    tif dontfxt into wiidi tif pbgf is drbwn
         * @pbrbm   grbpiids    tif dontfxt into wiidi tif pbgf is drbwn
         * @pbrbm   pbgfFormbt  tif sizf bnd orifntbtion of tif pbgf bfing drbwn
         * @pbrbm   pbgfFormbt  tif sizf bnd orifntbtion of tif pbgf bfing drbwn
         * @pbrbm   pbgfFormbt  tif sizf bnd orifntbtion of tif pbgf bfing drbwn
         * @pbrbm   pbgfFormbt  tif sizf bnd orifntbtion of tif pbgf bfing drbwn
         * @pbrbm   pbgfFormbt  tif sizf bnd orifntbtion of tif pbgf bfing drbwn
         * @pbrbm   pbgfIndfx   tif zfro bbsfd indfx of tif pbgf to bf drbwn
         * @pbrbm   pbgfIndfx   tif zfro bbsfd indfx of tif pbgf to bf drbwn
         * @pbrbm   pbgfIndfx   tif zfro bbsfd indfx of tif pbgf to bf drbwn
         * @pbrbm   pbgfIndfx   tif zfro bbsfd indfx of tif pbgf to bf drbwn
         * @pbrbm   pbgfIndfx   tif zfro bbsfd indfx of tif pbgf to bf drbwn
         * @rfturn  PAGE_EXISTS if tif pbgf is rfndfrfd suddfssfully, or
         * @rfturn  PAGE_EXISTS if tif pbgf is rfndfrfd suddfssfully, or
         * @rfturn  PAGE_EXISTS if tif pbgf is rfndfrfd suddfssfully, or
         * @rfturn  PAGE_EXISTS if tif pbgf is rfndfrfd suddfssfully, or
         * @rfturn  PAGE_EXISTS if tif pbgf is rfndfrfd suddfssfully, or
         *          NO_SUCH_PAGE if b non-fxistfnt pbgf indfx is spfdififd
         *          NO_SUCH_PAGE if b non-fxistfnt pbgf indfx is spfdififd
         *          NO_SUCH_PAGE if b non-fxistfnt pbgf indfx is spfdififd
         *          NO_SUCH_PAGE if b non-fxistfnt pbgf indfx is spfdififd
         *          NO_SUCH_PAGE if b non-fxistfnt pbgf indfx is spfdififd
         * @tirows  PrintfrExdfption if bn frror dbusfs printing to bf bbortfd
         * @tirows  PrintfrExdfption if bn frror dbusfs printing to bf bbortfd
         * @tirows  PrintfrExdfption if bn frror dbusfs printing to bf bbortfd
         * @tirows  PrintfrExdfption if bn frror dbusfs printing to bf bbortfd
         * @tirows  PrintfrExdfption if bn frror dbusfs printing to bf bbortfd
         */
         */
         */
         */
         */
        publid int print(finbl Grbpiids grbpiids,
        publid int print(finbl Grbpiids grbpiids,
        publid int print(finbl Grbpiids grbpiids,
        publid int print(finbl Grbpiids grbpiids,
        publid int print(finbl Grbpiids grbpiids,
                         finbl PbgfFormbt pbgfFormbt,
                         finbl PbgfFormbt pbgfFormbt,
                         finbl PbgfFormbt pbgfFormbt,
                         finbl PbgfFormbt pbgfFormbt,
                         finbl PbgfFormbt pbgfFormbt,
                         finbl int pbgfIndfx) tirows PrintfrExdfption {
                         finbl int pbgfIndfx) tirows PrintfrExdfption {
                         finbl int pbgfIndfx) tirows PrintfrExdfption {
                         finbl int pbgfIndfx) tirows PrintfrExdfption {
                         finbl int pbgfIndfx) tirows PrintfrExdfption {





            // Wf'll usf tiis Runnbblf
            // Wf'll usf tiis Runnbblf
            // Wf'll usf tiis Runnbblf
            // Wf'll usf tiis Runnbblf
            // Wf'll usf tiis Runnbblf
            Runnbblf runnbblf = nfw Runnbblf() {
            Runnbblf runnbblf = nfw Runnbblf() {
            Runnbblf runnbblf = nfw Runnbblf() {
            Runnbblf runnbblf = nfw Runnbblf() {
            Runnbblf runnbblf = nfw Runnbblf() {
                publid syndironizfd void run() {
                publid syndironizfd void run() {
                publid syndironizfd void run() {
                publid syndironizfd void run() {
                publid syndironizfd void run() {
                    try {
                    try {
                    try {
                    try {
                    try {
                        // dbll into tif dflfgbtf bnd sbvf tif rfturn vbluf
                        // dbll into tif dflfgbtf bnd sbvf tif rfturn vbluf
                        // dbll into tif dflfgbtf bnd sbvf tif rfturn vbluf
                        // dbll into tif dflfgbtf bnd sbvf tif rfturn vbluf
                        // dbll into tif dflfgbtf bnd sbvf tif rfturn vbluf
                        rftVbl = printDflfgbtf.print(grbpiids, pbgfFormbt, pbgfIndfx);
                        rftVbl = printDflfgbtf.print(grbpiids, pbgfFormbt, pbgfIndfx);
                        rftVbl = printDflfgbtf.print(grbpiids, pbgfFormbt, pbgfIndfx);
                        rftVbl = printDflfgbtf.print(grbpiids, pbgfFormbt, pbgfIndfx);
                        rftVbl = printDflfgbtf.print(grbpiids, pbgfFormbt, pbgfIndfx);
                    } dbtdi (Tirowbblf tirowbblf) {
                    } dbtdi (Tirowbblf tirowbblf) {
                    } dbtdi (Tirowbblf tirowbblf) {
                    } dbtdi (Tirowbblf tirowbblf) {
                    } dbtdi (Tirowbblf tirowbblf) {
                        // sbvf bny Tirowbblf to bf rftirown
                        // sbvf bny Tirowbblf to bf rftirown
                        // sbvf bny Tirowbblf to bf rftirown
                        // sbvf bny Tirowbblf to bf rftirown
                        // sbvf bny Tirowbblf to bf rftirown
                        rftTirowbblf = tirowbblf;
                        rftTirowbblf = tirowbblf;
                        rftTirowbblf = tirowbblf;
                        rftTirowbblf = tirowbblf;
                        rftTirowbblf = tirowbblf;
                    } finblly {
                    } finblly {
                    } finblly {
                    } finblly {
                    } finblly {
                        // notify tif dbllfr tibt wf'rf donf
                        // notify tif dbllfr tibt wf'rf donf
                        // notify tif dbllfr tibt wf'rf donf
                        // notify tif dbllfr tibt wf'rf donf
                        // notify tif dbllfr tibt wf'rf donf
                        notifyAll();
                        notifyAll();
                        notifyAll();
                        notifyAll();
                        notifyAll();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            };
            };
            };
            };
            };





            syndironizfd(runnbblf) {
            syndironizfd(runnbblf) {
            syndironizfd(runnbblf) {
            syndironizfd(runnbblf) {
            syndironizfd(runnbblf) {
                // mbkf surf tifsf brf initiblizfd
                // mbkf surf tifsf brf initiblizfd
                // mbkf surf tifsf brf initiblizfd
                // mbkf surf tifsf brf initiblizfd
                // mbkf surf tifsf brf initiblizfd
                rftVbl = -1;
                rftVbl = -1;
                rftVbl = -1;
                rftVbl = -1;
                rftVbl = -1;
                rftTirowbblf = null;
                rftTirowbblf = null;
                rftTirowbblf = null;
                rftTirowbblf = null;
                rftTirowbblf = null;





                // dbll into tif EDT
                // dbll into tif EDT
                // dbll into tif EDT
                // dbll into tif EDT
                // dbll into tif EDT
                SwingUtilitifs.invokfLbtfr(runnbblf);
                SwingUtilitifs.invokfLbtfr(runnbblf);
                SwingUtilitifs.invokfLbtfr(runnbblf);
                SwingUtilitifs.invokfLbtfr(runnbblf);
                SwingUtilitifs.invokfLbtfr(runnbblf);





                // wbit for tif runnbblf to finisi
                // wbit for tif runnbblf to finisi
                // wbit for tif runnbblf to finisi
                // wbit for tif runnbblf to finisi
                // wbit for tif runnbblf to finisi
                wiilf (rftVbl == -1 && rftTirowbblf == null) {
                wiilf (rftVbl == -1 && rftTirowbblf == null) {
                wiilf (rftVbl == -1 && rftTirowbblf == null) {
                wiilf (rftVbl == -1 && rftTirowbblf == null) {
                wiilf (rftVbl == -1 && rftTirowbblf == null) {
                    try {
                    try {
                    try {
                    try {
                    try {
                        runnbblf.wbit();
                        runnbblf.wbit();
                        runnbblf.wbit();
                        runnbblf.wbit();
                        runnbblf.wbit();
                    } dbtdi (IntfrruptfdExdfption if) {
                    } dbtdi (IntfrruptfdExdfption if) {
                    } dbtdi (IntfrruptfdExdfption if) {
                    } dbtdi (IntfrruptfdExdfption if) {
                    } dbtdi (IntfrruptfdExdfption if) {
                        // siort prodfss, sbff to ignorf intfrrupts
                        // siort prodfss, sbff to ignorf intfrrupts
                        // siort prodfss, sbff to ignorf intfrrupts
                        // siort prodfss, sbff to ignorf intfrrupts
                        // siort prodfss, sbff to ignorf intfrrupts
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }





                // if tif dflfgbtf tirfw b tirowbblf, rftirow it ifrf
                // if tif dflfgbtf tirfw b tirowbblf, rftirow it ifrf
                // if tif dflfgbtf tirfw b tirowbblf, rftirow it ifrf
                // if tif dflfgbtf tirfw b tirowbblf, rftirow it ifrf
                // if tif dflfgbtf tirfw b tirowbblf, rftirow it ifrf
                if (rftTirowbblf != null) {
                if (rftTirowbblf != null) {
                if (rftTirowbblf != null) {
                if (rftTirowbblf != null) {
                if (rftTirowbblf != null) {
                    if (rftTirowbblf instbndfof PrintfrExdfption) {
                    if (rftTirowbblf instbndfof PrintfrExdfption) {
                    if (rftTirowbblf instbndfof PrintfrExdfption) {
                    if (rftTirowbblf instbndfof PrintfrExdfption) {
                    if (rftTirowbblf instbndfof PrintfrExdfption) {
                        tirow (PrintfrExdfption)rftTirowbblf;
                        tirow (PrintfrExdfption)rftTirowbblf;
                        tirow (PrintfrExdfption)rftTirowbblf;
                        tirow (PrintfrExdfption)rftTirowbblf;
                        tirow (PrintfrExdfption)rftTirowbblf;
                    } flsf if (rftTirowbblf instbndfof RuntimfExdfption) {
                    } flsf if (rftTirowbblf instbndfof RuntimfExdfption) {
                    } flsf if (rftTirowbblf instbndfof RuntimfExdfption) {
                    } flsf if (rftTirowbblf instbndfof RuntimfExdfption) {
                    } flsf if (rftTirowbblf instbndfof RuntimfExdfption) {
                        tirow (RuntimfExdfption)rftTirowbblf;
                        tirow (RuntimfExdfption)rftTirowbblf;
                        tirow (RuntimfExdfption)rftTirowbblf;
                        tirow (RuntimfExdfption)rftTirowbblf;
                        tirow (RuntimfExdfption)rftTirowbblf;
                    } flsf if (rftTirowbblf instbndfof Error) {
                    } flsf if (rftTirowbblf instbndfof Error) {
                    } flsf if (rftTirowbblf instbndfof Error) {
                    } flsf if (rftTirowbblf instbndfof Error) {
                    } flsf if (rftTirowbblf instbndfof Error) {
                        tirow (Error)rftTirowbblf;
                        tirow (Error)rftTirowbblf;
                        tirow (Error)rftTirowbblf;
                        tirow (Error)rftTirowbblf;
                        tirow (Error)rftTirowbblf;
                    }
                    }
                    }
                    }
                    }





                    // dbn not ibppfn
                    // dbn not ibppfn
                    // dbn not ibppfn
                    // dbn not ibppfn
                    // dbn not ibppfn
                    tirow nfw AssfrtionError(rftTirowbblf);
                    tirow nfw AssfrtionError(rftTirowbblf);
                    tirow nfw AssfrtionError(rftTirowbblf);
                    tirow nfw AssfrtionError(rftTirowbblf);
                    tirow nfw AssfrtionError(rftTirowbblf);
                }
                }
                }
                }
                }





                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
                rfturn rftVbl;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





/////////////////
/////////////////
/////////////////
/////////////////
/////////////////
// Addfssibility support
// Addfssibility support
// Addfssibility support
// Addfssibility support
// Addfssibility support
////////////////
////////////////
////////////////
////////////////
////////////////





    /**
    /**
    /**
    /**
    /**
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTbblf.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTbblf.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTbblf.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTbblf.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTbblf.
     * For tbblfs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For tbblfs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For tbblfs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For tbblfs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For tbblfs, tif AddfssiblfContfxt tbkfs tif form of bn
     * AddfssiblfJTbblf.
     * AddfssiblfJTbblf.
     * AddfssiblfJTbblf.
     * AddfssiblfJTbblf.
     * AddfssiblfJTbblf.
     * A nfw AddfssiblfJTbblf instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTbblf instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTbblf instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTbblf instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTbblf instbndf is drfbtfd if nfdfssbry.
     *
     *
     *
     *
     *
     * @rfturn bn AddfssiblfJTbblf tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTbblf tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTbblf tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTbblf tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTbblf tibt sfrvfs bs tif
     *         AddfssiblfContfxt of tiis JTbblf
     *         AddfssiblfContfxt of tiis JTbblf
     *         AddfssiblfContfxt of tiis JTbblf
     *         AddfssiblfContfxt of tiis JTbblf
     *         AddfssiblfContfxt of tiis JTbblf
     */
     */
     */
     */
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJTbblf();
            bddfssiblfContfxt = nfw AddfssiblfJTbblf();
            bddfssiblfContfxt = nfw AddfssiblfJTbblf();
            bddfssiblfContfxt = nfw AddfssiblfJTbblf();
            bddfssiblfContfxt = nfw AddfssiblfJTbblf();
        }
        }
        }
        }
        }
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
    }
    }
    }
    }
    }





    //
    //
    //
    //
    //
    // *** siould blso implfmfnt AddfssiblfSflfdtion?
    // *** siould blso implfmfnt AddfssiblfSflfdtion?
    // *** siould blso implfmfnt AddfssiblfSflfdtion?
    // *** siould blso implfmfnt AddfssiblfSflfdtion?
    // *** siould blso implfmfnt AddfssiblfSflfdtion?
    // *** bnd wibt's up witi kfybobrd nbvigbtion/mbnipulbtion?
    // *** bnd wibt's up witi kfybobrd nbvigbtion/mbnipulbtion?
    // *** bnd wibt's up witi kfybobrd nbvigbtion/mbnipulbtion?
    // *** bnd wibt's up witi kfybobrd nbvigbtion/mbnipulbtion?
    // *** bnd wibt's up witi kfybobrd nbvigbtion/mbnipulbtion?
    //
    //
    //
    //
    //
    /**
    /**
    /**
    /**
    /**
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * <dodf>JTbblf</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTbblf</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTbblf</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTbblf</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTbblf</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * Jbvb Addfssibility API bppropribtf to tbblf usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to tbblf usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to tbblf usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to tbblf usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to tbblf usfr-intfrfbdf flfmfnts.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
     */
     */
     */
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    protfdtfd dlbss AddfssiblfJTbblf fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTbblf fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTbblf fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTbblf fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTbblf fxtfnds AddfssiblfJComponfnt
    implfmfnts AddfssiblfSflfdtion, ListSflfdtionListfnfr, TbblfModflListfnfr,
    implfmfnts AddfssiblfSflfdtion, ListSflfdtionListfnfr, TbblfModflListfnfr,
    implfmfnts AddfssiblfSflfdtion, ListSflfdtionListfnfr, TbblfModflListfnfr,
    implfmfnts AddfssiblfSflfdtion, ListSflfdtionListfnfr, TbblfModflListfnfr,
    implfmfnts AddfssiblfSflfdtion, ListSflfdtionListfnfr, TbblfModflListfnfr,
    TbblfColumnModflListfnfr, CfllEditorListfnfr, PropfrtyCibngfListfnfr,
    TbblfColumnModflListfnfr, CfllEditorListfnfr, PropfrtyCibngfListfnfr,
    TbblfColumnModflListfnfr, CfllEditorListfnfr, PropfrtyCibngfListfnfr,
    TbblfColumnModflListfnfr, CfllEditorListfnfr, PropfrtyCibngfListfnfr,
    TbblfColumnModflListfnfr, CfllEditorListfnfr, PropfrtyCibngfListfnfr,
    AddfssiblfExtfndfdTbblf {
    AddfssiblfExtfndfdTbblf {
    AddfssiblfExtfndfdTbblf {
    AddfssiblfExtfndfdTbblf {
    AddfssiblfExtfndfdTbblf {





        int prfviousFodusfdRow;
        int prfviousFodusfdRow;
        int prfviousFodusfdRow;
        int prfviousFodusfdRow;
        int prfviousFodusfdRow;
        int prfviousFodusfdCol;
        int prfviousFodusfdCol;
        int prfviousFodusfdCol;
        int prfviousFodusfdCol;
        int prfviousFodusfdCol;





        /**
        /**
        /**
        /**
        /**
         * AddfssiblfJTbblf donstrudtor
         * AddfssiblfJTbblf donstrudtor
         * AddfssiblfJTbblf donstrudtor
         * AddfssiblfJTbblf donstrudtor
         * AddfssiblfJTbblf donstrudtor
         *
         *
         *
         *
         *
         * @sindf 1.5
         * @sindf 1.5
         * @sindf 1.5
         * @sindf 1.5
         * @sindf 1.5
         */
         */
         */
         */
         */
        protfdtfd AddfssiblfJTbblf() {
        protfdtfd AddfssiblfJTbblf() {
        protfdtfd AddfssiblfJTbblf() {
        protfdtfd AddfssiblfJTbblf() {
        protfdtfd AddfssiblfJTbblf() {
            supfr();
            supfr();
            supfr();
            supfr();
            supfr();
            JTbblf.tiis.bddPropfrtyCibngfListfnfr(tiis);
            JTbblf.tiis.bddPropfrtyCibngfListfnfr(tiis);
            JTbblf.tiis.bddPropfrtyCibngfListfnfr(tiis);
            JTbblf.tiis.bddPropfrtyCibngfListfnfr(tiis);
            JTbblf.tiis.bddPropfrtyCibngfListfnfr(tiis);
            JTbblf.tiis.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            JTbblf.tiis.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            JTbblf.tiis.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            JTbblf.tiis.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            JTbblf.tiis.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            TbblfColumnModfl tdm = JTbblf.tiis.gftColumnModfl();
            TbblfColumnModfl tdm = JTbblf.tiis.gftColumnModfl();
            TbblfColumnModfl tdm = JTbblf.tiis.gftColumnModfl();
            TbblfColumnModfl tdm = JTbblf.tiis.gftColumnModfl();
            TbblfColumnModfl tdm = JTbblf.tiis.gftColumnModfl();
            tdm.bddColumnModflListfnfr(tiis);
            tdm.bddColumnModflListfnfr(tiis);
            tdm.bddColumnModflListfnfr(tiis);
            tdm.bddColumnModflListfnfr(tiis);
            tdm.bddColumnModflListfnfr(tiis);
            tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
            JTbblf.tiis.gftModfl().bddTbblfModflListfnfr(tiis);
            JTbblf.tiis.gftModfl().bddTbblfModflListfnfr(tiis);
            JTbblf.tiis.gftModfl().bddTbblfModflListfnfr(tiis);
            JTbblf.tiis.gftModfl().bddTbblfModflListfnfr(tiis);
            JTbblf.tiis.gftModfl().bddTbblfModflListfnfr(tiis);
            prfviousFodusfdRow = JTbblf.tiis.gftSflfdtionModfl().
            prfviousFodusfdRow = JTbblf.tiis.gftSflfdtionModfl().
            prfviousFodusfdRow = JTbblf.tiis.gftSflfdtionModfl().
            prfviousFodusfdRow = JTbblf.tiis.gftSflfdtionModfl().
            prfviousFodusfdRow = JTbblf.tiis.gftSflfdtionModfl().
                                        gftLfbdSflfdtionIndfx();
                                        gftLfbdSflfdtionIndfx();
                                        gftLfbdSflfdtionIndfx();
                                        gftLfbdSflfdtionIndfx();
                                        gftLfbdSflfdtionIndfx();
            prfviousFodusfdCol = JTbblf.tiis.gftColumnModfl().
            prfviousFodusfdCol = JTbblf.tiis.gftColumnModfl().
            prfviousFodusfdCol = JTbblf.tiis.gftColumnModfl().
            prfviousFodusfdCol = JTbblf.tiis.gftColumnModfl().
            prfviousFodusfdCol = JTbblf.tiis.gftColumnModfl().
                                        gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                                        gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                                        gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                                        gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
                                        gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
        }
        }
        }
        }
        }





    // Listfnfrs to trbdk modfl, ftd. dibngfs to bs to rf-plbdf tif otifr
    // Listfnfrs to trbdk modfl, ftd. dibngfs to bs to rf-plbdf tif otifr
    // Listfnfrs to trbdk modfl, ftd. dibngfs to bs to rf-plbdf tif otifr
    // Listfnfrs to trbdk modfl, ftd. dibngfs to bs to rf-plbdf tif otifr
    // Listfnfrs to trbdk modfl, ftd. dibngfs to bs to rf-plbdf tif otifr
    // listfnfrs
    // listfnfrs
    // listfnfrs
    // listfnfrs
    // listfnfrs





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to sflfdtion modfl, dolumn modfl, ftd. so bs to
         * Trbdk dibngfs to sflfdtion modfl, dolumn modfl, ftd. so bs to
         * Trbdk dibngfs to sflfdtion modfl, dolumn modfl, ftd. so bs to
         * Trbdk dibngfs to sflfdtion modfl, dolumn modfl, ftd. so bs to
         * Trbdk dibngfs to sflfdtion modfl, dolumn modfl, ftd. so bs to
         * bf bblf to rf-plbdf listfnfrs on tiosf in ordfr to pbss on
         * bf bblf to rf-plbdf listfnfrs on tiosf in ordfr to pbss on
         * bf bblf to rf-plbdf listfnfrs on tiosf in ordfr to pbss on
         * bf bblf to rf-plbdf listfnfrs on tiosf in ordfr to pbss on
         * bf bblf to rf-plbdf listfnfrs on tiosf in ordfr to pbss on
         * informbtion to tif Addfssibility PropfrtyCibngf mfdibnism
         * informbtion to tif Addfssibility PropfrtyCibngf mfdibnism
         * informbtion to tif Addfssibility PropfrtyCibngf mfdibnism
         * informbtion to tif Addfssibility PropfrtyCibngf mfdibnism
         * informbtion to tif Addfssibility PropfrtyCibngf mfdibnism
         */
         */
         */
         */
         */
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
            String nbmf = f.gftPropfrtyNbmf();
            String nbmf = f.gftPropfrtyNbmf();
            String nbmf = f.gftPropfrtyNbmf();
            String nbmf = f.gftPropfrtyNbmf();
            String nbmf = f.gftPropfrtyNbmf();
            Objfdt oldVbluf = f.gftOldVbluf();
            Objfdt oldVbluf = f.gftOldVbluf();
            Objfdt oldVbluf = f.gftOldVbluf();
            Objfdt oldVbluf = f.gftOldVbluf();
            Objfdt oldVbluf = f.gftOldVbluf();
            Objfdt nfwVbluf = f.gftNfwVbluf();
            Objfdt nfwVbluf = f.gftNfwVbluf();
            Objfdt nfwVbluf = f.gftNfwVbluf();
            Objfdt nfwVbluf = f.gftNfwVbluf();
            Objfdt nfwVbluf = f.gftNfwVbluf();





                // rf-sft tbblfModfl listfnfrs
                // rf-sft tbblfModfl listfnfrs
                // rf-sft tbblfModfl listfnfrs
                // rf-sft tbblfModfl listfnfrs
                // rf-sft tbblfModfl listfnfrs
            if (nbmf.dompbrfTo("modfl") == 0) {
            if (nbmf.dompbrfTo("modfl") == 0) {
            if (nbmf.dompbrfTo("modfl") == 0) {
            if (nbmf.dompbrfTo("modfl") == 0) {
            if (nbmf.dompbrfTo("modfl") == 0) {





                if (oldVbluf != null && oldVbluf instbndfof TbblfModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfModfl) {
                    ((TbblfModfl) oldVbluf).rfmovfTbblfModflListfnfr(tiis);
                    ((TbblfModfl) oldVbluf).rfmovfTbblfModflListfnfr(tiis);
                    ((TbblfModfl) oldVbluf).rfmovfTbblfModflListfnfr(tiis);
                    ((TbblfModfl) oldVbluf).rfmovfTbblfModflListfnfr(tiis);
                    ((TbblfModfl) oldVbluf).rfmovfTbblfModflListfnfr(tiis);
                }
                }
                }
                }
                }
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfModfl) {
                    ((TbblfModfl) nfwVbluf).bddTbblfModflListfnfr(tiis);
                    ((TbblfModfl) nfwVbluf).bddTbblfModflListfnfr(tiis);
                    ((TbblfModfl) nfwVbluf).bddTbblfModflListfnfr(tiis);
                    ((TbblfModfl) nfwVbluf).bddTbblfModflListfnfr(tiis);
                    ((TbblfModfl) nfwVbluf).bddTbblfModflListfnfr(tiis);
                }
                }
                }
                }
                }





                // rf-sft sflfdtionModfl listfnfrs
                // rf-sft sflfdtionModfl listfnfrs
                // rf-sft sflfdtionModfl listfnfrs
                // rf-sft sflfdtionModfl listfnfrs
                // rf-sft sflfdtionModfl listfnfrs
            } flsf if (nbmf.dompbrfTo("sflfdtionModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("sflfdtionModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("sflfdtionModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("sflfdtionModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("sflfdtionModfl") == 0) {





                Objfdt sourdf = f.gftSourdf();
                Objfdt sourdf = f.gftSourdf();
                Objfdt sourdf = f.gftSourdf();
                Objfdt sourdf = f.gftSourdf();
                Objfdt sourdf = f.gftSourdf();
                if (sourdf == JTbblf.tiis) {    // row sflfdtion modfl
                if (sourdf == JTbblf.tiis) {    // row sflfdtion modfl
                if (sourdf == JTbblf.tiis) {    // row sflfdtion modfl
                if (sourdf == JTbblf.tiis) {    // row sflfdtion modfl
                if (sourdf == JTbblf.tiis) {    // row sflfdtion modfl





                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                    }
                    }
                    }
                    }
                    }
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                    }
                    }
                    }
                    }
                    }





                } flsf if (sourdf == JTbblf.tiis.gftColumnModfl()) {
                } flsf if (sourdf == JTbblf.tiis.gftColumnModfl()) {
                } flsf if (sourdf == JTbblf.tiis.gftColumnModfl()) {
                } flsf if (sourdf == JTbblf.tiis.gftColumnModfl()) {
                } flsf if (sourdf == JTbblf.tiis.gftColumnModfl()) {





                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                    if (oldVbluf != null &&
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        oldVbluf instbndfof ListSflfdtionModfl) {
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) oldVbluf).rfmovfListSflfdtionListfnfr(tiis);
                    }
                    }
                    }
                    }
                    }
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                    if (nfwVbluf != null &&
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        nfwVbluf instbndfof ListSflfdtionModfl) {
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                        ((ListSflfdtionModfl) nfwVbluf).bddListSflfdtionListfnfr(tiis);
                    }
                    }
                    }
                    }
                    }





                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                  //        Systfm.out.println("!!! Bug in sourdf of sflfdtionModfl propfrtyCibngfEvfnt");
                  //        Systfm.out.println("!!! Bug in sourdf of sflfdtionModfl propfrtyCibngfEvfnt");
                  //        Systfm.out.println("!!! Bug in sourdf of sflfdtionModfl propfrtyCibngfEvfnt");
                  //        Systfm.out.println("!!! Bug in sourdf of sflfdtionModfl propfrtyCibngfEvfnt");
                  //        Systfm.out.println("!!! Bug in sourdf of sflfdtionModfl propfrtyCibngfEvfnt");
                }
                }
                }
                }
                }





                // rf-sft dolumnModfl listfnfrs
                // rf-sft dolumnModfl listfnfrs
                // rf-sft dolumnModfl listfnfrs
                // rf-sft dolumnModfl listfnfrs
                // rf-sft dolumnModfl listfnfrs
                // bnd dolumn's sflfdtion propfrty listfnfr bs wfll
                // bnd dolumn's sflfdtion propfrty listfnfr bs wfll
                // bnd dolumn's sflfdtion propfrty listfnfr bs wfll
                // bnd dolumn's sflfdtion propfrty listfnfr bs wfll
                // bnd dolumn's sflfdtion propfrty listfnfr bs wfll
            } flsf if (nbmf.dompbrfTo("dolumnModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("dolumnModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("dolumnModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("dolumnModfl") == 0) {
            } flsf if (nbmf.dompbrfTo("dolumnModfl") == 0) {





                if (oldVbluf != null && oldVbluf instbndfof TbblfColumnModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfColumnModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfColumnModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfColumnModfl) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfColumnModfl) {
                    TbblfColumnModfl tdm = (TbblfColumnModfl) oldVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) oldVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) oldVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) oldVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) oldVbluf;
                    tdm.rfmovfColumnModflListfnfr(tiis);
                    tdm.rfmovfColumnModflListfnfr(tiis);
                    tdm.rfmovfColumnModflListfnfr(tiis);
                    tdm.rfmovfColumnModflListfnfr(tiis);
                    tdm.rfmovfColumnModflListfnfr(tiis);
                    tdm.gftSflfdtionModfl().rfmovfListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().rfmovfListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().rfmovfListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().rfmovfListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().rfmovfListSflfdtionListfnfr(tiis);
                }
                }
                }
                }
                }
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfColumnModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfColumnModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfColumnModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfColumnModfl) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfColumnModfl) {
                    TbblfColumnModfl tdm = (TbblfColumnModfl) nfwVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) nfwVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) nfwVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) nfwVbluf;
                    TbblfColumnModfl tdm = (TbblfColumnModfl) nfwVbluf;
                    tdm.bddColumnModflListfnfr(tiis);
                    tdm.bddColumnModflListfnfr(tiis);
                    tdm.bddColumnModflListfnfr(tiis);
                    tdm.bddColumnModflListfnfr(tiis);
                    tdm.bddColumnModflListfnfr(tiis);
                    tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
                    tdm.gftSflfdtionModfl().bddListSflfdtionListfnfr(tiis);
                }
                }
                }
                }
                }





                // rf-sf dfllEditor listfnfrs
                // rf-sf dfllEditor listfnfrs
                // rf-sf dfllEditor listfnfrs
                // rf-sf dfllEditor listfnfrs
                // rf-sf dfllEditor listfnfrs
            } flsf if (nbmf.dompbrfTo("tbblfCfllEditor") == 0) {
            } flsf if (nbmf.dompbrfTo("tbblfCfllEditor") == 0) {
            } flsf if (nbmf.dompbrfTo("tbblfCfllEditor") == 0) {
            } flsf if (nbmf.dompbrfTo("tbblfCfllEditor") == 0) {
            } flsf if (nbmf.dompbrfTo("tbblfCfllEditor") == 0) {





                if (oldVbluf != null && oldVbluf instbndfof TbblfCfllEditor) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfCfllEditor) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfCfllEditor) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfCfllEditor) {
                if (oldVbluf != null && oldVbluf instbndfof TbblfCfllEditor) {
                    ((TbblfCfllEditor) oldVbluf).rfmovfCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) oldVbluf).rfmovfCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) oldVbluf).rfmovfCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) oldVbluf).rfmovfCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) oldVbluf).rfmovfCfllEditorListfnfr(tiis);
                }
                }
                }
                }
                }
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfCfllEditor) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfCfllEditor) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfCfllEditor) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfCfllEditor) {
                if (nfwVbluf != null && nfwVbluf instbndfof TbblfCfllEditor) {
                    ((TbblfCfllEditor) nfwVbluf).bddCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) nfwVbluf).bddCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) nfwVbluf).bddCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) nfwVbluf).bddCfllEditorListfnfr(tiis);
                    ((TbblfCfllEditor) nfwVbluf).bddCfllEditorListfnfr(tiis);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }










    // Listfnfrs to fdio dibngfs to tif AddfssiblfPropfrtyCibngf mfdibnism
    // Listfnfrs to fdio dibngfs to tif AddfssiblfPropfrtyCibngf mfdibnism
    // Listfnfrs to fdio dibngfs to tif AddfssiblfPropfrtyCibngf mfdibnism
    // Listfnfrs to fdio dibngfs to tif AddfssiblfPropfrtyCibngf mfdibnism
    // Listfnfrs to fdio dibngfs to tif AddfssiblfPropfrtyCibngf mfdibnism





        /**
        /**
        /**
        /**
        /**
         * Dfsdribfs b dibngf in tif bddfssiblf tbblf modfl.
         * Dfsdribfs b dibngf in tif bddfssiblf tbblf modfl.
         * Dfsdribfs b dibngf in tif bddfssiblf tbblf modfl.
         * Dfsdribfs b dibngf in tif bddfssiblf tbblf modfl.
         * Dfsdribfs b dibngf in tif bddfssiblf tbblf modfl.
         */
         */
         */
         */
         */
        protfdtfd dlbss AddfssiblfJTbblfModflCibngf
        protfdtfd dlbss AddfssiblfJTbblfModflCibngf
        protfdtfd dlbss AddfssiblfJTbblfModflCibngf
        protfdtfd dlbss AddfssiblfJTbblfModflCibngf
        protfdtfd dlbss AddfssiblfJTbblfModflCibngf
            implfmfnts AddfssiblfTbblfModflCibngf {
            implfmfnts AddfssiblfTbblfModflCibngf {
            implfmfnts AddfssiblfTbblfModflCibngf {
            implfmfnts AddfssiblfTbblfModflCibngf {
            implfmfnts AddfssiblfTbblfModflCibngf {





            protfdtfd int typf;
            protfdtfd int typf;
            protfdtfd int typf;
            protfdtfd int typf;
            protfdtfd int typf;
            protfdtfd int firstRow;
            protfdtfd int firstRow;
            protfdtfd int firstRow;
            protfdtfd int firstRow;
            protfdtfd int firstRow;
            protfdtfd int lbstRow;
            protfdtfd int lbstRow;
            protfdtfd int lbstRow;
            protfdtfd int lbstRow;
            protfdtfd int lbstRow;
            protfdtfd int firstColumn;
            protfdtfd int firstColumn;
            protfdtfd int firstColumn;
            protfdtfd int firstColumn;
            protfdtfd int firstColumn;
            protfdtfd int lbstColumn;
            protfdtfd int lbstColumn;
            protfdtfd int lbstColumn;
            protfdtfd int lbstColumn;
            protfdtfd int lbstColumn;





            protfdtfd AddfssiblfJTbblfModflCibngf(int typf, int firstRow,
            protfdtfd AddfssiblfJTbblfModflCibngf(int typf, int firstRow,
            protfdtfd AddfssiblfJTbblfModflCibngf(int typf, int firstRow,
            protfdtfd AddfssiblfJTbblfModflCibngf(int typf, int firstRow,
            protfdtfd AddfssiblfJTbblfModflCibngf(int typf, int firstRow,
                                                  int lbstRow, int firstColumn,
                                                  int lbstRow, int firstColumn,
                                                  int lbstRow, int firstColumn,
                                                  int lbstRow, int firstColumn,
                                                  int lbstRow, int firstColumn,
                                                  int lbstColumn) {
                                                  int lbstColumn) {
                                                  int lbstColumn) {
                                                  int lbstColumn) {
                                                  int lbstColumn) {
                tiis.typf = typf;
                tiis.typf = typf;
                tiis.typf = typf;
                tiis.typf = typf;
                tiis.typf = typf;
                tiis.firstRow = firstRow;
                tiis.firstRow = firstRow;
                tiis.firstRow = firstRow;
                tiis.firstRow = firstRow;
                tiis.firstRow = firstRow;
                tiis.lbstRow = lbstRow;
                tiis.lbstRow = lbstRow;
                tiis.lbstRow = lbstRow;
                tiis.lbstRow = lbstRow;
                tiis.lbstRow = lbstRow;
                tiis.firstColumn = firstColumn;
                tiis.firstColumn = firstColumn;
                tiis.firstColumn = firstColumn;
                tiis.firstColumn = firstColumn;
                tiis.firstColumn = firstColumn;
                tiis.lbstColumn = lbstColumn;
                tiis.lbstColumn = lbstColumn;
                tiis.lbstColumn = lbstColumn;
                tiis.lbstColumn = lbstColumn;
                tiis.lbstColumn = lbstColumn;
            }
            }
            }
            }
            }





            publid int gftTypf() {
            publid int gftTypf() {
            publid int gftTypf() {
            publid int gftTypf() {
            publid int gftTypf() {
                rfturn typf;
                rfturn typf;
                rfturn typf;
                rfturn typf;
                rfturn typf;
            }
            }
            }
            }
            }





            publid int gftFirstRow() {
            publid int gftFirstRow() {
            publid int gftFirstRow() {
            publid int gftFirstRow() {
            publid int gftFirstRow() {
                rfturn firstRow;
                rfturn firstRow;
                rfturn firstRow;
                rfturn firstRow;
                rfturn firstRow;
            }
            }
            }
            }
            }





            publid int gftLbstRow() {
            publid int gftLbstRow() {
            publid int gftLbstRow() {
            publid int gftLbstRow() {
            publid int gftLbstRow() {
                rfturn lbstRow;
                rfturn lbstRow;
                rfturn lbstRow;
                rfturn lbstRow;
                rfturn lbstRow;
            }
            }
            }
            }
            }





            publid int gftFirstColumn() {
            publid int gftFirstColumn() {
            publid int gftFirstColumn() {
            publid int gftFirstColumn() {
            publid int gftFirstColumn() {
                rfturn firstColumn;
                rfturn firstColumn;
                rfturn firstColumn;
                rfturn firstColumn;
                rfturn firstColumn;
            }
            }
            }
            }
            }





            publid int gftLbstColumn() {
            publid int gftLbstColumn() {
            publid int gftLbstColumn() {
            publid int gftLbstColumn() {
            publid int gftLbstColumn() {
                rfturn lbstColumn;
                rfturn lbstColumn;
                rfturn lbstColumn;
                rfturn lbstColumn;
                rfturn lbstColumn;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tif tbblf dontfnts
         * Trbdk dibngfs to tif tbblf dontfnts
         * Trbdk dibngfs to tif tbblf dontfnts
         * Trbdk dibngfs to tif tbblf dontfnts
         * Trbdk dibngfs to tif tbblf dontfnts
         *
         *
         *
         *
         *
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         */
         */
         */
         */
         */
        publid void tbblfCibngfd(TbblfModflEvfnt f) {
        publid void tbblfCibngfd(TbblfModflEvfnt f) {
        publid void tbblfCibngfd(TbblfModflEvfnt f) {
        publid void tbblfCibngfd(TbblfModflEvfnt f) {
        publid void tbblfCibngfd(TbblfModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);
           if (f != null) {
           if (f != null) {
           if (f != null) {
           if (f != null) {
           if (f != null) {
               int firstColumn = f.gftColumn();
               int firstColumn = f.gftColumn();
               int firstColumn = f.gftColumn();
               int firstColumn = f.gftColumn();
               int firstColumn = f.gftColumn();
               int lbstColumn = f.gftColumn();
               int lbstColumn = f.gftColumn();
               int lbstColumn = f.gftColumn();
               int lbstColumn = f.gftColumn();
               int lbstColumn = f.gftColumn();
               if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
                   firstColumn = 0;
                   firstColumn = 0;
                   firstColumn = 0;
                   firstColumn = 0;
                   firstColumn = 0;
                   lbstColumn = gftColumnCount() - 1;
                   lbstColumn = gftColumnCount() - 1;
                   lbstColumn = gftColumnCount() - 1;
                   lbstColumn = gftColumnCount() - 1;
                   lbstColumn = gftColumnCount() - 1;
               }
               }
               }
               }
               }





               // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
               // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
               // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
               // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
               // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
               // ibs dibngfd.
               // ibs dibngfd.
               // ibs dibngfd.
               // ibs dibngfd.
               // ibs dibngfd.
               AddfssiblfJTbblfModflCibngf dibngf =
               AddfssiblfJTbblfModflCibngf dibngf =
               AddfssiblfJTbblfModflCibngf dibngf =
               AddfssiblfJTbblfModflCibngf dibngf =
               AddfssiblfJTbblfModflCibngf dibngf =
                   nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                   nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                   nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                   nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                   nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                                                   f.gftFirstRow(),
                                                   f.gftFirstRow(),
                                                   f.gftFirstRow(),
                                                   f.gftFirstRow(),
                                                   f.gftFirstRow(),
                                                   f.gftLbstRow(),
                                                   f.gftLbstRow(),
                                                   f.gftLbstRow(),
                                                   f.gftLbstRow(),
                                                   f.gftLbstRow(),
                                                   firstColumn,
                                                   firstColumn,
                                                   firstColumn,
                                                   firstColumn,
                                                   firstColumn,
                                                   lbstColumn);
                                                   lbstColumn);
                                                   lbstColumn);
                                                   lbstColumn);
                                                   lbstColumn);
               firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
               firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
               firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
               firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
               firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                                  null, dibngf);
                                  null, dibngf);
                                  null, dibngf);
                                  null, dibngf);
                                  null, dibngf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tif tbblf dontfnts (row insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (row insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (row insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (row insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (row insfrtions)
         *
         *
         *
         *
         *
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         */
         */
         */
         */
         */
        publid void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
        publid void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
        publid void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
        publid void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
        publid void tbblfRowsInsfrtfd(TbblfModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);





           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
           }
           }
           }
           }
           }
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tif tbblf dontfnts (row dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (row dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (row dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (row dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (row dflftions)
         *
         *
         *
         *
         *
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         * @pbrbm f b {@dodf TbblfModflEvfnt} dfsdribing tif fvfnt
         */
         */
         */
         */
         */
        publid void tbblfRowsDflftfd(TbblfModflEvfnt f) {
        publid void tbblfRowsDflftfd(TbblfModflEvfnt f) {
        publid void tbblfRowsDflftfd(TbblfModflEvfnt f) {
        publid void tbblfRowsDflftfd(TbblfModflEvfnt f) {
        publid void tbblfRowsDflftfd(TbblfModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);





           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int firstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           int lbstColumn = f.gftColumn();
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
           if (firstColumn == TbblfModflEvfnt.ALL_COLUMNS) {
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               firstColumn = 0;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
               lbstColumn = gftColumnCount() - 1;
           }
           }
           }
           }
           }
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
               nfw AddfssiblfJTbblfModflCibngf(f.gftTypf(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftFirstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               f.gftLbstRow(),
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               firstColumn,
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
                                               lbstColumn);
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn insfrtions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn insfrtions)
         */
         */
         */
         */
         */
        publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
        publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
        publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
        publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
        publid void dolumnAddfd(TbblfColumnModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);





           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           int typf = AddfssiblfTbblfModflCibngf.INSERT;
           int typf = AddfssiblfTbblfModflCibngf.INSERT;
           int typf = AddfssiblfTbblfModflCibngf.INSERT;
           int typf = AddfssiblfTbblfModflCibngf.INSERT;
           int typf = AddfssiblfTbblfModflCibngf.INSERT;
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn dflftions)
         * Trbdk dibngfs to tif tbblf dontfnts (dolumn dflftions)
         */
         */
         */
         */
         */
        publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnRfmovfd(TbblfColumnModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // Firf b propfrty dibngf fvfnt indidbting tif tbblf modfl
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs of b dolumn rfpositioning.
         * Trbdk dibngfs of b dolumn rfpositioning.
         * Trbdk dibngfs of b dolumn rfpositioning.
         * Trbdk dibngfs of b dolumn rfpositioning.
         * Trbdk dibngfs of b dolumn rfpositioning.
         *
         *
         *
         *
         *
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         */
         */
         */
         */
         */
        publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
        publid void dolumnMovfd(TbblfColumnModflEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);





           // Firf propfrty dibngf fvfnts indidbting tif tbblf modfl
           // Firf propfrty dibngf fvfnts indidbting tif tbblf modfl
           // Firf propfrty dibngf fvfnts indidbting tif tbblf modfl
           // Firf propfrty dibngf fvfnts indidbting tif tbblf modfl
           // Firf propfrty dibngf fvfnts indidbting tif tbblf modfl
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           // ibs dibngfd.
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           int typf = AddfssiblfTbblfModflCibngf.DELETE;
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
           AddfssiblfJTbblfModflCibngf dibngf =
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
               nfw AddfssiblfJTbblfModflCibngf(typf,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx(),
                                               f.gftFromIndfx());
                                               f.gftFromIndfx());
                                               f.gftFromIndfx());
                                               f.gftFromIndfx());
                                               f.gftFromIndfx());
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);
                              null, dibngf);





           int typf2 = AddfssiblfTbblfModflCibngf.INSERT;
           int typf2 = AddfssiblfTbblfModflCibngf.INSERT;
           int typf2 = AddfssiblfTbblfModflCibngf.INSERT;
           int typf2 = AddfssiblfTbblfModflCibngf.INSERT;
           int typf2 = AddfssiblfTbblfModflCibngf.INSERT;
           AddfssiblfJTbblfModflCibngf dibngf2 =
           AddfssiblfJTbblfModflCibngf dibngf2 =
           AddfssiblfJTbblfModflCibngf dibngf2 =
           AddfssiblfJTbblfModflCibngf dibngf2 =
           AddfssiblfJTbblfModflCibngf dibngf2 =
               nfw AddfssiblfJTbblfModflCibngf(typf2,
               nfw AddfssiblfJTbblfModflCibngf(typf2,
               nfw AddfssiblfJTbblfModflCibngf(typf2,
               nfw AddfssiblfJTbblfModflCibngf(typf2,
               nfw AddfssiblfJTbblfModflCibngf(typf2,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               0,
                                               f.gftToIndfx(),
                                               f.gftToIndfx(),
                                               f.gftToIndfx(),
                                               f.gftToIndfx(),
                                               f.gftToIndfx(),
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
                                               f.gftToIndfx());
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_MODEL_CHANGED,
                              null, dibngf2);
                              null, dibngf2);
                              null, dibngf2);
                              null, dibngf2);
                              null, dibngf2);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs of b dolumn moving duf to mbrgin dibngfs.
         * Trbdk dibngfs of b dolumn moving duf to mbrgin dibngfs.
         * Trbdk dibngfs of b dolumn moving duf to mbrgin dibngfs.
         * Trbdk dibngfs of b dolumn moving duf to mbrgin dibngfs.
         * Trbdk dibngfs of b dolumn moving duf to mbrgin dibngfs.
         *
         *
         *
         *
         *
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         */
         */
         */
         */
         */
        publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
        publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
        publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
        publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
        publid void dolumnMbrginCibngfd(CibngfEvfnt f) {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk tibt tif sflfdtion modfl of tif TbblfColumnModfl dibngfd.
         * Trbdk tibt tif sflfdtion modfl of tif TbblfColumnModfl dibngfd.
         * Trbdk tibt tif sflfdtion modfl of tif TbblfColumnModfl dibngfd.
         * Trbdk tibt tif sflfdtion modfl of tif TbblfColumnModfl dibngfd.
         * Trbdk tibt tif sflfdtion modfl of tif TbblfColumnModfl dibngfd.
         *
         *
         *
         *
         *
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         * @sff TbblfColumnModflListfnfr
         */
         */
         */
         */
         */
        publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
        publid void dolumnSflfdtionCibngfd(ListSflfdtionEvfnt f) {
            // wf siould now rf-plbdf our TbblfColumn listfnfr
            // wf siould now rf-plbdf our TbblfColumn listfnfr
            // wf siould now rf-plbdf our TbblfColumn listfnfr
            // wf siould now rf-plbdf our TbblfColumn listfnfr
            // wf siould now rf-plbdf our TbblfColumn listfnfr
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to b dfll's dontfnts.
         * Trbdk dibngfs to b dfll's dontfnts.
         * Trbdk dibngfs to b dfll's dontfnts.
         * Trbdk dibngfs to b dfll's dontfnts.
         * Trbdk dibngfs to b dfll's dontfnts.
         *
         *
         *
         *
         *
         * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd, tif
         * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd, tif
         * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd, tif
         * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd, tif
         * Invokfd wifn fditing is finisifd. Tif dibngfs brf sbvfd, tif
         * fditor objfdt is disdbrdfd, bnd tif dfll is rfndfrfd ondf bgbin.
         * fditor objfdt is disdbrdfd, bnd tif dfll is rfndfrfd ondf bgbin.
         * fditor objfdt is disdbrdfd, bnd tif dfll is rfndfrfd ondf bgbin.
         * fditor objfdt is disdbrdfd, bnd tif dfll is rfndfrfd ondf bgbin.
         * fditor objfdt is disdbrdfd, bnd tif dfll is rfndfrfd ondf bgbin.
         *
         *
         *
         *
         *
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         */
         */
         */
         */
         */
        publid void fditingStoppfd(CibngfEvfnt f) {
        publid void fditingStoppfd(CibngfEvfnt f) {
        publid void fditingStoppfd(CibngfEvfnt f) {
        publid void fditingStoppfd(CibngfEvfnt f) {
        publid void fditingStoppfd(CibngfEvfnt f) {
           // it'd bf grfbt if wf dould figurf out wiidi dfll, bnd pbss tibt
           // it'd bf grfbt if wf dould figurf out wiidi dfll, bnd pbss tibt
           // it'd bf grfbt if wf dould figurf out wiidi dfll, bnd pbss tibt
           // it'd bf grfbt if wf dould figurf out wiidi dfll, bnd pbss tibt
           // it'd bf grfbt if wf dould figurf out wiidi dfll, bnd pbss tibt
           // somfiow bs b pbrbmftfr
           // somfiow bs b pbrbmftfr
           // somfiow bs b pbrbmftfr
           // somfiow bs b pbrbmftfr
           // somfiow bs b pbrbmftfr
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              null, null);
                              null, null);
                              null, null);
                              null, null);
                              null, null);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
         * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
         * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
         * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
         * Invokfd wifn fditing is dbndflfd. Tif fditor objfdt is disdbrdfd
         * bnd tif dfll is rfndfrfd ondf bgbin.
         * bnd tif dfll is rfndfrfd ondf bgbin.
         * bnd tif dfll is rfndfrfd ondf bgbin.
         * bnd tif dfll is rfndfrfd ondf bgbin.
         * bnd tif dfll is rfndfrfd ondf bgbin.
         *
         *
         *
         *
         *
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         * @sff CfllEditorListfnfr
         */
         */
         */
         */
         */
        publid void fditingCbndflfd(CibngfEvfnt f) {
        publid void fditingCbndflfd(CibngfEvfnt f) {
        publid void fditingCbndflfd(CibngfEvfnt f) {
        publid void fditingCbndflfd(CibngfEvfnt f) {
        publid void fditingCbndflfd(CibngfEvfnt f) {
            // notiing to rfport, 'dbusf notiing dibngfd
            // notiing to rfport, 'dbusf notiing dibngfd
            // notiing to rfport, 'dbusf notiing dibngfd
            // notiing to rfport, 'dbusf notiing dibngfd
            // notiing to rfport, 'dbusf notiing dibngfd
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trbdk dibngfs to tbblf dfll sflfdtions
         * Trbdk dibngfs to tbblf dfll sflfdtions
         * Trbdk dibngfs to tbblf dfll sflfdtions
         * Trbdk dibngfs to tbblf dfll sflfdtions
         * Trbdk dibngfs to tbblf dfll sflfdtions
         */
         */
         */
         */
         */
        publid void vblufCibngfd(ListSflfdtionEvfnt f) {
        publid void vblufCibngfd(ListSflfdtionEvfnt f) {
        publid void vblufCibngfd(ListSflfdtionEvfnt f) {
        publid void vblufCibngfd(ListSflfdtionEvfnt f) {
        publid void vblufCibngfd(ListSflfdtionEvfnt f) {
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                            Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                            Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                            Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                            Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                            Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));





            // Using lfbd sflfdtion indfx to dovfr boti dbsfs: nodf sflfdtfd bnd nodf
            // Using lfbd sflfdtion indfx to dovfr boti dbsfs: nodf sflfdtfd bnd nodf
            // Using lfbd sflfdtion indfx to dovfr boti dbsfs: nodf sflfdtfd bnd nodf
            // Using lfbd sflfdtion indfx to dovfr boti dbsfs: nodf sflfdtfd bnd nodf
            // Using lfbd sflfdtion indfx to dovfr boti dbsfs: nodf sflfdtfd bnd nodf
            // is fodusfd but not sflfdtfd (Ctrl+up/down)
            // is fodusfd but not sflfdtfd (Ctrl+up/down)
            // is fodusfd but not sflfdtfd (Ctrl+up/down)
            // is fodusfd but not sflfdtfd (Ctrl+up/down)
            // is fodusfd but not sflfdtfd (Ctrl+up/down)
            int fodusfdRow = JTbblf.tiis.gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
            int fodusfdRow = JTbblf.tiis.gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
            int fodusfdRow = JTbblf.tiis.gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
            int fodusfdRow = JTbblf.tiis.gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
            int fodusfdRow = JTbblf.tiis.gftSflfdtionModfl().gftLfbdSflfdtionIndfx();
            int fodusfdCol = JTbblf.tiis.gftColumnModfl().gftSflfdtionModfl().
            int fodusfdCol = JTbblf.tiis.gftColumnModfl().gftSflfdtionModfl().
            int fodusfdCol = JTbblf.tiis.gftColumnModfl().gftSflfdtionModfl().
            int fodusfdCol = JTbblf.tiis.gftColumnModfl().gftSflfdtionModfl().
            int fodusfdCol = JTbblf.tiis.gftColumnModfl().gftSflfdtionModfl().
                                                    gftLfbdSflfdtionIndfx();
                                                    gftLfbdSflfdtionIndfx();
                                                    gftLfbdSflfdtionIndfx();
                                                    gftLfbdSflfdtionIndfx();
                                                    gftLfbdSflfdtionIndfx();





            if (fodusfdRow != prfviousFodusfdRow ||
            if (fodusfdRow != prfviousFodusfdRow ||
            if (fodusfdRow != prfviousFodusfdRow ||
            if (fodusfdRow != prfviousFodusfdRow ||
            if (fodusfdRow != prfviousFodusfdRow ||
                fodusfdCol != prfviousFodusfdCol) {
                fodusfdCol != prfviousFodusfdCol) {
                fodusfdCol != prfviousFodusfdCol) {
                fodusfdCol != prfviousFodusfdCol) {
                fodusfdCol != prfviousFodusfdCol) {
                Addfssiblf oldA = gftAddfssiblfAt(prfviousFodusfdRow, prfviousFodusfdCol);
                Addfssiblf oldA = gftAddfssiblfAt(prfviousFodusfdRow, prfviousFodusfdCol);
                Addfssiblf oldA = gftAddfssiblfAt(prfviousFodusfdRow, prfviousFodusfdCol);
                Addfssiblf oldA = gftAddfssiblfAt(prfviousFodusfdRow, prfviousFodusfdCol);
                Addfssiblf oldA = gftAddfssiblfAt(prfviousFodusfdRow, prfviousFodusfdCol);
                Addfssiblf nfwA = gftAddfssiblfAt(fodusfdRow, fodusfdCol);
                Addfssiblf nfwA = gftAddfssiblfAt(fodusfdRow, fodusfdCol);
                Addfssiblf nfwA = gftAddfssiblfAt(fodusfdRow, fodusfdCol);
                Addfssiblf nfwA = gftAddfssiblfAt(fodusfdRow, fodusfdCol);
                Addfssiblf nfwA = gftAddfssiblfAt(fodusfdRow, fodusfdCol);
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                                    oldA, nfwA);
                                    oldA, nfwA);
                                    oldA, nfwA);
                                    oldA, nfwA);
                                    oldA, nfwA);
                prfviousFodusfdRow = fodusfdRow;
                prfviousFodusfdRow = fodusfdRow;
                prfviousFodusfdRow = fodusfdRow;
                prfviousFodusfdRow = fodusfdRow;
                prfviousFodusfdRow = fodusfdRow;
                prfviousFodusfdCol = fodusfdCol;
                prfviousFodusfdCol = fodusfdCol;
                prfviousFodusfdCol = fodusfdCol;
                prfviousFodusfdCol = fodusfdCol;
                prfviousFodusfdCol = fodusfdCol;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }




















    // AddfssiblfContfxt support
    // AddfssiblfContfxt support
    // AddfssiblfContfxt support
    // AddfssiblfContfxt support
    // AddfssiblfContfxt support





        /**
        /**
        /**
        /**
        /**
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         *
         *
         *
         *
         *
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         */
         */
         */
         */
         */
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Gfts tif rolf of tiis objfdt.
         * Gfts tif rolf of tiis objfdt.
         * Gfts tif rolf of tiis objfdt.
         * Gfts tif rolf of tiis objfdt.
         * Gfts tif rolf of tiis objfdt.
         *
         *
         *
         *
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * objfdt
         * objfdt
         * objfdt
         * objfdt
         * objfdt
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         */
         */
         */
         */
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.TABLE;
            rfturn AddfssiblfRolf.TABLE;
            rfturn AddfssiblfRolf.TABLE;
            rfturn AddfssiblfRolf.TABLE;
            rfturn AddfssiblfRolf.TABLE;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         *
         *
         *
         *
         *
         * @pbrbm p tif point dffining tif top-lfft dornfr of tif
         * @pbrbm p tif point dffining tif top-lfft dornfr of tif
         * @pbrbm p tif point dffining tif top-lfft dornfr of tif
         * @pbrbm p tif point dffining tif top-lfft dornfr of tif
         * @pbrbm p tif point dffining tif top-lfft dornfr of tif
         *    <dodf>Addfssiblf</dodf>, givfn in tif doordinbtf spbdf
         *    <dodf>Addfssiblf</dodf>, givfn in tif doordinbtf spbdf
         *    <dodf>Addfssiblf</dodf>, givfn in tif doordinbtf spbdf
         *    <dodf>Addfssiblf</dodf>, givfn in tif doordinbtf spbdf
         *    <dodf>Addfssiblf</dodf>, givfn in tif doordinbtf spbdf
         *    of tif objfdt's pbrfnt
         *    of tif objfdt's pbrfnt
         *    of tif objfdt's pbrfnt
         *    of tif objfdt's pbrfnt
         *    of tif objfdt's pbrfnt
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
            int dolumn = dolumnAtPoint(p);
            int dolumn = dolumnAtPoint(p);
            int dolumn = dolumnAtPoint(p);
            int dolumn = dolumnAtPoint(p);
            int dolumn = dolumnAtPoint(p);
            int row = rowAtPoint(p);
            int row = rowAtPoint(p);
            int row = rowAtPoint(p);
            int row = rowAtPoint(p);
            int row = rowAtPoint(p);





            if ((dolumn != -1) && (row != -1)) {
            if ((dolumn != -1) && (row != -1)) {
            if ((dolumn != -1) && (row != -1)) {
            if ((dolumn != -1) && (row != -1)) {
            if ((dolumn != -1) && (row != -1)) {
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                }
                }
                }
                }
                }
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
            }
            }
            }
            }
            }
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.  If bll
         * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.  If bll
         * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.  If bll
         * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.  If bll
         * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.  If bll
         * of tif diildrfn of tiis objfdt implfmfnt <dodf>Addfssiblf</dodf>,
         * of tif diildrfn of tiis objfdt implfmfnt <dodf>Addfssiblf</dodf>,
         * of tif diildrfn of tiis objfdt implfmfnt <dodf>Addfssiblf</dodf>,
         * of tif diildrfn of tiis objfdt implfmfnt <dodf>Addfssiblf</dodf>,
         * of tif diildrfn of tiis objfdt implfmfnt <dodf>Addfssiblf</dodf>,
         * tifn tiis mftiod siould rfturn tif numbfr of diildrfn of tiis objfdt.
         * tifn tiis mftiod siould rfturn tif numbfr of diildrfn of tiis objfdt.
         * tifn tiis mftiod siould rfturn tif numbfr of diildrfn of tiis objfdt.
         * tifn tiis mftiod siould rfturn tif numbfr of diildrfn of tiis objfdt.
         * tifn tiis mftiod siould rfturn tif numbfr of diildrfn of tiis objfdt.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
         * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
         * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
         * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
         * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
         */
         */
         */
         */
         */
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
            rfturn (JTbblf.tiis.gftColumnCount() * JTbblf.tiis.gftRowCount());
            rfturn (JTbblf.tiis.gftColumnCount() * JTbblf.tiis.gftRowCount());
            rfturn (JTbblf.tiis.gftColumnCount() * JTbblf.tiis.gftRowCount());
            rfturn (JTbblf.tiis.gftColumnCount() * JTbblf.tiis.gftRowCount());
            rfturn (JTbblf.tiis.gftColumnCount() * JTbblf.tiis.gftRowCount());
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif nti <dodf>Addfssiblf</dodf> diild of tif objfdt.
         * Rfturns tif nti <dodf>Addfssiblf</dodf> diild of tif objfdt.
         * Rfturns tif nti <dodf>Addfssiblf</dodf> diild of tif objfdt.
         * Rfturns tif nti <dodf>Addfssiblf</dodf> diild of tif objfdt.
         * Rfturns tif nti <dodf>Addfssiblf</dodf> diild of tif objfdt.
         *
         *
         *
         *
         *
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
            if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
            if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
            if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
            if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
            if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // diildrfn indrfbsf bdross, bnd tifn down, for tbblfs
                // diildrfn indrfbsf bdross, bnd tifn down, for tbblfs
                // diildrfn indrfbsf bdross, bnd tifn down, for tbblfs
                // diildrfn indrfbsf bdross, bnd tifn down, for tbblfs
                // diildrfn indrfbsf bdross, bnd tifn down, for tbblfs
                // (brbitrbry dfdision)
                // (brbitrbry dfdision)
                // (brbitrbry dfdision)
                // (brbitrbry dfdision)
                // (brbitrbry dfdision)
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);





                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                }
                }
                }
                }
                }
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                rfturn nfw AddfssiblfJTbblfCfll(JTbblf.tiis, row, dolumn,
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
                      gftAddfssiblfIndfxAt(row, dolumn));
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





    // AddfssiblfSflfdtion support
    // AddfssiblfSflfdtion support
    // AddfssiblfSflfdtion support
    // AddfssiblfSflfdtion support
    // AddfssiblfSflfdtion support





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of <dodf>Addfssiblf</dodf> diildrfn
         * Rfturns tif numbfr of <dodf>Addfssiblf</dodf> diildrfn
         * Rfturns tif numbfr of <dodf>Addfssiblf</dodf> diildrfn
         * Rfturns tif numbfr of <dodf>Addfssiblf</dodf> diildrfn
         * Rfturns tif numbfr of <dodf>Addfssiblf</dodf> diildrfn
         * durrfntly sflfdtfd.
         * durrfntly sflfdtfd.
         * durrfntly sflfdtfd.
         * durrfntly sflfdtfd.
         * durrfntly sflfdtfd.
         * If no diildrfn brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no diildrfn brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no diildrfn brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no diildrfn brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no diildrfn brf sflfdtfd, tif rfturn vbluf will bf 0.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd
         */
         */
         */
         */
         */
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();





            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
                rfturn rowsSfl * dolsSfl;
                rfturn rowsSfl * dolsSfl;
                rfturn rowsSfl * dolsSfl;
                rfturn rowsSfl * dolsSfl;
                rfturn rowsSfl * dolsSfl;





            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount() +
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount() +
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount() +
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount() +
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount() +
                           dolsSfl * JTbblf.tiis.gftRowCount() -
                           dolsSfl * JTbblf.tiis.gftRowCount() -
                           dolsSfl * JTbblf.tiis.gftRowCount() -
                           dolsSfl * JTbblf.tiis.gftRowCount() -
                           dolsSfl * JTbblf.tiis.gftRowCount() -
                           rowsSfl * dolsSfl;
                           rowsSfl * dolsSfl;
                           rowsSfl * dolsSfl;
                           rowsSfl * dolsSfl;
                           rowsSfl * dolsSfl;





                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount();
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount();
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount();
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount();
                    rfturn rowsSfl * JTbblf.tiis.gftColumnCount();





                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                // just onf or morf rows in sflfdtion
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    rfturn dolsSfl * JTbblf.tiis.gftRowCount();
                    rfturn dolsSfl * JTbblf.tiis.gftRowCount();
                    rfturn dolsSfl * JTbblf.tiis.gftRowCount();
                    rfturn dolsSfl * JTbblf.tiis.gftRowCount();
                    rfturn dolsSfl * JTbblf.tiis.gftRowCount();





                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn 0;    // JTbblf dofsn't bllow sflfdtions
                    rfturn 0;    // JTbblf dofsn't bllow sflfdtions
                    rfturn 0;    // JTbblf dofsn't bllow sflfdtions
                    rfturn 0;    // JTbblf dofsn't bllow sflfdtions
                    rfturn 0;    // JTbblf dofsn't bllow sflfdtions
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns bn <dodf>Addfssiblf</dodf> rfprfsfnting tif
         * Rfturns bn <dodf>Addfssiblf</dodf> rfprfsfnting tif
         * Rfturns bn <dodf>Addfssiblf</dodf> rfprfsfnting tif
         * Rfturns bn <dodf>Addfssiblf</dodf> rfprfsfnting tif
         * Rfturns bn <dodf>Addfssiblf</dodf> rfprfsfnting tif
         * spfdififd sflfdtfd diild in tif objfdt.  If tifrf
         * spfdififd sflfdtfd diild in tif objfdt.  If tifrf
         * spfdififd sflfdtfd diild in tif objfdt.  If tifrf
         * spfdififd sflfdtfd diild in tif objfdt.  If tifrf
         * spfdififd sflfdtfd diild in tif objfdt.  If tifrf
         * isn't b sflfdtion, or tifrf brf ffwfr diildrfn sflfdtfd
         * isn't b sflfdtion, or tifrf brf ffwfr diildrfn sflfdtfd
         * isn't b sflfdtion, or tifrf brf ffwfr diildrfn sflfdtfd
         * isn't b sflfdtion, or tifrf brf ffwfr diildrfn sflfdtfd
         * isn't b sflfdtion, or tifrf brf ffwfr diildrfn sflfdtfd
         * tibn tif intfgfr pbssfd in, tif rfturn
         * tibn tif intfgfr pbssfd in, tif rfturn
         * tibn tif intfgfr pbssfd in, tif rfturn
         * tibn tif intfgfr pbssfd in, tif rfturn
         * tibn tif intfgfr pbssfd in, tif rfturn
         * vbluf will bf <dodf>null</dodf>.
         * vbluf will bf <dodf>null</dodf>.
         * vbluf will bf <dodf>null</dodf>.
         * vbluf will bf <dodf>null</dodf>.
         * vbluf will bf <dodf>null</dodf>.
         * <p>Notf tibt tif indfx rfprfsfnts tif i-ti sflfdtfd diild, wiidi
         * <p>Notf tibt tif indfx rfprfsfnts tif i-ti sflfdtfd diild, wiidi
         * <p>Notf tibt tif indfx rfprfsfnts tif i-ti sflfdtfd diild, wiidi
         * <p>Notf tibt tif indfx rfprfsfnts tif i-ti sflfdtfd diild, wiidi
         * <p>Notf tibt tif indfx rfprfsfnts tif i-ti sflfdtfd diild, wiidi
         * is difffrfnt from tif i-ti diild.
         * is difffrfnt from tif i-ti diild.
         * is difffrfnt from tif i-ti diild.
         * is difffrfnt from tif i-ti diild.
         * is difffrfnt from tif i-ti diild.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd diildrfn
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd diildrfn
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd diildrfn
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd diildrfn
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd diildrfn
         * @rfturn tif i-ti sflfdtfd diild
         * @rfturn tif i-ti sflfdtfd diild
         * @rfturn tif i-ti sflfdtfd diild
         * @rfturn tif i-ti sflfdtfd diild
         * @rfturn tif i-ti sflfdtfd diild
         * @sff #gftAddfssiblfSflfdtionCount
         * @sff #gftAddfssiblfSflfdtionCount
         * @sff #gftAddfssiblfSflfdtionCount
         * @sff #gftAddfssiblfSflfdtionCount
         * @sff #gftAddfssiblfSflfdtionCount
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            if (i < 0 || i > gftAddfssiblfSflfdtionCount()) {
            if (i < 0 || i > gftAddfssiblfSflfdtionCount()) {
            if (i < 0 || i > gftAddfssiblfSflfdtionCount()) {
            if (i < 0 || i > gftAddfssiblfSflfdtionCount()) {
            if (i < 0 || i > gftAddfssiblfSflfdtionCount()) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int rowsSfl = JTbblf.tiis.gftSflfdtfdRowCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int dolsSfl = JTbblf.tiis.gftSflfdtfdColumnCount();
            int rowIndidifs[] = gftSflfdtfdRows();
            int rowIndidifs[] = gftSflfdtfdRows();
            int rowIndidifs[] = gftSflfdtfdRows();
            int rowIndidifs[] = gftSflfdtfdRows();
            int rowIndidifs[] = gftSflfdtfdRows();
            int dolIndidifs[] = gftSflfdtfdColumns();
            int dolIndidifs[] = gftSflfdtfdColumns();
            int dolIndidifs[] = gftSflfdtfdColumns();
            int dolIndidifs[] = gftSflfdtfdColumns();
            int dolIndidifs[] = gftSflfdtfdColumns();
            int ttlCols = JTbblf.tiis.gftColumnCount();
            int ttlCols = JTbblf.tiis.gftColumnCount();
            int ttlCols = JTbblf.tiis.gftColumnCount();
            int ttlCols = JTbblf.tiis.gftColumnCount();
            int ttlCols = JTbblf.tiis.gftColumnCount();
            int ttlRows = JTbblf.tiis.gftRowCount();
            int ttlRows = JTbblf.tiis.gftRowCount();
            int ttlRows = JTbblf.tiis.gftRowCount();
            int ttlRows = JTbblf.tiis.gftRowCount();
            int ttlRows = JTbblf.tiis.gftRowCount();
            int r;
            int r;
            int r;
            int r;
            int r;
            int d;
            int d;
            int d;
            int d;
            int d;





            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) { // b dontiguous blodk
                r = rowIndidifs[i / dolsSfl];
                r = rowIndidifs[i / dolsSfl];
                r = rowIndidifs[i / dolsSfl];
                r = rowIndidifs[i / dolsSfl];
                r = rowIndidifs[i / dolsSfl];
                d = dolIndidifs[i % dolsSfl];
                d = dolIndidifs[i % dolsSfl];
                d = dolIndidifs[i % dolsSfl];
                d = dolIndidifs[i % dolsSfl];
                d = dolIndidifs[i % dolsSfl];
                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {





                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                // b dolumn swbti bnd b row swbti, witi b sibrfd blodk
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                if (JTbblf.tiis.gftRowSflfdtionAllowfd() &&
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    JTbblf.tiis.gftColumnSflfdtionAllowfd()) {





                    // Situbtion:
                    // Situbtion:
                    // Situbtion:
                    // Situbtion:
                    // Situbtion:
                    //   Wf ibvf b tbblf, likf tif 6x3 tbblf bflow,
                    //   Wf ibvf b tbblf, likf tif 6x3 tbblf bflow,
                    //   Wf ibvf b tbblf, likf tif 6x3 tbblf bflow,
                    //   Wf ibvf b tbblf, likf tif 6x3 tbblf bflow,
                    //   Wf ibvf b tbblf, likf tif 6x3 tbblf bflow,
                    //   wifrfin tirff dolums bnd onf row sflfdtfd
                    //   wifrfin tirff dolums bnd onf row sflfdtfd
                    //   wifrfin tirff dolums bnd onf row sflfdtfd
                    //   wifrfin tirff dolums bnd onf row sflfdtfd
                    //   wifrfin tirff dolums bnd onf row sflfdtfd
                    //   (sflfdtfd dflls mbrkfd witi "*", unsflfdtfd "0"):
                    //   (sflfdtfd dflls mbrkfd witi "*", unsflfdtfd "0"):
                    //   (sflfdtfd dflls mbrkfd witi "*", unsflfdtfd "0"):
                    //   (sflfdtfd dflls mbrkfd witi "*", unsflfdtfd "0"):
                    //   (sflfdtfd dflls mbrkfd witi "*", unsflfdtfd "0"):
                    //
                    //
                    //
                    //
                    //
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            * * * * * *
                    //            * * * * * *
                    //            * * * * * *
                    //            * * * * * *
                    //            * * * * * *
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //            0 * 0 * * 0
                    //
                    //
                    //
                    //
                    //





                    // Stbtf mbdiinf bflow wblks tirougi tif brrby of
                    // Stbtf mbdiinf bflow wblks tirougi tif brrby of
                    // Stbtf mbdiinf bflow wblks tirougi tif brrby of
                    // Stbtf mbdiinf bflow wblks tirougi tif brrby of
                    // Stbtf mbdiinf bflow wblks tirougi tif brrby of
                    // sflfdtfd rows in two stbtfs: in b sflfdtfd row,
                    // sflfdtfd rows in two stbtfs: in b sflfdtfd row,
                    // sflfdtfd rows in two stbtfs: in b sflfdtfd row,
                    // sflfdtfd rows in two stbtfs: in b sflfdtfd row,
                    // sflfdtfd rows in two stbtfs: in b sflfdtfd row,
                    // bnd not in onf; dontinuing until wf brf in b row
                    // bnd not in onf; dontinuing until wf brf in b row
                    // bnd not in onf; dontinuing until wf brf in b row
                    // bnd not in onf; dontinuing until wf brf in b row
                    // bnd not in onf; dontinuing until wf brf in b row
                    // in wiidi tif iti sflfdtion fxists.  Tifn wf rfturn
                    // in wiidi tif iti sflfdtion fxists.  Tifn wf rfturn
                    // in wiidi tif iti sflfdtion fxists.  Tifn wf rfturn
                    // in wiidi tif iti sflfdtion fxists.  Tifn wf rfturn
                    // in wiidi tif iti sflfdtion fxists.  Tifn wf rfturn
                    // tif bppropribtf dfll.  In tif stbtf mbdiinf, wf
                    // tif bppropribtf dfll.  In tif stbtf mbdiinf, wf
                    // tif bppropribtf dfll.  In tif stbtf mbdiinf, wf
                    // tif bppropribtf dfll.  In tif stbtf mbdiinf, wf
                    // tif bppropribtf dfll.  In tif stbtf mbdiinf, wf
                    // blwbys do rows bbovf tif "durrfnt" sflfdtfd row first,
                    // blwbys do rows bbovf tif "durrfnt" sflfdtfd row first,
                    // blwbys do rows bbovf tif "durrfnt" sflfdtfd row first,
                    // blwbys do rows bbovf tif "durrfnt" sflfdtfd row first,
                    // blwbys do rows bbovf tif "durrfnt" sflfdtfd row first,
                    // tifn tif dflls in tif sflfdtfd row.  If wf'rf donf
                    // tifn tif dflls in tif sflfdtfd row.  If wf'rf donf
                    // tifn tif dflls in tif sflfdtfd row.  If wf'rf donf
                    // tifn tif dflls in tif sflfdtfd row.  If wf'rf donf
                    // tifn tif dflls in tif sflfdtfd row.  If wf'rf donf
                    // witi tif stbtf mbdiinf bfforf finding tif rfqufstfd
                    // witi tif stbtf mbdiinf bfforf finding tif rfqufstfd
                    // witi tif stbtf mbdiinf bfforf finding tif rfqufstfd
                    // witi tif stbtf mbdiinf bfforf finding tif rfqufstfd
                    // witi tif stbtf mbdiinf bfforf finding tif rfqufstfd
                    // sflfdtfd diild, wf ibndlf tif rows bflow tif lbst
                    // sflfdtfd diild, wf ibndlf tif rows bflow tif lbst
                    // sflfdtfd diild, wf ibndlf tif rows bflow tif lbst
                    // sflfdtfd diild, wf ibndlf tif rows bflow tif lbst
                    // sflfdtfd diild, wf ibndlf tif rows bflow tif lbst
                    // sflfdtfd row bt tif fnd.
                    // sflfdtfd row bt tif fnd.
                    // sflfdtfd row bt tif fnd.
                    // sflfdtfd row bt tif fnd.
                    // sflfdtfd row bt tif fnd.
                    //
                    //
                    //
                    //
                    //
                    int durIndfx = i;
                    int durIndfx = i;
                    int durIndfx = i;
                    int durIndfx = i;
                    int durIndfx = i;
                    finbl int IN_ROW = 0;
                    finbl int IN_ROW = 0;
                    finbl int IN_ROW = 0;
                    finbl int IN_ROW = 0;
                    finbl int IN_ROW = 0;
                    finbl int NOT_IN_ROW = 1;
                    finbl int NOT_IN_ROW = 1;
                    finbl int NOT_IN_ROW = 1;
                    finbl int NOT_IN_ROW = 1;
                    finbl int NOT_IN_ROW = 1;
                    int stbtf = (rowIndidifs[0] == 0 ? IN_ROW : NOT_IN_ROW);
                    int stbtf = (rowIndidifs[0] == 0 ? IN_ROW : NOT_IN_ROW);
                    int stbtf = (rowIndidifs[0] == 0 ? IN_ROW : NOT_IN_ROW);
                    int stbtf = (rowIndidifs[0] == 0 ? IN_ROW : NOT_IN_ROW);
                    int stbtf = (rowIndidifs[0] == 0 ? IN_ROW : NOT_IN_ROW);
                    int j = 0;
                    int j = 0;
                    int j = 0;
                    int j = 0;
                    int j = 0;
                    int prfvRow = -1;
                    int prfvRow = -1;
                    int prfvRow = -1;
                    int prfvRow = -1;
                    int prfvRow = -1;
                    wiilf (j < rowIndidifs.lfngti) {
                    wiilf (j < rowIndidifs.lfngti) {
                    wiilf (j < rowIndidifs.lfngti) {
                    wiilf (j < rowIndidifs.lfngti) {
                    wiilf (j < rowIndidifs.lfngti) {
                        switdi (stbtf) {
                        switdi (stbtf) {
                        switdi (stbtf) {
                        switdi (stbtf) {
                        switdi (stbtf) {





                        dbsf IN_ROW:   // on individubl row full of sflfdtions
                        dbsf IN_ROW:   // on individubl row full of sflfdtions
                        dbsf IN_ROW:   // on individubl row full of sflfdtions
                        dbsf IN_ROW:   // on individubl row full of sflfdtions
                        dbsf IN_ROW:   // on individubl row full of sflfdtions
                            if (durIndfx < ttlCols) { // it's ifrf!
                            if (durIndfx < ttlCols) { // it's ifrf!
                            if (durIndfx < ttlCols) { // it's ifrf!
                            if (durIndfx < ttlCols) { // it's ifrf!
                            if (durIndfx < ttlCols) { // it's ifrf!
                                d = durIndfx % ttlCols;
                                d = durIndfx % ttlCols;
                                d = durIndfx % ttlCols;
                                d = durIndfx % ttlCols;
                                d = durIndfx % ttlCols;
                                r = rowIndidifs[j];
                                r = rowIndidifs[j];
                                r = rowIndidifs[j];
                                r = rowIndidifs[j];
                                r = rowIndidifs[j];
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                                durIndfx -= ttlCols;
                                durIndfx -= ttlCols;
                                durIndfx -= ttlCols;
                                durIndfx -= ttlCols;
                                durIndfx -= ttlCols;
                            }
                            }
                            }
                            }
                            }
                            // is tif nfxt row in tbblf sflfdtfd or not?
                            // is tif nfxt row in tbblf sflfdtfd or not?
                            // is tif nfxt row in tbblf sflfdtfd or not?
                            // is tif nfxt row in tbblf sflfdtfd or not?
                            // is tif nfxt row in tbblf sflfdtfd or not?
                            if (j + 1 == rowIndidifs.lfngti ||
                            if (j + 1 == rowIndidifs.lfngti ||
                            if (j + 1 == rowIndidifs.lfngti ||
                            if (j + 1 == rowIndidifs.lfngti ||
                            if (j + 1 == rowIndidifs.lfngti ||
                                rowIndidifs[j] != rowIndidifs[j+1] - 1) {
                                rowIndidifs[j] != rowIndidifs[j+1] - 1) {
                                rowIndidifs[j] != rowIndidifs[j+1] - 1) {
                                rowIndidifs[j] != rowIndidifs[j+1] - 1) {
                                rowIndidifs[j] != rowIndidifs[j+1] - 1) {
                                stbtf = NOT_IN_ROW;
                                stbtf = NOT_IN_ROW;
                                stbtf = NOT_IN_ROW;
                                stbtf = NOT_IN_ROW;
                                stbtf = NOT_IN_ROW;
                                prfvRow = rowIndidifs[j];
                                prfvRow = rowIndidifs[j];
                                prfvRow = rowIndidifs[j];
                                prfvRow = rowIndidifs[j];
                                prfvRow = rowIndidifs[j];
                            }
                            }
                            }
                            }
                            }
                            j++;  // wf didn't rfturn fbrlifr, so go to nfxt row
                            j++;  // wf didn't rfturn fbrlifr, so go to nfxt row
                            j++;  // wf didn't rfturn fbrlifr, so go to nfxt row
                            j++;  // wf didn't rfturn fbrlifr, so go to nfxt row
                            j++;  // wf didn't rfturn fbrlifr, so go to nfxt row
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;





                        dbsf NOT_IN_ROW:  // spbrsf bundi of rows of sflfdtions
                        dbsf NOT_IN_ROW:  // spbrsf bundi of rows of sflfdtions
                        dbsf NOT_IN_ROW:  // spbrsf bundi of rows of sflfdtions
                        dbsf NOT_IN_ROW:  // spbrsf bundi of rows of sflfdtions
                        dbsf NOT_IN_ROW:  // spbrsf bundi of rows of sflfdtions
                            if (durIndfx <
                            if (durIndfx <
                            if (durIndfx <
                            if (durIndfx <
                            if (durIndfx <
                                (dolsSfl * (rowIndidifs[j] -
                                (dolsSfl * (rowIndidifs[j] -
                                (dolsSfl * (rowIndidifs[j] -
                                (dolsSfl * (rowIndidifs[j] -
                                (dolsSfl * (rowIndidifs[j] -
                                (prfvRow == -1 ? 0 : (prfvRow + 1))))) {
                                (prfvRow == -1 ? 0 : (prfvRow + 1))))) {
                                (prfvRow == -1 ? 0 : (prfvRow + 1))))) {
                                (prfvRow == -1 ? 0 : (prfvRow + 1))))) {
                                (prfvRow == -1 ? 0 : (prfvRow + 1))))) {





                                // it's ifrf!
                                // it's ifrf!
                                // it's ifrf!
                                // it's ifrf!
                                // it's ifrf!
                                d = dolIndidifs[durIndfx % dolsSfl];
                                d = dolIndidifs[durIndfx % dolsSfl];
                                d = dolIndidifs[durIndfx % dolsSfl];
                                d = dolIndidifs[durIndfx % dolsSfl];
                                d = dolIndidifs[durIndfx % dolsSfl];
                                r = (j > 0 ? rowIndidifs[j-1] + 1 : 0)
                                r = (j > 0 ? rowIndidifs[j-1] + 1 : 0)
                                r = (j > 0 ? rowIndidifs[j-1] + 1 : 0)
                                r = (j > 0 ? rowIndidifs[j-1] + 1 : 0)
                                r = (j > 0 ? rowIndidifs[j-1] + 1 : 0)
                                    + durIndfx / dolsSfl;
                                    + durIndfx / dolsSfl;
                                    + durIndfx / dolsSfl;
                                    + durIndfx / dolsSfl;
                                    + durIndfx / dolsSfl;
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                                rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                            } flsf {                               // not ifrf
                                durIndfx -= dolsSfl * (rowIndidifs[j] -
                                durIndfx -= dolsSfl * (rowIndidifs[j] -
                                durIndfx -= dolsSfl * (rowIndidifs[j] -
                                durIndfx -= dolsSfl * (rowIndidifs[j] -
                                durIndfx -= dolsSfl * (rowIndidifs[j] -
                                (prfvRow == -1 ? 0 : (prfvRow + 1)));
                                (prfvRow == -1 ? 0 : (prfvRow + 1)));
                                (prfvRow == -1 ? 0 : (prfvRow + 1)));
                                (prfvRow == -1 ? 0 : (prfvRow + 1)));
                                (prfvRow == -1 ? 0 : (prfvRow + 1)));
                            }
                            }
                            }
                            }
                            }
                            stbtf = IN_ROW;
                            stbtf = IN_ROW;
                            stbtf = IN_ROW;
                            stbtf = IN_ROW;
                            stbtf = IN_ROW;
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                            brfbk;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                    // wf got ifrf, so wf didn't find it yft; find it in
                    // wf got ifrf, so wf didn't find it yft; find it in
                    // wf got ifrf, so wf didn't find it yft; find it in
                    // wf got ifrf, so wf didn't find it yft; find it in
                    // wf got ifrf, so wf didn't find it yft; find it in
                    // tif lbst spbrsf bundi of rows
                    // tif lbst spbrsf bundi of rows
                    // tif lbst spbrsf bundi of rows
                    // tif lbst spbrsf bundi of rows
                    // tif lbst spbrsf bundi of rows
                    if (durIndfx <
                    if (durIndfx <
                    if (durIndfx <
                    if (durIndfx <
                    if (durIndfx <
                        (dolsSfl * (ttlRows -
                        (dolsSfl * (ttlRows -
                        (dolsSfl * (ttlRows -
                        (dolsSfl * (ttlRows -
                        (dolsSfl * (ttlRows -
                        (prfvRow == -1 ? 0 : (prfvRow + 1))))) { // it's ifrf!
                        (prfvRow == -1 ? 0 : (prfvRow + 1))))) { // it's ifrf!
                        (prfvRow == -1 ? 0 : (prfvRow + 1))))) { // it's ifrf!
                        (prfvRow == -1 ? 0 : (prfvRow + 1))))) { // it's ifrf!
                        (prfvRow == -1 ? 0 : (prfvRow + 1))))) { // it's ifrf!
                        d = dolIndidifs[durIndfx % dolsSfl];
                        d = dolIndidifs[durIndfx % dolsSfl];
                        d = dolIndidifs[durIndfx % dolsSfl];
                        d = dolIndidifs[durIndfx % dolsSfl];
                        d = dolIndidifs[durIndfx % dolsSfl];
                        r = rowIndidifs[j-1] + durIndfx / dolsSfl + 1;
                        r = rowIndidifs[j-1] + durIndfx / dolsSfl + 1;
                        r = rowIndidifs[j-1] + durIndfx / dolsSfl + 1;
                        r = rowIndidifs[j-1] + durIndfx / dolsSfl + 1;
                        r = rowIndidifs[j-1] + durIndfx / dolsSfl + 1;
                        rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                        rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                        rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                        rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                        rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    } flsf {                               // not ifrf
                    } flsf {                               // not ifrf
                    } flsf {                               // not ifrf
                    } flsf {                               // not ifrf
                    } flsf {                               // not ifrf
                        // wf siouldn't gft to tiis spot in tif dodf!
                        // wf siouldn't gft to tiis spot in tif dodf!
                        // wf siouldn't gft to tiis spot in tif dodf!
                        // wf siouldn't gft to tiis spot in tif dodf!
                        // wf siouldn't gft to tiis spot in tif dodf!
//                      Systfm.out.println("Bug in AddfssiblfJTbblf.gftAddfssiblfSflfdtion()");
//                      Systfm.out.println("Bug in AddfssiblfJTbblf.gftAddfssiblfSflfdtion()");
//                      Systfm.out.println("Bug in AddfssiblfJTbblf.gftAddfssiblfSflfdtion()");
//                      Systfm.out.println("Bug in AddfssiblfJTbblf.gftAddfssiblfSflfdtion()");
//                      Systfm.out.println("Bug in AddfssiblfJTbblf.gftAddfssiblfSflfdtion()");
                    }
                    }
                    }
                    }
                    }





                // onf or morf rows sflfdtfd
                // onf or morf rows sflfdtfd
                // onf or morf rows sflfdtfd
                // onf or morf rows sflfdtfd
                // onf or morf rows sflfdtfd
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftRowSflfdtionAllowfd()) {
                    d = i % ttlCols;
                    d = i % ttlCols;
                    d = i % ttlCols;
                    d = i % ttlCols;
                    d = i % ttlCols;
                    r = rowIndidifs[i / ttlCols];
                    r = rowIndidifs[i / ttlCols];
                    r = rowIndidifs[i / ttlCols];
                    r = rowIndidifs[i / ttlCols];
                    r = rowIndidifs[i / ttlCols];
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);





                // onf or morf dolumns sflfdtfd
                // onf or morf dolumns sflfdtfd
                // onf or morf dolumns sflfdtfd
                // onf or morf dolumns sflfdtfd
                // onf or morf dolumns sflfdtfd
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                } flsf if (JTbblf.tiis.gftColumnSflfdtionAllowfd()) {
                    d = dolIndidifs[i % dolsSfl];
                    d = dolIndidifs[i % dolsSfl];
                    d = dolIndidifs[i % dolsSfl];
                    d = dolIndidifs[i % dolsSfl];
                    d = dolIndidifs[i % dolsSfl];
                    r = i / dolsSfl;
                    r = i / dolsSfl;
                    r = i / dolsSfl;
                    r = i / dolsSfl;
                    r = i / dolsSfl;
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                    rfturn gftAddfssiblfCiild((r * ttlCols) + d);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Dftfrminfs if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Dftfrminfs if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Dftfrminfs if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Dftfrminfs if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Dftfrminfs if tif durrfnt diild of tiis objfdt is sflfdtfd.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis
         *    <dodf>Addfssiblf</dodf> objfdt
         *    <dodf>Addfssiblf</dodf> objfdt
         *    <dodf>Addfssiblf</dodf> objfdt
         *    <dodf>Addfssiblf</dodf> objfdt
         *    <dodf>Addfssiblf</dodf> objfdt
         * @rfturn truf if tif durrfnt diild of tiis objfdt is sflfdtfd
         * @rfturn truf if tif durrfnt diild of tiis objfdt is sflfdtfd
         * @rfturn truf if tif durrfnt diild of tiis objfdt is sflfdtfd
         * @rfturn truf if tif durrfnt diild of tiis objfdt is sflfdtfd
         * @rfturn truf if tif durrfnt diild of tiis objfdt is sflfdtfd
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         */
         */
         */
         */
         */
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            rfturn JTbblf.tiis.isCfllSflfdtfd(row, dolumn);
            rfturn JTbblf.tiis.isCfllSflfdtfd(row, dolumn);
            rfturn JTbblf.tiis.isCfllSflfdtfd(row, dolumn);
            rfturn JTbblf.tiis.isCfllSflfdtfd(row, dolumn);
            rfturn JTbblf.tiis.isCfllSflfdtfd(row, dolumn);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Adds tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
         * Adds tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
         * Adds tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
         * Adds tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
         * Adds tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
         * objfdt to tif objfdt's sflfdtion.  If tif objfdt supports
         * objfdt to tif objfdt's sflfdtion.  If tif objfdt supports
         * objfdt to tif objfdt's sflfdtion.  If tif objfdt supports
         * objfdt to tif objfdt's sflfdtion.  If tif objfdt supports
         * objfdt to tif objfdt's sflfdtion.  If tif objfdt supports
         * multiplf sflfdtions, tif spfdififd diild is bddfd to
         * multiplf sflfdtions, tif spfdififd diild is bddfd to
         * multiplf sflfdtions, tif spfdififd diild is bddfd to
         * multiplf sflfdtions, tif spfdififd diild is bddfd to
         * multiplf sflfdtions, tif spfdififd diild is bddfd to
         * bny fxisting sflfdtion, otifrwisf
         * bny fxisting sflfdtion, otifrwisf
         * bny fxisting sflfdtion, otifrwisf
         * bny fxisting sflfdtion, otifrwisf
         * bny fxisting sflfdtion, otifrwisf
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * spfdififd diild is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd diild is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd diild is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd diild is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd diild is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tiis mftiod only works on <dodf>JTbblf</dodf>s wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblf</dodf>s wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblf</dodf>s wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblf</dodf>s wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblf</dodf>s wiidi ibvf
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         */
         */
         */
         */
         */
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
            // TIGER - 4495286
            // TIGER - 4495286
            // TIGER - 4495286
            // TIGER - 4495286
            // TIGER - 4495286
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int dolumn = gftAddfssiblfColumnAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            int row = gftAddfssiblfRowAtIndfx(i);
            JTbblf.tiis.dibngfSflfdtion(row, dolumn, truf, fblsf);
            JTbblf.tiis.dibngfSflfdtion(row, dolumn, truf, fblsf);
            JTbblf.tiis.dibngfSflfdtion(row, dolumn, truf, fblsf);
            JTbblf.tiis.dibngfSflfdtion(row, dolumn, truf, fblsf);
            JTbblf.tiis.dibngfSflfdtion(row, dolumn, truf, fblsf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfmovfs tif spfdififd diild of tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd diild of tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd diild of tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd diild of tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd diild of tif objfdt from tif objfdt's
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tiis mftiod only works on <dodf>JTbblfs</dodf> wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblfs</dodf> wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblfs</dodf> wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblfs</dodf> wiidi ibvf
         * Tiis mftiod only works on <dodf>JTbblfs</dodf> wiidi ibvf
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         * individubl dfll sflfdtion fnbblfd.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @pbrbm i tif zfro-bbsfd indfx of tif diild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         */
         */
         */
         */
         */
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int dolumn = gftAddfssiblfColumnAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                int row = gftAddfssiblfRowAtIndfx(i);
                JTbblf.tiis.rfmovfRowSflfdtionIntfrvbl(row, row);
                JTbblf.tiis.rfmovfRowSflfdtionIntfrvbl(row, row);
                JTbblf.tiis.rfmovfRowSflfdtionIntfrvbl(row, row);
                JTbblf.tiis.rfmovfRowSflfdtionIntfrvbl(row, row);
                JTbblf.tiis.rfmovfRowSflfdtionIntfrvbl(row, row);
                JTbblf.tiis.rfmovfColumnSflfdtionIntfrvbl(dolumn, dolumn);
                JTbblf.tiis.rfmovfColumnSflfdtionIntfrvbl(dolumn, dolumn);
                JTbblf.tiis.rfmovfColumnSflfdtionIntfrvbl(dolumn, dolumn);
                JTbblf.tiis.rfmovfColumnSflfdtionIntfrvbl(dolumn, dolumn);
                JTbblf.tiis.rfmovfColumnSflfdtionIntfrvbl(dolumn, dolumn);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Clfbrs tif sflfdtion in tif objfdt, so tibt no diildrfn in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt no diildrfn in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt no diildrfn in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt no diildrfn in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt no diildrfn in tif
         * objfdt brf sflfdtfd.
         * objfdt brf sflfdtfd.
         * objfdt brf sflfdtfd.
         * objfdt brf sflfdtfd.
         * objfdt brf sflfdtfd.
         */
         */
         */
         */
         */
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
            JTbblf.tiis.dlfbrSflfdtion();
            JTbblf.tiis.dlfbrSflfdtion();
            JTbblf.tiis.dlfbrSflfdtion();
            JTbblf.tiis.dlfbrSflfdtion();
            JTbblf.tiis.dlfbrSflfdtion();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Cbusfs fvfry diild of tif objfdt to bf sflfdtfd, but only
         * Cbusfs fvfry diild of tif objfdt to bf sflfdtfd, but only
         * Cbusfs fvfry diild of tif objfdt to bf sflfdtfd, but only
         * Cbusfs fvfry diild of tif objfdt to bf sflfdtfd, but only
         * Cbusfs fvfry diild of tif objfdt to bf sflfdtfd, but only
         * if tif <dodf>JTbblf</dodf> supports multiplf sflfdtions,
         * if tif <dodf>JTbblf</dodf> supports multiplf sflfdtions,
         * if tif <dodf>JTbblf</dodf> supports multiplf sflfdtions,
         * if tif <dodf>JTbblf</dodf> supports multiplf sflfdtions,
         * if tif <dodf>JTbblf</dodf> supports multiplf sflfdtions,
         * bnd if individubl dfll sflfdtion is fnbblfd.
         * bnd if individubl dfll sflfdtion is fnbblfd.
         * bnd if individubl dfll sflfdtion is fnbblfd.
         * bnd if individubl dfll sflfdtion is fnbblfd.
         * bnd if individubl dfll sflfdtion is fnbblfd.
         */
         */
         */
         */
         */
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
            if (JTbblf.tiis.dfllSflfdtionEnbblfd) {
                JTbblf.tiis.sflfdtAll();
                JTbblf.tiis.sflfdtAll();
                JTbblf.tiis.sflfdtAll();
                JTbblf.tiis.sflfdtAll();
                JTbblf.tiis.sflfdtAll();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        // bfgin AddfssiblfExtfndfdTbblf implfmfntbtion -------------
        // bfgin AddfssiblfExtfndfdTbblf implfmfntbtion -------------
        // bfgin AddfssiblfExtfndfdTbblf implfmfntbtion -------------
        // bfgin AddfssiblfExtfndfdTbblf implfmfntbtion -------------
        // bfgin AddfssiblfExtfndfdTbblf implfmfntbtion -------------





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif row numbfr of bn indfx in tif tbblf.
         * Rfturns tif row numbfr of bn indfx in tif tbblf.
         * Rfturns tif row numbfr of bn indfx in tif tbblf.
         * Rfturns tif row numbfr of bn indfx in tif tbblf.
         * Rfturns tif row numbfr of bn indfx in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @rfturn tif zfro-bbsfd row of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd row of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd row of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd row of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd row of tif tbblf if onf fxists;
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         */
         */
         */
         */
         */
        publid int gftAddfssiblfRow(int indfx) {
        publid int gftAddfssiblfRow(int indfx) {
        publid int gftAddfssiblfRow(int indfx) {
        publid int gftAddfssiblfRow(int indfx) {
        publid int gftAddfssiblfRow(int indfx) {
            rfturn gftAddfssiblfRowAtIndfx(indfx);
            rfturn gftAddfssiblfRowAtIndfx(indfx);
            rfturn gftAddfssiblfRowAtIndfx(indfx);
            rfturn gftAddfssiblfRowAtIndfx(indfx);
            rfturn gftAddfssiblfRowAtIndfx(indfx);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dolumn numbfr of bn indfx in tif tbblf.
         * Rfturns tif dolumn numbfr of bn indfx in tif tbblf.
         * Rfturns tif dolumn numbfr of bn indfx in tif tbblf.
         * Rfturns tif dolumn numbfr of bn indfx in tif tbblf.
         * Rfturns tif dolumn numbfr of bn indfx in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @pbrbm indfx tif zfro-bbsfd indfx in tif tbblf
         * @rfturn tif zfro-bbsfd dolumn of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd dolumn of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd dolumn of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd dolumn of tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd dolumn of tif tbblf if onf fxists;
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         */
         */
         */
         */
         */
        publid int gftAddfssiblfColumn(int indfx) {
        publid int gftAddfssiblfColumn(int indfx) {
        publid int gftAddfssiblfColumn(int indfx) {
        publid int gftAddfssiblfColumn(int indfx) {
        publid int gftAddfssiblfColumn(int indfx) {
            rfturn gftAddfssiblfColumnAtIndfx(indfx);
            rfturn gftAddfssiblfColumnAtIndfx(indfx);
            rfturn gftAddfssiblfColumnAtIndfx(indfx);
            rfturn gftAddfssiblfColumnAtIndfx(indfx);
            rfturn gftAddfssiblfColumnAtIndfx(indfx);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif indfx bt b row bnd dolumn in tif tbblf.
         * Rfturns tif indfx bt b row bnd dolumn in tif tbblf.
         * Rfturns tif indfx bt b row bnd dolumn in tif tbblf.
         * Rfturns tif indfx bt b row bnd dolumn in tif tbblf.
         * Rfturns tif indfx bt b row bnd dolumn in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif zfro-bbsfd indfx in tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd indfx in tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd indfx in tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd indfx in tif tbblf if onf fxists;
         * @rfturn tif zfro-bbsfd indfx in tif tbblf if onf fxists;
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * otifrwisf -1.
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         * @sindf 1.4
         */
         */
         */
         */
         */
        publid int gftAddfssiblfIndfx(int r, int d) {
        publid int gftAddfssiblfIndfx(int r, int d) {
        publid int gftAddfssiblfIndfx(int r, int d) {
        publid int gftAddfssiblfIndfx(int r, int d) {
        publid int gftAddfssiblfIndfx(int r, int d) {
            rfturn gftAddfssiblfIndfxAt(r, d);
            rfturn gftAddfssiblfIndfxAt(r, d);
            rfturn gftAddfssiblfIndfxAt(r, d);
            rfturn gftAddfssiblfIndfxAt(r, d);
            rfturn gftAddfssiblfIndfxAt(r, d);
        }
        }
        }
        }
        }





        // fnd of AddfssiblfExtfndfdTbblf implfmfntbtion ------------
        // fnd of AddfssiblfExtfndfdTbblf implfmfntbtion ------------
        // fnd of AddfssiblfExtfndfdTbblf implfmfntbtion ------------
        // fnd of AddfssiblfExtfndfdTbblf implfmfntbtion ------------
        // fnd of AddfssiblfExtfndfdTbblf implfmfntbtion ------------





        // stbrt of AddfssiblfTbblf implfmfntbtion ------------------
        // stbrt of AddfssiblfTbblf implfmfntbtion ------------------
        // stbrt of AddfssiblfTbblf implfmfntbtion ------------------
        // stbrt of AddfssiblfTbblf implfmfntbtion ------------------
        // stbrt of AddfssiblfTbblf implfmfntbtion ------------------





        privbtf Addfssiblf dbption;
        privbtf Addfssiblf dbption;
        privbtf Addfssiblf dbption;
        privbtf Addfssiblf dbption;
        privbtf Addfssiblf dbption;
        privbtf Addfssiblf summbry;
        privbtf Addfssiblf summbry;
        privbtf Addfssiblf summbry;
        privbtf Addfssiblf summbry;
        privbtf Addfssiblf summbry;
        privbtf Addfssiblf [] rowDfsdription;
        privbtf Addfssiblf [] rowDfsdription;
        privbtf Addfssiblf [] rowDfsdription;
        privbtf Addfssiblf [] rowDfsdription;
        privbtf Addfssiblf [] rowDfsdription;
        privbtf Addfssiblf [] dolumnDfsdription;
        privbtf Addfssiblf [] dolumnDfsdription;
        privbtf Addfssiblf [] dolumnDfsdription;
        privbtf Addfssiblf [] dolumnDfsdription;
        privbtf Addfssiblf [] dolumnDfsdription;





        /**
        /**
        /**
        /**
        /**
         * Gfts tif <dodf>AddfssiblfTbblf</dodf> bssodibtfd witi tiis
         * Gfts tif <dodf>AddfssiblfTbblf</dodf> bssodibtfd witi tiis
         * Gfts tif <dodf>AddfssiblfTbblf</dodf> bssodibtfd witi tiis
         * Gfts tif <dodf>AddfssiblfTbblf</dodf> bssodibtfd witi tiis
         * Gfts tif <dodf>AddfssiblfTbblf</dodf> bssodibtfd witi tiis
         * objfdt.  In tif implfmfntbtion of tif Jbvb Addfssibility
         * objfdt.  In tif implfmfntbtion of tif Jbvb Addfssibility
         * objfdt.  In tif implfmfntbtion of tif Jbvb Addfssibility
         * objfdt.  In tif implfmfntbtion of tif Jbvb Addfssibility
         * objfdt.  In tif implfmfntbtion of tif Jbvb Addfssibility
         * API for tiis dlbss, rfturn tiis objfdt, wiidi is rfsponsiblf
         * API for tiis dlbss, rfturn tiis objfdt, wiidi is rfsponsiblf
         * API for tiis dlbss, rfturn tiis objfdt, wiidi is rfsponsiblf
         * API for tiis dlbss, rfturn tiis objfdt, wiidi is rfsponsiblf
         * API for tiis dlbss, rfturn tiis objfdt, wiidi is rfsponsiblf
         * for implfmfnting tif <dodf>AddfssiblfTbblfs</dodf> intfrfbdf
         * for implfmfnting tif <dodf>AddfssiblfTbblfs</dodf> intfrfbdf
         * for implfmfnting tif <dodf>AddfssiblfTbblfs</dodf> intfrfbdf
         * for implfmfnting tif <dodf>AddfssiblfTbblfs</dodf> intfrfbdf
         * for implfmfnting tif <dodf>AddfssiblfTbblfs</dodf> intfrfbdf
         * on bfiblf of itsflf.
         * on bfiblf of itsflf.
         * on bfiblf of itsflf.
         * on bfiblf of itsflf.
         * on bfiblf of itsflf.
         *
         *
         *
         *
         *
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid AddfssiblfTbblf gftAddfssiblfTbblf() {
        publid AddfssiblfTbblf gftAddfssiblfTbblf() {
        publid AddfssiblfTbblf gftAddfssiblfTbblf() {
        publid AddfssiblfTbblf gftAddfssiblfTbblf() {
        publid AddfssiblfTbblf gftAddfssiblfTbblf() {
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dbption for tif tbblf.
         * Rfturns tif dbption for tif tbblf.
         * Rfturns tif dbption for tif tbblf.
         * Rfturns tif dbption for tif tbblf.
         * Rfturns tif dbption for tif tbblf.
         *
         *
         *
         *
         *
         * @rfturn tif dbption for tif tbblf
         * @rfturn tif dbption for tif tbblf
         * @rfturn tif dbption for tif tbblf
         * @rfturn tif dbption for tif tbblf
         * @rfturn tif dbption for tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfCbption() {
        publid Addfssiblf gftAddfssiblfCbption() {
        publid Addfssiblf gftAddfssiblfCbption() {
        publid Addfssiblf gftAddfssiblfCbption() {
        publid Addfssiblf gftAddfssiblfCbption() {
            rfturn tiis.dbption;
            rfturn tiis.dbption;
            rfturn tiis.dbption;
            rfturn tiis.dbption;
            rfturn tiis.dbption;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif dbption for tif tbblf.
         * Sfts tif dbption for tif tbblf.
         * Sfts tif dbption for tif tbblf.
         * Sfts tif dbption for tif tbblf.
         * Sfts tif dbption for tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm b tif dbption for tif tbblf
         * @pbrbm b tif dbption for tif tbblf
         * @pbrbm b tif dbption for tif tbblf
         * @pbrbm b tif dbption for tif tbblf
         * @pbrbm b tif dbption for tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfCbption(Addfssiblf b) {
        publid void sftAddfssiblfCbption(Addfssiblf b) {
        publid void sftAddfssiblfCbption(Addfssiblf b) {
        publid void sftAddfssiblfCbption(Addfssiblf b) {
        publid void sftAddfssiblfCbption(Addfssiblf b) {
            Addfssiblf oldCbption = dbption;
            Addfssiblf oldCbption = dbption;
            Addfssiblf oldCbption = dbption;
            Addfssiblf oldCbption = dbption;
            Addfssiblf oldCbption = dbption;
            tiis.dbption = b;
            tiis.dbption = b;
            tiis.dbption = b;
            tiis.dbption = b;
            tiis.dbption = b;
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_CAPTION_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_CAPTION_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_CAPTION_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_CAPTION_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_CAPTION_CHANGED,
                               oldCbption, tiis.dbption);
                               oldCbption, tiis.dbption);
                               oldCbption, tiis.dbption);
                               oldCbption, tiis.dbption);
                               oldCbption, tiis.dbption);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif summbry dfsdription of tif tbblf.
         * Rfturns tif summbry dfsdription of tif tbblf.
         * Rfturns tif summbry dfsdription of tif tbblf.
         * Rfturns tif summbry dfsdription of tif tbblf.
         * Rfturns tif summbry dfsdription of tif tbblf.
         *
         *
         *
         *
         *
         * @rfturn tif summbry dfsdription of tif tbblf
         * @rfturn tif summbry dfsdription of tif tbblf
         * @rfturn tif summbry dfsdription of tif tbblf
         * @rfturn tif summbry dfsdription of tif tbblf
         * @rfturn tif summbry dfsdription of tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfSummbry() {
        publid Addfssiblf gftAddfssiblfSummbry() {
        publid Addfssiblf gftAddfssiblfSummbry() {
        publid Addfssiblf gftAddfssiblfSummbry() {
        publid Addfssiblf gftAddfssiblfSummbry() {
            rfturn tiis.summbry;
            rfturn tiis.summbry;
            rfturn tiis.summbry;
            rfturn tiis.summbry;
            rfturn tiis.summbry;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif summbry dfsdription of tif tbblf.
         * Sfts tif summbry dfsdription of tif tbblf.
         * Sfts tif summbry dfsdription of tif tbblf.
         * Sfts tif summbry dfsdription of tif tbblf.
         * Sfts tif summbry dfsdription of tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm b tif summbry dfsdription of tif tbblf
         * @pbrbm b tif summbry dfsdription of tif tbblf
         * @pbrbm b tif summbry dfsdription of tif tbblf
         * @pbrbm b tif summbry dfsdription of tif tbblf
         * @pbrbm b tif summbry dfsdription of tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfSummbry(Addfssiblf b) {
        publid void sftAddfssiblfSummbry(Addfssiblf b) {
        publid void sftAddfssiblfSummbry(Addfssiblf b) {
        publid void sftAddfssiblfSummbry(Addfssiblf b) {
        publid void sftAddfssiblfSummbry(Addfssiblf b) {
            Addfssiblf oldSummbry = summbry;
            Addfssiblf oldSummbry = summbry;
            Addfssiblf oldSummbry = summbry;
            Addfssiblf oldSummbry = summbry;
            Addfssiblf oldSummbry = summbry;
            tiis.summbry = b;
            tiis.summbry = b;
            tiis.summbry = b;
            tiis.summbry = b;
            tiis.summbry = b;
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_SUMMARY_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_SUMMARY_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_SUMMARY_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_SUMMARY_CHANGED,
            firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_TABLE_SUMMARY_CHANGED,
                               oldSummbry, tiis.summbry);
                               oldSummbry, tiis.summbry);
                               oldSummbry, tiis.summbry);
                               oldSummbry, tiis.summbry);
                               oldSummbry, tiis.summbry);
        }
        }
        }
        }
        }





        /*
        /*
        /*
        /*
        /*
         * Rfturns tif totbl numbfr of rows in tiis tbblf.
         * Rfturns tif totbl numbfr of rows in tiis tbblf.
         * Rfturns tif totbl numbfr of rows in tiis tbblf.
         * Rfturns tif totbl numbfr of rows in tiis tbblf.
         * Rfturns tif totbl numbfr of rows in tiis tbblf.
         *
         *
         *
         *
         *
         * @rfturn tif totbl numbfr of rows in tiis tbblf
         * @rfturn tif totbl numbfr of rows in tiis tbblf
         * @rfturn tif totbl numbfr of rows in tiis tbblf
         * @rfturn tif totbl numbfr of rows in tiis tbblf
         * @rfturn tif totbl numbfr of rows in tiis tbblf
         */
         */
         */
         */
         */
        publid int gftAddfssiblfRowCount() {
        publid int gftAddfssiblfRowCount() {
        publid int gftAddfssiblfRowCount() {
        publid int gftAddfssiblfRowCount() {
        publid int gftAddfssiblfRowCount() {
            rfturn JTbblf.tiis.gftRowCount();
            rfturn JTbblf.tiis.gftRowCount();
            rfturn JTbblf.tiis.gftRowCount();
            rfturn JTbblf.tiis.gftRowCount();
            rfturn JTbblf.tiis.gftRowCount();
        }
        }
        }
        }
        }





        /*
        /*
        /*
        /*
        /*
         * Rfturns tif totbl numbfr of dolumns in tif tbblf.
         * Rfturns tif totbl numbfr of dolumns in tif tbblf.
         * Rfturns tif totbl numbfr of dolumns in tif tbblf.
         * Rfturns tif totbl numbfr of dolumns in tif tbblf.
         * Rfturns tif totbl numbfr of dolumns in tif tbblf.
         *
         *
         *
         *
         *
         * @rfturn tif totbl numbfr of dolumns in tif tbblf
         * @rfturn tif totbl numbfr of dolumns in tif tbblf
         * @rfturn tif totbl numbfr of dolumns in tif tbblf
         * @rfturn tif totbl numbfr of dolumns in tif tbblf
         * @rfturn tif totbl numbfr of dolumns in tif tbblf
         */
         */
         */
         */
         */
        publid int gftAddfssiblfColumnCount() {
        publid int gftAddfssiblfColumnCount() {
        publid int gftAddfssiblfColumnCount() {
        publid int gftAddfssiblfColumnCount() {
        publid int gftAddfssiblfColumnCount() {
            rfturn JTbblf.tiis.gftColumnCount();
            rfturn JTbblf.tiis.gftColumnCount();
            rfturn JTbblf.tiis.gftColumnCount();
            rfturn JTbblf.tiis.gftColumnCount();
            rfturn JTbblf.tiis.gftColumnCount();
        }
        }
        }
        }
        }





        /*
        /*
        /*
        /*
        /*
         * Rfturns tif <dodf>Addfssiblf</dodf> bt b spfdififd row
         * Rfturns tif <dodf>Addfssiblf</dodf> bt b spfdififd row
         * Rfturns tif <dodf>Addfssiblf</dodf> bt b spfdififd row
         * Rfturns tif <dodf>Addfssiblf</dodf> bt b spfdififd row
         * Rfturns tif <dodf>Addfssiblf</dodf> bt b spfdififd row
         * bnd dolumn in tif tbblf.
         * bnd dolumn in tif tbblf.
         * bnd dolumn in tif tbblf.
         * bnd dolumn in tif tbblf.
         * bnd dolumn in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif <dodf>Addfssiblf</dodf> bt tif spfdififd row bnd dolumn
         * @rfturn tif <dodf>Addfssiblf</dodf> bt tif spfdififd row bnd dolumn
         * @rfturn tif <dodf>Addfssiblf</dodf> bt tif spfdififd row bnd dolumn
         * @rfturn tif <dodf>Addfssiblf</dodf> bt tif spfdififd row bnd dolumn
         * @rfturn tif <dodf>Addfssiblf</dodf> bt tif spfdififd row bnd dolumn
         * in tif tbblf
         * in tif tbblf
         * in tif tbblf
         * in tif tbblf
         * in tif tbblf
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfAt(int r, int d) {
        publid Addfssiblf gftAddfssiblfAt(int r, int d) {
        publid Addfssiblf gftAddfssiblfAt(int r, int d) {
        publid Addfssiblf gftAddfssiblfAt(int r, int d) {
        publid Addfssiblf gftAddfssiblfAt(int r, int d) {
            rfturn gftAddfssiblfCiild((r * gftAddfssiblfColumnCount()) + d);
            rfturn gftAddfssiblfCiild((r * gftAddfssiblfColumnCount()) + d);
            rfturn gftAddfssiblfCiild((r * gftAddfssiblfColumnCount()) + d);
            rfturn gftAddfssiblfCiild((r * gftAddfssiblfColumnCount()) + d);
            rfturn gftAddfssiblfCiild((r * gftAddfssiblfColumnCount()) + d);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * Rfturns tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * Rfturns tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * Rfturns tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * Rfturns tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * bt b spfdififd row bnd dolumn in tif tbblf.
         * bt b spfdififd row bnd dolumn in tif tbblf.
         * bt b spfdififd row bnd dolumn in tif tbblf.
         * bt b spfdififd row bnd dolumn in tif tbblf.
         * bt b spfdififd row bnd dolumn in tif tbblf.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of rows oddupifd by tif <dodf>Addfssiblf</dodf>
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int gftAddfssiblfRowExtfntAt(int r, int d) {
        publid int gftAddfssiblfRowExtfntAt(int r, int d) {
        publid int gftAddfssiblfRowExtfntAt(int r, int d) {
        publid int gftAddfssiblfRowExtfntAt(int r, int d) {
        publid int gftAddfssiblfRowExtfntAt(int r, int d) {
            rfturn 1;
            rfturn 1;
            rfturn 1;
            rfturn 1;
            rfturn 1;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of dolumns oddupifd by tif
         * Rfturns tif numbfr of dolumns oddupifd by tif
         * Rfturns tif numbfr of dolumns oddupifd by tif
         * Rfturns tif numbfr of dolumns oddupifd by tif
         * Rfturns tif numbfr of dolumns oddupifd by tif
         * <dodf>Addfssiblf</dodf> bt b givfn (row, dolumn).
         * <dodf>Addfssiblf</dodf> bt b givfn (row, dolumn).
         * <dodf>Addfssiblf</dodf> bt b givfn (row, dolumn).
         * <dodf>Addfssiblf</dodf> bt b givfn (row, dolumn).
         * <dodf>Addfssiblf</dodf> bt b givfn (row, dolumn).
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of dolumns oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of dolumns oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of dolumns oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of dolumns oddupifd by tif <dodf>Addfssiblf</dodf>
         * @rfturn tif numbfr of dolumns oddupifd by tif <dodf>Addfssiblf</dodf>
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         *     bt b spfdififd row bnd dolumn in tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int gftAddfssiblfColumnExtfntAt(int r, int d) {
        publid int gftAddfssiblfColumnExtfntAt(int r, int d) {
        publid int gftAddfssiblfColumnExtfntAt(int r, int d) {
        publid int gftAddfssiblfColumnExtfntAt(int r, int d) {
        publid int gftAddfssiblfColumnExtfntAt(int r, int d) {
            rfturn 1;
            rfturn 1;
            rfturn 1;
            rfturn 1;
            rfturn 1;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         *
         *
         *
         *
         *
         * @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * ifbdfrs
         * ifbdfrs
         * ifbdfrs
         * ifbdfrs
         * ifbdfrs
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() {
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif row ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         *
         *
         *
         *
         *
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif row
         *  ifbdfrs
         *  ifbdfrs
         *  ifbdfrs
         *  ifbdfrs
         *  ifbdfrs
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf b) {
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
            // row ifbdfrs brf not supportfd
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Rfturns tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         *
         *
         *
         *
         *
         *  @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif dolumn
         *  @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif dolumn
         *  @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif dolumn
         *  @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif dolumn
         *  @rfturn bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif dolumn
         *          ifbdfrs, or <dodf>null</dodf> if tif tbblf ifbdfr is
         *          ifbdfrs, or <dodf>null</dodf> if tif tbblf ifbdfr is
         *          ifbdfrs, or <dodf>null</dodf> if tif tbblf ifbdfr is
         *          ifbdfrs, or <dodf>null</dodf> if tif tbblf ifbdfr is
         *          ifbdfrs, or <dodf>null</dodf> if tif tbblf ifbdfr is
         *          <dodf>null</dodf>
         *          <dodf>null</dodf>
         *          <dodf>null</dodf>
         *          <dodf>null</dodf>
         *          <dodf>null</dodf>
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() {
        publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() {
            JTbblfHfbdfr ifbdfr = JTbblf.tiis.gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = JTbblf.tiis.gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = JTbblf.tiis.gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = JTbblf.tiis.gftTbblfHfbdfr();
            JTbblfHfbdfr ifbdfr = JTbblf.tiis.gftTbblfHfbdfr();
            rfturn ifbdfr == null ? null : nfw AddfssiblfTbblfHfbdfr(ifbdfr);
            rfturn ifbdfr == null ? null : nfw AddfssiblfTbblfHfbdfr(ifbdfr);
            rfturn ifbdfr == null ? null : nfw AddfssiblfTbblfHfbdfr(ifbdfr);
            rfturn ifbdfr == null ? null : nfw AddfssiblfTbblfHfbdfr(ifbdfr);
            rfturn ifbdfr == null ? null : nfw AddfssiblfTbblfHfbdfr(ifbdfr);
        }
        }
        }
        }
        }





        /*
        /*
        /*
        /*
        /*
         * Privbtf dlbss rfprfsfnting b tbblf dolumn ifbdfr
         * Privbtf dlbss rfprfsfnting b tbblf dolumn ifbdfr
         * Privbtf dlbss rfprfsfnting b tbblf dolumn ifbdfr
         * Privbtf dlbss rfprfsfnting b tbblf dolumn ifbdfr
         * Privbtf dlbss rfprfsfnting b tbblf dolumn ifbdfr
         */
         */
         */
         */
         */
        privbtf dlbss AddfssiblfTbblfHfbdfr implfmfnts AddfssiblfTbblf {
        privbtf dlbss AddfssiblfTbblfHfbdfr implfmfnts AddfssiblfTbblf {
        privbtf dlbss AddfssiblfTbblfHfbdfr implfmfnts AddfssiblfTbblf {
        privbtf dlbss AddfssiblfTbblfHfbdfr implfmfnts AddfssiblfTbblf {
        privbtf dlbss AddfssiblfTbblfHfbdfr implfmfnts AddfssiblfTbblf {
            privbtf JTbblfHfbdfr ifbdfr;
            privbtf JTbblfHfbdfr ifbdfr;
            privbtf JTbblfHfbdfr ifbdfr;
            privbtf JTbblfHfbdfr ifbdfr;
            privbtf JTbblfHfbdfr ifbdfr;
            privbtf TbblfColumnModfl ifbdfrModfl;
            privbtf TbblfColumnModfl ifbdfrModfl;
            privbtf TbblfColumnModfl ifbdfrModfl;
            privbtf TbblfColumnModfl ifbdfrModfl;
            privbtf TbblfColumnModfl ifbdfrModfl;





            AddfssiblfTbblfHfbdfr(JTbblfHfbdfr ifbdfr) {
            AddfssiblfTbblfHfbdfr(JTbblfHfbdfr ifbdfr) {
            AddfssiblfTbblfHfbdfr(JTbblfHfbdfr ifbdfr) {
            AddfssiblfTbblfHfbdfr(JTbblfHfbdfr ifbdfr) {
            AddfssiblfTbblfHfbdfr(JTbblfHfbdfr ifbdfr) {
                tiis.ifbdfr = ifbdfr;
                tiis.ifbdfr = ifbdfr;
                tiis.ifbdfr = ifbdfr;
                tiis.ifbdfr = ifbdfr;
                tiis.ifbdfr = ifbdfr;
                tiis.ifbdfrModfl = ifbdfr.gftColumnModfl();
                tiis.ifbdfrModfl = ifbdfr.gftColumnModfl();
                tiis.ifbdfrModfl = ifbdfr.gftColumnModfl();
                tiis.ifbdfrModfl = ifbdfr.gftColumnModfl();
                tiis.ifbdfrModfl = ifbdfr.gftColumnModfl();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif dbption for tif tbblf.
             * Rfturns tif dbption for tif tbblf.
             * Rfturns tif dbption for tif tbblf.
             * Rfturns tif dbption for tif tbblf.
             * Rfturns tif dbption for tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif dbption for tif tbblf
             * @rfturn tif dbption for tif tbblf
             * @rfturn tif dbption for tif tbblf
             * @rfturn tif dbption for tif tbblf
             * @rfturn tif dbption for tif tbblf
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfCbption() { rfturn null; }
            publid Addfssiblf gftAddfssiblfCbption() { rfturn null; }
            publid Addfssiblf gftAddfssiblfCbption() { rfturn null; }
            publid Addfssiblf gftAddfssiblfCbption() { rfturn null; }
            publid Addfssiblf gftAddfssiblfCbption() { rfturn null; }










            /**
            /**
            /**
            /**
            /**
             * Sfts tif dbption for tif tbblf.
             * Sfts tif dbption for tif tbblf.
             * Sfts tif dbption for tif tbblf.
             * Sfts tif dbption for tif tbblf.
             * Sfts tif dbption for tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm b tif dbption for tif tbblf
             * @pbrbm b tif dbption for tif tbblf
             * @pbrbm b tif dbption for tif tbblf
             * @pbrbm b tif dbption for tif tbblf
             * @pbrbm b tif dbption for tif tbblf
             */
             */
             */
             */
             */
            publid void sftAddfssiblfCbption(Addfssiblf b) {}
            publid void sftAddfssiblfCbption(Addfssiblf b) {}
            publid void sftAddfssiblfCbption(Addfssiblf b) {}
            publid void sftAddfssiblfCbption(Addfssiblf b) {}
            publid void sftAddfssiblfCbption(Addfssiblf b) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif summbry dfsdription of tif tbblf.
             * Rfturns tif summbry dfsdription of tif tbblf.
             * Rfturns tif summbry dfsdription of tif tbblf.
             * Rfturns tif summbry dfsdription of tif tbblf.
             * Rfturns tif summbry dfsdription of tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif summbry dfsdription of tif tbblf
             * @rfturn tif summbry dfsdription of tif tbblf
             * @rfturn tif summbry dfsdription of tif tbblf
             * @rfturn tif summbry dfsdription of tif tbblf
             * @rfturn tif summbry dfsdription of tif tbblf
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfSummbry() { rfturn null; }
            publid Addfssiblf gftAddfssiblfSummbry() { rfturn null; }
            publid Addfssiblf gftAddfssiblfSummbry() { rfturn null; }
            publid Addfssiblf gftAddfssiblfSummbry() { rfturn null; }
            publid Addfssiblf gftAddfssiblfSummbry() { rfturn null; }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif summbry dfsdription of tif tbblf
             * Sfts tif summbry dfsdription of tif tbblf
             * Sfts tif summbry dfsdription of tif tbblf
             * Sfts tif summbry dfsdription of tif tbblf
             * Sfts tif summbry dfsdription of tif tbblf
             *
             *
             *
             *
             *
             * @pbrbm b tif summbry dfsdription of tif tbblf
             * @pbrbm b tif summbry dfsdription of tif tbblf
             * @pbrbm b tif summbry dfsdription of tif tbblf
             * @pbrbm b tif summbry dfsdription of tif tbblf
             * @pbrbm b tif summbry dfsdription of tif tbblf
             */
             */
             */
             */
             */
            publid void sftAddfssiblfSummbry(Addfssiblf b) {}
            publid void sftAddfssiblfSummbry(Addfssiblf b) {}
            publid void sftAddfssiblfSummbry(Addfssiblf b) {}
            publid void sftAddfssiblfSummbry(Addfssiblf b) {}
            publid void sftAddfssiblfSummbry(Addfssiblf b) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of rows in tif tbblf.
             * Rfturns tif numbfr of rows in tif tbblf.
             * Rfturns tif numbfr of rows in tif tbblf.
             * Rfturns tif numbfr of rows in tif tbblf.
             * Rfturns tif numbfr of rows in tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of rows in tif tbblf
             * @rfturn tif numbfr of rows in tif tbblf
             * @rfturn tif numbfr of rows in tif tbblf
             * @rfturn tif numbfr of rows in tif tbblf
             * @rfturn tif numbfr of rows in tif tbblf
             */
             */
             */
             */
             */
            publid int gftAddfssiblfRowCount() { rfturn 1; }
            publid int gftAddfssiblfRowCount() { rfturn 1; }
            publid int gftAddfssiblfRowCount() { rfturn 1; }
            publid int gftAddfssiblfRowCount() { rfturn 1; }
            publid int gftAddfssiblfRowCount() { rfturn 1; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of dolumns in tif tbblf.
             * Rfturns tif numbfr of dolumns in tif tbblf.
             * Rfturns tif numbfr of dolumns in tif tbblf.
             * Rfturns tif numbfr of dolumns in tif tbblf.
             * Rfturns tif numbfr of dolumns in tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of dolumns in tif tbblf
             * @rfturn tif numbfr of dolumns in tif tbblf
             * @rfturn tif numbfr of dolumns in tif tbblf
             * @rfturn tif numbfr of dolumns in tif tbblf
             * @rfturn tif numbfr of dolumns in tif tbblf
             */
             */
             */
             */
             */
            publid int gftAddfssiblfColumnCount() {
            publid int gftAddfssiblfColumnCount() {
            publid int gftAddfssiblfColumnCount() {
            publid int gftAddfssiblfColumnCount() {
            publid int gftAddfssiblfColumnCount() {
                rfturn ifbdfrModfl.gftColumnCount();
                rfturn ifbdfrModfl.gftColumnCount();
                rfturn ifbdfrModfl.gftColumnCount();
                rfturn ifbdfrModfl.gftColumnCount();
                rfturn ifbdfrModfl.gftColumnCount();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif Addfssiblf bt b spfdififd row bnd dolumn
             * Rfturns tif Addfssiblf bt b spfdififd row bnd dolumn
             * Rfturns tif Addfssiblf bt b spfdififd row bnd dolumn
             * Rfturns tif Addfssiblf bt b spfdififd row bnd dolumn
             * Rfturns tif Addfssiblf bt b spfdififd row bnd dolumn
             * in tif tbblf.
             * in tif tbblf.
             * in tif tbblf.
             * in tif tbblf.
             * in tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm row zfro-bbsfd row of tif tbblf
             * @pbrbm row zfro-bbsfd row of tif tbblf
             * @pbrbm row zfro-bbsfd row of tif tbblf
             * @pbrbm row zfro-bbsfd row of tif tbblf
             * @pbrbm row zfro-bbsfd row of tif tbblf
             * @pbrbm dolumn zfro-bbsfd dolumn of tif tbblf
             * @pbrbm dolumn zfro-bbsfd dolumn of tif tbblf
             * @pbrbm dolumn zfro-bbsfd dolumn of tif tbblf
             * @pbrbm dolumn zfro-bbsfd dolumn of tif tbblf
             * @pbrbm dolumn zfro-bbsfd dolumn of tif tbblf
             * @rfturn tif Addfssiblf bt tif spfdififd row bnd dolumn
             * @rfturn tif Addfssiblf bt tif spfdififd row bnd dolumn
             * @rfturn tif Addfssiblf bt tif spfdififd row bnd dolumn
             * @rfturn tif Addfssiblf bt tif spfdififd row bnd dolumn
             * @rfturn tif Addfssiblf bt tif spfdififd row bnd dolumn
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfAt(int row, int dolumn) {
            publid Addfssiblf gftAddfssiblfAt(int row, int dolumn) {
            publid Addfssiblf gftAddfssiblfAt(int row, int dolumn) {
            publid Addfssiblf gftAddfssiblfAt(int row, int dolumn) {
            publid Addfssiblf gftAddfssiblfAt(int row, int dolumn) {










                // TIGER - 4715503
                // TIGER - 4715503
                // TIGER - 4715503
                // TIGER - 4715503
                // TIGER - 4715503
                TbblfColumn bColumn = ifbdfrModfl.gftColumn(dolumn);
                TbblfColumn bColumn = ifbdfrModfl.gftColumn(dolumn);
                TbblfColumn bColumn = ifbdfrModfl.gftColumn(dolumn);
                TbblfColumn bColumn = ifbdfrModfl.gftColumn(dolumn);
                TbblfColumn bColumn = ifbdfrModfl.gftColumn(dolumn);
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftHfbdfrRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftHfbdfrRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftHfbdfrRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftHfbdfrRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftHfbdfrRfndfrfr();
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                    rfndfrfr = ifbdfr.gftDffbultRfndfrfr();
                    rfndfrfr = ifbdfr.gftDffbultRfndfrfr();
                    rfndfrfr = ifbdfr.gftDffbultRfndfrfr();
                    rfndfrfr = ifbdfr.gftDffbultRfndfrfr();
                    rfndfrfr = ifbdfr.gftDffbultRfndfrfr();
                }
                }
                }
                }
                }
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                                  ifbdfr.gftTbblf(),
                                  ifbdfr.gftTbblf(),
                                  ifbdfr.gftTbblf(),
                                  ifbdfr.gftTbblf(),
                                  ifbdfr.gftTbblf(),
                                  bColumn.gftHfbdfrVbluf(), fblsf, fblsf,
                                  bColumn.gftHfbdfrVbluf(), fblsf, fblsf,
                                  bColumn.gftHfbdfrVbluf(), fblsf, fblsf,
                                  bColumn.gftHfbdfrVbluf(), fblsf, fblsf,
                                  bColumn.gftHfbdfrVbluf(), fblsf, fblsf,
                                  -1, dolumn);
                                  -1, dolumn);
                                  -1, dolumn);
                                  -1, dolumn);
                                  -1, dolumn);





                rfturn nfw AddfssiblfJTbblfHfbdfrCfll(row, dolumn,
                rfturn nfw AddfssiblfJTbblfHfbdfrCfll(row, dolumn,
                rfturn nfw AddfssiblfJTbblfHfbdfrCfll(row, dolumn,
                rfturn nfw AddfssiblfJTbblfHfbdfrCfll(row, dolumn,
                rfturn nfw AddfssiblfJTbblfHfbdfrCfll(row, dolumn,
                                                      JTbblf.tiis.gftTbblfHfbdfr(),
                                                      JTbblf.tiis.gftTbblfHfbdfr(),
                                                      JTbblf.tiis.gftTbblfHfbdfr(),
                                                      JTbblf.tiis.gftTbblfHfbdfr(),
                                                      JTbblf.tiis.gftTbblfHfbdfr(),
                                                      domponfnt);
                                                      domponfnt);
                                                      domponfnt);
                                                      domponfnt);
                                                      domponfnt);
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of rows oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of rows oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of rows oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of rows oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of rows oddupifd by tif Addfssiblf bt
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of rows oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of rows oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of rows oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of rows oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of rows oddupifd by tif Addfssiblf bt b
             * givfn spfdififd (row, dolumn)
             * givfn spfdififd (row, dolumn)
             * givfn spfdififd (row, dolumn)
             * givfn spfdififd (row, dolumn)
             * givfn spfdififd (row, dolumn)
             */
             */
             */
             */
             */
            publid int gftAddfssiblfRowExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfRowExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfRowExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfRowExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfRowExtfntAt(int r, int d) { rfturn 1; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of dolumns oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of dolumns oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of dolumns oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of dolumns oddupifd by tif Addfssiblf bt
             * Rfturns tif numbfr of dolumns oddupifd by tif Addfssiblf bt
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             * b spfdififd row bnd dolumn in tif tbblf.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of dolumns oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of dolumns oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of dolumns oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of dolumns oddupifd by tif Addfssiblf bt b
             * @rfturn tif numbfr of dolumns oddupifd by tif Addfssiblf bt b
             * givfn spfdififd row bnd dolumn
             * givfn spfdififd row bnd dolumn
             * givfn spfdififd row bnd dolumn
             * givfn spfdififd row bnd dolumn
             * givfn spfdififd row bnd dolumn
             */
             */
             */
             */
             */
            publid int gftAddfssiblfColumnExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfColumnExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfColumnExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfColumnExtfntAt(int r, int d) { rfturn 1; }
            publid int gftAddfssiblfColumnExtfntAt(int r, int d) { rfturn 1; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif row ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif row ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif row ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif row ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif row ifbdfrs bs bn AddfssiblfTbblf.
             *
             *
             *
             *
             *
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif row
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif row
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif row
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif row
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif row
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             */
             */
             */
             */
             */
            publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfRowHfbdfr() { rfturn null; }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif row ifbdfrs.
             * Sfts tif row ifbdfrs.
             * Sfts tif row ifbdfrs.
             * Sfts tif row ifbdfrs.
             * Sfts tif row ifbdfrs.
             *
             *
             *
             *
             *
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * row ifbdfrs
             * row ifbdfrs
             * row ifbdfrs
             * row ifbdfrs
             * row ifbdfrs
             */
             */
             */
             */
             */
            publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfRowHfbdfr(AddfssiblfTbblf tbblf) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif dolumn ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif dolumn ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif dolumn ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif dolumn ifbdfrs bs bn AddfssiblfTbblf.
             * Rfturns tif dolumn ifbdfrs bs bn AddfssiblfTbblf.
             *
             *
             *
             *
             *
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif dolumn
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif dolumn
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif dolumn
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif dolumn
             * @rfturn bn AddfssiblfTbblf rfprfsfnting tif dolumn
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             * ifbdfrs
             */
             */
             */
             */
             */
            publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() { rfturn null; }
            publid AddfssiblfTbblf gftAddfssiblfColumnHfbdfr() { rfturn null; }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif dolumn ifbdfrs.
             * Sfts tif dolumn ifbdfrs.
             * Sfts tif dolumn ifbdfrs.
             * Sfts tif dolumn ifbdfrs.
             * Sfts tif dolumn ifbdfrs.
             *
             *
             *
             *
             *
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * @pbrbm tbblf bn AddfssiblfTbblf rfprfsfnting tif
             * dolumn ifbdfrs
             * dolumn ifbdfrs
             * dolumn ifbdfrs
             * dolumn ifbdfrs
             * dolumn ifbdfrs
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf tbblf) {}
            publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf tbblf) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
             * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
             * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
             * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
             * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @rfturn tif dfsdription of tif row
             * @rfturn tif dfsdription of tif row
             * @rfturn tif dfsdription of tif row
             * @rfturn tif dfsdription of tif row
             * @rfturn tif dfsdription of tif row
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfRowDfsdription(int r) { rfturn null; }
            publid Addfssiblf gftAddfssiblfRowDfsdription(int r) { rfturn null; }
            publid Addfssiblf gftAddfssiblfRowDfsdription(int r) { rfturn null; }
            publid Addfssiblf gftAddfssiblfRowDfsdription(int r) { rfturn null; }
            publid Addfssiblf gftAddfssiblfRowDfsdription(int r) { rfturn null; }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm b tif dfsdription of tif row
             * @pbrbm b tif dfsdription of tif row
             * @pbrbm b tif dfsdription of tif row
             * @pbrbm b tif dfsdription of tif row
             * @pbrbm b tif dfsdription of tif row
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {}
            publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {}
            publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {}
            publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {}
            publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Rfturns tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Rfturns tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Rfturns tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Rfturns tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @rfturn tif tfxt dfsdription of tif dolumn
             * @rfturn tif tfxt dfsdription of tif dolumn
             * @rfturn tif tfxt dfsdription of tif dolumn
             * @rfturn tif tfxt dfsdription of tif dolumn
             * @rfturn tif tfxt dfsdription of tif dolumn
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) { rfturn null; }
            publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) { rfturn null; }
            publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) { rfturn null; }
            publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) { rfturn null; }
            publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) { rfturn null; }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             * Sfts tif dfsdription tfxt of tif spfdififd dolumn in tif tbblf.
             *
             *
             *
             *
             *
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm b tif tfxt dfsdription of tif dolumn
             * @pbrbm b tif tfxt dfsdription of tif dolumn
             * @pbrbm b tif tfxt dfsdription of tif dolumn
             * @pbrbm b tif tfxt dfsdription of tif dolumn
             * @pbrbm b tif tfxt dfsdription of tif dolumn
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {}
            publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {}
            publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {}
            publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {}
            publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {}





            /**
            /**
            /**
            /**
            /**
             * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt
             * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt
             * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt
             * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt
             * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt
             * b spfdififd row bnd dolumn is sflfdtfd.
             * b spfdififd row bnd dolumn is sflfdtfd.
             * b spfdififd row bnd dolumn is sflfdtfd.
             * b spfdififd row bnd dolumn is sflfdtfd.
             * b spfdififd row bnd dolumn is sflfdtfd.
             *
             *
             *
             *
             *
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt tif
             * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt tif
             * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt tif
             * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt tif
             * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt tif
             * row bnd dolumn is sflfdtfd. Otifrwisf, tif boolfbn vbluf
             * row bnd dolumn is sflfdtfd. Otifrwisf, tif boolfbn vbluf
             * row bnd dolumn is sflfdtfd. Otifrwisf, tif boolfbn vbluf
             * row bnd dolumn is sflfdtfd. Otifrwisf, tif boolfbn vbluf
             * row bnd dolumn is sflfdtfd. Otifrwisf, tif boolfbn vbluf
             * fblsf
             * fblsf
             * fblsf
             * fblsf
             * fblsf
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid boolfbn isAddfssiblfSflfdtfd(int r, int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfSflfdtfd(int r, int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfSflfdtfd(int r, int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfSflfdtfd(int r, int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfSflfdtfd(int r, int d) { rfturn fblsf; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             *
             *
             *
             *
             *
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @pbrbm r zfro-bbsfd row of tif tbblf
             * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid boolfbn isAddfssiblfRowSflfdtfd(int r) { rfturn fblsf; }
            publid boolfbn isAddfssiblfRowSflfdtfd(int r) { rfturn fblsf; }
            publid boolfbn isAddfssiblfRowSflfdtfd(int r) { rfturn fblsf; }
            publid boolfbn isAddfssiblfRowSflfdtfd(int r) { rfturn fblsf; }
            publid boolfbn isAddfssiblfRowSflfdtfd(int r) { rfturn fblsf; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
             * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             * is sflfdtfd.
             *
             *
             *
             *
             *
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @pbrbm d zfro-bbsfd dolumn of tif tbblf
             * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd.
             * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * Otifrwisf, fblsf.
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid boolfbn isAddfssiblfColumnSflfdtfd(int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfColumnSflfdtfd(int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfColumnSflfdtfd(int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfColumnSflfdtfd(int d) { rfturn fblsf; }
            publid boolfbn isAddfssiblfColumnSflfdtfd(int d) { rfturn fblsf; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif sflfdtfd rows in b tbblf.
             * Rfturns tif sflfdtfd rows in b tbblf.
             * Rfturns tif sflfdtfd rows in b tbblf.
             * Rfturns tif sflfdtfd rows in b tbblf.
             * Rfturns tif sflfdtfd rows in b tbblf.
             *
             *
             *
             *
             *
             * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
             * zfro-bbsfd row of tif tbblf
             * zfro-bbsfd row of tif tbblf
             * zfro-bbsfd row of tif tbblf
             * zfro-bbsfd row of tif tbblf
             * zfro-bbsfd row of tif tbblf
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid int [] gftSflfdtfdAddfssiblfRows() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfRows() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfRows() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfRows() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfRows() { rfturn nfw int[0]; }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif sflfdtfd dolumns in b tbblf.
             * Rfturns tif sflfdtfd dolumns in b tbblf.
             * Rfturns tif sflfdtfd dolumns in b tbblf.
             * Rfturns tif sflfdtfd dolumns in b tbblf.
             * Rfturns tif sflfdtfd dolumns in b tbblf.
             *
             *
             *
             *
             *
             * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
             * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
             * zfro-bbsfd dolumn of tif tbblf
             * zfro-bbsfd dolumn of tif tbblf
             * zfro-bbsfd dolumn of tif tbblf
             * zfro-bbsfd dolumn of tif tbblf
             * zfro-bbsfd dolumn of tif tbblf
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             * @sindf 1.3
             */
             */
             */
             */
             */
            publid int [] gftSflfdtfdAddfssiblfColumns() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfColumns() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfColumns() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfColumns() { rfturn nfw int[0]; }
            publid int [] gftSflfdtfdAddfssiblfColumns() { rfturn nfw int[0]; }
        }
        }
        }
        }
        }










        /**
        /**
        /**
        /**
        /**
         * Sfts tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         * Sfts tif dolumn ifbdfrs bs bn <dodf>AddfssiblfTbblf</dodf>.
         *
         *
         *
         *
         *
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif
         * @pbrbm b bn <dodf>AddfssiblfTbblf</dodf> rfprfsfnting tif
         * dolumn ifbdfrs
         * dolumn ifbdfrs
         * dolumn ifbdfrs
         * dolumn ifbdfrs
         * dolumn ifbdfrs
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf b) {
        publid void sftAddfssiblfColumnHfbdfr(AddfssiblfTbblf b) {
            // XXX not implfmfntfd
            // XXX not implfmfntfd
            // XXX not implfmfntfd
            // XXX not implfmfntfd
            // XXX not implfmfntfd
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd row in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @rfturn tif dfsdription of tif row
         * @rfturn tif dfsdription of tif row
         * @rfturn tif dfsdription of tif row
         * @rfturn tif dfsdription of tif row
         * @rfturn tif dfsdription of tif row
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfRowDfsdription(int r) {
        publid Addfssiblf gftAddfssiblfRowDfsdription(int r) {
        publid Addfssiblf gftAddfssiblfRowDfsdription(int r) {
        publid Addfssiblf gftAddfssiblfRowDfsdription(int r) {
        publid Addfssiblf gftAddfssiblfRowDfsdription(int r) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
            }
            }
            }
            }
            }
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn rowDfsdription[r];
                rfturn rowDfsdription[r];
                rfturn rowDfsdription[r];
                rfturn rowDfsdription[r];
                rfturn rowDfsdription[r];
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd row of tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm b tif dfsdription of tif row
         * @pbrbm b tif dfsdription of tif row
         * @pbrbm b tif dfsdription of tif row
         * @pbrbm b tif dfsdription of tif row
         * @pbrbm b tif dfsdription of tif row
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {
        publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {
        publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {
        publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {
        publid void sftAddfssiblfRowDfsdription(int r, Addfssiblf b) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
            if (r < 0 || r >= gftAddfssiblfRowCount()) {
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(r));
            }
            }
            }
            }
            }
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
            if (rowDfsdription == null) {
                int numRows = gftAddfssiblfRowCount();
                int numRows = gftAddfssiblfRowCount();
                int numRows = gftAddfssiblfRowCount();
                int numRows = gftAddfssiblfRowCount();
                int numRows = gftAddfssiblfRowCount();
                rowDfsdription = nfw Addfssiblf[numRows];
                rowDfsdription = nfw Addfssiblf[numRows];
                rowDfsdription = nfw Addfssiblf[numRows];
                rowDfsdription = nfw Addfssiblf[numRows];
                rowDfsdription = nfw Addfssiblf[numRows];
            }
            }
            }
            }
            }
            rowDfsdription[r] = b;
            rowDfsdription[r] = b;
            rowDfsdription[r] = b;
            rowDfsdription[r] = b;
            rowDfsdription[r] = b;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dfsdription of tif spfdififd dolumn in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd dolumn in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd dolumn in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd dolumn in tif tbblf.
         * Rfturns tif dfsdription of tif spfdififd dolumn in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif dfsdription of tif dolumn
         * @rfturn tif dfsdription of tif dolumn
         * @rfturn tif dfsdription of tif dolumn
         * @rfturn tif dfsdription of tif dolumn
         * @rfturn tif dfsdription of tif dolumn
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) {
        publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) {
        publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) {
        publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) {
        publid Addfssiblf gftAddfssiblfColumnDfsdription(int d) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
            }
            }
            }
            }
            }
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn dolumnDfsdription[d];
                rfturn dolumnDfsdription[d];
                rfturn dolumnDfsdription[d];
                rfturn dolumnDfsdription[d];
                rfturn dolumnDfsdription[d];
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Sfts tif dfsdription tfxt of tif spfdififd dolumn of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd dolumn of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd dolumn of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd dolumn of tif tbblf.
         * Sfts tif dfsdription tfxt of tif spfdififd dolumn of tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm b tif dfsdription of tif dolumn
         * @pbrbm b tif dfsdription of tif dolumn
         * @pbrbm b tif dfsdription of tif dolumn
         * @pbrbm b tif dfsdription of tif dolumn
         * @pbrbm b tif dfsdription of tif dolumn
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {
        publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {
        publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {
        publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {
        publid void sftAddfssiblfColumnDfsdription(int d, Addfssiblf b) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
            if (d < 0 || d >= gftAddfssiblfColumnCount()) {
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
                tirow nfw IllfgblArgumfntExdfption(Intfgfr.toString(d));
            }
            }
            }
            }
            }
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
            if (dolumnDfsdription == null) {
                int numColumns = gftAddfssiblfColumnCount();
                int numColumns = gftAddfssiblfColumnCount();
                int numColumns = gftAddfssiblfColumnCount();
                int numColumns = gftAddfssiblfColumnCount();
                int numColumns = gftAddfssiblfColumnCount();
                dolumnDfsdription = nfw Addfssiblf[numColumns];
                dolumnDfsdription = nfw Addfssiblf[numColumns];
                dolumnDfsdription = nfw Addfssiblf[numColumns];
                dolumnDfsdription = nfw Addfssiblf[numColumns];
                dolumnDfsdription = nfw Addfssiblf[numColumns];
            }
            }
            }
            }
            }
            dolumnDfsdription[d] = b;
            dolumnDfsdription[d] = b;
            dolumnDfsdription[d] = b;
            dolumnDfsdription[d] = b;
            dolumnDfsdription[d] = b;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt b
         * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt b
         * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt b
         * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt b
         * Rfturns b boolfbn vbluf indidbting wiftifr tif bddfssiblf bt b
         * givfn (row, dolumn) is sflfdtfd.
         * givfn (row, dolumn) is sflfdtfd.
         * givfn (row, dolumn) is sflfdtfd.
         * givfn (row, dolumn) is sflfdtfd.
         * givfn (row, dolumn) is sflfdtfd.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt (row, dolumn)
         * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt (row, dolumn)
         * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt (row, dolumn)
         * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt (row, dolumn)
         * @rfturn tif boolfbn vbluf truf if tif bddfssiblf bt (row, dolumn)
         *     is sflfdtfd; otifrwisf, tif boolfbn vbluf fblsf
         *     is sflfdtfd; otifrwisf, tif boolfbn vbluf fblsf
         *     is sflfdtfd; otifrwisf, tif boolfbn vbluf fblsf
         *     is sflfdtfd; otifrwisf, tif boolfbn vbluf fblsf
         *     is sflfdtfd; otifrwisf, tif boolfbn vbluf fblsf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid boolfbn isAddfssiblfSflfdtfd(int r, int d) {
        publid boolfbn isAddfssiblfSflfdtfd(int r, int d) {
        publid boolfbn isAddfssiblfSflfdtfd(int r, int d) {
        publid boolfbn isAddfssiblfSflfdtfd(int r, int d) {
        publid boolfbn isAddfssiblfSflfdtfd(int r, int d) {
            rfturn JTbblf.tiis.isCfllSflfdtfd(r, d);
            rfturn JTbblf.tiis.isCfllSflfdtfd(r, d);
            rfturn JTbblf.tiis.isCfllSflfdtfd(r, d);
            rfturn JTbblf.tiis.isCfllSflfdtfd(r, d);
            rfturn JTbblf.tiis.isCfllSflfdtfd(r, d);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd row
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd row is sflfdtfd;
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid boolfbn isAddfssiblfRowSflfdtfd(int r) {
        publid boolfbn isAddfssiblfRowSflfdtfd(int r) {
        publid boolfbn isAddfssiblfRowSflfdtfd(int r) {
        publid boolfbn isAddfssiblfRowSflfdtfd(int r) {
        publid boolfbn isAddfssiblfRowSflfdtfd(int r) {
            rfturn JTbblf.tiis.isRowSflfdtfd(r);
            rfturn JTbblf.tiis.isRowSflfdtfd(r);
            rfturn JTbblf.tiis.isRowSflfdtfd(r);
            rfturn JTbblf.tiis.isRowSflfdtfd(r);
            rfturn JTbblf.tiis.isRowSflfdtfd(r);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
         * Rfturns b boolfbn vbluf indidbting wiftifr tif spfdififd dolumn
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         * is sflfdtfd.
         *
         *
         *
         *
         *
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd;
         * @rfturn tif boolfbn vbluf truf if tif spfdififd dolumn is sflfdtfd;
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         *     otifrwisf, fblsf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid boolfbn isAddfssiblfColumnSflfdtfd(int d) {
        publid boolfbn isAddfssiblfColumnSflfdtfd(int d) {
        publid boolfbn isAddfssiblfColumnSflfdtfd(int d) {
        publid boolfbn isAddfssiblfColumnSflfdtfd(int d) {
        publid boolfbn isAddfssiblfColumnSflfdtfd(int d) {
            rfturn JTbblf.tiis.isColumnSflfdtfd(d);
            rfturn JTbblf.tiis.isColumnSflfdtfd(d);
            rfturn JTbblf.tiis.isColumnSflfdtfd(d);
            rfturn JTbblf.tiis.isColumnSflfdtfd(d);
            rfturn JTbblf.tiis.isColumnSflfdtfd(d);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif sflfdtfd rows in b tbblf.
         * Rfturns tif sflfdtfd rows in b tbblf.
         * Rfturns tif sflfdtfd rows in b tbblf.
         * Rfturns tif sflfdtfd rows in b tbblf.
         * Rfturns tif sflfdtfd rows in b tbblf.
         *
         *
         *
         *
         *
         * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd rows wifrf fbdi flfmfnt is b
         *     zfro-bbsfd row of tif tbblf
         *     zfro-bbsfd row of tif tbblf
         *     zfro-bbsfd row of tif tbblf
         *     zfro-bbsfd row of tif tbblf
         *     zfro-bbsfd row of tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int [] gftSflfdtfdAddfssiblfRows() {
        publid int [] gftSflfdtfdAddfssiblfRows() {
        publid int [] gftSflfdtfdAddfssiblfRows() {
        publid int [] gftSflfdtfdAddfssiblfRows() {
        publid int [] gftSflfdtfdAddfssiblfRows() {
            rfturn JTbblf.tiis.gftSflfdtfdRows();
            rfturn JTbblf.tiis.gftSflfdtfdRows();
            rfturn JTbblf.tiis.gftSflfdtfdRows();
            rfturn JTbblf.tiis.gftSflfdtfdRows();
            rfturn JTbblf.tiis.gftSflfdtfdRows();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif sflfdtfd dolumns in b tbblf.
         * Rfturns tif sflfdtfd dolumns in b tbblf.
         * Rfturns tif sflfdtfd dolumns in b tbblf.
         * Rfturns tif sflfdtfd dolumns in b tbblf.
         * Rfturns tif sflfdtfd dolumns in b tbblf.
         *
         *
         *
         *
         *
         * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
         * @rfturn bn brrby of sflfdtfd dolumns wifrf fbdi flfmfnt is b
         *     zfro-bbsfd dolumn of tif tbblf
         *     zfro-bbsfd dolumn of tif tbblf
         *     zfro-bbsfd dolumn of tif tbblf
         *     zfro-bbsfd dolumn of tif tbblf
         *     zfro-bbsfd dolumn of tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int [] gftSflfdtfdAddfssiblfColumns() {
        publid int [] gftSflfdtfdAddfssiblfColumns() {
        publid int [] gftSflfdtfdAddfssiblfColumns() {
        publid int [] gftSflfdtfdAddfssiblfColumns() {
        publid int [] gftSflfdtfdAddfssiblfColumns() {
            rfturn JTbblf.tiis.gftSflfdtfdColumns();
            rfturn JTbblf.tiis.gftSflfdtfdColumns();
            rfturn JTbblf.tiis.gftSflfdtfdColumns();
            rfturn JTbblf.tiis.gftSflfdtfdColumns();
            rfturn JTbblf.tiis.gftSflfdtfdColumns();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif row bt b givfn indfx into tif tbblf.
         * Rfturns tif row bt b givfn indfx into tif tbblf.
         * Rfturns tif row bt b givfn indfx into tif tbblf.
         * Rfturns tif row bt b givfn indfx into tif tbblf.
         * Rfturns tif row bt b givfn indfx into tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @rfturn tif row bt b givfn indfx
         * @rfturn tif row bt b givfn indfx
         * @rfturn tif row bt b givfn indfx
         * @rfturn tif row bt b givfn indfx
         * @rfturn tif row bt b givfn indfx
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int gftAddfssiblfRowAtIndfx(int i) {
        publid int gftAddfssiblfRowAtIndfx(int i) {
        publid int gftAddfssiblfRowAtIndfx(int i) {
        publid int gftAddfssiblfRowAtIndfx(int i) {
        publid int gftAddfssiblfRowAtIndfx(int i) {
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn (i / dolumnCount);
                rfturn (i / dolumnCount);
                rfturn (i / dolumnCount);
                rfturn (i / dolumnCount);
                rfturn (i / dolumnCount);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dolumn bt b givfn indfx into tif tbblf.
         * Rfturns tif dolumn bt b givfn indfx into tif tbblf.
         * Rfturns tif dolumn bt b givfn indfx into tif tbblf.
         * Rfturns tif dolumn bt b givfn indfx into tif tbblf.
         * Rfturns tif dolumn bt b givfn indfx into tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @pbrbm i zfro-bbsfd indfx into tif tbblf
         * @rfturn tif dolumn bt b givfn indfx
         * @rfturn tif dolumn bt b givfn indfx
         * @rfturn tif dolumn bt b givfn indfx
         * @rfturn tif dolumn bt b givfn indfx
         * @rfturn tif dolumn bt b givfn indfx
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int gftAddfssiblfColumnAtIndfx(int i) {
        publid int gftAddfssiblfColumnAtIndfx(int i) {
        publid int gftAddfssiblfColumnAtIndfx(int i) {
        publid int gftAddfssiblfColumnAtIndfx(int i) {
        publid int gftAddfssiblfColumnAtIndfx(int i) {
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            int dolumnCount = gftAddfssiblfColumnCount();
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
            if (dolumnCount == 0) {
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn (i % dolumnCount);
                rfturn (i % dolumnCount);
                rfturn (i % dolumnCount);
                rfturn (i % dolumnCount);
                rfturn (i % dolumnCount);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif indfx bt b givfn (row, dolumn) in tif tbblf.
         * Rfturns tif indfx bt b givfn (row, dolumn) in tif tbblf.
         * Rfturns tif indfx bt b givfn (row, dolumn) in tif tbblf.
         * Rfturns tif indfx bt b givfn (row, dolumn) in tif tbblf.
         * Rfturns tif indfx bt b givfn (row, dolumn) in tif tbblf.
         *
         *
         *
         *
         *
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm r zfro-bbsfd row of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @pbrbm d zfro-bbsfd dolumn of tif tbblf
         * @rfturn tif indfx into tif tbblf
         * @rfturn tif indfx into tif tbblf
         * @rfturn tif indfx into tif tbblf
         * @rfturn tif indfx into tif tbblf
         * @rfturn tif indfx into tif tbblf
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         * @sindf 1.3
         */
         */
         */
         */
         */
        publid int gftAddfssiblfIndfxAt(int r, int d) {
        publid int gftAddfssiblfIndfxAt(int r, int d) {
        publid int gftAddfssiblfIndfxAt(int r, int d) {
        publid int gftAddfssiblfIndfxAt(int r, int d) {
        publid int gftAddfssiblfIndfxAt(int r, int d) {
            rfturn ((r * gftAddfssiblfColumnCount()) + d);
            rfturn ((r * gftAddfssiblfColumnCount()) + d);
            rfturn ((r * gftAddfssiblfColumnCount()) + d);
            rfturn ((r * gftAddfssiblfColumnCount()) + d);
            rfturn ((r * gftAddfssiblfColumnCount()) + d);
        }
        }
        }
        }
        }





        // fnd of AddfssiblfTbblf implfmfntbtion --------------------
        // fnd of AddfssiblfTbblf implfmfntbtion --------------------
        // fnd of AddfssiblfTbblf implfmfntbtion --------------------
        // fnd of AddfssiblfTbblf implfmfntbtion --------------------
        // fnd of AddfssiblfTbblf implfmfntbtion --------------------





        /**
        /**
        /**
        /**
        /**
         * Tif dlbss providfs bn implfmfntbtion of tif Jbvb Addfssibility
         * Tif dlbss providfs bn implfmfntbtion of tif Jbvb Addfssibility
         * Tif dlbss providfs bn implfmfntbtion of tif Jbvb Addfssibility
         * Tif dlbss providfs bn implfmfntbtion of tif Jbvb Addfssibility
         * Tif dlbss providfs bn implfmfntbtion of tif Jbvb Addfssibility
         * API bppropribtf to tbblf dflls.
         * API bppropribtf to tbblf dflls.
         * API bppropribtf to tbblf dflls.
         * API bppropribtf to tbblf dflls.
         * API bppropribtf to tbblf dflls.
         */
         */
         */
         */
         */
        protfdtfd dlbss AddfssiblfJTbblfCfll fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTbblfCfll fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTbblfCfll fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTbblfCfll fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTbblfCfll fxtfnds AddfssiblfContfxt
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {





            privbtf JTbblf pbrfnt;
            privbtf JTbblf pbrfnt;
            privbtf JTbblf pbrfnt;
            privbtf JTbblf pbrfnt;
            privbtf JTbblf pbrfnt;
            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int indfx;
            privbtf int indfx;
            privbtf int indfx;
            privbtf int indfx;
            privbtf int indfx;





            /**
            /**
            /**
            /**
            /**
             *  Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf>.
             *  Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf>.
             *  Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf>.
             *  Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf>.
             *  Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf>.
             *
             *
             *
             *
             *
             * @pbrbm t b {@dodf JTbblf}
             * @pbrbm t b {@dodf JTbblf}
             * @pbrbm t b {@dodf JTbblf}
             * @pbrbm t b {@dodf JTbblf}
             * @pbrbm t b {@dodf JTbblf}
             * @pbrbm r bn {@dodf int} spfdifying b row
             * @pbrbm r bn {@dodf int} spfdifying b row
             * @pbrbm r bn {@dodf int} spfdifying b row
             * @pbrbm r bn {@dodf int} spfdifying b row
             * @pbrbm r bn {@dodf int} spfdifying b row
             * @pbrbm d bn {@dodf int} spfdifying b dolumn
             * @pbrbm d bn {@dodf int} spfdifying b dolumn
             * @pbrbm d bn {@dodf int} spfdifying b dolumn
             * @pbrbm d bn {@dodf int} spfdifying b dolumn
             * @pbrbm d bn {@dodf int} spfdifying b dolumn
             * @pbrbm i bn {@dodf int} spfdifying tif indfx to tiis dfll
             * @pbrbm i bn {@dodf int} spfdifying tif indfx to tiis dfll
             * @pbrbm i bn {@dodf int} spfdifying tif indfx to tiis dfll
             * @pbrbm i bn {@dodf int} spfdifying tif indfx to tiis dfll
             * @pbrbm i bn {@dodf int} spfdifying tif indfx to tiis dfll
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             */
             */
             */
             */
             */
            publid AddfssiblfJTbblfCfll(JTbblf t, int r, int d, int i) {
            publid AddfssiblfJTbblfCfll(JTbblf t, int r, int d, int i) {
            publid AddfssiblfJTbblfCfll(JTbblf t, int r, int d, int i) {
            publid AddfssiblfJTbblfCfll(JTbblf t, int r, int d, int i) {
            publid AddfssiblfJTbblfCfll(JTbblf t, int r, int d, int i) {
                pbrfnt = t;
                pbrfnt = t;
                pbrfnt = t;
                pbrfnt = t;
                pbrfnt = t;
                row = r;
                row = r;
                row = r;
                row = r;
                row = r;
                dolumn = d;
                dolumn = d;
                dolumn = d;
                dolumn = d;
                dolumn = d;
                indfx = i;
                indfx = i;
                indfx = i;
                indfx = i;
                indfx = i;
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             */
             */
             */
             */
             */
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif AddfssiblfContfxt for tif tbblf dfll rfndfrfr.
             * Gfts tif AddfssiblfContfxt for tif tbblf dfll rfndfrfr.
             * Gfts tif AddfssiblfContfxt for tif tbblf dfll rfndfrfr.
             * Gfts tif AddfssiblfContfxt for tif tbblf dfll rfndfrfr.
             * Gfts tif AddfssiblfContfxt for tif tbblf dfll rfndfrfr.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfContfxt</dodf> for tif tbblf
             * @rfturn tif <dodf>AddfssiblfContfxt</dodf> for tif tbblf
             * @rfturn tif <dodf>AddfssiblfContfxt</dodf> for tif tbblf
             * @rfturn tif <dodf>AddfssiblfContfxt</dodf> for tif tbblf
             * @rfturn tif <dodf>AddfssiblfContfxt</dodf> for tif tbblf
             * dfll rfndfrfr if onf fxists;
             * dfll rfndfrfr if onf fxists;
             * dfll rfndfrfr if onf fxists;
             * dfll rfndfrfr if onf fxists;
             * dfll rfndfrfr if onf fxists;
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             */
             */
             */
             */
             */
            protfdtfd AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            protfdtfd AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            protfdtfd AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            protfdtfd AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            protfdtfd AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                }
                }
                }
                }
                }
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                Componfnt domponfnt = rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                                  JTbblf.tiis, gftVblufAt(row, dolumn),
                                  JTbblf.tiis, gftVblufAt(row, dolumn),
                                  JTbblf.tiis, gftVblufAt(row, dolumn),
                                  JTbblf.tiis, gftVblufAt(row, dolumn),
                                  JTbblf.tiis, gftVblufAt(row, dolumn),
                                  fblsf, fblsf, row, dolumn);
                                  fblsf, fblsf, row, dolumn);
                                  fblsf, fblsf, row, dolumn);
                                  fblsf, fblsf, row, dolumn);
                                  fblsf, fblsf, row, dolumn);
                if (domponfnt instbndfof Addfssiblf) {
                if (domponfnt instbndfof Addfssiblf) {
                if (domponfnt instbndfof Addfssiblf) {
                if (domponfnt instbndfof Addfssiblf) {
                if (domponfnt instbndfof Addfssiblf) {
                    rfturn domponfnt.gftAddfssiblfContfxt();
                    rfturn domponfnt.gftAddfssiblfContfxt();
                    rfturn domponfnt.gftAddfssiblfContfxt();
                    rfturn domponfnt.gftAddfssiblfContfxt();
                    rfturn domponfnt.gftAddfssiblfContfxt();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif tbblf dfll rfndfrfr domponfnt.
             * Gfts tif tbblf dfll rfndfrfr domponfnt.
             * Gfts tif tbblf dfll rfndfrfr domponfnt.
             * Gfts tif tbblf dfll rfndfrfr domponfnt.
             * Gfts tif tbblf dfll rfndfrfr domponfnt.
             *
             *
             *
             *
             *
             * @rfturn tif tbblf dfll rfndfrfr domponfnt if onf fxists;
             * @rfturn tif tbblf dfll rfndfrfr domponfnt if onf fxists;
             * @rfturn tif tbblf dfll rfndfrfr domponfnt if onf fxists;
             * @rfturn tif tbblf dfll rfndfrfr domponfnt if onf fxists;
             * @rfturn tif tbblf dfll rfndfrfr domponfnt if onf fxists;
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * otifrwisf, rfturns <dodf>null</dodf>.
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             * @sindf 1.6
             */
             */
             */
             */
             */
            protfdtfd Componfnt gftCurrfntComponfnt() {
            protfdtfd Componfnt gftCurrfntComponfnt() {
            protfdtfd Componfnt gftCurrfntComponfnt() {
            protfdtfd Componfnt gftCurrfntComponfnt() {
            protfdtfd Componfnt gftCurrfntComponfnt() {
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfColumn bColumn = gftColumnModfl().gftColumn(dolumn);
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                TbblfCfllRfndfrfr rfndfrfr = bColumn.gftCfllRfndfrfr();
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                if (rfndfrfr == null) {
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    Clbss<?> dolumnClbss = gftColumnClbss(dolumn);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                    rfndfrfr = gftDffbultRfndfrfr(dolumnClbss);
                }
                }
                }
                }
                }
                rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                rfturn rfndfrfr.gftTbblfCfllRfndfrfrComponfnt(
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  JTbblf.tiis, null, fblsf, fblsf,
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
                                  row, dolumn);
            }
            }
            }
            }
            }





        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             */
             */
             */
             */
             */
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                        // rfturn tif dfll rfndfrfr's AddfssiblfNbmf
                        // rfturn tif dfll rfndfrfr's AddfssiblfNbmf
                        // rfturn tif dfll rfndfrfr's AddfssiblfNbmf
                        // rfturn tif dfll rfndfrfr's AddfssiblfNbmf
                        // rfturn tif dfll rfndfrfr's AddfssiblfNbmf
                        rfturn nbmf;
                        rfturn nbmf;
                        rfturn nbmf;
                        rfturn nbmf;
                        rfturn nbmf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             */
             */
             */
             */
             */
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            //
            //
            //
            //
            //
            // *** siould difdk toolTip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk toolTip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk toolTip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk toolTip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk toolTip tfxt for dfsd. (nffds MousfEvfnt)
            //
            //
            //
            //
            //
            /**
            /**
            /**
            /**
            /**
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             */
             */
             */
             */
             */
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             */
             */
             */
             */
             */
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             */
             */
             */
             */
             */
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             */
             */
             */
             */
             */
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;





                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                }
                }
                }
                }
                }
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                }
                }
                }
                }
                }
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (pbrfnt.isCfllSflfdtfd(row, dolumn)) {
                if (pbrfnt.isCfllSflfdtfd(row, dolumn)) {
                if (pbrfnt.isCfllSflfdtfd(row, dolumn)) {
                if (pbrfnt.isCfllSflfdtfd(row, dolumn)) {
                if (pbrfnt.isCfllSflfdtfd(row, dolumn)) {
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                }
                }
                }
                }
                }
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                }
                }
                }
                }
                }
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                rfturn bs;
                rfturn bs;
                rfturn bs;
                rfturn bs;
                rfturn bs;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             *
             *
             *
             *
             *
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             *
             *
             *
             *
             *
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             *
             *
             *
             *
             *
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             */
             */
             */
             */
             */
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             */
             */
             */
             */
             */
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             */
             */
             */
             */
             */
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
            }
            }
            }
            }
            }










        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             */
             */
             */
             */
             */
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             */
             */
             */
             */
             */
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             */
             */
             */
             */
             */
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             */
             */
             */
             */
             */
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             */
             */
             */
             */
             */
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             *
             *
             *
             *
             *
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             */
             */
             */
             */
             */
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             *
             *
             *
             *
             *
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             */
             */
             */
             */
             */
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             *
             *
             *
             *
             *
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                    }
                    }
                    }
                    }
                    }
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             */
             */
             */
             */
             */
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             *
             *
             *
             *
             *
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             */
             */
             */
             */
             */
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             */
             */
             */
             */
             */
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             */
             */
             */
             */
             */
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
//              if ((pbrfnt != null)  && (pbrfnt.dontbins(p))) {
//              if ((pbrfnt != null)  && (pbrfnt.dontbins(p))) {
//              if ((pbrfnt != null)  && (pbrfnt.dontbins(p))) {
//              if ((pbrfnt != null)  && (pbrfnt.dontbins(p))) {
//              if ((pbrfnt != null)  && (pbrfnt.dontbins(p))) {
//                  fnsurfIndfxIsVisiblf(indfxInPbrfnt);
//                  fnsurfIndfxIsVisiblf(indfxInPbrfnt);
//                  fnsurfIndfxIsVisiblf(indfxInPbrfnt);
//                  fnsurfIndfxIsVisiblf(indfxInPbrfnt);
//                  fnsurfIndfxIsVisiblf(indfxInPbrfnt);
//              }
//              }
//              }
//              }
//              }
            }
            }
            }
            }
            }





            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    rfturn pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    rfturn pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    rfturn pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    rfturn pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    rfturn pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    Rfdtbnglf r = pbrfnt.gftCfllRfdt(row, dolumn, fblsf);
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





        } // innfr dlbss AddfssiblfJTbblfCfll
        } // innfr dlbss AddfssiblfJTbblfCfll
        } // innfr dlbss AddfssiblfJTbblfCfll
        } // innfr dlbss AddfssiblfJTbblfCfll
        } // innfr dlbss AddfssiblfJTbblfCfll





        // Bfgin AddfssiblfJTbblfHfbdfr ========== // TIGER - 4715503
        // Bfgin AddfssiblfJTbblfHfbdfr ========== // TIGER - 4715503
        // Bfgin AddfssiblfJTbblfHfbdfr ========== // TIGER - 4715503
        // Bfgin AddfssiblfJTbblfHfbdfr ========== // TIGER - 4715503
        // Bfgin AddfssiblfJTbblfHfbdfr ========== // TIGER - 4715503





        /**
        /**
        /**
        /**
        /**
         * Tiis dlbss implfmfnts bddfssibility for JTbblf ifbdfr dflls.
         * Tiis dlbss implfmfnts bddfssibility for JTbblf ifbdfr dflls.
         * Tiis dlbss implfmfnts bddfssibility for JTbblf ifbdfr dflls.
         * Tiis dlbss implfmfnts bddfssibility for JTbblf ifbdfr dflls.
         * Tiis dlbss implfmfnts bddfssibility for JTbblf ifbdfr dflls.
         */
         */
         */
         */
         */
        privbtf dlbss AddfssiblfJTbblfHfbdfrCfll fxtfnds AddfssiblfContfxt
        privbtf dlbss AddfssiblfJTbblfHfbdfrCfll fxtfnds AddfssiblfContfxt
        privbtf dlbss AddfssiblfJTbblfHfbdfrCfll fxtfnds AddfssiblfContfxt
        privbtf dlbss AddfssiblfJTbblfHfbdfrCfll fxtfnds AddfssiblfContfxt
        privbtf dlbss AddfssiblfJTbblfHfbdfrCfll fxtfnds AddfssiblfContfxt
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {
            implfmfnts Addfssiblf, AddfssiblfComponfnt {





            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int row;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf int dolumn;
            privbtf JTbblfHfbdfr pbrfnt;
            privbtf JTbblfHfbdfr pbrfnt;
            privbtf JTbblfHfbdfr pbrfnt;
            privbtf JTbblfHfbdfr pbrfnt;
            privbtf JTbblfHfbdfr pbrfnt;
            privbtf Componfnt rfndfrfrComponfnt;
            privbtf Componfnt rfndfrfrComponfnt;
            privbtf Componfnt rfndfrfrComponfnt;
            privbtf Componfnt rfndfrfrComponfnt;
            privbtf Componfnt rfndfrfrComponfnt;





            /**
            /**
            /**
            /**
            /**
             * Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf> instbndf.
             * Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf> instbndf.
             * Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf> instbndf.
             * Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf> instbndf.
             * Construdts bn <dodf>AddfssiblfJTbblfHfbdfrEntry</dodf> instbndf.
             *
             *
             *
             *
             *
             * @pbrbm row ifbdfr dfll row indfx
             * @pbrbm row ifbdfr dfll row indfx
             * @pbrbm row ifbdfr dfll row indfx
             * @pbrbm row ifbdfr dfll row indfx
             * @pbrbm row ifbdfr dfll row indfx
             * @pbrbm dolumn ifbdfr dfll dolumn indfx
             * @pbrbm dolumn ifbdfr dfll dolumn indfx
             * @pbrbm dolumn ifbdfr dfll dolumn indfx
             * @pbrbm dolumn ifbdfr dfll dolumn indfx
             * @pbrbm dolumn ifbdfr dfll dolumn indfx
             * @pbrbm pbrfnt ifbdfr dfll pbrfnt
             * @pbrbm pbrfnt ifbdfr dfll pbrfnt
             * @pbrbm pbrfnt ifbdfr dfll pbrfnt
             * @pbrbm pbrfnt ifbdfr dfll pbrfnt
             * @pbrbm pbrfnt ifbdfr dfll pbrfnt
             * @pbrbm rfndfrfrComponfnt domponfnt tibt rfndfrs tif ifbdfr dfll
             * @pbrbm rfndfrfrComponfnt domponfnt tibt rfndfrs tif ifbdfr dfll
             * @pbrbm rfndfrfrComponfnt domponfnt tibt rfndfrs tif ifbdfr dfll
             * @pbrbm rfndfrfrComponfnt domponfnt tibt rfndfrs tif ifbdfr dfll
             * @pbrbm rfndfrfrComponfnt domponfnt tibt rfndfrs tif ifbdfr dfll
             */
             */
             */
             */
             */
            publid AddfssiblfJTbblfHfbdfrCfll(int row, int dolumn,
            publid AddfssiblfJTbblfHfbdfrCfll(int row, int dolumn,
            publid AddfssiblfJTbblfHfbdfrCfll(int row, int dolumn,
            publid AddfssiblfJTbblfHfbdfrCfll(int row, int dolumn,
            publid AddfssiblfJTbblfHfbdfrCfll(int row, int dolumn,
                                              JTbblfHfbdfr pbrfnt,
                                              JTbblfHfbdfr pbrfnt,
                                              JTbblfHfbdfr pbrfnt,
                                              JTbblfHfbdfr pbrfnt,
                                              JTbblfHfbdfr pbrfnt,
                                              Componfnt rfndfrfrComponfnt) {
                                              Componfnt rfndfrfrComponfnt) {
                                              Componfnt rfndfrfrComponfnt) {
                                              Componfnt rfndfrfrComponfnt) {
                                              Componfnt rfndfrfrComponfnt) {
                tiis.row = row;
                tiis.row = row;
                tiis.row = row;
                tiis.row = row;
                tiis.row = row;
                tiis.dolumn = dolumn;
                tiis.dolumn = dolumn;
                tiis.dolumn = dolumn;
                tiis.dolumn = dolumn;
                tiis.dolumn = dolumn;
                tiis.pbrfnt = pbrfnt;
                tiis.pbrfnt = pbrfnt;
                tiis.pbrfnt = pbrfnt;
                tiis.pbrfnt = pbrfnt;
                tiis.pbrfnt = pbrfnt;
                tiis.rfndfrfrComponfnt = rfndfrfrComponfnt;
                tiis.rfndfrfrComponfnt = rfndfrfrComponfnt;
                tiis.rfndfrfrComponfnt = rfndfrfrComponfnt;
                tiis.rfndfrfrComponfnt = rfndfrfrComponfnt;
                tiis.rfndfrfrComponfnt = rfndfrfrComponfnt;
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
                tiis.sftAddfssiblfPbrfnt(pbrfnt);
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfContfxt</dodf> bssodibtfd witi tiis
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * domponfnt. In tif implfmfntbtion of tif Jbvb Addfssibility
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * API for tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             * <dodf>AddfssiblfContfxt</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             */
             */
             */
             */
             */
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }





            /*
            /*
            /*
            /*
            /*
             * Rfturns tif AddfssiblfContfxt for tif ifbdfr dfll
             * Rfturns tif AddfssiblfContfxt for tif ifbdfr dfll
             * Rfturns tif AddfssiblfContfxt for tif ifbdfr dfll
             * Rfturns tif AddfssiblfContfxt for tif ifbdfr dfll
             * Rfturns tif AddfssiblfContfxt for tif ifbdfr dfll
             * rfndfrfr.
             * rfndfrfr.
             * rfndfrfr.
             * rfndfrfr.
             * rfndfrfr.
             */
             */
             */
             */
             */
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
                rfturn rfndfrfrComponfnt.gftAddfssiblfContfxt();
                rfturn rfndfrfrComponfnt.gftAddfssiblfContfxt();
                rfturn rfndfrfrComponfnt.gftAddfssiblfContfxt();
                rfturn rfndfrfrComponfnt.gftAddfssiblfContfxt();
                rfturn rfndfrfrComponfnt.gftAddfssiblfContfxt();
            }
            }
            }
            }
            }





            /*
            /*
            /*
            /*
            /*
             * Rfturns tif domponfnt tibt rfndfrs tif ifbdfr dfll.
             * Rfturns tif domponfnt tibt rfndfrs tif ifbdfr dfll.
             * Rfturns tif domponfnt tibt rfndfrs tif ifbdfr dfll.
             * Rfturns tif domponfnt tibt rfndfrs tif ifbdfr dfll.
             * Rfturns tif domponfnt tibt rfndfrs tif ifbdfr dfll.
             */
             */
             */
             */
             */
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
                rfturn rfndfrfrComponfnt;
                rfturn rfndfrfrComponfnt;
                rfturn rfndfrfrComponfnt;
                rfturn rfndfrfrComponfnt;
                rfturn rfndfrfrComponfnt;
            }
            }
            }
            }
            }





            // AddfssiblfContfxt mftiods ==========
            // AddfssiblfContfxt mftiods ==========
            // AddfssiblfContfxt mftiods ==========
            // AddfssiblfContfxt mftiods ==========
            // AddfssiblfContfxt mftiods ==========





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             * Gfts tif bddfssiblf nbmf of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             * @rfturn tif lodblizfd nbmf of tif objfdt; <dodf>null</dodf>
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             *     if tiis objfdt dofs not ibvf b nbmf
             */
             */
             */
             */
             */
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
            publid String gftAddfssiblfNbmf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sfts tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt
             */
             */
             */
             */
             */
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             * Gfts tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             * @rfturn tif lodblizfd dfsdription of tif objfdt;
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     <dodf>null</dodf> if tiis objfdt dofs not ibvf
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             *     b dfsdription
             */
             */
             */
             */
             */
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             * Sfts tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             */
             */
             */
             */
             */
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             * Gfts tif rolf of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfRolf</dodf>
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             *      dfsdribing tif rolf of tif objfdt
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             */
             */
             */
             */
             */
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             * Gfts tif stbtf sft of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             * @rfturn bn instbndf of <dodf>AddfssiblfStbtfSft</dodf>
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             *     dontbining tif durrfnt stbtf sft of tif objfdt
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             */
             */
             */
             */
             */
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;
                AddfssiblfStbtfSft bs = null;





                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                    bs = bd.gftAddfssiblfStbtfSft();
                }
                }
                }
                }
                }
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                if (bs == null) {
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                    bs = nfw AddfssiblfStbtfSft();
                }
                }
                }
                }
                }
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rjt = JTbblf.tiis.gftVisiblfRfdt();
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                Rfdtbnglf rdfll = JTbblf.tiis.gftCfllRfdt(row, dolumn, fblsf);
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                if (rjt.intfrsfdts(rdfll)) {
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                    bs.bdd(AddfssiblfStbtf.SHOWING);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    if (bs.dontbins(AddfssiblfStbtf.SHOWING)) {
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                         bs.rfmovf(AddfssiblfStbtf.SHOWING);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (JTbblf.tiis.isCfllSflfdtfd(row, dolumn)) {
                if (JTbblf.tiis.isCfllSflfdtfd(row, dolumn)) {
                if (JTbblf.tiis.isCfllSflfdtfd(row, dolumn)) {
                if (JTbblf.tiis.isCfllSflfdtfd(row, dolumn)) {
                if (JTbblf.tiis.isCfllSflfdtfd(row, dolumn)) {
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                    bs.bdd(AddfssiblfStbtf.SELECTED);
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                } flsf if (bs.dontbins(AddfssiblfStbtf.SELECTED)) {
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                    bs.rfmovf(AddfssiblfStbtf.SELECTED);
                }
                }
                }
                }
                }
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                if ((row == gftSflfdtfdRow()) && (dolumn == gftSflfdtfdColumn())) {
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                    bs.bdd(AddfssiblfStbtf.ACTIVE);
                }
                }
                }
                }
                }
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                bs.bdd(AddfssiblfStbtf.TRANSIENT);
                rfturn bs;
                rfturn bs;
                rfturn bs;
                rfturn bs;
                rfturn bs;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             * Gfts tif <dodf>Addfssiblf</dodf> pbrfnt of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt;
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     <dodf>null</dodf> if tiis objfdt dofs not
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             *     ibvf bn <dodf>Addfssiblf</dodf> pbrfnt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
                rfturn pbrfnt;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gfts tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             *
             *
             *
             *
             *
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             *     objfdt dofs not ibvf bn bddfssiblf pbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
                rfturn dolumn;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                    rfturn bd.gftAddfssiblfCiildrfnCount();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                    rfturn 0;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * Rfturns tif spfdififd <dodf>Addfssiblf</dodf> diild of tif
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             *
             *
             *
             *
             *
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             * @rfturn tif <dodf>Addfssiblf</dodf> diild of tif objfdt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    Addfssiblf bddfssiblfCiild = bd.gftAddfssiblfCiild(i);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    bd.sftAddfssiblfPbrfnt(tiis);
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                    rfturn bddfssiblfCiild;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * dofs not ibvf b lodblf, tifn tif lodblf of its pbrfnt
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             * is rfturnfd.
             *
             *
             *
             *
             *
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             * @rfturn tiis domponfnt's lodblf; if tiis domponfnt dofs
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             *    not ibvf b lodblf, tif lodblf of its pbrfnt is rfturnfd
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             * @fxdfption IllfgblComponfntStbtfExdfption if tif
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    <dodf>Componfnt</dodf> dofs not ibvf its own lodblf
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    bnd ibs not yft bffn bddfd to b dontbinmfnt iifrbrdiy
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    sudi tibt tif lodblf dbn bf dftfrminfd from tif
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             *    dontbining pbrfnt
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             */
             */
             */
             */
             */
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             *     to bf bddfd
             */
             */
             */
             */
             */
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * listfnfr list. Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf>
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             * tibt wbs rfgistfrfd for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             * @pbrbm l  tif <dodf>PropfrtyCibngfListfnfr</dodf>
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             *    to bf rfmovfd
             */
             */
             */
             */
             */
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfAdtion</dodf> bssodibtfd witi tiis
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfAdtion</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfAdtion();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfComponfnt</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             * @rfturn tif <dodf>AddfssiblfComponfnt</dodf>, or
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfSflfdtion</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             * @rfturn tif <dodf>AddfssiblfSflfdtion</dodf>, or
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             *    <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * Gfts tif <dodf>AddfssiblfTfxt</dodf> bssodibtfd witi tiis
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfTfxt</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * Gfts tif <dodf>AddfssiblfVbluf</dodf> bssodibtfd witi
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             * tiis objfdt if onf fxists.  Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             * @rfturn tif <dodf>AddfssiblfVbluf</dodf>, or <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
            }
            }
            }
            }
            }










            // AddfssiblfComponfnt mftiods ==========
            // AddfssiblfComponfnt mftiods ==========
            // AddfssiblfComponfnt mftiods ==========
            // AddfssiblfComponfnt mftiods ==========
            // AddfssiblfComponfnt mftiods ==========





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             * Gfts tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             * Sfts tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif bbdkground
             */
             */
             */
             */
             */
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             * Gfts tif forfground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             *     otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             * Sfts tif forfground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             * @pbrbm d tif nfw <dodf>Color</dodf> for tif forfground
             */
             */
             */
             */
             */
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Gfts tif <dodf>Cursor</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             * @rfturn tif <dodf>Cursor</dodf>, if supportfd,
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             *    of tif objfdt; otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             * Sfts tif <dodf>Cursor</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             * @pbrbm d tif nfw <dodf>Cursor</dodf> for tif objfdt
             */
             */
             */
             */
             */
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             * Gfts tif <dodf>Font</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             * @rfturn tif <dodf>Font</dodf>,if supportfd,
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             *   for tif objfdt; otifrwisf, <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             * Sfts tif <dodf>Font</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             * @pbrbm f tif nfw <dodf>Font</dodf> for tif objfdt
             */
             */
             */
             */
             */
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             * Gfts tif <dodf>FontMftrids</dodf> of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @pbrbm f tif <dodf>Font</dodf>
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             * @rfturn tif <dodf>FontMftrids</dodf> objfdt, if supportfd;
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             *    otifrwisf <dodf>null</dodf>
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             * @sff #gftFont
             */
             */
             */
             */
             */
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             * Dftfrminfs if tif objfdt is fnbblfd.
             *
             *
             *
             *
             *
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             * @rfturn truf if objfdt is fnbblfd; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             * Sfts tif fnbblfd stbtf of tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             * @pbrbm b if truf, fnbblfs tiis objfdt; otifrwisf, disbblfs it
             */
             */
             */
             */
             */
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * Dftfrminfs if tiis objfdt is visiblf.  Notf: tiis mfbns tibt tif
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * objfdt intfnds to bf visiblf; iowfvfr, it mby not in fbdt bf
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * siowing on tif sdrffn bfdbusf onf of tif objfdts tibt tiis objfdt
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * is dontbinfd by is not visiblf.  To dftfrminf if bn objfdt is
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             * siowing on tif sdrffn, usf <dodf>isSiowing</dodf>.
             *
             *
             *
             *
             *
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             * @rfturn truf if objfdt is visiblf; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                    rfturn ((AddfssiblfComponfnt) bd).isVisiblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                        rfturn d.isVisiblf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             * Sfts tif visiblf stbtf of tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             * @pbrbm b if truf, siows tiis objfdt; otifrwisf, iidfs it
             */
             */
             */
             */
             */
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                    ((AddfssiblfComponfnt) bd).sftVisiblf(b);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                        d.sftVisiblf(b);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * Dftfrminfs if tif objfdt is siowing.  Tiis is dftfrminfd
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * by difdking tif visibility of tif objfdt bnd bndfstors
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * of tif objfdt.  Notf: tiis will rfturn truf fvfn if tif
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * objfdt is obsdurfd by bnotifr (for fxbmplf,
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             * it ibppfns to bf undfrnfbti b mfnu tibt wbs pullfd down).
             *
             *
             *
             *
             *
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             * @rfturn truf if tif objfdt is siowing; otifrwisf, fblsf
             */
             */
             */
             */
             */
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                    if (bd.gftAddfssiblfPbrfnt() != null) {
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                        rfturn ((AddfssiblfComponfnt) bd).isSiowing();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // Fixfs 4529616 - AddfssiblfJTbblfCfll.isSiowing()
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // rfturns fblsf wifn tif dfll on tif sdrffn
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        // if no pbrfnt
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                        rfturn isVisiblf();
                    }
                    }
                    }
                    }
                    }
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                        rfturn d.isSiowing();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * Cifdks wiftifr tif spfdififd point is witiin tiis
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * objfdt's bounds, wifrf tif point's x bnd y doordinbtfs
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * brf dffinfd to bf rflbtivf to tif doordinbtf systfm of
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             * tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             * @pbrbm p tif <dodf>Point</dodf> rflbtivf to tif
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             *    doordinbtf systfm of tif objfdt
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             * @rfturn truf if objfdt dontbins <dodf>Point</dodf>;
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             *    otifrwisf fblsf
             */
             */
             */
             */
             */
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             * Rfturns tif lodbtion of tif objfdt on tif sdrffn.
             *
             *
             *
             *
             *
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             * @rfturn lodbtion of objfdt on sdrffn -- dbn bf
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             *    <dodf>null</dodf> if tiis objfdt is not on tif sdrffn
             */
             */
             */
             */
             */
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                if (pbrfnt != null && pbrfnt.isSiowing()) {
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point pbrfntLodbtion = pbrfnt.gftLodbtionOnSdrffn();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    Point domponfntLodbtion = gftLodbtion();
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    domponfntLodbtion.trbnslbtf(pbrfntLodbtion.x, pbrfntLodbtion.y);
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                    rfturn domponfntLodbtion;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * Gfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * in tif form of b point spfdifying tif objfdt's
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             * top-lfft dornfr in tif sdrffn's doordinbtf spbdf.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             * @rfturn bn instbndf of <dodf>Point</dodf> rfprfsfnting
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    tif top-lfft dornfr of tif objfdt's bounds in tif
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    doordinbtf spbdf of tif sdrffn; <dodf>null</dodf> if
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             *    tiis objfdt or its pbrfnt brf not on tif sdrffn
             */
             */
             */
             */
             */
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                        rfturn r.gftLodbtion();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * Sfts tif lodbtion of tif objfdt rflbtivf to tif pbrfnt.
             * @pbrbm p tif nfw position for tif top-lfft dornfr
             * @pbrbm p tif nfw position for tif top-lfft dornfr
             * @pbrbm p tif nfw position for tif top-lfft dornfr
             * @pbrbm p tif nfw position for tif top-lfft dornfr
             * @pbrbm p tif nfw position for tif top-lfft dornfr
             * @sff #gftLodbtion
             * @sff #gftLodbtion
             * @sff #gftLodbtion
             * @sff #gftLodbtion
             * @sff #gftLodbtion
             */
             */
             */
             */
             */
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Gfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Gfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Gfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Gfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             *
             *
             *
             *
             *
             * @rfturn A rfdtbnglf indidbting tiis domponfnt's bounds; null if
             * @rfturn A rfdtbnglf indidbting tiis domponfnt's bounds; null if
             * @rfturn A rfdtbnglf indidbting tiis domponfnt's bounds; null if
             * @rfturn A rfdtbnglf indidbting tiis domponfnt's bounds; null if
             * @rfturn A rfdtbnglf indidbting tiis domponfnt's bounds; null if
             * tiis objfdt is not on tif sdrffn.
             * tiis objfdt is not on tif sdrffn.
             * tiis objfdt is not on tif sdrffn.
             * tiis objfdt is not on tif sdrffn.
             * tiis objfdt is not on tif sdrffn.
             * @sff #dontbins
             * @sff #dontbins
             * @sff #dontbins
             * @sff #dontbins
             * @sff #dontbins
             */
             */
             */
             */
             */
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    rfturn pbrfnt.gftHfbdfrRfdt(dolumn);
                    rfturn pbrfnt.gftHfbdfrRfdt(dolumn);
                    rfturn pbrfnt.gftHfbdfrRfdt(dolumn);
                    rfturn pbrfnt.gftHfbdfrRfdt(dolumn);
                    rfturn pbrfnt.gftHfbdfrRfdt(dolumn);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Sfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Sfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Sfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Sfts tif bounds of tiis objfdt in tif form of b Rfdtbnglf objfdt.
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * Tif bounds spfdify tiis objfdt's widti, ifigit, bnd lodbtion
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             * rflbtivf to its pbrfnt.
             *
             *
             *
             *
             *
             * @pbrbm r rfdtbnglf indidbting tiis domponfnt's bounds
             * @pbrbm r rfdtbnglf indidbting tiis domponfnt's bounds
             * @pbrbm r rfdtbnglf indidbting tiis domponfnt's bounds
             * @pbrbm r rfdtbnglf indidbting tiis domponfnt's bounds
             * @pbrbm r rfdtbnglf indidbting tiis domponfnt's bounds
             * @sff #gftBounds
             * @sff #gftBounds
             * @sff #gftBounds
             * @sff #gftBounds
             * @sff #gftBounds
             */
             */
             */
             */
             */
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif sizf of tiis objfdt in tif form of b Dimfnsion objfdt.
             * Rfturns tif sizf of tiis objfdt in tif form of b Dimfnsion objfdt.
             * Rfturns tif sizf of tiis objfdt in tif form of b Dimfnsion objfdt.
             * Rfturns tif sizf of tiis objfdt in tif form of b Dimfnsion objfdt.
             * Rfturns tif sizf of tiis objfdt in tif form of b Dimfnsion objfdt.
             * Tif ifigit fifld of tif Dimfnsion objfdt dontbins tiis objfdt's
             * Tif ifigit fifld of tif Dimfnsion objfdt dontbins tiis objfdt's
             * Tif ifigit fifld of tif Dimfnsion objfdt dontbins tiis objfdt's
             * Tif ifigit fifld of tif Dimfnsion objfdt dontbins tiis objfdt's
             * Tif ifigit fifld of tif Dimfnsion objfdt dontbins tiis objfdt's
             * ifigit, bnd tif widti fifld of tif Dimfnsion objfdt dontbins tiis
             * ifigit, bnd tif widti fifld of tif Dimfnsion objfdt dontbins tiis
             * ifigit, bnd tif widti fifld of tif Dimfnsion objfdt dontbins tiis
             * ifigit, bnd tif widti fifld of tif Dimfnsion objfdt dontbins tiis
             * ifigit, bnd tif widti fifld of tif Dimfnsion objfdt dontbins tiis
             * objfdt's widti.
             * objfdt's widti.
             * objfdt's widti.
             * objfdt's widti.
             * objfdt's widti.
             *
             *
             *
             *
             *
             * @rfturn A Dimfnsion objfdt tibt indidbtfs tif sizf of tiis domponfnt;
             * @rfturn A Dimfnsion objfdt tibt indidbtfs tif sizf of tiis domponfnt;
             * @rfturn A Dimfnsion objfdt tibt indidbtfs tif sizf of tiis domponfnt;
             * @rfturn A Dimfnsion objfdt tibt indidbtfs tif sizf of tiis domponfnt;
             * @rfturn A Dimfnsion objfdt tibt indidbtfs tif sizf of tiis domponfnt;
             * null if tiis objfdt is not on tif sdrffn
             * null if tiis objfdt is not on tif sdrffn
             * null if tiis objfdt is not on tif sdrffn
             * null if tiis objfdt is not on tif sdrffn
             * null if tiis objfdt is not on tif sdrffn
             * @sff #sftSizf
             * @sff #sftSizf
             * @sff #sftSizf
             * @sff #sftSizf
             * @sff #sftSizf
             */
             */
             */
             */
             */
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    Rfdtbnglf r = pbrfnt.gftHfbdfrRfdt(dolumn);
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                    if (r != null) {
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                        rfturn r.gftSizf();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfsizfs tiis objfdt so tibt it ibs widti bnd ifigit.
             * Rfsizfs tiis objfdt so tibt it ibs widti bnd ifigit.
             * Rfsizfs tiis objfdt so tibt it ibs widti bnd ifigit.
             * Rfsizfs tiis objfdt so tibt it ibs widti bnd ifigit.
             * Rfsizfs tiis objfdt so tibt it ibs widti bnd ifigit.
             *
             *
             *
             *
             *
             * @pbrbm d Tif dimfnsion spfdifying tif nfw sizf of tif objfdt.
             * @pbrbm d Tif dimfnsion spfdifying tif nfw sizf of tif objfdt.
             * @pbrbm d Tif dimfnsion spfdifying tif nfw sizf of tif objfdt.
             * @pbrbm d Tif dimfnsion spfdifying tif nfw sizf of tif objfdt.
             * @pbrbm d Tif dimfnsion spfdifying tif nfw sizf of tif objfdt.
             * @sff #gftSizf
             * @sff #gftSizf
             * @sff #gftSizf
             * @sff #gftSizf
             * @sff #gftSizf
             */
             */
             */
             */
             */
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif Addfssiblf diild, if onf fxists, dontbinfd bt tif lodbl
             * Rfturns tif Addfssiblf diild, if onf fxists, dontbinfd bt tif lodbl
             * Rfturns tif Addfssiblf diild, if onf fxists, dontbinfd bt tif lodbl
             * Rfturns tif Addfssiblf diild, if onf fxists, dontbinfd bt tif lodbl
             * Rfturns tif Addfssiblf diild, if onf fxists, dontbinfd bt tif lodbl
             * doordinbtf Point.
             * doordinbtf Point.
             * doordinbtf Point.
             * doordinbtf Point.
             * doordinbtf Point.
             *
             *
             *
             *
             *
             * @pbrbm p Tif point rflbtivf to tif doordinbtf systfm of tiis objfdt.
             * @pbrbm p Tif point rflbtivf to tif doordinbtf systfm of tiis objfdt.
             * @pbrbm p Tif point rflbtivf to tif doordinbtf systfm of tiis objfdt.
             * @pbrbm p Tif point rflbtivf to tif doordinbtf systfm of tiis objfdt.
             * @pbrbm p Tif point rflbtivf to tif doordinbtf systfm of tiis objfdt.
             * @rfturn tif Addfssiblf, if it fxists, bt tif spfdififd lodbtion;
             * @rfturn tif Addfssiblf, if it fxists, bt tif spfdififd lodbtion;
             * @rfturn tif Addfssiblf, if it fxists, bt tif spfdififd lodbtion;
             * @rfturn tif Addfssiblf, if it fxists, bt tif spfdififd lodbtion;
             * @rfturn tif Addfssiblf, if it fxists, bt tif spfdififd lodbtion;
             * otifrwisf null
             * otifrwisf null
             * otifrwisf null
             * otifrwisf null
             * otifrwisf null
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns wiftifr tiis objfdt dbn bddfpt fodus or not.   Objfdts tibt
             * Rfturns wiftifr tiis objfdt dbn bddfpt fodus or not.   Objfdts tibt
             * Rfturns wiftifr tiis objfdt dbn bddfpt fodus or not.   Objfdts tibt
             * Rfturns wiftifr tiis objfdt dbn bddfpt fodus or not.   Objfdts tibt
             * Rfturns wiftifr tiis objfdt dbn bddfpt fodus or not.   Objfdts tibt
             * dbn bddfpt fodus will blso ibvf tif AddfssiblfStbtf.FOCUSABLE stbtf
             * dbn bddfpt fodus will blso ibvf tif AddfssiblfStbtf.FOCUSABLE stbtf
             * dbn bddfpt fodus will blso ibvf tif AddfssiblfStbtf.FOCUSABLE stbtf
             * dbn bddfpt fodus will blso ibvf tif AddfssiblfStbtf.FOCUSABLE stbtf
             * dbn bddfpt fodus will blso ibvf tif AddfssiblfStbtf.FOCUSABLE stbtf
             * sft in tifir AddfssiblfStbtfSfts.
             * sft in tifir AddfssiblfStbtfSfts.
             * sft in tifir AddfssiblfStbtfSfts.
             * sft in tifir AddfssiblfStbtfSfts.
             * sft in tifir AddfssiblfStbtfSfts.
             *
             *
             *
             *
             *
             * @rfturn truf if objfdt dbn bddfpt fodus; otifrwisf fblsf
             * @rfturn truf if objfdt dbn bddfpt fodus; otifrwisf fblsf
             * @rfturn truf if objfdt dbn bddfpt fodus; otifrwisf fblsf
             * @rfturn truf if objfdt dbn bddfpt fodus; otifrwisf fblsf
             * @rfturn truf if objfdt dbn bddfpt fodus; otifrwisf fblsf
             * @sff AddfssiblfContfxt#gftAddfssiblfStbtfSft
             * @sff AddfssiblfContfxt#gftAddfssiblfStbtfSft
             * @sff AddfssiblfContfxt#gftAddfssiblfStbtfSft
             * @sff AddfssiblfContfxt#gftAddfssiblfStbtfSft
             * @sff AddfssiblfContfxt#gftAddfssiblfStbtfSft
             * @sff AddfssiblfStbtf#FOCUSABLE
             * @sff AddfssiblfStbtf#FOCUSABLE
             * @sff AddfssiblfStbtf#FOCUSABLE
             * @sff AddfssiblfStbtf#FOCUSABLE
             * @sff AddfssiblfStbtf#FOCUSABLE
             * @sff AddfssiblfStbtf#FOCUSED
             * @sff AddfssiblfStbtf#FOCUSED
             * @sff AddfssiblfStbtf#FOCUSED
             * @sff AddfssiblfStbtf#FOCUSED
             * @sff AddfssiblfStbtf#FOCUSED
             * @sff AddfssiblfStbtfSft
             * @sff AddfssiblfStbtfSft
             * @sff AddfssiblfStbtfSft
             * @sff AddfssiblfStbtfSft
             * @sff AddfssiblfStbtfSft
             */
             */
             */
             */
             */
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfqufsts fodus for tiis objfdt.  If tiis objfdt dbnnot bddfpt fodus,
             * Rfqufsts fodus for tiis objfdt.  If tiis objfdt dbnnot bddfpt fodus,
             * Rfqufsts fodus for tiis objfdt.  If tiis objfdt dbnnot bddfpt fodus,
             * Rfqufsts fodus for tiis objfdt.  If tiis objfdt dbnnot bddfpt fodus,
             * Rfqufsts fodus for tiis objfdt.  If tiis objfdt dbnnot bddfpt fodus,
             * notiing will ibppfn.  Otifrwisf, tif objfdt will bttfmpt to tbkf
             * notiing will ibppfn.  Otifrwisf, tif objfdt will bttfmpt to tbkf
             * notiing will ibppfn.  Otifrwisf, tif objfdt will bttfmpt to tbkf
             * notiing will ibppfn.  Otifrwisf, tif objfdt will bttfmpt to tbkf
             * notiing will ibppfn.  Otifrwisf, tif objfdt will bttfmpt to tbkf
             * fodus.
             * fodus.
             * fodus.
             * fodus.
             * fodus.
             * @sff #isFodusTrbvfrsbblf
             * @sff #isFodusTrbvfrsbblf
             * @sff #isFodusTrbvfrsbblf
             * @sff #isFodusTrbvfrsbblf
             * @sff #isFodusTrbvfrsbblf
             */
             */
             */
             */
             */
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Adds tif spfdififd fodus listfnfr to rfdfivf fodus fvfnts from tiis
             * Adds tif spfdififd fodus listfnfr to rfdfivf fodus fvfnts from tiis
             * Adds tif spfdififd fodus listfnfr to rfdfivf fodus fvfnts from tiis
             * Adds tif spfdififd fodus listfnfr to rfdfivf fodus fvfnts from tiis
             * Adds tif spfdififd fodus listfnfr to rfdfivf fodus fvfnts from tiis
             * domponfnt.
             * domponfnt.
             * domponfnt.
             * domponfnt.
             * domponfnt.
             *
             *
             *
             *
             *
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @sff #rfmovfFodusListfnfr
             * @sff #rfmovfFodusListfnfr
             * @sff #rfmovfFodusListfnfr
             * @sff #rfmovfFodusListfnfr
             * @sff #rfmovfFodusListfnfr
             */
             */
             */
             */
             */
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfmovfs tif spfdififd fodus listfnfr so it no longfr rfdfivfs fodus
             * Rfmovfs tif spfdififd fodus listfnfr so it no longfr rfdfivfs fodus
             * Rfmovfs tif spfdififd fodus listfnfr so it no longfr rfdfivfs fodus
             * Rfmovfs tif spfdififd fodus listfnfr so it no longfr rfdfivfs fodus
             * Rfmovfs tif spfdififd fodus listfnfr so it no longfr rfdfivfs fodus
             * fvfnts from tiis domponfnt.
             * fvfnts from tiis domponfnt.
             * fvfnts from tiis domponfnt.
             * fvfnts from tiis domponfnt.
             * fvfnts from tiis domponfnt.
             *
             *
             *
             *
             *
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @pbrbm l tif fodus listfnfr
             * @sff #bddFodusListfnfr
             * @sff #bddFodusListfnfr
             * @sff #bddFodusListfnfr
             * @sff #bddFodusListfnfr
             * @sff #bddFodusListfnfr
             */
             */
             */
             */
             */
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





        } // innfr dlbss AddfssiblfJTbblfHfbdfrCfll
        } // innfr dlbss AddfssiblfJTbblfHfbdfrCfll
        } // innfr dlbss AddfssiblfJTbblfHfbdfrCfll
        } // innfr dlbss AddfssiblfJTbblfHfbdfrCfll
        } // innfr dlbss AddfssiblfJTbblfHfbdfrCfll





    }  // innfr dlbss AddfssiblfJTbblf
    }  // innfr dlbss AddfssiblfJTbblf
    }  // innfr dlbss AddfssiblfJTbblf
    }  // innfr dlbss AddfssiblfJTbblf
    }  // innfr dlbss AddfssiblfJTbblf





}  // End of Clbss JTbblf
}  // End of Clbss JTbblf
}  // End of Clbss JTbblf
}  // End of Clbss JTbblf
}  // End of Clbss JTbblf
