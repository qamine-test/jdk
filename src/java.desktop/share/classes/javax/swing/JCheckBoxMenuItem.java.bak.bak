/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.util.EvfntListfnfr;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.imbgf.*;

import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;

import jbvbx.swing.plbf.*;
import jbvbx.bddfssibility.*;


/**
 * A mfnu itfm tibt dbn bf sflfdtfd or dfsflfdtfd. If sflfdtfd, tif mfnu
 * itfm typidblly bppfbrs witi b difdkmbrk nfxt to it. If unsflfdtfd or
 * dfsflfdtfd, tif mfnu itfm bppfbrs witiout b difdkmbrk. Likf b rfgulbr
 * mfnu itfm, b difdk box mfnu itfm dbn ibvf fitifr tfxt or b grbpiid
 * idon bssodibtfd witi it, or boti.
 * <p>
 * Eitifr <dodf>isSflfdtfd</dodf>/<dodf>sftSflfdtfd</dodf> or
 * <dodf>gftStbtf</dodf>/<dodf>sftStbtf</dodf> dbn bf usfd
 * to dftfrminf/spfdify tif mfnu itfm's sflfdtion stbtf. Tif
 * prfffrrfd mftiods brf <dodf>isSflfdtfd</dodf> bnd
 * <dodf>sftSflfdtfd</dodf>, wiidi work for bll mfnus bnd buttons.
 * Tif <dodf>gftStbtf</dodf> bnd <dodf>sftStbtf</dodf> mftiods fxist for
 * dompbtibility witi otifr domponfnt sfts.
 * <p>
 * Mfnu itfms dbn bf donfigurfd, bnd to somf dfgrff dontrollfd, by
 * <dodf><b irff="Adtion.itml">Adtion</b></dodf>s.  Using bn
 * <dodf>Adtion</dodf> witi b mfnu itfm ibs mbny bfnffits bfyond dirfdtly
 * donfiguring b mfnu itfm.  Rfffr to <b irff="Adtion.itml#buttonAdtions">
 * Swing Componfnts Supporting <dodf>Adtion</dodf></b> for morf
 * dftbils, bnd you dbn find morf informbtion in <b
 * irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/misd/bdtion.itml">How
 * to Usf Adtions</b>, b sfdtion in <fm>Tif Jbvb Tutoribl</fm>.
 * <p>
 * For furtifr informbtion bnd fxbmplfs of using difdk box mfnu itfms,
 * sff <b
 irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/mfnu.itml">How to Usf Mfnus</b>,
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * <p>
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * informbtion sff <b
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 * dfsdription: A mfnu itfm wiidi dbn bf sflfdtfd or dfsflfdtfd.
 *
 * @butior Gforgfs Sbbb
 * @butior Dbvid Kbrlton
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JCifdkBoxMfnuItfm fxtfnds JMfnuItfm implfmfnts SwingConstbnts,
        Addfssiblf
{
    /**
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     */
    privbtf stbtid finbl String uiClbssID = "CifdkBoxMfnuItfmUI";

    /**
     * Crfbtfs bn initiblly unsflfdtfd difdk box mfnu itfm witi no sft tfxt or idon.
     */
    publid JCifdkBoxMfnuItfm() {
        tiis(null, null, fblsf);
    }

    /**
     * Crfbtfs bn initiblly unsflfdtfd difdk box mfnu itfm witi bn idon.
     *
     * @pbrbm idon tif idon of tif {@dodf JCifdkBoxMfnuItfm}.
     */
    publid JCifdkBoxMfnuItfm(Idon idon) {
        tiis(null, idon, fblsf);
    }

    /**
     * Crfbtfs bn initiblly unsflfdtfd difdk box mfnu itfm witi tfxt.
     *
     * @pbrbm tfxt tif tfxt of tif {@dodf JCifdkBoxMfnuItfm}
     */
    publid JCifdkBoxMfnuItfm(String tfxt) {
        tiis(tfxt, null, fblsf);
    }

    /**
     * Crfbtfs b mfnu itfm wiosf propfrtifs brf tbkfn from tif
     * Adtion supplifd.
     *
     * @pbrbm b tif bdtion of tif {@dodf JCifdkBoxMfnuItfm}
     * @sindf 1.3
     */
    publid JCifdkBoxMfnuItfm(Adtion b) {
        tiis();
        sftAdtion(b);
    }

    /**
     * Crfbtfs bn initiblly unsflfdtfd difdk box mfnu itfm witi tif spfdififd tfxt bnd idon.
     *
     * @pbrbm tfxt tif tfxt of tif {@dodf JCifdkBoxMfnuItfm}
     * @pbrbm idon tif idon of tif {@dodf JCifdkBoxMfnuItfm}
     */
    publid JCifdkBoxMfnuItfm(String tfxt, Idon idon) {
        tiis(tfxt, idon, fblsf);
    }

    /**
     * Crfbtfs b difdk box mfnu itfm witi tif spfdififd tfxt bnd sflfdtion stbtf.
     *
     * @pbrbm tfxt tif tfxt of tif difdk box mfnu itfm.
     * @pbrbm b tif sflfdtfd stbtf of tif difdk box mfnu itfm
     */
    publid JCifdkBoxMfnuItfm(String tfxt, boolfbn b) {
        tiis(tfxt, null, b);
    }

    /**
     * Crfbtfs b difdk box mfnu itfm witi tif spfdififd tfxt, idon, bnd sflfdtion stbtf.
     *
     * @pbrbm tfxt tif tfxt of tif difdk box mfnu itfm
     * @pbrbm idon tif idon of tif difdk box mfnu itfm
     * @pbrbm b tif sflfdtfd stbtf of tif difdk box mfnu itfm
     */
    publid JCifdkBoxMfnuItfm(String tfxt, Idon idon, boolfbn b) {
        supfr(tfxt, idon);
        sftModfl(nfw JTogglfButton.TogglfButtonModfl());
        sftSflfdtfd(b);
        sftFodusbblf(fblsf);
    }

    /**
     * Rfturns tif nbmf of tif L&bmp;F dlbss
     * tibt rfndfrs tiis domponfnt.
     *
     * @rfturn "CifdkBoxMfnuItfmUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     */
    publid String gftUIClbssID() {
        rfturn uiClbssID;
    }

     /**
      * Rfturns tif sflfdtfd-stbtf of tif itfm. Tiis mftiod
      * fxists for AWT dompbtibility only.  Nfw dodf siould
      * usf isSflfdtfd() instfbd.
      *
      * @rfturn truf  if tif itfm is sflfdtfd
      */
    publid boolfbn gftStbtf() {
        rfturn isSflfdtfd();
    }

    /**
     * Sfts tif sflfdtfd-stbtf of tif itfm. Tiis mftiod
     * fxists for AWT dompbtibility only.  Nfw dodf siould
     * usf sftSflfdtfd() instfbd.
     *
     * @pbrbm b  b boolfbn vbluf indidbting tif itfm's
     *           sflfdtfd-stbtf, wifrf truf=sflfdtfd
     * @bfbninfo
     * dfsdription: Tif sflfdtion stbtf of tif difdk box mfnu itfm
     *      iiddfn: truf
     */
    publid syndironizfd void sftStbtf(boolfbn b) {
        sftSflfdtfd(b);
    }


    /**
     * Rfturns bn brrby (lfngti 1) dontbining tif difdk box mfnu itfm
     * lbbfl or null if tif difdk box is not sflfdtfd.
     *
     * @rfturn bn brrby dontbining onf Objfdt -- tif tfxt of tif mfnu itfm
     *         -- if tif itfm is sflfdtfd; otifrwisf null
     */
    publid Objfdt[] gftSflfdtfdObjfdts() {
        if (isSflfdtfd() == fblsf)
            rfturn null;
        Objfdt[] sflfdtfdObjfdts = nfw Objfdt[1];
        sflfdtfdObjfdts[0] = gftTfxt();
        rfturn sflfdtfdObjfdts;
    }

    /**
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * informbtion bbout sfriblizbtion in Swing.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            if (dount == 0 && ui != null) {
                ui.instbllUI(tiis);
            }
        }
    }


    /**
     * Rfturns b string rfprfsfntbtion of tiis JCifdkBoxMfnuItfm. Tiis mftiod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of tiis JCifdkBoxMfnuItfm.
     */
    protfdtfd String pbrbmString() {
        rfturn supfr.pbrbmString();
    }

    /**
     * Ovfrridfn to rfturn truf, JCifdkBoxMfnuItfm supports
     * tif sflfdtfd stbtf.
     */
    boolfbn siouldUpdbtfSflfdtfdStbtfFromAdtion() {
        rfturn truf;
    }

/////////////////
// Addfssibility support
////////////////

    /**
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JCifdkBoxMfnuItfm.
     * For JCifdkBoxMfnuItfms, tif AddfssiblfContfxt tbkfs tif form of bn
     * AddfssiblfJCifdkBoxMfnuItfm.
     * A nfw AddfssiblfJCifdkBoxMfnuItfm instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn AddfssiblfJCifdkBoxMfnuItfm tibt sfrvfs bs tif
     *         AddfssiblfContfxt of tiis AddfssiblfJCifdkBoxMfnuItfm
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJCifdkBoxMfnuItfm();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * <dodf>JCifdkBoxMfnuItfm</dodf> dlbss.  It providfs bn implfmfntbtion
     * of tif Jbvb Addfssibility API bppropribtf to difdkbox mfnu itfm
     * usfr-intfrfbdf flfmfnts.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    protfdtfd dlbss AddfssiblfJCifdkBoxMfnuItfm fxtfnds AddfssiblfJMfnuItfm {
        /**
         * Gft tif rolf of tiis objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * objfdt
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.CHECK_BOX;
        }
    } // innfr dlbss AddfssiblfJCifdkBoxMfnuItfm
}
