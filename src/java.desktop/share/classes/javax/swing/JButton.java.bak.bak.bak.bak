/*
 * Copyright (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bfbns.ConstrudtorPropfrtifs;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.imbgf.*;

import jbvbx.swing.plbf.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.bddfssibility.*;

import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;


/**
 * An implfmfntbtion of b "push" button.
  * <p>
 * Buttons dbn bf donfigurfd, bnd to somf dfgrff dontrollfd, by
 * <dodf><b hrff="Adtion.html">Adtion</b></dodf>s.  Using bn
 * <dodf>Adtion</dodf> with b button hbs mbny bfnffits bfyond dirfdtly
 * donfiguring b button.  Rfffr to <b hrff="Adtion.html#buttonAdtions">
 * Swing Componfnts Supporting <dodf>Adtion</dodf></b> for morf
 * dftbils, bnd you dbn find morf informbtion in <b
 * hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/misd/bdtion.html">How
 * to Usf Adtions</b>, b sfdtion in <fm>Thf Jbvb Tutoribl</fm>.
 * <p>
 * Sff <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/button.html">How to Usf Buttons, Chfdk Boxfs, bnd Rbdio Buttons</b>
 * in <fm>Thf Jbvb Tutoribl</fm>
 * for informbtion bnd fxbmplfs of using buttons.
 * <p>
 * <strong>Wbrning:</strong> Swing is not thrfbd sbff. For morf
 * informbtion sff <b
 * hrff="pbdkbgf-summbry.html#thrfbding">Swing's Thrfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 * dfsdription: An implfmfntbtion of b \"push\" button.
 *
 * @buthor Jfff Dinkins
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl")
publid dlbss JButton fxtfnds AbstrbdtButton implfmfnts Addfssiblf {

    /**
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     */
    privbtf stbtid finbl String uiClbssID = "ButtonUI";

    /**
     * Crfbtfs b button with no sft tfxt or idon.
     */
    publid JButton() {
        this(null, null);
    }

    /**
     * Crfbtfs b button with bn idon.
     *
     * @pbrbm idon  thf Idon imbgf to displby on thf button
     */
    publid JButton(Idon idon) {
        this(null, idon);
    }

    /**
     * Crfbtfs b button with tfxt.
     *
     * @pbrbm tfxt  thf tfxt of thf button
     */
    @ConstrudtorPropfrtifs({"tfxt"})
    publid JButton(String tfxt) {
        this(tfxt, null);
    }

    /**
     * Crfbtfs b button whfrf propfrtifs brf tbkfn from thf
     * <dodf>Adtion</dodf> supplifd.
     *
     * @pbrbm b thf <dodf>Adtion</dodf> usfd to spfdify thf nfw button
     *
     * @sindf 1.3
     */
    publid JButton(Adtion b) {
        this();
        sftAdtion(b);
    }

    /**
     * Crfbtfs b button with initibl tfxt bnd bn idon.
     *
     * @pbrbm tfxt  thf tfxt of thf button
     * @pbrbm idon  thf Idon imbgf to displby on thf button
     */
    publid JButton(String tfxt, Idon idon) {
        // Crfbtf thf modfl
        sftModfl(nfw DffbultButtonModfl());

        // initiblizf
        init(tfxt, idon);
    }

    /**
     * Rfsfts thf UI propfrty to b vbluf from thf durrfnt look bnd
     * fffl.
     *
     * @sff JComponfnt#updbtfUI
     */
    publid void updbtfUI() {
        sftUI((ButtonUI)UIMbnbgfr.gftUI(this));
    }


    /**
     * Rfturns b string thbt spfdififs thf nbmf of thf L&bmp;F dlbss
     * thbt rfndfrs this domponfnt.
     *
     * @rfturn thf string "ButtonUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     * @bfbninfo
     *        fxpfrt: truf
     *   dfsdription: A string thbt spfdififs thf nbmf of thf L&bmp;F dlbss.
     */
    publid String gftUIClbssID() {
        rfturn uiClbssID;
    }


    /**
     * Gfts thf vbluf of thf <dodf>dffbultButton</dodf> propfrty,
     * whidh if <dodf>truf</dodf> mfbns thbt this button is thf durrfnt
     * dffbult button for its <dodf>JRootPbnf</dodf>.
     * Most look bnd fffls rfndfr thf dffbult button
     * difffrfntly, bnd mby potfntiblly providf bindings
     * to bddfss thf dffbult button.
     *
     * @rfturn thf vbluf of thf <dodf>dffbultButton</dodf> propfrty
     * @sff JRootPbnf#sftDffbultButton
     * @sff #isDffbultCbpbblf
     * @bfbninfo
     *  dfsdription: Whfthfr or not this button is thf dffbult button
     */
    publid boolfbn isDffbultButton() {
        JRootPbnf root = SwingUtilitifs.gftRootPbnf(this);
        if (root != null) {
            rfturn root.gftDffbultButton() == this;
        }
        rfturn fblsf;
    }

    /**
     * Gfts thf vbluf of thf <dodf>dffbultCbpbblf</dodf> propfrty.
     *
     * @rfturn thf vbluf of thf <dodf>dffbultCbpbblf</dodf> propfrty
     * @sff #sftDffbultCbpbblf
     * @sff #isDffbultButton
     * @sff JRootPbnf#sftDffbultButton
     */
    publid boolfbn isDffbultCbpbblf() {
        rfturn dffbultCbpbblf;
    }

    /**
     * Sfts thf <dodf>dffbultCbpbblf</dodf> propfrty,
     * whidh dftfrminfs whfthfr this button dbn bf
     * mbdf thf dffbult button for its root pbnf.
     * Thf dffbult vbluf of thf <dodf>dffbultCbpbblf</dodf>
     * propfrty is <dodf>truf</dodf> unlfss othfrwisf
     * spfdififd by thf look bnd fffl.
     *
     * @pbrbm dffbultCbpbblf <dodf>truf</dodf> if this button will bf
     *        dbpbblf of bfing thf dffbult button on thf
     *        <dodf>RootPbnf</dodf>; othfrwisf <dodf>fblsf</dodf>
     * @sff #isDffbultCbpbblf
     * @bfbninfo
     *        bound: truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: Whfthfr or not this button dbn bf thf dffbult button
     */
    publid void sftDffbultCbpbblf(boolfbn dffbultCbpbblf) {
        boolfbn oldDffbultCbpbblf = this.dffbultCbpbblf;
        this.dffbultCbpbblf = dffbultCbpbblf;
        firfPropfrtyChbngf("dffbultCbpbblf", oldDffbultCbpbblf, dffbultCbpbblf);
    }

    /**
     * Ovfrridfs <dodf>JComponfnt.rfmovfNotify</dodf> to dhfdk if
     * this button is durrfntly sft bs thf dffbult button on thf
     * <dodf>RootPbnf</dodf>, bnd if so, sfts thf <dodf>RootPbnf</dodf>'s
     * dffbult button to <dodf>null</dodf> to fnsurf thf
     * <dodf>RootPbnf</dodf> dofsn't hold onto bn invblid button rfffrfndf.
     */
    publid void rfmovfNotify() {
        JRootPbnf root = SwingUtilitifs.gftRootPbnf(this);
        if (root != null && root.gftDffbultButton() == this) {
            root.sftDffbultButton(null);
        }
        supfr.rfmovfNotify();
    }

    /**
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * informbtion bbout sfriblizbtion in Swing.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) throws IOExdfption {
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(this);
            JComponfnt.sftWritfObjCountfr(this, --dount);
            if (dount == 0 && ui != null) {
                ui.instbllUI(this);
            }
        }
    }


    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>JButton</dodf>.
     * This mfthod is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of this <dodf>JButton</dodf>
     */
    protfdtfd String pbrbmString() {
        String dffbultCbpbblfString = (dffbultCbpbblf ? "truf" : "fblsf");

        rfturn supfr.pbrbmString() +
            ",dffbultCbpbblf=" + dffbultCbpbblfString;
    }


/////////////////
// Addfssibility support
////////////////

    /**
     * Gfts thf <dodf>AddfssiblfContfxt</dodf> bssodibtfd with this
     * <dodf>JButton</dodf>. For <dodf>JButton</dodf>s,
     * thf <dodf>AddfssiblfContfxt</dodf> tbkfs thf form of bn
     * <dodf>AddfssiblfJButton</dodf>.
     * A nfw <dodf>AddfssiblfJButton</dodf> instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn <dodf>AddfssiblfJButton</dodf> thbt sfrvfs bs thf
     *         <dodf>AddfssiblfContfxt</dodf> of this <dodf>JButton</dodf>
     * @bfbninfo
     *       fxpfrt: truf
     *  dfsdription: Thf AddfssiblfContfxt bssodibtfd with this Button.
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJButton();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>JButton</dodf> dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to button usfr-intfrfbdf
     * flfmfnts.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    @SupprfssWbrnings("sfribl")
    protfdtfd dlbss AddfssiblfJButton fxtfnds AddfssiblfAbstrbdtButton {

        /**
         * Gft thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf
         * objfdt
         * @sff AddfssiblfRolf
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.PUSH_BUTTON;
        }
    } // innfr dlbss AddfssiblfJButton
}
