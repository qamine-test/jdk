/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.fvfnt;

import jbvb.util.EvfntListfnfr;

/**
 * Dffinfs thf intfrfbdf for bn objfdt thbt listfns
 * to dhbngfs in b TrffModfl.
 * For furthfr informbtion bnd fxbmplfs sff
 * <b
 hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/fvfnts/trffmodfllistfnfr.html">How to Writf b Trff Modfl Listfnfr</b>,
 * b sfdtion in <fm>Thf Jbvb Tutoribl.</fm>
 *
 * @buthor Rob Dbvis
 * @buthor Rby Rybn
 */
publid intfrfbdf TrffModflListfnfr fxtfnds EvfntListfnfr {

    /**
     * <p>Invokfd bftfr b nodf (or b sft of siblings) hbs dhbngfd in somf
     * wby. Thf nodf(s) hbvf not dhbngfd lodbtions in thf trff or
     * bltfrfd thfir dhildrfn brrbys, but othfr bttributfs hbvf
     * dhbngfd bnd mby bfffdt prfsfntbtion. Exbmplf: thf nbmf of b
     * filf hbs dhbngfd, but it is in thf sbmf lodbtion in thf filf
     * systfm.
     *
     * <p>To indidbtf thf root hbs dhbngfd, dhildIndidfs bnd dhildrfn
     * will bf null.
     *
     * <p>Usf {@dodf f.gftPbth()} to gft thf pbrfnt of thf dhbngfd nodf(s).
     * {@dodf f.gftChildIndidfs()} rfturns thf indfx(fs) of thf dhbngfd nodf(s).
     *
     * @pbrbm f b {@dodf TrffModflEvfnt} dfsdribing dhbngfs to b trff modfl
     */
    void trffNodfsChbngfd(TrffModflEvfnt f);

    /**
     * <p>Invokfd bftfr nodfs hbvf bffn insfrtfd into thf trff.</p>
     *
     * <p>Usf {@dodf f.gftPbth()} to gft thf pbrfnt of thf nfw nodf(s).
     * {@dodf f.gftChildIndidfs()} rfturns thf indfx(fs) of thf nfw nodf(s)
     * in bsdfnding ordfr.
     *
     * @pbrbm f b {@dodf TrffModflEvfnt} dfsdribing dhbngfs to b trff modfl
     */
    void trffNodfsInsfrtfd(TrffModflEvfnt f);

    /**
     * <p>Invokfd bftfr nodfs hbvf bffn rfmovfd from thf trff.  Notf thbt
     * if b subtrff is rfmovfd from thf trff, this mfthod mby only bf
     * invokfd ondf for thf root of thf rfmovfd subtrff, not ondf for
     * fbdh individubl sft of siblings rfmovfd.</p>
     *
     * <p>Usf {@dodf f.gftPbth()} to gft thf formfr pbrfnt of thf dflftfd
     * nodf(s). {@dodf f.gftChildIndidfs()} rfturns, in bsdfnding ordfr, thf
     * indfx(fs) thf nodf(s) hbd bfforf bfing dflftfd.
     *
     * @pbrbm f b {@dodf TrffModflEvfnt} dfsdribing dhbngfs to b trff modfl
     */
    void trffNodfsRfmovfd(TrffModflEvfnt f);

    /**
     * <p>Invokfd bftfr thf trff hbs drbstidblly dhbngfd strudturf from b
     * givfn nodf down.  If thf pbth rfturnfd by f.gftPbth() is of lfngth
     * onf bnd thf first flfmfnt dofs not idfntify thf durrfnt root nodf
     * thf first flfmfnt should bfdomf thf nfw root of thf trff.
     *
     * <p>Usf {@dodf f.gftPbth()} to gft thf pbth to thf nodf.
     * {@dodf f.gftChildIndidfs()} rfturns null.
     *
     * @pbrbm f b {@dodf TrffModflEvfnt} dfsdribing dhbngfs to b trff modfl
     */
    void trffStrudturfChbngfd(TrffModflEvfnt f);

}
