/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.fvfnt;

import jbvb.util.EvfntObjfdt;
import jbvbx.swing.tbblf.*;

/**
 * <B>TbblfColumnModflEvfnt</B> is usfd to notify listfnfrs thbt b tbblf
 * dolumn modfl hbs dhbngfd, sudh bs b dolumn wbs bddfd, rfmovfd, or
 * movfd.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @buthor Albn Chung
 * @sff TbblfColumnModflListfnfr
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss TbblfColumnModflEvfnt fxtfnds jbvb.util.EvfntObjfdt
{
//
//  Instbndf Vbribblfs
//

    /** Thf indfx of thf dolumn from whfrf it wbs movfd or rfmovfd */
    protfdtfd int       fromIndfx;

    /** Thf indfx of thf dolumn to whfrf it wbs movfd or bddfd */
    protfdtfd int       toIndfx;

//
// Construdtors
//

    /**
     * Construdts b {@dodf TbblfColumnModflEvfnt} objfdt.
     *
     * @pbrbm sourdf  thf {@dodf TbblfColumnModfl} thbt originbtfd thf fvfnt
     * @pbrbm from    bn int spfdifying thf indfx from whfrf thf dolumn wbs
     *                movfd or rfmovfd
     * @pbrbm to      bn int spfdifying thf indfx to whfrf thf dolumn wbs
     *                movfd or bddfd
     * @sff #gftFromIndfx
     * @sff #gftToIndfx
     */
    publid TbblfColumnModflEvfnt(TbblfColumnModfl sourdf, int from, int to) {
        supfr(sourdf);
        fromIndfx = from;
        toIndfx = to;
    }

//
// Qufrying Mfthods
//

    /**
     * Rfturns thf fromIndfx.  Vblid for rfmovfd or movfd fvfnts
     *
     * @rfturn int vbluf for indfx from whidh thf dolumn wbs movfd or rfmovfd
     */
    publid int gftFromIndfx() { rfturn fromIndfx; };

    /**
     * Rfturns thf toIndfx.  Vblid for bdd bnd movfd fvfnts
     *
     * @rfturn int vbluf of dolumn's nfw indfx
     */
    publid int gftToIndfx() { rfturn toIndfx; };
}
