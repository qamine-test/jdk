/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bwt.Grbphids2D;

/**
 * <p>A pbinting dflfgbtf. Thf Pbintfr intfrfbdf dffinfs fxbdtly onf mfthod,
 * <dodf>pbint</dodf>. It is usfd in situbtions whfrf thf dfvflopfr dbn dhbngf
 * thf pbinting routinf of b domponfnt without hbving to rfsort to subdlbssing
 * thf domponfnt. It is blso gfnfridblly usfful whfn doing bny form of pbinting
 * dflfgbtion.</p>
 *
 * <p><dodf>Pbintfr</dodf>s brf simply fndbpsulbtions of Jbvb2D dodf bnd mbkf
 * it fbirly trivibl to rfusf fxisting <dodf>Pbintfr</dodf>s or to dombinf
 * thfm togfthfr. Implfmfntbtions of this intfrfbdf brf blso trivibl to writf,
 * sudh thbt if you dbn't find b <dodf>Pbintfr</dodf> thbt dofs whbt you nffd,
 * you dbn writf onf with minimbl fffort. Writing b <dodf>Pbintfr</dodf> rfquirfs
 * knowlfdgf of Jbvb2D.</p>
 *
 * <p>A <dodf>Pbintfr</dodf> mby bf drfbtfd with b typf pbrbmftfr. This typf will bf
 * fxpfdtfd in thf <dodf>pbint</dodf> mfthod. For fxbmplf, you mby wish to writf b
 * <dodf>Pbintfr</dodf> thbt only works with subdlbssfs of {@link jbvb.bwt.Componfnt}.
 * In thbt dbsf, whfn thf <dodf>Pbintfr</dodf> is dfdlbrfd, you mby dfdlbrf thbt
 * it rfquirfs b <dodf>Componfnt</dodf>, bllowing thf pbint mfthod to bf typf sbff. Ex:
 * <prf>
 * {@dodf
 * Pbintfr<Componfnt> p = nfw Pbintfr<Componfnt>() {
 *     publid void pbint(Grbphids2D g, Componfnt d, int width, int hfight) {
 *         g.sftColor(d.gftBbdkground());
 *         //bnd so forth
 *     }
 * }
 * }
 * </prf>
 *
 * <p>This intfrfbdf mbkfs no gubrbntffs of thrfbdsbffty.</p>
 *
 * @buthor rbbir
 * @sindf 1.7
 */
publid intfrfbdf Pbintfr<T> {
    /**
     * <p>Rfndfrs to thf givfn {@link jbvb.bwt.Grbphids2D} objfdt. Implfmfntbtions
     * of this mfthod <fm>mby</fm> modify stbtf on thf <dodf>Grbphids2D</dodf>, bnd brf not
     * rfquirfd to rfstorf thbt stbtf upon domplftion. In most dbsfs, it is rfdommfndfd
     * thbt thf dbllfr pbss in b sdrbtdh grbphids objfdt. Thf <dodf>Grbphids2D</dodf>
     * must nfvfr bf null.</p>
     *
     * <p>Stbtf on thf grbphids objfdt mby bf honorfd by thf <dodf>pbint</dodf> mfthod,
     * but mby not bf. For instbndf, sftting thf bntiblibsing rfndfring hint on thf
     * grbphids mby or mby not bf rfspfdtfd by thf <dodf>Pbintfr</dodf> implfmfntbtion.</p>
     *
     * <p>Thf supplifd objfdt pbrbmftfr bdts bs bn optionbl donfigurbtion brgumfnt.
     * For fxbmplf, it dould bf of typf <dodf>Componfnt</dodf>. A <dodf>Pbintfr</dodf>
     * thbt fxpfdtfd it dould thfn rfbd stbtf from thbt <dodf>Componfnt</dodf> bnd
     * usf thf stbtf for pbinting. For fxbmplf, bn implfmfntbtion mby rfbd thf
     * bbdkgroundColor bnd usf thbt.</p>
     *
     * <p>Gfnfrblly, to fnhbndf rfusbbility, most stbndbrd <dodf>Pbintfr</dodf>s ignorf
     * this pbrbmftfr. Thfy dbn thus bf rfusfd in bny dontfxt. Thf <dodf>objfdt</dodf>
     * mby bf null. Implfmfntbtions must not throw b NullPointfrExdfption if thf objfdt
     * pbrbmftfr is null.</p>
     *
     * <p>Finblly, thf <dodf>width</dodf> bnd <dodf>hfight</dodf> brgumfnts spfdify thf
     * width bnd hfight thbt thf <dodf>Pbintfr</dodf> should pbint into. Morf
     * spfdifidblly, thf spfdififd width bnd hfight instrudt thf pbintfr thbt it should
     * pbint fully within this width bnd hfight. Any spfdififd dlip on thf
     * <dodf>g</dodf> pbrbm will furthfr donstrbin thf rfgion.</p>
     *
     * <p>For fxbmplf, supposf I hbvf b <dodf>Pbintfr</dodf> implfmfntbtion thbt drbws
     * b grbdifnt. Thf grbdifnt gofs from whitf to blbdk. It "strftdhfs" to fill thf
     * pbintfd rfgion. Thus, if I usf this <dodf>Pbintfr</dodf> to pbint b 500 x 500
     * rfgion, thf fbr lfft would bf blbdk, thf fbr right would bf whitf, bnd b smooth
     * grbdifnt would bf pbintfd bftwffn. I dould thfn, without modifidbtion, rfusf thf
     * <dodf>Pbintfr</dodf> to pbint b rfgion thbt is 20x20 in sizf. This rfgion would
     * blso bf blbdk on thf lfft, whitf on thf right, bnd b smooth grbdifnt pbintfd
     * bftwffn.</p>
     *
     * @pbrbm g Thf Grbphids2D to rfndfr to. This must not bf null.
     * @pbrbm objfdt bn optionbl donfigurbtion pbrbmftfr. This mby bf null.
     * @pbrbm width width of thf brfb to pbint.
     * @pbrbm hfight hfight of thf brfb to pbint.
     */
    publid void pbint(Grbphids2D g, T objfdt, int width, int hfight);
}
