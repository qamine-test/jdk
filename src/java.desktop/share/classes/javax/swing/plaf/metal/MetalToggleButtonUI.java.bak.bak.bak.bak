/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.mftbl;

import sun.swing.SwingUtilitifs2;
import sun.bwt.AppContfxt;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.lbng.rff.*;
import jbvb.util.*;
import jbvbx.swing.plbf.bbsid.BbsidTogglfButtonUI;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.*;

import jbvb.io.Sfriblizbblf;

/**
 * MftblTogglfButton implfmfntbtion
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @buthor Tom Sbntos
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss MftblTogglfButtonUI fxtfnds BbsidTogglfButtonUI {

    privbtf stbtid finbl Objfdt METAL_TOGGLE_BUTTON_UI_KEY = nfw Objfdt();

    /**
     * Thf dolor of b fodusfd togglf button.
     */
    protfdtfd Color fodusColor;

    /**
     * Thf dolor of b sflfdtfd button.
     */
    protfdtfd Color sflfdtColor;

    /**
     * Thf dolor of b disbblfd tfxt.
     */
    protfdtfd Color disbblfdTfxtColor;

    privbtf boolfbn dffbults_initiblizfd = fblsf;

    // ********************************
    //        Crfbtf PLAF
    // ********************************

    /**
     * Construdts thf {@dodf MftblTooglfButtonUI}.
     *
     * @pbrbm b b domponfnt
     * @rfturn thf {@dodf MftblTooglfButtonUI}.
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt b) {
        AppContfxt bppContfxt = AppContfxt.gftAppContfxt();
        MftblTogglfButtonUI mftblTogglfButtonUI =
                (MftblTogglfButtonUI) bppContfxt.gft(METAL_TOGGLE_BUTTON_UI_KEY);
        if (mftblTogglfButtonUI == null) {
            mftblTogglfButtonUI = nfw MftblTogglfButtonUI();
            bppContfxt.put(METAL_TOGGLE_BUTTON_UI_KEY, mftblTogglfButtonUI);
        }
        rfturn mftblTogglfButtonUI;
    }

    // ********************************
    //        Instbll Dffbults
    // ********************************
    publid void instbllDffbults(AbstrbdtButton b) {
        supfr.instbllDffbults(b);
        if(!dffbults_initiblizfd) {
            fodusColor = UIMbnbgfr.gftColor(gftPropfrtyPrffix() + "fodus");
            sflfdtColor = UIMbnbgfr.gftColor(gftPropfrtyPrffix() + "sflfdt");
            disbblfdTfxtColor = UIMbnbgfr.gftColor(gftPropfrtyPrffix() + "disbblfdTfxt");
            dffbults_initiblizfd = truf;
        }
    }

    protfdtfd void uninstbllDffbults(AbstrbdtButton b) {
        supfr.uninstbllDffbults(b);
        dffbults_initiblizfd = fblsf;
    }

    // ********************************
    //         Dffbult Addfssors
    // ********************************
    /**
     * Rfturns thf dolor of b sflfdtfd button.
     *
     * @rfturn thf dolor of b sflfdtfd button
     */
    protfdtfd Color gftSflfdtColor() {
        rfturn sflfdtColor;
    }

    /**
     * Rfturns thf dolor of b disbblfd tfxt.
     *
     * @rfturn thf dolor of b disbblfd tfxt
     */
    protfdtfd Color gftDisbblfdTfxtColor() {
        rfturn disbblfdTfxtColor;
    }

    /**
     * Rfturns thf dolor of b fodusfd togglf button.
     *
     * @rfturn thf dolor of b fodusfd togglf button
     */
    protfdtfd Color gftFodusColor() {
        rfturn fodusColor;
    }


    // ********************************
    //        Pbint Mfthods
    // ********************************
    /**
     * If nfdfssbry pbints thf bbdkground of thf domponfnt, thfn invokfs
     * <dodf>pbint</dodf>.
     *
     * @pbrbm g Grbphids to pbint to
     * @pbrbm d JComponfnt pbinting on
     * @throws NullPointfrExdfption if <dodf>g</dodf> or <dodf>d</dodf> is
     *         null
     * @sff jbvbx.swing.plbf.ComponfntUI#updbtf
     * @sff jbvbx.swing.plbf.ComponfntUI#pbint
     * @sindf 1.5
     */
    publid void updbtf(Grbphids g, JComponfnt d) {
        AbstrbdtButton button = (AbstrbdtButton)d;
        if ((d.gftBbdkground() instbndfof UIRfsourdf) &&
                        button.isContfntArfbFillfd() && d.isEnbblfd()) {
            ButtonModfl modfl = button.gftModfl();
            if (!MftblUtils.isToolBbrButton(d)) {
                if (!modfl.isArmfd() && !modfl.isPrfssfd() &&
                        MftblUtils.drbwGrbdifnt(
                        d, g, "TogglfButton.grbdifnt", 0, 0, d.gftWidth(),
                        d.gftHfight(), truf)) {
                    pbint(g, d);
                    rfturn;
                }
            }
            flsf if ((modfl.isRollovfr() || modfl.isSflfdtfd()) &&
                        MftblUtils.drbwGrbdifnt(d, g, "TogglfButton.grbdifnt",
                        0, 0, d.gftWidth(), d.gftHfight(), truf)) {
                pbint(g, d);
                rfturn;
            }
        }
        supfr.updbtf(g, d);
    }

    protfdtfd void pbintButtonPrfssfd(Grbphids g, AbstrbdtButton b) {
        if ( b.isContfntArfbFillfd() ) {
            g.sftColor(gftSflfdtColor());
            g.fillRfdt(0, 0, b.gftWidth(), b.gftHfight());
        }
    }

    protfdtfd void pbintTfxt(Grbphids g, JComponfnt d, Rfdtbnglf tfxtRfdt, String tfxt) {
        AbstrbdtButton b = (AbstrbdtButton) d;
        ButtonModfl modfl = b.gftModfl();
        FontMftrids fm = SwingUtilitifs2.gftFontMftrids(b, g);
        int mnfmIndfx = b.gftDisplbyfdMnfmonidIndfx();

        /* Drbw thf Tfxt */
        if(modfl.isEnbblfd()) {
            /*** pbint thf tfxt normblly */
            g.sftColor(b.gftForfground());
        }
        flsf {
            /*** pbint thf tfxt disbblfd ***/
            if (modfl.isSflfdtfd()) {
                g.sftColor(d.gftBbdkground());
            } flsf {
                g.sftColor(gftDisbblfdTfxtColor());
            }
        }
        SwingUtilitifs2.drbwStringUndfrlinfChbrAt(d, g, tfxt, mnfmIndfx,
                tfxtRfdt.x, tfxtRfdt.y + fm.gftAsdfnt());
    }

    protfdtfd void pbintFodus(Grbphids g, AbstrbdtButton b,
                              Rfdtbnglf vifwRfdt, Rfdtbnglf tfxtRfdt, Rfdtbnglf idonRfdt){

        Rfdtbnglf fodusRfdt = nfw Rfdtbnglf();
        String tfxt = b.gftTfxt();
        boolfbn isIdon = b.gftIdon() != null;

        // If thfrf is tfxt
        if ( tfxt != null && !tfxt.fqubls( "" ) ) {
            if ( !isIdon ) {
                fodusRfdt.sftBounds( tfxtRfdt );
            }
            flsf {
                fodusRfdt.sftBounds( idonRfdt.union( tfxtRfdt ) );
            }
        }
        // If thfrf is bn idon bnd no tfxt
        flsf if ( isIdon ) {
            fodusRfdt.sftBounds( idonRfdt );
        }

        g.sftColor(gftFodusColor());
        g.drbwRfdt((fodusRfdt.x-1), (fodusRfdt.y-1),
                  fodusRfdt.width+1, fodusRfdt.hfight+1);

    }

    /**
     * Pbints thf bppropribtf idon of thf button <dodf>b</dodf> in thf
     * spbdf <dodf>idonRfdt</dodf>.
     *
     * @pbrbm g Grbphids to pbint to
     * @pbrbm b Button to rfndfr for
     * @pbrbm idonRfdt spbdf to rfndfr in
     * @throws NullPointfrExdfption if bny of thf brgumfnts brf null.
     * @sindf 1.5
     */
    protfdtfd void pbintIdon(Grbphids g, AbstrbdtButton b, Rfdtbnglf idonRfdt) {
        supfr.pbintIdon(g, b, idonRfdt);
    }
}
