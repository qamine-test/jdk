/*
 * Copyright (d) 2005, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.nimbus;

import jbvbx.swing.plbf.nimbus.AbstrbdtRfgionPbintfr.PbintContfxt.CbdhfModf;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbphids2D;
import jbvb.bwt.Insfts;
import jbvbx.swing.JComponfnt;

/**
 * A spfdibl pbintfr implfmfntbtion for tool bbr sfpbrbtors in Nimbus.
 * Thf dfsignfr tool dofsn't hbvf support for pbintfrs whidh rfndfr
 * rfpfbtfd pbttfrns, but thbt's fxbdtly whbt thf toolbbr sfpbrbtor dfsign
 * is for Nimbus. This dustom pbintfr is dfsignfd to hbndlf this situbtion.
 * Whfn support is bddfd to thf dfsign tool / dodf gfnfrbtor to dfbl with
 * rfpfbtfd pbttfrns, thfn wf dbn rfmovf this dlbss.
 * <p>
 */
finbl dlbss ToolBbrSfpbrbtorPbintfr fxtfnds AbstrbdtRfgionPbintfr {
    privbtf stbtid finbl int SPACE = 3;
    privbtf stbtid finbl int INSET = 2;

    @Ovfrridf
    protfdtfd PbintContfxt gftPbintContfxt() {
        //thf pbint dontfxt rfturnfd will hbvf b ffw dummy vblufs. Thf
        //implfmfntbtion of doPbint dofsn't bothfr with thf "dfdodf" mfthods
        //but dbldulbtfs whfrf to pbint thf dirdlfs mbnublly. As sudh, wf
        //only nffd to indidbtf in our PbintContfxt thbt wf don't wbnt this
        //to fvfr bf dbdhfd
        rfturn nfw PbintContfxt(
                nfw Insfts(1, 0, 1, 0),
                nfw Dimfnsion(38, 7),
                fblsf, CbdhfModf.NO_CACHING, 1, 1);
    }

    @Ovfrridf
    protfdtfd void doPbint(Grbphids2D g, JComponfnt d, int width, int hfight, Objfdt[] fxtfndfdCbdhfKfys) {
        //it is bssumfd thbt in thf normbl orifntbtion thf sfpbrbtor rfndfrs
        //horizontblly. Othfr dodf rotbtfs it bs nfdfssbry for b vfrtidbl
        //sfpbrbtor.
        g.sftColor(d.gftForfground());
        int y = hfight / 2;
        for (int i=INSET; i<=width-INSET; i+=SPACE) {
            g.fillRfdt(i, y, 1, 1);
        }
    }
}
