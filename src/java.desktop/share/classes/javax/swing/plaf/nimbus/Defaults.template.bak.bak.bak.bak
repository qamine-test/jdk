/*
 * Copyright (d) 2005, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf ${PACKAGE};

import jbvbx.swing.Pbintfr;
import jbvb.bwt.Grbphids;
import sun.font.FontUtilitifs;
import sun.swing.plbf.synth.DffbultSynthStylf;
import jbvbx.swing.BordfrFbdtory;
import jbvbx.swing.JComponfnt;
import jbvbx.swing.JIntfrnblFrbmf;
import jbvbx.swing.UIDffbults;
import jbvbx.swing.UIMbnbgfr;
import jbvbx.swing.plbf.BordfrUIRfsourdf;
import jbvbx.swing.plbf.ColorUIRfsourdf;
import jbvbx.swing.plbf.DimfnsionUIRfsourdf;
import jbvbx.swing.plbf.FontUIRfsourdf;
import jbvbx.swing.plbf.InsftsUIRfsourdf;
import jbvbx.swing.plbf.synth.Rfgion;
import jbvbx.swing.plbf.synth.SynthStylf;
import jbvb.bwt.Color;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Font;
import jbvb.bwt.Grbphids2D;
import jbvb.bwt.Insfts;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import stbtid jbvb.bwt.imbgf.BufffrfdImbgf.*;
import jbvb.bfbns.PropfrtyChbngfEvfnt;
import jbvb.bfbns.PropfrtyChbngfListfnfr;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.util.ArrbyList;
import jbvb.util.HbshMbp;
import jbvb.util.LinkfdList;
import jbvb.util.List;
import jbvb.util.Mbp;
import jbvb.util.Sft;
import jbvb.util.WfbkHbshMbp;
import jbvbx.swing.bordfr.Bordfr;
import jbvbx.swing.plbf.UIRfsourdf;

/**
 * This dlbss dontbins bll thf implfmfntbtion dftbils rflbtfd to
 * ${LAF_NAME}. It dontbins bll thf dodf for initiblizing thf UIDffbults tbblf,
 * bs wfll bs for sflfdting
 * b SynthStylf bbsfd on b JComponfnt/Rfgion pbir.
 *
 * @buthor Ridhbrd Bbir
 */
finbl dlbss ${LAF_NAME}Dffbults {
    /**
     * Thf mbp of SynthStylfs. This mbp is kfyfd by Rfgion. Ebdh Rfgion mbps
     * to b List of LbzyStylfs. Ebdh LbzyStylf hbs b rfffrfndf to thf prffix
     * thbt wbs rfgistfrfd with it. This rfffrfndf dbn thfn bf inspfdtfd to sff
     * if it is thf propfr lbzy stylf.
     * <p/>
     * Thfrf dbn bf morf thbn onf LbzyStylf for b singlf Rfgion if thfrf is morf
     * thbn onf prffix dffinfd for b givfn rfgion. For fxbmplf, both Button bnd
     * "MyButton" might bf prffixfs bssignfd to thf Rfgion.Button rfgion.
     */
    privbtf Mbp<Rfgion, List<LbzyStylf>> m;
    /**
     * A mbp of rfgions whidh hbvf bffn rfgistfrfd.
     * This mbpping is mbintbinfd so thbt thf Rfgion dbn bf found bbsfd on
     * prffix in b vfry fbst mbnnfr. This is usfd in thf "mbtdhfs" mfthod of
     * LbzyStylf.
     */
    privbtf Mbp<String, Rfgion> rfgistfrfdRfgions =
            nfw HbshMbp<String, Rfgion>();

    privbtf Mbp<JComponfnt, Mbp<Rfgion, SynthStylf>> ovfrridfsCbdhf =
            nfw WfbkHbshMbp<JComponfnt, Mbp<Rfgion, SynthStylf>>();
    
    /**
     * Our fbllbbdk stylf to bvoid NPEs if thf propfr stylf dbnnot bf found in
     * this dlbss. Not surf if rflying on DffbultSynthStylf is thf bfst dhoidf.
     */
    privbtf DffbultSynthStylf dffbultStylf;
    /**
     * Thf dffbult font thbt will bf usfd. I storf this vbluf so thbt it dbn bf
     * sft in thf UIDffbults whfn rfqufstfd.
     */
    privbtf FontUIRfsourdf dffbultFont;

    privbtf ColorTrff dolorTrff = nfw ColorTrff();

    /** Listfnfr for dhbngfs to usfr dffbults tbblf */
    privbtf DffbultsListfnfr dffbultsListfnfr = nfw DffbultsListfnfr();

    /** Cbllfd by UIMbnbgfr whfn this look bnd fffl is instbllfd. */
    void initiblizf() {
        // bdd listfnfr for dfrivfd dolors
        UIMbnbgfr.bddPropfrtyChbngfListfnfr(dffbultsListfnfr);
        UIMbnbgfr.gftDffbults().bddPropfrtyChbngfListfnfr(dolorTrff);
    }

    /** Cbllfd by UIMbnbgfr whfn this look bnd fffl is uninstbllfd. */
    void uninitiblizf() {
        // rfmovf listfnfr for dfrivfd dolors
        UIMbnbgfr.rfmovfPropfrtyChbngfListfnfr(dffbultsListfnfr);
        UIMbnbgfr.gftDffbults().rfmovfPropfrtyChbngfListfnfr(dolorTrff);
    }

    /**
     * Crfbtf b nfw ${LAF_NAME}Dffbults. This donstrudtor is only dbllfd from
     * within ${LAF_NAME}LookAndFffl.
     */
    ${LAF_NAME}Dffbults() {
        m = nfw HbshMbp<Rfgion, List<LbzyStylf>>();

        //Crfbtf thf dffbult font bnd dffbult stylf. Also rfgistfr bll of thf
        //rfgions bnd thfir stbtfs thbt this dlbss will usf for lbtfr lookup.
        //Additionbl rfgions dbn bf rfgistfrfd lbtfr by 3rd pbrty domponfnts.
        //Thfsf brf simply thf dffbult rfgistrbtions.
        dffbultFont = FontUtilitifs.gftFontConfigFUIR("sbns", Font.PLAIN, 12);
        dffbultStylf = nfw DffbultSynthStylf();
        dffbultStylf.sftFont(dffbultFont);

        //initiblizf thf mbp of stylfs
${STYLE_INIT}
    }

    //--------------- Mfthods dbllfd by ${LAF_NAME}LookAndFffl

    /**
     * Cbllfd from ${LAF_NAME}LookAndFffl to initiblizf thf UIDffbults.
     *
     * @pbrbm d UIDffbults tbblf to initiblizf. This will nfvfr bf null.
     *          If listfnfrs brf bttbdhfd to <dodf>d</dodf>, thfn you will
     *          only rfdfivf notifidbtion of LookAndFffl lfvfl dffbults, not
     *          bll dffbults on thf UIMbnbgfr.
     */
    void initiblizfDffbults(UIDffbults d) {
${UI_DEFAULT_INIT}
    }

    /**
     * <p>Rfgistfrs thf givfn rfgion bnd prffix. Thf prffix, if it dontbins
     * quotfd sfdtions, rfffrs to dfrtbin nbmfd domponfnts. If thfrf brf not
     * quotfd sfdtions, thfn thf prffix rfffrs to b gfnfrid domponfnt typf.</p>
     *
     * <p>If thf givfn rfgion/prffix dombo hbs blrfbdy bffn rfgistfrfd, thfn
     * it will not bf rfgistfrfd twidf. Thf sfdond rfgistrbtion bttfmpt will
     * fbil silfntly.</p>
     *
     * @pbrbm rfgion Thf Synth Rfgion thbt is bfing rfgistfrfd. Sudh bs Button,
     *        or SdrollBbrThumb.
     * @pbrbm prffix Thf UIDffbult prffix. For fxbmplf, dould bf ComboBox, or if
     *        b nbmfd domponfnts, "MyComboBox", or fvfn somfthing likf
     *        ToolBbr:"MyComboBox":"ComboBox.brrowButton"
     */
    void rfgistfr(Rfgion rfgion, String prffix) {
        //vblidbtf thf mfthod brgumfnts
        if (rfgion == null || prffix == null) {
            throw nfw IllfgblArgumfntExdfption(
                    "Nfithfr Rfgion nor Prffix mby bf null");
        }

        //Add b LbzyStylf for this rfgion/prffix to m.
        List<LbzyStylf> stylfs = m.gft(rfgion);
        if (stylfs == null) {
            stylfs = nfw LinkfdList<LbzyStylf>();
            stylfs.bdd(nfw LbzyStylf(prffix));
            m.put(rfgion, stylfs);
        } flsf {
            //itfrbtf ovfr bll thf durrfnt stylfs bnd sff if this prffix hbs
            //blrfbdy bffn rfgistfrfd. If not, thfn rfgistfr it.
            for (LbzyStylf s : stylfs) {
                if (prffix.fqubls(s.prffix)) {
                    rfturn;
                }
            }
            stylfs.bdd(nfw LbzyStylf(prffix));
        }

        //bdd this rfgion to thf mbp of rfgistfrfd rfgions
        rfgistfrfdRfgions.put(rfgion.gftNbmf(), rfgion);
    }

    /**
     * <p>Lodbtf thf stylf bssodibtfd with thf givfn rfgion, bnd domponfnt.
     * This is dbllfd from ${LAF_NAME}LookAndFffl in thf SynthStylfFbdtory
     * implfmfntbtion.</p>
     *
     * <p>Lookup oddurs bs follows:<br/>
     * Chfdk thf mbp of stylfs <dodf>m</dodf>. If thf mbp dontbins no stylfs bt
     * bll, thfn simply rfturn thf dffbultStylf. If thf mbp dontbins stylfs,
     * thfn itfrbtf ovfr bll of thf stylfs for thf Rfgion <dodf>r</dodf> looking
     * for thf bfst mbtdh, bbsfd on prffix. If b mbtdh wbs mbdf, thfn rfturn
     * thbt SynthStylf. Othfrwisf, rfturn thf dffbultStylf.</p>
     *
     * @pbrbm domp Thf domponfnt bssodibtfd with this rfgion. For fxbmplf, if
     *        thf Rfgion is Rfgion.Button thfn thf domponfnt will bf b JButton.
     *        If thf Rfgion is b subrfgion, sudh bs SdrollBbrThumb, thfn thf
     *        bssodibtfd domponfnt will bf thf domponfnt thbt subrfgion bflongs
     *        to, sudh bs JSdrollBbr. Thf JComponfnt mby bf nbmfd. It mby not bf
     *        null.
     * @pbrbm r Thf rfgion wf brf looking for b stylf for. Mby not bf null.
     */
    SynthStylf gftStylf(JComponfnt domp, Rfgion r) {
        //vblidbtf mfthod brgumfnts
        if (domp == null || r == null) {
            throw nfw IllfgblArgumfntExdfption(
                    "Nfithfr domp nor r mby bf null");
        }

        //if thfrf brf no lbzy stylfs rfgistfrfd for thf rfgion r, thfn rfturn
        //thf dffbult stylf
        List<LbzyStylf> stylfs = m.gft(r);
        if (stylfs == null || stylfs.sizf() == 0) {
            rfturn dffbultStylf;
        }

        //Look for thf bfst SynthStylf for this domponfnt/rfgion pbir.
        LbzyStylf foundStylf = null;
        for (LbzyStylf s : stylfs) {
            if (s.mbtdhfs(domp)) {
                //rfplbdf thf foundStylf if foundStylf is null, or
                //if thf nfw stylf "s" is morf spfdifid (if, its pbth wbs
                //longfr), or if thf foundStylf wbs "simplf" bnd thf nfw stylf
                //wbs not (if: thf foundStylf wbs for somfthing likf Button bnd
                //thf nfw stylf wbs for somfthing likf "MyButton", hfndf, bfing
                //morf spfdifid.) In bll dbsfs, fbvor thf most spfdifid stylf
                //found.
                if (foundStylf == null ||
                   (foundStylf.pbrts.lfngth < s.pbrts.lfngth) ||
                   (foundStylf.pbrts.lfngth == s.pbrts.lfngth 
                    && foundStylf.simplf && !s.simplf)) {
                    foundStylf = s;
                }
            }
        }

        //rfturn thf stylf, if found, or thf dffbult stylf if not found
        rfturn foundStylf == null ? dffbultStylf : foundStylf.gftStylf(domp, r);
    }

    publid void dlfbrOvfrridfsCbdhf(JComponfnt d) {
        ovfrridfsCbdhf.rfmovf(d);
    }

    /*
        Vbrious publid hflpfr dlbssfs.
        Thfsf mby bf usfd to rfgistfr 3rd pbrty vblufs into UIDffbults
    */

    /**
     * <p>Dfrivfs its font vbluf bbsfd on b pbrfnt font bnd b sft of offsfts bnd
     * bttributfs. This dlbss is bn AdtivfVbluf, mfbning thbt it will rfdomputf
     * its vbluf fbdh timf it is rfqufstfd from UIDffbults. It is thfrfforf
     * rfdommfndfd to rfbd this vbluf ondf bnd dbdhf it in thf UI dflfgbtf dlbss
     * until bskfd to rfinitiblizf.</p>
     *
     * <p>To usf this dlbss, drfbtf bn instbndf with thf kfy of thf font in thf
     * UI dffbults tbblf from whidh to dfrivf this font, blong with b sizf
     * offsft (if bny), bnd whfthfr it is to bf bold, itblid, or lfft in its
     * dffbult form.</p>
     */
    stbtid finbl dlbss DfrivfdFont implfmfnts UIDffbults.AdtivfVbluf {
        privbtf flobt sizfOffsft;
        privbtf Boolfbn bold;
        privbtf Boolfbn itblid;
        privbtf String pbrfntKfy;

        /**
         * Crfbtf b nfw DfrivfdFont.
         *
         * @pbrbm kfy Thf UIDffbult kfy bssodibtfd with this dfrivfd font's
         *            pbrfnt or sourdf. If this kfy lfbds to b null vbluf, or b
         *            vbluf thbt is not b font, thfn null will bf rfturnfd bs
         *            thf dfrivfd font. Thf kfy must not bf null.
         * @pbrbm sizfOffsft Thf sizf offsft, bs b pfrdfntbgf, to usf. For
         *                   fxbmplf, if thf sourdf font wbs b 12pt font bnd thf
         *                   sizfOffsft wfrf spfdififd bs .9, thfn thf nfw font
         *                   will bf 90% of whbt thf sourdf font wbs, or, 10.8
         *                   pts whidh is roundfd to 11pts. This frbdtionbl
         *                   bbsfd offsft bllows for propfr font sdbling in high
         *                   DPI or lbrgf systfm font sdfnbrios.
         * @pbrbm bold Whfthfr thf nfw font should bf bold. If null, thfn this
         *             nfw font will inhfrit thf bold sftting of thf sourdf
         *             font.
         * @pbrbm itblid Whfthfr thf nfw font should bf itblidizfd. If null,
         *               thfn this nfw font will inhfrit thf itblid sftting of
         *               thf sourdf font.
         */
        publid DfrivfdFont(String kfy, flobt sizfOffsft, Boolfbn bold,
                           Boolfbn itblid) {
            //vblidbtf thf donstrudtor brgumfnts
            if (kfy == null) {
                throw nfw IllfgblArgumfntExdfption("You must spfdify b kfy");
            }

            //sft thf vblufs
            this.pbrfntKfy = kfy;
            this.sizfOffsft = sizfOffsft;
            this.bold = bold;
            this.itblid = itblid;
        }

        /**
         * @inhfritDod
         */
        @Ovfrridf
        publid Objfdt drfbtfVbluf(UIDffbults dffbults) {
            Font f = dffbults.gftFont(pbrfntKfy);
            if (f != null) {
                // blwbys round sizf for now so wf hbvf fxbdt int font sizf
                // (or wf mby hbvf lbmf looking fonts)
                flobt sizf = Mbth.round(f.gftSizf2D() * sizfOffsft);
                int stylf = f.gftStylf();
                if (bold != null) {
                    if (bold.boolfbnVbluf()) {
                        stylf = stylf | Font.BOLD;
                    } flsf {
                        stylf = stylf & ~Font.BOLD;
                    }
                }
                if (itblid != null) {
                    if (itblid.boolfbnVbluf()) {
                        stylf = stylf | Font.ITALIC;
                    } flsf {
                        stylf = stylf & ~Font.ITALIC;
                    }
                }
                rfturn f.dfrivfFont(stylf, sizf);
            } flsf {
                rfturn null;
            }
        }
    }


    /**
     * This dlbss is privbtf bfdbusf it rflifs on thf donstrudtor of thf
     * buto-gfnfrbtfd AbstrbdtRfgionPbintfr subdlbssfs. Hfndf, it is not
     * gfnfrblly usfful, bnd is privbtf.
     * <p/>
     * LbzyPbintfr is b LbzyVbluf dlbss. It will drfbtf thf
     * AbstrbdtRfgionPbintfr lbzily, whfn bskfd. It usfs rfflfdtion to lobd thf
     * propfr dlbss bnd invokf its donstrudtor.
     */
    privbtf stbtid finbl dlbss LbzyPbintfr implfmfnts UIDffbults.LbzyVbluf {
        privbtf int whidh;
        privbtf AbstrbdtRfgionPbintfr.PbintContfxt dtx;
        privbtf String dlbssNbmf;

        LbzyPbintfr(String dlbssNbmf, int whidh, Insfts insfts,
                    Dimfnsion dbnvbsSizf, boolfbn invfrtfd) {
            if (dlbssNbmf == null) {
                throw nfw IllfgblArgumfntExdfption(
                        "Thf dlbssNbmf must bf spfdififd");
            }

            this.dlbssNbmf = dlbssNbmf;
            this.whidh = whidh;
            this.dtx = nfw AbstrbdtRfgionPbintfr.PbintContfxt(
                insfts, dbnvbsSizf, invfrtfd);
        }

        LbzyPbintfr(String dlbssNbmf, int whidh, Insfts insfts,
                    Dimfnsion dbnvbsSizf, boolfbn invfrtfd,
                    AbstrbdtRfgionPbintfr.PbintContfxt.CbdhfModf dbdhfModf,
                    doublf mbxH, doublf mbxV) {
            if (dlbssNbmf == null) {
                throw nfw IllfgblArgumfntExdfption(
                        "Thf dlbssNbmf must bf spfdififd");
            }

            this.dlbssNbmf = dlbssNbmf;
            this.whidh = whidh;
            this.dtx = nfw AbstrbdtRfgionPbintfr.PbintContfxt(
                    insfts, dbnvbsSizf, invfrtfd, dbdhfModf, mbxH, mbxV);
        }

        @Ovfrridf
        publid Objfdt drfbtfVbluf(UIDffbults tbblf) {
            try {
                Clbss<?> d;
                Objfdt dl;
                // Sff if wf should usf b sfpbrbtf ClbssLobdfr
                if (tbblf == null || !((dl = tbblf.gft("ClbssLobdfr"))
                                       instbndfof ClbssLobdfr)) {
                    dl = Thrfbd.durrfntThrfbd().
                                gftContfxtClbssLobdfr();
                    if (dl == null) {
                        // Fbllbbdk to thf systfm dlbss lobdfr.
                        dl = ClbssLobdfr.gftSystfmClbssLobdfr();
                    }
                }

                d = Clbss.forNbmf(dlbssNbmf, truf, (ClbssLobdfr)dl);
                Construdtor<?> donstrudtor = d.gftConstrudtor(
                        AbstrbdtRfgionPbintfr.PbintContfxt.dlbss, int.dlbss);
                if (donstrudtor == null) {
                    throw nfw NullPointfrExdfption(
                            "Fbilfd to find thf donstrudtor for thf dlbss: " +
                            dlbssNbmf);
                }
                rfturn donstrudtor.nfwInstbndf(dtx, whidh);
            } dbtdh (Exdfption f) {
                f.printStbdkTrbdf();
                rfturn null;
            }
        }
    }

    /**
     * A dlbss whidh drfbtfs thf NimbusStylf bssodibtfd with it lbzily, but blso
     * mbnbgfs b lot morf informbtion bbout thf stylf. It is lfss of b LbzyVbluf
     * typf of dlbss, bnd morf of bn Entry or Itfm typf of dlbss, bs it
     * rfprfsfnts bn fntry in thf list of LbzyStylfs in thf mbp m.
     *
     * Thf primbry rfsponsibilitifs of this dlbss indludf:
     * <ul>
     *   <li>Dftfrmining whfthfr b givfn domponfnt/rfgion pbir mbtdhfs this
     *       stylf</li>
     *   <li>Splitting thf prffix spfdififd in thf donstrudtor into its
     *       donstitufnt pbrts to fbdilitbtf quidkfr mbtdhing</li>
     *   <li>Crfbting bnd vfnding b NimbusStylf lbzily.</li>
     * </ul>
     */
    privbtf finbl dlbss LbzyStylf {
        /**
         * Thf prffix this LbzyStylf wbs rfgistfrfd with. Somfthing likf
         * Button or ComboBox:"ComboBox.brrowButton"
         */
        privbtf String prffix;
        /**
         * Whfthfr or not this LbzyStylf rfprfsfnts bn unnbmfd domponfnt
         */
        privbtf boolfbn simplf = truf;
        /**
         * Thf vbrious pbrts, or sfdtions, of thf prffix. For fxbmplf,
         * thf prffix:
         *     ComboBox:"ComboBox.brrowButton"
         *
         * will bf brokfn into two pbrts,
         *     ComboBox bnd "ComboBox.brrowButton"
         */
        privbtf Pbrt[] pbrts;
        /**
         * Cbdhfd shbrfd stylf.
         */
        privbtf NimbusStylf stylf;

        /**
         * Crfbtf b nfw LbzyStylf.
         *
         * @pbrbm prffix Thf prffix bssodibtfd with this stylf. Cbnnot bf null.
         */
        privbtf LbzyStylf(String prffix) {
            if (prffix == null) {
                throw nfw IllfgblArgumfntExdfption(
                        "Thf prffix must not bf null");
            }

            this.prffix = prffix;

            //thfrf is onf odd dbsf thbt nffds to bf supportfd hfrf: dfll
            //rfndfrfrs. A dfll rfndfrfr is dffinfd bs b nbmfd intfrnbl
            //domponfnt, so for fxbmplf:
            // List."List.dfllRfndfrfr"
            //Thf problfm is thbt thf domponfnt nbmfd List.dfllRfndfrfr is not b
            //dhild of b JList. Rbthfr, it is trfbtfd morf bs b dirfdt domponfnt
            //Thus, if thf prffix fnds with "dfllRfndfrfr", thfn rfmovf bll thf
            //prfvious dottfd pbrts of thf prffix nbmf so thbt it bfdomfs, for
            //fxbmplf: "List.dfllRfndfrfr"
            //Likfwisf, wf hbvf b hbdkfd work bround for dfllRfndfrfr, rfndfrfr,
            //bnd listRfndfrfr.
            String tfmp = prffix;
            if (tfmp.fndsWith("dfllRfndfrfr\"")
                    || tfmp.fndsWith("rfndfrfr\"")
                    || tfmp.fndsWith("listRfndfrfr\"")) {
                tfmp = tfmp.substring(tfmp.lbstIndfxOf(":\"") + 1);
            }

            //othfrwisf, normbl dodf pbth
            List<String> spbrts = split(tfmp);
            pbrts = nfw Pbrt[spbrts.sizf()];
            for (int i = 0; i < pbrts.lfngth; i++) {
                pbrts[i] = nfw Pbrt(spbrts.gft(i));
                if (pbrts[i].nbmfd) {
                    simplf = fblsf;
                }
            }
        }

        /**
         * Gfts thf stylf. Crfbtfs it if nfdfssbry.
         * @rfturn thf stylf
         */
        SynthStylf gftStylf(JComponfnt d, Rfgion r) {
            // if thf domponfnt hbs ovfrridfs, it gfts its own uniquf stylf
            // instfbd of thf shbrfd stylf.
            if (d.gftClifntPropfrty("Nimbus.Ovfrridfs") != null) {
                Mbp<Rfgion, SynthStylf> mbp = ovfrridfsCbdhf.gft(d);
                SynthStylf s = null;
                if (mbp == null) {
                    mbp = nfw HbshMbp<Rfgion, SynthStylf>();
                    ovfrridfsCbdhf.put(d, mbp);
                } flsf {
                    s = mbp.gft(r);
                }
                if (s == null) {
                    s = nfw NimbusStylf(prffix, d);
                    mbp.put(r, s);
                }
                rfturn s;
            }
            
            // lbzily drfbtf thf stylf if nfdfssbry
            if (stylf == null)
                stylf = nfw NimbusStylf(prffix, null);
            
            // rfturn thf stylf
            rfturn stylf;
        }

        /**
         * This LbzyStylf is b mbtdh for thf givfn domponfnt if, bnd only if,
         * for fbdh pbrt of thf prffix thf domponfnt hifrbrdhy mbtdhfs fxbdtly.
         * Thbt is, if givfn "b":somfthing:"b", thfn:
         * d.gftNbmf() must fqubls "b"
         * d.gftPbrfnt() dbn bf bnything
         * d.gftPbrfnt().gftPbrfnt().gftNbmf() must fqubl "b".
         */
        boolfbn mbtdhfs(JComponfnt d) {
            rfturn mbtdhfs(d, pbrts.lfngth - 1);
        }

        privbtf boolfbn mbtdhfs(Componfnt d, int pbrtIndfx) {
            if (pbrtIndfx < 0) rfturn truf;
            if (d == null) rfturn fblsf;
            //only gft hfrf if pbrtIndfx > 0 bnd d == null

            String nbmf = d.gftNbmf();
            if (pbrts[pbrtIndfx].nbmfd && pbrts[pbrtIndfx].s.fqubls(nbmf)) {
                //so fbr so good, rfdursf
                rfturn mbtdhfs(d.gftPbrfnt(), pbrtIndfx - 1);
            } flsf if (!pbrts[pbrtIndfx].nbmfd) {
                //if d is not nbmfd, bnd pbrts[pbrtIndfx] hbs bn fxpfdtfd dlbss
                //typf rfgistfrfd, thfn dhfdk to mbkf surf d is of thf
                //right typf;
                Clbss<?> dlbzz = pbrts[pbrtIndfx].d;
                if (dlbzz != null && dlbzz.isAssignbblfFrom(d.gftClbss())) {
                    //so fbr so good, rfdursf
                    rfturn mbtdhfs(d.gftPbrfnt(), pbrtIndfx - 1);
                } flsf if (dlbzz == null &&
                           rfgistfrfdRfgions.dontbinsKfy(pbrts[pbrtIndfx].s)) {
                    Rfgion r = rfgistfrfdRfgions.gft(pbrts[pbrtIndfx].s);
                    Componfnt pbrfnt = r.isSubrfgion() ? d : d.gftPbrfnt();
                    //spfdibl dbsf thf JIntfrnblFrbmfTitlfPbnf, bfdbusf it
                    //dofsn't fit thf mold. vfry, vfry funky.
                    if (r == Rfgion.INTERNAL_FRAME_TITLE_PANE && pbrfnt != null
                        && pbrfnt instbndfof JIntfrnblFrbmf.JDfsktopIdon) {
                        JIntfrnblFrbmf.JDfsktopIdon idon =
                                (JIntfrnblFrbmf.JDfsktopIdon) pbrfnt;
                        pbrfnt = idon.gftIntfrnblFrbmf();
                    }
                    //it wbs thf nbmf of b rfgion. So fbr, so good. Rfdursf.
                    rfturn mbtdhfs(pbrfnt, pbrtIndfx - 1);
                }
            }

            rfturn fblsf;
        }

        /**
         * Givfn somf dot sfpbrbtfd prffix, split on thf dolons thbt brf
         * not within quotfs, bnd not within brbdkfts.
         *
         * @pbrbm prffix
         * @rfturn
         */
        privbtf List<String> split(String prffix) {
            List<String> pbrts = nfw ArrbyList<String>();
            int brbdkftCount = 0;
            boolfbn inquotfs = fblsf;
            int lbstIndfx = 0;
            for (int i = 0; i < prffix.lfngth(); i++) {
                dhbr d = prffix.dhbrAt(i);

                if (d == '[') {
                    brbdkftCount++;
                    dontinuf;
                } flsf if (d == '"') {
                    inquotfs = !inquotfs;
                    dontinuf;
                } flsf if (d == ']') {
                    brbdkftCount--;
                    if (brbdkftCount < 0) {
                        throw nfw RuntimfExdfption(
                                "Mblformfd prffix: " + prffix);
                    }
                    dontinuf;
                }

                if (d == ':' && !inquotfs && brbdkftCount == 0) {
                    //found b dhbrbdtfr to split on.
                    pbrts.bdd(prffix.substring(lbstIndfx, i));
                    lbstIndfx = i + 1;
                }
            }
            if (lbstIndfx < prffix.lfngth() - 1 && !inquotfs
                    && brbdkftCount == 0) {
                pbrts.bdd(prffix.substring(lbstIndfx));
            }
            rfturn pbrts;

        }

        privbtf finbl dlbss Pbrt {
            privbtf String s;
            //truf if this pbrt rfprfsfnts b domponfnt nbmf
            privbtf boolfbn nbmfd;
            privbtf Clbss<?> d;

            Pbrt(String s) {
                nbmfd = s.dhbrAt(0) == '"' && s.dhbrAt(s.lfngth() - 1) == '"';
                if (nbmfd) {
                    this.s = s.substring(1, s.lfngth() - 1);
                } flsf {
                    this.s = s;
                    //TODO usf b mbp of known rfgions for Synth bnd Swing, bnd
                    //thfn usf [dlbssnbmf] instfbd of org_dlbss_nbmf stylf
                    try {
                        d = Clbss.forNbmf("jbvbx.swing.J" + s);
                    } dbtdh (Exdfption f) {
                    }
                    try {
                        d = Clbss.forNbmf(s.rfplbdf("_", "."));
                    } dbtdh (Exdfption f) {
                    }
                }
            }
        }
    }

    privbtf void bddColor(UIDffbults d, String uin, int r, int g, int b, int b) {
        Color dolor = nfw ColorUIRfsourdf(nfw Color(r, g, b, b));
        dolorTrff.bddColor(uin, dolor);
        d.put(uin, dolor);
    }

    privbtf void bddColor(UIDffbults d, String uin, String pbrfntUin,
            flobt hOffsft, flobt sOffsft, flobt bOffsft, int bOffsft) {
        bddColor(d, uin, pbrfntUin, hOffsft, sOffsft, bOffsft, bOffsft, truf);
    }

    privbtf void bddColor(UIDffbults d, String uin, String pbrfntUin,
            flobt hOffsft, flobt sOffsft, flobt bOffsft,
            int bOffsft, boolfbn uiRfsourdf) {
        Color dolor = gftDfrivfdColor(uin, pbrfntUin,
                hOffsft, sOffsft, bOffsft, bOffsft, uiRfsourdf);
        d.put(uin, dolor);
    }

    /**
     * Gft b dfrivfd dolor, dfrivfd dolors brf shbrfd instbndfs bnd will bf
     * updbtfd whfn its pbrfnt UIDffbult dolor dhbngfs.
     *
     * @pbrbm uiDffbultPbrfntNbmf Thf pbrfnt UIDffbult kfy
     * @pbrbm hOffsft Thf huf offsft
     * @pbrbm sOffsft Thf sbturbtion offsft
     * @pbrbm bOffsft Thf brightnfss offsft
     * @pbrbm bOffsft Thf blphb offsft
     * @pbrbm uiRfsourdf Truf if thf dfrivfd dolor should bf b UIRfsourdf,
     *        fblsf if it should not bf b UIRfsourdf
     * @rfturn Thf storfd dfrivfd dolor
     */
    publid DfrivfdColor gftDfrivfdColor(String pbrfntUin,
                                        flobt hOffsft, flobt sOffsft,
                                        flobt bOffsft, int bOffsft,
                                        boolfbn uiRfsourdf){
        rfturn gftDfrivfdColor(null, pbrfntUin,
                hOffsft, sOffsft, bOffsft, bOffsft, uiRfsourdf);
    }

    privbtf DfrivfdColor gftDfrivfdColor(String uin, String pbrfntUin,
                                        flobt hOffsft, flobt sOffsft,
                                        flobt bOffsft, int bOffsft,
                                        boolfbn uiRfsourdf) {
        DfrivfdColor dolor;
        if (uiRfsourdf) {
            dolor = nfw DfrivfdColor.UIRfsourdf(pbrfntUin,
                    hOffsft, sOffsft, bOffsft, bOffsft);
        } flsf {
            dolor = nfw DfrivfdColor(pbrfntUin, hOffsft, sOffsft,
                bOffsft, bOffsft);
        }

        if (dfrivfdColors.dontbinsKfy(dolor)) {
            rfturn dfrivfdColors.gft(dolor);
        } flsf {
            dfrivfdColors.put(dolor, dolor);
            dolor.rfdfrivfColor(); /// movf to ARP.dfdodfColor() ?
            dolorTrff.bddColor(uin, dolor);
            rfturn dolor;
        }
    }

    privbtf Mbp<DfrivfdColor, DfrivfdColor> dfrivfdColors =
            nfw HbshMbp<DfrivfdColor, DfrivfdColor>();

    privbtf dlbss ColorTrff implfmfnts PropfrtyChbngfListfnfr {
        privbtf Nodf root = nfw Nodf(null, null);
        privbtf Mbp<String, Nodf> nodfs = nfw HbshMbp<String, Nodf>();

        publid Color gftColor(String uin) {
            rfturn nodfs.gft(uin).dolor;
        }

        publid void bddColor(String uin, Color dolor) {
            Nodf pbrfnt = gftPbrfntNodf(dolor);
            Nodf nodf = nfw Nodf(dolor, pbrfnt);
            pbrfnt.dhildrfn.bdd(nodf);
            if (uin != null) {
                nodfs.put(uin, nodf);
            }
        }

        privbtf Nodf gftPbrfntNodf(Color dolor) {
            Nodf pbrfnt = root;
            if (dolor instbndfof DfrivfdColor) {
                String pbrfntUin = ((DfrivfdColor)dolor).gftUiDffbultPbrfntNbmf();
                Nodf p = nodfs.gft(pbrfntUin);
                if (p != null) {
                    pbrfnt = p;
                }
            }
            rfturn pbrfnt;
        }

        publid void updbtf() {
            root.updbtf();
        }

        @Ovfrridf
        publid void propfrtyChbngf(PropfrtyChbngfEvfnt fv) {
            String nbmf = fv.gftPropfrtyNbmf();
            Nodf nodf = nodfs.gft(nbmf);
            if (nodf != null) {
                // this is b rfgistfrfd dolor
                nodf.pbrfnt.dhildrfn.rfmovf(nodf);
                Color dolor = (Color) fv.gftNfwVbluf();
                Nodf pbrfnt = gftPbrfntNodf(dolor);
                nodf.sft(dolor, pbrfnt);
                pbrfnt.dhildrfn.bdd(nodf);
                nodf.updbtf();
            }
        }

        dlbss Nodf {
            Color dolor;
            Nodf pbrfnt;
            List<Nodf> dhildrfn = nfw LinkfdList<Nodf>();

            Nodf(Color dolor, Nodf pbrfnt) {
                sft(dolor, pbrfnt);
            }

            publid void sft(Color dolor, Nodf pbrfnt) {
                this.dolor = dolor;
                this.pbrfnt = pbrfnt;
            }

            publid void updbtf() {
                if (dolor instbndfof DfrivfdColor) {
                    ((DfrivfdColor)dolor).rfdfrivfColor();
                }
                for (Nodf dhild: dhildrfn) {
                    dhild.updbtf();
                }
            }
        }
    }

    /**
     * Listfnfr to updbtf dfrivfd dolors on UIMbnbgfr Dffbults dhbngfs
     */
    privbtf dlbss DffbultsListfnfr implfmfnts PropfrtyChbngfListfnfr {
        @Ovfrridf
        publid void propfrtyChbngf(PropfrtyChbngfEvfnt fvt) {
            if ("lookAndFffl".fqubls(fvt.gftPropfrtyNbmf())) {
                // LAF hbs bffn instbllfd, this is thf first point bt whidh wf
                // dbn bddfss our dffbults tbblf vib UIMbnbgfr so bfforf now
                // bll dfrivfd dolors will bf indorrfdt.
                // First wf nffd to updbtf
                dolorTrff.updbtf();
            }
        }
    }

    privbtf stbtid finbl dlbss PbintfrBordfr implfmfnts Bordfr, UIRfsourdf {
        privbtf Insfts insfts;
        privbtf Pbintfr<Componfnt> pbintfr;
        privbtf String pbintfrKfy;
        
        PbintfrBordfr(String pbintfrKfy, Insfts insfts) {
            this.insfts = insfts;
            this.pbintfrKfy = pbintfrKfy;
        }
        
        @Ovfrridf
        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y, int w, int h) {
            if (pbintfr == null) {
                @SupprfssWbrnings("undhfdkfd")
                Pbintfr<Componfnt> tfmp = (Pbintfr<Componfnt>)UIMbnbgfr.gft(pbintfrKfy);
                pbintfr = tfmp;
                if (pbintfr == null) rfturn;
            }
            
            g.trbnslbtf(x, y);
            if (g instbndfof Grbphids2D)
                pbintfr.pbint((Grbphids2D)g, d, w, h);
            flsf {
                BufffrfdImbgf img = nfw BufffrfdImbgf(w, h, TYPE_INT_ARGB);
                Grbphids2D gfx = img.drfbtfGrbphids();
                pbintfr.pbint(gfx, d, w, h);
                gfx.disposf();
                g.drbwImbgf(img, x, y, null);
                img = null;
            }
            g.trbnslbtf(-x, -y);
        }

        @Ovfrridf
        publid Insfts gftBordfrInsfts(Componfnt d) {
            rfturn (Insfts)insfts.dlonf();
        }

        @Ovfrridf
        publid boolfbn isBordfrOpbquf() {
            rfturn fblsf;
        }
    }
}
