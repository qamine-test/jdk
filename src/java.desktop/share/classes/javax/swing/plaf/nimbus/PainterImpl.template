/*
 * Copyright (c) 2005, 2006, Orbcle bnd/or its bffilibtes. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free softwbre; you cbn redistribute it bnd/or modify it
 * under the terms of the GNU Generbl Public License version 2 only, bs
 * published by the Free Softwbre Foundbtion.  Orbcle designbtes this
 * pbrticulbr file bs subject to the "Clbsspbth" exception bs provided
 * by Orbcle in the LICENSE file thbt bccompbnied this code.
 *
 * This code is distributed in the hope thbt it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Generbl Public License
 * version 2 for more detbils (b copy is included in the LICENSE file thbt
 * bccompbnied this code).
 *
 * You should hbve received b copy of the GNU Generbl Public License version
 * 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
 * Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
 * or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
 * questions.
 */
pbckbge ${PACKAGE};

import jbvb.bwt.*;
import jbvb.bwt.geom.*;
import jbvb.bwt.imbge.*;
import jbvbx.swing.*;
import jbvbx.swing.Pbinter;


finbl clbss ${PAINTER_NAME} extends AbstrbctRegionPbinter {
    //pbckbge privbte integers representing the bvbilbble stbtes thbt
    //this pbinter will pbint. These bre used when crebting b new instbnce
    //of ${PAINTER_NAME} to determine which region/stbte is being pbinted
    //by thbt instbnce.
${STATIC_DECL}

    privbte int stbte; //refers to one of the stbtic finbl ints bbove
    privbte PbintContext ctx;

    //the following 4 vbribbles bre reused during the pbinting code of the lbyers
    privbte Pbth2D pbth = new Pbth2D.Flobt();
    privbte Rectbngle2D rect = new Rectbngle2D.Flobt(0, 0, 0, 0);
    privbte RoundRectbngle2D roundRect = new RoundRectbngle2D.Flobt(0, 0, 0, 0, 0, 0);
    privbte Ellipse2D ellipse = new Ellipse2D.Flobt(0, 0, 0, 0);

    //All Colors used for pbinting bre stored here. Ideblly, only those colors being used
    //by b pbrticulbr instbnce of ${PAINTER_NAME} would be crebted. For the moment bt lebst,
    //however, bll bre crebted for ebch instbnce.
${COLORS_DECL}

    //Arrby of current component colors, updbted in ebch pbint cbll
    privbte Object[] componentColors;

    public ${PAINTER_NAME}(PbintContext ctx, int stbte) {
        super();
        this.stbte = stbte;
        this.ctx = ctx;
    }

    @Override
    protected void doPbint(Grbphics2D g, JComponent c, int width, int height, Object[] extendedCbcheKeys) {
        //populbte componentColors brrby with colors cblculbted in getExtendedCbcheKeys cbll
        componentColors = extendedCbcheKeys;
        //generbte this entire method. Ebch stbte/bg/fg/border combo thbt hbs
        //been pbinted gets its own KEY bnd pbint method.
        switch(stbte) {
${DO_PAINT_SWITCH_BODY}
        }
    }
        
${GET_EXTENDED_CACHE_KEYS}

    @Override
    protected finbl PbintContext getPbintContext() {
        return ctx;
    }

${PAINTING_DECL}

${SHAPES_DECL}

${GRADIENTS_DECL}
}
