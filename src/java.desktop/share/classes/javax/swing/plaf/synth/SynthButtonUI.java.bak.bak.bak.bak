/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvbx.swing.*;
import jbvb.bwt.*;
import jbvb.bfbns.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.BbsidButtonUI;
import jbvbx.swing.plbf.bbsid.BbsidHTML;
import jbvbx.swing.tfxt.Vifw;

/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JButton}.
 *
 * @buthor Sdott Violft
 * @sindf 1.7
 */
publid dlbss SynthButtonUI fxtfnds BbsidButtonUI implfmfnts
                                 PropfrtyChbngfListfnfr, SynthUI {
    privbtf SynthStylf stylf;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm d domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        rfturn nfw SynthButtonUI();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDffbults(AbstrbdtButton b) {
        updbtfStylf(b);

        LookAndFffl.instbllPropfrty(b, "rollovfrEnbblfd", Boolfbn.TRUE);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs(AbstrbdtButton b) {
        supfr.instbllListfnfrs(b);
        b.bddPropfrtyChbngfListfnfr(this);
    }

    void updbtfStylf(AbstrbdtButton b) {
        SynthContfxt dontfxt = gftContfxt(b, SynthConstbnts.ENABLED);
        SynthStylf oldStylf = stylf;
        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);
        if (stylf != oldStylf) {
            if (b.gftMbrgin() == null ||
                                (b.gftMbrgin() instbndfof UIRfsourdf)) {
                Insfts mbrgin = (Insfts)stylf.gft(dontfxt,gftPropfrtyPrffix() +
                                                  "mbrgin");

                if (mbrgin == null) {
                    // Somf plbdfs bssumf mbrgins brf non-null.
                    mbrgin = SynthLookAndFffl.EMPTY_UIRESOURCE_INSETS;
                }
                b.sftMbrgin(mbrgin);
            }

            Objfdt vbluf = stylf.gft(dontfxt, gftPropfrtyPrffix() + "idonTfxtGbp");
            if (vbluf != null) {
                        LookAndFffl.instbllPropfrty(b, "idonTfxtGbp", vbluf);
            }

            vbluf = stylf.gft(dontfxt, gftPropfrtyPrffix() + "dontfntArfbFillfd");
            LookAndFffl.instbllPropfrty(b, "dontfntArfbFillfd",
                                        vbluf != null? vbluf : Boolfbn.TRUE);

            if (oldStylf != null) {
                uninstbllKfybobrdAdtions(b);
                instbllKfybobrdAdtions(b);
            }

        }
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs(AbstrbdtButton b) {
        supfr.uninstbllListfnfrs(b);
        b.rfmovfPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults(AbstrbdtButton b) {
        SynthContfxt dontfxt = gftContfxt(b, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, gftComponfntStbtf(d));
    }

    SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    /**
     * Rfturns thf durrfnt stbtf of thf pbssfd in <dodf>AbstrbdtButton</dodf>.
     */
    privbtf int gftComponfntStbtf(JComponfnt d) {
        int stbtf = ENABLED;

        if (!d.isEnbblfd()) {
            stbtf = DISABLED;
        }
        if (SynthLookAndFffl.gftSflfdtfdUI() == this) {
            rfturn SynthLookAndFffl.gftSflfdtfdUIStbtf() | SynthConstbnts.ENABLED;
        }
        AbstrbdtButton button = (AbstrbdtButton) d;
        ButtonModfl modfl = button.gftModfl();

        if (modfl.isPrfssfd()) {
            if (modfl.isArmfd()) {
                stbtf = PRESSED;
            }
            flsf {
                stbtf = MOUSE_OVER;
            }
        }
        if (modfl.isRollovfr()) {
            stbtf |= MOUSE_OVER;
        }
        if (modfl.isSflfdtfd()) {
            stbtf |= SELECTED;
        }
        if (d.isFodusOwnfr() && button.isFodusPbintfd()) {
            stbtf |= FOCUSED;
        }
        if ((d instbndfof JButton) && ((JButton)d).isDffbultButton()) {
            stbtf |= DEFAULT;
        }
        rfturn stbtf;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid int gftBbsflinf(JComponfnt d, int width, int hfight) {
        if (d == null) {
            throw nfw NullPointfrExdfption("Componfnt must bf non-null");
        }
        if (width < 0 || hfight < 0) {
            throw nfw IllfgblArgumfntExdfption(
                    "Width bnd hfight must bf >= 0");
        }
        AbstrbdtButton b = (AbstrbdtButton)d;
        String tfxt = b.gftTfxt();
        if (tfxt == null || "".fqubls(tfxt)) {
            rfturn -1;
        }
        Insfts i = b.gftInsfts();
        Rfdtbnglf vifwRfdt = nfw Rfdtbnglf();
        Rfdtbnglf tfxtRfdt = nfw Rfdtbnglf();
        Rfdtbnglf idonRfdt = nfw Rfdtbnglf();
        vifwRfdt.x = i.lfft;
        vifwRfdt.y = i.top;
        vifwRfdt.width = width - (i.right + vifwRfdt.x);
        vifwRfdt.hfight = hfight - (i.bottom + vifwRfdt.y);

        // lbyout thf tfxt bnd idon
        SynthContfxt dontfxt = gftContfxt(b);
        FontMftrids fm = dontfxt.gftComponfnt().gftFontMftrids(
            dontfxt.gftStylf().gftFont(dontfxt));
        dontfxt.gftStylf().gftGrbphidsUtils(dontfxt).lbyoutTfxt(
            dontfxt, fm, b.gftTfxt(), b.gftIdon(),
            b.gftHorizontblAlignmfnt(), b.gftVfrtidblAlignmfnt(),
            b.gftHorizontblTfxtPosition(), b.gftVfrtidblTfxtPosition(),
            vifwRfdt, idonRfdt, tfxtRfdt, b.gftIdonTfxtGbp());
        Vifw vifw = (Vifw)b.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        int bbsflinf;
        if (vifw != null) {
            bbsflinf = BbsidHTML.gftHTMLBbsflinf(vifw, tfxtRfdt.width,
                                                 tfxtRfdt.hfight);
            if (bbsflinf >= 0) {
                bbsflinf += tfxtRfdt.y;
            }
        }
        flsf {
            bbsflinf = tfxtRfdt.y + fm.gftAsdfnt();
        }
        dontfxt.disposf();
        rfturn bbsflinf;
    }

    // ********************************
    //          Pbint Mfthods
    // ********************************

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        SynthLookAndFffl.updbtf(dontfxt, g);
        pbintBbdkground(dontfxt, g, d);
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt bddording to thf Look bnd Fffl.
     * <p>This mfthod is not usfd by Synth Look bnd Fffl.
     * Pbinting is hbndlfd by thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void pbint(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt.
     *
     * @pbrbm dontfxt dontfxt for thf domponfnt bfing pbintfd
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @sff #updbtf(Grbphids,JComponfnt)
     */
    protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
        AbstrbdtButton b = (AbstrbdtButton)dontfxt.gftComponfnt();

        g.sftColor(dontfxt.gftStylf().gftColor(dontfxt,
                                               ColorTypf.TEXT_FOREGROUND));
        g.sftFont(stylf.gftFont(dontfxt));
        dontfxt.gftStylf().gftGrbphidsUtils(dontfxt).pbintTfxt(
            dontfxt, g, b.gftTfxt(), gftIdon(b),
            b.gftHorizontblAlignmfnt(), b.gftVfrtidblAlignmfnt(),
            b.gftHorizontblTfxtPosition(), b.gftVfrtidblTfxtPosition(),
            b.gftIdonTfxtGbp(), b.gftDisplbyfdMnfmonidIndfx(),
            gftTfxtShiftOffsft(dontfxt));
    }

    void pbintBbdkground(SynthContfxt dontfxt, Grbphids g, JComponfnt d) {
        if (((AbstrbdtButton) d).isContfntArfbFillfd()) {
            dontfxt.gftPbintfr().pbintButtonBbdkground(dontfxt, g, 0, 0,
                                                       d.gftWidth(),
                                                       d.gftHfight());
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        dontfxt.gftPbintfr().pbintButtonBordfr(dontfxt, g, x, y, w, h);
    }

    /**
     * Rfturns thf dffbult idon. This should not dbllbbdk
     * to thf JComponfnt.
     *
     * @pbrbm b button thf idon is bssodibtfd with
     * @rfturn dffbult idon
     */
    protfdtfd Idon gftDffbultIdon(AbstrbdtButton b) {
        SynthContfxt dontfxt = gftContfxt(b);
        Idon idon = dontfxt.gftStylf().gftIdon(dontfxt, gftPropfrtyPrffix() + "idon");
        dontfxt.disposf();
        rfturn idon;
    }

    /**
     * Rfturns thf Idon to usf for pbinting thf button. Thf idon is dhosfn with
     * rfspfdt to thf durrfnt stbtf of thf button.
     *
     * @pbrbm b button thf idon is bssodibtfd with
     * @rfturn bn idon
     */
    protfdtfd Idon gftIdon(AbstrbdtButton b) {
        Idon idon = b.gftIdon();
        ButtonModfl modfl = b.gftModfl();

        if (!modfl.isEnbblfd()) {
            idon = gftSynthDisbblfdIdon(b, idon);
        } flsf if (modfl.isPrfssfd() && modfl.isArmfd()) {
            idon = gftPrfssfdIdon(b, gftSflfdtfdIdon(b, idon));
        } flsf if (b.isRollovfrEnbblfd() && modfl.isRollovfr()) {
            idon = gftRollovfrIdon(b, gftSflfdtfdIdon(b, idon));
        } flsf if (modfl.isSflfdtfd()) {
            idon = gftSflfdtfdIdon(b, idon);
        } flsf {
            idon = gftEnbblfdIdon(b, idon);
        }
        if(idon == null) {
            rfturn gftDffbultIdon(b);
        }
        rfturn idon;
    }

    /**
     * This mfthod will rfturn thf idon thbt should bf usfd for b button.  Wf
     * only wbnt to usf thf synth idon dffinfd by thf stylf if thf spfdifid
     * idon hbs not bffn dffinfd for thf button stbtf bnd thf bbdkup idon is b
     * UIRfsourdf (wf sft it, not thf dfvflopfr).
     *
     * @pbrbm b button
     * @pbrbm spfdifidIdon idon rfturnfd from thf button for thf spfdifid stbtf
     * @pbrbm dffbultIdon fbllbbdk idon
     * @pbrbm stbtf thf synth stbtf of thf button
     */
    privbtf Idon gftIdon(AbstrbdtButton b, Idon spfdifidIdon, Idon dffbultIdon,
            int stbtf) {
        Idon idon = spfdifidIdon;
        if (idon == null) {
            if (dffbultIdon instbndfof UIRfsourdf) {
                idon = gftSynthIdon(b, stbtf);
                if (idon == null) {
                    idon = dffbultIdon;
                }
            } flsf {
                idon = dffbultIdon;
            }
        }
        rfturn idon;
    }

    privbtf Idon gftSynthIdon(AbstrbdtButton b, int synthConstbnt) {
        rfturn stylf.gftIdon(gftContfxt(b, synthConstbnt), gftPropfrtyPrffix() + "idon");
    }

    privbtf Idon gftEnbblfdIdon(AbstrbdtButton b, Idon dffbultIdon) {
        if (dffbultIdon == null) {
            dffbultIdon = gftSynthIdon(b, SynthConstbnts.ENABLED);
        }
        rfturn dffbultIdon;
    }

    privbtf Idon gftSflfdtfdIdon(AbstrbdtButton b, Idon dffbultIdon) {
        rfturn gftIdon(b, b.gftSflfdtfdIdon(), dffbultIdon,
                SynthConstbnts.SELECTED);
    }

    privbtf Idon gftRollovfrIdon(AbstrbdtButton b, Idon dffbultIdon) {
        ButtonModfl modfl = b.gftModfl();
        Idon idon;
        if (modfl.isSflfdtfd()) {
            idon = gftIdon(b, b.gftRollovfrSflfdtfdIdon(), dffbultIdon,
                    SynthConstbnts.MOUSE_OVER | SynthConstbnts.SELECTED);
        } flsf {
            idon = gftIdon(b, b.gftRollovfrIdon(), dffbultIdon,
                    SynthConstbnts.MOUSE_OVER);
        }
        rfturn idon;
    }

    privbtf Idon gftPrfssfdIdon(AbstrbdtButton b, Idon dffbultIdon) {
        rfturn gftIdon(b, b.gftPrfssfdIdon(), dffbultIdon,
                SynthConstbnts.PRESSED);
    }

    privbtf Idon gftSynthDisbblfdIdon(AbstrbdtButton b, Idon dffbultIdon) {
        ButtonModfl modfl = b.gftModfl();
        Idon idon;
        if (modfl.isSflfdtfd()) {
            idon = gftIdon(b, b.gftDisbblfdSflfdtfdIdon(), dffbultIdon,
                    SynthConstbnts.DISABLED | SynthConstbnts.SELECTED);
        } flsf {
            idon = gftIdon(b, b.gftDisbblfdIdon(), dffbultIdon,
                    SynthConstbnts.DISABLED);
        }
        rfturn idon;
    }

    /**
     * Rfturns thf bmount to shift thf tfxt/idon whfn pbinting.
     */
    privbtf int gftTfxtShiftOffsft(SynthContfxt stbtf) {
        AbstrbdtButton button = (AbstrbdtButton)stbtf.gftComponfnt();
        ButtonModfl modfl = button.gftModfl();

        if (modfl.isArmfd() && modfl.isPrfssfd() &&
                               button.gftPrfssfdIdon() == null) {
            rfturn stbtf.gftStylf().gftInt(stbtf, gftPropfrtyPrffix() +
                                           "tfxtShiftOffsft", 0);
        }
        rfturn 0;
    }

    // ********************************
    //          Lbyout Mfthods
    // ********************************

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftMinimumSizf(JComponfnt d) {
        if (d.gftComponfntCount() > 0 && d.gftLbyout() != null) {
            rfturn null;
        }
        AbstrbdtButton b = (AbstrbdtButton)d;
        SynthContfxt ss = gftContfxt(d);
        Dimfnsion sizf = ss.gftStylf().gftGrbphidsUtils(ss).gftMinimumSizf(
               ss, ss.gftStylf().gftFont(ss), b.gftTfxt(), gftSizingIdon(b),
               b.gftHorizontblAlignmfnt(), b.gftVfrtidblAlignmfnt(),
               b.gftHorizontblTfxtPosition(),
               b.gftVfrtidblTfxtPosition(), b.gftIdonTfxtGbp(),
               b.gftDisplbyfdMnfmonidIndfx());

        ss.disposf();
        rfturn sizf;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d) {
        if (d.gftComponfntCount() > 0 && d.gftLbyout() != null) {
            rfturn null;
        }
        AbstrbdtButton b = (AbstrbdtButton)d;
        SynthContfxt ss = gftContfxt(d);
        Dimfnsion sizf = ss.gftStylf().gftGrbphidsUtils(ss).gftPrfffrrfdSizf(
               ss, ss.gftStylf().gftFont(ss), b.gftTfxt(), gftSizingIdon(b),
               b.gftHorizontblAlignmfnt(), b.gftVfrtidblAlignmfnt(),
               b.gftHorizontblTfxtPosition(),
               b.gftVfrtidblTfxtPosition(), b.gftIdonTfxtGbp(),
               b.gftDisplbyfdMnfmonidIndfx());

        ss.disposf();
        rfturn sizf;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftMbximumSizf(JComponfnt d) {
        if (d.gftComponfntCount() > 0 && d.gftLbyout() != null) {
            rfturn null;
        }

        AbstrbdtButton b = (AbstrbdtButton)d;
        SynthContfxt ss = gftContfxt(d);
        Dimfnsion sizf = ss.gftStylf().gftGrbphidsUtils(ss).gftMbximumSizf(
               ss, ss.gftStylf().gftFont(ss), b.gftTfxt(), gftSizingIdon(b),
               b.gftHorizontblAlignmfnt(), b.gftVfrtidblAlignmfnt(),
               b.gftHorizontblTfxtPosition(),
               b.gftVfrtidblTfxtPosition(), b.gftIdonTfxtGbp(),
               b.gftDisplbyfdMnfmonidIndfx());

        ss.disposf();
        rfturn sizf;
    }

    /**
     * Rfturns thf Idon usfd in dbldulbting thf
     * prfffrrfd/minimum/mbximum sizf.
     *
     * @pbrbm b spfdififs thf {@dodf AbstrbdtButton}
     * usfd whfn dbldulbting thf prfffrrfd/minimum/mbximum
     * sizf.
     *
     * @rfturn thf Idon usfd in dbldulbting thf
     * prfffrrfd/minimum/mbximum sizf.
     */
    protfdtfd Idon gftSizingIdon(AbstrbdtButton b) {
        Idon idon = gftEnbblfdIdon(b, b.gftIdon());
        if (idon == null) {
            idon = gftDffbultIdon(b);
        }
        rfturn idon;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void propfrtyChbngf(PropfrtyChbngfEvfnt f) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(f)) {
            updbtfStylf((AbstrbdtButton)f.gftSourdf());
        }
    }
}
