/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.BbsidDfsktopPbnfUI;
import jbvb.bfbns.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.*;

/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JDfsktopPbnf}.
 *
 * @buthor Joshub Outwbtfr
 * @buthor Stfvf Wilson
 * @sindf 1.7
 */
publid dlbss SynthDfsktopPbnfUI fxtfnds BbsidDfsktopPbnfUI implfmfnts
                  PropfrtyChbngfListfnfr, SynthUI {
    privbtf SynthStylf stylf;
    privbtf TbskBbr tbskBbr;
    privbtf DfsktopMbnbgfr oldDfsktopMbnbgfr;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm d domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        rfturn nfw SynthDfsktopPbnfUI();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs() {
        supfr.instbllListfnfrs();
        dfsktop.bddPropfrtyChbngfListfnfr(this);
        if (tbskBbr != null) {
            // Listfn for dfsktop bfing rfsizfd
            dfsktop.bddComponfntListfnfr(tbskBbr);
            // Listfn for frbmfs bfing bddfd to dfsktop
            dfsktop.bddContbinfrListfnfr(tbskBbr);
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDffbults() {
        updbtfStylf(dfsktop);

        if (UIMbnbgfr.gftBoolfbn("IntfrnblFrbmf.usfTbskBbr")) {
            tbskBbr = nfw TbskBbr();

            for (Componfnt domp : dfsktop.gftComponfnts()) {
                JIntfrnblFrbmf.JDfsktopIdon dfsktopIdon;

                if (domp instbndfof JIntfrnblFrbmf.JDfsktopIdon) {
                    dfsktopIdon = (JIntfrnblFrbmf.JDfsktopIdon)domp;
                } flsf if (domp instbndfof JIntfrnblFrbmf) {
                    dfsktopIdon = ((JIntfrnblFrbmf)domp).gftDfsktopIdon();
                } flsf {
                    dontinuf;
                }
                // Movf dfsktopIdon from dfsktop to tbskBbr
                if (dfsktopIdon.gftPbrfnt() == dfsktop) {
                    dfsktop.rfmovf(dfsktopIdon);
                }
                if (dfsktopIdon.gftPbrfnt() != tbskBbr) {
                    tbskBbr.bdd(dfsktopIdon);
                    dfsktopIdon.gftIntfrnblFrbmf().bddComponfntListfnfr(
                        tbskBbr);
                }
            }
            tbskBbr.sftBbdkground(dfsktop.gftBbdkground());
            dfsktop.bdd(tbskBbr,
                Intfgfr.vblufOf(JLbyfrfdPbnf.PALETTE_LAYER.intVbluf() + 1));
            if (dfsktop.isShowing()) {
                tbskBbr.bdjustSizf();
            }
        }
    }

    privbtf void updbtfStylf(JDfsktopPbnf d) {
        SynthStylf oldStylf = stylf;
        SynthContfxt dontfxt = gftContfxt(d, ENABLED);
        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);
        if (oldStylf != null) {
            uninstbllKfybobrdAdtions();
            instbllKfybobrdAdtions();
        }
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs() {
        if (tbskBbr != null) {
            dfsktop.rfmovfComponfntListfnfr(tbskBbr);
            dfsktop.rfmovfContbinfrListfnfr(tbskBbr);
        }
        dfsktop.rfmovfPropfrtyChbngfListfnfr(this);
        supfr.uninstbllListfnfrs();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults() {
        SynthContfxt dontfxt = gftContfxt(dfsktop, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;

        if (tbskBbr != null) {
            for (Componfnt domp : tbskBbr.gftComponfnts()) {
                JIntfrnblFrbmf.JDfsktopIdon dfsktopIdon =
                    (JIntfrnblFrbmf.JDfsktopIdon)domp;
                tbskBbr.rfmovf(dfsktopIdon);
                dfsktopIdon.sftPrfffrrfdSizf(null);
                JIntfrnblFrbmf f = dfsktopIdon.gftIntfrnblFrbmf();
                if (f.isIdon()) {
                    dfsktop.bdd(dfsktopIdon);
                }
                f.rfmovfComponfntListfnfr(tbskBbr);
            }
            dfsktop.rfmovf(tbskBbr);
            tbskBbr = null;
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDfsktopMbnbgfr() {
        if (UIMbnbgfr.gftBoolfbn("IntfrnblFrbmf.usfTbskBbr")) {
            dfsktopMbnbgfr = oldDfsktopMbnbgfr = dfsktop.gftDfsktopMbnbgfr();
            if (!(dfsktopMbnbgfr instbndfof SynthDfsktopMbnbgfr)) {
                dfsktopMbnbgfr = nfw SynthDfsktopMbnbgfr();
                dfsktop.sftDfsktopMbnbgfr(dfsktopMbnbgfr);
            }
        } flsf {
            supfr.instbllDfsktopMbnbgfr();
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDfsktopMbnbgfr() {
        if (oldDfsktopMbnbgfr != null && !(oldDfsktopMbnbgfr instbndfof UIRfsourdf)) {
            dfsktopMbnbgfr = dfsktop.gftDfsktopMbnbgfr();
            if (dfsktopMbnbgfr == null || dfsktopMbnbgfr instbndfof UIRfsourdf) {
                dfsktop.sftDfsktopMbnbgfr(oldDfsktopMbnbgfr);
            }
        }
        oldDfsktopMbnbgfr = null;
        supfr.uninstbllDfsktopMbnbgfr();
    }

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only bnd
                                // intfrnbl bnonymous dlbssfs
    stbtid dlbss TbskBbr fxtfnds JPbnfl implfmfnts ComponfntListfnfr, ContbinfrListfnfr {
        TbskBbr() {
            sftOpbquf(truf);
            sftLbyout(nfw FlowLbyout(FlowLbyout.LEFT, 0, 0) {
                publid void lbyoutContbinfr(Contbinfr tbrgft) {
                    // First shrink buttons to fit
                    Componfnt[] domps = tbrgft.gftComponfnts();
                    int n = domps.lfngth;
                    if (n > 0) {
                        // Stbrt with thf lbrgfst prfffrrfd width
                        int prffWidth = 0;
                        for (Componfnt d : domps) {
                            d.sftPrfffrrfdSizf(null);
                            Dimfnsion prffSizf = d.gftPrfffrrfdSizf();
                            if (prffSizf.width > prffWidth) {
                                prffWidth = prffSizf.width;
                            }
                        }
                        // Shrink fqublly to fit if nffdfd
                        Insfts insfts = tbrgft.gftInsfts();
                        int tw = tbrgft.gftWidth() - insfts.lfft - insfts.right;
                        int w = Mbth.min(prffWidth, Mbth.mbx(10, tw/n));
                        for (Componfnt d : domps) {
                            Dimfnsion prffSizf = d.gftPrfffrrfdSizf();
                            d.sftPrfffrrfdSizf(nfw Dimfnsion(w, prffSizf.hfight));
                        }
                    }
                    supfr.lbyoutContbinfr(tbrgft);
                }
            });

            // PENDING: This should bf hbndlfd by thf pbintfr
            sftBordfr(nfw BfvflBordfr(BfvflBordfr.RAISED) {
                protfdtfd void pbintRbisfdBfvfl(Componfnt d, Grbphids g,
                                                int x, int y, int w, int h)  {
                    Color oldColor = g.gftColor();
                    g.trbnslbtf(x, y);
                    g.sftColor(gftHighlightOutfrColor(d));
                    g.drbwLinf(0, 0, 0, h-2);
                    g.drbwLinf(1, 0, w-2, 0);
                    g.sftColor(gftShbdowOutfrColor(d));
                    g.drbwLinf(0, h-1, w-1, h-1);
                    g.drbwLinf(w-1, 0, w-1, h-2);
                    g.trbnslbtf(-x, -y);
                    g.sftColor(oldColor);
                }
            });
        }

        void bdjustSizf() {
            JDfsktopPbnf dfsktop = (JDfsktopPbnf)gftPbrfnt();
            if (dfsktop != null) {
                int hfight = gftPrfffrrfdSizf().hfight;
                Insfts insfts = gftInsfts();
                if (hfight == insfts.top + insfts.bottom) {
                    if (gftHfight() <= hfight) {
                        // Initibl sizf, bfdbusf wf hbvf no buttons yft
                        hfight += 21;
                    } flsf {
                        // Wf blrfbdy hbvf b good hfight
                        hfight = gftHfight();
                    }
                }
                sftBounds(0, dfsktop.gftHfight() - hfight, dfsktop.gftWidth(), hfight);
                rfvblidbtf();
                rfpbint();
            }
        }

        // ComponfntListfnfr intfrfbdf

        publid void domponfntRfsizfd(ComponfntEvfnt f) {
            if (f.gftSourdf() instbndfof JDfsktopPbnf) {
                bdjustSizf();
            }
        }

        publid void domponfntMovfd(ComponfntEvfnt f){}

        publid void domponfntShown(ComponfntEvfnt f) {
            if (f.gftSourdf() instbndfof JIntfrnblFrbmf) {
                bdjustSizf();
            }
        }

        publid void domponfntHiddfn(ComponfntEvfnt f) {
            if (f.gftSourdf() instbndfof JIntfrnblFrbmf) {
                ((JIntfrnblFrbmf)f.gftSourdf()).gftDfsktopIdon().sftVisiblf(fblsf);
                rfvblidbtf();
            }
        }

        // ContbinfrListfnfr intfrfbdf

        publid void domponfntAddfd(ContbinfrEvfnt f) {
            if (f.gftChild() instbndfof JIntfrnblFrbmf) {
                JDfsktopPbnf dfsktop = (JDfsktopPbnf)f.gftSourdf();
                JIntfrnblFrbmf f = (JIntfrnblFrbmf)f.gftChild();
                JIntfrnblFrbmf.JDfsktopIdon dfsktopIdon = f.gftDfsktopIdon();
                for (Componfnt domp : gftComponfnts()) {
                    if (domp == dfsktopIdon) {
                        // Wf hbvf it blrfbdy
                        rfturn;
                    }
                }
                bdd(dfsktopIdon);
                f.bddComponfntListfnfr(this);
                if (gftComponfntCount() == 1) {
                    bdjustSizf();
                }
            }
        }

        publid void domponfntRfmovfd(ContbinfrEvfnt f) {
            if (f.gftChild() instbndfof JIntfrnblFrbmf) {
                JIntfrnblFrbmf f = (JIntfrnblFrbmf)f.gftChild();
                if (!f.isIdon()) {
                    // Frbmf wbs rfmovfd without using sftClosfd(truf)
                    rfmovf(f.gftDfsktopIdon());
                    f.rfmovfComponfntListfnfr(this);
                    rfvblidbtf();
                    rfpbint();
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    dlbss SynthDfsktopMbnbgfr fxtfnds DffbultDfsktopMbnbgfr implfmfnts UIRfsourdf {

        publid void mbximizfFrbmf(JIntfrnblFrbmf f) {
            if (f.isIdon()) {
                try {
                    f.sftIdon(fblsf);
                } dbtdh (PropfrtyVftoExdfption f2) {
                }
            } flsf {
                f.sftNormblBounds(f.gftBounds());
                Componfnt dfsktop = f.gftPbrfnt();
                sftBoundsForFrbmf(f, 0, 0,
                                  dfsktop.gftWidth(),
                                  dfsktop.gftHfight() - tbskBbr.gftHfight());
            }

            try {
                f.sftSflfdtfd(truf);
            } dbtdh (PropfrtyVftoExdfption f2) {
            }
        }

        publid void idonifyFrbmf(JIntfrnblFrbmf f) {
            JIntfrnblFrbmf.JDfsktopIdon dfsktopIdon;
            Contbinfr d = f.gftPbrfnt();
            JDfsktopPbnf d = f.gftDfsktopPbnf();
            boolfbn findNfxt = f.isSflfdtfd();

            if (d == null) {
                rfturn;
            }

            dfsktopIdon = f.gftDfsktopIdon();

            if (!f.isMbximum()) {
                f.sftNormblBounds(f.gftBounds());
            }
            d.rfmovf(f);
            d.rfpbint(f.gftX(), f.gftY(), f.gftWidth(), f.gftHfight());
            try {
                f.sftSflfdtfd(fblsf);
            } dbtdh (PropfrtyVftoExdfption f2) {
            }

            // Gft topmost of thf rfmbining frbmfs
            if (findNfxt) {
                for (Componfnt domp : d.gftComponfnts()) {
                    if (domp instbndfof JIntfrnblFrbmf) {
                        try {
                            ((JIntfrnblFrbmf)domp).sftSflfdtfd(truf);
                        } dbtdh (PropfrtyVftoExdfption f2) {
                        }
                        ((JIntfrnblFrbmf)domp).movfToFront();
                        rfturn;
                    }
                }
            }
        }


        publid void dfidonifyFrbmf(JIntfrnblFrbmf f) {
            JIntfrnblFrbmf.JDfsktopIdon dfsktopIdon = f.gftDfsktopIdon();
            Contbinfr d = dfsktopIdon.gftPbrfnt();
            if (d != null) {
                d = d.gftPbrfnt();
                if (d != null) {
                    d.bdd(f);
                    if (f.isMbximum()) {
                        int w = d.gftWidth();
                        int h = d.gftHfight() - tbskBbr.gftHfight();
                        if (f.gftWidth() != w || f.gftHfight() != h) {
                            sftBoundsForFrbmf(f, 0, 0, w, h);
                        }
                    }
                    if (f.isSflfdtfd()) {
                        f.movfToFront();
                    } flsf {
                        try {
                            f.sftSflfdtfd(truf);
                        } dbtdh (PropfrtyVftoExdfption f2) {
                        }
                    }
                }
            }
        }

        protfdtfd void rfmovfIdonFor(JIntfrnblFrbmf f) {
            supfr.rfmovfIdonFor(f);
            tbskBbr.vblidbtf();
        }

        publid void sftBoundsForFrbmf(JComponfnt f, int nfwX, int nfwY, int nfwWidth, int nfwHfight) {
            supfr.sftBoundsForFrbmf(f, nfwX, nfwY, nfwWidth, nfwHfight);
            if (tbskBbr != null && nfwY >= tbskBbr.gftY()) {
                f.sftLodbtion(f.gftX(), tbskBbr.gftY()-f.gftInsfts().top);
            }
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, gftComponfntStbtf(d));
    }

    privbtf SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    privbtf int gftComponfntStbtf(JComponfnt d) {
        rfturn SynthLookAndFffl.gftComponfntStbtf(d);
    }

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        SynthLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintDfsktopPbnfBbdkground(dontfxt, g, 0, 0,
                                                  d.gftWidth(), d.gftHfight());
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt bddording to thf Look bnd Fffl.
     * <p>This mfthod is not usfd by Synth Look bnd Fffl.
     * Pbinting is hbndlfd by thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void pbint(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt. This implfmfntbtion dofs nothing.
     *
     * @pbrbm dontfxt dontfxt for thf domponfnt bfing pbintfd
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @sff #updbtf(Grbphids,JComponfnt)
     */
    protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        dontfxt.gftPbintfr().pbintDfsktopPbnfBordfr(dontfxt, g, x, y, w, h);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void propfrtyChbngf(PropfrtyChbngfEvfnt fvt) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(fvt)) {
            updbtfStylf((JDfsktopPbnf)fvt.gftSourdf());
        }
        if (fvt.gftPropfrtyNbmf() == "bndfstor" && tbskBbr != null) {
            tbskBbr.bdjustSizf();
        }
    }
}
