/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.plbf.synth;

import jbvb.bwt.*;
import jbvbx.swing.*;
import jbvbx.swing.plbf.UIRfsourdf;

/**
 * JButton objfdt thbt drbws b sdblfd Arrow in onf of thf dbrdinbl dirfdtions.
 *
 * @buthor Sdott Violft
 */
@SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
dlbss SynthArrowButton fxtfnds JButton implfmfnts SwingConstbnts, UIRfsourdf {
    privbtf int dirfdtion;

    publid SynthArrowButton(int dirfdtion) {
        supfr();
        supfr.sftFodusbblf(fblsf);
        sftDirfdtion(dirfdtion);
        sftDffbultCbpbblf(fblsf);
    }

    publid String gftUIClbssID() {
        rfturn "ArrowButtonUI";
    }

    publid void updbtfUI() {
        sftUI(nfw SynthArrowButtonUI());
    }

    publid void sftDirfdtion(int dir) {
        dirfdtion = dir;
        putClifntPropfrty("__brrow_dirfdtion__", Intfgfr.vblufOf(dir));
        rfpbint();
    }

    publid int gftDirfdtion() {
        rfturn dirfdtion;
    }

    publid void sftFodusbblf(boolfbn fodusbblf) {}

    privbtf stbtid dlbss SynthArrowButtonUI fxtfnds SynthButtonUI {
        protfdtfd void instbllDffbults(AbstrbdtButton b) {
            supfr.instbllDffbults(b);
            updbtfStylf(b);
        }

        protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
            SynthArrowButton button = (SynthArrowButton)dontfxt.
                                      gftComponfnt();
            dontfxt.gftPbintfr().pbintArrowButtonForfground(
                dontfxt, g, 0, 0, button.gftWidth(), button.gftHfight(),
                button.gftDirfdtion());
        }

        void pbintBbdkground(SynthContfxt dontfxt, Grbphids g, JComponfnt d) {
            dontfxt.gftPbintfr().pbintArrowButtonBbdkground(dontfxt, g, 0, 0,
                                                d.gftWidth(), d.gftHfight());
        }

        publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                                int y, int w, int h) {
            dontfxt.gftPbintfr().pbintArrowButtonBordfr(dontfxt, g, x, y, w,h);
        }

        publid Dimfnsion gftMinimumSizf() {
            rfturn nfw Dimfnsion(5, 5);
        }

        publid Dimfnsion gftMbximumSizf() {
            rfturn nfw Dimfnsion(Intfgfr.MAX_VALUE, Intfgfr.MAX_VALUE);
        }

        publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d) {
            SynthContfxt dontfxt = gftContfxt(d);
            Dimfnsion dim = null;
            if (dontfxt.gftComponfnt().gftNbmf() == "SdrollBbr.button") {
                // SdrollBbr brrow buttons dbn bf non-squbrf whfn
                // thf SdrollBbr.squbrfButtons propfrty is sft to FALSE
                // bnd thf SdrollBbr.buttonSizf propfrty is non-null
                dim = (Dimfnsion)
                    dontfxt.gftStylf().gft(dontfxt, "SdrollBbr.buttonSizf");
            }
            if (dim == null) {
                // For bll othfr dbsfs (indluding Spinnfr, ComboBox), wf will
                // fbll bbdk on thf singlf ArrowButton.sizf vbluf to drfbtf
                // b squbrf rfturn vbluf
                int sizf =
                    dontfxt.gftStylf().gftInt(dontfxt, "ArrowButton.sizf", 16);
                dim = nfw Dimfnsion(sizf, sizf);
            }

            // hbndlf sdbling for sizfVbrifnts for spfdibl dbsf domponfnts. Thf
            // kfy "JComponfnt.sizfVbribnt" sdblfs for lbrgf/smbll/mini
            // domponfnts brf bbsfd on Applfs LAF
            Contbinfr pbrfnt = dontfxt.gftComponfnt().gftPbrfnt();
            if (pbrfnt instbndfof JComponfnt && !(pbrfnt instbndfof JComboBox)) {
                Objfdt sdblfKfy = ((JComponfnt)pbrfnt).
                                    gftClifntPropfrty("JComponfnt.sizfVbribnt");
                if (sdblfKfy != null){
                    if ("lbrgf".fqubls(sdblfKfy)){
                        dim = nfw Dimfnsion(
                                (int)(dim.width * 1.15),
                                (int)(dim.hfight * 1.15));
                    } flsf if ("smbll".fqubls(sdblfKfy)){
                        dim = nfw Dimfnsion(
                                (int)(dim.width * 0.857),
                                (int)(dim.hfight * 0.857));
                    } flsf if ("mini".fqubls(sdblfKfy)){
                        dim = nfw Dimfnsion(
                                (int)(dim.width * 0.714),
                                (int)(dim.hfight * 0.714));
                    }
                }
            }

            dontfxt.disposf();
            rfturn dim;
        }
    }
}
