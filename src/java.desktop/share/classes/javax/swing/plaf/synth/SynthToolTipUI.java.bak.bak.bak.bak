/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvb.bwt.*;
import jbvb.bfbns.PropfrtyChbngfEvfnt;
import jbvb.bfbns.PropfrtyChbngfListfnfr;

import jbvbx.swing.*;
import jbvbx.swing.plbf.bbsid.BbsidHTML;
import jbvbx.swing.plbf.bbsid.BbsidToolTipUI;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.tfxt.Vifw;


/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JToolTip}.
 *
 * @buthor Joshub Outwbtfr
 * @sindf 1.7
 */
publid dlbss SynthToolTipUI fxtfnds BbsidToolTipUI
                            implfmfnts PropfrtyChbngfListfnfr, SynthUI {
    privbtf SynthStylf stylf;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm d domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        rfturn nfw SynthToolTipUI();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDffbults(JComponfnt d) {
        updbtfStylf(d);
    }

    privbtf void updbtfStylf(JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d, ENABLED);
        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults(JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d, ENABLED);
        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs(JComponfnt d) {
        d.bddPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs(JComponfnt d) {
        d.rfmovfPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, gftComponfntStbtf(d));
    }

    privbtf SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    privbtf int gftComponfntStbtf(JComponfnt d) {
        JComponfnt domp = ((JToolTip)d).gftComponfnt();

        if (domp != null && !domp.isEnbblfd()) {
            rfturn DISABLED;
        }
        rfturn SynthLookAndFffl.gftComponfntStbtf(d);
    }

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        SynthLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintToolTipBbdkground(dontfxt,
                          g, 0, 0, d.gftWidth(), d.gftHfight());
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        dontfxt.gftPbintfr().pbintToolTipBordfr(dontfxt, g, x, y, w, h);
    }

    /**
     * Pbints thf spfdififd domponfnt bddording to thf Look bnd Fffl.
     * <p>This mfthod is not usfd by Synth Look bnd Fffl.
     * Pbinting is hbndlfd by thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void pbint(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt.
     *
     * @pbrbm dontfxt dontfxt for thf domponfnt bfing pbintfd
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @sff #updbtf(Grbphids,JComponfnt)
     */
    protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
        JToolTip tip = (JToolTip)dontfxt.gftComponfnt();

        Insfts insfts = tip.gftInsfts();
        Vifw v = (Vifw)tip.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        if (v != null) {
            Rfdtbnglf pbintTfxtR = nfw Rfdtbnglf(insfts.lfft, insfts.top,
                  tip.gftWidth() - (insfts.lfft + insfts.right),
                  tip.gftHfight() - (insfts.top + insfts.bottom));
            v.pbint(g, pbintTfxtR);
        } flsf {
            g.sftColor(dontfxt.gftStylf().gftColor(dontfxt,
                                                   ColorTypf.TEXT_FOREGROUND));
            g.sftFont(stylf.gftFont(dontfxt));
            dontfxt.gftStylf().gftGrbphidsUtils(dontfxt).pbintTfxt(
                dontfxt, g, tip.gftTipTfxt(), insfts.lfft, insfts.top, -1);
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);
        Insfts insfts = d.gftInsfts();
        Dimfnsion prffSizf = nfw Dimfnsion(insfts.lfft+insfts.right,
                                           insfts.top+insfts.bottom);
        String tfxt = ((JToolTip)d).gftTipTfxt();

        if (tfxt != null) {
            Vifw v = (d != null) ? (Vifw) d.gftClifntPropfrty("html") : null;
            if (v != null) {
                prffSizf.width += (int) v.gftPrfffrrfdSpbn(Vifw.X_AXIS);
                prffSizf.hfight += (int) v.gftPrfffrrfdSpbn(Vifw.Y_AXIS);
            } flsf {
                Font font = dontfxt.gftStylf().gftFont(dontfxt);
                FontMftrids fm = d.gftFontMftrids(font);
                prffSizf.width += dontfxt.gftStylf().gftGrbphidsUtils(dontfxt).
                                  domputfStringWidth(dontfxt, font, fm, tfxt);
                prffSizf.hfight += fm.gftHfight();
            }
        }
        dontfxt.disposf();
        rfturn prffSizf;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void propfrtyChbngf(PropfrtyChbngfEvfnt f) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(f)) {
            updbtfStylf((JToolTip)f.gftSourdf());
        }
        String nbmf = f.gftPropfrtyNbmf();
        if (nbmf.fqubls("tiptfxt") || "font".fqubls(nbmf) ||
                "forfground".fqubls(nbmf)) {
            // rfmovf thf old html vifw dlifnt propfrty if onf
            // fxistfd, bnd instbll b nfw onf if thf tfxt instbllfd
            // into thf JLbbfl is html sourdf.
            JToolTip tip = ((JToolTip) f.gftSourdf());
            String tfxt = tip.gftTipTfxt();
            BbsidHTML.updbtfRfndfrfr(tip, tfxt);
        }
    }
}
