/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.*;
import jbvb.bwt.*;
import jbvb.bfbns.PropfrtyChbngfListfnfr;
import jbvb.bfbns.PropfrtyChbngfEvfnt;

/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JList}.
 *
 * @buthor Sdott Violft
 * @sindf 1.7
 */
publid dlbss SynthListUI fxtfnds BbsidListUI
                         implfmfnts PropfrtyChbngfListfnfr, SynthUI {
    privbtf SynthStylf stylf;
    privbtf boolfbn usfListColors;
    privbtf boolfbn usfUIBordfr;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm list domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt list) {
        rfturn nfw SynthListUI();
    }

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        SynthLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintListBbdkground(dontfxt,
                          g, 0, 0, d.gftWidth(), d.gftHfight());
        dontfxt.disposf();
        pbint(g, d);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        dontfxt.gftPbintfr().pbintListBordfr(dontfxt, g, x, y, w, h);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs() {
        supfr.instbllListfnfrs();
        list.bddPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void propfrtyChbngf(PropfrtyChbngfEvfnt f) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(f)) {
            updbtfStylf((JList)f.gftSourdf());
        }
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs() {
        supfr.uninstbllListfnfrs();
        list.rfmovfPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDffbults() {
        if (list.gftCfllRfndfrfr() == null ||
                 (list.gftCfllRfndfrfr() instbndfof UIRfsourdf)) {
            list.sftCfllRfndfrfr(nfw SynthListCfllRfndfrfr());
        }
        updbtfStylf(list);
    }

    privbtf void updbtfStylf(JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(list, ENABLED);
        SynthStylf oldStylf = stylf;

        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);

        if (stylf != oldStylf) {
            dontfxt.sftComponfntStbtf(SELECTED);
            Color sbg = list.gftSflfdtionBbdkground();
            if (sbg == null || sbg instbndfof UIRfsourdf) {
                list.sftSflfdtionBbdkground(stylf.gftColor(
                                 dontfxt, ColorTypf.TEXT_BACKGROUND));
            }

            Color sfg = list.gftSflfdtionForfground();
            if (sfg == null || sfg instbndfof UIRfsourdf) {
                list.sftSflfdtionForfground(stylf.gftColor(
                                 dontfxt, ColorTypf.TEXT_FOREGROUND));
            }

            usfListColors = stylf.gftBoolfbn(dontfxt,
                                  "List.rfndfrfrUsfListColors", truf);
            usfUIBordfr = stylf.gftBoolfbn(dontfxt,
                                  "List.rfndfrfrUsfUIBordfr", truf);

            int hfight = stylf.gftInt(dontfxt, "List.dfllHfight", -1);
            if (hfight != -1) {
                list.sftFixfdCfllHfight(hfight);
            }
            if (oldStylf != null) {
                uninstbllKfybobrdAdtions();
                instbllKfybobrdAdtions();
            }
        }
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults() {
        supfr.uninstbllDffbults();

        SynthContfxt dontfxt = gftContfxt(list, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, gftComponfntStbtf(d));
    }

    privbtf SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    privbtf int gftComponfntStbtf(JComponfnt d) {
        rfturn SynthLookAndFffl.gftComponfntStbtf(d);
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss SynthListCfllRfndfrfr fxtfnds DffbultListCfllRfndfrfr.UIRfsourdf {
        @Ovfrridf publid String gftNbmf() {
            rfturn "List.dfllRfndfrfr";
        }

        @Ovfrridf publid void sftBordfr(Bordfr b) {
            if (usfUIBordfr || b instbndfof SynthBordfr) {
                supfr.sftBordfr(b);
            }
        }

        @Ovfrridf publid Componfnt gftListCfllRfndfrfrComponfnt(JList<?> list, Objfdt vbluf,
                  int indfx, boolfbn isSflfdtfd, boolfbn dfllHbsFodus) {
            if (!usfListColors && (isSflfdtfd || dfllHbsFodus)) {
                SynthLookAndFffl.sftSflfdtfdUI((SynthLbbflUI)SynthLookAndFffl.
                             gftUIOfTypf(gftUI(), SynthLbbflUI.dlbss),
                                   isSflfdtfd, dfllHbsFodus, list.isEnbblfd(), fblsf);
            }
            flsf {
                SynthLookAndFffl.rfsftSflfdtfdUI();
            }

            supfr.gftListCfllRfndfrfrComponfnt(list, vbluf, indfx,
                                               isSflfdtfd, dfllHbsFodus);
            rfturn this;
        }

        @Ovfrridf publid void pbint(Grbphids g) {
            supfr.pbint(g);
            SynthLookAndFffl.rfsftSflfdtfdUI();
        }
    }
}
