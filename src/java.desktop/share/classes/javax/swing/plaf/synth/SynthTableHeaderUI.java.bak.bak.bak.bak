/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvb.bwt.*;
import jbvb.bfbns.*;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.bbsid.*;
import jbvbx.swing.tbblf.*;
import sun.swing.tbblf.*;

/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.tbblf.JTbblfHfbdfr}.
 *
 * @buthor Albn Chung
 * @buthor Philip Milnf
 * @sindf 1.7
 */
publid dlbss SynthTbblfHfbdfrUI fxtfnds BbsidTbblfHfbdfrUI
                                implfmfnts PropfrtyChbngfListfnfr, SynthUI {

//
// Instbndf Vbribblfs
//

    privbtf TbblfCfllRfndfrfr prfvRfndfrfr = null;

    privbtf SynthStylf stylf;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm h domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt h) {
        rfturn nfw SynthTbblfHfbdfrUI();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllDffbults() {
        prfvRfndfrfr = hfbdfr.gftDffbultRfndfrfr();
        if (prfvRfndfrfr instbndfof UIRfsourdf) {
            hfbdfr.sftDffbultRfndfrfr(nfw HfbdfrRfndfrfr());
        }
        updbtfStylf(hfbdfr);
    }

    privbtf void updbtfStylf(JTbblfHfbdfr d) {
        SynthContfxt dontfxt = gftContfxt(d, ENABLED);
        SynthStylf oldStylf = stylf;
        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);
        if (stylf != oldStylf) {
            if (oldStylf != null) {
                uninstbllKfybobrdAdtions();
                instbllKfybobrdAdtions();
            }
        }
        dontfxt.disposf();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs() {
        supfr.instbllListfnfrs();
        hfbdfr.bddPropfrtyChbngfListfnfr(this);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults() {
        if (hfbdfr.gftDffbultRfndfrfr() instbndfof HfbdfrRfndfrfr) {
            hfbdfr.sftDffbultRfndfrfr(prfvRfndfrfr);
        }

        SynthContfxt dontfxt = gftContfxt(hfbdfr, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs() {
        hfbdfr.rfmovfPropfrtyChbngfListfnfr(this);
        supfr.uninstbllListfnfrs();
    }

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        SynthLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintTbblfHfbdfrBbdkground(dontfxt,
                          g, 0, 0, d.gftWidth(), d.gftHfight());
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt bddording to thf Look bnd Fffl.
     * <p>This mfthod is not usfd by Synth Look bnd Fffl.
     * Pbinting is hbndlfd by thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void pbint(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt.
     *
     * @pbrbm dontfxt dontfxt for thf domponfnt bfing pbintfd
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @sff #updbtf(Grbphids,JComponfnt)
     */
    protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
        supfr.pbint(g, dontfxt.gftComponfnt());
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        dontfxt.gftPbintfr().pbintTbblfHfbdfrBordfr(dontfxt, g, x, y, w, h);
    }
//
// SynthUI
//
    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, SynthLookAndFffl.gftComponfntStbtf(d));
    }

    privbtf SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    protfdtfd void rollovfrColumnUpdbtfd(int oldColumn, int nfwColumn) {
        hfbdfr.rfpbint(hfbdfr.gftHfbdfrRfdt(oldColumn));
        hfbdfr.rfpbint(hfbdfr.gftHfbdfrRfdt(nfwColumn));
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void propfrtyChbngf(PropfrtyChbngfEvfnt fvt) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(fvt)) {
            updbtfStylf((JTbblfHfbdfr)fvt.gftSourdf());
        }
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss HfbdfrRfndfrfr fxtfnds DffbultTbblfCfllHfbdfrRfndfrfr {
        HfbdfrRfndfrfr() {
            sftHorizontblAlignmfnt(JLbbfl.LEADING);
            sftNbmf("TbblfHfbdfr.rfndfrfr");
        }

        @Ovfrridf
        publid Componfnt gftTbblfCfllRfndfrfrComponfnt(JTbblf tbblf, Objfdt vbluf,
                                                       boolfbn isSflfdtfd,
                                                       boolfbn hbsFodus,
                                                       int row, int dolumn) {

            boolfbn hbsRollovfr = (dolumn == gftRollovfrColumn());
            if (isSflfdtfd || hbsRollovfr || hbsFodus) {
                SynthLookAndFffl.sftSflfdtfdUI((SynthLbbflUI)SynthLookAndFffl.
                             gftUIOfTypf(gftUI(), SynthLbbflUI.dlbss),
                             isSflfdtfd, hbsFodus, tbblf.isEnbblfd(),
                             hbsRollovfr);
            } flsf {
                SynthLookAndFffl.rfsftSflfdtfdUI();
            }

            //stuff b vbribblf into thf dlifnt propfrty of this rfndfrfr indidbting thf sort ordfr,
            //so thbt difffrfnt rfndfring dbn bf donf for thf hfbdfr bbsfd on sortfd stbtf.
            RowSortfr<?> rs = tbblf == null ? null : tbblf.gftRowSortfr();
            jbvb.util.List<? fxtfnds RowSortfr.SortKfy> sortKfys = rs == null ? null : rs.gftSortKfys();
            if (sortKfys != null && sortKfys.sizf() > 0 && sortKfys.gft(0).gftColumn() ==
                    tbblf.donvfrtColumnIndfxToModfl(dolumn)) {
                switdh(sortKfys.gft(0).gftSortOrdfr()) {
                    dbsf ASCENDING:
                        putClifntPropfrty("Tbblf.sortOrdfr", "ASCENDING");
                        brfbk;
                    dbsf DESCENDING:
                        putClifntPropfrty("Tbblf.sortOrdfr", "DESCENDING");
                        brfbk;
                    dbsf UNSORTED:
                        putClifntPropfrty("Tbblf.sortOrdfr", "UNSORTED");
                        brfbk;
                    dffbult:
                        throw nfw AssfrtionError("Cbnnot hbppfn");
                }
            } flsf {
                putClifntPropfrty("Tbblf.sortOrdfr", "UNSORTED");
            }

            supfr.gftTbblfCfllRfndfrfrComponfnt(tbblf, vbluf, isSflfdtfd,
                                                hbsFodus, row, dolumn);

            rfturn this;
        }

        @Ovfrridf
        publid void sftBordfr(Bordfr bordfr) {
            if (bordfr instbndfof SynthBordfr) {
                supfr.sftBordfr(bordfr);
            }
        }
    }
}
