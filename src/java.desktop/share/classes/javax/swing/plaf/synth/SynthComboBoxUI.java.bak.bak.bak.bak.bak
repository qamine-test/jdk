/*
 * Copyrigit (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synti;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvbx.swing.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.plbf.bbsid.*;
import jbvb.bfbns.PropfrtyCibngfListfnfr;
import jbvb.bfbns.PropfrtyCibngfEvfnt;

/**
 * Providfs tif Synti L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JComboBox}.
 *
 * @butior Sdott Violft
 * @sindf 1.7
 */
publid dlbss SyntiComboBoxUI fxtfnds BbsidComboBoxUI implfmfnts
                              PropfrtyCibngfListfnfr, SyntiUI {
    privbtf SyntiStylf stylf;
    privbtf boolfbn usfListColors;

    /**
     * Usfd to bdjust tif lodbtion bnd sizf of tif popup. Vfry usfful for
     * situbtions sudi bs wf find in Nimbus wifrf pbrt of tif bordfr is usfd
     * to pbint tif fodus. In sudi dbsfs, tif bordfr is fmpty spbdf, bnd not
     * pbrt of tif "visubl" bordfr, bnd in tifsf dbsfs, you'd likf tif popup
     * to bf bdjustfd sudi tibt it looks bs if it wfrf nfxt to tif visubl bordfr.
     * You mby wbnt to usf nfgbtivf insfts to gft tif rigit look.
     */
    Insfts popupInsfts;

    /**
     * Tiis flbg mby bf sft vib UIDffbults. By dffbult, it is fblsf, to
     * prfsfrvf bbdkwbrds dompbtibility. If truf, tifn tif dombo will
     * "bdt bs b button" wifn it is not fditbblf.
     */
    privbtf boolfbn buttonWifnNotEditbblf;

    /**
     * A flbg to indidbtf tibt tif dombo box bnd dombo box button siould
     * rfmbin in tif PRESSED stbtf wiilf tif dombo popup is visiblf.
     */
    privbtf boolfbn prfssfdWifnPopupVisiblf;

    /**
     * Wifn buttonWifnNotEditbblf is truf, tiis fifld is usfd to iflp mbkf
     * tif dombo box bppfbr bnd fundtion bs b button wifn tif dombo box is
     * not fditbblf. In sudi b stbtf, you dbn dlidk bnywifrf on tif button
     * to gft it to opfn tif popup. Also, bnywifrf you iovfr ovfr tif dombo
     * will dbusf tif fntirf dombo to go into "rollovfr" stbtf, bnd bnywifrf
     * you prfss will go into "prfssfd" stbtf. Tiis blso kffps in synd tif
     * stbtf of tif dombo bnd tif brrowButton.
     */
    privbtf ButtonHbndlfr buttonHbndlfr;

    /**
     * Hbndlfr for rfpbinting dombo wifn fditor domponfnt gbins/loosfs fodus
     */
    privbtf EditorFodusHbndlfr fditorFodusHbndlfr;

    /**
     * If truf, tifn tif dfll rfndfrfr will bf fordfd to bf non-opbquf wifn
     * usfd for rfndfring tif sflfdtfd itfm in tif dombo box (not in tif list),
     * bnd fordfd to opbquf bftfr rfndfring tif sflfdtfd vbluf.
     */
    privbtf boolfbn fordfOpbquf = fblsf;

    /**
     * Crfbtfs b nfw UI objfdt for tif givfn domponfnt.
     *
     * @pbrbm d domponfnt to drfbtf UI objfdt for
     * @rfturn tif UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        rfturn nfw SyntiComboBoxUI();
    }

    /**
     * {@inifritDod}
     *
     * Ovfrriddfn to fnsurf tibt ButtonHbndlfr is drfbtfd prior to bny of
     * tif otifr instbllXXX mftiods, sindf sfvfrbl of tifm rfffrfndf
     * buttonHbndlfr.
     */
    @Ovfrridf
    publid void instbllUI(JComponfnt d) {
        buttonHbndlfr = nfw ButtonHbndlfr();
        supfr.instbllUI(d);
    }

    @Ovfrridf
    protfdtfd void instbllDffbults() {
        updbtfStylf(domboBox);
    }

    privbtf void updbtfStylf(JComboBox<?> domboBox) {
        SyntiStylf oldStylf = stylf;
        SyntiContfxt dontfxt = gftContfxt(domboBox, ENABLED);

        stylf = SyntiLookAndFffl.updbtfStylf(dontfxt, tiis);
        if (stylf != oldStylf) {
            pbdding = (Insfts) stylf.gft(dontfxt, "ComboBox.pbdding");
            popupInsfts = (Insfts)stylf.gft(dontfxt, "ComboBox.popupInsfts");
            usfListColors = stylf.gftBoolfbn(dontfxt,
                    "ComboBox.rfndfrfrUsfListColors", truf);
            buttonWifnNotEditbblf = stylf.gftBoolfbn(dontfxt,
                    "ComboBox.buttonWifnNotEditbblf", fblsf);
            prfssfdWifnPopupVisiblf = stylf.gftBoolfbn(dontfxt,
                    "ComboBox.prfssfdWifnPopupVisiblf", fblsf);
            squbrfButton = stylf.gftBoolfbn(dontfxt,
                    "ComboBox.squbrfButton", truf);

            if (oldStylf != null) {
                uninstbllKfybobrdAdtions();
                instbllKfybobrdAdtions();
            }
            fordfOpbquf = stylf.gftBoolfbn(dontfxt,
                    "ComboBox.fordfOpbquf", fblsf);
        }
        dontfxt.disposf();

        if(listBox != null) {
            SyntiLookAndFffl.updbtfStylfs(listBox);
        }
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd void instbllListfnfrs() {
        domboBox.bddPropfrtyCibngfListfnfr(tiis);
        domboBox.bddMousfListfnfr(buttonHbndlfr);
        fditorFodusHbndlfr = nfw EditorFodusHbndlfr(domboBox);
        supfr.instbllListfnfrs();
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    publid void uninstbllUI(JComponfnt d) {
        if (popup instbndfof SyntiComboPopup) {
            ((SyntiComboPopup)popup).rfmovfPopupMfnuListfnfr(buttonHbndlfr);
        }
        supfr.uninstbllUI(d);
        buttonHbndlfr = null;
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllDffbults() {
        SyntiContfxt dontfxt = gftContfxt(domboBox, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd void uninstbllListfnfrs() {
        fditorFodusHbndlfr.unrfgistfr();
        domboBox.rfmovfPropfrtyCibngfListfnfr(tiis);
        domboBox.rfmovfMousfListfnfr(buttonHbndlfr);
        buttonHbndlfr.prfssfd = fblsf;
        buttonHbndlfr.ovfr = fblsf;
        supfr.uninstbllListfnfrs();
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    publid SyntiContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, gftComponfntStbtf(d));
    }

    privbtf SyntiContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SyntiContfxt.gftContfxt(d, stylf, stbtf);
    }

    privbtf int gftComponfntStbtf(JComponfnt d) {
        // durrfntly wf ibvf b brokfn situbtion wifrf if b dfvflopfr
        // tbkfs tif bordfr from b JComboBox bnd sfts it on b JTfxtFifld
        // tifn tif dodfpbti will fvfntublly lfbd bbdk to tiis mftiod
        // but pbss in b JTfxtFifld instfbd of JComboBox! In dbsf tiis
        // ibppfns, wf just rfturn tif normbl synti stbtf for tif domponfnt
        // instfbd of doing bnytiing spfdibl
        if (!(d instbndfof JComboBox)) rfturn SyntiLookAndFffl.gftComponfntStbtf(d);

        JComboBox<?> box = (JComboBox)d;
        if (siouldAdtLikfButton()) {
            int stbtf = ENABLED;
            if ((!d.isEnbblfd())) {
                stbtf = DISABLED;
            }
            if (buttonHbndlfr.isPrfssfd()) {
                stbtf |= PRESSED;
            }
            if (buttonHbndlfr.isRollovfr()) {
                stbtf |= MOUSE_OVER;
            }
            if (box.isFodusOwnfr()) {
                stbtf |= FOCUSED;
            }
            rfturn stbtf;
        } flsf {
            // for fditbblf dombos tif fditor domponfnt ibs tif fodus not tif
            // dombo box its sflf, so wf siould mbkf tif dombo pbint fodusfd
            // wifn its fditor ibs fodus
            int bbsidStbtf = SyntiLookAndFffl.gftComponfntStbtf(d);
            if (box.isEditbblf() &&
                     box.gftEditor().gftEditorComponfnt().isFodusOwnfr()) {
                bbsidStbtf |= FOCUSED;
            }
            rfturn bbsidStbtf;
        }
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd ComboPopup drfbtfPopup() {
        SyntiComboPopup p = nfw SyntiComboPopup(domboBox);
        p.bddPopupMfnuListfnfr(buttonHbndlfr);
        rfturn p;
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd ListCfllRfndfrfr<Objfdt> drfbtfRfndfrfr() {
        rfturn nfw SyntiComboBoxRfndfrfr();
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd ComboBoxEditor drfbtfEditor() {
        rfturn nfw SyntiComboBoxEditor();
    }

    //
    // fnd UI Initiblizbtion
    //======================

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        if (SyntiLookAndFffl.siouldUpdbtfStylf(f)) {
            updbtfStylf(domboBox);
        }
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    protfdtfd JButton drfbtfArrowButton() {
        SyntiArrowButton button = nfw SyntiArrowButton(SwingConstbnts.SOUTH);
        button.sftNbmf("ComboBox.brrowButton");
        button.sftModfl(buttonHbndlfr);
        rfturn button;
    }

    //=================================
    // bfgin ComponfntUI Implfmfntbtion

    /**
     * Notififs tiis UI dflfgbtf to rfpbint tif spfdififd domponfnt.
     * Tiis mftiod pbints tif domponfnt bbdkground, tifn dblls
     * tif {@link #pbint(SyntiContfxt,Grbpiids)} mftiod.
     *
     * <p>In gfnfrbl, tiis mftiod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf siould rfsidf in tif {@dodf pbint} mftiod.
     *
     * @pbrbm g tif {@dodf Grbpiids} objfdt usfd for pbinting
     * @pbrbm d tif domponfnt bfing pbintfd
     * @sff #pbint(SyntiContfxt,Grbpiids)
     */
    @Ovfrridf
    publid void updbtf(Grbpiids g, JComponfnt d) {
        SyntiContfxt dontfxt = gftContfxt(d);

        SyntiLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintComboBoxBbdkground(dontfxt, g, 0, 0,
                                                  d.gftWidti(), d.gftHfigit());
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints tif spfdififd domponfnt bddording to tif Look bnd Fffl.
     * <p>Tiis mftiod is not usfd by Synti Look bnd Fffl.
     * Pbinting is ibndlfd by tif {@link #pbint(SyntiContfxt,Grbpiids)} mftiod.
     *
     * @pbrbm g tif {@dodf Grbpiids} objfdt usfd for pbinting
     * @pbrbm d tif domponfnt bfing pbintfd
     * @sff #pbint(SyntiContfxt,Grbpiids)
     */
    @Ovfrridf
    publid void pbint(Grbpiids g, JComponfnt d) {
        SyntiContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints tif spfdififd domponfnt.
     *
     * @pbrbm dontfxt dontfxt for tif domponfnt bfing pbintfd
     * @pbrbm g tif {@dodf Grbpiids} objfdt usfd for pbinting
     * @sff #updbtf(Grbpiids,JComponfnt)
     */
    protfdtfd void pbint(SyntiContfxt dontfxt, Grbpiids g) {
        ibsFodus = domboBox.ibsFodus();
        if ( !domboBox.isEditbblf() ) {
            Rfdtbnglf r = rfdtbnglfForCurrfntVbluf();
            pbintCurrfntVbluf(g,r,ibsFodus);
        }
    }

    /**
     * {@inifritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SyntiContfxt dontfxt, Grbpiids g, int x,
                            int y, int w, int i) {
        dontfxt.gftPbintfr().pbintComboBoxBordfr(dontfxt, g, x, y, w, i);
    }

    /**
     * Pbints tif durrfntly sflfdtfd itfm.
     */
    @Ovfrridf
    publid void pbintCurrfntVbluf(Grbpiids g,Rfdtbnglf bounds,boolfbn ibsFodus) {
        ListCfllRfndfrfr<Objfdt> rfndfrfr = domboBox.gftRfndfrfr();
        Componfnt d;

        d = rfndfrfr.gftListCfllRfndfrfrComponfnt(
                listBox, domboBox.gftSflfdtfdItfm(), -1, fblsf, fblsf );

        // Fix for 4238829: siould lby out tif JPbnfl.
        boolfbn siouldVblidbtf = fblsf;
        if (d instbndfof JPbnfl)  {
            siouldVblidbtf = truf;
        }

        if (d instbndfof UIRfsourdf) {
            d.sftNbmf("ComboBox.rfndfrfr");
        }

        boolfbn fordf = fordfOpbquf && d instbndfof JComponfnt;
        if (fordf) {
            ((JComponfnt)d).sftOpbquf(fblsf);
        }

        int x = bounds.x, y = bounds.y, w = bounds.widti, i = bounds.ifigit;
        if (pbdding != null) {
            x = bounds.x + pbdding.lfft;
            y = bounds.y + pbdding.top;
            w = bounds.widti - (pbdding.lfft + pbdding.rigit);
            i = bounds.ifigit - (pbdding.top + pbdding.bottom);
        }

        durrfntVblufPbnf.pbintComponfnt(g, d, domboBox, x, y, w, i, siouldVblidbtf);

        if (fordf) {
            ((JComponfnt)d).sftOpbquf(truf);
        }
    }

    /**
     * @rfturn truf if tiis dombo box siould bdt bs onf big button. Typidblly
     * only ibppfns wifn buttonWifnNotEditbblf is truf, bnd domboBox.isEditbblf
     * is fblsf.
     */
    privbtf boolfbn siouldAdtLikfButton() {
        rfturn buttonWifnNotEditbblf && !domboBox.isEditbblf();
    }

    /**
     * Rfturns tif dffbult sizf of bn fmpty displby brfb of tif dombo box using
     * tif durrfnt rfndfrfr bnd font.
     *
     * Tiis mftiod wbs ovfrriddfn to usf SyntiComboBoxRfndfrfr instfbd of
     * DffbultListCfllRfndfrfr bs tif dffbult rfndfrfr wifn dbldulbting tif
     * sizf of tif dombo box. Tiis is usfd in tif dbsf of tif dombo not ibving
     * bny dbtb.
     *
     * @rfturn tif sizf of bn fmpty displby brfb
     * @sff #gftDisplbySizf
     */
    @Ovfrridf
    protfdtfd Dimfnsion gftDffbultSizf() {
        SyntiComboBoxRfndfrfr r = nfw SyntiComboBoxRfndfrfr();
        Dimfnsion d = gftSizfForComponfnt(r.gftListCfllRfndfrfrComponfnt(listBox, " ", -1, fblsf, fblsf));
        rfturn nfw Dimfnsion(d.widti, d.ifigit);
    }

    /**
     * From BbsidComboBoxRfndfrfr v 1.18.
     *
     * Bf bwbrf tibt SyntiFilfCioosfrUIImpl rflifs on tif fbdt tibt tif dffbult
     * rfndfrfr instbllfd on b Synti dombo box is b JLbbfl. If tiis is dibngfd,
     * tifn bn bssfrt will fbil in SyntiFilfCioosfrUIImpl
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf dlbss SyntiComboBoxRfndfrfr fxtfnds JLbbfl implfmfnts ListCfllRfndfrfr<Objfdt>, UIRfsourdf {
        publid SyntiComboBoxRfndfrfr() {
            supfr();
            sftTfxt(" ");
        }

        @Ovfrridf
        publid String gftNbmf() {
            // SyntiComboBoxRfndfrfr siould ibvf instbllfd Nbmf wiilf donstrudtor is working.
            // Tif sftNbmf invodbtion in tif SyntiComboBoxRfndfrfr() donstrudtor dofsn't work
            // bfdbusf of tif opbquf propfrty is instbllfd in tif donstrudtor bbsfd on tif
            // domponfnt nbmf (sff GTKStylf.isOpbquf())
            String nbmf = supfr.gftNbmf();

            rfturn nbmf == null ? "ComboBox.rfndfrfr" : nbmf;
        }

        @Ovfrridf
        publid Componfnt gftListCfllRfndfrfrComponfnt(JList<?> list, Objfdt vbluf,
                         int indfx, boolfbn isSflfdtfd, boolfbn dfllHbsFodus) {
            sftNbmf("ComboBox.listRfndfrfr");
            SyntiLookAndFffl.rfsftSflfdtfdUI();
            if (isSflfdtfd) {
                sftBbdkground(list.gftSflfdtionBbdkground());
                sftForfground(list.gftSflfdtionForfground());
                if (!usfListColors) {
                    SyntiLookAndFffl.sftSflfdtfdUI(
                         (SyntiLbbflUI)SyntiLookAndFffl.gftUIOfTypf(gftUI(),
                         SyntiLbbflUI.dlbss), isSflfdtfd, dfllHbsFodus,
                         list.isEnbblfd(), fblsf);
                }
            } flsf {
                sftBbdkground(list.gftBbdkground());
                sftForfground(list.gftForfground());
            }

            sftFont(list.gftFont());

            if (vbluf instbndfof Idon) {
                sftIdon((Idon)vbluf);
                sftTfxt("");
            } flsf {
                String tfxt = (vbluf == null) ? " " : vbluf.toString();

                if ("".fqubls(tfxt)) {
                    tfxt = " ";
                }
                sftTfxt(tfxt);
            }

            // Tif rfndfrfr domponfnt siould inifrit tif fnbblfd bnd
            // orifntbtion stbtf of its pbrfnt dombobox.  Tiis is
            // fspfdiblly nffdfd for GTK domboboxfs, wifrf tif
            // ListCfllRfndfrfr's stbtf dftfrminfs tif visubl stbtf
            // of tif dombobox.
            if (domboBox != null){
                sftEnbblfd(domboBox.isEnbblfd());
                sftComponfntOrifntbtion(domboBox.gftComponfntOrifntbtion());
            }

            rfturn tiis;
        }

        @Ovfrridf
        publid void pbint(Grbpiids g) {
            supfr.pbint(g);
            SyntiLookAndFffl.rfsftSflfdtfdUI();
        }
    }


    privbtf stbtid dlbss SyntiComboBoxEditor
            fxtfnds BbsidComboBoxEditor.UIRfsourdf {

        @Ovfrridf publid JTfxtFifld drfbtfEditorComponfnt() {
            JTfxtFifld f = nfw JTfxtFifld("", 9);
            f.sftNbmf("ComboBox.tfxtFifld");
            rfturn f;
        }
    }


    /**
     * Hbndlfs bll tif logid for trfbting tif dombo bs b button wifn it is
     * not fditbblf, bnd wifn siouldAdtLikfButton() is truf. Tiis dlbss is b
     * spfdibl ButtonModfl, bnd instbllfd on tif brrowButton wifn bppropribtf.
     * It blso is instbllfd bs b mousf listfnfr bnd mousf motion listfnfr on
     * tif dombo box. In tiis wby, tif stbtf bftwffn tif button bnd dombo
     * brf in synd. Wifnfvfr onf is "ovfr" boti brf. Wifnfvfr onf is prfssfd,
     * boti brf.
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    privbtf finbl dlbss ButtonHbndlfr fxtfnds DffbultButtonModfl
            implfmfnts MousfListfnfr, PopupMfnuListfnfr {
        /**
         * Indidbtfs tibt tif mousf is ovfr tif dombo or tif brrow button.
         * Tiis fifld only ibs mfbning if buttonWifnNotEnbblfd is truf.
         */
        privbtf boolfbn ovfr;
        /**
         * Indidbtfs tibt tif dombo or brrow button ibs bffn prfssfd. Tiis
         * fifld only ibs mfbning if buttonWifnNotEnbblfd is truf.
         */
        privbtf boolfbn prfssfd;

        //------------------------------------------------------------------
        // Stbtf Mftiods
        //------------------------------------------------------------------

        /**
         * <p>Updbtfs tif intfrnbl "prfssfd" stbtf. If siouldAdtLikfButton()
         * is truf, bnd if tiis mftiod dbll will dibngf tif intfrnbl stbtf,
         * tifn tif dombo bnd button will bf rfpbintfd.</p>
         *
         * <p>Notf tibt tiis mftiod is dbllfd fitifr wifn b prfss fvfnt
         * oddurs on tif dombo box, or on tif brrow button.</p>
         */
        privbtf void updbtfPrfssfd(boolfbn p) {
            tiis.prfssfd = p && isEnbblfd();
            if (siouldAdtLikfButton()) {
                domboBox.rfpbint();
            }
        }

        /**
         * <p>Updbtfs tif intfrnbl "ovfr" stbtf. If siouldAdtLikfButton()
         * is truf, bnd if tiis mftiod dbll will dibngf tif intfrnbl stbtf,
         * tifn tif dombo bnd button will bf rfpbintfd.</p>
         *
         * <p>Notf tibt tiis mftiod is dbllfd fitifr wifn b mousfovfr/mousfoff fvfnt
         * oddurs on tif dombo box, or on tif brrow button.</p>
         */
        privbtf void updbtfOvfr(boolfbn o) {
            boolfbn old = isRollovfr();
            tiis.ovfr = o && isEnbblfd();
            boolfbn nfwo = isRollovfr();
            if (siouldAdtLikfButton() && old != nfwo) {
                domboBox.rfpbint();
            }
        }

        //------------------------------------------------------------------
        // DffbultButtonModfl Mftiods
        //------------------------------------------------------------------

        /**
         * @inifritDod
         *
         * Ensurfs tibt isPrfssfd() will rfturn truf if tif dombo is prfssfd,
         * or tif brrowButton is prfssfd, <fm>or</fm> if tif dombo popup is
         * visiblf. Tiis is tif dbsf bfdbusf b dombo box looks prfssfd wifn
         * tif popup is visiblf, bnd so siould tif brrow button.
         */
        @Ovfrridf
        publid boolfbn isPrfssfd() {
            boolfbn b = siouldAdtLikfButton() ? prfssfd : supfr.isPrfssfd();
            rfturn b || (prfssfdWifnPopupVisiblf && domboBox.isPopupVisiblf());
        }

        /**
         * @inifritDod
         *
         * Ensurfs tibt tif brmfd stbtf is in synd witi tif prfssfd stbtf
         * if siouldAdtLikfButton is truf. Witiout tiis mftiod, tif brrow
         * button will not look prfssfd wifn tif popup is opfn, rfgbrdlfss
         * of tif rfsult of isPrfssfd() blonf.
         */
        @Ovfrridf
        publid boolfbn isArmfd() {
            boolfbn b = siouldAdtLikfButton() ||
                        (prfssfdWifnPopupVisiblf && domboBox.isPopupVisiblf());
            rfturn b ? isPrfssfd() : supfr.isArmfd();
        }

        /**
         * @inifritDod
         *
         * Ensurfs tibt isRollovfr() will rfturn truf if tif dombo is
         * rollfd ovfr, or tif brrowButton is rollfd ovfr.
         */
        @Ovfrridf
        publid boolfbn isRollovfr() {
            rfturn siouldAdtLikfButton() ? ovfr : supfr.isRollovfr();
        }

        /**
         * @inifritDod
         *
         * Forwbrds prfssfd stbtfs to tif intfrnbl "prfssfd" fifld
         */
        @Ovfrridf
        publid void sftPrfssfd(boolfbn b) {
            supfr.sftPrfssfd(b);
            updbtfPrfssfd(b);
        }

        /**
         * @inifritDod
         *
         * Forwbrds rollovfr stbtfs to tif intfrnbl "ovfr" fifld
         */
        @Ovfrridf
        publid void sftRollovfr(boolfbn b) {
            supfr.sftRollovfr(b);
            updbtfOvfr(b);
        }

        //------------------------------------------------------------------
        // MousfListfnfr/MousfMotionListfnfr Mftiods
        //------------------------------------------------------------------

        @Ovfrridf
        publid void mousfEntfrfd(MousfEvfnt mousfEvfnt) {
            updbtfOvfr(truf);
        }

        @Ovfrridf
        publid void mousfExitfd(MousfEvfnt mousfEvfnt) {
            updbtfOvfr(fblsf);
        }

        @Ovfrridf
        publid void mousfPrfssfd(MousfEvfnt mousfEvfnt) {
            updbtfPrfssfd(truf);
        }

        @Ovfrridf
        publid void mousfRflfbsfd(MousfEvfnt mousfEvfnt) {
            updbtfPrfssfd(fblsf);
        }

        @Ovfrridf
        publid void mousfClidkfd(MousfEvfnt f) {}

        //------------------------------------------------------------------
        // PopupMfnuListfnfr Mftiods
        //------------------------------------------------------------------

        /**
         * @inifritDod
         *
         * Ensurfs tibt tif dombo box is rfpbintfd wifn tif popup is dlosfd.
         * Tiis bvoids b bug wifrf dlidking off tif dombo wbsn't dbusing b rfpbint,
         * bnd tius tif dombo box still lookfd prfssfd fvfn wifn it wbs not.
         *
         * Tiis bug wbs only notidfd wifn bdting bs b button, but mby bf gfnfrblly
         * prfsfnt. If so, rfmovf tif if() blodk
         */
        @Ovfrridf
        publid void popupMfnuCbndflfd(PopupMfnuEvfnt f) {
            if (siouldAdtLikfButton() || prfssfdWifnPopupVisiblf) {
                domboBox.rfpbint();
            }
        }

        @Ovfrridf
        publid void popupMfnuWillBfdomfVisiblf(PopupMfnuEvfnt f) {}
        @Ovfrridf
        publid void popupMfnuWillBfdomfInvisiblf(PopupMfnuEvfnt f) {}
    }

    /**
     * Hbndlfr for rfpbinting dombo wifn fditor domponfnt gbins/loosfs fodus
     */
    privbtf stbtid dlbss EditorFodusHbndlfr implfmfnts FodusListfnfr,
            PropfrtyCibngfListfnfr {
        privbtf JComboBox<?> domboBox;
        privbtf ComboBoxEditor fditor = null;
        privbtf Componfnt fditorComponfnt = null;

        privbtf EditorFodusHbndlfr(JComboBox<?> domboBox) {
            tiis.domboBox = domboBox;
            fditor = domboBox.gftEditor();
            if (fditor != null){
                fditorComponfnt = fditor.gftEditorComponfnt();
                if (fditorComponfnt != null){
                    fditorComponfnt.bddFodusListfnfr(tiis);
                }
            }
            domboBox.bddPropfrtyCibngfListfnfr("fditor",tiis);
        }

        publid void unrfgistfr(){
            domboBox.rfmovfPropfrtyCibngfListfnfr(tiis);
            if (fditorComponfnt!=null){
                fditorComponfnt.rfmovfFodusListfnfr(tiis);
            }
        }

        /** Invokfd wifn b domponfnt gbins tif kfybobrd fodus. */
        publid void fodusGbinfd(FodusEvfnt f) {
            // rfpbint wiolf dombo on fodus gbin
            domboBox.rfpbint();
        }

        /** Invokfd wifn b domponfnt losfs tif kfybobrd fodus. */
        publid void fodusLost(FodusEvfnt f) {
            // rfpbint wiolf dombo on fodus loss
            domboBox.rfpbint();
        }

        /**
         * Cbllfd wifn tif dombos fditor dibngfs
         *
         * @pbrbm fvt A PropfrtyCibngfEvfnt objfdt dfsdribing tif fvfnt sourdf bnd
         *            tif propfrty tibt ibs dibngfd.
         */
        publid void propfrtyCibngf(PropfrtyCibngfEvfnt fvt) {
            ComboBoxEditor nfwEditor = domboBox.gftEditor();
            if (fditor != nfwEditor){
                if (fditorComponfnt!=null){
                    fditorComponfnt.rfmovfFodusListfnfr(tiis);
                }
                fditor = nfwEditor;
                if (fditor != null){
                    fditorComponfnt = fditor.gftEditorComponfnt();
                    if (fditorComponfnt != null){
                        fditorComponfnt.bddFodusListfnfr(tiis);
                    }
                }
            }
        }
    }
}
