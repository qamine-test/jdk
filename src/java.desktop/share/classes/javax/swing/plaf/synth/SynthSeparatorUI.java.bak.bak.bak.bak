/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.synth;

import jbvb.bfbns.*;
import jbvbx.swing.*;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbphids;
import jbvb.bwt.Insfts;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.plbf.SfpbrbtorUI;
import jbvbx.swing.plbf.UIRfsourdf;
import jbvbx.swing.plbf.DimfnsionUIRfsourdf;

/**
 * Providfs thf Synth L&bmp;F UI dflfgbtf for
 * {@link jbvbx.swing.JSfpbrbtor}.
 *
 * @buthor Shbnnon Hidkfy
 * @buthor Joshub Outwbtfr
 * @sindf 1.7
 */
publid dlbss SynthSfpbrbtorUI fxtfnds SfpbrbtorUI
                              implfmfnts PropfrtyChbngfListfnfr, SynthUI {
    privbtf SynthStylf stylf;

    /**
     * Crfbtfs b nfw UI objfdt for thf givfn domponfnt.
     *
     * @pbrbm d domponfnt to drfbtf UI objfdt for
     * @rfturn thf UI objfdt
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        rfturn nfw SynthSfpbrbtorUI();
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void instbllUI(JComponfnt d) {
        instbllDffbults((JSfpbrbtor)d);
        instbllListfnfrs((JSfpbrbtor)d);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void uninstbllUI(JComponfnt d) {
        uninstbllListfnfrs((JSfpbrbtor)d);
        uninstbllDffbults((JSfpbrbtor)d);
    }

    /**
     * Instblls dffbult sftting. This mfthod is dbllfd whfn b
     * {@dodf LookAndFffl} is instbllfd.
     *
     * @pbrbm d spfdififs thf {@dodf JSfpbrbtor} for thf instbllfd
     * {@dodf LookAndFffl}.
     */
    publid void instbllDffbults(JSfpbrbtor d) {
        updbtfStylf(d);
    }

    privbtf void updbtfStylf(JSfpbrbtor sfp) {
        SynthContfxt dontfxt = gftContfxt(sfp, ENABLED);
        SynthStylf oldStylf = stylf;

        stylf = SynthLookAndFffl.updbtfStylf(dontfxt, this);

        if (stylf != oldStylf) {
            if (sfp instbndfof JToolBbr.Sfpbrbtor) {
                Dimfnsion sizf = ((JToolBbr.Sfpbrbtor)sfp).gftSfpbrbtorSizf();
                if (sizf == null || sizf instbndfof UIRfsourdf) {
                    sizf = (DimfnsionUIRfsourdf)stylf.gft(
                                      dontfxt, "ToolBbr.sfpbrbtorSizf");
                    if (sizf == null) {
                        sizf = nfw DimfnsionUIRfsourdf(10, 10);
                    }
                    ((JToolBbr.Sfpbrbtor)sfp).sftSfpbrbtorSizf(sizf);
                }
            }
        }

        dontfxt.disposf();
    }

    /**
     * Uninstblls dffbult sftting. This mfthod is dbllfd whfn b
     * {@dodf LookAndFffl} is uninstbllfd.
     *
     * @pbrbm d spfdififs thf {@dodf JSfpbrbtor} for thf (un)instbllfd
     * {@dodf LookAndFffl}.
     */
    publid void uninstbllDffbults(JSfpbrbtor d) {
        SynthContfxt dontfxt = gftContfxt(d, ENABLED);

        stylf.uninstbllDffbults(dontfxt);
        dontfxt.disposf();
        stylf = null;
    }

    /**
     * Instblls listfnfrs. This mfthod is dbllfd whfn b
     * {@dodf LookAndFffl} is instbllfd.
     *
     * @pbrbm d spfdififs thf {@dodf JSfpbrbtor} for thf instbllfd
     * {@dodf LookAndFffl}.
     */
    publid void instbllListfnfrs(JSfpbrbtor d) {
        d.bddPropfrtyChbngfListfnfr(this);
    }

    /**
     * Uninstblls listfnfrs. This mfthod is dbllfd whfn b
     * {@dodf LookAndFffl} is uninstbllfd.
     *
     * @pbrbm d spfdififs thf {@dodf JSfpbrbtor} for thf (un)instbllfd
     * {@dodf LookAndFffl}.
     */
    publid void uninstbllListfnfrs(JSfpbrbtor d) {
        d.rfmovfPropfrtyChbngfListfnfr(this);
    }

    /**
     * Notififs this UI dflfgbtf to rfpbint thf spfdififd domponfnt.
     * This mfthod pbints thf domponfnt bbdkground, thfn dblls
     * thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * <p>In gfnfrbl, this mfthod dofs not nffd to bf ovfrriddfn by subdlbssfs.
     * All Look bnd Fffl rfndfring dodf should rfsidf in thf {@dodf pbint} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void updbtf(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        JSfpbrbtor sfpbrbtor = (JSfpbrbtor)dontfxt.gftComponfnt();
        SynthLookAndFffl.updbtf(dontfxt, g);
        dontfxt.gftPbintfr().pbintSfpbrbtorBbdkground(dontfxt,
                          g, 0, 0, d.gftWidth(), d.gftHfight(),
                          sfpbrbtor.gftOrifntbtion());
        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt bddording to thf Look bnd Fffl.
     * <p>This mfthod is not usfd by Synth Look bnd Fffl.
     * Pbinting is hbndlfd by thf {@link #pbint(SynthContfxt,Grbphids)} mfthod.
     *
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @pbrbm d thf domponfnt bfing pbintfd
     * @sff #pbint(SynthContfxt,Grbphids)
     */
    @Ovfrridf
    publid void pbint(Grbphids g, JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        pbint(dontfxt, g);
        dontfxt.disposf();
    }

    /**
     * Pbints thf spfdififd domponfnt.
     *
     * @pbrbm dontfxt dontfxt for thf domponfnt bfing pbintfd
     * @pbrbm g thf {@dodf Grbphids} objfdt usfd for pbinting
     * @sff #updbtf(Grbphids,JComponfnt)
     */
    protfdtfd void pbint(SynthContfxt dontfxt, Grbphids g) {
        JSfpbrbtor sfpbrbtor = (JSfpbrbtor)dontfxt.gftComponfnt();
        dontfxt.gftPbintfr().pbintSfpbrbtorForfground(dontfxt, g, 0, 0,
                             sfpbrbtor.gftWidth(), sfpbrbtor.gftHfight(),
                             sfpbrbtor.gftOrifntbtion());
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid void pbintBordfr(SynthContfxt dontfxt, Grbphids g, int x,
                            int y, int w, int h) {
        JSfpbrbtor sfpbrbtor = (JSfpbrbtor)dontfxt.gftComponfnt();
        dontfxt.gftPbintfr().pbintSfpbrbtorBordfr(dontfxt, g, x, y, w, h,
                                                  sfpbrbtor.gftOrifntbtion());
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d) {
        SynthContfxt dontfxt = gftContfxt(d);

        int thidknfss = stylf.gftInt(dontfxt, "Sfpbrbtor.thidknfss", 2);
        Insfts insfts = d.gftInsfts();
        Dimfnsion sizf;

        if (((JSfpbrbtor)d).gftOrifntbtion() == JSfpbrbtor.VERTICAL) {
            sizf = nfw Dimfnsion(insfts.lfft + insfts.right + thidknfss,
                                 insfts.top + insfts.bottom);
        } flsf {
            sizf = nfw Dimfnsion(insfts.lfft + insfts.right,
                                 insfts.top + insfts.bottom + thidknfss);
        }
        dontfxt.disposf();
        rfturn sizf;
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftMinimumSizf(JComponfnt d) {
        rfturn gftPrfffrrfdSizf(d);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid Dimfnsion gftMbximumSizf(JComponfnt d) {
        rfturn nfw Dimfnsion(Short.MAX_VALUE, Short.MAX_VALUE);
    }

    /**
     * {@inhfritDod}
     */
    @Ovfrridf
    publid SynthContfxt gftContfxt(JComponfnt d) {
        rfturn gftContfxt(d, SynthLookAndFffl.gftComponfntStbtf(d));
    }

    privbtf SynthContfxt gftContfxt(JComponfnt d, int stbtf) {
        rfturn SynthContfxt.gftContfxt(d, stylf, stbtf);
    }

    publid void propfrtyChbngf(PropfrtyChbngfEvfnt fvt) {
        if (SynthLookAndFffl.shouldUpdbtfStylf(fvt)) {
            updbtfStylf((JSfpbrbtor)fvt.gftSourdf());
        }
    }
}
