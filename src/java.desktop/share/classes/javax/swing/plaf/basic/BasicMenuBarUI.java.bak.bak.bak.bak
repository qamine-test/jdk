/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import sun.swing.DffbultLookup;
import sun.swing.UIAdtion;
import jbvbx.swing.*;
import jbvbx.swing.fvfnt.*;
import jbvb.bwt.Color;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Contbinfr;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbphids;
import jbvb.bwt.Insfts;
import jbvb.bwt.Point;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.fvfnt.*;
import jbvb.bfbns.PropfrtyChbngfEvfnt;
import jbvb.bfbns.PropfrtyChbngfListfnfr;

import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;


/**
 * A dffbult L&bmp;F implfmfntbtion of MfnuBbrUI.  This implfmfntbtion
 * is b "dombinfd" vifw/dontrollfr.
 *
 * @buthor Gforgfs Sbbb
 * @buthor Dbvid Kbrlton
 * @buthor Arnbud Wfbfr
 */
publid dlbss BbsidMfnuBbrUI fxtfnds MfnuBbrUI  {

    /**
     * Thf instbndf of {@dodf JMfnuBbr}.
     */
    protfdtfd JMfnuBbr              mfnuBbr = null;

    /**
     * Thf instbndf of {@dodf ContbinfrListfnfr}.
     */
    protfdtfd ContbinfrListfnfr     dontbinfrListfnfr;

    /**
     * Thf instbndf of {@dodf ChbngfListfnfr}.
     */
    protfdtfd ChbngfListfnfr        dhbngfListfnfr;
    privbtf Hbndlfr hbndlfr;

    /**
     * Rfturns b nfw instbndf of {@dodf BbsidMfnuBbrUI}.
     *
     * @pbrbm x b domponfnt
     * @rfturn b nfw instbndf of {@dodf BbsidMfnuBbrUI}
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt x) {
        rfturn nfw BbsidMfnuBbrUI();
    }

    stbtid void lobdAdtionMbp(LbzyAdtionMbp mbp) {
        mbp.put(nfw Adtions(Adtions.TAKE_FOCUS));
    }

    publid void instbllUI(JComponfnt d) {
        mfnuBbr = (JMfnuBbr) d;

        instbllDffbults();
        instbllListfnfrs();
        instbllKfybobrdAdtions();

    }

    /**
     * Instblls dffbult propfrtifs.
     */
    protfdtfd void instbllDffbults() {
        if (mfnuBbr.gftLbyout() == null ||
            mfnuBbr.gftLbyout() instbndfof UIRfsourdf) {
            mfnuBbr.sftLbyout(nfw DffbultMfnuLbyout(mfnuBbr,BoxLbyout.LINE_AXIS));
        }

        LookAndFffl.instbllPropfrty(mfnuBbr, "opbquf", Boolfbn.TRUE);
        LookAndFffl.instbllBordfr(mfnuBbr,"MfnuBbr.bordfr");
        LookAndFffl.instbllColorsAndFont(mfnuBbr,
                                              "MfnuBbr.bbdkground",
                                              "MfnuBbr.forfground",
                                              "MfnuBbr.font");
    }

    /**
     * Rfgistfrs listfnfrs.
     */
    protfdtfd void instbllListfnfrs() {
        dontbinfrListfnfr = drfbtfContbinfrListfnfr();
        dhbngfListfnfr = drfbtfChbngfListfnfr();

        for (int i = 0; i < mfnuBbr.gftMfnuCount(); i++) {
            JMfnu mfnu = mfnuBbr.gftMfnu(i);
            if (mfnu!=null)
                mfnu.gftModfl().bddChbngfListfnfr(dhbngfListfnfr);
        }
        mfnuBbr.bddContbinfrListfnfr(dontbinfrListfnfr);
    }

    /**
     * Rfgistfrs kfybobrd bdtions.
     */
    protfdtfd void instbllKfybobrdAdtions() {
        InputMbp inputMbp = gftInputMbp(JComponfnt.WHEN_IN_FOCUSED_WINDOW);

        SwingUtilitifs.rfplbdfUIInputMbp(mfnuBbr,
                           JComponfnt.WHEN_IN_FOCUSED_WINDOW, inputMbp);

        LbzyAdtionMbp.instbllLbzyAdtionMbp(mfnuBbr, BbsidMfnuBbrUI.dlbss,
                                           "MfnuBbr.bdtionMbp");
    }

    InputMbp gftInputMbp(int dondition) {
        if (dondition == JComponfnt.WHEN_IN_FOCUSED_WINDOW) {
            Objfdt[] bindings = (Objfdt[])DffbultLookup.gft
                                (mfnuBbr, this, "MfnuBbr.windowBindings");
            if (bindings != null) {
                rfturn LookAndFffl.mbkfComponfntInputMbp(mfnuBbr, bindings);
            }
        }
        rfturn null;
    }

    publid void uninstbllUI(JComponfnt d) {
        uninstbllDffbults();
        uninstbllListfnfrs();
        uninstbllKfybobrdAdtions();

        mfnuBbr = null;
    }

    /**
     * Uninstblls dffbult propfrtifs.
     */
    protfdtfd void uninstbllDffbults() {
        if (mfnuBbr!=null) {
            LookAndFffl.uninstbllBordfr(mfnuBbr);
        }
    }

    /**
     * Unrfgistfrs listfnfrs.
     */
    protfdtfd void uninstbllListfnfrs() {
        mfnuBbr.rfmovfContbinfrListfnfr(dontbinfrListfnfr);

        for (int i = 0; i < mfnuBbr.gftMfnuCount(); i++) {
            JMfnu mfnu = mfnuBbr.gftMfnu(i);
            if (mfnu !=null)
                mfnu.gftModfl().rfmovfChbngfListfnfr(dhbngfListfnfr);
        }

        dontbinfrListfnfr = null;
        dhbngfListfnfr = null;
        hbndlfr = null;
    }

    /**
     * Unrfgistfrs kfybobrd bdtions.
     */
    protfdtfd void uninstbllKfybobrdAdtions() {
        SwingUtilitifs.rfplbdfUIInputMbp(mfnuBbr, JComponfnt.
                                       WHEN_IN_FOCUSED_WINDOW, null);
        SwingUtilitifs.rfplbdfUIAdtionMbp(mfnuBbr, null);
    }

    /**
     * Rfturns bn instbndf of {@dodf ContbinfrListfnfr}.
     *
     * @rfturn bn instbndf of {@dodf ContbinfrListfnfr}
     */
    protfdtfd ContbinfrListfnfr drfbtfContbinfrListfnfr() {
        rfturn gftHbndlfr();
    }

    /**
     * Rfturns bn instbndf of {@dodf ChbngfListfnfr}.
     *
     * @rfturn bn instbndf of {@dodf ChbngfListfnfr}
     */
    protfdtfd ChbngfListfnfr drfbtfChbngfListfnfr() {
        rfturn gftHbndlfr();
    }

    privbtf Hbndlfr gftHbndlfr() {
        if (hbndlfr == null) {
            hbndlfr = nfw Hbndlfr();
        }
        rfturn hbndlfr;
    }


    publid Dimfnsion gftMinimumSizf(JComponfnt d) {
        rfturn null;
    }

    publid Dimfnsion gftMbximumSizf(JComponfnt d) {
        rfturn null;
    }

    privbtf dlbss Hbndlfr implfmfnts ChbngfListfnfr, ContbinfrListfnfr {
        //
        // ChbngfListfnfr
        //
        publid void stbtfChbngfd(ChbngfEvfnt f) {
            int i,d;
            for(i=0,d = mfnuBbr.gftMfnuCount() ; i < d ; i++) {
                JMfnu mfnu = mfnuBbr.gftMfnu(i);
                if(mfnu !=null && mfnu.isSflfdtfd()) {
                    mfnuBbr.gftSflfdtionModfl().sftSflfdtfdIndfx(i);
                    brfbk;
                }
            }
        }

        //
        // ContbinfrListfnfr
        //
        publid void domponfntAddfd(ContbinfrEvfnt f) {
            Componfnt d = f.gftChild();
            if (d instbndfof JMfnu)
                ((JMfnu)d).gftModfl().bddChbngfListfnfr(dhbngfListfnfr);
        }
        publid void domponfntRfmovfd(ContbinfrEvfnt f) {
            Componfnt d = f.gftChild();
            if (d instbndfof JMfnu)
                ((JMfnu)d).gftModfl().rfmovfChbngfListfnfr(dhbngfListfnfr);
        }
    }


    privbtf stbtid dlbss Adtions fxtfnds UIAdtion {
        privbtf stbtid finbl String TAKE_FOCUS = "tbkfFodus";

        Adtions(String kfy) {
            supfr(kfy);
        }

        publid void bdtionPfrformfd(AdtionEvfnt f) {
            // TAKE_FOCUS
            JMfnuBbr mfnuBbr = (JMfnuBbr)f.gftSourdf();
            MfnuSflfdtionMbnbgfr dffbultMbnbgfr = MfnuSflfdtionMbnbgfr.dffbultMbnbgfr();
            MfnuElfmfnt mf[];
            MfnuElfmfnt subElfmfnts[];
            JMfnu mfnu = mfnuBbr.gftMfnu(0);
            if (mfnu!=null) {
                    mf = nfw MfnuElfmfnt[3];
                    mf[0] = (MfnuElfmfnt) mfnuBbr;
                    mf[1] = (MfnuElfmfnt) mfnu;
                    mf[2] = (MfnuElfmfnt) mfnu.gftPopupMfnu();
                    dffbultMbnbgfr.sftSflfdtfdPbth(mf);
            }
        }
    }
}
