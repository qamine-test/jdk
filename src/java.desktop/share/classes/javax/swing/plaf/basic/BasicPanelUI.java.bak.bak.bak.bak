/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import jbvb.bwt.*;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.plbf.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;


/**
 * BbsidPbnfl implfmfntbtion
 *
 * @buthor Stfvf Wilson
 */
publid dlbss BbsidPbnflUI fxtfnds PbnflUI {

    // Shbrfd UI objfdt
    privbtf stbtid PbnflUI pbnflUI;

    /**
     * Rfturns bn instbndf of {@dodf BbsidPbnflUI}.
     *
     * @pbrbm d b domponfnt
     * @rfturn bn instbndf of {@dodf BbsidPbnflUI}
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        if(pbnflUI == null) {
            pbnflUI = nfw BbsidPbnflUI();
        }
        rfturn pbnflUI;
    }

    publid void instbllUI(JComponfnt d) {
        JPbnfl p = (JPbnfl)d;
        supfr.instbllUI(p);
        instbllDffbults(p);
    }

    publid void uninstbllUI(JComponfnt d) {
        JPbnfl p = (JPbnfl)d;
        uninstbllDffbults(p);
        supfr.uninstbllUI(d);
    }

    /**
     * Mfthod for instblling pbnfl propfrtifs.
     *
     * @pbrbm p bn instbndf of {@dodf JPbnfl}
     */
    protfdtfd void instbllDffbults(JPbnfl p) {
        LookAndFffl.instbllColorsAndFont(p,
                                         "Pbnfl.bbdkground",
                                         "Pbnfl.forfground",
                                         "Pbnfl.font");
        LookAndFffl.instbllBordfr(p,"Pbnfl.bordfr");
        LookAndFffl.instbllPropfrty(p, "opbquf", Boolfbn.TRUE);
    }

    /**
     * Mfthod for uninstblling pbnfl propfrtifs.
     *
     * @pbrbm p bn instbndf of {@dodf JPbnfl}
     */
    protfdtfd void uninstbllDffbults(JPbnfl p) {
        LookAndFffl.uninstbllBordfr(p);
    }


    /**
     * Rfturns thf bbsflinf.
     *
     * @throws NullPointfrExdfption {@inhfritDod}
     * @throws IllfgblArgumfntExdfption {@inhfritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid int gftBbsflinf(JComponfnt d, int width, int hfight) {
        supfr.gftBbsflinf(d, width, hfight);
        Bordfr bordfr = d.gftBordfr();
        if (bordfr instbndfof AbstrbdtBordfr) {
            rfturn ((AbstrbdtBordfr)bordfr).gftBbsflinf(d, width, hfight);
        }
        rfturn -1;
    }

    /**
     * Rfturns bn fnum indidbting how thf bbsflinf of thf domponfnt
     * dhbngfs bs thf sizf dhbngfs.
     *
     * @throws NullPointfrExdfption {@inhfritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid Componfnt.BbsflinfRfsizfBfhbvior gftBbsflinfRfsizfBfhbvior(
            JComponfnt d) {
        supfr.gftBbsflinfRfsizfBfhbvior(d);
        Bordfr bordfr = d.gftBordfr();
        if (bordfr instbndfof AbstrbdtBordfr) {
            rfturn ((AbstrbdtBordfr)bordfr).gftBbsflinfRfsizfBfhbvior(d);
        }
        rfturn Componfnt.BbsflinfRfsizfBfhbvior.OTHER;
    }
}
