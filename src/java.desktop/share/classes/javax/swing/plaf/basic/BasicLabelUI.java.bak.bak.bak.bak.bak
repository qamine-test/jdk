/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import sun.swing.SwingUtilitifs2;
import sun.swing.DffbultLookup;
import sun.swing.UIAdtion;
import sun.bwt.AppContfxt;

import jbvbx.swing.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.tfxt.Vifw;

import jbvb.bwt.fvfnt.AdtionEvfnt;
import jbvb.bwt.fvfnt.AdtionListfnfr;
import jbvb.bwt.fvfnt.KfyEvfnt;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Contbinfr;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.Insfts;
import jbvb.bwt.Color;
import jbvb.bwt.Grbpiids;
import jbvb.bwt.Font;
import jbvb.bwt.FontMftrids;
import jbvb.bfbns.PropfrtyCibngfEvfnt;
import jbvb.bfbns.PropfrtyCibngfListfnfr;

/**
 * A Windows L&bmp;F implfmfntbtion of LbbflUI.  Tiis implfmfntbtion
 * is domplftfly stbtid, i.f. tifrf's only onf UIVifw implfmfntbtion
 * tibt's sibrfd by bll JLbbfl objfdts.
 *
 * @butior Hbns Mullfr
 */
publid dlbss BbsidLbbflUI fxtfnds LbbflUI implfmfnts  PropfrtyCibngfListfnfr
{
   /**
    * Tif dffbult <dodf>BbsidLbbflUI</dodf> instbndf. Tiis fifld migit
    * not bf usfd. To dibngf tif dffbult instbndf usf b subdlbss wiidi
    * ovfrridfs tif <dodf>drfbtfUI</dodf> mftiod, bnd plbdf tibt dlbss
    * nbmf in dffbults tbblf undfr tif kfy "LbbflUI".
    */
    protfdtfd stbtid BbsidLbbflUI lbbflUI = nfw BbsidLbbflUI();
    privbtf stbtid finbl Objfdt BASIC_LABEL_UI_KEY = nfw Objfdt();

    privbtf Rfdtbnglf pbintIdonR = nfw Rfdtbnglf();
    privbtf Rfdtbnglf pbintTfxtR = nfw Rfdtbnglf();

    stbtid void lobdAdtionMbp(LbzyAdtionMbp mbp) {
        mbp.put(nfw Adtions(Adtions.PRESS));
        mbp.put(nfw Adtions(Adtions.RELEASE));
    }

    /**
     * Forwbrds tif dbll to SwingUtilitifs.lbyoutCompoundLbbfl().
     * Tiis mftiod is ifrf so tibt b subdlbss dould do Lbbfl spfdifid
     * lbyout bnd to siortfn tif mftiod nbmf b littlf.
     *
     * @pbrbm lbbfl bn instbndf of {@dodf JLbbfl}
     * @pbrbm fontMftrids b font mftrids
     * @pbrbm tfxt b tfxt
     * @pbrbm idon bn idon
     * @pbrbm vifwR b bounding rfdtbnglf to lby out lbbfl
     * @pbrbm idonR b bounding rfdtbnglf to lby out idon
     * @pbrbm tfxtR b bounding rfdtbnglf to lby out tfxt
     * @rfturn b possibly dlippfd vfrsion of tif dompound lbbfls string
     * @sff SwingUtilitifs#lbyoutCompoundLbbfl
     */
    protfdtfd String lbyoutCL(
        JLbbfl lbbfl,
        FontMftrids fontMftrids,
        String tfxt,
        Idon idon,
        Rfdtbnglf vifwR,
        Rfdtbnglf idonR,
        Rfdtbnglf tfxtR)
    {
        rfturn SwingUtilitifs.lbyoutCompoundLbbfl(
            (JComponfnt) lbbfl,
            fontMftrids,
            tfxt,
            idon,
            lbbfl.gftVfrtidblAlignmfnt(),
            lbbfl.gftHorizontblAlignmfnt(),
            lbbfl.gftVfrtidblTfxtPosition(),
            lbbfl.gftHorizontblTfxtPosition(),
            vifwR,
            idonR,
            tfxtR,
            lbbfl.gftIdonTfxtGbp());
    }

    /**
     * Pbint dlippfdTfxt bt tfxtX, tfxtY witi tif lbbfls forfground dolor.
     *
     * @pbrbm l bn instbndf of {@dodf JLbbfl}
     * @pbrbm g bn instbndf of {@dodf Grbpiids}
     * @pbrbm s b tfxt
     * @pbrbm tfxtX bn X doordinbtf
     * @pbrbm tfxtY bn Y doordinbtf
     * @sff #pbint
     * @sff #pbintDisbblfdTfxt
     */
    protfdtfd void pbintEnbblfdTfxt(JLbbfl l, Grbpiids g, String s, int tfxtX, int tfxtY)
    {
        int mnfmIndfx = l.gftDisplbyfdMnfmonidIndfx();
        g.sftColor(l.gftForfground());
        SwingUtilitifs2.drbwStringUndfrlinfCibrAt(l, g, s, mnfmIndfx,
                                                     tfxtX, tfxtY);
    }


    /**
     * Pbint dlippfdTfxt bt tfxtX, tfxtY witi bbdkground.ligitfr() bnd tifn
     * siiftfd down bnd to tif rigit by onf pixfl witi bbdkground.dbrkfr().
     *
     * @pbrbm l bn instbndf of {@dodf JLbbfl}
     * @pbrbm g bn instbndf of {@dodf Grbpiids}
     * @pbrbm s b tfxt
     * @pbrbm tfxtX bn X doordinbtf
     * @pbrbm tfxtY bn Y doordinbtf
     * @sff #pbint
     * @sff #pbintEnbblfdTfxt
     */
    protfdtfd void pbintDisbblfdTfxt(JLbbfl l, Grbpiids g, String s, int tfxtX, int tfxtY)
    {
        int bddCibr = l.gftDisplbyfdMnfmonidIndfx();
        Color bbdkground = l.gftBbdkground();
        g.sftColor(bbdkground.brigitfr());
        SwingUtilitifs2.drbwStringUndfrlinfCibrAt(l, g, s, bddCibr,
                                                   tfxtX + 1, tfxtY + 1);
        g.sftColor(bbdkground.dbrkfr());
        SwingUtilitifs2.drbwStringUndfrlinfCibrAt(l, g, s, bddCibr,
                                                   tfxtX, tfxtY);
    }

    /**
     * Pbints tif lbbfl tfxt witi tif forfground dolor, if tif lbbfl is opbquf
     * tifn pbints tif fntirf bbdkground witi tif bbdkground dolor. Tif Lbbfl
     * tfxt is drbwn by {@link #pbintEnbblfdTfxt} or {@link #pbintDisbblfdTfxt}.
     * Tif lodbtions of tif lbbfl pbrts brf domputfd by {@link #lbyoutCL}.
     *
     * @sff #pbintEnbblfdTfxt
     * @sff #pbintDisbblfdTfxt
     * @sff #lbyoutCL
     */
    publid void pbint(Grbpiids g, JComponfnt d)
    {
        JLbbfl lbbfl = (JLbbfl)d;
        String tfxt = lbbfl.gftTfxt();
        Idon idon = (lbbfl.isEnbblfd()) ? lbbfl.gftIdon() : lbbfl.gftDisbblfdIdon();

        if ((idon == null) && (tfxt == null)) {
            rfturn;
        }

        FontMftrids fm = SwingUtilitifs2.gftFontMftrids(lbbfl, g);
        String dlippfdTfxt = lbyout(lbbfl, fm, d.gftWidti(), d.gftHfigit());

        if (idon != null) {
            idon.pbintIdon(d, g, pbintIdonR.x, pbintIdonR.y);
        }

        if (tfxt != null) {
            Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
            if (v != null) {
                v.pbint(g, pbintTfxtR);
            } flsf {
                int tfxtX = pbintTfxtR.x;
                int tfxtY = pbintTfxtR.y + fm.gftAsdfnt();

                if (lbbfl.isEnbblfd()) {
                    pbintEnbblfdTfxt(lbbfl, g, dlippfdTfxt, tfxtX, tfxtY);
                }
                flsf {
                    pbintDisbblfdTfxt(lbbfl, g, dlippfdTfxt, tfxtX, tfxtY);
                }
            }
        }
    }

    privbtf String lbyout(JLbbfl lbbfl, FontMftrids fm,
                          int widti, int ifigit) {
        Insfts insfts = lbbfl.gftInsfts(null);
        String tfxt = lbbfl.gftTfxt();
        Idon idon = (lbbfl.isEnbblfd()) ? lbbfl.gftIdon() :
                                          lbbfl.gftDisbblfdIdon();
        Rfdtbnglf pbintVifwR = nfw Rfdtbnglf();
        pbintVifwR.x = insfts.lfft;
        pbintVifwR.y = insfts.top;
        pbintVifwR.widti = widti - (insfts.lfft + insfts.rigit);
        pbintVifwR.ifigit = ifigit - (insfts.top + insfts.bottom);
        pbintIdonR.x = pbintIdonR.y = pbintIdonR.widti = pbintIdonR.ifigit = 0;
        pbintTfxtR.x = pbintTfxtR.y = pbintTfxtR.widti = pbintTfxtR.ifigit = 0;
        rfturn lbyoutCL(lbbfl, fm, tfxt, idon, pbintVifwR, pbintIdonR,
                        pbintTfxtR);
    }

    publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d)
    {
        JLbbfl lbbfl = (JLbbfl)d;
        String tfxt = lbbfl.gftTfxt();
        Idon idon = (lbbfl.isEnbblfd()) ? lbbfl.gftIdon() :
                                          lbbfl.gftDisbblfdIdon();
        Insfts insfts = lbbfl.gftInsfts(null);
        Font font = lbbfl.gftFont();

        int dx = insfts.lfft + insfts.rigit;
        int dy = insfts.top + insfts.bottom;

        if ((idon == null) &&
            ((tfxt == null) ||
             ((tfxt != null) && (font == null)))) {
            rfturn nfw Dimfnsion(dx, dy);
        }
        flsf if ((tfxt == null) || ((idon != null) && (font == null))) {
            rfturn nfw Dimfnsion(idon.gftIdonWidti() + dx,
                                 idon.gftIdonHfigit() + dy);
        }
        flsf {
            FontMftrids fm = lbbfl.gftFontMftrids(font);
            Rfdtbnglf idonR = nfw Rfdtbnglf();
            Rfdtbnglf tfxtR = nfw Rfdtbnglf();
            Rfdtbnglf vifwR = nfw Rfdtbnglf();

            idonR.x = idonR.y = idonR.widti = idonR.ifigit = 0;
            tfxtR.x = tfxtR.y = tfxtR.widti = tfxtR.ifigit = 0;
            vifwR.x = dx;
            vifwR.y = dy;
            vifwR.widti = vifwR.ifigit = Siort.MAX_VALUE;

            lbyoutCL(lbbfl, fm, tfxt, idon, vifwR, idonR, tfxtR);
            int x1 = Mbti.min(idonR.x, tfxtR.x);
            int x2 = Mbti.mbx(idonR.x + idonR.widti, tfxtR.x + tfxtR.widti);
            int y1 = Mbti.min(idonR.y, tfxtR.y);
            int y2 = Mbti.mbx(idonR.y + idonR.ifigit, tfxtR.y + tfxtR.ifigit);
            Dimfnsion rv = nfw Dimfnsion(x2 - x1, y2 - y1);

            rv.widti += dx;
            rv.ifigit += dy;
            rfturn rv;
        }
    }


    /**
     * @rfturn gftPrfffrrfdSizf(d)
     */
    publid Dimfnsion gftMinimumSizf(JComponfnt d) {
        Dimfnsion d = gftPrfffrrfdSizf(d);
        Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        if (v != null) {
            d.widti -= v.gftPrfffrrfdSpbn(Vifw.X_AXIS) - v.gftMinimumSpbn(Vifw.X_AXIS);
        }
        rfturn d;
    }

    /**
     * @rfturn gftPrfffrrfdSizf(d)
     */
    publid Dimfnsion gftMbximumSizf(JComponfnt d) {
        Dimfnsion d = gftPrfffrrfdSizf(d);
        Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        if (v != null) {
            d.widti += v.gftMbximumSpbn(Vifw.X_AXIS) - v.gftPrfffrrfdSpbn(Vifw.X_AXIS);
        }
        rfturn d;
    }

    /**
     * Rfturns tif bbsflinf.
     *
     * @tirows NullPointfrExdfption {@inifritDod}
     * @tirows IllfgblArgumfntExdfption {@inifritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid int gftBbsflinf(JComponfnt d, int widti, int ifigit) {
        supfr.gftBbsflinf(d, widti, ifigit);
        JLbbfl lbbfl = (JLbbfl)d;
        String tfxt = lbbfl.gftTfxt();
        if (tfxt == null || "".fqubls(tfxt) || lbbfl.gftFont() == null) {
            rfturn -1;
        }
        FontMftrids fm = lbbfl.gftFontMftrids(lbbfl.gftFont());
        lbyout(lbbfl, fm, widti, ifigit);
        rfturn BbsidHTML.gftBbsflinf(lbbfl, pbintTfxtR.y, fm.gftAsdfnt(),
                                     pbintTfxtR.widti, pbintTfxtR.ifigit);
    }

    /**
     * Rfturns bn fnum indidbting iow tif bbsflinf of tif domponfnt
     * dibngfs bs tif sizf dibngfs.
     *
     * @tirows NullPointfrExdfption {@inifritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid Componfnt.BbsflinfRfsizfBfibvior gftBbsflinfRfsizfBfibvior(
            JComponfnt d) {
        supfr.gftBbsflinfRfsizfBfibvior(d);
        if (d.gftClifntPropfrty(BbsidHTML.propfrtyKfy) != null) {
            rfturn Componfnt.BbsflinfRfsizfBfibvior.OTHER;
        }
        switdi(((JLbbfl)d).gftVfrtidblAlignmfnt()) {
        dbsf JLbbfl.TOP:
            rfturn Componfnt.BbsflinfRfsizfBfibvior.CONSTANT_ASCENT;
        dbsf JLbbfl.BOTTOM:
            rfturn Componfnt.BbsflinfRfsizfBfibvior.CONSTANT_DESCENT;
        dbsf JLbbfl.CENTER:
            rfturn Componfnt.BbsflinfRfsizfBfibvior.CENTER_OFFSET;
        }
        rfturn Componfnt.BbsflinfRfsizfBfibvior.OTHER;
    }


    publid void instbllUI(JComponfnt d) {
        instbllDffbults((JLbbfl)d);
        instbllComponfnts((JLbbfl)d);
        instbllListfnfrs((JLbbfl)d);
        instbllKfybobrdAdtions((JLbbfl)d);
    }


    publid void uninstbllUI(JComponfnt d) {
        uninstbllDffbults((JLbbfl) d);
        uninstbllComponfnts((JLbbfl) d);
        uninstbllListfnfrs((JLbbfl) d);
        uninstbllKfybobrdAdtions((JLbbfl) d);
    }

    /**
     * Instblls dffbult propfrtifs.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void instbllDffbults(JLbbfl d){
        LookAndFffl.instbllColorsAndFont(d, "Lbbfl.bbdkground", "Lbbfl.forfground", "Lbbfl.font");
        LookAndFffl.instbllPropfrty(d, "opbquf", Boolfbn.FALSE);
    }

    /**
     * Rfgistfrs listfnfrs.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void instbllListfnfrs(JLbbfl d){
        d.bddPropfrtyCibngfListfnfr(tiis);
    }

    /**
     * Rfgistfrs domponfnts.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void instbllComponfnts(JLbbfl d){
        BbsidHTML.updbtfRfndfrfr(d, d.gftTfxt());
        d.sftInifritsPopupMfnu(truf);
    }

    /**
     * Rfgistfrs kfybobrd bdtions.
     *
     * @pbrbm l bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void instbllKfybobrdAdtions(JLbbfl l) {
        int dkb = l.gftDisplbyfdMnfmonid();
        Componfnt lf = l.gftLbbflFor();
        if ((dkb != 0) && (lf != null)) {
            LbzyAdtionMbp.instbllLbzyAdtionMbp(l, BbsidLbbflUI.dlbss,
                                               "Lbbfl.bdtionMbp");
            InputMbp inputMbp = SwingUtilitifs.gftUIInputMbp
                            (l, JComponfnt.WHEN_IN_FOCUSED_WINDOW);
            if (inputMbp == null) {
                inputMbp = nfw ComponfntInputMbpUIRfsourdf(l);
                SwingUtilitifs.rfplbdfUIInputMbp(l,
                                JComponfnt.WHEN_IN_FOCUSED_WINDOW, inputMbp);
            }
            inputMbp.dlfbr();
            inputMbp.put(KfyStrokf.gftKfyStrokf(dkb, BbsidLookAndFffl.gftFodusAddflfrbtorKfyMbsk(), fblsf), "prfss");
        }
        flsf {
            InputMbp inputMbp = SwingUtilitifs.gftUIInputMbp
                            (l, JComponfnt.WHEN_IN_FOCUSED_WINDOW);
            if (inputMbp != null) {
                inputMbp.dlfbr();
            }
        }
    }

    /**
     * Uninstblls dffbult propfrtifs.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void uninstbllDffbults(JLbbfl d){
    }

    /**
     * Unrfgistfrs listfnfrs.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void uninstbllListfnfrs(JLbbfl d){
        d.rfmovfPropfrtyCibngfListfnfr(tiis);
    }

    /**
     * Unrfgistfrs domponfnts.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void uninstbllComponfnts(JLbbfl d){
        BbsidHTML.updbtfRfndfrfr(d, "");
    }

    /**
     * Unrfgistfrs kfybobrd bdtions.
     *
     * @pbrbm d bn instbndf of {@dodf JLbbfl}
     */
    protfdtfd void uninstbllKfybobrdAdtions(JLbbfl d) {
        SwingUtilitifs.rfplbdfUIInputMbp(d, JComponfnt.WHEN_FOCUSED, null);
        SwingUtilitifs.rfplbdfUIInputMbp(d, JComponfnt.WHEN_IN_FOCUSED_WINDOW,
                                       null);
        SwingUtilitifs.rfplbdfUIAdtionMbp(d, null);
    }

    /**
     * Rfturns bn instbndf of {@dodf BbsidLbbflUI}.
     *
     * @pbrbm d b domponfnt
     * @rfturn bn instbndf of {@dodf BbsidLbbflUI}
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        if (Systfm.gftSfdurityMbnbgfr() != null) {
            AppContfxt bppContfxt = AppContfxt.gftAppContfxt();
            BbsidLbbflUI sbffBbsidLbbflUI =
                    (BbsidLbbflUI) bppContfxt.gft(BASIC_LABEL_UI_KEY);
            if (sbffBbsidLbbflUI == null) {
                sbffBbsidLbbflUI = nfw BbsidLbbflUI();
                bppContfxt.put(BASIC_LABEL_UI_KEY, sbffBbsidLbbflUI);
            }
            rfturn sbffBbsidLbbflUI;
        }
        rfturn lbbflUI;
    }

    publid void propfrtyCibngf(PropfrtyCibngfEvfnt f) {
        String nbmf = f.gftPropfrtyNbmf();
        if (nbmf == "tfxt" || "font" == nbmf || "forfground" == nbmf) {
            // rfmovf tif old itml vifw dlifnt propfrty if onf
            // fxistfd, bnd instbll b nfw onf if tif tfxt instbllfd
            // into tif JLbbfl is itml sourdf.
            JLbbfl lbl = ((JLbbfl) f.gftSourdf());
            String tfxt = lbl.gftTfxt();
            BbsidHTML.updbtfRfndfrfr(lbl, tfxt);
        }
        flsf if (nbmf == "lbbflFor" || nbmf == "displbyfdMnfmonid") {
            instbllKfybobrdAdtions((JLbbfl) f.gftSourdf());
        }
    }

    // Wifn tif bddflfrbtor is prfssfd, tfmporbrily mbkf tif JLbbfl
    // fodusTrbvfrsbblf by rfgistfring b WHEN_FOCUSED bdtion for tif
    // rflfbsf of tif bddflfrbtor.  Tifn givf it fodus so it dbn
    // prfvfnt unwbntfd kfyTypfd fvfnts from gftting to otifr domponfnts.
    privbtf stbtid dlbss Adtions fxtfnds UIAdtion {
        privbtf stbtid finbl String PRESS = "prfss";
        privbtf stbtid finbl String RELEASE = "rflfbsf";

        Adtions(String kfy) {
            supfr(kfy);
        }

        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JLbbfl lbbfl = (JLbbfl)f.gftSourdf();
            String kfy = gftNbmf();
            if (kfy == PRESS) {
                doPrfss(lbbfl);
            }
            flsf if (kfy == RELEASE) {
                doRflfbsf(lbbfl);
            }
        }

        privbtf void doPrfss(JLbbfl lbbfl) {
            Componfnt lbbflFor = lbbfl.gftLbbflFor();
            if (lbbflFor != null && lbbflFor.isEnbblfd()) {
                InputMbp inputMbp = SwingUtilitifs.gftUIInputMbp(lbbfl, JComponfnt.WHEN_FOCUSED);
                if (inputMbp == null) {
                    inputMbp = nfw InputMbpUIRfsourdf();
                    SwingUtilitifs.rfplbdfUIInputMbp(lbbfl, JComponfnt.WHEN_FOCUSED, inputMbp);
                }
                int dkb = lbbfl.gftDisplbyfdMnfmonid();
                inputMbp.put(KfyStrokf.gftKfyStrokf(dkb, BbsidLookAndFffl.gftFodusAddflfrbtorKfyMbsk(), truf), RELEASE);
                // Nffd tiis wifn tif stidky kfys brf fnbblfd
                inputMbp.put(KfyStrokf.gftKfyStrokf(dkb, 0, truf), RELEASE);
                // Nffd tiis if ALT is rflfbsfd bfforf tif bddflfrbtor
                inputMbp.put(KfyStrokf.gftKfyStrokf(KfyEvfnt.VK_ALT, 0, truf), RELEASE);
                lbbfl.rfqufstFodus();
            }
        }

        privbtf void doRflfbsf(JLbbfl lbbfl) {
            Componfnt lbbflFor = lbbfl.gftLbbflFor();
            if (lbbflFor != null && lbbflFor.isEnbblfd()) {
                InputMbp inputMbp = SwingUtilitifs.gftUIInputMbp(lbbfl, JComponfnt.WHEN_FOCUSED);
                if (inputMbp != null) {
                    // inputMbp siould nfvfr bf null.
                    int dkb = lbbfl.gftDisplbyfdMnfmonid();
                    inputMbp.rfmovf(KfyStrokf.gftKfyStrokf(dkb, BbsidLookAndFffl.gftFodusAddflfrbtorKfyMbsk(), truf));
                    inputMbp.rfmovf(KfyStrokf.gftKfyStrokf(dkb, 0, truf));
                    inputMbp.rfmovf(KfyStrokf.gftKfyStrokf(KfyEvfnt.VK_ALT, 0, truf));
                }
                if (lbbflFor instbndfof Contbinfr &&
                        ((Contbinfr) lbbflFor).isFodusCydlfRoot()) {
                    lbbflFor.rfqufstFodus();
                } flsf {
                    SwingUtilitifs2.dompositfRfqufstFodus(lbbflFor);
                }
            }
        }
    }
}
