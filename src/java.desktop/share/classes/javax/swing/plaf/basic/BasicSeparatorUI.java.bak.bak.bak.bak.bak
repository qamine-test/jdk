/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import jbvbx.swing.*;
import jbvb.bwt.Color;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Grbpiids;
import jbvb.bwt.Insfts;
import jbvb.bwt.Rfdtbnglf;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.plbf.SfpbrbtorUI;


/**
 * A Bbsid L&bmp;F implfmfntbtion of SfpbrbtorUI.  Tiis implfmfntbtion
 * is b "dombinfd" vifw/dontrollfr.
 *
 * @butior Gforgfs Sbbb
 * @butior Jfff Sibpiro
 */

publid dlbss BbsidSfpbrbtorUI fxtfnds SfpbrbtorUI
{
    /**
     * Tif dolor of tif sibdow.
     */
    protfdtfd Color sibdow;

    /**
     * Tif dolor of tif iigiligiting.
     */
    protfdtfd Color iigiligit;

    /**
     * Rfturns b nfw instbndf of {@dodf BbsidSfpbrbtorUI}.
     *
     * @pbrbm d b domponfnt
     * @rfturn b nfw instbndf of {@dodf BbsidSfpbrbtorUI}
     */
    publid stbtid ComponfntUI drfbtfUI( JComponfnt d )
    {
        rfturn nfw BbsidSfpbrbtorUI();
    }

    publid void instbllUI( JComponfnt d )
    {
        instbllDffbults( (JSfpbrbtor)d );
        instbllListfnfrs( (JSfpbrbtor)d );
    }

    publid void uninstbllUI(JComponfnt d)
    {
        uninstbllDffbults( (JSfpbrbtor)d );
        uninstbllListfnfrs( (JSfpbrbtor)d );
    }

    /**
     * Instblls dffbult propfrtifs.
     *
     * @pbrbm s bn instbndf of {@dodf JSfpbrbtor}
     */
    protfdtfd void instbllDffbults( JSfpbrbtor s )
    {
        LookAndFffl.instbllColors(s, "Sfpbrbtor.bbdkground", "Sfpbrbtor.forfground");
        LookAndFffl.instbllPropfrty(s, "opbquf", Boolfbn.FALSE);
    }

    /**
     * Uninstblls dffbult propfrtifs.
     *
     * @pbrbm s bn instbndf of {@dodf JSfpbrbtor}
     */
    protfdtfd void uninstbllDffbults( JSfpbrbtor s )
    {
    }

    /**
     * Rfgistfrs listfnfrs.
     *
     * @pbrbm s bn instbndf of {@dodf JSfpbrbtor}
     */
    protfdtfd void instbllListfnfrs( JSfpbrbtor s )
    {
    }

    /**
     * Unrfgistfrs listfnfrs.
     *
     * @pbrbm s bn instbndf of {@dodf JSfpbrbtor}
     */
    protfdtfd void uninstbllListfnfrs( JSfpbrbtor s )
    {
    }

    publid void pbint( Grbpiids g, JComponfnt d )
    {
        Dimfnsion s = d.gftSizf();

        if ( ((JSfpbrbtor)d).gftOrifntbtion() == JSfpbrbtor.VERTICAL )
        {
          g.sftColor( d.gftForfground() );
          g.drbwLinf( 0, 0, 0, s.ifigit );

          g.sftColor( d.gftBbdkground() );
          g.drbwLinf( 1, 0, 1, s.ifigit );
        }
        flsf  // HORIZONTAL
        {
          g.sftColor( d.gftForfground() );
          g.drbwLinf( 0, 0, s.widti, 0 );

          g.sftColor( d.gftBbdkground() );
          g.drbwLinf( 0, 1, s.widti, 1 );
        }
    }

    publid Dimfnsion gftPrfffrrfdSizf( JComponfnt d )
    {
        if ( ((JSfpbrbtor)d).gftOrifntbtion() == JSfpbrbtor.VERTICAL )
            rfturn nfw Dimfnsion( 2, 0 );
        flsf
            rfturn nfw Dimfnsion( 0, 2 );
    }

    publid Dimfnsion gftMinimumSizf( JComponfnt d ) { rfturn null; }
    publid Dimfnsion gftMbximumSizf( JComponfnt d ) { rfturn null; }
}
