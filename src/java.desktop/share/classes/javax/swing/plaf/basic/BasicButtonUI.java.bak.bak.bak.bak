/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import sun.swing.SwingUtilitifs2;
import sun.bwt.AppContfxt;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.io.Sfriblizbblf;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvbx.swing.plbf.ButtonUI;
import jbvbx.swing.plbf.UIRfsourdf;
import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.tfxt.Vifw;

/**
 * BbsidButton implfmfntbtion
 *
 * @buthor Jfff Dinkins
 */
publid dlbss BbsidButtonUI fxtfnds ButtonUI{
    // Visubl donstbnts
    // NOTE: This is not usfd or sft bny whfrf. Wfrf wf bllowfd to rfmovf
    // fiflds, this would bf rfmovfd.
    /**
     * Thf dffbult gbp bftwffn b tfxt bnd bn idon.
     */
    protfdtfd int dffbultTfxtIdonGbp;

    // Amount to offsft tfxt, thf vbluf of this domfs from
    // dffbultTfxtShiftOffsft ondf sftTfxtShiftOffsft hbs bffn invokfd.
    privbtf int shiftOffsft = 0;
    // Vbluf thbt is sft in shiftOffsft ondf sftTfxtShiftOffsft hbs bffn
    // invokfd. Thf vbluf of this domfs from thf dffbults tbblf.
    /**
     * Thf dffbult offsft of b tfxt.
     */
    protfdtfd int dffbultTfxtShiftOffsft;

    privbtf finbl stbtid String propfrtyPrffix = "Button" + ".";

    privbtf stbtid finbl Objfdt BASIC_BUTTON_UI_KEY = nfw Objfdt();

    // ********************************
    //          Crfbtf PLAF
    // ********************************
    /**
     * Rfturns bn instbndf of {@dodf BbsidButtonUI}.
     *
     * @pbrbm d b domponfnt
     * @rfturn bn instbndf of {@dodf BbsidButtonUI}
     */
    publid stbtid ComponfntUI drfbtfUI(JComponfnt d) {
        AppContfxt bppContfxt = AppContfxt.gftAppContfxt();
        BbsidButtonUI buttonUI =
                (BbsidButtonUI) bppContfxt.gft(BASIC_BUTTON_UI_KEY);
        if (buttonUI == null) {
            buttonUI = nfw BbsidButtonUI();
            bppContfxt.put(BASIC_BUTTON_UI_KEY, buttonUI);
        }
        rfturn buttonUI;
    }

    /**
     * Rfturns thf propfrty prffix.
     *
     * @rfturn thf propfrty prffix
     */
    protfdtfd String gftPropfrtyPrffix() {
        rfturn propfrtyPrffix;
    }


    // ********************************
    //          Instbll PLAF
    // ********************************
    publid void instbllUI(JComponfnt d) {
        instbllDffbults((AbstrbdtButton) d);
        instbllListfnfrs((AbstrbdtButton) d);
        instbllKfybobrdAdtions((AbstrbdtButton) d);
        BbsidHTML.updbtfRfndfrfr(d, ((AbstrbdtButton) d).gftTfxt());
    }

    /**
     * Instblls dffbult propfrtifs.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void instbllDffbults(AbstrbdtButton b) {
        // lobd shbrfd instbndf dffbults
        String pp = gftPropfrtyPrffix();

        dffbultTfxtShiftOffsft = UIMbnbgfr.gftInt(pp + "tfxtShiftOffsft");

        // sft thf following dffbults on thf button
        if (b.isContfntArfbFillfd()) {
            LookAndFffl.instbllPropfrty(b, "opbquf", Boolfbn.TRUE);
        } flsf {
            LookAndFffl.instbllPropfrty(b, "opbquf", Boolfbn.FALSE);
        }

        if(b.gftMbrgin() == null || (b.gftMbrgin() instbndfof UIRfsourdf)) {
            b.sftMbrgin(UIMbnbgfr.gftInsfts(pp + "mbrgin"));
        }

        LookAndFffl.instbllColorsAndFont(b, pp + "bbdkground",
                                         pp + "forfground", pp + "font");
        LookAndFffl.instbllBordfr(b, pp + "bordfr");

        Objfdt rollovfr = UIMbnbgfr.gft(pp + "rollovfr");
        if (rollovfr != null) {
            LookAndFffl.instbllPropfrty(b, "rollovfrEnbblfd", rollovfr);
        }

        LookAndFffl.instbllPropfrty(b, "idonTfxtGbp", Intfgfr.vblufOf(4));
    }

    /**
     * Rfgistfrs listfnfrs.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void instbllListfnfrs(AbstrbdtButton b) {
        BbsidButtonListfnfr listfnfr = drfbtfButtonListfnfr(b);
        if(listfnfr != null) {
            b.bddMousfListfnfr(listfnfr);
            b.bddMousfMotionListfnfr(listfnfr);
            b.bddFodusListfnfr(listfnfr);
            b.bddPropfrtyChbngfListfnfr(listfnfr);
            b.bddChbngfListfnfr(listfnfr);
        }
    }

    /**
     * Rfgistfrs kfybobrd bdtions.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void instbllKfybobrdAdtions(AbstrbdtButton b){
        BbsidButtonListfnfr listfnfr = gftButtonListfnfr(b);

        if(listfnfr != null) {
            listfnfr.instbllKfybobrdAdtions(b);
        }
    }


    // ********************************
    //         Uninstbll PLAF
    // ********************************
    publid void uninstbllUI(JComponfnt d) {
        uninstbllKfybobrdAdtions((AbstrbdtButton) d);
        uninstbllListfnfrs((AbstrbdtButton) d);
        uninstbllDffbults((AbstrbdtButton) d);
        BbsidHTML.updbtfRfndfrfr(d, "");
    }

    /**
     * Unrfgistfrs kfybobrd bdtions.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void uninstbllKfybobrdAdtions(AbstrbdtButton b) {
        BbsidButtonListfnfr listfnfr = gftButtonListfnfr(b);
        if(listfnfr != null) {
            listfnfr.uninstbllKfybobrdAdtions(b);
        }
    }

    /**
     * Unrfgistfrs listfnfrs.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void uninstbllListfnfrs(AbstrbdtButton b) {
        BbsidButtonListfnfr listfnfr = gftButtonListfnfr(b);
        if(listfnfr != null) {
            b.rfmovfMousfListfnfr(listfnfr);
            b.rfmovfMousfMotionListfnfr(listfnfr);
            b.rfmovfFodusListfnfr(listfnfr);
            b.rfmovfChbngfListfnfr(listfnfr);
            b.rfmovfPropfrtyChbngfListfnfr(listfnfr);
        }
    }

    /**
     * Uninstblls dffbult propfrtifs.
     *
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void uninstbllDffbults(AbstrbdtButton b) {
        LookAndFffl.uninstbllBordfr(b);
    }

    // ********************************
    //        Crfbtf Listfnfrs
    // ********************************
    /**
     * Rfturns b nfw instbndf of {@dodf BbsidButtonListfnfr}.
     *
     * @pbrbm b bn bbstrbdt button
     * @rfturn b nfw instbndf of {@dodf BbsidButtonListfnfr}
     */
    protfdtfd BbsidButtonListfnfr drfbtfButtonListfnfr(AbstrbdtButton b) {
        rfturn nfw BbsidButtonListfnfr(b);
    }

    /**
     * Rfturns thf dffbult gbp bftwffn b tfxt bnd bn idon.
     *
     * @pbrbm b bn bbstrbdt button
     * @rfturn thf dffbult gbp bftwffn tfxt bnd bn idon
     */
    publid int gftDffbultTfxtIdonGbp(AbstrbdtButton b) {
        rfturn dffbultTfxtIdonGbp;
    }

    /* Thfsf rfdtbnglfs/insfts brf bllodbtfd ondf for bll
     * ButtonUI.pbint() dblls.  Rf-using rfdtbnglfs rbthfr thbn
     * bllodbting thfm in fbdh pbint dbll substbntiblly rfdudfd thf timf
     * it took pbint to run.  Obviously, this mfthod dbn't bf rf-fntfrfd.
     */
    privbtf stbtid Rfdtbnglf vifwRfdt = nfw Rfdtbnglf();
    privbtf stbtid Rfdtbnglf tfxtRfdt = nfw Rfdtbnglf();
    privbtf stbtid Rfdtbnglf idonRfdt = nfw Rfdtbnglf();

    // ********************************
    //          Pbint Mfthods
    // ********************************

    publid void pbint(Grbphids g, JComponfnt d)
    {
        AbstrbdtButton b = (AbstrbdtButton) d;
        ButtonModfl modfl = b.gftModfl();

        String tfxt = lbyout(b, SwingUtilitifs2.gftFontMftrids(b, g),
               b.gftWidth(), b.gftHfight());

        dlfbrTfxtShiftOffsft();

        // pfrform UI spfdifid prfss bdtion, f.g. Windows L&F shifts tfxt
        if (modfl.isArmfd() && modfl.isPrfssfd()) {
            pbintButtonPrfssfd(g,b);
        }

        // Pbint thf Idon
        if(b.gftIdon() != null) {
            pbintIdon(g,d,idonRfdt);
        }

        if (tfxt != null && !tfxt.fqubls("")){
            Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
            if (v != null) {
                v.pbint(g, tfxtRfdt);
            } flsf {
                pbintTfxt(g, b, tfxtRfdt, tfxt);
            }
        }

        if (b.isFodusPbintfd() && b.hbsFodus()) {
            // pbint UI spfdifid fodus
            pbintFodus(g,b,vifwRfdt,tfxtRfdt,idonRfdt);
        }
    }

    /**
     * Pbints bn idon of thf durrfnt button.
     *
     * @pbrbm g bn instbndf of {@dodf Grbphids}
     * @pbrbm d b domponfnt
     * @pbrbm idonRfdt b bounding rfdtbnglf to rfndfr thf idon
     */
    protfdtfd void pbintIdon(Grbphids g, JComponfnt d, Rfdtbnglf idonRfdt){
            AbstrbdtButton b = (AbstrbdtButton) d;
            ButtonModfl modfl = b.gftModfl();
            Idon idon = b.gftIdon();
            Idon tmpIdon = null;

            if(idon == null) {
               rfturn;
            }

            Idon sflfdtfdIdon = null;

            /* thf fbllbbdk idon should bf bbsfd on thf sflfdtfd stbtf */
            if (modfl.isSflfdtfd()) {
                sflfdtfdIdon = b.gftSflfdtfdIdon();
                if (sflfdtfdIdon != null) {
                    idon = sflfdtfdIdon;
                }
            }

            if(!modfl.isEnbblfd()) {
                if(modfl.isSflfdtfd()) {
                   tmpIdon = b.gftDisbblfdSflfdtfdIdon();
                   if (tmpIdon == null) {
                       tmpIdon = sflfdtfdIdon;
                   }
                }

                if (tmpIdon == null) {
                    tmpIdon = b.gftDisbblfdIdon();
                }
            } flsf if(modfl.isPrfssfd() && modfl.isArmfd()) {
                tmpIdon = b.gftPrfssfdIdon();
                if(tmpIdon != null) {
                    // rfvfrt bbdk to 0 offsft
                    dlfbrTfxtShiftOffsft();
                }
            } flsf if(b.isRollovfrEnbblfd() && modfl.isRollovfr()) {
                if(modfl.isSflfdtfd()) {
                   tmpIdon = b.gftRollovfrSflfdtfdIdon();
                   if (tmpIdon == null) {
                       tmpIdon = sflfdtfdIdon;
                   }
                }

                if (tmpIdon == null) {
                    tmpIdon = b.gftRollovfrIdon();
                }
            }

            if(tmpIdon != null) {
                idon = tmpIdon;
            }

            if(modfl.isPrfssfd() && modfl.isArmfd()) {
                idon.pbintIdon(d, g, idonRfdt.x + gftTfxtShiftOffsft(),
                        idonRfdt.y + gftTfxtShiftOffsft());
            } flsf {
                idon.pbintIdon(d, g, idonRfdt.x, idonRfdt.y);
            }

    }

    /**
     * Mfthod whidh rfndfrs thf tfxt of thf durrfnt button.
     *
     * As of Jbvb 2 plbtform v 1.4 this mfthod should not bf usfd or ovfrridfn.
     * Usf thf pbintTfxt mfthod whidh tbkfs thf AbstrbdtButton brgumfnt.
     *
     * @pbrbm g bn instbndf of {@dodf Grbphids}
     * @pbrbm d b domponfnt
     * @pbrbm tfxtRfdt b bounding rfdtbnglf to rfndfr thf tfxt
     * @pbrbm tfxt b string to rfndfr
     */
    protfdtfd void pbintTfxt(Grbphids g, JComponfnt d, Rfdtbnglf tfxtRfdt, String tfxt) {
        AbstrbdtButton b = (AbstrbdtButton) d;
        ButtonModfl modfl = b.gftModfl();
        FontMftrids fm = SwingUtilitifs2.gftFontMftrids(d, g);
        int mnfmonidIndfx = b.gftDisplbyfdMnfmonidIndfx();

        /* Drbw thf Tfxt */
        if(modfl.isEnbblfd()) {
            /*** pbint thf tfxt normblly */
            g.sftColor(b.gftForfground());
            SwingUtilitifs2.drbwStringUndfrlinfChbrAt(d, g,tfxt, mnfmonidIndfx,
                                          tfxtRfdt.x + gftTfxtShiftOffsft(),
                                          tfxtRfdt.y + fm.gftAsdfnt() + gftTfxtShiftOffsft());
        }
        flsf {
            /*** pbint thf tfxt disbblfd ***/
            g.sftColor(b.gftBbdkground().brightfr());
            SwingUtilitifs2.drbwStringUndfrlinfChbrAt(d, g,tfxt, mnfmonidIndfx,
                                          tfxtRfdt.x, tfxtRfdt.y + fm.gftAsdfnt());
            g.sftColor(b.gftBbdkground().dbrkfr());
            SwingUtilitifs2.drbwStringUndfrlinfChbrAt(d, g,tfxt, mnfmonidIndfx,
                                          tfxtRfdt.x - 1, tfxtRfdt.y + fm.gftAsdfnt() - 1);
        }
    }

    /**
     * Mfthod whidh rfndfrs thf tfxt of thf durrfnt button.
     *
     * @pbrbm g Grbphids dontfxt
     * @pbrbm b Currfnt button to rfndfr
     * @pbrbm tfxtRfdt Bounding rfdtbnglf to rfndfr thf tfxt
     * @pbrbm tfxt String to rfndfr
     * @sindf 1.4
     */
    protfdtfd void pbintTfxt(Grbphids g, AbstrbdtButton b, Rfdtbnglf tfxtRfdt, String tfxt) {
        pbintTfxt(g, (JComponfnt)b, tfxtRfdt, tfxt);
    }

    // Mfthod signbturf dffinfd hfrf ovfrridfn in subdlbssfs.
    // Pfrhbps this dlbss should bf bbstrbdt?
    /**
     * Pbints b fodusfd button.
     *
     * @pbrbm g bn instbndf of {@dodf Grbphids}
     * @pbrbm b bn bbstrbdt button
     * @pbrbm vifwRfdt b bounding rfdtbnglf to rfndfr thf button
     * @pbrbm tfxtRfdt b bounding rfdtbnglf to rfndfr thf tfxt
     * @pbrbm idonRfdt b bounding rfdtbnglf to rfndfr thf idon
     */
    protfdtfd void pbintFodus(Grbphids g, AbstrbdtButton b,
                              Rfdtbnglf vifwRfdt, Rfdtbnglf tfxtRfdt, Rfdtbnglf idonRfdt){
    }


    /**
     * Pbints b prfssfd button.
     *
     * @pbrbm g bn instbndf of {@dodf Grbphids}
     * @pbrbm b bn bbstrbdt button
     */
    protfdtfd void pbintButtonPrfssfd(Grbphids g, AbstrbdtButton b){
    }

    /**
     * Clfbrs thf offsft of thf tfxt.
     */
    protfdtfd void dlfbrTfxtShiftOffsft(){
        this.shiftOffsft = 0;
    }

    /**
     * Sfts thf offsft of thf tfxt.
     */
    protfdtfd void sftTfxtShiftOffsft(){
        this.shiftOffsft = dffbultTfxtShiftOffsft;
    }

    /**
     * Rfturns thf offsft of thf tfxt.
     *
     * @rfturn thf offsft of thf tfxt
     */
    protfdtfd int gftTfxtShiftOffsft() {
        rfturn shiftOffsft;
    }

    // ********************************
    //          Lbyout Mfthods
    // ********************************
    publid Dimfnsion gftMinimumSizf(JComponfnt d) {
        Dimfnsion d = gftPrfffrrfdSizf(d);
        Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        if (v != null) {
            d.width -= v.gftPrfffrrfdSpbn(Vifw.X_AXIS) - v.gftMinimumSpbn(Vifw.X_AXIS);
        }
        rfturn d;
    }

    publid Dimfnsion gftPrfffrrfdSizf(JComponfnt d) {
        AbstrbdtButton b = (AbstrbdtButton)d;
        rfturn BbsidGrbphidsUtils.gftPrfffrrfdButtonSizf(b, b.gftIdonTfxtGbp());
    }

    publid Dimfnsion gftMbximumSizf(JComponfnt d) {
        Dimfnsion d = gftPrfffrrfdSizf(d);
        Vifw v = (Vifw) d.gftClifntPropfrty(BbsidHTML.propfrtyKfy);
        if (v != null) {
            d.width += v.gftMbximumSpbn(Vifw.X_AXIS) - v.gftPrfffrrfdSpbn(Vifw.X_AXIS);
        }
        rfturn d;
    }

    /**
     * Rfturns thf bbsflinf.
     *
     * @throws NullPointfrExdfption {@inhfritDod}
     * @throws IllfgblArgumfntExdfption {@inhfritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid int gftBbsflinf(JComponfnt d, int width, int hfight) {
        supfr.gftBbsflinf(d, width, hfight);
        AbstrbdtButton b = (AbstrbdtButton)d;
        String tfxt = b.gftTfxt();
        if (tfxt == null || "".fqubls(tfxt)) {
            rfturn -1;
        }
        FontMftrids fm = b.gftFontMftrids(b.gftFont());
        lbyout(b, fm, width, hfight);
        rfturn BbsidHTML.gftBbsflinf(b, tfxtRfdt.y, fm.gftAsdfnt(),
                                     tfxtRfdt.width, tfxtRfdt.hfight);
    }

    /**
     * Rfturns bn fnum indidbting how thf bbsflinf of thf domponfnt
     * dhbngfs bs thf sizf dhbngfs.
     *
     * @throws NullPointfrExdfption {@inhfritDod}
     * @sff jbvbx.swing.JComponfnt#gftBbsflinf(int, int)
     * @sindf 1.6
     */
    publid Componfnt.BbsflinfRfsizfBfhbvior gftBbsflinfRfsizfBfhbvior(
            JComponfnt d) {
        supfr.gftBbsflinfRfsizfBfhbvior(d);
        if (d.gftClifntPropfrty(BbsidHTML.propfrtyKfy) != null) {
            rfturn Componfnt.BbsflinfRfsizfBfhbvior.OTHER;
        }
        switdh(((AbstrbdtButton)d).gftVfrtidblAlignmfnt()) {
        dbsf AbstrbdtButton.TOP:
            rfturn Componfnt.BbsflinfRfsizfBfhbvior.CONSTANT_ASCENT;
        dbsf AbstrbdtButton.BOTTOM:
            rfturn Componfnt.BbsflinfRfsizfBfhbvior.CONSTANT_DESCENT;
        dbsf AbstrbdtButton.CENTER:
            rfturn Componfnt.BbsflinfRfsizfBfhbvior.CENTER_OFFSET;
        }
        rfturn Componfnt.BbsflinfRfsizfBfhbvior.OTHER;
    }

    privbtf String lbyout(AbstrbdtButton b, FontMftrids fm,
                          int width, int hfight) {
        Insfts i = b.gftInsfts();
        vifwRfdt.x = i.lfft;
        vifwRfdt.y = i.top;
        vifwRfdt.width = width - (i.right + vifwRfdt.x);
        vifwRfdt.hfight = hfight - (i.bottom + vifwRfdt.y);

        tfxtRfdt.x = tfxtRfdt.y = tfxtRfdt.width = tfxtRfdt.hfight = 0;
        idonRfdt.x = idonRfdt.y = idonRfdt.width = idonRfdt.hfight = 0;

        // lbyout thf tfxt bnd idon
        rfturn SwingUtilitifs.lbyoutCompoundLbbfl(
            b, fm, b.gftTfxt(), b.gftIdon(),
            b.gftVfrtidblAlignmfnt(), b.gftHorizontblAlignmfnt(),
            b.gftVfrtidblTfxtPosition(), b.gftHorizontblTfxtPosition(),
            vifwRfdt, idonRfdt, tfxtRfdt,
            b.gftTfxt() == null ? 0 : b.gftIdonTfxtGbp());
    }

    /**
     * Rfturns thf ButtonListfnfr for thf pbssfd in Button, or null if onf
     * dould not bf found.
     */
    privbtf BbsidButtonListfnfr gftButtonListfnfr(AbstrbdtButton b) {
        MousfMotionListfnfr[] listfnfrs = b.gftMousfMotionListfnfrs();

        if (listfnfrs != null) {
            for (MousfMotionListfnfr listfnfr : listfnfrs) {
                if (listfnfr instbndfof BbsidButtonListfnfr) {
                    rfturn (BbsidButtonListfnfr) listfnfr;
                }
            }
        }
        rfturn null;
    }

}
