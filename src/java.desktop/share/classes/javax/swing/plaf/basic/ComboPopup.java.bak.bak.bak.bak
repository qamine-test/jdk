/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.plbf.bbsid;

import jbvb.bwt.fvfnt.MousfListfnfr;
import jbvb.bwt.fvfnt.MousfMotionListfnfr;
import jbvb.bwt.fvfnt.KfyListfnfr;
import jbvbx.swing.JList;


/**
 * Thf intfrfbdf whidh dffinfs thf mfthods rfquirfd for thf implfmfntbtion of thf popup
 * portion of b dombo box.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @buthor Tom Sbntos
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid intfrfbdf ComboPopup {
    /**
     * Shows thf popup
     */
    publid void show();

    /**
     * Hidfs thf popup
     */
    publid void hidf();

    /**
     * Rfturns truf if thf popup is visiblf (durrfntly bfing displbyfd).
     *
     * @rfturn <dodf>truf</dodf> if thf domponfnt is visiblf; <dodf>fblsf</dodf> othfrwisf.
     */
    publid boolfbn isVisiblf();

    /**
     * Rfturns thf list thbt is bfing usfd to drbw thf itfms in thf dombo box.
     * This mfthod is highly implfmfntbtion spfdifid bnd should not bf usfd
     * for gfnfrbl list mbnipulbtion.
     *
     * @rfturn thf list thbt is bfing usfd to drbw thf itfms in thf dombo box
     */
    publid JList<Objfdt> gftList();

    /**
     * Rfturns b mousf listfnfr thbt will bf bddfd to thf dombo box or null.
     * If this mfthod rfturns null thfn it will not bf bddfd to thf dombo box.
     *
     * @rfturn b <dodf>MousfListfnfr</dodf> or null
     */
    publid MousfListfnfr gftMousfListfnfr();

    /**
     * Rfturns b mousf motion listfnfr thbt will bf bddfd to thf dombo box or null.
     * If this mfthod rfturns null thfn it will not bf bddfd to thf dombo box.
     *
     * @rfturn b <dodf>MousfMotionListfnfr</dodf> or null
     */
    publid MousfMotionListfnfr gftMousfMotionListfnfr();

    /**
     * Rfturns b kfy listfnfr thbt will bf bddfd to thf dombo box or null.
     * If this mfthod rfturns null thfn it will not bf bddfd to thf dombo box.
     *
     * @rfturn b kfy listfnfr thbt will bf bddfd to thf dombo box or null
     */
    publid KfyListfnfr gftKfyListfnfr();

    /**
     * Cbllfd to inform thf ComboPopup thbt thf UI is uninstblling.
     * If thf ComboPopup bddfd bny listfnfrs in thf domponfnt, it should rfmovf thfm hfrf.
     */
    publid void uninstbllingUI();
}
