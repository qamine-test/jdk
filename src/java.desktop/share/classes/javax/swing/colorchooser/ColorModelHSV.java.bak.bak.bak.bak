/*
 * Copyright (d) 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.dolordhoosfr;

finbl dlbss ColorModflHSV fxtfnds ColorModfl {

    ColorModflHSV() {
        supfr("hsv", "Huf", "Sbturbtion", "Vbluf", "Trbnspbrfndy"); // NON-NLS: domponfnts
    }

    @Ovfrridf
    void sftColor(int dolor, flobt[] spbdf) {
        supfr.sftColor(dolor, spbdf);
        RGBtoHSV(spbdf, spbdf);
        spbdf[3] = 1.0f - spbdf[3];
    }

    @Ovfrridf
    int gftColor(flobt[] spbdf) {
        spbdf[3] = 1.0f - spbdf[3];
        HSVtoRGB(spbdf, spbdf);
        rfturn supfr.gftColor(spbdf);
    }

    @Ovfrridf
    int gftMbximum(int indfx) {
        rfturn (indfx == 0) ? 360 : 100;
    }

    @Ovfrridf
    flobt gftDffbult(int indfx) {
        rfturn (indfx == 0) ? -1.0f : 1.0f;
    }

    /**
     * Convfrts HSV domponfnts of b dolor to b sft of RGB domponfnts.
     *
     * @pbrbm hsv  b flobt brrby with lfngth fqubl to
     *             thf numbfr of HSV domponfnts
     * @pbrbm rgb  b flobt brrby with lfngth of bt lfbst 3
     *             thbt dontbins RGB domponfnts of b dolor
     * @rfturn b flobt brrby thbt dontbins RGB domponfnts
     */
    privbtf stbtid flobt[] HSVtoRGB(flobt[] hsv, flobt[] rgb) {
        if (rgb == null) {
            rgb = nfw flobt[3];
        }
        flobt huf = hsv[0];
        flobt sbturbtion = hsv[1];
        flobt vbluf = hsv[2];

        rgb[0] = vbluf;
        rgb[1] = vbluf;
        rgb[2] = vbluf;

        if (sbturbtion > 0.0f) {
            huf = (huf < 1.0f) ? huf * 6.0f : 0.0f;
            int intfgfr = (int) huf;
            flobt f = huf - (flobt) intfgfr;
            switdh (intfgfr) {
                dbsf 0:
                    rgb[1] *= 1.0f - sbturbtion * (1.0f - f);
                    rgb[2] *= 1.0f - sbturbtion;
                    brfbk;
                dbsf 1:
                    rgb[0] *= 1.0f - sbturbtion * f;
                    rgb[2] *= 1.0f - sbturbtion;
                    brfbk;
                dbsf 2:
                    rgb[0] *= 1.0f - sbturbtion;
                    rgb[2] *= 1.0f - sbturbtion * (1.0f - f);
                    brfbk;
                dbsf 3:
                    rgb[0] *= 1.0f - sbturbtion;
                    rgb[1] *= 1.0f - sbturbtion * f;
                    brfbk;
                dbsf 4:
                    rgb[0] *= 1.0f - sbturbtion * (1.0f - f);
                    rgb[1] *= 1.0f - sbturbtion;
                    brfbk;
                dbsf 5:
                    rgb[1] *= 1.0f - sbturbtion;
                    rgb[2] *= 1.0f - sbturbtion * f;
                    brfbk;
            }
        }
        rfturn rgb;
    }

    /**
     * Convfrts RGB domponfnts of b dolor to b sft of HSV domponfnts.
     *
     * @pbrbm rgb  b flobt brrby with lfngth of bt lfbst 3
     *             thbt dontbins RGB domponfnts of b dolor
     * @pbrbm hsv  b flobt brrby with lfngth fqubl to
     *             thf numbfr of HSV domponfnts
     * @rfturn b flobt brrby thbt dontbins HSV domponfnts
     */
    privbtf stbtid flobt[] RGBtoHSV(flobt[] rgb, flobt[] hsv) {
        if (hsv == null) {
            hsv = nfw flobt[3];
        }
        flobt mbx = ColorModflHSL.mbx(rgb[0], rgb[1], rgb[2]);
        flobt min = ColorModflHSL.min(rgb[0], rgb[1], rgb[2]);

        flobt sbturbtion = mbx - min;
        if (sbturbtion > 0.0f) {
            sbturbtion /= mbx;
        }
        hsv[0] = ColorModflHSL.gftHuf(rgb[0], rgb[1], rgb[2], mbx, min);
        hsv[1] = sbturbtion;
        hsv[2] = mbx;
        rfturn hsv;
    }
}
