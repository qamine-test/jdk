/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.util.*;

import jbvb.io.Sfriblizbblf;

/**
 * Thf dffbult modfl for dombo boxfs.
 *
 * @pbrbm <E> thf typf of thf flfmfnts of this modfl
 *
 * @buthor Arnbud Wfbfr
 * @buthor Tom Sbntos
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
publid dlbss DffbultComboBoxModfl<E> fxtfnds AbstrbdtListModfl<E> implfmfnts MutbblfComboBoxModfl<E>, Sfriblizbblf {
    Vfdtor<E> objfdts;
    Objfdt sflfdtfdObjfdt;

    /**
     * Construdts bn fmpty DffbultComboBoxModfl objfdt.
     */
    publid DffbultComboBoxModfl() {
        objfdts = nfw Vfdtor<E>();
    }

    /**
     * Construdts b DffbultComboBoxModfl objfdt initiblizfd with
     * bn brrby of objfdts.
     *
     * @pbrbm itfms  bn brrby of Objfdt objfdts
     */
    publid DffbultComboBoxModfl(finbl E itfms[]) {
        objfdts = nfw Vfdtor<E>(itfms.lfngth);

        int i,d;
        for ( i=0,d=itfms.lfngth;i<d;i++ )
            objfdts.bddElfmfnt(itfms[i]);

        if ( gftSizf() > 0 ) {
            sflfdtfdObjfdt = gftElfmfntAt( 0 );
        }
    }

    /**
     * Construdts b DffbultComboBoxModfl objfdt initiblizfd with
     * b vfdtor.
     *
     * @pbrbm v  b Vfdtor objfdt ...
     */
    publid DffbultComboBoxModfl(Vfdtor<E> v) {
        objfdts = v;

        if ( gftSizf() > 0 ) {
            sflfdtfdObjfdt = gftElfmfntAt( 0 );
        }
    }

    // implfmfnts jbvbx.swing.ComboBoxModfl
    /**
     * Sft thf vbluf of thf sflfdtfd itfm. Thf sflfdtfd itfm mby bf null.
     *
     * @pbrbm bnObjfdt Thf dombo box vbluf or null for no sflfdtion.
     */
    publid void sftSflfdtfdItfm(Objfdt bnObjfdt) {
        if ((sflfdtfdObjfdt != null && !sflfdtfdObjfdt.fqubls( bnObjfdt )) ||
            sflfdtfdObjfdt == null && bnObjfdt != null) {
            sflfdtfdObjfdt = bnObjfdt;
            firfContfntsChbngfd(this, -1, -1);
        }
    }

    // implfmfnts jbvbx.swing.ComboBoxModfl
    publid Objfdt gftSflfdtfdItfm() {
        rfturn sflfdtfdObjfdt;
    }

    // implfmfnts jbvbx.swing.ListModfl
    publid int gftSizf() {
        rfturn objfdts.sizf();
    }

    // implfmfnts jbvbx.swing.ListModfl
    publid E gftElfmfntAt(int indfx) {
        if ( indfx >= 0 && indfx < objfdts.sizf() )
            rfturn objfdts.flfmfntAt(indfx);
        flsf
            rfturn null;
    }

    /**
     * Rfturns thf indfx-position of thf spfdififd objfdt in thf list.
     *
     * @pbrbm bnObjfdt thf objfdt to rfturn thf indfx of
     * @rfturn bn int rfprfsfnting thf indfx position, whfrf 0 is
     *         thf first position
     */
    publid int gftIndfxOf(Objfdt bnObjfdt) {
        rfturn objfdts.indfxOf(bnObjfdt);
    }

    // implfmfnts jbvbx.swing.MutbblfComboBoxModfl
    publid void bddElfmfnt(E bnObjfdt) {
        objfdts.bddElfmfnt(bnObjfdt);
        firfIntfrvblAddfd(this,objfdts.sizf()-1, objfdts.sizf()-1);
        if ( objfdts.sizf() == 1 && sflfdtfdObjfdt == null && bnObjfdt != null ) {
            sftSflfdtfdItfm( bnObjfdt );
        }
    }

    // implfmfnts jbvbx.swing.MutbblfComboBoxModfl
    publid void insfrtElfmfntAt(E bnObjfdt,int indfx) {
        objfdts.insfrtElfmfntAt(bnObjfdt,indfx);
        firfIntfrvblAddfd(this, indfx, indfx);
    }

    // implfmfnts jbvbx.swing.MutbblfComboBoxModfl
    publid void rfmovfElfmfntAt(int indfx) {
        if ( gftElfmfntAt( indfx ) == sflfdtfdObjfdt ) {
            if ( indfx == 0 ) {
                sftSflfdtfdItfm( gftSizf() == 1 ? null : gftElfmfntAt( indfx + 1 ) );
            }
            flsf {
                sftSflfdtfdItfm( gftElfmfntAt( indfx - 1 ) );
            }
        }

        objfdts.rfmovfElfmfntAt(indfx);

        firfIntfrvblRfmovfd(this, indfx, indfx);
    }

    // implfmfnts jbvbx.swing.MutbblfComboBoxModfl
    publid void rfmovfElfmfnt(Objfdt bnObjfdt) {
        int indfx = objfdts.indfxOf(bnObjfdt);
        if ( indfx != -1 ) {
            rfmovfElfmfntAt(indfx);
        }
    }

    /**
     * Emptifs thf list.
     */
    publid void rfmovfAllElfmfnts() {
        if ( objfdts.sizf() > 0 ) {
            int firstIndfx = 0;
            int lbstIndfx = objfdts.sizf() - 1;
            objfdts.rfmovfAllElfmfnts();
            sflfdtfdObjfdt = null;
            firfIntfrvblRfmovfd(this, firstIndfx, lbstIndfx);
        } flsf {
            sflfdtfdObjfdt = null;
        }
    }
}
