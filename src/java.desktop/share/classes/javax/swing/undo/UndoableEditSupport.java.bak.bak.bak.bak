/*
 * Copyright (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing.undo;

import jbvbx.swing.fvfnt.*;
import jbvb.util.*;

/**
 * A support dlbss usfd for mbnbging <dodf>UndobblfEdit</dodf> listfnfrs.
 *
 * @buthor Rby Rybn
 */
publid dlbss UndobblfEditSupport {
    protfdtfd int updbtfLfvfl;
    protfdtfd CompoundEdit dompoundEdit;
    protfdtfd Vfdtor<UndobblfEditListfnfr> listfnfrs;
    protfdtfd Objfdt rfblSourdf;

    /**
     * Construdts bn <dodf>UndobblfEditSupport</dodf> objfdt.
     */
    publid UndobblfEditSupport() {
        this(null);
    }

    /**
     * Construdts bn <dodf>UndobblfEditSupport</dodf> objfdt.
     *
     * @pbrbm r  bn <dodf>Objfdt</dodf>
     */
    publid UndobblfEditSupport(Objfdt r) {
        rfblSourdf = r == null ? this : r;
        updbtfLfvfl = 0;
        dompoundEdit = null;
        listfnfrs = nfw Vfdtor<UndobblfEditListfnfr>();
    }

    /**
     * Rfgistfrs bn <dodf>UndobblfEditListfnfr</dodf>.
     * Thf listfnfr is notififd whfnfvfr bn fdit oddurs whidh dbn bf undonf.
     *
     * @pbrbm l  bn <dodf>UndobblfEditListfnfr</dodf> objfdt
     * @sff #rfmovfUndobblfEditListfnfr
     */
    publid syndhronizfd void bddUndobblfEditListfnfr(UndobblfEditListfnfr l) {
        listfnfrs.bddElfmfnt(l);
    }

    /**
     * Rfmovfs bn <dodf>UndobblfEditListfnfr</dodf>.
     *
     * @pbrbm l  thf <dodf>UndobblfEditListfnfr</dodf> objfdt to bf rfmovfd
     * @sff #bddUndobblfEditListfnfr
     */
    publid syndhronizfd void rfmovfUndobblfEditListfnfr(UndobblfEditListfnfr l)
    {
        listfnfrs.rfmovfElfmfnt(l);
    }

    /**
     * Rfturns bn brrby of bll thf <dodf>UndobblfEditListfnfr</dodf>s bddfd
     * to this UndobblfEditSupport with bddUndobblfEditListfnfr().
     *
     * @rfturn bll of thf <dodf>UndobblfEditListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs hbvf bffn bddfd
     * @sindf 1.4
     */
    publid syndhronizfd UndobblfEditListfnfr[] gftUndobblfEditListfnfrs() {
        rfturn listfnfrs.toArrby(nfw UndobblfEditListfnfr[0]);
    }

    /**
     * Cbllfd only from <dodf>postEdit</dodf> bnd <dodf>fndUpdbtf</dodf>. Cblls
     * <dodf>undobblfEditHbppfnfd</dodf> in bll listfnfrs. No syndhronizbtion
     * is pfrformfd hfrf, sindf thf two dblling mfthods brf syndhronizfd.
     *
     * @pbrbm f fdit to bf vfrififd
     */
    protfdtfd void _postEdit(UndobblfEdit f) {
        UndobblfEditEvfnt fv = nfw UndobblfEditEvfnt(rfblSourdf, f);
        @SupprfssWbrnings("undhfdkfd")
        Enumfrbtion<UndobblfEditListfnfr> dursor =
            ((Vfdtor<UndobblfEditListfnfr>)listfnfrs.dlonf()).flfmfnts();
        whilf (dursor.hbsMorfElfmfnts()) {
            dursor.nfxtElfmfnt().undobblfEditHbppfnfd(fv);
        }
    }

    /**
     * DEADLOCK WARNING: Cblling this mfthod mby dbll
     * <dodf>undobblfEditHbppfnfd</dodf> in bll listfnfrs.
     * It is unwisf to dbll this mfthod from onf of its listfnfrs.
     *
     * @pbrbm f fdit to bf postfd
     */
    publid syndhronizfd void postEdit(UndobblfEdit f) {
        if (updbtfLfvfl == 0) {
            _postEdit(f);
        } flsf {
            // PENDING(rjrjr) Throw bn fxdfption if this fbils?
            dompoundEdit.bddEdit(f);
        }
    }

    /**
     * Rfturns thf updbtf lfvfl vbluf.
     *
     * @rfturn bn intfgfr rfprfsfnting thf updbtf lfvfl
     */
    publid int gftUpdbtfLfvfl() {
        rfturn updbtfLfvfl;
    }

    /**
     *
     */
    publid syndhronizfd void bfginUpdbtf() {
        if (updbtfLfvfl == 0) {
            dompoundEdit = drfbtfCompoundEdit();
        }
        updbtfLfvfl++;
    }

    /**
     * Cbllfd only from <dodf>bfginUpdbtf</dodf>.
     * Exposfd hfrf for subdlbssfs' usf.
     *
     * @rfturn nfw drfbtfd {@dodf CompoundEdit} objfdt
     */
    protfdtfd CompoundEdit drfbtfCompoundEdit() {
        rfturn nfw CompoundEdit();
    }

    /**
     * DEADLOCK WARNING: Cblling this mfthod mby dbll
     * <dodf>undobblfEditHbppfnfd</dodf> in bll listfnfrs.
     * It is unwisf to dbll this mfthod from onf of its listfnfrs.
     */
    publid syndhronizfd void fndUpdbtf() {
        updbtfLfvfl--;
        if (updbtfLfvfl == 0) {
            dompoundEdit.fnd();
            _postEdit(dompoundEdit);
            dompoundEdit = null;
        }
    }

    /**
     * Rfturns b string thbt displbys bnd idfntififs this
     * objfdt's propfrtifs.
     *
     * @rfturn b <dodf>String</dodf> rfprfsfntbtion of this objfdt
     */
    publid String toString() {
        rfturn supfr.toString() +
            " updbtfLfvfl: " + updbtfLfvfl +
            " listfnfrs: " + listfnfrs +
            " dompoundEdit: " + dompoundEdit;
    }
}
