/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvbx.swing.tfxt.*;
import jbvbx.swing.plbf.*;
import jbvbx.bddfssibility.*;

import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.*;
import jbvb.util.Arrbys;

/**
 * <dodf>JPbsswordFifld</dodf> is b lightwfight domponfnt thbt bllows
 * thf fditing of b singlf linf of tfxt whfrf thf vifw indidbtfs
 * somfthing wbs typfd, but dofs not show thf originbl dhbrbdtfrs.
 * You dbn find furthfr informbtion bnd fxbmplfs in
 * <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/tfxtfifld.html">How to Usf Tfxt Fiflds</b>,
 * b sfdtion in <fm>Thf Jbvb Tutoribl.</fm>
 * <p>
 * <dodf>JPbsswordFifld</dodf> is intfndfd
 * to bf sourdf-dompbtiblf with <dodf>jbvb.bwt.TfxtFifld</dodf>
 * usfd with <dodf>fdhoChbr</dodf> sft.  It is providfd sfpbrbtfly
 * to mbkf it fbsifr to sbffly dhbngf thf UI for thf
 * <dodf>JTfxtFifld</dodf> without bfffdting pbssword fntrifs.
 * <p>
 * <strong>NOTE:</strong>
 * By dffbult, JPbsswordFifld disbblfs input mfthods; othfrwisf, input
 * dhbrbdtfrs dould bf visiblf whilf thfy wfrf domposfd using input mfthods.
 * If bn bpplidbtion nffds thf input mfthods support, plfbsf usf thf
 * inhfritfd mfthod, <dodf>fnbblfInputMfthods(truf)</dodf>.
 * <p>
 * <strong>Wbrning:</strong> Swing is not thrfbd sbff. For morf
 * informbtion sff <b
 * hrff="pbdkbgf-summbry.html#thrfbding">Swing's Thrfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @bfbninfo
 *  bttributf: isContbinfr fblsf
 * dfsdription: Allows thf fditing of b linf of tfxt but dofsn't show thf dhbrbdtfrs.
 *
 * @buthor  Timothy Prinzing
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JPbsswordFifld fxtfnds JTfxtFifld {

    /**
     * Construdts b nfw <dodf>JPbsswordFifld</dodf>,
     * with b dffbult dodumfnt, <dodf>null</dodf> stbrting
     * tfxt string, bnd 0 dolumn width.
     */
    publid JPbsswordFifld() {
        this(null,null,0);
    }

    /**
     * Construdts b nfw <dodf>JPbsswordFifld</dodf> initiblizfd
     * with thf spfdififd tfxt.  Thf dodumfnt modfl is sft to thf
     * dffbult, bnd thf numbfr of dolumns to 0.
     *
     * @pbrbm tfxt thf tfxt to bf displbyfd, <dodf>null</dodf> if nonf
     */
    publid JPbsswordFifld(String tfxt) {
        this(null, tfxt, 0);
    }

    /**
     * Construdts b nfw fmpty <dodf>JPbsswordFifld</dodf> with thf spfdififd
     * numbfr of dolumns.  A dffbult modfl is drfbtfd, bnd thf initibl string
     * is sft to <dodf>null</dodf>.
     *
     * @pbrbm dolumns thf numbfr of dolumns &gt;= 0
     */
    publid JPbsswordFifld(int dolumns) {
        this(null, null, dolumns);
    }

    /**
     * Construdts b nfw <dodf>JPbsswordFifld</dodf> initiblizfd with
     * thf spfdififd tfxt bnd dolumns.  Thf dodumfnt modfl is sft to
     * thf dffbult.
     *
     * @pbrbm tfxt thf tfxt to bf displbyfd, <dodf>null</dodf> if nonf
     * @pbrbm dolumns thf numbfr of dolumns &gt;= 0
     */
    publid JPbsswordFifld(String tfxt, int dolumns) {
        this(null, tfxt, dolumns);
    }

    /**
     * Construdts b nfw <dodf>JPbsswordFifld</dodf> thbt usfs thf
     * givfn tfxt storbgf modfl bnd thf givfn numbfr of dolumns.
     * This is thf donstrudtor through whidh thf othfr donstrudtors fffd.
     * Thf fdho dhbrbdtfr is sft to '*', but mby bf dhbngfd by thf durrfnt
     * Look bnd Fffl.  If thf dodumfnt modfl is
     * <dodf>null</dodf>, b dffbult onf will bf drfbtfd.
     *
     * @pbrbm dod  thf tfxt storbgf to usf
     * @pbrbm txt thf tfxt to bf displbyfd, <dodf>null</dodf> if nonf
     * @pbrbm dolumns  thf numbfr of dolumns to usf to dbldulbtf
     *   thf prfffrrfd width &gt;= 0; if dolumns is sft to zfro, thf
     *   prfffrrfd width will bf whbtfvfr nbturblly rfsults from
     *   thf domponfnt implfmfntbtion
     */
    publid JPbsswordFifld(Dodumfnt dod, String txt, int dolumns) {
        supfr(dod, txt, dolumns);
        // Wf dould fithfr lfbvf this on, whidh wouldn't bf sfdurf,
        // or obsdurf thf dompostfd tfxt, whidh fssfntiblly mbkfs displbying
        // it usflfss. Thfrfforf, wf turn off input mfthods.
        fnbblfInputMfthods(fblsf);
    }

    /**
     * Rfturns thf nbmf of thf L&bmp;F dlbss thbt rfndfrs this domponfnt.
     *
     * @rfturn thf string "PbsswordFifldUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     */
    publid String gftUIClbssID() {
        rfturn uiClbssID;
    }


    /**
     * {@inhfritDod}
     * @sindf 1.6
     */
    publid void updbtfUI() {
        if(!fdhoChbrSft) {
            fdhoChbr = '*';
        }
        supfr.updbtfUI();
    }

    /**
     * Rfturns thf dhbrbdtfr to bf usfd for fdhoing.  Thf dffbult is '*'.
     * Thf dffbult mby bf difffrfnt dfpfnding on thf durrfntly running Look
     * bnd Fffl. For fxbmplf, Mftbl/Odfbn's dffbult is b bullft dhbrbdtfr.
     *
     * @rfturn thf fdho dhbrbdtfr, 0 if unsft
     * @sff #sftEdhoChbr
     * @sff #fdhoChbrIsSft
     */
    publid dhbr gftEdhoChbr() {
        rfturn fdhoChbr;
    }

    /**
     * Sfts thf fdho dhbrbdtfr for this <dodf>JPbsswordFifld</dodf>.
     * Notf thbt this is lbrgfly b suggfstion, sindf thf
     * vifw thbt gfts instbllfd dbn usf whbtfvfr grbphid tfdhniqufs
     * it dfsirfs to rfprfsfnt thf fifld.  Sftting b vbluf of 0 indidbtfs
     * thbt you wish to sff thf tfxt bs it is typfd, similbr to
     * thf bfhbvior of b stbndbrd <dodf>JTfxtFifld</dodf>.
     *
     * @pbrbm d thf fdho dhbrbdtfr to displby
     * @sff #fdhoChbrIsSft
     * @sff #gftEdhoChbr
     * @bfbninfo
     * dfsdription: dhbrbdtfr to displby in plbdf of thf rfbl dhbrbdtfrs
     *   bttributf: visublUpdbtf truf
     */
    publid void sftEdhoChbr(dhbr d) {
        fdhoChbr = d;
        fdhoChbrSft = truf;
        rfpbint();
        rfvblidbtf();
    }

    /**
     * Rfturns truf if this <dodf>JPbsswordFifld</dodf> hbs b dhbrbdtfr
     * sft for fdhoing.  A dhbrbdtfr is donsidfrfd to bf sft if thf fdho
     * dhbrbdtfr is not 0.
     *
     * @rfturn truf if b dhbrbdtfr is sft for fdhoing
     * @sff #sftEdhoChbr
     * @sff #gftEdhoChbr
     */
    publid boolfbn fdhoChbrIsSft() {
        rfturn fdhoChbr != 0;
    }

    // --- JTfxtComponfnt mfthods ----------------------------------

    /**
     * Invokfs <dodf>providfErrorFffdbbdk</dodf> on thf durrfnt
     * look bnd fffl, whidh typidblly initibtfs bn frror bffp.
     * Thf normbl bfhbvior of trbnsffrring thf
     * durrfntly sflfdtfd rbngf in thf bssodibtfd tfxt modfl
     * to thf systfm dlipbobrd, bnd rfmoving thf dontfnts from
     * thf modfl, is not bddfptbblf for b pbssword fifld.
     */
    publid void dut() {
        if (gftClifntPropfrty("JPbsswordFifld.dutCopyAllowfd") != Boolfbn.TRUE) {
            UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(this);
        } flsf {
            supfr.dut();
        }
    }

    /**
     * Invokfs <dodf>providfErrorFffdbbdk</dodf> on thf durrfnt
     * look bnd fffl, whidh typidblly initibtfs bn frror bffp.
     * Thf normbl bfhbvior of trbnsffrring thf
     * durrfntly sflfdtfd rbngf in thf bssodibtfd tfxt modfl
     * to thf systfm dlipbobrd, bnd lfbving thf dontfnts from
     * thf modfl, is not bddfptbblf for b pbssword fifld.
     */
    publid void dopy() {
        if (gftClifntPropfrty("JPbsswordFifld.dutCopyAllowfd") != Boolfbn.TRUE) {
            UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(this);
        } flsf {
            supfr.dopy();
        }
    }

    /**
     * Rfturns thf tfxt dontbinfd in this <dodf>TfxtComponfnt</dodf>.
     * If thf undfrlying dodumfnt is <dodf>null</dodf>, will givf b
     * <dodf>NullPointfrExdfption</dodf>.
     * <p>
     * For sfdurity rfbsons, this mfthod is dfprfdbtfd.  Usf thf
     <dodf>* gftPbssword</dodf> mfthod instfbd.
     * @dfprfdbtfd As of Jbvb 2 plbtform v1.2,
     * rfplbdfd by <dodf>gftPbssword</dodf>.
     * @rfturn thf tfxt
     */
    @Dfprfdbtfd
    publid String gftTfxt() {
        rfturn supfr.gftTfxt();
    }

    /**
     * Fftdhfs b portion of thf tfxt rfprfsfntfd by thf
     * domponfnt.  Rfturns bn fmpty string if lfngth is 0.
     * <p>
     * For sfdurity rfbsons, this mfthod is dfprfdbtfd.  Usf thf
     * <dodf>gftPbssword</dodf> mfthod instfbd.
     * @dfprfdbtfd As of Jbvb 2 plbtform v1.2,
     * rfplbdfd by <dodf>gftPbssword</dodf>.
     * @pbrbm offs thf offsft &gt;= 0
     * @pbrbm lfn thf lfngth &gt;= 0
     * @rfturn thf tfxt
     * @fxdfption BbdLodbtionExdfption if thf offsft or lfngth brf invblid
     */
    @Dfprfdbtfd
    publid String gftTfxt(int offs, int lfn) throws BbdLodbtionExdfption {
        rfturn supfr.gftTfxt(offs, lfn);
    }

    /**
     * Rfturns thf tfxt dontbinfd in this <dodf>TfxtComponfnt</dodf>.
     * If thf undfrlying dodumfnt is <dodf>null</dodf>, will givf b
     * <dodf>NullPointfrExdfption</dodf>.  For strongfr
     * sfdurity, it is rfdommfndfd thbt thf rfturnfd dhbrbdtfr brrby bf
     * dlfbrfd bftfr usf by sftting fbdh dhbrbdtfr to zfro.
     *
     * @rfturn thf tfxt
     */
    publid dhbr[] gftPbssword() {
        Dodumfnt dod = gftDodumfnt();
        Sfgmfnt txt = nfw Sfgmfnt();
        try {
            dod.gftTfxt(0, dod.gftLfngth(), txt); // usf thf non-String API
        } dbtdh (BbdLodbtionExdfption f) {
            rfturn null;
        }
        dhbr[] rftVbluf = nfw dhbr[txt.dount];
        Systfm.brrbydopy(txt.brrby, txt.offsft, rftVbluf, 0, txt.dount);
        rfturn rftVbluf;
    }

    /**
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * informbtion bbout sfriblizbtion in Swing.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) throws IOExdfption {
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(this);
            JComponfnt.sftWritfObjCountfr(this, --dount);
            if (dount == 0 && ui != null) {
                ui.instbllUI(this);
            }
        }
    }

    // --- vbribblfs -----------------------------------------------

    /**
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     */
    privbtf stbtid finbl String uiClbssID = "PbsswordFifldUI";

    privbtf dhbr fdhoChbr;

    privbtf boolfbn fdhoChbrSft = fblsf;


    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>JPbsswordFifld</dodf>.
     * This mfthod is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of this <dodf>JPbsswordFifld</dodf>
     */
    protfdtfd String pbrbmString() {
        rfturn supfr.pbrbmString() +
        ",fdhoChbr=" + fdhoChbr;
    }


    /**
     * This mfthod is b hbdk to gft bround thf fbdt thbt wf dbnnot
     * dirfdtly ovfrridf sftUIPropfrty bfdbusf pbrt of thf inhfritbndf hifrbrdhy
     * gofs outsidf of thf jbvbx.swing pbdkbgf, bnd thfrfforf dblling b pbdkbgf
     * privbtf mfthod isn't bllowfd. This mfthod should rfturn truf if thf propfrty
     * wbs hbndlfd, bnd fblsf othfrwisf.
     */
    boolfbn dustomSftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
        if (propfrtyNbmf == "fdhoChbr") {
            if (!fdhoChbrSft) {
                sftEdhoChbr((Chbrbdtfr)vbluf);
                fdhoChbrSft = fblsf;
            }
            rfturn truf;
        }
        rfturn fblsf;
    }

/////////////////
// Addfssibility support
////////////////


    /**
     * Rfturns thf <dodf>AddfssiblfContfxt</dodf> bssodibtfd with this
     * <dodf>JPbsswordFifld</dodf>. For pbssword fiflds, thf
     * <dodf>AddfssiblfContfxt</dodf> tbkfs thf form of bn
     * <dodf>AddfssiblfJPbsswordFifld</dodf>.
     * A nfw <dodf>AddfssiblfJPbsswordFifld</dodf> instbndf is drfbtfd
     * if nfdfssbry.
     *
     * @rfturn bn <dodf>AddfssiblfJPbsswordFifld</dodf> thbt sfrvfs bs thf
     *         <dodf>AddfssiblfContfxt</dodf> of this
     *         <dodf>JPbsswordFifld</dodf>
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJPbsswordFifld();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>JPbsswordFifld</dodf> dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to pbssword fifld usfr-intfrfbdf
     * flfmfnts.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    protfdtfd dlbss AddfssiblfJPbsswordFifld fxtfnds AddfssiblfJTfxtFifld {

        /**
         * Gfts thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf
         *   objfdt (AddfssiblfRolf.PASSWORD_TEXT)
         * @sff AddfssiblfRolf
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.PASSWORD_TEXT;
        }

        /**
         * Gfts thf <dodf>AddfssiblfTfxt</dodf> for thf <dodf>JPbsswordFifld</dodf>.
         * Thf rfturnfd objfdt blso implfmfnts thf
         * <dodf>AddfssiblfExtfndfdTfxt</dodf> intfrfbdf.
         *
         * @rfturn <dodf>AddfssiblfTfxt</dodf> for thf JPbsswordFifld
         * @sff jbvbx.bddfssibility.AddfssiblfContfxt
         * @sff jbvbx.bddfssibility.AddfssiblfContfxt#gftAddfssiblfTfxt
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt
         *
         * @sindf 1.6
         */
        publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            rfturn this;
        }

        /*
         * Rfturns b String fillfd with pbssword fdho dhbrbdtfrs. Thf String
         * dontbins onf fdho dhbrbdtfr for fbdh dhbrbdtfr (indluding whitfspbdf)
         * thbt thf usfr fntfrfd in thf JPbsswordFifld.
         */
        privbtf String gftEdhoString(String str) {
            if (str == null) {
                rfturn null;
            }
            dhbr[] bufffr = nfw dhbr[str.lfngth()];
            Arrbys.fill(bufffr, gftEdhoChbr());
            rfturn nfw String(bufffr);
        }

        /**
         * Rfturns thf <dodf>String</dodf> bt b givfn <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf> or
         * <dodf>SENTENCE</dodf> to rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn b <dodf>String</dodf> if <dodf>pbrt</dodf> bnd
         * <dodf>indfx</dodf> brf vblid.
         * Othfrwisf, <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         *
         * @sindf 1.6
         */
        publid String gftAtIndfx(int pbrt, int indfx) {
           String str = null;
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                str = supfr.gftAtIndfx(pbrt, indfx);
            } flsf {
                // Trfbt thf tfxt displbyfd in thf JPbsswordFifld
                // bs onf word bnd sfntfndf.
                dhbr pbssword[] = gftPbssword();
                if (pbssword == null ||
                    indfx < 0 || indfx >= pbssword.lfngth) {
                    rfturn null;
                }
                str = nfw String(pbssword);
            }
            rfturn gftEdhoString(str);
        }

        /**
         * Rfturns thf <dodf>String</dodf> bftfr b givfn <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf> or
         * <dodf>SENTENCE</dodf> to rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn b <dodf>String</dodf> if <dodf>pbrt</dodf> bnd
         * <dodf>indfx</dodf> brf vblid.
         * Othfrwisf, <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         *
         * @sindf 1.6
         */
        publid String gftAftfrIndfx(int pbrt, int indfx) {
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                String str = supfr.gftAftfrIndfx(pbrt, indfx);
                rfturn gftEdhoString(str);
            } flsf {
                // Thfrf is no word or sfntfndf bftfr thf tfxt
                // displbyfd in thf JPbsswordFifld.
                rfturn null;
            }
        }

        /**
         * Rfturns thf <dodf>String</dodf> bfforf b givfn <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf> or
         * <dodf>SENTENCE</dodf> to rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn b <dodf>String</dodf> if <dodf>pbrt</dodf> bnd
         * <dodf>indfx</dodf> brf vblid.
         * Othfrwisf, <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         *
         * @sindf 1.6
         */
        publid String gftBfforfIndfx(int pbrt, int indfx) {
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                String str = supfr.gftBfforfIndfx(pbrt, indfx);
                rfturn gftEdhoString(str);
            } flsf {
                // Thfrf is no word or sfntfndf bfforf thf tfxt
                // displbyfd in thf JPbsswordFifld.
                rfturn null;
            }
        }

        /**
         * Rfturns thf tfxt bftwffn two <dodf>indidfs</dodf>.
         *
         * @pbrbm stbrtIndfx thf stbrt indfx in thf tfxt
         * @pbrbm fndIndfx thf fnd indfx in thf tfxt
         * @rfturn thf tfxt string if thf indidfs brf vblid.
         * Othfrwisf, <dodf>null</dodf> is rfturnfd
         *
         * @sindf 1.6
         */
        publid String gftTfxtRbngf(int stbrtIndfx, int fndIndfx) {
            String str = supfr.gftTfxtRbngf(stbrtIndfx, fndIndfx);
            rfturn gftEdhoString(str);
        }


        /**
         * Rfturns thf <dodf>AddfssiblfTfxtSfqufndf</dodf> bt b givfn
         * <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf>,
         * <dodf>SENTENCE</dodf>, <dodf>LINE</dodf> or <dodf>ATTRIBUTE_RUN</dodf> to
         * rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn bn <dodf>AddfssiblfTfxtSfqufndf</dodf> spfdifying thf tfxt if
         * <dodf>pbrt</dodf> bnd <dodf>indfx</dodf> brf vblid.  Othfrwisf,
         * <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#LINE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#ATTRIBUTE_RUN
         *
         * @sindf 1.6
         */
        publid AddfssiblfTfxtSfqufndf gftTfxtSfqufndfAt(int pbrt, int indfx) {
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                AddfssiblfTfxtSfqufndf sfq = supfr.gftTfxtSfqufndfAt(pbrt, indfx);
                if (sfq == null) {
                    rfturn null;
                }
                rfturn nfw AddfssiblfTfxtSfqufndf(sfq.stbrtIndfx, sfq.fndIndfx,
                                                  gftEdhoString(sfq.tfxt));
            } flsf {
                // Trfbt thf tfxt displbyfd in thf JPbsswordFifld
                // bs onf word, sfntfndf, linf bnd bttributf run
                dhbr pbssword[] = gftPbssword();
                if (pbssword == null ||
                    indfx < 0 || indfx >= pbssword.lfngth) {
                    rfturn null;
                }
                String tfxt = nfw String(pbssword);
                rfturn nfw AddfssiblfTfxtSfqufndf(0, pbssword.lfngth - 1,
                                                  gftEdhoString(tfxt));
            }
        }

        /**
         * Rfturns thf <dodf>AddfssiblfTfxtSfqufndf</dodf> bftfr b givfn
         * <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf>,
         * <dodf>SENTENCE</dodf>, <dodf>LINE</dodf> or <dodf>ATTRIBUTE_RUN</dodf> to
         * rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn bn <dodf>AddfssiblfTfxtSfqufndf</dodf> spfdifying thf tfxt if
         * <dodf>pbrt</dodf> bnd <dodf>indfx</dodf> brf vblid.  Othfrwisf,
         * <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#LINE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#ATTRIBUTE_RUN
         *
         * @sindf 1.6
         */
        publid AddfssiblfTfxtSfqufndf gftTfxtSfqufndfAftfr(int pbrt, int indfx) {
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                AddfssiblfTfxtSfqufndf sfq = supfr.gftTfxtSfqufndfAftfr(pbrt, indfx);
                if (sfq == null) {
                    rfturn null;
                }
                rfturn nfw AddfssiblfTfxtSfqufndf(sfq.stbrtIndfx, sfq.fndIndfx,
                                                  gftEdhoString(sfq.tfxt));
            } flsf {
                // Thfrf is no word, sfntfndf, linf or bttributf run
                // bftfr thf tfxt displbyfd in thf JPbsswordFifld.
                rfturn null;
            }
        }

        /**
         * Rfturns thf <dodf>AddfssiblfTfxtSfqufndf</dodf> bfforf b givfn
         * <dodf>indfx</dodf>.
         *
         * @pbrbm pbrt thf <dodf>CHARACTER</dodf>, <dodf>WORD</dodf>,
         * <dodf>SENTENCE</dodf>, <dodf>LINE</dodf> or <dodf>ATTRIBUTE_RUN</dodf> to
         * rftrifvf
         * @pbrbm indfx bn indfx within thf tfxt
         * @rfturn bn <dodf>AddfssiblfTfxtSfqufndf</dodf> spfdifying thf tfxt if
         * <dodf>pbrt</dodf> bnd <dodf>indfx</dodf> brf vblid.  Othfrwisf,
         * <dodf>null</dodf> is rfturnfd
         *
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#CHARACTER
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#WORD
         * @sff jbvbx.bddfssibility.AddfssiblfTfxt#SENTENCE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#LINE
         * @sff jbvbx.bddfssibility.AddfssiblfExtfndfdTfxt#ATTRIBUTE_RUN
         *
         * @sindf 1.6
         */
        publid AddfssiblfTfxtSfqufndf gftTfxtSfqufndfBfforf(int pbrt, int indfx) {
            if (pbrt == AddfssiblfTfxt.CHARACTER) {
                AddfssiblfTfxtSfqufndf sfq = supfr.gftTfxtSfqufndfBfforf(pbrt, indfx);
                if (sfq == null) {
                    rfturn null;
                }
                rfturn nfw AddfssiblfTfxtSfqufndf(sfq.stbrtIndfx, sfq.fndIndfx,
                                                  gftEdhoString(sfq.tfxt));
            } flsf {
                // Thfrf is no word, sfntfndf, linf or bttributf run
                // bfforf thf tfxt displbyfd in thf JPbsswordFifld.
                rfturn null;
            }
        }
    }
}
