/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bfbns.*;
import jbvb.util.Hbshtbblf;
import jbvb.util.Enumfrbtion;
import jbvb.io.Sfriblizbblf;
import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.sfdurity.AddfssControllfr;
import jbvbx.swing.fvfnt.SwingPropfrtyChbngfSupport;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * This dlbss providfs dffbult implfmfntbtions for thf JFC <dodf>Adtion</dodf>
 * intfrfbdf. Stbndbrd bfhbviors likf thf gft bnd sft mfthods for
 * <dodf>Adtion</dodf> objfdt propfrtifs (idon, tfxt, bnd fnbblfd) brf dffinfd
 * hfrf. Thf dfvflopfr nffd only subdlbss this bbstrbdt dlbss bnd
 * dffinf thf <dodf>bdtionPfrformfd</dodf> mfthod.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @buthor Gforgfs Sbbb
 * @sff Adtion
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid bbstrbdt dlbss AbstrbdtAdtion implfmfnts Adtion, Clonfbblf, Sfriblizbblf
{
    /**
     * Whfthfr or not bdtions should rfdonfigurf bll propfrtifs on null.
     */
    privbtf stbtid Boolfbn RECONFIGURE_ON_NULL;

    /**
     * Spfdififs whfthfr bdtion is fnbblfd; thf dffbult is truf.
     */
    protfdtfd boolfbn fnbblfd = truf;


    /**
     * Contbins thf brrby of kfy bindings.
     */
    privbtf trbnsifnt ArrbyTbblf brrbyTbblf;

    /**
     * Whfthfr or not to rfdonfigurf bll bdtion propfrtifs from thf
     * spfdififd fvfnt.
     */
    stbtid boolfbn shouldRfdonfigurf(PropfrtyChbngfEvfnt f) {
        if (f.gftPropfrtyNbmf() == null) {
            syndhronizfd(AbstrbdtAdtion.dlbss) {
                if (RECONFIGURE_ON_NULL == null) {
                    RECONFIGURE_ON_NULL = Boolfbn.vblufOf(
                        AddfssControllfr.doPrivilfgfd(nfw GftPropfrtyAdtion(
                        "swing.bdtions.rfdonfigurfOnNull", "fblsf")));
                }
                rfturn RECONFIGURE_ON_NULL;
            }
        }
        rfturn fblsf;
    }

    /**
     * Sfts thf fnbblfd stbtf of b domponfnt from bn Adtion.
     *
     * @pbrbm d thf Componfnt to sft thf fnbblfd stbtf on
     * @pbrbm b thf Adtion to sft thf fnbblfd stbtf from, mby bf null
     */
    stbtid void sftEnbblfdFromAdtion(JComponfnt d, Adtion b) {
        d.sftEnbblfd((b != null) ? b.isEnbblfd() : truf);
    }

    /**
     * Sfts thf tooltip tfxt of b domponfnt from bn Adtion.
     *
     * @pbrbm d thf Componfnt to sft thf tooltip tfxt on
     * @pbrbm b thf Adtion to sft thf tooltip tfxt from, mby bf null
     */
    stbtid void sftToolTipTfxtFromAdtion(JComponfnt d, Adtion b) {
        d.sftToolTipTfxt(b != null ?
                         (String)b.gftVbluf(Adtion.SHORT_DESCRIPTION) : null);
    }

    stbtid boolfbn hbsSflfdtfdKfy(Adtion b) {
        rfturn (b != null && b.gftVbluf(Adtion.SELECTED_KEY) != null);
    }

    stbtid boolfbn isSflfdtfd(Adtion b) {
        rfturn Boolfbn.TRUE.fqubls(b.gftVbluf(Adtion.SELECTED_KEY));
    }



    /**
     * Crfbtfs bn {@dodf Adtion}.
     */
    publid AbstrbdtAdtion() {
    }

    /**
     * Crfbtfs bn {@dodf Adtion} with thf spfdififd nbmf.
     *
     * @pbrbm nbmf thf nbmf ({@dodf Adtion.NAME}) for thf bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     */
    publid AbstrbdtAdtion(String nbmf) {
        putVbluf(Adtion.NAME, nbmf);
    }

    /**
     * Crfbtfs bn {@dodf Adtion} with thf spfdififd nbmf bnd smbll idon.
     *
     * @pbrbm nbmf thf nbmf ({@dodf Adtion.NAME}) for thf bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     * @pbrbm idon thf smbll idon ({@dodf Adtion.SMALL_ICON}) for thf bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     */
    publid AbstrbdtAdtion(String nbmf, Idon idon) {
        this(nbmf);
        putVbluf(Adtion.SMALL_ICON, idon);
    }

    /**
     * Gfts thf <dodf>Objfdt</dodf> bssodibtfd with thf spfdififd kfy.
     *
     * @pbrbm kfy b string dontbining thf spfdififd <dodf>kfy</dodf>
     * @rfturn thf binding <dodf>Objfdt</dodf> storfd with this kfy; if thfrf
     *          brf no kfys, it will rfturn <dodf>null</dodf>
     * @sff Adtion#gftVbluf
     */
    publid Objfdt gftVbluf(String kfy) {
        if (kfy == "fnbblfd") {
            rfturn fnbblfd;
        }
        if (brrbyTbblf == null) {
            rfturn null;
        }
        rfturn brrbyTbblf.gft(kfy);
    }

    /**
     * Sfts thf <dodf>Vbluf</dodf> bssodibtfd with thf spfdififd kfy.
     *
     * @pbrbm kfy  thf <dodf>String</dodf> thbt idfntififs thf storfd objfdt
     * @pbrbm nfwVbluf thf <dodf>Objfdt</dodf> to storf using this kfy
     * @sff Adtion#putVbluf
     */
    publid void putVbluf(String kfy, Objfdt nfwVbluf) {
        Objfdt oldVbluf = null;
        if (kfy == "fnbblfd") {
            // Trfbt putVbluf("fnbblfd") thf sbmf wby bs b dbll to sftEnbblfd.
            // If wf don't do this it mfbns thf two mby gft out of synd, bnd b
            // bogus propfrty dhbngf notifidbtion would bf sfnt.
            //
            // To bvoid dfpfndfndifs bftwffn putVbluf & sftEnbblfd this
            // dirfdtly dhbngfs fnbblfd. If wf instfbd dbllfd sftEnbblfd
            // to dhbngf fnbblfd, it would bf possiblf for stbdk
            // ovfrflow in thf dbsf whfrf b dfvflopfr implfmfntfd sftEnbblfd
            // in tfrms of putVbluf.
            if (nfwVbluf == null || !(nfwVbluf instbndfof Boolfbn)) {
                nfwVbluf = fblsf;
            }
            oldVbluf = fnbblfd;
            fnbblfd = (Boolfbn)nfwVbluf;
        } flsf {
            if (brrbyTbblf == null) {
                brrbyTbblf = nfw ArrbyTbblf();
            }
            if (brrbyTbblf.dontbinsKfy(kfy))
                oldVbluf = brrbyTbblf.gft(kfy);
            // Rfmovf thf fntry for kfy if nfwVbluf is null
            // flsf put in thf nfwVbluf for kfy.
            if (nfwVbluf == null) {
                brrbyTbblf.rfmovf(kfy);
            } flsf {
                brrbyTbblf.put(kfy,nfwVbluf);
            }
        }
        firfPropfrtyChbngf(kfy, oldVbluf, nfwVbluf);
    }

    /**
     * Rfturns truf if thf bdtion is fnbblfd.
     *
     * @rfturn truf if thf bdtion is fnbblfd, fblsf othfrwisf
     * @sff Adtion#isEnbblfd
     */
    publid boolfbn isEnbblfd() {
        rfturn fnbblfd;
    }

    /**
     * Sfts whfthfr thf {@dodf Adtion} is fnbblfd. Thf dffbult is {@dodf truf}.
     *
     * @pbrbm nfwVbluf  {@dodf truf} to fnbblf thf bdtion, {@dodf fblsf} to
     *                  disbblf it
     * @sff Adtion#sftEnbblfd
     */
    publid void sftEnbblfd(boolfbn nfwVbluf) {
        boolfbn oldVbluf = this.fnbblfd;

        if (oldVbluf != nfwVbluf) {
            this.fnbblfd = nfwVbluf;
            firfPropfrtyChbngf("fnbblfd",
                               Boolfbn.vblufOf(oldVbluf), Boolfbn.vblufOf(nfwVbluf));
        }
    }


    /**
     * Rfturns bn brrby of <dodf>Objfdt</dodf>s whidh brf kfys for
     * whidh vblufs hbvf bffn sft for this <dodf>AbstrbdtAdtion</dodf>,
     * or <dodf>null</dodf> if no kfys hbvf vblufs sft.
     * @rfturn bn brrby of kfy objfdts, or <dodf>null</dodf> if no
     *                  kfys hbvf vblufs sft
     * @sindf 1.3
     */
    publid Objfdt[] gftKfys() {
        if (brrbyTbblf == null) {
            rfturn null;
        }
        Objfdt[] kfys = nfw Objfdt[brrbyTbblf.sizf()];
        brrbyTbblf.gftKfys(kfys);
        rfturn kfys;
    }

    /**
     * If bny <dodf>PropfrtyChbngfListfnfrs</dodf> hbvf bffn rfgistfrfd, thf
     * <dodf>dhbngfSupport</dodf> fifld dfsdribfs thfm.
     */
    protfdtfd SwingPropfrtyChbngfSupport dhbngfSupport;

    /**
     * Supports rfporting bound propfrty dhbngfs.  This mfthod dbn bf dbllfd
     * whfn b bound propfrty hbs dhbngfd bnd it will sfnd thf bppropribtf
     * <dodf>PropfrtyChbngfEvfnt</dodf> to bny rfgistfrfd
     * <dodf>PropfrtyChbngfListfnfrs</dodf>.
     *
     * @pbrbm propfrtyNbmf  thf nbmf of thf propfrty thbt hbs dhbngfd
     * @pbrbm oldVbluf  thf old vbluf of thf propfrty
     * @pbrbm nfwVbluf  thf nfw vbluf of thf propfrty
     */
    protfdtfd void firfPropfrtyChbngf(String propfrtyNbmf, Objfdt oldVbluf, Objfdt nfwVbluf) {
        if (dhbngfSupport == null ||
            (oldVbluf != null && nfwVbluf != null && oldVbluf.fqubls(nfwVbluf))) {
            rfturn;
        }
        dhbngfSupport.firfPropfrtyChbngf(propfrtyNbmf, oldVbluf, nfwVbluf);
    }


    /**
     * Adds b <dodf>PropfrtyChbngfListfnfr</dodf> to thf listfnfr list.
     * Thf listfnfr is rfgistfrfd for bll propfrtifs.
     * <p>
     * A <dodf>PropfrtyChbngfEvfnt</dodf> will gft firfd in rfsponsf to sftting
     * b bound propfrty, f.g. <dodf>sftFont</dodf>, <dodf>sftBbdkground</dodf>,
     * or <dodf>sftForfground</dodf>.
     * Notf thbt if thf durrfnt domponfnt is inhfriting its forfground,
     * bbdkground, or font from its dontbinfr, thfn no fvfnt will bf
     * firfd in rfsponsf to b dhbngf in thf inhfritfd propfrty.
     *
     * @pbrbm listfnfr  Thf <dodf>PropfrtyChbngfListfnfr</dodf> to bf bddfd
     *
     * @sff Adtion#bddPropfrtyChbngfListfnfr
     */
    publid syndhronizfd void bddPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (dhbngfSupport == null) {
            dhbngfSupport = nfw SwingPropfrtyChbngfSupport(this);
        }
        dhbngfSupport.bddPropfrtyChbngfListfnfr(listfnfr);
    }


    /**
     * Rfmovfs b <dodf>PropfrtyChbngfListfnfr</dodf> from thf listfnfr list.
     * This rfmovfs b <dodf>PropfrtyChbngfListfnfr</dodf> thbt wbs rfgistfrfd
     * for bll propfrtifs.
     *
     * @pbrbm listfnfr  thf <dodf>PropfrtyChbngfListfnfr</dodf> to bf rfmovfd
     *
     * @sff Adtion#rfmovfPropfrtyChbngfListfnfr
     */
    publid syndhronizfd void rfmovfPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (dhbngfSupport == null) {
            rfturn;
        }
        dhbngfSupport.rfmovfPropfrtyChbngfListfnfr(listfnfr);
    }


    /**
     * Rfturns bn brrby of bll thf <dodf>PropfrtyChbngfListfnfr</dodf>s bddfd
     * to this AbstrbdtAdtion with bddPropfrtyChbngfListfnfr().
     *
     * @rfturn bll of thf <dodf>PropfrtyChbngfListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs hbvf bffn bddfd
     * @sindf 1.4
     */
    publid syndhronizfd PropfrtyChbngfListfnfr[] gftPropfrtyChbngfListfnfrs() {
        if (dhbngfSupport == null) {
            rfturn nfw PropfrtyChbngfListfnfr[0];
        }
        rfturn dhbngfSupport.gftPropfrtyChbngfListfnfrs();
    }


    /**
     * Clonfs thf bbstrbdt bdtion. This givfs thf dlonf
     * its own dopy of thf kfy/vbluf list,
     * whidh is not hbndlfd for you by <dodf>Objfdt.dlonf()</dodf>.
     **/

    protfdtfd Objfdt dlonf() throws ClonfNotSupportfdExdfption {
        AbstrbdtAdtion nfwAdtion = (AbstrbdtAdtion)supfr.dlonf();
        syndhronizfd(this) {
            if (brrbyTbblf != null) {
                nfwAdtion.brrbyTbblf = (ArrbyTbblf)brrbyTbblf.dlonf();
            }
        }
        rfturn nfwAdtion;
    }

    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) throws IOExdfption {
        // Storf thf dffbult fiflds
        s.dffbultWritfObjfdt();

        // And thf kfys
        ArrbyTbblf.writfArrbyTbblf(s, brrbyTbblf);
    }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s) throws ClbssNotFoundExdfption,
        IOExdfption {
        s.dffbultRfbdObjfdt();
        for (int dountfr = s.rfbdInt() - 1; dountfr >= 0; dountfr--) {
            putVbluf((String)s.rfbdObjfdt(), s.rfbdObjfdt());
        }
    }
}
