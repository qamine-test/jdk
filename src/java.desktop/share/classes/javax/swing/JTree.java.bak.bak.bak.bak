/*
/*
/*
/*
/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 *
 *
 *
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 *
 *
 *
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 *
 *
 *
 *
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 *
 *
 *
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 */
 */
 */
 */
 */





pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;
pbdkbgf jbvbx.swing;





import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.bfbns.*;
import jbvb.io.*;
import jbvb.io.*;
import jbvb.io.*;
import jbvb.io.*;
import jbvb.io.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvb.util.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.fvfnt.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.trff.*;
import jbvbx.swing.tfxt.Position;
import jbvbx.swing.tfxt.Position;
import jbvbx.swing.tfxt.Position;
import jbvbx.swing.tfxt.Position;
import jbvbx.swing.tfxt.Position;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import jbvbx.bddfssibility.*;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import sun.swing.SwingUtilitifs2.Sfdtion;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;
import stbtid sun.swing.SwingUtilitifs2.Sfdtion.*;










/**
/**
/**
/**
/**
 * <b nbmf="jtrff_dfsdription"></b>
 * <b nbmf="jtrff_dfsdription"></b>
 * <b nbmf="jtrff_dfsdription"></b>
 * <b nbmf="jtrff_dfsdription"></b>
 * <b nbmf="jtrff_dfsdription"></b>
 * A dontrol tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * A dontrol tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * A dontrol tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * A dontrol tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * A dontrol tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * You dbn find tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using trffs in
 * You dbn find tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using trffs in
 * You dbn find tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using trffs in
 * You dbn find tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using trffs in
 * You dbn find tbsk-orifntfd dodumfntbtion bnd fxbmplfs of using trffs in
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/trff.itml">How to Usf Trffs</b>,
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/trff.itml">How to Usf Trffs</b>,
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/trff.itml">How to Usf Trffs</b>,
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/trff.itml">How to Usf Trffs</b>,
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/trff.itml">How to Usf Trffs</b>,
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * b sfdtion in <fm>Tif Jbvb Tutoribl.</fm>
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * A spfdifid nodf in b trff dbn bf idfntififd fitifr by b
 * A spfdifid nodf in b trff dbn bf idfntififd fitifr by b
 * A spfdifid nodf in b trff dbn bf idfntififd fitifr by b
 * A spfdifid nodf in b trff dbn bf idfntififd fitifr by b
 * A spfdifid nodf in b trff dbn bf idfntififd fitifr by b
 * <dodf>TrffPbti</dodf> (bn objfdt
 * <dodf>TrffPbti</dodf> (bn objfdt
 * <dodf>TrffPbti</dodf> (bn objfdt
 * <dodf>TrffPbti</dodf> (bn objfdt
 * <dodf>TrffPbti</dodf> (bn objfdt
 * tibt fndbpsulbtfs b nodf bnd bll of its bndfstors), or by its
 * tibt fndbpsulbtfs b nodf bnd bll of its bndfstors), or by its
 * tibt fndbpsulbtfs b nodf bnd bll of its bndfstors), or by its
 * tibt fndbpsulbtfs b nodf bnd bll of its bndfstors), or by its
 * tibt fndbpsulbtfs b nodf bnd bll of its bndfstors), or by its
 * displby row, wifrf fbdi row in tif displby brfb displbys onf nodf.
 * displby row, wifrf fbdi row in tif displby brfb displbys onf nodf.
 * displby row, wifrf fbdi row in tif displby brfb displbys onf nodf.
 * displby row, wifrf fbdi row in tif displby brfb displbys onf nodf.
 * displby row, wifrf fbdi row in tif displby brfb displbys onf nodf.
 * An <i>fxpbndfd</i> nodf is b non-lfbf nodf (bs idfntififd by
 * An <i>fxpbndfd</i> nodf is b non-lfbf nodf (bs idfntififd by
 * An <i>fxpbndfd</i> nodf is b non-lfbf nodf (bs idfntififd by
 * An <i>fxpbndfd</i> nodf is b non-lfbf nodf (bs idfntififd by
 * An <i>fxpbndfd</i> nodf is b non-lfbf nodf (bs idfntififd by
 * <dodf>TrffModfl.isLfbf(nodf)</dodf> rfturning fblsf) tibt will displbys
 * <dodf>TrffModfl.isLfbf(nodf)</dodf> rfturning fblsf) tibt will displbys
 * <dodf>TrffModfl.isLfbf(nodf)</dodf> rfturning fblsf) tibt will displbys
 * <dodf>TrffModfl.isLfbf(nodf)</dodf> rfturning fblsf) tibt will displbys
 * <dodf>TrffModfl.isLfbf(nodf)</dodf> rfturning fblsf) tibt will displbys
 * its diildrfn wifn bll its bndfstors brf <i>fxpbndfd</i>.
 * its diildrfn wifn bll its bndfstors brf <i>fxpbndfd</i>.
 * its diildrfn wifn bll its bndfstors brf <i>fxpbndfd</i>.
 * its diildrfn wifn bll its bndfstors brf <i>fxpbndfd</i>.
 * its diildrfn wifn bll its bndfstors brf <i>fxpbndfd</i>.
 * A <i>dollbpsfd</i>
 * A <i>dollbpsfd</i>
 * A <i>dollbpsfd</i>
 * A <i>dollbpsfd</i>
 * A <i>dollbpsfd</i>
 * nodf is onf wiidi iidfs tifm. A <i>iiddfn</i> nodf is onf wiidi is
 * nodf is onf wiidi iidfs tifm. A <i>iiddfn</i> nodf is onf wiidi is
 * nodf is onf wiidi iidfs tifm. A <i>iiddfn</i> nodf is onf wiidi is
 * nodf is onf wiidi iidfs tifm. A <i>iiddfn</i> nodf is onf wiidi is
 * nodf is onf wiidi iidfs tifm. A <i>iiddfn</i> nodf is onf wiidi is
 * undfr b dollbpsfd bndfstor. All of b <i>vifwbblf</i> nodfs pbrfnts
 * undfr b dollbpsfd bndfstor. All of b <i>vifwbblf</i> nodfs pbrfnts
 * undfr b dollbpsfd bndfstor. All of b <i>vifwbblf</i> nodfs pbrfnts
 * undfr b dollbpsfd bndfstor. All of b <i>vifwbblf</i> nodfs pbrfnts
 * undfr b dollbpsfd bndfstor. All of b <i>vifwbblf</i> nodfs pbrfnts
 * brf fxpbndfd, but mby or mby not bf displbyfd. A <i>displbyfd</i> nodf
 * brf fxpbndfd, but mby or mby not bf displbyfd. A <i>displbyfd</i> nodf
 * brf fxpbndfd, but mby or mby not bf displbyfd. A <i>displbyfd</i> nodf
 * brf fxpbndfd, but mby or mby not bf displbyfd. A <i>displbyfd</i> nodf
 * brf fxpbndfd, but mby or mby not bf displbyfd. A <i>displbyfd</i> nodf
 * is boti vifwbblf bnd in tif displby brfb, wifrf it dbn bf sffn.
 * is boti vifwbblf bnd in tif displby brfb, wifrf it dbn bf sffn.
 * is boti vifwbblf bnd in tif displby brfb, wifrf it dbn bf sffn.
 * is boti vifwbblf bnd in tif displby brfb, wifrf it dbn bf sffn.
 * is boti vifwbblf bnd in tif displby brfb, wifrf it dbn bf sffn.
 * </p>
 * </p>
 * </p>
 * </p>
 * </p>
 * Tif following <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn "displbyfd":
 * Tif following <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn "displbyfd":
 * Tif following <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn "displbyfd":
 * Tif following <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn "displbyfd":
 * Tif following <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn "displbyfd":
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <li><dodf>isRootVisiblf()</dodf>
 * <li><dodf>isRootVisiblf()</dodf>
 * <li><dodf>isRootVisiblf()</dodf>
 * <li><dodf>isRootVisiblf()</dodf>
 * <li><dodf>isRootVisiblf()</dodf>
 * <li><dodf>sftRootVisiblf()</dodf>
 * <li><dodf>sftRootVisiblf()</dodf>
 * <li><dodf>sftRootVisiblf()</dodf>
 * <li><dodf>sftRootVisiblf()</dodf>
 * <li><dodf>sftRootVisiblf()</dodf>
 * <li><dodf>sdrollPbtiToVisiblf()</dodf>
 * <li><dodf>sdrollPbtiToVisiblf()</dodf>
 * <li><dodf>sdrollPbtiToVisiblf()</dodf>
 * <li><dodf>sdrollPbtiToVisiblf()</dodf>
 * <li><dodf>sdrollPbtiToVisiblf()</dodf>
 * <li><dodf>sdrollRowToVisiblf()</dodf>
 * <li><dodf>sdrollRowToVisiblf()</dodf>
 * <li><dodf>sdrollRowToVisiblf()</dodf>
 * <li><dodf>sdrollRowToVisiblf()</dodf>
 * <li><dodf>sdrollRowToVisiblf()</dodf>
 * <li><dodf>gftVisiblfRowCount()</dodf>
 * <li><dodf>gftVisiblfRowCount()</dodf>
 * <li><dodf>gftVisiblfRowCount()</dodf>
 * <li><dodf>gftVisiblfRowCount()</dodf>
 * <li><dodf>gftVisiblfRowCount()</dodf>
 * <li><dodf>sftVisiblfRowCount()</dodf>
 * <li><dodf>sftVisiblfRowCount()</dodf>
 * <li><dodf>sftVisiblfRowCount()</dodf>
 * <li><dodf>sftVisiblfRowCount()</dodf>
 * <li><dodf>sftVisiblfRowCount()</dodf>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * Tif nfxt group of <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn
 * Tif nfxt group of <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn
 * Tif nfxt group of <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn
 * Tif nfxt group of <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn
 * Tif nfxt group of <dodf>JTrff</dodf> mftiods usf "visiblf" to mfbn
 * "vifwbblf" (undfr bn fxpbndfd pbrfnt):
 * "vifwbblf" (undfr bn fxpbndfd pbrfnt):
 * "vifwbblf" (undfr bn fxpbndfd pbrfnt):
 * "vifwbblf" (undfr bn fxpbndfd pbrfnt):
 * "vifwbblf" (undfr bn fxpbndfd pbrfnt):
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <li><dodf>isVisiblf()</dodf>
 * <li><dodf>isVisiblf()</dodf>
 * <li><dodf>isVisiblf()</dodf>
 * <li><dodf>isVisiblf()</dodf>
 * <li><dodf>isVisiblf()</dodf>
 * <li><dodf>mbkfVisiblf()</dodf>
 * <li><dodf>mbkfVisiblf()</dodf>
 * <li><dodf>mbkfVisiblf()</dodf>
 * <li><dodf>mbkfVisiblf()</dodf>
 * <li><dodf>mbkfVisiblf()</dodf>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * If you brf intfrfstfd in knowing wifn tif sflfdtion dibngfs implfmfnt
 * If you brf intfrfstfd in knowing wifn tif sflfdtion dibngfs implfmfnt
 * If you brf intfrfstfd in knowing wifn tif sflfdtion dibngfs implfmfnt
 * If you brf intfrfstfd in knowing wifn tif sflfdtion dibngfs implfmfnt
 * If you brf intfrfstfd in knowing wifn tif sflfdtion dibngfs implfmfnt
 * tif <dodf>TrffSflfdtionListfnfr</dodf> intfrfbdf bnd bdd tif instbndf
 * tif <dodf>TrffSflfdtionListfnfr</dodf> intfrfbdf bnd bdd tif instbndf
 * tif <dodf>TrffSflfdtionListfnfr</dodf> intfrfbdf bnd bdd tif instbndf
 * tif <dodf>TrffSflfdtionListfnfr</dodf> intfrfbdf bnd bdd tif instbndf
 * tif <dodf>TrffSflfdtionListfnfr</dodf> intfrfbdf bnd bdd tif instbndf
 * using tif mftiod <dodf>bddTrffSflfdtionListfnfr</dodf>.
 * using tif mftiod <dodf>bddTrffSflfdtionListfnfr</dodf>.
 * using tif mftiod <dodf>bddTrffSflfdtionListfnfr</dodf>.
 * using tif mftiod <dodf>bddTrffSflfdtionListfnfr</dodf>.
 * using tif mftiod <dodf>bddTrffSflfdtionListfnfr</dodf>.
 * <dodf>vblufCibngfd</dodf> will bf invokfd wifn tif
 * <dodf>vblufCibngfd</dodf> will bf invokfd wifn tif
 * <dodf>vblufCibngfd</dodf> will bf invokfd wifn tif
 * <dodf>vblufCibngfd</dodf> will bf invokfd wifn tif
 * <dodf>vblufCibngfd</dodf> will bf invokfd wifn tif
 * sflfdtion dibngfs, tibt is if tif usfr dlidks twidf on tif sbmf
 * sflfdtion dibngfs, tibt is if tif usfr dlidks twidf on tif sbmf
 * sflfdtion dibngfs, tibt is if tif usfr dlidks twidf on tif sbmf
 * sflfdtion dibngfs, tibt is if tif usfr dlidks twidf on tif sbmf
 * sflfdtion dibngfs, tibt is if tif usfr dlidks twidf on tif sbmf
 * nodf <dodf>vblufCibngfd</dodf> will only bf invokfd ondf.
 * nodf <dodf>vblufCibngfd</dodf> will only bf invokfd ondf.
 * nodf <dodf>vblufCibngfd</dodf> will only bf invokfd ondf.
 * nodf <dodf>vblufCibngfd</dodf> will only bf invokfd ondf.
 * nodf <dodf>vblufCibngfd</dodf> will only bf invokfd ondf.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * If you brf intfrfstfd in dftfdting fitifr doublf-dlidk fvfnts or wifn
 * If you brf intfrfstfd in dftfdting fitifr doublf-dlidk fvfnts or wifn
 * If you brf intfrfstfd in dftfdting fitifr doublf-dlidk fvfnts or wifn
 * If you brf intfrfstfd in dftfdting fitifr doublf-dlidk fvfnts or wifn
 * If you brf intfrfstfd in dftfdting fitifr doublf-dlidk fvfnts or wifn
 * b usfr dlidks on b nodf, rfgbrdlfss of wiftifr or not it wbs sflfdtfd,
 * b usfr dlidks on b nodf, rfgbrdlfss of wiftifr or not it wbs sflfdtfd,
 * b usfr dlidks on b nodf, rfgbrdlfss of wiftifr or not it wbs sflfdtfd,
 * b usfr dlidks on b nodf, rfgbrdlfss of wiftifr or not it wbs sflfdtfd,
 * b usfr dlidks on b nodf, rfgbrdlfss of wiftifr or not it wbs sflfdtfd,
 * wf rfdommfnd you do tif following:
 * wf rfdommfnd you do tif following:
 * wf rfdommfnd you do tif following:
 * wf rfdommfnd you do tif following:
 * wf rfdommfnd you do tif following:
 * </p>
 * </p>
 * </p>
 * </p>
 * </p>
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 * <prf>
 * finbl JTrff trff = ...;
 * finbl JTrff trff = ...;
 * finbl JTrff trff = ...;
 * finbl JTrff trff = ...;
 * finbl JTrff trff = ...;
 *
 *
 *
 *
 *
 * MousfListfnfr ml = nfw MousfAdbptfr() {
 * MousfListfnfr ml = nfw MousfAdbptfr() {
 * MousfListfnfr ml = nfw MousfAdbptfr() {
 * MousfListfnfr ml = nfw MousfAdbptfr() {
 * MousfListfnfr ml = nfw MousfAdbptfr() {
 *     publid void <b>mousfPrfssfd</b>(MousfEvfnt f) {
 *     publid void <b>mousfPrfssfd</b>(MousfEvfnt f) {
 *     publid void <b>mousfPrfssfd</b>(MousfEvfnt f) {
 *     publid void <b>mousfPrfssfd</b>(MousfEvfnt f) {
 *     publid void <b>mousfPrfssfd</b>(MousfEvfnt f) {
 *         int sflRow = trff.gftRowForLodbtion(f.gftX(), f.gftY());
 *         int sflRow = trff.gftRowForLodbtion(f.gftX(), f.gftY());
 *         int sflRow = trff.gftRowForLodbtion(f.gftX(), f.gftY());
 *         int sflRow = trff.gftRowForLodbtion(f.gftX(), f.gftY());
 *         int sflRow = trff.gftRowForLodbtion(f.gftX(), f.gftY());
 *         TrffPbti sflPbti = trff.gftPbtiForLodbtion(f.gftX(), f.gftY());
 *         TrffPbti sflPbti = trff.gftPbtiForLodbtion(f.gftX(), f.gftY());
 *         TrffPbti sflPbti = trff.gftPbtiForLodbtion(f.gftX(), f.gftY());
 *         TrffPbti sflPbti = trff.gftPbtiForLodbtion(f.gftX(), f.gftY());
 *         TrffPbti sflPbti = trff.gftPbtiForLodbtion(f.gftX(), f.gftY());
 *         if(sflRow != -1) {
 *         if(sflRow != -1) {
 *         if(sflRow != -1) {
 *         if(sflRow != -1) {
 *         if(sflRow != -1) {
 *             if(f.gftClidkCount() == 1) {
 *             if(f.gftClidkCount() == 1) {
 *             if(f.gftClidkCount() == 1) {
 *             if(f.gftClidkCount() == 1) {
 *             if(f.gftClidkCount() == 1) {
 *                 mySinglfClidk(sflRow, sflPbti);
 *                 mySinglfClidk(sflRow, sflPbti);
 *                 mySinglfClidk(sflRow, sflPbti);
 *                 mySinglfClidk(sflRow, sflPbti);
 *                 mySinglfClidk(sflRow, sflPbti);
 *             }
 *             }
 *             }
 *             }
 *             }
 *             flsf if(f.gftClidkCount() == 2) {
 *             flsf if(f.gftClidkCount() == 2) {
 *             flsf if(f.gftClidkCount() == 2) {
 *             flsf if(f.gftClidkCount() == 2) {
 *             flsf if(f.gftClidkCount() == 2) {
 *                 myDoublfClidk(sflRow, sflPbti);
 *                 myDoublfClidk(sflRow, sflPbti);
 *                 myDoublfClidk(sflRow, sflPbti);
 *                 myDoublfClidk(sflRow, sflPbti);
 *                 myDoublfClidk(sflRow, sflPbti);
 *             }
 *             }
 *             }
 *             }
 *             }
 *         }
 *         }
 *         }
 *         }
 *         }
 *     }
 *     }
 *     }
 *     }
 *     }
 * };
 * };
 * };
 * };
 * };
 * trff.bddMousfListfnfr(ml);
 * trff.bddMousfListfnfr(ml);
 * trff.bddMousfListfnfr(ml);
 * trff.bddMousfListfnfr(ml);
 * trff.bddMousfListfnfr(ml);
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * </prf>
 * NOTE: Tiis fxbmplf obtbins boti tif pbti bnd row, but you only nffd to
 * NOTE: Tiis fxbmplf obtbins boti tif pbti bnd row, but you only nffd to
 * NOTE: Tiis fxbmplf obtbins boti tif pbti bnd row, but you only nffd to
 * NOTE: Tiis fxbmplf obtbins boti tif pbti bnd row, but you only nffd to
 * NOTE: Tiis fxbmplf obtbins boti tif pbti bnd row, but you only nffd to
 * gft tif onf you'rf intfrfstfd in.
 * gft tif onf you'rf intfrfstfd in.
 * gft tif onf you'rf intfrfstfd in.
 * gft tif onf you'rf intfrfstfd in.
 * gft tif onf you'rf intfrfstfd in.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * To usf <dodf>JTrff</dodf> to displby dompound nodfs
 * To usf <dodf>JTrff</dodf> to displby dompound nodfs
 * To usf <dodf>JTrff</dodf> to displby dompound nodfs
 * To usf <dodf>JTrff</dodf> to displby dompound nodfs
 * To usf <dodf>JTrff</dodf> to displby dompound nodfs
 * (for fxbmplf, nodfs dontbining boti
 * (for fxbmplf, nodfs dontbining boti
 * (for fxbmplf, nodfs dontbining boti
 * (for fxbmplf, nodfs dontbining boti
 * (for fxbmplf, nodfs dontbining boti
 * b grbpiid idon bnd tfxt), subdlbss {@link TrffCfllRfndfrfr} bnd usf
 * b grbpiid idon bnd tfxt), subdlbss {@link TrffCfllRfndfrfr} bnd usf
 * b grbpiid idon bnd tfxt), subdlbss {@link TrffCfllRfndfrfr} bnd usf
 * b grbpiid idon bnd tfxt), subdlbss {@link TrffCfllRfndfrfr} bnd usf
 * b grbpiid idon bnd tfxt), subdlbss {@link TrffCfllRfndfrfr} bnd usf
 * {@link #sftCfllRfndfrfr} to tfll tif trff to usf it. To fdit sudi nodfs,
 * {@link #sftCfllRfndfrfr} to tfll tif trff to usf it. To fdit sudi nodfs,
 * {@link #sftCfllRfndfrfr} to tfll tif trff to usf it. To fdit sudi nodfs,
 * {@link #sftCfllRfndfrfr} to tfll tif trff to usf it. To fdit sudi nodfs,
 * {@link #sftCfllRfndfrfr} to tfll tif trff to usf it. To fdit sudi nodfs,
 * subdlbss {@link TrffCfllEditor} bnd usf {@link #sftCfllEditor}.
 * subdlbss {@link TrffCfllEditor} bnd usf {@link #sftCfllEditor}.
 * subdlbss {@link TrffCfllEditor} bnd usf {@link #sftCfllEditor}.
 * subdlbss {@link TrffCfllEditor} bnd usf {@link #sftCfllEditor}.
 * subdlbss {@link TrffCfllEditor} bnd usf {@link #sftCfllEditor}.
 * </p>
 * </p>
 * </p>
 * </p>
 * </p>
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Likf bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf {@link InputMbp} bnd
 * Likf bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf {@link InputMbp} bnd
 * Likf bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf {@link InputMbp} bnd
 * Likf bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf {@link InputMbp} bnd
 * Likf bll <dodf>JComponfnt</dodf> dlbssfs, you dbn usf {@link InputMbp} bnd
 * {@link AdtionMbp}
 * {@link AdtionMbp}
 * {@link AdtionMbp}
 * {@link AdtionMbp}
 * {@link AdtionMbp}
 * to bssodibtf bn {@link Adtion} objfdt witi b {@link KfyStrokf}
 * to bssodibtf bn {@link Adtion} objfdt witi b {@link KfyStrokf}
 * to bssodibtf bn {@link Adtion} objfdt witi b {@link KfyStrokf}
 * to bssodibtf bn {@link Adtion} objfdt witi b {@link KfyStrokf}
 * to bssodibtf bn {@link Adtion} objfdt witi b {@link KfyStrokf}
 * bnd fxfdutf tif bdtion undfr spfdififd donditions.
 * bnd fxfdutf tif bdtion undfr spfdififd donditions.
 * bnd fxfdutf tif bdtion undfr spfdififd donditions.
 * bnd fxfdutf tif bdtion undfr spfdififd donditions.
 * bnd fxfdutf tif bdtion undfr spfdififd donditions.
 * </p>
 * </p>
 * </p>
 * </p>
 * </p>
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * <strong>Wbrning:</strong> Swing is not tirfbd sbff. For morf
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * informbtion sff <b
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * irff="pbdkbgf-summbry.itml#tirfbding">Swing's Tirfbding
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * Polidy</b>.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * of bll JbvbBfbns&trbdf;
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *</p>
 *</p>
 *</p>
 *</p>
 *</p>
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 *   bttributf: isContbinfr fblsf
 * dfsdription: A domponfnt tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * dfsdription: A domponfnt tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * dfsdription: A domponfnt tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * dfsdription: A domponfnt tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 * dfsdription: A domponfnt tibt displbys b sft of iifrbrdiidbl dbtb bs bn outlinf.
 *
 *
 *
 *
 *
 * @butior Rob Dbvis
 * @butior Rob Dbvis
 * @butior Rob Dbvis
 * @butior Rob Dbvis
 * @butior Rob Dbvis
 * @butior Rby Rybn
 * @butior Rby Rybn
 * @butior Rby Rybn
 * @butior Rby Rybn
 * @butior Rby Rybn
 * @butior Sdott Violft
 * @butior Sdott Violft
 * @butior Sdott Violft
 * @butior Sdott Violft
 * @butior Sdott Violft
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 * @sindf 1.2
 */
 */
 */
 */
 */
@SupprfssWbrnings("sfribl")
@SupprfssWbrnings("sfribl")
@SupprfssWbrnings("sfribl")
@SupprfssWbrnings("sfribl")
@SupprfssWbrnings("sfribl")
publid dlbss JTrff fxtfnds JComponfnt implfmfnts Sdrollbblf, Addfssiblf
publid dlbss JTrff fxtfnds JComponfnt implfmfnts Sdrollbblf, Addfssiblf
publid dlbss JTrff fxtfnds JComponfnt implfmfnts Sdrollbblf, Addfssiblf
publid dlbss JTrff fxtfnds JComponfnt implfmfnts Sdrollbblf, Addfssiblf
publid dlbss JTrff fxtfnds JComponfnt implfmfnts Sdrollbblf, Addfssiblf
{
{
{
{
{
    /**
    /**
    /**
    /**
    /**
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     * @sff #rfbdObjfdt
     */
     */
     */
     */
     */
    privbtf stbtid finbl String uiClbssID = "TrffUI";
    privbtf stbtid finbl String uiClbssID = "TrffUI";
    privbtf stbtid finbl String uiClbssID = "TrffUI";
    privbtf stbtid finbl String uiClbssID = "TrffUI";
    privbtf stbtid finbl String uiClbssID = "TrffUI";





    /**
    /**
    /**
    /**
    /**
     * Tif modfl tibt dffinfs tif trff displbyfd by tiis objfdt.
     * Tif modfl tibt dffinfs tif trff displbyfd by tiis objfdt.
     * Tif modfl tibt dffinfs tif trff displbyfd by tiis objfdt.
     * Tif modfl tibt dffinfs tif trff displbyfd by tiis objfdt.
     * Tif modfl tibt dffinfs tif trff displbyfd by tiis objfdt.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TrffModfl        trffModfl;
    trbnsifnt protfdtfd TrffModfl        trffModfl;
    trbnsifnt protfdtfd TrffModfl        trffModfl;
    trbnsifnt protfdtfd TrffModfl        trffModfl;
    trbnsifnt protfdtfd TrffModfl        trffModfl;





    /**
    /**
    /**
    /**
    /**
     * Modfls tif sft of sflfdtfd nodfs in tiis trff.
     * Modfls tif sft of sflfdtfd nodfs in tiis trff.
     * Modfls tif sft of sflfdtfd nodfs in tiis trff.
     * Modfls tif sft of sflfdtfd nodfs in tiis trff.
     * Modfls tif sft of sflfdtfd nodfs in tiis trff.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TrffSflfdtionModfl sflfdtionModfl;
    trbnsifnt protfdtfd TrffSflfdtionModfl sflfdtionModfl;
    trbnsifnt protfdtfd TrffSflfdtionModfl sflfdtionModfl;
    trbnsifnt protfdtfd TrffSflfdtionModfl sflfdtionModfl;
    trbnsifnt protfdtfd TrffSflfdtionModfl sflfdtionModfl;





    /**
    /**
    /**
    /**
    /**
     * Truf if tif root nodf is displbyfd, fblsf if its diildrfn brf
     * Truf if tif root nodf is displbyfd, fblsf if its diildrfn brf
     * Truf if tif root nodf is displbyfd, fblsf if its diildrfn brf
     * Truf if tif root nodf is displbyfd, fblsf if its diildrfn brf
     * Truf if tif root nodf is displbyfd, fblsf if its diildrfn brf
     * tif iigifst visiblf nodfs.
     * tif iigifst visiblf nodfs.
     * tif iigifst visiblf nodfs.
     * tif iigifst visiblf nodfs.
     * tif iigifst visiblf nodfs.
     */
     */
     */
     */
     */
    protfdtfd boolfbn                    rootVisiblf;
    protfdtfd boolfbn                    rootVisiblf;
    protfdtfd boolfbn                    rootVisiblf;
    protfdtfd boolfbn                    rootVisiblf;
    protfdtfd boolfbn                    rootVisiblf;





    /**
    /**
    /**
    /**
    /**
     * Tif dfll usfd to drbw nodfs. If <dodf>null</dodf>, tif UI usfs b dffbult
     * Tif dfll usfd to drbw nodfs. If <dodf>null</dodf>, tif UI usfs b dffbult
     * Tif dfll usfd to drbw nodfs. If <dodf>null</dodf>, tif UI usfs b dffbult
     * Tif dfll usfd to drbw nodfs. If <dodf>null</dodf>, tif UI usfs b dffbult
     * Tif dfll usfd to drbw nodfs. If <dodf>null</dodf>, tif UI usfs b dffbult
     * <dodf>dfllRfndfrfr</dodf>.
     * <dodf>dfllRfndfrfr</dodf>.
     * <dodf>dfllRfndfrfr</dodf>.
     * <dodf>dfllRfndfrfr</dodf>.
     * <dodf>dfllRfndfrfr</dodf>.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TrffCfllRfndfrfr  dfllRfndfrfr;
    trbnsifnt protfdtfd TrffCfllRfndfrfr  dfllRfndfrfr;
    trbnsifnt protfdtfd TrffCfllRfndfrfr  dfllRfndfrfr;
    trbnsifnt protfdtfd TrffCfllRfndfrfr  dfllRfndfrfr;
    trbnsifnt protfdtfd TrffCfllRfndfrfr  dfllRfndfrfr;





    /**
    /**
    /**
    /**
    /**
     * Hfigit to usf for fbdi displby row. If tiis is &lt;= 0 tif rfndfrfr
     * Hfigit to usf for fbdi displby row. If tiis is &lt;= 0 tif rfndfrfr
     * Hfigit to usf for fbdi displby row. If tiis is &lt;= 0 tif rfndfrfr
     * Hfigit to usf for fbdi displby row. If tiis is &lt;= 0 tif rfndfrfr
     * Hfigit to usf for fbdi displby row. If tiis is &lt;= 0 tif rfndfrfr
     * dftfrminfs tif ifigit for fbdi row.
     * dftfrminfs tif ifigit for fbdi row.
     * dftfrminfs tif ifigit for fbdi row.
     * dftfrminfs tif ifigit for fbdi row.
     * dftfrminfs tif ifigit for fbdi row.
     */
     */
     */
     */
     */
    protfdtfd int                         rowHfigit;
    protfdtfd int                         rowHfigit;
    protfdtfd int                         rowHfigit;
    protfdtfd int                         rowHfigit;
    protfdtfd int                         rowHfigit;
    privbtf boolfbn                       rowHfigitSft = fblsf;
    privbtf boolfbn                       rowHfigitSft = fblsf;
    privbtf boolfbn                       rowHfigitSft = fblsf;
    privbtf boolfbn                       rowHfigitSft = fblsf;
    privbtf boolfbn                       rowHfigitSft = fblsf;





    /**
    /**
    /**
    /**
    /**
     * Mbps from <dodf>TrffPbti</dodf> to <dodf>Boolfbn</dodf>
     * Mbps from <dodf>TrffPbti</dodf> to <dodf>Boolfbn</dodf>
     * Mbps from <dodf>TrffPbti</dodf> to <dodf>Boolfbn</dodf>
     * Mbps from <dodf>TrffPbti</dodf> to <dodf>Boolfbn</dodf>
     * Mbps from <dodf>TrffPbti</dodf> to <dodf>Boolfbn</dodf>
     * indidbting wiftifr or not tif
     * indidbting wiftifr or not tif
     * indidbting wiftifr or not tif
     * indidbting wiftifr or not tif
     * indidbting wiftifr or not tif
     * pbrtidulbr pbti is fxpbndfd. Tiis ONLY indidbtfs wiftifr b
     * pbrtidulbr pbti is fxpbndfd. Tiis ONLY indidbtfs wiftifr b
     * pbrtidulbr pbti is fxpbndfd. Tiis ONLY indidbtfs wiftifr b
     * pbrtidulbr pbti is fxpbndfd. Tiis ONLY indidbtfs wiftifr b
     * pbrtidulbr pbti is fxpbndfd. Tiis ONLY indidbtfs wiftifr b
     * givfn pbti is fxpbndfd, bnd NOT if it is visiblf or not. Tibt
     * givfn pbti is fxpbndfd, bnd NOT if it is visiblf or not. Tibt
     * givfn pbti is fxpbndfd, bnd NOT if it is visiblf or not. Tibt
     * givfn pbti is fxpbndfd, bnd NOT if it is visiblf or not. Tibt
     * givfn pbti is fxpbndfd, bnd NOT if it is visiblf or not. Tibt
     * informbtion must bf dftfrminfd by visiting bll tif pbrfnt
     * informbtion must bf dftfrminfd by visiting bll tif pbrfnt
     * informbtion must bf dftfrminfd by visiting bll tif pbrfnt
     * informbtion must bf dftfrminfd by visiting bll tif pbrfnt
     * informbtion must bf dftfrminfd by visiting bll tif pbrfnt
     * pbtis bnd sffing if tify brf visiblf.
     * pbtis bnd sffing if tify brf visiblf.
     * pbtis bnd sffing if tify brf visiblf.
     * pbtis bnd sffing if tify brf visiblf.
     * pbtis bnd sffing if tify brf visiblf.
     */
     */
     */
     */
     */
    trbnsifnt privbtf Hbsitbblf<TrffPbti, Boolfbn> fxpbndfdStbtf;
    trbnsifnt privbtf Hbsitbblf<TrffPbti, Boolfbn> fxpbndfdStbtf;
    trbnsifnt privbtf Hbsitbblf<TrffPbti, Boolfbn> fxpbndfdStbtf;
    trbnsifnt privbtf Hbsitbblf<TrffPbti, Boolfbn> fxpbndfdStbtf;
    trbnsifnt privbtf Hbsitbblf<TrffPbti, Boolfbn> fxpbndfdStbtf;










    /**
    /**
    /**
    /**
    /**
     * Truf if ibndlfs brf displbyfd bt tif topmost lfvfl of tif trff.
     * Truf if ibndlfs brf displbyfd bt tif topmost lfvfl of tif trff.
     * Truf if ibndlfs brf displbyfd bt tif topmost lfvfl of tif trff.
     * Truf if ibndlfs brf displbyfd bt tif topmost lfvfl of tif trff.
     * Truf if ibndlfs brf displbyfd bt tif topmost lfvfl of tif trff.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * A ibndlf is b smbll idon tibt displbys bdjbdfnt to tif nodf wiidi
     * A ibndlf is b smbll idon tibt displbys bdjbdfnt to tif nodf wiidi
     * A ibndlf is b smbll idon tibt displbys bdjbdfnt to tif nodf wiidi
     * A ibndlf is b smbll idon tibt displbys bdjbdfnt to tif nodf wiidi
     * A ibndlf is b smbll idon tibt displbys bdjbdfnt to tif nodf wiidi
     * bllows tif usfr to dlidk ondf to fxpbnd or dollbpsf tif nodf. A
     * bllows tif usfr to dlidk ondf to fxpbnd or dollbpsf tif nodf. A
     * bllows tif usfr to dlidk ondf to fxpbnd or dollbpsf tif nodf. A
     * bllows tif usfr to dlidk ondf to fxpbnd or dollbpsf tif nodf. A
     * bllows tif usfr to dlidk ondf to fxpbnd or dollbpsf tif nodf. A
     * dommon intfrfbdf siows b plus sign (+) for b nodf wiidi dbn bf
     * dommon intfrfbdf siows b plus sign (+) for b nodf wiidi dbn bf
     * dommon intfrfbdf siows b plus sign (+) for b nodf wiidi dbn bf
     * dommon intfrfbdf siows b plus sign (+) for b nodf wiidi dbn bf
     * dommon intfrfbdf siows b plus sign (+) for b nodf wiidi dbn bf
     * fxpbndfd bnd b minus sign (-) for b nodf wiidi dbn bf dollbpsfd.
     * fxpbndfd bnd b minus sign (-) for b nodf wiidi dbn bf dollbpsfd.
     * fxpbndfd bnd b minus sign (-) for b nodf wiidi dbn bf dollbpsfd.
     * fxpbndfd bnd b minus sign (-) for b nodf wiidi dbn bf dollbpsfd.
     * fxpbndfd bnd b minus sign (-) for b nodf wiidi dbn bf dollbpsfd.
     * Hbndlfs brf blwbys siown for nodfs bflow tif topmost lfvfl.
     * Hbndlfs brf blwbys siown for nodfs bflow tif topmost lfvfl.
     * Hbndlfs brf blwbys siown for nodfs bflow tif topmost lfvfl.
     * Hbndlfs brf blwbys siown for nodfs bflow tif topmost lfvfl.
     * Hbndlfs brf blwbys siown for nodfs bflow tif topmost lfvfl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif <dodf>rootVisiblf</dodf> sftting spfdififs tibt tif root
     * If tif <dodf>rootVisiblf</dodf> sftting spfdififs tibt tif root
     * If tif <dodf>rootVisiblf</dodf> sftting spfdififs tibt tif root
     * If tif <dodf>rootVisiblf</dodf> sftting spfdififs tibt tif root
     * If tif <dodf>rootVisiblf</dodf> sftting spfdififs tibt tif root
     * nodf is to bf displbyfd, tifn tibt is tif only nodf bt tif topmost
     * nodf is to bf displbyfd, tifn tibt is tif only nodf bt tif topmost
     * nodf is to bf displbyfd, tifn tibt is tif only nodf bt tif topmost
     * nodf is to bf displbyfd, tifn tibt is tif only nodf bt tif topmost
     * nodf is to bf displbyfd, tifn tibt is tif only nodf bt tif topmost
     * lfvfl. If tif root nodf is not displbyfd, tifn bll of its
     * lfvfl. If tif root nodf is not displbyfd, tifn bll of its
     * lfvfl. If tif root nodf is not displbyfd, tifn bll of its
     * lfvfl. If tif root nodf is not displbyfd, tifn bll of its
     * lfvfl. If tif root nodf is not displbyfd, tifn bll of its
     * diildrfn brf bt tif topmost lfvfl of tif trff. Hbndlfs brf
     * diildrfn brf bt tif topmost lfvfl of tif trff. Hbndlfs brf
     * diildrfn brf bt tif topmost lfvfl of tif trff. Hbndlfs brf
     * diildrfn brf bt tif topmost lfvfl of tif trff. Hbndlfs brf
     * diildrfn brf bt tif topmost lfvfl of tif trff. Hbndlfs brf
     * blwbys displbyfd for nodfs otifr tibn tif topmost.
     * blwbys displbyfd for nodfs otifr tibn tif topmost.
     * blwbys displbyfd for nodfs otifr tibn tif topmost.
     * blwbys displbyfd for nodfs otifr tibn tif topmost.
     * blwbys displbyfd for nodfs otifr tibn tif topmost.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif root nodf isn't visiblf, it is gfnfrblly b good to mbkf
     * If tif root nodf isn't visiblf, it is gfnfrblly b good to mbkf
     * If tif root nodf isn't visiblf, it is gfnfrblly b good to mbkf
     * If tif root nodf isn't visiblf, it is gfnfrblly b good to mbkf
     * If tif root nodf isn't visiblf, it is gfnfrblly b good to mbkf
     * tiis vbluf truf. Otifrwisf, tif trff looks fxbdtly likf b list,
     * tiis vbluf truf. Otifrwisf, tif trff looks fxbdtly likf b list,
     * tiis vbluf truf. Otifrwisf, tif trff looks fxbdtly likf b list,
     * tiis vbluf truf. Otifrwisf, tif trff looks fxbdtly likf b list,
     * tiis vbluf truf. Otifrwisf, tif trff looks fxbdtly likf b list,
     * bnd usfrs mby not know tibt tif "list fntrifs" brf bdtublly
     * bnd usfrs mby not know tibt tif "list fntrifs" brf bdtublly
     * bnd usfrs mby not know tibt tif "list fntrifs" brf bdtublly
     * bnd usfrs mby not know tibt tif "list fntrifs" brf bdtublly
     * bnd usfrs mby not know tibt tif "list fntrifs" brf bdtublly
     * trff nodfs.
     * trff nodfs.
     * trff nodfs.
     * trff nodfs.
     * trff nodfs.
     *
     *
     *
     *
     *
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     */
     */
     */
     */
     */
    protfdtfd boolfbn           siowsRootHbndlfs;
    protfdtfd boolfbn           siowsRootHbndlfs;
    protfdtfd boolfbn           siowsRootHbndlfs;
    protfdtfd boolfbn           siowsRootHbndlfs;
    protfdtfd boolfbn           siowsRootHbndlfs;
    privbtf boolfbn             siowsRootHbndlfsSft = fblsf;
    privbtf boolfbn             siowsRootHbndlfsSft = fblsf;
    privbtf boolfbn             siowsRootHbndlfsSft = fblsf;
    privbtf boolfbn             siowsRootHbndlfsSft = fblsf;
    privbtf boolfbn             siowsRootHbndlfsSft = fblsf;





    /**
    /**
    /**
    /**
    /**
     * Crfbtfs b nfw fvfnt bnd pbssfd it off tif
     * Crfbtfs b nfw fvfnt bnd pbssfd it off tif
     * Crfbtfs b nfw fvfnt bnd pbssfd it off tif
     * Crfbtfs b nfw fvfnt bnd pbssfd it off tif
     * Crfbtfs b nfw fvfnt bnd pbssfd it off tif
     * <dodf>sflfdtionListfnfrs</dodf>.
     * <dodf>sflfdtionListfnfrs</dodf>.
     * <dodf>sflfdtionListfnfrs</dodf>.
     * <dodf>sflfdtionListfnfrs</dodf>.
     * <dodf>sflfdtionListfnfrs</dodf>.
     */
     */
     */
     */
     */
    protfdtfd trbnsifnt TrffSflfdtionRfdirfdtor sflfdtionRfdirfdtor;
    protfdtfd trbnsifnt TrffSflfdtionRfdirfdtor sflfdtionRfdirfdtor;
    protfdtfd trbnsifnt TrffSflfdtionRfdirfdtor sflfdtionRfdirfdtor;
    protfdtfd trbnsifnt TrffSflfdtionRfdirfdtor sflfdtionRfdirfdtor;
    protfdtfd trbnsifnt TrffSflfdtionRfdirfdtor sflfdtionRfdirfdtor;





    /**
    /**
    /**
    /**
    /**
     * Editor for tif fntrifs.  Dffbult is <dodf>null</dodf>
     * Editor for tif fntrifs.  Dffbult is <dodf>null</dodf>
     * Editor for tif fntrifs.  Dffbult is <dodf>null</dodf>
     * Editor for tif fntrifs.  Dffbult is <dodf>null</dodf>
     * Editor for tif fntrifs.  Dffbult is <dodf>null</dodf>
     * (trff is not fditbblf).
     * (trff is not fditbblf).
     * (trff is not fditbblf).
     * (trff is not fditbblf).
     * (trff is not fditbblf).
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TrffCfllEditor          dfllEditor;
    trbnsifnt protfdtfd TrffCfllEditor          dfllEditor;
    trbnsifnt protfdtfd TrffCfllEditor          dfllEditor;
    trbnsifnt protfdtfd TrffCfllEditor          dfllEditor;
    trbnsifnt protfdtfd TrffCfllEditor          dfllEditor;





    /**
    /**
    /**
    /**
    /**
     * Is tif trff fditbblf? Dffbult is fblsf.
     * Is tif trff fditbblf? Dffbult is fblsf.
     * Is tif trff fditbblf? Dffbult is fblsf.
     * Is tif trff fditbblf? Dffbult is fblsf.
     * Is tif trff fditbblf? Dffbult is fblsf.
     */
     */
     */
     */
     */
    protfdtfd boolfbn                 fditbblf;
    protfdtfd boolfbn                 fditbblf;
    protfdtfd boolfbn                 fditbblf;
    protfdtfd boolfbn                 fditbblf;
    protfdtfd boolfbn                 fditbblf;





    /**
    /**
    /**
    /**
    /**
     * Is tiis trff b lbrgf modfl? Tiis is b dodf-optimizbtion sftting.
     * Is tiis trff b lbrgf modfl? Tiis is b dodf-optimizbtion sftting.
     * Is tiis trff b lbrgf modfl? Tiis is b dodf-optimizbtion sftting.
     * Is tiis trff b lbrgf modfl? Tiis is b dodf-optimizbtion sftting.
     * Is tiis trff b lbrgf modfl? Tiis is b dodf-optimizbtion sftting.
     * A lbrgf modfl dbn bf usfd wifn tif dfll ifigit is tif sbmf for bll
     * A lbrgf modfl dbn bf usfd wifn tif dfll ifigit is tif sbmf for bll
     * A lbrgf modfl dbn bf usfd wifn tif dfll ifigit is tif sbmf for bll
     * A lbrgf modfl dbn bf usfd wifn tif dfll ifigit is tif sbmf for bll
     * A lbrgf modfl dbn bf usfd wifn tif dfll ifigit is tif sbmf for bll
     * nodfs. Tif UI will tifn dbdif vfry littlf informbtion bnd instfbd
     * nodfs. Tif UI will tifn dbdif vfry littlf informbtion bnd instfbd
     * nodfs. Tif UI will tifn dbdif vfry littlf informbtion bnd instfbd
     * nodfs. Tif UI will tifn dbdif vfry littlf informbtion bnd instfbd
     * nodfs. Tif UI will tifn dbdif vfry littlf informbtion bnd instfbd
     * dontinublly mfssbgf tif modfl. Witiout b lbrgf modfl tif UI dbdifs
     * dontinublly mfssbgf tif modfl. Witiout b lbrgf modfl tif UI dbdifs
     * dontinublly mfssbgf tif modfl. Witiout b lbrgf modfl tif UI dbdifs
     * dontinublly mfssbgf tif modfl. Witiout b lbrgf modfl tif UI dbdifs
     * dontinublly mfssbgf tif modfl. Witiout b lbrgf modfl tif UI dbdifs
     * most of tif informbtion, rfsulting in ffwfr mftiod dblls to tif modfl.
     * most of tif informbtion, rfsulting in ffwfr mftiod dblls to tif modfl.
     * most of tif informbtion, rfsulting in ffwfr mftiod dblls to tif modfl.
     * most of tif informbtion, rfsulting in ffwfr mftiod dblls to tif modfl.
     * most of tif informbtion, rfsulting in ffwfr mftiod dblls to tif modfl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis vbluf is only b suggfstion to tif UI. Not bll UIs will
     * Tiis vbluf is only b suggfstion to tif UI. Not bll UIs will
     * Tiis vbluf is only b suggfstion to tif UI. Not bll UIs will
     * Tiis vbluf is only b suggfstion to tif UI. Not bll UIs will
     * Tiis vbluf is only b suggfstion to tif UI. Not bll UIs will
     * tbkf bdvbntbgf of it. Dffbult vbluf is fblsf.
     * tbkf bdvbntbgf of it. Dffbult vbluf is fblsf.
     * tbkf bdvbntbgf of it. Dffbult vbluf is fblsf.
     * tbkf bdvbntbgf of it. Dffbult vbluf is fblsf.
     * tbkf bdvbntbgf of it. Dffbult vbluf is fblsf.
     */
     */
     */
     */
     */
    protfdtfd boolfbn                 lbrgfModfl;
    protfdtfd boolfbn                 lbrgfModfl;
    protfdtfd boolfbn                 lbrgfModfl;
    protfdtfd boolfbn                 lbrgfModfl;
    protfdtfd boolfbn                 lbrgfModfl;





    /**
    /**
    /**
    /**
    /**
     * Numbfr of rows to mbkf visiblf bt onf timf. Tiis vbluf is usfd for
     * Numbfr of rows to mbkf visiblf bt onf timf. Tiis vbluf is usfd for
     * Numbfr of rows to mbkf visiblf bt onf timf. Tiis vbluf is usfd for
     * Numbfr of rows to mbkf visiblf bt onf timf. Tiis vbluf is usfd for
     * Numbfr of rows to mbkf visiblf bt onf timf. Tiis vbluf is usfd for
     * tif <dodf>Sdrollbblf</dodf> intfrfbdf. It dftfrminfs tif prfffrrfd
     * tif <dodf>Sdrollbblf</dodf> intfrfbdf. It dftfrminfs tif prfffrrfd
     * tif <dodf>Sdrollbblf</dodf> intfrfbdf. It dftfrminfs tif prfffrrfd
     * tif <dodf>Sdrollbblf</dodf> intfrfbdf. It dftfrminfs tif prfffrrfd
     * tif <dodf>Sdrollbblf</dodf> intfrfbdf. It dftfrminfs tif prfffrrfd
     * sizf of tif displby brfb.
     * sizf of tif displby brfb.
     * sizf of tif displby brfb.
     * sizf of tif displby brfb.
     * sizf of tif displby brfb.
     */
     */
     */
     */
     */
    protfdtfd int                     visiblfRowCount;
    protfdtfd int                     visiblfRowCount;
    protfdtfd int                     visiblfRowCount;
    protfdtfd int                     visiblfRowCount;
    protfdtfd int                     visiblfRowCount;





    /**
    /**
    /**
    /**
    /**
     * If truf, wifn fditing is to bf stoppfd by wby of sflfdtion dibnging,
     * If truf, wifn fditing is to bf stoppfd by wby of sflfdtion dibnging,
     * If truf, wifn fditing is to bf stoppfd by wby of sflfdtion dibnging,
     * If truf, wifn fditing is to bf stoppfd by wby of sflfdtion dibnging,
     * If truf, wifn fditing is to bf stoppfd by wby of sflfdtion dibnging,
     * dbtb in trff dibnging or otifr mfbns <dodf>stopCfllEditing</dodf>
     * dbtb in trff dibnging or otifr mfbns <dodf>stopCfllEditing</dodf>
     * dbtb in trff dibnging or otifr mfbns <dodf>stopCfllEditing</dodf>
     * dbtb in trff dibnging or otifr mfbns <dodf>stopCfllEditing</dodf>
     * dbtb in trff dibnging or otifr mfbns <dodf>stopCfllEditing</dodf>
     * is invokfd, bnd dibngfs brf sbvfd. If fblsf,
     * is invokfd, bnd dibngfs brf sbvfd. If fblsf,
     * is invokfd, bnd dibngfs brf sbvfd. If fblsf,
     * is invokfd, bnd dibngfs brf sbvfd. If fblsf,
     * is invokfd, bnd dibngfs brf sbvfd. If fblsf,
     * <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs
     * <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs
     * <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs
     * <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs
     * <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs
     * brf disdbrdfd. Dffbult is fblsf.
     * brf disdbrdfd. Dffbult is fblsf.
     * brf disdbrdfd. Dffbult is fblsf.
     * brf disdbrdfd. Dffbult is fblsf.
     * brf disdbrdfd. Dffbult is fblsf.
     */
     */
     */
     */
     */
    protfdtfd boolfbn                 invokfsStopCfllEditing;
    protfdtfd boolfbn                 invokfsStopCfllEditing;
    protfdtfd boolfbn                 invokfsStopCfllEditing;
    protfdtfd boolfbn                 invokfsStopCfllEditing;
    protfdtfd boolfbn                 invokfsStopCfllEditing;





    /**
    /**
    /**
    /**
    /**
     * If truf, wifn b nodf is fxpbndfd, bs mbny of tif dfsdfndbnts brf
     * If truf, wifn b nodf is fxpbndfd, bs mbny of tif dfsdfndbnts brf
     * If truf, wifn b nodf is fxpbndfd, bs mbny of tif dfsdfndbnts brf
     * If truf, wifn b nodf is fxpbndfd, bs mbny of tif dfsdfndbnts brf
     * If truf, wifn b nodf is fxpbndfd, bs mbny of tif dfsdfndbnts brf
     * sdrollfd to bf visiblf.
     * sdrollfd to bf visiblf.
     * sdrollfd to bf visiblf.
     * sdrollfd to bf visiblf.
     * sdrollfd to bf visiblf.
     */
     */
     */
     */
     */
    protfdtfd boolfbn                 sdrollsOnExpbnd;
    protfdtfd boolfbn                 sdrollsOnExpbnd;
    protfdtfd boolfbn                 sdrollsOnExpbnd;
    protfdtfd boolfbn                 sdrollsOnExpbnd;
    protfdtfd boolfbn                 sdrollsOnExpbnd;
    privbtf boolfbn                   sdrollsOnExpbndSft = fblsf;
    privbtf boolfbn                   sdrollsOnExpbndSft = fblsf;
    privbtf boolfbn                   sdrollsOnExpbndSft = fblsf;
    privbtf boolfbn                   sdrollsOnExpbndSft = fblsf;
    privbtf boolfbn                   sdrollsOnExpbndSft = fblsf;





    /**
    /**
    /**
    /**
    /**
     * Numbfr of mousf dlidks bfforf b nodf is fxpbndfd.
     * Numbfr of mousf dlidks bfforf b nodf is fxpbndfd.
     * Numbfr of mousf dlidks bfforf b nodf is fxpbndfd.
     * Numbfr of mousf dlidks bfforf b nodf is fxpbndfd.
     * Numbfr of mousf dlidks bfforf b nodf is fxpbndfd.
     */
     */
     */
     */
     */
    protfdtfd int                     togglfClidkCount;
    protfdtfd int                     togglfClidkCount;
    protfdtfd int                     togglfClidkCount;
    protfdtfd int                     togglfClidkCount;
    protfdtfd int                     togglfClidkCount;





    /**
    /**
    /**
    /**
    /**
     * Updbtfs tif <dodf>fxpbndfdStbtf</dodf>.
     * Updbtfs tif <dodf>fxpbndfdStbtf</dodf>.
     * Updbtfs tif <dodf>fxpbndfdStbtf</dodf>.
     * Updbtfs tif <dodf>fxpbndfdStbtf</dodf>.
     * Updbtfs tif <dodf>fxpbndfdStbtf</dodf>.
     */
     */
     */
     */
     */
    trbnsifnt protfdtfd TrffModflListfnfr       trffModflListfnfr;
    trbnsifnt protfdtfd TrffModflListfnfr       trffModflListfnfr;
    trbnsifnt protfdtfd TrffModflListfnfr       trffModflListfnfr;
    trbnsifnt protfdtfd TrffModflListfnfr       trffModflListfnfr;
    trbnsifnt protfdtfd TrffModflListfnfr       trffModflListfnfr;





    /**
    /**
    /**
    /**
    /**
     * Usfd wifn <dodf>sftExpbndfdStbtf</dodf> is invokfd,
     * Usfd wifn <dodf>sftExpbndfdStbtf</dodf> is invokfd,
     * Usfd wifn <dodf>sftExpbndfdStbtf</dodf> is invokfd,
     * Usfd wifn <dodf>sftExpbndfdStbtf</dodf> is invokfd,
     * Usfd wifn <dodf>sftExpbndfdStbtf</dodf> is invokfd,
     * will bf b <dodf>Stbdk</dodf> of <dodf>Stbdk</dodf>s.
     * will bf b <dodf>Stbdk</dodf> of <dodf>Stbdk</dodf>s.
     * will bf b <dodf>Stbdk</dodf> of <dodf>Stbdk</dodf>s.
     * will bf b <dodf>Stbdk</dodf> of <dodf>Stbdk</dodf>s.
     * will bf b <dodf>Stbdk</dodf> of <dodf>Stbdk</dodf>s.
     */
     */
     */
     */
     */
    trbnsifnt privbtf Stbdk<Stbdk<TrffPbti>> fxpbndfdStbdk;
    trbnsifnt privbtf Stbdk<Stbdk<TrffPbti>> fxpbndfdStbdk;
    trbnsifnt privbtf Stbdk<Stbdk<TrffPbti>> fxpbndfdStbdk;
    trbnsifnt privbtf Stbdk<Stbdk<TrffPbti>> fxpbndfdStbdk;
    trbnsifnt privbtf Stbdk<Stbdk<TrffPbti>> fxpbndfdStbdk;





    /**
    /**
    /**
    /**
    /**
     * Lfbd sflfdtion pbti, mby not bf <dodf>null</dodf>.
     * Lfbd sflfdtion pbti, mby not bf <dodf>null</dodf>.
     * Lfbd sflfdtion pbti, mby not bf <dodf>null</dodf>.
     * Lfbd sflfdtion pbti, mby not bf <dodf>null</dodf>.
     * Lfbd sflfdtion pbti, mby not bf <dodf>null</dodf>.
     */
     */
     */
     */
     */
    privbtf TrffPbti                  lfbdPbti;
    privbtf TrffPbti                  lfbdPbti;
    privbtf TrffPbti                  lfbdPbti;
    privbtf TrffPbti                  lfbdPbti;
    privbtf TrffPbti                  lfbdPbti;





    /**
    /**
    /**
    /**
    /**
     * Andior pbti.
     * Andior pbti.
     * Andior pbti.
     * Andior pbti.
     * Andior pbti.
     */
     */
     */
     */
     */
    privbtf TrffPbti                  bndiorPbti;
    privbtf TrffPbti                  bndiorPbti;
    privbtf TrffPbti                  bndiorPbti;
    privbtf TrffPbti                  bndiorPbti;
    privbtf TrffPbti                  bndiorPbti;





    /**
    /**
    /**
    /**
    /**
     * Truf if pbtis in tif sflfdtion siould bf fxpbndfd.
     * Truf if pbtis in tif sflfdtion siould bf fxpbndfd.
     * Truf if pbtis in tif sflfdtion siould bf fxpbndfd.
     * Truf if pbtis in tif sflfdtion siould bf fxpbndfd.
     * Truf if pbtis in tif sflfdtion siould bf fxpbndfd.
     */
     */
     */
     */
     */
    privbtf boolfbn                   fxpbndsSflfdtfdPbtis;
    privbtf boolfbn                   fxpbndsSflfdtfdPbtis;
    privbtf boolfbn                   fxpbndsSflfdtfdPbtis;
    privbtf boolfbn                   fxpbndsSflfdtfdPbtis;
    privbtf boolfbn                   fxpbndsSflfdtfdPbtis;





    /**
    /**
    /**
    /**
    /**
     * Tiis is sft to truf for tif liff of tif <dodf>sftUI</dodf> dbll.
     * Tiis is sft to truf for tif liff of tif <dodf>sftUI</dodf> dbll.
     * Tiis is sft to truf for tif liff of tif <dodf>sftUI</dodf> dbll.
     * Tiis is sft to truf for tif liff of tif <dodf>sftUI</dodf> dbll.
     * Tiis is sft to truf for tif liff of tif <dodf>sftUI</dodf> dbll.
     */
     */
     */
     */
     */
    privbtf boolfbn                   sfttingUI;
    privbtf boolfbn                   sfttingUI;
    privbtf boolfbn                   sfttingUI;
    privbtf boolfbn                   sfttingUI;
    privbtf boolfbn                   sfttingUI;





    /** If truf, mousf prfssfs on sflfdtions initibtf b drbg opfrbtion. */
    /** If truf, mousf prfssfs on sflfdtions initibtf b drbg opfrbtion. */
    /** If truf, mousf prfssfs on sflfdtions initibtf b drbg opfrbtion. */
    /** If truf, mousf prfssfs on sflfdtions initibtf b drbg opfrbtion. */
    /** If truf, mousf prfssfs on sflfdtions initibtf b drbg opfrbtion. */
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;
    privbtf boolfbn drbgEnbblfd;





    /**
    /**
    /**
    /**
    /**
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     * Tif drop modf for tiis domponfnt.
     */
     */
     */
     */
     */
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;
    privbtf DropModf dropModf = DropModf.USE_SELECTION;





    /**
    /**
    /**
    /**
    /**
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     * Tif drop lodbtion.
     */
     */
     */
     */
     */
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;
    privbtf trbnsifnt DropLodbtion dropLodbtion;





    /**
    /**
    /**
    /**
    /**
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * A subdlbss of <dodf>TrbnsffrHbndlfr.DropLodbtion</dodf> rfprfsfnting
     * b drop lodbtion for b <dodf>JTrff</dodf>.
     * b drop lodbtion for b <dodf>JTrff</dodf>.
     * b drop lodbtion for b <dodf>JTrff</dodf>.
     * b drop lodbtion for b <dodf>JTrff</dodf>.
     * b drop lodbtion for b <dodf>JTrff</dodf>.
     *
     *
     *
     *
     *
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
    publid stbtid finbl dlbss DropLodbtion fxtfnds TrbnsffrHbndlfr.DropLodbtion {
        privbtf finbl TrffPbti pbti;
        privbtf finbl TrffPbti pbti;
        privbtf finbl TrffPbti pbti;
        privbtf finbl TrffPbti pbti;
        privbtf finbl TrffPbti pbti;
        privbtf finbl int indfx;
        privbtf finbl int indfx;
        privbtf finbl int indfx;
        privbtf finbl int indfx;
        privbtf finbl int indfx;





        privbtf DropLodbtion(Point p, TrffPbti pbti, int indfx) {
        privbtf DropLodbtion(Point p, TrffPbti pbti, int indfx) {
        privbtf DropLodbtion(Point p, TrffPbti pbti, int indfx) {
        privbtf DropLodbtion(Point p, TrffPbti pbti, int indfx) {
        privbtf DropLodbtion(Point p, TrffPbti pbti, int indfx) {
            supfr(p);
            supfr(p);
            supfr(p);
            supfr(p);
            supfr(p);
            tiis.pbti = pbti;
            tiis.pbti = pbti;
            tiis.pbti = pbti;
            tiis.pbti = pbti;
            tiis.pbti = pbti;
            tiis.indfx = indfx;
            tiis.indfx = indfx;
            tiis.indfx = indfx;
            tiis.indfx = indfx;
            tiis.indfx = indfx;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif indfx wifrf tif droppfd dbtb siould bf insfrtfd
         * Rfturns tif indfx wifrf tif droppfd dbtb siould bf insfrtfd
         * Rfturns tif indfx wifrf tif droppfd dbtb siould bf insfrtfd
         * Rfturns tif indfx wifrf tif droppfd dbtb siould bf insfrtfd
         * Rfturns tif indfx wifrf tif droppfd dbtb siould bf insfrtfd
         * witi rfspfdt to tif pbti rfturnfd by <dodf>gftPbti()</dodf>.
         * witi rfspfdt to tif pbti rfturnfd by <dodf>gftPbti()</dodf>.
         * witi rfspfdt to tif pbti rfturnfd by <dodf>gftPbti()</dodf>.
         * witi rfspfdt to tif pbti rfturnfd by <dodf>gftPbti()</dodf>.
         * witi rfspfdt to tif pbti rfturnfd by <dodf>gftPbti()</dodf>.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * For drop modfs <dodf>DropModf.USE_SELECTION</dodf> bnd
         * For drop modfs <dodf>DropModf.USE_SELECTION</dodf> bnd
         * For drop modfs <dodf>DropModf.USE_SELECTION</dodf> bnd
         * For drop modfs <dodf>DropModf.USE_SELECTION</dodf> bnd
         * For drop modfs <dodf>DropModf.USE_SELECTION</dodf> bnd
         * <dodf>DropModf.ON</dodf>, tiis indfx is unimportbnt (bnd it will
         * <dodf>DropModf.ON</dodf>, tiis indfx is unimportbnt (bnd it will
         * <dodf>DropModf.ON</dodf>, tiis indfx is unimportbnt (bnd it will
         * <dodf>DropModf.ON</dodf>, tiis indfx is unimportbnt (bnd it will
         * <dodf>DropModf.ON</dodf>, tiis indfx is unimportbnt (bnd it will
         * blwbys bf <dodf>-1</dodf>) bs tif only intfrfsting dbtb is tif
         * blwbys bf <dodf>-1</dodf>) bs tif only intfrfsting dbtb is tif
         * blwbys bf <dodf>-1</dodf>) bs tif only intfrfsting dbtb is tif
         * blwbys bf <dodf>-1</dodf>) bs tif only intfrfsting dbtb is tif
         * blwbys bf <dodf>-1</dodf>) bs tif only intfrfsting dbtb is tif
         * pbti ovfr wiidi tif drop opfrbtion oddurrfd.
         * pbti ovfr wiidi tif drop opfrbtion oddurrfd.
         * pbti ovfr wiidi tif drop opfrbtion oddurrfd.
         * pbti ovfr wiidi tif drop opfrbtion oddurrfd.
         * pbti ovfr wiidi tif drop opfrbtion oddurrfd.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * For drop modf <dodf>DropModf.INSERT</dodf>, tiis indfx
         * For drop modf <dodf>DropModf.INSERT</dodf>, tiis indfx
         * For drop modf <dodf>DropModf.INSERT</dodf>, tiis indfx
         * For drop modf <dodf>DropModf.INSERT</dodf>, tiis indfx
         * For drop modf <dodf>DropModf.INSERT</dodf>, tiis indfx
         * indidbtfs tif indfx bt wiidi tif dbtb siould bf insfrtfd into
         * indidbtfs tif indfx bt wiidi tif dbtb siould bf insfrtfd into
         * indidbtfs tif indfx bt wiidi tif dbtb siould bf insfrtfd into
         * indidbtfs tif indfx bt wiidi tif dbtb siould bf insfrtfd into
         * indidbtfs tif indfx bt wiidi tif dbtb siould bf insfrtfd into
         * tif pbrfnt pbti rfprfsfntfd by <dodf>gftPbti()</dodf>.
         * tif pbrfnt pbti rfprfsfntfd by <dodf>gftPbti()</dodf>.
         * tif pbrfnt pbti rfprfsfntfd by <dodf>gftPbti()</dodf>.
         * tif pbrfnt pbti rfprfsfntfd by <dodf>gftPbti()</dodf>.
         * tif pbrfnt pbti rfprfsfntfd by <dodf>gftPbti()</dodf>.
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr tif
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr tif
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr tif
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr tif
         * <dodf>-1</dodf> indidbtfs tibt tif drop oddurrfd ovfr tif
         * pbrfnt itsflf, bnd in most dbsfs siould bf trfbtfd bs insfrting
         * pbrfnt itsflf, bnd in most dbsfs siould bf trfbtfd bs insfrting
         * pbrfnt itsflf, bnd in most dbsfs siould bf trfbtfd bs insfrting
         * pbrfnt itsflf, bnd in most dbsfs siould bf trfbtfd bs insfrting
         * pbrfnt itsflf, bnd in most dbsfs siould bf trfbtfd bs insfrting
         * into fitifr tif bfginning or tif fnd of tif pbrfnt's list of
         * into fitifr tif bfginning or tif fnd of tif pbrfnt's list of
         * into fitifr tif bfginning or tif fnd of tif pbrfnt's list of
         * into fitifr tif bfginning or tif fnd of tif pbrfnt's list of
         * into fitifr tif bfginning or tif fnd of tif pbrfnt's list of
         * diildrfn.
         * diildrfn.
         * diildrfn.
         * diildrfn.
         * diildrfn.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * For <dodf>DropModf.ON_OR_INSERT</dodf>, tiis vbluf will bf
         * For <dodf>DropModf.ON_OR_INSERT</dodf>, tiis vbluf will bf
         * For <dodf>DropModf.ON_OR_INSERT</dodf>, tiis vbluf will bf
         * For <dodf>DropModf.ON_OR_INSERT</dodf>, tiis vbluf will bf
         * For <dodf>DropModf.ON_OR_INSERT</dodf>, tiis vbluf will bf
         * bn insfrt indfx, bs dfsdribfd bbovf, or <dodf>-1</dodf> if
         * bn insfrt indfx, bs dfsdribfd bbovf, or <dodf>-1</dodf> if
         * bn insfrt indfx, bs dfsdribfd bbovf, or <dodf>-1</dodf> if
         * bn insfrt indfx, bs dfsdribfd bbovf, or <dodf>-1</dodf> if
         * bn insfrt indfx, bs dfsdribfd bbovf, or <dodf>-1</dodf> if
         * tif drop oddurrfd ovfr tif pbti itsflf.
         * tif drop oddurrfd ovfr tif pbti itsflf.
         * tif drop oddurrfd ovfr tif pbti itsflf.
         * tif drop oddurrfd ovfr tif pbti itsflf.
         * tif drop oddurrfd ovfr tif pbti itsflf.
         *
         *
         *
         *
         *
         * @rfturn tif diild indfx
         * @rfturn tif diild indfx
         * @rfturn tif diild indfx
         * @rfturn tif diild indfx
         * @rfturn tif diild indfx
         * @sff #gftPbti
         * @sff #gftPbti
         * @sff #gftPbti
         * @sff #gftPbti
         * @sff #gftPbti
         */
         */
         */
         */
         */
        publid int gftCiildIndfx() {
        publid int gftCiildIndfx() {
        publid int gftCiildIndfx() {
        publid int gftCiildIndfx() {
        publid int gftCiildIndfx() {
            rfturn indfx;
            rfturn indfx;
            rfturn indfx;
            rfturn indfx;
            rfturn indfx;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif pbti wifrf droppfd dbtb siould bf plbdfd in tif
         * Rfturns tif pbti wifrf droppfd dbtb siould bf plbdfd in tif
         * Rfturns tif pbti wifrf droppfd dbtb siould bf plbdfd in tif
         * Rfturns tif pbti wifrf droppfd dbtb siould bf plbdfd in tif
         * Rfturns tif pbti wifrf droppfd dbtb siould bf plbdfd in tif
         * trff.
         * trff.
         * trff.
         * trff.
         * trff.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Intfrprftbtion of tiis vbluf dfpfnds on tif drop modf sft on tif
         * Intfrprftbtion of tiis vbluf dfpfnds on tif drop modf sft on tif
         * Intfrprftbtion of tiis vbluf dfpfnds on tif drop modf sft on tif
         * Intfrprftbtion of tiis vbluf dfpfnds on tif drop modf sft on tif
         * Intfrprftbtion of tiis vbluf dfpfnds on tif drop modf sft on tif
         * domponfnt. If tif drop modf is <dodf>DropModf.USE_SELECTION</dodf>
         * domponfnt. If tif drop modf is <dodf>DropModf.USE_SELECTION</dodf>
         * domponfnt. If tif drop modf is <dodf>DropModf.USE_SELECTION</dodf>
         * domponfnt. If tif drop modf is <dodf>DropModf.USE_SELECTION</dodf>
         * domponfnt. If tif drop modf is <dodf>DropModf.USE_SELECTION</dodf>
         * or <dodf>DropModf.ON</dodf>, tif rfturn vbluf is tif pbti in tif
         * or <dodf>DropModf.ON</dodf>, tif rfturn vbluf is tif pbti in tif
         * or <dodf>DropModf.ON</dodf>, tif rfturn vbluf is tif pbti in tif
         * or <dodf>DropModf.ON</dodf>, tif rfturn vbluf is tif pbti in tif
         * or <dodf>DropModf.ON</dodf>, tif rfturn vbluf is tif pbti in tif
         * trff ovfr wiidi tif dbtb ibs bffn (or will bf) droppfd.
         * trff ovfr wiidi tif dbtb ibs bffn (or will bf) droppfd.
         * trff ovfr wiidi tif dbtb ibs bffn (or will bf) droppfd.
         * trff ovfr wiidi tif dbtb ibs bffn (or will bf) droppfd.
         * trff ovfr wiidi tif dbtb ibs bffn (or will bf) droppfd.
         * <dodf>null</dodf> indidbtfs tibt tif drop is ovfr fmpty spbdf,
         * <dodf>null</dodf> indidbtfs tibt tif drop is ovfr fmpty spbdf,
         * <dodf>null</dodf> indidbtfs tibt tif drop is ovfr fmpty spbdf,
         * <dodf>null</dodf> indidbtfs tibt tif drop is ovfr fmpty spbdf,
         * <dodf>null</dodf> indidbtfs tibt tif drop is ovfr fmpty spbdf,
         * not bssodibtfd witi b pbrtidulbr pbti.
         * not bssodibtfd witi b pbrtidulbr pbti.
         * not bssodibtfd witi b pbrtidulbr pbti.
         * not bssodibtfd witi b pbrtidulbr pbti.
         * not bssodibtfd witi b pbrtidulbr pbti.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * If tif drop modf is <dodf>DropModf.INSERT</dodf>, tif rfturn vbluf
         * If tif drop modf is <dodf>DropModf.INSERT</dodf>, tif rfturn vbluf
         * If tif drop modf is <dodf>DropModf.INSERT</dodf>, tif rfturn vbluf
         * If tif drop modf is <dodf>DropModf.INSERT</dodf>, tif rfturn vbluf
         * If tif drop modf is <dodf>DropModf.INSERT</dodf>, tif rfturn vbluf
         * rfffrs to tif pbti tibt siould bfdomf tif pbrfnt of tif nfw dbtb,
         * rfffrs to tif pbti tibt siould bfdomf tif pbrfnt of tif nfw dbtb,
         * rfffrs to tif pbti tibt siould bfdomf tif pbrfnt of tif nfw dbtb,
         * rfffrs to tif pbti tibt siould bfdomf tif pbrfnt of tif nfw dbtb,
         * rfffrs to tif pbti tibt siould bfdomf tif pbrfnt of tif nfw dbtb,
         * in wiidi dbsf <dodf>gftCiildIndfx()</dodf> indidbtfs wifrf tif
         * in wiidi dbsf <dodf>gftCiildIndfx()</dodf> indidbtfs wifrf tif
         * in wiidi dbsf <dodf>gftCiildIndfx()</dodf> indidbtfs wifrf tif
         * in wiidi dbsf <dodf>gftCiildIndfx()</dodf> indidbtfs wifrf tif
         * in wiidi dbsf <dodf>gftCiildIndfx()</dodf> indidbtfs wifrf tif
         * nfw itfm siould bf insfrtfd into tiis pbrfnt pbti. A
         * nfw itfm siould bf insfrtfd into tiis pbrfnt pbti. A
         * nfw itfm siould bf insfrtfd into tiis pbrfnt pbti. A
         * nfw itfm siould bf insfrtfd into tiis pbrfnt pbti. A
         * nfw itfm siould bf insfrtfd into tiis pbrfnt pbti. A
         * <dodf>null</dodf> pbti indidbtfs tibt no pbrfnt pbti ibs bffn
         * <dodf>null</dodf> pbti indidbtfs tibt no pbrfnt pbti ibs bffn
         * <dodf>null</dodf> pbti indidbtfs tibt no pbrfnt pbti ibs bffn
         * <dodf>null</dodf> pbti indidbtfs tibt no pbrfnt pbti ibs bffn
         * <dodf>null</dodf> pbti indidbtfs tibt no pbrfnt pbti ibs bffn
         * dftfrminfd, wiidi dbn ibppfn for multiplf rfbsons:
         * dftfrminfd, wiidi dbn ibppfn for multiplf rfbsons:
         * dftfrminfd, wiidi dbn ibppfn for multiplf rfbsons:
         * dftfrminfd, wiidi dbn ibppfn for multiplf rfbsons:
         * dftfrminfd, wiidi dbn ibppfn for multiplf rfbsons:
         * <ul>
         * <ul>
         * <ul>
         * <ul>
         * <ul>
         *    <li>Tif trff ibs no modfl
         *    <li>Tif trff ibs no modfl
         *    <li>Tif trff ibs no modfl
         *    <li>Tif trff ibs no modfl
         *    <li>Tif trff ibs no modfl
         *    <li>Tifrf is no root in tif trff
         *    <li>Tifrf is no root in tif trff
         *    <li>Tifrf is no root in tif trff
         *    <li>Tifrf is no root in tif trff
         *    <li>Tifrf is no root in tif trff
         *    <li>Tif root is dollbpsfd
         *    <li>Tif root is dollbpsfd
         *    <li>Tif root is dollbpsfd
         *    <li>Tif root is dollbpsfd
         *    <li>Tif root is dollbpsfd
         *    <li>Tif root is b lfbf nodf
         *    <li>Tif root is b lfbf nodf
         *    <li>Tif root is b lfbf nodf
         *    <li>Tif root is b lfbf nodf
         *    <li>Tif root is b lfbf nodf
         * </ul>
         * </ul>
         * </ul>
         * </ul>
         * </ul>
         * It is up to tif dfvflopfr to dfdidf if bnd iow tify wisi to ibndlf
         * It is up to tif dfvflopfr to dfdidf if bnd iow tify wisi to ibndlf
         * It is up to tif dfvflopfr to dfdidf if bnd iow tify wisi to ibndlf
         * It is up to tif dfvflopfr to dfdidf if bnd iow tify wisi to ibndlf
         * It is up to tif dfvflopfr to dfdidf if bnd iow tify wisi to ibndlf
         * tif <dodf>null</dodf> dbsf.
         * tif <dodf>null</dodf> dbsf.
         * tif <dodf>null</dodf> dbsf.
         * tif <dodf>null</dodf> dbsf.
         * tif <dodf>null</dodf> dbsf.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * If tif drop modf is <dodf>DropModf.ON_OR_INSERT</dodf>,
         * If tif drop modf is <dodf>DropModf.ON_OR_INSERT</dodf>,
         * If tif drop modf is <dodf>DropModf.ON_OR_INSERT</dodf>,
         * If tif drop modf is <dodf>DropModf.ON_OR_INSERT</dodf>,
         * If tif drop modf is <dodf>DropModf.ON_OR_INSERT</dodf>,
         * <dodf>gftCiildIndfx</dodf> dbn bf usfd to dftfrminf wiftifr tif
         * <dodf>gftCiildIndfx</dodf> dbn bf usfd to dftfrminf wiftifr tif
         * <dodf>gftCiildIndfx</dodf> dbn bf usfd to dftfrminf wiftifr tif
         * <dodf>gftCiildIndfx</dodf> dbn bf usfd to dftfrminf wiftifr tif
         * <dodf>gftCiildIndfx</dodf> dbn bf usfd to dftfrminf wiftifr tif
         * drop is on top of tif pbti itsflf (<dodf>-1</dodf>) or tif indfx
         * drop is on top of tif pbti itsflf (<dodf>-1</dodf>) or tif indfx
         * drop is on top of tif pbti itsflf (<dodf>-1</dodf>) or tif indfx
         * drop is on top of tif pbti itsflf (<dodf>-1</dodf>) or tif indfx
         * drop is on top of tif pbti itsflf (<dodf>-1</dodf>) or tif indfx
         * bt wiidi it siould bf insfrtfd into tif pbti (vblufs otifr tibn
         * bt wiidi it siould bf insfrtfd into tif pbti (vblufs otifr tibn
         * bt wiidi it siould bf insfrtfd into tif pbti (vblufs otifr tibn
         * bt wiidi it siould bf insfrtfd into tif pbti (vblufs otifr tibn
         * bt wiidi it siould bf insfrtfd into tif pbti (vblufs otifr tibn
         * <dodf>-1</dodf>).
         * <dodf>-1</dodf>).
         * <dodf>-1</dodf>).
         * <dodf>-1</dodf>).
         * <dodf>-1</dodf>).
         *
         *
         *
         *
         *
         * @rfturn tif drop pbti
         * @rfturn tif drop pbti
         * @rfturn tif drop pbti
         * @rfturn tif drop pbti
         * @rfturn tif drop pbti
         * @sff #gftCiildIndfx
         * @sff #gftCiildIndfx
         * @sff #gftCiildIndfx
         * @sff #gftCiildIndfx
         * @sff #gftCiildIndfx
         */
         */
         */
         */
         */
        publid TrffPbti gftPbti() {
        publid TrffPbti gftPbti() {
        publid TrffPbti gftPbti() {
        publid TrffPbti gftPbti() {
        publid TrffPbti gftPbti() {
            rfturn pbti;
            rfturn pbti;
            rfturn pbti;
            rfturn pbti;
            rfturn pbti;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Rfturns b string rfprfsfntbtion of tiis drop lodbtion.
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * Tiis mftiod is intfndfd to bf usfd for dfbugging purposfs,
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bnd tif dontfnt bnd formbt of tif rfturnfd string mby vbry
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         * bftwffn implfmfntbtions.
         *
         *
         *
         *
         *
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         * @rfturn b string rfprfsfntbtion of tiis drop lodbtion
         */
         */
         */
         */
         */
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
            rfturn gftClbss().gftNbmf()
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "[dropPoint=" + gftDropPoint() + ","
                   + "pbti=" + pbti + ","
                   + "pbti=" + pbti + ","
                   + "pbti=" + pbti + ","
                   + "pbti=" + pbti + ","
                   + "pbti=" + pbti + ","
                   + "diildIndfx=" + indfx + "]";
                   + "diildIndfx=" + indfx + "]";
                   + "diildIndfx=" + indfx + "]";
                   + "diildIndfx=" + indfx + "]";
                   + "diildIndfx=" + indfx + "]";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Tif row to fxpbnd during DnD.
     * Tif row to fxpbnd during DnD.
     * Tif row to fxpbnd during DnD.
     * Tif row to fxpbnd during DnD.
     * Tif row to fxpbnd during DnD.
     */
     */
     */
     */
     */
    privbtf int fxpbndRow = -1;
    privbtf int fxpbndRow = -1;
    privbtf int fxpbndRow = -1;
    privbtf int fxpbndRow = -1;
    privbtf int fxpbndRow = -1;





    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    privbtf dlbss TrffTimfr fxtfnds Timfr {
    privbtf dlbss TrffTimfr fxtfnds Timfr {
    privbtf dlbss TrffTimfr fxtfnds Timfr {
    privbtf dlbss TrffTimfr fxtfnds Timfr {
    privbtf dlbss TrffTimfr fxtfnds Timfr {
        publid TrffTimfr() {
        publid TrffTimfr() {
        publid TrffTimfr() {
        publid TrffTimfr() {
        publid TrffTimfr() {
            supfr(2000, null);
            supfr(2000, null);
            supfr(2000, null);
            supfr(2000, null);
            supfr(2000, null);
            sftRfpfbts(fblsf);
            sftRfpfbts(fblsf);
            sftRfpfbts(fblsf);
            sftRfpfbts(fblsf);
            sftRfpfbts(fblsf);
        }
        }
        }
        }
        }





        publid void firfAdtionPfrformfd(AdtionEvfnt bf) {
        publid void firfAdtionPfrformfd(AdtionEvfnt bf) {
        publid void firfAdtionPfrformfd(AdtionEvfnt bf) {
        publid void firfAdtionPfrformfd(AdtionEvfnt bf) {
        publid void firfAdtionPfrformfd(AdtionEvfnt bf) {
            JTrff.tiis.fxpbndRow(fxpbndRow);
            JTrff.tiis.fxpbndRow(fxpbndRow);
            JTrff.tiis.fxpbndRow(fxpbndRow);
            JTrff.tiis.fxpbndRow(fxpbndRow);
            JTrff.tiis.fxpbndRow(fxpbndRow);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * A timfr to fxpbnd nodfs during drop.
     * A timfr to fxpbnd nodfs during drop.
     * A timfr to fxpbnd nodfs during drop.
     * A timfr to fxpbnd nodfs during drop.
     * A timfr to fxpbnd nodfs during drop.
     */
     */
     */
     */
     */
    privbtf TrffTimfr dropTimfr;
    privbtf TrffTimfr dropTimfr;
    privbtf TrffTimfr dropTimfr;
    privbtf TrffTimfr dropTimfr;
    privbtf TrffTimfr dropTimfr;





    /**
    /**
    /**
    /**
    /**
     * Wifn <dodf>bddTrffExpbnsionListfnfr</dodf> is invokfd,
     * Wifn <dodf>bddTrffExpbnsionListfnfr</dodf> is invokfd,
     * Wifn <dodf>bddTrffExpbnsionListfnfr</dodf> is invokfd,
     * Wifn <dodf>bddTrffExpbnsionListfnfr</dodf> is invokfd,
     * Wifn <dodf>bddTrffExpbnsionListfnfr</dodf> is invokfd,
     * bnd <dodf>sfttingUI</dodf> is truf, tiis ivbr gfts sft to tif pbssfd in
     * bnd <dodf>sfttingUI</dodf> is truf, tiis ivbr gfts sft to tif pbssfd in
     * bnd <dodf>sfttingUI</dodf> is truf, tiis ivbr gfts sft to tif pbssfd in
     * bnd <dodf>sfttingUI</dodf> is truf, tiis ivbr gfts sft to tif pbssfd in
     * bnd <dodf>sfttingUI</dodf> is truf, tiis ivbr gfts sft to tif pbssfd in
     * <dodf>Listfnfr</dodf>. Tiis listfnfr is tifn notififd first in
     * <dodf>Listfnfr</dodf>. Tiis listfnfr is tifn notififd first in
     * <dodf>Listfnfr</dodf>. Tiis listfnfr is tifn notififd first in
     * <dodf>Listfnfr</dodf>. Tiis listfnfr is tifn notififd first in
     * <dodf>Listfnfr</dodf>. Tiis listfnfr is tifn notififd first in
     * <dodf>firfTrffCollbpsfd</dodf> bnd <dodf>firfTrffExpbndfd</dodf>.
     * <dodf>firfTrffCollbpsfd</dodf> bnd <dodf>firfTrffExpbndfd</dodf>.
     * <dodf>firfTrffCollbpsfd</dodf> bnd <dodf>firfTrffExpbndfd</dodf>.
     * <dodf>firfTrffCollbpsfd</dodf> bnd <dodf>firfTrffExpbndfd</dodf>.
     * <dodf>firfTrffCollbpsfd</dodf> bnd <dodf>firfTrffExpbndfd</dodf>.
     * <p>Tiis is bn ugly workbround for b wby to ibvf tif UI listfnfr
     * <p>Tiis is bn ugly workbround for b wby to ibvf tif UI listfnfr
     * <p>Tiis is bn ugly workbround for b wby to ibvf tif UI listfnfr
     * <p>Tiis is bn ugly workbround for b wby to ibvf tif UI listfnfr
     * <p>Tiis is bn ugly workbround for b wby to ibvf tif UI listfnfr
     * gft notififd bfforf otifr listfnfrs.
     * gft notififd bfforf otifr listfnfrs.
     * gft notififd bfforf otifr listfnfrs.
     * gft notififd bfforf otifr listfnfrs.
     * gft notififd bfforf otifr listfnfrs.
     */
     */
     */
     */
     */
    privbtf trbnsifnt TrffExpbnsionListfnfr     uiTrffExpbnsionListfnfr;
    privbtf trbnsifnt TrffExpbnsionListfnfr     uiTrffExpbnsionListfnfr;
    privbtf trbnsifnt TrffExpbnsionListfnfr     uiTrffExpbnsionListfnfr;
    privbtf trbnsifnt TrffExpbnsionListfnfr     uiTrffExpbnsionListfnfr;
    privbtf trbnsifnt TrffExpbnsionListfnfr     uiTrffExpbnsionListfnfr;





    /**
    /**
    /**
    /**
    /**
     * Mbx numbfr of stbdks to kffp bround.
     * Mbx numbfr of stbdks to kffp bround.
     * Mbx numbfr of stbdks to kffp bround.
     * Mbx numbfr of stbdks to kffp bround.
     * Mbx numbfr of stbdks to kffp bround.
     */
     */
     */
     */
     */
    privbtf stbtid int                TEMP_STACK_SIZE = 11;
    privbtf stbtid int                TEMP_STACK_SIZE = 11;
    privbtf stbtid int                TEMP_STACK_SIZE = 11;
    privbtf stbtid int                TEMP_STACK_SIZE = 11;
    privbtf stbtid int                TEMP_STACK_SIZE = 11;





    //
    //
    //
    //
    //
    // Bound propfrty nbmfs
    // Bound propfrty nbmfs
    // Bound propfrty nbmfs
    // Bound propfrty nbmfs
    // Bound propfrty nbmfs
    //
    //
    //
    //
    //
    /** Bound propfrty nbmf for <dodf>dfllRfndfrfr</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllRfndfrfr</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllRfndfrfr</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllRfndfrfr</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllRfndfrfr</dodf>. */
    publid finbl stbtid String        CELL_RENDERER_PROPERTY = "dfllRfndfrfr";
    publid finbl stbtid String        CELL_RENDERER_PROPERTY = "dfllRfndfrfr";
    publid finbl stbtid String        CELL_RENDERER_PROPERTY = "dfllRfndfrfr";
    publid finbl stbtid String        CELL_RENDERER_PROPERTY = "dfllRfndfrfr";
    publid finbl stbtid String        CELL_RENDERER_PROPERTY = "dfllRfndfrfr";
    /** Bound propfrty nbmf for <dodf>trffModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>trffModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>trffModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>trffModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>trffModfl</dodf>. */
    publid finbl stbtid String        TREE_MODEL_PROPERTY = "modfl";
    publid finbl stbtid String        TREE_MODEL_PROPERTY = "modfl";
    publid finbl stbtid String        TREE_MODEL_PROPERTY = "modfl";
    publid finbl stbtid String        TREE_MODEL_PROPERTY = "modfl";
    publid finbl stbtid String        TREE_MODEL_PROPERTY = "modfl";
    /** Bound propfrty nbmf for <dodf>rootVisiblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>rootVisiblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>rootVisiblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>rootVisiblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>rootVisiblf</dodf>. */
    publid finbl stbtid String        ROOT_VISIBLE_PROPERTY = "rootVisiblf";
    publid finbl stbtid String        ROOT_VISIBLE_PROPERTY = "rootVisiblf";
    publid finbl stbtid String        ROOT_VISIBLE_PROPERTY = "rootVisiblf";
    publid finbl stbtid String        ROOT_VISIBLE_PROPERTY = "rootVisiblf";
    publid finbl stbtid String        ROOT_VISIBLE_PROPERTY = "rootVisiblf";
    /** Bound propfrty nbmf for <dodf>siowsRootHbndlfs</dodf>. */
    /** Bound propfrty nbmf for <dodf>siowsRootHbndlfs</dodf>. */
    /** Bound propfrty nbmf for <dodf>siowsRootHbndlfs</dodf>. */
    /** Bound propfrty nbmf for <dodf>siowsRootHbndlfs</dodf>. */
    /** Bound propfrty nbmf for <dodf>siowsRootHbndlfs</dodf>. */
    publid finbl stbtid String        SHOWS_ROOT_HANDLES_PROPERTY = "siowsRootHbndlfs";
    publid finbl stbtid String        SHOWS_ROOT_HANDLES_PROPERTY = "siowsRootHbndlfs";
    publid finbl stbtid String        SHOWS_ROOT_HANDLES_PROPERTY = "siowsRootHbndlfs";
    publid finbl stbtid String        SHOWS_ROOT_HANDLES_PROPERTY = "siowsRootHbndlfs";
    publid finbl stbtid String        SHOWS_ROOT_HANDLES_PROPERTY = "siowsRootHbndlfs";
    /** Bound propfrty nbmf for <dodf>rowHfigit</dodf>. */
    /** Bound propfrty nbmf for <dodf>rowHfigit</dodf>. */
    /** Bound propfrty nbmf for <dodf>rowHfigit</dodf>. */
    /** Bound propfrty nbmf for <dodf>rowHfigit</dodf>. */
    /** Bound propfrty nbmf for <dodf>rowHfigit</dodf>. */
    publid finbl stbtid String        ROW_HEIGHT_PROPERTY = "rowHfigit";
    publid finbl stbtid String        ROW_HEIGHT_PROPERTY = "rowHfigit";
    publid finbl stbtid String        ROW_HEIGHT_PROPERTY = "rowHfigit";
    publid finbl stbtid String        ROW_HEIGHT_PROPERTY = "rowHfigit";
    publid finbl stbtid String        ROW_HEIGHT_PROPERTY = "rowHfigit";
    /** Bound propfrty nbmf for <dodf>dfllEditor</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllEditor</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllEditor</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllEditor</dodf>. */
    /** Bound propfrty nbmf for <dodf>dfllEditor</dodf>. */
    publid finbl stbtid String        CELL_EDITOR_PROPERTY = "dfllEditor";
    publid finbl stbtid String        CELL_EDITOR_PROPERTY = "dfllEditor";
    publid finbl stbtid String        CELL_EDITOR_PROPERTY = "dfllEditor";
    publid finbl stbtid String        CELL_EDITOR_PROPERTY = "dfllEditor";
    publid finbl stbtid String        CELL_EDITOR_PROPERTY = "dfllEditor";
    /** Bound propfrty nbmf for <dodf>fditbblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>fditbblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>fditbblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>fditbblf</dodf>. */
    /** Bound propfrty nbmf for <dodf>fditbblf</dodf>. */
    publid finbl stbtid String        EDITABLE_PROPERTY = "fditbblf";
    publid finbl stbtid String        EDITABLE_PROPERTY = "fditbblf";
    publid finbl stbtid String        EDITABLE_PROPERTY = "fditbblf";
    publid finbl stbtid String        EDITABLE_PROPERTY = "fditbblf";
    publid finbl stbtid String        EDITABLE_PROPERTY = "fditbblf";
    /** Bound propfrty nbmf for <dodf>lbrgfModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>lbrgfModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>lbrgfModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>lbrgfModfl</dodf>. */
    /** Bound propfrty nbmf for <dodf>lbrgfModfl</dodf>. */
    publid finbl stbtid String        LARGE_MODEL_PROPERTY = "lbrgfModfl";
    publid finbl stbtid String        LARGE_MODEL_PROPERTY = "lbrgfModfl";
    publid finbl stbtid String        LARGE_MODEL_PROPERTY = "lbrgfModfl";
    publid finbl stbtid String        LARGE_MODEL_PROPERTY = "lbrgfModfl";
    publid finbl stbtid String        LARGE_MODEL_PROPERTY = "lbrgfModfl";
    /** Bound propfrty nbmf for sflfdtionModfl. */
    /** Bound propfrty nbmf for sflfdtionModfl. */
    /** Bound propfrty nbmf for sflfdtionModfl. */
    /** Bound propfrty nbmf for sflfdtionModfl. */
    /** Bound propfrty nbmf for sflfdtionModfl. */
    publid finbl stbtid String        SELECTION_MODEL_PROPERTY = "sflfdtionModfl";
    publid finbl stbtid String        SELECTION_MODEL_PROPERTY = "sflfdtionModfl";
    publid finbl stbtid String        SELECTION_MODEL_PROPERTY = "sflfdtionModfl";
    publid finbl stbtid String        SELECTION_MODEL_PROPERTY = "sflfdtionModfl";
    publid finbl stbtid String        SELECTION_MODEL_PROPERTY = "sflfdtionModfl";
    /** Bound propfrty nbmf for <dodf>visiblfRowCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>visiblfRowCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>visiblfRowCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>visiblfRowCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>visiblfRowCount</dodf>. */
    publid finbl stbtid String        VISIBLE_ROW_COUNT_PROPERTY = "visiblfRowCount";
    publid finbl stbtid String        VISIBLE_ROW_COUNT_PROPERTY = "visiblfRowCount";
    publid finbl stbtid String        VISIBLE_ROW_COUNT_PROPERTY = "visiblfRowCount";
    publid finbl stbtid String        VISIBLE_ROW_COUNT_PROPERTY = "visiblfRowCount";
    publid finbl stbtid String        VISIBLE_ROW_COUNT_PROPERTY = "visiblfRowCount";
    /** Bound propfrty nbmf for <dodf>mfssbgfsStopCfllEditing</dodf>. */
    /** Bound propfrty nbmf for <dodf>mfssbgfsStopCfllEditing</dodf>. */
    /** Bound propfrty nbmf for <dodf>mfssbgfsStopCfllEditing</dodf>. */
    /** Bound propfrty nbmf for <dodf>mfssbgfsStopCfllEditing</dodf>. */
    /** Bound propfrty nbmf for <dodf>mfssbgfsStopCfllEditing</dodf>. */
    publid finbl stbtid String        INVOKES_STOP_CELL_EDITING_PROPERTY = "invokfsStopCfllEditing";
    publid finbl stbtid String        INVOKES_STOP_CELL_EDITING_PROPERTY = "invokfsStopCfllEditing";
    publid finbl stbtid String        INVOKES_STOP_CELL_EDITING_PROPERTY = "invokfsStopCfllEditing";
    publid finbl stbtid String        INVOKES_STOP_CELL_EDITING_PROPERTY = "invokfsStopCfllEditing";
    publid finbl stbtid String        INVOKES_STOP_CELL_EDITING_PROPERTY = "invokfsStopCfllEditing";
    /** Bound propfrty nbmf for <dodf>sdrollsOnExpbnd</dodf>. */
    /** Bound propfrty nbmf for <dodf>sdrollsOnExpbnd</dodf>. */
    /** Bound propfrty nbmf for <dodf>sdrollsOnExpbnd</dodf>. */
    /** Bound propfrty nbmf for <dodf>sdrollsOnExpbnd</dodf>. */
    /** Bound propfrty nbmf for <dodf>sdrollsOnExpbnd</dodf>. */
    publid finbl stbtid String        SCROLLS_ON_EXPAND_PROPERTY = "sdrollsOnExpbnd";
    publid finbl stbtid String        SCROLLS_ON_EXPAND_PROPERTY = "sdrollsOnExpbnd";
    publid finbl stbtid String        SCROLLS_ON_EXPAND_PROPERTY = "sdrollsOnExpbnd";
    publid finbl stbtid String        SCROLLS_ON_EXPAND_PROPERTY = "sdrollsOnExpbnd";
    publid finbl stbtid String        SCROLLS_ON_EXPAND_PROPERTY = "sdrollsOnExpbnd";
    /** Bound propfrty nbmf for <dodf>togglfClidkCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>togglfClidkCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>togglfClidkCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>togglfClidkCount</dodf>. */
    /** Bound propfrty nbmf for <dodf>togglfClidkCount</dodf>. */
    publid finbl stbtid String        TOGGLE_CLICK_COUNT_PROPERTY = "togglfClidkCount";
    publid finbl stbtid String        TOGGLE_CLICK_COUNT_PROPERTY = "togglfClidkCount";
    publid finbl stbtid String        TOGGLE_CLICK_COUNT_PROPERTY = "togglfClidkCount";
    publid finbl stbtid String        TOGGLE_CLICK_COUNT_PROPERTY = "togglfClidkCount";
    publid finbl stbtid String        TOGGLE_CLICK_COUNT_PROPERTY = "togglfClidkCount";
    /** Bound propfrty nbmf for <dodf>lfbdSflfdtionPbti</dodf>.
    /** Bound propfrty nbmf for <dodf>lfbdSflfdtionPbti</dodf>.
    /** Bound propfrty nbmf for <dodf>lfbdSflfdtionPbti</dodf>.
    /** Bound propfrty nbmf for <dodf>lfbdSflfdtionPbti</dodf>.
    /** Bound propfrty nbmf for <dodf>lfbdSflfdtionPbti</dodf>.
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
    publid finbl stbtid String        LEAD_SELECTION_PATH_PROPERTY = "lfbdSflfdtionPbti";
    publid finbl stbtid String        LEAD_SELECTION_PATH_PROPERTY = "lfbdSflfdtionPbti";
    publid finbl stbtid String        LEAD_SELECTION_PATH_PROPERTY = "lfbdSflfdtionPbti";
    publid finbl stbtid String        LEAD_SELECTION_PATH_PROPERTY = "lfbdSflfdtionPbti";
    publid finbl stbtid String        LEAD_SELECTION_PATH_PROPERTY = "lfbdSflfdtionPbti";
    /** Bound propfrty nbmf for bndior sflfdtion pbti.
    /** Bound propfrty nbmf for bndior sflfdtion pbti.
    /** Bound propfrty nbmf for bndior sflfdtion pbti.
    /** Bound propfrty nbmf for bndior sflfdtion pbti.
    /** Bound propfrty nbmf for bndior sflfdtion pbti.
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
    publid finbl stbtid String        ANCHOR_SELECTION_PATH_PROPERTY = "bndiorSflfdtionPbti";
    publid finbl stbtid String        ANCHOR_SELECTION_PATH_PROPERTY = "bndiorSflfdtionPbti";
    publid finbl stbtid String        ANCHOR_SELECTION_PATH_PROPERTY = "bndiorSflfdtionPbti";
    publid finbl stbtid String        ANCHOR_SELECTION_PATH_PROPERTY = "bndiorSflfdtionPbti";
    publid finbl stbtid String        ANCHOR_SELECTION_PATH_PROPERTY = "bndiorSflfdtionPbti";
    /** Bound propfrty nbmf for fxpbnds sflfdtfd pbtis propfrty
    /** Bound propfrty nbmf for fxpbnds sflfdtfd pbtis propfrty
    /** Bound propfrty nbmf for fxpbnds sflfdtfd pbtis propfrty
    /** Bound propfrty nbmf for fxpbnds sflfdtfd pbtis propfrty
    /** Bound propfrty nbmf for fxpbnds sflfdtfd pbtis propfrty
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
     * @sindf 1.3 */
    publid finbl stbtid String        EXPANDS_SELECTED_PATHS_PROPERTY = "fxpbndsSflfdtfdPbtis";
    publid finbl stbtid String        EXPANDS_SELECTED_PATHS_PROPERTY = "fxpbndsSflfdtfdPbtis";
    publid finbl stbtid String        EXPANDS_SELECTED_PATHS_PROPERTY = "fxpbndsSflfdtfdPbtis";
    publid finbl stbtid String        EXPANDS_SELECTED_PATHS_PROPERTY = "fxpbndsSflfdtfdPbtis";
    publid finbl stbtid String        EXPANDS_SELECTED_PATHS_PROPERTY = "fxpbndsSflfdtfdPbtis";










    /**
    /**
    /**
    /**
    /**
     * Crfbtfs bnd rfturns b sbmplf <dodf>TrffModfl</dodf>.
     * Crfbtfs bnd rfturns b sbmplf <dodf>TrffModfl</dodf>.
     * Crfbtfs bnd rfturns b sbmplf <dodf>TrffModfl</dodf>.
     * Crfbtfs bnd rfturns b sbmplf <dodf>TrffModfl</dodf>.
     * Crfbtfs bnd rfturns b sbmplf <dodf>TrffModfl</dodf>.
     * Usfd primbrily for bfbnbuildfrs to siow somftiing intfrfsting.
     * Usfd primbrily for bfbnbuildfrs to siow somftiing intfrfsting.
     * Usfd primbrily for bfbnbuildfrs to siow somftiing intfrfsting.
     * Usfd primbrily for bfbnbuildfrs to siow somftiing intfrfsting.
     * Usfd primbrily for bfbnbuildfrs to siow somftiing intfrfsting.
     *
     *
     *
     *
     *
     * @rfturn tif dffbult <dodf>TrffModfl</dodf>
     * @rfturn tif dffbult <dodf>TrffModfl</dodf>
     * @rfturn tif dffbult <dodf>TrffModfl</dodf>
     * @rfturn tif dffbult <dodf>TrffModfl</dodf>
     * @rfturn tif dffbult <dodf>TrffModfl</dodf>
     */
     */
     */
     */
     */
    protfdtfd stbtid TrffModfl gftDffbultTrffModfl() {
    protfdtfd stbtid TrffModfl gftDffbultTrffModfl() {
    protfdtfd stbtid TrffModfl gftDffbultTrffModfl() {
    protfdtfd stbtid TrffModfl gftDffbultTrffModfl() {
    protfdtfd stbtid TrffModfl gftDffbultTrffModfl() {
        DffbultMutbblfTrffNodf      root = nfw DffbultMutbblfTrffNodf("JTrff");
        DffbultMutbblfTrffNodf      root = nfw DffbultMutbblfTrffNodf("JTrff");
        DffbultMutbblfTrffNodf      root = nfw DffbultMutbblfTrffNodf("JTrff");
        DffbultMutbblfTrffNodf      root = nfw DffbultMutbblfTrffNodf("JTrff");
        DffbultMutbblfTrffNodf      root = nfw DffbultMutbblfTrffNodf("JTrff");
        DffbultMutbblfTrffNodf      pbrfnt;
        DffbultMutbblfTrffNodf      pbrfnt;
        DffbultMutbblfTrffNodf      pbrfnt;
        DffbultMutbblfTrffNodf      pbrfnt;
        DffbultMutbblfTrffNodf      pbrfnt;





        pbrfnt = nfw DffbultMutbblfTrffNodf("dolors");
        pbrfnt = nfw DffbultMutbblfTrffNodf("dolors");
        pbrfnt = nfw DffbultMutbblfTrffNodf("dolors");
        pbrfnt = nfw DffbultMutbblfTrffNodf("dolors");
        pbrfnt = nfw DffbultMutbblfTrffNodf("dolors");
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bluf"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bluf"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bluf"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bluf"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bluf"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("violft"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("violft"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("violft"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("violft"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("violft"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rfd"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rfd"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rfd"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rfd"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rfd"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("yfllow"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("yfllow"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("yfllow"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("yfllow"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("yfllow"));





        pbrfnt = nfw DffbultMutbblfTrffNodf("sports");
        pbrfnt = nfw DffbultMutbblfTrffNodf("sports");
        pbrfnt = nfw DffbultMutbblfTrffNodf("sports");
        pbrfnt = nfw DffbultMutbblfTrffNodf("sports");
        pbrfnt = nfw DffbultMutbblfTrffNodf("sports");
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbskftbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbskftbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbskftbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbskftbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbskftbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("soddfr"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("soddfr"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("soddfr"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("soddfr"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("soddfr"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("footbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("footbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("footbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("footbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("footbbll"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iodkfy"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iodkfy"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iodkfy"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iodkfy"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iodkfy"));





        pbrfnt = nfw DffbultMutbblfTrffNodf("food");
        pbrfnt = nfw DffbultMutbblfTrffNodf("food");
        pbrfnt = nfw DffbultMutbblfTrffNodf("food");
        pbrfnt = nfw DffbultMutbblfTrffNodf("food");
        pbrfnt = nfw DffbultMutbblfTrffNodf("food");
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        root.bdd(pbrfnt);
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iot dogs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iot dogs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iot dogs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iot dogs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("iot dogs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("pizzb"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("pizzb"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("pizzb"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("pizzb"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("pizzb"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rbvioli"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rbvioli"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rbvioli"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rbvioli"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("rbvioli"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbnbnbs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbnbnbs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbnbnbs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbnbnbs"));
        pbrfnt.bdd(nfw DffbultMutbblfTrffNodf("bbnbnbs"));
        rfturn nfw DffbultTrffModfl(root);
        rfturn nfw DffbultTrffModfl(root);
        rfturn nfw DffbultTrffModfl(root);
        rfturn nfw DffbultTrffModfl(root);
        rfturn nfw DffbultTrffModfl(root);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt.
     * Rfturns b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt.
     * Rfturns b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt.
     * Rfturns b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt.
     * Rfturns b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt.
     * If tif objfdt is:<ul>
     * If tif objfdt is:<ul>
     * If tif objfdt is:<ul>
     * If tif objfdt is:<ul>
     * If tif objfdt is:<ul>
     * <li>bn brrby of <dodf>Objfdt</dodf>s,
     * <li>bn brrby of <dodf>Objfdt</dodf>s,
     * <li>bn brrby of <dodf>Objfdt</dodf>s,
     * <li>bn brrby of <dodf>Objfdt</dodf>s,
     * <li>bn brrby of <dodf>Objfdt</dodf>s,
     * <li>b <dodf>Hbsitbblf</dodf>, or
     * <li>b <dodf>Hbsitbblf</dodf>, or
     * <li>b <dodf>Hbsitbblf</dodf>, or
     * <li>b <dodf>Hbsitbblf</dodf>, or
     * <li>b <dodf>Hbsitbblf</dodf>, or
     * <li>b <dodf>Vfdtor</dodf>
     * <li>b <dodf>Vfdtor</dodf>
     * <li>b <dodf>Vfdtor</dodf>
     * <li>b <dodf>Vfdtor</dodf>
     * <li>b <dodf>Vfdtor</dodf>
     * </ul>tifn b nfw root nodf is drfbtfd witi fbdi of tif indoming
     * </ul>tifn b nfw root nodf is drfbtfd witi fbdi of tif indoming
     * </ul>tifn b nfw root nodf is drfbtfd witi fbdi of tif indoming
     * </ul>tifn b nfw root nodf is drfbtfd witi fbdi of tif indoming
     * </ul>tifn b nfw root nodf is drfbtfd witi fbdi of tif indoming
     * objfdts bs diildrfn. Otifrwisf, b nfw root is drfbtfd witi
     * objfdts bs diildrfn. Otifrwisf, b nfw root is drfbtfd witi
     * objfdts bs diildrfn. Otifrwisf, b nfw root is drfbtfd witi
     * objfdts bs diildrfn. Otifrwisf, b nfw root is drfbtfd witi
     * objfdts bs diildrfn. Otifrwisf, b nfw root is drfbtfd witi
     * b vbluf of {@dodf "root"}.
     * b vbluf of {@dodf "root"}.
     * b vbluf of {@dodf "root"}.
     * b vbluf of {@dodf "root"}.
     * b vbluf of {@dodf "root"}.
     *
     *
     *
     *
     *
     * @pbrbm vbluf  tif <dodf>Objfdt</dodf> usfd bs tif foundbtion for
     * @pbrbm vbluf  tif <dodf>Objfdt</dodf> usfd bs tif foundbtion for
     * @pbrbm vbluf  tif <dodf>Objfdt</dodf> usfd bs tif foundbtion for
     * @pbrbm vbluf  tif <dodf>Objfdt</dodf> usfd bs tif foundbtion for
     * @pbrbm vbluf  tif <dodf>Objfdt</dodf> usfd bs tif foundbtion for
     *          tif <dodf>TrffModfl</dodf>
     *          tif <dodf>TrffModfl</dodf>
     *          tif <dodf>TrffModfl</dodf>
     *          tif <dodf>TrffModfl</dodf>
     *          tif <dodf>TrffModfl</dodf>
     * @rfturn b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt
     * @rfturn b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt
     * @rfturn b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt
     * @rfturn b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt
     * @rfturn b <dodf>TrffModfl</dodf> wrbpping tif spfdififd objfdt
     */
     */
     */
     */
     */
    protfdtfd stbtid TrffModfl drfbtfTrffModfl(Objfdt vbluf) {
    protfdtfd stbtid TrffModfl drfbtfTrffModfl(Objfdt vbluf) {
    protfdtfd stbtid TrffModfl drfbtfTrffModfl(Objfdt vbluf) {
    protfdtfd stbtid TrffModfl drfbtfTrffModfl(Objfdt vbluf) {
    protfdtfd stbtid TrffModfl drfbtfTrffModfl(Objfdt vbluf) {
        DffbultMutbblfTrffNodf           root;
        DffbultMutbblfTrffNodf           root;
        DffbultMutbblfTrffNodf           root;
        DffbultMutbblfTrffNodf           root;
        DffbultMutbblfTrffNodf           root;





        if((vbluf instbndfof Objfdt[]) || (vbluf instbndfof Hbsitbblf) ||
        if((vbluf instbndfof Objfdt[]) || (vbluf instbndfof Hbsitbblf) ||
        if((vbluf instbndfof Objfdt[]) || (vbluf instbndfof Hbsitbblf) ||
        if((vbluf instbndfof Objfdt[]) || (vbluf instbndfof Hbsitbblf) ||
        if((vbluf instbndfof Objfdt[]) || (vbluf instbndfof Hbsitbblf) ||
           (vbluf instbndfof Vfdtor)) {
           (vbluf instbndfof Vfdtor)) {
           (vbluf instbndfof Vfdtor)) {
           (vbluf instbndfof Vfdtor)) {
           (vbluf instbndfof Vfdtor)) {
            root = nfw DffbultMutbblfTrffNodf("root");
            root = nfw DffbultMutbblfTrffNodf("root");
            root = nfw DffbultMutbblfTrffNodf("root");
            root = nfw DffbultMutbblfTrffNodf("root");
            root = nfw DffbultMutbblfTrffNodf("root");
            DynbmidUtilTrffNodf.drfbtfCiildrfn(root, vbluf);
            DynbmidUtilTrffNodf.drfbtfCiildrfn(root, vbluf);
            DynbmidUtilTrffNodf.drfbtfCiildrfn(root, vbluf);
            DynbmidUtilTrffNodf.drfbtfCiildrfn(root, vbluf);
            DynbmidUtilTrffNodf.drfbtfCiildrfn(root, vbluf);
        }
        }
        }
        }
        }
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            root = nfw DynbmidUtilTrffNodf("root", vbluf);
            root = nfw DynbmidUtilTrffNodf("root", vbluf);
            root = nfw DynbmidUtilTrffNodf("root", vbluf);
            root = nfw DynbmidUtilTrffNodf("root", vbluf);
            root = nfw DynbmidUtilTrffNodf("root", vbluf);
        }
        }
        }
        }
        }
        rfturn nfw DffbultTrffModfl(root, fblsf);
        rfturn nfw DffbultTrffModfl(root, fblsf);
        rfturn nfw DffbultTrffModfl(root, fblsf);
        rfturn nfw DffbultTrffModfl(root, fblsf);
        rfturn nfw DffbultTrffModfl(root, fblsf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> witi b sbmplf modfl.
     * Rfturns b <dodf>JTrff</dodf> witi b sbmplf modfl.
     * Rfturns b <dodf>JTrff</dodf> witi b sbmplf modfl.
     * Rfturns b <dodf>JTrff</dodf> witi b sbmplf modfl.
     * Rfturns b <dodf>JTrff</dodf> witi b sbmplf modfl.
     * Tif dffbult modfl usfd by tif trff dffinfs b lfbf nodf bs bny nodf
     * Tif dffbult modfl usfd by tif trff dffinfs b lfbf nodf bs bny nodf
     * Tif dffbult modfl usfd by tif trff dffinfs b lfbf nodf bs bny nodf
     * Tif dffbult modfl usfd by tif trff dffinfs b lfbf nodf bs bny nodf
     * Tif dffbult modfl usfd by tif trff dffinfs b lfbf nodf bs bny nodf
     * witiout diildrfn.
     * witiout diildrfn.
     * witiout diildrfn.
     * witiout diildrfn.
     * witiout diildrfn.
     *
     *
     *
     *
     *
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff() {
    publid JTrff() {
    publid JTrff() {
    publid JTrff() {
    publid JTrff() {
        tiis(gftDffbultTrffModfl());
        tiis(gftDffbultTrffModfl());
        tiis(gftDffbultTrffModfl());
        tiis(gftDffbultTrffModfl());
        tiis(gftDffbultTrffModfl());
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif
     * spfdififd brrby bs tif
     * spfdififd brrby bs tif
     * spfdififd brrby bs tif
     * spfdififd brrby bs tif
     * spfdififd brrby bs tif
     * diild of b nfw root nodf wiidi is not displbyfd.
     * diild of b nfw root nodf wiidi is not displbyfd.
     * diild of b nfw root nodf wiidi is not displbyfd.
     * diild of b nfw root nodf wiidi is not displbyfd.
     * diild of b nfw root nodf wiidi is not displbyfd.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout
     * diildrfn.
     * diildrfn.
     * diildrfn.
     * diildrfn.
     * diildrfn.
     *
     *
     *
     *
     *
     * @pbrbm vbluf  bn brrby of <dodf>Objfdt</dodf>s
     * @pbrbm vbluf  bn brrby of <dodf>Objfdt</dodf>s
     * @pbrbm vbluf  bn brrby of <dodf>Objfdt</dodf>s
     * @pbrbm vbluf  bn brrby of <dodf>Objfdt</dodf>s
     * @pbrbm vbluf  bn brrby of <dodf>Objfdt</dodf>s
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff(Objfdt[] vbluf) {
    publid JTrff(Objfdt[] vbluf) {
    publid JTrff(Objfdt[] vbluf) {
    publid JTrff(Objfdt[] vbluf) {
    publid JTrff(Objfdt[] vbluf) {
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi fbdi flfmfnt of tif spfdififd
     * <dodf>Vfdtor</dodf> bs tif
     * <dodf>Vfdtor</dodf> bs tif
     * <dodf>Vfdtor</dodf> bs tif
     * <dodf>Vfdtor</dodf> bs tif
     * <dodf>Vfdtor</dodf> bs tif
     * diild of b nfw root nodf wiidi is not displbyfd. By dffbult, tif
     * diild of b nfw root nodf wiidi is not displbyfd. By dffbult, tif
     * diild of b nfw root nodf wiidi is not displbyfd. By dffbult, tif
     * diild of b nfw root nodf wiidi is not displbyfd. By dffbult, tif
     * diild of b nfw root nodf wiidi is not displbyfd. By dffbult, tif
     * trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     *
     *
     *
     *
     *
     * @pbrbm vbluf  b <dodf>Vfdtor</dodf>
     * @pbrbm vbluf  b <dodf>Vfdtor</dodf>
     * @pbrbm vbluf  b <dodf>Vfdtor</dodf>
     * @pbrbm vbluf  b <dodf>Vfdtor</dodf>
     * @pbrbm vbluf  b <dodf>Vfdtor</dodf>
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff(Vfdtor<?> vbluf) {
    publid JTrff(Vfdtor<?> vbluf) {
    publid JTrff(Vfdtor<?> vbluf) {
    publid JTrff(Vfdtor<?> vbluf) {
    publid JTrff(Vfdtor<?> vbluf) {
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> drfbtfd from b <dodf>Hbsitbblf</dodf>
     * Rfturns b <dodf>JTrff</dodf> drfbtfd from b <dodf>Hbsitbblf</dodf>
     * Rfturns b <dodf>JTrff</dodf> drfbtfd from b <dodf>Hbsitbblf</dodf>
     * Rfturns b <dodf>JTrff</dodf> drfbtfd from b <dodf>Hbsitbblf</dodf>
     * Rfturns b <dodf>JTrff</dodf> drfbtfd from b <dodf>Hbsitbblf</dodf>
     * wiidi dofs not displby witi root.
     * wiidi dofs not displby witi root.
     * wiidi dofs not displby witi root.
     * wiidi dofs not displby witi root.
     * wiidi dofs not displby witi root.
     * Ebdi vbluf-iblf of tif kfy/vbluf pbirs in tif <dodf>HbsiTbblf</dodf>
     * Ebdi vbluf-iblf of tif kfy/vbluf pbirs in tif <dodf>HbsiTbblf</dodf>
     * Ebdi vbluf-iblf of tif kfy/vbluf pbirs in tif <dodf>HbsiTbblf</dodf>
     * Ebdi vbluf-iblf of tif kfy/vbluf pbirs in tif <dodf>HbsiTbblf</dodf>
     * Ebdi vbluf-iblf of tif kfy/vbluf pbirs in tif <dodf>HbsiTbblf</dodf>
     * bfdomfs b diild of tif nfw root nodf. By dffbult, tif trff dffinfs
     * bfdomfs b diild of tif nfw root nodf. By dffbult, tif trff dffinfs
     * bfdomfs b diild of tif nfw root nodf. By dffbult, tif trff dffinfs
     * bfdomfs b diild of tif nfw root nodf. By dffbult, tif trff dffinfs
     * bfdomfs b diild of tif nfw root nodf. By dffbult, tif trff dffinfs
     * b lfbf nodf bs bny nodf witiout diildrfn.
     * b lfbf nodf bs bny nodf witiout diildrfn.
     * b lfbf nodf bs bny nodf witiout diildrfn.
     * b lfbf nodf bs bny nodf witiout diildrfn.
     * b lfbf nodf bs bny nodf witiout diildrfn.
     *
     *
     *
     *
     *
     * @pbrbm vbluf  b <dodf>Hbsitbblf</dodf>
     * @pbrbm vbluf  b <dodf>Hbsitbblf</dodf>
     * @pbrbm vbluf  b <dodf>Hbsitbblf</dodf>
     * @pbrbm vbluf  b <dodf>Hbsitbblf</dodf>
     * @pbrbm vbluf  b <dodf>Hbsitbblf</dodf>
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff(Hbsitbblf<?,?> vbluf) {
    publid JTrff(Hbsitbblf<?,?> vbluf) {
    publid JTrff(Hbsitbblf<?,?> vbluf) {
    publid JTrff(Hbsitbblf<?,?> vbluf) {
    publid JTrff(Hbsitbblf<?,?> vbluf) {
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis(drfbtfTrffModfl(vbluf));
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftRootVisiblf(fblsf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        tiis.sftSiowsRootHbndlfs(truf);
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
        fxpbndRoot();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd
     * <dodf>TrffNodf</dodf> bs its root,
     * <dodf>TrffNodf</dodf> bs its root,
     * <dodf>TrffNodf</dodf> bs its root,
     * <dodf>TrffNodf</dodf> bs its root,
     * <dodf>TrffNodf</dodf> bs its root,
     * wiidi displbys tif root nodf.
     * wiidi displbys tif root nodf.
     * wiidi displbys tif root nodf.
     * wiidi displbys tif root nodf.
     * wiidi displbys tif root nodf.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     * By dffbult, tif trff dffinfs b lfbf nodf bs bny nodf witiout diildrfn.
     *
     *
     *
     *
     *
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff(TrffNodf root) {
    publid JTrff(TrffNodf root) {
    publid JTrff(TrffNodf root) {
    publid JTrff(TrffNodf root) {
    publid JTrff(TrffNodf root) {
        tiis(root, fblsf);
        tiis(root, fblsf);
        tiis(root, fblsf);
        tiis(root, fblsf);
        tiis(root, fblsf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd <dodf>TrffNodf</dodf>
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd <dodf>TrffNodf</dodf>
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd <dodf>TrffNodf</dodf>
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd <dodf>TrffNodf</dodf>
     * Rfturns b <dodf>JTrff</dodf> witi tif spfdififd <dodf>TrffNodf</dodf>
     * bs its root, wiidi
     * bs its root, wiidi
     * bs its root, wiidi
     * bs its root, wiidi
     * bs its root, wiidi
     * displbys tif root nodf bnd wiidi dfdidfs wiftifr b nodf is b
     * displbys tif root nodf bnd wiidi dfdidfs wiftifr b nodf is b
     * displbys tif root nodf bnd wiidi dfdidfs wiftifr b nodf is b
     * displbys tif root nodf bnd wiidi dfdidfs wiftifr b nodf is b
     * displbys tif root nodf bnd wiidi dfdidfs wiftifr b nodf is b
     * lfbf nodf in tif spfdififd mbnnfr.
     * lfbf nodf in tif spfdififd mbnnfr.
     * lfbf nodf in tif spfdififd mbnnfr.
     * lfbf nodf in tif spfdififd mbnnfr.
     * lfbf nodf in tif spfdififd mbnnfr.
     *
     *
     *
     *
     *
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm root  b <dodf>TrffNodf</dodf> objfdt
     * @pbrbm bsksAllowsCiildrfn  if fblsf, bny nodf witiout diildrfn is b
     * @pbrbm bsksAllowsCiildrfn  if fblsf, bny nodf witiout diildrfn is b
     * @pbrbm bsksAllowsCiildrfn  if fblsf, bny nodf witiout diildrfn is b
     * @pbrbm bsksAllowsCiildrfn  if fblsf, bny nodf witiout diildrfn is b
     * @pbrbm bsksAllowsCiildrfn  if fblsf, bny nodf witiout diildrfn is b
     *              lfbf nodf; if truf, only nodfs tibt do not bllow
     *              lfbf nodf; if truf, only nodfs tibt do not bllow
     *              lfbf nodf; if truf, only nodfs tibt do not bllow
     *              lfbf nodf; if truf, only nodfs tibt do not bllow
     *              lfbf nodf; if truf, only nodfs tibt do not bllow
     *              diildrfn brf lfbf nodfs
     *              diildrfn brf lfbf nodfs
     *              diildrfn brf lfbf nodfs
     *              diildrfn brf lfbf nodfs
     *              diildrfn brf lfbf nodfs
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     * @sff DffbultTrffModfl#bsksAllowsCiildrfn
     */
     */
     */
     */
     */
    publid JTrff(TrffNodf root, boolfbn bsksAllowsCiildrfn) {
    publid JTrff(TrffNodf root, boolfbn bsksAllowsCiildrfn) {
    publid JTrff(TrffNodf root, boolfbn bsksAllowsCiildrfn) {
    publid JTrff(TrffNodf root, boolfbn bsksAllowsCiildrfn) {
    publid JTrff(TrffNodf root, boolfbn bsksAllowsCiildrfn) {
        tiis(nfw DffbultTrffModfl(root, bsksAllowsCiildrfn));
        tiis(nfw DffbultTrffModfl(root, bsksAllowsCiildrfn));
        tiis(nfw DffbultTrffModfl(root, bsksAllowsCiildrfn));
        tiis(nfw DffbultTrffModfl(root, bsksAllowsCiildrfn));
        tiis(nfw DffbultTrffModfl(root, bsksAllowsCiildrfn));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn instbndf of <dodf>JTrff</dodf> wiidi displbys tif root nodf
     * Rfturns bn instbndf of <dodf>JTrff</dodf> wiidi displbys tif root nodf
     * Rfturns bn instbndf of <dodf>JTrff</dodf> wiidi displbys tif root nodf
     * Rfturns bn instbndf of <dodf>JTrff</dodf> wiidi displbys tif root nodf
     * Rfturns bn instbndf of <dodf>JTrff</dodf> wiidi displbys tif root nodf
     * -- tif trff is drfbtfd using tif spfdififd dbtb modfl.
     * -- tif trff is drfbtfd using tif spfdififd dbtb modfl.
     * -- tif trff is drfbtfd using tif spfdififd dbtb modfl.
     * -- tif trff is drfbtfd using tif spfdififd dbtb modfl.
     * -- tif trff is drfbtfd using tif spfdififd dbtb modfl.
     *
     *
     *
     *
     *
     * @pbrbm nfwModfl  tif <dodf>TrffModfl</dodf> to usf bs tif dbtb modfl
     * @pbrbm nfwModfl  tif <dodf>TrffModfl</dodf> to usf bs tif dbtb modfl
     * @pbrbm nfwModfl  tif <dodf>TrffModfl</dodf> to usf bs tif dbtb modfl
     * @pbrbm nfwModfl  tif <dodf>TrffModfl</dodf> to usf bs tif dbtb modfl
     * @pbrbm nfwModfl  tif <dodf>TrffModfl</dodf> to usf bs tif dbtb modfl
     */
     */
     */
     */
     */
    @ConstrudtorPropfrtifs({"modfl"})
    @ConstrudtorPropfrtifs({"modfl"})
    @ConstrudtorPropfrtifs({"modfl"})
    @ConstrudtorPropfrtifs({"modfl"})
    @ConstrudtorPropfrtifs({"modfl"})
    publid JTrff(TrffModfl nfwModfl) {
    publid JTrff(TrffModfl nfwModfl) {
    publid JTrff(TrffModfl nfwModfl) {
    publid JTrff(TrffModfl nfwModfl) {
    publid JTrff(TrffModfl nfwModfl) {
        supfr();
        supfr();
        supfr();
        supfr();
        supfr();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        togglfClidkCount = 2;
        togglfClidkCount = 2;
        togglfClidkCount = 2;
        togglfClidkCount = 2;
        togglfClidkCount = 2;
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);
        sftLbyout(null);
        rowHfigit = 16;
        rowHfigit = 16;
        rowHfigit = 16;
        rowHfigit = 16;
        rowHfigit = 16;
        visiblfRowCount = 20;
        visiblfRowCount = 20;
        visiblfRowCount = 20;
        visiblfRowCount = 20;
        visiblfRowCount = 20;
        rootVisiblf = truf;
        rootVisiblf = truf;
        rootVisiblf = truf;
        rootVisiblf = truf;
        rootVisiblf = truf;
        sflfdtionModfl = nfw DffbultTrffSflfdtionModfl();
        sflfdtionModfl = nfw DffbultTrffSflfdtionModfl();
        sflfdtionModfl = nfw DffbultTrffSflfdtionModfl();
        sflfdtionModfl = nfw DffbultTrffSflfdtionModfl();
        sflfdtionModfl = nfw DffbultTrffSflfdtionModfl();
        dfllRfndfrfr = null;
        dfllRfndfrfr = null;
        dfllRfndfrfr = null;
        dfllRfndfrfr = null;
        dfllRfndfrfr = null;
        sdrollsOnExpbnd = truf;
        sdrollsOnExpbnd = truf;
        sdrollsOnExpbnd = truf;
        sdrollsOnExpbnd = truf;
        sdrollsOnExpbnd = truf;
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        sftOpbquf(truf);
        fxpbndsSflfdtfdPbtis = truf;
        fxpbndsSflfdtfdPbtis = truf;
        fxpbndsSflfdtfdPbtis = truf;
        fxpbndsSflfdtfdPbtis = truf;
        fxpbndsSflfdtfdPbtis = truf;
        updbtfUI();
        updbtfUI();
        updbtfUI();
        updbtfUI();
        updbtfUI();
        sftModfl(nfwModfl);
        sftModfl(nfwModfl);
        sftModfl(nfwModfl);
        sftModfl(nfwModfl);
        sftModfl(nfwModfl);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Rfturns tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TrffUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TrffUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TrffUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TrffUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     * @rfturn tif <dodf>TrffUI</dodf> objfdt tibt rfndfrs tiis domponfnt
     */
     */
     */
     */
     */
    publid TrffUI gftUI() {
    publid TrffUI gftUI() {
    publid TrffUI gftUI() {
    publid TrffUI gftUI() {
    publid TrffUI gftUI() {
        rfturn (TrffUI)ui;
        rfturn (TrffUI)ui;
        rfturn (TrffUI)ui;
        rfturn (TrffUI)ui;
        rfturn (TrffUI)ui;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * Sfts tif L&bmp;F objfdt tibt rfndfrs tiis domponfnt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm ui  tif <dodf>TrffUI</dodf> L&bmp;F objfdt
     * @pbrbm ui  tif <dodf>TrffUI</dodf> L&bmp;F objfdt
     * @pbrbm ui  tif <dodf>TrffUI</dodf> L&bmp;F objfdt
     * @pbrbm ui  tif <dodf>TrffUI</dodf> L&bmp;F objfdt
     * @pbrbm ui  tif <dodf>TrffUI</dodf> L&bmp;F objfdt
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *       iiddfn: truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *    bttributf: visublUpdbtf truf
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     *  dfsdription: Tif UI objfdt tibt implfmfnts tif Componfnt's LookAndFffl.
     */
     */
     */
     */
     */
    publid void sftUI(TrffUI ui) {
    publid void sftUI(TrffUI ui) {
    publid void sftUI(TrffUI ui) {
    publid void sftUI(TrffUI ui) {
    publid void sftUI(TrffUI ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
        if (tiis.ui != ui) {
            sfttingUI = truf;
            sfttingUI = truf;
            sfttingUI = truf;
            sfttingUI = truf;
            sfttingUI = truf;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            try {
            try {
            try {
            try {
            try {
                supfr.sftUI(ui);
                supfr.sftUI(ui);
                supfr.sftUI(ui);
                supfr.sftUI(ui);
                supfr.sftUI(ui);
            }
            }
            }
            }
            }
            finblly {
            finblly {
            finblly {
            finblly {
            finblly {
                sfttingUI = fblsf;
                sfttingUI = fblsf;
                sfttingUI = fblsf;
                sfttingUI = fblsf;
                sfttingUI = fblsf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Notifidbtion from tif <dodf>UIMbnbgfr</dodf> tibt tif L&bmp;F ibs dibngfd.
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * Rfplbdfs tif durrfnt UI objfdt witi tif lbtfst vfrsion from tif
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     * <dodf>UIMbnbgfr</dodf>.
     *
     *
     *
     *
     *
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     * @sff JComponfnt#updbtfUI
     */
     */
     */
     */
     */
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
    publid void updbtfUI() {
        sftUI((TrffUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TrffUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TrffUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TrffUI)UIMbnbgfr.gftUI(tiis));
        sftUI((TrffUI)UIMbnbgfr.gftUI(tiis));





        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllRfndfrfr());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllRfndfrfr());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllRfndfrfr());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllRfndfrfr());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllRfndfrfr());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllEditor());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllEditor());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllEditor());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllEditor());
        SwingUtilitifs.updbtfRfndfrfrOrEditorUI(gftCfllEditor());
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Rfturns tif nbmf of tif L&bmp;F dlbss tibt rfndfrs tiis domponfnt.
     * Rfturns tif nbmf of tif L&bmp;F dlbss tibt rfndfrs tiis domponfnt.
     * Rfturns tif nbmf of tif L&bmp;F dlbss tibt rfndfrs tiis domponfnt.
     * Rfturns tif nbmf of tif L&bmp;F dlbss tibt rfndfrs tiis domponfnt.
     * Rfturns tif nbmf of tif L&bmp;F dlbss tibt rfndfrs tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif string "TrffUI"
     * @rfturn tif string "TrffUI"
     * @rfturn tif string "TrffUI"
     * @rfturn tif string "TrffUI"
     * @rfturn tif string "TrffUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     * @sff UIDffbults#gftUI
     */
     */
     */
     */
     */
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
    publid String gftUIClbssID() {
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
        rfturn uiClbssID;
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Rfturns tif durrfnt <dodf>TrffCfllRfndfrfr</dodf>
     * Rfturns tif durrfnt <dodf>TrffCfllRfndfrfr</dodf>
     * Rfturns tif durrfnt <dodf>TrffCfllRfndfrfr</dodf>
     * Rfturns tif durrfnt <dodf>TrffCfllRfndfrfr</dodf>
     * Rfturns tif durrfnt <dodf>TrffCfllRfndfrfr</dodf>
     *  tibt is rfndfring fbdi dfll.
     *  tibt is rfndfring fbdi dfll.
     *  tibt is rfndfring fbdi dfll.
     *  tibt is rfndfring fbdi dfll.
     *  tibt is rfndfring fbdi dfll.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TrffCfllRfndfrfr</dodf> tibt is rfndfring fbdi dfll
     * @rfturn tif <dodf>TrffCfllRfndfrfr</dodf> tibt is rfndfring fbdi dfll
     * @rfturn tif <dodf>TrffCfllRfndfrfr</dodf> tibt is rfndfring fbdi dfll
     * @rfturn tif <dodf>TrffCfllRfndfrfr</dodf> tibt is rfndfring fbdi dfll
     * @rfturn tif <dodf>TrffCfllRfndfrfr</dodf> tibt is rfndfring fbdi dfll
     */
     */
     */
     */
     */
    publid TrffCfllRfndfrfr gftCfllRfndfrfr() {
    publid TrffCfllRfndfrfr gftCfllRfndfrfr() {
    publid TrffCfllRfndfrfr gftCfllRfndfrfr() {
    publid TrffCfllRfndfrfr gftCfllRfndfrfr() {
    publid TrffCfllRfndfrfr gftCfllRfndfrfr() {
        rfturn dfllRfndfrfr;
        rfturn dfllRfndfrfr;
        rfturn dfllRfndfrfr;
        rfturn dfllRfndfrfr;
        rfturn dfllRfndfrfr;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>TrffCfllRfndfrfr</dodf> tibt will bf usfd to
     * Sfts tif <dodf>TrffCfllRfndfrfr</dodf> tibt will bf usfd to
     * Sfts tif <dodf>TrffCfllRfndfrfr</dodf> tibt will bf usfd to
     * Sfts tif <dodf>TrffCfllRfndfrfr</dodf> tibt will bf usfd to
     * Sfts tif <dodf>TrffCfllRfndfrfr</dodf> tibt will bf usfd to
     * drbw fbdi dfll.
     * drbw fbdi dfll.
     * drbw fbdi dfll.
     * drbw fbdi dfll.
     * drbw fbdi dfll.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm x  tif <dodf>TrffCfllRfndfrfr</dodf> tibt is to rfndfr fbdi dfll
     * @pbrbm x  tif <dodf>TrffCfllRfndfrfr</dodf> tibt is to rfndfr fbdi dfll
     * @pbrbm x  tif <dodf>TrffCfllRfndfrfr</dodf> tibt is to rfndfr fbdi dfll
     * @pbrbm x  tif <dodf>TrffCfllRfndfrfr</dodf> tibt is to rfndfr fbdi dfll
     * @pbrbm x  tif <dodf>TrffCfllRfndfrfr</dodf> tibt is to rfndfr fbdi dfll
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif TrffCfllRfndfrfr tibt will bf usfd to drbw
     *  dfsdription: Tif TrffCfllRfndfrfr tibt will bf usfd to drbw
     *  dfsdription: Tif TrffCfllRfndfrfr tibt will bf usfd to drbw
     *  dfsdription: Tif TrffCfllRfndfrfr tibt will bf usfd to drbw
     *  dfsdription: Tif TrffCfllRfndfrfr tibt will bf usfd to drbw
     *               fbdi dfll.
     *               fbdi dfll.
     *               fbdi dfll.
     *               fbdi dfll.
     *               fbdi dfll.
     */
     */
     */
     */
     */
    publid void sftCfllRfndfrfr(TrffCfllRfndfrfr x) {
    publid void sftCfllRfndfrfr(TrffCfllRfndfrfr x) {
    publid void sftCfllRfndfrfr(TrffCfllRfndfrfr x) {
    publid void sftCfllRfndfrfr(TrffCfllRfndfrfr x) {
    publid void sftCfllRfndfrfr(TrffCfllRfndfrfr x) {
        TrffCfllRfndfrfr oldVbluf = dfllRfndfrfr;
        TrffCfllRfndfrfr oldVbluf = dfllRfndfrfr;
        TrffCfllRfndfrfr oldVbluf = dfllRfndfrfr;
        TrffCfllRfndfrfr oldVbluf = dfllRfndfrfr;
        TrffCfllRfndfrfr oldVbluf = dfllRfndfrfr;





        dfllRfndfrfr = x;
        dfllRfndfrfr = x;
        dfllRfndfrfr = x;
        dfllRfndfrfr = x;
        dfllRfndfrfr = x;
        firfPropfrtyCibngf(CELL_RENDERER_PROPERTY, oldVbluf, dfllRfndfrfr);
        firfPropfrtyCibngf(CELL_RENDERER_PROPERTY, oldVbluf, dfllRfndfrfr);
        firfPropfrtyCibngf(CELL_RENDERER_PROPERTY, oldVbluf, dfllRfndfrfr);
        firfPropfrtyCibngf(CELL_RENDERER_PROPERTY, oldVbluf, dfllRfndfrfr);
        firfPropfrtyCibngf(CELL_RENDERER_PROPERTY, oldVbluf, dfllRfndfrfr);
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
      * Dftfrminfs wiftifr tif trff is fditbblf. Firfs b propfrty
      * Dftfrminfs wiftifr tif trff is fditbblf. Firfs b propfrty
      * Dftfrminfs wiftifr tif trff is fditbblf. Firfs b propfrty
      * Dftfrminfs wiftifr tif trff is fditbblf. Firfs b propfrty
      * Dftfrminfs wiftifr tif trff is fditbblf. Firfs b propfrty
      * dibngf fvfnt if tif nfw sftting is difffrfnt from tif fxisting
      * dibngf fvfnt if tif nfw sftting is difffrfnt from tif fxisting
      * dibngf fvfnt if tif nfw sftting is difffrfnt from tif fxisting
      * dibngf fvfnt if tif nfw sftting is difffrfnt from tif fxisting
      * dibngf fvfnt if tif nfw sftting is difffrfnt from tif fxisting
      * sftting.
      * sftting.
      * sftting.
      * sftting.
      * sftting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
      *
      *
      *
      *
      *
      * @pbrbm flbg  b boolfbn vbluf, truf if tif trff is fditbblf
      * @pbrbm flbg  b boolfbn vbluf, truf if tif trff is fditbblf
      * @pbrbm flbg  b boolfbn vbluf, truf if tif trff is fditbblf
      * @pbrbm flbg  b boolfbn vbluf, truf if tif trff is fditbblf
      * @pbrbm flbg  b boolfbn vbluf, truf if tif trff is fditbblf
      * @bfbninfo
      * @bfbninfo
      * @bfbninfo
      * @bfbninfo
      * @bfbninfo
      *        bound: truf
      *        bound: truf
      *        bound: truf
      *        bound: truf
      *        bound: truf
      *  dfsdription: Wiftifr tif trff is fditbblf.
      *  dfsdription: Wiftifr tif trff is fditbblf.
      *  dfsdription: Wiftifr tif trff is fditbblf.
      *  dfsdription: Wiftifr tif trff is fditbblf.
      *  dfsdription: Wiftifr tif trff is fditbblf.
      */
      */
      */
      */
      */
    publid void sftEditbblf(boolfbn flbg) {
    publid void sftEditbblf(boolfbn flbg) {
    publid void sftEditbblf(boolfbn flbg) {
    publid void sftEditbblf(boolfbn flbg) {
    publid void sftEditbblf(boolfbn flbg) {
        boolfbn                 oldVbluf = tiis.fditbblf;
        boolfbn                 oldVbluf = tiis.fditbblf;
        boolfbn                 oldVbluf = tiis.fditbblf;
        boolfbn                 oldVbluf = tiis.fditbblf;
        boolfbn                 oldVbluf = tiis.fditbblf;





        tiis.fditbblf = flbg;
        tiis.fditbblf = flbg;
        tiis.fditbblf = flbg;
        tiis.fditbblf = flbg;
        tiis.fditbblf = flbg;
        firfPropfrtyCibngf(EDITABLE_PROPERTY, oldVbluf, flbg);
        firfPropfrtyCibngf(EDITABLE_PROPERTY, oldVbluf, flbg);
        firfPropfrtyCibngf(EDITABLE_PROPERTY, oldVbluf, flbg);
        firfPropfrtyCibngf(EDITABLE_PROPERTY, oldVbluf, flbg);
        firfPropfrtyCibngf(EDITABLE_PROPERTY, oldVbluf, flbg);
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
                AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                (oldVbluf ? AddfssiblfStbtf.EDITABLE : null),
                (oldVbluf ? AddfssiblfStbtf.EDITABLE : null),
                (oldVbluf ? AddfssiblfStbtf.EDITABLE : null),
                (oldVbluf ? AddfssiblfStbtf.EDITABLE : null),
                (oldVbluf ? AddfssiblfStbtf.EDITABLE : null),
                (flbg ? AddfssiblfStbtf.EDITABLE : null));
                (flbg ? AddfssiblfStbtf.EDITABLE : null));
                (flbg ? AddfssiblfStbtf.EDITABLE : null));
                (flbg ? AddfssiblfStbtf.EDITABLE : null));
                (flbg ? AddfssiblfStbtf.EDITABLE : null));
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif trff is fditbblf.
     * Rfturns truf if tif trff is fditbblf.
     * Rfturns truf if tif trff is fditbblf.
     * Rfturns truf if tif trff is fditbblf.
     * Rfturns truf if tif trff is fditbblf.
     *
     *
     *
     *
     *
     * @rfturn truf if tif trff is fditbblf
     * @rfturn truf if tif trff is fditbblf
     * @rfturn truf if tif trff is fditbblf
     * @rfturn truf if tif trff is fditbblf
     * @rfturn truf if tif trff is fditbblf
     */
     */
     */
     */
     */
    publid boolfbn isEditbblf() {
    publid boolfbn isEditbblf() {
    publid boolfbn isEditbblf() {
    publid boolfbn isEditbblf() {
    publid boolfbn isEditbblf() {
        rfturn fditbblf;
        rfturn fditbblf;
        rfturn fditbblf;
        rfturn fditbblf;
        rfturn fditbblf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif dfll fditor.  A <dodf>null</dodf> vbluf implifs tibt tif
     * Sfts tif dfll fditor.  A <dodf>null</dodf> vbluf implifs tibt tif
     * Sfts tif dfll fditor.  A <dodf>null</dodf> vbluf implifs tibt tif
     * Sfts tif dfll fditor.  A <dodf>null</dodf> vbluf implifs tibt tif
     * Sfts tif dfll fditor.  A <dodf>null</dodf> vbluf implifs tibt tif
     * trff dbnnot bf fditfd.  If tiis rfprfsfnts b dibngf in tif
     * trff dbnnot bf fditfd.  If tiis rfprfsfnts b dibngf in tif
     * trff dbnnot bf fditfd.  If tiis rfprfsfnts b dibngf in tif
     * trff dbnnot bf fditfd.  If tiis rfprfsfnts b dibngf in tif
     * trff dbnnot bf fditfd.  If tiis rfprfsfnts b dibngf in tif
     * <dodf>dfllEditor</dodf>, tif <dodf>propfrtyCibngf</dodf>
     * <dodf>dfllEditor</dodf>, tif <dodf>propfrtyCibngf</dodf>
     * <dodf>dfllEditor</dodf>, tif <dodf>propfrtyCibngf</dodf>
     * <dodf>dfllEditor</dodf>, tif <dodf>propfrtyCibngf</dodf>
     * <dodf>dfllEditor</dodf>, tif <dodf>propfrtyCibngf</dodf>
     * mftiod is invokfd on bll listfnfrs.
     * mftiod is invokfd on bll listfnfrs.
     * mftiod is invokfd on bll listfnfrs.
     * mftiod is invokfd on bll listfnfrs.
     * mftiod is invokfd on bll listfnfrs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm dfllEditor tif <dodf>TrffCfllEditor</dodf> to usf
     * @pbrbm dfllEditor tif <dodf>TrffCfllEditor</dodf> to usf
     * @pbrbm dfllEditor tif <dodf>TrffCfllEditor</dodf> to usf
     * @pbrbm dfllEditor tif <dodf>TrffCfllEditor</dodf> to usf
     * @pbrbm dfllEditor tif <dodf>TrffCfllEditor</dodf> to usf
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif dfll fditor. A null vbluf implifs tif trff
     *  dfsdription: Tif dfll fditor. A null vbluf implifs tif trff
     *  dfsdription: Tif dfll fditor. A null vbluf implifs tif trff
     *  dfsdription: Tif dfll fditor. A null vbluf implifs tif trff
     *  dfsdription: Tif dfll fditor. A null vbluf implifs tif trff
     *               dbnnot bf fditfd.
     *               dbnnot bf fditfd.
     *               dbnnot bf fditfd.
     *               dbnnot bf fditfd.
     *               dbnnot bf fditfd.
     */
     */
     */
     */
     */
    publid void sftCfllEditor(TrffCfllEditor dfllEditor) {
    publid void sftCfllEditor(TrffCfllEditor dfllEditor) {
    publid void sftCfllEditor(TrffCfllEditor dfllEditor) {
    publid void sftCfllEditor(TrffCfllEditor dfllEditor) {
    publid void sftCfllEditor(TrffCfllEditor dfllEditor) {
        TrffCfllEditor        oldEditor = tiis.dfllEditor;
        TrffCfllEditor        oldEditor = tiis.dfllEditor;
        TrffCfllEditor        oldEditor = tiis.dfllEditor;
        TrffCfllEditor        oldEditor = tiis.dfllEditor;
        TrffCfllEditor        oldEditor = tiis.dfllEditor;





        tiis.dfllEditor = dfllEditor;
        tiis.dfllEditor = dfllEditor;
        tiis.dfllEditor = dfllEditor;
        tiis.dfllEditor = dfllEditor;
        tiis.dfllEditor = dfllEditor;
        firfPropfrtyCibngf(CELL_EDITOR_PROPERTY, oldEditor, dfllEditor);
        firfPropfrtyCibngf(CELL_EDITOR_PROPERTY, oldEditor, dfllEditor);
        firfPropfrtyCibngf(CELL_EDITOR_PROPERTY, oldEditor, dfllEditor);
        firfPropfrtyCibngf(CELL_EDITOR_PROPERTY, oldEditor, dfllEditor);
        firfPropfrtyCibngf(CELL_EDITOR_PROPERTY, oldEditor, dfllEditor);
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif fditor usfd to fdit fntrifs in tif trff.
     * Rfturns tif fditor usfd to fdit fntrifs in tif trff.
     * Rfturns tif fditor usfd to fdit fntrifs in tif trff.
     * Rfturns tif fditor usfd to fdit fntrifs in tif trff.
     * Rfturns tif fditor usfd to fdit fntrifs in tif trff.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TrffCfllEditor</dodf> in usf,
     * @rfturn tif <dodf>TrffCfllEditor</dodf> in usf,
     * @rfturn tif <dodf>TrffCfllEditor</dodf> in usf,
     * @rfturn tif <dodf>TrffCfllEditor</dodf> in usf,
     * @rfturn tif <dodf>TrffCfllEditor</dodf> in usf,
     *          or <dodf>null</dodf> if tif trff dbnnot bf fditfd
     *          or <dodf>null</dodf> if tif trff dbnnot bf fditfd
     *          or <dodf>null</dodf> if tif trff dbnnot bf fditfd
     *          or <dodf>null</dodf> if tif trff dbnnot bf fditfd
     *          or <dodf>null</dodf> if tif trff dbnnot bf fditfd
     */
     */
     */
     */
     */
    publid TrffCfllEditor gftCfllEditor() {
    publid TrffCfllEditor gftCfllEditor() {
    publid TrffCfllEditor gftCfllEditor() {
    publid TrffCfllEditor gftCfllEditor() {
    publid TrffCfllEditor gftCfllEditor() {
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
        rfturn dfllEditor;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb.
     * Rfturns tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb.
     * Rfturns tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb.
     * Rfturns tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb.
     * Rfturns tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb
     * @rfturn tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb
     * @rfturn tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb
     * @rfturn tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb
     * @rfturn tif <dodf>TrffModfl</dodf> tibt is providing tif dbtb
     */
     */
     */
     */
     */
    publid TrffModfl gftModfl() {
    publid TrffModfl gftModfl() {
    publid TrffModfl gftModfl() {
    publid TrffModfl gftModfl() {
    publid TrffModfl gftModfl() {
        rfturn trffModfl;
        rfturn trffModfl;
        rfturn trffModfl;
        rfturn trffModfl;
        rfturn trffModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>TrffModfl</dodf> tibt will providf tif dbtb.
     * Sfts tif <dodf>TrffModfl</dodf> tibt will providf tif dbtb.
     * Sfts tif <dodf>TrffModfl</dodf> tibt will providf tif dbtb.
     * Sfts tif <dodf>TrffModfl</dodf> tibt will providf tif dbtb.
     * Sfts tif <dodf>TrffModfl</dodf> tibt will providf tif dbtb.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwModfl tif <dodf>TrffModfl</dodf> tibt is to providf tif dbtb
     * @pbrbm nfwModfl tif <dodf>TrffModfl</dodf> tibt is to providf tif dbtb
     * @pbrbm nfwModfl tif <dodf>TrffModfl</dodf> tibt is to providf tif dbtb
     * @pbrbm nfwModfl tif <dodf>TrffModfl</dodf> tibt is to providf tif dbtb
     * @pbrbm nfwModfl tif <dodf>TrffModfl</dodf> tibt is to providf tif dbtb
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif TrffModfl tibt will providf tif dbtb.
     *  dfsdription: Tif TrffModfl tibt will providf tif dbtb.
     *  dfsdription: Tif TrffModfl tibt will providf tif dbtb.
     *  dfsdription: Tif TrffModfl tibt will providf tif dbtb.
     *  dfsdription: Tif TrffModfl tibt will providf tif dbtb.
     */
     */
     */
     */
     */
    publid void sftModfl(TrffModfl nfwModfl) {
    publid void sftModfl(TrffModfl nfwModfl) {
    publid void sftModfl(TrffModfl nfwModfl) {
    publid void sftModfl(TrffModfl nfwModfl) {
    publid void sftModfl(TrffModfl nfwModfl) {
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();
        dlfbrSflfdtion();





        TrffModfl oldModfl = trffModfl;
        TrffModfl oldModfl = trffModfl;
        TrffModfl oldModfl = trffModfl;
        TrffModfl oldModfl = trffModfl;
        TrffModfl oldModfl = trffModfl;





        if(trffModfl != null && trffModflListfnfr != null)
        if(trffModfl != null && trffModflListfnfr != null)
        if(trffModfl != null && trffModflListfnfr != null)
        if(trffModfl != null && trffModflListfnfr != null)
        if(trffModfl != null && trffModflListfnfr != null)
            trffModfl.rfmovfTrffModflListfnfr(trffModflListfnfr);
            trffModfl.rfmovfTrffModflListfnfr(trffModflListfnfr);
            trffModfl.rfmovfTrffModflListfnfr(trffModflListfnfr);
            trffModfl.rfmovfTrffModflListfnfr(trffModflListfnfr);
            trffModfl.rfmovfTrffModflListfnfr(trffModflListfnfr);





        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            if (trffModfl != null) {
            if (trffModfl != null) {
            if (trffModfl != null) {
            if (trffModfl != null) {
            if (trffModfl != null) {
                trffModfl.rfmovfTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                trffModfl.rfmovfTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                trffModfl.rfmovfTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                trffModfl.rfmovfTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                trffModfl.rfmovfTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
            }
            }
            }
            }
            }
            if (nfwModfl != null) {
            if (nfwModfl != null) {
            if (nfwModfl != null) {
            if (nfwModfl != null) {
            if (nfwModfl != null) {
                nfwModfl.bddTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                nfwModfl.bddTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                nfwModfl.bddTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                nfwModfl.bddTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
                nfwModfl.bddTrffModflListfnfr((TrffModflListfnfr)bddfssiblfContfxt);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        trffModfl = nfwModfl;
        trffModfl = nfwModfl;
        trffModfl = nfwModfl;
        trffModfl = nfwModfl;
        trffModfl = nfwModfl;
        dlfbrTogglfdPbtis();
        dlfbrTogglfdPbtis();
        dlfbrTogglfdPbtis();
        dlfbrTogglfdPbtis();
        dlfbrTogglfdPbtis();
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
            if(trffModflListfnfr == null)
            if(trffModflListfnfr == null)
            if(trffModflListfnfr == null)
            if(trffModflListfnfr == null)
            if(trffModflListfnfr == null)
                trffModflListfnfr = drfbtfTrffModflListfnfr();
                trffModflListfnfr = drfbtfTrffModflListfnfr();
                trffModflListfnfr = drfbtfTrffModflListfnfr();
                trffModflListfnfr = drfbtfTrffModflListfnfr();
                trffModflListfnfr = drfbtfTrffModflListfnfr();
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
            // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
            // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
            // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
            // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
            // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
            if(trffModfl.gftRoot() != null &&
            if(trffModfl.gftRoot() != null &&
            if(trffModfl.gftRoot() != null &&
            if(trffModfl.gftRoot() != null &&
            if(trffModfl.gftRoot() != null &&
               !trffModfl.isLfbf(trffModfl.gftRoot())) {
               !trffModfl.isLfbf(trffModfl.gftRoot())) {
               !trffModfl.isLfbf(trffModfl.gftRoot())) {
               !trffModfl.isLfbf(trffModfl.gftRoot())) {
               !trffModfl.isLfbf(trffModfl.gftRoot())) {
                fxpbndfdStbtf.put(nfw TrffPbti(trffModfl.gftRoot()),
                fxpbndfdStbtf.put(nfw TrffPbti(trffModfl.gftRoot()),
                fxpbndfdStbtf.put(nfw TrffPbti(trffModfl.gftRoot()),
                fxpbndfdStbtf.put(nfw TrffPbti(trffModfl.gftRoot()),
                fxpbndfdStbtf.put(nfw TrffPbti(trffModfl.gftRoot()),
                                  Boolfbn.TRUE);
                                  Boolfbn.TRUE);
                                  Boolfbn.TRUE);
                                  Boolfbn.TRUE);
                                  Boolfbn.TRUE);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        firfPropfrtyCibngf(TREE_MODEL_PROPERTY, oldModfl, trffModfl);
        firfPropfrtyCibngf(TREE_MODEL_PROPERTY, oldModfl, trffModfl);
        firfPropfrtyCibngf(TREE_MODEL_PROPERTY, oldModfl, trffModfl);
        firfPropfrtyCibngf(TREE_MODEL_PROPERTY, oldModfl, trffModfl);
        firfPropfrtyCibngf(TREE_MODEL_PROPERTY, oldModfl, trffModfl);
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif root nodf of tif trff is displbyfd.
     * Rfturns truf if tif root nodf of tif trff is displbyfd.
     * Rfturns truf if tif root nodf of tif trff is displbyfd.
     * Rfturns truf if tif root nodf of tif trff is displbyfd.
     * Rfturns truf if tif root nodf of tif trff is displbyfd.
     *
     *
     *
     *
     *
     * @rfturn truf if tif root nodf of tif trff is displbyfd
     * @rfturn truf if tif root nodf of tif trff is displbyfd
     * @rfturn truf if tif root nodf of tif trff is displbyfd
     * @rfturn truf if tif root nodf of tif trff is displbyfd
     * @rfturn truf if tif root nodf of tif trff is displbyfd
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     */
     */
     */
     */
     */
    publid boolfbn isRootVisiblf() {
    publid boolfbn isRootVisiblf() {
    publid boolfbn isRootVisiblf() {
    publid boolfbn isRootVisiblf() {
    publid boolfbn isRootVisiblf() {
        rfturn rootVisiblf;
        rfturn rootVisiblf;
        rfturn rootVisiblf;
        rfturn rootVisiblf;
        rfturn rootVisiblf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dftfrminfs wiftifr or not tif root nodf from
     * Dftfrminfs wiftifr or not tif root nodf from
     * Dftfrminfs wiftifr or not tif root nodf from
     * Dftfrminfs wiftifr or not tif root nodf from
     * Dftfrminfs wiftifr or not tif root nodf from
     * tif <dodf>TrffModfl</dodf> is visiblf.
     * tif <dodf>TrffModfl</dodf> is visiblf.
     * tif <dodf>TrffModfl</dodf> is visiblf.
     * tif <dodf>TrffModfl</dodf> is visiblf.
     * tif <dodf>TrffModfl</dodf> is visiblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm rootVisiblf truf if tif root nodf of tif trff is to bf displbyfd
     * @pbrbm rootVisiblf truf if tif root nodf of tif trff is to bf displbyfd
     * @pbrbm rootVisiblf truf if tif root nodf of tif trff is to bf displbyfd
     * @pbrbm rootVisiblf truf if tif root nodf of tif trff is to bf displbyfd
     * @pbrbm rootVisiblf truf if tif root nodf of tif trff is to bf displbyfd
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @sff #rootVisiblf
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Wiftifr or not tif root nodf
     *  dfsdription: Wiftifr or not tif root nodf
     *  dfsdription: Wiftifr or not tif root nodf
     *  dfsdription: Wiftifr or not tif root nodf
     *  dfsdription: Wiftifr or not tif root nodf
     *               from tif TrffModfl is visiblf.
     *               from tif TrffModfl is visiblf.
     *               from tif TrffModfl is visiblf.
     *               from tif TrffModfl is visiblf.
     *               from tif TrffModfl is visiblf.
     */
     */
     */
     */
     */
    publid void sftRootVisiblf(boolfbn rootVisiblf) {
    publid void sftRootVisiblf(boolfbn rootVisiblf) {
    publid void sftRootVisiblf(boolfbn rootVisiblf) {
    publid void sftRootVisiblf(boolfbn rootVisiblf) {
    publid void sftRootVisiblf(boolfbn rootVisiblf) {
        boolfbn                oldVbluf = tiis.rootVisiblf;
        boolfbn                oldVbluf = tiis.rootVisiblf;
        boolfbn                oldVbluf = tiis.rootVisiblf;
        boolfbn                oldVbluf = tiis.rootVisiblf;
        boolfbn                oldVbluf = tiis.rootVisiblf;





        tiis.rootVisiblf = rootVisiblf;
        tiis.rootVisiblf = rootVisiblf;
        tiis.rootVisiblf = rootVisiblf;
        tiis.rootVisiblf = rootVisiblf;
        tiis.rootVisiblf = rootVisiblf;
        firfPropfrtyCibngf(ROOT_VISIBLE_PROPERTY, oldVbluf, tiis.rootVisiblf);
        firfPropfrtyCibngf(ROOT_VISIBLE_PROPERTY, oldVbluf, tiis.rootVisiblf);
        firfPropfrtyCibngf(ROOT_VISIBLE_PROPERTY, oldVbluf, tiis.rootVisiblf);
        firfPropfrtyCibngf(ROOT_VISIBLE_PROPERTY, oldVbluf, tiis.rootVisiblf);
        firfPropfrtyCibngf(ROOT_VISIBLE_PROPERTY, oldVbluf, tiis.rootVisiblf);
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty,
     * Sfts tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty,
     * Sfts tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty,
     * Sfts tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty,
     * Sfts tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty,
     * wiidi spfdififs wiftifr tif nodf ibndlfs siould bf displbyfd.
     * wiidi spfdififs wiftifr tif nodf ibndlfs siould bf displbyfd.
     * wiidi spfdififs wiftifr tif nodf ibndlfs siould bf displbyfd.
     * wiidi spfdififs wiftifr tif nodf ibndlfs siould bf displbyfd.
     * wiidi spfdififs wiftifr tif nodf ibndlfs siould bf displbyfd.
     * Tif dffbult vbluf of tiis propfrty dfpfnds on tif donstrudtor
     * Tif dffbult vbluf of tiis propfrty dfpfnds on tif donstrudtor
     * Tif dffbult vbluf of tiis propfrty dfpfnds on tif donstrudtor
     * Tif dffbult vbluf of tiis propfrty dfpfnds on tif donstrudtor
     * Tif dffbult vbluf of tiis propfrty dfpfnds on tif donstrudtor
     * usfd to drfbtf tif <dodf>JTrff</dodf>.
     * usfd to drfbtf tif <dodf>JTrff</dodf>.
     * usfd to drfbtf tif <dodf>JTrff</dodf>.
     * usfd to drfbtf tif <dodf>JTrff</dodf>.
     * usfd to drfbtf tif <dodf>JTrff</dodf>.
     * Somf look bnd fffls migit not support ibndlfs;
     * Somf look bnd fffls migit not support ibndlfs;
     * Somf look bnd fffls migit not support ibndlfs;
     * Somf look bnd fffls migit not support ibndlfs;
     * Somf look bnd fffls migit not support ibndlfs;
     * tify will ignorf tiis propfrty.
     * tify will ignorf tiis propfrty.
     * tify will ignorf tiis propfrty.
     * tify will ignorf tiis propfrty.
     * tify will ignorf tiis propfrty.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwVbluf <dodf>truf</dodf> if root ibndlfs siould bf displbyfd;
     * @pbrbm nfwVbluf <dodf>truf</dodf> if root ibndlfs siould bf displbyfd;
     * @pbrbm nfwVbluf <dodf>truf</dodf> if root ibndlfs siould bf displbyfd;
     * @pbrbm nfwVbluf <dodf>truf</dodf> if root ibndlfs siould bf displbyfd;
     * @pbrbm nfwVbluf <dodf>truf</dodf> if root ibndlfs siould bf displbyfd;
     *                 otifrwisf, <dodf>fblsf</dodf>
     *                 otifrwisf, <dodf>fblsf</dodf>
     *                 otifrwisf, <dodf>fblsf</dodf>
     *                 otifrwisf, <dodf>fblsf</dodf>
     *                 otifrwisf, <dodf>fblsf</dodf>
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #gftSiowsRootHbndlfs
     * @sff #gftSiowsRootHbndlfs
     * @sff #gftSiowsRootHbndlfs
     * @sff #gftSiowsRootHbndlfs
     * @sff #gftSiowsRootHbndlfs
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Wiftifr tif nodf ibndlfs brf to bf
     *  dfsdription: Wiftifr tif nodf ibndlfs brf to bf
     *  dfsdription: Wiftifr tif nodf ibndlfs brf to bf
     *  dfsdription: Wiftifr tif nodf ibndlfs brf to bf
     *  dfsdription: Wiftifr tif nodf ibndlfs brf to bf
     *               displbyfd.
     *               displbyfd.
     *               displbyfd.
     *               displbyfd.
     *               displbyfd.
     */
     */
     */
     */
     */
    publid void sftSiowsRootHbndlfs(boolfbn nfwVbluf) {
    publid void sftSiowsRootHbndlfs(boolfbn nfwVbluf) {
    publid void sftSiowsRootHbndlfs(boolfbn nfwVbluf) {
    publid void sftSiowsRootHbndlfs(boolfbn nfwVbluf) {
    publid void sftSiowsRootHbndlfs(boolfbn nfwVbluf) {
        boolfbn                oldVbluf = siowsRootHbndlfs;
        boolfbn                oldVbluf = siowsRootHbndlfs;
        boolfbn                oldVbluf = siowsRootHbndlfs;
        boolfbn                oldVbluf = siowsRootHbndlfs;
        boolfbn                oldVbluf = siowsRootHbndlfs;
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();





        siowsRootHbndlfs = nfwVbluf;
        siowsRootHbndlfs = nfwVbluf;
        siowsRootHbndlfs = nfwVbluf;
        siowsRootHbndlfs = nfwVbluf;
        siowsRootHbndlfs = nfwVbluf;
        siowsRootHbndlfsSft = truf;
        siowsRootHbndlfsSft = truf;
        siowsRootHbndlfsSft = truf;
        siowsRootHbndlfsSft = truf;
        siowsRootHbndlfsSft = truf;
        firfPropfrtyCibngf(SHOWS_ROOT_HANDLES_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SHOWS_ROOT_HANDLES_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SHOWS_ROOT_HANDLES_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SHOWS_ROOT_HANDLES_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SHOWS_ROOT_HANDLES_PROPERTY, oldVbluf,
                           siowsRootHbndlfs);
                           siowsRootHbndlfs);
                           siowsRootHbndlfs);
                           siowsRootHbndlfs);
                           siowsRootHbndlfs);
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty.
     *
     *
     *
     *
     *
     * @rfturn tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>siowsRootHbndlfs</dodf> propfrty
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     * @sff #siowsRootHbndlfs
     */
     */
     */
     */
     */
    publid boolfbn gftSiowsRootHbndlfs()
    publid boolfbn gftSiowsRootHbndlfs()
    publid boolfbn gftSiowsRootHbndlfs()
    publid boolfbn gftSiowsRootHbndlfs()
    publid boolfbn gftSiowsRootHbndlfs()
    {
    {
    {
    {
    {
        rfturn siowsRootHbndlfs;
        rfturn siowsRootHbndlfs;
        rfturn siowsRootHbndlfs;
        rfturn siowsRootHbndlfs;
        rfturn siowsRootHbndlfs;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif ifigit of fbdi dfll, in pixfls.  If tif spfdififd vbluf
     * Sfts tif ifigit of fbdi dfll, in pixfls.  If tif spfdififd vbluf
     * Sfts tif ifigit of fbdi dfll, in pixfls.  If tif spfdififd vbluf
     * Sfts tif ifigit of fbdi dfll, in pixfls.  If tif spfdififd vbluf
     * Sfts tif ifigit of fbdi dfll, in pixfls.  If tif spfdififd vbluf
     * is lfss tibn or fqubl to zfro tif durrfnt dfll rfndfrfr is
     * is lfss tibn or fqubl to zfro tif durrfnt dfll rfndfrfr is
     * is lfss tibn or fqubl to zfro tif durrfnt dfll rfndfrfr is
     * is lfss tibn or fqubl to zfro tif durrfnt dfll rfndfrfr is
     * is lfss tibn or fqubl to zfro tif durrfnt dfll rfndfrfr is
     * qufrifd for fbdi row's ifigit.
     * qufrifd for fbdi row's ifigit.
     * qufrifd for fbdi row's ifigit.
     * qufrifd for fbdi row's ifigit.
     * qufrifd for fbdi row's ifigit.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm rowHfigit tif ifigit of fbdi dfll, in pixfls
     * @pbrbm rowHfigit tif ifigit of fbdi dfll, in pixfls
     * @pbrbm rowHfigit tif ifigit of fbdi dfll, in pixfls
     * @pbrbm rowHfigit tif ifigit of fbdi dfll, in pixfls
     * @pbrbm rowHfigit tif ifigit of fbdi dfll, in pixfls
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif ifigit of fbdi dfll.
     *  dfsdription: Tif ifigit of fbdi dfll.
     *  dfsdription: Tif ifigit of fbdi dfll.
     *  dfsdription: Tif ifigit of fbdi dfll.
     *  dfsdription: Tif ifigit of fbdi dfll.
     */
     */
     */
     */
     */
    publid void sftRowHfigit(int rowHfigit)
    publid void sftRowHfigit(int rowHfigit)
    publid void sftRowHfigit(int rowHfigit)
    publid void sftRowHfigit(int rowHfigit)
    publid void sftRowHfigit(int rowHfigit)
    {
    {
    {
    {
    {
        int                oldVbluf = tiis.rowHfigit;
        int                oldVbluf = tiis.rowHfigit;
        int                oldVbluf = tiis.rowHfigit;
        int                oldVbluf = tiis.rowHfigit;
        int                oldVbluf = tiis.rowHfigit;





        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        tiis.rowHfigit = rowHfigit;
        rowHfigitSft = truf;
        rowHfigitSft = truf;
        rowHfigitSft = truf;
        rowHfigitSft = truf;
        rowHfigitSft = truf;
        firfPropfrtyCibngf(ROW_HEIGHT_PROPERTY, oldVbluf, tiis.rowHfigit);
        firfPropfrtyCibngf(ROW_HEIGHT_PROPERTY, oldVbluf, tiis.rowHfigit);
        firfPropfrtyCibngf(ROW_HEIGHT_PROPERTY, oldVbluf, tiis.rowHfigit);
        firfPropfrtyCibngf(ROW_HEIGHT_PROPERTY, oldVbluf, tiis.rowHfigit);
        firfPropfrtyCibngf(ROW_HEIGHT_PROPERTY, oldVbluf, tiis.rowHfigit);
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif ifigit of fbdi row.  If tif rfturnfd vbluf is lfss tibn
     * Rfturns tif ifigit of fbdi row.  If tif rfturnfd vbluf is lfss tibn
     * Rfturns tif ifigit of fbdi row.  If tif rfturnfd vbluf is lfss tibn
     * Rfturns tif ifigit of fbdi row.  If tif rfturnfd vbluf is lfss tibn
     * Rfturns tif ifigit of fbdi row.  If tif rfturnfd vbluf is lfss tibn
     * or fqubl to 0 tif ifigit for fbdi row is dftfrminfd by tif
     * or fqubl to 0 tif ifigit for fbdi row is dftfrminfd by tif
     * or fqubl to 0 tif ifigit for fbdi row is dftfrminfd by tif
     * or fqubl to 0 tif ifigit for fbdi row is dftfrminfd by tif
     * or fqubl to 0 tif ifigit for fbdi row is dftfrminfd by tif
     * rfndfrfr.
     * rfndfrfr.
     * rfndfrfr.
     * rfndfrfr.
     * rfndfrfr.
     *
     *
     *
     *
     *
     * @rfturn tif ifigit of fbdi row
     * @rfturn tif ifigit of fbdi row
     * @rfturn tif ifigit of fbdi row
     * @rfturn tif ifigit of fbdi row
     * @rfturn tif ifigit of fbdi row
     */
     */
     */
     */
     */
    publid int gftRowHfigit()
    publid int gftRowHfigit()
    publid int gftRowHfigit()
    publid int gftRowHfigit()
    publid int gftRowHfigit()
    {
    {
    {
    {
    {
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
        rfturn rowHfigit;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif ifigit of fbdi displby row is b fixfd sizf.
     * Rfturns truf if tif ifigit of fbdi displby row is b fixfd sizf.
     * Rfturns truf if tif ifigit of fbdi displby row is b fixfd sizf.
     * Rfturns truf if tif ifigit of fbdi displby row is b fixfd sizf.
     * Rfturns truf if tif ifigit of fbdi displby row is b fixfd sizf.
     *
     *
     *
     *
     *
     * @rfturn truf if tif ifigit of fbdi row is b fixfd sizf
     * @rfturn truf if tif ifigit of fbdi row is b fixfd sizf
     * @rfturn truf if tif ifigit of fbdi row is b fixfd sizf
     * @rfturn truf if tif ifigit of fbdi row is b fixfd sizf
     * @rfturn truf if tif ifigit of fbdi row is b fixfd sizf
     */
     */
     */
     */
     */
    publid boolfbn isFixfdRowHfigit()
    publid boolfbn isFixfdRowHfigit()
    publid boolfbn isFixfdRowHfigit()
    publid boolfbn isFixfdRowHfigit()
    publid boolfbn isFixfdRowHfigit()
    {
    {
    {
    {
    {
        rfturn (rowHfigit > 0);
        rfturn (rowHfigit > 0);
        rfturn (rowHfigit > 0);
        rfturn (rowHfigit > 0);
        rfturn (rowHfigit > 0);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Spfdififs wiftifr tif UI siould usf b lbrgf modfl.
     * Spfdififs wiftifr tif UI siould usf b lbrgf modfl.
     * Spfdififs wiftifr tif UI siould usf b lbrgf modfl.
     * Spfdififs wiftifr tif UI siould usf b lbrgf modfl.
     * Spfdififs wiftifr tif UI siould usf b lbrgf modfl.
     * (Not bll UIs will implfmfnt tiis.) Firfs b propfrty dibngf
     * (Not bll UIs will implfmfnt tiis.) Firfs b propfrty dibngf
     * (Not bll UIs will implfmfnt tiis.) Firfs b propfrty dibngf
     * (Not bll UIs will implfmfnt tiis.) Firfs b propfrty dibngf
     * (Not bll UIs will implfmfnt tiis.) Firfs b propfrty dibngf
     * for tif LARGE_MODEL_PROPERTY.
     * for tif LARGE_MODEL_PROPERTY.
     * for tif LARGE_MODEL_PROPERTY.
     * for tif LARGE_MODEL_PROPERTY.
     * for tif LARGE_MODEL_PROPERTY.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwVbluf truf to suggfst b lbrgf modfl to tif UI
     * @pbrbm nfwVbluf truf to suggfst b lbrgf modfl to tif UI
     * @pbrbm nfwVbluf truf to suggfst b lbrgf modfl to tif UI
     * @pbrbm nfwVbluf truf to suggfst b lbrgf modfl to tif UI
     * @pbrbm nfwVbluf truf to suggfst b lbrgf modfl to tif UI
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Wiftifr tif UI siould usf b
     *  dfsdription: Wiftifr tif UI siould usf b
     *  dfsdription: Wiftifr tif UI siould usf b
     *  dfsdription: Wiftifr tif UI siould usf b
     *  dfsdription: Wiftifr tif UI siould usf b
     *               lbrgf modfl.
     *               lbrgf modfl.
     *               lbrgf modfl.
     *               lbrgf modfl.
     *               lbrgf modfl.
     */
     */
     */
     */
     */
    publid void sftLbrgfModfl(boolfbn nfwVbluf) {
    publid void sftLbrgfModfl(boolfbn nfwVbluf) {
    publid void sftLbrgfModfl(boolfbn nfwVbluf) {
    publid void sftLbrgfModfl(boolfbn nfwVbluf) {
    publid void sftLbrgfModfl(boolfbn nfwVbluf) {
        boolfbn                oldVbluf = lbrgfModfl;
        boolfbn                oldVbluf = lbrgfModfl;
        boolfbn                oldVbluf = lbrgfModfl;
        boolfbn                oldVbluf = lbrgfModfl;
        boolfbn                oldVbluf = lbrgfModfl;





        lbrgfModfl = nfwVbluf;
        lbrgfModfl = nfwVbluf;
        lbrgfModfl = nfwVbluf;
        lbrgfModfl = nfwVbluf;
        lbrgfModfl = nfwVbluf;
        firfPropfrtyCibngf(LARGE_MODEL_PROPERTY, oldVbluf, nfwVbluf);
        firfPropfrtyCibngf(LARGE_MODEL_PROPERTY, oldVbluf, nfwVbluf);
        firfPropfrtyCibngf(LARGE_MODEL_PROPERTY, oldVbluf, nfwVbluf);
        firfPropfrtyCibngf(LARGE_MODEL_PROPERTY, oldVbluf, nfwVbluf);
        firfPropfrtyCibngf(LARGE_MODEL_PROPERTY, oldVbluf, nfwVbluf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif trff is donfigurfd for b lbrgf modfl.
     * Rfturns truf if tif trff is donfigurfd for b lbrgf modfl.
     * Rfturns truf if tif trff is donfigurfd for b lbrgf modfl.
     * Rfturns truf if tif trff is donfigurfd for b lbrgf modfl.
     * Rfturns truf if tif trff is donfigurfd for b lbrgf modfl.
     *
     *
     *
     *
     *
     * @rfturn truf if b lbrgf modfl is suggfstfd
     * @rfturn truf if b lbrgf modfl is suggfstfd
     * @rfturn truf if b lbrgf modfl is suggfstfd
     * @rfturn truf if b lbrgf modfl is suggfstfd
     * @rfturn truf if b lbrgf modfl is suggfstfd
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     * @sff #lbrgfModfl
     */
     */
     */
     */
     */
    publid boolfbn isLbrgfModfl() {
    publid boolfbn isLbrgfModfl() {
    publid boolfbn isLbrgfModfl() {
    publid boolfbn isLbrgfModfl() {
    publid boolfbn isLbrgfModfl() {
        rfturn lbrgfModfl;
        rfturn lbrgfModfl;
        rfturn lbrgfModfl;
        rfturn lbrgfModfl;
        rfturn lbrgfModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd by sflfdting
     * Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd by sflfdting
     * Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd by sflfdting
     * Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd by sflfdting
     * Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd by sflfdting
     * bnotifr nodf in tif trff, b dibngf in tif trff's dbtb, or by somf
     * bnotifr nodf in tif trff, b dibngf in tif trff's dbtb, or by somf
     * bnotifr nodf in tif trff, b dibngf in tif trff's dbtb, or by somf
     * bnotifr nodf in tif trff, b dibngf in tif trff's dbtb, or by somf
     * bnotifr nodf in tif trff, b dibngf in tif trff's dbtb, or by somf
     * otifr mfbns. Sftting tiis propfrty to <dodf>truf</dodf> dbusfs tif
     * otifr mfbns. Sftting tiis propfrty to <dodf>truf</dodf> dbusfs tif
     * otifr mfbns. Sftting tiis propfrty to <dodf>truf</dodf> dbusfs tif
     * otifr mfbns. Sftting tiis propfrty to <dodf>truf</dodf> dbusfs tif
     * otifr mfbns. Sftting tiis propfrty to <dodf>truf</dodf> dbusfs tif
     * dibngfs to bf butombtidblly sbvfd wifn fditing is intfrruptfd.
     * dibngfs to bf butombtidblly sbvfd wifn fditing is intfrruptfd.
     * dibngfs to bf butombtidblly sbvfd wifn fditing is intfrruptfd.
     * dibngfs to bf butombtidblly sbvfd wifn fditing is intfrruptfd.
     * dibngfs to bf butombtidblly sbvfd wifn fditing is intfrruptfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Firfs b propfrty dibngf for tif INVOKES_STOP_CELL_EDITING_PROPERTY.
     * Firfs b propfrty dibngf for tif INVOKES_STOP_CELL_EDITING_PROPERTY.
     * Firfs b propfrty dibngf for tif INVOKES_STOP_CELL_EDITING_PROPERTY.
     * Firfs b propfrty dibngf for tif INVOKES_STOP_CELL_EDITING_PROPERTY.
     * Firfs b propfrty dibngf for tif INVOKES_STOP_CELL_EDITING_PROPERTY.
     *
     *
     *
     *
     *
     * @pbrbm nfwVbluf truf mfbns tibt <dodf>stopCfllEditing</dodf> is invokfd
     * @pbrbm nfwVbluf truf mfbns tibt <dodf>stopCfllEditing</dodf> is invokfd
     * @pbrbm nfwVbluf truf mfbns tibt <dodf>stopCfllEditing</dodf> is invokfd
     * @pbrbm nfwVbluf truf mfbns tibt <dodf>stopCfllEditing</dodf> is invokfd
     * @pbrbm nfwVbluf truf mfbns tibt <dodf>stopCfllEditing</dodf> is invokfd
     *        wifn fditing is intfrruptfd, bnd dbtb is sbvfd; fblsf mfbns tibt
     *        wifn fditing is intfrruptfd, bnd dbtb is sbvfd; fblsf mfbns tibt
     *        wifn fditing is intfrruptfd, bnd dbtb is sbvfd; fblsf mfbns tibt
     *        wifn fditing is intfrruptfd, bnd dbtb is sbvfd; fblsf mfbns tibt
     *        wifn fditing is intfrruptfd, bnd dbtb is sbvfd; fblsf mfbns tibt
     *        <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs brf lost
     *        <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs brf lost
     *        <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs brf lost
     *        <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs brf lost
     *        <dodf>dbndflCfllEditing</dodf> is invokfd, bnd dibngfs brf lost
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd,
     *  dfsdription: Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd,
     *  dfsdription: Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd,
     *  dfsdription: Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd,
     *  dfsdription: Dftfrminfs wibt ibppfns wifn fditing is intfrruptfd,
     *               sflfdting bnotifr nodf in tif trff, b dibngf in tif
     *               sflfdting bnotifr nodf in tif trff, b dibngf in tif
     *               sflfdting bnotifr nodf in tif trff, b dibngf in tif
     *               sflfdting bnotifr nodf in tif trff, b dibngf in tif
     *               sflfdting bnotifr nodf in tif trff, b dibngf in tif
     *               trff's dbtb, or somf otifr mfbns.
     *               trff's dbtb, or somf otifr mfbns.
     *               trff's dbtb, or somf otifr mfbns.
     *               trff's dbtb, or somf otifr mfbns.
     *               trff's dbtb, or somf otifr mfbns.
     */
     */
     */
     */
     */
    publid void sftInvokfsStopCfllEditing(boolfbn nfwVbluf) {
    publid void sftInvokfsStopCfllEditing(boolfbn nfwVbluf) {
    publid void sftInvokfsStopCfllEditing(boolfbn nfwVbluf) {
    publid void sftInvokfsStopCfllEditing(boolfbn nfwVbluf) {
    publid void sftInvokfsStopCfllEditing(boolfbn nfwVbluf) {
        boolfbn                  oldVbluf = invokfsStopCfllEditing;
        boolfbn                  oldVbluf = invokfsStopCfllEditing;
        boolfbn                  oldVbluf = invokfsStopCfllEditing;
        boolfbn                  oldVbluf = invokfsStopCfllEditing;
        boolfbn                  oldVbluf = invokfsStopCfllEditing;





        invokfsStopCfllEditing = nfwVbluf;
        invokfsStopCfllEditing = nfwVbluf;
        invokfsStopCfllEditing = nfwVbluf;
        invokfsStopCfllEditing = nfwVbluf;
        invokfsStopCfllEditing = nfwVbluf;
        firfPropfrtyCibngf(INVOKES_STOP_CELL_EDITING_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(INVOKES_STOP_CELL_EDITING_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(INVOKES_STOP_CELL_EDITING_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(INVOKES_STOP_CELL_EDITING_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(INVOKES_STOP_CELL_EDITING_PROPERTY, oldVbluf,
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * Rfturns tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * Rfturns tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * Rfturns tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * Rfturns tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * intfrruptfd.
     * intfrruptfd.
     * intfrruptfd.
     * intfrruptfd.
     * intfrruptfd.
     *
     *
     *
     *
     *
     * @rfturn tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * @rfturn tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * @rfturn tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * @rfturn tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     * @rfturn tif indidbtor tibt tflls wibt ibppfns wifn fditing is
     *         intfrruptfd
     *         intfrruptfd
     *         intfrruptfd
     *         intfrruptfd
     *         intfrruptfd
     * @sff #sftInvokfsStopCfllEditing
     * @sff #sftInvokfsStopCfllEditing
     * @sff #sftInvokfsStopCfllEditing
     * @sff #sftInvokfsStopCfllEditing
     * @sff #sftInvokfsStopCfllEditing
     */
     */
     */
     */
     */
    publid boolfbn gftInvokfsStopCfllEditing() {
    publid boolfbn gftInvokfsStopCfllEditing() {
    publid boolfbn gftInvokfsStopCfllEditing() {
    publid boolfbn gftInvokfsStopCfllEditing() {
    publid boolfbn gftInvokfsStopCfllEditing() {
        rfturn invokfsStopCfllEditing;
        rfturn invokfsStopCfllEditing;
        rfturn invokfsStopCfllEditing;
        rfturn invokfsStopCfllEditing;
        rfturn invokfsStopCfllEditing;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif <dodf>sdrollsOnExpbnd</dodf> propfrty,
     * Sfts tif <dodf>sdrollsOnExpbnd</dodf> propfrty,
     * Sfts tif <dodf>sdrollsOnExpbnd</dodf> propfrty,
     * Sfts tif <dodf>sdrollsOnExpbnd</dodf> propfrty,
     * Sfts tif <dodf>sdrollsOnExpbnd</dodf> propfrty,
     * wiidi dftfrminfs wiftifr tif
     * wiidi dftfrminfs wiftifr tif
     * wiidi dftfrminfs wiftifr tif
     * wiidi dftfrminfs wiftifr tif
     * wiidi dftfrminfs wiftifr tif
     * trff migit sdroll to siow prfviously iiddfn diildrfn.
     * trff migit sdroll to siow prfviously iiddfn diildrfn.
     * trff migit sdroll to siow prfviously iiddfn diildrfn.
     * trff migit sdroll to siow prfviously iiddfn diildrfn.
     * trff migit sdroll to siow prfviously iiddfn diildrfn.
     * If tiis propfrty is <dodf>truf</dodf> (tif dffbult),
     * If tiis propfrty is <dodf>truf</dodf> (tif dffbult),
     * If tiis propfrty is <dodf>truf</dodf> (tif dffbult),
     * If tiis propfrty is <dodf>truf</dodf> (tif dffbult),
     * If tiis propfrty is <dodf>truf</dodf> (tif dffbult),
     * wifn b nodf fxpbnds
     * wifn b nodf fxpbnds
     * wifn b nodf fxpbnds
     * wifn b nodf fxpbnds
     * wifn b nodf fxpbnds
     * tif trff dbn usf sdrolling to mbkf
     * tif trff dbn usf sdrolling to mbkf
     * tif trff dbn usf sdrolling to mbkf
     * tif trff dbn usf sdrolling to mbkf
     * tif trff dbn usf sdrolling to mbkf
     * tif mbximum possiblf numbfr of tif nodf's dfsdfndbnts visiblf.
     * tif mbximum possiblf numbfr of tif nodf's dfsdfndbnts visiblf.
     * tif mbximum possiblf numbfr of tif nodf's dfsdfndbnts visiblf.
     * tif mbximum possiblf numbfr of tif nodf's dfsdfndbnts visiblf.
     * tif mbximum possiblf numbfr of tif nodf's dfsdfndbnts visiblf.
     * In somf look bnd fffls, trffs migit not nffd to sdroll wifn fxpbndfd;
     * In somf look bnd fffls, trffs migit not nffd to sdroll wifn fxpbndfd;
     * In somf look bnd fffls, trffs migit not nffd to sdroll wifn fxpbndfd;
     * In somf look bnd fffls, trffs migit not nffd to sdroll wifn fxpbndfd;
     * In somf look bnd fffls, trffs migit not nffd to sdroll wifn fxpbndfd;
     * tiosf look bnd fffls will ignorf tiis propfrty.
     * tiosf look bnd fffls will ignorf tiis propfrty.
     * tiosf look bnd fffls will ignorf tiis propfrty.
     * tiosf look bnd fffls will ignorf tiis propfrty.
     * tiosf look bnd fffls will ignorf tiis propfrty.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwVbluf <dodf>fblsf</dodf> to disbblf sdrolling on fxpbnsion;
     * @pbrbm nfwVbluf <dodf>fblsf</dodf> to disbblf sdrolling on fxpbnsion;
     * @pbrbm nfwVbluf <dodf>fblsf</dodf> to disbblf sdrolling on fxpbnsion;
     * @pbrbm nfwVbluf <dodf>fblsf</dodf> to disbblf sdrolling on fxpbnsion;
     * @pbrbm nfwVbluf <dodf>fblsf</dodf> to disbblf sdrolling on fxpbnsion;
     *                 <dodf>truf</dodf> to fnbblf it
     *                 <dodf>truf</dodf> to fnbblf it
     *                 <dodf>truf</dodf> to fnbblf it
     *                 <dodf>truf</dodf> to fnbblf it
     *                 <dodf>truf</dodf> to fnbblf it
     * @sff #gftSdrollsOnExpbnd
     * @sff #gftSdrollsOnExpbnd
     * @sff #gftSdrollsOnExpbnd
     * @sff #gftSdrollsOnExpbnd
     * @sff #gftSdrollsOnExpbnd
     *
     *
     *
     *
     *
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Indidbtfs if b nodf dfsdfndbnt siould bf sdrollfd wifn fxpbndfd.
     *  dfsdription: Indidbtfs if b nodf dfsdfndbnt siould bf sdrollfd wifn fxpbndfd.
     *  dfsdription: Indidbtfs if b nodf dfsdfndbnt siould bf sdrollfd wifn fxpbndfd.
     *  dfsdription: Indidbtfs if b nodf dfsdfndbnt siould bf sdrollfd wifn fxpbndfd.
     *  dfsdription: Indidbtfs if b nodf dfsdfndbnt siould bf sdrollfd wifn fxpbndfd.
     */
     */
     */
     */
     */
    publid void sftSdrollsOnExpbnd(boolfbn nfwVbluf) {
    publid void sftSdrollsOnExpbnd(boolfbn nfwVbluf) {
    publid void sftSdrollsOnExpbnd(boolfbn nfwVbluf) {
    publid void sftSdrollsOnExpbnd(boolfbn nfwVbluf) {
    publid void sftSdrollsOnExpbnd(boolfbn nfwVbluf) {
        boolfbn           oldVbluf = sdrollsOnExpbnd;
        boolfbn           oldVbluf = sdrollsOnExpbnd;
        boolfbn           oldVbluf = sdrollsOnExpbnd;
        boolfbn           oldVbluf = sdrollsOnExpbnd;
        boolfbn           oldVbluf = sdrollsOnExpbnd;





        sdrollsOnExpbnd = nfwVbluf;
        sdrollsOnExpbnd = nfwVbluf;
        sdrollsOnExpbnd = nfwVbluf;
        sdrollsOnExpbnd = nfwVbluf;
        sdrollsOnExpbnd = nfwVbluf;
        sdrollsOnExpbndSft = truf;
        sdrollsOnExpbndSft = truf;
        sdrollsOnExpbndSft = truf;
        sdrollsOnExpbndSft = truf;
        sdrollsOnExpbndSft = truf;
        firfPropfrtyCibngf(SCROLLS_ON_EXPAND_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SCROLLS_ON_EXPAND_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SCROLLS_ON_EXPAND_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SCROLLS_ON_EXPAND_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SCROLLS_ON_EXPAND_PROPERTY, oldVbluf,
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty.
     * Rfturns tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty.
     *
     *
     *
     *
     *
     * @rfturn tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty
     * @rfturn tif vbluf of tif <dodf>sdrollsOnExpbnd</dodf> propfrty
     */
     */
     */
     */
     */
    publid boolfbn gftSdrollsOnExpbnd() {
    publid boolfbn gftSdrollsOnExpbnd() {
    publid boolfbn gftSdrollsOnExpbnd() {
    publid boolfbn gftSdrollsOnExpbnd() {
    publid boolfbn gftSdrollsOnExpbnd() {
        rfturn sdrollsOnExpbnd;
        rfturn sdrollsOnExpbnd;
        rfturn sdrollsOnExpbnd;
        rfturn sdrollsOnExpbnd;
        rfturn sdrollsOnExpbnd;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif numbfr of mousf dlidks bfforf b nodf will fxpbnd or dlosf.
     * Sfts tif numbfr of mousf dlidks bfforf b nodf will fxpbnd or dlosf.
     * Sfts tif numbfr of mousf dlidks bfforf b nodf will fxpbnd or dlosf.
     * Sfts tif numbfr of mousf dlidks bfforf b nodf will fxpbnd or dlosf.
     * Sfts tif numbfr of mousf dlidks bfforf b nodf will fxpbnd or dlosf.
     * Tif dffbult is two.
     * Tif dffbult is two.
     * Tif dffbult is two.
     * Tif dffbult is two.
     * Tif dffbult is two.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm dlidkCount tif numbfr of mousf dlidks to gft b nodf fxpbndfd or dlosfd
     * @pbrbm dlidkCount tif numbfr of mousf dlidks to gft b nodf fxpbndfd or dlosfd
     * @pbrbm dlidkCount tif numbfr of mousf dlidks to gft b nodf fxpbndfd or dlosfd
     * @pbrbm dlidkCount tif numbfr of mousf dlidks to gft b nodf fxpbndfd or dlosfd
     * @pbrbm dlidkCount tif numbfr of mousf dlidks to gft b nodf fxpbndfd or dlosfd
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Numbfr of dlidks bfforf b nodf will fxpbnd/dollbpsf.
     *  dfsdription: Numbfr of dlidks bfforf b nodf will fxpbnd/dollbpsf.
     *  dfsdription: Numbfr of dlidks bfforf b nodf will fxpbnd/dollbpsf.
     *  dfsdription: Numbfr of dlidks bfforf b nodf will fxpbnd/dollbpsf.
     *  dfsdription: Numbfr of dlidks bfforf b nodf will fxpbnd/dollbpsf.
     */
     */
     */
     */
     */
    publid void sftTogglfClidkCount(int dlidkCount) {
    publid void sftTogglfClidkCount(int dlidkCount) {
    publid void sftTogglfClidkCount(int dlidkCount) {
    publid void sftTogglfClidkCount(int dlidkCount) {
    publid void sftTogglfClidkCount(int dlidkCount) {
        int         oldCount = togglfClidkCount;
        int         oldCount = togglfClidkCount;
        int         oldCount = togglfClidkCount;
        int         oldCount = togglfClidkCount;
        int         oldCount = togglfClidkCount;





        togglfClidkCount = dlidkCount;
        togglfClidkCount = dlidkCount;
        togglfClidkCount = dlidkCount;
        togglfClidkCount = dlidkCount;
        togglfClidkCount = dlidkCount;
        firfPropfrtyCibngf(TOGGLE_CLICK_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(TOGGLE_CLICK_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(TOGGLE_CLICK_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(TOGGLE_CLICK_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(TOGGLE_CLICK_COUNT_PROPERTY, oldCount,
                           dlidkCount);
                           dlidkCount);
                           dlidkCount);
                           dlidkCount);
                           dlidkCount);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of mousf dlidks nffdfd to fxpbnd or dlosf b nodf.
     * Rfturns tif numbfr of mousf dlidks nffdfd to fxpbnd or dlosf b nodf.
     * Rfturns tif numbfr of mousf dlidks nffdfd to fxpbnd or dlosf b nodf.
     * Rfturns tif numbfr of mousf dlidks nffdfd to fxpbnd or dlosf b nodf.
     * Rfturns tif numbfr of mousf dlidks nffdfd to fxpbnd or dlosf b nodf.
     *
     *
     *
     *
     *
     * @rfturn numbfr of mousf dlidks bfforf nodf is fxpbndfd
     * @rfturn numbfr of mousf dlidks bfforf nodf is fxpbndfd
     * @rfturn numbfr of mousf dlidks bfforf nodf is fxpbndfd
     * @rfturn numbfr of mousf dlidks bfforf nodf is fxpbndfd
     * @rfturn numbfr of mousf dlidks bfforf nodf is fxpbndfd
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    publid int gftTogglfClidkCount() {
    publid int gftTogglfClidkCount() {
    publid int gftTogglfClidkCount() {
    publid int gftTogglfClidkCount() {
    publid int gftTogglfClidkCount() {
        rfturn togglfClidkCount;
        rfturn togglfClidkCount;
        rfturn togglfClidkCount;
        rfturn togglfClidkCount;
        rfturn togglfClidkCount;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Configurfs tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty. If
     * Configurfs tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty. If
     * Configurfs tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty. If
     * Configurfs tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty. If
     * Configurfs tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty. If
     * truf, bny timf tif sflfdtion is dibngfd, fitifr vib tif
     * truf, bny timf tif sflfdtion is dibngfd, fitifr vib tif
     * truf, bny timf tif sflfdtion is dibngfd, fitifr vib tif
     * truf, bny timf tif sflfdtion is dibngfd, fitifr vib tif
     * truf, bny timf tif sflfdtion is dibngfd, fitifr vib tif
     * <dodf>TrffSflfdtionModfl</dodf>, or tif dovfr mftiods providfd by
     * <dodf>TrffSflfdtionModfl</dodf>, or tif dovfr mftiods providfd by
     * <dodf>TrffSflfdtionModfl</dodf>, or tif dovfr mftiods providfd by
     * <dodf>TrffSflfdtionModfl</dodf>, or tif dovfr mftiods providfd by
     * <dodf>TrffSflfdtionModfl</dodf>, or tif dovfr mftiods providfd by
     * <dodf>JTrff</dodf>, tif <dodf>TrffPbti</dodf>s pbrfnts will bf
     * <dodf>JTrff</dodf>, tif <dodf>TrffPbti</dodf>s pbrfnts will bf
     * <dodf>JTrff</dodf>, tif <dodf>TrffPbti</dodf>s pbrfnts will bf
     * <dodf>JTrff</dodf>, tif <dodf>TrffPbti</dodf>s pbrfnts will bf
     * <dodf>JTrff</dodf>, tif <dodf>TrffPbti</dodf>s pbrfnts will bf
     * fxpbndfd to mbkf tifm visiblf (visiblf mfbning tif pbrfnt pbti is
     * fxpbndfd to mbkf tifm visiblf (visiblf mfbning tif pbrfnt pbti is
     * fxpbndfd to mbkf tifm visiblf (visiblf mfbning tif pbrfnt pbti is
     * fxpbndfd to mbkf tifm visiblf (visiblf mfbning tif pbrfnt pbti is
     * fxpbndfd to mbkf tifm visiblf (visiblf mfbning tif pbrfnt pbti is
     * fxpbndfd, not nfdfssbrily in tif visiblf rfdtbnglf of tif
     * fxpbndfd, not nfdfssbrily in tif visiblf rfdtbnglf of tif
     * fxpbndfd, not nfdfssbrily in tif visiblf rfdtbnglf of tif
     * fxpbndfd, not nfdfssbrily in tif visiblf rfdtbnglf of tif
     * fxpbndfd, not nfdfssbrily in tif visiblf rfdtbnglf of tif
     * <dodf>JTrff</dodf>). If fblsf, wifn tif sflfdtion
     * <dodf>JTrff</dodf>). If fblsf, wifn tif sflfdtion
     * <dodf>JTrff</dodf>). If fblsf, wifn tif sflfdtion
     * <dodf>JTrff</dodf>). If fblsf, wifn tif sflfdtion
     * <dodf>JTrff</dodf>). If fblsf, wifn tif sflfdtion
     * dibngfs tif nodfs pbrfnt is not mbdf visiblf (bll its pbrfnts fxpbndfd).
     * dibngfs tif nodfs pbrfnt is not mbdf visiblf (bll its pbrfnts fxpbndfd).
     * dibngfs tif nodfs pbrfnt is not mbdf visiblf (bll its pbrfnts fxpbndfd).
     * dibngfs tif nodfs pbrfnt is not mbdf visiblf (bll its pbrfnts fxpbndfd).
     * dibngfs tif nodfs pbrfnt is not mbdf visiblf (bll its pbrfnts fxpbndfd).
     * Tiis is usfful if you wisi to ibvf your sflfdtion modfl mbintbin pbtis
     * Tiis is usfful if you wisi to ibvf your sflfdtion modfl mbintbin pbtis
     * Tiis is usfful if you wisi to ibvf your sflfdtion modfl mbintbin pbtis
     * Tiis is usfful if you wisi to ibvf your sflfdtion modfl mbintbin pbtis
     * Tiis is usfful if you wisi to ibvf your sflfdtion modfl mbintbin pbtis
     * tibt brf not blwbys visiblf (bll pbrfnts fxpbndfd).
     * tibt brf not blwbys visiblf (bll pbrfnts fxpbndfd).
     * tibt brf not blwbys visiblf (bll pbrfnts fxpbndfd).
     * tibt brf not blwbys visiblf (bll pbrfnts fxpbndfd).
     * tibt brf not blwbys visiblf (bll pbrfnts fxpbndfd).
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwVbluf tif nfw vbluf for <dodf>fxpbndsSflfdtfdPbtis</dodf>
     * @pbrbm nfwVbluf tif nfw vbluf for <dodf>fxpbndsSflfdtfdPbtis</dodf>
     * @pbrbm nfwVbluf tif nfw vbluf for <dodf>fxpbndsSflfdtfdPbtis</dodf>
     * @pbrbm nfwVbluf tif nfw vbluf for <dodf>fxpbndsSflfdtfdPbtis</dodf>
     * @pbrbm nfwVbluf tif nfw vbluf for <dodf>fxpbndsSflfdtfdPbtis</dodf>
     *
     *
     *
     *
     *
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Indidbtfs wiftifr dibngfs to tif sflfdtion siould mbkf
     *  dfsdription: Indidbtfs wiftifr dibngfs to tif sflfdtion siould mbkf
     *  dfsdription: Indidbtfs wiftifr dibngfs to tif sflfdtion siould mbkf
     *  dfsdription: Indidbtfs wiftifr dibngfs to tif sflfdtion siould mbkf
     *  dfsdription: Indidbtfs wiftifr dibngfs to tif sflfdtion siould mbkf
     *               tif pbrfnt of tif pbti visiblf.
     *               tif pbrfnt of tif pbti visiblf.
     *               tif pbrfnt of tif pbti visiblf.
     *               tif pbrfnt of tif pbti visiblf.
     *               tif pbrfnt of tif pbti visiblf.
     */
     */
     */
     */
     */
    publid void sftExpbndsSflfdtfdPbtis(boolfbn nfwVbluf) {
    publid void sftExpbndsSflfdtfdPbtis(boolfbn nfwVbluf) {
    publid void sftExpbndsSflfdtfdPbtis(boolfbn nfwVbluf) {
    publid void sftExpbndsSflfdtfdPbtis(boolfbn nfwVbluf) {
    publid void sftExpbndsSflfdtfdPbtis(boolfbn nfwVbluf) {
        boolfbn         oldVbluf = fxpbndsSflfdtfdPbtis;
        boolfbn         oldVbluf = fxpbndsSflfdtfdPbtis;
        boolfbn         oldVbluf = fxpbndsSflfdtfdPbtis;
        boolfbn         oldVbluf = fxpbndsSflfdtfdPbtis;
        boolfbn         oldVbluf = fxpbndsSflfdtfdPbtis;





        fxpbndsSflfdtfdPbtis = nfwVbluf;
        fxpbndsSflfdtfdPbtis = nfwVbluf;
        fxpbndsSflfdtfdPbtis = nfwVbluf;
        fxpbndsSflfdtfdPbtis = nfwVbluf;
        fxpbndsSflfdtfdPbtis = nfwVbluf;
        firfPropfrtyCibngf(EXPANDS_SELECTED_PATHS_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(EXPANDS_SELECTED_PATHS_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(EXPANDS_SELECTED_PATHS_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(EXPANDS_SELECTED_PATHS_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(EXPANDS_SELECTED_PATHS_PROPERTY, oldVbluf,
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
                           nfwVbluf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty.
     * Rfturns tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty.
     * Rfturns tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty.
     * Rfturns tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty.
     * Rfturns tif <dodf>fxpbndsSflfdtfdPbtis</dodf> propfrty.
     * @rfturn truf if sflfdtion dibngfs rfsult in tif pbrfnt pbti bfing
     * @rfturn truf if sflfdtion dibngfs rfsult in tif pbrfnt pbti bfing
     * @rfturn truf if sflfdtion dibngfs rfsult in tif pbrfnt pbti bfing
     * @rfturn truf if sflfdtion dibngfs rfsult in tif pbrfnt pbti bfing
     * @rfturn truf if sflfdtion dibngfs rfsult in tif pbrfnt pbti bfing
     *         fxpbndfd
     *         fxpbndfd
     *         fxpbndfd
     *         fxpbndfd
     *         fxpbndfd
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sff #sftExpbndsSflfdtfdPbtis
     * @sff #sftExpbndsSflfdtfdPbtis
     * @sff #sftExpbndsSflfdtfdPbtis
     * @sff #sftExpbndsSflfdtfdPbtis
     * @sff #sftExpbndsSflfdtfdPbtis
     */
     */
     */
     */
     */
    publid boolfbn gftExpbndsSflfdtfdPbtis() {
    publid boolfbn gftExpbndsSflfdtfdPbtis() {
    publid boolfbn gftExpbndsSflfdtfdPbtis() {
    publid boolfbn gftExpbndsSflfdtfdPbtis() {
    publid boolfbn gftExpbndsSflfdtfdPbtis() {
        rfturn fxpbndsSflfdtfdPbtis;
        rfturn fxpbndsSflfdtfdPbtis;
        rfturn fxpbndsSflfdtfdPbtis;
        rfturn fxpbndsSflfdtfdPbtis;
        rfturn fxpbndsSflfdtfdPbtis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * Turns on or off butombtid drbg ibndling. In ordfr to fnbblf butombtid
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * drbg ibndling, tiis propfrty siould bf sft to {@dodf truf}, bnd tif
     * trff's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * trff's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * trff's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * trff's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * trff's {@dodf TrbnsffrHbndlfr} nffds to bf {@dodf non-null}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * Tif dffbult vbluf of tif {@dodf drbgEnbblfd} propfrty is {@dodf fblsf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * Tif job of ionoring tiis propfrty, bnd rfdognizing b usfr drbg gfsturf,
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif trff's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif trff's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif trff's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif trff's
     * lifs witi tif look bnd fffl implfmfntbtion, bnd in pbrtidulbr, tif trff's
     * {@dodf TrffUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TrffUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TrffUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TrffUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * {@dodf TrffUI}. Wifn butombtid drbg ibndling is fnbblfd, most look bnd
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * fffls (indluding tiosf tibt subdlbss {@dodf BbsidLookAndFffl}) bfgin b
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * drbg bnd drop opfrbtion wifnfvfr tif usfr prfssfs tif mousf button ovfr
     * bn itfm bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * bn itfm bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * bn itfm bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * bn itfm bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * bn itfm bnd tifn movfs tif mousf b ffw pixfls. Sftting tiis propfrty to
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * {@dodf truf} dbn tifrfforf ibvf b subtlf ffffdt on iow sflfdtions bfibvf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * If b look bnd fffl is usfd tibt ignorfs tiis propfrty, you dbn still
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * bfgin b drbg bnd drop opfrbtion by dblling {@dodf fxportAsDrbg} on tif
     * trff's {@dodf TrbnsffrHbndlfr}.
     * trff's {@dodf TrbnsffrHbndlfr}.
     * trff's {@dodf TrbnsffrHbndlfr}.
     * trff's {@dodf TrbnsffrHbndlfr}.
     * trff's {@dodf TrbnsffrHbndlfr}.
     *
     *
     *
     *
     *
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @pbrbm b wiftifr or not to fnbblf butombtid drbg ibndling
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     * @fxdfption HfbdlfssExdfption if
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>b</dodf> is <dodf>truf</dodf> bnd
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            <dodf>GrbpiidsEnvironmfnt.isHfbdlfss()</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     *            rfturns <dodf>truf</dodf>
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff jbvb.bwt.GrbpiidsEnvironmfnt#isHfbdlfss
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #gftDrbgEnbblfd
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     *
     *
     *
     *
     *
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *  dfsdription: dftfrminfs wiftifr butombtid drbg ibndling is fnbblfd
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     *        bound: fblsf
     */
     */
     */
     */
     */
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
    publid void sftDrbgEnbblfd(boolfbn b) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
        if (b && GrbpiidsEnvironmfnt.isHfbdlfss()) {
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
            tirow nfw HfbdlfssExdfption();
        }
        }
        }
        }
        }
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
        drbgEnbblfd = b;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     * Rfturns wiftifr or not butombtid drbg ibndling is fnbblfd.
     *
     *
     *
     *
     *
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @rfturn tif vbluf of tif {@dodf drbgEnbblfd} propfrty
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sff #sftDrbgEnbblfd
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
    publid boolfbn gftDrbgEnbblfd() {
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
        rfturn drbgEnbblfd;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * Sfts tif drop modf for tiis domponfnt. For bbdkwbrd dompbtibility,
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * tif dffbult for tiis propfrty is <dodf>DropModf.USE_SELECTION</dodf>.
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * Usbgf of onf of tif otifr modfs is rfdommfndfd, iowfvfr, for bn
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * improvfd usfr fxpfrifndf. <dodf>DropModf.ON</dodf>, for instbndf,
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * offfrs similbr bfibvior of siowing itfms bs sflfdtfd, but dofs so witiout
     * bfffdting tif bdtubl sflfdtion in tif trff.
     * bfffdting tif bdtubl sflfdtion in tif trff.
     * bfffdting tif bdtubl sflfdtion in tif trff.
     * bfffdting tif bdtubl sflfdtion in tif trff.
     * bfffdting tif bdtubl sflfdtion in tif trff.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <dodf>JTrff</dodf> supports tif following drop modfs:
     * <dodf>JTrff</dodf> supports tif following drop modfs:
     * <dodf>JTrff</dodf> supports tif following drop modfs:
     * <dodf>JTrff</dodf> supports tif following drop modfs:
     * <dodf>JTrff</dodf> supports tif following drop modfs:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.USE_SELECTION</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.ON</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     *    <li><dodf>DropModf.ON_OR_INSERT</dodf></li>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * Tif drop modf is only mfbningful if tiis domponfnt ibs b
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     * <dodf>TrbnsffrHbndlfr</dodf> tibt bddfpts drops.
     *
     *
     *
     *
     *
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @pbrbm dropModf tif drop modf to usf
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     * @tirows IllfgblArgumfntExdfption if tif drop modf is unsupportfd
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     *         or <dodf>null</dodf>
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropModf
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #gftDropLodbtion
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sff TrbnsffrHbndlfr
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
    publid finbl void sftDropModf(DropModf dropModf) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
        if (dropModf != null) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
            switdi (dropModf) {
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf USE_SELECTION:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf ON:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                dbsf ON_OR_INSERT:
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    tiis.dropModf = dropModf;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
                    rfturn;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for trff");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for trff");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for trff");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for trff");
        tirow nfw IllfgblArgumfntExdfption(dropModf + ": Unsupportfd drop modf for trff");
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     * Rfturns tif drop modf for tiis domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @rfturn tif drop modf for tiis domponfnt
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
    publid finbl DropModf gftDropModf() {
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
        rfturn dropModf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * Cbldulbtfs b drop lodbtion in tiis domponfnt, rfprfsfnting wifrf b
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     * drop bt tif givfn point siould insfrt dbtb.
     *
     *
     *
     *
     *
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @pbrbm p tif point to dbldulbtf b drop lodbtion for
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     * @rfturn tif drop lodbtion, or <dodf>null</dodf>
     */
     */
     */
     */
     */
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
    DropLodbtion dropLodbtionForPoint(Point p) {
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;
        DropLodbtion lodbtion = null;





        int row = gftClosfstRowForLodbtion(p.x, p.y);
        int row = gftClosfstRowForLodbtion(p.x, p.y);
        int row = gftClosfstRowForLodbtion(p.x, p.y);
        int row = gftClosfstRowForLodbtion(p.x, p.y);
        int row = gftClosfstRowForLodbtion(p.x, p.y);
        Rfdtbnglf bounds = gftRowBounds(row);
        Rfdtbnglf bounds = gftRowBounds(row);
        Rfdtbnglf bounds = gftRowBounds(row);
        Rfdtbnglf bounds = gftRowBounds(row);
        Rfdtbnglf bounds = gftRowBounds(row);
        TrffModfl modfl = gftModfl();
        TrffModfl modfl = gftModfl();
        TrffModfl modfl = gftModfl();
        TrffModfl modfl = gftModfl();
        TrffModfl modfl = gftModfl();
        Objfdt root = (modfl == null) ? null : modfl.gftRoot();
        Objfdt root = (modfl == null) ? null : modfl.gftRoot();
        Objfdt root = (modfl == null) ? null : modfl.gftRoot();
        Objfdt root = (modfl == null) ? null : modfl.gftRoot();
        Objfdt root = (modfl == null) ? null : modfl.gftRoot();
        TrffPbti rootPbti = (root == null) ? null : nfw TrffPbti(root);
        TrffPbti rootPbti = (root == null) ? null : nfw TrffPbti(root);
        TrffPbti rootPbti = (root == null) ? null : nfw TrffPbti(root);
        TrffPbti rootPbti = (root == null) ? null : nfw TrffPbti(root);
        TrffPbti rootPbti = (root == null) ? null : nfw TrffPbti(root);





        TrffPbti diild;
        TrffPbti diild;
        TrffPbti diild;
        TrffPbti diild;
        TrffPbti diild;
        TrffPbti pbrfnt;
        TrffPbti pbrfnt;
        TrffPbti pbrfnt;
        TrffPbti pbrfnt;
        TrffPbti pbrfnt;
        boolfbn outsidf = row == -1
        boolfbn outsidf = row == -1
        boolfbn outsidf = row == -1
        boolfbn outsidf = row == -1
        boolfbn outsidf = row == -1
                          || p.y < bounds.y
                          || p.y < bounds.y
                          || p.y < bounds.y
                          || p.y < bounds.y
                          || p.y < bounds.y
                          || p.y >= bounds.y + bounds.ifigit;
                          || p.y >= bounds.y + bounds.ifigit;
                          || p.y >= bounds.y + bounds.ifigit;
                          || p.y >= bounds.y + bounds.ifigit;
                          || p.y >= bounds.y + bounds.ifigit;





        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
        switdi(dropModf) {
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf USE_SELECTION:
            dbsf ON:
            dbsf ON:
            dbsf ON:
            dbsf ON:
            dbsf ON:
                if (outsidf) {
                if (outsidf) {
                if (outsidf) {
                if (outsidf) {
                if (outsidf) {
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                }
                }
                }
                }
                }





                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
            dbsf INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
            dbsf ON_OR_INSERT:
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                if (row == -1) {
                    if (root != null && !modfl.isLfbf(root) && isExpbndfd(rootPbti)) {
                    if (root != null && !modfl.isLfbf(root) && isExpbndfd(rootPbti)) {
                    if (root != null && !modfl.isLfbf(root) && isExpbndfd(rootPbti)) {
                    if (root != null && !modfl.isLfbf(root) && isExpbndfd(rootPbti)) {
                    if (root != null && !modfl.isLfbf(root) && isExpbndfd(rootPbti)) {
                        lodbtion = nfw DropLodbtion(p, rootPbti, 0);
                        lodbtion = nfw DropLodbtion(p, rootPbti, 0);
                        lodbtion = nfw DropLodbtion(p, rootPbti, 0);
                        lodbtion = nfw DropLodbtion(p, rootPbti, 0);
                        lodbtion = nfw DropLodbtion(p, rootPbti, 0);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        lodbtion = nfw DropLodbtion(p, null, -1);
                        lodbtion = nfw DropLodbtion(p, null, -1);
                        lodbtion = nfw DropLodbtion(p, null, -1);
                        lodbtion = nfw DropLodbtion(p, null, -1);
                        lodbtion = nfw DropLodbtion(p, null, -1);
                    }
                    }
                    }
                    }
                    }





                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                boolfbn difdkOn = dropModf == DropModf.ON_OR_INSERT
                boolfbn difdkOn = dropModf == DropModf.ON_OR_INSERT
                boolfbn difdkOn = dropModf == DropModf.ON_OR_INSERT
                boolfbn difdkOn = dropModf == DropModf.ON_OR_INSERT
                boolfbn difdkOn = dropModf == DropModf.ON_OR_INSERT
                                  || !modfl.isLfbf(gftPbtiForRow(row).gftLbstPbtiComponfnt());
                                  || !modfl.isLfbf(gftPbtiForRow(row).gftLbstPbtiComponfnt());
                                  || !modfl.isLfbf(gftPbtiForRow(row).gftLbstPbtiComponfnt());
                                  || !modfl.isLfbf(gftPbtiForRow(row).gftLbstPbtiComponfnt());
                                  || !modfl.isLfbf(gftPbtiForRow(row).gftLbstPbtiComponfnt());





                Sfdtion sfdtion = SwingUtilitifs2.lifsInVfrtidbl(bounds, p, difdkOn);
                Sfdtion sfdtion = SwingUtilitifs2.lifsInVfrtidbl(bounds, p, difdkOn);
                Sfdtion sfdtion = SwingUtilitifs2.lifsInVfrtidbl(bounds, p, difdkOn);
                Sfdtion sfdtion = SwingUtilitifs2.lifsInVfrtidbl(bounds, p, difdkOn);
                Sfdtion sfdtion = SwingUtilitifs2.lifsInVfrtidbl(bounds, p, difdkOn);
                if(sfdtion == LEADING) {
                if(sfdtion == LEADING) {
                if(sfdtion == LEADING) {
                if(sfdtion == LEADING) {
                if(sfdtion == LEADING) {
                    diild = gftPbtiForRow(row);
                    diild = gftPbtiForRow(row);
                    diild = gftPbtiForRow(row);
                    diild = gftPbtiForRow(row);
                    diild = gftPbtiForRow(row);
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                } flsf if (sfdtion == TRAILING) {
                } flsf if (sfdtion == TRAILING) {
                } flsf if (sfdtion == TRAILING) {
                } flsf if (sfdtion == TRAILING) {
                } flsf if (sfdtion == TRAILING) {
                    int indfx = row + 1;
                    int indfx = row + 1;
                    int indfx = row + 1;
                    int indfx = row + 1;
                    int indfx = row + 1;
                    if (indfx >= gftRowCount()) {
                    if (indfx >= gftRowCount()) {
                    if (indfx >= gftRowCount()) {
                    if (indfx >= gftRowCount()) {
                    if (indfx >= gftRowCount()) {
                        if (modfl.isLfbf(root) || !isExpbndfd(rootPbti)) {
                        if (modfl.isLfbf(root) || !isExpbndfd(rootPbti)) {
                        if (modfl.isLfbf(root) || !isExpbndfd(rootPbti)) {
                        if (modfl.isLfbf(root) || !isExpbndfd(rootPbti)) {
                        if (modfl.isLfbf(root) || !isExpbndfd(rootPbti)) {
                            lodbtion = nfw DropLodbtion(p, null, -1);
                            lodbtion = nfw DropLodbtion(p, null, -1);
                            lodbtion = nfw DropLodbtion(p, null, -1);
                            lodbtion = nfw DropLodbtion(p, null, -1);
                            lodbtion = nfw DropLodbtion(p, null, -1);
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            pbrfnt = rootPbti;
                            pbrfnt = rootPbti;
                            pbrfnt = rootPbti;
                            pbrfnt = rootPbti;
                            pbrfnt = rootPbti;
                            indfx = modfl.gftCiildCount(root);
                            indfx = modfl.gftCiildCount(root);
                            indfx = modfl.gftCiildCount(root);
                            indfx = modfl.gftCiildCount(root);
                            indfx = modfl.gftCiildCount(root);
                            lodbtion = nfw DropLodbtion(p, pbrfnt, indfx);
                            lodbtion = nfw DropLodbtion(p, pbrfnt, indfx);
                            lodbtion = nfw DropLodbtion(p, pbrfnt, indfx);
                            lodbtion = nfw DropLodbtion(p, pbrfnt, indfx);
                            lodbtion = nfw DropLodbtion(p, pbrfnt, indfx);
                        }
                        }
                        }
                        }
                        }





                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    }
                    }
                    }
                    }
                    }





                    diild = gftPbtiForRow(indfx);
                    diild = gftPbtiForRow(indfx);
                    diild = gftPbtiForRow(indfx);
                    diild = gftPbtiForRow(indfx);
                    diild = gftPbtiForRow(indfx);
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                    pbrfnt = diild.gftPbrfntPbti();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    bssfrt difdkOn;
                    bssfrt difdkOn;
                    bssfrt difdkOn;
                    bssfrt difdkOn;
                    bssfrt difdkOn;
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    lodbtion = nfw DropLodbtion(p, gftPbtiForRow(row), -1);
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }





                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    lodbtion = nfw DropLodbtion(p, pbrfnt,
                    lodbtion = nfw DropLodbtion(p, pbrfnt,
                    lodbtion = nfw DropLodbtion(p, pbrfnt,
                    lodbtion = nfw DropLodbtion(p, pbrfnt,
                    lodbtion = nfw DropLodbtion(p, pbrfnt,
                        modfl.gftIndfxOfCiild(pbrfnt.gftLbstPbtiComponfnt(),
                        modfl.gftIndfxOfCiild(pbrfnt.gftLbstPbtiComponfnt(),
                        modfl.gftIndfxOfCiild(pbrfnt.gftLbstPbtiComponfnt(),
                        modfl.gftIndfxOfCiild(pbrfnt.gftLbstPbtiComponfnt(),
                        modfl.gftIndfxOfCiild(pbrfnt.gftLbstPbtiComponfnt(),
                                              diild.gftLbstPbtiComponfnt()));
                                              diild.gftLbstPbtiComponfnt()));
                                              diild.gftLbstPbtiComponfnt()));
                                              diild.gftLbstPbtiComponfnt()));
                                              diild.gftLbstPbtiComponfnt()));
                } flsf if (difdkOn || !modfl.isLfbf(root)) {
                } flsf if (difdkOn || !modfl.isLfbf(root)) {
                } flsf if (difdkOn || !modfl.isLfbf(root)) {
                } flsf if (difdkOn || !modfl.isLfbf(root)) {
                } flsf if (difdkOn || !modfl.isLfbf(root)) {
                    lodbtion = nfw DropLodbtion(p, rootPbti, -1);
                    lodbtion = nfw DropLodbtion(p, rootPbti, -1);
                    lodbtion = nfw DropLodbtion(p, rootPbti, -1);
                    lodbtion = nfw DropLodbtion(p, rootPbti, -1);
                    lodbtion = nfw DropLodbtion(p, rootPbti, -1);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                    lodbtion = nfw DropLodbtion(p, null, -1);
                }
                }
                }
                }
                }





                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dffbult:
            dffbult:
            dffbult:
            dffbult:
            dffbult:
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
                bssfrt fblsf : "Unfxpfdtfd drop modf";
        }
        }
        }
        }
        }





        if (outsidf || row != fxpbndRow) {
        if (outsidf || row != fxpbndRow) {
        if (outsidf || row != fxpbndRow) {
        if (outsidf || row != fxpbndRow) {
        if (outsidf || row != fxpbndRow) {
            dbndflDropTimfr();
            dbndflDropTimfr();
            dbndflDropTimfr();
            dbndflDropTimfr();
            dbndflDropTimfr();
        }
        }
        }
        }
        }





        if (!outsidf && row != fxpbndRow) {
        if (!outsidf && row != fxpbndRow) {
        if (!outsidf && row != fxpbndRow) {
        if (!outsidf && row != fxpbndRow) {
        if (!outsidf && row != fxpbndRow) {
            if (isCollbpsfd(row)) {
            if (isCollbpsfd(row)) {
            if (isCollbpsfd(row)) {
            if (isCollbpsfd(row)) {
            if (isCollbpsfd(row)) {
                fxpbndRow = row;
                fxpbndRow = row;
                fxpbndRow = row;
                fxpbndRow = row;
                fxpbndRow = row;
                stbrtDropTimfr();
                stbrtDropTimfr();
                stbrtDropTimfr();
                stbrtDropTimfr();
                stbrtDropTimfr();
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
        rfturn lodbtion;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * Cbllfd to sft or dlfbr tif drop lodbtion during b DnD opfrbtion.
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * In somf dbsfs, tif domponfnt mby nffd to usf it's intfrnbl sflfdtion
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tfmporbrily to indidbtf tif drop lodbtion. To iflp fbdilitbtf tiis,
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * tiis mftiod rfturns bnd bddfpts bs b pbrbmftfr b stbtf objfdt.
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * Tiis stbtf objfdt dbn bf usfd to storf, bnd lbtfr rfstorf, tif sflfdtion
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * stbtf. Wibtfvfr tiis mftiod rfturns will bf pbssfd bbdk to it in
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * futurf dblls, bs tif stbtf pbrbmftfr. If it wbnts tif DnD systfm to
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * dontinuf storing tif sbmf stbtf, it must pbss it bbdk fvfry timf.
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * Hfrf's iow tiis is usfd:
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * Lft's sby tibt on tif first dbll to tiis mftiod tif domponfnt dfdidfs
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * to sbvf somf stbtf (bfdbusf it is bbout to usf tif sflfdtion to siow
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * b drop indfx). It dbn rfturn b stbtf objfdt to tif dbllfr fndbpsulbting
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * bny sbvfd sflfdtion stbtf. On b sfdond dbll, lft's sby tif drop lodbtion
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * is bfing dibngfd to somftiing flsf. Tif domponfnt dofsn't nffd to
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * rfstorf bnytiing yft, so it simply pbssfs bbdk tif sbmf stbtf objfdt
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * to ibvf tif DnD systfm dontinuf storing it. Finblly, lft's sby tiis
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * mftiod is mfssbgfd witi <dodf>null</dodf>. Tiis mfbns DnD
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * is finisifd witi tiis domponfnt for now, mfbning it siould rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * stbtf. At tiis point, it dbn usf tif stbtf pbrbmftfr to rfstorf
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * sbid stbtf, bnd of doursf rfturn <dodf>null</dodf> sindf tifrf's
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     * no longfr bnytiing to storf.
     *
     *
     *
     *
     *
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     * @pbrbm lodbtion tif drop lodbtion (bs dbldulbtfd by
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        <dodf>dropLodbtionForPoint</dodf>) or <dodf>null</dodf>
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     *        if tifrf's no longfr b vblid drop lodbtion
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     * @pbrbm stbtf tif stbtf objfdt sbvfd fbrlifr for tiis domponfnt,
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     *        or <dodf>null</dodf>
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     * @pbrbm forDrop wiftifr or not tif mftiod is bfing dbllfd bfdbusf bn
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     *        bdtubl drop oddurrfd
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     * @rfturn bny sbvfd stbtf for tiis domponfnt, or <dodf>null</dodf> if nonf
     */
     */
     */
     */
     */
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
    Objfdt sftDropLodbtion(TrbnsffrHbndlfr.DropLodbtion lodbtion,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           Objfdt stbtf,
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {
                           boolfbn forDrop) {





        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        Objfdt rftVbl = null;
        DropLodbtion trffLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion trffLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion trffLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion trffLodbtion = (DropLodbtion)lodbtion;
        DropLodbtion trffLodbtion = (DropLodbtion)lodbtion;





        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
        if (dropModf == DropModf.USE_SELECTION) {
            if (trffLodbtion == null) {
            if (trffLodbtion == null) {
            if (trffLodbtion == null) {
            if (trffLodbtion == null) {
            if (trffLodbtion == null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                if (!forDrop && stbtf != null) {
                    sftSflfdtionPbtis(((TrffPbti[][])stbtf)[0]);
                    sftSflfdtionPbtis(((TrffPbti[][])stbtf)[0]);
                    sftSflfdtionPbtis(((TrffPbti[][])stbtf)[0]);
                    sftSflfdtionPbtis(((TrffPbti[][])stbtf)[0]);
                    sftSflfdtionPbtis(((TrffPbti[][])stbtf)[0]);
                    sftAndiorSflfdtionPbti(((TrffPbti[][])stbtf)[1][0]);
                    sftAndiorSflfdtionPbti(((TrffPbti[][])stbtf)[1][0]);
                    sftAndiorSflfdtionPbti(((TrffPbti[][])stbtf)[1][0]);
                    sftAndiorSflfdtionPbti(((TrffPbti[][])stbtf)[1][0]);
                    sftAndiorSflfdtionPbti(((TrffPbti[][])stbtf)[1][0]);
                    sftLfbdSflfdtionPbti(((TrffPbti[][])stbtf)[1][1]);
                    sftLfbdSflfdtionPbti(((TrffPbti[][])stbtf)[1][1]);
                    sftLfbdSflfdtionPbti(((TrffPbti[][])stbtf)[1][1]);
                    sftLfbdSflfdtionPbti(((TrffPbti[][])stbtf)[1][1]);
                    sftLfbdSflfdtionPbti(((TrffPbti[][])stbtf)[1][1]);
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                if (dropLodbtion == null) {
                    TrffPbti[] pbtis = gftSflfdtionPbtis();
                    TrffPbti[] pbtis = gftSflfdtionPbtis();
                    TrffPbti[] pbtis = gftSflfdtionPbtis();
                    TrffPbti[] pbtis = gftSflfdtionPbtis();
                    TrffPbti[] pbtis = gftSflfdtionPbtis();
                    if (pbtis == null) {
                    if (pbtis == null) {
                    if (pbtis == null) {
                    if (pbtis == null) {
                    if (pbtis == null) {
                        pbtis = nfw TrffPbti[0];
                        pbtis = nfw TrffPbti[0];
                        pbtis = nfw TrffPbti[0];
                        pbtis = nfw TrffPbti[0];
                        pbtis = nfw TrffPbti[0];
                    }
                    }
                    }
                    }
                    }





                    rftVbl = nfw TrffPbti[][] {pbtis,
                    rftVbl = nfw TrffPbti[][] {pbtis,
                    rftVbl = nfw TrffPbti[][] {pbtis,
                    rftVbl = nfw TrffPbti[][] {pbtis,
                    rftVbl = nfw TrffPbti[][] {pbtis,
                            {gftAndiorSflfdtionPbti(), gftLfbdSflfdtionPbti()}};
                            {gftAndiorSflfdtionPbti(), gftLfbdSflfdtionPbti()}};
                            {gftAndiorSflfdtionPbti(), gftLfbdSflfdtionPbti()}};
                            {gftAndiorSflfdtionPbti(), gftLfbdSflfdtionPbti()}};
                            {gftAndiorSflfdtionPbti(), gftLfbdSflfdtionPbti()}};
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                    rftVbl = stbtf;
                }
                }
                }
                }
                }





                sftSflfdtionPbti(trffLodbtion.gftPbti());
                sftSflfdtionPbti(trffLodbtion.gftPbti());
                sftSflfdtionPbti(trffLodbtion.gftPbti());
                sftSflfdtionPbti(trffLodbtion.gftPbti());
                sftSflfdtionPbti(trffLodbtion.gftPbti());
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        DropLodbtion old = dropLodbtion;
        dropLodbtion = trffLodbtion;
        dropLodbtion = trffLodbtion;
        dropLodbtion = trffLodbtion;
        dropLodbtion = trffLodbtion;
        dropLodbtion = trffLodbtion;
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);
        firfPropfrtyCibngf("dropLodbtion", old, dropLodbtion);





        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
        rfturn rftVbl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd to indidbtf to tiis domponfnt tibt DnD is donf.
     * Cbllfd to indidbtf to tiis domponfnt tibt DnD is donf.
     * Cbllfd to indidbtf to tiis domponfnt tibt DnD is donf.
     * Cbllfd to indidbtf to tiis domponfnt tibt DnD is donf.
     * Cbllfd to indidbtf to tiis domponfnt tibt DnD is donf.
     * Allows for us to dbndfl tif fxpbnd timfr.
     * Allows for us to dbndfl tif fxpbnd timfr.
     * Allows for us to dbndfl tif fxpbnd timfr.
     * Allows for us to dbndfl tif fxpbnd timfr.
     * Allows for us to dbndfl tif fxpbnd timfr.
     */
     */
     */
     */
     */
    void dndDonf() {
    void dndDonf() {
    void dndDonf() {
    void dndDonf() {
    void dndDonf() {
        dbndflDropTimfr();
        dbndflDropTimfr();
        dbndflDropTimfr();
        dbndflDropTimfr();
        dbndflDropTimfr();
        dropTimfr = null;
        dropTimfr = null;
        dropTimfr = null;
        dropTimfr = null;
        dropTimfr = null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * Rfturns tif lodbtion tibt tiis domponfnt siould visublly indidbtf
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * bs tif drop lodbtion during b DnD opfrbtion ovfr tif domponfnt,
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * or {@dodf null} if no lodbtion is to durrfntly bf siown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * Tiis mftiod is not mfbnt for qufrying tif drop lodbtion
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * from b {@dodf TrbnsffrHbndlfr}, bs tif drop lodbtion is only
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * sft bftfr tif {@dodf TrbnsffrHbndlfr}'s <dodf>dbnImport</dodf>
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * ibs rfturnfd bnd ibs bllowfd for tif lodbtion to bf siown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * Wifn tiis propfrty dibngfs, b propfrty dibngf fvfnt witi
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     * nbmf "dropLodbtion" is firfd by tif domponfnt.
     *
     *
     *
     *
     *
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @rfturn tif drop lodbtion
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff #sftDropModf
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sff TrbnsffrHbndlfr#dbnImport(TrbnsffrHbndlfr.TrbnsffrSupport)
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     * @sindf 1.6
     */
     */
     */
     */
     */
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
    publid finbl DropLodbtion gftDropLodbtion() {
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
        rfturn dropLodbtion;
    }
    }
    }
    }
    }





    privbtf void stbrtDropTimfr() {
    privbtf void stbrtDropTimfr() {
    privbtf void stbrtDropTimfr() {
    privbtf void stbrtDropTimfr() {
    privbtf void stbrtDropTimfr() {
        if (dropTimfr == null) {
        if (dropTimfr == null) {
        if (dropTimfr == null) {
        if (dropTimfr == null) {
        if (dropTimfr == null) {
            dropTimfr = nfw TrffTimfr();
            dropTimfr = nfw TrffTimfr();
            dropTimfr = nfw TrffTimfr();
            dropTimfr = nfw TrffTimfr();
            dropTimfr = nfw TrffTimfr();
        }
        }
        }
        }
        }
        dropTimfr.stbrt();
        dropTimfr.stbrt();
        dropTimfr.stbrt();
        dropTimfr.stbrt();
        dropTimfr.stbrt();
    }
    }
    }
    }
    }





    privbtf void dbndflDropTimfr() {
    privbtf void dbndflDropTimfr() {
    privbtf void dbndflDropTimfr() {
    privbtf void dbndflDropTimfr() {
    privbtf void dbndflDropTimfr() {
        if (dropTimfr != null && dropTimfr.isRunning()) {
        if (dropTimfr != null && dropTimfr.isRunning()) {
        if (dropTimfr != null && dropTimfr.isRunning()) {
        if (dropTimfr != null && dropTimfr.isRunning()) {
        if (dropTimfr != null && dropTimfr.isRunning()) {
            fxpbndRow = -1;
            fxpbndRow = -1;
            fxpbndRow = -1;
            fxpbndRow = -1;
            fxpbndRow = -1;
            dropTimfr.stop();
            dropTimfr.stop();
            dropTimfr.stop();
            dropTimfr.stop();
            dropTimfr.stop();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns <dodf>isEditbblf</dodf>. Tiis is invokfd from tif UI bfforf
     * Rfturns <dodf>isEditbblf</dodf>. Tiis is invokfd from tif UI bfforf
     * Rfturns <dodf>isEditbblf</dodf>. Tiis is invokfd from tif UI bfforf
     * Rfturns <dodf>isEditbblf</dodf>. Tiis is invokfd from tif UI bfforf
     * Rfturns <dodf>isEditbblf</dodf>. Tiis is invokfd from tif UI bfforf
     * fditing bfgins to insurf tibt tif givfn pbti dbn bf fditfd. Tiis
     * fditing bfgins to insurf tibt tif givfn pbti dbn bf fditfd. Tiis
     * fditing bfgins to insurf tibt tif givfn pbti dbn bf fditfd. Tiis
     * fditing bfgins to insurf tibt tif givfn pbti dbn bf fditfd. Tiis
     * fditing bfgins to insurf tibt tif givfn pbti dbn bf fditfd. Tiis
     * is providfd bs bn fntry point for subdlbssfrs to bdd filtfrfd
     * is providfd bs bn fntry point for subdlbssfrs to bdd filtfrfd
     * is providfd bs bn fntry point for subdlbssfrs to bdd filtfrfd
     * is providfd bs bn fntry point for subdlbssfrs to bdd filtfrfd
     * is providfd bs bn fntry point for subdlbssfrs to bdd filtfrfd
     * fditing witiout ibving to rfsort to drfbting b nfw fditor.
     * fditing witiout ibving to rfsort to drfbting b nfw fditor.
     * fditing witiout ibving to rfsort to drfbting b nfw fditor.
     * fditing witiout ibving to rfsort to drfbting b nfw fditor.
     * fditing witiout ibving to rfsort to drfbting b nfw fditor.
     *
     *
     *
     *
     *
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @rfturn truf if fvfry pbrfnt nodf bnd tif nodf itsflf is fditbblf
     * @rfturn truf if fvfry pbrfnt nodf bnd tif nodf itsflf is fditbblf
     * @rfturn truf if fvfry pbrfnt nodf bnd tif nodf itsflf is fditbblf
     * @rfturn truf if fvfry pbrfnt nodf bnd tif nodf itsflf is fditbblf
     * @rfturn truf if fvfry pbrfnt nodf bnd tif nodf itsflf is fditbblf
     * @sff #isEditbblf
     * @sff #isEditbblf
     * @sff #isEditbblf
     * @sff #isEditbblf
     * @sff #isEditbblf
     */
     */
     */
     */
     */
    publid boolfbn isPbtiEditbblf(TrffPbti pbti) {
    publid boolfbn isPbtiEditbblf(TrffPbti pbti) {
    publid boolfbn isPbtiEditbblf(TrffPbti pbti) {
    publid boolfbn isPbtiEditbblf(TrffPbti pbti) {
    publid boolfbn isPbtiEditbblf(TrffPbti pbti) {
        rfturn isEditbblf();
        rfturn isEditbblf();
        rfturn isEditbblf();
        rfturn isEditbblf();
        rfturn isEditbblf();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * Ovfrridfs <dodf>JComponfnt</dodf>'s <dodf>gftToolTipTfxt</dodf>
     * mftiod in ordfr to bllow
     * mftiod in ordfr to bllow
     * mftiod in ordfr to bllow
     * mftiod in ordfr to bllow
     * mftiod in ordfr to bllow
     * rfndfrfr's tips to bf usfd if it ibs tfxt sft.
     * rfndfrfr's tips to bf usfd if it ibs tfxt sft.
     * rfndfrfr's tips to bf usfd if it ibs tfxt sft.
     * rfndfrfr's tips to bf usfd if it ibs tfxt sft.
     * rfndfrfr's tips to bf usfd if it ibs tfxt sft.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * NOTE: For <dodf>JTrff</dodf> to propfrly displby tooltips of its
     * NOTE: For <dodf>JTrff</dodf> to propfrly displby tooltips of its
     * NOTE: For <dodf>JTrff</dodf> to propfrly displby tooltips of its
     * NOTE: For <dodf>JTrff</dodf> to propfrly displby tooltips of its
     * NOTE: For <dodf>JTrff</dodf> to propfrly displby tooltips of its
     * rfndfrfrs, <dodf>JTrff</dodf> must bf b rfgistfrfd domponfnt witi tif
     * rfndfrfrs, <dodf>JTrff</dodf> must bf b rfgistfrfd domponfnt witi tif
     * rfndfrfrs, <dodf>JTrff</dodf> must bf b rfgistfrfd domponfnt witi tif
     * rfndfrfrs, <dodf>JTrff</dodf> must bf b rfgistfrfd domponfnt witi tif
     * rfndfrfrs, <dodf>JTrff</dodf> must bf b rfgistfrfd domponfnt witi tif
     * <dodf>ToolTipMbnbgfr</dodf>.  Tiis dbn bf donf by invoking
     * <dodf>ToolTipMbnbgfr</dodf>.  Tiis dbn bf donf by invoking
     * <dodf>ToolTipMbnbgfr</dodf>.  Tiis dbn bf donf by invoking
     * <dodf>ToolTipMbnbgfr</dodf>.  Tiis dbn bf donf by invoking
     * <dodf>ToolTipMbnbgfr</dodf>.  Tiis dbn bf donf by invoking
     * <dodf>ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(trff)</dodf>.
     * <dodf>ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(trff)</dodf>.
     * <dodf>ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(trff)</dodf>.
     * <dodf>ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(trff)</dodf>.
     * <dodf>ToolTipMbnbgfr.sibrfdInstbndf().rfgistfrComponfnt(trff)</dodf>.
     * Tiis is not donf butombtidblly!
     * Tiis is not donf butombtidblly!
     * Tiis is not donf butombtidblly!
     * Tiis is not donf butombtidblly!
     * Tiis is not donf butombtidblly!
     *
     *
     *
     *
     *
     * @pbrbm fvfnt tif <dodf>MousfEvfnt</dodf> tibt initibtfd tif
     * @pbrbm fvfnt tif <dodf>MousfEvfnt</dodf> tibt initibtfd tif
     * @pbrbm fvfnt tif <dodf>MousfEvfnt</dodf> tibt initibtfd tif
     * @pbrbm fvfnt tif <dodf>MousfEvfnt</dodf> tibt initibtfd tif
     * @pbrbm fvfnt tif <dodf>MousfEvfnt</dodf> tibt initibtfd tif
     *          <dodf>ToolTip</dodf> displby
     *          <dodf>ToolTip</dodf> displby
     *          <dodf>ToolTip</dodf> displby
     *          <dodf>ToolTip</dodf> displby
     *          <dodf>ToolTip</dodf> displby
     * @rfturn b string dontbining tif  tooltip or <dodf>null</dodf>
     * @rfturn b string dontbining tif  tooltip or <dodf>null</dodf>
     * @rfturn b string dontbining tif  tooltip or <dodf>null</dodf>
     * @rfturn b string dontbining tif  tooltip or <dodf>null</dodf>
     * @rfturn b string dontbining tif  tooltip or <dodf>null</dodf>
     *          if <dodf>fvfnt</dodf> is null
     *          if <dodf>fvfnt</dodf> is null
     *          if <dodf>fvfnt</dodf> is null
     *          if <dodf>fvfnt</dodf> is null
     *          if <dodf>fvfnt</dodf> is null
     */
     */
     */
     */
     */
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
    publid String gftToolTipTfxt(MousfEvfnt fvfnt) {
        String tip = null;
        String tip = null;
        String tip = null;
        String tip = null;
        String tip = null;





        if(fvfnt != null) {
        if(fvfnt != null) {
        if(fvfnt != null) {
        if(fvfnt != null) {
        if(fvfnt != null) {
            Point p = fvfnt.gftPoint();
            Point p = fvfnt.gftPoint();
            Point p = fvfnt.gftPoint();
            Point p = fvfnt.gftPoint();
            Point p = fvfnt.gftPoint();
            int sflRow = gftRowForLodbtion(p.x, p.y);
            int sflRow = gftRowForLodbtion(p.x, p.y);
            int sflRow = gftRowForLodbtion(p.x, p.y);
            int sflRow = gftRowForLodbtion(p.x, p.y);
            int sflRow = gftRowForLodbtion(p.x, p.y);
            TrffCfllRfndfrfr       r = gftCfllRfndfrfr();
            TrffCfllRfndfrfr       r = gftCfllRfndfrfr();
            TrffCfllRfndfrfr       r = gftCfllRfndfrfr();
            TrffCfllRfndfrfr       r = gftCfllRfndfrfr();
            TrffCfllRfndfrfr       r = gftCfllRfndfrfr();





            if(sflRow != -1 && r != null) {
            if(sflRow != -1 && r != null) {
            if(sflRow != -1 && r != null) {
            if(sflRow != -1 && r != null) {
            if(sflRow != -1 && r != null) {
                TrffPbti     pbti = gftPbtiForRow(sflRow);
                TrffPbti     pbti = gftPbtiForRow(sflRow);
                TrffPbti     pbti = gftPbtiForRow(sflRow);
                TrffPbti     pbti = gftPbtiForRow(sflRow);
                TrffPbti     pbti = gftPbtiForRow(sflRow);
                Objfdt       lbstPbti = pbti.gftLbstPbtiComponfnt();
                Objfdt       lbstPbti = pbti.gftLbstPbtiComponfnt();
                Objfdt       lbstPbti = pbti.gftLbstPbtiComponfnt();
                Objfdt       lbstPbti = pbti.gftLbstPbtiComponfnt();
                Objfdt       lbstPbti = pbti.gftLbstPbtiComponfnt();
                Componfnt    rComponfnt = r.gftTrffCfllRfndfrfrComponfnt
                Componfnt    rComponfnt = r.gftTrffCfllRfndfrfrComponfnt
                Componfnt    rComponfnt = r.gftTrffCfllRfndfrfrComponfnt
                Componfnt    rComponfnt = r.gftTrffCfllRfndfrfrComponfnt
                Componfnt    rComponfnt = r.gftTrffCfllRfndfrfrComponfnt
                    (tiis, lbstPbti, isRowSflfdtfd(sflRow),
                    (tiis, lbstPbti, isRowSflfdtfd(sflRow),
                    (tiis, lbstPbti, isRowSflfdtfd(sflRow),
                    (tiis, lbstPbti, isRowSflfdtfd(sflRow),
                    (tiis, lbstPbti, isRowSflfdtfd(sflRow),
                     isExpbndfd(sflRow), gftModfl().isLfbf(lbstPbti), sflRow,
                     isExpbndfd(sflRow), gftModfl().isLfbf(lbstPbti), sflRow,
                     isExpbndfd(sflRow), gftModfl().isLfbf(lbstPbti), sflRow,
                     isExpbndfd(sflRow), gftModfl().isLfbf(lbstPbti), sflRow,
                     isExpbndfd(sflRow), gftModfl().isLfbf(lbstPbti), sflRow,
                     truf);
                     truf);
                     truf);
                     truf);
                     truf);





                if(rComponfnt instbndfof JComponfnt) {
                if(rComponfnt instbndfof JComponfnt) {
                if(rComponfnt instbndfof JComponfnt) {
                if(rComponfnt instbndfof JComponfnt) {
                if(rComponfnt instbndfof JComponfnt) {
                    MousfEvfnt      nfwEvfnt;
                    MousfEvfnt      nfwEvfnt;
                    MousfEvfnt      nfwEvfnt;
                    MousfEvfnt      nfwEvfnt;
                    MousfEvfnt      nfwEvfnt;
                    Rfdtbnglf       pbtiBounds = gftPbtiBounds(pbti);
                    Rfdtbnglf       pbtiBounds = gftPbtiBounds(pbti);
                    Rfdtbnglf       pbtiBounds = gftPbtiBounds(pbti);
                    Rfdtbnglf       pbtiBounds = gftPbtiBounds(pbti);
                    Rfdtbnglf       pbtiBounds = gftPbtiBounds(pbti);





                    p.trbnslbtf(-pbtiBounds.x, -pbtiBounds.y);
                    p.trbnslbtf(-pbtiBounds.x, -pbtiBounds.y);
                    p.trbnslbtf(-pbtiBounds.x, -pbtiBounds.y);
                    p.trbnslbtf(-pbtiBounds.x, -pbtiBounds.y);
                    p.trbnslbtf(-pbtiBounds.x, -pbtiBounds.y);
                    nfwEvfnt = nfw MousfEvfnt(rComponfnt, fvfnt.gftID(),
                    nfwEvfnt = nfw MousfEvfnt(rComponfnt, fvfnt.gftID(),
                    nfwEvfnt = nfw MousfEvfnt(rComponfnt, fvfnt.gftID(),
                    nfwEvfnt = nfw MousfEvfnt(rComponfnt, fvfnt.gftID(),
                    nfwEvfnt = nfw MousfEvfnt(rComponfnt, fvfnt.gftID(),
                                          fvfnt.gftWifn(),
                                          fvfnt.gftWifn(),
                                          fvfnt.gftWifn(),
                                          fvfnt.gftWifn(),
                                          fvfnt.gftWifn(),
                                              fvfnt.gftModififrs(),
                                              fvfnt.gftModififrs(),
                                              fvfnt.gftModififrs(),
                                              fvfnt.gftModififrs(),
                                              fvfnt.gftModififrs(),
                                              p.x, p.y,
                                              p.x, p.y,
                                              p.x, p.y,
                                              p.x, p.y,
                                              p.x, p.y,
                                              fvfnt.gftXOnSdrffn(),
                                              fvfnt.gftXOnSdrffn(),
                                              fvfnt.gftXOnSdrffn(),
                                              fvfnt.gftXOnSdrffn(),
                                              fvfnt.gftXOnSdrffn(),
                                              fvfnt.gftYOnSdrffn(),
                                              fvfnt.gftYOnSdrffn(),
                                              fvfnt.gftYOnSdrffn(),
                                              fvfnt.gftYOnSdrffn(),
                                              fvfnt.gftYOnSdrffn(),
                                              fvfnt.gftClidkCount(),
                                              fvfnt.gftClidkCount(),
                                              fvfnt.gftClidkCount(),
                                              fvfnt.gftClidkCount(),
                                              fvfnt.gftClidkCount(),
                                              fvfnt.isPopupTriggfr(),
                                              fvfnt.isPopupTriggfr(),
                                              fvfnt.isPopupTriggfr(),
                                              fvfnt.isPopupTriggfr(),
                                              fvfnt.isPopupTriggfr(),
                                              MousfEvfnt.NOBUTTON);
                                              MousfEvfnt.NOBUTTON);
                                              MousfEvfnt.NOBUTTON);
                                              MousfEvfnt.NOBUTTON);
                                              MousfEvfnt.NOBUTTON);





                    tip = ((JComponfnt)rComponfnt).gftToolTipTfxt(nfwEvfnt);
                    tip = ((JComponfnt)rComponfnt).gftToolTipTfxt(nfwEvfnt);
                    tip = ((JComponfnt)rComponfnt).gftToolTipTfxt(nfwEvfnt);
                    tip = ((JComponfnt)rComponfnt).gftToolTipTfxt(nfwEvfnt);
                    tip = ((JComponfnt)rComponfnt).gftToolTipTfxt(nfwEvfnt);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        // No tip from tif rfndfrfr gft our own tip
        if (tip == null) {
        if (tip == null) {
        if (tip == null) {
        if (tip == null) {
        if (tip == null) {
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
            tip = gftToolTipTfxt();
        }
        }
        }
        }
        }
        rfturn tip;
        rfturn tip;
        rfturn tip;
        rfturn tip;
        rfturn tip;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbllfd by tif rfndfrfrs to donvfrt tif spfdififd vbluf to
     * Cbllfd by tif rfndfrfrs to donvfrt tif spfdififd vbluf to
     * Cbllfd by tif rfndfrfrs to donvfrt tif spfdififd vbluf to
     * Cbllfd by tif rfndfrfrs to donvfrt tif spfdififd vbluf to
     * Cbllfd by tif rfndfrfrs to donvfrt tif spfdififd vbluf to
     * tfxt. Tiis implfmfntbtion rfturns <dodf>vbluf.toString</dodf>, ignoring
     * tfxt. Tiis implfmfntbtion rfturns <dodf>vbluf.toString</dodf>, ignoring
     * tfxt. Tiis implfmfntbtion rfturns <dodf>vbluf.toString</dodf>, ignoring
     * tfxt. Tiis implfmfntbtion rfturns <dodf>vbluf.toString</dodf>, ignoring
     * tfxt. Tiis implfmfntbtion rfturns <dodf>vbluf.toString</dodf>, ignoring
     * bll otifr brgumfnts. To dontrol tif donvfrsion, subdlbss tiis
     * bll otifr brgumfnts. To dontrol tif donvfrsion, subdlbss tiis
     * bll otifr brgumfnts. To dontrol tif donvfrsion, subdlbss tiis
     * bll otifr brgumfnts. To dontrol tif donvfrsion, subdlbss tiis
     * bll otifr brgumfnts. To dontrol tif donvfrsion, subdlbss tiis
     * mftiod bnd usf bny of tif brgumfnts you nffd.
     * mftiod bnd usf bny of tif brgumfnts you nffd.
     * mftiod bnd usf bny of tif brgumfnts you nffd.
     * mftiod bnd usf bny of tif brgumfnts you nffd.
     * mftiod bnd usf bny of tif brgumfnts you nffd.
     *
     *
     *
     *
     *
     * @pbrbm vbluf tif <dodf>Objfdt</dodf> to donvfrt to tfxt
     * @pbrbm vbluf tif <dodf>Objfdt</dodf> to donvfrt to tfxt
     * @pbrbm vbluf tif <dodf>Objfdt</dodf> to donvfrt to tfxt
     * @pbrbm vbluf tif <dodf>Objfdt</dodf> to donvfrt to tfxt
     * @pbrbm vbluf tif <dodf>Objfdt</dodf> to donvfrt to tfxt
     * @pbrbm sflfdtfd truf if tif nodf is sflfdtfd
     * @pbrbm sflfdtfd truf if tif nodf is sflfdtfd
     * @pbrbm sflfdtfd truf if tif nodf is sflfdtfd
     * @pbrbm sflfdtfd truf if tif nodf is sflfdtfd
     * @pbrbm sflfdtfd truf if tif nodf is sflfdtfd
     * @pbrbm fxpbndfd truf if tif nodf is fxpbndfd
     * @pbrbm fxpbndfd truf if tif nodf is fxpbndfd
     * @pbrbm fxpbndfd truf if tif nodf is fxpbndfd
     * @pbrbm fxpbndfd truf if tif nodf is fxpbndfd
     * @pbrbm fxpbndfd truf if tif nodf is fxpbndfd
     * @pbrbm lfbf  truf if tif nodf is b lfbf nodf
     * @pbrbm lfbf  truf if tif nodf is b lfbf nodf
     * @pbrbm lfbf  truf if tif nodf is b lfbf nodf
     * @pbrbm lfbf  truf if tif nodf is b lfbf nodf
     * @pbrbm lfbf  truf if tif nodf is b lfbf nodf
     * @pbrbm row  bn intfgfr spfdifying tif nodf's displby row, wifrf 0 is
     * @pbrbm row  bn intfgfr spfdifying tif nodf's displby row, wifrf 0 is
     * @pbrbm row  bn intfgfr spfdifying tif nodf's displby row, wifrf 0 is
     * @pbrbm row  bn intfgfr spfdifying tif nodf's displby row, wifrf 0 is
     * @pbrbm row  bn intfgfr spfdifying tif nodf's displby row, wifrf 0 is
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     * @pbrbm ibsFodus truf if tif nodf ibs tif fodus
     * @pbrbm ibsFodus truf if tif nodf ibs tif fodus
     * @pbrbm ibsFodus truf if tif nodf ibs tif fodus
     * @pbrbm ibsFodus truf if tif nodf ibs tif fodus
     * @pbrbm ibsFodus truf if tif nodf ibs tif fodus
     * @rfturn tif <dodf>String</dodf> rfprfsfntbtion of tif nodf's vbluf
     * @rfturn tif <dodf>String</dodf> rfprfsfntbtion of tif nodf's vbluf
     * @rfturn tif <dodf>String</dodf> rfprfsfntbtion of tif nodf's vbluf
     * @rfturn tif <dodf>String</dodf> rfprfsfntbtion of tif nodf's vbluf
     * @rfturn tif <dodf>String</dodf> rfprfsfntbtion of tif nodf's vbluf
     */
     */
     */
     */
     */
    publid String donvfrtVblufToTfxt(Objfdt vbluf, boolfbn sflfdtfd,
    publid String donvfrtVblufToTfxt(Objfdt vbluf, boolfbn sflfdtfd,
    publid String donvfrtVblufToTfxt(Objfdt vbluf, boolfbn sflfdtfd,
    publid String donvfrtVblufToTfxt(Objfdt vbluf, boolfbn sflfdtfd,
    publid String donvfrtVblufToTfxt(Objfdt vbluf, boolfbn sflfdtfd,
                                     boolfbn fxpbndfd, boolfbn lfbf, int row,
                                     boolfbn fxpbndfd, boolfbn lfbf, int row,
                                     boolfbn fxpbndfd, boolfbn lfbf, int row,
                                     boolfbn fxpbndfd, boolfbn lfbf, int row,
                                     boolfbn fxpbndfd, boolfbn lfbf, int row,
                                     boolfbn ibsFodus) {
                                     boolfbn ibsFodus) {
                                     boolfbn ibsFodus) {
                                     boolfbn ibsFodus) {
                                     boolfbn ibsFodus) {
        if(vbluf != null) {
        if(vbluf != null) {
        if(vbluf != null) {
        if(vbluf != null) {
        if(vbluf != null) {
            String sVbluf = vbluf.toString();
            String sVbluf = vbluf.toString();
            String sVbluf = vbluf.toString();
            String sVbluf = vbluf.toString();
            String sVbluf = vbluf.toString();
            if (sVbluf != null) {
            if (sVbluf != null) {
            if (sVbluf != null) {
            if (sVbluf != null) {
            if (sVbluf != null) {
                rfturn sVbluf;
                rfturn sVbluf;
                rfturn sVbluf;
                rfturn sVbluf;
                rfturn sVbluf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn "";
        rfturn "";
        rfturn "";
        rfturn "";
        rfturn "";
    }
    }
    }
    }
    }





    //
    //
    //
    //
    //
    // Tif following brf donvfnifndf mftiods tibt gft forwbrdfd to tif
    // Tif following brf donvfnifndf mftiods tibt gft forwbrdfd to tif
    // Tif following brf donvfnifndf mftiods tibt gft forwbrdfd to tif
    // Tif following brf donvfnifndf mftiods tibt gft forwbrdfd to tif
    // Tif following brf donvfnifndf mftiods tibt gft forwbrdfd to tif
    // durrfnt TrffUI.
    // durrfnt TrffUI.
    // durrfnt TrffUI.
    // durrfnt TrffUI.
    // durrfnt TrffUI.
    //
    //
    //
    //
    //





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of vifwbblf nodfs. A nodf is vifwbblf if bll of its
     * Rfturns tif numbfr of vifwbblf nodfs. A nodf is vifwbblf if bll of its
     * Rfturns tif numbfr of vifwbblf nodfs. A nodf is vifwbblf if bll of its
     * Rfturns tif numbfr of vifwbblf nodfs. A nodf is vifwbblf if bll of its
     * Rfturns tif numbfr of vifwbblf nodfs. A nodf is vifwbblf if bll of its
     * pbrfnts brf fxpbndfd. Tif root is only indludfd in tiis dount if
     * pbrfnts brf fxpbndfd. Tif root is only indludfd in tiis dount if
     * pbrfnts brf fxpbndfd. Tif root is only indludfd in tiis dount if
     * pbrfnts brf fxpbndfd. Tif root is only indludfd in tiis dount if
     * pbrfnts brf fxpbndfd. Tif root is only indludfd in tiis dount if
     * {@dodf isRootVisiblf()} is {@dodf truf}. Tiis rfturns {@dodf 0} if
     * {@dodf isRootVisiblf()} is {@dodf truf}. Tiis rfturns {@dodf 0} if
     * {@dodf isRootVisiblf()} is {@dodf truf}. Tiis rfturns {@dodf 0} if
     * {@dodf isRootVisiblf()} is {@dodf truf}. Tiis rfturns {@dodf 0} if
     * {@dodf isRootVisiblf()} is {@dodf truf}. Tiis rfturns {@dodf 0} if
     * tif UI ibs not bffn sft.
     * tif UI ibs not bffn sft.
     * tif UI ibs not bffn sft.
     * tif UI ibs not bffn sft.
     * tif UI ibs not bffn sft.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of vifwbblf nodfs
     * @rfturn tif numbfr of vifwbblf nodfs
     * @rfturn tif numbfr of vifwbblf nodfs
     * @rfturn tif numbfr of vifwbblf nodfs
     * @rfturn tif numbfr of vifwbblf nodfs
     */
     */
     */
     */
     */
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
    publid int gftRowCount() {
        TrffUI            trff = gftUI();
        TrffUI            trff = gftUI();
        TrffUI            trff = gftUI();
        TrffUI            trff = gftUI();
        TrffUI            trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftRowCount(tiis);
            rfturn trff.gftRowCount(tiis);
            rfturn trff.gftRowCount(tiis);
            rfturn trff.gftRowCount(tiis);
            rfturn trff.gftRowCount(tiis);
        rfturn 0;
        rfturn 0;
        rfturn 0;
        rfturn 0;
        rfturn 0;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti. If bny
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti. If bny
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti. If bny
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti. If bny
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti. If bny
     * domponfnt of tif pbti is iiddfn (undfr b dollbpsfd nodf), bnd
     * domponfnt of tif pbti is iiddfn (undfr b dollbpsfd nodf), bnd
     * domponfnt of tif pbti is iiddfn (undfr b dollbpsfd nodf), bnd
     * domponfnt of tif pbti is iiddfn (undfr b dollbpsfd nodf), bnd
     * domponfnt of tif pbti is iiddfn (undfr b dollbpsfd nodf), bnd
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * fxposfd (mbdf vifwbblf).
     * fxposfd (mbdf vifwbblf).
     * fxposfd (mbdf vifwbblf).
     * fxposfd (mbdf vifwbblf).
     * fxposfd (mbdf vifwbblf).
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> spfdifying tif nodf to sflfdt
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> spfdifying tif nodf to sflfdt
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> spfdifying tif nodf to sflfdt
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> spfdifying tif nodf to sflfdt
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> spfdifying tif nodf to sflfdt
     */
     */
     */
     */
     */
    publid void sftSflfdtionPbti(TrffPbti pbti) {
    publid void sftSflfdtionPbti(TrffPbti pbti) {
    publid void sftSflfdtionPbti(TrffPbti pbti) {
    publid void sftSflfdtionPbti(TrffPbti pbti) {
    publid void sftSflfdtionPbti(TrffPbti pbti) {
        gftSflfdtionModfl().sftSflfdtionPbti(pbti);
        gftSflfdtionModfl().sftSflfdtionPbti(pbti);
        gftSflfdtionModfl().sftSflfdtionPbti(pbti);
        gftSflfdtionModfl().sftSflfdtionPbti(pbti);
        gftSflfdtionModfl().sftSflfdtionPbti(pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif nodfs idfntififd by tif spfdififd brrby of pbtis.
     * Sflfdts tif nodfs idfntififd by tif spfdififd brrby of pbtis.
     * Sflfdts tif nodfs idfntififd by tif spfdififd brrby of pbtis.
     * Sflfdts tif nodfs idfntififd by tif spfdififd brrby of pbtis.
     * Sflfdts tif nodfs idfntififd by tif spfdififd brrby of pbtis.
     * If bny domponfnt in bny of tif pbtis is iiddfn (undfr b dollbpsfd
     * If bny domponfnt in bny of tif pbtis is iiddfn (undfr b dollbpsfd
     * If bny domponfnt in bny of tif pbtis is iiddfn (undfr b dollbpsfd
     * If bny domponfnt in bny of tif pbtis is iiddfn (undfr b dollbpsfd
     * If bny domponfnt in bny of tif pbtis is iiddfn (undfr b dollbpsfd
     * nodf), bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf
     * nodf), bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf
     * nodf), bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf
     * nodf), bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf
     * nodf), bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf
     * it is fxposfd (mbdf vifwbblf).
     * it is fxposfd (mbdf vifwbblf).
     * it is fxposfd (mbdf vifwbblf).
     * it is fxposfd (mbdf vifwbblf).
     * it is fxposfd (mbdf vifwbblf).
     *
     *
     *
     *
     *
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     *          tif nodfs to sflfdt
     *          tif nodfs to sflfdt
     *          tif nodfs to sflfdt
     *          tif nodfs to sflfdt
     *          tif nodfs to sflfdt
     */
     */
     */
     */
     */
    publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {
        gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif pbti idfntififs bs tif lfbd. Tif lfbd mby not bf sflfdtfd.
     * Sfts tif pbti idfntififs bs tif lfbd. Tif lfbd mby not bf sflfdtfd.
     * Sfts tif pbti idfntififs bs tif lfbd. Tif lfbd mby not bf sflfdtfd.
     * Sfts tif pbti idfntififs bs tif lfbd. Tif lfbd mby not bf sflfdtfd.
     * Sfts tif pbti idfntififs bs tif lfbd. Tif lfbd mby not bf sflfdtfd.
     * Tif lfbd is not mbintbinfd by <dodf>JTrff</dodf>,
     * Tif lfbd is not mbintbinfd by <dodf>JTrff</dodf>,
     * Tif lfbd is not mbintbinfd by <dodf>JTrff</dodf>,
     * Tif lfbd is not mbintbinfd by <dodf>JTrff</dodf>,
     * Tif lfbd is not mbintbinfd by <dodf>JTrff</dodf>,
     * rbtifr tif UI will updbtf it.
     * rbtifr tif UI will updbtf it.
     * rbtifr tif UI will updbtf it.
     * rbtifr tif UI will updbtf it.
     * rbtifr tif UI will updbtf it.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwPbti  tif nfw lfbd pbti
     * @pbrbm nfwPbti  tif nfw lfbd pbti
     * @pbrbm nfwPbti  tif nfw lfbd pbti
     * @pbrbm nfwPbti  tif nfw lfbd pbti
     * @pbrbm nfwPbti  tif nfw lfbd pbti
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Lfbd sflfdtion pbti
     *  dfsdription: Lfbd sflfdtion pbti
     *  dfsdription: Lfbd sflfdtion pbti
     *  dfsdription: Lfbd sflfdtion pbti
     *  dfsdription: Lfbd sflfdtion pbti
     */
     */
     */
     */
     */
    publid void sftLfbdSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftLfbdSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftLfbdSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftLfbdSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftLfbdSflfdtionPbti(TrffPbti nfwPbti) {
        TrffPbti          oldVbluf = lfbdPbti;
        TrffPbti          oldVbluf = lfbdPbti;
        TrffPbti          oldVbluf = lfbdPbti;
        TrffPbti          oldVbluf = lfbdPbti;
        TrffPbti          oldVbluf = lfbdPbti;





        lfbdPbti = nfwPbti;
        lfbdPbti = nfwPbti;
        lfbdPbti = nfwPbti;
        lfbdPbti = nfwPbti;
        lfbdPbti = nfwPbti;
        firfPropfrtyCibngf(LEAD_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(LEAD_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(LEAD_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(LEAD_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(LEAD_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);





        // Firf tif bdtivf dfsdfndbnt propfrty dibngf ifrf sindf tif
        // Firf tif bdtivf dfsdfndbnt propfrty dibngf ifrf sindf tif
        // Firf tif bdtivf dfsdfndbnt propfrty dibngf ifrf sindf tif
        // Firf tif bdtivf dfsdfndbnt propfrty dibngf ifrf sindf tif
        // Firf tif bdtivf dfsdfndbnt propfrty dibngf ifrf sindf tif
        // lfbdPbti got sft, tiis is triggfrfd boti in dbsf nodf
        // lfbdPbti got sft, tiis is triggfrfd boti in dbsf nodf
        // lfbdPbti got sft, tiis is triggfrfd boti in dbsf nodf
        // lfbdPbti got sft, tiis is triggfrfd boti in dbsf nodf
        // lfbdPbti got sft, tiis is triggfrfd boti in dbsf nodf
        // sflfdtion dibngfd bnd nodf fodus dibngfd
        // sflfdtion dibngfd bnd nodf fodus dibngfd
        // sflfdtion dibngfd bnd nodf fodus dibngfd
        // sflfdtion dibngfd bnd nodf fodus dibngfd
        // sflfdtion dibngfd bnd nodf fodus dibngfd
        if (bddfssiblfContfxt != null){
        if (bddfssiblfContfxt != null){
        if (bddfssiblfContfxt != null){
        if (bddfssiblfContfxt != null){
        if (bddfssiblfContfxt != null){
            ((AddfssiblfJTrff)bddfssiblfContfxt).
            ((AddfssiblfJTrff)bddfssiblfContfxt).
            ((AddfssiblfJTrff)bddfssiblfContfxt).
            ((AddfssiblfJTrff)bddfssiblfContfxt).
            ((AddfssiblfJTrff)bddfssiblfContfxt).
                firfAdtivfDfsdfndbntPropfrtyCibngf(oldVbluf, nfwPbti);
                firfAdtivfDfsdfndbntPropfrtyCibngf(oldVbluf, nfwPbti);
                firfAdtivfDfsdfndbntPropfrtyCibngf(oldVbluf, nfwPbti);
                firfAdtivfDfsdfndbntPropfrtyCibngf(oldVbluf, nfwPbti);
                firfAdtivfDfsdfndbntPropfrtyCibngf(oldVbluf, nfwPbti);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif pbti idfntififd bs tif bndior.
     * Sfts tif pbti idfntififd bs tif bndior.
     * Sfts tif pbti idfntififd bs tif bndior.
     * Sfts tif pbti idfntififd bs tif bndior.
     * Sfts tif pbti idfntififd bs tif bndior.
     * Tif bndior is not mbintbinfd by <dodf>JTrff</dodf>, rbtifr tif UI will
     * Tif bndior is not mbintbinfd by <dodf>JTrff</dodf>, rbtifr tif UI will
     * Tif bndior is not mbintbinfd by <dodf>JTrff</dodf>, rbtifr tif UI will
     * Tif bndior is not mbintbinfd by <dodf>JTrff</dodf>, rbtifr tif UI will
     * Tif bndior is not mbintbinfd by <dodf>JTrff</dodf>, rbtifr tif UI will
     * updbtf it.
     * updbtf it.
     * updbtf it.
     * updbtf it.
     * updbtf it.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwPbti  tif nfw bndior pbti
     * @pbrbm nfwPbti  tif nfw bndior pbti
     * @pbrbm nfwPbti  tif nfw bndior pbti
     * @pbrbm nfwPbti  tif nfw bndior pbti
     * @pbrbm nfwPbti  tif nfw bndior pbti
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Andior sflfdtion pbti
     *  dfsdription: Andior sflfdtion pbti
     *  dfsdription: Andior sflfdtion pbti
     *  dfsdription: Andior sflfdtion pbti
     *  dfsdription: Andior sflfdtion pbti
     */
     */
     */
     */
     */
    publid void sftAndiorSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftAndiorSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftAndiorSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftAndiorSflfdtionPbti(TrffPbti nfwPbti) {
    publid void sftAndiorSflfdtionPbti(TrffPbti nfwPbti) {
        TrffPbti          oldVbluf = bndiorPbti;
        TrffPbti          oldVbluf = bndiorPbti;
        TrffPbti          oldVbluf = bndiorPbti;
        TrffPbti          oldVbluf = bndiorPbti;
        TrffPbti          oldVbluf = bndiorPbti;





        bndiorPbti = nfwPbti;
        bndiorPbti = nfwPbti;
        bndiorPbti = nfwPbti;
        bndiorPbti = nfwPbti;
        bndiorPbti = nfwPbti;
        firfPropfrtyCibngf(ANCHOR_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(ANCHOR_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(ANCHOR_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(ANCHOR_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
        firfPropfrtyCibngf(ANCHOR_SELECTION_PATH_PROPERTY, oldVbluf, nfwPbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif nodf bt tif spfdififd row in tif displby.
     * Sflfdts tif nodf bt tif spfdififd row in tif displby.
     * Sflfdts tif nodf bt tif spfdififd row in tif displby.
     * Sflfdts tif nodf bt tif spfdififd row in tif displby.
     * Sflfdts tif nodf bt tif spfdififd row in tif displby.
     *
     *
     *
     *
     *
     * @pbrbm row  tif row to sflfdt, wifrf 0 is tif first row in
     * @pbrbm row  tif row to sflfdt, wifrf 0 is tif first row in
     * @pbrbm row  tif row to sflfdt, wifrf 0 is tif first row in
     * @pbrbm row  tif row to sflfdt, wifrf 0 is tif first row in
     * @pbrbm row  tif row to sflfdt, wifrf 0 is tif first row in
     *             tif displby
     *             tif displby
     *             tif displby
     *             tif displby
     *             tif displby
     */
     */
     */
     */
     */
    publid void sftSflfdtionRow(int row) {
    publid void sftSflfdtionRow(int row) {
    publid void sftSflfdtionRow(int row) {
    publid void sftSflfdtionRow(int row) {
    publid void sftSflfdtionRow(int row) {
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };





        sftSflfdtionRows(rows);
        sftSflfdtionRows(rows);
        sftSflfdtionRows(rows);
        sftSflfdtionRows(rows);
        sftSflfdtionRows(rows);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif nodfs dorrfsponding to fbdi of tif spfdififd rows
     * Sflfdts tif nodfs dorrfsponding to fbdi of tif spfdififd rows
     * Sflfdts tif nodfs dorrfsponding to fbdi of tif spfdififd rows
     * Sflfdts tif nodfs dorrfsponding to fbdi of tif spfdififd rows
     * Sflfdts tif nodfs dorrfsponding to fbdi of tif spfdififd rows
     * in tif displby. If b pbrtidulbr flfmfnt of <dodf>rows</dodf> is
     * in tif displby. If b pbrtidulbr flfmfnt of <dodf>rows</dodf> is
     * in tif displby. If b pbrtidulbr flfmfnt of <dodf>rows</dodf> is
     * in tif displby. If b pbrtidulbr flfmfnt of <dodf>rows</dodf> is
     * in tif displby. If b pbrtidulbr flfmfnt of <dodf>rows</dodf> is
     * &lt; 0 or &gt;= <dodf>gftRowCount</dodf>, it will bf ignorfd.
     * &lt; 0 or &gt;= <dodf>gftRowCount</dodf>, it will bf ignorfd.
     * &lt; 0 or &gt;= <dodf>gftRowCount</dodf>, it will bf ignorfd.
     * &lt; 0 or &gt;= <dodf>gftRowCount</dodf>, it will bf ignorfd.
     * &lt; 0 or &gt;= <dodf>gftRowCount</dodf>, it will bf ignorfd.
     * If nonf of tif flfmfnts
     * If nonf of tif flfmfnts
     * If nonf of tif flfmfnts
     * If nonf of tif flfmfnts
     * If nonf of tif flfmfnts
     * in <dodf>rows</dodf> brf vblid rows, tif sflfdtion will
     * in <dodf>rows</dodf> brf vblid rows, tif sflfdtion will
     * in <dodf>rows</dodf> brf vblid rows, tif sflfdtion will
     * in <dodf>rows</dodf> brf vblid rows, tif sflfdtion will
     * in <dodf>rows</dodf> brf vblid rows, tif sflfdtion will
     * bf dlfbrfd. Tibt is it will bf bs if <dodf>dlfbrSflfdtion</dodf>
     * bf dlfbrfd. Tibt is it will bf bs if <dodf>dlfbrSflfdtion</dodf>
     * bf dlfbrfd. Tibt is it will bf bs if <dodf>dlfbrSflfdtion</dodf>
     * bf dlfbrfd. Tibt is it will bf bs if <dodf>dlfbrSflfdtion</dodf>
     * bf dlfbrfd. Tibt is it will bf bs if <dodf>dlfbrSflfdtion</dodf>
     * wbs invokfd.
     * wbs invokfd.
     * wbs invokfd.
     * wbs invokfd.
     * wbs invokfd.
     *
     *
     *
     *
     *
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to sflfdt,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to sflfdt,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to sflfdt,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to sflfdt,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to sflfdt,
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     */
     */
     */
     */
     */
    publid void sftSflfdtionRows(int[] rows) {
    publid void sftSflfdtionRows(int[] rows) {
    publid void sftSflfdtionRows(int[] rows) {
    publid void sftSflfdtionRows(int[] rows) {
    publid void sftSflfdtionRows(int[] rows) {
        TrffUI               ui = gftUI();
        TrffUI               ui = gftUI();
        TrffUI               ui = gftUI();
        TrffUI               ui = gftUI();
        TrffUI               ui = gftUI();





        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];





            for(int dountfr = 0; dountfr < numRows; dountfr++) {
            for(int dountfr = 0; dountfr < numRows; dountfr++) {
            for(int dountfr = 0; dountfr < numRows; dountfr++) {
            for(int dountfr = 0; dountfr < numRows; dountfr++) {
            for(int dountfr = 0; dountfr < numRows; dountfr++) {
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
            }
            }
            }
            }
            }
            sftSflfdtionPbtis(pbtis);
            sftSflfdtionPbtis(pbtis);
            sftSflfdtionPbtis(pbtis);
            sftSflfdtionPbtis(pbtis);
            sftSflfdtionPbtis(pbtis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif nodf idfntififd by tif spfdififd <dodf>TrffPbti</dodf>
     * Adds tif nodf idfntififd by tif spfdififd <dodf>TrffPbti</dodf>
     * Adds tif nodf idfntififd by tif spfdififd <dodf>TrffPbti</dodf>
     * Adds tif nodf idfntififd by tif spfdififd <dodf>TrffPbti</dodf>
     * Adds tif nodf idfntififd by tif spfdififd <dodf>TrffPbti</dodf>
     * to tif durrfnt sflfdtion. If bny domponfnt of tif pbti isn't
     * to tif durrfnt sflfdtion. If bny domponfnt of tif pbti isn't
     * to tif durrfnt sflfdtion. If bny domponfnt of tif pbti isn't
     * to tif durrfnt sflfdtion. If bny domponfnt of tif pbti isn't
     * to tif durrfnt sflfdtion. If bny domponfnt of tif pbti isn't
     * vifwbblf, bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * vifwbblf, bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * vifwbblf, bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * vifwbblf, bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * vifwbblf, bnd <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf it is
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> to bdd
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> to bdd
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> to bdd
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> to bdd
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> to bdd
     */
     */
     */
     */
     */
    publid void bddSflfdtionPbti(TrffPbti pbti) {
    publid void bddSflfdtionPbti(TrffPbti pbti) {
    publid void bddSflfdtionPbti(TrffPbti pbti) {
    publid void bddSflfdtionPbti(TrffPbti pbti) {
    publid void bddSflfdtionPbti(TrffPbti pbti) {
        gftSflfdtionModfl().bddSflfdtionPbti(pbti);
        gftSflfdtionModfl().bddSflfdtionPbti(pbti);
        gftSflfdtionModfl().bddSflfdtionPbti(pbti);
        gftSflfdtionModfl().bddSflfdtionPbti(pbti);
        gftSflfdtionModfl().bddSflfdtionPbti(pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds fbdi pbti in tif brrby of pbtis to tif durrfnt sflfdtion. If
     * Adds fbdi pbti in tif brrby of pbtis to tif durrfnt sflfdtion. If
     * Adds fbdi pbti in tif brrby of pbtis to tif durrfnt sflfdtion. If
     * Adds fbdi pbti in tif brrby of pbtis to tif durrfnt sflfdtion. If
     * Adds fbdi pbti in tif brrby of pbtis to tif durrfnt sflfdtion. If
     * bny domponfnt of bny of tif pbtis isn't vifwbblf bnd
     * bny domponfnt of bny of tif pbtis isn't vifwbblf bnd
     * bny domponfnt of bny of tif pbtis isn't vifwbblf bnd
     * bny domponfnt of bny of tif pbtis isn't vifwbblf bnd
     * bny domponfnt of bny of tif pbtis isn't vifwbblf bnd
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf, it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf, it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf, it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf, it is
     * <dodf>gftExpbndsSflfdtfdPbtis</dodf> is truf, it is
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * mbdf vifwbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * Notf tibt <dodf>JTrff</dodf> dofs not bllow duplidbtf nodfs to
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * fxist bs diildrfn undfr tif sbmf pbrfnt -- fbdi sibling must bf
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     * b uniquf objfdt.
     *
     *
     *
     *
     *
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt spfdififs
     *          tif nodfs to bdd
     *          tif nodfs to bdd
     *          tif nodfs to bdd
     *          tif nodfs to bdd
     *          tif nodfs to bdd
     */
     */
     */
     */
     */
    publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {
        gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
        gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif pbti bt tif spfdififd row to tif durrfnt sflfdtion.
     * Adds tif pbti bt tif spfdififd row to tif durrfnt sflfdtion.
     * Adds tif pbti bt tif spfdififd row to tif durrfnt sflfdtion.
     * Adds tif pbti bt tif spfdififd row to tif durrfnt sflfdtion.
     * Adds tif pbti bt tif spfdififd row to tif durrfnt sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying tif row of tif nodf to bdd,
     * @pbrbm row  bn intfgfr spfdifying tif row of tif nodf to bdd,
     * @pbrbm row  bn intfgfr spfdifying tif row of tif nodf to bdd,
     * @pbrbm row  bn intfgfr spfdifying tif row of tif nodf to bdd,
     * @pbrbm row  bn intfgfr spfdifying tif row of tif nodf to bdd,
     *             wifrf 0 is tif first row in tif displby
     *             wifrf 0 is tif first row in tif displby
     *             wifrf 0 is tif first row in tif displby
     *             wifrf 0 is tif first row in tif displby
     *             wifrf 0 is tif first row in tif displby
     */
     */
     */
     */
     */
    publid void bddSflfdtionRow(int row) {
    publid void bddSflfdtionRow(int row) {
    publid void bddSflfdtionRow(int row) {
    publid void bddSflfdtionRow(int row) {
    publid void bddSflfdtionRow(int row) {
        int[]      rows = { row };
        int[]      rows = { row };
        int[]      rows = { row };
        int[]      rows = { row };
        int[]      rows = { row };





        bddSflfdtionRows(rows);
        bddSflfdtionRows(rows);
        bddSflfdtionRows(rows);
        bddSflfdtionRows(rows);
        bddSflfdtionRows(rows);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif pbtis bt fbdi of tif spfdififd rows to tif durrfnt sflfdtion.
     * Adds tif pbtis bt fbdi of tif spfdififd rows to tif durrfnt sflfdtion.
     * Adds tif pbtis bt fbdi of tif spfdififd rows to tif durrfnt sflfdtion.
     * Adds tif pbtis bt fbdi of tif spfdififd rows to tif durrfnt sflfdtion.
     * Adds tif pbtis bt fbdi of tif spfdififd rows to tif durrfnt sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to bdd,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to bdd,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to bdd,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to bdd,
     * @pbrbm rows  bn brrby of ints spfdifying tif rows to bdd,
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     *              wifrf 0 indidbtfs tif first row in tif displby
     */
     */
     */
     */
     */
    publid void bddSflfdtionRows(int[] rows) {
    publid void bddSflfdtionRows(int[] rows) {
    publid void bddSflfdtionRows(int[] rows) {
    publid void bddSflfdtionRows(int[] rows) {
    publid void bddSflfdtionRows(int[] rows) {
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();





        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];





            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
            bddSflfdtionPbtis(pbtis);
            bddSflfdtionPbtis(pbtis);
            bddSflfdtionPbtis(pbtis);
            bddSflfdtionPbtis(pbtis);
            bddSflfdtionPbtis(pbtis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif lbst pbti domponfnt of tif sflfdtfd pbti. Tiis is
     * Rfturns tif lbst pbti domponfnt of tif sflfdtfd pbti. Tiis is
     * Rfturns tif lbst pbti domponfnt of tif sflfdtfd pbti. Tiis is
     * Rfturns tif lbst pbti domponfnt of tif sflfdtfd pbti. Tiis is
     * Rfturns tif lbst pbti domponfnt of tif sflfdtfd pbti. Tiis is
     * b donvfnifndf mftiod for
     * b donvfnifndf mftiod for
     * b donvfnifndf mftiod for
     * b donvfnifndf mftiod for
     * b donvfnifndf mftiod for
     * {@dodf gftSflfdtionModfl().gftSflfdtionPbti().gftLbstPbtiComponfnt()}.
     * {@dodf gftSflfdtionModfl().gftSflfdtionPbti().gftLbstPbtiComponfnt()}.
     * {@dodf gftSflfdtionModfl().gftSflfdtionPbti().gftLbstPbtiComponfnt()}.
     * {@dodf gftSflfdtionModfl().gftSflfdtionPbti().gftLbstPbtiComponfnt()}.
     * {@dodf gftSflfdtionModfl().gftSflfdtionPbti().gftLbstPbtiComponfnt()}.
     * Tiis is typidblly only usfful if tif sflfdtion ibs onf pbti.
     * Tiis is typidblly only usfful if tif sflfdtion ibs onf pbti.
     * Tiis is typidblly only usfful if tif sflfdtion ibs onf pbti.
     * Tiis is typidblly only usfful if tif sflfdtion ibs onf pbti.
     * Tiis is typidblly only usfful if tif sflfdtion ibs onf pbti.
     *
     *
     *
     *
     *
     * @rfturn tif lbst pbti domponfnt of tif sflfdtfd pbti, or
     * @rfturn tif lbst pbti domponfnt of tif sflfdtfd pbti, or
     * @rfturn tif lbst pbti domponfnt of tif sflfdtfd pbti, or
     * @rfturn tif lbst pbti domponfnt of tif sflfdtfd pbti, or
     * @rfturn tif lbst pbti domponfnt of tif sflfdtfd pbti, or
     *         <dodf>null</dodf> if notiing is sflfdtfd
     *         <dodf>null</dodf> if notiing is sflfdtfd
     *         <dodf>null</dodf> if notiing is sflfdtfd
     *         <dodf>null</dodf> if notiing is sflfdtfd
     *         <dodf>null</dodf> if notiing is sflfdtfd
     * @sff TrffPbti#gftLbstPbtiComponfnt
     * @sff TrffPbti#gftLbstPbtiComponfnt
     * @sff TrffPbti#gftLbstPbtiComponfnt
     * @sff TrffPbti#gftLbstPbtiComponfnt
     * @sff TrffPbti#gftLbstPbtiComponfnt
     */
     */
     */
     */
     */
    publid Objfdt gftLbstSflfdtfdPbtiComponfnt() {
    publid Objfdt gftLbstSflfdtfdPbtiComponfnt() {
    publid Objfdt gftLbstSflfdtfdPbtiComponfnt() {
    publid Objfdt gftLbstSflfdtfdPbtiComponfnt() {
    publid Objfdt gftLbstSflfdtfdPbtiComponfnt() {
        TrffPbti     sflPbti = gftSflfdtionModfl().gftSflfdtionPbti();
        TrffPbti     sflPbti = gftSflfdtionModfl().gftSflfdtionPbti();
        TrffPbti     sflPbti = gftSflfdtionModfl().gftSflfdtionPbti();
        TrffPbti     sflPbti = gftSflfdtionModfl().gftSflfdtionPbti();
        TrffPbti     sflPbti = gftSflfdtionModfl().gftSflfdtionPbti();





        if(sflPbti != null)
        if(sflPbti != null)
        if(sflPbti != null)
        if(sflPbti != null)
        if(sflPbti != null)
            rfturn sflPbti.gftLbstPbtiComponfnt();
            rfturn sflPbti.gftLbstPbtiComponfnt();
            rfturn sflPbti.gftLbstPbtiComponfnt();
            rfturn sflPbti.gftLbstPbtiComponfnt();
            rfturn sflPbti.gftLbstPbtiComponfnt();
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti idfntififd bs tif lfbd.
     * Rfturns tif pbti idfntififd bs tif lfbd.
     * Rfturns tif pbti idfntififd bs tif lfbd.
     * Rfturns tif pbti idfntififd bs tif lfbd.
     * Rfturns tif pbti idfntififd bs tif lfbd.
     * @rfturn pbti idfntififd bs tif lfbd
     * @rfturn pbti idfntififd bs tif lfbd
     * @rfturn pbti idfntififd bs tif lfbd
     * @rfturn pbti idfntififd bs tif lfbd
     * @rfturn pbti idfntififd bs tif lfbd
     */
     */
     */
     */
     */
    publid TrffPbti gftLfbdSflfdtionPbti() {
    publid TrffPbti gftLfbdSflfdtionPbti() {
    publid TrffPbti gftLfbdSflfdtionPbti() {
    publid TrffPbti gftLfbdSflfdtionPbti() {
    publid TrffPbti gftLfbdSflfdtionPbti() {
        rfturn lfbdPbti;
        rfturn lfbdPbti;
        rfturn lfbdPbti;
        rfturn lfbdPbti;
        rfturn lfbdPbti;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti idfntififd bs tif bndior.
     * Rfturns tif pbti idfntififd bs tif bndior.
     * Rfturns tif pbti idfntififd bs tif bndior.
     * Rfturns tif pbti idfntififd bs tif bndior.
     * Rfturns tif pbti idfntififd bs tif bndior.
     * @rfturn pbti idfntififd bs tif bndior
     * @rfturn pbti idfntififd bs tif bndior
     * @rfturn pbti idfntififd bs tif bndior
     * @rfturn pbti idfntififd bs tif bndior
     * @rfturn pbti idfntififd bs tif bndior
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    publid TrffPbti gftAndiorSflfdtionPbti() {
    publid TrffPbti gftAndiorSflfdtionPbti() {
    publid TrffPbti gftAndiorSflfdtionPbti() {
    publid TrffPbti gftAndiorSflfdtionPbti() {
    publid TrffPbti gftAndiorSflfdtionPbti() {
        rfturn bndiorPbti;
        rfturn bndiorPbti;
        rfturn bndiorPbti;
        rfturn bndiorPbti;
        rfturn bndiorPbti;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti to tif first sflfdtfd nodf.
     * Rfturns tif pbti to tif first sflfdtfd nodf.
     * Rfturns tif pbti to tif first sflfdtfd nodf.
     * Rfturns tif pbti to tif first sflfdtfd nodf.
     * Rfturns tif pbti to tif first sflfdtfd nodf.
     *
     *
     *
     *
     *
     * @rfturn tif <dodf>TrffPbti</dodf> for tif first sflfdtfd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> for tif first sflfdtfd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> for tif first sflfdtfd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> for tif first sflfdtfd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> for tif first sflfdtfd nodf,
     *          or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *          or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *          or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *          or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *          or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     */
     */
     */
     */
     */
    publid TrffPbti gftSflfdtionPbti() {
    publid TrffPbti gftSflfdtionPbti() {
    publid TrffPbti gftSflfdtionPbti() {
    publid TrffPbti gftSflfdtionPbti() {
    publid TrffPbti gftSflfdtionPbti() {
        rfturn gftSflfdtionModfl().gftSflfdtionPbti();
        rfturn gftSflfdtionModfl().gftSflfdtionPbti();
        rfturn gftSflfdtionModfl().gftSflfdtionPbti();
        rfturn gftSflfdtionModfl().gftSflfdtionPbti();
        rfturn gftSflfdtionModfl().gftSflfdtionPbti();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbtis of bll sflfdtfd vblufs.
     * Rfturns tif pbtis of bll sflfdtfd vblufs.
     * Rfturns tif pbtis of bll sflfdtfd vblufs.
     * Rfturns tif pbtis of bll sflfdtfd vblufs.
     * Rfturns tif pbtis of bll sflfdtfd vblufs.
     *
     *
     *
     *
     *
     * @rfturn bn brrby of <dodf>TrffPbti</dodf> objfdts indidbting tif sflfdtfd
     * @rfturn bn brrby of <dodf>TrffPbti</dodf> objfdts indidbting tif sflfdtfd
     * @rfturn bn brrby of <dodf>TrffPbti</dodf> objfdts indidbting tif sflfdtfd
     * @rfturn bn brrby of <dodf>TrffPbti</dodf> objfdts indidbting tif sflfdtfd
     * @rfturn bn brrby of <dodf>TrffPbti</dodf> objfdts indidbting tif sflfdtfd
     *         nodfs, or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *         nodfs, or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *         nodfs, or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *         nodfs, or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     *         nodfs, or <dodf>null</dodf> if notiing is durrfntly sflfdtfd
     */
     */
     */
     */
     */
    publid TrffPbti[] gftSflfdtionPbtis() {
    publid TrffPbti[] gftSflfdtionPbtis() {
    publid TrffPbti[] gftSflfdtionPbtis() {
    publid TrffPbti[] gftSflfdtionPbtis() {
    publid TrffPbti[] gftSflfdtionPbtis() {
        TrffPbti[] sflfdtionPbtis = gftSflfdtionModfl().gftSflfdtionPbtis();
        TrffPbti[] sflfdtionPbtis = gftSflfdtionModfl().gftSflfdtionPbtis();
        TrffPbti[] sflfdtionPbtis = gftSflfdtionModfl().gftSflfdtionPbtis();
        TrffPbti[] sflfdtionPbtis = gftSflfdtionModfl().gftSflfdtionPbtis();
        TrffPbti[] sflfdtionPbtis = gftSflfdtionModfl().gftSflfdtionPbtis();





        rfturn (sflfdtionPbtis != null && sflfdtionPbtis.lfngti > 0) ? sflfdtionPbtis : null;
        rfturn (sflfdtionPbtis != null && sflfdtionPbtis.lfngti > 0) ? sflfdtionPbtis : null;
        rfturn (sflfdtionPbtis != null && sflfdtionPbtis.lfngti > 0) ? sflfdtionPbtis : null;
        rfturn (sflfdtionPbtis != null && sflfdtionPbtis.lfngti > 0) ? sflfdtionPbtis : null;
        rfturn (sflfdtionPbtis != null && sflfdtionPbtis.lfngti > 0) ? sflfdtionPbtis : null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bll of tif durrfntly sflfdtfd rows. Tiis mftiod is simply
     * Rfturns bll of tif durrfntly sflfdtfd rows. Tiis mftiod is simply
     * Rfturns bll of tif durrfntly sflfdtfd rows. Tiis mftiod is simply
     * Rfturns bll of tif durrfntly sflfdtfd rows. Tiis mftiod is simply
     * Rfturns bll of tif durrfntly sflfdtfd rows. Tiis mftiod is simply
     * forwbrdfd to tif <dodf>TrffSflfdtionModfl</dodf>.
     * forwbrdfd to tif <dodf>TrffSflfdtionModfl</dodf>.
     * forwbrdfd to tif <dodf>TrffSflfdtionModfl</dodf>.
     * forwbrdfd to tif <dodf>TrffSflfdtionModfl</dodf>.
     * forwbrdfd to tif <dodf>TrffSflfdtionModfl</dodf>.
     * If notiing is sflfdtfd <dodf>null</dodf> or bn fmpty brrby will
     * If notiing is sflfdtfd <dodf>null</dodf> or bn fmpty brrby will
     * If notiing is sflfdtfd <dodf>null</dodf> or bn fmpty brrby will
     * If notiing is sflfdtfd <dodf>null</dodf> or bn fmpty brrby will
     * If notiing is sflfdtfd <dodf>null</dodf> or bn fmpty brrby will
     * bf rfturnfd, bbsfd on tif <dodf>TrffSflfdtionModfl</dodf>
     * bf rfturnfd, bbsfd on tif <dodf>TrffSflfdtionModfl</dodf>
     * bf rfturnfd, bbsfd on tif <dodf>TrffSflfdtionModfl</dodf>
     * bf rfturnfd, bbsfd on tif <dodf>TrffSflfdtionModfl</dodf>
     * bf rfturnfd, bbsfd on tif <dodf>TrffSflfdtionModfl</dodf>
     * implfmfntbtion.
     * implfmfntbtion.
     * implfmfntbtion.
     * implfmfntbtion.
     * implfmfntbtion.
     *
     *
     *
     *
     *
     * @rfturn bn brrby of intfgfrs tibt idfntififs bll durrfntly sflfdtfd rows
     * @rfturn bn brrby of intfgfrs tibt idfntififs bll durrfntly sflfdtfd rows
     * @rfturn bn brrby of intfgfrs tibt idfntififs bll durrfntly sflfdtfd rows
     * @rfturn bn brrby of intfgfrs tibt idfntififs bll durrfntly sflfdtfd rows
     * @rfturn bn brrby of intfgfrs tibt idfntififs bll durrfntly sflfdtfd rows
     *         wifrf 0 is tif first row in tif displby
     *         wifrf 0 is tif first row in tif displby
     *         wifrf 0 is tif first row in tif displby
     *         wifrf 0 is tif first row in tif displby
     *         wifrf 0 is tif first row in tif displby
     */
     */
     */
     */
     */
    publid int[] gftSflfdtionRows() {
    publid int[] gftSflfdtionRows() {
    publid int[] gftSflfdtionRows() {
    publid int[] gftSflfdtionRows() {
    publid int[] gftSflfdtionRows() {
        rfturn gftSflfdtionModfl().gftSflfdtionRows();
        rfturn gftSflfdtionModfl().gftSflfdtionRows();
        rfturn gftSflfdtionModfl().gftSflfdtionRows();
        rfturn gftSflfdtionModfl().gftSflfdtionRows();
        rfturn gftSflfdtionModfl().gftSflfdtionRows();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of nodfs sflfdtfd.
     * Rfturns tif numbfr of nodfs sflfdtfd.
     * Rfturns tif numbfr of nodfs sflfdtfd.
     * Rfturns tif numbfr of nodfs sflfdtfd.
     * Rfturns tif numbfr of nodfs sflfdtfd.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of nodfs sflfdtfd
     * @rfturn tif numbfr of nodfs sflfdtfd
     * @rfturn tif numbfr of nodfs sflfdtfd
     * @rfturn tif numbfr of nodfs sflfdtfd
     * @rfturn tif numbfr of nodfs sflfdtfd
     */
     */
     */
     */
     */
    publid int gftSflfdtionCount() {
    publid int gftSflfdtionCount() {
    publid int gftSflfdtionCount() {
    publid int gftSflfdtionCount() {
    publid int gftSflfdtionCount() {
        rfturn sflfdtionModfl.gftSflfdtionCount();
        rfturn sflfdtionModfl.gftSflfdtionCount();
        rfturn sflfdtionModfl.gftSflfdtionCount();
        rfturn sflfdtionModfl.gftSflfdtionCount();
        rfturn sflfdtionModfl.gftSflfdtionCount();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif smbllfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif smbllfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif smbllfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif smbllfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif smbllfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     *
     *
     *
     *
     *
     * @rfturn tif smbllfst sflfdtfd row
     * @rfturn tif smbllfst sflfdtfd row
     * @rfturn tif smbllfst sflfdtfd row
     * @rfturn tif smbllfst sflfdtfd row
     * @rfturn tif smbllfst sflfdtfd row
     */
     */
     */
     */
     */
    publid int gftMinSflfdtionRow() {
    publid int gftMinSflfdtionRow() {
    publid int gftMinSflfdtionRow() {
    publid int gftMinSflfdtionRow() {
    publid int gftMinSflfdtionRow() {
        rfturn gftSflfdtionModfl().gftMinSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMinSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMinSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMinSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMinSflfdtionRow();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif lbrgfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif lbrgfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif lbrgfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif lbrgfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * Rfturns tif lbrgfst sflfdtfd row. If tif sflfdtion is fmpty, or
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     * nonf of tif sflfdtfd pbtis brf vifwbblf, {@dodf -1} is rfturnfd.
     *
     *
     *
     *
     *
     * @rfturn tif lbrgfst sflfdtfd row
     * @rfturn tif lbrgfst sflfdtfd row
     * @rfturn tif lbrgfst sflfdtfd row
     * @rfturn tif lbrgfst sflfdtfd row
     * @rfturn tif lbrgfst sflfdtfd row
     */
     */
     */
     */
     */
    publid int gftMbxSflfdtionRow() {
    publid int gftMbxSflfdtionRow() {
    publid int gftMbxSflfdtionRow() {
    publid int gftMbxSflfdtionRow() {
    publid int gftMbxSflfdtionRow() {
        rfturn gftSflfdtionModfl().gftMbxSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMbxSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMbxSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMbxSflfdtionRow();
        rfturn gftSflfdtionModfl().gftMbxSflfdtionRow();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif row indfx dorrfsponding to tif lfbd pbti.
     * Rfturns tif row indfx dorrfsponding to tif lfbd pbti.
     * Rfturns tif row indfx dorrfsponding to tif lfbd pbti.
     * Rfturns tif row indfx dorrfsponding to tif lfbd pbti.
     * Rfturns tif row indfx dorrfsponding to tif lfbd pbti.
     *
     *
     *
     *
     *
     * @rfturn bn intfgfr giving tif row indfx of tif lfbd pbti,
     * @rfturn bn intfgfr giving tif row indfx of tif lfbd pbti,
     * @rfturn bn intfgfr giving tif row indfx of tif lfbd pbti,
     * @rfturn bn intfgfr giving tif row indfx of tif lfbd pbti,
     * @rfturn bn intfgfr giving tif row indfx of tif lfbd pbti,
     *          wifrf 0 is tif first row in tif displby; or -1
     *          wifrf 0 is tif first row in tif displby; or -1
     *          wifrf 0 is tif first row in tif displby; or -1
     *          wifrf 0 is tif first row in tif displby; or -1
     *          wifrf 0 is tif first row in tif displby; or -1
     *          if <dodf>lfbdPbti</dodf> is <dodf>null</dodf>
     *          if <dodf>lfbdPbti</dodf> is <dodf>null</dodf>
     *          if <dodf>lfbdPbti</dodf> is <dodf>null</dodf>
     *          if <dodf>lfbdPbti</dodf> is <dodf>null</dodf>
     *          if <dodf>lfbdPbti</dodf> is <dodf>null</dodf>
     */
     */
     */
     */
     */
    publid int gftLfbdSflfdtionRow() {
    publid int gftLfbdSflfdtionRow() {
    publid int gftLfbdSflfdtionRow() {
    publid int gftLfbdSflfdtionRow() {
    publid int gftLfbdSflfdtionRow() {
        TrffPbti lfbdPbti = gftLfbdSflfdtionPbti();
        TrffPbti lfbdPbti = gftLfbdSflfdtionPbti();
        TrffPbti lfbdPbti = gftLfbdSflfdtionPbti();
        TrffPbti lfbdPbti = gftLfbdSflfdtionPbti();
        TrffPbti lfbdPbti = gftLfbdSflfdtionPbti();





        if (lfbdPbti != null) {
        if (lfbdPbti != null) {
        if (lfbdPbti != null) {
        if (lfbdPbti != null) {
        if (lfbdPbti != null) {
            rfturn gftRowForPbti(lfbdPbti);
            rfturn gftRowForPbti(lfbdPbti);
            rfturn gftRowForPbti(lfbdPbti);
            rfturn gftRowForPbti(lfbdPbti);
            rfturn gftRowForPbti(lfbdPbti);
        }
        }
        }
        }
        }
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif itfm idfntififd by tif pbti is durrfntly sflfdtfd.
     * Rfturns truf if tif itfm idfntififd by tif pbti is durrfntly sflfdtfd.
     * Rfturns truf if tif itfm idfntififd by tif pbti is durrfntly sflfdtfd.
     * Rfturns truf if tif itfm idfntififd by tif pbti is durrfntly sflfdtfd.
     * Rfturns truf if tif itfm idfntififd by tif pbti is durrfntly sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm pbti b <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti b <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti b <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti b <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti b <dodf>TrffPbti</dodf> idfntifying b nodf
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     */
     */
     */
     */
     */
    publid boolfbn isPbtiSflfdtfd(TrffPbti pbti) {
    publid boolfbn isPbtiSflfdtfd(TrffPbti pbti) {
    publid boolfbn isPbtiSflfdtfd(TrffPbti pbti) {
    publid boolfbn isPbtiSflfdtfd(TrffPbti pbti) {
    publid boolfbn isPbtiSflfdtfd(TrffPbti pbti) {
        rfturn gftSflfdtionModfl().isPbtiSflfdtfd(pbti);
        rfturn gftSflfdtionModfl().isPbtiSflfdtfd(pbti);
        rfturn gftSflfdtionModfl().isPbtiSflfdtfd(pbti);
        rfturn gftSflfdtionModfl().isPbtiSflfdtfd(pbti);
        rfturn gftSflfdtionModfl().isPbtiSflfdtfd(pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif nodf idfntififd by row is sflfdtfd.
     * Rfturns truf if tif nodf idfntififd by row is sflfdtfd.
     * Rfturns truf if tif nodf idfntififd by row is sflfdtfd.
     * Rfturns truf if tif nodf idfntififd by row is sflfdtfd.
     * Rfturns truf if tif nodf idfntififd by row is sflfdtfd.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif first
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif first
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif first
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif first
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif first
     *             row in tif displby
     *             row in tif displby
     *             row in tif displby
     *             row in tif displby
     *             row in tif displby
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     * @rfturn truf if tif nodf is sflfdtfd
     */
     */
     */
     */
     */
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
    publid boolfbn isRowSflfdtfd(int row) {
        rfturn gftSflfdtionModfl().isRowSflfdtfd(row);
        rfturn gftSflfdtionModfl().isRowSflfdtfd(row);
        rfturn gftSflfdtionModfl().isRowSflfdtfd(row);
        rfturn gftSflfdtionModfl().isRowSflfdtfd(row);
        rfturn gftSflfdtionModfl().isRowSflfdtfd(row);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn <dodf>Enumfrbtion</dodf> of tif dfsdfndbnts of tif
     * Rfturns bn <dodf>Enumfrbtion</dodf> of tif dfsdfndbnts of tif
     * Rfturns bn <dodf>Enumfrbtion</dodf> of tif dfsdfndbnts of tif
     * Rfturns bn <dodf>Enumfrbtion</dodf> of tif dfsdfndbnts of tif
     * Rfturns bn <dodf>Enumfrbtion</dodf> of tif dfsdfndbnts of tif
     * pbti <dodf>pbrfnt</dodf> tibt
     * pbti <dodf>pbrfnt</dodf> tibt
     * pbti <dodf>pbrfnt</dodf> tibt
     * pbti <dodf>pbrfnt</dodf> tibt
     * pbti <dodf>pbrfnt</dodf> tibt
     * brf durrfntly fxpbndfd. If <dodf>pbrfnt</dodf> is not durrfntly
     * brf durrfntly fxpbndfd. If <dodf>pbrfnt</dodf> is not durrfntly
     * brf durrfntly fxpbndfd. If <dodf>pbrfnt</dodf> is not durrfntly
     * brf durrfntly fxpbndfd. If <dodf>pbrfnt</dodf> is not durrfntly
     * brf durrfntly fxpbndfd. If <dodf>pbrfnt</dodf> is not durrfntly
     * fxpbndfd, tiis will rfturn <dodf>null</dodf>.
     * fxpbndfd, tiis will rfturn <dodf>null</dodf>.
     * fxpbndfd, tiis will rfturn <dodf>null</dodf>.
     * fxpbndfd, tiis will rfturn <dodf>null</dodf>.
     * fxpbndfd, tiis will rfturn <dodf>null</dodf>.
     * If you fxpbnd/dollbpsf nodfs wiilf
     * If you fxpbnd/dollbpsf nodfs wiilf
     * If you fxpbnd/dollbpsf nodfs wiilf
     * If you fxpbnd/dollbpsf nodfs wiilf
     * If you fxpbnd/dollbpsf nodfs wiilf
     * itfrbting ovfr tif rfturnfd <dodf>Enumfrbtion</dodf>
     * itfrbting ovfr tif rfturnfd <dodf>Enumfrbtion</dodf>
     * itfrbting ovfr tif rfturnfd <dodf>Enumfrbtion</dodf>
     * itfrbting ovfr tif rfturnfd <dodf>Enumfrbtion</dodf>
     * itfrbting ovfr tif rfturnfd <dodf>Enumfrbtion</dodf>
     * tiis mby not rfturn bll
     * tiis mby not rfturn bll
     * tiis mby not rfturn bll
     * tiis mby not rfturn bll
     * tiis mby not rfturn bll
     * tif fxpbndfd pbtis, or mby rfturn pbtis tibt brf no longfr fxpbndfd.
     * tif fxpbndfd pbtis, or mby rfturn pbtis tibt brf no longfr fxpbndfd.
     * tif fxpbndfd pbtis, or mby rfturn pbtis tibt brf no longfr fxpbndfd.
     * tif fxpbndfd pbtis, or mby rfturn pbtis tibt brf no longfr fxpbndfd.
     * tif fxpbndfd pbtis, or mby rfturn pbtis tibt brf no longfr fxpbndfd.
     *
     *
     *
     *
     *
     * @pbrbm pbrfnt  tif pbti wiidi is to bf fxbminfd
     * @pbrbm pbrfnt  tif pbti wiidi is to bf fxbminfd
     * @pbrbm pbrfnt  tif pbti wiidi is to bf fxbminfd
     * @pbrbm pbrfnt  tif pbti wiidi is to bf fxbminfd
     * @pbrbm pbrfnt  tif pbti wiidi is to bf fxbminfd
     * @rfturn bn <dodf>Enumfrbtion</dodf> of tif dfsdfndfnts of
     * @rfturn bn <dodf>Enumfrbtion</dodf> of tif dfsdfndfnts of
     * @rfturn bn <dodf>Enumfrbtion</dodf> of tif dfsdfndfnts of
     * @rfturn bn <dodf>Enumfrbtion</dodf> of tif dfsdfndfnts of
     * @rfturn bn <dodf>Enumfrbtion</dodf> of tif dfsdfndfnts of
     *          <dodf>pbrfnt</dodf>, or <dodf>null</dodf> if
     *          <dodf>pbrfnt</dodf>, or <dodf>null</dodf> if
     *          <dodf>pbrfnt</dodf>, or <dodf>null</dodf> if
     *          <dodf>pbrfnt</dodf>, or <dodf>null</dodf> if
     *          <dodf>pbrfnt</dodf>, or <dodf>null</dodf> if
     *          <dodf>pbrfnt</dodf> is not durrfntly fxpbndfd
     *          <dodf>pbrfnt</dodf> is not durrfntly fxpbndfd
     *          <dodf>pbrfnt</dodf> is not durrfntly fxpbndfd
     *          <dodf>pbrfnt</dodf> is not durrfntly fxpbndfd
     *          <dodf>pbrfnt</dodf> is not durrfntly fxpbndfd
     */
     */
     */
     */
     */
    publid Enumfrbtion<TrffPbti> gftExpbndfdDfsdfndbnts(TrffPbti pbrfnt) {
    publid Enumfrbtion<TrffPbti> gftExpbndfdDfsdfndbnts(TrffPbti pbrfnt) {
    publid Enumfrbtion<TrffPbti> gftExpbndfdDfsdfndbnts(TrffPbti pbrfnt) {
    publid Enumfrbtion<TrffPbti> gftExpbndfdDfsdfndbnts(TrffPbti pbrfnt) {
    publid Enumfrbtion<TrffPbti> gftExpbndfdDfsdfndbnts(TrffPbti pbrfnt) {
        if(!isExpbndfd(pbrfnt))
        if(!isExpbndfd(pbrfnt))
        if(!isExpbndfd(pbrfnt))
        if(!isExpbndfd(pbrfnt))
        if(!isExpbndfd(pbrfnt))
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;





        Enumfrbtion<TrffPbti> togglfdPbtis = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> togglfdPbtis = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> togglfdPbtis = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> togglfdPbtis = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> togglfdPbtis = fxpbndfdStbtf.kfys();
        Vfdtor<TrffPbti> flfmfnts = null;
        Vfdtor<TrffPbti> flfmfnts = null;
        Vfdtor<TrffPbti> flfmfnts = null;
        Vfdtor<TrffPbti> flfmfnts = null;
        Vfdtor<TrffPbti> flfmfnts = null;
        TrffPbti          pbti;
        TrffPbti          pbti;
        TrffPbti          pbti;
        TrffPbti          pbti;
        TrffPbti          pbti;
        Objfdt            vbluf;
        Objfdt            vbluf;
        Objfdt            vbluf;
        Objfdt            vbluf;
        Objfdt            vbluf;





        if(togglfdPbtis != null) {
        if(togglfdPbtis != null) {
        if(togglfdPbtis != null) {
        if(togglfdPbtis != null) {
        if(togglfdPbtis != null) {
            wiilf(togglfdPbtis.ibsMorfElfmfnts()) {
            wiilf(togglfdPbtis.ibsMorfElfmfnts()) {
            wiilf(togglfdPbtis.ibsMorfElfmfnts()) {
            wiilf(togglfdPbtis.ibsMorfElfmfnts()) {
            wiilf(togglfdPbtis.ibsMorfElfmfnts()) {
                pbti = togglfdPbtis.nfxtElfmfnt();
                pbti = togglfdPbtis.nfxtElfmfnt();
                pbti = togglfdPbtis.nfxtElfmfnt();
                pbti = togglfdPbtis.nfxtElfmfnt();
                pbti = togglfdPbtis.nfxtElfmfnt();
                vbluf = fxpbndfdStbtf.gft(pbti);
                vbluf = fxpbndfdStbtf.gft(pbti);
                vbluf = fxpbndfdStbtf.gft(pbti);
                vbluf = fxpbndfdStbtf.gft(pbti);
                vbluf = fxpbndfdStbtf.gft(pbti);
                // Add tif pbti if it is fxpbndfd, b dfsdfndbnt of pbrfnt,
                // Add tif pbti if it is fxpbndfd, b dfsdfndbnt of pbrfnt,
                // Add tif pbti if it is fxpbndfd, b dfsdfndbnt of pbrfnt,
                // Add tif pbti if it is fxpbndfd, b dfsdfndbnt of pbrfnt,
                // Add tif pbti if it is fxpbndfd, b dfsdfndbnt of pbrfnt,
                // bnd it is visiblf (bll pbrfnts fxpbndfd). Tiis is rbtifr
                // bnd it is visiblf (bll pbrfnts fxpbndfd). Tiis is rbtifr
                // bnd it is visiblf (bll pbrfnts fxpbndfd). Tiis is rbtifr
                // bnd it is visiblf (bll pbrfnts fxpbndfd). Tiis is rbtifr
                // bnd it is visiblf (bll pbrfnts fxpbndfd). Tiis is rbtifr
                // fxpfnsivf!
                // fxpfnsivf!
                // fxpfnsivf!
                // fxpfnsivf!
                // fxpfnsivf!
                if(pbti != pbrfnt && vbluf != null &&
                if(pbti != pbrfnt && vbluf != null &&
                if(pbti != pbrfnt && vbluf != null &&
                if(pbti != pbrfnt && vbluf != null &&
                if(pbti != pbrfnt && vbluf != null &&
                   ((Boolfbn)vbluf).boolfbnVbluf() &&
                   ((Boolfbn)vbluf).boolfbnVbluf() &&
                   ((Boolfbn)vbluf).boolfbnVbluf() &&
                   ((Boolfbn)vbluf).boolfbnVbluf() &&
                   ((Boolfbn)vbluf).boolfbnVbluf() &&
                   pbrfnt.isDfsdfndbnt(pbti) && isVisiblf(pbti)) {
                   pbrfnt.isDfsdfndbnt(pbti) && isVisiblf(pbti)) {
                   pbrfnt.isDfsdfndbnt(pbti) && isVisiblf(pbti)) {
                   pbrfnt.isDfsdfndbnt(pbti) && isVisiblf(pbti)) {
                   pbrfnt.isDfsdfndbnt(pbti) && isVisiblf(pbti)) {
                    if (flfmfnts == null) {
                    if (flfmfnts == null) {
                    if (flfmfnts == null) {
                    if (flfmfnts == null) {
                    if (flfmfnts == null) {
                        flfmfnts = nfw Vfdtor<TrffPbti>();
                        flfmfnts = nfw Vfdtor<TrffPbti>();
                        flfmfnts = nfw Vfdtor<TrffPbti>();
                        flfmfnts = nfw Vfdtor<TrffPbti>();
                        flfmfnts = nfw Vfdtor<TrffPbti>();
                    }
                    }
                    }
                    }
                    }
                    flfmfnts.bddElfmfnt(pbti);
                    flfmfnts.bddElfmfnt(pbti);
                    flfmfnts.bddElfmfnt(pbti);
                    flfmfnts.bddElfmfnt(pbti);
                    flfmfnts.bddElfmfnt(pbti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        if (flfmfnts == null) {
        if (flfmfnts == null) {
        if (flfmfnts == null) {
        if (flfmfnts == null) {
        if (flfmfnts == null) {
            Sft<TrffPbti> fmpty = Collfdtions.fmptySft();
            Sft<TrffPbti> fmpty = Collfdtions.fmptySft();
            Sft<TrffPbti> fmpty = Collfdtions.fmptySft();
            Sft<TrffPbti> fmpty = Collfdtions.fmptySft();
            Sft<TrffPbti> fmpty = Collfdtions.fmptySft();
            rfturn Collfdtions.fnumfrbtion(fmpty);
            rfturn Collfdtions.fnumfrbtion(fmpty);
            rfturn Collfdtions.fnumfrbtion(fmpty);
            rfturn Collfdtions.fnumfrbtion(fmpty);
            rfturn Collfdtions.fnumfrbtion(fmpty);
        }
        }
        }
        }
        }
        rfturn flfmfnts.flfmfnts();
        rfturn flfmfnts.flfmfnts();
        rfturn flfmfnts.flfmfnts();
        rfturn flfmfnts.flfmfnts();
        rfturn flfmfnts.flfmfnts();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif nodf idfntififd by tif pbti ibs fvfr bffn
     * Rfturns truf if tif nodf idfntififd by tif pbti ibs fvfr bffn
     * Rfturns truf if tif nodf idfntififd by tif pbti ibs fvfr bffn
     * Rfturns truf if tif nodf idfntififd by tif pbti ibs fvfr bffn
     * Rfturns truf if tif nodf idfntififd by tif pbti ibs fvfr bffn
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     *
     *
     *
     *
     *
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @rfturn truf if tif <dodf>pbti</dodf> ibs fvfr bffn fxpbndfd
     * @rfturn truf if tif <dodf>pbti</dodf> ibs fvfr bffn fxpbndfd
     * @rfturn truf if tif <dodf>pbti</dodf> ibs fvfr bffn fxpbndfd
     * @rfturn truf if tif <dodf>pbti</dodf> ibs fvfr bffn fxpbndfd
     * @rfturn truf if tif <dodf>pbti</dodf> ibs fvfr bffn fxpbndfd
     */
     */
     */
     */
     */
    publid boolfbn ibsBffnExpbndfd(TrffPbti pbti) {
    publid boolfbn ibsBffnExpbndfd(TrffPbti pbti) {
    publid boolfbn ibsBffnExpbndfd(TrffPbti pbti) {
    publid boolfbn ibsBffnExpbndfd(TrffPbti pbti) {
    publid boolfbn ibsBffnExpbndfd(TrffPbti pbti) {
        rfturn (pbti != null && fxpbndfdStbtf.gft(pbti) != null);
        rfturn (pbti != null && fxpbndfdStbtf.gft(pbti) != null);
        rfturn (pbti != null && fxpbndfdStbtf.gft(pbti) != null);
        rfturn (pbti != null && fxpbndfdStbtf.gft(pbti) != null);
        rfturn (pbti != null && fxpbndfdStbtf.gft(pbti) != null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif nodf idfntififd by tif pbti is durrfntly fxpbndfd,
     * Rfturns truf if tif nodf idfntififd by tif pbti is durrfntly fxpbndfd,
     * Rfturns truf if tif nodf idfntififd by tif pbti is durrfntly fxpbndfd,
     * Rfturns truf if tif nodf idfntififd by tif pbti is durrfntly fxpbndfd,
     * Rfturns truf if tif nodf idfntififd by tif pbti is durrfntly fxpbndfd,
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> spfdifying tif nodf to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> spfdifying tif nodf to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> spfdifying tif nodf to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> spfdifying tif nodf to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> spfdifying tif nodf to difdk
     * @rfturn fblsf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn fblsf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn fblsf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn fblsf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn fblsf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     *               truf if bll nodfs in tif pbti brf fxpbndfd
     *               truf if bll nodfs in tif pbti brf fxpbndfd
     *               truf if bll nodfs in tif pbti brf fxpbndfd
     *               truf if bll nodfs in tif pbti brf fxpbndfd
     *               truf if bll nodfs in tif pbti brf fxpbndfd
     */
     */
     */
     */
     */
    publid boolfbn isExpbndfd(TrffPbti pbti) {
    publid boolfbn isExpbndfd(TrffPbti pbti) {
    publid boolfbn isExpbndfd(TrffPbti pbti) {
    publid boolfbn isExpbndfd(TrffPbti pbti) {
    publid boolfbn isExpbndfd(TrffPbti pbti) {





        if(pbti == null)
        if(pbti == null)
        if(pbti == null)
        if(pbti == null)
        if(pbti == null)
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        Objfdt  vbluf;
        Objfdt  vbluf;
        Objfdt  vbluf;
        Objfdt  vbluf;
        Objfdt  vbluf;





        do{
        do{
        do{
        do{
        do{
            vbluf = fxpbndfdStbtf.gft(pbti);
            vbluf = fxpbndfdStbtf.gft(pbti);
            vbluf = fxpbndfdStbtf.gft(pbti);
            vbluf = fxpbndfdStbtf.gft(pbti);
            vbluf = fxpbndfdStbtf.gft(pbti);
            if(vbluf == null || !((Boolfbn)vbluf).boolfbnVbluf())
            if(vbluf == null || !((Boolfbn)vbluf).boolfbnVbluf())
            if(vbluf == null || !((Boolfbn)vbluf).boolfbnVbluf())
            if(vbluf == null || !((Boolfbn)vbluf).boolfbnVbluf())
            if(vbluf == null || !((Boolfbn)vbluf).boolfbnVbluf())
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
        } wiilf( (pbti=pbti.gftPbrfntPbti())!=null );
        } wiilf( (pbti=pbti.gftPbrfntPbti())!=null );
        } wiilf( (pbti=pbti.gftPbrfntPbti())!=null );
        } wiilf( (pbti=pbti.gftPbrfntPbti())!=null );
        } wiilf( (pbti=pbti.gftPbrfntPbti())!=null );





        rfturn truf;
        rfturn truf;
        rfturn truf;
        rfturn truf;
        rfturn truf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif nodf bt tif spfdififd displby row is durrfntly
     * Rfturns truf if tif nodf bt tif spfdififd displby row is durrfntly
     * Rfturns truf if tif nodf bt tif spfdififd displby row is durrfntly
     * Rfturns truf if tif nodf bt tif spfdififd displby row is durrfntly
     * Rfturns truf if tif nodf bt tif spfdififd displby row is durrfntly
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     * fxpbndfd.
     *
     *
     *
     *
     *
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     *             displby
     *             displby
     *             displby
     *             displby
     *             displby
     * @rfturn truf if tif nodf is durrfntly fxpbndfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly fxpbndfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly fxpbndfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly fxpbndfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly fxpbndfd, otifrwisf fblsf
     */
     */
     */
     */
     */
    publid boolfbn isExpbndfd(int row) {
    publid boolfbn isExpbndfd(int row) {
    publid boolfbn isExpbndfd(int row) {
    publid boolfbn isExpbndfd(int row) {
    publid boolfbn isExpbndfd(int row) {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null) {
        if(trff != null) {
        if(trff != null) {
        if(trff != null) {
        if(trff != null) {
            TrffPbti         pbti = trff.gftPbtiForRow(tiis, row);
            TrffPbti         pbti = trff.gftPbtiForRow(tiis, row);
            TrffPbti         pbti = trff.gftPbtiForRow(tiis, row);
            TrffPbti         pbti = trff.gftPbtiForRow(tiis, row);
            TrffPbti         pbti = trff.gftPbtiForRow(tiis, row);





            if(pbti != null) {
            if(pbti != null) {
            if(pbti != null) {
            if(pbti != null) {
            if(pbti != null) {
                Boolfbn vbluf = fxpbndfdStbtf.gft(pbti);
                Boolfbn vbluf = fxpbndfdStbtf.gft(pbti);
                Boolfbn vbluf = fxpbndfdStbtf.gft(pbti);
                Boolfbn vbluf = fxpbndfdStbtf.gft(pbti);
                Boolfbn vbluf = fxpbndfdStbtf.gft(pbti);





                rfturn (vbluf != null && vbluf.boolfbnVbluf());
                rfturn (vbluf != null && vbluf.boolfbnVbluf());
                rfturn (vbluf != null && vbluf.boolfbnVbluf());
                rfturn (vbluf != null && vbluf.boolfbnVbluf());
                rfturn (vbluf != null && vbluf.boolfbnVbluf());
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly dollbpsfd,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly dollbpsfd,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly dollbpsfd,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly dollbpsfd,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly dollbpsfd,
     * tiis will rfturn fblsf if bny of tif vblufs in pbti brf durrfntly
     * tiis will rfturn fblsf if bny of tif vblufs in pbti brf durrfntly
     * tiis will rfturn fblsf if bny of tif vblufs in pbti brf durrfntly
     * tiis will rfturn fblsf if bny of tif vblufs in pbti brf durrfntly
     * tiis will rfturn fblsf if bny of tif vblufs in pbti brf durrfntly
     * not bfing displbyfd.
     * not bfing displbyfd.
     * not bfing displbyfd.
     * not bfing displbyfd.
     * not bfing displbyfd.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to difdk
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to difdk
     * @rfturn truf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn truf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn truf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn truf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     * @rfturn truf if bny of tif nodfs in tif nodf's pbti brf dollbpsfd,
     *               fblsf if bll nodfs in tif pbti brf fxpbndfd
     *               fblsf if bll nodfs in tif pbti brf fxpbndfd
     *               fblsf if bll nodfs in tif pbti brf fxpbndfd
     *               fblsf if bll nodfs in tif pbti brf fxpbndfd
     *               fblsf if bll nodfs in tif pbti brf fxpbndfd
     */
     */
     */
     */
     */
    publid boolfbn isCollbpsfd(TrffPbti pbti) {
    publid boolfbn isCollbpsfd(TrffPbti pbti) {
    publid boolfbn isCollbpsfd(TrffPbti pbti) {
    publid boolfbn isCollbpsfd(TrffPbti pbti) {
    publid boolfbn isCollbpsfd(TrffPbti pbti) {
        rfturn !isExpbndfd(pbti);
        rfturn !isExpbndfd(pbti);
        rfturn !isExpbndfd(pbti);
        rfturn !isExpbndfd(pbti);
        rfturn !isExpbndfd(pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif nodf bt tif spfdififd displby row is dollbpsfd.
     * Rfturns truf if tif nodf bt tif spfdififd displby row is dollbpsfd.
     * Rfturns truf if tif nodf bt tif spfdififd displby row is dollbpsfd.
     * Rfturns truf if tif nodf bt tif spfdififd displby row is dollbpsfd.
     * Rfturns truf if tif nodf bt tif spfdififd displby row is dollbpsfd.
     *
     *
     *
     *
     *
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to difdk, wifrf 0 is tif first row in tif
     *             displby
     *             displby
     *             displby
     *             displby
     *             displby
     * @rfturn truf if tif nodf is durrfntly dollbpsfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly dollbpsfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly dollbpsfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly dollbpsfd, otifrwisf fblsf
     * @rfturn truf if tif nodf is durrfntly dollbpsfd, otifrwisf fblsf
     */
     */
     */
     */
     */
    publid boolfbn isCollbpsfd(int row) {
    publid boolfbn isCollbpsfd(int row) {
    publid boolfbn isCollbpsfd(int row) {
    publid boolfbn isCollbpsfd(int row) {
    publid boolfbn isCollbpsfd(int row) {
        rfturn !isExpbndfd(row);
        rfturn !isExpbndfd(row);
        rfturn !isExpbndfd(row);
        rfturn !isExpbndfd(row);
        rfturn !isExpbndfd(row);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ensurfs tibt tif nodf idfntififd by pbti is durrfntly vifwbblf.
     * Ensurfs tibt tif nodf idfntififd by pbti is durrfntly vifwbblf.
     * Ensurfs tibt tif nodf idfntififd by pbti is durrfntly vifwbblf.
     * Ensurfs tibt tif nodf idfntififd by pbti is durrfntly vifwbblf.
     * Ensurfs tibt tif nodf idfntififd by pbti is durrfntly vifwbblf.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to mbkf visiblf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to mbkf visiblf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to mbkf visiblf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to mbkf visiblf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> to mbkf visiblf
     */
     */
     */
     */
     */
    publid void mbkfVisiblf(TrffPbti pbti) {
    publid void mbkfVisiblf(TrffPbti pbti) {
    publid void mbkfVisiblf(TrffPbti pbti) {
    publid void mbkfVisiblf(TrffPbti pbti) {
    publid void mbkfVisiblf(TrffPbti pbti) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();





            if(pbrfntPbti != null) {
            if(pbrfntPbti != null) {
            if(pbrfntPbti != null) {
            if(pbrfntPbti != null) {
            if(pbrfntPbti != null) {
                fxpbndPbti(pbrfntPbti);
                fxpbndPbti(pbrfntPbti);
                fxpbndPbti(pbrfntPbti);
                fxpbndPbti(pbrfntPbti);
                fxpbndPbti(pbrfntPbti);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly vifwbblf,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly vifwbblf,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly vifwbblf,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly vifwbblf,
     * Rfturns truf if tif vbluf idfntififd by pbti is durrfntly vifwbblf,
     * wiidi mfbns it is fitifr tif root or bll of its pbrfnts brf fxpbndfd.
     * wiidi mfbns it is fitifr tif root or bll of its pbrfnts brf fxpbndfd.
     * wiidi mfbns it is fitifr tif root or bll of its pbrfnts brf fxpbndfd.
     * wiidi mfbns it is fitifr tif root or bll of its pbrfnts brf fxpbndfd.
     * wiidi mfbns it is fitifr tif root or bll of its pbrfnts brf fxpbndfd.
     * Otifrwisf, tiis mftiod rfturns fblsf.
     * Otifrwisf, tiis mftiod rfturns fblsf.
     * Otifrwisf, tiis mftiod rfturns fblsf.
     * Otifrwisf, tiis mftiod rfturns fblsf.
     * Otifrwisf, tiis mftiod rfturns fblsf.
     *
     *
     *
     *
     *
     * @pbrbm pbti {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti {@dodf TrffPbti} idfntifying b nodf
     * @rfturn truf if tif nodf is vifwbblf, otifrwisf fblsf
     * @rfturn truf if tif nodf is vifwbblf, otifrwisf fblsf
     * @rfturn truf if tif nodf is vifwbblf, otifrwisf fblsf
     * @rfturn truf if tif nodf is vifwbblf, otifrwisf fblsf
     * @rfturn truf if tif nodf is vifwbblf, otifrwisf fblsf
     */
     */
     */
     */
     */
    publid boolfbn isVisiblf(TrffPbti pbti) {
    publid boolfbn isVisiblf(TrffPbti pbti) {
    publid boolfbn isVisiblf(TrffPbti pbti) {
    publid boolfbn isVisiblf(TrffPbti pbti) {
    publid boolfbn isVisiblf(TrffPbti pbti) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti        pbrfntPbti = pbti.gftPbrfntPbti();





            if(pbrfntPbti != null)
            if(pbrfntPbti != null)
            if(pbrfntPbti != null)
            if(pbrfntPbti != null)
            if(pbrfntPbti != null)
                rfturn isExpbndfd(pbrfntPbti);
                rfturn isExpbndfd(pbrfntPbti);
                rfturn isExpbndfd(pbrfntPbti);
                rfturn isExpbndfd(pbrfntPbti);
                rfturn isExpbndfd(pbrfntPbti);
            // Root.
            // Root.
            // Root.
            // Root.
            // Root.
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif spfdififd nodf will bf drbwn
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif spfdififd nodf will bf drbwn
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif spfdififd nodf will bf drbwn
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif spfdififd nodf will bf drbwn
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif spfdififd nodf will bf drbwn
     * into. Rfturns <dodf>null</dodf> if bny domponfnt in tif pbti is iiddfn
     * into. Rfturns <dodf>null</dodf> if bny domponfnt in tif pbti is iiddfn
     * into. Rfturns <dodf>null</dodf> if bny domponfnt in tif pbti is iiddfn
     * into. Rfturns <dodf>null</dodf> if bny domponfnt in tif pbti is iiddfn
     * into. Rfturns <dodf>null</dodf> if bny domponfnt in tif pbti is iiddfn
     * (undfr b dollbpsfd pbrfnt).
     * (undfr b dollbpsfd pbrfnt).
     * (undfr b dollbpsfd pbrfnt).
     * (undfr b dollbpsfd pbrfnt).
     * (undfr b dollbpsfd pbrfnt).
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf:<br>
     * Notf:<br>
     * Notf:<br>
     * Notf:<br>
     * Notf:<br>
     * Tiis mftiod rfturns b vblid rfdtbnglf, fvfn if tif spfdififd
     * Tiis mftiod rfturns b vblid rfdtbnglf, fvfn if tif spfdififd
     * Tiis mftiod rfturns b vblid rfdtbnglf, fvfn if tif spfdififd
     * Tiis mftiod rfturns b vblid rfdtbnglf, fvfn if tif spfdififd
     * Tiis mftiod rfturns b vblid rfdtbnglf, fvfn if tif spfdififd
     * nodf is not durrfntly displbyfd.
     * nodf is not durrfntly displbyfd.
     * nodf is not durrfntly displbyfd.
     * nodf is not durrfntly displbyfd.
     * nodf is not durrfntly displbyfd.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> idfntifying tif nodf
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> idfntifying tif nodf
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> idfntifying tif nodf
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> idfntifying tif nodf
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> idfntifying tif nodf
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in,
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in,
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in,
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in,
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in,
     *          or <dodf>null</dodf>
     *          or <dodf>null</dodf>
     *          or <dodf>null</dodf>
     *          or <dodf>null</dodf>
     *          or <dodf>null</dodf>
     */
     */
     */
     */
     */
    publid Rfdtbnglf gftPbtiBounds(TrffPbti pbti) {
    publid Rfdtbnglf gftPbtiBounds(TrffPbti pbti) {
    publid Rfdtbnglf gftPbtiBounds(TrffPbti pbti) {
    publid Rfdtbnglf gftPbtiBounds(TrffPbti pbti) {
    publid Rfdtbnglf gftPbtiBounds(TrffPbti pbti) {
        TrffUI                   trff = gftUI();
        TrffUI                   trff = gftUI();
        TrffUI                   trff = gftUI();
        TrffUI                   trff = gftUI();
        TrffUI                   trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftPbtiBounds(tiis, pbti);
            rfturn trff.gftPbtiBounds(tiis, pbti);
            rfturn trff.gftPbtiBounds(tiis, pbti);
            rfturn trff.gftPbtiBounds(tiis, pbti);
            rfturn trff.gftPbtiBounds(tiis, pbti);
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif nodf bt tif spfdififd row is
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif nodf bt tif spfdififd row is
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif nodf bt tif spfdififd row is
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif nodf bt tif spfdififd row is
     * Rfturns tif <dodf>Rfdtbnglf</dodf> tibt tif nodf bt tif spfdififd row is
     * drbwn in.
     * drbwn in.
     * drbwn in.
     * drbwn in.
     * drbwn in.
     *
     *
     *
     *
     *
     * @pbrbm row  tif row to bf drbwn, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to bf drbwn, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to bf drbwn, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to bf drbwn, wifrf 0 is tif first row in tif
     * @pbrbm row  tif row to bf drbwn, wifrf 0 is tif first row in tif
     *             displby
     *             displby
     *             displby
     *             displby
     *             displby
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in
     * @rfturn tif <dodf>Rfdtbnglf</dodf> tif nodf is drbwn in
     */
     */
     */
     */
     */
    publid Rfdtbnglf gftRowBounds(int row) {
    publid Rfdtbnglf gftRowBounds(int row) {
    publid Rfdtbnglf gftRowBounds(int row) {
    publid Rfdtbnglf gftRowBounds(int row) {
    publid Rfdtbnglf gftRowBounds(int row) {
        rfturn gftPbtiBounds(gftPbtiForRow(row));
        rfturn gftPbtiBounds(gftPbtiForRow(row));
        rfturn gftPbtiBounds(gftPbtiForRow(row));
        rfturn gftPbtiBounds(gftPbtiForRow(row));
        rfturn gftPbtiBounds(gftPbtiForRow(row));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Mbkfs surf bll tif pbti domponfnts in pbti brf fxpbndfd (fxdfpt
     * Mbkfs surf bll tif pbti domponfnts in pbti brf fxpbndfd (fxdfpt
     * Mbkfs surf bll tif pbti domponfnts in pbti brf fxpbndfd (fxdfpt
     * Mbkfs surf bll tif pbti domponfnts in pbti brf fxpbndfd (fxdfpt
     * Mbkfs surf bll tif pbti domponfnts in pbti brf fxpbndfd (fxdfpt
     * for tif lbst pbti domponfnt) bnd sdrolls so tibt tif
     * for tif lbst pbti domponfnt) bnd sdrolls so tibt tif
     * for tif lbst pbti domponfnt) bnd sdrolls so tibt tif
     * for tif lbst pbti domponfnt) bnd sdrolls so tibt tif
     * for tif lbst pbti domponfnt) bnd sdrolls so tibt tif
     * nodf idfntififd by tif pbti is displbyfd. Only works wifn tiis
     * nodf idfntififd by tif pbti is displbyfd. Only works wifn tiis
     * nodf idfntififd by tif pbti is displbyfd. Only works wifn tiis
     * nodf idfntififd by tif pbti is displbyfd. Only works wifn tiis
     * nodf idfntififd by tif pbti is displbyfd. Only works wifn tiis
     * <dodf>JTrff</dodf> is dontbinfd in b <dodf>JSdrollPbnf</dodf>.
     * <dodf>JTrff</dodf> is dontbinfd in b <dodf>JSdrollPbnf</dodf>.
     * <dodf>JTrff</dodf> is dontbinfd in b <dodf>JSdrollPbnf</dodf>.
     * <dodf>JTrff</dodf> is dontbinfd in b <dodf>JSdrollPbnf</dodf>.
     * <dodf>JTrff</dodf> is dontbinfd in b <dodf>JSdrollPbnf</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying tif nodf to
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying tif nodf to
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying tif nodf to
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying tif nodf to
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying tif nodf to
     *          bring into vifw
     *          bring into vifw
     *          bring into vifw
     *          bring into vifw
     *          bring into vifw
     */
     */
     */
     */
     */
    publid void sdrollPbtiToVisiblf(TrffPbti pbti) {
    publid void sdrollPbtiToVisiblf(TrffPbti pbti) {
    publid void sdrollPbtiToVisiblf(TrffPbti pbti) {
    publid void sdrollPbtiToVisiblf(TrffPbti pbti) {
    publid void sdrollPbtiToVisiblf(TrffPbti pbti) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
            mbkfVisiblf(pbti);
            mbkfVisiblf(pbti);
            mbkfVisiblf(pbti);
            mbkfVisiblf(pbti);
            mbkfVisiblf(pbti);





            Rfdtbnglf          bounds = gftPbtiBounds(pbti);
            Rfdtbnglf          bounds = gftPbtiBounds(pbti);
            Rfdtbnglf          bounds = gftPbtiBounds(pbti);
            Rfdtbnglf          bounds = gftPbtiBounds(pbti);
            Rfdtbnglf          bounds = gftPbtiBounds(pbti);





            if(bounds != null) {
            if(bounds != null) {
            if(bounds != null) {
            if(bounds != null) {
            if(bounds != null) {
                sdrollRfdtToVisiblf(bounds);
                sdrollRfdtToVisiblf(bounds);
                sdrollRfdtToVisiblf(bounds);
                sdrollRfdtToVisiblf(bounds);
                sdrollRfdtToVisiblf(bounds);
                if (bddfssiblfContfxt != null) {
                if (bddfssiblfContfxt != null) {
                if (bddfssiblfContfxt != null) {
                if (bddfssiblfContfxt != null) {
                if (bddfssiblfContfxt != null) {
                    ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
                    ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
                    ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
                    ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
                    ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sdrolls tif itfm idfntififd by row until it is displbyfd. Tif minimum
     * Sdrolls tif itfm idfntififd by row until it is displbyfd. Tif minimum
     * Sdrolls tif itfm idfntififd by row until it is displbyfd. Tif minimum
     * Sdrolls tif itfm idfntififd by row until it is displbyfd. Tif minimum
     * Sdrolls tif itfm idfntififd by row until it is displbyfd. Tif minimum
     * of bmount of sdrolling nfdfssbry to bring tif row into vifw
     * of bmount of sdrolling nfdfssbry to bring tif row into vifw
     * of bmount of sdrolling nfdfssbry to bring tif row into vifw
     * of bmount of sdrolling nfdfssbry to bring tif row into vifw
     * of bmount of sdrolling nfdfssbry to bring tif row into vifw
     * is pfrformfd. Only works wifn tiis <dodf>JTrff</dodf> is dontbinfd in b
     * is pfrformfd. Only works wifn tiis <dodf>JTrff</dodf> is dontbinfd in b
     * is pfrformfd. Only works wifn tiis <dodf>JTrff</dodf> is dontbinfd in b
     * is pfrformfd. Only works wifn tiis <dodf>JTrff</dodf> is dontbinfd in b
     * is pfrformfd. Only works wifn tiis <dodf>JTrff</dodf> is dontbinfd in b
     * <dodf>JSdrollPbnf</dodf>.
     * <dodf>JSdrollPbnf</dodf>.
     * <dodf>JSdrollPbnf</dodf>.
     * <dodf>JSdrollPbnf</dodf>.
     * <dodf>JSdrollPbnf</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying tif row to sdroll, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying tif row to sdroll, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying tif row to sdroll, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying tif row to sdroll, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying tif row to sdroll, wifrf 0 is tif
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     */
     */
     */
     */
     */
    publid void sdrollRowToVisiblf(int row) {
    publid void sdrollRowToVisiblf(int row) {
    publid void sdrollRowToVisiblf(int row) {
    publid void sdrollRowToVisiblf(int row) {
    publid void sdrollRowToVisiblf(int row) {
        sdrollPbtiToVisiblf(gftPbtiForRow(row));
        sdrollPbtiToVisiblf(gftPbtiForRow(row));
        sdrollPbtiToVisiblf(gftPbtiForRow(row));
        sdrollPbtiToVisiblf(gftPbtiForRow(row));
        sdrollPbtiToVisiblf(gftPbtiForRow(row));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti for tif spfdififd row.  If <dodf>row</dodf> is
     * Rfturns tif pbti for tif spfdififd row.  If <dodf>row</dodf> is
     * Rfturns tif pbti for tif spfdififd row.  If <dodf>row</dodf> is
     * Rfturns tif pbti for tif spfdififd row.  If <dodf>row</dodf> is
     * Rfturns tif pbti for tif spfdififd row.  If <dodf>row</dodf> is
     * not visiblf, or b {@dodf TrffUI} ibs not bffn sft, <dodf>null</dodf>
     * not visiblf, or b {@dodf TrffUI} ibs not bffn sft, <dodf>null</dodf>
     * not visiblf, or b {@dodf TrffUI} ibs not bffn sft, <dodf>null</dodf>
     * not visiblf, or b {@dodf TrffUI} ibs not bffn sft, <dodf>null</dodf>
     * not visiblf, or b {@dodf TrffUI} ibs not bffn sft, <dodf>null</dodf>
     * is rfturnfd.
     * is rfturnfd.
     * is rfturnfd.
     * is rfturnfd.
     * is rfturnfd.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying b row
     * @pbrbm row  bn intfgfr spfdifying b row
     * @pbrbm row  bn intfgfr spfdifying b row
     * @pbrbm row  bn intfgfr spfdifying b row
     * @pbrbm row  bn intfgfr spfdifying b row
     * @rfturn tif <dodf>TrffPbti</dodf> to tif spfdififd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> to tif spfdififd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> to tif spfdififd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> to tif spfdififd nodf,
     * @rfturn tif <dodf>TrffPbti</dodf> to tif spfdififd nodf,
     *          <dodf>null</dodf> if <dodf>row &lt; 0</dodf>
     *          <dodf>null</dodf> if <dodf>row &lt; 0</dodf>
     *          <dodf>null</dodf> if <dodf>row &lt; 0</dodf>
     *          <dodf>null</dodf> if <dodf>row &lt; 0</dodf>
     *          <dodf>null</dodf> if <dodf>row &lt; 0</dodf>
     *          or <dodf>row &gt;= gftRowCount()</dodf>
     *          or <dodf>row &gt;= gftRowCount()</dodf>
     *          or <dodf>row &gt;= gftRowCount()</dodf>
     *          or <dodf>row &gt;= gftRowCount()</dodf>
     *          or <dodf>row &gt;= gftRowCount()</dodf>
     */
     */
     */
     */
     */
    publid TrffPbti gftPbtiForRow(int row) {
    publid TrffPbti gftPbtiForRow(int row) {
    publid TrffPbti gftPbtiForRow(int row) {
    publid TrffPbti gftPbtiForRow(int row) {
    publid TrffPbti gftPbtiForRow(int row) {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftPbtiForRow(tiis, row);
            rfturn trff.gftPbtiForRow(tiis, row);
            rfturn trff.gftPbtiForRow(tiis, row);
            rfturn trff.gftPbtiForRow(tiis, row);
            rfturn trff.gftPbtiForRow(tiis, row);
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif row tibt displbys tif nodf idfntififd by tif spfdififd
     * Rfturns tif row tibt displbys tif nodf idfntififd by tif spfdififd
     * Rfturns tif row tibt displbys tif nodf idfntififd by tif spfdififd
     * Rfturns tif row tibt displbys tif nodf idfntififd by tif spfdififd
     * Rfturns tif row tibt displbys tif nodf idfntififd by tif spfdififd
     * pbti.
     * pbti.
     * pbti.
     * pbti.
     * pbti.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @rfturn bn intfgfr spfdifying tif displby row, wifrf 0 is tif first
     * @rfturn bn intfgfr spfdifying tif displby row, wifrf 0 is tif first
     * @rfturn bn intfgfr spfdifying tif displby row, wifrf 0 is tif first
     * @rfturn bn intfgfr spfdifying tif displby row, wifrf 0 is tif first
     * @rfturn bn intfgfr spfdifying tif displby row, wifrf 0 is tif first
     *         row in tif displby, or -1 if bny of tif flfmfnts in pbti
     *         row in tif displby, or -1 if bny of tif flfmfnts in pbti
     *         row in tif displby, or -1 if bny of tif flfmfnts in pbti
     *         row in tif displby, or -1 if bny of tif flfmfnts in pbti
     *         row in tif displby, or -1 if bny of tif flfmfnts in pbti
     *         brf iiddfn undfr b dollbpsfd pbrfnt.
     *         brf iiddfn undfr b dollbpsfd pbrfnt.
     *         brf iiddfn undfr b dollbpsfd pbrfnt.
     *         brf iiddfn undfr b dollbpsfd pbrfnt.
     *         brf iiddfn undfr b dollbpsfd pbrfnt.
     */
     */
     */
     */
     */
    publid int gftRowForPbti(TrffPbti pbti) {
    publid int gftRowForPbti(TrffPbti pbti) {
    publid int gftRowForPbti(TrffPbti pbti) {
    publid int gftRowForPbti(TrffPbti pbti) {
    publid int gftRowForPbti(TrffPbti pbti) {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftRowForPbti(tiis, pbti);
            rfturn trff.gftRowForPbti(tiis, pbti);
            rfturn trff.gftRowForPbti(tiis, pbti);
            rfturn trff.gftRowForPbti(tiis, pbti);
            rfturn trff.gftRowForPbti(tiis, pbti);
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
        rfturn -1;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * fxpbndfd bnd vifwbblf. If tif lbst itfm in tif pbti is b
     * fxpbndfd bnd vifwbblf. If tif lbst itfm in tif pbti is b
     * fxpbndfd bnd vifwbblf. If tif lbst itfm in tif pbti is b
     * fxpbndfd bnd vifwbblf. If tif lbst itfm in tif pbti is b
     * fxpbndfd bnd vifwbblf. If tif lbst itfm in tif pbti is b
     * lfbf, tiis will ibvf no ffffdt.
     * lfbf, tiis will ibvf no ffffdt.
     * lfbf, tiis will ibvf no ffffdt.
     * lfbf, tiis will ibvf no ffffdt.
     * lfbf, tiis will ibvf no ffffdt.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     */
     */
     */
     */
     */
    publid void fxpbndPbti(TrffPbti pbti) {
    publid void fxpbndPbti(TrffPbti pbti) {
    publid void fxpbndPbti(TrffPbti pbti) {
    publid void fxpbndPbti(TrffPbti pbti) {
    publid void fxpbndPbti(TrffPbti pbti) {
        // Only fxpbnd if not lfbf!
        // Only fxpbnd if not lfbf!
        // Only fxpbnd if not lfbf!
        // Only fxpbnd if not lfbf!
        // Only fxpbnd if not lfbf!
        TrffModfl          modfl = gftModfl();
        TrffModfl          modfl = gftModfl();
        TrffModfl          modfl = gftModfl();
        TrffModfl          modfl = gftModfl();
        TrffModfl          modfl = gftModfl();





        if(pbti != null && modfl != null &&
        if(pbti != null && modfl != null &&
        if(pbti != null && modfl != null &&
        if(pbti != null && modfl != null &&
        if(pbti != null && modfl != null &&
           !modfl.isLfbf(pbti.gftLbstPbtiComponfnt())) {
           !modfl.isLfbf(pbti.gftLbstPbtiComponfnt())) {
           !modfl.isLfbf(pbti.gftLbstPbtiComponfnt())) {
           !modfl.isLfbf(pbti.gftLbstPbtiComponfnt())) {
           !modfl.isLfbf(pbti.gftLbstPbtiComponfnt())) {
            sftExpbndfdStbtf(pbti, truf);
            sftExpbndfdStbtf(pbti, truf);
            sftExpbndfdStbtf(pbti, truf);
            sftExpbndfdStbtf(pbti, truf);
            sftExpbndfdStbtf(pbti, truf);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ensurfs tibt tif nodf in tif spfdififd row is fxpbndfd bnd
     * Ensurfs tibt tif nodf in tif spfdififd row is fxpbndfd bnd
     * Ensurfs tibt tif nodf in tif spfdififd row is fxpbndfd bnd
     * Ensurfs tibt tif nodf in tif spfdififd row is fxpbndfd bnd
     * Ensurfs tibt tif nodf in tif spfdififd row is fxpbndfd bnd
     * vifwbblf.
     * vifwbblf.
     * vifwbblf.
     * vifwbblf.
     * vifwbblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     */
     */
     */
     */
     */
    publid void fxpbndRow(int row) {
    publid void fxpbndRow(int row) {
    publid void fxpbndRow(int row) {
    publid void fxpbndRow(int row) {
    publid void fxpbndRow(int row) {
        fxpbndPbti(gftPbtiForRow(row));
        fxpbndPbti(gftPbtiForRow(row));
        fxpbndPbti(gftPbtiForRow(row));
        fxpbndPbti(gftPbtiForRow(row));
        fxpbndPbti(gftPbtiForRow(row));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * Ensurfs tibt tif nodf idfntififd by tif spfdififd pbti is
     * dollbpsfd bnd vifwbblf.
     * dollbpsfd bnd vifwbblf.
     * dollbpsfd bnd vifwbblf.
     * dollbpsfd bnd vifwbblf.
     * dollbpsfd bnd vifwbblf.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
      */
      */
      */
      */
      */
    publid void dollbpsfPbti(TrffPbti pbti) {
    publid void dollbpsfPbti(TrffPbti pbti) {
    publid void dollbpsfPbti(TrffPbti pbti) {
    publid void dollbpsfPbti(TrffPbti pbti) {
    publid void dollbpsfPbti(TrffPbti pbti) {
        sftExpbndfdStbtf(pbti, fblsf);
        sftExpbndfdStbtf(pbti, fblsf);
        sftExpbndfdStbtf(pbti, fblsf);
        sftExpbndfdStbtf(pbti, fblsf);
        sftExpbndfdStbtf(pbti, fblsf);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ensurfs tibt tif nodf in tif spfdififd row is dollbpsfd.
     * Ensurfs tibt tif nodf in tif spfdififd row is dollbpsfd.
     * Ensurfs tibt tif nodf in tif spfdififd row is dollbpsfd.
     * Ensurfs tibt tif nodf in tif spfdififd row is dollbpsfd.
     * Ensurfs tibt tif nodf in tif spfdififd row is dollbpsfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * If <dodf>row</dodf> is &lt; 0 or &gt;= <dodf>gftRowCount</dodf> tiis
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     * will ibvf no ffffdt.
     *
     *
     *
     *
     *
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     * @pbrbm row  bn intfgfr spfdifying b displby row, wifrf 0 is tif
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
     *             first row in tif displby
      */
      */
      */
      */
      */
    publid void dollbpsfRow(int row) {
    publid void dollbpsfRow(int row) {
    publid void dollbpsfRow(int row) {
    publid void dollbpsfRow(int row) {
    publid void dollbpsfRow(int row) {
        dollbpsfPbti(gftPbtiForRow(row));
        dollbpsfPbti(gftPbtiForRow(row));
        dollbpsfPbti(gftPbtiForRow(row));
        dollbpsfPbti(gftPbtiForRow(row));
        dollbpsfPbti(gftPbtiForRow(row));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti for tif nodf bt tif spfdififd lodbtion.
     * Rfturns tif pbti for tif nodf bt tif spfdififd lodbtion.
     * Rfturns tif pbti for tif nodf bt tif spfdififd lodbtion.
     * Rfturns tif pbti for tif nodf bt tif spfdififd lodbtion.
     * Rfturns tif pbti for tif nodf bt tif spfdififd lodbtion.
     *
     *
     *
     *
     *
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bt tibt lodbtion
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bt tibt lodbtion
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bt tibt lodbtion
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bt tibt lodbtion
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bt tibt lodbtion
     */
     */
     */
     */
     */
    publid TrffPbti gftPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftPbtiForLodbtion(int x, int y) {
        TrffPbti          dlosfstPbti = gftClosfstPbtiForLodbtion(x, y);
        TrffPbti          dlosfstPbti = gftClosfstPbtiForLodbtion(x, y);
        TrffPbti          dlosfstPbti = gftClosfstPbtiForLodbtion(x, y);
        TrffPbti          dlosfstPbti = gftClosfstPbtiForLodbtion(x, y);
        TrffPbti          dlosfstPbti = gftClosfstPbtiForLodbtion(x, y);





        if(dlosfstPbti != null) {
        if(dlosfstPbti != null) {
        if(dlosfstPbti != null) {
        if(dlosfstPbti != null) {
        if(dlosfstPbti != null) {
            Rfdtbnglf       pbtiBounds = gftPbtiBounds(dlosfstPbti);
            Rfdtbnglf       pbtiBounds = gftPbtiBounds(dlosfstPbti);
            Rfdtbnglf       pbtiBounds = gftPbtiBounds(dlosfstPbti);
            Rfdtbnglf       pbtiBounds = gftPbtiBounds(dlosfstPbti);
            Rfdtbnglf       pbtiBounds = gftPbtiBounds(dlosfstPbti);





            if(pbtiBounds != null &&
            if(pbtiBounds != null &&
            if(pbtiBounds != null &&
            if(pbtiBounds != null &&
            if(pbtiBounds != null &&
               x >= pbtiBounds.x && x < (pbtiBounds.x + pbtiBounds.widti) &&
               x >= pbtiBounds.x && x < (pbtiBounds.x + pbtiBounds.widti) &&
               x >= pbtiBounds.x && x < (pbtiBounds.x + pbtiBounds.widti) &&
               x >= pbtiBounds.x && x < (pbtiBounds.x + pbtiBounds.widti) &&
               x >= pbtiBounds.x && x < (pbtiBounds.x + pbtiBounds.widti) &&
               y >= pbtiBounds.y && y < (pbtiBounds.y + pbtiBounds.ifigit))
               y >= pbtiBounds.y && y < (pbtiBounds.y + pbtiBounds.ifigit))
               y >= pbtiBounds.y && y < (pbtiBounds.y + pbtiBounds.ifigit))
               y >= pbtiBounds.y && y < (pbtiBounds.y + pbtiBounds.ifigit))
               y >= pbtiBounds.y && y < (pbtiBounds.y + pbtiBounds.ifigit))
                rfturn dlosfstPbti;
                rfturn dlosfstPbti;
                rfturn dlosfstPbti;
                rfturn dlosfstPbti;
                rfturn dlosfstPbti;
        }
        }
        }
        }
        }
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif row for tif spfdififd lodbtion.
     * Rfturns tif row for tif spfdififd lodbtion.
     * Rfturns tif row for tif spfdififd lodbtion.
     * Rfturns tif row for tif spfdififd lodbtion.
     * Rfturns tif row for tif spfdififd lodbtion.
     *
     *
     *
     *
     *
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     * @rfturn tif row dorrfsponding to tif lodbtion, or -1 if tif
     * @rfturn tif row dorrfsponding to tif lodbtion, or -1 if tif
     * @rfturn tif row dorrfsponding to tif lodbtion, or -1 if tif
     * @rfturn tif row dorrfsponding to tif lodbtion, or -1 if tif
     * @rfturn tif row dorrfsponding to tif lodbtion, or -1 if tif
     *         lodbtion is not witiin tif bounds of b displbyfd dfll
     *         lodbtion is not witiin tif bounds of b displbyfd dfll
     *         lodbtion is not witiin tif bounds of b displbyfd dfll
     *         lodbtion is not witiin tif bounds of b displbyfd dfll
     *         lodbtion is not witiin tif bounds of b displbyfd dfll
     * @sff #gftClosfstRowForLodbtion
     * @sff #gftClosfstRowForLodbtion
     * @sff #gftClosfstRowForLodbtion
     * @sff #gftClosfstRowForLodbtion
     * @sff #gftClosfstRowForLodbtion
     */
     */
     */
     */
     */
    publid int gftRowForLodbtion(int x, int y) {
    publid int gftRowForLodbtion(int x, int y) {
    publid int gftRowForLodbtion(int x, int y) {
    publid int gftRowForLodbtion(int x, int y) {
    publid int gftRowForLodbtion(int x, int y) {
        rfturn gftRowForPbti(gftPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftPbtiForLodbtion(x, y));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti to tif nodf tibt is dlosfst to x,y.  If
     * Rfturns tif pbti to tif nodf tibt is dlosfst to x,y.  If
     * Rfturns tif pbti to tif nodf tibt is dlosfst to x,y.  If
     * Rfturns tif pbti to tif nodf tibt is dlosfst to x,y.  If
     * Rfturns tif pbti to tif nodf tibt is dlosfst to x,y.  If
     * no nodfs brf durrfntly vifwbblf, or tifrf is no modfl, rfturns
     * no nodfs brf durrfntly vifwbblf, or tifrf is no modfl, rfturns
     * no nodfs brf durrfntly vifwbblf, or tifrf is no modfl, rfturns
     * no nodfs brf durrfntly vifwbblf, or tifrf is no modfl, rfturns
     * no nodfs brf durrfntly vifwbblf, or tifrf is no modfl, rfturns
     * <dodf>null</dodf>, otifrwisf it blwbys rfturns b vblid pbti.  To tfst if
     * <dodf>null</dodf>, otifrwisf it blwbys rfturns b vblid pbti.  To tfst if
     * <dodf>null</dodf>, otifrwisf it blwbys rfturns b vblid pbti.  To tfst if
     * <dodf>null</dodf>, otifrwisf it blwbys rfturns b vblid pbti.  To tfst if
     * <dodf>null</dodf>, otifrwisf it blwbys rfturns b vblid pbti.  To tfst if
     * tif nodf is fxbdtly bt x, y, gft tif nodf's bounds bnd
     * tif nodf is fxbdtly bt x, y, gft tif nodf's bounds bnd
     * tif nodf is fxbdtly bt x, y, gft tif nodf's bounds bnd
     * tif nodf is fxbdtly bt x, y, gft tif nodf's bounds bnd
     * tif nodf is fxbdtly bt x, y, gft tif nodf's bounds bnd
     * tfst x, y bgbinst tibt.
     * tfst x, y bgbinst tibt.
     * tfst x, y bgbinst tibt.
     * tfst x, y bgbinst tibt.
     * tfst x, y bgbinst tibt.
     *
     *
     *
     *
     *
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf dlosfst to tibt lodbtion,
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf dlosfst to tibt lodbtion,
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf dlosfst to tibt lodbtion,
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf dlosfst to tibt lodbtion,
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf dlosfst to tibt lodbtion,
     *          <dodf>null</dodf> if notiing is vifwbblf or tifrf is no modfl
     *          <dodf>null</dodf> if notiing is vifwbblf or tifrf is no modfl
     *          <dodf>null</dodf> if notiing is vifwbblf or tifrf is no modfl
     *          <dodf>null</dodf> if notiing is vifwbblf or tifrf is no modfl
     *          <dodf>null</dodf> if notiing is vifwbblf or tifrf is no modfl
     *
     *
     *
     *
     *
     * @sff #gftPbtiForLodbtion
     * @sff #gftPbtiForLodbtion
     * @sff #gftPbtiForLodbtion
     * @sff #gftPbtiForLodbtion
     * @sff #gftPbtiForLodbtion
     * @sff #gftPbtiBounds
     * @sff #gftPbtiBounds
     * @sff #gftPbtiBounds
     * @sff #gftPbtiBounds
     * @sff #gftPbtiBounds
     */
     */
     */
     */
     */
    publid TrffPbti gftClosfstPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftClosfstPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftClosfstPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftClosfstPbtiForLodbtion(int x, int y) {
    publid TrffPbti gftClosfstPbtiForLodbtion(int x, int y) {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftClosfstPbtiForLodbtion(tiis, x, y);
            rfturn trff.gftClosfstPbtiForLodbtion(tiis, x, y);
            rfturn trff.gftClosfstPbtiForLodbtion(tiis, x, y);
            rfturn trff.gftClosfstPbtiForLodbtion(tiis, x, y);
            rfturn trff.gftClosfstPbtiForLodbtion(tiis, x, y);
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif row to tif nodf tibt is dlosfst to x,y.  If no nodfs
     * Rfturns tif row to tif nodf tibt is dlosfst to x,y.  If no nodfs
     * Rfturns tif row to tif nodf tibt is dlosfst to x,y.  If no nodfs
     * Rfturns tif row to tif nodf tibt is dlosfst to x,y.  If no nodfs
     * Rfturns tif row to tif nodf tibt is dlosfst to x,y.  If no nodfs
     * brf vifwbblf or tifrf is no modfl, rfturns -1. Otifrwisf,
     * brf vifwbblf or tifrf is no modfl, rfturns -1. Otifrwisf,
     * brf vifwbblf or tifrf is no modfl, rfturns -1. Otifrwisf,
     * brf vifwbblf or tifrf is no modfl, rfturns -1. Otifrwisf,
     * brf vifwbblf or tifrf is no modfl, rfturns -1. Otifrwisf,
     * it blwbys rfturns b vblid row.  To tfst if tif rfturnfd objfdt is
     * it blwbys rfturns b vblid row.  To tfst if tif rfturnfd objfdt is
     * it blwbys rfturns b vblid row.  To tfst if tif rfturnfd objfdt is
     * it blwbys rfturns b vblid row.  To tfst if tif rfturnfd objfdt is
     * it blwbys rfturns b vblid row.  To tfst if tif rfturnfd objfdt is
     * fxbdtly bt x, y, gft tif bounds for tif nodf bt tif rfturnfd
     * fxbdtly bt x, y, gft tif bounds for tif nodf bt tif rfturnfd
     * fxbdtly bt x, y, gft tif bounds for tif nodf bt tif rfturnfd
     * fxbdtly bt x, y, gft tif bounds for tif nodf bt tif rfturnfd
     * fxbdtly bt x, y, gft tif bounds for tif nodf bt tif rfturnfd
     * row bnd tfst x, y bgbinst tibt.
     * row bnd tfst x, y bgbinst tibt.
     * row bnd tfst x, y bgbinst tibt.
     * row bnd tfst x, y bgbinst tibt.
     * row bnd tfst x, y bgbinst tibt.
     *
     *
     *
     *
     *
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     * @pbrbm x bn intfgfr giving tif numbfr of pixfls iorizontblly from
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     *          tif lfft fdgf of tif displby brfb, minus bny lfft mbrgin
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     * @pbrbm y bn intfgfr giving tif numbfr of pixfls vfrtidblly from
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     *          tif top of tif displby brfb, minus bny top mbrgin
     * @rfturn tif row dlosfst to tif lodbtion, -1 if notiing is
     * @rfturn tif row dlosfst to tif lodbtion, -1 if notiing is
     * @rfturn tif row dlosfst to tif lodbtion, -1 if notiing is
     * @rfturn tif row dlosfst to tif lodbtion, -1 if notiing is
     * @rfturn tif row dlosfst to tif lodbtion, -1 if notiing is
     *         vifwbblf or tifrf is no modfl
     *         vifwbblf or tifrf is no modfl
     *         vifwbblf or tifrf is no modfl
     *         vifwbblf or tifrf is no modfl
     *         vifwbblf or tifrf is no modfl
     *
     *
     *
     *
     *
     * @sff #gftRowForLodbtion
     * @sff #gftRowForLodbtion
     * @sff #gftRowForLodbtion
     * @sff #gftRowForLodbtion
     * @sff #gftRowForLodbtion
     * @sff #gftRowBounds
     * @sff #gftRowBounds
     * @sff #gftRowBounds
     * @sff #gftRowBounds
     * @sff #gftRowBounds
     */
     */
     */
     */
     */
    publid int gftClosfstRowForLodbtion(int x, int y) {
    publid int gftClosfstRowForLodbtion(int x, int y) {
    publid int gftClosfstRowForLodbtion(int x, int y) {
    publid int gftClosfstRowForLodbtion(int x, int y) {
    publid int gftClosfstRowForLodbtion(int x, int y) {
        rfturn gftRowForPbti(gftClosfstPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftClosfstPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftClosfstPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftClosfstPbtiForLodbtion(x, y));
        rfturn gftRowForPbti(gftClosfstPbtiForLodbtion(x, y));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif trff is bfing fditfd. Tif itfm tibt is bfing
     * Rfturns truf if tif trff is bfing fditfd. Tif itfm tibt is bfing
     * Rfturns truf if tif trff is bfing fditfd. Tif itfm tibt is bfing
     * Rfturns truf if tif trff is bfing fditfd. Tif itfm tibt is bfing
     * Rfturns truf if tif trff is bfing fditfd. Tif itfm tibt is bfing
     * fditfd dbn bf obtbinfd using <dodf>gftSflfdtionPbti</dodf>.
     * fditfd dbn bf obtbinfd using <dodf>gftSflfdtionPbti</dodf>.
     * fditfd dbn bf obtbinfd using <dodf>gftSflfdtionPbti</dodf>.
     * fditfd dbn bf obtbinfd using <dodf>gftSflfdtionPbti</dodf>.
     * fditfd dbn bf obtbinfd using <dodf>gftSflfdtionPbti</dodf>.
     *
     *
     *
     *
     *
     * @rfturn truf if tif usfr is durrfntly fditing b nodf
     * @rfturn truf if tif usfr is durrfntly fditing b nodf
     * @rfturn truf if tif usfr is durrfntly fditing b nodf
     * @rfturn truf if tif usfr is durrfntly fditing b nodf
     * @rfturn truf if tif usfr is durrfntly fditing b nodf
     * @sff #gftSflfdtionPbti
     * @sff #gftSflfdtionPbti
     * @sff #gftSflfdtionPbti
     * @sff #gftSflfdtionPbti
     * @sff #gftSflfdtionPbti
     */
     */
     */
     */
     */
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
    publid boolfbn isEditing() {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.isEditing(tiis);
            rfturn trff.isEditing(tiis);
            rfturn trff.isEditing(tiis);
            rfturn trff.isEditing(tiis);
            rfturn trff.isEditing(tiis);
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ends tif durrfnt fditing sfssion.
     * Ends tif durrfnt fditing sfssion.
     * Ends tif durrfnt fditing sfssion.
     * Ends tif durrfnt fditing sfssion.
     * Ends tif durrfnt fditing sfssion.
     * (Tif <dodf>DffbultTrffCfllEditor</dodf>
     * (Tif <dodf>DffbultTrffCfllEditor</dodf>
     * (Tif <dodf>DffbultTrffCfllEditor</dodf>
     * (Tif <dodf>DffbultTrffCfllEditor</dodf>
     * (Tif <dodf>DffbultTrffCfllEditor</dodf>
     * objfdt sbvfs bny fdits tibt brf durrfntly in progrfss on b dfll.
     * objfdt sbvfs bny fdits tibt brf durrfntly in progrfss on b dfll.
     * objfdt sbvfs bny fdits tibt brf durrfntly in progrfss on b dfll.
     * objfdt sbvfs bny fdits tibt brf durrfntly in progrfss on b dfll.
     * objfdt sbvfs bny fdits tibt brf durrfntly in progrfss on b dfll.
     * Otifr implfmfntbtions mby opfrbtf difffrfntly.)
     * Otifr implfmfntbtions mby opfrbtf difffrfntly.)
     * Otifr implfmfntbtions mby opfrbtf difffrfntly.)
     * Otifr implfmfntbtions mby opfrbtf difffrfntly.)
     * Otifr implfmfntbtions mby opfrbtf difffrfntly.)
     * Hbs no ffffdt if tif trff isn't bfing fditfd.
     * Hbs no ffffdt if tif trff isn't bfing fditfd.
     * Hbs no ffffdt if tif trff isn't bfing fditfd.
     * Hbs no ffffdt if tif trff isn't bfing fditfd.
     * Hbs no ffffdt if tif trff isn't bfing fditfd.
     * <blodkquotf>
     * <blodkquotf>
     * <blodkquotf>
     * <blodkquotf>
     * <blodkquotf>
     * <b>Notf:</b><br>
     * <b>Notf:</b><br>
     * <b>Notf:</b><br>
     * <b>Notf:</b><br>
     * <b>Notf:</b><br>
     * To mbkf fdit-sbvfs butombtid wifnfvfr tif usfr dibngfs
     * To mbkf fdit-sbvfs butombtid wifnfvfr tif usfr dibngfs
     * To mbkf fdit-sbvfs butombtid wifnfvfr tif usfr dibngfs
     * To mbkf fdit-sbvfs butombtid wifnfvfr tif usfr dibngfs
     * To mbkf fdit-sbvfs butombtid wifnfvfr tif usfr dibngfs
     * tifir position in tif trff, usf {@link #sftInvokfsStopCfllEditing}.
     * tifir position in tif trff, usf {@link #sftInvokfsStopCfllEditing}.
     * tifir position in tif trff, usf {@link #sftInvokfsStopCfllEditing}.
     * tifir position in tif trff, usf {@link #sftInvokfsStopCfllEditing}.
     * tifir position in tif trff, usf {@link #sftInvokfsStopCfllEditing}.
     * </blodkquotf>
     * </blodkquotf>
     * </blodkquotf>
     * </blodkquotf>
     * </blodkquotf>
     *
     *
     *
     *
     *
     * @rfturn truf if fditing wbs in progrfss bnd is now stoppfd,
     * @rfturn truf if fditing wbs in progrfss bnd is now stoppfd,
     * @rfturn truf if fditing wbs in progrfss bnd is now stoppfd,
     * @rfturn truf if fditing wbs in progrfss bnd is now stoppfd,
     * @rfturn truf if fditing wbs in progrfss bnd is now stoppfd,
     *              fblsf if fditing wbs not in progrfss
     *              fblsf if fditing wbs not in progrfss
     *              fblsf if fditing wbs not in progrfss
     *              fblsf if fditing wbs not in progrfss
     *              fblsf if fditing wbs not in progrfss
     */
     */
     */
     */
     */
    publid boolfbn stopEditing() {
    publid boolfbn stopEditing() {
    publid boolfbn stopEditing() {
    publid boolfbn stopEditing() {
    publid boolfbn stopEditing() {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.stopEditing(tiis);
            rfturn trff.stopEditing(tiis);
            rfturn trff.stopEditing(tiis);
            rfturn trff.stopEditing(tiis);
            rfturn trff.stopEditing(tiis);
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbndfls tif durrfnt fditing sfssion. Hbs no ffffdt if tif
     * Cbndfls tif durrfnt fditing sfssion. Hbs no ffffdt if tif
     * Cbndfls tif durrfnt fditing sfssion. Hbs no ffffdt if tif
     * Cbndfls tif durrfnt fditing sfssion. Hbs no ffffdt if tif
     * Cbndfls tif durrfnt fditing sfssion. Hbs no ffffdt if tif
     * trff isn't bfing fditfd.
     * trff isn't bfing fditfd.
     * trff isn't bfing fditfd.
     * trff isn't bfing fditfd.
     * trff isn't bfing fditfd.
     */
     */
     */
     */
     */
    publid void  dbndflEditing() {
    publid void  dbndflEditing() {
    publid void  dbndflEditing() {
    publid void  dbndflEditing() {
    publid void  dbndflEditing() {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            trff.dbndflEditing(tiis);
            trff.dbndflEditing(tiis);
            trff.dbndflEditing(tiis);
            trff.dbndflEditing(tiis);
            trff.dbndflEditing(tiis);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti bnd initibtfs
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti bnd initibtfs
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti bnd initibtfs
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti bnd initibtfs
     * Sflfdts tif nodf idfntififd by tif spfdififd pbti bnd initibtfs
     * fditing.  Tif fdit-bttfmpt fbils if tif <dodf>CfllEditor</dodf>
     * fditing.  Tif fdit-bttfmpt fbils if tif <dodf>CfllEditor</dodf>
     * fditing.  Tif fdit-bttfmpt fbils if tif <dodf>CfllEditor</dodf>
     * fditing.  Tif fdit-bttfmpt fbils if tif <dodf>CfllEditor</dodf>
     * fditing.  Tif fdit-bttfmpt fbils if tif <dodf>CfllEditor</dodf>
     * dofs not bllow
     * dofs not bllow
     * dofs not bllow
     * dofs not bllow
     * dofs not bllow
     * fditing for tif spfdififd itfm.
     * fditing for tif spfdififd itfm.
     * fditing for tif spfdififd itfm.
     * fditing for tif spfdififd itfm.
     * fditing for tif spfdififd itfm.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     */
     */
     */
     */
     */
    publid void stbrtEditingAtPbti(TrffPbti pbti) {
    publid void stbrtEditingAtPbti(TrffPbti pbti) {
    publid void stbrtEditingAtPbti(TrffPbti pbti) {
    publid void stbrtEditingAtPbti(TrffPbti pbti) {
    publid void stbrtEditingAtPbti(TrffPbti pbti) {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            trff.stbrtEditingAtPbti(tiis, pbti);
            trff.stbrtEditingAtPbti(tiis, pbti);
            trff.stbrtEditingAtPbti(tiis, pbti);
            trff.stbrtEditingAtPbti(tiis, pbti);
            trff.stbrtEditingAtPbti(tiis, pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbti to tif flfmfnt tibt is durrfntly bfing fditfd.
     * Rfturns tif pbti to tif flfmfnt tibt is durrfntly bfing fditfd.
     * Rfturns tif pbti to tif flfmfnt tibt is durrfntly bfing fditfd.
     * Rfturns tif pbti to tif flfmfnt tibt is durrfntly bfing fditfd.
     * Rfturns tif pbti to tif flfmfnt tibt is durrfntly bfing fditfd.
     *
     *
     *
     *
     *
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bfing fditfd
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bfing fditfd
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bfing fditfd
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bfing fditfd
     * @rfturn  tif <dodf>TrffPbti</dodf> for tif nodf bfing fditfd
     */
     */
     */
     */
     */
    publid TrffPbti gftEditingPbti() {
    publid TrffPbti gftEditingPbti() {
    publid TrffPbti gftEditingPbti() {
    publid TrffPbti gftEditingPbti() {
    publid TrffPbti gftEditingPbti() {
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();
        TrffUI                  trff = gftUI();





        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
        if(trff != null)
            rfturn trff.gftEditingPbti(tiis);
            rfturn trff.gftEditingPbti(tiis);
            rfturn trff.gftEditingPbti(tiis);
            rfturn trff.gftEditingPbti(tiis);
            rfturn trff.gftEditingPbti(tiis);
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    //
    //
    //
    //
    //
    // Following brf primbrily donvfnifndf mftiods for mbpping from
    // Following brf primbrily donvfnifndf mftiods for mbpping from
    // Following brf primbrily donvfnifndf mftiods for mbpping from
    // Following brf primbrily donvfnifndf mftiods for mbpping from
    // Following brf primbrily donvfnifndf mftiods for mbpping from
    // row bbsfd sflfdtions to pbti sflfdtions.  Somftimfs it is
    // row bbsfd sflfdtions to pbti sflfdtions.  Somftimfs it is
    // row bbsfd sflfdtions to pbti sflfdtions.  Somftimfs it is
    // row bbsfd sflfdtions to pbti sflfdtions.  Somftimfs it is
    // row bbsfd sflfdtions to pbti sflfdtions.  Somftimfs it is
    // fbsifr to dfbl witi tifsf tibn pbtis (mousf downs, kfy downs
    // fbsifr to dfbl witi tifsf tibn pbtis (mousf downs, kfy downs
    // fbsifr to dfbl witi tifsf tibn pbtis (mousf downs, kfy downs
    // fbsifr to dfbl witi tifsf tibn pbtis (mousf downs, kfy downs
    // fbsifr to dfbl witi tifsf tibn pbtis (mousf downs, kfy downs
    // usublly just dfbl witi indfx bbsfd sflfdtions).
    // usublly just dfbl witi indfx bbsfd sflfdtions).
    // usublly just dfbl witi indfx bbsfd sflfdtions).
    // usublly just dfbl witi indfx bbsfd sflfdtions).
    // usublly just dfbl witi indfx bbsfd sflfdtions).
    // Sindf row bbsfd sflfdtions rfquirf b UI mbny of tifsf won't work
    // Sindf row bbsfd sflfdtions rfquirf b UI mbny of tifsf won't work
    // Sindf row bbsfd sflfdtions rfquirf b UI mbny of tifsf won't work
    // Sindf row bbsfd sflfdtions rfquirf b UI mbny of tifsf won't work
    // Sindf row bbsfd sflfdtions rfquirf b UI mbny of tifsf won't work
    // witiout onf.
    // witiout onf.
    // witiout onf.
    // witiout onf.
    // witiout onf.
    //
    //
    //
    //
    //





    /**
    /**
    /**
    /**
    /**
     * Sfts tif trff's sflfdtion modfl. Wifn b <dodf>null</dodf> vbluf is
     * Sfts tif trff's sflfdtion modfl. Wifn b <dodf>null</dodf> vbluf is
     * Sfts tif trff's sflfdtion modfl. Wifn b <dodf>null</dodf> vbluf is
     * Sfts tif trff's sflfdtion modfl. Wifn b <dodf>null</dodf> vbluf is
     * Sfts tif trff's sflfdtion modfl. Wifn b <dodf>null</dodf> vbluf is
     * spfdififd bn fmpty
     * spfdififd bn fmpty
     * spfdififd bn fmpty
     * spfdififd bn fmpty
     * spfdififd bn fmpty
     * <dodf>sflfdtionModfl</dodf> is usfd, wiidi dofs not bllow sflfdtions.
     * <dodf>sflfdtionModfl</dodf> is usfd, wiidi dofs not bllow sflfdtions.
     * <dodf>sflfdtionModfl</dodf> is usfd, wiidi dofs not bllow sflfdtions.
     * <dodf>sflfdtionModfl</dodf> is usfd, wiidi dofs not bllow sflfdtions.
     * <dodf>sflfdtionModfl</dodf> is usfd, wiidi dofs not bllow sflfdtions.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm sflfdtionModfl tif <dodf>TrffSflfdtionModfl</dodf> to usf,
     * @pbrbm sflfdtionModfl tif <dodf>TrffSflfdtionModfl</dodf> to usf,
     * @pbrbm sflfdtionModfl tif <dodf>TrffSflfdtionModfl</dodf> to usf,
     * @pbrbm sflfdtionModfl tif <dodf>TrffSflfdtionModfl</dodf> to usf,
     * @pbrbm sflfdtionModfl tif <dodf>TrffSflfdtionModfl</dodf> to usf,
     *          or <dodf>null</dodf> to disbblf sflfdtions
     *          or <dodf>null</dodf> to disbblf sflfdtions
     *          or <dodf>null</dodf> to disbblf sflfdtions
     *          or <dodf>null</dodf> to disbblf sflfdtions
     *          or <dodf>null</dodf> to disbblf sflfdtions
     * @sff TrffSflfdtionModfl
     * @sff TrffSflfdtionModfl
     * @sff TrffSflfdtionModfl
     * @sff TrffSflfdtionModfl
     * @sff TrffSflfdtionModfl
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif trff's sflfdtion modfl.
     *  dfsdription: Tif trff's sflfdtion modfl.
     *  dfsdription: Tif trff's sflfdtion modfl.
     *  dfsdription: Tif trff's sflfdtion modfl.
     *  dfsdription: Tif trff's sflfdtion modfl.
     */
     */
     */
     */
     */
    publid void sftSflfdtionModfl(TrffSflfdtionModfl sflfdtionModfl) {
    publid void sftSflfdtionModfl(TrffSflfdtionModfl sflfdtionModfl) {
    publid void sftSflfdtionModfl(TrffSflfdtionModfl sflfdtionModfl) {
    publid void sftSflfdtionModfl(TrffSflfdtionModfl sflfdtionModfl) {
    publid void sftSflfdtionModfl(TrffSflfdtionModfl sflfdtionModfl) {
        if(sflfdtionModfl == null)
        if(sflfdtionModfl == null)
        if(sflfdtionModfl == null)
        if(sflfdtionModfl == null)
        if(sflfdtionModfl == null)
            sflfdtionModfl = EmptySflfdtionModfl.sibrfdInstbndf();
            sflfdtionModfl = EmptySflfdtionModfl.sibrfdInstbndf();
            sflfdtionModfl = EmptySflfdtionModfl.sibrfdInstbndf();
            sflfdtionModfl = EmptySflfdtionModfl.sibrfdInstbndf();
            sflfdtionModfl = EmptySflfdtionModfl.sibrfdInstbndf();





        TrffSflfdtionModfl         oldVbluf = tiis.sflfdtionModfl;
        TrffSflfdtionModfl         oldVbluf = tiis.sflfdtionModfl;
        TrffSflfdtionModfl         oldVbluf = tiis.sflfdtionModfl;
        TrffSflfdtionModfl         oldVbluf = tiis.sflfdtionModfl;
        TrffSflfdtionModfl         oldVbluf = tiis.sflfdtionModfl;





        if (tiis.sflfdtionModfl != null && sflfdtionRfdirfdtor != null) {
        if (tiis.sflfdtionModfl != null && sflfdtionRfdirfdtor != null) {
        if (tiis.sflfdtionModfl != null && sflfdtionRfdirfdtor != null) {
        if (tiis.sflfdtionModfl != null && sflfdtionRfdirfdtor != null) {
        if (tiis.sflfdtionModfl != null && sflfdtionRfdirfdtor != null) {
            tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
                                (sflfdtionRfdirfdtor);
                                (sflfdtionRfdirfdtor);
                                (sflfdtionRfdirfdtor);
                                (sflfdtionRfdirfdtor);
                                (sflfdtionRfdirfdtor);
        }
        }
        }
        }
        }
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
           tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           tiis.sflfdtionModfl.rfmovfTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           sflfdtionModfl.bddTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           sflfdtionModfl.bddTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           sflfdtionModfl.bddTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           sflfdtionModfl.bddTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
           sflfdtionModfl.bddTrffSflfdtionListfnfr((TrffSflfdtionListfnfr)bddfssiblfContfxt);
        }
        }
        }
        }
        }





        tiis.sflfdtionModfl = sflfdtionModfl;
        tiis.sflfdtionModfl = sflfdtionModfl;
        tiis.sflfdtionModfl = sflfdtionModfl;
        tiis.sflfdtionModfl = sflfdtionModfl;
        tiis.sflfdtionModfl = sflfdtionModfl;
        if (sflfdtionRfdirfdtor != null) {
        if (sflfdtionRfdirfdtor != null) {
        if (sflfdtionRfdirfdtor != null) {
        if (sflfdtionRfdirfdtor != null) {
        if (sflfdtionRfdirfdtor != null) {
            tiis.sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            tiis.sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            tiis.sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            tiis.sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            tiis.sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
        }
        }
        }
        }
        }
        firfPropfrtyCibngf(SELECTION_MODEL_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SELECTION_MODEL_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SELECTION_MODEL_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SELECTION_MODEL_PROPERTY, oldVbluf,
        firfPropfrtyCibngf(SELECTION_MODEL_PROPERTY, oldVbluf,
                           tiis.sflfdtionModfl);
                           tiis.sflfdtionModfl);
                           tiis.sflfdtionModfl);
                           tiis.sflfdtionModfl);
                           tiis.sflfdtionModfl);





        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
            bddfssiblfContfxt.firfPropfrtyCibngf(
                    AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                    Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                    Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                    Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                    Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                    Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif modfl for sflfdtions. Tiis siould blwbys rfturn b
     * Rfturns tif modfl for sflfdtions. Tiis siould blwbys rfturn b
     * Rfturns tif modfl for sflfdtions. Tiis siould blwbys rfturn b
     * Rfturns tif modfl for sflfdtions. Tiis siould blwbys rfturn b
     * Rfturns tif modfl for sflfdtions. Tiis siould blwbys rfturn b
     * non-<dodf>null</dodf> vbluf. If you don't wbnt to bllow bnytiing
     * non-<dodf>null</dodf> vbluf. If you don't wbnt to bllow bnytiing
     * non-<dodf>null</dodf> vbluf. If you don't wbnt to bllow bnytiing
     * non-<dodf>null</dodf> vbluf. If you don't wbnt to bllow bnytiing
     * non-<dodf>null</dodf> vbluf. If you don't wbnt to bllow bnytiing
     * to bf sflfdtfd
     * to bf sflfdtfd
     * to bf sflfdtfd
     * to bf sflfdtfd
     * to bf sflfdtfd
     * sft tif sflfdtion modfl to <dodf>null</dodf>, wiidi fordfs bn fmpty
     * sft tif sflfdtion modfl to <dodf>null</dodf>, wiidi fordfs bn fmpty
     * sft tif sflfdtion modfl to <dodf>null</dodf>, wiidi fordfs bn fmpty
     * sft tif sflfdtion modfl to <dodf>null</dodf>, wiidi fordfs bn fmpty
     * sft tif sflfdtion modfl to <dodf>null</dodf>, wiidi fordfs bn fmpty
     * sflfdtion modfl to bf usfd.
     * sflfdtion modfl to bf usfd.
     * sflfdtion modfl to bf usfd.
     * sflfdtion modfl to bf usfd.
     * sflfdtion modfl to bf usfd.
     *
     *
     *
     *
     *
     * @rfturn tif modfl for sflfdtions
     * @rfturn tif modfl for sflfdtions
     * @rfturn tif modfl for sflfdtions
     * @rfturn tif modfl for sflfdtions
     * @rfturn tif modfl for sflfdtions
     * @sff #sftSflfdtionModfl
     * @sff #sftSflfdtionModfl
     * @sff #sftSflfdtionModfl
     * @sff #sftSflfdtionModfl
     * @sff #sftSflfdtionModfl
     */
     */
     */
     */
     */
    publid TrffSflfdtionModfl gftSflfdtionModfl() {
    publid TrffSflfdtionModfl gftSflfdtionModfl() {
    publid TrffSflfdtionModfl gftSflfdtionModfl() {
    publid TrffSflfdtionModfl gftSflfdtionModfl() {
    publid TrffSflfdtionModfl gftSflfdtionModfl() {
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
        rfturn sflfdtionModfl;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif pbtis (indlusivf) bftwffn tif spfdififd rows. If
     * Rfturns tif pbtis (indlusivf) bftwffn tif spfdififd rows. If
     * Rfturns tif pbtis (indlusivf) bftwffn tif spfdififd rows. If
     * Rfturns tif pbtis (indlusivf) bftwffn tif spfdififd rows. If
     * Rfturns tif pbtis (indlusivf) bftwffn tif spfdififd rows. If
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or
     * bound tif vifwbblf sft of rows, tifn tif indidfs brf
     * bound tif vifwbblf sft of rows, tifn tif indidfs brf
     * bound tif vifwbblf sft of rows, tifn tif indidfs brf
     * bound tif vifwbblf sft of rows, tifn tif indidfs brf
     * bound tif vifwbblf sft of rows, tifn tif indidfs brf
     * donstrbinfd by tif vifwbblf sft of rows. If tif spfdififd
     * donstrbinfd by tif vifwbblf sft of rows. If tif spfdififd
     * donstrbinfd by tif vifwbblf sft of rows. If tif spfdififd
     * donstrbinfd by tif vifwbblf sft of rows. If tif spfdififd
     * donstrbinfd by tif vifwbblf sft of rows. If tif spfdififd
     * indidfs brf not witiin tif vifwbblf sft of rows, or do not
     * indidfs brf not witiin tif vifwbblf sft of rows, or do not
     * indidfs brf not witiin tif vifwbblf sft of rows, or do not
     * indidfs brf not witiin tif vifwbblf sft of rows, or do not
     * indidfs brf not witiin tif vifwbblf sft of rows, or do not
     * bound tif vifwbblf sft of rows, tifn bn fmpty brrby is
     * bound tif vifwbblf sft of rows, tifn bn fmpty brrby is
     * bound tif vifwbblf sft of rows, tifn bn fmpty brrby is
     * bound tif vifwbblf sft of rows, tifn bn fmpty brrby is
     * bound tif vifwbblf sft of rows, tifn bn fmpty brrby is
     * rfturnfd. For fxbmplf, if tif row dount is {@dodf 10}, bnd tiis
     * rfturnfd. For fxbmplf, if tif row dount is {@dodf 10}, bnd tiis
     * rfturnfd. For fxbmplf, if tif row dount is {@dodf 10}, bnd tiis
     * rfturnfd. For fxbmplf, if tif row dount is {@dodf 10}, bnd tiis
     * rfturnfd. For fxbmplf, if tif row dount is {@dodf 10}, bnd tiis
     * mftiod is invokfd witi {@dodf -1, 20}, tifn tif spfdififd
     * mftiod is invokfd witi {@dodf -1, 20}, tifn tif spfdififd
     * mftiod is invokfd witi {@dodf -1, 20}, tifn tif spfdififd
     * mftiod is invokfd witi {@dodf -1, 20}, tifn tif spfdififd
     * mftiod is invokfd witi {@dodf -1, 20}, tifn tif spfdififd
     * indidfs brf donstrbinfd to tif vifwbblf sft of rows, bnd tiis is
     * indidfs brf donstrbinfd to tif vifwbblf sft of rows, bnd tiis is
     * indidfs brf donstrbinfd to tif vifwbblf sft of rows, bnd tiis is
     * indidfs brf donstrbinfd to tif vifwbblf sft of rows, bnd tiis is
     * indidfs brf donstrbinfd to tif vifwbblf sft of rows, bnd tiis is
     * trfbtfd bs if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if
     * trfbtfd bs if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if
     * trfbtfd bs if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if
     * trfbtfd bs if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if
     * trfbtfd bs if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if
     * tiis wfrf invokfd witi {@dodf -10, -1}, tifn tif spfdififd
     * tiis wfrf invokfd witi {@dodf -10, -1}, tifn tif spfdififd
     * tiis wfrf invokfd witi {@dodf -10, -1}, tifn tif spfdififd
     * tiis wfrf invokfd witi {@dodf -10, -1}, tifn tif spfdififd
     * tiis wfrf invokfd witi {@dodf -10, -1}, tifn tif spfdififd
     * indidfs do not bound tif vifwbblf sft of rows, bnd bn fmpty
     * indidfs do not bound tif vifwbblf sft of rows, bnd bn fmpty
     * indidfs do not bound tif vifwbblf sft of rows, bnd bn fmpty
     * indidfs do not bound tif vifwbblf sft of rows, bnd bn fmpty
     * indidfs do not bound tif vifwbblf sft of rows, bnd bn fmpty
     * brrby is rfturnfd.
     * brrby is rfturnfd.
     * brrby is rfturnfd.
     * brrby is rfturnfd.
     * brrby is rfturnfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * gftPbtiBftwffnRows(x, y)} is fquivblfnt to
     * gftPbtiBftwffnRows(x, y)} is fquivblfnt to
     * gftPbtiBftwffnRows(x, y)} is fquivblfnt to
     * gftPbtiBftwffnRows(x, y)} is fquivblfnt to
     * gftPbtiBftwffnRows(x, y)} is fquivblfnt to
     * {@dodf gftPbtiBftwffnRows(y, x)}.
     * {@dodf gftPbtiBftwffnRows(y, x)}.
     * {@dodf gftPbtiBftwffnRows(y, x)}.
     * {@dodf gftPbtiBftwffnRows(y, x)}.
     * {@dodf gftPbtiBftwffnRows(y, x)}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * An fmpty brrby is rfturnfd if tif row dount is {@dodf 0}, or
     * An fmpty brrby is rfturnfd if tif row dount is {@dodf 0}, or
     * An fmpty brrby is rfturnfd if tif row dount is {@dodf 0}, or
     * An fmpty brrby is rfturnfd if tif row dount is {@dodf 0}, or
     * An fmpty brrby is rfturnfd if tif row dount is {@dodf 0}, or
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows.
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows.
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows.
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows.
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows.
     *
     *
     *
     *
     *
     * @pbrbm indfx0 tif first indfx in tif rbngf
     * @pbrbm indfx0 tif first indfx in tif rbngf
     * @pbrbm indfx0 tif first indfx in tif rbngf
     * @pbrbm indfx0 tif first indfx in tif rbngf
     * @pbrbm indfx0 tif first indfx in tif rbngf
     * @pbrbm indfx1 tif lbst indfx in tif rbngf
     * @pbrbm indfx1 tif lbst indfx in tif rbngf
     * @pbrbm indfx1 tif lbst indfx in tif rbngf
     * @pbrbm indfx1 tif lbst indfx in tif rbngf
     * @pbrbm indfx1 tif lbst indfx in tif rbngf
     * @rfturn tif pbtis (indlusivf) bftwffn tif spfdififd row indidfs
     * @rfturn tif pbtis (indlusivf) bftwffn tif spfdififd row indidfs
     * @rfturn tif pbtis (indlusivf) bftwffn tif spfdififd row indidfs
     * @rfturn tif pbtis (indlusivf) bftwffn tif spfdififd row indidfs
     * @rfturn tif pbtis (indlusivf) bftwffn tif spfdififd row indidfs
     */
     */
     */
     */
     */
    protfdtfd TrffPbti[] gftPbtiBftwffnRows(int indfx0, int indfx1) {
    protfdtfd TrffPbti[] gftPbtiBftwffnRows(int indfx0, int indfx1) {
    protfdtfd TrffPbti[] gftPbtiBftwffnRows(int indfx0, int indfx1) {
    protfdtfd TrffPbti[] gftPbtiBftwffnRows(int indfx0, int indfx1) {
    protfdtfd TrffPbti[] gftPbtiBftwffnRows(int indfx0, int indfx1) {
        TrffUI           trff = gftUI();
        TrffUI           trff = gftUI();
        TrffUI           trff = gftUI();
        TrffUI           trff = gftUI();
        TrffUI           trff = gftUI();
        if (trff != null) {
        if (trff != null) {
        if (trff != null) {
        if (trff != null) {
        if (trff != null) {
            int rowCount = gftRowCount();
            int rowCount = gftRowCount();
            int rowCount = gftRowCount();
            int rowCount = gftRowCount();
            int rowCount = gftRowCount();
            if (rowCount > 0 && !((indfx0 < 0 && indfx1 < 0) ||
            if (rowCount > 0 && !((indfx0 < 0 && indfx1 < 0) ||
            if (rowCount > 0 && !((indfx0 < 0 && indfx1 < 0) ||
            if (rowCount > 0 && !((indfx0 < 0 && indfx1 < 0) ||
            if (rowCount > 0 && !((indfx0 < 0 && indfx1 < 0) ||
                                  (indfx0 >= rowCount && indfx1 >= rowCount))){
                                  (indfx0 >= rowCount && indfx1 >= rowCount))){
                                  (indfx0 >= rowCount && indfx1 >= rowCount))){
                                  (indfx0 >= rowCount && indfx1 >= rowCount))){
                                  (indfx0 >= rowCount && indfx1 >= rowCount))){
                indfx0 = Mbti.min(rowCount - 1, Mbti.mbx(indfx0, 0));
                indfx0 = Mbti.min(rowCount - 1, Mbti.mbx(indfx0, 0));
                indfx0 = Mbti.min(rowCount - 1, Mbti.mbx(indfx0, 0));
                indfx0 = Mbti.min(rowCount - 1, Mbti.mbx(indfx0, 0));
                indfx0 = Mbti.min(rowCount - 1, Mbti.mbx(indfx0, 0));
                indfx1 = Mbti.min(rowCount - 1, Mbti.mbx(indfx1, 0));
                indfx1 = Mbti.min(rowCount - 1, Mbti.mbx(indfx1, 0));
                indfx1 = Mbti.min(rowCount - 1, Mbti.mbx(indfx1, 0));
                indfx1 = Mbti.min(rowCount - 1, Mbti.mbx(indfx1, 0));
                indfx1 = Mbti.min(rowCount - 1, Mbti.mbx(indfx1, 0));
                int minIndfx = Mbti.min(indfx0, indfx1);
                int minIndfx = Mbti.min(indfx0, indfx1);
                int minIndfx = Mbti.min(indfx0, indfx1);
                int minIndfx = Mbti.min(indfx0, indfx1);
                int minIndfx = Mbti.min(indfx0, indfx1);
                int mbxIndfx = Mbti.mbx(indfx0, indfx1);
                int mbxIndfx = Mbti.mbx(indfx0, indfx1);
                int mbxIndfx = Mbti.mbx(indfx0, indfx1);
                int mbxIndfx = Mbti.mbx(indfx0, indfx1);
                int mbxIndfx = Mbti.mbx(indfx0, indfx1);
                TrffPbti[] sflfdtion = nfw TrffPbti[
                TrffPbti[] sflfdtion = nfw TrffPbti[
                TrffPbti[] sflfdtion = nfw TrffPbti[
                TrffPbti[] sflfdtion = nfw TrffPbti[
                TrffPbti[] sflfdtion = nfw TrffPbti[
                        mbxIndfx - minIndfx + 1];
                        mbxIndfx - minIndfx + 1];
                        mbxIndfx - minIndfx + 1];
                        mbxIndfx - minIndfx + 1];
                        mbxIndfx - minIndfx + 1];
                for(int dountfr = minIndfx; dountfr <= mbxIndfx; dountfr++) {
                for(int dountfr = minIndfx; dountfr <= mbxIndfx; dountfr++) {
                for(int dountfr = minIndfx; dountfr <= mbxIndfx; dountfr++) {
                for(int dountfr = minIndfx; dountfr <= mbxIndfx; dountfr++) {
                for(int dountfr = minIndfx; dountfr <= mbxIndfx; dountfr++) {
                    sflfdtion[dountfr - minIndfx] =
                    sflfdtion[dountfr - minIndfx] =
                    sflfdtion[dountfr - minIndfx] =
                    sflfdtion[dountfr - minIndfx] =
                    sflfdtion[dountfr - minIndfx] =
                            trff.gftPbtiForRow(tiis, dountfr);
                            trff.gftPbtiForRow(tiis, dountfr);
                            trff.gftPbtiForRow(tiis, dountfr);
                            trff.gftPbtiForRow(tiis, dountfr);
                            trff.gftPbtiForRow(tiis, dountfr);
                }
                }
                }
                }
                }
                rfturn sflfdtion;
                rfturn sflfdtion;
                rfturn sflfdtion;
                rfturn sflfdtion;
                rfturn sflfdtion;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn nfw TrffPbti[0];
        rfturn nfw TrffPbti[0];
        rfturn nfw TrffPbti[0];
        rfturn nfw TrffPbti[0];
        rfturn nfw TrffPbti[0];
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sflfdts tif rows in tif spfdififd intfrvbl (indlusivf). If
     * Sflfdts tif rows in tif spfdififd intfrvbl (indlusivf). If
     * Sflfdts tif rows in tif spfdififd intfrvbl (indlusivf). If
     * Sflfdts tif rows in tif spfdififd intfrvbl (indlusivf). If
     * Sflfdts tif rows in tif spfdififd intfrvbl (indlusivf). If
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif vifwbblf sft of rows, tifn tif spfdififd rows brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd rows brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd rows brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd rows brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd rows brf donstrbinfd by
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * tif sflfdtion is dlfbrfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is dlfbrfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is dlfbrfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is dlfbrfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is dlfbrfd. For fxbmplf, if tif row dount is {@dodf
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * spfdififd indidfs bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd indidfs bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd indidfs bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd indidfs bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd indidfs bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd indidfs do not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd indidfs do not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd indidfs do not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd indidfs do not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd indidfs do not
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is dlfbrfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is dlfbrfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is dlfbrfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is dlfbrfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is dlfbrfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * sftSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * sftSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * sftSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * sftSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * sftSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * {@dodf sftSflfdtionIntfrvbl(y, x)}.
     * {@dodf sftSflfdtionIntfrvbl(y, x)}.
     * {@dodf sftSflfdtionIntfrvbl(y, x)}.
     * {@dodf sftSflfdtionIntfrvbl(y, x)}.
     * {@dodf sftSflfdtionIntfrvbl(y, x)}.
     *
     *
     *
     *
     *
     * @pbrbm indfx0 tif first indfx in tif rbngf to sflfdt
     * @pbrbm indfx0 tif first indfx in tif rbngf to sflfdt
     * @pbrbm indfx0 tif first indfx in tif rbngf to sflfdt
     * @pbrbm indfx0 tif first indfx in tif rbngf to sflfdt
     * @pbrbm indfx0 tif first indfx in tif rbngf to sflfdt
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to sflfdt
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to sflfdt
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to sflfdt
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to sflfdt
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to sflfdt
    */
    */
    */
    */
    */
    publid void sftSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void sftSflfdtionIntfrvbl(int indfx0, int indfx1) {
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);





        tiis.gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().sftSflfdtionPbtis(pbtis);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds tif spfdififd rows (indlusivf) to tif sflfdtion. If tif
     * Adds tif spfdififd rows (indlusivf) to tif sflfdtion. If tif
     * Adds tif spfdififd rows (indlusivf) to tif sflfdtion. If tif
     * Adds tif spfdififd rows (indlusivf) to tif sflfdtion. If tif
     * Adds tif spfdififd rows (indlusivf) to tif sflfdtion. If tif
     * spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf
     * donstrbinfd by tif vifwbblf sft of rows. If tif indidfs brf not
     * donstrbinfd by tif vifwbblf sft of rows. If tif indidfs brf not
     * donstrbinfd by tif vifwbblf sft of rows. If tif indidfs brf not
     * donstrbinfd by tif vifwbblf sft of rows. If tif indidfs brf not
     * donstrbinfd by tif vifwbblf sft of rows. If tif indidfs brf not
     * witiin tif vifwbblf sft of rows, or do not bound tif vifwbblf
     * witiin tif vifwbblf sft of rows, or do not bound tif vifwbblf
     * witiin tif vifwbblf sft of rows, or do not bound tif vifwbblf
     * witiin tif vifwbblf sft of rows, or do not bound tif vifwbblf
     * witiin tif vifwbblf sft of rows, or do not bound tif vifwbblf
     * sft of rows, tifn tif sflfdtion is undibngfd. For fxbmplf, if
     * sft of rows, tifn tif sflfdtion is undibngfd. For fxbmplf, if
     * sft of rows, tifn tif sflfdtion is undibngfd. For fxbmplf, if
     * sft of rows, tifn tif sflfdtion is undibngfd. For fxbmplf, if
     * sft of rows, tifn tif sflfdtion is undibngfd. For fxbmplf, if
     * tif row dount is {@dodf 10}, bnd tiis mftiod is invokfd witi
     * tif row dount is {@dodf 10}, bnd tiis mftiod is invokfd witi
     * tif row dount is {@dodf 10}, bnd tiis mftiod is invokfd witi
     * tif row dount is {@dodf 10}, bnd tiis mftiod is invokfd witi
     * tif row dount is {@dodf 10}, bnd tiis mftiod is invokfd witi
     * {@dodf -1, 20}, tifn tif spfdififd indidfs bounds tif vifwbblf
     * {@dodf -1, 20}, tifn tif spfdififd indidfs bounds tif vifwbblf
     * {@dodf -1, 20}, tifn tif spfdififd indidfs bounds tif vifwbblf
     * {@dodf -1, 20}, tifn tif spfdififd indidfs bounds tif vifwbblf
     * {@dodf -1, 20}, tifn tif spfdififd indidfs bounds tif vifwbblf
     * rbngf, bnd tiis is trfbtfd bs if invokfd witi {@dodf 0, 9}. On
     * rbngf, bnd tiis is trfbtfd bs if invokfd witi {@dodf 0, 9}. On
     * rbngf, bnd tiis is trfbtfd bs if invokfd witi {@dodf 0, 9}. On
     * rbngf, bnd tiis is trfbtfd bs if invokfd witi {@dodf 0, 9}. On
     * rbngf, bnd tiis is trfbtfd bs if invokfd witi {@dodf 0, 9}. On
     * tif otifr ibnd, if tiis wfrf invokfd witi {@dodf -10, -1}, tifn
     * tif otifr ibnd, if tiis wfrf invokfd witi {@dodf -10, -1}, tifn
     * tif otifr ibnd, if tiis wfrf invokfd witi {@dodf -10, -1}, tifn
     * tif otifr ibnd, if tiis wfrf invokfd witi {@dodf -10, -1}, tifn
     * tif otifr ibnd, if tiis wfrf invokfd witi {@dodf -10, -1}, tifn
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows,
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows,
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows,
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows,
     * tif spfdififd indidfs do not bound tif vifwbblf sft of rows,
     * bnd tif sflfdtion is undibngfd.
     * bnd tif sflfdtion is undibngfd.
     * bnd tif sflfdtion is undibngfd.
     * bnd tif sflfdtion is undibngfd.
     * bnd tif sflfdtion is undibngfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * bddSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * bddSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * bddSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * bddSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * bddSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * {@dodf bddSflfdtionIntfrvbl(y, x)}.
     * {@dodf bddSflfdtionIntfrvbl(y, x)}.
     * {@dodf bddSflfdtionIntfrvbl(y, x)}.
     * {@dodf bddSflfdtionIntfrvbl(y, x)}.
     * {@dodf bddSflfdtionIntfrvbl(y, x)}.
     *
     *
     *
     *
     *
     * @pbrbm indfx0 tif first indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx0 tif first indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx0 tif first indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx0 tif first indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx0 tif first indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to bdd to tif sflfdtion
     * @pbrbm indfx1 tif lbst indfx in tif rbngf to bdd to tif sflfdtion
     */
     */
     */
     */
     */
    publid void bddSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void bddSflfdtionIntfrvbl(int indfx0, int indfx1) {
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);





        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
            tiis.gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().bddSflfdtionPbtis(pbtis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs tif spfdififd rows (indlusivf) from tif sflfdtion. If
     * Rfmovfs tif spfdififd rows (indlusivf) from tif sflfdtion. If
     * Rfmovfs tif spfdififd rows (indlusivf) from tif sflfdtion. If
     * Rfmovfs tif spfdififd rows (indlusivf) from tif sflfdtion. If
     * Rfmovfs tif spfdififd rows (indlusivf) from tif sflfdtion. If
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif spfdififd indidfs brf witiin tif vifwbblf sft of rows, or bound
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf donstrbinfd by
     * tif vifwbblf sft of rows, tifn tif spfdififd indidfs brf donstrbinfd by
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * tif vifwbblf sft of rows. If tif spfdififd indidfs brf not witiin tif
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * vifwbblf sft of rows, or do not bound tif vifwbblf sft of rows, tifn
     * tif sflfdtion is undibngfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is undibngfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is undibngfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is undibngfd. For fxbmplf, if tif row dount is {@dodf
     * tif sflfdtion is undibngfd. For fxbmplf, if tif row dount is {@dodf
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * 10}, bnd tiis mftiod is invokfd witi {@dodf -1, 20}, tifn tif
     * spfdififd rbngf bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd rbngf bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd rbngf bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd rbngf bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * spfdififd rbngf bounds tif vifwbblf rbngf, bnd tiis is trfbtfd bs
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * if invokfd witi {@dodf 0, 9}. On tif otifr ibnd, if tiis wfrf
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd rbngf dofs not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd rbngf dofs not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd rbngf dofs not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd rbngf dofs not
     * invokfd witi {@dodf -10, -1}, tifn tif spfdififd rbngf dofs not
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is undibngfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is undibngfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is undibngfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is undibngfd.
     * bound tif vifwbblf sft of rows, bnd tif sflfdtion is undibngfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * Tif pbrbmftfrs brf not ordfr dfpfndfnt. Tibt is, {@dodf
     * rfmovfSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * rfmovfSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * rfmovfSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * rfmovfSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * rfmovfSflfdtionIntfrvbl(x, y)} is fquivblfnt to
     * {@dodf rfmovfSflfdtionIntfrvbl(y, x)}.
     * {@dodf rfmovfSflfdtionIntfrvbl(y, x)}.
     * {@dodf rfmovfSflfdtionIntfrvbl(y, x)}.
     * {@dodf rfmovfSflfdtionIntfrvbl(y, x)}.
     * {@dodf rfmovfSflfdtionIntfrvbl(y, x)}.
     *
     *
     *
     *
     *
     * @pbrbm indfx0 tif first row to rfmovf from tif sflfdtion
     * @pbrbm indfx0 tif first row to rfmovf from tif sflfdtion
     * @pbrbm indfx0 tif first row to rfmovf from tif sflfdtion
     * @pbrbm indfx0 tif first row to rfmovf from tif sflfdtion
     * @pbrbm indfx0 tif first row to rfmovf from tif sflfdtion
     * @pbrbm indfx1 tif lbst row to rfmovf from tif sflfdtion
     * @pbrbm indfx1 tif lbst row to rfmovf from tif sflfdtion
     * @pbrbm indfx1 tif lbst row to rfmovf from tif sflfdtion
     * @pbrbm indfx1 tif lbst row to rfmovf from tif sflfdtion
     * @pbrbm indfx1 tif lbst row to rfmovf from tif sflfdtion
     */
     */
     */
     */
     */
    publid void rfmovfSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfSflfdtionIntfrvbl(int indfx0, int indfx1) {
    publid void rfmovfSflfdtionIntfrvbl(int indfx0, int indfx1) {
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);
        TrffPbti[]         pbtis = gftPbtiBftwffnRows(indfx0, indfx1);





        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
        if (pbtis != null && pbtis.lfngti > 0) {
            tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
            tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs tif nodf idfntififd by tif spfdififd pbti from tif durrfnt
     * Rfmovfs tif nodf idfntififd by tif spfdififd pbti from tif durrfnt
     * Rfmovfs tif nodf idfntififd by tif spfdififd pbti from tif durrfnt
     * Rfmovfs tif nodf idfntififd by tif spfdififd pbti from tif durrfnt
     * Rfmovfs tif nodf idfntififd by tif spfdififd pbti from tif durrfnt
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     * @pbrbm pbti  tif <dodf>TrffPbti</dodf> idfntifying b nodf
     */
     */
     */
     */
     */
    publid void rfmovfSflfdtionPbti(TrffPbti pbti) {
    publid void rfmovfSflfdtionPbti(TrffPbti pbti) {
    publid void rfmovfSflfdtionPbti(TrffPbti pbti) {
    publid void rfmovfSflfdtionPbti(TrffPbti pbti) {
    publid void rfmovfSflfdtionPbti(TrffPbti pbti) {
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbti(pbti);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbti(pbti);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbti(pbti);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbti(pbti);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbti(pbti);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs tif nodfs idfntififd by tif spfdififd pbtis from tif
     * Rfmovfs tif nodfs idfntififd by tif spfdififd pbtis from tif
     * Rfmovfs tif nodfs idfntififd by tif spfdififd pbtis from tif
     * Rfmovfs tif nodfs idfntififd by tif spfdififd pbtis from tif
     * Rfmovfs tif nodfs idfntififd by tif spfdififd pbtis from tif
     * durrfnt sflfdtion.
     * durrfnt sflfdtion.
     * durrfnt sflfdtion.
     * durrfnt sflfdtion.
     * durrfnt sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt
     * @pbrbm pbtis bn brrby of <dodf>TrffPbti</dodf> objfdts tibt
     *              spfdififs tif nodfs to rfmovf
     *              spfdififs tif nodfs to rfmovf
     *              spfdififs tif nodfs to rfmovf
     *              spfdififs tif nodfs to rfmovf
     *              spfdififs tif nodfs to rfmovf
     */
     */
     */
     */
     */
    publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {
    publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
        tiis.gftSflfdtionModfl().rfmovfSflfdtionPbtis(pbtis);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs tif row bt tif indfx <dodf>row</dodf> from tif durrfnt
     * Rfmovfs tif row bt tif indfx <dodf>row</dodf> from tif durrfnt
     * Rfmovfs tif row bt tif indfx <dodf>row</dodf> from tif durrfnt
     * Rfmovfs tif row bt tif indfx <dodf>row</dodf> from tif durrfnt
     * Rfmovfs tif row bt tif indfx <dodf>row</dodf> from tif durrfnt
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     * sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm row  tif row to rfmovf
     * @pbrbm row  tif row to rfmovf
     * @pbrbm row  tif row to rfmovf
     * @pbrbm row  tif row to rfmovf
     * @pbrbm row  tif row to rfmovf
     */
     */
     */
     */
     */
    publid void rfmovfSflfdtionRow(int row) {
    publid void rfmovfSflfdtionRow(int row) {
    publid void rfmovfSflfdtionRow(int row) {
    publid void rfmovfSflfdtionRow(int row) {
    publid void rfmovfSflfdtionRow(int row) {
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };
        int[]             rows = { row };





        rfmovfSflfdtionRows(rows);
        rfmovfSflfdtionRows(rows);
        rfmovfSflfdtionRows(rows);
        rfmovfSflfdtionRows(rows);
        rfmovfSflfdtionRows(rows);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs tif rows tibt brf sflfdtfd bt fbdi of tif spfdififd
     * Rfmovfs tif rows tibt brf sflfdtfd bt fbdi of tif spfdififd
     * Rfmovfs tif rows tibt brf sflfdtfd bt fbdi of tif spfdififd
     * Rfmovfs tif rows tibt brf sflfdtfd bt fbdi of tif spfdififd
     * Rfmovfs tif rows tibt brf sflfdtfd bt fbdi of tif spfdififd
     * rows.
     * rows.
     * rows.
     * rows.
     * rows.
     *
     *
     *
     *
     *
     * @pbrbm rows  bn brrby of ints spfdifying displby rows, wifrf 0 is
     * @pbrbm rows  bn brrby of ints spfdifying displby rows, wifrf 0 is
     * @pbrbm rows  bn brrby of ints spfdifying displby rows, wifrf 0 is
     * @pbrbm rows  bn brrby of ints spfdifying displby rows, wifrf 0 is
     * @pbrbm rows  bn brrby of ints spfdifying displby rows, wifrf 0 is
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     *             tif first row in tif displby
     */
     */
     */
     */
     */
    publid void rfmovfSflfdtionRows(int[] rows) {
    publid void rfmovfSflfdtionRows(int[] rows) {
    publid void rfmovfSflfdtionRows(int[] rows) {
    publid void rfmovfSflfdtionRows(int[] rows) {
    publid void rfmovfSflfdtionRows(int[] rows) {
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();
        TrffUI             ui = gftUI();





        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
        if(ui != null && rows != null) {
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            int                  numRows = rows.lfngti;
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];
            TrffPbti[]           pbtis = nfw TrffPbti[numRows];





            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
            for(int dountfr = 0; dountfr < numRows; dountfr++)
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
                pbtis[dountfr] = ui.gftPbtiForRow(tiis, rows[dountfr]);
            rfmovfSflfdtionPbtis(pbtis);
            rfmovfSflfdtionPbtis(pbtis);
            rfmovfSflfdtionPbtis(pbtis);
            rfmovfSflfdtionPbtis(pbtis);
            rfmovfSflfdtionPbtis(pbtis);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Clfbrs tif sflfdtion.
     * Clfbrs tif sflfdtion.
     * Clfbrs tif sflfdtion.
     * Clfbrs tif sflfdtion.
     * Clfbrs tif sflfdtion.
     */
     */
     */
     */
     */
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
    publid void dlfbrSflfdtion() {
        gftSflfdtionModfl().dlfbrSflfdtion();
        gftSflfdtionModfl().dlfbrSflfdtion();
        gftSflfdtionModfl().dlfbrSflfdtion();
        gftSflfdtionModfl().dlfbrSflfdtion();
        gftSflfdtionModfl().dlfbrSflfdtion();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns truf if tif sflfdtion is durrfntly fmpty.
     * Rfturns truf if tif sflfdtion is durrfntly fmpty.
     * Rfturns truf if tif sflfdtion is durrfntly fmpty.
     * Rfturns truf if tif sflfdtion is durrfntly fmpty.
     * Rfturns truf if tif sflfdtion is durrfntly fmpty.
     *
     *
     *
     *
     *
     * @rfturn truf if tif sflfdtion is durrfntly fmpty
     * @rfturn truf if tif sflfdtion is durrfntly fmpty
     * @rfturn truf if tif sflfdtion is durrfntly fmpty
     * @rfturn truf if tif sflfdtion is durrfntly fmpty
     * @rfturn truf if tif sflfdtion is durrfntly fmpty
     */
     */
     */
     */
     */
    publid boolfbn isSflfdtionEmpty() {
    publid boolfbn isSflfdtionEmpty() {
    publid boolfbn isSflfdtionEmpty() {
    publid boolfbn isSflfdtionEmpty() {
    publid boolfbn isSflfdtionEmpty() {
        rfturn gftSflfdtionModfl().isSflfdtionEmpty();
        rfturn gftSflfdtionModfl().isSflfdtionEmpty();
        rfturn gftSflfdtionModfl().isSflfdtionEmpty();
        rfturn gftSflfdtionModfl().isSflfdtionEmpty();
        rfturn gftSflfdtionModfl().isSflfdtionEmpty();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     *
     *
     *
     *
     *
     * @pbrbm tfl b TrffExpbnsionListfnfr tibt will bf notififd wifn
     * @pbrbm tfl b TrffExpbnsionListfnfr tibt will bf notififd wifn
     * @pbrbm tfl b TrffExpbnsionListfnfr tibt will bf notififd wifn
     * @pbrbm tfl b TrffExpbnsionListfnfr tibt will bf notififd wifn
     * @pbrbm tfl b TrffExpbnsionListfnfr tibt will bf notififd wifn
     *            b trff nodf is fxpbndfd or dollbpsfd (b "nfgbtivf
     *            b trff nodf is fxpbndfd or dollbpsfd (b "nfgbtivf
     *            b trff nodf is fxpbndfd or dollbpsfd (b "nfgbtivf
     *            b trff nodf is fxpbndfd or dollbpsfd (b "nfgbtivf
     *            b trff nodf is fxpbndfd or dollbpsfd (b "nfgbtivf
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     */
     */
     */
     */
     */
    publid void bddTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void bddTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void bddTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void bddTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void bddTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
        if (sfttingUI) {
        if (sfttingUI) {
        if (sfttingUI) {
        if (sfttingUI) {
        if (sfttingUI) {
            uiTrffExpbnsionListfnfr = tfl;
            uiTrffExpbnsionListfnfr = tfl;
            uiTrffExpbnsionListfnfr = tfl;
            uiTrffExpbnsionListfnfr = tfl;
            uiTrffExpbnsionListfnfr = tfl;
        }
        }
        }
        }
        }
        listfnfrList.bdd(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffExpbnsionListfnfr.dlbss, tfl);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffExpbnsion</dodf> fvfnts.
     *
     *
     *
     *
     *
     * @pbrbm tfl tif <dodf>TrffExpbnsionListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffExpbnsionListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffExpbnsionListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffExpbnsionListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffExpbnsionListfnfr</dodf> to rfmovf
     */
     */
     */
     */
     */
    publid void rfmovfTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void rfmovfTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void rfmovfTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void rfmovfTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
    publid void rfmovfTrffExpbnsionListfnfr(TrffExpbnsionListfnfr tfl) {
        listfnfrList.rfmovf(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffExpbnsionListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffExpbnsionListfnfr.dlbss, tfl);
        if (uiTrffExpbnsionListfnfr == tfl) {
        if (uiTrffExpbnsionListfnfr == tfl) {
        if (uiTrffExpbnsionListfnfr == tfl) {
        if (uiTrffExpbnsionListfnfr == tfl) {
        if (uiTrffExpbnsionListfnfr == tfl) {
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
            uiTrffExpbnsionListfnfr = null;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn brrby of bll tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd
     * to tiis JTrff witi bddTrffExpbnsionListfnfr().
     * to tiis JTrff witi bddTrffExpbnsionListfnfr().
     * to tiis JTrff witi bddTrffExpbnsionListfnfr().
     * to tiis JTrff witi bddTrffExpbnsionListfnfr().
     * to tiis JTrff witi bddTrffExpbnsionListfnfr().
     *
     *
     *
     *
     *
     * @rfturn bll of tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffExpbnsionListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid TrffExpbnsionListfnfr[] gftTrffExpbnsionListfnfrs() {
    publid TrffExpbnsionListfnfr[] gftTrffExpbnsionListfnfrs() {
    publid TrffExpbnsionListfnfr[] gftTrffExpbnsionListfnfrs() {
    publid TrffExpbnsionListfnfr[] gftTrffExpbnsionListfnfrs() {
    publid TrffExpbnsionListfnfr[] gftTrffExpbnsionListfnfrs() {
        rfturn listfnfrList.gftListfnfrs(TrffExpbnsionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffExpbnsionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffExpbnsionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffExpbnsionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffExpbnsionListfnfr.dlbss);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     *
     *
     *
     *
     *
     * @pbrbm tfl b <dodf>TrffWillExpbndListfnfr</dodf> tibt will bf notififd
     * @pbrbm tfl b <dodf>TrffWillExpbndListfnfr</dodf> tibt will bf notififd
     * @pbrbm tfl b <dodf>TrffWillExpbndListfnfr</dodf> tibt will bf notififd
     * @pbrbm tfl b <dodf>TrffWillExpbndListfnfr</dodf> tibt will bf notififd
     * @pbrbm tfl b <dodf>TrffWillExpbndListfnfr</dodf> tibt will bf notififd
     *            wifn b trff nodf will bf fxpbndfd or dollbpsfd (b "nfgbtivf
     *            wifn b trff nodf will bf fxpbndfd or dollbpsfd (b "nfgbtivf
     *            wifn b trff nodf will bf fxpbndfd or dollbpsfd (b "nfgbtivf
     *            wifn b trff nodf will bf fxpbndfd or dollbpsfd (b "nfgbtivf
     *            wifn b trff nodf will bf fxpbndfd or dollbpsfd (b "nfgbtivf
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     *            fxpbnsion")
     */
     */
     */
     */
     */
    publid void bddTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void bddTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void bddTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void bddTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void bddTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
        listfnfrList.bdd(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.bdd(TrffWillExpbndListfnfr.dlbss, tfl);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     * Rfmovfs b listfnfr for <dodf>TrffWillExpbnd</dodf> fvfnts.
     *
     *
     *
     *
     *
     * @pbrbm tfl tif <dodf>TrffWillExpbndListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffWillExpbndListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffWillExpbndListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffWillExpbndListfnfr</dodf> to rfmovf
     * @pbrbm tfl tif <dodf>TrffWillExpbndListfnfr</dodf> to rfmovf
     */
     */
     */
     */
     */
    publid void rfmovfTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void rfmovfTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void rfmovfTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void rfmovfTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
    publid void rfmovfTrffWillExpbndListfnfr(TrffWillExpbndListfnfr tfl) {
        listfnfrList.rfmovf(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffWillExpbndListfnfr.dlbss, tfl);
        listfnfrList.rfmovf(TrffWillExpbndListfnfr.dlbss, tfl);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn brrby of bll tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd
     * to tiis JTrff witi bddTrffWillExpbndListfnfr().
     * to tiis JTrff witi bddTrffWillExpbndListfnfr().
     * to tiis JTrff witi bddTrffWillExpbndListfnfr().
     * to tiis JTrff witi bddTrffWillExpbndListfnfr().
     * to tiis JTrff witi bddTrffWillExpbndListfnfr().
     *
     *
     *
     *
     *
     * @rfturn bll of tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffWillExpbndListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid TrffWillExpbndListfnfr[] gftTrffWillExpbndListfnfrs() {
    publid TrffWillExpbndListfnfr[] gftTrffWillExpbndListfnfrs() {
    publid TrffWillExpbndListfnfr[] gftTrffWillExpbndListfnfrs() {
    publid TrffWillExpbndListfnfr[] gftTrffWillExpbndListfnfrs() {
    publid TrffWillExpbndListfnfr[] gftTrffWillExpbndListfnfrs() {
        rfturn listfnfrList.gftListfnfrs(TrffWillExpbndListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffWillExpbndListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffWillExpbndListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffWillExpbndListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffWillExpbndListfnfr.dlbss);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     */
     */
     */
     */
     */
     publid void firfTrffExpbndfd(TrffPbti pbti) {
     publid void firfTrffExpbndfd(TrffPbti pbti) {
     publid void firfTrffExpbndfd(TrffPbti pbti) {
     publid void firfTrffExpbndfd(TrffPbti pbti) {
     publid void firfTrffExpbndfd(TrffPbti pbti) {
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            uiTrffExpbnsionListfnfr.trffExpbndfd(f);
            uiTrffExpbnsionListfnfr.trffExpbndfd(f);
            uiTrffExpbnsionListfnfr.trffExpbndfd(f);
            uiTrffExpbnsionListfnfr.trffExpbndfd(f);
            uiTrffExpbnsionListfnfr.trffExpbndfd(f);
        }
        }
        }
        }
        }
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                    trffExpbndfd(f);
                    trffExpbndfd(f);
                    trffExpbndfd(f);
                    trffExpbndfd(f);
                    trffExpbndfd(f);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     *          dollbpsfd
     *          dollbpsfd
     *          dollbpsfd
     *          dollbpsfd
     *          dollbpsfd
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     */
     */
     */
     */
     */
    publid void firfTrffCollbpsfd(TrffPbti pbti) {
    publid void firfTrffCollbpsfd(TrffPbti pbti) {
    publid void firfTrffCollbpsfd(TrffPbti pbti) {
    publid void firfTrffCollbpsfd(TrffPbti pbti) {
    publid void firfTrffCollbpsfd(TrffPbti pbti) {
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
        if (uiTrffExpbnsionListfnfr != null) {
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            f = nfw TrffExpbnsionEvfnt(tiis, pbti);
            uiTrffExpbnsionListfnfr.trffCollbpsfd(f);
            uiTrffExpbnsionListfnfr.trffCollbpsfd(f);
            uiTrffExpbnsionListfnfr.trffCollbpsfd(f);
            uiTrffExpbnsionListfnfr.trffCollbpsfd(f);
            uiTrffExpbnsionListfnfr.trffCollbpsfd(f);
        }
        }
        }
        }
        }
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
            if (listfnfrs[i]==TrffExpbnsionListfnfr.dlbss &&
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                listfnfrs[i + 1] != uiTrffExpbnsionListfnfr) {
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                ((TrffExpbnsionListfnfr)listfnfrs[i+1]).
                    trffCollbpsfd(f);
                    trffCollbpsfd(f);
                    trffCollbpsfd(f);
                    trffCollbpsfd(f);
                    trffCollbpsfd(f);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     * @tirows ExpbndVftoExdfption if tif fxpbnsion is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif fxpbnsion is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif fxpbnsion is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif fxpbnsion is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif fxpbnsion is prfvfntfd from oddurring
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     */
     */
     */
     */
     */
     publid void firfTrffWillExpbnd(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillExpbnd(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillExpbnd(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillExpbnd(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillExpbnd(TrffPbti pbti) tirows ExpbndVftoExdfption {
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                    trffWillExpbnd(f);
                    trffWillExpbnd(f);
                    trffWillExpbnd(f);
                    trffWillExpbnd(f);
                    trffWillExpbnd(f);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     * is lbzily drfbtfd using tif <dodf>pbti</dodf> pbrbmftfr.
     *
     *
     *
     *
     *
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     * @pbrbm pbti tif <dodf>TrffPbti</dodf> indidbting tif nodf tibt wbs
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     *          fxpbndfd
     * @tirows ExpbndVftoExdfption if tif dollbpsf is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif dollbpsf is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif dollbpsf is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif dollbpsf is prfvfntfd from oddurring
     * @tirows ExpbndVftoExdfption if tif dollbpsf is prfvfntfd from oddurring
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     */
     */
     */
     */
     */
     publid void firfTrffWillCollbpsf(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillCollbpsf(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillCollbpsf(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillCollbpsf(TrffPbti pbti) tirows ExpbndVftoExdfption {
     publid void firfTrffWillCollbpsf(TrffPbti pbti) tirows ExpbndVftoExdfption {
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        TrffExpbnsionEvfnt f = null;
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
            if (listfnfrs[i]==TrffWillExpbndListfnfr.dlbss) {
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                if (f == null)
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                    f = nfw TrffExpbnsionEvfnt(tiis, pbti);
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                ((TrffWillExpbndListfnfr)listfnfrs[i+1]).
                    trffWillCollbpsf(f);
                    trffWillCollbpsf(f);
                    trffWillCollbpsf(f);
                    trffWillCollbpsf(f);
                    trffWillCollbpsf(f);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Adds b listfnfr for <dodf>TrffSflfdtion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffSflfdtion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffSflfdtion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffSflfdtion</dodf> fvfnts.
     * Adds b listfnfr for <dodf>TrffSflfdtion</dodf> fvfnts.
     *
     *
     *
     *
     *
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> tibt will bf notififd
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> tibt will bf notififd
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> tibt will bf notififd
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> tibt will bf notififd
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> tibt will bf notififd
     *            wifn b nodf is sflfdtfd or dfsflfdtfd (b "nfgbtivf
     *            wifn b nodf is sflfdtfd or dfsflfdtfd (b "nfgbtivf
     *            wifn b nodf is sflfdtfd or dfsflfdtfd (b "nfgbtivf
     *            wifn b nodf is sflfdtfd or dfsflfdtfd (b "nfgbtivf
     *            wifn b nodf is sflfdtfd or dfsflfdtfd (b "nfgbtivf
     *            sflfdtion")
     *            sflfdtion")
     *            sflfdtion")
     *            sflfdtion")
     *            sflfdtion")
     */
     */
     */
     */
     */
    publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
        listfnfrList.bdd(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.bdd(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.bdd(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.bdd(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.bdd(TrffSflfdtionListfnfr.dlbss,tsl);
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0
           && sflfdtionRfdirfdtor == null) {
           && sflfdtionRfdirfdtor == null) {
           && sflfdtionRfdirfdtor == null) {
           && sflfdtionRfdirfdtor == null) {
           && sflfdtionRfdirfdtor == null) {
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs b <dodf>TrffSflfdtion</dodf> listfnfr.
     * Rfmovfs b <dodf>TrffSflfdtion</dodf> listfnfr.
     * Rfmovfs b <dodf>TrffSflfdtion</dodf> listfnfr.
     * Rfmovfs b <dodf>TrffSflfdtion</dodf> listfnfr.
     * Rfmovfs b <dodf>TrffSflfdtion</dodf> listfnfr.
     *
     *
     *
     *
     *
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> to rfmovf
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> to rfmovf
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> to rfmovf
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> to rfmovf
     * @pbrbm tsl tif <dodf>TrffSflfdtionListfnfr</dodf> to rfmovf
     */
     */
     */
     */
     */
    publid void rfmovfTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void rfmovfTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void rfmovfTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void rfmovfTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
    publid void rfmovfTrffSflfdtionListfnfr(TrffSflfdtionListfnfr tsl) {
        listfnfrList.rfmovf(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.rfmovf(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.rfmovf(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.rfmovf(TrffSflfdtionListfnfr.dlbss,tsl);
        listfnfrList.rfmovf(TrffSflfdtionListfnfr.dlbss,tsl);
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) == 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) == 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) == 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) == 0
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) == 0
           && sflfdtionRfdirfdtor != null) {
           && sflfdtionRfdirfdtor != null) {
           && sflfdtionRfdirfdtor != null) {
           && sflfdtionRfdirfdtor != null) {
           && sflfdtionRfdirfdtor != null) {
            sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
            sflfdtionModfl.rfmovfTrffSflfdtionListfnfr
                (sflfdtionRfdirfdtor);
                (sflfdtionRfdirfdtor);
                (sflfdtionRfdirfdtor);
                (sflfdtionRfdirfdtor);
                (sflfdtionRfdirfdtor);
            sflfdtionRfdirfdtor = null;
            sflfdtionRfdirfdtor = null;
            sflfdtionRfdirfdtor = null;
            sflfdtionRfdirfdtor = null;
            sflfdtionRfdirfdtor = null;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn brrby of bll tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd
     * Rfturns bn brrby of bll tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd
     * to tiis JTrff witi bddTrffSflfdtionListfnfr().
     * to tiis JTrff witi bddTrffSflfdtionListfnfr().
     * to tiis JTrff witi bddTrffSflfdtionListfnfr().
     * to tiis JTrff witi bddTrffSflfdtionListfnfr().
     * to tiis JTrff witi bddTrffSflfdtionListfnfr().
     *
     *
     *
     *
     *
     * @rfturn bll of tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd or bn fmpty
     * @rfturn bll of tif <dodf>TrffSflfdtionListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     *         brrby if no listfnfrs ibvf bffn bddfd
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid TrffSflfdtionListfnfr[] gftTrffSflfdtionListfnfrs() {
    publid TrffSflfdtionListfnfr[] gftTrffSflfdtionListfnfrs() {
    publid TrffSflfdtionListfnfr[] gftTrffSflfdtionListfnfrs() {
    publid TrffSflfdtionListfnfr[] gftTrffSflfdtionListfnfrs() {
    publid TrffSflfdtionListfnfr[] gftTrffSflfdtionListfnfrs() {
        rfturn listfnfrList.gftListfnfrs(TrffSflfdtionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffSflfdtionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffSflfdtionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffSflfdtionListfnfr.dlbss);
        rfturn listfnfrList.gftListfnfrs(TrffSflfdtionListfnfr.dlbss);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
     * notifidbtion on tiis fvfnt typf.
     * notifidbtion on tiis fvfnt typf.
     * notifidbtion on tiis fvfnt typf.
     * notifidbtion on tiis fvfnt typf.
     * notifidbtion on tiis fvfnt typf.
     *
     *
     *
     *
     *
     * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> to bf firfd;
     * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> to bf firfd;
     * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> to bf firfd;
     * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> to bf firfd;
     * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> to bf firfd;
     *          gfnfrbtfd by tif
     *          gfnfrbtfd by tif
     *          gfnfrbtfd by tif
     *          gfnfrbtfd by tif
     *          gfnfrbtfd by tif
     *          <dodf>TrffSflfdtionModfl</dodf>
     *          <dodf>TrffSflfdtionModfl</dodf>
     *          <dodf>TrffSflfdtionModfl</dodf>
     *          <dodf>TrffSflfdtionModfl</dodf>
     *          <dodf>TrffSflfdtionModfl</dodf>
     *          wifn b nodf is sflfdtfd or dfsflfdtfd
     *          wifn b nodf is sflfdtfd or dfsflfdtfd
     *          wifn b nodf is sflfdtfd or dfsflfdtfd
     *          wifn b nodf is sflfdtfd or dfsflfdtfd
     *          wifn b nodf is sflfdtfd or dfsflfdtfd
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     * @sff EvfntListfnfrList
     */
     */
     */
     */
     */
    protfdtfd void firfVblufCibngfd(TrffSflfdtionEvfnt f) {
    protfdtfd void firfVblufCibngfd(TrffSflfdtionEvfnt f) {
    protfdtfd void firfVblufCibngfd(TrffSflfdtionEvfnt f) {
    protfdtfd void firfVblufCibngfd(TrffSflfdtionEvfnt f) {
    protfdtfd void firfVblufCibngfd(TrffSflfdtionEvfnt f) {
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        // Gubrbntffd to rfturn b non-null brrby
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // Prodfss tif listfnfrs lbst to first, notifying
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        // tiosf tibt brf intfrfstfd in tiis fvfnt
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
        for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
            // TrffSflfdtionEvfnt f = null;
            // TrffSflfdtionEvfnt f = null;
            // TrffSflfdtionEvfnt f = null;
            // TrffSflfdtionEvfnt f = null;
            // TrffSflfdtionEvfnt f = null;
            if (listfnfrs[i]==TrffSflfdtionListfnfr.dlbss) {
            if (listfnfrs[i]==TrffSflfdtionListfnfr.dlbss) {
            if (listfnfrs[i]==TrffSflfdtionListfnfr.dlbss) {
            if (listfnfrs[i]==TrffSflfdtionListfnfr.dlbss) {
            if (listfnfrs[i]==TrffSflfdtionListfnfr.dlbss) {
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // Lbzily drfbtf tif fvfnt:
                // if (f == null)
                // if (f == null)
                // if (f == null)
                // if (f == null)
                // if (f == null)
                // f = nfw ListSflfdtionEvfnt(tiis, firstIndfx, lbstIndfx);
                // f = nfw ListSflfdtionEvfnt(tiis, firstIndfx, lbstIndfx);
                // f = nfw ListSflfdtionEvfnt(tiis, firstIndfx, lbstIndfx);
                // f = nfw ListSflfdtionEvfnt(tiis, firstIndfx, lbstIndfx);
                // f = nfw ListSflfdtionEvfnt(tiis, firstIndfx, lbstIndfx);
                ((TrffSflfdtionListfnfr)listfnfrs[i+1]).vblufCibngfd(f);
                ((TrffSflfdtionListfnfr)listfnfrs[i+1]).vblufCibngfd(f);
                ((TrffSflfdtionListfnfr)listfnfrs[i+1]).vblufCibngfd(f);
                ((TrffSflfdtionListfnfr)listfnfrs[i+1]).vblufCibngfd(f);
                ((TrffSflfdtionListfnfr)listfnfrs[i+1]).vblufCibngfd(f);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfnt wifn tif trff ibs dibngfd fnougi tibt wf nffd to rfsizf
     * Sfnt wifn tif trff ibs dibngfd fnougi tibt wf nffd to rfsizf
     * Sfnt wifn tif trff ibs dibngfd fnougi tibt wf nffd to rfsizf
     * Sfnt wifn tif trff ibs dibngfd fnougi tibt wf nffd to rfsizf
     * Sfnt wifn tif trff ibs dibngfd fnougi tibt wf nffd to rfsizf
     * tif bounds, but not fnougi tibt wf nffd to rfmovf tif
     * tif bounds, but not fnougi tibt wf nffd to rfmovf tif
     * tif bounds, but not fnougi tibt wf nffd to rfmovf tif
     * tif bounds, but not fnougi tibt wf nffd to rfmovf tif
     * tif bounds, but not fnougi tibt wf nffd to rfmovf tif
     * fxpbndfd nodf sft (f.g nodfs wfrf fxpbndfd or dollbpsfd, or
     * fxpbndfd nodf sft (f.g nodfs wfrf fxpbndfd or dollbpsfd, or
     * fxpbndfd nodf sft (f.g nodfs wfrf fxpbndfd or dollbpsfd, or
     * fxpbndfd nodf sft (f.g nodfs wfrf fxpbndfd or dollbpsfd, or
     * fxpbndfd nodf sft (f.g nodfs wfrf fxpbndfd or dollbpsfd, or
     * nodfs wfrf insfrtfd into tif trff). You siould nfvfr ibvf to
     * nodfs wfrf insfrtfd into tif trff). You siould nfvfr ibvf to
     * nodfs wfrf insfrtfd into tif trff). You siould nfvfr ibvf to
     * nodfs wfrf insfrtfd into tif trff). You siould nfvfr ibvf to
     * nodfs wfrf insfrtfd into tif trff). You siould nfvfr ibvf to
     * invokf tiis, tif UI will invokf tiis bs it nffds to.
     * invokf tiis, tif UI will invokf tiis bs it nffds to.
     * invokf tiis, tif UI will invokf tiis bs it nffds to.
     * invokf tiis, tif UI will invokf tiis bs it nffds to.
     * invokf tiis, tif UI will invokf tiis bs it nffds to.
     */
     */
     */
     */
     */
    publid void trffDidCibngf() {
    publid void trffDidCibngf() {
    publid void trffDidCibngf() {
    publid void trffDidCibngf() {
    publid void trffDidCibngf() {
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfvblidbtf();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
        rfpbint();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif numbfr of rows tibt brf to bf displbyfd.
     * Sfts tif numbfr of rows tibt brf to bf displbyfd.
     * Sfts tif numbfr of rows tibt brf to bf displbyfd.
     * Sfts tif numbfr of rows tibt brf to bf displbyfd.
     * Sfts tif numbfr of rows tibt brf to bf displbyfd.
     * Tiis will only work if tif trff is dontbinfd in b
     * Tiis will only work if tif trff is dontbinfd in b
     * Tiis will only work if tif trff is dontbinfd in b
     * Tiis will only work if tif trff is dontbinfd in b
     * Tiis will only work if tif trff is dontbinfd in b
     * <dodf>JSdrollPbnf</dodf>,
     * <dodf>JSdrollPbnf</dodf>,
     * <dodf>JSdrollPbnf</dodf>,
     * <dodf>JSdrollPbnf</dodf>,
     * <dodf>JSdrollPbnf</dodf>,
     * bnd will bdjust tif prfffrrfd sizf bnd sizf of tibt sdrollpbnf.
     * bnd will bdjust tif prfffrrfd sizf bnd sizf of tibt sdrollpbnf.
     * bnd will bdjust tif prfffrrfd sizf bnd sizf of tibt sdrollpbnf.
     * bnd will bdjust tif prfffrrfd sizf bnd sizf of tibt sdrollpbnf.
     * bnd will bdjust tif prfffrrfd sizf bnd sizf of tibt sdrollpbnf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     * Tiis is b bound propfrty.
     *
     *
     *
     *
     *
     * @pbrbm nfwCount tif numbfr of rows to displby
     * @pbrbm nfwCount tif numbfr of rows to displby
     * @pbrbm nfwCount tif numbfr of rows to displby
     * @pbrbm nfwCount tif numbfr of rows to displby
     * @pbrbm nfwCount tif numbfr of rows to displby
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     * @bfbninfo
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *        bound: truf
     *  dfsdription: Tif numbfr of rows tibt brf to bf displbyfd.
     *  dfsdription: Tif numbfr of rows tibt brf to bf displbyfd.
     *  dfsdription: Tif numbfr of rows tibt brf to bf displbyfd.
     *  dfsdription: Tif numbfr of rows tibt brf to bf displbyfd.
     *  dfsdription: Tif numbfr of rows tibt brf to bf displbyfd.
     */
     */
     */
     */
     */
    publid void sftVisiblfRowCount(int nfwCount) {
    publid void sftVisiblfRowCount(int nfwCount) {
    publid void sftVisiblfRowCount(int nfwCount) {
    publid void sftVisiblfRowCount(int nfwCount) {
    publid void sftVisiblfRowCount(int nfwCount) {
        int                 oldCount = visiblfRowCount;
        int                 oldCount = visiblfRowCount;
        int                 oldCount = visiblfRowCount;
        int                 oldCount = visiblfRowCount;
        int                 oldCount = visiblfRowCount;





        visiblfRowCount = nfwCount;
        visiblfRowCount = nfwCount;
        visiblfRowCount = nfwCount;
        visiblfRowCount = nfwCount;
        visiblfRowCount = nfwCount;
        firfPropfrtyCibngf(VISIBLE_ROW_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(VISIBLE_ROW_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(VISIBLE_ROW_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(VISIBLE_ROW_COUNT_PROPERTY, oldCount,
        firfPropfrtyCibngf(VISIBLE_ROW_COUNT_PROPERTY, oldCount,
                           visiblfRowCount);
                           visiblfRowCount);
                           visiblfRowCount);
                           visiblfRowCount);
                           visiblfRowCount);
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        invblidbtf();
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
        if (bddfssiblfContfxt != null) {
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
            ((AddfssiblfJTrff)bddfssiblfContfxt).firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif numbfr of rows tibt brf displbyfd in tif displby brfb.
     * Rfturns tif numbfr of rows tibt brf displbyfd in tif displby brfb.
     * Rfturns tif numbfr of rows tibt brf displbyfd in tif displby brfb.
     * Rfturns tif numbfr of rows tibt brf displbyfd in tif displby brfb.
     * Rfturns tif numbfr of rows tibt brf displbyfd in tif displby brfb.
     *
     *
     *
     *
     *
     * @rfturn tif numbfr of rows displbyfd
     * @rfturn tif numbfr of rows displbyfd
     * @rfturn tif numbfr of rows displbyfd
     * @rfturn tif numbfr of rows displbyfd
     * @rfturn tif numbfr of rows displbyfd
     */
     */
     */
     */
     */
    publid int gftVisiblfRowCount() {
    publid int gftVisiblfRowCount() {
    publid int gftVisiblfRowCount() {
    publid int gftVisiblfRowCount() {
    publid int gftVisiblfRowCount() {
        rfturn visiblfRowCount;
        rfturn visiblfRowCount;
        rfturn visiblfRowCount;
        rfturn visiblfRowCount;
        rfturn visiblfRowCount;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Expbnds tif root pbti, bssuming tif durrfnt TrffModfl ibs bffn sft.
     * Expbnds tif root pbti, bssuming tif durrfnt TrffModfl ibs bffn sft.
     * Expbnds tif root pbti, bssuming tif durrfnt TrffModfl ibs bffn sft.
     * Expbnds tif root pbti, bssuming tif durrfnt TrffModfl ibs bffn sft.
     * Expbnds tif root pbti, bssuming tif durrfnt TrffModfl ibs bffn sft.
     */
     */
     */
     */
     */
    privbtf void fxpbndRoot() {
    privbtf void fxpbndRoot() {
    privbtf void fxpbndRoot() {
    privbtf void fxpbndRoot() {
    privbtf void fxpbndRoot() {
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();
        TrffModfl              modfl = gftModfl();





        if(modfl != null && modfl.gftRoot() != null) {
        if(modfl != null && modfl.gftRoot() != null) {
        if(modfl != null && modfl.gftRoot() != null) {
        if(modfl != null && modfl.gftRoot() != null) {
        if(modfl != null && modfl.gftRoot() != null) {
            fxpbndPbti(nfw TrffPbti(modfl.gftRoot()));
            fxpbndPbti(nfw TrffPbti(modfl.gftRoot()));
            fxpbndPbti(nfw TrffPbti(modfl.gftRoot()));
            fxpbndPbti(nfw TrffPbti(modfl.gftRoot()));
            fxpbndPbti(nfw TrffPbti(modfl.gftRoot()));
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif TrffPbti to tif nfxt trff flfmfnt tibt
     * Rfturns tif TrffPbti to tif nfxt trff flfmfnt tibt
     * Rfturns tif TrffPbti to tif nfxt trff flfmfnt tibt
     * Rfturns tif TrffPbti to tif nfxt trff flfmfnt tibt
     * Rfturns tif TrffPbti to tif nfxt trff flfmfnt tibt
     * bfgins witi b prffix. To ibndlf tif donvfrsion of b
     * bfgins witi b prffix. To ibndlf tif donvfrsion of b
     * bfgins witi b prffix. To ibndlf tif donvfrsion of b
     * bfgins witi b prffix. To ibndlf tif donvfrsion of b
     * bfgins witi b prffix. To ibndlf tif donvfrsion of b
     * <dodf>TrffPbti</dodf> into b String, <dodf>donvfrtVblufToTfxt</dodf>
     * <dodf>TrffPbti</dodf> into b String, <dodf>donvfrtVblufToTfxt</dodf>
     * <dodf>TrffPbti</dodf> into b String, <dodf>donvfrtVblufToTfxt</dodf>
     * <dodf>TrffPbti</dodf> into b String, <dodf>donvfrtVblufToTfxt</dodf>
     * <dodf>TrffPbti</dodf> into b String, <dodf>donvfrtVblufToTfxt</dodf>
     * is usfd.
     * is usfd.
     * is usfd.
     * is usfd.
     * is usfd.
     *
     *
     *
     *
     *
     * @pbrbm prffix tif string to tfst for b mbtdi
     * @pbrbm prffix tif string to tfst for b mbtdi
     * @pbrbm prffix tif string to tfst for b mbtdi
     * @pbrbm prffix tif string to tfst for b mbtdi
     * @pbrbm prffix tif string to tfst for b mbtdi
     * @pbrbm stbrtingRow tif row for stbrting tif sfbrdi
     * @pbrbm stbrtingRow tif row for stbrting tif sfbrdi
     * @pbrbm stbrtingRow tif row for stbrting tif sfbrdi
     * @pbrbm stbrtingRow tif row for stbrting tif sfbrdi
     * @pbrbm stbrtingRow tif row for stbrting tif sfbrdi
     * @pbrbm bibs tif sfbrdi dirfdtion, fitifr
     * @pbrbm bibs tif sfbrdi dirfdtion, fitifr
     * @pbrbm bibs tif sfbrdi dirfdtion, fitifr
     * @pbrbm bibs tif sfbrdi dirfdtion, fitifr
     * @pbrbm bibs tif sfbrdi dirfdtion, fitifr
     * Position.Bibs.Forwbrd or Position.Bibs.Bbdkwbrd.
     * Position.Bibs.Forwbrd or Position.Bibs.Bbdkwbrd.
     * Position.Bibs.Forwbrd or Position.Bibs.Bbdkwbrd.
     * Position.Bibs.Forwbrd or Position.Bibs.Bbdkwbrd.
     * Position.Bibs.Forwbrd or Position.Bibs.Bbdkwbrd.
     * @rfturn tif TrffPbti of tif nfxt trff flfmfnt tibt
     * @rfturn tif TrffPbti of tif nfxt trff flfmfnt tibt
     * @rfturn tif TrffPbti of tif nfxt trff flfmfnt tibt
     * @rfturn tif TrffPbti of tif nfxt trff flfmfnt tibt
     * @rfturn tif TrffPbti of tif nfxt trff flfmfnt tibt
     * stbrts witi tif prffix; otifrwisf null
     * stbrts witi tif prffix; otifrwisf null
     * stbrts witi tif prffix; otifrwisf null
     * stbrts witi tif prffix; otifrwisf null
     * stbrts witi tif prffix; otifrwisf null
     * @fxdfption IllfgblArgumfntExdfption if prffix is null
     * @fxdfption IllfgblArgumfntExdfption if prffix is null
     * @fxdfption IllfgblArgumfntExdfption if prffix is null
     * @fxdfption IllfgblArgumfntExdfption if prffix is null
     * @fxdfption IllfgblArgumfntExdfption if prffix is null
     * or stbrtingRow is out of bounds
     * or stbrtingRow is out of bounds
     * or stbrtingRow is out of bounds
     * or stbrtingRow is out of bounds
     * or stbrtingRow is out of bounds
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     * @sindf 1.4
     */
     */
     */
     */
     */
    publid TrffPbti gftNfxtMbtdi(String prffix, int stbrtingRow,
    publid TrffPbti gftNfxtMbtdi(String prffix, int stbrtingRow,
    publid TrffPbti gftNfxtMbtdi(String prffix, int stbrtingRow,
    publid TrffPbti gftNfxtMbtdi(String prffix, int stbrtingRow,
    publid TrffPbti gftNfxtMbtdi(String prffix, int stbrtingRow,
                                 Position.Bibs bibs) {
                                 Position.Bibs bibs) {
                                 Position.Bibs bibs) {
                                 Position.Bibs bibs) {
                                 Position.Bibs bibs) {





        int mbx = gftRowCount();
        int mbx = gftRowCount();
        int mbx = gftRowCount();
        int mbx = gftRowCount();
        int mbx = gftRowCount();
        if (prffix == null) {
        if (prffix == null) {
        if (prffix == null) {
        if (prffix == null) {
        if (prffix == null) {
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
        }
        }
        }
        }
        }
        if (stbrtingRow < 0 || stbrtingRow >= mbx) {
        if (stbrtingRow < 0 || stbrtingRow >= mbx) {
        if (stbrtingRow < 0 || stbrtingRow >= mbx) {
        if (stbrtingRow < 0 || stbrtingRow >= mbx) {
        if (stbrtingRow < 0 || stbrtingRow >= mbx) {
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
            tirow nfw IllfgblArgumfntExdfption();
        }
        }
        }
        }
        }
        prffix = prffix.toUppfrCbsf();
        prffix = prffix.toUppfrCbsf();
        prffix = prffix.toUppfrCbsf();
        prffix = prffix.toUppfrCbsf();
        prffix = prffix.toUppfrCbsf();





        // stbrt sfbrdi from tif nfxt/prfvious flfmfnt froom tif
        // stbrt sfbrdi from tif nfxt/prfvious flfmfnt froom tif
        // stbrt sfbrdi from tif nfxt/prfvious flfmfnt froom tif
        // stbrt sfbrdi from tif nfxt/prfvious flfmfnt froom tif
        // stbrt sfbrdi from tif nfxt/prfvious flfmfnt froom tif
        // sflfdtfd flfmfnt
        // sflfdtfd flfmfnt
        // sflfdtfd flfmfnt
        // sflfdtfd flfmfnt
        // sflfdtfd flfmfnt
        int indrfmfnt = (bibs == Position.Bibs.Forwbrd) ? 1 : -1;
        int indrfmfnt = (bibs == Position.Bibs.Forwbrd) ? 1 : -1;
        int indrfmfnt = (bibs == Position.Bibs.Forwbrd) ? 1 : -1;
        int indrfmfnt = (bibs == Position.Bibs.Forwbrd) ? 1 : -1;
        int indrfmfnt = (bibs == Position.Bibs.Forwbrd) ? 1 : -1;
        int row = stbrtingRow;
        int row = stbrtingRow;
        int row = stbrtingRow;
        int row = stbrtingRow;
        int row = stbrtingRow;
        do {
        do {
        do {
        do {
        do {
            TrffPbti pbti = gftPbtiForRow(row);
            TrffPbti pbti = gftPbtiForRow(row);
            TrffPbti pbti = gftPbtiForRow(row);
            TrffPbti pbti = gftPbtiForRow(row);
            TrffPbti pbti = gftPbtiForRow(row);
            String tfxt = donvfrtVblufToTfxt(
            String tfxt = donvfrtVblufToTfxt(
            String tfxt = donvfrtVblufToTfxt(
            String tfxt = donvfrtVblufToTfxt(
            String tfxt = donvfrtVblufToTfxt(
                pbti.gftLbstPbtiComponfnt(), isRowSflfdtfd(row),
                pbti.gftLbstPbtiComponfnt(), isRowSflfdtfd(row),
                pbti.gftLbstPbtiComponfnt(), isRowSflfdtfd(row),
                pbti.gftLbstPbtiComponfnt(), isRowSflfdtfd(row),
                pbti.gftLbstPbtiComponfnt(), isRowSflfdtfd(row),
                isExpbndfd(row), truf, row, fblsf);
                isExpbndfd(row), truf, row, fblsf);
                isExpbndfd(row), truf, row, fblsf);
                isExpbndfd(row), truf, row, fblsf);
                isExpbndfd(row), truf, row, fblsf);





            if (tfxt.toUppfrCbsf().stbrtsWiti(prffix)) {
            if (tfxt.toUppfrCbsf().stbrtsWiti(prffix)) {
            if (tfxt.toUppfrCbsf().stbrtsWiti(prffix)) {
            if (tfxt.toUppfrCbsf().stbrtsWiti(prffix)) {
            if (tfxt.toUppfrCbsf().stbrtsWiti(prffix)) {
                rfturn pbti;
                rfturn pbti;
                rfturn pbti;
                rfturn pbti;
                rfturn pbti;
            }
            }
            }
            }
            }
            row = (row + indrfmfnt + mbx) % mbx;
            row = (row + indrfmfnt + mbx) % mbx;
            row = (row + indrfmfnt + mbx) % mbx;
            row = (row + indrfmfnt + mbx) % mbx;
            row = (row + indrfmfnt + mbx) % mbx;
        } wiilf (row != stbrtingRow);
        } wiilf (row != stbrtingRow);
        } wiilf (row != stbrtingRow);
        } wiilf (row != stbrtingRow);
        } wiilf (row != stbrtingRow);
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    // Sfriblizbtion support.
    // Sfriblizbtion support.
    // Sfriblizbtion support.
    // Sfriblizbtion support.
    // Sfriblizbtion support.
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
        Vfdtor<Objfdt> vblufs = nfw Vfdtor<Objfdt>();
        Vfdtor<Objfdt> vblufs = nfw Vfdtor<Objfdt>();
        Vfdtor<Objfdt> vblufs = nfw Vfdtor<Objfdt>();
        Vfdtor<Objfdt> vblufs = nfw Vfdtor<Objfdt>();
        Vfdtor<Objfdt> vblufs = nfw Vfdtor<Objfdt>();





        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        s.dffbultWritfObjfdt();
        // Sbvf tif dfllRfndfrfr, if its Sfriblizbblf.
        // Sbvf tif dfllRfndfrfr, if its Sfriblizbblf.
        // Sbvf tif dfllRfndfrfr, if its Sfriblizbblf.
        // Sbvf tif dfllRfndfrfr, if its Sfriblizbblf.
        // Sbvf tif dfllRfndfrfr, if its Sfriblizbblf.
        if(dfllRfndfrfr != null && dfllRfndfrfr instbndfof Sfriblizbblf) {
        if(dfllRfndfrfr != null && dfllRfndfrfr instbndfof Sfriblizbblf) {
        if(dfllRfndfrfr != null && dfllRfndfrfr instbndfof Sfriblizbblf) {
        if(dfllRfndfrfr != null && dfllRfndfrfr instbndfof Sfriblizbblf) {
        if(dfllRfndfrfr != null && dfllRfndfrfr instbndfof Sfriblizbblf) {
            vblufs.bddElfmfnt("dfllRfndfrfr");
            vblufs.bddElfmfnt("dfllRfndfrfr");
            vblufs.bddElfmfnt("dfllRfndfrfr");
            vblufs.bddElfmfnt("dfllRfndfrfr");
            vblufs.bddElfmfnt("dfllRfndfrfr");
            vblufs.bddElfmfnt(dfllRfndfrfr);
            vblufs.bddElfmfnt(dfllRfndfrfr);
            vblufs.bddElfmfnt(dfllRfndfrfr);
            vblufs.bddElfmfnt(dfllRfndfrfr);
            vblufs.bddElfmfnt(dfllRfndfrfr);
        }
        }
        }
        }
        }
        // Sbvf tif dfllEditor, if its Sfriblizbblf.
        // Sbvf tif dfllEditor, if its Sfriblizbblf.
        // Sbvf tif dfllEditor, if its Sfriblizbblf.
        // Sbvf tif dfllEditor, if its Sfriblizbblf.
        // Sbvf tif dfllEditor, if its Sfriblizbblf.
        if(dfllEditor != null && dfllEditor instbndfof Sfriblizbblf) {
        if(dfllEditor != null && dfllEditor instbndfof Sfriblizbblf) {
        if(dfllEditor != null && dfllEditor instbndfof Sfriblizbblf) {
        if(dfllEditor != null && dfllEditor instbndfof Sfriblizbblf) {
        if(dfllEditor != null && dfllEditor instbndfof Sfriblizbblf) {
            vblufs.bddElfmfnt("dfllEditor");
            vblufs.bddElfmfnt("dfllEditor");
            vblufs.bddElfmfnt("dfllEditor");
            vblufs.bddElfmfnt("dfllEditor");
            vblufs.bddElfmfnt("dfllEditor");
            vblufs.bddElfmfnt(dfllEditor);
            vblufs.bddElfmfnt(dfllEditor);
            vblufs.bddElfmfnt(dfllEditor);
            vblufs.bddElfmfnt(dfllEditor);
            vblufs.bddElfmfnt(dfllEditor);
        }
        }
        }
        }
        }
        // Sbvf tif trffModfl, if its Sfriblizbblf.
        // Sbvf tif trffModfl, if its Sfriblizbblf.
        // Sbvf tif trffModfl, if its Sfriblizbblf.
        // Sbvf tif trffModfl, if its Sfriblizbblf.
        // Sbvf tif trffModfl, if its Sfriblizbblf.
        if(trffModfl != null && trffModfl instbndfof Sfriblizbblf) {
        if(trffModfl != null && trffModfl instbndfof Sfriblizbblf) {
        if(trffModfl != null && trffModfl instbndfof Sfriblizbblf) {
        if(trffModfl != null && trffModfl instbndfof Sfriblizbblf) {
        if(trffModfl != null && trffModfl instbndfof Sfriblizbblf) {
            vblufs.bddElfmfnt("trffModfl");
            vblufs.bddElfmfnt("trffModfl");
            vblufs.bddElfmfnt("trffModfl");
            vblufs.bddElfmfnt("trffModfl");
            vblufs.bddElfmfnt("trffModfl");
            vblufs.bddElfmfnt(trffModfl);
            vblufs.bddElfmfnt(trffModfl);
            vblufs.bddElfmfnt(trffModfl);
            vblufs.bddElfmfnt(trffModfl);
            vblufs.bddElfmfnt(trffModfl);
        }
        }
        }
        }
        }
        // Sbvf tif sflfdtionModfl, if its Sfriblizbblf.
        // Sbvf tif sflfdtionModfl, if its Sfriblizbblf.
        // Sbvf tif sflfdtionModfl, if its Sfriblizbblf.
        // Sbvf tif sflfdtionModfl, if its Sfriblizbblf.
        // Sbvf tif sflfdtionModfl, if its Sfriblizbblf.
        if(sflfdtionModfl != null && sflfdtionModfl instbndfof Sfriblizbblf) {
        if(sflfdtionModfl != null && sflfdtionModfl instbndfof Sfriblizbblf) {
        if(sflfdtionModfl != null && sflfdtionModfl instbndfof Sfriblizbblf) {
        if(sflfdtionModfl != null && sflfdtionModfl instbndfof Sfriblizbblf) {
        if(sflfdtionModfl != null && sflfdtionModfl instbndfof Sfriblizbblf) {
            vblufs.bddElfmfnt("sflfdtionModfl");
            vblufs.bddElfmfnt("sflfdtionModfl");
            vblufs.bddElfmfnt("sflfdtionModfl");
            vblufs.bddElfmfnt("sflfdtionModfl");
            vblufs.bddElfmfnt("sflfdtionModfl");
            vblufs.bddElfmfnt(sflfdtionModfl);
            vblufs.bddElfmfnt(sflfdtionModfl);
            vblufs.bddElfmfnt(sflfdtionModfl);
            vblufs.bddElfmfnt(sflfdtionModfl);
            vblufs.bddElfmfnt(sflfdtionModfl);
        }
        }
        }
        }
        }





        Objfdt      fxpbndfdDbtb = gftArdiivbblfExpbndfdStbtf();
        Objfdt      fxpbndfdDbtb = gftArdiivbblfExpbndfdStbtf();
        Objfdt      fxpbndfdDbtb = gftArdiivbblfExpbndfdStbtf();
        Objfdt      fxpbndfdDbtb = gftArdiivbblfExpbndfdStbtf();
        Objfdt      fxpbndfdDbtb = gftArdiivbblfExpbndfdStbtf();





        if(fxpbndfdDbtb != null) {
        if(fxpbndfdDbtb != null) {
        if(fxpbndfdDbtb != null) {
        if(fxpbndfdDbtb != null) {
        if(fxpbndfdDbtb != null) {
            vblufs.bddElfmfnt("fxpbndfdStbtf");
            vblufs.bddElfmfnt("fxpbndfdStbtf");
            vblufs.bddElfmfnt("fxpbndfdStbtf");
            vblufs.bddElfmfnt("fxpbndfdStbtf");
            vblufs.bddElfmfnt("fxpbndfdStbtf");
            vblufs.bddElfmfnt(fxpbndfdDbtb);
            vblufs.bddElfmfnt(fxpbndfdDbtb);
            vblufs.bddElfmfnt(fxpbndfdDbtb);
            vblufs.bddElfmfnt(fxpbndfdDbtb);
            vblufs.bddElfmfnt(fxpbndfdDbtb);
        }
        }
        }
        }
        }





        s.writfObjfdt(vblufs);
        s.writfObjfdt(vblufs);
        s.writfObjfdt(vblufs);
        s.writfObjfdt(vblufs);
        s.writfObjfdt(vblufs);
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            bytf dount = JComponfnt.gftWritfObjCountfr(tiis);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            JComponfnt.sftWritfObjCountfr(tiis, --dount);
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
            if (dount == 0 && ui != null) {
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
                ui.instbllUI(tiis);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
        tirows IOExdfption, ClbssNotFoundExdfption {
        tirows IOExdfption, ClbssNotFoundExdfption {
        tirows IOExdfption, ClbssNotFoundExdfption {
        tirows IOExdfption, ClbssNotFoundExdfption {
        tirows IOExdfption, ClbssNotFoundExdfption {
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();
        s.dffbultRfbdObjfdt();





        // Crfbtf bn instbndf of fxpbndfd stbtf.
        // Crfbtf bn instbndf of fxpbndfd stbtf.
        // Crfbtf bn instbndf of fxpbndfd stbtf.
        // Crfbtf bn instbndf of fxpbndfd stbtf.
        // Crfbtf bn instbndf of fxpbndfd stbtf.





        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();
        fxpbndfdStbtf = nfw Hbsitbblf<TrffPbti, Boolfbn>();





        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();
        fxpbndfdStbdk = nfw Stbdk<Stbdk<TrffPbti>>();





        Vfdtor<?>          vblufs = (Vfdtor)s.rfbdObjfdt();
        Vfdtor<?>          vblufs = (Vfdtor)s.rfbdObjfdt();
        Vfdtor<?>          vblufs = (Vfdtor)s.rfbdObjfdt();
        Vfdtor<?>          vblufs = (Vfdtor)s.rfbdObjfdt();
        Vfdtor<?>          vblufs = (Vfdtor)s.rfbdObjfdt();
        int             indfxCountfr = 0;
        int             indfxCountfr = 0;
        int             indfxCountfr = 0;
        int             indfxCountfr = 0;
        int             indfxCountfr = 0;
        int             mbxCountfr = vblufs.sizf();
        int             mbxCountfr = vblufs.sizf();
        int             mbxCountfr = vblufs.sizf();
        int             mbxCountfr = vblufs.sizf();
        int             mbxCountfr = vblufs.sizf();





        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
           fqubls("dfllRfndfrfr")) {
           fqubls("dfllRfndfrfr")) {
           fqubls("dfllRfndfrfr")) {
           fqubls("dfllRfndfrfr")) {
           fqubls("dfllRfndfrfr")) {
            dfllRfndfrfr = (TrffCfllRfndfrfr)vblufs.flfmfntAt(++indfxCountfr);
            dfllRfndfrfr = (TrffCfllRfndfrfr)vblufs.flfmfntAt(++indfxCountfr);
            dfllRfndfrfr = (TrffCfllRfndfrfr)vblufs.flfmfntAt(++indfxCountfr);
            dfllRfndfrfr = (TrffCfllRfndfrfr)vblufs.flfmfntAt(++indfxCountfr);
            dfllRfndfrfr = (TrffCfllRfndfrfr)vblufs.flfmfntAt(++indfxCountfr);
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
        }
        }
        }
        }
        }
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
           fqubls("dfllEditor")) {
           fqubls("dfllEditor")) {
           fqubls("dfllEditor")) {
           fqubls("dfllEditor")) {
           fqubls("dfllEditor")) {
            dfllEditor = (TrffCfllEditor)vblufs.flfmfntAt(++indfxCountfr);
            dfllEditor = (TrffCfllEditor)vblufs.flfmfntAt(++indfxCountfr);
            dfllEditor = (TrffCfllEditor)vblufs.flfmfntAt(++indfxCountfr);
            dfllEditor = (TrffCfllEditor)vblufs.flfmfntAt(++indfxCountfr);
            dfllEditor = (TrffCfllEditor)vblufs.flfmfntAt(++indfxCountfr);
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
        }
        }
        }
        }
        }
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
           fqubls("trffModfl")) {
           fqubls("trffModfl")) {
           fqubls("trffModfl")) {
           fqubls("trffModfl")) {
           fqubls("trffModfl")) {
            trffModfl = (TrffModfl)vblufs.flfmfntAt(++indfxCountfr);
            trffModfl = (TrffModfl)vblufs.flfmfntAt(++indfxCountfr);
            trffModfl = (TrffModfl)vblufs.flfmfntAt(++indfxCountfr);
            trffModfl = (TrffModfl)vblufs.flfmfntAt(++indfxCountfr);
            trffModfl = (TrffModfl)vblufs.flfmfntAt(++indfxCountfr);
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
        }
        }
        }
        }
        }
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
           fqubls("sflfdtionModfl")) {
           fqubls("sflfdtionModfl")) {
           fqubls("sflfdtionModfl")) {
           fqubls("sflfdtionModfl")) {
           fqubls("sflfdtionModfl")) {
            sflfdtionModfl = (TrffSflfdtionModfl)vblufs.flfmfntAt(++indfxCountfr);
            sflfdtionModfl = (TrffSflfdtionModfl)vblufs.flfmfntAt(++indfxCountfr);
            sflfdtionModfl = (TrffSflfdtionModfl)vblufs.flfmfntAt(++indfxCountfr);
            sflfdtionModfl = (TrffSflfdtionModfl)vblufs.flfmfntAt(++indfxCountfr);
            sflfdtionModfl = (TrffSflfdtionModfl)vblufs.flfmfntAt(++indfxCountfr);
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
        }
        }
        }
        }
        }
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
        if(indfxCountfr < mbxCountfr && vblufs.flfmfntAt(indfxCountfr).
           fqubls("fxpbndfdStbtf")) {
           fqubls("fxpbndfdStbtf")) {
           fqubls("fxpbndfdStbtf")) {
           fqubls("fxpbndfdStbtf")) {
           fqubls("fxpbndfdStbtf")) {
            unbrdiivfExpbndfdStbtf(vblufs.flfmfntAt(++indfxCountfr));
            unbrdiivfExpbndfdStbtf(vblufs.flfmfntAt(++indfxCountfr));
            unbrdiivfExpbndfdStbtf(vblufs.flfmfntAt(++indfxCountfr));
            unbrdiivfExpbndfdStbtf(vblufs.flfmfntAt(++indfxCountfr));
            unbrdiivfExpbndfdStbtf(vblufs.flfmfntAt(++indfxCountfr));
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
            indfxCountfr++;
        }
        }
        }
        }
        }
        // Rfinstbll tif rfdirfdtor.
        // Rfinstbll tif rfdirfdtor.
        // Rfinstbll tif rfdirfdtor.
        // Rfinstbll tif rfdirfdtor.
        // Rfinstbll tif rfdirfdtor.
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0) {
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0) {
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0) {
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0) {
        if(listfnfrList.gftListfnfrCount(TrffSflfdtionListfnfr.dlbss) != 0) {
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionRfdirfdtor = nfw TrffSflfdtionRfdirfdtor();
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
            sflfdtionModfl.bddTrffSflfdtionListfnfr(sflfdtionRfdirfdtor);
        }
        }
        }
        }
        }
        // Listfnfr to TrffModfl.
        // Listfnfr to TrffModfl.
        // Listfnfr to TrffModfl.
        // Listfnfr to TrffModfl.
        // Listfnfr to TrffModfl.
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
        if(trffModfl != null) {
            trffModflListfnfr = drfbtfTrffModflListfnfr();
            trffModflListfnfr = drfbtfTrffModflListfnfr();
            trffModflListfnfr = drfbtfTrffModflListfnfr();
            trffModflListfnfr = drfbtfTrffModflListfnfr();
            trffModflListfnfr = drfbtfTrffModflListfnfr();
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
            if(trffModflListfnfr != null)
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
                trffModfl.bddTrffModflListfnfr(trffModflListfnfr);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn objfdt tibt dbn bf brdiivfd indidbting wibt nodfs brf
     * Rfturns bn objfdt tibt dbn bf brdiivfd indidbting wibt nodfs brf
     * Rfturns bn objfdt tibt dbn bf brdiivfd indidbting wibt nodfs brf
     * Rfturns bn objfdt tibt dbn bf brdiivfd indidbting wibt nodfs brf
     * Rfturns bn objfdt tibt dbn bf brdiivfd indidbting wibt nodfs brf
     * fxpbndfd bnd wibt brfn't. Tif objfdts from tif modfl brf NOT
     * fxpbndfd bnd wibt brfn't. Tif objfdts from tif modfl brf NOT
     * fxpbndfd bnd wibt brfn't. Tif objfdts from tif modfl brf NOT
     * fxpbndfd bnd wibt brfn't. Tif objfdts from tif modfl brf NOT
     * fxpbndfd bnd wibt brfn't. Tif objfdts from tif modfl brf NOT
     * writtfn out.
     * writtfn out.
     * writtfn out.
     * writtfn out.
     * writtfn out.
     */
     */
     */
     */
     */
    privbtf Objfdt gftArdiivbblfExpbndfdStbtf() {
    privbtf Objfdt gftArdiivbblfExpbndfdStbtf() {
    privbtf Objfdt gftArdiivbblfExpbndfdStbtf() {
    privbtf Objfdt gftArdiivbblfExpbndfdStbtf() {
    privbtf Objfdt gftArdiivbblfExpbndfdStbtf() {
        TrffModfl       modfl = gftModfl();
        TrffModfl       modfl = gftModfl();
        TrffModfl       modfl = gftModfl();
        TrffModfl       modfl = gftModfl();
        TrffModfl       modfl = gftModfl();





        if(modfl != null) {
        if(modfl != null) {
        if(modfl != null) {
        if(modfl != null) {
        if(modfl != null) {
            Enumfrbtion<TrffPbti> pbtis = fxpbndfdStbtf.kfys();
            Enumfrbtion<TrffPbti> pbtis = fxpbndfdStbtf.kfys();
            Enumfrbtion<TrffPbti> pbtis = fxpbndfdStbtf.kfys();
            Enumfrbtion<TrffPbti> pbtis = fxpbndfdStbtf.kfys();
            Enumfrbtion<TrffPbti> pbtis = fxpbndfdStbtf.kfys();





            if(pbtis != null) {
            if(pbtis != null) {
            if(pbtis != null) {
            if(pbtis != null) {
            if(pbtis != null) {
                Vfdtor<Objfdt> stbtf = nfw Vfdtor<Objfdt>();
                Vfdtor<Objfdt> stbtf = nfw Vfdtor<Objfdt>();
                Vfdtor<Objfdt> stbtf = nfw Vfdtor<Objfdt>();
                Vfdtor<Objfdt> stbtf = nfw Vfdtor<Objfdt>();
                Vfdtor<Objfdt> stbtf = nfw Vfdtor<Objfdt>();





                wiilf(pbtis.ibsMorfElfmfnts()) {
                wiilf(pbtis.ibsMorfElfmfnts()) {
                wiilf(pbtis.ibsMorfElfmfnts()) {
                wiilf(pbtis.ibsMorfElfmfnts()) {
                wiilf(pbtis.ibsMorfElfmfnts()) {
                    TrffPbti pbti = pbtis.nfxtElfmfnt();
                    TrffPbti pbti = pbtis.nfxtElfmfnt();
                    TrffPbti pbti = pbtis.nfxtElfmfnt();
                    TrffPbti pbti = pbtis.nfxtElfmfnt();
                    TrffPbti pbti = pbtis.nfxtElfmfnt();
                    Objfdt     brdiivfPbti;
                    Objfdt     brdiivfPbti;
                    Objfdt     brdiivfPbti;
                    Objfdt     brdiivfPbti;
                    Objfdt     brdiivfPbti;





                    try {
                    try {
                    try {
                    try {
                    try {
                        brdiivfPbti = gftModflIndfxsForPbti(pbti);
                        brdiivfPbti = gftModflIndfxsForPbti(pbti);
                        brdiivfPbti = gftModflIndfxsForPbti(pbti);
                        brdiivfPbti = gftModflIndfxsForPbti(pbti);
                        brdiivfPbti = gftModflIndfxsForPbti(pbti);
                    } dbtdi (Error frror) {
                    } dbtdi (Error frror) {
                    } dbtdi (Error frror) {
                    } dbtdi (Error frror) {
                    } dbtdi (Error frror) {
                        brdiivfPbti = null;
                        brdiivfPbti = null;
                        brdiivfPbti = null;
                        brdiivfPbti = null;
                        brdiivfPbti = null;
                    }
                    }
                    }
                    }
                    }
                    if(brdiivfPbti != null) {
                    if(brdiivfPbti != null) {
                    if(brdiivfPbti != null) {
                    if(brdiivfPbti != null) {
                    if(brdiivfPbti != null) {
                        stbtf.bddElfmfnt(brdiivfPbti);
                        stbtf.bddElfmfnt(brdiivfPbti);
                        stbtf.bddElfmfnt(brdiivfPbti);
                        stbtf.bddElfmfnt(brdiivfPbti);
                        stbtf.bddElfmfnt(brdiivfPbti);
                        stbtf.bddElfmfnt(fxpbndfdStbtf.gft(pbti));
                        stbtf.bddElfmfnt(fxpbndfdStbtf.gft(pbti));
                        stbtf.bddElfmfnt(fxpbndfdStbtf.gft(pbti));
                        stbtf.bddElfmfnt(fxpbndfdStbtf.gft(pbti));
                        stbtf.bddElfmfnt(fxpbndfdStbtf.gft(pbti));
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn stbtf;
                rfturn stbtf;
                rfturn stbtf;
                rfturn stbtf;
                rfturn stbtf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Updbtfs tif fxpbndfd stbtf of nodfs in tif trff bbsfd on tif
     * Updbtfs tif fxpbndfd stbtf of nodfs in tif trff bbsfd on tif
     * Updbtfs tif fxpbndfd stbtf of nodfs in tif trff bbsfd on tif
     * Updbtfs tif fxpbndfd stbtf of nodfs in tif trff bbsfd on tif
     * Updbtfs tif fxpbndfd stbtf of nodfs in tif trff bbsfd on tif
     * prfviously brdiivfd stbtf <dodf>stbtf</dodf>.
     * prfviously brdiivfd stbtf <dodf>stbtf</dodf>.
     * prfviously brdiivfd stbtf <dodf>stbtf</dodf>.
     * prfviously brdiivfd stbtf <dodf>stbtf</dodf>.
     * prfviously brdiivfd stbtf <dodf>stbtf</dodf>.
     */
     */
     */
     */
     */
    privbtf void unbrdiivfExpbndfdStbtf(Objfdt stbtf) {
    privbtf void unbrdiivfExpbndfdStbtf(Objfdt stbtf) {
    privbtf void unbrdiivfExpbndfdStbtf(Objfdt stbtf) {
    privbtf void unbrdiivfExpbndfdStbtf(Objfdt stbtf) {
    privbtf void unbrdiivfExpbndfdStbtf(Objfdt stbtf) {
        if(stbtf instbndfof Vfdtor) {
        if(stbtf instbndfof Vfdtor) {
        if(stbtf instbndfof Vfdtor) {
        if(stbtf instbndfof Vfdtor) {
        if(stbtf instbndfof Vfdtor) {
            Vfdtor<?>          pbtis = (Vfdtor)stbtf;
            Vfdtor<?>          pbtis = (Vfdtor)stbtf;
            Vfdtor<?>          pbtis = (Vfdtor)stbtf;
            Vfdtor<?>          pbtis = (Vfdtor)stbtf;
            Vfdtor<?>          pbtis = (Vfdtor)stbtf;





            for(int dountfr = pbtis.sizf() - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = pbtis.sizf() - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = pbtis.sizf() - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = pbtis.sizf() - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = pbtis.sizf() - 1; dountfr >= 0; dountfr--) {
                Boolfbn        fStbtf = (Boolfbn)pbtis.flfmfntAt(dountfr--);
                Boolfbn        fStbtf = (Boolfbn)pbtis.flfmfntAt(dountfr--);
                Boolfbn        fStbtf = (Boolfbn)pbtis.flfmfntAt(dountfr--);
                Boolfbn        fStbtf = (Boolfbn)pbtis.flfmfntAt(dountfr--);
                Boolfbn        fStbtf = (Boolfbn)pbtis.flfmfntAt(dountfr--);
                TrffPbti       pbti;
                TrffPbti       pbti;
                TrffPbti       pbti;
                TrffPbti       pbti;
                TrffPbti       pbti;





                try {
                try {
                try {
                try {
                try {
                    pbti = gftPbtiForIndfxs((int[])pbtis.flfmfntAt(dountfr));
                    pbti = gftPbtiForIndfxs((int[])pbtis.flfmfntAt(dountfr));
                    pbti = gftPbtiForIndfxs((int[])pbtis.flfmfntAt(dountfr));
                    pbti = gftPbtiForIndfxs((int[])pbtis.flfmfntAt(dountfr));
                    pbti = gftPbtiForIndfxs((int[])pbtis.flfmfntAt(dountfr));
                    if(pbti != null)
                    if(pbti != null)
                    if(pbti != null)
                    if(pbti != null)
                    if(pbti != null)
                        fxpbndfdStbtf.put(pbti, fStbtf);
                        fxpbndfdStbtf.put(pbti, fStbtf);
                        fxpbndfdStbtf.put(pbti, fStbtf);
                        fxpbndfdStbtf.put(pbti, fStbtf);
                        fxpbndfdStbtf.put(pbti, fStbtf);
                } dbtdi (Error frror) {}
                } dbtdi (Error frror) {}
                } dbtdi (Error frror) {}
                } dbtdi (Error frror) {}
                } dbtdi (Error frror) {}
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn brrby of intfgfrs spfdifying tif indfxs of tif
     * Rfturns bn brrby of intfgfrs spfdifying tif indfxs of tif
     * Rfturns bn brrby of intfgfrs spfdifying tif indfxs of tif
     * Rfturns bn brrby of intfgfrs spfdifying tif indfxs of tif
     * Rfturns bn brrby of intfgfrs spfdifying tif indfxs of tif
     * domponfnts in tif <dodf>pbti</dodf>. If <dodf>pbti</dodf> is
     * domponfnts in tif <dodf>pbti</dodf>. If <dodf>pbti</dodf> is
     * domponfnts in tif <dodf>pbti</dodf>. If <dodf>pbti</dodf> is
     * domponfnts in tif <dodf>pbti</dodf>. If <dodf>pbti</dodf> is
     * domponfnts in tif <dodf>pbti</dodf>. If <dodf>pbti</dodf> is
     * tif root, tiis will rfturn bn fmpty brrby.  If <dodf>pbti</dodf>
     * tif root, tiis will rfturn bn fmpty brrby.  If <dodf>pbti</dodf>
     * tif root, tiis will rfturn bn fmpty brrby.  If <dodf>pbti</dodf>
     * tif root, tiis will rfturn bn fmpty brrby.  If <dodf>pbti</dodf>
     * tif root, tiis will rfturn bn fmpty brrby.  If <dodf>pbti</dodf>
     * is <dodf>null</dodf>, <dodf>null</dodf> will bf rfturnfd.
     * is <dodf>null</dodf>, <dodf>null</dodf> will bf rfturnfd.
     * is <dodf>null</dodf>, <dodf>null</dodf> will bf rfturnfd.
     * is <dodf>null</dodf>, <dodf>null</dodf> will bf rfturnfd.
     * is <dodf>null</dodf>, <dodf>null</dodf> will bf rfturnfd.
     */
     */
     */
     */
     */
    privbtf int[] gftModflIndfxsForPbti(TrffPbti pbti) {
    privbtf int[] gftModflIndfxsForPbti(TrffPbti pbti) {
    privbtf int[] gftModflIndfxsForPbti(TrffPbti pbti) {
    privbtf int[] gftModflIndfxsForPbti(TrffPbti pbti) {
    privbtf int[] gftModflIndfxsForPbti(TrffPbti pbti) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
            TrffModfl   modfl = gftModfl();
            TrffModfl   modfl = gftModfl();
            TrffModfl   modfl = gftModfl();
            TrffModfl   modfl = gftModfl();
            TrffModfl   modfl = gftModfl();
            int         dount = pbti.gftPbtiCount();
            int         dount = pbti.gftPbtiCount();
            int         dount = pbti.gftPbtiCount();
            int         dount = pbti.gftPbtiCount();
            int         dount = pbti.gftPbtiCount();
            int[]       indfxs = nfw int[dount - 1];
            int[]       indfxs = nfw int[dount - 1];
            int[]       indfxs = nfw int[dount - 1];
            int[]       indfxs = nfw int[dount - 1];
            int[]       indfxs = nfw int[dount - 1];
            Objfdt      pbrfnt = modfl.gftRoot();
            Objfdt      pbrfnt = modfl.gftRoot();
            Objfdt      pbrfnt = modfl.gftRoot();
            Objfdt      pbrfnt = modfl.gftRoot();
            Objfdt      pbrfnt = modfl.gftRoot();





            for(int dountfr = 1; dountfr < dount; dountfr++) {
            for(int dountfr = 1; dountfr < dount; dountfr++) {
            for(int dountfr = 1; dountfr < dount; dountfr++) {
            for(int dountfr = 1; dountfr < dount; dountfr++) {
            for(int dountfr = 1; dountfr < dount; dountfr++) {
                indfxs[dountfr - 1] = modfl.gftIndfxOfCiild
                indfxs[dountfr - 1] = modfl.gftIndfxOfCiild
                indfxs[dountfr - 1] = modfl.gftIndfxOfCiild
                indfxs[dountfr - 1] = modfl.gftIndfxOfCiild
                indfxs[dountfr - 1] = modfl.gftIndfxOfCiild
                                   (pbrfnt, pbti.gftPbtiComponfnt(dountfr));
                                   (pbrfnt, pbti.gftPbtiComponfnt(dountfr));
                                   (pbrfnt, pbti.gftPbtiComponfnt(dountfr));
                                   (pbrfnt, pbti.gftPbtiComponfnt(dountfr));
                                   (pbrfnt, pbti.gftPbtiComponfnt(dountfr));
                pbrfnt = pbti.gftPbtiComponfnt(dountfr);
                pbrfnt = pbti.gftPbtiComponfnt(dountfr);
                pbrfnt = pbti.gftPbtiComponfnt(dountfr);
                pbrfnt = pbti.gftPbtiComponfnt(dountfr);
                pbrfnt = pbti.gftPbtiComponfnt(dountfr);
                if(indfxs[dountfr - 1] < 0)
                if(indfxs[dountfr - 1] < 0)
                if(indfxs[dountfr - 1] < 0)
                if(indfxs[dountfr - 1] < 0)
                if(indfxs[dountfr - 1] < 0)
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
            }
            }
            }
            }
            }
            rfturn indfxs;
            rfturn indfxs;
            rfturn indfxs;
            rfturn indfxs;
            rfturn indfxs;
        }
        }
        }
        }
        }
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns b <dodf>TrffPbti</dodf> drfbtfd by obtbining tif diildrfn
     * Rfturns b <dodf>TrffPbti</dodf> drfbtfd by obtbining tif diildrfn
     * Rfturns b <dodf>TrffPbti</dodf> drfbtfd by obtbining tif diildrfn
     * Rfturns b <dodf>TrffPbti</dodf> drfbtfd by obtbining tif diildrfn
     * Rfturns b <dodf>TrffPbti</dodf> drfbtfd by obtbining tif diildrfn
     * for fbdi of tif indidfs in <dodf>indfxs</dodf>. If <dodf>indfxs</dodf>
     * for fbdi of tif indidfs in <dodf>indfxs</dodf>. If <dodf>indfxs</dodf>
     * for fbdi of tif indidfs in <dodf>indfxs</dodf>. If <dodf>indfxs</dodf>
     * for fbdi of tif indidfs in <dodf>indfxs</dodf>. If <dodf>indfxs</dodf>
     * for fbdi of tif indidfs in <dodf>indfxs</dodf>. If <dodf>indfxs</dodf>
     * or tif <dodf>TrffModfl</dodf> is <dodf>null</dodf>, it will rfturn
     * or tif <dodf>TrffModfl</dodf> is <dodf>null</dodf>, it will rfturn
     * or tif <dodf>TrffModfl</dodf> is <dodf>null</dodf>, it will rfturn
     * or tif <dodf>TrffModfl</dodf> is <dodf>null</dodf>, it will rfturn
     * or tif <dodf>TrffModfl</dodf> is <dodf>null</dodf>, it will rfturn
     * <dodf>null</dodf>.
     * <dodf>null</dodf>.
     * <dodf>null</dodf>.
     * <dodf>null</dodf>.
     * <dodf>null</dodf>.
     */
     */
     */
     */
     */
    privbtf TrffPbti gftPbtiForIndfxs(int[] indfxs) {
    privbtf TrffPbti gftPbtiForIndfxs(int[] indfxs) {
    privbtf TrffPbti gftPbtiForIndfxs(int[] indfxs) {
    privbtf TrffPbti gftPbtiForIndfxs(int[] indfxs) {
    privbtf TrffPbti gftPbtiForIndfxs(int[] indfxs) {
        if(indfxs == null)
        if(indfxs == null)
        if(indfxs == null)
        if(indfxs == null)
        if(indfxs == null)
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;





        TrffModfl    modfl = gftModfl();
        TrffModfl    modfl = gftModfl();
        TrffModfl    modfl = gftModfl();
        TrffModfl    modfl = gftModfl();
        TrffModfl    modfl = gftModfl();





        if(modfl == null)
        if(modfl == null)
        if(modfl == null)
        if(modfl == null)
        if(modfl == null)
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;





        int          dount = indfxs.lfngti;
        int          dount = indfxs.lfngti;
        int          dount = indfxs.lfngti;
        int          dount = indfxs.lfngti;
        int          dount = indfxs.lfngti;
        Objfdt       pbrfnt = modfl.gftRoot();
        Objfdt       pbrfnt = modfl.gftRoot();
        Objfdt       pbrfnt = modfl.gftRoot();
        Objfdt       pbrfnt = modfl.gftRoot();
        Objfdt       pbrfnt = modfl.gftRoot();
        TrffPbti     pbrfntPbti = nfw TrffPbti(pbrfnt);
        TrffPbti     pbrfntPbti = nfw TrffPbti(pbrfnt);
        TrffPbti     pbrfntPbti = nfw TrffPbti(pbrfnt);
        TrffPbti     pbrfntPbti = nfw TrffPbti(pbrfnt);
        TrffPbti     pbrfntPbti = nfw TrffPbti(pbrfnt);





        for(int dountfr = 0; dountfr < dount; dountfr++) {
        for(int dountfr = 0; dountfr < dount; dountfr++) {
        for(int dountfr = 0; dountfr < dount; dountfr++) {
        for(int dountfr = 0; dountfr < dount; dountfr++) {
        for(int dountfr = 0; dountfr < dount; dountfr++) {
            pbrfnt = modfl.gftCiild(pbrfnt, indfxs[dountfr]);
            pbrfnt = modfl.gftCiild(pbrfnt, indfxs[dountfr]);
            pbrfnt = modfl.gftCiild(pbrfnt, indfxs[dountfr]);
            pbrfnt = modfl.gftCiild(pbrfnt, indfxs[dountfr]);
            pbrfnt = modfl.gftCiild(pbrfnt, indfxs[dountfr]);
            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            pbrfntPbti = pbrfntPbti.pbtiByAddingCiild(pbrfnt);
            pbrfntPbti = pbrfntPbti.pbtiByAddingCiild(pbrfnt);
            pbrfntPbti = pbrfntPbti.pbtiByAddingCiild(pbrfnt);
            pbrfntPbti = pbrfntPbti.pbtiByAddingCiild(pbrfnt);
            pbrfntPbti = pbrfntPbti.pbtiByAddingCiild(pbrfnt);
        }
        }
        }
        }
        }
        rfturn pbrfntPbti;
        rfturn pbrfntPbti;
        rfturn pbrfntPbti;
        rfturn pbrfntPbti;
        rfturn pbrfntPbti;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * <dodf>EmptySflfdtionModfl</dodf> is b <dodf>TrffSflfdtionModfl</dodf>
     * <dodf>EmptySflfdtionModfl</dodf> is b <dodf>TrffSflfdtionModfl</dodf>
     * <dodf>EmptySflfdtionModfl</dodf> is b <dodf>TrffSflfdtionModfl</dodf>
     * <dodf>EmptySflfdtionModfl</dodf> is b <dodf>TrffSflfdtionModfl</dodf>
     * <dodf>EmptySflfdtionModfl</dodf> is b <dodf>TrffSflfdtionModfl</dodf>
     * tibt dofs not bllow bnytiing to bf sflfdtfd.
     * tibt dofs not bllow bnytiing to bf sflfdtfd.
     * tibt dofs not bllow bnytiing to bf sflfdtfd.
     * tibt dofs not bllow bnytiing to bf sflfdtfd.
     * tibt dofs not bllow bnytiing to bf sflfdtfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
     */
     */
     */
     */
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    protfdtfd stbtid dlbss EmptySflfdtionModfl fxtfnds
    protfdtfd stbtid dlbss EmptySflfdtionModfl fxtfnds
    protfdtfd stbtid dlbss EmptySflfdtionModfl fxtfnds
    protfdtfd stbtid dlbss EmptySflfdtionModfl fxtfnds
    protfdtfd stbtid dlbss EmptySflfdtionModfl fxtfnds
              DffbultTrffSflfdtionModfl
              DffbultTrffSflfdtionModfl
              DffbultTrffSflfdtionModfl
              DffbultTrffSflfdtionModfl
              DffbultTrffSflfdtionModfl
    {
    {
    {
    {
    {
        /**
        /**
        /**
        /**
        /**
         * Tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         */
         */
         */
         */
         */
        protfdtfd stbtid finbl EmptySflfdtionModfl sibrfdInstbndf =
        protfdtfd stbtid finbl EmptySflfdtionModfl sibrfdInstbndf =
        protfdtfd stbtid finbl EmptySflfdtionModfl sibrfdInstbndf =
        protfdtfd stbtid finbl EmptySflfdtionModfl sibrfdInstbndf =
        protfdtfd stbtid finbl EmptySflfdtionModfl sibrfdInstbndf =
            nfw EmptySflfdtionModfl();
            nfw EmptySflfdtionModfl();
            nfw EmptySflfdtionModfl();
            nfw EmptySflfdtionModfl();
            nfw EmptySflfdtionModfl();





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Rfturns tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Rfturns tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Rfturns tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         * Rfturns tif singlf instbndf of {@dodf EmptySflfdtionModfl}.
         *
         *
         *
         *
         *
         * @rfturn singlf instbndf of {@dodf EmptySflfdtionModfl}
         * @rfturn singlf instbndf of {@dodf EmptySflfdtionModfl}
         * @rfturn singlf instbndf of {@dodf EmptySflfdtionModfl}
         * @rfturn singlf instbndf of {@dodf EmptySflfdtionModfl}
         * @rfturn singlf instbndf of {@dodf EmptySflfdtionModfl}
         */
         */
         */
         */
         */
        stbtid publid EmptySflfdtionModfl sibrfdInstbndf() {
        stbtid publid EmptySflfdtionModfl sibrfdInstbndf() {
        stbtid publid EmptySflfdtionModfl sibrfdInstbndf() {
        stbtid publid EmptySflfdtionModfl sibrfdInstbndf() {
        stbtid publid EmptySflfdtionModfl sibrfdInstbndf() {
            rfturn sibrfdInstbndf;
            rfturn sibrfdInstbndf;
            rfturn sibrfdInstbndf;
            rfturn sibrfdInstbndf;
            rfturn sibrfdInstbndf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm pbtis tif pbtis to sflfdt; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to sflfdt; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to sflfdt; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to sflfdt; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to sflfdt; tiis is ignorfd
         */
         */
         */
         */
         */
        publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void sftSflfdtionPbtis(TrffPbti[] pbtis) {}





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm pbtis tif pbtis to bdd to tif sflfdtion; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to bdd to tif sflfdtion; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to bdd to tif sflfdtion; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to bdd to tif sflfdtion; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to bdd to tif sflfdtion; tiis is ignorfd
         */
         */
         */
         */
         */
        publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void bddSflfdtionPbtis(TrffPbti[] pbtis) {}





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm pbtis tif pbtis to rfmovf; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to rfmovf; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to rfmovf; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to rfmovf; tiis is ignorfd
         * @pbrbm pbtis tif pbtis to rfmovf; tiis is ignorfd
         */
         */
         */
         */
         */
        publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {}
        publid void rfmovfSflfdtionPbtis(TrffPbti[] pbtis) {}





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm modf tif sflfdtion modf; tiis is ignorfd
         * @pbrbm modf tif sflfdtion modf; tiis is ignorfd
         * @pbrbm modf tif sflfdtion modf; tiis is ignorfd
         * @pbrbm modf tif sflfdtion modf; tiis is ignorfd
         * @pbrbm modf tif sflfdtion modf; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void sftSflfdtionModf(int modf) {
        publid void sftSflfdtionModf(int modf) {
        publid void sftSflfdtionModf(int modf) {
        publid void sftSflfdtionModf(int modf) {
        publid void sftSflfdtionModf(int modf) {
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm mbppfr tif {@dodf RowMbppfr} instbndf; tiis is ignorfd
         * @pbrbm mbppfr tif {@dodf RowMbppfr} instbndf; tiis is ignorfd
         * @pbrbm mbppfr tif {@dodf RowMbppfr} instbndf; tiis is ignorfd
         * @pbrbm mbppfr tif {@dodf RowMbppfr} instbndf; tiis is ignorfd
         * @pbrbm mbppfr tif {@dodf RowMbppfr} instbndf; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void sftRowMbppfr(RowMbppfr mbppfr) {
        publid void sftRowMbppfr(RowMbppfr mbppfr) {
        publid void sftRowMbppfr(RowMbppfr mbppfr) {
        publid void sftRowMbppfr(RowMbppfr mbppfr) {
        publid void sftRowMbppfr(RowMbppfr mbppfr) {
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr listfnfr) {
        publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr listfnfr) {
        publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr listfnfr) {
        publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr listfnfr) {
        publid void bddTrffSflfdtionListfnfr(TrffSflfdtionListfnfr listfnfr) {
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void rfmovfTrffSflfdtionListfnfr(
        publid void rfmovfTrffSflfdtionListfnfr(
        publid void rfmovfTrffSflfdtionListfnfr(
        publid void rfmovfTrffSflfdtionListfnfr(
        publid void rfmovfTrffSflfdtionListfnfr(
                TrffSflfdtionListfnfr listfnfr) {
                TrffSflfdtionListfnfr listfnfr) {
                TrffSflfdtionListfnfr listfnfr) {
                TrffSflfdtionListfnfr listfnfr) {
                TrffSflfdtionListfnfr listfnfr) {
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to bdd; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void bddPropfrtyCibngfListfnfr(
        publid void bddPropfrtyCibngfListfnfr(
        publid void bddPropfrtyCibngfListfnfr(
        publid void bddPropfrtyCibngfListfnfr(
        publid void bddPropfrtyCibngfListfnfr(
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * Tiis is ovfrridfn to do notiing; {@dodf EmptySflfdtionModfl}
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         * dofs not bllow b sflfdtion.
         *
         *
         *
         *
         *
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @pbrbm listfnfr tif listfnfr to rfmovf; tiis is ignorfd
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         * @sindf 1.7
         */
         */
         */
         */
         */
        publid void rfmovfPropfrtyCibngfListfnfr(
        publid void rfmovfPropfrtyCibngfListfnfr(
        publid void rfmovfPropfrtyCibngfListfnfr(
        publid void rfmovfPropfrtyCibngfListfnfr(
        publid void rfmovfPropfrtyCibngfListfnfr(
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
                                PropfrtyCibngfListfnfr listfnfr) {
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Hbndlfs drfbting b nfw <dodf>TrffSflfdtionEvfnt</dodf> witi tif
     * Hbndlfs drfbting b nfw <dodf>TrffSflfdtionEvfnt</dodf> witi tif
     * Hbndlfs drfbting b nfw <dodf>TrffSflfdtionEvfnt</dodf> witi tif
     * Hbndlfs drfbting b nfw <dodf>TrffSflfdtionEvfnt</dodf> witi tif
     * Hbndlfs drfbting b nfw <dodf>TrffSflfdtionEvfnt</dodf> witi tif
     * <dodf>JTrff</dodf> bs tif
     * <dodf>JTrff</dodf> bs tif
     * <dodf>JTrff</dodf> bs tif
     * <dodf>JTrff</dodf> bs tif
     * <dodf>JTrff</dodf> bs tif
     * sourdf bnd pbssing it off to bll tif listfnfrs.
     * sourdf bnd pbssing it off to bll tif listfnfrs.
     * sourdf bnd pbssing it off to bll tif listfnfrs.
     * sourdf bnd pbssing it off to bll tif listfnfrs.
     * sourdf bnd pbssing it off to bll tif listfnfrs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
     */
     */
     */
     */
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    protfdtfd dlbss TrffSflfdtionRfdirfdtor implfmfnts Sfriblizbblf,
    protfdtfd dlbss TrffSflfdtionRfdirfdtor implfmfnts Sfriblizbblf,
    protfdtfd dlbss TrffSflfdtionRfdirfdtor implfmfnts Sfriblizbblf,
    protfdtfd dlbss TrffSflfdtionRfdirfdtor implfmfnts Sfriblizbblf,
    protfdtfd dlbss TrffSflfdtionRfdirfdtor implfmfnts Sfriblizbblf,
                    TrffSflfdtionListfnfr
                    TrffSflfdtionListfnfr
                    TrffSflfdtionListfnfr
                    TrffSflfdtionListfnfr
                    TrffSflfdtionListfnfr
    {
    {
    {
    {
    {
        /**
        /**
        /**
        /**
        /**
         * Invokfd by tif <dodf>TrffSflfdtionModfl</dodf> wifn tif
         * Invokfd by tif <dodf>TrffSflfdtionModfl</dodf> wifn tif
         * Invokfd by tif <dodf>TrffSflfdtionModfl</dodf> wifn tif
         * Invokfd by tif <dodf>TrffSflfdtionModfl</dodf> wifn tif
         * Invokfd by tif <dodf>TrffSflfdtionModfl</dodf> wifn tif
         * sflfdtion dibngfs.
         * sflfdtion dibngfs.
         * sflfdtion dibngfs.
         * sflfdtion dibngfs.
         * sflfdtion dibngfs.
         *
         *
         *
         *
         *
         * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> gfnfrbtfd by tif
         * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> gfnfrbtfd by tif
         * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> gfnfrbtfd by tif
         * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> gfnfrbtfd by tif
         * @pbrbm f tif <dodf>TrffSflfdtionEvfnt</dodf> gfnfrbtfd by tif
         *              <dodf>TrffSflfdtionModfl</dodf>
         *              <dodf>TrffSflfdtionModfl</dodf>
         *              <dodf>TrffSflfdtionModfl</dodf>
         *              <dodf>TrffSflfdtionModfl</dodf>
         *              <dodf>TrffSflfdtionModfl</dodf>
         */
         */
         */
         */
         */
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
            TrffSflfdtionEvfnt       nfwE;
            TrffSflfdtionEvfnt       nfwE;
            TrffSflfdtionEvfnt       nfwE;
            TrffSflfdtionEvfnt       nfwE;
            TrffSflfdtionEvfnt       nfwE;





            nfwE = (TrffSflfdtionEvfnt)f.dlonfWitiSourdf(JTrff.tiis);
            nfwE = (TrffSflfdtionEvfnt)f.dlonfWitiSourdf(JTrff.tiis);
            nfwE = (TrffSflfdtionEvfnt)f.dlonfWitiSourdf(JTrff.tiis);
            nfwE = (TrffSflfdtionEvfnt)f.dlonfWitiSourdf(JTrff.tiis);
            nfwE = (TrffSflfdtionEvfnt)f.dlonfWitiSourdf(JTrff.tiis);
            firfVblufCibngfd(nfwE);
            firfVblufCibngfd(nfwE);
            firfVblufCibngfd(nfwE);
            firfVblufCibngfd(nfwE);
            firfVblufCibngfd(nfwE);
        }
        }
        }
        }
        }
    } // End of dlbss JTrff.TrffSflfdtionRfdirfdtor
    } // End of dlbss JTrff.TrffSflfdtionRfdirfdtor
    } // End of dlbss JTrff.TrffSflfdtionRfdirfdtor
    } // End of dlbss JTrff.TrffSflfdtionRfdirfdtor
    } // End of dlbss JTrff.TrffSflfdtionRfdirfdtor





    //
    //
    //
    //
    //
    // Sdrollbblf intfrfbdf
    // Sdrollbblf intfrfbdf
    // Sdrollbblf intfrfbdf
    // Sdrollbblf intfrfbdf
    // Sdrollbblf intfrfbdf
    //
    //
    //
    //
    //





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif prfffrrfd displby sizf of b <dodf>JTrff</dodf>. Tif ifigit is
     * Rfturns tif prfffrrfd displby sizf of b <dodf>JTrff</dodf>. Tif ifigit is
     * Rfturns tif prfffrrfd displby sizf of b <dodf>JTrff</dodf>. Tif ifigit is
     * Rfturns tif prfffrrfd displby sizf of b <dodf>JTrff</dodf>. Tif ifigit is
     * Rfturns tif prfffrrfd displby sizf of b <dodf>JTrff</dodf>. Tif ifigit is
     * dftfrminfd from <dodf>gftVisiblfRowCount</dodf> bnd tif widti
     * dftfrminfd from <dodf>gftVisiblfRowCount</dodf> bnd tif widti
     * dftfrminfd from <dodf>gftVisiblfRowCount</dodf> bnd tif widti
     * dftfrminfd from <dodf>gftVisiblfRowCount</dodf> bnd tif widti
     * dftfrminfd from <dodf>gftVisiblfRowCount</dodf> bnd tif widti
     * is tif durrfnt prfffrrfd widti.
     * is tif durrfnt prfffrrfd widti.
     * is tif durrfnt prfffrrfd widti.
     * is tif durrfnt prfffrrfd widti.
     * is tif durrfnt prfffrrfd widti.
     *
     *
     *
     *
     *
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif prfffrrfd sizf
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif prfffrrfd sizf
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif prfffrrfd sizf
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif prfffrrfd sizf
     * @rfturn b <dodf>Dimfnsion</dodf> objfdt dontbining tif prfffrrfd sizf
     */
     */
     */
     */
     */
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
    publid Dimfnsion gftPrfffrrfdSdrollbblfVifwportSizf() {
        int                 widti = gftPrfffrrfdSizf().widti;
        int                 widti = gftPrfffrrfdSizf().widti;
        int                 widti = gftPrfffrrfdSizf().widti;
        int                 widti = gftPrfffrrfdSizf().widti;
        int                 widti = gftPrfffrrfdSizf().widti;
        int                 visRows = gftVisiblfRowCount();
        int                 visRows = gftVisiblfRowCount();
        int                 visRows = gftVisiblfRowCount();
        int                 visRows = gftVisiblfRowCount();
        int                 visRows = gftVisiblfRowCount();
        int                 ifigit = -1;
        int                 ifigit = -1;
        int                 ifigit = -1;
        int                 ifigit = -1;
        int                 ifigit = -1;





        if(isFixfdRowHfigit())
        if(isFixfdRowHfigit())
        if(isFixfdRowHfigit())
        if(isFixfdRowHfigit())
        if(isFixfdRowHfigit())
            ifigit = visRows * gftRowHfigit();
            ifigit = visRows * gftRowHfigit();
            ifigit = visRows * gftRowHfigit();
            ifigit = visRows * gftRowHfigit();
            ifigit = visRows * gftRowHfigit();
        flsf {
        flsf {
        flsf {
        flsf {
        flsf {
            TrffUI          ui = gftUI();
            TrffUI          ui = gftUI();
            TrffUI          ui = gftUI();
            TrffUI          ui = gftUI();
            TrffUI          ui = gftUI();





            if (ui != null && visRows > 0) {
            if (ui != null && visRows > 0) {
            if (ui != null && visRows > 0) {
            if (ui != null && visRows > 0) {
            if (ui != null && visRows > 0) {
                int rd = ui.gftRowCount(tiis);
                int rd = ui.gftRowCount(tiis);
                int rd = ui.gftRowCount(tiis);
                int rd = ui.gftRowCount(tiis);
                int rd = ui.gftRowCount(tiis);





                if (rd >= visRows) {
                if (rd >= visRows) {
                if (rd >= visRows) {
                if (rd >= visRows) {
                if (rd >= visRows) {
                    Rfdtbnglf bounds = gftRowBounds(visRows - 1);
                    Rfdtbnglf bounds = gftRowBounds(visRows - 1);
                    Rfdtbnglf bounds = gftRowBounds(visRows - 1);
                    Rfdtbnglf bounds = gftRowBounds(visRows - 1);
                    Rfdtbnglf bounds = gftRowBounds(visRows - 1);
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                        ifigit = bounds.y + bounds.ifigit;
                        ifigit = bounds.y + bounds.ifigit;
                        ifigit = bounds.y + bounds.ifigit;
                        ifigit = bounds.y + bounds.ifigit;
                        ifigit = bounds.y + bounds.ifigit;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                flsf if (rd > 0) {
                flsf if (rd > 0) {
                flsf if (rd > 0) {
                flsf if (rd > 0) {
                flsf if (rd > 0) {
                    Rfdtbnglf bounds = gftRowBounds(0);
                    Rfdtbnglf bounds = gftRowBounds(0);
                    Rfdtbnglf bounds = gftRowBounds(0);
                    Rfdtbnglf bounds = gftRowBounds(0);
                    Rfdtbnglf bounds = gftRowBounds(0);
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                    if (bounds != null) {
                        ifigit = bounds.ifigit * visRows;
                        ifigit = bounds.ifigit * visRows;
                        ifigit = bounds.ifigit * visRows;
                        ifigit = bounds.ifigit * visRows;
                        ifigit = bounds.ifigit * visRows;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if (ifigit == -1) {
            if (ifigit == -1) {
            if (ifigit == -1) {
            if (ifigit == -1) {
            if (ifigit == -1) {
                ifigit = 16 * visRows;
                ifigit = 16 * visRows;
                ifigit = 16 * visRows;
                ifigit = 16 * visRows;
                ifigit = 16 * visRows;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn nfw Dimfnsion(widti, ifigit);
        rfturn nfw Dimfnsion(widti, ifigit);
        rfturn nfw Dimfnsion(widti, ifigit);
        rfturn nfw Dimfnsion(widti, ifigit);
        rfturn nfw Dimfnsion(widti, ifigit);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns tif bmount to indrfmfnt wifn sdrolling. Tif bmount is
     * Rfturns tif bmount to indrfmfnt wifn sdrolling. Tif bmount is
     * Rfturns tif bmount to indrfmfnt wifn sdrolling. Tif bmount is
     * Rfturns tif bmount to indrfmfnt wifn sdrolling. Tif bmount is
     * Rfturns tif bmount to indrfmfnt wifn sdrolling. Tif bmount is
     * tif ifigit of tif first displbyfd row tibt isn't domplftfly in vifw
     * tif ifigit of tif first displbyfd row tibt isn't domplftfly in vifw
     * tif ifigit of tif first displbyfd row tibt isn't domplftfly in vifw
     * tif ifigit of tif first displbyfd row tibt isn't domplftfly in vifw
     * tif ifigit of tif first displbyfd row tibt isn't domplftfly in vifw
     * or, if it is totblly displbyfd, tif ifigit of tif nfxt row in tif
     * or, if it is totblly displbyfd, tif ifigit of tif nfxt row in tif
     * or, if it is totblly displbyfd, tif ifigit of tif nfxt row in tif
     * or, if it is totblly displbyfd, tif ifigit of tif nfxt row in tif
     * or, if it is totblly displbyfd, tif ifigit of tif nfxt row in tif
     * sdrolling dirfdtion.
     * sdrolling dirfdtion.
     * sdrolling dirfdtion.
     * sdrolling dirfdtion.
     * sdrolling dirfdtion.
     *
     *
     *
     *
     *
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     *          grfbtfr tibn zfro for down/rigit
     *          grfbtfr tibn zfro for down/rigit
     *          grfbtfr tibn zfro for down/rigit
     *          grfbtfr tibn zfro for down/rigit
     *          grfbtfr tibn zfro for down/rigit
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "unit" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @sff JSdrollBbr#sftUnitIndrfmfnt(int)
     * @sff JSdrollBbr#sftUnitIndrfmfnt(int)
     * @sff JSdrollBbr#sftUnitIndrfmfnt(int)
     * @sff JSdrollBbr#sftUnitIndrfmfnt(int)
     * @sff JSdrollBbr#sftUnitIndrfmfnt(int)
     */
     */
     */
     */
     */
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfUnitIndrfmfnt(Rfdtbnglf visiblfRfdt,
                                          int orifntbtion, int dirfdtion) {
                                          int orifntbtion, int dirfdtion) {
                                          int orifntbtion, int dirfdtion) {
                                          int orifntbtion, int dirfdtion) {
                                          int orifntbtion, int dirfdtion) {
        if(orifntbtion == SwingConstbnts.VERTICAL) {
        if(orifntbtion == SwingConstbnts.VERTICAL) {
        if(orifntbtion == SwingConstbnts.VERTICAL) {
        if(orifntbtion == SwingConstbnts.VERTICAL) {
        if(orifntbtion == SwingConstbnts.VERTICAL) {
            Rfdtbnglf       rowBounds;
            Rfdtbnglf       rowBounds;
            Rfdtbnglf       rowBounds;
            Rfdtbnglf       rowBounds;
            Rfdtbnglf       rowBounds;
            int             firstIndfx = gftClosfstRowForLodbtion
            int             firstIndfx = gftClosfstRowForLodbtion
            int             firstIndfx = gftClosfstRowForLodbtion
            int             firstIndfx = gftClosfstRowForLodbtion
            int             firstIndfx = gftClosfstRowForLodbtion
                                         (0, visiblfRfdt.y);
                                         (0, visiblfRfdt.y);
                                         (0, visiblfRfdt.y);
                                         (0, visiblfRfdt.y);
                                         (0, visiblfRfdt.y);





            if(firstIndfx != -1) {
            if(firstIndfx != -1) {
            if(firstIndfx != -1) {
            if(firstIndfx != -1) {
            if(firstIndfx != -1) {
                rowBounds = gftRowBounds(firstIndfx);
                rowBounds = gftRowBounds(firstIndfx);
                rowBounds = gftRowBounds(firstIndfx);
                rowBounds = gftRowBounds(firstIndfx);
                rowBounds = gftRowBounds(firstIndfx);
                if(rowBounds.y != visiblfRfdt.y) {
                if(rowBounds.y != visiblfRfdt.y) {
                if(rowBounds.y != visiblfRfdt.y) {
                if(rowBounds.y != visiblfRfdt.y) {
                if(rowBounds.y != visiblfRfdt.y) {
                    if(dirfdtion < 0) {
                    if(dirfdtion < 0) {
                    if(dirfdtion < 0) {
                    if(dirfdtion < 0) {
                    if(dirfdtion < 0) {
                        // UP
                        // UP
                        // UP
                        // UP
                        // UP
                        rfturn Mbti.mbx(0, (visiblfRfdt.y - rowBounds.y));
                        rfturn Mbti.mbx(0, (visiblfRfdt.y - rowBounds.y));
                        rfturn Mbti.mbx(0, (visiblfRfdt.y - rowBounds.y));
                        rfturn Mbti.mbx(0, (visiblfRfdt.y - rowBounds.y));
                        rfturn Mbti.mbx(0, (visiblfRfdt.y - rowBounds.y));
                    }
                    }
                    }
                    }
                    }
                    rfturn (rowBounds.y + rowBounds.ifigit - visiblfRfdt.y);
                    rfturn (rowBounds.y + rowBounds.ifigit - visiblfRfdt.y);
                    rfturn (rowBounds.y + rowBounds.ifigit - visiblfRfdt.y);
                    rfturn (rowBounds.y + rowBounds.ifigit - visiblfRfdt.y);
                    rfturn (rowBounds.y + rowBounds.ifigit - visiblfRfdt.y);
                }
                }
                }
                }
                }
                if(dirfdtion < 0) { // UP
                if(dirfdtion < 0) { // UP
                if(dirfdtion < 0) { // UP
                if(dirfdtion < 0) { // UP
                if(dirfdtion < 0) { // UP
                    if(firstIndfx != 0) {
                    if(firstIndfx != 0) {
                    if(firstIndfx != 0) {
                    if(firstIndfx != 0) {
                    if(firstIndfx != 0) {
                        rowBounds = gftRowBounds(firstIndfx - 1);
                        rowBounds = gftRowBounds(firstIndfx - 1);
                        rowBounds = gftRowBounds(firstIndfx - 1);
                        rowBounds = gftRowBounds(firstIndfx - 1);
                        rowBounds = gftRowBounds(firstIndfx - 1);
                        rfturn rowBounds.ifigit;
                        rfturn rowBounds.ifigit;
                        rfturn rowBounds.ifigit;
                        rfturn rowBounds.ifigit;
                        rfturn rowBounds.ifigit;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                flsf {
                flsf {
                flsf {
                flsf {
                flsf {
                    rfturn rowBounds.ifigit;
                    rfturn rowBounds.ifigit;
                    rfturn rowBounds.ifigit;
                    rfturn rowBounds.ifigit;
                    rfturn rowBounds.ifigit;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn 0;
            rfturn 0;
            rfturn 0;
            rfturn 0;
            rfturn 0;
        }
        }
        }
        }
        }
        rfturn 4;
        rfturn 4;
        rfturn 4;
        rfturn 4;
        rfturn 4;
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Rfturns tif bmount for b blodk indrfmfnt, wiidi is tif ifigit or
     * Rfturns tif bmount for b blodk indrfmfnt, wiidi is tif ifigit or
     * Rfturns tif bmount for b blodk indrfmfnt, wiidi is tif ifigit or
     * Rfturns tif bmount for b blodk indrfmfnt, wiidi is tif ifigit or
     * Rfturns tif bmount for b blodk indrfmfnt, wiidi is tif ifigit or
     * widti of <dodf>visiblfRfdt</dodf>, bbsfd on <dodf>orifntbtion</dodf>.
     * widti of <dodf>visiblfRfdt</dodf>, bbsfd on <dodf>orifntbtion</dodf>.
     * widti of <dodf>visiblfRfdt</dodf>, bbsfd on <dodf>orifntbtion</dodf>.
     * widti of <dodf>visiblfRfdt</dodf>, bbsfd on <dodf>orifntbtion</dodf>.
     * widti of <dodf>visiblfRfdt</dodf>, bbsfd on <dodf>orifntbtion</dodf>.
     *
     *
     *
     *
     *
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm visiblfRfdt tif vifw brfb visiblf witiin tif vifwport
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     * @pbrbm orifntbtion fitifr <dodf>SwingConstbnts.VERTICAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     *          or <dodf>SwingConstbnts.HORIZONTAL</dodf>
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     * @pbrbm dirfdtion lfss tibn zfro to sdroll up/lfft,
     *          grfbtfr tibn zfro for down/rigit.
     *          grfbtfr tibn zfro for down/rigit.
     *          grfbtfr tibn zfro for down/rigit.
     *          grfbtfr tibn zfro for down/rigit.
     *          grfbtfr tibn zfro for down/rigit.
     * @rfturn tif "blodk" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "blodk" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "blodk" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "blodk" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @rfturn tif "blodk" indrfmfnt for sdrolling in tif spfdififd dirfdtion
     * @sff JSdrollBbr#sftBlodkIndrfmfnt(int)
     * @sff JSdrollBbr#sftBlodkIndrfmfnt(int)
     * @sff JSdrollBbr#sftBlodkIndrfmfnt(int)
     * @sff JSdrollBbr#sftBlodkIndrfmfnt(int)
     * @sff JSdrollBbr#sftBlodkIndrfmfnt(int)
     */
     */
     */
     */
     */
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
    publid int gftSdrollbblfBlodkIndrfmfnt(Rfdtbnglf visiblfRfdt,
                                           int orifntbtion, int dirfdtion) {
                                           int orifntbtion, int dirfdtion) {
                                           int orifntbtion, int dirfdtion) {
                                           int orifntbtion, int dirfdtion) {
                                           int orifntbtion, int dirfdtion) {
        rfturn (orifntbtion == SwingConstbnts.VERTICAL) ? visiblfRfdt.ifigit :
        rfturn (orifntbtion == SwingConstbnts.VERTICAL) ? visiblfRfdt.ifigit :
        rfturn (orifntbtion == SwingConstbnts.VERTICAL) ? visiblfRfdt.ifigit :
        rfturn (orifntbtion == SwingConstbnts.VERTICAL) ? visiblfRfdt.ifigit :
        rfturn (orifntbtion == SwingConstbnts.VERTICAL) ? visiblfRfdt.ifigit :
            visiblfRfdt.widti;
            visiblfRfdt.widti;
            visiblfRfdt.widti;
            visiblfRfdt.widti;
            visiblfRfdt.widti;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns fblsf to indidbtf tibt tif widti of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif widti of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif widti of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif widti of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif widti of tif vifwport dofs not
     * dftfrminf tif widti of tif tbblf, unlfss tif prfffrrfd widti of
     * dftfrminf tif widti of tif tbblf, unlfss tif prfffrrfd widti of
     * dftfrminf tif widti of tif tbblf, unlfss tif prfffrrfd widti of
     * dftfrminf tif widti of tif tbblf, unlfss tif prfffrrfd widti of
     * dftfrminf tif widti of tif tbblf, unlfss tif prfffrrfd widti of
     * tif trff is smbllfr tibn tif vifwports widti.  In otifr words:
     * tif trff is smbllfr tibn tif vifwports widti.  In otifr words:
     * tif trff is smbllfr tibn tif vifwports widti.  In otifr words:
     * tif trff is smbllfr tibn tif vifwports widti.  In otifr words:
     * tif trff is smbllfr tibn tif vifwports widti.  In otifr words:
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     *
     *
     *
     *
     *
     * @rfturn wiftifr tif trff siould trbdk tif widti of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif widti of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif widti of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif widti of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif widti of tif vifwport
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportWidti
     */
     */
     */
     */
     */
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
    publid boolfbn gftSdrollbblfTrbdksVifwportWidti() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
            rfturn pbrfnt.gftWidti() > gftPrfffrrfdSizf().widti;
            rfturn pbrfnt.gftWidti() > gftPrfffrrfdSizf().widti;
            rfturn pbrfnt.gftWidti() > gftPrfffrrfdSizf().widti;
            rfturn pbrfnt.gftWidti() > gftPrfffrrfdSizf().widti;
            rfturn pbrfnt.gftWidti() > gftPrfffrrfdSizf().widti;
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns fblsf to indidbtf tibt tif ifigit of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif ifigit of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif ifigit of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif ifigit of tif vifwport dofs not
     * Rfturns fblsf to indidbtf tibt tif ifigit of tif vifwport dofs not
     * dftfrminf tif ifigit of tif tbblf, unlfss tif prfffrrfd ifigit
     * dftfrminf tif ifigit of tif tbblf, unlfss tif prfffrrfd ifigit
     * dftfrminf tif ifigit of tif tbblf, unlfss tif prfffrrfd ifigit
     * dftfrminf tif ifigit of tif tbblf, unlfss tif prfffrrfd ifigit
     * dftfrminf tif ifigit of tif tbblf, unlfss tif prfffrrfd ifigit
     * of tif trff is smbllfr tibn tif vifwports ifigit.  In otifr words:
     * of tif trff is smbllfr tibn tif vifwports ifigit.  In otifr words:
     * of tif trff is smbllfr tibn tif vifwports ifigit.  In otifr words:
     * of tif trff is smbllfr tibn tif vifwports ifigit.  In otifr words:
     * of tif trff is smbllfr tibn tif vifwports ifigit.  In otifr words:
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     * fnsurf tibt tif trff is nfvfr smbllfr tibn its vifwport.
     *
     *
     *
     *
     *
     * @rfturn wiftifr tif trff siould trbdk tif ifigit of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif ifigit of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif ifigit of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif ifigit of tif vifwport
     * @rfturn wiftifr tif trff siould trbdk tif ifigit of tif vifwport
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     * @sff Sdrollbblf#gftSdrollbblfTrbdksVifwportHfigit
     */
     */
     */
     */
     */
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
    publid boolfbn gftSdrollbblfTrbdksVifwportHfigit() {
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        Contbinfr pbrfnt = SwingUtilitifs.gftUnwrbppfdPbrfnt(tiis);
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
        if (pbrfnt instbndfof JVifwport) {
            rfturn pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
            rfturn pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
            rfturn pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
            rfturn pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
            rfturn pbrfnt.gftHfigit() > gftPrfffrrfdSizf().ifigit;
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Sfts tif fxpbndfd stbtf of tiis <dodf>JTrff</dodf>.
     * Sfts tif fxpbndfd stbtf of tiis <dodf>JTrff</dodf>.
     * Sfts tif fxpbndfd stbtf of tiis <dodf>JTrff</dodf>.
     * Sfts tif fxpbndfd stbtf of tiis <dodf>JTrff</dodf>.
     * Sfts tif fxpbndfd stbtf of tiis <dodf>JTrff</dodf>.
     * If <dodf>stbtf</dodf> is
     * If <dodf>stbtf</dodf> is
     * If <dodf>stbtf</dodf> is
     * If <dodf>stbtf</dodf> is
     * If <dodf>stbtf</dodf> is
     * truf, bll pbrfnts of <dodf>pbti</dodf> bnd pbti brf mbrkfd bs
     * truf, bll pbrfnts of <dodf>pbti</dodf> bnd pbti brf mbrkfd bs
     * truf, bll pbrfnts of <dodf>pbti</dodf> bnd pbti brf mbrkfd bs
     * truf, bll pbrfnts of <dodf>pbti</dodf> bnd pbti brf mbrkfd bs
     * truf, bll pbrfnts of <dodf>pbti</dodf> bnd pbti brf mbrkfd bs
     * fxpbndfd. If <dodf>stbtf</dodf> is fblsf, bll pbrfnts of
     * fxpbndfd. If <dodf>stbtf</dodf> is fblsf, bll pbrfnts of
     * fxpbndfd. If <dodf>stbtf</dodf> is fblsf, bll pbrfnts of
     * fxpbndfd. If <dodf>stbtf</dodf> is fblsf, bll pbrfnts of
     * fxpbndfd. If <dodf>stbtf</dodf> is fblsf, bll pbrfnts of
     * <dodf>pbti</dodf> brf mbrkfd EXPANDED, but <dodf>pbti</dodf> itsflf
     * <dodf>pbti</dodf> brf mbrkfd EXPANDED, but <dodf>pbti</dodf> itsflf
     * <dodf>pbti</dodf> brf mbrkfd EXPANDED, but <dodf>pbti</dodf> itsflf
     * <dodf>pbti</dodf> brf mbrkfd EXPANDED, but <dodf>pbti</dodf> itsflf
     * <dodf>pbti</dodf> brf mbrkfd EXPANDED, but <dodf>pbti</dodf> itsflf
     * is mbrkfd dollbpsfd.<p>
     * is mbrkfd dollbpsfd.<p>
     * is mbrkfd dollbpsfd.<p>
     * is mbrkfd dollbpsfd.<p>
     * is mbrkfd dollbpsfd.<p>
     * Tiis will fbil if b <dodf>TrffWillExpbndListfnfr</dodf> vftos it.
     * Tiis will fbil if b <dodf>TrffWillExpbndListfnfr</dodf> vftos it.
     * Tiis will fbil if b <dodf>TrffWillExpbndListfnfr</dodf> vftos it.
     * Tiis will fbil if b <dodf>TrffWillExpbndListfnfr</dodf> vftos it.
     * Tiis will fbil if b <dodf>TrffWillExpbndListfnfr</dodf> vftos it.
     *
     *
     *
     *
     *
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm pbti b {@dodf TrffPbti} idfntifying b nodf
     * @pbrbm stbtf if {@dodf truf}, bll pbrfnts of @{dodf pbti} bnd pbti brf mbrkfd bs fxpbndfd.
     * @pbrbm stbtf if {@dodf truf}, bll pbrfnts of @{dodf pbti} bnd pbti brf mbrkfd bs fxpbndfd.
     * @pbrbm stbtf if {@dodf truf}, bll pbrfnts of @{dodf pbti} bnd pbti brf mbrkfd bs fxpbndfd.
     * @pbrbm stbtf if {@dodf truf}, bll pbrfnts of @{dodf pbti} bnd pbti brf mbrkfd bs fxpbndfd.
     * @pbrbm stbtf if {@dodf truf}, bll pbrfnts of @{dodf pbti} bnd pbti brf mbrkfd bs fxpbndfd.
     *              Otifrwisf, bll pbrfnts of {@dodf pbti} brf mbrkfd EXPANDED,
     *              Otifrwisf, bll pbrfnts of {@dodf pbti} brf mbrkfd EXPANDED,
     *              Otifrwisf, bll pbrfnts of {@dodf pbti} brf mbrkfd EXPANDED,
     *              Otifrwisf, bll pbrfnts of {@dodf pbti} brf mbrkfd EXPANDED,
     *              Otifrwisf, bll pbrfnts of {@dodf pbti} brf mbrkfd EXPANDED,
     *              but {@dodf pbti} itsflf is mbrkfd dollbpsfd.
     *              but {@dodf pbti} itsflf is mbrkfd dollbpsfd.
     *              but {@dodf pbti} itsflf is mbrkfd dollbpsfd.
     *              but {@dodf pbti} itsflf is mbrkfd dollbpsfd.
     *              but {@dodf pbti} itsflf is mbrkfd dollbpsfd.
     */
     */
     */
     */
     */
    protfdtfd void sftExpbndfdStbtf(TrffPbti pbti, boolfbn stbtf) {
    protfdtfd void sftExpbndfdStbtf(TrffPbti pbti, boolfbn stbtf) {
    protfdtfd void sftExpbndfdStbtf(TrffPbti pbti, boolfbn stbtf) {
    protfdtfd void sftExpbndfdStbtf(TrffPbti pbti, boolfbn stbtf) {
    protfdtfd void sftExpbndfdStbtf(TrffPbti pbti, boolfbn stbtf) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
        if(pbti != null) {
            // Mbkf surf bll pbrfnts of pbti brf fxpbndfd.
            // Mbkf surf bll pbrfnts of pbti brf fxpbndfd.
            // Mbkf surf bll pbrfnts of pbti brf fxpbndfd.
            // Mbkf surf bll pbrfnts of pbti brf fxpbndfd.
            // Mbkf surf bll pbrfnts of pbti brf fxpbndfd.
            Stbdk<TrffPbti> stbdk;
            Stbdk<TrffPbti> stbdk;
            Stbdk<TrffPbti> stbdk;
            Stbdk<TrffPbti> stbdk;
            Stbdk<TrffPbti> stbdk;
            TrffPbti pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti pbrfntPbti = pbti.gftPbrfntPbti();
            TrffPbti pbrfntPbti = pbti.gftPbrfntPbti();





            if (fxpbndfdStbdk.sizf() == 0) {
            if (fxpbndfdStbdk.sizf() == 0) {
            if (fxpbndfdStbdk.sizf() == 0) {
            if (fxpbndfdStbdk.sizf() == 0) {
            if (fxpbndfdStbdk.sizf() == 0) {
                stbdk = nfw Stbdk<TrffPbti>();
                stbdk = nfw Stbdk<TrffPbti>();
                stbdk = nfw Stbdk<TrffPbti>();
                stbdk = nfw Stbdk<TrffPbti>();
                stbdk = nfw Stbdk<TrffPbti>();
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                stbdk = fxpbndfdStbdk.pop();
                stbdk = fxpbndfdStbdk.pop();
                stbdk = fxpbndfdStbdk.pop();
                stbdk = fxpbndfdStbdk.pop();
                stbdk = fxpbndfdStbdk.pop();
            }
            }
            }
            }
            }





            try {
            try {
            try {
            try {
            try {
                wiilf(pbrfntPbti != null) {
                wiilf(pbrfntPbti != null) {
                wiilf(pbrfntPbti != null) {
                wiilf(pbrfntPbti != null) {
                wiilf(pbrfntPbti != null) {
                    if(isExpbndfd(pbrfntPbti)) {
                    if(isExpbndfd(pbrfntPbti)) {
                    if(isExpbndfd(pbrfntPbti)) {
                    if(isExpbndfd(pbrfntPbti)) {
                    if(isExpbndfd(pbrfntPbti)) {
                        pbrfntPbti = null;
                        pbrfntPbti = null;
                        pbrfntPbti = null;
                        pbrfntPbti = null;
                        pbrfntPbti = null;
                    }
                    }
                    }
                    }
                    }
                    flsf {
                    flsf {
                    flsf {
                    flsf {
                    flsf {
                        stbdk.pusi(pbrfntPbti);
                        stbdk.pusi(pbrfntPbti);
                        stbdk.pusi(pbrfntPbti);
                        stbdk.pusi(pbrfntPbti);
                        stbdk.pusi(pbrfntPbti);
                        pbrfntPbti = pbrfntPbti.gftPbrfntPbti();
                        pbrfntPbti = pbrfntPbti.gftPbrfntPbti();
                        pbrfntPbti = pbrfntPbti.gftPbrfntPbti();
                        pbrfntPbti = pbrfntPbti.gftPbrfntPbti();
                        pbrfntPbti = pbrfntPbti.gftPbrfntPbti();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                for(int dountfr = stbdk.sizf() - 1; dountfr >= 0; dountfr--) {
                for(int dountfr = stbdk.sizf() - 1; dountfr >= 0; dountfr--) {
                for(int dountfr = stbdk.sizf() - 1; dountfr >= 0; dountfr--) {
                for(int dountfr = stbdk.sizf() - 1; dountfr >= 0; dountfr--) {
                for(int dountfr = stbdk.sizf() - 1; dountfr >= 0; dountfr--) {
                    pbrfntPbti = stbdk.pop();
                    pbrfntPbti = stbdk.pop();
                    pbrfntPbti = stbdk.pop();
                    pbrfntPbti = stbdk.pop();
                    pbrfntPbti = stbdk.pop();
                    if(!isExpbndfd(pbrfntPbti)) {
                    if(!isExpbndfd(pbrfntPbti)) {
                    if(!isExpbndfd(pbrfntPbti)) {
                    if(!isExpbndfd(pbrfntPbti)) {
                    if(!isExpbndfd(pbrfntPbti)) {
                        try {
                        try {
                        try {
                        try {
                        try {
                            firfTrffWillExpbnd(pbrfntPbti);
                            firfTrffWillExpbnd(pbrfntPbti);
                            firfTrffWillExpbnd(pbrfntPbti);
                            firfTrffWillExpbnd(pbrfntPbti);
                            firfTrffWillExpbnd(pbrfntPbti);
                        } dbtdi (ExpbndVftoExdfption fvf) {
                        } dbtdi (ExpbndVftoExdfption fvf) {
                        } dbtdi (ExpbndVftoExdfption fvf) {
                        } dbtdi (ExpbndVftoExdfption fvf) {
                        } dbtdi (ExpbndVftoExdfption fvf) {
                            // Expbnd vftofd!
                            // Expbnd vftofd!
                            // Expbnd vftofd!
                            // Expbnd vftofd!
                            // Expbnd vftofd!
                            rfturn;
                            rfturn;
                            rfturn;
                            rfturn;
                            rfturn;
                        }
                        }
                        }
                        }
                        }
                        fxpbndfdStbtf.put(pbrfntPbti, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfntPbti, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfntPbti, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfntPbti, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfntPbti, Boolfbn.TRUE);
                        firfTrffExpbndfd(pbrfntPbti);
                        firfTrffExpbndfd(pbrfntPbti);
                        firfTrffExpbndfd(pbrfntPbti);
                        firfTrffExpbndfd(pbrfntPbti);
                        firfTrffExpbndfd(pbrfntPbti);
                        if (bddfssiblfContfxt != null) {
                        if (bddfssiblfContfxt != null) {
                        if (bddfssiblfContfxt != null) {
                        if (bddfssiblfContfxt != null) {
                        if (bddfssiblfContfxt != null) {
                            ((AddfssiblfJTrff)bddfssiblfContfxt).
                            ((AddfssiblfJTrff)bddfssiblfContfxt).
                            ((AddfssiblfJTrff)bddfssiblfContfxt).
                            ((AddfssiblfJTrff)bddfssiblfContfxt).
                            ((AddfssiblfJTrff)bddfssiblfContfxt).
                                              firfVisiblfDbtbPropfrtyCibngf();
                                              firfVisiblfDbtbPropfrtyCibngf();
                                              firfVisiblfDbtbPropfrtyCibngf();
                                              firfVisiblfDbtbPropfrtyCibngf();
                                              firfVisiblfDbtbPropfrtyCibngf();
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            finblly {
            finblly {
            finblly {
            finblly {
            finblly {
                if (fxpbndfdStbdk.sizf() < TEMP_STACK_SIZE) {
                if (fxpbndfdStbdk.sizf() < TEMP_STACK_SIZE) {
                if (fxpbndfdStbdk.sizf() < TEMP_STACK_SIZE) {
                if (fxpbndfdStbdk.sizf() < TEMP_STACK_SIZE) {
                if (fxpbndfdStbdk.sizf() < TEMP_STACK_SIZE) {
                    stbdk.rfmovfAllElfmfnts();
                    stbdk.rfmovfAllElfmfnts();
                    stbdk.rfmovfAllElfmfnts();
                    stbdk.rfmovfAllElfmfnts();
                    stbdk.rfmovfAllElfmfnts();
                    fxpbndfdStbdk.pusi(stbdk);
                    fxpbndfdStbdk.pusi(stbdk);
                    fxpbndfdStbdk.pusi(stbdk);
                    fxpbndfdStbdk.pusi(stbdk);
                    fxpbndfdStbdk.pusi(stbdk);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if(!stbtf) {
            if(!stbtf) {
            if(!stbtf) {
            if(!stbtf) {
            if(!stbtf) {
                // dollbpsf lbst pbti.
                // dollbpsf lbst pbti.
                // dollbpsf lbst pbti.
                // dollbpsf lbst pbti.
                // dollbpsf lbst pbti.
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);





                if(dVbluf != null && ((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf != null && ((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf != null && ((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf != null && ((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf != null && ((Boolfbn)dVbluf).boolfbnVbluf()) {
                    try {
                    try {
                    try {
                    try {
                    try {
                        firfTrffWillCollbpsf(pbti);
                        firfTrffWillCollbpsf(pbti);
                        firfTrffWillCollbpsf(pbti);
                        firfTrffWillCollbpsf(pbti);
                        firfTrffWillCollbpsf(pbti);
                    }
                    }
                    }
                    }
                    }
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                        rfturn;
                        rfturn;
                        rfturn;
                        rfturn;
                        rfturn;
                    }
                    }
                    }
                    }
                    }
                    fxpbndfdStbtf.put(pbti, Boolfbn.FALSE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.FALSE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.FALSE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.FALSE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.FALSE);
                    firfTrffCollbpsfd(pbti);
                    firfTrffCollbpsfd(pbti);
                    firfTrffCollbpsfd(pbti);
                    firfTrffCollbpsfd(pbti);
                    firfTrffCollbpsfd(pbti);
                    if (rfmovfDfsdfndbntSflfdtfdPbtis(pbti, fblsf) &&
                    if (rfmovfDfsdfndbntSflfdtfdPbtis(pbti, fblsf) &&
                    if (rfmovfDfsdfndbntSflfdtfdPbtis(pbti, fblsf) &&
                    if (rfmovfDfsdfndbntSflfdtfdPbtis(pbti, fblsf) &&
                    if (rfmovfDfsdfndbntSflfdtfdPbtis(pbti, fblsf) &&
                        !isPbtiSflfdtfd(pbti)) {
                        !isPbtiSflfdtfd(pbti)) {
                        !isPbtiSflfdtfd(pbti)) {
                        !isPbtiSflfdtfd(pbti)) {
                        !isPbtiSflfdtfd(pbti)) {
                        // A dfsdfndbnt wbs sflfdtfd, sflfdt tif pbrfnt.
                        // A dfsdfndbnt wbs sflfdtfd, sflfdt tif pbrfnt.
                        // A dfsdfndbnt wbs sflfdtfd, sflfdt tif pbrfnt.
                        // A dfsdfndbnt wbs sflfdtfd, sflfdt tif pbrfnt.
                        // A dfsdfndbnt wbs sflfdtfd, sflfdt tif pbrfnt.
                        bddSflfdtionPbti(pbti);
                        bddSflfdtionPbti(pbti);
                        bddSflfdtionPbti(pbti);
                        bddSflfdtionPbti(pbti);
                        bddSflfdtionPbti(pbti);
                    }
                    }
                    }
                    }
                    }
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                                    firfVisiblfDbtbPropfrtyCibngf();
                                    firfVisiblfDbtbPropfrtyCibngf();
                                    firfVisiblfDbtbPropfrtyCibngf();
                                    firfVisiblfDbtbPropfrtyCibngf();
                                    firfVisiblfDbtbPropfrtyCibngf();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            flsf {
            flsf {
            flsf {
            flsf {
            flsf {
                // Expbnd lbst pbti.
                // Expbnd lbst pbti.
                // Expbnd lbst pbti.
                // Expbnd lbst pbti.
                // Expbnd lbst pbti.
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);
                Objfdt          dVbluf = fxpbndfdStbtf.gft(pbti);





                if(dVbluf == null || !((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf == null || !((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf == null || !((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf == null || !((Boolfbn)dVbluf).boolfbnVbluf()) {
                if(dVbluf == null || !((Boolfbn)dVbluf).boolfbnVbluf()) {
                    try {
                    try {
                    try {
                    try {
                    try {
                        firfTrffWillExpbnd(pbti);
                        firfTrffWillExpbnd(pbti);
                        firfTrffWillExpbnd(pbti);
                        firfTrffWillExpbnd(pbti);
                        firfTrffWillExpbnd(pbti);
                    }
                    }
                    }
                    }
                    }
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                    dbtdi (ExpbndVftoExdfption fvf) {
                        rfturn;
                        rfturn;
                        rfturn;
                        rfturn;
                        rfturn;
                    }
                    }
                    }
                    }
                    }
                    fxpbndfdStbtf.put(pbti, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbti, Boolfbn.TRUE);
                    firfTrffExpbndfd(pbti);
                    firfTrffExpbndfd(pbti);
                    firfTrffExpbndfd(pbti);
                    firfTrffExpbndfd(pbti);
                    firfTrffExpbndfd(pbti);
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                    if (bddfssiblfContfxt != null) {
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                        ((AddfssiblfJTrff)bddfssiblfContfxt).
                                          firfVisiblfDbtbPropfrtyCibngf();
                                          firfVisiblfDbtbPropfrtyCibngf();
                                          firfVisiblfDbtbPropfrtyCibngf();
                                          firfVisiblfDbtbPropfrtyCibngf();
                                          firfVisiblfDbtbPropfrtyCibngf();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * Rfturns bn {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * Rfturns bn {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * Rfturns bn {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * Rfturns bn {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * tibt ibvf bffn fxpbndfd tibt
     * tibt ibvf bffn fxpbndfd tibt
     * tibt ibvf bffn fxpbndfd tibt
     * tibt ibvf bffn fxpbndfd tibt
     * tibt ibvf bffn fxpbndfd tibt
     * brf dfsdfndbnts of {@dodf pbrfnt}.
     * brf dfsdfndbnts of {@dodf pbrfnt}.
     * brf dfsdfndbnts of {@dodf pbrfnt}.
     * brf dfsdfndbnts of {@dodf pbrfnt}.
     * brf dfsdfndbnts of {@dodf pbrfnt}.
     *
     *
     *
     *
     *
     * @pbrbm pbrfnt b pbti
     * @pbrbm pbrfnt b pbti
     * @pbrbm pbrfnt b pbti
     * @pbrbm pbrfnt b pbti
     * @pbrbm pbrfnt b pbti
     * @rfturn tif {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * @rfturn tif {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * @rfturn tif {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * @rfturn tif {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     * @rfturn tif {@dodf Enumfrbtion} of {@dodf TrffPbtis}
     */
     */
     */
     */
     */
    protfdtfd Enumfrbtion<TrffPbti>
    protfdtfd Enumfrbtion<TrffPbti>
    protfdtfd Enumfrbtion<TrffPbti>
    protfdtfd Enumfrbtion<TrffPbti>
    protfdtfd Enumfrbtion<TrffPbti>
        gftDfsdfndbntTogglfdPbtis(TrffPbti pbrfnt)
        gftDfsdfndbntTogglfdPbtis(TrffPbti pbrfnt)
        gftDfsdfndbntTogglfdPbtis(TrffPbti pbrfnt)
        gftDfsdfndbntTogglfdPbtis(TrffPbti pbrfnt)
        gftDfsdfndbntTogglfdPbtis(TrffPbti pbrfnt)
    {
    {
    {
    {
    {
        if(pbrfnt == null)
        if(pbrfnt == null)
        if(pbrfnt == null)
        if(pbrfnt == null)
        if(pbrfnt == null)
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;





        Vfdtor<TrffPbti> dfsdfndbnts = nfw Vfdtor<TrffPbti>();
        Vfdtor<TrffPbti> dfsdfndbnts = nfw Vfdtor<TrffPbti>();
        Vfdtor<TrffPbti> dfsdfndbnts = nfw Vfdtor<TrffPbti>();
        Vfdtor<TrffPbti> dfsdfndbnts = nfw Vfdtor<TrffPbti>();
        Vfdtor<TrffPbti> dfsdfndbnts = nfw Vfdtor<TrffPbti>();
        Enumfrbtion<TrffPbti> nodfs = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> nodfs = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> nodfs = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> nodfs = fxpbndfdStbtf.kfys();
        Enumfrbtion<TrffPbti> nodfs = fxpbndfdStbtf.kfys();





        wiilf(nodfs.ibsMorfElfmfnts()) {
        wiilf(nodfs.ibsMorfElfmfnts()) {
        wiilf(nodfs.ibsMorfElfmfnts()) {
        wiilf(nodfs.ibsMorfElfmfnts()) {
        wiilf(nodfs.ibsMorfElfmfnts()) {
            TrffPbti pbti = nodfs.nfxtElfmfnt();
            TrffPbti pbti = nodfs.nfxtElfmfnt();
            TrffPbti pbti = nodfs.nfxtElfmfnt();
            TrffPbti pbti = nodfs.nfxtElfmfnt();
            TrffPbti pbti = nodfs.nfxtElfmfnt();
            if(pbrfnt.isDfsdfndbnt(pbti))
            if(pbrfnt.isDfsdfndbnt(pbti))
            if(pbrfnt.isDfsdfndbnt(pbti))
            if(pbrfnt.isDfsdfndbnt(pbti))
            if(pbrfnt.isDfsdfndbnt(pbti))
                dfsdfndbnts.bddElfmfnt(pbti);
                dfsdfndbnts.bddElfmfnt(pbti);
                dfsdfndbnts.bddElfmfnt(pbti);
                dfsdfndbnts.bddElfmfnt(pbti);
                dfsdfndbnts.bddElfmfnt(pbti);
        }
        }
        }
        }
        }
        rfturn dfsdfndbnts.flfmfnts();
        rfturn dfsdfndbnts.flfmfnts();
        rfturn dfsdfndbnts.flfmfnts();
        rfturn dfsdfndbnts.flfmfnts();
        rfturn dfsdfndbnts.flfmfnts();
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs bny dfsdfndbnts of tif <dodf>TrffPbtis</dodf> in
     * Rfmovfs bny dfsdfndbnts of tif <dodf>TrffPbtis</dodf> in
     * Rfmovfs bny dfsdfndbnts of tif <dodf>TrffPbtis</dodf> in
     * Rfmovfs bny dfsdfndbnts of tif <dodf>TrffPbtis</dodf> in
     * Rfmovfs bny dfsdfndbnts of tif <dodf>TrffPbtis</dodf> in
     * <dodf>toRfmovf</dodf>
     * <dodf>toRfmovf</dodf>
     * <dodf>toRfmovf</dodf>
     * <dodf>toRfmovf</dodf>
     * <dodf>toRfmovf</dodf>
     * tibt ibvf bffn fxpbndfd.
     * tibt ibvf bffn fxpbndfd.
     * tibt ibvf bffn fxpbndfd.
     * tibt ibvf bffn fxpbndfd.
     * tibt ibvf bffn fxpbndfd.
     *
     *
     *
     *
     *
     * @pbrbm toRfmovf bn fnumfrbtion of tif pbtis to rfmovf; b vbluf of
     * @pbrbm toRfmovf bn fnumfrbtion of tif pbtis to rfmovf; b vbluf of
     * @pbrbm toRfmovf bn fnumfrbtion of tif pbtis to rfmovf; b vbluf of
     * @pbrbm toRfmovf bn fnumfrbtion of tif pbtis to rfmovf; b vbluf of
     * @pbrbm toRfmovf bn fnumfrbtion of tif pbtis to rfmovf; b vbluf of
     *        {@dodf null} is ignorfd
     *        {@dodf null} is ignorfd
     *        {@dodf null} is ignorfd
     *        {@dodf null} is ignorfd
     *        {@dodf null} is ignorfd
     * @tirows ClbssCbstExdfption if {@dodf toRfmovf} dontbins bn
     * @tirows ClbssCbstExdfption if {@dodf toRfmovf} dontbins bn
     * @tirows ClbssCbstExdfption if {@dodf toRfmovf} dontbins bn
     * @tirows ClbssCbstExdfption if {@dodf toRfmovf} dontbins bn
     * @tirows ClbssCbstExdfption if {@dodf toRfmovf} dontbins bn
     *         flfmfnt tibt is not b {@dodf TrffPbti}; {@dodf null}
     *         flfmfnt tibt is not b {@dodf TrffPbti}; {@dodf null}
     *         flfmfnt tibt is not b {@dodf TrffPbti}; {@dodf null}
     *         flfmfnt tibt is not b {@dodf TrffPbti}; {@dodf null}
     *         flfmfnt tibt is not b {@dodf TrffPbti}; {@dodf null}
     *         vblufs brf ignorfd
     *         vblufs brf ignorfd
     *         vblufs brf ignorfd
     *         vblufs brf ignorfd
     *         vblufs brf ignorfd
     */
     */
     */
     */
     */
     protfdtfd void
     protfdtfd void
     protfdtfd void
     protfdtfd void
     protfdtfd void
         rfmovfDfsdfndbntTogglfdPbtis(Enumfrbtion<TrffPbti> toRfmovf)
         rfmovfDfsdfndbntTogglfdPbtis(Enumfrbtion<TrffPbti> toRfmovf)
         rfmovfDfsdfndbntTogglfdPbtis(Enumfrbtion<TrffPbti> toRfmovf)
         rfmovfDfsdfndbntTogglfdPbtis(Enumfrbtion<TrffPbti> toRfmovf)
         rfmovfDfsdfndbntTogglfdPbtis(Enumfrbtion<TrffPbti> toRfmovf)
    {
    {
    {
    {
    {
         if(toRfmovf != null) {
         if(toRfmovf != null) {
         if(toRfmovf != null) {
         if(toRfmovf != null) {
         if(toRfmovf != null) {
             wiilf(toRfmovf.ibsMorfElfmfnts()) {
             wiilf(toRfmovf.ibsMorfElfmfnts()) {
             wiilf(toRfmovf.ibsMorfElfmfnts()) {
             wiilf(toRfmovf.ibsMorfElfmfnts()) {
             wiilf(toRfmovf.ibsMorfElfmfnts()) {
                 Enumfrbtion<?> dfsdfndbnts = gftDfsdfndbntTogglfdPbtis
                 Enumfrbtion<?> dfsdfndbnts = gftDfsdfndbntTogglfdPbtis
                 Enumfrbtion<?> dfsdfndbnts = gftDfsdfndbntTogglfdPbtis
                 Enumfrbtion<?> dfsdfndbnts = gftDfsdfndbntTogglfdPbtis
                 Enumfrbtion<?> dfsdfndbnts = gftDfsdfndbntTogglfdPbtis
                         (toRfmovf.nfxtElfmfnt());
                         (toRfmovf.nfxtElfmfnt());
                         (toRfmovf.nfxtElfmfnt());
                         (toRfmovf.nfxtElfmfnt());
                         (toRfmovf.nfxtElfmfnt());





                 if(dfsdfndbnts != null) {
                 if(dfsdfndbnts != null) {
                 if(dfsdfndbnts != null) {
                 if(dfsdfndbnts != null) {
                 if(dfsdfndbnts != null) {
                     wiilf(dfsdfndbnts.ibsMorfElfmfnts()) {
                     wiilf(dfsdfndbnts.ibsMorfElfmfnts()) {
                     wiilf(dfsdfndbnts.ibsMorfElfmfnts()) {
                     wiilf(dfsdfndbnts.ibsMorfElfmfnts()) {
                     wiilf(dfsdfndbnts.ibsMorfElfmfnts()) {
                         fxpbndfdStbtf.rfmovf(dfsdfndbnts.nfxtElfmfnt());
                         fxpbndfdStbtf.rfmovf(dfsdfndbnts.nfxtElfmfnt());
                         fxpbndfdStbtf.rfmovf(dfsdfndbnts.nfxtElfmfnt());
                         fxpbndfdStbtf.rfmovf(dfsdfndbnts.nfxtElfmfnt());
                         fxpbndfdStbtf.rfmovf(dfsdfndbnts.nfxtElfmfnt());
                     }
                     }
                     }
                     }
                     }
                 }
                 }
                 }
                 }
                 }
             }
             }
             }
             }
             }
         }
         }
         }
         }
         }
     }
     }
     }
     }
     }





     /**
     /**
     /**
     /**
     /**
      * Clfbrs tif dbdif of togglfd trff pbtis. Tiis dofs NOT sfnd out
      * Clfbrs tif dbdif of togglfd trff pbtis. Tiis dofs NOT sfnd out
      * Clfbrs tif dbdif of togglfd trff pbtis. Tiis dofs NOT sfnd out
      * Clfbrs tif dbdif of togglfd trff pbtis. Tiis dofs NOT sfnd out
      * Clfbrs tif dbdif of togglfd trff pbtis. Tiis dofs NOT sfnd out
      * bny <dodf>TrffExpbnsionListfnfr</dodf> fvfnts.
      * bny <dodf>TrffExpbnsionListfnfr</dodf> fvfnts.
      * bny <dodf>TrffExpbnsionListfnfr</dodf> fvfnts.
      * bny <dodf>TrffExpbnsionListfnfr</dodf> fvfnts.
      * bny <dodf>TrffExpbnsionListfnfr</dodf> fvfnts.
      */
      */
      */
      */
      */
     protfdtfd void dlfbrTogglfdPbtis() {
     protfdtfd void dlfbrTogglfdPbtis() {
     protfdtfd void dlfbrTogglfdPbtis() {
     protfdtfd void dlfbrTogglfdPbtis() {
     protfdtfd void dlfbrTogglfdPbtis() {
         fxpbndfdStbtf.dlfbr();
         fxpbndfdStbtf.dlfbr();
         fxpbndfdStbtf.dlfbr();
         fxpbndfdStbtf.dlfbr();
         fxpbndfdStbtf.dlfbr();
     }
     }
     }
     }
     }





     /**
     /**
     /**
     /**
     /**
      * Crfbtfs bnd rfturns bn instbndf of <dodf>TrffModflHbndlfr</dodf>.
      * Crfbtfs bnd rfturns bn instbndf of <dodf>TrffModflHbndlfr</dodf>.
      * Crfbtfs bnd rfturns bn instbndf of <dodf>TrffModflHbndlfr</dodf>.
      * Crfbtfs bnd rfturns bn instbndf of <dodf>TrffModflHbndlfr</dodf>.
      * Crfbtfs bnd rfturns bn instbndf of <dodf>TrffModflHbndlfr</dodf>.
      * Tif rfturnfd
      * Tif rfturnfd
      * Tif rfturnfd
      * Tif rfturnfd
      * Tif rfturnfd
      * objfdt is rfsponsiblf for updbting tif fxpbndfd stbtf wifn tif
      * objfdt is rfsponsiblf for updbting tif fxpbndfd stbtf wifn tif
      * objfdt is rfsponsiblf for updbting tif fxpbndfd stbtf wifn tif
      * objfdt is rfsponsiblf for updbting tif fxpbndfd stbtf wifn tif
      * objfdt is rfsponsiblf for updbting tif fxpbndfd stbtf wifn tif
      * <dodf>TrffModfl</dodf> dibngfs.
      * <dodf>TrffModfl</dodf> dibngfs.
      * <dodf>TrffModfl</dodf> dibngfs.
      * <dodf>TrffModfl</dodf> dibngfs.
      * <dodf>TrffModfl</dodf> dibngfs.
      * <p>
      * <p>
      * <p>
      * <p>
      * <p>
      * For morf informbtion on wibt fxpbndfd stbtf mfbns, sff tif
      * For morf informbtion on wibt fxpbndfd stbtf mfbns, sff tif
      * For morf informbtion on wibt fxpbndfd stbtf mfbns, sff tif
      * For morf informbtion on wibt fxpbndfd stbtf mfbns, sff tif
      * For morf informbtion on wibt fxpbndfd stbtf mfbns, sff tif
      * <b irff=#jtrff_dfsdription>JTrff dfsdription</b> bbovf.
      * <b irff=#jtrff_dfsdription>JTrff dfsdription</b> bbovf.
      * <b irff=#jtrff_dfsdription>JTrff dfsdription</b> bbovf.
      * <b irff=#jtrff_dfsdription>JTrff dfsdription</b> bbovf.
      * <b irff=#jtrff_dfsdription>JTrff dfsdription</b> bbovf.
      *
      *
      *
      *
      *
      * @rfturn tif instbndf of {@dodf TrffModflHbndlfr}
      * @rfturn tif instbndf of {@dodf TrffModflHbndlfr}
      * @rfturn tif instbndf of {@dodf TrffModflHbndlfr}
      * @rfturn tif instbndf of {@dodf TrffModflHbndlfr}
      * @rfturn tif instbndf of {@dodf TrffModflHbndlfr}
      */
      */
      */
      */
      */
     protfdtfd TrffModflListfnfr drfbtfTrffModflListfnfr() {
     protfdtfd TrffModflListfnfr drfbtfTrffModflListfnfr() {
     protfdtfd TrffModflListfnfr drfbtfTrffModflListfnfr() {
     protfdtfd TrffModflListfnfr drfbtfTrffModflListfnfr() {
     protfdtfd TrffModflListfnfr drfbtfTrffModflListfnfr() {
         rfturn nfw TrffModflHbndlfr();
         rfturn nfw TrffModflHbndlfr();
         rfturn nfw TrffModflHbndlfr();
         rfturn nfw TrffModflHbndlfr();
         rfturn nfw TrffModflHbndlfr();
     }
     }
     }
     }
     }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs bny pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * <dodf>pbti</dodf>. If <dodf>indludfPbti</dodf> is truf bnd
     * <dodf>pbti</dodf>. If <dodf>indludfPbti</dodf> is truf bnd
     * <dodf>pbti</dodf>. If <dodf>indludfPbti</dodf> is truf bnd
     * <dodf>pbti</dodf>. If <dodf>indludfPbti</dodf> is truf bnd
     * <dodf>pbti</dodf>. If <dodf>indludfPbti</dodf> is truf bnd
     * <dodf>pbti</dodf> is sflfdtfd, it will bf rfmovfd from tif sflfdtion.
     * <dodf>pbti</dodf> is sflfdtfd, it will bf rfmovfd from tif sflfdtion.
     * <dodf>pbti</dodf> is sflfdtfd, it will bf rfmovfd from tif sflfdtion.
     * <dodf>pbti</dodf> is sflfdtfd, it will bf rfmovfd from tif sflfdtion.
     * <dodf>pbti</dodf> is sflfdtfd, it will bf rfmovfd from tif sflfdtion.
     *
     *
     *
     *
     *
     * @pbrbm pbti b pbti
     * @pbrbm pbti b pbti
     * @pbrbm pbti b pbti
     * @pbrbm pbti b pbti
     * @pbrbm pbti b pbti
     * @pbrbm indludfPbti is {@dodf truf} bnd {@dodf pbti} is sflfdtfd,
     * @pbrbm indludfPbti is {@dodf truf} bnd {@dodf pbti} is sflfdtfd,
     * @pbrbm indludfPbti is {@dodf truf} bnd {@dodf pbti} is sflfdtfd,
     * @pbrbm indludfPbti is {@dodf truf} bnd {@dodf pbti} is sflfdtfd,
     * @pbrbm indludfPbti is {@dodf truf} bnd {@dodf pbti} is sflfdtfd,
     *                    it will bf rfmovfd from tif sflfdtion.
     *                    it will bf rfmovfd from tif sflfdtion.
     *                    it will bf rfmovfd from tif sflfdtion.
     *                    it will bf rfmovfd from tif sflfdtion.
     *                    it will bf rfmovfd from tif sflfdtion.
     * @rfturn truf if b dfsdfndbnt wbs sflfdtfd
     * @rfturn truf if b dfsdfndbnt wbs sflfdtfd
     * @rfturn truf if b dfsdfndbnt wbs sflfdtfd
     * @rfturn truf if b dfsdfndbnt wbs sflfdtfd
     * @rfturn truf if b dfsdfndbnt wbs sflfdtfd
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     * @sindf 1.3
     */
     */
     */
     */
     */
    protfdtfd boolfbn rfmovfDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    protfdtfd boolfbn rfmovfDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    protfdtfd boolfbn rfmovfDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    protfdtfd boolfbn rfmovfDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    protfdtfd boolfbn rfmovfDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
                                                    boolfbn indludfPbti) {
                                                    boolfbn indludfPbti) {
                                                    boolfbn indludfPbti) {
                                                    boolfbn indludfPbti) {
                                                    boolfbn indludfPbti) {
        TrffPbti[]    toRfmovf = gftDfsdfndbntSflfdtfdPbtis(pbti, indludfPbti);
        TrffPbti[]    toRfmovf = gftDfsdfndbntSflfdtfdPbtis(pbti, indludfPbti);
        TrffPbti[]    toRfmovf = gftDfsdfndbntSflfdtfdPbtis(pbti, indludfPbti);
        TrffPbti[]    toRfmovf = gftDfsdfndbntSflfdtfdPbtis(pbti, indludfPbti);
        TrffPbti[]    toRfmovf = gftDfsdfndbntSflfdtfdPbtis(pbti, indludfPbti);





        if (toRfmovf != null) {
        if (toRfmovf != null) {
        if (toRfmovf != null) {
        if (toRfmovf != null) {
        if (toRfmovf != null) {
            gftSflfdtionModfl().rfmovfSflfdtionPbtis(toRfmovf);
            gftSflfdtionModfl().rfmovfSflfdtionPbtis(toRfmovf);
            gftSflfdtionModfl().rfmovfSflfdtionPbtis(toRfmovf);
            gftSflfdtionModfl().rfmovfSflfdtionPbtis(toRfmovf);
            gftSflfdtionModfl().rfmovfSflfdtionPbtis(toRfmovf);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
        rfturn fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfturns bn brrby of pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfturns bn brrby of pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfturns bn brrby of pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfturns bn brrby of pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * Rfturns bn brrby of pbtis in tif sflfdtion tibt brf dfsdfndbnts of
     * <dodf>pbti</dodf>. Tif rfturnfd brrby mby dontbin <dodf>null</dodf>s.
     * <dodf>pbti</dodf>. Tif rfturnfd brrby mby dontbin <dodf>null</dodf>s.
     * <dodf>pbti</dodf>. Tif rfturnfd brrby mby dontbin <dodf>null</dodf>s.
     * <dodf>pbti</dodf>. Tif rfturnfd brrby mby dontbin <dodf>null</dodf>s.
     * <dodf>pbti</dodf>. Tif rfturnfd brrby mby dontbin <dodf>null</dodf>s.
     */
     */
     */
     */
     */
    privbtf TrffPbti[] gftDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    privbtf TrffPbti[] gftDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    privbtf TrffPbti[] gftDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    privbtf TrffPbti[] gftDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
    privbtf TrffPbti[] gftDfsdfndbntSflfdtfdPbtis(TrffPbti pbti,
                                                  boolfbn indludfPbti) {
                                                  boolfbn indludfPbti) {
                                                  boolfbn indludfPbti) {
                                                  boolfbn indludfPbti) {
                                                  boolfbn indludfPbti) {
        TrffSflfdtionModfl   sm = gftSflfdtionModfl();
        TrffSflfdtionModfl   sm = gftSflfdtionModfl();
        TrffSflfdtionModfl   sm = gftSflfdtionModfl();
        TrffSflfdtionModfl   sm = gftSflfdtionModfl();
        TrffSflfdtionModfl   sm = gftSflfdtionModfl();
        TrffPbti[]           sflPbtis = (sm != null) ? sm.gftSflfdtionPbtis() :
        TrffPbti[]           sflPbtis = (sm != null) ? sm.gftSflfdtionPbtis() :
        TrffPbti[]           sflPbtis = (sm != null) ? sm.gftSflfdtionPbtis() :
        TrffPbti[]           sflPbtis = (sm != null) ? sm.gftSflfdtionPbtis() :
        TrffPbti[]           sflPbtis = (sm != null) ? sm.gftSflfdtionPbtis() :
                                        null;
                                        null;
                                        null;
                                        null;
                                        null;





        if(sflPbtis != null) {
        if(sflPbtis != null) {
        if(sflPbtis != null) {
        if(sflPbtis != null) {
        if(sflPbtis != null) {
            boolfbn        siouldRfmovf = fblsf;
            boolfbn        siouldRfmovf = fblsf;
            boolfbn        siouldRfmovf = fblsf;
            boolfbn        siouldRfmovf = fblsf;
            boolfbn        siouldRfmovf = fblsf;





            for(int dountfr = sflPbtis.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = sflPbtis.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = sflPbtis.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = sflPbtis.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = sflPbtis.lfngti - 1; dountfr >= 0; dountfr--) {
                if(sflPbtis[dountfr] != null &&
                if(sflPbtis[dountfr] != null &&
                if(sflPbtis[dountfr] != null &&
                if(sflPbtis[dountfr] != null &&
                if(sflPbtis[dountfr] != null &&
                   pbti.isDfsdfndbnt(sflPbtis[dountfr]) &&
                   pbti.isDfsdfndbnt(sflPbtis[dountfr]) &&
                   pbti.isDfsdfndbnt(sflPbtis[dountfr]) &&
                   pbti.isDfsdfndbnt(sflPbtis[dountfr]) &&
                   pbti.isDfsdfndbnt(sflPbtis[dountfr]) &&
                   (!pbti.fqubls(sflPbtis[dountfr]) || indludfPbti))
                   (!pbti.fqubls(sflPbtis[dountfr]) || indludfPbti))
                   (!pbti.fqubls(sflPbtis[dountfr]) || indludfPbti))
                   (!pbti.fqubls(sflPbtis[dountfr]) || indludfPbti))
                   (!pbti.fqubls(sflPbtis[dountfr]) || indludfPbti))
                    siouldRfmovf = truf;
                    siouldRfmovf = truf;
                    siouldRfmovf = truf;
                    siouldRfmovf = truf;
                    siouldRfmovf = truf;
                flsf
                flsf
                flsf
                flsf
                flsf
                    sflPbtis[dountfr] = null;
                    sflPbtis[dountfr] = null;
                    sflPbtis[dountfr] = null;
                    sflPbtis[dountfr] = null;
                    sflPbtis[dountfr] = null;
            }
            }
            }
            }
            }
            if(!siouldRfmovf) {
            if(!siouldRfmovf) {
            if(!siouldRfmovf) {
            if(!siouldRfmovf) {
            if(!siouldRfmovf) {
                sflPbtis = null;
                sflPbtis = null;
                sflPbtis = null;
                sflPbtis = null;
                sflPbtis = null;
            }
            }
            }
            }
            }
            rfturn sflPbtis;
            rfturn sflPbtis;
            rfturn sflPbtis;
            rfturn sflPbtis;
            rfturn sflPbtis;
        }
        }
        }
        }
        }
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
        rfturn null;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Rfmovfs bny pbtis from tif sflfdtion modfl tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis from tif sflfdtion modfl tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis from tif sflfdtion modfl tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis from tif sflfdtion modfl tibt brf dfsdfndbnts of
     * Rfmovfs bny pbtis from tif sflfdtion modfl tibt brf dfsdfndbnts of
     * tif nodfs idfntififd by in <dodf>f</dodf>.
     * tif nodfs idfntififd by in <dodf>f</dodf>.
     * tif nodfs idfntififd by in <dodf>f</dodf>.
     * tif nodfs idfntififd by in <dodf>f</dodf>.
     * tif nodfs idfntififd by in <dodf>f</dodf>.
     */
     */
     */
     */
     */
    void rfmovfDfsdfndbntSflfdtfdPbtis(TrffModflEvfnt f) {
    void rfmovfDfsdfndbntSflfdtfdPbtis(TrffModflEvfnt f) {
    void rfmovfDfsdfndbntSflfdtfdPbtis(TrffModflEvfnt f) {
    void rfmovfDfsdfndbntSflfdtfdPbtis(TrffModflEvfnt f) {
    void rfmovfDfsdfndbntSflfdtfdPbtis(TrffModflEvfnt f) {
        TrffPbti            pPbti = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
        TrffPbti            pPbti = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
        TrffPbti            pPbti = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
        TrffPbti            pPbti = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
        TrffPbti            pPbti = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
        Objfdt[]            oldCiildrfn = f.gftCiildrfn();
        Objfdt[]            oldCiildrfn = f.gftCiildrfn();
        Objfdt[]            oldCiildrfn = f.gftCiildrfn();
        Objfdt[]            oldCiildrfn = f.gftCiildrfn();
        Objfdt[]            oldCiildrfn = f.gftCiildrfn();
        TrffSflfdtionModfl  sm = gftSflfdtionModfl();
        TrffSflfdtionModfl  sm = gftSflfdtionModfl();
        TrffSflfdtionModfl  sm = gftSflfdtionModfl();
        TrffSflfdtionModfl  sm = gftSflfdtionModfl();
        TrffSflfdtionModfl  sm = gftSflfdtionModfl();





        if (sm != null && pPbti != null && oldCiildrfn != null &&
        if (sm != null && pPbti != null && oldCiildrfn != null &&
        if (sm != null && pPbti != null && oldCiildrfn != null &&
        if (sm != null && pPbti != null && oldCiildrfn != null &&
        if (sm != null && pPbti != null && oldCiildrfn != null &&
            oldCiildrfn.lfngti > 0) {
            oldCiildrfn.lfngti > 0) {
            oldCiildrfn.lfngti > 0) {
            oldCiildrfn.lfngti > 0) {
            oldCiildrfn.lfngti > 0) {
            for (int dountfr = oldCiildrfn.lfngti - 1; dountfr >= 0;
            for (int dountfr = oldCiildrfn.lfngti - 1; dountfr >= 0;
            for (int dountfr = oldCiildrfn.lfngti - 1; dountfr >= 0;
            for (int dountfr = oldCiildrfn.lfngti - 1; dountfr >= 0;
            for (int dountfr = oldCiildrfn.lfngti - 1; dountfr >= 0;
                 dountfr--) {
                 dountfr--) {
                 dountfr--) {
                 dountfr--) {
                 dountfr--) {
                // Migit bf bfttfr to dbll gftDfsdfndbntSflfdtfdPbtis
                // Migit bf bfttfr to dbll gftDfsdfndbntSflfdtfdPbtis
                // Migit bf bfttfr to dbll gftDfsdfndbntSflfdtfdPbtis
                // Migit bf bfttfr to dbll gftDfsdfndbntSflfdtfdPbtis
                // Migit bf bfttfr to dbll gftDfsdfndbntSflfdtfdPbtis
                // numfrous timfs, tifn pusi to tif modfl.
                // numfrous timfs, tifn pusi to tif modfl.
                // numfrous timfs, tifn pusi to tif modfl.
                // numfrous timfs, tifn pusi to tif modfl.
                // numfrous timfs, tifn pusi to tif modfl.
                rfmovfDfsdfndbntSflfdtfdPbtis(pPbti.pbtiByAddingCiild
                rfmovfDfsdfndbntSflfdtfdPbtis(pPbti.pbtiByAddingCiild
                rfmovfDfsdfndbntSflfdtfdPbtis(pPbti.pbtiByAddingCiild
                rfmovfDfsdfndbntSflfdtfdPbtis(pPbti.pbtiByAddingCiild
                rfmovfDfsdfndbntSflfdtfdPbtis(pPbti.pbtiByAddingCiild
                                              (oldCiildrfn[dountfr]), truf);
                                              (oldCiildrfn[dountfr]), truf);
                                              (oldCiildrfn[dountfr]), truf);
                                              (oldCiildrfn[dountfr]), truf);
                                              (oldCiildrfn[dountfr]), truf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










     /**
     /**
     /**
     /**
     /**
      * Listfns to tif modfl bnd updbtfs tif <dodf>fxpbndfdStbtf</dodf>
      * Listfns to tif modfl bnd updbtfs tif <dodf>fxpbndfdStbtf</dodf>
      * Listfns to tif modfl bnd updbtfs tif <dodf>fxpbndfdStbtf</dodf>
      * Listfns to tif modfl bnd updbtfs tif <dodf>fxpbndfdStbtf</dodf>
      * Listfns to tif modfl bnd updbtfs tif <dodf>fxpbndfdStbtf</dodf>
      * bddordingly wifn nodfs brf rfmovfd, or dibngfd.
      * bddordingly wifn nodfs brf rfmovfd, or dibngfd.
      * bddordingly wifn nodfs brf rfmovfd, or dibngfd.
      * bddordingly wifn nodfs brf rfmovfd, or dibngfd.
      * bddordingly wifn nodfs brf rfmovfd, or dibngfd.
      */
      */
      */
      */
      */
    protfdtfd dlbss TrffModflHbndlfr implfmfnts TrffModflListfnfr {
    protfdtfd dlbss TrffModflHbndlfr implfmfnts TrffModflListfnfr {
    protfdtfd dlbss TrffModflHbndlfr implfmfnts TrffModflListfnfr {
    protfdtfd dlbss TrffModflHbndlfr implfmfnts TrffModflListfnfr {
    protfdtfd dlbss TrffModflHbndlfr implfmfnts TrffModflListfnfr {
        publid void trffNodfsCibngfd(TrffModflEvfnt f) { }
        publid void trffNodfsCibngfd(TrffModflEvfnt f) { }
        publid void trffNodfsCibngfd(TrffModflEvfnt f) { }
        publid void trffNodfsCibngfd(TrffModflEvfnt f) { }
        publid void trffNodfsCibngfd(TrffModflEvfnt f) { }





        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) { }
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) { }
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) { }
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) { }
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) { }





        publid void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid void trffStrudturfCibngfd(TrffModflEvfnt f) {
            if(f == null)
            if(f == null)
            if(f == null)
            if(f == null)
            if(f == null)
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;





            // NOTE: If I dibngf tiis to NOT rfmovf tif dfsdfndbnts
            // NOTE: If I dibngf tiis to NOT rfmovf tif dfsdfndbnts
            // NOTE: If I dibngf tiis to NOT rfmovf tif dfsdfndbnts
            // NOTE: If I dibngf tiis to NOT rfmovf tif dfsdfndbnts
            // NOTE: If I dibngf tiis to NOT rfmovf tif dfsdfndbnts
            // bnd updbtf BbsidTrffUIs trffStrudturfCibngfd mftiod
            // bnd updbtf BbsidTrffUIs trffStrudturfCibngfd mftiod
            // bnd updbtf BbsidTrffUIs trffStrudturfCibngfd mftiod
            // bnd updbtf BbsidTrffUIs trffStrudturfCibngfd mftiod
            // bnd updbtf BbsidTrffUIs trffStrudturfCibngfd mftiod
            // to updbtf dfsdfndbnts in rfsponsf to b trffStrudturfCibngfd
            // to updbtf dfsdfndbnts in rfsponsf to b trffStrudturfCibngfd
            // to updbtf dfsdfndbnts in rfsponsf to b trffStrudturfCibngfd
            // to updbtf dfsdfndbnts in rfsponsf to b trffStrudturfCibngfd
            // to updbtf dfsdfndbnts in rfsponsf to b trffStrudturfCibngfd
            // fvfnt, bll tif diildrfn of tif fvfnt won't dollbpsf!
            // fvfnt, bll tif diildrfn of tif fvfnt won't dollbpsf!
            // fvfnt, bll tif diildrfn of tif fvfnt won't dollbpsf!
            // fvfnt, bll tif diildrfn of tif fvfnt won't dollbpsf!
            // fvfnt, bll tif diildrfn of tif fvfnt won't dollbpsf!
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());





            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
            if(pbrfnt == null)
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;





            if (pbrfnt.gftPbtiCount() == 1) {
            if (pbrfnt.gftPbtiCount() == 1) {
            if (pbrfnt.gftPbtiCount() == 1) {
            if (pbrfnt.gftPbtiCount() == 1) {
            if (pbrfnt.gftPbtiCount() == 1) {
                // Nfw root, rfmovf fvfrytiing!
                // Nfw root, rfmovf fvfrytiing!
                // Nfw root, rfmovf fvfrytiing!
                // Nfw root, rfmovf fvfrytiing!
                // Nfw root, rfmovf fvfrytiing!
                dlfbrTogglfdPbtis();
                dlfbrTogglfdPbtis();
                dlfbrTogglfdPbtis();
                dlfbrTogglfdPbtis();
                dlfbrTogglfdPbtis();
                if(trffModfl.gftRoot() != null &&
                if(trffModfl.gftRoot() != null &&
                if(trffModfl.gftRoot() != null &&
                if(trffModfl.gftRoot() != null &&
                if(trffModfl.gftRoot() != null &&
                   !trffModfl.isLfbf(trffModfl.gftRoot())) {
                   !trffModfl.isLfbf(trffModfl.gftRoot())) {
                   !trffModfl.isLfbf(trffModfl.gftRoot())) {
                   !trffModfl.isLfbf(trffModfl.gftRoot())) {
                   !trffModfl.isLfbf(trffModfl.gftRoot())) {
                    // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
                    // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
                    // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
                    // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
                    // Mbrk tif root bs fxpbndfd, if it isn't b lfbf.
                    fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                    fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            flsf if(fxpbndfdStbtf.gft(pbrfnt) != null) {
            flsf if(fxpbndfdStbtf.gft(pbrfnt) != null) {
            flsf if(fxpbndfdStbtf.gft(pbrfnt) != null) {
            flsf if(fxpbndfdStbtf.gft(pbrfnt) != null) {
            flsf if(fxpbndfdStbtf.gft(pbrfnt) != null) {
                Vfdtor<TrffPbti>    toRfmovf = nfw Vfdtor<TrffPbti>(1);
                Vfdtor<TrffPbti>    toRfmovf = nfw Vfdtor<TrffPbti>(1);
                Vfdtor<TrffPbti>    toRfmovf = nfw Vfdtor<TrffPbti>(1);
                Vfdtor<TrffPbti>    toRfmovf = nfw Vfdtor<TrffPbti>(1);
                Vfdtor<TrffPbti>    toRfmovf = nfw Vfdtor<TrffPbti>(1);
                boolfbn             isExpbndfd = isExpbndfd(pbrfnt);
                boolfbn             isExpbndfd = isExpbndfd(pbrfnt);
                boolfbn             isExpbndfd = isExpbndfd(pbrfnt);
                boolfbn             isExpbndfd = isExpbndfd(pbrfnt);
                boolfbn             isExpbndfd = isExpbndfd(pbrfnt);





                toRfmovf.bddElfmfnt(pbrfnt);
                toRfmovf.bddElfmfnt(pbrfnt);
                toRfmovf.bddElfmfnt(pbrfnt);
                toRfmovf.bddElfmfnt(pbrfnt);
                toRfmovf.bddElfmfnt(pbrfnt);
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                if(isExpbndfd) {
                if(isExpbndfd) {
                if(isExpbndfd) {
                if(isExpbndfd) {
                if(isExpbndfd) {
                    TrffModfl         modfl = gftModfl();
                    TrffModfl         modfl = gftModfl();
                    TrffModfl         modfl = gftModfl();
                    TrffModfl         modfl = gftModfl();
                    TrffModfl         modfl = gftModfl();





                    if(modfl == null || modfl.isLfbf
                    if(modfl == null || modfl.isLfbf
                    if(modfl == null || modfl.isLfbf
                    if(modfl == null || modfl.isLfbf
                    if(modfl == null || modfl.isLfbf
                       (pbrfnt.gftLbstPbtiComponfnt()))
                       (pbrfnt.gftLbstPbtiComponfnt()))
                       (pbrfnt.gftLbstPbtiComponfnt()))
                       (pbrfnt.gftLbstPbtiComponfnt()))
                       (pbrfnt.gftLbstPbtiComponfnt()))
                        dollbpsfPbti(pbrfnt);
                        dollbpsfPbti(pbrfnt);
                        dollbpsfPbti(pbrfnt);
                        dollbpsfPbti(pbrfnt);
                        dollbpsfPbti(pbrfnt);
                    flsf
                    flsf
                    flsf
                    flsf
                    flsf
                        fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                        fxpbndfdStbtf.put(pbrfnt, Boolfbn.TRUE);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfmovfDfsdfndbntSflfdtfdPbtis(pbrfnt, fblsf);
            rfmovfDfsdfndbntSflfdtfdPbtis(pbrfnt, fblsf);
            rfmovfDfsdfndbntSflfdtfdPbtis(pbrfnt, fblsf);
            rfmovfDfsdfndbntSflfdtfdPbtis(pbrfnt, fblsf);
            rfmovfDfsdfndbntSflfdtfdPbtis(pbrfnt, fblsf);
        }
        }
        }
        }
        }





        publid void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid void trffNodfsRfmovfd(TrffModflEvfnt f) {
            if(f == null)
            if(f == null)
            if(f == null)
            if(f == null)
            if(f == null)
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;





            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            TrffPbti            pbrfnt = SwingUtilitifs2.gftTrffPbti(f, gftModfl());
            Objfdt[]            diildrfn = f.gftCiildrfn();
            Objfdt[]            diildrfn = f.gftCiildrfn();
            Objfdt[]            diildrfn = f.gftCiildrfn();
            Objfdt[]            diildrfn = f.gftCiildrfn();
            Objfdt[]            diildrfn = f.gftCiildrfn();





            if(diildrfn == null)
            if(diildrfn == null)
            if(diildrfn == null)
            if(diildrfn == null)
            if(diildrfn == null)
                rfturn;
                rfturn;
                rfturn;
                rfturn;
                rfturn;





            TrffPbti            rPbti;
            TrffPbti            rPbti;
            TrffPbti            rPbti;
            TrffPbti            rPbti;
            TrffPbti            rPbti;
            Vfdtor<TrffPbti>    toRfmovf
            Vfdtor<TrffPbti>    toRfmovf
            Vfdtor<TrffPbti>    toRfmovf
            Vfdtor<TrffPbti>    toRfmovf
            Vfdtor<TrffPbti>    toRfmovf
                = nfw Vfdtor<TrffPbti>(Mbti.mbx(1, diildrfn.lfngti));
                = nfw Vfdtor<TrffPbti>(Mbti.mbx(1, diildrfn.lfngti));
                = nfw Vfdtor<TrffPbti>(Mbti.mbx(1, diildrfn.lfngti));
                = nfw Vfdtor<TrffPbti>(Mbti.mbx(1, diildrfn.lfngti));
                = nfw Vfdtor<TrffPbti>(Mbti.mbx(1, diildrfn.lfngti));





            for(int dountfr = diildrfn.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = diildrfn.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = diildrfn.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = diildrfn.lfngti - 1; dountfr >= 0; dountfr--) {
            for(int dountfr = diildrfn.lfngti - 1; dountfr >= 0; dountfr--) {
                rPbti = pbrfnt.pbtiByAddingCiild(diildrfn[dountfr]);
                rPbti = pbrfnt.pbtiByAddingCiild(diildrfn[dountfr]);
                rPbti = pbrfnt.pbtiByAddingCiild(diildrfn[dountfr]);
                rPbti = pbrfnt.pbtiByAddingCiild(diildrfn[dountfr]);
                rPbti = pbrfnt.pbtiByAddingCiild(diildrfn[dountfr]);
                if(fxpbndfdStbtf.gft(rPbti) != null)
                if(fxpbndfdStbtf.gft(rPbti) != null)
                if(fxpbndfdStbtf.gft(rPbti) != null)
                if(fxpbndfdStbtf.gft(rPbti) != null)
                if(fxpbndfdStbtf.gft(rPbti) != null)
                    toRfmovf.bddElfmfnt(rPbti);
                    toRfmovf.bddElfmfnt(rPbti);
                    toRfmovf.bddElfmfnt(rPbti);
                    toRfmovf.bddElfmfnt(rPbti);
                    toRfmovf.bddElfmfnt(rPbti);
            }
            }
            }
            }
            }
            if(toRfmovf.sizf() > 0)
            if(toRfmovf.sizf() > 0)
            if(toRfmovf.sizf() > 0)
            if(toRfmovf.sizf() > 0)
            if(toRfmovf.sizf() > 0)
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());
                rfmovfDfsdfndbntTogglfdPbtis(toRfmovf.flfmfnts());





            TrffModfl         modfl = gftModfl();
            TrffModfl         modfl = gftModfl();
            TrffModfl         modfl = gftModfl();
            TrffModfl         modfl = gftModfl();
            TrffModfl         modfl = gftModfl();





            if(modfl == null || modfl.isLfbf(pbrfnt.gftLbstPbtiComponfnt()))
            if(modfl == null || modfl.isLfbf(pbrfnt.gftLbstPbtiComponfnt()))
            if(modfl == null || modfl.isLfbf(pbrfnt.gftLbstPbtiComponfnt()))
            if(modfl == null || modfl.isLfbf(pbrfnt.gftLbstPbtiComponfnt()))
            if(modfl == null || modfl.isLfbf(pbrfnt.gftLbstPbtiComponfnt()))
                fxpbndfdStbtf.rfmovf(pbrfnt);
                fxpbndfdStbtf.rfmovf(pbrfnt);
                fxpbndfdStbtf.rfmovf(pbrfnt);
                fxpbndfdStbtf.rfmovf(pbrfnt);
                fxpbndfdStbtf.rfmovf(pbrfnt);





            rfmovfDfsdfndbntSflfdtfdPbtis(f);
            rfmovfDfsdfndbntSflfdtfdPbtis(f);
            rfmovfDfsdfndbntSflfdtfdPbtis(f);
            rfmovfDfsdfndbntSflfdtfdPbtis(f);
            rfmovfDfsdfndbntSflfdtfdPbtis(f);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * <dodf>DynbmidUtilTrffNodf</dodf> dbn wrbp
     * <dodf>DynbmidUtilTrffNodf</dodf> dbn wrbp
     * <dodf>DynbmidUtilTrffNodf</dodf> dbn wrbp
     * <dodf>DynbmidUtilTrffNodf</dodf> dbn wrbp
     * <dodf>DynbmidUtilTrffNodf</dodf> dbn wrbp
     * vfdtors/ibsitbblfs/brrbys/strings bnd
     * vfdtors/ibsitbblfs/brrbys/strings bnd
     * vfdtors/ibsitbblfs/brrbys/strings bnd
     * vfdtors/ibsitbblfs/brrbys/strings bnd
     * vfdtors/ibsitbblfs/brrbys/strings bnd
     * drfbtf tif bppropribtf diildrfn trff nodfs bs nfdfssbry. It is
     * drfbtf tif bppropribtf diildrfn trff nodfs bs nfdfssbry. It is
     * drfbtf tif bppropribtf diildrfn trff nodfs bs nfdfssbry. It is
     * drfbtf tif bppropribtf diildrfn trff nodfs bs nfdfssbry. It is
     * drfbtf tif bppropribtf diildrfn trff nodfs bs nfdfssbry. It is
     * dynbmid in tibt it will only drfbtf tif diildrfn bs nfdfssbry.
     * dynbmid in tibt it will only drfbtf tif diildrfn bs nfdfssbry.
     * dynbmid in tibt it will only drfbtf tif diildrfn bs nfdfssbry.
     * dynbmid in tibt it will only drfbtf tif diildrfn bs nfdfssbry.
     * dynbmid in tibt it will only drfbtf tif diildrfn bs nfdfssbry.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
     */
     */
     */
     */
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    publid stbtid dlbss DynbmidUtilTrffNodf fxtfnds DffbultMutbblfTrffNodf {
    publid stbtid dlbss DynbmidUtilTrffNodf fxtfnds DffbultMutbblfTrffNodf {
    publid stbtid dlbss DynbmidUtilTrffNodf fxtfnds DffbultMutbblfTrffNodf {
    publid stbtid dlbss DynbmidUtilTrffNodf fxtfnds DffbultMutbblfTrffNodf {
    publid stbtid dlbss DynbmidUtilTrffNodf fxtfnds DffbultMutbblfTrffNodf {
        /**
        /**
        /**
        /**
        /**
         * Dofs tif tiis <dodf>JTrff</dodf> ibvf diildrfn?
         * Dofs tif tiis <dodf>JTrff</dodf> ibvf diildrfn?
         * Dofs tif tiis <dodf>JTrff</dodf> ibvf diildrfn?
         * Dofs tif tiis <dodf>JTrff</dodf> ibvf diildrfn?
         * Dofs tif tiis <dodf>JTrff</dodf> ibvf diildrfn?
         * Tiis propfrty is durrfntly not implfmfntfd.
         * Tiis propfrty is durrfntly not implfmfntfd.
         * Tiis propfrty is durrfntly not implfmfntfd.
         * Tiis propfrty is durrfntly not implfmfntfd.
         * Tiis propfrty is durrfntly not implfmfntfd.
         */
         */
         */
         */
         */
        protfdtfd boolfbn            ibsCiildrfn;
        protfdtfd boolfbn            ibsCiildrfn;
        protfdtfd boolfbn            ibsCiildrfn;
        protfdtfd boolfbn            ibsCiildrfn;
        protfdtfd boolfbn            ibsCiildrfn;
        /** Vbluf to drfbtf diildrfn witi. */
        /** Vbluf to drfbtf diildrfn witi. */
        /** Vbluf to drfbtf diildrfn witi. */
        /** Vbluf to drfbtf diildrfn witi. */
        /** Vbluf to drfbtf diildrfn witi. */
        protfdtfd Objfdt             diildVbluf;
        protfdtfd Objfdt             diildVbluf;
        protfdtfd Objfdt             diildVbluf;
        protfdtfd Objfdt             diildVbluf;
        protfdtfd Objfdt             diildVbluf;
        /** Hbvf tif diildrfn bffn lobdfd yft? */
        /** Hbvf tif diildrfn bffn lobdfd yft? */
        /** Hbvf tif diildrfn bffn lobdfd yft? */
        /** Hbvf tif diildrfn bffn lobdfd yft? */
        /** Hbvf tif diildrfn bffn lobdfd yft? */
        protfdtfd boolfbn            lobdfdCiildrfn;
        protfdtfd boolfbn            lobdfdCiildrfn;
        protfdtfd boolfbn            lobdfdCiildrfn;
        protfdtfd boolfbn            lobdfdCiildrfn;
        protfdtfd boolfbn            lobdfdCiildrfn;





        /**
        /**
        /**
        /**
        /**
         * Adds to pbrfnt bll tif diildrfn in <dodf>diildrfn</dodf>.
         * Adds to pbrfnt bll tif diildrfn in <dodf>diildrfn</dodf>.
         * Adds to pbrfnt bll tif diildrfn in <dodf>diildrfn</dodf>.
         * Adds to pbrfnt bll tif diildrfn in <dodf>diildrfn</dodf>.
         * Adds to pbrfnt bll tif diildrfn in <dodf>diildrfn</dodf>.
         * If <dodf>diildrfn</dodf> is bn brrby or vfdtor bll of its
         * If <dodf>diildrfn</dodf> is bn brrby or vfdtor bll of its
         * If <dodf>diildrfn</dodf> is bn brrby or vfdtor bll of its
         * If <dodf>diildrfn</dodf> is bn brrby or vfdtor bll of its
         * If <dodf>diildrfn</dodf> is bn brrby or vfdtor bll of its
         * flfmfnts brf bddfd is diildrfn, otifrwisf if <dodf>diildrfn</dodf>
         * flfmfnts brf bddfd is diildrfn, otifrwisf if <dodf>diildrfn</dodf>
         * flfmfnts brf bddfd is diildrfn, otifrwisf if <dodf>diildrfn</dodf>
         * flfmfnts brf bddfd is diildrfn, otifrwisf if <dodf>diildrfn</dodf>
         * flfmfnts brf bddfd is diildrfn, otifrwisf if <dodf>diildrfn</dodf>
         * is b ibsitbblf bll tif kfy/vbluf pbirs brf bddfd in tif ordfr
         * is b ibsitbblf bll tif kfy/vbluf pbirs brf bddfd in tif ordfr
         * is b ibsitbblf bll tif kfy/vbluf pbirs brf bddfd in tif ordfr
         * is b ibsitbblf bll tif kfy/vbluf pbirs brf bddfd in tif ordfr
         * is b ibsitbblf bll tif kfy/vbluf pbirs brf bddfd in tif ordfr
         * <dodf>Enumfrbtion</dodf> rfturns tifm.
         * <dodf>Enumfrbtion</dodf> rfturns tifm.
         * <dodf>Enumfrbtion</dodf> rfturns tifm.
         * <dodf>Enumfrbtion</dodf> rfturns tifm.
         * <dodf>Enumfrbtion</dodf> rfturns tifm.
         *
         *
         *
         *
         *
         * @pbrbm pbrfnt tif pbrfnt nodf
         * @pbrbm pbrfnt tif pbrfnt nodf
         * @pbrbm pbrfnt tif pbrfnt nodf
         * @pbrbm pbrfnt tif pbrfnt nodf
         * @pbrbm pbrfnt tif pbrfnt nodf
         * @pbrbm diildrfn tif diildrfn
         * @pbrbm diildrfn tif diildrfn
         * @pbrbm diildrfn tif diildrfn
         * @pbrbm diildrfn tif diildrfn
         * @pbrbm diildrfn tif diildrfn
         */
         */
         */
         */
         */
        publid stbtid void drfbtfCiildrfn(DffbultMutbblfTrffNodf pbrfnt,
        publid stbtid void drfbtfCiildrfn(DffbultMutbblfTrffNodf pbrfnt,
        publid stbtid void drfbtfCiildrfn(DffbultMutbblfTrffNodf pbrfnt,
        publid stbtid void drfbtfCiildrfn(DffbultMutbblfTrffNodf pbrfnt,
        publid stbtid void drfbtfCiildrfn(DffbultMutbblfTrffNodf pbrfnt,
                                          Objfdt diildrfn) {
                                          Objfdt diildrfn) {
                                          Objfdt diildrfn) {
                                          Objfdt diildrfn) {
                                          Objfdt diildrfn) {
            if(diildrfn instbndfof Vfdtor) {
            if(diildrfn instbndfof Vfdtor) {
            if(diildrfn instbndfof Vfdtor) {
            if(diildrfn instbndfof Vfdtor) {
            if(diildrfn instbndfof Vfdtor) {
                Vfdtor<?>          diildVfdtor = (Vfdtor)diildrfn;
                Vfdtor<?>          diildVfdtor = (Vfdtor)diildrfn;
                Vfdtor<?>          diildVfdtor = (Vfdtor)diildrfn;
                Vfdtor<?>          diildVfdtor = (Vfdtor)diildrfn;
                Vfdtor<?>          diildVfdtor = (Vfdtor)diildrfn;





                for(int dountfr = 0, mbxCountfr = diildVfdtor.sizf();
                for(int dountfr = 0, mbxCountfr = diildVfdtor.sizf();
                for(int dountfr = 0, mbxCountfr = diildVfdtor.sizf();
                for(int dountfr = 0, mbxCountfr = diildVfdtor.sizf();
                for(int dountfr = 0, mbxCountfr = diildVfdtor.sizf();
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf
                               (diildVfdtor.flfmfntAt(dountfr),
                               (diildVfdtor.flfmfntAt(dountfr),
                               (diildVfdtor.flfmfntAt(dountfr),
                               (diildVfdtor.flfmfntAt(dountfr),
                               (diildVfdtor.flfmfntAt(dountfr),
                                diildVfdtor.flfmfntAt(dountfr)));
                                diildVfdtor.flfmfntAt(dountfr)));
                                diildVfdtor.flfmfntAt(dountfr)));
                                diildVfdtor.flfmfntAt(dountfr)));
                                diildVfdtor.flfmfntAt(dountfr)));
            }
            }
            }
            }
            }
            flsf if(diildrfn instbndfof Hbsitbblf) {
            flsf if(diildrfn instbndfof Hbsitbblf) {
            flsf if(diildrfn instbndfof Hbsitbblf) {
            flsf if(diildrfn instbndfof Hbsitbblf) {
            flsf if(diildrfn instbndfof Hbsitbblf) {
                Hbsitbblf<?,?>           diildHT = (Hbsitbblf)diildrfn;
                Hbsitbblf<?,?>           diildHT = (Hbsitbblf)diildrfn;
                Hbsitbblf<?,?>           diildHT = (Hbsitbblf)diildrfn;
                Hbsitbblf<?,?>           diildHT = (Hbsitbblf)diildrfn;
                Hbsitbblf<?,?>           diildHT = (Hbsitbblf)diildrfn;
                Enumfrbtion<?>         kfys = diildHT.kfys();
                Enumfrbtion<?>         kfys = diildHT.kfys();
                Enumfrbtion<?>         kfys = diildHT.kfys();
                Enumfrbtion<?>         kfys = diildHT.kfys();
                Enumfrbtion<?>         kfys = diildHT.kfys();
                Objfdt              bKfy;
                Objfdt              bKfy;
                Objfdt              bKfy;
                Objfdt              bKfy;
                Objfdt              bKfy;





                wiilf(kfys.ibsMorfElfmfnts()) {
                wiilf(kfys.ibsMorfElfmfnts()) {
                wiilf(kfys.ibsMorfElfmfnts()) {
                wiilf(kfys.ibsMorfElfmfnts()) {
                wiilf(kfys.ibsMorfElfmfnts()) {
                    bKfy = kfys.nfxtElfmfnt();
                    bKfy = kfys.nfxtElfmfnt();
                    bKfy = kfys.nfxtElfmfnt();
                    bKfy = kfys.nfxtElfmfnt();
                    bKfy = kfys.nfxtElfmfnt();
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(bKfy,
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(bKfy,
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(bKfy,
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(bKfy,
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(bKfy,
                                                       diildHT.gft(bKfy)));
                                                       diildHT.gft(bKfy)));
                                                       diildHT.gft(bKfy)));
                                                       diildHT.gft(bKfy)));
                                                       diildHT.gft(bKfy)));
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            flsf if(diildrfn instbndfof Objfdt[]) {
            flsf if(diildrfn instbndfof Objfdt[]) {
            flsf if(diildrfn instbndfof Objfdt[]) {
            flsf if(diildrfn instbndfof Objfdt[]) {
            flsf if(diildrfn instbndfof Objfdt[]) {
                Objfdt[]             diildArrby = (Objfdt[])diildrfn;
                Objfdt[]             diildArrby = (Objfdt[])diildrfn;
                Objfdt[]             diildArrby = (Objfdt[])diildrfn;
                Objfdt[]             diildArrby = (Objfdt[])diildrfn;
                Objfdt[]             diildArrby = (Objfdt[])diildrfn;





                for(int dountfr = 0, mbxCountfr = diildArrby.lfngti;
                for(int dountfr = 0, mbxCountfr = diildArrby.lfngti;
                for(int dountfr = 0, mbxCountfr = diildArrby.lfngti;
                for(int dountfr = 0, mbxCountfr = diildArrby.lfngti;
                for(int dountfr = 0, mbxCountfr = diildArrby.lfngti;
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    dountfr < mbxCountfr; dountfr++)
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(diildArrby[dountfr],
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(diildArrby[dountfr],
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(diildArrby[dountfr],
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(diildArrby[dountfr],
                    pbrfnt.bdd(nfw DynbmidUtilTrffNodf(diildArrby[dountfr],
                                                       diildArrby[dountfr]));
                                                       diildArrby[dountfr]));
                                                       diildArrby[dountfr]));
                                                       diildArrby[dountfr]));
                                                       diildArrby[dountfr]));
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Crfbtfs b nodf witi tif spfdififd objfdt bs its vbluf bnd
         * Crfbtfs b nodf witi tif spfdififd objfdt bs its vbluf bnd
         * Crfbtfs b nodf witi tif spfdififd objfdt bs its vbluf bnd
         * Crfbtfs b nodf witi tif spfdififd objfdt bs its vbluf bnd
         * Crfbtfs b nodf witi tif spfdififd objfdt bs its vbluf bnd
         * witi tif spfdififd diildrfn. For tif nodf to bllow diildrfn,
         * witi tif spfdififd diildrfn. For tif nodf to bllow diildrfn,
         * witi tif spfdififd diildrfn. For tif nodf to bllow diildrfn,
         * witi tif spfdififd diildrfn. For tif nodf to bllow diildrfn,
         * witi tif spfdififd diildrfn. For tif nodf to bllow diildrfn,
         * tif diildrfn-objfdt must bf bn brrby of objfdts, b
         * tif diildrfn-objfdt must bf bn brrby of objfdts, b
         * tif diildrfn-objfdt must bf bn brrby of objfdts, b
         * tif diildrfn-objfdt must bf bn brrby of objfdts, b
         * tif diildrfn-objfdt must bf bn brrby of objfdts, b
         * <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf> -- fvfn
         * <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf> -- fvfn
         * <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf> -- fvfn
         * <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf> -- fvfn
         * <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf> -- fvfn
         * if fmpty. Otifrwisf, tif nodf is not
         * if fmpty. Otifrwisf, tif nodf is not
         * if fmpty. Otifrwisf, tif nodf is not
         * if fmpty. Otifrwisf, tif nodf is not
         * if fmpty. Otifrwisf, tif nodf is not
         * bllowfd to ibvf diildrfn.
         * bllowfd to ibvf diildrfn.
         * bllowfd to ibvf diildrfn.
         * bllowfd to ibvf diildrfn.
         * bllowfd to ibvf diildrfn.
         *
         *
         *
         *
         *
         * @pbrbm vbluf  tif <dodf>Objfdt</dodf> tibt is tif vbluf for tif
         * @pbrbm vbluf  tif <dodf>Objfdt</dodf> tibt is tif vbluf for tif
         * @pbrbm vbluf  tif <dodf>Objfdt</dodf> tibt is tif vbluf for tif
         * @pbrbm vbluf  tif <dodf>Objfdt</dodf> tibt is tif vbluf for tif
         * @pbrbm vbluf  tif <dodf>Objfdt</dodf> tibt is tif vbluf for tif
         *              nfw nodf
         *              nfw nodf
         *              nfw nodf
         *              nfw nodf
         *              nfw nodf
         * @pbrbm diildrfn bn brrby of <dodf>Objfdt</dodf>s, b
         * @pbrbm diildrfn bn brrby of <dodf>Objfdt</dodf>s, b
         * @pbrbm diildrfn bn brrby of <dodf>Objfdt</dodf>s, b
         * @pbrbm diildrfn bn brrby of <dodf>Objfdt</dodf>s, b
         * @pbrbm diildrfn bn brrby of <dodf>Objfdt</dodf>s, b
         *              <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf>
         *              <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf>
         *              <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf>
         *              <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf>
         *              <dodf>Vfdtor</dodf>, or b <dodf>Hbsitbblf</dodf>
         *              usfd to drfbtf tif diild nodfs; if bny otifr
         *              usfd to drfbtf tif diild nodfs; if bny otifr
         *              usfd to drfbtf tif diild nodfs; if bny otifr
         *              usfd to drfbtf tif diild nodfs; if bny otifr
         *              usfd to drfbtf tif diild nodfs; if bny otifr
         *              objfdt is spfdififd, or if tif vbluf is
         *              objfdt is spfdififd, or if tif vbluf is
         *              objfdt is spfdififd, or if tif vbluf is
         *              objfdt is spfdififd, or if tif vbluf is
         *              objfdt is spfdififd, or if tif vbluf is
         *              <dodf>null</dodf>,
         *              <dodf>null</dodf>,
         *              <dodf>null</dodf>,
         *              <dodf>null</dodf>,
         *              <dodf>null</dodf>,
         *              tifn tif nodf is not bllowfd to ibvf diildrfn
         *              tifn tif nodf is not bllowfd to ibvf diildrfn
         *              tifn tif nodf is not bllowfd to ibvf diildrfn
         *              tifn tif nodf is not bllowfd to ibvf diildrfn
         *              tifn tif nodf is not bllowfd to ibvf diildrfn
         */
         */
         */
         */
         */
        publid DynbmidUtilTrffNodf(Objfdt vbluf, Objfdt diildrfn) {
        publid DynbmidUtilTrffNodf(Objfdt vbluf, Objfdt diildrfn) {
        publid DynbmidUtilTrffNodf(Objfdt vbluf, Objfdt diildrfn) {
        publid DynbmidUtilTrffNodf(Objfdt vbluf, Objfdt diildrfn) {
        publid DynbmidUtilTrffNodf(Objfdt vbluf, Objfdt diildrfn) {
            supfr(vbluf);
            supfr(vbluf);
            supfr(vbluf);
            supfr(vbluf);
            supfr(vbluf);
            lobdfdCiildrfn = fblsf;
            lobdfdCiildrfn = fblsf;
            lobdfdCiildrfn = fblsf;
            lobdfdCiildrfn = fblsf;
            lobdfdCiildrfn = fblsf;
            diildVbluf = diildrfn;
            diildVbluf = diildrfn;
            diildVbluf = diildrfn;
            diildVbluf = diildrfn;
            diildVbluf = diildrfn;
            if(diildrfn != null) {
            if(diildrfn != null) {
            if(diildrfn != null) {
            if(diildrfn != null) {
            if(diildrfn != null) {
                if(diildrfn instbndfof Vfdtor)
                if(diildrfn instbndfof Vfdtor)
                if(diildrfn instbndfof Vfdtor)
                if(diildrfn instbndfof Vfdtor)
                if(diildrfn instbndfof Vfdtor)
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                flsf if(diildrfn instbndfof Hbsitbblf)
                flsf if(diildrfn instbndfof Hbsitbblf)
                flsf if(diildrfn instbndfof Hbsitbblf)
                flsf if(diildrfn instbndfof Hbsitbblf)
                flsf if(diildrfn instbndfof Hbsitbblf)
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                flsf if(diildrfn instbndfof Objfdt[])
                flsf if(diildrfn instbndfof Objfdt[])
                flsf if(diildrfn instbndfof Objfdt[])
                flsf if(diildrfn instbndfof Objfdt[])
                flsf if(diildrfn instbndfof Objfdt[])
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                    sftAllowsCiildrfn(truf);
                flsf
                flsf
                flsf
                flsf
                flsf
                    sftAllowsCiildrfn(fblsf);
                    sftAllowsCiildrfn(fblsf);
                    sftAllowsCiildrfn(fblsf);
                    sftAllowsCiildrfn(fblsf);
                    sftAllowsCiildrfn(fblsf);
            }
            }
            }
            }
            }
            flsf
            flsf
            flsf
            flsf
            flsf
                sftAllowsCiildrfn(fblsf);
                sftAllowsCiildrfn(fblsf);
                sftAllowsCiildrfn(fblsf);
                sftAllowsCiildrfn(fblsf);
                sftAllowsCiildrfn(fblsf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns truf if tiis nodf bllows diildrfn. Wiftifr tif nodf
         * Rfturns truf if tiis nodf bllows diildrfn. Wiftifr tif nodf
         * Rfturns truf if tiis nodf bllows diildrfn. Wiftifr tif nodf
         * Rfturns truf if tiis nodf bllows diildrfn. Wiftifr tif nodf
         * Rfturns truf if tiis nodf bllows diildrfn. Wiftifr tif nodf
         * bllows diildrfn dfpfnds on iow it wbs drfbtfd.
         * bllows diildrfn dfpfnds on iow it wbs drfbtfd.
         * bllows diildrfn dfpfnds on iow it wbs drfbtfd.
         * bllows diildrfn dfpfnds on iow it wbs drfbtfd.
         * bllows diildrfn dfpfnds on iow it wbs drfbtfd.
         *
         *
         *
         *
         *
         * @rfturn truf if tiis nodf bllows diildrfn, fblsf otifrwisf
         * @rfturn truf if tiis nodf bllows diildrfn, fblsf otifrwisf
         * @rfturn truf if tiis nodf bllows diildrfn, fblsf otifrwisf
         * @rfturn truf if tiis nodf bllows diildrfn, fblsf otifrwisf
         * @rfturn truf if tiis nodf bllows diildrfn, fblsf otifrwisf
         * @sff JTrff.DynbmidUtilTrffNodf
         * @sff JTrff.DynbmidUtilTrffNodf
         * @sff JTrff.DynbmidUtilTrffNodf
         * @sff JTrff.DynbmidUtilTrffNodf
         * @sff JTrff.DynbmidUtilTrffNodf
         */
         */
         */
         */
         */
        publid boolfbn isLfbf() {
        publid boolfbn isLfbf() {
        publid boolfbn isLfbf() {
        publid boolfbn isLfbf() {
        publid boolfbn isLfbf() {
            rfturn !gftAllowsCiildrfn();
            rfturn !gftAllowsCiildrfn();
            rfturn !gftAllowsCiildrfn();
            rfturn !gftAllowsCiildrfn();
            rfturn !gftAllowsCiildrfn();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of diild nodfs.
         * Rfturns tif numbfr of diild nodfs.
         * Rfturns tif numbfr of diild nodfs.
         * Rfturns tif numbfr of diild nodfs.
         * Rfturns tif numbfr of diild nodfs.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of diild nodfs
         * @rfturn tif numbfr of diild nodfs
         * @rfturn tif numbfr of diild nodfs
         * @rfturn tif numbfr of diild nodfs
         * @rfturn tif numbfr of diild nodfs
         */
         */
         */
         */
         */
        publid int gftCiildCount() {
        publid int gftCiildCount() {
        publid int gftCiildCount() {
        publid int gftCiildCount() {
        publid int gftCiildCount() {
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
            rfturn supfr.gftCiildCount();
            rfturn supfr.gftCiildCount();
            rfturn supfr.gftCiildCount();
            rfturn supfr.gftCiildCount();
            rfturn supfr.gftCiildCount();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Lobds tif diildrfn bbsfd on <dodf>diildVbluf</dodf>.
         * Lobds tif diildrfn bbsfd on <dodf>diildVbluf</dodf>.
         * Lobds tif diildrfn bbsfd on <dodf>diildVbluf</dodf>.
         * Lobds tif diildrfn bbsfd on <dodf>diildVbluf</dodf>.
         * Lobds tif diildrfn bbsfd on <dodf>diildVbluf</dodf>.
         * If <dodf>diildVbluf</dodf> is b <dodf>Vfdtor</dodf>
         * If <dodf>diildVbluf</dodf> is b <dodf>Vfdtor</dodf>
         * If <dodf>diildVbluf</dodf> is b <dodf>Vfdtor</dodf>
         * If <dodf>diildVbluf</dodf> is b <dodf>Vfdtor</dodf>
         * If <dodf>diildVbluf</dodf> is b <dodf>Vfdtor</dodf>
         * or brrby fbdi flfmfnt is bddfd bs b diild,
         * or brrby fbdi flfmfnt is bddfd bs b diild,
         * or brrby fbdi flfmfnt is bddfd bs b diild,
         * or brrby fbdi flfmfnt is bddfd bs b diild,
         * or brrby fbdi flfmfnt is bddfd bs b diild,
         * if <dodf>diildVbluf</dodf> is b <dodf>Hbsitbblf</dodf>
         * if <dodf>diildVbluf</dodf> is b <dodf>Hbsitbblf</dodf>
         * if <dodf>diildVbluf</dodf> is b <dodf>Hbsitbblf</dodf>
         * if <dodf>diildVbluf</dodf> is b <dodf>Hbsitbblf</dodf>
         * if <dodf>diildVbluf</dodf> is b <dodf>Hbsitbblf</dodf>
         * fbdi kfy/vbluf pbir is bddfd in tif ordfr tibt
         * fbdi kfy/vbluf pbir is bddfd in tif ordfr tibt
         * fbdi kfy/vbluf pbir is bddfd in tif ordfr tibt
         * fbdi kfy/vbluf pbir is bddfd in tif ordfr tibt
         * fbdi kfy/vbluf pbir is bddfd in tif ordfr tibt
         * <dodf>Enumfrbtion</dodf> rfturns tif kfys.
         * <dodf>Enumfrbtion</dodf> rfturns tif kfys.
         * <dodf>Enumfrbtion</dodf> rfturns tif kfys.
         * <dodf>Enumfrbtion</dodf> rfturns tif kfys.
         * <dodf>Enumfrbtion</dodf> rfturns tif kfys.
         */
         */
         */
         */
         */
        protfdtfd void lobdCiildrfn() {
        protfdtfd void lobdCiildrfn() {
        protfdtfd void lobdCiildrfn() {
        protfdtfd void lobdCiildrfn() {
        protfdtfd void lobdCiildrfn() {
            lobdfdCiildrfn = truf;
            lobdfdCiildrfn = truf;
            lobdfdCiildrfn = truf;
            lobdfdCiildrfn = truf;
            lobdfdCiildrfn = truf;
            drfbtfCiildrfn(tiis, diildVbluf);
            drfbtfCiildrfn(tiis, diildVbluf);
            drfbtfCiildrfn(tiis, diildVbluf);
            drfbtfCiildrfn(tiis, diildVbluf);
            drfbtfCiildrfn(tiis, diildVbluf);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         */
         */
         */
         */
         */
        publid TrffNodf gftCiildAt(int indfx) {
        publid TrffNodf gftCiildAt(int indfx) {
        publid TrffNodf gftCiildAt(int indfx) {
        publid TrffNodf gftCiildAt(int indfx) {
        publid TrffNodf gftCiildAt(int indfx) {
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
            rfturn supfr.gftCiildAt(indfx);
            rfturn supfr.gftCiildAt(indfx);
            rfturn supfr.gftCiildAt(indfx);
            rfturn supfr.gftCiildAt(indfx);
            rfturn supfr.gftCiildAt(indfx);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         * Subdlbssfd to lobd tif diildrfn, if nfdfssbry.
         */
         */
         */
         */
         */
        publid Enumfrbtion<TrffNodf> diildrfn() {
        publid Enumfrbtion<TrffNodf> diildrfn() {
        publid Enumfrbtion<TrffNodf> diildrfn() {
        publid Enumfrbtion<TrffNodf> diildrfn() {
        publid Enumfrbtion<TrffNodf> diildrfn() {
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
            if(!lobdfdCiildrfn)
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
                lobdCiildrfn();
            rfturn supfr.diildrfn();
            rfturn supfr.diildrfn();
            rfturn supfr.diildrfn();
            rfturn supfr.diildrfn();
            rfturn supfr.diildrfn();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
    void sftUIPropfrty(String propfrtyNbmf, Objfdt vbluf) {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
        if (propfrtyNbmf == "rowHfigit") {
            if (!rowHfigitSft) {
            if (!rowHfigitSft) {
            if (!rowHfigitSft) {
            if (!rowHfigitSft) {
            if (!rowHfigitSft) {
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                sftRowHfigit(((Numbfr)vbluf).intVbluf());
                rowHfigitSft = fblsf;
                rowHfigitSft = fblsf;
                rowHfigitSft = fblsf;
                rowHfigitSft = fblsf;
                rowHfigitSft = fblsf;
            }
            }
            }
            }
            }
        } flsf if (propfrtyNbmf == "sdrollsOnExpbnd") {
        } flsf if (propfrtyNbmf == "sdrollsOnExpbnd") {
        } flsf if (propfrtyNbmf == "sdrollsOnExpbnd") {
        } flsf if (propfrtyNbmf == "sdrollsOnExpbnd") {
        } flsf if (propfrtyNbmf == "sdrollsOnExpbnd") {
            if (!sdrollsOnExpbndSft) {
            if (!sdrollsOnExpbndSft) {
            if (!sdrollsOnExpbndSft) {
            if (!sdrollsOnExpbndSft) {
            if (!sdrollsOnExpbndSft) {
                sftSdrollsOnExpbnd(((Boolfbn)vbluf).boolfbnVbluf());
                sftSdrollsOnExpbnd(((Boolfbn)vbluf).boolfbnVbluf());
                sftSdrollsOnExpbnd(((Boolfbn)vbluf).boolfbnVbluf());
                sftSdrollsOnExpbnd(((Boolfbn)vbluf).boolfbnVbluf());
                sftSdrollsOnExpbnd(((Boolfbn)vbluf).boolfbnVbluf());
                sdrollsOnExpbndSft = fblsf;
                sdrollsOnExpbndSft = fblsf;
                sdrollsOnExpbndSft = fblsf;
                sdrollsOnExpbndSft = fblsf;
                sdrollsOnExpbndSft = fblsf;
            }
            }
            }
            }
            }
        } flsf if (propfrtyNbmf == "siowsRootHbndlfs") {
        } flsf if (propfrtyNbmf == "siowsRootHbndlfs") {
        } flsf if (propfrtyNbmf == "siowsRootHbndlfs") {
        } flsf if (propfrtyNbmf == "siowsRootHbndlfs") {
        } flsf if (propfrtyNbmf == "siowsRootHbndlfs") {
            if (!siowsRootHbndlfsSft) {
            if (!siowsRootHbndlfsSft) {
            if (!siowsRootHbndlfsSft) {
            if (!siowsRootHbndlfsSft) {
            if (!siowsRootHbndlfsSft) {
                sftSiowsRootHbndlfs(((Boolfbn)vbluf).boolfbnVbluf());
                sftSiowsRootHbndlfs(((Boolfbn)vbluf).boolfbnVbluf());
                sftSiowsRootHbndlfs(((Boolfbn)vbluf).boolfbnVbluf());
                sftSiowsRootHbndlfs(((Boolfbn)vbluf).boolfbnVbluf());
                sftSiowsRootHbndlfs(((Boolfbn)vbluf).boolfbnVbluf());
                siowsRootHbndlfsSft = fblsf;
                siowsRootHbndlfsSft = fblsf;
                siowsRootHbndlfsSft = fblsf;
                siowsRootHbndlfsSft = fblsf;
                siowsRootHbndlfsSft = fblsf;
            }
            }
            }
            }
            }
        } flsf {
        } flsf {
        } flsf {
        } flsf {
        } flsf {
            supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
            supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
            supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
            supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
            supfr.sftUIPropfrty(propfrtyNbmf, vbluf);
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }










    /**
    /**
    /**
    /**
    /**
     * Rfturns b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * Rfturns b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * Rfturns b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * Rfturns b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * Rfturns b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * Tiis mftiod
     * Tiis mftiod
     * Tiis mftiod
     * Tiis mftiod
     * Tiis mftiod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd tif
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * dontfnt bnd formbt of tif rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * implfmfntbtions. Tif rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     * bf <dodf>null</dodf>.
     *
     *
     *
     *
     *
     * @rfturn  b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * @rfturn  b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * @rfturn  b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * @rfturn  b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     * @rfturn  b string rfprfsfntbtion of tiis <dodf>JTrff</dodf>.
     */
     */
     */
     */
     */
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
    protfdtfd String pbrbmString() {
        String rootVisiblfString = (rootVisiblf ?
        String rootVisiblfString = (rootVisiblf ?
        String rootVisiblfString = (rootVisiblf ?
        String rootVisiblfString = (rootVisiblf ?
        String rootVisiblfString = (rootVisiblf ?
                                    "truf" : "fblsf");
                                    "truf" : "fblsf");
                                    "truf" : "fblsf");
                                    "truf" : "fblsf");
                                    "truf" : "fblsf");
        String siowsRootHbndlfsString = (siowsRootHbndlfs ?
        String siowsRootHbndlfsString = (siowsRootHbndlfs ?
        String siowsRootHbndlfsString = (siowsRootHbndlfs ?
        String siowsRootHbndlfsString = (siowsRootHbndlfs ?
        String siowsRootHbndlfsString = (siowsRootHbndlfs ?
                                         "truf" : "fblsf");
                                         "truf" : "fblsf");
                                         "truf" : "fblsf");
                                         "truf" : "fblsf");
                                         "truf" : "fblsf");
        String fditbblfString = (fditbblf ?
        String fditbblfString = (fditbblf ?
        String fditbblfString = (fditbblf ?
        String fditbblfString = (fditbblf ?
        String fditbblfString = (fditbblf ?
                                 "truf" : "fblsf");
                                 "truf" : "fblsf");
                                 "truf" : "fblsf");
                                 "truf" : "fblsf");
                                 "truf" : "fblsf");
        String lbrgfModflString = (lbrgfModfl ?
        String lbrgfModflString = (lbrgfModfl ?
        String lbrgfModflString = (lbrgfModfl ?
        String lbrgfModflString = (lbrgfModfl ?
        String lbrgfModflString = (lbrgfModfl ?
                                   "truf" : "fblsf");
                                   "truf" : "fblsf");
                                   "truf" : "fblsf");
                                   "truf" : "fblsf");
                                   "truf" : "fblsf");
        String invokfsStopCfllEditingString = (invokfsStopCfllEditing ?
        String invokfsStopCfllEditingString = (invokfsStopCfllEditing ?
        String invokfsStopCfllEditingString = (invokfsStopCfllEditing ?
        String invokfsStopCfllEditingString = (invokfsStopCfllEditing ?
        String invokfsStopCfllEditingString = (invokfsStopCfllEditing ?
                                               "truf" : "fblsf");
                                               "truf" : "fblsf");
                                               "truf" : "fblsf");
                                               "truf" : "fblsf");
                                               "truf" : "fblsf");
        String sdrollsOnExpbndString = (sdrollsOnExpbnd ?
        String sdrollsOnExpbndString = (sdrollsOnExpbnd ?
        String sdrollsOnExpbndString = (sdrollsOnExpbnd ?
        String sdrollsOnExpbndString = (sdrollsOnExpbnd ?
        String sdrollsOnExpbndString = (sdrollsOnExpbnd ?
                                        "truf" : "fblsf");
                                        "truf" : "fblsf");
                                        "truf" : "fblsf");
                                        "truf" : "fblsf");
                                        "truf" : "fblsf");





        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        rfturn supfr.pbrbmString() +
        ",fditbblf=" + fditbblfString +
        ",fditbblf=" + fditbblfString +
        ",fditbblf=" + fditbblfString +
        ",fditbblf=" + fditbblfString +
        ",fditbblf=" + fditbblfString +
        ",invokfsStopCfllEditing=" + invokfsStopCfllEditingString +
        ",invokfsStopCfllEditing=" + invokfsStopCfllEditingString +
        ",invokfsStopCfllEditing=" + invokfsStopCfllEditingString +
        ",invokfsStopCfllEditing=" + invokfsStopCfllEditingString +
        ",invokfsStopCfllEditing=" + invokfsStopCfllEditingString +
        ",lbrgfModfl=" + lbrgfModflString +
        ",lbrgfModfl=" + lbrgfModflString +
        ",lbrgfModfl=" + lbrgfModflString +
        ",lbrgfModfl=" + lbrgfModflString +
        ",lbrgfModfl=" + lbrgfModflString +
        ",rootVisiblf=" + rootVisiblfString +
        ",rootVisiblf=" + rootVisiblfString +
        ",rootVisiblf=" + rootVisiblfString +
        ",rootVisiblf=" + rootVisiblfString +
        ",rootVisiblf=" + rootVisiblfString +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",rowHfigit=" + rowHfigit +
        ",sdrollsOnExpbnd=" + sdrollsOnExpbndString +
        ",sdrollsOnExpbnd=" + sdrollsOnExpbndString +
        ",sdrollsOnExpbnd=" + sdrollsOnExpbndString +
        ",sdrollsOnExpbnd=" + sdrollsOnExpbndString +
        ",sdrollsOnExpbnd=" + sdrollsOnExpbndString +
        ",siowsRootHbndlfs=" + siowsRootHbndlfsString +
        ",siowsRootHbndlfs=" + siowsRootHbndlfsString +
        ",siowsRootHbndlfs=" + siowsRootHbndlfsString +
        ",siowsRootHbndlfs=" + siowsRootHbndlfsString +
        ",siowsRootHbndlfs=" + siowsRootHbndlfsString +
        ",togglfClidkCount=" + togglfClidkCount +
        ",togglfClidkCount=" + togglfClidkCount +
        ",togglfClidkCount=" + togglfClidkCount +
        ",togglfClidkCount=" + togglfClidkCount +
        ",togglfClidkCount=" + togglfClidkCount +
        ",visiblfRowCount=" + visiblfRowCount;
        ",visiblfRowCount=" + visiblfRowCount;
        ",visiblfRowCount=" + visiblfRowCount;
        ",visiblfRowCount=" + visiblfRowCount;
        ",visiblfRowCount=" + visiblfRowCount;
    }
    }
    }
    }
    }





/////////////////
/////////////////
/////////////////
/////////////////
/////////////////
// Addfssibility support
// Addfssibility support
// Addfssibility support
// Addfssibility support
// Addfssibility support
////////////////
////////////////
////////////////
////////////////
////////////////





    /**
    /**
    /**
    /**
    /**
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTrff.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTrff.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTrff.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTrff.
     * Gfts tif AddfssiblfContfxt bssodibtfd witi tiis JTrff.
     * For JTrffs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For JTrffs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For JTrffs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For JTrffs, tif AddfssiblfContfxt tbkfs tif form of bn
     * For JTrffs, tif AddfssiblfContfxt tbkfs tif form of bn
     * AddfssiblfJTrff.
     * AddfssiblfJTrff.
     * AddfssiblfJTrff.
     * AddfssiblfJTrff.
     * AddfssiblfJTrff.
     * A nfw AddfssiblfJTrff instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTrff instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTrff instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTrff instbndf is drfbtfd if nfdfssbry.
     * A nfw AddfssiblfJTrff instbndf is drfbtfd if nfdfssbry.
     *
     *
     *
     *
     *
     * @rfturn bn AddfssiblfJTrff tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTrff tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTrff tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTrff tibt sfrvfs bs tif
     * @rfturn bn AddfssiblfJTrff tibt sfrvfs bs tif
     *         AddfssiblfContfxt of tiis JTrff
     *         AddfssiblfContfxt of tiis JTrff
     *         AddfssiblfContfxt of tiis JTrff
     *         AddfssiblfContfxt of tiis JTrff
     *         AddfssiblfContfxt of tiis JTrff
     */
     */
     */
     */
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJTrff();
            bddfssiblfContfxt = nfw AddfssiblfJTrff();
            bddfssiblfContfxt = nfw AddfssiblfJTrff();
            bddfssiblfContfxt = nfw AddfssiblfJTrff();
            bddfssiblfContfxt = nfw AddfssiblfJTrff();
        }
        }
        }
        }
        }
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
        rfturn bddfssiblfContfxt;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * Tiis dlbss implfmfnts bddfssibility support for tif
     * <dodf>JTrff</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTrff</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTrff</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTrff</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * <dodf>JTrff</dodf> dlbss.  It providfs bn implfmfntbtion of tif
     * Jbvb Addfssibility API bppropribtf to trff usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to trff usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to trff usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to trff usfr-intfrfbdf flfmfnts.
     * Jbvb Addfssibility API bppropribtf to trff usfr-intfrfbdf flfmfnts.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
     */
     */
     */
     */
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    @SupprfssWbrnings("sfribl")
    protfdtfd dlbss AddfssiblfJTrff fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTrff fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTrff fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTrff fxtfnds AddfssiblfJComponfnt
    protfdtfd dlbss AddfssiblfJTrff fxtfnds AddfssiblfJComponfnt
            implfmfnts AddfssiblfSflfdtion, TrffSflfdtionListfnfr,
            implfmfnts AddfssiblfSflfdtion, TrffSflfdtionListfnfr,
            implfmfnts AddfssiblfSflfdtion, TrffSflfdtionListfnfr,
            implfmfnts AddfssiblfSflfdtion, TrffSflfdtionListfnfr,
            implfmfnts AddfssiblfSflfdtion, TrffSflfdtionListfnfr,
                       TrffModflListfnfr, TrffExpbnsionListfnfr  {
                       TrffModflListfnfr, TrffExpbnsionListfnfr  {
                       TrffModflListfnfr, TrffExpbnsionListfnfr  {
                       TrffModflListfnfr, TrffExpbnsionListfnfr  {
                       TrffModflListfnfr, TrffExpbnsionListfnfr  {





        TrffPbti   lfbdSflfdtionPbti;
        TrffPbti   lfbdSflfdtionPbti;
        TrffPbti   lfbdSflfdtionPbti;
        TrffPbti   lfbdSflfdtionPbti;
        TrffPbti   lfbdSflfdtionPbti;
        Addfssiblf lfbdSflfdtionAddfssiblf;
        Addfssiblf lfbdSflfdtionAddfssiblf;
        Addfssiblf lfbdSflfdtionAddfssiblf;
        Addfssiblf lfbdSflfdtionAddfssiblf;
        Addfssiblf lfbdSflfdtionAddfssiblf;





        /**
        /**
        /**
        /**
        /**
         * Construdts {@dodf AddfssiblfJTrff}
         * Construdts {@dodf AddfssiblfJTrff}
         * Construdts {@dodf AddfssiblfJTrff}
         * Construdts {@dodf AddfssiblfJTrff}
         * Construdts {@dodf AddfssiblfJTrff}
         */
         */
         */
         */
         */
        publid AddfssiblfJTrff() {
        publid AddfssiblfJTrff() {
        publid AddfssiblfJTrff() {
        publid AddfssiblfJTrff() {
        publid AddfssiblfJTrff() {
            // Add b trff modfl listfnfr for JTrff
            // Add b trff modfl listfnfr for JTrff
            // Add b trff modfl listfnfr for JTrff
            // Add b trff modfl listfnfr for JTrff
            // Add b trff modfl listfnfr for JTrff
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
                modfl.bddTrffModflListfnfr(tiis);
                modfl.bddTrffModflListfnfr(tiis);
                modfl.bddTrffModflListfnfr(tiis);
                modfl.bddTrffModflListfnfr(tiis);
                modfl.bddTrffModflListfnfr(tiis);
            }
            }
            }
            }
            }
            JTrff.tiis.bddTrffExpbnsionListfnfr(tiis);
            JTrff.tiis.bddTrffExpbnsionListfnfr(tiis);
            JTrff.tiis.bddTrffExpbnsionListfnfr(tiis);
            JTrff.tiis.bddTrffExpbnsionListfnfr(tiis);
            JTrff.tiis.bddTrffExpbnsionListfnfr(tiis);
            JTrff.tiis.bddTrffSflfdtionListfnfr(tiis);
            JTrff.tiis.bddTrffSflfdtionListfnfr(tiis);
            JTrff.tiis.bddTrffSflfdtionListfnfr(tiis);
            JTrff.tiis.bddTrffSflfdtionListfnfr(tiis);
            JTrff.tiis.bddTrffSflfdtionListfnfr(tiis);
            lfbdSflfdtionPbti = JTrff.tiis.gftLfbdSflfdtionPbti();
            lfbdSflfdtionPbti = JTrff.tiis.gftLfbdSflfdtionPbti();
            lfbdSflfdtionPbti = JTrff.tiis.gftLfbdSflfdtionPbti();
            lfbdSflfdtionPbti = JTrff.tiis.gftLfbdSflfdtionPbti();
            lfbdSflfdtionPbti = JTrff.tiis.gftLfbdSflfdtionPbti();
            lfbdSflfdtionAddfssiblf = (lfbdSflfdtionPbti != null)
            lfbdSflfdtionAddfssiblf = (lfbdSflfdtionPbti != null)
            lfbdSflfdtionAddfssiblf = (lfbdSflfdtionPbti != null)
            lfbdSflfdtionAddfssiblf = (lfbdSflfdtionPbti != null)
            lfbdSflfdtionAddfssiblf = (lfbdSflfdtionPbti != null)
                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                              lfbdSflfdtionPbti,
                                              lfbdSflfdtionPbti,
                                              lfbdSflfdtionPbti,
                                              lfbdSflfdtionPbti,
                                              lfbdSflfdtionPbti,
                                              JTrff.tiis)
                                              JTrff.tiis)
                                              JTrff.tiis)
                                              JTrff.tiis)
                                              JTrff.tiis)
                    : null;
                    : null;
                    : null;
                    : null;
                    : null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Sflfdtion Listfnfr vbluf dibngf mftiod. Usfd to firf tif
         * Trff Sflfdtion Listfnfr vbluf dibngf mftiod. Usfd to firf tif
         * Trff Sflfdtion Listfnfr vbluf dibngf mftiod. Usfd to firf tif
         * Trff Sflfdtion Listfnfr vbluf dibngf mftiod. Usfd to firf tif
         * Trff Sflfdtion Listfnfr vbluf dibngf mftiod. Usfd to firf tif
         * propfrty dibngf
         * propfrty dibngf
         * propfrty dibngf
         * propfrty dibngf
         * propfrty dibngf
         *
         *
         *
         *
         *
         * @pbrbm f ListSflfdtionEvfnt
         * @pbrbm f ListSflfdtionEvfnt
         * @pbrbm f ListSflfdtionEvfnt
         * @pbrbm f ListSflfdtionEvfnt
         * @pbrbm f ListSflfdtionEvfnt
         *
         *
         *
         *
         *
         */
         */
         */
         */
         */
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
        publid void vblufCibngfd(TrffSflfdtionEvfnt f) {
             firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
             firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
             firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
             firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
             firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_SELECTION_PROPERTY,
                                Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                                Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                                Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                                Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                                Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
         }
         }
         }
         }
         }





        /**
        /**
        /**
        /**
        /**
         * Firf b visiblf dbtb propfrty dibngf notifidbtion.
         * Firf b visiblf dbtb propfrty dibngf notifidbtion.
         * Firf b visiblf dbtb propfrty dibngf notifidbtion.
         * Firf b visiblf dbtb propfrty dibngf notifidbtion.
         * Firf b visiblf dbtb propfrty dibngf notifidbtion.
         * A 'visiblf' dbtb propfrty is onf tibt rfprfsfnts
         * A 'visiblf' dbtb propfrty is onf tibt rfprfsfnts
         * A 'visiblf' dbtb propfrty is onf tibt rfprfsfnts
         * A 'visiblf' dbtb propfrty is onf tibt rfprfsfnts
         * A 'visiblf' dbtb propfrty is onf tibt rfprfsfnts
         * somftiing bbout tif wby tif domponfnt bppfbrs on tif
         * somftiing bbout tif wby tif domponfnt bppfbrs on tif
         * somftiing bbout tif wby tif domponfnt bppfbrs on tif
         * somftiing bbout tif wby tif domponfnt bppfbrs on tif
         * somftiing bbout tif wby tif domponfnt bppfbrs on tif
         * displby, wifrf tibt bppfbrbndf isn't bound to bny otifr
         * displby, wifrf tibt bppfbrbndf isn't bound to bny otifr
         * displby, wifrf tibt bppfbrbndf isn't bound to bny otifr
         * displby, wifrf tibt bppfbrbndf isn't bound to bny otifr
         * displby, wifrf tibt bppfbrbndf isn't bound to bny otifr
         * propfrty. It notififs sdrffn rfbdfrs  tibt tif visubl
         * propfrty. It notififs sdrffn rfbdfrs  tibt tif visubl
         * propfrty. It notififs sdrffn rfbdfrs  tibt tif visubl
         * propfrty. It notififs sdrffn rfbdfrs  tibt tif visubl
         * propfrty. It notififs sdrffn rfbdfrs  tibt tif visubl
         * bppfbrbndf of tif domponfnt ibs dibngfd, so tify dbn
         * bppfbrbndf of tif domponfnt ibs dibngfd, so tify dbn
         * bppfbrbndf of tif domponfnt ibs dibngfd, so tify dbn
         * bppfbrbndf of tif domponfnt ibs dibngfd, so tify dbn
         * bppfbrbndf of tif domponfnt ibs dibngfd, so tify dbn
         * notify tif usfr.
         * notify tif usfr.
         * notify tif usfr.
         * notify tif usfr.
         * notify tif usfr.
         */
         */
         */
         */
         */
        publid void firfVisiblfDbtbPropfrtyCibngf() {
        publid void firfVisiblfDbtbPropfrtyCibngf() {
        publid void firfVisiblfDbtbPropfrtyCibngf() {
        publid void firfVisiblfDbtbPropfrtyCibngf() {
        publid void firfVisiblfDbtbPropfrtyCibngf() {
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
           firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_VISIBLE_DATA_PROPERTY,
                              Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                              Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                              Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                              Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
                              Boolfbn.vblufOf(fblsf), Boolfbn.vblufOf(truf));
        }
        }
        }
        }
        }





        // Firf tif visiblf dbtb dibngfs for tif modfl dibngfs.
        // Firf tif visiblf dbtb dibngfs for tif modfl dibngfs.
        // Firf tif visiblf dbtb dibngfs for tif modfl dibngfs.
        // Firf tif visiblf dbtb dibngfs for tif modfl dibngfs.
        // Firf tif visiblf dbtb dibngfs for tif modfl dibngfs.





        /**
        /**
        /**
        /**
        /**
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         */
         */
         */
         */
         */
        publid void trffNodfsCibngfd(TrffModflEvfnt f) {
        publid void trffNodfsCibngfd(TrffModflEvfnt f) {
        publid void trffNodfsCibngfd(TrffModflEvfnt f) {
        publid void trffNodfsCibngfd(TrffModflEvfnt f) {
        publid void trffNodfsCibngfd(TrffModflEvfnt f) {
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         */
         */
         */
         */
         */
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) {
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) {
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) {
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) {
        publid void trffNodfsInsfrtfd(TrffModflEvfnt f) {
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         * Trff Modfl Nodf dibngf notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b Trff nodf(s) rfmovbl fvfnt
         * @pbrbm f  b Trff nodf(s) rfmovbl fvfnt
         * @pbrbm f  b Trff nodf(s) rfmovbl fvfnt
         * @pbrbm f  b Trff nodf(s) rfmovbl fvfnt
         * @pbrbm f  b Trff nodf(s) rfmovbl fvfnt
         */
         */
         */
         */
         */
        publid  void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid  void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid  void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid  void trffNodfsRfmovfd(TrffModflEvfnt f) {
        publid  void trffNodfsRfmovfd(TrffModflEvfnt f) {
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Modfl strudturf dibngf dibngf notifidbtion.
         * Trff Modfl strudturf dibngf dibngf notifidbtion.
         * Trff Modfl strudturf dibngf dibngf notifidbtion.
         * Trff Modfl strudturf dibngf dibngf notifidbtion.
         * Trff Modfl strudturf dibngf dibngf notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         * @pbrbm f  b Trff Modfl fvfnt
         */
         */
         */
         */
         */
        publid  void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid  void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid  void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid  void trffStrudturfCibngfd(TrffModflEvfnt f) {
        publid  void trffStrudturfCibngfd(TrffModflEvfnt f) {
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
           firfVisiblfDbtbPropfrtyCibngf();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Collbpsfd notifidbtion.
         * Trff Collbpsfd notifidbtion.
         * Trff Collbpsfd notifidbtion.
         * Trff Collbpsfd notifidbtion.
         * Trff Collbpsfd notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b TrffExpbnsionEvfnt
         * @pbrbm f  b TrffExpbnsionEvfnt
         * @pbrbm f  b TrffExpbnsionEvfnt
         * @pbrbm f  b TrffExpbnsionEvfnt
         * @pbrbm f  b TrffExpbnsionEvfnt
         */
         */
         */
         */
         */
        publid  void trffCollbpsfd(TrffExpbnsionEvfnt f) {
        publid  void trffCollbpsfd(TrffExpbnsionEvfnt f) {
        publid  void trffCollbpsfd(TrffExpbnsionEvfnt f) {
        publid  void trffCollbpsfd(TrffExpbnsionEvfnt f) {
        publid  void trffCollbpsfd(TrffExpbnsionEvfnt f) {
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfStbtf.EXPANDED,
                    AddfssiblfStbtf.EXPANDED,
                    AddfssiblfStbtf.EXPANDED,
                    AddfssiblfStbtf.EXPANDED,
                    AddfssiblfStbtf.EXPANDED,
                    AddfssiblfStbtf.COLLAPSED);
                    AddfssiblfStbtf.COLLAPSED);
                    AddfssiblfStbtf.COLLAPSED);
                    AddfssiblfStbtf.COLLAPSED);
                    AddfssiblfStbtf.COLLAPSED);
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Trff Modfl Expbnsion notifidbtion.
         * Trff Modfl Expbnsion notifidbtion.
         * Trff Modfl Expbnsion notifidbtion.
         * Trff Modfl Expbnsion notifidbtion.
         * Trff Modfl Expbnsion notifidbtion.
         *
         *
         *
         *
         *
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         * @pbrbm f  b Trff nodf insfrtion fvfnt
         */
         */
         */
         */
         */
        publid  void trffExpbndfd(TrffExpbnsionEvfnt f) {
        publid  void trffExpbndfd(TrffExpbnsionEvfnt f) {
        publid  void trffExpbndfd(TrffExpbnsionEvfnt f) {
        publid  void trffExpbndfd(TrffExpbnsionEvfnt f) {
        publid  void trffExpbndfd(TrffExpbnsionEvfnt f) {
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            firfVisiblfDbtbPropfrtyCibngf();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            TrffPbti pbti = f.gftPbti();
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
                // TIGER - 4839971
                // TIGER - 4839971
                // TIGER - 4839971
                // TIGER - 4839971
                // TIGER - 4839971
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // Sft pbrfnt to null so AddfssiblfJTrffNodf domputfs
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                // its pbrfnt.
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                AddfssiblfJTrffNodf nodf = nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   pbti,
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                PropfrtyCibngfEvfnt pdf = nfw PropfrtyCibngfEvfnt(nodf,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                    AddfssiblfStbtf.COLLAPSED,
                    AddfssiblfStbtf.COLLAPSED,
                    AddfssiblfStbtf.COLLAPSED,
                    AddfssiblfStbtf.COLLAPSED,
                    AddfssiblfStbtf.COLLAPSED,
                    AddfssiblfStbtf.EXPANDED);
                    AddfssiblfStbtf.EXPANDED);
                    AddfssiblfStbtf.EXPANDED);
                    AddfssiblfStbtf.EXPANDED);
                    AddfssiblfStbtf.EXPANDED);
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_STATE_PROPERTY,
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
                                   null, pdf);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
        *  Firf bn bdtivf dfsdfndbnt propfrty dibngf notifidbtion.
        *  Firf bn bdtivf dfsdfndbnt propfrty dibngf notifidbtion.
        *  Firf bn bdtivf dfsdfndbnt propfrty dibngf notifidbtion.
        *  Firf bn bdtivf dfsdfndbnt propfrty dibngf notifidbtion.
        *  Firf bn bdtivf dfsdfndbnt propfrty dibngf notifidbtion.
        *  Tif bdtivf dfsdfndbnt is usfd for objfdts sudi bs list,
        *  Tif bdtivf dfsdfndbnt is usfd for objfdts sudi bs list,
        *  Tif bdtivf dfsdfndbnt is usfd for objfdts sudi bs list,
        *  Tif bdtivf dfsdfndbnt is usfd for objfdts sudi bs list,
        *  Tif bdtivf dfsdfndbnt is usfd for objfdts sudi bs list,
        *  trff, bnd tbblf, wiidi mby ibvf trbnsifnt diildrfn.
        *  trff, bnd tbblf, wiidi mby ibvf trbnsifnt diildrfn.
        *  trff, bnd tbblf, wiidi mby ibvf trbnsifnt diildrfn.
        *  trff, bnd tbblf, wiidi mby ibvf trbnsifnt diildrfn.
        *  trff, bnd tbblf, wiidi mby ibvf trbnsifnt diildrfn.
        *  It notififs sdrffn rfbdfrs tif bdtivf diild of tif domponfnt
        *  It notififs sdrffn rfbdfrs tif bdtivf diild of tif domponfnt
        *  It notififs sdrffn rfbdfrs tif bdtivf diild of tif domponfnt
        *  It notififs sdrffn rfbdfrs tif bdtivf diild of tif domponfnt
        *  It notififs sdrffn rfbdfrs tif bdtivf diild of tif domponfnt
        *  ibs bffn dibngfd so usfr dbn bf notififd from tifrf.
        *  ibs bffn dibngfd so usfr dbn bf notififd from tifrf.
        *  ibs bffn dibngfd so usfr dbn bf notififd from tifrf.
        *  ibs bffn dibngfd so usfr dbn bf notififd from tifrf.
        *  ibs bffn dibngfd so usfr dbn bf notififd from tifrf.
        *
        *
        *
        *
        *
        * @pbrbm oldPbti - lfbd pbti of prfvious bdtivf diild
        * @pbrbm oldPbti - lfbd pbti of prfvious bdtivf diild
        * @pbrbm oldPbti - lfbd pbti of prfvious bdtivf diild
        * @pbrbm oldPbti - lfbd pbti of prfvious bdtivf diild
        * @pbrbm oldPbti - lfbd pbti of prfvious bdtivf diild
        * @pbrbm nfwPbti - lfbd pbti of durrfnt bdtivf diild
        * @pbrbm nfwPbti - lfbd pbti of durrfnt bdtivf diild
        * @pbrbm nfwPbti - lfbd pbti of durrfnt bdtivf diild
        * @pbrbm nfwPbti - lfbd pbti of durrfnt bdtivf diild
        * @pbrbm nfwPbti - lfbd pbti of durrfnt bdtivf diild
        *
        *
        *
        *
        *
        */
        */
        */
        */
        */
        void firfAdtivfDfsdfndbntPropfrtyCibngf(TrffPbti oldPbti, TrffPbti nfwPbti){
        void firfAdtivfDfsdfndbntPropfrtyCibngf(TrffPbti oldPbti, TrffPbti nfwPbti){
        void firfAdtivfDfsdfndbntPropfrtyCibngf(TrffPbti oldPbti, TrffPbti nfwPbti){
        void firfAdtivfDfsdfndbntPropfrtyCibngf(TrffPbti oldPbti, TrffPbti nfwPbti){
        void firfAdtivfDfsdfndbntPropfrtyCibngf(TrffPbti oldPbti, TrffPbti nfwPbti){
            if(oldPbti != nfwPbti){
            if(oldPbti != nfwPbti){
            if(oldPbti != nfwPbti){
            if(oldPbti != nfwPbti){
            if(oldPbti != nfwPbti){
                Addfssiblf oldLSA = (oldPbti != null)
                Addfssiblf oldLSA = (oldPbti != null)
                Addfssiblf oldLSA = (oldPbti != null)
                Addfssiblf oldLSA = (oldPbti != null)
                Addfssiblf oldLSA = (oldPbti != null)
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                                              oldPbti,
                                                              oldPbti,
                                                              oldPbti,
                                                              oldPbti,
                                                              oldPbti,
                                                              null)
                                                              null)
                                                              null)
                                                              null)
                                                              null)
                                    : null;
                                    : null;
                                    : null;
                                    : null;
                                    : null;





                Addfssiblf nfwLSA = (nfwPbti != null)
                Addfssiblf nfwLSA = (nfwPbti != null)
                Addfssiblf nfwLSA = (nfwPbti != null)
                Addfssiblf nfwLSA = (nfwPbti != null)
                Addfssiblf nfwLSA = (nfwPbti != null)
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                    ? nfw AddfssiblfJTrffNodf(JTrff.tiis,
                                                              nfwPbti,
                                                              nfwPbti,
                                                              nfwPbti,
                                                              nfwPbti,
                                                              nfwPbti,
                                                              null)
                                                              null)
                                                              null)
                                                              null)
                                                              null)
                                    : null;
                                    : null;
                                    : null;
                                    : null;
                                    : null;
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                firfPropfrtyCibngf(AddfssiblfContfxt.ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY,
                                                                oldLSA, nfwLSA);
                                                                oldLSA, nfwLSA);
                                                                oldLSA, nfwLSA);
                                                                oldLSA, nfwLSA);
                                                                oldLSA, nfwLSA);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
        privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
        privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
        privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
        privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            Componfnt d = gftCurrfntComponfnt();
            Componfnt d = gftCurrfntComponfnt();
            Componfnt d = gftCurrfntComponfnt();
            Componfnt d = gftCurrfntComponfnt();
            Componfnt d = gftCurrfntComponfnt();
            if (d instbndfof Addfssiblf) {
            if (d instbndfof Addfssiblf) {
            if (d instbndfof Addfssiblf) {
            if (d instbndfof Addfssiblf) {
            if (d instbndfof Addfssiblf) {
                rfturn d.gftAddfssiblfContfxt();
                rfturn d.gftAddfssiblfContfxt();
                rfturn d.gftAddfssiblfContfxt();
                rfturn d.gftAddfssiblfContfxt();
                rfturn d.gftAddfssiblfContfxt();
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        privbtf Componfnt gftCurrfntComponfnt() {
        privbtf Componfnt gftCurrfntComponfnt() {
        privbtf Componfnt gftCurrfntComponfnt() {
        privbtf Componfnt gftCurrfntComponfnt() {
        privbtf Componfnt gftCurrfntComponfnt() {
            // is tif objfdt visiblf?
            // is tif objfdt visiblf?
            // is tif objfdt visiblf?
            // is tif objfdt visiblf?
            // is tif objfdt visiblf?
            // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
            // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
            // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
            // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
            // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
            // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
            // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
            // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
            // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
            // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            TrffPbti pbti = nfw TrffPbti(modfl.gftRoot());
            TrffPbti pbti = nfw TrffPbti(modfl.gftRoot());
            TrffPbti pbti = nfw TrffPbti(modfl.gftRoot());
            TrffPbti pbti = nfw TrffPbti(modfl.gftRoot());
            TrffPbti pbti = nfw TrffPbti(modfl.gftRoot());
            if (JTrff.tiis.isVisiblf(pbti)) {
            if (JTrff.tiis.isVisiblf(pbti)) {
            if (JTrff.tiis.isVisiblf(pbti)) {
            if (JTrff.tiis.isVisiblf(pbti)) {
            if (JTrff.tiis.isVisiblf(pbti)) {
                TrffCfllRfndfrfr r = JTrff.tiis.gftCfllRfndfrfr();
                TrffCfllRfndfrfr r = JTrff.tiis.gftCfllRfndfrfr();
                TrffCfllRfndfrfr r = JTrff.tiis.gftCfllRfndfrfr();
                TrffCfllRfndfrfr r = JTrff.tiis.gftCfllRfndfrfr();
                TrffCfllRfndfrfr r = JTrff.tiis.gftCfllRfndfrfr();
                TrffUI ui = JTrff.tiis.gftUI();
                TrffUI ui = JTrff.tiis.gftUI();
                TrffUI ui = JTrff.tiis.gftUI();
                TrffUI ui = JTrff.tiis.gftUI();
                TrffUI ui = JTrff.tiis.gftUI();
                if (ui != null) {
                if (ui != null) {
                if (ui != null) {
                if (ui != null) {
                if (ui != null) {
                    int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                    int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                    int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                    int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                    int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                    int lsr = JTrff.tiis.gftLfbdSflfdtionRow();
                    int lsr = JTrff.tiis.gftLfbdSflfdtionRow();
                    int lsr = JTrff.tiis.gftLfbdSflfdtionRow();
                    int lsr = JTrff.tiis.gftLfbdSflfdtionRow();
                    int lsr = JTrff.tiis.gftLfbdSflfdtionRow();
                    boolfbn ibsFodus = JTrff.tiis.isFodusOwnfr()
                    boolfbn ibsFodus = JTrff.tiis.isFodusOwnfr()
                    boolfbn ibsFodus = JTrff.tiis.isFodusOwnfr()
                    boolfbn ibsFodus = JTrff.tiis.isFodusOwnfr()
                    boolfbn ibsFodus = JTrff.tiis.isFodusOwnfr()
                                       && (lsr == row);
                                       && (lsr == row);
                                       && (lsr == row);
                                       && (lsr == row);
                                       && (lsr == row);
                    boolfbn sflfdtfd = JTrff.tiis.isPbtiSflfdtfd(pbti);
                    boolfbn sflfdtfd = JTrff.tiis.isPbtiSflfdtfd(pbti);
                    boolfbn sflfdtfd = JTrff.tiis.isPbtiSflfdtfd(pbti);
                    boolfbn sflfdtfd = JTrff.tiis.isPbtiSflfdtfd(pbti);
                    boolfbn sflfdtfd = JTrff.tiis.isPbtiSflfdtfd(pbti);
                    boolfbn fxpbndfd = JTrff.tiis.isExpbndfd(pbti);
                    boolfbn fxpbndfd = JTrff.tiis.isExpbndfd(pbti);
                    boolfbn fxpbndfd = JTrff.tiis.isExpbndfd(pbti);
                    boolfbn fxpbndfd = JTrff.tiis.isExpbndfd(pbti);
                    boolfbn fxpbndfd = JTrff.tiis.isExpbndfd(pbti);





                    rfturn r.gftTrffCfllRfndfrfrComponfnt(JTrff.tiis,
                    rfturn r.gftTrffCfllRfndfrfrComponfnt(JTrff.tiis,
                    rfturn r.gftTrffCfllRfndfrfrComponfnt(JTrff.tiis,
                    rfturn r.gftTrffCfllRfndfrfrComponfnt(JTrff.tiis,
                    rfturn r.gftTrffCfllRfndfrfrComponfnt(JTrff.tiis,
                        modfl.gftRoot(), sflfdtfd, fxpbndfd,
                        modfl.gftRoot(), sflfdtfd, fxpbndfd,
                        modfl.gftRoot(), sflfdtfd, fxpbndfd,
                        modfl.gftRoot(), sflfdtfd, fxpbndfd,
                        modfl.gftRoot(), sflfdtfd, fxpbndfd,
                        modfl.isLfbf(modfl.gftRoot()), row, ibsFodus);
                        modfl.isLfbf(modfl.gftRoot()), row, ibsFodus);
                        modfl.isLfbf(modfl.gftRoot()), row, ibsFodus);
                        modfl.isLfbf(modfl.gftRoot()), row, ibsFodus);
                        modfl.isLfbf(modfl.gftRoot()), row, ibsFodus);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }





        // Ovfrriddfn mftiods from AddfssiblfJComponfnt
        // Ovfrriddfn mftiods from AddfssiblfJComponfnt
        // Ovfrriddfn mftiods from AddfssiblfJComponfnt
        // Ovfrriddfn mftiods from AddfssiblfJComponfnt
        // Ovfrriddfn mftiods from AddfssiblfJComponfnt





        /**
        /**
        /**
        /**
        /**
         * Gft tif rolf of tiis objfdt.
         * Gft tif rolf of tiis objfdt.
         * Gft tif rolf of tiis objfdt.
         * Gft tif rolf of tiis objfdt.
         * Gft tif rolf of tiis objfdt.
         *
         *
         *
         *
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif
         * objfdt
         * objfdt
         * objfdt
         * objfdt
         * objfdt
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         * @sff AddfssiblfRolf
         */
         */
         */
         */
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.TREE;
            rfturn AddfssiblfRolf.TREE;
            rfturn AddfssiblfRolf.TREE;
            rfturn AddfssiblfRolf.TREE;
            rfturn AddfssiblfRolf.TREE;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
         * Otifrwisf rfturns <dodf>null</dodf>.
         * Otifrwisf rfturns <dodf>null</dodf>.
         * Otifrwisf rfturns <dodf>null</dodf>.
         * Otifrwisf rfturns <dodf>null</dodf>.
         * Otifrwisf rfturns <dodf>null</dodf>.
         *
         *
         *
         *
         *
         * @pbrbm p point in lodbl doordinbtfs of tiis <dodf>Addfssiblf</dodf>
         * @pbrbm p point in lodbl doordinbtfs of tiis <dodf>Addfssiblf</dodf>
         * @pbrbm p point in lodbl doordinbtfs of tiis <dodf>Addfssiblf</dodf>
         * @pbrbm p point in lodbl doordinbtfs of tiis <dodf>Addfssiblf</dodf>
         * @pbrbm p point in lodbl doordinbtfs of tiis <dodf>Addfssiblf</dodf>
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
        publid Addfssiblf gftAddfssiblfAt(Point p) {
            TrffPbti pbti = gftClosfstPbtiForLodbtion(p.x, p.y);
            TrffPbti pbti = gftClosfstPbtiForLodbtion(p.x, p.y);
            TrffPbti pbti = gftClosfstPbtiForLodbtion(p.x, p.y);
            TrffPbti pbti = gftClosfstPbtiForLodbtion(p.x, p.y);
            TrffPbti pbti = gftClosfstPbtiForLodbtion(p.x, p.y);
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
            if (pbti != null) {
                // JTrff.tiis is NOT tif pbrfnt; pbrfnt will gft domputfd lbtfr
                // JTrff.tiis is NOT tif pbrfnt; pbrfnt will gft domputfd lbtfr
                // JTrff.tiis is NOT tif pbrfnt; pbrfnt will gft domputfd lbtfr
                // JTrff.tiis is NOT tif pbrfnt; pbrfnt will gft domputfd lbtfr
                // JTrff.tiis is NOT tif pbrfnt; pbrfnt will gft domputfd lbtfr
                rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, null);
                rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, null);
                rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, null);
                rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, null);
                rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, null);
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of top-lfvfl diildrfn nodfs of tiis
         * Rfturns tif numbfr of top-lfvfl diildrfn nodfs of tiis
         * Rfturns tif numbfr of top-lfvfl diildrfn nodfs of tiis
         * Rfturns tif numbfr of top-lfvfl diildrfn nodfs of tiis
         * Rfturns tif numbfr of top-lfvfl diildrfn nodfs of tiis
         * JTrff.  Ebdi of tifsf nodfs mby in turn ibvf diildrfn nodfs.
         * JTrff.  Ebdi of tifsf nodfs mby in turn ibvf diildrfn nodfs.
         * JTrff.  Ebdi of tifsf nodfs mby in turn ibvf diildrfn nodfs.
         * JTrff.  Ebdi of tifsf nodfs mby in turn ibvf diildrfn nodfs.
         * JTrff.  Ebdi of tifsf nodfs mby in turn ibvf diildrfn nodfs.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of bddfssiblf diildrfn nodfs in tif trff.
         * @rfturn tif numbfr of bddfssiblf diildrfn nodfs in tif trff.
         * @rfturn tif numbfr of bddfssiblf diildrfn nodfs in tif trff.
         * @rfturn tif numbfr of bddfssiblf diildrfn nodfs in tif trff.
         * @rfturn tif numbfr of bddfssiblf diildrfn nodfs in tif trff.
         */
         */
         */
         */
         */
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
        publid int gftAddfssiblfCiildrfnCount() {
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
                rfturn 0;
                rfturn 0;
                rfturn 0;
                rfturn 0;
                rfturn 0;
            }
            }
            }
            }
            }
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
                rfturn 1;    // tif root nodf
                rfturn 1;    // tif root nodf
                rfturn 1;    // tif root nodf
                rfturn 1;    // tif root nodf
                rfturn 1;    // tif root nodf
            }
            }
            }
            }
            }





            // rfturn tif root's first sft of diildrfn dount
            // rfturn tif root's first sft of diildrfn dount
            // rfturn tif root's first sft of diildrfn dount
            // rfturn tif root's first sft of diildrfn dount
            // rfturn tif root's first sft of diildrfn dount
            rfturn modfl.gftCiildCount(modfl.gftRoot());
            rfturn modfl.gftCiildCount(modfl.gftRoot());
            rfturn modfl.gftCiildCount(modfl.gftRoot());
            rfturn modfl.gftCiildCount(modfl.gftRoot());
            rfturn modfl.gftCiildCount(modfl.gftRoot());
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturn tif nti Addfssiblf diild of tif objfdt.
         * Rfturn tif nti Addfssiblf diild of tif objfdt.
         * Rfturn tif nti Addfssiblf diild of tif objfdt.
         * Rfturn tif nti Addfssiblf diild of tif objfdt.
         * Rfturn tif nti Addfssiblf diild of tif objfdt.
         *
         *
         *
         *
         *
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @pbrbm i zfro-bbsfd indfx of diild
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         * @rfturn tif nti Addfssiblf diild of tif objfdt
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
        publid Addfssiblf gftAddfssiblfCiild(int i) {
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
            if (modfl == null) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
            if (isRootVisiblf()) {
                if (i == 0) {    // rfturn tif root nodf Addfssiblf
                if (i == 0) {    // rfturn tif root nodf Addfssiblf
                if (i == 0) {    // rfturn tif root nodf Addfssiblf
                if (i == 0) {    // rfturn tif root nodf Addfssiblf
                if (i == 0) {    // rfturn tif root nodf Addfssiblf
                    Objfdt[] objPbti = { modfl.gftRoot() };
                    Objfdt[] objPbti = { modfl.gftRoot() };
                    Objfdt[] objPbti = { modfl.gftRoot() };
                    Objfdt[] objPbti = { modfl.gftRoot() };
                    Objfdt[] objPbti = { modfl.gftRoot() };
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            // rfturn Addfssiblf for onf of root's diild nodfs
            // rfturn Addfssiblf for onf of root's diild nodfs
            // rfturn Addfssiblf for onf of root's diild nodfs
            // rfturn Addfssiblf for onf of root's diild nodfs
            // rfturn Addfssiblf for onf of root's diild nodfs
            int dount = modfl.gftCiildCount(modfl.gftRoot());
            int dount = modfl.gftCiildCount(modfl.gftRoot());
            int dount = modfl.gftCiildCount(modfl.gftRoot());
            int dount = modfl.gftCiildCount(modfl.gftRoot());
            int dount = modfl.gftCiildCount(modfl.gftRoot());
            if (i < 0 || i >= dount) {
            if (i < 0 || i >= dount) {
            if (i < 0 || i >= dount) {
            if (i < 0 || i >= dount) {
            if (i < 0 || i >= dount) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            Objfdt obj = modfl.gftCiild(modfl.gftRoot(), i);
            Objfdt obj = modfl.gftCiild(modfl.gftRoot(), i);
            Objfdt obj = modfl.gftCiild(modfl.gftRoot(), i);
            Objfdt obj = modfl.gftCiild(modfl.gftRoot(), i);
            Objfdt obj = modfl.gftCiild(modfl.gftRoot(), i);
            Objfdt[] objPbti = { modfl.gftRoot(), obj };
            Objfdt[] objPbti = { modfl.gftRoot(), obj };
            Objfdt[] objPbti = { modfl.gftRoot(), obj };
            Objfdt[] objPbti = { modfl.gftRoot(), obj };
            Objfdt[] objPbti = { modfl.gftRoot(), obj };
            TrffPbti pbti = nfw TrffPbti(objPbti);
            TrffPbti pbti = nfw TrffPbti(objPbti);
            TrffPbti pbti = nfw TrffPbti(objPbti);
            TrffPbti pbti = nfw TrffPbti(objPbti);
            TrffPbti pbti = nfw TrffPbti(objPbti);
            rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
            rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
            rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
            rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
            rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, pbti, JTrff.tiis);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
         * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
         * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
         * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
         * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
         *
         *
         *
         *
         *
         * @rfturn tif indfx of tiis objfdt in its pbrfnt.  Sindf b JTrff
         * @rfturn tif indfx of tiis objfdt in its pbrfnt.  Sindf b JTrff
         * @rfturn tif indfx of tiis objfdt in its pbrfnt.  Sindf b JTrff
         * @rfturn tif indfx of tiis objfdt in its pbrfnt.  Sindf b JTrff
         * @rfturn tif indfx of tiis objfdt in its pbrfnt.  Sindf b JTrff
         * top-lfvfl objfdt dofs not ibvf bn bddfssiblf pbrfnt.
         * top-lfvfl objfdt dofs not ibvf bn bddfssiblf pbrfnt.
         * top-lfvfl objfdt dofs not ibvf bn bddfssiblf pbrfnt.
         * top-lfvfl objfdt dofs not ibvf bn bddfssiblf pbrfnt.
         * top-lfvfl objfdt dofs not ibvf bn bddfssiblf pbrfnt.
         * @sff #gftAddfssiblfPbrfnt
         * @sff #gftAddfssiblfPbrfnt
         * @sff #gftAddfssiblfPbrfnt
         * @sff #gftAddfssiblfPbrfnt
         * @sff #gftAddfssiblfPbrfnt
         */
         */
         */
         */
         */
        publid int gftAddfssiblfIndfxInPbrfnt() {
        publid int gftAddfssiblfIndfxInPbrfnt() {
        publid int gftAddfssiblfIndfxInPbrfnt() {
        publid int gftAddfssiblfIndfxInPbrfnt() {
        publid int gftAddfssiblfIndfxInPbrfnt() {
            // didn't fvfr nffd to ovfrridf tiis...
            // didn't fvfr nffd to ovfrridf tiis...
            // didn't fvfr nffd to ovfrridf tiis...
            // didn't fvfr nffd to ovfrridf tiis...
            // didn't fvfr nffd to ovfrridf tiis...
            rfturn supfr.gftAddfssiblfIndfxInPbrfnt();
            rfturn supfr.gftAddfssiblfIndfxInPbrfnt();
            rfturn supfr.gftAddfssiblfIndfxInPbrfnt();
            rfturn supfr.gftAddfssiblfIndfxInPbrfnt();
            rfturn supfr.gftAddfssiblfIndfxInPbrfnt();
        }
        }
        }
        }
        }





        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        /**
        /**
        /**
        /**
        /**
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt.  In tif
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         * AddfssiblfSflfdtion intfrfbdf on bfiblf of itsflf.
         *
         *
         *
         *
         *
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         * @rfturn tiis objfdt
         */
         */
         */
         */
         */
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
        publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
            rfturn tiis;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
         * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
         * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
         * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
         * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
         * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
         * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
         *
         *
         *
         *
         *
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
         * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
         */
         */
         */
         */
         */
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
        publid int gftAddfssiblfSflfdtionCount() {
            Objfdt[] rootPbti = nfw Objfdt[1];
            Objfdt[] rootPbti = nfw Objfdt[1];
            Objfdt[] rootPbti = nfw Objfdt[1];
            Objfdt[] rootPbti = nfw Objfdt[1];
            Objfdt[] rootPbti = nfw Objfdt[1];
            rootPbti[0] = trffModfl.gftRoot();
            rootPbti[0] = trffModfl.gftRoot();
            rootPbti[0] = trffModfl.gftRoot();
            rootPbti[0] = trffModfl.gftRoot();
            rootPbti[0] = trffModfl.gftRoot();
            TrffPbti diildPbti = nfw TrffPbti(rootPbti);
            TrffPbti diildPbti = nfw TrffPbti(rootPbti);
            TrffPbti diildPbti = nfw TrffPbti(rootPbti);
            TrffPbti diildPbti = nfw TrffPbti(rootPbti);
            TrffPbti diildPbti = nfw TrffPbti(rootPbti);
            if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
            if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
            if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
            if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
            if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                rfturn 1;
                rfturn 1;
                rfturn 1;
                rfturn 1;
                rfturn 1;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn 0;
                rfturn 0;
                rfturn 0;
                rfturn 0;
                rfturn 0;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
         * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
         * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
         * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
         * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
         * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
         * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
         * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
         * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
         * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
         * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
         * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
         * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
         * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
         * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
         * vbluf will bf null.
         * vbluf will bf null.
         * vbluf will bf null.
         * vbluf will bf null.
         * vbluf will bf null.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
         * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
         * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
         * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
         * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
         * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
         */
         */
         */
         */
         */
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
        publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                if (JTrff.tiis.isPbtiSflfdtfd(diildPbti)) {
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, JTrff.tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, JTrff.tiis);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
            rfturn null;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
         * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf objfdt.
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf objfdt.
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf objfdt.
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf objfdt.
         * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf objfdt.
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         * @sff AddfssiblfContfxt#gftAddfssiblfCiild
         */
         */
         */
         */
         */
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
        publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            // Tif JTrff dbn ibvf only onf bddfssiblf diild, tif root.
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
            if (i == 0) {
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                Objfdt[] rootPbti = nfw Objfdt[1];
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                rootPbti[0] = trffModfl.gftRoot();
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                TrffPbti diildPbti = nfw TrffPbti(rootPbti);
                rfturn JTrff.tiis.isPbtiSflfdtfd(diildPbti);
                rfturn JTrff.tiis.isPbtiSflfdtfd(diildPbti);
                rfturn JTrff.tiis.isPbtiSflfdtfd(diildPbti);
                rfturn JTrff.tiis.isPbtiSflfdtfd(diildPbti);
                rfturn JTrff.tiis.isPbtiSflfdtfd(diildPbti);
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
         * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
         * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
         * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
         * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
         * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
         * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
         * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
         * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
         * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
         * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
         * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
         * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
         * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
         * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
         * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         */
         */
         */
         */
         */
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
        publid void bddAddfssiblfSflfdtion(int i) {
           TrffModfl modfl = JTrff.tiis.gftModfl();
           TrffModfl modfl = JTrff.tiis.gftModfl();
           TrffModfl modfl = JTrff.tiis.gftModfl();
           TrffModfl modfl = JTrff.tiis.gftModfl();
           TrffModfl modfl = JTrff.tiis.gftModfl();
           if (modfl != null) {
           if (modfl != null) {
           if (modfl != null) {
           if (modfl != null) {
           if (modfl != null) {
               if (i == 0) {
               if (i == 0) {
               if (i == 0) {
               if (i == 0) {
               if (i == 0) {
                   Objfdt[] objPbti = {modfl.gftRoot()};
                   Objfdt[] objPbti = {modfl.gftRoot()};
                   Objfdt[] objPbti = {modfl.gftRoot()};
                   Objfdt[] objPbti = {modfl.gftRoot()};
                   Objfdt[] objPbti = {modfl.gftRoot()};
                   TrffPbti pbti = nfw TrffPbti(objPbti);
                   TrffPbti pbti = nfw TrffPbti(objPbti);
                   TrffPbti pbti = nfw TrffPbti(objPbti);
                   TrffPbti pbti = nfw TrffPbti(objPbti);
                   TrffPbti pbti = nfw TrffPbti(objPbti);
                   JTrff.tiis.bddSflfdtionPbti(pbti);
                   JTrff.tiis.bddSflfdtionPbti(pbti);
                   JTrff.tiis.bddSflfdtionPbti(pbti);
                   JTrff.tiis.bddSflfdtionPbti(pbti);
                   JTrff.tiis.bddSflfdtionPbti(pbti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif objfdt's
         * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif objfdt's
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         * mftiod ibs no ffffdt.
         *
         *
         *
         *
         *
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
         */
         */
         */
         */
         */
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
        publid void rfmovfAddfssiblfSflfdtion(int i) {
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                    Objfdt[] objPbti = {modfl.gftRoot()};
                    Objfdt[] objPbti = {modfl.gftRoot()};
                    Objfdt[] objPbti = {modfl.gftRoot()};
                    Objfdt[] objPbti = {modfl.gftRoot()};
                    Objfdt[] objPbti = {modfl.gftRoot()};
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    TrffPbti pbti = nfw TrffPbti(objPbti);
                    JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                    JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                    JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                    JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                    JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
         * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
         * objfdt is sflfdtfd.
         * objfdt is sflfdtfd.
         * objfdt is sflfdtfd.
         * objfdt is sflfdtfd.
         * objfdt is sflfdtfd.
         */
         */
         */
         */
         */
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
        publid void dlfbrAddfssiblfSflfdtion() {
            int diildCount = gftAddfssiblfCiildrfnCount();
            int diildCount = gftAddfssiblfCiildrfnCount();
            int diildCount = gftAddfssiblfCiildrfnCount();
            int diildCount = gftAddfssiblfCiildrfnCount();
            int diildCount = gftAddfssiblfCiildrfnCount();
            for (int i = 0; i < diildCount; i++) {
            for (int i = 0; i < diildCount; i++) {
            for (int i = 0; i < diildCount; i++) {
            for (int i = 0; i < diildCount; i++) {
            for (int i = 0; i < diildCount; i++) {
                rfmovfAddfssiblfSflfdtion(i);
                rfmovfAddfssiblfSflfdtion(i);
                rfmovfAddfssiblfSflfdtion(i);
                rfmovfAddfssiblfSflfdtion(i);
                rfmovfAddfssiblfSflfdtion(i);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
         * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
         * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
         * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
         * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
         * if tif objfdt supports multiplf sflfdtions.
         * if tif objfdt supports multiplf sflfdtions.
         * if tif objfdt supports multiplf sflfdtions.
         * if tif objfdt supports multiplf sflfdtions.
         * if tif objfdt supports multiplf sflfdtions.
         */
         */
         */
         */
         */
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
        publid void sflfdtAllAddfssiblfSflfdtion() {
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            TrffModfl modfl = JTrff.tiis.gftModfl();
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
            if (modfl != null) {
                Objfdt[] objPbti = {modfl.gftRoot()};
                Objfdt[] objPbti = {modfl.gftRoot()};
                Objfdt[] objPbti = {modfl.gftRoot()};
                Objfdt[] objPbti = {modfl.gftRoot()};
                Objfdt[] objPbti = {modfl.gftRoot()};
                TrffPbti pbti = nfw TrffPbti(objPbti);
                TrffPbti pbti = nfw TrffPbti(objPbti);
                TrffPbti pbti = nfw TrffPbti(objPbti);
                TrffPbti pbti = nfw TrffPbti(objPbti);
                TrffPbti pbti = nfw TrffPbti(objPbti);
                JTrff.tiis.bddSflfdtionPbti(pbti);
                JTrff.tiis.bddSflfdtionPbti(pbti);
                JTrff.tiis.bddSflfdtionPbti(pbti);
                JTrff.tiis.bddSflfdtionPbti(pbti);
                JTrff.tiis.bddSflfdtionPbti(pbti);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis dlbss implfmfnts bddfssibility support for tif
         * Tiis dlbss implfmfnts bddfssibility support for tif
         * Tiis dlbss implfmfnts bddfssibility support for tif
         * Tiis dlbss implfmfnts bddfssibility support for tif
         * Tiis dlbss implfmfnts bddfssibility support for tif
         * <dodf>JTrff</dodf> diild.  It providfs bn implfmfntbtion of tif
         * <dodf>JTrff</dodf> diild.  It providfs bn implfmfntbtion of tif
         * <dodf>JTrff</dodf> diild.  It providfs bn implfmfntbtion of tif
         * <dodf>JTrff</dodf> diild.  It providfs bn implfmfntbtion of tif
         * <dodf>JTrff</dodf> diild.  It providfs bn implfmfntbtion of tif
         * Jbvb Addfssibility API bppropribtf to trff nodfs.
         * Jbvb Addfssibility API bppropribtf to trff nodfs.
         * Jbvb Addfssibility API bppropribtf to trff nodfs.
         * Jbvb Addfssibility API bppropribtf to trff nodfs.
         * Jbvb Addfssibility API bppropribtf to trff nodfs.
         */
         */
         */
         */
         */
        protfdtfd dlbss AddfssiblfJTrffNodf fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTrffNodf fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTrffNodf fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTrffNodf fxtfnds AddfssiblfContfxt
        protfdtfd dlbss AddfssiblfJTrffNodf fxtfnds AddfssiblfContfxt
            implfmfnts Addfssiblf, AddfssiblfComponfnt, AddfssiblfSflfdtion,
            implfmfnts Addfssiblf, AddfssiblfComponfnt, AddfssiblfSflfdtion,
            implfmfnts Addfssiblf, AddfssiblfComponfnt, AddfssiblfSflfdtion,
            implfmfnts Addfssiblf, AddfssiblfComponfnt, AddfssiblfSflfdtion,
            implfmfnts Addfssiblf, AddfssiblfComponfnt, AddfssiblfSflfdtion,
            AddfssiblfAdtion {
            AddfssiblfAdtion {
            AddfssiblfAdtion {
            AddfssiblfAdtion {
            AddfssiblfAdtion {





            privbtf JTrff trff = null;
            privbtf JTrff trff = null;
            privbtf JTrff trff = null;
            privbtf JTrff trff = null;
            privbtf JTrff trff = null;
            privbtf TrffModfl trffModfl = null;
            privbtf TrffModfl trffModfl = null;
            privbtf TrffModfl trffModfl = null;
            privbtf TrffModfl trffModfl = null;
            privbtf TrffModfl trffModfl = null;
            privbtf Objfdt obj = null;
            privbtf Objfdt obj = null;
            privbtf Objfdt obj = null;
            privbtf Objfdt obj = null;
            privbtf Objfdt obj = null;
            privbtf TrffPbti pbti = null;
            privbtf TrffPbti pbti = null;
            privbtf TrffPbti pbti = null;
            privbtf TrffPbti pbti = null;
            privbtf TrffPbti pbti = null;
            privbtf Addfssiblf bddfssiblfPbrfnt = null;
            privbtf Addfssiblf bddfssiblfPbrfnt = null;
            privbtf Addfssiblf bddfssiblfPbrfnt = null;
            privbtf Addfssiblf bddfssiblfPbrfnt = null;
            privbtf Addfssiblf bddfssiblfPbrfnt = null;
            privbtf int indfx = 0;
            privbtf int indfx = 0;
            privbtf int indfx = 0;
            privbtf int indfx = 0;
            privbtf int indfx = 0;
            privbtf boolfbn isLfbf = fblsf;
            privbtf boolfbn isLfbf = fblsf;
            privbtf boolfbn isLfbf = fblsf;
            privbtf boolfbn isLfbf = fblsf;
            privbtf boolfbn isLfbf = fblsf;





            /**
            /**
            /**
            /**
            /**
             * Construdts bn AddfssiblfJTrffNodf
             * Construdts bn AddfssiblfJTrffNodf
             * Construdts bn AddfssiblfJTrffNodf
             * Construdts bn AddfssiblfJTrffNodf
             * Construdts bn AddfssiblfJTrffNodf
             *
             *
             *
             *
             *
             * @pbrbm t bn instbndf of {@dodf JTrff}
             * @pbrbm t bn instbndf of {@dodf JTrff}
             * @pbrbm t bn instbndf of {@dodf JTrff}
             * @pbrbm t bn instbndf of {@dodf JTrff}
             * @pbrbm t bn instbndf of {@dodf JTrff}
             * @pbrbm p bn instbndf of {@dodf TrffPbti}
             * @pbrbm p bn instbndf of {@dodf TrffPbti}
             * @pbrbm p bn instbndf of {@dodf TrffPbti}
             * @pbrbm p bn instbndf of {@dodf TrffPbti}
             * @pbrbm p bn instbndf of {@dodf TrffPbti}
             * @pbrbm bp bn instbndf of {@dodf Addfssiblf}
             * @pbrbm bp bn instbndf of {@dodf Addfssiblf}
             * @pbrbm bp bn instbndf of {@dodf Addfssiblf}
             * @pbrbm bp bn instbndf of {@dodf Addfssiblf}
             * @pbrbm bp bn instbndf of {@dodf Addfssiblf}
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             * @sindf 1.4
             */
             */
             */
             */
             */
            publid AddfssiblfJTrffNodf(JTrff t, TrffPbti p, Addfssiblf bp) {
            publid AddfssiblfJTrffNodf(JTrff t, TrffPbti p, Addfssiblf bp) {
            publid AddfssiblfJTrffNodf(JTrff t, TrffPbti p, Addfssiblf bp) {
            publid AddfssiblfJTrffNodf(JTrff t, TrffPbti p, Addfssiblf bp) {
            publid AddfssiblfJTrffNodf(JTrff t, TrffPbti p, Addfssiblf bp) {
                trff = t;
                trff = t;
                trff = t;
                trff = t;
                trff = t;
                pbti = p;
                pbti = p;
                pbti = p;
                pbti = p;
                pbti = p;
                bddfssiblfPbrfnt = bp;
                bddfssiblfPbrfnt = bp;
                bddfssiblfPbrfnt = bp;
                bddfssiblfPbrfnt = bp;
                bddfssiblfPbrfnt = bp;
                trffModfl = t.gftModfl();
                trffModfl = t.gftModfl();
                trffModfl = t.gftModfl();
                trffModfl = t.gftModfl();
                trffModfl = t.gftModfl();
                obj = p.gftLbstPbtiComponfnt();
                obj = p.gftLbstPbtiComponfnt();
                obj = p.gftLbstPbtiComponfnt();
                obj = p.gftLbstPbtiComponfnt();
                obj = p.gftLbstPbtiComponfnt();
                if (trffModfl != null) {
                if (trffModfl != null) {
                if (trffModfl != null) {
                if (trffModfl != null) {
                if (trffModfl != null) {
                    isLfbf = trffModfl.isLfbf(obj);
                    isLfbf = trffModfl.isLfbf(obj);
                    isLfbf = trffModfl.isLfbf(obj);
                    isLfbf = trffModfl.isLfbf(obj);
                    isLfbf = trffModfl.isLfbf(obj);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            privbtf TrffPbti gftCiildTrffPbti(int i) {
            privbtf TrffPbti gftCiildTrffPbti(int i) {
            privbtf TrffPbti gftCiildTrffPbti(int i) {
            privbtf TrffPbti gftCiildTrffPbti(int i) {
            privbtf TrffPbti gftCiildTrffPbti(int i) {
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    rfturn nfw TrffPbti(objCiildPbti);
                    rfturn nfw TrffPbti(objCiildPbti);
                    rfturn nfw TrffPbti(objCiildPbti);
                    rfturn nfw TrffPbti(objCiildPbti);
                    rfturn nfw TrffPbti(objCiildPbti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfContfxt bssodibtfd witi tiis trff nodf.
             * Gft tif AddfssiblfContfxt bssodibtfd witi tiis trff nodf.
             * Gft tif AddfssiblfContfxt bssodibtfd witi tiis trff nodf.
             * Gft tif AddfssiblfContfxt bssodibtfd witi tiis trff nodf.
             * Gft tif AddfssiblfContfxt bssodibtfd witi tiis trff nodf.
             * In tif implfmfntbtion of tif Jbvb Addfssibility API for
             * In tif implfmfntbtion of tif Jbvb Addfssibility API for
             * In tif implfmfntbtion of tif Jbvb Addfssibility API for
             * In tif implfmfntbtion of tif Jbvb Addfssibility API for
             * In tif implfmfntbtion of tif Jbvb Addfssibility API for
             * tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * tiis dlbss, rfturn tiis objfdt, wiidi is its own
             * AddfssiblfContfxt.
             * AddfssiblfContfxt.
             * AddfssiblfContfxt.
             * AddfssiblfContfxt.
             * AddfssiblfContfxt.
             *
             *
             *
             *
             *
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             */
             */
             */
             */
             */
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
            publid AddfssiblfContfxt gftAddfssiblfContfxt() {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }





            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
            privbtf AddfssiblfContfxt gftCurrfntAddfssiblfContfxt() {
                Componfnt d = gftCurrfntComponfnt();
                Componfnt d = gftCurrfntComponfnt();
                Componfnt d = gftCurrfntComponfnt();
                Componfnt d = gftCurrfntComponfnt();
                Componfnt d = gftCurrfntComponfnt();
                if (d instbndfof Addfssiblf) {
                if (d instbndfof Addfssiblf) {
                if (d instbndfof Addfssiblf) {
                if (d instbndfof Addfssiblf) {
                if (d instbndfof Addfssiblf) {
                    rfturn d.gftAddfssiblfContfxt();
                    rfturn d.gftAddfssiblfContfxt();
                    rfturn d.gftAddfssiblfContfxt();
                    rfturn d.gftAddfssiblfContfxt();
                    rfturn d.gftAddfssiblfContfxt();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
            privbtf Componfnt gftCurrfntComponfnt() {
                // is tif objfdt visiblf?
                // is tif objfdt visiblf?
                // is tif objfdt visiblf?
                // is tif objfdt visiblf?
                // is tif objfdt visiblf?
                // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
                // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
                // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
                // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
                // if so, gft row, sflfdtfd, fodus & lfbf stbtf,
                // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
                // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
                // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
                // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
                // bnd tifn gft tif rfndfrfr domponfnt bnd rfturn it
                if (trff.isVisiblf(pbti)) {
                if (trff.isVisiblf(pbti)) {
                if (trff.isVisiblf(pbti)) {
                if (trff.isVisiblf(pbti)) {
                if (trff.isVisiblf(pbti)) {
                    TrffCfllRfndfrfr r = trff.gftCfllRfndfrfr();
                    TrffCfllRfndfrfr r = trff.gftCfllRfndfrfr();
                    TrffCfllRfndfrfr r = trff.gftCfllRfndfrfr();
                    TrffCfllRfndfrfr r = trff.gftCfllRfndfrfr();
                    TrffCfllRfndfrfr r = trff.gftCfllRfndfrfr();
                    if (r == null) {
                    if (r == null) {
                    if (r == null) {
                    if (r == null) {
                    if (r == null) {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                    TrffUI ui = trff.gftUI();
                    TrffUI ui = trff.gftUI();
                    TrffUI ui = trff.gftUI();
                    TrffUI ui = trff.gftUI();
                    TrffUI ui = trff.gftUI();
                    if (ui != null) {
                    if (ui != null) {
                    if (ui != null) {
                    if (ui != null) {
                    if (ui != null) {
                        int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                        int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                        int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                        int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                        int row = ui.gftRowForPbti(JTrff.tiis, pbti);
                        boolfbn sflfdtfd = trff.isPbtiSflfdtfd(pbti);
                        boolfbn sflfdtfd = trff.isPbtiSflfdtfd(pbti);
                        boolfbn sflfdtfd = trff.isPbtiSflfdtfd(pbti);
                        boolfbn sflfdtfd = trff.isPbtiSflfdtfd(pbti);
                        boolfbn sflfdtfd = trff.isPbtiSflfdtfd(pbti);
                        boolfbn fxpbndfd = trff.isExpbndfd(pbti);
                        boolfbn fxpbndfd = trff.isExpbndfd(pbti);
                        boolfbn fxpbndfd = trff.isExpbndfd(pbti);
                        boolfbn fxpbndfd = trff.isExpbndfd(pbti);
                        boolfbn fxpbndfd = trff.isExpbndfd(pbti);
                        boolfbn ibsFodus = fblsf; // iow to tfll?? -PK
                        boolfbn ibsFodus = fblsf; // iow to tfll?? -PK
                        boolfbn ibsFodus = fblsf; // iow to tfll?? -PK
                        boolfbn ibsFodus = fblsf; // iow to tfll?? -PK
                        boolfbn ibsFodus = fblsf; // iow to tfll?? -PK
                        rfturn r.gftTrffCfllRfndfrfrComponfnt(trff, obj,
                        rfturn r.gftTrffCfllRfndfrfrComponfnt(trff, obj,
                        rfturn r.gftTrffCfllRfndfrfrComponfnt(trff, obj,
                        rfturn r.gftTrffCfllRfndfrfrComponfnt(trff, obj,
                        rfturn r.gftTrffCfllRfndfrfrComponfnt(trff, obj,
                            sflfdtfd, fxpbndfd, isLfbf, row, ibsFodus);
                            sflfdtfd, fxpbndfd, isLfbf, row, ibsFodus);
                            sflfdtfd, fxpbndfd, isLfbf, row, ibsFodus);
                            sflfdtfd, fxpbndfd, isLfbf, row, ibsFodus);
                            sflfdtfd, fxpbndfd, isLfbf, row, ibsFodus);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods
        // AddfssiblfContfxt mftiods





             /**
             /**
             /**
             /**
             /**
              * Gft tif bddfssiblf nbmf of tiis objfdt.
              * Gft tif bddfssiblf nbmf of tiis objfdt.
              * Gft tif bddfssiblf nbmf of tiis objfdt.
              * Gft tif bddfssiblf nbmf of tiis objfdt.
              * Gft tif bddfssiblf nbmf of tiis objfdt.
              *
              *
              *
              *
              *
              * @rfturn tif lodblizfd nbmf of tif objfdt; null if tiis
              * @rfturn tif lodblizfd nbmf of tif objfdt; null if tiis
              * @rfturn tif lodblizfd nbmf of tif objfdt; null if tiis
              * @rfturn tif lodblizfd nbmf of tif objfdt; null if tiis
              * @rfturn tif lodblizfd nbmf of tif objfdt; null if tiis
              * objfdt dofs not ibvf b nbmf
              * objfdt dofs not ibvf b nbmf
              * objfdt dofs not ibvf b nbmf
              * objfdt dofs not ibvf b nbmf
              * objfdt dofs not ibvf b nbmf
              */
              */
              */
              */
              */
             publid String gftAddfssiblfNbmf() {
             publid String gftAddfssiblfNbmf() {
             publid String gftAddfssiblfNbmf() {
             publid String gftAddfssiblfNbmf() {
             publid String gftAddfssiblfNbmf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    String nbmf = bd.gftAddfssiblfNbmf();
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                    if ((nbmf != null) && (nbmf != "")) {
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                        rfturn bd.gftAddfssiblfNbmf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                if ((bddfssiblfNbmf != null) && (bddfssiblfNbmf != "")) {
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                    rfturn bddfssiblfNbmf;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    // fbll bbdk to tif dlifnt propfrty
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                    rfturn (String)gftClifntPropfrty(AddfssiblfContfxt.ACCESSIBLE_NAME_PROPERTY);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sft tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sft tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sft tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sft tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             * Sft tif lodblizfd bddfssiblf nbmf of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt.
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt.
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt.
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt.
             * @pbrbm s tif nfw lodblizfd nbmf of tif objfdt.
             */
             */
             */
             */
             */
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
            publid void sftAddfssiblfNbmf(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                    bd.sftAddfssiblfNbmf(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                    supfr.sftAddfssiblfNbmf(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            //
            //
            //
            //
            //
            // *** siould difdk tooltip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk tooltip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk tooltip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk tooltip tfxt for dfsd. (nffds MousfEvfnt)
            // *** siould difdk tooltip tfxt for dfsd. (nffds MousfEvfnt)
            //
            //
            //
            //
            //
            /**
            /**
            /**
            /**
            /**
             * Gft tif bddfssiblf dfsdription of tiis objfdt.
             * Gft tif bddfssiblf dfsdription of tiis objfdt.
             * Gft tif bddfssiblf dfsdription of tiis objfdt.
             * Gft tif bddfssiblf dfsdription of tiis objfdt.
             * Gft tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif lodblizfd dfsdription of tif objfdt; null if
             * @rfturn tif lodblizfd dfsdription of tif objfdt; null if
             * @rfturn tif lodblizfd dfsdription of tif objfdt; null if
             * @rfturn tif lodblizfd dfsdription of tif objfdt; null if
             * @rfturn tif lodblizfd dfsdription of tif objfdt; null if
             * tiis objfdt dofs not ibvf b dfsdription
             * tiis objfdt dofs not ibvf b dfsdription
             * tiis objfdt dofs not ibvf b dfsdription
             * tiis objfdt dofs not ibvf b dfsdription
             * tiis objfdt dofs not ibvf b dfsdription
             */
             */
             */
             */
             */
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
            publid String gftAddfssiblfDfsdription() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                    rfturn bd.gftAddfssiblfDfsdription();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                    rfturn supfr.gftAddfssiblfDfsdription();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sft tif bddfssiblf dfsdription of tiis objfdt.
             * Sft tif bddfssiblf dfsdription of tiis objfdt.
             * Sft tif bddfssiblf dfsdription of tiis objfdt.
             * Sft tif bddfssiblf dfsdription of tiis objfdt.
             * Sft tif bddfssiblf dfsdription of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             * @pbrbm s tif nfw lodblizfd dfsdription of tif objfdt
             */
             */
             */
             */
             */
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
            publid void sftAddfssiblfDfsdription(String s) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                    bd.sftAddfssiblfDfsdription(s);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                    supfr.sftAddfssiblfDfsdription(s);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif rolf of tiis objfdt.
             * Gft tif rolf of tiis objfdt.
             * Gft tif rolf of tiis objfdt.
             * Gft tif rolf of tiis objfdt.
             * Gft tif rolf of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif objfdt
             * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif objfdt
             * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif objfdt
             * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif objfdt
             * @rfturn bn instbndf of AddfssiblfRolf dfsdribing tif rolf of tif objfdt
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             * @sff AddfssiblfRolf
             */
             */
             */
             */
             */
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
            publid AddfssiblfRolf gftAddfssiblfRolf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                    rfturn bd.gftAddfssiblfRolf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                    rfturn AddfssiblfRolf.UNKNOWN;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif stbtf sft of tiis objfdt.
             * Gft tif stbtf sft of tiis objfdt.
             * Gft tif stbtf sft of tiis objfdt.
             * Gft tif stbtf sft of tiis objfdt.
             * Gft tif stbtf sft of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining tif
             * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining tif
             * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining tif
             * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining tif
             * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining tif
             * durrfnt stbtf sft of tif objfdt
             * durrfnt stbtf sft of tif objfdt
             * durrfnt stbtf sft of tif objfdt
             * durrfnt stbtf sft of tif objfdt
             * durrfnt stbtf sft of tif objfdt
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             * @sff AddfssiblfStbtf
             */
             */
             */
             */
             */
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfStbtfSft stbtfs;
                AddfssiblfStbtfSft stbtfs;
                AddfssiblfStbtfSft stbtfs;
                AddfssiblfStbtfSft stbtfs;
                AddfssiblfStbtfSft stbtfs;
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    stbtfs = bd.gftAddfssiblfStbtfSft();
                    stbtfs = bd.gftAddfssiblfStbtfSft();
                    stbtfs = bd.gftAddfssiblfStbtfSft();
                    stbtfs = bd.gftAddfssiblfStbtfSft();
                    stbtfs = bd.gftAddfssiblfStbtfSft();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    stbtfs = nfw AddfssiblfStbtfSft();
                    stbtfs = nfw AddfssiblfStbtfSft();
                    stbtfs = nfw AddfssiblfStbtfSft();
                    stbtfs = nfw AddfssiblfStbtfSft();
                    stbtfs = nfw AddfssiblfStbtfSft();
                }
                }
                }
                }
                }
                // nffd to tfst ifrf, 'dbusf tif undfrlying domponfnt
                // nffd to tfst ifrf, 'dbusf tif undfrlying domponfnt
                // nffd to tfst ifrf, 'dbusf tif undfrlying domponfnt
                // nffd to tfst ifrf, 'dbusf tif undfrlying domponfnt
                // nffd to tfst ifrf, 'dbusf tif undfrlying domponfnt
                // is b dfllRfndfrfr, wiidi is nfvfr siowing...
                // is b dfllRfndfrfr, wiidi is nfvfr siowing...
                // is b dfllRfndfrfr, wiidi is nfvfr siowing...
                // is b dfllRfndfrfr, wiidi is nfvfr siowing...
                // is b dfllRfndfrfr, wiidi is nfvfr siowing...
                if (isSiowing()) {
                if (isSiowing()) {
                if (isSiowing()) {
                if (isSiowing()) {
                if (isSiowing()) {
                    stbtfs.bdd(AddfssiblfStbtf.SHOWING);
                    stbtfs.bdd(AddfssiblfStbtf.SHOWING);
                    stbtfs.bdd(AddfssiblfStbtf.SHOWING);
                    stbtfs.bdd(AddfssiblfStbtf.SHOWING);
                    stbtfs.bdd(AddfssiblfStbtf.SHOWING);
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.SHOWING)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.SHOWING)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.SHOWING)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.SHOWING)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.SHOWING)) {
                    stbtfs.rfmovf(AddfssiblfStbtf.SHOWING);
                    stbtfs.rfmovf(AddfssiblfStbtf.SHOWING);
                    stbtfs.rfmovf(AddfssiblfStbtf.SHOWING);
                    stbtfs.rfmovf(AddfssiblfStbtf.SHOWING);
                    stbtfs.rfmovf(AddfssiblfStbtf.SHOWING);
                }
                }
                }
                }
                }
                if (isVisiblf()) {
                if (isVisiblf()) {
                if (isVisiblf()) {
                if (isVisiblf()) {
                if (isVisiblf()) {
                    stbtfs.bdd(AddfssiblfStbtf.VISIBLE);
                    stbtfs.bdd(AddfssiblfStbtf.VISIBLE);
                    stbtfs.bdd(AddfssiblfStbtf.VISIBLE);
                    stbtfs.bdd(AddfssiblfStbtf.VISIBLE);
                    stbtfs.bdd(AddfssiblfStbtf.VISIBLE);
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.VISIBLE)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.VISIBLE)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.VISIBLE)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.VISIBLE)) {
                } flsf if (stbtfs.dontbins(AddfssiblfStbtf.VISIBLE)) {
                    stbtfs.rfmovf(AddfssiblfStbtf.VISIBLE);
                    stbtfs.rfmovf(AddfssiblfStbtf.VISIBLE);
                    stbtfs.rfmovf(AddfssiblfStbtf.VISIBLE);
                    stbtfs.rfmovf(AddfssiblfStbtf.VISIBLE);
                    stbtfs.rfmovf(AddfssiblfStbtf.VISIBLE);
                }
                }
                }
                }
                }
                if (trff.isPbtiSflfdtfd(pbti)){
                if (trff.isPbtiSflfdtfd(pbti)){
                if (trff.isPbtiSflfdtfd(pbti)){
                if (trff.isPbtiSflfdtfd(pbti)){
                if (trff.isPbtiSflfdtfd(pbti)){
                    stbtfs.bdd(AddfssiblfStbtf.SELECTED);
                    stbtfs.bdd(AddfssiblfStbtf.SELECTED);
                    stbtfs.bdd(AddfssiblfStbtf.SELECTED);
                    stbtfs.bdd(AddfssiblfStbtf.SELECTED);
                    stbtfs.bdd(AddfssiblfStbtf.SELECTED);
                }
                }
                }
                }
                }
                if (pbti == gftLfbdSflfdtionPbti()) {
                if (pbti == gftLfbdSflfdtionPbti()) {
                if (pbti == gftLfbdSflfdtionPbti()) {
                if (pbti == gftLfbdSflfdtionPbti()) {
                if (pbti == gftLfbdSflfdtionPbti()) {
                    stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
                    stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
                    stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
                    stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
                    stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
                }
                }
                }
                }
                }
                if (!isLfbf) {
                if (!isLfbf) {
                if (!isLfbf) {
                if (!isLfbf) {
                if (!isLfbf) {
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDABLE);
                }
                }
                }
                }
                }
                if (trff.isExpbndfd(pbti)) {
                if (trff.isExpbndfd(pbti)) {
                if (trff.isExpbndfd(pbti)) {
                if (trff.isExpbndfd(pbti)) {
                if (trff.isExpbndfd(pbti)) {
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDED);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDED);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDED);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDED);
                    stbtfs.bdd(AddfssiblfStbtf.EXPANDED);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    stbtfs.bdd(AddfssiblfStbtf.COLLAPSED);
                    stbtfs.bdd(AddfssiblfStbtf.COLLAPSED);
                    stbtfs.bdd(AddfssiblfStbtf.COLLAPSED);
                    stbtfs.bdd(AddfssiblfStbtf.COLLAPSED);
                    stbtfs.bdd(AddfssiblfStbtf.COLLAPSED);
                }
                }
                }
                }
                }
                if (trff.isEditbblf()) {
                if (trff.isEditbblf()) {
                if (trff.isEditbblf()) {
                if (trff.isEditbblf()) {
                if (trff.isEditbblf()) {
                    stbtfs.bdd(AddfssiblfStbtf.EDITABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EDITABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EDITABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EDITABLE);
                    stbtfs.bdd(AddfssiblfStbtf.EDITABLE);
                }
                }
                }
                }
                }
                rfturn stbtfs;
                rfturn stbtfs;
                rfturn stbtfs;
                rfturn stbtfs;
                rfturn stbtfs;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif Addfssiblf pbrfnt of tiis objfdt.
             * Gft tif Addfssiblf pbrfnt of tiis objfdt.
             * Gft tif Addfssiblf pbrfnt of tiis objfdt.
             * Gft tif Addfssiblf pbrfnt of tiis objfdt.
             * Gft tif Addfssiblf pbrfnt of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt; null if tiis
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt; null if tiis
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt; null if tiis
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt; null if tiis
             * @rfturn tif Addfssiblf pbrfnt of tiis objfdt; null if tiis
             * objfdt dofs not ibvf bn Addfssiblf pbrfnt
             * objfdt dofs not ibvf bn Addfssiblf pbrfnt
             * objfdt dofs not ibvf bn Addfssiblf pbrfnt
             * objfdt dofs not ibvf bn Addfssiblf pbrfnt
             * objfdt dofs not ibvf bn Addfssiblf pbrfnt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
            publid Addfssiblf gftAddfssiblfPbrfnt() {
                // somfonf wbnts to know, so wf nffd to drfbtf our pbrfnt
                // somfonf wbnts to know, so wf nffd to drfbtf our pbrfnt
                // somfonf wbnts to know, so wf nffd to drfbtf our pbrfnt
                // somfonf wbnts to know, so wf nffd to drfbtf our pbrfnt
                // somfonf wbnts to know, so wf nffd to drfbtf our pbrfnt
                // if wf don't ibvf onf (ify, wf'rf b tblfntfd kid!)
                // if wf don't ibvf onf (ify, wf'rf b tblfntfd kid!)
                // if wf don't ibvf onf (ify, wf'rf b tblfntfd kid!)
                // if wf don't ibvf onf (ify, wf'rf b tblfntfd kid!)
                // if wf don't ibvf onf (ify, wf'rf b tblfntfd kid!)
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    if (objPbti.lfngti > 1) {
                    if (objPbti.lfngti > 1) {
                    if (objPbti.lfngti > 1) {
                    if (objPbti.lfngti > 1) {
                    if (objPbti.lfngti > 1) {
                        Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                        Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                        Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                        Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                        Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                        if (trffModfl != null) {
                        if (trffModfl != null) {
                        if (trffModfl != null) {
                        if (trffModfl != null) {
                        if (trffModfl != null) {
                            indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                            indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                            indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                            indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                            indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                        }
                        }
                        }
                        }
                        }
                        Objfdt[] objPbrfntPbti = nfw Objfdt[objPbti.lfngti-1];
                        Objfdt[] objPbrfntPbti = nfw Objfdt[objPbti.lfngti-1];
                        Objfdt[] objPbrfntPbti = nfw Objfdt[objPbti.lfngti-1];
                        Objfdt[] objPbrfntPbti = nfw Objfdt[objPbti.lfngti-1];
                        Objfdt[] objPbrfntPbti = nfw Objfdt[objPbti.lfngti-1];
                        jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objPbrfntPbti,
                        jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objPbrfntPbti,
                        jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objPbrfntPbti,
                        jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objPbrfntPbti,
                        jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objPbrfntPbti,
                                                   0, objPbti.lfngti-1);
                                                   0, objPbti.lfngti-1);
                                                   0, objPbti.lfngti-1);
                                                   0, objPbti.lfngti-1);
                                                   0, objPbti.lfngti-1);
                        TrffPbti pbrfntPbti = nfw TrffPbti(objPbrfntPbti);
                        TrffPbti pbrfntPbti = nfw TrffPbti(objPbrfntPbti);
                        TrffPbti pbrfntPbti = nfw TrffPbti(objPbrfntPbti);
                        TrffPbti pbrfntPbti = nfw TrffPbti(objPbrfntPbti);
                        TrffPbti pbrfntPbti = nfw TrffPbti(objPbrfntPbti);
                        bddfssiblfPbrfnt = nfw AddfssiblfJTrffNodf(trff,
                        bddfssiblfPbrfnt = nfw AddfssiblfJTrffNodf(trff,
                        bddfssiblfPbrfnt = nfw AddfssiblfJTrffNodf(trff,
                        bddfssiblfPbrfnt = nfw AddfssiblfJTrffNodf(trff,
                        bddfssiblfPbrfnt = nfw AddfssiblfJTrffNodf(trff,
                                                                   pbrfntPbti,
                                                                   pbrfntPbti,
                                                                   pbrfntPbti,
                                                                   pbrfntPbti,
                                                                   pbrfntPbti,
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                                                                   null);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                    } flsf if (trffModfl != null) {
                    } flsf if (trffModfl != null) {
                    } flsf if (trffModfl != null) {
                    } flsf if (trffModfl != null) {
                    } flsf if (trffModfl != null) {
                        bddfssiblfPbrfnt = trff; // wf'rf tif top!
                        bddfssiblfPbrfnt = trff; // wf'rf tif top!
                        bddfssiblfPbrfnt = trff; // wf'rf tif top!
                        bddfssiblfPbrfnt = trff; // wf'rf tif top!
                        bddfssiblfPbrfnt = trff; // wf'rf tif top!
                        indfx = 0; // wf'rf bn only diild!
                        indfx = 0; // wf'rf bn only diild!
                        indfx = 0; // wf'rf bn only diild!
                        indfx = 0; // wf'rf bn only diild!
                        indfx = 0; // wf'rf bn only diild!
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                        tiis.sftAddfssiblfPbrfnt(bddfssiblfPbrfnt);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn bddfssiblfPbrfnt;
                rfturn bddfssiblfPbrfnt;
                rfturn bddfssiblfPbrfnt;
                rfturn bddfssiblfPbrfnt;
                rfturn bddfssiblfPbrfnt;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             * Gft tif indfx of tiis objfdt in its bddfssiblf pbrfnt.
             *
             *
             *
             *
             *
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * @rfturn tif indfx of tiis objfdt in its pbrfnt; -1 if tiis
             * objfdt dofs not ibvf bn bddfssiblf pbrfnt.
             * objfdt dofs not ibvf bn bddfssiblf pbrfnt.
             * objfdt dofs not ibvf bn bddfssiblf pbrfnt.
             * objfdt dofs not ibvf bn bddfssiblf pbrfnt.
             * objfdt dofs not ibvf bn bddfssiblf pbrfnt.
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             * @sff #gftAddfssiblfPbrfnt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
            publid int gftAddfssiblfIndfxInPbrfnt() {
                // indfx is invblid 'till wf ibvf bn bddfssiblfPbrfnt...
                // indfx is invblid 'till wf ibvf bn bddfssiblfPbrfnt...
                // indfx is invblid 'till wf ibvf bn bddfssiblfPbrfnt...
                // indfx is invblid 'till wf ibvf bn bddfssiblfPbrfnt...
                // indfx is invblid 'till wf ibvf bn bddfssiblfPbrfnt...
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                if (bddfssiblfPbrfnt == null) {
                    gftAddfssiblfPbrfnt();
                    gftAddfssiblfPbrfnt();
                    gftAddfssiblfPbrfnt();
                    gftAddfssiblfPbrfnt();
                    gftAddfssiblfPbrfnt();
                }
                }
                }
                }
                }
                Objfdt[] objPbti = pbti.gftPbti();
                Objfdt[] objPbti = pbti.gftPbti();
                Objfdt[] objPbti = pbti.gftPbti();
                Objfdt[] objPbti = pbti.gftPbti();
                Objfdt[] objPbti = pbti.gftPbti();
                if (objPbti.lfngti > 1) {
                if (objPbti.lfngti > 1) {
                if (objPbti.lfngti > 1) {
                if (objPbti.lfngti > 1) {
                if (objPbti.lfngti > 1) {
                    Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                    Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                    Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                    Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                    Objfdt objPbrfnt = objPbti[objPbti.lfngti-2];
                    if (trffModfl != null) {
                    if (trffModfl != null) {
                    if (trffModfl != null) {
                    if (trffModfl != null) {
                    if (trffModfl != null) {
                        indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                        indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                        indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                        indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                        indfx = trffModfl.gftIndfxOfCiild(objPbrfnt, obj);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
                rfturn indfx;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * Rfturns tif numbfr of bddfssiblf diildrfn in tif objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt.
             * @rfturn tif numbfr of bddfssiblf diildrfn in tif objfdt.
             */
             */
             */
             */
             */
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
            publid int gftAddfssiblfCiildrfnCount() {
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                rfturn trffModfl.gftCiildCount(obj);
                rfturn trffModfl.gftCiildCount(obj);
                rfturn trffModfl.gftCiildCount(obj);
                rfturn trffModfl.gftCiildCount(obj);
                rfturn trffModfl.gftCiildCount(obj);
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturn tif spfdififd Addfssiblf diild of tif objfdt.
             * Rfturn tif spfdififd Addfssiblf diild of tif objfdt.
             * Rfturn tif spfdififd Addfssiblf diild of tif objfdt.
             * Rfturn tif spfdififd Addfssiblf diild of tif objfdt.
             * Rfturn tif spfdififd Addfssiblf diild of tif objfdt.
             *
             *
             *
             *
             *
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @pbrbm i zfro-bbsfd indfx of diild
             * @rfturn tif Addfssiblf diild of tif objfdt
             * @rfturn tif Addfssiblf diild of tif objfdt
             * @rfturn tif Addfssiblf diild of tif objfdt
             * @rfturn tif Addfssiblf diild of tif objfdt
             * @rfturn tif Addfssiblf diild of tif objfdt
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
            publid Addfssiblf gftAddfssiblfCiild(int i) {
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // Trff nodfs dbn't bf so domplfx tibt tify ibvf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                // two sfts of diildrfn -> wf'rf ignoring tibt dbsf
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                if (i < 0 || i >= gftAddfssiblfCiildrfnCount()) {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt diildObj = trffModfl.gftCiild(obj, i);
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objPbti = pbti.gftPbti();
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    Objfdt[] objCiildPbti = nfw Objfdt[objPbti.lfngti+1];
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    jbvb.lbng.Systfm.brrbydopy(objPbti, 0, objCiildPbti, 0, objPbti.lfngti);
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    objCiildPbti[objCiildPbti.lfngti-1] = diildObj;
                    TrffPbti diildPbti = nfw TrffPbti(objCiildPbti);
                    TrffPbti diildPbti = nfw TrffPbti(objCiildPbti);
                    TrffPbti diildPbti = nfw TrffPbti(objCiildPbti);
                    TrffPbti diildPbti = nfw TrffPbti(objCiildPbti);
                    TrffPbti diildPbti = nfw TrffPbti(objCiildPbti);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, tiis);
                    rfturn nfw AddfssiblfJTrffNodf(JTrff.tiis, diildPbti, tiis);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt dofs not ibvf
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt dofs not ibvf
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt dofs not ibvf
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt dofs not ibvf
             * Gfts tif lodblf of tif domponfnt. If tif domponfnt dofs not ibvf
             * b lodblf, tifn tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tifn tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tifn tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tifn tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tifn tif lodblf of its pbrfnt is rfturnfd.
             *
             *
             *
             *
             *
             * @rfturn Tiis domponfnt's lodblf. If tiis domponfnt dofs not ibvf
             * @rfturn Tiis domponfnt's lodblf. If tiis domponfnt dofs not ibvf
             * @rfturn Tiis domponfnt's lodblf. If tiis domponfnt dofs not ibvf
             * @rfturn Tiis domponfnt's lodblf. If tiis domponfnt dofs not ibvf
             * @rfturn Tiis domponfnt's lodblf. If tiis domponfnt dofs not ibvf
             * b lodblf, tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tif lodblf of its pbrfnt is rfturnfd.
             * b lodblf, tif lodblf of its pbrfnt is rfturnfd.
             * @fxdfption IllfgblComponfntStbtfExdfption
             * @fxdfption IllfgblComponfntStbtfExdfption
             * @fxdfption IllfgblComponfntStbtfExdfption
             * @fxdfption IllfgblComponfntStbtfExdfption
             * @fxdfption IllfgblComponfntStbtfExdfption
             * If tif Componfnt dofs not ibvf its own lodblf bnd ibs not yft
             * If tif Componfnt dofs not ibvf its own lodblf bnd ibs not yft
             * If tif Componfnt dofs not ibvf its own lodblf bnd ibs not yft
             * If tif Componfnt dofs not ibvf its own lodblf bnd ibs not yft
             * If tif Componfnt dofs not ibvf its own lodblf bnd ibs not yft
             * bffn bddfd to b dontbinmfnt iifrbrdiy sudi tibt tif lodblf dbn bf
             * bffn bddfd to b dontbinmfnt iifrbrdiy sudi tibt tif lodblf dbn bf
             * bffn bddfd to b dontbinmfnt iifrbrdiy sudi tibt tif lodblf dbn bf
             * bffn bddfd to b dontbinmfnt iifrbrdiy sudi tibt tif lodblf dbn bf
             * bffn bddfd to b dontbinmfnt iifrbrdiy sudi tibt tif lodblf dbn bf
             * dftfrminfd from tif dontbining pbrfnt.
             * dftfrminfd from tif dontbining pbrfnt.
             * dftfrminfd from tif dontbining pbrfnt.
             * dftfrminfd from tif dontbining pbrfnt.
             * dftfrminfd from tif dontbining pbrfnt.
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             * @sff #sftLodblf
             */
             */
             */
             */
             */
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
            publid Lodblf gftLodblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                    rfturn bd.gftLodblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn trff.gftLodblf();
                    rfturn trff.gftLodblf();
                    rfturn trff.gftLodblf();
                    rfturn trff.gftLodblf();
                    rfturn trff.gftLodblf();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Add b PropfrtyCibngfListfnfr to tif listfnfr list.
             * Add b PropfrtyCibngfListfnfr to tif listfnfr list.
             * Add b PropfrtyCibngfListfnfr to tif listfnfr list.
             * Add b PropfrtyCibngfListfnfr to tif listfnfr list.
             * Add b PropfrtyCibngfListfnfr to tif listfnfr list.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             * Tif listfnfr is rfgistfrfd for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf bddfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf bddfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf bddfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf bddfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf bddfd
             */
             */
             */
             */
             */
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                    bd.bddPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                    supfr.bddPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfmovf b PropfrtyCibngfListfnfr from tif listfnfr list.
             * Rfmovf b PropfrtyCibngfListfnfr from tif listfnfr list.
             * Rfmovf b PropfrtyCibngfListfnfr from tif listfnfr list.
             * Rfmovf b PropfrtyCibngfListfnfr from tif listfnfr list.
             * Rfmovf b PropfrtyCibngfListfnfr from tif listfnfr list.
             * Tiis rfmovfs b PropfrtyCibngfListfnfr tibt wbs rfgistfrfd
             * Tiis rfmovfs b PropfrtyCibngfListfnfr tibt wbs rfgistfrfd
             * Tiis rfmovfs b PropfrtyCibngfListfnfr tibt wbs rfgistfrfd
             * Tiis rfmovfs b PropfrtyCibngfListfnfr tibt wbs rfgistfrfd
             * Tiis rfmovfs b PropfrtyCibngfListfnfr tibt wbs rfgistfrfd
             * for bll propfrtifs.
             * for bll propfrtifs.
             * for bll propfrtifs.
             * for bll propfrtifs.
             * for bll propfrtifs.
             *
             *
             *
             *
             *
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf rfmovfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf rfmovfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf rfmovfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf rfmovfd
             * @pbrbm l  Tif PropfrtyCibngfListfnfr to bf rfmovfd
             */
             */
             */
             */
             */
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
            publid void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                    bd.rfmovfPropfrtyCibngfListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                    supfr.rfmovfPropfrtyCibngfListfnfr(l);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfAdtion bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfAdtion bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfAdtion bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfAdtion bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfAdtion bssodibtfd witi tiis objfdt.  In tif
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * AddfssiblfAdtion intfrfbdf on bfiblf of itsflf.
             * AddfssiblfAdtion intfrfbdf on bfiblf of itsflf.
             * AddfssiblfAdtion intfrfbdf on bfiblf of itsflf.
             * AddfssiblfAdtion intfrfbdf on bfiblf of itsflf.
             * AddfssiblfAdtion intfrfbdf on bfiblf of itsflf.
             *
             *
             *
             *
             *
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             */
             */
             */
             */
             */
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            publid AddfssiblfAdtion gftAddfssiblfAdtion() {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfComponfnt bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfComponfnt bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfComponfnt bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfComponfnt bssodibtfd witi tiis objfdt.  In tif
             * Gft tif AddfssiblfComponfnt bssodibtfd witi tiis objfdt.  In tif
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * implfmfntbtion of tif Jbvb Addfssibility API for tiis dlbss,
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * rfturn tiis objfdt, wiidi is rfsponsiblf for implfmfnting tif
             * AddfssiblfComponfnt intfrfbdf on bfiblf of itsflf.
             * AddfssiblfComponfnt intfrfbdf on bfiblf of itsflf.
             * AddfssiblfComponfnt intfrfbdf on bfiblf of itsflf.
             * AddfssiblfComponfnt intfrfbdf on bfiblf of itsflf.
             * AddfssiblfComponfnt intfrfbdf on bfiblf of itsflf.
             *
             *
             *
             *
             *
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             * @rfturn tiis objfdt
             */
             */
             */
             */
             */
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
            publid AddfssiblfComponfnt gftAddfssiblfComponfnt() {
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
                rfturn tiis; // to ovfrridf gftBounds()
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfSflfdtion bssodibtfd witi tiis objfdt if onf
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             *
             *
             *
             *
             *
             * @rfturn tif AddfssiblfSflfdtion, or null
             * @rfturn tif AddfssiblfSflfdtion, or null
             * @rfturn tif AddfssiblfSflfdtion, or null
             * @rfturn tif AddfssiblfSflfdtion, or null
             * @rfturn tif AddfssiblfSflfdtion, or null
             */
             */
             */
             */
             */
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
            publid AddfssiblfSflfdtion gftAddfssiblfSflfdtion() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null && isLfbf) {
                if (bd != null && isLfbf) {
                if (bd != null && isLfbf) {
                if (bd != null && isLfbf) {
                if (bd != null && isLfbf) {
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfSflfdtion();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn tiis;
                    rfturn tiis;
                    rfturn tiis;
                    rfturn tiis;
                    rfturn tiis;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfTfxt bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfTfxt bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfTfxt bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfTfxt bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfTfxt bssodibtfd witi tiis objfdt if onf
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             *
             *
             *
             *
             *
             * @rfturn tif AddfssiblfTfxt, or null
             * @rfturn tif AddfssiblfTfxt, or null
             * @rfturn tif AddfssiblfTfxt, or null
             * @rfturn tif AddfssiblfTfxt, or null
             * @rfturn tif AddfssiblfTfxt, or null
             */
             */
             */
             */
             */
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
            publid AddfssiblfTfxt gftAddfssiblfTfxt() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfTfxt();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Gft tif AddfssiblfVbluf bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfVbluf bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfVbluf bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfVbluf bssodibtfd witi tiis objfdt if onf
             * Gft tif AddfssiblfVbluf bssodibtfd witi tiis objfdt if onf
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             * fxists.  Otifrwisf rfturn null.
             *
             *
             *
             *
             *
             * @rfturn tif AddfssiblfVbluf, or null
             * @rfturn tif AddfssiblfVbluf, or null
             * @rfturn tif AddfssiblfVbluf, or null
             * @rfturn tif AddfssiblfVbluf, or null
             * @rfturn tif AddfssiblfVbluf, or null
             */
             */
             */
             */
             */
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            publid AddfssiblfVbluf gftAddfssiblfVbluf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                    rfturn gftCurrfntAddfssiblfContfxt().gftAddfssiblfVbluf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }










        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods
        // AddfssiblfComponfnt mftiods





            /**
            /**
            /**
            /**
            /**
             * Gft tif bbdkground dolor of tiis objfdt.
             * Gft tif bbdkground dolor of tiis objfdt.
             * Gft tif bbdkground dolor of tiis objfdt.
             * Gft tif bbdkground dolor of tiis objfdt.
             * Gft tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * @rfturn tif bbdkground dolor, if supportfd, of tif objfdt;
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             */
             */
             */
             */
             */
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
            publid Color gftBbdkground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                    rfturn ((AddfssiblfComponfnt) bd).gftBbdkground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                        rfturn d.gftBbdkground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Sft tif bbdkground dolor of tiis objfdt.
             * Sft tif bbdkground dolor of tiis objfdt.
             * Sft tif bbdkground dolor of tiis objfdt.
             * Sft tif bbdkground dolor of tiis objfdt.
             * Sft tif bbdkground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @pbrbm d tif nfw Color for tif bbdkground
             * @pbrbm d tif nfw Color for tif bbdkground
             * @pbrbm d tif nfw Color for tif bbdkground
             * @pbrbm d tif nfw Color for tif bbdkground
             * @pbrbm d tif nfw Color for tif bbdkground
             */
             */
             */
             */
             */
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
            publid void sftBbdkground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                    ((AddfssiblfComponfnt) bd).sftBbdkground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                        dp.sftBbdkground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }










            /**
            /**
            /**
            /**
            /**
             * Gft tif forfground dolor of tiis objfdt.
             * Gft tif forfground dolor of tiis objfdt.
             * Gft tif forfground dolor of tiis objfdt.
             * Gft tif forfground dolor of tiis objfdt.
             * Gft tif forfground dolor of tiis objfdt.
             *
             *
             *
             *
             *
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * @rfturn tif forfground dolor, if supportfd, of tif objfdt;
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             * otifrwisf, null
             */
             */
             */
             */
             */
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
            publid Color gftForfground() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                    rfturn ((AddfssiblfComponfnt) bd).gftForfground();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                        rfturn d.gftForfground();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
            publid void sftForfground(Color d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                    ((AddfssiblfComponfnt) bd).sftForfground(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                        dp.sftForfground(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
            publid Cursor gftCursor() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                    rfturn ((AddfssiblfComponfnt) bd).gftCursor();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                        rfturn d.gftCursor();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        Addfssiblf bp = gftAddfssiblfPbrfnt();
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                        if (bp instbndfof AddfssiblfComponfnt) {
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                            rfturn ((AddfssiblfComponfnt) bp).gftCursor();
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                            rfturn null;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
            publid void sftCursor(Cursor d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                    ((AddfssiblfComponfnt) bd).sftCursor(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    Componfnt dp = gftCurrfntComponfnt();
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                    if (dp != null) {
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                        dp.sftCursor(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
            publid Font gftFont() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                    rfturn ((AddfssiblfComponfnt) bd).gftFont();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                        rfturn d.gftFont();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
            publid void sftFont(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                    ((AddfssiblfComponfnt) bd).sftFont(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                        d.sftFont(f);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
            publid FontMftrids gftFontMftrids(Font f) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                    rfturn ((AddfssiblfComponfnt) bd).gftFontMftrids(f);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                        rfturn d.gftFontMftrids(f);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
            publid boolfbn isEnbblfd() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                    rfturn ((AddfssiblfComponfnt) bd).isEnbblfd();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                        rfturn d.isEnbblfd();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
            publid void sftEnbblfd(boolfbn b) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                    ((AddfssiblfComponfnt) bd).sftEnbblfd(b);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                        d.sftEnbblfd(b);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
            publid boolfbn isVisiblf() {
                Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                Rfdtbnglf pbrfntBounds = trff.gftVisiblfRfdt();
                Rfdtbnglf pbrfntBounds = trff.gftVisiblfRfdt();
                Rfdtbnglf pbrfntBounds = trff.gftVisiblfRfdt();
                Rfdtbnglf pbrfntBounds = trff.gftVisiblfRfdt();
                Rfdtbnglf pbrfntBounds = trff.gftVisiblfRfdt();
                rfturn pbtiBounds != null && pbrfntBounds != null &&
                rfturn pbtiBounds != null && pbrfntBounds != null &&
                rfturn pbtiBounds != null && pbrfntBounds != null &&
                rfturn pbtiBounds != null && pbrfntBounds != null &&
                rfturn pbtiBounds != null && pbrfntBounds != null &&
                        pbrfntBounds.intfrsfdts(pbtiBounds);
                        pbrfntBounds.intfrsfdts(pbtiBounds);
                        pbrfntBounds.intfrsfdts(pbtiBounds);
                        pbrfntBounds.intfrsfdts(pbtiBounds);
                        pbrfntBounds.intfrsfdts(pbtiBounds);
            }
            }
            }
            }
            }





            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            publid void sftVisiblf(boolfbn b) {
            }
            }
            }
            }
            }





            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
            publid boolfbn isSiowing() {
                rfturn (trff.isSiowing() && isVisiblf());
                rfturn (trff.isSiowing() && isVisiblf());
                rfturn (trff.isSiowing() && isVisiblf());
                rfturn (trff.isSiowing() && isVisiblf());
                rfturn (trff.isSiowing() && isVisiblf());
            }
            }
            }
            }
            }





            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
            publid boolfbn dontbins(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    Rfdtbnglf r = ((AddfssiblfComponfnt) bd).gftBounds();
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                    rfturn r.dontbins(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        Rfdtbnglf r = d.gftBounds();
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                        rfturn r.dontbins(p);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                        rfturn gftBounds().dontbins(p);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
            publid Point gftLodbtionOnSdrffn() {
                if (trff != null) {
                if (trff != null) {
                if (trff != null) {
                if (trff != null) {
                if (trff != null) {
                    Point trffLodbtion = trff.gftLodbtionOnSdrffn();
                    Point trffLodbtion = trff.gftLodbtionOnSdrffn();
                    Point trffLodbtion = trff.gftLodbtionOnSdrffn();
                    Point trffLodbtion = trff.gftLodbtionOnSdrffn();
                    Point trffLodbtion = trff.gftLodbtionOnSdrffn();
                    Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                    Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                    Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                    Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                    Rfdtbnglf pbtiBounds = trff.gftPbtiBounds(pbti);
                    if (trffLodbtion != null && pbtiBounds != null) {
                    if (trffLodbtion != null && pbtiBounds != null) {
                    if (trffLodbtion != null && pbtiBounds != null) {
                    if (trffLodbtion != null && pbtiBounds != null) {
                    if (trffLodbtion != null && pbtiBounds != null) {
                        Point nodfLodbtion = nfw Point(pbtiBounds.x,
                        Point nodfLodbtion = nfw Point(pbtiBounds.x,
                        Point nodfLodbtion = nfw Point(pbtiBounds.x,
                        Point nodfLodbtion = nfw Point(pbtiBounds.x,
                        Point nodfLodbtion = nfw Point(pbtiBounds.x,
                                                       pbtiBounds.y);
                                                       pbtiBounds.y);
                                                       pbtiBounds.y);
                                                       pbtiBounds.y);
                                                       pbtiBounds.y);
                        nodfLodbtion.trbnslbtf(trffLodbtion.x, trffLodbtion.y);
                        nodfLodbtion.trbnslbtf(trffLodbtion.x, trffLodbtion.y);
                        nodfLodbtion.trbnslbtf(trffLodbtion.x, trffLodbtion.y);
                        nodfLodbtion.trbnslbtf(trffLodbtion.x, trffLodbtion.y);
                        nodfLodbtion.trbnslbtf(trffLodbtion.x, trffLodbtion.y);
                        rfturn nodfLodbtion;
                        rfturn nodfLodbtion;
                        rfturn nodfLodbtion;
                        rfturn nodfLodbtion;
                        rfturn nodfLodbtion;
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif rflbtivf lodbtion of tif nodf
             * Rfturns tif rflbtivf lodbtion of tif nodf
             * Rfturns tif rflbtivf lodbtion of tif nodf
             * Rfturns tif rflbtivf lodbtion of tif nodf
             * Rfturns tif rflbtivf lodbtion of tif nodf
             *
             *
             *
             *
             *
             * @rfturn tif rflbtivf lodbtion of tif nodf
             * @rfturn tif rflbtivf lodbtion of tif nodf
             * @rfturn tif rflbtivf lodbtion of tif nodf
             * @rfturn tif rflbtivf lodbtion of tif nodf
             * @rfturn tif rflbtivf lodbtion of tif nodf
             */
             */
             */
             */
             */
            protfdtfd Point gftLodbtionInJTrff() {
            protfdtfd Point gftLodbtionInJTrff() {
            protfdtfd Point gftLodbtionInJTrff() {
            protfdtfd Point gftLodbtionInJTrff() {
            protfdtfd Point gftLodbtionInJTrff() {
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                if (r != null) {
                if (r != null) {
                if (r != null) {
                if (r != null) {
                if (r != null) {
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
            publid Point gftLodbtion() {
                Rfdtbnglf r = gftBounds();
                Rfdtbnglf r = gftBounds();
                Rfdtbnglf r = gftBounds();
                Rfdtbnglf r = gftBounds();
                Rfdtbnglf r = gftBounds();
                if (r != null) {
                if (r != null) {
                if (r != null) {
                if (r != null) {
                if (r != null) {
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                    rfturn r.gftLodbtion();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            publid void sftLodbtion(Point p) {
            }
            }
            }
            }
            }





            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
            publid Rfdtbnglf gftBounds() {
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Rfdtbnglf r = trff.gftPbtiBounds(pbti);
                Addfssiblf pbrfnt = gftAddfssiblfPbrfnt();
                Addfssiblf pbrfnt = gftAddfssiblfPbrfnt();
                Addfssiblf pbrfnt = gftAddfssiblfPbrfnt();
                Addfssiblf pbrfnt = gftAddfssiblfPbrfnt();
                Addfssiblf pbrfnt = gftAddfssiblfPbrfnt();
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                if (pbrfnt != null) {
                    if (pbrfnt instbndfof AddfssiblfJTrffNodf) {
                    if (pbrfnt instbndfof AddfssiblfJTrffNodf) {
                    if (pbrfnt instbndfof AddfssiblfJTrffNodf) {
                    if (pbrfnt instbndfof AddfssiblfJTrffNodf) {
                    if (pbrfnt instbndfof AddfssiblfJTrffNodf) {
                        Point pbrfntLod = ((AddfssiblfJTrffNodf) pbrfnt).gftLodbtionInJTrff();
                        Point pbrfntLod = ((AddfssiblfJTrffNodf) pbrfnt).gftLodbtionInJTrff();
                        Point pbrfntLod = ((AddfssiblfJTrffNodf) pbrfnt).gftLodbtionInJTrff();
                        Point pbrfntLod = ((AddfssiblfJTrffNodf) pbrfnt).gftLodbtionInJTrff();
                        Point pbrfntLod = ((AddfssiblfJTrffNodf) pbrfnt).gftLodbtionInJTrff();
                        if (pbrfntLod != null && r != null) {
                        if (pbrfntLod != null && r != null) {
                        if (pbrfntLod != null && r != null) {
                        if (pbrfntLod != null && r != null) {
                        if (pbrfntLod != null && r != null) {
                            r.trbnslbtf(-pbrfntLod.x, -pbrfntLod.y);
                            r.trbnslbtf(-pbrfntLod.x, -pbrfntLod.y);
                            r.trbnslbtf(-pbrfntLod.x, -pbrfntLod.y);
                            r.trbnslbtf(-pbrfntLod.x, -pbrfntLod.y);
                            r.trbnslbtf(-pbrfntLod.x, -pbrfntLod.y);
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            rfturn null;        // not visiblf!
                            rfturn null;        // not visiblf!
                            rfturn null;        // not visiblf!
                            rfturn null;        // not visiblf!
                            rfturn null;        // not visiblf!
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn r;
                rfturn r;
                rfturn r;
                rfturn r;
                rfturn r;
            }
            }
            }
            }
            }





            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
            publid void sftBounds(Rfdtbnglf r) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                    ((AddfssiblfComponfnt) bd).sftBounds(r);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                        d.sftBounds(r);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
            publid Dimfnsion gftSizf() {
                rfturn gftBounds().gftSizf();
                rfturn gftBounds().gftSizf();
                rfturn gftBounds().gftSizf();
                rfturn gftBounds().gftSizf();
                rfturn gftBounds().gftSizf();
            }
            }
            }
            }
            }





            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
            publid void sftSizf (Dimfnsion d) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                    ((AddfssiblfComponfnt) bd).sftSizf(d);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                        d.sftSizf(d);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
             * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
             * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
             * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
             * Rfturns tif <dodf>Addfssiblf</dodf> diild, if onf fxists,
             * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
             * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
             * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
             * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
             * dontbinfd bt tif lodbl doordinbtf <dodf>Point</dodf>.
             * Otifrwisf rfturns <dodf>null</dodf>.
             * Otifrwisf rfturns <dodf>null</dodf>.
             * Otifrwisf rfturns <dodf>null</dodf>.
             * Otifrwisf rfturns <dodf>null</dodf>.
             * Otifrwisf rfturns <dodf>null</dodf>.
             *
             *
             *
             *
             *
             * @pbrbm p point in lodbl doordinbtfs of tiis
             * @pbrbm p point in lodbl doordinbtfs of tiis
             * @pbrbm p point in lodbl doordinbtfs of tiis
             * @pbrbm p point in lodbl doordinbtfs of tiis
             * @pbrbm p point in lodbl doordinbtfs of tiis
             *    <dodf>Addfssiblf</dodf>
             *    <dodf>Addfssiblf</dodf>
             *    <dodf>Addfssiblf</dodf>
             *    <dodf>Addfssiblf</dodf>
             *    <dodf>Addfssiblf</dodf>
             * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
             * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
             * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
             * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
             * @rfturn tif <dodf>Addfssiblf</dodf>, if it fxists,
             *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
             *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
             *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
             *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
             *    bt tif spfdififd lodbtion; flsf <dodf>null</dodf>
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
            publid Addfssiblf gftAddfssiblfAt(Point p) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                    rfturn ((AddfssiblfComponfnt) bd).gftAddfssiblfAt(p);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            @SupprfssWbrnings("dfprfdbtion")
            @SupprfssWbrnings("dfprfdbtion")
            @SupprfssWbrnings("dfprfdbtion")
            @SupprfssWbrnings("dfprfdbtion")
            @SupprfssWbrnings("dfprfdbtion")
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
            publid boolfbn isFodusTrbvfrsbblf() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                    rfturn ((AddfssiblfComponfnt) bd).isFodusTrbvfrsbblf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                        rfturn d.isFodusTrbvfrsbblf();
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
            publid void rfqufstFodus() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                    ((AddfssiblfComponfnt) bd).rfqufstFodus();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                        d.rfqufstFodus();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
            publid void bddFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).bddFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                        d.bddFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
            publid void rfmovfFodusListfnfr(FodusListfnfr l) {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                if (bd instbndfof AddfssiblfComponfnt) {
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                    ((AddfssiblfComponfnt) bd).rfmovfFodusListfnfr(l);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    Componfnt d = gftCurrfntComponfnt();
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                    if (d != null) {
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                        d.rfmovfFodusListfnfr(l);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods
        // AddfssiblfSflfdtion mftiods





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
             * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
             * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
             * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
             * Rfturns tif numbfr of itfms durrfntly sflfdtfd.
             * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
             * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
             * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
             * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
             * If no itfms brf sflfdtfd, tif rfturn vbluf will bf 0.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
             * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
             * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
             * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
             * @rfturn tif numbfr of itfms durrfntly sflfdtfd.
             */
             */
             */
             */
             */
            publid int gftAddfssiblfSflfdtionCount() {
            publid int gftAddfssiblfSflfdtionCount() {
            publid int gftAddfssiblfSflfdtionCount() {
            publid int gftAddfssiblfSflfdtionCount() {
            publid int gftAddfssiblfSflfdtionCount() {
                int dount = 0;
                int dount = 0;
                int dount = 0;
                int dount = 0;
                int dount = 0;
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                       dount++;
                       dount++;
                       dount++;
                       dount++;
                       dount++;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn dount;
                rfturn dount;
                rfturn dount;
                rfturn dount;
                rfturn dount;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
             * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
             * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
             * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
             * Rfturns bn Addfssiblf rfprfsfnting tif spfdififd sflfdtfd itfm
             * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
             * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
             * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
             * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
             * in tif objfdt.  If tifrf isn't b sflfdtion, or tifrf brf
             * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
             * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
             * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
             * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
             * ffwfr itfms sflfdtfd tibn tif intfgfr pbssfd in, tif rfturn
             * vbluf will bf null.
             * vbluf will bf null.
             * vbluf will bf null.
             * vbluf will bf null.
             * vbluf will bf null.
             *
             *
             *
             *
             *
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtfd itfms
             * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
             * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
             * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
             * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
             * @rfturn bn Addfssiblf dontbining tif sflfdtfd itfm
             */
             */
             */
             */
             */
            publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
            publid Addfssiblf gftAddfssiblfSflfdtion(int i) {
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                    rfturn null;        // out of rbngf
                    rfturn null;        // out of rbngf
                    rfturn null;        // out of rbngf
                    rfturn null;        // out of rbngf
                    rfturn null;        // out of rbngf
                }
                }
                }
                }
                }
                int dount = 0;
                int dount = 0;
                int dount = 0;
                int dount = 0;
                int dount = 0;
                for (int j = 0; j < diildCount && i >= dount; j++) {
                for (int j = 0; j < diildCount && i >= dount; j++) {
                for (int j = 0; j < diildCount && i >= dount; j++) {
                for (int j = 0; j < diildCount && i >= dount; j++) {
                for (int j = 0; j < diildCount && i >= dount; j++) {
                    TrffPbti diildPbti = gftCiildTrffPbti(j);
                    TrffPbti diildPbti = gftCiildTrffPbti(j);
                    TrffPbti diildPbti = gftCiildTrffPbti(j);
                    TrffPbti diildPbti = gftCiildTrffPbti(j);
                    TrffPbti diildPbti = gftCiildTrffPbti(j);
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                    if (trff.isPbtiSflfdtfd(diildPbti)) {
                        if (dount == i) {
                        if (dount == i) {
                        if (dount == i) {
                        if (dount == i) {
                        if (dount == i) {
                            rfturn nfw AddfssiblfJTrffNodf(trff, diildPbti, tiis);
                            rfturn nfw AddfssiblfJTrffNodf(trff, diildPbti, tiis);
                            rfturn nfw AddfssiblfJTrffNodf(trff, diildPbti, tiis);
                            rfturn nfw AddfssiblfJTrffNodf(trff, diildPbti, tiis);
                            rfturn nfw AddfssiblfJTrffNodf(trff, diildPbti, tiis);
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            dount++;
                            dount++;
                            dount++;
                            dount++;
                            dount++;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
             * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
             * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
             * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
             * Rfturns truf if tif durrfnt diild of tiis objfdt is sflfdtfd.
             *
             *
             *
             *
             *
             * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf
             * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf
             * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf
             * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf
             * @pbrbm i tif zfro-bbsfd indfx of tif diild in tiis Addfssiblf
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             * objfdt.
             * @sff AddfssiblfContfxt#gftAddfssiblfCiild
             * @sff AddfssiblfContfxt#gftAddfssiblfCiild
             * @sff AddfssiblfContfxt#gftAddfssiblfCiild
             * @sff AddfssiblfContfxt#gftAddfssiblfCiild
             * @sff AddfssiblfContfxt#gftAddfssiblfCiild
             */
             */
             */
             */
             */
            publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
            publid boolfbn isAddfssiblfCiildSflfdtfd(int i) {
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                if (i < 0 || i >= diildCount) {
                    rfturn fblsf;       // out of rbngf
                    rfturn fblsf;       // out of rbngf
                    rfturn fblsf;       // out of rbngf
                    rfturn fblsf;       // out of rbngf
                    rfturn fblsf;       // out of rbngf
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    TrffPbti diildPbti = gftCiildTrffPbti(i);
                    rfturn trff.isPbtiSflfdtfd(diildPbti);
                    rfturn trff.isPbtiSflfdtfd(diildPbti);
                    rfturn trff.isPbtiSflfdtfd(diildPbti);
                    rfturn trff.isPbtiSflfdtfd(diildPbti);
                    rfturn trff.isPbtiSflfdtfd(diildPbti);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
             * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
             * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
             * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
             * Adds tif spfdififd sflfdtfd itfm in tif objfdt to tif objfdt's
             * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
             * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
             * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
             * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
             * sflfdtion.  If tif objfdt supports multiplf sflfdtions,
             * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
             * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
             * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
             * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
             * tif spfdififd itfm is bddfd to bny fxisting sflfdtion, otifrwisf
             * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
             * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
             * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
             * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
             * it rfplbdfs bny fxisting sflfdtion in tif objfdt.  If tif
             * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
             * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
             * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
             * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
             * spfdififd itfm is blrfbdy sflfdtfd, tiis mftiod ibs no ffffdt.
             *
             *
             *
             *
             *
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             */
             */
             */
             */
             */
            publid void bddAddfssiblfSflfdtion(int i) {
            publid void bddAddfssiblfSflfdtion(int i) {
            publid void bddAddfssiblfSflfdtion(int i) {
            publid void bddAddfssiblfSflfdtion(int i) {
            publid void bddAddfssiblfSflfdtion(int i) {
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif
             * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif
             * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif
             * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif
             * Rfmovfs tif spfdififd sflfdtfd itfm in tif objfdt from tif
             * objfdt's
             * objfdt's
             * objfdt's
             * objfdt's
             * objfdt's
             * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
             * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
             * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
             * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
             * sflfdtion.  If tif spfdififd itfm isn't durrfntly sflfdtfd, tiis
             * mftiod ibs no ffffdt.
             * mftiod ibs no ffffdt.
             * mftiod ibs no ffffdt.
             * mftiod ibs no ffffdt.
             * mftiod ibs no ffffdt.
             *
             *
             *
             *
             *
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             * @pbrbm i tif zfro-bbsfd indfx of sflfdtbblf itfms
             */
             */
             */
             */
             */
            publid void rfmovfAddfssiblfSflfdtion(int i) {
            publid void rfmovfAddfssiblfSflfdtion(int i) {
            publid void rfmovfAddfssiblfSflfdtion(int i) {
            publid void rfmovfAddfssiblfSflfdtion(int i) {
            publid void rfmovfAddfssiblfSflfdtion(int i) {
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                   if (i >= 0 && i < gftAddfssiblfCiildrfnCount()) {
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       TrffPbti pbti = gftCiildTrffPbti(i);
                       JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                       JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                       JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                       JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                       JTrff.tiis.rfmovfSflfdtionPbti(pbti);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
             * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
             * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
             * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
             * Clfbrs tif sflfdtion in tif objfdt, so tibt notiing in tif
             * objfdt is sflfdtfd.
             * objfdt is sflfdtfd.
             * objfdt is sflfdtfd.
             * objfdt is sflfdtfd.
             * objfdt is sflfdtfd.
             */
             */
             */
             */
             */
            publid void dlfbrAddfssiblfSflfdtion() {
            publid void dlfbrAddfssiblfSflfdtion() {
            publid void dlfbrAddfssiblfSflfdtion() {
            publid void dlfbrAddfssiblfSflfdtion() {
            publid void dlfbrAddfssiblfSflfdtion() {
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                int diildCount = gftAddfssiblfCiildrfnCount();
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                for (int i = 0; i < diildCount; i++) {
                    rfmovfAddfssiblfSflfdtion(i);
                    rfmovfAddfssiblfSflfdtion(i);
                    rfmovfAddfssiblfSflfdtion(i);
                    rfmovfAddfssiblfSflfdtion(i);
                    rfmovfAddfssiblfSflfdtion(i);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
             * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
             * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
             * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
             * Cbusfs fvfry sflfdtfd itfm in tif objfdt to bf sflfdtfd
             * if tif objfdt supports multiplf sflfdtions.
             * if tif objfdt supports multiplf sflfdtions.
             * if tif objfdt supports multiplf sflfdtions.
             * if tif objfdt supports multiplf sflfdtions.
             * if tif objfdt supports multiplf sflfdtions.
             */
             */
             */
             */
             */
            publid void sflfdtAllAddfssiblfSflfdtion() {
            publid void sflfdtAllAddfssiblfSflfdtion() {
            publid void sflfdtAllAddfssiblfSflfdtion() {
            publid void sflfdtAllAddfssiblfSflfdtion() {
            publid void sflfdtAllAddfssiblfSflfdtion() {
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               TrffModfl modfl = JTrff.tiis.gftModfl();
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
               if (modfl != null) {
                   int diildCount = gftAddfssiblfCiildrfnCount();
                   int diildCount = gftAddfssiblfCiildrfnCount();
                   int diildCount = gftAddfssiblfCiildrfnCount();
                   int diildCount = gftAddfssiblfCiildrfnCount();
                   int diildCount = gftAddfssiblfCiildrfnCount();
                   TrffPbti pbti;
                   TrffPbti pbti;
                   TrffPbti pbti;
                   TrffPbti pbti;
                   TrffPbti pbti;
                   for (int i = 0; i < diildCount; i++) {
                   for (int i = 0; i < diildCount; i++) {
                   for (int i = 0; i < diildCount; i++) {
                   for (int i = 0; i < diildCount; i++) {
                   for (int i = 0; i < diildCount; i++) {
                       pbti = gftCiildTrffPbti(i);
                       pbti = gftCiildTrffPbti(i);
                       pbti = gftCiildTrffPbti(i);
                       pbti = gftCiildTrffPbti(i);
                       pbti = gftCiildTrffPbti(i);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                       JTrff.tiis.bddSflfdtionPbti(pbti);
                   }
                   }
                   }
                   }
                   }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





        // AddfssiblfAdtion mftiods
        // AddfssiblfAdtion mftiods
        // AddfssiblfAdtion mftiods
        // AddfssiblfAdtion mftiods
        // AddfssiblfAdtion mftiods





            /**
            /**
            /**
            /**
            /**
             * Rfturns tif numbfr of bddfssiblf bdtions bvbilbblf in tiis
             * Rfturns tif numbfr of bddfssiblf bdtions bvbilbblf in tiis
             * Rfturns tif numbfr of bddfssiblf bdtions bvbilbblf in tiis
             * Rfturns tif numbfr of bddfssiblf bdtions bvbilbblf in tiis
             * Rfturns tif numbfr of bddfssiblf bdtions bvbilbblf in tiis
             * trff nodf.  If tiis nodf is not b lfbf, tifrf is bt lfbst
             * trff nodf.  If tiis nodf is not b lfbf, tifrf is bt lfbst
             * trff nodf.  If tiis nodf is not b lfbf, tifrf is bt lfbst
             * trff nodf.  If tiis nodf is not b lfbf, tifrf is bt lfbst
             * trff nodf.  If tiis nodf is not b lfbf, tifrf is bt lfbst
             * onf bdtion (togglf fxpbnd), in bddition to bny bvbilbblf
             * onf bdtion (togglf fxpbnd), in bddition to bny bvbilbblf
             * onf bdtion (togglf fxpbnd), in bddition to bny bvbilbblf
             * onf bdtion (togglf fxpbnd), in bddition to bny bvbilbblf
             * onf bdtion (togglf fxpbnd), in bddition to bny bvbilbblf
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             *
             *
             *
             *
             *
             * @rfturn tif numbfr of Adtions in tiis objfdt
             * @rfturn tif numbfr of Adtions in tiis objfdt
             * @rfturn tif numbfr of Adtions in tiis objfdt
             * @rfturn tif numbfr of Adtions in tiis objfdt
             * @rfturn tif numbfr of Adtions in tiis objfdt
             */
             */
             */
             */
             */
            publid int gftAddfssiblfAdtionCount() {
            publid int gftAddfssiblfAdtionCount() {
            publid int gftAddfssiblfAdtionCount() {
            publid int gftAddfssiblfAdtionCount() {
            publid int gftAddfssiblfAdtionCount() {
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                if (bd != null) {
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                        rfturn (bb.gftAddfssiblfAdtionCount() + (isLfbf ? 0 : 1));
                        rfturn (bb.gftAddfssiblfAdtionCount() + (isLfbf ? 0 : 1));
                        rfturn (bb.gftAddfssiblfAdtionCount() + (isLfbf ? 0 : 1));
                        rfturn (bb.gftAddfssiblfAdtionCount() + (isLfbf ? 0 : 1));
                        rfturn (bb.gftAddfssiblfAdtionCount() + (isLfbf ? 0 : 1));
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn isLfbf ? 0 : 1;
                rfturn isLfbf ? 0 : 1;
                rfturn isLfbf ? 0 : 1;
                rfturn isLfbf ? 0 : 1;
                rfturn isLfbf ? 0 : 1;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Rfturn b dfsdription of tif spfdififd bdtion of tif trff nodf.
             * Rfturn b dfsdription of tif spfdififd bdtion of tif trff nodf.
             * Rfturn b dfsdription of tif spfdififd bdtion of tif trff nodf.
             * Rfturn b dfsdription of tif spfdififd bdtion of tif trff nodf.
             * Rfturn b dfsdription of tif spfdififd bdtion of tif trff nodf.
             * If tiis nodf is not b lfbf, tifrf is bt lfbst onf bdtion
             * If tiis nodf is not b lfbf, tifrf is bt lfbst onf bdtion
             * If tiis nodf is not b lfbf, tifrf is bt lfbst onf bdtion
             * If tiis nodf is not b lfbf, tifrf is bt lfbst onf bdtion
             * If tiis nodf is not b lfbf, tifrf is bt lfbst onf bdtion
             * dfsdription (togglf fxpbnd), in bddition to bny bvbilbblf
             * dfsdription (togglf fxpbnd), in bddition to bny bvbilbblf
             * dfsdription (togglf fxpbnd), in bddition to bny bvbilbblf
             * dfsdription (togglf fxpbnd), in bddition to bny bvbilbblf
             * dfsdription (togglf fxpbnd), in bddition to bny bvbilbblf
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             * on tif objfdt bfiind tif TrffCfllRfndfrfr.
             *
             *
             *
             *
             *
             * @pbrbm i zfro-bbsfd indfx of tif bdtions
             * @pbrbm i zfro-bbsfd indfx of tif bdtions
             * @pbrbm i zfro-bbsfd indfx of tif bdtions
             * @pbrbm i zfro-bbsfd indfx of tif bdtions
             * @pbrbm i zfro-bbsfd indfx of tif bdtions
             * @rfturn b dfsdription of tif bdtion
             * @rfturn b dfsdription of tif bdtion
             * @rfturn b dfsdription of tif bdtion
             * @rfturn b dfsdription of tif bdtion
             * @rfturn b dfsdription of tif bdtion
             */
             */
             */
             */
             */
            publid String gftAddfssiblfAdtionDfsdription(int i) {
            publid String gftAddfssiblfAdtionDfsdription(int i) {
            publid String gftAddfssiblfAdtionDfsdription(int i) {
            publid String gftAddfssiblfAdtionDfsdription(int i) {
            publid String gftAddfssiblfAdtionDfsdription(int i) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                    // TIGER - 4766636
                    // TIGER - 4766636
                    // TIGER - 4766636
                    // TIGER - 4766636
                    // TIGER - 4766636
                    rfturn AddfssiblfAdtion.TOGGLE_EXPAND;
                    rfturn AddfssiblfAdtion.TOGGLE_EXPAND;
                    rfturn AddfssiblfAdtion.TOGGLE_EXPAND;
                    rfturn AddfssiblfAdtion.TOGGLE_EXPAND;
                    rfturn AddfssiblfAdtion.TOGGLE_EXPAND;
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                        rfturn bb.gftAddfssiblfAdtionDfsdription(i - 1);
                        rfturn bb.gftAddfssiblfAdtionDfsdription(i - 1);
                        rfturn bb.gftAddfssiblfAdtionDfsdription(i - 1);
                        rfturn bb.gftAddfssiblfAdtionDfsdription(i - 1);
                        rfturn bb.gftAddfssiblfAdtionDfsdription(i - 1);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }





            /**
            /**
            /**
            /**
            /**
             * Pfrform tif spfdififd Adtion on tif trff nodf.  If tiis nodf
             * Pfrform tif spfdififd Adtion on tif trff nodf.  If tiis nodf
             * Pfrform tif spfdififd Adtion on tif trff nodf.  If tiis nodf
             * Pfrform tif spfdififd Adtion on tif trff nodf.  If tiis nodf
             * Pfrform tif spfdififd Adtion on tif trff nodf.  If tiis nodf
             * is not b lfbf, tifrf is bt lfbst onf bdtion wiidi dbn bf
             * is not b lfbf, tifrf is bt lfbst onf bdtion wiidi dbn bf
             * is not b lfbf, tifrf is bt lfbst onf bdtion wiidi dbn bf
             * is not b lfbf, tifrf is bt lfbst onf bdtion wiidi dbn bf
             * is not b lfbf, tifrf is bt lfbst onf bdtion wiidi dbn bf
             * donf (togglf fxpbnd), in bddition to bny bvbilbblf on tif
             * donf (togglf fxpbnd), in bddition to bny bvbilbblf on tif
             * donf (togglf fxpbnd), in bddition to bny bvbilbblf on tif
             * donf (togglf fxpbnd), in bddition to bny bvbilbblf on tif
             * donf (togglf fxpbnd), in bddition to bny bvbilbblf on tif
             * objfdt bfiind tif TrffCfllRfndfrfr.
             * objfdt bfiind tif TrffCfllRfndfrfr.
             * objfdt bfiind tif TrffCfllRfndfrfr.
             * objfdt bfiind tif TrffCfllRfndfrfr.
             * objfdt bfiind tif TrffCfllRfndfrfr.
             *
             *
             *
             *
             *
             * @pbrbm i zfro-bbsfd indfx of bdtions
             * @pbrbm i zfro-bbsfd indfx of bdtions
             * @pbrbm i zfro-bbsfd indfx of bdtions
             * @pbrbm i zfro-bbsfd indfx of bdtions
             * @pbrbm i zfro-bbsfd indfx of bdtions
             * @rfturn truf if tif tif bdtion wbs pfrformfd; flsf fblsf.
             * @rfturn truf if tif tif bdtion wbs pfrformfd; flsf fblsf.
             * @rfturn truf if tif tif bdtion wbs pfrformfd; flsf fblsf.
             * @rfturn truf if tif tif bdtion wbs pfrformfd; flsf fblsf.
             * @rfturn truf if tif tif bdtion wbs pfrformfd; flsf fblsf.
             */
             */
             */
             */
             */
            publid boolfbn doAddfssiblfAdtion(int i) {
            publid boolfbn doAddfssiblfAdtion(int i) {
            publid boolfbn doAddfssiblfAdtion(int i) {
            publid boolfbn doAddfssiblfAdtion(int i) {
            publid boolfbn doAddfssiblfAdtion(int i) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                if (i < 0 || i >= gftAddfssiblfAdtionCount()) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                AddfssiblfContfxt bd = gftCurrfntAddfssiblfContfxt();
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                if (i == 0) {
                    if (JTrff.tiis.isExpbndfd(pbti)) {
                    if (JTrff.tiis.isExpbndfd(pbti)) {
                    if (JTrff.tiis.isExpbndfd(pbti)) {
                    if (JTrff.tiis.isExpbndfd(pbti)) {
                    if (JTrff.tiis.isExpbndfd(pbti)) {
                        JTrff.tiis.dollbpsfPbti(pbti);
                        JTrff.tiis.dollbpsfPbti(pbti);
                        JTrff.tiis.dollbpsfPbti(pbti);
                        JTrff.tiis.dollbpsfPbti(pbti);
                        JTrff.tiis.dollbpsfPbti(pbti);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        JTrff.tiis.fxpbndPbti(pbti);
                        JTrff.tiis.fxpbndPbti(pbti);
                        JTrff.tiis.fxpbndPbti(pbti);
                        JTrff.tiis.fxpbndPbti(pbti);
                        JTrff.tiis.fxpbndPbti(pbti);
                    }
                    }
                    }
                    }
                    }
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                } flsf if (bd != null) {
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    AddfssiblfAdtion bb = bd.gftAddfssiblfAdtion();
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                    if (bb != null) {
                        rfturn bb.doAddfssiblfAdtion(i - 1);
                        rfturn bb.doAddfssiblfAdtion(i - 1);
                        rfturn bb.doAddfssiblfAdtion(i - 1);
                        rfturn bb.doAddfssiblfAdtion(i - 1);
                        rfturn bb.doAddfssiblfAdtion(i - 1);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }





        } // innfr dlbss AddfssiblfJTrffNodf
        } // innfr dlbss AddfssiblfJTrffNodf
        } // innfr dlbss AddfssiblfJTrffNodf
        } // innfr dlbss AddfssiblfJTrffNodf
        } // innfr dlbss AddfssiblfJTrffNodf





    }  // innfr dlbss AddfssiblfJTrff
    }  // innfr dlbss AddfssiblfJTrff
    }  // innfr dlbss AddfssiblfJTrff
    }  // innfr dlbss AddfssiblfJTrff
    }  // innfr dlbss AddfssiblfJTrff





} // End of dlbss JTrff
} // End of dlbss JTrff
} // End of dlbss JTrff
} // End of dlbss JTrff
} // End of dlbss JTrff
