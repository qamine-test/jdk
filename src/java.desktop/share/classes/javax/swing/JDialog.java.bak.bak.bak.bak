/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvbx.bddfssibility.*;

/**
 * Thf mbin dlbss for drfbting b diblog window. You dbn usf this dlbss
 * to drfbtf b dustom diblog, or invokf thf mbny dlbss mfthods
 * in {@link JOptionPbnf} to drfbtf b vbrifty of stbndbrd diblogs.
 * For informbtion bbout drfbting diblogs, sff
 * <fm>Thf Jbvb Tutoribl</fm> sfdtion
 * <b
 hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/diblog.html">How
 * to Mbkf Diblogs</b>.
 *
 * <p>
 *
 * Thf {@dodf JDiblog} domponfnt dontbins b {@dodf JRootPbnf}
 * bs its only dhild.
 * Thf {@dodf dontfntPbnf} should bf thf pbrfnt of bny dhildrfn of thf
 * {@dodf JDiblog}.
 * As b donvfnifndf, thf {@dodf bdd}, {@dodf rfmovf}, bnd {@dodf sftLbyout}
 * mfthods of this dlbss brf ovfrriddfn, so thbt thfy dflfgbtf dblls
 * to thf dorrfsponding mfthods of thf {@dodf ContfntPbnf}.
 * For fxbmplf, you dbn bdd b dhild domponfnt to b diblog bs follows:
 * <prf>
 *       diblog.bdd(dhild);
 * </prf>
 * And thf dhild will bf bddfd to thf dontfntPbnf.
 * Thf {@dodf dontfntPbnf} is blwbys non-{@dodf null}.
 * Attfmpting to sft it to {@dodf null} gfnfrbtfs bn fxdfption.
 * Thf dffbult {@dodf dontfntPbnf} hbs b {@dodf BordfrLbyout}
 * mbnbgfr sft on it.
 * Rfffr to {@link jbvbx.swing.RootPbnfContbinfr}
 * for dftbils on bdding, rfmoving bnd sftting thf {@dodf LbyoutMbnbgfr}
 * of b {@dodf JDiblog}.
 * <p>
 * Plfbsf sff thf {@dodf JRootPbnf} dodumfntbtion for b domplftf
 * dfsdription of thf {@dodf dontfntPbnf}, {@dodf glbssPbnf},
 * bnd {@dodf lbyfrfdPbnf} domponfnts.
 * <p>
 * In b multi-sdrffn fnvironmfnt, you dbn drfbtf b {@dodf JDiblog}
 * on b difffrfnt sdrffn dfvidf thbn its ownfr.  Sff {@link jbvb.bwt.Frbmf} for
 * morf informbtion.
 * <p>
 * <strong>Wbrning:</strong> Swing is not thrfbd sbff. For morf
 * informbtion sff <b
 * hrff="pbdkbgf-summbry.html#thrfbding">Swing's Thrfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf {@dodf jbvb.bfbns} pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @sff JOptionPbnf
 * @sff JRootPbnf
 * @sff jbvbx.swing.RootPbnfContbinfr
 *
 * @bfbninfo
 *      bttributf: isContbinfr truf
 *      bttributf: dontbinfrDflfgbtf gftContfntPbnf
 *    dfsdription: A toplfvfl window for drfbting diblog boxfs.
 *
 * @buthor Dbvid Klobb
 * @buthor Jbmfs Gosling
 * @buthor Sdott Violft
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JDiblog fxtfnds Diblog implfmfnts WindowConstbnts,
                                               Addfssiblf,
                                               RootPbnfContbinfr,
                               TrbnsffrHbndlfr.HbsGftTrbnsffrHbndlfr
{
    /**
     * Kfy into thf AppContfxt, usfd to dhfdk if should providf dfdorbtions
     * by dffbult.
     */
    privbtf stbtid finbl Objfdt dffbultLookAndFfflDfdorbtfdKfy =
            nfw StringBufffr("JDiblog.dffbultLookAndFfflDfdorbtfd");

    privbtf int dffbultClosfOpfrbtion = HIDE_ON_CLOSE;

    /**
     * @sff #gftRootPbnf
     * @sff #sftRootPbnf
     */
    protfdtfd JRootPbnf rootPbnf;

    /**
     * If truf thfn dblls to {@dodf bdd} bnd {@dodf sftLbyout}
     * will bf forwbrdfd to thf {@dodf dontfntPbnf}. This is initiblly
     * fblsf, but is sft to truf whfn thf {@dodf JDiblog} is donstrudtfd.
     *
     * @sff #isRootPbnfChfdkingEnbblfd
     * @sff #sftRootPbnfChfdkingEnbblfd
     * @sff jbvbx.swing.RootPbnfContbinfr
     */
    protfdtfd boolfbn rootPbnfChfdkingEnbblfd = fblsf;

    /**
     * Thf {@dodf TrbnsffrHbndlfr} for this diblog.
     */
    privbtf TrbnsffrHbndlfr trbnsffrHbndlfr;

    /**
     * Crfbtfs b modflfss diblog without b titlf bnd without b spfdififd
     * {@dodf Frbmf} ownfr.  A shbrfd, hiddfn frbmf will bf
     * sft bs thf ownfr of thf diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog() {
        this((Frbmf)null, fblsf);
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd {@dodf Frbmf}
     * bs its ownfr bnd bn fmpty titlf. If {@dodf ownfr}
     * is {@dodf null}, b shbrfd, hiddfn frbmf will bf sft bs thf
     * ownfr of thf diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @pbrbm ownfr thf {@dodf Frbmf} from whidh thf diblog is displbyfd
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Frbmf ownfr) {
        this(ownfr, fblsf);
    }

    /**
     * Crfbtfs b diblog with bn fmpty titlf bnd thf spfdififd modblity bnd
     * {@dodf Frbmf} bs its ownfr. If {@dodf ownfr} is {@dodf null},
     * b shbrfd, hiddfn frbmf will bf sft bs thf ownfr of thf diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @pbrbm ownfr thf {@dodf Frbmf} from whidh thf diblog is displbyfd
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE}, othfrwisf thf diblog is modflfss.
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Frbmf ownfr, boolfbn modbl) {
        this(ownfr, "", modbl);
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd titlf bnd
     * with thf spfdififd ownfr frbmf.  If {@dodf ownfr}
     * is {@dodf null}, b shbrfd, hiddfn frbmf will bf sft bs thf
     * ownfr of thf diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @pbrbm ownfr thf {@dodf Frbmf} from whidh thf diblog is displbyfd
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *                  titlf bbr
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Frbmf ownfr, String titlf) {
        this(ownfr, titlf, fblsf);
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf, ownfr {@dodf Frbmf}
     * bnd modblity. If {@dodf ownfr} is {@dodf null},
     * b shbrfd, hiddfn frbmf will bf sft bs thf ownfr of this diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: Any popup domponfnts ({@dodf JComboBox},
     * {@dodf JPopupMfnu}, {@dodf JMfnuBbr})
     * drfbtfd within b modbl diblog will bf fordfd to bf lightwfight.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @pbrbm ownfr thf {@dodf Frbmf} from whidh thf diblog is displbyfd
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *     titlf bbr
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE} othfrwisf thf diblog is modflfss
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     *
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog.ModblityTypf#MODELESS
     * @sff jbvb.bwt.Diblog#DEFAULT_MODALITY_TYPE
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Frbmf ownfr, String titlf, boolfbn modbl) {
        supfr(ownfr == null? SwingUtilitifs.gftShbrfdOwnfrFrbmf() : ownfr,
              titlf, modbl);
        if (ownfr == null) {
            WindowListfnfr ownfrShutdownListfnfr =
                    SwingUtilitifs.gftShbrfdOwnfrFrbmfShutdownListfnfr();
            bddWindowListfnfr(ownfrShutdownListfnfr);
        }
        diblogInit();
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf,
     * ownfr {@dodf Frbmf}, modblity bnd {@dodf GrbphidsConfigurbtion}.
     * If {@dodf ownfr} is {@dodf null},
     * b shbrfd, hiddfn frbmf will bf sft bs thf ownfr of this diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     * <p>
     * NOTE: Any popup domponfnts ({@dodf JComboBox},
     * {@dodf JPopupMfnu}, {@dodf JMfnuBbr})
     * drfbtfd within b modbl diblog will bf fordfd to bf lightwfight.
     * <p>
     * NOTE: This donstrudtor dofs not bllow you to drfbtf bn unownfd
     * {@dodf JDiblog}. To drfbtf bn unownfd {@dodf JDiblog}
     * you must usf fithfr thf {@dodf JDiblog(Window)} or
     * {@dodf JDiblog(Diblog)} donstrudtor with bn brgumfnt of
     * {@dodf null}.
     *
     * @pbrbm ownfr thf {@dodf Frbmf} from whidh thf diblog is displbyfd
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *     titlf bbr
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE}, othfrwisf thf diblog is modflfss.
     * @pbrbm gd thf {@dodf GrbphidsConfigurbtion} of thf tbrgft sdrffn dfvidf;
     *     if {@dodf null}, thf dffbult systfm {@dodf GrbphidsConfigurbtion}
     *     is bssumfd
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog.ModblityTypf#MODELESS
     * @sff jbvb.bwt.Diblog#DEFAULT_MODALITY_TYPE
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     * @sindf 1.4
     */
    publid JDiblog(Frbmf ownfr, String titlf, boolfbn modbl,
                   GrbphidsConfigurbtion gd) {
        supfr(ownfr == null? SwingUtilitifs.gftShbrfdOwnfrFrbmf() : ownfr,
              titlf, modbl, gd);
        if (ownfr == null) {
            WindowListfnfr ownfrShutdownListfnfr =
                    SwingUtilitifs.gftShbrfdOwnfrFrbmfShutdownListfnfr();
            bddWindowListfnfr(ownfrShutdownListfnfr);
        }
        diblogInit();
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd {@dodf Diblog}
     * bs its ownfr bnd bn fmpty titlf.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf ownfr {@dodf Diblog} from whidh thf diblog is displbyfd
     *     or {@dodf null} if this diblog hbs no ownfr
     * @throws HfbdlfssExdfption {@dodf if GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Diblog ownfr) {
        this(ownfr, fblsf);
    }

    /**
     * Crfbtfs b diblog with bn fmpty titlf bnd thf spfdififd modblity bnd
     * {@dodf Diblog} bs its ownfr.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf ownfr {@dodf Diblog} from whidh thf diblog is displbyfd
     *     or {@dodf null} if this diblog hbs no ownfr
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE}, othfrwisf thf diblog is modflfss.
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog.ModblityTypf#MODELESS
     * @sff jbvb.bwt.Diblog#DEFAULT_MODALITY_TYPE
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Diblog ownfr, boolfbn modbl) {
        this(ownfr, "", modbl);
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd titlf bnd
     * with thf spfdififd ownfr diblog.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf ownfr {@dodf Diblog} from whidh thf diblog is displbyfd
     *     or {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *                  titlf bbr
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Diblog ownfr, String titlf) {
        this(ownfr, titlf, fblsf);
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf, modblity
     * bnd thf spfdififd ownfr {@dodf Diblog}.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf ownfr {@dodf Diblog} from whidh thf diblog is displbyfd
     *     or {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *     titlf bbr
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE}, othfrwisf thf diblog is modflfss
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog.ModblityTypf#MODELESS
     * @sff jbvb.bwt.Diblog#DEFAULT_MODALITY_TYPE
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     */
    publid JDiblog(Diblog ownfr, String titlf, boolfbn modbl) {
        supfr(ownfr, titlf, modbl);
        diblogInit();
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf, ownfr {@dodf Diblog},
     * modblity bnd {@dodf GrbphidsConfigurbtion}.
     *
     * <p>
     * NOTE: Any popup domponfnts ({@dodf JComboBox},
     * {@dodf JPopupMfnu}, {@dodf JMfnuBbr})
     * drfbtfd within b modbl diblog will bf fordfd to bf lightwfight.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf ownfr {@dodf Diblog} from whidh thf diblog is displbyfd
     *     or {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf  thf {@dodf String} to displby in thf diblog's
     *     titlf bbr
     * @pbrbm modbl spfdififs whfthfr diblog blodks usfr input to othfr top-lfvfl
     *     windows whfn shown. If {@dodf truf}, thf modblity typf propfrty is sft to
     *     {@dodf DEFAULT_MODALITY_TYPE}, othfrwisf thf diblog is modflfss
     * @pbrbm gd thf {@dodf GrbphidsConfigurbtion} of thf tbrgft sdrffn dfvidf;
     *     if {@dodf null}, thf dffbult systfm {@dodf GrbphidsConfigurbtion}
     *     is bssumfd
     * @throws HfbdlfssExdfption if {@dodf GrbphidsEnvironmfnt.isHfbdlfss()}
     *     rfturns {@dodf truf}.
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog.ModblityTypf#MODELESS
     * @sff jbvb.bwt.Diblog#DEFAULT_MODALITY_TYPE
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     * @sindf 1.4
     */
    publid JDiblog(Diblog ownfr, String titlf, boolfbn modbl,
                   GrbphidsConfigurbtion gd) {
        supfr(ownfr, titlf, modbl, gd);
        diblogInit();
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd {@dodf Window}
     * bs its ownfr bnd bn fmpty titlf.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf {@dodf Window} from whidh thf diblog is displbyfd or
     *     {@dodf null} if this diblog hbs no ownfr
     *
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr} is not bn instbndf of {@link jbvb.bwt.Diblog Diblog}
     *     or {@link jbvb.bwt.Frbmf Frbmf}
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr}'s {@dodf GrbphidsConfigurbtion} is not from b sdrffn dfvidf
     * @throws HfbdlfssExdfption
     *     whfn {@dodf GrbphidsEnvironmfnt.isHfbdlfss()} rfturns {@dodf truf}
     *
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     *
     * @sindf 1.6
     */
    publid JDiblog(Window ownfr) {
        this(ownfr, Diblog.ModblityTypf.MODELESS);
    }

    /**
     * Crfbtfs b diblog with bn fmpty titlf bnd thf spfdififd modblity bnd
     * {@dodf Window} bs its ownfr.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf {@dodf Window} from whidh thf diblog is displbyfd or
     *     {@dodf null} if this diblog hbs no ownfr
     * @pbrbm modblityTypf spfdififs whfthfr diblog blodks input to othfr
     *     windows whfn shown. {@dodf null} vbluf bnd unsupportfd modblity
     *     typfs brf fquivblfnt to {@dodf MODELESS}
     *
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr} is not bn instbndf of {@link jbvb.bwt.Diblog Diblog}
     *     or {@link jbvb.bwt.Frbmf Frbmf}
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr}'s {@dodf GrbphidsConfigurbtion} is not from b sdrffn dfvidf
     * @throws HfbdlfssExdfption
     *     whfn {@dodf GrbphidsEnvironmfnt.isHfbdlfss()} rfturns {@dodf truf}
     * @throws SfdurityExdfption
     *     if thf dblling thrfbd dofs not hbvf pfrmission to drfbtf modbl diblogs
     *     with thf givfn {@dodf modblityTypf}
     *
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     *
     * @sindf 1.6
     */
    publid JDiblog(Window ownfr, ModblityTypf modblityTypf) {
        this(ownfr, "", modblityTypf);
    }

    /**
     * Crfbtfs b modflfss diblog with thf spfdififd titlf bnd ownfr
     * {@dodf Window}.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf {@dodf Window} from whidh thf diblog is displbyfd or
     *     {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf thf {@dodf String} to displby in thf diblog's
     *     titlf bbr or {@dodf null} if thf diblog hbs no titlf
     *
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr} is not bn instbndf of {@link jbvb.bwt.Diblog Diblog}
     *     or {@link jbvb.bwt.Frbmf Frbmf}
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr}'s {@dodf GrbphidsConfigurbtion} is not from b sdrffn dfvidf
     * @throws HfbdlfssExdfption
     *     whfn {@dodf GrbphidsEnvironmfnt.isHfbdlfss()} rfturns {@dodf truf}
     *
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     *
     * @sindf 1.6
     */
    publid JDiblog(Window ownfr, String titlf) {
        this(ownfr, titlf, Diblog.ModblityTypf.MODELESS);
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf, ownfr {@dodf Window} bnd
     * modblity.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf {@dodf Window} from whidh thf diblog is displbyfd or
     *     {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf thf {@dodf String} to displby in thf diblog's
     *     titlf bbr or {@dodf null} if thf diblog hbs no titlf
     * @pbrbm modblityTypf spfdififs whfthfr diblog blodks input to othfr
     *     windows whfn shown. {@dodf null} vbluf bnd unsupportfd modblity
     *     typfs brf fquivblfnt to {@dodf MODELESS}
     *
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr} is not bn instbndf of {@link jbvb.bwt.Diblog Diblog}
     *     or {@link jbvb.bwt.Frbmf Frbmf}
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr}'s {@dodf GrbphidsConfigurbtion} is not from b sdrffn dfvidf
     * @throws HfbdlfssExdfption
     *     whfn {@dodf GrbphidsEnvironmfnt.isHfbdlfss()} rfturns {@dodf truf}
     * @throws SfdurityExdfption
     *     if thf dblling thrfbd dofs not hbvf pfrmission to drfbtf modbl diblogs
     *     with thf givfn {@dodf modblityTypf}
     *
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     *
     * @sindf 1.6
     */
    publid JDiblog(Window ownfr, String titlf, Diblog.ModblityTypf modblityTypf) {
        supfr(ownfr, titlf, modblityTypf);
        diblogInit();
    }

    /**
     * Crfbtfs b diblog with thf spfdififd titlf, ownfr {@dodf Window},
     * modblity bnd {@dodf GrbphidsConfigurbtion}.
     * <p>
     * NOTE: Any popup domponfnts ({@dodf JComboBox},
     * {@dodf JPopupMfnu}, {@dodf JMfnuBbr})
     * drfbtfd within b modbl diblog will bf fordfd to bf lightwfight.
     * <p>
     * This donstrudtor sfts thf domponfnt's lodblf propfrty to thf vbluf
     * rfturnfd by {@dodf JComponfnt.gftDffbultLodblf}.
     *
     * @pbrbm ownfr thf {@dodf Window} from whidh thf diblog is displbyfd or
     *     {@dodf null} if this diblog hbs no ownfr
     * @pbrbm titlf thf {@dodf String} to displby in thf diblog's
     *     titlf bbr or {@dodf null} if thf diblog hbs no titlf
     * @pbrbm modblityTypf spfdififs whfthfr diblog blodks input to othfr
     *     windows whfn shown. {@dodf null} vbluf bnd unsupportfd modblity
     *     typfs brf fquivblfnt to {@dodf MODELESS}
     * @pbrbm gd thf {@dodf GrbphidsConfigurbtion} of thf tbrgft sdrffn dfvidf;
     *     if {@dodf null}, thf dffbult systfm {@dodf GrbphidsConfigurbtion}
     *     is bssumfd
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr} is not bn instbndf of {@link jbvb.bwt.Diblog Diblog}
     *     or {@link jbvb.bwt.Frbmf Frbmf}
     * @throws IllfgblArgumfntExdfption
     *     if thf {@dodf ownfr}'s {@dodf GrbphidsConfigurbtion} is not from b sdrffn dfvidf
     * @throws HfbdlfssExdfption
     *     whfn {@dodf GrbphidsEnvironmfnt.isHfbdlfss()} rfturns {@dodf truf}
     * @throws SfdurityExdfption
     *     if thf dblling thrfbd dofs not hbvf pfrmission to drfbtf modbl diblogs
     *     with thf givfn {@dodf modblityTypf}
     *
     * @sff jbvb.bwt.Diblog.ModblityTypf
     * @sff jbvb.bwt.Diblog#sftModbl
     * @sff jbvb.bwt.Diblog#sftModblityTypf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff JComponfnt#gftDffbultLodblf
     *
     * @sindf 1.6
     */
    publid JDiblog(Window ownfr, String titlf, Diblog.ModblityTypf modblityTypf,
                   GrbphidsConfigurbtion gd) {
        supfr(ownfr, titlf, modblityTypf, gd);
        diblogInit();
    }

    /**
     * Cbllfd by thf donstrudtors to init thf {@dodf JDiblog} propfrly.
     */
    protfdtfd void diblogInit() {
        fnbblfEvfnts(AWTEvfnt.KEY_EVENT_MASK | AWTEvfnt.WINDOW_EVENT_MASK);
        sftLodblf( JComponfnt.gftDffbultLodblf() );
        sftRootPbnf(drfbtfRootPbnf());
        sftBbdkground(UIMbnbgfr.gftColor("dontrol"));
        sftRootPbnfChfdkingEnbblfd(truf);
        if (JDiblog.isDffbultLookAndFfflDfdorbtfd()) {
            boolfbn supportsWindowDfdorbtions =
            UIMbnbgfr.gftLookAndFffl().gftSupportsWindowDfdorbtions();
            if (supportsWindowDfdorbtions) {
                sftUndfdorbtfd(truf);
                gftRootPbnf().sftWindowDfdorbtionStylf(JRootPbnf.PLAIN_DIALOG);
            }
        }
        sun.bwt.SunToolkit.dhfdkAndSftPolidy(this);
    }

    /**
     * Cbllfd by thf donstrudtor mfthods to drfbtf thf dffbult
     * {@dodf rootPbnf}.
     *
     * @rfturn  b nfw {@dodf JRootPbnf}
     */
    protfdtfd JRootPbnf drfbtfRootPbnf() {
        JRootPbnf rp = nfw JRootPbnf();
        // NOTE: this usfs sftOpbquf vs LookAndFffl.instbllPropfrty bs thfrf
        // is NO rfbson for thf RootPbnf not to bf opbquf. For pbinting to
        // work thf dontfntPbnf must bf opbquf, thfrffor thf RootPbnf dbn
        // blso bf opbquf.
        rp.sftOpbquf(truf);
        rfturn rp;
    }

    /**
     * Hbndlfs window fvfnts dfpfnding on thf stbtf of thf
     * {@dodf dffbultClosfOpfrbtion} propfrty.
     *
     * @sff #sftDffbultClosfOpfrbtion
     */
    protfdtfd void prodfssWindowEvfnt(WindowEvfnt f) {
        supfr.prodfssWindowEvfnt(f);

        if (f.gftID() == WindowEvfnt.WINDOW_CLOSING) {
            switdh(dffbultClosfOpfrbtion) {
              dbsf HIDE_ON_CLOSE:
                 sftVisiblf(fblsf);
                 brfbk;
              dbsf DISPOSE_ON_CLOSE:
                 disposf();
                 brfbk;
              dbsf DO_NOTHING_ON_CLOSE:
                 dffbult:
                 brfbk;
            }
        }
    }


    /**
     * Sfts thf opfrbtion thbt will hbppfn by dffbult whfn
     * thf usfr initibtfs b "dlosf" on this diblog.
     * You must spfdify onf of thf following dhoidfs:
     * <br><br>
     * <ul>
     * <li>{@dodf DO_NOTHING_ON_CLOSE}
     * (dffinfd in {@dodf WindowConstbnts}):
     * Don't do bnything; rfquirf thf
     * progrbm to hbndlf thf opfrbtion in thf {@dodf windowClosing}
     * mfthod of b rfgistfrfd {@dodf WindowListfnfr} objfdt.
     *
     * <li>{@dodf HIDE_ON_CLOSE}
     * (dffinfd in {@dodf WindowConstbnts}):
     * Autombtidblly hidf thf diblog bftfr
     * invoking bny rfgistfrfd {@dodf WindowListfnfr}
     * objfdts.
     *
     * <li>{@dodf DISPOSE_ON_CLOSE}
     * (dffinfd in {@dodf WindowConstbnts}):
     * Autombtidblly hidf bnd disposf thf
     * diblog bftfr invoking bny rfgistfrfd {@dodf WindowListfnfr}
     * objfdts.
     * </ul>
     * <p>
     * Thf vbluf is sft to {@dodf HIDE_ON_CLOSE} by dffbult. Chbngfs
     * to thf vbluf of this propfrty dbusf thf firing of b propfrty
     * dhbngf fvfnt, with propfrty nbmf "dffbultClosfOpfrbtion".
     * <p>
     * <b>Notf</b>: Whfn thf lbst displbybblf window within thf
     * Jbvb virtubl mbdhinf (VM) is disposfd of, thf VM mby
     * tfrminbtf.  Sff <b hrff="../../jbvb/bwt/dod-filfs/AWTThrfbdIssufs.html">
     * AWT Thrfbding Issufs</b> for morf informbtion.
     *
     * @pbrbm opfrbtion thf opfrbtion whidh should bf pfrformfd whfn thf
     *        usfr dlosfs thf diblog
     * @throws IllfgblArgumfntExdfption if dffbultClosfOpfrbtion vbluf
     *         isn't onf of thf bbovf vblid vblufs
     * @sff #bddWindowListfnfr
     * @sff #gftDffbultClosfOpfrbtion
     * @sff WindowConstbnts
     *
     * @bfbninfo
     *   prfffrrfd: truf
     *       bound: truf
     *        fnum: DO_NOTHING_ON_CLOSE WindowConstbnts.DO_NOTHING_ON_CLOSE
     *              HIDE_ON_CLOSE       WindowConstbnts.HIDE_ON_CLOSE
     *              DISPOSE_ON_CLOSE    WindowConstbnts.DISPOSE_ON_CLOSE
     * dfsdription: Thf diblog's dffbult dlosf opfrbtion.
     */
    publid void sftDffbultClosfOpfrbtion(int opfrbtion) {
        if (opfrbtion != DO_NOTHING_ON_CLOSE &&
            opfrbtion != HIDE_ON_CLOSE &&
            opfrbtion != DISPOSE_ON_CLOSE) {
            throw nfw IllfgblArgumfntExdfption("dffbultClosfOpfrbtion must bf onf of: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, or DISPOSE_ON_CLOSE");
        }

        int oldVbluf = this.dffbultClosfOpfrbtion;
        this.dffbultClosfOpfrbtion = opfrbtion;
        firfPropfrtyChbngf("dffbultClosfOpfrbtion", oldVbluf, opfrbtion);
    }

   /**
    * Rfturns thf opfrbtion whidh oddurs whfn thf usfr
    * initibtfs b "dlosf" on this diblog.
    *
    * @rfturn bn intfgfr indidbting thf window-dlosf opfrbtion
    * @sff #sftDffbultClosfOpfrbtion
    */
    publid int gftDffbultClosfOpfrbtion() {
        rfturn dffbultClosfOpfrbtion;
    }

    /**
     * Sfts thf {@dodf trbnsffrHbndlfr} propfrty, whidh is b mfdhbnism to
     * support trbnsffr of dbtb into this domponfnt. Usf {@dodf null}
     * if thf domponfnt dofs not support dbtb trbnsffr opfrbtions.
     * <p>
     * If thf systfm propfrty {@dodf supprfssSwingDropSupport} is {@dodf fblsf}
     * (thf dffbult) bnd thf durrfnt drop tbrgft on this domponfnt is fithfr
     * {@dodf null} or not b usfr-sft drop tbrgft, this mfthod will dhbngf thf
     * drop tbrgft bs follows: If {@dodf nfwHbndlfr} is {@dodf null} it will
     * dlfbr thf drop tbrgft. If not {@dodf null} it will instbll b nfw
     * {@dodf DropTbrgft}.
     * <p>
     * Notf: Whfn usfd with {@dodf JDiblog}, {@dodf TrbnsffrHbndlfr} only
     * providfs dbtb import dbpbbility, bs thf dbtb fxport rflbtfd mfthods
     * brf durrfntly typfd to {@dodf JComponfnt}.
     * <p>
     * Plfbsf sff
     * <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dnd/indfx.html">
     * How to Usf Drbg bnd Drop bnd Dbtb Trbnsffr</b>, b sfdtion in
     * <fm>Thf Jbvb Tutoribl</fm>, for morf informbtion.
     *
     * @pbrbm nfwHbndlfr thf nfw {@dodf TrbnsffrHbndlfr}
     *
     * @sff TrbnsffrHbndlfr
     * @sff #gftTrbnsffrHbndlfr
     * @sff jbvb.bwt.Componfnt#sftDropTbrgft
     * @sindf 1.6
     *
     * @bfbninfo
     *        bound: truf
     *       hiddfn: truf
     *  dfsdription: Mfdhbnism for trbnsffr of dbtb into thf domponfnt
     */
    publid void sftTrbnsffrHbndlfr(TrbnsffrHbndlfr nfwHbndlfr) {
        TrbnsffrHbndlfr oldHbndlfr = trbnsffrHbndlfr;
        trbnsffrHbndlfr = nfwHbndlfr;
        SwingUtilitifs.instbllSwingDropTbrgftAsNfdfssbry(this, trbnsffrHbndlfr);
        firfPropfrtyChbngf("trbnsffrHbndlfr", oldHbndlfr, nfwHbndlfr);
    }

    /**
     * Gfts thf {@dodf trbnsffrHbndlfr} propfrty.
     *
     * @rfturn thf vbluf of thf {@dodf trbnsffrHbndlfr} propfrty
     *
     * @sff TrbnsffrHbndlfr
     * @sff #sftTrbnsffrHbndlfr
     * @sindf 1.6
     */
    publid TrbnsffrHbndlfr gftTrbnsffrHbndlfr() {
        rfturn trbnsffrHbndlfr;
    }

    /**
     * Cblls {@dodf pbint(g)}.  This mfthod wbs ovfrriddfn to
     * prfvfnt bn unnfdfssbry dbll to dlfbr thf bbdkground.
     *
     * @pbrbm g  thf {@dodf Grbphids} dontfxt in whidh to pbint
     */
    publid void updbtf(Grbphids g) {
        pbint(g);
    }

   /**
    * Sfts thf mfnubbr for this diblog.
    *
    * @pbrbm mfnu thf mfnubbr bfing plbdfd in thf diblog
    *
    * @sff #gftJMfnuBbr
    *
    * @bfbninfo
    *      hiddfn: truf
    * dfsdription: Thf mfnubbr for bddfssing pulldown mfnus from this diblog.
    */
    publid void sftJMfnuBbr(JMfnuBbr mfnu) {
        gftRootPbnf().sftMfnuBbr(mfnu);
    }

   /**
    * Rfturns thf mfnubbr sft on this diblog.
    *
    * @rfturn thf mfnubbr sft on this diblog
    * @sff #sftJMfnuBbr
    */
    publid JMfnuBbr gftJMfnuBbr() {
        rfturn gftRootPbnf().gftMfnuBbr();
    }


    /**
     * Rfturns whfthfr dblls to {@dodf bdd} bnd
     * {@dodf sftLbyout} brf forwbrdfd to thf {@dodf dontfntPbnf}.
     *
     * @rfturn truf if {@dodf bdd} bnd {@dodf sftLbyout}
     *         brf forwbrdfd; fblsf othfrwisf
     *
     * @sff #bddImpl
     * @sff #sftLbyout
     * @sff #sftRootPbnfChfdkingEnbblfd
     * @sff jbvbx.swing.RootPbnfContbinfr
     */
    protfdtfd boolfbn isRootPbnfChfdkingEnbblfd() {
        rfturn rootPbnfChfdkingEnbblfd;
    }


    /**
     * Sfts whfthfr dblls to {@dodf bdd} bnd
     * {@dodf sftLbyout} brf forwbrdfd to thf {@dodf dontfntPbnf}.
     *
     * @pbrbm fnbblfd  truf if {@dodf bdd} bnd {@dodf sftLbyout}
     *        brf forwbrdfd, fblsf if thfy should opfrbtf dirfdtly on thf
     *        {@dodf JDiblog}.
     *
     * @sff #bddImpl
     * @sff #sftLbyout
     * @sff #isRootPbnfChfdkingEnbblfd
     * @sff jbvbx.swing.RootPbnfContbinfr
     * @bfbninfo
     *      hiddfn: truf
     * dfsdription: Whfthfr thf bdd bnd sftLbyout mfthods brf forwbrdfd
     */
    protfdtfd void sftRootPbnfChfdkingEnbblfd(boolfbn fnbblfd) {
        rootPbnfChfdkingEnbblfd = fnbblfd;
    }

    /**
     * Adds thf spfdififd dhild {@dodf Componfnt}.
     * This mfthod is ovfrriddfn to donditionblly forwbrd dblls to thf
     * {@dodf dontfntPbnf}.
     * By dffbult, dhildrfn brf bddfd to thf {@dodf dontfntPbnf} instfbd
     * of thf frbmf, rfffr to {@link jbvbx.swing.RootPbnfContbinfr} for
     * dftbils.
     *
     * @pbrbm domp thf domponfnt to bf fnhbndfd
     * @pbrbm donstrbints thf donstrbints to bf rfspfdtfd
     * @pbrbm indfx thf indfx
     * @throws IllfgblArgumfntExdfption if {@dodf indfx} is invblid
     * @throws IllfgblArgumfntExdfption if bdding thf dontbinfr's pbrfnt
     *                  to itsflf
     * @throws IllfgblArgumfntExdfption if bdding b window to b dontbinfr
     *
     * @sff #sftRootPbnfChfdkingEnbblfd
     * @sff jbvbx.swing.RootPbnfContbinfr
     */
    protfdtfd void bddImpl(Componfnt domp, Objfdt donstrbints, int indfx)
    {
        if(isRootPbnfChfdkingEnbblfd()) {
            gftContfntPbnf().bdd(domp, donstrbints, indfx);
        }
        flsf {
            supfr.bddImpl(domp, donstrbints, indfx);
        }
    }

    /**
     * Rfmovfs thf spfdififd domponfnt from thf dontbinfr. If
     * {@dodf domp} is not thf {@dodf rootPbnf}, this will forwbrd
     * thf dbll to thf {@dodf dontfntPbnf}. This will do nothing if
     * {@dodf domp} is not b dhild of thf {@dodf JDiblog} or
     * {@dodf dontfntPbnf}.
     *
     * @pbrbm domp thf domponfnt to bf rfmovfd
     * @throws NullPointfrExdfption if {@dodf domp} is null
     * @sff #bdd
     * @sff jbvbx.swing.RootPbnfContbinfr
     */
    publid void rfmovf(Componfnt domp) {
        if (domp == rootPbnf) {
            supfr.rfmovf(domp);
        } flsf {
            gftContfntPbnf().rfmovf(domp);
        }
    }


    /**
     * Sfts thf {@dodf LbyoutMbnbgfr}.
     * Ovfrriddfn to donditionblly forwbrd thf dbll to thf
     * {@dodf dontfntPbnf}.
     * Rfffr to {@link jbvbx.swing.RootPbnfContbinfr} for
     * morf informbtion.
     *
     * @pbrbm mbnbgfr thf {@dodf LbyoutMbnbgfr}
     * @sff #sftRootPbnfChfdkingEnbblfd
     * @sff jbvbx.swing.RootPbnfContbinfr
     */
    publid void sftLbyout(LbyoutMbnbgfr mbnbgfr) {
        if(isRootPbnfChfdkingEnbblfd()) {
            gftContfntPbnf().sftLbyout(mbnbgfr);
        }
        flsf {
            supfr.sftLbyout(mbnbgfr);
        }
    }


    /**
     * Rfturns thf {@dodf rootPbnf} objfdt for this diblog.
     *
     * @sff #sftRootPbnf
     * @sff RootPbnfContbinfr#gftRootPbnf
     */
    publid JRootPbnf gftRootPbnf() {
        rfturn rootPbnf;
    }


    /**
     * Sfts thf {@dodf rootPbnf} propfrty.
     * This mfthod is dbllfd by thf donstrudtor.
     *
     * @pbrbm root thf {@dodf rootPbnf} objfdt for this diblog
     *
     * @sff #gftRootPbnf
     *
     * @bfbninfo
     *   hiddfn: truf
     * dfsdription: thf RootPbnf objfdt for this diblog.
     */
    protfdtfd void sftRootPbnf(JRootPbnf root) {
        if(rootPbnf != null) {
            rfmovf(rootPbnf);
        }
        rootPbnf = root;
        if(rootPbnf != null) {
            boolfbn dhfdkingEnbblfd = isRootPbnfChfdkingEnbblfd();
            try {
                sftRootPbnfChfdkingEnbblfd(fblsf);
                bdd(rootPbnf, BordfrLbyout.CENTER);
            }
            finblly {
                sftRootPbnfChfdkingEnbblfd(dhfdkingEnbblfd);
            }
        }
    }


    /**
     * Rfturns thf {@dodf dontfntPbnf} objfdt for this diblog.
     *
     * @rfturn thf {@dodf dontfntPbnf} propfrty
     *
     * @sff #sftContfntPbnf
     * @sff RootPbnfContbinfr#gftContfntPbnf
     */
    publid Contbinfr gftContfntPbnf() {
        rfturn gftRootPbnf().gftContfntPbnf();
    }


   /**
     * Sfts thf {@dodf dontfntPbnf} propfrty.
     * This mfthod is dbllfd by thf donstrudtor.
     * <p>
     * Swing's pbinting brdhitfdturf rfquirfs bn opbquf {@dodf JComponfnt}
     * in thf dontbinmfnt hifrbrdhy. This is typidblly providfd by thf
     * dontfnt pbnf. If you rfplbdf thf dontfnt pbnf it is rfdommfndfd you
     * rfplbdf it with bn opbquf {@dodf JComponfnt}.
     * @sff JRootPbnf
     *
     * @pbrbm dontfntPbnf thf {@dodf dontfntPbnf} objfdt for this diblog
     *
     * @throws jbvb.bwt.IllfgblComponfntStbtfExdfption (b runtimf
     *            fxdfption) if thf dontfnt pbnf pbrbmftfr is {@dodf null}
     * @sff #gftContfntPbnf
     * @sff RootPbnfContbinfr#sftContfntPbnf
     *
     * @bfbninfo
     *     hiddfn: truf
     *     dfsdription: Thf dlifnt brfb of thf diblog whfrf dhild
     *                  domponfnts brf normblly insfrtfd.
     */
    publid void sftContfntPbnf(Contbinfr dontfntPbnf) {
        gftRootPbnf().sftContfntPbnf(dontfntPbnf);
    }

    /**
     * Rfturns thf {@dodf lbyfrfdPbnf} objfdt for this diblog.
     *
     * @rfturn thf {@dodf lbyfrfdPbnf} propfrty
     *
     * @sff #sftLbyfrfdPbnf
     * @sff RootPbnfContbinfr#gftLbyfrfdPbnf
     */
    publid JLbyfrfdPbnf gftLbyfrfdPbnf() {
        rfturn gftRootPbnf().gftLbyfrfdPbnf();
    }

    /**
     * Sfts thf {@dodf lbyfrfdPbnf} propfrty.
     * This mfthod is dbllfd by thf donstrudtor.
     *
     * @pbrbm lbyfrfdPbnf thf nfw {@dodf lbyfrfdPbnf} propfrty
     *
     * @throws jbvb.bwt.IllfgblComponfntStbtfExdfption (b runtimf
     *            fxdfption) if thf lbyfrfd pbnf pbrbmftfr is null
     * @sff #gftLbyfrfdPbnf
     * @sff RootPbnfContbinfr#sftLbyfrfdPbnf
     *
     * @bfbninfo
     *     hiddfn: truf
     *     dfsdription: Thf pbnf whidh holds thf vbrious diblog lbyfrs.
     */
    publid void sftLbyfrfdPbnf(JLbyfrfdPbnf lbyfrfdPbnf) {
        gftRootPbnf().sftLbyfrfdPbnf(lbyfrfdPbnf);
    }

    /**
     * Rfturns thf {@dodf glbssPbnf} objfdt for this diblog.
     *
     * @rfturn thf {@dodf glbssPbnf} propfrty
     *
     * @sff #sftGlbssPbnf
     * @sff RootPbnfContbinfr#gftGlbssPbnf
     */
    publid Componfnt gftGlbssPbnf() {
        rfturn gftRootPbnf().gftGlbssPbnf();
    }

    /**
     * Sfts thf {@dodf glbssPbnf} propfrty.
     * This mfthod is dbllfd by thf donstrudtor.
     *
     * @pbrbm glbssPbnf thf {@dodf glbssPbnf} objfdt for this diblog
     * @sff #gftGlbssPbnf
     * @sff RootPbnfContbinfr#sftGlbssPbnf
     *
     * @bfbninfo
     *     hiddfn: truf
     *     dfsdription: A trbnspbrfnt pbnf usfd for mfnu rfndfring.
     */
    publid void sftGlbssPbnf(Componfnt glbssPbnf) {
        gftRootPbnf().sftGlbssPbnf(glbssPbnf);
    }

    /**
     * {@inhfritDod}
     *
     * @sindf 1.6
     */
    publid Grbphids gftGrbphids() {
        JComponfnt.gftGrbphidsInvokfd(this);
        rfturn supfr.gftGrbphids();
    }

    /**
     * Rfpbints thf spfdififd rfdtbnglf of this domponfnt within
     * {@dodf timf} millisfdonds.  Rfffr to {@dodf RfpbintMbnbgfr}
     * for dftbils on how thf rfpbint is hbndlfd.
     *
     * @pbrbm     timf   mbximum timf in millisfdonds bfforf updbtf
     * @pbrbm     x    thf <i>x</i> doordinbtf
     * @pbrbm     y    thf <i>y</i> doordinbtf
     * @pbrbm     width    thf width
     * @pbrbm     hfight   thf hfight
     * @sff       RfpbintMbnbgfr
     * @sindf     1.6
     */
    publid void rfpbint(long timf, int x, int y, int width, int hfight) {
        if (RfpbintMbnbgfr.HANDLE_TOP_LEVEL_PAINT) {
            RfpbintMbnbgfr.durrfntMbnbgfr(this).bddDirtyRfgion(
                              this, x, y, width, hfight);
        }
        flsf {
            supfr.rfpbint(timf, x, y, width, hfight);
        }
    }

    /**
     * Providfs b hint bs to whfthfr or not nfwly drfbtfd {@dodf JDiblog}s
     * should hbvf thfir Window dfdorbtions (sudh bs bordfrs, widgfts to
     * dlosf thf window, titlf...) providfd by thf durrfnt look
     * bnd fffl. If {@dodf dffbultLookAndFfflDfdorbtfd} is truf,
     * thf durrfnt {@dodf LookAndFffl} supports providing window
     * dfdorbtions, bnd thf durrfnt window mbnbgfr supports undfdorbtfd
     * windows, thfn nfwly drfbtfd {@dodf JDiblog}s will hbvf thfir
     * Window dfdorbtions providfd by thf durrfnt {@dodf LookAndFffl}.
     * Othfrwisf, nfwly drfbtfd {@dodf JDiblog}s will hbvf thfir
     * Window dfdorbtions providfd by thf durrfnt window mbnbgfr.
     * <p>
     * You dbn gft thf sbmf ffffdt on b singlf JDiblog by doing thf following:
     * <prf>
     *    JDiblog diblog = nfw JDiblog();
     *    diblog.sftUndfdorbtfd(truf);
     *    diblog.gftRootPbnf().sftWindowDfdorbtionStylf(JRootPbnf.PLAIN_DIALOG);
     * </prf>
     *
     * @pbrbm dffbultLookAndFfflDfdorbtfd A hint bs to whfthfr or not durrfnt
     *        look bnd fffl should providf window dfdorbtions
     * @sff jbvbx.swing.LookAndFffl#gftSupportsWindowDfdorbtions
     * @sindf 1.4
     */
    publid stbtid void sftDffbultLookAndFfflDfdorbtfd(boolfbn dffbultLookAndFfflDfdorbtfd) {
        if (dffbultLookAndFfflDfdorbtfd) {
            SwingUtilitifs.bppContfxtPut(dffbultLookAndFfflDfdorbtfdKfy, Boolfbn.TRUE);
        } flsf {
            SwingUtilitifs.bppContfxtPut(dffbultLookAndFfflDfdorbtfdKfy, Boolfbn.FALSE);
        }
    }

    /**
     * Rfturns truf if nfwly drfbtfd {@dodf JDiblog}s should hbvf thfir
     * Window dfdorbtions providfd by thf durrfnt look bnd fffl. This is only
     * b hint, bs dfrtbin look bnd fffls mby not support this ffbturf.
     *
     * @rfturn truf if look bnd fffl should providf Window dfdorbtions.
     * @sindf 1.4
     */
    publid stbtid boolfbn isDffbultLookAndFfflDfdorbtfd() {
        Boolfbn dffbultLookAndFfflDfdorbtfd =
            (Boolfbn) SwingUtilitifs.bppContfxtGft(dffbultLookAndFfflDfdorbtfdKfy);
        if (dffbultLookAndFfflDfdorbtfd == null) {
            dffbultLookAndFfflDfdorbtfd = Boolfbn.FALSE;
        }
        rfturn dffbultLookAndFfflDfdorbtfd.boolfbnVbluf();
    }

    /**
     * Rfturns b string rfprfsfntbtion of this {@dodf JDiblog}.
     * This mfthod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not
     * bf {@dodf null}.
     *
     * @rfturn  b string rfprfsfntbtion of this {@dodf JDiblog}.
     */
    protfdtfd String pbrbmString() {
        String dffbultClosfOpfrbtionString;
        if (dffbultClosfOpfrbtion == HIDE_ON_CLOSE) {
            dffbultClosfOpfrbtionString = "HIDE_ON_CLOSE";
        } flsf if (dffbultClosfOpfrbtion == DISPOSE_ON_CLOSE) {
            dffbultClosfOpfrbtionString = "DISPOSE_ON_CLOSE";
        } flsf if (dffbultClosfOpfrbtion == DO_NOTHING_ON_CLOSE) {
            dffbultClosfOpfrbtionString = "DO_NOTHING_ON_CLOSE";
        } flsf dffbultClosfOpfrbtionString = "";
        String rootPbnfString = (rootPbnf != null ?
                                 rootPbnf.toString() : "");
        String rootPbnfChfdkingEnbblfdString = (rootPbnfChfdkingEnbblfd ?
                                                "truf" : "fblsf");

        rfturn supfr.pbrbmString() +
        ",dffbultClosfOpfrbtion=" + dffbultClosfOpfrbtionString +
        ",rootPbnf=" + rootPbnfString +
        ",rootPbnfChfdkingEnbblfd=" + rootPbnfChfdkingEnbblfdString;
    }


/////////////////
// Addfssibility support
////////////////

    /**
     * {@dodf AddfssiblfContfxt} bssodibtfd with this {@dodf JDiblog}
     */
    protfdtfd AddfssiblfContfxt bddfssiblfContfxt = null;

    /**
     * Gfts thf AddfssiblfContfxt bssodibtfd with this JDiblog.
     * For JDiblogs, thf AddfssiblfContfxt tbkfs thf form of bn
     * AddfssiblfJDiblog.
     * A nfw AddfssiblfJDiblog instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn AddfssiblfJDiblog thbt sfrvfs bs thf
     *         AddfssiblfContfxt of this JDiblog
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJDiblog();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * {@dodf JDiblog} dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to diblog usfr-intfrfbdf
     * flfmfnts.
     */
    protfdtfd dlbss AddfssiblfJDiblog fxtfnds AddfssiblfAWTDiblog {

        // AddfssiblfContfxt mfthods
        //
        /**
         * Gft thf bddfssiblf nbmf of this objfdt.
         *
         * @rfturn thf lodblizfd nbmf of thf objfdt -- dbn bf null if this
         * objfdt dofs not hbvf b nbmf
         */
        publid String gftAddfssiblfNbmf() {
            if (bddfssiblfNbmf != null) {
                rfturn bddfssiblfNbmf;
            } flsf {
                if (gftTitlf() == null) {
                    rfturn supfr.gftAddfssiblfNbmf();
                } flsf {
                    rfturn gftTitlf();
                }
            }
        }

        /**
         * Gft thf stbtf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfStbtfSft dontbining thf durrfnt
         * stbtf sft of thf objfdt
         * @sff AddfssiblfStbtf
         */
        publid AddfssiblfStbtfSft gftAddfssiblfStbtfSft() {
            AddfssiblfStbtfSft stbtfs = supfr.gftAddfssiblfStbtfSft();

            if (isRfsizbblf()) {
                stbtfs.bdd(AddfssiblfStbtf.RESIZABLE);
            }
            if (gftFodusOwnfr() != null) {
                stbtfs.bdd(AddfssiblfStbtf.ACTIVE);
            }
            if (isModbl()) {
                stbtfs.bdd(AddfssiblfStbtf.MODAL);
            }
            rfturn stbtfs;
        }

    } // innfr dlbss AddfssiblfJDiblog
}
