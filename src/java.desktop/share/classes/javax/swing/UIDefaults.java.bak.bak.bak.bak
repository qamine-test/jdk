/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing;


import jbvbx.swing.plbf.ComponfntUI;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.fvfnt.SwingPropfrtyChbngfSupport;

import jbvb.lbng.rfflfdt.*;
import jbvb.util.HbshMbp;
import jbvb.util.Mbp;
import jbvb.util.Enumfrbtion;
import jbvb.util.Hbshtbblf;
import jbvb.util.RfsourdfBundlf;
import jbvb.util.RfsourdfBundlf.Control;
import jbvb.util.Lodblf;
import jbvb.util.Vfdtor;
import jbvb.util.MissingRfsourdfExdfption;
import jbvb.bwt.Font;
import jbvb.bwt.Color;
import jbvb.bwt.Insfts;
import jbvb.bwt.Dimfnsion;
import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.bfbns.PropfrtyChbngfListfnfr;
import jbvb.bfbns.PropfrtyChbngfEvfnt;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.AddfssControlContfxt;
import jbvb.sfdurity.PrivilfgfdAdtion;

import sun.rfflfdt.misd.MfthodUtil;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.swing.SwingUtilitifs2;
import sun.util.CorfRfsourdfBundlfControl;

/**
 * A tbblf of dffbults for Swing domponfnts.  Applidbtions dbn sft/gft
 * dffbult vblufs vib thf <dodf>UIMbnbgfr</dodf>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @sff UIMbnbgfr
 * @buthor Hbns Mullfr
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss UIDffbults fxtfnds Hbshtbblf<Objfdt,Objfdt>
{
    privbtf stbtid finbl Objfdt PENDING = "Pfnding";

    privbtf SwingPropfrtyChbngfSupport dhbngfSupport;

    privbtf Vfdtor<String> rfsourdfBundlfs;

    privbtf Lodblf dffbultLodblf = Lodblf.gftDffbult();

    /**
     * Mbps from b Lodblf to b dbdhfd Mbp of thf RfsourdfBundlf. This is donf
     * so bs to bvoid bn fxdfption bfing thrown whfn b vbluf is bskfd for.
     * Addfss to this should bf donf whilf holding b lodk on thf
     * UIDffbults, fg syndhronizfd(this).
     */
    privbtf Mbp<Lodblf, Mbp<String, Objfdt>> rfsourdfCbdhf;

    /**
     * Crfbtfs bn fmpty dffbults tbblf.
     */
    publid UIDffbults() {
        this(700, .75f);
    }

    /**
     * Crfbtfs bn fmpty dffbults tbblf with thf spfdififd initibl dbpbdity bnd
     * lobd fbdtor.
     *
     * @pbrbm initiblCbpbdity   thf initibl dbpbdity of thf dffbults tbblf
     * @pbrbm lobdFbdtor        thf lobd fbdtor of thf dffbults tbblf
     * @sff jbvb.util.Hbshtbblf
     * @sindf 1.6
     */
    publid UIDffbults(int initiblCbpbdity, flobt lobdFbdtor) {
        supfr(initiblCbpbdity, lobdFbdtor);
        rfsourdfCbdhf = nfw HbshMbp<Lodblf, Mbp<String, Objfdt>>();
    }


    /**
     * Crfbtfs b dffbults tbblf initiblizfd with thf spfdififd
     * kfy/vbluf pbirs.  For fxbmplf:
     * <prf>
        Objfdt[] uiDffbults = {
             "Font", nfw Font("Diblog", Font.BOLD, 12),
            "Color", Color.rfd,
             "fivf", nfw Intfgfr(5)
        }
        UIDffbults myDffbults = nfw UIDffbults(uiDffbults);
     * </prf>
     * @pbrbm kfyVblufList  bn brrby of objfdts dontbining thf kfy/vbluf
     *          pbirs
     */
    publid UIDffbults(Objfdt[] kfyVblufList) {
        supfr(kfyVblufList.lfngth / 2);
        for(int i = 0; i < kfyVblufList.lfngth; i += 2) {
            supfr.put(kfyVblufList[i], kfyVblufList[i + 1]);
        }
    }

    /**
     * Rfturns thf vbluf for kfy.  If thf vbluf is b
     * <dodf>UIDffbults.LbzyVbluf</dodf> thfn thf rfbl
     * vbluf is domputfd with <dodf>LbzyVbluf.drfbtfVbluf()</dodf>,
     * thf tbblf fntry is rfplbdfd, bnd thf rfbl vbluf is rfturnfd.
     * If thf vbluf is bn <dodf>UIDffbults.AdtivfVbluf</dodf>
     * thf tbblf fntry is not rfplbdfd - thf vbluf is domputfd
     * with <dodf>AdtivfVbluf.drfbtfVbluf()</dodf> for fbdh
     * <dodf>gft()</dodf> dbll.
     *
     * If thf kfy is not found in thf tbblf thfn it is sfbrdhfd for in thf list
     * of rfsourdf bundlfs mbintbinfd by this objfdt.  Thf rfsourdf bundlfs brf
     * sfbrdhfd most rfdfntly bddfd first using thf lodblf rfturnfd by
     * <dodf>gftDffbultLodblf</dodf>.  <dodf>LbzyVblufs</dodf> bnd
     * <dodf>AdtivfVblufs</dodf> brf not supportfd in thf rfsourdf bundlfs.

     *
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn thf vbluf for <dodf>kfy</dodf>
     * @sff LbzyVbluf
     * @sff AdtivfVbluf
     * @sff jbvb.util.Hbshtbblf#gft
     * @sff #gftDffbultLodblf
     * @sff #bddRfsourdfBundlf
     * @sindf 1.4
     */
    publid Objfdt gft(Objfdt kfy) {
        Objfdt vbluf = gftFromHbshtbblf( kfy );
        rfturn (vbluf != null) ? vbluf : gftFromRfsourdfBundlf(kfy, null);
    }

    /**
     * Looks up up thf givfn kfy in our Hbshtbblf bnd rfsolvfs LbzyVblufs
     * or AdtivfVblufs.
     */
    privbtf Objfdt gftFromHbshtbblf(Objfdt kfy) {
        /* Quidkly hbndlf thf dommon dbsf, without grbbbing
         * b lodk.
         */
        Objfdt vbluf = supfr.gft(kfy);
        if ((vbluf != PENDING) &&
            !(vbluf instbndfof AdtivfVbluf) &&
            !(vbluf instbndfof LbzyVbluf)) {
            rfturn vbluf;
        }

        /* If thf LbzyVbluf for kfy is bfing donstrudtfd by bnothfr
         * thrfbd thfn wbit bnd thfn rfturn thf nfw vbluf, othfrwisf drop
         * thf lodk bnd donstrudt thf AdtivfVbluf or thf LbzyVbluf.
         * Wf usf thf spfdibl vbluf PENDING to mbrk LbzyVblufs thbt
         * brf bfing donstrudtfd.
         */
        syndhronizfd(this) {
            vbluf = supfr.gft(kfy);
            if (vbluf == PENDING) {
                do {
                    try {
                        this.wbit();
                    }
                    dbtdh (IntfrruptfdExdfption f) {
                    }
                    vbluf = supfr.gft(kfy);
                }
                whilf(vbluf == PENDING);
                rfturn vbluf;
            }
            flsf if (vbluf instbndfof LbzyVbluf) {
                supfr.put(kfy, PENDING);
            }
            flsf if (!(vbluf instbndfof AdtivfVbluf)) {
                rfturn vbluf;
            }
        }

        /* At this point wf know thbt thf vbluf of kfy wbs
         * b LbzyVbluf or bn AdtivfVbluf.
         */
        if (vbluf instbndfof LbzyVbluf) {
            try {
                /* If bn fxdfption is thrown wf'll just put thf LbzyVbluf
                 * bbdk in thf tbblf.
                 */
                vbluf = ((LbzyVbluf)vbluf).drfbtfVbluf(this);
            }
            finblly {
                syndhronizfd(this) {
                    if (vbluf == null) {
                        supfr.rfmovf(kfy);
                    }
                    flsf {
                        supfr.put(kfy, vbluf);
                    }
                    this.notifyAll();
                }
            }
        }
        flsf {
            vbluf = ((AdtivfVbluf)vbluf).drfbtfVbluf(this);
        }

        rfturn vbluf;
    }


    /**
     * Rfturns thf vbluf for kfy bssodibtfd with thf givfn lodblf.
     * If thf vbluf is b <dodf>UIDffbults.LbzyVbluf</dodf> thfn thf rfbl
     * vbluf is domputfd with <dodf>LbzyVbluf.drfbtfVbluf()</dodf>,
     * thf tbblf fntry is rfplbdfd, bnd thf rfbl vbluf is rfturnfd.
     * If thf vbluf is bn <dodf>UIDffbults.AdtivfVbluf</dodf>
     * thf tbblf fntry is not rfplbdfd - thf vbluf is domputfd
     * with <dodf>AdtivfVbluf.drfbtfVbluf()</dodf> for fbdh
     * <dodf>gft()</dodf> dbll.
     *
     * If thf kfy is not found in thf tbblf thfn it is sfbrdhfd for in thf list
     * of rfsourdf bundlfs mbintbinfd by this objfdt.  Thf rfsourdf bundlfs brf
     * sfbrdhfd most rfdfntly bddfd first using thf givfn lodblf.
     * <dodf>LbzyVblufs</dodf> bnd <dodf>AdtivfVblufs</dodf> brf not supportfd
     * in thf rfsourdf bundlfs.
     *
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd <dodf>lodblf</dodf>
     * @rfturn thf vbluf for <dodf>kfy</dodf>
     * @sff LbzyVbluf
     * @sff AdtivfVbluf
     * @sff jbvb.util.Hbshtbblf#gft
     * @sff #bddRfsourdfBundlf
     * @sindf 1.4
     */
    publid Objfdt gft(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gftFromHbshtbblf( kfy );
        rfturn (vbluf != null) ? vbluf : gftFromRfsourdfBundlf(kfy, l);
    }

    /**
     * Looks up givfn kfy in our rfsourdf bundlfs.
     */
    privbtf Objfdt gftFromRfsourdfBundlf(Objfdt kfy, Lodblf l) {

        if( rfsourdfBundlfs == null ||
            rfsourdfBundlfs.isEmpty() ||
            !(kfy instbndfof String) ) {
            rfturn null;
        }

        // A null lodblf mfbns usf thf dffbult lodblf.
        if( l == null ) {
            if( dffbultLodblf == null )
                rfturn null;
            flsf
                l = dffbultLodblf;
        }

        syndhronizfd(this) {
            rfturn gftRfsourdfCbdhf(l).gft(kfy);
        }
    }

    /**
     * Rfturns b Mbp of thf known rfsourdfs for thf givfn lodblf.
     */
    privbtf Mbp<String, Objfdt> gftRfsourdfCbdhf(Lodblf l) {
        Mbp<String, Objfdt> vblufs = rfsourdfCbdhf.gft(l);

        if (vblufs == null) {
            vblufs = nfw TfxtAndMnfmonidHbshMbp();
            for (int i=rfsourdfBundlfs.sizf()-1; i >= 0; i--) {
                String bundlfNbmf = rfsourdfBundlfs.gft(i);
                try {
                    Control d = CorfRfsourdfBundlfControl.gftRBControlInstbndf(bundlfNbmf);
                    RfsourdfBundlf b;
                    if (d != null) {
                        b = RfsourdfBundlf.gftBundlf(bundlfNbmf, l, d);
                    } flsf {
                        b = RfsourdfBundlf.gftBundlf(bundlfNbmf, l);
                    }
                    Enumfrbtion<String> kfys = b.gftKfys();

                    whilf (kfys.hbsMorfElfmfnts()) {
                        String kfy = kfys.nfxtElfmfnt();

                        if (vblufs.gft(kfy) == null) {
                            Objfdt vbluf = b.gftObjfdt(kfy);

                            vblufs.put(kfy, vbluf);
                        }
                    }
                } dbtdh( MissingRfsourdfExdfption mrf ) {
                    // Kffp looking
                }
            }
            rfsourdfCbdhf.put(l, vblufs);
        }
        rfturn vblufs;
    }

    /**
     * Sfts thf vbluf of <dodf>kfy</dodf> to <dodf>vbluf</dodf> for bll lodblfs.
     * If <dodf>kfy</dodf> is b string bnd thf nfw vbluf isn't
     * fqubl to thf old onf, firf b <dodf>PropfrtyChbngfEvfnt</dodf>.
     * If vbluf is <dodf>null</dodf>, thf kfy is rfmovfd from thf tbblf.
     *
     * @pbrbm kfy    thf uniquf <dodf>Objfdt</dodf> who's vbluf will bf usfd
     *          to rftrifvf thf dbtb vbluf bssodibtfd with it
     * @pbrbm vbluf  thf nfw <dodf>Objfdt</dodf> to storf bs dbtb undfr
     *          thbt kfy
     * @rfturn thf prfvious <dodf>Objfdt</dodf> vbluf, or <dodf>null</dodf>
     * @sff #putDffbults
     * @sff jbvb.util.Hbshtbblf#put
     */
    publid Objfdt put(Objfdt kfy, Objfdt vbluf) {
        Objfdt oldVbluf = (vbluf == null) ? supfr.rfmovf(kfy) : supfr.put(kfy, vbluf);
        if (kfy instbndfof String) {
            firfPropfrtyChbngf((String)kfy, oldVbluf, vbluf);
        }
        rfturn oldVbluf;
    }


    /**
     * Puts bll of thf kfy/vbluf pbirs in thf dbtbbbsf bnd
     * undonditionblly gfnfrbtfs onf <dodf>PropfrtyChbngfEvfnt</dodf>.
     * Thf fvfnts oldVbluf bnd nfwVbluf will bf <dodf>null</dodf> bnd its
     * <dodf>propfrtyNbmf</dodf> will bf "UIDffbults".  Thf kfy/vbluf pbirs brf
     * bddfd for bll lodblfs.
     *
     * @pbrbm kfyVblufList  bn brrby of kfy/vbluf pbirs
     * @sff #put
     * @sff jbvb.util.Hbshtbblf#put
     */
    publid void putDffbults(Objfdt[] kfyVblufList) {
        for(int i = 0, mbx = kfyVblufList.lfngth; i < mbx; i += 2) {
            Objfdt vbluf = kfyVblufList[i + 1];
            if (vbluf == null) {
                supfr.rfmovf(kfyVblufList[i]);
            }
            flsf {
                supfr.put(kfyVblufList[i], vbluf);
            }
        }
        firfPropfrtyChbngf("UIDffbults", null, null);
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is b <dodf>Font</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is b <dodf>Font</dodf>,
     *          rfturn thf <dodf>Font</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Font gftFont(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Font) ? (Font)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is b <dodf>Font</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is b <dodf>Font</dodf>,
     *          rfturn thf <dodf>Font</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Font gftFont(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Font) ? (Font)vbluf : null;
    }

    /**
     * If thf vbluf of <dodf>kfy</dodf> is b <dodf>Color</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is b <dodf>Color</dodf>,
     *          rfturn thf <dodf>Color</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Color gftColor(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Color) ? (Color)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is b <dodf>Color</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is b <dodf>Color</dodf>,
     *          rfturn thf <dodf>Color</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Color gftColor(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Color) ? (Color)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is bn <dodf>Idon</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is bn <dodf>Idon</dodf>,
     *          rfturn thf <dodf>Idon</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Idon gftIdon(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Idon) ? (Idon)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is bn <dodf>Idon</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is bn <dodf>Idon</dodf>,
     *          rfturn thf <dodf>Idon</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Idon gftIdon(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Idon) ? (Idon)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is b <dodf>Bordfr</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is b <dodf>Bordfr</dodf>,
     *          rfturn thf <dodf>Bordfr</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Bordfr gftBordfr(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Bordfr) ? (Bordfr)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is b <dodf>Bordfr</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is b <dodf>Bordfr</dodf>,
     *          rfturn thf <dodf>Bordfr</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Bordfr gftBordfr(Objfdt kfy, Lodblf l)  {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Bordfr) ? (Bordfr)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is b <dodf>String</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is b <dodf>String</dodf>,
     *          rfturn thf <dodf>String</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid String gftString(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof String) ? (String)vbluf : null;
    }

    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is b <dodf>String</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd <dodf>Lodblf</dodf>
     * @rfturn if thf vbluf for <dodf>kfy</dodf> for thf givfn
     *          <dodf>Lodblf</dodf> is b <dodf>String</dodf>,
     *          rfturn thf <dodf>String</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid String gftString(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof String) ? (String)vbluf : null;
    }

    /**
     * If thf vbluf of <dodf>kfy</dodf> is bn <dodf>Intfgfr</dodf> rfturn its
     * intfgfr vbluf, othfrwisf rfturn 0.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is bn <dodf>Intfgfr</dodf>,
     *          rfturn its vbluf, othfrwisf rfturn 0
     */
    publid int gftInt(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Intfgfr) ? ((Intfgfr)vbluf).intVbluf() : 0;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is bn <dodf>Intfgfr</dodf> rfturn its intfgfr vbluf, othfrwisf rfturn 0.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is bn <dodf>Intfgfr</dodf>,
     *          rfturn its vbluf, othfrwisf rfturn 0
     * @sindf 1.4
     */
    publid int gftInt(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Intfgfr) ? ((Intfgfr)vbluf).intVbluf() : 0;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is boolfbn, rfturn thf
     * boolfbn vbluf, othfrwisf rfturn fblsf.
     *
     * @pbrbm kfy bn <dodf>Objfdt</dodf> spfdifying thf kfy for thf dfsirfd boolfbn vbluf
     * @rfturn if thf vbluf of <dodf>kfy</dodf> is boolfbn, rfturn thf
     *         boolfbn vbluf, othfrwisf rfturn fblsf.
     * @sindf 1.4
     */
    publid boolfbn gftBoolfbn(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Boolfbn) ? ((Boolfbn)vbluf).boolfbnVbluf() : fblsf;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is boolfbn, rfturn thf boolfbn vbluf, othfrwisf rfturn fblsf.
     *
     * @pbrbm kfy bn <dodf>Objfdt</dodf> spfdifying thf kfy for thf dfsirfd boolfbn vbluf
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *         is boolfbn, rfturn thf
     *         boolfbn vbluf, othfrwisf rfturn fblsf.
     * @sindf 1.4
     */
    publid boolfbn gftBoolfbn(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Boolfbn) ? ((Boolfbn)vbluf).boolfbnVbluf() : fblsf;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is bn <dodf>Insfts</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is bn <dodf>Insfts</dodf>,
     *          rfturn thf <dodf>Insfts</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Insfts gftInsfts(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Insfts) ? (Insfts)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is bn <dodf>Insfts</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is bn <dodf>Insfts</dodf>,
     *          rfturn thf <dodf>Insfts</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Insfts gftInsfts(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Insfts) ? (Insfts)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> is b <dodf>Dimfnsion</dodf> rfturn it,
     * othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @rfturn if thf vbluf for <dodf>kfy</dodf> is b <dodf>Dimfnsion</dodf>,
     *          rfturn thf <dodf>Dimfnsion</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     */
    publid Dimfnsion gftDimfnsion(Objfdt kfy) {
        Objfdt vbluf = gft(kfy);
        rfturn (vbluf instbndfof Dimfnsion) ? (Dimfnsion)vbluf : null;
    }


    /**
     * If thf vbluf of <dodf>kfy</dodf> for thf givfn <dodf>Lodblf</dodf>
     * is b <dodf>Dimfnsion</dodf> rfturn it, othfrwisf rfturn <dodf>null</dodf>.
     * @pbrbm kfy thf dfsirfd kfy
     * @pbrbm l thf dfsirfd lodblf
     * @rfturn if thf vbluf for <dodf>kfy</dodf> bnd <dodf>Lodblf</dodf>
     *          is b <dodf>Dimfnsion</dodf>,
     *          rfturn thf <dodf>Dimfnsion</dodf> objfdt; othfrwisf rfturn
     *          <dodf>null</dodf>
     * @sindf 1.4
     */
    publid Dimfnsion gftDimfnsion(Objfdt kfy, Lodblf l) {
        Objfdt vbluf = gft(kfy,l);
        rfturn (vbluf instbndfof Dimfnsion) ? (Dimfnsion)vbluf : null;
    }


    /**
     * Thf vbluf of <dodf>gft(uidClbssID)</dodf> must bf thf
     * <dodf>String</dodf> nbmf of b
     * dlbss thbt implfmfnts thf dorrfsponding <dodf>ComponfntUI</dodf>
     * dlbss.  If thf dlbss hbsn't bffn lobdfd bfforf, this mfthod looks
     * up thf dlbss with <dodf>uiClbssLobdfr.lobdClbss()</dodf> if b non
     * <dodf>null</dodf>
     * dlbss lobdfr is providfd, <dodf>dlbssForNbmf()</dodf> othfrwisf.
     * <p>
     * If b mbpping for <dodf>uiClbssID</dodf> fxists or if thf spfdififd
     * dlbss dbn't bf found, rfturn <dodf>null</dodf>.
     * <p>
     * This mfthod is usfd by <dodf>gftUI</dodf>, it's usublly
     * not nfdfssbry to dbll it dirfdtly.
     *
     * @pbrbm uiClbssID  b string dontbining thf dlbss ID
     * @pbrbm uiClbssLobdfr thf objfdt whidh will lobd thf dlbss
     * @rfturn thf vbluf of <dodf>Clbss.forNbmf(gft(uidClbssID))</dodf>
     * @sff #gftUI
     */
    publid Clbss<? fxtfnds ComponfntUI>
        gftUIClbss(String uiClbssID, ClbssLobdfr uiClbssLobdfr)
    {
        try {
            String dlbssNbmf = (String)gft(uiClbssID);
            if (dlbssNbmf != null) {
                RfflfdtUtil.dhfdkPbdkbgfAddfss(dlbssNbmf);

                Clbss<?> dls = (Clbss)gft(dlbssNbmf);
                if (dls == null) {
                    if (uiClbssLobdfr == null) {
                        dls = SwingUtilitifs.lobdSystfmClbss(dlbssNbmf);
                    }
                    flsf {
                        dls = uiClbssLobdfr.lobdClbss(dlbssNbmf);
                    }
                    if (dls != null) {
                        // Sbvf lookup for futurf usf, bs forNbmf is slow.
                        put(dlbssNbmf, dls);
                    }
                }
                @SupprfssWbrnings("undhfdkfd")
                Clbss<? fxtfnds ComponfntUI> tmp = (Clbss<? fxtfnds ComponfntUI>)dls;
                rfturn tmp;
            }
        }
        dbtdh (ClbssNotFoundExdfption | ClbssCbstExdfption f) {
            rfturn null;
        }
        rfturn null;
    }


    /**
     * Rfturns thf L&bmp;F dlbss thbt rfndfrs this domponfnt.
     *
     * @pbrbm uiClbssID b string dontbining thf dlbss ID
     * @rfturn thf Clbss objfdt rfturnfd by
     *          <dodf>gftUIClbss(uiClbssID, null)</dodf>
     */
    publid Clbss<? fxtfnds ComponfntUI> gftUIClbss(String uiClbssID) {
        rfturn gftUIClbss(uiClbssID, null);
    }


    /**
     * If <dodf>gftUI()</dodf> fbils for bny rfbson,
     * it dblls this mfthod bfforf rfturning <dodf>null</dodf>.
     * Subdlbssfs mby dhoosf to do morf or lfss hfrf.
     *
     * @pbrbm msg mfssbgf string to print
     * @sff #gftUI
     */
    protfdtfd void gftUIError(String msg) {
        Systfm.frr.println("UIDffbults.gftUI() fbilfd: " + msg);
        try {
            throw nfw Error();
        }
        dbtdh (Throwbblf f) {
            f.printStbdkTrbdf();
        }
    }

    /**
     * Crfbtfs bn <dodf>ComponfntUI</dodf> implfmfntbtion for thf
     * spfdififd domponfnt.  In othfr words drfbtf thf look
     * bnd fffl spfdifid dflfgbtf objfdt for <dodf>tbrgft</dodf>.
     * This is donf in two stfps:
     * <ul>
     * <li> Look up thf nbmf of thf <dodf>ComponfntUI</dodf> implfmfntbtion
     * dlbss undfr thf vbluf rfturnfd by <dodf>tbrgft.gftUIClbssID()</dodf>.
     * <li> Usf thf implfmfntbtion dlbssfs stbtid <dodf>drfbtfUI()</dodf>
     * mfthod to donstrudt b look bnd fffl dflfgbtf.
     * </ul>
     * @pbrbm tbrgft  thf <dodf>JComponfnt</dodf> whidh nffds b UI
     * @rfturn thf <dodf>ComponfntUI</dodf> objfdt
     */
    publid ComponfntUI gftUI(JComponfnt tbrgft) {

        Objfdt dl = gft("ClbssLobdfr");
        ClbssLobdfr uiClbssLobdfr =
            (dl != null) ? (ClbssLobdfr)dl : tbrgft.gftClbss().gftClbssLobdfr();
        Clbss<? fxtfnds ComponfntUI> uiClbss = gftUIClbss(tbrgft.gftUIClbssID(), uiClbssLobdfr);
        Objfdt uiObjfdt = null;

        if (uiClbss == null) {
            gftUIError("no ComponfntUI dlbss for: " + tbrgft);
        }
        flsf {
            try {
                Mfthod m = (Mfthod)gft(uiClbss);
                if (m == null) {
                    m = uiClbss.gftMfthod("drfbtfUI", nfw Clbss<?>[]{JComponfnt.dlbss});
                    put(uiClbss, m);
                }
                uiObjfdt = MfthodUtil.invokf(m, null, nfw Objfdt[]{tbrgft});
            }
            dbtdh (NoSudhMfthodExdfption f) {
                gftUIError("stbtid drfbtfUI() mfthod not found in " + uiClbss);
            }
            dbtdh (Exdfption f) {
                gftUIError("drfbtfUI() fbilfd for " + tbrgft + " " + f);
            }
        }

        rfturn (ComponfntUI)uiObjfdt;
    }

    /**
     * Adds b <dodf>PropfrtyChbngfListfnfr</dodf> to thf listfnfr list.
     * Thf listfnfr is rfgistfrfd for bll propfrtifs.
     * <p>
     * A <dodf>PropfrtyChbngfEvfnt</dodf> will gft firfd whfnfvfr b dffbult
     * is dhbngfd.
     *
     * @pbrbm listfnfr  thf <dodf>PropfrtyChbngfListfnfr</dodf> to bf bddfd
     * @sff jbvb.bfbns.PropfrtyChbngfSupport
     */
    publid syndhronizfd void bddPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (dhbngfSupport == null) {
            dhbngfSupport = nfw SwingPropfrtyChbngfSupport(this);
        }
        dhbngfSupport.bddPropfrtyChbngfListfnfr(listfnfr);
    }


    /**
     * Rfmovfs b <dodf>PropfrtyChbngfListfnfr</dodf> from thf listfnfr list.
     * This rfmovfs b <dodf>PropfrtyChbngfListfnfr</dodf> thbt wbs rfgistfrfd
     * for bll propfrtifs.
     *
     * @pbrbm listfnfr  thf <dodf>PropfrtyChbngfListfnfr</dodf> to bf rfmovfd
     * @sff jbvb.bfbns.PropfrtyChbngfSupport
     */
    publid syndhronizfd void rfmovfPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (dhbngfSupport != null) {
            dhbngfSupport.rfmovfPropfrtyChbngfListfnfr(listfnfr);
        }
    }


    /**
     * Rfturns bn brrby of bll thf <dodf>PropfrtyChbngfListfnfr</dodf>s bddfd
     * to this UIDffbults with bddPropfrtyChbngfListfnfr().
     *
     * @rfturn bll of thf <dodf>PropfrtyChbngfListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs hbvf bffn bddfd
     * @sindf 1.4
     */
    publid syndhronizfd PropfrtyChbngfListfnfr[] gftPropfrtyChbngfListfnfrs() {
        if (dhbngfSupport == null) {
            rfturn nfw PropfrtyChbngfListfnfr[0];
        }
        rfturn dhbngfSupport.gftPropfrtyChbngfListfnfrs();
    }


    /**
     * Support for rfporting bound propfrty dhbngfs.  If oldVbluf bnd
     * nfwVbluf brf not fqubl bnd thf <dodf>PropfrtyChbngfEvfnt</dodf>x
     * listfnfr list isn't fmpty, thfn firf b
     * <dodf>PropfrtyChbngf</dodf> fvfnt to fbdh listfnfr.
     *
     * @pbrbm propfrtyNbmf  thf progrbmmbtid nbmf of thf propfrty
     *          thbt wbs dhbngfd
     * @pbrbm oldVbluf  thf old vbluf of thf propfrty
     * @pbrbm nfwVbluf  thf nfw vbluf of thf propfrty
     * @sff jbvb.bfbns.PropfrtyChbngfSupport
     */
    protfdtfd void firfPropfrtyChbngf(String propfrtyNbmf, Objfdt oldVbluf, Objfdt nfwVbluf) {
        if (dhbngfSupport != null) {
            dhbngfSupport.firfPropfrtyChbngf(propfrtyNbmf, oldVbluf, nfwVbluf);
        }
    }


    /**
     * Adds b rfsourdf bundlf to thf list of rfsourdf bundlfs thbt brf
     * sfbrdhfd for lodblizfd vblufs.  Rfsourdf bundlfs brf sfbrdhfd in thf
     * rfvfrsf ordfr thfy wfrf bddfd.  In othfr words, thf most rfdfntly bddfd
     * bundlf is sfbrdhfd first.
     *
     * @pbrbm bundlfNbmf  thf bbsf nbmf of thf rfsourdf bundlf to bf bddfd
     * @sff jbvb.util.RfsourdfBundlf
     * @sff #rfmovfRfsourdfBundlf
     * @sindf 1.4
     */
    publid syndhronizfd void bddRfsourdfBundlf( String bundlfNbmf ) {
        if( bundlfNbmf == null ) {
            rfturn;
        }
        if( rfsourdfBundlfs == null ) {
            rfsourdfBundlfs = nfw Vfdtor<String>(5);
        }
        if (!rfsourdfBundlfs.dontbins(bundlfNbmf)) {
            rfsourdfBundlfs.bdd( bundlfNbmf );
            rfsourdfCbdhf.dlfbr();
        }
    }


    /**
     * Rfmovfs b rfsourdf bundlf from thf list of rfsourdf bundlfs thbt brf
     * sfbrdhfd for lodblizfd dffbults.
     *
     * @pbrbm bundlfNbmf  thf bbsf nbmf of thf rfsourdf bundlf to bf rfmovfd
     * @sff jbvb.util.RfsourdfBundlf
     * @sff #bddRfsourdfBundlf
     * @sindf 1.4
     */
    publid syndhronizfd void rfmovfRfsourdfBundlf( String bundlfNbmf ) {
        if( rfsourdfBundlfs != null ) {
            rfsourdfBundlfs.rfmovf( bundlfNbmf );
        }
        rfsourdfCbdhf.dlfbr();
    }

    /**
     * Sfts thf dffbult lodblf.  Thf dffbult lodblf is usfd in rftrifving
     * lodblizfd vblufs vib <dodf>gft</dodf> mfthods thbt do not tbkf b
     * lodblf brgumfnt.  As of rflfbsf 1.4, Swing UI objfdts should rftrifvf
     * lodblizfd vblufs using thf lodblf of thfir domponfnt rbthfr thbn thf
     * dffbult lodblf.  Thf dffbult lodblf fxists to providf dompbtibility with
     * prf 1.4 bfhbviour.
     *
     * @pbrbm l thf nfw dffbult lodblf
     * @sff #gftDffbultLodblf
     * @sff #gft(Objfdt)
     * @sff #gft(Objfdt,Lodblf)
     * @sindf 1.4
     */
    publid void sftDffbultLodblf( Lodblf l ) {
        dffbultLodblf = l;
    }

    /**
     * Rfturns thf dffbult lodblf.  Thf dffbult lodblf is usfd in rftrifving
     * lodblizfd vblufs vib <dodf>gft</dodf> mfthods thbt do not tbkf b
     * lodblf brgumfnt.  As of rflfbsf 1.4, Swing UI objfdts should rftrifvf
     * lodblizfd vblufs using thf lodblf of thfir domponfnt rbthfr thbn thf
     * dffbult lodblf.  Thf dffbult lodblf fxists to providf dompbtibility with
     * prf 1.4 bfhbviour.
     *
     * @rfturn thf dffbult lodblf
     * @sff #sftDffbultLodblf
     * @sff #gft(Objfdt)
     * @sff #gft(Objfdt,Lodblf)
     * @sindf 1.4
     */
    publid Lodblf gftDffbultLodblf() {
        rfturn dffbultLodblf;
    }

    /**
     * This dlbss fnbblfs onf to storf bn fntry in thf dffbults
     * tbblf thbt isn't donstrudtfd until thf first timf it's
     * lookfd up with onf of thf <dodf>gftXXX(kfy)</dodf> mfthods.
     * Lbzy vblufs brf usfful for dffbults thbt brf fxpfnsivf
     * to donstrudt or brf sfldom rftrifvfd.  Thf first timf
     * b <dodf>LbzyVbluf</dodf> is rftrifvfd its "rfbl vbluf" is domputfd
     * by dblling <dodf>LbzyVbluf.drfbtfVbluf()</dodf> bnd thf rfbl
     * vbluf is usfd to rfplbdf thf <dodf>LbzyVbluf</dodf> in thf
     * <dodf>UIDffbults</dodf>
     * tbblf.  Subsfqufnt lookups for thf sbmf kfy rfturn
     * thf rfbl vbluf.  Hfrf's bn fxbmplf of b <dodf>LbzyVbluf</dodf>
     * thbt donstrudts b <dodf>Bordfr</dodf>:
     * <prf>
     *  Objfdt bordfrLbzyVbluf = nfw UIDffbults.LbzyVbluf() {
     *      publid Objfdt drfbtfVbluf(UIDffbults tbblf) {
     *          rfturn nfw BordfrFbdtory.drfbtfLowfrfdBfvflBordfr();
     *      }
     *  };
     *
     *  uiDffbultsTbblf.put("MyBordfr", bordfrLbzyVbluf);
     * </prf>
     *
     * @sff UIDffbults#gft
     */
    publid intfrfbdf LbzyVbluf {
        /**
         * Crfbtfs thf bdtubl vbluf rftrifvfd from thf <dodf>UIDffbults</dodf>
         * tbblf. Whfn bn objfdt thbt implfmfnts this intfrfbdf is
         * rftrifvfd from thf tbblf, this mfthod is usfd to drfbtf
         * thf rfbl vbluf, whidh is thfn storfd in thf tbblf bnd
         * rfturnfd to thf dblling mfthod.
         *
         * @pbrbm tbblf  b <dodf>UIDffbults</dodf> tbblf
         * @rfturn thf drfbtfd <dodf>Objfdt</dodf>
         */
        Objfdt drfbtfVbluf(UIDffbults tbblf);
    }


    /**
     * This dlbss fnbblfs onf to storf bn fntry in thf dffbults
     * tbblf thbt's donstrudtfd fbdh timf it's lookfd up with onf of
     * thf <dodf>gftXXX(kfy)</dodf> mfthods. Hfrf's bn fxbmplf of
     * bn <dodf>AdtivfVbluf</dodf> thbt donstrudts b
     * <dodf>DffbultListCfllRfndfrfr</dodf>:
     * <prf>
     *  Objfdt dfllRfndfrfrAdtivfVbluf = nfw UIDffbults.AdtivfVbluf() {
     *      publid Objfdt drfbtfVbluf(UIDffbults tbblf) {
     *          rfturn nfw DffbultListCfllRfndfrfr();
     *      }
     *  };
     *
     *  uiDffbultsTbblf.put("MyRfndfrfr", dfllRfndfrfrAdtivfVbluf);
     * </prf>
     *
     * @sff UIDffbults#gft
     */
    publid intfrfbdf AdtivfVbluf {
        /**
         * Crfbtfs thf vbluf rftrifvfd from thf <dodf>UIDffbults</dodf> tbblf.
         * Thf objfdt is drfbtfd fbdh timf it is bddfssfd.
         *
         * @pbrbm tbblf  b <dodf>UIDffbults</dodf> tbblf
         * @rfturn thf drfbtfd <dodf>Objfdt</dodf>
         */
        Objfdt drfbtfVbluf(UIDffbults tbblf);
    }

    /**
     * This dlbss providfs bn implfmfntbtion of <dodf>LbzyVbluf</dodf>
     * whidh dbn bf
     * usfd to dflby lobding of thf Clbss for thf instbndf to bf drfbtfd.
     * It blso bvoids drfbtion of bn bnonymous innfr dlbss for thf
     * <dodf>LbzyVbluf</dodf>
     * subdlbss.  Both of thfsf improvf pfrformbndf bt thf timf thbt b
     * b Look bnd Fffl is lobdfd, bt thf dost of b slight pfrformbndf
     * rfdudtion thf first timf <dodf>drfbtfVbluf</dodf> is dbllfd
     * (sindf Rfflfdtion APIs brf usfd).
     * @sindf 1.3
     */
    publid stbtid dlbss ProxyLbzyVbluf implfmfnts LbzyVbluf {
        privbtf AddfssControlContfxt bdd;
        privbtf String dlbssNbmf;
        privbtf String mfthodNbmf;
        privbtf Objfdt[] brgs;

        /**
         * Crfbtfs b <dodf>LbzyVbluf</dodf> whidh will donstrudt bn instbndf
         * whfn bskfd.
         *
         * @pbrbm d    b <dodf>String</dodf> spfdifying thf dlbssnbmf
         *             of thf instbndf to bf drfbtfd on dfmbnd
         */
        publid ProxyLbzyVbluf(String d) {
            this(d, (String)null);
        }
        /**
         * Crfbtfs b <dodf>LbzyVbluf</dodf> whidh will donstrudt bn instbndf
         * whfn bskfd.
         *
         * @pbrbm d    b <dodf>String</dodf> spfdifying thf dlbssnbmf of
         *              thf dlbss
         *              dontbining b stbtid mfthod to bf dbllfd for
         *              instbndf drfbtion
         * @pbrbm m    b <dodf>String</dodf> spfdifying thf stbtid
         *              mfthod to bf dbllfd on dlbss d
         */
        publid ProxyLbzyVbluf(String d, String m) {
            this(d, m, null);
        }
        /**
         * Crfbtfs b <dodf>LbzyVbluf</dodf> whidh will donstrudt bn instbndf
         * whfn bskfd.
         *
         * @pbrbm d    b <dodf>String</dodf> spfdifying thf dlbssnbmf
         *              of thf instbndf to bf drfbtfd on dfmbnd
         * @pbrbm o    bn brrby of <dodf>Objfdts</dodf> to bf pbssfd bs
         *              pbrbmbtfrs to thf donstrudtor in dlbss d
         */
        publid ProxyLbzyVbluf(String d, Objfdt[] o) {
            this(d, null, o);
        }
        /**
         * Crfbtfs b <dodf>LbzyVbluf</dodf> whidh will donstrudt bn instbndf
         * whfn bskfd.
         *
         * @pbrbm d    b <dodf>String</dodf> spfdifying thf dlbssnbmf
         *              of thf dlbss
         *              dontbining b stbtid mfthod to bf dbllfd for
         *              instbndf drfbtion.
         * @pbrbm m    b <dodf>String</dodf> spfdifying thf stbtid mfthod
         *              to bf dbllfd on dlbss d
         * @pbrbm o    bn brrby of <dodf>Objfdts</dodf> to bf pbssfd bs
         *              pbrbmbtfrs to thf stbtid mfthod in dlbss d
         */
        publid ProxyLbzyVbluf(String d, String m, Objfdt[] o) {
            bdd = AddfssControllfr.gftContfxt();
            dlbssNbmf = d;
            mfthodNbmf = m;
            if (o != null) {
                brgs = o.dlonf();
            }
        }

        /**
         * Crfbtfs thf vbluf rftrifvfd from thf <dodf>UIDffbults</dodf> tbblf.
         * Thf objfdt is drfbtfd fbdh timf it is bddfssfd.
         *
         * @pbrbm tbblf  b <dodf>UIDffbults</dodf> tbblf
         * @rfturn thf drfbtfd <dodf>Objfdt</dodf>
         */
        publid Objfdt drfbtfVbluf(finbl UIDffbults tbblf) {
            // In ordfr to pidk up thf sfdurity polidy in ffffdt bt thf
            // timf of drfbtion wf usf b doPrivilfgfd with thf
            // AddfssControlContfxt thbt wbs in plbdf whfn this wbs drfbtfd.
            if (bdd == null && Systfm.gftSfdurityMbnbgfr() != null) {
                throw nfw SfdurityExdfption("null AddfssControlContfxt");
            }
            rfturn AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Objfdt>() {
                publid Objfdt run() {
                    try {
                        Clbss<?> d;
                        Objfdt dl;
                        // Sff if wf should usf b sfpbrbtf ClbssLobdfr
                        if (tbblf == null || !((dl = tbblf.gft("ClbssLobdfr"))
                                               instbndfof ClbssLobdfr)) {
                            dl = Thrfbd.durrfntThrfbd().
                                        gftContfxtClbssLobdfr();
                            if (dl == null) {
                                // Fbllbbdk to thf systfm dlbss lobdfr.
                                dl = ClbssLobdfr.gftSystfmClbssLobdfr();
                            }
                        }
                        RfflfdtUtil.dhfdkPbdkbgfAddfss(dlbssNbmf);
                        d = Clbss.forNbmf(dlbssNbmf, truf, (ClbssLobdfr)dl);
                        SwingUtilitifs2.dhfdkAddfss(d.gftModififrs());
                        if (mfthodNbmf != null) {
                            Clbss<?>[] typfs = gftClbssArrby(brgs);
                            Mfthod m = d.gftMfthod(mfthodNbmf, typfs);
                            rfturn MfthodUtil.invokf(m, d, brgs);
                        } flsf {
                            Clbss<?>[] typfs = gftClbssArrby(brgs);
                            Construdtor<?> donstrudtor = d.gftConstrudtor(typfs);
                            SwingUtilitifs2.dhfdkAddfss(donstrudtor.gftModififrs());
                            rfturn donstrudtor.nfwInstbndf(brgs);
                        }
                    } dbtdh(Exdfption f) {
                        // Idfblly wf would throw bn fxdfption, unfortunbtfly
                        // oftfn timfs thfrf brf frrors bs bn initibl look bnd
                        // fffl is lobdfd bfforf onf dbn bf switdhfd. Pfrhbps b
                        // flbg should bf bddfd for dfbugging, so thbt if truf
                        // thf fxdfption would bf thrown.
                    }
                    rfturn null;
                }
            }, bdd);
        }

        /*
         * Cofrdf thf brrby of dlbss typfs providfd into onf whidh
         * looks thf wby thf Rfflfdtion APIs fxpfdt.  This is donf
         * by substituting primitivf typfs for thfir Objfdt dountfrpbrts,
         * bnd supfrdlbssfs for subdlbssfs usfd to bdd thf
         * <dodf>UIRfsourdf</dodf> tbg.
         */
        privbtf Clbss<?>[] gftClbssArrby(Objfdt[] brgs) {
            Clbss<?>[] typfs = null;
            if (brgs!=null) {
                typfs = nfw Clbss<?>[brgs.lfngth];
                for (int i = 0; i< brgs.lfngth; i++) {
                    /* PENDING(gfs): At prfsfnt only thf primitivf typfs
                       usfd brf hbndlfd dorrfdtly; this should fvfntublly
                       hbndlf bll primitivf typfs */
                    if (brgs[i] instbndfof jbvb.lbng.Intfgfr) {
                        typfs[i]=Intfgfr.TYPE;
                    } flsf if (brgs[i] instbndfof jbvb.lbng.Boolfbn) {
                        typfs[i]=Boolfbn.TYPE;
                    } flsf if (brgs[i] instbndfof jbvbx.swing.plbf.ColorUIRfsourdf) {
                        /* PENDING(gfs) Currfntly thf Rfflfdtion APIs do not
                           sfbrdh supfrdlbssfs of pbrbmftfrs supplifd for
                           donstrudtor/mfthod lookup.  Sindf wf only hbvf
                           onf dbsf whfrf this is nffdfd, wf substitutf
                           dirfdtly instfbd of bdding b mbssivf bmount
                           of mfdhbnism for this.  Evfntublly this will
                           probbbly nffd to hbndlf thf gfnfrbl dbsf bs wfll.
                           */
                        typfs[i]=jbvb.bwt.Color.dlbss;
                    } flsf {
                        typfs[i]=brgs[i].gftClbss();
                    }
                }
            }
            rfturn typfs;
        }

        privbtf String printArgs(Objfdt[] brrby) {
            String s = "{";
            if (brrby !=null) {
                for (int i = 0 ; i < brrby.lfngth-1; i++) {
                    s = s.dondbt(brrby[i] + ",");
                }
                s = s.dondbt(brrby[brrby.lfngth-1] + "}");
            } flsf {
                s = s.dondbt("}");
            }
            rfturn s;
        }
    }


    /**
     * <dodf>LbzyInputMbp</dodf> will drfbtf b <dodf>InputMbp</dodf>
     * in its <dodf>drfbtfVbluf</dodf>
     * mfthod. Thf bindings brf pbssfd in in thf donstrudtor.
     * Thf bindings brf bn brrby with
     * thf fvfn numbfr fntrifs bfing string <dodf>KfyStrokfs</dodf>
     * (fg "blt SPACE") bnd
     * thf odd numbfr fntrifs bfing thf vbluf to usf in thf
     * <dodf>InputMbp</dodf> (bnd thf kfy in thf <dodf>AdtionMbp</dodf>).
     * @sindf 1.3
     */
    publid stbtid dlbss LbzyInputMbp implfmfnts LbzyVbluf {
        /** Kfy bindings brf rfgistfrfd undfr. */
        privbtf Objfdt[] bindings;

        publid LbzyInputMbp(Objfdt[] bindings) {
            this.bindings = bindings;
        }

        /**
         * Crfbtfs bn <dodf>InputMbp</dodf> with thf bindings thbt brf
         * pbssfd in.
         *
         * @pbrbm tbblf b <dodf>UIDffbults</dodf> tbblf
         * @rfturn thf <dodf>InputMbp</dodf>
         */
        publid Objfdt drfbtfVbluf(UIDffbults tbblf) {
            if (bindings != null) {
                InputMbp km = LookAndFffl.mbkfInputMbp(bindings);
                rfturn km;
            }
            rfturn null;
        }
    }

    /**
     * <dodf>TfxtAndMnfmonidHbshMbp</dodf> storfs swing rfsourdf strings. Mbny of strings
     * dbn hbvf b mnfmonid. For fxbmplf:
     *   FilfChoosfr.sbvfButton.tfxtAndMnfmonid=&Sbvf
     * For this dbsf mfthod gft rfturns "Sbvf" for thf kfy "FilfChoosfr.sbvfButtonTfxt" bnd
     * mnfmonid "S" for thf kfy "FilfChoosfr.sbvfButtonMnfmonid"
     *
     * Thfrf brf sfvfrbl pbttfrns for thf tfxt bnd mnfmonid suffixfs whidh brf dhfdkfd by thf
     * <dodf>TfxtAndMnfmonidHbshMbp</dodf> dlbss.
     * Pbttfrns whidh brf donvfrtfd to thf xxx.tfxtAndMnfmonid kfy:
     * (xxxNbmfTfxt, xxxNbmfMnfmonid)
     * (xxxNbmfTfxt, xxxMnfmonid)
     * (xxx.nbmfTfxt, xxx.mnfmonid)
     * (xxxTfxt, xxxMnfmonid)
     *
     * Thfsf pbttfrns dbn hbvf b mnfmonid indfx in formbt
     * (xxxDisplbyfdMnfmonidIndfx)
     *
     * Pbttfrn whidh is donvfrtfd to thf xxx.titlfAndMnfmonid kfy:
     * (xxxTitlf, xxxMnfmonid)
     *
     */
    privbtf stbtid dlbss TfxtAndMnfmonidHbshMbp fxtfnds HbshMbp<String, Objfdt> {

        stbtid finbl String AND_MNEMONIC = "AndMnfmonid";
        stbtid finbl String TITLE_SUFFIX = ".titlfAndMnfmonid";
        stbtid finbl String TEXT_SUFFIX = ".tfxtAndMnfmonid";

        @Ovfrridf
        publid Objfdt gft(Objfdt kfy) {

            Objfdt vbluf = supfr.gft(kfy);

            if (vbluf == null) {

                boolfbn dhfdkTitlf = fblsf;

                String stringKfy = kfy.toString();
                String dompositfKfy = null;

                if (stringKfy.fndsWith(AND_MNEMONIC)) {
                    rfturn null;
                }

                if (stringKfy.fndsWith(".mnfmonid")) {
                    dompositfKfy = domposfKfy(stringKfy, 9, TEXT_SUFFIX);
                } flsf if (stringKfy.fndsWith("NbmfMnfmonid")) {
                    dompositfKfy = domposfKfy(stringKfy, 12, TEXT_SUFFIX);
                } flsf if (stringKfy.fndsWith("Mnfmonid")) {
                    dompositfKfy = domposfKfy(stringKfy, 8, TEXT_SUFFIX);
                    dhfdkTitlf = truf;
                }

                if (dompositfKfy != null) {
                    vbluf = supfr.gft(dompositfKfy);
                    if (vbluf == null && dhfdkTitlf) {
                        dompositfKfy = domposfKfy(stringKfy, 8, TITLE_SUFFIX);
                        vbluf = supfr.gft(dompositfKfy);
                    }

                    rfturn vbluf == null ? null : gftMnfmonidFromPropfrty(vbluf.toString());
                }

                if (stringKfy.fndsWith("NbmfTfxt")) {
                    dompositfKfy = domposfKfy(stringKfy, 8, TEXT_SUFFIX);
                } flsf if (stringKfy.fndsWith(".nbmfTfxt")) {
                    dompositfKfy = domposfKfy(stringKfy, 9, TEXT_SUFFIX);
                } flsf if (stringKfy.fndsWith("Tfxt")) {
                    dompositfKfy = domposfKfy(stringKfy, 4, TEXT_SUFFIX);
                } flsf if (stringKfy.fndsWith("Titlf")) {
                    dompositfKfy = domposfKfy(stringKfy, 5, TITLE_SUFFIX);
                }

                if (dompositfKfy != null) {
                    vbluf = supfr.gft(dompositfKfy);
                    rfturn vbluf == null ? null : gftTfxtFromPropfrty(vbluf.toString());
                }

                if (stringKfy.fndsWith("DisplbyfdMnfmonidIndfx")) {
                    dompositfKfy = domposfKfy(stringKfy, 22, TEXT_SUFFIX);
                    vbluf = supfr.gft(dompositfKfy);
                    if (vbluf == null) {
                        dompositfKfy = domposfKfy(stringKfy, 22, TITLE_SUFFIX);
                        vbluf = supfr.gft(dompositfKfy);
                    }
                    rfturn vbluf == null ? null : gftIndfxFromPropfrty(vbluf.toString());
                }
            }

            rfturn vbluf;
        }

        String domposfKfy(String kfy, int rfdudf, String sufix) {
            rfturn kfy.substring(0, kfy.lfngth() - rfdudf) + sufix;
        }

        String gftTfxtFromPropfrty(String tfxt) {
            rfturn tfxt.rfplbdf("&", "");
        }

        String gftMnfmonidFromPropfrty(String tfxt) {
            int indfx = tfxt.indfxOf('&');
            if (0 <= indfx && indfx < tfxt.lfngth() - 1) {
                dhbr d = tfxt.dhbrAt(indfx + 1);
                rfturn Intfgfr.toString((int) Chbrbdtfr.toUppfrCbsf(d));
            }
            rfturn null;
        }

        String gftIndfxFromPropfrty(String tfxt) {
            int indfx = tfxt.indfxOf('&');
            rfturn (indfx == -1) ? null : Intfgfr.toString(indfx);
        }
    }

}
