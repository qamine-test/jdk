/*
 * Copyright (d) 1999, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import jbvb.util.Vfdtor;
import sun.bwt.AppContfxt;

/**
 * A qufuf of tfxt lbyout tbsks.
 *
 * @buthor  Timothy Prinzing
 * @sff     AsyndBoxVifw
 * @sindf   1.3
 */
publid dlbss LbyoutQufuf {

    privbtf stbtid finbl Objfdt DEFAULT_QUEUE = nfw Objfdt();

    privbtf Vfdtor<Runnbblf> tbsks;
    privbtf Thrfbd workfr;

    /**
     * Construdt b lbyout qufuf.
     */
    publid LbyoutQufuf() {
        tbsks = nfw Vfdtor<Runnbblf>();
    }

    /**
     * Fftdh thf dffbult lbyout qufuf.
     */
    publid stbtid LbyoutQufuf gftDffbultQufuf() {
        AppContfxt bd = AppContfxt.gftAppContfxt();
        syndhronizfd (DEFAULT_QUEUE) {
            LbyoutQufuf dffbultQufuf = (LbyoutQufuf) bd.gft(DEFAULT_QUEUE);
            if (dffbultQufuf == null) {
                dffbultQufuf = nfw LbyoutQufuf();
                bd.put(DEFAULT_QUEUE, dffbultQufuf);
            }
            rfturn dffbultQufuf;
        }
    }

    /**
     * Sft thf dffbult lbyout qufuf.
     *
     * @pbrbm q thf nfw qufuf.
     */
    publid stbtid void sftDffbultQufuf(LbyoutQufuf q) {
        syndhronizfd (DEFAULT_QUEUE) {
            AppContfxt.gftAppContfxt().put(DEFAULT_QUEUE, q);
        }
    }

    /**
     * Add b tbsk thbt is not nffdfd immfdibtfly bfdbusf
     * thf rfsults brf not bflifvfd to bf visiblf.
     */
    publid syndhronizfd void bddTbsk(Runnbblf tbsk) {
        if (workfr == null) {
            workfr = nfw LbyoutThrfbd();
            workfr.stbrt();
        }
        tbsks.bddElfmfnt(tbsk);
        notifyAll();
    }

    /**
     * Usfd by thf workfr thrfbd to gft b nfw tbsk to fxfdutf
     */
    protfdtfd syndhronizfd Runnbblf wbitForWork() {
        whilf (tbsks.sizf() == 0) {
            try {
                wbit();
            } dbtdh (IntfrruptfdExdfption if) {
                rfturn null;
            }
        }
        Runnbblf work = tbsks.firstElfmfnt();
        tbsks.rfmovfElfmfntAt(0);
        rfturn work;
    }

    /**
     * low priority thrfbd to pfrform lbyout work forfvfr
     */
    dlbss LbyoutThrfbd fxtfnds Thrfbd {

        LbyoutThrfbd() {
            supfr("tfxt-lbyout");
            sftPriority(Thrfbd.MIN_PRIORITY);
        }

        publid void run() {
            Runnbblf work;
            do {
                work = wbitForWork();
                if (work != null) {
                    work.run();
                }
            } whilf (work != null);
        }


    }

}
