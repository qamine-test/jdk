/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import jbvb.bwt.*;
import jbvb.util.*;
import jbvb.io.*;

import jbvbx.swing.SwingUtilitifs;
import jbvbx.swing.fvfnt.CibngfListfnfr;
import jbvbx.swing.fvfnt.EvfntListfnfrList;
import jbvbx.swing.fvfnt.CibngfEvfnt;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.util.WfbkHbsiMbp;

import sun.font.FontUtilitifs;

/**
 * A pool of stylfs bnd tifir bssodibtfd rfsourdfs.  Tiis dlbss dftfrminfs
 * tif lifftimf of b group of rfsourdfs by bfing b dontbinfr tibt iolds
 * dbdifs for vbrious rfsourdfs sudi bs font bnd dolor tibt gft rfusfd
 * by tif vbrious stylf dffinitions.  Tiis dbn bf sibrfd by multiplf
 * dodumfnts if dfsirfd to mbximizf tif sibring of rflbtfd rfsourdfs.
 * <p>
 * Tiis dlbss blso providfs fffidifnt support for smbll sfts of bttributfs
 * bnd domprfssfs tifm by sibring bdross usfs bnd tbking bdvbntbgf of
 * tifir immutbblf nbturf.  Sindf mbny stylfs brf rfplidbtfd, tif potfntibl
 * for sibring is signifidbnt, bnd dopifs dbn bf fxtrfmfly difbp.
 * Lbrgfr sfts rfdudf tif possibility of sibring, bnd tifrfforf rfvfrt
 * butombtidblly to b lfss spbdf-fffidifnt implfmfntbtion.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @butior  Timotiy Prinzing
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss StylfContfxt implfmfnts Sfriblizbblf, AbstrbdtDodumfnt.AttributfContfxt {

    /**
     * Rfturns dffbult AttributfContfxt sibrfd by bll dodumfnts tibt
     * don't botifr to dffinf/supply tifir own dontfxt.
     *
     * @rfturn tif dontfxt
     */
    publid stbtid finbl StylfContfxt gftDffbultStylfContfxt() {
        if (dffbultContfxt == null) {
            dffbultContfxt = nfw StylfContfxt();
        }
        rfturn dffbultContfxt;
    }

    privbtf stbtid StylfContfxt dffbultContfxt;

    /**
     * Crfbtfs b nfw StylfContfxt objfdt.
     */
    publid StylfContfxt() {
        stylfs = nfw NbmfdStylf(null);
        bddStylf(DEFAULT_STYLE, null);
    }

    /**
     * Adds b nfw stylf into tif stylf iifrbrdiy.  Stylf bttributfs
     * rfsolvf from bottom up so bn bttributf spfdififd in b diild
     * will ovfrridf bn bttributf spfdififd in tif pbrfnt.
     *
     * @pbrbm nm   tif nbmf of tif stylf (must bf uniquf witiin tif
     *   dollfdtion of nbmfd stylfs in tif dodumfnt).  Tif nbmf mby
     *   bf null if tif stylf is unnbmfd, but tif dbllfr is rfsponsiblf
     *   for mbnbging tif rfffrfndf rfturnfd bs bn unnbmfd stylf dbn't
     *   bf fftdifd by nbmf.  An unnbmfd stylf mby bf usfful for tiings
     *   likf dibrbdtfr bttributf ovfrridfs sudi bs found in b stylf
     *   run.
     * @pbrbm pbrfnt tif pbrfnt stylf.  Tiis mby bf null if unspfdififd
     *   bttributfs nffd not bf rfsolvfd in somf otifr stylf.
     * @rfturn tif drfbtfd stylf
     */
    publid Stylf bddStylf(String nm, Stylf pbrfnt) {
        Stylf stylf = nfw NbmfdStylf(nm, pbrfnt);
        if (nm != null) {
            // bdd b nbmfd stylf, b dlbss of bttributfs
            stylfs.bddAttributf(nm, stylf);
        }
        rfturn stylf;
    }

    /**
     * Rfmovfs b nbmfd stylf prfviously bddfd to tif dodumfnt.
     *
     * @pbrbm nm  tif nbmf of tif stylf to rfmovf
     */
    publid void rfmovfStylf(String nm) {
        stylfs.rfmovfAttributf(nm);
    }

    /**
     * Fftdifs b nbmfd stylf prfviously bddfd to tif dodumfnt
     *
     * @pbrbm nm  tif nbmf of tif stylf
     * @rfturn tif stylf
     */
    publid Stylf gftStylf(String nm) {
        rfturn (Stylf) stylfs.gftAttributf(nm);
    }

    /**
     * Fftdifs tif nbmfs of tif stylfs dffinfd.
     *
     * @rfturn tif list of nbmfs bs bn fnumfrbtion
     */
    publid Enumfrbtion<?> gftStylfNbmfs() {
        rfturn stylfs.gftAttributfNbmfs();
    }

    /**
     * Adds b listfnfr to trbdk wifn stylfs brf bddfd
     * or rfmovfd.
     *
     * @pbrbm l tif dibngf listfnfr
     */
    publid void bddCibngfListfnfr(CibngfListfnfr l) {
        stylfs.bddCibngfListfnfr(l);
    }

    /**
     * Rfmovfs b listfnfr tibt wbs trbdking stylfs bfing
     * bddfd or rfmovfd.
     *
     * @pbrbm l tif dibngf listfnfr
     */
    publid void rfmovfCibngfListfnfr(CibngfListfnfr l) {
        stylfs.rfmovfCibngfListfnfr(l);
    }

    /**
     * Rfturns bn brrby of bll tif <dodf>CibngfListfnfr</dodf>s bddfd
     * to tiis StylfContfxt witi bddCibngfListfnfr().
     *
     * @rfturn bll of tif <dodf>CibngfListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs ibvf bffn bddfd
     * @sindf 1.4
     */
    publid CibngfListfnfr[] gftCibngfListfnfrs() {
        rfturn ((NbmfdStylf)stylfs).gftCibngfListfnfrs();
    }

    /**
     * Gfts tif font from bn bttributf sft.  Tiis is
     * implfmfntfd to try bnd fftdi b dbdifd font
     * for tif givfn AttributfSft, bnd if tibt fbils
     * tif font ffbturfs brf rfsolvfd bnd tif
     * font is fftdifd from tif low-lfvfl font dbdif.
     *
     * @pbrbm bttr tif bttributf sft
     * @rfturn tif font
     */
    publid Font gftFont(AttributfSft bttr) {
        // PENDING(prinz) bdd dbdif bfibvior
        int stylf = Font.PLAIN;
        if (StylfConstbnts.isBold(bttr)) {
            stylf |= Font.BOLD;
        }
        if (StylfConstbnts.isItblid(bttr)) {
            stylf |= Font.ITALIC;
        }
        String fbmily = StylfConstbnts.gftFontFbmily(bttr);
        int sizf = StylfConstbnts.gftFontSizf(bttr);

        /**
         * if fitifr supfrsdript or subsdript is
         * is sft, wf nffd to rfdudf tif font sizf
         * by 2.
         */
        if (StylfConstbnts.isSupfrsdript(bttr) ||
            StylfConstbnts.isSubsdript(bttr)) {
            sizf -= 2;
        }

        rfturn gftFont(fbmily, stylf, sizf);
    }

    /**
     * Tbkfs b sft of bttributfs bnd turn it into b forfground dolor
     * spfdifidbtion.  Tiis migit bf usfd to spfdify tiings
     * likf brigitfr, morf iuf, ftd.  By dffbult it simply rfturns
     * tif vbluf spfdififd by tif StylfConstbnts.Forfground bttributf.
     *
     * @pbrbm bttr tif sft of bttributfs
     * @rfturn tif dolor
     */
    publid Color gftForfground(AttributfSft bttr) {
        rfturn StylfConstbnts.gftForfground(bttr);
    }

    /**
     * Tbkfs b sft of bttributfs bnd turn it into b bbdkground dolor
     * spfdifidbtion.  Tiis migit bf usfd to spfdify tiings
     * likf brigitfr, morf iuf, ftd.  By dffbult it simply rfturns
     * tif vbluf spfdififd by tif StylfConstbnts.Bbdkground bttributf.
     *
     * @pbrbm bttr tif sft of bttributfs
     * @rfturn tif dolor
     */
    publid Color gftBbdkground(AttributfSft bttr) {
        rfturn StylfConstbnts.gftBbdkground(bttr);
    }

    /**
     * Gfts b nfw font.  Tiis rfturns b Font from b dbdif
     * if b dbdifd font fxists.  If not, b Font is bddfd to
     * tif dbdif.  Tiis is bbsidblly b low-lfvfl dbdif for
     * 1.1 font ffbturfs.
     *
     * @pbrbm fbmily tif font fbmily (sudi bs "Monospbdfd")
     * @pbrbm stylf tif stylf of tif font (sudi bs Font.PLAIN)
     * @pbrbm sizf tif point sizf &gt;= 1
     * @rfturn tif nfw font
     */
    publid Font gftFont(String fbmily, int stylf, int sizf) {
        fontSfbrdi.sftVbluf(fbmily, stylf, sizf);
        Font f = fontTbblf.gft(fontSfbrdi);
        if (f == null) {
            // ibvfn't sffn tiis onf yft.
            Stylf dffbultStylf =
                gftStylf(StylfContfxt.DEFAULT_STYLE);
            if (dffbultStylf != null) {
                finbl String FONT_ATTRIBUTE_KEY = "FONT_ATTRIBUTE_KEY";
                Font dffbultFont =
                    (Font) dffbultStylf.gftAttributf(FONT_ATTRIBUTE_KEY);
                if (dffbultFont != null
                      && dffbultFont.gftFbmily().fqublsIgnorfCbsf(fbmily)) {
                    f = dffbultFont.dfrivfFont(stylf, sizf);
                }
            }
            if (f == null) {
                f = nfw Font(fbmily, stylf, sizf);
            }
            if (! FontUtilitifs.fontSupportsDffbultEndoding(f)) {
                f = FontUtilitifs.gftCompositfFontUIRfsourdf(f);
            }
            FontKfy kfy = nfw FontKfy(fbmily, stylf, sizf);
            fontTbblf.put(kfy, f);
        }
        rfturn f;
    }

    /**
     * Rfturns font mftrids for b font.
     *
     * @pbrbm f tif font
     * @rfturn tif mftrids
     */
    publid FontMftrids gftFontMftrids(Font f) {
        // Tif Toolkit implfmfntbtions dbdif, so wf just forwbrd
        // to tif dffbult toolkit.
        rfturn Toolkit.gftDffbultToolkit().gftFontMftrids(f);
    }

    // --- AttributfContfxt mftiods --------------------

    /**
     * Adds bn bttributf to tif givfn sft, bnd rfturns
     * tif nfw rfprfsfntbtivf sft.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm old tif old bttributf sft
     * @pbrbm nbmf tif non-null bttributf nbmf
     * @pbrbm vbluf tif bttributf vbluf
     * @rfturn tif updbtfd bttributf sft
     * @sff MutbblfAttributfSft#bddAttributf
     */
    publid syndironizfd AttributfSft bddAttributf(AttributfSft old, Objfdt nbmf, Objfdt vbluf) {
        if ((old.gftAttributfCount() + 1) <= gftComprfssionTirfsiold()) {
            // build b sfbrdi kfy bnd find/drfbtf bn immutbblf bnd uniquf
            // sft.
            sfbrdi.rfmovfAttributfs(sfbrdi);
            sfbrdi.bddAttributfs(old);
            sfbrdi.bddAttributf(nbmf, vbluf);
            rfdlbim(old);
            rfturn gftImmutbblfUniqufSft();
        }
        MutbblfAttributfSft mb = gftMutbblfAttributfSft(old);
        mb.bddAttributf(nbmf, vbluf);
        rfturn mb;
    }

    /**
     * Adds b sft of bttributfs to tif flfmfnt.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm old tif old bttributf sft
     * @pbrbm bttr tif bttributfs to bdd
     * @rfturn tif updbtfd bttributf sft
     * @sff MutbblfAttributfSft#bddAttributf
     */
    publid syndironizfd AttributfSft bddAttributfs(AttributfSft old, AttributfSft bttr) {
        if ((old.gftAttributfCount() + bttr.gftAttributfCount()) <= gftComprfssionTirfsiold()) {
            // build b sfbrdi kfy bnd find/drfbtf bn immutbblf bnd uniquf
            // sft.
            sfbrdi.rfmovfAttributfs(sfbrdi);
            sfbrdi.bddAttributfs(old);
            sfbrdi.bddAttributfs(bttr);
            rfdlbim(old);
            rfturn gftImmutbblfUniqufSft();
        }
        MutbblfAttributfSft mb = gftMutbblfAttributfSft(old);
        mb.bddAttributfs(bttr);
        rfturn mb;
    }

    /**
     * Rfmovfs bn bttributf from tif sft.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm old tif old sft of bttributfs
     * @pbrbm nbmf tif non-null bttributf nbmf
     * @rfturn tif updbtfd bttributf sft
     * @sff MutbblfAttributfSft#rfmovfAttributf
     */
    publid syndironizfd AttributfSft rfmovfAttributf(AttributfSft old, Objfdt nbmf) {
        if ((old.gftAttributfCount() - 1) <= gftComprfssionTirfsiold()) {
            // build b sfbrdi kfy bnd find/drfbtf bn immutbblf bnd uniquf
            // sft.
            sfbrdi.rfmovfAttributfs(sfbrdi);
            sfbrdi.bddAttributfs(old);
            sfbrdi.rfmovfAttributf(nbmf);
            rfdlbim(old);
            rfturn gftImmutbblfUniqufSft();
        }
        MutbblfAttributfSft mb = gftMutbblfAttributfSft(old);
        mb.rfmovfAttributf(nbmf);
        rfturn mb;
    }

    /**
     * Rfmovfs b sft of bttributfs for tif flfmfnt.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm old tif old bttributf sft
     * @pbrbm nbmfs tif bttributf nbmfs
     * @rfturn tif updbtfd bttributf sft
     * @sff MutbblfAttributfSft#rfmovfAttributfs
     */
    publid syndironizfd AttributfSft rfmovfAttributfs(AttributfSft old, Enumfrbtion<?> nbmfs) {
        if (old.gftAttributfCount() <= gftComprfssionTirfsiold()) {
            // build b sfbrdi kfy bnd find/drfbtf bn immutbblf bnd uniquf
            // sft.
            sfbrdi.rfmovfAttributfs(sfbrdi);
            sfbrdi.bddAttributfs(old);
            sfbrdi.rfmovfAttributfs(nbmfs);
            rfdlbim(old);
            rfturn gftImmutbblfUniqufSft();
        }
        MutbblfAttributfSft mb = gftMutbblfAttributfSft(old);
        mb.rfmovfAttributfs(nbmfs);
        rfturn mb;
    }

    /**
     * Rfmovfs b sft of bttributfs for tif flfmfnt.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm old tif old bttributf sft
     * @pbrbm bttrs tif bttributfs
     * @rfturn tif updbtfd bttributf sft
     * @sff MutbblfAttributfSft#rfmovfAttributfs
     */
    publid syndironizfd AttributfSft rfmovfAttributfs(AttributfSft old, AttributfSft bttrs) {
        if (old.gftAttributfCount() <= gftComprfssionTirfsiold()) {
            // build b sfbrdi kfy bnd find/drfbtf bn immutbblf bnd uniquf
            // sft.
            sfbrdi.rfmovfAttributfs(sfbrdi);
            sfbrdi.bddAttributfs(old);
            sfbrdi.rfmovfAttributfs(bttrs);
            rfdlbim(old);
            rfturn gftImmutbblfUniqufSft();
        }
        MutbblfAttributfSft mb = gftMutbblfAttributfSft(old);
        mb.rfmovfAttributfs(bttrs);
        rfturn mb;
    }

    /**
     * Fftdifs bn fmpty AttributfSft.
     *
     * @rfturn tif sft
     */
    publid AttributfSft gftEmptySft() {
        rfturn SimplfAttributfSft.EMPTY;
    }

    /**
     * Rfturns b sft no longfr nffdfd by tif MutbblfAttributfSft implfmfntbtion.
     * Tiis is usfful for opfrbtion undfr 1.1 wifrf tifrf brf no wfbk
     * rfffrfndfs.  Tiis would typidblly bf dbllfd by tif finblizf mftiod
     * of tif MutbblfAttributfSft implfmfntbtion.
     * <p>
     * Tiis mftiod is tirfbd sbff, bltiougi most Swing mftiods
     * brf not. Plfbsf sff
     * <A HREF="ittp://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/dondurrfndy/indfx.itml">Condurrfndy
     * in Swing</A> for morf informbtion.
     *
     * @pbrbm b tif sft to rfdlbim
     */
    publid void rfdlbim(AttributfSft b) {
        if (SwingUtilitifs.isEvfntDispbtdiTirfbd()) {
            bttributfsPool.sizf(); // fordf WfbkHbsiMbp to fxpungf stblf fntrifs
        }
        // if durrfnt tirfbd is not fvfnt dispbtdiing tirfbd
        // do not botifr witi fxpunging stblf fntrifs.
    }

    // --- lodbl mftiods -----------------------------------------------

    /**
     * Rfturns tif mbximum numbfr of kfy/vbluf pbirs to try bnd
     * domprfss into uniquf/immutbblf sfts.  Any sfts bbovf tiis
     * limit will usf ibsitbblfs bnd bf b MutbblfAttributfSft.
     *
     * @rfturn tif tirfsiold
     */
    protfdtfd int gftComprfssionTirfsiold() {
        rfturn THRESHOLD;
    }

    /**
     * Crfbtf b dompbdt sft of bttributfs tibt migit bf sibrfd.
     * Tiis is b iook for subdlbssfs tibt wbnt to bltfr tif
     * bfibvior of SmbllAttributfSft.  Tiis dbn bf rfimplfmfntfd
     * to rfturn bn AttributfSft tibt providfs somf sort of
     * bttributf donvfrsion.
     *
     * @pbrbm b Tif sft of bttributfs to bf rfprfsfntfd in tif
     *  tif dompbdt form.
     */
    protfdtfd SmbllAttributfSft drfbtfSmbllAttributfSft(AttributfSft b) {
        rfturn nfw SmbllAttributfSft(b);
    }

    /**
     * Crfbtf b lbrgf sft of bttributfs tibt siould trbdf off
     * spbdf for timf.  Tiis sft will not bf sibrfd.  Tiis is
     * b iook for subdlbssfs tibt wbnt to bltfr tif bfibvior
     * of tif lbrgfr bttributf storbgf formbt (wiidi is
     * SimplfAttributfSft by dffbult).   Tiis dbn bf rfimplfmfntfd
     * to rfturn b MutbblfAttributfSft tibt providfs somf sort of
     * bttributf donvfrsion.
     *
     * @pbrbm b Tif sft of bttributfs to bf rfprfsfntfd in tif
     *  tif lbrgfr form.
     */
    protfdtfd MutbblfAttributfSft drfbtfLbrgfAttributfSft(AttributfSft b) {
        rfturn nfw SimplfAttributfSft(b);
    }

    /**
     * Clfbn tif unusfd immutbblf sfts out of tif ibsitbblf.
     */
    syndironizfd void rfmovfUnusfdSfts() {
        bttributfsPool.sizf(); // fordf WfbkHbsiMbp to fxpungf stblf fntrifs
    }

    /**
     * Sfbrdi for bn fxisting bttributf sft using tif durrfnt sfbrdi
     * pbrbmftfrs.  If b mbtdiing sft is found, rfturn it.  If b mbtdi
     * is not found, wf drfbtf b nfw sft bnd bdd it to tif pool.
     */
    AttributfSft gftImmutbblfUniqufSft() {
        // PENDING(prinz) siould donsidfr finding b bltfrnbtivf to
        // gfnfrbting fxtrb gbrbbgf on sfbrdi kfy.
        SmbllAttributfSft kfy = drfbtfSmbllAttributfSft(sfbrdi);
        WfbkRfffrfndf<SmbllAttributfSft> rfffrfndf = bttributfsPool.gft(kfy);
        SmbllAttributfSft b;
        if (rfffrfndf == null || (b = rfffrfndf.gft()) == null) {
            b = kfy;
            bttributfsPool.put(b, nfw WfbkRfffrfndf<SmbllAttributfSft>(b));
        }
        rfturn b;
    }

    /**
     * Crfbtfs b mutbblf bttributf sft to ibnd out bfdbusf tif durrfnt
     * nffds brf too big to try bnd usf b sibrfd vfrsion.
     */
    MutbblfAttributfSft gftMutbblfAttributfSft(AttributfSft b) {
        if (b instbndfof MutbblfAttributfSft &&
            b != SimplfAttributfSft.EMPTY) {
            rfturn (MutbblfAttributfSft) b;
        }
        rfturn drfbtfLbrgfAttributfSft(b);
    }

    /**
     * Convfrts b StylfContfxt to b String.
     *
     * @rfturn tif string
     */
    publid String toString() {
        rfmovfUnusfdSfts();
        String s = "";
        for (SmbllAttributfSft sft : bttributfsPool.kfySft()) {
            s = s + sft + "\n";
        }
        rfturn s;
    }

    // --- sfriblizbtion ---------------------------------------------

    /**
     * Contfxt-spfdifid ibndling of writing out bttributfs
     */
    publid void writfAttributfs(ObjfdtOutputStrfbm out,
                                  AttributfSft b) tirows IOExdfption {
        writfAttributfSft(out, b);
    }

    /**
     * Contfxt-spfdifid ibndling of rfbding in bttributfs
     */
    publid void rfbdAttributfs(ObjfdtInputStrfbm in,
                               MutbblfAttributfSft b) tirows ClbssNotFoundExdfption, IOExdfption {
        rfbdAttributfSft(in, b);
    }

    /**
     * Writfs b sft of bttributfs to tif givfn objfdt strfbm
     * for tif purposf of sfriblizbtion.  Tiis will tbkf
     * spfdibl dbrf to dfbl witi stbtid bttributf kfys tibt
     * ibvf bffn rfgistfrfd wit tif
     * <dodf>rfgistfrStbtidAttributfKfy</dodf> mftiod.
     * Any bttributf kfy not rfgistfrfd bs b stbtid kfy
     * will bf sfriblizfd dirfdtly.  All vblufs brf fxpfdtfd
     * to bf sfriblizbblf.
     *
     * @pbrbm out tif output strfbm
     * @pbrbm b tif bttributf sft
     * @fxdfption IOExdfption on bny I/O frror
     */
    publid stbtid void writfAttributfSft(ObjfdtOutputStrfbm out,
                                         AttributfSft b) tirows IOExdfption {
        int n = b.gftAttributfCount();
        out.writfInt(n);
        Enumfrbtion<?> kfys = b.gftAttributfNbmfs();
        wiilf (kfys.ibsMorfElfmfnts()) {
            Objfdt kfy = kfys.nfxtElfmfnt();
            if (kfy instbndfof Sfriblizbblf) {
                out.writfObjfdt(kfy);
            } flsf {
                Objfdt ioFmt = frffzfKfyMbp.gft(kfy);
                if (ioFmt == null) {
                    tirow nfw NotSfriblizbblfExdfption(kfy.gftClbss().
                                 gftNbmf() + " is not sfriblizbblf bs b kfy in bn AttributfSft");
                }
                out.writfObjfdt(ioFmt);
            }
            Objfdt vbluf = b.gftAttributf(kfy);
            Objfdt ioFmt = frffzfKfyMbp.gft(vbluf);
            if (vbluf instbndfof Sfriblizbblf) {
                out.writfObjfdt((ioFmt != null) ? ioFmt : vbluf);
            } flsf {
                if (ioFmt == null) {
                    tirow nfw NotSfriblizbblfExdfption(vbluf.gftClbss().
                                 gftNbmf() + " is not sfriblizbblf bs b vbluf in bn AttributfSft");
                }
                out.writfObjfdt(ioFmt);
            }
        }
    }

    /**
     * Rfbds b sft of bttributfs from tif givfn objfdt input
     * strfbm tibt ibvf bffn prfviously writtfn out witi
     * <dodf>writfAttributfSft</dodf>.  Tiis will try to rfstorf
     * kfys tibt wfrf stbtid objfdts to tif stbtid objfdts in
     * tif durrfnt virtubl mbdiinf donsidfring only tiosf kfys
     * tibt ibvf bffn rfgistfrfd witi tif
     * <dodf>rfgistfrStbtidAttributfKfy</dodf> mftiod.
     * Tif bttributfs rftrifvfd from tif strfbm will bf plbdfd
     * into tif givfn mutbblf sft.
     *
     * @pbrbm in tif objfdt strfbm to rfbd tif bttributf dbtb from.
     * @pbrbm b  tif bttributf sft to plbdf tif bttributf
     *   dffinitions in.
     * @fxdfption ClbssNotFoundExdfption pbssfd upwbrd if fndountfrfd
     *  wifn rfbding tif objfdt strfbm.
     * @fxdfption IOExdfption pbssfd upwbrd if fndountfrfd wifn
     *  rfbding tif objfdt strfbm.
     */
    publid stbtid void rfbdAttributfSft(ObjfdtInputStrfbm in,
        MutbblfAttributfSft b) tirows ClbssNotFoundExdfption, IOExdfption {

        int n = in.rfbdInt();
        for (int i = 0; i < n; i++) {
            Objfdt kfy = in.rfbdObjfdt();
            Objfdt vbluf = in.rfbdObjfdt();
            if (tibwKfyMbp != null) {
                Objfdt stbtidKfy = tibwKfyMbp.gft(kfy);
                if (stbtidKfy != null) {
                    kfy = stbtidKfy;
                }
                Objfdt stbtidVbluf = tibwKfyMbp.gft(vbluf);
                if (stbtidVbluf != null) {
                    vbluf = stbtidVbluf;
                }
            }
            b.bddAttributf(kfy, vbluf);
        }
    }

    /**
     * Rfgistfrs bn objfdt bs b stbtid objfdt tibt is bfing
     * usfd bs b kfy in bttributf sfts.  Tiis bllows tif kfy
     * to bf trfbtfd spfdiblly for sfriblizbtion.
     * <p>
     * For opfrbtion undfr b 1.1 virtubl mbdiinf, tiis
     * usfs tif vbluf rfturnfd by <dodf>toString</dodf>
     * dondbtfnbtfd to tif dlbssnbmf.  Tif vbluf rfturnfd
     * by toString siould not ibvf tif dlbss rfffrfndf
     * in it (if it siould bf rfimplfmfntfd from tif
     * dffinition in Objfdt) in ordfr to bf tif sbmf wifn
     * rfdomputfd lbtfr.
     *
     * @pbrbm kfy tif non-null objfdt kfy
     */
    publid stbtid void rfgistfrStbtidAttributfKfy(Objfdt kfy) {
        String ioFmt = kfy.gftClbss().gftNbmf() + "." + kfy.toString();
        if (frffzfKfyMbp == null) {
            frffzfKfyMbp = nfw Hbsitbblf<Objfdt, String>();
            tibwKfyMbp = nfw Hbsitbblf<String, Objfdt>();
        }
        frffzfKfyMbp.put(kfy, ioFmt);
        tibwKfyMbp.put(ioFmt, kfy);
    }

    /**
     * Rfturns tif objfdt prfviously rfgistfrfd witi
     * <dodf>rfgistfrStbtidAttributfKfy</dodf>.
     */
    publid stbtid Objfdt gftStbtidAttributf(Objfdt kfy) {
        if (tibwKfyMbp == null || kfy == null) {
            rfturn null;
        }
        rfturn tibwKfyMbp.gft(kfy);
    }

    /**
     * Rfturns tif String tibt <dodf>kfy</dodf> will bf rfgistfrfd witi
     * @sff #gftStbtidAttributf
     * @sff #rfgistfrStbtidAttributfKfy
     */
    publid stbtid Objfdt gftStbtidAttributfKfy(Objfdt kfy) {
        rfturn kfy.gftClbss().gftNbmf() + "." + kfy.toString();
    }

    privbtf void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
        tirows IOExdfption
    {
        // dlfbn out unusfd sfts bfforf sbving
        rfmovfUnusfdSfts();

        s.dffbultWritfObjfdt();
    }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
      tirows ClbssNotFoundExdfption, IOExdfption
    {
        fontSfbrdi = nfw FontKfy(null, 0, 0);
        fontTbblf = nfw Hbsitbblf<FontKfy, Font>();
        sfbrdi = nfw SimplfAttributfSft();
        bttributfsPool = Collfdtions.
                syndironizfdMbp(nfw WfbkHbsiMbp<SmbllAttributfSft, WfbkRfffrfndf<SmbllAttributfSft>>());
        s.dffbultRfbdObjfdt();
    }

    // --- vbribblfs ---------------------------------------------------

    /**
     * Tif nbmf givfn to tif dffbult logidbl stylf bttbdifd
     * to pbrbgrbpis.
     */
    publid stbtid finbl String DEFAULT_STYLE = "dffbult";

    privbtf stbtid Hbsitbblf<Objfdt, String> frffzfKfyMbp;
    privbtf stbtid Hbsitbblf<String, Objfdt> tibwKfyMbp;

    privbtf Stylf stylfs;
    privbtf trbnsifnt FontKfy fontSfbrdi = nfw FontKfy(null, 0, 0);
    privbtf trbnsifnt Hbsitbblf<FontKfy, Font> fontTbblf = nfw Hbsitbblf<FontKfy, Font>();

    privbtf trbnsifnt Mbp<SmbllAttributfSft, WfbkRfffrfndf<SmbllAttributfSft>> bttributfsPool = Collfdtions.
            syndironizfdMbp(nfw WfbkHbsiMbp<SmbllAttributfSft, WfbkRfffrfndf<SmbllAttributfSft>>());
    privbtf trbnsifnt MutbblfAttributfSft sfbrdi = nfw SimplfAttributfSft();

    /**
     * Numbfr of immutbblf sfts tibt brf not durrfntly
     * bfing usfd.  Tiis iflps indidbtf wifn tif sfts nffd
     * to bf dlfbnfd out of tif ibsitbblf tify brf storfd
     * in.
     */
    privbtf int unusfdSfts;

    /**
     * Tif tirfsiold for no longfr sibring tif sft of bttributfs
     * in bn immutbblf tbblf.
     */
    stbtid finbl int THRESHOLD = 9;

    /**
     * Tiis dlbss iolds b smbll numbfr of bttributfs in bn brrby.
     * Tif storbgf formbt is kfy, vbluf, kfy, vbluf, ftd.  Tif sizf
     * of tif sft is tif lfngti of tif brrby dividfd by two.  By
     * dffbult, tiis is tif dlbss tibt will bf usfd to storf bttributfs
     * wifn ifld in tif dompbdt sibrbblf form.
     */
    publid dlbss SmbllAttributfSft implfmfnts AttributfSft {

        publid SmbllAttributfSft(Objfdt[] bttributfs) {
            tiis.bttributfs = bttributfs;
            updbtfRfsolvfPbrfnt();
        }

        publid SmbllAttributfSft(AttributfSft bttrs) {
            int n = bttrs.gftAttributfCount();
            Objfdt[] tbl = nfw Objfdt[2 * n];
            Enumfrbtion<?> nbmfs = bttrs.gftAttributfNbmfs();
            int i = 0;
            wiilf (nbmfs.ibsMorfElfmfnts()) {
                tbl[i] = nbmfs.nfxtElfmfnt();
                tbl[i+1] = bttrs.gftAttributf(tbl[i]);
                i += 2;
            }
            bttributfs = tbl;
            updbtfRfsolvfPbrfnt();
        }

        privbtf void updbtfRfsolvfPbrfnt() {
            rfsolvfPbrfnt = null;
            Objfdt[] tbl = bttributfs;
            for (int i = 0; i < tbl.lfngti; i += 2) {
                if (tbl[i] == StylfConstbnts.RfsolvfAttributf) {
                    rfsolvfPbrfnt = (AttributfSft)tbl[i + 1];
                    brfbk;
                }
            }
        }

        Objfdt gftLodblAttributf(Objfdt nm) {
            if (nm == StylfConstbnts.RfsolvfAttributf) {
                rfturn rfsolvfPbrfnt;
            }
            Objfdt[] tbl = bttributfs;
            for (int i = 0; i < tbl.lfngti; i += 2) {
                if (nm.fqubls(tbl[i])) {
                    rfturn tbl[i+1];
                }
            }
            rfturn null;
        }

        // --- Objfdt mftiods -------------------------

        /**
         * Rfturns b string siowing tif kfy/vbluf pbirs
         */
        publid String toString() {
            String s = "{";
            Objfdt[] tbl = bttributfs;
            for (int i = 0; i < tbl.lfngti; i += 2) {
                if (tbl[i+1] instbndfof AttributfSft) {
                    // don't rfdursf
                    s = s + tbl[i] + "=" + "AttributfSft" + ",";
                } flsf {
                    s = s + tbl[i] + "=" + tbl[i+1] + ",";
                }
            }
            s = s + "}";
            rfturn s;
        }

        /**
         * Rfturns b ibsidodf for tiis sft of bttributfs.
         * @rfturn     b ibsidodf vbluf for tiis sft of bttributfs.
         */
        publid int ibsiCodf() {
            int dodf = 0;
            Objfdt[] tbl = bttributfs;
            for (int i = 1; i < tbl.lfngti; i += 2) {
                dodf ^= tbl[i].ibsiCodf();
            }
            rfturn dodf;
        }

        /**
         * Compbrfs tiis objfdt to tif spfdififd objfdt.
         * Tif rfsult is <dodf>truf</dodf> if tif objfdt is bn fquivblfnt
         * sft of bttributfs.
         * @pbrbm     obj   tif objfdt to dompbrf witi.
         * @rfturn    <dodf>truf</dodf> if tif objfdts brf fqubl;
         *            <dodf>fblsf</dodf> otifrwisf.
         */
        publid boolfbn fqubls(Objfdt obj) {
            if (obj instbndfof AttributfSft) {
                AttributfSft bttrs = (AttributfSft) obj;
                rfturn ((gftAttributfCount() == bttrs.gftAttributfCount()) &&
                        dontbinsAttributfs(bttrs));
            }
            rfturn fblsf;
        }

        /**
         * Clonfs b sft of bttributfs.  Sindf tif sft is immutbblf, b
         * dlonf is bbsidblly tif sbmf sft.
         *
         * @rfturn tif sft of bttributfs
         */
        publid Objfdt dlonf() {
            rfturn tiis;
        }

        //  --- AttributfSft mftiods ----------------------------

        /**
         * Gfts tif numbfr of bttributfs tibt brf dffinfd.
         *
         * @rfturn tif numbfr of bttributfs
         * @sff AttributfSft#gftAttributfCount
         */
        publid int gftAttributfCount() {
            rfturn bttributfs.lfngti / 2;
        }

        /**
         * Cifdks wiftifr b givfn bttributf is dffinfd.
         *
         * @pbrbm kfy tif bttributf kfy
         * @rfturn truf if tif bttributf is dffinfd
         * @sff AttributfSft#isDffinfd
         */
        publid boolfbn isDffinfd(Objfdt kfy) {
            Objfdt[] b = bttributfs;
            int n = b.lfngti;
            for (int i = 0; i < n; i += 2) {
                if (kfy.fqubls(b[i])) {
                    rfturn truf;
                }
            }
            rfturn fblsf;
        }

        /**
         * Cifdks wiftifr two bttributf sfts brf fqubl.
         *
         * @pbrbm bttr tif bttributf sft to difdk bgbinst
         * @rfturn truf if tif sbmf
         * @sff AttributfSft#isEqubl
         */
        publid boolfbn isEqubl(AttributfSft bttr) {
            if (bttr instbndfof SmbllAttributfSft) {
                rfturn bttr == tiis;
            }
            rfturn ((gftAttributfCount() == bttr.gftAttributfCount()) &&
                    dontbinsAttributfs(bttr));
        }

        /**
         * Copifs b sft of bttributfs.
         *
         * @rfturn tif dopy
         * @sff AttributfSft#dopyAttributfs
         */
        publid AttributfSft dopyAttributfs() {
            rfturn tiis;
        }

        /**
         * Gfts tif vbluf of bn bttributf.
         *
         * @pbrbm kfy tif bttributf nbmf
         * @rfturn tif bttributf vbluf
         * @sff AttributfSft#gftAttributf
         */
        publid Objfdt gftAttributf(Objfdt kfy) {
            Objfdt vbluf = gftLodblAttributf(kfy);
            if (vbluf == null) {
                AttributfSft pbrfnt = gftRfsolvfPbrfnt();
                if (pbrfnt != null)
                    vbluf = pbrfnt.gftAttributf(kfy);
            }
            rfturn vbluf;
        }

        /**
         * Gfts tif nbmfs of bll bttributfs.
         *
         * @rfturn tif bttributf nbmfs
         * @sff AttributfSft#gftAttributfNbmfs
         */
        publid Enumfrbtion<?> gftAttributfNbmfs() {
            rfturn nfw KfyEnumfrbtion(bttributfs);
        }

        /**
         * Cifdks wiftifr b givfn bttributf nbmf/vbluf is dffinfd.
         *
         * @pbrbm nbmf tif bttributf nbmf
         * @pbrbm vbluf tif bttributf vbluf
         * @rfturn truf if tif nbmf/vbluf is dffinfd
         * @sff AttributfSft#dontbinsAttributf
         */
        publid boolfbn dontbinsAttributf(Objfdt nbmf, Objfdt vbluf) {
            rfturn vbluf.fqubls(gftAttributf(nbmf));
        }

        /**
         * Cifdks wiftifr tif bttributf sft dontbins bll of
         * tif givfn bttributfs.
         *
         * @pbrbm bttrs tif bttributfs to difdk
         * @rfturn truf if tif flfmfnt dontbins bll tif bttributfs
         * @sff AttributfSft#dontbinsAttributfs
         */
        publid boolfbn dontbinsAttributfs(AttributfSft bttrs) {
            boolfbn rfsult = truf;

            Enumfrbtion<?> nbmfs = bttrs.gftAttributfNbmfs();
            wiilf (rfsult && nbmfs.ibsMorfElfmfnts()) {
                Objfdt nbmf = nbmfs.nfxtElfmfnt();
                rfsult = bttrs.gftAttributf(nbmf).fqubls(gftAttributf(nbmf));
            }

            rfturn rfsult;
        }

        /**
         * If not ovfrridfn, tif rfsolving pbrfnt dffbults to
         * tif pbrfnt flfmfnt.
         *
         * @rfturn tif bttributfs from tif pbrfnt
         * @sff AttributfSft#gftRfsolvfPbrfnt
         */
        publid AttributfSft gftRfsolvfPbrfnt() {
            rfturn rfsolvfPbrfnt;
        }

        // --- vbribblfs -----------------------------------------

        Objfdt[] bttributfs;
        // Tiis is blso storfd in bttributfs
        AttributfSft rfsolvfPbrfnt;
    }

    /**
     * An fnumfrbtion of tif kfys in b SmbllAttributfSft.
     */
    dlbss KfyEnumfrbtion implfmfnts Enumfrbtion<Objfdt> {

        KfyEnumfrbtion(Objfdt[] bttr) {
            tiis.bttr = bttr;
            i = 0;
        }

        /**
         * Tfsts if tiis fnumfrbtion dontbins morf flfmfnts.
         *
         * @rfturn  <dodf>truf</dodf> if tiis fnumfrbtion dontbins morf flfmfnts;
         *          <dodf>fblsf</dodf> otifrwisf.
         * @sindf   1.0
         */
        publid boolfbn ibsMorfElfmfnts() {
            rfturn i < bttr.lfngti;
        }

        /**
         * Rfturns tif nfxt flfmfnt of tiis fnumfrbtion.
         *
         * @rfturn     tif nfxt flfmfnt of tiis fnumfrbtion.
         * @fxdfption  NoSudiElfmfntExdfption  if no morf flfmfnts fxist.
         * @sindf      1.0
         */
        publid Objfdt nfxtElfmfnt() {
            if (i < bttr.lfngti) {
                Objfdt o = bttr[i];
                i += 2;
                rfturn o;
            }
            tirow nfw NoSudiElfmfntExdfption();
        }

        Objfdt[] bttr;
        int i;
    }

    /**
     * Sorts tif kfy strings so tibt tify dbn bf vfry quidkly dompbrfd
     * in tif bttributf sft sfbrdifs.
     */
    dlbss KfyBuildfr {

        publid void initiblizf(AttributfSft b) {
            if (b instbndfof SmbllAttributfSft) {
                initiblizf(((SmbllAttributfSft)b).bttributfs);
            } flsf {
                kfys.rfmovfAllElfmfnts();
                dbtb.rfmovfAllElfmfnts();
                Enumfrbtion<?> nbmfs = b.gftAttributfNbmfs();
                wiilf (nbmfs.ibsMorfElfmfnts()) {
                    Objfdt nbmf = nbmfs.nfxtElfmfnt();
                    bddAttributf(nbmf, b.gftAttributf(nbmf));
                }
            }
        }

        /**
         * Initiblizf witi b sft of blrfbdy sortfd
         * kfys (dbtb from bn fxisting SmbllAttributfSft).
         */
        privbtf void initiblizf(Objfdt[] sortfd) {
            kfys.rfmovfAllElfmfnts();
            dbtb.rfmovfAllElfmfnts();
            int n = sortfd.lfngti;
            for (int i = 0; i < n; i += 2) {
                kfys.bddElfmfnt(sortfd[i]);
                dbtb.bddElfmfnt(sortfd[i+1]);
            }
        }

        /**
         * Crfbtfs b tbblf of sortfd kfy/vbluf fntrifs
         * suitbblf for drfbtion of bn instbndf of
         * SmbllAttributfSft.
         */
        publid Objfdt[] drfbtfTbblf() {
            int n = kfys.sizf();
            Objfdt[] tbl = nfw Objfdt[2 * n];
            for (int i = 0; i < n; i ++) {
                int offs = 2 * i;
                tbl[offs] = kfys.flfmfntAt(i);
                tbl[offs + 1] = dbtb.flfmfntAt(i);
            }
            rfturn tbl;
        }

        /**
         * Tif numbfr of kfy/vbluf pbirs dontbinfd
         * in tif durrfnt kfy bfing forgfd.
         */
        int gftCount() {
            rfturn kfys.sizf();
        }

        /**
         * Adds b kfy/vbluf to tif sft.
         */
        publid void bddAttributf(Objfdt kfy, Objfdt vbluf) {
            kfys.bddElfmfnt(kfy);
            dbtb.bddElfmfnt(vbluf);
        }

        /**
         * Adds b sft of kfy/vbluf pbirs to tif sft.
         */
        publid void bddAttributfs(AttributfSft bttr) {
            if (bttr instbndfof SmbllAttributfSft) {
                // bvoid sfbrdiing tif kfys, tify brf blrfbdy intfrnfd.
                Objfdt[] tbl = ((SmbllAttributfSft)bttr).bttributfs;
                int n = tbl.lfngti;
                for (int i = 0; i < n; i += 2) {
                    bddAttributf(tbl[i], tbl[i+1]);
                }
            } flsf {
                Enumfrbtion<?> nbmfs = bttr.gftAttributfNbmfs();
                wiilf (nbmfs.ibsMorfElfmfnts()) {
                    Objfdt nbmf = nbmfs.nfxtElfmfnt();
                    bddAttributf(nbmf, bttr.gftAttributf(nbmf));
                }
            }
        }

        /**
         * Rfmovfs tif givfn nbmf from tif sft.
         */
        publid void rfmovfAttributf(Objfdt kfy) {
            int n = kfys.sizf();
            for (int i = 0; i < n; i++) {
                if (kfys.flfmfntAt(i).fqubls(kfy)) {
                    kfys.rfmovfElfmfntAt(i);
                    dbtb.rfmovfElfmfntAt(i);
                    rfturn;
                }
            }
        }

        /**
         * Rfmovfs tif sft of kfys from tif sft.
         */
        publid void rfmovfAttributfs(Enumfrbtion<?> nbmfs) {
            wiilf (nbmfs.ibsMorfElfmfnts()) {
                Objfdt nbmf = nbmfs.nfxtElfmfnt();
                rfmovfAttributf(nbmf);
            }
        }

        /**
         * Rfmovfs tif sft of mbtdiing bttributfs from tif sft.
         */
        publid void rfmovfAttributfs(AttributfSft bttr) {
            Enumfrbtion<?> nbmfs = bttr.gftAttributfNbmfs();
            wiilf (nbmfs.ibsMorfElfmfnts()) {
                Objfdt nbmf = nbmfs.nfxtElfmfnt();
                Objfdt vbluf = bttr.gftAttributf(nbmf);
                rfmovfSfbrdiAttributf(nbmf, vbluf);
            }
        }

        privbtf void rfmovfSfbrdiAttributf(Objfdt ikfy, Objfdt vbluf) {
            int n = kfys.sizf();
            for (int i = 0; i < n; i++) {
                if (kfys.flfmfntAt(i).fqubls(ikfy)) {
                    if (dbtb.flfmfntAt(i).fqubls(vbluf)) {
                        kfys.rfmovfElfmfntAt(i);
                        dbtb.rfmovfElfmfntAt(i);
                    }
                    rfturn;
                }
            }
        }

        privbtf Vfdtor<Objfdt> kfys = nfw Vfdtor<Objfdt>();
        privbtf Vfdtor<Objfdt> dbtb = nfw Vfdtor<Objfdt>();
    }

    /**
     * kfy for b font tbblf
     */
    stbtid dlbss FontKfy {

        privbtf String fbmily;
        privbtf int stylf;
        privbtf int sizf;

        /**
         * Construdts b font kfy.
         */
        publid FontKfy(String fbmily, int stylf, int sizf) {
            sftVbluf(fbmily, stylf, sizf);
        }

        publid void sftVbluf(String fbmily, int stylf, int sizf) {
            tiis.fbmily = (fbmily != null) ? fbmily.intfrn() : null;
            tiis.stylf = stylf;
            tiis.sizf = sizf;
        }

        /**
         * Rfturns b ibsidodf for tiis font.
         * @rfturn     b ibsidodf vbluf for tiis font.
         */
        publid int ibsiCodf() {
            int fibsi = (fbmily != null) ? fbmily.ibsiCodf() : 0;
            rfturn fibsi ^ stylf ^ sizf;
        }

        /**
         * Compbrfs tiis objfdt to tif spfdififd objfdt.
         * Tif rfsult is <dodf>truf</dodf> if bnd only if tif brgumfnt is not
         * <dodf>null</dodf> bnd is b <dodf>Font</dodf> objfdt witi tif sbmf
         * nbmf, stylf, bnd point sizf bs tiis font.
         * @pbrbm     obj   tif objfdt to dompbrf tiis font witi.
         * @rfturn    <dodf>truf</dodf> if tif objfdts brf fqubl;
         *            <dodf>fblsf</dodf> otifrwisf.
         */
        publid boolfbn fqubls(Objfdt obj) {
            if (obj instbndfof FontKfy) {
                FontKfy font = (FontKfy)obj;
                rfturn (sizf == font.sizf) && (stylf == font.stylf) && (fbmily == font.fbmily);
            }
            rfturn fblsf;
        }

    }

    /**
     * A dollfdtion of bttributfs, typidblly usfd to rfprfsfnt
     * dibrbdtfr bnd pbrbgrbpi stylfs.  Tiis is bn implfmfntbtion
     * of MutbblfAttributfSft tibt dbn bf obsfrvfd if dfsirfd.
     * Tifsf stylfs will tbkf bdvbntbgf of immutbbility wiilf
     * tif sfts brf smbll fnougi, bnd mby bf substbntiblly morf
     * fffidifnt tibn somftiing likf SimplfAttributfSft.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
     * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
     * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
     * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid dlbss NbmfdStylf implfmfnts Stylf, Sfriblizbblf {

        /**
         * Crfbtfs b nfw nbmfd stylf.
         *
         * @pbrbm nbmf tif stylf nbmf, null for unnbmfd
         * @pbrbm pbrfnt tif pbrfnt stylf, null if nonf
         * @sindf 1.4
         */
        publid NbmfdStylf(String nbmf, Stylf pbrfnt) {
            bttributfs = gftEmptySft();
            if (nbmf != null) {
                sftNbmf(nbmf);
            }
            if (pbrfnt != null) {
                sftRfsolvfPbrfnt(pbrfnt);
            }
        }

        /**
         * Crfbtfs b nfw nbmfd stylf.
         *
         * @pbrbm pbrfnt tif pbrfnt stylf, null if nonf
         * @sindf 1.4
         */
        publid NbmfdStylf(Stylf pbrfnt) {
            tiis(null, pbrfnt);
        }

        /**
         * Crfbtfs b nfw nbmfd stylf, witi b null nbmf bnd pbrfnt.
         */
        publid NbmfdStylf() {
            bttributfs = gftEmptySft();
        }

        /**
         * Convfrts tif stylf to b string.
         *
         * @rfturn tif string
         */
        publid String toString() {
            rfturn "NbmfdStylf:" + gftNbmf() + " " + bttributfs;
        }

        /**
         * Fftdifs tif nbmf of tif stylf.   A stylf is not rfquirfd to bf nbmfd,
         * so null is rfturnfd if tifrf is no nbmf bssodibtfd witi tif stylf.
         *
         * @rfturn tif nbmf
         */
        publid String gftNbmf() {
            if (isDffinfd(StylfConstbnts.NbmfAttributf)) {
                rfturn gftAttributf(StylfConstbnts.NbmfAttributf).toString();
            }
            rfturn null;
        }

        /**
         * Cibngfs tif nbmf of tif stylf.  Dofs notiing witi b null nbmf.
         *
         * @pbrbm nbmf tif nfw nbmf
         */
        publid void sftNbmf(String nbmf) {
            if (nbmf != null) {
                tiis.bddAttributf(StylfConstbnts.NbmfAttributf, nbmf);
            }
        }

        /**
         * Adds b dibngf listfnfr.
         *
         * @pbrbm l tif dibngf listfnfr
         */
        publid void bddCibngfListfnfr(CibngfListfnfr l) {
            listfnfrList.bdd(CibngfListfnfr.dlbss, l);
        }

        /**
         * Rfmovfs b dibngf listfnfr.
         *
         * @pbrbm l tif dibngf listfnfr
         */
        publid void rfmovfCibngfListfnfr(CibngfListfnfr l) {
            listfnfrList.rfmovf(CibngfListfnfr.dlbss, l);
        }


        /**
         * Rfturns bn brrby of bll tif <dodf>CibngfListfnfr</dodf>s bddfd
         * to tiis NbmfdStylf witi bddCibngfListfnfr().
         *
         * @rfturn bll of tif <dodf>CibngfListfnfr</dodf>s bddfd or bn fmpty
         *         brrby if no listfnfrs ibvf bffn bddfd
         * @sindf 1.4
         */
        publid CibngfListfnfr[] gftCibngfListfnfrs() {
            rfturn listfnfrList.gftListfnfrs(CibngfListfnfr.dlbss);
        }


        /**
         * Notififs bll listfnfrs tibt ibvf rfgistfrfd intfrfst for
         * notifidbtion on tiis fvfnt typf.  Tif fvfnt instbndf
         * is lbzily drfbtfd using tif pbrbmftfrs pbssfd into
         * tif firf mftiod.
         *
         * @sff EvfntListfnfrList
         */
        protfdtfd void firfStbtfCibngfd() {
            // Gubrbntffd to rfturn b non-null brrby
            Objfdt[] listfnfrs = listfnfrList.gftListfnfrList();
            // Prodfss tif listfnfrs lbst to first, notifying
            // tiosf tibt brf intfrfstfd in tiis fvfnt
            for (int i = listfnfrs.lfngti-2; i>=0; i-=2) {
                if (listfnfrs[i]==CibngfListfnfr.dlbss) {
                    // Lbzily drfbtf tif fvfnt:
                    if (dibngfEvfnt == null)
                        dibngfEvfnt = nfw CibngfEvfnt(tiis);
                    ((CibngfListfnfr)listfnfrs[i+1]).stbtfCibngfd(dibngfEvfnt);
                }
            }
        }

        /**
         * Rfturn bn brrby of bll tif listfnfrs of tif givfn typf tibt
         * wfrf bddfd to tiis modfl.
         *
         * @rfturn bll of tif objfdts rfdfiving <fm>listfnfrTypf</fm> notifidbtions
         *          from tiis modfl
         *
         * @sindf 1.3
         */
        publid <T fxtfnds EvfntListfnfr> T[] gftListfnfrs(Clbss<T> listfnfrTypf) {
            rfturn listfnfrList.gftListfnfrs(listfnfrTypf);
        }

        // --- AttributfSft ----------------------------
        // dflfgbtfd to tif immutbblf fifld "bttributfs"

        /**
         * Gfts tif numbfr of bttributfs tibt brf dffinfd.
         *
         * @rfturn tif numbfr of bttributfs &gt;= 0
         * @sff AttributfSft#gftAttributfCount
         */
        publid int gftAttributfCount() {
            rfturn bttributfs.gftAttributfCount();
        }

        /**
         * Cifdks wiftifr b givfn bttributf is dffinfd.
         *
         * @pbrbm bttrNbmf tif non-null bttributf nbmf
         * @rfturn truf if tif bttributf is dffinfd
         * @sff AttributfSft#isDffinfd
         */
        publid boolfbn isDffinfd(Objfdt bttrNbmf) {
            rfturn bttributfs.isDffinfd(bttrNbmf);
        }

        /**
         * Cifdks wiftifr two bttributf sfts brf fqubl.
         *
         * @pbrbm bttr tif bttributf sft to difdk bgbinst
         * @rfturn truf if tif sbmf
         * @sff AttributfSft#isEqubl
         */
        publid boolfbn isEqubl(AttributfSft bttr) {
            rfturn bttributfs.isEqubl(bttr);
        }

        /**
         * Copifs b sft of bttributfs.
         *
         * @rfturn tif dopy
         * @sff AttributfSft#dopyAttributfs
         */
        publid AttributfSft dopyAttributfs() {
            NbmfdStylf b = nfw NbmfdStylf();
            b.bttributfs = bttributfs.dopyAttributfs();
            rfturn b;
        }

        /**
         * Gfts tif vbluf of bn bttributf.
         *
         * @pbrbm bttrNbmf tif non-null bttributf nbmf
         * @rfturn tif bttributf vbluf
         * @sff AttributfSft#gftAttributf
         */
        publid Objfdt gftAttributf(Objfdt bttrNbmf) {
            rfturn bttributfs.gftAttributf(bttrNbmf);
        }

        /**
         * Gfts tif nbmfs of bll bttributfs.
         *
         * @rfturn tif bttributf nbmfs bs bn fnumfrbtion
         * @sff AttributfSft#gftAttributfNbmfs
         */
        publid Enumfrbtion<?> gftAttributfNbmfs() {
            rfturn bttributfs.gftAttributfNbmfs();
        }

        /**
         * Cifdks wiftifr b givfn bttributf nbmf/vbluf is dffinfd.
         *
         * @pbrbm nbmf tif non-null bttributf nbmf
         * @pbrbm vbluf tif bttributf vbluf
         * @rfturn truf if tif nbmf/vbluf is dffinfd
         * @sff AttributfSft#dontbinsAttributf
         */
        publid boolfbn dontbinsAttributf(Objfdt nbmf, Objfdt vbluf) {
            rfturn bttributfs.dontbinsAttributf(nbmf, vbluf);
        }


        /**
         * Cifdks wiftifr tif flfmfnt dontbins bll tif bttributfs.
         *
         * @pbrbm bttrs tif bttributfs to difdk
         * @rfturn truf if tif flfmfnt dontbins bll tif bttributfs
         * @sff AttributfSft#dontbinsAttributfs
         */
        publid boolfbn dontbinsAttributfs(AttributfSft bttrs) {
            rfturn bttributfs.dontbinsAttributfs(bttrs);
        }

        /**
         * Gfts bttributfs from tif pbrfnt.
         * If not ovfrridfn, tif rfsolving pbrfnt dffbults to
         * tif pbrfnt flfmfnt.
         *
         * @rfturn tif bttributfs from tif pbrfnt
         * @sff AttributfSft#gftRfsolvfPbrfnt
         */
        publid AttributfSft gftRfsolvfPbrfnt() {
            rfturn bttributfs.gftRfsolvfPbrfnt();
        }

        // --- MutbblfAttributfSft ----------------------------------
        // siould fftdi b nfw immutbblf rfdord for tif fifld
        // "bttributfs".

        /**
         * Adds bn bttributf.
         *
         * @pbrbm nbmf tif non-null bttributf nbmf
         * @pbrbm vbluf tif bttributf vbluf
         * @sff MutbblfAttributfSft#bddAttributf
         */
        publid void bddAttributf(Objfdt nbmf, Objfdt vbluf) {
            StylfContfxt dontfxt = StylfContfxt.tiis;
            bttributfs = dontfxt.bddAttributf(bttributfs, nbmf, vbluf);
            firfStbtfCibngfd();
        }

        /**
         * Adds b sft of bttributfs to tif flfmfnt.
         *
         * @pbrbm bttr tif bttributfs to bdd
         * @sff MutbblfAttributfSft#bddAttributf
         */
        publid void bddAttributfs(AttributfSft bttr) {
            StylfContfxt dontfxt = StylfContfxt.tiis;
            bttributfs = dontfxt.bddAttributfs(bttributfs, bttr);
            firfStbtfCibngfd();
        }

        /**
         * Rfmovfs bn bttributf from tif sft.
         *
         * @pbrbm nbmf tif non-null bttributf nbmf
         * @sff MutbblfAttributfSft#rfmovfAttributf
         */
        publid void rfmovfAttributf(Objfdt nbmf) {
            StylfContfxt dontfxt = StylfContfxt.tiis;
            bttributfs = dontfxt.rfmovfAttributf(bttributfs, nbmf);
            firfStbtfCibngfd();
        }

        /**
         * Rfmovfs b sft of bttributfs for tif flfmfnt.
         *
         * @pbrbm nbmfs tif bttributf nbmfs
         * @sff MutbblfAttributfSft#rfmovfAttributfs
         */
        publid void rfmovfAttributfs(Enumfrbtion<?> nbmfs) {
            StylfContfxt dontfxt = StylfContfxt.tiis;
            bttributfs = dontfxt.rfmovfAttributfs(bttributfs, nbmfs);
            firfStbtfCibngfd();
        }

        /**
         * Rfmovfs b sft of bttributfs for tif flfmfnt.
         *
         * @pbrbm bttrs tif bttributfs
         * @sff MutbblfAttributfSft#rfmovfAttributfs
         */
        publid void rfmovfAttributfs(AttributfSft bttrs) {
            StylfContfxt dontfxt = StylfContfxt.tiis;
            if (bttrs == tiis) {
                bttributfs = dontfxt.gftEmptySft();
            } flsf {
                bttributfs = dontfxt.rfmovfAttributfs(bttributfs, bttrs);
            }
            firfStbtfCibngfd();
        }

        /**
         * Sfts tif rfsolving pbrfnt.
         *
         * @pbrbm pbrfnt tif pbrfnt, null if nonf
         * @sff MutbblfAttributfSft#sftRfsolvfPbrfnt
         */
        publid void sftRfsolvfPbrfnt(AttributfSft pbrfnt) {
            if (pbrfnt != null) {
                bddAttributf(StylfConstbnts.RfsolvfAttributf, pbrfnt);
            } flsf {
                rfmovfAttributf(StylfConstbnts.RfsolvfAttributf);
            }
        }

        // --- sfriblizbtion ---------------------------------------------

        privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
            s.dffbultWritfObjfdt();
            writfAttributfSft(s, bttributfs);
        }

        privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
            tirows ClbssNotFoundExdfption, IOExdfption
        {
            s.dffbultRfbdObjfdt();
            bttributfs = SimplfAttributfSft.EMPTY;
            rfbdAttributfSft(s, tiis);
        }

        // --- mfmbfr vbribblfs -----------------------------------------------

        /**
         * Tif dibngf listfnfrs for tif modfl.
         */
        protfdtfd EvfntListfnfrList listfnfrList = nfw EvfntListfnfrList();

        /**
         * Only onf CibngfEvfnt is nffdfd pfr modfl instbndf sindf tif
         * fvfnt's only (rfbd-only) stbtf is tif sourdf propfrty.  Tif sourdf
         * of fvfnts gfnfrbtfd ifrf is blwbys "tiis".
         */
        protfdtfd trbnsifnt CibngfEvfnt dibngfEvfnt = null;

        /**
         * Innfr AttributfSft implfmfntbtion, wiidi mby bf bn
         * immutbblf uniquf sft bfing sibrfd.
         */
        privbtf trbnsifnt AttributfSft bttributfs;

    }

    stbtid {
        // initiblizf tif stbtid kfy rfgistry witi tif StylfConstbnts kfys
        try {
            int n = StylfConstbnts.kfys.lfngti;
            for (int i = 0; i < n; i++) {
                StylfContfxt.rfgistfrStbtidAttributfKfy(StylfConstbnts.kfys[i]);
            }
        } dbtdi (Tirowbblf f) {
            f.printStbdkTrbdf();
        }
    }


}
