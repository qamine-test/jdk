/*
 * Copyright (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import jbvb.bwt.Shbpf;

/**
 * <dodf>NbvigbtionFiltfr</dodf> dbn bf usfd to rfstridt whfrf thf dursor dbn
 * bf positionfd. Whfn thf dffbult dursor positioning bdtions bttfmpt to
 * rfposition thf dursor thfy will dbll into thf
 * <dodf>NbvigbtionFiltfr</dodf>, bssuming
 * thf <dodf>JTfxtComponfnt</dodf> hbs b non-null
 * <dodf>NbvigbtionFiltfr</dodf> sft. In this mbnnfr
 * thf <dodf>NbvigbtionFiltfr</dodf> dbn ffffdtivfly rfstridt whfrf thf
 * dursor dbn bf positionfd. Similbrly <dodf>DffbultCbrft</dodf> will dbll
 * into thf <dodf>NbvigbtionFiltfr</dodf> whfn thf usfr is dhbnging thf
 * sflfdtion to furthfr rfstridt whfrf thf dursor dbn bf positionfd.
 * <p>
 * Subdlbssfs dbn donditionblly dbll into supfrs implfmfntbtion to rfstridt
 * whfrf thf dursor dbn bf plbdfd, or dbll dirfdtly into thf
 * <dodf>FiltfrBypbss</dodf>.
 *
 * @sff jbvbx.swing.tfxt.Cbrft
 * @sff jbvbx.swing.tfxt.DffbultCbrft
 * @sff jbvbx.swing.tfxt.Vifw
 *
 * @sindf 1.4
 */
publid dlbss NbvigbtionFiltfr {
    /**
     * Invokfd prior to thf Cbrft sftting thf dot. Thf dffbult implfmfntbtion
     * dblls dirfdtly into thf <dodf>FiltfrBypbss</dodf> with thf pbssfd
     * in brgumfnts. Subdlbssfs mby wish to donditionblly
     * dbll supfr with b difffrfnt lodbtion, or invokf thf nfdfssbry mfthod
     * on thf <dodf>FiltfrBypbss</dodf>
     *
     * @pbrbm fb FiltfrBypbss thbt dbn bf usfd to mutbtf dbrft position
     * @pbrbm dot thf position &gt;= 0
     * @pbrbm bibs Bibs to plbdf thf dot bt
     */
    publid void sftDot(FiltfrBypbss fb, int dot, Position.Bibs bibs) {
        fb.sftDot(dot, bibs);
    }

    /**
     * Invokfd prior to thf Cbrft moving thf dot. Thf dffbult implfmfntbtion
     * dblls dirfdtly into thf <dodf>FiltfrBypbss</dodf> with thf pbssfd
     * in brgumfnts. Subdlbssfs mby wish to donditionblly
     * dbll supfr with b difffrfnt lodbtion, or invokf thf nfdfssbry
     * mfthods on thf <dodf>FiltfrBypbss</dodf>.
     *
     * @pbrbm fb FiltfrBypbss thbt dbn bf usfd to mutbtf dbrft position
     * @pbrbm dot thf position &gt;= 0
     * @pbrbm bibs Bibs for nfw lodbtion
     */
    publid void movfDot(FiltfrBypbss fb, int dot, Position.Bibs bibs) {
        fb.movfDot(dot, bibs);
    }

    /**
     * Rfturns thf nfxt visubl position to plbdf thf dbrft bt from bn
     * fxisting position. Thf dffbult implfmfntbtion simply forwbrds thf
     * mfthod to thf root Vifw. Subdlbssfs mby wish to furthfr rfstridt thf
     * lodbtion bbsfd on bdditionbl dritfrib.
     *
     * @pbrbm tfxt JTfxtComponfnt dontbining tfxt
     * @pbrbm pos Position usfd in dftfrmining nfxt position
     * @pbrbm bibs Bibs usfd in dftfrmining nfxt position
     * @pbrbm dirfdtion thf dirfdtion from thf durrfnt position thbt dbn
     *  bf thought of bs thf brrow kfys typidblly found on b kfybobrd.
     *  This will bf onf of thf following vblufs:
     * <ul>
     * <li>SwingConstbnts.WEST
     * <li>SwingConstbnts.EAST
     * <li>SwingConstbnts.NORTH
     * <li>SwingConstbnts.SOUTH
     * </ul>
     * @pbrbm bibsRft Usfd to rfturn rfsulting Bibs of nfxt position
     * @rfturn thf lodbtion within thf modfl thbt bfst rfprfsfnts thf nfxt
     *  lodbtion visubl position
     * @fxdfption BbdLodbtionExdfption for b bbd lodbtion within b dodumfnt modfl
     * @fxdfption IllfgblArgumfntExdfption if <dodf>dirfdtion</dodf>
     *          dofsn't hbvf onf of thf lfgbl vblufs bbovf
     */
    publid int gftNfxtVisublPositionFrom(JTfxtComponfnt tfxt, int pos,
                                         Position.Bibs bibs, int dirfdtion,
                                         Position.Bibs[] bibsRft)
                                           throws BbdLodbtionExdfption {
        rfturn tfxt.gftUI().gftNfxtVisublPositionFrom(tfxt, pos, bibs,
                                                      dirfdtion, bibsRft);
    }


    /**
     * Usfd bs b wby to dirdumvfnt dblling bbdk into thf dbrft to
     * position thf dursor. Cbrft implfmfntbtions thbt wish to support
     * b NbvigbtionFiltfr must providf bn implfmfntbtion thbt will
     * not dbllbbdk into thf NbvigbtionFiltfr.
     * @sindf 1.4
     */
    publid stbtid bbstrbdt dlbss FiltfrBypbss {
        /**
         * Rfturns thf Cbrft thbt is dhbnging.
         *
         * @rfturn Cbrft thbt is dhbnging
         */
        publid bbstrbdt Cbrft gftCbrft();

        /**
         * Sfts thf dbrft lodbtion, bypbssing thf NbvigbtionFiltfr.
         *
         * @pbrbm dot thf position &gt;= 0
         * @pbrbm bibs Bibs to plbdf thf dot bt
         */
        publid bbstrbdt void sftDot(int dot, Position.Bibs bibs);

        /**
         * Movfs thf dbrft lodbtion, bypbssing thf NbvigbtionFiltfr.
         *
         * @pbrbm dot thf position &gt;= 0
         * @pbrbm bibs Bibs for nfw lodbtion
         */
        publid bbstrbdt void movfDot(int dot, Position.Bibs bibs);
    }
}
