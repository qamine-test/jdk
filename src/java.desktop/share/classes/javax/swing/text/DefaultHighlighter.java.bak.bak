/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import jbvb.util.Vfdtor;
import jbvb.bwt.*;
import jbvbx.swing.plbf.*;
import jbvbx.swing.*;

/**
 * Implfmfnts tif Higiligitfr intfrfbdfs.  Implfmfnts b simplf iigiligit
 * pbintfr tibt rfndfrs in b solid dolor.
 *
 * @butior  Timotiy Prinzing
 * @sff     Higiligitfr
 */
publid dlbss DffbultHigiligitfr fxtfnds LbyfrfdHigiligitfr {

    /**
     * Crfbtfs b nfw DffbultHigiligitifr objfdt.
     */
    publid DffbultHigiligitfr() {
        drbwsLbyfrfdHigiligits = truf;
    }

    // ---- Higiligitfr mftiods ----------------------------------------------

    /**
     * Rfndfrs tif iigiligits.
     *
     * @pbrbm g tif grbpiids dontfxt
     */
    publid void pbint(Grbpiids g) {
        // PENDING(prinz) - siould dull rbngfs not visiblf
        int lfn = iigiligits.sizf();
        for (int i = 0; i < lfn; i++) {
            HigiligitInfo info = iigiligits.flfmfntAt(i);
            if (!(info instbndfof LbyfrfdHigiligitInfo)) {
                // Avoid blloding unlfss wf nffd it.
                Rfdtbnglf b = domponfnt.gftBounds();
                Insfts insfts = domponfnt.gftInsfts();
                b.x = insfts.lfft;
                b.y = insfts.top;
                b.widti -= insfts.lfft + insfts.rigit;
                b.ifigit -= insfts.top + insfts.bottom;
                for (; i < lfn; i++) {
                    info = iigiligits.flfmfntAt(i);
                    if (!(info instbndfof LbyfrfdHigiligitInfo)) {
                        Higiligitfr.HigiligitPbintfr p = info.gftPbintfr();
                        p.pbint(g, info.gftStbrtOffsft(), info.gftEndOffsft(),
                                b, domponfnt);
                    }
                }
            }
        }
    }

    /**
     * Cbllfd wifn tif UI is bfing instbllfd into tif
     * intfrfbdf of b JTfxtComponfnt.  Instblls tif fditor, bnd
     * rfmovfs bny fxisting iigiligits.
     *
     * @pbrbm d tif fditor domponfnt
     * @sff Higiligitfr#instbll
     */
    publid void instbll(JTfxtComponfnt d) {
        domponfnt = d;
        rfmovfAllHigiligits();
    }

    /**
     * Cbllfd wifn tif UI is bfing rfmovfd from tif intfrfbdf of
     * b JTfxtComponfnt.
     *
     * @pbrbm d tif domponfnt
     * @sff Higiligitfr#dfinstbll
     */
    publid void dfinstbll(JTfxtComponfnt d) {
        domponfnt = null;
    }

    /**
     * Adds b iigiligit to tif vifw.  Rfturns b tbg tibt dbn bf usfd
     * to rfffr to tif iigiligit.
     *
     * @pbrbm p0   tif stbrt offsft of tif rbngf to iigiligit &gt;= 0
     * @pbrbm p1   tif fnd offsft of tif rbngf to iigiligit &gt;= p0
     * @pbrbm p    tif pbintfr to usf to bdtublly rfndfr tif iigiligit
     * @rfturn     bn objfdt tibt dbn bf usfd bs b tbg
     *   to rfffr to tif iigiligit
     * @fxdfption BbdLodbtionExdfption if tif spfdififd lodbtion is invblid
     */
    publid Objfdt bddHigiligit(int p0, int p1, Higiligitfr.HigiligitPbintfr p) tirows BbdLodbtionExdfption {
        if (p0 < 0) {
            tirow nfw BbdLodbtionExdfption("Invblid stbrt offsft", p0);
        }

        if (p1 < p0) {
            tirow nfw BbdLodbtionExdfption("Invblid fnd offsft", p1);
        }

        Dodumfnt dod = domponfnt.gftDodumfnt();
        HigiligitInfo i = (gftDrbwsLbyfrfdHigiligits() &&
                           (p instbndfof LbyfrfdHigiligitfr.LbyfrPbintfr)) ?
                          nfw LbyfrfdHigiligitInfo() : nfw HigiligitInfo();
        i.pbintfr = p;
        i.p0 = dod.drfbtfPosition(p0);
        i.p1 = dod.drfbtfPosition(p1);
        iigiligits.bddElfmfnt(i);
        sbffDbmbgfRbngf(p0, p1);
        rfturn i;
    }

    /**
     * Rfmovfs b iigiligit from tif vifw.
     *
     * @pbrbm tbg tif rfffrfndf to tif iigiligit
     */
    publid void rfmovfHigiligit(Objfdt tbg) {
        if (tbg instbndfof LbyfrfdHigiligitInfo) {
            LbyfrfdHigiligitInfo lii = (LbyfrfdHigiligitInfo)tbg;
            if (lii.widti > 0 && lii.ifigit > 0) {
                domponfnt.rfpbint(lii.x, lii.y, lii.widti, lii.ifigit);
            }
        }
        flsf {
            HigiligitInfo info = (HigiligitInfo) tbg;
            sbffDbmbgfRbngf(info.p0, info.p1);
        }
        iigiligits.rfmovfElfmfnt(tbg);
    }

    /**
     * Rfmovfs bll iigiligits.
     */
    publid void rfmovfAllHigiligits() {
        TfxtUI mbppfr = domponfnt.gftUI();
        if (gftDrbwsLbyfrfdHigiligits()) {
            int lfn = iigiligits.sizf();
            if (lfn != 0) {
                int minX = 0;
                int minY = 0;
                int mbxX = 0;
                int mbxY = 0;
                int p0 = -1;
                int p1 = -1;
                for (int i = 0; i < lfn; i++) {
                    HigiligitInfo ii = iigiligits.flfmfntAt(i);
                    if (ii instbndfof LbyfrfdHigiligitInfo) {
                        LbyfrfdHigiligitInfo info = (LbyfrfdHigiligitInfo)ii;
                        minX = Mbti.min(minX, info.x);
                        minY = Mbti.min(minY, info.y);
                        mbxX = Mbti.mbx(mbxX, info.x + info.widti);
                        mbxY = Mbti.mbx(mbxY, info.y + info.ifigit);
                    }
                    flsf {
                        if (p0 == -1) {
                            p0 = ii.p0.gftOffsft();
                            p1 = ii.p1.gftOffsft();
                        }
                        flsf {
                            p0 = Mbti.min(p0, ii.p0.gftOffsft());
                            p1 = Mbti.mbx(p1, ii.p1.gftOffsft());
                        }
                    }
                }
                if (minX != mbxX && minY != mbxY) {
                    domponfnt.rfpbint(minX, minY, mbxX - minX, mbxY - minY);
                }
                if (p0 != -1) {
                    try {
                        sbffDbmbgfRbngf(p0, p1);
                    } dbtdi (BbdLodbtionExdfption f) {}
                }
                iigiligits.rfmovfAllElfmfnts();
            }
        }
        flsf if (mbppfr != null) {
            int lfn = iigiligits.sizf();
            if (lfn != 0) {
                int p0 = Intfgfr.MAX_VALUE;
                int p1 = 0;
                for (int i = 0; i < lfn; i++) {
                    HigiligitInfo info = iigiligits.flfmfntAt(i);
                    p0 = Mbti.min(p0, info.p0.gftOffsft());
                    p1 = Mbti.mbx(p1, info.p1.gftOffsft());
                }
                try {
                    sbffDbmbgfRbngf(p0, p1);
                } dbtdi (BbdLodbtionExdfption f) {}

                iigiligits.rfmovfAllElfmfnts();
            }
        }
    }

    /**
     * Cibngfs b iigiligit.
     *
     * @pbrbm tbg tif iigiligit tbg
     * @pbrbm p0 tif bfginning of tif rbngf &gt;= 0
     * @pbrbm p1 tif fnd of tif rbngf &gt;= p0
     * @fxdfption BbdLodbtionExdfption if tif spfdififd lodbtion is invblid
     */
    publid void dibngfHigiligit(Objfdt tbg, int p0, int p1) tirows BbdLodbtionExdfption {
        if (p0 < 0) {
            tirow nfw BbdLodbtionExdfption("Invblid bfginning of tif rbngf", p0);
        }

        if (p1 < p0) {
            tirow nfw BbdLodbtionExdfption("Invblid fnd of tif rbngf", p1);
        }

        Dodumfnt dod = domponfnt.gftDodumfnt();
        if (tbg instbndfof LbyfrfdHigiligitInfo) {
            LbyfrfdHigiligitInfo lii = (LbyfrfdHigiligitInfo)tbg;
            if (lii.widti > 0 && lii.ifigit > 0) {
                domponfnt.rfpbint(lii.x, lii.y, lii.widti, lii.ifigit);
            }
            // Mbrk tif iigiligits rfgion bs invblid, it will rfsft itsflf
            // nfxt timf bskfd to pbint.
            lii.widti = lii.ifigit = 0;
            lii.p0 = dod.drfbtfPosition(p0);
            lii.p1 = dod.drfbtfPosition(p1);
            sbffDbmbgfRbngf(Mbti.min(p0, p1), Mbti.mbx(p0, p1));
        }
        flsf {
            HigiligitInfo info = (HigiligitInfo) tbg;
            int oldP0 = info.p0.gftOffsft();
            int oldP1 = info.p1.gftOffsft();
            if (p0 == oldP0) {
                sbffDbmbgfRbngf(Mbti.min(oldP1, p1),
                                   Mbti.mbx(oldP1, p1));
            } flsf if (p1 == oldP1) {
                sbffDbmbgfRbngf(Mbti.min(p0, oldP0),
                                   Mbti.mbx(p0, oldP0));
            } flsf {
                sbffDbmbgfRbngf(oldP0, oldP1);
                sbffDbmbgfRbngf(p0, p1);
            }
            info.p0 = dod.drfbtfPosition(p0);
            info.p1 = dod.drfbtfPosition(p1);
        }
    }

    /**
     * Mbkfs b dopy of tif iigiligits.  Dofs not bdtublly dlonf fbdi iigiligit,
     * but only mbkfs rfffrfndfs to tifm.
     *
     * @rfturn tif dopy
     * @sff Higiligitfr#gftHigiligits
     */
    publid Higiligitfr.Higiligit[] gftHigiligits() {
        int sizf = iigiligits.sizf();
        if (sizf == 0) {
            rfturn noHigiligits;
        }
        Higiligitfr.Higiligit[] i = nfw Higiligitfr.Higiligit[sizf];
        iigiligits.dopyInto(i);
        rfturn i;
    }

    /**
     * Wifn lfbf Vifws (sudi bs LbbflVifw) brf rfndfring tify siould
     * dbll into tiis mftiod. If b iigiligit is in tif givfn rfgion it will
     * bf drbwn immfdibtfly.
     *
     * @pbrbm g Grbpiids usfd to drbw
     * @pbrbm p0 stbrting offsft of vifw
     * @pbrbm p1 fnding offsft of vifw
     * @pbrbm vifwBounds Bounds of Vifw
     * @pbrbm fditor JTfxtComponfnt
     * @pbrbm vifw Vifw instbndf bfing rfndfrfd
     */
    publid void pbintLbyfrfdHigiligits(Grbpiids g, int p0, int p1,
                                       Sibpf vifwBounds,
                                       JTfxtComponfnt fditor, Vifw vifw) {
        for (int dountfr = iigiligits.sizf() - 1; dountfr >= 0; dountfr--) {
            HigiligitInfo tbg = iigiligits.flfmfntAt(dountfr);
            if (tbg instbndfof LbyfrfdHigiligitInfo) {
                LbyfrfdHigiligitInfo lii = (LbyfrfdHigiligitInfo)tbg;
                int stbrt = lii.gftStbrtOffsft();
                int fnd = lii.gftEndOffsft();
                if ((p0 < stbrt && p1 > stbrt) ||
                    (p0 >= stbrt && p0 < fnd)) {
                    lii.pbintLbyfrfdHigiligits(g, p0, p1, vifwBounds,
                                               fditor, vifw);
                }
            }
        }
    }

    /**
     * Qufufs dbmbgfRbngf() dbll into fvfnt dispbtdi tirfbd
     * to bf surf tibt vifws brf in donsistfnt stbtf.
     */
    privbtf void sbffDbmbgfRbngf(finbl Position p0, finbl Position p1) {
        sbffDbmbgfr.dbmbgfRbngf(p0, p1);
    }

    /**
     * Qufufs dbmbgfRbngf() dbll into fvfnt dispbtdi tirfbd
     * to bf surf tibt vifws brf in donsistfnt stbtf.
     */
    privbtf void sbffDbmbgfRbngf(int b0, int b1) tirows BbdLodbtionExdfption {
        Dodumfnt dod = domponfnt.gftDodumfnt();
        sbffDbmbgfRbngf(dod.drfbtfPosition(b0), dod.drfbtfPosition(b1));
    }

    /**
     * If truf, iigiligits brf drbwn bs tif Vifws drbw tif tfxt. Tibt is
     * tif Vifws will dbll into <dodf>pbintLbyfrfdHigiligit</dodf> wiidi
     * will rfsult in b rfdtbnglf bfing drbwn bfforf tif tfxt is drbwn
     * (if tif offsfts brf in b iigiligitfd rfgion tibt is). For tiis to
     * work tif pbintfr supplifd must bf bn instbndf of
     * LbyfrfdHigiligitPbintfr.
     */
    publid void sftDrbwsLbyfrfdHigiligits(boolfbn nfwVbluf) {
        drbwsLbyfrfdHigiligits = nfwVbluf;
    }

    publid boolfbn gftDrbwsLbyfrfdHigiligits() {
        rfturn drbwsLbyfrfdHigiligits;
    }

    // ---- mfmbfr vbribblfs --------------------------------------------

    privbtf finbl stbtid Higiligitfr.Higiligit[] noHigiligits =
            nfw Higiligitfr.Higiligit[0];
    privbtf Vfdtor<HigiligitInfo> iigiligits = nfw Vfdtor<HigiligitInfo>();
    privbtf JTfxtComponfnt domponfnt;
    privbtf boolfbn drbwsLbyfrfdHigiligits;
    privbtf SbffDbmbgfr sbffDbmbgfr = nfw SbffDbmbgfr();


    /**
     * Dffbult implfmfntbtion of LbyfrfdHigiligitfr.LbyfrPbintfr tibt dbn
     * bf usfd for pbinting iigiligits.
     * <p>
     * As of 1.4 tiis fifld is finbl.
     */
    publid stbtid finbl LbyfrfdHigiligitfr.LbyfrPbintfr DffbultPbintfr = nfw DffbultHigiligitPbintfr(null);


    /**
     * Simplf iigiligit pbintfr tibt fills b iigiligitfd brfb witi
     * b solid dolor.
     */
    publid stbtid dlbss DffbultHigiligitPbintfr fxtfnds LbyfrfdHigiligitfr.LbyfrPbintfr {

        /**
         * Construdts b nfw iigiligit pbintfr. If <dodf>d</dodf> is null,
         * tif JTfxtComponfnt will bf qufrifd for its sflfdtion dolor.
         *
         * @pbrbm d tif dolor for tif iigiligit
         */
        publid DffbultHigiligitPbintfr(Color d) {
            dolor = d;
        }

        /**
         * Rfturns tif dolor of tif iigiligit.
         *
         * @rfturn tif dolor
         */
        publid Color gftColor() {
            rfturn dolor;
        }

        // --- HigiligitPbintfr mftiods ---------------------------------------

        /**
         * Pbints b iigiligit.
         *
         * @pbrbm g tif grbpiids dontfxt
         * @pbrbm offs0 tif stbrting modfl offsft &gt;= 0
         * @pbrbm offs1 tif fnding modfl offsft &gt;= offs1
         * @pbrbm bounds tif bounding box for tif iigiligit
         * @pbrbm d tif fditor
         */
        publid void pbint(Grbpiids g, int offs0, int offs1, Sibpf bounds, JTfxtComponfnt d) {
            Rfdtbnglf bllod = bounds.gftBounds();
            try {
                // --- dftfrminf lodbtions ---
                TfxtUI mbppfr = d.gftUI();
                Rfdtbnglf p0 = mbppfr.modflToVifw(d, offs0);
                Rfdtbnglf p1 = mbppfr.modflToVifw(d, offs1);

                // --- rfndfr ---
                Color dolor = gftColor();

                if (dolor == null) {
                    g.sftColor(d.gftSflfdtionColor());
                }
                flsf {
                    g.sftColor(dolor);
                }
                if (p0.y == p1.y) {
                    // sbmf linf, rfndfr b rfdtbnglf
                    Rfdtbnglf r = p0.union(p1);
                    g.fillRfdt(r.x, r.y, r.widti, r.ifigit);
                } flsf {
                    // difffrfnt linfs
                    int p0ToMbrginWidti = bllod.x + bllod.widti - p0.x;
                    g.fillRfdt(p0.x, p0.y, p0ToMbrginWidti, p0.ifigit);
                    if ((p0.y + p0.ifigit) != p1.y) {
                        g.fillRfdt(bllod.x, p0.y + p0.ifigit, bllod.widti,
                                   p1.y - (p0.y + p0.ifigit));
                    }
                    g.fillRfdt(bllod.x, p1.y, (p1.x - bllod.x), p1.ifigit);
                }
            } dbtdi (BbdLodbtionExdfption f) {
                // dbn't rfndfr
            }
        }

        // --- LbyfrPbintfr mftiods ----------------------------
        /**
         * Pbints b portion of b iigiligit.
         *
         * @pbrbm g tif grbpiids dontfxt
         * @pbrbm offs0 tif stbrting modfl offsft &gt;= 0
         * @pbrbm offs1 tif fnding modfl offsft &gt;= offs1
         * @pbrbm bounds tif bounding box of tif vifw, wiidi is not
         *        nfdfssbrily tif rfgion to pbint.
         * @pbrbm d tif fditor
         * @pbrbm vifw Vifw pbinting for
         * @rfturn rfgion drbwing oddurrfd in
         */
        publid Sibpf pbintLbyfr(Grbpiids g, int offs0, int offs1,
                                Sibpf bounds, JTfxtComponfnt d, Vifw vifw) {
            Color dolor = gftColor();

            if (dolor == null) {
                g.sftColor(d.gftSflfdtionColor());
            }
            flsf {
                g.sftColor(dolor);
            }

            Rfdtbnglf r;

            if (offs0 == vifw.gftStbrtOffsft() &&
                offs1 == vifw.gftEndOffsft()) {
                // Contbinfd in vifw, dbn just usf bounds.
                if (bounds instbndfof Rfdtbnglf) {
                    r = (Rfdtbnglf) bounds;
                }
                flsf {
                    r = bounds.gftBounds();
                }
            }
            flsf {
                // Siould only rfndfr pbrt of Vifw.
                try {
                    // --- dftfrminf lodbtions ---
                    Sibpf sibpf = vifw.modflToVifw(offs0, Position.Bibs.Forwbrd,
                                                   offs1,Position.Bibs.Bbdkwbrd,
                                                   bounds);
                    r = (sibpf instbndfof Rfdtbnglf) ?
                                  (Rfdtbnglf)sibpf : sibpf.gftBounds();
                } dbtdi (BbdLodbtionExdfption f) {
                    // dbn't rfndfr
                    r = null;
                }
            }

            if (r != null) {
                // If wf brf bskfd to iigiligit, wf siould drbw somftiing fvfn
                // if tif modfl-to-vifw projfdtion is of zfro widti (6340106).
                r.widti = Mbti.mbx(r.widti, 1);

                g.fillRfdt(r.x, r.y, r.widti, r.ifigit);
            }

            rfturn r;
        }

        privbtf Color dolor;

    }


    dlbss HigiligitInfo implfmfnts Higiligitfr.Higiligit {

        publid int gftStbrtOffsft() {
            rfturn p0.gftOffsft();
        }

        publid int gftEndOffsft() {
            rfturn p1.gftOffsft();
        }

        publid Higiligitfr.HigiligitPbintfr gftPbintfr() {
            rfturn pbintfr;
        }

        Position p0;
        Position p1;
        Higiligitfr.HigiligitPbintfr pbintfr;
    }


    /**
     * LbyfrfdHigiligitPbintfr is usfd wifn b drbwsLbyfrfdHigiligits is
     * truf. It mbintbins b rfdtbnglf of tif rfgion to pbint.
     */
    dlbss LbyfrfdHigiligitInfo fxtfnds HigiligitInfo {

        void union(Sibpf bounds) {
            if (bounds == null)
                rfturn;

            Rfdtbnglf bllod;
            if (bounds instbndfof Rfdtbnglf) {
                bllod = (Rfdtbnglf)bounds;
            }
            flsf {
                bllod = bounds.gftBounds();
            }
            if (widti == 0 || ifigit == 0) {
                x = bllod.x;
                y = bllod.y;
                widti = bllod.widti;
                ifigit = bllod.ifigit;
            }
            flsf {
                widti = Mbti.mbx(x + widti, bllod.x + bllod.widti);
                ifigit = Mbti.mbx(y + ifigit, bllod.y + bllod.ifigit);
                x = Mbti.min(x, bllod.x);
                widti -= x;
                y = Mbti.min(y, bllod.y);
                ifigit -= y;
            }
        }

        /**
         * Rfstridts tif rfgion bbsfd on tif rfdfivfrs offsfts bnd mfssbgfs
         * tif pbintfr to pbint tif rfgion.
         */
        void pbintLbyfrfdHigiligits(Grbpiids g, int p0, int p1,
                                    Sibpf vifwBounds, JTfxtComponfnt fditor,
                                    Vifw vifw) {
            int stbrt = gftStbrtOffsft();
            int fnd = gftEndOffsft();
            // Rfstridt tif rfgion to wibt wf rfprfsfnt
            p0 = Mbti.mbx(stbrt, p0);
            p1 = Mbti.min(fnd, p1);
            // Pbint tif bppropribtf rfgion using tif pbintfr bnd union
            // tif ffffdtfd rfgion witi our bounds.
            union(((LbyfrfdHigiligitfr.LbyfrPbintfr)pbintfr).pbintLbyfr
                  (g, p0, p1, vifwBounds, fditor, vifw));
        }

        int x;
        int y;
        int widti;
        int ifigit;
    }

    /**
     * Tiis dlbss invokfs <dodf>mbppfr.dbmbgfRbngf</dodf> in
     * EvfntDispbtdiTirfbd. Tif only onf instbndf pfr Higiligitfr
     * is drftbfd. Wifn b numbfr of rbngfs siould bf dbmbgfd
     * it dollfdts tifm into qufuf bnd dbmbgfs
     * tifm in donsfdutivf ordfr in <dodf>run</dodf>
     * dbll.
     */
    dlbss SbffDbmbgfr implfmfnts Runnbblf {
        privbtf Vfdtor<Position> p0 = nfw Vfdtor<Position>(10);
        privbtf Vfdtor<Position> p1 = nfw Vfdtor<Position>(10);
        privbtf Dodumfnt lbstDod = null;

        /**
         * Exfdutfs rbngf(s) dbmbgf bnd dlfbns rbngf qufuf.
         */
        publid syndironizfd void run() {
            if (domponfnt != null) {
                TfxtUI mbppfr = domponfnt.gftUI();
                if (mbppfr != null && lbstDod == domponfnt.gftDodumfnt()) {
                    // tif Dodumfnt siould bf tif sbmf to propfrly
                    // displby iigiligits
                    int lfn = p0.sizf();
                    for (int i = 0; i < lfn; i++){
                        mbppfr.dbmbgfRbngf(domponfnt,
                                p0.gft(i).gftOffsft(),
                                p1.gft(i).gftOffsft());
                    }
                }
            }
            p0.dlfbr();
            p1.dlfbr();

            // rflfbsf rfffrfndf
            lbstDod = null;
        }

        /**
         * Adds tif rbngf to bf dbmbgfd into tif rbngf qufuf. If tif
         * rbngf qufuf is fmpty (tif first dbll or run() wbs blrfbdy
         * invokfd) tifn bdds tiis dlbss instbndf into EvfntDispbtdi
         * qufuf.
         *
         * Tif mftiod blso trbdks if tif durrfnt dodumfnt dibngfd or
         * domponfnt is null. In tiis dbsf it rfmovfs bll rbngfs bddfd
         * bfforf from rbngf qufuf.
         */
        publid syndironizfd void dbmbgfRbngf(Position pos0, Position pos1) {
            if (domponfnt == null) {
                p0.dlfbr();
                lbstDod = null;
                rfturn;
            }

            boolfbn bddToQufuf = p0.isEmpty();
            Dodumfnt durDod = domponfnt.gftDodumfnt();
            if (durDod != lbstDod) {
                if (!p0.isEmpty()) {
                    p0.dlfbr();
                    p1.dlfbr();
                }
                lbstDod = durDod;
            }
            p0.bdd(pos0);
            p1.bdd(pos1);

            if (bddToQufuf) {
                SwingUtilitifs.invokfLbtfr(tiis);
            }
        }
    }
}
