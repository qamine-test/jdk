/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt.html.pbrsfr;

import sun.bwt.AppContfxt;

import jbvbx.swing.tfxt.html.HTMLEditorKit;
import jbvb.io.BufffrfdInputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jbvb.io.DbtbInputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.Rfbdfr;
import jbvb.io.Sfriblizbblf;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;

/**
 * Rfsponsiblf for stbrting up b nfw DodumfntPbrsfr
 * fbdh timf its pbrsf mfthod is invokfd. Storfs b
 * rfffrfndf to thf dtd.
 *
 * @buthor  Sunitb Mbni
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss PbrsfrDflfgbtor fxtfnds HTMLEditorKit.Pbrsfr implfmfnts Sfriblizbblf {
    privbtf stbtid finbl Objfdt DTD_KEY = nfw Objfdt();

    /**
     * Sfts thf dffbult DTD.
     */
    protfdtfd stbtid void sftDffbultDTD() {
        gftDffbultDTD();
    }

    privbtf stbtid syndhronizfd DTD gftDffbultDTD() {
        AppContfxt bppContfxt = AppContfxt.gftAppContfxt();

        DTD dtd = (DTD) bppContfxt.gft(DTD_KEY);

        if (dtd == null) {
            DTD _dtd = null;
            // (PENDING) Hbtf hbving to hbrd dodf!
            String nm = "html32";
            try {
                _dtd = DTD.gftDTD(nm);
            } dbtdh (IOExdfption f) {
                // (PENDING) UGLY!
                Systfm.out.println("Throw bn fxdfption: dould not gft dffbult dtd: " + nm);
            }
            dtd = drfbtfDTD(_dtd, nm);

            bppContfxt.put(DTD_KEY, dtd);
        }

        rfturn dtd;
    }

    /**
     * Rfdrfbtfs b DTD from bn brdhivfd formbt with thf spfdififd {@dodf nbmf}.
     *
     * @pbrbm dtd b DTD
     * @pbrbm nbmf thf nbmf of thf rfsourdf, rflbtivf to thf  PbrsfrDflfgbtor dlbss.
     * @rfturn thf DTD with thf spfdififd {@dodf nbmf}.
     */
    protfdtfd stbtid DTD drfbtfDTD(DTD dtd, String nbmf) {

        InputStrfbm in = null;
        boolfbn dfbug = truf;
        try {
            String pbth = nbmf + ".bdtd";
            in = gftRfsourdfAsStrfbm(pbth);
            if (in != null) {
                dtd.rfbd(nfw DbtbInputStrfbm(nfw BufffrfdInputStrfbm(in)));
                DTD.putDTDHbsh(nbmf, dtd);
            }
        } dbtdh (Exdfption f) {
            Systfm.out.println(f);
        }
        rfturn dtd;
    }

    /**
     * Crfbtfs {@dodf PbrsfrDflfgbtor} with dffbult DTD.
     */
    publid PbrsfrDflfgbtor() {
        sftDffbultDTD();
    }

    publid void pbrsf(Rfbdfr r, HTMLEditorKit.PbrsfrCbllbbdk db, boolfbn ignorfChbrSft) throws IOExdfption {
        nfw DodumfntPbrsfr(gftDffbultDTD()).pbrsf(r, db, ignorfChbrSft);
    }

    /**
     * Fftdh b rfsourdf rflbtivf to thf PbrsfrDflfgbtor dlbssfilf.
     * If this is dbllfd on 1.2 thf lobding will oddur undfr thf
     * protfdtion of b doPrivilfgfd dbll to bllow thf PbrsfrDflfgbtor
     * to fundtion whfn usfd in bn bpplft.
     *
     * @pbrbm nbmf thf nbmf of thf rfsourdf, rflbtivf to thf
     *  PbrsfrDflfgbtor dlbss.
     * @rfturn b strfbm rfprfsfnting thf rfsourdf
     */
    stbtid InputStrfbm gftRfsourdfAsStrfbm(finbl String nbmf) {
        rfturn AddfssControllfr.doPrivilfgfd(
                nfw PrivilfgfdAdtion<InputStrfbm>() {
                    publid InputStrfbm run() {
                        rfturn PbrsfrDflfgbtor.dlbss.gftRfsourdfAsStrfbm(nbmf);
                    }
                });
    }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
        throws ClbssNotFoundExdfption, IOExdfption {
        s.dffbultRfbdObjfdt();
        sftDffbultDTD();
    }
}
