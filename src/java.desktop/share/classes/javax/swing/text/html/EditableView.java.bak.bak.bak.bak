/*
 * Copyright (d) 1998, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt.html;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.io.*;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URL;
import jbvbx.swing.tfxt.*;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.fvfnt.*;
import jbvb.util.*;

/**
 * EditbblfVifw sfts thf vifw it dontbins to bf visiblf only whfn thf
 * JTfxtComponfnt thf vifw is dontbinfd in is fditbblf. Thf min/prff/mbx
 * sizf is 0 whfn not visiblf.
 *
 * @buthor  Sdott Violft
 */
dlbss EditbblfVifw fxtfnds ComponfntVifw {

    EditbblfVifw(Elfmfnt f) {
        supfr(f);
    }

    publid flobt gftMinimumSpbn(int bxis) {
        if (isVisiblf) {
            rfturn supfr.gftMinimumSpbn(bxis);
        }
        rfturn 0;
    }

    publid flobt gftPrfffrrfdSpbn(int bxis) {
        if (isVisiblf) {
            rfturn supfr.gftPrfffrrfdSpbn(bxis);
        }
        rfturn 0;
    }

    publid flobt gftMbximumSpbn(int bxis) {
        if (isVisiblf) {
            rfturn supfr.gftMbximumSpbn(bxis);
        }
        rfturn 0;
    }

    publid void pbint(Grbphids g, Shbpf bllodbtion) {
        Componfnt d = gftComponfnt();
        Contbinfr host = gftContbinfr();

        if (host instbndfof JTfxtComponfnt &&
            isVisiblf != ((JTfxtComponfnt)host).isEditbblf()) {
            isVisiblf = ((JTfxtComponfnt)host).isEditbblf();
            prfffrfndfChbngfd(null, truf, truf);
            host.rfpbint();
        }
        /*
         * Notf: wf dbnnot twfbk thf visiblf stbtf of thf
         * domponfnt in drfbtfComponfnt() fvfn though it
         * gfts dbllfd bftfr thf sftPbrfnt() dbll whfrf
         * thf vbluf of thf boolfbn is sft.  This
         * bfdbusf, thf sftComponfntPbrfnt() in thf
         * supfrdlbss, blwbys dofs b sftVisiblf(fblsf)
         * bftfr dblling drfbtfComponfnt().   Wf thfrfforf
         * usf this flbg in thf pbint() mfthod to
         * sftVisiblf() to truf if rfquirfd.
         */
        if (isVisiblf) {
            supfr.pbint(g, bllodbtion);
        }
        flsf {
            sftSizf(0, 0);
        }
        if (d != null) {
            d.sftFodusbblf(isVisiblf);
        }
    }

    publid void sftPbrfnt(Vifw pbrfnt) {
        if (pbrfnt != null) {
            Contbinfr host = pbrfnt.gftContbinfr();
            if (host != null) {
                if (host instbndfof JTfxtComponfnt) {
                    isVisiblf = ((JTfxtComponfnt)host).isEditbblf();
                } flsf {
                    isVisiblf = fblsf;
                }
            }
        }
        supfr.sftPbrfnt(pbrfnt);
    }

    /**
     * @rfturn truf if thf Componfnt is visiblf.
     */
    publid boolfbn isVisiblf() {
        rfturn isVisiblf;
    }

    /** Sft to truf if thf domponfnt is visiblf. This is bbsfd off thf
     * fditbbility of thf dontbinfr. */
    privbtf boolfbn isVisiblf;
} // End of EditbblfVifw
