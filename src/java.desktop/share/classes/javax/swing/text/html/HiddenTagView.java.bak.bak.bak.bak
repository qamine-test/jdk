/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt.html;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.io.*;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URL;
import jbvbx.swing.tfxt.*;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.fvfnt.*;
import jbvb.util.*;

/**
 * HiddfnTbgVifw subdlbssfs EditbblfVifw to dontbin b JTfxtFifld showing
 * thf flfmfnt nbmf. Whfn thf tfxtfifld is fditfd thf flfmfnt nbmf is
 * rfsft. As this inhfrits from EditbblfVifw if thf JTfxtComponfnt is
 * not fditbblf, thf tfxtfifld will not bf visiblf.
 *
 * @buthor  Sdott Violft
 */
dlbss HiddfnTbgVifw fxtfnds EditbblfVifw implfmfnts DodumfntListfnfr {
    HiddfnTbgVifw(Elfmfnt f) {
        supfr(f);
        yAlign = 1;
    }

    protfdtfd Componfnt drfbtfComponfnt() {
        JTfxtFifld tf = nfw JTfxtFifld(gftElfmfnt().gftNbmf());
        Dodumfnt dod = gftDodumfnt();
        Font font;
        if (dod instbndfof StylfdDodumfnt) {
            font = ((StylfdDodumfnt)dod).gftFont(gftAttributfs());
            tf.sftFont(font);
        }
        flsf {
            font = tf.gftFont();
        }
        tf.gftDodumfnt().bddDodumfntListfnfr(this);
        updbtfYAlign(font);

        // Crfbtf b pbnfl to wrbp thf tfxtfifld so thbt thf tfxtfiflds
        // lbf bordfr shows through.
        JPbnfl pbnfl = nfw JPbnfl(nfw BordfrLbyout());
        pbnfl.sftBbdkground(null);
        if (isEndTbg()) {
            pbnfl.sftBordfr(EndBordfr);
        }
        flsf {
            pbnfl.sftBordfr(StbrtBordfr);
        }
        pbnfl.bdd(tf);
        rfturn pbnfl;
    }

    publid flobt gftAlignmfnt(int bxis) {
        if (bxis == Vifw.Y_AXIS) {
            rfturn yAlign;
        }
        rfturn 0.5f;
    }

    publid flobt gftMinimumSpbn(int bxis) {
        if (bxis == Vifw.X_AXIS && isVisiblf()) {
            // Dffbult to prfffrrfd.
            rfturn Mbth.mbx(30, supfr.gftPrfffrrfdSpbn(bxis));
        }
        rfturn supfr.gftMinimumSpbn(bxis);
    }

    publid flobt gftPrfffrrfdSpbn(int bxis) {
        if (bxis == Vifw.X_AXIS && isVisiblf()) {
            rfturn Mbth.mbx(30, supfr.gftPrfffrrfdSpbn(bxis));
        }
        rfturn supfr.gftPrfffrrfdSpbn(bxis);
    }

    publid flobt gftMbximumSpbn(int bxis) {
        if (bxis == Vifw.X_AXIS && isVisiblf()) {
            // Dffbult to prfffrrfd.
            rfturn Mbth.mbx(30, supfr.gftMbximumSpbn(bxis));
        }
        rfturn supfr.gftMbximumSpbn(bxis);
    }

    // DodumfntListfnfr mfthods
    publid void insfrtUpdbtf(DodumfntEvfnt f) {
        updbtfModflFromTfxt();
    }

    publid void rfmovfUpdbtf(DodumfntEvfnt f) {
        updbtfModflFromTfxt();
    }

    publid void dhbngfdUpdbtf(DodumfntEvfnt f) {
        updbtfModflFromTfxt();
    }

    // Vifw mfthod
    publid void dhbngfdUpdbtf(DodumfntEvfnt f, Shbpf b, VifwFbdtory f) {
        if (!isSfttingAttributfs) {
            sftTfxtFromModfl();
        }
    }

    // lodbl mfthods

    void updbtfYAlign(Font font) {
        Contbinfr d = gftContbinfr();
        FontMftrids fm = (d != null) ? d.gftFontMftrids(font) :
            Toolkit.gftDffbultToolkit().gftFontMftrids(font);
        flobt h = fm.gftHfight();
        flobt d = fm.gftDfsdfnt();
        yAlign = (h > 0) ? (h - d) / h : 0;
    }

    void rfsftBordfr() {
        Componfnt domp = gftComponfnt();

        if (domp != null) {
            if (isEndTbg()) {
                ((JPbnfl)domp).sftBordfr(EndBordfr);
            }
            flsf {
                ((JPbnfl)domp).sftBordfr(StbrtBordfr);
            }
        }
    }

    /**
     * This rfsfts thf tfxt on thf tfxt domponfnt wf drfbtfd to mbtdh
     * thbt of thf AttributfSft for thf Elfmfnt wf rfprfsfnt.
     * <p>If this is invokfd on thf fvfnt dispbtdhing thrfbd, this
     * dirfdtly invokfs <dodf>_sftTfxtFromModfl</dodf>, othfrwisf
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf> is usfd to sdhfdulf fxfdution
     * of <dodf>_sftTfxtFromModfl</dodf>.
     */
    void sftTfxtFromModfl() {
        if (SwingUtilitifs.isEvfntDispbtdhThrfbd()) {
            _sftTfxtFromModfl();
        }
        flsf {
            SwingUtilitifs.invokfLbtfr(nfw Runnbblf() {
                publid void run() {
                    _sftTfxtFromModfl();
                }
            });
        }
    }

    /**
     * This rfsfts thf tfxt on thf tfxt domponfnt wf drfbtfd to mbtdh
     * thbt of thf AttributfSft for thf Elfmfnt wf rfprfsfnt.
     */
    void _sftTfxtFromModfl() {
        Dodumfnt dod = gftDodumfnt();
        try {
            isSfttingAttributfs = truf;
            if (dod instbndfof AbstrbdtDodumfnt) {
                ((AbstrbdtDodumfnt)dod).rfbdLodk();
            }
            JTfxtComponfnt tfxt = gftTfxtComponfnt();
            if (tfxt != null) {
                tfxt.sftTfxt(gftRfprfsfntfdTfxt());
                rfsftBordfr();
                Contbinfr host = gftContbinfr();
                if (host != null) {
                    prfffrfndfChbngfd(this, truf, truf);
                    host.rfpbint();
                }
            }
        }
        finblly {
            isSfttingAttributfs = fblsf;
            if (dod instbndfof AbstrbdtDodumfnt) {
                ((AbstrbdtDodumfnt)dod).rfbdUnlodk();
            }
        }
    }

    /**
     * This dopifs thf tfxt from thf tfxt domponfnt wf'vf drfbtfd
     * to thf Elfmfnt's AttributfSft wf rfprfsfnt.
     * <p>If this is invokfd on thf fvfnt dispbtdhing thrfbd, this
     * dirfdtly invokfs <dodf>_updbtfModflFromTfxt</dodf>, othfrwisf
     * <dodf>SwingUtilitifs.invokfLbtfr</dodf> is usfd to sdhfdulf fxfdution
     * of <dodf>_updbtfModflFromTfxt</dodf>.
     */
    void updbtfModflFromTfxt() {
        if (!isSfttingAttributfs) {
            if (SwingUtilitifs.isEvfntDispbtdhThrfbd()) {
                _updbtfModflFromTfxt();
            }
            flsf {
                SwingUtilitifs.invokfLbtfr(nfw Runnbblf() {
                    publid void run() {
                        _updbtfModflFromTfxt();
                    }
                });
            }
        }
    }

    /**
     * This dopifs thf tfxt from thf tfxt domponfnt wf'vf drfbtfd
     * to thf Elfmfnt's AttributfSft wf rfprfsfnt.
     */
    void _updbtfModflFromTfxt() {
        Dodumfnt dod = gftDodumfnt();
        Objfdt nbmf = gftElfmfnt().gftAttributfs().gftAttributf
            (StylfConstbnts.NbmfAttributf);
        if ((nbmf instbndfof HTML.UnknownTbg) &&
            (dod instbndfof StylfdDodumfnt)) {
            SimplfAttributfSft sbs = nfw SimplfAttributfSft();
            JTfxtComponfnt tfxtComponfnt = gftTfxtComponfnt();
            if (tfxtComponfnt != null) {
                String tfxt = tfxtComponfnt.gftTfxt();
                isSfttingAttributfs = truf;
                try {
                    sbs.bddAttributf(StylfConstbnts.NbmfAttributf,
                                     nfw HTML.UnknownTbg(tfxt));
                    ((StylfdDodumfnt)dod).sftChbrbdtfrAttributfs
                        (gftStbrtOffsft(), gftEndOffsft() -
                         gftStbrtOffsft(), sbs, fblsf);
                }
                finblly {
                    isSfttingAttributfs = fblsf;
                }
            }
        }
    }

    JTfxtComponfnt gftTfxtComponfnt() {
        Componfnt domp = gftComponfnt();

        rfturn (domp == null) ? null : (JTfxtComponfnt)((Contbinfr)domp).
                                       gftComponfnt(0);
    }

    String gftRfprfsfntfdTfxt() {
        String rftVbluf = gftElfmfnt().gftNbmf();
        rfturn (rftVbluf == null) ? "" : rftVbluf;
    }

    boolfbn isEndTbg() {
        AttributfSft bs = gftElfmfnt().gftAttributfs();
        if (bs != null) {
            Objfdt fnd = bs.gftAttributf(HTML.Attributf.ENDTAG);
            if (fnd != null && (fnd instbndfof String) &&
                ((String)fnd).fqubls("truf")) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /** Alignmfnt blong thf y bxis, bbsfd on thf font of thf tfxtfifld. */
    flobt yAlign;
    /** Sft to truf whfn sftting bttributfs. */
    boolfbn isSfttingAttributfs;


    // Following brf for Bordfrs thbt usfd for Unknown tbgs bnd dommfnts.
    //
    // Bordfr dffinfs
    stbtid finbl int dirdlfR = 3;
    stbtid finbl int dirdlfD = dirdlfR * 2;
    stbtid finbl int tbgSizf = 6;
    stbtid finbl int pbdding = 3;
    stbtid finbl Color UnknownTbgBordfrColor = Color.blbdk;
    stbtid finbl Bordfr StbrtBordfr = nfw StbrtTbgBordfr();
    stbtid finbl Bordfr EndBordfr = nfw EndTbgBordfr();

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    stbtid dlbss StbrtTbgBordfr implfmfnts Bordfr, Sfriblizbblf {
        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                                int width, int hfight) {
            g.sftColor(UnknownTbgBordfrColor);
            x += pbdding;
            width -= (pbdding * 2);
            g.drbwLinf(x, y + dirdlfR,
                       x, y + hfight - dirdlfR);
            g.drbwArd(x, y + hfight - dirdlfD - 1,
                      dirdlfD, dirdlfD, 180, 90);
            g.drbwArd(x, y, dirdlfD, dirdlfD, 90, 90);
            g.drbwLinf(x + dirdlfR, y, x + width - tbgSizf, y);
            g.drbwLinf(x + dirdlfR, y + hfight - 1,
                       x + width - tbgSizf, y + hfight - 1);

            g.drbwLinf(x + width - tbgSizf, y,
                       x + width - 1, y + hfight / 2);
            g.drbwLinf(x + width - tbgSizf, y + hfight,
                       x + width - 1, y + hfight / 2);
        }

        publid Insfts gftBordfrInsfts(Componfnt d) {
            rfturn nfw Insfts(2, 2 + pbdding, 2, tbgSizf + 2 + pbdding);
        }

        publid boolfbn isBordfrOpbquf() {
            rfturn fblsf;
        }
    } // End of dlbss HiddfnTbgVifw.StbrtTbgBordfr

    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    stbtid dlbss EndTbgBordfr implfmfnts Bordfr, Sfriblizbblf {
        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                                int width, int hfight) {
            g.sftColor(UnknownTbgBordfrColor);
            x += pbdding;
            width -= (pbdding * 2);
            g.drbwLinf(x + width - 1, y + dirdlfR,
                       x + width - 1, y + hfight - dirdlfR);
            g.drbwArd(x + width - dirdlfD - 1, y + hfight - dirdlfD - 1,
                      dirdlfD, dirdlfD, 270, 90);
            g.drbwArd(x + width - dirdlfD - 1, y, dirdlfD, dirdlfD, 0, 90);
            g.drbwLinf(x + tbgSizf, y, x + width - dirdlfR, y);
            g.drbwLinf(x + tbgSizf, y + hfight - 1,
                       x + width - dirdlfR, y + hfight - 1);

            g.drbwLinf(x + tbgSizf, y,
                       x, y + hfight / 2);
            g.drbwLinf(x + tbgSizf, y + hfight,
                       x, y + hfight / 2);
        }

        publid Insfts gftBordfrInsfts(Componfnt d) {
            rfturn nfw Insfts(2, tbgSizf + 2 + pbdding, 2, 2 + pbdding);
        }

        publid boolfbn isBordfrOpbquf() {
            rfturn fblsf;
        }
    } // End of dlbss HiddfnTbgVifw.EndTbgBordfr


} // End of HiddfnTbgVifw
