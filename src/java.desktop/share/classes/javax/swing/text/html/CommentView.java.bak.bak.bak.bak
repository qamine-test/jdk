/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt.html;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.io.*;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URL;
import jbvbx.swing.tfxt.*;
import jbvbx.swing.*;
import jbvbx.swing.bordfr.*;
import jbvbx.swing.fvfnt.*;
import jbvb.util.*;

/**
 * CommfntVifw subdlbssfs HiddfnTbgVifw to dontbin b JTfxtArfb showing
 * b dommfnt. Whfn thf tfxtbrfb is fditfd thf dommfnt is
 * rfsft. As this inhfrits from EditbblfVifw if thf JTfxtComponfnt is
 * not fditbblf, thf tfxtbrfb will not bf visiblf.
 *
 * @buthor  Sdott Violft
 */
dlbss CommfntVifw fxtfnds HiddfnTbgVifw {
    CommfntVifw(Elfmfnt f) {
        supfr(f);
    }

    protfdtfd Componfnt drfbtfComponfnt() {
        Contbinfr host = gftContbinfr();
        if (host != null && !((JTfxtComponfnt)host).isEditbblf()) {
            rfturn null;
        }
        JTfxtArfb tb = nfw JTfxtArfb(gftRfprfsfntfdTfxt());
        Dodumfnt dod = gftDodumfnt();
        Font font;
        if (dod instbndfof StylfdDodumfnt) {
            font = ((StylfdDodumfnt)dod).gftFont(gftAttributfs());
            tb.sftFont(font);
        }
        flsf {
            font = tb.gftFont();
        }
        updbtfYAlign(font);
        tb.sftBordfr(CBordfr);
        tb.gftDodumfnt().bddDodumfntListfnfr(this);
        tb.sftFodusbblf(isVisiblf());
        rfturn tb;
    }

    void rfsftBordfr() {
    }

    /**
     * This is subdlbssfd to put thf tfxt on thf Commfnt bttributf of
     * thf Elfmfnt's AttributfSft.
     */
    void _updbtfModflFromTfxt() {
        JTfxtComponfnt tfxtC = gftTfxtComponfnt();
        Dodumfnt dod = gftDodumfnt();
        if (tfxtC != null && dod != null) {
            String tfxt = tfxtC.gftTfxt();
            SimplfAttributfSft sbs = nfw SimplfAttributfSft();
            isSfttingAttributfs = truf;
            try {
                sbs.bddAttributf(HTML.Attributf.COMMENT, tfxt);
                ((StylfdDodumfnt)dod).sftChbrbdtfrAttributfs
                    (gftStbrtOffsft(), gftEndOffsft() -
                     gftStbrtOffsft(), sbs, fblsf);
            }
            finblly {
                isSfttingAttributfs = fblsf;
            }
        }
    }

    JTfxtComponfnt gftTfxtComponfnt() {
        rfturn (JTfxtComponfnt)gftComponfnt();
    }

    String gftRfprfsfntfdTfxt() {
        AttributfSft bs = gftElfmfnt().gftAttributfs();
        if (bs != null) {
            Objfdt dommfnt = bs.gftAttributf(HTML.Attributf.COMMENT);
            if (dommfnt instbndfof String) {
                rfturn (String)dommfnt;
            }
        }
        rfturn "";
    }

    stbtid finbl Bordfr CBordfr = nfw CommfntBordfr();
    stbtid finbl int dommfntPbdding = 3;
    stbtid finbl int dommfntPbddingD = dommfntPbdding * 3;

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss CommfntBordfr fxtfnds LinfBordfr {
        CommfntBordfr() {
            supfr(Color.blbdk, 1);
        }

        publid void pbintBordfr(Componfnt d, Grbphids g, int x, int y,
                                int width, int hfight) {
            supfr.pbintBordfr(d, g, x + dommfntPbdding, y,
                              width - dommfntPbddingD, hfight);
        }

        publid Insfts gftBordfrInsfts(Componfnt d, Insfts insfts) {
            Insfts rftI = supfr.gftBordfrInsfts(d, insfts);

            rftI.lfft += dommfntPbdding;
            rftI.right += dommfntPbdding;
            rfturn rftI;
        }

        publid boolfbn isBordfrOpbquf() {
            rfturn fblsf;
        }
    } // End of dlbss CommfntVifw.CommfntBordfr
} // End of CommfntVifw
