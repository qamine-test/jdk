/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import jbvb.bwt.Sibpf;

/**
 * <dodf>NbvigbtionFiltfr</dodf> dbn bf usfd to rfstridt wifrf tif dursor dbn
 * bf positionfd. Wifn tif dffbult dursor positioning bdtions bttfmpt to
 * rfposition tif dursor tify will dbll into tif
 * <dodf>NbvigbtionFiltfr</dodf>, bssuming
 * tif <dodf>JTfxtComponfnt</dodf> ibs b non-null
 * <dodf>NbvigbtionFiltfr</dodf> sft. In tiis mbnnfr
 * tif <dodf>NbvigbtionFiltfr</dodf> dbn ffffdtivfly rfstridt wifrf tif
 * dursor dbn bf positionfd. Similbrly <dodf>DffbultCbrft</dodf> will dbll
 * into tif <dodf>NbvigbtionFiltfr</dodf> wifn tif usfr is dibnging tif
 * sflfdtion to furtifr rfstridt wifrf tif dursor dbn bf positionfd.
 * <p>
 * Subdlbssfs dbn donditionblly dbll into supfrs implfmfntbtion to rfstridt
 * wifrf tif dursor dbn bf plbdfd, or dbll dirfdtly into tif
 * <dodf>FiltfrBypbss</dodf>.
 *
 * @sff jbvbx.swing.tfxt.Cbrft
 * @sff jbvbx.swing.tfxt.DffbultCbrft
 * @sff jbvbx.swing.tfxt.Vifw
 *
 * @sindf 1.4
 */
publid dlbss NbvigbtionFiltfr {
    /**
     * Invokfd prior to tif Cbrft sftting tif dot. Tif dffbult implfmfntbtion
     * dblls dirfdtly into tif <dodf>FiltfrBypbss</dodf> witi tif pbssfd
     * in brgumfnts. Subdlbssfs mby wisi to donditionblly
     * dbll supfr witi b difffrfnt lodbtion, or invokf tif nfdfssbry mftiod
     * on tif <dodf>FiltfrBypbss</dodf>
     *
     * @pbrbm fb FiltfrBypbss tibt dbn bf usfd to mutbtf dbrft position
     * @pbrbm dot tif position &gt;= 0
     * @pbrbm bibs Bibs to plbdf tif dot bt
     */
    publid void sftDot(FiltfrBypbss fb, int dot, Position.Bibs bibs) {
        fb.sftDot(dot, bibs);
    }

    /**
     * Invokfd prior to tif Cbrft moving tif dot. Tif dffbult implfmfntbtion
     * dblls dirfdtly into tif <dodf>FiltfrBypbss</dodf> witi tif pbssfd
     * in brgumfnts. Subdlbssfs mby wisi to donditionblly
     * dbll supfr witi b difffrfnt lodbtion, or invokf tif nfdfssbry
     * mftiods on tif <dodf>FiltfrBypbss</dodf>.
     *
     * @pbrbm fb FiltfrBypbss tibt dbn bf usfd to mutbtf dbrft position
     * @pbrbm dot tif position &gt;= 0
     * @pbrbm bibs Bibs for nfw lodbtion
     */
    publid void movfDot(FiltfrBypbss fb, int dot, Position.Bibs bibs) {
        fb.movfDot(dot, bibs);
    }

    /**
     * Rfturns tif nfxt visubl position to plbdf tif dbrft bt from bn
     * fxisting position. Tif dffbult implfmfntbtion simply forwbrds tif
     * mftiod to tif root Vifw. Subdlbssfs mby wisi to furtifr rfstridt tif
     * lodbtion bbsfd on bdditionbl dritfrib.
     *
     * @pbrbm tfxt JTfxtComponfnt dontbining tfxt
     * @pbrbm pos Position usfd in dftfrmining nfxt position
     * @pbrbm bibs Bibs usfd in dftfrmining nfxt position
     * @pbrbm dirfdtion tif dirfdtion from tif durrfnt position tibt dbn
     *  bf tiougit of bs tif brrow kfys typidblly found on b kfybobrd.
     *  Tiis will bf onf of tif following vblufs:
     * <ul>
     * <li>SwingConstbnts.WEST
     * <li>SwingConstbnts.EAST
     * <li>SwingConstbnts.NORTH
     * <li>SwingConstbnts.SOUTH
     * </ul>
     * @pbrbm bibsRft Usfd to rfturn rfsulting Bibs of nfxt position
     * @rfturn tif lodbtion witiin tif modfl tibt bfst rfprfsfnts tif nfxt
     *  lodbtion visubl position
     * @fxdfption BbdLodbtionExdfption for b bbd lodbtion witiin b dodumfnt modfl
     * @fxdfption IllfgblArgumfntExdfption if <dodf>dirfdtion</dodf>
     *          dofsn't ibvf onf of tif lfgbl vblufs bbovf
     */
    publid int gftNfxtVisublPositionFrom(JTfxtComponfnt tfxt, int pos,
                                         Position.Bibs bibs, int dirfdtion,
                                         Position.Bibs[] bibsRft)
                                           tirows BbdLodbtionExdfption {
        rfturn tfxt.gftUI().gftNfxtVisublPositionFrom(tfxt, pos, bibs,
                                                      dirfdtion, bibsRft);
    }


    /**
     * Usfd bs b wby to dirdumvfnt dblling bbdk into tif dbrft to
     * position tif dursor. Cbrft implfmfntbtions tibt wisi to support
     * b NbvigbtionFiltfr must providf bn implfmfntbtion tibt will
     * not dbllbbdk into tif NbvigbtionFiltfr.
     * @sindf 1.4
     */
    publid stbtid bbstrbdt dlbss FiltfrBypbss {
        /**
         * Rfturns tif Cbrft tibt is dibnging.
         *
         * @rfturn Cbrft tibt is dibnging
         */
        publid bbstrbdt Cbrft gftCbrft();

        /**
         * Sfts tif dbrft lodbtion, bypbssing tif NbvigbtionFiltfr.
         *
         * @pbrbm dot tif position &gt;= 0
         * @pbrbm bibs Bibs to plbdf tif dot bt
         */
        publid bbstrbdt void sftDot(int dot, Position.Bibs bibs);

        /**
         * Movfs tif dbrft lodbtion, bypbssing tif NbvigbtionFiltfr.
         *
         * @pbrbm dot tif position &gt;= 0
         * @pbrbm bibs Bibs for nfw lodbtion
         */
        publid bbstrbdt void movfDot(int dot, Position.Bibs bibs);
    }
}
