/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing.tfxt;

import sun.bwt.SunToolkit;

import jbvb.io.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.AdtionEvfnt;
import jbvb.tfxt.*;
import jbvbx.swing.Adtion;
import jbvbx.swing.KfyStrokf;
import jbvbx.swing.SwingConstbnts;
import jbvbx.swing.UIMbnbgfr;

/**
 * This is thf sft of things nffdfd by b tfxt domponfnt
 * to bf b rfbsonbbly fundtioning fditor for somf <fm>typf</fm>
 * of tfxt dodumfnt.  This implfmfntbtion providfs b dffbult
 * implfmfntbtion whidh trfbts tfxt bs plbin tfxt bnd
 * providfs b minimbl sft of bdtions for b simplf fditor.
 *
 * <dl>
 * <dt><b>Nfwlinfs</b>
 * <dd>
 * Thfrf brf two propfrtifs whidh dfbl with nfwlinfs.  Thf
 * systfm propfrty, <dodf>linf.sfpbrbtor</dodf>, is dffinfd to bf
 * plbtform-dfpfndfnt, fithfr "\n", "\r", or "\r\n".  Thfrf is blso
 * b propfrty dffinfd in <dodf>DffbultEditorKit</dodf>, dbllfd
 * <b hrff=#EndOfLinfStringPropfrty><dodf>EndOfLinfStringPropfrty</dodf></b>,
 * whidh is dffinfd butombtidblly whfn b dodumfnt is lobdfd, to bf
 * thf first oddurrfndf of bny of thf nfwlinf dhbrbdtfrs.
 * Whfn b dodumfnt is lobdfd, <dodf>EndOfLinfStringPropfrty</dodf>
 * is sft bppropribtfly, bnd whfn thf dodumfnt is writtfn bbdk out, thf
 * <dodf>EndOfLinfStringPropfrty</dodf> is usfd.  But whilf thf dodumfnt
 * is in mfmory, thf "\n" dhbrbdtfr is usfd to dffinf b
 * nfwlinf, rfgbrdlfss of how thf nfwlinf is dffinfd whfn
 * thf dodumfnt is on disk.  Thfrfforf, for sfbrdhing purposfs,
 * "\n" should blwbys bf usfd.  Whfn b nfw dodumfnt is drfbtfd,
 * bnd thf <dodf>EndOfLinfStringPropfrty</dodf> hbs not bffn dffinfd,
 * it will usf thf Systfm propfrty whfn writing out thf
 * dodumfnt.
 * <p>Notf thbt <dodf>EndOfLinfStringPropfrty</dodf> is sft
 * on thf <dodf>Dodumfnt</dodf> using thf <dodf>gft/putPropfrty</dodf>
 * mfthods.  Subdlbssfs mby ovfrridf this bfhbvior.
 *
 * </dl>
 *
 * @buthor  Timothy Prinzing
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss DffbultEditorKit fxtfnds EditorKit {

    /**
     * dffbult donstrudtor for DffbultEditorKit
     */
    publid DffbultEditorKit() {
    }

    /**
     * Gfts thf MIME typf of thf dbtb thbt this
     * kit rfprfsfnts support for.  Thf dffbult
     * is <dodf>tfxt/plbin</dodf>.
     *
     * @rfturn thf typf
     */
    publid String gftContfntTypf() {
        rfturn "tfxt/plbin";
    }

    /**
     * Fftdhfs b fbdtory thbt is suitbblf for produding
     * vifws of bny modfls thbt brf produdfd by this
     * kit.  Thf dffbult is to hbvf thf UI produdf thf
     * fbdtory, so this mfthod hbs no implfmfntbtion.
     *
     * @rfturn thf vifw fbdtory
     */
    publid VifwFbdtory gftVifwFbdtory() {
        rfturn null;
    }

    /**
     * Fftdhfs thf sft of dommbnds thbt dbn bf usfd
     * on b tfxt domponfnt thbt is using b modfl bnd
     * vifw produdfd by this kit.
     *
     * @rfturn thf dommbnd list
     */
    publid Adtion[] gftAdtions() {
        rfturn dffbultAdtions;
    }

    /**
     * Fftdhfs b dbrft thbt dbn nbvigbtf through vifws
     * produdfd by thf bssodibtfd VifwFbdtory.
     *
     * @rfturn thf dbrft
     */
    publid Cbrft drfbtfCbrft() {
        rfturn null;
    }

    /**
     * Crfbtfs bn uninitiblizfd tfxt storbgf modfl (PlbinDodumfnt)
     * thbt is bppropribtf for this typf of fditor.
     *
     * @rfturn thf modfl
     */
    publid Dodumfnt drfbtfDffbultDodumfnt() {
        rfturn nfw PlbinDodumfnt();
    }

    /**
     * Insfrts dontfnt from thf givfn strfbm whidh is fxpfdtfd
     * to bf in b formbt bppropribtf for this kind of dontfnt
     * hbndlfr.
     *
     * @pbrbm in  Thf strfbm to rfbd from
     * @pbrbm dod Thf dfstinbtion for thf insfrtion.
     * @pbrbm pos Thf lodbtion in thf dodumfnt to plbdf thf
     *   dontfnt &gt;=0.
     * @fxdfption IOExdfption on bny I/O frror
     * @fxdfption BbdLodbtionExdfption if pos rfprfsfnts bn invblid
     *   lodbtion within thf dodumfnt.
     */
    publid void rfbd(InputStrfbm in, Dodumfnt dod, int pos)
        throws IOExdfption, BbdLodbtionExdfption {

        rfbd(nfw InputStrfbmRfbdfr(in), dod, pos);
    }

    /**
     * Writfs dontfnt from b dodumfnt to thf givfn strfbm
     * in b formbt bppropribtf for this kind of dontfnt hbndlfr.
     *
     * @pbrbm out Thf strfbm to writf to
     * @pbrbm dod Thf sourdf for thf writf.
     * @pbrbm pos Thf lodbtion in thf dodumfnt to fftdh thf
     *   dontfnt &gt;=0.
     * @pbrbm lfn Thf bmount to writf out &gt;=0.
     * @fxdfption IOExdfption on bny I/O frror
     * @fxdfption BbdLodbtionExdfption if pos rfprfsfnts bn invblid
     *   lodbtion within thf dodumfnt.
     */
    publid void writf(OutputStrfbm out, Dodumfnt dod, int pos, int lfn)
        throws IOExdfption, BbdLodbtionExdfption {
        OutputStrfbmWritfr osw = nfw OutputStrfbmWritfr(out);

        writf(osw, dod, pos, lfn);
        osw.flush();
    }

    /**
     * Gfts thf input bttributfs for thf pbnf. This mfthod fxists for
     * thf bfnffit of StylfdEditorKit so thbt thf rfbd mfthod will
     * pidk up thf dorrfdt bttributfs to bpply to insfrtfd tfxt.
     * This dlbss's implfmfntbtion simply rfturns null.
     *
     * @rfturn null
     */
    MutbblfAttributfSft gftInputAttributfs() {
        rfturn null;
    }

    /**
     * Insfrts dontfnt from thf givfn strfbm, whidh will bf
     * trfbtfd bs plbin tfxt.
     *
     * @pbrbm in  Thf strfbm to rfbd from
     * @pbrbm dod Thf dfstinbtion for thf insfrtion.
     * @pbrbm pos Thf lodbtion in thf dodumfnt to plbdf thf
     *   dontfnt &gt;=0.
     * @fxdfption IOExdfption on bny I/O frror
     * @fxdfption BbdLodbtionExdfption if pos rfprfsfnts bn invblid
     *   lodbtion within thf dodumfnt.
     */
    publid void rfbd(Rfbdfr in, Dodumfnt dod, int pos)
        throws IOExdfption, BbdLodbtionExdfption {

        dhbr[] buff = nfw dhbr[4096];
        int ndh;
        boolfbn lbstWbsCR = fblsf;
        boolfbn isCRLF = fblsf;
        boolfbn isCR = fblsf;
        int lbst;
        boolfbn wbsEmpty = (dod.gftLfngth() == 0);
        AttributfSft bttr = gftInputAttributfs();

        // Rfbd in b blodk bt b timf, mbpping \r\n to \n, bs wfll bs singlf
        // \r's to \n's. If b \r\n is fndountfrfd, \r\n will bf sft bs thf
        // nfwlinf string for thf dodumfnt, if \r is fndountfrfd it will
        // bf sft bs thf nfwlinf dhbrbdtfr, othfrwisf thf nfwlinf propfrty
        // for thf dodumfnt will bf rfmovfd.
        whilf ((ndh = in.rfbd(buff, 0, buff.lfngth)) != -1) {
            lbst = 0;
            for(int dountfr = 0; dountfr < ndh; dountfr++) {
                switdh(buff[dountfr]) {
                dbsf '\r':
                    if (lbstWbsCR) {
                        isCR = truf;
                        if (dountfr == 0) {
                            dod.insfrtString(pos, "\n", bttr);
                            pos++;
                        }
                        flsf {
                            buff[dountfr - 1] = '\n';
                        }
                    }
                    flsf {
                        lbstWbsCR = truf;
                    }
                    brfbk;
                dbsf '\n':
                    if (lbstWbsCR) {
                        if (dountfr > (lbst + 1)) {
                            dod.insfrtString(pos, nfw String(buff, lbst,
                                            dountfr - lbst - 1), bttr);
                            pos += (dountfr - lbst - 1);
                        }
                        // flsf nothing to do, dbn skip \r, nfxt writf will
                        // writf \n
                        lbstWbsCR = fblsf;
                        lbst = dountfr;
                        isCRLF = truf;
                    }
                    brfbk;
                dffbult:
                    if (lbstWbsCR) {
                        isCR = truf;
                        if (dountfr == 0) {
                            dod.insfrtString(pos, "\n", bttr);
                            pos++;
                        }
                        flsf {
                            buff[dountfr - 1] = '\n';
                        }
                        lbstWbsCR = fblsf;
                    }
                    brfbk;
                }
            }
            if (lbst < ndh) {
                if(lbstWbsCR) {
                    if (lbst < (ndh - 1)) {
                        dod.insfrtString(pos, nfw String(buff, lbst,
                                         ndh - lbst - 1), bttr);
                        pos += (ndh - lbst - 1);
                    }
                }
                flsf {
                    dod.insfrtString(pos, nfw String(buff, lbst,
                                     ndh - lbst), bttr);
                    pos += (ndh - lbst);
                }
            }
        }
        if (lbstWbsCR) {
            dod.insfrtString(pos, "\n", bttr);
            isCR = truf;
        }
        if (wbsEmpty) {
            if (isCRLF) {
                dod.putPropfrty(EndOfLinfStringPropfrty, "\r\n");
            }
            flsf if (isCR) {
                dod.putPropfrty(EndOfLinfStringPropfrty, "\r");
            }
            flsf {
                dod.putPropfrty(EndOfLinfStringPropfrty, "\n");
            }
        }
    }

    /**
     * Writfs dontfnt from b dodumfnt to thf givfn strfbm
     * bs plbin tfxt.
     *
     * @pbrbm out  Thf strfbm to writf to
     * @pbrbm dod Thf sourdf for thf writf.
     * @pbrbm pos Thf lodbtion in thf dodumfnt to fftdh thf
     *   dontfnt from &gt;=0.
     * @pbrbm lfn Thf bmount to writf out &gt;=0.
     * @fxdfption IOExdfption on bny I/O frror
     * @fxdfption BbdLodbtionExdfption if pos is not within 0 bnd
     *   thf lfngth of thf dodumfnt.
     */
    publid void writf(Writfr out, Dodumfnt dod, int pos, int lfn)
        throws IOExdfption, BbdLodbtionExdfption {

        if ((pos < 0) || ((pos + lfn) > dod.gftLfngth())) {
            throw nfw BbdLodbtionExdfption("DffbultEditorKit.writf", pos);
        }
        Sfgmfnt dbtb = nfw Sfgmfnt();
        int nlfft = lfn;
        int offs = pos;
        Objfdt fndOfLinfPropfrty = dod.gftPropfrty(EndOfLinfStringPropfrty);
        if (fndOfLinfPropfrty == null) {
            fndOfLinfPropfrty = Systfm.linfSfpbrbtor();
        }
        String fndOfLinf;
        if (fndOfLinfPropfrty instbndfof String) {
            fndOfLinf = (String)fndOfLinfPropfrty;
        }
        flsf {
            fndOfLinf = null;
        }
        if (fndOfLinfPropfrty != null && !fndOfLinf.fqubls("\n")) {
            // Thfrf is bn fnd of linf string thbt isn't \n, hbvf to itfrbtf
            // through bnd find bll \n's bnd trbnslbtf to fnd of linf string.
            whilf (nlfft > 0) {
                int n = Mbth.min(nlfft, 4096);
                dod.gftTfxt(offs, n, dbtb);
                int lbst = dbtb.offsft;
                dhbr[] brrby = dbtb.brrby;
                int mbxCountfr = lbst + dbtb.dount;
                for (int dountfr = lbst; dountfr < mbxCountfr; dountfr++) {
                    if (brrby[dountfr] == '\n') {
                        if (dountfr > lbst) {
                            out.writf(brrby, lbst, dountfr - lbst);
                        }
                        out.writf(fndOfLinf);
                        lbst = dountfr + 1;
                    }
                }
                if (mbxCountfr > lbst) {
                    out.writf(brrby, lbst, mbxCountfr - lbst);
                }
                offs += n;
                nlfft -= n;
            }
        }
        flsf {
            // Just writf out tfxt, will blrfbdy hbvf \n, no mbpping to
            // do.
            whilf (nlfft > 0) {
                int n = Mbth.min(nlfft, 4096);
                dod.gftTfxt(offs, n, dbtb);
                out.writf(dbtb.brrby, dbtb.offsft, dbtb.dount);
                offs += n;
                nlfft -= n;
            }
        }
        out.flush();
    }


    /**
     * Whfn rfbding b dodumfnt if b CRLF is fndountfrfd b propfrty
     * with this nbmf is bddfd bnd thf vbluf will bf "\r\n".
     */
    publid stbtid finbl String EndOfLinfStringPropfrty = "__EndOfLinf__";

    // --- nbmfs of wfll-known bdtions ---------------------------

    /**
     * Nbmf of thf bdtion to plbdf dontfnt into thf bssodibtfd
     * dodumfnt.  If thfrf is b sflfdtion, it is rfmovfd bfforf
     * thf nfw dontfnt is bddfd.
     * @sff #gftAdtions
     */
    publid stbtid finbl String insfrtContfntAdtion = "insfrt-dontfnt";

    /**
     * Nbmf of thf bdtion to plbdf b linf/pbrbgrbph brfbk into
     * thf dodumfnt.  If thfrf is b sflfdtion, it is rfmovfd bfforf
     * thf brfbk is bddfd.
     * @sff #gftAdtions
     */
    publid stbtid finbl String insfrtBrfbkAdtion = "insfrt-brfbk";

    /**
     * Nbmf of thf bdtion to plbdf b tbb dhbrbdtfr into
     * thf dodumfnt.  If thfrf is b sflfdtion, it is rfmovfd bfforf
     * thf tbb is bddfd.
     * @sff #gftAdtions
     */
    publid stbtid finbl String insfrtTbbAdtion = "insfrt-tbb";

    /**
     * Nbmf of thf bdtion to dflftf thf dhbrbdtfr of dontfnt thbt
     * prfdfdfs thf durrfnt dbrft position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String dflftfPrfvChbrAdtion = "dflftf-prfvious";

    /**
     * Nbmf of thf bdtion to dflftf thf dhbrbdtfr of dontfnt thbt
     * follows thf durrfnt dbrft position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String dflftfNfxtChbrAdtion = "dflftf-nfxt";

    /**
     * Nbmf of thf bdtion to dflftf thf word thbt
     * follows thf bfginning of thf sflfdtion.
     * @sff #gftAdtions
     * @sff JTfxtComponfnt#gftSflfdtionStbrt
     * @sindf 1.6
     */
    publid stbtid finbl String dflftfNfxtWordAdtion = "dflftf-nfxt-word";

    /**
     * Nbmf of thf bdtion to dflftf thf word thbt
     * prfdfdfs thf bfginning of thf sflfdtion.
     * @sff #gftAdtions
     * @sff JTfxtComponfnt#gftSflfdtionStbrt
     * @sindf 1.6
     */
    publid stbtid finbl String dflftfPrfvWordAdtion = "dflftf-prfvious-word";

    /**
     * Nbmf of thf bdtion to sft thf fditor into rfbd-only
     * modf.
     * @sff #gftAdtions
     */
    publid stbtid finbl String rfbdOnlyAdtion = "sft-rfbd-only";

    /**
     * Nbmf of thf bdtion to sft thf fditor into writfbblf
     * modf.
     * @sff #gftAdtions
     */
    publid stbtid finbl String writbblfAdtion = "sft-writbblf";

    /**
     * Nbmf of thf bdtion to dut thf sflfdtfd rfgion
     * bnd plbdf thf dontfnts into thf systfm dlipbobrd.
     * @sff JTfxtComponfnt#dut
     * @sff #gftAdtions
     */
    publid stbtid finbl String dutAdtion = "dut-to-dlipbobrd";

    /**
     * Nbmf of thf bdtion to dopy thf sflfdtfd rfgion
     * bnd plbdf thf dontfnts into thf systfm dlipbobrd.
     * @sff JTfxtComponfnt#dopy
     * @sff #gftAdtions
     */
    publid stbtid finbl String dopyAdtion = "dopy-to-dlipbobrd";

    /**
     * Nbmf of thf bdtion to pbstf thf dontfnts of thf
     * systfm dlipbobrd into thf sflfdtfd rfgion, or bfforf thf
     * dbrft if nothing is sflfdtfd.
     * @sff JTfxtComponfnt#pbstf
     * @sff #gftAdtions
     */
    publid stbtid finbl String pbstfAdtion = "pbstf-from-dlipbobrd";

    /**
     * Nbmf of thf bdtion to drfbtf b bffp.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bffpAdtion = "bffp";

    /**
     * Nbmf of thf bdtion to pbgf up vfrtidblly.
     * @sff #gftAdtions
     */
    publid stbtid finbl String pbgfUpAdtion = "pbgf-up";

    /**
     * Nbmf of thf bdtion to pbgf down vfrtidblly.
     * @sff #gftAdtions
     */
    publid stbtid finbl String pbgfDownAdtion = "pbgf-down";

    /**
     * Nbmf of thf bdtion to pbgf up vfrtidblly, bnd movf thf
     * sflfdtion.
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String sflfdtionPbgfUpAdtion = "sflfdtion-pbgf-up";

    /**
     * Nbmf of thf bdtion to pbgf down vfrtidblly, bnd movf thf
     * sflfdtion.
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String sflfdtionPbgfDownAdtion = "sflfdtion-pbgf-down";

    /**
     * Nbmf of thf bdtion to pbgf lfft horizontblly, bnd movf thf
     * sflfdtion.
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String sflfdtionPbgfLfftAdtion = "sflfdtion-pbgf-lfft";

    /**
     * Nbmf of thf bdtion to pbgf right horizontblly, bnd movf thf
     * sflfdtion.
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String sflfdtionPbgfRightAdtion = "sflfdtion-pbgf-right";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly forwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String forwbrdAdtion = "dbrft-forwbrd";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly bbdkwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bbdkwbrdAdtion = "dbrft-bbdkwbrd";

    /**
     * Nbmf of thf Adtion for fxtfnding thf sflfdtion
     * by moving thf dbrft logidblly forwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionForwbrdAdtion = "sflfdtion-forwbrd";

    /**
     * Nbmf of thf Adtion for fxtfnding thf sflfdtion
     * by moving thf dbrft logidblly bbdkwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionBbdkwbrdAdtion = "sflfdtion-bbdkwbrd";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly upwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String upAdtion = "dbrft-up";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly downwbrd onf position.
     * @sff #gftAdtions
     */
    publid stbtid finbl String downAdtion = "dbrft-down";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly upwbrd onf position, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionUpAdtion = "sflfdtion-up";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * logidblly downwbrd onf position, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionDownAdtion = "sflfdtion-down";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b word.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bfginWordAdtion = "dbrft-bfgin-word";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * to thf fnd of b word.
     * @sff #gftAdtions
     */
    publid stbtid finbl String fndWordAdtion = "dbrft-fnd-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b word, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionBfginWordAdtion = "sflfdtion-bfgin-word";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * to thf fnd of b word, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionEndWordAdtion = "sflfdtion-fnd-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft to thf
     * bfginning of thf prfvious word.
     * @sff #gftAdtions
     */
    publid stbtid finbl String prfviousWordAdtion = "dbrft-prfvious-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft to thf
     * bfginning of thf nfxt word.
     * @sff #gftAdtions
     */
    publid stbtid finbl String nfxtWordAdtion = "dbrft-nfxt-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf sflfdtion to thf
     * bfginning of thf prfvious word, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionPrfviousWordAdtion = "sflfdtion-prfvious-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf sflfdtion to thf
     * bfginning of thf nfxt word, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionNfxtWordAdtion = "sflfdtion-nfxt-word";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b linf.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bfginLinfAdtion = "dbrft-bfgin-linf";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf fnd of b linf.
     * @sff #gftAdtions
     */
    publid stbtid finbl String fndLinfAdtion = "dbrft-fnd-linf";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b linf, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionBfginLinfAdtion = "sflfdtion-bfgin-linf";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf fnd of b linf, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionEndLinfAdtion = "sflfdtion-fnd-linf";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b pbrbgrbph.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bfginPbrbgrbphAdtion = "dbrft-bfgin-pbrbgrbph";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf fnd of b pbrbgrbph.
     * @sff #gftAdtions
     */
    publid stbtid finbl String fndPbrbgrbphAdtion = "dbrft-fnd-pbrbgrbph";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of b pbrbgrbph, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionBfginPbrbgrbphAdtion = "sflfdtion-bfgin-pbrbgrbph";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf fnd of b pbrbgrbph, fxtfnding thf sflfdtion.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionEndPbrbgrbphAdtion = "sflfdtion-fnd-pbrbgrbph";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of thf dodumfnt.
     * @sff #gftAdtions
     */
    publid stbtid finbl String bfginAdtion = "dbrft-bfgin";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf fnd of thf dodumfnt.
     * @sff #gftAdtions
     */
    publid stbtid finbl String fndAdtion = "dbrft-fnd";

    /**
     * Nbmf of thf <dodf>Adtion</dodf> for moving thf dbrft
     * to thf bfginning of thf dodumfnt.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionBfginAdtion = "sflfdtion-bfgin";

    /**
     * Nbmf of thf Adtion for moving thf dbrft
     * to thf fnd of thf dodumfnt.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtionEndAdtion = "sflfdtion-fnd";

    /**
     * Nbmf of thf Adtion for sflfdting b word bround thf dbrft.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtWordAdtion = "sflfdt-word";

    /**
     * Nbmf of thf Adtion for sflfdting b linf bround thf dbrft.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtLinfAdtion = "sflfdt-linf";

    /**
     * Nbmf of thf Adtion for sflfdting b pbrbgrbph bround thf dbrft.
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtPbrbgrbphAdtion = "sflfdt-pbrbgrbph";

    /**
     * Nbmf of thf Adtion for sflfdting thf fntirf dodumfnt
     * @sff #gftAdtions
     */
    publid stbtid finbl String sflfdtAllAdtion = "sflfdt-bll";

    /**
     * Nbmf of thf Adtion for rfmoving sflfdtion
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String unsflfdtAdtion = "unsflfdt";

    /**
     * Nbmf of thf Adtion for toggling thf domponfnt's orifntbtion.
     * @sff #gftAdtions
     */
    /*publid*/ stbtid finbl String togglfComponfntOrifntbtionAdtion
        = "togglf-domponfntOrifntbtion";

    /**
     * Nbmf of thf bdtion thbt is fxfdutfd by dffbult if
     * b <fm>kfy typfd fvfnt</fm> is rfdfivfd bnd thfrf
     * is no kfymbp fntry.
     * @sff #gftAdtions
     */
    publid stbtid finbl String dffbultKfyTypfdAdtion = "dffbult-typfd";

    // --- Adtion implfmfntbtions ---------------------------------

    privbtf stbtid finbl Adtion[] dffbultAdtions = {
        nfw InsfrtContfntAdtion(), nfw DflftfPrfvChbrAdtion(),
        nfw DflftfNfxtChbrAdtion(), nfw RfbdOnlyAdtion(),
        nfw DflftfWordAdtion(dflftfPrfvWordAdtion),
        nfw DflftfWordAdtion(dflftfNfxtWordAdtion),
        nfw WritbblfAdtion(), nfw CutAdtion(),
        nfw CopyAdtion(), nfw PbstfAdtion(),
        nfw VfrtidblPbgfAdtion(pbgfUpAdtion, -1, fblsf),
        nfw VfrtidblPbgfAdtion(pbgfDownAdtion, 1, fblsf),
        nfw VfrtidblPbgfAdtion(sflfdtionPbgfUpAdtion, -1, truf),
        nfw VfrtidblPbgfAdtion(sflfdtionPbgfDownAdtion, 1, truf),
        nfw PbgfAdtion(sflfdtionPbgfLfftAdtion, truf, truf),
        nfw PbgfAdtion(sflfdtionPbgfRightAdtion, fblsf, truf),
        nfw InsfrtBrfbkAdtion(), nfw BffpAdtion(),
        nfw NfxtVisublPositionAdtion(forwbrdAdtion, fblsf,
                                     SwingConstbnts.EAST),
        nfw NfxtVisublPositionAdtion(bbdkwbrdAdtion, fblsf,
                                     SwingConstbnts.WEST),
        nfw NfxtVisublPositionAdtion(sflfdtionForwbrdAdtion, truf,
                                     SwingConstbnts.EAST),
        nfw NfxtVisublPositionAdtion(sflfdtionBbdkwbrdAdtion, truf,
                                     SwingConstbnts.WEST),
        nfw NfxtVisublPositionAdtion(upAdtion, fblsf,
                                     SwingConstbnts.NORTH),
        nfw NfxtVisublPositionAdtion(downAdtion, fblsf,
                                     SwingConstbnts.SOUTH),
        nfw NfxtVisublPositionAdtion(sflfdtionUpAdtion, truf,
                                     SwingConstbnts.NORTH),
        nfw NfxtVisublPositionAdtion(sflfdtionDownAdtion, truf,
                                     SwingConstbnts.SOUTH),
        nfw BfginWordAdtion(bfginWordAdtion, fblsf),
        nfw EndWordAdtion(fndWordAdtion, fblsf),
        nfw BfginWordAdtion(sflfdtionBfginWordAdtion, truf),
        nfw EndWordAdtion(sflfdtionEndWordAdtion, truf),
        nfw PrfviousWordAdtion(prfviousWordAdtion, fblsf),
        nfw NfxtWordAdtion(nfxtWordAdtion, fblsf),
        nfw PrfviousWordAdtion(sflfdtionPrfviousWordAdtion, truf),
        nfw NfxtWordAdtion(sflfdtionNfxtWordAdtion, truf),
        nfw BfginLinfAdtion(bfginLinfAdtion, fblsf),
        nfw EndLinfAdtion(fndLinfAdtion, fblsf),
        nfw BfginLinfAdtion(sflfdtionBfginLinfAdtion, truf),
        nfw EndLinfAdtion(sflfdtionEndLinfAdtion, truf),
        nfw BfginPbrbgrbphAdtion(bfginPbrbgrbphAdtion, fblsf),
        nfw EndPbrbgrbphAdtion(fndPbrbgrbphAdtion, fblsf),
        nfw BfginPbrbgrbphAdtion(sflfdtionBfginPbrbgrbphAdtion, truf),
        nfw EndPbrbgrbphAdtion(sflfdtionEndPbrbgrbphAdtion, truf),
        nfw BfginAdtion(bfginAdtion, fblsf),
        nfw EndAdtion(fndAdtion, fblsf),
        nfw BfginAdtion(sflfdtionBfginAdtion, truf),
        nfw EndAdtion(sflfdtionEndAdtion, truf),
        nfw DffbultKfyTypfdAdtion(), nfw InsfrtTbbAdtion(),
        nfw SflfdtWordAdtion(), nfw SflfdtLinfAdtion(),
        nfw SflfdtPbrbgrbphAdtion(), nfw SflfdtAllAdtion(),
        nfw UnsflfdtAdtion(), nfw TogglfComponfntOrifntbtionAdtion(),
        nfw DumpModflAdtion()
    };

    /**
     * Thf bdtion thbt is fxfdutfd by dffbult if
     * b <fm>kfy typfd fvfnt</fm> is rfdfivfd bnd thfrf
     * is no kfymbp fntry.  Thfrf is b vbribtion bdross
     * difffrfnt VM's in whbt gfts sfnt bs b <fm>kfy typfd</fm>
     * fvfnt, bnd this bdtion trifs to filtfr out thf undfsirfd
     * fvfnts.  This filtfrs thf dontrol dhbrbdtfrs bnd thosf
     * with thf ALT modififr.  It bllows Control-Alt sfqufndfs
     * through bs thfsf form lfgitimbtf unidodf dhbrbdtfrs on
     * somf PC kfybobrds.
     * <p>
     * If thf fvfnt dofsn't gft filtfrfd, it will try to insfrt
     * dontfnt into thf tfxt fditor.  Thf dontfnt is fftdhfd
     * from thf dommbnd string of thf AdtionEvfnt.  Thf tfxt
     * fntry is donf through thf <dodf>rfplbdfSflfdtion</dodf>
     * mfthod on thf tbrgft tfxt domponfnt.  This is thf
     * bdtion thbt will bf firfd for most tfxt fntry tbsks.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#dffbultKfyTypfdAdtion
     * @sff DffbultEditorKit#gftAdtions
     * @sff Kfymbp#sftDffbultAdtion
     * @sff Kfymbp#gftDffbultAdtion
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss DffbultKfyTypfdAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtfs this objfdt with thf bppropribtf idfntififr.
         */
        publid DffbultKfyTypfdAdtion() {
            supfr(dffbultKfyTypfdAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if ((tbrgft != null) && (f != null)) {
                if ((! tbrgft.isEditbblf()) || (! tbrgft.isEnbblfd())) {
                    rfturn;
                }
                String dontfnt = f.gftAdtionCommbnd();
                int mod = f.gftModififrs();
                if ((dontfnt != null) && (dontfnt.lfngth() > 0)) {
                    boolfbn isPrintbblfMbsk = truf;
                    Toolkit tk = Toolkit.gftDffbultToolkit();
                    if (tk instbndfof SunToolkit) {
                        isPrintbblfMbsk = ((SunToolkit)tk).isPrintbblfChbrbdtfrModififrsMbsk(mod);
                    }

                    if (isPrintbblfMbsk) {
                        dhbr d = dontfnt.dhbrAt(0);
                        if ((d >= 0x20) && (d != 0x7F)) {
                            tbrgft.rfplbdfSflfdtion(dontfnt);
                        }
                    }
                }
            }
        }
    }

    /**
     * Plbdfs dontfnt into thf bssodibtfd dodumfnt.
     * If thfrf is b sflfdtion, it is rfmovfd bfforf
     * thf nfw dontfnt is bddfd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#insfrtContfntAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss InsfrtContfntAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtfs this objfdt with thf bppropribtf idfntififr.
         */
        publid InsfrtContfntAdtion() {
            supfr(insfrtContfntAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if ((tbrgft != null) && (f != null)) {
                if ((! tbrgft.isEditbblf()) || (! tbrgft.isEnbblfd())) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                    rfturn;
                }
                String dontfnt = f.gftAdtionCommbnd();
                if (dontfnt != null) {
                    tbrgft.rfplbdfSflfdtion(dontfnt);
                } flsf {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }
    }

    /**
     * Plbdfs b linf/pbrbgrbph brfbk into thf dodumfnt.
     * If thfrf is b sflfdtion, it is rfmovfd bfforf
     * thf brfbk is bddfd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#insfrtBrfbkAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss InsfrtBrfbkAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtfs this objfdt with thf bppropribtf idfntififr.
         */
        publid InsfrtBrfbkAdtion() {
            supfr(insfrtBrfbkAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                if ((! tbrgft.isEditbblf()) || (! tbrgft.isEnbblfd())) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                    rfturn;
                }
                tbrgft.rfplbdfSflfdtion("\n");
            }
        }
    }

    /**
     * Plbdfs b tbb dhbrbdtfr into thf dodumfnt. If thfrf
     * is b sflfdtion, it is rfmovfd bfforf thf tbb is bddfd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#insfrtTbbAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss InsfrtTbbAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtfs this objfdt with thf bppropribtf idfntififr.
         */
        publid InsfrtTbbAdtion() {
            supfr(insfrtTbbAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                if ((! tbrgft.isEditbblf()) || (! tbrgft.isEnbblfd())) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                    rfturn;
                }
                tbrgft.rfplbdfSflfdtion("\t");
            }
        }
    }

    /*
     * Dflftfs thf dhbrbdtfr of dontfnt thbt prfdfdfs thf
     * durrfnt dbrft position.
     * @sff DffbultEditorKit#dflftfPrfvChbrAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss DflftfPrfvChbrAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtfs this objfdt with thf bppropribtf idfntififr.
         */
        DflftfPrfvChbrAdtion() {
            supfr(dflftfPrfvChbrAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            boolfbn bffp = truf;
            if ((tbrgft != null) && (tbrgft.isEditbblf())) {
                try {
                    Dodumfnt dod = tbrgft.gftDodumfnt();
                    Cbrft dbrft = tbrgft.gftCbrft();
                    int dot = dbrft.gftDot();
                    int mbrk = dbrft.gftMbrk();
                    if (dot != mbrk) {
                        dod.rfmovf(Mbth.min(dot, mbrk), Mbth.bbs(dot - mbrk));
                        bffp = fblsf;
                    } flsf if (dot > 0) {
                        int dflChbrs = 1;

                        if (dot > 1) {
                            String dotChbrs = dod.gftTfxt(dot - 2, 2);
                            dhbr d0 = dotChbrs.dhbrAt(0);
                            dhbr d1 = dotChbrs.dhbrAt(1);

                            if (d0 >= '\uD800' && d0 <= '\uDBFF' &&
                                d1 >= '\uDC00' && d1 <= '\uDFFF') {
                                dflChbrs = 2;
                            }
                        }

                        dod.rfmovf(dot - dflChbrs, dflChbrs);
                        bffp = fblsf;
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                }
            }
            if (bffp) {
                UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
            }
        }
    }

    /*
     * Dflftfs thf dhbrbdtfr of dontfnt thbt follows thf
     * durrfnt dbrft position.
     * @sff DffbultEditorKit#dflftfNfxtChbrAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss DflftfNfxtChbrAdtion fxtfnds TfxtAdtion {

        /* Crfbtf this objfdt with thf bppropribtf idfntififr. */
        DflftfNfxtChbrAdtion() {
            supfr(dflftfNfxtChbrAdtion);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            boolfbn bffp = truf;
            if ((tbrgft != null) && (tbrgft.isEditbblf())) {
                try {
                    Dodumfnt dod = tbrgft.gftDodumfnt();
                    Cbrft dbrft = tbrgft.gftCbrft();
                    int dot = dbrft.gftDot();
                    int mbrk = dbrft.gftMbrk();
                    if (dot != mbrk) {
                        dod.rfmovf(Mbth.min(dot, mbrk), Mbth.bbs(dot - mbrk));
                        bffp = fblsf;
                    } flsf if (dot < dod.gftLfngth()) {
                        int dflChbrs = 1;

                        if (dot < dod.gftLfngth() - 1) {
                            String dotChbrs = dod.gftTfxt(dot, 2);
                            dhbr d0 = dotChbrs.dhbrAt(0);
                            dhbr d1 = dotChbrs.dhbrAt(1);

                            if (d0 >= '\uD800' && d0 <= '\uDBFF' &&
                                d1 >= '\uDC00' && d1 <= '\uDFFF') {
                                dflChbrs = 2;
                            }
                        }

                        dod.rfmovf(dot, dflChbrs);
                        bffp = fblsf;
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                }
            }
            if (bffp) {
                UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
            }
        }
    }


    /*
     * Dflftfs thf word thbt prfdfdfs/follows thf bfginning of thf sflfdtion.
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss DflftfWordAdtion fxtfnds TfxtAdtion {
        DflftfWordAdtion(String nbmf) {
            supfr(nbmf);
            bssfrt (nbmf == dflftfPrfvWordAdtion)
                || (nbmf == dflftfNfxtWordAdtion);
        }
        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            finbl JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if ((tbrgft != null) && (f != null)) {
                if ((! tbrgft.isEditbblf()) || (! tbrgft.isEnbblfd())) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                    rfturn;
                }
                boolfbn bffp = truf;
                try {
                    finbl int stbrt = tbrgft.gftSflfdtionStbrt();
                    finbl Elfmfnt linf =
                        Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, stbrt);
                    int fnd;
                    if (dflftfNfxtWordAdtion == gftVbluf(Adtion.NAME)) {
                        fnd = Utilitifs.
                            gftNfxtWordInPbrbgrbph(tbrgft, linf, stbrt, fblsf);
                        if (fnd == jbvb.tfxt.BrfbkItfrbtor.DONE) {
                            //lbst word in thf pbrbgrbph
                            finbl int fndOfLinf = linf.gftEndOffsft();
                            if (stbrt == fndOfLinf - 1) {
                                //for lbst position rfmovf lbst \n
                                fnd = fndOfLinf;
                            } flsf {
                                //rfmovf to thf fnd of thf pbrbgrbph
                                fnd = fndOfLinf - 1;
                            }
                        }
                    } flsf {
                        fnd = Utilitifs.
                            gftPrfvWordInPbrbgrbph(tbrgft, linf, stbrt);
                        if (fnd == jbvb.tfxt.BrfbkItfrbtor.DONE) {
                            //thfrf is no prfvious word in thf pbrbgrbph
                            finbl int stbrtOfLinf = linf.gftStbrtOffsft();
                            if (stbrt == stbrtOfLinf) {
                                //for first position rfmovf prfvious \n
                                fnd = stbrtOfLinf - 1;
                            } flsf {
                                //rfmovf to thf stbrt of thf pbrbgrbph
                                fnd = stbrtOfLinf;
                            }
                        }
                    }
                    int offs = Mbth.min(stbrt, fnd);
                    int lfn = Mbth.bbs(fnd - stbrt);
                    if (offs >= 0) {
                        tbrgft.gftDodumfnt().rfmovf(offs, lfn);
                        bffp = fblsf;
                    }
                } dbtdh (BbdLodbtionExdfption ignorf) {
                }
                if (bffp) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }
    }


    /*
     * Sfts thf fditor into rfbd-only modf.
     * @sff DffbultEditorKit#rfbdOnlyAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss RfbdOnlyAdtion fxtfnds TfxtAdtion {

        /* Crfbtf this objfdt with thf bppropribtf idfntififr. */
        RfbdOnlyAdtion() {
            supfr(rfbdOnlyAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.sftEditbblf(fblsf);
            }
        }
    }

    /*
     * Sfts thf fditor into writfbblf modf.
     * @sff DffbultEditorKit#writbblfAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss WritbblfAdtion fxtfnds TfxtAdtion {

        /* Crfbtf this objfdt with thf bppropribtf idfntififr. */
        WritbblfAdtion() {
            supfr(writbblfAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.sftEditbblf(truf);
            }
        }
    }

    /**
     * Cuts thf sflfdtfd rfgion bnd plbdf its dontfnts
     * into thf systfm dlipbobrd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#dutAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss CutAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid CutAdtion() {
            supfr(dutAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.dut();
            }
        }
    }

    /**
     * Copifs thf sflfdtfd rfgion bnd plbdf its dontfnts
     * into thf systfm dlipbobrd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#dopyAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss CopyAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid CopyAdtion() {
            supfr(dopyAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.dopy();
            }
        }
    }

    /**
     * Pbstfs thf dontfnts of thf systfm dlipbobrd into thf
     * sflfdtfd rfgion, or bfforf thf dbrft if nothing is
     * sflfdtfd.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#pbstfAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss PbstfAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid PbstfAdtion() {
            supfr(pbstfAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.pbstf();
            }
        }
    }

    /**
     * Crfbtfs b bffp.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     *
     * @sff DffbultEditorKit#bffpAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    publid stbtid dlbss BffpAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid BffpAdtion() {
            supfr(bffpAdtion);
        }

        /**
         * Thf opfrbtion to pfrform whfn this bdtion is triggfrfd.
         *
         * @pbrbm f thf bdtion fvfnt
         */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
        }
    }

    /**
     * Sdrolls up/down vfrtidblly.  Thf sflfdt vfrsion of this bdtion fxtfnds
     * thf sflfdtion, instfbd of simply moving thf dbrft.
     *
     * @sff DffbultEditorKit#pbgfUpAdtion
     * @sff DffbultEditorKit#pbgfDownAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss VfrtidblPbgfAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid VfrtidblPbgfAdtion(String nm, int dirfdtion, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
            this.dirfdtion = dirfdtion;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                Rfdtbnglf visiblf = tbrgft.gftVisiblfRfdt();
                Rfdtbnglf nfwVis = nfw Rfdtbnglf(visiblf);
                int sflfdtfdIndfx = tbrgft.gftCbrftPosition();
                int sdrollAmount = dirfdtion *
                        tbrgft.gftSdrollbblfBlodkIndrfmfnt(
                                  visiblf, SwingConstbnts.VERTICAL, dirfdtion);
                int initiblY = visiblf.y;
                Cbrft dbrft = tbrgft.gftCbrft();
                Point mbgidPosition = dbrft.gftMbgidCbrftPosition();

                if (sflfdtfdIndfx != -1) {
                    try {
                        Rfdtbnglf dotBounds = tbrgft.modflToVifw(
                                                     sflfdtfdIndfx);
                        int x = (mbgidPosition != null) ? mbgidPosition.x :
                                                          dotBounds.x;
                        int h = dotBounds.hfight;
                        if (h > 0) {
                            // Wf wbnt to sdroll by b multiplf of dbrft hfight,
                            // rounding towbrds lowfr intfgfr
                            sdrollAmount = sdrollAmount / h * h;
                        }
                        nfwVis.y = donstrbinY(tbrgft,
                                initiblY + sdrollAmount, visiblf.hfight);

                        int nfwIndfx;

                        if (visiblf.dontbins(dotBounds.x, dotBounds.y)) {
                            // Dot is durrfntly visiblf, bbsf thf nfw
                            // lodbtion off thf old, or
                            nfwIndfx = tbrgft.vifwToModfl(
                                nfw Point(x, donstrbinY(tbrgft,
                                          dotBounds.y + sdrollAmount, 0)));
                        }
                        flsf {
                            // Dot isn't visiblf, dhoosf thf top or thf bottom
                            // for thf nfw lodbtion.
                            if (dirfdtion == -1) {
                                nfwIndfx = tbrgft.vifwToModfl(nfw Point(
                                    x, nfwVis.y));
                            }
                            flsf {
                                nfwIndfx = tbrgft.vifwToModfl(nfw Point(
                                    x, nfwVis.y + visiblf.hfight));
                            }
                        }
                        nfwIndfx = donstrbinOffsft(tbrgft, nfwIndfx);
                        if (nfwIndfx != sflfdtfdIndfx) {
                            // Mbkf surf thf nfw visiblf lodbtion dontbins
                            // thf lodbtion of dot, othfrwisf Cbrft will
                            // dbusf bn bdditionbl sdroll.
                            int nfwY = gftAdjustfdY(tbrgft, nfwVis, nfwIndfx);

                            if (dirfdtion == -1 && nfwY <= initiblY || dirfdtion == 1 && nfwY >= initiblY) {
                                // Chbngf indfx bnd dorrfdt nfwVis.y only if won't dbusf sdrolling upwbrd
                                nfwVis.y = nfwY;

                                if (sflfdt) {
                                    tbrgft.movfCbrftPosition(nfwIndfx);
                                } flsf {
                                    tbrgft.sftCbrftPosition(nfwIndfx);
                                }
                            }
                        }
                    } dbtdh (BbdLodbtionExdfption blf) { }
                } flsf {
                    nfwVis.y = donstrbinY(tbrgft,
                            initiblY + sdrollAmount, visiblf.hfight);
                }
                if (mbgidPosition != null) {
                    dbrft.sftMbgidCbrftPosition(mbgidPosition);
                }
                tbrgft.sdrollRfdtToVisiblf(nfwVis);
            }
        }

        /**
         * Mbkfs surf <dodf>y</dodf> is b vblid lodbtion in
         * <dodf>tbrgft</dodf>.
         */
        privbtf int donstrbinY(JTfxtComponfnt tbrgft, int y, int vis) {
            if (y < 0) {
                y = 0;
            }
            flsf if (y + vis > tbrgft.gftHfight()) {
                y = Mbth.mbx(0, tbrgft.gftHfight() - vis);
            }
            rfturn y;
        }

        /**
         * Ensurfs thbt <dodf>offsft</dodf> is b vblid offsft into thf
         * modfl for <dodf>tfxt</dodf>.
         */
        privbtf int donstrbinOffsft(JTfxtComponfnt tfxt, int offsft) {
            Dodumfnt dod = tfxt.gftDodumfnt();

            if ((offsft != 0) && (offsft > dod.gftLfngth())) {
                offsft = dod.gftLfngth();
            }
            if (offsft  < 0) {
                offsft = 0;
            }
            rfturn offsft;
        }

        /**
         * Rfturns bdjustsfd {@dodf y} position thbt indidbtfs thf lodbtion to sdroll to
         * bftfr sflfdting <dodf>indfx</dodf>.
         */
        privbtf int gftAdjustfdY(JTfxtComponfnt tfxt, Rfdtbnglf visiblf, int indfx) {
            int rfsult = visiblf.y;

            try {
                Rfdtbnglf dotBounds = tfxt.modflToVifw(indfx);

                if (dotBounds.y < visiblf.y) {
                    rfsult = dotBounds.y;
                } flsf {
                    if ((dotBounds.y > visiblf.y + visiblf.hfight) ||
                            (dotBounds.y + dotBounds.hfight > visiblf.y + visiblf.hfight)) {
                        rfsult = dotBounds.y + dotBounds.hfight - visiblf.hfight;
                    }
                }
            } dbtdh (BbdLodbtionExdfption blf) {
            }

            rfturn rfsult;
        }

        /**
         * Adjusts thf Rfdtbnglf to dontbin thf bounds of thf dhbrbdtfr bt
         * <dodf>indfx</dodf> in rfsponsf to b pbgf up.
         */
        privbtf boolfbn sflfdt;

        /**
         * Dirfdtion to sdroll, 1 is down, -1 is up.
         */
        privbtf int dirfdtion;
    }


    /**
     * Pbgfs onf vifw to thf lfft or right.
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss PbgfAdtion fxtfnds TfxtAdtion {

        /** Crfbtf this objfdt with thf bppropribtf idfntififr. */
        publid PbgfAdtion(String nm, boolfbn lfft, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
            this.lfft = lfft;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                int sflfdtfdIndfx;
                Rfdtbnglf visiblf = nfw Rfdtbnglf();
                tbrgft.domputfVisiblfRfdt(visiblf);
                if (lfft) {
                    visiblf.x = Mbth.mbx(0, visiblf.x - visiblf.width);
                }
                flsf {
                    visiblf.x += visiblf.width;
                }

                sflfdtfdIndfx = tbrgft.gftCbrftPosition();
                if(sflfdtfdIndfx != -1) {
                    if (lfft) {
                        sflfdtfdIndfx = tbrgft.vifwToModfl
                            (nfw Point(visiblf.x, visiblf.y));
                    }
                    flsf {
                        sflfdtfdIndfx = tbrgft.vifwToModfl
                            (nfw Point(visiblf.x + visiblf.width - 1,
                                       visiblf.y + visiblf.hfight - 1));
                    }
                    Dodumfnt dod = tbrgft.gftDodumfnt();
                    if ((sflfdtfdIndfx != 0) &&
                        (sflfdtfdIndfx  > (dod.gftLfngth()-1))) {
                        sflfdtfdIndfx = dod.gftLfngth()-1;
                    }
                    flsf if(sflfdtfdIndfx  < 0) {
                        sflfdtfdIndfx = 0;
                    }
                    if (sflfdt)
                        tbrgft.movfCbrftPosition(sflfdtfdIndfx);
                    flsf
                        tbrgft.sftCbrftPosition(sflfdtfdIndfx);
                }
            }
        }

        privbtf boolfbn sflfdt;
        privbtf boolfbn lfft;
    }

    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss DumpModflAdtion fxtfnds TfxtAdtion {

        DumpModflAdtion() {
            supfr("dump-modfl");
        }

        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                Dodumfnt d = tbrgft.gftDodumfnt();
                if (d instbndfof AbstrbdtDodumfnt) {
                    ((AbstrbdtDodumfnt) d).dump(Systfm.frr);
                }
            }
        }
    }

    /*
     * Adtion to movf thf sflfdtion by wby of thf
     * gftNfxtVisublPositionFrom mfthod. Construdtor indidbtfs dirfdtion
     * to usf.
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss NfxtVisublPositionAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        NfxtVisublPositionAdtion(String nm, boolfbn sflfdt, int dirfdtion) {
            supfr(nm);
            this.sflfdt = sflfdt;
            this.dirfdtion = dirfdtion;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                Cbrft dbrft = tbrgft.gftCbrft();
                DffbultCbrft bidiCbrft = (dbrft instbndfof DffbultCbrft) ?
                                              (DffbultCbrft)dbrft : null;
                int dot = dbrft.gftDot();
                Position.Bibs[] bibs = nfw Position.Bibs[1];
                Point mbgidPosition = dbrft.gftMbgidCbrftPosition();

                try {
                    if(mbgidPosition == null &&
                       (dirfdtion == SwingConstbnts.NORTH ||
                        dirfdtion == SwingConstbnts.SOUTH)) {
                        Rfdtbnglf r = (bidiCbrft != null) ?
                                tbrgft.gftUI().modflToVifw(tbrgft, dot,
                                                      bidiCbrft.gftDotBibs()) :
                                tbrgft.modflToVifw(dot);
                        mbgidPosition = nfw Point(r.x, r.y);
                    }

                    NbvigbtionFiltfr filtfr = tbrgft.gftNbvigbtionFiltfr();

                    if (filtfr != null) {
                        dot = filtfr.gftNfxtVisublPositionFrom
                                     (tbrgft, dot, (bidiCbrft != null) ?
                                      bidiCbrft.gftDotBibs() :
                                      Position.Bibs.Forwbrd, dirfdtion, bibs);
                    }
                    flsf {
                        dot = tbrgft.gftUI().gftNfxtVisublPositionFrom
                                     (tbrgft, dot, (bidiCbrft != null) ?
                                      bidiCbrft.gftDotBibs() :
                                      Position.Bibs.Forwbrd, dirfdtion, bibs);
                    }
                    if(bibs[0] == null) {
                        bibs[0] = Position.Bibs.Forwbrd;
                    }
                    if(bidiCbrft != null) {
                        if (sflfdt) {
                            bidiCbrft.movfDot(dot, bibs[0]);
                        } flsf {
                            bidiCbrft.sftDot(dot, bibs[0]);
                        }
                    }
                    flsf {
                        if (sflfdt) {
                            dbrft.movfDot(dot);
                        } flsf {
                            dbrft.sftDot(dot);
                        }
                    }
                    if(mbgidPosition != null &&
                       (dirfdtion == SwingConstbnts.NORTH ||
                        dirfdtion == SwingConstbnts.SOUTH)) {
                        tbrgft.gftCbrft().sftMbgidCbrftPosition(mbgidPosition);
                    }
                } dbtdh (BbdLodbtionExdfption fx) {
                }
            }
        }

        privbtf boolfbn sflfdt;
        privbtf int dirfdtion;
    }

    /*
     * Position thf dbrft to thf bfginning of thf word.
     * @sff DffbultEditorKit#bfginWordAdtion
     * @sff DffbultEditorKit#sflfdtBfginWordAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss BfginWordAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        BfginWordAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                try {
                    int offs = tbrgft.gftCbrftPosition();
                    int bfgOffs = Utilitifs.gftWordStbrt(tbrgft, offs);
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(bfgOffs);
                    } flsf {
                        tbrgft.sftCbrftPosition(bfgOffs);
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf fnd of thf word.
     * @sff DffbultEditorKit#fndWordAdtion
     * @sff DffbultEditorKit#sflfdtEndWordAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss EndWordAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        EndWordAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                try {
                    int offs = tbrgft.gftCbrftPosition();
                    int fndOffs = Utilitifs.gftWordEnd(tbrgft, offs);
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(fndOffs);
                    } flsf {
                        tbrgft.sftCbrftPosition(fndOffs);
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf bfginning of thf prfvious word.
     * @sff DffbultEditorKit#prfviousWordAdtion
     * @sff DffbultEditorKit#sflfdtPrfviousWordAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss PrfviousWordAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        PrfviousWordAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                int offs = tbrgft.gftCbrftPosition();
                boolfbn fbilfd = fblsf;
                try {
                    Elfmfnt durPbrb =
                            Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, offs);
                    offs = Utilitifs.gftPrfviousWord(tbrgft, offs);
                    if(offs < durPbrb.gftStbrtOffsft()) {
                        // wf should first movf to thf fnd of thf
                        // prfvious pbrbgrbph (bug #4278839)
                        offs = Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, offs).
                                gftEndOffsft() - 1;
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    if (offs != 0) {
                        offs = 0;
                    }
                    flsf {
                        fbilfd = truf;
                    }
                }
                if (!fbilfd) {
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(offs);
                    } flsf {
                        tbrgft.sftCbrftPosition(offs);
                    }
                }
                flsf {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf nfxt of thf word.
     * @sff DffbultEditorKit#nfxtWordAdtion
     * @sff DffbultEditorKit#sflfdtNfxtWordAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss NfxtWordAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        NfxtWordAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                int offs = tbrgft.gftCbrftPosition();
                boolfbn fbilfd = fblsf;
                int oldOffs = offs;
                Elfmfnt durPbrb =
                        Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, offs);
                try {
                    offs = Utilitifs.gftNfxtWord(tbrgft, offs);
                    if(offs >= durPbrb.gftEndOffsft() &&
                            oldOffs != durPbrb.gftEndOffsft() - 1) {
                        // wf should first movf to thf fnd of durrfnt
                        // pbrbgrbph (bug #4278839)
                        offs = durPbrb.gftEndOffsft() - 1;
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    int fnd = tbrgft.gftDodumfnt().gftLfngth();
                    if (offs != fnd) {
                        if(oldOffs != durPbrb.gftEndOffsft() - 1) {
                            offs = durPbrb.gftEndOffsft() - 1;
                        } flsf {
                        offs = fnd;
                    }
                    }
                    flsf {
                        fbilfd = truf;
                    }
                }
                if (!fbilfd) {
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(offs);
                    } flsf {
                        tbrgft.sftCbrftPosition(offs);
                    }
                }
                flsf {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf bfginning of thf linf.
     * @sff DffbultEditorKit#bfginLinfAdtion
     * @sff DffbultEditorKit#sflfdtBfginLinfAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss BfginLinfAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        BfginLinfAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                try {
                    int offs = tbrgft.gftCbrftPosition();
                    int bfgOffs = Utilitifs.gftRowStbrt(tbrgft, offs);
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(bfgOffs);
                    } flsf {
                        tbrgft.sftCbrftPosition(bfgOffs);
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf fnd of thf linf.
     * @sff DffbultEditorKit#fndLinfAdtion
     * @sff DffbultEditorKit#sflfdtEndLinfAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss EndLinfAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        EndLinfAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                try {
                    int offs = tbrgft.gftCbrftPosition();
                    int fndOffs = Utilitifs.gftRowEnd(tbrgft, offs);
                    if (sflfdt) {
                        tbrgft.movfCbrftPosition(fndOffs);
                    } flsf {
                        tbrgft.sftCbrftPosition(fndOffs);
                    }
                } dbtdh (BbdLodbtionExdfption bl) {
                    UIMbnbgfr.gftLookAndFffl().providfErrorFffdbbdk(tbrgft);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf bfginning of thf pbrbgrbph.
     * @sff DffbultEditorKit#bfginPbrbgrbphAdtion
     * @sff DffbultEditorKit#sflfdtBfginPbrbgrbphAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss BfginPbrbgrbphAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        BfginPbrbgrbphAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                int offs = tbrgft.gftCbrftPosition();
                Elfmfnt flfm = Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, offs);
                offs = flfm.gftStbrtOffsft();
                if (sflfdt) {
                    tbrgft.movfCbrftPosition(offs);
                } flsf {
                    tbrgft.sftCbrftPosition(offs);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Position thf dbrft to thf fnd of thf pbrbgrbph.
     * @sff DffbultEditorKit#fndPbrbgrbphAdtion
     * @sff DffbultEditorKit#sflfdtEndPbrbgrbphAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss EndPbrbgrbphAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        EndPbrbgrbphAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                int offs = tbrgft.gftCbrftPosition();
                Elfmfnt flfm = Utilitifs.gftPbrbgrbphElfmfnt(tbrgft, offs);
                offs = Mbth.min(tbrgft.gftDodumfnt().gftLfngth(),
                                flfm.gftEndOffsft());
                if (sflfdt) {
                    tbrgft.movfCbrftPosition(offs);
                } flsf {
                    tbrgft.sftCbrftPosition(offs);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Movf thf dbrft to thf bfginning of thf dodumfnt.
     * @sff DffbultEditorKit#bfginAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss BfginAdtion fxtfnds TfxtAdtion {

        /* Crfbtf this objfdt with thf bppropribtf idfntififr. */
        BfginAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                if (sflfdt) {
                    tbrgft.movfCbrftPosition(0);
                } flsf {
                    tbrgft.sftCbrftPosition(0);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Movf thf dbrft to thf fnd of thf dodumfnt.
     * @sff DffbultEditorKit#fndAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss EndAdtion fxtfnds TfxtAdtion {

        /* Crfbtf this objfdt with thf bppropribtf idfntififr. */
        EndAdtion(String nm, boolfbn sflfdt) {
            supfr(nm);
            this.sflfdt = sflfdt;
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                Dodumfnt dod = tbrgft.gftDodumfnt();
                int dot = dod.gftLfngth();
                if (sflfdt) {
                    tbrgft.movfCbrftPosition(dot);
                } flsf {
                    tbrgft.sftCbrftPosition(dot);
                }
            }
        }

        privbtf boolfbn sflfdt;
    }

    /*
     * Sflfdt thf word bround thf dbrft
     * @sff DffbultEditorKit#fndAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss SflfdtWordAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        SflfdtWordAdtion() {
            supfr(sflfdtWordAdtion);
            stbrt = nfw BfginWordAdtion("pigdog", fblsf);
            fnd = nfw EndWordAdtion("pigdog", truf);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            stbrt.bdtionPfrformfd(f);
            fnd.bdtionPfrformfd(f);
        }

        privbtf Adtion stbrt;
        privbtf Adtion fnd;
    }

    /*
     * Sflfdt thf linf bround thf dbrft
     * @sff DffbultEditorKit#fndAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss SflfdtLinfAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        SflfdtLinfAdtion() {
            supfr(sflfdtLinfAdtion);
            stbrt = nfw BfginLinfAdtion("pigdog", fblsf);
            fnd = nfw EndLinfAdtion("pigdog", truf);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            stbrt.bdtionPfrformfd(f);
            fnd.bdtionPfrformfd(f);
        }

        privbtf Adtion stbrt;
        privbtf Adtion fnd;
    }

    /*
     * Sflfdt thf pbrbgrbph bround thf dbrft
     * @sff DffbultEditorKit#fndAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss SflfdtPbrbgrbphAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        SflfdtPbrbgrbphAdtion() {
            supfr(sflfdtPbrbgrbphAdtion);
            stbrt = nfw BfginPbrbgrbphAdtion("pigdog", fblsf);
            fnd = nfw EndPbrbgrbphAdtion("pigdog", truf);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            stbrt.bdtionPfrformfd(f);
            fnd.bdtionPfrformfd(f);
        }

        privbtf Adtion stbrt;
        privbtf Adtion fnd;
    }

    /*
     * Sflfdt thf fntirf dodumfnt
     * @sff DffbultEditorKit#fndAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss SflfdtAllAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         * @pbrbm nm  thf nbmf of thf bdtion, Adtion.NAME.
         * @pbrbm sflfdt whfthfr to fxtfnd thf sflfdtion whfn
         *  dhbnging thf dbrft position.
         */
        SflfdtAllAdtion() {
            supfr(sflfdtAllAdtion);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                Dodumfnt dod = tbrgft.gftDodumfnt();
                tbrgft.sftCbrftPosition(0);
                tbrgft.movfCbrftPosition(dod.gftLfngth());
            }
        }

    }

    /*
     * Rfmovf thf sflfdtion, if bny.
     * @sff DffbultEditorKit#unsflfdtAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss UnsflfdtAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         */
        UnsflfdtAdtion() {
            supfr(unsflfdtAdtion);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                tbrgft.sftCbrftPosition(tbrgft.gftCbrftPosition());
            }
        }

    }

    /*
     * Togglfs thf ComponfntOrifntbtion of thf tfxt domponfnt.
     * @sff DffbultEditorKit#togglfComponfntOrifntbtionAdtion
     * @sff DffbultEditorKit#gftAdtions
     */
    @SupprfssWbrnings("sfribl") // Supfrdlbss is not sfriblizbblf bdross vfrsions
    stbtid dlbss TogglfComponfntOrifntbtionAdtion fxtfnds TfxtAdtion {

        /**
         * Crfbtf this bdtion with thf bppropribtf idfntififr.
         */
        TogglfComponfntOrifntbtionAdtion() {
            supfr(togglfComponfntOrifntbtionAdtion);
        }

        /** Thf opfrbtion to pfrform whfn this bdtion is triggfrfd. */
        publid void bdtionPfrformfd(AdtionEvfnt f) {
            JTfxtComponfnt tbrgft = gftTfxtComponfnt(f);
            if (tbrgft != null) {
                ComponfntOrifntbtion lbst = tbrgft.gftComponfntOrifntbtion();
                ComponfntOrifntbtion nfxt;
                if( lbst == ComponfntOrifntbtion.RIGHT_TO_LEFT )
                    nfxt = ComponfntOrifntbtion.LEFT_TO_RIGHT;
                flsf
                    nfxt = ComponfntOrifntbtion.RIGHT_TO_LEFT;
                tbrgft.sftComponfntOrifntbtion(nfxt);
                tbrgft.rfpbint();
            }
        }
    }

}
