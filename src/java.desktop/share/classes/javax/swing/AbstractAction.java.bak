/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bfbns.*;
import jbvb.util.Hbsitbblf;
import jbvb.util.Enumfrbtion;
import jbvb.io.Sfriblizbblf;
import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.sfdurity.AddfssControllfr;
import jbvbx.swing.fvfnt.SwingPropfrtyCibngfSupport;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * Tiis dlbss providfs dffbult implfmfntbtions for tif JFC <dodf>Adtion</dodf>
 * intfrfbdf. Stbndbrd bfibviors likf tif gft bnd sft mftiods for
 * <dodf>Adtion</dodf> objfdt propfrtifs (idon, tfxt, bnd fnbblfd) brf dffinfd
 * ifrf. Tif dfvflopfr nffd only subdlbss tiis bbstrbdt dlbss bnd
 * dffinf tif <dodf>bdtionPfrformfd</dodf> mftiod.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of tiis dlbss will not bf dompbtiblf witi
 * futurf Swing rflfbsfs. Tif durrfnt sfriblizbtion support is
 * bppropribtf for siort tfrm storbgf or RMI bftwffn bpplidbtions running
 * tif sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * ibs bffn bddfd to tif <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @butior Gforgfs Sbbb
 * @sff Adtion
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid bbstrbdt dlbss AbstrbdtAdtion implfmfnts Adtion, Clonfbblf, Sfriblizbblf
{
    /**
     * Wiftifr or not bdtions siould rfdonfigurf bll propfrtifs on null.
     */
    privbtf stbtid Boolfbn RECONFIGURE_ON_NULL;

    /**
     * Spfdififs wiftifr bdtion is fnbblfd; tif dffbult is truf.
     */
    protfdtfd boolfbn fnbblfd = truf;


    /**
     * Contbins tif brrby of kfy bindings.
     */
    privbtf trbnsifnt ArrbyTbblf brrbyTbblf;

    /**
     * Wiftifr or not to rfdonfigurf bll bdtion propfrtifs from tif
     * spfdififd fvfnt.
     */
    stbtid boolfbn siouldRfdonfigurf(PropfrtyCibngfEvfnt f) {
        if (f.gftPropfrtyNbmf() == null) {
            syndironizfd(AbstrbdtAdtion.dlbss) {
                if (RECONFIGURE_ON_NULL == null) {
                    RECONFIGURE_ON_NULL = Boolfbn.vblufOf(
                        AddfssControllfr.doPrivilfgfd(nfw GftPropfrtyAdtion(
                        "swing.bdtions.rfdonfigurfOnNull", "fblsf")));
                }
                rfturn RECONFIGURE_ON_NULL;
            }
        }
        rfturn fblsf;
    }

    /**
     * Sfts tif fnbblfd stbtf of b domponfnt from bn Adtion.
     *
     * @pbrbm d tif Componfnt to sft tif fnbblfd stbtf on
     * @pbrbm b tif Adtion to sft tif fnbblfd stbtf from, mby bf null
     */
    stbtid void sftEnbblfdFromAdtion(JComponfnt d, Adtion b) {
        d.sftEnbblfd((b != null) ? b.isEnbblfd() : truf);
    }

    /**
     * Sfts tif tooltip tfxt of b domponfnt from bn Adtion.
     *
     * @pbrbm d tif Componfnt to sft tif tooltip tfxt on
     * @pbrbm b tif Adtion to sft tif tooltip tfxt from, mby bf null
     */
    stbtid void sftToolTipTfxtFromAdtion(JComponfnt d, Adtion b) {
        d.sftToolTipTfxt(b != null ?
                         (String)b.gftVbluf(Adtion.SHORT_DESCRIPTION) : null);
    }

    stbtid boolfbn ibsSflfdtfdKfy(Adtion b) {
        rfturn (b != null && b.gftVbluf(Adtion.SELECTED_KEY) != null);
    }

    stbtid boolfbn isSflfdtfd(Adtion b) {
        rfturn Boolfbn.TRUE.fqubls(b.gftVbluf(Adtion.SELECTED_KEY));
    }



    /**
     * Crfbtfs bn {@dodf Adtion}.
     */
    publid AbstrbdtAdtion() {
    }

    /**
     * Crfbtfs bn {@dodf Adtion} witi tif spfdififd nbmf.
     *
     * @pbrbm nbmf tif nbmf ({@dodf Adtion.NAME}) for tif bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     */
    publid AbstrbdtAdtion(String nbmf) {
        putVbluf(Adtion.NAME, nbmf);
    }

    /**
     * Crfbtfs bn {@dodf Adtion} witi tif spfdififd nbmf bnd smbll idon.
     *
     * @pbrbm nbmf tif nbmf ({@dodf Adtion.NAME}) for tif bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     * @pbrbm idon tif smbll idon ({@dodf Adtion.SMALL_ICON}) for tif bdtion; b
     *        vbluf of {@dodf null} is ignorfd
     */
    publid AbstrbdtAdtion(String nbmf, Idon idon) {
        tiis(nbmf);
        putVbluf(Adtion.SMALL_ICON, idon);
    }

    /**
     * Gfts tif <dodf>Objfdt</dodf> bssodibtfd witi tif spfdififd kfy.
     *
     * @pbrbm kfy b string dontbining tif spfdififd <dodf>kfy</dodf>
     * @rfturn tif binding <dodf>Objfdt</dodf> storfd witi tiis kfy; if tifrf
     *          brf no kfys, it will rfturn <dodf>null</dodf>
     * @sff Adtion#gftVbluf
     */
    publid Objfdt gftVbluf(String kfy) {
        if (kfy == "fnbblfd") {
            rfturn fnbblfd;
        }
        if (brrbyTbblf == null) {
            rfturn null;
        }
        rfturn brrbyTbblf.gft(kfy);
    }

    /**
     * Sfts tif <dodf>Vbluf</dodf> bssodibtfd witi tif spfdififd kfy.
     *
     * @pbrbm kfy  tif <dodf>String</dodf> tibt idfntififs tif storfd objfdt
     * @pbrbm nfwVbluf tif <dodf>Objfdt</dodf> to storf using tiis kfy
     * @sff Adtion#putVbluf
     */
    publid void putVbluf(String kfy, Objfdt nfwVbluf) {
        Objfdt oldVbluf = null;
        if (kfy == "fnbblfd") {
            // Trfbt putVbluf("fnbblfd") tif sbmf wby bs b dbll to sftEnbblfd.
            // If wf don't do tiis it mfbns tif two mby gft out of synd, bnd b
            // bogus propfrty dibngf notifidbtion would bf sfnt.
            //
            // To bvoid dfpfndfndifs bftwffn putVbluf & sftEnbblfd tiis
            // dirfdtly dibngfs fnbblfd. If wf instfbd dbllfd sftEnbblfd
            // to dibngf fnbblfd, it would bf possiblf for stbdk
            // ovfrflow in tif dbsf wifrf b dfvflopfr implfmfntfd sftEnbblfd
            // in tfrms of putVbluf.
            if (nfwVbluf == null || !(nfwVbluf instbndfof Boolfbn)) {
                nfwVbluf = fblsf;
            }
            oldVbluf = fnbblfd;
            fnbblfd = (Boolfbn)nfwVbluf;
        } flsf {
            if (brrbyTbblf == null) {
                brrbyTbblf = nfw ArrbyTbblf();
            }
            if (brrbyTbblf.dontbinsKfy(kfy))
                oldVbluf = brrbyTbblf.gft(kfy);
            // Rfmovf tif fntry for kfy if nfwVbluf is null
            // flsf put in tif nfwVbluf for kfy.
            if (nfwVbluf == null) {
                brrbyTbblf.rfmovf(kfy);
            } flsf {
                brrbyTbblf.put(kfy,nfwVbluf);
            }
        }
        firfPropfrtyCibngf(kfy, oldVbluf, nfwVbluf);
    }

    /**
     * Rfturns truf if tif bdtion is fnbblfd.
     *
     * @rfturn truf if tif bdtion is fnbblfd, fblsf otifrwisf
     * @sff Adtion#isEnbblfd
     */
    publid boolfbn isEnbblfd() {
        rfturn fnbblfd;
    }

    /**
     * Sfts wiftifr tif {@dodf Adtion} is fnbblfd. Tif dffbult is {@dodf truf}.
     *
     * @pbrbm nfwVbluf  {@dodf truf} to fnbblf tif bdtion, {@dodf fblsf} to
     *                  disbblf it
     * @sff Adtion#sftEnbblfd
     */
    publid void sftEnbblfd(boolfbn nfwVbluf) {
        boolfbn oldVbluf = tiis.fnbblfd;

        if (oldVbluf != nfwVbluf) {
            tiis.fnbblfd = nfwVbluf;
            firfPropfrtyCibngf("fnbblfd",
                               Boolfbn.vblufOf(oldVbluf), Boolfbn.vblufOf(nfwVbluf));
        }
    }


    /**
     * Rfturns bn brrby of <dodf>Objfdt</dodf>s wiidi brf kfys for
     * wiidi vblufs ibvf bffn sft for tiis <dodf>AbstrbdtAdtion</dodf>,
     * or <dodf>null</dodf> if no kfys ibvf vblufs sft.
     * @rfturn bn brrby of kfy objfdts, or <dodf>null</dodf> if no
     *                  kfys ibvf vblufs sft
     * @sindf 1.3
     */
    publid Objfdt[] gftKfys() {
        if (brrbyTbblf == null) {
            rfturn null;
        }
        Objfdt[] kfys = nfw Objfdt[brrbyTbblf.sizf()];
        brrbyTbblf.gftKfys(kfys);
        rfturn kfys;
    }

    /**
     * If bny <dodf>PropfrtyCibngfListfnfrs</dodf> ibvf bffn rfgistfrfd, tif
     * <dodf>dibngfSupport</dodf> fifld dfsdribfs tifm.
     */
    protfdtfd SwingPropfrtyCibngfSupport dibngfSupport;

    /**
     * Supports rfporting bound propfrty dibngfs.  Tiis mftiod dbn bf dbllfd
     * wifn b bound propfrty ibs dibngfd bnd it will sfnd tif bppropribtf
     * <dodf>PropfrtyCibngfEvfnt</dodf> to bny rfgistfrfd
     * <dodf>PropfrtyCibngfListfnfrs</dodf>.
     *
     * @pbrbm propfrtyNbmf  tif nbmf of tif propfrty tibt ibs dibngfd
     * @pbrbm oldVbluf  tif old vbluf of tif propfrty
     * @pbrbm nfwVbluf  tif nfw vbluf of tif propfrty
     */
    protfdtfd void firfPropfrtyCibngf(String propfrtyNbmf, Objfdt oldVbluf, Objfdt nfwVbluf) {
        if (dibngfSupport == null ||
            (oldVbluf != null && nfwVbluf != null && oldVbluf.fqubls(nfwVbluf))) {
            rfturn;
        }
        dibngfSupport.firfPropfrtyCibngf(propfrtyNbmf, oldVbluf, nfwVbluf);
    }


    /**
     * Adds b <dodf>PropfrtyCibngfListfnfr</dodf> to tif listfnfr list.
     * Tif listfnfr is rfgistfrfd for bll propfrtifs.
     * <p>
     * A <dodf>PropfrtyCibngfEvfnt</dodf> will gft firfd in rfsponsf to sftting
     * b bound propfrty, f.g. <dodf>sftFont</dodf>, <dodf>sftBbdkground</dodf>,
     * or <dodf>sftForfground</dodf>.
     * Notf tibt if tif durrfnt domponfnt is inifriting its forfground,
     * bbdkground, or font from its dontbinfr, tifn no fvfnt will bf
     * firfd in rfsponsf to b dibngf in tif inifritfd propfrty.
     *
     * @pbrbm listfnfr  Tif <dodf>PropfrtyCibngfListfnfr</dodf> to bf bddfd
     *
     * @sff Adtion#bddPropfrtyCibngfListfnfr
     */
    publid syndironizfd void bddPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr listfnfr) {
        if (dibngfSupport == null) {
            dibngfSupport = nfw SwingPropfrtyCibngfSupport(tiis);
        }
        dibngfSupport.bddPropfrtyCibngfListfnfr(listfnfr);
    }


    /**
     * Rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> from tif listfnfr list.
     * Tiis rfmovfs b <dodf>PropfrtyCibngfListfnfr</dodf> tibt wbs rfgistfrfd
     * for bll propfrtifs.
     *
     * @pbrbm listfnfr  tif <dodf>PropfrtyCibngfListfnfr</dodf> to bf rfmovfd
     *
     * @sff Adtion#rfmovfPropfrtyCibngfListfnfr
     */
    publid syndironizfd void rfmovfPropfrtyCibngfListfnfr(PropfrtyCibngfListfnfr listfnfr) {
        if (dibngfSupport == null) {
            rfturn;
        }
        dibngfSupport.rfmovfPropfrtyCibngfListfnfr(listfnfr);
    }


    /**
     * Rfturns bn brrby of bll tif <dodf>PropfrtyCibngfListfnfr</dodf>s bddfd
     * to tiis AbstrbdtAdtion witi bddPropfrtyCibngfListfnfr().
     *
     * @rfturn bll of tif <dodf>PropfrtyCibngfListfnfr</dodf>s bddfd or bn fmpty
     *         brrby if no listfnfrs ibvf bffn bddfd
     * @sindf 1.4
     */
    publid syndironizfd PropfrtyCibngfListfnfr[] gftPropfrtyCibngfListfnfrs() {
        if (dibngfSupport == null) {
            rfturn nfw PropfrtyCibngfListfnfr[0];
        }
        rfturn dibngfSupport.gftPropfrtyCibngfListfnfrs();
    }


    /**
     * Clonfs tif bbstrbdt bdtion. Tiis givfs tif dlonf
     * its own dopy of tif kfy/vbluf list,
     * wiidi is not ibndlfd for you by <dodf>Objfdt.dlonf()</dodf>.
     **/

    protfdtfd Objfdt dlonf() tirows ClonfNotSupportfdExdfption {
        AbstrbdtAdtion nfwAdtion = (AbstrbdtAdtion)supfr.dlonf();
        syndironizfd(tiis) {
            if (brrbyTbblf != null) {
                nfwAdtion.brrbyTbblf = (ArrbyTbblf)brrbyTbblf.dlonf();
            }
        }
        rfturn nfwAdtion;
    }

    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) tirows IOExdfption {
        // Storf tif dffbult fiflds
        s.dffbultWritfObjfdt();

        // And tif kfys
        ArrbyTbblf.writfArrbyTbblf(s, brrbyTbblf);
    }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s) tirows ClbssNotFoundExdfption,
        IOExdfption {
        s.dffbultRfbdObjfdt();
        for (int dountfr = s.rfbdInt() - 1; dountfr >= 0; dountfr--) {
            putVbluf((String)s.rfbdObjfdt(), s.rfbdObjfdt());
        }
    }
}
