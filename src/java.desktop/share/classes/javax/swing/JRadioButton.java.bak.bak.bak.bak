/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.swing;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bfbns.*;

import jbvbx.swing.plbf.*;
import jbvbx.bddfssibility.*;

import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;


/**
 * An implfmfntbtion of b rbdio button -- bn itfm thbt dbn bf sflfdtfd or
 * dfsflfdtfd, bnd whidh displbys its stbtf to thf usfr.
 * Usfd with b {@link ButtonGroup} objfdt to drfbtf b group of buttons
 * in whidh only onf button bt b timf dbn bf sflfdtfd. (Crfbtf b ButtonGroup
 * objfdt bnd usf its <dodf>bdd</dodf> mfthod to indludf thf JRbdioButton objfdts
 * in thf group.)
 * <blodkquotf>
 * <strong>Notf:</strong>
 * Thf ButtonGroup objfdt is b logidbl grouping -- not b physidbl grouping.
 * To drfbtf b button pbnfl, you should still drfbtf b {@link JPbnfl} or similbr
 * dontbinfr-objfdt bnd bdd b {@link jbvbx.swing.bordfr.Bordfr} to it to sft it off from surrounding
 * domponfnts.
 * </blodkquotf>
 * <p>
 * Buttons dbn bf donfigurfd, bnd to somf dfgrff dontrollfd, by
 * <dodf><b hrff="Adtion.html">Adtion</b></dodf>s.  Using bn
 * <dodf>Adtion</dodf> with b button hbs mbny bfnffits bfyond dirfdtly
 * donfiguring b button.  Rfffr to <b hrff="Adtion.html#buttonAdtions">
 * Swing Componfnts Supporting <dodf>Adtion</dodf></b> for morf
 * dftbils, bnd you dbn find morf informbtion in <b
 * hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/misd/bdtion.html">How
 * to Usf Adtions</b>, b sfdtion in <fm>Thf Jbvb Tutoribl</fm>.
 * <p>
 * Sff <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/domponfnts/button.html">How to Usf Buttons, Chfdk Boxfs, bnd Rbdio Buttons</b>
 * in <fm>Thf Jbvb Tutoribl</fm>
 * for furthfr dodumfntbtion.
 * <p>
 * <strong>Wbrning:</strong> Swing is not thrfbd sbff. For morf
 * informbtion sff <b
 * hrff="pbdkbgf-summbry.html#thrfbding">Swing's Thrfbding
 * Polidy</b>.
 * <p>
 * <strong>Wbrning:</strong>
 * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
 * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
 * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
 * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
 * of bll JbvbBfbns&trbdf;
 * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
 * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
 *
 * @bfbninfo
 *   bttributf: isContbinfr fblsf
 * dfsdription: A domponfnt whidh dbn displby it's stbtf bs sflfdtfd or dfsflfdtfd.
 *
 * @sff ButtonGroup
 * @sff JChfdkBox
 * @buthor Jfff Dinkins
 * @sindf 1.2
 */
@SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
publid dlbss JRbdioButton fxtfnds JTogglfButton implfmfnts Addfssiblf {

    /**
     * @sff #gftUIClbssID
     * @sff #rfbdObjfdt
     */
    privbtf stbtid finbl String uiClbssID = "RbdioButtonUI";


    /**
     * Crfbtfs bn initiblly unsflfdtfd rbdio button
     * with no sft tfxt.
     */
    publid JRbdioButton () {
        this(null, null, fblsf);
    }

    /**
     * Crfbtfs bn initiblly unsflfdtfd rbdio button
     * with thf spfdififd imbgf but no tfxt.
     *
     * @pbrbm idon  thf imbgf thbt thf button should displby
     */
    publid JRbdioButton(Idon idon) {
        this(null, idon, fblsf);
    }

    /**
     * Crfbtfs b rbdiobutton whfrf propfrtifs brf tbkfn from thf
     * Adtion supplifd.
     *
     * @pbrbm b bn {@dodf Adtion}
     * @sindf 1.3
     */
    publid JRbdioButton(Adtion b) {
        this();
        sftAdtion(b);
    }

    /**
     * Crfbtfs b rbdio button with thf spfdififd imbgf
     * bnd sflfdtion stbtf, but no tfxt.
     *
     * @pbrbm idon  thf imbgf thbt thf button should displby
     * @pbrbm sflfdtfd  if truf, thf button is initiblly sflfdtfd;
     *                  othfrwisf, thf button is initiblly unsflfdtfd
     */
    publid JRbdioButton(Idon idon, boolfbn sflfdtfd) {
        this(null, idon, sflfdtfd);
    }

    /**
     * Crfbtfs bn unsflfdtfd rbdio button with thf spfdififd tfxt.
     *
     * @pbrbm tfxt  thf string displbyfd on thf rbdio button
     */
    publid JRbdioButton (String tfxt) {
        this(tfxt, null, fblsf);
    }

    /**
     * Crfbtfs b rbdio button with thf spfdififd tfxt
     * bnd sflfdtion stbtf.
     *
     * @pbrbm tfxt  thf string displbyfd on thf rbdio button
     * @pbrbm sflfdtfd  if truf, thf button is initiblly sflfdtfd;
     *                  othfrwisf, thf button is initiblly unsflfdtfd
     */
    publid JRbdioButton (String tfxt, boolfbn sflfdtfd) {
        this(tfxt, null, sflfdtfd);
    }

    /**
     * Crfbtfs b rbdio button thbt hbs thf spfdififd tfxt bnd imbgf,
     * bnd thbt is initiblly unsflfdtfd.
     *
     * @pbrbm tfxt  thf string displbyfd on thf rbdio button
     * @pbrbm idon  thf imbgf thbt thf button should displby
     */
    publid JRbdioButton(String tfxt, Idon idon) {
        this(tfxt, idon, fblsf);
    }

    /**
     * Crfbtfs b rbdio button thbt hbs thf spfdififd tfxt, imbgf,
     * bnd sflfdtion stbtf.
     *
     * @pbrbm tfxt  thf string displbyfd on thf rbdio button
     * @pbrbm idon  thf imbgf thbt thf button should displby
     * @pbrbm sflfdtfd if {@dodf truf}, thf button is initiblly sflfdtfd
     *                 othfrwisf, thf button is initiblly unsflfdtfd
     */
    publid JRbdioButton (String tfxt, Idon idon, boolfbn sflfdtfd) {
        supfr(tfxt, idon, sflfdtfd);
        sftBordfrPbintfd(fblsf);
        sftHorizontblAlignmfnt(LEADING);
    }


    /**
     * Rfsfts thf UI propfrty to b vbluf from thf durrfnt look bnd fffl.
     *
     * @sff JComponfnt#updbtfUI
     */
    publid void updbtfUI() {
        sftUI((ButtonUI)UIMbnbgfr.gftUI(this));
    }


    /**
     * Rfturns thf nbmf of thf L&bmp;F dlbss
     * thbt rfndfrs this domponfnt.
     *
     * @rfturn String "RbdioButtonUI"
     * @sff JComponfnt#gftUIClbssID
     * @sff UIDffbults#gftUI
     * @bfbninfo
     *        fxpfrt: truf
     *   dfsdription: A string thbt spfdififs thf nbmf of thf L&bmp;F dlbss.
     */
    publid String gftUIClbssID() {
        rfturn uiClbssID;
    }


    /**
     * Thf idon for rbdio buttons domfs from thf look bnd fffl,
     * not thf Adtion.
     */
    void sftIdonFromAdtion(Adtion b) {
    }

    /**
     * Sff rfbdObjfdt() bnd writfObjfdt() in JComponfnt for morf
     * informbtion bbout sfriblizbtion in Swing.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s) throws IOExdfption {
        s.dffbultWritfObjfdt();
        if (gftUIClbssID().fqubls(uiClbssID)) {
            bytf dount = JComponfnt.gftWritfObjCountfr(this);
            JComponfnt.sftWritfObjCountfr(this, --dount);
            if (dount == 0 && ui != null) {
                ui.instbllUI(this);
            }
        }
    }


    /**
     * Rfturns b string rfprfsfntbtion of this JRbdioButton. This mfthod
     * is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not
     * bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of this JRbdioButton.
     */
    protfdtfd String pbrbmString() {
        rfturn supfr.pbrbmString();
    }


/////////////////
// Addfssibility support
////////////////


    /**
     * Gfts thf AddfssiblfContfxt bssodibtfd with this JRbdioButton.
     * For JRbdioButtons, thf AddfssiblfContfxt tbkfs thf form of bn
     * AddfssiblfJRbdioButton.
     * A nfw AddfssiblfJRbdioButton instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn AddfssiblfJRbdioButton thbt sfrvfs bs thf
     *         AddfssiblfContfxt of this JRbdioButton
     * @bfbninfo
     *       fxpfrt: truf
     *  dfsdription: Thf AddfssiblfContfxt bssodibtfd with this Button
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfJRbdioButton();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>JRbdioButton</dodf> dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to rbdio button
     * usfr-intfrfbdf flfmfnts.
     * <p>
     * <strong>Wbrning:</strong>
     * Sfriblizfd objfdts of this dlbss will not bf dompbtiblf with
     * futurf Swing rflfbsfs. Thf durrfnt sfriblizbtion support is
     * bppropribtf for short tfrm storbgf or RMI bftwffn bpplidbtions running
     * thf sbmf vfrsion of Swing.  As of 1.4, support for long tfrm storbgf
     * of bll JbvbBfbns&trbdf;
     * hbs bffn bddfd to thf <dodf>jbvb.bfbns</dodf> pbdkbgf.
     * Plfbsf sff {@link jbvb.bfbns.XMLEndodfr}.
     */
    @SupprfssWbrnings("sfribl") // Sbmf-vfrsion sfriblizbtion only
    protfdtfd dlbss AddfssiblfJRbdioButton fxtfnds AddfssiblfJTogglfButton {

        /**
         * Gft thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf objfdt
         * @sff AddfssiblfRolf
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.RADIO_BUTTON;
        }

    } // innfr dlbss AddfssiblfJRbdioButton
}
