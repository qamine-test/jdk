/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.swing;

/** DfsktopMbnbgfr objfdts brf ownfd by b JDfsktopPbnf objfdt. Thfy brf rfsponsiblf
  * for implfmfnting L&bmp;F spfdifid bfhbviors for thf JDfsktopPbnf. JIntfrnblFrbmf
  * implfmfntbtions should dflfgbtf spfdifid bfhbviors to thf DfsktopMbnbgfr. For
  * instbndf, if b JIntfrnblFrbmf wbs bskfd to idonify, it should try:
  * <PRE>
  *    gftDfsktopPbnf().gftDfsktopMbnbgfr().idonifyFrbmf(frbmf);
  * </PRE>
  * This dflfgbtion bllows fbdh L&bmp;F to providf dustom bfhbviors for dfsktop-spfdifid
  * bdtions. (For fxbmplf, how bnd whfrf thf intfrnbl frbmf's idon would bppfbr.)
  * <p>This dlbss providfs b polidy for thf vbrious JIntfrnblFrbmf mfthods, it is not
  * mfbnt to bf dbllfd dirfdtly rbthfr thf vbrious JIntfrnblFrbmf mfthods will dbll
  * into thf DfsktopMbnbgfr.</p>
  *
  * @sff JDfsktopPbnf
  * @sff JIntfrnblFrbmf
  * @sff JIntfrnblFrbmf.JDfsktopIdon
  *
  * @buthor Dbvid Klobb
  * @sindf 1.2
  */
publid intfrfbdf DfsktopMbnbgfr
{
    /**
     * If possiblf, displby this frbmf in bn bppropribtf lodbtion.
     * Normblly, this is not dbllfd, bs thf drfbtor of thf JIntfrnblFrbmf
     * will bdd thf frbmf to thf bppropribtf pbrfnt.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf displbyfd
     */
    void opfnFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, this dbll should rfmovf thf frbmf from its pbrfnt.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf rfmovfd
     */
    void dlosfFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, thf frbmf should bf rfsizfd to mbtdh its pbrfnts bounds.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf rfsizfd
     */
    void mbximizfFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, this indidbtfs thbt thf frbmf should bf rfstorfd to its
     * sizf bnd position prior to b mbximizfFrbmf() dbll.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf rfstorfd
     */
    void minimizfFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, rfmovf this frbmf from its pbrfnt bnd bdd bn idonid rfprfsfntbtion.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf idonififd
     */
    void idonifyFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, rfmovf bny idonid rfprfsfntbtion thbt is prfsfnt bnd rfstorf thf
     * frbmf to it's originbl sizf bnd lodbtion.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf df-idonififd
     */
    void dfidonifyFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, indidbtf thbt this frbmf hbs fodus. This is usublly dbllfd bftfr
     * thf JIntfrnblFrbmf's IS_SELECTED_PROPERTY hbs bffn sft to truf.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf bdtivbtfd
     */
    void bdtivbtfFrbmf(JIntfrnblFrbmf f);

    /**
     * Gfnfrblly, indidbtf thbt this frbmf hbs lost fodus. This is usublly dbllfd
     * bftfr thf JIntfrnblFrbmf's IS_SELECTED_PROPERTY hbs bffn sft to fblsf.
     *
     * @pbrbm f  thf {@dodf JIntfrnblFrbmf} to bf dfbdtivbtfd
     */
    void dfbdtivbtfFrbmf(JIntfrnblFrbmf f);

    /**
     * This mfthod is normblly dbllfd whfn thf usfr hbs indidbtfd thbt
     * thfy will bfgin drbgging b domponfnt bround. This mfthod should bf dbllfd
     * prior to bny drbgFrbmf() dblls to bllow thf DfsktopMbnbgfr to prfpbrf bny
     * nfdfssbry stbtf. Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing drbggfd
     */
    void bfginDrbggingFrbmf(JComponfnt f);

    /**
     * Thf usfr hbs movfd thf frbmf. Cblls to this mfthod will bf prfdfdfd by dblls
     * to bfginDrbggingFrbmf().
     * Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing drbggfd
     * @pbrbm nfwX  thf nfw x-doordinbtf
     * @pbrbm nfwY  thf nfw y-doordinbtf
     */
    void drbgFrbmf(JComponfnt f, int nfwX, int nfwY);

    /**
     * This mfthod signbls thf fnd of thf drbgging sfssion. Any stbtf mbintbinfd by
     * thf DfsktopMbnbgfr dbn bf rfmovfd hfrf.  Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing drbggfd
     */
    void fndDrbggingFrbmf(JComponfnt f);

    /**
     * This mfthod is normblly dbllfd whfn thf usfr hbs indidbtfd thbt
     * thfy will bfgin rfsizing thf frbmf. This mfthod should bf dbllfd
     * prior to bny rfsizfFrbmf() dblls to bllow thf DfsktopMbnbgfr to prfpbrf bny
     * nfdfssbry stbtf.  Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing rfsizfd
     */
    void bfginRfsizingFrbmf(JComponfnt f, int dirfdtion);

    /**
     * Thf usfr hbs rfsizfd thf domponfnt. Cblls to this mfthod will bf prfdfdfd by dblls
     * to bfginRfsizingFrbmf().
     * Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing rfsizfd
     * @pbrbm nfwX  thf nfw x-doordinbtf
     * @pbrbm nfwY  thf nfw y-doordinbtf
     * @pbrbm nfwWidth  thf nfw width
     * @pbrbm nfwHfight  thf nfw hfight
     */
    void rfsizfFrbmf(JComponfnt f, int nfwX, int nfwY, int nfwWidth, int nfwHfight);

    /**
     * This mfthod signbls thf fnd of thf rfsizf sfssion. Any stbtf mbintbinfd by
     * thf DfsktopMbnbgfr dbn bf rfmovfd hfrf.  Normblly <b>f</b> will bf b JIntfrnblFrbmf.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing rfsizfd
     */
    void fndRfsizingFrbmf(JComponfnt f);

    /**
     * This is b primitivf rfshbpf mfthod.
     *
     * @pbrbm f  thf {@dodf JComponfnt} bfing movfd or rfsizfd
     * @pbrbm nfwX  thf nfw x-doordinbtf
     * @pbrbm nfwY  thf nfw y-doordinbtf
     * @pbrbm nfwWidth  thf nfw width
     * @pbrbm nfwHfight  thf nfw hfight
     */
    void sftBoundsForFrbmf(JComponfnt f, int nfwX, int nfwY, int nfwWidth, int nfwHfight);
}
