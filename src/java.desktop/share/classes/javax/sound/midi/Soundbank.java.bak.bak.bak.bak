/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.midi;

import jbvb.nft.URL;


/**
 * A <dodf>Soundbbnk</dodf> dontbins b sft of <dodf>Instrumfnts</dodf>
 * thbt dbn bf lobdfd into b <dodf>Synthfsizfr</dodf>.
 * Notf thbt b Jbvb Sound <dodf>Soundbbnk</dodf> is difffrfnt from b MIDI bbnk.
 * MIDI pfrmits up to 16383 bbnks, fbdh dontbining up to 128 instrumfnts
 * (blso somftimfs dbllfd progrbms, pbtdhfs, or timbrfs).
 * Howfvfr, b <dodf>Soundbbnk</dodf> dbn dontbin 16383 timfs 128 instrumfnts,
 * bfdbusf thf instrumfnts within b <dodf>Soundbbnk</dodf> brf indfxfd by both
 * b MIDI progrbm numbfr bnd b MIDI bbnk numbfr (vib b <dodf>Pbtdh</dodf>
 * objfdt). Thus, b <dodf>Soundbbnk</dodf> dbn bf thought of bs b dollfdtion
 * of MIDI bbnks.
 * <p>
 * <dodf>Soundbbnk</dodf> indludfs mfthods thbt rfturn <dodf>String</dodf>
 * objfdts dontbining thf sound bbnk's nbmf, mbnufbdturfr, vfrsion numbfr, bnd
 * dfsdription.  Thf prfdisf dontfnt bnd formbt of thfsf strings is lfft
 * to thf implfmfntor.
 * <p>
 * Difffrfnt synthfsizfrs usf b vbrifty of synthfsis tfdhniqufs.  A dommon
 * onf is wbvftbblf synthfsis, in whidh b sfgmfnt of rfdordfd sound is
 * plbyfd bbdk, oftfn with looping bnd pitdh dhbngf.  Thf Downlobdbblf Sound
 * (DLS) formbt usfs sfgmfnts of rfdordfd sound, bs dofs thf Hfbdspbdf Enginf.
 * <dodf>Soundbbnks</dodf> bnd <dodf>Instrumfnts</dodf> thbt brf bbsfd on
 * wbvftbblf synthfsis (or othfr usfs of storfd sound rfdordings) should
 * typidblly implfmfnt thf <dodf>gftRfsourdfs()</dodf>
 * mfthod to providf bddfss to thfsf rfdordfd sfgmfnts.  This is optionbl,
 * howfvfr; thf mfthod dbn rfturn bn zfro-lfngth brrby if thf synthfsis tfdhniquf
 * dofsn't usf sbmplfd sound (FM synthfsis bnd physidbl modfling brf fxbmplfs
 * of sudh tfdhniqufs), or if it dofs but thf implfmfntor dhoosfs not to mbkf thf
 * sbmplfs bddfssiblf.
 *
 * @sff Synthfsizfr#gftDffbultSoundbbnk
 * @sff Synthfsizfr#isSoundbbnkSupportfd
 * @sff Synthfsizfr#lobdInstrumfnts(Soundbbnk, Pbtdh[])
 * @sff Pbtdh
 * @sff Instrumfnt
 * @sff SoundbbnkRfsourdf
 *
 * @buthor Dbvid Rivbs
 * @buthor Kbrb Kytlf
 */

publid intfrfbdf Soundbbnk {


    /**
     * Obtbins thf nbmf of thf sound bbnk.
     * @rfturn b <dodf>String</dodf> nbming thf sound bbnk
     */
    publid String gftNbmf();

    /**
     * Obtbins thf vfrsion string for thf sound bbnk.
     * @rfturn b <dodf>String</dodf> thbt indidbtfs thf sound bbnk's vfrsion
     */
    publid String gftVfrsion();

    /**
     * Obtbins b <dodf>string</dodf> nbming thf dompbny thbt providfs thf
     * sound bbnk
     * @rfturn thf vfndor string
     */
    publid String gftVfndor();

    /**
     * Obtbins b tfxtubl dfsdription of thf sound bbnk, suitbblf for displby.
     * @rfturn b <dodf>String</dodf> thbt dfsdribfs thf sound bbnk
     */
    publid String gftDfsdription();


    /**
     * Extrbdts b list of non-Instrumfnt rfsourdfs dontbinfd in thf sound bbnk.
     * @rfturn bn brrby of rfsourdfs, fxdluding instrumfnts.  If thf sound bbnk dontbins
     * no rfsourdfs (othfr thbn instrumfnts), rfturns bn brrby of lfngth 0.
     */
    publid SoundbbnkRfsourdf[] gftRfsourdfs();


    /**
     * Obtbins b list of instrumfnts dontbinfd in this sound bbnk.
     * @rfturn bn brrby of thf <dodf>Instrumfnts</dodf> in this
     * <dodf>SoundBbnk</dodf>
     * If thf sound bbnk dontbins no instrumfnts, rfturns bn brrby of lfngth 0.
     *
     * @sff Synthfsizfr#gftLobdfdInstrumfnts
     * @sff #gftInstrumfnt(Pbtdh)
     */
    publid Instrumfnt[] gftInstrumfnts();

    /**
     * Obtbins bn <dodf>Instrumfnt</dodf> from thf givfn <dodf>Pbtdh</dodf>.
     * @pbrbm pbtdh b <dodf>Pbtdh</dodf> objfdt spfdifying thf bbnk indfx
     * bnd progrbm dhbngf numbfr
     * @rfturn thf rfqufstfd instrumfnt, or <dodf>null</dodf> if thf
     * sound bbnk dofsn't dontbin thbt instrumfnt
     *
     * @sff #gftInstrumfnts
     * @sff Synthfsizfr#lobdInstrumfnts(Soundbbnk, Pbtdh[])
     */
    publid Instrumfnt gftInstrumfnt(Pbtdh pbtdh);


}
