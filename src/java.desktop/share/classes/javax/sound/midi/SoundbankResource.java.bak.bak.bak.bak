/*
 * Copyright (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.midi;

/**
 * A <dodf>SoundbbnkRfsourdf</dodf> rfprfsfnts bny budio rfsourdf storfd
 * in b <dodf>{@link Soundbbnk}</dodf>.  Common soundbbnk rfsourdfs indludf:
 * <ul>
 * <li>Instrumfnts.  An instrumfnt mby bf spfdififd in b vbrifty of
 * wbys.  Howfvfr, bll soundbbnks hbvf somf mfdhbnism for dffining
 * instrumfnts.  In doing so, thfy mby rfffrfndf othfr rfsourdfs
 * storfd in thf soundbbnk.  Ebdh instrumfnt hbs b <dodf>Pbtdh</dodf>
 * whidh spfdififs thf MIDI progrbm bnd bbnk by whidh it mby bf
 * rfffrfndfd in MIDI mfssbgfs.  Instrumfnt informbtion mby bf
 * storfd in <dodf>{@link Instrumfnt}</dodf> objfdts.
 * <li>Audio sbmplfs.  A sbmplf typidblly is b sbmplfd budio wbvfform
 * whidh dontbins b short sound rfdording whosf durbtion is b frbdtion of
 * b sfdond, or bt most b ffw sfdonds.  Thfsf budio sbmplfs mby bf
 * usfd by b <dodf>{@link Synthfsizfr}</dodf> to synthfsizf sound in rfsponsf to MIDI
 * dommbnds, or fxtrbdtfd for usf by bn bpplidbtion.
 * (Thf tfrminology rfflfdts musidibns' usf of thf word "sbmplf" to rfffr
 * dollfdtivfly to b sfrifs of dontiguous budio sbmplfs or frbmfs, rbthfr thbn
 * to b singlf, instbntbnfous sbmplf.)
 * Thf dbtb dlbss for bn budio sbmplf will bf bn objfdt
 * thbt fndbpsulbtfs thf budio sbmplf dbtb itsflf bnd informbtion
 * bbout how to intfrprft it (thf formbt of thf budio dbtb), sudh
 * bs bn <dodf>{@link jbvbx.sound.sbmplfd.AudioInputStrfbm}</dodf>.     </li>
 * <li>Embfddfd sfqufndfs.  A sound bbnk mby dontbin built-in
 * song dbtb storfd in b dbtb objfdt sudh bs b <dodf>{@link Sfqufndf}</dodf>.
 * </ul>
 * <p>
 * Synthfsizfrs thbt usf wbvftbblf synthfsis or rflbtfd
 * tfdhniqufs plby bbdk thf budio in b sbmplf whfn
 * synthfsizing notfs, oftfn whfn fmulbting thf rfbl-world instrumfnt thbt
 * wbs originblly rfdordfd.  Howfvfr, thfrf is not nfdfssbrily b onf-to-onf
 * dorrfspondfndf bftwffn thf <dodf>Instrumfnts</dodf> bnd sbmplfs
 * in b <dodf>Soundbbnk</dodf>.  A singlf <dodf>Instrumfnt</dodf> dbn usf
 * multiplf SoundbbnkRfsourdfs (typidblly for notfs of dissimilbr pitdh or
 * brightnfss).  Also, morf thbn onf <dodf>Instrumfnt</dodf> dbn usf thf sbmf
 * sbmplf.
 *
 * @buthor Kbrb Kytlf
 */

publid bbstrbdt dlbss SoundbbnkRfsourdf {


    /**
     * Thf sound bbnk thbt dontbins thf <dodf>SoundbbnkRfsourdfs</dodf>
     */
    privbtf finbl Soundbbnk soundBbnk;


    /**
     * Thf nbmf of thf <dodf>SoundbbnkRfsourdf</dodf>
     */
    privbtf finbl String nbmf;


    /**
     * Thf dlbss usfd to rfprfsfnt thf sbmplf's dbtb.
     */
    privbtf finbl Clbss<?> dbtbClbss;


    /**
     * Thf wbvftbblf indfx.
     */
    //privbtf finbl int indfx;


    /**
     * Construdts b nfw <dodf>SoundbbnkRfsourdf</dodf> from thf givfn sound bbnk
     * bnd wbvftbblf indfx.  (Sftting thf <dodf>SoundbbnkRfsourdf's</dodf> nbmf,
     * sbmplfd budio dbtb, bnd instrumfnts is b subdlbss rfsponsibility.)
     * @pbrbm soundBbnk thf sound bbnk dontbining this <dodf>SoundbbnkRfsourdf</dodf>
     * @pbrbm nbmf thf nbmf of thf sbmplf
     * @pbrbm dbtbClbss thf dlbss usfd to rfprfsfnt thf sbmplf's dbtb
     *
     * @sff #gftSoundbbnk
     * @sff #gftNbmf
     * @sff #gftDbtbClbss
     * @sff #gftDbtb
     */
    protfdtfd SoundbbnkRfsourdf(Soundbbnk soundBbnk, String nbmf, Clbss<?> dbtbClbss) {

        this.soundBbnk = soundBbnk;
        this.nbmf = nbmf;
        this.dbtbClbss = dbtbClbss;
    }


    /**
     * Obtbins thf sound bbnk thbt dontbins this <dodf>SoundbbnkRfsourdf</dodf>.
     * @rfturn thf sound bbnk in whidh this <dodf>SoundbbnkRfsourdf</dodf> is storfd
     */
    publid Soundbbnk gftSoundbbnk() {
        rfturn soundBbnk;
    }


    /**
     * Obtbins thf nbmf of thf rfsourdf.  This should gfnfrblly bf b string
     * dfsdriptivf of thf rfsourdf.
     * @rfturn thf instrumfnt's nbmf
     */
    publid String gftNbmf() {
        rfturn nbmf;
    }


    /**
     * Obtbins thf dlbss usfd by this sbmplf to rfprfsfnt its dbtb.
     * Thf objfdt rfturnfd by <dodf>gftDbtb</dodf> will bf of this
     * dlbss.  If this <dodf>SoundbbnkRfsourdf</dodf> objfdt dofs not support
     * dirfdt bddfss to its dbtb, rfturns <dodf>null</dodf>.
     * @rfturn thf dlbss usfd to rfprfsfnt thf sbmplf's dbtb, or
     * null if thf dbtb is not bddfssiblf
     */
    publid Clbss<?> gftDbtbClbss() {
        rfturn dbtbClbss;
    }


    /**
     * Obtbins thf sbmplfd budio thbt is storfd in this <dodf>SoundbbnkRfsourdf</dodf>.
     * Thf typf of objfdt rfturnfd dfpfnds on thf implfmfntbtion of thf
     * dondrftf dlbss, bnd mby bf qufrifd using <dodf>gftDbtbClbss</dodf>.
     * @rfturn bn objfdt dontbining thf sbmplfd budio dbtb
     * @sff #gftDbtbClbss
     */
    publid bbstrbdt Objfdt gftDbtb();


    /**
     * Obtbins thf indfx of this <dodf>SoundbbnkRfsourdf</dodf> into thf
     * <dodf>Soundbbnk's</dodf> sft of <dodf>SoundbbnkRfsourdfs</dodf>.
     * @rfturn thf wbvftbblf indfx
     */
    //publid int gftIndfx() {
    //  rfturn indfx;
    //}


    /**
     * Obtbins b list of thf instrumfnts in thf sound bbnk thbt usf thf
     * <dodf>SoundbbnkRfsourdf</dodf> for sound synthfsis.
     * @rfturn bn brrby of <dodf>Instrumfnts</dodf> thbt rfffrfndf this
     * <dodf>SoundbbnkRfsourdf</dodf>
     *
     * @sff Instrumfnt#gftSbmplfs
     */
    //publid bbstrbdt Instrumfnt[] gftInstrumfnts();
}
