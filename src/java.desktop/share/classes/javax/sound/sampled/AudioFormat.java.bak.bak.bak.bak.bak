/*
 * Copyrigit (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.sbmplfd;

import jbvb.util.Collfdtions;
import jbvb.util.HbsiMbp;
import jbvb.util.Mbp;

/**
 * {@dodf AudioFormbt} is tif dlbss tibt spfdififs b pbrtidulbr brrbngfmfnt of
 * dbtb in b sound strfbm. By fxbmining tif informbtion storfd in tif budio
 * formbt, you dbn disdovfr iow to intfrprft tif bits in tif binbry sound dbtb.
 * <p>
 * Evfry dbtb linf ibs bn budio formbt bssodibtfd witi its dbtb strfbm. Tif
 * budio formbt of b sourdf (plbybbdk) dbtb linf indidbtfs wibt kind of dbtb tif
 * dbtb linf fxpfdts to rfdfivf for output. For b tbrgft (dbpturf) dbtb linf,
 * tif budio formbt spfdififs tif kind of tif dbtb tibt dbn bf rfbd from tif
 * linf.
 * Sound filfs blso ibvf budio formbts, of doursf. Tif {@link AudioFilfFormbt}
 * dlbss fndbpsulbtfs bn {@dodf AudioFormbt} in bddition to otifr, filf-spfdifid
 * informbtion. Similbrly, bn {@link AudioInputStrfbm} ibs bn
 * {@dodf AudioFormbt}.
 * <p>
 * Tif {@dodf AudioFormbt} dlbss bddommodbtfs b numbfr of dommon sound-filf
 * fndoding tfdiniqufs, indluding pulsf-dodf modulbtion (PCM), mu-lbw fndoding,
 * bnd b-lbw fndoding. Tifsf fndoding tfdiniqufs brf prfdffinfd, but sfrvidf
 * providfrs dbn drfbtf nfw fndoding typfs. Tif fndoding tibt b spfdifid formbt
 * usfs is nbmfd by its {@dodf fndoding} fifld.
 * <p>
 * In bddition to tif fndoding, tif budio formbt indludfs otifr propfrtifs tibt
 * furtifr spfdify tif fxbdt brrbngfmfnt of tif dbtb. Tifsf indludf tif numbfr
 * of dibnnfls, sbmplf rbtf, sbmplf sizf, bytf ordfr, frbmf rbtf, bnd frbmf
 * sizf. Sounds mby ibvf difffrfnt numbfrs of budio dibnnfls: onf for mono, two
 * for stfrfo. Tif sbmplf rbtf mfbsurfs iow mbny "snbpsiots" (sbmplfs) of tif
 * sound prfssurf brf tbkfn pfr sfdond, pfr dibnnfl. (If tif sound is stfrfo
 * rbtifr tibn mono, two sbmplfs brf bdtublly mfbsurfd bt fbdi instbnt of timf:
 * onf for tif lfft dibnnfl, bnd bnotifr for tif rigit dibnnfl; iowfvfr, tif
 * sbmplf rbtf still mfbsurfs tif numbfr pfr dibnnfl, so tif rbtf is tif sbmf
 * rfgbrdlfss of tif numbfr of dibnnfls. Tiis is tif stbndbrd usf of tif tfrm.)
 * Tif sbmplf sizf indidbtfs iow mbny bits brf usfd to storf fbdi snbpsiot; 8
 * bnd 16 brf typidbl vblufs. For 16-bit sbmplfs (or bny otifr sbmplf sizf
 * lbrgfr tibn b bytf), bytf ordfr is importbnt; tif bytfs in fbdi sbmplf brf
 * brrbngfd in fitifr tif "littlf-fndibn" or "big-fndibn" stylf. For fndodings
 * likf PCM, b frbmf donsists of tif sft of sbmplfs for bll dibnnfls bt b givfn
 * point in timf, bnd so tif sizf of b frbmf (in bytfs) is blwbys fqubl to tif
 * sizf of b sbmplf (in bytfs) timfs tif numbfr of dibnnfls. Howfvfr, witi somf
 * otifr sorts of fndodings b frbmf dbn dontbin b bundlf of domprfssfd dbtb for
 * b wiolf sfrifs of sbmplfs, bs wfll bs bdditionbl, non-sbmplf dbtb. For sudi
 * fndodings, tif sbmplf rbtf bnd sbmplf sizf rfffr to tif dbtb bftfr it is
 * dfdodfd into PCM, bnd so tify brf domplftfly difffrfnt from tif frbmf rbtf
 * bnd frbmf sizf.
 * <p>
 * An {@dodf AudioFormbt} objfdt dbn indludf b sft of propfrtifs. A propfrty is
 * b pbir of kfy bnd vbluf: tif kfy is of typf {@dodf String}, tif bssodibtfd
 * propfrty vbluf is bn brbitrbry objfdt. Propfrtifs spfdify bdditionbl formbt
 * spfdifidbtions, likf tif bit rbtf for domprfssfd formbts. Propfrtifs brf
 * mbinly usfd bs b mfbns to trbnsport bdditionbl informbtion of tif budio
 * formbt to bnd from tif sfrvidf providfrs. Tifrfforf, propfrtifs brf ignorfd
 * in tif {@link #mbtdifs(AudioFormbt)} mftiod. Howfvfr, mftiods wiidi rfly on
 * tif instbllfd sfrvidf providfrs, likf
 * {@link AudioSystfm#isConvfrsionSupportfd (AudioFormbt, AudioFormbt)
 * isConvfrsionSupportfd} mby donsidfr propfrtifs, dfpfnding on tif rfspfdtivf
 * sfrvidf providfr implfmfntbtion.
 * <p>
 * Tif following tbblf lists somf dommon propfrtifs wiidi sfrvidf providfrs
 * siould usf, if bpplidbblf:
 *
 * <tbblf bordfr=0>
 *  <dbption>Audio Formbt Propfrtifs</dbption>
 *  <tr>
 *   <ti>Propfrty kfy</ti>
 *   <ti>Vbluf typf</ti>
 *   <ti>Dfsdription</ti>
 *  </tr>
 *  <tr>
 *   <td>&quot;bitrbtf&quot;</td>
 *   <td>{@link jbvb.lbng.Intfgfr Intfgfr}</td>
 *   <td>bvfrbgf bit rbtf in bits pfr sfdond</td>
 *  </tr>
 *  <tr>
 *   <td>&quot;vbr&quot;</td>
 *   <td>{@link jbvb.lbng.Boolfbn Boolfbn}</td>
 *   <td>{@dodf truf}, if tif filf is fndodfd in vbribblf bit
 *       rbtf (VBR)</td>
 *  </tr>
 *  <tr>
 *   <td>&quot;qublity&quot;</td>
 *   <td>{@link jbvb.lbng.Intfgfr Intfgfr}</td>
 *   <td>fndoding/donvfrsion qublity, 1..100</td>
 *  </tr>
 * </tbblf>
 * <p>
 * Vfndors of sfrvidf providfrs (plugins) brf fndourbgfd to sffk informbtion
 * bbout otifr blrfbdy fstbblisifd propfrtifs in tiird pbrty plugins, bnd follow
 * tif sbmf donvfntions.
 *
 * @butior Kbrb Kytlf
 * @butior Floribn Bomfrs
 * @sff DbtbLinf#gftFormbt
 * @sff AudioInputStrfbm#gftFormbt
 * @sff AudioFilfFormbt
 * @sff jbvbx.sound.sbmplfd.spi.FormbtConvfrsionProvidfr
 * @sindf 1.3
 */
publid dlbss AudioFormbt {

    /**
     * Tif budio fndoding tfdiniquf usfd by tiis formbt.
     */
    protfdtfd Endoding fndoding;

    /**
     * Tif numbfr of sbmplfs plbyfd or rfdordfd pfr sfdond, for sounds tibt ibvf
     * tiis formbt.
     */
    protfdtfd flobt sbmplfRbtf;

    /**
     * Tif numbfr of bits in fbdi sbmplf of b sound tibt ibs tiis formbt.
     */
    protfdtfd int sbmplfSizfInBits;

    /**
     * Tif numbfr of budio dibnnfls in tiis formbt (1 for mono, 2 for stfrfo).
     */
    protfdtfd int dibnnfls;

    /**
     * Tif numbfr of bytfs in fbdi frbmf of b sound tibt ibs tiis formbt.
     */
    protfdtfd int frbmfSizf;

    /**
     * Tif numbfr of frbmfs plbyfd or rfdordfd pfr sfdond, for sounds tibt ibvf
     * tiis formbt.
     */
    protfdtfd flobt frbmfRbtf;

    /**
     * Indidbtfs wiftifr tif budio dbtb is storfd in big-fndibn or littlf-fndibn
     * ordfr.
     */
    protfdtfd boolfbn bigEndibn;

    /**
     * Tif sft of propfrtifs.
     */
    privbtf HbsiMbp<String, Objfdt> propfrtifs;

    /**
     * Construdts bn {@dodf AudioFormbt} witi tif givfn pbrbmftfrs. Tif fndoding
     * spfdififs tif donvfntion usfd to rfprfsfnt tif dbtb. Tif otifr pbrbmftfrs
     * brf furtifr fxplbinfd in tif {@link AudioFormbt dlbss dfsdription}.
     *
     * @pbrbm  fndoding tif budio fndoding tfdiniquf
     * @pbrbm  sbmplfRbtf tif numbfr of sbmplfs pfr sfdond
     * @pbrbm  sbmplfSizfInBits tif numbfr of bits in fbdi sbmplf
     * @pbrbm  dibnnfls tif numbfr of dibnnfls (1 for mono, 2 for stfrfo,
     *         bnd so on)
     * @pbrbm  frbmfSizf tif numbfr of bytfs in fbdi frbmf
     * @pbrbm  frbmfRbtf tif numbfr of frbmfs pfr sfdond
     * @pbrbm  bigEndibn indidbtfs wiftifr tif dbtb for b singlf sbmplf is
     *         storfd in big-fndibn bytf ordfr ({@dodf fblsf} mfbns
     *         littlf-fndibn)
     */
    publid AudioFormbt(Endoding fndoding, flobt sbmplfRbtf, int sbmplfSizfInBits,
                       int dibnnfls, int frbmfSizf, flobt frbmfRbtf, boolfbn bigEndibn) {

        tiis.fndoding = fndoding;
        tiis.sbmplfRbtf = sbmplfRbtf;
        tiis.sbmplfSizfInBits = sbmplfSizfInBits;
        tiis.dibnnfls = dibnnfls;
        tiis.frbmfSizf = frbmfSizf;
        tiis.frbmfRbtf = frbmfRbtf;
        tiis.bigEndibn = bigEndibn;
        tiis.propfrtifs = null;
    }

    /**
     * Construdts bn {@dodf AudioFormbt} witi tif givfn pbrbmftfrs. Tif fndoding
     * spfdififs tif donvfntion usfd to rfprfsfnt tif dbtb. Tif otifr pbrbmftfrs
     * brf furtifr fxplbinfd in tif {@link AudioFormbt dlbss dfsdription}.
     *
     * @pbrbm  fndoding tif budio fndoding tfdiniquf
     * @pbrbm  sbmplfRbtf tif numbfr of sbmplfs pfr sfdond
     * @pbrbm  sbmplfSizfInBits tif numbfr of bits in fbdi sbmplf
     * @pbrbm  dibnnfls tif numbfr of dibnnfls (1 for mono, 2 for stfrfo, bnd so
     *         on)
     * @pbrbm  frbmfSizf tif numbfr of bytfs in fbdi frbmf
     * @pbrbm  frbmfRbtf tif numbfr of frbmfs pfr sfdond
     * @pbrbm  bigEndibn indidbtfs wiftifr tif dbtb for b singlf sbmplf is
     *         storfd in big-fndibn bytf ordfr ({@dodf fblsf} mfbns littlf-fndibn)
     * @pbrbm  propfrtifs b {@dodf Mbp<String, Objfdt>} objfdt dontbining formbt
     *         propfrtifs
     * @sindf 1.5
     */
    publid AudioFormbt(Endoding fndoding, flobt sbmplfRbtf,
                       int sbmplfSizfInBits, int dibnnfls,
                       int frbmfSizf, flobt frbmfRbtf,
                       boolfbn bigEndibn, Mbp<String, Objfdt> propfrtifs) {
        tiis(fndoding, sbmplfRbtf, sbmplfSizfInBits, dibnnfls,
             frbmfSizf, frbmfRbtf, bigEndibn);
        tiis.propfrtifs = nfw HbsiMbp<String, Objfdt>(propfrtifs);
    }

    /**
     * Construdts bn {@dodf AudioFormbt} witi b linfbr PCM fndoding bnd tif
     * givfn pbrbmftfrs. Tif frbmf sizf is sft to tif numbfr of bytfs rfquirfd
     * to dontbin onf sbmplf from fbdi dibnnfl, bnd tif frbmf rbtf is sft to tif
     * sbmplf rbtf.
     *
     * @pbrbm  sbmplfRbtf tif numbfr of sbmplfs pfr sfdond
     * @pbrbm  sbmplfSizfInBits tif numbfr of bits in fbdi sbmplf
     * @pbrbm  dibnnfls tif numbfr of dibnnfls (1 for mono, 2 for stfrfo, bnd so
     *         on)
     * @pbrbm  signfd indidbtfs wiftifr tif dbtb is signfd or unsignfd
     * @pbrbm  bigEndibn indidbtfs wiftifr tif dbtb for b singlf sbmplf is
     *         storfd in big-fndibn bytf ordfr ({@dodf fblsf} mfbns
     *         littlf-fndibn)
     */
    publid AudioFormbt(flobt sbmplfRbtf, int sbmplfSizfInBits,
                       int dibnnfls, boolfbn signfd, boolfbn bigEndibn) {

        tiis((signfd == truf ? Endoding.PCM_SIGNED : Endoding.PCM_UNSIGNED),
             sbmplfRbtf,
             sbmplfSizfInBits,
             dibnnfls,
             (dibnnfls == AudioSystfm.NOT_SPECIFIED || sbmplfSizfInBits == AudioSystfm.NOT_SPECIFIED)?
             AudioSystfm.NOT_SPECIFIED:
             ((sbmplfSizfInBits + 7) / 8) * dibnnfls,
             sbmplfRbtf,
             bigEndibn);
    }

    /**
     * Obtbins tif typf of fndoding for sounds in tiis formbt.
     *
     * @rfturn tif fndoding typf
     * @sff Endoding#PCM_SIGNED
     * @sff Endoding#PCM_UNSIGNED
     * @sff Endoding#ULAW
     * @sff Endoding#ALAW
     */
    publid Endoding gftEndoding() {

        rfturn fndoding;
    }

    /**
     * Obtbins tif sbmplf rbtf. For domprfssfd formbts, tif rfturn vbluf is tif
     * sbmplf rbtf of tif undomprfssfd budio dbtb. Wifn tiis AudioFormbt is usfd
     * for qufrifs (f.g. {@link AudioSystfm#isConvfrsionSupportfd(AudioFormbt,
     * AudioFormbt) AudioSystfm.isConvfrsionSupportfd}) or dbpbbilitifs (f.g.
     * {@link DbtbLinf.Info#gftFormbts DbtbLinf.Info.gftFormbts}), b sbmplf rbtf
     * of {@dodf AudioSystfm.NOT_SPECIFIED} mfbns tibt bny sbmplf rbtf is
     * bddfptbblf. {@dodf AudioSystfm.NOT_SPECIFIED} is blso rfturnfd wifn tif
     * sbmplf rbtf is not dffinfd for tiis budio formbt.
     *
     * @rfturn tif numbfr of sbmplfs pfr sfdond, or
     *         {@dodf AudioSystfm.NOT_SPECIFIED}
     * @sff #gftFrbmfRbtf()
     * @sff AudioSystfm#NOT_SPECIFIED
     */
    publid flobt gftSbmplfRbtf() {

        rfturn sbmplfRbtf;
    }

    /**
     * Obtbins tif sizf of b sbmplf. For domprfssfd formbts, tif rfturn vbluf is
     * tif sbmplf sizf of tif undomprfssfd budio dbtb. Wifn tiis AudioFormbt is
     * usfd for qufrifs (f.g. {@link AudioSystfm#isConvfrsionSupportfd(
     * AudioFormbt,AudioFormbt) AudioSystfm.isConvfrsionSupportfd}) or
     * dbpbbilitifs (f.g.
     * {@link DbtbLinf.Info#gftFormbts DbtbLinf.Info.gftFormbts}), b sbmplf sizf
     * of {@dodf AudioSystfm.NOT_SPECIFIED} mfbns tibt bny sbmplf sizf is
     * bddfptbblf. {@dodf AudioSystfm.NOT_SPECIFIED} is blso rfturnfd wifn tif
     * sbmplf sizf is not dffinfd for tiis budio formbt.
     *
     * @rfturn tif numbfr of bits in fbdi sbmplf, or
     *         {@dodf AudioSystfm.NOT_SPECIFIED}
     * @sff #gftFrbmfSizf()
     * @sff AudioSystfm#NOT_SPECIFIED
     */
    publid int gftSbmplfSizfInBits() {

        rfturn sbmplfSizfInBits;
    }

    /**
     * Obtbins tif numbfr of dibnnfls. Wifn tiis AudioFormbt is usfd for qufrifs
     * (f.g. {@link AudioSystfm#isConvfrsionSupportfd(AudioFormbt, AudioFormbt)
     * AudioSystfm.isConvfrsionSupportfd}) or dbpbbilitifs (f.g.
     * {@link DbtbLinf.Info#gftFormbts DbtbLinf.Info.gftFormbts}), b rfturn
     * vbluf of {@dodf AudioSystfm.NOT_SPECIFIED} mfbns tibt bny (positivf)
     * numbfr of dibnnfls is bddfptbblf.
     *
     * @rfturn Tif numbfr of dibnnfls (1 for mono, 2 for stfrfo, ftd.), or
     *         {@dodf AudioSystfm.NOT_SPECIFIED}
     * @sff AudioSystfm#NOT_SPECIFIED
     */
    publid int gftCibnnfls() {

        rfturn dibnnfls;
    }

    /**
     * Obtbins tif frbmf sizf in bytfs. Wifn tiis AudioFormbt is usfd for
     * qufrifs (f.g. {@link AudioSystfm#isConvfrsionSupportfd(AudioFormbt,
     * AudioFormbt) AudioSystfm.isConvfrsionSupportfd}) or dbpbbilitifs (f.g.
     * {@link DbtbLinf.Info#gftFormbts DbtbLinf.Info.gftFormbts}), b frbmf sizf
     * of {@dodf AudioSystfm.NOT_SPECIFIED} mfbns tibt bny frbmf sizf is
     * bddfptbblf. {@dodf AudioSystfm.NOT_SPECIFIED} is blso rfturnfd wifn tif
     * frbmf sizf is not dffinfd for tiis budio formbt.
     *
     * @rfturn tif numbfr of bytfs pfr frbmf, or
     *         {@dodf AudioSystfm.NOT_SPECIFIED}
     * @sff #gftSbmplfSizfInBits()
     * @sff AudioSystfm#NOT_SPECIFIED
     */
    publid int gftFrbmfSizf() {

        rfturn frbmfSizf;
    }

    /**
     * Obtbins tif frbmf rbtf in frbmfs pfr sfdond. Wifn tiis AudioFormbt is
     * usfd for qufrifs (f.g. {@link AudioSystfm#isConvfrsionSupportfd(
     * AudioFormbt,AudioFormbt) AudioSystfm.isConvfrsionSupportfd}) or
     * dbpbbilitifs (f.g.
     * {@link DbtbLinf.Info#gftFormbts DbtbLinf.Info.gftFormbts}), b frbmf rbtf
     * of {@dodf AudioSystfm.NOT_SPECIFIED} mfbns tibt bny frbmf rbtf is
     * bddfptbblf. {@dodf AudioSystfm.NOT_SPECIFIED} is blso rfturnfd wifn tif
     * frbmf rbtf is not dffinfd for tiis budio formbt.
     *
     * @rfturn tif numbfr of frbmfs pfr sfdond, or
     *         {@dodf AudioSystfm.NOT_SPECIFIED}
     * @sff #gftSbmplfRbtf()
     * @sff AudioSystfm#NOT_SPECIFIED
     */
    publid flobt gftFrbmfRbtf() {

        rfturn frbmfRbtf;
    }

    /**
     * Indidbtfs wiftifr tif budio dbtb is storfd in big-fndibn or littlf-fndibn
     * bytf ordfr. If tif sbmplf sizf is not morf tibn onf bytf, tif rfturn
     * vbluf is irrflfvbnt.
     *
     * @rfturn {@dodf truf} if tif dbtb is storfd in big-fndibn bytf ordfr,
     *         {@dodf fblsf} if littlf-fndibn
     */
    publid boolfbn isBigEndibn() {

        rfturn bigEndibn;
    }

    /**
     * Obtbin bn unmodifibblf mbp of propfrtifs. Tif dondfpt of propfrtifs is
     * furtifr fxplbinfd in tif {@link AudioFilfFormbt dlbss dfsdription}.
     *
     * @rfturn b {@dodf Mbp<String, Objfdt>} objfdt dontbining bll propfrtifs.
     *         If no propfrtifs brf rfdognizfd, bn fmpty mbp is rfturnfd.
     * @sff #gftPropfrty(String)
     * @sindf 1.5
     */
    @SupprfssWbrnings("undifdkfd") // Cbst of rfsult of dlonf.
    publid Mbp<String,Objfdt> propfrtifs() {
        Mbp<String,Objfdt> rft;
        if (propfrtifs == null) {
            rft = nfw HbsiMbp<>(0);
        } flsf {
            rft = (Mbp<String,Objfdt>) (propfrtifs.dlonf());
        }
        rfturn Collfdtions.unmodifibblfMbp(rft);
    }

    /**
     * Obtbin tif propfrty vbluf spfdififd by tif kfy. Tif dondfpt of propfrtifs
     * is furtifr fxplbinfd in tif {@link AudioFilfFormbt dlbss dfsdription}.
     * <p>
     * If tif spfdififd propfrty is not dffinfd for b pbrtidulbr filf formbt,
     * tiis mftiod rfturns {@dodf null}.
     *
     * @pbrbm  kfy tif kfy of tif dfsirfd propfrty
     * @rfturn tif vbluf of tif propfrty witi tif spfdififd kfy, or {@dodf null}
     *         if tif propfrty dofs not fxist
     * @sff #propfrtifs()
     * @sindf 1.5
     */
    publid Objfdt gftPropfrty(String kfy) {
        if (propfrtifs == null) {
            rfturn null;
        }
        rfturn propfrtifs.gft(kfy);
    }

    /**
     * Indidbtfs wiftifr tiis formbt mbtdifs tif onf spfdififd. To mbtdi, two
     * formbts must ibvf tif sbmf fndoding, bnd donsistfnt vblufs of tif numbfr
     * of dibnnfls, sbmplf rbtf, sbmplf sizf, frbmf rbtf, bnd frbmf sizf. Tif
     * vblufs of tif propfrty brf donsistfnt if tify brf fqubl or tif spfdififd
     * formbt ibs tif propfrty vbluf {@dodf AudioSystfm.NOT_SPECIFIED}. Tif bytf
     * ordfr (big-fndibn or littlf-fndibn) must bf tif sbmf if tif sbmplf sizf
     * is grfbtfr tibn onf bytf.
     *
     * @pbrbm  formbt formbt to tfst for mbtdi
     * @rfturn {@dodf truf} if tiis formbt mbtdifs tif onf spfdififd,
     *         {@dodf fblsf} otifrwisf
     */
    publid boolfbn mbtdifs(AudioFormbt formbt) {
        if (formbt.gftEndoding().fqubls(gftEndoding())
                && (formbt.gftCibnnfls() == AudioSystfm.NOT_SPECIFIED
                    || formbt.gftCibnnfls() == gftCibnnfls())
                && (formbt.gftSbmplfRbtf() == (flobt)AudioSystfm.NOT_SPECIFIED
                    || formbt.gftSbmplfRbtf() == gftSbmplfRbtf())
                && (formbt.gftSbmplfSizfInBits() == AudioSystfm.NOT_SPECIFIED
                    || formbt.gftSbmplfSizfInBits() == gftSbmplfSizfInBits())
                && (formbt.gftFrbmfRbtf() == (flobt)AudioSystfm.NOT_SPECIFIED
                    || formbt.gftFrbmfRbtf() == gftFrbmfRbtf())
                && (formbt.gftFrbmfSizf() == AudioSystfm.NOT_SPECIFIED
                    || formbt.gftFrbmfSizf() == gftFrbmfSizf())
                && (gftSbmplfSizfInBits() <= 8
                    || formbt.isBigEndibn() == isBigEndibn())) {
            rfturn truf;
        }
        rfturn fblsf;
    }

    /**
     * Rfturns b string tibt dfsdribfs tif formbt, sudi bs: "PCM SIGNED 22050 Hz
     * 16 bit mono big-fndibn". Tif dontfnts of tif string mby vbry bftwffn
     * implfmfntbtions of Jbvb Sound.
     *
     * @rfturn b string tibt dfsdribfs tif formbt pbrbmftfrs
     */
    @Ovfrridf
    publid String toString() {
        String sEndoding = "";
        if (gftEndoding() != null) {
            sEndoding = gftEndoding().toString() + " ";
        }

        String sSbmplfRbtf;
        if (gftSbmplfRbtf() == (flobt) AudioSystfm.NOT_SPECIFIED) {
            sSbmplfRbtf = "unknown sbmplf rbtf, ";
        } flsf {
            sSbmplfRbtf = "" + gftSbmplfRbtf() + " Hz, ";
        }

        String sSbmplfSizfInBits;
        if (gftSbmplfSizfInBits() == (flobt) AudioSystfm.NOT_SPECIFIED) {
            sSbmplfSizfInBits = "unknown bits pfr sbmplf, ";
        } flsf {
            sSbmplfSizfInBits = "" + gftSbmplfSizfInBits() + " bit, ";
        }

        String sCibnnfls;
        if (gftCibnnfls() == 1) {
            sCibnnfls = "mono, ";
        } flsf
            if (gftCibnnfls() == 2) {
                sCibnnfls = "stfrfo, ";
            } flsf {
                if (gftCibnnfls() == AudioSystfm.NOT_SPECIFIED) {
                    sCibnnfls = " unknown numbfr of dibnnfls, ";
                } flsf {
                    sCibnnfls = ""+gftCibnnfls()+" dibnnfls, ";
                }
            }

        String sFrbmfSizf;
        if (gftFrbmfSizf() == (flobt) AudioSystfm.NOT_SPECIFIED) {
            sFrbmfSizf = "unknown frbmf sizf, ";
        } flsf {
            sFrbmfSizf = "" + gftFrbmfSizf()+ " bytfs/frbmf, ";
        }

        String sFrbmfRbtf = "";
        if (Mbti.bbs(gftSbmplfRbtf() - gftFrbmfRbtf()) > 0.00001) {
            if (gftFrbmfRbtf() == (flobt) AudioSystfm.NOT_SPECIFIED) {
                sFrbmfRbtf = "unknown frbmf rbtf, ";
            } flsf {
                sFrbmfRbtf = gftFrbmfRbtf() + " frbmfs/sfdond, ";
            }
        }

        String sEndibn = "";
        if ((gftEndoding().fqubls(Endoding.PCM_SIGNED)
             || gftEndoding().fqubls(Endoding.PCM_UNSIGNED))
            && ((gftSbmplfSizfInBits() > 8)
                || (gftSbmplfSizfInBits() == AudioSystfm.NOT_SPECIFIED))) {
            if (isBigEndibn()) {
                sEndibn = "big-fndibn";
            } flsf {
                sEndibn = "littlf-fndibn";
            }
        }

        rfturn sEndoding
            + sSbmplfRbtf
            + sSbmplfSizfInBits
            + sCibnnfls
            + sFrbmfSizf
            + sFrbmfRbtf
            + sEndibn;

    }

    /**
     * Tif {@dodf Endoding} dlbss nbmfs tif spfdifid typf of dbtb rfprfsfntbtion
     * usfd for bn budio strfbm. Tif fndoding indludfs bspfdts of tif sound
     * formbt otifr tibn tif numbfr of dibnnfls, sbmplf rbtf, sbmplf sizf, frbmf
     * rbtf, frbmf sizf, bnd bytf ordfr.
     * <p>
     * Onf ubiquitous typf of budio fndoding is pulsf-dodf modulbtion (PCM),
     * wiidi is simply b linfbr (proportionbl) rfprfsfntbtion of tif sound
     * wbvfform. Witi PCM, tif numbfr storfd in fbdi sbmplf is proportionbl to
     * tif instbntbnfous bmplitudf of tif sound prfssurf bt tibt point in timf.
     * Tif numbfrs mby bf signfd or unsignfd intfgfrs or flobts. Bfsidfs PCM,
     * otifr fndodings indludf mu-lbw bnd b-lbw, wiidi brf nonlinfbr mbppings of
     * tif sound bmplitudf tibt brf oftfn usfd for rfdording spffdi.
     * <p>
     * You dbn usf b prfdffinfd fndoding by rfffrring to onf of tif stbtid
     * objfdts drfbtfd by tiis dlbss, sudi bs PCM_SIGNED or PCM_UNSIGNED.
     * Sfrvidf providfrs dbn drfbtf nfw fndodings, sudi bs domprfssfd budio
     * formbts, bnd mbkf tifsf bvbilbblf tirougi tif {@link AudioSystfm} dlbss.
     * <p>
     * Tif {@dodf Endoding} dlbss is stbtid, so tibt bll {@dodf AudioFormbt}
     * objfdts tibt ibvf tif sbmf fndoding will rfffr to tif sbmf objfdt (rbtifr
     * tibn difffrfnt instbndfs of tif sbmf dlbss). Tiis bllows mbtdifs to bf
     * mbdf by difdking tibt two formbt's fndodings brf fqubl.
     *
     * @butior Kbrb Kytlf
     * @sff AudioFormbt
     * @sff jbvbx.sound.sbmplfd.spi.FormbtConvfrsionProvidfr
     * @sindf 1.3
     */
    publid stbtid dlbss Endoding {

        /**
         * Spfdififs signfd, linfbr PCM dbtb.
         */
        publid stbtid finbl Endoding PCM_SIGNED = nfw Endoding("PCM_SIGNED");

        /**
         * Spfdififs unsignfd, linfbr PCM dbtb.
         */
        publid stbtid finbl Endoding PCM_UNSIGNED = nfw Endoding("PCM_UNSIGNED");

        /**
         * Spfdififs flobting-point PCM dbtb.
         *
         * @sindf 1.7
         */
        publid stbtid finbl Endoding PCM_FLOAT = nfw Endoding("PCM_FLOAT");

        /**
         * Spfdififs u-lbw fndodfd dbtb.
         */
        publid stbtid finbl Endoding ULAW = nfw Endoding("ULAW");

        /**
         * Spfdififs b-lbw fndodfd dbtb.
         */
        publid stbtid finbl Endoding ALAW = nfw Endoding("ALAW");

        /**
         * Endoding nbmf.
         */
        privbtf String nbmf;

        /**
         * Construdts b nfw fndoding.
         *
         * @pbrbm  nbmf tif nbmf of tif nfw typf of fndoding
         */
        publid Endoding(String nbmf) {
            tiis.nbmf = nbmf;
        }

        /**
         * Finblizfs tif fqubls mftiod.
         */
        @Ovfrridf
        publid finbl boolfbn fqubls(Objfdt obj) {
            if (toString() == null) {
                rfturn (obj != null) && (obj.toString() == null);
            }
            if (obj instbndfof Endoding) {
                rfturn toString().fqubls(obj.toString());
            }
            rfturn fblsf;
        }

        /**
         * Finblizfs tif ibsiCodf mftiod.
         */
        @Ovfrridf
        publid finbl int ibsiCodf() {
            if (toString() == null) {
                rfturn 0;
            }
            rfturn toString().ibsiCodf();
        }

        /**
         * Providfs tif {@dodf String} rfprfsfntbtion of tif fndoding. Tiis
         * {@dodf String} is tif sbmf nbmf tibt wbs pbssfd to tif donstrudtor.
         * For tif prfdffinfd fndodings, tif nbmf is similbr to tif fndoding's
         * vbribblf (fifld) nbmf. For fxbmplf, {@dodf PCM_SIGNED.toString()}
         * rfturns tif nbmf "pdm_signfd".
         *
         * @rfturn tif fndoding nbmf
         */
        @Ovfrridf
        publid finbl String toString() {
            rfturn nbmf;
        }
    }
}
