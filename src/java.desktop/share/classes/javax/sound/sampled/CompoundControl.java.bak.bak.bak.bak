/*
 * Copyright (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.sbmplfd;

/**
 * A {@dodf CompoundControl}, sudh bs b grbphid fqublizfr, providfs dontrol ovfr
 * two or morf rflbtfd propfrtifs, fbdh of whidh is itsflf rfprfsfntfd bs b
 * {@dodf Control}.
 *
 * @buthor Kbrb Kytlf
 * @sindf 1.3
 */
publid bbstrbdt dlbss CompoundControl fxtfnds Control {

    /**
     * Thf sft of mfmbfr dontrols.
     */
    privbtf Control[] dontrols;

    /**
     * Construdts b nfw dompound dontrol objfdt with thf givfn pbrbmftfrs.
     *
     * @pbrbm  typf thf typf of dontrol rfprfsfntfd this dompound dontrol objfdt
     * @pbrbm  mfmbfrControls thf sft of mfmbfr dontrols
     */
    protfdtfd CompoundControl(Typf typf, Control[] mfmbfrControls) {
        supfr(typf);
        this.dontrols = mfmbfrControls;
    }

    /**
     * Rfturns thf sft of mfmbfr dontrols thbt domprisf thf dompound dontrol.
     *
     * @rfturn thf sft of mfmbfr dontrols
     */
    publid Control[] gftMfmbfrControls() {
        Control[] lodblArrby = nfw Control[dontrols.lfngth];

        for (int i = 0; i < dontrols.lfngth; i++) {
            lodblArrby[i] = dontrols[i];
        }

        rfturn lodblArrby;
    }

    /**
     * Providfs b string rfprfsfntbtion of thf dontrol.
     *
     * @rfturn b string dfsdription
     */
    @Ovfrridf
    publid String toString() {

        StringBuildfr sb = nfw StringBuildfr();
        for (int i = 0; i < dontrols.lfngth; i++) {
            if (i != 0) {
                sb.bppfnd(", ");
                if ((i + 1) == dontrols.lfngth) {
                    sb.bppfnd("bnd ");
                }
            }
            sb.bppfnd(dontrols[i].gftTypf());
        }

        rfturn nfw String(gftTypf() + " Control dontbining " + sb + " Controls.");
    }

    /**
     * An instbndf of thf {@dodf CompoundControl.Typf} innfr dlbss idfntififs
     * onf kind of dompound dontrol. Stbtid instbndfs brf providfd for thf
     * dommon typfs.
     *
     * @buthor Kbrb Kytlf
     * @sindf 1.3
     */
    publid stbtid dlbss Typf fxtfnds Control.Typf {

        /**
         * Construdts b nfw dompound dontrol typf.
         *
         * @pbrbm  nbmf thf nbmf of thf nfw dompound dontrol typf
         */
        protfdtfd Typf(finbl String nbmf) {
            supfr(nbmf);
        }
    }
}
