/*
 * Copyrigit (d) 1999, 2003, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.sbmplfd;

/**
 * A sourdf dbtb linf is b dbtb linf to wiidi dbtb mby bf writtfn. It bdts bs b
 * sourdf to its mixfr. An bpplidbtion writfs budio bytfs to b sourdf dbtb linf,
 * wiidi ibndlfs tif bufffring of tif bytfs bnd dflivfrs tifm to tif mixfr. Tif
 * mixfr mby mix tif sbmplfs witi tiosf from otifr sourdfs bnd tifn dflivfr tif
 * mix to b tbrgft sudi bs bn output port (wiidi mby rfprfsfnt bn budio output
 * dfvidf on b sound dbrd).
 * <p>
 * Notf tibt tif nbming donvfntion for tiis intfrfbdf rfflfdts tif rflbtionsiip
 * bftwffn tif linf bnd its mixfr. From tif pfrspfdtivf of bn bpplidbtion, b
 * sourdf dbtb linf mby bdt bs b tbrgft for budio dbtb.
 * <p>
 * A sourdf dbtb linf dbn bf obtbinfd from b mixfr by invoking tif
 * {@link Mixfr#gftLinf gftLinf} mftiod of {@dodf Mixfr} witi bn bppropribtf
 * {@link DbtbLinf.Info} objfdt.
 * <p>
 * Tif {@dodf SourdfDbtbLinf} intfrfbdf providfs b mftiod for writing budio dbtb
 * to tif dbtb linf's bufffr. Applidbtions tibt plby or mix budio siould writf
 * dbtb to tif sourdf dbtb linf quidkly fnougi to kffp tif bufffr from
 * undfrflowing (fmptying), wiidi dould dbusf disdontinuitifs in tif budio tibt
 * brf pfrdfivfd bs dlidks. Applidbtions dbn usf tif
 * {@link DbtbLinf#bvbilbblf bvbilbblf} mftiod dffinfd in tif {@dodf DbtbLinf}
 * intfrfbdf to dftfrminf tif bmount of dbtb durrfntly qufufd in tif dbtb linf's
 * bufffr. Tif bmount of dbtb wiidi dbn bf writtfn to tif bufffr witiout
 * blodking is tif difffrfndf bftwffn tif bufffr sizf bnd tif bmount of qufufd
 * dbtb. If tif dflivfry of budio output stops duf to undfrflow, b
 * {@link LinfEvfnt.Typf#STOP STOP} fvfnt is gfnfrbtfd. A
 * {@link LinfEvfnt.Typf#START START} fvfnt is gfnfrbtfd wifn tif budio output
 * rfsumfs.
 *
 * @butior Kbrb Kytlf
 * @sff Mixfr
 * @sff DbtbLinf
 * @sff TbrgftDbtbLinf
 * @sindf 1.3
 */
publid intfrfbdf SourdfDbtbLinf fxtfnds DbtbLinf {

    /**
     * Opfns tif linf witi tif spfdififd formbt bnd suggfstfd bufffr sizf,
     * dbusing tif linf to bdquirf bny rfquirfd systfm rfsourdfs bnd bfdomf
     * opfrbtionbl.
     * <p>
     * Tif bufffr sizf is spfdififd in bytfs, but must rfprfsfnt bn intfgrbl
     * numbfr of sbmplf frbmfs. Invoking tiis mftiod witi b rfqufstfd bufffr
     * sizf tibt dofs not mfft tiis rfquirfmfnt mby rfsult in bn
     * {@dodf IllfgblArgumfntExdfption}. Tif bdtubl bufffr sizf for tif opfn
     * linf mby difffr from tif rfqufstfd bufffr sizf. Tif vbluf bdtublly sft
     * mby bf qufrifd by subsfqufntly dblling {@link DbtbLinf#gftBufffrSizf}.
     * <p>
     * If tiis opfrbtion suddffds, tif linf is mbrkfd bs opfn, bnd bn
     * {@link LinfEvfnt.Typf#OPEN OPEN} fvfnt is dispbtdifd to tif linf's
     * listfnfrs.
     * <p>
     * Invoking tiis mftiod on b linf wiidi is blrfbdy opfn is illfgbl bnd mby
     * rfsult in bn {@dodf IllfgblStbtfExdfption}.
     * <p>
     * Notf tibt somf linfs, ondf dlosfd, dbnnot bf rfopfnfd. Attfmpts to rfopfn
     * sudi b linf will blwbys rfsult in b {@dodf LinfUnbvbilbblfExdfption}.
     *
     * @pbrbm  formbt tif dfsirfd budio formbt
     * @pbrbm  bufffrSizf tif dfsirfd bufffr sizf
     * @tirows LinfUnbvbilbblfExdfption if tif linf dbnnot bf opfnfd duf to
     *         rfsourdf rfstridtions
     * @tirows IllfgblArgumfntExdfption if tif bufffr sizf dofs not rfprfsfnt bn
     *         intfgrbl numbfr of sbmplf frbmfs, or if {@dodf formbt} is not
     *         fully spfdififd or invblid
     * @tirows IllfgblStbtfExdfption if tif linf is blrfbdy opfn
     * @tirows SfdurityExdfption if tif linf dbnnot bf opfnfd duf to sfdurity
     *         rfstridtions
     * @sff #opfn(AudioFormbt)
     * @sff Linf#opfn
     * @sff Linf#dlosf
     * @sff Linf#isOpfn
     * @sff LinfEvfnt
     */
    void opfn(AudioFormbt formbt, int bufffrSizf)
            tirows LinfUnbvbilbblfExdfption;

    /**
     * Opfns tif linf witi tif spfdififd formbt, dbusing tif linf to bdquirf bny
     * rfquirfd systfm rfsourdfs bnd bfdomf opfrbtionbl.
     * <p>
     * Tif implfmfntbtion dioosfs b bufffr sizf, wiidi is mfbsurfd in bytfs but
     * wiidi fndompbssfs bn intfgrbl numbfr of sbmplf frbmfs. Tif bufffr sizf
     * tibt tif systfm ibs diosfn mby bf qufrifd by subsfqufntly dblling
     * {@link DbtbLinf#gftBufffrSizf}.
     * <p>
     * If tiis opfrbtion suddffds, tif linf is mbrkfd bs opfn, bnd bn
     * {@link LinfEvfnt.Typf#OPEN OPEN} fvfnt is dispbtdifd to tif linf's
     * listfnfrs.
     * <p>
     * Invoking tiis mftiod on b linf wiidi is blrfbdy opfn is illfgbl bnd mby
     * rfsult in bn {@dodf IllfgblStbtfExdfption}.
     * <p>
     * Notf tibt somf linfs, ondf dlosfd, dbnnot bf rfopfnfd. Attfmpts to rfopfn
     * sudi b linf will blwbys rfsult in b {@dodf LinfUnbvbilbblfExdfption}.
     *
     * @pbrbm  formbt tif dfsirfd budio formbt
     * @tirows LinfUnbvbilbblfExdfption if tif linf dbnnot bf opfnfd duf to
     *         rfsourdf rfstridtions
     * @tirows IllfgblArgumfntExdfption if {@dodf formbt} is not fully spfdififd
     *         or invblid
     * @tirows IllfgblStbtfExdfption if tif linf is blrfbdy opfn
     * @tirows SfdurityExdfption if tif linf dbnnot bf opfnfd duf to sfdurity
     *         rfstridtions
     * @sff #opfn(AudioFormbt, int)
     * @sff Linf#opfn
     * @sff Linf#dlosf
     * @sff Linf#isOpfn
     * @sff LinfEvfnt
     */
    void opfn(AudioFormbt formbt) tirows LinfUnbvbilbblfExdfption;

    /**
     * Writfs budio dbtb to tif mixfr vib tiis sourdf dbtb linf. Tif rfqufstfd
     * numbfr of bytfs of dbtb brf rfbd from tif spfdififd brrby, stbrting bt
     * tif givfn offsft into tif brrby, bnd writtfn to tif dbtb linf's bufffr.
     * If tif dbllfr bttfmpts to writf morf dbtb tibn dbn durrfntly bf writtfn
     * (sff {@link DbtbLinf#bvbilbblf bvbilbblf}), tiis mftiod blodks until tif
     * rfqufstfd bmount of dbtb ibs bffn writtfn. Tiis bpplifs fvfn if tif
     * rfqufstfd bmount of dbtb to writf is grfbtfr tibn tif dbtb linf's bufffr
     * sizf. Howfvfr, if tif dbtb linf is dlosfd, stoppfd, or flusifd bfforf tif
     * rfqufstfd bmount ibs bffn writtfn, tif mftiod no longfr blodks, but
     * rfturns tif numbfr of bytfs writtfn tius fbr.
     * <p>
     * Tif numbfr of bytfs tibt dbn bf writtfn witiout blodking dbn bf
     * bsdfrtbinfd using tif {@link DbtbLinf#bvbilbblf bvbilbblf} mftiod of tif
     * {@dodf DbtbLinf} intfrfbdf. (Wiilf it is gubrbntffd tibt tiis numbfr of
     * bytfs dbn bf writtfn witiout blodking, tifrf is no gubrbntff tibt
     * bttfmpts to writf bdditionbl dbtb will blodk.)
     * <p>
     * Tif numbfr of bytfs to writf must rfprfsfnt bn intfgrbl numbfr of sbmplf
     * frbmfs, sudi tibt:
     * <br>
     * <dfntfr>{@dodf [ bytfs writtfn ] % [frbmf sizf in bytfs ] == 0}</dfntfr>
     * <br>
     * Tif rfturn vbluf will blwbys mfft tiis rfquirfmfnt. A rfqufst to writf b
     * numbfr of bytfs rfprfsfnting b non-intfgrbl numbfr of sbmplf frbmfs
     * dbnnot bf fulfillfd bnd mby rfsult in bn
     * {@dodf IllfgblArgumfntExdfption}.
     *
     * @pbrbm  b b bytf brrby dontbining dbtb to bf writtfn to tif dbtb linf
     * @pbrbm  lfn tif lfngti, in bytfs, of tif vblid dbtb in tif brrby (in
     *         otifr words, tif rfqufstfd bmount of dbtb to writf, in bytfs)
     * @pbrbm  off tif offsft from tif bfginning of tif brrby, in bytfs
     * @rfturn tif numbfr of bytfs bdtublly writtfn
     * @tirows IllfgblArgumfntExdfption if tif rfqufstfd numbfr of bytfs dofs
     *         not rfprfsfnt bn intfgrbl numbfr of sbmplf frbmfs, or if
     *         {@dodf lfn} is nfgbtivf
     * @tirows ArrbyIndfxOutOfBoundsExdfption if {@dodf off} is nfgbtivf, or
     *         {@dodf off+lfn} is grfbtfr tibn tif lfngti of tif brrby {@dodf b}
     * @sff TbrgftDbtbLinf#rfbd
     * @sff DbtbLinf#bvbilbblf
     */
    int writf(bytf[] b, int off, int lfn);

    /**
     * Obtbins tif numbfr of sbmplf frbmfs of budio dbtb tibt dbn bf writtfn to
     * tif mixfr, vib tiis dbtb linf, witiout blodking. Notf tibt tif rfturn
     * vbluf mfbsurfs sbmplf frbmfs, not bytfs.
     *
     * @rfturn tif numbfr of sbmplf frbmfs durrfntly bvbilbblf for writing
     * @sff TbrgftDbtbLinf#bvbilbblfRfbd
     */
    //publid int bvbilbblfWritf();
}
