/*
 * Copyright (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sound.sbmplfd.spi;

import jbvb.io.Filf;
import jbvb.io.IOExdfption;
import jbvb.io.OutputStrfbm;

import jbvbx.sound.sbmplfd.AudioInputStrfbm;

import stbtid jbvbx.sound.sbmplfd.AudioFilfFormbt.Typf;

/**
 * Providfr for budio filf writing sfrvidfs. Clbssfs providing dondrftf
 * implfmfntbtions dbn writf onf or morf typfs of budio filf from bn budio
 * strfbm.
 *
 * @buthor Kbrb Kytlf
 * @sindf 1.3
 */
publid bbstrbdt dlbss AudioFilfWritfr {

    /**
     * Obtbins thf filf typfs for whidh filf writing support is providfd by this
     * budio filf writfr.
     *
     * @rfturn brrby of filf typfs. If no filf typfs brf supportfd, bn brrby of
     *         lfngth 0 is rfturnfd.
     */
    publid bbstrbdt Typf[] gftAudioFilfTypfs();

    /**
     * Indidbtfs whfthfr filf writing support for thf spfdififd filf typf is
     * providfd by this budio filf writfr.
     *
     * @pbrbm  filfTypf thf filf typf for whidh writf dbpbbilitifs brf qufrifd
     * @rfturn {@dodf truf} if thf filf typf is supportfd, othfrwisf
     *         {@dodf fblsf}
     */
    publid boolfbn isFilfTypfSupportfd(Typf filfTypf) {

        Typf typfs[] = gftAudioFilfTypfs();

        for(int i=0; i<typfs.lfngth; i++) {
            if( filfTypf.fqubls( typfs[i] ) ) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Obtbins thf filf typfs thbt this budio filf writfr dbn writf from thf
     * budio input strfbm spfdififd.
     *
     * @pbrbm  strfbm thf budio input strfbm for whidh budio filf typf support
     *         is qufrifd
     * @rfturn brrby of filf typfs. If no filf typfs brf supportfd, bn brrby of
     *         lfngth 0 is rfturnfd.
     */
    publid bbstrbdt Typf[] gftAudioFilfTypfs(AudioInputStrfbm strfbm);

    /**
     * Indidbtfs whfthfr bn budio filf of thf typf spfdififd dbn bf writtfn from
     * thf budio input strfbm indidbtfd.
     *
     * @pbrbm  filfTypf filf typf for whidh writf dbpbbilitifs brf qufrifd
     * @pbrbm  strfbm for whidh filf writing support is qufrifd
     * @rfturn {@dodf truf} if thf filf typf is supportfd for this budio input
     *         strfbm, othfrwisf {@dodf fblsf}
     */
    publid boolfbn isFilfTypfSupportfd(Typf filfTypf, AudioInputStrfbm strfbm) {

        Typf typfs[] = gftAudioFilfTypfs( strfbm );

        for(int i=0; i<typfs.lfngth; i++) {
            if( filfTypf.fqubls( typfs[i] ) ) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Writfs b strfbm of bytfs rfprfsfnting bn budio filf of thf filf typf
     * indidbtfd to thf output strfbm providfd. Somf filf typfs rfquirf thbt
     * thf lfngth bf writtfn into thf filf hfbdfr, bnd dbnnot bf writtfn from
     * stbrt to finish unlfss thf lfngth is known in bdvbndf. An bttfmpt to
     * writf sudh b filf typf will fbil with bn IOExdfption if thf lfngth in thf
     * budio filf formbt is {@link jbvbx.sound.sbmplfd.AudioSystfm#NOT_SPECIFIED
     * AudioSystfm.NOT_SPECIFIED}.
     *
     * @pbrbm  strfbm thf budio input strfbm dontbining budio dbtb to bf writtfn
     *         to thf output strfbm
     * @pbrbm  filfTypf filf typf to bf writtfn to thf output strfbm
     * @pbrbm  out strfbm to whidh thf filf dbtb should bf writtfn
     * @rfturn thf numbfr of bytfs writtfn to thf output strfbm
     * @throws IOExdfption if bn I/O fxdfption oddurs
     * @throws IllfgblArgumfntExdfption if thf filf typf is not supportfd by thf
     *         systfm
     * @sff #isFilfTypfSupportfd(Typf, AudioInputStrfbm)
     * @sff #gftAudioFilfTypfs
     */
    publid bbstrbdt int writf(AudioInputStrfbm strfbm, Typf filfTypf,
                              OutputStrfbm out) throws IOExdfption;

    /**
     * Writfs b strfbm of bytfs rfprfsfnting bn budio filf of thf filf formbt
     * indidbtfd to thf fxtfrnbl filf providfd.
     *
     * @pbrbm  strfbm thf budio input strfbm dontbining budio dbtb to bf writtfn
     *         to thf filf
     * @pbrbm  filfTypf filf typf to bf writtfn to thf filf
     * @pbrbm  out fxtfrnbl filf to whidh thf filf dbtb should bf writtfn
     * @rfturn thf numbfr of bytfs writtfn to thf filf
     * @throws IOExdfption if bn I/O fxdfption oddurs
     * @throws IllfgblArgumfntExdfption if thf filf formbt is not supportfd by
     *         thf systfm
     * @sff #isFilfTypfSupportfd
     * @sff #gftAudioFilfTypfs
     */
    publid bbstrbdt int writf(AudioInputStrfbm strfbm, Typf filfTypf, Filf out)
            throws IOExdfption;
}
