/*
 * Copyright (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.IntfgfrSyntbx;
import jbvbx.print.bttributf.PrintRfqufstAttributf;
import jbvbx.print.bttributf.PrintJobAttributf;

/**
 * Clbss Copifs is bn intfgfr vblufd printing bttributf dlbss thbt spfdififs thf
 * numbfr of dopifs to bf printfd.
 * <P>
 * On mbny dfvidfs thf supportfd numbfr of dollbtfd dopifs will bf limitfd by
 * thf numbfr of physidbl output bins on thf dfvidf, bnd mby bf difffrfnt from
 * thf numbfr of undollbtfd dopifs whidh dbn bf supportfd.
 * <P>
 * Thf ffffdt of b Copifs bttributf with b vbluf of <I>n</I> on b multidod print
 * job (b job with multiplf dodumfnts) dfpfnds on thf (pfrhbps dffbultfd) vbluf
 * of thf {@link MultiplfDodumfntHbndling MultiplfDodumfntHbndling} bttributf:
 * <UL>
 * <LI>
 * SINGLE_DOCUMENT -- Thf rfsult will bf <I>n</I> dopifs of b singlf output
 * dodumfnt domprising bll thf input dods.
 *
 * <LI>
 * SINGLE_DOCUMENT_NEW_SHEET -- Thf rfsult will bf <I>n</I> dopifs of b singlf
 * output dodumfnt domprising bll thf input dods, bnd thf first imprfssion of
 * fbdh input dod will blwbys stbrt on b nfw mfdib shfft.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Thf rfsult will bf <I>n</I> dopifs of
 * thf first input dodumfnt, followfd by <I>n</I> dopifs of thf sfdond input
 * dodumfnt, . . . followfd by <I>n</I> dopifs of thf lbst input dodumfnt.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_COLLATED_COPIES -- Thf rfsult will bf thf first input
 * dodumfnt, thf sfdond input dodumfnt, . . . thf lbst input dodumfnt, thf group
 * of dodumfnts bfing rfpfbtfd <I>n</I> timfs.
 * </UL>
 * <P>
 * <B>IPP Compbtibility:</B> Thf intfgfr vbluf givfs thf IPP intfgfr vbluf. Thf
 * dbtfgory nbmf rfturnfd by <CODE>gftNbmf()</CODE> givfs thf IPP bttributf
 * nbmf.
 *
 * @buthor  Dbvid Mfndfnhbll
 * @buthor  Albn Kbmihfnsky
 */
publid finbl dlbss Copifs fxtfnds IntfgfrSyntbx
        implfmfnts PrintRfqufstAttributf, PrintJobAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = -6426631521680023833L;

    /**
     * Construdt b nfw dopifs bttributf with thf givfn intfgfr vbluf.
     *
     * @pbrbm  vbluf  Intfgfr vbluf.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *  (Undhfdkfd fxdfption) Thrown if <CODE>vbluf</CODE> is lfss thbn 1.
     */
    publid Copifs(int vbluf) {
        supfr (vbluf, 1, Intfgfr.MAX_VALUE);
    }

    /**
     * Rfturns whfthfr this dopifs bttributf is fquivblfnt to thf pbssfd in
     * objfdt. To bf fquivblfnt, bll of thf following donditions must bf truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss Copifs.
     * <LI>
     * This dopifs bttributf's vbluf bnd <CODE>objfdt</CODE>'s vbluf brf
     * fqubl.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to this dopifs
     *          bttributf, fblsf othfrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn supfr.fqubls (objfdt) && objfdt instbndfof Copifs;
    }

    /**
     * Gft thf printing bttributf dlbss whidh is to bf usfd bs thf "dbtfgory"
     * for this printing bttributf vbluf.
     * <P>
     * For dlbss Copifs, thf dbtfgory is dlbss Copifs itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn Copifs.dlbss;
    }

    /**
     * Gft thf nbmf of thf dbtfgory of whidh this bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss Copifs, thf dbtfgory nbmf is <CODE>"dopifs"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "dopifs";
    }

}
