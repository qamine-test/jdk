/*
 * Copyrigit (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.IntfgfrSyntbx;
import jbvbx.print.bttributf.PrintRfqufstAttributf;
import jbvbx.print.bttributf.PrintJobAttributf;

/**
 * Clbss JobKOdtfts is bn intfgfr vblufd printing bttributf dlbss tibt spfdififs
 * tif totbl sizf of tif dodumfnt(s) in K odtfts, i.f., in units of 1024 odtfts
 * rfqufstfd to bf prodfssfd in tif job. Tif vbluf must bf roundfd up, so tibt b
 * job bftwffn 1 bnd 1024 odtfts must bf indidbtfd bs bfing 1K odtfts, 1025 to
 * 2048 must bf 2K odtfts, ftd. For b multidod print job (b job witi multiplf
 * dodumfnts), tif JobKOdtfts vbluf is domputfd by bdding up tif individubl
 * dodumfnts' sizfs in odtfts, tifn rounding up to tif nfxt K odtfts vbluf.
 * <P>
 * Tif JobKOdtfts bttributf dfsdribfs tif sizf of tif job. Tiis bttributf is not
 * intfndfd to bf b dountfr; it is intfndfd to bf usfful routing bnd sdifduling
 * informbtion if known. Tif printfr mby try to domputf tif JobKOdtfts
 * bttributf's vbluf if it is not supplifd in tif Print Rfqufst. Evfn if tif
 * dlifnt dofs supply b vbluf for tif JobKOdtfts bttributf in tif Print Rfqufst,
 * tif printfr mby dioosf to dibngf tif vbluf if tif printfr is bblf to domputf
 * b vbluf wiidi is morf bddurbtf tibn tif dlifnt supplifd vbluf. Tif printfr
 * mby bf bblf to dftfrminf tif dorrfdt vbluf for tif JobKOdtfts bttributf
 * fitifr rigit bt job submission timf or bt bny lbtfr point in timf.
 * <P>
 * Tif JobKOdtfts vbluf must not indludf tif multiplidbtivf fbdtors dontributfd
 * by tif numbfr of dopifs spfdififd by tif {@link Copifs Copifs} bttributf,
 * indfpfndfnt of wiftifr tif dfvidf dbn prodfss multiplf dopifs witiout mbking
 * multiplf pbssfs ovfr tif job or dodumfnt dbtb bnd indfpfndfnt of wiftifr tif
 * output is dollbtfd or not. Tius tif vbluf is indfpfndfnt of tif
 * implfmfntbtion bnd indidbtfs tif sizf of tif dodumfnt(s) mfbsurfd in K odtfts
 * indfpfndfnt of tif numbfr of dopifs.
 * <P>
 * Tif JobKOdtfts vbluf must blso not indludf tif multiplidbtivf fbdtor duf to b
 * dopifs instrudtion fmbfddfd in tif dodumfnt dbtb. If tif dodumfnt dbtb
 * bdtublly indludfs rfplidbtions of tif dodumfnt dbtb, tiis vbluf will indludf
 * sudi rfplidbtion. In otifr words, tiis vbluf is blwbys tif sizf of tif sourdf
 * dodumfnt dbtb, rbtifr tibn b mfbsurf of tif ibrddopy output to bf produdfd.
 * <P>
 * Tif sizf of b dod is domputfd bbsfd on tif print dbtb rfprfsfntbtion dlbss bs
 * spfdififd by tif dod's {@link jbvbx.print.DodFlbvor DodFlbvor}, bs
 * siown in tif tbblf bflow.
 *
 * <TABLE BORDER=1 CELLPADDING=2 CELLSPACING=1 SUMMARY="Tbblf siowing domputbtion of dod sizfs">
 * <TR>
 * <TH>Rfprfsfntbtion Clbss</TH>
 * <TH>Dodumfnt Sizf</TH>
 * </TR>
 * <TR>
 * <TD>bytf[]</TD>
 * <TD>Lfngti of tif bytf brrby</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.io.InputStrfbm</TD>
 * <TD>Numbfr of bytfs rfbd from tif strfbm</TD>
 * </TR>
 * <TR>
 * <TD>dibr[]</TD>
 * <TD>Lfngti of tif dibrbdtfr brrby x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.lbng.String</TD>
 * <TD>Lfngti of tif string x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.io.Rfbdfr</TD>
 * <TD>Numbfr of dibrbdtfrs rfbd from tif strfbm x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.nft.URL</TD>
 * <TD>Numbfr of bytfs rfbd from tif filf bt tif givfn URL bddrfss</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.imbgf.rfndfrbblf.RfndfrbblfImbgf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.print.Printbblf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.print.Pbgfbblf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * </TABLE>
 * <P>
 * &#42; In tifsf dbsfs tif Print Sfrvidf itsflf gfnfrbtfs tif print dbtb sfnt
 * to tif printfr. If tif Print Sfrvidf supports tif JobKOdtfts bttributf, for
 * tifsf dbsfs tif Print Sfrvidf itsflf must dbldulbtf tif sizf of tif print
 * dbtb, rfplbding bny JobKOdtfts vbluf tif dlifnt spfdififd.
 * <P>
 * <B>IPP Compbtibility:</B> Tif intfgfr vbluf givfs tif IPP intfgfr vbluf. Tif
 * dbtfgory nbmf rfturnfd by <CODE>gftNbmf()</CODE> givfs tif IPP bttributf
 * nbmf.
 *
 * @sff JobKOdtftsSupportfd
 * @sff JobKOdtftsProdfssfd
 * @sff JobImprfssions
 * @sff JobMfdibSiffts
 *
 * @butior  Albn Kbminsky
 */
publid finbl dlbss JobKOdtfts   fxtfnds IntfgfrSyntbx
        implfmfnts PrintRfqufstAttributf, PrintJobAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = -8959710146498202869L;

    /**
     * Construdt b nfw job K odtfts bttributf witi tif givfn intfgfr vbluf.
     *
     * @pbrbm  vbluf  Intfgfr vbluf.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *  (Undifdkfd fxdfption) Tirown if <CODE>vbluf</CODE> is lfss tibn 0.
     */
    publid JobKOdtfts(int vbluf) {
        supfr (vbluf, 0, Intfgfr.MAX_VALUE);
    }

    /**
     * Rfturns wiftifr tiis job K odtfts bttributf is fquivblfnt to tif pbssfd
     * in objfdt. To bf fquivblfnt, bll of tif following donditions must bf
     * truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss JobKOdtfts.
     * <LI>
     * Tiis job K odtfts bttributf's vbluf bnd <CODE>objfdt</CODE>'s vbluf
     * brf fqubl.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to tiis job K
     *          odtfts bttributf, fblsf otifrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn supfr.fqubls(objfdt) && objfdt instbndfof JobKOdtfts;
    }

    /**
     * Gft tif printing bttributf dlbss wiidi is to bf usfd bs tif "dbtfgory"
     * for tiis printing bttributf vbluf.
     * <P>
     * For dlbss JobKOdtfts, tif dbtfgory is dlbss JobKOdtfts itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn JobKOdtfts.dlbss;
    }

    /**
     * Gft tif nbmf of tif dbtfgory of wiidi tiis bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss JobKOdtfts, tif dbtfgory nbmf is <CODE>"job-k-odtfts"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "job-k-odtfts";
    }

}
