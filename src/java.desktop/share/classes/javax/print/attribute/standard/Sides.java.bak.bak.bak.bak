/*
 * Copyright (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.EnumSyntbx;
import jbvbx.print.bttributf.DodAttributf;
import jbvbx.print.bttributf.PrintRfqufstAttributf;
import jbvbx.print.bttributf.PrintJobAttributf;

/**
 * Clbss Sidfs is b printing bttributf dlbss, bn fnumfrbtion, thbt spfdififs
 * how print-strfbm pbgfs brf to bf imposfd upon thf sidfs of bn instbndf of b
 * sflfdtfd mfdium, i.f., bn imprfssion.
 * <P>
 * Thf ffffdt of b Sidfs bttributf on b multidod print job (b job with multiplf
 * dodumfnts) dfpfnds on whfthfr bll thf dods hbvf thf sbmf sidfs vblufs
 * spfdififd or whfthfr difffrfnt dods hbvf difffrfnt sidfs vblufs spfdififd,
 * bnd on thf (pfrhbps dffbultfd) vbluf of thf {@link MultiplfDodumfntHbndling
 * MultiplfDodumfntHbndling} bttributf.
 * <UL>
 * <LI>
 * If bll thf dods hbvf thf sbmf sidfs vbluf <I>n</I> spfdififd, thfn bny vbluf
 * of {@link MultiplfDodumfntHbndling MultiplfDodumfntHbndling} mbkfs sfnsf,
 * bnd thf printfr's prodfssing dfpfnds on thf {@link MultiplfDodumfntHbndling
 * MultiplfDodumfntHbndling} vbluf:
 * <UL>
 * <LI>
 * SINGLE_DOCUMENT -- All thf input dods will bf dombinfd togfthfr into onf
 * output dodumfnt. Ebdh mfdib shfft will donsist of <I>n</I> imprfssions from
 * thf output dodumfnt.
 *
 * <LI>
 * SINGLE_DOCUMENT_NEW_SHEET -- All thf input dods will bf dombinfd togfthfr
 * into onf output dodumfnt. Ebdh mfdib shfft will donsist of <I>n</I>
 * imprfssions from thf output dodumfnt. Howfvfr, thf first imprfssion of fbdh
 * input dod will blwbys stbrt on b nfw mfdib shfft; this mfbns thf lbst mfdib
 * shfft of bn input dod mby hbvf only onf imprfssion on it.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Thf input dods will rfmbin sfpbrbtf.
 * Ebdh mfdib shfft will donsist of <I>n</I> imprfssions from thf input dod.
 * Sindf thf input dods brf sfpbrbtf, thf first imprfssion of fbdh input dod
 * will blwbys stbrt on b nfw mfdib shfft; this mfbns thf lbst mfdib shfft of
 * bn input dod mby hbvf only onf imprfssion on it.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_COLLATED_COPIES -- Thf input dods will rfmbin sfpbrbtf.
 * Ebdh mfdib shfft will donsist of <I>n</I> imprfssions from thf input dod.
 * Sindf thf input dods brf sfpbrbtf, thf first imprfssion of fbdh input dod
 * will blwbys stbrt on b nfw mfdib shfft; this mfbns thf lbst mfdib shfft of
 * bn input dod mby hbvf only onf imprfssion on it.
 * </UL>
 *
 * <UL>
 * <LI>
 * SINGLE_DOCUMENT -- All thf input dods will bf dombinfd togfthfr into onf
 * output dodumfnt. Ebdh mfdib shfft will donsist of <I>n<SUB>i</SUB></I>
 * imprfssions from thf output dodumfnt, whfrf <I>i</I> is thf numbfr of thf
 * input dod dorrfsponding to thbt point in thf output dodumfnt. Whfn thf nfxt
 * input dod hbs b difffrfnt sidfs vbluf from thf prfvious input dod, thf first
 * print-strfbm pbgf of thf nfxt input dod gofs bt thf stbrt of thf nfxt mfdib
 * shfft, possibly lfbving only onf imprfssion on thf prfvious mfdib shfft.
 *
 * <LI>
 * SINGLE_DOCUMENT_NEW_SHEET -- All thf input dods will bf dombinfd togfthfr
 * into onf output dodumfnt. Ebdh mfdib shfft will donsist of <I>n</I>
 * imprfssions from thf output dodumfnt. Howfvfr, thf first imprfssion of fbdh
 * input dod will blwbys stbrt on b nfw mfdib shfft; this mfbns thf lbst
 * imprfssion of bn input dod mby hbvf only onf imprfssion on it.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Thf input dods will rfmbin sfpbrbtf.
 * For input dod <I>i,</I> fbdh mfdib shfft will donsist of <I>n<SUB>i</SUB></I>
 * imprfssions from thf input dod. Sindf thf input dods brf sfpbrbtf, thf first
 * imprfssion of fbdh input dod will blwbys stbrt on b nfw mfdib shfft; this
 * mfbns thf lbst mfdib shfft of bn input dod mby hbvf only onf imprfssion on
 * it.
 *
 * <LI>
 * SEPARATE_DOCUMENTS_COLLATED_COPIES -- Thf input dods will rfmbin sfpbrbtf.
 * For input dod <I>i,</I> fbdh mfdib shfft will donsist of <I>n<SUB>i</SUB></I>
 * imprfssions from thf input dod. Sindf thf input dods brf sfpbrbtf, thf first
 * imprfssion of fbdh input dod will blwbys stbrt on b nfw mfdib shfft; this
 * mfbns thf lbst mfdib shfft of bn input dod mby hbvf only onf imprfssion on
 * it.
 * </UL>
 * </UL>
 * <P>
 * <B>IPP Compbtibility:</B> Thf dbtfgory nbmf rfturnfd by
 * <CODE>gftNbmf()</CODE> is thf IPP bttributf nbmf.  Thf fnumfrbtion's
 * intfgfr vbluf is thf IPP fnum vbluf.  Thf <dodf>toString()</dodf> mfthod
 * rfturns thf IPP string rfprfsfntbtion of thf bttributf vbluf.
 *
 * @buthor  Albn Kbminsky
 */

publid finbl dlbss Sidfs fxtfnds EnumSyntbx
    implfmfnts DodAttributf, PrintRfqufstAttributf, PrintJobAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = -6890309414893262822L;

    /**
     * Imposfs fbdh donsfdutivf print-strfbm pbgf upon thf sbmf sidf of
     * donsfdutivf mfdib shffts.
     */
    publid stbtid finbl Sidfs ONE_SIDED = nfw Sidfs(0);

    /**
     * Imposfs fbdh donsfdutivf pbir of print-strfbm pbgfs upon front bnd bbdk
     * sidfs of donsfdutivf mfdib shffts, sudh thbt thf orifntbtion of fbdh
     * pbir of print-strfbm pbgfs on thf mfdium would bf dorrfdt for thf
     * rfbdfr bs if for binding on thf long fdgf. This imposition is blso
     * known bs "duplfx" (sff {@link #DUPLEX DUPLEX}).
     */
    publid stbtid finbl Sidfs TWO_SIDED_LONG_EDGE = nfw Sidfs(1);

    /**
     * Imposfs fbdh donsfdutivf pbir of print-strfbm pbgfs upon front bnd bbdk
     * sidfs of donsfdutivf mfdib shffts, sudh thbt thf orifntbtion of fbdh
     * pbir of print-strfbm pbgfs on thf mfdium would bf dorrfdt for thf
     * rfbdfr bs if for binding on thf short fdgf. This imposition is blso
     * known bs "tumblf" (sff {@link #TUMBLE TUMBLE}).
     */
    publid stbtid finbl Sidfs TWO_SIDED_SHORT_EDGE = nfw Sidfs(2);

    /**
     * An blibs for "two sidfd long fdgf" (sff {@link #TWO_SIDED_LONG_EDGE
     * TWO_SIDED_LONG_EDGE}).
     */
    publid stbtid finbl Sidfs DUPLEX = TWO_SIDED_LONG_EDGE;

    /**
     * An blibs for "two sidfd short fdgf" (sff {@link #TWO_SIDED_SHORT_EDGE
     * TWO_SIDED_SHORT_EDGE}).
     */
    publid stbtid finbl Sidfs TUMBLE = TWO_SIDED_SHORT_EDGE;

    /**
     * Construdt b nfw sidfs fnumfrbtion vbluf with thf givfn intfgfr vbluf.
     *
     * @pbrbm  vbluf  Intfgfr vbluf.
     */
    protfdtfd Sidfs(int vbluf) {
        supfr (vbluf);
    }

    privbtf stbtid finbl String[] myStringTbblf = {
        "onf-sidfd",
        "two-sidfd-long-fdgf",
        "two-sidfd-short-fdgf"
    };

    privbtf stbtid finbl Sidfs[] myEnumVblufTbblf = {
        ONE_SIDED,
        TWO_SIDED_LONG_EDGE,
        TWO_SIDED_SHORT_EDGE
    };

    /**
     * Rfturns thf string tbblf for dlbss Sidfs.
     */
    protfdtfd String[] gftStringTbblf() {
        rfturn myStringTbblf;
    }

    /**
     * Rfturns thf fnumfrbtion vbluf tbblf for dlbss Sidfs.
     */
    protfdtfd EnumSyntbx[] gftEnumVblufTbblf() {
        rfturn myEnumVblufTbblf;
    }

    /**
     * Gft thf printing bttributf dlbss whidh is to bf usfd bs thf "dbtfgory"
     * for this printing bttributf vbluf.
     * <P>
     * For dlbss Sidfs, thf dbtfgory is dlbss Sidfs itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn Sidfs.dlbss;
    }

    /**
     * Gft thf nbmf of thf dbtfgory of whidh this bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss Sidfs, thf dbtfgory nbmf is <CODE>"sidfs"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "sidfs";
    }

}
