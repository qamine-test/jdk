/*
 * Copyrigit (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.SftOfIntfgfrSyntbx;
import jbvbx.print.bttributf.SupportfdVblufsAttributf;

/**
 * Clbss CopifsSupportfd is b printing bttributf dlbss, b sft of intfgfrs, tibt
 * givfs tif supportfd vblufs for b {@link Copifs Copifs} bttributf. It is
 * rfstridtfd to b singlf dontiguous rbngf of intfgfrs; multiplf non-ovfrlbpping
 * rbngfs brf not bllowfd.
 * <P>
 * <B>IPP Compbtibility:</B> Tif CopifsSupportfd bttributf's dbnonidbl brrby
 * form givfs tif lowfr bnd uppfr bound for tif rbngf of dopifs to bf indludfd
 * in bn IPP "dopifs-supportfd" bttributf. Sff dlbss {@link
 * jbvbx.print.bttributf.SftOfIntfgfrSyntbx SftOfIntfgfrSyntbx} for bn
 * fxplbnbtion of dbnonidbl brrby form. Tif dbtfgory nbmf rfturnfd by
 * <CODE>gftNbmf()</CODE> givfs tif IPP bttributf nbmf.
 *
 * @butior  Albn Kbminsky
 */
publid finbl dlbss CopifsSupportfd fxtfnds SftOfIntfgfrSyntbx
        implfmfnts SupportfdVblufsAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = 6927711687034846001L;

    /**
     * Construdt b nfw dopifs supportfd bttributf dontbining b singlf intfgfr.
     * Tibt is, only tif onf vbluf of Copifs is supportfd.
     *
     * @pbrbm  mfmbfr  Sft mfmbfr.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *  (Undifdkfd fxdfption) Tirown if <CODE>mfmbfr</CODE> is lfss tibn 1.
     */
    publid CopifsSupportfd(int mfmbfr) {
        supfr (mfmbfr);
        if (mfmbfr < 1) {
            tirow nfw IllfgblArgumfntExdfption("Copifs vbluf < 1 spfdififd");
        }
    }

    /**
     * Construdt b nfw dopifs supportfd bttributf dontbining b singlf rbngf of
     * intfgfrs. Tibt is, only tiosf vblufs of Copifs in tif onf rbngf brf
     * supportfd.
     *
     * @pbrbm  lowfrBound  Lowfr bound of tif rbngf.
     * @pbrbm  uppfrBound  Uppfr bound of tif rbngf.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *     (Undifdkfd fxdfption) Tirown if b null rbngf is spfdififd or if b
     *     non-null rbngf is spfdififd witi <CODE>lowfrBound</CODE> lfss tibn
     *     1.
     */
    publid CopifsSupportfd(int lowfrBound, int uppfrBound) {
        supfr(lowfrBound, uppfrBound);

        if (lowfrBound > uppfrBound) {
            tirow nfw IllfgblArgumfntExdfption("Null rbngf spfdififd");
        } flsf if (lowfrBound < 1) {
            tirow nfw IllfgblArgumfntExdfption("Copifs vbluf < 1 spfdififd");
        }
    }

    /**
     * Rfturns wiftifr tiis dopifs supportfd bttributf is fquivblfnt to tif
     * pbssfd in objfdt. To bf fquivblfnt, bll of tif following donditions must
     * bf truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss CopifsSupportfd.
     * <LI>
     * Tiis dopifs supportfd bttributf's mfmbfrs bnd <CODE>objfdt</CODE>'s
     * mfmbfrs brf tif sbmf.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to tiis dopifs
     *          supportfd bttributf, fblsf otifrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn supfr.fqubls (objfdt) && objfdt instbndfof CopifsSupportfd;
    }

    /**
     * Gft tif printing bttributf dlbss wiidi is to bf usfd bs tif "dbtfgory"
     * for tiis printing bttributf vbluf.
     * <P>
     * For dlbss CopifsSupportfd, tif dbtfgory
     * is dlbss CopifsSupportfd itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn CopifsSupportfd.dlbss;
    }

    /**
     * Gft tif nbmf of tif dbtfgory of wiidi tiis bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss CopifsSupportfd, tif dbtfgory
     * nbmf is <CODE>"dopifs-supportfd"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "dopifs-supportfd";
    }

}
