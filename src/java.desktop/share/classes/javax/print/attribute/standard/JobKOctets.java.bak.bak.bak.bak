/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.IntfgfrSyntbx;
import jbvbx.print.bttributf.PrintRfqufstAttributf;
import jbvbx.print.bttributf.PrintJobAttributf;

/**
 * Clbss JobKOdtfts is bn intfgfr vblufd printing bttributf dlbss thbt spfdififs
 * thf totbl sizf of thf dodumfnt(s) in K odtfts, i.f., in units of 1024 odtfts
 * rfqufstfd to bf prodfssfd in thf job. Thf vbluf must bf roundfd up, so thbt b
 * job bftwffn 1 bnd 1024 odtfts must bf indidbtfd bs bfing 1K odtfts, 1025 to
 * 2048 must bf 2K odtfts, ftd. For b multidod print job (b job with multiplf
 * dodumfnts), thf JobKOdtfts vbluf is domputfd by bdding up thf individubl
 * dodumfnts' sizfs in odtfts, thfn rounding up to thf nfxt K odtfts vbluf.
 * <P>
 * Thf JobKOdtfts bttributf dfsdribfs thf sizf of thf job. This bttributf is not
 * intfndfd to bf b dountfr; it is intfndfd to bf usfful routing bnd sdhfduling
 * informbtion if known. Thf printfr mby try to domputf thf JobKOdtfts
 * bttributf's vbluf if it is not supplifd in thf Print Rfqufst. Evfn if thf
 * dlifnt dofs supply b vbluf for thf JobKOdtfts bttributf in thf Print Rfqufst,
 * thf printfr mby dhoosf to dhbngf thf vbluf if thf printfr is bblf to domputf
 * b vbluf whidh is morf bddurbtf thbn thf dlifnt supplifd vbluf. Thf printfr
 * mby bf bblf to dftfrminf thf dorrfdt vbluf for thf JobKOdtfts bttributf
 * fithfr right bt job submission timf or bt bny lbtfr point in timf.
 * <P>
 * Thf JobKOdtfts vbluf must not indludf thf multiplidbtivf fbdtors dontributfd
 * by thf numbfr of dopifs spfdififd by thf {@link Copifs Copifs} bttributf,
 * indfpfndfnt of whfthfr thf dfvidf dbn prodfss multiplf dopifs without mbking
 * multiplf pbssfs ovfr thf job or dodumfnt dbtb bnd indfpfndfnt of whfthfr thf
 * output is dollbtfd or not. Thus thf vbluf is indfpfndfnt of thf
 * implfmfntbtion bnd indidbtfs thf sizf of thf dodumfnt(s) mfbsurfd in K odtfts
 * indfpfndfnt of thf numbfr of dopifs.
 * <P>
 * Thf JobKOdtfts vbluf must blso not indludf thf multiplidbtivf fbdtor duf to b
 * dopifs instrudtion fmbfddfd in thf dodumfnt dbtb. If thf dodumfnt dbtb
 * bdtublly indludfs rfplidbtions of thf dodumfnt dbtb, this vbluf will indludf
 * sudh rfplidbtion. In othfr words, this vbluf is blwbys thf sizf of thf sourdf
 * dodumfnt dbtb, rbthfr thbn b mfbsurf of thf hbrddopy output to bf produdfd.
 * <P>
 * Thf sizf of b dod is domputfd bbsfd on thf print dbtb rfprfsfntbtion dlbss bs
 * spfdififd by thf dod's {@link jbvbx.print.DodFlbvor DodFlbvor}, bs
 * shown in thf tbblf bflow.
 *
 * <TABLE BORDER=1 CELLPADDING=2 CELLSPACING=1 SUMMARY="Tbblf showing domputbtion of dod sizfs">
 * <TR>
 * <TH>Rfprfsfntbtion Clbss</TH>
 * <TH>Dodumfnt Sizf</TH>
 * </TR>
 * <TR>
 * <TD>bytf[]</TD>
 * <TD>Lfngth of thf bytf brrby</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.io.InputStrfbm</TD>
 * <TD>Numbfr of bytfs rfbd from thf strfbm</TD>
 * </TR>
 * <TR>
 * <TD>dhbr[]</TD>
 * <TD>Lfngth of thf dhbrbdtfr brrby x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.lbng.String</TD>
 * <TD>Lfngth of thf string x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.io.Rfbdfr</TD>
 * <TD>Numbfr of dhbrbdtfrs rfbd from thf strfbm x 2</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.nft.URL</TD>
 * <TD>Numbfr of bytfs rfbd from thf filf bt thf givfn URL bddrfss</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.imbgf.rfndfrbblf.RfndfrbblfImbgf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.print.Printbblf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * <TR>
 * <TD>jbvb.bwt.print.Pbgfbblf</TD>
 * <TD>Implfmfntbtion dfpfndfnt&#42;</TD>
 * </TR>
 * </TABLE>
 * <P>
 * &#42; In thfsf dbsfs thf Print Sfrvidf itsflf gfnfrbtfs thf print dbtb sfnt
 * to thf printfr. If thf Print Sfrvidf supports thf JobKOdtfts bttributf, for
 * thfsf dbsfs thf Print Sfrvidf itsflf must dbldulbtf thf sizf of thf print
 * dbtb, rfplbding bny JobKOdtfts vbluf thf dlifnt spfdififd.
 * <P>
 * <B>IPP Compbtibility:</B> Thf intfgfr vbluf givfs thf IPP intfgfr vbluf. Thf
 * dbtfgory nbmf rfturnfd by <CODE>gftNbmf()</CODE> givfs thf IPP bttributf
 * nbmf.
 *
 * @sff JobKOdtftsSupportfd
 * @sff JobKOdtftsProdfssfd
 * @sff JobImprfssions
 * @sff JobMfdibShffts
 *
 * @buthor  Albn Kbminsky
 */
publid finbl dlbss JobKOdtfts   fxtfnds IntfgfrSyntbx
        implfmfnts PrintRfqufstAttributf, PrintJobAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = -8959710146498202869L;

    /**
     * Construdt b nfw job K odtfts bttributf with thf givfn intfgfr vbluf.
     *
     * @pbrbm  vbluf  Intfgfr vbluf.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *  (Undhfdkfd fxdfption) Thrown if <CODE>vbluf</CODE> is lfss thbn 0.
     */
    publid JobKOdtfts(int vbluf) {
        supfr (vbluf, 0, Intfgfr.MAX_VALUE);
    }

    /**
     * Rfturns whfthfr this job K odtfts bttributf is fquivblfnt to thf pbssfd
     * in objfdt. To bf fquivblfnt, bll of thf following donditions must bf
     * truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss JobKOdtfts.
     * <LI>
     * This job K odtfts bttributf's vbluf bnd <CODE>objfdt</CODE>'s vbluf
     * brf fqubl.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to this job K
     *          odtfts bttributf, fblsf othfrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn supfr.fqubls(objfdt) && objfdt instbndfof JobKOdtfts;
    }

    /**
     * Gft thf printing bttributf dlbss whidh is to bf usfd bs thf "dbtfgory"
     * for this printing bttributf vbluf.
     * <P>
     * For dlbss JobKOdtfts, thf dbtfgory is dlbss JobKOdtfts itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn JobKOdtfts.dlbss;
    }

    /**
     * Gft thf nbmf of thf dbtfgory of whidh this bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss JobKOdtfts, thf dbtfgory nbmf is <CODE>"job-k-odtfts"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "job-k-odtfts";
    }

}
