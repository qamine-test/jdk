/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvbx.print.bttributf.stbndbrd;

import jbvbx.print.bttributf.Attributf;
import jbvbx.print.bttributf.IntfgfrSyntbx;
import jbvbx.print.bttributf.PrintJobAttributf;

/**
 * Clbss JobKOdtftsProdfssfd is bn intfgfr vblufd printing bttributf dlbss thbt
 * spfdififs thf totbl numbfr of print dbtb odtfts prodfssfd so fbr in K odtfts,
 * i.f., in units of 1024 odtfts. Thf vbluf must bf roundfd up, so thbt b job
 * bftwffn 1 bnd 1024 odtfts indlusivf must bf indidbtfd bs bfing 1K odtfts,
 * 1025 to 2048 indlusivf must bf 2K, ftd. For b multidod print job (b job with
 * multiplf dodumfnts), thf JobKOdtftsProdfssfd vbluf is domputfd by bdding up
 * thf individubl dodumfnts' numbfr of odtfts prodfssfd so fbr, thfn rounding up
 * to thf nfxt K odtfts vbluf.
 * <P>
 * Thf JobKOdtftsProdfssfd bttributf dfsdribfs thf progrfss of thf job. This
 * bttributf is intfndfd to bf b dountfr. Thbt is, thf JobKOdtftsProdfssfd vbluf
 * for b job thbt hbs not stbrtfd prodfssing must bf 0. Whfn thf job's {@link
 * JobStbtf JobStbtf} is PROCESSING or PROCESSING_STOPPED, thf
 * JobKOdtftsProdfssfd vbluf is intfndfd to indrfbsf bs thf job is prodfssfd; it
 * indidbtfs thf bmount of thf job thbt hbs bffn prodfssfd bt thf timf thf Print
 * Job's bttributf sft is qufrifd or bt thf timf b print job fvfnt is rfportfd.
 * Whfn thf job fntfrs thf COMPLETED, CANCELED, or ABORTED stbtfs, thf
 * JobKOdtftsProdfssfd vbluf is thf finbl vbluf for thf job.
 * <P>
 * For implfmfntbtions whfrf multiplf dopifs brf produdfd by thf intfrprftfr
 * with only b singlf pbss ovfr thf dbtb, thf finbl vbluf of thf
 * JobKOdtftsProdfssfd bttributf must bf fqubl to thf vbluf of thf {@link
 * JobKOdtfts JobKOdtfts} bttributf. For implfmfntbtions whfrf multiplf dopifs
 * brf produdfd by thf intfrprftfr by prodfssing thf dbtb for fbdh dopy, thf
 * finbl vbluf must bf b multiplf of thf vbluf of thf {@link JobKOdtfts
 * JobKOdtfts} bttributf.
 * <P>
 * <B>IPP Compbtibility:</B> Thf intfgfr vbluf givfs thf IPP intfgfr vbluf. Thf
 * dbtfgory nbmf rfturnfd by <CODE>gftNbmf()</CODE> givfs thf IPP bttributf
 * nbmf.
 *
 * @sff JobKOdtfts
 * @sff JobKOdtftsSupportfd
 * @sff JobImprfssionsComplftfd
 * @sff JobMfdibShfftsComplftfd
 *
 * @buthor  Albn Kbminsky
 */
publid finbl dlbss JobKOdtftsProdfssfd fxtfnds IntfgfrSyntbx
        implfmfnts PrintJobAttributf {

    privbtf stbtid finbl long sfriblVfrsionUID = -6265238509657881806L;

    /**
     * Construdt b nfw job K odtfts prodfssfd bttributf with thf givfn intfgfr
     * vbluf.
     *
     * @pbrbm  vbluf  Intfgfr vbluf.
     *
     * @fxdfption  IllfgblArgumfntExdfption
     *  (Undhfdkfd fxdfption) Thrown if <CODE>vbluf</CODE> is lfss thbn 0.
     */
    publid JobKOdtftsProdfssfd(int vbluf) {
        supfr (vbluf, 0, Intfgfr.MAX_VALUE);
    }

    /**
     * Rfturns whfthfr this job K odtfts prodfssfd bttributf is fquivblfnt to
     * thf pbssfd in objfdt. To bf fquivblfnt, bll of thf following donditions
     * must bf truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss JobKOdtftsProdfssfd.
     * <LI>
     * This job K odtfts prodfssfd bttributf's vbluf bnd
     * <CODE>objfdt</CODE>'s vbluf brf fqubl.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to this job K
     *          odtfts prodfssfd bttributf, fblsf othfrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn(supfr.fqubls (objfdt) &&
               objfdt instbndfof JobKOdtftsProdfssfd);
    }

    /**
     * Gft thf printing bttributf dlbss whidh is to bf usfd bs thf "dbtfgory"
     * for this printing bttributf vbluf.
     * <P>
     * For dlbss JobKOdtftsProdfssfd, thf dbtfgory is dlbss
     * JobKOdtftsProdfssfd itsflf.
     *
     * @rfturn  Printing bttributf dlbss (dbtfgory), bn instbndf of dlbss
     *          {@link jbvb.lbng.Clbss jbvb.lbng.Clbss}.
     */
    publid finbl Clbss<? fxtfnds Attributf> gftCbtfgory() {
        rfturn JobKOdtftsProdfssfd.dlbss;
    }

    /**
     * Gft thf nbmf of thf dbtfgory of whidh this bttributf vbluf is bn
     * instbndf.
     * <P>
     * For dlbss JobKOdtftsProdfssfd, thf dbtfgory nbmf is
     * <CODE>"job-k-odtfts-prodfssfd"</CODE>.
     *
     * @rfturn  Attributf dbtfgory nbmf.
     */
    publid finbl String gftNbmf() {
        rfturn "job-k-odtfts-prodfssfd";
    }

}
