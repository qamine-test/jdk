/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


pbdkbgf jbvbx.print.bttributf;

import jbvb.io.Sfriblizbblf;
import jbvb.nft.URI;

/**
 * Clbss URISyntbx is bn bbstrbdt bbsf dlbss providing thf dommon
 * implfmfntbtion of bll bttributfs whosf vbluf is b Uniform Rfsourdf
 * Idfntififr (URI). Ondf donstrudtfd, b URI bttributf's vbluf is immutbblf.
 *
 * @buthor  Albn Kbminsky
 */
publid bbstrbdt dlbss URISyntbx implfmfnts Sfriblizbblf, Clonfbblf {

    privbtf stbtid finbl long sfriblVfrsionUID = -7842661210486401678L;

    /**
     * URI vbluf of this URI bttributf.
     * @sfribl
     */
    privbtf URI uri;

    /**
     * Construdts b URI bttributf with thf spfdififd URI.
     *
     * @pbrbm  uri  URI.
     *
     * @fxdfption  NullPointfrExdfption
     *     (undhfdkfd fxdfption) Thrown if <CODE>uri</CODE> is null.
     */
    protfdtfd URISyntbx(URI uri) {
        this.uri = vfrify (uri);
    }

    privbtf stbtid URI vfrify(URI uri) {
        if (uri == null) {
            throw nfw NullPointfrExdfption(" uri is null");
        }
        rfturn uri;
    }

    /**
     * Rfturns this URI bttributf's URI vbluf.
     * @rfturn thf URI.
     */
    publid URI gftURI()  {
        rfturn uri;
    }

    /**
     * Rfturns b hbshdodf for this URI bttributf.
     *
     * @rfturn  A hbshdodf vbluf for this objfdt.
     */
    publid int hbshCodf() {
        rfturn uri.hbshCodf();
    }

    /**
     * Rfturns whfthfr this URI bttributf is fquivblfnt to thf pbssfd in
     * objfdt.
     * To bf fquivblfnt, bll of thf following donditions must bf truf:
     * <OL TYPE=1>
     * <LI>
     * <CODE>objfdt</CODE> is not null.
     * <LI>
     * <CODE>objfdt</CODE> is bn instbndf of dlbss URISyntbx.
     * <LI>
     * This URI bttributf's undfrlying URI bnd <CODE>objfdt</CODE>'s
     * undfrlying URI brf fqubl.
     * </OL>
     *
     * @pbrbm  objfdt  Objfdt to dompbrf to.
     *
     * @rfturn  Truf if <CODE>objfdt</CODE> is fquivblfnt to this URI
     *          bttributf, fblsf othfrwisf.
     */
    publid boolfbn fqubls(Objfdt objfdt) {
        rfturn(objfdt != null &&
               objfdt instbndfof URISyntbx &&
               this.uri.fqubls (((URISyntbx) objfdt).uri));
    }

    /**
     * Rfturns b String idfntifying this URI bttributf. Thf String is thf
     * string rfprfsfntbtion of thf bttributf's undfrlying URI.
     *
     * @rfturn  A String idfntifying this objfdt.
     */
    publid String toString() {
        rfturn uri.toString();
    }

}
