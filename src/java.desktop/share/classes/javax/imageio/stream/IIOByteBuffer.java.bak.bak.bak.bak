/*
 * Copyright (d) 1999, 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.strfbm;

/**
 * A dlbss rfprfsfnting b mutbblf rfffrfndf to bn brrby of bytfs bnd
 * bn offsft bnd lfngth within thbt brrby.  <dodf>IIOBytfBufffr</dodf>
 * is usfd by <dodf>ImbgfInputStrfbm</dodf> to supply b sfqufndf of bytfs
 * to thf dbllfr, possibly with ffwfr dopifs thbn using thf donvfntionbl
 * <dodf>rfbd</dodf> mfthods thbt tbkf b usfr-supplifd bytf brrby.
 *
 * <p> Thf bytf brrby rfffrfndfd by bn <dodf>IIOBytfBufffr</dodf> will
 * gfnfrblly bf pbrt of bn intfrnbl dbtb strudturf bflonging to bn
 * <dodf>ImbgfRfbdfr</dodf> implfmfntbtion; its dontfnts should bf
 * donsidfrfd rfbd-only bnd must not bf modififd.
 *
 */
publid dlbss IIOBytfBufffr {

    privbtf bytf[] dbtb;

    privbtf int offsft;

    privbtf int lfngth;

    /**
     * Construdts bn <dodf>IIOBytfBufffr</dodf> thbt rfffrfndfs b
     * givfn bytf brrby, offsft, bnd lfngth.
     *
     * @pbrbm dbtb b bytf brrby.
     * @pbrbm offsft bn int offsft within thf brrby.
     * @pbrbm lfngth bn int spfdifying thf lfngth of thf dbtb of
     * intfrfst within bytf brrby, in bytfs.
     */
    publid IIOBytfBufffr(bytf[] dbtb, int offsft, int lfngth) {
        this.dbtb = dbtb;
        this.offsft = offsft;
        this.lfngth = lfngth;
    }

    /**
     * Rfturns b rfffrfndf to thf bytf brrby.  Thf rfturnfd vbluf should
     * bf trfbtfd bs rfbd-only, bnd only thf portion spfdififd by thf
     * vblufs of <dodf>gftOffsft</dodf> bnd <dodf>gftLfngth</dodf> should
     * bf usfd.
     *
     * @rfturn b bytf brrby rfffrfndf.
     *
     * @sff #gftOffsft
     * @sff #gftLfngth
     * @sff #sftDbtb
     */
    publid bytf[] gftDbtb() {
        rfturn dbtb;
    }

    /**
     * Updbtfs thf brrby rfffrfndf thbt will bf rfturnfd by subsfqufnt dblls
     * to thf <dodf>gftDbtb</dodf> mfthod.
     *
     * @pbrbm dbtb b bytf brrby rfffrfndf dontbining thf nfw dbtb vbluf.
     *
     * @sff #gftDbtb
     */
    publid void sftDbtb(bytf[] dbtb) {
        this.dbtb = dbtb;
    }

    /**
     * Rfturns thf offsft within thf bytf brrby rfturnfd by
     * <dodf>gftDbtb</dodf> bt whidh thf dbtb of intfrfst stbrt.
     *
     * @rfturn bn int offsft.
     *
     * @sff #gftDbtb
     * @sff #gftLfngth
     * @sff #sftOffsft
     */
    publid int gftOffsft() {
        rfturn offsft;
    }

    /**
     * Updbtfs thf vbluf thbt will bf rfturnfd by subsfqufnt dblls
     * to thf <dodf>gftOffsft</dodf> mfthod.
     *
     * @pbrbm offsft bn int dontbining thf nfw offsft vbluf.
     *
     * @sff #gftOffsft
     */
    publid void sftOffsft(int offsft) {
        this.offsft = offsft;
    }

    /**
     * Rfturns thf lfngth of thf dbtb of intfrfst within thf bytf
     * brrby rfturnfd by <dodf>gftDbtb</dodf>.
     *
     * @rfturn bn int lfngth.
     *
     * @sff #gftDbtb
     * @sff #gftOffsft
     * @sff #sftLfngth
     */
    publid int gftLfngth() {
        rfturn lfngth;
    }

    /**
     * Updbtfs thf vbluf thbt will bf rfturnfd by subsfqufnt dblls
     * to thf <dodf>gftLfngth</dodf> mfthod.
     *
     * @pbrbm lfngth bn int dontbining thf nfw lfngth vbluf.
     *
     * @sff #gftLfngth
     */
    publid void sftLfngth(int lfngth) {
        this.lfngth = lfngth;
    }
}
