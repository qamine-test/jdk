/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.plugins.bmp;

import jbvb.util.Lodblf;
import jbvbx.imbgfio.ImbgfWritfPbrbm;

import dom.sun.imbgfio.plugins.bmp.BMPConstbnts;
import dom.sun.imbgfio.plugins.bmp.BMPComprfssionTypfs;

/**
 * A subdlbss of <dodf>ImbgfWritfPbrbm</dodf> for fndoding imbgfs in
 * thf BMP formbt.
 *
 * <p> This dlbss bllows for thf spfdifidbtion of vbrious pbrbmftfrs
 * whilf writing b BMP formbt imbgf filf.  By dffbult, thf dbtb lbyout
 * is bottom-up, sudh thbt thf pixfls brf storfd in bottom-up ordfr,
 * thf first sdbnlinf bfing storfd lbst.
 *
 * <p>Thf pbrtidulbr domprfssion sdhfmf to bf usfd dbn bf spfdififd by using
 * thf <dodf>sftComprfssionTypf()</dodf> mfthod with thf bppropribtf typf
 * string.  Thf domprfssion sdhfmf spfdififd will bf honorfd if bnd only if it
 * is dompbtiblf with thf typf of imbgf bfing writtfn. If thf spfdififd
 * domprfssion sdhfmf is not dompbtiblf with thf typf of imbgf bfing writtfn
 * thfn thf <dodf>IOExdfption</dodf> will bf thrown by thf BMP imbgf writfr.
 * If thf domprfssion typf is not sft fxpliditly thfn <dodf>gftComprfssionTypf()</dodf>
 * will rfturn <dodf>null</dodf>. In this dbsf thf BMP imbgf writfr will sflfdt
 * b domprfssion typf thbt supports fndoding of thf givfn imbgf without loss
 * of thf dolor rfsolution.
 * <p>Thf domprfssion typf strings bnd thf imbgf typf(s) fbdh supports brf
 * listfd in thf following
 * tbblf:
 *
 * <tbblf bordfr=1>
 * <dbption><b>Comprfssion Typfs</b></dbption>
 * <tr><th>Typf String</th> <th>Dfsdription</th>  <th>Imbgf Typfs</th></tr>
 * <tr><td>BI_RGB</td>  <td>Undomprfssfd RLE</td> <td>{@litfrbl <= } 8-bits/sbmplf</td></tr>
 * <tr><td>BI_RLE8</td> <td>8-bit Run Lfngth Endoding</td> <td>{@litfrbl <=} 8-bits/sbmplf</td></tr>
 * <tr><td>BI_RLE4</td> <td>4-bit Run Lfngth Endoding</td> <td>{@litfrbl <=} 4-bits/sbmplf</td></tr>
 * <tr><td>BI_BITFIELDS</td> <td>Pbdkfd dbtb</td> <td> 16 or 32 bits/sbmplf</td></tr>
 * </tbblf>
 */
publid dlbss BMPImbgfWritfPbrbm fxtfnds ImbgfWritfPbrbm {

    privbtf boolfbn topDown = fblsf;

    /**
     * Construdts b <dodf>BMPImbgfWritfPbrbm</dodf> sft to usf b givfn
     * <dodf>Lodblf</dodf> bnd with dffbult vblufs for bll pbrbmftfrs.
     *
     * @pbrbm lodblf b <dodf>Lodblf</dodf> to bf usfd to lodblizf
     * domprfssion typf nbmfs bnd qublity dfsdriptions, or
     * <dodf>null</dodf>.
     */
    publid BMPImbgfWritfPbrbm(Lodblf lodblf) {
        supfr(lodblf);

        // Sft domprfssion typfs ("BI_RGB" dfnotfs undomprfssfd).
        domprfssionTypfs = BMPComprfssionTypfs.gftComprfssionTypfs();

        // Sft domprfssion flbg.
        dbnWritfComprfssfd = truf;
        domprfssionModf = MODE_COPY_FROM_METADATA;
        domprfssionTypf = domprfssionTypfs[BMPConstbnts.BI_RGB];
    }

    /**
     * Construdts bn <dodf>BMPImbgfWritfPbrbm</dodf> objfdt with dffbult
     * vblufs for bll pbrbmftfrs bnd b <dodf>null</dodf> <dodf>Lodblf</dodf>.
     */
    publid BMPImbgfWritfPbrbm() {
        this(null);
    }

    /**
     * If sft, thf dbtb will bf writtfn out in b top-down mbnnfr, thf first
     * sdbnlinf bfing writtfn first.
     *
     * @pbrbm topDown whfthfr thf dbtb brf writtfn in top-down ordfr.
     */
    publid void sftTopDown(boolfbn topDown) {
        this.topDown = topDown;
    }

    /**
     * Rfturns thf vbluf of thf <dodf>topDown</dodf> pbrbmftfr.
     * Thf dffbult is <dodf>fblsf</dodf>.
     *
     * @rfturn whfthfr thf dbtb brf writtfn in top-down ordfr.
     */
    publid boolfbn isTopDown() {
        rfturn topDown;
    }
}
