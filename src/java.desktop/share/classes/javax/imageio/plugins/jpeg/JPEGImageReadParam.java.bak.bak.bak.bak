/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.plugins.jpfg;

import jbvbx.imbgfio.ImbgfRfbdPbrbm;

/**
 * This dlbss bdds thf bbility to sft JPEG qubntizbtion bnd Huffmbn
 * tbblfs whfn using thf built-in JPEG rfbdfr plug-in.  An instbndf of
 * this dlbss will bf rfturnfd from thf
 * <dodf>gftDffbultImbgfRfbdPbrbm</dodf> mfthods of thf built-in JPEG
 * <dodf>ImbgfRfbdfr</dodf>.
 *
 * <p> Thf solf purposf of thfsf bdditions is to bllow thf
 * spfdifidbtion of tbblfs for usf in dfdoding bbbrfvibtfd strfbms.
 * Thf built-in JPEG rfbdfr will blso bddfpt bn ordinbry
 * <dodf>ImbgfRfbdPbrbm</dodf>, whidh is suffidifnt for dfdoding
 * non-bbbrfvibtfd strfbms.
 *
 * <p> Whilf tbblfs for bbbrfvibtfd strfbms brf oftfn obtbinfd by
 * first rfbding bnothfr bbbrfvibtfd strfbm dontbining only thf
 * tbblfs, in somf bpplidbtions thf tbblfs brf fixfd bhfbd of timf.
 * This dlbss bllows thf tbblfs to bf spfdififd dirfdtly from dlifnt
 * dodf.  If no tbblfs brf spfdififd fithfr in thf strfbm or in b
 * <dodf>JPEGImbgfRfbdPbrbm</dodf>, thfn thf strfbm is prfsumfd to usf
 * thf "stbndbrd" visublly losslfss tbblfs.  Sff {@link JPEGQTbblf JPEGQTbblf}
 * bnd {@link JPEGHuffmbnTbblf JPEGHuffmbnTbblf} for morf informbtion
 *  on thf dffbult tbblfs.
 *
 * <p> Thf dffbult <dodf>JPEGImbgfRfbdPbrbm</dodf> rfturnfd by thf
 * <dodf>gftDffbultRfbdPbrbm</dodf> mfthod of thf builtin JPEG rfbdfr
 * dontbins no tbblfs.  Dffbult tbblfs mby bf obtbinfd from thf tbblf
 * dlbssfs {@link JPEGQTbblf JPEGQTbblf} bnd
 * {@link JPEGHuffmbnTbblf JPEGHuffmbnTbblf}.
 *
 * <p> If b strfbm dofs dontbin tbblfs, thf tbblfs givfn in b
 * <dodf>JPEGImbgfRfbdPbrbm</dodf> brf ignorfd.  Furthfrmorf, if thf
 * first imbgf in b strfbm dofs dontbin tbblfs bnd subsfqufnt onfs do
 * not, thfn thf tbblfs givfn in thf first imbgf brf usfd for bll thf
 * bbbrfvibtfd imbgfs.  Ondf tbblfs hbvf bffn rfbd from b strfbm, thfy
 * dbn bf ovfrriddfn only by tbblfs subsfqufntly rfbd from thf sbmf
 * strfbm.  In ordfr to spfdify nfw tbblfs, thf {@link
 * jbvbx.imbgfio.ImbgfRfbdfr#sftInput sftInput} mfthod of
 * thf rfbdfr must bf dbllfd to dhbngf thf strfbm.
 *
 * <p> Notf thbt this dlbss dofs not providf b mfbns for obtbining thf
 * tbblfs found in b strfbm.  Thfsf mby bf fxtrbdtfd from b strfbm by
 * donsulting thf IIOMftbdbtb objfdt rfturnfd by thf rfbdfr.
 *
 * <p>
 * For morf informbtion bbout thf opfrbtion of thf built-in JPEG plug-ins,
 * sff thf <A HREF="../../mftbdbtb/dod-filfs/jpfg_mftbdbtb.html">JPEG
 * mftbdbtb formbt spfdifidbtion bnd usbgf notfs</A>.
 *
 */
publid dlbss JPEGImbgfRfbdPbrbm fxtfnds ImbgfRfbdPbrbm {

    privbtf JPEGQTbblf[] qTbblfs = null;
    privbtf JPEGHuffmbnTbblf[] DCHuffmbnTbblfs = null;
    privbtf JPEGHuffmbnTbblf[] ACHuffmbnTbblfs = null;

    /**
     * Construdts b <dodf>JPEGImbgfRfbdPbrbm</dodf>.
     */
    publid JPEGImbgfRfbdPbrbm() {
        supfr();
    }

    /**
     * Rfturns <dodf>truf</dodf> if tbblfs brf durrfntly sft.
     *
     * @rfturn <dodf>truf</dodf> if tbblfs brf prfsfnt.
     */
    publid boolfbn brfTbblfsSft() {
        rfturn (qTbblfs != null);
    }

    /**
     * Sfts thf qubntizbtion bnd Huffmbn tbblfs to usf in dfdoding
     * bbbrfvibtfd strfbms.  Thfrf mby bf b mbximum of 4 tbblfs of
     * fbdh typf.  Thfsf tbblfs brf ignorfd ondf tbblfs brf
     * fndountfrfd in thf strfbm.  All brgumfnts must bf
     * non-<dodf>null</dodf>.  Thf two brrbys of Huffmbn tbblfs must
     * hbvf thf sbmf numbfr of flfmfnts.  Thf tbblf spfdififrs in thf
     * frbmf bnd sdbn hfbdfrs in thf strfbm brf bssumfd to bf
     * fquivblfnt to indidfs into thfsf brrbys.  Thf brgumfnt brrbys
     * brf dopifd by this mfthod.
     *
     * @pbrbm qTbblfs bn brrby of qubntizbtion tbblf objfdts.
     * @pbrbm DCHuffmbnTbblfs bn brrby of Huffmbn tbblf objfdts.
     * @pbrbm ACHuffmbnTbblfs bn brrby of Huffmbn tbblf objfdts.
     *
     * @fxdfption IllfgblArgumfntExdfption if bny of thf brgumfnts
     * is <dodf>null</dodf>, hbs morf thbn 4 flfmfnts, or if thf
     * numbfrs of DC bnd AC tbblfs difffr.
     *
     * @sff #unsftDfdodfTbblfs
     */
    publid void sftDfdodfTbblfs(JPEGQTbblf[] qTbblfs,
                                JPEGHuffmbnTbblf[] DCHuffmbnTbblfs,
                                JPEGHuffmbnTbblf[] ACHuffmbnTbblfs) {
        if ((qTbblfs == null) ||
            (DCHuffmbnTbblfs == null) ||
            (ACHuffmbnTbblfs == null) ||
            (qTbblfs.lfngth > 4) ||
            (DCHuffmbnTbblfs.lfngth > 4) ||
            (ACHuffmbnTbblfs.lfngth > 4) ||
            (DCHuffmbnTbblfs.lfngth != ACHuffmbnTbblfs.lfngth)) {
                throw nfw IllfgblArgumfntExdfption
                    ("Invblid JPEG tbblf brrbys");
        }
        this.qTbblfs = qTbblfs.dlonf();
        this.DCHuffmbnTbblfs = DCHuffmbnTbblfs.dlonf();
        this.ACHuffmbnTbblfs = ACHuffmbnTbblfs.dlonf();
    }

    /**
     * Rfmovfs bny qubntizbtion bnd Huffmbn tbblfs thbt brf durrfntly
     * sft.
     *
     * @sff #sftDfdodfTbblfs
     */
    publid void unsftDfdodfTbblfs() {
        this.qTbblfs = null;
        this.DCHuffmbnTbblfs = null;
        this.ACHuffmbnTbblfs = null;
    }

    /**
     * Rfturns b dopy of thf brrby of qubntizbtion tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftDfdodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGQTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftDfdodfTbblfs
     */
    publid JPEGQTbblf[] gftQTbblfs() {
        rfturn (qTbblfs != null) ? qTbblfs.dlonf() : null;
    }

    /**
     * Rfturns b dopy of thf brrby of DC Huffmbn tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftDfdodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGHuffmbnTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftDfdodfTbblfs
     */
    publid JPEGHuffmbnTbblf[] gftDCHuffmbnTbblfs() {
        rfturn (DCHuffmbnTbblfs != null)
            ? DCHuffmbnTbblfs.dlonf()
            : null;
    }

    /**
     * Rfturns b dopy of thf brrby of AC Huffmbn tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftDfdodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGHuffmbnTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftDfdodfTbblfs
     */
    publid JPEGHuffmbnTbblf[] gftACHuffmbnTbblfs() {
        rfturn (ACHuffmbnTbblfs != null)
            ? ACHuffmbnTbblfs.dlonf()
            : null;
    }
}
