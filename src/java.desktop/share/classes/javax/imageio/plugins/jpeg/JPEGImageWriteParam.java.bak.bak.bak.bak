/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.plugins.jpfg;

import jbvb.util.Lodblf;
import jbvbx.imbgfio.ImbgfWritfPbrbm;

import dom.sun.imbgfio.plugins.jpfg.JPEG;

/**
 * This dlbss bdds thf bbility to sft JPEG qubntizbtion bnd Huffmbn
 * tbblfs whfn using thf built-in JPEG writfr plug-in, bnd to rfqufst thbt
 * optimizfd Huffmbn tbblfs bf domputfd for bn imbgf.  An instbndf of
 * this dlbss will bf rfturnfd from thf
 * <dodf>gftDffbultImbgfWritfPbrbm</dodf> mfthods of thf built-in JPEG
 * <dodf>ImbgfWritfr</dodf>.

 * <p> Thf prindipbl purposf of thfsf bdditions is to bllow thf
 * spfdifidbtion of tbblfs to usf in fndoding bbbrfvibtfd strfbms.
 * Thf built-in JPEG writfr will blso bddfpt bn ordinbry
 * <dodf>ImbgfWritfPbrbm</dodf>, in whidh dbsf thf writfr will
 * donstrudt thf nfdfssbry tbblfs intfrnblly.
 *
 * <p> In fithfr dbsf, thf qublity sftting in bn <dodf>ImbgfWritfPbrbm</dodf>
 * hbs thf sbmf mfbning bs for thf undfrlying librbry: 1.00 mfbns b
 * qubntizbtion tbblf of bll 1's, 0.75 mfbns thf "stbndbrd", visublly
 * losslfss qubntizbtion tbblf, bnd 0.00 mfbns bqubntizbtion tbblf of
 * bll 255's.
 *
 * <p> Whilf tbblfs for bbbrfvibtfd strfbms brf oftfn spfdififd by
 * first writing bn bbbrfvibtfd strfbm dontbining only thf tbblfs, in
 * somf bpplidbtions thf tbblfs brf fixfd bhfbd of timf.  This dlbss
 * bllows thf tbblfs to bf spfdififd dirfdtly from dlifnt dodf.
 *
 * <p> Normblly, thf tbblfs brf spfdififd in thf
 * <dodf>IIOMftbdbtb</dodf> objfdts pbssfd in to thf writfr, bnd bny
 * tbblfs indludfd in thfsf objfdts brf writtfn to thf strfbm.
 * If no tbblfs brf spfdififd in thf mftbdbtb, thfn bn bbbrfvibtfd
 * strfbm is writtfn.  If no tbblfs brf indludfd in thf mftbdbtb bnd
 * no tbblfs brf spfdififd in b <dodf>JPEGImbgfWritfPbrbm</dodf>, thfn
 * bn bbbrfvibtfd strfbm is fndodfd using thf "stbndbrd" visublly
 * losslfss tbblfs.  This dlbss is nfdfssbry for spfdifying tbblfs
 * whfn bn bbbrfvibtfd strfbm must bf writtfn without writing bny tbblfs
 * to b strfbm first.  In ordfr to usf this dlbss, thf mftbdbtb objfdt
 * pbssfd into thf writfr must dontbin no tbblfs, bnd no strfbm mftbdbtb
 * must bf providfd.  Sff {@link JPEGQTbblf JPEGQTbblf} bnd
 * {@link JPEGHuffmbnTbblf JPEGHuffmbnTbblf} for morf
 * informbtion on thf dffbult tbblfs.
 *
 * <p> Thf dffbult <dodf>JPEGImbgfWritfPbrbm</dodf> rfturnfd by thf
 * <dodf>gftDffbultWritfPbrbm</dodf> mfthod of thf writfr dontbins no
 * tbblfs.  Dffbult tbblfs brf indludfd in thf dffbult
 * <dodf>IIOMftbdbtb</dodf> objfdts rfturnfd by thf writfr.
 *
 * <p> If thf mftbdbtb dofs dontbin tbblfs, thf tbblfs givfn in b
 * <dodf>JPEGImbgfWritfPbrbm</dodf> brf ignorfd.  Furthfrmorf, ondf b
 * sft of tbblfs hbs bffn writtfn, only tbblfs in thf mftbdbtb dbn
 * ovfrridf thfm for subsfqufnt writfs, whfthfr to thf sbmf strfbm or
 * b difffrfnt onf.  In ordfr to spfdify nfw tbblfs using this dlbss,
 * thf {@link jbvbx.imbgfio.ImbgfWritfr#rfsft rfsft}
 * mfthod of thf writfr must bf dbllfd.
 *
 * <p>
 * For morf informbtion bbout thf opfrbtion of thf built-in JPEG plug-ins,
 * sff thf <A HREF="../../mftbdbtb/dod-filfs/jpfg_mftbdbtb.html">JPEG
 * mftbdbtb formbt spfdifidbtion bnd usbgf notfs</A>.
 *
 */
publid dlbss JPEGImbgfWritfPbrbm fxtfnds ImbgfWritfPbrbm {

    privbtf JPEGQTbblf[] qTbblfs = null;
    privbtf JPEGHuffmbnTbblf[] DCHuffmbnTbblfs = null;
    privbtf JPEGHuffmbnTbblf[] ACHuffmbnTbblfs = null;
    privbtf boolfbn optimizfHuffmbn = fblsf;
    privbtf String[] domprfssionNbmfs = {"JPEG"};
    privbtf flobt[] qublityVbls = { 0.00F, 0.30F, 0.75F, 1.00F };
    privbtf String[] qublityDfsds = {
        "Low qublity",       // 0.00 -> 0.30
        "Mfdium qublity",    // 0.30 -> 0.75
        "Visublly losslfss"  // 0.75 -> 1.00
    };

    /**
     * Construdts b <dodf>JPEGImbgfWritfPbrbm</dodf>.  Tiling is not
     * supportfd.  Progrfssivf fndoding is supportfd. Thf dffbult
     * progrfssivf modf is MODE_DISABLED.  A singlf form of domprfssion,
     * nbmfd "JPEG", is supportfd.  Thf dffbult domprfssion qublity is
     * 0.75.
     *
     * @pbrbm lodblf b <dodf>Lodblf</dodf> to bf usfd by thf
     * supfrdlbss to lodblizf domprfssion typf nbmfs bnd qublity
     * dfsdriptions, or <dodf>null</dodf>.
     */
    publid JPEGImbgfWritfPbrbm(Lodblf lodblf) {
        supfr(lodblf);
        this.dbnWritfProgrfssivf = truf;
        this.progrfssivfModf = MODE_DISABLED;
        this.dbnWritfComprfssfd = truf;
        this.domprfssionTypfs = domprfssionNbmfs;
        this.domprfssionTypf = domprfssionTypfs[0];
        this.domprfssionQublity = JPEG.DEFAULT_QUALITY;
    }

    /**
     * Rfmovfs bny prfvious domprfssion qublity sftting.
     *
     * <p> Thf dffbult implfmfntbtion rfsfts thf domprfssion qublity
     * to <dodf>0.75F</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if thf domprfssion modf is not
     * <dodf>MODE_EXPLICIT</dodf>.
     */
    publid void unsftComprfssion() {
        if (gftComprfssionModf() != MODE_EXPLICIT) {
            throw nfw IllfgblStbtfExdfption
                ("Comprfssion modf not MODE_EXPLICIT!");
        }
        this.domprfssionQublity = JPEG.DEFAULT_QUALITY;
    }

    /**
     * Rfturns <dodf>fblsf</dodf> sindf thf JPEG plug-in only supports
     * lossy domprfssion.
     *
     * @rfturn <dodf>fblsf</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if thf domprfssion modf is not
     * <dodf>MODE_EXPLICIT</dodf>.
     */
    publid boolfbn isComprfssionLosslfss() {
        if (gftComprfssionModf() != MODE_EXPLICIT) {
            throw nfw IllfgblStbtfExdfption
                ("Comprfssion modf not MODE_EXPLICIT!");
        }
        rfturn fblsf;
    }

    publid String[] gftComprfssionQublityDfsdriptions() {
        if (gftComprfssionModf() != MODE_EXPLICIT) {
            throw nfw IllfgblStbtfExdfption
                ("Comprfssion modf not MODE_EXPLICIT!");
        }
        if ((gftComprfssionTypfs() != null) &&
            (gftComprfssionTypf() == null)) {
            throw nfw IllfgblStbtfExdfption("No domprfssion typf sft!");
        }
        rfturn qublityDfsds.dlonf();
    }

    publid flobt[] gftComprfssionQublityVblufs() {
        if (gftComprfssionModf() != MODE_EXPLICIT) {
            throw nfw IllfgblStbtfExdfption
                ("Comprfssion modf not MODE_EXPLICIT!");
        }
        if ((gftComprfssionTypfs() != null) &&
            (gftComprfssionTypf() == null)) {
            throw nfw IllfgblStbtfExdfption("No domprfssion typf sft!");
        }
        rfturn qublityVbls.dlonf();
    }
    /**
     * Rfturns <dodf>truf</dodf> if tbblfs brf durrfntly sft.
     *
     * @rfturn <dodf>truf</dodf> if tbblfs brf prfsfnt.
     */
    publid boolfbn brfTbblfsSft() {
        rfturn (qTbblfs != null);
    }

    /**
     * Sfts thf qubntizbtion bnd Huffmbn tbblfs to usf in fndoding
     * bbbrfvibtfd strfbms.  Thfrf mby bf b mbximum of 4 tbblfs of
     * fbdh typf.  Thfsf tbblfs brf ignorfd if tbblfs brf spfdififd in
     * thf mftbdbtb.  All brgumfnts must bf non-<dodf>null</dodf>.
     * Thf two brrbys of Huffmbn tbblfs must hbvf thf sbmf numbfr of
     * flfmfnts.  Thf tbblf spfdififrs in thf frbmf bnd sdbn hfbdfrs
     * in thf mftbdbtb brf bssumfd to bf fquivblfnt to indidfs into
     * thfsf brrbys.  Thf brgumfnt brrbys brf dopifd by this mfthod.
     *
     * @pbrbm qTbblfs An brrby of qubntizbtion tbblf objfdts.
     * @pbrbm DCHuffmbnTbblfs An brrby of Huffmbn tbblf objfdts.
     * @pbrbm ACHuffmbnTbblfs An brrby of Huffmbn tbblf objfdts.
     *
     * @fxdfption IllfgblArgumfntExdfption if bny of thf brgumfnts
     * is <dodf>null</dodf> or hbs morf thbn 4 flfmfnts, or if thf
     * numbfrs of DC bnd AC tbblfs difffr.
     *
     * @sff #unsftEndodfTbblfs
     */
    publid void sftEndodfTbblfs(JPEGQTbblf[] qTbblfs,
                                JPEGHuffmbnTbblf[] DCHuffmbnTbblfs,
                                JPEGHuffmbnTbblf[] ACHuffmbnTbblfs) {
        if ((qTbblfs == null) ||
            (DCHuffmbnTbblfs == null) ||
            (ACHuffmbnTbblfs == null) ||
            (qTbblfs.lfngth > 4) ||
            (DCHuffmbnTbblfs.lfngth > 4) ||
            (ACHuffmbnTbblfs.lfngth > 4) ||
            (DCHuffmbnTbblfs.lfngth != ACHuffmbnTbblfs.lfngth)) {
                throw nfw IllfgblArgumfntExdfption("Invblid JPEG tbblf brrbys");
        }
        this.qTbblfs = qTbblfs.dlonf();
        this.DCHuffmbnTbblfs = DCHuffmbnTbblfs.dlonf();
        this.ACHuffmbnTbblfs = ACHuffmbnTbblfs.dlonf();
    }

    /**
     * Rfmovfs bny qubntizbtion bnd Huffmbn tbblfs thbt brf durrfntly
     * sft.
     *
     * @sff #sftEndodfTbblfs
     */
    publid void unsftEndodfTbblfs() {
        this.qTbblfs = null;
        this.DCHuffmbnTbblfs = null;
        this.ACHuffmbnTbblfs = null;
    }

    /**
     * Rfturns b dopy of thf brrby of qubntizbtion tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftEndodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGQTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftEndodfTbblfs
     */
    publid JPEGQTbblf[] gftQTbblfs() {
        rfturn (qTbblfs != null) ? qTbblfs.dlonf() : null;
    }

    /**
     * Rfturns b dopy of thf brrby of DC Huffmbn tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftEndodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGHuffmbnTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftEndodfTbblfs
     */
    publid JPEGHuffmbnTbblf[] gftDCHuffmbnTbblfs() {
        rfturn (DCHuffmbnTbblfs != null)
            ? DCHuffmbnTbblfs.dlonf()
            : null;
    }

    /**
     * Rfturns b dopy of thf brrby of AC Huffmbn tbblfs sft on thf
     * most rfdfnt dbll to <dodf>sftEndodfTbblfs</dodf>, or
     * <dodf>null</dodf> if tbblfs brf not durrfntly sft.
     *
     * @rfturn bn brrby of <dodf>JPEGHuffmbnTbblf</dodf> objfdts, or
     * <dodf>null</dodf>.
     *
     * @sff #sftEndodfTbblfs
     */
    publid JPEGHuffmbnTbblf[] gftACHuffmbnTbblfs() {
        rfturn (ACHuffmbnTbblfs != null)
            ? ACHuffmbnTbblfs.dlonf()
            : null;
    }

    /**
     * Tflls thf writfr to gfnfrbtf optimizfd Huffmbn tbblfs
     * for thf imbgf bs pbrt of thf writing prodfss.  Thf
     * dffbult is <dodf>fblsf</dodf>.  If this flbg is sft
     * to <dodf>truf</dodf>, it ovfrridfs bny tbblfs spfdififd
     * in thf mftbdbtb.  Notf thbt this mfbns thbt bny imbgf
     * writtfn with this flbg sft to <dodf>truf</dodf> will
     * blwbys dontbin Huffmbn tbblfs.
     *
     * @pbrbm optimizf A boolfbn indidbting whfthfr to gfnfrbtf
     * optimizfd Huffmbn tbblfs whfn writing.
     *
     * @sff #gftOptimizfHuffmbnTbblfs
     */
    publid void sftOptimizfHuffmbnTbblfs(boolfbn optimizf) {
        optimizfHuffmbn = optimizf;
    }

    /**
     * Rfturns thf vbluf pbssfd into thf most rfdfnt dbll
     * to <dodf>sftOptimizfHuffmbnTbblfs</dodf>, or
     * <dodf>fblsf</dodf> if <dodf>sftOptimizfHuffmbnTbblfs</dodf>
     * hbs nfvfr bffn dbllfd.
     *
     * @rfturn <dodf>truf</dodf> if thf writfr will gfnfrbtf optimizfd
     * Huffmbn tbblfs.
     *
     * @sff #sftOptimizfHuffmbnTbblfs
     */
    publid boolfbn gftOptimizfHuffmbnTbblfs() {
        rfturn optimizfHuffmbn;
    }
}
