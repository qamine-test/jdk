/*
 * Copyrigit (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio;

import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.RfndfrfdImbgf;
import jbvb.bwt.imbgf.Rbstfr;
import jbvb.io.IOExdfption;
import jbvb.util.ArrbyList;
import jbvb.util.List;
import jbvb.util.Lodblf;
import jbvb.util.MissingRfsourdfExdfption;
import jbvb.util.RfsourdfBundlf;
import jbvbx.imbgfio.fvfnt.IIOWritfWbrningListfnfr;
import jbvbx.imbgfio.fvfnt.IIOWritfProgrfssListfnfr;
import jbvbx.imbgfio.mftbdbtb.IIOMftbdbtb;
import jbvbx.imbgfio.strfbm.ImbgfOutputStrfbm;
import jbvbx.imbgfio.spi.ImbgfWritfrSpi;

/**
 * An bbstrbdt supfrdlbss for fndoding bnd writing imbgfs.  Tiis dlbss
 * must bf subdlbssfd by dlbssfs tibt writf out imbgfs in tif dontfxt
 * of tif Jbvb Imbgf I/O frbmfwork.
 *
 * <p> <dodf>ImbgfWritfr</dodf> objfdts brf normblly instbntibtfd by
 * tif sfrvidf providfr dlbss for tif spfdifid formbt.  Sfrvidf
 * providfr dlbssfs brf rfgistfrfd witi tif <dodf>IIORfgistry</dodf>,
 * wiidi usfs tifm for formbt rfdognition bnd prfsfntbtion of
 * bvbilbblf formbt rfbdfrs bnd writfrs.
 *
 * @sff ImbgfRfbdfr
 * @sff ImbgfWritfPbrbm
 * @sff jbvbx.imbgfio.spi.IIORfgistry
 * @sff jbvbx.imbgfio.spi.ImbgfWritfrSpi
 *
 */
publid bbstrbdt dlbss ImbgfWritfr implfmfnts ImbgfTrbnsdodfr {

    /**
     * Tif <dodf>ImbgfWritfrSpi</dodf> tibt instbntibtfd tiis objfdt,
     * or <dodf>null</dodf> if its idfntity is not known or nonf
     * fxists.  By dffbult it is initiblizfd to <dodf>null</dodf>.
     */
    protfdtfd ImbgfWritfrSpi originbtingProvidfr = null;

    /**
     * Tif <dodf>ImbgfOutputStrfbm</dodf> or otifr <dodf>Objfdt</dodf>
     * sft by <dodf>sftOutput</dodf> bnd rftrifvfd by
     * <dodf>gftOutput</dodf>.  By dffbult it is initiblizfd to
     * <dodf>null</dodf>.
     */
    protfdtfd Objfdt output = null;

    /**
     * An brrby of <dodf>Lodblf</dodf>s tibt mby bf usfd to lodblizf
     * wbrning mfssbgfs bnd domprfssion sftting vblufs, or
     * <dodf>null</dodf> if lodblizbtion is not supportfd.  By dffbult
     * it is initiblizfd to <dodf>null</dodf>.
     */
    protfdtfd Lodblf[] bvbilbblfLodblfs = null;

    /**
     * Tif durrfnt <dodf>Lodblf</dodf> to bf usfd for lodblizbtion, or
     * <dodf>null</dodf> if nonf ibs bffn sft.  By dffbult it is
     * initiblizfd to <dodf>null</dodf>.
     */
    protfdtfd Lodblf lodblf = null;

    /**
     * A <dodf>List</dodf> of durrfntly rfgistfrfd
     * <dodf>IIOWritfWbrningListfnfr</dodf>s, initiblizfd by dffbult to
     * <dodf>null</dodf>, wiidi is synonymous witi bn fmpty
     * <dodf>List</dodf>.
     */
    protfdtfd List<IIOWritfWbrningListfnfr> wbrningListfnfrs = null;

    /**
     * A <dodf>List</dodf> of <dodf>Lodblf</dodf>s, onf for fbdi
     * flfmfnt of <dodf>wbrningListfnfrs</dodf>, initiblizfd by dffbult
     * <dodf>null</dodf>, wiidi is synonymous witi bn fmpty
     * <dodf>List</dodf>.
     */
    protfdtfd List<Lodblf> wbrningLodblfs = null;

    /**
     * A <dodf>List</dodf> of durrfntly rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s, initiblizfd by dffbult
     * <dodf>null</dodf>, wiidi is synonymous witi bn fmpty
     * <dodf>List</dodf>.
     */
    protfdtfd List<IIOWritfProgrfssListfnfr> progrfssListfnfrs = null;

    /**
     * If <dodf>truf</dodf>, tif durrfnt writf opfrbtion siould bf
     * bbortfd.
     */
    privbtf boolfbn bbortFlbg = fblsf;

    /**
     * Construdts bn <dodf>ImbgfWritfr</dodf> bnd sfts its
     * <dodf>originbtingProvidfr</dodf> instbndf vbribblf to tif
     * supplifd vbluf.
     *
     * <p> Subdlbssfs tibt mbkf usf of fxtfnsions siould providf b
     * donstrudtor witi signbturf <dodf>(ImbgfWritfrSpi,
     * Objfdt)</dodf> in ordfr to rftrifvf tif fxtfnsion objfdt.  If
     * tif fxtfnsion objfdt is unsuitbblf, bn
     * <dodf>IllfgblArgumfntExdfption</dodf> siould bf tirown.
     *
     * @pbrbm originbtingProvidfr tif <dodf>ImbgfWritfrSpi</dodf> tibt
     * is donstrudting tiis objfdt, or <dodf>null</dodf>.
     */
    protfdtfd ImbgfWritfr(ImbgfWritfrSpi originbtingProvidfr) {
        tiis.originbtingProvidfr = originbtingProvidfr;
    }

    /**
     * Rfturns tif <dodf>ImbgfWritfrSpi</dodf> objfdt tibt drfbtfd
     * tiis <dodf>ImbgfWritfr</dodf>, or <dodf>null</dodf> if tiis
     * objfdt wbs not drfbtfd tirougi tif <dodf>IIORfgistry</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion rfturns tif vbluf of tif
     * <dodf>originbtingProvidfr</dodf> instbndf vbribblf.
     *
     * @rfturn bn <dodf>ImbgfWritfrSpi</dodf>, or <dodf>null</dodf>.
     *
     * @sff ImbgfWritfrSpi
     */
    publid ImbgfWritfrSpi gftOriginbtingProvidfr() {
        rfturn originbtingProvidfr;
    }

    /**
     * Sfts tif dfstinbtion to tif givfn
     * <dodf>ImbgfOutputStrfbm</dodf> or otifr <dodf>Objfdt</dodf>.
     * Tif dfstinbtion is bssumfd to bf rfbdy to bddfpt dbtb, bnd will
     * not bf dlosfd bt tif fnd of fbdi writf. Tiis bllows distributfd
     * imbging bpplidbtions to trbnsmit b sfrifs of imbgfs ovfr b
     * singlf nftwork donnfdtion.  If <dodf>output</dodf> is
     * <dodf>null</dodf>, bny durrfntly sft output will bf rfmovfd.
     *
     * <p> If <dodf>output</dodf> is bn
     * <dodf>ImbgfOutputStrfbm</dodf>, dblls to tif
     * <dodf>writf</dodf>, <dodf>writfToSfqufndf</dodf>, bnd
     * <dodf>prfpbrfWritfEmpty</dodf>/<dodf>fndWritfEmpty</dodf>
     * mftiods will prfsfrvf tif fxisting dontfnts of tif strfbm.
     * Otifr writf mftiods, sudi bs <dodf>writfInsfrt</dodf>,
     * <dodf>rfplbdfStrfbmMftbdbtb</dodf>,
     * <dodf>rfplbdfImbgfMftbdbtb</dodf>, <dodf>rfplbdfPixfls</dodf>,
     * <dodf>prfpbrfInsfrtEmpty</dodf>/<dodf>fndInsfrtEmpty</dodf>,
     * bnd <dodf>fndWritfSfqufndf</dodf>, rfquirf tif full dontfnts
     * of tif strfbm to bf rfbdbblf bnd writbblf, bnd mby bltfr bny
     * portion of tif strfbm.
     *
     * <p> Usf of b gfnfrbl <dodf>Objfdt</dodf> otifr tibn bn
     * <dodf>ImbgfOutputStrfbm</dodf> is intfndfd for writfrs tibt
     * intfrbdt dirfdtly witi bn output dfvidf or imbging protodol.
     * Tif sft of lfgbl dlbssfs is bdvfrtisfd by tif writfr's sfrvidf
     * providfr's <dodf>gftOutputTypfs</dodf> mftiod; most writfrs
     * will rfturn b singlf-flfmfnt brrby dontbining only
     * <dodf>ImbgfOutputStrfbm.dlbss</dodf> to indidbtf tibt tify
     * bddfpt only bn <dodf>ImbgfOutputStrfbm</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion sfts tif <dodf>output</dodf>
     * instbndf vbribblf to tif vbluf of <dodf>output</dodf> bftfr
     * difdking <dodf>output</dodf> bgbinst tif sft of dlbssfs
     * bdvfrtisfd by tif originbting providfr, if tifrf is onf.
     *
     * @pbrbm output tif <dodf>ImbgfOutputStrfbm</dodf> or otifr
     * <dodf>Objfdt</dodf> to usf for futurf writing.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>output</dodf> is
     * not bn instbndf of onf of tif dlbssfs rfturnfd by tif
     * originbting sfrvidf providfr's <dodf>gftOutputTypfs</dodf>
     * mftiod.
     *
     * @sff #gftOutput
     */
    publid void sftOutput(Objfdt output) {
        if (output != null) {
            ImbgfWritfrSpi providfr = gftOriginbtingProvidfr();
            if (providfr != null) {
                Clbss<?>[] dlbssfs = providfr.gftOutputTypfs();
                boolfbn found = fblsf;
                for (int i = 0; i < dlbssfs.lfngti; i++) {
                    if (dlbssfs[i].isInstbndf(output)) {
                        found = truf;
                        brfbk;
                    }
                }
                if (!found) {
                    tirow nfw IllfgblArgumfntExdfption("Illfgbl output typf!");
                }
            }
        }

        tiis.output = output;
    }

    /**
     * Rfturns tif <dodf>ImbgfOutputStrfbm</dodf> or otifr
     * <dodf>Objfdt</dodf> sft by tif most rfdfnt dbll to tif
     * <dodf>sftOutput</dodf> mftiod.  If no dfstinbtion ibs bffn
     * sft, <dodf>null</dodf> is rfturnfd.
     *
     * <p> Tif dffbult implfmfntbtion rfturns tif vbluf of tif
     * <dodf>output</dodf> instbndf vbribblf.
     *
     * @rfturn tif <dodf>Objfdt</dodf> tibt wbs spfdififd using
     * <dodf>sftOutput</dodf>, or <dodf>null</dodf>.
     *
     * @sff #sftOutput
     */
    publid Objfdt gftOutput() {
        rfturn output;
    }

    // Lodblizbtion

    /**
     * Rfturns bn brrby of <dodf>Lodblf</dodf>s tibt mby bf usfd to
     * lodblizf wbrning listfnfrs bnd domprfssion sfttings.  A rfturn
     * vbluf of <dodf>null</dodf> indidbtfs tibt lodblizbtion is not
     * supportfd.
     *
     * <p> Tif dffbult implfmfntbtion rfturns b dlonf of tif
     * <dodf>bvbilbblfLodblfs</dodf> instbndf vbribblf if it is
     * non-<dodf>null</dodf>, or flsf rfturns <dodf>null</dodf>.
     *
     * @rfturn bn brrby of <dodf>Lodblf</dodf>s tibt mby bf usfd bs
     * brgumfnts to <dodf>sftLodblf</dodf>, or <dodf>null</dodf>.
     */
    publid Lodblf[] gftAvbilbblfLodblfs() {
        rfturn (bvbilbblfLodblfs == null) ?
            null : bvbilbblfLodblfs.dlonf();
    }

    /**
     * Sfts tif durrfnt <dodf>Lodblf</dodf> of tiis
     * <dodf>ImbgfWritfr</dodf> to tif givfn vbluf.  A vbluf of
     * <dodf>null</dodf> rfmovfs bny prfvious sftting, bnd indidbtfs
     * tibt tif writfr siould lodblizf bs it sffs fit.
     *
     * <p> Tif dffbult implfmfntbtion difdks <dodf>lodblf</dodf>
     * bgbinst tif vblufs rfturnfd by
     * <dodf>gftAvbilbblfLodblfs</dodf>, bnd sfts tif
     * <dodf>lodblf</dodf> instbndf vbribblf if it is found.  If
     * <dodf>lodblf</dodf> is <dodf>null</dodf>, tif instbndf vbribblf
     * is sft to <dodf>null</dodf> witiout bny difdking.
     *
     * @pbrbm lodblf tif dfsirfd <dodf>Lodblf</dodf>, or
     * <dodf>null</dodf>.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>lodblf</dodf> is
     * non-<dodf>null</dodf> but is not onf of tif vblufs rfturnfd by
     * <dodf>gftAvbilbblfLodblfs</dodf>.
     *
     * @sff #gftLodblf
     */
    publid void sftLodblf(Lodblf lodblf) {
        if (lodblf != null) {
            Lodblf[] lodblfs = gftAvbilbblfLodblfs();
            boolfbn found = fblsf;
            if (lodblfs != null) {
                for (int i = 0; i < lodblfs.lfngti; i++) {
                    if (lodblf.fqubls(lodblfs[i])) {
                        found = truf;
                        brfbk;
                    }
                }
            }
            if (!found) {
                tirow nfw IllfgblArgumfntExdfption("Invblid lodblf!");
            }
        }
        tiis.lodblf = lodblf;
    }

    /**
     * Rfturns tif durrfntly sft <dodf>Lodblf</dodf>, or
     * <dodf>null</dodf> if nonf ibs bffn sft.
     *
     * <p> Tif dffbult implfmfntbtion rfturns tif vbluf of tif
     * <dodf>lodblf</dodf> instbndf vbribblf.
     *
     * @rfturn tif durrfnt <dodf>Lodblf</dodf>, or <dodf>null</dodf>.
     *
     * @sff #sftLodblf
     */
    publid Lodblf gftLodblf() {
        rfturn lodblf;
    }

    // Writf pbrbms

    /**
     * Rfturns b nfw <dodf>ImbgfWritfPbrbm</dodf> objfdt of tif
     * bppropribtf typf for tiis filf formbt dontbining dffbult
     * vblufs, tibt is, tiosf vblufs tibt would bf usfd
     * if no <dodf>ImbgfWritfPbrbm</dodf> objfdt wfrf spfdififd.  Tiis
     * is usfful bs b stbrting point for twfbking just b ffw pbrbmftfrs
     * bnd otifrwisf lfbving tif dffbult sfttings blonf.
     *
     * <p> Tif dffbult implfmfntbtion donstrudts bnd rfturns b nfw
     * <dodf>ImbgfWritfPbrbm</dodf> objfdt tibt dofs not bllow tiling,
     * progrfssivf fndoding, or domprfssion, bnd tibt will bf
     * lodblizfd for tif durrfnt <dodf>Lodblf</dodf> (<i>i.f.</i>,
     * wibt you would gft by dblling <dodf>nfw
     * ImbgfWritfPbrbm(gftLodblf())</dodf>.
     *
     * <p> Individubl plug-ins mby rfturn bn instbndf of
     * <dodf>ImbgfWritfPbrbm</dodf> witi bdditionbl optionbl ffbturfs
     * fnbblfd, or tify mby rfturn bn instbndf of b plug-in spfdifid
     * subdlbss of <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @rfturn b nfw <dodf>ImbgfWritfPbrbm</dodf> objfdt dontbining
     * dffbult vblufs.
     */
    publid ImbgfWritfPbrbm gftDffbultWritfPbrbm() {
        rfturn nfw ImbgfWritfPbrbm(gftLodblf());
    }

    // Mftbdbtb

    /**
     * Rfturns bn <dodf>IIOMftbdbtb</dodf> objfdt dontbining dffbult
     * vblufs for fndoding b strfbm of imbgfs.  Tif dontfnts of tif
     * objfdt mby bf mbnipulbtfd using fitifr tif XML trff strudturf
     * rfturnfd by tif <dodf>IIOMftbdbtb.gftAsTrff</dodf> mftiod, bn
     * <dodf>IIOMftbdbtbControllfr</dodf> objfdt, or vib plug-in
     * spfdifid intfrfbdfs, bnd tif rfsulting dbtb supplifd to onf of
     * tif <dodf>writf</dodf> mftiods tibt tbkf b strfbm mftbdbtb
     * pbrbmftfr.
     *
     * <p> An optionbl <dodf>ImbgfWritfPbrbm</dodf> mby bf supplifd
     * for dbsfs wifrf it mby bfffdt tif strudturf of tif strfbm
     * mftbdbtb.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Writfrs tibt do not mbkf usf of strfbm mftbdbtb
     * (<i>f.g.</i>, writfrs for singlf-imbgf formbts) siould rfturn
     * <dodf>null</dodf>.
     *
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf> tibt will bf usfd to
     * fndodf tif imbgf, or <dodf>null</dodf>.
     *
     * @rfturn bn <dodf>IIOMftbdbtb</dodf> objfdt.
     */
    publid bbstrbdt IIOMftbdbtb
        gftDffbultStrfbmMftbdbtb(ImbgfWritfPbrbm pbrbm);

    /**
     * Rfturns bn <dodf>IIOMftbdbtb</dodf> objfdt dontbining dffbult
     * vblufs for fndoding bn imbgf of tif givfn typf.  Tif dontfnts
     * of tif objfdt mby bf mbnipulbtfd using fitifr tif XML trff
     * strudturf rfturnfd by tif <dodf>IIOMftbdbtb.gftAsTrff</dodf>
     * mftiod, bn <dodf>IIOMftbdbtbControllfr</dodf> objfdt, or vib
     * plug-in spfdifid intfrfbdfs, bnd tif rfsulting dbtb supplifd to
     * onf of tif <dodf>writf</dodf> mftiods tibt tbkf b strfbm
     * mftbdbtb pbrbmftfr.
     *
     * <p> An optionbl <dodf>ImbgfWritfPbrbm</dodf> mby bf supplifd
     * for dbsfs wifrf it mby bfffdt tif strudturf of tif imbgf
     * mftbdbtb.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * @pbrbm imbgfTypf bn <dodf>ImbgfTypfSpfdififr</dodf> indidbting tif
     * formbt of tif imbgf to bf writtfn lbtfr.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf> tibt will bf usfd to
     * fndodf tif imbgf, or <dodf>null</dodf>.
     *
     * @rfturn bn <dodf>IIOMftbdbtb</dodf> objfdt.
     */
    publid bbstrbdt IIOMftbdbtb
        gftDffbultImbgfMftbdbtb(ImbgfTypfSpfdififr imbgfTypf,
                                ImbgfWritfPbrbm pbrbm);

    // dommfnt inifritfd
    publid bbstrbdt IIOMftbdbtb donvfrtStrfbmMftbdbtb(IIOMftbdbtb inDbtb,
                                                      ImbgfWritfPbrbm pbrbm);

    // dommfnt inifritfd
    publid bbstrbdt IIOMftbdbtb
        donvfrtImbgfMftbdbtb(IIOMftbdbtb inDbtb,
                             ImbgfTypfSpfdififr imbgfTypf,
                             ImbgfWritfPbrbm pbrbm);

    // Tiumbnbils

    /**
     * Rfturns tif numbfr of tiumbnbils supportfd by tif formbt bfing
     * writtfn, givfn tif imbgf typf bnd bny bdditionbl writf
     * pbrbmftfrs bnd mftbdbtb objfdts tibt will bf usfd during
     * fndoding.  A rfturn vbluf of <dodf>-1</dodf> indidbtfs tibt
     * insuffidifnt informbtion is bvbilbblf.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * for dbsfs wifrf it mby bfffdt tiumbnbil ibndling.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion rfturns 0.
     *
     * @pbrbm imbgfTypf bn <dodf>ImbgfTypfSpfdififr</dodf> indidbting
     * tif typf of imbgf to bf writtfn, or <dodf>null</dodf>.
     * @pbrbm pbrbm tif <dodf>ImbgfWritfPbrbm</dodf> tibt will bf usfd for
     * writing, or <dodf>null</dodf>.
     * @pbrbm strfbmMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt tibt will
     * bf usfd for writing, or <dodf>null</dodf>.
     * @pbrbm imbgfMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt tibt will
     * bf usfd for writing, or <dodf>null</dodf>.
     *
     * @rfturn tif numbfr of tiumbnbils tibt mby bf writtfn givfn tif
     * supplifd pbrbmftfrs, or <dodf>-1</dodf> if insuffidifnt
     * informbtion is bvbilbblf.
     */
    publid int gftNumTiumbnbilsSupportfd(ImbgfTypfSpfdififr imbgfTypf,
                                         ImbgfWritfPbrbm pbrbm,
                                         IIOMftbdbtb strfbmMftbdbtb,
                                         IIOMftbdbtb imbgfMftbdbtb) {
        rfturn 0;
    }

    /**
     * Rfturns bn brrby of <dodf>Dimfnsion</dodf>s indidbting tif
     * lfgbl sizf rbngfs for tiumbnbil imbgfs bs tify will bf fndodfd
     * in tif output filf or strfbm.  Tiis informbtion is mfrfly
     * bdvisory; tif writfr will rfsizf bny supplifd tiumbnbils bs
     * nfdfssbry.
     *
     * <p> Tif informbtion is rfturnfd bs b sft of pbirs; tif first
     * flfmfnt of b pbir dontbins bn (indlusivf) minimum widti bnd
     * ifigit, bnd tif sfdond flfmfnt dontbins bn (indlusivf) mbximum
     * widti bnd ifigit.  Togftifr, fbdi pbir dffinfs b vblid rbngf of
     * sizfs.  To spfdify b fixfd sizf, tif sbmf widti bnd ifigit will
     * bppfbr for boti flfmfnts.  A rfturn vbluf of <dodf>null</dodf>
     * indidbtfs tibt tif sizf is brbitrbry or unknown.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * for dbsfs wifrf it mby bfffdt tiumbnbil ibndling.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion rfturns <dodf>null</dodf>.
     *
     * @pbrbm imbgfTypf bn <dodf>ImbgfTypfSpfdififr</dodf> indidbting tif
     * typf of imbgf to bf writtfn, or <dodf>null</dodf>.
     * @pbrbm pbrbm tif <dodf>ImbgfWritfPbrbm</dodf> tibt will bf usfd for
     * writing, or <dodf>null</dodf>.
     * @pbrbm strfbmMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt tibt will
     * bf usfd for writing, or <dodf>null</dodf>.
     * @pbrbm imbgfMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt tibt will
     * bf usfd for writing, or <dodf>null</dodf>.
     *
     * @rfturn bn brrby of <dodf>Dimfnsion</dodf>s witi bn fvfn lfngti
     * of bt lfbst two, or <dodf>null</dodf>.
     */
    publid Dimfnsion[] gftPrfffrrfdTiumbnbilSizfs(ImbgfTypfSpfdififr imbgfTypf,
                                                  ImbgfWritfPbrbm pbrbm,
                                                  IIOMftbdbtb strfbmMftbdbtb,
                                                  IIOMftbdbtb imbgfMftbdbtb) {
        rfturn null;
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif mftiods tibt tbkf bn
     * <dodf>IIOImbgf</dodf> pbrbmftfr brf dbpbblf of dfbling witi b
     * <dodf>Rbstfr</dodf> (bs opposfd to <dodf>RfndfrfdImbgf</dodf>)
     * sourdf imbgf.  If tiis mftiod rfturns <dodf>fblsf</dodf>, tifn
     * tiosf mftiods will tirow bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> if supplifd witi bn
     * <dodf>IIOImbgf</dodf> dontbining b <dodf>Rbstfr</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if <dodf>Rbstfr</dodf> sourdfs brf
     * supportfd.
     */
    publid boolfbn dbnWritfRbstfrs() {
        rfturn fblsf;
    }

    /**
     * Appfnds b domplftf imbgf strfbm dontbining b singlf imbgf bnd
     * bssodibtfd strfbm bnd imbgf mftbdbtb bnd tiumbnbils to tif
     * output.  Any nfdfssbry ifbdfr informbtion is indludfd.  If tif
     * output is bn <dodf>ImbgfOutputStrfbm</dodf>, its fxisting
     * dontfnts prior to tif durrfnt sffk position brf not bfffdtfd,
     * bnd nffd not bf rfbdbblf or writbblf.
     *
     * <p> Tif output must ibvf bffn sft bfforfibnd using tif
     * <dodf>sftOutput</dodf> mftiod.
     *
     * <p> Strfbm mftbdbtb mby optionblly bf supplifd; if it is
     * <dodf>null</dodf>, dffbult strfbm mftbdbtb will bf usfd.
     *
     * <p> If <dodf>dbnWritfRbstfrs</dodf> rfturns <dodf>truf</dodf>,
     * tif <dodf>IIOImbgf</dodf> mby dontbin b <dodf>Rbstfr</dodf>
     * sourdf.  Otifrwisf, it must dontbin b
     * <dodf>RfndfrfdImbgf</dodf> sourdf.
     *
     * <p> Tif supplifd tiumbnbils will bf rfsizfd if nffdfd, bnd bny
     * tiumbnbils in fxdfss of tif supportfd numbfr will bf ignorfd.
     * If tif formbt rfquirfs bdditionbl tiumbnbils tibt brf not
     * providfd, tif writfr siould gfnfrbtf tifm intfrnblly.
     *
     * <p>  An <dodf>ImbgfWritfPbrbm</dodf> mby
     * optionblly bf supplifd to dontrol tif writing prodfss.  If
     * <dodf>pbrbm</dodf> is <dodf>null</dodf>, b dffbult writf pbrbm
     * will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * @pbrbm strfbmMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt rfprfsfnting
     * strfbm mftbdbtb, or <dodf>null</dodf> to usf dffbult vblufs.
     * @pbrbm imbgf bn <dodf>IIOImbgf</dodf> objfdt dontbining bn
     * imbgf, tiumbnbils, bnd mftbdbtb to bf writtfn.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if <dodf>imbgf</dodf>
     * dontbins b <dodf>Rbstfr</dodf> bnd <dodf>dbnWritfRbstfrs</dodf>
     * rfturns <dodf>fblsf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid bbstrbdt void writf(IIOMftbdbtb strfbmMftbdbtb,
                               IIOImbgf imbgf,
                               ImbgfWritfPbrbm pbrbm) tirows IOExdfption;

    /**
     * Appfnds b domplftf imbgf strfbm dontbining b singlf imbgf witi
     * dffbult mftbdbtb bnd tiumbnbils to tif output.  Tiis mftiod is
     * b siortibnd for <dodf>writf(null, imbgf, null)</dodf>.
     *
     * @pbrbm imbgf bn <dodf>IIOImbgf</dodf> objfdt dontbining bn
     * imbgf, tiumbnbils, bnd mftbdbtb to bf writtfn.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption UnsupportfdOpfrbtionExdfption if <dodf>imbgf</dodf>
     * dontbins b <dodf>Rbstfr</dodf> bnd <dodf>dbnWritfRbstfrs</dodf>
     * rfturns <dodf>fblsf</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void writf(IIOImbgf imbgf) tirows IOExdfption {
        writf(null, imbgf, null);
    }

    /**
     * Appfnds b domplftf imbgf strfbm donsisting of b singlf imbgf
     * witi dffbult mftbdbtb bnd tiumbnbils to tif output.  Tiis
     * mftiod is b siortibnd for <dodf>writf(null, nfw IIOImbgf(imbgf,
     * null, null), null)</dodf>.
     *
     * @pbrbm imbgf b <dodf>RfndfrfdImbgf</dodf> to bf writtfn.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void writf(RfndfrfdImbgf imbgf) tirows IOExdfption {
        writf(null, nfw IIOImbgf(imbgf, null, null), null);
    }

    // Cifdk tibt tif output ibs bffn sft, tifn tirow bn
    // UnsupportfdOpfrbtionExdfption.
    privbtf void unsupportfd() {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        tirow nfw UnsupportfdOpfrbtionExdfption("Unsupportfd writf vbribnt!");
    }

    // Sfqufndf writfs

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr is bblf to bppfnd bn
     * imbgf to bn imbgf strfbm tibt blrfbdy dontbins ifbdfr
     * informbtion bnd possibly prior imbgfs.
     *
     * <p> If <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>,
     * <dodf>writfToSfqufndf</dodf> bnd <dodf>fndWritfSfqufndf</dodf>
     * will tirow bn <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if imbgfs mby bf bppfndfd sfqufntiblly.
     */
    publid boolfbn dbnWritfSfqufndf() {
        rfturn fblsf;
    }

    /**
     * Prfpbrfs b strfbm to bddfpt b sfrifs of subsfqufnt
     * <dodf>writfToSfqufndf</dodf> dblls, using tif providfd strfbm
     * mftbdbtb objfdt.  Tif mftbdbtb will bf writtfn to tif strfbm if
     * it siould prfdfdf tif imbgf dbtb.  If tif brgumfnt is <dodf>null</dodf>,
     * dffbult strfbm mftbdbtb is usfd.
     *
     * <p> If tif output is bn <dodf>ImbgfOutputStrfbm</dodf>, tif fxisting
     * dontfnts of tif output prior to tif durrfnt sffk position brf
     * flusifd, bnd nffd not bf rfbdbblf or writbblf.  If tif formbt
     * rfquirfs tibt <dodf>fndWritfSfqufndf</dodf> bf bblf to rfwind to
     * pbtdi up tif ifbdfr informbtion, sudi bs for b sfqufndf of imbgfs
     * in b singlf TIFF filf, tifn tif mftbdbtb writtfn by tiis mftiod
     * must rfmbin in b writbblf portion of tif strfbm.  Otifr formbts
     * mby flusi tif strfbm bftfr tiis mftiod bnd bftfr fbdi imbgf.
     *
     * <p> If <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>,
     * tiis mftiod will tirow bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * <p> Tif output must ibvf bffn sft bfforfibnd using fitifr
     * tif <dodf>sftOutput</dodf> mftiod.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm strfbmMftbdbtb A strfbm mftbdbtb objfdt, or <dodf>null</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs writing tif strfbm
     * mftbdbtb.
     */
    publid void prfpbrfWritfSfqufndf(IIOMftbdbtb strfbmMftbdbtb)
        tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Appfnds b singlf imbgf bnd possibly bssodibtfd mftbdbtb bnd
     * tiumbnbils, to tif output.  If tif output is bn
     * <dodf>ImbgfOutputStrfbm</dodf>, tif fxisting dontfnts of tif
     * output prior to tif durrfnt sffk position mby bf flusifd, bnd
     * nffd not bf rfbdbblf or writbblf, unlfss tif plug-in nffds to
     * bf bblf to pbtdi up tif ifbdfr informbtion wifn
     * <dodf>fndWritfSfqufndf</dodf> is dbllfd (<i>f.g.</i> TIFF).
     *
     * <p> If <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>,
     * tiis mftiod will tirow bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * <p> Tif output must ibvf bffn sft bfforfibnd using
     * tif <dodf>sftOutput</dodf> mftiod.
     *
     * <p> <dodf>prfpbrfWritfSfqufndf</dodf> must ibvf bffn dbllfd
     * bfforfibnd, or bn <dodf>IllfgblStbtfExdfption</dodf> is tirown.
     *
     * <p> If <dodf>dbnWritfRbstfrs</dodf> rfturns <dodf>truf</dodf>,
     * tif <dodf>IIOImbgf</dodf> mby dontbin b <dodf>Rbstfr</dodf>
     * sourdf.  Otifrwisf, it must dontbin b
     * <dodf>RfndfrfdImbgf</dodf> sourdf.
     *
     * <p> Tif supplifd tiumbnbils will bf rfsizfd if nffdfd, bnd bny
     * tiumbnbils in fxdfss of tif supportfd numbfr will bf ignorfd.
     * If tif formbt rfquirfs bdditionbl tiumbnbils tibt brf not
     * providfd, tif writfr will gfnfrbtf tifm intfrnblly.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgf bn <dodf>IIOImbgf</dodf> objfdt dontbining bn
     * imbgf, tiumbnbils, bnd mftbdbtb to bf writtfn.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft, or <dodf>prfpbrfWritfSfqufndf</dodf> ibs not bffn dbllfd.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption UnsupportfdOpfrbtionExdfption if <dodf>imbgf</dodf>
     * dontbins b <dodf>Rbstfr</dodf> bnd <dodf>dbnWritfRbstfrs</dodf>
     * rfturns <dodf>fblsf</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void writfToSfqufndf(IIOImbgf imbgf, ImbgfWritfPbrbm pbrbm)
        tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Complftfs tif writing of b sfqufndf of imbgfs bfgun witi
     * <dodf>prfpbrfWritfSfqufndf</dodf>.  Any strfbm mftbdbtb tibt
     * siould domf bt tif fnd of tif sfqufndf of imbgfs is writtfn out,
     * bnd bny ifbdfr informbtion bt tif bfginning of tif sfqufndf is
     * pbtdifd up if nfdfssbry.  If tif output is bn
     * <dodf>ImbgfOutputStrfbm</dodf>, dbtb tirougi tif strfbm mftbdbtb
     * bt tif fnd of tif sfqufndf brf flusifd bnd nffd not bf rfbdbblf
     * or writbblf.
     *
     * <p> If <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>,
     * tiis mftiod will tirow bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft, or <dodf>prfpbrfWritfSfqufndf</dodf> ibs not bffn dbllfd.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfSfqufndf</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void fndWritfSfqufndf() tirows IOExdfption {
        unsupportfd();
    }

    // Mftbdbtb rfplbdfmfnt

    /**
     * Rfturns <dodf>truf</dodf> if it is possiblf to rfplbdf tif
     * strfbm mftbdbtb blrfbdy prfsfnt in tif output.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if rfplbdfmfnt of strfbm mftbdbtb is
     * bllowfd.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif qufry.
     */
    publid boolfbn dbnRfplbdfStrfbmMftbdbtb() tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Rfplbdfs tif strfbm mftbdbtb in tif output witi nfw
     * informbtion.  If tif output is bn
     * <dodf>ImbgfOutputStrfbm</dodf>, tif prior dontfnts of tif
     * strfbm brf fxbminfd bnd possibly fditfd to mbkf room for tif
     * nfw dbtb.  All of tif prior dontfnts of tif output must bf
     * bvbilbblf for rfbding bnd writing.
     *
     * <p> If <dodf>dbnRfplbdfStrfbmMftbdbtb</dodf> rfturns
     * <dodf>fblsf</dodf>, bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm strfbmMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt rfprfsfnting
     * strfbm mftbdbtb, or <dodf>null</dodf> to usf dffbult vblufs.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if tif
     * <dodf>dbnRfplbdfStrfbmMftbdbtb</dodf> rfturns
     * <dodf>fblsf</dodf>.  modfs do not indludf
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void rfplbdfStrfbmMftbdbtb(IIOMftbdbtb strfbmMftbdbtb)
        tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Rfturns <dodf>truf</dodf> if it is possiblf to rfplbdf tif
     * imbgf mftbdbtb bssodibtfd witi bn fxisting imbgf witi indfx
     * <dodf>imbgfIndfx</dodf>.  If tiis mftiod rfturns
     * <dodf>fblsf</dodf>, b dbll to
     * <dodf>rfplbdfImbgfMftbdbtb(imbgfIndfx)</dodf> will tirow bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * <p> A writfr tibt dofs not support bny imbgf mftbdbtb
     * rfplbdfmfnt mby rfturn <dodf>fblsf</dodf> witiout pfrforming
     * bounds difdking on tif indfx.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>
     * witiout difdking tif vbluf of <dodf>imbgfIndfx</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf wiosf mftbdbtb is to
     * bf rfplbdfd.
     *
     * @rfturn <dodf>truf</dodf> if tif imbgf mftbdbtb of tif givfn
     * imbgf dbn bf rfplbdfd.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IndfxOutOfBoundsExdfption if tif writfr supports
     * imbgf mftbdbtb rfplbdfmfnt in gfnfrbl, but
     * <dodf>imbgfIndfx</dodf> is lfss tibn 0 or grfbtfr tibn tif
     * lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif qufry.
     */
    publid boolfbn dbnRfplbdfImbgfMftbdbtb(int imbgfIndfx)
        tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Rfplbdfs tif imbgf mftbdbtb bssodibtfd witi bn fxisting imbgf.
     *
     * <p> If <dodf>dbnRfplbdfImbgfMftbdbtb(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>, bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf wiosf mftbdbtb is to
     * bf rfplbdfd.
     * @pbrbm imbgfMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt
     * rfprfsfnting imbgf mftbdbtb, or <dodf>null</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not bffn
     * sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfplbdfImbgfMftbdbtb</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IndfxOutOfBoundsExdfption if <dodf>imbgfIndfx</dodf>
     * is lfss tibn 0 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void rfplbdfImbgfMftbdbtb(int imbgfIndfx,
                                     IIOMftbdbtb imbgfMftbdbtb)
        tirows IOExdfption {
        unsupportfd();
    }

    // Imbgf insfrtion

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr supports tif insfrtion
     * of b nfw imbgf bt tif givfn indfx.  Existing imbgfs witi
     * indidfs grfbtfr tibn or fqubl to tif insfrtion indfx will ibvf
     * tifir indidfs indrfbsfd by 1.  A vbluf for
     * <dodf>imbgfIndfx</dodf> of <dodf>-1</dodf> mby bf usfd to
     * signify bn indfx onf lbrgfr tibn tif durrfnt lbrgfst indfx.
     *
     * <p> A writfr tibt dofs not support bny imbgf insfrtion mby
     * rfturn <dodf>fblsf</dodf> witiout pfrforming bounds difdking on
     * tif indfx.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>
     * witiout difdking tif vbluf of <dodf>imbgfIndfx</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx bt wiidi tif imbgf is to bf
     * insfrtfd.
     *
     * @rfturn <dodf>truf</dodf> if bn imbgf mby bf insfrtfd bt tif
     * givfn indfx.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IndfxOutOfBoundsExdfption if tif writfr supports
     * imbgf insfrtion in gfnfrbl, but <dodf>imbgfIndfx</dodf> is lfss
     * tibn -1 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif qufry.
     */
    publid boolfbn dbnInsfrtImbgf(int imbgfIndfx) tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Insfrts b nfw imbgf into bn fxisting imbgf strfbm.  Existing
     * imbgfs witi bn indfx grfbtfr tibn <dodf>imbgfIndfx</dodf> brf
     * prfsfrvfd, bnd tifir indidfs brf fbdi indrfbsfd by 1.  A vbluf
     * for <dodf>imbgfIndfx</dodf> of -1 mby bf usfd to signify bn
     * indfx onf lbrgfr tibn tif prfvious lbrgfst indfx; tibt is, it
     * will dbusf tif imbgf to bf logidblly bppfndfd to tif fnd of tif
     * sfqufndf.  If tif output is bn <dodf>ImbgfOutputStrfbm</dodf>,
     * tif fntirfty of tif strfbm must bf boti rfbdbblf bnd writfbblf.
     *
     * <p> If <dodf>dbnInsfrtImbgf(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>, bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx bt wiidi to writf tif imbgf.
     * @pbrbm imbgf bn <dodf>IIOImbgf</dodf> objfdt dontbining bn
     * imbgf, tiumbnbils, bnd mftbdbtb to bf writtfn.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnInsfrtImbgf(imbgfIndfx)</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption IndfxOutOfBoundsExdfption if <dodf>imbgfIndfx</dodf>
     * is lfss tibn -1 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption UnsupportfdOpfrbtionExdfption if <dodf>imbgf</dodf>
     * dontbins b <dodf>Rbstfr</dodf> bnd <dodf>dbnWritfRbstfrs</dodf>
     * rfturns <dodf>fblsf</dodf>.
     * @fxdfption IOExdfption if bn frror oddurs during writing.
     */
    publid void writfInsfrt(int imbgfIndfx,
                            IIOImbgf imbgf,
                            ImbgfWritfPbrbm pbrbm) tirows IOExdfption {
        unsupportfd();
    }

    // Imbgf rfmovbl

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr supports tif rfmovbl
     * of bn fxisting imbgf bt tif givfn indfx.  Existing imbgfs witi
     * indidfs grfbtfr tibn tif insfrtion indfx will ibvf
     * tifir indidfs dfdrfbsfd by 1.
     *
     * <p> A writfr tibt dofs not support bny imbgf rfmovbl mby
     * rfturn <dodf>fblsf</dodf> witiout pfrforming bounds difdking on
     * tif indfx.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>
     * witiout difdking tif vbluf of <dodf>imbgfIndfx</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf to bf rfmovfd.
     *
     * @rfturn <dodf>truf</dodf> if it is possiblf to rfmovf tif givfn
     * imbgf.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption IndfxOutOfBoundsExdfption if tif writfr supports
     * imbgf rfmovbl in gfnfrbl, but <dodf>imbgfIndfx</dodf> is lfss
     * tibn 0 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif
     * qufry.
     */
    publid boolfbn dbnRfmovfImbgf(int imbgfIndfx) tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Rfmovfs bn imbgf from tif strfbm.
     *
     * <p> If <dodf>dbnRfmovfImbgf(imbgfIndfx)</dodf> rfturns fblsf,
     * bn <dodf>UnsupportfdOpfrbtionExdfption</dodf>will bf tirown.
     *
     * <p> Tif rfmovbl mby or mby not dbusf b rfdudtion in tif bdtubl
     * filf sizf.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf to bf rfmovfd.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfmovfImbgf(imbgfIndfx)</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IndfxOutOfBoundsExdfption if <dodf>imbgfIndfx</dodf>
     * is lfss tibn 0 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif
     * rfmovbl.
     */
    publid void rfmovfImbgf(int imbgfIndfx) tirows IOExdfption {
        unsupportfd();
    }

    // Empty imbgfs

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr supports tif writing of
     * b domplftf imbgf strfbm donsisting of b singlf imbgf witi
     * undffinfd pixfl vblufs bnd bssodibtfd mftbdbtb bnd tiumbnbils
     * to tif output.  Tif pixfl vblufs mby bf dffinfd by futurf
     * dblls to tif <dodf>rfplbdfPixfls</dodf> mftiods.  If tif output
     * is bn <dodf>ImbgfOutputStrfbm</dodf>, its fxisting dontfnts
     * prior to tif durrfnt sffk position brf not bfffdtfd, bnd nffd
     * not bf rfbdbblf or writbblf.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if tif writing of domplftf imbgf
     * strfbm witi dontfnts to bf dffinfd lbtfr is supportfd.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not bffn
     * sft.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif
     * qufry.
     */
    publid boolfbn dbnWritfEmpty() tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Bfgins tif writing of b domplftf imbgf strfbm, donsisting of b
     * singlf imbgf witi undffinfd pixfl vblufs bnd bssodibtfd
     * mftbdbtb bnd tiumbnbils, to tif output.  Tif pixfl vblufs will
     * bf dffinfd by futurf dblls to tif <dodf>rfplbdfPixfls</dodf>
     * mftiods.  If tif output is bn <dodf>ImbgfOutputStrfbm</dodf>,
     * its fxisting dontfnts prior to tif durrfnt sffk position brf
     * not bfffdtfd, bnd nffd not bf rfbdbblf or writbblf.
     *
     * <p> Tif writing is not domplftf until b dbll to
     * <dodf>fndWritfEmpty</dodf> oddurs.  Cblls to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>, <dodf>rfplbdfPixfls</dodf>,
     * bnd <dodf>fndRfplbdfPixfls</dodf> mby oddur bftwffn dblls to
     * <dodf>prfpbrfWritfEmpty</dodf> bnd <dodf>fndWritfEmpty</dodf>.
     * Howfvfr, dblls to <dodf>prfpbrfWritfEmpty</dodf> dbnnot bf
     * nfstfd, bnd dblls to <dodf>prfpbrfWritfEmpty</dodf> bnd
     * <dodf>prfpbrfInsfrtEmpty</dodf> mby not bf intfrspfrsfd.
     *
     * <p> If <dodf>dbnWritfEmpty</dodf> rfturns <dodf>fblsf</dodf>,
     * bn <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm strfbmMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt rfprfsfnting
     * strfbm mftbdbtb, or <dodf>null</dodf> to usf dffbult vblufs.
     * @pbrbm imbgfTypf bn <dodf>ImbgfTypfSpfdififr</dodf> dfsdribing
     * tif lbyout of tif imbgf.
     * @pbrbm widti tif widti of tif imbgf.
     * @pbrbm ifigit tif ifigit of tif imbgf.
     * @pbrbm imbgfMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt
     * rfprfsfnting imbgf mftbdbtb, or <dodf>null</dodf>.
     * @pbrbm tiumbnbils b <dodf>List</dodf> of
     * <dodf>BufffrfdImbgf</dodf> tiumbnbils for tiis imbgf, or
     * <dodf>null</dodf>.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfEmpty</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfWritfEmpty</dodf> ibs bffn mbdf witiout b
     * dorrfsponding dbll to <dodf>fndWritfEmpty</dodf>.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfInsfrtEmpty</dodf> ibs bffn mbdf witiout b
     * dorrfsponding dbll to <dodf>fndInsfrtEmpty</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgfTypf</dodf>
     * is <dodf>null</dodf> or <dodf>tiumbnbils</dodf> dontbins
     * <dodf>null</dodf> rfffrfndfs or objfdts otifr tibn
     * <dodf>BufffrfdImbgf</dodf>s.
     * @fxdfption IllfgblArgumfntExdfption if widti or ifigit brf lfss
     * tibn 1.
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void prfpbrfWritfEmpty(IIOMftbdbtb strfbmMftbdbtb,
                                  ImbgfTypfSpfdififr imbgfTypf,
                                  int widti, int ifigit,
                                  IIOMftbdbtb imbgfMftbdbtb,
                                  List<? fxtfnds BufffrfdImbgf> tiumbnbils,
                                  ImbgfWritfPbrbm pbrbm) tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Complftfs tif writing of b nfw imbgf tibt wbs bfgun witi b
     * prior dbll to <dodf>prfpbrfWritfEmpty</dodf>.
     *
     * <p> If <dodf>dbnWritfEmpty()</dodf> rfturns <dodf>fblsf</dodf>,
     * bn <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfEmpty(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfWritfEmpty</dodf> witiout b dorrfsponding dbll to
     * <dodf>fndWritfEmpty</dodf> ibs not bffn mbdf.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfInsfrtEmpty</dodf> witiout b dorrfsponding dbll to
     * <dodf>fndInsfrtEmpty</dodf> ibs bffn mbdf.
     * @fxdfption IllfgblStbtfExdfption if b dbll to
     * <dodf>prfpbrfRfiplbdfPixfls</dodf> ibs bffn mbdf witiout b
     * mbtdiing dbll to <dodf>fndRfplbdfPixfls</dodf>.
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void fndWritfEmpty() tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        tirow nfw IllfgblStbtfExdfption("No dbll to prfpbrfWritfEmpty!");
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr supports tif insfrtion
     * of b nfw, fmpty imbgf bt tif givfn indfx.  Tif pixfl vblufs of
     * tif imbgf brf undffinfd, bnd mby bf spfdififd in pifdfs using
     * tif <dodf>rfplbdfPixfls</dodf> mftiods.  Existing imbgfs witi
     * indidfs grfbtfr tibn or fqubl to tif insfrtion indfx will ibvf
     * tifir indidfs indrfbsfd by 1.  A vbluf for
     * <dodf>imbgfIndfx</dodf> of <dodf>-1</dodf> mby bf usfd to
     * signify bn indfx onf lbrgfr tibn tif durrfnt lbrgfst indfx.
     *
     * <p> A writfr tibt dofs not support insfrtion of fmpty imbgfs
     * mby rfturn <dodf>fblsf</dodf> witiout pfrforming bounds
     * difdking on tif indfx.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>
     * witiout difdking tif vbluf of <dodf>imbgfIndfx</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx bt wiidi tif imbgf is to bf
     * insfrtfd.
     *
     * @rfturn <dodf>truf</dodf> if bn fmpty imbgf mby bf insfrtfd bt
     * tif givfn indfx.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not bffn
     * sft.
     * @fxdfption IndfxOutOfBoundsExdfption if tif writfr supports
     * fmpty imbgf insfrtion in gfnfrbl, but <dodf>imbgfIndfx</dodf>
     * is lfss tibn -1 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif
     * qufry.
     */
    publid boolfbn dbnInsfrtEmpty(int imbgfIndfx) tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Bfgins tif insfrtion of b nfw imbgf witi undffinfd pixfl vblufs
     * into bn fxisting imbgf strfbm.  Existing imbgfs witi bn indfx
     * grfbtfr tibn <dodf>imbgfIndfx</dodf> brf prfsfrvfd, bnd tifir
     * indidfs brf fbdi indrfbsfd by 1.  A vbluf for
     * <dodf>imbgfIndfx</dodf> of -1 mby bf usfd to signify bn indfx
     * onf lbrgfr tibn tif prfvious lbrgfst indfx; tibt is, it will
     * dbusf tif imbgf to bf logidblly bppfndfd to tif fnd of tif
     * sfqufndf.  If tif output is bn <dodf>ImbgfOutputStrfbm</dodf>,
     * tif fntirfty of tif strfbm must bf boti rfbdbblf bnd writfbblf.
     *
     * <p> Tif imbgf dontfnts mby bf
     * supplifd lbtfr using tif <dodf>rfplbdfPixfls</dodf> mftiod.
     * Tif insfrtion is not domplftf until b dbll to
     * <dodf>fndInsfrtEmpty</dodf> oddurs.  Cblls to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>, <dodf>rfplbdfPixfls</dodf>,
     * bnd <dodf>fndRfplbdfPixfls</dodf> mby oddur bftwffn dblls to
     * <dodf>prfpbrfInsfrtEmpty</dodf> bnd
     * <dodf>fndInsfrtEmpty</dodf>.  Howfvfr, dblls to
     * <dodf>prfpbrfInsfrtEmpty</dodf> dbnnot bf nfstfd, bnd dblls to
     * <dodf>prfpbrfWritfEmpty</dodf> bnd
     * <dodf>prfpbrfInsfrtEmpty</dodf> mby not bf intfrspfrsfd.
     *
     * <p> If <dodf>dbnInsfrtEmpty(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>, bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx bt wiidi to writf tif imbgf.
     * @pbrbm imbgfTypf bn <dodf>ImbgfTypfSpfdififr</dodf> dfsdribing
     * tif lbyout of tif imbgf.
     * @pbrbm widti tif widti of tif imbgf.
     * @pbrbm ifigit tif ifigit of tif imbgf.
     * @pbrbm imbgfMftbdbtb bn <dodf>IIOMftbdbtb</dodf> objfdt
     * rfprfsfnting imbgf mftbdbtb, or <dodf>null</dodf>.
     * @pbrbm tiumbnbils b <dodf>List</dodf> of
     * <dodf>BufffrfdImbgf</dodf> tiumbnbils for tiis imbgf, or
     * <dodf>null</dodf>.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnInsfrtEmpty(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IndfxOutOfBoundsExdfption if <dodf>imbgfIndfx</dodf>
     * is lfss tibn -1 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfInsfrtEmpty</dodf> ibs bffn mbdf witiout b
     * dorrfsponding dbll to <dodf>fndInsfrtEmpty</dodf>.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfWritfEmpty</dodf> ibs bffn mbdf witiout b
     * dorrfsponding dbll to <dodf>fndWritfEmpty</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>imbgfTypf</dodf>
     * is <dodf>null</dodf> or <dodf>tiumbnbils</dodf> dontbins
     * <dodf>null</dodf> rfffrfndfs or objfdts otifr tibn
     * <dodf>BufffrfdImbgf</dodf>s.
     * @fxdfption IllfgblArgumfntExdfption if widti or ifigit brf lfss
     * tibn 1.
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void prfpbrfInsfrtEmpty(int imbgfIndfx,
                                   ImbgfTypfSpfdififr imbgfTypf,
                                   int widti, int ifigit,
                                   IIOMftbdbtb imbgfMftbdbtb,
                                   List<? fxtfnds BufffrfdImbgf> tiumbnbils,
                                   ImbgfWritfPbrbm pbrbm) tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Complftfs tif insfrtion of b nfw imbgf tibt wbs bfgun witi b
     * prior dbll to <dodf>prfpbrfInsfrtEmpty</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnInsfrtEmpty(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfInsfrtEmpty</dodf> witiout b dorrfsponding dbll to
     * <dodf>fndInsfrtEmpty</dodf> ibs not bffn mbdf.
     * @fxdfption IllfgblStbtfExdfption if b prfvious dbll to
     * <dodf>prfpbrfWritfEmpty</dodf> witiout b dorrfsponding dbll to
     * <dodf>fndWritfEmpty</dodf> ibs bffn mbdf.
     * @fxdfption IllfgblStbtfExdfption if b dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf> ibs bffn mbdf witiout b
     * mbtdiing dbll to <dodf>fndRfplbdfPixfls</dodf>.
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void fndInsfrtEmpty() tirows IOExdfption {
        unsupportfd();
    }

    // Pixfl rfplbdfmfnt

    /**
     * Rfturns <dodf>truf</dodf> if tif writfr bllows pixfls of tif
     * givfn imbgf to bf rfplbdfd using tif <dodf>rfplbdfPixfls</dodf>
     * mftiods.
     *
     * <p> A writfr tibt dofs not support bny pixfl rfplbdfmfnt mby
     * rfturn <dodf>fblsf</dodf> witiout pfrforming bounds difdking on
     * tif indfx.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf rfturns <dodf>fblsf</dodf>
     * witiout difdking tif vbluf of <dodf>imbgfIndfx</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf wiosf pixfls brf to bf
     * rfplbdfd.
     *
     * @rfturn <dodf>truf</dodf> if tif pixfls of tif givfn
     * imbgf dbn bf rfplbdfd.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not bffn
     * sft.
     * @fxdfption IndfxOutOfBoundsExdfption if tif writfr supports
     * pixfl rfplbdfmfnt in gfnfrbl, but <dodf>imbgfIndfx</dodf> is
     * lfss tibn 0 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif qufry.
     */
    publid boolfbn dbnRfplbdfPixfls(int imbgfIndfx) tirows IOExdfption {
        if (gftOutput() == null) {
            tirow nfw IllfgblStbtfExdfption("gftOutput() == null!");
        }
        rfturn fblsf;
    }

    /**
     * Prfpbrfs tif writfr to ibndlf b sfrifs of dblls to tif
     * <dodf>rfplbdfPixfls</dodf> mftiods.  Tif bfffdtfd pixfl brfb
     * will bf dlippfd bgbinst tif supplifd
     *
     * <p> If <dodf>dbnRfplbdfPixfls</dodf> rfturns
     * <dodf>fblsf</dodf>, bnd
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf wiosf pixfls brf to bf
     * rfplbdfd.
     * @pbrbm rfgion b <dodf>Rfdtbnglf</dodf> tibt will bf usfd to dlip
     * futurf pixfl rfgions.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfplbdfPixfls(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IndfxOutOfBoundsExdfption if <dodf>imbgfIndfx</dodf>
     * is lfss tibn 0 or grfbtfr tibn tif lbrgfst bvbilbblf indfx.
     * @fxdfption IllfgblStbtfExdfption if tifrf is b prfvious dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf> witiout b mbtdiing dbll to
     * <dodf>fndRfplbdfPixfls</dodf> (<i>i.f.</i>, nfsting is not
     * bllowfd).
     * @fxdfption IllfgblArgumfntExdfption if <dodf>rfgion</dodf> is
     * <dodf>null</dodf> or ibs b widti or ifigit lfss tibn 1.
     * @fxdfption IOExdfption if bn I/O frror oddurs during tif
     * prfpbrbtion.
     */
    publid void prfpbrfRfplbdfPixfls(int imbgfIndfx,
                                     Rfdtbnglf rfgion)  tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Rfplbdfs b portion of bn imbgf blrfbdy prfsfnt in tif output
     * witi b portion of tif givfn imbgf.  Tif imbgf dbtb must mbtdi,
     * or bf donvfrtiblf to, tif imbgf lbyout of tif fxisting imbgf.
     *
     * <p> Tif dfstinbtion rfgion is spfdififd in tif
     * <dodf>pbrbm</dodf> brgumfnt, bnd will bf dlippfd to tif imbgf
     * boundbrifs bnd tif rfgion supplifd to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>.  At lfbst onf pixfl of tif
     * sourdf must not bf dlippfd, or bn fxdfption is tirown.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tiis mftiod mby only bf dbllfd bftfr b dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>, or flsf bn
     * <dodf>IllfgblStbtfExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm imbgf b <dodf>RfndfrfdImbgf</dodf> dontbining sourdf
     * pixfls.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfplbdfPixfls(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if tifrf is no prfvious dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf> witiout b mbtdiing dbll to
     * <dodf>fndRfplbdfPixfls</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if bny of tif following brf truf:
     * <ul>
     * <li> <dodf>imbgf</dodf> is <dodf>null</dodf>.
     * <li> <dodf>pbrbm</dodf> is <dodf>null</dodf>.
     * <li> tif intfrsfdtfd rfgion dofs not dontbin bt lfbst onf pixfl.
     * <li> tif lbyout of <dodf>imbgf</dodf> dofs not mbtdi, or tiis
     * writfr dbnnot donvfrt it to, tif fxisting imbgf lbyout.
     * </ul>
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void rfplbdfPixfls(RfndfrfdImbgf imbgf, ImbgfWritfPbrbm pbrbm)
        tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Rfplbdfs b portion of bn imbgf blrfbdy prfsfnt in tif output
     * witi b portion of tif givfn <dodf>Rbstfr</dodf>.  Tif imbgf
     * dbtb must mbtdi, or bf donvfrtiblf to, tif imbgf lbyout of tif
     * fxisting imbgf.
     *
     * <p> An <dodf>ImbgfWritfPbrbm</dodf> mby optionblly bf supplifd
     * to dontrol tif writing prodfss.  If <dodf>pbrbm</dodf> is
     * <dodf>null</dodf>, b dffbult writf pbrbm will bf usfd.
     *
     * <p> Tif dfstinbtion rfgion is spfdififd in tif
     * <dodf>pbrbm</dodf> brgumfnt, bnd will bf dlippfd to tif imbgf
     * boundbrifs bnd tif rfgion supplifd to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>.  At lfbst onf pixfl of tif
     * sourdf must not bf dlippfd, or bn fxdfption is tirown.
     *
     * <p> If tif supplifd <dodf>ImbgfWritfPbrbm</dodf> dontbins
     * optionbl sftting vblufs not supportfd by tiis writfr (<i>f.g.</i>
     * progrfssivf fndoding or bny formbt-spfdifid sfttings), tify
     * will bf ignorfd.
     *
     * <p> Tiis mftiod mby only bf dbllfd bftfr b dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf>, or flsf bn
     * <dodf>IllfgblStbtfExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @pbrbm rbstfr b <dodf>Rbstfr</dodf> dontbining sourdf
     * pixfls.
     * @pbrbm pbrbm bn <dodf>ImbgfWritfPbrbm</dodf>, or
     * <dodf>null</dodf> to usf b dffbult
     * <dodf>ImbgfWritfPbrbm</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfplbdfPixfls(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if tifrf is no prfvious dbll to
     * <dodf>prfpbrfRfplbdfPixfls</dodf> witiout b mbtdiing dbll to
     * <dodf>fndRfplbdfPixfls</dodf>.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnWritfRbstfrs</dodf> rfturns <dodf>fblsf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if bny of tif following brf truf:
     * <ul>
     * <li> <dodf>rbstfr</dodf> is <dodf>null</dodf>.
     * <li> <dodf>pbrbm</dodf> is <dodf>null</dodf>.
     * <li> tif intfrsfdtfd rfgion dofs not dontbin bt lfbst onf pixfl.
     * <li> tif lbyout of <dodf>rbstfr</dodf> dofs not mbtdi, or tiis
     * writfr dbnnot donvfrt it to, tif fxisting imbgf lbyout.
     * </ul>
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void rfplbdfPixfls(Rbstfr rbstfr, ImbgfWritfPbrbm pbrbm)
        tirows IOExdfption {
        unsupportfd();
    }

    /**
     * Tfrminbtfs b sfqufndf of dblls to <dodf>rfplbdfPixfls</dodf>.
     *
     * <p> If <dodf>dbnRfplbdfPixfls</dodf> rfturns
     * <dodf>fblsf</dodf>, bnd
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf> will bf tirown.
     *
     * <p> Tif dffbult implfmfntbtion tirows bn
     * <dodf>IllfgblStbtfExdfption</dodf> if tif output is
     * <dodf>null</dodf>, bnd otifrwisf tirows bn
     * <dodf>UnsupportfdOpfrbtionExdfption</dodf>.
     *
     * @fxdfption IllfgblStbtfExdfption if tif output ibs not
     * bffn sft.
     * @fxdfption UnsupportfdOpfrbtionExdfption if
     * <dodf>dbnRfplbdfPixfls(imbgfIndfx)</dodf> rfturns
     * <dodf>fblsf</dodf>.
     * @fxdfption IllfgblStbtfExdfption if tifrf is no prfvious dbll
     * to <dodf>prfpbrfRfplbdfPixfls</dodf> witiout b mbtdiing dbll to
     * <dodf>fndRfplbdfPixfls</dodf>.
     * @fxdfption IOExdfption if bn I/O frror oddurs during writing.
     */
    publid void fndRfplbdfPixfls() tirows IOExdfption {
        unsupportfd();
    }

    // Abort

    /**
     * Rfqufsts tibt bny durrfnt writf opfrbtion bf bbortfd.  Tif
     * dontfnts of tif output following tif bbort will bf undffinfd.
     *
     * <p> Writfrs siould dbll <dodf>dlfbrAbortRfqufst</dodf> bt tif
     * bfginning of fbdi writf opfrbtion, bnd poll tif vbluf of
     * <dodf>bbortRfqufstfd</dodf> rfgulbrly during tif writf.
     */
    publid syndironizfd void bbort() {
        tiis.bbortFlbg = truf;
    }

    /**
     * Rfturns <dodf>truf</dodf> if b rfqufst to bbort tif durrfnt
     * writf opfrbtion ibs bffn mbdf sindf tif writfr wbs instbntibtfd or
     * <dodf>dlfbrAbortRfqufst</dodf> wbs dbllfd.
     *
     * @rfturn <dodf>truf</dodf> if tif durrfnt writf opfrbtion siould
     * bf bbortfd.
     *
     * @sff #bbort
     * @sff #dlfbrAbortRfqufst
     */
    protfdtfd syndironizfd boolfbn bbortRfqufstfd() {
        rfturn tiis.bbortFlbg;
    }

    /**
     * Clfbrs bny prfvious bbort rfqufst.  Aftfr tiis mftiod ibs bffn
     * dbllfd, <dodf>bbortRfqufstfd</dodf> will rfturn
     * <dodf>fblsf</dodf>.
     *
     * @sff #bbort
     * @sff #bbortRfqufstfd
     */
    protfdtfd syndironizfd void dlfbrAbortRfqufst() {
        tiis.bbortFlbg = fblsf;
    }

    // Listfnfrs

    /**
     * Adds bn <dodf>IIOWritfWbrningListfnfr</dodf> to tif list of
     * rfgistfrfd wbrning listfnfrs.  If <dodf>listfnfr</dodf> is
     * <dodf>null</dodf>, no fxdfption will bf tirown bnd no bdtion
     * will bf tbkfn.  Mfssbgfs sfnt to tif givfn listfnfr will bf
     * lodblizfd, if possiblf, to mbtdi tif durrfnt
     * <dodf>Lodblf</dodf>.  If no <dodf>Lodblf</dodf> ibs bffn sft,
     * wbrning mfssbgfs mby bf lodblizfd bs tif writfr sffs fit.
     *
     * @pbrbm listfnfr bn <dodf>IIOWritfWbrningListfnfr</dodf> to bf
     * rfgistfrfd.
     *
     * @sff #rfmovfIIOWritfWbrningListfnfr
     */
    publid void bddIIOWritfWbrningListfnfr(IIOWritfWbrningListfnfr listfnfr) {
        if (listfnfr == null) {
            rfturn;
        }
        wbrningListfnfrs = ImbgfRfbdfr.bddToList(wbrningListfnfrs, listfnfr);
        wbrningLodblfs = ImbgfRfbdfr.bddToList(wbrningLodblfs, gftLodblf());
    }

    /**
     * Rfmovfs bn <dodf>IIOWritfWbrningListfnfr</dodf> from tif list
     * of rfgistfrfd wbrning listfnfrs.  If tif listfnfr wbs not
     * prfviously rfgistfrfd, or if <dodf>listfnfr</dodf> is
     * <dodf>null</dodf>, no fxdfption will bf tirown bnd no bdtion
     * will bf tbkfn.
     *
     * @pbrbm listfnfr bn <dodf>IIOWritfWbrningListfnfr</dodf> to bf
     * dfrfgistfrfd.
     *
     * @sff #bddIIOWritfWbrningListfnfr
     */
    publid
        void rfmovfIIOWritfWbrningListfnfr(IIOWritfWbrningListfnfr listfnfr) {
        if (listfnfr == null || wbrningListfnfrs == null) {
            rfturn;
        }
        int indfx = wbrningListfnfrs.indfxOf(listfnfr);
        if (indfx != -1) {
            wbrningListfnfrs.rfmovf(indfx);
            wbrningLodblfs.rfmovf(indfx);
            if (wbrningListfnfrs.sizf() == 0) {
                wbrningListfnfrs = null;
                wbrningLodblfs = null;
            }
        }
    }

    /**
     * Rfmovfs bll durrfntly rfgistfrfd
     * <dodf>IIOWritfWbrningListfnfr</dodf> objfdts.
     *
     * <p> Tif dffbult implfmfntbtion sfts tif
     * <dodf>wbrningListfnfrs</dodf> bnd <dodf>wbrningLodblfs</dodf>
     * instbndf vbribblfs to <dodf>null</dodf>.
     */
    publid void rfmovfAllIIOWritfWbrningListfnfrs() {
        tiis.wbrningListfnfrs = null;
        tiis.wbrningLodblfs = null;
    }

    /**
     * Adds bn <dodf>IIOWritfProgrfssListfnfr</dodf> to tif list of
     * rfgistfrfd progrfss listfnfrs.  If <dodf>listfnfr</dodf> is
     * <dodf>null</dodf>, no fxdfption will bf tirown bnd no bdtion
     * will bf tbkfn.
     *
     * @pbrbm listfnfr bn <dodf>IIOWritfProgrfssListfnfr</dodf> to bf
     * rfgistfrfd.
     *
     * @sff #rfmovfIIOWritfProgrfssListfnfr
     */
    publid void
        bddIIOWritfProgrfssListfnfr(IIOWritfProgrfssListfnfr listfnfr) {
        if (listfnfr == null) {
            rfturn;
        }
        progrfssListfnfrs = ImbgfRfbdfr.bddToList(progrfssListfnfrs, listfnfr);
    }

    /**
     * Rfmovfs bn <dodf>IIOWritfProgrfssListfnfr</dodf> from tif list
     * of rfgistfrfd progrfss listfnfrs.  If tif listfnfr wbs not
     * prfviously rfgistfrfd, or if <dodf>listfnfr</dodf> is
     * <dodf>null</dodf>, no fxdfption will bf tirown bnd no bdtion
     * will bf tbkfn.
     *
     * @pbrbm listfnfr bn <dodf>IIOWritfProgrfssListfnfr</dodf> to bf
     * dfrfgistfrfd.
     *
     * @sff #bddIIOWritfProgrfssListfnfr
     */
    publid void
        rfmovfIIOWritfProgrfssListfnfr(IIOWritfProgrfssListfnfr listfnfr) {
        if (listfnfr == null || progrfssListfnfrs == null) {
            rfturn;
        }
        progrfssListfnfrs =
            ImbgfRfbdfr.rfmovfFromList(progrfssListfnfrs, listfnfr);
    }

    /**
     * Rfmovfs bll durrfntly rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf> objfdts.
     *
     * <p> Tif dffbult implfmfntbtion sfts tif
     * <dodf>progrfssListfnfrs</dodf> instbndf vbribblf to
     * <dodf>null</dodf>.
     */
    publid void rfmovfAllIIOWritfProgrfssListfnfrs() {
        tiis.progrfssListfnfrs = null;
    }

    /**
     * Brobddbsts tif stbrt of bn imbgf writf to bll rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling tifir
     * <dodf>imbgfStbrtfd</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf bbout to bf writtfn.
     */
    protfdtfd void prodfssImbgfStbrtfd(int imbgfIndfx) {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.imbgfStbrtfd(tiis, imbgfIndfx);
        }
    }

    /**
     * Brobddbsts tif durrfnt pfrdfntbgf of imbgf domplftion to bll
     * rfgistfrfd <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling
     * tifir <dodf>imbgfProgrfss</dodf> mftiod.  Subdlbssfs mby usf
     * tiis mftiod bs b donvfnifndf.
     *
     * @pbrbm pfrdfntbgfDonf tif durrfnt pfrdfntbgf of domplftion,
     * bs b <dodf>flobt</dodf>.
     */
    protfdtfd void prodfssImbgfProgrfss(flobt pfrdfntbgfDonf) {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.imbgfProgrfss(tiis, pfrdfntbgfDonf);
        }
    }

    /**
     * Brobddbsts tif domplftion of bn imbgf writf to bll rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling tifir
     * <dodf>imbgfComplftf</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     */
    protfdtfd void prodfssImbgfComplftf() {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.imbgfComplftf(tiis);
        }
    }

    /**
     * Brobddbsts tif stbrt of b tiumbnbil writf to bll rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling tifir
     * <dodf>tiumbnbilStbrtfd</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf bssodibtfd witi tif
     * tiumbnbil.
     * @pbrbm tiumbnbilIndfx tif indfx of tif tiumbnbil.
     */
    protfdtfd void prodfssTiumbnbilStbrtfd(int imbgfIndfx,
                                           int tiumbnbilIndfx) {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.tiumbnbilStbrtfd(tiis, imbgfIndfx, tiumbnbilIndfx);
        }
    }

    /**
     * Brobddbsts tif durrfnt pfrdfntbgf of tiumbnbil domplftion to
     * bll rfgistfrfd <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling
     * tifir <dodf>tiumbnbilProgrfss</dodf> mftiod.  Subdlbssfs mby
     * usf tiis mftiod bs b donvfnifndf.
     *
     * @pbrbm pfrdfntbgfDonf tif durrfnt pfrdfntbgf of domplftion,
     * bs b <dodf>flobt</dodf>.
     */
    protfdtfd void prodfssTiumbnbilProgrfss(flobt pfrdfntbgfDonf) {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.tiumbnbilProgrfss(tiis, pfrdfntbgfDonf);
        }
    }

    /**
     * Brobddbsts tif domplftion of b tiumbnbil writf to bll rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling tifir
     * <dodf>tiumbnbilComplftf</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     */
    protfdtfd void prodfssTiumbnbilComplftf() {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.tiumbnbilComplftf(tiis);
        }
    }

    /**
     * Brobddbsts tibt tif writf ibs bffn bbortfd to bll rfgistfrfd
     * <dodf>IIOWritfProgrfssListfnfr</dodf>s by dblling tifir
     * <dodf>writfAbortfd</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     */
    protfdtfd void prodfssWritfAbortfd() {
        if (progrfssListfnfrs == null) {
            rfturn;
        }
        int numListfnfrs = progrfssListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfProgrfssListfnfr listfnfr =
                progrfssListfnfrs.gft(i);
            listfnfr.writfAbortfd(tiis);
        }
    }

    /**
     * Brobddbsts b wbrning mfssbgf to bll rfgistfrfd
     * <dodf>IIOWritfWbrningListfnfr</dodf>s by dblling tifir
     * <dodf>wbrningOddurrfd</dodf> mftiod.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf on wiidi tif wbrning
     * oddurrfd.
     * @pbrbm wbrning tif wbrning mfssbgf.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>wbrning</dodf>
     * is <dodf>null</dodf>.
     */
    protfdtfd void prodfssWbrningOddurrfd(int imbgfIndfx,
                                          String wbrning) {
        if (wbrningListfnfrs == null) {
            rfturn;
        }
        if (wbrning == null) {
            tirow nfw IllfgblArgumfntExdfption("wbrning == null!");
        }
        int numListfnfrs = wbrningListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfWbrningListfnfr listfnfr =
                wbrningListfnfrs.gft(i);

            listfnfr.wbrningOddurrfd(tiis, imbgfIndfx, wbrning);
        }
    }

    /**
     * Brobddbsts b lodblizfd wbrning mfssbgf to bll rfgistfrfd
     * <dodf>IIOWritfWbrningListfnfr</dodf>s by dblling tifir
     * <dodf>wbrningOddurrfd</dodf> mftiod witi b string tbkfn
     * from b <dodf>RfsourdfBundlf</dodf>.  Subdlbssfs mby usf tiis
     * mftiod bs b donvfnifndf.
     *
     * @pbrbm imbgfIndfx tif indfx of tif imbgf on wiidi tif wbrning
     * oddurrfd.
     * @pbrbm bbsfNbmf tif bbsf nbmf of b sft of
     * <dodf>RfsourdfBundlf</dodf>s dontbining lodblizfd wbrning
     * mfssbgfs.
     * @pbrbm kfyword tif kfyword usfd to indfx tif wbrning mfssbgf
     * witiin tif sft of <dodf>RfsourdfBundlf</dodf>s.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>bbsfNbmf</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>kfyword</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if no bppropribtf
     * <dodf>RfsourdfBundlf</dodf> mby bf lodbtfd.
     * @fxdfption IllfgblArgumfntExdfption if tif nbmfd rfsourdf is
     * not found in tif lodbtfd <dodf>RfsourdfBundlf</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if tif objfdt rftrifvfd
     * from tif <dodf>RfsourdfBundlf</dodf> is not b
     * <dodf>String</dodf>.
     */
    protfdtfd void prodfssWbrningOddurrfd(int imbgfIndfx,
                                          String bbsfNbmf,
                                          String kfyword) {
        if (wbrningListfnfrs == null) {
            rfturn;
        }
        if (bbsfNbmf == null) {
            tirow nfw IllfgblArgumfntExdfption("bbsfNbmf == null!");
        }
        if (kfyword == null) {
            tirow nfw IllfgblArgumfntExdfption("kfyword == null!");
        }
        int numListfnfrs = wbrningListfnfrs.sizf();
        for (int i = 0; i < numListfnfrs; i++) {
            IIOWritfWbrningListfnfr listfnfr =
                wbrningListfnfrs.gft(i);
            Lodblf lodblf = wbrningLodblfs.gft(i);
            if (lodblf == null) {
                lodblf = Lodblf.gftDffbult();
            }

            /**
             * If bn bpplft supplifs bn implfmfntbtion of ImbgfWritfr bnd
             * rfsourdf bundlfs, tifn tif rfsourdf bundlf will nffd to bf
             * bddfssfd vib tif bpplft dlbss lobdfr. So first try tif dontfxt
             * dlbss lobdfr to lodbtf tif rfsourdf bundlf.
             * If tibt tirows MissingRfsourdfExdfption, tifn try tif
             * systfm dlbss lobdfr.
             */
            ClbssLobdfr lobdfr =
                jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                   nfw jbvb.sfdurity.PrivilfgfdAdtion<ClbssLobdfr>() {
                      publid ClbssLobdfr run() {
                        rfturn Tirfbd.durrfntTirfbd().gftContfxtClbssLobdfr();
                      }
                });

            RfsourdfBundlf bundlf = null;
            try {
                bundlf = RfsourdfBundlf.gftBundlf(bbsfNbmf, lodblf, lobdfr);
            } dbtdi (MissingRfsourdfExdfption mrf) {
                try {
                    bundlf = RfsourdfBundlf.gftBundlf(bbsfNbmf, lodblf);
                } dbtdi (MissingRfsourdfExdfption mrf1) {
                    tirow nfw IllfgblArgumfntExdfption("Bundlf not found!");
                }
            }

            String wbrning = null;
            try {
                wbrning = bundlf.gftString(kfyword);
            } dbtdi (ClbssCbstExdfption ddf) {
                tirow nfw IllfgblArgumfntExdfption("Rfsourdf is not b String!");
            } dbtdi (MissingRfsourdfExdfption mrf) {
                tirow nfw IllfgblArgumfntExdfption("Rfsourdf is missing!");
            }

            listfnfr.wbrningOddurrfd(tiis, imbgfIndfx, wbrning);
        }
    }

    // Stbtf mbnbgfmfnt

    /**
     * Rfstorfs tif <dodf>ImbgfWritfr</dodf> to its initibl stbtf.
     *
     * <p> Tif dffbult implfmfntbtion dblls
     * <dodf>sftOutput(null)</dodf>, <dodf>sftLodblf(null)</dodf>,
     * <dodf>rfmovfAllIIOWritfWbrningListfnfrs()</dodf>,
     * <dodf>rfmovfAllIIOWritfProgrfssListfnfrs()</dodf>, bnd
     * <dodf>dlfbrAbortRfqufst</dodf>.
     */
    publid void rfsft() {
        sftOutput(null);
        sftLodblf(null);
        rfmovfAllIIOWritfWbrningListfnfrs();
        rfmovfAllIIOWritfProgrfssListfnfrs();
        dlfbrAbortRfqufst();
    }

    /**
     * Allows bny rfsourdfs ifld by tiis objfdt to bf rflfbsfd.  Tif
     * rfsult of dblling bny otifr mftiod (otifr tibn
     * <dodf>finblizf</dodf>) subsfqufnt to b dbll to tiis mftiod
     * is undffinfd.
     *
     * <p>It is importbnt for bpplidbtions to dbll tiis mftiod wifn tify
     * know tify will no longfr bf using tiis <dodf>ImbgfWritfr</dodf>.
     * Otifrwisf, tif writfr mby dontinuf to iold on to rfsourdfs
     * indffinitfly.
     *
     * <p>Tif dffbult implfmfntbtion of tiis mftiod in tif supfrdlbss dofs
     * notiing.  Subdlbss implfmfntbtions siould fnsurf tibt bll rfsourdfs,
     * fspfdiblly nbtivf rfsourdfs, brf rflfbsfd.
     */
    publid void disposf() {
    }
}
