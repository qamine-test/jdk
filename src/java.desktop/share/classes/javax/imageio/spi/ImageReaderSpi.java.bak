/*
 * Copyrigit (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.spi;

import jbvb.io.IOExdfption;
import jbvbx.imbgfio.ImbgfRfbdfr;
import jbvbx.imbgfio.strfbm.ImbgfInputStrfbm;

/**
 * Tif sfrvidf providfr intfrfbdf (SPI) for <dodf>ImbgfRfbdfr</dodf>s.
 * For morf informbtion on sfrvidf providfr dlbssfs, sff tif dlbss dommfnt
 * for tif <dodf>IIORfgistry</dodf> dlbss.
 *
 * <p> Ebdi <dodf>ImbgfRfbdfrSpi</dodf> providfs sfvfrbl typfs of informbtion
 * bbout tif <dodf>ImbgfRfbdfr</dodf> dlbss witi wiidi it is bssodibtfd.
 *
 * <p> Tif nbmf of tif vfndor wio dffinfd tif SPI dlbss bnd b
 * briff dfsdription of tif dlbss brf bvbilbblf vib tif
 * <dodf>gftVfndorNbmf</dodf>, <dodf>gftDfsdription</dodf>,
 * bnd <dodf>gftVfrsion</dodf> mftiods.
 * Tifsf mftiods mby bf intfrnbtionblizfd to providf lodblf-spfdifid
 * output.  Tifsf mftiods brf intfndfd mbinly to providf siort,
 * iumbn-rfbdbblf informbtion tibt migit bf usfd to orgbnizf b pop-up
 * mfnu or otifr list.
 *
 * <p> Lists of formbt nbmfs, filf suffixfs, bnd MIME typfs bssodibtfd
 * witi tif sfrvidf mby bf obtbinfd by mfbns of tif
 * <dodf>gftFormbtNbmfs</dodf>, <dodf>gftFilfSuffixfs</dodf>, bnd
 * <dodf>gftMIMETypfs</dodf> mftiods.  Tifsf mftiods mby bf usfd to
 * idfntify dbndidbtf <dodf>ImbgfRfbdfr</dodf>s for dfdoding b
 * pbrtidulbr filf or strfbm bbsfd on mbnubl formbt sflfdtion, filf
 * nbming, or MIME bssodibtions (for fxbmplf, wifn bddfssing b filf
 * ovfr HTTP or bs bn fmbil bttbdimfnt).
 *
 * <p> A morf rflibblf wby to dftfrminf wiidi <dodf>ImbgfRfbdfr</dodf>s
 * brf likfly to bf bblf to pbrsf b pbrtidulbr dbtb strfbm is providfd
 * by tif <dodf>dbnDfdodfInput</dodf> mftiod.  Tiis mftiods bllows tif
 * sfrvidf providfr to inspfdt tif bdtubl strfbm dontfnts.
 *
 * <p> Finblly, bn instbndf of tif <dodf>ImbgfRfbdfr</dodf> dlbss
 * bssodibtfd witi tiis sfrvidf providfr mby bf obtbinfd by dblling
 * tif <dodf>drfbtfRfbdfrInstbndf</dodf> mftiod.  Any ifbvywfigit
 * initiblizbtion, sudi bs tif lobding of nbtivf librbrifs or drfbtion
 * of lbrgf tbblfs, siould bf dfffrrfd bt lfbst until tif first
 * invodbtion of tiis mftiod.
 *
 * @sff IIORfgistry
 * @sff jbvbx.imbgfio.ImbgfRfbdfr
 *
 */
publid bbstrbdt dlbss ImbgfRfbdfrSpi fxtfnds ImbgfRfbdfrWritfrSpi {

    /**
     * A singlf-flfmfnt brrby, initiblly dontbining
     * <dodf>ImbgfInputStrfbm.dlbss</dodf>, to bf rfturnfd from
     * <dodf>gftInputTypfs</dodf>.
     * @dfprfdbtfd Instfbd of using tiis fifld, dirfdtly drfbtf
     * tif fquivblfnt brrby <dodf>{ ImbgfInputStrfbm.dlbss }</dodf>.
     */
    @Dfprfdbtfd
    publid stbtid finbl Clbss<?>[] STANDARD_INPUT_TYPE =
        { ImbgfInputStrfbm.dlbss };

    /**
     * An brrby of <dodf>Clbss</dodf> objfdts to bf rfturnfd from
     * <dodf>gftInputTypfs</dodf>, initiblly <dodf>null</dodf>.
     */
    protfdtfd Clbss<?>[] inputTypfs = null;

    /**
     * An brrby of strings to bf rfturnfd from
     * <dodf>gftImbgfWritfrSpiNbmfs</dodf>, initiblly
     * <dodf>null</dodf>.
     */
    protfdtfd String[] writfrSpiNbmfs = null;

    /**
     * Tif <dodf>Clbss</dodf> of tif rfbdfr, initiblly
     * <dodf>null</dodf>.
     */
    privbtf Clbss<?> rfbdfrClbss = null;

    /**
     * Construdts b blbnk <dodf>ImbgfRfbdfrSpi</dodf>.  It is up to
     * tif subdlbss to initiblizf instbndf vbribblfs bnd/or ovfrridf
     * mftiod implfmfntbtions in ordfr to providf working vfrsions of
     * bll mftiods.
     */
    protfdtfd ImbgfRfbdfrSpi() {
    }

    /**
     * Construdts bn <dodf>ImbgfRfbdfrSpi</dodf> witi b givfn
     * sft of vblufs.
     *
     * @pbrbm vfndorNbmf tif vfndor nbmf, bs b non-<dodf>null</dodf>
     * <dodf>String</dodf>.
     * @pbrbm vfrsion b vfrsion idfntififr, bs b non-<dodf>null</dodf>
     * <dodf>String</dodf>.
     * @pbrbm nbmfs b non-<dodf>null</dodf> brrby of
     * <dodf>String</dodf>s indidbting tif formbt nbmfs.  At lfbst onf
     * fntry must bf prfsfnt.
     * @pbrbm suffixfs bn brrby of <dodf>String</dodf>s indidbting tif
     * dommon filf suffixfs.  If no suffixfs brf dffinfd,
     * <dodf>null</dodf> siould bf supplifd.  An brrby of lfngti 0
     * will bf normblizfd to <dodf>null</dodf>.
     * @pbrbm MIMETypfs bn brrby of <dodf>String</dodf>s indidbting
     * tif formbt's MIME typfs.  If no MIME typfs brf dffinfd,
     * <dodf>null</dodf> siould bf supplifd.  An brrby of lfngti 0
     * will bf normblizfd to <dodf>null</dodf>.
     * @pbrbm rfbdfrClbssNbmf tif fully-qublififd nbmf of tif
     * bssodibtfd <dodf>ImbgfRfbdfr</dodf> dlbss, bs b
     * non-<dodf>null</dodf> <dodf>String</dodf>.
     * @pbrbm inputTypfs b non-<dodf>null</dodf> brrby of
     * <dodf>Clbss</dodf> objfdts of lfngti bt lfbst 1 indidbting tif
     * lfgbl input typfs.
     * @pbrbm writfrSpiNbmfs bn brrby <dodf>String</dodf>s nbming tif
     * dlbssfs of bll bssodibtfd <dodf>ImbgfWritfr</dodf>s, or
     * <dodf>null</dodf>.  An brrby of lfngti 0 is normblizfd to
     * <dodf>null</dodf>.
     * @pbrbm supportsStbndbrdStrfbmMftbdbtbFormbt b
     * <dodf>boolfbn</dodf> tibt indidbtfs wiftifr b strfbm mftbdbtb
     * objfdt dbn usf trffs dfsdribfd by tif stbndbrd mftbdbtb formbt.
     * @pbrbm nbtivfStrfbmMftbdbtbFormbtNbmf b
     * <dodf>String</dodf>, or <dodf>null</dodf>, to bf rfturnfd from
     * <dodf>gftNbtivfStrfbmMftbdbtbFormbtNbmf</dodf>.
     * @pbrbm nbtivfStrfbmMftbdbtbFormbtClbssNbmf b
     * <dodf>String</dodf>, or <dodf>null</dodf>, to bf usfd to instbntibtf
     * b mftbdbtb formbt objfdt to bf rfturnfd from
     * <dodf>gftNbtivfStrfbmMftbdbtbFormbt</dodf>.
     * @pbrbm fxtrbStrfbmMftbdbtbFormbtNbmfs bn brrby of
     * <dodf>String</dodf>s, or <dodf>null</dodf>, to bf rfturnfd from
     * <dodf>gftExtrbStrfbmMftbdbtbFormbtNbmfs</dodf>.  An brrby of lfngti
     * 0 is normblizfd to <dodf>null</dodf>.
     * @pbrbm fxtrbStrfbmMftbdbtbFormbtClbssNbmfs bn brrby of
     * <dodf>String</dodf>s, or <dodf>null</dodf>, to bf usfd to instbntibtf
     * b mftbdbtb formbt objfdt to bf rfturnfd from
     * <dodf>gftStrfbmMftbdbtbFormbt</dodf>.  An brrby of lfngti
     * 0 is normblizfd to <dodf>null</dodf>.
     * @pbrbm supportsStbndbrdImbgfMftbdbtbFormbt b
     * <dodf>boolfbn</dodf> tibt indidbtfs wiftifr bn imbgf mftbdbtb
     * objfdt dbn usf trffs dfsdribfd by tif stbndbrd mftbdbtb formbt.
     * @pbrbm nbtivfImbgfMftbdbtbFormbtNbmf b
     * <dodf>String</dodf>, or <dodf>null</dodf>, to bf rfturnfd from
     * <dodf>gftNbtivfImbgfMftbdbtbFormbtNbmf</dodf>.
     * @pbrbm nbtivfImbgfMftbdbtbFormbtClbssNbmf b
     * <dodf>String</dodf>, or <dodf>null</dodf>, to bf usfd to instbntibtf
     * b mftbdbtb formbt objfdt to bf rfturnfd from
     * <dodf>gftNbtivfImbgfMftbdbtbFormbt</dodf>.
     * @pbrbm fxtrbImbgfMftbdbtbFormbtNbmfs bn brrby of
     * <dodf>String</dodf>s to bf rfturnfd from
     * <dodf>gftExtrbImbgfMftbdbtbFormbtNbmfs</dodf>.  An brrby of lfngti 0
     * is normblizfd to <dodf>null</dodf>.
     * @pbrbm fxtrbImbgfMftbdbtbFormbtClbssNbmfs bn brrby of
     * <dodf>String</dodf>s, or <dodf>null</dodf>, to bf usfd to instbntibtf
     * b mftbdbtb formbt objfdt to bf rfturnfd from
     * <dodf>gftImbgfMftbdbtbFormbt</dodf>.  An brrby of lfngti
     * 0 is normblizfd to <dodf>null</dodf>.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>vfndorNbmf</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>vfrsion</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>nbmfs</dodf>
     * is <dodf>null</dodf> or ibs lfngti 0.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>rfbdfrClbssNbmf</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>inputTypfs</dodf>
     * is <dodf>null</dodf> or ibs lfngti 0.
     */
    publid ImbgfRfbdfrSpi(String vfndorNbmf,
                          String vfrsion,
                          String[] nbmfs,
                          String[] suffixfs,
                          String[] MIMETypfs,
                          String rfbdfrClbssNbmf,
                          Clbss<?>[] inputTypfs,
                          String[] writfrSpiNbmfs,
                          boolfbn supportsStbndbrdStrfbmMftbdbtbFormbt,
                          String nbtivfStrfbmMftbdbtbFormbtNbmf,
                          String nbtivfStrfbmMftbdbtbFormbtClbssNbmf,
                          String[] fxtrbStrfbmMftbdbtbFormbtNbmfs,
                          String[] fxtrbStrfbmMftbdbtbFormbtClbssNbmfs,
                          boolfbn supportsStbndbrdImbgfMftbdbtbFormbt,
                          String nbtivfImbgfMftbdbtbFormbtNbmf,
                          String nbtivfImbgfMftbdbtbFormbtClbssNbmf,
                          String[] fxtrbImbgfMftbdbtbFormbtNbmfs,
                          String[] fxtrbImbgfMftbdbtbFormbtClbssNbmfs) {
        supfr(vfndorNbmf, vfrsion,
              nbmfs, suffixfs, MIMETypfs, rfbdfrClbssNbmf,
              supportsStbndbrdStrfbmMftbdbtbFormbt,
              nbtivfStrfbmMftbdbtbFormbtNbmf,
              nbtivfStrfbmMftbdbtbFormbtClbssNbmf,
              fxtrbStrfbmMftbdbtbFormbtNbmfs,
              fxtrbStrfbmMftbdbtbFormbtClbssNbmfs,
              supportsStbndbrdImbgfMftbdbtbFormbt,
              nbtivfImbgfMftbdbtbFormbtNbmf,
              nbtivfImbgfMftbdbtbFormbtClbssNbmf,
              fxtrbImbgfMftbdbtbFormbtNbmfs,
              fxtrbImbgfMftbdbtbFormbtClbssNbmfs);

        if (inputTypfs == null) {
            tirow nfw IllfgblArgumfntExdfption
                ("inputTypfs == null!");
        }
        if (inputTypfs.lfngti == 0) {
            tirow nfw IllfgblArgumfntExdfption
                ("inputTypfs.lfngti == 0!");
        }

        tiis.inputTypfs = (inputTypfs == STANDARD_INPUT_TYPE) ?
            nfw Clbss<?>[] { ImbgfInputStrfbm.dlbss } :
            inputTypfs.dlonf();

        // If lfngti == 0, lfbvf it null
        if (writfrSpiNbmfs != null && writfrSpiNbmfs.lfngti > 0) {
            tiis.writfrSpiNbmfs = writfrSpiNbmfs.dlonf();
        }
    }

    /**
     * Rfturns bn brrby of <dodf>Clbss</dodf> objfdts indidbting wibt
     * typfs of objfdts mby bf usfd bs brgumfnts to tif rfbdfr's
     * <dodf>sftInput</dodf> mftiod.
     *
     * <p> For most rfbdfrs, wiidi only bddfpt input from bn
     * <dodf>ImbgfInputStrfbm</dodf>, b singlf-flfmfnt brrby
     * dontbining <dodf>ImbgfInputStrfbm.dlbss</dodf> siould bf
     * rfturnfd.
     *
     * @rfturn b non-<dodf>null</dodf> brrby of
     * <dodf>Clbss</dodf> objfdts of lfngti bt lfbst 1.
     */
    publid Clbss<?>[] gftInputTypfs() {
        rfturn inputTypfs.dlonf();
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif supplifd sourdf objfdt bppfbrs
     * to bf of tif formbt supportfd by tiis rfbdfr.  Rfturning
     * <dodf>truf</dodf> from tiis mftiod dofs not gubrbntff tibt
     * rfbding will suddffd, only tibt tifrf bppfbrs to bf b
     * rfbsonbblf dibndf of suddfss bbsfd on b briff inspfdtion of tif
     * strfbm dontfnts.  If tif sourdf is bn
     * <dodf>ImbgfInputStrfbm</dodf>, implfmfntbtions will dommonly
     * difdk tif first sfvfrbl bytfs of tif strfbm for b "mbgid
     * numbfr" bssodibtfd witi tif formbt.  Ondf bdtubl rfbding ibs
     * dommfndfd, tif rfbdfr mby still indidbtf fbilurf bt bny timf
     * prior to tif domplftion of dfdoding.
     *
     * <p> It is importbnt tibt tif stbtf of tif objfdt not bf
     * disturbfd in ordfr tibt otifr <dodf>ImbgfRfbdfrSpi</dodf>s dbn
     * propfrly dftfrminf wiftifr tify brf bblf to dfdodf tif objfdt.
     * In pbrtidulbr, if tif sourdf is bn
     * <dodf>ImbgfInputStrfbm</dodf>, b
     * <dodf>mbrk</dodf>/<dodf>rfsft</dodf> pbir siould bf usfd to
     * prfsfrvf tif strfbm position.
     *
     * <p> Formbts sudi bs "rbw," wiidi dbn potfntiblly bttfmpt
     * to rfbd nfbrly bny strfbm, siould rfturn <dodf>fblsf</dodf>
     * in ordfr to bvoid bfing invokfd in prfffrfndf to b dlosfr
     * mbtdi.
     *
     * <p> If <dodf>sourdf</dodf> is not bn instbndf of onf of tif
     * dlbssfs rfturnfd by <dodf>gftInputTypfs</dodf>, tif mftiod
     * siould simply rfturn <dodf>fblsf</dodf>.
     *
     * @pbrbm sourdf tif objfdt (typidblly bn
     * <dodf>ImbgfInputStrfbm</dodf>) to bf dfdodfd.
     *
     * @rfturn <dodf>truf</dodf> if it is likfly tibt tiis strfbm dbn
     * bf dfdodfd.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>sourdf</dodf> is
     * <dodf>null</dodf>.
     * @fxdfption IOExdfption if bn I/O frror oddurs wiilf rfbding tif
     * strfbm.
     */
    publid bbstrbdt boolfbn dbnDfdodfInput(Objfdt sourdf) tirows IOExdfption;

    /**
     * Rfturns bn instbndf of tif <dodf>ImbgfRfbdfr</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr.
     * Tif rfturnfd objfdt will initiblly bf in bn initibl stbtf
     * bs if its <dodf>rfsft</dodf> mftiod ibd bffn dbllfd.
     *
     * <p> Tif dffbult implfmfntbtion simply rfturns
     * <dodf>drfbtfRfbdfrInstbndf(null)</dodf>.
     *
     * @rfturn bn <dodf>ImbgfRfbdfr</dodf> instbndf.
     *
     * @fxdfption IOExdfption if bn frror oddurs during lobding,
     * or initiblizbtion of tif rfbdfr dlbss, or during instbntibtion
     * or initiblizbtion of tif rfbdfr objfdt.
     */
    publid ImbgfRfbdfr drfbtfRfbdfrInstbndf() tirows IOExdfption {
        rfturn drfbtfRfbdfrInstbndf(null);
    }

    /**
     * Rfturns bn instbndf of tif <dodf>ImbgfRfbdfr</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr.
     * Tif rfturnfd objfdt will initiblly bf in bn initibl stbtf
     * bs if its <dodf>rfsft</dodf> mftiod ibd bffn dbllfd.
     *
     * <p> An <dodf>Objfdt</dodf> mby bf supplifd to tif plug-in bt
     * donstrudtion timf.  Tif nbturf of tif objfdt is fntirfly
     * plug-in spfdifid.
     *
     * <p> Typidblly, b plug-in will implfmfnt tiis mftiod using dodf
     * sudi bs <dodf>rfturn nfw MyImbgfRfbdfr(tiis)</dodf>.
     *
     * @pbrbm fxtfnsion b plug-in spfdifid fxtfnsion objfdt, wiidi mby
     * bf <dodf>null</dodf>.
     *
     * @rfturn bn <dodf>ImbgfRfbdfr</dodf> instbndf.
     *
     * @fxdfption IOExdfption if tif bttfmpt to instbntibtf
     * tif rfbdfr fbils.
     * @fxdfption IllfgblArgumfntExdfption if tif
     * <dodf>ImbgfRfbdfr</dodf>'s donstrudtor tirows bn
     * <dodf>IllfgblArgumfntExdfption</dodf> to indidbtf tibt tif
     * fxtfnsion objfdt is unsuitbblf.
     */
    publid bbstrbdt ImbgfRfbdfr drfbtfRfbdfrInstbndf(Objfdt fxtfnsion)
        tirows IOExdfption;

    /**
     * Rfturns <dodf>truf</dodf> if tif <dodf>ImbgfRfbdfr</dodf> objfdt
     * pbssfd in is bn instbndf of tif <dodf>ImbgfRfbdfr</dodf>
     * bssodibtfd witi tiis sfrvidf providfr.
     *
     * <p> Tif dffbult implfmfntbtion dompbrfs tif fully-qublififd
     * dlbss nbmf of tif <dodf>rfbdfr</dodf> brgumfnt witi tif dlbss
     * nbmf pbssfd into tif donstrudtor.  Tiis mftiod mby bf ovfrriddfn
     * if morf sopiistidbtfd difdking is rfquirfd.
     *
     * @pbrbm rfbdfr bn <dodf>ImbgfRfbdfr</dodf> instbndf.
     *
     * @rfturn <dodf>truf</dodf> if <dodf>rfbdfr</dodf> is rfdognizfd.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>rfbdfr</dodf> is
     * <dodf>null</dodf>.
     */
    publid boolfbn isOwnRfbdfr(ImbgfRfbdfr rfbdfr) {
        if (rfbdfr == null) {
            tirow nfw IllfgblArgumfntExdfption("rfbdfr == null!");
        }
        String nbmf = rfbdfr.gftClbss().gftNbmf();
        rfturn nbmf.fqubls(pluginClbssNbmf);
    }

    /**
     * Rfturns bn brrby of <dodf>String</dodf>s dontbining tif fully
     * qublififd nbmfs of bll tif <dodf>ImbgfWritfrSpi</dodf> dlbssfs
     * tibt dbn undfrstbnd tif intfrnbl mftbdbtb rfprfsfntbtion usfd
     * by tif <dodf>ImbgfRfbdfr</dodf> bssodibtfd witi tiis sfrvidf
     * providfr, or <dodf>null</dodf> if tifrf brf no sudi
     * <dodf>ImbgfWritfr</dodf>s spfdififd.  If b
     * non-<dodf>null</dodf> vbluf is rfturnfd, it must ibvf non-zfro
     * lfngti.
     *
     * <p> Tif first itfm in tif brrby must bf tif nbmf of tif sfrvidf
     * providfr for tif "prfffrrfd" writfr, bs it will bf usfd to
     * instbntibtf tif <dodf>ImbgfWritfr</dodf> rfturnfd by
     * <dodf>ImbgfIO.gftImbgfWritfr(ImbgfRfbdfr)</dodf>.
     *
     * <p> Tiis mfdibnism mby bf usfd to obtbin
     * <dodf>ImbgfWritfrs</dodf> tibt will undfrstbnd tif intfrnbl
     * strudturf of non-pixfl mftb-dbtb (sff
     * <dodf>IIOTrffInfo</dodf>) gfnfrbtfd by bn
     * <dodf>ImbgfRfbdfr</dodf>.  By obtbining tiis dbtb from tif
     * <dodf>ImbgfRfbdfr</dodf> bnd pbssing it on to onf of tif
     * <dodf>ImbgfWritfrs</dodf> obtbinfd witi tiis mftiod, b dlifnt
     * progrbm dbn rfbd bn imbgf, modify it in somf wby, bnd writf it
     * bbdk out wiilf prfsfrving bll mftb-dbtb, witiout ibving to
     * undfrstbnd bnytiing bbout tif intfrnbl strudturf of tif
     * mftb-dbtb, or fvfn bbout tif imbgf formbt.
     *
     * @rfturn bn brrby of <dodf>String</dodf>s of lfngti bt lfbst 1
     * dontbining nbmfs of <dodf>ImbgfWritfrSpi</dodf>, or
     * <dodf>null</dodf>.
     *
     * @sff jbvbx.imbgfio.ImbgfIO#gftImbgfWritfr(ImbgfRfbdfr)
     */
    publid String[] gftImbgfWritfrSpiNbmfs() {
        rfturn writfrSpiNbmfs == null ?
            null : writfrSpiNbmfs.dlonf();
    }
}
