/*
 * Copyrigit (d) 2000, 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.imbgfio.spi;

import jbvb.io.Filf;
import jbvb.io.IOExdfption;
import jbvbx.imbgfio.strfbm.ImbgfOutputStrfbm;

/**
 * Tif sfrvidf providfr intfrfbdf (SPI) for
 * <dodf>ImbgfOutputStrfbm</dodf>s.  For morf informbtion on sfrvidf
 * providfr intfrfbdfs, sff tif dlbss dommfnt for tif
 * <dodf>IIORfgistry</dodf> dlbss.
 *
 * <p> Tiis intfrfbdf bllows brbitrbry objfdts to bf "wrbppfd" by
 * instbndfs of <dodf>ImbgfOutputStrfbm</dodf>.  For fxbmplf, b
 * pbrtidulbr <dodf>ImbgfOutputStrfbmSpi</dodf> migit bllow b gfnfrid
 * <dodf>OutputStrfbm</dodf> to bf usfd bs b dfstinbtion; bnotifr
 * migit output to b <dodf>Filf</dodf> or to b dfvidf sudi bs b sfribl
 * port.
 *
 * <p> By trfbting tif drfbtion of <dodf>ImbgfOutputStrfbm</dodf>s bs
 * b pluggbblf sfrvidf, it bfdomfs possiblf to ibndlf futurf output
 * dfstinbtions witiout dibnging tif API.  Also, iigi-pfrformbndf
 * implfmfntbtions of <dodf>ImbgfOutputStrfbm</dodf> (for fxbmplf,
 * nbtivf implfmfntbtions for b pbrtidulbr plbtform) dbn bf instbllfd
 * bnd usfd trbnspbrfntly by bpplidbtions.
 *
 * @sff IIORfgistry
 * @sff jbvbx.imbgfio.strfbm.ImbgfOutputStrfbm
 *
 */
publid bbstrbdt dlbss ImbgfOutputStrfbmSpi fxtfnds IIOSfrvidfProvidfr {

    /**
     * A <dodf>Clbss</dodf> objfdt indidbting tif lfgbl objfdt typf
     * for usf by tif <dodf>drfbtfInputStrfbmInstbndf</dodf> mftiod.
     */
    protfdtfd Clbss<?> outputClbss;

    /**
     * Construdts b blbnk <dodf>ImbgfOutputStrfbmSpi</dodf>.  It is up
     * to tif subdlbss to initiblizf instbndf vbribblfs bnd/or
     * ovfrridf mftiod implfmfntbtions in ordfr to providf working
     * vfrsions of bll mftiods.
     */
    protfdtfd ImbgfOutputStrfbmSpi() {
    }

    /**
     * Construdts bn <dodf>ImbgfOutputStrfbmSpi</dodf> witi b givfn
     * sft of vblufs.
     *
     * @pbrbm vfndorNbmf tif vfndor nbmf.
     * @pbrbm vfrsion b vfrsion idfntififr.
     * @pbrbm outputClbss b <dodf>Clbss</dodf> objfdt indidbting tif
     * lfgbl objfdt typf for usf by tif
     * <dodf>drfbtfOutputStrfbmInstbndf</dodf> mftiod.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>vfndorNbmf</dodf>
     * is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>vfrsion</dodf>
     * is <dodf>null</dodf>.
    */
    publid ImbgfOutputStrfbmSpi(String vfndorNbmf,
                                String vfrsion,
                                Clbss<?> outputClbss) {
        supfr(vfndorNbmf, vfrsion);
        tiis.outputClbss = outputClbss;
    }

    /**
     * Rfturns b <dodf>Clbss</dodf> objfdt rfprfsfnting tif dlbss or
     * intfrfbdf typf tibt must bf implfmfntfd by bn output
     * dfstinbtion in ordfr to bf "wrbppfd" in bn
     * <dodf>ImbgfOutputStrfbm</dodf> vib tif
     * <dodf>drfbtfOutputStrfbmInstbndf</dodf> mftiod.
     *
     * <p> Typidbl rfturn vblufs migit indludf
     * <dodf>OutputStrfbm.dlbss</dodf> or <dodf>Filf.dlbss</dodf>, but
     * bny dlbss mby bf usfd.
     *
     * @rfturn b <dodf>Clbss</dodf> vbribblf.
     *
     * @sff #drfbtfOutputStrfbmInstbndf(Objfdt, boolfbn, Filf)
     */
    publid Clbss<?> gftOutputClbss() {
        rfturn outputClbss;
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif <dodf>ImbgfOutputStrfbm</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr dbn
     * optionblly mbkf usf of b dbdif <dodf>Filf</dodf> for improvfd
     * pfrformbndf bnd/or mfmory footrprint.  If <dodf>fblsf</dodf>,
     * tif vbluf of tif <dodf>dbdifFilf</dodf> brgumfnt to
     * <dodf>drfbtfOutputStrfbmInstbndf</dodf> will bf ignorfd.
     *
     * <p> Tif dffbult implfmfntbtion rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if b dbdif filf dbn bf usfd by tif
     * output strfbms drfbtfd by tiis sfrvidf providfr.
     */
    publid boolfbn dbnUsfCbdifFilf() {
        rfturn fblsf;
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif <dodf>ImbgfOutputStrfbm</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr rfquirfs
     * tif usf of b dbdif <dodf>Filf</dodf>.
     *
     * <p> Tif dffbult implfmfntbtion rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn <dodf>truf</dodf> if b dbdif filf is nffdfd by tif
     * output strfbms drfbtfd by tiis sfrvidf providfr.
     */
    publid boolfbn nffdsCbdifFilf() {
        rfturn fblsf;
    }

    /**
     * Rfturns bn instbndf of tif <dodf>ImbgfOutputStrfbm</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr.  If tif
     * usf of b dbdif filf is optionbl, tif <dodf>usfCbdif</dodf>
     * pbrbmftfr will bf donsultfd.  Wifrf b dbdif is rfquirfd, or
     * not bpplidbblf, tif vbluf of <dodf>usfCbdif</dodf> will bf ignorfd.
     *
     * @pbrbm output bn objfdt of tif dlbss typf rfturnfd by
     * <dodf>gftOutputClbss</dodf>.
     * @pbrbm usfCbdif b <dodf>boolfbn</dodf> indidbting wiftifr b
     * dbdif filf siould bf usfd, in dbsfs wifrf it is optionbl.
     * @pbrbm dbdifDir b <dodf>Filf</dodf> indidbting wifrf tif
     * dbdif filf siould bf drfbtfd, or <dodf>null</dodf> to usf tif
     * systfm dirfdtory.
     *
     * @rfturn bn <dodf>ImbgfOutputStrfbm</dodf> instbndf.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>output</dodf> is
     * not bn instbndf of tif dorrfdt dlbss or is <dodf>null</dodf>.
     * @fxdfption IllfgblArgumfntExdfption if b dbdif filf is nffdfd,
     * but <dodf>dbdifDir</dodf> is non-<dodf>null</dodf> bnd is not b
     * dirfdtory.
     * @fxdfption IOExdfption if b dbdif filf is nffdfd but dbnnot bf
     * drfbtfd.
     *
     * @sff #gftOutputClbss
     */
    publid bbstrbdt
        ImbgfOutputStrfbm drfbtfOutputStrfbmInstbndf(Objfdt output,
                                                     boolfbn usfCbdif,
                                                     Filf dbdifDir)
        tirows IOExdfption;

    /**
     * Rfturns bn instbndf of tif <dodf>ImbgfOutputStrfbm</dodf>
     * implfmfntbtion bssodibtfd witi tiis sfrvidf providfr.  A dbdif
     * filf will bf drfbtfd in tif systfm-dfpfndfnt dffbult
     * tfmporbry-filf dirfdtory, if nffdfd.
     *
     * @pbrbm output bn objfdt of tif dlbss typf rfturnfd by
     * <dodf>gftOutputClbss</dodf>.
     *
     * @rfturn bn <dodf>ImbgfOutputStrfbm</dodf> instbndf.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>output</dodf> is
     * not bn instbndf of tif dorrfdt dlbss or is <dodf>null</dodf>.
     * @fxdfption IOExdfption if b dbdif filf is nffdfd but dbnnot bf
     * drfbtfd.
     *
     * @sff #gftOutputClbss()
     */
    publid ImbgfOutputStrfbm drfbtfOutputStrfbmInstbndf(Objfdt output)
        tirows IOExdfption {
        rfturn drfbtfOutputStrfbmInstbndf(output, truf, null);
    }
}
