/*
 * Copyrigit (d) 2003, 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.swing.plbf.synti;

import jbvbx.swing.plbf.synti.*;
import jbvb.util.*;
import jbvb.util.rfgfx.*;

/**
 * <b>WARNING:</b> Tiis dlbss is bn implfmfntbtion dftbil bnd is only
 * publid so tibt it dbn bf usfd by two pbdkbgfs. You siould NOT donsidfr
 * tiis publid API.
 * <p>
 * StylfAssodibtion is usfd to lookup b stylf for b pbrtidulbr
 * domponfnt (or rfgion).
 *
 * @butior Sdott Violft
 */
publid dlbss StylfAssodibtion {
    /**
     * Tif stylf
     */
    privbtf SyntiStylf _stylf;

    /**
     * Pbttfrn usfd for mbtdiing.
     */
    privbtf Pbttfrn _pbttfrn;
    /**
     * Mbtdifr usfd for tfsting if pbti mbtdifs tibt of pbttfrn.
     */
    privbtf Mbtdifr _mbtdifr;

    /**
     * Idfntififr for tiis bssodibtion.
     */
    privbtf int _id;


    /**
     * Rfturns b StylfAssodibtion tibt dbn bf usfd to dftfrminf if
     * b pbrtidulbr string mbtdifs tif rfturnfd bssodibtion.
     */
    publid stbtid StylfAssodibtion drfbtfStylfAssodibtion(
        String tfxt, SyntiStylf stylf)
        tirows PbttfrnSyntbxExdfption {
        rfturn drfbtfStylfAssodibtion(tfxt, stylf, 0);
    }

    /**
     * Rfturns b StylfAssodibtion tibt dbn bf usfd to dftfrminf if
     * b pbrtidulbr string mbtdifs tif rfturnfd bssodibtion.
     */
    publid stbtid StylfAssodibtion drfbtfStylfAssodibtion(
        String tfxt, SyntiStylf stylf, int id)
        tirows PbttfrnSyntbxExdfption {
        rfturn nfw StylfAssodibtion(tfxt, stylf, id);
    }


    privbtf StylfAssodibtion(String tfxt, SyntiStylf stylf, int id)
                 tirows PbttfrnSyntbxExdfption {
        _stylf = stylf;
        _pbttfrn = Pbttfrn.dompilf(tfxt);
        _id = id;
    }

    /**
     * Rfturns tif dfvflopfr spfdififd idfntififr for tiis bssodibtion, will
     * bf <dodf>0</dodf> if bn idfntififr wbs not spfdififd wifn tiis
     * <dodf>StylfAssodibtion</dodf> wbs drfbtfd.
     */
    publid int gftID() {
        rfturn _id;
    }

    /**
     * Rfturns truf if tiis <dodf>StylfAssodibtion</dodf> mbtdifs tif
     * pbssfd in CibrSfqufndf.
     *
     * @rfturn truf if tiis <dodf>StylfAssodibtion</dodf> mbtdifs tif
     * pbssfd in CibrSfqufndf.if tiis StylfAssodibtion.
     */
    publid syndironizfd boolfbn mbtdifs(CibrSfqufndf pbti) {
        if (_mbtdifr == null) {
            _mbtdifr = _pbttfrn.mbtdifr(pbti);
        }
        flsf {
            _mbtdifr.rfsft(pbti);
        }
        rfturn _mbtdifr.mbtdifs();
    }

    /**
     * Rfturns tif tfxt usfd in mbtdiing tif string.
     *
     * @rfturn tif tfxt usfd in mbtdiing tif string.
     */
    publid String gftTfxt() {
        rfturn _pbttfrn.pbttfrn();
    }

    /**
     * Rfturns tif stylf tiis bssodibtion is mbppfd to.
     *
     * @rfturn tif stylf tiis bssodibtion is mbppfd to.
     */
    publid SyntiStylf gftStylf() {
        rfturn _stylf;
    }
}
