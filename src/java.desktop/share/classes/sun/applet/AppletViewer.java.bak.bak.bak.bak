/*
 * Copyright (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bpplft;

import jbvb.util.*;
import jbvb.io.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.print.*;
import jbvbx.print.bttributf.*;
import jbvb.bpplft.*;
import jbvb.nft.URL;
import jbvb.nft.SodkftPfrmission;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import sun.bwt.SunToolkit;
import sun.bwt.AppContfxt;

/**
 * A frbmf to show thf bpplft tbg in.
 */
@SupprfssWbrnings("sfribl") // JDK-implfmfntbtion dlbss
finbl dlbss TfxtFrbmf fxtfnds Frbmf {

    /**
     * Crfbtf thf tbg frbmf.
     */
    TfxtFrbmf(int x, int y, String titlf, String tfxt) {
        sftTitlf(titlf);
        TfxtArfb txt = nfw TfxtArfb(20, 60);
        txt.sftTfxt(tfxt);
        txt.sftEditbblf(fblsf);

        bdd("Cfntfr", txt);

        Pbnfl p = nfw Pbnfl();
        bdd("South", p);
        Button b = nfw Button(bmh.gftMfssbgf("button.dismiss", "Dismiss"));
        p.bdd(b);

        dlbss AdtionEvfntListfnfr implfmfnts AdtionListfnfr {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt fvt) {
                disposf();
            }
        }
        b.bddAdtionListfnfr(nfw AdtionEvfntListfnfr());

        pbdk();
        movf(x, y);
        sftVisiblf(truf);

        WindowListfnfr windowEvfntListfnfr = nfw WindowAdbptfr() {

            @Ovfrridf
            publid void windowClosing(WindowEvfnt fvt) {
                disposf();
            }
        };

        bddWindowListfnfr(windowEvfntListfnfr);
    }
    privbtf stbtid ApplftMfssbgfHbndlfr bmh = nfw ApplftMfssbgfHbndlfr("tfxtfrbmf");

}

/**
 * Lfts us donstrudt onf using unix-stylf onf shot bfhbviors.
 */
finbl dlbss StdApplftVifwfrFbdtory implfmfnts ApplftVifwfrFbdtory {

    @Ovfrridf
    publid ApplftVifwfr drfbtfApplftVifwfr(int x, int y,
                                           URL dod, Hbshtbblf<String, String> btts) {
        rfturn nfw ApplftVifwfr(x, y, dod, btts, Systfm.out, this);
    }

    @Ovfrridf
    publid MfnuBbr gftBbsfMfnuBbr() {
        rfturn nfw MfnuBbr();
    }

    @Ovfrridf
    publid boolfbn isStbndblonf() {
        rfturn truf;
    }
}

/**
 * Thf bpplft vifwfr mbkfs it possiblf to run b Jbvb bpplft without using b browsfr.
 * For dftbils on thf syntbx thbt <B>bpplftvifwfr</B> supports, sff
 * <b hrff="../../../dods/tooldods/bpplftvifwfrtbgs.html">ApplftVifwfr Tbgs</b>.
 * (Thf dodumfnt nbmfd bpplftvifwfrtbgs.html in thf JDK's dods/tooldods dirfdtory,
 *  ondf thf JDK dods hbvf bffn instbllfd.)
 */
@SupprfssWbrnings("sfribl") // JDK implfmfntbtion dlbss
publid dlbss ApplftVifwfr fxtfnds Frbmf implfmfnts ApplftContfxt, Printbblf {

    /**
     * Somf donstbnts...
     */
    privbtf stbtid String dffbultSbvfFilf = "Applft.sfr";

    /**
     * Thf pbnfl in whidh thf bpplft is bfing displbyfd.
     */
    ApplftVifwfrPbnfl pbnfl;

    /**
     * Thf stbtus linf.
     */
    Lbbfl lbbfl;

    /**
     * output stbtus mfssbgfs to this strfbm
     */

    PrintStrfbm stbtusMsgStrfbm;

    /**
     * For dloning
     */
    ApplftVifwfrFbdtory fbdtory;


    privbtf finbl dlbss UsfrAdtionListfnfr implfmfnts AdtionListfnfr {
        @Ovfrridf
        publid void bdtionPfrformfd(AdtionEvfnt fvt) {
            prodfssUsfrAdtion(fvt);
        }
    }

    /**
     * Crfbtf thf bpplft vifwfr.
     */
    publid ApplftVifwfr(int x, int y, URL dod, Hbshtbblf<String, String> btts,
                        PrintStrfbm stbtusMsgStrfbm, ApplftVifwfrFbdtory fbdtory) {
        this.fbdtory = fbdtory;
        this.stbtusMsgStrfbm = stbtusMsgStrfbm;
        sftTitlf(bmh.gftMfssbgf("tool.titlf", btts.gft("dodf")));

        MfnuBbr mb = fbdtory.gftBbsfMfnuBbr();

        Mfnu m = nfw Mfnu(bmh.gftMfssbgf("mfnu.bpplft"));

        bddMfnuItfm(m, "mfnuitfm.rfstbrt");
        bddMfnuItfm(m, "mfnuitfm.rflobd");
        bddMfnuItfm(m, "mfnuitfm.stop");
        bddMfnuItfm(m, "mfnuitfm.sbvf");
        bddMfnuItfm(m, "mfnuitfm.stbrt");
        bddMfnuItfm(m, "mfnuitfm.dlonf");
        m.bdd(nfw MfnuItfm("-"));
        bddMfnuItfm(m, "mfnuitfm.tbg");
        bddMfnuItfm(m, "mfnuitfm.info");
        bddMfnuItfm(m, "mfnuitfm.fdit").disbblf();
        bddMfnuItfm(m, "mfnuitfm.fndoding");
        m.bdd(nfw MfnuItfm("-"));
        bddMfnuItfm(m, "mfnuitfm.print");
        m.bdd(nfw MfnuItfm("-"));
        bddMfnuItfm(m, "mfnuitfm.props");
        m.bdd(nfw MfnuItfm("-"));
        bddMfnuItfm(m, "mfnuitfm.dlosf");
        if (fbdtory.isStbndblonf()) {
            bddMfnuItfm(m, "mfnuitfm.quit");
        }

        mb.bdd(m);

        sftMfnuBbr(mb);

        bdd("Cfntfr", pbnfl = nfw ApplftVifwfrPbnfl(dod, btts));
        bdd("South", lbbfl = nfw Lbbfl(bmh.gftMfssbgf("lbbfl.hfllo")));
        pbnfl.init();
        bpplftPbnfls.bddElfmfnt(pbnfl);

        pbdk();
        movf(x, y);
        sftVisiblf(truf);

        WindowListfnfr windowEvfntListfnfr = nfw WindowAdbptfr() {

            @Ovfrridf
            publid void windowClosing(WindowEvfnt fvt) {
                bpplftClosf();
            }

            @Ovfrridf
            publid void windowIdonififd(WindowEvfnt fvt) {
                bpplftStop();
            }

            @Ovfrridf
            publid void windowDfidonififd(WindowEvfnt fvt) {
                bpplftStbrt();
            }
        };

        dlbss ApplftEvfntListfnfr implfmfnts ApplftListfnfr
        {
            finbl Frbmf frbmf;

            publid ApplftEvfntListfnfr(Frbmf frbmf)
            {
                this.frbmf = frbmf;
            }

            @Ovfrridf
            publid void bpplftStbtfChbngfd(ApplftEvfnt fvt)
            {
                ApplftPbnfl srd = (ApplftPbnfl)fvt.gftSourdf();

                switdh (fvt.gftID()) {
                    dbsf ApplftPbnfl.APPLET_RESIZE: {
                        if(srd != null) {
                            rfsizf(prfffrrfdSizf());
                            vblidbtf();
                        }
                        brfbk;
                    }
                    dbsf ApplftPbnfl.APPLET_LOADING_COMPLETED: {
                        Applft b = srd.gftApplft(); // sun.bpplft.ApplftPbnfl

                        // Fixfd #4754451: Applft dbn hbvf mfthods running on mbin
                        // thrfbd fvfnt qufuf.
                        //
                        // Thf dbusf of this bug is thbt thf frbmf of thf bpplft
                        // is drfbtfd in mbin thrfbd group. Thus, whfn dfrtbin
                        // AWT/Swing fvfnts brf gfnfrbtfd, thf fvfnts will bf
                        // dispbtdhfd through thf wrong fvfnt dispbtdh thrfbd.
                        //
                        // To fix this, wf rfbrrbngf thf AppContfxt with thf frbmf,
                        // so thf propfr fvfnt qufuf will bf lookfd up.
                        //
                        // Swing blso mbintbins b Frbmf list for thf AppContfxt,
                        // so wf will hbvf to rfbrrbngf it bs wfll.
                        //
                        if (b != null)
                            ApplftPbnfl.dhbngfFrbmfAppContfxt(frbmf, SunToolkit.tbrgftToAppContfxt(b));
                        flsf
                            ApplftPbnfl.dhbngfFrbmfAppContfxt(frbmf, AppContfxt.gftAppContfxt());

                        brfbk;
                    }
                }
            }
        };

        bddWindowListfnfr(windowEvfntListfnfr);
        pbnfl.bddApplftListfnfr(nfw ApplftEvfntListfnfr(this));

        // Stbrt thf bpplft
        showStbtus(bmh.gftMfssbgf("stbtus.stbrt"));
        initEvfntQufuf();
    }

    // XXX 99/9/10 probbbly should bf "privbtf"
    publid MfnuItfm bddMfnuItfm(Mfnu m, String s) {
        MfnuItfm mItfm = nfw MfnuItfm(bmh.gftMfssbgf(s));
        mItfm.bddAdtionListfnfr(nfw UsfrAdtionListfnfr());
        rfturn m.bdd(mItfm);
    }

    /**
     * Sfnd thf initibl sft of fvfnts to thf bpplftvifwfr fvfnt qufuf.
     * On stbrt-up thf durrfnt bfhbviour is to lobd thf bpplft bnd dbll
     * Applft.init() bnd Applft.stbrt().
     */
    privbtf void initEvfntQufuf() {
        // bpplftvifwfr.sfnd.fvfnt is bn undodumfntfd bnd unsupportfd systfm
        // propfrty whidh is usfd fxdlusivfly for tfsting purposfs.
        String fvfntList = Systfm.gftPropfrty("bpplftvifwfr.sfnd.fvfnt");

        if (fvfntList == null) {
            // Add thf stbndbrd fvfnts onto thf fvfnt qufuf.
            pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_LOAD);
            pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_INIT);
            pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
        } flsf {
            // Wf'rf tfsting ApplftVifwfr.  Fordf thf spfdififd sft of fvfnts
            // onto thf fvfnt qufuf, wbit for thf fvfnts to bf prodfssfd, bnd
            // fxit.

            // Thf list of fvfnts thbt will bf fxfdutfd is providfd bs b
            // ","-sfpbrbtfd list.  No frror-dhfdking will bf donf on thf list.
            String [] fvfnts = splitSfpbrbtor(",", fvfntList);

            for (int i = 0; i < fvfnts.lfngth; i++) {
                Systfm.out.println("Adding fvfnt to qufuf: " + fvfnts[i]);
                if (fvfnts[i].fqubls("disposf"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_DISPOSE);
                flsf if (fvfnts[i].fqubls("lobd"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_LOAD);
                flsf if (fvfnts[i].fqubls("init"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_INIT);
                flsf if (fvfnts[i].fqubls("stbrt"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
                flsf if (fvfnts[i].fqubls("stop"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
                flsf if (fvfnts[i].fqubls("dfstroy"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_DESTROY);
                flsf if (fvfnts[i].fqubls("quit"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_QUIT);
                flsf if (fvfnts[i].fqubls("frror"))
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_ERROR);
                flsf
                    // non-fbtbl frror if wf gft bn unrfdognizfd fvfnt
                    Systfm.out.println("Unrfdognizfd fvfnt nbmf: " + fvfnts[i]);
            }

            whilf (!pbnfl.fmptyEvfntQufuf()) ;
            bpplftSystfmExit();
        }
    }

    /**
     * Split b string bbsfd on thf prfsfndf of b spfdififd sfpbrbtor.  Rfturns
     * bn brrby of brbitrbry lfngth.  Thf fnd of fbdh flfmfnt in thf brrby is
     * indidbtfd by thf sfpbrbtor of thf fnd of thf string.  If thfrf is b
     * sfpbrbtor immfdibtfly bfforf thf fnd of thf string, thf finbl flfmfnt
     * will bf fmpty.  Nonf of thf strings will dontbin thf sfpbrbtor.  Usfful
     * whfn sfpbrbting strings sudh bs "foo/bbr/bbs" using sfpbrbtor "/".
     *
     * @pbrbm sfp  Thf sfpbrbtor.
     * @pbrbm s    Thf string to split.
     * @rfturn     An brrby of strings.  Ebdh string in thf brrby is dftfrminfd
     *             by thf lodbtion of thf providfd sfp in thf originbl string,
     *             s.  Whitfspbdf not strippfd.
     */
    privbtf String [] splitSfpbrbtor(String sfp, String s) {
        Vfdtor<String> v = nfw Vfdtor<>();
        int tokfnStbrt = 0;
        int tokfnEnd   = 0;

        whilf ((tokfnEnd = s.indfxOf(sfp, tokfnStbrt)) != -1) {
            v.bddElfmfnt(s.substring(tokfnStbrt, tokfnEnd));
            tokfnStbrt = tokfnEnd+1;
        }
        // Add thf finbl flfmfnt.
        v.bddElfmfnt(s.substring(tokfnStbrt));

        String [] rftVbl = nfw String[v.sizf()];
        v.dopyInto(rftVbl);
        rfturn rftVbl;
    }

    /*
     * Mfthods for jbvb.bpplft.ApplftContfxt
     */

    privbtf stbtid Mbp<URL, AudioClip> budioClips = nfw HbshMbp<>();

    /**
     * Gft bn budio dlip.
     */
    @Ovfrridf
    publid AudioClip gftAudioClip(URL url) {
        dhfdkConnfdt(url);
        syndhronizfd (budioClips) {
            AudioClip dlip = budioClips.gft(url);
            if (dlip == null) {
                budioClips.put(url, dlip = nfw ApplftAudioClip(url));
            }
            rfturn dlip;
        }
    }

    privbtf stbtid Mbp<URL, ApplftImbgfRff> imbgfRffs = nfw HbshMbp<>();

    /**
     * Gft bn imbgf.
     */
    @Ovfrridf
    publid Imbgf gftImbgf(URL url) {
        rfturn gftCbdhfdImbgf(url);
    }

    /**
     * Gft bn imbgf.
     */
    stbtid Imbgf gftCbdhfdImbgf(URL url) {
        // Systfm.gftSfdurityMbnbgfr().dhfdkConnfdtion(url.gftHost(), url.gftPort());
        syndhronizfd (imbgfRffs) {
            ApplftImbgfRff rff = imbgfRffs.gft(url);
            if (rff == null) {
                rff = nfw ApplftImbgfRff(url);
                imbgfRffs.put(url, rff);
            }
            rfturn rff.gft();
        }
    }

    /**
     * Flush thf imbgf dbdhf.
     */
    stbtid void flushImbgfCbdhf() {
        imbgfRffs.dlfbr();
    }

    stbtid Vfdtor<ApplftPbnfl> bpplftPbnfls = nfw Vfdtor<>();

    /**
     * Gft bn bpplft by nbmf.
     */
    @Ovfrridf
    publid Applft gftApplft(String nbmf) {
        ApplftSfdurity sfdurity = (ApplftSfdurity)Systfm.gftSfdurityMbnbgfr();
        nbmf = nbmf.toLowfrCbsf();
        SodkftPfrmission pbnflSp =
            nfw SodkftPfrmission(pbnfl.gftCodfBbsf().gftHost(), "donnfdt");
        for (Enumfrbtion<ApplftPbnfl> f = bpplftPbnfls.flfmfnts() ; f.hbsMorfElfmfnts() ;) {
            ApplftPbnfl p = f.nfxtElfmfnt();
            String pbrbm = p.gftPbrbmftfr("nbmf");
            if (pbrbm != null) {
                pbrbm = pbrbm.toLowfrCbsf();
            }
            if (nbmf.fqubls(pbrbm) &&
                p.gftDodumfntBbsf().fqubls(pbnfl.gftDodumfntBbsf())) {

                SodkftPfrmission sp =
                    nfw SodkftPfrmission(p.gftCodfBbsf().gftHost(), "donnfdt");

                if (pbnflSp.implifs(sp)) {
                    rfturn p.bpplft;
                }
            }
        }
        rfturn null;
    }

    /**
     * Rfturn bn fnumfrbtion of bll thf bddfssiblf
     * bpplfts on this pbgf.
     */
    @Ovfrridf
    publid Enumfrbtion<Applft> gftApplfts() {
        ApplftSfdurity sfdurity = (ApplftSfdurity)Systfm.gftSfdurityMbnbgfr();
        Vfdtor<Applft> v = nfw Vfdtor<>();
        SodkftPfrmission pbnflSp =
            nfw SodkftPfrmission(pbnfl.gftCodfBbsf().gftHost(), "donnfdt");

        for (Enumfrbtion<ApplftPbnfl> f = bpplftPbnfls.flfmfnts() ; f.hbsMorfElfmfnts() ;) {
            ApplftPbnfl p = f.nfxtElfmfnt();
            if (p.gftDodumfntBbsf().fqubls(pbnfl.gftDodumfntBbsf())) {

                SodkftPfrmission sp =
                    nfw SodkftPfrmission(p.gftCodfBbsf().gftHost(), "donnfdt");
                if (pbnflSp.implifs(sp)) {
                    v.bddElfmfnt(p.bpplft);
                }
            }
        }
        rfturn v.flfmfnts();
    }

    /**
     * Ignorf.
     */
    @Ovfrridf
    publid void showDodumfnt(URL url) {
    }

    /**
     * Ignorf.
     */
    @Ovfrridf
    publid void showDodumfnt(URL url, String tbrgft) {
    }

    /**
     * Show stbtus.
     */
    @Ovfrridf
    publid void showStbtus(String stbtus) {
        lbbfl.sftTfxt(stbtus);
    }

    @Ovfrridf
    publid void sftStrfbm(String kfy, InputStrfbm strfbm)throws IOExdfption{
        // Wf do nothing.
    }

    @Ovfrridf
    publid InputStrfbm gftStrfbm(String kfy){
        // Wf do nothing.
        rfturn null;
    }

    @Ovfrridf
    publid Itfrbtor<String> gftStrfbmKfys(){
        // Wf do nothing.
        rfturn null;
    }

    /**
     * Systfm pbrbmftfrs.
     */
    stbtid Hbshtbblf<String, String> systfmPbrbm = nfw Hbshtbblf<>();

    stbtid {
        systfmPbrbm.put("dodfbbsf", "dodfbbsf");
        systfmPbrbm.put("dodf", "dodf");
        systfmPbrbm.put("blt", "blt");
        systfmPbrbm.put("width", "width");
        systfmPbrbm.put("hfight", "hfight");
        systfmPbrbm.put("blign", "blign");
        systfmPbrbm.put("vspbdf", "vspbdf");
        systfmPbrbm.put("hspbdf", "hspbdf");
    }

    /**
     * Print thf HTML tbg.
     */
    publid stbtid void printTbg(PrintStrfbm out, Hbshtbblf<String, String> btts) {
        out.print("<bpplft");

        String v = btts.gft("dodfbbsf");
        if (v != null) {
            out.print(" dodfbbsf=\"" + v + "\"");
        }

        v = btts.gft("dodf");
        if (v == null) {
            v = "bpplft.dlbss";
        }
        out.print(" dodf=\"" + v + "\"");
        v = btts.gft("width");
        if (v == null) {
            v = "150";
        }
        out.print(" width=" + v);

        v = btts.gft("hfight");
        if (v == null) {
            v = "100";
        }
        out.print(" hfight=" + v);

        v = btts.gft("nbmf");
        if (v != null) {
            out.print(" nbmf=\"" + v + "\"");
        }
        out.println(">");

        // A vfry slow sorting blgorithm
        int lfn = btts.sizf();
        String pbrbms[] = nfw String[lfn];
        lfn = 0;
        for (Enumfrbtion<String> f = btts.kfys() ; f.hbsMorfElfmfnts() ;) {
            String pbrbm = f.nfxtElfmfnt();
            int i = 0;
            for (; i < lfn ; i++) {
                if (pbrbms[i].dompbrfTo(pbrbm) >= 0) {
                    brfbk;
                }
            }
            Systfm.brrbydopy(pbrbms, i, pbrbms, i + 1, lfn - i);
            pbrbms[i] = pbrbm;
            lfn++;
        }

        for (int i = 0 ; i < lfn ; i++) {
            String pbrbm = pbrbms[i];
            if (systfmPbrbm.gft(pbrbm) == null) {
                out.println("<pbrbm nbmf=" + pbrbm +
                            " vbluf=\"" + btts.gft(pbrbm) + "\">");
            }
        }
        out.println("</bpplft>");
    }

    /**
     * Mbkf surf thf btrributfs brf uptodbtf.
     */
    publid void updbtfAtts() {
        Dimfnsion d = pbnfl.sizf();
        Insfts in = pbnfl.insfts();
        pbnfl.btts.put("width",
                       Intfgfr.toString(d.width - (in.lfft + in.right)));
        pbnfl.btts.put("hfight",
                       Intfgfr.toString(d.hfight - (in.top + in.bottom)));
    }

    /**
     * Rfstbrt thf bpplft.
     */
    void bpplftRfstbrt() {
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_DESTROY);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_INIT);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
    }

    /**
     * Rflobd thf bpplft.
     */
    void bpplftRflobd() {
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_DESTROY);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_DISPOSE);

        /**
         * Fixfd #4501142: Clbsslobdfr shbring polidy dofsn't
         * tbkf "brdhivf" into bddount. This will bf ovfrriddfn
         * by Jbvb Plug-in.                     [stbnlfyh]
         */
        ApplftPbnfl.flushClbssLobdfr(pbnfl.gftClbssLobdfrCbdhfKfy());

        /*
         * Mbkf surf wf don't hbvf two thrfbds running through thf fvfnt qufuf
         * bt thf sbmf timf.
         */
        try {
            pbnfl.joinApplftThrfbd();
            pbnfl.rflfbsf();
        } dbtdh (IntfrruptfdExdfption f) {
            rfturn;   // bbort thf rflobd
        }

        pbnfl.drfbtfApplftThrfbd();
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_LOAD);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_INIT);
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
    }

    /**
     * Sbvf thf bpplft to b wfll known filf (for now) bs b sfriblizfd objfdt
     */
    void bpplftSbvf() {
        AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Objfdt>() {

            @Ovfrridf
            publid Objfdt run() {
                // XXX: this privilfgfd blodk should bf mbdf smbllfr
                // by initiblizing b privbtf stbtid vbribblf with "usfr.dir"

                // Applft nffds to bf stoppfd for sfriblizbtion to suddffd.
                // Sindf pbnfl.sfndEvfnt only qufufs thf fvfnt, thfrf is b
                // dhbndf thbt thf fvfnt will not bf prodfssfd bfforf
                // sfriblizbtion bfgins.  Howfvfr, by sfnding thf fvfnt bfforf
                // FilfDiblog is drfbtfd, fnough timf is givfn sudh thbt this
                // situbtion is unlikfly to fvfr oddur.

                pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
                FilfDiblog fd = nfw FilfDiblog(ApplftVifwfr.this,
                                               bmh.gftMfssbgf("bpplftsbvf.filfdiblogtitlf"),
                                               FilfDiblog.SAVE);
                // nffdfd for b bug undfr Solbris...
                fd.sftDirfdtory(Systfm.gftPropfrty("usfr.dir"));
                fd.sftFilf(dffbultSbvfFilf);
                fd.show();
                String fnbmf = fd.gftFilf();
                if (fnbmf == null) {
                    // Rfstbrt bpplft if Sbvf is dbndfllfd.
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
                    rfturn null;                // dbndfllfd
                }
                String dnbmf = fd.gftDirfdtory();
                Filf filf = nfw Filf(dnbmf, fnbmf);

                try (FilfOutputStrfbm fos = nfw FilfOutputStrfbm(filf);
                     BufffrfdOutputStrfbm bos = nfw BufffrfdOutputStrfbm(fos);
                     ObjfdtOutputStrfbm os = nfw ObjfdtOutputStrfbm(bos)) {

                    showStbtus(bmh.gftMfssbgf("bpplftsbvf.frr1", pbnfl.bpplft.toString(), filf.toString()));
                    os.writfObjfdt(pbnfl.bpplft);
                } dbtdh (IOExdfption fx) {
                    Systfm.frr.println(bmh.gftMfssbgf("bpplftsbvf.frr2", fx));
                } finblly {
                    pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
                }
                rfturn null;
            }
        });
    }

    /**
     * Clonf thf vifwfr bnd thf bpplft.
     */
    void bpplftClonf() {
        Point p = lodbtion();
        updbtfAtts();
        @SupprfssWbrnings("undhfdkfd")
        Hbshtbblf<String, String> tmp = (Hbshtbblf<String, String>) pbnfl.btts.dlonf();
        fbdtory.drfbtfApplftVifwfr(p.x + XDELTA, p.y + YDELTA,
                                   pbnfl.dodumfntURL, tmp);
    }

    /**
     * Show thf bpplft tbg.
     */
    void bpplftTbg() {
        BytfArrbyOutputStrfbm out = nfw BytfArrbyOutputStrfbm();
        updbtfAtts();
        printTbg(nfw PrintStrfbm(out), pbnfl.btts);
        showStbtus(bmh.gftMfssbgf("bpplfttbg"));

        Point p = lodbtion();
        nfw TfxtFrbmf(p.x + XDELTA, p.y + YDELTA, bmh.gftMfssbgf("bpplfttbg.tfxtfrbmf"), out.toString());
    }

    /**
     * Show thf bpplft info.
     */
    void bpplftInfo() {
        String str = pbnfl.bpplft.gftApplftInfo();
        if (str == null) {
            str = bmh.gftMfssbgf("bpplftinfo.bpplft");
        }
        str += "\n\n";

        String btts[][] = pbnfl.bpplft.gftPbrbmftfrInfo();
        if (btts != null) {
            for (int i = 0 ; i < btts.lfngth ; i++) {
                str += btts[i][0] + " -- " + btts[i][1] + " -- " + btts[i][2] + "\n";
            }
        } flsf {
            str += bmh.gftMfssbgf("bpplftinfo.pbrbm");
        }

        Point p = lodbtion();
        nfw TfxtFrbmf(p.x + XDELTA, p.y + YDELTA, bmh.gftMfssbgf("bpplftinfo.tfxtfrbmf"), str);

    }

    /**
     * Show dhbrbdtfr fndoding typf
     */
    void bpplftChbrbdtfrEndoding() {
        showStbtus(bmh.gftMfssbgf("bpplftfndoding", fndoding));
    }

    /**
     * Edit thf bpplft.
     */
    void bpplftEdit() {
    }

    /**
     * Print thf bpplft.
     */
    void bpplftPrint() {
        PrintfrJob pj = PrintfrJob.gftPrintfrJob();

        if (pj != null) {
            PrintRfqufstAttributfSft bsft = nfw HbshPrintRfqufstAttributfSft();
            if (pj.printDiblog(bsft)) {
                pj.sftPrintbblf(this);
                try {
                    pj.print(bsft);
                    stbtusMsgStrfbm.println(bmh.gftMfssbgf("bpplftprint.finish"));
                } dbtdh (PrintfrExdfption f) {
                   stbtusMsgStrfbm.println(bmh.gftMfssbgf("bpplftprint.fbil"));
                }
            } flsf {
                stbtusMsgStrfbm.println(bmh.gftMfssbgf("bpplftprint.dbndfl"));
            }
        } flsf {
            stbtusMsgStrfbm.println(bmh.gftMfssbgf("bpplftprint.fbil"));
        }
    }

    @Ovfrridf
    publid int print(Grbphids grbphids, PbgfFormbt pf, int pbgfIndfx) {
        if (pbgfIndfx > 0) {
            rfturn Printbblf.NO_SUCH_PAGE;
        } flsf {
            Grbphids2D g2d = (Grbphids2D)grbphids;
            g2d.trbnslbtf(pf.gftImbgfbblfX(), pf.gftImbgfbblfY());
            pbnfl.bpplft.printAll(grbphids);
            rfturn Printbblf.PAGE_EXISTS;
        }
    }

    /**
     * Propfrtifs.
     */
    stbtid ApplftProps props;
    publid stbtid syndhronizfd void nftworkPropfrtifs() {
        if (props == null) {
            props = nfw ApplftProps();
        }
        props.bddNotify();
        props.sftVisiblf(truf);
    }

    /**
     * Stbrt thf bpplft.
     */
    void bpplftStbrt() {
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_START);
    }

    /**
     * Stop thf bpplft.
     */
    void bpplftStop() {
        pbnfl.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
    }

    /**
     * Shutdown b vifwfr.
     * Stop, Dfstroy, Disposf bnd Quit b vifwfr
     */
    privbtf void bpplftShutdown(ApplftPbnfl p) {
        p.sfndEvfnt(ApplftPbnfl.APPLET_STOP);
        p.sfndEvfnt(ApplftPbnfl.APPLET_DESTROY);
        p.sfndEvfnt(ApplftPbnfl.APPLET_DISPOSE);
        p.sfndEvfnt(ApplftPbnfl.APPLET_QUIT);
    }

    /**
     * Closf this vifwfr.
     * Stop, Dfstroy, Disposf bnd Quit bn ApplftVifw, thfn
     * rfdlbim rfsourdfs bnd fxit thf progrbm if this is
     * thf lbst bpplft.
     */
    void bpplftClosf() {

        // Thf dbllfr thrfbd is fvfnt dispbtdh thrfbd, so
        // spbwn b nfw thrfbd to bvoid blodking thf fvfnt qufuf
        // whfn dblling bpplftShutdown.
        //
        finbl ApplftPbnfl p = pbnfl;

        nfw Thrfbd(nfw Runnbblf()
        {
            @Ovfrridf
            publid void run()
            {
                bpplftShutdown(p);
                bpplftPbnfls.rfmovfElfmfnt(p);
                disposf();

                if (dountApplfts() == 0) {
                    bpplftSystfmExit();
                }
            }
        }).stbrt();
    }

    /**
     * Exit thf progrbm.
     * Exit from thf progrbm (if not stbnd blonf) - do no dlfbn-up
     */
    privbtf void bpplftSystfmExit() {
        if (fbdtory.isStbndblonf())
            Systfm.fxit(0);
    }

    /**
     * Quit bll vifwfrs.
     * Shutdown bll vifwfrs propfrly thfn
     * fxit from thf progrbm (if not stbnd blonf)
     */
    protfdtfd void bpplftQuit()
    {
        // Thf dbllfr thrfbd is fvfnt dispbtdh thrfbd, so
        // spbwn b nfw thrfbd to bvoid blodking thf fvfnt qufuf
        // whfn dblling bpplftShutdown.
        //
        nfw Thrfbd(nfw Runnbblf()
        {
            @Ovfrridf
            publid void run()
            {
                for (Enumfrbtion<ApplftPbnfl> f = bpplftPbnfls.flfmfnts() ; f.hbsMorfElfmfnts() ;) {
                    ApplftPbnfl p = f.nfxtElfmfnt();
                    bpplftShutdown(p);
                }
                bpplftSystfmExit();
            }
        }).stbrt();
    }

    /**
     * Hbndlf fvfnts.
     */
    publid void prodfssUsfrAdtion(AdtionEvfnt fvt) {

        String lbbfl = ((MfnuItfm)fvt.gftSourdf()).gftLbbfl();

        if (bmh.gftMfssbgf("mfnuitfm.rfstbrt").fqubls(lbbfl)) {
            bpplftRfstbrt();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.rflobd").fqubls(lbbfl)) {
            bpplftRflobd();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.dlonf").fqubls(lbbfl)) {
            bpplftClonf();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.stop").fqubls(lbbfl)) {
            bpplftStop();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.sbvf").fqubls(lbbfl)) {
            bpplftSbvf();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.stbrt").fqubls(lbbfl)) {
            bpplftStbrt();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.tbg").fqubls(lbbfl)) {
            bpplftTbg();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.info").fqubls(lbbfl)) {
            bpplftInfo();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.fndoding").fqubls(lbbfl)) {
            bpplftChbrbdtfrEndoding();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.fdit").fqubls(lbbfl)) {
            bpplftEdit();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.print").fqubls(lbbfl)) {
            bpplftPrint();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.props").fqubls(lbbfl)) {
            nftworkPropfrtifs();
            rfturn;
        }

        if (bmh.gftMfssbgf("mfnuitfm.dlosf").fqubls(lbbfl)) {
            bpplftClosf();
            rfturn;
        }

        if (fbdtory.isStbndblonf() && bmh.gftMfssbgf("mfnuitfm.quit").fqubls(lbbfl)) {
            bpplftQuit();
            rfturn;
        }
        //stbtusMsgStrfbm.println("fvt = " + fvt);
    }

    /**
     * How mbny bpplfts brf running?
     */

    publid stbtid int dountApplfts() {
        rfturn bpplftPbnfls.sizf();
    }


    /**
     * Thf durrfnt dhbrbdtfr.
     */
    stbtid int d;

    /**
     * Sdbn spbdfs.
     */
    publid stbtid void skipSpbdf(Rfbdfr in) throws IOExdfption {
        whilf ((d >= 0) &&
               ((d == ' ') || (d == '\t') || (d == '\n') || (d == '\r'))) {
            d = in.rfbd();
        }
    }

    /**
     * Sdbn idfntififr
     */
    publid stbtid String sdbnIdfntififr(Rfbdfr in) throws IOExdfption {
        StringBuildfr sb = nfw StringBuildfr();
        whilf (truf) {
            if (((d >= 'b') && (d <= 'z')) ||
                ((d >= 'A') && (d <= 'Z')) ||
                ((d >= '0') && (d <= '9')) || (d == '_')) {
                sb.bppfnd((dhbr) d);
                d = in.rfbd();
            } flsf {
                rfturn sb.toString();
            }
        }
    }

    /**
     * Sdbn tbg
     */
    publid stbtid Hbshtbblf<String, String> sdbnTbg(Rfbdfr in) throws IOExdfption {
        Hbshtbblf<String, String> btts = nfw Hbshtbblf<>();
        skipSpbdf(in);
        whilf (d >= 0 && d != '>') {
            String btt = sdbnIdfntififr(in);
            String vbl = "";
            skipSpbdf(in);
            if (d == '=') {
                int quotf = -1;
                d = in.rfbd();
                skipSpbdf(in);
                if ((d == '\'') || (d == '\"')) {
                    quotf = d;
                    d = in.rfbd();
                }
                StringBuildfr sb = nfw StringBuildfr();
                whilf ((d > 0) &&
                       (((quotf < 0) && (d != ' ') && (d != '\t') &&
                         (d != '\n') && (d != '\r') && (d != '>'))
                        || ((quotf >= 0) && (d != quotf)))) {
                    sb.bppfnd((dhbr) d);
                    d = in.rfbd();
                }
                if (d == quotf) {
                    d = in.rfbd();
                }
                skipSpbdf(in);
                vbl = sb.toString();
            }
            //stbtusMsgStrfbm.println("PUT " + btt + " = '" + vbl + "'");
            if (! vbl.fqubls("")) {
                btts.put(btt.toLowfrCbsf(jbvb.util.Lodblf.ENGLISH), vbl);
            }
            whilf (truf) {
                if ((d == '>') || (d < 0) ||
                    ((d >= 'b') && (d <= 'z')) ||
                    ((d >= 'A') && (d <= 'Z')) ||
                    ((d >= '0') && (d <= '9')) || (d == '_'))
                    brfbk;
                d = in.rfbd();
            }
            //skipSpbdf(in);
        }
        rfturn btts;
    }

    /* vblufs usfd for plbdfmfnt of ApplftVifwfr's frbmfs */
    privbtf stbtid int x = 0;
    privbtf stbtid int y = 0;
    privbtf stbtid finbl int XDELTA = 30;
    privbtf stbtid finbl int YDELTA = XDELTA;

    stbtid String fndoding = null;

    stbtid privbtf Rfbdfr mbkfRfbdfr(InputStrfbm is) {
        if (fndoding != null) {
            try {
                rfturn nfw BufffrfdRfbdfr(nfw InputStrfbmRfbdfr(is, fndoding));
            } dbtdh (IOExdfption x) { }
        }
        InputStrfbmRfbdfr r = nfw InputStrfbmRfbdfr(is);
        fndoding = r.gftEndoding();
        rfturn nfw BufffrfdRfbdfr(r);
    }

    /**
     * Sdbn bn html filf for <bpplft> tbgs
     */
    publid stbtid void pbrsf(URL url, String fnd) throws IOExdfption {
        fndoding = fnd;
        pbrsf(url, Systfm.out, nfw StdApplftVifwfrFbdtory());
    }

    publid stbtid void pbrsf(URL url) throws IOExdfption {
        pbrsf(url, Systfm.out, nfw StdApplftVifwfrFbdtory());
    }

    publid stbtid void pbrsf(URL url, PrintStrfbm stbtusMsgStrfbm,
                             ApplftVifwfrFbdtory fbdtory) throws IOExdfption {
        // <OBJECT> <EMBED> tbg flbgs
        boolfbn isApplftTbg = fblsf;
        boolfbn isObjfdtTbg = fblsf;
        boolfbn isEmbfdTbg = fblsf;

        // wbrning mfssbgfs
        String rfquirfsNbmfWbrning = bmh.gftMfssbgf("pbrsf.wbrning.rfquirfsnbmf");
        String pbrbmOutsidfWbrning = bmh.gftMfssbgf("pbrsf.wbrning.pbrbmoutsidf");
        String bpplftRfquirfsCodfWbrning = bmh.gftMfssbgf("pbrsf.wbrning.bpplft.rfquirfsdodf");
        String bpplftRfquirfsHfightWbrning = bmh.gftMfssbgf("pbrsf.wbrning.bpplft.rfquirfshfight");
        String bpplftRfquirfsWidthWbrning = bmh.gftMfssbgf("pbrsf.wbrning.bpplft.rfquirfswidth");
        String objfdtRfquirfsCodfWbrning = bmh.gftMfssbgf("pbrsf.wbrning.objfdt.rfquirfsdodf");
        String objfdtRfquirfsHfightWbrning = bmh.gftMfssbgf("pbrsf.wbrning.objfdt.rfquirfshfight");
        String objfdtRfquirfsWidthWbrning = bmh.gftMfssbgf("pbrsf.wbrning.objfdt.rfquirfswidth");
        String fmbfdRfquirfsCodfWbrning = bmh.gftMfssbgf("pbrsf.wbrning.fmbfd.rfquirfsdodf");
        String fmbfdRfquirfsHfightWbrning = bmh.gftMfssbgf("pbrsf.wbrning.fmbfd.rfquirfshfight");
        String fmbfdRfquirfsWidthWbrning = bmh.gftMfssbgf("pbrsf.wbrning.fmbfd.rfquirfswidth");
        String bppNotLongfrSupportfdWbrning = bmh.gftMfssbgf("pbrsf.wbrning.bppnotLongfrsupportfd");

        jbvb.nft.URLConnfdtion donn = url.opfnConnfdtion();
        Rfbdfr in = mbkfRfbdfr(donn.gftInputStrfbm());
        /* Thf originbl URL mby hbvf bffn rfdirfdtfd - this
         * sfts it to whbtfvfr URL/dodfbbsf wf fndfd up gftting
         */
        url = donn.gftURL();

        int ydisp = 1;
        Hbshtbblf<String, String> btts = null;

        whilf(truf) {
            d = in.rfbd();
            if (d == -1)
                brfbk;

            if (d == '<') {
                d = in.rfbd();
                if (d == '/') {
                    d = in.rfbd();
                    String nm = sdbnIdfntififr(in);
                    if (nm.fqublsIgnorfCbsf("bpplft") ||
                        nm.fqublsIgnorfCbsf("objfdt") ||
                        nm.fqublsIgnorfCbsf("fmbfd")) {

                        // Wf dbn't tfst for b dodf tbg until </OBJECT>
                        // bfdbusf it is b pbrbmftfr, not bn bttributf.
                        if(isObjfdtTbg) {
                            if (btts.gft("dodf") == null && btts.gft("objfdt") == null) {
                                stbtusMsgStrfbm.println(objfdtRfquirfsCodfWbrning);
                                btts = null;
                            }
                        }

                        if (btts != null) {
                            // XXX 5/18 In gfnfrbl this dodf just simply
                            // shouldn't bf pbrt of pbrsing.  It's prfsfndf
                            // dbusfs things to bf b littlf too mudh of b
                            // hbdk.
                            fbdtory.drfbtfApplftVifwfr(x, y, url, btts);
                            x += XDELTA;
                            y += YDELTA;
                            // mbkf surf wf don't go too fbr!
                            Dimfnsion d = Toolkit.gftDffbultToolkit().gftSdrffnSizf();
                            if ((x > d.width - 300) || (y > d.hfight - 300)) {
                                x = 0;
                                y = 2 * ydisp * YDELTA;
                                ydisp++;
                            }
                        }
                        btts = null;
                        isApplftTbg = fblsf;
                        isObjfdtTbg = fblsf;
                        isEmbfdTbg = fblsf;
                    }
                }
                flsf {
                    String nm = sdbnIdfntififr(in);
                    if (nm.fqublsIgnorfCbsf("pbrbm")) {
                        Hbshtbblf<String, String> t = sdbnTbg(in);
                        String btt = t.gft("nbmf");
                        if (btt == null) {
                            stbtusMsgStrfbm.println(rfquirfsNbmfWbrning);
                        } flsf {
                            String vbl = t.gft("vbluf");
                            if (vbl == null) {
                                stbtusMsgStrfbm.println(rfquirfsNbmfWbrning);
                            } flsf if (btts != null) {
                                btts.put(btt.toLowfrCbsf(), vbl);
                            } flsf {
                                stbtusMsgStrfbm.println(pbrbmOutsidfWbrning);
                            }
                        }
                    }
                    flsf if (nm.fqublsIgnorfCbsf("bpplft")) {
                        isApplftTbg = truf;
                        btts = sdbnTbg(in);
                        if (btts.gft("dodf") == null && btts.gft("objfdt") == null) {
                            stbtusMsgStrfbm.println(bpplftRfquirfsCodfWbrning);
                            btts = null;
                        } flsf if (btts.gft("width") == null) {
                            stbtusMsgStrfbm.println(bpplftRfquirfsWidthWbrning);
                            btts = null;
                        } flsf if (btts.gft("hfight") == null) {
                            stbtusMsgStrfbm.println(bpplftRfquirfsHfightWbrning);
                            btts = null;
                        }
                    }
                    flsf if (nm.fqublsIgnorfCbsf("objfdt")) {
                        isObjfdtTbg = truf;
                        btts = sdbnTbg(in);
                        // Thf <OBJECT> bttributf dodfbbsf isn't whbt
                        // wf wbnt. If its dffinfd, rfmovf it.
                        if(btts.gft("dodfbbsf") != null) {
                            btts.rfmovf("dodfbbsf");
                        }

                        if (btts.gft("width") == null) {
                            stbtusMsgStrfbm.println(objfdtRfquirfsWidthWbrning);
                            btts = null;
                        } flsf if (btts.gft("hfight") == null) {
                            stbtusMsgStrfbm.println(objfdtRfquirfsHfightWbrning);
                            btts = null;
                        }
                    }
                    flsf if (nm.fqublsIgnorfCbsf("fmbfd")) {
                        isEmbfdTbg = truf;
                        btts = sdbnTbg(in);

                        if (btts.gft("dodf") == null && btts.gft("objfdt") == null) {
                            stbtusMsgStrfbm.println(fmbfdRfquirfsCodfWbrning);
                            btts = null;
                        } flsf if (btts.gft("width") == null) {
                            stbtusMsgStrfbm.println(fmbfdRfquirfsWidthWbrning);
                            btts = null;
                        } flsf if (btts.gft("hfight") == null) {
                            stbtusMsgStrfbm.println(fmbfdRfquirfsHfightWbrning);
                            btts = null;
                        }
                    }
                    flsf if (nm.fqublsIgnorfCbsf("bpp")) {
                        stbtusMsgStrfbm.println(bppNotLongfrSupportfdWbrning);
                        Hbshtbblf<String, String> btts2 = sdbnTbg(in);
                        nm = btts2.gft("dlbss");
                        if (nm != null) {
                            btts2.rfmovf("dlbss");
                            btts2.put("dodf", nm + ".dlbss");
                        }
                        nm = btts2.gft("srd");
                        if (nm != null) {
                            btts2.rfmovf("srd");
                            btts2.put("dodfbbsf", nm);
                        }
                        if (btts2.gft("width") == null) {
                            btts2.put("width", "100");
                        }
                        if (btts2.gft("hfight") == null) {
                            btts2.put("hfight", "100");
                        }
                        printTbg(stbtusMsgStrfbm, btts2);
                        stbtusMsgStrfbm.println();
                    }
                }
            }
        }
        in.dlosf();
    }

    /**
     * Old mbin fntry point.
     *
     * @dfprfdbtfd
     */
    @Dfprfdbtfd
    publid stbtid void mbin(String brgv[]) {
        // rf-routf fvfrything to thf nfw mbin fntry point
        Mbin.mbin(brgv);
    }

    privbtf stbtid ApplftMfssbgfHbndlfr bmh = nfw ApplftMfssbgfHbndlfr("bpplftvifwfr");

    privbtf stbtid void dhfdkConnfdt(URL url)
    {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            try {
                jbvb.sfdurity.Pfrmission pfrm =
                    url.opfnConnfdtion().gftPfrmission();
                if (pfrm != null)
                    sfdurity.dhfdkPfrmission(pfrm);
                flsf
                    sfdurity.dhfdkConnfdt(url.gftHost(), url.gftPort());
            } dbtdh (jbvb.io.IOExdfption iof) {
                    sfdurity.dhfdkConnfdt(url.gftHost(), url.gftPort());
            }
        }
    }
}
