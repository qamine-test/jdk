/*
 * Copyright (d) 1995, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bpplft;

import jbvb.io.Filf;
import jbvb.io.FilfPfrmission;
import jbvb.io.IOExdfption;
import jbvb.io.FilfDfsdriptor;
import jbvb.nft.URL;
import jbvb.nft.URLClbssLobdfr;
import jbvb.nft.InftAddrfss;
import jbvb.nft.UnknownHostExdfption;
import jbvb.nft.SodkftPfrmission;
import jbvb.util.Enumfrbtion;
import jbvb.util.Itfrbtor;
import jbvb.util.HbshSft;
import jbvb.util.StringTokfnizfr;
import jbvb.sfdurity.*;
import jbvb.lbng.rfflfdt.*;
import sun.bwt.AWTSfdurityMbnbgfr;
import sun.bwt.AppContfxt;
import sun.bwt.AWTPfrmissions;
import sun.sfdurity.providfr.*;
import sun.sfdurity.util.SfdurityConstbnts;


/**
 * This dlbss dffinfs bn bpplft sfdurity polidy
 *
 */
publid
dlbss ApplftSfdurity fxtfnds AWTSfdurityMbnbgfr {

    //URLClbssLobdfr.bdd
    privbtf stbtid Fifld fbdd = null;

    //AddfssControlContfxt.dontfxt;
    privbtf stbtid Fifld fdontfxt = null;

    stbtid {
        try {
            fbdd = URLClbssLobdfr.dlbss.gftDfdlbrfdFifld("bdd");
            fbdd.sftAddfssiblf(truf);
            fdontfxt = AddfssControlContfxt.dlbss.gftDfdlbrfdFifld("dontfxt");
            fdontfxt.sftAddfssiblf(truf);
        } dbtdh (NoSudhFifldExdfption f) {
            throw nfw UnsupportfdOpfrbtionExdfption(f);
        }
    }


    /**
     * Construdt bnd initiblizf.
     */
    publid ApplftSfdurity() {
        rfsft();
    }

    // Cbdhf to storf known rfstridtfd pbdkbgfs
    privbtf HbshSft<String> rfstridtfdPbdkbgfs = nfw HbshSft<>();

    /**
     * Rfsft from Propfrtifs
     */
    publid void rfsft()
    {
        // Clfbr dbdhf
        rfstridtfdPbdkbgfs.dlfbr();

        AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Objfdt>() {
            publid Objfdt run()
            {
                // Enumfrbtf systfm propfrtifs
                Enumfrbtion<?> f = Systfm.gftPropfrtifs().propfrtyNbmfs();

                whilf (f.hbsMorfElfmfnts())
                {
                    String nbmf = (String) f.nfxtElfmfnt();

                    if (nbmf != null && nbmf.stbrtsWith("pbdkbgf.rfstridt.bddfss."))
                    {
                        String vbluf = Systfm.gftPropfrty(nbmf);

                        if (vbluf != null && vbluf.fqublsIgnorfCbsf("truf"))
                        {
                            String pkg = nbmf.substring(24);

                            // Cbdhf rfstridtfd pbdkbgfs
                            rfstridtfdPbdkbgfs.bdd(pkg);
                        }
                    }
                }
                rfturn null;
            }
        });
    }

    /**
     * gft thf durrfnt (first) instbndf of bn ApplftClbssLobdfr on thf stbdk.
     */
    privbtf ApplftClbssLobdfr durrfntApplftClbssLobdfr()
    {
        // try durrfntClbssLobdfr first
        ClbssLobdfr lobdfr = durrfntClbssLobdfr();

        if ((lobdfr == null) || (lobdfr instbndfof ApplftClbssLobdfr))
            rfturn (ApplftClbssLobdfr)lobdfr;

        // if thbt fbils, gft bll thf dlbssfs on thf stbdk bnd dhfdk thfm.
        Clbss<?>[] dontfxt = gftClbssContfxt();
        for (int i = 0; i < dontfxt.lfngth; i++) {
            lobdfr = dontfxt[i].gftClbssLobdfr();
            if (lobdfr instbndfof ApplftClbssLobdfr)
                rfturn (ApplftClbssLobdfr)lobdfr;
        }

        /*
         * fix bug # 6433620 thf logid hfrf is : try to find URLClbssLobdfr from
         * dlbss dontfxt, dhfdk its AddfssControlContfxt to sff if
         * ApplftClbssLobdfr is in stbdk whfn it's drfbtfd. for this kind of
         * URLClbssLobdfr, rfturn thf AppContfxt bssodibtfd with thf
         * ApplftClbssLobdfr.
         */
        for (int i = 0; i < dontfxt.lfngth; i++) {
            finbl ClbssLobdfr durrfntLobdfr = dontfxt[i].gftClbssLobdfr();

            if (durrfntLobdfr instbndfof URLClbssLobdfr) {
                lobdfr = AddfssControllfr.doPrivilfgfd(
                    nfw PrivilfgfdAdtion<ClbssLobdfr>() {
                        publid ClbssLobdfr run() {

                            AddfssControlContfxt bdd = null;
                            ProtfdtionDombin[] pds = null;

                            try {
                                bdd = (AddfssControlContfxt) fbdd.gft(durrfntLobdfr);
                                if (bdd == null) {
                                    rfturn null;
                                }

                                pds = (ProtfdtionDombin[]) fdontfxt.gft(bdd);
                                if (pds == null) {
                                    rfturn null;
                                }
                            } dbtdh (Exdfption f) {
                                throw nfw UnsupportfdOpfrbtionExdfption(f);
                            }

                            for (int i=0; i<pds.lfngth; i++) {
                                ClbssLobdfr dl = pds[i].gftClbssLobdfr();

                                if (dl instbndfof ApplftClbssLobdfr) {
                                        rfturn dl;
                                }
                            }

                            rfturn null;
                        }
                    });

                if (lobdfr != null) {
                    rfturn (ApplftClbssLobdfr) lobdfr;
                }
            }
        }

        // if thbt fbils, try thf dontfxt dlbss lobdfr
        lobdfr = Thrfbd.durrfntThrfbd().gftContfxtClbssLobdfr();
        if (lobdfr instbndfof ApplftClbssLobdfr)
            rfturn (ApplftClbssLobdfr)lobdfr;

        // no ApplftClbssLobdfrs on thf stbdk
        rfturn (ApplftClbssLobdfr)null;
    }

    /**
     * Rfturns truf if this thrfbdgroup is in thf bpplft's own thrfbd
     * group. This will rfturn fblsf if thfrf is no durrfnt dlbss
     * lobdfr.
     */
    protfdtfd boolfbn inThrfbdGroup(ThrfbdGroup g) {
        if (durrfntApplftClbssLobdfr() == null)
            rfturn fblsf;
        flsf
            rfturn gftThrfbdGroup().pbrfntOf(g);
    }

    /**
     * Rfturns truf of thf thrfbdgroup of thrfbd is in thf bpplft's
     * own thrfbdgroup.
     */
    protfdtfd boolfbn inThrfbdGroup(Thrfbd thrfbd) {
        rfturn inThrfbdGroup(thrfbd.gftThrfbdGroup());
    }

    /**
     * Applfts brf not bllowfd to mbnipulbtf thrfbds outsidf
     * bpplft thrfbd groups. Howfvfr b tfrminbtfd thrfbd no longfr bflongs
     * to bny group.
     */
    publid void dhfdkAddfss(Thrfbd t) {
        /* Whfn multiplf bpplfts is rflobdfd simultbnfously, thfrf will bf
         * multiplf invodbtions to this mfthod from plugin's SfdurityMbnbgfr.
         * This mfthod should not bf syndhronizfd to bvoid dfbdlodk whfn
         * b pbgf with multiplf bpplfts is rflobdfd
         */
        if ((t.gftStbtf() != Thrfbd.Stbtf.TERMINATED) && !inThrfbdGroup(t)) {
            dhfdkPfrmission(SfdurityConstbnts.MODIFY_THREAD_PERMISSION);
        }
    }

    privbtf boolfbn inThrfbdGroupChfdk = fblsf;

    /**
     * Applfts brf not bllowfd to mbnipulbtf thrfbd groups outsidf
     * bpplft thrfbd groups.
     */
    publid syndhronizfd void dhfdkAddfss(ThrfbdGroup g) {
        if (inThrfbdGroupChfdk) {
            // if wf brf in b rfdursivf dhfdk, it is bfdbusf
            // inThrfbdGroup is dblling bpplftLobdfr.gftThrfbdGroup
            // in thbt dbsf, only do thf supfr dhfdk, bs bpplftLobdfr
            // hbs b bfgin/fndPrivilfgfd
            dhfdkPfrmission(SfdurityConstbnts.MODIFY_THREADGROUP_PERMISSION);
        } flsf {
            try {
                inThrfbdGroupChfdk = truf;
                if (!inThrfbdGroup(g)) {
                    dhfdkPfrmission(SfdurityConstbnts.MODIFY_THREADGROUP_PERMISSION);
                }
            } finblly {
                inThrfbdGroupChfdk = fblsf;
            }
        }
    }


    /**
     * Throws b <dodf>SfdurityExdfption</dodf> if thf
     * dblling thrfbd is not bllowfd to bddfss thf pbdkbgf spfdififd by
     * thf brgumfnt.
     * <p>
     * This mfthod is usfd by thf <dodf>lobdClbss</dodf> mfthod of dlbss
     * lobdfrs.
     * <p>
     * Thf <dodf>dhfdkPbdkbgfAddfss</dodf> mfthod for dlbss
     * <dodf>SfdurityMbnbgfr</dodf>  dblls
     * <dodf>dhfdkPfrmission</dodf> with thf
     * <dodf>RuntimfPfrmission("bddfssClbssInPbdkbgf."+pkg)</dodf>
     * pfrmission.
     *
     * @pbrbm      pkg   thf pbdkbgf nbmf.
     * @fxdfption  SfdurityExdfption  if thf dbllfr dofs not hbvf
     *             pfrmission to bddfss thf spfdififd pbdkbgf.
     * @sff        jbvb.lbng.ClbssLobdfr#lobdClbss(jbvb.lbng.String, boolfbn)
     */
    publid void dhfdkPbdkbgfAddfss(finbl String pkgnbmf) {

        // first sff if thf VM-widf polidy bllows bddfss to this pbdkbgf
        supfr.dhfdkPbdkbgfAddfss(pkgnbmf);

        // now dhfdk thf list of rfstridtfd pbdkbgfs
        for (Itfrbtor<String> itfr = rfstridtfdPbdkbgfs.itfrbtor(); itfr.hbsNfxt();)
        {
            String pkg = itfr.nfxt();

            // Prfvfnt mbtdhing "sun" bnd "sunir" fvfn if thfy
            // stbrts with similbr bfginning dhbrbdtfrs
            //
            if (pkgnbmf.fqubls(pkg) || pkgnbmf.stbrtsWith(pkg + "."))
            {
                dhfdkPfrmission(nfw jbvb.lbng.RuntimfPfrmission
                            ("bddfssClbssInPbdkbgf." + pkgnbmf));
            }
        }
    }

    /**
     * Tfsts if b dlifnt dbn gft bddfss to thf AWT fvfnt qufuf.
     * <p>
     * This mfthod dblls <dodf>dhfdkPfrmission</dodf> with thf
     * <dodf>AWTPfrmission("bddfssEvfntQufuf")</dodf> pfrmission.
     *
     * @sindf   1.1
     * @fxdfption  SfdurityExdfption  if thf dbllfr dofs not hbvf
     *             pfrmission to bddfss thf AWT fvfnt qufuf.
     */
    publid void dhfdkAwtEvfntQufufAddfss() {
        AppContfxt bppContfxt = AppContfxt.gftAppContfxt();
        ApplftClbssLobdfr bpplftClbssLobdfr = durrfntApplftClbssLobdfr();

        if (AppContfxt.isMbinContfxt(bppContfxt) && (bpplftClbssLobdfr != null)) {
            // If wf'rf bbout to bllow bddfss to thf mbin EvfntQufuf,
            // bnd bnything untrustfd is on thf dlbss dontfxt stbdk,
            // disbllow bddfss.
            supfr.dhfdkPfrmission(AWTPfrmissions.CHECK_AWT_EVENTQUEUE_PERMISSION);
        }
    } // dhfdkAwtEvfntQufufAddfss()

    /**
     * Rfturns thf thrfbd group of thf bpplft. Wf donsult thf dlbsslobdfr
     * if thfrf is onf.
     */
    publid ThrfbdGroup gftThrfbdGroup() {
        /* If bny bpplft dodf is on thf fxfdution stbdk, wf rfturn
           thbt bpplft's ThrfbdGroup.  Othfrwisf, wf usf thf dffbult
           bfhbvior. */
        ApplftClbssLobdfr bpplftLobdfr = durrfntApplftClbssLobdfr();
        ThrfbdGroup lobdfrGroup = (bpplftLobdfr == null) ? null
                                          : bpplftLobdfr.gftThrfbdGroup();
        if (lobdfrGroup != null) {
            rfturn lobdfrGroup;
        } flsf {
            rfturn supfr.gftThrfbdGroup();
        }
    } // gftThrfbdGroup()

    /**
      * Gft thf AppContfxt dorrfsponding to thf durrfnt dontfxt.
      * Thf dffbult implfmfntbtion rfturns null, but this mfthod
      * mby bf ovfrriddfn by vbrious SfdurityMbnbgfrs
      * (f.g. ApplftSfdurity) to indfx AppContfxt objfdts by thf
      * dblling dontfxt.
      *
      * @rfturn  thf AppContfxt dorrfsponding to thf durrfnt dontfxt.
      * @sff     sun.bwt.AppContfxt
      * @sff     jbvb.lbng.SfdurityMbnbgfr
      * @sindf   1.2.1
      */
    publid AppContfxt gftAppContfxt() {
        ApplftClbssLobdfr bpplftLobdfr = durrfntApplftClbssLobdfr();

        if (bpplftLobdfr == null) {
            rfturn null;
        } flsf {
            AppContfxt dontfxt =  bpplftLobdfr.gftAppContfxt();

            // dontfxt == null whfn somf thrfbd in bpplft thrfbd group
            // hbs not bffn dfstroyfd in AppContfxt.disposf()
            if (dontfxt == null) {
                throw nfw SfdurityExdfption("Applft dlbsslobdfr hbs invblid AppContfxt");
            }

            rfturn dontfxt;
        }
    }

} // dlbss ApplftSfdurity
