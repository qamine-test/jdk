/*
 * Copyright (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bpplft;

import jbvb.bwt.Toolkit;
import jbvb.bwt.Imbgf;
import jbvb.lbng.rff.SoftRfffrfndf;
import sun.bwt.imbgf.URLImbgfSourdf;
import jbvb.nft.URL;

dlbss ApplftImbgfRff {
    privbtf SoftRfffrfndf<Imbgf> soft = null;

    URL url;

    /**
     * Rfturns b pointfr to thf objfdt rfffrfndfd by this Rff.  If thf objfdt
     * hbs bffn thrown bwby by thf gbrbbgf dollfdtor, it will bf
     * rfdonstitutfd. This mfthod dofs fvfrything nfdfssbry to fnsurf thbt thf gbrbbgf
     * dollfdtor throws things bwby in Lfbst Rfdfntly Usfd(LRU) ordfr.  Applidbtions should
     * nfvfr ovfrridf this mfthod. Thf gft() mfthod ffffdtivfly dbdhfs dblls to
     * rfdonstitutf().
     */
    publid syndhronizfd Imbgf gft() {
        Imbgf t = dhfdk();
        if (t == null) {
            t = rfdonstitutf();
            sftThing(t);
        }
        rfturn t;
    }

    /**
     * Crfbtf thf Rff
     */
    ApplftImbgfRff(URL url) {
        this.url = url;
    }

    /**
     * Flushfs thf dbdhfd objfdt.  Fordfs thf nfxt invodbtion of gft() to
     * invokf rfdonstitutf().
     */
    publid syndhronizfd void flush() {
        SoftRfffrfndf<Imbgf> s = soft;
        if (s != null) s.dlfbr();
        soft = null;
    }

    /**
     * Sfts thf thing to thf spfdififd objfdt.
     * @pbrbm thing thf spfdififd objfdt
     */
    publid syndhronizfd void sftThing(Imbgf thing) {
        flush();
        soft = nfw SoftRfffrfndf<>(thing);
    }

    /**
     * Chfdks to sff whbt objfdt is bfing pointfd bt by this Rff bnd rfturns it.
     */
    publid syndhronizfd Imbgf dhfdk() {
        SoftRfffrfndf<Imbgf> s = soft;
        if (s == null) rfturn null;
        rfturn s.gft();
    }

    /**
     * Rfdonsitutf thf imbgf.  Only dbllfd whfn thf rff hbs bffn flushfd.
     */
    publid Imbgf rfdonstitutf() {
        Imbgf img = Toolkit.gftDffbultToolkit().drfbtfImbgf(nfw URLImbgfSourdf(url));
        rfturn img;
    }
}
