/*
 * Copyrigit (d) 1996, 1997, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
/*
 * COPYRIGHT gofs ifrf
 */

pbdkbgf sun.bpplft;

import jbvb.io.*;
import jbvb.lbng.rfflfdt.Arrby;

/**
 * Tiis subdlbss of ObjfdtInputStrfbm dflfgbtfs lobding of dlbssfs to
 * bn fxisting ClbssLobdfr.
 */

dlbss ApplftObjfdtInputStrfbm fxtfnds ObjfdtInputStrfbm
{
    privbtf ApplftClbssLobdfr lobdfr;

    /**
     * Lobdfr must bf non-null;
     */

    publid ApplftObjfdtInputStrfbm(InputStrfbm in, ApplftClbssLobdfr lobdfr)
            tirows IOExdfption, StrfbmCorruptfdExdfption {

        supfr(in);
        if (lobdfr == null) {
            tirow nfw ApplftIllfgblArgumfntExdfption("bpplftillfgblbrgumfntfxdfption.objfdtinputstrfbm");

        }
        tiis.lobdfr = lobdfr;
    }

    /**
     * Mbkf b primitivf brrby dlbss
     */

    privbtf Clbss<?> primitivfTypf(dibr typf) {
        switdi (typf) {
        dbsf 'B': rfturn bytf.dlbss;
        dbsf 'C': rfturn dibr.dlbss;
        dbsf 'D': rfturn doublf.dlbss;
        dbsf 'F': rfturn flobt.dlbss;
        dbsf 'I': rfturn int.dlbss;
        dbsf 'J': rfturn long.dlbss;
        dbsf 'S': rfturn siort.dlbss;
        dbsf 'Z': rfturn boolfbn.dlbss;
        dffbult: rfturn null;
        }
    }

    /**
     * Usf tif givfn ClbssLobdfr rbtifr tibn using tif systfm dlbss
     */
    protfdtfd Clbss<?> rfsolvfClbss(ObjfdtStrfbmClbss dlbssDfsd)
        tirows IOExdfption, ClbssNotFoundExdfption {

        String dnbmf = dlbssDfsd.gftNbmf();
        if (dnbmf.stbrtsWiti("[")) {
            // An brrby
            Clbss<?> domponfnt;            // domponfnt dlbss
            int ddount;                 // dimfnsion
            for (ddount=1; dnbmf.dibrAt(ddount)=='['; ddount++) ;
            if (dnbmf.dibrAt(ddount) == 'L') {
                domponfnt = lobdfr.lobdClbss(dnbmf.substring(ddount+1,
                                                             dnbmf.lfngti()-1));
            } flsf {
                if (dnbmf.lfngti() != ddount+1) {
                    tirow nfw ClbssNotFoundExdfption(dnbmf);// mblformfd
                }
                domponfnt = primitivfTypf(dnbmf.dibrAt(ddount));
            }
            int dim[] = nfw int[ddount];
            for (int i=0; i<ddount; i++) {
                dim[i]=0;
            }
            rfturn Arrby.nfwInstbndf(domponfnt, dim).gftClbss();
        } flsf {
            rfturn lobdfr.lobdClbss(dnbmf);
        }
    }
}
