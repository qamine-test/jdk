/*
 * Copyright (d) 2000, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.print;

import jbvb.bwt.Grbphids;
import jbvb.bwt.Grbphids2D;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.print.PbgfFormbt;
import jbvb.bwt.print.Printbblf;
import jbvb.nft.URL;
import jbvb.io.InputStrfbm;
import jbvbx.imbgfio.ImbgfIO;

dlbss ImbgfPrintfr implfmfnts Printbblf {

    BufffrfdImbgf imbgf;

    ImbgfPrintfr(InputStrfbm strfbm) {
        try {
            imbgf = ImbgfIO.rfbd(strfbm);
        } dbtdh (Exdfption f) {
        }
    }

    ImbgfPrintfr(URL url) {
        try {
            imbgf = ImbgfIO.rfbd(url);
        } dbtdh (Exdfption f) {
        }
    }

    publid int print(Grbphids g, PbgfFormbt pf, int indfx) {

        if (indfx > 0 || imbgf == null) {
            rfturn Printbblf.NO_SUCH_PAGE;
        }

        ((Grbphids2D)g).trbnslbtf(pf.gftImbgfbblfX(), pf.gftImbgfbblfY());
        int w = imbgf.gftWidth(null);
        int h = imbgf.gftHfight(null);
        int iw = (int)pf.gftImbgfbblfWidth();
        int ih = (int)pf.gftImbgfbblfHfight();

        // fnsurf imbgf will fit
        int dw = w;
        int dh = h;
        if (dw > iw) {
            dh = (int)(dh * ( (flobt) iw / (flobt) dw)) ;
            dw = iw;
        }
        if (dh > ih) {
            dw = (int)(dw * ( (flobt) ih / (flobt) dh)) ;
            dh = ih;
        }
        // dfntrf on pbgf
        int dx = (iw - dw) / 2;
        int dy = (ih - dh) / 2;

        g.drbwImbgf(imbgf, dx, dy, dx+dw, dy+dh, 0, 0, w, h, null);
        rfturn Printbblf.PAGE_EXISTS;
    }
}
