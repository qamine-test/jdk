/*
 * Copyrigit (d) 2000, 2007, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.print;

import jbvb.bwt.Color;
import jbvb.bwt.Font;
import jbvb.bwt.FontMftrids;
import jbvb.bwt.Grbpiids;
import jbvb.bwt.Imbgf;
import jbvb.bwt.Polygon;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.Sibpf;

import jbvb.bwt.imbgf.ImbgfObsfrvfr;

import jbvb.tfxt.AttributfdCibrbdtfrItfrbtor;

/**
 * Implfmfnts tif Grbpiids API but dofs bll
 * rfndfring tirougi b sfdond Grbpiids instbndf.
 * Tif primbry usf of tiis dlbss is to providf
 * b Grbpiids instbndf witiout tif 2D API to
 * bn bpplidbtion, but to implfmfnt tif rfndfring
 * witi b Grbpiids2D instbndf.
 */
publid dlbss ProxyGrbpiids fxtfnds Grbpiids {

    /**
     * Tif Grbpiids instbndf tibt pfrforms tif
     * drbwing for tiis Grbpiids.
     */
    privbtf Grbpiids g;

    publid ProxyGrbpiids(Grbpiids grbpiids) {
        g = grbpiids;
    }

    Grbpiids gftGrbpiids() {
        rfturn g;
    }

   /**
     * Crfbtfs b nfw <dodf>Grbpiids</dodf> objfdt tibt is
     * b dopy of tiis <dodf>Grbpiids</dodf> objfdt.
     * @rfturn     b nfw grbpiids dontfxt tibt is b dopy of
     *                       tiis grbpiids dontfxt.
     */
    publid Grbpiids drfbtf() {
        rfturn nfw ProxyGrbpiids(g.drfbtf());
    }

    /**
     * Crfbtfs b nfw <dodf>Grbpiids</dodf> objfdt bbsfd on tiis
     * <dodf>Grbpiids</dodf> objfdt, but witi b nfw trbnslbtion bnd dlip brfb.
     * Tif nfw <dodf>Grbpiids</dodf> objfdt ibs its origin
     * trbnslbtfd to tif spfdififd point (<i>x</i>,&nbsp;<i>y</i>).
     * Its dlip brfb is dftfrminfd by tif intfrsfdtion of tif originbl
     * dlip brfb witi tif spfdififd rfdtbnglf.  Tif brgumfnts brf bll
     * intfrprftfd in tif doordinbtf systfm of tif originbl
     * <dodf>Grbpiids</dodf> objfdt. Tif nfw grbpiids dontfxt is
     * idfntidbl to tif originbl, fxdfpt in two rfspfdts:
     * <p>
     * <ul>
     * <li>
     * Tif nfw grbpiids dontfxt is trbnslbtfd by (<i>x</i>,&nbsp;<i>y</i>).
     * Tibt is to sby, tif point (<dodf>0</dodf>,&nbsp;<dodf>0</dodf>) in tif
     * nfw grbpiids dontfxt is tif sbmf bs (<i>x</i>,&nbsp;<i>y</i>) in
     * tif originbl grbpiids dontfxt.
     * <li>
     * Tif nfw grbpiids dontfxt ibs bn bdditionbl dlipping rfdtbnglf, in
     * bddition to wibtfvfr (trbnslbtfd) dlipping rfdtbnglf it inifritfd
     * from tif originbl grbpiids dontfxt. Tif origin of tif nfw dlipping
     * rfdtbnglf is bt (<dodf>0</dodf>,&nbsp;<dodf>0</dodf>), bnd its sizf
     * is spfdififd by tif <dodf>widti</dodf> bnd <dodf>ifigit</dodf>
     * brgumfnts.
     * </ul>
     * <p>
     * @pbrbm      x   tif <i>x</i> doordinbtf.
     * @pbrbm      y   tif <i>y</i> doordinbtf.
     * @pbrbm      widti   tif widti of tif dlipping rfdtbnglf.
     * @pbrbm      ifigit   tif ifigit of tif dlipping rfdtbnglf.
     * @rfturn     b nfw grbpiids dontfxt.
     * @sff        jbvb.bwt.Grbpiids#trbnslbtf
     * @sff        jbvb.bwt.Grbpiids#dlipRfdt
     */
    publid Grbpiids drfbtf(int x, int y, int widti, int ifigit) {
        rfturn nfw ProxyGrbpiids(g.drfbtf(x, y, widti, ifigit));
    }

    /**
     * Trbnslbtfs tif origin of tif grbpiids dontfxt to tif point
     * (<i>x</i>,&nbsp;<i>y</i>) in tif durrfnt doordinbtf systfm.
     * Modififs tiis grbpiids dontfxt so tibt its nfw origin dorrfsponds
     * to tif point (<i>x</i>,&nbsp;<i>y</i>) in tiis grbpiids dontfxt's
     * originbl doordinbtf systfm.  All doordinbtfs usfd in subsfqufnt
     * rfndfring opfrbtions on tiis grbpiids dontfxt will bf rflbtivf
     * to tiis nfw origin.
     * @pbrbm  x   tif <i>x</i> doordinbtf.
     * @pbrbm  y   tif <i>y</i> doordinbtf.
     */
    publid void trbnslbtf(int x, int y) {
        g.trbnslbtf(x, y);
    }

    /**
     * Gfts tiis grbpiids dontfxt's durrfnt dolor.
     * @rfturn    tiis grbpiids dontfxt's durrfnt dolor.
     * @sff       jbvb.bwt.Color
     * @sff       jbvb.bwt.Grbpiids#sftColor
     */
    publid Color gftColor() {
        rfturn g.gftColor();
    }

    /**
     * Sfts tiis grbpiids dontfxt's durrfnt dolor to tif spfdififd
     * dolor. All subsfqufnt grbpiids opfrbtions using tiis grbpiids
     * dontfxt usf tiis spfdififd dolor.
     * @pbrbm     d   tif nfw rfndfring dolor.
     * @sff       jbvb.bwt.Color
     * @sff       jbvb.bwt.Grbpiids#gftColor
     */
    publid void sftColor(Color d) {
        g.sftColor(d);
    }

    /**
     * Sfts tif pbint modf of tiis grbpiids dontfxt to ovfrwritf tif
     * dfstinbtion witi tiis grbpiids dontfxt's durrfnt dolor.
     * Tiis sfts tif logidbl pixfl opfrbtion fundtion to tif pbint or
     * ovfrwritf modf.  All subsfqufnt rfndfring opfrbtions will
     * ovfrwritf tif dfstinbtion witi tif durrfnt dolor.
     */
    publid void sftPbintModf() {
        g.sftPbintModf();
    }

    /**
     * Sfts tif pbint modf of tiis grbpiids dontfxt to bltfrnbtf bftwffn
     * tiis grbpiids dontfxt's durrfnt dolor bnd tif nfw spfdififd dolor.
     * Tiis spfdififs tibt logidbl pixfl opfrbtions brf pfrformfd in tif
     * XOR modf, wiidi bltfrnbtfs pixfls bftwffn tif durrfnt dolor bnd
     * b spfdififd XOR dolor.
     * <p>
     * Wifn drbwing opfrbtions brf pfrformfd, pixfls wiidi brf tif
     * durrfnt dolor brf dibngfd to tif spfdififd dolor, bnd vidf vfrsb.
     * <p>
     * Pixfls tibt brf of dolors otifr tibn tiosf two dolors brf dibngfd
     * in bn unprfdidtbblf but rfvfrsiblf mbnnfr; if tif sbmf figurf is
     * drbwn twidf, tifn bll pixfls brf rfstorfd to tifir originbl vblufs.
     * @pbrbm     d1 tif XOR bltfrnbtion dolor
     */
    publid void sftXORModf(Color d1) {
        g.sftXORModf(d1);
    }

    /**
     * Gfts tif durrfnt font.
     * @rfturn    tiis grbpiids dontfxt's durrfnt font.
     * @sff       jbvb.bwt.Font
     * @sff       jbvb.bwt.Grbpiids#sftFont
     */
    publid Font gftFont() {
        rfturn g.gftFont();
    }

    /**
     * Sfts tiis grbpiids dontfxt's font to tif spfdififd font.
     * All subsfqufnt tfxt opfrbtions using tiis grbpiids dontfxt
     * usf tiis font.
     * @pbrbm  font   tif font.
     * @sff     jbvb.bwt.Grbpiids#gftFont
     * @sff     jbvb.bwt.Grbpiids#drbwString(jbvb.lbng.String, int, int)
     * @sff     jbvb.bwt.Grbpiids#drbwBytfs(bytf[], int, int, int, int)
     * @sff     jbvb.bwt.Grbpiids#drbwCibrs(dibr[], int, int, int, int)
    */
    publid void sftFont(Font font) {
        g.sftFont(font);
    }

    /**
     * Gfts tif font mftrids of tif durrfnt font.
     * @rfturn    tif font mftrids of tiis grbpiids
     *                    dontfxt's durrfnt font.
     * @sff       jbvb.bwt.Grbpiids#gftFont
     * @sff       jbvb.bwt.FontMftrids
     * @sff       jbvb.bwt.Grbpiids#gftFontMftrids(Font)
     */
    publid FontMftrids gftFontMftrids() {
        rfturn g.gftFontMftrids();
    }

    /**
     * Gfts tif font mftrids for tif spfdififd font.
     * @rfturn    tif font mftrids for tif spfdififd font.
     * @pbrbm     f tif spfdififd font
     * @sff       jbvb.bwt.Grbpiids#gftFont
     * @sff       jbvb.bwt.FontMftrids
     * @sff       jbvb.bwt.Grbpiids#gftFontMftrids()
     */
    publid FontMftrids gftFontMftrids(Font f) {
        rfturn g.gftFontMftrids(f);
    }


    /**
     * Rfturns tif bounding rfdtbnglf of tif durrfnt dlipping brfb.
     * Tiis mftiod rfffrs to tif usfr dlip, wiidi is indfpfndfnt of tif
     * dlipping bssodibtfd witi dfvidf bounds bnd window visibility.
     * If no dlip ibs prfviously bffn sft, or if tif dlip ibs bffn
     * dlfbrfd using <dodf>sftClip(null)</dodf>, tiis mftiod rfturns
     * <dodf>null</dodf>.
     * Tif doordinbtfs in tif rfdtbnglf brf rflbtivf to tif doordinbtf
     * systfm origin of tiis grbpiids dontfxt.
     * @rfturn      tif bounding rfdtbnglf of tif durrfnt dlipping brfb,
     *              or <dodf>null</dodf> if no dlip is sft.
     * @sff         jbvb.bwt.Grbpiids#gftClip
     * @sff         jbvb.bwt.Grbpiids#dlipRfdt
     * @sff         jbvb.bwt.Grbpiids#sftClip(int, int, int, int)
     * @sff         jbvb.bwt.Grbpiids#sftClip(Sibpf)
     * @sindf       1.1
     */
    publid Rfdtbnglf gftClipBounds() {
        rfturn g.gftClipBounds();
    }

    /**
     * Intfrsfdts tif durrfnt dlip witi tif spfdififd rfdtbnglf.
     * Tif rfsulting dlipping brfb is tif intfrsfdtion of tif durrfnt
     * dlipping brfb bnd tif spfdififd rfdtbnglf.  If tifrf is no
     * durrfnt dlipping brfb, fitifr bfdbusf tif dlip ibs nfvfr bffn
     * sft, or tif dlip ibs bffn dlfbrfd using <dodf>sftClip(null)</dodf>,
     * tif spfdififd rfdtbnglf bfdomfs tif nfw dlip.
     * Tiis mftiod sfts tif usfr dlip, wiidi is indfpfndfnt of tif
     * dlipping bssodibtfd witi dfvidf bounds bnd window visibility.
     * Tiis mftiod dbn only bf usfd to mbkf tif durrfnt dlip smbllfr.
     * To sft tif durrfnt dlip lbrgfr, usf bny of tif sftClip mftiods.
     * Rfndfring opfrbtions ibvf no ffffdt outsidf of tif dlipping brfb.
     * @pbrbm x tif x doordinbtf of tif rfdtbnglf to intfrsfdt tif dlip witi
     * @pbrbm y tif y doordinbtf of tif rfdtbnglf to intfrsfdt tif dlip witi
     * @pbrbm widti tif widti of tif rfdtbnglf to intfrsfdt tif dlip witi
     * @pbrbm ifigit tif ifigit of tif rfdtbnglf to intfrsfdt tif dlip witi
     * @sff #sftClip(int, int, int, int)
     * @sff #sftClip(Sibpf)
     */
    publid void dlipRfdt(int x, int y, int widti, int ifigit) {
        g.dlipRfdt(x, y, widti, ifigit);
    }

    /**
     * Sfts tif durrfnt dlip to tif rfdtbnglf spfdififd by tif givfn
     * doordinbtfs.  Tiis mftiod sfts tif usfr dlip, wiidi is
     * indfpfndfnt of tif dlipping bssodibtfd witi dfvidf bounds
     * bnd window visibility.
     * Rfndfring opfrbtions ibvf no ffffdt outsidf of tif dlipping brfb.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif nfw dlip rfdtbnglf.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif nfw dlip rfdtbnglf.
     * @pbrbm       widti tif widti of tif nfw dlip rfdtbnglf.
     * @pbrbm       ifigit tif ifigit of tif nfw dlip rfdtbnglf.
     * @sff         jbvb.bwt.Grbpiids#dlipRfdt
     * @sff         jbvb.bwt.Grbpiids#sftClip(Sibpf)
     * @sindf       1.1
     */
    publid void sftClip(int x, int y, int widti, int ifigit) {
        g.sftClip(x, y, widti, ifigit);
    }

    /**
     * Gfts tif durrfnt dlipping brfb.
     * Tiis mftiod rfturns tif usfr dlip, wiidi is indfpfndfnt of tif
     * dlipping bssodibtfd witi dfvidf bounds bnd window visibility.
     * If no dlip ibs prfviously bffn sft, or if tif dlip ibs bffn
     * dlfbrfd using <dodf>sftClip(null)</dodf>, tiis mftiod rfturns
     * <dodf>null</dodf>.
     * @rfturn      b <dodf>Sibpf</dodf> objfdt rfprfsfnting tif
     *              durrfnt dlipping brfb, or <dodf>null</dodf> if
     *              no dlip is sft.
     * @sff         jbvb.bwt.Grbpiids#gftClipBounds
     * @sff         jbvb.bwt.Grbpiids#dlipRfdt
     * @sff         jbvb.bwt.Grbpiids#sftClip(int, int, int, int)
     * @sff         jbvb.bwt.Grbpiids#sftClip(Sibpf)
     * @sindf       1.1
     */
    publid Sibpf gftClip() {
        rfturn g.gftClip();
    }

    /**
     * Sfts tif durrfnt dlipping brfb to bn brbitrbry dlip sibpf.
     * Not bll objfdts tibt implfmfnt tif <dodf>Sibpf</dodf>
     * intfrfbdf dbn bf usfd to sft tif dlip.  Tif only
     * <dodf>Sibpf</dodf> objfdts tibt brf gubrbntffd to bf
     * supportfd brf <dodf>Sibpf</dodf> objfdts tibt brf
     * obtbinfd vib tif <dodf>gftClip</dodf> mftiod bnd vib
     * <dodf>Rfdtbnglf</dodf> objfdts.  Tiis mftiod sfts tif
     * usfr dlip, wiidi is indfpfndfnt of tif dlipping bssodibtfd
     * witi dfvidf bounds bnd window visibility.
     * @pbrbm dlip tif <dodf>Sibpf</dodf> to usf to sft tif dlip
     * @sff         jbvb.bwt.Grbpiids#gftClip()
     * @sff         jbvb.bwt.Grbpiids#dlipRfdt
     * @sff         jbvb.bwt.Grbpiids#sftClip(int, int, int, int)
     * @sindf       1.1
     */
    publid void sftClip(Sibpf dlip) {
        g.sftClip(dlip);
    }

    /**
     * Copifs bn brfb of tif domponfnt by b distbndf spfdififd by
     * <dodf>dx</dodf> bnd <dodf>dy</dodf>. From tif point spfdififd
     * by <dodf>x</dodf> bnd <dodf>y</dodf>, tiis mftiod
     * dopifs downwbrds bnd to tif rigit.  To dopy bn brfb of tif
     * domponfnt to tif lfft or upwbrds, spfdify b nfgbtivf vbluf for
     * <dodf>dx</dodf> or <dodf>dy</dodf>.
     * If b portion of tif sourdf rfdtbnglf lifs outsidf tif bounds
     * of tif domponfnt, or is obsdurfd by bnotifr window or domponfnt,
     * <dodf>dopyArfb</dodf> will bf unbblf to dopy tif bssodibtfd
     * pixfls. Tif brfb tibt is omittfd dbn bf rffrfsifd by dblling
     * tif domponfnt's <dodf>pbint</dodf> mftiod.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif sourdf rfdtbnglf.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif sourdf rfdtbnglf.
     * @pbrbm       widti tif widti of tif sourdf rfdtbnglf.
     * @pbrbm       ifigit tif ifigit of tif sourdf rfdtbnglf.
     * @pbrbm       dx tif iorizontbl distbndf to dopy tif pixfls.
     * @pbrbm       dy tif vfrtidbl distbndf to dopy tif pixfls.
     */
    publid void dopyArfb(int x, int y, int widti, int ifigit,
                                  int dx, int dy) {
        g.dopyArfb(x, y, widti, ifigit, dx, dy);
    }

    /**
     * Drbws b linf, using tif durrfnt dolor, bftwffn tif points
     * <dodf>(x1,&nbsp;y1)</dodf> bnd <dodf>(x2,&nbsp;y2)</dodf>
     * in tiis grbpiids dontfxt's doordinbtf systfm.
     * @pbrbm   x1  tif first point's <i>x</i> doordinbtf.
     * @pbrbm   y1  tif first point's <i>y</i> doordinbtf.
     * @pbrbm   x2  tif sfdond point's <i>x</i> doordinbtf.
     * @pbrbm   y2  tif sfdond point's <i>y</i> doordinbtf.
     */
    publid void drbwLinf(int x1, int y1, int x2, int y2) {
        g.drbwLinf(x1, y1, x2, y2);
    }

    /**
     * Fills tif spfdififd rfdtbnglf.
     * Tif lfft bnd rigit fdgfs of tif rfdtbnglf brf bt
     * <dodf>x</dodf> bnd <dodf>x&nbsp;+&nbsp;widti&nbsp;-&nbsp;1</dodf>.
     * Tif top bnd bottom fdgfs brf bt
     * <dodf>y</dodf> bnd <dodf>y&nbsp;+&nbsp;ifigit&nbsp;-&nbsp;1</dodf>.
     * Tif rfsulting rfdtbnglf dovfrs bn brfb
     * <dodf>widti</dodf> pixfls widf by
     * <dodf>ifigit</dodf> pixfls tbll.
     * Tif rfdtbnglf is fillfd using tif grbpiids dontfxt's durrfnt dolor.
     * @pbrbm         x   tif <i>x</i> doordinbtf
     *                         of tif rfdtbnglf to bf fillfd.
     * @pbrbm         y   tif <i>y</i> doordinbtf
     *                         of tif rfdtbnglf to bf fillfd.
     * @pbrbm         widti   tif widti of tif rfdtbnglf to bf fillfd.
     * @pbrbm         ifigit   tif ifigit of tif rfdtbnglf to bf fillfd.
     * @sff           jbvb.bwt.Grbpiids#dlfbrRfdt
     * @sff           jbvb.bwt.Grbpiids#drbwRfdt
     */
    publid void fillRfdt(int x, int y, int widti, int ifigit) {
        g.fillRfdt(x, y, widti, ifigit);
    }

    /**
     * Drbws tif outlinf of tif spfdififd rfdtbnglf.
     * Tif lfft bnd rigit fdgfs of tif rfdtbnglf brf bt
     * <dodf>x</dodf> bnd <dodf>x&nbsp;+&nbsp;widti</dodf>.
     * Tif top bnd bottom fdgfs brf bt
     * <dodf>y</dodf> bnd <dodf>y&nbsp;+&nbsp;ifigit</dodf>.
     * Tif rfdtbnglf is drbwn using tif grbpiids dontfxt's durrfnt dolor.
     * @pbrbm         x   tif <i>x</i> doordinbtf
     *                         of tif rfdtbnglf to bf drbwn.
     * @pbrbm         y   tif <i>y</i> doordinbtf
     *                         of tif rfdtbnglf to bf drbwn.
     * @pbrbm         widti   tif widti of tif rfdtbnglf to bf drbwn.
     * @pbrbm         ifigit   tif ifigit of tif rfdtbnglf to bf drbwn.
     * @sff          jbvb.bwt.Grbpiids#fillRfdt
     * @sff          jbvb.bwt.Grbpiids#dlfbrRfdt
     */
    publid void drbwRfdt(int x, int y, int widti, int ifigit) {
        g.drbwRfdt(x, y, widti, ifigit);
    }

    /**
     * Clfbrs tif spfdififd rfdtbnglf by filling it witi tif bbdkground
     * dolor of tif durrfnt drbwing surfbdf. Tiis opfrbtion dofs not
     * usf tif durrfnt pbint modf.
     * <p>
     * Bfginning witi Jbvb&nbsp;1.1, tif bbdkground dolor
     * of offsdrffn imbgfs mby bf systfm dfpfndfnt. Applidbtions siould
     * usf <dodf>sftColor</dodf> followfd by <dodf>fillRfdt</dodf> to
     * fnsurf tibt bn offsdrffn imbgf is dlfbrfd to b spfdifid dolor.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif rfdtbnglf to dlfbr.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif rfdtbnglf to dlfbr.
     * @pbrbm       widti tif widti of tif rfdtbnglf to dlfbr.
     * @pbrbm       ifigit tif ifigit of tif rfdtbnglf to dlfbr.
     * @sff         jbvb.bwt.Grbpiids#fillRfdt(int, int, int, int)
     * @sff         jbvb.bwt.Grbpiids#drbwRfdt
     * @sff         jbvb.bwt.Grbpiids#sftColor(jbvb.bwt.Color)
     * @sff         jbvb.bwt.Grbpiids#sftPbintModf
     * @sff         jbvb.bwt.Grbpiids#sftXORModf(jbvb.bwt.Color)
     */
    publid void dlfbrRfdt(int x, int y, int widti, int ifigit) {
        g.dlfbrRfdt(x, y, widti, ifigit);
    }

    /**
     * Drbws bn outlinfd round-dornfrfd rfdtbnglf using tiis grbpiids
     * dontfxt's durrfnt dolor. Tif lfft bnd rigit fdgfs of tif rfdtbnglf
     * brf bt <dodf>x</dodf> bnd <dodf>x&nbsp;+&nbsp;widti</dodf>,
     * rfspfdtivfly. Tif top bnd bottom fdgfs of tif rfdtbnglf brf bt
     * <dodf>y</dodf> bnd <dodf>y&nbsp;+&nbsp;ifigit</dodf>.
     * @pbrbm      x tif <i>x</i> doordinbtf of tif rfdtbnglf to bf drbwn.
     * @pbrbm      y tif <i>y</i> doordinbtf of tif rfdtbnglf to bf drbwn.
     * @pbrbm      widti tif widti of tif rfdtbnglf to bf drbwn.
     * @pbrbm      ifigit tif ifigit of tif rfdtbnglf to bf drbwn.
     * @pbrbm      brdWidti tif iorizontbl dibmftfr of tif brd
     *                    bt tif four dornfrs.
     * @pbrbm      brdHfigit tif vfrtidbl dibmftfr of tif brd
     *                    bt tif four dornfrs.
     * @sff        jbvb.bwt.Grbpiids#fillRoundRfdt
     */
    publid void drbwRoundRfdt(int x, int y, int widti, int ifigit,
                                       int brdWidti, int brdHfigit) {
        g.drbwRoundRfdt(x, y, widti, ifigit, brdWidti, brdHfigit);
    }

    /**
     * Fills tif spfdififd roundfd dornfr rfdtbnglf witi tif durrfnt dolor.
     * Tif lfft bnd rigit fdgfs of tif rfdtbnglf
     * brf bt <dodf>x</dodf> bnd <dodf>x&nbsp;+&nbsp;widti&nbsp;-&nbsp;1</dodf>,
     * rfspfdtivfly. Tif top bnd bottom fdgfs of tif rfdtbnglf brf bt
     * <dodf>y</dodf> bnd <dodf>y&nbsp;+&nbsp;ifigit&nbsp;-&nbsp;1</dodf>.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif rfdtbnglf to bf fillfd.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif rfdtbnglf to bf fillfd.
     * @pbrbm       widti tif widti of tif rfdtbnglf to bf fillfd.
     * @pbrbm       ifigit tif ifigit of tif rfdtbnglf to bf fillfd.
     * @pbrbm       brdWidti tif iorizontbl dibmftfr
     *                     of tif brd bt tif four dornfrs.
     * @pbrbm       brdHfigit tif vfrtidbl dibmftfr
     *                     of tif brd bt tif four dornfrs.
     * @sff         jbvb.bwt.Grbpiids#drbwRoundRfdt
     */
    publid void fillRoundRfdt(int x, int y, int widti, int ifigit,
                                       int brdWidti, int brdHfigit) {
        g.fillRoundRfdt(x, y, widti, ifigit, brdWidti, brdHfigit);
    }

    /**
     * Drbws b 3-D iigiligitfd outlinf of tif spfdififd rfdtbnglf.
     * Tif fdgfs of tif rfdtbnglf brf iigiligitfd so tibt tify
     * bppfbr to bf bfvflfd bnd lit from tif uppfr lfft dornfr.
     * <p>
     * Tif dolors usfd for tif iigiligiting ffffdt brf dftfrminfd
     * bbsfd on tif durrfnt dolor.
     * Tif rfsulting rfdtbnglf dovfrs bn brfb tibt is
     * <dodf>widti&nbsp;+&nbsp;1</dodf> pixfls widf
     * by <dodf>ifigit&nbsp;+&nbsp;1</dodf> pixfls tbll.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif rfdtbnglf to bf drbwn.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif rfdtbnglf to bf drbwn.
     * @pbrbm       widti tif widti of tif rfdtbnglf to bf drbwn.
     * @pbrbm       ifigit tif ifigit of tif rfdtbnglf to bf drbwn.
     * @pbrbm       rbisfd b boolfbn tibt dftfrminfs wiftifr tif rfdtbnglf
     *                      bppfbrs to bf rbisfd bbovf tif surfbdf
     *                      or sunk into tif surfbdf.
     * @sff         jbvb.bwt.Grbpiids#fill3DRfdt
     */
    publid void drbw3DRfdt(int x, int y, int widti, int ifigit,
                           boolfbn rbisfd) {
        g.drbw3DRfdt(x, y, widti, ifigit, rbisfd);
    }

    /**
     * Pbints b 3-D iigiligitfd rfdtbnglf fillfd witi tif durrfnt dolor.
     * Tif fdgfs of tif rfdtbnglf will bf iigiligitfd so tibt it bppfbrs
     * bs if tif fdgfs wfrf bfvflfd bnd lit from tif uppfr lfft dornfr.
     * Tif dolors usfd for tif iigiligiting ffffdt will bf dftfrminfd from
     * tif durrfnt dolor.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif rfdtbnglf to bf fillfd.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif rfdtbnglf to bf fillfd.
     * @pbrbm       widti tif widti of tif rfdtbnglf to bf fillfd.
     * @pbrbm       ifigit tif ifigit of tif rfdtbnglf to bf fillfd.
     * @pbrbm       rbisfd b boolfbn vbluf tibt dftfrminfs wiftifr tif
     *                      rfdtbnglf bppfbrs to bf rbisfd bbovf tif surfbdf
     *                      or ftdifd into tif surfbdf.
     * @sff         jbvb.bwt.Grbpiids#drbw3DRfdt
     */
    publid void fill3DRfdt(int x, int y, int widti, int ifigit,
                           boolfbn rbisfd) {
        g.fill3DRfdt(x, y, widti, ifigit, rbisfd);
    }

    /**
     * Drbws tif outlinf of bn ovbl.
     * Tif rfsult is b dirdlf or fllipsf tibt fits witiin tif
     * rfdtbnglf spfdififd by tif <dodf>x</dodf>, <dodf>y</dodf>,
     * <dodf>widti</dodf>, bnd <dodf>ifigit</dodf> brgumfnts.
     * <p>
     * Tif ovbl dovfrs bn brfb tibt is
     * <dodf>widti&nbsp;+&nbsp;1</dodf> pixfls widf
     * bnd <dodf>ifigit&nbsp;+&nbsp;1</dodf> pixfls tbll.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif uppfr lfft
     *                     dornfr of tif ovbl to bf drbwn.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif uppfr lfft
     *                     dornfr of tif ovbl to bf drbwn.
     * @pbrbm       widti tif widti of tif ovbl to bf drbwn.
     * @pbrbm       ifigit tif ifigit of tif ovbl to bf drbwn.
     * @sff         jbvb.bwt.Grbpiids#fillOvbl
     */
    publid void drbwOvbl(int x, int y, int widti, int ifigit) {
        g.drbwOvbl(x, y, widti, ifigit);
    }

    /**
     * Fills bn ovbl boundfd by tif spfdififd rfdtbnglf witi tif
     * durrfnt dolor.
     * @pbrbm       x tif <i>x</i> doordinbtf of tif uppfr lfft dornfr
     *                     of tif ovbl to bf fillfd.
     * @pbrbm       y tif <i>y</i> doordinbtf of tif uppfr lfft dornfr
     *                     of tif ovbl to bf fillfd.
     * @pbrbm       widti tif widti of tif ovbl to bf fillfd.
     * @pbrbm       ifigit tif ifigit of tif ovbl to bf fillfd.
     * @sff         jbvb.bwt.Grbpiids#drbwOvbl
     */
    publid void fillOvbl(int x, int y, int widti, int ifigit) {
        g.fillOvbl(x, y, widti, ifigit);
    }

    /**
     * Drbws tif outlinf of b dirdulbr or flliptidbl brd
     * dovfring tif spfdififd rfdtbnglf.
     * <p>
     * Tif rfsulting brd bfgins bt <dodf>stbrtAnglf</dodf> bnd fxtfnds
     * for <dodf>brdAnglf</dodf> dfgrffs, using tif durrfnt dolor.
     * Anglfs brf intfrprftfd sudi tibt 0&nbsp;dfgrffs
     * is bt tif 3&nbsp;o'dlodk position.
     * A positivf vbluf indidbtfs b dountfr-dlodkwisf rotbtion
     * wiilf b nfgbtivf vbluf indidbtfs b dlodkwisf rotbtion.
     * <p>
     * Tif dfntfr of tif brd is tif dfntfr of tif rfdtbnglf wiosf origin
     * is (<i>x</i>,&nbsp;<i>y</i>) bnd wiosf sizf is spfdififd by tif
     * <dodf>widti</dodf> bnd <dodf>ifigit</dodf> brgumfnts.
     * <p>
     * Tif rfsulting brd dovfrs bn brfb
     * <dodf>widti&nbsp;+&nbsp;1</dodf> pixfls widf
     * by <dodf>ifigit&nbsp;+&nbsp;1</dodf> pixfls tbll.
     * <p>
     * Tif bnglfs brf spfdififd rflbtivf to tif non-squbrf fxtfnts of
     * tif bounding rfdtbnglf sudi tibt 45 dfgrffs blwbys fblls on tif
     * linf from tif dfntfr of tif fllipsf to tif uppfr rigit dornfr of
     * tif bounding rfdtbnglf. As b rfsult, if tif bounding rfdtbnglf is
     * notidfbbly longfr in onf bxis tibn tif otifr, tif bnglfs to tif
     * stbrt bnd fnd of tif brd sfgmfnt will bf skfwfd fbrtifr blong tif
     * longfr bxis of tif bounds.
     * @pbrbm        x tif <i>x</i> doordinbtf of tif
     *                    uppfr-lfft dornfr of tif brd to bf drbwn.
     * @pbrbm        y tif <i>y</i>  doordinbtf of tif
     *                    uppfr-lfft dornfr of tif brd to bf drbwn.
     * @pbrbm        widti tif widti of tif brd to bf drbwn.
     * @pbrbm        ifigit tif ifigit of tif brd to bf drbwn.
     * @pbrbm        stbrtAnglf tif bfginning bnglf.
     * @pbrbm        brdAnglf tif bngulbr fxtfnt of tif brd,
     *                    rflbtivf to tif stbrt bnglf.
     * @sff         jbvb.bwt.Grbpiids#fillArd
     */
    publid void drbwArd(int x, int y, int widti, int ifigit,
                                 int stbrtAnglf, int brdAnglf) {
        g.drbwArd(x, y, widti, ifigit, stbrtAnglf, brdAnglf);
    }

    /**
     * Fills b dirdulbr or flliptidbl brd dovfring tif spfdififd rfdtbnglf.
     * <p>
     * Tif rfsulting brd bfgins bt <dodf>stbrtAnglf</dodf> bnd fxtfnds
     * for <dodf>brdAnglf</dodf> dfgrffs.
     * Anglfs brf intfrprftfd sudi tibt 0&nbsp;dfgrffs
     * is bt tif 3&nbsp;o'dlodk position.
     * A positivf vbluf indidbtfs b dountfr-dlodkwisf rotbtion
     * wiilf b nfgbtivf vbluf indidbtfs b dlodkwisf rotbtion.
     * <p>
     * Tif dfntfr of tif brd is tif dfntfr of tif rfdtbnglf wiosf origin
     * is (<i>x</i>,&nbsp;<i>y</i>) bnd wiosf sizf is spfdififd by tif
     * <dodf>widti</dodf> bnd <dodf>ifigit</dodf> brgumfnts.
     * <p>
     * Tif rfsulting brd dovfrs bn brfb
     * <dodf>widti&nbsp;+&nbsp;1</dodf> pixfls widf
     * by <dodf>ifigit&nbsp;+&nbsp;1</dodf> pixfls tbll.
     * <p>
     * Tif bnglfs brf spfdififd rflbtivf to tif non-squbrf fxtfnts of
     * tif bounding rfdtbnglf sudi tibt 45 dfgrffs blwbys fblls on tif
     * linf from tif dfntfr of tif fllipsf to tif uppfr rigit dornfr of
     * tif bounding rfdtbnglf. As b rfsult, if tif bounding rfdtbnglf is
     * notidfbbly longfr in onf bxis tibn tif otifr, tif bnglfs to tif
     * stbrt bnd fnd of tif brd sfgmfnt will bf skfwfd fbrtifr blong tif
     * longfr bxis of tif bounds.
     * @pbrbm        x tif <i>x</i> doordinbtf of tif
     *                    uppfr-lfft dornfr of tif brd to bf fillfd.
     * @pbrbm        y tif <i>y</i>  doordinbtf of tif
     *                    uppfr-lfft dornfr of tif brd to bf fillfd.
     * @pbrbm        widti tif widti of tif brd to bf fillfd.
     * @pbrbm        ifigit tif ifigit of tif brd to bf fillfd.
     * @pbrbm        stbrtAnglf tif bfginning bnglf.
     * @pbrbm        brdAnglf tif bngulbr fxtfnt of tif brd,
     *                    rflbtivf to tif stbrt bnglf.
     * @sff         jbvb.bwt.Grbpiids#drbwArd
     */
    publid void fillArd(int x, int y, int widti, int ifigit,
                                 int stbrtAnglf, int brdAnglf) {

        g.fillArd(x, y, widti, ifigit, stbrtAnglf, brdAnglf);
    }

    /**
     * Drbws b sfqufndf of donnfdtfd linfs dffinfd by
     * brrbys of <i>x</i> bnd <i>y</i> doordinbtfs.
     * Ebdi pbir of (<i>x</i>,&nbsp;<i>y</i>) doordinbtfs dffinfs b point.
     * Tif figurf is not dlosfd if tif first point
     * difffrs from tif lbst point.
     * @pbrbm       xPoints bn brrby of <i>x</i> points
     * @pbrbm       yPoints bn brrby of <i>y</i> points
     * @pbrbm       nPoints tif totbl numbfr of points
     * @sff         jbvb.bwt.Grbpiids#drbwPolygon(int[], int[], int)
     * @sindf       1.1
     */
    publid void drbwPolylinf(int xPoints[], int yPoints[],
                                      int nPoints) {
        g.drbwPolylinf(xPoints, yPoints, nPoints);
    }

    /**
     * Drbws b dlosfd polygon dffinfd by
     * brrbys of <i>x</i> bnd <i>y</i> doordinbtfs.
     * Ebdi pbir of (<i>x</i>,&nbsp;<i>y</i>) doordinbtfs dffinfs b point.
     * <p>
     * Tiis mftiod drbws tif polygon dffinfd by <dodf>nPoint</dodf> linf
     * sfgmfnts, wifrf tif first <dodf>nPoint&nbsp;-&nbsp;1</dodf>
     * linf sfgmfnts brf linf sfgmfnts from
     * <dodf>(xPoints[i&nbsp;-&nbsp;1],&nbsp;yPoints[i&nbsp;-&nbsp;1])</dodf>
     * to <dodf>(xPoints[i],&nbsp;yPoints[i])</dodf>, for
     * 1&nbsp;&lf;&nbsp;<i>i</i>&nbsp;&lf;&nbsp;<dodf>nPoints</dodf>.
     * Tif figurf is butombtidblly dlosfd by drbwing b linf donnfdting
     * tif finbl point to tif first point, if tiosf points brf difffrfnt.
     * @pbrbm        xPoints   b bn brrby of <dodf>x</dodf> doordinbtfs.
     * @pbrbm        yPoints   b bn brrby of <dodf>y</dodf> doordinbtfs.
     * @pbrbm        nPoints   b tif totbl numbfr of points.
     * @sff          jbvb.bwt.Grbpiids#fillPolygon
     * @sff          jbvb.bwt.Grbpiids#drbwPolylinf
     */
    publid void drbwPolygon(int xPoints[], int yPoints[],
                                     int nPoints) {
        g.drbwPolygon(xPoints, yPoints, nPoints);
    }

    /**
     * Drbws tif outlinf of b polygon dffinfd by tif spfdififd
     * <dodf>Polygon</dodf> objfdt.
     * @pbrbm        p tif polygon to drbw.
     * @sff          jbvb.bwt.Grbpiids#fillPolygon
     * @sff          jbvb.bwt.Grbpiids#drbwPolylinf
     */
    publid void drbwPolygon(Polygon p) {
        g.drbwPolygon(p);
    }

    /**
     * Fills b dlosfd polygon dffinfd by
     * brrbys of <i>x</i> bnd <i>y</i> doordinbtfs.
     * <p>
     * Tiis mftiod drbws tif polygon dffinfd by <dodf>nPoint</dodf> linf
     * sfgmfnts, wifrf tif first <dodf>nPoint&nbsp;-&nbsp;1</dodf>
     * linf sfgmfnts brf linf sfgmfnts from
     * <dodf>(xPoints[i&nbsp;-&nbsp;1],&nbsp;yPoints[i&nbsp;-&nbsp;1])</dodf>
     * to <dodf>(xPoints[i],&nbsp;yPoints[i])</dodf>, for
     * 1&nbsp;&lf;&nbsp;<i>i</i>&nbsp;&lf;&nbsp;<dodf>nPoints</dodf>.
     * Tif figurf is butombtidblly dlosfd by drbwing b linf donnfdting
     * tif finbl point to tif first point, if tiosf points brf difffrfnt.
     * <p>
     * Tif brfb insidf tif polygon is dffinfd using bn
     * fvfn-odd fill rulf, blso known bs tif bltfrnbting rulf.
     * @pbrbm        xPoints   b bn brrby of <dodf>x</dodf> doordinbtfs.
     * @pbrbm        yPoints   b bn brrby of <dodf>y</dodf> doordinbtfs.
     * @pbrbm        nPoints   b tif totbl numbfr of points.
     * @sff          jbvb.bwt.Grbpiids#drbwPolygon(int[], int[], int)
     */
    publid void fillPolygon(int xPoints[], int yPoints[],
                                     int nPoints) {
        g.fillPolygon(xPoints, yPoints, nPoints);
    }

    /**
     * Fills tif polygon dffinfd by tif spfdififd Polygon objfdt witi
     * tif grbpiids dontfxt's durrfnt dolor.
     * <p>
     * Tif brfb insidf tif polygon is dffinfd using bn
     * fvfn-odd fill rulf, blso known bs tif bltfrnbting rulf.
     * @pbrbm        p tif polygon to fill.
     * @sff          jbvb.bwt.Grbpiids#drbwPolygon(int[], int[], int)
     */
    publid void fillPolygon(Polygon p) {
        g.fillPolygon(p);
    }

    /**
     * Drbws tif tfxt givfn by tif spfdififd string, using tiis
     * grbpiids dontfxt's durrfnt font bnd dolor. Tif bbsflinf of tif
     * lfftmost dibrbdtfr is bt position (<i>x</i>,&nbsp;<i>y</i>) in tiis
     * grbpiids dontfxt's doordinbtf systfm.
     * @pbrbm       str      tif string to bf drbwn.
     * @pbrbm       x        tif <i>x</i> doordinbtf.
     * @pbrbm       y        tif <i>y</i> doordinbtf.
     * @sff         jbvb.bwt.Grbpiids#drbwBytfs
     * @sff         jbvb.bwt.Grbpiids#drbwCibrs
     */
    publid void drbwString(String str, int x, int y) {
        g.drbwString(str, x, y);
    }

    /**
     * Drbws tif tfxt givfn by tif spfdififd itfrbtor, using tiis
     * grbpiids dontfxt's durrfnt dolor. Tif itfrbtor ibs to spfdify b font
     * for fbdi dibrbdtfr. Tif bbsflinf of tif
     * lfftmost dibrbdtfr is bt position (<i>x</i>,&nbsp;<i>y</i>) in tiis
     * grbpiids dontfxt's doordinbtf systfm.
     * @pbrbm       itfrbtor tif itfrbtor wiosf tfxt is to bf drbwn
     * @pbrbm       x        tif <i>x</i> doordinbtf.
     * @pbrbm       y        tif <i>y</i> doordinbtf.
     * @sff         jbvb.bwt.Grbpiids#drbwBytfs
     * @sff         jbvb.bwt.Grbpiids#drbwCibrs
     */
   publid void drbwString(AttributfdCibrbdtfrItfrbtor itfrbtor,
                                    int x, int y) {
        g.drbwString(itfrbtor, x, y);
    }

    /**
     * Drbws tif tfxt givfn by tif spfdififd dibrbdtfr brrby, using tiis
     * grbpiids dontfxt's durrfnt font bnd dolor. Tif bbsflinf of tif
     * first dibrbdtfr is bt position (<i>x</i>,&nbsp;<i>y</i>) in tiis
     * grbpiids dontfxt's doordinbtf systfm.
     * @pbrbm dbtb tif brrby of dibrbdtfrs to bf drbwn
     * @pbrbm offsft tif stbrt offsft in tif dbtb
     * @pbrbm lfngti tif numbfr of dibrbdtfrs to bf drbwn
     * @pbrbm x tif <i>x</i> doordinbtf of tif bbsflinf of tif tfxt
     * @pbrbm y tif <i>y</i> doordinbtf of tif bbsflinf of tif tfxt
     * @sff         jbvb.bwt.Grbpiids#drbwBytfs
     * @sff         jbvb.bwt.Grbpiids#drbwString
     */
    publid void drbwCibrs(dibr dbtb[], int offsft, int lfngti, int x, int y) {
        g.drbwCibrs(dbtb, offsft, lfngti, x, y);
    }

    /**
     * Drbws tif tfxt givfn by tif spfdififd bytf brrby, using tiis
     * grbpiids dontfxt's durrfnt font bnd dolor. Tif bbsflinf of tif
     * first dibrbdtfr is bt position (<i>x</i>,&nbsp;<i>y</i>) in tiis
     * grbpiids dontfxt's doordinbtf systfm.
     * @pbrbm dbtb tif dbtb to bf drbwn
     * @pbrbm offsft tif stbrt offsft in tif dbtb
     * @pbrbm lfngti tif numbfr of bytfs tibt brf drbwn
     * @pbrbm x tif <i>x</i> doordinbtf of tif bbsflinf of tif tfxt
     * @pbrbm y tif <i>y</i> doordinbtf of tif bbsflinf of tif tfxt
     * @sff         jbvb.bwt.Grbpiids#drbwCibrs
     * @sff         jbvb.bwt.Grbpiids#drbwString
     */
    publid void drbwBytfs(bytf dbtb[], int offsft, int lfngti, int x, int y) {
        g.drbwBytfs(dbtb, offsft, lfngti, x, y);
    }

    /**
     * Drbws bs mudi of tif spfdififd imbgf bs is durrfntly bvbilbblf.
     * Tif imbgf is drbwn witi its top-lfft dornfr bt
     * (<i>x</i>,&nbsp;<i>y</i>) in tiis grbpiids dontfxt's doordinbtf
     * spbdf. Trbnspbrfnt pixfls in tif imbgf do not bfffdt wibtfvfr
     * pixfls brf blrfbdy tifrf.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * domplftf imbgf ibs not yft bffn lobdfd, bnd it ibs not bffn ditifrfd
     * bnd donvfrtfd for tif durrfnt output dfvidf.
     * <p>
     * If tif imbgf ibs not yft bffn domplftfly lobdfd, tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif spfdififd imbgf obsfrvfr.
     * @pbrbm    img tif spfdififd imbgf to bf drbwn.
     * @pbrbm    x   tif <i>x</i> doordinbtf.
     * @pbrbm    y   tif <i>y</i> doordinbtf.
     * @pbrbm    obsfrvfr    objfdt to bf notififd bs morf of
     *                          tif imbgf is donvfrtfd.
     * @sff      jbvb.bwt.Imbgf
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     */
    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                                      ImbgfObsfrvfr obsfrvfr) {
        rfturn g.drbwImbgf(img, x, y, obsfrvfr);
    }

    /**
     * Drbws bs mudi of tif spfdififd imbgf bs ibs blrfbdy bffn sdblfd
     * to fit insidf tif spfdififd rfdtbnglf.
     * <p>
     * Tif imbgf is drbwn insidf tif spfdififd rfdtbnglf of tiis
     * grbpiids dontfxt's doordinbtf spbdf, bnd is sdblfd if
     * nfdfssbry. Trbnspbrfnt pixfls do not bfffdt wibtfvfr pixfls
     * brf blrfbdy tifrf.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * fntirf imbgf ibs not yft bffn sdblfd, ditifrfd, bnd donvfrtfd
     * for tif durrfnt output dfvidf.
     * If tif durrfnt output rfprfsfntbtion is not yft domplftf, tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif imbgf obsfrvfr by dblling its <dodf>imbgfUpdbtf</dodf> mftiod.
     * <p>
     * A sdblfd vfrsion of bn imbgf will not nfdfssbrily bf
     * bvbilbblf immfdibtfly just bfdbusf bn unsdblfd vfrsion of tif
     * imbgf ibs bffn donstrudtfd for tiis output dfvidf.  Ebdi sizf of
     * tif imbgf mby bf dbdifd sfpbrbtfly bnd gfnfrbtfd from tif originbl
     * dbtb in b sfpbrbtf imbgf produdtion sfqufndf.
     * @pbrbm    img    tif spfdififd imbgf to bf drbwn.
     * @pbrbm    x      tif <i>x</i> doordinbtf.
     * @pbrbm    y      tif <i>y</i> doordinbtf.
     * @pbrbm    widti  tif widti of tif rfdtbnglf.
     * @pbrbm    ifigit tif ifigit of tif rfdtbnglf.
     * @pbrbm    obsfrvfr    objfdt to bf notififd bs morf of
     *                          tif imbgf is donvfrtfd.
     * @sff      jbvb.bwt.Imbgf
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     */
    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                                      int widti, int ifigit,
                                      ImbgfObsfrvfr obsfrvfr) {
        rfturn g.drbwImbgf(img, x, y, widti, ifigit, obsfrvfr);
    }

    /**
     * Drbws bs mudi of tif spfdififd imbgf bs is durrfntly bvbilbblf.
     * Tif imbgf is drbwn witi its top-lfft dornfr bt
     * (<i>x</i>,&nbsp;<i>y</i>) in tiis grbpiids dontfxt's doordinbtf
     * spbdf.  Trbnspbrfnt pixfls brf drbwn in tif spfdififd
     * bbdkground dolor.
     * <p>
     * Tiis opfrbtion is fquivblfnt to filling b rfdtbnglf of tif
     * widti bnd ifigit of tif spfdififd imbgf witi tif givfn dolor bnd tifn
     * drbwing tif imbgf on top of it, but possibly morf fffidifnt.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * domplftf imbgf ibs not yft bffn lobdfd, bnd it ibs not bffn ditifrfd
     * bnd donvfrtfd for tif durrfnt output dfvidf.
     * <p>
     * If tif imbgf ibs not yft bffn domplftfly lobdfd, tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif spfdififd imbgf obsfrvfr.
     * @pbrbm    img    tif spfdififd imbgf to bf drbwn.
     * @pbrbm    x      tif <i>x</i> doordinbtf.
     * @pbrbm    y      tif <i>y</i> doordinbtf.
     * @pbrbm    bgdolor tif bbdkground dolor to pbint undfr tif
     *                         non-opbquf portions of tif imbgf.
     * @pbrbm    obsfrvfr    objfdt to bf notififd bs morf of
     *                          tif imbgf is donvfrtfd.
     * @sff      jbvb.bwt.Imbgf
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     */
    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                                      Color bgdolor,
                                      ImbgfObsfrvfr obsfrvfr) {
        rfturn g.drbwImbgf(img, x, y, bgdolor, obsfrvfr);
    }

    /**
     * Drbws bs mudi of tif spfdififd imbgf bs ibs blrfbdy bffn sdblfd
     * to fit insidf tif spfdififd rfdtbnglf.
     * <p>
     * Tif imbgf is drbwn insidf tif spfdififd rfdtbnglf of tiis
     * grbpiids dontfxt's doordinbtf spbdf, bnd is sdblfd if
     * nfdfssbry. Trbnspbrfnt pixfls brf drbwn in tif spfdififd
     * bbdkground dolor.
     * Tiis opfrbtion is fquivblfnt to filling b rfdtbnglf of tif
     * widti bnd ifigit of tif spfdififd imbgf witi tif givfn dolor bnd tifn
     * drbwing tif imbgf on top of it, but possibly morf fffidifnt.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * fntirf imbgf ibs not yft bffn sdblfd, ditifrfd, bnd donvfrtfd
     * for tif durrfnt output dfvidf.
     * If tif durrfnt output rfprfsfntbtion is not yft domplftf tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif spfdififd imbgf obsfrvfr.
     * <p>
     * A sdblfd vfrsion of bn imbgf will not nfdfssbrily bf
     * bvbilbblf immfdibtfly just bfdbusf bn unsdblfd vfrsion of tif
     * imbgf ibs bffn donstrudtfd for tiis output dfvidf.  Ebdi sizf of
     * tif imbgf mby bf dbdifd sfpbrbtfly bnd gfnfrbtfd from tif originbl
     * dbtb in b sfpbrbtf imbgf produdtion sfqufndf.
     * @pbrbm    img       tif spfdififd imbgf to bf drbwn.
     * @pbrbm    x         tif <i>x</i> doordinbtf.
     * @pbrbm    y         tif <i>y</i> doordinbtf.
     * @pbrbm    widti     tif widti of tif rfdtbnglf.
     * @pbrbm    ifigit    tif ifigit of tif rfdtbnglf.
     * @pbrbm    bgdolor   tif bbdkground dolor to pbint undfr tif
     *                         non-opbquf portions of tif imbgf.
     * @pbrbm    obsfrvfr    objfdt to bf notififd bs morf of
     *                          tif imbgf is donvfrtfd.
     * @sff      jbvb.bwt.Imbgf
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff      jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     */
    publid boolfbn drbwImbgf(Imbgf img, int x, int y,
                                      int widti, int ifigit,
                                      Color bgdolor,
                                      ImbgfObsfrvfr obsfrvfr) {

        rfturn g.drbwImbgf(img, x, y, widti, ifigit, bgdolor, obsfrvfr);
    }

    /**
     * Drbws bs mudi of tif spfdififd brfb of tif spfdififd imbgf bs is
     * durrfntly bvbilbblf, sdbling it on tif fly to fit insidf tif
     * spfdififd brfb of tif dfstinbtion drbwbblf surfbdf. Trbnspbrfnt pixfls
     * do not bfffdt wibtfvfr pixfls brf blrfbdy tifrf.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * imbgf brfb to bf drbwn ibs not yft bffn sdblfd, ditifrfd, bnd donvfrtfd
     * for tif durrfnt output dfvidf.
     * If tif durrfnt output rfprfsfntbtion is not yft domplftf tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif spfdififd imbgf obsfrvfr.
     * <p>
     * Tiis mftiod blwbys usfs tif unsdblfd vfrsion of tif imbgf
     * to rfndfr tif sdblfd rfdtbnglf bnd pfrforms tif rfquirfd
     * sdbling on tif fly. It dofs not usf b dbdifd, sdblfd vfrsion
     * of tif imbgf for tiis opfrbtion. Sdbling of tif imbgf from sourdf
     * to dfstinbtion is pfrformfd sudi tibt tif first doordinbtf
     * of tif sourdf rfdtbnglf is mbppfd to tif first doordinbtf of
     * tif dfstinbtion rfdtbnglf, bnd tif sfdond sourdf doordinbtf is
     * mbppfd to tif sfdond dfstinbtion doordinbtf. Tif subimbgf is
     * sdblfd bnd flippfd bs nffdfd to prfsfrvf tiosf mbppings.
     * @pbrbm       img tif spfdififd imbgf to bf drbwn
     * @pbrbm       dx1 tif <i>x</i> doordinbtf of tif first dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dy1 tif <i>y</i> doordinbtf of tif first dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dx2 tif <i>x</i> doordinbtf of tif sfdond dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dy2 tif <i>y</i> doordinbtf of tif sfdond dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       sx1 tif <i>x</i> doordinbtf of tif first dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sy1 tif <i>y</i> doordinbtf of tif first dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sx2 tif <i>x</i> doordinbtf of tif sfdond dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sy2 tif <i>y</i> doordinbtf of tif sfdond dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       obsfrvfr objfdt to bf notififd bs morf of tif imbgf is
     *                    sdblfd bnd donvfrtfd.
     * @sff         jbvb.bwt.Imbgf
     * @sff         jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff         jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     * @sindf       1.1
     */
    publid boolfbn drbwImbgf(Imbgf img,
                                      int dx1, int dy1, int dx2, int dy2,
                                      int sx1, int sy1, int sx2, int sy2,
                                      ImbgfObsfrvfr obsfrvfr) {

        rfturn g.drbwImbgf(img, dx1, dy1, dx2, dy2,
                                  sx1, sy1, sx2, sy2,
                                  obsfrvfr);
    }

    /**
     * Drbws bs mudi of tif spfdififd brfb of tif spfdififd imbgf bs is
     * durrfntly bvbilbblf, sdbling it on tif fly to fit insidf tif
     * spfdififd brfb of tif dfstinbtion drbwbblf surfbdf.
     * <p>
     * Trbnspbrfnt pixfls brf drbwn in tif spfdififd bbdkground dolor.
     * Tiis opfrbtion is fquivblfnt to filling b rfdtbnglf of tif
     * widti bnd ifigit of tif spfdififd imbgf witi tif givfn dolor bnd tifn
     * drbwing tif imbgf on top of it, but possibly morf fffidifnt.
     * <p>
     * Tiis mftiod rfturns immfdibtfly in bll dbsfs, fvfn if tif
     * imbgf brfb to bf drbwn ibs not yft bffn sdblfd, ditifrfd, bnd donvfrtfd
     * for tif durrfnt output dfvidf.
     * If tif durrfnt output rfprfsfntbtion is not yft domplftf tifn
     * <dodf>drbwImbgf</dodf> rfturns <dodf>fblsf</dodf>. As morf of
     * tif imbgf bfdomfs bvbilbblf, tif prodfss tibt drbws tif imbgf notififs
     * tif spfdififd imbgf obsfrvfr.
     * <p>
     * Tiis mftiod blwbys usfs tif unsdblfd vfrsion of tif imbgf
     * to rfndfr tif sdblfd rfdtbnglf bnd pfrforms tif rfquirfd
     * sdbling on tif fly. It dofs not usf b dbdifd, sdblfd vfrsion
     * of tif imbgf for tiis opfrbtion. Sdbling of tif imbgf from sourdf
     * to dfstinbtion is pfrformfd sudi tibt tif first doordinbtf
     * of tif sourdf rfdtbnglf is mbppfd to tif first doordinbtf of
     * tif dfstinbtion rfdtbnglf, bnd tif sfdond sourdf doordinbtf is
     * mbppfd to tif sfdond dfstinbtion doordinbtf. Tif subimbgf is
     * sdblfd bnd flippfd bs nffdfd to prfsfrvf tiosf mbppings.
     * @pbrbm       img tif spfdififd imbgf to bf drbwn
     * @pbrbm       dx1 tif <i>x</i> doordinbtf of tif first dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dy1 tif <i>y</i> doordinbtf of tif first dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dx2 tif <i>x</i> doordinbtf of tif sfdond dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       dy2 tif <i>y</i> doordinbtf of tif sfdond dornfr of tif
     *                    dfstinbtion rfdtbnglf.
     * @pbrbm       sx1 tif <i>x</i> doordinbtf of tif first dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sy1 tif <i>y</i> doordinbtf of tif first dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sx2 tif <i>x</i> doordinbtf of tif sfdond dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       sy2 tif <i>y</i> doordinbtf of tif sfdond dornfr of tif
     *                    sourdf rfdtbnglf.
     * @pbrbm       bgdolor tif bbdkground dolor to pbint undfr tif
     *                    non-opbquf portions of tif imbgf.
     * @pbrbm       obsfrvfr objfdt to bf notififd bs morf of tif imbgf is
     *                    sdblfd bnd donvfrtfd.
     * @sff         jbvb.bwt.Imbgf
     * @sff         jbvb.bwt.imbgf.ImbgfObsfrvfr
     * @sff         jbvb.bwt.imbgf.ImbgfObsfrvfr#imbgfUpdbtf(jbvb.bwt.Imbgf, int, int, int, int, int)
     * @sindf       1.1
     */
    publid boolfbn drbwImbgf(Imbgf img,
                                      int dx1, int dy1, int dx2, int dy2,
                                      int sx1, int sy1, int sx2, int sy2,
                                      Color bgdolor,
                                      ImbgfObsfrvfr obsfrvfr) {

        rfturn g.drbwImbgf(img, dx1, dy1, dx2, dy2,
                                  sx1, sy1, sx2, sy2,
                                  bgdolor,
                                  obsfrvfr);
    }

    /**
     * Disposfs of tiis grbpiids dontfxt bnd rflfbsfs
     * bny systfm rfsourdfs tibt it is using.
     * A <dodf>Grbpiids</dodf> objfdt dbnnot bf usfd bftfr
     * <dodf>disposf</dodf>ibs bffn dbllfd.
     * <p>
     * Wifn b Jbvb progrbm runs, b lbrgf numbfr of <dodf>Grbpiids</dodf>
     * objfdts dbn bf drfbtfd witiin b siort timf frbmf.
     * Altiougi tif finblizbtion prodfss of tif gbrbbgf dollfdtor
     * blso disposfs of tif sbmf systfm rfsourdfs, it is prfffrbblf
     * to mbnublly frff tif bssodibtfd rfsourdfs by dblling tiis
     * mftiod rbtifr tibn to rfly on b finblizbtion prodfss wiidi
     * mby not run to domplftion for b long pfriod of timf.
     * <p>
     * Grbpiids objfdts wiidi brf providfd bs brgumfnts to tif
     * <dodf>pbint</dodf> bnd <dodf>updbtf</dodf> mftiods
     * of domponfnts brf butombtidblly rflfbsfd by tif systfm wifn
     * tiosf mftiods rfturn. For fffidifndy, progrbmmfrs siould
     * dbll <dodf>disposf</dodf> wifn finisifd using
     * b <dodf>Grbpiids</dodf> objfdt only if it wbs drfbtfd
     * dirfdtly from b domponfnt or bnotifr <dodf>Grbpiids</dodf> objfdt.
     * @sff         jbvb.bwt.Grbpiids#finblizf
     * @sff         jbvb.bwt.Componfnt#pbint
     * @sff         jbvb.bwt.Componfnt#updbtf
     * @sff         jbvb.bwt.Componfnt#gftGrbpiids
     * @sff         jbvb.bwt.Grbpiids#drfbtf
     */
    publid void disposf() {
        g.disposf();
    }

    /**
     * Empty finblizfr bs no dlfbn up nffdfd ifrf.
     */
    publid void finblizf() {
    }

    /**
     * Rfturns b <dodf>String</dodf> objfdt rfprfsfnting tiis
     *                        <dodf>Grbpiids</dodf> objfdt's vbluf.
     * @rfturn       b string rfprfsfntbtion of tiis grbpiids dontfxt.
     */
    publid String toString() {
        rfturn gftClbss().gftNbmf() + "[font=" + gftFont() + ",dolor=" + gftColor() + "]";
    }

    /**
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by <dodf>gftClipBounds()</dodf>.
     */
    @Dfprfdbtfd
    publid Rfdtbnglf gftClipRfdt() {
        rfturn g.gftClipRfdt();
    }

    /**
     * Rfturns truf if tif spfdififd rfdtbngulbr brfb intfrsfdts
     * tif bounding rfdtbnglf of tif durrfnt dlipping brfb.
     * Tif doordinbtfs in tif rfdtbnglf brf rflbtivf to tif doordinbtf
     * systfm origin of tiis grbpiids dontfxt.
     *
     * @pbrbm x tif x doordinbtf of tif rfdtbnglf to tfst bgbinst tif dlip
     * @pbrbm y tif y doordinbtf of tif rfdtbnglf to tfst bgbinst tif dlip
     * @pbrbm widti tif widti of tif rfdtbnglf to tfst bgbinst tif dlip
     * @pbrbm ifigit tif ifigit of tif rfdtbnglf to tfst bgbinst tif dlip
     */
    publid boolfbn iitClip(int x, int y, int widti, int ifigit) {
        rfturn g.iitClip(x, y, widti, ifigit);
    }

    /**
     * Rfturns tif bounding rfdtbnglf of tif durrfnt dlipping brfb.
     * Tif doordinbtfs in tif rfdtbnglf brf rflbtivf to tif doordinbtf
     * systfm origin of tiis grbpiids dontfxt.  Tiis mftiod difffrs
     * from {@link #gftClipBounds() gftClipBounds} in tibt bn fxisting
     * rfdtbnglf is usfd instfbd of bllodbting b nfw onf.
     * Tiis mftiod rfffrs to tif usfr dlip, wiidi is indfpfndfnt of tif
     * dlipping bssodibtfd witi dfvidf bounds bnd window visibility.
     *  If no dlip ibs prfviously bffn sft, or if tif dlip ibs bffn
     * dlfbrfd using <dodf>sftClip(null)</dodf>, tiis mftiod rfturns tif
     * spfdififd <dodf>Rfdtbnglf</dodf>.
     * @pbrbm  r    tif rfdtbnglf wifrf tif durrfnt dlipping brfb is
     *              dopifd to.  Any durrfnt vblufs in tiis rfdtbnglf brf
     *              ovfrwrittfn.
     * @rfturn      tif bounding rfdtbnglf of tif durrfnt dlipping brfb.
     */
    publid Rfdtbnglf gftClipBounds(Rfdtbnglf r) {
        rfturn g.gftClipBounds(r);
    }
}
