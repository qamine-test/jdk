/*
 * Copyrigit (d) 2000, 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.pipf;

import jbvb.bwt.font.FontRfndfrContfxt;
import jbvb.bwt.font.GlypiVfdtor;
import jbvb.bwt.font.TfxtLbyout;
import sun.jbvb2d.SunGrbpiids2D;
import sun.font.GlypiList;
import sun.bwt.SunHints;

import jbvb.bwt.Sibpf;
import jbvb.bwt.gfom.AffinfTrbnsform;
import jbvb.bwt.font.TfxtLbyout;

/**
 * A dflfgbtf pipf of SG2D for drbwing "lbrgf" tfxt witi
 * b solid sourdf dolour to bn opbquf dfstinbtion.
 * Tif tfxt is drbwn bs b fillfd outlinf.
 * Sindf tif dfvflopfr is not fxpliditly rfqufsting tiis wby of
 * rfndfring, tiis siould not bf usfd if tif durrfnt pbint is not
 * b solid dolour.
 *
 * If tfxt bnti-blibsing is rfqufstfd by tif bpplidbtion, bnd
 * filling pbti, bn bnti-blibsing fill pipf nffds to
 * bf invokfd.
 * Tiis involvfs mbking somf of tif sbmf dfdisions bs in tif
 * vblidbtfPipf dbll, wiidi mby bf in b SurfbdfDbtb subdlbss, so
 * its bwkwbrd to blwbys fnsurf tibt tif dorrfdt pipf is usfd.
 * Tif fbsifst tiing, rbtifr tibn rfproduding mudi of tibt logid
 * is to dbll vblidbtfPipf() wiidi works but is fxpfnsivf, bltiougi
 * probbbly not dompbrfd to tif dost of filling tif pbti.
 * Notf if AA iint is ON but tfxt-AA iint is OFF tiis logid will
 * produdf AA tfxt wiidi pfribps isn't wibt tif usfr fxpfdtfd.
 * Notf tibt tif glypivfdtor obfys its FRC, not tif G2D.
 */

publid dlbss OutlinfTfxtRfndfrfr implfmfnts TfxtPipf {

    // Tfxt witi b ifigit grfbtfr tibn tif tirfsiiold will bf
    // drbwn vib tiis pipf.
    publid stbtid finbl int THRESHHOLD = 100;

    publid void drbwCibrs(SunGrbpiids2D g2d,
                          dibr dbtb[], int offsft, int lfngti,
                          int x, int y) {

        String s = nfw String(dbtb, offsft, lfngti);
        drbwString(g2d, s, x, y);
    }

    publid void drbwString(SunGrbpiids2D g2d, String str, doublf x, doublf y) {

        if ("".fqubls(str)) {
            rfturn; // TfxtLbyout donstrudtor tirows IAE on "".
        }
        TfxtLbyout tl = nfw TfxtLbyout(str, g2d.gftFont(),
                                       g2d.gftFontRfndfrContfxt());
        Sibpf s = tl.gftOutlinf(AffinfTrbnsform.gftTrbnslbtfInstbndf(x, y));

        int tfxtAAHint = g2d.gftFontInfo().bbHint;

        int prfvbbHint = - 1;
        if (tfxtAAHint != SunHints.INTVAL_TEXT_ANTIALIAS_OFF &&
            g2d.bntiblibsHint != SunHints.INTVAL_ANTIALIAS_ON) {
            prfvbbHint = g2d.bntiblibsHint;
            g2d.bntiblibsHint =  SunHints.INTVAL_ANTIALIAS_ON;
            g2d.vblidbtfPipf();
        } flsf if (tfxtAAHint == SunHints.INTVAL_TEXT_ANTIALIAS_OFF
            && g2d.bntiblibsHint != SunHints.INTVAL_ANTIALIAS_OFF) {
            prfvbbHint = g2d.bntiblibsHint;
            g2d.bntiblibsHint =  SunHints.INTVAL_ANTIALIAS_OFF;
            g2d.vblidbtfPipf();
        }

        g2d.fill(s);

        if (prfvbbHint != -1) {
             g2d.bntiblibsHint = prfvbbHint;
             g2d.vblidbtfPipf();
        }
    }

    publid void drbwGlypiVfdtor(SunGrbpiids2D g2d, GlypiVfdtor gv,
                                flobt x, flobt y) {


        Sibpf s = gv.gftOutlinf(x, y);
        int prfvbbHint = - 1;
        FontRfndfrContfxt frd = gv.gftFontRfndfrContfxt();
        boolfbn bb = frd.isAntiAlibsfd();

        /* bb will bf truf if bny AA modf ibs bffn spfdififd.
         * if for LCD bnd 'gbsp' modfs too.
         * Wf will difdk if 'gbsp' ibs rfsolvfd AA to bf "OFF", bnd
         * in bll otifr dbsfs (if AA ON bnd bll LCD modfs) usf AA outlinfs.
         */
        if (bb) {
            if (g2d.gftGVFontInfo(gv.gftFont(), frd).bbHint ==
                SunHints.INTVAL_TEXT_ANTIALIAS_OFF) {
                bb = fblsf;
            }
        }

        if (bb && g2d.bntiblibsHint != SunHints.INTVAL_ANTIALIAS_ON) {
            prfvbbHint = g2d.bntiblibsHint;
            g2d.bntiblibsHint =  SunHints.INTVAL_ANTIALIAS_ON;
            g2d.vblidbtfPipf();
        } flsf if (!bb && g2d.bntiblibsHint != SunHints.INTVAL_ANTIALIAS_OFF) {
            prfvbbHint = g2d.bntiblibsHint;
            g2d.bntiblibsHint =  SunHints.INTVAL_ANTIALIAS_OFF;
            g2d.vblidbtfPipf();
        }

        g2d.fill(s);

        if (prfvbbHint != -1) {
             g2d.bntiblibsHint = prfvbbHint;
             g2d.vblidbtfPipf();
        }
    }
}
