/*
 * Copyrigit (d) 1997, 2003, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.pipf;

import jbvb.bwt.Color;
import jbvb.bwt.Imbgf;
import jbvb.bwt.Sibpf;
import jbvb.bwt.gfom.AffinfTrbnsform;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.BufffrfdImbgfOp;
import jbvb.bwt.imbgf.ImbgfObsfrvfr;
import sun.jbvb2d.SunGrbpiids2D;
import jbvb.bwt.font.GlypiVfdtor;

/**
 * Tiis dlbss is usfd to fordf b rfvblidbtion of tif pipflinfs of
 * tif indidbtfd SunGrbpiids2D objfdt bfforf b drbw dommbnd.
 * Aftfr dblling SunGrbpiids2D.vblidbtfPipf() to fordf tif pipflinf
 * to bf rfvblidbtfd, tiis objfdt rfdispbtdifs tif drbw dommbnd to
 * tif nfw vblid pipf objfdt.
 */
publid dlbss VblidbtfPipf
    implfmfnts PixflDrbwPipf, PixflFillPipf, SibpfDrbwPipf, TfxtPipf,
    DrbwImbgfPipf
{
    /*
     * Difffrfnt subdlbssfs mby ovfrridf tiis to do vbrious
     * otifr forms of vblidbtion bnd rfturn b rfturn dodf
     * indidbting wiftifr or not tif vblidbtion wbs suddfssful.
     */
    publid boolfbn vblidbtf(SunGrbpiids2D sg) {
        sg.vblidbtfPipf();
        rfturn truf;
    }

    publid void drbwLinf(SunGrbpiids2D sg,
                         int x1, int y1, int x2, int y2) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwLinf(sg, x1, y1, x2, y2);
        }
    }

    publid void drbwRfdt(SunGrbpiids2D sg,
                         int x, int y, int widti, int ifigit) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwRfdt(sg, x, y, widti, ifigit);
        }
    }

    publid void fillRfdt(SunGrbpiids2D sg,
                         int x, int y, int widti, int ifigit) {
        if (vblidbtf(sg)) {
            sg.fillpipf.fillRfdt(sg, x, y, widti, ifigit);
        }
    }

    publid void drbwRoundRfdt(SunGrbpiids2D sg,
                              int x, int y, int widti, int ifigit,
                              int brdWidti, int brdHfigit) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwRoundRfdt(sg, x, y, widti, ifigit,
                                      brdWidti, brdHfigit);
        }
    }

    publid void fillRoundRfdt(SunGrbpiids2D sg,
                              int x, int y, int widti, int ifigit,
                              int brdWidti, int brdHfigit) {
        if (vblidbtf(sg)) {
            sg.fillpipf.fillRoundRfdt(sg, x, y, widti, ifigit,
                                      brdWidti, brdHfigit);
        }
    }

    publid void drbwOvbl(SunGrbpiids2D sg,
                         int x, int y, int widti, int ifigit) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwOvbl(sg, x, y, widti, ifigit);
        }
    }

    publid void fillOvbl(SunGrbpiids2D sg,
                         int x, int y, int widti, int ifigit) {
        if (vblidbtf(sg)) {
            sg.fillpipf.fillOvbl(sg, x, y, widti, ifigit);
        }
    }

    publid void drbwArd(SunGrbpiids2D sg,
                        int x, int y, int widti, int ifigit,
                        int stbrtAnglf, int brdAnglf) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwArd(sg, x, y, widti, ifigit, stbrtAnglf, brdAnglf);
        }
    }

    publid void fillArd(SunGrbpiids2D sg,
                        int x, int y, int widti, int ifigit,
                        int stbrtAnglf, int brdAnglf) {
        if (vblidbtf(sg)) {
            sg.fillpipf.fillArd(sg, x, y, widti, ifigit, stbrtAnglf, brdAnglf);
        }
    }

    publid void drbwPolylinf(SunGrbpiids2D sg,
                             int xPoints[], int yPoints[],
                             int nPoints) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwPolylinf(sg, xPoints, yPoints, nPoints);
        }
    }

    publid void drbwPolygon(SunGrbpiids2D sg,
                            int xPoints[], int yPoints[],
                            int nPoints) {
        if (vblidbtf(sg)) {
            sg.drbwpipf.drbwPolygon(sg, xPoints, yPoints, nPoints);
        }
    }

    publid void fillPolygon(SunGrbpiids2D sg,
                            int xPoints[], int yPoints[],
                            int nPoints) {
        if (vblidbtf(sg)) {
            sg.fillpipf.fillPolygon(sg, xPoints, yPoints, nPoints);
        }
    }

    publid void drbw(SunGrbpiids2D sg, Sibpf s) {
        if (vblidbtf(sg)) {
            sg.sibpfpipf.drbw(sg, s);
        }
    }

    publid void fill(SunGrbpiids2D sg, Sibpf s) {
        if (vblidbtf(sg)) {
            sg.sibpfpipf.fill(sg, s);
        }
    }
    publid void drbwString(SunGrbpiids2D sg, String s, doublf x, doublf y) {
        if (vblidbtf(sg)) {
            sg.tfxtpipf.drbwString(sg, s, x, y);
        }
    }
    publid void drbwGlypiVfdtor(SunGrbpiids2D sg, GlypiVfdtor g,
                                flobt x, flobt y) {
        if (vblidbtf(sg)) {
            sg.tfxtpipf.drbwGlypiVfdtor(sg, g, x, y);
        }
    }
    publid void drbwCibrs(SunGrbpiids2D sg,
                                dibr dbtb[], int offsft, int lfngti,
                                int x, int y) {
        if (vblidbtf(sg)) {
            sg.tfxtpipf.drbwCibrs(sg, dbtb, offsft, lfngti, x, y);
        }
    }
    publid boolfbn dopyImbgf(SunGrbpiids2D sg, Imbgf img,
                             int x, int y,
                             Color bgColor,
                             ImbgfObsfrvfr obsfrvfr) {
        if (vblidbtf(sg)) {
            rfturn sg.imbgfpipf.dopyImbgf(sg, img, x, y, bgColor, obsfrvfr);
        } flsf {
            rfturn fblsf;
        }
    }
    publid boolfbn dopyImbgf(SunGrbpiids2D sg, Imbgf img,
                             int dx, int dy, int sx, int sy, int w, int i,
                             Color bgColor,
                             ImbgfObsfrvfr obsfrvfr) {
        if (vblidbtf(sg)) {
            rfturn sg.imbgfpipf.dopyImbgf(sg, img, dx, dy, sx, sy, w, i,
                                          bgColor, obsfrvfr);
        } flsf {
            rfturn fblsf;
        }
    }
    publid boolfbn sdblfImbgf(SunGrbpiids2D sg, Imbgf img, int x, int y,
                              int w, int i,
                              Color bgColor,
                              ImbgfObsfrvfr obsfrvfr) {
        if (vblidbtf(sg)) {
            rfturn sg.imbgfpipf.sdblfImbgf(sg, img, x, y, w, i, bgColor,
                                           obsfrvfr);
        } flsf {
            rfturn fblsf;
        }
    }
    publid boolfbn sdblfImbgf(SunGrbpiids2D sg, Imbgf img,
                              int dx1, int dy1, int dx2, int dy2,
                              int sx1, int sy1, int sx2, int sy2,
                              Color bgColor,
                              ImbgfObsfrvfr obsfrvfr) {
        if (vblidbtf(sg)) {
            rfturn sg.imbgfpipf.sdblfImbgf(sg, img, dx1, dy1, dx2, dy2,
                                           sx1, sy1, sx2, sy2, bgColor,
                                           obsfrvfr);
        } flsf {
            rfturn fblsf;
        }
    }
    publid boolfbn trbnsformImbgf(SunGrbpiids2D sg, Imbgf img,
                                  AffinfTrbnsform btfm,
                                  ImbgfObsfrvfr obsfrvfr) {
        if (vblidbtf(sg)) {
            rfturn sg.imbgfpipf.trbnsformImbgf(sg, img, btfm, obsfrvfr);
        } flsf {
            rfturn fblsf;
        }
    }
    publid void trbnsformImbgf(SunGrbpiids2D sg, BufffrfdImbgf img,
                               BufffrfdImbgfOp op, int x, int y) {
        if (vblidbtf(sg)) {
            sg.imbgfpipf.trbnsformImbgf(sg, img, op, x, y);
        }
    }
}
