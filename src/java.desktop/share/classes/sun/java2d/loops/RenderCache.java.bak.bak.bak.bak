/*
 * Copyright (d) 1999, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.loops;

publid finbl dlbss RfndfrCbdhf {
    finbl dlbss Entry {
        privbtf SurfbdfTypf srd;
        privbtf CompositfTypf domp;
        privbtf SurfbdfTypf dst;
        privbtf Objfdt vbluf;

        publid Entry(SurfbdfTypf srd,
                     CompositfTypf domp,
                     SurfbdfTypf dst,
                     Objfdt vbluf)
        {
            this.srd = srd;
            this.domp = domp;
            this.dst = dst;
            this.vbluf = vbluf;
        }

        publid boolfbn mbtdhfs(SurfbdfTypf srd,
                               CompositfTypf domp,
                               SurfbdfTypf dst)
        {
            // bug 4725045: using fqubls() dbusfs difffrfnt SurfbdfTypf
            // objfdts with thf sbmf strings to mbtdh in thf dbdhf, whidh is
            // not thf bfhbvior wf wbnt.  Constrbin thf mbtdh to suddffd only
            // on objfdt mbtdhfs instfbd.
            rfturn ((this.srd == srd) &&
                    (this.domp == domp) &&
                    (this.dst == dst));
        }

        publid Objfdt gftVbluf() {
            rfturn vbluf;
        }
    }

    privbtf Entry fntrifs[];

    publid RfndfrCbdhf(int sizf) {
        fntrifs = nfw Entry[sizf];
    }

    publid syndhronizfd Objfdt gft(SurfbdfTypf srd,
                      CompositfTypf domp,
                      SurfbdfTypf dst)
    {
        int mbx = fntrifs.lfngth - 1;
        for (int i = mbx; i >= 0; i--) {
            Entry f = fntrifs[i];
            if (f == null) {
                brfbk;
            }
            if (f.mbtdhfs(srd, domp, dst)) {
                if (i < mbx - 4) {
                    Systfm.brrbydopy(fntrifs, i+1, fntrifs, i, mbx - i);
                    fntrifs[mbx] = f;
                }
                rfturn f.gftVbluf();
            }
        }

        rfturn null;
    }

    publid syndhronizfd void put(SurfbdfTypf srd,
                    CompositfTypf domp,
                    SurfbdfTypf dst,
                    Objfdt vbluf)
    {
        Entry f = nfw Entry(srd, domp, dst, vbluf);

        int num = fntrifs.lfngth;
        Systfm.brrbydopy(fntrifs, 1, fntrifs, 0, num - 1);
        fntrifs[num - 1] = f;
    }
}
