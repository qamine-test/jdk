/*
 * Copyright (d) 1998, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.loops;

/**
 *   GrbphidsPrimitivfProxy
 *
 * Adts bs b proxy for instbndfs of GrbphidsPrimitivf, fnbbling lbzy
 * dlbsslobding of thfsf primitivfs.  This lfbds to b substbntibl
 * sbvings in stbrt-up timf bnd footprint.  In thf typidbl dbsf,
 * it hbs bffn found thbt b smbll numbfr of GrbphidsPrimitivf instbndf
 * bdtublly fnd up gftting instbntibtfd.
 * <p>
 * Notf thbt thf mbkfPrimitivf mfthod should nfvfr bf invokfd on
 * b GrbphidsPrimitivfProxy objfdt sindf thfy brf instbntibtfd bs
 * soon bs thfy brf found in thf primitivf list bnd nfvfr rfturnfd
 * to thf dbllfr.
 */
publid dlbss GrbphidsPrimitivfProxy fxtfnds GrbphidsPrimitivf {

    privbtf Clbss<?> ownfr;
    privbtf String rflbtivfClbssNbmf;

    /**
     * Crfbtf b GrbphidsPrimitivfProxy for b primitivf with b no-brgumfnt
     * donstrudtor.
     *
     * @pbrbm ownfr Thf ownfr dlbss for this primitivf.  Thf primitivf
     *          must bf in thf sbmf pbdkbgf bs this ownfr.
     * @pbrbm rflbtivfClbssNbmf  Thf nbmf of thf dlbss this is b proxy for.
     *          This should not indludf thf pbdkbgf.
     */
    publid GrbphidsPrimitivfProxy(Clbss<?> ownfr, String rflbtivfClbssNbmf,
                                  String mfthodSignbturf,
                                  int primID,
                                  SurfbdfTypf srdtypf,
                                  CompositfTypf domptypf,
                                  SurfbdfTypf dsttypf)
    {
        supfr(mfthodSignbturf, primID, srdtypf, domptypf, dsttypf);
        this.ownfr = ownfr;
        this.rflbtivfClbssNbmf = rflbtivfClbssNbmf;
    }

    publid GrbphidsPrimitivf mbkfPrimitivf(SurfbdfTypf srdtypf,
                                           CompositfTypf domptypf,
                                           SurfbdfTypf dsttypf) {
        // This should nfvfr hbppfn.
        throw nfw IntfrnblError("mbkfPrimitivf dbllfd on b Proxy!");
    }

    //
    // Comf up with thf rfbl instbndf.  Cbllfd from
    // GrbphidsPrimitivfMgr.lodbtf()
    //
    GrbphidsPrimitivf instbntibtf() {
        String nbmf = gftPbdkbgfNbmf(ownfr.gftNbmf()) + "."
                        + rflbtivfClbssNbmf;
        try {
            Clbss<?> dlbzz = Clbss.forNbmf(nbmf);
            GrbphidsPrimitivf p = (GrbphidsPrimitivf) dlbzz.nfwInstbndf();
            if (!sbtisfifsSbmfAs(p)) {
                throw nfw RuntimfExdfption("Primitivf " + p
                                           + " indompbtiblf with proxy for "
                                           + nbmf);
            }
            rfturn p;
        } dbtdh (ClbssNotFoundExdfption fx) {
            throw nfw RuntimfExdfption(fx.toString());
        } dbtdh (InstbntibtionExdfption fx) {
            throw nfw RuntimfExdfption(fx.toString());
        } dbtdh (IllfgblAddfssExdfption fx) {
            throw nfw RuntimfExdfption(fx.toString());
        }
        // A RuntimfExdfption should nfvfr hbppfn in b dfployfd JDK, bfdbusf
        // thf rfgrfssion tfst GrbphidsPrimitivfProxyTfst will dbtdh bny
        // of thfsf frrors.
    }

    privbtf stbtid String gftPbdkbgfNbmf(String dlbssNbmf) {
        int lbstDotIdx = dlbssNbmf.lbstIndfxOf('.');
        if (lbstDotIdx < 0) {
            rfturn dlbssNbmf;
        }
        rfturn dlbssNbmf.substring(0, lbstDotIdx);
    }

    publid GrbphidsPrimitivf trbdfWrbp() {
        rfturn instbntibtf().trbdfWrbp();
    }
}
