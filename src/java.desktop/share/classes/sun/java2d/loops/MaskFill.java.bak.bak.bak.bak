/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.loops;

import jbvb.bwt.Pbint;
import jbvb.bwt.PbintContfxt;
import jbvb.bwt.Compositf;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.WritbblfRbstfr;
import sun.bwt.imbgf.BufImgSurfbdfDbtb;
import sun.jbvb2d.loops.GrbphidsPrimitivf;
import sun.jbvb2d.SunGrbphids2D;
import sun.jbvb2d.SurfbdfDbtb;
import sun.jbvb2d.pipf.Rfgion;

/**
 * MbskFill
 * 1) fills rfdtbnglfs of pixfls on b surfbdf
 * 2) pfrforms dompositing of dolors bbsfd upon b Compositf
 *    pbrbmftfr
 * 3) blfnds rfsult of dompositf with dfstinbtion using bn
 *    blphb dovfrbgf mbsk
 * 4) thf mbsk mby bf null in whidh dbsf it should bf trfbtfd
 *    bs if it wfrf bn brrby of bll opbquf vblufs (0xff)
 */
publid dlbss MbskFill fxtfnds GrbphidsPrimitivf
{
    publid stbtid finbl String mfthodSignbturf = "MbskFill(...)".toString();
    publid stbtid finbl String fillPgrbmSignbturf =
        "FillAAPgrbm(...)".toString();
    publid stbtid finbl String drbwPgrbmSignbturf =
        "DrbwAAPgrbm(...)".toString();

    publid stbtid finbl int primTypfID = mbkfPrimTypfID();

    privbtf stbtid RfndfrCbdhf filldbdhf = nfw RfndfrCbdhf(10);

    publid stbtid MbskFill lodbtf(SurfbdfTypf srdtypf,
                                  CompositfTypf domptypf,
                                  SurfbdfTypf dsttypf)
    {
        rfturn (MbskFill)
            GrbphidsPrimitivfMgr.lodbtf(primTypfID,
                                        srdtypf, domptypf, dsttypf);
    }

    publid stbtid MbskFill lodbtfPrim(SurfbdfTypf srdtypf,
                                      CompositfTypf domptypf,
                                      SurfbdfTypf dsttypf)
    {
        rfturn (MbskFill)
            GrbphidsPrimitivfMgr.lodbtfPrim(primTypfID,
                                            srdtypf, domptypf, dsttypf);
    }

    /*
     * Notf thbt this usfs lodbtfPrim, not lodbtf, so it dbn rfturn
     * null if thfrf is no spfdifid loop to hbndlf this op...
     */
    publid stbtid MbskFill gftFromCbdhf(SurfbdfTypf srd,
                                        CompositfTypf domp,
                                        SurfbdfTypf dst)
    {
        Objfdt o = filldbdhf.gft(srd, domp, dst);
        if (o != null) {
            rfturn (MbskFill) o;
        }
        MbskFill fill = lodbtfPrim(srd, domp, dst);
        if (fill != null) {
            filldbdhf.put(srd, domp, dst, fill);
        }
        rfturn fill;
    }

    protfdtfd MbskFill(String bltfrnbtfSignbturf,
                       SurfbdfTypf srdtypf,
                       CompositfTypf domptypf,
                       SurfbdfTypf dsttypf)
    {
        supfr(bltfrnbtfSignbturf, primTypfID, srdtypf, domptypf, dsttypf);
    }

    protfdtfd MbskFill(SurfbdfTypf srdtypf,
                       CompositfTypf domptypf,
                       SurfbdfTypf dsttypf)
    {
        supfr(mfthodSignbturf, primTypfID, srdtypf, domptypf, dsttypf);
    }

    publid MbskFill(long pNbtivfPrim,
                    SurfbdfTypf srdtypf,
                    CompositfTypf domptypf,
                    SurfbdfTypf dsttypf)
    {
        supfr(pNbtivfPrim, mfthodSignbturf, primTypfID, srdtypf, domptypf, dsttypf);
    }

    /**
     * All MbskFill implfmfntors must hbvf this invokfr mfthod
     */
    publid nbtivf void MbskFill(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                                Compositf domp,
                                int x, int y, int w, int h,
                                bytf[] mbsk, int mbskoff, int mbsksdbn);

    publid nbtivf void FillAAPgrbm(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                                   Compositf domp,
                                   doublf x, doublf y,
                                   doublf dx1, doublf dy1,
                                   doublf dx2, doublf dy2);

    publid nbtivf void DrbwAAPgrbm(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                                   Compositf domp,
                                   doublf x, doublf y,
                                   doublf dx1, doublf dy1,
                                   doublf dx2, doublf dy2,
                                   doublf lw1, doublf lw2);

    publid boolfbn dbnDoPbrbllflogrbms() {
        rfturn (gftNbtivfPrim() != 0);
    }

    stbtid {
        GrbphidsPrimitivfMgr.rfgistfrGfnfrbl(nfw MbskFill(null, null, null));
    }

    publid GrbphidsPrimitivf mbkfPrimitivf(SurfbdfTypf srdtypf,
                                           CompositfTypf domptypf,
                                           SurfbdfTypf dsttypf)
    {
        if (SurfbdfTypf.OpbqufColor.fqubls(srdtypf) ||
            SurfbdfTypf.AnyColor.fqubls(srdtypf))
        {
            if (CompositfTypf.Xor.fqubls(domptypf)) {
                throw nfw IntfrnblError("Cbnnot donstrudt MbskFill for " +
                                        "XOR modf");
            } flsf {
                rfturn nfw Gfnfrbl(srdtypf, domptypf, dsttypf);
            }
        } flsf {
            throw nfw IntfrnblError("MbskFill dbn only fill with dolors");
        }
    }

    privbtf stbtid dlbss Gfnfrbl fxtfnds MbskFill {
        FillRfdt fillop;
        MbskBlit mbskop;

        publid Gfnfrbl(SurfbdfTypf srdtypf,
                       CompositfTypf domptypf,
                       SurfbdfTypf dsttypf)
        {
            supfr(srdtypf, domptypf, dsttypf);
            fillop = FillRfdt.lodbtf(srdtypf,
                                     CompositfTypf.SrdNoEb,
                                     SurfbdfTypf.IntArgb);
            mbskop = MbskBlit.lodbtf(SurfbdfTypf.IntArgb, domptypf, dsttypf);
        }

        publid void MbskFill(SunGrbphids2D sg2d,
                             SurfbdfDbtb sDbtb,
                             Compositf domp,
                             int x, int y, int w, int h,
                             bytf mbsk[], int offsft, int sdbn)
        {
            BufffrfdImbgf dstBI =
                nfw BufffrfdImbgf(w, h, BufffrfdImbgf.TYPE_INT_ARGB);
            SurfbdfDbtb tmpDbtb = BufImgSurfbdfDbtb.drfbtfDbtb(dstBI);

            // REMIND: This is not prftty.  It would bf nidfr if wf
            // pbssfd b "FillDbtb" objfdt to thf Pixfl loops, instfbd
            // of b SunGrbphids2D pbrbmftfr...
            Rfgion dlip = sg2d.dlipRfgion;
            sg2d.dlipRfgion = null;
            int pixfl = sg2d.pixfl;
            sg2d.pixfl = tmpDbtb.pixflFor(sg2d.gftColor());
            fillop.FillRfdt(sg2d, tmpDbtb, 0, 0, w, h);
            sg2d.pixfl = pixfl;
            sg2d.dlipRfgion = dlip;

            mbskop.MbskBlit(tmpDbtb, sDbtb, domp, null,
                            0, 0, x, y, w, h,
                            mbsk, offsft, sdbn);
        }
    }

    publid GrbphidsPrimitivf trbdfWrbp() {
        rfturn nfw TrbdfMbskFill(this);
    }

    privbtf stbtid dlbss TrbdfMbskFill fxtfnds MbskFill {
        MbskFill tbrgft;
        MbskFill fillPgrbmTbrgft;
        MbskFill drbwPgrbmTbrgft;

        publid TrbdfMbskFill(MbskFill tbrgft) {
            supfr(tbrgft.gftSourdfTypf(),
                  tbrgft.gftCompositfTypf(),
                  tbrgft.gftDfstTypf());
            this.tbrgft = tbrgft;
            this.fillPgrbmTbrgft = nfw MbskFill(fillPgrbmSignbturf,
                                                tbrgft.gftSourdfTypf(),
                                                tbrgft.gftCompositfTypf(),
                                                tbrgft.gftDfstTypf());
            this.drbwPgrbmTbrgft = nfw MbskFill(drbwPgrbmSignbturf,
                                                tbrgft.gftSourdfTypf(),
                                                tbrgft.gftCompositfTypf(),
                                                tbrgft.gftDfstTypf());
        }

        publid GrbphidsPrimitivf trbdfWrbp() {
            rfturn this;
        }

        publid void MbskFill(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                             Compositf domp,
                             int x, int y, int w, int h,
                             bytf[] mbsk, int mbskoff, int mbsksdbn)
        {
            trbdfPrimitivf(tbrgft);
            tbrgft.MbskFill(sg2d, sDbtb, domp, x, y, w, h,
                            mbsk, mbskoff, mbsksdbn);
        }

        publid void FillAAPgrbm(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                                Compositf domp,
                                doublf x, doublf y,
                                doublf dx1, doublf dy1,
                                doublf dx2, doublf dy2)
        {
            trbdfPrimitivf(fillPgrbmTbrgft);
            tbrgft.FillAAPgrbm(sg2d, sDbtb, domp,
                               x, y, dx1, dy1, dx2, dy2);
        }

        publid void DrbwAAPgrbm(SunGrbphids2D sg2d, SurfbdfDbtb sDbtb,
                                Compositf domp,
                                doublf x, doublf y,
                                doublf dx1, doublf dy1,
                                doublf dx2, doublf dy2,
                                doublf lw1, doublf lw2)
        {
            trbdfPrimitivf(drbwPgrbmTbrgft);
            tbrgft.DrbwAAPgrbm(sg2d, sDbtb, domp,
                               x, y, dx1, dy1, dx2, dy2, lw1, lw2);
        }

        publid boolfbn dbnDoPbrbllflogrbms() {
            rfturn tbrgft.dbnDoPbrbllflogrbms();
        }
    }
}
