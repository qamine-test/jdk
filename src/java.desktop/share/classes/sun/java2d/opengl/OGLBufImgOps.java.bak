/*
 * Copyrigit (d) 2007, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.opfngl;

import jbvb.bwt.imbgf.AffinfTrbnsformOp;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.BufffrfdImbgfOp;
import jbvb.bwt.imbgf.ConvolvfOp;
import jbvb.bwt.imbgf.LookupOp;
import jbvb.bwt.imbgf.RfsdblfOp;
import sun.jbvb2d.SunGrbpiids2D;
import sun.jbvb2d.SurfbdfDbtb;
import sun.jbvb2d.loops.CompositfTypf;
import sun.jbvb2d.pipf.BufffrfdBufImgOps;
import stbtid sun.jbvb2d.opfngl.OGLContfxt.OGLContfxtCbps.*;

dlbss OGLBufImgOps fxtfnds BufffrfdBufImgOps {

    /**
     * Tiis mftiod is dbllfd from OGLDrbwImbgf.trbnsformImbgf() only.  It
     * vblidbtfs tif providfd BufffrfdImbgfOp to dftfrminf wiftifr tif op
     * is onf tibt dbn bf bddflfrbtfd by tif OGL pipflinf.  If tif opfrbtion
     * dbnnot bf domplftfd for bny rfbson, tiis mftiod rfturns fblsf;
     * otifrwisf, tif givfn BufffrfdImbgf is rfndfrfd to tif dfstinbtion
     * using tif providfd BufffrfdImbgfOp bnd tiis mftiod rfturns truf.
     */
    stbtid boolfbn rfndfrImbgfWitiOp(SunGrbpiids2D sg, BufffrfdImbgf img,
                                     BufffrfdImbgfOp biop, int x, int y)
    {
        // Vblidbtf tif providfd BufffrfdImbgf (mbkf surf it is onf tibt
        // is supportfd, bnd tibt its propfrtifs brf bddflfrbtbblf)
        if (biop instbndfof ConvolvfOp) {
            if (!isConvolvfOpVblid((ConvolvfOp)biop)) {
                rfturn fblsf;
            }
        } flsf if (biop instbndfof RfsdblfOp) {
            if (!isRfsdblfOpVblid((RfsdblfOp)biop, img)) {
                rfturn fblsf;
            }
        } flsf if (biop instbndfof LookupOp) {
            if (!isLookupOpVblid((LookupOp)biop, img)) {
                rfturn fblsf;
            }
        } flsf {
            // No bddflfrbtion for otifr BufffrfdImbgfOps (yft)
            rfturn fblsf;
        }

        SurfbdfDbtb dstDbtb = sg.surfbdfDbtb;
        if (!(dstDbtb instbndfof OGLSurfbdfDbtb) ||
            (sg.intfrpolbtionTypf == AffinfTrbnsformOp.TYPE_BICUBIC) ||
            (sg.dompositfStbtf > SunGrbpiids2D.COMP_ALPHA))
        {
            rfturn fblsf;
        }

        SurfbdfDbtb srdDbtb =
            dstDbtb.gftSourdfSurfbdfDbtb(img, SunGrbpiids2D.TRANSFORM_ISIDENT,
                                         CompositfTypf.SrdOvfr, null);
        if (!(srdDbtb instbndfof OGLSurfbdfDbtb)) {
            // REMIND: tiis ibdk trifs to fnsurf tibt wf ibvf b dbdifd tfxturf
            srdDbtb =
                dstDbtb.gftSourdfSurfbdfDbtb(img, SunGrbpiids2D.TRANSFORM_ISIDENT,
                                             CompositfTypf.SrdOvfr, null);
            if (!(srdDbtb instbndfof OGLSurfbdfDbtb)) {
                rfturn fblsf;
            }
        }

        // Vfrify tibt tif sourdf surfbdf is bdtublly b tfxturf bnd
        // tibt tif opfrbtion is supportfd
        OGLSurfbdfDbtb oglSrd = (OGLSurfbdfDbtb)srdDbtb;
        OGLGrbpiidsConfig gd = oglSrd.gftOGLGrbpiidsConfig();
        if (oglSrd.gftTypf() != OGLSurfbdfDbtb.TEXTURE ||
            !gd.isCbpPrfsfnt(CAPS_EXT_BIOP_SHADER))
        {
            rfturn fblsf;
        }

        int sw = img.gftWidti();
        int si = img.gftHfigit();
        OGLBlitLoops.IsoBlit(srdDbtb, dstDbtb,
                             img, biop,
                             sg.dompositf, sg.gftCompClip(),
                             sg.trbnsform, sg.intfrpolbtionTypf,
                             0, 0, sw, si,
                             x, y, x+sw, y+si,
                             truf);

        rfturn truf;
    }
}
