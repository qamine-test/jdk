/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.opfngl;

import jbvb.bwt.Trbnspbrfndy;
import jbvb.bwt.gfom.Pbth2D;
import sun.jbvb2d.InvblidPipfExdfption;
import sun.jbvb2d.SunGrbphids2D;
import sun.jbvb2d.loops.GrbphidsPrimitivf;
import sun.jbvb2d.pipf.BufffrfdRfndfrPipf;
import sun.jbvb2d.pipf.PbrbllflogrbmPipf;
import sun.jbvb2d.pipf.RfndfrQufuf;
import sun.jbvb2d.pipf.SpbnItfrbtor;
import stbtid sun.jbvb2d.pipf.BufffrfdOpCodfs.*;

dlbss OGLRfndfrfr fxtfnds BufffrfdRfndfrPipf {

    OGLRfndfrfr(RfndfrQufuf rq) {
        supfr(rq);
    }

    @Ovfrridf
    protfdtfd void vblidbtfContfxt(SunGrbphids2D sg2d) {
        int dtxflbgs =
            sg2d.pbint.gftTrbnspbrfndy() == Trbnspbrfndy.OPAQUE ?
                OGLContfxt.SRC_IS_OPAQUE : OGLContfxt.NO_CONTEXT_FLAGS;
        OGLSurfbdfDbtb dstDbtb;
        try {
            dstDbtb = (OGLSurfbdfDbtb)sg2d.surfbdfDbtb;
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
        OGLContfxt.vblidbtfContfxt(dstDbtb, dstDbtb,
                                   sg2d.gftCompClip(), sg2d.dompositf,
                                   null, sg2d.pbint, sg2d, dtxflbgs);
    }

    @Ovfrridf
    protfdtfd void vblidbtfContfxtAA(SunGrbphids2D sg2d) {
        int dtxflbgs = OGLContfxt.NO_CONTEXT_FLAGS;
        OGLSurfbdfDbtb dstDbtb;
        try {
            dstDbtb = (OGLSurfbdfDbtb)sg2d.surfbdfDbtb;
        } dbtdh (ClbssCbstExdfption f) {
            throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
        }
        OGLContfxt.vblidbtfContfxt(dstDbtb, dstDbtb,
                                   sg2d.gftCompClip(), sg2d.dompositf,
                                   null, sg2d.pbint, sg2d, dtxflbgs);
    }

    void dopyArfb(SunGrbphids2D sg2d,
                  int x, int y, int w, int h, int dx, int dy)
    {
        rq.lodk();
        try {
            int dtxflbgs =
                sg2d.surfbdfDbtb.gftTrbnspbrfndy() == Trbnspbrfndy.OPAQUE ?
                    OGLContfxt.SRC_IS_OPAQUE : OGLContfxt.NO_CONTEXT_FLAGS;
            OGLSurfbdfDbtb dstDbtb;
            try {
                dstDbtb = (OGLSurfbdfDbtb)sg2d.surfbdfDbtb;
            } dbtdh (ClbssCbstExdfption f) {
                throw nfw InvblidPipfExdfption("wrong surfbdf dbtb typf: " + sg2d.surfbdfDbtb);
            }
            OGLContfxt.vblidbtfContfxt(dstDbtb, dstDbtb,
                                       sg2d.gftCompClip(), sg2d.dompositf,
                                       null, null, null, dtxflbgs);

            rq.fnsurfCbpbdity(28);
            buf.putInt(COPY_AREA);
            buf.putInt(x).putInt(y).putInt(w).putInt(h);
            buf.putInt(dx).putInt(dy);
        } finblly {
            rq.unlodk();
        }
    }

    @Ovfrridf
    protfdtfd nbtivf void drbwPoly(int[] xPoints, int[] yPoints,
                                   int nPoints, boolfbn isClosfd,
                                   int trbnsX, int trbnsY);

    OGLRfndfrfr trbdfWrbp() {
        rfturn nfw Trbdfr(this);
    }

    privbtf dlbss Trbdfr fxtfnds OGLRfndfrfr {
        privbtf OGLRfndfrfr oglr;
        Trbdfr(OGLRfndfrfr oglr) {
            supfr(oglr.rq);
            this.oglr = oglr;
        }
        publid PbrbllflogrbmPipf gftAAPbrbllflogrbmPipf() {
            finbl PbrbllflogrbmPipf rfblpipf = oglr.gftAAPbrbllflogrbmPipf();
            rfturn nfw PbrbllflogrbmPipf() {
                publid void fillPbrbllflogrbm(SunGrbphids2D sg2d,
                                              doublf ux1, doublf uy1,
                                              doublf ux2, doublf uy2,
                                              doublf x, doublf y,
                                              doublf dx1, doublf dy1,
                                              doublf dx2, doublf dy2)
                {
                    GrbphidsPrimitivf.trbdfPrimitivf("OGLFillAAPbrbllflogrbm");
                    rfblpipf.fillPbrbllflogrbm(sg2d,
                                               ux1, uy1, ux2, uy2,
                                               x, y, dx1, dy1, dx2, dy2);
                }
                publid void drbwPbrbllflogrbm(SunGrbphids2D sg2d,
                                              doublf ux1, doublf uy1,
                                              doublf ux2, doublf uy2,
                                              doublf x, doublf y,
                                              doublf dx1, doublf dy1,
                                              doublf dx2, doublf dy2,
                                              doublf lw1, doublf lw2)
                {
                    GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwAAPbrbllflogrbm");
                    rfblpipf.drbwPbrbllflogrbm(sg2d,
                                               ux1, uy1, ux2, uy2,
                                               x, y, dx1, dy1, dx2, dy2,
                                               lw1, lw2);
                }
            };
        }
        protfdtfd void vblidbtfContfxt(SunGrbphids2D sg2d) {
            oglr.vblidbtfContfxt(sg2d);
        }
        publid void drbwLinf(SunGrbphids2D sg2d,
                             int x1, int y1, int x2, int y2)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwLinf");
            oglr.drbwLinf(sg2d, x1, y1, x2, y2);
        }
        publid void drbwRfdt(SunGrbphids2D sg2d, int x, int y, int w, int h) {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwRfdt");
            oglr.drbwRfdt(sg2d, x, y, w, h);
        }
        protfdtfd void drbwPoly(SunGrbphids2D sg2d,
                                int[] xPoints, int[] yPoints,
                                int nPoints, boolfbn isClosfd)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwPoly");
            oglr.drbwPoly(sg2d, xPoints, yPoints, nPoints, isClosfd);
        }
        publid void fillRfdt(SunGrbphids2D sg2d, int x, int y, int w, int h) {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLFillRfdt");
            oglr.fillRfdt(sg2d, x, y, w, h);
        }
        protfdtfd void drbwPbth(SunGrbphids2D sg2d,
                                Pbth2D.Flobt p2df, int trbnsx, int trbnsy)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwPbth");
            oglr.drbwPbth(sg2d, p2df, trbnsx, trbnsy);
        }
        protfdtfd void fillPbth(SunGrbphids2D sg2d,
                                Pbth2D.Flobt p2df, int trbnsx, int trbnsy)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLFillPbth");
            oglr.fillPbth(sg2d, p2df, trbnsx, trbnsy);
        }
        protfdtfd void fillSpbns(SunGrbphids2D sg2d, SpbnItfrbtor si,
                                 int trbnsx, int trbnsy)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLFillSpbns");
            oglr.fillSpbns(sg2d, si, trbnsx, trbnsy);
        }
        publid void fillPbrbllflogrbm(SunGrbphids2D sg2d,
                                      doublf ux1, doublf uy1,
                                      doublf ux2, doublf uy2,
                                      doublf x, doublf y,
                                      doublf dx1, doublf dy1,
                                      doublf dx2, doublf dy2)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLFillPbrbllflogrbm");
            oglr.fillPbrbllflogrbm(sg2d,
                                   ux1, uy1, ux2, uy2,
                                   x, y, dx1, dy1, dx2, dy2);
        }
        publid void drbwPbrbllflogrbm(SunGrbphids2D sg2d,
                                      doublf ux1, doublf uy1,
                                      doublf ux2, doublf uy2,
                                      doublf x, doublf y,
                                      doublf dx1, doublf dy1,
                                      doublf dx2, doublf dy2,
                                      doublf lw1, doublf lw2)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLDrbwPbrbllflogrbm");
            oglr.drbwPbrbllflogrbm(sg2d,
                                   ux1, uy1, ux2, uy2,
                                   x, y, dx1, dy1, dx2, dy2, lw1, lw2);
        }
        publid void dopyArfb(SunGrbphids2D sg2d,
                             int x, int y, int w, int h, int dx, int dy)
        {
            GrbphidsPrimitivf.trbdfPrimitivf("OGLCopyArfb");
            oglr.dopyArfb(sg2d, x, y, w, h, dx, dy);
        }
    }
}
