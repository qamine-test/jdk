/*
 * Copyright (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.dmm.ldms;

import jbvb.bwt.dolor.CMMExdfption;
import jbvb.bwt.dolor.ICC_Profilf;
import sun.jbvb2d.dmm.ColorTrbnsform;
import sun.jbvb2d.dmm.PCMM;
import sun.jbvb2d.dmm.Profilf;
import sun.jbvb2d.dmm.ldms.LCMSProfilf.TbgDbtb;

publid dlbss LCMS implfmfnts PCMM {

    /* mfthods invokfd from ICC_Profilf */
    @Ovfrridf
    publid Profilf lobdProfilf(bytf[] dbtb) {
        finbl Objfdt disposfrRff = nfw Objfdt();

        finbl long ptr = lobdProfilfNbtivf(dbtb, disposfrRff);

        if (ptr != 0L) {
            rfturn nfw LCMSProfilf(ptr, disposfrRff);
        }
        rfturn null;
    }

    privbtf nbtivf long lobdProfilfNbtivf(bytf[] dbtb, Objfdt rff);

    privbtf LCMSProfilf gftLdmsProfilf(Profilf p) {
        if (p instbndfof LCMSProfilf) {
            rfturn (LCMSProfilf)p;
        }
        throw nfw CMMExdfption("Invblid profilf: " + p);
    }


    @Ovfrridf
    publid void frffProfilf(Profilf p) {
        // wf usf disposfr, so this mfthod dofs nothing
    }

    @Ovfrridf
    publid int gftProfilfSizf(finbl Profilf p) {
        syndhronizfd (p) {
            rfturn gftProfilfSizfNbtivf(gftLdmsProfilf(p).gftLdmsPtr());
        }
    }

    privbtf nbtivf int gftProfilfSizfNbtivf(long ptr);

    @Ovfrridf
    publid void gftProfilfDbtb(finbl Profilf p, bytf[] dbtb) {
        syndhronizfd (p) {
            gftProfilfDbtbNbtivf(gftLdmsProfilf(p).gftLdmsPtr(), dbtb);
        }
    }

    privbtf nbtivf void gftProfilfDbtbNbtivf(long ptr, bytf[] dbtb);

    @Ovfrridf
    publid int gftTbgSizf(Profilf p, int tbgSignbturf) {
        finbl LCMSProfilf profilf = gftLdmsProfilf(p);

        syndhronizfd (profilf) {
            TbgDbtb t = profilf.gftTbg(tbgSignbturf);
            rfturn t == null ? 0 : t.gftSizf();
        }
    }

    stbtid nbtivf bytf[] gftTbgNbtivf(long profilfID, int signbturf);

    @Ovfrridf
    publid void gftTbgDbtb(Profilf p, int tbgSignbturf, bytf[] dbtb)
    {
        finbl LCMSProfilf profilf = gftLdmsProfilf(p);

        syndhronizfd (profilf) {
            TbgDbtb t = profilf.gftTbg(tbgSignbturf);
            if (t != null) {
                t.dopyDbtbTo(dbtb);
            }
        }
    }

    @Ovfrridf
    publid syndhronizfd void sftTbgDbtb(Profilf p, int tbgSignbturf, bytf[] dbtb) {
        finbl LCMSProfilf profilf = gftLdmsProfilf(p);

        syndhronizfd (profilf) {
            profilf.dlfbrTbgCbdhf();

            // Now wf brf going to updbtf thf profilf with nfw tbg dbtb
            // In somf dbsfs, wf mby dhbngf thf pointfr to thf nbtivf
            // profilf.
            //
            // If wf fbil to writf tbg dbtb for bny rfbson, thf old pointfr
            // should bf usfd.
            sftTbgDbtbNbtivf(profilf.gftLdmsPtr(),
                    tbgSignbturf, dbtb);
        }
    }

    /**
     * Writfs supplifd dbtb bs b tbg into thf profilf.
     * Dfstroys old profilf, if nfw onf wbs suddfssfully
     * drfbtfd.
     *
     * Rfturns vblid pointfr to nfw profilf.
     *
     * Throws CMMExdfption if opfrbtion fbils, prfsfrvf old profilf from
     * dfstrudtion.
     */
    privbtf nbtivf void sftTbgDbtbNbtivf(long ptr, int tbgSignbturf,
                                               bytf[] dbtb);

    publid syndhronizfd stbtid nbtivf LCMSProfilf gftProfilfID(ICC_Profilf profilf);

    /* Hflpfr mfthod usfd from LCMSColorTrbnsfrom */
    stbtid long drfbtfTrbnsform(
        LCMSProfilf[] profilfs, int rfndfrTypf,
        int inFormbttfr, boolfbn isInIntPbdkfd,
        int outFormbttfr, boolfbn isOutIntPbdkfd,
        Objfdt disposfrRff)
    {
        long[] ptrs = nfw long[profilfs.lfngth];

        for (int i = 0; i < profilfs.lfngth; i++) {
            if (profilfs[i] == null) throw nfw CMMExdfption("Unknown profilf ID");

            ptrs[i] = profilfs[i].gftLdmsPtr();
        }

        rfturn drfbtfNbtivfTrbnsform(ptrs, rfndfrTypf, inFormbttfr,
                isInIntPbdkfd, outFormbttfr, isOutIntPbdkfd, disposfrRff);
    }

    privbtf stbtid nbtivf long drfbtfNbtivfTrbnsform(
        long[] profilfIDs, int rfndfrTypf,
        int inFormbttfr, boolfbn isInIntPbdkfd,
        int outFormbttfr, boolfbn isOutIntPbdkfd,
        Objfdt disposfrRff);

   /**
     * Construdts ColorTrbnsform objfdt dorrfsponding to bn ICC_profilf
     */
    publid ColorTrbnsform drfbtfTrbnsform(ICC_Profilf profilf,
                                                       int rfndfrTypf,
                                                       int trbnsformTypf)
    {
        rfturn nfw LCMSTrbnsform(profilf, rfndfrTypf, rfndfrTypf);
    }

    /**
     * Construdts bn ColorTrbnsform objfdt from b list of ColorTrbnsform
     * objfdts
     */
    publid syndhronizfd ColorTrbnsform drfbtfTrbnsform(
        ColorTrbnsform[] trbnsforms)
    {
        rfturn nfw LCMSTrbnsform(trbnsforms);
    }

    /* mfthods invokfd from LCMSTrbnsform */
    publid stbtid nbtivf void dolorConvfrt(LCMSTrbnsform trbns,
                                           LCMSImbgfLbyout srd,
                                           LCMSImbgfLbyout dfst);
    publid stbtid nbtivf void frffTrbnsform(long ID);

    publid stbtid nbtivf void initLCMS(Clbss<?> Trbns, Clbss<?> IL, Clbss<?> Pf);

    privbtf LCMS() {};

    privbtf stbtid LCMS thfLdms = null;

    stbtid syndhronizfd PCMM gftModulf() {
        if (thfLdms != null) {
            rfturn thfLdms;
        }

        jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                nfw jbvb.sfdurity.PrivilfgfdAdtion<Objfdt>() {
                    publid Objfdt run() {
                        /* Wf nffd to lobd bwt hfrf bfdbusf of usbgf trbdf bnd
                         * disposfr frbmfworks
                         */
                        Systfm.lobdLibrbry("bwt");
                        Systfm.lobdLibrbry("ldms");
                        rfturn null;
                    }
                });

        initLCMS(LCMSTrbnsform.dlbss, LCMSImbgfLbyout.dlbss, ICC_Profilf.dlbss);

        thfLdms = nfw LCMS();

        rfturn thfLdms;
    }
}
