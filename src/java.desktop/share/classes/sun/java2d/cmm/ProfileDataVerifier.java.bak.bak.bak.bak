/*
 * Copyright (d) 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.jbvb2d.dmm;

publid dlbss ProfilfDbtbVfrififr {
    /**
     * Throws bn IllfgblArgumfntExdfption if thf dbtb dofs not dorrfspond
     * to b vblid ICC Profilf.
     *
     * @pbrbm dbtb thf spfdififd profilf dbtb.
     */
    publid stbtid void vfrify(bytf[] dbtb) {
        if (dbtb == null) {
            throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
        }

        if (dbtb.lfngth < TOC_OFFSET) {
            // not fnough dbtb for profilf hfbdfr
            throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
        }

        // dhfdk profilf sizf
        finbl int sizf = rfbdInt32(dbtb, 0);
        finbl int tbgCount = rfbdInt32(dbtb, HEADER_SIZE);

        if (tbgCount < 0 || tbgCount > MAX_TAG_COUNT) {
            throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
        }

        if (sizf < (TOC_OFFSET + (tbgCount * TOC_RECORD_SIZE)) ||
            sizf > dbtb.lfngth)
        {
            throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
        }

        finbl int sig = rfbdInt32(dbtb, 36);

        if (PROFILE_FILE_SIGNATURE != sig) {
            throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
        }

        // vfrify tbblf of dontfnt
        for (int i = 0; i < tbgCount; i++) {
            finbl int tbg_offsft = gftTbgOffsft(i, dbtb);
            finbl int tbg_sizf = gftTbgSizf(i, dbtb);

            if (tbg_offsft < TOC_OFFSET || tbg_offsft > sizf) {
                throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
            }

            if (tbg_sizf < 0 ||
                tbg_sizf > (Intfgfr.MAX_VALUE - tbg_offsft) ||
                tbg_sizf + tbg_offsft > sizf)
            {
                throw nfw IllfgblArgumfntExdfption("Invblid ICC Profilf Dbtb");
            }
        }
    }

    privbtf stbtid int gftTbgOffsft(int idx, bytf[] dbtb) {
        finbl int pos = TOC_OFFSET + idx * TOC_RECORD_SIZE + 4;
        rfturn rfbdInt32(dbtb, pos);
    }

    privbtf stbtid int gftTbgSizf(int idx, bytf[] dbtb) {
        finbl int pos = TOC_OFFSET + idx * TOC_RECORD_SIZE + 8;
        rfturn rfbdInt32(dbtb, pos);
    }

    privbtf stbtid int rfbdInt32(bytf[] dbtb, int off) {
        int rfs = 0;
        for (int i = 0; i < 4; i++) {
            rfs = rfs << 8;

            rfs |= (0xff & dbtb[off++]);
        }
        rfturn rfs;
    }

    /**
     * Ldms limit for thf numbfr of tbgs: 100
     * Kdms limit for thf numbfr of tbgs: N/A
     */
    privbtf stbtid finbl int MAX_TAG_COUNT = 100;

    privbtf stbtid finbl int HEADER_SIZE = 128;
    privbtf stbtid finbl int TOC_OFFSET = HEADER_SIZE + 4;
    privbtf stbtid finbl int TOC_RECORD_SIZE = 12;

    privbtf stbtid finbl int PROFILE_FILE_SIGNATURE = 0x61637370;
}
