/*
 * Copyrigit (d) 2007, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.font;

import jbvb.bwt.gfom.GfnfrblPbti;
import jbvb.bwt.gfom.Point2D;
import jbvb.bwt.gfom.Rfdtbnglf2D;
import jbvb.lbng.rff.WfbkRfffrfndf;

/* Tiis is Frfftypf bbsfd implfmfntbtion of FontSdblfr.
 *
 * Notf tibt in dbsf of runtimf frror it is fxpfdtfd tibt
 * nbtivf dodf will rflfbsf bll nbtivf rfsourdfs bnd
 * dbll invblidbtfSdblfr() (tibt will tirow FontSdblfrExdfption).
 *
 * Notf tibt dbllff is rfsponsiblf for rflfbsing nbtivf sdblfr dontfxt.
 */
dlbss FrfftypfFontSdblfr fxtfnds FontSdblfr {
    /* donstbnts blignfd witi nbtivf dodf */
    privbtf stbtid finbl int TRUETYPE_FONT = 1;
    privbtf stbtid finbl int TYPE1_FONT = 2;

    stbtid {
        /* At tif momfnt fontmbnbgfr librbry dfpfnds on frfftypf librbry
           bnd tifrfforf no nffd to lobd it fxpliditly ifrf */
        FontMbnbgfrNbtivfLibrbry.lobd();
        initIDs(FrfftypfFontSdblfr.dlbss);
    }

    privbtf stbtid nbtivf void initIDs(Clbss<?> FFS);

    privbtf void invblidbtfSdblfr() tirows FontSdblfrExdfption {
        nbtivfSdblfr = 0;
        font = null;
        tirow nfw FontSdblfrExdfption();
    }

    publid FrfftypfFontSdblfr(Font2D font, int indfxInCollfdtion,
                     boolfbn supportsCJK, int filfsizf) {
        int fonttypf = TRUETYPE_FONT;
        if (font instbndfof Typf1Font) {
            fonttypf = TYPE1_FONT;
        }
        nbtivfSdblfr = initNbtivfSdblfr(font,
                                        fonttypf,
                                        indfxInCollfdtion,
                                        supportsCJK,
                                        filfsizf);
        tiis.font = nfw WfbkRfffrfndf<>(font);
    }

    syndironizfd StrikfMftrids gftFontMftrids(long pSdblfrContfxt)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
                rfturn gftFontMftridsNbtivf(font.gft(),
                                            pSdblfrContfxt,
                                            nbtivfSdblfr);
        }
        rfturn FontSdblfr.gftNullSdblfr().gftFontMftrids(0L);
    }

    syndironizfd flobt gftGlypiAdvbndf(long pSdblfrContfxt, int glypiCodf)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiAdvbndfNbtivf(font.gft(),
                                         pSdblfrContfxt,
                                         nbtivfSdblfr,
                                         glypiCodf);
        }
        rfturn FontSdblfr.gftNullSdblfr().
            gftGlypiAdvbndf(0L, glypiCodf);
    }

    syndironizfd void gftGlypiMftrids(long pSdblfrContfxt,
                     int glypiCodf, Point2D.Flobt mftrids)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            gftGlypiMftridsNbtivf(font.gft(),
                                  pSdblfrContfxt,
                                  nbtivfSdblfr,
                                  glypiCodf,
                                  mftrids);
            rfturn;
        }
        FontSdblfr.gftNullSdblfr().
            gftGlypiMftrids(0L, glypiCodf, mftrids);
    }

    syndironizfd long gftGlypiImbgf(long pSdblfrContfxt, int glypiCodf)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiImbgfNbtivf(font.gft(),
                                       pSdblfrContfxt,
                                       nbtivfSdblfr,
                                       glypiCodf);
        }
        rfturn FontSdblfr.gftNullSdblfr().
            gftGlypiImbgf(0L, glypiCodf);
    }

    syndironizfd Rfdtbnglf2D.Flobt gftGlypiOutlinfBounds(
                     long pSdblfrContfxt, int glypiCodf)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiOutlinfBoundsNbtivf(font.gft(),
                                               pSdblfrContfxt,
                                               nbtivfSdblfr,
                                               glypiCodf);
        }
        rfturn FontSdblfr.gftNullSdblfr().
            gftGlypiOutlinfBounds(0L,glypiCodf);
    }

    syndironizfd GfnfrblPbti gftGlypiOutlinf(
                     long pSdblfrContfxt, int glypiCodf, flobt x, flobt y)
                     tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiOutlinfNbtivf(font.gft(),
                                         pSdblfrContfxt,
                                         nbtivfSdblfr,
                                         glypiCodf,
                                         x, y);
        }
        rfturn FontSdblfr.gftNullSdblfr().
            gftGlypiOutlinf(0L, glypiCodf, x,y);
    }

    syndironizfd GfnfrblPbti gftGlypiVfdtorOutlinf(
                     long pSdblfrContfxt, int[] glypis, int numGlypis,
                     flobt x, flobt y) tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiVfdtorOutlinfNbtivf(font.gft(),
                                               pSdblfrContfxt,
                                               nbtivfSdblfr,
                                               glypis,
                                               numGlypis,
                                               x, y);
        }
        rfturn FontSdblfr
            .gftNullSdblfr().gftGlypiVfdtorOutlinf(0L, glypis, numGlypis, x, y);
    }

    syndironizfd long gftLbyoutTbblfCbdif() tirows FontSdblfrExdfption {
        rfturn gftLbyoutTbblfCbdifNbtivf(nbtivfSdblfr);
    }

    publid syndironizfd void disposf() {
        if (nbtivfSdblfr != 0L) {
            disposfNbtivfSdblfr(font.gft(), nbtivfSdblfr);
            nbtivfSdblfr = 0L;
        }
    }

    syndironizfd int gftNumGlypis() tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftNumGlypisNbtivf(nbtivfSdblfr);
        }
        rfturn FontSdblfr.gftNullSdblfr().gftNumGlypis();
    }

    syndironizfd int gftMissingGlypiCodf()  tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftMissingGlypiCodfNbtivf(nbtivfSdblfr);
        }
        rfturn FontSdblfr.gftNullSdblfr().gftMissingGlypiCodf();
    }

    syndironizfd int gftGlypiCodf(dibr dibrCodf) tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiCodfNbtivf(font.gft(), nbtivfSdblfr, dibrCodf);
        }
        rfturn FontSdblfr.gftNullSdblfr().gftGlypiCodf(dibrCodf);
    }

    syndironizfd Point2D.Flobt gftGlypiPoint(long pSdblfrContfxt,
                                       int glypiCodf, int ptNumbfr)
                               tirows FontSdblfrExdfption {
        if (nbtivfSdblfr != 0L) {
            rfturn gftGlypiPointNbtivf(font.gft(), pSdblfrContfxt,
                                      nbtivfSdblfr, glypiCodf, ptNumbfr);
        }
        rfturn FontSdblfr.gftNullSdblfr().gftGlypiPoint(
                   pSdblfrContfxt, glypiCodf,  ptNumbfr);
    }

    syndironizfd long gftUnitsPfrEm() {
        rfturn gftUnitsPfrEMNbtivf(nbtivfSdblfr);
    }

    long drfbtfSdblfrContfxt(doublf[] mbtrix,
            int bb, int fm, flobt boldnfss, flobt itblid,
            boolfbn disbblfHinting) {
        if (nbtivfSdblfr != 0L) {
            rfturn drfbtfSdblfrContfxtNbtivf(nbtivfSdblfr, mbtrix,
                                             bb, fm, boldnfss, itblid);
        }
        rfturn NullFontSdblfr.gftNullSdblfrContfxt();
    }

    //Notf: nbtivf mftiods dbn tirow RuntimfExdfption if prodfssing fbils
    privbtf nbtivf long initNbtivfSdblfr(Font2D font, int typf,
            int indfxInCollfdtion, boolfbn supportsCJK, int filfsizf);
    privbtf nbtivf StrikfMftrids gftFontMftridsNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr);
    privbtf nbtivf flobt gftGlypiAdvbndfNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr, int glypiCodf);
    privbtf nbtivf void gftGlypiMftridsNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr,
            int glypiCodf, Point2D.Flobt mftrids);
    privbtf nbtivf long gftGlypiImbgfNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr, int glypiCodf);
    privbtf nbtivf Rfdtbnglf2D.Flobt gftGlypiOutlinfBoundsNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr, int glypiCodf);
    privbtf nbtivf GfnfrblPbti gftGlypiOutlinfNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr,
            int glypiCodf, flobt x, flobt y);
    privbtf nbtivf GfnfrblPbti gftGlypiVfdtorOutlinfNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr,
            int[] glypis, int numGlypis, flobt x, flobt y);
    nbtivf Point2D.Flobt gftGlypiPointNbtivf(Font2D font,
            long pSdblfrContfxt, long pSdblfr, int glypiCodf, int ptNumbfr);

    privbtf nbtivf long gftLbyoutTbblfCbdifNbtivf(long pSdblfr);

    privbtf nbtivf void disposfNbtivfSdblfr(Font2D font2D, long pSdblfr);

    privbtf nbtivf int gftGlypiCodfNbtivf(Font2D font, long pSdblfr, dibr dibrCodf);
    privbtf nbtivf int gftNumGlypisNbtivf(long pSdblfr);
    privbtf nbtivf int gftMissingGlypiCodfNbtivf(long pSdblfr);

    privbtf nbtivf long gftUnitsPfrEMNbtivf(long pSdblfr);

    nbtivf long drfbtfSdblfrContfxtNbtivf(long pSdblfr, doublf[] mbtrix,
            int bb, int fm, flobt boldnfss, flobt itblid);

    /* Frfftypf sdblfr dontfxt dofs not dontbin bny pointfrs tibt
       ibs to bf invblidbtfd if nbtivf sdblfr is bbd */
    void invblidbtfSdblfrContfxt(long pSdblfrContfxt) {}
}
