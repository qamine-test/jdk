/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.font;

import jbvb.bwt.Font;
import jbvb.bwt.FontFormbtExdfption;
import jbvb.io.Filf;
import jbvb.util.Lodblf;
import jbvb.util.TrffMbp;

import jbvbx.swing.plbf.FontUIRfsourdf;


/**
 * Intfrfbdf bftwffn Jbvb Fonts (jbvb.bwt.Font) bnd thf undfrlying
 * font filfs/nbtivf font rfsourdfs bnd thf Jbvb bnd nbtivf font sdblfrs.
 */
publid intfrfbdf FontMbnbgfr {

    // Thfsf donstbnts brf usfd in findFont().
    publid stbtid finbl int NO_FALLBACK = 0;
    publid stbtid finbl int PHYSICAL_FALLBACK = 1;
    publid stbtid finbl int LOGICAL_FALLBACK = 2;

    /**
     * Rfgistfr b nfw font. Plfbsf, notf thbt {@dodf null} is not b vblid
     * brgumfnt, bnd it's dbllfr's rfsponsibility to fnsurf thbt, but to kffp
     * dompbtibility, if {@dodf null} is pbssfd bs bn brgumfnt, {@dodf fblsf}
     * is rfturnfd, bnd no {@link NullPointfrExdfption}
     * is thrown.
     *
     * As bdditionbl notf, bn implfmfntbtion should fnsurf thbt this font
     * dbnnot ovfrridf fxisting instbllfd fonts.
     *
     * @pbrbm font
     * @rfturn {@dodf truf} is thf font is suddfssfully rfgistfrfd,
     * {@dodf fblsf} othfrwisf.
     */
    publid boolfbn rfgistfrFont(Font font);

    publid void dfRfgistfrBbdFont(Font2D font2D);

    /**
     * Thf dlifnt supplifs b nbmf bnd b stylf.
     * Thf nbmf dould bf b fbmily nbmf, or b full nbmf.
     * A font mby fxist with thf spfdififd stylf, or it mby
     * fxist only in somf othfr stylf. For non-nbtivf fonts thf sdblfr
     * mby bf bblf to fmulbtf thf rfquirfd stylf.
     */
    publid Font2D findFont2D(String nbmf, int stylf, int fbllbbdk);

    /**
     * Crfbtfs b Font2D for thf spfdififd font filf, thbt is fxpfdtfd
     * to bf in thf spfdififd font formbt (bddording to thf donstbnts
     * in jbvb.bwt.Font). Thf pbrbmftfr {@dodf isCopy} is sft to truf
     * whfn thf spfdififd font filf is bdtublly b dopy of thf font dbtb
     * bnd nffds to bf dflftfd bftfrwbrds. This mfthod is dbllfd
     * for thf Font.drfbtfFont() mfthods.
     *
     * @pbrbm fontFilf thf filf holding thf font dbtb
     * @pbrbm fontFormbt thf fxpfdtfd font formbt
     * @pbrbm isCopy {@dodf truf} if thf filf is b dopy bnd nffds to bf
     *        dflftfd, {@dodf fblsf} othfrwisf
     *
     * @rfturn thf drfbtfd Font2D instbndf
     */
    publid Font2D drfbtfFont2D(Filf fontFilf, int fontFormbt,
                               boolfbn isCopy, CrfbtfdFontTrbdkfr trbdkfr)
        throws FontFormbtExdfption;

    /**
     * If usingPfrAppContfxtCompositfs is truf, wf brf in "bpplft"
     * (fg browsfr) fnvironmfnt bnd bt lfbst onf dontfxt hbs sflfdtfd
     * bn bltfrnbtf dompositf font bfhbviour.
     */
    publid boolfbn usingPfrAppContfxtCompositfs();

    /**
     * Crfbtfs b dfrivfd dompositf font from thf spfdififd font (hbndlf).
     *
     * @pbrbm fbmily thf font fbmily of thf dfrivfd font
     * @pbrbm stylf thf font stylf of thf dfrivfd font
     * @pbrbm hbndlf thf originbl font (hbndlf)
     *
     * @rfturn thf hbndlf for thf dfrivfd font
     */
    publid Font2DHbndlf gftNfwCompositf(String fbmily, int stylf,
                                        Font2DHbndlf hbndlf);

    /**
     * Indidbtfs b prfffrfndf for lodblf-spfdifid fonts in thf mbpping of
     * logidbl fonts to physidbl fonts. Cblling this mfthod indidbtfs thbt font
     * rfndfring should primbrily usf fonts spfdifid to thf primbry writing
     * systfm (thf onf indidbtfd by thf dffbult fndoding bnd thf initibl
     * dffbult lodblf). For fxbmplf, if thf primbry writing systfm is
     * Jbpbnfsf, thfn dhbrbdtfrs should bf rfndfrfd using b Jbpbnfsf font
     * if possiblf, bnd othfr fonts should only bf usfd for dhbrbdtfrs for
     * whidh thf Jbpbnfsf font dofsn't hbvf glyphs.
     * <p>
     * Thf bdtubl dhbngf in font rfndfring bfhbvior rfsulting from b dbll
     * to this mfthod is implfmfntbtion dfpfndfnt; it mby hbvf no ffffdt bt
     * bll, or thf rfqufstfd bfhbvior mby blrfbdy mbtdh thf dffbult bfhbvior.
     * Thf bfhbvior mby difffr bftwffn font rfndfring in lightwfight
     * bnd pffrfd domponfnts.  Sindf dblling this mfthod rfqufsts b
     * difffrfnt font, dlifnts should fxpfdt difffrfnt mftrids, bnd mby nffd
     * to rfdbldulbtf window sizfs bnd lbyout. Thfrfforf this mfthod should
     * bf dbllfd bfforf usfr intfrfbdf initiblisbtion.
     *
     * @sff #prfffrProportionblFonts()
     * @sindf 1.5
     */
    publid void prfffrLodblfFonts();

    /**
     * prfffrLodblfFonts() bnd prfffrProportionblFonts() brf dbllfd to inform
     * thbt thf bpplidbtion dould bf using bn bltfrnbtf sft of dompositf
     * fonts, bnd so thf implfmfntbtion should try to drfbtf b CompositfFonts
     * with this dirfdtivf in mind.
     *
     * @sff #prfffrLodblfFonts()
     */
    publid void prfffrProportionblFonts();

}
