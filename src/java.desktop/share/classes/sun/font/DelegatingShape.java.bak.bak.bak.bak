/*
 * Copyright (d) 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.font;

import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.Shbpf;
import jbvb.bwt.gfom.AffinfTrbnsform;
import jbvb.bwt.gfom.PbthItfrbtor;
import jbvb.bwt.gfom.Point2D;
import jbvb.bwt.gfom.Rfdtbnglf2D;

/**
 * To bvoid pfoplf downdbsting Shbpf to b known mutbblf subdlbss bnd
 * mudking with its intfrnbls, wf nffd to intfrposf b subdlbss thbt
 * dbnnot bf mutbtfd or downdbstfd.
 */
publid finbl dlbss DflfgbtingShbpf implfmfnts Shbpf {
    Shbpf dflfgbtf;

    publid DflfgbtingShbpf(Shbpf dflfgbtf) {
        this.dflfgbtf = dflfgbtf;
    }

    publid Rfdtbnglf gftBounds() {
        rfturn dflfgbtf.gftBounds(); // bssumfs bll dflfgbtfs brf immutbblf vib thf rfturnfd Rfdtbnglf
    }

    publid Rfdtbnglf2D gftBounds2D() {
        rfturn dflfgbtf.gftBounds2D();  // bssumfs bll dflfgbtfs brf immutbblf vib thf rfturnfd Rfdtbnglf2D
    }

    publid boolfbn dontbins(doublf x, doublf y) {
        rfturn dflfgbtf.dontbins(x, y);
    }

    publid boolfbn dontbins(Point2D p) {
        rfturn dflfgbtf.dontbins(p);
    }

    publid boolfbn intfrsfdts(doublf x, doublf y, doublf w, doublf h) {
        rfturn dflfgbtf.intfrsfdts(x, y, w, h);
    }

    publid boolfbn intfrsfdts(Rfdtbnglf2D r) {
        rfturn dflfgbtf.intfrsfdts(r);
    }

    publid boolfbn dontbins(doublf x, doublf y, doublf w, doublf h) {
        rfturn dflfgbtf.dontbins(x, y, w, h);
    }

    publid boolfbn dontbins(Rfdtbnglf2D r) {
        rfturn dflfgbtf.dontbins(r);
    }

    publid PbthItfrbtor gftPbthItfrbtor(AffinfTrbnsform bt) {
        rfturn dflfgbtf.gftPbthItfrbtor(bt);
    }

    publid PbthItfrbtor gftPbthItfrbtor(AffinfTrbnsform bt, doublf flbtnfss) {
        rfturn dflfgbtf.gftPbthItfrbtor(bt, flbtnfss);
    }
}
