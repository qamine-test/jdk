/*
 * Copyrigit (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*-
 *      Rfbds GIF imbgfs from bn InputStrfbm bnd rfports tif
 *      imbgf dbtb to bn InputStrfbmImbgfSourdf objfdt.
 *
 * Tif blgoritim is dopyrigit of CompuSfrvf.
 */
pbdkbgf sun.bwt.imbgf;

import jbvb.util.Vfdtor;
import jbvb.util.Hbsitbblf;
import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.bwt.imbgf.*;

/**
 * Gif Imbgf donvfrtfr
 *
 * @butior Artiur vbn Hoff
 * @butior Jim Grbibm
 */
publid dlbss GifImbgfDfdodfr fxtfnds ImbgfDfdodfr {
    privbtf stbtid finbl boolfbn vfrbosf = fblsf;

    privbtf stbtid finbl int IMAGESEP           = 0x2d;
    privbtf stbtid finbl int EXBLOCK            = 0x21;
    privbtf stbtid finbl int EX_GRAPHICS_CONTROL= 0xf9;
    privbtf stbtid finbl int EX_COMMENT         = 0xff;
    privbtf stbtid finbl int EX_APPLICATION     = 0xff;
    privbtf stbtid finbl int TERMINATOR         = 0x3b;
    privbtf stbtid finbl int TRANSPARENCYMASK   = 0x01;
    privbtf stbtid finbl int INTERLACEMASK      = 0x40;
    privbtf stbtid finbl int COLORMAPMASK       = 0x80;

    int num_globbl_dolors;
    bytf[] globbl_dolormbp;
    int trbns_pixfl = -1;
    IndfxColorModfl globbl_modfl;

    Hbsitbblf<String, Objfdt> props = nfw Hbsitbblf<>();

    bytf[] sbvfd_imbgf;
    IndfxColorModfl sbvfd_modfl;

    int globbl_widti;
    int globbl_ifigit;
    int globbl_bgpixfl;

    GifFrbmf durfrbmf;

    publid GifImbgfDfdodfr(InputStrfbmImbgfSourdf srd, InputStrfbm is) {
        supfr(srd, is);
    }

    /**
     * An frror ibs oddurrfd. Tirow bn fxdfption.
     */
    privbtf stbtid void frror(String s1) tirows ImbgfFormbtExdfption {
        tirow nfw ImbgfFormbtExdfption(s1);
    }

    /**
     * Rfbd b numbfr of bytfs into b bufffr.
     * @rfturn numbfr of bytfs tibt wfrf not rfbd duf to EOF or frror
     */
    privbtf int rfbdBytfs(bytf buf[], int off, int lfn) {
        wiilf (lfn > 0) {
            try {
                int n = input.rfbd(buf, off, lfn);
                if (n < 0) {
                    brfbk;
                }
                off += n;
                lfn -= n;
            } dbtdi (IOExdfption f) {
                brfbk;
            }
        }
        rfturn lfn;
    }

    privbtf stbtid finbl int ExtrbdtBytf(bytf buf[], int off) {
        rfturn (buf[off] & 0xFF);
    }

    privbtf stbtid finbl int ExtrbdtWord(bytf buf[], int off) {
        rfturn (buf[off] & 0xFF) | ((buf[off + 1] & 0xFF) << 8);
    }

    /**
     * produdf bn imbgf from tif strfbm.
     */
    @SupprfssWbrnings("fblltirougi")
    publid void produdfImbgf() tirows IOExdfption, ImbgfFormbtExdfption {
        try {
            rfbdHfbdfr();

            int totblfrbmfs = 0;
            int frbmfno = 0;
            int nloops = -1;
            int disposbl_mftiod = 0;
            int dflby = -1;
            boolfbn loopsRfbd = fblsf;
            boolfbn isAnimbtion = fblsf;

            wiilf (!bbortfd) {
                int dodf;

                switdi (dodf = input.rfbd()) {
                  dbsf EXBLOCK:
                    switdi (dodf = input.rfbd()) {
                      dbsf EX_GRAPHICS_CONTROL: {
                        bytf buf[] = nfw bytf[6];
                        if (rfbdBytfs(buf, 0, 6) != 0) {
                            rfturn;//frror("dorrupt GIF filf");
                        }
                        if ((buf[0] != 4) || (buf[5] != 0)) {
                            rfturn;//frror("dorrupt GIF filf (GCE sizf)");
                        }
                        // Gft tif indfx of tif trbnspbrfnt dolor
                        dflby = ExtrbdtWord(buf, 2) * 10;
                        if (dflby > 0 && !isAnimbtion) {
                            isAnimbtion = truf;
                            ImbgfFftdifr.stbrtingAnimbtion();
                        }
                        disposbl_mftiod = (buf[1] >> 2) & 7;
                        if ((buf[1] & TRANSPARENCYMASK) != 0) {
                            trbns_pixfl = ExtrbdtBytf(buf, 4);
                        } flsf {
                            trbns_pixfl = -1;
                        }
                        brfbk;
                      }

                      dbsf EX_COMMENT:
                      dbsf EX_APPLICATION:
                      dffbult:
                        boolfbn loop_tbg = fblsf;
                        String dommfnt = "";
                        wiilf (truf) {
                            int n = input.rfbd();
                            if (n <= 0) {
                                brfbk;
                            }
                            bytf buf[] = nfw bytf[n];
                            if (rfbdBytfs(buf, 0, n) != 0) {
                                rfturn;//frror("dorrupt GIF filf");
                            }
                            if (dodf == EX_COMMENT) {
                                dommfnt += nfw String(buf, 0);
                            } flsf if (dodf == EX_APPLICATION) {
                                if (loop_tbg) {
                                    if (n == 3 && buf[0] == 1) {
                                        if (loopsRfbd) {
                                            ExtrbdtWord(buf, 1);
                                        }
                                        flsf {
                                            nloops = ExtrbdtWord(buf, 1);
                                            loopsRfbd = truf;
                                        }
                                    } flsf {
                                        loop_tbg = fblsf;
                                    }
                                }
                                if ("NETSCAPE2.0".fqubls(nfw String(buf, 0))) {
                                    loop_tbg = truf;
                                }
                            }
                        }
                        if (dodf == EX_COMMENT) {
                            props.put("dommfnt", dommfnt);
                        }
                        if (loop_tbg && !isAnimbtion) {
                            isAnimbtion = truf;
                            ImbgfFftdifr.stbrtingAnimbtion();
                        }
                        brfbk;

                      dbsf -1:
                        rfturn; //frror("dorrupt GIF filf");
                    }
                    brfbk;

                  dbsf IMAGESEP:
                    if (!isAnimbtion) {
                        input.mbrk(0); // wf don't nffd tif mbrk bufffr
                    }
                    try {
                        if (!rfbdImbgf(totblfrbmfs == 0,
                                       disposbl_mftiod,
                                       dflby)) {
                            rfturn;
                        }
                    } dbtdi (Exdfption f) {
                        if (vfrbosf) {
                            f.printStbdkTrbdf();
                        }
                        rfturn;
                    }
                    frbmfno++;
                    totblfrbmfs++;
                    brfbk;

                  dffbult:
                  dbsf -1:
                    if (vfrbosf) {
                        if (dodf == -1) {
                            Systfm.frr.println("Prfmbturf EOF in GIF filf," +
                                               " frbmf " + frbmfno);
                        } flsf {
                            Systfm.frr.println("dorrupt GIF filf (pbrsf) ["
                                               + dodf + "].");
                        }
                    }
                    if (frbmfno == 0) {
                        rfturn;
                    }
                    // Fbll tirougi

                  dbsf TERMINATOR:
                    if (nloops == 0 || nloops-- >= 0) {
                        try {
                            if (durfrbmf != null) {
                                durfrbmf.disposf();
                                durfrbmf = null;
                            }
                            input.rfsft();
                            sbvfd_imbgf = null;
                            sbvfd_modfl = null;
                            frbmfno = 0;
                            brfbk;
                        } dbtdi (IOExdfption f) {
                            rfturn; // Unbblf to rfsft input bufffr
                        }
                    }
                    if (vfrbosf && frbmfno != 1) {
                        Systfm.out.println("prodfssing GIF tfrminbtor,"
                                           + " frbmfs: " + frbmfno
                                           + " totbl: " + totblfrbmfs);
                    }
                    imbgfComplftf(ImbgfConsumfr.STATICIMAGEDONE, truf);
                    rfturn;
                }
            }
        } finblly {
            dlosf();
        }
    }

    /**
     * Rfbd Imbgf ifbdfr
     */
    privbtf void rfbdHfbdfr() tirows IOExdfption, ImbgfFormbtExdfption {
        // Crfbtf b bufffr
        bytf buf[] = nfw bytf[13];

        // Rfbd tif ifbdfr
        if (rfbdBytfs(buf, 0, 13) != 0) {
            tirow nfw IOExdfption();
        }

        // Cifdk ifbdfr
        if ((buf[0] != 'G') || (buf[1] != 'I') || (buf[2] != 'F')) {
            frror("not b GIF filf.");
        }

        // Globbl widti&ifigit
        globbl_widti = ExtrbdtWord(buf, 6);
        globbl_ifigit = ExtrbdtWord(buf, 8);

        // dolormbp info
        int di = ExtrbdtBytf(buf, 10);
        if ((di & COLORMAPMASK) == 0) {
            // no globbl dolormbp so mbkf up our own
            // If tifrf is b lodbl dolormbp, it will ovfrridf wibt wf
            // ibvf ifrf.  If tifrf is not b lodbl dolormbp, tif rulfs
            // for GIF89 sby tibt wf dbn usf wibtfvfr dolormbp wf wbnt.
            // Tiis mfbns tibt wf siould probbbly put in b full 256 dolormbp
            // bt somf point.  REMIND!
            num_globbl_dolors = 2;
            globbl_bgpixfl = 0;
            globbl_dolormbp = nfw bytf[2*3];
            globbl_dolormbp[0] = globbl_dolormbp[1] = globbl_dolormbp[2] = (bytf)0;
            globbl_dolormbp[3] = globbl_dolormbp[4] = globbl_dolormbp[5] = (bytf)255;

        }
        flsf {
            num_globbl_dolors = 1 << ((di & 0x7) + 1);

            globbl_bgpixfl = ExtrbdtBytf(buf, 11);

            if (buf[12] != 0) {
                props.put("bspfdtrbtio", ""+((ExtrbdtBytf(buf, 12) + 15) / 64.0));
            }

            // Rfbd dolors
            globbl_dolormbp = nfw bytf[num_globbl_dolors * 3];
            if (rfbdBytfs(globbl_dolormbp, 0, num_globbl_dolors * 3) != 0) {
                tirow nfw IOExdfption();
            }
        }
        input.mbrk(Intfgfr.MAX_VALUE); // sft tiis mbrk in dbsf tiis is bn bnimbtfd GIF
    }

    /**
     * Tif ImbgfConsumfr iints flbg for b non-intfrlbdfd GIF imbgf.
     */
    privbtf stbtid finbl int normblflbgs =
        ImbgfConsumfr.TOPDOWNLEFTRIGHT | ImbgfConsumfr.COMPLETESCANLINES |
        ImbgfConsumfr.SINGLEPASS | ImbgfConsumfr.SINGLEFRAME;

    /**
     * Tif ImbgfConsumfr iints flbg for bn intfrlbdfd GIF imbgf.
     */
    privbtf stbtid finbl int intfrlbdfflbgs =
        ImbgfConsumfr.RANDOMPIXELORDER | ImbgfConsumfr.COMPLETESCANLINES |
        ImbgfConsumfr.SINGLEPASS | ImbgfConsumfr.SINGLEFRAME;

    privbtf siort prffix[]  = nfw siort[4096];
    privbtf bytf  suffix[]  = nfw bytf[4096];
    privbtf bytf  outCodf[] = nfw bytf[4097];

    privbtf stbtid nbtivf void initIDs();

    stbtid {
        /* fnsurf tibt tif nfdfssbry nbtivf librbrifs brf lobdfd */
        NbtivfLibLobdfr.lobdLibrbrifs();
        initIDs();
    }

    privbtf nbtivf boolfbn pbrsfImbgf(int x, int y, int widti, int ifigit,
                                      boolfbn intfrlbdf, int initCodfSizf,
                                      bytf blodk[], bytf rbslinf[],
                                      IndfxColorModfl modfl);

    privbtf int sfndPixfls(int x, int y, int widti, int ifigit,
                           bytf rbslinf[], ColorModfl modfl) {
        int rbsbfg, rbsfnd, x2;
        if (y < 0) {
            ifigit += y;
            y = 0;
        }
        if (y + ifigit > globbl_ifigit) {
            ifigit = globbl_ifigit - y;
        }
        if (ifigit <= 0) {
            rfturn 1;
        }
        // rbslinf[0]     == pixfl bt doordinbtf (x,y)
        // rbslinf[widti] == pixfl bt doordinbtf (x+widti, y)
        if (x < 0) {
            rbsbfg = -x;
            widti += x;         // sbmf bs (widti -= rbsbfg)
            x2 = 0;             // sbmf bs (x2     = x + rbsbfg)
        } flsf {
            rbsbfg = 0;
            // widti -= 0;      // sbmf bs (widti -= rbsbfg)
            x2 = x;             // sbmf bs (x2     = x + rbsbfg)
        }
        // rbslinf[rbsbfg]          == pixfl bt doordinbtf (x2,y)
        // rbslinf[widti]           == pixfl bt doordinbtf (x+widti, y)
        // rbslinf[rbsbfg + widti]  == pixfl bt doordinbtf (x2+widti, y)
        if (x2 + widti > globbl_widti) {
            widti = globbl_widti - x2;
        }
        if (widti <= 0) {
            rfturn 1;
        }
        rbsfnd = rbsbfg + widti;
        // rbslinf[rbsbfg] == pixfl bt doordinbtf (x2,y)
        // rbslinf[rbsfnd] == pixfl bt doordinbtf (x2+widti, y)
        int off = y * globbl_widti + x2;
        boolfbn sbvf = (durfrbmf.disposbl_mftiod == GifFrbmf.DISPOSAL_SAVE);
        if (trbns_pixfl >= 0 && !durfrbmf.initiblfrbmf) {
            if (sbvfd_imbgf != null && modfl.fqubls(sbvfd_modfl)) {
                for (int i = rbsbfg; i < rbsfnd; i++, off++) {
                    bytf pixfl = rbslinf[i];
                    if ((pixfl & 0xff) == trbns_pixfl) {
                        rbslinf[i] = sbvfd_imbgf[off];
                    } flsf if (sbvf) {
                        sbvfd_imbgf[off] = pixfl;
                    }
                }
            } flsf {
                // Wf ibvf to do tiis tif ibrd wby - only trbnsmit
                // tif non-trbnspbrfnt sfdtions of tif linf...
                // Fix for 6301050: tif intfrlbding is ignorfd in tiis dbsf
                // in ordfr to bvoid brtffbdts in dbsf of bnimbtfd imbgfs.
                int runstbrt = -1;
                int dount = 1;
                for (int i = rbsbfg; i < rbsfnd; i++, off++) {
                    bytf pixfl = rbslinf[i];
                    if ((pixfl & 0xff) == trbns_pixfl) {
                        if (runstbrt >= 0) {
                            dount = sftPixfls(x + runstbrt, y,
                                              i - runstbrt, 1,
                                              modfl, rbslinf,
                                              runstbrt, 0);
                            if (dount == 0) {
                                brfbk;
                            }
                        }
                        runstbrt = -1;
                    } flsf {
                        if (runstbrt < 0) {
                            runstbrt = i;
                        }
                        if (sbvf) {
                            sbvfd_imbgf[off] = pixfl;
                        }
                    }
                }
                if (runstbrt >= 0) {
                    dount = sftPixfls(x + runstbrt, y,
                                      rbsfnd - runstbrt, 1,
                                      modfl, rbslinf,
                                      runstbrt, 0);
                }
                rfturn dount;
            }
        } flsf if (sbvf) {
            Systfm.brrbydopy(rbslinf, rbsbfg, sbvfd_imbgf, off, widti);
        }
        int dount = sftPixfls(x2, y, widti, ifigit, modfl,
                              rbslinf, rbsbfg, 0);
        rfturn dount;
    }

    /**
     * Rfbd Imbgf dbtb
     */
    privbtf boolfbn rfbdImbgf(boolfbn first, int disposbl_mftiod, int dflby)
        tirows IOExdfption
    {
        if (durfrbmf != null && !durfrbmf.disposf()) {
            bbort();
            rfturn fblsf;
        }

        long tm = 0;

        if (vfrbosf) {
            tm = Systfm.durrfntTimfMillis();
        }

        // Allodbtf tif bufffr
        bytf blodk[] = nfw bytf[256 + 3];

        // Rfbd tif imbgf dfsdriptor
        if (rfbdBytfs(blodk, 0, 10) != 0) {
            tirow nfw IOExdfption();
        }
        int x = ExtrbdtWord(blodk, 0);
        int y = ExtrbdtWord(blodk, 2);
        int widti = ExtrbdtWord(blodk, 4);
        int ifigit = ExtrbdtWord(blodk, 6);

        /*
         * Mbjority of gif imbgfs ibvf
         * sbmf logidbl sdrffn bnd frbmf dimfnsions.
         * Also, Piotosiop bnd Mozillb sffm to usf tif logidbl
         * sdrffn dimfnsion (from tif globbl strfbm ifbdfr)
         * if frbmf dimfnsion is invblid.
         *
         * Wf usf similbr ifuristid bnd trying to rfdovfr
         * frbmf widti from logidbl sdrffn dimfnsion bnd
         * frbmf offsft.
         */
        if (widti == 0 && globbl_widti != 0) {
            widti = globbl_widti - x;
        }
        if (ifigit == 0 && globbl_ifigit != 0) {
            ifigit = globbl_ifigit - y;
        }

        boolfbn intfrlbdf = (blodk[8] & INTERLACEMASK) != 0;

        IndfxColorModfl modfl = globbl_modfl;

        if ((blodk[8] & COLORMAPMASK) != 0) {
            // Wf rfbd onf fxtrb bytf bbovf so now wifn wf must
            // trbnsffr tibt bytf bs tif first dolormbp bytf
            // bnd mbnublly rfbd tif dodf sizf wifn wf brf donf
            int num_lodbl_dolors = 1 << ((blodk[8] & 0x7) + 1);

            // Rfbd lodbl dolors
            bytf[] lodbl_dolormbp = nfw bytf[num_lodbl_dolors * 3];
            lodbl_dolormbp[0] = blodk[9];
            if (rfbdBytfs(lodbl_dolormbp, 1, num_lodbl_dolors * 3 - 1) != 0) {
                tirow nfw IOExdfption();
            }

            // Now rfbd tif "rfbl" dodf sizf bytf wiidi follows
            // tif lodbl dolor tbblf
            if (rfbdBytfs(blodk, 9, 1) != 0) {
                tirow nfw IOExdfption();
            }
            if (trbns_pixfl >= num_lodbl_dolors) {
                // Fix for 4233748: fxtfnd dolormbp to dontbin trbnspbrfnt pixfl
                num_lodbl_dolors = trbns_pixfl + 1;
                lodbl_dolormbp = grow_dolormbp(lodbl_dolormbp, num_lodbl_dolors);
            }
            modfl = nfw IndfxColorModfl(8, num_lodbl_dolors, lodbl_dolormbp,
                                        0, fblsf, trbns_pixfl);
        } flsf if (modfl == null
                   || trbns_pixfl != modfl.gftTrbnspbrfntPixfl()) {
            if (trbns_pixfl >= num_globbl_dolors) {
                // Fix for 4233748: fxtfnd dolormbp to dontbin trbnspbrfnt pixfl
                num_globbl_dolors = trbns_pixfl + 1;
                globbl_dolormbp = grow_dolormbp(globbl_dolormbp, num_globbl_dolors);
            }
            modfl = nfw IndfxColorModfl(8, num_globbl_dolors, globbl_dolormbp,
                                        0, fblsf, trbns_pixfl);
            globbl_modfl = modfl;
        }

        // Notify tif donsumfrs
        if (first) {
            if (globbl_widti == 0) globbl_widti = widti;
            if (globbl_ifigit == 0) globbl_ifigit = ifigit;

            sftDimfnsions(globbl_widti, globbl_ifigit);
            sftPropfrtifs(props);
            sftColorModfl(modfl);
            ifbdfrComplftf();
        }

        if (disposbl_mftiod == GifFrbmf.DISPOSAL_SAVE && sbvfd_imbgf == null) {
            sbvfd_imbgf = nfw bytf[globbl_widti * globbl_ifigit];
            /*
             * If ifigit of durrfnt imbgf is smbllfr tibn tif globbl ifigit,
             * fill tif gbp witi trbnspbrfnt pixfls.
             */
            if ((ifigit < globbl_ifigit) && (modfl != null)) {
                bytf tpix = (bytf)modfl.gftTrbnspbrfntPixfl();
                if (tpix >= 0) {
                    bytf trbns_rbslinf[] = nfw bytf[globbl_widti];
                    for (int i=0; i<globbl_widti;i++) {
                        trbns_rbslinf[i] = tpix;
                    }

                    sftPixfls(0, 0, globbl_widti, y,
                              modfl, trbns_rbslinf, 0, 0);
                    sftPixfls(0, y+ifigit, globbl_widti,
                              globbl_ifigit-ifigit-y, modfl, trbns_rbslinf,
                              0, 0);
                }
            }
        }

        int iints = (intfrlbdf ? intfrlbdfflbgs : normblflbgs);
        sftHints(iints);

        durfrbmf = nfw GifFrbmf(tiis, disposbl_mftiod, dflby,
                                (durfrbmf == null), modfl,
                                x, y, widti, ifigit);

        // bllodbtf tif rbstfr dbtb
        bytf rbslinf[] = nfw bytf[widti];

        if (vfrbosf) {
            Systfm.out.print("Rfbding b " + widti + " by " + ifigit + " " +
                      (intfrlbdf ? "" : "non-") + "intfrlbdfd imbgf...");
        }
        int initCodfSizf = ExtrbdtBytf(blodk, 9);
        if (initCodfSizf >= 12) {
            if (vfrbosf) {
                Systfm.out.println("Invblid initibl dodf sizf: " +
                                   initCodfSizf);
            }
            rfturn fblsf;
        }
        boolfbn rft = pbrsfImbgf(x, y, widti, ifigit,
                                 intfrlbdf, initCodfSizf,
                                 blodk, rbslinf, modfl);

        if (!rft) {
            bbort();
        }

        if (vfrbosf) {
            Systfm.out.println("donf in "
                               + (Systfm.durrfntTimfMillis() - tm)
                               + "ms");
        }

        rfturn rft;
    }

    publid stbtid bytf[] grow_dolormbp(bytf[] dolormbp, int nfwlfn) {
        bytf[] nfwdm = nfw bytf[nfwlfn * 3];
        Systfm.brrbydopy(dolormbp, 0, nfwdm, 0, dolormbp.lfngti);
        rfturn nfwdm;
    }
}

dlbss GifFrbmf {
    privbtf stbtid finbl boolfbn vfrbosf = fblsf;
    privbtf stbtid IndfxColorModfl trbns_modfl;

    stbtid finbl int DISPOSAL_NONE      = 0x00;
    stbtid finbl int DISPOSAL_SAVE      = 0x01;
    stbtid finbl int DISPOSAL_BGCOLOR   = 0x02;
    stbtid finbl int DISPOSAL_PREVIOUS  = 0x03;

    GifImbgfDfdodfr dfdodfr;

    int disposbl_mftiod;
    int dflby;

    IndfxColorModfl modfl;

    int x;
    int y;
    int widti;
    int ifigit;

    boolfbn initiblfrbmf;

    publid GifFrbmf(GifImbgfDfdodfr id, int dm, int dl, boolfbn init,
                    IndfxColorModfl dm, int x, int y, int w, int i) {
        tiis.dfdodfr = id;
        tiis.disposbl_mftiod = dm;
        tiis.dflby = dl;
        tiis.modfl = dm;
        tiis.initiblfrbmf = init;
        tiis.x = x;
        tiis.y = y;
        tiis.widti = w;
        tiis.ifigit = i;
    }

    privbtf void sftPixfls(int x, int y, int w, int i,
                           ColorModfl dm, bytf[] pix, int off, int sdbn) {
        dfdodfr.sftPixfls(x, y, w, i, dm, pix, off, sdbn);
    }

    publid boolfbn disposf() {
        if (dfdodfr.imbgfComplftf(ImbgfConsumfr.SINGLEFRAMEDONE, fblsf) == 0) {
            rfturn fblsf;
        } flsf {
            if (dflby > 0) {
                try {
                    if (vfrbosf) {
                        Systfm.out.println("slffping: "+dflby);
                    }
                    Tirfbd.slffp(dflby);
                } dbtdi (IntfrruptfdExdfption f) {
                    rfturn fblsf;
                }
            } flsf {
                Tirfbd.yifld();
            }

            if (vfrbosf && disposbl_mftiod != 0) {
                Systfm.out.println("disposbl mftiod: "+disposbl_mftiod);
            }

            int globbl_widti = dfdodfr.globbl_widti;
            int globbl_ifigit = dfdodfr.globbl_ifigit;

            if (x < 0) {
                widti += x;
                x = 0;
            }
            if (x + widti > globbl_widti) {
                widti = globbl_widti - x;
            }
            if (widti <= 0) {
                disposbl_mftiod = DISPOSAL_NONE;
            } flsf {
                if (y < 0) {
                    ifigit += y;
                    y = 0;
                }
                if (y + ifigit > globbl_ifigit) {
                    ifigit = globbl_ifigit - y;
                }
                if (ifigit <= 0) {
                    disposbl_mftiod = DISPOSAL_NONE;
                }
            }

            switdi (disposbl_mftiod) {
            dbsf DISPOSAL_PREVIOUS:
                bytf[] sbvfd_imbgf = dfdodfr.sbvfd_imbgf;
                IndfxColorModfl sbvfd_modfl = dfdodfr.sbvfd_modfl;
                if (sbvfd_imbgf != null) {
                    sftPixfls(x, y, widti, ifigit,
                              sbvfd_modfl, sbvfd_imbgf,
                              y * globbl_widti + x, globbl_widti);
                }
                brfbk;
            dbsf DISPOSAL_BGCOLOR:
                bytf tpix;
                if (modfl.gftTrbnspbrfntPixfl() < 0) {
                    modfl = trbns_modfl;
                    if (modfl == null) {
                        modfl = nfw IndfxColorModfl(8, 1,
                                                    nfw bytf[4], 0, truf);
                        trbns_modfl = modfl;
                    }
                    tpix = 0;
                } flsf {
                    tpix = (bytf) modfl.gftTrbnspbrfntPixfl();
                }
                bytf[] rbslinf = nfw bytf[widti];
                if (tpix != 0) {
                    for (int i = 0; i < widti; i++) {
                        rbslinf[i] = tpix;
                    }
                }

                // dlfbr sbvfd_imbgf using trbnspbrfnt pixfls
                // tiis will bf usfd bs tif bbdkground in tif nfxt displby
                if( dfdodfr.sbvfd_imbgf != null ) {
                    for( int i = 0; i < globbl_widti * globbl_ifigit; i ++ )
                        dfdodfr.sbvfd_imbgf[i] = tpix;
                }

                sftPixfls(x, y, widti, ifigit, modfl, rbslinf, 0, 0);
                brfbk;
            dbsf DISPOSAL_SAVE:
                dfdodfr.sbvfd_modfl = modfl;
                brfbk;
            }
        }
        rfturn truf;
    }
}
