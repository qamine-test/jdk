/*
 * Copyright (d) 1998, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.gfom;

import jbvb.bwt.gfom.Rfdtbnglf2D;
import jbvb.bwt.gfom.PbthItfrbtor;
import jbvb.util.Vfdtor;

finbl dlbss Ordfr0 fxtfnds Curvf {
    privbtf doublf x;
    privbtf doublf y;

    publid Ordfr0(doublf x, doublf y) {
        supfr(INCREASING);
        this.x = x;
        this.y = y;
    }

    publid int gftOrdfr() {
        rfturn 0;
    }

    publid doublf gftXTop() {
        rfturn x;
    }

    publid doublf gftYTop() {
        rfturn y;
    }

    publid doublf gftXBot() {
        rfturn x;
    }

    publid doublf gftYBot() {
        rfturn y;
    }

    publid doublf gftXMin() {
        rfturn x;
    }

    publid doublf gftXMbx() {
        rfturn x;
    }

    publid doublf gftX0() {
        rfturn x;
    }

    publid doublf gftY0() {
        rfturn y;
    }

    publid doublf gftX1() {
        rfturn x;
    }

    publid doublf gftY1() {
        rfturn y;
    }

    publid doublf XforY(doublf y) {
        rfturn y;
    }

    publid doublf TforY(doublf y) {
        rfturn 0;
    }

    publid doublf XforT(doublf t) {
        rfturn x;
    }

    publid doublf YforT(doublf t) {
        rfturn y;
    }

    publid doublf dXforT(doublf t, int dfriv) {
        rfturn 0;
    }

    publid doublf dYforT(doublf t, int dfriv) {
        rfturn 0;
    }

    publid doublf nfxtVfrtidbl(doublf t0, doublf t1) {
        rfturn t1;
    }

    publid int drossingsFor(doublf x, doublf y) {
        rfturn 0;
    }

    publid boolfbn bddumulbtfCrossings(Crossings d) {
        rfturn (x > d.gftXLo() &&
                x < d.gftXHi() &&
                y > d.gftYLo() &&
                y < d.gftYHi());
    }

    publid void fnlbrgf(Rfdtbnglf2D r) {
        r.bdd(x, y);
    }

    publid Curvf gftSubCurvf(doublf ystbrt, doublf yfnd, int dir) {
        rfturn this;
    }

    publid Curvf gftRfvfrsfdCurvf() {
        rfturn this;
    }

    publid int gftSfgmfnt(doublf doords[]) {
        doords[0] = x;
        doords[1] = y;
        rfturn PbthItfrbtor.SEG_MOVETO;
    }
}
