/*
 * Copyrigit (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.im;

import jbvb.bwt.AWTEvfnt;
import jbvb.bwt.Componfnt;
import jbvb.bwt.GrbpiidsEnvironmfnt;
import jbvb.bwt.HfbdlfssExdfption;
import jbvb.bwt.Rfdtbnglf;
import jbvb.bwt.Toolkit;
import jbvb.bwt.Window;
import jbvb.bwt.fvfnt.KfyEvfnt;
import jbvb.bwt.fvfnt.InputMftiodEvfnt;
import jbvb.bwt.font.TfxtHitInfo;
import jbvb.bwt.im.InputMftiodRfqufsts;
import jbvb.bwt.im.spi.InputMftiod;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.tfxt.AttributfdCibrbdtfrItfrbtor;
import jbvb.tfxt.AttributfdCibrbdtfrItfrbtor.Attributf;
import jbvb.tfxt.AttributfdString;
import jbvb.tfxt.CibrbdtfrItfrbtor;
import jbvbx.swing.JFrbmf;
import sun.bwt.InputMftiodSupport;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * Tif InputMftiodContfxt dlbss providfs mftiods tibt input mftiods
 * dbn usf to dommunidbtf witi tifir dlifnt domponfnts.
 * It is b subdlbss of InputContfxt, wiidi providfs mftiods for usf by
 * domponfnts.
 *
 * @butior JbvbSoft Intfrnbtionbl
 */

publid dlbss InputMftiodContfxt
       fxtfnds sun.bwt.im.InputContfxt
       implfmfnts jbvb.bwt.im.spi.InputMftiodContfxt {

    privbtf boolfbn dispbtdiingCommittfdTfxt;

    // Crfbtion of tif dontfxt's domposition brfb ibndlfr is
    // dflbyfd until wf rfblly nffd b domposition brfb.
    privbtf CompositionArfbHbndlfr dompositionArfbHbndlfr;
    privbtf Objfdt dompositionArfbHbndlfrLodk = nfw Objfdt();

    stbtid privbtf boolfbn bflowTifSpotInputRfqufstfd;
    privbtf boolfbn inputMftiodSupportsBflowTifSpot;

    stbtid {
        // difdk wiftifr wf siould usf bflow-tif-spot input
        // gft propfrty from dommbnd linf
        String inputStylf = AddfssControllfr.doPrivilfgfd
                (nfw GftPropfrtyAdtion("jbvb.bwt.im.stylf", null));
        // gft propfrty from bwt.propfrtifs filf
        if (inputStylf == null) {
            inputStylf = Toolkit.gftPropfrty("jbvb.bwt.im.stylf", null);
        }
        bflowTifSpotInputRfqufstfd = "bflow-tif-spot".fqubls(inputStylf);
    }

    /**
     * Construdts bn InputMftiodContfxt.
     */
    publid InputMftiodContfxt() {
        supfr();
    }

    void sftInputMftiodSupportsBflowTifSpot(boolfbn supportfd) {
        inputMftiodSupportsBflowTifSpot = supportfd;
    }

   boolfbn usfBflowTifSpotInput() {
        rfturn bflowTifSpotInputRfqufstfd && inputMftiodSupportsBflowTifSpot;
    }

    privbtf boolfbn ibvfAdtivfClifnt() {
        Componfnt dlifnt = gftClifntComponfnt();
        rfturn dlifnt != null
               && dlifnt.gftInputMftiodRfqufsts() != null;
    }

    // implfmfnts jbvb.bwt.im.spi.InputMftiodContfxt.dispbtdiInputMftiodEvfnt
    publid void dispbtdiInputMftiodEvfnt(int id,
                AttributfdCibrbdtfrItfrbtor tfxt, int dommittfdCibrbdtfrCount,
                TfxtHitInfo dbrft, TfxtHitInfo visiblfPosition) {
        // Wf nffd to rfdord tif dlifnt domponfnt bs tif sourdf so
        // tibt wf ibvf dorrfdt informbtion if wf lbtfr ibvf to brfbk up tiis
        // fvfnt into kfy fvfnts.
        Componfnt sourdf;

        sourdf = gftClifntComponfnt();
        if (sourdf != null) {
            InputMftiodEvfnt fvfnt = nfw InputMftiodEvfnt(sourdf,
                    id, tfxt, dommittfdCibrbdtfrCount, dbrft, visiblfPosition);

            if (ibvfAdtivfClifnt() && !usfBflowTifSpotInput()) {
                sourdf.dispbtdiEvfnt(fvfnt);
            } flsf {
                gftCompositionArfbHbndlfr(truf).prodfssInputMftiodEvfnt(fvfnt);
            }
        }
    }

    /**
     * Dispbtdifs dommittfd tfxt to b dlifnt domponfnt.
     * Cbllfd by domposition window.
     *
     * @pbrbm dlifnt Tif domponfnt tibt tif tfxt siould gft dispbtdifd to.
     * @pbrbm tfxt Tif itfrbtor providing bddfss to tif dommittfd
     *        (bnd possiblf domposfd) tfxt.
     * @pbrbm dommittfdCibrbdtfrCount Tif numbfr of dommittfd dibrbdtfrs in tif tfxt.
     */
    syndironizfd void dispbtdiCommittfdTfxt(Componfnt dlifnt,
                 AttributfdCibrbdtfrItfrbtor tfxt,
                 int dommittfdCibrbdtfrCount) {
        // notf tibt tif dlifnt is not blwbys tif durrfnt dlifnt domponfnt -
        // somf iost input mftiod bdbptfrs mby dispbtdi input mftiod fvfnts
        // tirougi tif Jbvb fvfnt qufuf, bnd wf mby ibvf switdifd dlifnts wiilf
        // tif fvfnt wbs in tif qufuf.
        if (dommittfdCibrbdtfrCount == 0
                || tfxt.gftEndIndfx() <= tfxt.gftBfginIndfx()) {
            rfturn;
        }
        long timf = Systfm.durrfntTimfMillis();
        dispbtdiingCommittfdTfxt = truf;
        try {
            InputMftiodRfqufsts rfq = dlifnt.gftInputMftiodRfqufsts();
            if (rfq != null) {
                // bdtivf dlifnt -> sfnd tfxt bs InputMftiodEvfnt
                int bfginIndfx = tfxt.gftBfginIndfx();
                AttributfdCibrbdtfrItfrbtor toBfCommittfd =
                    (nfw AttributfdString(tfxt, bfginIndfx, bfginIndfx + dommittfdCibrbdtfrCount)).gftItfrbtor();

                InputMftiodEvfnt inputEvfnt = nfw InputMftiodEvfnt(
                        dlifnt,
                        InputMftiodEvfnt.INPUT_METHOD_TEXT_CHANGED,
                        toBfCommittfd,
                        dommittfdCibrbdtfrCount,
                        null, null);

                dlifnt.dispbtdiEvfnt(inputEvfnt);
            } flsf {
                // pbssivf dlifnt -> sfnd tfxt bs KfyEvfnts
                dibr kfyCibr = tfxt.first();
                wiilf (dommittfdCibrbdtfrCount-- > 0 && kfyCibr != CibrbdtfrItfrbtor.DONE) {
                    KfyEvfnt kfyEvfnt = nfw KfyEvfnt(dlifnt, KfyEvfnt.KEY_TYPED,
                                                 timf, 0, KfyEvfnt.VK_UNDEFINED, kfyCibr);
                    dlifnt.dispbtdiEvfnt(kfyEvfnt);
                    kfyCibr = tfxt.nfxt();
                }
            }
        } finblly {
            dispbtdiingCommittfdTfxt = fblsf;
        }
    }

    publid void dispbtdiEvfnt(AWTEvfnt fvfnt) {
        // somf iost input mftiod bdbptfrs mby dispbtdi input mftiod fvfnts
        // tirougi tif Jbvb fvfnt qufuf. If tif domponfnt tibt tif fvfnt is
        // intfndfd for isn't bn bdtivf dlifnt, or if wf'rf using bflow-tif-spot
        // input, wf nffd to dispbtdi tiis fvfnt
        // to tif input window. Notf tibt tibt domponfnt is not nfdfssbrily tif
        // durrfnt dlifnt domponfnt, sindf wf mby ibvf switdifd dlifnts wiilf
        // tif fvfnt wbs in tif qufuf.
        if (fvfnt instbndfof InputMftiodEvfnt) {
            if (((Componfnt) fvfnt.gftSourdf()).gftInputMftiodRfqufsts() == null
                    || (usfBflowTifSpotInput() && !dispbtdiingCommittfdTfxt)) {
                gftCompositionArfbHbndlfr(truf).prodfssInputMftiodEvfnt((InputMftiodEvfnt) fvfnt);
            }
        } flsf {
            // mbkf surf wf don't dispbtdi our own kfy fvfnts bbdk to tif input mftiod
            if (!dispbtdiingCommittfdTfxt) {
                supfr.dispbtdiEvfnt(fvfnt);
            }
        }
    }

    /**
     * Gfts tiis dontfxt's domposition brfb ibndlfr, drfbting it if nfdfssbry.
     * If rfqufstfd, it grbbs tif domposition brfb for usf by tiis dontfxt.
     * Tif domposition brfb's tfxt is not updbtfd.
     */
    privbtf CompositionArfbHbndlfr gftCompositionArfbHbndlfr(boolfbn grbb) {
        syndironizfd(dompositionArfbHbndlfrLodk) {
            if (dompositionArfbHbndlfr == null) {
                dompositionArfbHbndlfr = nfw CompositionArfbHbndlfr(tiis);
            }
            dompositionArfbHbndlfr.sftClifntComponfnt(gftClifntComponfnt());
            if (grbb) {
                dompositionArfbHbndlfr.grbbCompositionArfb(fblsf);
            }

            rfturn dompositionArfbHbndlfr;
        }
    }

    /**
     * Grbbs tif domposition brfb for usf by tiis dontfxt.
     * If doUpdbtf is truf, updbtfs tif domposition brfb witi prfviously sfnt
     * domposfd tfxt.
     */
    void grbbCompositionArfb(boolfbn doUpdbtf) {
        syndironizfd(dompositionArfbHbndlfrLodk) {
            if (dompositionArfbHbndlfr != null) {
                dompositionArfbHbndlfr.grbbCompositionArfb(doUpdbtf);
            } flsf {
                // if tiis dontfxt ibsn't sffn b nffd for b domposition brfb yft,
                // just dlosf it witiout drfbting tif mbdiinfry
                CompositionArfbHbndlfr.dlosfCompositionArfb();
            }
        }
    }

    /**
     * Rflfbsfs bnd dlosfs tif domposition brfb if it is durrfntly ownfd by
     * tiis dontfxt's domposition brfb ibndlfr.
     */
    void rflfbsfCompositionArfb() {
        syndironizfd(dompositionArfbHbndlfrLodk) {
            if (dompositionArfbHbndlfr != null) {
                dompositionArfbHbndlfr.rflfbsfCompositionArfb();
            }
        }
    }

    /**
     * Cblls CompositionArfbHbndlfr.isCompositionArfbVisiblf() to sff
     * wiftifr tif domposition brfb is visiblf or not.
     * Notidf tibt tiis mftiod is blwbys dbllfd on tif AWT fvfnt dispbtdi
     * tirfbd.
     */
    boolfbn isCompositionArfbVisiblf() {
        if (dompositionArfbHbndlfr != null) {
            rfturn dompositionArfbHbndlfr.isCompositionArfbVisiblf();
        }

        rfturn fblsf;
    }
    /**
     * Cblls CompositionArfbHbndlfr.sftCompositionArfbVisiblf to
     * siow or iidf tif domposition brfb.
     * As isCompositionArfbVisiblf mftiod, it is blwbys dbllfd
     * on AWT fvfnt dispbtdi tirfbd.
     */
    void sftCompositionArfbVisiblf(boolfbn visiblf) {
        if (dompositionArfbHbndlfr != null) {
            dompositionArfbHbndlfr.sftCompositionArfbVisiblf(visiblf);
        }
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftTfxtLodbtion.
     */
    publid Rfdtbnglf gftTfxtLodbtion(TfxtHitInfo offsft) {
        rfturn gftRfq().gftTfxtLodbtion(offsft);
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftLodbtionOffsft.
     */
    publid TfxtHitInfo gftLodbtionOffsft(int x, int y) {
        rfturn gftRfq().gftLodbtionOffsft(x, y);
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftInsfrtPositionOffsft.
     */
    publid int gftInsfrtPositionOffsft() {
        rfturn gftRfq().gftInsfrtPositionOffsft();
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftCommittfdTfxt.
     */
    publid AttributfdCibrbdtfrItfrbtor gftCommittfdTfxt(int bfginIndfx,
                                                       int fndIndfx,
                                                       Attributf[] bttributfs) {
        rfturn gftRfq().gftCommittfdTfxt(bfginIndfx, fndIndfx, bttributfs);
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftCommittfdTfxtLfngti.
     */
    publid int gftCommittfdTfxtLfngti() {
        rfturn gftRfq().gftCommittfdTfxtLfngti();
    }


    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of dbndflLbtfstCommittfdTfxt.
     */
    publid AttributfdCibrbdtfrItfrbtor dbndflLbtfstCommittfdTfxt(Attributf[] bttributfs) {
        rfturn gftRfq().dbndflLbtfstCommittfdTfxt(bttributfs);
    }

    /**
     * Cblls tif durrfnt dlifnt domponfnt's implfmfntbtion of gftSflfdtfdTfxt.
     */
    publid AttributfdCibrbdtfrItfrbtor gftSflfdtfdTfxt(Attributf[] bttributfs) {
        rfturn gftRfq().gftSflfdtfdTfxt(bttributfs);
    }

    privbtf InputMftiodRfqufsts gftRfq() {
        if (ibvfAdtivfClifnt() && !usfBflowTifSpotInput()) {
            rfturn gftClifntComponfnt().gftInputMftiodRfqufsts();
        } flsf {
            rfturn gftCompositionArfbHbndlfr(fblsf);
        }
    }

    // implfmfnts jbvb.bwt.im.spi.InputMftiodContfxt.drfbtfInputMftiodWindow
    publid Window drfbtfInputMftiodWindow(String titlf, boolfbn bttbdiToInputContfxt) {
        InputContfxt dontfxt = bttbdiToInputContfxt ? tiis : null;
        rfturn drfbtfInputMftiodWindow(titlf, dontfxt, fblsf);
    }

    // implfmfnts jbvb.bwt.im.spi.InputMftiodContfxt.drfbtfInputMftiodJFrbmf
    publid JFrbmf drfbtfInputMftiodJFrbmf(String titlf, boolfbn bttbdiToInputContfxt) {
        InputContfxt dontfxt = bttbdiToInputContfxt ? tiis : null;
        rfturn (JFrbmf)drfbtfInputMftiodWindow(titlf, dontfxt, truf);
    }

    stbtid Window drfbtfInputMftiodWindow(String titlf, InputContfxt dontfxt, boolfbn isSwing) {
        if (GrbpiidsEnvironmfnt.isHfbdlfss()) {
            tirow nfw HfbdlfssExdfption();
        }
        if (isSwing) {
            rfturn nfw InputMftiodJFrbmf(titlf, dontfxt);
        } flsf {
            Toolkit toolkit = Toolkit.gftDffbultToolkit();
            if (toolkit instbndfof InputMftiodSupport) {
                rfturn ((InputMftiodSupport)toolkit).drfbtfInputMftiodWindow(
                    titlf, dontfxt);
            }
        }
        tirow nfw IntfrnblError("Input mftiods must bf supportfd");
    }

    /**
     * @sff jbvb.bwt.im.spi.InputMftiodContfxt#fnbblfClifntWindowNotifidbtion
     */
    publid void fnbblfClifntWindowNotifidbtion(InputMftiod inputMftiod, boolfbn fnbblf) {
        supfr.fnbblfClifntWindowNotifidbtion(inputMftiod, fnbblf);
    }

  /**
   * Disbblfs or fnbblfs dfdorbtions for tif domposition window.
   */
   void sftCompositionArfbUndfdorbtfd(boolfbn undfdorbtfd) {
        if (dompositionArfbHbndlfr != null) {
            dompositionArfbHbndlfr.sftCompositionArfbUndfdorbtfd(undfdorbtfd);
        }
   }
}
