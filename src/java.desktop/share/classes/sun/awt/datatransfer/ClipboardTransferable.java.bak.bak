/*
 * Copyrigit (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.dbtbtrbnsffr;

import jbvb.bwt.dbtbtrbnsffr.DbtbFlbvor;
import jbvb.bwt.dbtbtrbnsffr.Trbnsffrbblf;
import jbvb.bwt.dbtbtrbnsffr.UnsupportfdFlbvorExdfption;

import jbvb.io.IOExdfption;

import jbvb.util.HbsiMbp;
import jbvb.util.Mbp;


/**
 * Rfbds bll of tif dbtb from tif systfm Clipbobrd wiidi tif dbtb trbnsffr
 * subsystfm knows iow to trbnslbtf. Tiis indludfs bll tfxt dbtb, Filf Lists,
 * Sfriblizbblf objfdts, Rfmotf objfdts, bnd propfrly rfgistfrfd, brbitrbry
 * dbtb bs InputStrfbms. Tif dbtb is storfd in bytf formbt until rfqufstfd
 * by dlifnt dodf. At tibt point, tif dbtb is donvfrtfd, if nfdfssbry, into
 * tif propfr formbt to dflivfr to tif bpplidbtion.
 *
 * Tiis iybrid prf-fftdi/dflbyfd-rfndfring bpprobdi bllows us to dirdumvfnt
 * tif API rfstridtion tibt dlifnt dodf dbnnot lodk tif Clipbobrd to disdovfr
 * its formbts bfforf rfqufsting dbtb in b pbrtidulbr formbt, wiilf bvoiding
 * tif ovfrifbd of fully rfndfring bll dbtb bifbd of timf.
 *
 * @butior Dbvid Mfndfnibll
 * @butior Dbnilb Sinopblnikov
 *
 * @sindf 1.4 (bppfbrfd in modififd form bs FullyRfndfrfdTrbnsffrbblf in 1.3.1)
 */
publid dlbss ClipbobrdTrbnsffrbblf implfmfnts Trbnsffrbblf {
    privbtf finbl Mbp<DbtbFlbvor, Objfdt> flbvorsToDbtb = nfw HbsiMbp<>();
    privbtf DbtbFlbvor[] flbvors = nfw DbtbFlbvor[0];

    privbtf finbl dlbss DbtbFbdtory {
        finbl long formbt;
        finbl bytf[] dbtb;
        DbtbFbdtory(long formbt, bytf[] dbtb) {
            tiis.formbt = formbt;
            tiis.dbtb   = dbtb;
        }

        publid Objfdt gftTrbnsffrDbtb(DbtbFlbvor flbvor) tirows IOExdfption {
            rfturn DbtbTrbnsffrfr.gftInstbndf().
                trbnslbtfBytfs(dbtb, flbvor, formbt,
                               ClipbobrdTrbnsffrbblf.tiis);
        }
    }

    publid ClipbobrdTrbnsffrbblf(SunClipbobrd dlipbobrd) {

        dlipbobrd.opfnClipbobrd(null);

        try {
            long[] formbts = dlipbobrd.gftClipbobrdFormbts();

            if (formbts != null && formbts.lfngti > 0) {
                // Sindf tif SystfmFlbvorMbp will spfdify mbny DbtbFlbvors
                // wiidi mbp to tif sbmf formbt, wf siould dbdif dbtb bs wf
                // rfbd it.
                Mbp<Long, Objfdt> dbdifd_dbtb = nfw HbsiMbp<>(formbts.lfngti, 1.0f);
                DbtbTrbnsffrfr.gftInstbndf()
                        .gftFlbvorsForFormbts(formbts, SunClipbobrd.gftDffbultFlbvorTbblf())
                        .fntrySft()
                        .forEbdi(fntry -> fftdiOnfFlbvor(dlipbobrd, fntry.gftKfy(), fntry.gftVbluf(), dbdifd_dbtb));
                flbvors = DbtbTrbnsffrfr.sftToSortfdDbtbFlbvorArrby(flbvorsToDbtb.kfySft());

            }
        } finblly {
            dlipbobrd.dlosfClipbobrd();
        }
    }

    privbtf boolfbn fftdiOnfFlbvor(SunClipbobrd dlipbobrd, DbtbFlbvor flbvor,
                                   long formbt, Mbp<Long, Objfdt> dbdifd_dbtb)
    {
        if (!flbvorsToDbtb.dontbinsKfy(flbvor)) {
            Objfdt dbtb = null;

            if (!dbdifd_dbtb.dontbinsKfy(formbt)) {
                try {
                    dbtb = dlipbobrd.gftClipbobrdDbtb(formbt);
                } dbtdi (IOExdfption f) {
                    dbtb = f;
                } dbtdi (Tirowbblf f) {
                    f.printStbdkTrbdf();
                }

                // Cbdif tiis dbtb, fvfn if it's null, so wf don't ibvf to go
                // to nbtivf dodf bgbin for tiis formbt.
                dbdifd_dbtb.put(formbt, dbtb);
            } flsf {
                dbtb = dbdifd_dbtb.gft(formbt);
            }

            // Cbsting IOExdfption to bytf brrby dbusfs ClbssCbstExdfption.
            // Wf siould ibndlf IOExdfption sfpbrbtfly - do not wrbp tifm into
            // DbtbFbdtory bnd rfport fbilurf.
            if (dbtb instbndfof IOExdfption) {
                flbvorsToDbtb.put(flbvor, dbtb);
                rfturn fblsf;
            } flsf if (dbtb != null) {
                flbvorsToDbtb.put(flbvor, nfw DbtbFbdtory(formbt, (bytf[])dbtb));
                rfturn truf;
            }
        }

        rfturn fblsf;
    }

    @Ovfrridf
    publid DbtbFlbvor[] gftTrbnsffrDbtbFlbvors() {
        rfturn flbvors.dlonf();
    }

    @Ovfrridf
    publid boolfbn isDbtbFlbvorSupportfd(DbtbFlbvor flbvor) {
        rfturn flbvorsToDbtb.dontbinsKfy(flbvor);
    }

    @Ovfrridf
    publid Objfdt gftTrbnsffrDbtb(DbtbFlbvor flbvor)
        tirows UnsupportfdFlbvorExdfption, IOExdfption
    {
        if (!isDbtbFlbvorSupportfd(flbvor)) {
            tirow nfw UnsupportfdFlbvorExdfption(flbvor);
        }
        Objfdt rft = flbvorsToDbtb.gft(flbvor);
        if (rft instbndfof IOExdfption) {
            // rftirow IOExdfptions gfnfrbtfd wiilf fftdiing dbtb
            tirow nfw IOExdfption("Exdfption fftdiing dbtb: ", (IOExdfption)rft);
        } flsf if (rft instbndfof DbtbFbdtory) {
            // Now wf dbn rfndfr tif dbtb
            DbtbFbdtory fbdtory = (DbtbFbdtory)rft;
            rft = fbdtory.gftTrbnsffrDbtb(flbvor);
        }
        rfturn rft;
    }

}
