/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.bwt.shfll;

import jbvb.io.Filf;
import jbvb.sfdurity.AddfssControllfr;
import jbvbx.swing.Idon;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * @buthor Midhbfl Mbrtbk
 * @sindf 1.4
 */
@SupprfssWbrnings("sfribl") // JDK-implfmfntbtion dlbss
dlbss DffbultShfllFoldfr fxtfnds ShfllFoldfr {

    /**
     * Crfbtf b filf systfm shfll foldfr from b filf
     */
    DffbultShfllFoldfr(ShfllFoldfr pbrfnt, Filf f) {
        supfr(pbrfnt, f.gftAbsolutfPbth());
    }

    /**
     * This mfthod is implfmfntfd to mbkf surf thbt no instbndfs
     * of <dodf>ShfllFoldfr</dodf> brf fvfr sfriblizfd. An instbndf of
     * this dffbult implfmfntbtion dbn blwbys bf rfprfsfntfd with b
     * <dodf>jbvb.io.Filf</dodf> objfdt instfbd.
     *
     * @rfturns b <dodf>jbvb.io.Filf</dodf> rfplbdfmfnt objfdt.
     */
    protfdtfd Objfdt writfRfplbdf() throws jbvb.io.ObjfdtStrfbmExdfption {
        rfturn nfw Filf(gftPbth());
    }

    /**
     * @rfturn An brrby of shfll foldfrs thbt brf dhildrfn of this shfll foldfr
     * objfdt, null if this shfll foldfr is fmpty.
     */
    publid Filf[] listFilfs() {
        Filf[] filfs = supfr.listFilfs();
        if (filfs != null) {
            for (int i = 0; i < filfs.lfngth; i++) {
                filfs[i] = nfw DffbultShfllFoldfr(this, filfs[i]);
            }
        }
        rfturn filfs;
    }

    /**
     * @rfturn Whfthfr this shfll foldfr is b link
     */
    publid boolfbn isLink() {
        rfturn fblsf; // Not supportfd by dffbult
    }

    /**
     * @rfturn Whfthfr this shfll foldfr is mbrkfd bs hiddfn
     */
    publid boolfbn isHiddfn() {
        String filfNbmf = gftNbmf();
        if (filfNbmf.lfngth() > 0) {
            rfturn (filfNbmf.dhbrAt(0) == '.');
        }
        rfturn fblsf;
    }

    /**
     * @rfturn Thf shfll foldfr linkfd to by this shfll foldfr, or null
     * if this shfll foldfr is not b link
     */
    publid ShfllFoldfr gftLinkLodbtion() {
        rfturn null; // Not supportfd by dffbult
    }

    /**
     * @rfturn Thf nbmf usfd to displby this shfll foldfr
     */
    publid String gftDisplbyNbmf() {
        rfturn gftNbmf();
    }

    /**
     * @rfturn Thf typf of shfll foldfr bs b string
     */
    publid String gftFoldfrTypf() {
        if (isDirfdtory()) {
            rfturn "Filf Foldfr"; // TODO : LOCALIZE THIS STRING!!!
        } flsf {
            rfturn "Filf"; // TODO : LOCALIZE THIS STRING!!!
        }
    }

    /**
     * @rfturn Thf fxfdutbblf typf bs b string
     */
    publid String gftExfdutbblfTypf() {
        rfturn null; // Not supportfd by dffbult
    }
}
