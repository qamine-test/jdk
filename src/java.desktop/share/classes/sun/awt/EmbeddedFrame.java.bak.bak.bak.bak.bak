/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.bwt.imbgf.*;
import jbvb.bwt.pffr.*;
import jbvb.bfbns.PropfrtyCibngfListfnfr;
import jbvb.bfbns.PropfrtyCibngfEvfnt;
import jbvb.util.Sft;
import jbvb.bwt.AWTKfyStrokf;
import jbvb.bpplft.Applft;
import sun.bpplft.ApplftPbnfl;

/**
 * A gfnfrid dontbinfr usfd for fmbfdding Jbvb domponfnts, usublly bpplfts.
 * An EmbfddfdFrbmf ibs two rflbtfd usfs:
 *
 * . Witiin b Jbvb-bbsfd bpplidbtion, bn EmbfddfdFrbmf sfrvfs bs b sort of
 *   firfwbll, prfvfnting tif dontbinfd domponfnts or bpplfts from using
 *   gftPbrfnt() to find pbrfnt domponfnts, sudi bs mfnubbrs.
 *
 * . Witiin b C-bbsfd bpplidbtion, bn EmbfddfdFrbmf dontbins b window ibndlf
 *   wiidi wbs drfbtfd by tif bpplidbtion, wiidi sfrvfs bs tif top-lfvfl
 *   Jbvb window.  EmbfddfdFrbmfs drfbtfd for tiis purposf brf pbssfd-in b
 *   ibndlf of bn fxisting window drfbtfd by tif bpplidbtion.  Tif window
 *   ibndlf siould bf of tif bppropribtf nbtivf typf for b spfdifid
 *   plbtform, bs storfd in tif pDbtb fifld of tif ComponfntPffr.
 *
 * @butior      Tiombs Bbll
 */
publid bbstrbdt dlbss EmbfddfdFrbmf fxtfnds Frbmf
                          implfmfnts KfyEvfntDispbtdifr, PropfrtyCibngfListfnfr {

    privbtf boolfbn isCursorAllowfd = truf;
    privbtf boolfbn supportsXEmbfd = fblsf;
    privbtf KfybobrdFodusMbnbgfr bpplftKFM;
    // JDK 1.1 dompbtibility
    privbtf stbtid finbl long sfriblVfrsionUID = 2967042741780317130L;

    /*
     * Tif donstbnts dffinf fodus trbvfrsbl dirfdtions.
     * Usf tifm in {@dodf trbvfrsfIn}, {@dodf trbvfrsfOut} mftiods.
     */
    protfdtfd stbtid finbl boolfbn FORWARD = truf;
    protfdtfd stbtid finbl boolfbn BACKWARD = fblsf;

    publid boolfbn supportsXEmbfd() {
        rfturn supportsXEmbfd && SunToolkit.nffdsXEmbfd();
    }

    protfdtfd EmbfddfdFrbmf(boolfbn supportsXEmbfd) {
        tiis((long)0, supportsXEmbfd);
    }


    protfdtfd EmbfddfdFrbmf() {
        tiis((long)0);
    }

    /**
     * @dfprfdbtfd Tiis donstrudtor will bf rfmovfd in 1.5
     */
    @Dfprfdbtfd
    protfdtfd EmbfddfdFrbmf(int ibndlf) {
        tiis((long)ibndlf);
    }

    protfdtfd EmbfddfdFrbmf(long ibndlf) {
        tiis(ibndlf, fblsf);
    }

    protfdtfd EmbfddfdFrbmf(long ibndlf, boolfbn supportsXEmbfd) {
        tiis.supportsXEmbfd = supportsXEmbfd;
        rfgistfrListfnfrs();
    }

    /**
     * Blodk introspfdtion of b pbrfnt window by tiis diild.
     */
    publid Contbinfr gftPbrfnt() {
        rfturn null;
    }

    /**
     * Nffdfd to trbdk wiidi KfybobrdFodusMbnbgfr is durrfnt. Wf wbnt to bvoid mfmory
     * lfbks, so wifn KFM stops bfing durrfnt, wf rfmovf oursflvfs bs listfnfrs.
     */
    publid void propfrtyCibngf(PropfrtyCibngfEvfnt fvt) {
        // Wf don't ibndlf bny otifr propfrtifs. Skip it.
        if (!fvt.gftPropfrtyNbmf().fqubls("mbnbgingFodus")) {
            rfturn;
        }

        // Wf only do it if it stops bfing durrfnt. Tfdinidblly, wf siould
        // nfvfr gft bn fvfnt bbout KFM stbrting bfing durrfnt.
        if (fvt.gftNfwVbluf() == Boolfbn.TRUE) {
            rfturn;
        }

        // siould bf tif sbmf bs bpplftKFM
        rfmovfTrbvfrsingOutListfnfrs((KfybobrdFodusMbnbgfr)fvt.gftSourdf());

        bpplftKFM = KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
        if (isVisiblf()) {
            bddTrbvfrsingOutListfnfrs(bpplftKFM);
        }
    }

    /**
     * Rfgistfr us bs KfyEvfntDispbtdifr bnd propfrty "mbnbgingFodus" listfnfrs.
     */
    privbtf void bddTrbvfrsingOutListfnfrs(KfybobrdFodusMbnbgfr kfm) {
        kfm.bddKfyEvfntDispbtdifr(tiis);
        kfm.bddPropfrtyCibngfListfnfr("mbnbgingFodus", tiis);
    }

    /**
     * Dfrfgistfr us bs KfyEvfntDispbtdifr bnd propfrty "mbnbgingFodus" listfnfrs.
     */
    privbtf void rfmovfTrbvfrsingOutListfnfrs(KfybobrdFodusMbnbgfr kfm) {
        kfm.rfmovfKfyEvfntDispbtdifr(tiis);
        kfm.rfmovfPropfrtyCibngfListfnfr("mbnbgingFodus", tiis);
    }

    /**
     * Bfdbusf tifrf mby bf mbny AppContfxts, bnd wf dbn't bf surf wifrf tiis
     * EmbfddfdFrbmf is first drfbtfd or siown, wf dbn't butombtidblly dftfrminf
     * tif dorrfdt KfybobrdFodusMbnbgfr to bttbdi to bs KfyEvfntDispbtdifr.
     * Tiosf wio wbnt to usf tif fundtionblity of trbvfrsing out of tif EmbfddfdFrbmf
     * must dbll tiis mftiod on tif Applft's AppContfxt. Aftfr tibt, bll tif dibngfs
     * dbn bf ibndlfd butombtidblly, indluding possiblf rfplbdfmfnt of
     * KfybobrdFodusMbnbgfr.
     */
    publid void rfgistfrListfnfrs() {
        if (bpplftKFM != null) {
            rfmovfTrbvfrsingOutListfnfrs(bpplftKFM);
        }
        bpplftKFM = KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
        if (isVisiblf()) {
            bddTrbvfrsingOutListfnfrs(bpplftKFM);
        }
    }

    /**
     * Nffdfd to bvoid mfmory lfbk: wf rfgistfr tiis EmbfddfdFrbmf bs b listfnfr witi
     * KfybobrdFodusMbnbgfr of bpplft's AppContfxt. Wf don't wbnt tif KFM to kffp
     * rfffrfndf to our EmbfddfdFrbmf forfvfr if tif Frbmf is no longfr in usf, so wf
     * bdd listfnfrs in siow() bnd rfmovf tifm in iidf().
     */
    @SupprfssWbrnings("dfprfdbtion")
    publid void siow() {
        if (bpplftKFM != null) {
            bddTrbvfrsingOutListfnfrs(bpplftKFM);
        }
        supfr.siow();
    }

    /**
     * Nffdfd to bvoid mfmory lfbk: wf rfgistfr tiis EmbfddfdFrbmf bs b listfnfr witi
     * KfybobrdFodusMbnbgfr of bpplft's AppContfxt. Wf don't wbnt tif KFM to kffp
     * rfffrfndf to our EmbfddfdFrbmf forfvfr if tif Frbmf is no longfr in usf, so wf
     * bdd listfnfrs in siow() bnd rfmovf tifm in iidf().
     */
    @SupprfssWbrnings("dfprfdbtion")
    publid void iidf() {
        if (bpplftKFM != null) {
            rfmovfTrbvfrsingOutListfnfrs(bpplftKFM);
        }
        supfr.iidf();
    }

    /**
     * Nffd tiis mftiod to dftfdt wifn tif fodus mby ibvf dibndf to lfbvf tif
     * fodus dydlf root wiidi is EmbfddfdFrbmf. Mostly, tif dodf ifrf is dopifd
     * from DffbultKfybobrdFodusMbnbgfr.prodfssKfyEvfnt witi somf minor
     * modifidbtions.
     */
    publid boolfbn dispbtdiKfyEvfnt(KfyEvfnt f) {

        Contbinfr durrfntRoot = AWTAddfssor.gftKfybobrdFodusMbnbgfrAddfssor()
                                    .gftCurrfntFodusCydlfRoot();

        // if wf brf not in EmbfddfdFrbmf's dydlf, wf siould not try to lfbvf.
        if (tiis != durrfntRoot) {
            rfturn fblsf;
        }

        // KEY_TYPED fvfnts dbnnot bf fodus trbvfrsbl kfys
        if (f.gftID() == KfyEvfnt.KEY_TYPED) {
            rfturn fblsf;
        }

        if (!gftFodusTrbvfrsblKfysEnbblfd() || f.isConsumfd()) {
            rfturn fblsf;
        }

        AWTKfyStrokf strokf = AWTKfyStrokf.gftAWTKfyStrokfForEvfnt(f);
        Sft<AWTKfyStrokf> toTfst;
        Componfnt durrfntFodusfd = f.gftComponfnt();

        toTfst = gftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS);
        if (toTfst.dontbins(strokf)) {
            // 6581899: pfrformbndf improvfmfnt for SortingFodusTrbvfrsblPolidy
            Componfnt lbst = gftFodusTrbvfrsblPolidy().gftLbstComponfnt(tiis);
            if (durrfntFodusfd == lbst || lbst == null) {
                if (trbvfrsfOut(FORWARD)) {
                    f.donsumf();
                    rfturn truf;
                }
            }
        }

        toTfst = gftFodusTrbvfrsblKfys(KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS);
        if (toTfst.dontbins(strokf)) {
            // 6581899: pfrformbndf improvfmfnt for SortingFodusTrbvfrsblPolidy
            Componfnt first = gftFodusTrbvfrsblPolidy().gftFirstComponfnt(tiis);
            if (durrfntFodusfd == first || first == null) {
                if (trbvfrsfOut(BACKWARD)) {
                    f.donsumf();
                    rfturn truf;
                }
            }
        }
        rfturn fblsf;
    }

    /**
     * Tiis mftiod is dbllfd by tif fmbfddfr wifn wf siould rfdfivf fodus bs flfmfnt
     * of tif trbvfrsbl dibin.  Tif mftiod rfqufsts fodus on:
     * 1. tif first Componfnt of tiis EmbfddfdFrbmf if usfr movfs fodus forwbrd
     *    in tif fodus trbvfrsbl dydlf.
     * 2. tif lbst Componfnt of tiis EmbfddfdFrbmf if usfr movfs fodus bbdkwbrd
     *    in tif fodus trbvfrsbl dydlf.
     *
     * Tif dirfdtion pbrbmftfr spfdififs wiidi of tif two mfntionfd dbsfs is
     * ibppfning. Usf FORWARD bnd BACKWARD donstbnts dffinfd in tif EmbfddfdFrbmf dlbss
     * to bvoid donfusing boolfbn vblufs.
     *
     * A dondrftf implfmfntbtion of tiis mftiod is dffinfd in tif plbtform-dfpfndfnt
     * subdlbssfs.
     *
     * @pbrbm dirfdtion FORWARD or BACKWARD
     * @rfturn truf, if tif EmbfddfdFrbmf wbnts to gft fodus, fblsf otifrwisf.
     */
    publid boolfbn trbvfrsfIn(boolfbn dirfdtion) {
        Componfnt domp = null;

        if (dirfdtion == FORWARD) {
            domp = gftFodusTrbvfrsblPolidy().gftFirstComponfnt(tiis);
        } flsf {
            domp = gftFodusTrbvfrsblPolidy().gftLbstComponfnt(tiis);
        }
        if (domp != null) {
            // domp.rfqufstFodus(); - Lfbds to b iung.

            AWTAddfssor.gftKfybobrdFodusMbnbgfrAddfssor().sftMostRfdfntFodusOwnfr(tiis, domp);
            syntifsizfWindowAdtivbtion(truf);
        }
        rfturn (null != domp);
    }

    /**
     * Tiis mftiod is dbllfd from dispbtdiKfyEvfnt in tif following two dbsfs:
     * 1. Tif fodus is on tif first Componfnt of tiis EmbfddfdFrbmf bnd wf brf
     *    bbout to trbnsffr tif fodus bbdkwbrd.
     * 2. Tif fodus in on tif lbst Componfnt of tiis EmbfddfdFrbmf bnd wf brf
     *    bbout to trbnsffr tif fodus forwbrd.
     * Tiis is nffdfd to givf tif opportuity for kfybobrd fodus to lfbvf tif
     * EmbfddfdFrbmf. Ovfrridf tiis mftiod, initibtf fodus trbnsffr in it bnd
     * rfturn truf if you wbnt tif fodus to lfbvf EmbfddfdFrbmf's dydlf.
     * Tif dirfdtion pbrbmftfr spfdififs wiidi of tif two mfntionfd dbsfs is
     * ibppfning. Usf FORWARD bnd BACKWARD donstbnts dffinfd in EmbfddfdFrbmf
     * to bvoid donfusing boolfbn vblufs.
     *
     * @pbrbm dirfdtion FORWARD or BACKWARD
     * @rfturn truf, if EmbfddfdFrbmf wbnts tif fodus to lfbvf it,
     *         fblsf otifrwisf.
     */
    protfdtfd boolfbn trbvfrsfOut(boolfbn dirfdtion) {
        rfturn fblsf;
    }

    /**
     * Blodk modifying bny frbmf bttributfs, sindf tify brfn't bpplidbblf
     * for EmbfddfdFrbmfs.
     */
    publid void sftTitlf(String titlf) {}
    publid void sftIdonImbgf(Imbgf imbgf) {}
    publid void sftIdonImbgfs(jbvb.util.List<? fxtfnds Imbgf> idons) {}
    publid void sftMfnuBbr(MfnuBbr mb) {}
    publid void sftRfsizbblf(boolfbn rfsizbblf) {}
    publid void rfmovf(MfnuComponfnt m) {}

    publid boolfbn isRfsizbblf() {
        rfturn truf;
    }

    @SupprfssWbrnings("dfprfdbtion")
    publid void bddNotify() {
        syndironizfd (gftTrffLodk()) {
            if (gftPffr() == null) {
                sftPffr(nfw NullEmbfddfdFrbmfPffr());
            }
            supfr.bddNotify();
        }
    }

    // Tifsf tirff fundtions donsitutf RFE 4100710. Do not rfmovf.
    @SupprfssWbrnings("dfprfdbtion")
    publid void sftCursorAllowfd(boolfbn isCursorAllowfd) {
        tiis.isCursorAllowfd = isCursorAllowfd;
        gftPffr().updbtfCursorImmfdibtfly();
    }
    publid boolfbn isCursorAllowfd() {
        rfturn isCursorAllowfd;
    }
    publid Cursor gftCursor() {
        rfturn (isCursorAllowfd)
            ? supfr.gftCursor()
            : Cursor.gftPrfdffinfdCursor(Cursor.DEFAULT_CURSOR);
    }

    @SupprfssWbrnings("dfprfdbtion")
    protfdtfd void sftPffr(finbl ComponfntPffr p){
        AWTAddfssor.gftComponfntAddfssor().sftPffr(EmbfddfdFrbmf.tiis, p);
    };

    /**
     * Syntifsizf nbtivf mfssbgf to bdtivbtf or dfbdtivbtf EmbfddfdFrbmf window
     * dfpfnding on tif vbluf of pbrbmftfr <dodf>b</dodf>.
     * Pffrs siould ovfrridf tiis mftiod if tify brf to implfmfnt
     * tiis fundtionblity.
     * @pbrbm doAdtivbtf  if <dodf>truf</dodf>, bdtivbtfs tif window;
     * otifrwisf, dfbdtivbtfs tif window
     */
    publid void syntifsizfWindowAdtivbtion(boolfbn doAdtivbtf) {}

    /**
     * Movfs tiis fmbfddfd frbmf to b nfw lodbtion. Tif top-lfft dornfr of
     * tif nfw lodbtion is spfdififd by tif <dodf>x</dodf> bnd <dodf>y</dodf>
     * pbrbmftfrs rflbtivf to tif nbtivf pbrfnt domponfnt.
     * <p>
     * sftLodbtion() bnd sftBounds() for EmbfddfdFrbmf rfblly don't movf it
     * witiin tif nbtivf pbrfnt. Tifsf mftiods blwbys put fmbfddfd frbmf to
     * (0, 0) for bbdkwbrd dompbtibility. To bllow moving fmbfddfd frbmf
     * sftLodbtionPrivbtf() bnd sftBoundsPrivbtf() wfrf introdudfd, bnd tify
     * work just tif sbmf wby bs sftLodbtion() bnd sftBounds() for usubl,
     * non-fmbfddfd domponfnts.
     * </p>
     * <p>
     * Using usubl gft/sftLodbtion() bnd gft/sftBounds() togftifr witi nfw
     * gft/sftLodbtionPrivbtf() bnd gft/sftBoundsPrivbtf() is not rfdommfndfd.
     * For fxbmplf, dblling gftBoundsPrivbtf() bftfr sftLodbtion() works finf,
     * but gftBounds() bftfr sftBoundsPrivbtf() mby rfturn unprfdidtbblf vbluf.
     * </p>
     * @pbrbm x tif nfw <i>x</i>-doordinbtf rflbtivf to tif pbrfnt domponfnt
     * @pbrbm y tif nfw <i>y</i>-doordinbtf rflbtivf to tif pbrfnt domponfnt
     * @sff jbvb.bwt.Componfnt#sftLodbtion
     * @sff #gftLodbtionPrivbtf
     * @sff #sftBoundsPrivbtf
     * @sff #gftBoundsPrivbtf
     * @sindf 1.5
     */
    protfdtfd void sftLodbtionPrivbtf(int x, int y) {
        Dimfnsion sizf = gftSizf();
        sftBoundsPrivbtf(x, y, sizf.widti, sizf.ifigit);
    }

    /**
     * Gfts tif lodbtion of tiis fmbfddfd frbmf bs b point spfdifying tif
     * top-lfft dornfr rflbtivf to pbrfnt domponfnt.
     * <p>
     * sftLodbtion() bnd sftBounds() for EmbfddfdFrbmf rfblly don't movf it
     * witiin tif nbtivf pbrfnt. Tifsf mftiods blwbys put fmbfddfd frbmf to
     * (0, 0) for bbdkwbrd dompbtibility. To bllow gftting lodbtion bnd sizf
     * of fmbfddfd frbmf gftLodbtionPrivbtf() bnd gftBoundsPrivbtf() wfrf
     * introdudfd, bnd tify work just tif sbmf wby bs gftLodbtion() bnd gftBounds()
     * for ususbl, non-fmbfddfd domponfnts.
     * </p>
     * <p>
     * Using usubl gft/sftLodbtion() bnd gft/sftBounds() togftifr witi nfw
     * gft/sftLodbtionPrivbtf() bnd gft/sftBoundsPrivbtf() is not rfdommfndfd.
     * For fxbmplf, dblling gftBoundsPrivbtf() bftfr sftLodbtion() works finf,
     * but gftBounds() bftfr sftBoundsPrivbtf() mby rfturn unprfdidtbblf vbluf.
     * </p>
     * @rfturn b point indidbting tiis fmbfddfd frbmf's top-lfft dornfr
     * @sff jbvb.bwt.Componfnt#gftLodbtion
     * @sff #sftLodbtionPrivbtf
     * @sff #sftBoundsPrivbtf
     * @sff #gftBoundsPrivbtf
     * @sindf 1.6
     */
    protfdtfd Point gftLodbtionPrivbtf() {
        Rfdtbnglf bounds = gftBoundsPrivbtf();
        rfturn nfw Point(bounds.x, bounds.y);
    }

    /**
     * Movfs bnd rfsizfs tiis fmbfddfd frbmf. Tif nfw lodbtion of tif top-lfft
     * dornfr is spfdififd by <dodf>x</dodf> bnd <dodf>y</dodf> pbrbmftfrs
     * rflbtivf to tif nbtivf pbrfnt domponfnt. Tif nfw sizf is spfdififd by
     * <dodf>widti</dodf> bnd <dodf>ifigit</dodf>.
     * <p>
     * sftLodbtion() bnd sftBounds() for EmbfddfdFrbmf rfblly don't movf it
     * witiin tif nbtivf pbrfnt. Tifsf mftiods blwbys put fmbfddfd frbmf to
     * (0, 0) for bbdkwbrd dompbtibility. To bllow moving fmbfddfd frbmfs
     * sftLodbtionPrivbtf() bnd sftBoundsPrivbtf() wfrf introdudfd, bnd tify
     * work just tif sbmf wby bs sftLodbtion() bnd sftBounds() for usubl,
     * non-fmbfddfd domponfnts.
     * </p>
     * <p>
     * Using usubl gft/sftLodbtion() bnd gft/sftBounds() togftifr witi nfw
     * gft/sftLodbtionPrivbtf() bnd gft/sftBoundsPrivbtf() is not rfdommfndfd.
     * For fxbmplf, dblling gftBoundsPrivbtf() bftfr sftLodbtion() works finf,
     * but gftBounds() bftfr sftBoundsPrivbtf() mby rfturn unprfdidtbblf vbluf.
     * </p>
     * @pbrbm x tif nfw <i>x</i>-doordinbtf rflbtivf to tif pbrfnt domponfnt
     * @pbrbm y tif nfw <i>y</i>-doordinbtf rflbtivf to tif pbrfnt domponfnt
     * @pbrbm widti tif nfw <dodf>widti</dodf> of tiis fmbfddfd frbmf
     * @pbrbm ifigit tif nfw <dodf>ifigit</dodf> of tiis fmbfddfd frbmf
     * @sff jbvb.bwt.Componfnt#sftBounds
     * @sff #sftLodbtionPrivbtf
     * @sff #gftLodbtionPrivbtf
     * @sff #gftBoundsPrivbtf
     * @sindf 1.5
     */
    @SupprfssWbrnings("dfprfdbtion")
    protfdtfd void sftBoundsPrivbtf(int x, int y, int widti, int ifigit) {
        finbl FrbmfPffr pffr = (FrbmfPffr)gftPffr();
        if (pffr != null) {
            pffr.sftBoundsPrivbtf(x, y, widti, ifigit);
        }
    }

    /**
     * Gfts tif bounds of tiis fmbfddfd frbmf bs b rfdtbnglf spfdifying tif
     * widti, ifigit bnd lodbtion rflbtivf to tif nbtivf pbrfnt domponfnt.
     * <p>
     * sftLodbtion() bnd sftBounds() for EmbfddfdFrbmf rfblly don't movf it
     * witiin tif nbtivf pbrfnt. Tifsf mftiods blwbys put fmbfddfd frbmf to
     * (0, 0) for bbdkwbrd dompbtibility. To bllow gftting lodbtion bnd sizf
     * of fmbfddfd frbmfs gftLodbtionPrivbtf() bnd gftBoundsPrivbtf() wfrf
     * introdudfd, bnd tify work just tif sbmf wby bs gftLodbtion() bnd gftBounds()
     * for ususbl, non-fmbfddfd domponfnts.
     * </p>
     * <p>
     * Using usubl gft/sftLodbtion() bnd gft/sftBounds() togftifr witi nfw
     * gft/sftLodbtionPrivbtf() bnd gft/sftBoundsPrivbtf() is not rfdommfndfd.
     * For fxbmplf, dblling gftBoundsPrivbtf() bftfr sftLodbtion() works finf,
     * but gftBounds() bftfr sftBoundsPrivbtf() mby rfturn unprfdidtbblf vbluf.
     * </p>
     * @rfturn b rfdtbnglf indidbting tiis fmbfddfd frbmf's bounds
     * @sff jbvb.bwt.Componfnt#gftBounds
     * @sff #sftLodbtionPrivbtf
     * @sff #gftLodbtionPrivbtf
     * @sff #sftBoundsPrivbtf
     * @sindf 1.6
     */
    @SupprfssWbrnings("dfprfdbtion")
    protfdtfd Rfdtbnglf gftBoundsPrivbtf() {
        finbl FrbmfPffr pffr = (FrbmfPffr)gftPffr();
        if (pffr != null) {
            rfturn pffr.gftBoundsPrivbtf();
        }
        flsf {
            rfturn gftBounds();
        }
    }

    publid void toFront() {}
    publid void toBbdk() {}

    publid bbstrbdt void rfgistfrAddflfrbtor(AWTKfyStrokf strokf);
    publid bbstrbdt void unrfgistfrAddflfrbtor(AWTKfyStrokf strokf);

    /**
     * Cifdks if tif domponfnt is in bn EmbfddfdFrbmf. If so,
     * rfturns tif bpplft found in tif iifrbrdiy or null if
     * not found.
     * @rfturn tif pbrfnt bpplft or {@ null}
     * @sindf 1.6
     */
    publid stbtid Applft gftApplftIfAndfstorOf(Componfnt domp) {
        Contbinfr pbrfnt = domp.gftPbrfnt();
        Applft bpplft = null;
        wiilf (pbrfnt != null && !(pbrfnt instbndfof EmbfddfdFrbmf)) {
            if (pbrfnt instbndfof Applft) {
                bpplft = (Applft)pbrfnt;
            }
            pbrfnt = pbrfnt.gftPbrfnt();
        }
        rfturn pbrfnt == null ? null : bpplft;
    }

    /**
     * Tiis mftiod siould bf ovfrridfn in subdlbssfs. It is
     * dbllfd wifn window tiis frbmf is witiin siould bf blodkfd
     * by somf modbl diblog.
     */
    publid void notifyModblBlodkfd(Diblog blodkfr, boolfbn blodkfd) {
    }

    privbtf stbtid dlbss NullEmbfddfdFrbmfPffr
        fxtfnds NullComponfntPffr implfmfnts FrbmfPffr {
        publid void sftTitlf(String titlf) {}
        publid void sftIdonImbgf(Imbgf im) {}
        publid void updbtfIdonImbgfs() {}
        publid void sftMfnuBbr(MfnuBbr mb) {}
        publid void sftRfsizbblf(boolfbn rfsizfbblf) {}
        publid void sftStbtf(int stbtf) {}
        publid int gftStbtf() { rfturn Frbmf.NORMAL; }
        publid void sftMbximizfdBounds(Rfdtbnglf b) {}
        publid void toFront() {}
        publid void toBbdk() {}
        publid void updbtfFodusbblfWindowStbtf() {}
        publid void updbtfAlwbysOnTop() {}
        publid void updbtfAlwbysOnTopStbtf() {}
        publid Componfnt gftGlobblHfbvywfigitFodusOwnfr() { rfturn null; }
        publid void sftBoundsPrivbtf(int x, int y, int widti, int ifigit) {
            sftBounds(x, y, widti, ifigit, SET_BOUNDS);
        }
        publid Rfdtbnglf gftBoundsPrivbtf() {
            rfturn gftBounds();
        }
        publid void sftModblBlodkfd(Diblog blodkfr, boolfbn blodkfd) {}

        /**
         * @sff jbvb.bwt.pffr.ContbinfrPffr#rfstbdk
         */
        publid void rfstbdk() {
            tirow nfw UnsupportfdOpfrbtionExdfption();
        }

        /**
         * @sff jbvb.bwt.pffr.ContbinfrPffr#isRfstbdkSupportfd
         */
        publid boolfbn isRfstbdkSupportfd() {
            rfturn fblsf;
        }
        publid boolfbn rfqufstWindowFodus() {
            rfturn fblsf;
        }
        publid void updbtfMinimumSizf() {
        }

        publid void sftOpbdity(flobt opbdity) {
        }

        publid void sftOpbquf(boolfbn isOpbquf) {
        }

        publid void updbtfWindow() {
        }

        publid void rfpositionSfdurityWbrning() {
        }

        publid void fmulbtfAdtivbtion(boolfbn bdtivbtf) {
        }
    }
} // dlbss EmbfddfdFrbmf
