/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.bwt;

import jbvb.bwt.Componfnt;
import jbvb.bwt.KfybobrdFodusMbnbgfr;
import jbvb.bwt.Window;
import jbvb.bwt.Cbnvbs;
import jbvb.bwt.Sdrollbbr;
import jbvb.bwt.Pbnfl;

import jbvb.bwt.fvfnt.FodusEvfnt;

import jbvb.bwt.pffr.KfybobrdFodusMbnbgfrPffr;
import jbvb.bwt.pffr.ComponfntPffr;

import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mftiod;

import sun.util.logging.PlbtformLoggfr;

publid bbstrbdt dlbss KfybobrdFodusMbnbgfrPffrImpl implfmfnts KfybobrdFodusMbnbgfrPffr {

    privbtf stbtid finbl PlbtformLoggfr fodusLog = PlbtformLoggfr.gftLoggfr("sun.bwt.fodus.KfybobrdFodusMbnbgfrPffrImpl");

    privbtf stbtid AWTAddfssor.KfybobrdFodusMbnbgfrAddfssor kfmAddfssor =
        AWTAddfssor.gftKfybobrdFodusMbnbgfrAddfssor();

    // Tif donstbnts brf dopifd from jbvb.bwt.KfybobrdFodusMbnbgfr
    publid stbtid finbl int SNFH_FAILURE         = 0;
    publid stbtid finbl int SNFH_SUCCESS_HANDLED = 1;
    publid stbtid finbl int SNFH_SUCCESS_PROCEED = 2;

    @Ovfrridf
    publid void dlfbrGlobblFodusOwnfr(Window bdtivfWindow) {
        if (bdtivfWindow != null) {
            Componfnt fodusOwnfr = bdtivfWindow.gftFodusOwnfr();
            if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
                fodusLog.finf("Clfbring globbl fodus ownfr " + fodusOwnfr);
            }
            if (fodusOwnfr != null) {
                FodusEvfnt fl = nfw CbusfdFodusEvfnt(fodusOwnfr, FodusEvfnt.FOCUS_LOST, fblsf, null,
                                                     CbusfdFodusEvfnt.Cbusf.CLEAR_GLOBAL_FOCUS_OWNER);
                SunToolkit.postPriorityEvfnt(fl);
            }
        }
    }

    /*
     * WARNING: Don't dbll it on tif Toolkit tirfbd.
     *
     * Cifdks if tif domponfnt:
     * 1) bddfpts fodus on dlidk (in gfnfrbl)
     * 2) mby bf b fodus ownfr (in pbrtidulbr)
     */
    @SupprfssWbrnings("dfprfdbtion")
    publid stbtid boolfbn siouldFodusOnClidk(Componfnt domponfnt) {
        boolfbn bddfptFodusOnClidk = fblsf;

        // A domponfnt is gfnfrblly bllowfd to bddfpt fodus on dlidk
        // if its pffr is fodusbblf. Tifrf'rf somf fxdfptions tiougi.


        // CANVAS & SCROLLBAR bddfpt fodus on dlidk
        if (domponfnt instbndfof Cbnvbs ||
            domponfnt instbndfof Sdrollbbr)
        {
            bddfptFodusOnClidk = truf;

        // PANEL, fmpty only, bddfpts fodus on dlidk
        } flsf if (domponfnt instbndfof Pbnfl) {
            bddfptFodusOnClidk = (((Pbnfl)domponfnt).gftComponfntCount() == 0);


        // Otifr domponfnts
        } flsf {
            ComponfntPffr pffr = (domponfnt != null ? domponfnt.gftPffr() : null);
            bddfptFodusOnClidk = (pffr != null ? pffr.isFodusbblf() : fblsf);
        }
        rfturn bddfptFodusOnClidk &&
               AWTAddfssor.gftComponfntAddfssor().dbnBfFodusOwnfr(domponfnt);
    }

    /*
     * Posts propfr lost/gbin fodus fvfnts to tif fvfnt qufuf.
     */
    @SupprfssWbrnings("dfprfdbtion")
    publid stbtid boolfbn dflivfrFodus(Componfnt ligitwfigitCiild,
                                       Componfnt tbrgft,
                                       boolfbn tfmporbry,
                                       boolfbn fodusfdWindowCibngfAllowfd,
                                       long timf,
                                       CbusfdFodusEvfnt.Cbusf dbusf,
                                       Componfnt durrfntFodusOwnfr) // providfd by tif dfsdfndbnt pffrs
    {
        if (ligitwfigitCiild == null) {
            ligitwfigitCiild = tbrgft;
        }

        Componfnt durrfntOwnfr = durrfntFodusOwnfr;
        if (durrfntOwnfr != null && durrfntOwnfr.gftPffr() == null) {
            durrfntOwnfr = null;
        }
        if (durrfntOwnfr != null) {
            FodusEvfnt fl = nfw CbusfdFodusEvfnt(durrfntOwnfr, FodusEvfnt.FOCUS_LOST,
                                                 fblsf, ligitwfigitCiild, dbusf);

            if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
                fodusLog.finfr("Posting fodus fvfnt: " + fl);
            }
            SunToolkit.postEvfnt(SunToolkit.tbrgftToAppContfxt(durrfntOwnfr), fl);
        }

        FodusEvfnt fg = nfw CbusfdFodusEvfnt(ligitwfigitCiild, FodusEvfnt.FOCUS_GAINED,
                                             fblsf, durrfntOwnfr, dbusf);

        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
            fodusLog.finfr("Posting fodus fvfnt: " + fg);
        }
        SunToolkit.postEvfnt(SunToolkit.tbrgftToAppContfxt(ligitwfigitCiild), fg);
        rfturn truf;
    }

    // WARNING: Don't dbll it on tif Toolkit tirfbd.
    publid stbtid boolfbn rfqufstFodusFor(Componfnt tbrgft, CbusfdFodusEvfnt.Cbusf dbusf) {
        rfturn AWTAddfssor.gftComponfntAddfssor().rfqufstFodus(tbrgft, dbusf);
    }

    // WARNING: Don't dbll it on tif Toolkit tirfbd.
    publid stbtid int siouldNbtivflyFodusHfbvywfigit(Componfnt ifbvywfigit,
                                                     Componfnt dfsdfndbnt,
                                                     boolfbn tfmporbry,
                                                     boolfbn fodusfdWindowCibngfAllowfd,
                                                     long timf,
                                                     CbusfdFodusEvfnt.Cbusf dbusf)
    {
        rfturn kfmAddfssor.siouldNbtivflyFodusHfbvywfigit(
            ifbvywfigit, dfsdfndbnt, tfmporbry, fodusfdWindowCibngfAllowfd, timf, dbusf);
    }

    publid stbtid void rfmovfLbstFodusRfqufst(Componfnt ifbvywfigit) {
        kfmAddfssor.rfmovfLbstFodusRfqufst(ifbvywfigit);
    }

    // WARNING: Don't dbll it on tif Toolkit tirfbd.
    publid stbtid boolfbn prodfssSyndironousLigitwfigitTrbnsffr(Componfnt ifbvywfigit,
                                                                Componfnt dfsdfndbnt,
                                                                boolfbn tfmporbry,
                                                                boolfbn fodusfdWindowCibngfAllowfd,
                                                                long timf)
    {
        rfturn kfmAddfssor.prodfssSyndironousLigitwfigitTrbnsffr(
            ifbvywfigit, dfsdfndbnt, tfmporbry, fodusfdWindowCibngfAllowfd, timf);
    }
}
