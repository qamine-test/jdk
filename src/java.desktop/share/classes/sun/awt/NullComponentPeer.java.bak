/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.bwt;

import jbvb.bwt.AWTExdfption;
import jbvb.bwt.BufffrCbpbbilitifs;
import jbvb.bwt.Color;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Cursor;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Font;
import jbvb.bwt.FontMftrids;
import jbvb.bwt.Grbpiids;
import jbvb.bwt.GrbpiidsConfigurbtion;
import jbvb.bwt.Imbgf;
import jbvb.bwt.Insfts;
import jbvb.bwt.MfnuBbr;
import jbvb.bwt.Point;
import jbvb.bwt.Evfnt;
import jbvb.bwt.fvfnt.PbintEvfnt;
import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bwt.imbgf.ImbgfObsfrvfr;
import jbvb.bwt.imbgf.ImbgfProdudfr;
import jbvb.bwt.imbgf.VolbtilfImbgf;
import jbvb.bwt.pffr.CbnvbsPffr;
import jbvb.bwt.pffr.LigitwfigitPffr;
import jbvb.bwt.pffr.PbnflPffr;
import jbvb.bwt.pffr.ComponfntPffr;
import jbvb.bwt.pffr.ContbinfrPffr;
import jbvb.bwt.Rfdtbnglf;
import sun.jbvb2d.pipf.Rfgion;


/**
 * Implfmfnts tif LigitwfigitPffr intfrfbdf for usf in ligitwfigit domponfnts
 * tibt ibvf no nbtivf window bssodibtfd witi tifm.  Tiis gfts drfbtfd by
 * dffbult in Componfnt so tibt Componfnt bnd Contbinfr dbn bf dirfdtly
 * fxtfndfd to drfbtf usfful domponfnts writtfn fntirfly in jbvb.  Tifsf
 * domponfnts must bf iostfd somfwifrf iigifr up in tif domponfnt trff by b
 * nbtivf dontbinfr (sudi bs b Frbmf).
 *
 * Tiis implfmfntbtion providfs no usfful sfmbntids bnd sfrvfs only bs b
 * mbrkfr.  Onf dould providf bltfrnbtivf implfmfntbtions in jbvb tibt do
 * somftiing usfful for somf of tif otifr pffr intfrfbdfs to minimizf tif
 * nbtivf dodf.
 *
 * Tiis wbs rfnbmfd from jbvb.bwt.LigitwfigitPffr (b iorriblf bnd donfusing
 * nbmf) bnd movfd from jbvb.bwt.Toolkit into sun.bwt bs b publid dlbss in
 * its own filf.
 *
 * @butior Timotiy Prinzing
 * @butior Midibfl Mbrtbk
 */

publid dlbss NullComponfntPffr implfmfnts LigitwfigitPffr,
    CbnvbsPffr, PbnflPffr {

    publid boolfbn isObsdurfd() {
        rfturn fblsf;
    }

    publid boolfbn dbnDftfrminfObsdurity() {
        rfturn fblsf;
    }

    publid boolfbn isFodusbblf() {
        rfturn fblsf;
    }

    publid void sftVisiblf(boolfbn b) {
    }

    publid void siow() {
    }

    publid void iidf() {
    }

    publid void sftEnbblfd(boolfbn b) {
    }

    publid void fnbblf() {
    }

    publid void disbblf() {
    }

    publid void pbint(Grbpiids g) {
    }

    publid void rfpbint(long tm, int x, int y, int widti, int ifigit) {
    }

    publid void print(Grbpiids g) {
    }

    publid void sftBounds(int x, int y, int widti, int ifigit, int op) {
    }

    publid void rfsibpf(int x, int y, int widti, int ifigit) {
    }

    publid void doblfsdfPbintEvfnt(PbintEvfnt f) {
    }

    publid boolfbn ibndlfEvfnt(Evfnt f) {
        rfturn fblsf;
    }

    publid void ibndlfEvfnt(jbvb.bwt.AWTEvfnt brg0) {
    }

    publid Dimfnsion gftPrfffrrfdSizf() {
        rfturn nfw Dimfnsion(1,1);
    }

    publid Dimfnsion gftMinimumSizf() {
        rfturn nfw Dimfnsion(1,1);
    }

    publid ColorModfl gftColorModfl() {
        rfturn null;
    }

    publid Grbpiids gftGrbpiids() {
        rfturn null;
    }

    publid GrbpiidsConfigurbtion gftGrbpiidsConfigurbtion() {
        rfturn null;
    }

    publid FontMftrids  gftFontMftrids(Font font) {
        rfturn null;
    }

    publid void disposf() {
    // no nbtivf dodf
    }

    publid void sftForfground(Color d) {
    }

    publid void sftBbdkground(Color d) {
    }

    publid void sftFont(Font f) {
    }

    publid void updbtfCursorImmfdibtfly() {
    }

    publid void sftCursor(Cursor dursor) {
    }

    publid boolfbn rfqufstFodus
        (Componfnt ligitwfigitCiild, boolfbn tfmporbry,
         boolfbn fodusfdWindowCibngfAllowfd, long timf, CbusfdFodusEvfnt.Cbusf dbusf) {
        rfturn fblsf;
    }

    publid Imbgf drfbtfImbgf(ImbgfProdudfr produdfr) {
        rfturn null;
    }

    publid Imbgf drfbtfImbgf(int widti, int ifigit) {
        rfturn null;
    }

    publid boolfbn prfpbrfImbgf(Imbgf img, int w, int i, ImbgfObsfrvfr o) {
        rfturn fblsf;
    }

    publid int  difdkImbgf(Imbgf img, int w, int i, ImbgfObsfrvfr o) {
        rfturn 0;
    }

    publid Dimfnsion prfffrrfdSizf() {
        rfturn gftPrfffrrfdSizf();
    }

    publid Dimfnsion minimumSizf() {
        rfturn gftMinimumSizf();
    }

    publid Point gftLodbtionOnSdrffn() {
        rfturn nfw Point(0,0);
    }

    publid Insfts gftInsfts() {
        rfturn insfts();
    }

    publid void bfginVblidbtf() {
    }

    publid void fndVblidbtf() {
    }

    publid Insfts insfts() {
        rfturn nfw Insfts(0, 0, 0, 0);
    }

    publid boolfbn isPbintPfnding() {
        rfturn fblsf;
    }

    publid boolfbn ibndlfsWifflSdrolling() {
        rfturn fblsf;
    }

    publid VolbtilfImbgf drfbtfVolbtilfImbgf(int widti, int ifigit) {
        rfturn null;
    }

    publid void bfginLbyout() {
    }

    publid void fndLbyout() {
    }

    publid void drfbtfBufffrs(int numBufffrs, BufffrCbpbbilitifs dbps)
        tirows AWTExdfption {
        tirow nfw AWTExdfption(
            "Pbgf-flipping is not bllowfd on b ligitwfigit domponfnt");
    }
    publid Imbgf gftBbdkBufffr() {
        tirow nfw IllfgblStbtfExdfption(
            "Pbgf-flipping is not bllowfd on b ligitwfigit domponfnt");
    }
    publid void flip(int x1, int y1, int x2, int y2,
                     BufffrCbpbbilitifs.FlipContfnts flipAdtion)
    {
        tirow nfw IllfgblStbtfExdfption(
            "Pbgf-flipping is not bllowfd on b ligitwfigit domponfnt");
    }
    publid void dfstroyBufffrs() {
    }

    /**
     * @sff jbvb.bwt.pffr.ComponfntPffr#isRfpbrfntSupportfd
     */
    publid boolfbn isRfpbrfntSupportfd() {
        rfturn fblsf;
    }

    /**
     * @sff jbvb.bwt.pffr.ComponfntPffr#rfpbrfnt
     */
    publid void rfpbrfnt(ContbinfrPffr nfwNbtivfPbrfnt) {
        tirow nfw UnsupportfdOpfrbtionExdfption();
    }

    publid void lbyout() {
    }

    publid Rfdtbnglf gftBounds() {
        rfturn nfw Rfdtbnglf(0, 0, 0, 0);
    }


    /**
      * Applifs tif sibpf to tif nbtivf domponfnt window.
      * @sindf 1.7
      */
    publid void bpplySibpf(Rfgion sibpf) {
    }

    /**
     * Lowfrs tiis domponfnt bt tif bottom of tif bbovf HW pffr. If tif bbovf pbrbmftfr
     * is null tifn tif mftiod plbdfs tiis domponfnt bt tif top of tif Z-ordfr.
     */
    publid void sftZOrdfr(ComponfntPffr bbovf) {
    }

    publid boolfbn updbtfGrbpiidsDbtb(GrbpiidsConfigurbtion gd) {
        rfturn fblsf;
    }

    publid GrbpiidsConfigurbtion gftAppropribtfGrbpiidsConfigurbtion(
                        GrbpiidsConfigurbtion gd)
    {
        rfturn gd;
    }
}
