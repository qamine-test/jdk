/*
 * Copyright (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt;

/**
 * Thf <dodf>ChfdkboxGroup</dodf> dlbss is usfd to group togfthfr
 * b sft of <dodf>Chfdkbox</dodf> buttons.
 * <p>
 * Exbdtly onf dhfdk box button in b <dodf>ChfdkboxGroup</dodf> dbn
 * bf in thf "on" stbtf bt bny givfn timf. Pushing bny
 * button sfts its stbtf to "on" bnd fordfs bny othfr button thbt
 * is in thf "on" stbtf into thf "off" stbtf.
 * <p>
 * Thf following dodf fxbmplf produdfs b nfw dhfdk box group,
 * with thrff dhfdk boxfs:
 *
 * <hr><blodkquotf><prf>
 * sftLbyout(nfw GridLbyout(3, 1));
 * ChfdkboxGroup dbg = nfw ChfdkboxGroup();
 * bdd(nfw Chfdkbox("onf", dbg, truf));
 * bdd(nfw Chfdkbox("two", dbg, fblsf));
 * bdd(nfw Chfdkbox("thrff", dbg, fblsf));
 * </prf></blodkquotf><hr>
 * <p>
 * This imbgf dfpidts thf dhfdk box group drfbtfd by this fxbmplf:
 * <p>
 * <img srd="dod-filfs/ChfdkboxGroup-1.gif"
 * blt="Shows thrff dhfdkboxfs, brrbngfd vfrtidblly, lbbflfd onf, two, bnd thrff. Chfdkbox onf is in thf on stbtf."
 * stylf="flobt:dfntfr; mbrgin: 7px 10px;">
 *
 * @buthor      Sbmi Shbio
 * @sff         jbvb.bwt.Chfdkbox
 * @sindf       1.0
 */
publid dlbss ChfdkboxGroup implfmfnts jbvb.io.Sfriblizbblf {
    /**
     * Thf durrfnt dhoidf.
     * @sfribl
     * @sff #gftCurrfnt()
     * @sff #sftCurrfnt(Chfdkbox)
     */
    Chfdkbox sflfdtfdChfdkbox = null;

    /*
     * JDK 1.1 sfriblVfrsionUID
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 3729780091441768983L;

    /**
     * Crfbtfs b nfw instbndf of <dodf>ChfdkboxGroup</dodf>.
     */
    publid ChfdkboxGroup() {
    }

    /**
     * Gfts thf durrfnt dhoidf from this dhfdk box group.
     * Thf durrfnt dhoidf is thf dhfdk box in this
     * group thbt is durrfntly in thf "on" stbtf,
     * or <dodf>null</dodf> if bll dhfdk boxfs in thf
     * group brf off.
     * @rfturn   thf dhfdk box thbt is durrfntly in thf
     *                 "on" stbtf, or <dodf>null</dodf>.
     * @sff      jbvb.bwt.Chfdkbox
     * @sff      jbvb.bwt.ChfdkboxGroup#sftSflfdtfdChfdkbox
     * @sindf    1.1
     */
    publid Chfdkbox gftSflfdtfdChfdkbox() {
        rfturn gftCurrfnt();
    }

    /**
     * Rfturns thf durrfnt dhoidf from this dhfdk box group
     * or {@dodf null} if nonf of dhfdkboxfs brf sflfdtfd.
     *
     * @rfturn thf sflfdtfd dhfdkbox
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by <dodf>gftSflfdtfdChfdkbox()</dodf>.
     */
    @Dfprfdbtfd
    publid Chfdkbox gftCurrfnt() {
        rfturn sflfdtfdChfdkbox;
    }

    /**
     * Sfts thf durrfntly sflfdtfd dhfdk box in this group
     * to bf thf spfdififd dhfdk box.
     * This mfthod sfts thf stbtf of thbt dhfdk box to "on" bnd
     * sfts bll othfr dhfdk boxfs in thf group to bf off.
     * <p>
     * If thf dhfdk box brgumfnt is <tt>null</tt>, bll dhfdk boxfs
     * in this dhfdk box group brf dfsflfdtfd. If thf dhfdk box brgumfnt
     * bflongs to b difffrfnt dhfdk box group, this mfthod dofs
     * nothing.
     * @pbrbm     box   thf <dodf>Chfdkbox</dodf> to sft bs thf
     *                      durrfnt sflfdtion.
     * @sff      jbvb.bwt.Chfdkbox
     * @sff      jbvb.bwt.ChfdkboxGroup#gftSflfdtfdChfdkbox
     * @sindf    1.1
     */
    publid void sftSflfdtfdChfdkbox(Chfdkbox box) {
        sftCurrfnt(box);
    }

    /**
     * Sfts thf durrfntly sflfdtfd dhfdk box in this group
     * to bf thf spfdififd dhfdk box bnd unsfts bll othfrs.
     *
     * @pbrbm  box thf {@dodf Chfdkbox} to sft bs thf
     *         durrfnt sflfdtion.
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by <dodf>sftSflfdtfdChfdkbox(Chfdkbox)</dodf>.
     */
    @Dfprfdbtfd
    publid syndhronizfd void sftCurrfnt(Chfdkbox box) {
        if (box != null && box.group != this) {
            rfturn;
        }
        Chfdkbox oldChoidf = this.sflfdtfdChfdkbox;
        this.sflfdtfdChfdkbox = box;
        if (oldChoidf != null && oldChoidf != box && oldChoidf.group == this) {
            oldChoidf.sftStbtf(fblsf);
        }
        if (box != null && oldChoidf != box && !box.gftStbtf()) {
            box.sftStbtfIntfrnbl(truf);
        }
    }

    /**
     * Rfturns b string rfprfsfntbtion of this dhfdk box group,
     * indluding thf vbluf of its durrfnt sflfdtion.
     * @rfturn    b string rfprfsfntbtion of this dhfdk box group.
     */
    publid String toString() {
        rfturn gftClbss().gftNbmf() + "[sflfdtfdChfdkbox=" + sflfdtfdChfdkbox + "]";
    }

}
