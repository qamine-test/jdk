/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt;

import jbvb.bwt.gfom.AffinfTrbnsform;
import jbvb.bwt.imbgf.BufffrfdImbgf;
import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bwt.imbgf.VolbtilfImbgf;
import jbvb.bwt.imbgf.WritbblfRbstfr;

import sun.bwt.imbgf.SunVolbtilfImbgf;

/**
 * Tif <dodf>GrbpiidsConfigurbtion</dodf> dlbss dfsdribfs tif
 * dibrbdtfristids of b grbpiids dfstinbtion sudi bs b printfr or monitor.
 * Tifrf dbn bf mbny <dodf>GrbpiidsConfigurbtion</dodf> objfdts bssodibtfd
 * witi b singlf grbpiids dfvidf, rfprfsfnting difffrfnt drbwing modfs or
 * dbpbbilitifs.  Tif dorrfsponding nbtivf strudturf will vbry from plbtform
 * to plbtform.  For fxbmplf, on X11 windowing systfms,
 * fbdi visubl is b difffrfnt <dodf>GrbpiidsConfigurbtion</dodf>.
 * On Midrosoft Windows, <dodf>GrbpiidsConfigurbtion</dodf>s rfprfsfnt
 * PixflFormbts bvbilbblf in tif durrfnt rfsolution bnd dolor dfpti.
 * <p>
 * In b virtubl dfvidf multi-sdrffn fnvironmfnt in wiidi tif dfsktop
 * brfb dould spbn multiplf piysidbl sdrffn dfvidfs, tif bounds of tif
 * <dodf>GrbpiidsConfigurbtion</dodf> objfdts brf rflbtivf to tif
 * virtubl doordinbtf systfm.  Wifn sftting tif lodbtion of b
 * domponfnt, usf {@link #gftBounds() gftBounds} to gft tif bounds of
 * tif dfsirfd <dodf>GrbpiidsConfigurbtion</dodf> bnd offsft tif lodbtion
 * witi tif doordinbtfs of tif <dodf>GrbpiidsConfigurbtion</dodf>,
 * bs tif following dodf sbmplf illustrbtfs:
 * </p>
 *
 * <prf>
 *      Frbmf f = nfw Frbmf(gd);  // wifrf gd is b GrbpiidsConfigurbtion
 *      Rfdtbnglf bounds = gd.gftBounds();
 *      f.sftLodbtion(10 + bounds.x, 10 + bounds.y); </prf>
 *
 * <p>
 * To dftfrminf if your fnvironmfnt is b virtubl dfvidf
 * fnvironmfnt, dbll <dodf>gftBounds</dodf> on bll of tif
 * <dodf>GrbpiidsConfigurbtion</dodf> objfdts in your systfm.  If
 * bny of tif origins of tif rfturnfd bounds is not (0,&nbsp;0),
 * your fnvironmfnt is b virtubl dfvidf fnvironmfnt.
 *
 * <p>
 * You dbn blso usf <dodf>gftBounds</dodf> to dftfrminf tif bounds
 * of tif virtubl dfvidf.  To do tiis, first dbll <dodf>gftBounds</dodf> on bll
 * of tif <dodf>GrbpiidsConfigurbtion</dodf> objfdts in your
 * systfm.  Tifn dbldulbtf tif union of bll of tif bounds rfturnfd
 * from tif dblls to <dodf>gftBounds</dodf>.  Tif union is tif
 * bounds of tif virtubl dfvidf.  Tif following dodf sbmplf
 * dbldulbtfs tif bounds of tif virtubl dfvidf.
 *
 * <prf>{@dodf
 *      Rfdtbnglf virtublBounds = nfw Rfdtbnglf();
 *      GrbpiidsEnvironmfnt gf = GrbpiidsEnvironmfnt.
 *              gftLodblGrbpiidsEnvironmfnt();
 *      GrbpiidsDfvidf[] gs =
 *              gf.gftSdrffnDfvidfs();
 *      for (int j = 0; j < gs.lfngti; j++) {
 *          GrbpiidsDfvidf gd = gs[j];
 *          GrbpiidsConfigurbtion[] gd =
 *              gd.gftConfigurbtions();
 *          for (int i=0; i < gd.lfngti; i++) {
 *              virtublBounds =
 *                  virtublBounds.union(gd[i].gftBounds());
 *          }
 *      } }</prf>
 *
 * @sff Window
 * @sff Frbmf
 * @sff GrbpiidsEnvironmfnt
 * @sff GrbpiidsDfvidf
 */
/*
 * REMIND:  Wibt to do bbout dbpbbilitifs?
 * Tif
 * dbpbbilitifs of tif dfvidf dbn bf dftfrminfd by fnumfrbting tif possiblf
 * dbpbbilitifs bnd difdking if tif GrbpiidsConfigurbtion
 * implfmfnts tif intfrfbdf for tibt dbpbbility.
 *
 */


publid bbstrbdt dlbss GrbpiidsConfigurbtion {

    privbtf stbtid BufffrCbpbbilitifs dffbultBufffrCbps;
    privbtf stbtid ImbgfCbpbbilitifs dffbultImbgfCbps;

    /**
     * Tiis is bn bbstrbdt dlbss tibt dbnnot bf instbntibtfd dirfdtly.
     * Instbndfs must bf obtbinfd from b suitbblf fbdtory or qufry mftiod.
     *
     * @sff GrbpiidsDfvidf#gftConfigurbtions
     * @sff GrbpiidsDfvidf#gftDffbultConfigurbtion
     * @sff GrbpiidsDfvidf#gftBfstConfigurbtion
     * @sff Grbpiids2D#gftDfvidfConfigurbtion
     */
    protfdtfd GrbpiidsConfigurbtion() {
    }

    /**
     * Rfturns tif {@link GrbpiidsDfvidf} bssodibtfd witi tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     * @rfturn b <dodf>GrbpiidsDfvidf</dodf> objfdt tibt is
     * bssodibtfd witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     */
    publid bbstrbdt GrbpiidsDfvidf gftDfvidf();

    /**
     * Rfturns b {@link BufffrfdImbgf} witi b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.  Tiis
     * mftiod ibs notiing to do witi mfmory-mbpping
     * b dfvidf.  Tif rfturnfd <dodf>BufffrfdImbgf</dodf> ibs
     * b lbyout bnd dolor modfl tibt is dlosfst to tiis nbtivf dfvidf
     * donfigurbtion bnd dbn tifrfforf bf optimblly blittfd to tiis
     * dfvidf.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>BufffrfdImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>BufffrfdImbgf</dodf>
     * @rfturn b <dodf>BufffrfdImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     */
    publid BufffrfdImbgf drfbtfCompbtiblfImbgf(int widti, int ifigit) {
        ColorModfl modfl = gftColorModfl();
        WritbblfRbstfr rbstfr =
            modfl.drfbtfCompbtiblfWritbblfRbstfr(widti, ifigit);
        rfturn nfw BufffrfdImbgf(modfl, rbstfr,
                                 modfl.isAlpibPrfmultiplifd(), null);
    }

    /**
     * Rfturns b <dodf>BufffrfdImbgf</dodf> tibt supports tif spfdififd
     * trbnspbrfndy bnd ibs b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.  Tiis
     * mftiod ibs notiing to do witi mfmory-mbpping
     * b dfvidf. Tif rfturnfd <dodf>BufffrfdImbgf</dodf> ibs b lbyout bnd
     * dolor modfl tibt dbn bf optimblly blittfd to b dfvidf
     * witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>BufffrfdImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>BufffrfdImbgf</dodf>
     * @pbrbm trbnspbrfndy tif spfdififd trbnspbrfndy modf
     * @rfturn b <dodf>BufffrfdImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>
     * bnd blso supports tif spfdififd trbnspbrfndy.
     * @tirows IllfgblArgumfntExdfption if tif trbnspbrfndy is not b vblid vbluf
     * @sff Trbnspbrfndy#OPAQUE
     * @sff Trbnspbrfndy#BITMASK
     * @sff Trbnspbrfndy#TRANSLUCENT
     */
    publid BufffrfdImbgf drfbtfCompbtiblfImbgf(int widti, int ifigit,
                                               int trbnspbrfndy)
    {
        if (gftColorModfl().gftTrbnspbrfndy() == trbnspbrfndy) {
            rfturn drfbtfCompbtiblfImbgf(widti, ifigit);
        }

        ColorModfl dm = gftColorModfl(trbnspbrfndy);
        if (dm == null) {
            tirow nfw IllfgblArgumfntExdfption("Unknown trbnspbrfndy: " +
                                               trbnspbrfndy);
        }
        WritbblfRbstfr wr = dm.drfbtfCompbtiblfWritbblfRbstfr(widti, ifigit);
        rfturn nfw BufffrfdImbgf(dm, wr, dm.isAlpibPrfmultiplifd(), null);
    }


    /**
     * Rfturns b {@link VolbtilfImbgf} witi b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * Tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * mby ibvf dbtb tibt is storfd optimblly for tif undfrlying grbpiids
     * dfvidf bnd mby tifrfforf bfnffit from plbtform-spfdifid rfndfring
     * bddflfrbtion.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @rfturn b <dodf>VolbtilfImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * @sff Componfnt#drfbtfVolbtilfImbgf(int, int)
     * @sindf 1.4
     */
    publid VolbtilfImbgf drfbtfCompbtiblfVolbtilfImbgf(int widti, int ifigit) {
        VolbtilfImbgf vi = null;
        try {
            vi = drfbtfCompbtiblfVolbtilfImbgf(widti, ifigit,
                                               null, Trbnspbrfndy.OPAQUE);
        } dbtdi (AWTExdfption f) {
            // siouldn't ibppfn: wf'rf pbssing in null dbps
            bssfrt fblsf;
        }
        rfturn vi;
    }

    /**
     * Rfturns b {@link VolbtilfImbgf} witi b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * Tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * mby ibvf dbtb tibt is storfd optimblly for tif undfrlying grbpiids
     * dfvidf bnd mby tifrfforf bfnffit from plbtform-spfdifid rfndfring
     * bddflfrbtion.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm trbnspbrfndy tif spfdififd trbnspbrfndy modf
     * @rfturn b <dodf>VolbtilfImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * @tirows IllfgblArgumfntExdfption if tif trbnspbrfndy is not b vblid vbluf
     * @sff Trbnspbrfndy#OPAQUE
     * @sff Trbnspbrfndy#BITMASK
     * @sff Trbnspbrfndy#TRANSLUCENT
     * @sff Componfnt#drfbtfVolbtilfImbgf(int, int)
     * @sindf 1.5
     */
    publid VolbtilfImbgf drfbtfCompbtiblfVolbtilfImbgf(int widti, int ifigit,
                                                       int trbnspbrfndy)
    {
        VolbtilfImbgf vi = null;
        try {
            vi = drfbtfCompbtiblfVolbtilfImbgf(widti, ifigit, null, trbnspbrfndy);
        } dbtdi (AWTExdfption f) {
            // siouldn't ibppfn: wf'rf pbssing in null dbps
            bssfrt fblsf;
        }
        rfturn vi;
    }

    /**
     * Rfturns b {@link VolbtilfImbgf} witi b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>, using
     * tif spfdififd imbgf dbpbbilitifs.
     * If tif <dodf>dbps</dodf> pbrbmftfr is null, it is ffffdtivfly ignorfd
     * bnd tiis mftiod will drfbtf b VolbtilfImbgf witiout rfgbrd to
     * <dodf>ImbgfCbpbbilitifs</dodf> donstrbints.
     *
     * Tif rfturnfd <dodf>VolbtilfImbgf</dodf> ibs
     * b lbyout bnd dolor modfl tibt is dlosfst to tiis nbtivf dfvidf
     * donfigurbtion bnd dbn tifrfforf bf optimblly blittfd to tiis
     * dfvidf.
     * @rfturn b <dodf>VolbtilfImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm dbps tif imbgf dbpbbilitifs
     * @fxdfption AWTExdfption if tif supplifd imbgf dbpbbilitifs dould not
     * bf mft by tiis grbpiids donfigurbtion
     * @sindf 1.4
     */
    publid VolbtilfImbgf drfbtfCompbtiblfVolbtilfImbgf(int widti, int ifigit,
        ImbgfCbpbbilitifs dbps) tirows AWTExdfption
    {
        rfturn drfbtfCompbtiblfVolbtilfImbgf(widti, ifigit, dbps,
                                             Trbnspbrfndy.OPAQUE);
    }

    /**
     * Rfturns b {@link VolbtilfImbgf} witi b dbtb lbyout bnd dolor modfl
     * dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>, using
     * tif spfdififd imbgf dbpbbilitifs bnd trbnspbrfndy vbluf.
     * If tif <dodf>dbps</dodf> pbrbmftfr is null, it is ffffdtivfly ignorfd
     * bnd tiis mftiod will drfbtf b VolbtilfImbgf witiout rfgbrd to
     * <dodf>ImbgfCbpbbilitifs</dodf> donstrbints.
     *
     * Tif rfturnfd <dodf>VolbtilfImbgf</dodf> ibs
     * b lbyout bnd dolor modfl tibt is dlosfst to tiis nbtivf dfvidf
     * donfigurbtion bnd dbn tifrfforf bf optimblly blittfd to tiis
     * dfvidf.
     * @pbrbm widti tif widti of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm ifigit tif ifigit of tif rfturnfd <dodf>VolbtilfImbgf</dodf>
     * @pbrbm dbps tif imbgf dbpbbilitifs
     * @pbrbm trbnspbrfndy tif spfdififd trbnspbrfndy modf
     * @rfturn b <dodf>VolbtilfImbgf</dodf> wiosf dbtb lbyout bnd dolor
     * modfl is dompbtiblf witi tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     * @sff Trbnspbrfndy#OPAQUE
     * @sff Trbnspbrfndy#BITMASK
     * @sff Trbnspbrfndy#TRANSLUCENT
     * @tirows IllfgblArgumfntExdfption if tif trbnspbrfndy is not b vblid vbluf
     * @fxdfption AWTExdfption if tif supplifd imbgf dbpbbilitifs dould not
     * bf mft by tiis grbpiids donfigurbtion
     * @sff Componfnt#drfbtfVolbtilfImbgf(int, int)
     * @sindf 1.5
     */
    publid VolbtilfImbgf drfbtfCompbtiblfVolbtilfImbgf(int widti, int ifigit,
        ImbgfCbpbbilitifs dbps, int trbnspbrfndy) tirows AWTExdfption
    {
        VolbtilfImbgf vi =
            nfw SunVolbtilfImbgf(tiis, widti, ifigit, trbnspbrfndy, dbps);
        if (dbps != null && dbps.isAddflfrbtfd() &&
            !vi.gftCbpbbilitifs().isAddflfrbtfd())
        {
            tirow nfw AWTExdfption("Supplifd imbgf dbpbbilitifs dould not " +
                                   "bf mft by tiis grbpiids donfigurbtion.");
        }
        rfturn vi;
    }

    /**
     * Rfturns tif {@link ColorModfl} bssodibtfd witi tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     * @rfturn b <dodf>ColorModfl</dodf> objfdt tibt is bssodibtfd witi
     * tiis <dodf>GrbpiidsConfigurbtion</dodf>.
     */
    publid bbstrbdt ColorModfl gftColorModfl();

    /**
     * Rfturns tif <dodf>ColorModfl</dodf> bssodibtfd witi tiis
     * <dodf>GrbpiidsConfigurbtion</dodf> tibt supports tif spfdififd
     * trbnspbrfndy.
     * @pbrbm trbnspbrfndy tif spfdififd trbnspbrfndy modf
     * @rfturn b <dodf>ColorModfl</dodf> objfdt tibt is bssodibtfd witi
     * tiis <dodf>GrbpiidsConfigurbtion</dodf> bnd supports tif
     * spfdififd trbnspbrfndy or null if tif trbnspbrfndy is not b vblid
     * vbluf.
     * @sff Trbnspbrfndy#OPAQUE
     * @sff Trbnspbrfndy#BITMASK
     * @sff Trbnspbrfndy#TRANSLUCENT
     */
    publid bbstrbdt ColorModfl gftColorModfl(int trbnspbrfndy);

    /**
     * Rfturns tif dffbult {@link AffinfTrbnsform} for tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>. Tiis
     * <dodf>AffinfTrbnsform</dodf> is typidblly tif Idfntity trbnsform
     * for most normbl sdrffns.  Tif dffbult <dodf>AffinfTrbnsform</dodf>
     * mbps doordinbtfs onto tif dfvidf sudi tibt 72 usfr spbdf
     * doordinbtf units mfbsurf bpproximbtfly 1 indi in dfvidf
     * spbdf.  Tif normblizing trbnsform dbn bf usfd to mbkf
     * tiis mbpping morf fxbdt.  Coordinbtfs in tif doordinbtf spbdf
     * dffinfd by tif dffbult <dodf>AffinfTrbnsform</dodf> for sdrffn bnd
     * printfr dfvidfs ibvf tif origin in tif uppfr lfft-ibnd dornfr of
     * tif tbrgft rfgion of tif dfvidf, witi X doordinbtfs
     * indrfbsing to tif rigit bnd Y doordinbtfs indrfbsing downwbrds.
     * For imbgf bufffrs not bssodibtfd witi b dfvidf, sudi bs tiosf not
     * drfbtfd by <dodf>drfbtfCompbtiblfImbgf</dodf>,
     * tiis <dodf>AffinfTrbnsform</dodf> is tif Idfntity trbnsform.
     * @rfturn tif dffbult <dodf>AffinfTrbnsform</dodf> for tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     */
    publid bbstrbdt AffinfTrbnsform gftDffbultTrbnsform();

    /**
     *
     * Rfturns b <dodf>AffinfTrbnsform</dodf> tibt dbn bf dondbtfnbtfd
     * witi tif dffbult <dodf>AffinfTrbnsform</dodf>
     * of b <dodf>GrbpiidsConfigurbtion</dodf> so tibt 72 units in usfr
     * spbdf fqubls 1 indi in dfvidf spbdf.
     * <p>
     * For b pbrtidulbr {@link Grbpiids2D}, g, onf
     * dbn rfsft tif trbnsformbtion to drfbtf
     * sudi b mbpping by using tif following psfudododf:
     * <prf>
     *      GrbpiidsConfigurbtion gd = g.gftDfvidfConfigurbtion();
     *
     *      g.sftTrbnsform(gd.gftDffbultTrbnsform());
     *      g.trbnsform(gd.gftNormblizingTrbnsform());
     * </prf>
     * Notf tibt somftimfs tiis <dodf>AffinfTrbnsform</dodf> is idfntity,
     * sudi bs for printfrs or mftbfilf output, bnd tibt tiis
     * <dodf>AffinfTrbnsform</dodf> is only bs bddurbtf bs tif informbtion
     * supplifd by tif undfrlying systfm.  For imbgf bufffrs not
     * bssodibtfd witi b dfvidf, sudi bs tiosf not drfbtfd by
     * <dodf>drfbtfCompbtiblfImbgf</dodf>, tiis
     * <dodf>AffinfTrbnsform</dodf> is tif Idfntity trbnsform
     * sindf tifrf is no vblid distbndf mfbsurfmfnt.
     * @rfturn bn <dodf>AffinfTrbnsform</dodf> to dondbtfnbtf to tif
     * dffbult <dodf>AffinfTrbnsform</dodf> so tibt 72 units in usfr
     * spbdf is mbppfd to 1 indi in dfvidf spbdf.
     */
    publid bbstrbdt AffinfTrbnsform gftNormblizingTrbnsform();

    /**
     * Rfturns tif bounds of tif <dodf>GrbpiidsConfigurbtion</dodf>
     * in tif dfvidf doordinbtfs. In b multi-sdrffn fnvironmfnt
     * witi b virtubl dfvidf, tif bounds dbn ibvf nfgbtivf X
     * or Y origins.
     * @rfturn tif bounds of tif brfb dovfrfd by tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     * @sindf 1.3
     */
    publid bbstrbdt Rfdtbnglf gftBounds();

    privbtf stbtid dlbss DffbultBufffrCbpbbilitifs fxtfnds BufffrCbpbbilitifs {
        publid DffbultBufffrCbpbbilitifs(ImbgfCbpbbilitifs imbgfCbps) {
            supfr(imbgfCbps, imbgfCbps, null);
        }
    }

    /**
     * Rfturns tif bufffring dbpbbilitifs of tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     * @rfturn tif bufffring dbpbbilitifs of tiis grbpiids
     * donfigurbtion objfdt
     * @sindf 1.4
     */
    publid BufffrCbpbbilitifs gftBufffrCbpbbilitifs() {
        if (dffbultBufffrCbps == null) {
            dffbultBufffrCbps = nfw DffbultBufffrCbpbbilitifs(
                gftImbgfCbpbbilitifs());
        }
        rfturn dffbultBufffrCbps;
    }

    /**
     * Rfturns tif imbgf dbpbbilitifs of tiis
     * <dodf>GrbpiidsConfigurbtion</dodf>.
     * @rfturn tif imbgf dbpbbilitifs of tiis grbpiids
     * donfigurbtion objfdt
     * @sindf 1.4
     */
    publid ImbgfCbpbbilitifs gftImbgfCbpbbilitifs() {
        if (dffbultImbgfCbps == null) {
            dffbultImbgfCbps = nfw ImbgfCbpbbilitifs(fblsf);
        }
        rfturn dffbultImbgfCbps;
    }

    /**
     * Rfturns wiftifr tiis {@dodf GrbpiidsConfigurbtion} supports
     * tif {@link GrbpiidsDfvidf.WindowTrbnsludfndy#PERPIXEL_TRANSLUCENT
     * PERPIXEL_TRANSLUCENT} kind of trbnsludfndy.
     *
     * @rfturn wiftifr tif givfn GrbpiidsConfigurbtion supports
     *         tif trbnsludfndy ffffdts.
     *
     * @sff Window#sftBbdkground(Color)
     *
     * @sindf 1.7
     */
    publid boolfbn isTrbnsludfndyCbpbblf() {
        // Ovfrriddfn in subdlbssfs
        rfturn fblsf;
    }
}
