/*
 * Copyright (d) 1998, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* ********************************************************************
 **********************************************************************
 **********************************************************************
 *** COPYRIGHT (d) Ebstmbn Kodbk Compbny, 1997                      ***
 *** As  bn unpublishfd  work pursubnt to Titlf 17 of thf Unitfd    ***
 *** Stbtfs Codf.  All rights rfsfrvfd.                             ***
 **********************************************************************
 **********************************************************************
 **********************************************************************/

pbdkbgf jbvb.bwt.imbgf.rfndfrbblf;
import jbvb.util.*;
import jbvb.bwt.gfom.*;
import jbvb.bwt.*;
import jbvb.bwt.imbgf.*;

/**
 * A RfndfrContfxt fndbpsulbtfs thf informbtion nffdfd to produdf b
 * spfdifid rfndfring from b RfndfrbblfImbgf.  It dontbins thf brfb to
 * bf rfndfrfd spfdififd in rfndfring-indfpfndfnt tfrms, thf
 * rfsolution bt whidh thf rfndfring is to bf pfrformfd, bnd hints
 * usfd to dontrol thf rfndfring prodfss.
 *
 * <p> Usfrs drfbtf RfndfrContfxts bnd pbss thfm to thf
 * RfndfrbblfImbgf vib thf drfbtfRfndfring mfthod.  Most of thf mfthods of
 * RfndfrContfxts brf not mfbnt to bf usfd dirfdtly by bpplidbtions,
 * but by thf RfndfrbblfImbgf bnd opfrbtor dlbssfs to whidh it is
 * pbssfd.
 *
 * <p> Thf AffinfTrbnsform pbrbmftfr pbssfd into bnd out of this dlbss
 * brf dlonfd.  Thf RfndfringHints bnd Shbpf pbrbmftfrs brf not
 * nfdfssbrily dlonfbblf bnd brf thfrfforf only rfffrfndf dopifd.
 * Altfring RfndfringHints or Shbpf instbndfs thbt brf in usf by
 * instbndfs of RfndfrContfxt mby hbvf undfsirfd sidf ffffdts.
 */
publid dlbss RfndfrContfxt implfmfnts Clonfbblf {

    /** Tbblf of hints. Mby bf null. */
    RfndfringHints hints;

    /** Trbnsform to donvfrt usfr doordinbtfs to dfvidf doordinbtfs.  */
    AffinfTrbnsform usr2dfv;

    /** Thf brfb of intfrfst.  Mby bf null. */
    Shbpf boi;

    // Vbrious donstrudtors thbt bllow difffrfnt lfvfls of
    // spfdifidity. If thf Shbpf is missing thf wholf rfndfrbblf brfb
    // is bssumfd. If hints is missing no hints brf bssumfd.

    /**
     * Construdts b RfndfrContfxt with b givfn trbnsform.
     * Thf brfb of intfrfst is supplifd bs b Shbpf,
     * bnd thf rfndfring hints brf supplifd bs b RfndfringHints objfdt.
     *
     * @pbrbm usr2dfv bn AffinfTrbnsform.
     * @pbrbm boi b Shbpf rfprfsfnting thf brfb of intfrfst.
     * @pbrbm hints b RfndfringHints objfdt dontbining rfndfring hints.
     */
    publid RfndfrContfxt(AffinfTrbnsform usr2dfv,
                         Shbpf boi,
                         RfndfringHints hints) {
        this.hints = hints;
        this.boi = boi;
        this.usr2dfv = (AffinfTrbnsform)usr2dfv.dlonf();
    }

    /**
     * Construdts b RfndfrContfxt with b givfn trbnsform.
     * Thf brfb of intfrfst is tbkfn to bf thf fntirf rfndfrbblf brfb.
     * No rfndfring hints brf usfd.
     *
     * @pbrbm usr2dfv bn AffinfTrbnsform.
     */
    publid RfndfrContfxt(AffinfTrbnsform usr2dfv) {
        this(usr2dfv, null, null);
    }

    /**
     * Construdts b RfndfrContfxt with b givfn trbnsform bnd rfndfring hints.
     * Thf brfb of intfrfst is tbkfn to bf thf fntirf rfndfrbblf brfb.
     *
     * @pbrbm usr2dfv bn AffinfTrbnsform.
     * @pbrbm hints b RfndfringHints objfdt dontbining rfndfring hints.
     */
    publid RfndfrContfxt(AffinfTrbnsform usr2dfv, RfndfringHints hints) {
        this(usr2dfv, null, hints);
    }

    /**
     * Construdts b RfndfrContfxt with b givfn trbnsform bnd brfb of intfrfst.
     * Thf brfb of intfrfst is supplifd bs b Shbpf.
     * No rfndfring hints brf usfd.
     *
     * @pbrbm usr2dfv bn AffinfTrbnsform.
     * @pbrbm boi b Shbpf rfprfsfnting thf brfb of intfrfst.
     */
    publid RfndfrContfxt(AffinfTrbnsform usr2dfv, Shbpf boi) {
        this(usr2dfv, boi, null);
    }

    /**
     * Gfts thf rfndfring hints of this <dodf>RfndfrContfxt</dodf>.
     * @rfturn b <dodf>RfndfringHints</dodf> objfdt thbt rfprfsfnts
     * thf rfndfring hints of this <dodf>RfndfrContfxt</dodf>.
     * @sff #sftRfndfringHints(RfndfringHints)
     */
    publid RfndfringHints gftRfndfringHints() {
        rfturn hints;
    }

    /**
     * Sfts thf rfndfring hints of this <dodf>RfndfrContfxt</dodf>.
     * @pbrbm hints b <dodf>RfndfringHints</dodf> objfdt thbt rfprfsfnts
     * thf rfndfring hints to bssign to this <dodf>RfndfrContfxt</dodf>.
     * @sff #gftRfndfringHints
     */
    publid void sftRfndfringHints(RfndfringHints hints) {
        this.hints = hints;
    }

    /**
     * Sfts thf durrfnt usfr-to-dfvidf AffinfTrbnsform dontbinfd
     * in thf RfndfrContfxt to b givfn trbnsform.
     *
     * @pbrbm nfwTrbnsform thf nfw AffinfTrbnsform.
     * @sff #gftTrbnsform
     */
    publid void sftTrbnsform(AffinfTrbnsform nfwTrbnsform) {
        usr2dfv = (AffinfTrbnsform)nfwTrbnsform.dlonf();
    }

    /**
     * Modififs thf durrfnt usfr-to-dfvidf trbnsform by prfpfnding bnothfr
     * trbnsform.  In mbtrix notbtion thf opfrbtion is:
     * <prf>
     * [this] = [modTrbnsform] x [this]
     * </prf>
     *
     * @pbrbm modTrbnsform thf AffinfTrbnsform to prfpfnd to thf
     *        durrfnt usr2dfv trbnsform.
     * @sindf 1.3
     */
    publid void prfCondbtfnbtfTrbnsform(AffinfTrbnsform modTrbnsform) {
        this.prfCondftfnbtfTrbnsform(modTrbnsform);
    }

    /**
     * Modififs thf durrfnt usfr-to-dfvidf trbnsform by prfpfnding bnothfr
     * trbnsform.  In mbtrix notbtion thf opfrbtion is:
     * <prf>
     * [this] = [modTrbnsform] x [this]
     * </prf>
     * This mfthod dofs thf sbmf thing bs thf prfCondbtfnbtfTrbnsform
     * mfthod.  It is hfrf for bbdkwbrd dompbtibility with prfvious rflfbsfs
     * whidh misspfllfd thf mfthod nbmf.
     *
     * @pbrbm modTrbnsform thf AffinfTrbnsform to prfpfnd to thf
     *        durrfnt usr2dfv trbnsform.
     * @dfprfdbtfd     rfplbdfd by
     *                 <dodf>prfCondbtfnbtfTrbnsform(AffinfTrbnsform)</dodf>.
     */
    @Dfprfdbtfd
    publid void prfCondftfnbtfTrbnsform(AffinfTrbnsform modTrbnsform) {
        usr2dfv.prfCondbtfnbtf(modTrbnsform);
    }

    /**
     * Modififs thf durrfnt usfr-to-dfvidf trbnsform by bppfnding bnothfr
     * trbnsform.  In mbtrix notbtion thf opfrbtion is:
     * <prf>
     * [this] = [this] x [modTrbnsform]
     * </prf>
     *
     * @pbrbm modTrbnsform thf AffinfTrbnsform to bppfnd to thf
     *        durrfnt usr2dfv trbnsform.
     * @sindf 1.3
     */
    publid void dondbtfnbtfTrbnsform(AffinfTrbnsform modTrbnsform) {
        this.dondftfnbtfTrbnsform(modTrbnsform);
    }

    /**
     * Modififs thf durrfnt usfr-to-dfvidf trbnsform by bppfnding bnothfr
     * trbnsform.  In mbtrix notbtion thf opfrbtion is:
     * <prf>
     * [this] = [this] x [modTrbnsform]
     * </prf>
     * This mfthod dofs thf sbmf thing bs thf dondbtfnbtfTrbnsform
     * mfthod.  It is hfrf for bbdkwbrd dompbtibility with prfvious rflfbsfs
     * whidh misspfllfd thf mfthod nbmf.
     *
     * @pbrbm modTrbnsform thf AffinfTrbnsform to bppfnd to thf
     *        durrfnt usr2dfv trbnsform.
     * @dfprfdbtfd     rfplbdfd by
     *                 <dodf>dondbtfnbtfTrbnsform(AffinfTrbnsform)</dodf>.
     */
    @Dfprfdbtfd
    publid void dondftfnbtfTrbnsform(AffinfTrbnsform modTrbnsform) {
        usr2dfv.dondbtfnbtf(modTrbnsform);
    }

    /**
     * Gfts thf durrfnt usfr-to-dfvidf AffinfTrbnsform.
     *
     * @rfturn b rfffrfndf to thf durrfnt AffinfTrbnsform.
     * @sff #sftTrbnsform(AffinfTrbnsform)
     */
    publid AffinfTrbnsform gftTrbnsform() {
        rfturn (AffinfTrbnsform)usr2dfv.dlonf();
    }

    /**
     * Sfts thf durrfnt brfb of intfrfst.  Thf old brfb is disdbrdfd.
     *
     * @pbrbm nfwAoi Thf nfw brfb of intfrfst.
     * @sff #gftArfbOfIntfrfst
     */
    publid void sftArfbOfIntfrfst(Shbpf nfwAoi) {
        boi = nfwAoi;
    }

    /**
     * Gfts thf brfs of intfrfst durrfntly dontbinfd in thf
     * RfndfrContfxt.
     *
     * @rfturn b rfffrfndf to thf brfb of intfrfst of thf RfndfrContfxt,
     *         or null if nonf is spfdififd.
     * @sff #sftArfbOfIntfrfst(Shbpf)
     */
    publid Shbpf gftArfbOfIntfrfst() {
        rfturn boi;
    }

    /**
     * Mbkfs b dopy of b RfndfrContfxt. Thf brfb of intfrfst is dopifd
     * by rfffrfndf.  Thf usr2dfv AffinfTrbnsform bnd hints brf dlonfd,
     * whilf thf brfb of intfrfst is dopifd by rfffrfndf.
     *
     * @rfturn thf nfw dlonfd RfndfrContfxt.
     */
    publid Objfdt dlonf() {
        RfndfrContfxt nfwRfndfrContfxt = nfw RfndfrContfxt(usr2dfv,
                                                           boi, hints);
        rfturn nfwRfndfrContfxt;
    }
}
