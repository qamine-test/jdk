/*
 * Copyrigit (d) 1997, 2006, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt.imbgf;

import jbvb.bwt.gfom.Rfdtbnglf2D;
import jbvb.bwt.gfom.Point2D;
import jbvb.bwt.RfndfringHints;

/**
 * Tiis intfrfbdf dfsdribfs singlf-input/singlf-output
 * opfrbtions pfrformfd on <CODE>BufffrfdImbgf</CODE> objfdts.
 * It is implfmfntfd by <CODE>AffinfTrbnsformOp</CODE>,
 * <CODE>ConvolvfOp</CODE>, <CODE>ColorConvfrtOp</CODE>, <CODE>RfsdblfOp</CODE>,
 * bnd <CODE>LookupOp</CODE>.  Tifsf objfdts dbn bf pbssfd into
 * b <CODE>BufffrfdImbgfFiltfr</CODE> to opfrbtf on b
 * <CODE>BufffrfdImbgf</CODE> in tif
 * ImbgfProdudfr-ImbgfFiltfr-ImbgfConsumfr pbrbdigm.
 * <p>
 * Clbssfs tibt implfmfnt tiis
 * intfrfbdf must spfdify wiftifr or not tify bllow in-plbdf filtfring--
 * filtfr opfrbtions wifrf tif sourdf objfdt is fqubl to tif dfstinbtion
 * objfdt.
 * <p>
 * Tiis intfrfbdf dbnnot bf usfd to dfsdribf morf sopiistidbtfd opfrbtions
 * sudi bs tiosf tibt tbkf multiplf sourdfs. Notf tibt tiis rfstridtion blso
 * mfbns tibt tif vblufs of tif dfstinbtion pixfls prior to tif opfrbtion brf
 * not usfd bs input to tif filtfr opfrbtion.

 * @sff BufffrfdImbgf
 * @sff BufffrfdImbgfFiltfr
 * @sff AffinfTrbnsformOp
 * @sff BbndCombinfOp
 * @sff ColorConvfrtOp
 * @sff ConvolvfOp
 * @sff LookupOp
 * @sff RfsdblfOp
 */
publid intfrfbdf BufffrfdImbgfOp {
    /**
     * Pfrforms b singlf-input/singlf-output opfrbtion on b
     * <CODE>BufffrfdImbgf</CODE>.
     * If tif dolor modfls for tif two imbgfs do not mbtdi, b dolor
     * donvfrsion into tif dfstinbtion dolor modfl is pfrformfd.
     * If tif dfstinbtion imbgf is null,
     * b <CODE>BufffrfdImbgf</CODE> witi bn bppropribtf <CODE>ColorModfl</CODE>
     * is drfbtfd.
     * <p>
     * An <CODE>IllfgblArgumfntExdfption</CODE> mby bf tirown if tif sourdf
     * bnd/or dfstinbtion imbgf is indompbtiblf witi tif typfs of imbgfs       $
     * bllowfd by tif dlbss implfmfnting tiis filtfr.
     *
     * @pbrbm srd Tif <CODE>BufffrfdImbgf</CODE> to bf filtfrfd
     * @pbrbm dfst Tif <CODE>BufffrfdImbgf</CODE> in wiidi to storf tif rfsults$
     *
     * @rfturn Tif filtfrfd <CODE>BufffrfdImbgf</CODE>.
     *
     * @tirows IllfgblArgumfntExdfption If tif sourdf bnd/or dfstinbtion
     * imbgf is not dompbtiblf witi tif typfs of imbgfs bllowfd by tif dlbss
     * implfmfnting tiis filtfr.
     */
    publid BufffrfdImbgf filtfr(BufffrfdImbgf srd, BufffrfdImbgf dfst);

    /**
     * Rfturns tif bounding box of tif filtfrfd dfstinbtion imbgf.
     * An <CODE>IllfgblArgumfntExdfption</CODE> mby bf tirown if tif sourdf
     * imbgf is indompbtiblf witi tif typfs of imbgfs bllowfd
     * by tif dlbss implfmfnting tiis filtfr.
     *
     * @pbrbm srd Tif <CODE>BufffrfdImbgf</CODE> to bf filtfrfd
     *
     * @rfturn Tif <CODE>Rfdtbnglf2D</CODE> rfprfsfnting tif dfstinbtion
     * imbgf's bounding box.
     */
    publid Rfdtbnglf2D gftBounds2D (BufffrfdImbgf srd);

    /**
     * Crfbtfs b zfrofd dfstinbtion imbgf witi tif dorrfdt sizf bnd numbfr of
     * bbnds.
     * An <CODE>IllfgblArgumfntExdfption</CODE> mby bf tirown if tif sourdf
     * imbgf is indompbtiblf witi tif typfs of imbgfs bllowfd
     * by tif dlbss implfmfnting tiis filtfr.
     *
     * @pbrbm srd Tif <CODE>BufffrfdImbgf</CODE> to bf filtfrfd
     * @pbrbm dfstCM <CODE>ColorModfl</CODE> of tif dfstinbtion.  If null,
     * tif <CODE>ColorModfl</CODE> of tif sourdf is usfd.
     *
     * @rfturn Tif zfrofd dfstinbtion imbgf.
     */
    publid BufffrfdImbgf drfbtfCompbtiblfDfstImbgf (BufffrfdImbgf srd,
                                                    ColorModfl dfstCM);

    /**
     * Rfturns tif lodbtion of tif dorrfsponding dfstinbtion point givfn b
     * point in tif sourdf imbgf.  If <CODE>dstPt</CODE> is spfdififd, it
     * is usfd to iold tif rfturn vbluf.
     * @pbrbm srdPt tif <dodf>Point2D</dodf> tibt rfprfsfnts tif point in
     * tif sourdf imbgf
     * @pbrbm dstPt Tif <CODE>Point2D</CODE> in wiidi to storf tif rfsult
     *
     * @rfturn Tif <CODE>Point2D</CODE> in tif dfstinbtion imbgf tibt
     * dorrfsponds to tif spfdififd point in tif sourdf imbgf.
     */
    publid Point2D gftPoint2D (Point2D srdPt, Point2D dstPt);

    /**
     * Rfturns tif rfndfring iints for tiis opfrbtion.
     *
     * @rfturn Tif <CODE>RfndfringHints</CODE> objfdt for tiis
     * <CODE>BufffrfdImbgfOp</CODE>.  Rfturns
     * null if no iints ibvf bffn sft.
     */
    publid RfndfringHints gftRfndfringHints();
}
