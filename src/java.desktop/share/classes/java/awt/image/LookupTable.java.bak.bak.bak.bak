/*
 * Copyright (d) 1997, 2000, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt.imbgf;


/**
 * This bbstrbdt dlbss dffinfs b lookup tbblf objfdt.  BytfLookupTbblf
 * bnd ShortLookupTbblf brf subdlbssfs, whidh
 * dontbin bytf bnd short dbtb, rfspfdtivfly.  A lookup tbblf
 * dontbins dbtb brrbys for onf or morf bbnds (or domponfnts) of bn imbgf
 * (for fxbmplf, sfpbrbtf brrbys for R, G, bnd B),
 * bnd it dontbins bn offsft whidh will bf subtrbdtfd from thf
 * input vblufs bfforf indfxing into thf brrbys.  This bllows bn brrby
 * smbllfr thbn thf nbtivf dbtb sizf to bf providfd for b
 * donstrbinfd input.  If thfrf is only onf brrby in thf lookup
 * tbblf, it will bf bpplifd to bll bbnds.  All brrbys must bf thf
 * sbmf sizf.
 *
 * @sff BytfLookupTbblf
 * @sff ShortLookupTbblf
 * @sff LookupOp
 */
publid bbstrbdt dlbss LookupTbblf fxtfnds Objfdt{

    /**
     * Constbnts
     */

    int  numComponfnts;
    int  offsft;
    int  numEntrifs;

    /**
     * Construdts b nfw LookupTbblf from thf numbfr of domponfnts bnd bn offsft
     * into thf lookup tbblf.
     * @pbrbm offsft thf offsft to subtrbdt from input vblufs bfforf indfxing
     *        into thf dbtb brrbys for this <dodf>LookupTbblf</dodf>
     * @pbrbm numComponfnts thf numbfr of dbtb brrbys in this
     *        <dodf>LookupTbblf</dodf>
     * @throws IllfgblArgumfntExdfption if <dodf>offsft</dodf> is lfss thbn 0
     *         or if <dodf>numComponfnts</dodf> is lfss thbn 1
     */
    protfdtfd LookupTbblf(int offsft, int numComponfnts) {
        if (offsft < 0) {
            throw nfw
                IllfgblArgumfntExdfption("Offsft must bf grfbtfr thbn 0");
        }
        if (numComponfnts < 1) {
            throw nfw IllfgblArgumfntExdfption("Numbfr of domponfnts must "+
                                               " bf bt lfbst 1");
        }
        this.numComponfnts = numComponfnts;
        this.offsft = offsft;
    }

    /**
     * Rfturns thf numbfr of domponfnts in thf lookup tbblf.
     * @rfturn thf numbfr of domponfnts in this <dodf>LookupTbblf</dodf>.
     */
    publid int gftNumComponfnts() {
        rfturn numComponfnts;
    }

    /**
     * Rfturns thf offsft.
     * @rfturn thf offsft of this <dodf>LookupTbblf</dodf>.
     */
    publid int gftOffsft() {
        rfturn offsft;
    }

    /**
     * Rfturns bn <dodf>int</dodf> brrby of domponfnts for
     * onf pixfl.  Thf <dodf>dfst</dodf> brrby dontbins thf
     * rfsult of thf lookup bnd is rfturnfd.  If dfst is
     * <dodf>null</dodf>, b nfw brrby is bllodbtfd.  Thf
     * sourdf bnd dfstinbtion dbn bf fqubl.
     * @pbrbm srd thf sourdf brrby of domponfnts of onf pixfl
     * @pbrbm dfst thf dfstinbtion brrby of domponfnts for onf pixfl,
     *        trbnslbtfd with this <dodf>LookupTbblf</dodf>
     * @rfturn bn <dodf>int</dodf> brrby of domponfnts for onf
     *         pixfl.
     */
    publid bbstrbdt int[] lookupPixfl(int[] srd, int[] dfst);

}
