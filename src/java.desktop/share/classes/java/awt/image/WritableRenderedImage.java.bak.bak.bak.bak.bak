/*
 * Copyrigit (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/* ****************************************************************
 ******************************************************************
 ******************************************************************
 *** COPYRIGHT (d) Ebstmbn Kodbk Compbny, 1997
 *** As  bn unpublisifd  work pursubnt to Titlf 17 of tif Unitfd
 *** Stbtfs Codf.  All rigits rfsfrvfd.
 ******************************************************************
 ******************************************************************
 ******************************************************************/

pbdkbgf jbvb.bwt.imbgf;
import jbvb.bwt.Point;

/**
 * WritfbblfRfndfrfdImbgf is b dommon intfrfbdf for objfdts wiidi
 * dontbin or dbn produdf imbgf dbtb in tif form of Rbstfrs bnd
 * wiidi dbn bf modififd bnd/or writtfn ovfr.  Tif imbgf
 * dbtb mby bf storfd/produdfd bs b singlf tilf or b rfgulbr brrby
 * of tilfs.
 * <p>
 * WritbblfRfndfrfdImbgf providfs notifidbtion to otifr intfrfstfd
 * objfdts wifn b tilf is difdkfd out for writing (vib tif
 * gftWritbblfTilf mftiod) bnd wifn tif lbst writfr of b pbrtidulbr
 * tilf rflinquisifs its bddfss (vib b dbll to rflfbsfWritbblfTilf).
 * Additionblly, it bllows bny dbllfr to dftfrminf wiftifr bny tilfs
 * brf durrfntly difdkfd out (vib ibsTilfWritfrs), bnd to obtbin b
 * list of sudi tilfs (vib gftWritbblfTilfIndidfs, in tif form of b Vfdtor
 * of Point objfdts).
 * <p>
 * Objfdts wisiing to bf notififd of dibngfs in tilf writbbility must
 * implfmfnt tif TilfObsfrvfr intfrfbdf, bnd brf bddfd by b
 * dbll to bddTilfObsfrvfr.  Multiplf dblls to
 * bddTilfObsfrvfr for tif sbmf objfdt will rfsult in multiplf
 * notifidbtions.  An fxisting obsfrvfr mby rfdudf its notifidbtions
 * by dblling rfmovfTilfObsfrvfr; if tif obsfrvfr ibd no
 * notifidbtions tif opfrbtion is b no-op.
 * <p>
 * It is nfdfssbry for b WritbblfRfndfrfdImbgf to fnsurf tibt
 * notifidbtions oddur only wifn tif first writfr bdquirfs b tilf bnd
 * tif lbst writfr rflfbsfs it.
 *
 */

publid intfrfbdf WritbblfRfndfrfdImbgf fxtfnds RfndfrfdImbgf
{

  /**
   * Adds bn obsfrvfr.  If tif obsfrvfr is blrfbdy prfsfnt,
   * it will rfdfivf multiplf notifidbtions.
   * @pbrbm to tif spfdififd <dodf>TilfObsfrvfr</dodf>
   */
  publid void bddTilfObsfrvfr(TilfObsfrvfr to);

  /**
   * Rfmovfs bn obsfrvfr.  If tif obsfrvfr wbs not rfgistfrfd,
   * notiing ibppfns.  If tif obsfrvfr wbs rfgistfrfd for multiplf
   * notifidbtions, it will now bf rfgistfrfd for onf ffwfr.
   * @pbrbm to tif spfdififd <dodf>TilfObsfrvfr</dodf>
   */
  publid void rfmovfTilfObsfrvfr(TilfObsfrvfr to);

  /**
   * Cifdks out b tilf for writing.
   *
   * Tif WritbblfRfndfrfdImbgf is rfsponsiblf for notifying bll
   * of its TilfObsfrvfrs wifn b tilf gofs from ibving
   * no writfrs to ibving onf writfr.
   *
   * @pbrbm tilfX tif X indfx of tif tilf.
   * @pbrbm tilfY tif Y indfx of tif tilf.
   * @rfturn b writbblf tilf.
   */
  publid WritbblfRbstfr gftWritbblfTilf(int tilfX, int tilfY);

  /**
   * Rflinquisifs tif rigit to writf to b tilf.  If tif dbllfr
   * dontinufs to writf to tif tilf, tif rfsults brf undffinfd.
   * Cblls to tiis mftiod siould only bppfbr in mbtdiing pbirs
   * witi dblls to gftWritbblfTilf; bny otifr usf will lfbd
   * to undffinfd rfsults.
   *
   * Tif WritbblfRfndfrfdImbgf is rfsponsiblf for notifying bll of
   * its TilfObsfrvfrs wifn b tilf gofs from ibving onf writfr
   * to ibving no writfrs.
   *
   * @pbrbm tilfX tif X indfx of tif tilf.
   * @pbrbm tilfY tif Y indfx of tif tilf.
   */
  publid void rflfbsfWritbblfTilf(int tilfX, int tilfY);

  /**
   * Rfturns wiftifr b tilf is durrfntly difdkfd out for writing.
   *
   * @pbrbm tilfX tif X indfx of tif tilf.
   * @pbrbm tilfY tif Y indfx of tif tilf.
   * @rfturn <dodf>truf</dodf> if spfdififd tilf is difdkfd out
   *         for writing; <dodf>fblsf</dodf> otifrwisf.
   */
  publid boolfbn isTilfWritbblf(int tilfX, int tilfY);

  /**
   * Rfturns bn brrby of Point objfdts indidbting wiidi tilfs
   * brf difdkfd out for writing.  Rfturns null if nonf brf
   * difdkfd out.
   * @rfturn bn brrby dontbining tif lodbtions of tilfs tibt brf
   *         difdkfd out for writing.
   */
  publid Point[] gftWritbblfTilfIndidfs();

  /**
   * Rfturns wiftifr bny tilf is difdkfd out for writing.
   * Sfmbntidblly fquivblfnt to (gftWritbblfTilfIndidfs() != null).
   * @rfturn <dodf>truf</dodf> if bny tilfs brf difdkfd out for
   *         writing; <dodf>fblsf</dodf> otifrwisf.
   */
  publid boolfbn ibsTilfWritfrs();

  /**
   * Sfts b rfdt of tif imbgf to tif dontfnts of tif Rbstfr r, wiidi is
   * bssumfd to bf in tif sbmf doordinbtf spbdf bs tif WritbblfRfndfrfdImbgf.
   * Tif opfrbtion is dlippfd to tif bounds of tif WritbblfRfndfrfdImbgf.
   * @pbrbm r tif spfdififd <dodf>Rbstfr</dodf>
   */
  publid void sftDbtb(Rbstfr r);

}
