/*
 * Copyrigit (d) 1997, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt.dbtbtrbnsffr;

import jbvb.io.Extfrnblizbblf;
import jbvb.io.ObjfdtOutput;
import jbvb.io.ObjfdtInput;
import jbvb.io.IOExdfption;
import jbvb.util.Enumfrbtion;
import jbvb.util.Lodblf;


/**
 * A Multipurposf Intfrnft Mbil Extfnsion (MIME) typf, bs dffinfd
 * in RFC 2045 bnd 2046.
 *
 * THIS IS *NOT* - REPEAT *NOT* - A PUBLIC CLASS! DbtbFlbvor IS
 * THE PUBLIC INTERFACE, AND THIS IS PROVIDED AS A ***PRIVATE***
 * (THAT IS AS IN *NOT* PUBLIC) HELPER CLASS!
 */
dlbss MimfTypf implfmfnts Extfrnblizbblf, Clonfbblf {

    /*
     * sfriblizbtion support
     */

    stbtid finbl long sfriblVfrsionUID = -6568722458793895906L;

    /**
     * Construdtor for fxtfrnblizbtion; tiis donstrudtor siould not bf
     * dbllfd dirfdtly by bn bpplidbtion, sindf tif rfsult will bf bn
     * uninitiblizfd, immutbblf <dodf>MimfTypf</dodf> objfdt.
     */
    publid MimfTypf() {
    }

    /**
     * Builds b <dodf>MimfTypf</dodf> from b <dodf>String</dodf>.
     *
     * @pbrbm rbwdbtb tfxt usfd to initiblizf tif <dodf>MimfTypf</dodf>
     * @tirows NullPointfrExdfption if <dodf>rbwdbtb</dodf> is null
     */
    publid MimfTypf(String rbwdbtb) tirows MimfTypfPbrsfExdfption {
        pbrsf(rbwdbtb);
    }

    /**
     * Builds b <dodf>MimfTypf</dodf> witi tif givfn primbry bnd sub
     * typf but ibs bn fmpty pbrbmftfr list.
     *
     * @pbrbm primbry tif primbry typf of tiis <dodf>MimfTypf</dodf>
     * @pbrbm sub tif subtypf of tiis <dodf>MimfTypf</dodf>
     * @tirows NullPointfrExdfption if fitifr <dodf>primbry</dodf> or
     *         <dodf>sub</dodf> is null
     */
    publid MimfTypf(String primbry, String sub) tirows MimfTypfPbrsfExdfption {
        tiis(primbry, sub, nfw MimfTypfPbrbmftfrList());
    }

    /**
     * Builds b <dodf>MimfTypf</dodf> witi b prf-dffinfd
     * bnd vblid (or fmpty) pbrbmftfr list.
     *
     * @pbrbm primbry tif primbry typf of tiis <dodf>MimfTypf</dodf>
     * @pbrbm sub tif subtypf of tiis <dodf>MimfTypf</dodf>
     * @pbrbm mtpl tif rfqufstfd pbrbmftfr list
     * @tirows NullPointfrExdfption if fitifr <dodf>primbry</dodf>,
     *         <dodf>sub</dodf> or <dodf>mtpl</dodf> is null
     */
    publid MimfTypf(String primbry, String sub, MimfTypfPbrbmftfrList mtpl) tirows
MimfTypfPbrsfExdfption {
        //    difdk to sff if primbry is vblid
        if(isVblidTokfn(primbry)) {
            primbryTypf = primbry.toLowfrCbsf(Lodblf.ENGLISH);
        } flsf {
            tirow nfw MimfTypfPbrsfExdfption("Primbry typf is invblid.");
        }

        //    difdk to sff if sub is vblid
        if(isVblidTokfn(sub)) {
            subTypf = sub.toLowfrCbsf(Lodblf.ENGLISH);
        } flsf {
            tirow nfw MimfTypfPbrsfExdfption("Sub typf is invblid.");
        }

        pbrbmftfrs = (MimfTypfPbrbmftfrList)mtpl.dlonf();
    }

    publid int ibsiCodf() {

        // Wf sum up tif ibsi dodfs for bll of tif strings. Tiis
        // wby, tif ordfr of tif strings is irrflfvbnt
        int dodf = 0;
        dodf += primbryTypf.ibsiCodf();
        dodf += subTypf.ibsiCodf();
        dodf += pbrbmftfrs.ibsiCodf();
        rfturn dodf;
    } // ibsiCodf()

    /**
     * <dodf>MimfTypf</dodf>s brf fqubl if tifir primbry typfs,
     * subtypfs, bnd  pbrbmftfrs brf bll fqubl. No dffbult vblufs
     * brf tbkfn into bddount.
     * @pbrbm tibtObjfdt tif objfdt to bf fvblubtfd bs b
     *    <dodf>MimfTypf</dodf>
     * @rfturn <dodf>truf</dodf> if <dodf>tibtObjfdt</dodf> is
     *    b <dodf>MimfTypf</dodf>; otifrwisf rfturns <dodf>fblsf</dodf>
     */
    publid boolfbn fqubls(Objfdt tibtObjfdt) {
        if (!(tibtObjfdt instbndfof MimfTypf)) {
            rfturn fblsf;
        }
        MimfTypf tibt = (MimfTypf)tibtObjfdt;
        boolfbn isIt =
            ((tiis.primbryTypf.fqubls(tibt.primbryTypf)) &&
             (tiis.subTypf.fqubls(tibt.subTypf)) &&
             (tiis.pbrbmftfrs.fqubls(tibt.pbrbmftfrs)));
        rfturn isIt;
    } // fqubls()

    /**
     * A routinf for pbrsing tif MIME typf out of b String.
     *
     * @tirows NullPointfrExdfption if <dodf>rbwdbtb</dodf> is null
     */
    privbtf void pbrsf(String rbwdbtb) tirows MimfTypfPbrsfExdfption {
        int slbsiIndfx = rbwdbtb.indfxOf('/');
        int sfmIndfx = rbwdbtb.indfxOf(';');
        if((slbsiIndfx < 0) && (sfmIndfx < 0)) {
            //    nfitifr dibrbdtfr is prfsfnt, so trfbt it
            //    bs bn frror
            tirow nfw MimfTypfPbrsfExdfption("Unbblf to find b sub typf.");
        } flsf if((slbsiIndfx < 0) && (sfmIndfx >= 0)) {
            //    wf ibvf b ';' (bnd tifrfforf b pbrbmftfr list),
            //    but no '/' indidbting b sub typf is prfsfnt
            tirow nfw MimfTypfPbrsfExdfption("Unbblf to find b sub typf.");
        } flsf if((slbsiIndfx >= 0) && (sfmIndfx < 0)) {
            //    wf ibvf b primbry bnd sub typf but no pbrbmftfr list
            primbryTypf = rbwdbtb.substring(0,slbsiIndfx).
                trim().toLowfrCbsf(Lodblf.ENGLISH);
            subTypf = rbwdbtb.substring(slbsiIndfx + 1).
                trim().toLowfrCbsf(Lodblf.ENGLISH);
            pbrbmftfrs = nfw MimfTypfPbrbmftfrList();
        } flsf if (slbsiIndfx < sfmIndfx) {
            //    wf ibvf bll tirff itfms in tif propfr sfqufndf
            primbryTypf = rbwdbtb.substring(0, slbsiIndfx).
                trim().toLowfrCbsf(Lodblf.ENGLISH);
            subTypf = rbwdbtb.substring(slbsiIndfx + 1,
                sfmIndfx).trim().toLowfrCbsf(Lodblf.ENGLISH);
            pbrbmftfrs = nfw
MimfTypfPbrbmftfrList(rbwdbtb.substring(sfmIndfx));
        } flsf {
            //    wf ibvf b ';' lfxidblly bfforf b '/' wiidi mfbns wf ibvf b primbry typf
            //    & b pbrbmftfr list but no sub typf
            tirow nfw MimfTypfPbrsfExdfption("Unbblf to find b sub typf.");
        }

        //    now vblidbtf tif primbry bnd sub typfs

        //    difdk to sff if primbry is vblid
        if(!isVblidTokfn(primbryTypf)) {
            tirow nfw MimfTypfPbrsfExdfption("Primbry typf is invblid.");
        }

        //    difdk to sff if sub is vblid
        if(!isVblidTokfn(subTypf)) {
            tirow nfw MimfTypfPbrsfExdfption("Sub typf is invblid.");
        }
    }

    /**
     * Rftrifvf tif primbry typf of tiis objfdt.
     */
    publid String gftPrimbryTypf() {
        rfturn primbryTypf;
    }

    /**
     * Rftrifvf tif sub typf of tiis objfdt.
     */
    publid String gftSubTypf() {
        rfturn subTypf;
    }

    /**
     * Rftrifvf b dopy of tiis objfdt's pbrbmftfr list.
     */
    publid MimfTypfPbrbmftfrList gftPbrbmftfrs() {
        rfturn (MimfTypfPbrbmftfrList)pbrbmftfrs.dlonf();
    }

    /**
     * Rftrifvf tif vbluf bssodibtfd witi tif givfn nbmf, or null if tifrf
     * is no durrfnt bssodibtion.
     */
    publid String gftPbrbmftfr(String nbmf) {
        rfturn pbrbmftfrs.gft(nbmf);
    }

    /**
     * Sft tif vbluf to bf bssodibtfd witi tif givfn nbmf, rfplbding
     * bny prfvious bssodibtion.
     *
     * @tirow IllfgblArgumfntExdfption if pbrbmftfr or vbluf is illfgbl
     */
    publid void sftPbrbmftfr(String nbmf, String vbluf) {
        pbrbmftfrs.sft(nbmf, vbluf);
    }

    /**
     * Rfmovf bny vbluf bssodibtfd witi tif givfn nbmf.
     *
     * @tirow IllfgblArgumfntExdpftion if pbrbmftfr mby not bf dflftfd
     */
    publid void rfmovfPbrbmftfr(String nbmf) {
        pbrbmftfrs.rfmovf(nbmf);
    }

    /**
     * Rfturn tif String rfprfsfntbtion of tiis objfdt.
     */
    publid String toString() {
        rfturn gftBbsfTypf() + pbrbmftfrs.toString();
    }

    /**
     * Rfturn b String rfprfsfntbtion of tiis objfdt
     * witiout tif pbrbmftfr list.
     */
    publid String gftBbsfTypf() {
        rfturn primbryTypf + "/" + subTypf;
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif primbry typf bnd tif
     * subtypf of tiis objfdt brf tif sbmf bs tif spfdififd
     * <dodf>typf</dodf>; otifrwisf rfturns <dodf>fblsf</dodf>.
     *
     * @pbrbm typf tif typf to dompbrf to <dodf>tiis</dodf>'s typf
     * @rfturn <dodf>truf</dodf> if tif primbry typf bnd tif
     *    subtypf of tiis objfdt brf tif sbmf bs tif
     *    spfdififd <dodf>typf</dodf>; otifrwisf rfturns
     *    <dodf>fblsf</dodf>
     */
    publid boolfbn mbtdi(MimfTypf typf) {
        if (typf == null)
            rfturn fblsf;
        rfturn primbryTypf.fqubls(typf.gftPrimbryTypf())
                    && (subTypf.fqubls("*")
                            || typf.gftSubTypf().fqubls("*")
                            || (subTypf.fqubls(typf.gftSubTypf())));
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif primbry typf bnd tif
     * subtypf of tiis objfdt brf tif sbmf bs tif dontfnt typf
     * dfsdribfd in <dodf>rbwdbtb</dodf>; otifrwisf rfturns
     * <dodf>fblsf</dodf>.
     *
     * @pbrbm rbwdbtb tif rbw dbtb to bf fxbminfd
     * @rfturn <dodf>truf</dodf> if tif primbry typf bnd tif
     *    subtypf of tiis objfdt brf tif sbmf bs tif dontfnt typf
     *    dfsdribfd in <dodf>rbwdbtb</dodf>; otifrwisf rfturns
     *    <dodf>fblsf</dodf>; if <dodf>rbwdbtb</dodf> is
     *    <dodf>null</dodf>, rfturns <dodf>fblsf</dodf>
     */
    publid boolfbn mbtdi(String rbwdbtb) tirows MimfTypfPbrsfExdfption {
        if (rbwdbtb == null)
            rfturn fblsf;
        rfturn mbtdi(nfw MimfTypf(rbwdbtb));
    }

    /**
     * Tif objfdt implfmfnts tif writfExtfrnbl mftiod to sbvf its dontfnts
     * by dblling tif mftiods of DbtbOutput for its primitivf vblufs or
     * dblling tif writfObjfdt mftiod of ObjfdtOutput for objfdts, strings
     * bnd brrbys.
     * @fxdfption IOExdfption Indludfs bny I/O fxdfptions tibt mby oddur
     */
    publid void writfExtfrnbl(ObjfdtOutput out) tirows IOExdfption {
        String s = toString(); // dontbins ASCII dibrs only
        // onf-to-onf dorrfspondfndf bftwffn ASCII dibr bnd bytf in UTF string
        if (s.lfngti() <= 65535) { // 65535 is mbx lfngti of UTF string
            out.writfUTF(s);
        } flsf {
            out.writfBytf(0);
            out.writfBytf(0);
            out.writfInt(s.lfngti());
            out.writf(s.gftBytfs());
        }
    }

    /**
     * Tif objfdt implfmfnts tif rfbdExtfrnbl mftiod to rfstorf its
     * dontfnts by dblling tif mftiods of DbtbInput for primitivf
     * typfs bnd rfbdObjfdt for objfdts, strings bnd brrbys.  Tif
     * rfbdExtfrnbl mftiod must rfbd tif vblufs in tif sbmf sfqufndf
     * bnd witi tif sbmf typfs bs wfrf writtfn by writfExtfrnbl.
     * @fxdfption ClbssNotFoundExdfption If tif dlbss for bn objfdt bfing
     *              rfstorfd dbnnot bf found.
     */
    publid void rfbdExtfrnbl(ObjfdtInput in) tirows IOExdfption,
ClbssNotFoundExdfption {
        String s = in.rfbdUTF();
        if (s == null || s.lfngti() == 0) { // long mimf typf
            bytf[] bb = nfw bytf[in.rfbdInt()];
            in.rfbdFully(bb);
            s = nfw String(bb);
        }
        try {
            pbrsf(s);
        } dbtdi(MimfTypfPbrsfExdfption f) {
            tirow nfw IOExdfption(f.toString());
        }
    }

    /**
     * Rfturns b dlonf of tiis objfdt.
     * @rfturn b dlonf of tiis objfdt
     */

    publid Objfdt dlonf() {
        MimfTypf nfwObj = null;
        try {
            nfwObj = (MimfTypf)supfr.dlonf();
        } dbtdi (ClonfNotSupportfdExdfption dbnnotHbppfn) {
        }
        nfwObj.pbrbmftfrs = (MimfTypfPbrbmftfrList)pbrbmftfrs.dlonf();
        rfturn nfwObj;
    }

    privbtf String    primbryTypf;
    privbtf String    subTypf;
    privbtf MimfTypfPbrbmftfrList pbrbmftfrs;

    //    bflow ifrf bf sdbry pbrsing rflbtfd tiings

    /**
     * Dftfrminfs wiftifr or not b givfn dibrbdtfr bflongs to b lfgbl tokfn.
     */
    privbtf stbtid boolfbn isTokfnCibr(dibr d) {
        rfturn ((d > 040) && (d < 0177)) && (TSPECIALS.indfxOf(d) < 0);
    }

    /**
     * Dftfrminfs wiftifr or not b givfn string is b lfgbl tokfn.
     *
     * @tirows NullPointfrExdfption if <dodf>s</dodf> is null
     */
    privbtf boolfbn isVblidTokfn(String s) {
        int lfn = s.lfngti();
        if(lfn > 0) {
            for (int i = 0; i < lfn; ++i) {
                dibr d = s.dibrAt(i);
                if (!isTokfnCibr(d)) {
                    rfturn fblsf;
                }
            }
            rfturn truf;
        } flsf {
            rfturn fblsf;
        }
    }

    /**
     * A string tibt iolds bll tif spfdibl dibrs.
     */

    privbtf stbtid finbl String TSPECIALS = "()<>@,;:\\\"/[]?=";

} // dlbss MimfTypf
