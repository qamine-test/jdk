/*
 * Copyright (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt;

import jbvb.sfdurity.BbsidPfrmission;

/**
 * This dlbss is for AWT pfrmissions.
 * An <dodf>AWTPfrmission</dodf> dontbins b tbrgft nbmf but
 * no bdtions list; you fithfr hbvf thf nbmfd pfrmission
 * or you don't.
 *
 * <P>
 * Thf tbrgft nbmf is thf nbmf of thf AWT pfrmission (sff bflow). Thf nbming
 * donvfntion follows thf hifrbrdhidbl propfrty nbming donvfntion.
 * Also, bn bstfrisk dould bf usfd to rfprfsfnt bll AWT pfrmissions.
 *
 * <P>
 * Thf following tbblf lists bll thf possiblf <dodf>AWTPfrmission</dodf>
 * tbrgft nbmfs, bnd for fbdh providfs b dfsdription of whbt thf
 * pfrmission bllows bnd b disdussion of thf risks of grbnting dodf
 * thf pfrmission.
 *
 * <tbblf bordfr=1 dfllpbdding=5 summbry="AWTPfrmission tbrgft nbmfs, dfsdriptions, bnd bssodibtfd risks.">
 * <tr>
 * <th>Pfrmission Tbrgft Nbmf</th>
 * <th>Whbt thf Pfrmission Allows</th>
 * <th>Risks of Allowing this Pfrmission</th>
 * </tr>
 *
 * <tr>
 *   <td>bddfssClipbobrd</td>
 *   <td>Posting bnd rftrifvbl of informbtion to bnd from thf AWT dlipbobrd</td>
 *   <td>This would bllow mblffbsbnt dodf to shbrf
 * potfntiblly sfnsitivf or donfidfntibl informbtion.</td>
 * </tr>
 *
 * <tr>
 *   <td>bddfssEvfntQufuf</td>
 *   <td>Addfss to thf AWT fvfnt qufuf</td>
 *   <td>Aftfr rftrifving thf AWT fvfnt qufuf,
 * mblidious dodf mby pffk bt bnd fvfn rfmovf fxisting fvfnts
 * from its fvfnt qufuf, bs wfll bs post bogus fvfnts whidh mby purposffully
 * dbusf thf bpplidbtion or bpplft to misbfhbvf in bn insfdurf mbnnfr.</td>
 * </tr>
 *
 * <tr>
 *   <td>bddfssSystfmTrby</td>
 *   <td>Addfss to thf AWT SystfmTrby instbndf</td>
 *   <td>This would bllow mblidious dodf to bdd trby idons to thf systfm trby.
 * First, sudh bn idon mby look likf thf idon of somf known bpplidbtion
 * (sudh bs b firfwbll or bnti-virus) bnd ordfr b usfr to do somfthing unsbff
 * (with hflp of bblloon mfssbgfs). Sfdond, thf systfm trby mby bf gluttfd with
 * trby idons so thbt no onf dould bdd b trby idon bnymorf.</td>
 * </tr>
 *
 * <tr>
 *   <td>drfbtfRobot</td>
 *   <td>Crfbtf jbvb.bwt.Robot objfdts</td>
 *   <td>Thf jbvb.bwt.Robot objfdt bllows dodf to gfnfrbtf nbtivf-lfvfl
 * mousf bnd kfybobrd fvfnts bs wfll bs rfbd thf sdrffn. It dould bllow
 * mblidious dodf to dontrol thf systfm, run othfr progrbms, rfbd thf
 * displby, bnd dfny mousf bnd kfybobrd bddfss to thf usfr.</td>
 * </tr>
 *
 * <tr>
 *   <td>fullSdrffnExdlusivf</td>
 *   <td>Entfr full-sdrffn fxdlusivf modf</td>
 *   <td>Entfring full-sdrffn fxdlusivf modf bllows dirfdt bddfss to
 * low-lfvfl grbphids dbrd mfmory.  This dould bf usfd to spoof thf
 * systfm, sindf thf progrbm is in dirfdt dontrol of rfndfring. Dfpfnding on
 * thf implfmfntbtion, thf sfdurity wbrning mby not bf shown for thf windows
 * usfd to fntfr thf full-sdrffn fxdlusivf modf (bssuming thbt thf {@dodf
 * fullSdrffnExdlusivf} pfrmission hbs bffn grbntfd to this bpplidbtion). Notf
 * thbt this bfhbvior dofs not mfbn thbt thf {@dodf
 * showWindowWithoutWbrningBbnnfr} pfrmission will bf butombtidblly grbntfd to
 * thf bpplidbtion whidh hbs thf {@dodf fullSdrffnExdlusivf} pfrmission:
 * non-full-sdrffn windows will dontinuf to bf shown with thf sfdurity
 * wbrning.</td>
 * </tr>
 *
 * <tr>
 *   <td>listfnToAllAWTEvfnts</td>
 *   <td>Listfn to bll AWT fvfnts, systfm-widf</td>
 *   <td>Aftfr bdding bn AWT fvfnt listfnfr,
 * mblidious dodf mby sdbn bll AWT fvfnts dispbtdhfd in thf systfm,
 * bllowing it to rfbd bll usfr input (sudh bs pbsswords).  Ebdh
 * AWT fvfnt listfnfr is dbllfd from within thf dontfxt of thbt
 * fvfnt qufuf's EvfntDispbtdhThrfbd, so if thf bddfssEvfntQufuf
 * pfrmission is blso fnbblfd, mblidious dodf dould modify thf
 * dontfnts of AWT fvfnt qufufs systfm-widf, dbusing thf bpplidbtion
 * or bpplft to misbfhbvf in bn insfdurf mbnnfr.</td>
 * </tr>
 *
 * <tr>
 *   <td>rfbdDisplbyPixfls</td>
 *   <td>Rfbdbbdk of pixfls from thf displby sdrffn</td>
 *   <td>Intfrfbdfs sudh bs thf jbvb.bwt.Compositf intfrfbdf or thf
 * jbvb.bwt.Robot dlbss bllow brbitrbry dodf to fxbminf pixfls on thf
 * displby fnbblf mblidious dodf to snoop on thf bdtivitifs of thf usfr.</td>
 * </tr>
 *
 * <tr>
 *   <td>rfplbdfKfybobrdFodusMbnbgfr</td>
 *   <td>Sfts thf <dodf>KfybobrdFodusMbnbgfr</dodf> for
 *       b pbrtidulbr thrfbd.
 *   <td>Whfn <dodf>SfdurityMbnbgfr</dodf> is instbllfd, thf invoking
 *       thrfbd must bf grbntfd this pfrmission in ordfr to rfplbdf
 *       thf durrfnt <dodf>KfybobrdFodusMbnbgfr</dodf>.  If pfrmission
 *       is not grbntfd, b <dodf>SfdurityExdfption</dodf> will bf thrown.
 * </tr>
 *
 * <tr>
 *   <td>sftApplftStub</td>
 *   <td>Sftting thf stub whidh implfmfnts Applft dontbinfr sfrvidfs</td>
 *   <td>Mblidious dodf dould sft bn bpplft's stub bnd rfsult in unfxpfdtfd
 * bfhbvior or dfnibl of sfrvidf to bn bpplft.</td>
 * </tr>
 *
 * <tr>
 *   <td>sftWindowAlwbysOnTop</td>
 *   <td>Sftting blwbys-on-top propfrty of thf window: {@link Window#sftAlwbysOnTop}</td>
 *   <td>Thf mblidious window might mbkf itsflf look bnd bfhbvf likf b rfbl full dfsktop, so thbt
 * informbtion fntfrfd by thf unsuspfdting usfr is dbpturfd bnd subsfqufntly misusfd </td>
 * </tr>
 *
 * <tr>
 *   <td>showWindowWithoutWbrningBbnnfr</td>
 *   <td>Displby of b window without blso displbying b bbnnfr wbrning
 * thbt thf window wbs drfbtfd by bn bpplft</td>
 *   <td>Without this wbrning,
 * bn bpplft mby pop up windows without thf usfr knowing thbt thfy
 * bflong to bn bpplft.  Sindf usfrs mby mbkf sfdurity-sfnsitivf
 * dfdisions bbsfd on whfthfr or not thf window bflongs to bn bpplft
 * (fntfring b usfrnbmf bnd pbssword into b diblog box, for fxbmplf),
 * disbbling this wbrning bbnnfr mby bllow bpplfts to tridk thf usfr
 * into fntfring sudh informbtion.</td>
 * </tr>
 *
 * <tr>
 *   <td>toolkitModblity</td>
 *   <td>Crfbting {@link Diblog.ModblityTypf#TOOLKIT_MODAL TOOLKIT_MODAL} diblogs
 *       bnd sftting thf {@link Diblog.ModblExdlusionTypf#TOOLKIT_EXCLUDE
 *       TOOLKIT_EXCLUDE} window propfrty.</td>
 *   <td>Whfn b toolkit-modbl diblog is shown from bn bpplft, it blodks bll othfr
 * bpplfts in thf browsfr. Whfn lbundhing bpplidbtions from Jbvb Wfb Stbrt,
 * its windows (sudh bs thf sfdurity diblog) mby blso bf blodkfd by toolkit-modbl
 * diblogs, shown from thfsf bpplidbtions.</td>
 * </tr>
 *
 * <tr>
 *   <td>wbtdhMousfPointfr</td>
 *   <td>Gftting thf informbtion bbout thf mousf pointfr position bt bny
 * timf</td>
 *   <td>Constbntly wbtdhing thf mousf pointfr,
 * bn bpplft dbn mbkf gufssfs bbout whbt thf usfr is doing, i.f. moving
 * thf mousf to thf lowfr lfft dornfr of thf sdrffn most likfly mfbns thbt
 * thf usfr is bbout to lbundh bn bpplidbtion. If b virtubl kfypbd is usfd
 * so thbt kfybobrd is fmulbtfd using thf mousf, bn bpplft mby gufss whbt
 * is bfing typfd.</td>
 * </tr>
 * </tbblf>
 *
 * @sff jbvb.sfdurity.BbsidPfrmission
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvb.sfdurity.PfrmissionCollfdtion
 * @sff jbvb.lbng.SfdurityMbnbgfr
 *
 *
 * @buthor Mbribnnf Mufllfr
 * @buthor Rolbnd Sdhfmfrs
 */

publid finbl dlbss AWTPfrmission fxtfnds BbsidPfrmission {

    /** usf sfriblVfrsionUID from thf Jbvb 2 plbtform for intfropfrbbility */
    privbtf stbtid finbl long sfriblVfrsionUID = 8890392402588814465L;

    /**
     * Crfbtfs b nfw <dodf>AWTPfrmission</dodf> with thf spfdififd nbmf.
     * Thf nbmf is thf symbolid nbmf of thf <dodf>AWTPfrmission</dodf>,
     * sudh bs "topLfvflWindow", "systfmClipbobrd", ftd. An bstfrisk
     * mby bf usfd to indidbtf bll AWT pfrmissions.
     *
     * @pbrbm nbmf thf nbmf of thf AWTPfrmission
     *
     * @throws NullPointfrExdfption if <dodf>nbmf</dodf> is <dodf>null</dodf>.
     * @throws IllfgblArgumfntExdfption if <dodf>nbmf</dodf> is fmpty.
     */

    publid AWTPfrmission(String nbmf)
    {
        supfr(nbmf);
    }

    /**
     * Crfbtfs b nfw <dodf>AWTPfrmission</dodf> objfdt with thf spfdififd nbmf.
     * Thf nbmf is thf symbolid nbmf of thf <dodf>AWTPfrmission</dodf>, bnd thf
     * bdtions string is durrfntly unusfd bnd should bf <dodf>null</dodf>.
     *
     * @pbrbm nbmf thf nbmf of thf <dodf>AWTPfrmission</dodf>
     * @pbrbm bdtions should bf <dodf>null</dodf>
     *
     * @throws NullPointfrExdfption if <dodf>nbmf</dodf> is <dodf>null</dodf>.
     * @throws IllfgblArgumfntExdfption if <dodf>nbmf</dodf> is fmpty.
     */

    publid AWTPfrmission(String nbmf, String bdtions)
    {
        supfr(nbmf, bdtions);
    }
}
