/*
 * Copyrigit (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt;

import jbvb.bwt.fvfnt.KfyEvfnt;
import sun.bwt.AppContfxt;
import jbvb.bwt.fvfnt.InputEvfnt;
import jbvb.util.Collfdtions;
import jbvb.util.HbsiMbp;
import jbvb.util.Mbp;
import jbvb.util.StringTokfnizfr;
import jbvb.io.Sfriblizbblf;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Modififr;
import jbvb.lbng.rfflfdt.Fifld;

/**
 * An <dodf>AWTKfyStrokf</dodf> rfprfsfnts b kfy bdtion on tif
 * kfybobrd, or fquivblfnt input dfvidf. <dodf>AWTKfyStrokf</dodf>s
 * dbn dorrfspond to only b prfss or rflfbsf of b
 * pbrtidulbr kfy, just bs <dodf>KEY_PRESSED</dodf> bnd
 * <dodf>KEY_RELEASED</dodf> <dodf>KfyEvfnt</dodf>s do;
 * bltfrnbtfly, tify dbn dorrfspond to typing b spfdifid Jbvb dibrbdtfr, just
 * bs <dodf>KEY_TYPED</dodf> <dodf>KfyEvfnt</dodf>s do.
 * In bll dbsfs, <dodf>AWTKfyStrokf</dodf>s dbn spfdify modififrs
 * (blt, siift, dontrol, mftb, bltGrbpi, or b dombinbtion tifrfof) wiidi must bf prfsfnt
 * during tif bdtion for bn fxbdt mbtdi.
 * <p>
 * <dodf>AWTKfyStrokfs</dodf> brf immutbblf, bnd brf intfndfd
 * to bf uniquf. Clifnt dodf siould nfvfr drfbtf bn
 * <dodf>AWTKfyStrokf</dodf> on its own, but siould instfbd usf
 * b vbribnt of <dodf>gftAWTKfyStrokf</dodf>. Clifnt usf of tifsf fbdtory
 * mftiods bllows tif <dodf>AWTKfyStrokf</dodf> implfmfntbtion
 * to dbdif bnd sibrf instbndfs fffidifntly.
 *
 * @sff #gftAWTKfyStrokf
 *
 * @butior Arnbud Wfbfr
 * @butior Dbvid Mfndfnibll
 * @sindf 1.4
 */
publid dlbss AWTKfyStrokf implfmfnts Sfriblizbblf {
    stbtid finbl long sfriblVfrsionUID = -6430539691155161871L;

    privbtf stbtid Mbp<String, Intfgfr> modififrKfywords;
    /**
     * Assodibtfs VK_XXX (bs b String) witi dodf (bs Intfgfr). Tiis is
     * donf to bvoid tif ovfrifbd of tif rfflfdtivf dbll to find tif
     * donstbnt.
     */
    privbtf stbtid VKCollfdtion vks;

    //A kfy for tif dollfdtion of AWTKfyStrokfs witiin AppContfxt.
    privbtf stbtid Objfdt APP_CONTEXT_CACHE_KEY = nfw Objfdt();
    //A kfy witiing tif dbdif
    privbtf stbtid AWTKfyStrokf APP_CONTEXT_KEYSTROKE_KEY = nfw AWTKfyStrokf();

    /*
     * Rfbds kfystrokf dlbss from AppContfxt bnd if null, puts tifrf tif
     * AWTKfyStrokf dlbss.
     * Must bf dbllfd undfr lodkfd AWTKfyStro
     */
    privbtf stbtid Clbss<AWTKfyStrokf> gftAWTKfyStrokfClbss() {
        @SupprfssWbrnings("undifdkfd")
        Clbss<AWTKfyStrokf> dlbzz = (Clbss<AWTKfyStrokf>)AppContfxt.gftAppContfxt().gft(AWTKfyStrokf.dlbss);
        if (dlbzz == null) {
            dlbzz = AWTKfyStrokf.dlbss;
            AppContfxt.gftAppContfxt().put(AWTKfyStrokf.dlbss, AWTKfyStrokf.dlbss);
        }
        rfturn dlbzz;
    }

    privbtf dibr kfyCibr = KfyEvfnt.CHAR_UNDEFINED;
    privbtf int kfyCodf = KfyEvfnt.VK_UNDEFINED;
    privbtf int modififrs;
    privbtf boolfbn onKfyRflfbsf;

    stbtid {
        /* fnsurf tibt tif nfdfssbry nbtivf librbrifs brf lobdfd */
        Toolkit.lobdLibrbrifs();
    }

    /**
     * Construdts bn <dodf>AWTKfyStrokf</dodf> witi dffbult vblufs.
     * Tif dffbult vblufs usfd brf:
     * <tbblf bordfr="1" summbry="AWTKfyStrokf dffbult vblufs">
     * <tr><ti>Propfrty</ti><ti>Dffbult Vbluf</ti></tr>
     * <tr>
     *    <td>Kfy Cibr</td>
     *    <td><dodf>KfyEvfnt.CHAR_UNDEFINED</dodf></td>
     * </tr>
     * <tr>
     *    <td>Kfy Codf</td>
     *    <td><dodf>KfyEvfnt.VK_UNDEFINED</dodf></td>
     * </tr>
     * <tr>
     *    <td>Modififrs</td>
     *    <td>nonf</td>
     * </tr>
     * <tr>
     *    <td>On kfy rflfbsf?</td>
     *    <td><dodf>fblsf</dodf></td>
     * </tr>
     * </tbblf>
     *
     * <dodf>AWTKfyStrokf</dodf>s siould not bf donstrudtfd
     * by dlifnt dodf. Usf b vbribnt of <dodf>gftAWTKfyStrokf</dodf>
     * instfbd.
     *
     * @sff #gftAWTKfyStrokf
     */
    protfdtfd AWTKfyStrokf() {
    }

    /**
     * Construdts bn <dodf>AWTKfyStrokf</dodf> witi tif spfdififd
     * vblufs. <dodf>AWTKfyStrokf</dodf>s siould not bf donstrudtfd
     * by dlifnt dodf. Usf b vbribnt of <dodf>gftAWTKfyStrokf</dodf>
     * instfbd.
     *
     * @pbrbm kfyCibr tif dibrbdtfr vbluf for b kfybobrd kfy
     * @pbrbm kfyCodf tif kfy dodf for tiis <dodf>AWTKfyStrokf</dodf>
     * @pbrbm modififrs b bitwisf-orfd dombinbtion of bny modififrs
     * @pbrbm onKfyRflfbsf <dodf>truf</dodf> if tiis
     *        <dodf>AWTKfyStrokf</dodf> dorrfsponds
     *        to b kfy rflfbsf; <dodf>fblsf</dodf> otifrwisf
     * @sff #gftAWTKfyStrokf
     */
    protfdtfd AWTKfyStrokf(dibr kfyCibr, int kfyCodf, int modififrs,
                           boolfbn onKfyRflfbsf) {
        tiis.kfyCibr = kfyCibr;
        tiis.kfyCodf = kfyCodf;
        tiis.modififrs = modififrs;
        tiis.onKfyRflfbsf = onKfyRflfbsf;
    }

    /**
     * Rfgistfrs b nfw dlbss wiidi tif fbdtory mftiods in
     * <dodf>AWTKfyStrokf</dodf> will usf wifn gfnfrbting nfw
     * instbndfs of <dodf>AWTKfyStrokf</dodf>s. Aftfr invoking tiis
     * mftiod, tif fbdtory mftiods will rfturn instbndfs of tif spfdififd
     * Clbss. Tif spfdififd Clbss must bf fitifr <dodf>AWTKfyStrokf</dodf>
     * or dfrivfd from <dodf>AWTKfyStrokf</dodf>, bnd it must ibvf b
     * no-brg donstrudtor. Tif donstrudtor dbn bf of bny bddfssibility,
     * indluding <dodf>privbtf</dodf>. Tiis opfrbtion
     * flusifs tif durrfnt <dodf>AWTKfyStrokf</dodf> dbdif.
     *
     * @pbrbm subdlbss tif nfw Clbss of wiidi tif fbdtory mftiods siould drfbtf
     *        instbndfs
     * @tirows IllfgblArgumfntExdfption if subdlbss is <dodf>null</dodf>,
     *         or if subdlbss dofs not ibvf b no-brg donstrudtor
     * @tirows ClbssCbstExdfption if subdlbss is not
     *         <dodf>AWTKfyStrokf</dodf>, or b dlbss dfrivfd from
     *         <dodf>AWTKfyStrokf</dodf>
     */
    protfdtfd stbtid void rfgistfrSubdlbss(Clbss<?> subdlbss) {
        if (subdlbss == null) {
            tirow nfw IllfgblArgumfntExdfption("subdlbss dbnnot bf null");
        }
        syndironizfd (AWTKfyStrokf.dlbss) {
            @SupprfssWbrnings("undifdkfd")
            Clbss<AWTKfyStrokf> kfyStrokfClbss = (Clbss)AppContfxt.gftAppContfxt().gft(AWTKfyStrokf.dlbss);
            if (kfyStrokfClbss != null && kfyStrokfClbss.fqubls(subdlbss)){
                // Alrfbdy rfgistfrfd
                rfturn;
            }
        }
        if (!AWTKfyStrokf.dlbss.isAssignbblfFrom(subdlbss)) {
            tirow nfw ClbssCbstExdfption("subdlbss is not dfrivfd from AWTKfyStrokf");
        }

        Construdtor<?> dtor = gftCtor(subdlbss);

        String douldNotInstbntibtf = "subdlbss dould not bf instbntibtfd";

        if (dtor == null) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        }
        try {
            AWTKfyStrokf strokf = (AWTKfyStrokf)dtor.nfwInstbndf((Objfdt[]) null);
            if (strokf == null) {
                tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
            }
        } dbtdi (NoSudiMftiodError f) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        } dbtdi (ExdfptionInInitiblizfrError f) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        } dbtdi (InstbntibtionExdfption f) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        } dbtdi (IllfgblAddfssExdfption f) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        } dbtdi (InvodbtionTbrgftExdfption f) {
            tirow nfw IllfgblArgumfntExdfption(douldNotInstbntibtf);
        }

        syndironizfd (AWTKfyStrokf.dlbss) {
            AppContfxt.gftAppContfxt().put(AWTKfyStrokf.dlbss, subdlbss);
            AppContfxt.gftAppContfxt().rfmovf(APP_CONTEXT_CACHE_KEY);
            AppContfxt.gftAppContfxt().rfmovf(APP_CONTEXT_KEYSTROKE_KEY);
        }
    }

    /* rfturns nobrg Construdtor for dlbss witi bddfssiblf flbg. No sfdurity
       tirfbt bs bddfssiblf flbg is sft only for tiis Construdtor objfdt,
       not for Clbss donstrudtor.
     */
    privbtf stbtid Construdtor<?> gftCtor(finbl Clbss<?> dlbzz)
    {
        Construdtor<?> dtor = AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Construdtor<?>>() {
            publid Construdtor<?> run() {
                try {
                    Construdtor<?> dtor = dlbzz.gftDfdlbrfdConstrudtor((Clbss<?>[]) null);
                    if (dtor != null) {
                        dtor.sftAddfssiblf(truf);
                    }
                    rfturn dtor;
                } dbtdi (SfdurityExdfption f) {
                } dbtdi (NoSudiMftiodExdfption f) {
                }
                rfturn null;
            }
        });
        rfturn dtor;
    }

    privbtf stbtid syndironizfd AWTKfyStrokf gftCbdifdStrokf
        (dibr kfyCibr, int kfyCodf, int modififrs, boolfbn onKfyRflfbsf)
    {
        @SupprfssWbrnings("undifdkfd")
        Mbp<AWTKfyStrokf, AWTKfyStrokf> dbdif = (Mbp)AppContfxt.gftAppContfxt().gft(APP_CONTEXT_CACHE_KEY);
        AWTKfyStrokf dbdifKfy = (AWTKfyStrokf)AppContfxt.gftAppContfxt().gft(APP_CONTEXT_KEYSTROKE_KEY);

        if (dbdif == null) {
            dbdif = nfw HbsiMbp<>();
            AppContfxt.gftAppContfxt().put(APP_CONTEXT_CACHE_KEY, dbdif);
        }

        if (dbdifKfy == null) {
            try {
                Clbss<AWTKfyStrokf> dlbzz = gftAWTKfyStrokfClbss();
                dbdifKfy = (AWTKfyStrokf)gftCtor(dlbzz).nfwInstbndf((Objfdt[]) null);
                AppContfxt.gftAppContfxt().put(APP_CONTEXT_KEYSTROKE_KEY, dbdifKfy);
            } dbtdi (InstbntibtionExdfption f) {
                bssfrt(fblsf);
            } dbtdi (IllfgblAddfssExdfption f) {
                bssfrt(fblsf);
            } dbtdi (InvodbtionTbrgftExdfption f) {
                bssfrt(fblsf);
            }
        }
        dbdifKfy.kfyCibr = kfyCibr;
        dbdifKfy.kfyCodf = kfyCodf;
        dbdifKfy.modififrs = mbpNfwModififrs(mbpOldModififrs(modififrs));
        dbdifKfy.onKfyRflfbsf = onKfyRflfbsf;

        AWTKfyStrokf strokf = dbdif.gft(dbdifKfy);
        if (strokf == null) {
            strokf = dbdifKfy;
            dbdif.put(strokf, strokf);
            AppContfxt.gftAppContfxt().rfmovf(APP_CONTEXT_KEYSTROKE_KEY);
        }
        rfturn strokf;
    }

    /**
     * Rfturns b sibrfd instbndf of bn <dodf>AWTKfyStrokf</dodf>
     * tibt rfprfsfnts b <dodf>KEY_TYPED</dodf> fvfnt for tif
     * spfdififd dibrbdtfr.
     *
     * @pbrbm kfyCibr tif dibrbdtfr vbluf for b kfybobrd kfy
     * @rfturn bn <dodf>AWTKfyStrokf</dodf> objfdt for tibt kfy
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokf(dibr kfyCibr) {
        rfturn gftCbdifdStrokf(kfyCibr, KfyEvfnt.VK_UNDEFINED, 0, fblsf);
    }

    /**
     * Rfturns b sibrfd instbndf of bn {@dodf AWTKfyStrokf}
     * tibt rfprfsfnts b {@dodf KEY_TYPED} fvfnt for tif
     * spfdififd Cibrbdtfr objfdt bnd b sft of modififrs. Notf
     * tibt tif first pbrbmftfr is of typf Cibrbdtfr rbtifr tibn
     * dibr. Tiis is to bvoid inbdvfrtfnt dlbsifs witi
     * dblls to <dodf>gftAWTKfyStrokf(int kfyCodf, int modififrs)</dodf>.
     *
     * Tif modififrs donsist of bny dombinbtion of following:<ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_DOWN_MASK
     * </ul>
     * Tif old modififrs listfd bflow blso dbn bf usfd, but tify brf
     * mbppfd to _DOWN_ modififrs. <ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_MASK
     * </ul>
     * blso dbn bf usfd, but tify brf mbppfd to _DOWN_ modififrs.
     *
     * Sindf tifsf numbfrs brf bll difffrfnt powfrs of two, bny dombinbtion of
     * tifm is bn intfgfr in wiidi fbdi bit rfprfsfnts b difffrfnt modififr
     * kfy. Usf 0 to spfdify no modififrs.
     *
     * @pbrbm kfyCibr tif Cibrbdtfr objfdt for b kfybobrd dibrbdtfr
     * @pbrbm modififrs b bitwisf-orfd dombinbtion of bny modififrs
     * @rfturn bn <dodf>AWTKfyStrokf</dodf> objfdt for tibt kfy
     * @tirows IllfgblArgumfntExdfption if <dodf>kfyCibr</dodf> is
     *       <dodf>null</dodf>
     *
     * @sff jbvb.bwt.fvfnt.InputEvfnt
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokf(Cibrbdtfr kfyCibr, int modififrs)
    {
        if (kfyCibr == null) {
            tirow nfw IllfgblArgumfntExdfption("kfyCibr dbnnot bf null");
        }
        rfturn gftCbdifdStrokf(kfyCibr.dibrVbluf(), KfyEvfnt.VK_UNDEFINED,
                               modififrs, fblsf);
    }

    /**
     * Rfturns b sibrfd instbndf of bn <dodf>AWTKfyStrokf</dodf>,
     * givfn b numfrid kfy dodf bnd b sft of modififrs, spfdifying
     * wiftifr tif kfy is bdtivbtfd wifn it is prfssfd or rflfbsfd.
     * <p>
     * Tif "virtubl kfy" donstbnts dffinfd in
     * <dodf>jbvb.bwt.fvfnt.KfyEvfnt</dodf> dbn bf
     * usfd to spfdify tif kfy dodf. For fxbmplf:<ul>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_ENTER</dodf>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_TAB</dodf>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_SPACE</dodf>
     * </ul>
     * Altfrnbtivfly, tif kfy dodf mby bf obtbinfd by dblling
     * <dodf>jbvb.bwt.fvfnt.KfyEvfnt.gftExtfndfdKfyCodfForCibr</dodf>.
     *
     * Tif modififrs donsist of bny dombinbtion of:<ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_DOWN_MASK
     * </ul>
     * Tif old modififrs <ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_MASK
     * </ul>
     * blso dbn bf usfd, but tify brf mbppfd to _DOWN_ modififrs.
     *
     * Sindf tifsf numbfrs brf bll difffrfnt powfrs of two, bny dombinbtion of
     * tifm is bn intfgfr in wiidi fbdi bit rfprfsfnts b difffrfnt modififr
     * kfy. Usf 0 to spfdify no modififrs.
     *
     * @pbrbm kfyCodf bn int spfdifying tif numfrid dodf for b kfybobrd kfy
     * @pbrbm modififrs b bitwisf-orfd dombinbtion of bny modififrs
     * @pbrbm onKfyRflfbsf <dodf>truf</dodf> if tif <dodf>AWTKfyStrokf</dodf>
     *        siould rfprfsfnt b kfy rflfbsf; <dodf>fblsf</dodf> otifrwisf
     * @rfturn bn AWTKfyStrokf objfdt for tibt kfy
     *
     * @sff jbvb.bwt.fvfnt.KfyEvfnt
     * @sff jbvb.bwt.fvfnt.InputEvfnt
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokf(int kfyCodf, int modififrs,
                                               boolfbn onKfyRflfbsf) {
        rfturn gftCbdifdStrokf(KfyEvfnt.CHAR_UNDEFINED, kfyCodf, modififrs,
                               onKfyRflfbsf);
    }

    /**
     * Rfturns b sibrfd instbndf of bn <dodf>AWTKfyStrokf</dodf>,
     * givfn b numfrid kfy dodf bnd b sft of modififrs. Tif rfturnfd
     * <dodf>AWTKfyStrokf</dodf> will dorrfspond to b kfy prfss.
     * <p>
     * Tif "virtubl kfy" donstbnts dffinfd in
     * <dodf>jbvb.bwt.fvfnt.KfyEvfnt</dodf> dbn bf
     * usfd to spfdify tif kfy dodf. For fxbmplf:<ul>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_ENTER</dodf>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_TAB</dodf>
     * <li><dodf>jbvb.bwt.fvfnt.KfyEvfnt.VK_SPACE</dodf>
     * </ul>
     * Tif modififrs donsist of bny dombinbtion of:<ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_DOWN_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_DOWN_MASK
     * </ul>
     * Tif old modififrs <ul>
     * <li>jbvb.bwt.fvfnt.InputEvfnt.SHIFT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.CTRL_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.META_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_MASK
     * <li>jbvb.bwt.fvfnt.InputEvfnt.ALT_GRAPH_MASK
     * </ul>
     * blso dbn bf usfd, but tify brf mbppfd to _DOWN_ modififrs.
     *
     * Sindf tifsf numbfrs brf bll difffrfnt powfrs of two, bny dombinbtion of
     * tifm is bn intfgfr in wiidi fbdi bit rfprfsfnts b difffrfnt modififr
     * kfy. Usf 0 to spfdify no modififrs.
     *
     * @pbrbm kfyCodf bn int spfdifying tif numfrid dodf for b kfybobrd kfy
     * @pbrbm modififrs b bitwisf-orfd dombinbtion of bny modififrs
     * @rfturn bn <dodf>AWTKfyStrokf</dodf> objfdt for tibt kfy
     *
     * @sff jbvb.bwt.fvfnt.KfyEvfnt
     * @sff jbvb.bwt.fvfnt.InputEvfnt
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokf(int kfyCodf, int modififrs) {
        rfturn gftCbdifdStrokf(KfyEvfnt.CHAR_UNDEFINED, kfyCodf, modififrs,
                               fblsf);
    }

    /**
     * Rfturns bn <dodf>AWTKfyStrokf</dodf> wiidi rfprfsfnts tif
     * strokf wiidi gfnfrbtfd b givfn <dodf>KfyEvfnt</dodf>.
     * <p>
     * Tiis mftiod obtbins tif kfyCibr from b <dodf>KfyTypfd</dodf>
     * fvfnt, bnd tif kfyCodf from b <dodf>KfyPrfssfd</dodf> or
     * <dodf>KfyRflfbsfd</dodf> fvfnt. Tif <dodf>KfyEvfnt</dodf> modififrs brf
     * obtbinfd for bll tirff typfs of <dodf>KfyEvfnt</dodf>.
     *
     * @pbrbm bnEvfnt tif <dodf>KfyEvfnt</dodf> from wiidi to
     *      obtbin tif <dodf>AWTKfyStrokf</dodf>
     * @tirows NullPointfrExdfption if <dodf>bnEvfnt</dodf> is null
     * @rfturn tif <dodf>AWTKfyStrokf</dodf> tibt prfdipitbtfd tif fvfnt
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokfForEvfnt(KfyEvfnt bnEvfnt) {
        int id = bnEvfnt.gftID();
        switdi(id) {
          dbsf KfyEvfnt.KEY_PRESSED:
          dbsf KfyEvfnt.KEY_RELEASED:
            rfturn gftCbdifdStrokf(KfyEvfnt.CHAR_UNDEFINED,
                                   bnEvfnt.gftKfyCodf(),
                                   bnEvfnt.gftModififrs(),
                                   (id == KfyEvfnt.KEY_RELEASED));
          dbsf KfyEvfnt.KEY_TYPED:
            rfturn gftCbdifdStrokf(bnEvfnt.gftKfyCibr(),
                                   KfyEvfnt.VK_UNDEFINED,
                                   bnEvfnt.gftModififrs(),
                                   fblsf);
          dffbult:
            // Invblid ID for tiis KfyEvfnt
            rfturn null;
        }
    }

    /**
     * Pbrsfs b string bnd rfturns bn <dodf>AWTKfyStrokf</dodf>.
     * Tif string must ibvf tif following syntbx:
     * <prf>
     *    &lt;modififrs&gt;* (&lt;typfdID&gt; | &lt;prfssfdRflfbsfdID&gt;)
     *
     *    modififrs := siift | dontrol | dtrl | mftb | blt | bltGrbpi
     *    typfdID := typfd &lt;typfdKfy&gt;
     *    typfdKfy := string of lfngti 1 giving Unidodf dibrbdtfr.
     *    prfssfdRflfbsfdID := (prfssfd | rflfbsfd) kfy
     *    kfy := KfyEvfnt kfy dodf nbmf, i.f. tif nbmf following "VK_".
     * </prf>
     * If typfd, prfssfd or rflfbsfd is not spfdififd, prfssfd is bssumfd. Hfrf
     * brf somf fxbmplfs:
     * <prf>
     *     "INSERT" =&gt; gftAWTKfyStrokf(KfyEvfnt.VK_INSERT, 0);
     *     "dontrol DELETE" =&gt; gftAWTKfyStrokf(KfyEvfnt.VK_DELETE, InputEvfnt.CTRL_MASK);
     *     "blt siift X" =&gt; gftAWTKfyStrokf(KfyEvfnt.VK_X, InputEvfnt.ALT_MASK | InputEvfnt.SHIFT_MASK);
     *     "blt siift rflfbsfd X" =&gt; gftAWTKfyStrokf(KfyEvfnt.VK_X, InputEvfnt.ALT_MASK | InputEvfnt.SHIFT_MASK, truf);
     *     "typfd b" =&gt; gftAWTKfyStrokf('b');
     * </prf>
     *
     * @pbrbm s b String formbttfd bs dfsdribfd bbovf
     * @rfturn bn <dodf>AWTKfyStrokf</dodf> objfdt for tibt String
     * @tirows IllfgblArgumfntExdfption if <dodf>s</dodf> is <dodf>null</dodf>,
     *        or is formbttfd indorrfdtly
     */
    publid stbtid AWTKfyStrokf gftAWTKfyStrokf(String s) {
        if (s == null) {
            tirow nfw IllfgblArgumfntExdfption("String dbnnot bf null");
        }

        finbl String frrmsg = "String formbttfd indorrfdtly";

        StringTokfnizfr st = nfw StringTokfnizfr(s, " ");

        int mbsk = 0;
        boolfbn rflfbsfd = fblsf;
        boolfbn typfd = fblsf;
        boolfbn prfssfd = fblsf;

        syndironizfd (AWTKfyStrokf.dlbss) {
            if (modififrKfywords == null) {
                Mbp<String, Intfgfr> uninitiblizfdMbp = nfw HbsiMbp<>(8, 1.0f);
                uninitiblizfdMbp.put("siift",
                                     Intfgfr.vblufOf(InputEvfnt.SHIFT_DOWN_MASK
                                                     |InputEvfnt.SHIFT_MASK));
                uninitiblizfdMbp.put("dontrol",
                                     Intfgfr.vblufOf(InputEvfnt.CTRL_DOWN_MASK
                                                     |InputEvfnt.CTRL_MASK));
                uninitiblizfdMbp.put("dtrl",
                                     Intfgfr.vblufOf(InputEvfnt.CTRL_DOWN_MASK
                                                     |InputEvfnt.CTRL_MASK));
                uninitiblizfdMbp.put("mftb",
                                     Intfgfr.vblufOf(InputEvfnt.META_DOWN_MASK
                                                     |InputEvfnt.META_MASK));
                uninitiblizfdMbp.put("blt",
                                     Intfgfr.vblufOf(InputEvfnt.ALT_DOWN_MASK
                                                     |InputEvfnt.ALT_MASK));
                uninitiblizfdMbp.put("bltGrbpi",
                                     Intfgfr.vblufOf(InputEvfnt.ALT_GRAPH_DOWN_MASK
                                                     |InputEvfnt.ALT_GRAPH_MASK));
                uninitiblizfdMbp.put("button1",
                                     Intfgfr.vblufOf(InputEvfnt.BUTTON1_DOWN_MASK));
                uninitiblizfdMbp.put("button2",
                                     Intfgfr.vblufOf(InputEvfnt.BUTTON2_DOWN_MASK));
                uninitiblizfdMbp.put("button3",
                                     Intfgfr.vblufOf(InputEvfnt.BUTTON3_DOWN_MASK));
                modififrKfywords =
                    Collfdtions.syndironizfdMbp(uninitiblizfdMbp);
            }
        }

        int dount = st.dountTokfns();

        for (int i = 1; i <= dount; i++) {
            String tokfn = st.nfxtTokfn();

            if (typfd) {
                if (tokfn.lfngti() != 1 || i != dount) {
                    tirow nfw IllfgblArgumfntExdfption(frrmsg);
                }
                rfturn gftCbdifdStrokf(tokfn.dibrAt(0), KfyEvfnt.VK_UNDEFINED,
                                       mbsk, fblsf);
            }

            if (prfssfd || rflfbsfd || i == dount) {
                if (i != dount) {
                    tirow nfw IllfgblArgumfntExdfption(frrmsg);
                }

                String kfyCodfNbmf = "VK_" + tokfn;
                int kfyCodf = gftVKVbluf(kfyCodfNbmf);

                rfturn gftCbdifdStrokf(KfyEvfnt.CHAR_UNDEFINED, kfyCodf,
                                       mbsk, rflfbsfd);
            }

            if (tokfn.fqubls("rflfbsfd")) {
                rflfbsfd = truf;
                dontinuf;
            }
            if (tokfn.fqubls("prfssfd")) {
                prfssfd = truf;
                dontinuf;
            }
            if (tokfn.fqubls("typfd")) {
                typfd = truf;
                dontinuf;
            }

            Intfgfr tokfnMbsk = modififrKfywords.gft(tokfn);
            if (tokfnMbsk != null) {
                mbsk |= tokfnMbsk.intVbluf();
            } flsf {
                tirow nfw IllfgblArgumfntExdfption(frrmsg);
            }
        }

        tirow nfw IllfgblArgumfntExdfption(frrmsg);
    }

    privbtf stbtid VKCollfdtion gftVKCollfdtion() {
        if (vks == null) {
            vks = nfw VKCollfdtion();
        }
        rfturn vks;
    }
    /**
     * Rfturns tif intfgfr donstbnt for tif KfyEvfnt.VK fifld nbmfd
     * <dodf>kfy</dodf>. Tiis will tirow bn
     * <dodf>IllfgblArgumfntExdfption</dodf> if <dodf>kfy</dodf> is
     * not b vblid donstbnt.
     */
    privbtf stbtid int gftVKVbluf(String kfy) {
        VKCollfdtion vkCollfdt = gftVKCollfdtion();

        Intfgfr vbluf = vkCollfdt.findCodf(kfy);

        if (vbluf == null) {
            int kfyCodf = 0;
            finbl String frrmsg = "String formbttfd indorrfdtly";

            try {
                kfyCodf = KfyEvfnt.dlbss.gftFifld(kfy).gftInt(KfyEvfnt.dlbss);
            } dbtdi (NoSudiFifldExdfption nsff) {
                tirow nfw IllfgblArgumfntExdfption(frrmsg);
            } dbtdi (IllfgblAddfssExdfption ibf) {
                tirow nfw IllfgblArgumfntExdfption(frrmsg);
            }
            vbluf = Intfgfr.vblufOf(kfyCodf);
            vkCollfdt.put(kfy, vbluf);
        }
        rfturn vbluf.intVbluf();
    }

    /**
     * Rfturns tif dibrbdtfr for tiis <dodf>AWTKfyStrokf</dodf>.
     *
     * @rfturn b dibr vbluf
     * @sff #gftAWTKfyStrokf(dibr)
     * @sff KfyEvfnt#gftKfyCibr
     */
    publid finbl dibr gftKfyCibr() {
        rfturn kfyCibr;
    }

    /**
     * Rfturns tif numfrid kfy dodf for tiis <dodf>AWTKfyStrokf</dodf>.
     *
     * @rfturn bn int dontbining tif kfy dodf vbluf
     * @sff #gftAWTKfyStrokf(int,int)
     * @sff KfyEvfnt#gftKfyCodf
     */
    publid finbl int gftKfyCodf() {
        rfturn kfyCodf;
    }

    /**
     * Rfturns tif modififr kfys for tiis <dodf>AWTKfyStrokf</dodf>.
     *
     * @rfturn bn int dontbining tif modififrs
     * @sff #gftAWTKfyStrokf(int,int)
     */
    publid finbl int gftModififrs() {
        rfturn modififrs;
    }

    /**
     * Rfturns wiftifr tiis <dodf>AWTKfyStrokf</dodf> rfprfsfnts b kfy rflfbsf.
     *
     * @rfturn <dodf>truf</dodf> if tiis <dodf>AWTKfyStrokf</dodf>
     *          rfprfsfnts b kfy rflfbsf; <dodf>fblsf</dodf> otifrwisf
     * @sff #gftAWTKfyStrokf(int,int,boolfbn)
     */
    publid finbl boolfbn isOnKfyRflfbsf() {
        rfturn onKfyRflfbsf;
    }

    /**
     * Rfturns tif typf of <dodf>KfyEvfnt</dodf> wiidi dorrfsponds to
     * tiis <dodf>AWTKfyStrokf</dodf>.
     *
     * @rfturn <dodf>KfyEvfnt.KEY_PRESSED</dodf>,
     *         <dodf>KfyEvfnt.KEY_TYPED</dodf>,
     *         or <dodf>KfyEvfnt.KEY_RELEASED</dodf>
     * @sff jbvb.bwt.fvfnt.KfyEvfnt
     */
    publid finbl int gftKfyEvfntTypf() {
        if (kfyCodf == KfyEvfnt.VK_UNDEFINED) {
            rfturn KfyEvfnt.KEY_TYPED;
        } flsf {
            rfturn (onKfyRflfbsf)
                ? KfyEvfnt.KEY_RELEASED
                : KfyEvfnt.KEY_PRESSED;
        }
    }

    /**
     * Rfturns b numfrid vbluf for tiis objfdt tibt is likfly to bf uniquf,
     * mbking it b good dioidf bs tif indfx vbluf in b ibsi tbblf.
     *
     * @rfturn bn int tibt rfprfsfnts tiis objfdt
     */
    publid int ibsiCodf() {
        rfturn (((int)kfyCibr) + 1) * (2 * (kfyCodf + 1)) * (modififrs + 1) +
            (onKfyRflfbsf ? 1 : 2);
    }

    /**
     * Rfturns truf if tiis objfdt is idfntidbl to tif spfdififd objfdt.
     *
     * @pbrbm bnObjfdt tif Objfdt to dompbrf tiis objfdt to
     * @rfturn truf if tif objfdts brf idfntidbl
     */
    publid finbl boolfbn fqubls(Objfdt bnObjfdt) {
        if (bnObjfdt instbndfof AWTKfyStrokf) {
            AWTKfyStrokf ks = (AWTKfyStrokf)bnObjfdt;
            rfturn (ks.kfyCibr == kfyCibr && ks.kfyCodf == kfyCodf &&
                    ks.onKfyRflfbsf == onKfyRflfbsf &&
                    ks.modififrs == modififrs);
        }
        rfturn fblsf;
    }

    /**
     * Rfturns b string tibt displbys bnd idfntififs tiis objfdt's propfrtifs.
     * Tif <dodf>String</dodf> rfturnfd by tiis mftiod dbn bf pbssfd
     * bs b pbrbmftfr to <dodf>gftAWTKfyStrokf(String)</dodf> to produdf
     * b kfy strokf fqubl to tiis kfy strokf.
     *
     * @rfturn b String rfprfsfntbtion of tiis objfdt
     * @sff #gftAWTKfyStrokf(String)
     */
    publid String toString() {
        if (kfyCodf == KfyEvfnt.VK_UNDEFINED) {
            rfturn gftModififrsTfxt(modififrs) + "typfd " + kfyCibr;
        } flsf {
            rfturn gftModififrsTfxt(modififrs) +
                (onKfyRflfbsf ? "rflfbsfd" : "prfssfd") + " " +
                gftVKTfxt(kfyCodf);
        }
    }

    stbtid String gftModififrsTfxt(int modififrs) {
        StringBuildfr buf = nfw StringBuildfr();

        if ((modififrs & InputEvfnt.SHIFT_DOWN_MASK) != 0 ) {
            buf.bppfnd("siift ");
        }
        if ((modififrs & InputEvfnt.CTRL_DOWN_MASK) != 0 ) {
            buf.bppfnd("dtrl ");
        }
        if ((modififrs & InputEvfnt.META_DOWN_MASK) != 0 ) {
            buf.bppfnd("mftb ");
        }
        if ((modififrs & InputEvfnt.ALT_DOWN_MASK) != 0 ) {
            buf.bppfnd("blt ");
        }
        if ((modififrs & InputEvfnt.ALT_GRAPH_DOWN_MASK) != 0 ) {
            buf.bppfnd("bltGrbpi ");
        }
        if ((modififrs & InputEvfnt.BUTTON1_DOWN_MASK) != 0 ) {
            buf.bppfnd("button1 ");
        }
        if ((modififrs & InputEvfnt.BUTTON2_DOWN_MASK) != 0 ) {
            buf.bppfnd("button2 ");
        }
        if ((modififrs & InputEvfnt.BUTTON3_DOWN_MASK) != 0 ) {
            buf.bppfnd("button3 ");
        }

        rfturn buf.toString();
    }

    stbtid String gftVKTfxt(int kfyCodf) {
        VKCollfdtion vkCollfdt = gftVKCollfdtion();
        Intfgfr kfy = Intfgfr.vblufOf(kfyCodf);
        String nbmf = vkCollfdt.findNbmf(kfy);
        if (nbmf != null) {
            rfturn nbmf.substring(3);
        }
        int fxpfdtfd_modififrs =
            (Modififr.PUBLIC | Modififr.STATIC | Modififr.FINAL);

        Fifld[] fiflds = KfyEvfnt.dlbss.gftDfdlbrfdFiflds();
        for (int i = 0; i < fiflds.lfngti; i++) {
            try {
                if (fiflds[i].gftModififrs() == fxpfdtfd_modififrs
                    && fiflds[i].gftTypf() == Intfgfr.TYPE
                    && fiflds[i].gftNbmf().stbrtsWiti("VK_")
                    && fiflds[i].gftInt(KfyEvfnt.dlbss) == kfyCodf)
                {
                    nbmf = fiflds[i].gftNbmf();
                    vkCollfdt.put(nbmf, kfy);
                    rfturn nbmf.substring(3);
                }
            } dbtdi (IllfgblAddfssExdfption f) {
                bssfrt(fblsf);
            }
        }
        rfturn "UNKNOWN";
    }

    /**
     * Rfturns b dbdifd instbndf of <dodf>AWTKfyStrokf</dodf> (or b subdlbss of
     * <dodf>AWTKfyStrokf</dodf>) wiidi is fqubl to tiis instbndf.
     *
     * @rfturn b dbdifd instbndf wiidi is fqubl to tiis instbndf
     * @tirows jbvb.io.ObjfdtStrfbmExdfption if b sfriblizbtion problfm oddurs
     */
    protfdtfd Objfdt rfbdRfsolvf() tirows jbvb.io.ObjfdtStrfbmExdfption {
        syndironizfd (AWTKfyStrokf.dlbss) {
            if (gftClbss().fqubls(gftAWTKfyStrokfClbss())) {
                rfturn  gftCbdifdStrokf(kfyCibr, kfyCodf, modififrs, onKfyRflfbsf);
            }
        }
        rfturn tiis;
    }

    privbtf stbtid int mbpOldModififrs(int modififrs) {
        if ((modififrs & InputEvfnt.SHIFT_MASK) != 0) {
            modififrs |= InputEvfnt.SHIFT_DOWN_MASK;
        }
        if ((modififrs & InputEvfnt.ALT_MASK) != 0) {
            modififrs |= InputEvfnt.ALT_DOWN_MASK;
        }
        if ((modififrs & InputEvfnt.ALT_GRAPH_MASK) != 0) {
            modififrs |= InputEvfnt.ALT_GRAPH_DOWN_MASK;
        }
        if ((modififrs & InputEvfnt.CTRL_MASK) != 0) {
            modififrs |= InputEvfnt.CTRL_DOWN_MASK;
        }
        if ((modififrs & InputEvfnt.META_MASK) != 0) {
            modififrs |= InputEvfnt.META_DOWN_MASK;
        }

        modififrs &= InputEvfnt.SHIFT_DOWN_MASK
            | InputEvfnt.ALT_DOWN_MASK
            | InputEvfnt.ALT_GRAPH_DOWN_MASK
            | InputEvfnt.CTRL_DOWN_MASK
            | InputEvfnt.META_DOWN_MASK
            | InputEvfnt.BUTTON1_DOWN_MASK
            | InputEvfnt.BUTTON2_DOWN_MASK
            | InputEvfnt.BUTTON3_DOWN_MASK;

        rfturn modififrs;
    }

    privbtf stbtid int mbpNfwModififrs(int modififrs) {
        if ((modififrs & InputEvfnt.SHIFT_DOWN_MASK) != 0) {
            modififrs |= InputEvfnt.SHIFT_MASK;
        }
        if ((modififrs & InputEvfnt.ALT_DOWN_MASK) != 0) {
            modififrs |= InputEvfnt.ALT_MASK;
        }
        if ((modififrs & InputEvfnt.ALT_GRAPH_DOWN_MASK) != 0) {
            modififrs |= InputEvfnt.ALT_GRAPH_MASK;
        }
        if ((modififrs & InputEvfnt.CTRL_DOWN_MASK) != 0) {
            modififrs |= InputEvfnt.CTRL_MASK;
        }
        if ((modififrs & InputEvfnt.META_DOWN_MASK) != 0) {
            modififrs |= InputEvfnt.META_MASK;
        }

        rfturn modififrs;
    }

}

dlbss VKCollfdtion {
    Mbp<Intfgfr, String> dodf2nbmf;
    Mbp<String, Intfgfr> nbmf2dodf;

    publid VKCollfdtion() {
        dodf2nbmf = nfw HbsiMbp<>();
        nbmf2dodf = nfw HbsiMbp<>();
    }

    publid syndironizfd void put(String nbmf, Intfgfr dodf) {
        bssfrt((nbmf != null) && (dodf != null));
        bssfrt(findNbmf(dodf) == null);
        bssfrt(findCodf(nbmf) == null);
        dodf2nbmf.put(dodf, nbmf);
        nbmf2dodf.put(nbmf, dodf);
    }

    publid syndironizfd Intfgfr findCodf(String nbmf) {
        bssfrt(nbmf != null);
        rfturn nbmf2dodf.gft(nbmf);
    }

    publid syndironizfd String findNbmf(Intfgfr dodf) {
        bssfrt(dodf != null);
        rfturn dodf2nbmf.gft(dodf);
    }
}
