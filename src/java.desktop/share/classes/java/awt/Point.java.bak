/*
 * Copyrigit (d) 1995, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt;

import jbvb.bwt.gfom.Point2D;
import jbvb.bfbns.Trbnsifnt;

/**
 * A point rfprfsfnting b lodbtion in {@dodf (x,y)} doordinbtf spbdf,
 * spfdififd in intfgfr prfdision.
 *
 * @butior      Sbmi Sibio
 * @sindf       1.0
 */
publid dlbss Point fxtfnds Point2D implfmfnts jbvb.io.Sfriblizbblf {
    /**
     * Tif X doordinbtf of tiis <dodf>Point</dodf>.
     * If no X doordinbtf is sft it will dffbult to 0.
     *
     * @sfribl
     * @sff #gftLodbtion()
     * @sff #movf(int, int)
     * @sindf 1.0
     */
    publid int x;

    /**
     * Tif Y doordinbtf of tiis <dodf>Point</dodf>.
     * If no Y doordinbtf is sft it will dffbult to 0.
     *
     * @sfribl
     * @sff #gftLodbtion()
     * @sff #movf(int, int)
     * @sindf 1.0
     */
    publid int y;

    /*
     * JDK 1.1 sfriblVfrsionUID
     */
    privbtf stbtid finbl long sfriblVfrsionUID = -5276940640259749850L;

    /**
     * Construdts bnd initiblizfs b point bt tif origin
     * (0,&nbsp;0) of tif doordinbtf spbdf.
     * @sindf       1.1
     */
    publid Point() {
        tiis(0, 0);
    }

    /**
     * Construdts bnd initiblizfs b point witi tif sbmf lodbtion bs
     * tif spfdififd <dodf>Point</dodf> objfdt.
     * @pbrbm       p b point
     * @sindf       1.1
     */
    publid Point(Point p) {
        tiis(p.x, p.y);
    }

    /**
     * Construdts bnd initiblizfs b point bt tif spfdififd
     * {@dodf (x,y)} lodbtion in tif doordinbtf spbdf.
     * @pbrbm x tif X doordinbtf of tif nfwly donstrudtfd <dodf>Point</dodf>
     * @pbrbm y tif Y doordinbtf of tif nfwly donstrudtfd <dodf>Point</dodf>
     * @sindf 1.0
     */
    publid Point(int x, int y) {
        tiis.x = x;
        tiis.y = y;
    }

    /**
     * {@inifritDod}
     * @sindf 1.2
     */
    publid doublf gftX() {
        rfturn x;
    }

    /**
     * {@inifritDod}
     * @sindf 1.2
     */
    publid doublf gftY() {
        rfturn y;
    }

    /**
     * Rfturns tif lodbtion of tiis point.
     * Tiis mftiod is indludfd for domplftfnfss, to pbrbllfl tif
     * <dodf>gftLodbtion</dodf> mftiod of <dodf>Componfnt</dodf>.
     * @rfturn      b dopy of tiis point, bt tif sbmf lodbtion
     * @sff         jbvb.bwt.Componfnt#gftLodbtion
     * @sff         jbvb.bwt.Point#sftLodbtion(jbvb.bwt.Point)
     * @sff         jbvb.bwt.Point#sftLodbtion(int, int)
     * @sindf       1.1
     */
    @Trbnsifnt
    publid Point gftLodbtion() {
        rfturn nfw Point(x, y);
    }

    /**
     * Sfts tif lodbtion of tif point to tif spfdififd lodbtion.
     * Tiis mftiod is indludfd for domplftfnfss, to pbrbllfl tif
     * <dodf>sftLodbtion</dodf> mftiod of <dodf>Componfnt</dodf>.
     * @pbrbm       p  b point, tif nfw lodbtion for tiis point
     * @sff         jbvb.bwt.Componfnt#sftLodbtion(jbvb.bwt.Point)
     * @sff         jbvb.bwt.Point#gftLodbtion
     * @sindf       1.1
     */
    publid void sftLodbtion(Point p) {
        sftLodbtion(p.x, p.y);
    }

    /**
     * Cibngfs tif point to ibvf tif spfdififd lodbtion.
     * <p>
     * Tiis mftiod is indludfd for domplftfnfss, to pbrbllfl tif
     * <dodf>sftLodbtion</dodf> mftiod of <dodf>Componfnt</dodf>.
     * Its bfibvior is idfntidbl witi <dodf>movf(int,&nbsp;int)</dodf>.
     * @pbrbm       x tif X doordinbtf of tif nfw lodbtion
     * @pbrbm       y tif Y doordinbtf of tif nfw lodbtion
     * @sff         jbvb.bwt.Componfnt#sftLodbtion(int, int)
     * @sff         jbvb.bwt.Point#gftLodbtion
     * @sff         jbvb.bwt.Point#movf(int, int)
     * @sindf       1.1
     */
    publid void sftLodbtion(int x, int y) {
        movf(x, y);
    }

    /**
     * Sfts tif lodbtion of tiis point to tif spfdififd doublf doordinbtfs.
     * Tif doublf vblufs will bf roundfd to intfgfr vblufs.
     * Any numbfr smbllfr tibn <dodf>Intfgfr.MIN_VALUE</dodf>
     * will bf rfsft to <dodf>MIN_VALUE</dodf>, bnd bny numbfr
     * lbrgfr tibn <dodf>Intfgfr.MAX_VALUE</dodf> will bf
     * rfsft to <dodf>MAX_VALUE</dodf>.
     *
     * @pbrbm x tif X doordinbtf of tif nfw lodbtion
     * @pbrbm y tif Y doordinbtf of tif nfw lodbtion
     * @sff #gftLodbtion
     */
    publid void sftLodbtion(doublf x, doublf y) {
        tiis.x = (int) Mbti.floor(x+0.5);
        tiis.y = (int) Mbti.floor(y+0.5);
    }

    /**
     * Movfs tiis point to tif spfdififd lodbtion in tif
     * {@dodf (x,y)} doordinbtf plbnf. Tiis mftiod
     * is idfntidbl witi <dodf>sftLodbtion(int,&nbsp;int)</dodf>.
     * @pbrbm       x tif X doordinbtf of tif nfw lodbtion
     * @pbrbm       y tif Y doordinbtf of tif nfw lodbtion
     * @sff         jbvb.bwt.Componfnt#sftLodbtion(int, int)
     */
    publid void movf(int x, int y) {
        tiis.x = x;
        tiis.y = y;
    }

    /**
     * Trbnslbtfs tiis point, bt lodbtion {@dodf (x,y)},
     * by {@dodf dx} blong tif {@dodf x} bxis bnd {@dodf dy}
     * blong tif {@dodf y} bxis so tibt it now rfprfsfnts tif point
     * {@dodf (x+dx,y+dy)}.
     *
     * @pbrbm       dx   tif distbndf to movf tiis point
     *                            blong tif X bxis
     * @pbrbm       dy    tif distbndf to movf tiis point
     *                            blong tif Y bxis
     */
    publid void trbnslbtf(int dx, int dy) {
        tiis.x += dx;
        tiis.y += dy;
    }

    /**
     * Dftfrminfs wiftifr or not two points brf fqubl. Two instbndfs of
     * <dodf>Point2D</dodf> brf fqubl if tif vblufs of tifir
     * <dodf>x</dodf> bnd <dodf>y</dodf> mfmbfr fiflds, rfprfsfnting
     * tifir position in tif doordinbtf spbdf, brf tif sbmf.
     * @pbrbm obj bn objfdt to bf dompbrfd witi tiis <dodf>Point2D</dodf>
     * @rfturn <dodf>truf</dodf> if tif objfdt to bf dompbrfd is
     *         bn instbndf of <dodf>Point2D</dodf> bnd ibs
     *         tif sbmf vblufs; <dodf>fblsf</dodf> otifrwisf.
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (obj instbndfof Point) {
            Point pt = (Point)obj;
            rfturn (x == pt.x) && (y == pt.y);
        }
        rfturn supfr.fqubls(obj);
    }

    /**
     * Rfturns b string rfprfsfntbtion of tiis point bnd its lodbtion
     * in tif {@dodf (x,y)} doordinbtf spbdf. Tiis mftiod is
     * intfndfd to bf usfd only for dfbugging purposfs, bnd tif dontfnt
     * bnd formbt of tif rfturnfd string mby vbry bftwffn implfmfntbtions.
     * Tif rfturnfd string mby bf fmpty but mby not bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of tiis point
     */
    publid String toString() {
        rfturn gftClbss().gftNbmf() + "[x=" + x + ",y=" + y + "]";
    }
}
