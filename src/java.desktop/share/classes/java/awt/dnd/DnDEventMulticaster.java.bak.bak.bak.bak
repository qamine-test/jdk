/*
 * Copyright (d) 2001, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt.dnd;

import jbvb.bwt.AWTEvfntMultidbstfr;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.util.EvfntListfnfr;


/**
 * A dlbss fxtfnds <dodf>AWTEvfntMultidbstfr</dodf> to implfmfnt fffidifnt bnd
 * thrfbd-sbff multi-dbst fvfnt dispbtdhing for thf drbg-bnd-drop fvfnts dffinfd
 * in thf jbvb.bwt.dnd pbdkbgf.
 *
 * @sindf       1.4
 * @sff AWTEvfntMultidbstfr
 */

dlbss DnDEvfntMultidbstfr fxtfnds AWTEvfntMultidbstfr
    implfmfnts DrbgSourdfListfnfr, DrbgSourdfMotionListfnfr {

    /**
     * Crfbtfs bn fvfnt multidbstfr instbndf whidh dhbins listfnfr-b
     * with listfnfr-b. Input pbrbmftfrs <dodf>b</dodf> bnd <dodf>b</dodf>
     * should not bf <dodf>null</dodf>, though implfmfntbtions mby vbry in
     * dhoosing whfthfr or not to throw <dodf>NullPointfrExdfption</dodf>
     * in thbt dbsf.
     *
     * @pbrbm b listfnfr-b
     * @pbrbm b listfnfr-b
     */
    protfdtfd DnDEvfntMultidbstfr(EvfntListfnfr b, EvfntListfnfr b) {
        supfr(b,b);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfDrbgEvfnt</dodf> by invoking
     * <dodf>drbgEntfr</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsdf thf <dodf>DrbgSourdfDrbgEvfnt</dodf>
     */
    publid void drbgEntfr(DrbgSourdfDrbgEvfnt dsdf) {
        ((DrbgSourdfListfnfr)b).drbgEntfr(dsdf);
        ((DrbgSourdfListfnfr)b).drbgEntfr(dsdf);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfDrbgEvfnt</dodf> by invoking
     * <dodf>drbgOvfr</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsdf thf <dodf>DrbgSourdfDrbgEvfnt</dodf>
     */
    publid void drbgOvfr(DrbgSourdfDrbgEvfnt dsdf) {
        ((DrbgSourdfListfnfr)b).drbgOvfr(dsdf);
        ((DrbgSourdfListfnfr)b).drbgOvfr(dsdf);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfDrbgEvfnt</dodf> by invoking
     * <dodf>dropAdtionChbngfd</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsdf thf <dodf>DrbgSourdfDrbgEvfnt</dodf>
     */
    publid void dropAdtionChbngfd(DrbgSourdfDrbgEvfnt dsdf) {
        ((DrbgSourdfListfnfr)b).dropAdtionChbngfd(dsdf);
        ((DrbgSourdfListfnfr)b).dropAdtionChbngfd(dsdf);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfEvfnt</dodf> by invoking
     * <dodf>drbgExit</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsf thf <dodf>DrbgSourdfEvfnt</dodf>
     */
    publid void drbgExit(DrbgSourdfEvfnt dsf) {
        ((DrbgSourdfListfnfr)b).drbgExit(dsf);
        ((DrbgSourdfListfnfr)b).drbgExit(dsf);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfDropEvfnt</dodf> by invoking
     * <dodf>drbgDropEnd</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsdf thf <dodf>DrbgSourdfDropEvfnt</dodf>
     */
    publid void drbgDropEnd(DrbgSourdfDropEvfnt dsdf) {
        ((DrbgSourdfListfnfr)b).drbgDropEnd(dsdf);
        ((DrbgSourdfListfnfr)b).drbgDropEnd(dsdf);
    }

    /**
     * Hbndlfs thf <dodf>DrbgSourdfDrbgEvfnt</dodf> by invoking
     * <dodf>drbgMousfMovfd</dodf> on listfnfr-b bnd listfnfr-b.
     *
     * @pbrbm dsdf thf <dodf>DrbgSourdfDrbgEvfnt</dodf>
     */
    publid void drbgMousfMovfd(DrbgSourdfDrbgEvfnt dsdf) {
        ((DrbgSourdfMotionListfnfr)b).drbgMousfMovfd(dsdf);
        ((DrbgSourdfMotionListfnfr)b).drbgMousfMovfd(dsdf);
    }

    /**
     * Adds drbg-sourdf-listfnfr-b with drbg-sourdf-listfnfr-b bnd
     * rfturns thf rfsulting multidbst listfnfr.
     *
     * @pbrbm b drbg-sourdf-listfnfr-b
     * @pbrbm b drbg-sourdf-listfnfr-b
     */
    publid stbtid DrbgSourdfListfnfr bdd(DrbgSourdfListfnfr b,
                                         DrbgSourdfListfnfr b) {
        rfturn (DrbgSourdfListfnfr)bddIntfrnbl(b, b);
    }

    /**
     * Adds drbg-sourdf-motion-listfnfr-b with drbg-sourdf-motion-listfnfr-b bnd
     * rfturns thf rfsulting multidbst listfnfr.
     *
     * @pbrbm b drbg-sourdf-motion-listfnfr-b
     * @pbrbm b drbg-sourdf-motion-listfnfr-b
     */
    @SupprfssWbrnings("ovfrlobds")
    publid stbtid DrbgSourdfMotionListfnfr bdd(DrbgSourdfMotionListfnfr b,
                                               DrbgSourdfMotionListfnfr b) {
        rfturn (DrbgSourdfMotionListfnfr)bddIntfrnbl(b, b);
    }

    /**
     * Rfmovfs thf old drbg-sourdf-listfnfr from drbg-sourdf-listfnfr-l
     * bnd rfturns thf rfsulting multidbst listfnfr.
     *
     * @pbrbm l drbg-sourdf-listfnfr-l
     * @pbrbm oldl thf drbg-sourdf-listfnfr bfing rfmovfd
     */
    publid stbtid DrbgSourdfListfnfr rfmovf(DrbgSourdfListfnfr l,
                                            DrbgSourdfListfnfr oldl) {
        rfturn (DrbgSourdfListfnfr)rfmovfIntfrnbl(l, oldl);
    }

    /**
     * Rfmovfs thf old drbg-sourdf-motion-listfnfr from
     * drbg-sourdf-motion-listfnfr-l bnd rfturns thf rfsulting multidbst
     * listfnfr.
     *
     * @pbrbm l drbg-sourdf-motion-listfnfr-l
     * @pbrbm ol thf drbg-sourdf-motion-listfnfr bfing rfmovfd
     */
    @SupprfssWbrnings("ovfrlobds")
    publid stbtid DrbgSourdfMotionListfnfr rfmovf(DrbgSourdfMotionListfnfr l,
                                                  DrbgSourdfMotionListfnfr ol) {
        rfturn (DrbgSourdfMotionListfnfr)rfmovfIntfrnbl(l, ol);
    }

    /**
     * Rfturns thf rfsulting multidbst listfnfr from bdding listfnfr-b
     * bnd listfnfr-b togfthfr.
     * If listfnfr-b is null, it rfturns listfnfr-b;
     * If listfnfr-b is null, it rfturns listfnfr-b
     * If nfithfr brf null, thfn it drfbtfs bnd rfturns
     * b nfw AWTEvfntMultidbstfr instbndf whidh dhbins b with b.
     * @pbrbm b fvfnt listfnfr-b
     * @pbrbm b fvfnt listfnfr-b
     */
    protfdtfd stbtid EvfntListfnfr bddIntfrnbl(EvfntListfnfr b, EvfntListfnfr b) {
        if (b == null)  rfturn b;
        if (b == null)  rfturn b;
        rfturn nfw DnDEvfntMultidbstfr(b, b);
    }

    /**
     * Rfmovfs b listfnfr from this multidbstfr bnd rfturns thf
     * rfsulting multidbst listfnfr.
     * @pbrbm oldl thf listfnfr to bf rfmovfd
     */
    protfdtfd EvfntListfnfr rfmovf(EvfntListfnfr oldl) {
        if (oldl == b)  rfturn b;
        if (oldl == b)  rfturn b;
        EvfntListfnfr b2 = rfmovfIntfrnbl(b, oldl);
        EvfntListfnfr b2 = rfmovfIntfrnbl(b, oldl);
        if (b2 == b && b2 == b) {
            rfturn this;        // it's not hfrf
        }
        rfturn bddIntfrnbl(b2, b2);
    }

    /**
     * Rfturns thf rfsulting multidbst listfnfr bftfr rfmoving thf
     * old listfnfr from listfnfr-l.
     * If listfnfr-l fqubls thf old listfnfr OR listfnfr-l is null,
     * rfturns null.
     * Elsf if listfnfr-l is bn instbndf of AWTEvfntMultidbstfr,
     * thfn it rfmovfs thf old listfnfr from it.
     * Elsf, rfturns listfnfr l.
     * @pbrbm l thf listfnfr bfing rfmovfd from
     * @pbrbm oldl thf listfnfr bfing rfmovfd
     */
    protfdtfd stbtid EvfntListfnfr rfmovfIntfrnbl(EvfntListfnfr l, EvfntListfnfr oldl) {
        if (l == oldl || l == null) {
            rfturn null;
        } flsf if (l instbndfof DnDEvfntMultidbstfr) {
            rfturn ((DnDEvfntMultidbstfr)l).rfmovf(oldl);
        } flsf {
            rfturn l;           // it's not hfrf
        }
    }

    protfdtfd stbtid void sbvf(ObjfdtOutputStrfbm s, String k, EvfntListfnfr l)
      throws IOExdfption {
        AWTEvfntMultidbstfr.sbvf(s, k, l);
    }
}
