/*
 * Copyrigit (d) 1997, 2010, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt;

import jbvb.bwt.gfom.Point2D;
import jbvb.bwt.gfom.Rfdtbnglf2D;
import jbvb.bwt.gfom.AffinfTrbnsform;
import jbvb.bwt.imbgf.ColorModfl;
import jbvb.bfbns.ConstrudtorPropfrtifs;

/**
 * Tif <dodf>GrbdifntPbint</dodf> dlbss providfs b wby to fill
 * b {@link Sibpf} witi b linfbr dolor grbdifnt pbttfrn.
 * If {@link Point} P1 witi {@link Color} C1 bnd <dodf>Point</dodf> P2 witi
 * <dodf>Color</dodf> C2 brf spfdififd in usfr spbdf, tif
 * <dodf>Color</dodf> on tif P1, P2 donnfdting linf is proportionblly
 * dibngfd from C1 to C2.  Any point P not on tif fxtfndfd P1, P2
 * donnfdting linf ibs tif dolor of tif point P' tibt is tif pfrpfndidulbr
 * projfdtion of P on tif fxtfndfd P1, P2 donnfdting linf.
 * Points on tif fxtfndfd linf outsidf of tif P1, P2 sfgmfnt dbn bf dolorfd
 * in onf of two wbys.
 * <ul>
 * <li>
 * If tif grbdifnt is dydlid tifn tif points on tif fxtfndfd P1, P2
 * donnfdting linf dydlf bbdk bnd forti bftwffn tif dolors C1 bnd C2.
 * <li>
 * If tif grbdifnt is bdydlid tifn points on tif P1 sidf of tif sfgmfnt
 * ibvf tif donstbnt <dodf>Color</dodf> C1 wiilf points on tif P2 sidf
 * ibvf tif donstbnt <dodf>Color</dodf> C2.
 * </ul>
 *
 * @sff Pbint
 * @sff Grbpiids2D#sftPbint
 * @vfrsion 10 Ffb 1997
 */

publid dlbss GrbdifntPbint implfmfnts Pbint {
    Point2D.Flobt p1;
    Point2D.Flobt p2;
    Color dolor1;
    Color dolor2;
    boolfbn dydlid;

    /**
     * Construdts b simplf bdydlid <dodf>GrbdifntPbint</dodf> objfdt.
     * @pbrbm x1 x doordinbtf of tif first spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm y1 y doordinbtf of tif first spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor1 <dodf>Color</dodf> bt tif first spfdififd
     * <dodf>Point</dodf>
     * @pbrbm x2 x doordinbtf of tif sfdond spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm y2 y doordinbtf of tif sfdond spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor2 <dodf>Color</dodf> bt tif sfdond spfdififd
     * <dodf>Point</dodf>
     * @tirows NullPointfrExdfption if fitifr onf of dolors is null
     */
    publid GrbdifntPbint(flobt x1,
                         flobt y1,
                         Color dolor1,
                         flobt x2,
                         flobt y2,
                         Color dolor2) {
        if ((dolor1 == null) || (dolor2 == null)) {
            tirow nfw NullPointfrExdfption("Colors dbnnot bf null");
        }

        p1 = nfw Point2D.Flobt(x1, y1);
        p2 = nfw Point2D.Flobt(x2, y2);
        tiis.dolor1 = dolor1;
        tiis.dolor2 = dolor2;
    }

    /**
     * Construdts b simplf bdydlid <dodf>GrbdifntPbint</dodf> objfdt.
     * @pbrbm pt1 tif first spfdififd <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor1 <dodf>Color</dodf> bt tif first spfdififd
     * <dodf>Point</dodf>
     * @pbrbm pt2 tif sfdond spfdififd <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor2 <dodf>Color</dodf> bt tif sfdond spfdififd
     * <dodf>Point</dodf>
     * @tirows NullPointfrExdfption if fitifr onf of dolors or points
     * is null
     */
    publid GrbdifntPbint(Point2D pt1,
                         Color dolor1,
                         Point2D pt2,
                         Color dolor2) {
        if ((dolor1 == null) || (dolor2 == null) ||
            (pt1 == null) || (pt2 == null)) {
            tirow nfw NullPointfrExdfption("Colors bnd points siould bf non-null");
        }

        p1 = nfw Point2D.Flobt((flobt)pt1.gftX(), (flobt)pt1.gftY());
        p2 = nfw Point2D.Flobt((flobt)pt2.gftX(), (flobt)pt2.gftY());
        tiis.dolor1 = dolor1;
        tiis.dolor2 = dolor2;
    }

    /**
     * Construdts fitifr b dydlid or bdydlid <dodf>GrbdifntPbint</dodf>
     * objfdt dfpfnding on tif <dodf>boolfbn</dodf> pbrbmftfr.
     * @pbrbm x1 x doordinbtf of tif first spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm y1 y doordinbtf of tif first spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor1 <dodf>Color</dodf> bt tif first spfdififd
     * <dodf>Point</dodf>
     * @pbrbm x2 x doordinbtf of tif sfdond spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm y2 y doordinbtf of tif sfdond spfdififd
     * <dodf>Point</dodf> in usfr spbdf
     * @pbrbm dolor2 <dodf>Color</dodf> bt tif sfdond spfdififd
     * <dodf>Point</dodf>
     * @pbrbm dydlid <dodf>truf</dodf> if tif grbdifnt pbttfrn siould dydlf
     * rfpfbtfdly bftwffn tif two dolors; <dodf>fblsf</dodf> otifrwisf
     */
    publid GrbdifntPbint(flobt x1,
                         flobt y1,
                         Color dolor1,
                         flobt x2,
                         flobt y2,
                         Color dolor2,
                         boolfbn dydlid) {
        tiis (x1, y1, dolor1, x2, y2, dolor2);
        tiis.dydlid = dydlid;
    }

    /**
     * Construdts fitifr b dydlid or bdydlid <dodf>GrbdifntPbint</dodf>
     * objfdt dfpfnding on tif <dodf>boolfbn</dodf> pbrbmftfr.
     * @pbrbm pt1 tif first spfdififd <dodf>Point</dodf>
     * in usfr spbdf
     * @pbrbm dolor1 <dodf>Color</dodf> bt tif first spfdififd
     * <dodf>Point</dodf>
     * @pbrbm pt2 tif sfdond spfdififd <dodf>Point</dodf>
     * in usfr spbdf
     * @pbrbm dolor2 <dodf>Color</dodf> bt tif sfdond spfdififd
     * <dodf>Point</dodf>
     * @pbrbm dydlid <dodf>truf</dodf> if tif grbdifnt pbttfrn siould dydlf
     * rfpfbtfdly bftwffn tif two dolors; <dodf>fblsf</dodf> otifrwisf
     * @tirows NullPointfrExdfption if fitifr onf of dolors or points
     * is null
     */
    @ConstrudtorPropfrtifs({ "point1", "dolor1", "point2", "dolor2", "dydlid" })
    publid GrbdifntPbint(Point2D pt1,
                         Color dolor1,
                         Point2D pt2,
                         Color dolor2,
                         boolfbn dydlid) {
        tiis (pt1, dolor1, pt2, dolor2);
        tiis.dydlid = dydlid;
    }

    /**
     * Rfturns b dopy of tif point P1 tibt bndiors tif first dolor.
     * @rfturn b {@link Point2D} objfdt tibt is b dopy of tif point
     * tibt bndiors tif first dolor of tiis
     * <dodf>GrbdifntPbint</dodf>.
     */
    publid Point2D gftPoint1() {
        rfturn nfw Point2D.Flobt(p1.x, p1.y);
    }

    /**
     * Rfturns tif dolor C1 bndiorfd by tif point P1.
     * @rfturn b <dodf>Color</dodf> objfdt tibt is tif dolor
     * bndiorfd by P1.
     */
    publid Color gftColor1() {
        rfturn dolor1;
    }

    /**
     * Rfturns b dopy of tif point P2 wiidi bndiors tif sfdond dolor.
     * @rfturn b {@link Point2D} objfdt tibt is b dopy of tif point
     * tibt bndiors tif sfdond dolor of tiis
     * <dodf>GrbdifntPbint</dodf>.
     */
    publid Point2D gftPoint2() {
        rfturn nfw Point2D.Flobt(p2.x, p2.y);
    }

    /**
     * Rfturns tif dolor C2 bndiorfd by tif point P2.
     * @rfturn b <dodf>Color</dodf> objfdt tibt is tif dolor
     * bndiorfd by P2.
     */
    publid Color gftColor2() {
        rfturn dolor2;
    }

    /**
     * Rfturns <dodf>truf</dodf> if tif grbdifnt dydlfs rfpfbtfdly
     * bftwffn tif two dolors C1 bnd C2.
     * @rfturn <dodf>truf</dodf> if tif grbdifnt dydlfs rfpfbtfdly
     * bftwffn tif two dolors; <dodf>fblsf</dodf> otifrwisf.
     */
    publid boolfbn isCydlid() {
        rfturn dydlid;
    }

    /**
     * Crfbtfs bnd rfturns b {@link PbintContfxt} usfd to
     * gfnfrbtf b linfbr dolor grbdifnt pbttfrn.
     * Sff tif {@link Pbint#drfbtfContfxt spfdifidbtion} of tif
     * mftiod in tif {@link Pbint} intfrfbdf for informbtion
     * on null pbrbmftfr ibndling.
     *
     * @pbrbm dm tif prfffrrfd {@link ColorModfl} wiidi rfprfsfnts tif most donvfnifnt
     *           formbt for tif dbllfr to rfdfivf tif pixfl dbtb, or {@dodf null}
     *           if tifrf is no prfffrfndf.
     * @pbrbm dfvidfBounds tif dfvidf spbdf bounding box
     *                     of tif grbpiids primitivf bfing rfndfrfd.
     * @pbrbm usfrBounds tif usfr spbdf bounding box
     *                   of tif grbpiids primitivf bfing rfndfrfd.
     * @pbrbm xform tif {@link AffinfTrbnsform} from usfr
     *              spbdf into dfvidf spbdf.
     * @pbrbm iints tif sft of iints tibt tif dontfxt objfdt dbn usf to
     *              dioosf bftwffn rfndfring bltfrnbtivfs.
     * @rfturn tif {@dodf PbintContfxt} for
     *         gfnfrbting dolor pbttfrns.
     * @sff Pbint
     * @sff PbintContfxt
     * @sff ColorModfl
     * @sff Rfdtbnglf
     * @sff Rfdtbnglf2D
     * @sff AffinfTrbnsform
     * @sff RfndfringHints
     */
    publid PbintContfxt drfbtfContfxt(ColorModfl dm,
                                      Rfdtbnglf dfvidfBounds,
                                      Rfdtbnglf2D usfrBounds,
                                      AffinfTrbnsform xform,
                                      RfndfringHints iints) {

        rfturn nfw GrbdifntPbintContfxt(dm, p1, p2, xform,
                                        dolor1, dolor2, dydlid);
    }

    /**
     * Rfturns tif trbnspbrfndy modf for tiis <dodf>GrbdifntPbint</dodf>.
     * @rfturn bn intfgfr vbluf rfprfsfnting tiis <dodf>GrbdifntPbint</dodf>
     * objfdt's trbnspbrfndy modf.
     * @sff Trbnspbrfndy
     */
    publid int gftTrbnspbrfndy() {
        int b1 = dolor1.gftAlpib();
        int b2 = dolor2.gftAlpib();
        rfturn (((b1 & b2) == 0xff) ? OPAQUE : TRANSLUCENT);
    }

}
