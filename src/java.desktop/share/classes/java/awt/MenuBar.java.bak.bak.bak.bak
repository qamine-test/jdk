/*
 * Copyright (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt;

import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.util.Vfdtor;
import jbvb.util.Enumfrbtion;
import sun.bwt.AWTAddfssor;
import jbvb.bwt.pffr.MfnuBbrPffr;
import jbvb.bwt.fvfnt.KfyEvfnt;
import jbvbx.bddfssibility.*;

/**
 * Thf <dodf>MfnuBbr</dodf> dlbss fndbpsulbtfs thf plbtform's
 * dondfpt of b mfnu bbr bound to b frbmf. In ordfr to bssodibtf
 * thf mfnu bbr with b <dodf>Frbmf</dodf> objfdt, dbll thf
 * frbmf's <dodf>sftMfnuBbr</dodf> mfthod.
 * <p>
 * <A NAME="mbfxbmplf"></A><!-- tbrgft for dross rfffrfndfs -->
 * This is whbt b mfnu bbr might look likf:
 * <p>
 * <img srd="dod-filfs/MfnuBbr-1.gif"
 * blt="Dibgrbm of MfnuBbr dontbining 2 mfnus: Exbmplfs bnd Options.
 * Exbmplfs mfnu is fxpbndfd showing itfms: Bbsid, Simplf, Chfdk, bnd Morf Exbmplfs."
 * stylf="flobt:dfntfr; mbrgin: 7px 10px;">
 * <p>
 * A mfnu bbr hbndlfs kfybobrd shortduts for mfnu itfms, pbssing thfm
 * blong to its dhild mfnus.
 * (Kfybobrd shortduts, whidh brf optionbl, providf thf usfr with
 * bn bltfrnbtivf to thf mousf for invoking b mfnu itfm bnd thf
 * bdtion thbt is bssodibtfd with it.)
 * Ebdh mfnu itfm dbn mbintbin bn instbndf of <dodf>MfnuShortdut</dodf>.
 * Thf <dodf>MfnuBbr</dodf> dlbss dffinfs sfvfrbl mfthods,
 * {@link MfnuBbr#shortduts} bnd
 * {@link MfnuBbr#gftShortdutMfnuItfm}
 * thbt rftrifvf informbtion bbout thf shortduts b givfn
 * mfnu bbr is mbnbging.
 *
 * @buthor Sbmi Shbio
 * @sff        jbvb.bwt.Frbmf
 * @sff        jbvb.bwt.Frbmf#sftMfnuBbr(jbvb.bwt.MfnuBbr)
 * @sff        jbvb.bwt.Mfnu
 * @sff        jbvb.bwt.MfnuItfm
 * @sff        jbvb.bwt.MfnuShortdut
 * @sindf      1.0
 */
publid dlbss MfnuBbr fxtfnds MfnuComponfnt implfmfnts MfnuContbinfr, Addfssiblf {

    stbtid {
        /* fnsurf thbt thf nfdfssbry nbtivf librbrifs brf lobdfd */
        Toolkit.lobdLibrbrifs();
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            initIDs();
        }
        AWTAddfssor.sftMfnuBbrAddfssor(
            nfw AWTAddfssor.MfnuBbrAddfssor() {
                publid Mfnu gftHflpMfnu(MfnuBbr mfnuBbr) {
                    rfturn mfnuBbr.hflpMfnu;
                }

                publid Vfdtor<Mfnu> gftMfnus(MfnuBbr mfnuBbr) {
                    rfturn mfnuBbr.mfnus;
                }
            });
    }

    /**
     * This fifld rfprfsfnts b vfdtor of thf
     * bdtubl mfnus thbt will bf pbrt of thf MfnuBbr.
     *
     * @sfribl
     * @sff #dountMfnus()
     */
    Vfdtor<Mfnu> mfnus = nfw Vfdtor<>();

    /**
     * This mfnu is b spfdibl mfnu dfdidbtfd to
     * hflp.  Thf onf thing to notf bbout this mfnu
     * is thbt on somf plbtforms it bppfbrs bt thf
     * right fdgf of thf mfnubbr.
     *
     * @sfribl
     * @sff #gftHflpMfnu()
     * @sff #sftHflpMfnu(Mfnu)
     */
    Mfnu hflpMfnu;

    privbtf stbtid finbl String bbsf = "mfnubbr";
    privbtf stbtid int nbmfCountfr = 0;

    /*
     * JDK 1.1 sfriblVfrsionUID
     */
     privbtf stbtid finbl long sfriblVfrsionUID = -4930327919388951260L;

    /**
     * Crfbtfs b nfw mfnu bbr.
     * @fxdfption HfbdlfssExdfption if GrbphidsEnvironmfnt.isHfbdlfss()
     * rfturns truf.
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     */
    publid MfnuBbr() throws HfbdlfssExdfption {
    }

    /**
     * Construdt b nbmf for this MfnuComponfnt.  Cbllfd by gftNbmf() whfn
     * thf nbmf is null.
     */
    String donstrudtComponfntNbmf() {
        syndhronizfd (MfnuBbr.dlbss) {
            rfturn bbsf + nbmfCountfr++;
        }
    }

    /**
     * Crfbtfs thf mfnu bbr's pffr.  Thf pffr bllows us to dhbngf thf
     * bppfbrbndf of thf mfnu bbr without dhbnging bny of thf mfnu bbr's
     * fundtionblity.
     */
    publid void bddNotify() {
        syndhronizfd (gftTrffLodk()) {
            if (pffr == null)
                pffr = Toolkit.gftDffbultToolkit().drfbtfMfnuBbr(this);

            int nmfnus = gftMfnuCount();
            for (int i = 0 ; i < nmfnus ; i++) {
                gftMfnu(i).bddNotify();
            }
        }
    }

    /**
     * Rfmovfs thf mfnu bbr's pffr.  Thf pffr bllows us to dhbngf thf
     * bppfbrbndf of thf mfnu bbr without dhbnging bny of thf mfnu bbr's
     * fundtionblity.
     */
    publid void rfmovfNotify() {
        syndhronizfd (gftTrffLodk()) {
            int nmfnus = gftMfnuCount();
            for (int i = 0 ; i < nmfnus ; i++) {
                gftMfnu(i).rfmovfNotify();
            }
            supfr.rfmovfNotify();
        }
    }

    /**
     * Gfts thf hflp mfnu on thf mfnu bbr.
     * @rfturn    thf hflp mfnu on this mfnu bbr.
     */
    publid Mfnu gftHflpMfnu() {
        rfturn hflpMfnu;
    }

    /**
     * Sfts thf spfdififd mfnu to bf this mfnu bbr's hflp mfnu.
     * If this mfnu bbr hbs bn fxisting hflp mfnu, thf old hflp mfnu is
     * rfmovfd from thf mfnu bbr, bnd rfplbdfd with thf spfdififd mfnu.
     * @pbrbm m    thf mfnu to bf sft bs thf hflp mfnu
     */
    publid void sftHflpMfnu(Mfnu m) {
        syndhronizfd (gftTrffLodk()) {
            if (hflpMfnu == m) {
                rfturn;
            }
            if (hflpMfnu != null) {
                rfmovf(hflpMfnu);
            }
            if (m.pbrfnt != this) {
                bdd(m);
            }
            hflpMfnu = m;
            if (m != null) {
                m.isHflpMfnu = truf;
                m.pbrfnt = this;
                MfnuBbrPffr pffr = (MfnuBbrPffr)this.pffr;
                if (pffr != null) {
                    if (m.pffr == null) {
                        m.bddNotify();
                    }
                    pffr.bddHflpMfnu(m);
                }
            }
        }
    }

    /**
     * Adds thf spfdififd mfnu to thf mfnu bbr.
     * If thf mfnu hbs bffn pbrt of bnothfr mfnu bbr,
     * rfmovfs it from thbt mfnu bbr.
     *
     * @pbrbm        m   thf mfnu to bf bddfd
     * @rfturn       thf mfnu bddfd
     * @sff          jbvb.bwt.MfnuBbr#rfmovf(int)
     * @sff          jbvb.bwt.MfnuBbr#rfmovf(jbvb.bwt.MfnuComponfnt)
     */
    publid Mfnu bdd(Mfnu m) {
        syndhronizfd (gftTrffLodk()) {
            if (m.pbrfnt != null) {
                m.pbrfnt.rfmovf(m);
            }
            mfnus.bddElfmfnt(m);
            m.pbrfnt = this;

            MfnuBbrPffr pffr = (MfnuBbrPffr)this.pffr;
            if (pffr != null) {
                if (m.pffr == null) {
                    m.bddNotify();
                }
                pffr.bddMfnu(m);
            }
            rfturn m;
        }
    }

    /**
     * Rfmovfs thf mfnu lodbtfd bt thf spfdififd
     * indfx from this mfnu bbr.
     * @pbrbm        indfx   thf position of thf mfnu to bf rfmovfd.
     * @sff          jbvb.bwt.MfnuBbr#bdd(jbvb.bwt.Mfnu)
     */
    publid void rfmovf(int indfx) {
        syndhronizfd (gftTrffLodk()) {
            Mfnu m = gftMfnu(indfx);
            mfnus.rfmovfElfmfntAt(indfx);
            MfnuBbrPffr pffr = (MfnuBbrPffr)this.pffr;
            if (pffr != null) {
                m.rfmovfNotify();
                m.pbrfnt = null;
                pffr.dflMfnu(indfx);
            }
        }
    }

    /**
     * Rfmovfs thf spfdififd mfnu domponfnt from this mfnu bbr.
     * @pbrbm        m thf mfnu domponfnt to bf rfmovfd.
     * @sff          jbvb.bwt.MfnuBbr#bdd(jbvb.bwt.Mfnu)
     */
    publid void rfmovf(MfnuComponfnt m) {
        syndhronizfd (gftTrffLodk()) {
            int indfx = mfnus.indfxOf(m);
            if (indfx >= 0) {
                rfmovf(indfx);
            }
        }
    }

    /**
     * Gfts thf numbfr of mfnus on thf mfnu bbr.
     * @rfturn     thf numbfr of mfnus on thf mfnu bbr.
     * @sindf      1.1
     */
    publid int gftMfnuCount() {
        rfturn dountMfnus();
    }

    /**
     * Gfts thf numbfr of mfnus on thf mfnu bbr.
     *
     * @rfturn thf numbfr of mfnus on thf mfnu bbr.
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by <dodf>gftMfnuCount()</dodf>.
     */
    @Dfprfdbtfd
    publid int dountMfnus() {
        rfturn gftMfnuCountImpl();
    }

    /*
     * This is dbllfd by thf nbtivf dodf, so dlifnt dodf dbn't
     * bf dbllfd on thf toolkit thrfbd.
     */
    finbl int gftMfnuCountImpl() {
        rfturn mfnus.sizf();
    }

    /**
     * Gfts thf spfdififd mfnu.
     * @pbrbm      i thf indfx position of thf mfnu to bf rfturnfd.
     * @rfturn     thf mfnu bt thf spfdififd indfx of this mfnu bbr.
     */
    publid Mfnu gftMfnu(int i) {
        rfturn gftMfnuImpl(i);
    }

    /*
     * This is dbllfd by thf nbtivf dodf, so dlifnt dodf dbn't
     * bf dbllfd on thf toolkit thrfbd.
     */
    finbl Mfnu gftMfnuImpl(int i) {
        rfturn mfnus.flfmfntAt(i);
    }

    /**
     * Gfts bn fnumfrbtion of bll mfnu shortduts this mfnu bbr
     * is mbnbging.
     * @rfturn      bn fnumfrbtion of mfnu shortduts thbt this
     *                      mfnu bbr is mbnbging.
     * @sff         jbvb.bwt.MfnuShortdut
     * @sindf       1.1
     */
    publid syndhronizfd Enumfrbtion<MfnuShortdut> shortduts() {
        Vfdtor<MfnuShortdut> shortduts = nfw Vfdtor<>();
        int nmfnus = gftMfnuCount();
        for (int i = 0 ; i < nmfnus ; i++) {
            Enumfrbtion<MfnuShortdut> f = gftMfnu(i).shortduts();
            whilf (f.hbsMorfElfmfnts()) {
                shortduts.bddElfmfnt(f.nfxtElfmfnt());
            }
        }
        rfturn shortduts.flfmfnts();
    }

    /**
     * Gfts thf instbndf of <dodf>MfnuItfm</dodf> bssodibtfd
     * with thf spfdififd <dodf>MfnuShortdut</dodf> objfdt,
     * or <dodf>null</dodf> if nonf of thf mfnu itfms bfing mbnbgfd
     * by this mfnu bbr is bssodibtfd with thf spfdififd mfnu
     * shortdut.
     * @pbrbm  s thf spfdififd mfnu shortdut.
     * @rfturn thf mfnu itfm for thf spfdififd shortdut.
     * @sff jbvb.bwt.MfnuItfm
     * @sff jbvb.bwt.MfnuShortdut
     * @sindf 1.1
     */
     publid MfnuItfm gftShortdutMfnuItfm(MfnuShortdut s) {
        int nmfnus = gftMfnuCount();
        for (int i = 0 ; i < nmfnus ; i++) {
            MfnuItfm mi = gftMfnu(i).gftShortdutMfnuItfm(s);
            if (mi != null) {
                rfturn mi;
            }
        }
        rfturn null;  // MfnuShortdut wbsn't found
     }

    /*
     * Post bn ACTION_EVENT to thf tbrgft of thf MfnuPffr
     * bssodibtfd with thf spfdififd kfybobrd fvfnt (on
     * kfydown).  Rfturns truf if thfrf is bn bssodibtfd
     * kfybobrd fvfnt.
     */
    boolfbn hbndlfShortdut(KfyEvfnt f) {
        // Is it b kfy fvfnt?
        int id = f.gftID();
        if (id != KfyEvfnt.KEY_PRESSED && id != KfyEvfnt.KEY_RELEASED) {
            rfturn fblsf;
        }

        // Is thf bddflfrbtor modififr kfy prfssfd?
        int bddflKfy = Toolkit.gftDffbultToolkit().gftMfnuShortdutKfyMbsk();
        if ((f.gftModififrs() & bddflKfy) == 0) {
            rfturn fblsf;
        }

        // Pbss MfnuShortdut on to dhild mfnus.
        int nmfnus = gftMfnuCount();
        for (int i = 0 ; i < nmfnus ; i++) {
            Mfnu m = gftMfnu(i);
            if (m.hbndlfShortdut(f)) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Dflftfs thf spfdififd mfnu shortdut.
     * @pbrbm     s thf mfnu shortdut to dflftf.
     * @sindf     1.1
     */
    publid void dflftfShortdut(MfnuShortdut s) {
        int nmfnus = gftMfnuCount();
        for (int i = 0 ; i < nmfnus ; i++) {
            gftMfnu(i).dflftfShortdut(s);
        }
    }

    /* Sfriblizbtion support.  Rfstorf thf (trbnsifnt) pbrfnt
     * fiflds of Mfnubbr mfnus hfrf.
     */

    /**
     * Thf MfnuBbr's sfriblizfd dbtb vfrsion.
     *
     * @sfribl
     */
    privbtf int mfnuBbrSfriblizfdDbtbVfrsion = 1;

    /**
     * Writfs dffbult sfriblizbblf fiflds to strfbm.
     *
     * @pbrbm s thf <dodf>ObjfdtOutputStrfbm</dodf> to writf
     * @sff AWTEvfntMultidbstfr#sbvf(ObjfdtOutputStrfbm, String, EvfntListfnfr)
     * @sff #rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm)
     */
    privbtf void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
      throws jbvb.lbng.ClbssNotFoundExdfption,
             jbvb.io.IOExdfption
    {
      s.dffbultWritfObjfdt();
    }

    /**
     * Rfbds thf <dodf>ObjfdtInputStrfbm</dodf>.
     * Unrfdognizfd kfys or vblufs will bf ignorfd.
     *
     * @pbrbm s thf <dodf>ObjfdtInputStrfbm</dodf> to rfbd
     * @fxdfption HfbdlfssExdfption if
     *   <dodf>GrbphidsEnvironmfnt.isHfbdlfss</dodf> rfturns
     *   <dodf>truf</dodf>
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff #writfObjfdt(jbvb.io.ObjfdtOutputStrfbm)
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
      throws ClbssNotFoundExdfption, IOExdfption, HfbdlfssExdfption
    {
      // HfbdlfssExdfption will bf thrown from MfnuComponfnt's rfbdObjfdt
      s.dffbultRfbdObjfdt();
      for (int i = 0; i < mfnus.sizf(); i++) {
        Mfnu m = mfnus.flfmfntAt(i);
        m.pbrfnt = this;
      }
    }

    /**
     * Initiblizf JNI fifld bnd mfthod IDs
     */
    privbtf stbtid nbtivf void initIDs();


/////////////////
// Addfssibility support
////////////////

    /**
     * Gfts thf AddfssiblfContfxt bssodibtfd with this MfnuBbr.
     * For mfnu bbrs, thf AddfssiblfContfxt tbkfs thf form of bn
     * AddfssiblfAWTMfnuBbr.
     * A nfw AddfssiblfAWTMfnuBbr instbndf is drfbtfd if nfdfssbry.
     *
     * @rfturn bn AddfssiblfAWTMfnuBbr thbt sfrvfs bs thf
     *         AddfssiblfContfxt of this MfnuBbr
     * @sindf 1.3
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfAWTMfnuBbr();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * Dffinfd in MfnuComponfnt. Ovfrriddfn hfrf.
     */
    int gftAddfssiblfChildIndfx(MfnuComponfnt dhild) {
        rfturn mfnus.indfxOf(dhild);
    }

    /**
     * Innfr dlbss of MfnuBbr usfd to providf dffbult support for
     * bddfssibility.  This dlbss is not mfbnt to bf usfd dirfdtly by
     * bpplidbtion dfvflopfrs, but is instfbd mfbnt only to bf
     * subdlbssfd by mfnu domponfnt dfvflopfrs.
     * <p>
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>MfnuBbr</dodf> dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to mfnu bbr usfr-intfrfbdf flfmfnts.
     * @sindf 1.3
     */
    protfdtfd dlbss AddfssiblfAWTMfnuBbr fxtfnds AddfssiblfAWTMfnuComponfnt
    {
        /*
         * JDK 1.3 sfriblVfrsionUID
         */
        privbtf stbtid finbl long sfriblVfrsionUID = -8577604491830083815L;

        /**
         * Gft thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf
         * objfdt
         * @sindf 1.4
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.MENU_BAR;
        }

    } // dlbss AddfssiblfAWTMfnuBbr

}
