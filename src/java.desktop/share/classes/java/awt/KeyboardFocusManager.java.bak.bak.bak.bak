/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt;

import jbvb.bwt.fvfnt.FodusEvfnt;
import jbvb.bwt.fvfnt.InputEvfnt;
import jbvb.bwt.fvfnt.KfyEvfnt;
import jbvb.bwt.fvfnt.WindowEvfnt;

import jbvb.bwt.pffr.KfybobrdFodusMbnbgfrPffr;
import jbvb.bwt.pffr.LightwfightPffr;

import jbvb.bfbns.PropfrtyChbngfListfnfr;
import jbvb.bfbns.PropfrtyChbngfSupport;
import jbvb.bfbns.PropfrtyVftoExdfption;
import jbvb.bfbns.VftobblfChbngfListfnfr;
import jbvb.bfbns.VftobblfChbngfSupport;

import jbvb.lbng.rff.WfbkRfffrfndf;

import jbvb.lbng.rfflfdt.Fifld;

import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;

import jbvb.util.Collfdtions;
import jbvb.util.HbshSft;
import jbvb.util.Itfrbtor;
import jbvb.util.LinkfdList;
import jbvb.util.Sft;
import jbvb.util.StringTokfnizfr;
import jbvb.util.WfbkHbshMbp;

import sun.util.logging.PlbtformLoggfr;

import sun.bwt.AppContfxt;
import sun.bwt.SunToolkit;
import sun.bwt.CbusfdFodusEvfnt;
import sun.bwt.KfybobrdFodusMbnbgfrPffrProvidfr;
import sun.bwt.AWTAddfssor;

/**
 * Thf KfybobrdFodusMbnbgfr is rfsponsiblf for mbnbging thf bdtivf bnd fodusfd
 * Windows, bnd thf durrfnt fodus ownfr. Thf fodus ownfr is dffinfd bs thf
 * Componfnt in bn bpplidbtion thbt will typidblly rfdfivf bll KfyEvfnts
 * gfnfrbtfd by thf usfr. Thf fodusfd Window is thf Window thbt is, or
 * dontbins, thf fodus ownfr. Only b Frbmf or b Diblog dbn bf thf bdtivf
 * Window. Thf nbtivf windowing systfm mby dfnotf thf bdtivf Window or its
 * dhildrfn with spfdibl dfdorbtions, sudh bs b highlightfd titlf bbr. Thf
 * bdtivf Window is blwbys fithfr thf fodusfd Window, or thf first Frbmf or
 * Diblog thbt is bn ownfr of thf fodusfd Window.
 * <p>
 * Thf KfybobrdFodusMbnbgfr is both b dfntrblizfd lodbtion for dlifnt dodf to
 * qufry for thf fodus ownfr bnd initibtf fodus dhbngfs, bnd bn fvfnt
 * dispbtdhfr for bll FodusEvfnts, WindowEvfnts rflbtfd to fodus, bnd
 * KfyEvfnts.
 * <p>
 * Somf browsfrs pbrtition bpplfts in difffrfnt dodf bbsfs into sfpbrbtf
 * dontfxts, bnd fstbblish wblls bftwffn thfsf dontfxts. In sudh b sdfnbrio,
 * thfrf will bf onf KfybobrdFodusMbnbgfr pfr dontfxt. Othfr browsfrs plbdf bll
 * bpplfts into thf sbmf dontfxt, implying thbt thfrf will bf only b singlf,
 * globbl KfybobrdFodusMbnbgfr for bll bpplfts. This bfhbvior is
 * implfmfntbtion-dfpfndfnt. Consult your browsfr's dodumfntbtion for morf
 * informbtion. No mbttfr how mbny dontfxts thfrf mby bf, howfvfr, thfrf dbn
 * nfvfr bf morf thbn onf fodus ownfr, fodusfd Window, or bdtivf Window, pfr
 * ClbssLobdfr.
 * <p>
 * Plfbsf sff
 * <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/misd/fodus.html">
 * How to Usf thf Fodus Subsystfm</b>,
 * b sfdtion in <fm>Thf Jbvb Tutoribl</fm>, bnd thf
 * <b hrff="../../jbvb/bwt/dod-filfs/FodusSpfd.html">Fodus Spfdifidbtion</b>
 * for morf informbtion.
 *
 * @buthor Dbvid Mfndfnhbll
 *
 * @sff Window
 * @sff Frbmf
 * @sff Diblog
 * @sff jbvb.bwt.fvfnt.FodusEvfnt
 * @sff jbvb.bwt.fvfnt.WindowEvfnt
 * @sff jbvb.bwt.fvfnt.KfyEvfnt
 * @sindf 1.4
 */
publid bbstrbdt dlbss KfybobrdFodusMbnbgfr
    implfmfnts KfyEvfntDispbtdhfr, KfyEvfntPostProdfssor
{

    // Shbrfd fodus fnginf loggfr
    privbtf stbtid finbl PlbtformLoggfr fodusLog = PlbtformLoggfr.gftLoggfr("jbvb.bwt.fodus.KfybobrdFodusMbnbgfr");

    stbtid {
        /* fnsurf thbt thf nfdfssbry nbtivf librbrifs brf lobdfd */
        Toolkit.lobdLibrbrifs();
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            initIDs();
        }
        AWTAddfssor.sftKfybobrdFodusMbnbgfrAddfssor(
            nfw AWTAddfssor.KfybobrdFodusMbnbgfrAddfssor() {
                publid int shouldNbtivflyFodusHfbvywfight(Componfnt hfbvywfight,
                                                   Componfnt dfsdfndbnt,
                                                   boolfbn tfmporbry,
                                                   boolfbn fodusfdWindowChbngfAllowfd,
                                                   long timf,
                                                   CbusfdFodusEvfnt.Cbusf dbusf)
                {
                    rfturn KfybobrdFodusMbnbgfr.shouldNbtivflyFodusHfbvywfight(
                        hfbvywfight, dfsdfndbnt, tfmporbry, fodusfdWindowChbngfAllowfd, timf, dbusf);
                }
                publid boolfbn prodfssSyndhronousLightwfightTrbnsffr(Componfnt hfbvywfight,
                                                              Componfnt dfsdfndbnt,
                                                              boolfbn tfmporbry,
                                                              boolfbn fodusfdWindowChbngfAllowfd,
                                                              long timf)
                {
                    rfturn KfybobrdFodusMbnbgfr.prodfssSyndhronousLightwfightTrbnsffr(
                        hfbvywfight, dfsdfndbnt, tfmporbry, fodusfdWindowChbngfAllowfd, timf);
                }
                publid void rfmovfLbstFodusRfqufst(Componfnt hfbvywfight) {
                    KfybobrdFodusMbnbgfr.rfmovfLbstFodusRfqufst(hfbvywfight);
                }
                publid void sftMostRfdfntFodusOwnfr(Window window, Componfnt domponfnt) {
                    KfybobrdFodusMbnbgfr.sftMostRfdfntFodusOwnfr(window, domponfnt);
                }
                publid KfybobrdFodusMbnbgfr gftCurrfntKfybobrdFodusMbnbgfr(AppContfxt dtx) {
                    rfturn KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr(dtx);
                }
                publid Contbinfr gftCurrfntFodusCydlfRoot() {
                    rfturn KfybobrdFodusMbnbgfr.durrfntFodusCydlfRoot;
                }
            }
        );
    }

    trbnsifnt KfybobrdFodusMbnbgfrPffr pffr;

    /**
     * Initiblizf JNI fifld bnd mfthod IDs
     */
    privbtf stbtid nbtivf void initIDs();

    privbtf stbtid finbl PlbtformLoggfr log = PlbtformLoggfr.gftLoggfr("jbvb.bwt.KfybobrdFodusMbnbgfr");

    /**
     * Thf idfntififr for thf Forwbrd fodus trbvfrsbl kfys.
     *
     * @sff #sftDffbultFodusTrbvfrsblKfys
     * @sff #gftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     */
    publid stbtid finbl int FORWARD_TRAVERSAL_KEYS = 0;

    /**
     * Thf idfntififr for thf Bbdkwbrd fodus trbvfrsbl kfys.
     *
     * @sff #sftDffbultFodusTrbvfrsblKfys
     * @sff #gftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     */
    publid stbtid finbl int BACKWARD_TRAVERSAL_KEYS = 1;

    /**
     * Thf idfntififr for thf Up Cydlf fodus trbvfrsbl kfys.
     *
     * @sff #sftDffbultFodusTrbvfrsblKfys
     * @sff #gftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     */
    publid stbtid finbl int UP_CYCLE_TRAVERSAL_KEYS = 2;

    /**
     * Thf idfntififr for thf Down Cydlf fodus trbvfrsbl kfys.
     *
     * @sff #sftDffbultFodusTrbvfrsblKfys
     * @sff #gftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     */
    publid stbtid finbl int DOWN_CYCLE_TRAVERSAL_KEYS = 3;

    stbtid finbl int TRAVERSAL_KEY_LENGTH = DOWN_CYCLE_TRAVERSAL_KEYS + 1;

    /**
     * Rfturns thf durrfnt KfybobrdFodusMbnbgfr instbndf for thf dblling
     * thrfbd's dontfxt.
     *
     * @rfturn this thrfbd's dontfxt's KfybobrdFodusMbnbgfr
     * @sff #sftCurrfntKfybobrdFodusMbnbgfr
     */
    publid stbtid KfybobrdFodusMbnbgfr gftCurrfntKfybobrdFodusMbnbgfr() {
        rfturn gftCurrfntKfybobrdFodusMbnbgfr(AppContfxt.gftAppContfxt());
    }

    syndhronizfd stbtid KfybobrdFodusMbnbgfr
        gftCurrfntKfybobrdFodusMbnbgfr(AppContfxt bppdontfxt)
    {
        KfybobrdFodusMbnbgfr mbnbgfr = (KfybobrdFodusMbnbgfr)
            bppdontfxt.gft(KfybobrdFodusMbnbgfr.dlbss);
        if (mbnbgfr == null) {
            mbnbgfr = nfw DffbultKfybobrdFodusMbnbgfr();
            bppdontfxt.put(KfybobrdFodusMbnbgfr.dlbss, mbnbgfr);
        }
        rfturn mbnbgfr;
    }

    /**
     * Sfts thf durrfnt KfybobrdFodusMbnbgfr instbndf for thf dblling thrfbd's
     * dontfxt. If null is spfdififd, thfn thf durrfnt KfybobrdFodusMbnbgfr
     * is rfplbdfd with b nfw instbndf of DffbultKfybobrdFodusMbnbgfr.
     * <p>
     * If b SfdurityMbnbgfr is instbllfd, thf dblling thrfbd must bf grbntfd
     * thf AWTPfrmission "rfplbdfKfybobrdFodusMbnbgfr" in ordfr to rfplbdf thf
     * thf durrfnt KfybobrdFodusMbnbgfr. If this pfrmission is not grbntfd,
     * this mfthod will throw b SfdurityExdfption, bnd thf durrfnt
     * KfybobrdFodusMbnbgfr will bf undhbngfd.
     *
     * @pbrbm nfwMbnbgfr thf nfw KfybobrdFodusMbnbgfr for this thrfbd's dontfxt
     * @sff #gftCurrfntKfybobrdFodusMbnbgfr
     * @sff DffbultKfybobrdFodusMbnbgfr
     * @throws SfdurityExdfption if thf dblling thrfbd dofs not hbvf pfrmission
     *         to rfplbdf thf durrfnt KfybobrdFodusMbnbgfr
     */
    publid stbtid void sftCurrfntKfybobrdFodusMbnbgfr(
        KfybobrdFodusMbnbgfr nfwMbnbgfr) throws SfdurityExdfption
    {
        dhfdkRfplbdfKFMPfrmission();

        KfybobrdFodusMbnbgfr oldMbnbgfr = null;

        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            AppContfxt bppdontfxt = AppContfxt.gftAppContfxt();

            if (nfwMbnbgfr != null) {
                oldMbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr(bppdontfxt);

                bppdontfxt.put(KfybobrdFodusMbnbgfr.dlbss, nfwMbnbgfr);
            } flsf {
                oldMbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr(bppdontfxt);
                bppdontfxt.rfmovf(KfybobrdFodusMbnbgfr.dlbss);
            }
        }

        if (oldMbnbgfr != null) {
            oldMbnbgfr.firfPropfrtyChbngf("mbnbgingFodus",
                                          Boolfbn.TRUE,
                                          Boolfbn.FALSE);
        }
        if (nfwMbnbgfr != null) {
            nfwMbnbgfr.firfPropfrtyChbngf("mbnbgingFodus",
                                          Boolfbn.FALSE,
                                          Boolfbn.TRUE);
        }
    }

    /**
     * Thf Componfnt in bn bpplidbtion thbt will typidblly rfdfivf bll
     * KfyEvfnts gfnfrbtfd by thf usfr.
     */
    privbtf stbtid Componfnt fodusOwnfr;

    /**
     * Thf Componfnt in bn bpplidbtion thbt will rfgbin fodus whfn bn
     * outstbnding tfmporbry fodus trbnsffr hbs domplftfd, or thf fodus ownfr,
     * if no outstbnding tfmporbry trbnsffr fxists.
     */
    privbtf stbtid Componfnt pfrmbnfntFodusOwnfr;

    /**
     * Thf Window whidh is, or dontbins, thf fodus ownfr.
     */
    privbtf stbtid Window fodusfdWindow;

    /**
     * Only b Frbmf or b Diblog dbn bf thf bdtivf Window. Thf nbtivf windowing
     * systfm mby dfnotf thf bdtivf Window with b spfdibl dfdorbtion, sudh bs b
     * highlightfd titlf bbr. Thf bdtivf Window is blwbys fithfr thf fodusfd
     * Window, or thf first Frbmf or Diblog whidh is bn ownfr of thf fodusfd
     * Window.
     */
    privbtf stbtid Window bdtivfWindow;

    /**
     * Thf dffbult FodusTrbvfrsblPolidy for bll Windows thbt hbvf no polidy of
     * thfir own sft. If thosf Windows hbvf fodus-dydlf-root dhildrfn thbt hbvf
     * no kfybobrd-trbvfrsbl polidy of thfir own, thfn thosf dhildrfn will blso
     * inhfrit this polidy (bs will, rfdursivfly, thfir fodus-dydlf-root
     * dhildrfn).
     */
    privbtf FodusTrbvfrsblPolidy dffbultPolidy =
        nfw DffbultFodusTrbvfrsblPolidy();

    /**
     * Thf bound propfrty nbmfs of fbdh fodus trbvfrsbl kfy.
     */
    privbtf stbtid finbl String[] dffbultFodusTrbvfrsblKfyPropfrtyNbmfs = {
        "forwbrdDffbultFodusTrbvfrsblKfys",
        "bbdkwbrdDffbultFodusTrbvfrsblKfys",
        "upCydlfDffbultFodusTrbvfrsblKfys",
        "downCydlfDffbultFodusTrbvfrsblKfys"
    };

    /**
     * Thf dffbult strokfs for initiblizing thf dffbult fodus trbvfrsbl kfys.
     */
    privbtf stbtid finbl AWTKfyStrokf[][] dffbultFodusTrbvfrsblKfyStrokfs = {
        {
            AWTKfyStrokf.gftAWTKfyStrokf(KfyEvfnt.VK_TAB, 0, fblsf),
            AWTKfyStrokf.gftAWTKfyStrokf(KfyEvfnt.VK_TAB, InputEvfnt.CTRL_DOWN_MASK | InputEvfnt.CTRL_MASK, fblsf),
        },
        {
            AWTKfyStrokf.gftAWTKfyStrokf(KfyEvfnt.VK_TAB, InputEvfnt.SHIFT_DOWN_MASK | InputEvfnt.SHIFT_MASK, fblsf),
            AWTKfyStrokf.gftAWTKfyStrokf(KfyEvfnt.VK_TAB,
                                         InputEvfnt.SHIFT_DOWN_MASK | InputEvfnt.SHIFT_MASK | InputEvfnt.CTRL_DOWN_MASK | InputEvfnt.CTRL_MASK,
                                         fblsf),
        },
        {},
        {},
      };
    /**
     * Thf dffbult fodus trbvfrsbl kfys. Ebdh brrby of trbvfrsbl kfys will bf
     * in ffffdt on bll Windows thbt hbvf no sudh brrby of thfir own fxpliditly
     * sft. Ebdh brrby will blso bf inhfritfd, rfdursivfly, by bny dhild
     * Componfnt of thosf Windows thbt hbs no sudh brrby of its own fxpliditly
     * sft.
     */
    @SupprfssWbrnings({"undhfdkfd", "rbwtypfs"})
    privbtf Sft<AWTKfyStrokf>[] dffbultFodusTrbvfrsblKfys = nfw Sft[4];

    /**
     * Thf durrfnt fodus dydlf root. If thf fodus ownfr is itsflf b fodus dydlf
     * root, thfn it mby bf bmbiguous bs to whidh Componfnts rfprfsfnt thf nfxt
     * bnd prfvious Componfnts to fodus during normbl fodus trbvfrsbl. In thbt
     * dbsf, thf durrfnt fodus dydlf root is usfd to difffrfntibtf bmong thf
     * possibilitifs.
     */
    privbtf stbtid Contbinfr durrfntFodusCydlfRoot;

    /**
     * A dfsdription of bny VftobblfChbngfListfnfrs whidh hbvf bffn rfgistfrfd.
     */
    privbtf VftobblfChbngfSupport vftobblfSupport;

    /**
     * A dfsdription of bny PropfrtyChbngfListfnfrs whidh hbvf bffn rfgistfrfd.
     */
    privbtf PropfrtyChbngfSupport dhbngfSupport;

    /**
     * This KfybobrdFodusMbnbgfr's KfyEvfntDispbtdhfr dhbin. Thf List dofs not
     * indludf this KfybobrdFodusMbnbgfr unlfss it wbs fxpliditly rf-rfgistfrfd
     * vib b dbll to <dodf>bddKfyEvfntDispbtdhfr</dodf>. If no othfr
     * KfyEvfntDispbtdhfrs brf rfgistfrfd, this fifld mby bf null or rfffr to
     * b List of lfngth 0.
     */
    privbtf jbvb.util.LinkfdList<KfyEvfntDispbtdhfr> kfyEvfntDispbtdhfrs;

    /**
     * This KfybobrdFodusMbnbgfr's KfyEvfntPostProdfssor dhbin. Thf List dofs
     * not indludf this KfybobrdFodusMbnbgfr unlfss it wbs fxpliditly
     * rf-rfgistfrfd vib b dbll to <dodf>bddKfyEvfntPostProdfssor</dodf>.
     * If no othfr KfyEvfntPostProdfssors brf rfgistfrfd, this fifld mby bf
     * null or rfffr to b List of lfngth 0.
     */
    privbtf jbvb.util.LinkfdList<KfyEvfntPostProdfssor> kfyEvfntPostProdfssors;

    /**
     * Mbps Windows to thosf Windows' most rfdfnt fodus ownfrs.
     */
    privbtf stbtid jbvb.util.Mbp<Window, WfbkRfffrfndf<Componfnt>> mostRfdfntFodusOwnfrs = nfw WfbkHbshMbp<>();

    /**
     * Wf dbdhf thf pfrmission usfd to vfrify thbt thf dblling thrfbd is
     * pfrmittfd to bddfss thf globbl fodus stbtf.
     */
    privbtf stbtid AWTPfrmission rfplbdfKfybobrdFodusMbnbgfrPfrmission;

    /*
     * SfqufndfdEvfnt whidh is durrfntly dispbtdhfd in AppContfxt.
     */
    trbnsifnt SfqufndfdEvfnt durrfntSfqufndfdEvfnt = null;

    finbl void sftCurrfntSfqufndfdEvfnt(SfqufndfdEvfnt durrfnt) {
        syndhronizfd (SfqufndfdEvfnt.dlbss) {
            bssfrt(durrfnt == null || durrfntSfqufndfdEvfnt == null);
            durrfntSfqufndfdEvfnt = durrfnt;
        }
    }

    finbl SfqufndfdEvfnt gftCurrfntSfqufndfdEvfnt() {
        syndhronizfd (SfqufndfdEvfnt.dlbss) {
            rfturn durrfntSfqufndfdEvfnt;
        }
    }

    stbtid Sft<AWTKfyStrokf> initFodusTrbvfrsblKfysSft(String vbluf, Sft<AWTKfyStrokf> tbrgftSft) {
        StringTokfnizfr tokfns = nfw StringTokfnizfr(vbluf, ",");
        whilf (tokfns.hbsMorfTokfns()) {
            tbrgftSft.bdd(AWTKfyStrokf.gftAWTKfyStrokf(tokfns.nfxtTokfn()));
        }
        rfturn (tbrgftSft.isEmpty())
            ? Collfdtions.fmptySft()
            : Collfdtions.unmodifibblfSft(tbrgftSft);
    }

    /**
     * Initiblizfs b KfybobrdFodusMbnbgfr.
     */
    publid KfybobrdFodusMbnbgfr() {
        for (int i = 0; i < TRAVERSAL_KEY_LENGTH; i++) {
            Sft<AWTKfyStrokf> work_sft = nfw HbshSft<>();
            for (int j = 0; j < dffbultFodusTrbvfrsblKfyStrokfs[i].lfngth; j++) {
                work_sft.bdd(dffbultFodusTrbvfrsblKfyStrokfs[i][j]);
            }
            dffbultFodusTrbvfrsblKfys[i] = (work_sft.isEmpty())
                ? Collfdtions.fmptySft()
                : Collfdtions.unmodifibblfSft(work_sft);
        }
        initPffr();
    }

    privbtf void initPffr() {
        Toolkit tk = Toolkit.gftDffbultToolkit();
        KfybobrdFodusMbnbgfrPffrProvidfr pffrProvidfr = (KfybobrdFodusMbnbgfrPffrProvidfr)tk;
        pffr = pffrProvidfr.gftKfybobrdFodusMbnbgfrPffr();
    }

    /**
     * Rfturns thf fodus ownfr, if thf fodus ownfr is in thf sbmf dontfxt bs
     * thf dblling thrfbd. Thf fodus ownfr is dffinfd bs thf Componfnt in bn
     * bpplidbtion thbt will typidblly rfdfivf bll KfyEvfnts gfnfrbtfd by thf
     * usfr. KfyEvfnts whidh mbp to thf fodus ownfr's fodus trbvfrsbl kfys will
     * not bf dflivfrfd if fodus trbvfrsbl kfys brf fnbblfd for thf fodus
     * ownfr. In bddition, KfyEvfntDispbtdhfrs mby rftbrgft or donsumf
     * KfyEvfnts bfforf thfy rfbdh thf fodus ownfr.
     *
     * @rfturn thf fodus ownfr, or null if thf fodus ownfr is not b mfmbfr of
     *         thf dblling thrfbd's dontfxt
     * @sff #gftGlobblFodusOwnfr
     * @sff #sftGlobblFodusOwnfr
     */
    publid Componfnt gftFodusOwnfr() {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if (fodusOwnfr == null) {
                rfturn null;
            }

            rfturn (fodusOwnfr.bppContfxt == AppContfxt.gftAppContfxt())
                ? fodusOwnfr
                : null;
        }
    }

    /**
     * Rfturns thf fodus ownfr, fvfn if thf dblling thrfbd is in b difffrfnt
     * dontfxt thbn thf fodus ownfr. Thf fodus ownfr is dffinfd bs thf
     * Componfnt in bn bpplidbtion thbt will typidblly rfdfivf bll KfyEvfnts
     * gfnfrbtfd by thf usfr. KfyEvfnts whidh mbp to thf fodus ownfr's fodus
     * trbvfrsbl kfys will not bf dflivfrfd if fodus trbvfrsbl kfys brf fnbblfd
     * for thf fodus ownfr. In bddition, KfyEvfntDispbtdhfrs mby rftbrgft or
     * donsumf KfyEvfnts bfforf thfy rfbdh thf fodus ownfr.
     * <p>
     * This mfthod will throw b SfdurityExdfption if this KfybobrdFodusMbnbgfr
     * is not thf durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's
     * dontfxt.
     *
     * @rfturn thf fodus ownfr
     * @sff #gftFodusOwnfr
     * @sff #sftGlobblFodusOwnfr
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     */
    protfdtfd Componfnt gftGlobblFodusOwnfr() throws SfdurityExdfption {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();
            rfturn fodusOwnfr;
        }
    }

    /**
     * Sfts thf fodus ownfr. Thf opfrbtion will bf dbndfllfd if thf Componfnt
     * is not fodusbblf. Thf fodus ownfr is dffinfd bs thf Componfnt in bn
     * bpplidbtion thbt will typidblly rfdfivf bll KfyEvfnts gfnfrbtfd by thf
     * usfr. KfyEvfnts whidh mbp to thf fodus ownfr's fodus trbvfrsbl kfys will
     * not bf dflivfrfd if fodus trbvfrsbl kfys brf fnbblfd for thf fodus
     * ownfr. In bddition, KfyEvfntDispbtdhfrs mby rftbrgft or donsumf
     * KfyEvfnts bfforf thfy rfbdh thf fodus ownfr.
     * <p>
     * This mfthod dofs not bdtublly sft thf fodus to thf spfdififd Componfnt.
     * It mfrfly storfs thf vbluf to bf subsfqufntly rfturnfd by
     * <dodf>gftFodusOwnfr()</dodf>. Usf <dodf>Componfnt.rfqufstFodus()</dodf>
     * or <dodf>Componfnt.rfqufstFodusInWindow()</dodf> to dhbngf thf fodus
     * ownfr, subjfdt to plbtform limitbtions.
     *
     * @pbrbm fodusOwnfr thf fodus ownfr
     * @sff #gftFodusOwnfr
     * @sff #gftGlobblFodusOwnfr
     * @sff Componfnt#rfqufstFodus()
     * @sff Componfnt#rfqufstFodusInWindow()
     * @sff Componfnt#isFodusbblf
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     * @bfbninfo
     *       bound: truf
     */
    protfdtfd void sftGlobblFodusOwnfr(Componfnt fodusOwnfr)
        throws SfdurityExdfption
    {
        Componfnt oldFodusOwnfr = null;
        boolfbn shouldFirf = fblsf;

        if (fodusOwnfr == null || fodusOwnfr.isFodusbblf()) {
            syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
                dhfdkKFMSfdurity();

                oldFodusOwnfr = gftFodusOwnfr();

                try {
                    firfVftobblfChbngf("fodusOwnfr", oldFodusOwnfr,
                                       fodusOwnfr);
                } dbtdh (PropfrtyVftoExdfption f) {
                    // rfjfdtfd
                    rfturn;
                }

                KfybobrdFodusMbnbgfr.fodusOwnfr = fodusOwnfr;

                if (fodusOwnfr != null &&
                    (gftCurrfntFodusCydlfRoot() == null ||
                     !fodusOwnfr.isFodusCydlfRoot(gftCurrfntFodusCydlfRoot())))
                {
                    Contbinfr rootAndfstor =
                        fodusOwnfr.gftFodusCydlfRootAndfstor();
                    if (rootAndfstor == null && (fodusOwnfr instbndfof Window))
                    {
                        rootAndfstor = (Contbinfr)fodusOwnfr;
                    }
                    if (rootAndfstor != null) {
                        sftGlobblCurrfntFodusCydlfRootPriv(rootAndfstor);
                    }
                }

                shouldFirf = truf;
            }
        }

        if (shouldFirf) {
            firfPropfrtyChbngf("fodusOwnfr", oldFodusOwnfr, fodusOwnfr);
        }
    }

    /**
     * Clfbrs thf fodus ownfr bt both thf Jbvb bnd nbtivf lfvfls if thf
     * fodus ownfr fxists bnd rfsidfs in thf sbmf dontfxt bs thf dblling thrfbd,
     * othfrwisf thf mfthod rfturns silfntly.
     * <p>
     * Thf fodus ownfr domponfnt will rfdfivf b pfrmbnfnt FOCUS_LOST fvfnt.
     * Aftfr this opfrbtion domplftfs, thf nbtivf windowing systfm will disdbrd
     * bll usfr-gfnfrbtfd KfyEvfnts until thf usfr sflfdts b nfw Componfnt to
     * rfdfivf fodus, or b Componfnt is givfn fodus fxpliditly vib b dbll to
     * {@dodf rfqufstFodus()}. This opfrbtion dofs not dhbngf thf fodusfd or
     * bdtivf Windows.
     *
     * @sff Componfnt#rfqufstFodus()
     * @sff jbvb.bwt.fvfnt.FodusEvfnt#FOCUS_LOST
     * @sindf 1.8
     */
    publid void dlfbrFodusOwnfr() {
        if (gftFodusOwnfr() != null) {
            dlfbrGlobblFodusOwnfr();
        }
    }

    /**
     * Clfbrs thf globbl fodus ownfr bt both thf Jbvb bnd nbtivf lfvfls. If
     * thfrf fxists b fodus ownfr, thbt Componfnt will rfdfivf b pfrmbnfnt
     * FOCUS_LOST fvfnt. Aftfr this opfrbtion domplftfs, thf nbtivf windowing
     * systfm will disdbrd bll usfr-gfnfrbtfd KfyEvfnts until thf usfr sflfdts
     * b nfw Componfnt to rfdfivf fodus, or b Componfnt is givfn fodus
     * fxpliditly vib b dbll to <dodf>rfqufstFodus()</dodf>. This opfrbtion
     * dofs not dhbngf thf fodusfd or bdtivf Windows.
     * <p>
     * If b SfdurityMbnbgfr is instbllfd, thf dblling thrfbd must bf grbntfd
     * thf "rfplbdfKfybobrdFodusMbnbgfr" AWTPfrmission. If this pfrmission is
     * not grbntfd, this mfthod will throw b SfdurityExdfption, bnd thf durrfnt
     * fodus ownfr will not bf dlfbrfd.
     * <p>
     * This mfthod is intfndfd to bf usfd only by KfybobrdFodusMbnbgfr sft bs
     * durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt. It is not
     * for gfnfrbl dlifnt usf.
     *
     * @sff KfybobrdFodusMbnbgfr#dlfbrFodusOwnfr
     * @sff Componfnt#rfqufstFodus()
     * @sff jbvb.bwt.fvfnt.FodusEvfnt#FOCUS_LOST
     * @throws SfdurityExdfption if thf dblling thrfbd dofs not hbvf
     *         "rfplbdfKfybobrdFodusMbnbgfr" pfrmission
     */
    publid void dlfbrGlobblFodusOwnfr()
        throws SfdurityExdfption
    {
        dhfdkRfplbdfKFMPfrmission();
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            // Toolkit must bf fully initiblizfd, othfrwisf
            // _dlfbrGlobblFodusOwnfr will drbsh or throw bn fxdfption
            Toolkit.gftDffbultToolkit();

            _dlfbrGlobblFodusOwnfr();
        }
    }
    privbtf void _dlfbrGlobblFodusOwnfr() {
        Window bdtivfWindow = mbrkClfbrGlobblFodusOwnfr();
        pffr.dlfbrGlobblFodusOwnfr(bdtivfWindow);
    }

    void dlfbrGlobblFodusOwnfrPriv() {
        AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
            publid Void run() {
                dlfbrGlobblFodusOwnfr();
                rfturn null;
            }
        });
    }

    Componfnt gftNbtivfFodusOwnfr() {
        rfturn pffr.gftCurrfntFodusOwnfr();
    }

    void sftNbtivfFodusOwnfr(Componfnt domp) {
        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
            fodusLog.finfst("Cblling pffr {0} sftCurrfntFodusOwnfr for {1}",
                            String.vblufOf(pffr), String.vblufOf(domp));
        }
        pffr.sftCurrfntFodusOwnfr(domp);
    }

    Window gftNbtivfFodusfdWindow() {
        rfturn pffr.gftCurrfntFodusfdWindow();
    }

    /**
     * Rfturns thf pfrmbnfnt fodus ownfr, if thf pfrmbnfnt fodus ownfr is in
     * thf sbmf dontfxt bs thf dblling thrfbd. Thf pfrmbnfnt fodus ownfr is
     * dffinfd bs thf lbst Componfnt in bn bpplidbtion to rfdfivf b pfrmbnfnt
     * FOCUS_GAINED fvfnt. Thf fodus ownfr bnd pfrmbnfnt fodus ownfr brf
     * fquivblfnt unlfss b tfmporbry fodus dhbngf is durrfntly in ffffdt. In
     * sudh b situbtion, thf pfrmbnfnt fodus ownfr will bgbin bf thf fodus
     * ownfr whfn thf tfmporbry fodus dhbngf fnds.
     *
     * @rfturn thf pfrmbnfnt fodus ownfr, or null if thf pfrmbnfnt fodus ownfr
     *         is not b mfmbfr of thf dblling thrfbd's dontfxt
     * @sff #gftGlobblPfrmbnfntFodusOwnfr
     * @sff #sftGlobblPfrmbnfntFodusOwnfr
     */
    publid Componfnt gftPfrmbnfntFodusOwnfr() {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if (pfrmbnfntFodusOwnfr == null) {
                rfturn null;
            }

            rfturn (pfrmbnfntFodusOwnfr.bppContfxt ==
                    AppContfxt.gftAppContfxt())
                ? pfrmbnfntFodusOwnfr
                : null;
        }
    }

    /**
     * Rfturns thf pfrmbnfnt fodus ownfr, fvfn if thf dblling thrfbd is in b
     * difffrfnt dontfxt thbn thf pfrmbnfnt fodus ownfr. Thf pfrmbnfnt fodus
     * ownfr is dffinfd bs thf lbst Componfnt in bn bpplidbtion to rfdfivf b
     * pfrmbnfnt FOCUS_GAINED fvfnt. Thf fodus ownfr bnd pfrmbnfnt fodus ownfr
     * brf fquivblfnt unlfss b tfmporbry fodus dhbngf is durrfntly in ffffdt.
     * In sudh b situbtion, thf pfrmbnfnt fodus ownfr will bgbin bf thf fodus
     * ownfr whfn thf tfmporbry fodus dhbngf fnds.
     *
     * @rfturn thf pfrmbnfnt fodus ownfr
     * @sff #gftPfrmbnfntFodusOwnfr
     * @sff #sftGlobblPfrmbnfntFodusOwnfr
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     */
    protfdtfd Componfnt gftGlobblPfrmbnfntFodusOwnfr()
        throws SfdurityExdfption
    {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();
            rfturn pfrmbnfntFodusOwnfr;
        }
    }

    /**
     * Sfts thf pfrmbnfnt fodus ownfr. Thf opfrbtion will bf dbndfllfd if thf
     * Componfnt is not fodusbblf. Thf pfrmbnfnt fodus ownfr is dffinfd bs thf
     * lbst Componfnt in bn bpplidbtion to rfdfivf b pfrmbnfnt FOCUS_GAINED
     * fvfnt. Thf fodus ownfr bnd pfrmbnfnt fodus ownfr brf fquivblfnt unlfss
     * b tfmporbry fodus dhbngf is durrfntly in ffffdt. In sudh b situbtion,
     * thf pfrmbnfnt fodus ownfr will bgbin bf thf fodus ownfr whfn thf
     * tfmporbry fodus dhbngf fnds.
     * <p>
     * This mfthod dofs not bdtublly sft thf fodus to thf spfdififd Componfnt.
     * It mfrfly storfs thf vbluf to bf subsfqufntly rfturnfd by
     * <dodf>gftPfrmbnfntFodusOwnfr()</dodf>. Usf
     * <dodf>Componfnt.rfqufstFodus()</dodf> or
     * <dodf>Componfnt.rfqufstFodusInWindow()</dodf> to dhbngf thf fodus ownfr,
     * subjfdt to plbtform limitbtions.
     *
     * @pbrbm pfrmbnfntFodusOwnfr thf pfrmbnfnt fodus ownfr
     * @sff #gftPfrmbnfntFodusOwnfr
     * @sff #gftGlobblPfrmbnfntFodusOwnfr
     * @sff Componfnt#rfqufstFodus()
     * @sff Componfnt#rfqufstFodusInWindow()
     * @sff Componfnt#isFodusbblf
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     * @bfbninfo
     *       bound: truf
     */
    protfdtfd void sftGlobblPfrmbnfntFodusOwnfr(Componfnt pfrmbnfntFodusOwnfr)
        throws SfdurityExdfption
    {
        Componfnt oldPfrmbnfntFodusOwnfr = null;
        boolfbn shouldFirf = fblsf;

        if (pfrmbnfntFodusOwnfr == null || pfrmbnfntFodusOwnfr.isFodusbblf()) {
            syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
                dhfdkKFMSfdurity();

                oldPfrmbnfntFodusOwnfr = gftPfrmbnfntFodusOwnfr();

                try {
                    firfVftobblfChbngf("pfrmbnfntFodusOwnfr",
                                       oldPfrmbnfntFodusOwnfr,
                                       pfrmbnfntFodusOwnfr);
                } dbtdh (PropfrtyVftoExdfption f) {
                    // rfjfdtfd
                    rfturn;
                }

                KfybobrdFodusMbnbgfr.pfrmbnfntFodusOwnfr = pfrmbnfntFodusOwnfr;

                KfybobrdFodusMbnbgfr.
                    sftMostRfdfntFodusOwnfr(pfrmbnfntFodusOwnfr);

                shouldFirf = truf;
            }
        }

        if (shouldFirf) {
            firfPropfrtyChbngf("pfrmbnfntFodusOwnfr", oldPfrmbnfntFodusOwnfr,
                               pfrmbnfntFodusOwnfr);
        }
    }

    /**
     * Rfturns thf fodusfd Window, if thf fodusfd Window is in thf sbmf dontfxt
     * bs thf dblling thrfbd. Thf fodusfd Window is thf Window thbt is or
     * dontbins thf fodus ownfr.
     *
     * @rfturn thf fodusfd Window, or null if thf fodusfd Window is not b
     *         mfmbfr of thf dblling thrfbd's dontfxt
     * @sff #gftGlobblFodusfdWindow
     * @sff #sftGlobblFodusfdWindow
     */
    publid Window gftFodusfdWindow() {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if (fodusfdWindow == null) {
                rfturn null;
            }

            rfturn (fodusfdWindow.bppContfxt == AppContfxt.gftAppContfxt())
                ? fodusfdWindow
                : null;
        }
    }

    /**
     * Rfturns thf fodusfd Window, fvfn if thf dblling thrfbd is in b difffrfnt
     * dontfxt thbn thf fodusfd Window. Thf fodusfd Window is thf Window thbt
     * is or dontbins thf fodus ownfr.
     *
     * @rfturn thf fodusfd Window
     * @sff #gftFodusfdWindow
     * @sff #sftGlobblFodusfdWindow
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     */
    protfdtfd Window gftGlobblFodusfdWindow() throws SfdurityExdfption {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();
            rfturn fodusfdWindow;
        }
    }

    /**
     * Sfts thf fodusfd Window. Thf fodusfd Window is thf Window thbt is or
     * dontbins thf fodus ownfr. Thf opfrbtion will bf dbndfllfd if thf
     * spfdififd Window to fodus is not b fodusbblf Window.
     * <p>
     * This mfthod dofs not bdtublly dhbngf thf fodusfd Window bs fbr bs thf
     * nbtivf windowing systfm is dondfrnfd. It mfrfly storfs thf vbluf to bf
     * subsfqufntly rfturnfd by <dodf>gftFodusfdWindow()</dodf>. Usf
     * <dodf>Componfnt.rfqufstFodus()</dodf> or
     * <dodf>Componfnt.rfqufstFodusInWindow()</dodf> to dhbngf thf fodusfd
     * Window, subjfdt to plbtform limitbtions.
     *
     * @pbrbm fodusfdWindow thf fodusfd Window
     * @sff #gftFodusfdWindow
     * @sff #gftGlobblFodusfdWindow
     * @sff Componfnt#rfqufstFodus()
     * @sff Componfnt#rfqufstFodusInWindow()
     * @sff Window#isFodusbblfWindow
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     * @bfbninfo
     *       bound: truf
     */
    protfdtfd void sftGlobblFodusfdWindow(Window fodusfdWindow)
        throws SfdurityExdfption
    {
        Window oldFodusfdWindow = null;
        boolfbn shouldFirf = fblsf;

        if (fodusfdWindow == null || fodusfdWindow.isFodusbblfWindow()) {
            syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
                dhfdkKFMSfdurity();

                oldFodusfdWindow = gftFodusfdWindow();

                try {
                    firfVftobblfChbngf("fodusfdWindow", oldFodusfdWindow,
                                       fodusfdWindow);
                } dbtdh (PropfrtyVftoExdfption f) {
                    // rfjfdtfd
                    rfturn;
                }

                KfybobrdFodusMbnbgfr.fodusfdWindow = fodusfdWindow;
                shouldFirf = truf;
            }
        }

        if (shouldFirf) {
            firfPropfrtyChbngf("fodusfdWindow", oldFodusfdWindow,
                               fodusfdWindow);
        }
    }

    /**
     * Rfturns thf bdtivf Window, if thf bdtivf Window is in thf sbmf dontfxt
     * bs thf dblling thrfbd. Only b Frbmf or b Diblog dbn bf thf bdtivf
     * Window. Thf nbtivf windowing systfm mby dfnotf thf bdtivf Window or its
     * dhildrfn with spfdibl dfdorbtions, sudh bs b highlightfd titlf bbr.
     * Thf bdtivf Window is blwbys fithfr thf fodusfd Window, or thf first
     * Frbmf or Diblog thbt is bn ownfr of thf fodusfd Window.
     *
     * @rfturn thf bdtivf Window, or null if thf bdtivf Window is not b mfmbfr
     *         of thf dblling thrfbd's dontfxt
     * @sff #gftGlobblAdtivfWindow
     * @sff #sftGlobblAdtivfWindow
     */
    publid Window gftAdtivfWindow() {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if (bdtivfWindow == null) {
                rfturn null;
            }

            rfturn (bdtivfWindow.bppContfxt == AppContfxt.gftAppContfxt())
                ? bdtivfWindow
                : null;
        }
    }

    /**
     * Rfturns thf bdtivf Window, fvfn if thf dblling thrfbd is in b difffrfnt
     * dontfxt thbn thf bdtivf Window. Only b Frbmf or b Diblog dbn bf thf
     * bdtivf Window. Thf nbtivf windowing systfm mby dfnotf thf bdtivf Window
     * or its dhildrfn with spfdibl dfdorbtions, sudh bs b highlightfd titlf
     * bbr. Thf bdtivf Window is blwbys fithfr thf fodusfd Window, or thf first
     * Frbmf or Diblog thbt is bn ownfr of thf fodusfd Window.
     *
     * @rfturn thf bdtivf Window
     * @sff #gftAdtivfWindow
     * @sff #sftGlobblAdtivfWindow
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     */
    protfdtfd Window gftGlobblAdtivfWindow() throws SfdurityExdfption {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();
            rfturn bdtivfWindow;
        }
    }

    /**
     * Sfts thf bdtivf Window. Only b Frbmf or b Diblog dbn bf thf bdtivf
     * Window. Thf nbtivf windowing systfm mby dfnotf thf bdtivf Window or its
     * dhildrfn with spfdibl dfdorbtions, sudh bs b highlightfd titlf bbr. Thf
     * bdtivf Window is blwbys fithfr thf fodusfd Window, or thf first Frbmf or
     * Diblog thbt is bn ownfr of thf fodusfd Window.
     * <p>
     * This mfthod dofs not bdtublly dhbngf thf bdtivf Window bs fbr bs thf
     * nbtivf windowing systfm is dondfrnfd. It mfrfly storfs thf vbluf to bf
     * subsfqufntly rfturnfd by <dodf>gftAdtivfWindow()</dodf>. Usf
     * <dodf>Componfnt.rfqufstFodus()</dodf> or
     * <dodf>Componfnt.rfqufstFodusInWindow()</dodf>to dhbngf thf bdtivf
     * Window, subjfdt to plbtform limitbtions.
     *
     * @pbrbm bdtivfWindow thf bdtivf Window
     * @sff #gftAdtivfWindow
     * @sff #gftGlobblAdtivfWindow
     * @sff Componfnt#rfqufstFodus()
     * @sff Componfnt#rfqufstFodusInWindow()
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     * @bfbninfo
     *       bound: truf
     */
    protfdtfd void sftGlobblAdtivfWindow(Window bdtivfWindow)
        throws SfdurityExdfption
    {
        Window oldAdtivfWindow;
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();

            oldAdtivfWindow = gftAdtivfWindow();
            if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
                fodusLog.finfr("Sftting globbl bdtivf window to " + bdtivfWindow + ", old bdtivf " + oldAdtivfWindow);
            }

            try {
                firfVftobblfChbngf("bdtivfWindow", oldAdtivfWindow,
                                   bdtivfWindow);
            } dbtdh (PropfrtyVftoExdfption f) {
                // rfjfdtfd
                rfturn;
            }

            KfybobrdFodusMbnbgfr.bdtivfWindow = bdtivfWindow;
        }

        firfPropfrtyChbngf("bdtivfWindow", oldAdtivfWindow, bdtivfWindow);
    }

    /**
     * Rfturns thf dffbult FodusTrbvfrsblPolidy. Top-lfvfl domponfnts
     * usf this vbluf on thfir drfbtion to initiblizf thfir own fodus trbvfrsbl
     * polidy by fxplidit dbll to Contbinfr.sftFodusTrbvfrsblPolidy.
     *
     * @rfturn thf dffbult FodusTrbvfrsblPolidy. null will nfvfr bf rfturnfd.
     * @sff #sftDffbultFodusTrbvfrsblPolidy
     * @sff Contbinfr#sftFodusTrbvfrsblPolidy
     * @sff Contbinfr#gftFodusTrbvfrsblPolidy
     */
    publid syndhronizfd FodusTrbvfrsblPolidy gftDffbultFodusTrbvfrsblPolidy() {
        rfturn dffbultPolidy;
    }

    /**
     * Sfts thf dffbult FodusTrbvfrsblPolidy. Top-lfvfl domponfnts
     * usf this vbluf on thfir drfbtion to initiblizf thfir own fodus trbvfrsbl
     * polidy by fxplidit dbll to Contbinfr.sftFodusTrbvfrsblPolidy.
     * Notf: this dbll dofsn't bfffdt blrfbdy drfbtfd domponfnts bs thfy hbvf
     * thfir polidy initiblizfd. Only nfw domponfnts will usf this polidy bs
     * thfir dffbult polidy.
     *
     * @pbrbm dffbultPolidy thf nfw, dffbult FodusTrbvfrsblPolidy
     * @sff #gftDffbultFodusTrbvfrsblPolidy
     * @sff Contbinfr#sftFodusTrbvfrsblPolidy
     * @sff Contbinfr#gftFodusTrbvfrsblPolidy
     * @throws IllfgblArgumfntExdfption if dffbultPolidy is null
     * @bfbninfo
     *       bound: truf
     */
    publid void sftDffbultFodusTrbvfrsblPolidy(FodusTrbvfrsblPolidy
                                               dffbultPolidy) {
        if (dffbultPolidy == null) {
            throw nfw IllfgblArgumfntExdfption("dffbult fodus trbvfrsbl polidy dbnnot bf null");
        }

        FodusTrbvfrsblPolidy oldPolidy;

        syndhronizfd (this) {
            oldPolidy = this.dffbultPolidy;
            this.dffbultPolidy = dffbultPolidy;
        }

        firfPropfrtyChbngf("dffbultFodusTrbvfrsblPolidy", oldPolidy,
                           dffbultPolidy);
    }

    /**
     * Sfts thf dffbult fodus trbvfrsbl kfys for b givfn trbvfrsbl opfrbtion.
     * This trbvfrsbl kfy {@dodf Sft} will bf in ffffdt on bll
     * {@dodf Window}s thbt hbvf no sudh {@dodf Sft} of
     * thfir own fxpliditly dffinfd. This {@dodf Sft} will blso bf
     * inhfritfd, rfdursivfly, by bny dhild {@dodf Componfnt} of
     * thosf {@dodf Windows} thbt hbs
     * no sudh {@dodf Sft} of its own fxpliditly dffinfd.
     * <p>
     * Thf dffbult vblufs for thf dffbult fodus trbvfrsbl kfys brf
     * implfmfntbtion-dfpfndfnt. Sun rfdommfnds thbt bll implfmfntbtions for b
     * pbrtidulbr nbtivf plbtform usf thf sbmf dffbult vblufs. Thf
     * rfdommfndbtions for Windows bnd Unix brf listfd bflow. Thfsf
     * rfdommfndbtions brf usfd in thf Sun AWT implfmfntbtions.
     *
     * <tbblf bordfr=1 summbry="Rfdommfndfd dffbult vblufs for fodus trbvfrsbl kfys">
     * <tr>
     *    <th>Idfntififr</th>
     *    <th>Mfbning</th>
     *    <th>Dffbult</th>
     * </tr>
     * <tr>
     *    <td>{@dodf KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS}</td>
     *    <td>Normbl forwbrd kfybobrd trbvfrsbl</td>
     *    <td>{@dodf TAB} on {@dodf KEY_PRESSED},
     *        {@dodf CTRL-TAB} on {@dodf KEY_PRESSED}</td>
     * </tr>
     * <tr>
     *    <td>{@dodf KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS}</td>
     *    <td>Normbl rfvfrsf kfybobrd trbvfrsbl</td>
     *    <td>{@dodf SHIFT-TAB} on {@dodf KEY_PRESSED},
     *        {@dodf CTRL-SHIFT-TAB} on {@dodf KEY_PRESSED}</td>
     * </tr>
     * <tr>
     *    <td>{@dodf KfybobrdFodusMbnbgfr.UP_CYCLE_TRAVERSAL_KEYS}</td>
     *    <td>Go up onf fodus trbvfrsbl dydlf</td>
     *    <td>nonf</td>
     * </tr>
     * <tr>
     *    <td>{@dodf KfybobrdFodusMbnbgfr.DOWN_CYCLE_TRAVERSAL_KEYS}</td>
     *    <td>Go down onf fodus trbvfrsbl dydlf</td>
     *    <td>nonf</td>
     * </tr>
     * </tbblf>
     *
     * To disbblf b trbvfrsbl kfy, usf bn fmpty {@dodf Sft};
     * {@dodf Collfdtions.EMPTY_SET} is rfdommfndfd.
     * <p>
     * Using thf {@dodf AWTKfyStrokf} API, dlifnt dodf dbn
     * spfdify on whidh of two
     * spfdifid {@dodf KfyEvfnt}s, {@dodf KEY_PRESSED} or
     * {@dodf KEY_RELEASED}, thf fodus trbvfrsbl opfrbtion will
     * oddur. Rfgbrdlfss of whidh {@dodf KfyEvfnt} is spfdififd,
     * howfvfr, bll {@dodf KfyEvfnt}s rflbtfd to thf fodus
     * trbvfrsbl kfy, indluding thf bssodibtfd {@dodf KEY_TYPED}
     * fvfnt, will bf donsumfd, bnd will not bf dispbtdhfd
     * to bny {@dodf Componfnt}. It is b runtimf frror to
     * spfdify b {@dodf KEY_TYPED} fvfnt bs
     * mbpping to b fodus trbvfrsbl opfrbtion, or to mbp thf sbmf fvfnt to
     * multiplf dffbult fodus trbvfrsbl opfrbtions.
     * <p>
     * This mfthod mby throw b {@dodf ClbssCbstExdfption} if bny {@dodf Objfdt}
     * in {@dodf kfystrokfs} is not bn {@dodf AWTKfyStrokf}.
     *
     * @pbrbm id onf of
     *        {@dodf KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS},
     *        {@dodf KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS},
     *        {@dodf KfybobrdFodusMbnbgfr.UP_CYCLE_TRAVERSAL_KEYS}, or
     *        {@dodf KfybobrdFodusMbnbgfr.DOWN_CYCLE_TRAVERSAL_KEYS}
     * @pbrbm kfystrokfs thf Sft of {@dodf AWTKfyStrokf}s for thf
     *        spfdififd opfrbtion
     * @sff #gftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     * @throws IllfgblArgumfntExdfption if id is not onf of
     *         {@dodf KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS},
     *         {@dodf KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS},
     *         {@dodf KfybobrdFodusMbnbgfr.UP_CYCLE_TRAVERSAL_KEYS}, or
     *         {@dodf KfybobrdFodusMbnbgfr.DOWN_CYCLE_TRAVERSAL_KEYS},
     *         or if kfystrokfs is {@dodf null},
     *         or if kfystrokfs dontbins {@dodf null},
     *         or if bny kfystrokf
     *         rfprfsfnts b {@dodf KEY_TYPED} fvfnt,
     *         or if bny kfystrokf blrfbdy mbps
     *         to bnothfr dffbult fodus trbvfrsbl opfrbtion
     * @bfbninfo
     *       bound: truf
     */
    publid void
        sftDffbultFodusTrbvfrsblKfys(int id,
                                     Sft<? fxtfnds AWTKfyStrokf> kfystrokfs)
    {
        if (id < 0 || id >= TRAVERSAL_KEY_LENGTH) {
            throw nfw IllfgblArgumfntExdfption("invblid fodus trbvfrsbl kfy idfntififr");
        }
        if (kfystrokfs == null) {
            throw nfw IllfgblArgumfntExdfption("dbnnot sft null Sft of dffbult fodus trbvfrsbl kfys");
        }

        Sft<AWTKfyStrokf> oldKfys;

        syndhronizfd (this) {
            for (AWTKfyStrokf kfystrokf : kfystrokfs) {

                if (kfystrokf == null) {
                    throw nfw IllfgblArgumfntExdfption("dbnnot sft null fodus trbvfrsbl kfy");
                }

                if (kfystrokf.gftKfyChbr() != KfyEvfnt.CHAR_UNDEFINED) {
                    throw nfw IllfgblArgumfntExdfption("fodus trbvfrsbl kfys dbnnot mbp to KEY_TYPED fvfnts");
                }

                // Chfdk to sff if kfy blrfbdy mbps to bnothfr trbvfrsbl
                // opfrbtion
                for (int i = 0; i < TRAVERSAL_KEY_LENGTH; i++) {
                    if (i == id) {
                        dontinuf;
                    }

                    if (dffbultFodusTrbvfrsblKfys[i].dontbins(kfystrokf)) {
                        throw nfw IllfgblArgumfntExdfption("fodus trbvfrsbl kfys must bf uniquf for b Componfnt");
                    }
                }
            }

            oldKfys = dffbultFodusTrbvfrsblKfys[id];
            dffbultFodusTrbvfrsblKfys[id] =
                Collfdtions.unmodifibblfSft(nfw HbshSft<>(kfystrokfs));
        }

        firfPropfrtyChbngf(dffbultFodusTrbvfrsblKfyPropfrtyNbmfs[id],
                           oldKfys, kfystrokfs);
    }

    /**
     * Rfturns b Sft of dffbult fodus trbvfrsbl kfys for b givfn trbvfrsbl
     * opfrbtion. This trbvfrsbl kfy Sft will bf in ffffdt on bll Windows thbt
     * hbvf no sudh Sft of thfir own fxpliditly dffinfd. This Sft will blso bf
     * inhfritfd, rfdursivfly, by bny dhild Componfnt of thosf Windows thbt hbs
     * no sudh Sft of its own fxpliditly dffinfd. (Sff
     * <dodf>sftDffbultFodusTrbvfrsblKfys</dodf> for b full dfsdription of fbdh
     * opfrbtion.)
     *
     * @pbrbm id onf of KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
     *        KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
     *        KfybobrdFodusMbnbgfr.UP_CYCLE_TRAVERSAL_KEYS, or
     *        KfybobrdFodusMbnbgfr.DOWN_CYCLE_TRAVERSAL_KEYS
     * @rfturn thf <dodf>Sft</dodf> of <dodf>AWTKfyStrokf</dodf>s
     *         for thf spfdififd opfrbtion; thf <dodf>Sft</dodf>
     *         will bf unmodifibblf, bnd mby bf fmpty; <dodf>null</dodf>
     *         will nfvfr bf rfturnfd
     * @sff #sftDffbultFodusTrbvfrsblKfys
     * @sff Componfnt#sftFodusTrbvfrsblKfys
     * @sff Componfnt#gftFodusTrbvfrsblKfys
     * @throws IllfgblArgumfntExdfption if id is not onf of
     *         KfybobrdFodusMbnbgfr.FORWARD_TRAVERSAL_KEYS,
     *         KfybobrdFodusMbnbgfr.BACKWARD_TRAVERSAL_KEYS,
     *         KfybobrdFodusMbnbgfr.UP_CYCLE_TRAVERSAL_KEYS, or
     *         KfybobrdFodusMbnbgfr.DOWN_CYCLE_TRAVERSAL_KEYS
     */
    publid Sft<AWTKfyStrokf> gftDffbultFodusTrbvfrsblKfys(int id) {
        if (id < 0 || id >= TRAVERSAL_KEY_LENGTH) {
            throw nfw IllfgblArgumfntExdfption("invblid fodus trbvfrsbl kfy idfntififr");
        }

        // Okby to rfturn Sft dirfdtly bfdbusf it is bn unmodifibblf vifw
        rfturn dffbultFodusTrbvfrsblKfys[id];
    }

    /**
     * Rfturns thf durrfnt fodus dydlf root, if thf durrfnt fodus dydlf root is
     * in thf sbmf dontfxt bs thf dblling thrfbd. If thf fodus ownfr is itsflf
     * b fodus dydlf root, thfn it mby bf bmbiguous bs to whidh Componfnts
     * rfprfsfnt thf nfxt bnd prfvious Componfnts to fodus during normbl fodus
     * trbvfrsbl. In thbt dbsf, thf durrfnt fodus dydlf root is usfd to
     * difffrfntibtf bmong thf possibilitifs.
     * <p>
     * This mfthod is intfndfd to bf usfd only by KfybobrdFodusMbnbgfrs bnd
     * fodus implfmfntbtions. It is not for gfnfrbl dlifnt usf.
     *
     * @rfturn thf durrfnt fodus dydlf root, or null if thf durrfnt fodus dydlf
     *         root is not b mfmbfr of thf dblling thrfbd's dontfxt
     * @sff #gftGlobblCurrfntFodusCydlfRoot
     * @sff #sftGlobblCurrfntFodusCydlfRoot
     */
    publid Contbinfr gftCurrfntFodusCydlfRoot() {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if (durrfntFodusCydlfRoot == null) {
                rfturn null;
            }

            rfturn (durrfntFodusCydlfRoot.bppContfxt ==
                    AppContfxt.gftAppContfxt())
                ? durrfntFodusCydlfRoot
                : null;
        }
    }

    /**
     * Rfturns thf durrfnt fodus dydlf root, fvfn if thf dblling thrfbd is in b
     * difffrfnt dontfxt thbn thf durrfnt fodus dydlf root. If thf fodus ownfr
     * is itsflf b fodus dydlf root, thfn it mby bf bmbiguous bs to whidh
     * Componfnts rfprfsfnt thf nfxt bnd prfvious Componfnts to fodus during
     * normbl fodus trbvfrsbl. In thbt dbsf, thf durrfnt fodus dydlf root is
     * usfd to difffrfntibtf bmong thf possibilitifs.
     *
     * @rfturn thf durrfnt fodus dydlf root, or null if thf durrfnt fodus dydlf
     *         root is not b mfmbfr of thf dblling thrfbd's dontfxt
     * @sff #gftCurrfntFodusCydlfRoot
     * @sff #sftGlobblCurrfntFodusCydlfRoot
     * @throws SfdurityExdfption if this KfybobrdFodusMbnbgfr is not thf
     *         durrfnt KfybobrdFodusMbnbgfr for thf dblling thrfbd's dontfxt
     *         bnd if thf dblling thrfbd dofs not hbvf "rfplbdfKfybobrdFodusMbnbgfr"
     *         pfrmission
     */
    protfdtfd Contbinfr gftGlobblCurrfntFodusCydlfRoot()
        throws SfdurityExdfption
    {
        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            dhfdkKFMSfdurity();
            rfturn durrfntFodusCydlfRoot;
        }
    }

    /**
     * Sfts thf durrfnt fodus dydlf root. If thf fodus ownfr is itsflf b fodus
     * dydlf root, thfn it mby bf bmbiguous bs to whidh Componfnts rfprfsfnt
     * thf nfxt bnd prfvious Componfnts to fodus during normbl fodus trbvfrsbl.
     * In thbt dbsf, thf durrfnt fodus dydlf root is usfd to difffrfntibtf
     * bmong thf possibilitifs.
     * <p>
     * If b SfdurityMbnbgfr is instbllfd, thf dblling thrfbd must bf grbntfd
     * thf "rfplbdfKfybobrdFodusMbnbgfr" AWTPfrmission. If this pfrmission is
     * not grbntfd, this mfthod will throw b SfdurityExdfption, bnd thf durrfnt
     * fodus dydlf root will not bf dhbngfd.
     * <p>
     * This mfthod is intfndfd to bf usfd only by KfybobrdFodusMbnbgfrs bnd
     * fodus implfmfntbtions. It is not for gfnfrbl dlifnt usf.
     *
     * @pbrbm nfwFodusCydlfRoot thf nfw fodus dydlf root
     * @sff #gftCurrfntFodusCydlfRoot
     * @sff #gftGlobblCurrfntFodusCydlfRoot
     * @throws SfdurityExdfption if thf dblling thrfbd dofs not hbvf
     *         "rfplbdfKfybobrdFodusMbnbgfr" pfrmission
     * @bfbninfo
     *       bound: truf
     */
    publid void sftGlobblCurrfntFodusCydlfRoot(Contbinfr nfwFodusCydlfRoot)
        throws SfdurityExdfption
    {
        dhfdkRfplbdfKFMPfrmission();

        Contbinfr oldFodusCydlfRoot;

        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            oldFodusCydlfRoot  = gftCurrfntFodusCydlfRoot();
            durrfntFodusCydlfRoot = nfwFodusCydlfRoot;
        }

        firfPropfrtyChbngf("durrfntFodusCydlfRoot", oldFodusCydlfRoot,
                           nfwFodusCydlfRoot);
    }

    void sftGlobblCurrfntFodusCydlfRootPriv(finbl Contbinfr nfwFodusCydlfRoot) {
        AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
            publid Void run() {
                sftGlobblCurrfntFodusCydlfRoot(nfwFodusCydlfRoot);
                rfturn null;
            }
        });
    }

    /**
     * Adds b PropfrtyChbngfListfnfr to thf listfnfr list. Thf listfnfr is
     * rfgistfrfd for bll bound propfrtifs of this dlbss, indluding thf
     * following:
     * <ul>
     *    <li>whfthfr thf KfybobrdFodusMbnbgfr is durrfntly mbnbging fodus
     *        for this bpplidbtion or bpplft's browsfr dontfxt
     *        ("mbnbgingFodus")</li>
     *    <li>thf fodus ownfr ("fodusOwnfr")</li>
     *    <li>thf pfrmbnfnt fodus ownfr ("pfrmbnfntFodusOwnfr")</li>
     *    <li>thf fodusfd Window ("fodusfdWindow")</li>
     *    <li>thf bdtivf Window ("bdtivfWindow")</li>
     *    <li>thf dffbult fodus trbvfrsbl polidy
     *        ("dffbultFodusTrbvfrsblPolidy")</li>
     *    <li>thf Sft of dffbult FORWARD_TRAVERSAL_KEYS
     *        ("forwbrdDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult BACKWARD_TRAVERSAL_KEYS
     *        ("bbdkwbrdDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult UP_CYCLE_TRAVERSAL_KEYS
     *        ("upCydlfDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult DOWN_CYCLE_TRAVERSAL_KEYS
     *        ("downCydlfDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf durrfnt fodus dydlf root ("durrfntFodusCydlfRoot")</li>
     * </ul>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm listfnfr thf PropfrtyChbngfListfnfr to bf bddfd
     * @sff #rfmovfPropfrtyChbngfListfnfr
     * @sff #gftPropfrtyChbngfListfnfrs
     * @sff #bddPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     */
    publid void bddPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (dhbngfSupport == null) {
                    dhbngfSupport = nfw PropfrtyChbngfSupport(this);
                }
                dhbngfSupport.bddPropfrtyChbngfListfnfr(listfnfr);
            }
        }
    }

    /**
     * Rfmovfs b PropfrtyChbngfListfnfr from thf listfnfr list. This mfthod
     * should bf usfd to rfmovf thf PropfrtyChbngfListfnfrs thbt wfrf
     * rfgistfrfd for bll bound propfrtifs of this dlbss.
     * <p>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm listfnfr thf PropfrtyChbngfListfnfr to bf rfmovfd
     * @sff #bddPropfrtyChbngfListfnfr
     * @sff #gftPropfrtyChbngfListfnfrs
     * @sff #rfmovfPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     */
    publid void rfmovfPropfrtyChbngfListfnfr(PropfrtyChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (dhbngfSupport != null) {
                    dhbngfSupport.rfmovfPropfrtyChbngfListfnfr(listfnfr);
                }
            }
        }
    }

    /**
     * Rfturns bn brrby of bll thf propfrty dhbngf listfnfrs
     * rfgistfrfd on this kfybobrd fodus mbnbgfr.
     *
     * @rfturn bll of this kfybobrd fodus mbnbgfr's
     *         <dodf>PropfrtyChbngfListfnfr</dodf>s
     *         or bn fmpty brrby if no propfrty dhbngf
     *         listfnfrs brf durrfntly rfgistfrfd
     *
     * @sff #bddPropfrtyChbngfListfnfr
     * @sff #rfmovfPropfrtyChbngfListfnfr
     * @sff #gftPropfrtyChbngfListfnfrs(jbvb.lbng.String)
     * @sindf 1.4
     */
    publid syndhronizfd PropfrtyChbngfListfnfr[] gftPropfrtyChbngfListfnfrs() {
        if (dhbngfSupport == null) {
            dhbngfSupport = nfw PropfrtyChbngfSupport(this);
        }
        rfturn dhbngfSupport.gftPropfrtyChbngfListfnfrs();
    }

    /**
     * Adds b PropfrtyChbngfListfnfr to thf listfnfr list for b spfdifid
     * propfrty. Thf spfdififd propfrty mby bf usfr-dffinfd, or onf of thf
     * following:
     * <ul>
     *    <li>whfthfr thf KfybobrdFodusMbnbgfr is durrfntly mbnbging fodus
     *        for this bpplidbtion or bpplft's browsfr dontfxt
     *        ("mbnbgingFodus")</li>
     *    <li>thf fodus ownfr ("fodusOwnfr")</li>
     *    <li>thf pfrmbnfnt fodus ownfr ("pfrmbnfntFodusOwnfr")</li>
     *    <li>thf fodusfd Window ("fodusfdWindow")</li>
     *    <li>thf bdtivf Window ("bdtivfWindow")</li>
     *    <li>thf dffbult fodus trbvfrsbl polidy
     *        ("dffbultFodusTrbvfrsblPolidy")</li>
     *    <li>thf Sft of dffbult FORWARD_TRAVERSAL_KEYS
     *        ("forwbrdDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult BACKWARD_TRAVERSAL_KEYS
     *        ("bbdkwbrdDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult UP_CYCLE_TRAVERSAL_KEYS
     *        ("upCydlfDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf Sft of dffbult DOWN_CYCLE_TRAVERSAL_KEYS
     *        ("downCydlfDffbultFodusTrbvfrsblKfys")</li>
     *    <li>thf durrfnt fodus dydlf root ("durrfntFodusCydlfRoot")</li>
     * </ul>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm propfrtyNbmf onf of thf propfrty nbmfs listfd bbovf
     * @pbrbm listfnfr thf PropfrtyChbngfListfnfr to bf bddfd
     * @sff #bddPropfrtyChbngfListfnfr(jbvb.bfbns.PropfrtyChbngfListfnfr)
     * @sff #rfmovfPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     * @sff #gftPropfrtyChbngfListfnfrs(jbvb.lbng.String)
     */
    publid void bddPropfrtyChbngfListfnfr(String propfrtyNbmf,
                                          PropfrtyChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (dhbngfSupport == null) {
                    dhbngfSupport = nfw PropfrtyChbngfSupport(this);
                }
                dhbngfSupport.bddPropfrtyChbngfListfnfr(propfrtyNbmf,
                                                        listfnfr);
            }
        }
    }

    /**
     * Rfmovfs b PropfrtyChbngfListfnfr from thf listfnfr list for b spfdifid
     * propfrty. This mfthod should bf usfd to rfmovf PropfrtyChbngfListfnfrs
     * thbt wfrf rfgistfrfd for b spfdifid bound propfrty.
     * <p>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm propfrtyNbmf b vblid propfrty nbmf
     * @pbrbm listfnfr thf PropfrtyChbngfListfnfr to bf rfmovfd
     * @sff #bddPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     * @sff #gftPropfrtyChbngfListfnfrs(jbvb.lbng.String)
     * @sff #rfmovfPropfrtyChbngfListfnfr(jbvb.bfbns.PropfrtyChbngfListfnfr)
     */
    publid void rfmovfPropfrtyChbngfListfnfr(String propfrtyNbmf,
                                             PropfrtyChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (dhbngfSupport != null) {
                    dhbngfSupport.rfmovfPropfrtyChbngfListfnfr(propfrtyNbmf,
                                                               listfnfr);
                }
            }
        }
    }

    /**
     * Rfturns bn brrby of bll thf <dodf>PropfrtyChbngfListfnfr</dodf>s
     * bssodibtfd with thf nbmfd propfrty.
     *
     * @pbrbm  propfrtyNbmf thf propfrty nbmf
     * @rfturn bll of thf <dodf>PropfrtyChbngfListfnfr</dodf>s bssodibtfd with
     *         thf nbmfd propfrty or bn fmpty brrby if no sudh listfnfrs hbvf
     *         bffn bddfd.
     *
     * @sff #bddPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     * @sff #rfmovfPropfrtyChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.PropfrtyChbngfListfnfr)
     * @sindf 1.4
     */
    publid syndhronizfd PropfrtyChbngfListfnfr[] gftPropfrtyChbngfListfnfrs(String propfrtyNbmf) {
        if (dhbngfSupport == null) {
            dhbngfSupport = nfw PropfrtyChbngfSupport(this);
        }
        rfturn dhbngfSupport.gftPropfrtyChbngfListfnfrs(propfrtyNbmf);
    }

    /**
     * Firfs b PropfrtyChbngfEvfnt in rfsponsf to b dhbngf in b bound propfrty.
     * Thf fvfnt will bf dflivfrfd to bll rfgistfrfd PropfrtyChbngfListfnfrs.
     * No fvfnt will bf dflivfrfd if oldVbluf bnd nfwVbluf brf thf sbmf.
     *
     * @pbrbm propfrtyNbmf thf nbmf of thf propfrty thbt hbs dhbngfd
     * @pbrbm oldVbluf thf propfrty's prfvious vbluf
     * @pbrbm nfwVbluf thf propfrty's nfw vbluf
     */
    protfdtfd void firfPropfrtyChbngf(String propfrtyNbmf, Objfdt oldVbluf,
                                      Objfdt nfwVbluf)
    {
        if (oldVbluf == nfwVbluf) {
            rfturn;
        }
        PropfrtyChbngfSupport dhbngfSupport = this.dhbngfSupport;
        if (dhbngfSupport != null) {
            dhbngfSupport.firfPropfrtyChbngf(propfrtyNbmf, oldVbluf, nfwVbluf);
        }
    }

    /**
     * Adds b VftobblfChbngfListfnfr to thf listfnfr list. Thf listfnfr is
     * rfgistfrfd for bll vftobblf propfrtifs of this dlbss, indluding thf
     * following:
     * <ul>
     *    <li>thf fodus ownfr ("fodusOwnfr")</li>
     *    <li>thf pfrmbnfnt fodus ownfr ("pfrmbnfntFodusOwnfr")</li>
     *    <li>thf fodusfd Window ("fodusfdWindow")</li>
     *    <li>thf bdtivf Window ("bdtivfWindow")</li>
     * </ul>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm listfnfr thf VftobblfChbngfListfnfr to bf bddfd
     * @sff #rfmovfVftobblfChbngfListfnfr
     * @sff #gftVftobblfChbngfListfnfrs
     * @sff #bddVftobblfChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.VftobblfChbngfListfnfr)
     */
    publid void bddVftobblfChbngfListfnfr(VftobblfChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (vftobblfSupport == null) {
                    vftobblfSupport =
                        nfw VftobblfChbngfSupport(this);
                }
                vftobblfSupport.bddVftobblfChbngfListfnfr(listfnfr);
            }
        }
    }

    /**
     * Rfmovfs b VftobblfChbngfListfnfr from thf listfnfr list. This mfthod
     * should bf usfd to rfmovf thf VftobblfChbngfListfnfrs thbt wfrf
     * rfgistfrfd for bll vftobblf propfrtifs of this dlbss.
     * <p>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm listfnfr thf VftobblfChbngfListfnfr to bf rfmovfd
     * @sff #bddVftobblfChbngfListfnfr
     * @sff #gftVftobblfChbngfListfnfrs
     * @sff #rfmovfVftobblfChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.VftobblfChbngfListfnfr)
     */
    publid void rfmovfVftobblfChbngfListfnfr(VftobblfChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (vftobblfSupport != null) {
                    vftobblfSupport.rfmovfVftobblfChbngfListfnfr(listfnfr);
                }
            }
        }
    }

    /**
     * Rfturns bn brrby of bll thf vftobblf dhbngf listfnfrs
     * rfgistfrfd on this kfybobrd fodus mbnbgfr.
     *
     * @rfturn bll of this kfybobrd fodus mbnbgfr's
     *         <dodf>VftobblfChbngfListfnfr</dodf>s
     *         or bn fmpty brrby if no vftobblf dhbngf
     *         listfnfrs brf durrfntly rfgistfrfd
     *
     * @sff #bddVftobblfChbngfListfnfr
     * @sff #rfmovfVftobblfChbngfListfnfr
     * @sff #gftVftobblfChbngfListfnfrs(jbvb.lbng.String)
     * @sindf 1.4
     */
    publid syndhronizfd VftobblfChbngfListfnfr[] gftVftobblfChbngfListfnfrs() {
        if (vftobblfSupport == null) {
            vftobblfSupport = nfw VftobblfChbngfSupport(this);
        }
        rfturn vftobblfSupport.gftVftobblfChbngfListfnfrs();
    }

    /**
     * Adds b VftobblfChbngfListfnfr to thf listfnfr list for b spfdifid
     * propfrty. Thf spfdififd propfrty mby bf usfr-dffinfd, or onf of thf
     * following:
     * <ul>
     *    <li>thf fodus ownfr ("fodusOwnfr")</li>
     *    <li>thf pfrmbnfnt fodus ownfr ("pfrmbnfntFodusOwnfr")</li>
     *    <li>thf fodusfd Window ("fodusfdWindow")</li>
     *    <li>thf bdtivf Window ("bdtivfWindow")</li>
     * </ul>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm propfrtyNbmf onf of thf propfrty nbmfs listfd bbovf
     * @pbrbm listfnfr thf VftobblfChbngfListfnfr to bf bddfd
     * @sff #bddVftobblfChbngfListfnfr(jbvb.bfbns.VftobblfChbngfListfnfr)
     * @sff #rfmovfVftobblfChbngfListfnfr
     * @sff #gftVftobblfChbngfListfnfrs
     */
    publid void bddVftobblfChbngfListfnfr(String propfrtyNbmf,
                                          VftobblfChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (vftobblfSupport == null) {
                    vftobblfSupport =
                        nfw VftobblfChbngfSupport(this);
                }
                vftobblfSupport.bddVftobblfChbngfListfnfr(propfrtyNbmf,
                                                          listfnfr);
            }
        }
    }

    /**
     * Rfmovfs b VftobblfChbngfListfnfr from thf listfnfr list for b spfdifid
     * propfrty. This mfthod should bf usfd to rfmovf VftobblfChbngfListfnfrs
     * thbt wfrf rfgistfrfd for b spfdifid bound propfrty.
     * <p>
     * If listfnfr is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     *
     * @pbrbm propfrtyNbmf b vblid propfrty nbmf
     * @pbrbm listfnfr thf VftobblfChbngfListfnfr to bf rfmovfd
     * @sff #bddVftobblfChbngfListfnfr
     * @sff #gftVftobblfChbngfListfnfrs
     * @sff #rfmovfVftobblfChbngfListfnfr(jbvb.bfbns.VftobblfChbngfListfnfr)
     */
    publid void rfmovfVftobblfChbngfListfnfr(String propfrtyNbmf,
                                             VftobblfChbngfListfnfr listfnfr) {
        if (listfnfr != null) {
            syndhronizfd (this) {
                if (vftobblfSupport != null) {
                    vftobblfSupport.rfmovfVftobblfChbngfListfnfr(propfrtyNbmf,
                                                                 listfnfr);
                }
            }
        }
    }

    /**
     * Rfturns bn brrby of bll thf <dodf>VftobblfChbngfListfnfr</dodf>s
     * bssodibtfd with thf nbmfd propfrty.
     *
     * @pbrbm  propfrtyNbmf thf propfrty nbmf
     * @rfturn bll of thf <dodf>VftobblfChbngfListfnfr</dodf>s bssodibtfd with
     *         thf nbmfd propfrty or bn fmpty brrby if no sudh listfnfrs hbvf
     *         bffn bddfd.
     *
     * @sff #bddVftobblfChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.VftobblfChbngfListfnfr)
     * @sff #rfmovfVftobblfChbngfListfnfr(jbvb.lbng.String,jbvb.bfbns.VftobblfChbngfListfnfr)
     * @sff #gftVftobblfChbngfListfnfrs
     * @sindf 1.4
     */
    publid syndhronizfd VftobblfChbngfListfnfr[] gftVftobblfChbngfListfnfrs(String propfrtyNbmf) {
        if (vftobblfSupport == null) {
            vftobblfSupport = nfw VftobblfChbngfSupport(this);
        }
        rfturn vftobblfSupport.gftVftobblfChbngfListfnfrs(propfrtyNbmf);
    }

    /**
     * Firfs b PropfrtyChbngfEvfnt in rfsponsf to b dhbngf in b vftobblf
     * propfrty. Thf fvfnt will bf dflivfrfd to bll rfgistfrfd
     * VftobblfChbngfListfnfrs. If b VftobblfChbngfListfnfr throws b
     * PropfrtyVftoExdfption, b nfw fvfnt is firfd rfvfrting bll
     * VftobblfChbngfListfnfrs to thf old vbluf bnd thf fxdfption is thfn
     * rfthrown. No fvfnt will bf dflivfrfd if oldVbluf bnd nfwVbluf brf thf
     * sbmf.
     *
     * @pbrbm propfrtyNbmf thf nbmf of thf propfrty thbt hbs dhbngfd
     * @pbrbm oldVbluf thf propfrty's prfvious vbluf
     * @pbrbm nfwVbluf thf propfrty's nfw vbluf
     * @throws jbvb.bfbns.PropfrtyVftoExdfption if b
     *         <dodf>VftobblfChbngfListfnfr</dodf> thrfw
     *         <dodf>PropfrtyVftoExdfption</dodf>
     */
    protfdtfd void firfVftobblfChbngf(String propfrtyNbmf, Objfdt oldVbluf,
                                      Objfdt nfwVbluf)
        throws PropfrtyVftoExdfption
    {
        if (oldVbluf == nfwVbluf) {
            rfturn;
        }
        VftobblfChbngfSupport vftobblfSupport =
            this.vftobblfSupport;
        if (vftobblfSupport != null) {
            vftobblfSupport.firfVftobblfChbngf(propfrtyNbmf, oldVbluf,
                                               nfwVbluf);
        }
    }

    /**
     * Adds b KfyEvfntDispbtdhfr to this KfybobrdFodusMbnbgfr's dispbtdhfr
     * dhbin. This KfybobrdFodusMbnbgfr will rfqufst thbt fbdh
     * KfyEvfntDispbtdhfr dispbtdh KfyEvfnts gfnfrbtfd by thf usfr bfforf
     * finblly dispbtdhing thf KfyEvfnt itsflf. KfyEvfntDispbtdhfrs will bf
     * notififd in thf ordfr in whidh thfy wfrf bddfd. Notifidbtions will hblt
     * bs soon bs onf KfyEvfntDispbtdhfr rfturns <dodf>truf</dodf> from its
     * <dodf>dispbtdhKfyEvfnt</dodf> mfthod. Thfrf is no limit to thf totbl
     * numbfr of KfyEvfntDispbtdhfrs whidh dbn bf bddfd, nor to thf numbfr of
     * timfs whidh b pbrtidulbr KfyEvfntDispbtdhfr instbndf dbn bf bddfd.
     * <p>
     * If b null dispbtdhfr is spfdififd, no bdtion is tbkfn bnd no fxdfption
     * is thrown.
     * <p>
     * In b multithrfbdfd bpplidbtion, {@link KfyEvfntDispbtdhfr} bfhbvfs
     * thf sbmf bs othfr AWT listfnfrs.  Sff
     * <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for morf dftbils.
     *
     * @pbrbm dispbtdhfr thf KfyEvfntDispbtdhfr to bdd to thf dispbtdhfr dhbin
     * @sff #rfmovfKfyEvfntDispbtdhfr
     */
    publid void bddKfyEvfntDispbtdhfr(KfyEvfntDispbtdhfr dispbtdhfr) {
        if (dispbtdhfr != null) {
            syndhronizfd (this) {
                if (kfyEvfntDispbtdhfrs == null) {
                    kfyEvfntDispbtdhfrs = nfw jbvb.util.LinkfdList<>();
                }
                kfyEvfntDispbtdhfrs.bdd(dispbtdhfr);
            }
        }
    }

    /**
     * Rfmovfs b KfyEvfntDispbtdhfr whidh wbs prfviously bddfd to this
     * KfybobrdFodusMbnbgfr's dispbtdhfr dhbin. This KfybobrdFodusMbnbgfr
     * dbnnot itsflf bf rfmovfd, unlfss it wbs fxpliditly rf-rfgistfrfd vib b
     * dbll to <dodf>bddKfyEvfntDispbtdhfr</dodf>.
     * <p>
     * If b null dispbtdhfr is spfdififd, if thf spfdififd dispbtdhfr is not
     * in thf dispbtdhfr dhbin, or if this KfybobrdFodusMbnbgfr is spfdififd
     * without hbving bffn fxpliditly rf-rfgistfrfd, no bdtion is tbkfn bnd no
     * fxdfption is thrown.
     * <p>
     * In b multithrfbdfd bpplidbtion, {@link KfyEvfntDispbtdhfr} bfhbvfs
     * thf sbmf bs othfr AWT listfnfrs.  Sff
     * <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for morf dftbils.
     *
     * @pbrbm dispbtdhfr thf KfyEvfntDispbtdhfr to rfmovf from thf dispbtdhfr
     *        dhbin
     * @sff #bddKfyEvfntDispbtdhfr
     */
    publid void rfmovfKfyEvfntDispbtdhfr(KfyEvfntDispbtdhfr dispbtdhfr) {
        if (dispbtdhfr != null) {
            syndhronizfd (this) {
                if (kfyEvfntDispbtdhfrs != null) {
                    kfyEvfntDispbtdhfrs.rfmovf(dispbtdhfr);
                }
            }
        }
    }

    /**
     * Rfturns this KfybobrdFodusMbnbgfr's KfyEvfntDispbtdhfr dhbin bs b List.
     * Thf List will not indludf this KfybobrdFodusMbnbgfr unlfss it wbs
     * fxpliditly rf-rfgistfrfd vib b dbll to
     * <dodf>bddKfyEvfntDispbtdhfr</dodf>. If no othfr KfyEvfntDispbtdhfrs brf
     * rfgistfrfd, implfmfntbtions brf frff to rfturn null or b List of lfngth
     * 0. Clifnt dodf should not bssumf onf bfhbvior ovfr bnothfr, nor should
     * it bssumf thbt thf bfhbvior, ondf fstbblishfd, will not dhbngf.
     *
     * @rfturn b possibly null or fmpty List of KfyEvfntDispbtdhfrs
     * @sff #bddKfyEvfntDispbtdhfr
     * @sff #rfmovfKfyEvfntDispbtdhfr
     */
    @SupprfssWbrnings("undhfdkfd") // Cbst of rfsult of dlonf
    protfdtfd syndhronizfd jbvb.util.List<KfyEvfntDispbtdhfr>
        gftKfyEvfntDispbtdhfrs()
    {
        rfturn (kfyEvfntDispbtdhfrs != null)
            ? (jbvb.util.List<KfyEvfntDispbtdhfr>)kfyEvfntDispbtdhfrs.dlonf()
            : null;
    }

    /**
     * Adds b KfyEvfntPostProdfssor to this KfybobrdFodusMbnbgfr's post-
     * prodfssor dhbin. Aftfr b KfyEvfnt hbs bffn dispbtdhfd to bnd hbndlfd by
     * its tbrgft, KfybobrdFodusMbnbgfr will rfqufst thbt fbdh
     * KfyEvfntPostProdfssor pfrform bny nfdfssbry post-prodfssing bs pbrt
     * of thf KfyEvfnt's finbl rfsolution. KfyEvfntPostProdfssors
     * will bf notififd in thf ordfr in whidh thfy wfrf bddfd; thf durrfnt
     * KfybobrdFodusMbnbgfr will bf notififd lbst. Notifidbtions will hblt
     * bs soon bs onf KfyEvfntPostProdfssor rfturns <dodf>truf</dodf> from its
     * <dodf>postProdfssKfyEvfnt</dodf> mfthod. Thfrf is no limit to thf thf
     * totbl numbfr of KfyEvfntPostProdfssors thbt dbn bf bddfd, nor to thf
     * numbfr of timfs thbt b pbrtidulbr KfyEvfntPostProdfssor instbndf dbn bf
     * bddfd.
     * <p>
     * If b null post-prodfssor is spfdififd, no bdtion is tbkfn bnd no
     * fxdfption is thrown.
     * <p>
     * In b multithrfbdfd bpplidbtion, {@link KfyEvfntPostProdfssor} bfhbvfs
     * thf sbmf bs othfr AWT listfnfrs.  Sff
     * <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for morf dftbils.
     *
     * @pbrbm prodfssor thf KfyEvfntPostProdfssor to bdd to thf post-prodfssor
     *        dhbin
     * @sff #rfmovfKfyEvfntPostProdfssor
     */
    publid void bddKfyEvfntPostProdfssor(KfyEvfntPostProdfssor prodfssor) {
        if (prodfssor != null) {
            syndhronizfd (this) {
                if (kfyEvfntPostProdfssors == null) {
                    kfyEvfntPostProdfssors = nfw jbvb.util.LinkfdList<>();
                }
                kfyEvfntPostProdfssors.bdd(prodfssor);
            }
        }
    }


    /**
     * Rfmovfs b prfviously bddfd KfyEvfntPostProdfssor from this
     * KfybobrdFodusMbnbgfr's post-prodfssor dhbin. This KfybobrdFodusMbnbgfr
     * dbnnot itsflf bf fntirfly rfmovfd from thf dhbin. Only bdditionbl
     * rfffrfndfs bddfd vib <dodf>bddKfyEvfntPostProdfssor</dodf> dbn bf
     * rfmovfd.
     * <p>
     * If b null post-prodfssor is spfdififd, if thf spfdififd post-prodfssor
     * is not in thf post-prodfssor dhbin, or if this KfybobrdFodusMbnbgfr is
     * spfdififd without hbving bffn fxpliditly bddfd, no bdtion is tbkfn bnd
     * no fxdfption is thrown.
     * <p>
     * In b multithrfbdfd bpplidbtion, {@link KfyEvfntPostProdfssor} bfhbvfs
     * thf sbmf bs othfr AWT listfnfrs.  Sff
     * <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for morf dftbils.
     *
     * @pbrbm prodfssor thf KfyEvfntPostProdfssor to rfmovf from thf post-
     *        prodfssor dhbin
     * @sff #bddKfyEvfntPostProdfssor
     */
    publid void rfmovfKfyEvfntPostProdfssor(KfyEvfntPostProdfssor prodfssor) {
        if (prodfssor != null) {
            syndhronizfd (this) {
                if (kfyEvfntPostProdfssors != null) {
                    kfyEvfntPostProdfssors.rfmovf(prodfssor);
                }
            }
        }
    }


    /**
     * Rfturns this KfybobrdFodusMbnbgfr's KfyEvfntPostProdfssor dhbin bs b
     * List. Thf List will not indludf this KfybobrdFodusMbnbgfr unlfss it wbs
     * fxpliditly bddfd vib b dbll to <dodf>bddKfyEvfntPostProdfssor</dodf>. If
     * no KfyEvfntPostProdfssors brf rfgistfrfd, implfmfntbtions brf frff to
     * rfturn null or b List of lfngth 0. Clifnt dodf should not bssumf onf
     * bfhbvior ovfr bnothfr, nor should it bssumf thbt thf bfhbvior, ondf
     * fstbblishfd, will not dhbngf.
     *
     * @rfturn b possibly null or fmpty List of KfyEvfntPostProdfssors
     * @sff #bddKfyEvfntPostProdfssor
     * @sff #rfmovfKfyEvfntPostProdfssor
     */
    @SupprfssWbrnings("undhfdkfd") // Cbst of rfsult of dlonf
    protfdtfd jbvb.util.List<KfyEvfntPostProdfssor>
        gftKfyEvfntPostProdfssors()
    {
        rfturn (kfyEvfntPostProdfssors != null)
            ? (jbvb.util.List<KfyEvfntPostProdfssor>)kfyEvfntPostProdfssors.dlonf()
            : null;
    }



    stbtid void sftMostRfdfntFodusOwnfr(Componfnt domponfnt) {
        Componfnt window = domponfnt;
        whilf (window != null && !(window instbndfof Window)) {
            window = window.pbrfnt;
        }
        if (window != null) {
            sftMostRfdfntFodusOwnfr((Window)window, domponfnt);
        }
    }
    stbtid syndhronizfd void sftMostRfdfntFodusOwnfr(Window window,
                                                     Componfnt domponfnt) {
        // ATTN: domponfnt hbs b strong rfffrfndf to window vib dhbin
        // of Componfnt.pbrfnt fiflds.  Sindf WfbkHbsMbp rfffrs to its
        // vblufs strongly, wf nffd to brfbk thf strong link from thf
        // vbluf (domponfnt) bbdk to its kfy (window).
        WfbkRfffrfndf<Componfnt> wfbkVbluf = null;
        if (domponfnt != null) {
            wfbkVbluf = nfw WfbkRfffrfndf<>(domponfnt);
        }
        mostRfdfntFodusOwnfrs.put(window, wfbkVbluf);
    }
    stbtid void dlfbrMostRfdfntFodusOwnfr(Componfnt domp) {
        Contbinfr window;

        if (domp == null) {
            rfturn;
        }

        syndhronizfd (domp.gftTrffLodk()) {
            window = domp.gftPbrfnt();
            whilf (window != null && !(window instbndfof Window)) {
                window = window.gftPbrfnt();
            }
        }

        syndhronizfd (KfybobrdFodusMbnbgfr.dlbss) {
            if ((window != null)
                && (gftMostRfdfntFodusOwnfr((Window)window) == domp))
            {
                sftMostRfdfntFodusOwnfr((Window)window, null);
            }
            // Also dlfbr tfmporbry lost domponfnt storfd in Window
            if (window != null) {
                Window rfblWindow = (Window)window;
                if (rfblWindow.gftTfmporbryLostComponfnt() == domp) {
                    rfblWindow.sftTfmporbryLostComponfnt(null);
                }
            }
        }
    }

    /*
     * Plfbsf bf dbrfful dhbnging this mfthod! It is dbllfd from
     * jbvbx.swing.JComponfnt.runInputVfrififr() using rfflfdtion.
     */
    stbtid syndhronizfd Componfnt gftMostRfdfntFodusOwnfr(Window window) {
        WfbkRfffrfndf<Componfnt> wfbkVbluf = mostRfdfntFodusOwnfrs.gft(window);
        rfturn wfbkVbluf == null ? null : wfbkVbluf.gft();
    }

    /**
     * This mfthod is dbllfd by thf AWT fvfnt dispbtdhfr rfqufsting thbt thf
     * durrfnt KfybobrdFodusMbnbgfr dispbtdh thf spfdififd fvfnt on its bfhblf.
     * It is fxpfdtfd thbt bll KfybobrdFodusMbnbgfrs will dispbtdh bll
     * FodusEvfnts, bll WindowEvfnts rflbtfd to fodus, bnd bll KfyEvfnts.
     * Thfsf fvfnts should bf dispbtdhfd bbsfd on thf KfybobrdFodusMbnbgfr's
     * notion of thf fodus ownfr bnd thf fodusfd bnd bdtivf Windows, somftimfs
     * ovfrriding thf sourdf of thf spfdififd AWTEvfnt. Dispbtdhing must bf
     * donf using <dodf>rfdispbtdhEvfnt</dodf> to prfvfnt thf AWT fvfnt
     * dispbtdhfr from rfdursivfly rfqufsting thbt thf KfybobrdFodusMbnbgfr
     * dispbtdh thf fvfnt bgbin. If this mfthod rfturns <dodf>fblsf</dodf>,
     * thfn thf AWT fvfnt dispbtdhfr will bttfmpt to dispbtdh thf fvfnt itsflf.
     *
     * @pbrbm f thf AWTEvfnt to bf dispbtdhfd
     * @rfturn <dodf>truf</dodf> if this mfthod dispbtdhfd thf fvfnt;
     *         <dodf>fblsf</dodf> othfrwisf
     * @sff #rfdispbtdhEvfnt
     * @sff #dispbtdhKfyEvfnt
     */
    publid bbstrbdt boolfbn dispbtdhEvfnt(AWTEvfnt f);

    /**
     * Rfdispbtdhfs bn AWTEvfnt in sudh b wby thbt thf AWT fvfnt dispbtdhfr
     * will not rfdursivfly rfqufst thbt thf KfybobrdFodusMbnbgfr, or bny
     * instbllfd KfyEvfntDispbtdhfrs, dispbtdh thf fvfnt bgbin. Clifnt
     * implfmfntbtions of <dodf>dispbtdhEvfnt</dodf> bnd dlifnt-dffinfd
     * KfyEvfntDispbtdhfrs must dbll <dodf>rfdispbtdhEvfnt(tbrgft, f)</dodf>
     * instfbd of <dodf>tbrgft.dispbtdhEvfnt(f)</dodf> to dispbtdh bn fvfnt.
     * <p>
     * This mfthod is intfndfd to bf usfd only by KfybobrdFodusMbnbgfrs bnd
     * KfyEvfntDispbtdhfrs. It is not for gfnfrbl dlifnt usf.
     *
     * @pbrbm tbrgft thf Componfnt to whidh thf fvfnt should bf dispbtdhfd
     * @pbrbm f thf fvfnt to dispbtdh
     * @sff #dispbtdhEvfnt
     * @sff KfyEvfntDispbtdhfr
     */
    publid finbl void rfdispbtdhEvfnt(Componfnt tbrgft, AWTEvfnt f) {
        f.fodusMbnbgfrIsDispbtdhing = truf;
        tbrgft.dispbtdhEvfnt(f);
        f.fodusMbnbgfrIsDispbtdhing = fblsf;
    }

    /**
     * Typidblly this mfthod will bf dbllfd by <dodf>dispbtdhEvfnt</dodf> if no
     * othfr KfyEvfntDispbtdhfr in thf dispbtdhfr dhbin dispbtdhfd thf
     * KfyEvfnt, or if no othfr KfyEvfntDispbtdhfrs brf rfgistfrfd. If bn
     * implfmfntbtion of this mfthod rfturns <dodf>fblsf</dodf>,
     * <dodf>dispbtdhEvfnt</dodf> mby try to dispbtdh thf KfyEvfnt itsflf, or
     * mby simply rfturn <dodf>fblsf</dodf>. If <dodf>truf</dodf> is rfturnfd,
     * <dodf>dispbtdhEvfnt</dodf> should rfturn <dodf>truf</dodf> bs wfll.
     *
     * @pbrbm f thf KfyEvfnt whidh thf durrfnt KfybobrdFodusMbnbgfr hbs
     *        rfqufstfd thbt this KfyEvfntDispbtdhfr dispbtdh
     * @rfturn <dodf>truf</dodf> if thf KfyEvfnt wbs dispbtdhfd;
     *         <dodf>fblsf</dodf> othfrwisf
     * @sff #dispbtdhEvfnt
     */
    publid bbstrbdt boolfbn dispbtdhKfyEvfnt(KfyEvfnt f);

    /**
     * This mfthod will bf dbllfd by <dodf>dispbtdhKfyEvfnt</dodf>.
     * By dffbult, this mfthod will hbndlf bny undonsumfd KfyEvfnts thbt
     * mbp to bn AWT <dodf>MfnuShortdut</dodf> by donsuming thf fvfnt
     * bnd bdtivbting thf shortdut.
     *
     * @pbrbm f thf KfyEvfnt to post-prodfss
     * @rfturn <dodf>truf</dodf> to indidbtf thbt no othfr
     *         KfyEvfntPostProdfssor will bf notififd of thf KfyEvfnt.
     * @sff #dispbtdhKfyEvfnt
     * @sff MfnuShortdut
     */
    publid bbstrbdt boolfbn postProdfssKfyEvfnt(KfyEvfnt f);

    /**
     * This mfthod initibtfs b fodus trbvfrsbl opfrbtion if bnd only if thf
     * KfyEvfnt rfprfsfnts b fodus trbvfrsbl kfy for thf spfdififd
     * fodusfdComponfnt. It is fxpfdtfd thbt fodusfdComponfnt is thf durrfnt
     * fodus ownfr, blthough this nffd not bf thf dbsf. If it is not,
     * fodus trbvfrsbl will nfvfrthflfss prodffd bs if fodusfdComponfnt
     * wfrf thf durrfnt fodus ownfr.
     *
     * @pbrbm fodusfdComponfnt thf Componfnt thbt will bf thf bbsis for b fodus
     *        trbvfrsbl opfrbtion if thf spfdififd fvfnt rfprfsfnts b fodus
     *        trbvfrsbl kfy for thf Componfnt
     * @pbrbm f thf fvfnt thbt mby rfprfsfnt b fodus trbvfrsbl kfy
     */
    publid bbstrbdt void prodfssKfyEvfnt(Componfnt fodusfdComponfnt,
                                         KfyEvfnt f);

    /**
     * Cbllfd by thf AWT to notify thf KfybobrdFodusMbnbgfr thbt it should
     * dflby dispbtdhing of KfyEvfnts until thf spfdififd Componfnt bfdomfs
     * thf fodus ownfr. If dlifnt dodf rfqufsts b fodus dhbngf, bnd thf AWT
     * dftfrminfs thbt this rfqufst might bf grbntfd by thf nbtivf windowing
     * systfm, thfn thf AWT will dbll this mfthod. It is thf rfsponsibility of
     * thf KfybobrdFodusMbnbgfr to dflby dispbtdhing of KfyEvfnts with
     * timfstbmps lbtfr thbn thf spfdififd timf stbmp until thf spfdififd
     * Componfnt rfdfivfs b FOCUS_GAINED fvfnt, or thf AWT dbndfls thf dflby
     * rfqufst by invoking <dodf>dfqufufKfyEvfnts</dodf> or
     * <dodf>disdbrdKfyEvfnts</dodf>.
     *
     * @pbrbm bftfr timfstbmp of durrfnt fvfnt, or thf durrfnt, systfm timf if
     *        thf durrfnt fvfnt hbs no timfstbmp, or thf AWT dbnnot dftfrminf
     *        whidh fvfnt is durrfntly bfing hbndlfd
     * @pbrbm untilFodusfd Componfnt whidh should rfdfivf b FOCUS_GAINED fvfnt
     *        bfforf bny pfnding KfyEvfnts
     * @sff #dfqufufKfyEvfnts
     * @sff #disdbrdKfyEvfnts
     */
    protfdtfd bbstrbdt void fnqufufKfyEvfnts(long bftfr,
                                             Componfnt untilFodusfd);

    /**
     * Cbllfd by thf AWT to notify thf KfybobrdFodusMbnbgfr thbt it should
     * dbndfl dflbyfd dispbtdhing of KfyEvfnts. All KfyEvfnts whidh wfrf
     * fnqufufd bfdbusf of b dbll to <dodf>fnqufufKfyEvfnts</dodf> with thf
     * sbmf timfstbmp bnd Componfnt should bf rflfbsfd for normbl dispbtdhing
     * to thf durrfnt fodus ownfr. If thf givfn timfstbmp is lfss thbn zfro,
     * thf outstbnding fnqufuf rfqufst for thf givfn Componfnt with thf <b>
     * oldfst</b> timfstbmp (if bny) should bf dbndfllfd.
     *
     * @pbrbm bftfr thf timfstbmp spfdififd in thf dbll to
     *        <dodf>fnqufufKfyEvfnts</dodf>, or bny vbluf &lt; 0
     * @pbrbm untilFodusfd thf Componfnt spfdififd in thf dbll to
     *        <dodf>fnqufufKfyEvfnts</dodf>
     * @sff #fnqufufKfyEvfnts
     * @sff #disdbrdKfyEvfnts
     */
    protfdtfd bbstrbdt void dfqufufKfyEvfnts(long bftfr,
                                             Componfnt untilFodusfd);

    /**
     * Cbllfd by thf AWT to notify thf KfybobrdFodusMbnbgfr thbt it should
     * dbndfl dflbyfd dispbtdhing of KfyEvfnts. All KfyEvfnts whidh wfrf
     * fnqufufd bfdbusf of onf or morf dblls to <dodf>fnqufufKfyEvfnts</dodf>
     * with thf sbmf Componfnt should bf disdbrdfd.
     *
     * @pbrbm domp thf Componfnt spfdififd in onf or morf dblls to
     *        <dodf>fnqufufKfyEvfnts</dodf>
     * @sff #fnqufufKfyEvfnts
     * @sff #dfqufufKfyEvfnts
     */
    protfdtfd bbstrbdt void disdbrdKfyEvfnts(Componfnt domp);

    /**
     * Fodusfs thf Componfnt bftfr bComponfnt, typidblly bbsfd on b
     * FodusTrbvfrsblPolidy.
     *
     * @pbrbm bComponfnt thf Componfnt thbt is thf bbsis for thf fodus
     *        trbvfrsbl opfrbtion
     * @sff FodusTrbvfrsblPolidy
     */
    publid bbstrbdt void fodusNfxtComponfnt(Componfnt bComponfnt);

    /**
     * Fodusfs thf Componfnt bfforf bComponfnt, typidblly bbsfd on b
     * FodusTrbvfrsblPolidy.
     *
     * @pbrbm bComponfnt thf Componfnt thbt is thf bbsis for thf fodus
     *        trbvfrsbl opfrbtion
     * @sff FodusTrbvfrsblPolidy
     */
    publid bbstrbdt void fodusPrfviousComponfnt(Componfnt bComponfnt);

    /**
     * Movfs thf fodus up onf fodus trbvfrsbl dydlf. Typidblly, thf fodus ownfr
     * is sft to bComponfnt's fodus dydlf root, bnd thf durrfnt fodus dydlf
     * root is sft to thf nfw fodus ownfr's fodus dydlf root. If, howfvfr,
     * bComponfnt's fodus dydlf root is b Window, thfn typidblly thf fodus
     * ownfr is sft to thf Window's dffbult Componfnt to fodus, bnd thf durrfnt
     * fodus dydlf root is undhbngfd.
     *
     * @pbrbm bComponfnt thf Componfnt thbt is thf bbsis for thf fodus
     *        trbvfrsbl opfrbtion
     */
    publid bbstrbdt void upFodusCydlf(Componfnt bComponfnt);

    /**
     * Movfs thf fodus down onf fodus trbvfrsbl dydlf. Typidblly, if
     * bContbinfr is b fodus dydlf root, thfn thf fodus ownfr is sft to
     * bContbinfr's dffbult Componfnt to fodus, bnd thf durrfnt fodus dydlf
     * root is sft to bContbinfr. If bContbinfr is not b fodus dydlf root, thfn
     * no fodus trbvfrsbl opfrbtion oddurs.
     *
     * @pbrbm bContbinfr thf Contbinfr thbt is thf bbsis for thf fodus
     *        trbvfrsbl opfrbtion
     */
    publid bbstrbdt void downFodusCydlf(Contbinfr bContbinfr);

    /**
     * Fodusfs thf Componfnt bftfr thf durrfnt fodus ownfr.
     */
    publid finbl void fodusNfxtComponfnt() {
        Componfnt fodusOwnfr = gftFodusOwnfr();
        if (fodusOwnfr != null) {
            fodusNfxtComponfnt(fodusOwnfr);
        }
    }

    /**
     * Fodusfs thf Componfnt bfforf thf durrfnt fodus ownfr.
     */
    publid finbl void fodusPrfviousComponfnt() {
        Componfnt fodusOwnfr = gftFodusOwnfr();
        if (fodusOwnfr != null) {
            fodusPrfviousComponfnt(fodusOwnfr);
        }
    }

    /**
     * Movfs thf fodus up onf fodus trbvfrsbl dydlf from thf durrfnt fodus
     * ownfr. Typidblly, thf nfw fodus ownfr is sft to thf durrfnt fodus
     * ownfr's fodus dydlf root, bnd thf durrfnt fodus dydlf root is sft to thf
     * nfw fodus ownfr's fodus dydlf root. If, howfvfr, thf durrfnt fodus
     * ownfr's fodus dydlf root is b Window, thfn typidblly thf fodus ownfr is
     * sft to thf fodus dydlf root's dffbult Componfnt to fodus, bnd thf
     * durrfnt fodus dydlf root is undhbngfd.
     */
    publid finbl void upFodusCydlf() {
        Componfnt fodusOwnfr = gftFodusOwnfr();
        if (fodusOwnfr != null) {
            upFodusCydlf(fodusOwnfr);
        }
    }

    /**
     * Movfs thf fodus down onf fodus trbvfrsbl dydlf from thf durrfnt fodus
     * ownfr, if bnd only if thf durrfnt fodus ownfr is b Contbinfr thbt is b
     * fodus dydlf root. Typidblly, thf fodus ownfr is sft to thf durrfnt fodus
     * ownfr's dffbult Componfnt to fodus, bnd thf durrfnt fodus dydlf root is
     * sft to thf durrfnt fodus ownfr. If thf durrfnt fodus ownfr is not b
     * Contbinfr thbt is b fodus dydlf root, thfn no fodus trbvfrsbl opfrbtion
     * oddurs.
     */
    publid finbl void downFodusCydlf() {
        Componfnt fodusOwnfr = gftFodusOwnfr();
        if (fodusOwnfr instbndfof Contbinfr) {
            downFodusCydlf((Contbinfr)fodusOwnfr);
        }
    }

    /**
     * Dumps thf list of fodus rfqufsts to stdfrr
     */
    void dumpRfqufsts() {
        Systfm.frr.println(">>> Rfqufsts dump, timf: " + Systfm.durrfntTimfMillis());
        syndhronizfd (hfbvywfightRfqufsts) {
            for (HfbvywfightFodusRfqufst rfq : hfbvywfightRfqufsts) {
                Systfm.frr.println(">>> Rfq: " + rfq);
            }
        }
        Systfm.frr.println("");
    }

    privbtf stbtid finbl dlbss LightwfightFodusRfqufst {
        finbl Componfnt domponfnt;
        finbl boolfbn tfmporbry;
        finbl CbusfdFodusEvfnt.Cbusf dbusf;

        LightwfightFodusRfqufst(Componfnt domponfnt, boolfbn tfmporbry, CbusfdFodusEvfnt.Cbusf dbusf) {
            this.domponfnt = domponfnt;
            this.tfmporbry = tfmporbry;
            this.dbusf = dbusf;
        }
        publid String toString() {
            rfturn "LightwfightFodusRfqufst[domponfnt=" + domponfnt +
                ",tfmporbry=" + tfmporbry + ", dbusf=" + dbusf + "]";
        }
    }

    privbtf stbtid finbl dlbss HfbvywfightFodusRfqufst {
        finbl Componfnt hfbvywfight;
        finbl LinkfdList<LightwfightFodusRfqufst> lightwfightRfqufsts;

        stbtid finbl HfbvywfightFodusRfqufst CLEAR_GLOBAL_FOCUS_OWNER =
            nfw HfbvywfightFodusRfqufst();

        privbtf HfbvywfightFodusRfqufst() {
            hfbvywfight = null;
            lightwfightRfqufsts = null;
        }

        HfbvywfightFodusRfqufst(Componfnt hfbvywfight, Componfnt dfsdfndbnt,
                                boolfbn tfmporbry, CbusfdFodusEvfnt.Cbusf dbusf) {
            if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
                if (hfbvywfight == null) {
                    log.finf("Assfrtion (hfbvywfight != null) fbilfd");
                }
            }

            this.hfbvywfight = hfbvywfight;
            this.lightwfightRfqufsts = nfw LinkfdList<LightwfightFodusRfqufst>();
            bddLightwfightRfqufst(dfsdfndbnt, tfmporbry, dbusf);
        }
        boolfbn bddLightwfightRfqufst(Componfnt dfsdfndbnt,
                                      boolfbn tfmporbry, CbusfdFodusEvfnt.Cbusf dbusf) {
            if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
                if (this == HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER) {
                    log.finf("Assfrtion (this != HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER) fbilfd");
                }
                if (dfsdfndbnt == null) {
                    log.finf("Assfrtion (dfsdfndbnt != null) fbilfd");
                }
            }

            Componfnt lbstDfsdfndbnt = ((lightwfightRfqufsts.sizf() > 0)
                ? lightwfightRfqufsts.gftLbst().domponfnt
                : null);

            if (dfsdfndbnt != lbstDfsdfndbnt) {
                // Not b duplidbtf rfqufst
                lightwfightRfqufsts.bdd
                    (nfw LightwfightFodusRfqufst(dfsdfndbnt, tfmporbry, dbusf));
                rfturn truf;
            } flsf {
                rfturn fblsf;
            }
        }

        LightwfightFodusRfqufst gftFirstLightwfightRfqufst() {
            if (this == CLEAR_GLOBAL_FOCUS_OWNER) {
                rfturn null;
            }
            rfturn lightwfightRfqufsts.gftFirst();
        }
        publid String toString() {
            boolfbn first = truf;
            String str = "HfbvywfightFodusRfqufst[hfbvwfight=" + hfbvywfight +
                ",lightwfightRfqufsts=";
            if (lightwfightRfqufsts == null) {
                str += null;
            } flsf {
                str += "[";

                for (LightwfightFodusRfqufst lwRfqufst : lightwfightRfqufsts) {
                    if (first) {
                        first = fblsf;
                    } flsf {
                        str += ",";
                    }
                    str += lwRfqufst;
                }
                str += "]";
            }
            str += "]";
            rfturn str;
        }
    }

    /*
     * hfbvywfightRfqufsts is usfd bs b monitor for syndhronizfd dhbngfs of
     * durrfntLightwfightRfqufsts, dlfbringCurrfntLightwfightRfqufsts bnd
     * nfwFodusOwnfr.
     */
    privbtf stbtid LinkfdList<HfbvywfightFodusRfqufst> hfbvywfightRfqufsts =
        nfw LinkfdList<HfbvywfightFodusRfqufst>();
    privbtf stbtid LinkfdList<LightwfightFodusRfqufst> durrfntLightwfightRfqufsts;
    privbtf stbtid boolfbn dlfbringCurrfntLightwfightRfqufsts;
    privbtf stbtid boolfbn bllowSyndFodusRfqufsts = truf;
    privbtf stbtid Componfnt nfwFodusOwnfr = null;
    privbtf stbtid volbtilf boolfbn disbblfRfstorfFodus;

    stbtid finbl int SNFH_FAILURE = 0;
    stbtid finbl int SNFH_SUCCESS_HANDLED = 1;
    stbtid finbl int SNFH_SUCCESS_PROCEED = 2;

    stbtid boolfbn prodfssSyndhronousLightwfightTrbnsffr(Componfnt hfbvywfight, Componfnt dfsdfndbnt,
                                                  boolfbn tfmporbry, boolfbn fodusfdWindowChbngfAllowfd,
                                                  long timf)
    {
        Window pbrfntWindow = SunToolkit.gftContbiningWindow(hfbvywfight);
        if (pbrfntWindow == null || !pbrfntWindow.syndLWRfqufsts) {
            rfturn fblsf;
        }
        if (dfsdfndbnt == null) {
            // Fodus trbnsffrs from b lightwfight dhild bbdk to thf
            // hfbvywfight Contbinfr should bf trfbtfd likf lightwfight
            // fodus trbnsffrs.
            dfsdfndbnt = hfbvywfight;
        }

        KfybobrdFodusMbnbgfr mbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr(SunToolkit.tbrgftToAppContfxt(dfsdfndbnt));

        FodusEvfnt durrfntFodusOwnfrEvfnt = null;
        FodusEvfnt nfwFodusOwnfrEvfnt = null;
        Componfnt durrfntFodusOwnfr = mbnbgfr.gftGlobblFodusOwnfr();

        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftLbstHWRfqufst();
            if (hwFodusRfqufst == null &&
                hfbvywfight == mbnbgfr.gftNbtivfFodusOwnfr() &&
                bllowSyndFodusRfqufsts)
            {

                if (dfsdfndbnt == durrfntFodusOwnfr) {
                    // Rfdundbnt rfqufst.
                    rfturn truf;
                }

                // 'hfbvywfight' owns thf nbtivf fodus bnd thfrf brf no pfnding
                // rfqufsts. 'hfbvywfight' must bf b Contbinfr bnd
                // 'dfsdfndbnt' must not bf thf fodus ownfr. Othfrwisf,
                // wf would nfvfr hbvf gottfn this fbr.
                mbnbgfr.fnqufufKfyEvfnts(timf, dfsdfndbnt);

                hwFodusRfqufst =
                    nfw HfbvywfightFodusRfqufst(hfbvywfight, dfsdfndbnt,
                                                tfmporbry, CbusfdFodusEvfnt.Cbusf.UNKNOWN);
                hfbvywfightRfqufsts.bdd(hwFodusRfqufst);

                if (durrfntFodusOwnfr != null) {
                    durrfntFodusOwnfrEvfnt =
                        nfw FodusEvfnt(durrfntFodusOwnfr,
                                       FodusEvfnt.FOCUS_LOST,
                                       tfmporbry, dfsdfndbnt);
                }
                nfwFodusOwnfrEvfnt =
                    nfw FodusEvfnt(dfsdfndbnt, FodusEvfnt.FOCUS_GAINED,
                                   tfmporbry, durrfntFodusOwnfr);
            }
        }
        boolfbn rfsult = fblsf;
        finbl boolfbn dlfbring = dlfbringCurrfntLightwfightRfqufsts;

        Throwbblf dbughtEx = null;
        try {
            dlfbringCurrfntLightwfightRfqufsts = fblsf;
            syndhronizfd(Componfnt.LOCK) {

                if (durrfntFodusOwnfrEvfnt != null && durrfntFodusOwnfr != null) {
                    ((AWTEvfnt) durrfntFodusOwnfrEvfnt).isPostfd = truf;
                    dbughtEx = dispbtdhAndCbtdhExdfption(dbughtEx, durrfntFodusOwnfr, durrfntFodusOwnfrEvfnt);
                    rfsult = truf;
                }

                if (nfwFodusOwnfrEvfnt != null && dfsdfndbnt != null) {
                    ((AWTEvfnt) nfwFodusOwnfrEvfnt).isPostfd = truf;
                    dbughtEx = dispbtdhAndCbtdhExdfption(dbughtEx, dfsdfndbnt, nfwFodusOwnfrEvfnt);
                    rfsult = truf;
                }
            }
        } finblly {
            dlfbringCurrfntLightwfightRfqufsts = dlfbring;
        }
        if (dbughtEx instbndfof RuntimfExdfption) {
            throw (RuntimfExdfption)dbughtEx;
        } flsf if (dbughtEx instbndfof Error) {
            throw (Error)dbughtEx;
        }
        rfturn rfsult;
    }

    /**
     * Indidbtfs whfthfr thf nbtivf implfmfntbtion should prodffd with b
     * pfnding, nbtivf fodus rfqufst. Bfforf dhbnging thf fodus bt thf nbtivf
     * lfvfl, thf AWT implfmfntbtion should blwbys dbll this fundtion for
     * pfrmission. This fundtion will rfjfdt thf rfqufst if b duplidbtf rfqufst
     * prfdfdfd it, or if thf spfdififd hfbvywfight Componfnt blrfbdy owns thf
     * fodus bnd no nbtivf fodus dhbngfs brf pfnding. Othfrwisf, thf rfqufst
     * will bf bpprovfd bnd thf fodus rfqufst list will bf updbtfd so thbt,
     * if nfdfssbry, thf propfr dfsdfndbnt will bf fodusfd whfn thf
     * dorrfsponding FOCUS_GAINED fvfnt on thf hfbvywfight is rfdfivfd.
     *
     * An implfmfntbtion must fnsurf thbt dblls to this mfthod bnd nbtivf
     * fodus dhbngfs brf btomid. If this is not gubrbntffd, thfn thf ordfring
     * of thf fodus rfqufst list mby bf indorrfdt, lfbding to frrors in thf
     * typf-bhfbd mfdhbnism. Typidblly this is bddomplishfd by only dblling
     * this fundtion from thf nbtivf fvfnt pumping thrfbd, or by holding b
     * globbl, nbtivf lodk during invodbtion.
     */
    stbtid int shouldNbtivflyFodusHfbvywfight
        (Componfnt hfbvywfight, Componfnt dfsdfndbnt, boolfbn tfmporbry,
         boolfbn fodusfdWindowChbngfAllowfd, long timf, CbusfdFodusEvfnt.Cbusf dbusf)
    {
        if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
            if (hfbvywfight == null) {
                log.finf("Assfrtion (hfbvywfight != null) fbilfd");
            }
            if (timf == 0) {
                log.finf("Assfrtion (timf != 0) fbilfd");
            }
        }

        if (dfsdfndbnt == null) {
            // Fodus trbnsffrs from b lightwfight dhild bbdk to thf
            // hfbvywfight Contbinfr should bf trfbtfd likf lightwfight
            // fodus trbnsffrs.
            dfsdfndbnt = hfbvywfight;
        }

        KfybobrdFodusMbnbgfr mbnbgfr =
            gftCurrfntKfybobrdFodusMbnbgfr(SunToolkit.tbrgftToAppContfxt(dfsdfndbnt));
        KfybobrdFodusMbnbgfr thisMbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr();
        Componfnt durrfntFodusOwnfr = thisMbnbgfr.gftGlobblFodusOwnfr();
        Componfnt nbtivfFodusOwnfr = thisMbnbgfr.gftNbtivfFodusOwnfr();
        Window nbtivfFodusfdWindow = thisMbnbgfr.gftNbtivfFodusfdWindow();
        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
            fodusLog.finfr("SNFH for {0} in {1}",
                       String.vblufOf(dfsdfndbnt), String.vblufOf(hfbvywfight));
        }
        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
            fodusLog.finfst("0. Currfnt fodus ownfr {0}",
                            String.vblufOf(durrfntFodusOwnfr));
            fodusLog.finfst("0. Nbtivf fodus ownfr {0}",
                            String.vblufOf(nbtivfFodusOwnfr));
            fodusLog.finfst("0. Nbtivf fodusfd window {0}",
                            String.vblufOf(nbtivfFodusfdWindow));
        }
        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftLbstHWRfqufst();
            if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
                fodusLog.finfst("Rfqufst {0}", String.vblufOf(hwFodusRfqufst));
            }
            if (hwFodusRfqufst == null &&
                hfbvywfight == nbtivfFodusOwnfr &&
                hfbvywfight.gftContbiningWindow() == nbtivfFodusfdWindow)
            {
                if (dfsdfndbnt == durrfntFodusOwnfr) {
                    // Rfdundbnt rfqufst.
                    if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST))
                        fodusLog.finfst("1. SNFH_FAILURE for {0}",
                                        String.vblufOf(dfsdfndbnt));
                    rfturn SNFH_FAILURE;
                }

                // 'hfbvywfight' owns thf nbtivf fodus bnd thfrf brf no pfnding
                // rfqufsts. 'hfbvywfight' must bf b Contbinfr bnd
                // 'dfsdfndbnt' must not bf thf fodus ownfr. Othfrwisf,
                // wf would nfvfr hbvf gottfn this fbr.
                mbnbgfr.fnqufufKfyEvfnts(timf, dfsdfndbnt);

                hwFodusRfqufst =
                    nfw HfbvywfightFodusRfqufst(hfbvywfight, dfsdfndbnt,
                                                tfmporbry, dbusf);
                hfbvywfightRfqufsts.bdd(hwFodusRfqufst);

                if (durrfntFodusOwnfr != null) {
                    FodusEvfnt durrfntFodusOwnfrEvfnt =
                        nfw CbusfdFodusEvfnt(durrfntFodusOwnfr,
                                       FodusEvfnt.FOCUS_LOST,
                                       tfmporbry, dfsdfndbnt, dbusf);
                    // Fix 5028014. Rollfd out.
                    // SunToolkit.postPriorityEvfnt(durrfntFodusOwnfrEvfnt);
                    SunToolkit.postEvfnt(durrfntFodusOwnfr.bppContfxt,
                                         durrfntFodusOwnfrEvfnt);
                }
                FodusEvfnt nfwFodusOwnfrEvfnt =
                    nfw CbusfdFodusEvfnt(dfsdfndbnt, FodusEvfnt.FOCUS_GAINED,
                                   tfmporbry, durrfntFodusOwnfr, dbusf);
                // Fix 5028014. Rollfd out.
                // SunToolkit.postPriorityEvfnt(nfwFodusOwnfrEvfnt);
                SunToolkit.postEvfnt(dfsdfndbnt.bppContfxt, nfwFodusOwnfrEvfnt);

                if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST))
                    fodusLog.finfst("2. SNFH_HANDLED for {0}", String.vblufOf(dfsdfndbnt));
                rfturn SNFH_SUCCESS_HANDLED;
            } flsf if (hwFodusRfqufst != null &&
                       hwFodusRfqufst.hfbvywfight == hfbvywfight) {
                // 'hfbvywfight' dofsn't hbvf thf nbtivf fodus right now, but
                // if bll pfnding rfqufsts wfrf domplftfd, it would. Add
                // dfsdfndbnt to thf hfbvywfight's list of pfnding
                // lightwfight fodus trbnsffrs.
                if (hwFodusRfqufst.bddLightwfightRfqufst(dfsdfndbnt,
                                                         tfmporbry, dbusf)) {
                    mbnbgfr.fnqufufKfyEvfnts(timf, dfsdfndbnt);
                }

                if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
                    fodusLog.finfst("3. SNFH_HANDLED for lightwfight" +
                                    dfsdfndbnt + " in " + hfbvywfight);
                }
                rfturn SNFH_SUCCESS_HANDLED;
            } flsf {
                if (!fodusfdWindowChbngfAllowfd) {
                    // For purposfs of domputing oldFodusfdWindow, wf should look bt
                    // thf sfdond to lbst HfbvywfightFodusRfqufst on thf qufuf iff thf
                    // lbst HfbvywfightFodusRfqufst is CLEAR_GLOBAL_FOCUS_OWNER. If
                    // thfrf is no sfdond to lbst HfbvywfightFodusRfqufst, null is bn
                    // bddfptbblf vbluf.
                    if (hwFodusRfqufst ==
                        HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER)
                    {
                        int sizf = hfbvywfightRfqufsts.sizf();
                        hwFodusRfqufst = (sizf >= 2)
                            ? hfbvywfightRfqufsts.gft(sizf - 2)
                            : null;
                    }
                    if (fodusfdWindowChbngfd(hfbvywfight,
                                             (hwFodusRfqufst != null)
                                             ? hwFodusRfqufst.hfbvywfight
                                             : nbtivfFodusfdWindow)) {
                        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
                            fodusLog.finfst("4. SNFH_FAILURE for " + dfsdfndbnt);
                        }
                        rfturn SNFH_FAILURE;
                    }
                }

                mbnbgfr.fnqufufKfyEvfnts(timf, dfsdfndbnt);
                hfbvywfightRfqufsts.bdd
                    (nfw HfbvywfightFodusRfqufst(hfbvywfight, dfsdfndbnt,
                                                 tfmporbry, dbusf));
                if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
                    fodusLog.finfst("5. SNFH_PROCEED for " + dfsdfndbnt);
                }
                rfturn SNFH_SUCCESS_PROCEED;
            }
        }
    }

    /**
     * Rfturns thf Window whidh will bf bdtivf bftfr prodfssing this rfqufst,
     * or null if this is b duplidbtf rfqufst. Thf bdtivf Window is usfful
     * bfdbusf somf nbtivf plbtforms do not support sftting thf nbtivf fodus
     * ownfr to null. On thfsf plbtforms, thf obvious dhoidf is to sft thf
     * fodus ownfr to thf fodus proxy of thf bdtivf Window.
     */
    stbtid Window mbrkClfbrGlobblFodusOwnfr() {
        // nffd to dbll this out of syndhronizfd blodk to bvoid possiblf dfbdlodk
        // sff 6454631.
        finbl Componfnt nbtivfFodusfdWindow =
                gftCurrfntKfybobrdFodusMbnbgfr().gftNbtivfFodusfdWindow();

        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftLbstHWRfqufst();
            if (hwFodusRfqufst ==
                HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER)
            {
                // duplidbtf rfqufst
                rfturn null;
            }

            hfbvywfightRfqufsts.bdd
                (HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER);

            Componfnt bdtivfWindow = ((hwFodusRfqufst != null)
                ? SunToolkit.gftContbiningWindow(hwFodusRfqufst.hfbvywfight)
                : nbtivfFodusfdWindow);
            whilf (bdtivfWindow != null &&
                   !((bdtivfWindow instbndfof Frbmf) ||
                     (bdtivfWindow instbndfof Diblog)))
            {
                bdtivfWindow = bdtivfWindow.gftPbrfnt_NoClifntCodf();
            }

            rfturn (Window) bdtivfWindow;
        }
    }
    Componfnt gftCurrfntWbitingRfqufst(Componfnt pbrfnt) {
        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftFirstHWRfqufst();
            if (hwFodusRfqufst != null) {
                if (hwFodusRfqufst.hfbvywfight == pbrfnt) {
                    LightwfightFodusRfqufst lwFodusRfqufst =
                        hwFodusRfqufst.lightwfightRfqufsts.gftFirst();
                    if (lwFodusRfqufst != null) {
                        rfturn lwFodusRfqufst.domponfnt;
                    }
                }
            }
        }
        rfturn null;
    }

    stbtid boolfbn isAutoFodusTrbnsffrEnbblfd() {
        syndhronizfd (hfbvywfightRfqufsts) {
            rfturn (hfbvywfightRfqufsts.sizf() == 0)
                    && !disbblfRfstorfFodus
                    && (null == durrfntLightwfightRfqufsts);
        }
    }

    stbtid boolfbn isAutoFodusTrbnsffrEnbblfdFor(Componfnt domp) {
        rfturn isAutoFodusTrbnsffrEnbblfd() && domp.isAutoFodusTrbnsffrOnDisposbl();
    }

    /*
     * Usfd to prodfss fxdfptions in dispbtdhing fodus fvfnt (in fodusLost/fodusGbinfd dbllbbdks).
     * @pbrbm fx prfviously dbught fxdfption thbt mby bf prodfssfd right hfrf, or null
     * @pbrbm domp thf domponfnt to dispbtdh thf fvfnt to
     * @pbrbm fvfnt thf fvfnt to dispbtdh to thf domponfnt
     */
    stbtid privbtf Throwbblf dispbtdhAndCbtdhExdfption(Throwbblf fx, Componfnt domp, FodusEvfnt fvfnt) {
        Throwbblf rftEx = null;
        try {
            domp.dispbtdhEvfnt(fvfnt);
        } dbtdh (RuntimfExdfption rf) {
            rftEx = rf;
        } dbtdh (Error fr) {
            rftEx = fr;
        }
        if (rftEx != null) {
            if (fx != null) {
                hbndlfExdfption(fx);
            }
            rfturn rftEx;
        }
        rfturn fx;
    }

    stbtid privbtf void hbndlfExdfption(Throwbblf fx) {
        fx.printStbdkTrbdf();
    }

    stbtid void prodfssCurrfntLightwfightRfqufsts() {
        KfybobrdFodusMbnbgfr mbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr();
        LinkfdList<LightwfightFodusRfqufst> lodblLightwfightRfqufsts = null;

        Componfnt globblFodusOwnfr = mbnbgfr.gftGlobblFodusOwnfr();
        if ((globblFodusOwnfr != null) &&
            (globblFodusOwnfr.bppContfxt != AppContfxt.gftAppContfxt()))
        {
            // Thf durrfnt bpp dontfxt difffrs from thf bpp dontfxt of b fodus
            // ownfr (bnd bll pfnding lightwfight rfqufsts), so wf do nothing
            // now bnd wbit for b nfxt fvfnt.
            rfturn;
        }

        syndhronizfd(hfbvywfightRfqufsts) {
            if (durrfntLightwfightRfqufsts != null) {
                dlfbringCurrfntLightwfightRfqufsts = truf;
                disbblfRfstorfFodus = truf;
                lodblLightwfightRfqufsts = durrfntLightwfightRfqufsts;
                bllowSyndFodusRfqufsts = (lodblLightwfightRfqufsts.sizf() < 2);
                durrfntLightwfightRfqufsts = null;
            } flsf {
                // do nothing
                rfturn;
            }
        }

        Throwbblf dbughtEx = null;
        try {
            if (lodblLightwfightRfqufsts != null) {
                Componfnt lbstFodusOwnfr = null;
                Componfnt durrfntFodusOwnfr = null;

                for (Itfrbtor<KfybobrdFodusMbnbgfr.LightwfightFodusRfqufst> itfr = lodblLightwfightRfqufsts.itfrbtor(); itfr.hbsNfxt(); ) {

                    durrfntFodusOwnfr = mbnbgfr.gftGlobblFodusOwnfr();
                    LightwfightFodusRfqufst lwFodusRfqufst =
                        itfr.nfxt();

                    /*
                     * WARNING: This is bbsfd on DKFM's logid solfly!
                     *
                     * Wf bllow to triggfr rfstorfFodus() in thf dispbtdhing prodfss
                     * only if wf hbvf thf lbst rfqufst to dispbtdh. If thf lbst rfqufst
                     * fbils, fodus will bf rfstorfd to fithfr thf domponfnt of thf lbst
                     * prfviously suddfddfd rfqufst, or to to thf fodus ownfr thbt wbs
                     * bfforf this dlfbring prodfss.
                     */
                    if (!itfr.hbsNfxt()) {
                        disbblfRfstorfFodus = fblsf;
                    }

                    FodusEvfnt durrfntFodusOwnfrEvfnt = null;
                    /*
                     * Wf'rf not dispbtdhing FOCUS_LOST whilf thf durrfnt fodus ownfr is null.
                     * But rfgbrdlfss of whfthfr it's null or not, wf'rf dlfbring ALL thf lodbl
                     * lw rfqufsts.
                     */
                    if (durrfntFodusOwnfr != null) {
                        durrfntFodusOwnfrEvfnt = nfw CbusfdFodusEvfnt(durrfntFodusOwnfr,
                                       FodusEvfnt.FOCUS_LOST,
                                       lwFodusRfqufst.tfmporbry,
                                       lwFodusRfqufst.domponfnt, lwFodusRfqufst.dbusf);
                    }
                    FodusEvfnt nfwFodusOwnfrEvfnt =
                        nfw CbusfdFodusEvfnt(lwFodusRfqufst.domponfnt,
                                       FodusEvfnt.FOCUS_GAINED,
                                       lwFodusRfqufst.tfmporbry,
                                       durrfntFodusOwnfr == null ? lbstFodusOwnfr : durrfntFodusOwnfr,
                                       lwFodusRfqufst.dbusf);

                    if (durrfntFodusOwnfr != null) {
                        ((AWTEvfnt) durrfntFodusOwnfrEvfnt).isPostfd = truf;
                        dbughtEx = dispbtdhAndCbtdhExdfption(dbughtEx, durrfntFodusOwnfr, durrfntFodusOwnfrEvfnt);
                    }

                    ((AWTEvfnt) nfwFodusOwnfrEvfnt).isPostfd = truf;
                    dbughtEx = dispbtdhAndCbtdhExdfption(dbughtEx, lwFodusRfqufst.domponfnt, nfwFodusOwnfrEvfnt);

                    if (mbnbgfr.gftGlobblFodusOwnfr() == lwFodusRfqufst.domponfnt) {
                        lbstFodusOwnfr = lwFodusRfqufst.domponfnt;
                    }
                }
            }
        } finblly {
            dlfbringCurrfntLightwfightRfqufsts = fblsf;
            disbblfRfstorfFodus = fblsf;
            lodblLightwfightRfqufsts = null;
            bllowSyndFodusRfqufsts = truf;
        }
        if (dbughtEx instbndfof RuntimfExdfption) {
            throw (RuntimfExdfption)dbughtEx;
        } flsf if (dbughtEx instbndfof Error) {
            throw (Error)dbughtEx;
        }
    }

    stbtid FodusEvfnt rftbrgftUnfxpfdtfdFodusEvfnt(FodusEvfnt ff) {
        syndhronizfd (hfbvywfightRfqufsts) {
            // Any othfr dbsf rfprfsfnts b fbilurf dondition whidh wf did
            // not fxpfdt. Wf nffd to dlfbrFodusRfqufstList() bnd pbtdh up
            // thf fvfnt bs bfst bs possiblf.

            if (rfmovfFirstRfqufst()) {
                rfturn (FodusEvfnt)rftbrgftFodusEvfnt(ff);
            }

            Componfnt sourdf = ff.gftComponfnt();
            Componfnt oppositf = ff.gftOppositfComponfnt();
            boolfbn tfmporbry = fblsf;
            if (ff.gftID() == FodusEvfnt.FOCUS_LOST &&
                (oppositf == null || isTfmporbry(oppositf, sourdf)))
            {
                tfmporbry = truf;
            }
            rfturn nfw CbusfdFodusEvfnt(sourdf, ff.gftID(), tfmporbry, oppositf,
                                        CbusfdFodusEvfnt.Cbusf.NATIVE_SYSTEM);
        }
    }

    stbtid FodusEvfnt rftbrgftFodusGbinfd(FodusEvfnt ff) {
        bssfrt (ff.gftID() == FodusEvfnt.FOCUS_GAINED);

        Componfnt durrfntFodusOwnfr = gftCurrfntKfybobrdFodusMbnbgfr().
            gftGlobblFodusOwnfr();
        Componfnt sourdf = ff.gftComponfnt();
        Componfnt oppositf = ff.gftOppositfComponfnt();
        Componfnt nbtivfSourdf = gftHfbvywfight(sourdf);

        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftFirstHWRfqufst();

            if (hwFodusRfqufst == HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER)
            {
                rfturn rftbrgftUnfxpfdtfdFodusEvfnt(ff);
            }

            if (sourdf != null && nbtivfSourdf == null && hwFodusRfqufst != null) {
                // if sourdf w/o pffr bnd
                // if sourdf is fqubl to first lightwfight
                // thfn wf should dorrfdt sourdf bnd nbtivfSourdf
                if (sourdf == hwFodusRfqufst.gftFirstLightwfightRfqufst().domponfnt)
                {
                    sourdf = hwFodusRfqufst.hfbvywfight;
                    nbtivfSourdf = sourdf; // sourdf is hfbvuwfight itsflf
                }
            }
            if (hwFodusRfqufst != null &&
                nbtivfSourdf == hwFodusRfqufst.hfbvywfight)
            {
                // Fodus dhbngf bs b rfsult of b known dbll to rfqufstFodus(),
                // or known dlidk on b pffr fodusbblf hfbvywfight Componfnt.

                hfbvywfightRfqufsts.rfmovfFirst();

                LightwfightFodusRfqufst lwFodusRfqufst =
                    hwFodusRfqufst.lightwfightRfqufsts.rfmovfFirst();

                Componfnt nfwSourdf = lwFodusRfqufst.domponfnt;
                if (durrfntFodusOwnfr != null) {
                    /*
                     * Sindf wf rfdfivf FOCUS_GAINED whfn durrfnt fodus
                     * ownfr is not null, dorrfdponding FOCUS_LOST is supposfd
                     * to bf lost.  And so,  wf kffp nfw fodus ownfr
                     * to dftfrminf synthftid FOCUS_LOST fvfnt whidh will bf
                     * gfnfrbtfd by KfybobrdFodusMbnbgfr for this FOCUS_GAINED.
                     *
                     * This dodf bbsfd on knowlfdgf of
                     * DffbultKfybobrdFodusMbnbgfr's implfmfntbtion bnd might
                     * bf not bpplidbblf for bnothfr KfybobrdFodusMbnbgfr.
                     */
                    nfwFodusOwnfr = nfwSourdf;
                }

                boolfbn tfmporbry = (oppositf == null ||
                                     isTfmporbry(nfwSourdf, oppositf))
                        ? fblsf
                        : lwFodusRfqufst.tfmporbry;

                if (hwFodusRfqufst.lightwfightRfqufsts.sizf() > 0) {
                    durrfntLightwfightRfqufsts =
                        hwFodusRfqufst.lightwfightRfqufsts;
                    EvfntQufuf.invokfLbtfr(nfw Runnbblf() {
                            publid void run() {
                                prodfssCurrfntLightwfightRfqufsts();
                            }
                        });
                }

                // 'oppositf' will bf fixfd by
                // DffbultKfybobrdFodusMbnbgfr.rfblOppositfComponfnt
                rfturn nfw CbusfdFodusEvfnt(nfwSourdf,
                                      FodusEvfnt.FOCUS_GAINED, tfmporbry,
                                      oppositf, lwFodusRfqufst.dbusf);
            }

            if (durrfntFodusOwnfr != null
                && durrfntFodusOwnfr.gftContbiningWindow() == sourdf
                && (hwFodusRfqufst == null || sourdf != hwFodusRfqufst.hfbvywfight))
            {
                // Spfdibl dbsf for FOCUS_GAINED in top-lfvfls
                // If it brrivfs bs thf rfsult of bdtivbtion wf should skip it
                // This fvfnt will not hbvf bppropribtf rfqufst rfdord bnd
                // on brrivbl thfrf will bf blrfbdy somf fodus ownfr sft.
                rfturn nfw CbusfdFodusEvfnt(durrfntFodusOwnfr, FodusEvfnt.FOCUS_GAINED, fblsf,
                                            null, CbusfdFodusEvfnt.Cbusf.ACTIVATION);
            }

            rfturn rftbrgftUnfxpfdtfdFodusEvfnt(ff);
        } // fnd syndhronizfd(hfbvywfightRfqufsts)
    }

    stbtid FodusEvfnt rftbrgftFodusLost(FodusEvfnt ff) {
        bssfrt (ff.gftID() == FodusEvfnt.FOCUS_LOST);

        Componfnt durrfntFodusOwnfr = gftCurrfntKfybobrdFodusMbnbgfr().
            gftGlobblFodusOwnfr();
        Componfnt oppositf = ff.gftOppositfComponfnt();
        Componfnt nbtivfOppositf = gftHfbvywfight(oppositf);

        syndhronizfd (hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftFirstHWRfqufst();

            if (hwFodusRfqufst == HfbvywfightFodusRfqufst.CLEAR_GLOBAL_FOCUS_OWNER)
            {
                if (durrfntFodusOwnfr != null) {
                    // Cbll to KfybobrdFodusMbnbgfr.dlfbrGlobblFodusOwnfr()
                    hfbvywfightRfqufsts.rfmovfFirst();
                    rfturn nfw CbusfdFodusEvfnt(durrfntFodusOwnfr,
                                                FodusEvfnt.FOCUS_LOST, fblsf, null,
                                                CbusfdFodusEvfnt.Cbusf.CLEAR_GLOBAL_FOCUS_OWNER);
                }

                // Othfrwisf, fbll through to fbilurf dbsf bflow

            } flsf if (oppositf == null)
            {
                // Fodus lfbving bpplidbtion
                if (durrfntFodusOwnfr != null) {
                    rfturn nfw CbusfdFodusEvfnt(durrfntFodusOwnfr,
                                                FodusEvfnt.FOCUS_LOST,
                                                truf, null, CbusfdFodusEvfnt.Cbusf.ACTIVATION);
                } flsf {
                    rfturn ff;
                }
            } flsf if (hwFodusRfqufst != null &&
                       (nbtivfOppositf == hwFodusRfqufst.hfbvywfight ||
                        nbtivfOppositf == null &&
                        oppositf == hwFodusRfqufst.gftFirstLightwfightRfqufst().domponfnt))
            {
                if (durrfntFodusOwnfr == null) {
                    rfturn ff;
                }
                // Fodus dhbngf bs b rfsult of b known dbll to rfqufstFodus(),
                // or dlidk on b pffr fodusbblf hfbvywfight Componfnt.
                // If b fodus trbnsffr is mbdf bdross top-lfvfls, thfn thf
                // FOCUS_LOST fvfnt is blwbys tfmporbry, bnd thf FOCUS_GAINED
                // fvfnt is blwbys pfrmbnfnt. Othfrwisf, thf storfd tfmporbry
                // vbluf is honorfd.

                LightwfightFodusRfqufst lwFodusRfqufst =
                    hwFodusRfqufst.lightwfightRfqufsts.gftFirst();

                boolfbn tfmporbry = isTfmporbry(oppositf, durrfntFodusOwnfr)
                    ? truf
                    : lwFodusRfqufst.tfmporbry;

                rfturn nfw CbusfdFodusEvfnt(durrfntFodusOwnfr, FodusEvfnt.FOCUS_LOST,
                                            tfmporbry, lwFodusRfqufst.domponfnt, lwFodusRfqufst.dbusf);
            } flsf if (fodusfdWindowChbngfd(oppositf, durrfntFodusOwnfr)) {
                // If top-lfvfl dhbngfd thfrf might bf no fodus rfqufst in b list
                // But wf know thf oppositf, wf now it is tfmporbry - dispbtdh thf fvfnt.
                if (!ff.isTfmporbry() && durrfntFodusOwnfr != null) {
                    // Crfbtf dopy of thf fvfnt with only difffrfndf in tfmporbry pbrbmftfr.
                    ff = nfw CbusfdFodusEvfnt(durrfntFodusOwnfr, FodusEvfnt.FOCUS_LOST,
                                              truf, oppositf, CbusfdFodusEvfnt.Cbusf.ACTIVATION);
                }
                rfturn ff;
            }

            rfturn rftbrgftUnfxpfdtfdFodusEvfnt(ff);
        }  // fnd syndhronizfd(hfbvywfightRfqufsts)
    }

    stbtid AWTEvfnt rftbrgftFodusEvfnt(AWTEvfnt fvfnt) {
        if (dlfbringCurrfntLightwfightRfqufsts) {
            rfturn fvfnt;
        }

        KfybobrdFodusMbnbgfr mbnbgfr = gftCurrfntKfybobrdFodusMbnbgfr();
        if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER)) {
            if (fvfnt instbndfof FodusEvfnt || fvfnt instbndfof WindowEvfnt) {
                fodusLog.finfr(">>> {0}", String.vblufOf(fvfnt));
            }
            if (fodusLog.isLoggbblf(PlbtformLoggfr.Lfvfl.FINER) && fvfnt instbndfof KfyEvfnt) {
                fodusLog.finfr("    fodus ownfr is {0}",
                               String.vblufOf(mbnbgfr.gftGlobblFodusOwnfr()));
                fodusLog.finfr(">>> {0}", String.vblufOf(fvfnt));
            }
        }

        syndhronizfd(hfbvywfightRfqufsts) {
            /*
             * This dodf hbndlfs FOCUS_LOST fvfnt whidh is gfnfrbtfd by
             * DffbultKfybobrdFodusMbnbgfr for FOCUS_GAINED.
             *
             * This dodf bbsfd on knowlfdgf of DffbultKfybobrdFodusMbnbgfr's
             * implfmfntbtion bnd might bf not bpplidbblf for bnothfr
             * KfybobrdFodusMbnbgfr.
             *
             * Fix for 4472032
             */
            if (nfwFodusOwnfr != null &&
                fvfnt.gftID() == FodusEvfnt.FOCUS_LOST)
            {
                FodusEvfnt ff = (FodusEvfnt)fvfnt;

                if (mbnbgfr.gftGlobblFodusOwnfr() == ff.gftComponfnt() &&
                    ff.gftOppositfComponfnt() == nfwFodusOwnfr)
                {
                    nfwFodusOwnfr = null;
                    rfturn fvfnt;
                }
            }
        }

        prodfssCurrfntLightwfightRfqufsts();

        switdh (fvfnt.gftID()) {
            dbsf FodusEvfnt.FOCUS_GAINED: {
                fvfnt = rftbrgftFodusGbinfd((FodusEvfnt)fvfnt);
                brfbk;
            }
            dbsf FodusEvfnt.FOCUS_LOST: {
                fvfnt = rftbrgftFodusLost((FodusEvfnt)fvfnt);
                brfbk;
            }
            dffbult:
                /* do nothing */
        }
        rfturn fvfnt;
    }

    /**
     * Clfbrs mbrkfrs qufuf
     * This mfthod is not intfndfd to bf ovfrriddfn by KFM's.
     * Only DffbultKfybobrdFodusMbnbgfr dbn implfmfnt it.
     * @sindf 1.5
     */
    void dlfbrMbrkfrs() {
    }

    stbtid boolfbn rfmovfFirstRfqufst() {
        KfybobrdFodusMbnbgfr mbnbgfr =
            KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();

        syndhronizfd(hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftFirstHWRfqufst();

            if (hwFodusRfqufst != null) {
                hfbvywfightRfqufsts.rfmovfFirst();
                if (hwFodusRfqufst.lightwfightRfqufsts != null) {
                    for (Itfrbtor<KfybobrdFodusMbnbgfr.LightwfightFodusRfqufst> lwItfr = hwFodusRfqufst.lightwfightRfqufsts.
                             itfrbtor();
                         lwItfr.hbsNfxt(); )
                    {
                        mbnbgfr.dfqufufKfyEvfnts
                            (-1, lwItfr.nfxt().
                             domponfnt);
                    }
                }
            }
            // Fix for 4799136 - dlfbr typf-bhfbd mbrkfrs if rfqufsts qufuf is fmpty
            // Wf do it hfrf bfdbusf this mfthod is dbllfd only whfn problfms hbppfn
            if (hfbvywfightRfqufsts.sizf() == 0) {
                mbnbgfr.dlfbrMbrkfrs();
            }
            rfturn (hfbvywfightRfqufsts.sizf() > 0);
        }
    }
    stbtid void rfmovfLbstFodusRfqufst(Componfnt hfbvywfight) {
        if (log.isLoggbblf(PlbtformLoggfr.Lfvfl.FINE)) {
            if (hfbvywfight == null) {
                log.finf("Assfrtion (hfbvywfight != null) fbilfd");
            }
        }

        KfybobrdFodusMbnbgfr mbnbgfr =
            KfybobrdFodusMbnbgfr.gftCurrfntKfybobrdFodusMbnbgfr();
        syndhronizfd(hfbvywfightRfqufsts) {
            HfbvywfightFodusRfqufst hwFodusRfqufst = gftLbstHWRfqufst();
            if (hwFodusRfqufst != null &&
                hwFodusRfqufst.hfbvywfight == hfbvywfight) {
                hfbvywfightRfqufsts.rfmovfLbst();
            }
            // Fix for 4799136 - dlfbr typf-bhfbd mbrkfrs if rfqufsts qufuf is fmpty
            // Wf do it hfrf bfdbusf this mfthod is dbllfd only whfn problfms hbppfn
            if (hfbvywfightRfqufsts.sizf() == 0) {
                mbnbgfr.dlfbrMbrkfrs();
            }
        }
    }

    privbtf stbtid boolfbn fodusfdWindowChbngfd(Componfnt to, Componfnt from) {
        Window wto = SunToolkit.gftContbiningWindow(to);
        Window wfrom = SunToolkit.gftContbiningWindow(from);
        if (wto == null && wfrom == null) {
            rfturn truf;
        }
        if (wto == null) {
            rfturn truf;
        }
        if (wfrom == null) {
            rfturn truf;
        }
        rfturn (wto != wfrom);
    }

    privbtf stbtid boolfbn isTfmporbry(Componfnt to, Componfnt from) {
        Window wto = SunToolkit.gftContbiningWindow(to);
        Window wfrom = SunToolkit.gftContbiningWindow(from);
        if (wto == null && wfrom == null) {
            rfturn fblsf;
        }
        if (wto == null) {
            rfturn truf;
        }
        if (wfrom == null) {
            rfturn fblsf;
        }
        rfturn (wto != wfrom);
    }

    stbtid Componfnt gftHfbvywfight(Componfnt domp) {
        if (domp == null || domp.gftPffr() == null) {
            rfturn null;
        } flsf if (domp.gftPffr() instbndfof LightwfightPffr) {
            rfturn domp.gftNbtivfContbinfr();
        } flsf {
            rfturn domp;
        }
    }

    stbtid Fifld proxyAdtivf;
    // Addfssor to privbtf fifld isProxyAdtivf of KfyEvfnt
    privbtf stbtid boolfbn isProxyAdtivfImpl(KfyEvfnt f) {
        if (proxyAdtivf == null) {
            proxyAdtivf =  AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Fifld>() {
                    publid Fifld run() {
                        Fifld fifld = null;
                        try {
                            fifld = KfyEvfnt.dlbss.gftDfdlbrfdFifld("isProxyAdtivf");
                            if (fifld != null) {
                                fifld.sftAddfssiblf(truf);
                            }
                        } dbtdh (NoSudhFifldExdfption nsf) {
                            bssfrt(fblsf);
                        }
                        rfturn fifld;
                    }
                });
        }

        try {
            rfturn proxyAdtivf.gftBoolfbn(f);
        } dbtdh (IllfgblAddfssExdfption ibf) {
            bssfrt(fblsf);
        }
        rfturn fblsf;
    }

    // Rfturns thf vbluf of this KfyEvfnt's fifld isProxyAdtivf
    stbtid boolfbn isProxyAdtivf(KfyEvfnt f) {
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            rfturn isProxyAdtivfImpl(f);
        } flsf {
            rfturn fblsf;
        }
    }

    privbtf stbtid HfbvywfightFodusRfqufst gftLbstHWRfqufst() {
        syndhronizfd(hfbvywfightRfqufsts) {
            rfturn (hfbvywfightRfqufsts.sizf() > 0)
                ? hfbvywfightRfqufsts.gftLbst()
                : null;
        }
    }

    privbtf stbtid HfbvywfightFodusRfqufst gftFirstHWRfqufst() {
        syndhronizfd(hfbvywfightRfqufsts) {
            rfturn (hfbvywfightRfqufsts.sizf() > 0)
                ? hfbvywfightRfqufsts.gftFirst()
                : null;
        }
    }

    privbtf stbtid void dhfdkRfplbdfKFMPfrmission()
        throws SfdurityExdfption
    {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            if (rfplbdfKfybobrdFodusMbnbgfrPfrmission == null) {
                rfplbdfKfybobrdFodusMbnbgfrPfrmission =
                    nfw AWTPfrmission("rfplbdfKfybobrdFodusMbnbgfr");
            }
            sfdurity.
                dhfdkPfrmission(rfplbdfKfybobrdFodusMbnbgfrPfrmission);
        }
    }

    // Chfdks if this KfybobrdFodusMbnbgfr instbndf is thf durrfnt KFM,
    // or othfrwisf dhfdks if thf dblling thrfbd hbs "rfplbdfKfybobrdFodusMbnbgfr"
    // pfrmission. Hfrf's thf rfbsoning to do so:
    //
    // A systfm KFM instbndf (whidh is thf durrfnt KFM by dffbult) mby hbvf no
    // "rfplbdfKFM" pfrmission whfn b dlifnt dodf is on thf dbll stbdk bfnfbth,
    // but still it should bf bblf to fxfdutf thf mfthods protfdtfd by this dhfdk
    // duf to thf systfm KFM is trustfd (bnd so it dofs likf "privilfgfd").
    //
    // If this KFM instbndf is not thf durrfnt KFM but thf dlifnt dodf hbs bll
    // pfrmissions wf dbn't throw SfdurityExdfption bfdbusf it would dontrbdidt
    // thf sfdurity dondfpts. In this dbsf thf trustfd dlifnt dodf is rfsponsiblf
    // for dblling thf sfdurfd mfthods from KFM instbndf whidh is not durrfnt.
    privbtf void dhfdkKFMSfdurity()
        throws SfdurityExdfption
    {
        if (this != gftCurrfntKfybobrdFodusMbnbgfr()) {
            dhfdkRfplbdfKFMPfrmission();
        }
    }
}
