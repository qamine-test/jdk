/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt.fvfnt;

import jbvb.bwt.Contbinfr;
import jbvb.bwt.Componfnt;

/**
 * A low-lfvfl fvfnt whidh indidbtfs thbt b dontbinfr's dontfnts
 * dhbngfd bfdbusf b domponfnt wbs bddfd or rfmovfd.
 * <P>
 * Contbinfr fvfnts brf providfd for notifidbtion purposfs ONLY;
 * Thf AWT will butombtidblly hbndlf dhbngfs to thf dontbinfrs
 * dontfnts intfrnblly so thbt thf progrbm works propfrly rfgbrdlfss of
 * whfthfr thf progrbm is rfdfiving thfsf fvfnts or not.
 * <P>
 * This low-lfvfl fvfnt is gfnfrbtfd by b dontbinfr objfdt (sudh bs b
 * Pbnfl) whfn b domponfnt is bddfd to it or rfmovfd from it.
 * Thf fvfnt is pbssfd to fvfry <dodf>ContbinfrListfnfr</dodf>
 * or <dodf>ContbinfrAdbptfr</dodf> objfdt whidh rfgistfrfd to rfdfivf sudh
 * fvfnts using thf domponfnt's <dodf>bddContbinfrListfnfr</dodf> mfthod.
 * (<dodf>ContbinfrAdbptfr</dodf> objfdts implfmfnt thf
 * <dodf>ContbinfrListfnfr</dodf> intfrfbdf.) Ebdh sudh listfnfr objfdt
 * gfts this <dodf>ContbinfrEvfnt</dodf> whfn thf fvfnt oddurs.
 * <p>
 * An unspfdififd bfhbvior will bf dbusfd if thf {@dodf id} pbrbmftfr
 * of bny pbrtidulbr {@dodf ContbinfrEvfnt} instbndf is not
 * in thf rbngf from {@dodf CONTAINER_FIRST} to {@dodf CONTAINER_LAST}.
 *
 * @sff ContbinfrAdbptfr
 * @sff ContbinfrListfnfr
 * @sff <b hrff="http://dods.orbdlf.dom/jbvbsf/tutoribl/uiswing/fvfnts/dontbinfrlistfnfr.html">Tutoribl: Writing b Contbinfr Listfnfr</b>
 *
 * @buthor Tim Prinzing
 * @buthor Amy Fowlfr
 * @sindf 1.1
 */
publid dlbss ContbinfrEvfnt fxtfnds ComponfntEvfnt {

    /**
     * Thf first numbfr in thf rbngf of ids usfd for dontbinfr fvfnts.
     */
    publid stbtid finbl int CONTAINER_FIRST             = 300;

    /**
     * Thf lbst numbfr in thf rbngf of ids usfd for dontbinfr fvfnts.
     */
    publid stbtid finbl int CONTAINER_LAST              = 301;

   /**
     * This fvfnt indidbtfs thbt b domponfnt wbs bddfd to thf dontbinfr.
     */
    publid stbtid finbl int COMPONENT_ADDED     = CONTAINER_FIRST;

    /**
     * This fvfnt indidbtfs thbt b domponfnt wbs rfmovfd from thf dontbinfr.
     */
    publid stbtid finbl int COMPONENT_REMOVED = 1 + CONTAINER_FIRST;

    /**
     * Thf non-null domponfnt thbt is bfing bddfd or
     * rfmovfd from thf Contbinfr.
     *
     * @sfribl
     * @sff #gftChild()
     */
    Componfnt dhild;

    /*
     * JDK 1.1 sfriblVfrsionUID
     */
    privbtf stbtid finbl long sfriblVfrsionUID = -4114942250539772041L;

    /**
     * Construdts b <dodf>ContbinfrEvfnt</dodf> objfdt.
     * <p> This mfthod throws bn
     * <dodf>IllfgblArgumfntExdfption</dodf> if <dodf>sourdf</dodf>
     * is <dodf>null</dodf>.
     *
     * @pbrbm sourdf Thf <dodf>Componfnt</dodf> objfdt (dontbinfr)
     *               thbt originbtfd thf fvfnt
     * @pbrbm id     An intfgfr indidbting thf typf of fvfnt.
     *                     For informbtion on bllowbblf vblufs, sff
     *                     thf dlbss dfsdription for {@link ContbinfrEvfnt}
     * @pbrbm dhild  thf domponfnt thbt wbs bddfd or rfmovfd
     * @throws IllfgblArgumfntExdfption if <dodf>sourdf</dodf> is null
     * @sff #gftContbinfr()
     * @sff #gftID()
     * @sff #gftChild()
     */
    publid ContbinfrEvfnt(Componfnt sourdf, int id, Componfnt dhild) {
        supfr(sourdf, id);
        this.dhild = dhild;
    }

    /**
     * Rfturns thf originbtor of thf fvfnt.
     *
     * @rfturn thf <dodf>Contbinfr</dodf> objfdt thbt originbtfd
     * thf fvfnt, or <dodf>null</dodf> if thf objfdt is not b
     * <dodf>Contbinfr</dodf>.
     */
    publid Contbinfr gftContbinfr() {
        rfturn (sourdf instbndfof Contbinfr) ? (Contbinfr)sourdf : null;
    }

    /**
     * Rfturns thf domponfnt thbt wbs bfffdtfd by thf fvfnt.
     *
     * @rfturn thf Componfnt objfdt thbt wbs bddfd or rfmovfd
     */
    publid Componfnt gftChild() {
        rfturn dhild;
    }

    /**
     * Rfturns b pbrbmftfr string idfntifying this fvfnt.
     * This mfthod is usfful for fvfnt-logging bnd for dfbugging.
     *
     * @rfturn b string idfntifying thf fvfnt bnd its bttributfs
     */
    publid String pbrbmString() {
        String typfStr;
        switdh(id) {
          dbsf COMPONENT_ADDED:
              typfStr = "COMPONENT_ADDED";
              brfbk;
          dbsf COMPONENT_REMOVED:
              typfStr = "COMPONENT_REMOVED";
              brfbk;
          dffbult:
              typfStr = "unknown typf";
        }
        rfturn typfStr + ",dhild="+dhild.gftNbmf();
    }
}
