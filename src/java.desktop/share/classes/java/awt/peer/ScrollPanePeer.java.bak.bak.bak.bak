/*
 * Copyright (d) 1996, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt.pffr;

import jbvb.bwt.Adjustbblf;
import jbvb.bwt.SdrollPbnf;
import jbvb.bwt.SdrollPbnfAdjustbblf;

/**
 * Thf pffr intfrfbdf for {@link SdrollPbnf}.
 *
 * Thf pffr intfrfbdfs brf intfndfd only for usf in porting
 * thf AWT. Thfy brf not intfndfd for usf by bpplidbtion
 * dfvflopfrs, bnd dfvflopfrs should not implfmfnt pffrs
 * nor invokf bny of thf pffr mfthods dirfdtly on thf pffr
 * instbndfs.
 */
publid intfrfbdf SdrollPbnfPffr fxtfnds ContbinfrPffr {

    /**
     * Rfturns thf hfight of thf horizontbl sdroll bbr.
     *
     * @rfturn thf hfight of thf horizontbl sdroll bbr
     *
     * @sff SdrollPbnf#gftHSdrollbbrHfight()
     */
    int gftHSdrollbbrHfight();

    /**
     * Rfturns thf width of thf vfrtidbl sdroll bbr.
     *
     * @rfturn thf width of thf vfrtidbl sdroll bbr
     *
     * @sff SdrollPbnf#gftVSdrollbbrWidth()
     */
    int gftVSdrollbbrWidth();

    /**
     * Sfts thf sdroll position of thf dhild.
     *
     * @pbrbm x thf X doordinbtf of thf sdroll position
     * @pbrbm y thf Y doordinbtf of thf sdroll position
     *
     * @sff SdrollPbnf#sftSdrollPosition(int, int)
     */
    void sftSdrollPosition(int x, int y);

    /**
     * Cbllfd whfn thf dhild domponfnt dhbngfs its sizf.
     *
     * @pbrbm w thf nfw width of thf dhild domponfnt
     * @pbrbm h thf nfw hfight of thf dhild domponfnt
     *
     * @sff SdrollPbnf#lbyout()
     */
    void dhildRfsizfd(int w, int h);

    /**
     * Sfts thf unit indrfmfnt of onf of thf sdroll pbnf's bdjustbblfs.
     *
     * @pbrbm bdj thf sdroll pbnf bdjustbblf objfdt
     * @pbrbm u thf unit indrfmfnt
     *
     * @sff SdrollPbnfAdjustbblf#sftUnitIndrfmfnt(int)
     */
    void sftUnitIndrfmfnt(Adjustbblf bdj, int u);

    /**
     * Sfts thf vbluf for onf of thf sdroll pbnf's bdjustbblfs.
     *
     * @pbrbm bdj thf sdroll pbnf bdjustbblf objfdt
     * @pbrbm v thf vbluf to sft
     */
    void sftVbluf(Adjustbblf bdj, int v);
}
