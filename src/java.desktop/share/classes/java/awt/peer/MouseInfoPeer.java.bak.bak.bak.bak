/*
 * Copyright (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt.pffr;

import jbvb.bwt.Window;
import jbvb.bwt.Point;

/**
 * Pffr intfrfbdf for {@link jbvb.bwt.MousfInfo}. This is usfd to gft
 * somf bdditionbl informbtion bbout thf mousf.
 *
 * Thf pffr intfrfbdfs brf intfndfd only for usf in porting
 * thf AWT. Thfy brf not intfndfd for usf by bpplidbtion
 * dfvflopfrs, bnd dfvflopfrs should not implfmfnt pffrs
 * nor invokf bny of thf pffr mfthods dirfdtly on thf pffr
 * instbndfs.
 */
publid intfrfbdf MousfInfoPffr {

    /**
     * This mfthod dofs two things: it fills thf point fiflds with
     * thf durrfnt doordinbtfs of thf mousf dursor bnd rfturns thf
     * numbfr of thf sdrffn dfvidf whfrf thf pointfr is lodbtfd.
     * Thf numbfr of thf sdrffn dfvidf is only rfturnfd for indfpfndfnt
     * dfvidfs (whidh brf not pbrts of b virtubl sdrffn dfvidf).
     * For virtubl sdrffn dfvidfs, 0 is rfturnfd.
     * Mousf doordinbtfs brf blso dbldulbtfd dfpfnding on whfthfr
     * or not thf sdrffn dfvidf is virtubl. For virtubl sdrffn
     * dfvidfs, pointfr doordinbtfs brf dbldulbtfd in thf virtubl
     * doordinbtf systfm. Othfrwisf, doordinbtfs brf dbldulbtfd in
     * thf doordinbtf systfm of thf sdrffn dfvidf whfrf thf pointfr
     * is lodbtfd.
     * Sff jbvb.bwt.GrbphidsConfigurbtion dodumfntbtion for morf
     * dftbils bbout virtubl sdrffn dfvidfs.
     * @pbrbm point holdfr for thf durrfnt doordinbtfs of thf mousf
     * dursor
     * @rfturn thf numbfr of thf sdrffn dfvidf whfrf thf pointfr is
     * lodbtfd
     */
    int fillPointWithCoords(Point point);

    /**
     * Rfturns whfthfr or not thf window is lodbtfd undfr thf mousf
     * pointfr. Thf window is donsidfrfd to bf undfr thf mousf pointfr
     * if it is showing on thf sdrffn, bnd thf mousf pointfr is bbovf
     * thf pbrt of thf window thbt is not obsdurfd by bny othfr windows.
     * @pbrbm w thf window to dhfdk
     * @rfturn whfthfr or not thf window is lodbtfd undfr thf mousf
     * pointfr
     */
    boolfbn isWindowUndfrMousf(Window w);

}
