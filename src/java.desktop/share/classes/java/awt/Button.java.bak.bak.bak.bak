/*
 * Copyright (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bwt;

import jbvb.bwt.pffr.ButtonPffr;
import jbvb.util.EvfntListfnfr;
import jbvb.bwt.fvfnt.*;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;
import jbvbx.bddfssibility.*;

/**
 * This dlbss drfbtfs b lbbflfd button. Thf bpplidbtion dbn dbusf
 * somf bdtion to hbppfn whfn thf button is pushfd. This imbgf
 * dfpidts thrff vifws of b "<dodf>Quit</dodf>" button bs it bppfbrs
 * undfr thf Solbris opfrbting systfm:
 * <p>
 * <img srd="dod-filfs/Button-1.gif" blt="Thf following dontfxt dfsdribfs thf grbphid"
 * stylf="flobt:dfntfr; mbrgin: 7px 10px;">
 * <p>
 * Thf first vifw shows thf button bs it bppfbrs normblly.
 * Thf sfdond vifw shows thf button
 * whfn it hbs input fodus. Its outlinf is dbrkfnfd to lft thf
 * usfr know thbt it is bn bdtivf objfdt. Thf third vifw shows thf
 * button whfn thf usfr dlidks thf mousf ovfr thf button, bnd thus
 * rfqufsts thbt bn bdtion bf pfrformfd.
 * <p>
 * Thf gfsturf of dlidking on b button with thf mousf
 * is bssodibtfd with onf instbndf of <dodf>AdtionEvfnt</dodf>,
 * whidh is sfnt out whfn thf mousf is both prfssfd bnd rflfbsfd
 * ovfr thf button. If bn bpplidbtion is intfrfstfd in knowing
 * whfn thf button hbs bffn prfssfd but not rflfbsfd, bs b sfpbrbtf
 * gfsturf, it dbn spfdiblizf <dodf>prodfssMousfEvfnt</dodf>,
 * or it dbn rfgistfr itsflf bs b listfnfr for mousf fvfnts by
 * dblling <dodf>bddMousfListfnfr</dodf>. Both of thfsf mfthods brf
 * dffinfd by <dodf>Componfnt</dodf>, thf bbstrbdt supfrdlbss of
 * bll domponfnts.
 * <p>
 * Whfn b button is prfssfd bnd rflfbsfd, AWT sfnds bn instbndf
 * of <dodf>AdtionEvfnt</dodf> to thf button, by dblling
 * <dodf>prodfssEvfnt</dodf> on thf button. Thf button's
 * <dodf>prodfssEvfnt</dodf> mfthod rfdfivfs bll fvfnts
 * for thf button; it pbssfs bn bdtion fvfnt blong by
 * dblling its own <dodf>prodfssAdtionEvfnt</dodf> mfthod.
 * Thf lbttfr mfthod pbssfs thf bdtion fvfnt on to bny bdtion
 * listfnfrs thbt hbvf rfgistfrfd bn intfrfst in bdtion
 * fvfnts gfnfrbtfd by this button.
 * <p>
 * If bn bpplidbtion wbnts to pfrform somf bdtion bbsfd on
 * b button bfing prfssfd bnd rflfbsfd, it should implfmfnt
 * <dodf>AdtionListfnfr</dodf> bnd rfgistfr thf nfw listfnfr
 * to rfdfivf fvfnts from this button, by dblling thf button's
 * <dodf>bddAdtionListfnfr</dodf> mfthod. Thf bpplidbtion dbn
 * mbkf usf of thf button's bdtion dommbnd bs b mfssbging protodol.
 *
 * @buthor      Sbmi Shbio
 * @sff         jbvb.bwt.fvfnt.AdtionEvfnt
 * @sff         jbvb.bwt.fvfnt.AdtionListfnfr
 * @sff         jbvb.bwt.Componfnt#prodfssMousfEvfnt
 * @sff         jbvb.bwt.Componfnt#bddMousfListfnfr
 * @sindf       1.0
 */
publid dlbss Button fxtfnds Componfnt implfmfnts Addfssiblf {

    /**
     * Thf button's lbbfl.  This vbluf mby bf null.
     * @sfribl
     * @sff #gftLbbfl()
     * @sff #sftLbbfl(String)
     */
    String lbbfl;

    /**
     * Thf bdtion to bf pfrformfd ondf b button hbs bffn
     * prfssfd.  This vbluf mby bf null.
     * @sfribl
     * @sff #gftAdtionCommbnd()
     * @sff #sftAdtionCommbnd(String)
     */
    String bdtionCommbnd;

    trbnsifnt AdtionListfnfr bdtionListfnfr;

    privbtf stbtid finbl String bbsf = "button";
    privbtf stbtid int nbmfCountfr = 0;

    /*
     * JDK 1.1 sfriblVfrsionUID
     */
    privbtf stbtid finbl long sfriblVfrsionUID = -8774683716313001058L;


    stbtid {
        /* fnsurf thbt thf nfdfssbry nbtivf librbrifs brf lobdfd */
        Toolkit.lobdLibrbrifs();
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            initIDs();
        }
    }

    /**
     * Initiblizf JNI fifld bnd mfthod IDs for fiflds thbt mby bf
     * bddfssfd from C.
     */
    privbtf stbtid nbtivf void initIDs();

    /**
     * Construdts b button with bn fmpty string for its lbbfl.
     *
     * @fxdfption HfbdlfssExdfption if GrbphidsEnvironmfnt.isHfbdlfss()
     * rfturns truf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     */
    publid Button() throws HfbdlfssExdfption {
        this("");
    }

    /**
     * Construdts b button with thf spfdififd lbbfl.
     *
     * @pbrbm lbbfl  b string lbbfl for thf button, or
     *               <dodf>null</dodf> for no lbbfl
     * @fxdfption HfbdlfssExdfption if GrbphidsEnvironmfnt.isHfbdlfss()
     * rfturns truf
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     */
    publid Button(String lbbfl) throws HfbdlfssExdfption {
        GrbphidsEnvironmfnt.dhfdkHfbdlfss();
        this.lbbfl = lbbfl;
    }

    /**
     * Construdt b nbmf for this domponfnt.  Cbllfd by gftNbmf() whfn thf
     * nbmf is null.
     */
    String donstrudtComponfntNbmf() {
        syndhronizfd (Button.dlbss) {
            rfturn bbsf + nbmfCountfr++;
        }
    }

    /**
     * Crfbtfs thf pffr of thf button.  Thf button's pffr bllows thf
     * bpplidbtion to dhbngf thf look of thf button without dhbnging
     * its fundtionblity.
     *
     * @sff     jbvb.bwt.Toolkit#drfbtfButton(jbvb.bwt.Button)
     * @sff     jbvb.bwt.Componfnt#gftToolkit()
     */
    publid void bddNotify() {
        syndhronizfd(gftTrffLodk()) {
            if (pffr == null)
                pffr = gftToolkit().drfbtfButton(this);
            supfr.bddNotify();
        }
    }

    /**
     * Gfts thf lbbfl of this button.
     *
     * @rfturn    thf button's lbbfl, or <dodf>null</dodf>
     *                if thf button hbs no lbbfl.
     * @sff       jbvb.bwt.Button#sftLbbfl
     */
    publid String gftLbbfl() {
        rfturn lbbfl;
    }

    /**
     * Sfts thf button's lbbfl to bf thf spfdififd string.
     *
     * @pbrbm     lbbfl   thf nfw lbbfl, or <dodf>null</dodf>
     *                if thf button hbs no lbbfl.
     * @sff       jbvb.bwt.Button#gftLbbfl
     */
    publid void sftLbbfl(String lbbfl) {
        boolfbn tfstvblid = fblsf;

        syndhronizfd (this) {
            if (lbbfl != this.lbbfl && (this.lbbfl == null ||
                                        !this.lbbfl.fqubls(lbbfl))) {
                this.lbbfl = lbbfl;
                ButtonPffr pffr = (ButtonPffr)this.pffr;
                if (pffr != null) {
                    pffr.sftLbbfl(lbbfl);
                }
                tfstvblid = truf;
            }
        }

        // This dould dhbngf thf prfffrrfd sizf of thf Componfnt.
        if (tfstvblid) {
            invblidbtfIfVblid();
        }
    }

    /**
     * Sfts thf dommbnd nbmf for thf bdtion fvfnt firfd
     * by this button. By dffbult this bdtion dommbnd is
     * sft to mbtdh thf lbbfl of thf button.
     *
     * @pbrbm     dommbnd  b string usfd to sft thf button's
     *                  bdtion dommbnd.
     *            If thf string is <dodf>null</dodf> thfn thf bdtion dommbnd
     *            is sft to mbtdh thf lbbfl of thf button.
     * @sff       jbvb.bwt.fvfnt.AdtionEvfnt
     * @sindf     1.1
     */
    publid void sftAdtionCommbnd(String dommbnd) {
        bdtionCommbnd = dommbnd;
    }

    /**
     * Rfturns thf dommbnd nbmf of thf bdtion fvfnt firfd by this button.
     * If thf dommbnd nbmf is <dodf>null</dodf> (dffbult) thfn this mfthod
     * rfturns thf lbbfl of thf button.
     *
     * @rfturn thf bdtion dommbnd nbmf (or lbbfl) for this button
     */
    publid String gftAdtionCommbnd() {
        rfturn (bdtionCommbnd == null? lbbfl : bdtionCommbnd);
    }

    /**
     * Adds thf spfdififd bdtion listfnfr to rfdfivf bdtion fvfnts from
     * this button. Adtion fvfnts oddur whfn b usfr prfssfs or rflfbsfs
     * thf mousf ovfr this button.
     * If l is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     * <p>Rfffr to <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for dftbils on AWT's thrfbding modfl.
     *
     * @pbrbm         l thf bdtion listfnfr
     * @sff           #rfmovfAdtionListfnfr
     * @sff           #gftAdtionListfnfrs
     * @sff           jbvb.bwt.fvfnt.AdtionListfnfr
     * @sindf         1.1
     */
    publid syndhronizfd void bddAdtionListfnfr(AdtionListfnfr l) {
        if (l == null) {
            rfturn;
        }
        bdtionListfnfr = AWTEvfntMultidbstfr.bdd(bdtionListfnfr, l);
        nfwEvfntsOnly = truf;
    }

    /**
     * Rfmovfs thf spfdififd bdtion listfnfr so thbt it no longfr
     * rfdfivfs bdtion fvfnts from this button. Adtion fvfnts oddur
     * whfn b usfr prfssfs or rflfbsfs thf mousf ovfr this button.
     * If l is null, no fxdfption is thrown bnd no bdtion is pfrformfd.
     * <p>Rfffr to <b hrff="dod-filfs/AWTThrfbdIssufs.html#ListfnfrsThrfbds"
     * >AWT Thrfbding Issufs</b> for dftbils on AWT's thrfbding modfl.
     *
     * @pbrbm           l     thf bdtion listfnfr
     * @sff             #bddAdtionListfnfr
     * @sff             #gftAdtionListfnfrs
     * @sff             jbvb.bwt.fvfnt.AdtionListfnfr
     * @sindf           1.1
     */
    publid syndhronizfd void rfmovfAdtionListfnfr(AdtionListfnfr l) {
        if (l == null) {
            rfturn;
        }
        bdtionListfnfr = AWTEvfntMultidbstfr.rfmovf(bdtionListfnfr, l);
    }

    /**
     * Rfturns bn brrby of bll thf bdtion listfnfrs
     * rfgistfrfd on this button.
     *
     * @rfturn bll of this button's <dodf>AdtionListfnfr</dodf>s
     *         or bn fmpty brrby if no bdtion
     *         listfnfrs brf durrfntly rfgistfrfd
     *
     * @sff             #bddAdtionListfnfr
     * @sff             #rfmovfAdtionListfnfr
     * @sff             jbvb.bwt.fvfnt.AdtionListfnfr
     * @sindf 1.4
     */
    publid syndhronizfd AdtionListfnfr[] gftAdtionListfnfrs() {
        rfturn gftListfnfrs(AdtionListfnfr.dlbss);
    }

    /**
     * Rfturns bn brrby of bll thf objfdts durrfntly rfgistfrfd
     * bs <dodf><fm>Foo</fm>Listfnfr</dodf>s
     * upon this <dodf>Button</dodf>.
     * <dodf><fm>Foo</fm>Listfnfr</dodf>s brf rfgistfrfd using thf
     * <dodf>bdd<fm>Foo</fm>Listfnfr</dodf> mfthod.
     *
     * <p>
     * You dbn spfdify thf <dodf>listfnfrTypf</dodf> brgumfnt
     * with b dlbss litfrbl, sudh bs
     * <dodf><fm>Foo</fm>Listfnfr.dlbss</dodf>.
     * For fxbmplf, you dbn qufry b
     * <dodf>Button</dodf> <dodf>b</dodf>
     * for its bdtion listfnfrs with thf following dodf:
     *
     * <prf>AdtionListfnfr[] bls = (AdtionListfnfr[])(b.gftListfnfrs(AdtionListfnfr.dlbss));</prf>
     *
     * If no sudh listfnfrs fxist, this mfthod rfturns bn fmpty brrby.
     *
     * @pbrbm listfnfrTypf thf typf of listfnfrs rfqufstfd; this pbrbmftfr
     *          should spfdify bn intfrfbdf thbt dfsdfnds from
     *          <dodf>jbvb.util.EvfntListfnfr</dodf>
     * @rfturn bn brrby of bll objfdts rfgistfrfd bs
     *          <dodf><fm>Foo</fm>Listfnfr</dodf>s on this button,
     *          or bn fmpty brrby if no sudh
     *          listfnfrs hbvf bffn bddfd
     * @fxdfption ClbssCbstExdfption if <dodf>listfnfrTypf</dodf>
     *          dofsn't spfdify b dlbss or intfrfbdf thbt implfmfnts
     *          <dodf>jbvb.util.EvfntListfnfr</dodf>
     *
     * @sff #gftAdtionListfnfrs
     * @sindf 1.3
     */
    publid <T fxtfnds EvfntListfnfr> T[] gftListfnfrs(Clbss<T> listfnfrTypf) {
        EvfntListfnfr l = null;
        if  (listfnfrTypf == AdtionListfnfr.dlbss) {
            l = bdtionListfnfr;
        } flsf {
            rfturn supfr.gftListfnfrs(listfnfrTypf);
        }
        rfturn AWTEvfntMultidbstfr.gftListfnfrs(l, listfnfrTypf);
    }

    // REMIND: rfmovf whfn filtfring is donf bt lowfr lfvfl
    boolfbn fvfntEnbblfd(AWTEvfnt f) {
        if (f.id == AdtionEvfnt.ACTION_PERFORMED) {
            if ((fvfntMbsk & AWTEvfnt.ACTION_EVENT_MASK) != 0 ||
                bdtionListfnfr != null) {
                rfturn truf;
            }
            rfturn fblsf;
        }
        rfturn supfr.fvfntEnbblfd(f);
    }

    /**
     * Prodfssfs fvfnts on this button. If bn fvfnt is
     * bn instbndf of <dodf>AdtionEvfnt</dodf>, this mfthod invokfs
     * thf <dodf>prodfssAdtionEvfnt</dodf> mfthod. Othfrwisf,
     * it invokfs <dodf>prodfssEvfnt</dodf> on thf supfrdlbss.
     * <p>Notf thbt if thf fvfnt pbrbmftfr is <dodf>null</dodf>
     * thf bfhbvior is unspfdififd bnd mby rfsult in bn
     * fxdfption.
     *
     * @pbrbm        f thf fvfnt
     * @sff          jbvb.bwt.fvfnt.AdtionEvfnt
     * @sff          jbvb.bwt.Button#prodfssAdtionEvfnt
     * @sindf        1.1
     */
    protfdtfd void prodfssEvfnt(AWTEvfnt f) {
        if (f instbndfof AdtionEvfnt) {
            prodfssAdtionEvfnt((AdtionEvfnt)f);
            rfturn;
        }
        supfr.prodfssEvfnt(f);
    }

    /**
     * Prodfssfs bdtion fvfnts oddurring on this button
     * by dispbtdhing thfm to bny rfgistfrfd
     * <dodf>AdtionListfnfr</dodf> objfdts.
     * <p>
     * This mfthod is not dbllfd unlfss bdtion fvfnts brf
     * fnbblfd for this button. Adtion fvfnts brf fnbblfd
     * whfn onf of thf following oddurs:
     * <ul>
     * <li>An <dodf>AdtionListfnfr</dodf> objfdt is rfgistfrfd
     * vib <dodf>bddAdtionListfnfr</dodf>.
     * <li>Adtion fvfnts brf fnbblfd vib <dodf>fnbblfEvfnts</dodf>.
     * </ul>
     * <p>Notf thbt if thf fvfnt pbrbmftfr is <dodf>null</dodf>
     * thf bfhbvior is unspfdififd bnd mby rfsult in bn
     * fxdfption.
     *
     * @pbrbm       f thf bdtion fvfnt
     * @sff         jbvb.bwt.fvfnt.AdtionListfnfr
     * @sff         jbvb.bwt.Button#bddAdtionListfnfr
     * @sff         jbvb.bwt.Componfnt#fnbblfEvfnts
     * @sindf       1.1
     */
    protfdtfd void prodfssAdtionEvfnt(AdtionEvfnt f) {
        AdtionListfnfr listfnfr = bdtionListfnfr;
        if (listfnfr != null) {
            listfnfr.bdtionPfrformfd(f);
        }
    }

    /**
     * Rfturns b string rfprfsfnting thf stbtf of this <dodf>Button</dodf>.
     * This mfthod is intfndfd to bf usfd only for dfbugging purposfs, bnd thf
     * dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions. Thf rfturnfd string mby bf fmpty but mby not bf
     * <dodf>null</dodf>.
     *
     * @rfturn     thf pbrbmftfr string of this button
     */
    protfdtfd String pbrbmString() {
        rfturn supfr.pbrbmString() + ",lbbfl=" + lbbfl;
    }


    /* Sfriblizbtion support.
     */

    /*
     * Button Sfribl Dbtb Vfrsion.
     * @sfribl
     */
    privbtf int buttonSfriblizfdDbtbVfrsion = 1;

    /**
     * Writfs dffbult sfriblizbblf fiflds to strfbm.  Writfs
     * b list of sfriblizbblf <dodf>AdtionListfnfrs</dodf>
     * bs optionbl dbtb.  Thf non-sfriblizbblf
     * <dodf>AdtionListfnfrs</dodf> brf dftfdtfd bnd
     * no bttfmpt is mbdf to sfriblizf thfm.
     *
     * @sfriblDbtb <dodf>null</dodf> tfrminbtfd sfqufndf of 0 or
     *   morf pbirs: thf pbir donsists of b <dodf>String</dodf>
     *   bnd bn <dodf>Objfdt</dodf>; thf <dodf>String</dodf>
     *   indidbtfs thf typf of objfdt bnd is onf of thf following:
     *   <dodf>bdtionListfnfrK</dodf> indidbting bn
     *     <dodf>AdtionListfnfr</dodf> objfdt
     *
     * @pbrbm s thf <dodf>ObjfdtOutputStrfbm</dodf> to writf
     * @sff AWTEvfntMultidbstfr#sbvf(ObjfdtOutputStrfbm, String, EvfntListfnfr)
     * @sff jbvb.bwt.Componfnt#bdtionListfnfrK
     * @sff #rfbdObjfdt(ObjfdtInputStrfbm)
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s)
      throws IOExdfption
    {
      s.dffbultWritfObjfdt();

      AWTEvfntMultidbstfr.sbvf(s, bdtionListfnfrK, bdtionListfnfr);
      s.writfObjfdt(null);
    }

    /**
     * Rfbds thf <dodf>ObjfdtInputStrfbm</dodf> bnd if
     * it isn't <dodf>null</dodf> bdds b listfnfr to
     * rfdfivf bdtion fvfnts firfd by thf button.
     * Unrfdognizfd kfys or vblufs will bf ignorfd.
     *
     * @pbrbm s thf <dodf>ObjfdtInputStrfbm</dodf> to rfbd
     * @fxdfption HfbdlfssExdfption if
     *   <dodf>GrbphidsEnvironmfnt.isHfbdlfss</dodf> rfturns
     *   <dodf>truf</dodf>
     * @sfribl
     * @sff #rfmovfAdtionListfnfr(AdtionListfnfr)
     * @sff #bddAdtionListfnfr(AdtionListfnfr)
     * @sff jbvb.bwt.GrbphidsEnvironmfnt#isHfbdlfss
     * @sff #writfObjfdt(ObjfdtOutputStrfbm)
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
      throws ClbssNotFoundExdfption, IOExdfption, HfbdlfssExdfption
    {
      GrbphidsEnvironmfnt.dhfdkHfbdlfss();
      s.dffbultRfbdObjfdt();

      Objfdt kfyOrNull;
      whilf(null != (kfyOrNull = s.rfbdObjfdt())) {
        String kfy = ((String)kfyOrNull).intfrn();

        if (bdtionListfnfrK == kfy)
          bddAdtionListfnfr((AdtionListfnfr)(s.rfbdObjfdt()));

        flsf // skip vbluf for unrfdognizfd kfy
          s.rfbdObjfdt();
      }
    }


/////////////////
// Addfssibility support
////////////////

    /**
     * Gfts thf <dodf>AddfssiblfContfxt</dodf> bssodibtfd with
     * this <dodf>Button</dodf>. For buttons, thf
     * <dodf>AddfssiblfContfxt</dodf> tbkfs thf form of bn
     * <dodf>AddfssiblfAWTButton</dodf>.
     * A nfw <dodf>AddfssiblfAWTButton</dodf> instbndf is
     * drfbtfd if nfdfssbry.
     *
     * @rfturn bn <dodf>AddfssiblfAWTButton</dodf> thbt sfrvfs bs thf
     *         <dodf>AddfssiblfContfxt</dodf> of this <dodf>Button</dodf>
     * @bfbninfo
     *       fxpfrt: truf
     *  dfsdription: Thf AddfssiblfContfxt bssodibtfd with this Button.
     * @sindf 1.3
     */
    publid AddfssiblfContfxt gftAddfssiblfContfxt() {
        if (bddfssiblfContfxt == null) {
            bddfssiblfContfxt = nfw AddfssiblfAWTButton();
        }
        rfturn bddfssiblfContfxt;
    }

    /**
     * This dlbss implfmfnts bddfssibility support for thf
     * <dodf>Button</dodf> dlbss.  It providfs bn implfmfntbtion of thf
     * Jbvb Addfssibility API bppropribtf to button usfr-intfrfbdf flfmfnts.
     * @sindf 1.3
     */
    protfdtfd dlbss AddfssiblfAWTButton fxtfnds AddfssiblfAWTComponfnt
        implfmfnts AddfssiblfAdtion, AddfssiblfVbluf
    {
        /*
         * JDK 1.3 sfriblVfrsionUID
         */
        privbtf stbtid finbl long sfriblVfrsionUID = -5932203980244017102L;

        /**
         * Gft thf bddfssiblf nbmf of this objfdt.
         *
         * @rfturn thf lodblizfd nbmf of thf objfdt -- dbn bf null if this
         * objfdt dofs not hbvf b nbmf
         */
        publid String gftAddfssiblfNbmf() {
            if (bddfssiblfNbmf != null) {
                rfturn bddfssiblfNbmf;
            } flsf {
                if (gftLbbfl() == null) {
                    rfturn supfr.gftAddfssiblfNbmf();
                } flsf {
                    rfturn gftLbbfl();
                }
            }
        }

        /**
         * Gft thf AddfssiblfAdtion bssodibtfd with this objfdt.  In thf
         * implfmfntbtion of thf Jbvb Addfssibility API for this dlbss,
         * rfturn this objfdt, whidh is rfsponsiblf for implfmfnting thf
         * AddfssiblfAdtion intfrfbdf on bfhblf of itsflf.
         *
         * @rfturn this objfdt
         */
        publid AddfssiblfAdtion gftAddfssiblfAdtion() {
            rfturn this;
        }

        /**
         * Gft thf AddfssiblfVbluf bssodibtfd with this objfdt.  In thf
         * implfmfntbtion of thf Jbvb Addfssibility API for this dlbss,
         * rfturn this objfdt, whidh is rfsponsiblf for implfmfnting thf
         * AddfssiblfVbluf intfrfbdf on bfhblf of itsflf.
         *
         * @rfturn this objfdt
         */
        publid AddfssiblfVbluf gftAddfssiblfVbluf() {
            rfturn this;
        }

        /**
         * Rfturns thf numbfr of Adtions bvbilbblf in this objfdt.  Thf
         * dffbult bfhbvior of b button is to hbvf onf bdtion - togglf
         * thf button.
         *
         * @rfturn 1, thf numbfr of Adtions in this objfdt
         */
        publid int gftAddfssiblfAdtionCount() {
            rfturn 1;
        }

        /**
         * Rfturn b dfsdription of thf spfdififd bdtion of thf objfdt.
         *
         * @pbrbm i zfro-bbsfd indfx of thf bdtions
         */
        publid String gftAddfssiblfAdtionDfsdription(int i) {
            if (i == 0) {
                // [[[PENDING:  WDW -- nffd to providf b lodblizfd string]]]
                rfturn "dlidk";
            } flsf {
                rfturn null;
            }
        }

        /**
         * Pfrform thf spfdififd Adtion on thf objfdt
         *
         * @pbrbm i zfro-bbsfd indfx of bdtions
         * @rfturn truf if thf thf bdtion wbs pfrformfd; flsf fblsf.
         */
        publid boolfbn doAddfssiblfAdtion(int i) {
            if (i == 0) {
                // Simulbtf b button dlidk
                Toolkit.gftEvfntQufuf().postEvfnt(
                        nfw AdtionEvfnt(Button.this,
                                        AdtionEvfnt.ACTION_PERFORMED,
                                        Button.this.gftAdtionCommbnd()));
                rfturn truf;
            } flsf {
                rfturn fblsf;
            }
        }

        /**
         * Gft thf vbluf of this objfdt bs b Numbfr.
         *
         * @rfturn An Intfgfr of 0 if this isn't sflfdtfd or bn Intfgfr of 1 if
         * this is sflfdtfd.
         * @sff jbvbx.swing.AbstrbdtButton#isSflfdtfd()
         */
        publid Numbfr gftCurrfntAddfssiblfVbluf() {
            rfturn Intfgfr.vblufOf(0);
        }

        /**
         * Sft thf vbluf of this objfdt bs b Numbfr.
         *
         * @rfturn Truf if thf vbluf wbs sft.
         */
        publid boolfbn sftCurrfntAddfssiblfVbluf(Numbfr n) {
            rfturn fblsf;
        }

        /**
         * Gft thf minimum vbluf of this objfdt bs b Numbfr.
         *
         * @rfturn An Intfgfr of 0.
         */
        publid Numbfr gftMinimumAddfssiblfVbluf() {
            rfturn Intfgfr.vblufOf(0);
        }

        /**
         * Gft thf mbximum vbluf of this objfdt bs b Numbfr.
         *
         * @rfturn An Intfgfr of 0.
         */
        publid Numbfr gftMbximumAddfssiblfVbluf() {
            rfturn Intfgfr.vblufOf(0);
        }

        /**
         * Gft thf rolf of this objfdt.
         *
         * @rfturn bn instbndf of AddfssiblfRolf dfsdribing thf rolf of thf
         * objfdt
         * @sff AddfssiblfRolf
         */
        publid AddfssiblfRolf gftAddfssiblfRolf() {
            rfturn AddfssiblfRolf.PUSH_BUTTON;
        }
    } // innfr dlbss AddfssiblfAWTButton

}
