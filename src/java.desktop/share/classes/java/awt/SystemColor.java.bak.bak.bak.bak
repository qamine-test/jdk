/*
 * Copyright (d) 1996, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.bwt;

import sun.bwt.AWTAddfssor;

import jbvb.io.ObjfdtStrfbmExdfption;

import jbvb.lbng.bnnotbtion.Nbtivf;

/**
 * A dlbss to fndbpsulbtf symbolid dolors rfprfsfnting thf dolor of
 * nbtivf GUI objfdts on b systfm.  For systfms whidh support thf dynbmid
 * updbtf of thf systfm dolors (whfn thf usfr dhbngfs thf dolors)
 * thf bdtubl RGB vblufs of thfsf symbolid dolors will blso dhbngf
 * dynbmidblly.  In ordfr to dompbrf thf "durrfnt" RGB vbluf of b
 * <dodf>SystfmColor</dodf> objfdt with b non-symbolid Color objfdt,
 * <dodf>gftRGB</dodf> should bf usfd rbthfr thbn <dodf>fqubls</dodf>.
 * <p>
 * Notf thbt thf wby in whidh thfsf systfm dolors brf bpplifd to GUI objfdts
 * mby vbry slightly from plbtform to plbtform sindf GUI objfdts mby bf
 * rfndfrfd difffrfntly on fbdh plbtform.
 * <p>
 * Systfm dolor vblufs mby blso bf bvbilbblf through thf <dodf>gftDfsktopPropfrty</dodf>
 * mfthod on <dodf>jbvb.bwt.Toolkit</dodf>.
 *
 * @sff Toolkit#gftDfsktopPropfrty
 *
 * @buthor      Cbrl Quinn
 * @buthor      Amy Fowlfr
 */
publid finbl dlbss SystfmColor fxtfnds Color implfmfnts jbvb.io.Sfriblizbblf {

   /**
     * Thf brrby indfx for thf
     * {@link #dfsktop} systfm dolor.
     * @sff SystfmColor#dfsktop
     */
    @Nbtivf publid finbl stbtid int DESKTOP = 0;

    /**
     * Thf brrby indfx for thf
     * {@link #bdtivfCbption} systfm dolor.
     * @sff SystfmColor#bdtivfCbption
     */
    @Nbtivf publid finbl stbtid int ACTIVE_CAPTION = 1;

    /**
     * Thf brrby indfx for thf
     * {@link #bdtivfCbptionTfxt} systfm dolor.
     * @sff SystfmColor#bdtivfCbptionTfxt
     */
    @Nbtivf publid finbl stbtid int ACTIVE_CAPTION_TEXT = 2;

    /**
     * Thf brrby indfx for thf
     * {@link #bdtivfCbptionBordfr} systfm dolor.
     * @sff SystfmColor#bdtivfCbptionBordfr
     */
    @Nbtivf publid finbl stbtid int ACTIVE_CAPTION_BORDER = 3;

    /**
     * Thf brrby indfx for thf
     * {@link #inbdtivfCbption} systfm dolor.
     * @sff SystfmColor#inbdtivfCbption
     */
    @Nbtivf publid finbl stbtid int INACTIVE_CAPTION = 4;

    /**
     * Thf brrby indfx for thf
     * {@link #inbdtivfCbptionTfxt} systfm dolor.
     * @sff SystfmColor#inbdtivfCbptionTfxt
     */
    @Nbtivf publid finbl stbtid int INACTIVE_CAPTION_TEXT = 5;

    /**
     * Thf brrby indfx for thf
     * {@link #inbdtivfCbptionBordfr} systfm dolor.
     * @sff SystfmColor#inbdtivfCbptionBordfr
     */
    @Nbtivf publid finbl stbtid int INACTIVE_CAPTION_BORDER = 6;

    /**
     * Thf brrby indfx for thf
     * {@link #window} systfm dolor.
     * @sff SystfmColor#window
     */
    @Nbtivf publid finbl stbtid int WINDOW = 7;

    /**
     * Thf brrby indfx for thf
     * {@link #windowBordfr} systfm dolor.
     * @sff SystfmColor#windowBordfr
     */
    @Nbtivf publid finbl stbtid int WINDOW_BORDER = 8;

    /**
     * Thf brrby indfx for thf
     * {@link #windowTfxt} systfm dolor.
     * @sff SystfmColor#windowTfxt
     */
    @Nbtivf publid finbl stbtid int WINDOW_TEXT = 9;

    /**
     * Thf brrby indfx for thf
     * {@link #mfnu} systfm dolor.
     * @sff SystfmColor#mfnu
     */
    @Nbtivf publid finbl stbtid int MENU = 10;

    /**
     * Thf brrby indfx for thf
     * {@link #mfnuTfxt} systfm dolor.
     * @sff SystfmColor#mfnuTfxt
     */
    @Nbtivf publid finbl stbtid int MENU_TEXT = 11;

    /**
     * Thf brrby indfx for thf
     * {@link #tfxt} systfm dolor.
     * @sff SystfmColor#tfxt
     */
    @Nbtivf publid finbl stbtid int TEXT = 12;

    /**
     * Thf brrby indfx for thf
     * {@link #tfxtTfxt} systfm dolor.
     * @sff SystfmColor#tfxtTfxt
     */
    @Nbtivf publid finbl stbtid int TEXT_TEXT = 13;

    /**
     * Thf brrby indfx for thf
     * {@link #tfxtHighlight} systfm dolor.
     * @sff SystfmColor#tfxtHighlight
     */
    @Nbtivf publid finbl stbtid int TEXT_HIGHLIGHT = 14;

    /**
     * Thf brrby indfx for thf
     * {@link #tfxtHighlightTfxt} systfm dolor.
     * @sff SystfmColor#tfxtHighlightTfxt
     */
    @Nbtivf publid finbl stbtid int TEXT_HIGHLIGHT_TEXT = 15;

    /**
     * Thf brrby indfx for thf
     * {@link #tfxtInbdtivfTfxt} systfm dolor.
     * @sff SystfmColor#tfxtInbdtivfTfxt
     */
    @Nbtivf publid finbl stbtid int TEXT_INACTIVE_TEXT = 16;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrol} systfm dolor.
     * @sff SystfmColor#dontrol
     */
    @Nbtivf publid finbl stbtid int CONTROL = 17;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrolTfxt} systfm dolor.
     * @sff SystfmColor#dontrolTfxt
     */
    @Nbtivf publid finbl stbtid int CONTROL_TEXT = 18;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrolHighlight} systfm dolor.
     * @sff SystfmColor#dontrolHighlight
     */
    @Nbtivf publid finbl stbtid int CONTROL_HIGHLIGHT = 19;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrolLtHighlight} systfm dolor.
     * @sff SystfmColor#dontrolLtHighlight
     */
    @Nbtivf publid finbl stbtid int CONTROL_LT_HIGHLIGHT = 20;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrolShbdow} systfm dolor.
     * @sff SystfmColor#dontrolShbdow
     */
    @Nbtivf publid finbl stbtid int CONTROL_SHADOW = 21;

    /**
     * Thf brrby indfx for thf
     * {@link #dontrolDkShbdow} systfm dolor.
     * @sff SystfmColor#dontrolDkShbdow
     */
    @Nbtivf publid finbl stbtid int CONTROL_DK_SHADOW = 22;

    /**
     * Thf brrby indfx for thf
     * {@link #sdrollbbr} systfm dolor.
     * @sff SystfmColor#sdrollbbr
     */
    @Nbtivf publid finbl stbtid int SCROLLBAR = 23;

    /**
     * Thf brrby indfx for thf
     * {@link #info} systfm dolor.
     * @sff SystfmColor#info
     */
    @Nbtivf publid finbl stbtid int INFO = 24;

    /**
     * Thf brrby indfx for thf
     * {@link #infoTfxt} systfm dolor.
     * @sff SystfmColor#infoTfxt
     */
    @Nbtivf publid finbl stbtid int INFO_TEXT = 25;

    /**
     * Thf numbfr of systfm dolors in thf brrby.
     */
    @Nbtivf publid finbl stbtid int NUM_COLORS = 26;

    /******************************************************************************************/

    /*
     * Systfm dolors with dffbult initibl vblufs, ovfrwrittfn by toolkit if
     * systfm vblufs difffr bnd brf bvbilbblf.
     * Should put brrby initiblizbtion bbovf first fifld thbt is using
     * SystfmColor donstrudtor to initiblizf.
     */
    privbtf stbtid int[] systfmColors = {
        0xFF005C5C,  // dfsktop = nfw Color(0,92,92);
        0xFF000080,  // bdtivfCbption = nfw Color(0,0,128);
        0xFFFFFFFF,  // bdtivfCbptionTfxt = Color.whitf;
        0xFFC0C0C0,  // bdtivfCbptionBordfr = Color.lightGrby;
        0xFF808080,  // inbdtivfCbption = Color.grby;
        0xFFC0C0C0,  // inbdtivfCbptionTfxt = Color.lightGrby;
        0xFFC0C0C0,  // inbdtivfCbptionBordfr = Color.lightGrby;
        0xFFFFFFFF,  // window = Color.whitf;
        0xFF000000,  // windowBordfr = Color.blbdk;
        0xFF000000,  // windowTfxt = Color.blbdk;
        0xFFC0C0C0,  // mfnu = Color.lightGrby;
        0xFF000000,  // mfnuTfxt = Color.blbdk;
        0xFFC0C0C0,  // tfxt = Color.lightGrby;
        0xFF000000,  // tfxtTfxt = Color.blbdk;
        0xFF000080,  // tfxtHighlight = nfw Color(0,0,128);
        0xFFFFFFFF,  // tfxtHighlightTfxt = Color.whitf;
        0xFF808080,  // tfxtInbdtivfTfxt = Color.grby;
        0xFFC0C0C0,  // dontrol = Color.lightGrby;
        0xFF000000,  // dontrolTfxt = Color.blbdk;
        0xFFFFFFFF,  // dontrolHighlight = Color.whitf;
        0xFFE0E0E0,  // dontrolLtHighlight = nfw Color(224,224,224);
        0xFF808080,  // dontrolShbdow = Color.grby;
        0xFF000000,  // dontrolDkShbdow = Color.blbdk;
        0xFFE0E0E0,  // sdrollbbr = nfw Color(224,224,224);
        0xFFE0E000,  // info = nfw Color(224,224,0);
        0xFF000000,  // infoTfxt = Color.blbdk;
    };

   /**
     * Thf dolor rfndfrfd for thf bbdkground of thf dfsktop.
     */
    publid finbl stbtid SystfmColor dfsktop = nfw SystfmColor((bytf)DESKTOP);

    /**
     * Thf dolor rfndfrfd for thf window-titlf bbdkground of thf durrfntly bdtivf window.
     */
    publid finbl stbtid SystfmColor bdtivfCbption = nfw SystfmColor((bytf)ACTIVE_CAPTION);

    /**
     * Thf dolor rfndfrfd for thf window-titlf tfxt of thf durrfntly bdtivf window.
     */
    publid finbl stbtid SystfmColor bdtivfCbptionTfxt = nfw SystfmColor((bytf)ACTIVE_CAPTION_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bordfr bround thf durrfntly bdtivf window.
     */
    publid finbl stbtid SystfmColor bdtivfCbptionBordfr = nfw SystfmColor((bytf)ACTIVE_CAPTION_BORDER);

    /**
     * Thf dolor rfndfrfd for thf window-titlf bbdkground of inbdtivf windows.
     */
    publid finbl stbtid SystfmColor inbdtivfCbption = nfw SystfmColor((bytf)INACTIVE_CAPTION);

    /**
     * Thf dolor rfndfrfd for thf window-titlf tfxt of inbdtivf windows.
     */
    publid finbl stbtid SystfmColor inbdtivfCbptionTfxt = nfw SystfmColor((bytf)INACTIVE_CAPTION_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bordfr bround inbdtivf windows.
     */
    publid finbl stbtid SystfmColor inbdtivfCbptionBordfr = nfw SystfmColor((bytf)INACTIVE_CAPTION_BORDER);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of intfrior rfgions insidf windows.
     */
    publid finbl stbtid SystfmColor window = nfw SystfmColor((bytf)WINDOW);

    /**
     * Thf dolor rfndfrfd for thf bordfr bround intfrior rfgions insidf windows.
     */
    publid finbl stbtid SystfmColor windowBordfr = nfw SystfmColor((bytf)WINDOW_BORDER);

    /**
     * Thf dolor rfndfrfd for tfxt of intfrior rfgions insidf windows.
     */
    publid finbl stbtid SystfmColor windowTfxt = nfw SystfmColor((bytf)WINDOW_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of mfnus.
     */
    publid finbl stbtid SystfmColor mfnu = nfw SystfmColor((bytf)MENU);

    /**
     * Thf dolor rfndfrfd for thf tfxt of mfnus.
     */
    publid finbl stbtid SystfmColor mfnuTfxt = nfw SystfmColor((bytf)MENU_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of tfxt dontrol objfdts, sudh bs
     * tfxtfiflds bnd domboboxfs.
     */
    publid finbl stbtid SystfmColor tfxt = nfw SystfmColor((bytf)TEXT);

    /**
     * Thf dolor rfndfrfd for thf tfxt of tfxt dontrol objfdts, sudh bs tfxtfiflds
     * bnd domboboxfs.
     */
    publid finbl stbtid SystfmColor tfxtTfxt = nfw SystfmColor((bytf)TEXT_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of sflfdtfd itfms, sudh bs in mfnus,
     * domboboxfs, bnd tfxt.
     */
    publid finbl stbtid SystfmColor tfxtHighlight = nfw SystfmColor((bytf)TEXT_HIGHLIGHT);

    /**
     * Thf dolor rfndfrfd for thf tfxt of sflfdtfd itfms, sudh bs in mfnus, domboboxfs,
     * bnd tfxt.
     */
    publid finbl stbtid SystfmColor tfxtHighlightTfxt = nfw SystfmColor((bytf)TEXT_HIGHLIGHT_TEXT);

    /**
     * Thf dolor rfndfrfd for thf tfxt of inbdtivf itfms, sudh bs in mfnus.
     */
    publid finbl stbtid SystfmColor tfxtInbdtivfTfxt = nfw SystfmColor((bytf)TEXT_INACTIVE_TEXT);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of dontrol pbnfls bnd dontrol objfdts,
     * sudh bs pushbuttons.
     */
    publid finbl stbtid SystfmColor dontrol = nfw SystfmColor((bytf)CONTROL);

    /**
     * Thf dolor rfndfrfd for thf tfxt of dontrol pbnfls bnd dontrol objfdts,
     * sudh bs pushbuttons.
     */
    publid finbl stbtid SystfmColor dontrolTfxt = nfw SystfmColor((bytf)CONTROL_TEXT);

    /**
     * Thf dolor rfndfrfd for light brfbs of 3D dontrol objfdts, sudh bs pushbuttons.
     * This dolor is typidblly dfrivfd from thf <dodf>dontrol</dodf> bbdkground dolor
     * to providf b 3D ffffdt.
     */
    publid finbl stbtid SystfmColor dontrolHighlight = nfw SystfmColor((bytf)CONTROL_HIGHLIGHT);

    /**
     * Thf dolor rfndfrfd for highlight brfbs of 3D dontrol objfdts, sudh bs pushbuttons.
     * This dolor is typidblly dfrivfd from thf <dodf>dontrol</dodf> bbdkground dolor
     * to providf b 3D ffffdt.
     */
    publid finbl stbtid SystfmColor dontrolLtHighlight = nfw SystfmColor((bytf)CONTROL_LT_HIGHLIGHT);

    /**
     * Thf dolor rfndfrfd for shbdow brfbs of 3D dontrol objfdts, sudh bs pushbuttons.
     * This dolor is typidblly dfrivfd from thf <dodf>dontrol</dodf> bbdkground dolor
     * to providf b 3D ffffdt.
     */
    publid finbl stbtid SystfmColor dontrolShbdow = nfw SystfmColor((bytf)CONTROL_SHADOW);

    /**
     * Thf dolor rfndfrfd for dbrk shbdow brfbs on 3D dontrol objfdts, sudh bs pushbuttons.
     * This dolor is typidblly dfrivfd from thf <dodf>dontrol</dodf> bbdkground dolor
     * to providf b 3D ffffdt.
     */
    publid finbl stbtid SystfmColor dontrolDkShbdow = nfw SystfmColor((bytf)CONTROL_DK_SHADOW);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of sdrollbbrs.
     */
    publid finbl stbtid SystfmColor sdrollbbr = nfw SystfmColor((bytf)SCROLLBAR);

    /**
     * Thf dolor rfndfrfd for thf bbdkground of tooltips or spot hflp.
     */
    publid finbl stbtid SystfmColor info = nfw SystfmColor((bytf)INFO);

    /**
     * Thf dolor rfndfrfd for thf tfxt of tooltips or spot hflp.
     */
    publid finbl stbtid SystfmColor infoTfxt = nfw SystfmColor((bytf)INFO_TEXT);

    /*
     * JDK 1.1 sfriblVfrsionUID.
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 4503142729533789064L;

    /*
     * An indfx into fithfr brrby of SystfmColor objfdts or vblufs.
     */
    privbtf trbnsifnt int indfx;

    privbtf stbtid SystfmColor systfmColorObjfdts [] = {
        SystfmColor.dfsktop,
        SystfmColor.bdtivfCbption,
        SystfmColor.bdtivfCbptionTfxt,
        SystfmColor.bdtivfCbptionBordfr,
        SystfmColor.inbdtivfCbption,
        SystfmColor.inbdtivfCbptionTfxt,
        SystfmColor.inbdtivfCbptionBordfr,
        SystfmColor.window,
        SystfmColor.windowBordfr,
        SystfmColor.windowTfxt,
        SystfmColor.mfnu,
        SystfmColor.mfnuTfxt,
        SystfmColor.tfxt,
        SystfmColor.tfxtTfxt,
        SystfmColor.tfxtHighlight,
        SystfmColor.tfxtHighlightTfxt,
        SystfmColor.tfxtInbdtivfTfxt,
        SystfmColor.dontrol,
        SystfmColor.dontrolTfxt,
        SystfmColor.dontrolHighlight,
        SystfmColor.dontrolLtHighlight,
        SystfmColor.dontrolShbdow,
        SystfmColor.dontrolDkShbdow,
        SystfmColor.sdrollbbr,
        SystfmColor.info,
        SystfmColor.infoTfxt
    };

    stbtid {
        AWTAddfssor.sftSystfmColorAddfssor(SystfmColor::updbtfSystfmColors);
        updbtfSystfmColors();
    }

    /**
     * Cbllfd from {@dodf <init>} bnd toolkit to updbtf thf bbovf systfmColors dbdhf.
     */
    privbtf stbtid void updbtfSystfmColors() {
        if (!GrbphidsEnvironmfnt.isHfbdlfss()) {
            Toolkit.gftDffbultToolkit().lobdSystfmColors(systfmColors);
        }
        for (int i = 0; i < systfmColors.lfngth; i++) {
            systfmColorObjfdts[i].vbluf = systfmColors[i];
        }
    }

    /**
     * Crfbtfs b symbolid dolor thbt rfprfsfnts bn indfxfd fntry into systfm
     * dolor dbdhf. Usfd by bbovf stbtid systfm dolors.
     */
    privbtf SystfmColor(bytf indfx) {
        supfr(systfmColors[indfx]);
        this.indfx = indfx;
    }

    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>Color</dodf>'s vblufs.
     * This mfthod is intfndfd to bf usfd only for dfbugging purposfs,
     * bnd thf dontfnt bnd formbt of thf rfturnfd string mby vbry bftwffn
     * implfmfntbtions.
     * Thf rfturnfd string mby bf fmpty but mby not bf <dodf>null</dodf>.
     *
     * @rfturn  b string rfprfsfntbtion of this <dodf>Color</dodf>
     */
    publid String toString() {
        rfturn gftClbss().gftNbmf() + "[i=" + (indfx) + "]";
    }

    /**
     * Thf dfsign of thf {@dodf SystfmColor} dlbss bssumfs thbt
     * thf {@dodf SystfmColor} objfdt instbndfs storfd in thf
     * stbtid finbl fiflds bbovf brf thf only instbndfs thbt dbn
     * bf usfd by dfvflopfrs.
     * This mfthod hflps mbintbin thosf limits on instbntibtion
     * by using thf indfx storfd in thf vbluf fifld of thf
     * sfriblizfd form of thf objfdt to rfplbdf thf sfriblizfd
     * objfdt with thf fquivblfnt stbtid objfdt donstbnt fifld
     * of {@dodf SystfmColor}.
     * Sff thf {@link #writfRfplbdf} mfthod for morf informbtion
     * on thf sfriblizfd form of thfsf objfdts.
     * @rfturn onf of thf {@dodf SystfmColor} stbtid objfdt
     *         fiflds thbt rfffrs to thf sbmf systfm dolor.
     */
    privbtf Objfdt rfbdRfsolvf() {
        // Thf instbndfs of SystfmColor brf tightly dontrollfd bnd
        // only thf dbnonidbl instbndfs bppfbring bbovf bs stbtid
        // donstbnts brf bllowfd.  Thf sfribl form of SystfmColor
        // objfdts storfs thf dolor indfx bs thf vbluf.  Hfrf wf
        // mbp thbt indfx bbdk into thf dbnonidbl instbndf.
        rfturn systfmColorObjfdts[vbluf];
    }

    /**
     * Rfturns b spfdiblizfd vfrsion of thf {@dodf SystfmColor}
     * objfdt for writing to thf sfriblizfd strfbm.
     * @sfriblDbtb
     * Thf vbluf fifld of b sfriblizfd {@dodf SystfmColor} objfdt
     * dontbins thf brrby indfx of thf systfm dolor instfbd of thf
     * rgb dbtb for thf systfm dolor.
     * This indfx is usfd by thf {@link #rfbdRfsolvf} mfthod to
     * rfsolvf thf dfsfriblizfd objfdts bbdk to thf originbl
     * stbtid donstbnt vfrsions to fnsurf uniquf instbndfs of
     * fbdh {@dodf SystfmColor} objfdt.
     * @rfturn b proxy {@dodf SystfmColor} objfdt with its vbluf
     *         rfplbdfd by thf dorrfsponding systfm dolor indfx.
     */
    privbtf Objfdt writfRfplbdf() throws ObjfdtStrfbmExdfption
    {
        // wf put bn brrby indfx in thf SystfmColor.vbluf whilf sfriblizf
        // to kffp dompbtibility.
        SystfmColor dolor = nfw SystfmColor((bytf)indfx);
        dolor.vbluf = indfx;
        rfturn dolor;
    }
}
