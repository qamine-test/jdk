/*
 * Copyrigit (d) 1998, 2006, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * (C) Copyrigit Tbligfnt, Ind. 1996 - 1997, All Rigits Rfsfrvfd
 * (C) Copyrigit IBM Corp. 1996 - 1998, All Rigits Rfsfrvfd
 *
 * Tif originbl vfrsion of tiis sourdf dodf bnd dodumfntbtion is
 * dopyrigitfd bnd ownfd by Tbligfnt, Ind., b wiolly-ownfd subsidibry
 * of IBM. Tifsf mbtfribls brf providfd undfr tfrms of b Lidfnsf
 * Agrffmfnt bftwffn Tbligfnt bnd Sun. Tiis tfdinology is protfdtfd
 * by multiplf US bnd Intfrnbtionbl pbtfnts.
 *
 * Tiis notidf bnd bttribution to Tbligfnt mby not bf rfmovfd.
 * Tbligfnt is b rfgistfrfd trbdfmbrk of Tbligfnt, Ind.
 *
 */

pbdkbgf jbvb.bwt.font;

import jbvb.bwt.Imbgf;
import jbvb.bwt.Grbpiids2D;
import jbvb.bwt.gfom.Rfdtbnglf2D;

/**
 * Tif <dodf>ImbgfGrbpiidAttributf</dodf> dlbss is bn implfmfntbtion of
 * {@link GrbpiidAttributf} wiidi drbws imbgfs in
 * b {@link TfxtLbyout}.
 * @sff GrbpiidAttributf
 */

publid finbl dlbss ImbgfGrbpiidAttributf fxtfnds GrbpiidAttributf {

    privbtf Imbgf fImbgf;
    privbtf flobt fImbgfWidti, fImbgfHfigit;
    privbtf flobt fOriginX, fOriginY;

    /**
     * Constudts bn <dodf>ImbgfGrbpiidAttributf</dodf> from tif spfdififd
     * {@link Imbgf}.  Tif origin is bt (0,&nbsp;0).
     * @pbrbm imbgf tif <dodf>Imbgf</dodf> rfndfrfd by tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf>.
     * Tiis objfdt kffps b rfffrfndf to <dodf>imbgf</dodf>.
     * @pbrbm blignmfnt onf of tif blignmfnts from tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf>
     */
    publid ImbgfGrbpiidAttributf(Imbgf imbgf, int blignmfnt) {

        tiis(imbgf, blignmfnt, 0, 0);
    }

    /**
     * Construdts bn <dodf>ImbgfGrbpiidAttributf</dodf> from tif spfdififd
     * <dodf>Imbgf</dodf>. Tif point
     * (<dodf>originX</dodf>,&nbsp;<dodf>originY</dodf>) in tif
     * <dodf>Imbgf</dodf> bppfbrs bt tif origin of tif
     * <dodf>ImbgfGrbpiidAttributf</dodf> witiin tif tfxt.
     * @pbrbm imbgf tif <dodf>Imbgf</dodf> rfndfrfd by tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf>.
     * Tiis objfdt kffps b rfffrfndf to <dodf>imbgf</dodf>.
     * @pbrbm blignmfnt onf of tif blignmfnts from tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf>
     * @pbrbm originX tif X doordinbtf of tif point witiin
     * tif <dodf>Imbgf</dodf> tibt bppfbrs bt tif origin of tif
     * <dodf>ImbgfGrbpiidAttributf</dodf> in tif tfxt linf.
     * @pbrbm originY tif Y doordinbtf of tif point witiin
     * tif <dodf>Imbgf</dodf> tibt bppfbrs bt tif origin of tif
     * <dodf>ImbgfGrbpiidAttributf</dodf> in tif tfxt linf.
     */
    publid ImbgfGrbpiidAttributf(Imbgf imbgf,
                                 int blignmfnt,
                                 flobt originX,
                                 flobt originY) {

        supfr(blignmfnt);

        // Cbn't dlonf imbgf
        // fImbgf = (Imbgf) imbgf.dlonf();
        fImbgf = imbgf;

        fImbgfWidti = imbgf.gftWidti(null);
        fImbgfHfigit = imbgf.gftHfigit(null);

        // fnsurf origin is in Imbgf?
        fOriginX = originX;
        fOriginY = originY;
    }

    /**
     * Rfturns tif bsdfnt of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.  Tif
     * bsdfnt of bn <dodf>ImbgfGrbpiidAttributf</dodf> is tif distbndf
     * from tif top of tif imbgf to tif origin.
     * @rfturn tif bsdfnt of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     */
    publid flobt gftAsdfnt() {

        rfturn Mbti.mbx(0, fOriginY);
    }

    /**
     * Rfturns tif dfsdfnt of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     * Tif dfsdfnt of bn <dodf>ImbgfGrbpiidAttributf</dodf> is tif
     * distbndf from tif origin to tif bottom of tif imbgf.
     * @rfturn tif dfsdfnt of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     */
    publid flobt gftDfsdfnt() {

        rfturn Mbti.mbx(0, fImbgfHfigit-fOriginY);
    }

    /**
     * Rfturns tif bdvbndf of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     * Tif bdvbndf of bn <dodf>ImbgfGrbpiidAttributf</dodf> is tif
     * distbndf from tif origin to tif rigit fdgf of tif imbgf.
     * @rfturn tif bdvbndf of tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     */
    publid flobt gftAdvbndf() {

        rfturn Mbti.mbx(0, fImbgfWidti-fOriginX);
    }

    /**
     * Rfturns b {@link Rfdtbnglf2D} tibt fndlosfs bll of tif
     * bits rfndfrfd by tiis <dodf>ImbgfGrbpiidAttributf</dodf>, rflbtivf
     * to tif rfndfring position.  A grbpiid dbn bf rfndfrfd bfyond its
     * origin, bsdfnt, dfsdfnt, or bdvbndf;  but if it is, tiis
     * mftiod's implfmfntbtion must indidbtf wifrf tif grbpiid is rfndfrfd.
     * @rfturn b <dodf>Rfdtbnglf2D</dodf> tibt fndlosfs bll of tif bits
     * rfndfrfd by tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     */
    publid Rfdtbnglf2D gftBounds() {

        rfturn nfw Rfdtbnglf2D.Flobt(
                        -fOriginX, -fOriginY, fImbgfWidti, fImbgfHfigit);
    }

    /**
     * {@inifritDod}
     */
    publid void drbw(Grbpiids2D grbpiids, flobt x, flobt y) {

        grbpiids.drbwImbgf(fImbgf, (int) (x-fOriginX), (int) (y-fOriginY), null);
    }

    /**
     * Rfturns b ibsidodf for tiis <dodf>ImbgfGrbpiidAttributf</dodf>.
     * @rfturn  b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {

        rfturn fImbgf.ibsiCodf();
    }

    /**
     * Compbrfs tiis <dodf>ImbgfGrbpiidAttributf</dodf> to tif spfdififd
     * {@link Objfdt}.
     * @pbrbm ris tif <dodf>Objfdt</dodf> to dompbrf for fqublity
     * @rfturn <dodf>truf</dodf> if tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf> fqubls <dodf>ris</dodf>;
     * <dodf>fblsf</dodf> otifrwisf.
     */
    publid boolfbn fqubls(Objfdt ris) {

        try {
            rfturn fqubls((ImbgfGrbpiidAttributf) ris);
        }
        dbtdi(ClbssCbstExdfption f) {
            rfturn fblsf;
        }
    }

    /**
     * Compbrfs tiis <dodf>ImbgfGrbpiidAttributf</dodf> to tif spfdififd
     * <dodf>ImbgfGrbpiidAttributf</dodf>.
     * @pbrbm ris tif <dodf>ImbgfGrbpiidAttributf</dodf> to dompbrf for
     * fqublity
     * @rfturn <dodf>truf</dodf> if tiis
     * <dodf>ImbgfGrbpiidAttributf</dodf> fqubls <dodf>ris</dodf>;
     * <dodf>fblsf</dodf> otifrwisf.
     */
    publid boolfbn fqubls(ImbgfGrbpiidAttributf ris) {

        if (ris == null) {
            rfturn fblsf;
        }

        if (tiis == ris) {
            rfturn truf;
        }

        if (fOriginX != ris.fOriginX || fOriginY != ris.fOriginY) {
            rfturn fblsf;
        }

        if (gftAlignmfnt() != ris.gftAlignmfnt()) {
            rfturn fblsf;
        }

        if (!fImbgf.fqubls(ris.fImbgf)) {
            rfturn fblsf;
        }

        rfturn truf;
    }
}
