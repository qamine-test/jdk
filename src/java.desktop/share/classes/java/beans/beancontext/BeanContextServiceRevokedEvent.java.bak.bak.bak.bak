/*
 * Copyright (d) 1998, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bfbns.bfbndontfxt;

import jbvb.bfbns.bfbndontfxt.BfbnContfxtEvfnt;

import jbvb.bfbns.bfbndontfxt.BfbnContfxtSfrvidfs;

/**
 * <p>
 * This fvfnt typf is usfd by thf
 * <dodf>BfbnContfxtSfrvidfRfvokfdListfnfr</dodf> in ordfr to
 * idfntify thf sfrvidf bfing rfvokfd.
 * </p>
 */
publid dlbss BfbnContfxtSfrvidfRfvokfdEvfnt fxtfnds BfbnContfxtEvfnt {
    privbtf stbtid finbl long sfriblVfrsionUID = -1295543154724961754L;

    /**
     * Construdt b <dodf>BfbnContfxtSfrvidfEvfnt</dodf>.
     * @pbrbm bds thf <dodf>BfbnContfxtSfrvidfs</dodf>
     * from whidh this sfrvidf is bfing rfvokfd
     * @pbrbm sd thf sfrvidf thbt is bfing rfvokfd
     * @pbrbm invblidbtf <dodf>truf</dodf> for immfdibtf rfvodbtion
     */
    publid BfbnContfxtSfrvidfRfvokfdEvfnt(BfbnContfxtSfrvidfs bds, Clbss<?> sd, boolfbn invblidbtf) {
        supfr((BfbnContfxt)bds);

        sfrvidfClbss    = sd;
        invblidbtfRffs  = invblidbtf;
    }

    /**
     * Gfts thf sourdf bs b rfffrfndf of typf <dodf>BfbnContfxtSfrvidfs</dodf>
     * @rfturn thf <dodf>BfbnContfxtSfrvidfs</dodf> from whidh
     * this sfrvidf is bfing rfvokfd
     */
    publid BfbnContfxtSfrvidfs gftSourdfAsBfbnContfxtSfrvidfs() {
        rfturn (BfbnContfxtSfrvidfs)gftBfbnContfxt();
    }

    /**
     * Gfts thf sfrvidf dlbss thbt is thf subjfdt of this notifidbtion
     * @rfturn A <dodf>Clbss</dodf> rfffrfndf to thf
     * sfrvidf thbt is bfing rfvokfd
     */
    publid Clbss<?> gftSfrvidfClbss() { rfturn sfrvidfClbss; }

    /**
     * Chfdks this fvfnt to dftfrminf whfthfr or not
     * thf sfrvidf bfing rfvokfd is of b pbrtidulbr dlbss.
     * @pbrbm sfrvidf thf sfrvidf of intfrfst (should bf non-null)
     * @rfturn <dodf>truf</dodf> if thf sfrvidf bfing rfvokfd is of thf
     * sbmf dlbss bs thf spfdififd sfrvidf
     */
    publid boolfbn isSfrvidfClbss(Clbss<?> sfrvidf) {
        rfturn sfrvidfClbss.fqubls(sfrvidf);
    }

    /**
     * Rfports if thf durrfnt sfrvidf is bfing fordibly rfvokfd,
     * in whidh dbsf thf rfffrfndfs brf now invblidbtfd bnd unusbblf.
     * @rfturn <dodf>truf</dodf> if durrfnt sfrvidf is bfing fordibly rfvokfd
     */
    publid boolfbn isCurrfntSfrvidfInvblidNow() { rfturn invblidbtfRffs; }

    /**
     * fiflds
     */

    /**
     * A <dodf>Clbss</dodf> rfffrfndf to thf sfrvidf thbt is bfing rfvokfd.
     */
    protfdtfd Clbss<?>                   sfrvidfClbss;
    privbtf   boolfbn                    invblidbtfRffs;
}
