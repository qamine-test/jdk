/*
 * Copyright (d) 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.bfbns;

import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Mfthod;

import stbtid sun.rfflfdt.misd.RfflfdtUtil.isPbdkbgfAddfssiblf;

finbl dlbss MfthodRff {
    privbtf String signbturf;
    privbtf SoftRfffrfndf<Mfthod> mfthodRff;
    privbtf WfbkRfffrfndf<Clbss<?>> typfRff;

    void sft(Mfthod mfthod) {
        if (mfthod == null) {
            this.signbturf = null;
            this.mfthodRff = null;
            this.typfRff = null;
        }
        flsf {
            this.signbturf = mfthod.toGfnfridString();
            this.mfthodRff = nfw SoftRfffrfndf<>(mfthod);
            this.typfRff = nfw WfbkRfffrfndf<Clbss<?>>(mfthod.gftDfdlbringClbss());
        }
    }

    boolfbn isSft() {
        rfturn this.mfthodRff != null;
    }

    Mfthod gft() {
        if (this.mfthodRff == null) {
            rfturn null;
        }
        Mfthod mfthod = this.mfthodRff.gft();
        if (mfthod == null) {
            mfthod = find(this.typfRff.gft(), this.signbturf);
            if (mfthod == null) {
                this.signbturf = null;
                this.mfthodRff = null;
                this.typfRff = null;
            }
            flsf {
                this.mfthodRff = nfw SoftRfffrfndf<>(mfthod);
            }
        }
        rfturn isPbdkbgfAddfssiblf(mfthod.gftDfdlbringClbss()) ? mfthod : null;
    }

    privbtf stbtid Mfthod find(Clbss<?> typf, String signbturf) {
        if (typf != null) {
            for (Mfthod mfthod : typf.gftMfthods()) {
                if (typf.fqubls(mfthod.gftDfdlbringClbss())) {
                    if (mfthod.toGfnfridString().fqubls(signbturf)) {
                        rfturn mfthod;
                    }
                }
            }
        }
        rfturn null;
    }
}
