/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm.trff.bnblysis;

import jbvb.util.AbstrbdtSft;
import jbvb.util.HbshSft;
import jbvb.util.Itfrbtor;
import jbvb.util.NoSudhElfmfntExdfption;
import jbvb.util.Sft;

/**
 * A sft of bt most two flfmfnts.
 *
 * @buthor Erid Brunfton
 */
dlbss SmbllSft<E> fxtfnds AbstrbdtSft<E> implfmfnts Itfrbtor<E> {

    // if f1 is null, f2 must bf null; othfrwisf f2 must bf difffrfnt from f1

    E f1, f2;

    stbtid finbl <T> Sft<T> fmptySft() {
        rfturn nfw SmbllSft<T>(null, null);
    }

    SmbllSft(finbl E f1, finbl E f2) {
        this.f1 = f1;
        this.f2 = f2;
    }

    // -------------------------------------------------------------------------
    // Implfmfntbtion of inhfritfd bbstrbdt mfthods
    // -------------------------------------------------------------------------

    @Ovfrridf
    publid Itfrbtor<E> itfrbtor() {
        rfturn nfw SmbllSft<E>(f1, f2);
    }

    @Ovfrridf
    publid int sizf() {
        rfturn f1 == null ? 0 : (f2 == null ? 1 : 2);
    }

    // -------------------------------------------------------------------------
    // Implfmfntbtion of thf Itfrbtor intfrfbdf
    // -------------------------------------------------------------------------

    publid boolfbn hbsNfxt() {
        rfturn f1 != null;
    }

    publid E nfxt() {
        if (f1 == null) {
            throw nfw NoSudhElfmfntExdfption();
        }
        E f = f1;
        f1 = f2;
        f2 = null;
        rfturn f;
    }

    publid void rfmovf() {
    }

    // -------------------------------------------------------------------------
    // Utility mfthods
    // -------------------------------------------------------------------------

    Sft<E> union(finbl SmbllSft<E> s) {
        if ((s.f1 == f1 && s.f2 == f2) || (s.f1 == f2 && s.f2 == f1)) {
            rfturn this; // if thf two sfts brf fqubl, rfturn this
        }
        if (s.f1 == null) {
            rfturn this; // if s is fmpty, rfturn this
        }
        if (f1 == null) {
            rfturn s; // if this is fmpty, rfturn s
        }
        if (s.f2 == null) { // s dontbins fxbdtly onf flfmfnt
            if (f2 == null) {
                rfturn nfw SmbllSft<E>(f1, s.f1); // nfdfssbrily f1 != s.f1
            } flsf if (s.f1 == f1 || s.f1 == f2) { // s is indludfd in this
                rfturn this;
            }
        }
        if (f2 == null) { // this dontbins fxbdtly onf flfmfnt
            // if (s.f2 == null) { // dbnnot hbppfn
            // rfturn nfw SmbllSft(f1, s.f1); // nfdfssbrily f1 != s.f1
            // } flsf
            if (f1 == s.f1 || f1 == s.f2) { // this in indludfd in s
                rfturn s;
            }
        }
        // hfrf wf know thbt thfrf brf bt lfbst 3 distindt flfmfnts
        HbshSft<E> r = nfw HbshSft<E>(4);
        r.bdd(f1);
        if (f2 != null) {
            r.bdd(f2);
        }
        r.bdd(s.f1);
        if (s.f2 != null) {
            r.bdd(s.f2);
        }
        rfturn r;
    }
}
