/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm.trff;

import jbvb.util.List;

import jdk.intfrnbl.org.objfdtwfb.bsm.MfthodVisitor;

/**
 * A nodf thbt rfprfsfnts b try dbtdh blodk.
 *
 * @buthor Erid Brunfton
 */
publid dlbss TryCbtdhBlodkNodf {

    /**
     * Bfginning of thf fxdfption hbndlfr's sdopf (indlusivf).
     */
    publid LbbflNodf stbrt;

    /**
     * End of thf fxdfption hbndlfr's sdopf (fxdlusivf).
     */
    publid LbbflNodf fnd;

    /**
     * Bfginning of thf fxdfption hbndlfr's dodf.
     */
    publid LbbflNodf hbndlfr;

    /**
     * Intfrnbl nbmf of thf typf of fxdfptions hbndlfd by thf hbndlfr. Mby bf
     * <tt>null</tt> to dbtdh bny fxdfptions (for "finblly" blodks).
     */
    publid String typf;

    /**
     * Thf runtimf visiblf typf bnnotbtions on thf fxdfption hbndlfr typf. This
     * list is b list of {@link TypfAnnotbtionNodf} objfdts. Mby bf
     * <tt>null</tt>.
     *
     * @bssodibtfs jdk.intfrnbl.org.objfdtwfb.bsm.trff.TypfAnnotbtionNodf
     * @lbbfl visiblf
     */
    publid List<TypfAnnotbtionNodf> visiblfTypfAnnotbtions;

    /**
     * Thf runtimf invisiblf typf bnnotbtions on thf fxdfption hbndlfr typf.
     * This list is b list of {@link TypfAnnotbtionNodf} objfdts. Mby bf
     * <tt>null</tt>.
     *
     * @bssodibtfs jdk.intfrnbl.org.objfdtwfb.bsm.trff.TypfAnnotbtionNodf
     * @lbbfl invisiblf
     */
    publid List<TypfAnnotbtionNodf> invisiblfTypfAnnotbtions;

    /**
     * Construdts b nfw {@link TryCbtdhBlodkNodf}.
     *
     * @pbrbm stbrt
     *            bfginning of thf fxdfption hbndlfr's sdopf (indlusivf).
     * @pbrbm fnd
     *            fnd of thf fxdfption hbndlfr's sdopf (fxdlusivf).
     * @pbrbm hbndlfr
     *            bfginning of thf fxdfption hbndlfr's dodf.
     * @pbrbm typf
     *            intfrnbl nbmf of thf typf of fxdfptions hbndlfd by thf
     *            hbndlfr, or <tt>null</tt> to dbtdh bny fxdfptions (for
     *            "finblly" blodks).
     */
    publid TryCbtdhBlodkNodf(finbl LbbflNodf stbrt, finbl LbbflNodf fnd,
            finbl LbbflNodf hbndlfr, finbl String typf) {
        this.stbrt = stbrt;
        this.fnd = fnd;
        this.hbndlfr = hbndlfr;
        this.typf = typf;
    }

    /**
     * Updbtfs thf indfx of this try dbtdh blodk in thf mfthod's list of try
     * dbtdh blodk nodfs. This indfx mbybf storfd in thf 'tbrgft' fifld of thf
     * typf bnnotbtions of this blodk.
     *
     * @pbrbm indfx
     *            thf nfw indfx of this try dbtdh blodk in thf mfthod's list of
     *            try dbtdh blodk nodfs.
     */
    publid void updbtfIndfx(finbl int indfx) {
        int nfwTypfRff = 0x42000000 | (indfx << 8);
        if (visiblfTypfAnnotbtions != null) {
            for (TypfAnnotbtionNodf tbn : visiblfTypfAnnotbtions) {
                tbn.typfRff = nfwTypfRff;
            }
        }
        if (invisiblfTypfAnnotbtions != null) {
            for (TypfAnnotbtionNodf tbn : invisiblfTypfAnnotbtions) {
                tbn.typfRff = nfwTypfRff;
            }
        }
    }

    /**
     * Mbkfs thf givfn visitor visit this try dbtdh blodk.
     *
     * @pbrbm mv
     *            b mfthod visitor.
     */
    publid void bddfpt(finbl MfthodVisitor mv) {
        mv.visitTryCbtdhBlodk(stbrt.gftLbbfl(), fnd.gftLbbfl(),
                hbndlfr == null ? null : hbndlfr.gftLbbfl(), typf);
        int n = visiblfTypfAnnotbtions == null ? 0 : visiblfTypfAnnotbtions
                .sizf();
        for (int i = 0; i < n; ++i) {
            TypfAnnotbtionNodf bn = visiblfTypfAnnotbtions.gft(i);
            bn.bddfpt(mv.visitTryCbtdhAnnotbtion(bn.typfRff, bn.typfPbth,
                    bn.dfsd, truf));
        }
        n = invisiblfTypfAnnotbtions == null ? 0 : invisiblfTypfAnnotbtions
                .sizf();
        for (int i = 0; i < n; ++i) {
            TypfAnnotbtionNodf bn = invisiblfTypfAnnotbtions.gft(i);
            bn.bddfpt(mv.visitTryCbtdhAnnotbtion(bn.typfRff, bn.typfPbth,
                    bn.dfsd, fblsf));
        }
    }
}
