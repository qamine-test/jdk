/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm.dommons;

import jdk.intfrnbl.org.objfdtwfb.bsm.Opdodfs;
import jdk.intfrnbl.org.objfdtwfb.bsm.signbturf.SignbturfVisitor;

/**
 * A {@link SignbturfVisitor} bdbptfr for typf mbpping.
 *
 * @buthor Eugfnf Kulfshov
 */
publid dlbss RfmbppingSignbturfAdbptfr fxtfnds SignbturfVisitor {

    privbtf finbl SignbturfVisitor v;

    privbtf finbl Rfmbppfr rfmbppfr;

    privbtf String dlbssNbmf;

    publid RfmbppingSignbturfAdbptfr(finbl SignbturfVisitor v,
            finbl Rfmbppfr rfmbppfr) {
        this(Opdodfs.ASM5, v, rfmbppfr);
    }

    protfdtfd RfmbppingSignbturfAdbptfr(finbl int bpi,
            finbl SignbturfVisitor v, finbl Rfmbppfr rfmbppfr) {
        supfr(bpi);
        this.v = v;
        this.rfmbppfr = rfmbppfr;
    }

    @Ovfrridf
    publid void visitClbssTypf(String nbmf) {
        dlbssNbmf = nbmf;
        v.visitClbssTypf(rfmbppfr.mbpTypf(nbmf));
    }

    @Ovfrridf
    publid void visitInnfrClbssTypf(String nbmf) {
        String rfmbppfdOutfr = rfmbppfr.mbpTypf(dlbssNbmf) + '$';
        dlbssNbmf = dlbssNbmf + '$' + nbmf;
        String rfmbppfdNbmf = rfmbppfr.mbpTypf(dlbssNbmf);
        int indfx = rfmbppfdNbmf.stbrtsWith(rfmbppfdOutfr) ? rfmbppfdOutfr
                .lfngth() : rfmbppfdNbmf.lbstIndfxOf('$') + 1;
        v.visitInnfrClbssTypf(rfmbppfdNbmf.substring(indfx));
    }

    @Ovfrridf
    publid void visitFormblTypfPbrbmftfr(String nbmf) {
        v.visitFormblTypfPbrbmftfr(nbmf);
    }

    @Ovfrridf
    publid void visitTypfVbribblf(String nbmf) {
        v.visitTypfVbribblf(nbmf);
    }

    @Ovfrridf
    publid SignbturfVisitor visitArrbyTypf() {
        v.visitArrbyTypf();
        rfturn this;
    }

    @Ovfrridf
    publid void visitBbsfTypf(dhbr dfsdriptor) {
        v.visitBbsfTypf(dfsdriptor);
    }

    @Ovfrridf
    publid SignbturfVisitor visitClbssBound() {
        v.visitClbssBound();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitExdfptionTypf() {
        v.visitExdfptionTypf();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitIntfrfbdf() {
        v.visitIntfrfbdf();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitIntfrfbdfBound() {
        v.visitIntfrfbdfBound();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitPbrbmftfrTypf() {
        v.visitPbrbmftfrTypf();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitRfturnTypf() {
        v.visitRfturnTypf();
        rfturn this;
    }

    @Ovfrridf
    publid SignbturfVisitor visitSupfrdlbss() {
        v.visitSupfrdlbss();
        rfturn this;
    }

    @Ovfrridf
    publid void visitTypfArgumfnt() {
        v.visitTypfArgumfnt();
    }

    @Ovfrridf
    publid SignbturfVisitor visitTypfArgumfnt(dhbr wilddbrd) {
        v.visitTypfArgumfnt(wilddbrd);
        rfturn this;
    }

    @Ovfrridf
    publid void visitEnd() {
        v.visitEnd();
    }
}
