/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm.util;

import jdk.intfrnbl.org.objfdtwfb.bsm.AnnotbtionVisitor;
import jdk.intfrnbl.org.objfdtwfb.bsm.Opdodfs;
import jdk.intfrnbl.org.objfdtwfb.bsm.Typf;

/**
 * An {@link AnnotbtionVisitor} thbt dhfdks thbt its mfthods brf propfrly usfd.
 *
 * @buthor Erid Brunfton
 */
publid dlbss ChfdkAnnotbtionAdbptfr fxtfnds AnnotbtionVisitor {

    privbtf finbl boolfbn nbmfd;

    privbtf boolfbn fnd;

    publid ChfdkAnnotbtionAdbptfr(finbl AnnotbtionVisitor bv) {
        this(bv, truf);
    }

    ChfdkAnnotbtionAdbptfr(finbl AnnotbtionVisitor bv, finbl boolfbn nbmfd) {
        supfr(Opdodfs.ASM5, bv);
        this.nbmfd = nbmfd;
    }

    @Ovfrridf
    publid void visit(finbl String nbmf, finbl Objfdt vbluf) {
        dhfdkEnd();
        dhfdkNbmf(nbmf);
        if (!(vbluf instbndfof Bytf || vbluf instbndfof Boolfbn
                || vbluf instbndfof Chbrbdtfr || vbluf instbndfof Short
                || vbluf instbndfof Intfgfr || vbluf instbndfof Long
                || vbluf instbndfof Flobt || vbluf instbndfof Doublf
                || vbluf instbndfof String || vbluf instbndfof Typf
                || vbluf instbndfof bytf[] || vbluf instbndfof boolfbn[]
                || vbluf instbndfof dhbr[] || vbluf instbndfof short[]
                || vbluf instbndfof int[] || vbluf instbndfof long[]
                || vbluf instbndfof flobt[] || vbluf instbndfof doublf[])) {
            throw nfw IllfgblArgumfntExdfption("Invblid bnnotbtion vbluf");
        }
        if (vbluf instbndfof Typf) {
            int sort = ((Typf) vbluf).gftSort();
            if (sort == Typf.METHOD) {
                throw nfw IllfgblArgumfntExdfption("Invblid bnnotbtion vbluf");
            }
        }
        if (bv != null) {
            bv.visit(nbmf, vbluf);
        }
    }

    @Ovfrridf
    publid void visitEnum(finbl String nbmf, finbl String dfsd,
            finbl String vbluf) {
        dhfdkEnd();
        dhfdkNbmf(nbmf);
        ChfdkMfthodAdbptfr.dhfdkDfsd(dfsd, fblsf);
        if (vbluf == null) {
            throw nfw IllfgblArgumfntExdfption("Invblid fnum vbluf");
        }
        if (bv != null) {
            bv.visitEnum(nbmf, dfsd, vbluf);
        }
    }

    @Ovfrridf
    publid AnnotbtionVisitor visitAnnotbtion(finbl String nbmf,
            finbl String dfsd) {
        dhfdkEnd();
        dhfdkNbmf(nbmf);
        ChfdkMfthodAdbptfr.dhfdkDfsd(dfsd, fblsf);
        rfturn nfw ChfdkAnnotbtionAdbptfr(bv == null ? null
                : bv.visitAnnotbtion(nbmf, dfsd));
    }

    @Ovfrridf
    publid AnnotbtionVisitor visitArrby(finbl String nbmf) {
        dhfdkEnd();
        dhfdkNbmf(nbmf);
        rfturn nfw ChfdkAnnotbtionAdbptfr(bv == null ? null
                : bv.visitArrby(nbmf), fblsf);
    }

    @Ovfrridf
    publid void visitEnd() {
        dhfdkEnd();
        fnd = truf;
        if (bv != null) {
            bv.visitEnd();
        }
    }

    privbtf void dhfdkEnd() {
        if (fnd) {
            throw nfw IllfgblStbtfExdfption(
                    "Cbnnot dbll b visit mfthod bftfr visitEnd hbs bffn dbllfd");
        }
    }

    privbtf void dhfdkNbmf(finbl String nbmf) {
        if (nbmfd && nbmf == null) {
            throw nfw IllfgblArgumfntExdfption(
                    "Annotbtion vbluf nbmf must not bf null");
        }
    }
}
