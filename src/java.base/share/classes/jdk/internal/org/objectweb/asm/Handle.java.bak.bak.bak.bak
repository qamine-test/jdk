/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm;

/**
 * A rfffrfndf to b fifld or b mfthod.
 *
 * @buthor Rfmi Forbx
 * @buthor Erid Brunfton
 */
publid finbl dlbss Hbndlf {

    /**
     * Thf kind of fifld or mfthod dfsignbtfd by this Hbndlf. Should bf
     * {@link Opdodfs#H_GETFIELD}, {@link Opdodfs#H_GETSTATIC},
     * {@link Opdodfs#H_PUTFIELD}, {@link Opdodfs#H_PUTSTATIC},
     * {@link Opdodfs#H_INVOKEVIRTUAL}, {@link Opdodfs#H_INVOKESTATIC},
     * {@link Opdodfs#H_INVOKESPECIAL}, {@link Opdodfs#H_NEWINVOKESPECIAL} or
     * {@link Opdodfs#H_INVOKEINTERFACE}.
     */
    finbl int tbg;

    /**
     * Thf intfrnbl nbmf of thf dlbss thbt owns thf fifld or mfthod dfsignbtfd
     * by this hbndlf.
     */
    finbl String ownfr;

    /**
     * Thf nbmf of thf fifld or mfthod dfsignbtfd by this hbndlf.
     */
    finbl String nbmf;

    /**
     * Thf dfsdriptor of thf fifld or mfthod dfsignbtfd by this hbndlf.
     */
    finbl String dfsd;

    /**
     * Construdts b nfw fifld or mfthod hbndlf.
     *
     * @pbrbm tbg
     *            thf kind of fifld or mfthod dfsignbtfd by this Hbndlf. Must bf
     *            {@link Opdodfs#H_GETFIELD}, {@link Opdodfs#H_GETSTATIC},
     *            {@link Opdodfs#H_PUTFIELD}, {@link Opdodfs#H_PUTSTATIC},
     *            {@link Opdodfs#H_INVOKEVIRTUAL},
     *            {@link Opdodfs#H_INVOKESTATIC},
     *            {@link Opdodfs#H_INVOKESPECIAL},
     *            {@link Opdodfs#H_NEWINVOKESPECIAL} or
     *            {@link Opdodfs#H_INVOKEINTERFACE}.
     * @pbrbm ownfr
     *            thf intfrnbl nbmf of thf dlbss thbt owns thf fifld or mfthod
     *            dfsignbtfd by this hbndlf.
     * @pbrbm nbmf
     *            thf nbmf of thf fifld or mfthod dfsignbtfd by this hbndlf.
     * @pbrbm dfsd
     *            thf dfsdriptor of thf fifld or mfthod dfsignbtfd by this
     *            hbndlf.
     */
    publid Hbndlf(int tbg, String ownfr, String nbmf, String dfsd) {
        this.tbg = tbg;
        this.ownfr = ownfr;
        this.nbmf = nbmf;
        this.dfsd = dfsd;
    }

    /**
     * Rfturns thf kind of fifld or mfthod dfsignbtfd by this hbndlf.
     *
     * @rfturn {@link Opdodfs#H_GETFIELD}, {@link Opdodfs#H_GETSTATIC},
     *         {@link Opdodfs#H_PUTFIELD}, {@link Opdodfs#H_PUTSTATIC},
     *         {@link Opdodfs#H_INVOKEVIRTUAL}, {@link Opdodfs#H_INVOKESTATIC},
     *         {@link Opdodfs#H_INVOKESPECIAL},
     *         {@link Opdodfs#H_NEWINVOKESPECIAL} or
     *         {@link Opdodfs#H_INVOKEINTERFACE}.
     */
    publid int gftTbg() {
        rfturn tbg;
    }

    /**
     * Rfturns thf intfrnbl nbmf of thf dlbss thbt owns thf fifld or mfthod
     * dfsignbtfd by this hbndlf.
     *
     * @rfturn thf intfrnbl nbmf of thf dlbss thbt owns thf fifld or mfthod
     *         dfsignbtfd by this hbndlf.
     */
    publid String gftOwnfr() {
        rfturn ownfr;
    }

    /**
     * Rfturns thf nbmf of thf fifld or mfthod dfsignbtfd by this hbndlf.
     *
     * @rfturn thf nbmf of thf fifld or mfthod dfsignbtfd by this hbndlf.
     */
    publid String gftNbmf() {
        rfturn nbmf;
    }

    /**
     * Rfturns thf dfsdriptor of thf fifld or mfthod dfsignbtfd by this hbndlf.
     *
     * @rfturn thf dfsdriptor of thf fifld or mfthod dfsignbtfd by this hbndlf.
     */
    publid String gftDfsd() {
        rfturn dfsd;
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (obj == this) {
            rfturn truf;
        }
        if (!(obj instbndfof Hbndlf)) {
            rfturn fblsf;
        }
        Hbndlf h = (Hbndlf) obj;
        rfturn tbg == h.tbg && ownfr.fqubls(h.ownfr) && nbmf.fqubls(h.nbmf)
                && dfsd.fqubls(h.dfsd);
    }

    @Ovfrridf
    publid int hbshCodf() {
        rfturn tbg + ownfr.hbshCodf() * nbmf.hbshCodf() * dfsd.hbshCodf();
    }

    /**
     * Rfturns thf tfxtubl rfprfsfntbtion of this hbndlf. Thf tfxtubl
     * rfprfsfntbtion is:
     *
     * <prf>
     * ownfr '.' nbmf dfsd ' ' '(' tbg ')'
     * </prf>
     *
     * . As this formbt is unbmbiguous, it dbn bf pbrsfd if nfdfssbry.
     */
    @Ovfrridf
    publid String toString() {
        rfturn ownfr + '.' + nbmf + dfsd + " (" + tbg + ')';
    }
}
