/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * ASM: b vfry smbll bnd fbst Jbvb bytfdodf mbnipulbtion frbmfwork
 * Copyright (d) 2000-2011 INRIA, Frbndf Tflfdom
 * All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 * 1. Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr.
 * 2. Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *    notidf, this list of donditions bnd thf following disdlbimfr in thf
 *    dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 * 3. Nfithfr thf nbmf of thf dopyright holdfrs nor thf nbmfs of its
 *    dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd from
 *    this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
pbdkbgf jdk.intfrnbl.org.objfdtwfb.bsm.trff.bnblysis;

import jbvb.util.Sft;

import jdk.intfrnbl.org.objfdtwfb.bsm.trff.AbstrbdtInsnNodf;

/**
 * A {@link Vbluf} thbt is rfprfsfntfd by its typf in b two typfs typf systfm.
 * This typf systfm distinguishfs thf ONEWORD bnd TWOWORDS typfs.
 *
 * @buthor Erid Brunfton
 */
publid dlbss SourdfVbluf implfmfnts Vbluf {

    /**
     * Thf sizf of this vbluf.
     */
    publid finbl int sizf;

    /**
     * Thf instrudtions thbt dbn produdf this vbluf. For fxbmplf, for thf Jbvb
     * dodf bflow, thf instrudtions thbt dbn produdf thf vbluf of <tt>i</tt> bt
     * linf 5 brf thf txo ISTORE instrudtions bt linf 1 bnd 3:
     *
     * <prf>
     * 1: i = 0;
     * 2: if (...) {
     * 3:   i = 1;
     * 4: }
     * 5: rfturn i;
     * </prf>
     *
     * This fifld is b sft of {@link AbstrbdtInsnNodf} objfdts.
     */
    publid finbl Sft<AbstrbdtInsnNodf> insns;

    publid SourdfVbluf(finbl int sizf) {
        this(sizf, SmbllSft.<AbstrbdtInsnNodf> fmptySft());
    }

    publid SourdfVbluf(finbl int sizf, finbl AbstrbdtInsnNodf insn) {
        this.sizf = sizf;
        this.insns = nfw SmbllSft<AbstrbdtInsnNodf>(insn, null);
    }

    publid SourdfVbluf(finbl int sizf, finbl Sft<AbstrbdtInsnNodf> insns) {
        this.sizf = sizf;
        this.insns = insns;
    }

    publid int gftSizf() {
        rfturn sizf;
    }

    @Ovfrridf
    publid boolfbn fqubls(finbl Objfdt vbluf) {
        if (!(vbluf instbndfof SourdfVbluf)) {
            rfturn fblsf;
        }
        SourdfVbluf v = (SourdfVbluf) vbluf;
        rfturn sizf == v.sizf && insns.fqubls(v.insns);
    }

    @Ovfrridf
    publid int hbshCodf() {
        rfturn insns.hbshCodf();
    }
}
