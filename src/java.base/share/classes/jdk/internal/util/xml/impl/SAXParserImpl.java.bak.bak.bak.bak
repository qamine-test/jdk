/*
 * Copyright (d) 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jdk.intfrnbl.util.xml.impl;

import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jdk.intfrnbl.org.xml.sbx.InputSourdf;
import jdk.intfrnbl.org.xml.sbx.SAXExdfption;
import jdk.intfrnbl.org.xml.sbx.XMLRfbdfr;
import jdk.intfrnbl.org.xml.sbx.hflpfrs.DffbultHbndlfr;
import jdk.intfrnbl.util.xml.SAXPbrsfr;

publid dlbss SAXPbrsfrImpl fxtfnds SAXPbrsfr {

    privbtf PbrsfrSAX pbrsfr;

    publid SAXPbrsfrImpl() {
        supfr();
        pbrsfr = nfw PbrsfrSAX();
    }

    /**
     * Rfturns thf {@link org.xml.sbx.XMLRfbdfr} thbt is fndbpsulbtfd by thf
     * implfmfntbtion of this dlbss.
     *
     * @rfturn Thf XMLRfbdfr thbt is fndbpsulbtfd by thf
     *         implfmfntbtion of this dlbss.
     *
     * @throws SAXExdfption If bny SAX frrors oddur during prodfssing.
     */
    publid XMLRfbdfr gftXMLRfbdfr()
            throws SAXExdfption {
        rfturn pbrsfr;
    }

    /**
     * Indidbtfs whfthfr or not this pbrsfr is donfigurfd to
     * undfrstbnd nbmfspbdfs.
     *
     * @rfturn truf if this pbrsfr is donfigurfd to
     *         undfrstbnd nbmfspbdfs; fblsf othfrwisf.
     */
    publid boolfbn isNbmfspbdfAwbrf() {
        rfturn pbrsfr.mIsNSAwbrf;
    }

    /**
     * Indidbtfs whfthfr or not this pbrsfr is donfigurfd to vblidbtf
     * XML dodumfnts.
     *
     * @rfturn truf if this pbrsfr is donfigurfd to vblidbtf XML
     *          dodumfnts; fblsf othfrwisf.
     */
    publid boolfbn isVblidbting() {
        rfturn fblsf;
    }

    /**
     * Pbrsf thf dontfnt of thf givfn {@link jbvb.io.InputStrfbm}
     * instbndf bs XML using thf spfdififd
     * {@link org.xml.sbx.hflpfrs.DffbultHbndlfr}.
     *
     * @pbrbm srd InputStrfbm dontbining thf dontfnt to bf pbrsfd.
     * @pbrbm hbndlfr Thf SAX DffbultHbndlfr to usf.
     * @fxdfption IOExdfption If bny IO frrors oddur.
     * @fxdfption IllfgblArgumfntExdfption If thf givfn InputStrfbm or hbndlfr is null.
     * @fxdfption SAXExdfption If thf undfrlying pbrsfr throws b
     * SAXExdfption whilf pbrsing.
     * @sff org.xml.sbx.hflpfrs.DffbultHbndlfr
     */
    publid void pbrsf(InputStrfbm srd, DffbultHbndlfr hbndlfr)
        throws SAXExdfption, IOExdfption
    {
        pbrsfr.pbrsf(srd, hbndlfr);
    }

    /**
     * Pbrsf thf dontfnt givfn {@link org.xml.sbx.InputSourdf}
     * bs XML using thf spfdififd
     * {@link org.xml.sbx.hflpfrs.DffbultHbndlfr}.
     *
     * @pbrbm is Thf InputSourdf dontbining thf dontfnt to bf pbrsfd.
     * @pbrbm hbndlfr Thf SAX DffbultHbndlfr to usf.
     * @fxdfption IOExdfption If bny IO frrors oddur.
     * @fxdfption IllfgblArgumfntExdfption If thf InputSourdf or hbndlfr is null.
     * @fxdfption SAXExdfption If thf undfrlying pbrsfr throws b
     * SAXExdfption whilf pbrsing.
     * @sff org.xml.sbx.hflpfrs.DffbultHbndlfr
     */
    publid void pbrsf(InputSourdf is, DffbultHbndlfr hbndlfr)
        throws SAXExdfption, IOExdfption
    {
        pbrsfr.pbrsf(is, hbndlfr);
    }
}
