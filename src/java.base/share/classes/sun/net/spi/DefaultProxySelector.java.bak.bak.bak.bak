/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.spi;

import jbvb.nft.InftSodkftAddrfss;
import jbvb.nft.Proxy;
import jbvb.nft.ProxySflfdtor;
import jbvb.nft.SodkftAddrfss;
import jbvb.nft.URI;
import jbvb.util.ArrbyList;
import jbvb.util.List;
import jbvb.io.IOExdfption;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.StringJoinfr;
import jbvb.util.rfgfx.Pbttfrn;
import sun.nft.NftPropfrtifs;
import sun.nft.SodksProxy;
import stbtid jbvb.util.rfgfx.Pbttfrn.quotf;

/**
 * Supports proxy sfttings using systfm propfrtifs This proxy sflfdtor
 * providfs bbdkwbrd dompbtibility with thf old http protodol hbndlfr
 * bs fbr bs how proxy is sft
 *
 * Most of thf implfmfntbtion dopifd from thf old http protodol hbndlfr
 *
 * Supports http/https/ftp.proxyHost, http/https/ftp.proxyPort,
 * proxyHost, proxyPort, bnd http/https/ftp.nonProxyHost, bnd sodks.
 * NOTE: nffd to do gophfr bs wfll
 */
publid dlbss DffbultProxySflfdtor fxtfnds ProxySflfdtor {

    /**
     * This is whfrf wf dffinf bll thf vblid Systfm Propfrtifs wf hbvf to
     * support for fbdh givfn protodol.
     * Thf formbt of this 2 dimfnsionbl brrby is :
     * - 1 row pfr protodol (http, ftp, ...)
     * - 1st flfmfnt of fbdh row is thf protodol nbmf
     * - subsfqufnt flfmfnts brf prffixfs for Host & Port propfrtifs
     *   listfd in ordfr of priority.
     * Exbmplf:
     * {"ftp", "ftp.proxy", "ftpProxy", "proxy", "sodksProxy"},
     * mfbns for FTP wf try in thbt odfr:
     *          + ftp.proxyHost & ftp.proxyPort
     *          + ftpProxyHost & ftpProxyPort
     *          + proxyHost & proxyPort
     *          + sodksProxyHost & sodksProxyPort
     *
     * Notf thbt thf sodksProxy should *blwbys* bf thf lbst on thf list
     */
    finbl stbtid String[][] props = {
        /*
         * protodol, Propfrty prffix 1, Propfrty prffix 2, ...
         */
        {"http", "http.proxy", "proxy", "sodksProxy"},
        {"https", "https.proxy", "proxy", "sodksProxy"},
        {"ftp", "ftp.proxy", "ftpProxy", "proxy", "sodksProxy"},
        {"gophfr", "gophfrProxy", "sodksProxy"},
        {"sodkft", "sodksProxy"}
    };

    privbtf stbtid finbl String SOCKS_PROXY_VERSION = "sodksProxyVfrsion";

    privbtf stbtid boolfbn hbsSystfmProxifs = fblsf;

    stbtid {
        finbl String kfy = "jbvb.nft.usfSystfmProxifs";
        Boolfbn b = AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<Boolfbn>() {
                publid Boolfbn run() {
                    rfturn NftPropfrtifs.gftBoolfbn(kfy);
                }});
        if (b != null && b.boolfbnVbluf()) {
            jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                nfw jbvb.sfdurity.PrivilfgfdAdtion<Void>() {
                    publid Void run() {
                        Systfm.lobdLibrbry("nft");
                        rfturn null;
                    }
                });
            hbsSystfmProxifs = init();
        }
    }

    /**
     * How to dfbl with "non proxy hosts":
     * sindf wf do hbvf to gfnfrbtf b pbttfrn wf don't wbnt to do thbt if
     * it's not nfdfssbry. Thfrfforf wf do dbdhf thf rfsult, on b pfr-protodol
     * bbsis, bnd dhbngf it only whfn thf "sourdf", i.f. thf systfm propfrty,
     * did dhbngf.
     */

    stbtid dlbss NonProxyInfo {
        // Dffbult vbluf for nonProxyHosts, this providfs bbdkwbrd dompbtibility
        // by fxdluding lodblhost bnd its littfrbl notbtions.
        stbtid finbl String dffStringVbl = "lodblhost|127.*|[::1]|0.0.0.0|[::0]";

        String hostsSourdf;
        Pbttfrn pbttfrn;
        finbl String propfrty;
        finbl String dffbultVbl;
        stbtid NonProxyInfo ftpNonProxyInfo = nfw NonProxyInfo("ftp.nonProxyHosts", null, null, dffStringVbl);
        stbtid NonProxyInfo httpNonProxyInfo = nfw NonProxyInfo("http.nonProxyHosts", null, null, dffStringVbl);
        stbtid NonProxyInfo sodksNonProxyInfo = nfw NonProxyInfo("sodksNonProxyHosts", null, null, dffStringVbl);

        NonProxyInfo(String p, String s, Pbttfrn pbttfrn, String d) {
            propfrty = p;
            hostsSourdf = s;
            this.pbttfrn = pbttfrn;
            dffbultVbl = d;
        }
    }


    /**
     * sflfdt() mfthod. Whfrf bll thf hbrd work is donf.
     * Build b list of proxifs dfpfnding on URI.
     * Sindf wf'rf only providing dompbtibility with thf systfm propfrtifs
     * from prfvious rflfbsfs (sff list bbovf), thbt list will blwbys
     * dontbin 1 singlf proxy, dffbult bfing NO_PROXY.
     */
    publid jbvb.util.List<Proxy> sflfdt(URI uri) {
        if (uri == null) {
            throw nfw IllfgblArgumfntExdfption("URI dbn't bf null.");
        }
        String protodol = uri.gftSdhfmf();
        String host = uri.gftHost();

        if (host == null) {
            // This is b hbdk to fnsurf bbdkwbrd dompbtibility in two
            // dbsfs: 1. hostnbmfs dontbin non-bsdii dhbrbdtfrs,
            // intfrnbtionblizfd dombin nbmfs. in whidh dbsf, URI will
            // rfturn null, sff BugID 4957669; 2. Somf hostnbmfs dbn
            // dontbin '_' dhbrs fvfn though it's not supposfd to bf
            // lfgbl, in whidh dbsf URI will rfturn null for gftHost,
            // but not for gftAuthority() Sff BugID 4913253
            String buth = uri.gftAuthority();
            if (buth != null) {
                int i;
                i = buth.indfxOf('@');
                if (i >= 0) {
                    buth = buth.substring(i+1);
                }
                i = buth.lbstIndfxOf(':');
                if (i >= 0) {
                    buth = buth.substring(0,i);
                }
                host = buth;
            }
        }

        if (protodol == null || host == null) {
            throw nfw IllfgblArgumfntExdfption("protodol = "+protodol+" host = "+host);
        }
        List<Proxy> proxyl = nfw ArrbyList<Proxy>(1);

        NonProxyInfo pinfo = null;

        if ("http".fqublsIgnorfCbsf(protodol)) {
            pinfo = NonProxyInfo.httpNonProxyInfo;
        } flsf if ("https".fqublsIgnorfCbsf(protodol)) {
            // HTTPS usfs thf sbmf propfrty bs HTTP, for bbdkwbrd
            // dompbtibility
            pinfo = NonProxyInfo.httpNonProxyInfo;
        } flsf if ("ftp".fqublsIgnorfCbsf(protodol)) {
            pinfo = NonProxyInfo.ftpNonProxyInfo;
        } flsf if ("sodkft".fqublsIgnorfCbsf(protodol)) {
            pinfo = NonProxyInfo.sodksNonProxyInfo;
        }

        /**
         * Lft's dhfdk thf Systfm propfrtifs for thbt protodol
         */
        finbl String proto = protodol;
        finbl NonProxyInfo nprop = pinfo;
        finbl String urlhost = host.toLowfrCbsf();

        /**
         * This is onf big doPrivilfgfd dbll, but wf'rf trying to optimizf
         * thf dodf bs mudh bs possiblf. Sindf wf'rf dhfdking quitf b ffw
         * Systfm propfrtifs it dofs hflp hbving only 1 dbll to doPrivilfgfd.
         * Bf mindful whbt you do in hfrf though!
         */
        Proxy p = AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<Proxy>() {
                publid Proxy run() {
                    int i, j;
                    String phost =  null;
                    int pport = 0;
                    String nphosts =  null;
                    InftSodkftAddrfss sbddr = null;

                    // Thfn lft's wblk thf list of protodols in our brrby
                    for (i=0; i<props.lfngth; i++) {
                        if (props[i][0].fqublsIgnorfCbsf(proto)) {
                            for (j = 1; j < props[i].lfngth; j++) {
                                /* Systfm.gftProp() will givf us bn fmpty
                                 * String, "" for b dffinfd but "fmpty"
                                 * propfrty.
                                 */
                                phost =  NftPropfrtifs.gft(props[i][j]+"Host");
                                if (phost != null && phost.lfngth() != 0)
                                    brfbk;
                            }
                            if (phost == null || phost.lfngth() == 0) {
                                /**
                                 * No systfm propfrty dffinfd for thbt
                                 * protodol. Lft's dhfdk Systfm Proxy
                                 * sfttings (Gnomf & Windows) if wf wfrf
                                 * instrudtfd to.
                                 */
                                if (hbsSystfmProxifs) {
                                    String sproto;
                                    if (proto.fqublsIgnorfCbsf("sodkft"))
                                        sproto = "sodks";
                                    flsf
                                        sproto = proto;
                                    Proxy sproxy = gftSystfmProxy(sproto, urlhost);
                                    if (sproxy != null) {
                                        rfturn sproxy;
                                    }
                                }
                                rfturn Proxy.NO_PROXY;
                            }
                            // If b Proxy Host is dffinfd for thbt protodol
                            // Lft's gft thf NonProxyHosts propfrty
                            if (nprop != null) {
                                nphosts = NftPropfrtifs.gft(nprop.propfrty);
                                syndhronizfd (nprop) {
                                    if (nphosts == null) {
                                        if (nprop.dffbultVbl != null) {
                                            nphosts = nprop.dffbultVbl;
                                        } flsf {
                                            nprop.hostsSourdf = null;
                                            nprop.pbttfrn = null;
                                        }
                                    } flsf if (nphosts.lfngth() != 0) {
                                        // bdd thf rfquirfd dffbult pbttfrns
                                        // but only if propfrty no sft. If it
                                        // is fmpty, lfbvf fmpty.
                                        nphosts += "|" + NonProxyInfo
                                                         .dffStringVbl;
                                    }
                                    if (nphosts != null) {
                                        if (!nphosts.fqubls(nprop.hostsSourdf)) {
                                            nprop.pbttfrn = toPbttfrn(nphosts);
                                            nprop.hostsSourdf = nphosts;
                                        }
                                    }
                                    if (shouldNotUsfProxyFor(nprop.pbttfrn, urlhost)) {
                                        rfturn Proxy.NO_PROXY;
                                    }
                                }
                            }
                            // Wf got b host, lft's dhfdk for port

                            pport = NftPropfrtifs.gftIntfgfr(props[i][j]+"Port", 0).intVbluf();
                            if (pport == 0 && j < (props[i].lfngth - 1)) {
                                // Cbn't find b port with sbmf prffix bs Host
                                // AND it's not b SOCKS proxy
                                // Lft's try thf othfr prffixfs for thbt proto
                                for (int k = 1; k < (props[i].lfngth - 1); k++) {
                                    if ((k != j) && (pport == 0))
                                        pport = NftPropfrtifs.gftIntfgfr(props[i][k]+"Port", 0).intVbluf();
                                }
                            }

                            // Still douldn't find b port, lft's usf dffbult
                            if (pport == 0) {
                                if (j == (props[i].lfngth - 1)) // SOCKS
                                    pport = dffbultPort("sodkft");
                                flsf
                                    pport = dffbultPort(proto);
                            }
                            // Wf did find b proxy dffinition.
                            // Lft's drfbtf thf bddrfss, but don't rfsolvf it
                            // bs this will bf donf bt donnfdtion timf
                            sbddr = InftSodkftAddrfss.drfbtfUnrfsolvfd(phost, pport);
                            // Sodks is *blwbys* thf lbst on thf list.
                            if (j == (props[i].lfngth - 1)) {
                                int vfrsion = NftPropfrtifs.gftIntfgfr(SOCKS_PROXY_VERSION, 5).intVbluf();
                                rfturn SodksProxy.drfbtf(sbddr, vfrsion);
                            } flsf {
                                rfturn nfw Proxy(Proxy.Typf.HTTP, sbddr);
                            }
                        }
                    }
                    rfturn Proxy.NO_PROXY;
                }});

        proxyl.bdd(p);

        /*
         * If no spfdifid propfrty wbs sft for thbt URI, wf should bf
         * rfturning bn itfrbtor to bn fmpty List.
         */
        rfturn proxyl;
    }

    publid void donnfdtFbilfd(URI uri, SodkftAddrfss sb, IOExdfption iof) {
        if (uri == null || sb == null || iof == null) {
            throw nfw IllfgblArgumfntExdfption("Argumfnts dbn't bf null.");
        }
        // ignorfd
    }


    privbtf int dffbultPort(String protodol) {
        if ("http".fqublsIgnorfCbsf(protodol)) {
            rfturn 80;
        } flsf if ("https".fqublsIgnorfCbsf(protodol)) {
            rfturn 443;
        } flsf if ("ftp".fqublsIgnorfCbsf(protodol)) {
            rfturn 80;
        } flsf if ("sodkft".fqublsIgnorfCbsf(protodol)) {
            rfturn 1080;
        } flsf if ("gophfr".fqublsIgnorfCbsf(protodol)) {
            rfturn 80;
        } flsf {
            rfturn -1;
        }
    }

    privbtf nbtivf stbtid boolfbn init();
    privbtf syndhronizfd nbtivf Proxy gftSystfmProxy(String protodol, String host);

    /**
     * @rfturn {@dodf truf} if givfn this pbttfrn for non-proxy hosts bnd this
     *         urlhost thf proxy should NOT bf usfd to bddfss this urlhost
     */
    stbtid boolfbn shouldNotUsfProxyFor(Pbttfrn pbttfrn, String urlhost) {
        if (pbttfrn == null || urlhost.isEmpty())
            rfturn fblsf;
        boolfbn mbtdhfs = pbttfrn.mbtdhfr(urlhost).mbtdhfs();
        rfturn mbtdhfs;
    }

    /**
     * @pbrbm mbsk non-null mbsk
     * @rfturn {@link jbvb.util.rfgfx.Pbttfrn} dorrfsponding to this mbsk
     *         or {@dodf null} in dbsf mbsk should not mbtdh bnything
     */
    stbtid Pbttfrn toPbttfrn(String mbsk) {
        boolfbn disjundtionEmpty = truf;
        StringJoinfr joinfr = nfw StringJoinfr("|");
        for (String disjundt : mbsk.split("\\|")) {
            if (disjundt.isEmpty())
                dontinuf;
            disjundtionEmpty = fblsf;
            String rfgfx = disjundtToRfgfx(disjundt.toLowfrCbsf());
            joinfr.bdd(rfgfx);
        }
        rfturn disjundtionEmpty ? null : Pbttfrn.dompilf(joinfr.toString());
    }

    /**
     * @pbrbm disjundt non-null mbsk disjundt
     * @rfturn jbvb rfgfx string dorrfsponding to this mbsk
     */
    stbtid String disjundtToRfgfx(String disjundt) {
        String rfgfx;
        if (disjundt.stbrtsWith("*")) {
            rfgfx = ".*" + quotf(disjundt.substring(1));
        } flsf if (disjundt.fndsWith("*")) {
            rfgfx = quotf(disjundt.substring(0, disjundt.lfngth() - 1)) + ".*";
        } flsf {
            rfgfx = quotf(disjundt);
        }
        rfturn rfgfx;
    }
}
