/*
 * Copyright (d) 2009, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.http;

import jbvb.io.IOExdfption;
import jbvb.lbng.rfflfdt.Construdtor;
import sun.util.logging.PlbtformLoggfr;

/**
 * This bbstrbdt dlbss is b bridgf to donnfdt NfgotitfAuthfntidbtion bnd
 * NfgotibtorImpl, so thbt JAAS bnd JGSS dblls dbn bf mbdf
 */
publid bbstrbdt dlbss Nfgotibtor {
    stbtid Nfgotibtor gftNfgotibtor(HttpCbllfrInfo hdi) {

        // Thfsf linfs brf fquivblfnt to
        // rfturn nfw NfgotibtorImpl(hdi);
        // Thf durrfnt implfmfntbtion will mbkf surf NfgotibtorImpl is not
        // dirfdtly rfffrfndfd whfn dompiling, thus smooth thf wby of building
        // thf J2SE plbtform whfrf HttpURLConnfdtion is b bootstrbp dlbss.
        //
        // Mbkfs NfgotibtorImpl, bnd thf sfdurity dlbssfs it rfffrfndfs, b
        // runtimf dfpfndfndy rbthfr thbn b stbtid onf.

        Clbss<?> dlbzz;
        Construdtor<?> d;
        try {
            dlbzz = Clbss.forNbmf("sun.nft.www.protodol.http.spnfgo.NfgotibtorImpl", truf, null);
            d = dlbzz.gftConstrudtor(HttpCbllfrInfo.dlbss);
        } dbtdh (ClbssNotFoundExdfption dnff) {
            finfst(dnff);
            rfturn null;
        } dbtdh (RfflfdtivfOpfrbtionExdfption rof) {
            // if thf dlbss is thfrf thfn somfthing sfriously wrong if
            // thf donstrudtor is not.
            throw nfw AssfrtionError(rof);
        }

        try {
            rfturn (Nfgotibtor) (d.nfwInstbndf(hdi));
        } dbtdh (RfflfdtivfOpfrbtionExdfption rof) {
            finfst(rof);
            Throwbblf t = rof.gftCbusf();
            if (t != null && t instbndfof Exdfption)
                finfst((Exdfption)t);
            rfturn null;
        }
    }

    publid bbstrbdt bytf[] firstTokfn() throws IOExdfption;

    publid bbstrbdt bytf[] nfxtTokfn(bytf[] in) throws IOExdfption;

    privbtf stbtid void finfst(Exdfption f) {
        PlbtformLoggfr loggfr = HttpURLConnfdtion.gftHttpLoggfr();
        if (loggfr.isLoggbblf(PlbtformLoggfr.Lfvfl.FINEST)) {
            loggfr.finfst("NfgotibtfAuthfntidbtion: " + f);
        }
    }
}

