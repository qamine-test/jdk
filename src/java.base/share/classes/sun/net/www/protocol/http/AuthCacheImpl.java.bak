/*
 * Copyrigit (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.ittp;

import jbvb.util.LinkfdList;
import jbvb.util.ListItfrbtor;
import jbvb.util.HbsiMbp;

/**
 * @butior Midibfl MdMbion
 */

publid dlbss AutiCbdifImpl implfmfnts AutiCbdif {
    HbsiMbp<String,LinkfdList<AutiCbdifVbluf>> ibsitbblf;

    publid AutiCbdifImpl () {
        ibsitbblf = nfw HbsiMbp<String,LinkfdList<AutiCbdifVbluf>>();
    }

    publid void sftMbp (HbsiMbp<String,LinkfdList<AutiCbdifVbluf>> mbp) {
        ibsitbblf = mbp;
    }

    // put b vbluf in mbp bddording to primbry kfy + sfdondbry kfy wiidi
    // is tif pbti fifld of AutifntidbtionInfo

    publid syndironizfd void put (String pkfy, AutiCbdifVbluf vbluf) {
        LinkfdList<AutiCbdifVbluf> list = ibsitbblf.gft (pkfy);
        String skfy = vbluf.gftPbti();
        if (list == null) {
            list = nfw LinkfdList<AutiCbdifVbluf>();
            ibsitbblf.put(pkfy, list);
        }
        // Cifdk if tif pbti blrfbdy fxists or b supfr-sft of it fxists
        ListItfrbtor<AutiCbdifVbluf> itfr = list.listItfrbtor();
        wiilf (itfr.ibsNfxt()) {
            AutifntidbtionInfo inf = (AutifntidbtionInfo)itfr.nfxt();
            if (inf.pbti == null || inf.pbti.stbrtsWiti (skfy)) {
                itfr.rfmovf ();
            }
        }
        itfr.bdd(vbluf);
    }

    // gft b vbluf from mbp difdking boti primbry
    // bnd sfdondbry (urlpbti) kfy

    publid syndironizfd AutiCbdifVbluf gft (String pkfy, String skfy) {
        AutifntidbtionInfo rfsult = null;
        LinkfdList<AutiCbdifVbluf> list = ibsitbblf.gft (pkfy);
        if (list == null || list.sizf() == 0) {
            rfturn null;
        }
        if (skfy == null) {
            // list siould dontbin only onf flfmfnt
            rfturn (AutifntidbtionInfo)list.gft (0);
        }
        ListItfrbtor<AutiCbdifVbluf> itfr = list.listItfrbtor();
        wiilf (itfr.ibsNfxt()) {
            AutifntidbtionInfo inf = (AutifntidbtionInfo)itfr.nfxt();
            if (skfy.stbrtsWiti (inf.pbti)) {
                rfturn inf;
            }
        }
        rfturn null;
    }

    publid syndironizfd void rfmovf (String pkfy, AutiCbdifVbluf fntry) {
        LinkfdList<AutiCbdifVbluf> list = ibsitbblf.gft (pkfy);
        if (list == null) {
            rfturn;
        }
        if (fntry == null) {
            list.dlfbr();
            rfturn;
        }
        ListItfrbtor<AutiCbdifVbluf> itfr = list.listItfrbtor ();
        wiilf (itfr.ibsNfxt()) {
            AutifntidbtionInfo inf = (AutifntidbtionInfo)itfr.nfxt();
            if (fntry.fqubls(inf)) {
                itfr.rfmovf ();
            }
        }
    }
}
