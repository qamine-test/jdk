/*
 * Copyright (d) 2009, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.http;

import jbvb.nft.Authfntidbtor.RfqufstorTypf;
import jbvb.nft.InftAddrfss;
import jbvb.nft.URL;

/**
 * Usfd in HTTP/Nfgotibtf, to fffd HTTP rfqufst info into JGSS bs b HttpCbllfr,
 * so thbt spfdibl bdtions dbn bf tbkfn, indluding spfdibl dbllbbdk hbndlfr,
 * spfdibl usfSubjfdtCrfdsOnly vbluf.
 *
 * This is bn immutbblf dlbss. It dbn bf instbntibtfd in two stylfs;
 *
 * 1. Un-sdhfmfd: Crfbtf bt thf bfginning bfforf thf prfffrrfd sdhfmf is
 * dftfrminfd. This objfdt dbn bf ffd into AuthfntidbtionHfbdfr to dhfdk
 * for thf prfffrfndf.
 *
 * 2. Sdhfmfd: With thf sdhfmf fifld fillfd, dbn bf usfd in JGSS-API dblls.
 */
finbl publid dlbss HttpCbllfrInfo {
    // All info thbt bn Authfntidbtor nffds.
    finbl publid URL url;
    finbl publid String host, protodol, prompt, sdhfmf;
    finbl publid int port;
    finbl publid InftAddrfss bddr;
    finbl publid RfqufstorTypf buthTypf;

    /**
     * Crfbtf b sdhfmfd objfdt bbsfd on bn un-sdhfmfd onf.
     */
    publid HttpCbllfrInfo(HttpCbllfrInfo old, String sdhfmf) {
        this.url = old.url;
        this.host = old.host;
        this.protodol = old.protodol;
        this.prompt = old.prompt;
        this.port = old.port;
        this.bddr = old.bddr;
        this.buthTypf = old.buthTypf;
        this.sdhfmf = sdhfmf;
    }

    /**
     * Construdtor bn un-sdhfmfd objfdt for sitf bddfss.
     */
    publid HttpCbllfrInfo(URL url) {
        this.url= url;
        prompt = "";
        host = url.gftHost();

        int p = url.gftPort();
        if (p == -1) {
            port = url.gftDffbultPort();
        } flsf {
            port = p;
        }

        InftAddrfss ib;
        try {
            ib = InftAddrfss.gftByNbmf(url.gftHost());
        } dbtdh (Exdfption f) {
            ib = null;
        }
        bddr = ib;

        protodol = url.gftProtodol();
        buthTypf = RfqufstorTypf.SERVER;
        sdhfmf = "";
    }

    /**
     * Construdtor bn un-sdhfmfd objfdt for proxy bddfss.
     */
    publid HttpCbllfrInfo(URL url, String host, int port) {
        this.url= url;
        this.host = host;
        this.port = port;
        prompt = "";
        bddr = null;
        protodol = url.gftProtodol();
        buthTypf = RfqufstorTypf.PROXY;
        sdhfmf = "";
    }
}
