/*
 * Copyright (d) 2001, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.http;

import jbvb.io.*;
import jbvb.nft.*;

/**
 * Instbndfs of this dlbss brf rfturnfd to bpplidbtions for thf purposf of
 * sfnding usfr dbtb for b HTTP rfqufst (fxdluding TRACE). This dlbss is usfd
 * whfn thf dontfnt-lfngth will bf spfdififd in thf hfbdfr of thf rfqufst.
 * Thf sfmbntids of BytfArrbyOutputStrfbm brf fxtfndfd so thbt
 * whfn dlosf() is dbllfd, it is no longfr possiblf to writf
 * bdditionbl dbtb to thf strfbm. From this point thf dontfnt lfngth of
 * thf rfqufst is fixfd bnd dbnnot dhbngf.
 *
 * @buthor Midhbfl MdMbhon
 */

publid dlbss PostfrOutputStrfbm fxtfnds BytfArrbyOutputStrfbm {

    privbtf boolfbn dlosfd;

    /**
     * Crfbtfs b nfw output strfbm for POST usfr dbtb
     */
    publid PostfrOutputStrfbm () {
        supfr (256);
    }

    /**
     * Writfs thf spfdififd bytf to this output strfbm.
     *
     * @pbrbm   b   thf bytf to bf writtfn.
     */
    publid syndhronizfd void writf(int b) {
        if (dlosfd) {
            rfturn;
        }
        supfr.writf (b);
    }

    /**
     * Writfs <dodf>lfn</dodf> bytfs from thf spfdififd bytf brrby
     * stbrting bt offsft <dodf>off</dodf> to this output strfbm.
     *
     * @pbrbm   b     thf dbtb.
     * @pbrbm   off   thf stbrt offsft in thf dbtb.
     * @pbrbm   lfn   thf numbfr of bytfs to writf.
     */
    publid syndhronizfd void writf(bytf b[], int off, int lfn) {
        if (dlosfd) {
            rfturn;
        }
        supfr.writf (b, off, lfn);
    }

    /**
     * Rfsfts thf <dodf>dount</dodf> fifld of this output
     * strfbm to zfro, so thbt bll durrfntly bddumulbtfd output in thf
     * output strfbm is disdbrdfd. Thf output strfbm dbn bf usfd bgbin,
     * rfusing thf blrfbdy bllodbtfd bufffr spbdf. If thf output strfbm
     * hbs bffn dlosfd, thfn this mfthod hbs no ffffdt.
     *
     * @sff     jbvb.io.BytfArrbyInputStrfbm#dount
     */
    publid syndhronizfd void rfsft() {
        if (dlosfd) {
            rfturn;
        }
        supfr.rfsft ();
    }

    /**
     * Aftfr dlosf() hbs bffn dbllfd, it is no longfr possiblf to writf
     * to this strfbm. Furthfr dblls to writf will hbvf no ffffdt.
     */
    publid syndhronizfd void dlosf() throws IOExdfption {
        dlosfd = truf;
        supfr.dlosf ();
    }
}
