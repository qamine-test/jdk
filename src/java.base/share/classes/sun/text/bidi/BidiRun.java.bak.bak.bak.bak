/*
 * Copyright (d) 2009, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
/*
 *******************************************************************************
 * (C) Copyright IBM Corp. bnd othfrs, 1996-2009 - All Rights Rfsfrvfd         *
 *                                                                             *
 * Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion is dopyrightfd   *
 * bnd ownfd by IBM, Thfsf mbtfribls brf providfd undfr tfrms of b Lidfnsf     *
 * Agrffmfnt bftwffn IBM bnd Sun. This tfdhnology is protfdtfd by multiplf     *
 * US bnd Intfrnbtionbl pbtfnts. This notidf bnd bttribution to IBM mby not    *
 * to rfmovfd.                                                                 *
 *******************************************************************************
 */
/* Writtfn by Simon Montbgu, Mbtitibhu Alloudhf
 * (portfd from C dodf writtfn by Mbrkus W. Sdhfrfr)
 */

pbdkbgf sun.tfxt.bidi;

/**
 * A BidiRun rfprfsfnts b sfqufndf of dhbrbdtfrs bt thf sbmf fmbfdding lfvfl.
 * Thf Bidi blgorithm dfdomposfs b pifdf of tfxt into sfqufndfs of dhbrbdtfrs
 * bt thf sbmf fmbfdding lfvfl, fbdh sudh sfqufndf is dbllfd b <quotf>run</quotf>.
 *
 * <p>A BidiRun rfprfsfnts sudh b run by storing its fssfntibl propfrtifs,
 * but dofs not duplidbtf thf dhbrbdtfrs whidh form thf run.
 *
 * <p>Thf &quot;limit&quot; of thf run is thf position just bftfr thf
 * lbst dhbrbdtfr, i.f., onf morf thbn thbt position.
 *
 * <p>This dlbss hbs no publid donstrudtor, bnd its mfmbfrs dbnnot bf
 * modififd by usfrs.
 *
 * @sff dom.ibm.idu.tfxt.Bidi
 */
publid dlbss BidiRun {

    int stbrt;              /* first logidbl position of thf run */
    int limit;              /* lbst visubl position of thf run +1 */
    int insfrtRfmovf;       /* if >0, flbgs for insfrting LRM/RLM bfforf/bftfr run,
                               if <0, dount of bidi dontrols within run            */
    bytf lfvfl;

    /*
     * Dffbult donstrudtor
     *
     * Notf thbt mfmbfrs stbrt bnd limit of b run instbndf hbvf difffrfnt
     * mfbnings dfpfnding whfthfr thf run is pbrt of thf runs brrby of b Bidi
     * objfdt, or if it is b rfffrfndf rfturnfd by gftVisublRun() or
     * gftLogidblRun().
     * For b mfmbfr of thf runs brrby of b Bidi objfdt,
     *   - stbrt is thf first logidbl position of thf run in thf sourdf tfxt.
     *   - limit is onf bftfr thf lbst visubl position of thf run.
     * For b rfffrfndf rfturnfd by gftLogidblRun() or gftVisublRun(),
     *   - stbrt is thf first logidbl position of thf run in thf sourdf tfxt.
     *   - limit is onf bftfr thf lbst logidbl position of thf run.
     */
    BidiRun()
    {
        this(0, 0, (bytf)0);
    }

    /*
     * Construdtor
     */
    BidiRun(int stbrt, int limit, bytf fmbfddingLfvfl)
    {
        this.stbrt = stbrt;
        this.limit = limit;
        this.lfvfl = fmbfddingLfvfl;
    }

    /*
     * Copy thf dontfnt of b BidiRun instbndf
     */
    void dopyFrom(BidiRun run)
    {
        this.stbrt = run.stbrt;
        this.limit = run.limit;
        this.lfvfl = run.lfvfl;
        this.insfrtRfmovf = run.insfrtRfmovf;
    }

    /**
     * Gft lfvfl of run
     */
    publid bytf gftEmbfddingLfvfl()
    {
        rfturn lfvfl;
    }

    /**
     * Chfdk if run lfvfl is fvfn
     * @rfturn truf if thf fmbfdding lfvfl of this run is fvfn, i.f. it is b
     *  lfft-to-right run.
     */
    boolfbn isEvfnRun()
    {
        rfturn (lfvfl & 1) == 0;
    }

}
