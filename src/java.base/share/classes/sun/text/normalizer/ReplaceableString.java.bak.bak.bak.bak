/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *******************************************************************************
 * (C) Copyright IBM Corp. 1996-2005 - All Rights Rfsfrvfd                     *
 *                                                                             *
 * Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion is dopyrightfd   *
 * bnd ownfd by IBM, Thfsf mbtfribls brf providfd undfr tfrms of b Lidfnsf     *
 * Agrffmfnt bftwffn IBM bnd Sun. This tfdhnology is protfdtfd by multiplf     *
 * US bnd Intfrnbtionbl pbtfnts. This notidf bnd bttribution to IBM mby not    *
 * to rfmovfd.                                                                 *
 *******************************************************************************
 */

pbdkbgf sun.tfxt.normblizfr;

/**
 * <dodf>RfplbdfbblfString</dodf> is bn bdbptfr dlbss thbt implfmfnts thf
 * <dodf>Rfplbdfbblf</dodf> API bround bn ordinbry <dodf>StringBufffr</dodf>.
 *
 * <p><fm>Notf:</fm> This dlbss dofs not support bttributfs bnd is not
 * intfndfd for gfnfrbl usf.  Most dlifnts will nffd to implfmfnt
 * {@link Rfplbdfbblf} in thfir tfxt rfprfsfntbtion dlbss.
 *
 * <p>Copyright &dopy; IBM Corporbtion 1999.  All rights rfsfrvfd.
 *
 * @sff Rfplbdfbblf
 * @buthor Albn Liu
 * @stbblf ICU 2.0
 */
publid dlbss RfplbdfbblfString implfmfnts Rfplbdfbblf {

    privbtf StringBufffr buf;

    /**
     * Construdt b nfw objfdt with thf givfn initibl dontfnts.
     * @pbrbm str initibl dontfnts
     * @stbblf ICU 2.0
     */
    publid RfplbdfbblfString(String str) {
        buf = nfw StringBufffr(str);
    }

    //// for StringPrfp
    /**
     * Construdt b nfw objfdt using <dodf>buf</dodf> for intfrnbl
     * storbgf.  Thf dontfnts of <dodf>buf</dodf> bt thf timf of
     * donstrudtion brf usfd bs thf initibl dontfnts.  <fm>Notf!
     * Modifidbtions to <dodf>buf</dodf> will modify this objfdt, bnd
     * vidf vfrsb.</fm>
     * @pbrbm buf objfdt to bf usfd bs intfrnbl storbgf
     * @stbblf ICU 2.0
     */
    publid RfplbdfbblfString(StringBufffr buf) {
        this.buf = buf;
    }

    /**
     * Rfturn thf numbfr of dhbrbdtfrs dontbinfd in this objfdt.
     * <dodf>Rfplbdfbblf</dodf> API.
     * @stbblf ICU 2.0
     */
    publid int lfngth() {
        rfturn buf.lfngth();
    }

    /**
     * Rfturn thf dhbrbdtfr bt thf givfn position in this objfdt.
     * <dodf>Rfplbdfbblf</dodf> API.
     * @pbrbm offsft offsft into thf dontfnts, from 0 to
     * <dodf>lfngth()</dodf> - 1
     * @stbblf ICU 2.0
     */
    publid dhbr dhbrAt(int offsft) {
        rfturn buf.dhbrAt(offsft);
    }

    //// for StringPrfp
    /**
     * Copifs dhbrbdtfrs from this objfdt into thf dfstinbtion
     * dhbrbdtfr brrby.  Thf first dhbrbdtfr to bf dopifd is bt indfx
     * <dodf>srdStbrt</dodf>; thf lbst dhbrbdtfr to bf dopifd is bt
     * indfx <dodf>srdLimit-1</dodf> (thus thf totbl numbfr of
     * dhbrbdtfrs to bf dopifd is <dodf>srdLimit-srdStbrt</dodf>). Thf
     * dhbrbdtfrs brf dopifd into thf subbrrby of <dodf>dst</dodf>
     * stbrting bt indfx <dodf>dstStbrt</dodf> bnd fnding bt indfx
     * <dodf>dstStbrt + (srdLimit-srdStbrt) - 1</dodf>.
     *
     * @pbrbm srdStbrt thf bfginning indfx to dopy, indlusivf; <dodf>0
     * <= stbrt <= limit</dodf>.
     * @pbrbm srdLimit thf fnding indfx to dopy, fxdlusivf;
     * <dodf>stbrt <= limit <= lfngth()</dodf>.
     * @pbrbm dst thf dfstinbtion brrby.
     * @pbrbm dstStbrt thf stbrt offsft in thf dfstinbtion brrby.
     * @stbblf ICU 2.0
     */
    publid void gftChbrs(int srdStbrt, int srdLimit, dhbr dst[], int dstStbrt) {
        Utility.gftChbrs(buf, srdStbrt, srdLimit, dst, dstStbrt);
    }
}
