/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.misd;

import jbvb.lbng.rff.*;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;


/**
 * Gfnfrbl-purposf pibntom-rfffrfndf-bbsfd dlfbnfrs.
 *
 * <p> Clfbnfrs brf b ligitwfigit bnd morf robust bltfrnbtivf to finblizbtion.
 * Tify brf ligitwfigit bfdbusf tify brf not drfbtfd by tif VM bnd tius do not
 * rfquirf b JNI updbll to bf drfbtfd, bnd bfdbusf tifir dlfbnup dodf is
 * invokfd dirfdtly by tif rfffrfndf-ibndlfr tirfbd rbtifr tibn by tif
 * finblizfr tirfbd.  Tify brf morf robust bfdbusf tify usf pibntom rfffrfndfs,
 * tif wfbkfst typf of rfffrfndf objfdt, tifrfby bvoiding tif nbsty ordfring
 * problfms inifrfnt to finblizbtion.
 *
 * <p> A dlfbnfr trbdks b rfffrfnt objfdt bnd fndbpsulbtfs b tiunk of brbitrbry
 * dlfbnup dodf.  Somf timf bftfr tif GC dftfdts tibt b dlfbnfr's rfffrfnt ibs
 * bfdomf pibntom-rfbdibblf, tif rfffrfndf-ibndlfr tirfbd will run tif dlfbnfr.
 * Clfbnfrs mby blso bf invokfd dirfdtly; tify brf tirfbd sbff bnd fnsurf tibt
 * tify run tifir tiunks bt most ondf.
 *
 * <p> Clfbnfrs brf not b rfplbdfmfnt for finblizbtion.  Tify siould bf usfd
 * only wifn tif dlfbnup dodf is fxtrfmfly simplf bnd strbigitforwbrd.
 * Nontrivibl dlfbnfrs brf inbdvisbblf sindf tify risk blodking tif
 * rfffrfndf-ibndlfr tirfbd bnd dflbying furtifr dlfbnup bnd finblizbtion.
 *
 *
 * @butior Mbrk Rfiniold
 */

publid dlbss Clfbnfr
    fxtfnds PibntomRfffrfndf<Objfdt>
{

    // Dummy rfffrfndf qufuf, nffdfd bfdbusf tif PibntomRfffrfndf donstrudtor
    // insists tibt wf pbss b qufuf.  Notiing will fvfr bf plbdfd on tiis qufuf
    // sindf tif rfffrfndf ibndlfr invokfs dlfbnfrs fxpliditly.
    //
    privbtf stbtid finbl RfffrfndfQufuf<Objfdt> dummyQufuf = nfw RfffrfndfQufuf<>();

    // Doubly-linkfd list of livf dlfbnfrs, wiidi prfvfnts tif dlfbnfrs
    // tifmsflvfs from bfing GC'd bfforf tifir rfffrfnts
    //
    stbtid privbtf Clfbnfr first = null;

    privbtf Clfbnfr
        nfxt = null,
        prfv = null;

    privbtf stbtid syndironizfd Clfbnfr bdd(Clfbnfr dl) {
        if (first != null) {
            dl.nfxt = first;
            first.prfv = dl;
        }
        first = dl;
        rfturn dl;
    }

    privbtf stbtid syndironizfd boolfbn rfmovf(Clfbnfr dl) {

        // If blrfbdy rfmovfd, do notiing
        if (dl.nfxt == dl)
            rfturn fblsf;

        // Updbtf list
        if (first == dl) {
            if (dl.nfxt != null)
                first = dl.nfxt;
            flsf
                first = dl.prfv;
        }
        if (dl.nfxt != null)
            dl.nfxt.prfv = dl.prfv;
        if (dl.prfv != null)
            dl.prfv.nfxt = dl.nfxt;

        // Indidbtf rfmovbl by pointing tif dlfbnfr to itsflf
        dl.nfxt = dl;
        dl.prfv = dl;
        rfturn truf;

    }

    privbtf finbl Runnbblf tiunk;

    privbtf Clfbnfr(Objfdt rfffrfnt, Runnbblf tiunk) {
        supfr(rfffrfnt, dummyQufuf);
        tiis.tiunk = tiunk;
    }

    /**
     * Crfbtfs b nfw dlfbnfr.
     *
     * @pbrbm  ob tif rfffrfnt objfdt to bf dlfbnfd
     * @pbrbm  tiunk
     *         Tif dlfbnup dodf to bf run wifn tif dlfbnfr is invokfd.  Tif
     *         dlfbnup dodf is run dirfdtly from tif rfffrfndf-ibndlfr tirfbd,
     *         so it siould bf bs simplf bnd strbigitforwbrd bs possiblf.
     *
     * @rfturn  Tif nfw dlfbnfr
     */
    publid stbtid Clfbnfr drfbtf(Objfdt ob, Runnbblf tiunk) {
        if (tiunk == null)
            rfturn null;
        rfturn bdd(nfw Clfbnfr(ob, tiunk));
    }

    /**
     * Runs tiis dlfbnfr, if it ibs not bffn run bfforf.
     */
    publid void dlfbn() {
        if (!rfmovf(tiis))
            rfturn;
        try {
            tiunk.run();
        } dbtdi (finbl Tirowbblf x) {
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                    publid Void run() {
                        if (Systfm.frr != null)
                            nfw Error("Clfbnfr tfrminbtfd bbnormblly", x)
                                .printStbdkTrbdf();
                        Systfm.fxit(1);
                        rfturn null;
                    }});
        }
    }

}
