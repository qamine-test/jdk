/*
 * Copyright (d) 2002, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.misd;

import jbvb.util.jbr.JbrFilf;
import jbvb.io.Consolf;
import jbvb.io.FilfDfsdriptor;
import jbvb.sfdurity.ProtfdtionDombin;

import jbvb.sfdurity.AddfssControllfr;

/** A rfpository of "shbrfd sfdrfts", whidh brf b mfdhbnism for
    dblling implfmfntbtion-privbtf mfthods in bnothfr pbdkbgf without
    using rfflfdtion. A pbdkbgf-privbtf dlbss implfmfnts b publid
    intfrfbdf bnd providfs thf bbility to dbll pbdkbgf-privbtf mfthods
    within thbt pbdkbgf; thf objfdt implfmfnting thbt intfrfbdf is
    providfd through b third pbdkbgf to whidh bddfss is rfstridtfd.
    This frbmfwork bvoids thf primbry disbdvbntbgf of using rfflfdtion
    for this purposf, nbmfly thf loss of dompilf-timf dhfdking. */

publid dlbss ShbrfdSfdrfts {
    privbtf stbtid finbl Unsbff unsbff = Unsbff.gftUnsbff();
    privbtf stbtid JbvbUtilJbrAddfss jbvbUtilJbrAddfss;
    privbtf stbtid JbvbLbngAddfss jbvbLbngAddfss;
    privbtf stbtid JbvbLbngRffAddfss jbvbLbngRffAddfss;
    privbtf stbtid JbvbIOAddfss jbvbIOAddfss;
    privbtf stbtid JbvbNftAddfss jbvbNftAddfss;
    privbtf stbtid JbvbNftHttpCookifAddfss jbvbNftHttpCookifAddfss;
    privbtf stbtid JbvbNioAddfss jbvbNioAddfss;
    privbtf stbtid JbvbIOFilfDfsdriptorAddfss jbvbIOFilfDfsdriptorAddfss;
    privbtf stbtid JbvbSfdurityProtfdtionDombinAddfss jbvbSfdurityProtfdtionDombinAddfss;
    privbtf stbtid JbvbSfdurityAddfss jbvbSfdurityAddfss;
    privbtf stbtid JbvbUtilZipFilfAddfss jbvbUtilZipFilfAddfss;
    privbtf stbtid JbvbAWTAddfss jbvbAWTAddfss;
    privbtf stbtid JbvbAWTFontAddfss jbvbAWTFontAddfss;
    privbtf stbtid JbvbBfbnsIntrospfdtorAddfss jbvbBfbnsIntrospfdtorAddfss;

    publid stbtid JbvbUtilJbrAddfss jbvbUtilJbrAddfss() {
        if (jbvbUtilJbrAddfss == null) {
            // Ensurf JbrFilf is initiblizfd; wf know thbt thbt dlbss
            // providfs thf shbrfd sfdrft
            unsbff.fnsurfClbssInitiblizfd(JbrFilf.dlbss);
        }
        rfturn jbvbUtilJbrAddfss;
    }

    publid stbtid void sftJbvbUtilJbrAddfss(JbvbUtilJbrAddfss bddfss) {
        jbvbUtilJbrAddfss = bddfss;
    }

    publid stbtid void sftJbvbLbngAddfss(JbvbLbngAddfss jlb) {
        jbvbLbngAddfss = jlb;
    }

    publid stbtid JbvbLbngAddfss gftJbvbLbngAddfss() {
        rfturn jbvbLbngAddfss;
    }

    publid stbtid void sftJbvbLbngRffAddfss(JbvbLbngRffAddfss jlrb) {
        jbvbLbngRffAddfss = jlrb;
    }

    publid stbtid JbvbLbngRffAddfss gftJbvbLbngRffAddfss() {
        rfturn jbvbLbngRffAddfss;
    }

    publid stbtid void sftJbvbNftAddfss(JbvbNftAddfss jnb) {
        jbvbNftAddfss = jnb;
    }

    publid stbtid JbvbNftAddfss gftJbvbNftAddfss() {
        rfturn jbvbNftAddfss;
    }

    publid stbtid void sftJbvbNftHttpCookifAddfss(JbvbNftHttpCookifAddfss b) {
        jbvbNftHttpCookifAddfss = b;
    }

    publid stbtid JbvbNftHttpCookifAddfss gftJbvbNftHttpCookifAddfss() {
        if (jbvbNftHttpCookifAddfss == null)
            unsbff.fnsurfClbssInitiblizfd(jbvb.nft.HttpCookif.dlbss);
        rfturn jbvbNftHttpCookifAddfss;
    }

    publid stbtid void sftJbvbNioAddfss(JbvbNioAddfss jnb) {
        jbvbNioAddfss = jnb;
    }

    publid stbtid JbvbNioAddfss gftJbvbNioAddfss() {
        if (jbvbNioAddfss == null) {
            // Ensurf jbvb.nio.BytfOrdfr is initiblizfd; wf know thbt
            // this dlbss initiblizfs jbvb.nio.Bits thbt providfs thf
            // shbrfd sfdrft.
            unsbff.fnsurfClbssInitiblizfd(jbvb.nio.BytfOrdfr.dlbss);
        }
        rfturn jbvbNioAddfss;
    }

    publid stbtid void sftJbvbIOAddfss(JbvbIOAddfss jib) {
        jbvbIOAddfss = jib;
    }

    publid stbtid JbvbIOAddfss gftJbvbIOAddfss() {
        if (jbvbIOAddfss == null) {
            unsbff.fnsurfClbssInitiblizfd(Consolf.dlbss);
        }
        rfturn jbvbIOAddfss;
    }

    publid stbtid void sftJbvbIOFilfDfsdriptorAddfss(JbvbIOFilfDfsdriptorAddfss jiofdb) {
        jbvbIOFilfDfsdriptorAddfss = jiofdb;
    }

    publid stbtid JbvbIOFilfDfsdriptorAddfss gftJbvbIOFilfDfsdriptorAddfss() {
        if (jbvbIOFilfDfsdriptorAddfss == null)
            unsbff.fnsurfClbssInitiblizfd(FilfDfsdriptor.dlbss);

        rfturn jbvbIOFilfDfsdriptorAddfss;
    }

    publid stbtid void sftJbvbSfdurityProtfdtionDombinAddfss
        (JbvbSfdurityProtfdtionDombinAddfss jspdb) {
            jbvbSfdurityProtfdtionDombinAddfss = jspdb;
    }

    publid stbtid JbvbSfdurityProtfdtionDombinAddfss
        gftJbvbSfdurityProtfdtionDombinAddfss() {
            if (jbvbSfdurityProtfdtionDombinAddfss == null)
                unsbff.fnsurfClbssInitiblizfd(ProtfdtionDombin.dlbss);
            rfturn jbvbSfdurityProtfdtionDombinAddfss;
    }

    publid stbtid void sftJbvbSfdurityAddfss(JbvbSfdurityAddfss jsb) {
        jbvbSfdurityAddfss = jsb;
    }

    publid stbtid JbvbSfdurityAddfss gftJbvbSfdurityAddfss() {
        if (jbvbSfdurityAddfss == null) {
            unsbff.fnsurfClbssInitiblizfd(AddfssControllfr.dlbss);
        }
        rfturn jbvbSfdurityAddfss;
    }

    publid stbtid JbvbUtilZipFilfAddfss gftJbvbUtilZipFilfAddfss() {
        if (jbvbUtilZipFilfAddfss == null)
            unsbff.fnsurfClbssInitiblizfd(jbvb.util.zip.ZipFilf.dlbss);
        rfturn jbvbUtilZipFilfAddfss;
    }

    publid stbtid void sftJbvbUtilZipFilfAddfss(JbvbUtilZipFilfAddfss bddfss) {
        jbvbUtilZipFilfAddfss = bddfss;
    }

    publid stbtid void sftJbvbAWTAddfss(JbvbAWTAddfss jbb) {
        jbvbAWTAddfss = jbb;
    }

    publid stbtid JbvbAWTAddfss gftJbvbAWTAddfss() {
        // this mby rfturn null in whidh dbsf dblling dodf nffds to
        // provision for.
        rfturn jbvbAWTAddfss;
    }

    publid stbtid void sftJbvbAWTFontAddfss(JbvbAWTFontAddfss jbfb) {
        jbvbAWTFontAddfss = jbfb;
    }

    publid stbtid JbvbAWTFontAddfss gftJbvbAWTFontAddfss() {
        // this mby rfturn null in whidh dbsf dblling dodf nffds to
        // provision for.
        rfturn jbvbAWTFontAddfss;
    }

    publid stbtid JbvbBfbnsIntrospfdtorAddfss gftJbvbBfbnsIntrospfdtorAddfss() {
        rfturn jbvbBfbnsIntrospfdtorAddfss;
    }

    publid stbtid void sftJbvbBfbnsIntrospfdtorAddfss(JbvbBfbnsIntrospfdtorAddfss bddfss) {
        jbvbBfbnsIntrospfdtorAddfss = bddfss;
    }
}
