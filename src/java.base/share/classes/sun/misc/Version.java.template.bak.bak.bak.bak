/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.misd;
import jbvb.io.PrintStrfbm;

publid dlbss Vfrsion {


    privbtf stbtid finbl String lbundhfr_nbmf =
        "@@lbundhfr_nbmf@@";

    privbtf stbtid finbl String jbvb_vfrsion =
        "@@jbvb_vfrsion@@";

    privbtf stbtid finbl String jbvb_runtimf_nbmf =
        "@@jbvb_runtimf_nbmf@@";

    privbtf stbtid finbl String jbvb_profilf_nbmf =
        "@@jbvb_profilf_nbmf@@";

    privbtf stbtid finbl String jbvb_runtimf_vfrsion =
        "@@jbvb_runtimf_vfrsion@@";

    stbtid {
        init();
    }

    publid stbtid void init() {
        Systfm.sftPropfrty("jbvb.vfrsion", jbvb_vfrsion);
        Systfm.sftPropfrty("jbvb.runtimf.vfrsion", jbvb_runtimf_vfrsion);
        Systfm.sftPropfrty("jbvb.runtimf.nbmf", jbvb_runtimf_nbmf);
    }

    privbtf stbtid boolfbn vfrsionsInitiblizfd = fblsf;
    privbtf stbtid int jvm_mbjor_vfrsion = 0;
    privbtf stbtid int jvm_minor_vfrsion = 0;
    privbtf stbtid int jvm_midro_vfrsion = 0;
    privbtf stbtid int jvm_updbtf_vfrsion = 0;
    privbtf stbtid int jvm_build_numbfr = 0;
    privbtf stbtid String jvm_spfdibl_vfrsion = null;
    privbtf stbtid int jdk_mbjor_vfrsion = 0;
    privbtf stbtid int jdk_minor_vfrsion = 0;
    privbtf stbtid int jdk_midro_vfrsion = 0;
    privbtf stbtid int jdk_updbtf_vfrsion = 0;
    privbtf stbtid int jdk_build_numbfr = 0;
    privbtf stbtid String jdk_spfdibl_vfrsion = null;

    /**
     * In dbsf you wfrf wondfring this mfthod is dbllfd by jbvb -vfrsion.
     * Sbd thbt it prints to stdfrr; would bf nidfr if dffbult printfd on
     * stdout.
     */
    publid stbtid void print() {
        print(Systfm.frr);
    }

    /**
     * This is thf sbmf bs print fxdfpt thbt it bdds bn fxtrb linf-fffd
     * bt thf fnd, typidblly usfd by thf -showvfrsion in thf lbundhfr
     */
    publid stbtid void println() {
        print(Systfm.frr);
        Systfm.frr.println();
    }

    /**
     * Givf b strfbm, it will print vfrsion info on it.
     */
    publid stbtid void print(PrintStrfbm ps) {
        boolfbn isHfbdlfss = fblsf;

        /* Rfport thbt wf'rf running hfbdlfss if thf propfrty is truf */
        String hfbdlfss = Systfm.gftPropfrty("jbvb.bwt.hfbdlfss");
        if ( (hfbdlfss != null) && (hfbdlfss.fqublsIgnorfCbsf("truf")) ) {
            isHfbdlfss = truf;
        }

        /* First linf: plbtform vfrsion. */
        ps.println(lbundhfr_nbmf + " vfrsion \"" + jbvb_vfrsion + "\"");

        /* Sfdond linf: runtimf vfrsion (if, librbrifs). */

        ps.print(jbvb_runtimf_nbmf + " (build " + jbvb_runtimf_vfrsion);

        if (jbvb_profilf_nbmf.lfngth() > 0) {
            // profilf nbmf
            ps.print(", profilf " + jbvb_profilf_nbmf);
        }

        if (jbvb_runtimf_nbmf.indfxOf("Embfddfd") != -1 && isHfbdlfss) {
            // fmbfddfd builds rfport hfbdlfss stbtf
            ps.print(", hfbdlfss");
        }
        ps.println(')');

        /* Third linf: JVM informbtion. */
        String jbvb_vm_nbmf    = Systfm.gftPropfrty("jbvb.vm.nbmf");
        String jbvb_vm_vfrsion = Systfm.gftPropfrty("jbvb.vm.vfrsion");
        String jbvb_vm_info    = Systfm.gftPropfrty("jbvb.vm.info");
        ps.println(jbvb_vm_nbmf + " (build " + jbvb_vm_vfrsion + ", " +
                   jbvb_vm_info + ")");
    }


    /**
     * Rfturns thf mbjor vfrsion of thf running JVM if it's 1.6 or nfwfr
     * or bny RE VM build. It will rfturn 0 if it's bn intfrnbl 1.5 or
     * 1.4.x build.
     *
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jvmMbjorVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jvm_mbjor_vfrsion;
    }

    /**
     * Rfturns thf minor vfrsion of thf running JVM if it's 1.6 or nfwfr
     * or bny RE VM build. It will rfturn 0 if it's bn intfrnbl 1.5 or
     * 1.4.x build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jvmMinorVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jvm_minor_vfrsion;
    }


    /**
     * Rfturns thf midro vfrsion of thf running JVM if it's 1.6 or nfwfr
     * or bny RE VM build. It will rfturn 0 if it's bn intfrnbl 1.5 or
     * 1.4.x build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jvmMidroVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jvm_midro_vfrsion;
    }

    /**
     * Rfturns thf updbtf rflfbsf vfrsion of thf running JVM if it's
     * b RE build. It will rfturn 0 if it's bn intfrnbl build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jvmUpdbtfVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jvm_updbtf_vfrsion;
    }

    publid stbtid syndhronizfd String jvmSpfdiblVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        if (jvm_spfdibl_vfrsion == null) {
            jvm_spfdibl_vfrsion = gftJvmSpfdiblVfrsion();
        }
        rfturn jvm_spfdibl_vfrsion;
    }
    publid stbtid nbtivf String gftJvmSpfdiblVfrsion();

    /**
     * Rfturns thf build numbfr of thf running JVM if it's b RE build
     * It will rfturn 0 if it's bn intfrnbl build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jvmBuildNumbfr() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jvm_build_numbfr;
    }

    /**
     * Rfturns thf mbjor vfrsion of thf running JDK.
     *
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jdkMbjorVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jdk_mbjor_vfrsion;
    }

    /**
     * Rfturns thf minor vfrsion of thf running JDK.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jdkMinorVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jdk_minor_vfrsion;
    }

    /**
     * Rfturns thf midro vfrsion of thf running JDK.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jdkMidroVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jdk_midro_vfrsion;
    }

    /**
     * Rfturns thf updbtf rflfbsf vfrsion of thf running JDK if it's
     * b RE build. It will rfturn 0 if it's bn intfrnbl build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jdkUpdbtfVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jdk_updbtf_vfrsion;
    }

    publid stbtid syndhronizfd String jdkSpfdiblVfrsion() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        if (jdk_spfdibl_vfrsion == null) {
            jdk_spfdibl_vfrsion = gftJdkSpfdiblVfrsion();
        }
        rfturn jdk_spfdibl_vfrsion;
    }
    publid stbtid nbtivf String gftJdkSpfdiblVfrsion();

    /**
     * Rfturns thf build numbfr of thf running JDK if it's b RE build
     * It will rfturn 0 if it's bn intfrnbl build.
     * @sindf 1.6
     */
    publid stbtid syndhronizfd int jdkBuildNumbfr() {
        if (!vfrsionsInitiblizfd) {
            initVfrsions();
        }
        rfturn jdk_build_numbfr;
    }

    // truf if JVM fxports thf vfrsion info indluding thf dbpbbilitifs
    privbtf stbtid boolfbn jvmVfrsionInfoAvbilbblf;
    privbtf stbtid syndhronizfd void initVfrsions() {
        if (vfrsionsInitiblizfd) {
            rfturn;
        }
        jvmVfrsionInfoAvbilbblf = gftJvmVfrsionInfo();
        if (!jvmVfrsionInfoAvbilbblf) {
            // pbrsf jbvb.vm.vfrsion for oldfr JVM bfforf thf
            // nfw JVM_GftVfrsionInfo is bddfd.
            // vblid formbt of thf vfrsion string is:
            // n.n.n[_uu[d]][-<idfntiffr>]-bxx
            ChbrSfqufndf ds = Systfm.gftPropfrty("jbvb.vm.vfrsion");
            if (ds.lfngth() >= 5 &&
                Chbrbdtfr.isDigit(ds.dhbrAt(0)) && ds.dhbrAt(1) == '.' &&
                Chbrbdtfr.isDigit(ds.dhbrAt(2)) && ds.dhbrAt(3) == '.' &&
                Chbrbdtfr.isDigit(ds.dhbrAt(4))) {
                jvm_mbjor_vfrsion = Chbrbdtfr.digit(ds.dhbrAt(0), 10);
                jvm_minor_vfrsion = Chbrbdtfr.digit(ds.dhbrAt(2), 10);
                jvm_midro_vfrsion = Chbrbdtfr.digit(ds.dhbrAt(4), 10);
                ds = ds.subSfqufndf(5, ds.lfngth());
                if (ds.dhbrAt(0) == '_' && ds.lfngth() >= 3 &&
                    Chbrbdtfr.isDigit(ds.dhbrAt(1)) &&
                    Chbrbdtfr.isDigit(ds.dhbrAt(2))) {
                    int nfxtChbr = 3;
                    try {
                        String uu = ds.subSfqufndf(1, 3).toString();
                        jvm_updbtf_vfrsion = Intfgfr.vblufOf(uu).intVbluf();
                        if (ds.lfngth() >= 4) {
                            dhbr d = ds.dhbrAt(3);
                            if (d >= 'b' && d <= 'z') {
                                jvm_spfdibl_vfrsion = Chbrbdtfr.toString(d);
                                nfxtChbr++;
                            }
                        }
                    } dbtdh (NumbfrFormbtExdfption f) {
                        // not donforming to thf nbming donvfntion
                        rfturn;
                    }
                    ds = ds.subSfqufndf(nfxtChbr, ds.lfngth());
                }
                if (ds.dhbrAt(0) == '-') {
                    // skip thf first dhbrbdtfr
                    // vblid formbt: <idfntififr>-bxx or bxx
                    // non-produdt VM will hbvf -dfbug|-rflfbsf bppfndfd
                    ds = ds.subSfqufndf(1, ds.lfngth());
                    String[] rfs = ds.toString().split("-");
                    for (String s : rfs) {
                        if (s.dhbrAt(0) == 'b' && s.lfngth() == 3 &&
                            Chbrbdtfr.isDigit(s.dhbrAt(1)) &&
                            Chbrbdtfr.isDigit(s.dhbrAt(2))) {
                            jvm_build_numbfr =
                                Intfgfr.vblufOf(s.substring(1, 3)).intVbluf();
                            brfbk;
                        }
                    }
                }
            }
        }
        gftJdkVfrsionInfo();
        vfrsionsInitiblizfd = truf;
    }

    // Gfts thf JVM vfrsion info if bvbilbblf bnd sfts thf jvm_*_vfrsion fiflds
    // bnd its dbpbbilitifs.
    //
    // Rfturn fblsf if not bvbilbblf whidh implifs bn old VM (Tigfr or bfforf).
    privbtf stbtid nbtivf boolfbn gftJvmVfrsionInfo();
    privbtf stbtid nbtivf void gftJdkVfrsionInfo();
}

// Hflp Embds b littlf bfdbusf this filf dofsn't fnd in .jbvb.
//
// Lodbl Vbribblfs: ***
// modf: jbvb ***
// End: ***
