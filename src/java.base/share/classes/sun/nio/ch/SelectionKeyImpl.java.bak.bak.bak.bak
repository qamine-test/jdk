/*
 * Copyright (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.dh;

import jbvb.io.IOExdfption;
import jbvb.nio.dhbnnfls.*;
import jbvb.nio.dhbnnfls.spi.*;


/**
 * An implfmfntbtion of SflfdtionKfy for Solbris.
 */

publid dlbss SflfdtionKfyImpl
    fxtfnds AbstrbdtSflfdtionKfy
{

    finbl SflChImpl dhbnnfl;                            // pbdkbgf-privbtf
    publid finbl SflfdtorImpl sflfdtor;

    // Indfx for b pollfd brrby in Sflfdtor thbt this kfy is rfgistfrfd with
    privbtf int indfx;

    privbtf volbtilf int intfrfstOps;
    privbtf int rfbdyOps;

    SflfdtionKfyImpl(SflChImpl dh, SflfdtorImpl sfl) {
        dhbnnfl = dh;
        sflfdtor = sfl;
    }

    publid SflfdtbblfChbnnfl dhbnnfl() {
        rfturn (SflfdtbblfChbnnfl)dhbnnfl;
    }

    publid Sflfdtor sflfdtor() {
        rfturn sflfdtor;
    }

    int gftIndfx() {                                    // pbdkbgf-privbtf
        rfturn indfx;
    }

    void sftIndfx(int i) {                              // pbdkbgf-privbtf
        indfx = i;
    }

    privbtf void fnsurfVblid() {
        if (!isVblid())
            throw nfw CbndfllfdKfyExdfption();
    }

    publid int intfrfstOps() {
        fnsurfVblid();
        rfturn intfrfstOps;
    }

    publid SflfdtionKfy intfrfstOps(int ops) {
        fnsurfVblid();
        rfturn nioIntfrfstOps(ops);
    }

    publid int rfbdyOps() {
        fnsurfVblid();
        rfturn rfbdyOps;
    }

    // Thf nio vfrsions of thfsf opfrbtions do not dbrf if b kfy
    // hbs bffn invblidbtfd. Thfy brf for intfrnbl usf by nio dodf.

    publid void nioRfbdyOps(int ops) {
        rfbdyOps = ops;
    }

    publid int nioRfbdyOps() {
        rfturn rfbdyOps;
    }

    publid SflfdtionKfy nioIntfrfstOps(int ops) {
        if ((ops & ~dhbnnfl().vblidOps()) != 0)
            throw nfw IllfgblArgumfntExdfption();
        dhbnnfl.trbnslbtfAndSftIntfrfstOps(ops, this);
        intfrfstOps = ops;
        rfturn this;
    }

    publid int nioIntfrfstOps() {
        rfturn intfrfstOps;
    }

}
