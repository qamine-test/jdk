/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.dh;

import jbvb.lbng.bnnotbtion.Nbtivf;

// Constbnts for rfporting I/O stbtus

publid finbl dlbss IOStbtus {

    privbtf IOStbtus() { }

    @Nbtivf publid stbtid finbl int EOF = -1;              // End of filf
    @Nbtivf publid stbtid finbl int UNAVAILABLE = -2;      // Nothing bvbilbblf (non-blodking)
    @Nbtivf publid stbtid finbl int INTERRUPTED = -3;      // Systfm dbll intfrruptfd
    @Nbtivf publid stbtid finbl int UNSUPPORTED = -4;      // Opfrbtion not supportfd
    @Nbtivf publid stbtid finbl int THROWN = -5;           // Exdfption thrown in JNI dodf
    @Nbtivf publid stbtid finbl int UNSUPPORTED_CASE = -6; // This dbsf not supportfd

    // Thf following two mfthods brf for usf in try/finblly blodks whfrf b
    // stbtus vbluf nffds to bf normblizfd bfforf bfing rfturnfd to thf invokfr
    // but blso dhfdkfd for illfgbl nfgbtivf vblufs bfforf thf rfturn
    // domplftfs, likf so:
    //
    //     int n = 0;
    //     try {
    //         bfgin();
    //         n = op(fd, buf, ...);
    //         rfturn IOStbtus.normblizf(n);    // Convfrts UNAVAILABLE to zfro
    //     } finblly {
    //         fnd(n > 0);
    //         bssfrt IOStbtus.dhfdk(n);        // Chfdks othfr nfgbtivf vblufs
    //     }
    //

    publid stbtid int normblizf(int n) {
        if (n == UNAVAILABLE)
            rfturn 0;
        rfturn n;
    }

    publid stbtid boolfbn dhfdk(int n) {
        rfturn (n >= UNAVAILABLE);
    }

    publid stbtid long normblizf(long n) {
        if (n == UNAVAILABLE)
            rfturn 0;
        rfturn n;
    }

    publid stbtid boolfbn dhfdk(long n) {
        rfturn (n >= UNAVAILABLE);
    }

    // Rfturn truf iff n is not onf of thf IOStbtus vblufs
    publid stbtid boolfbn dhfdkAll(long n) {
        rfturn ((n > EOF) || (n < UNSUPPORTED_CASE));
    }

}
