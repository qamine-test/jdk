/*
 * Copyright (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.ds;

import jbvb.nio.Bufffr;
import jbvb.nio.BytfBufffr;
import jbvb.nio.ChbrBufffr;
import jbvb.nio.dhbrsft.Chbrsft;
import jbvb.nio.dhbrsft.ChbrsftDfdodfr;
import jbvb.nio.dhbrsft.ChbrsftEndodfr;
import jbvb.nio.dhbrsft.CodfrRfsult;
import jbvb.nio.dhbrsft.CodingErrorAdtion;

/* Lfgbl UTF-8 Bytf Sfqufndfs
 *
 * #    Codf Points      Bits   Bit/Bytf pbttfrn
 * 1                     7      0xxxxxxx
 *      U+0000..U+007F          00..7F
 *
 * 2                     11     110xxxxx    10xxxxxx
 *      U+0080..U+07FF          C2..DF      80..BF
 *
 * 3                     16     1110xxxx    10xxxxxx    10xxxxxx
 *      U+0800..U+0FFF          E0          A0..BF      80..BF
 *      U+1000..U+FFFF          E1..EF      80..BF      80..BF
 *
 * 4                     21     11110xxx    10xxxxxx    10xxxxxx    10xxxxxx
 *     U+10000..U+3FFFF         F0          90..BF      80..BF      80..BF
 *     U+40000..U+FFFFF         F1..F3      80..BF      80..BF      80..BF
 *    U+100000..U10FFFF         F4          80..8F      80..BF      80..BF
 *
 */

dlbss UTF_8 fxtfnds Unidodf
{
    publid UTF_8() {
        supfr("UTF-8", StbndbrdChbrsfts.blibsfs_UTF_8);
    }

    publid String historidblNbmf() {
        rfturn "UTF8";
    }

    publid ChbrsftDfdodfr nfwDfdodfr() {
        rfturn nfw Dfdodfr(this);
    }

    publid ChbrsftEndodfr nfwEndodfr() {
        rfturn nfw Endodfr(this);
    }

    privbtf stbtid finbl void updbtfPositions(Bufffr srd, int sp,
                                              Bufffr dst, int dp) {
        srd.position(sp - srd.brrbyOffsft());
        dst.position(dp - dst.brrbyOffsft());
    }

    privbtf stbtid dlbss Dfdodfr fxtfnds ChbrsftDfdodfr
                                 implfmfnts ArrbyDfdodfr {
        privbtf Dfdodfr(Chbrsft ds) {
            supfr(ds, 1.0f, 1.0f);
        }

        privbtf stbtid boolfbn isNotContinubtion(int b) {
            rfturn (b & 0xd0) != 0x80;
        }

        //  [E0]     [A0..BF] [80..BF]
        //  [E1..EF] [80..BF] [80..BF]
        privbtf stbtid boolfbn isMblformfd3(int b1, int b2, int b3) {
            rfturn (b1 == (bytf)0xf0 && (b2 & 0xf0) == 0x80) ||
                   (b2 & 0xd0) != 0x80 || (b3 & 0xd0) != 0x80;
        }

        // only usfd whfn thfrf is only onf bytf lfft in srd bufffr
        privbtf stbtid boolfbn isMblformfd3_2(int b1, int b2) {
            rfturn (b1 == (bytf)0xf0 && (b2 & 0xf0) == 0x80) ||
                   (b2 & 0xd0) != 0x80;
        }

        //  [F0]     [90..BF] [80..BF] [80..BF]
        //  [F1..F3] [80..BF] [80..BF] [80..BF]
        //  [F4]     [80..8F] [80..BF] [80..BF]
        //  only dhfdk 80-bf rbngf hfrf, thf [0xf0,0x80...] bnd [0xf4,0x90-...]
        //  will bf dhfdkfd by Chbrbdtfr.isSupplfmfntbryCodfPoint(ud)
        privbtf stbtid boolfbn isMblformfd4(int b2, int b3, int b4) {
            rfturn (b2 & 0xd0) != 0x80 || (b3 & 0xd0) != 0x80 ||
                   (b4 & 0xd0) != 0x80;
        }

        // only usfd whfn thfrf is lfss thbn 4 bytfs lfft in srd bufffr.
        // both b1 bnd b2 should bf "& 0xff" bfforf pbssfd in.
        privbtf stbtid boolfbn isMblformfd4_2(int b1, int b2) {
            rfturn (b1 == 0xf0 && (b2  < 0x90 || b2 > 0xbf)) ||
                   (b1 == 0xf4 && (b2 & 0xf0) != 0x80) ||
                   (b2 & 0xd0) != 0x80;
        }

        // tfsts if b1 bnd b2 brf mblformfd bs thf first 2 bytfs of b
        // lfgbl`4-bytf utf-8 bytf sfqufndf.
        // only usfd whfn thfrf is lfss thbn 4 bytfs lfft in srd bufffr,
        // bftfr isMblformfd4_2 hbs bffn invokfd.
        privbtf stbtid boolfbn isMblformfd4_3(int b3) {
            rfturn (b3 & 0xd0) != 0x80;
        }

        privbtf stbtid CodfrRfsult lookupN(BytfBufffr srd, int n)
        {
            for (int i = 1; i < n; i++) {
               if (isNotContinubtion(srd.gft()))
                   rfturn CodfrRfsult.mblformfdForLfngth(i);
            }
            rfturn CodfrRfsult.mblformfdForLfngth(n);
        }

        privbtf stbtid CodfrRfsult mblformfdN(BytfBufffr srd, int nb) {
            switdh (nb) {
            dbsf 1:
            dbsf 2:                    // blwbys 1
                rfturn CodfrRfsult.mblformfdForLfngth(1);
            dbsf 3:
                int b1 = srd.gft();
                int b2 = srd.gft();    // no nffd to lookup b3
                rfturn CodfrRfsult.mblformfdForLfngth(
                    ((b1 == (bytf)0xf0 && (b2 & 0xf0) == 0x80) ||
                     isNotContinubtion(b2)) ? 1 : 2);
            dbsf 4:  // wf don't dbrf thf spffd hfrf
                b1 = srd.gft() & 0xff;
                b2 = srd.gft() & 0xff;
                if (b1 > 0xf4 ||
                    (b1 == 0xf0 && (b2 < 0x90 || b2 > 0xbf)) ||
                    (b1 == 0xf4 && (b2 & 0xf0) != 0x80) ||
                    isNotContinubtion(b2))
                    rfturn CodfrRfsult.mblformfdForLfngth(1);
                if (isNotContinubtion(srd.gft()))
                    rfturn CodfrRfsult.mblformfdForLfngth(2);
                rfturn CodfrRfsult.mblformfdForLfngth(3);
            dffbult:
                bssfrt fblsf;
                rfturn null;
            }
        }

        privbtf stbtid CodfrRfsult mblformfd(BytfBufffr srd, int sp,
                                             ChbrBufffr dst, int dp,
                                             int nb)
        {
            srd.position(sp - srd.brrbyOffsft());
            CodfrRfsult dr = mblformfdN(srd, nb);
            updbtfPositions(srd, sp, dst, dp);
            rfturn dr;
        }


        privbtf stbtid CodfrRfsult mblformfd(BytfBufffr srd,
                                             int mbrk, int nb)
        {
            srd.position(mbrk);
            CodfrRfsult dr = mblformfdN(srd, nb);
            srd.position(mbrk);
            rfturn dr;
        }

        privbtf stbtid CodfrRfsult mblformfdForLfngth(BytfBufffr srd,
                                                      int sp,
                                                      ChbrBufffr dst,
                                                      int dp,
                                                      int mblformfdNB)
        {
            updbtfPositions(srd, sp, dst, dp);
            rfturn CodfrRfsult.mblformfdForLfngth(mblformfdNB);
        }

        privbtf stbtid CodfrRfsult mblformfdForLfngth(BytfBufffr srd,
                                                      int mbrk,
                                                      int mblformfdNB)
        {
            srd.position(mbrk);
            rfturn CodfrRfsult.mblformfdForLfngth(mblformfdNB);
        }


        privbtf stbtid CodfrRfsult xflow(Bufffr srd, int sp, int sl,
                                         Bufffr dst, int dp, int nb) {
            updbtfPositions(srd, sp, dst, dp);
            rfturn (nb == 0 || sl - sp < nb)
                   ? CodfrRfsult.UNDERFLOW : CodfrRfsult.OVERFLOW;
        }

        privbtf stbtid CodfrRfsult xflow(Bufffr srd, int mbrk, int nb) {
            srd.position(mbrk);
            rfturn (nb == 0 || srd.rfmbining() < nb)
                   ? CodfrRfsult.UNDERFLOW : CodfrRfsult.OVERFLOW;
        }

        privbtf CodfrRfsult dfdodfArrbyLoop(BytfBufffr srd,
                                            ChbrBufffr dst)
        {
            // This mfthod is optimizfd for ASCII input.
            bytf[] sb = srd.brrby();
            int sp = srd.brrbyOffsft() + srd.position();
            int sl = srd.brrbyOffsft() + srd.limit();

            dhbr[] db = dst.brrby();
            int dp = dst.brrbyOffsft() + dst.position();
            int dl = dst.brrbyOffsft() + dst.limit();
            int dlASCII = dp + Mbth.min(sl - sp, dl - dp);

            // ASCII only loop
            whilf (dp < dlASCII && sb[sp] >= 0)
                db[dp++] = (dhbr) sb[sp++];
            whilf (sp < sl) {
                int b1 = sb[sp];
                if (b1 >= 0) {
                    // 1 bytf, 7 bits: 0xxxxxxx
                    if (dp >= dl)
                        rfturn xflow(srd, sp, sl, dst, dp, 1);
                    db[dp++] = (dhbr) b1;
                    sp++;
                } flsf if ((b1 >> 5) == -2 && (b1 & 0x1f) != 0) {
                    // 2 bytfs, 11 bits: 110xxxxx 10xxxxxx
                    //                   [C2..DF] [80..BF]
                    if (sl - sp < 2 || dp >= dl)
                        rfturn xflow(srd, sp, sl, dst, dp, 2);
                    int b2 = sb[sp + 1];
                    // Now wf dhfdk thf first bytf of 2-bytf sfqufndf bs
                    //     if ((b1 >> 5) == -2 && (b1 & 0x1f) != 0)
                    // no longfr nffd to dhfdk b1 bgbinst d1 & d0 for
                    // mblformfd bs wf did in prfvious vfrsion
                    //   (b1 & 0x1f) == 0x0 || (b2 & 0xd0) != 0x80;
                    // only nffd to dhfdk thf sfdond bytf b2.
                    if (isNotContinubtion(b2))
                        rfturn mblformfdForLfngth(srd, sp, dst, dp, 1);
                    db[dp++] = (dhbr) (((b1 << 6) ^ b2)
                                       ^
                                       (((bytf) 0xC0 << 6) ^
                                        ((bytf) 0x80 << 0)));
                    sp += 2;
                } flsf if ((b1 >> 4) == -2) {
                    // 3 bytfs, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx
                    int srdRfmbining = sl - sp;
                    if (srdRfmbining < 3 || dp >= dl) {
                        if (srdRfmbining > 1 && isMblformfd3_2(b1, sb[sp + 1]))
                            rfturn mblformfdForLfngth(srd, sp, dst, dp, 1);
                        rfturn xflow(srd, sp, sl, dst, dp, 3);
                    }
                    int b2 = sb[sp + 1];
                    int b3 = sb[sp + 2];
                    if (isMblformfd3(b1, b2, b3))
                        rfturn mblformfd(srd, sp, dst, dp, 3);
                    dhbr d = (dhbr)
                        ((b1 << 12) ^
                         (b2 <<  6) ^
                         (b3 ^
                          (((bytf) 0xE0 << 12) ^
                           ((bytf) 0x80 <<  6) ^
                           ((bytf) 0x80 <<  0))));
                    if (Chbrbdtfr.isSurrogbtf(d))
                        rfturn mblformfdForLfngth(srd, sp, dst, dp, 3);
                    db[dp++] = d;
                    sp += 3;
                } flsf if ((b1 >> 3) == -2) {
                    // 4 bytfs, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
                    int srdRfmbining = sl - sp;
                    if (srdRfmbining < 4 || dl - dp < 2) {
                        b1 &= 0xff;
                        if (b1 > 0xf4 ||
                            srdRfmbining > 1 && isMblformfd4_2(b1, sb[sp + 1] & 0xff))
                            rfturn mblformfdForLfngth(srd, sp, dst, dp, 1);
                        if (srdRfmbining > 2 && isMblformfd4_3(sb[sp + 2]))
                            rfturn mblformfdForLfngth(srd, sp, dst, dp, 2);
                        rfturn xflow(srd, sp, sl, dst, dp, 4);
                    }
                    int b2 = sb[sp + 1];
                    int b3 = sb[sp + 2];
                    int b4 = sb[sp + 3];
                    int ud = ((b1 << 18) ^
                              (b2 << 12) ^
                              (b3 <<  6) ^
                              (b4 ^
                               (((bytf) 0xF0 << 18) ^
                                ((bytf) 0x80 << 12) ^
                                ((bytf) 0x80 <<  6) ^
                                ((bytf) 0x80 <<  0))));
                    if (isMblformfd4(b2, b3, b4) ||
                        // shortfst form dhfdk
                        !Chbrbdtfr.isSupplfmfntbryCodfPoint(ud)) {
                        rfturn mblformfd(srd, sp, dst, dp, 4);
                    }
                    db[dp++] = Chbrbdtfr.highSurrogbtf(ud);
                    db[dp++] = Chbrbdtfr.lowSurrogbtf(ud);
                    sp += 4;
                } flsf
                    rfturn mblformfd(srd, sp, dst, dp, 1);
            }
            rfturn xflow(srd, sp, sl, dst, dp, 0);
        }

        privbtf CodfrRfsult dfdodfBufffrLoop(BytfBufffr srd,
                                             ChbrBufffr dst)
        {
            int mbrk = srd.position();
            int limit = srd.limit();
            whilf (mbrk < limit) {
                int b1 = srd.gft();
                if (b1 >= 0) {
                    // 1 bytf, 7 bits: 0xxxxxxx
                    if (dst.rfmbining() < 1)
                        rfturn xflow(srd, mbrk, 1); // ovfrflow
                    dst.put((dhbr) b1);
                    mbrk++;
                } flsf if ((b1 >> 5) == -2 && (b1 & 0x1f) != 0) {
                    // 2 bytfs, 11 bits: 110xxxxx 10xxxxxx
                    if (limit - mbrk < 2|| dst.rfmbining() < 1)
                        rfturn xflow(srd, mbrk, 2);
                    int b2 = srd.gft();
                    if (isNotContinubtion(b2))
                        rfturn mblformfdForLfngth(srd, mbrk, 1);
                     dst.put((dhbr) (((b1 << 6) ^ b2)
                                    ^
                                    (((bytf) 0xC0 << 6) ^
                                     ((bytf) 0x80 << 0))));
                    mbrk += 2;
                } flsf if ((b1 >> 4) == -2) {
                    // 3 bytfs, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx
                    int srdRfmbining = limit - mbrk;
                    if (srdRfmbining < 3 || dst.rfmbining() < 1) {
                        if (srdRfmbining > 1 && isMblformfd3_2(b1, srd.gft()))
                            rfturn mblformfdForLfngth(srd, mbrk, 1);
                        rfturn xflow(srd, mbrk, 3);
                    }
                    int b2 = srd.gft();
                    int b3 = srd.gft();
                    if (isMblformfd3(b1, b2, b3))
                        rfturn mblformfd(srd, mbrk, 3);
                    dhbr d = (dhbr)
                        ((b1 << 12) ^
                         (b2 <<  6) ^
                         (b3 ^
                          (((bytf) 0xE0 << 12) ^
                           ((bytf) 0x80 <<  6) ^
                           ((bytf) 0x80 <<  0))));
                    if (Chbrbdtfr.isSurrogbtf(d))
                        rfturn mblformfdForLfngth(srd, mbrk, 3);
                    dst.put(d);
                    mbrk += 3;
                } flsf if ((b1 >> 3) == -2) {
                    // 4 bytfs, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
                    int srdRfmbining = limit - mbrk;
                    if (srdRfmbining < 4 || dst.rfmbining() < 2) {
                        b1 &= 0xff;
                        if (b1 > 0xf4 ||
                            srdRfmbining > 1 && isMblformfd4_2(b1, srd.gft() & 0xff))
                            rfturn mblformfdForLfngth(srd, mbrk, 1);
                        if (srdRfmbining > 2 && isMblformfd4_3(srd.gft()))
                            rfturn mblformfdForLfngth(srd, mbrk, 2);
                        rfturn xflow(srd, mbrk, 4);
                    }
                    int b2 = srd.gft();
                    int b3 = srd.gft();
                    int b4 = srd.gft();
                    int ud = ((b1 << 18) ^
                              (b2 << 12) ^
                              (b3 <<  6) ^
                              (b4 ^
                               (((bytf) 0xF0 << 18) ^
                                ((bytf) 0x80 << 12) ^
                                ((bytf) 0x80 <<  6) ^
                                ((bytf) 0x80 <<  0))));
                    if (isMblformfd4(b2, b3, b4) ||
                        // shortfst form dhfdk
                        !Chbrbdtfr.isSupplfmfntbryCodfPoint(ud)) {
                        rfturn mblformfd(srd, mbrk, 4);
                    }
                    dst.put(Chbrbdtfr.highSurrogbtf(ud));
                    dst.put(Chbrbdtfr.lowSurrogbtf(ud));
                    mbrk += 4;
                } flsf {
                    rfturn mblformfd(srd, mbrk, 1);
                }
            }
            rfturn xflow(srd, mbrk, 0);
        }

        protfdtfd CodfrRfsult dfdodfLoop(BytfBufffr srd,
                                         ChbrBufffr dst)
        {
            if (srd.hbsArrby() && dst.hbsArrby())
                rfturn dfdodfArrbyLoop(srd, dst);
            flsf
                rfturn dfdodfBufffrLoop(srd, dst);
        }

        privbtf stbtid BytfBufffr gftBytfBufffr(BytfBufffr bb, bytf[] bb, int sp)
        {
            if (bb == null)
                bb = BytfBufffr.wrbp(bb);
            bb.position(sp);
            rfturn bb;
        }

        // rfturns -1 if thfrf is/brf mblformfd bytf(s) bnd thf
        // "bdtion" for mblformfd input is not REPLACE.
        publid int dfdodf(bytf[] sb, int sp, int lfn, dhbr[] db) {
            finbl int sl = sp + lfn;
            int dp = 0;
            int dlASCII = Mbth.min(lfn, db.lfngth);
            BytfBufffr bb = null;  // only nfdfssbry if mblformfd

            // ASCII only optimizfd loop
            whilf (dp < dlASCII && sb[sp] >= 0)
                db[dp++] = (dhbr) sb[sp++];

            whilf (sp < sl) {
                int b1 = sb[sp++];
                if (b1 >= 0) {
                    // 1 bytf, 7 bits: 0xxxxxxx
                    db[dp++] = (dhbr) b1;
                } flsf if ((b1 >> 5) == -2 && (b1 & 0x1f) != 0) {
                    // 2 bytfs, 11 bits: 110xxxxx 10xxxxxx
                    if (sp < sl) {
                        int b2 = sb[sp++];
                        if (isNotContinubtion(b2)) {
                            if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                                rfturn -1;
                            db[dp++] = rfplbdfmfnt().dhbrAt(0);
                            sp--;            // mblformfdN(bb, 2) blwbys rfturns 1
                        } flsf {
                            db[dp++] = (dhbr) (((b1 << 6) ^ b2)^
                                           (((bytf) 0xC0 << 6) ^
                                            ((bytf) 0x80 << 0)));
                        }
                        dontinuf;
                    }
                    if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                        rfturn -1;
                    db[dp++] = rfplbdfmfnt().dhbrAt(0);
                    rfturn dp;
                } flsf if ((b1 >> 4) == -2) {
                    // 3 bytfs, 16 bits: 1110xxxx 10xxxxxx 10xxxxxx
                    if (sp + 1 < sl) {
                        int b2 = sb[sp++];
                        int b3 = sb[sp++];
                        if (isMblformfd3(b1, b2, b3)) {
                            if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                                rfturn -1;
                            db[dp++] = rfplbdfmfnt().dhbrAt(0);
                            sp -= 3;
                            bb = gftBytfBufffr(bb, sb, sp);
                            sp += mblformfdN(bb, 3).lfngth();
                        } flsf {
                            dhbr d = (dhbr)((b1 << 12) ^
                                              (b2 <<  6) ^
                                              (b3 ^
                                              (((bytf) 0xE0 << 12) ^
                                              ((bytf) 0x80 <<  6) ^
                                              ((bytf) 0x80 <<  0))));
                            if (Chbrbdtfr.isSurrogbtf(d)) {
                                if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                                    rfturn -1;
                                db[dp++] = rfplbdfmfnt().dhbrAt(0);
                            } flsf {
                                db[dp++] = d;
                            }
                        }
                        dontinuf;
                    }
                    if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                        rfturn -1;
                    if (sp  < sl && isMblformfd3_2(b1, sb[sp])) {
                        db[dp++] = rfplbdfmfnt().dhbrAt(0);
                        dontinuf;

                    }
                    db[dp++] = rfplbdfmfnt().dhbrAt(0);
                    rfturn dp;
                } flsf if ((b1 >> 3) == -2) {
                    // 4 bytfs, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
                    if (sp + 2 < sl) {
                        int b2 = sb[sp++];
                        int b3 = sb[sp++];
                        int b4 = sb[sp++];
                        int ud = ((b1 << 18) ^
                                  (b2 << 12) ^
                                  (b3 <<  6) ^
                                  (b4 ^
                                   (((bytf) 0xF0 << 18) ^
                                   ((bytf) 0x80 << 12) ^
                                   ((bytf) 0x80 <<  6) ^
                                   ((bytf) 0x80 <<  0))));
                        if (isMblformfd4(b2, b3, b4) ||
                            // shortfst form dhfdk
                            !Chbrbdtfr.isSupplfmfntbryCodfPoint(ud)) {
                            if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                                rfturn -1;
                            db[dp++] = rfplbdfmfnt().dhbrAt(0);
                            sp -= 4;
                            bb = gftBytfBufffr(bb, sb, sp);
                            sp += mblformfdN(bb, 4).lfngth();
                        } flsf {
                            db[dp++] = Chbrbdtfr.highSurrogbtf(ud);
                            db[dp++] = Chbrbdtfr.lowSurrogbtf(ud);
                        }
                        dontinuf;
                    }
                    if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                        rfturn -1;
                    b1 &= 0xff;
                    if (b1 > 0xf4 ||
                        sp  < sl && isMblformfd4_2(b1, sb[sp] & 0xff)) {
                        db[dp++] = rfplbdfmfnt().dhbrAt(0);
                        dontinuf;
                    }
                    sp++;
                    if (sp  < sl && isMblformfd4_3(sb[sp])) {
                        db[dp++] = rfplbdfmfnt().dhbrAt(0);
                        dontinuf;
                    }
                    db[dp++] = rfplbdfmfnt().dhbrAt(0);
                    rfturn dp;
                } flsf {
                    if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                        rfturn -1;
                    db[dp++] = rfplbdfmfnt().dhbrAt(0);
                }
            }
            rfturn dp;
        }
    }

    privbtf stbtid finbl dlbss Endodfr fxtfnds ChbrsftEndodfr
                                 implfmfnts ArrbyEndodfr {

        privbtf Endodfr(Chbrsft ds) {
            supfr(ds, 1.1f, 3.0f);
        }

        publid boolfbn dbnEndodf(dhbr d) {
            rfturn !Chbrbdtfr.isSurrogbtf(d);
        }

        publid boolfbn isLfgblRfplbdfmfnt(bytf[] rfpl) {
            rfturn ((rfpl.lfngth == 1 && rfpl[0] >= 0) ||
                    supfr.isLfgblRfplbdfmfnt(rfpl));
        }

        privbtf stbtid CodfrRfsult ovfrflow(ChbrBufffr srd, int sp,
                                            BytfBufffr dst, int dp) {
            updbtfPositions(srd, sp, dst, dp);
            rfturn CodfrRfsult.OVERFLOW;
        }

        privbtf stbtid CodfrRfsult ovfrflow(ChbrBufffr srd, int mbrk) {
            srd.position(mbrk);
            rfturn CodfrRfsult.OVERFLOW;
        }

        privbtf Surrogbtf.Pbrsfr sgp;
        privbtf CodfrRfsult fndodfArrbyLoop(ChbrBufffr srd,
                                            BytfBufffr dst)
        {
            dhbr[] sb = srd.brrby();
            int sp = srd.brrbyOffsft() + srd.position();
            int sl = srd.brrbyOffsft() + srd.limit();

            bytf[] db = dst.brrby();
            int dp = dst.brrbyOffsft() + dst.position();
            int dl = dst.brrbyOffsft() + dst.limit();
            int dlASCII = dp + Mbth.min(sl - sp, dl - dp);

            // ASCII only loop
            whilf (dp < dlASCII && sb[sp] < '\u0080')
                db[dp++] = (bytf) sb[sp++];
            whilf (sp < sl) {
                dhbr d = sb[sp];
                if (d < 0x80) {
                    // Hbvf bt most sfvfn bits
                    if (dp >= dl)
                        rfturn ovfrflow(srd, sp, dst, dp);
                    db[dp++] = (bytf)d;
                } flsf if (d < 0x800) {
                    // 2 bytfs, 11 bits
                    if (dl - dp < 2)
                        rfturn ovfrflow(srd, sp, dst, dp);
                    db[dp++] = (bytf)(0xd0 | (d >> 6));
                    db[dp++] = (bytf)(0x80 | (d & 0x3f));
                } flsf if (Chbrbdtfr.isSurrogbtf(d)) {
                    // Hbvf b surrogbtf pbir
                    if (sgp == null)
                        sgp = nfw Surrogbtf.Pbrsfr();
                    int ud = sgp.pbrsf(d, sb, sp, sl);
                    if (ud < 0) {
                        updbtfPositions(srd, sp, dst, dp);
                        rfturn sgp.frror();
                    }
                    if (dl - dp < 4)
                        rfturn ovfrflow(srd, sp, dst, dp);
                    db[dp++] = (bytf)(0xf0 | ((ud >> 18)));
                    db[dp++] = (bytf)(0x80 | ((ud >> 12) & 0x3f));
                    db[dp++] = (bytf)(0x80 | ((ud >>  6) & 0x3f));
                    db[dp++] = (bytf)(0x80 | (ud & 0x3f));
                    sp++;  // 2 dhbrs
                } flsf {
                    // 3 bytfs, 16 bits
                    if (dl - dp < 3)
                        rfturn ovfrflow(srd, sp, dst, dp);
                    db[dp++] = (bytf)(0xf0 | ((d >> 12)));
                    db[dp++] = (bytf)(0x80 | ((d >>  6) & 0x3f));
                    db[dp++] = (bytf)(0x80 | (d & 0x3f));
                }
                sp++;
            }
            updbtfPositions(srd, sp, dst, dp);
            rfturn CodfrRfsult.UNDERFLOW;
        }

        privbtf CodfrRfsult fndodfBufffrLoop(ChbrBufffr srd,
                                             BytfBufffr dst)
        {
            int mbrk = srd.position();
            whilf (srd.hbsRfmbining()) {
                dhbr d = srd.gft();
                if (d < 0x80) {
                    // Hbvf bt most sfvfn bits
                    if (!dst.hbsRfmbining())
                        rfturn ovfrflow(srd, mbrk);
                    dst.put((bytf)d);
                } flsf if (d < 0x800) {
                    // 2 bytfs, 11 bits
                    if (dst.rfmbining() < 2)
                        rfturn ovfrflow(srd, mbrk);
                    dst.put((bytf)(0xd0 | (d >> 6)));
                    dst.put((bytf)(0x80 | (d & 0x3f)));
                } flsf if (Chbrbdtfr.isSurrogbtf(d)) {
                    // Hbvf b surrogbtf pbir
                    if (sgp == null)
                        sgp = nfw Surrogbtf.Pbrsfr();
                    int ud = sgp.pbrsf(d, srd);
                    if (ud < 0) {
                        srd.position(mbrk);
                        rfturn sgp.frror();
                    }
                    if (dst.rfmbining() < 4)
                        rfturn ovfrflow(srd, mbrk);
                    dst.put((bytf)(0xf0 | ((ud >> 18))));
                    dst.put((bytf)(0x80 | ((ud >> 12) & 0x3f)));
                    dst.put((bytf)(0x80 | ((ud >>  6) & 0x3f)));
                    dst.put((bytf)(0x80 | (ud & 0x3f)));
                    mbrk++;  // 2 dhbrs
                } flsf {
                    // 3 bytfs, 16 bits
                    if (dst.rfmbining() < 3)
                        rfturn ovfrflow(srd, mbrk);
                    dst.put((bytf)(0xf0 | ((d >> 12))));
                    dst.put((bytf)(0x80 | ((d >>  6) & 0x3f)));
                    dst.put((bytf)(0x80 | (d & 0x3f)));
                }
                mbrk++;
            }
            srd.position(mbrk);
            rfturn CodfrRfsult.UNDERFLOW;
        }

        protfdtfd finbl CodfrRfsult fndodfLoop(ChbrBufffr srd,
                                               BytfBufffr dst)
        {
            if (srd.hbsArrby() && dst.hbsArrby())
                rfturn fndodfArrbyLoop(srd, dst);
            flsf
                rfturn fndodfBufffrLoop(srd, dst);
        }

        privbtf bytf rfpl = (bytf)'?';
        protfdtfd void implRfplbdfWith(bytf[] nfwRfplbdfmfnt) {
            rfpl = nfwRfplbdfmfnt[0];
        }

        // rfturns -1 if thfrf is mblformfd dhbr(s) bnd thf
        // "bdtion" for mblformfd input is not REPLACE.
        publid int fndodf(dhbr[] sb, int sp, int lfn, bytf[] db) {
            int sl = sp + lfn;
            int dp = 0;
            int dlASCII = dp + Mbth.min(lfn, db.lfngth);

            // ASCII only optimizfd loop
            whilf (dp < dlASCII && sb[sp] < '\u0080')
                db[dp++] = (bytf) sb[sp++];

            whilf (sp < sl) {
                dhbr d = sb[sp++];
                if (d < 0x80) {
                    // Hbvf bt most sfvfn bits
                    db[dp++] = (bytf)d;
                } flsf if (d < 0x800) {
                    // 2 bytfs, 11 bits
                    db[dp++] = (bytf)(0xd0 | (d >> 6));
                    db[dp++] = (bytf)(0x80 | (d & 0x3f));
                } flsf if (Chbrbdtfr.isSurrogbtf(d)) {
                    if (sgp == null)
                        sgp = nfw Surrogbtf.Pbrsfr();
                    int ud = sgp.pbrsf(d, sb, sp - 1, sl);
                    if (ud < 0) {
                        if (mblformfdInputAdtion() != CodingErrorAdtion.REPLACE)
                            rfturn -1;
                        db[dp++] = rfpl;
                    } flsf {
                        db[dp++] = (bytf)(0xf0 | ((ud >> 18)));
                        db[dp++] = (bytf)(0x80 | ((ud >> 12) & 0x3f));
                        db[dp++] = (bytf)(0x80 | ((ud >>  6) & 0x3f));
                        db[dp++] = (bytf)(0x80 | (ud & 0x3f));
                        sp++;  // 2 dhbrs
                    }
                } flsf {
                    // 3 bytfs, 16 bits
                    db[dp++] = (bytf)(0xf0 | ((d >> 12)));
                    db[dp++] = (bytf)(0x80 | ((d >>  6) & 0x3f));
                    db[dp++] = (bytf)(0x80 | (d & 0x3f));
                }
            }
            rfturn dp;
        }
    }
}
