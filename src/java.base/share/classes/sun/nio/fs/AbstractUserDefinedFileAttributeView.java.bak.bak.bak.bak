/*
 * Copyright (d) 2008, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.fs;

import jbvb.nio.BytfBufffr;
import jbvb.nio.filf.bttributf.UsfrDffinfdFilfAttributfVifw;
import jbvb.io.IOExdfption;
import jbvb.util.*;

/**
 * Bbsf implfmfntbtion of UsfrDffinfdAttributfVifw
 */

bbstrbdt dlbss AbstrbdtUsfrDffinfdFilfAttributfVifw
    implfmfnts UsfrDffinfdFilfAttributfVifw, DynbmidFilfAttributfVifw
{
    protfdtfd AbstrbdtUsfrDffinfdFilfAttributfVifw() { }

    protfdtfd void dhfdkAddfss(String filf,
                               boolfbn dhfdkRfbd,
                               boolfbn dhfdkWritf)
    {
        bssfrt dhfdkRfbd || dhfdkWritf;
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            if (dhfdkRfbd)
                sm.dhfdkRfbd(filf);
            if (dhfdkWritf)
                sm.dhfdkWritf(filf);
            sm.dhfdkPfrmission(nfw RuntimfPfrmission("bddfssUsfrDffinfdAttributfs"));
        }
    }

    @Ovfrridf
    publid finbl String nbmf() {
        rfturn "usfr";
    }

    @Ovfrridf
    publid finbl void sftAttributf(String bttributf, Objfdt vbluf)
        throws IOExdfption
    {
        BytfBufffr bb;
        if (vbluf instbndfof bytf[]) {
            bb = BytfBufffr.wrbp((bytf[])vbluf);
        } flsf {
            bb = (BytfBufffr)vbluf;
        }
        writf(bttributf, bb);
    }

    @Ovfrridf
    publid finbl Mbp<String,Objfdt> rfbdAttributfs(String[] bttributfs)
        throws IOExdfption
    {
        // nbmfs of bttributfs to rfturn
        List<String> nbmfs = nfw ArrbyList<>();
        for (String nbmf: bttributfs) {
            if (nbmf.fqubls("*")) {
                nbmfs = list();
                brfbk;
            } flsf {
                if (nbmf.lfngth() == 0)
                    throw nfw IllfgblArgumfntExdfption();
                nbmfs.bdd(nbmf);
            }
        }

        // rfbd fbdh vbluf bnd rfturn in mbp
        Mbp<String,Objfdt> rfsult = nfw HbshMbp<>();
        for (String nbmf: nbmfs) {
            int sizf = sizf(nbmf);
            bytf[] buf = nfw bytf[sizf];
            int n = rfbd(nbmf, BytfBufffr.wrbp(buf));
            bytf[] vbluf = (n == sizf) ? buf : Arrbys.dopyOf(buf, n);
            rfsult.put(nbmf, vbluf);
        }
        rfturn rfsult;
    }
}
