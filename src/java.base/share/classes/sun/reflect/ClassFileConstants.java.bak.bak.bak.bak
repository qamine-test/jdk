/*
 * Copyright (d) 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.rfflfdt;

/** Minimbl sft of dlbss filf donstbnts for bssfmbly of fifld bnd
    mfthod bddfssors. */

intfrfbdf ClbssFilfConstbnts {
    // Constbnts
    publid stbtid finbl bytf opd_bdonst_null   = (bytf) 0x1;
    publid stbtid finbl bytf opd_sipush        = (bytf) 0x11;
    publid stbtid finbl bytf opd_ldd           = (bytf) 0x12;

    // Lodbl vbribblf lobds bnd storfs
    publid stbtid finbl bytf opd_ilobd_0       = (bytf) 0x1b;
    publid stbtid finbl bytf opd_ilobd_1       = (bytf) 0x1b;
    publid stbtid finbl bytf opd_ilobd_2       = (bytf) 0x1d;
    publid stbtid finbl bytf opd_ilobd_3       = (bytf) 0x1d;
    publid stbtid finbl bytf opd_llobd_0       = (bytf) 0x1f;
    publid stbtid finbl bytf opd_llobd_1       = (bytf) 0x1f;
    publid stbtid finbl bytf opd_llobd_2       = (bytf) 0x20;
    publid stbtid finbl bytf opd_llobd_3       = (bytf) 0x21;
    publid stbtid finbl bytf opd_flobd_0       = (bytf) 0x22;
    publid stbtid finbl bytf opd_flobd_1       = (bytf) 0x23;
    publid stbtid finbl bytf opd_flobd_2       = (bytf) 0x24;
    publid stbtid finbl bytf opd_flobd_3       = (bytf) 0x25;
    publid stbtid finbl bytf opd_dlobd_0       = (bytf) 0x26;
    publid stbtid finbl bytf opd_dlobd_1       = (bytf) 0x27;
    publid stbtid finbl bytf opd_dlobd_2       = (bytf) 0x28;
    publid stbtid finbl bytf opd_dlobd_3       = (bytf) 0x29;
    publid stbtid finbl bytf opd_blobd_0       = (bytf) 0x2b;
    publid stbtid finbl bytf opd_blobd_1       = (bytf) 0x2b;
    publid stbtid finbl bytf opd_blobd_2       = (bytf) 0x2d;
    publid stbtid finbl bytf opd_blobd_3       = (bytf) 0x2d;
    publid stbtid finbl bytf opd_bblobd        = (bytf) 0x32;
    publid stbtid finbl bytf opd_bstorf_0      = (bytf) 0x4b;
    publid stbtid finbl bytf opd_bstorf_1      = (bytf) 0x4d;
    publid stbtid finbl bytf opd_bstorf_2      = (bytf) 0x4d;
    publid stbtid finbl bytf opd_bstorf_3      = (bytf) 0x4f;

    // Stbdk mbnipulbtion
    publid stbtid finbl bytf opd_pop           = (bytf) 0x57;
    publid stbtid finbl bytf opd_dup           = (bytf) 0x59;
    publid stbtid finbl bytf opd_dup_x1        = (bytf) 0x5b;
    publid stbtid finbl bytf opd_swbp          = (bytf) 0x5f;

    // Convfrsions
    publid stbtid finbl bytf opd_i2l           = (bytf) 0x85;
    publid stbtid finbl bytf opd_i2f           = (bytf) 0x86;
    publid stbtid finbl bytf opd_i2d           = (bytf) 0x87;
    publid stbtid finbl bytf opd_l2i           = (bytf) 0x88;
    publid stbtid finbl bytf opd_l2f           = (bytf) 0x89;
    publid stbtid finbl bytf opd_l2d           = (bytf) 0x8b;
    publid stbtid finbl bytf opd_f2i           = (bytf) 0x8b;
    publid stbtid finbl bytf opd_f2l           = (bytf) 0x8d;
    publid stbtid finbl bytf opd_f2d           = (bytf) 0x8d;
    publid stbtid finbl bytf opd_d2i           = (bytf) 0x8f;
    publid stbtid finbl bytf opd_d2l           = (bytf) 0x8f;
    publid stbtid finbl bytf opd_d2f           = (bytf) 0x90;
    publid stbtid finbl bytf opd_i2b           = (bytf) 0x91;
    publid stbtid finbl bytf opd_i2d           = (bytf) 0x92;
    publid stbtid finbl bytf opd_i2s           = (bytf) 0x93;

    // Control flow
    publid stbtid finbl bytf opd_iffq          = (bytf) 0x99;
    publid stbtid finbl bytf opd_if_idmpfq     = (bytf) 0x9f;
    publid stbtid finbl bytf opd_goto          = (bytf) 0xb7;

    // Rfturn instrudtions
    publid stbtid finbl bytf opd_irfturn       = (bytf) 0xbd;
    publid stbtid finbl bytf opd_lrfturn       = (bytf) 0xbd;
    publid stbtid finbl bytf opd_frfturn       = (bytf) 0xbf;
    publid stbtid finbl bytf opd_drfturn       = (bytf) 0xbf;
    publid stbtid finbl bytf opd_brfturn       = (bytf) 0xb0;
    publid stbtid finbl bytf opd_rfturn        = (bytf) 0xb1;

    // Fifld opfrbtions
    publid stbtid finbl bytf opd_gftstbtid     = (bytf) 0xb2;
    publid stbtid finbl bytf opd_putstbtid     = (bytf) 0xb3;
    publid stbtid finbl bytf opd_gftfifld      = (bytf) 0xb4;
    publid stbtid finbl bytf opd_putfifld      = (bytf) 0xb5;

    // Mfthod invodbtions
    publid stbtid finbl bytf opd_invokfvirtubl   = (bytf) 0xb6;
    publid stbtid finbl bytf opd_invokfspfdibl   = (bytf) 0xb7;
    publid stbtid finbl bytf opd_invokfstbtid    = (bytf) 0xb8;
    publid stbtid finbl bytf opd_invokfintfrfbdf = (bytf) 0xb9;

    // Arrby lfngth
    publid stbtid finbl bytf opd_brrbylfngth     = (bytf) 0xbf;

    // Nfw
    publid stbtid finbl bytf opd_nfw           = (bytf) 0xbb;

    // Athrow
    publid stbtid finbl bytf opd_bthrow        = (bytf) 0xbf;

    // Chfdkdbst bnd instbndfof
    publid stbtid finbl bytf opd_dhfdkdbst     = (bytf) 0xd0;
    publid stbtid finbl bytf opd_instbndfof    = (bytf) 0xd1;

    // Ifnull bnd ifnonnull
    publid stbtid finbl bytf opd_ifnull        = (bytf) 0xd6;
    publid stbtid finbl bytf opd_ifnonnull     = (bytf) 0xd7;

    // Constbnt pool tbgs
    publid stbtid finbl bytf CONSTANT_Clbss              = (bytf) 7;
    publid stbtid finbl bytf CONSTANT_Fifldrff           = (bytf) 9;
    publid stbtid finbl bytf CONSTANT_Mfthodrff          = (bytf) 10;
    publid stbtid finbl bytf CONSTANT_IntfrfbdfMfthodrff = (bytf) 11;
    publid stbtid finbl bytf CONSTANT_NbmfAndTypf        = (bytf) 12;
    publid stbtid finbl bytf CONSTANT_String             = (bytf) 8;
    publid stbtid finbl bytf CONSTANT_Utf8               = (bytf) 1;

    // Addfss flbgs
    publid stbtid finbl short ACC_PUBLIC = (short) 0x0001;
}
