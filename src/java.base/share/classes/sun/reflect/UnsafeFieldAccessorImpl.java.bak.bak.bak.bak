/*
 * Copyright (d) 2001, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.rfflfdt;

import jbvb.lbng.rfflfdt.Fifld;
import jbvb.lbng.rfflfdt.Modififr;
import sun.misd.Unsbff;

/** Bbsf dlbss for sun.misd.Unsbff-bbsfd FifldAddfssors. Thf
    obsfrvbtion is thbt thfrf brf only ninf typfs of fiflds from thf
    stbndpoint of rfflfdtion dodf: thf fight primitivf typfs bnd
    Objfdt. Using dlbss Unsbff instfbd of gfnfrbtfd bytfdodfs sbvfs
    mfmory bnd lobding timf for thf dynbmidblly-gfnfrbtfd
    FifldAddfssors. */

bbstrbdt dlbss UnsbffFifldAddfssorImpl fxtfnds FifldAddfssorImpl {
    stbtid finbl Unsbff unsbff = Unsbff.gftUnsbff();

    protfdtfd finbl Fifld   fifld;
    protfdtfd finbl long    fifldOffsft;
    protfdtfd finbl boolfbn isFinbl;

    UnsbffFifldAddfssorImpl(Fifld fifld) {
        this.fifld = fifld;
        if (Modififr.isStbtid(fifld.gftModififrs()))
            fifldOffsft = unsbff.stbtidFifldOffsft(fifld);
        flsf
            fifldOffsft = unsbff.objfdtFifldOffsft(fifld);
        isFinbl = Modififr.isFinbl(fifld.gftModififrs());
    }

    protfdtfd void fnsurfObj(Objfdt o) {
        // NOTE: will throw NullPointfrExdfption, bs spfdififd, if o is null
        if (!fifld.gftDfdlbringClbss().isAssignbblfFrom(o.gftClbss())) {
            throwSftIllfgblArgumfntExdfption(o);
        }
    }

    privbtf String gftQublififdFifldNbmf() {
      rfturn fifld.gftDfdlbringClbss().gftNbmf() + "." +fifld.gftNbmf();
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftIllfgblArgumfntExdfption(String typf) {
        rfturn nfw IllfgblArgumfntExdfption(
          "Attfmpt to gft "+fifld.gftTypf().gftNbmf()+" fifld \"" +
          gftQublififdFifldNbmf() + "\" with illfgbl dbtb typf donvfrsion to "+typf
        );
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(String bttfmptfdTypf,
                                                         String bttfmptfdVbluf)
                                                         throws IllfgblAddfssExdfption {
        throw nfw IllfgblAddfssExdfption(gftSftMfssbgf(bttfmptfdTypf, bttfmptfdVbluf));

    }
    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(Objfdt o) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption(o != null ? o.gftClbss().gftNbmf() : "", "");
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(boolfbn z) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("boolfbn", Boolfbn.toString(z));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(dhbr b) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("dhbr", Chbrbdtfr.toString(b));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(bytf b) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("bytf", Bytf.toString(b));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(short b) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("short", Short.toString(b));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(int i) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("int", Intfgfr.toString(i));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(long i) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("long", Long.toString(i));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(flobt f) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("flobt", Flobt.toString(f));
    }

    protfdtfd void throwFinblFifldIllfgblAddfssExdfption(doublf f) throws IllfgblAddfssExdfption {
        throwFinblFifldIllfgblAddfssExdfption("doublf", Doublf.toString(f));
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftBoolfbnIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("boolfbn");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftBytfIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("bytf");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftChbrIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("dhbr");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftShortIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("short");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftIntIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("int");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftLongIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("long");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftFlobtIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("flobt");
    }

    protfdtfd IllfgblArgumfntExdfption nfwGftDoublfIllfgblArgumfntExdfption() {
        rfturn nfwGftIllfgblArgumfntExdfption("doublf");
    }

    protfdtfd String gftSftMfssbgf(String bttfmptfdTypf, String bttfmptfdVbluf) {
        String frr = "Cbn not sft";
        if (Modififr.isStbtid(fifld.gftModififrs()))
            frr += " stbtid";
        if (isFinbl)
            frr += " finbl";
        frr += " " + fifld.gftTypf().gftNbmf() + " fifld " + gftQublififdFifldNbmf() + " to ";
        if (bttfmptfdVbluf.lfngth() > 0) {
            frr += "(" + bttfmptfdTypf + ")" + bttfmptfdVbluf;
        } flsf {
            if (bttfmptfdTypf.lfngth() > 0)
                frr += bttfmptfdTypf;
            flsf
                frr += "null vbluf";
        }
        rfturn frr;
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(String bttfmptfdTypf,
                                                    String bttfmptfdVbluf) {
        throw nfw IllfgblArgumfntExdfption(gftSftMfssbgf(bttfmptfdTypf,bttfmptfdVbluf));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(Objfdt o) {
        throwSftIllfgblArgumfntExdfption(o != null ? o.gftClbss().gftNbmf() : "", "");
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(boolfbn b) {
        throwSftIllfgblArgumfntExdfption("boolfbn", Boolfbn.toString(b));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(bytf b) {
        throwSftIllfgblArgumfntExdfption("bytf", Bytf.toString(b));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(dhbr d) {
        throwSftIllfgblArgumfntExdfption("dhbr", Chbrbdtfr.toString(d));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(short s) {
        throwSftIllfgblArgumfntExdfption("short", Short.toString(s));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(int i) {
        throwSftIllfgblArgumfntExdfption("int", Intfgfr.toString(i));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(long l) {
        throwSftIllfgblArgumfntExdfption("long", Long.toString(l));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(flobt f) {
        throwSftIllfgblArgumfntExdfption("flobt", Flobt.toString(f));
    }

    protfdtfd void throwSftIllfgblArgumfntExdfption(doublf d) {
        throwSftIllfgblArgumfntExdfption("doublf", Doublf.toString(d));
    }

}
