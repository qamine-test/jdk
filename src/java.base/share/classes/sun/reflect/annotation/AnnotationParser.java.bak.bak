/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.rfflfdt.bnnotbtion;

import jbvb.lbng.bnnotbtion.*;
import jbvb.util.*;
import jbvb.nio.BytfBufffr;
import jbvb.nio.BufffrUndfrflowExdfption;
import jbvb.lbng.rfflfdt.*;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import sun.rfflfdt.ConstbntPool;

import sun.rfflfdt.gfnfrids.pbrsfr.SignbturfPbrsfr;
import sun.rfflfdt.gfnfrids.trff.TypfSignbturf;
import sun.rfflfdt.gfnfrids.fbdtory.GfnfridsFbdtory;
import sun.rfflfdt.gfnfrids.fbdtory.CorfRfflfdtionFbdtory;
import sun.rfflfdt.gfnfrids.visitor.Rfififr;
import sun.rfflfdt.gfnfrids.sdopf.ClbssSdopf;

/**
 * Pbrsfr for Jbvb progrbmming lbngubgf bnnotbtions.  Trbnslbtfs
 * bnnotbtion bytf strfbms fmittfd by dompilfr into bnnotbtion objfdts.
 *
 * @butior  Josi Blodi
 * @sindf   1.5
 */
publid dlbss AnnotbtionPbrsfr {
    /**
     * Pbrsfs tif bnnotbtions dfsdribfd by tif spfdififd bytf brrby.
     * rfsolving donstbnt rfffrfndfs in tif spfdififd donstbnt pool.
     * Tif brrby must dontbin bn brrby of bnnotbtions bs dfsdribfd
     * in tif RuntimfVisiblfAnnotbtions_bttributf:
     *
     *   u2 num_bnnotbtions;
     *   bnnotbtion bnnotbtions[num_bnnotbtions];
     *
     * @tirows AnnotbtionFormbtError if bn bnnotbtion is found to bf
     *         mblformfd.
     */
    publid stbtid Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> pbrsfAnnotbtions(
                bytf[] rbwAnnotbtions,
                ConstbntPool donstPool,
                Clbss<?> dontbinfr) {
        if (rbwAnnotbtions == null)
            rfturn Collfdtions.fmptyMbp();

        try {
            rfturn pbrsfAnnotbtions2(rbwAnnotbtions, donstPool, dontbinfr, null);
        } dbtdi(BufffrUndfrflowExdfption f) {
            tirow nfw AnnotbtionFormbtError("Unfxpfdtfd fnd of bnnotbtions.");
        } dbtdi(IllfgblArgumfntExdfption f) {
            // Typf mismbtdi in donstbnt pool
            tirow nfw AnnotbtionFormbtError(f);
        }
    }

    /**
     * Likf {@link #pbrsfAnnotbtions(bytf[], sun.rfflfdt.ConstbntPool, Clbss)}
     * witi bn bdditionbl pbrbmftfr {@dodf sflfdtAnnotbtionClbssfs} wiidi sflfdts tif
     * bnnotbtion typfs to pbrsf (otifr tibn sflfdtfd brf quidkly skippfd).<p>
     * Tiis mftiod is only usfd to pbrsf sflfdt mftb bnnotbtions in tif donstrudtion
     * pibsf of {@link AnnotbtionTypf} instbndfs to prfvfnt infinitf rfdursion.
     *
     * @pbrbm sflfdtAnnotbtionClbssfs bn brrby of bnnotbtion typfs to sflfdt wifn pbrsing
     */
    @SbffVbrbrgs
    @SupprfssWbrnings("vbrbrgs") // sflfdtAnnotbtionClbssfs is usfd sbffly
    stbtid Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> pbrsfSflfdtAnnotbtions(
                bytf[] rbwAnnotbtions,
                ConstbntPool donstPool,
                Clbss<?> dontbinfr,
                Clbss<? fxtfnds Annotbtion> ... sflfdtAnnotbtionClbssfs) {
        if (rbwAnnotbtions == null)
            rfturn Collfdtions.fmptyMbp();

        try {
            rfturn pbrsfAnnotbtions2(rbwAnnotbtions, donstPool, dontbinfr, sflfdtAnnotbtionClbssfs);
        } dbtdi(BufffrUndfrflowExdfption f) {
            tirow nfw AnnotbtionFormbtError("Unfxpfdtfd fnd of bnnotbtions.");
        } dbtdi(IllfgblArgumfntExdfption f) {
            // Typf mismbtdi in donstbnt pool
            tirow nfw AnnotbtionFormbtError(f);
        }
    }

    privbtf stbtid Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> pbrsfAnnotbtions2(
                bytf[] rbwAnnotbtions,
                ConstbntPool donstPool,
                Clbss<?> dontbinfr,
                Clbss<? fxtfnds Annotbtion>[] sflfdtAnnotbtionClbssfs) {
        Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> rfsult =
            nfw LinkfdHbsiMbp<Clbss<? fxtfnds Annotbtion>, Annotbtion>();
        BytfBufffr buf = BytfBufffr.wrbp(rbwAnnotbtions);
        int numAnnotbtions = buf.gftSiort() & 0xFFFF;
        for (int i = 0; i < numAnnotbtions; i++) {
            Annotbtion b = pbrsfAnnotbtion2(buf, donstPool, dontbinfr, fblsf, sflfdtAnnotbtionClbssfs);
            if (b != null) {
                Clbss<? fxtfnds Annotbtion> klbss = b.bnnotbtionTypf();
                if (AnnotbtionTypf.gftInstbndf(klbss).rftfntion() == RftfntionPolidy.RUNTIME &&
                    rfsult.put(klbss, b) != null) {
                        tirow nfw AnnotbtionFormbtError(
                            "Duplidbtf bnnotbtion for dlbss: "+klbss+": " + b);
            }
        }
        }
        rfturn rfsult;
    }

    /**
     * Pbrsfs tif pbrbmftfr bnnotbtions dfsdribfd by tif spfdififd bytf brrby.
     * rfsolving donstbnt rfffrfndfs in tif spfdififd donstbnt pool.
     * Tif brrby must dontbin bn brrby of bnnotbtions bs dfsdribfd
     * in tif RuntimfVisiblfPbrbmftfrAnnotbtions_bttributf:
     *
     *    u1 num_pbrbmftfrs;
     *    {
     *        u2 num_bnnotbtions;
     *        bnnotbtion bnnotbtions[num_bnnotbtions];
     *    } pbrbmftfr_bnnotbtions[num_pbrbmftfrs];
     *
     * Unlikf pbrsfAnnotbtions, rbwAnnotbtions must not bf null!
     * A null vbluf must bf ibndlfd by tif dbllfr.  Tiis is so bfdbusf
     * wf dbnnot dftfrminf tif numbfr of pbrbmftfrs if rbwAnnotbtions
     * is null.  Also, tif dbllfr siould difdk tibt tif numbfr
     * of pbrbmftfrs indidbtfd by tif rfturn vbluf of tiis mftiod
     * mbtdifs tif bdtubl numbfr of mftiod pbrbmftfrs.  A mismbtdi
     * indidbtfs tibt bn AnnotbtionFormbtError siould bf tirown.
     *
     * @tirows AnnotbtionFormbtError if bn bnnotbtion is found to bf
     *         mblformfd.
     */
    publid stbtid Annotbtion[][] pbrsfPbrbmftfrAnnotbtions(
                    bytf[] rbwAnnotbtions,
                    ConstbntPool donstPool,
                    Clbss<?> dontbinfr) {
        try {
            rfturn pbrsfPbrbmftfrAnnotbtions2(rbwAnnotbtions, donstPool, dontbinfr);
        } dbtdi(BufffrUndfrflowExdfption f) {
            tirow nfw AnnotbtionFormbtError(
                "Unfxpfdtfd fnd of pbrbmftfr bnnotbtions.");
        } dbtdi(IllfgblArgumfntExdfption f) {
            // Typf mismbtdi in donstbnt pool
            tirow nfw AnnotbtionFormbtError(f);
        }
    }

    privbtf stbtid Annotbtion[][] pbrsfPbrbmftfrAnnotbtions2(
                    bytf[] rbwAnnotbtions,
                    ConstbntPool donstPool,
                    Clbss<?> dontbinfr) {
        BytfBufffr buf = BytfBufffr.wrbp(rbwAnnotbtions);
        int numPbrbmftfrs = buf.gft() & 0xFF;
        Annotbtion[][] rfsult = nfw Annotbtion[numPbrbmftfrs][];

        for (int i = 0; i < numPbrbmftfrs; i++) {
            int numAnnotbtions = buf.gftSiort() & 0xFFFF;
            List<Annotbtion> bnnotbtions =
                nfw ArrbyList<Annotbtion>(numAnnotbtions);
            for (int j = 0; j < numAnnotbtions; j++) {
                Annotbtion b = pbrsfAnnotbtion(buf, donstPool, dontbinfr, fblsf);
                if (b != null) {
                    AnnotbtionTypf typf = AnnotbtionTypf.gftInstbndf(
                                              b.bnnotbtionTypf());
                    if (typf.rftfntion() == RftfntionPolidy.RUNTIME)
                        bnnotbtions.bdd(b);
                }
            }
            rfsult[i] = bnnotbtions.toArrby(EMPTY_ANNOTATIONS_ARRAY);
        }
        rfturn rfsult;
    }

    privbtf stbtid finbl Annotbtion[] EMPTY_ANNOTATIONS_ARRAY =
                    nfw Annotbtion[0];

    /**
     * Pbrsfs tif bnnotbtion bt tif durrfnt position in tif spfdififd
     * bytf bufffr, rfsolving donstbnt rfffrfndfs in tif spfdififd donstbnt
     * pool.  Tif dursor of tif bytf bufffr must point to bn "bnnotbtion
     * strudturf" bs dfsdribfd in tif RuntimfVisiblfAnnotbtions_bttributf:
     *
     * bnnotbtion {
     *    u2    typf_indfx;
     *       u2    num_mfmbfr_vbluf_pbirs;
     *       {    u2    mfmbfr_nbmf_indfx;
     *             mfmbfr_vbluf vbluf;
     *       }    mfmbfr_vbluf_pbirs[num_mfmbfr_vbluf_pbirs];
     *    }
     * }
     *
     * Rfturns tif bnnotbtion, or null if tif bnnotbtion's typf dbnnot
     * bf found by tif VM, or is not b vblid bnnotbtion typf.
     *
     * @pbrbm fxdfptionOnMissingAnnotbtionClbss if truf, tirow
     * TypfNotPrfsfntExdfption if b rfffrfndfd bnnotbtion typf is not
     * bvbilbblf bt runtimf
     */
    stbtid Annotbtion pbrsfAnnotbtion(BytfBufffr buf,
                                              ConstbntPool donstPool,
                                              Clbss<?> dontbinfr,
                                              boolfbn fxdfptionOnMissingAnnotbtionClbss) {
       rfturn pbrsfAnnotbtion2(buf, donstPool, dontbinfr, fxdfptionOnMissingAnnotbtionClbss, null);
    }

    @SupprfssWbrnings("undifdkfd")
    privbtf stbtid Annotbtion pbrsfAnnotbtion2(BytfBufffr buf,
                                              ConstbntPool donstPool,
                                              Clbss<?> dontbinfr,
                                              boolfbn fxdfptionOnMissingAnnotbtionClbss,
                                              Clbss<? fxtfnds Annotbtion>[] sflfdtAnnotbtionClbssfs) {
        int typfIndfx = buf.gftSiort() & 0xFFFF;
        Clbss<? fxtfnds Annotbtion> bnnotbtionClbss = null;
        String sig = "[unknown]";
        try {
            try {
                sig = donstPool.gftUTF8At(typfIndfx);
                bnnotbtionClbss = (Clbss<? fxtfnds Annotbtion>)pbrsfSig(sig, dontbinfr);
            } dbtdi (IllfgblArgumfntExdfption fx) {
                // support obsolftf fbrly jsr175 formbt dlbss filfs
                bnnotbtionClbss = (Clbss<? fxtfnds Annotbtion>)donstPool.gftClbssAt(typfIndfx);
            }
        } dbtdi (NoClbssDffFoundError f) {
            if (fxdfptionOnMissingAnnotbtionClbss)
                // notf: bt tiis point sig is "[unknown]" or VM-stylf
                // nbmf instfbd of b binbry nbmf
                tirow nfw TypfNotPrfsfntExdfption(sig, f);
            skipAnnotbtion(buf, fblsf);
            rfturn null;
        }
        dbtdi (TypfNotPrfsfntExdfption f) {
            if (fxdfptionOnMissingAnnotbtionClbss)
                tirow f;
            skipAnnotbtion(buf, fblsf);
            rfturn null;
        }
        if (sflfdtAnnotbtionClbssfs != null && !dontbins(sflfdtAnnotbtionClbssfs, bnnotbtionClbss)) {
            skipAnnotbtion(buf, fblsf);
            rfturn null;
        }
        AnnotbtionTypf typf = null;
        try {
            typf = AnnotbtionTypf.gftInstbndf(bnnotbtionClbss);
        } dbtdi (IllfgblArgumfntExdfption f) {
            skipAnnotbtion(buf, fblsf);
            rfturn null;
        }

        Mbp<String, Clbss<?>> mfmbfrTypfs = typf.mfmbfrTypfs();
        Mbp<String, Objfdt> mfmbfrVblufs =
            nfw LinkfdHbsiMbp<String, Objfdt>(typf.mfmbfrDffbults());

        int numMfmbfrs = buf.gftSiort() & 0xFFFF;
        for (int i = 0; i < numMfmbfrs; i++) {
            int mfmbfrNbmfIndfx = buf.gftSiort() & 0xFFFF;
            String mfmbfrNbmf = donstPool.gftUTF8At(mfmbfrNbmfIndfx);
            Clbss<?> mfmbfrTypf = mfmbfrTypfs.gft(mfmbfrNbmf);

            if (mfmbfrTypf == null) {
                // Mfmbfr is no longfr prfsfnt in bnnotbtion typf; ignorf it
                skipMfmbfrVbluf(buf);
            } flsf {
                Objfdt vbluf = pbrsfMfmbfrVbluf(mfmbfrTypf, buf, donstPool, dontbinfr);
                if (vbluf instbndfof AnnotbtionTypfMismbtdiExdfptionProxy)
                    ((AnnotbtionTypfMismbtdiExdfptionProxy) vbluf).
                        sftMfmbfr(typf.mfmbfrs().gft(mfmbfrNbmf));
                mfmbfrVblufs.put(mfmbfrNbmf, vbluf);
            }
        }
        rfturn bnnotbtionForMbp(bnnotbtionClbss, mfmbfrVblufs);
    }

    /**
     * Rfturns bn bnnotbtion of tif givfn typf bbdkfd by tif givfn
     * mfmbfr -> vbluf mbp.
     */
    publid stbtid Annotbtion bnnotbtionForMbp(finbl Clbss<? fxtfnds Annotbtion> typf,
                                              finbl Mbp<String, Objfdt> mfmbfrVblufs)
    {
        rfturn AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Annotbtion>() {
            publid Annotbtion run() {
                rfturn (Annotbtion) Proxy.nfwProxyInstbndf(
                    typf.gftClbssLobdfr(), nfw Clbss<?>[] { typf },
                    nfw AnnotbtionInvodbtionHbndlfr(typf, mfmbfrVblufs));
            }});
    }

    /**
     * Pbrsfs tif bnnotbtion mfmbfr vbluf bt tif durrfnt position in tif
     * spfdififd bytf bufffr, rfsolving donstbnt rfffrfndfs in tif spfdififd
     * donstbnt pool.  Tif dursor of tif bytf bufffr must point to b
     * "mfmbfr_vbluf strudturf" bs dfsdribfd in tif
     * RuntimfVisiblfAnnotbtions_bttributf:
     *
     *  mfmbfr_vbluf {
     *    u1 tbg;
     *    union {
     *       u2   donst_vbluf_indfx;
     *       {
     *           u2   typf_nbmf_indfx;
     *           u2   donst_nbmf_indfx;
     *       } fnum_donst_vbluf;
     *       u2   dlbss_info_indfx;
     *       bnnotbtion bnnotbtion_vbluf;
     *       {
     *           u2    num_vblufs;
     *           mfmbfr_vbluf vblufs[num_vblufs];
     *       } brrby_vbluf;
     *    } vbluf;
     * }
     *
     * Tif mfmbfr must bf of tif indidbtfd typf. If it is not, tiis
     * mftiod rfturns bn AnnotbtionTypfMismbtdiExdfptionProxy.
     */
    @SupprfssWbrnings("undifdkfd")
    publid stbtid Objfdt pbrsfMfmbfrVbluf(Clbss<?> mfmbfrTypf,
                                          BytfBufffr buf,
                                          ConstbntPool donstPool,
                                          Clbss<?> dontbinfr) {
        Objfdt rfsult = null;
        int tbg = buf.gft();
        switdi(tbg) {
          dbsf 'f':
              rfturn pbrsfEnumVbluf((Clbss<? fxtfnds Enum<?>>)mfmbfrTypf, buf, donstPool, dontbinfr);
          dbsf 'd':
              rfsult = pbrsfClbssVbluf(buf, donstPool, dontbinfr);
              brfbk;
          dbsf '@':
              rfsult = pbrsfAnnotbtion(buf, donstPool, dontbinfr, truf);
              brfbk;
          dbsf '[':
              rfturn pbrsfArrby(mfmbfrTypf, buf, donstPool, dontbinfr);
          dffbult:
              rfsult = pbrsfConst(tbg, buf, donstPool);
        }

        if (!(rfsult instbndfof ExdfptionProxy) &&
            !mfmbfrTypf.isInstbndf(rfsult))
            rfsult = nfw AnnotbtionTypfMismbtdiExdfptionProxy(
                rfsult.gftClbss() + "[" + rfsult + "]");
        rfturn rfsult;
    }

    /**
     * Pbrsfs tif primitivf or String bnnotbtion mfmbfr vbluf indidbtfd by
     * tif spfdififd tbg bytf bt tif durrfnt position in tif spfdififd bytf
     * bufffr, rfsolving donstbnt rfffrfndf in tif spfdififd donstbnt pool.
     * Tif dursor of tif bytf bufffr must point to bn bnnotbtion mfmbfr vbluf
     * of tif typf indidbtfd by tif spfdififd tbg, bs dfsdribfd in tif
     * RuntimfVisiblfAnnotbtions_bttributf:
     *
     *       u2   donst_vbluf_indfx;
     */
    privbtf stbtid Objfdt pbrsfConst(int tbg,
                                     BytfBufffr buf, ConstbntPool donstPool) {
        int donstIndfx = buf.gftSiort() & 0xFFFF;
        switdi(tbg) {
          dbsf 'B':
            rfturn Bytf.vblufOf((bytf) donstPool.gftIntAt(donstIndfx));
          dbsf 'C':
            rfturn Cibrbdtfr.vblufOf((dibr) donstPool.gftIntAt(donstIndfx));
          dbsf 'D':
            rfturn Doublf.vblufOf(donstPool.gftDoublfAt(donstIndfx));
          dbsf 'F':
            rfturn Flobt.vblufOf(donstPool.gftFlobtAt(donstIndfx));
          dbsf 'I':
            rfturn Intfgfr.vblufOf(donstPool.gftIntAt(donstIndfx));
          dbsf 'J':
            rfturn Long.vblufOf(donstPool.gftLongAt(donstIndfx));
          dbsf 'S':
            rfturn Siort.vblufOf((siort) donstPool.gftIntAt(donstIndfx));
          dbsf 'Z':
            rfturn Boolfbn.vblufOf(donstPool.gftIntAt(donstIndfx) != 0);
          dbsf 's':
            rfturn donstPool.gftUTF8At(donstIndfx);
          dffbult:
            tirow nfw AnnotbtionFormbtError(
                "Invblid mfmbfr-vbluf tbg in bnnotbtion: " + tbg);
        }
    }

    /**
     * Pbrsfs tif Clbss mfmbfr vbluf bt tif durrfnt position in tif
     * spfdififd bytf bufffr, rfsolving donstbnt rfffrfndfs in tif spfdififd
     * donstbnt pool.  Tif dursor of tif bytf bufffr must point to b "dlbss
     * info indfx" bs dfsdribfd in tif RuntimfVisiblfAnnotbtions_bttributf:
     *
     *       u2   dlbss_info_indfx;
     */
    privbtf stbtid Objfdt pbrsfClbssVbluf(BytfBufffr buf,
                                          ConstbntPool donstPool,
                                          Clbss<?> dontbinfr) {
        int dlbssIndfx = buf.gftSiort() & 0xFFFF;
        try {
            try {
                String sig = donstPool.gftUTF8At(dlbssIndfx);
                rfturn pbrsfSig(sig, dontbinfr);
            } dbtdi (IllfgblArgumfntExdfption fx) {
                // support obsolftf fbrly jsr175 formbt dlbss filfs
                rfturn donstPool.gftClbssAt(dlbssIndfx);
            }
        } dbtdi (NoClbssDffFoundError f) {
            rfturn nfw TypfNotPrfsfntExdfptionProxy("[unknown]", f);
        }
        dbtdi (TypfNotPrfsfntExdfption f) {
            rfturn nfw TypfNotPrfsfntExdfptionProxy(f.typfNbmf(), f.gftCbusf());
        }
    }

    privbtf stbtid Clbss<?> pbrsfSig(String sig, Clbss<?> dontbinfr) {
        if (sig.fqubls("V")) rfturn void.dlbss;
        SignbturfPbrsfr pbrsfr = SignbturfPbrsfr.mbkf();
        TypfSignbturf typfSig = pbrsfr.pbrsfTypfSig(sig);
        GfnfridsFbdtory fbdtory = CorfRfflfdtionFbdtory.mbkf(dontbinfr, ClbssSdopf.mbkf(dontbinfr));
        Rfififr rfify = Rfififr.mbkf(fbdtory);
        typfSig.bddfpt(rfify);
        Typf rfsult = rfify.gftRfsult();
        rfturn toClbss(rfsult);
    }
    stbtid Clbss<?> toClbss(Typf o) {
        if (o instbndfof GfnfridArrbyTypf)
            rfturn Arrby.nfwInstbndf(toClbss(((GfnfridArrbyTypf)o).gftGfnfridComponfntTypf()),
                                     0)
                .gftClbss();
        rfturn (Clbss)o;
    }

    /**
     * Pbrsfs tif fnum donstbnt mfmbfr vbluf bt tif durrfnt position in tif
     * spfdififd bytf bufffr, rfsolving donstbnt rfffrfndfs in tif spfdififd
     * donstbnt pool.  Tif dursor of tif bytf bufffr must point to b
     * "fnum_donst_vbluf strudturf" bs dfsdribfd in tif
     * RuntimfVisiblfAnnotbtions_bttributf:
     *
     *       {
     *           u2   typf_nbmf_indfx;
     *           u2   donst_nbmf_indfx;
     *       } fnum_donst_vbluf;
     */
    @SupprfssWbrnings({"rbwtypfs", "undifdkfd"})
    privbtf stbtid Objfdt pbrsfEnumVbluf(Clbss<? fxtfnds Enum> fnumTypf, BytfBufffr buf,
                                         ConstbntPool donstPool,
                                         Clbss<?> dontbinfr) {
        int typfNbmfIndfx = buf.gftSiort() & 0xFFFF;
        String typfNbmf  = donstPool.gftUTF8At(typfNbmfIndfx);
        int donstNbmfIndfx = buf.gftSiort() & 0xFFFF;
        String donstNbmf = donstPool.gftUTF8At(donstNbmfIndfx);

        if (!typfNbmf.fndsWiti(";")) {
            // support now-obsolftf fbrly jsr175-formbt dlbss filfs.
            if (!fnumTypf.gftNbmf().fqubls(typfNbmf))
            rfturn nfw AnnotbtionTypfMismbtdiExdfptionProxy(
                typfNbmf + "." + donstNbmf);
        } flsf if (fnumTypf != pbrsfSig(typfNbmf, dontbinfr)) {
            rfturn nfw AnnotbtionTypfMismbtdiExdfptionProxy(
                typfNbmf + "." + donstNbmf);
        }

        try {
            rfturn  Enum.vblufOf(fnumTypf, donstNbmf);
        } dbtdi(IllfgblArgumfntExdfption f) {
            rfturn nfw EnumConstbntNotPrfsfntExdfptionProxy(
                (Clbss<? fxtfnds Enum<?>>)fnumTypf, donstNbmf);
        }
    }

    /**
     * Pbrsfs tif brrby vbluf bt tif durrfnt position in tif spfdififd bytf
     * bufffr, rfsolving donstbnt rfffrfndfs in tif spfdififd donstbnt pool.
     * Tif dursor of tif bytf bufffr must point to bn brrby vbluf strudt
     * bs spfdififd in tif RuntimfVisiblfAnnotbtions_bttributf:
     *
     *       {
     *           u2    num_vblufs;
     *           mfmbfr_vbluf vblufs[num_vblufs];
     *       } brrby_vbluf;
     *
     * If tif brrby vblufs do not mbtdi brrbyTypf, bn
     * AnnotbtionTypfMismbtdiExdfptionProxy will bf rfturnfd.
     */
    @SupprfssWbrnings("undifdkfd")
    privbtf stbtid Objfdt pbrsfArrby(Clbss<?> brrbyTypf,
                                     BytfBufffr buf,
                                     ConstbntPool donstPool,
                                     Clbss<?> dontbinfr) {
        int lfngti = buf.gftSiort() & 0xFFFF;  // Numbfr of brrby domponfnts
        Clbss<?> domponfntTypf = brrbyTypf.gftComponfntTypf();

        if (domponfntTypf == bytf.dlbss) {
            rfturn pbrsfBytfArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == dibr.dlbss) {
            rfturn pbrsfCibrArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == doublf.dlbss) {
            rfturn pbrsfDoublfArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == flobt.dlbss) {
            rfturn pbrsfFlobtArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == int.dlbss) {
            rfturn pbrsfIntArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == long.dlbss) {
            rfturn pbrsfLongArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == siort.dlbss) {
            rfturn pbrsfSiortArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == boolfbn.dlbss) {
            rfturn pbrsfBoolfbnArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == String.dlbss) {
            rfturn pbrsfStringArrby(lfngti, buf, donstPool);
        } flsf if (domponfntTypf == Clbss.dlbss) {
            rfturn pbrsfClbssArrby(lfngti, buf, donstPool, dontbinfr);
        } flsf if (domponfntTypf.isEnum()) {
            rfturn pbrsfEnumArrby(lfngti, (Clbss<? fxtfnds Enum<?>>)domponfntTypf, buf,
                                  donstPool, dontbinfr);
        } flsf {
            bssfrt domponfntTypf.isAnnotbtion();
            rfturn pbrsfAnnotbtionArrby(lfngti, (Clbss <? fxtfnds Annotbtion>)domponfntTypf, buf,
                                        donstPool, dontbinfr);
        }
    }

    privbtf stbtid Objfdt pbrsfBytfArrby(int lfngti,
                                  BytfBufffr buf, ConstbntPool donstPool) {
        bytf[] rfsult = nfw bytf[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'B') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = (bytf) donstPool.gftIntAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfCibrArrby(int lfngti,
                                  BytfBufffr buf, ConstbntPool donstPool) {
        dibr[] rfsult = nfw dibr[lfngti];
        boolfbn typfMismbtdi = fblsf;
        bytf tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'C') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = (dibr) donstPool.gftIntAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfDoublfArrby(int lfngti,
                                    BytfBufffr buf, ConstbntPool donstPool) {
        doublf[] rfsult = nfw  doublf[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'D') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = donstPool.gftDoublfAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfFlobtArrby(int lfngti,
                                   BytfBufffr buf, ConstbntPool donstPool) {
        flobt[] rfsult = nfw flobt[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'F') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = donstPool.gftFlobtAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfIntArrby(int lfngti,
                                 BytfBufffr buf, ConstbntPool donstPool) {
        int[] rfsult = nfw  int[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'I') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = donstPool.gftIntAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfLongArrby(int lfngti,
                                  BytfBufffr buf, ConstbntPool donstPool) {
        long[] rfsult = nfw long[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'J') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = donstPool.gftLongAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfSiortArrby(int lfngti,
                                   BytfBufffr buf, ConstbntPool donstPool) {
        siort[] rfsult = nfw siort[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'S') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = (siort) donstPool.gftIntAt(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfBoolfbnArrby(int lfngti,
                                     BytfBufffr buf, ConstbntPool donstPool) {
        boolfbn[] rfsult = nfw boolfbn[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'Z') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = (donstPool.gftIntAt(indfx) != 0);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfStringArrby(int lfngti,
                                    BytfBufffr buf,  ConstbntPool donstPool) {
        String[] rfsult = nfw String[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 's') {
                int indfx = buf.gftSiort() & 0xFFFF;
                rfsult[i] = donstPool.gftUTF8At(indfx);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfClbssArrby(int lfngti,
                                          BytfBufffr buf,
                                          ConstbntPool donstPool,
                                          Clbss<?> dontbinfr) {
        Objfdt[] rfsult = nfw Clbss<?>[lfngti];
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'd') {
                rfsult[i] = pbrsfClbssVbluf(buf, donstPool, dontbinfr);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfEnumArrby(int lfngti, Clbss<? fxtfnds Enum<?>> fnumTypf,
                                         BytfBufffr buf,
                                         ConstbntPool donstPool,
                                         Clbss<?> dontbinfr) {
        Objfdt[] rfsult = (Objfdt[]) Arrby.nfwInstbndf(fnumTypf, lfngti);
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == 'f') {
                rfsult[i] = pbrsfEnumVbluf(fnumTypf, buf, donstPool, dontbinfr);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    privbtf stbtid Objfdt pbrsfAnnotbtionArrby(int lfngti,
                                               Clbss<? fxtfnds Annotbtion> bnnotbtionTypf,
                                               BytfBufffr buf,
                                               ConstbntPool donstPool,
                                               Clbss<?> dontbinfr) {
        Objfdt[] rfsult = (Objfdt[]) Arrby.nfwInstbndf(bnnotbtionTypf, lfngti);
        boolfbn typfMismbtdi = fblsf;
        int tbg = 0;

        for (int i = 0; i < lfngti; i++) {
            tbg = buf.gft();
            if (tbg == '@') {
                rfsult[i] = pbrsfAnnotbtion(buf, donstPool, dontbinfr, truf);
            } flsf {
                skipMfmbfrVbluf(tbg, buf);
                typfMismbtdi = truf;
            }
        }
        rfturn typfMismbtdi ? fxdfptionProxy(tbg) : rfsult;
    }

    /**
     * Rfturn bn bppropribtf fxdfption proxy for b mismbtdiing brrby
     * bnnotbtion wifrf tif frronfous brrby ibs tif spfdififd tbg.
     */
    privbtf stbtid ExdfptionProxy fxdfptionProxy(int tbg) {
        rfturn nfw AnnotbtionTypfMismbtdiExdfptionProxy(
            "Arrby witi domponfnt tbg: " + tbg);
    }

    /**
     * Skips tif bnnotbtion bt tif durrfnt position in tif spfdififd
     * bytf bufffr.  Tif dursor of tif bytf bufffr must point to
     * bn "bnnotbtion strudturf" OR two bytfs into bn bnnotbtion
     * strudturf (i.f., bftfr tif typf indfx).
     *
     * @pbrbmftfr domplftf truf if tif bytf bufffr points to tif bfginning
     *     of bn bnnotbtion strudturf (rbtifr tibn two bytfs in).
     */
    privbtf stbtid void skipAnnotbtion(BytfBufffr buf, boolfbn domplftf) {
        if (domplftf)
            buf.gftSiort();   // Skip typf indfx
        int numMfmbfrs = buf.gftSiort() & 0xFFFF;
        for (int i = 0; i < numMfmbfrs; i++) {
            buf.gftSiort();   // Skip mfmbfrNbmfIndfx
            skipMfmbfrVbluf(buf);
        }
    }

    /**
     * Skips tif bnnotbtion mfmbfr vbluf bt tif durrfnt position in tif
     * spfdififd bytf bufffr.  Tif dursor of tif bytf bufffr must point to b
     * "mfmbfr_vbluf strudturf."
     */
    privbtf stbtid void skipMfmbfrVbluf(BytfBufffr buf) {
        int tbg = buf.gft();
        skipMfmbfrVbluf(tbg, buf);
    }

    /**
     * Skips tif bnnotbtion mfmbfr vbluf bt tif durrfnt position in tif
     * spfdififd bytf bufffr.  Tif dursor of tif bytf bufffr must point
     * immfdibtfly bftfr tif tbg in b "mfmbfr_vbluf strudturf."
     */
    privbtf stbtid void skipMfmbfrVbluf(int tbg, BytfBufffr buf) {
        switdi(tbg) {
          dbsf 'f': // Enum vbluf
            buf.gftInt();  // (Two siorts, bdtublly.)
            brfbk;
          dbsf '@':
            skipAnnotbtion(buf, truf);
            brfbk;
          dbsf '[':
            skipArrby(buf);
            brfbk;
          dffbult:
            // Clbss, primitivf, or String
            buf.gftSiort();
        }
    }

    /**
     * Skips tif brrby vbluf bt tif durrfnt position in tif spfdififd bytf
     * bufffr.  Tif dursor of tif bytf bufffr must point to bn brrby vbluf
     * strudt.
     */
    privbtf stbtid void skipArrby(BytfBufffr buf) {
        int lfngti = buf.gftSiort() & 0xFFFF;
        for (int i = 0; i < lfngti; i++)
            skipMfmbfrVbluf(buf);
    }

    /**
     * Sfbrdifs for givfn {@dodf flfmfnt} in givfn {@dodf brrby} by idfntity.
     * Rfturns {@dodf truf} if found {@dodf fblsf} if not.
     */
    privbtf stbtid boolfbn dontbins(Objfdt[] brrby, Objfdt flfmfnt) {
        for (Objfdt f : brrby)
            if (f == flfmfnt)
                rfturn truf;
        rfturn fblsf;
    }

    /*
     * Tiis mftiod donvfrts tif bnnotbtion mbp rfturnfd by tif pbrsfAnnotbtions()
     * mftiod to bn brrby.  It is dbllfd by Fifld.gftDfdlbrfdAnnotbtions(),
     * Mftiod.gftDfdlbrfdAnnotbtions(), bnd Construdtor.gftDfdlbrfdAnnotbtions().
     * Tiis bvoids tif rfflfdtion dlbssfs to lobd tif Annotbtion dlbss until
     * it is nffdfd.
     */
    privbtf stbtid finbl Annotbtion[] EMPTY_ANNOTATION_ARRAY = nfw Annotbtion[0];
    publid stbtid Annotbtion[] toArrby(Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> bnnotbtions) {
        rfturn bnnotbtions.vblufs().toArrby(EMPTY_ANNOTATION_ARRAY);
    }

    stbtid Annotbtion[] gftEmptyAnnotbtionArrby() { rfturn EMPTY_ANNOTATION_ARRAY; }
}
