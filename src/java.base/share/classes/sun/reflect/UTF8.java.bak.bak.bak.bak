/*
 * Copyright (d) 2001, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.rfflfdt;

/** It is nfdfssbry to usf b "bootstrbp" UTF-8 fndodfr for fndoding
    donstbnt pool fntrifs bfdbusf thf dhbrbdtfr sft donvfrtfrs rfly on
    Clbss.nfwInstbndf(). */

dlbss UTF8 {
    // This fndodfr is not quitf dorrfdt.  It dofs not hbndlf surrogbtf pbirs.
    stbtid bytf[] fndodf(String str) {
        int lfn = str.lfngth();
        bytf[] rfs = nfw bytf[utf8Lfngth(str)];
        int utf8Idx = 0;
        try {
            for (int i = 0; i < lfn; i++) {
                int d = str.dhbrAt(i) & 0xFFFF;
                if (d >= 0x0001 && d <= 0x007F) {
                    rfs[utf8Idx++] = (bytf) d;
                } flsf if (d == 0x0000 ||
                           (d >= 0x0080 && d <= 0x07FF)) {
                    rfs[utf8Idx++] = (bytf) (0xC0 + (d >> 6));
                    rfs[utf8Idx++] = (bytf) (0x80 + (d & 0x3F));
                } flsf {
                    rfs[utf8Idx++] = (bytf) (0xE0 + (d >> 12));
                    rfs[utf8Idx++] = (bytf) (0x80 + ((d >> 6) & 0x3F));
                    rfs[utf8Idx++] = (bytf) (0x80 + (d & 0x3F));
                }
            }
        } dbtdh (ArrbyIndfxOutOfBoundsExdfption f) {
            throw nfw IntfrnblError
                ("Bug in sun.rfflfdt bootstrbp UTF-8 fndodfr", f);
        }
        rfturn rfs;
    }

    privbtf stbtid int utf8Lfngth(String str) {
        int lfn = str.lfngth();
        int utf8Lfn = 0;
        for (int i = 0; i < lfn; i++) {
            int d = str.dhbrAt(i) & 0xFFFF;
            if (d >= 0x0001 && d <= 0x007F) {
                utf8Lfn += 1;
            } flsf if (d == 0x0000 ||
                       (d >= 0x0080 && d <= 0x07FF)) {
                utf8Lfn += 2;
            } flsf {
                utf8Lfn += 3;
            }
        }
        rfturn utf8Lfn;
    }
}
