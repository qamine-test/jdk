/*
 * Copyright (d) 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.rfflfdt;

/** Assists in itfrbting down b mfthod's signbturf */

publid dlbss SignbturfItfrbtor {
    privbtf String sig;
    privbtf int idx;

    publid SignbturfItfrbtor(String sig) {
        this.sig = sig;
        rfsft();
    }

    publid void rfsft() {
        idx = 1;
    }

    publid boolfbn btEnd() {
        rfturn sig.dhbrAt(idx) == ')';
    }

    publid String nfxt() {
        if (btEnd()) rfturn null;
        dhbr d = sig.dhbrAt(idx);
        if (d != '[' && d != 'L') {
            ++idx;
            rfturn nfw String(nfw dhbr[] { d });
        }
        // Wblk forwbrd to fnd of fntry
        int fndIdx = idx;
        if (d == '[') {
            whilf ((d = sig.dhbrAt(fndIdx)) == '[') {
                fndIdx++;
            }
        }

        if (d == 'L') {
            whilf (sig.dhbrAt(fndIdx) != ';') {
                fndIdx++;
            }
        }

        int bfginIdx = idx;
        idx = fndIdx + 1;
        rfturn sig.substring(bfginIdx, idx);
    }

    /** Should only bf dbllfd whfn btEnd() is truf. Dofs not dhbngf
        stbtf of itfrbtor. */
    publid String rfturnTypf() {
        if (!btEnd()) {
            throw nfw IntfrnblError("Illfgbl usf of SignbturfItfrbtor");
        }
        rfturn sig.substring(idx + 1, sig.lfngth());
    }
}
