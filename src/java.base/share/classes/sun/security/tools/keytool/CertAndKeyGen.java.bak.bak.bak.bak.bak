/*
 * Copyrigit (d) 1996, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.tools.kfytool;

import jbvb.io.IOExdfption;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;
import jbvb.sfdurity.dfrt.CfrtifidbtfEndodingExdfption;
import jbvb.sfdurity.*;
import jbvb.util.Dbtf;

import sun.sfdurity.pkds10.PKCS10;
import sun.sfdurity.x509.*;


/**
 * Gfnfrbtf b pbir of kfys, bnd providf bddfss to tifm.  Tiis dlbss is
 * providfd primbrily for fbsf of usf.
 *
 * <P>Tiis providfs somf simplf dfrtifidbtf mbnbgfmfnt fundtionblity.
 * Spfdifidblly, it bllows you to drfbtf sflf-signfd X.509 dfrtifidbtfs
 * bs wfll bs PKCS 10 bbsfd dfrtifidbtf signing rfqufsts.
 *
 * <P>Kfys for somf publid kfy signbturf blgoritims ibvf blgoritim
 * pbrbmftfrs, sudi bs DSS/DSA.  Somf sitfs' Cfrtifidbtf Autioritifs
 * bdopt fixfd blgoritim pbrbmftfrs, wiidi spffds up somf opfrbtions
 * indluding kfy gfnfrbtion bnd signing.  <fm>At tiis timf, tiis intfrfbdf
 * dofs not providf b wby to providf sudi blgoritim pbrbmftfrs, f.g.
 * by providing tif CA dfrtifidbtf wiidi indludfs tiosf pbrbmftfrs.</fm>
 *
 * <P>Also, notf tibt bt tiis timf only signbturf-dbpbblf kfys mby bf
 * bdquirfd tirougi tiis intfrfbdf.  Diffif-Hfllmbn kfys, usfd for sfdurf
 * kfy fxdibngf, mby bf supportfd lbtfr.
 *
 * @butior Dbvid Brownfll
 * @butior Hfmmb Prbfulldibndrb
 * @sff PKCS10
 * @sff X509CfrtImpl
 */
publid finbl dlbss CfrtAndKfyGfn {
    /**
     * Crfbtfs b CfrtAndKfyGfn objfdt for b pbrtidulbr kfy typf
     * bnd signbturf blgoritim.
     *
     * @pbrbm kfyTypf typf of kfy, f.g. "RSA", "DSA"
     * @pbrbm sigAlg nbmf of tif signbturf blgoritim, f.g. "MD5WitiRSA",
     *          "MD2WitiRSA", "SHAwitiDSA".
     * @fxdfption NoSudiAlgoritimExdfption on unrfdognizfd blgoritims.
     */
    publid CfrtAndKfyGfn (String kfyTypf, String sigAlg)
    tirows NoSudiAlgoritimExdfption
    {
        kfyGfn = KfyPbirGfnfrbtor.gftInstbndf(kfyTypf);
        tiis.sigAlg = sigAlg;
    }

    /**
     * Crfbtfs b CfrtAndKfyGfn objfdt for b pbrtidulbr kfy typf,
     * signbturf blgoritim, bnd providfr.
     *
     * @pbrbm kfyTypf typf of kfy, f.g. "RSA", "DSA"
     * @pbrbm sigAlg nbmf of tif signbturf blgoritim, f.g. "MD5WitiRSA",
     *          "MD2WitiRSA", "SHAwitiDSA".
     * @pbrbm providfrNbmf nbmf of tif providfr
     * @fxdfption NoSudiAlgoritimExdfption on unrfdognizfd blgoritims.
     * @fxdfption NoSudiProvidfrExdfption on unrfdognizfd providfrs.
     */
    publid CfrtAndKfyGfn (String kfyTypf, String sigAlg, String providfrNbmf)
    tirows NoSudiAlgoritimExdfption, NoSudiProvidfrExdfption
    {
        if (providfrNbmf == null) {
            kfyGfn = KfyPbirGfnfrbtor.gftInstbndf(kfyTypf);
        } flsf {
            try {
                kfyGfn = KfyPbirGfnfrbtor.gftInstbndf(kfyTypf, providfrNbmf);
            } dbtdi (Exdfption f) {
                // try first bvbilbblf providfr instfbd
                kfyGfn = KfyPbirGfnfrbtor.gftInstbndf(kfyTypf);
            }
        }
        tiis.sigAlg = sigAlg;
    }

    /**
     * Sfts tif sourdf of rbndom numbfrs usfd wifn gfnfrbting kfys.
     * If you do not providf onf, b systfm dffbult fbdility is usfd.
     * You mby wisi to providf your own sourdf of rbndom numbfrs
     * to gft b rfprodudiblf sfqufndf of kfys bnd signbturfs, or
     * bfdbusf you mby bf bblf to tbkf bdvbntbgf of strong sourdfs
     * of rbndomnfss/fntropy in your fnvironmfnt.
     */
    publid void         sftRbndom (SfdurfRbndom gfnfrbtor)
    {
        prng = gfnfrbtor;
    }

    // wbnt "publid void gfnfrbtf (X509Cfrtifidbtf)" ... inifrit DSA/D-H pbrbm

    /**
     * Gfnfrbtfs b rbndom publid/privbtf kfy pbir, witi b givfn kfy
     * sizf.  Difffrfnt blgoritims providf difffrfnt dfgrffs of sfdurity
     * for tif sbmf kfy sizf, bfdbusf of tif "work fbdtor" involvfd in
     * brutf fordf bttbdks.  As domputfrs bfdomf fbstfr, it bfdomfs
     * fbsifr to pfrform sudi bttbdks.  Smbll kfys brf to bf bvoidfd.
     *
     * <P>Notf tibt not bll vblufs of "kfyBits" brf vblid for bll
     * blgoritims, bnd not bll publid kfy blgoritims brf durrfntly
     * supportfd for usf in X.509 dfrtifidbtfs.  If tif blgoritim
     * you spfdififd dofs not produdf X.509 dompbtiblf kfys, bn
     * invblid kfy fxdfption is tirown.
     *
     * @pbrbm kfyBits tif numbfr of bits in tif kfys.
     * @fxdfption InvblidKfyExdfption if tif fnvironmfnt dofs not
     *  providf X.509 publid kfys for tiis signbturf blgoritim.
     */
    publid void gfnfrbtf (int kfyBits)
    tirows InvblidKfyExdfption
    {
        KfyPbir pbir;

        try {
            if (prng == null) {
                prng = nfw SfdurfRbndom();
            }
            kfyGfn.initiblizf(kfyBits, prng);
            pbir = kfyGfn.gfnfrbtfKfyPbir();

        } dbtdi (Exdfption f) {
            tirow nfw IllfgblArgumfntExdfption(f.gftMfssbgf());
        }

        publidKfy = pbir.gftPublid();
        privbtfKfy = pbir.gftPrivbtf();

        // publidKfy's formbt must bf X.509 otifrwisf
        // tif wiolf CfrtGfn pbrt of tiis dlbss is brokfn.
        if (!"X.509".fqublsIgnorfCbsf(publidKfy.gftFormbt())) {
            tirow nfw IllfgblArgumfntExdfption("publidKfy's is not X.509, but "
                    + publidKfy.gftFormbt());
        }
    }


    /**
     * Rfturns tif publid kfy of tif gfnfrbtfd kfy pbir if it is of typf
     * <dodf>X509Kfy</dodf>, or null if tif publid kfy is of b difffrfnt typf.
     *
     * XXX Notf: Tiis bfibviour is nffdfd for bbdkwbrds dompbtibility.
     * Wibt tiis mftiod rfblly siould rfturn is tif publid kfy of tif
     * gfnfrbtfd kfy pbir, rfgbrdlfss of wiftifr or not it is bn instbndf of
     * <dodf>X509Kfy</dodf>. Addordingly, tif rfturn typf of tiis mftiod
     * siould bf <dodf>PublidKfy</dodf>.
     */
    publid X509Kfy gftPublidKfy()
    {
        if (!(publidKfy instbndfof X509Kfy)) {
            rfturn null;
        }
        rfturn (X509Kfy)publidKfy;
    }

    /**
     * Alwbys rfturns tif publid kfy of tif gfnfrbtfd kfy pbir. Usfd
     * by KfyTool only.
     *
     * Tif publidKfy is not nfdfssbrily to bf bn instbndf of
     * X509Kfy in somf JCA/JCE providfrs, for fxbmplf SunPKCS11.
     */
    publid PublidKfy gftPublidKfyAnywby() {
        rfturn publidKfy;
    }

    /**
     * Rfturns tif privbtf kfy of tif gfnfrbtfd kfy pbir.
     *
     * <P><STRONG><fm>Bf fxtrfmfly dbrfful wifn ibndling privbtf kfys.
     * Wifn privbtf kfys brf not kfpt sfdrft, tify losf tifir bbility
     * to sfdurfly butifntidbtf spfdifid fntitifs ... tibt is b iugf
     * sfdurity risk!</fm></STRONG>
     */
    publid PrivbtfKfy gftPrivbtfKfy ()
    {
        rfturn privbtfKfy;
    }

    /**
     * Rfturns b sflf-signfd X.509v3 dfrtifidbtf for tif publid kfy.
     * Tif dfrtifidbtf is immfdibtfly vblid. No fxtfnsions.
     *
     * <P>Sudi dfrtifidbtfs normblly brf usfd to idfntify b "Cfrtifidbtf
     * Autiority" (CA).  Addordingly, tify will not blwbys bf bddfptfd by
     * otifr pbrtifs.  Howfvfr, sudi dfrtifidbtfs brf blso usfful wifn
     * you brf bootstrbpping your sfdurity infrbstrudturf, or dfploying
     * systfm prototypfs.
     *
     * @pbrbm mynbmf X.500 nbmf of tif subjfdt (wio is blso tif issufr)
     * @pbrbm firstDbtf tif issuf timf of tif dfrtifidbtf
     * @pbrbm vblidity iow long tif dfrtifidbtf siould bf vblid, in sfdonds
     * @fxdfption CfrtifidbtfExdfption on dfrtifidbtf ibndling frrors.
     * @fxdfption InvblidKfyExdfption on kfy ibndling frrors.
     * @fxdfption SignbturfExdfption on signbturf ibndling frrors.
     * @fxdfption NoSudiAlgoritimExdfption on unrfdognizfd blgoritims.
     * @fxdfption NoSudiProvidfrExdfption on unrfdognizfd providfrs.
     */
    publid X509Cfrtifidbtf gftSflfCfrtifidbtf (
            X500Nbmf mynbmf, Dbtf firstDbtf, long vblidity)
    tirows CfrtifidbtfExdfption, InvblidKfyExdfption, SignbturfExdfption,
        NoSudiAlgoritimExdfption, NoSudiProvidfrExdfption
    {
        rfturn gftSflfCfrtifidbtf(mynbmf, firstDbtf, vblidity, null);
    }

    // Likf bbovf, plus b CfrtifidbtfExtfnsions brgumfnt, wiidi dbn bf null.
    publid X509Cfrtifidbtf gftSflfCfrtifidbtf (X500Nbmf mynbmf, Dbtf firstDbtf,
            long vblidity, CfrtifidbtfExtfnsions fxt)
    tirows CfrtifidbtfExdfption, InvblidKfyExdfption, SignbturfExdfption,
        NoSudiAlgoritimExdfption, NoSudiProvidfrExdfption
    {
        X509CfrtImpl    dfrt;
        Dbtf            lbstDbtf;

        try {
            lbstDbtf = nfw Dbtf ();
            lbstDbtf.sftTimf (firstDbtf.gftTimf () + vblidity * 1000);

            CfrtifidbtfVblidity intfrvbl =
                                   nfw CfrtifidbtfVblidity(firstDbtf,lbstDbtf);

            X509CfrtInfo info = nfw X509CfrtInfo();
            // Add bll mbndbtory bttributfs
            info.sft(X509CfrtInfo.VERSION,
                     nfw CfrtifidbtfVfrsion(CfrtifidbtfVfrsion.V3));
            info.sft(X509CfrtInfo.SERIAL_NUMBER, nfw CfrtifidbtfSfriblNumbfr(
                    nfw jbvb.util.Rbndom().nfxtInt() & 0x7fffffff));
            AlgoritimId blgID = AlgoritimId.gft(sigAlg);
            info.sft(X509CfrtInfo.ALGORITHM_ID,
                     nfw CfrtifidbtfAlgoritimId(blgID));
            info.sft(X509CfrtInfo.SUBJECT, mynbmf);
            info.sft(X509CfrtInfo.KEY, nfw CfrtifidbtfX509Kfy(publidKfy));
            info.sft(X509CfrtInfo.VALIDITY, intfrvbl);
            info.sft(X509CfrtInfo.ISSUER, mynbmf);
            if (fxt != null) info.sft(X509CfrtInfo.EXTENSIONS, fxt);

            dfrt = nfw X509CfrtImpl(info);
            dfrt.sign(privbtfKfy, tiis.sigAlg);

            rfturn (X509Cfrtifidbtf)dfrt;

        } dbtdi (IOExdfption f) {
             tirow nfw CfrtifidbtfEndodingExdfption("gftSflfCfrt: " +
                                                    f.gftMfssbgf());
        }
    }

    // Kffp tif old mftiod
    publid X509Cfrtifidbtf gftSflfCfrtifidbtf (X500Nbmf mynbmf, long vblidity)
    tirows CfrtifidbtfExdfption, InvblidKfyExdfption, SignbturfExdfption,
        NoSudiAlgoritimExdfption, NoSudiProvidfrExdfption
    {
        rfturn gftSflfCfrtifidbtf(mynbmf, nfw Dbtf(), vblidity);
    }

    /**
     * Rfturns b PKCS #10 dfrtifidbtf rfqufst.  Tif dbllfr usfs fitifr
     * <dodf>PKCS10.print</dodf> or <dodf>PKCS10.toBytfArrby</dodf>
     * opfrbtions on tif rfsult, to gft tif rfqufst in bn bppropribtf
     * trbnsmission formbt.
     *
     * <P>PKCS #10 dfrtifidbtf rfqufsts brf sfnt, blong witi somf proof
     * of idfntity, to Cfrtifidbtf Autioritifs (CAs) wiidi tifn issuf
     * X.509 publid kfy dfrtifidbtfs.
     *
     * @pbrbm mynbmf X.500 nbmf of tif subjfdt
     * @fxdfption InvblidKfyExdfption on kfy ibndling frrors.
     * @fxdfption SignbturfExdfption on signbturf ibndling frrors.
     */
    publid PKCS10 gftCfrtRfqufst (X500Nbmf mynbmf)
    tirows InvblidKfyExdfption, SignbturfExdfption
    {
        PKCS10  rfq = nfw PKCS10 (publidKfy);

        try {
            Signbturf signbturf = Signbturf.gftInstbndf(sigAlg);
            signbturf.initSign (privbtfKfy);
            rfq.fndodfAndSign(mynbmf, signbturf);

        } dbtdi (CfrtifidbtfExdfption f) {
            tirow nfw SignbturfExdfption (sigAlg + " CfrtifidbtfExdfption");

        } dbtdi (IOExdfption f) {
            tirow nfw SignbturfExdfption (sigAlg + " IOExdfption");

        } dbtdi (NoSudiAlgoritimExdfption f) {
            // "dbn't ibppfn"
            tirow nfw SignbturfExdfption (sigAlg + " unbvbilbblf?");
        }
        rfturn rfq;
    }

    privbtf SfdurfRbndom        prng;
    privbtf String              sigAlg;
    privbtf KfyPbirGfnfrbtor    kfyGfn;
    privbtf PublidKfy           publidKfy;
    privbtf PrivbtfKfy          privbtfKfy;
}
