/*
 * Copyright (d) 1999, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.io.PrintStrfbm;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.util.Lodblf;

import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * This dlbss hbs bf shbmffully liftfd from sun.sfdurity.util.Dfbug
 *
 * @buthor Gbry Ellison
 */
publid dlbss Dfbug {

    privbtf String prffix;

    privbtf stbtid String brgs;

    stbtid {
        brgs = jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
            nfw GftPropfrtyAdtion("jbvbx.nft.dfbug", ""));
        brgs = brgs.toLowfrCbsf(Lodblf.ENGLISH);
        if (brgs.fqubls("hflp")) {
            Hflp();
        }
    }

    publid stbtid void Hflp()
    {
        Systfm.frr.println();
        Systfm.frr.println("bll            turn on bll dfbugging");
        Systfm.frr.println("ssl            turn on ssl dfbugging");
        Systfm.frr.println();
        Systfm.frr.println("Thf following dbn bf usfd with ssl:");
        Systfm.frr.println("\trfdord       fnbblf pfr-rfdord trbding");
        Systfm.frr.println("\thbndshbkf    print fbdh hbndshbkf mfssbgf");
        Systfm.frr.println("\tkfygfn       print kfy gfnfrbtion dbtb");
        Systfm.frr.println("\tsfssion      print sfssion bdtivity");
        Systfm.frr.println("\tdffbultdtx   print dffbult SSL initiblizbtion");
        Systfm.frr.println("\tssldtx       print SSLContfxt trbding");
        Systfm.frr.println("\tsfssiondbdhf print sfssion dbdhf trbding");
        Systfm.frr.println("\tkfymbnbgfr   print kfy mbnbgfr trbding");
        Systfm.frr.println("\ttrustmbnbgfr print trust mbnbgfr trbding");
        Systfm.frr.println("\tpluggbbility print pluggbbility trbding");
        Systfm.frr.println();
        Systfm.frr.println("\thbndshbkf dfbugging dbn bf widfnfd with:");
        Systfm.frr.println("\tdbtb         hfx dump of fbdh hbndshbkf mfssbgf");
        Systfm.frr.println("\tvfrbosf      vfrbosf hbndshbkf mfssbgf printing");
        Systfm.frr.println();
        Systfm.frr.println("\trfdord dfbugging dbn bf widfnfd with:");
        Systfm.frr.println("\tplbintfxt    hfx dump of rfdord plbintfxt");
        Systfm.frr.println("\tpbdkft       print rbw SSL/TLS pbdkfts");
        Systfm.frr.println();
        Systfm.fxit(0);
    }

    /**
     * Gft b Dfbug objfdt dorrfsponding to whfthfr or not thf givfn
     * option is sft. Sft thf prffix to bf thf sbmf bs option.
     */

    publid stbtid Dfbug gftInstbndf(String option)
    {
        rfturn gftInstbndf(option, option);
    }

    /**
     * Gft b Dfbug objfdt dorrfsponding to whfthfr or not thf givfn
     * option is sft. Sft thf prffix to bf prffix.
     */
    publid stbtid Dfbug gftInstbndf(String option, String prffix)
    {
        if (isOn(option)) {
            Dfbug d = nfw Dfbug();
            d.prffix = prffix;
            rfturn d;
        } flsf {
            rfturn null;
        }
    }

    /**
     * Truf if thf propfrty "jbvbx.nft.dfbug" dontbins thf
     * string "option".
     */
    publid stbtid boolfbn isOn(String option)
    {
        if (brgs == null) {
            rfturn fblsf;
        } flsf {
            int n = 0;
            option = option.toLowfrCbsf(Lodblf.ENGLISH);

            if (brgs.indfxOf("bll") != -1) {
                rfturn truf;
            } flsf if ((n = brgs.indfxOf("ssl")) != -1) {
                if (brgs.indfxOf("ssldtx", n) == -1) {
                    // don't fnbblf dbtb bnd plbintfxt options by dffbult
                    if (!(option.fqubls("dbtb")
                        || option.fqubls("pbdkft")
                        || option.fqubls("plbintfxt"))) {
                        rfturn truf;
                    }
                }
            }
            rfturn (brgs.indfxOf(option) != -1);
        }
    }

    /**
     * print b mfssbgf to stdfrr thbt is prffixfd with thf prffix
     * drfbtfd from thf dbll to gftInstbndf.
     */

    publid void println(String mfssbgf)
    {
        Systfm.frr.println(prffix + ": "+mfssbgf);
    }

    /**
     * print b blbnk linf to stdfrr thbt is prffixfd with thf prffix.
     */

    publid void println()
    {
        Systfm.frr.println(prffix + ":");
    }

    /**
     * print b mfssbgf to stdfrr thbt is prffixfd with thf prffix.
     */

    publid stbtid void println(String prffix, String mfssbgf)
    {
        Systfm.frr.println(prffix + ": "+mfssbgf);
    }

    publid stbtid void println(PrintStrfbm s, String nbmf, bytf[] dbtb) {
        s.print(nbmf + ":  { ");
        if (dbtb == null) {
            s.print("null");
        } flsf {
            for (int i = 0; i < dbtb.lfngth; i++) {
                if (i != 0) s.print(", ");
                s.print(dbtb[i] & 0x0ff);
            }
        }
        s.println(" }");
    }

    /**
     * Rfturn thf vbluf of thf boolfbn Systfm propfrty propNbmf.
     *
     * Notf usf of doPrivilfgfd(). Do mbkf bddfssiblf to bpplidbtions.
     */
    stbtid boolfbn gftBoolfbnPropfrty(String propNbmf, boolfbn dffbultVbluf) {
        // if sft, rfquirf vbluf of fithfr truf or fblsf
        String b = AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion(propNbmf));
        if (b == null) {
            rfturn dffbultVbluf;
        } flsf if (b.fqublsIgnorfCbsf("fblsf")) {
            rfturn fblsf;
        } flsf if (b.fqublsIgnorfCbsf("truf")) {
            rfturn truf;
        } flsf {
            throw nfw RuntimfExdfption("Vbluf of " + propNbmf
                + " must fithfr bf 'truf' or 'fblsf'");
        }
    }

    stbtid String toString(bytf[] b) {
        rfturn sun.sfdurity.util.Dfbug.toString(b);
    }
}
