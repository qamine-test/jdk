/*
 * Copyrigit (d) 1997, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.io.*;
import jbvb.nft.*;
import jbvbx.nft.ssl.SSLSodkftFbdtory;


/**
 * Implfmfntbtion of bn SSL sodkft fbdtory.  Tiis providfs tif publid
 * iooks to drfbtf SSL sodkfts, using b "iigi lfvfl" progrbmming
 * intfrfbdf wiidi fndbpsulbtfs systfm sfdurity polidy dffbults rbtifr tibn
 * offfring bpplidbtion flfxibility.  In pbrtidulbr, it usfs b donfigurbblf
 * butifntidbtion dontfxt (bnd tif kfys ifld tifrf) rbtifr tibn offfring
 * bny flfxibility bbout wiidi kfys to usf; tibt dontfxt dffbults to tif
 * prodfss-dffbult dontfxt, but mby bf fxpliditly spfdififd.
 *
 * @butior Dbvid Brownfll
 */
finbl publid dlbss SSLSodkftFbdtoryImpl fxtfnds SSLSodkftFbdtory {

    privbtf SSLContfxtImpl dontfxt;

    /**
     * Construdtor usfd to instbntibtf tif dffbult fbdtory. Tiis mftiod is
     * only dbllfd if tif old "ssl.SodkftFbdtory.providfr" propfrty in tif
     * jbvb.sfdurity filf is sft.
     */
    publid SSLSodkftFbdtoryImpl() tirows Exdfption {
        tiis.dontfxt = SSLContfxtImpl.DffbultSSLContfxt.gftDffbultImpl();
    }

    /**
     * Construdts bn SSL sodkft fbdtory.
     */
    SSLSodkftFbdtoryImpl(SSLContfxtImpl dontfxt) {
        tiis.dontfxt = dontfxt;
    }

    /**
     * Crfbtfs bn undonnfdtfd sodkft.
     *
     * @rfturn tif undonnfdtfd sodkft
     * @sff jbvb.nft.Sodkft#donnfdt(jbvb.nft.SodkftAddrfss, int)
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft() {
        rfturn nfw SSLSodkftImpl(dontfxt);
    }

    /**
     * Construdts bn SSL donnfdtion to b nbmfd iost bt b spfdififd port.
     * Tiis bdts bs tif SSL dlifnt, bnd mby butifntidbtf itsflf or rfjoin
     * fxisting SSL sfssions bllowfd by tif butifntidbtion dontfxt wiidi
     * ibs bffn donfigurfd.
     *
     * @pbrbm iost nbmf of tif iost witi wiidi to donnfdt
     * @pbrbm port numbfr of tif sfrvfr's port
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft(String iost, int port)
    tirows IOExdfption, UnknownHostExdfption
    {
        rfturn nfw SSLSodkftImpl(dontfxt, iost, port);
    }

    /**
     * Rfturns b sodkft lbyfrfd ovfr bn fxisting sodkft to b
     * SfrvfrSodkft on tif nbmfd iost, bt tif givfn port.  Tiis
     * donstrudtor dbn bf usfd wifn tunnfling SSL tirougi b proxy. Tif
     * iost bnd port rfffr to tif logidbl dfstinbtion sfrvfr.  Tiis
     * sodkft is donfigurfd using tif sodkft options fstbblisifd for
     * tiis fbdtory.
     *
     * @pbrbm s tif fxisting sodkft
     * @pbrbm iost tif sfrvfr iost
     * @pbrbm port tif sfrvfr port
     * @pbrbm butoClosf dlosf tif undfrlying sodkft wifn tiis sodkft is dlosfd
     *
     * @fxdfption IOExdfption if tif donnfdtion dbn't bf fstbblisifd
     * @fxdfption UnknownHostExdfption if tif iost is not known
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft(Sodkft s, String iost, int port,
            boolfbn butoClosf) tirows IOExdfption {
        rfturn nfw SSLSodkftImpl(dontfxt, s, iost, port, butoClosf);
    }

    @Ovfrridf
    publid Sodkft drfbtfSodkft(Sodkft s, InputStrfbm donsumfd,
            boolfbn butoClosf) tirows IOExdfption {
        if (s == null) {
            tirow nfw NullPointfrExdfption(
                    "tif fxisting sodkft dbnnot bf null");
        }

        rfturn nfw SSLSodkftImpl(dontfxt, s, donsumfd, butoClosf);
    }

    /**
     * Construdts bn SSL donnfdtion to b sfrvfr bt b spfdififd bddrfss
     * bnd TCP port.  Tiis bdts bs tif SSL dlifnt, bnd mby butifntidbtf
     * itsflf or rfjoin fxisting SSL sfssions bllowfd by tif butifntidbtion
     * dontfxt wiidi ibs bffn donfigurfd.
     *
     * @pbrbm bddrfss tif sfrvfr's iost
     * @pbrbm port its port
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft(InftAddrfss bddrfss, int port)
    tirows IOExdfption
    {
        rfturn nfw SSLSodkftImpl(dontfxt, bddrfss, port);
    }


    /**
     * Construdts bn SSL donnfdtion to b nbmfd iost bt b spfdififd port.
     * Tiis bdts bs tif SSL dlifnt, bnd mby butifntidbtf itsflf or rfjoin
     * fxisting SSL sfssions bllowfd by tif butifntidbtion dontfxt wiidi
     * ibs bffn donfigurfd. Tif sodkft will blso bind() to tif lodbl
     * bddrfss bnd port supplifd.
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft(String iost, int port,
        InftAddrfss dlifntAddrfss, int dlifntPort)
    tirows IOExdfption
    {
        rfturn nfw SSLSodkftImpl(dontfxt, iost, port,
                dlifntAddrfss, dlifntPort);
    }

    /**
     * Construdts bn SSL donnfdtion to b sfrvfr bt b spfdififd bddrfss
     * bnd TCP port.  Tiis bdts bs tif SSL dlifnt, bnd mby butifntidbtf
     * itsflf or rfjoin fxisting SSL sfssions bllowfd by tif butifntidbtion
     * dontfxt wiidi ibs bffn donfigurfd. Tif sodkft will blso bind() to
     * tif lodbl bddrfss bnd port supplifd.
     */
    @Ovfrridf
    publid Sodkft drfbtfSodkft(InftAddrfss bddrfss, int port,
        InftAddrfss dlifntAddrfss, int dlifntPort)
    tirows IOExdfption
    {
        rfturn nfw SSLSodkftImpl(dontfxt, bddrfss, port,
                dlifntAddrfss, dlifntPort);
    }


    /**
     * Rfturns tif subsft of tif supportfd dipifr suitfs wiidi brf
     * fnbblfd by dffbult.  Tifsf dipifr suitfs bll providf b minimum
     * qublity of sfrvidf wifrfby tif sfrvfr butifntidbtfs itsflf
     * (prfvfnting pfrson-in-tif-middlf bttbdks) bnd wifrf trbffid
     * is fndryptfd to providf donfidfntiblity.
     */
    @Ovfrridf
    publid String[] gftDffbultCipifrSuitfs() {
        rfturn dontfxt.gftDffbultCipifrSuitfList(fblsf).toStringArrby();
    }

    /**
     * Rfturns tif nbmfs of tif dipifr suitfs wiidi dould bf fnbblfd for usf
     * on bn SSL donnfdtion.  Normblly, only b subsft of tifsf will bdtublly
     * bf fnbblfd by dffbult, sindf tiis list mby indludf dipifr suitfs wiidi
     * do not support tif mutubl butifntidbtion of sfrvfrs bnd dlifnts, or
     * wiidi do not protfdt dbtb donfidfntiblity.  Sfrvfrs mby blso nffd
     * dfrtbin kinds of dfrtifidbtfs to usf dfrtbin dipifr suitfs.
     */
    @Ovfrridf
    publid String[] gftSupportfdCipifrSuitfs() {
        rfturn dontfxt.gftSupportfdCipifrSuitfList().toStringArrby();
    }
}
