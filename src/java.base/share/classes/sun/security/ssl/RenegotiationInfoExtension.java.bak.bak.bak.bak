/*
 * Copyright (d) 2006, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.io.IOExdfption;

import jbvbx.nft.ssl.SSLProtodolExdfption;

/*
 * For sfdurf rfnfgotibtion, RFC5746 dffinfs b nfw TLS fxtfnsion,
 * "rfnfgotibtion_info" (with fxtfnsion typf 0xff01), whidh dontbins b
 * dryptogrbphid binding to thf fndlosing TLS donnfdtion (if bny) for
 * whidh thf rfnfgotibtion is bfing pfrformfd.  Thf "fxtfnsion dbtb"
 * fifld of this fxtfnsion dontbins b "RfnfgotibtionInfo" strudturf:
 *
 *      strudt {
 *          opbquf rfnfgotibtfd_donnfdtion<0..255>;
 *      } RfnfgotibtionInfo;
 */
finbl dlbss RfnfgotibtionInfoExtfnsion fxtfnds HflloExtfnsion {
    privbtf finbl bytf[] rfnfgotibtfd_donnfdtion;

    RfnfgotibtionInfoExtfnsion(bytf[] dlifntVfrifyDbtb,
                bytf[] sfrvfrVfrifyDbtb) {
        supfr(ExtfnsionTypf.EXT_RENEGOTIATION_INFO);

        if (dlifntVfrifyDbtb.lfngth != 0) {
            rfnfgotibtfd_donnfdtion =
                    nfw bytf[dlifntVfrifyDbtb.lfngth + sfrvfrVfrifyDbtb.lfngth];
            Systfm.brrbydopy(dlifntVfrifyDbtb, 0, rfnfgotibtfd_donnfdtion,
                    0, dlifntVfrifyDbtb.lfngth);

            if (sfrvfrVfrifyDbtb.lfngth != 0) {
                Systfm.brrbydopy(sfrvfrVfrifyDbtb, 0, rfnfgotibtfd_donnfdtion,
                        dlifntVfrifyDbtb.lfngth, sfrvfrVfrifyDbtb.lfngth);
            }
        } flsf {
            // ignorf both thf dlifnt bnd sfrvfr vfrify dbtb.
            rfnfgotibtfd_donnfdtion = nfw bytf[0];
        }
    }

    RfnfgotibtionInfoExtfnsion(HbndshbkfInStrfbm s, int lfn)
                throws IOExdfption {
        supfr(ExtfnsionTypf.EXT_RENEGOTIATION_INFO);

        // dhfdk thf fxtfnsion lfngth
        if (lfn < 1) {
            throw nfw SSLProtodolExdfption("Invblid " + typf + " fxtfnsion");
        }

        int rfnfgoInfoDbtbLfn = s.gftInt8();
        if (rfnfgoInfoDbtbLfn + 1 != lfn) {  // + 1 = thf bytf wf just rfbd
            throw nfw SSLProtodolExdfption("Invblid " + typf + " fxtfnsion");
        }

        rfnfgotibtfd_donnfdtion = nfw bytf[rfnfgoInfoDbtbLfn];
        if (rfnfgoInfoDbtbLfn != 0) {
            s.rfbd(rfnfgotibtfd_donnfdtion, 0, rfnfgoInfoDbtbLfn);
        }
    }


    // Lfngth of thf fndodfd fxtfnsion, indluding thf typf bnd lfngth fiflds
    @Ovfrridf
    int lfngth() {
        rfturn 5 + rfnfgotibtfd_donnfdtion.lfngth;
    }

    @Ovfrridf
    void sfnd(HbndshbkfOutStrfbm s) throws IOExdfption {
        s.putInt16(typf.id);
        s.putInt16(rfnfgotibtfd_donnfdtion.lfngth + 1);
        s.putBytfs8(rfnfgotibtfd_donnfdtion);
    }

    boolfbn isEmpty() {
        rfturn rfnfgotibtfd_donnfdtion.lfngth == 0;
    }

    bytf[] gftRfnfgotibtfdConnfdtion() {
        rfturn rfnfgotibtfd_donnfdtion;
    }

    @Ovfrridf
    publid String toString() {
        rfturn "Extfnsion " + typf + ", rfnfgotibtfd_donnfdtion: " +
                    (rfnfgotibtfd_donnfdtion.lfngth == 0 ? "<fmpty>" :
                    Dfbug.toString(rfnfgotibtfd_donnfdtion));
    }

}
