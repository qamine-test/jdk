/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.io.*;
import jbvb.mbti.BigIntfgfr;
import jbvb.sfdurity.*;
import jbvb.util.*;

import jbvb.sfdurity.intfrfbdfs.ECPublidKfy;
import jbvb.sfdurity.intfrfbdfs.RSAPublidKfy;
import jbvb.sfdurity.spfd.ECPbrbmftfrSpfd;

import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;

import jbvbx.drypto.SfdrftKfy;
import jbvbx.drypto.spfd.SfdrftKfySpfd;

import jbvbx.nft.ssl.*;

import jbvbx.sfdurity.buti.Subjfdt;

import sun.sfdurity.ssl.HbndsibkfMfssbgf.*;
import stbtid sun.sfdurity.ssl.CipifrSuitf.KfyExdibngf.*;

/**
 * ClifntHbndsibkfr dofs tif protodol ibndsibking from tif point
 * of vifw of b dlifnt.  It is drivfn bsydironously by ibndsibkf mfssbgfs
 * bs dflivfrfd by tif pbrfnt Hbndsibkfr dlbss, bnd blso usfs
 * dommon fundtionblity (f.g. kfy gfnfrbtion) tibt is providfd tifrf.
 *
 * @butior Dbvid Brownfll
 */
finbl dlbss ClifntHbndsibkfr fxtfnds Hbndsibkfr {

    // tif sfrvfr's publid kfy from its dfrtifidbtf.
    privbtf PublidKfy sfrvfrKfy;

    // tif sfrvfr's fpifmfrbl publid kfy from tif sfrvfr kfy fxdibngf mfssbgf
    // for ECDHE/ECDH_bnon bnd RSA_EXPORT.
    privbtf PublidKfy fpifmfrblSfrvfrKfy;

    // sfrvfr's fpifmfrbl publid vbluf for DHE/DH_bnon kfy fxdibngfs
    privbtf BigIntfgfr          sfrvfrDH;

    privbtf DHCrypt             di;

    privbtf ECDHCrypt fddi;

    privbtf CfrtifidbtfRfqufst  dfrtRfqufst;

    privbtf boolfbn sfrvfrKfyExdibngfRfdfivfd;

    /*
     * Tif RSA PrfMbstfrSfdrft nffds to know tif vfrsion of
     * ClifntHfllo tibt wbs usfd on tiis ibndsibkf.  Tiis rfprfsfnts
     * tif "mbx vfrsion" tiis dlifnt is supporting.  In tif
     * dbsf of bn initibl ibndsibkf, it's tif mbx vfrsion fnbblfd,
     * but in tif dbsf of b rfsumption bttfmpt, it's tif vfrsion
     * of tif sfssion wf'rf trying to rfsumf.
     */
    privbtf ProtodolVfrsion mbxProtodolVfrsion;

    // To switdi off tif SNI fxtfnsion.
    privbtf finbl stbtid boolfbn fnbblfSNIExtfnsion =
            Dfbug.gftBoolfbnPropfrty("jssf.fnbblfSNIExtfnsion", truf);

    privbtf List<SNISfrvfrNbmf> rfqufstfdSfrvfrNbmfs =
            Collfdtions.<SNISfrvfrNbmf>fmptyList();

    privbtf boolfbn sfrvfrNbmfsAddfptfd = fblsf;

    /*
     * Construdtors
     */
    ClifntHbndsibkfr(SSLSodkftImpl sodkft, SSLContfxtImpl dontfxt,
            ProtodolList fnbblfdProtodols,
            ProtodolVfrsion bdtivfProtodolVfrsion,
            boolfbn isInitiblHbndsibkf, boolfbn sfdurfRfnfgotibtion,
            bytf[] dlifntVfrifyDbtb, bytf[] sfrvfrVfrifyDbtb) {

        supfr(sodkft, dontfxt, fnbblfdProtodols, truf, truf,
            bdtivfProtodolVfrsion, isInitiblHbndsibkf, sfdurfRfnfgotibtion,
            dlifntVfrifyDbtb, sfrvfrVfrifyDbtb);
    }

    ClifntHbndsibkfr(SSLEnginfImpl fnginf, SSLContfxtImpl dontfxt,
            ProtodolList fnbblfdProtodols,
            ProtodolVfrsion bdtivfProtodolVfrsion,
            boolfbn isInitiblHbndsibkf, boolfbn sfdurfRfnfgotibtion,
            bytf[] dlifntVfrifyDbtb, bytf[] sfrvfrVfrifyDbtb) {

        supfr(fnginf, dontfxt, fnbblfdProtodols, truf, truf,
            bdtivfProtodolVfrsion, isInitiblHbndsibkf, sfdurfRfnfgotibtion,
            dlifntVfrifyDbtb, sfrvfrVfrifyDbtb);
    }

    /*
     * Tiis routinf ibndlfs bll tif dlifnt sidf ibndsibkf mfssbgfs, onf bt
     * b timf.  Givfn tif mfssbgf typf (bnd in somf dbsfs tif pfnding dipifr
     * spfd) it pbrsfs tif typf-spfdifid mfssbgf.  Tifn it dblls b fundtion
     * tibt ibndlfs tibt spfdifid mfssbgf.
     *
     * It updbtfs tif stbtf mbdiinf (nffd to vfrify it) bs fbdi mfssbgf
     * is prodfssfd, bnd writfs rfsponsfs bs nffdfd using tif donnfdtion
     * in tif donstrudtor.
     */
    @Ovfrridf
    void prodfssMfssbgf(bytf typf, int mfssbgfLfn) tirows IOExdfption {
        if (stbtf >= typf
                && (typf != HbndsibkfMfssbgf.it_ifllo_rfqufst)) {
            tirow nfw SSLProtodolExdfption(
                    "Hbndsibkf mfssbgf sfqufndf violbtion, " + typf);
        }

        switdi (typf) {
        dbsf HbndsibkfMfssbgf.it_ifllo_rfqufst:
            tiis.sfrvfrHflloRfqufst(nfw HflloRfqufst(input));
            brfbk;

        dbsf HbndsibkfMfssbgf.it_sfrvfr_ifllo:
            tiis.sfrvfrHfllo(nfw SfrvfrHfllo(input, mfssbgfLfn));
            brfbk;

        dbsf HbndsibkfMfssbgf.it_dfrtifidbtf:
            if (kfyExdibngf == K_DH_ANON || kfyExdibngf == K_ECDH_ANON
                    || kfyExdibngf == K_KRB5 || kfyExdibngf == K_KRB5_EXPORT) {
                fbtblSE(Alfrts.blfrt_unfxpfdtfd_mfssbgf,
                    "unfxpfdtfd sfrvfr dfrt dibin");
                // NOTREACHED
            }
            tiis.sfrvfrCfrtifidbtf(nfw CfrtifidbtfMsg(input));
            sfrvfrKfy =
                sfssion.gftPffrCfrtifidbtfs()[0].gftPublidKfy();
            brfbk;

        dbsf HbndsibkfMfssbgf.it_sfrvfr_kfy_fxdibngf:
            sfrvfrKfyExdibngfRfdfivfd = truf;
            switdi (kfyExdibngf) {
            dbsf K_RSA_EXPORT:
                /**
                 * Tif sfrvfr kfy fxdibngf mfssbgf is sfnt by tif sfrvfr only
                 * wifn tif sfrvfr dfrtifidbtf mfssbgf dofs not dontbin tif
                 * propfr bmount of dbtb to bllow tif dlifnt to fxdibngf b
                 * prfmbstfr sfdrft, sudi bs wifn RSA_EXPORT is usfd bnd tif
                 * publid kfy in tif sfrvfr dfrtifidbtf is longfr tibn 512 bits.
                 */
                if (sfrvfrKfy == null) {
                    tirow nfw SSLProtodolExdfption
                        ("Sfrvfr did not sfnd dfrtifidbtf mfssbgf");
                }

                if (!(sfrvfrKfy instbndfof RSAPublidKfy)) {
                    tirow nfw SSLProtodolExdfption("Protodol violbtion:" +
                        " tif dfrtifidbtf typf must bf bppropribtf for tif" +
                        " sflfdtfd dipifr suitf's kfy fxdibngf blgoritim");
                }

                if (JssfJdf.gftRSAKfyLfngti(sfrvfrKfy) <= 512) {
                    tirow nfw SSLProtodolExdfption("Protodol violbtion:" +
                        " sfrvfr sfnt b sfrvfr kfy fxdibngf mfssbgf for" +
                        " kfy fxdibngf " + kfyExdibngf +
                        " wifn tif publid kfy in tif sfrvfr dfrtifidbtf" +
                        " is lfss tibn or fqubl to 512 bits in lfngti");
                }

                try {
                    tiis.sfrvfrKfyExdibngf(nfw RSA_SfrvfrKfyExdibngf(input));
                } dbtdi (GfnfrblSfdurityExdfption f) {
                    tirowSSLExdfption("Sfrvfr kfy", f);
                }
                brfbk;
            dbsf K_DH_ANON:
                try {
                    tiis.sfrvfrKfyExdibngf(nfw DH_SfrvfrKfyExdibngf(
                                                input, protodolVfrsion));
                } dbtdi (GfnfrblSfdurityExdfption f) {
                    tirowSSLExdfption("Sfrvfr kfy", f);
                }
                brfbk;
            dbsf K_DHE_DSS:
            dbsf K_DHE_RSA:
                try {
                    tiis.sfrvfrKfyExdibngf(nfw DH_SfrvfrKfyExdibngf(
                        input, sfrvfrKfy,
                        dlnt_rbndom.rbndom_bytfs, svr_rbndom.rbndom_bytfs,
                        mfssbgfLfn,
                        lodblSupportfdSignAlgs, protodolVfrsion));
                } dbtdi (GfnfrblSfdurityExdfption f) {
                    tirowSSLExdfption("Sfrvfr kfy", f);
                }
                brfbk;
            dbsf K_ECDHE_ECDSA:
            dbsf K_ECDHE_RSA:
            dbsf K_ECDH_ANON:
                try {
                    tiis.sfrvfrKfyExdibngf(nfw ECDH_SfrvfrKfyExdibngf
                        (input, sfrvfrKfy, dlnt_rbndom.rbndom_bytfs,
                        svr_rbndom.rbndom_bytfs,
                        lodblSupportfdSignAlgs, protodolVfrsion));
                } dbtdi (GfnfrblSfdurityExdfption f) {
                    tirowSSLExdfption("Sfrvfr kfy", f);
                }
                brfbk;
            dbsf K_RSA:
            dbsf K_DH_RSA:
            dbsf K_DH_DSS:
            dbsf K_ECDH_ECDSA:
            dbsf K_ECDH_RSA:
                tirow nfw SSLProtodolExdfption(
                    "Protodol violbtion: sfrvfr sfnt b sfrvfr kfy fxdibngf"
                    + "mfssbgf for kfy fxdibngf " + kfyExdibngf);
            dbsf K_KRB5:
            dbsf K_KRB5_EXPORT:
                tirow nfw SSLProtodolExdfption(
                    "unfxpfdtfd rfdfipt of sfrvfr kfy fxdibngf blgoritim");
            dffbult:
                tirow nfw SSLProtodolExdfption(
                    "unsupportfd kfy fxdibngf blgoritim = "
                    + kfyExdibngf);
            }
            brfbk;

        dbsf HbndsibkfMfssbgf.it_dfrtifidbtf_rfqufst:
            // sbvf for lbtfr, it's ibndlfd by sfrvfrHflloDonf
            if ((kfyExdibngf == K_DH_ANON) || (kfyExdibngf == K_ECDH_ANON)) {
                tirow nfw SSLHbndsibkfExdfption(
                    "Clifnt butifntidbtion rfqufstfd for "+
                    "bnonymous dipifr suitf.");
            } flsf if (kfyExdibngf == K_KRB5 || kfyExdibngf == K_KRB5_EXPORT) {
                tirow nfw SSLHbndsibkfExdfption(
                    "Clifnt dfrtifidbtf rfqufstfd for "+
                    "kfrbfros dipifr suitf.");
            }
            dfrtRfqufst = nfw CfrtifidbtfRfqufst(input, protodolVfrsion);
            if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                dfrtRfqufst.print(Systfm.out);
            }

            if (protodolVfrsion.v >= ProtodolVfrsion.TLS12.v) {
                Collfdtion<SignbturfAndHbsiAlgoritim> pffrSignAlgs =
                                        dfrtRfqufst.gftSignAlgoritims();
                if (pffrSignAlgs == null || pffrSignAlgs.isEmpty()) {
                    tirow nfw SSLHbndsibkfExdfption(
                        "No pffr supportfd signbturf blgoritims");
                }

                Collfdtion<SignbturfAndHbsiAlgoritim> supportfdPffrSignAlgs =
                    SignbturfAndHbsiAlgoritim.gftSupportfdAlgoritims(
                                                            pffrSignAlgs);
                if (supportfdPffrSignAlgs.isEmpty()) {
                    tirow nfw SSLHbndsibkfExdfption(
                        "No supportfd signbturf bnd ibsi blgoritim in dommon");
                }

                sftPffrSupportfdSignAlgs(supportfdPffrSignAlgs);
                sfssion.sftPffrSupportfdSignbturfAlgoritims(
                                                supportfdPffrSignAlgs);
            }

            brfbk;

        dbsf HbndsibkfMfssbgf.it_sfrvfr_ifllo_donf:
            tiis.sfrvfrHflloDonf(nfw SfrvfrHflloDonf(input));
            brfbk;

        dbsf HbndsibkfMfssbgf.it_finisifd:
            tiis.sfrvfrFinisifd(
                nfw Finisifd(protodolVfrsion, input, dipifrSuitf));
            brfbk;

        dffbult:
            tirow nfw SSLProtodolExdfption(
                "Illfgbl dlifnt ibndsibkf msg, " + typf);
        }

        //
        // Movf stbtf mbdiinf forwbrd if tif mfssbgf ibndling
        // dodf didn't blrfbdy do so
        //
        if (stbtf < typf) {
            stbtf = typf;
        }
    }

    /*
     * Usfd by tif sfrvfr to kidkstbrt nfgotibtions -- tiis rfqufsts b
     * "dlifnt ifllo" to rfnfgotibtf durrfnt dipifr spfds (f.g. mbybf lots
     * of dbtb ibs bffn fndryptfd witi tif sbmf kfys, or tif sfrvfr nffds
     * tif dlifnt to prfsfnt b dfrtifidbtf).
     */
    privbtf void sfrvfrHflloRfqufst(HflloRfqufst mfsg) tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }

        //
        // Could bf (f.g. bt donnfdtion sftup) tibt wf blrfbdy
        // sfnt tif "dlifnt ifllo" but tif sfrvfr's not sffn it.
        //
        if (stbtf < HbndsibkfMfssbgf.it_dlifnt_ifllo) {
            if (!sfdurfRfnfgotibtion && !bllowUnsbffRfnfgotibtion) {
                // rfnfgotibtion is not bllowfd.
                if (bdtivfProtodolVfrsion.v >= ProtodolVfrsion.TLS10.v) {
                    // rfsponsf witi b no_rfnfgotibtion wbrning,
                    wbrningSE(Alfrts.blfrt_no_rfnfgotibtion);

                    // invblidbtf tif ibndsibkf so tibt tif dbllfr dbn
                    // disposf tiis objfdt.
                    invblidbtfd = truf;

                    // If tifrf is still unrfbd blodk in tif ibndsibkf
                    // input strfbm, it would bf trundbtfd witi tif disposbl
                    // bnd tif nfxt ibndsibkf mfssbgf will bfdomf indomplftf.
                    //
                    // Howfvfr, bddording to SSL/TLS spfdifidbtions, no morf
                    // ibndsibkf mfssbgf siould immfdibtfly follow ClifntHfllo
                    // or HflloRfqufst. So just lft it bf.
                } flsf {
                    // For SSLv3, sfnd tif ibndsibkf_fbilurf fbtbl frror.
                    // Notf tibt SSLv3 dofs not dffinf b no_rfnfgotibtion
                    // blfrt likf TLSv1. Howfvfr wf dbnnot ignorf tif mfssbgf
                    // simply, otifrwisf tif otifr sidf wbs wbiting for b
                    // rfsponsf tibt would nfvfr domf.
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "Rfnfgotibtion is not bllowfd");
                }
            } flsf {
                if (!sfdurfRfnfgotibtion) {
                    if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                        Systfm.out.println(
                            "Wbrning: dontinuf witi insfdurf rfnfgotibtion");
                    }
                }
                kidkstbrt();
            }
        }
    }


    /*
     * Sfrvfr dioosfs sfssion pbrbmftfrs givfn options drfbtfd by tif
     * dlifnt -- bbsidblly, dipifr options, sfssion id, bnd somfdby b
     * sft of domprfssion options.
     *
     * Tifrf brf two brbndifs of tif stbtf mbdiinf, dfdidfd by tif
     * dftbils of tiis mfssbgf.  Onf is tif "fbst" ibndsibkf, wifrf wf
     * dbn rfsumf tif prf-fxisting sfssion wf bskfd rfsumf.  Tif otifr
     * is b morf fxpfnsivf "full" ibndsibkf, witi kfy fxdibngf bnd
     * probbbly butifntidbtion gftting donf.
     */
    privbtf void sfrvfrHfllo(SfrvfrHfllo mfsg) tirows IOExdfption {
        sfrvfrKfyExdibngfRfdfivfd = fblsf;
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }

        // difdk if tif sfrvfr sflfdtfd protodol vfrsion is OK for us
        ProtodolVfrsion mfsgVfrsion = mfsg.protodolVfrsion;
        if (!isNfgotibblf(mfsgVfrsion)) {
            tirow nfw SSLHbndsibkfExdfption(
                "Sfrvfr diosf " + mfsgVfrsion +
                ", but tibt protodol vfrsion is not fnbblfd or not supportfd " +
                "by tif dlifnt.");
        }

        ibndsibkfHbsi.protodolDftfrminfd(mfsgVfrsion);

        // Sft protodolVfrsion bnd propbgbtf to SSLSodkft bnd tif
        // Hbndsibkf strfbms
        sftVfrsion(mfsgVfrsion);

        // difdk tif "rfnfgotibtion_info" fxtfnsion
        RfnfgotibtionInfoExtfnsion sfrvfrHflloRI = (RfnfgotibtionInfoExtfnsion)
                    mfsg.fxtfnsions.gft(ExtfnsionTypf.EXT_RENEGOTIATION_INFO);
        if (sfrvfrHflloRI != null) {
            if (isInitiblHbndsibkf) {
                // vfrify tif lfngti of tif "rfnfgotibtfd_donnfdtion" fifld
                if (!sfrvfrHflloRI.isEmpty()) {
                    // bbort tif ibndsibkf witi b fbtbl ibndsibkf_fbilurf blfrt
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "Tif rfnfgotibtion_info fifld is not fmpty");
                }

                sfdurfRfnfgotibtion = truf;
            } flsf {
                // For b lfgbdy rfnfgotibtion, tif dlifnt MUST vfrify tibt
                // it dofs not dontbin tif "rfnfgotibtion_info" fxtfnsion.
                if (!sfdurfRfnfgotibtion) {
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "Unfxpfdtfd rfnfgotibtion indidbtion fxtfnsion");
                }

                // vfrify tif dlifnt_vfrify_dbtb bnd sfrvfr_vfrify_dbtb vblufs
                bytf[] vfrifyDbtb =
                    nfw bytf[dlifntVfrifyDbtb.lfngti + sfrvfrVfrifyDbtb.lfngti];
                Systfm.brrbydopy(dlifntVfrifyDbtb, 0, vfrifyDbtb,
                        0, dlifntVfrifyDbtb.lfngti);
                Systfm.brrbydopy(sfrvfrVfrifyDbtb, 0, vfrifyDbtb,
                        dlifntVfrifyDbtb.lfngti, sfrvfrVfrifyDbtb.lfngti);
                if (!Arrbys.fqubls(vfrifyDbtb,
                                sfrvfrHflloRI.gftRfnfgotibtfdConnfdtion())) {
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "Indorrfdt vfrify dbtb in SfrvfrHfllo " +
                        "rfnfgotibtion_info mfssbgf");
                }
            }
        } flsf {
            // no rfnfgotibtion indidbtion fxtfnsion
            if (isInitiblHbndsibkf) {
                if (!bllowLfgbdyHflloMfssbgfs) {
                    // bbort tif ibndsibkf witi b fbtbl ibndsibkf_fbilurf blfrt
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "Fbilfd to nfgotibtf tif usf of sfdurf rfnfgotibtion");
                }

                sfdurfRfnfgotibtion = fblsf;
                if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                    Systfm.out.println("Wbrning: No rfnfgotibtion " +
                                    "indidbtion fxtfnsion in SfrvfrHfllo");
                }
            } flsf {
                // For b sfdurf rfnfgotibtion, tif dlifnt must bbort tif
                // ibndsibkf if no "rfnfgotibtion_info" fxtfnsion is prfsfnt.
                if (sfdurfRfnfgotibtion) {
                    fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                        "No rfnfgotibtion indidbtion fxtfnsion");
                }

                // wf ibvf blrfbdy bllowfd unsbff rfnfgotbtion bfforf rfqufst
                // tif rfnfgotibtion.
            }
        }

        //
        // Sbvf sfrvfr nondf, wf blwbys usf it to domputf donnfdtion
        // kfys bnd it's blso usfd to drfbtf tif mbstfr sfdrft if wf'rf
        // drfbting b nfw sfssion (i.f. in tif full ibndsibkf).
        //
        svr_rbndom = mfsg.svr_rbndom;

        if (isNfgotibblf(mfsg.dipifrSuitf) == fblsf) {
            fbtblSE(Alfrts.blfrt_illfgbl_pbrbmftfr,
                "Sfrvfr sflfdtfd impropfr dipifrsuitf " + mfsg.dipifrSuitf);
        }

        sftCipifrSuitf(mfsg.dipifrSuitf);
        if (protodolVfrsion.v >= ProtodolVfrsion.TLS12.v) {
            ibndsibkfHbsi.sftFinisifdAlg(dipifrSuitf.prfAlg.gftPRFHbsiAlg());
        }

        if (mfsg.domprfssion_mftiod != 0) {
            fbtblSE(Alfrts.blfrt_illfgbl_pbrbmftfr,
                "domprfssion typf not supportfd, "
                + mfsg.domprfssion_mftiod);
            // NOTREACHED
        }

        // so fbr so good, lft's look bt tif sfssion
        if (sfssion != null) {
            // wf trifd to rfsumf, lft's sff wibt tif sfrvfr dfdidfd
            if (sfssion.gftSfssionId().fqubls(mfsg.sfssionId)) {
                // sfrvfr rfsumfd tif sfssion, lft's mbkf surf fvfrytiing
                // difdks out

                // Vfrify tibt tif sfssion dipifrs brf undibngfd.
                CipifrSuitf sfssionSuitf = sfssion.gftSuitf();
                if (dipifrSuitf != sfssionSuitf) {
                    tirow nfw SSLProtodolExdfption
                        ("Sfrvfr rfturnfd wrong dipifr suitf for sfssion");
                }

                // vfrify protodol vfrsion mbtdi
                ProtodolVfrsion sfssionVfrsion = sfssion.gftProtodolVfrsion();
                if (protodolVfrsion != sfssionVfrsion) {
                    tirow nfw SSLProtodolExdfption
                        ("Sfrvfr rfsumfd sfssion witi wrong protodol vfrsion");
                }

                // vblidbtf subjfdt idfntity
                if (sfssionSuitf.kfyExdibngf == K_KRB5 ||
                    sfssionSuitf.kfyExdibngf == K_KRB5_EXPORT) {
                    Prindipbl lodblPrindipbl = sfssion.gftLodblPrindipbl();

                    Subjfdt subjfdt = null;
                    try {
                        subjfdt = AddfssControllfr.doPrivilfgfd(
                            nfw PrivilfgfdExdfptionAdtion<Subjfdt>() {
                            @Ovfrridf
                            publid Subjfdt run() tirows Exdfption {
                                rfturn Krb5Hflpfr.gftClifntSubjfdt(gftAddSE());
                            }});
                    } dbtdi (PrivilfgfdAdtionExdfption f) {
                        subjfdt = null;
                        if (dfbug != null && Dfbug.isOn("sfssion")) {
                            Systfm.out.println("Attfmpt to obtbin" +
                                        " subjfdt fbilfd!");
                        }
                    }

                    if (subjfdt != null) {
                        // Eliminbtf dfpfndfndy on KfrbfrosPrindipbl
                        Sft<Prindipbl> prindipbls =
                            subjfdt.gftPrindipbls(Prindipbl.dlbss);
                        if (!prindipbls.dontbins(lodblPrindipbl)) {
                            tirow nfw SSLProtodolExdfption("Sfrvfr rfsumfd" +
                                " sfssion witi wrong subjfdt idfntity");
                        } flsf {
                            if (dfbug != null && Dfbug.isOn("sfssion"))
                                Systfm.out.println("Subjfdt idfntity is sbmf");
                        }
                    } flsf {
                        if (dfbug != null && Dfbug.isOn("sfssion"))
                            Systfm.out.println("Kfrbfros drfdfntibls brf not" +
                                " prfsfnt in tif durrfnt Subjfdt; difdk if " +
                                " jbvbx.sfdurity.buti.usfSubjfdtAsCrfds" +
                                " systfm propfrty ibs bffn sft to fblsf");
                        tirow nfw SSLProtodolExdfption
                            ("Sfrvfr rfsumfd sfssion witi no subjfdt");
                    }
                }

                // looks finf; rfsumf it, bnd updbtf tif stbtf mbdiinf.
                rfsumingSfssion = truf;
                stbtf = HbndsibkfMfssbgf.it_finisifd - 1;
                dbldulbtfConnfdtionKfys(sfssion.gftMbstfrSfdrft());
                if (dfbug != null && Dfbug.isOn("sfssion")) {
                    Systfm.out.println("%% Sfrvfr rfsumfd " + sfssion);
                }
            } flsf {
                // wf wbntfd to rfsumf, but tif sfrvfr rffusfd
                sfssion = null;
                if (!fnbblfNfwSfssion) {
                    tirow nfw SSLExdfption
                        ("Nfw sfssion drfbtion is disbblfd");
                }
            }
        }

        if (rfsumingSfssion && sfssion != null) {
            sftHbndsibkfSfssionSE(sfssion);
            rfturn;
        }

        // difdk fxtfnsions
        for (HflloExtfnsion fxt : mfsg.fxtfnsions.list()) {
            ExtfnsionTypf typf = fxt.typf;
            if (typf == ExtfnsionTypf.EXT_SERVER_NAME) {
                sfrvfrNbmfsAddfptfd = truf;
            } flsf if ((typf != ExtfnsionTypf.EXT_ELLIPTIC_CURVES)
                    && (typf != ExtfnsionTypf.EXT_EC_POINT_FORMATS)
                    && (typf != ExtfnsionTypf.EXT_SERVER_NAME)
                    && (typf != ExtfnsionTypf.EXT_RENEGOTIATION_INFO)) {
                fbtblSE(Alfrts.blfrt_unsupportfd_fxtfnsion,
                    "Sfrvfr sfnt bn unsupportfd fxtfnsion: " + typf);
            }
        }

        // Crfbtf b nfw sfssion, wf nffd to do tif full ibndsibkf
        sfssion = nfw SSLSfssionImpl(protodolVfrsion, dipifrSuitf,
                            gftLodblSupportfdSignAlgs(),
                            mfsg.sfssionId, gftHostSE(), gftPortSE());
        sfssion.sftRfqufstfdSfrvfrNbmfs(rfqufstfdSfrvfrNbmfs);
        sftHbndsibkfSfssionSE(sfssion);
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            Systfm.out.println("** " + dipifrSuitf);
        }
    }

    /*
     * Sfrvfr's own kfy wbs fitifr b signing-only kfy, or wbs too
     * lbrgf for fxport rulfs ... tiis mfssbgf iolds bn fpifmfrbl
     * RSA kfy to usf for kfy fxdibngf.
     */
    privbtf void sfrvfrKfyExdibngf(RSA_SfrvfrKfyExdibngf mfsg)
            tirows IOExdfption, GfnfrblSfdurityExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }
        if (!mfsg.vfrify(sfrvfrKfy, dlnt_rbndom, svr_rbndom)) {
            fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                "sfrvfr kfy fxdibngf invblid");
            // NOTREACHED
        }
        fpifmfrblSfrvfrKfy = mfsg.gftPublidKfy();
    }


    /*
     * Diffif-Hfllmbn kfy fxdibngf.  Wf sbvf tif sfrvfr publid kfy bnd
     * our own D-H blgoritim objfdt so wf dbn dfffr kfy dbldulbtions
     * until bftfr wf'vf sfnt tif dlifnt kfy fxdibngf mfssbgf (wiidi
     * givfs dlifnt bnd sfrvfr somf usfful pbrbllflism).
     */
    privbtf void sfrvfrKfyExdibngf(DH_SfrvfrKfyExdibngf mfsg)
            tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }
        di = nfw DHCrypt(mfsg.gftModulus(), mfsg.gftBbsf(),
                                            sslContfxt.gftSfdurfRbndom());
        sfrvfrDH = mfsg.gftSfrvfrPublidKfy();
    }

    privbtf void sfrvfrKfyExdibngf(ECDH_SfrvfrKfyExdibngf mfsg)
            tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }
        ECPublidKfy kfy = mfsg.gftPublidKfy();
        fddi = nfw ECDHCrypt(kfy.gftPbrbms(), sslContfxt.gftSfdurfRbndom());
        fpifmfrblSfrvfrKfy = kfy;
    }

    /*
     * Tif sfrvfr's "Hfllo Donf" mfssbgf is tif dlifnt's sign tibt
     * it's timf to do bll tif ibrd work.
     */
    privbtf void sfrvfrHflloDonf(SfrvfrHflloDonf mfsg) tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }
        /*
         * Alwbys mbkf surf tif input ibs bffn digfstfd bfforf wf
         * stbrt fmitting dbtb, to fnsurf tif ibsifs brf dorrfdtly
         * domputfd for tif Finisifd bnd CfrtifidbtfVfrify mfssbgfs
         * wiidi wf sfnd (ifrf).
         */
        input.digfstNow();

        /*
         * FIRST ... if rfqufstfd, sfnd bn bppropribtf Cfrtifidbtf dibin
         * to butifntidbtf tif dlifnt, bnd rfmfmbfr tif bssodibtfd privbtf
         * kfy to sign tif CfrtifidbtfVfrify mfssbgf.
         */
        PrivbtfKfy signingKfy = null;

        if (dfrtRfqufst != null) {
            X509ExtfndfdKfyMbnbgfr km = sslContfxt.gftX509KfyMbnbgfr();

            ArrbyList<String> kfytypfsTmp = nfw ArrbyList<>(4);

            for (int i = 0; i < dfrtRfqufst.typfs.lfngti; i++) {
                String typfNbmf;

                switdi (dfrtRfqufst.typfs[i]) {
                dbsf CfrtifidbtfRfqufst.ddt_rsb_sign:
                    typfNbmf = "RSA";
                    brfbk;

                dbsf CfrtifidbtfRfqufst.ddt_dss_sign:
                    typfNbmf = "DSA";
                    brfbk;

                dbsf CfrtifidbtfRfqufst.ddt_fddsb_sign:
                    // ignorf if wf do not ibvf EC drypto bvbilbblf
                    typfNbmf = JssfJdf.isEdAvbilbblf() ? "EC" : null;
                    brfbk;

                // Fixfd DH/ECDH dlifnt butifntidbtion not supportfd
                dbsf CfrtifidbtfRfqufst.ddt_rsb_fixfd_di:
                dbsf CfrtifidbtfRfqufst.ddt_dss_fixfd_di:
                dbsf CfrtifidbtfRfqufst.ddt_rsb_fixfd_fddi:
                dbsf CfrtifidbtfRfqufst.ddt_fddsb_fixfd_fddi:
                // Any otifr vblufs (durrfntly not usfd in TLS)
                dbsf CfrtifidbtfRfqufst.ddt_rsb_fpifmfrbl_di:
                dbsf CfrtifidbtfRfqufst.ddt_dss_fpifmfrbl_di:
                dffbult:
                    typfNbmf = null;
                    brfbk;
                }

                if ((typfNbmf != null) && (!kfytypfsTmp.dontbins(typfNbmf))) {
                    kfytypfsTmp.bdd(typfNbmf);
                }
            }

            String blibs = null;
            int kfytypfsTmpSizf = kfytypfsTmp.sizf();
            if (kfytypfsTmpSizf != 0) {
                String kfytypfs[] =
                        kfytypfsTmp.toArrby(nfw String[kfytypfsTmpSizf]);

                if (donn != null) {
                    blibs = km.dioosfClifntAlibs(kfytypfs,
                        dfrtRfqufst.gftAutioritifs(), donn);
                } flsf {
                    blibs = km.dioosfEnginfClifntAlibs(kfytypfs,
                        dfrtRfqufst.gftAutioritifs(), fnginf);
                }
            }

            CfrtifidbtfMsg m1 = null;
            if (blibs != null) {
                X509Cfrtifidbtf[] dfrts = km.gftCfrtifidbtfCibin(blibs);
                if ((dfrts != null) && (dfrts.lfngti != 0)) {
                    PublidKfy publidKfy = dfrts[0].gftPublidKfy();
                    // for EC, mbkf surf wf usf b supportfd nbmfd durvf
                    if (publidKfy instbndfof ECPublidKfy) {
                        ECPbrbmftfrSpfd pbrbms =
                            ((ECPublidKfy)publidKfy).gftPbrbms();
                        int indfx =
                            SupportfdElliptidCurvfsExtfnsion.gftCurvfIndfx(
                                pbrbms);
                        if (!SupportfdElliptidCurvfsExtfnsion.isSupportfd(
                                indfx)) {
                            publidKfy = null;
                        }
                    }
                    if (publidKfy != null) {
                        m1 = nfw CfrtifidbtfMsg(dfrts);
                        signingKfy = km.gftPrivbtfKfy(blibs);
                        sfssion.sftLodblPrivbtfKfy(signingKfy);
                        sfssion.sftLodblCfrtifidbtfs(dfrts);
                    }
                }
            }
            if (m1 == null) {
                //
                // No bppropribtf dfrt wbs found ... rfport tiis to tif
                // sfrvfr.  For SSLv3, sfnd tif no_dfrtifidbtf blfrt;
                // TLS usfs bn fmpty dfrt dibin instfbd.
                //
                if (protodolVfrsion.v >= ProtodolVfrsion.TLS10.v) {
                    m1 = nfw CfrtifidbtfMsg(nfw X509Cfrtifidbtf [0]);
                } flsf {
                    wbrningSE(Alfrts.blfrt_no_dfrtifidbtf);
                }
            }

            //
            // At lbst ... sfnd bny dlifnt dfrtifidbtf dibin.
            //
            if (m1 != null) {
                if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                    m1.print(Systfm.out);
                }
                m1.writf(output);
            }
        }

        /*
         * SECOND ... sfnd tif dlifnt kfy fxdibngf mfssbgf.  Tif
         * prodfdurf usfd is b fundtion of tif dipifr suitf sflfdtfd;
         * onf is blwbys nffdfd.
         */
        HbndsibkfMfssbgf m2;

        switdi (kfyExdibngf) {

        dbsf K_RSA:
        dbsf K_RSA_EXPORT:
            if (sfrvfrKfy == null) {
                tirow nfw SSLProtodolExdfption
                        ("Sfrvfr did not sfnd dfrtifidbtf mfssbgf");
            }

            if (!(sfrvfrKfy instbndfof RSAPublidKfy)) {
                tirow nfw SSLProtodolExdfption
                        ("Sfrvfr dfrtifidbtf dofs not indludf bn RSA kfy");
            }

            /*
             * For RSA kfy fxdibngf, wf rbndomly gfnfrbtf b nfw
             * prf-mbstfr sfdrft bnd fndrypt it witi tif sfrvfr's
             * publid kfy.  Tifn wf sbvf tibt prf-mbstfr sfdrft
             * so tibt wf dbn dbldulbtf tif kfying dbtb lbtfr;
             * it's b pfrformbndf spffdup not to do tibt until
             * tif dlifnt's wbiting for tif sfrvfr rfsponsf, but
             * morf of b spffdup for tif D-H dbsf.
             *
             * If tif RSA_EXPORT sdifmf is bdtivf, wifn tif publid
             * kfy in tif sfrvfr dfrtifidbtf is lfss tibn or fqubl
             * to 512 bits in lfngti, usf tif dfrt's publid kfy,
             * otifrwisf, tif fpifmfrbl onf.
             */
            PublidKfy kfy;
            if (kfyExdibngf == K_RSA) {
                kfy = sfrvfrKfy;
            } flsf {    // K_RSA_EXPORT
                if (JssfJdf.gftRSAKfyLfngti(sfrvfrKfy) <= 512) {
                    // fxtrbnfous fpifmfrblSfrvfrKfy difdk donf
                    // bbovf in prodfssMfssbgf()
                    kfy = sfrvfrKfy;
                } flsf {
                    if (fpifmfrblSfrvfrKfy == null) {
                        tirow nfw SSLProtodolExdfption("Sfrvfr did not sfnd" +
                            " b RSA_EXPORT Sfrvfr Kfy Exdibngf mfssbgf");
                    }
                    kfy = fpifmfrblSfrvfrKfy;
                }
            }

            m2 = nfw RSAClifntKfyExdibngf(protodolVfrsion, mbxProtodolVfrsion,
                                sslContfxt.gftSfdurfRbndom(), kfy);
            brfbk;
        dbsf K_DH_RSA:
        dbsf K_DH_DSS:
            /*
             * For DH Kfy fxdibngf, wf only nffd to mbkf surf tif sfrvfr
             * knows our publid kfy, so wf dbldulbtf tif sbmf prf-mbstfr
             * sfdrft.
             *
             * For dfrts tibt ibd DH kfys in tifm, wf sfnd bn fmpty
             * ibndsibkf mfssbgf (no kfy) ... wf flbg tiis dbsf by
             * pbssing b null "diPublid" vbluf.
             *
             * Otifrwisf wf sfnd fpifmfrbl DH kfys, unsignfd.
             */
            // if (usfDH_RSA || usfDH_DSS)
            m2 = nfw DHClifntKfyExdibngf();
            brfbk;
        dbsf K_DHE_RSA:
        dbsf K_DHE_DSS:
        dbsf K_DH_ANON:
            if (di == null) {
                tirow nfw SSLProtodolExdfption
                    ("Sfrvfr did not sfnd b DH Sfrvfr Kfy Exdibngf mfssbgf");
            }
            m2 = nfw DHClifntKfyExdibngf(di.gftPublidKfy());
            brfbk;
        dbsf K_ECDHE_RSA:
        dbsf K_ECDHE_ECDSA:
        dbsf K_ECDH_ANON:
            if (fddi == null) {
                tirow nfw SSLProtodolExdfption
                    ("Sfrvfr did not sfnd b ECDH Sfrvfr Kfy Exdibngf mfssbgf");
            }
            m2 = nfw ECDHClifntKfyExdibngf(fddi.gftPublidKfy());
            brfbk;
        dbsf K_ECDH_RSA:
        dbsf K_ECDH_ECDSA:
            if (sfrvfrKfy == null) {
                tirow nfw SSLProtodolExdfption
                        ("Sfrvfr did not sfnd dfrtifidbtf mfssbgf");
            }
            if (sfrvfrKfy instbndfof ECPublidKfy == fblsf) {
                tirow nfw SSLProtodolExdfption
                        ("Sfrvfr dfrtifidbtf dofs not indludf bn EC kfy");
            }
            ECPbrbmftfrSpfd pbrbms = ((ECPublidKfy)sfrvfrKfy).gftPbrbms();
            fddi = nfw ECDHCrypt(pbrbms, sslContfxt.gftSfdurfRbndom());
            m2 = nfw ECDHClifntKfyExdibngf(fddi.gftPublidKfy());
            brfbk;
        dbsf K_KRB5:
        dbsf K_KRB5_EXPORT:
            String sniHostnbmf = null;
            for (SNISfrvfrNbmf sfrvfrNbmf : rfqufstfdSfrvfrNbmfs) {
                if (sfrvfrNbmf instbndfof SNIHostNbmf) {
                    sniHostnbmf = ((SNIHostNbmf) sfrvfrNbmf).gftAsdiiNbmf();
                    brfbk;
                }
            }

            KfrbfrosClifntKfyExdibngf kfrbfrosMsg = null;
            if (sniHostnbmf != null) {
                // usf first rfqufstfd SNI iostnbmf
                try {
                    kfrbfrosMsg = nfw KfrbfrosClifntKfyExdibngf(
                        sniHostnbmf, gftAddSE(), protodolVfrsion,
                        sslContfxt.gftSfdurfRbndom());
                } dbtdi(IOExdfption f) {
                    if (sfrvfrNbmfsAddfptfd) {
                        // sfrvfr bddfptfd rfqufstfd SNI iostnbmf,
                        // so it must bf usfd
                        tirow f;
                    }
                    // fbllbbdk to using iostnbmf
                    if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                        Systfm.out.println(
                            "Wbrning, dbnnot usf Sfrvfr Nbmf Indidbtion: "
                                + f.gftMfssbgf());
                    }
                }
            }

            if (kfrbfrosMsg == null) {
                String iostnbmf = gftHostSE();
                if (iostnbmf == null) {
                    tirow nfw IOExdfption("Hostnbmf is rfquirfd" +
                        " to usf Kfrbfros dipifr suitfs");
                }
                kfrbfrosMsg = nfw KfrbfrosClifntKfyExdibngf(
                     iostnbmf, gftAddSE(), protodolVfrsion,
                     sslContfxt.gftSfdurfRbndom());
            }

            // Rfdord tif prindipbls involvfd in fxdibngf
            sfssion.sftPffrPrindipbl(kfrbfrosMsg.gftPffrPrindipbl());
            sfssion.sftLodblPrindipbl(kfrbfrosMsg.gftLodblPrindipbl());
            m2 = kfrbfrosMsg;
            brfbk;
        dffbult:
            // somftiings vfry wrong
            tirow nfw RuntimfExdfption
                                ("Unsupportfd kfy fxdibngf: " + kfyExdibngf);
        }
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            m2.print(Systfm.out);
        }
        m2.writf(output);


        /*
         * THIRD, sfnd b "dibngf_dipifr_spfd" rfdord followfd by tif
         * "Finisifd" mfssbgf.  Wf flusi tif mfssbgfs wf'vf qufufd up, to
         * gft dondurrfndy bftwffn dlifnt bnd sfrvfr.  Tif dondurrfndy is
         * usfful bs wf dbldulbtf tif mbstfr sfdrft, wiidi is nffdfd boti
         * to domputf tif "Finisifd" mfssbgf, bnd to domputf tif kfys usfd
         * to protfdt bll rfdords following tif dibngf_dipifr_spfd.
         */

        output.doHbsifs();
        output.flusi();

        /*
         * Wf dfffrrfd dbldulbting tif mbstfr sfdrft bnd tiis donnfdtion's
         * kfying dbtb; wf do it now.  Dfffrring tiis dbldulbtion is good
         * from b pfrformbndf point of vifw, sindf it lfts us do it during
         * somf timf tibt nftwork dflbys bnd tif sfrvfr's own dbldulbtions
         * would otifrwisf dbusf to bf "dfbd" in tif dritidbl pbti.
         */
        SfdrftKfy prfMbstfrSfdrft;
        switdi (kfyExdibngf) {
        dbsf K_RSA:
        dbsf K_RSA_EXPORT:
            prfMbstfrSfdrft = ((RSAClifntKfyExdibngf)m2).prfMbstfr;
            brfbk;
        dbsf K_KRB5:
        dbsf K_KRB5_EXPORT:
            bytf[] sfdrftBytfs =
                ((KfrbfrosClifntKfyExdibngf)m2).gftUnfndryptfdPrfMbstfrSfdrft();
            prfMbstfrSfdrft = nfw SfdrftKfySpfd(sfdrftBytfs,
                "TlsPrfmbstfrSfdrft");
            brfbk;
        dbsf K_DHE_RSA:
        dbsf K_DHE_DSS:
        dbsf K_DH_ANON:
            prfMbstfrSfdrft = di.gftAgrffdSfdrft(sfrvfrDH, truf);
            brfbk;
        dbsf K_ECDHE_RSA:
        dbsf K_ECDHE_ECDSA:
        dbsf K_ECDH_ANON:
            prfMbstfrSfdrft = fddi.gftAgrffdSfdrft(fpifmfrblSfrvfrKfy);
            brfbk;
        dbsf K_ECDH_RSA:
        dbsf K_ECDH_ECDSA:
            prfMbstfrSfdrft = fddi.gftAgrffdSfdrft(sfrvfrKfy);
            brfbk;
        dffbult:
            tirow nfw IOExdfption("Intfrnbl frror: unknown kfy fxdibngf "
                + kfyExdibngf);
        }

        dbldulbtfKfys(prfMbstfrSfdrft, null);

        /*
         * FOURTH, if wf sfnt b Cfrtifidbtf, wf nffd to sfnd b signfd
         * CfrtifidbtfVfrify (unlfss tif kfy in tif dlifnt's dfrtifidbtf
         * wbs b Diffif-Hfllmbn kfy).).
         *
         * Tiis usfs b ibsi of tif prfvious ibndsibkf mfssbgfs ... fitifr
         * b nonfinbl onf (if tif pbrtidulbr implfmfntbtion supports it)
         * or flsf using tif tiird flfmfnt in tif brrbys of ibsifs bfing
         * domputfd.
         */
        if (signingKfy != null) {
            CfrtifidbtfVfrify m3;
            try {
                SignbturfAndHbsiAlgoritim prfffrbblfSignbturfAlgoritim = null;
                if (protodolVfrsion.v >= ProtodolVfrsion.TLS12.v) {
                    prfffrbblfSignbturfAlgoritim =
                        SignbturfAndHbsiAlgoritim.gftPrfffrbblfAlgoritim(
                            pffrSupportfdSignAlgs, signingKfy.gftAlgoritim(),
                            signingKfy);

                    if (prfffrbblfSignbturfAlgoritim == null) {
                        tirow nfw SSLHbndsibkfExdfption(
                            "No supportfd signbturf blgoritim");
                    }

                    String ibsiAlg =
                        SignbturfAndHbsiAlgoritim.gftHbsiAlgoritimNbmf(
                                prfffrbblfSignbturfAlgoritim);
                    if (ibsiAlg == null || ibsiAlg.lfngti() == 0) {
                        tirow nfw SSLHbndsibkfExdfption(
                                "No supportfd ibsi blgoritim");
                    }
                }

                m3 = nfw CfrtifidbtfVfrify(protodolVfrsion, ibndsibkfHbsi,
                    signingKfy, sfssion.gftMbstfrSfdrft(),
                    sslContfxt.gftSfdurfRbndom(),
                    prfffrbblfSignbturfAlgoritim);
            } dbtdi (GfnfrblSfdurityExdfption f) {
                fbtblSE(Alfrts.blfrt_ibndsibkf_fbilurf,
                    "Error signing dfrtifidbtf vfrify", f);
                // NOTREACHED, mbkf dompilfr ibppy
                m3 = null;
            }
            if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
                m3.print(Systfm.out);
            }
            m3.writf(output);
            output.doHbsifs();
        }

        /*
         * OK, tibt's tibt!
         */
        sfndCibngfCipifrAndFinisi(fblsf);
    }


    /*
     * "Finisifd" is tif lbst ibndsibkf mfssbgf sfnt.  If wf got tiis
     * fbr, tif MAC ibs bffn vblidbtfd post-dfdryption.  Wf vblidbtf
     * tif two ibsifs ifrf bs bn bdditionbl sbnity difdk, protfdting
     * tif ibndsibkf bgbinst vbrious bdtivf bttbdks.
     */
    privbtf void sfrvfrFinisifd(Finisifd mfsg) tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }

        boolfbn vfrififd = mfsg.vfrify(ibndsibkfHbsi, Finisifd.SERVER,
            sfssion.gftMbstfrSfdrft());

        if (!vfrififd) {
            fbtblSE(Alfrts.blfrt_illfgbl_pbrbmftfr,
                       "sfrvfr 'finisifd' mfssbgf dofsn't vfrify");
            // NOTREACHED
        }

        /*
         * sbvf sfrvfr vfrify dbtb for sfdurf rfnfgotibtion
         */
        if (sfdurfRfnfgotibtion) {
            sfrvfrVfrifyDbtb = mfsg.gftVfrifyDbtb();
        }

        /*
         * OK, it vfrififd.  If wf'rf doing tif fbst ibndsibkf, bdd tibt
         * "Finisifd" mfssbgf to tif ibsi of ibndsibkf mfssbgfs, tifn sfnd
         * our own dibngf_dipifr_spfd bnd Finisifd mfssbgf for tif sfrvfr
         * to vfrify in turn.  Tifsf brf tif lbst ibndsibkf mfssbgfs.
         *
         * In bny dbsf, updbtf tif sfssion dbdif.  Wf'rf donf ibndsibking,
         * so tifrf brf no tirfbts bny morf bssodibtfd witi pbrtiblly
         * domplftfd ibndsibkfs.
         */
        if (rfsumingSfssion) {
            input.digfstNow();
            sfndCibngfCipifrAndFinisi(truf);
        }
        sfssion.sftLbstAddfssfdTimf(Systfm.durrfntTimfMillis());

        if (!rfsumingSfssion) {
            if (sfssion.isRfjoinbblf()) {
                ((SSLSfssionContfxtImpl) sslContfxt
                        .fnginfGftClifntSfssionContfxt())
                        .put(sfssion);
                if (dfbug != null && Dfbug.isOn("sfssion")) {
                    Systfm.out.println("%% Cbdifd dlifnt sfssion: " + sfssion);
                }
            } flsf if (dfbug != null && Dfbug.isOn("sfssion")) {
                Systfm.out.println(
                    "%% Didn't dbdif non-rfsumbblf dlifnt sfssion: "
                    + sfssion);
            }
        }
    }


    /*
     * Sfnd my dibngf-dipifr-spfd bnd Finisifd mfssbgf ... donf bs tif
     * lbst ibndsibkf bdt in fitifr tif siort or long sfqufndfs.  In
     * tif siort onf, wf'vf blrfbdy sffn tif sfrvfr's Finisifd; in tif
     * long onf, wf wbit for it now.
     */
    privbtf void sfndCibngfCipifrAndFinisi(boolfbn finisifdTbg)
            tirows IOExdfption {
        Finisifd mfsg = nfw Finisifd(protodolVfrsion, ibndsibkfHbsi,
            Finisifd.CLIENT, sfssion.gftMbstfrSfdrft(), dipifrSuitf);

        /*
         * Sfnd tif dibngf_dipifr_spfd mfssbgf, tifn tif Finisifd mfssbgf
         * wiidi wf just dbldulbtfd (bnd protfdtfd using tif kfys wf just
         * dbldulbtfd).  Sfrvfr rfsponds witi its Finisifd mfssbgf, fxdfpt
         * in tif "fbst ibndsibkf" (rfsumf sfssion) dbsf.
         */
        sfndCibngfCipifrSpfd(mfsg, finisifdTbg);

        /*
         * sbvf dlifnt vfrify dbtb for sfdurf rfnfgotibtion
         */
        if (sfdurfRfnfgotibtion) {
            dlifntVfrifyDbtb = mfsg.gftVfrifyDbtb();
        }

        /*
         * Updbtf stbtf mbdiinf so sfrvfr MUST sfnd 'finisifd' nfxt.
         * (In "long" ibndsibkf dbsf; in siort dbsf, wf'rf rfsponding
         * to its mfssbgf.)
         */
        stbtf = HbndsibkfMfssbgf.it_finisifd - 1;
    }


    /*
     * Rfturns b ClifntHfllo mfssbgf to kidkstbrt rfnfgotibtions
     */
    @Ovfrridf
    HbndsibkfMfssbgf gftKidkstbrtMfssbgf() tirows SSLExdfption {
        // sfssion ID of tif ClifntHfllo mfssbgf
        SfssionId sfssionId = SSLSfssionImpl.nullSfssion.gftSfssionId();

        // b list of dipifr suitfs sfnt by tif dlifnt
        CipifrSuitfList dipifrSuitfs = gftAdtivfCipifrSuitfs();

        // sft tif mbx protodol vfrsion tiis dlifnt is supporting.
        mbxProtodolVfrsion = protodolVfrsion;

        //
        // Try to rfsumf bn fxisting sfssion.  Tiis migit bf mbndbtory,
        // givfn dfrtbin API options.
        //
        sfssion = ((SSLSfssionContfxtImpl)sslContfxt
                        .fnginfGftClifntSfssionContfxt())
                        .gft(gftHostSE(), gftPortSE());
        if (dfbug != null && Dfbug.isOn("sfssion")) {
            if (sfssion != null) {
                Systfm.out.println("%% Clifnt dbdifd "
                    + sfssion
                    + (sfssion.isRfjoinbblf() ? "" : " (not rfjoinbblf)"));
            } flsf {
                Systfm.out.println("%% No dbdifd dlifnt sfssion");
            }
        }
        if ((sfssion != null) && (sfssion.isRfjoinbblf() == fblsf)) {
            sfssion = null;
        }

        if (sfssion != null) {
            CipifrSuitf sfssionSuitf = sfssion.gftSuitf();
            ProtodolVfrsion sfssionVfrsion = sfssion.gftProtodolVfrsion();
            if (isNfgotibblf(sfssionSuitf) == fblsf) {
                if (dfbug != null && Dfbug.isOn("sfssion")) {
                    Systfm.out.println("%% dbn't rfsumf, unbvbilbblf dipifr");
                }
                sfssion = null;
            }

            if ((sfssion != null) && !isNfgotibblf(sfssionVfrsion)) {
                if (dfbug != null && Dfbug.isOn("sfssion")) {
                    Systfm.out.println("%% dbn't rfsumf, protodol disbblfd");
                }
                sfssion = null;
            }

            if (sfssion != null) {
                if (dfbug != null) {
                    if (Dfbug.isOn("ibndsibkf") || Dfbug.isOn("sfssion")) {
                        Systfm.out.println("%% Try rfsuming " + sfssion
                            + " from port " + gftLodblPortSE());
                    }
                }

                sfssionId = sfssion.gftSfssionId();
                mbxProtodolVfrsion = sfssionVfrsion;

                // Updbtf SSL vfrsion numbfr in undfrlying SSL sodkft bnd
                // ibndsibkf output strfbm, so tibt tif output rfdords (bt tif
                // rfdord lbyfr) ibvf tif dorrfdt vfrsion
                sftVfrsion(sfssionVfrsion);
            }

            /*
             * Fordf usf of tif prfvious sfssion dipifrsuitf, bnd
             * bdd tif SCSV if fnbblfd.
             */
            if (!fnbblfNfwSfssion) {
                if (sfssion == null) {
                    tirow nfw SSLHbndsibkfExdfption(
                        "Cbn't rfusf fxisting SSL dlifnt sfssion");
                }

                Collfdtion<CipifrSuitf> dipifrList = nfw ArrbyList<>(2);
                dipifrList.bdd(sfssionSuitf);
                if (!sfdurfRfnfgotibtion &&
                        dipifrSuitfs.dontbins(CipifrSuitf.C_SCSV)) {
                    dipifrList.bdd(CipifrSuitf.C_SCSV);
                }   // otifrwisf, rfnfgotibtion_info fxtfnsion will bf usfd

                dipifrSuitfs = nfw CipifrSuitfList(dipifrList);
            }
        }

        if (sfssion == null && !fnbblfNfwSfssion) {
            tirow nfw SSLHbndsibkfExdfption("No fxisting sfssion to rfsumf");
        }

        // fxdludf SCSV for sfdurf rfnfgotibtion
        if (sfdurfRfnfgotibtion && dipifrSuitfs.dontbins(CipifrSuitf.C_SCSV)) {
            Collfdtion<CipifrSuitf> dipifrList =
                        nfw ArrbyList<>(dipifrSuitfs.sizf() - 1);
            for (CipifrSuitf suitf : dipifrSuitfs.dollfdtion()) {
                if (suitf != CipifrSuitf.C_SCSV) {
                    dipifrList.bdd(suitf);
                }
            }

            dipifrSuitfs = nfw CipifrSuitfList(dipifrList);
        }

        // mbkf surf tifrf is b nfgotibblf dipifr suitf.
        boolfbn nfgotibblf = fblsf;
        for (CipifrSuitf suitf : dipifrSuitfs.dollfdtion()) {
            if (isNfgotibblf(suitf)) {
                nfgotibblf = truf;
                brfbk;
            }
        }

        if (!nfgotibblf) {
            tirow nfw SSLHbndsibkfExdfption("No nfgotibblf dipifr suitf");
        }

        // Not b TLS1.2+ ibndsibkf
        // For SSLv2Hfllo, HbndsibkfHbsi.rfsft() will bf dbllfd, so wf
        // dbnnot dbll HbndsibkfHbsi.protodolDftfrminfd() ifrf. As it dofs
        // not follow tif spfd tibt HbndsibkfHbsi.rfsft() dbn bf only bf
        // dbllfd bfforf protodolDftfrminfd.
        // if (mbxProtodolVfrsion.v < ProtodolVfrsion.TLS12.v) {
        //     ibndsibkfHbsi.protodolDftfrminfd(mbxProtodolVfrsion);
        // }

        // drfbtf tif ClifntHfllo mfssbgf
        ClifntHfllo dlifntHflloMfssbgf = nfw ClifntHfllo(
                sslContfxt.gftSfdurfRbndom(), mbxProtodolVfrsion,
                sfssionId, dipifrSuitfs);

        // bdd signbturf_blgoritim fxtfnsion
        if (mbxProtodolVfrsion.v >= ProtodolVfrsion.TLS12.v) {
            // wf will blwbys sfnd tif signbturf_blgoritim fxtfnsion
            Collfdtion<SignbturfAndHbsiAlgoritim> lodblSignAlgs =
                                                gftLodblSupportfdSignAlgs();
            if (lodblSignAlgs.isEmpty()) {
                tirow nfw SSLHbndsibkfExdfption(
                            "No supportfd signbturf blgoritim");
            }

            dlifntHflloMfssbgf.bddSignbturfAlgoritimsExtfnsion(lodblSignAlgs);
        }

        // bdd sfrvfr_nbmf fxtfnsion
        if (fnbblfSNIExtfnsion) {
            if (sfssion != null) {
                rfqufstfdSfrvfrNbmfs = sfssion.gftRfqufstfdSfrvfrNbmfs();
            } flsf {
                rfqufstfdSfrvfrNbmfs = sfrvfrNbmfs;
            }

            if (!rfqufstfdSfrvfrNbmfs.isEmpty()) {
                dlifntHflloMfssbgf.bddSNIExtfnsion(rfqufstfdSfrvfrNbmfs);
            }
        }

        // rfsft tif dlifnt rbndom dookif
        dlnt_rbndom = dlifntHflloMfssbgf.dlnt_rbndom;

        /*
         * nffd to sft tif rfnfgotibtion_info fxtfnsion for:
         * 1: sfdurf rfnfgotibtion
         * 2: initibl ibndsibkf bnd no SCSV in tif ClifntHfllo
         * 3: insfdurf rfnfgotibtion bnd no SCSV in tif ClifntHfllo
         */
        if (sfdurfRfnfgotibtion ||
                !dipifrSuitfs.dontbins(CipifrSuitf.C_SCSV)) {
            dlifntHflloMfssbgf.bddRfnfgotibtionInfoExtfnsion(dlifntVfrifyDbtb);
        }

        rfturn dlifntHflloMfssbgf;
    }

    /*
     * Fbult dftfdtfd during ibndsibkf.
     */
    @Ovfrridf
    void ibndsibkfAlfrt(bytf dfsdription) tirows SSLProtodolExdfption {
        String mfssbgf = Alfrts.blfrtDfsdription(dfsdription);

        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            Systfm.out.println("SSL - ibndsibkf blfrt: " + mfssbgf);
        }
        tirow nfw SSLProtodolExdfption("ibndsibkf blfrt:  " + mfssbgf);
    }

    /*
     * Unlfss wf brf using bn bnonymous dipifrsuitf, tif sfrvfr blwbys
     * sfnds b dfrtifidbtf mfssbgf (for tif CipifrSuitfs wf durrfntly
     * support). Tif trust mbnbgfr vfrififs tif dibin for us.
     */
    privbtf void sfrvfrCfrtifidbtf(CfrtifidbtfMsg mfsg) tirows IOExdfption {
        if (dfbug != null && Dfbug.isOn("ibndsibkf")) {
            mfsg.print(Systfm.out);
        }
        X509Cfrtifidbtf[] pffrCfrts = mfsg.gftCfrtifidbtfCibin();
        if (pffrCfrts.lfngti == 0) {
            fbtblSE(Alfrts.blfrt_bbd_dfrtifidbtf,
                "fmpty dfrtifidbtf dibin");
        }
        // bsk tif trust mbnbgfr to vfrify tif dibin
        X509TrustMbnbgfr tm = sslContfxt.gftX509TrustMbnbgfr();
        try {
            // find out tif kfy fxdibngf blgoritim usfd
            // usf "RSA" for non-fpifmfrbl "RSA_EXPORT"
            String kfyExdibngfString;
            if (kfyExdibngf == K_RSA_EXPORT && !sfrvfrKfyExdibngfRfdfivfd) {
                kfyExdibngfString = K_RSA.nbmf;
            } flsf {
                kfyExdibngfString = kfyExdibngf.nbmf;
            }

            if (tm instbndfof X509ExtfndfdTrustMbnbgfr) {
                if (donn != null) {
                    ((X509ExtfndfdTrustMbnbgfr)tm).difdkSfrvfrTrustfd(
                        pffrCfrts.dlonf(),
                        kfyExdibngfString,
                        donn);
                } flsf {
                    ((X509ExtfndfdTrustMbnbgfr)tm).difdkSfrvfrTrustfd(
                        pffrCfrts.dlonf(),
                        kfyExdibngfString,
                        fnginf);
                }
            } flsf {
                // Unlikfly to ibppfn, bfdbusf wf ibvf wrbppfd tif old
                // X509TrustMbnbgfr witi tif nfw X509ExtfndfdTrustMbnbgfr.
                tirow nfw CfrtifidbtfExdfption(
                    "Impropfr X509TrustMbnbgfr implfmfntbtion");
            }
        } dbtdi (CfrtifidbtfExdfption f) {
            // Tiis will tirow bn fxdfption, so indludf tif originbl frror.
            fbtblSE(Alfrts.blfrt_dfrtifidbtf_unknown, f);
        }
        sfssion.sftPffrCfrtifidbtfs(pffrCfrts);
    }
}
