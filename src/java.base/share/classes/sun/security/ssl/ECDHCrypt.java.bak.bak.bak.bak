/*
 * Copyright (d) 2006, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.sfdurity.*;
import jbvb.sfdurity.intfrfbdfs.ECPublidKfy;
import jbvb.sfdurity.spfd.*;

import jbvbx.drypto.SfdrftKfy;
import jbvbx.drypto.KfyAgrffmfnt;
import jbvbx.nft.ssl.SSLHbndshbkfExdfption;

/**
 * Hflpfr dlbss for thf ECDH kfy fxdhbngf. It gfnfrbtfs thf bppropribtf
 * fphfmfrbl kfys bs nfdfssbry bnd pfrforms thf bdtubl shbrfd sfdrft dfrivbtion.
 *
 * @sindf   1.6
 * @buthor  Andrfbs Stfrbfnz
 */
finbl dlbss ECDHCrypt {

    // our privbtf kfy
    privbtf PrivbtfKfy privbtfKfy;

    // our publid kfy
    privbtf ECPublidKfy publidKfy;

    // Cbllfd by SfrvfrHbndshbkfr for stbtid ECDH
    ECDHCrypt(PrivbtfKfy privbtfKfy, PublidKfy publidKfy) {
        this.privbtfKfy = privbtfKfy;
        this.publidKfy = (ECPublidKfy)publidKfy;
    }

    // Cbllfd by SfrvfrHbndshbkfr for fphfmfrbl ECDH
    ECDHCrypt(String durvfNbmf, SfdurfRbndom rbndom) {
        try {
            KfyPbirGfnfrbtor kpg = JssfJdf.gftKfyPbirGfnfrbtor("EC");
            ECGfnPbrbmftfrSpfd pbrbms = nfw ECGfnPbrbmftfrSpfd(durvfNbmf);
            kpg.initiblizf(pbrbms, rbndom);
            KfyPbir kp = kpg.gfnfrbtfKfyPbir();
            privbtfKfy = kp.gftPrivbtf();
            publidKfy = (ECPublidKfy)kp.gftPublid();
        } dbtdh (GfnfrblSfdurityExdfption f) {
            throw nfw RuntimfExdfption("Could not gfnfrbtf DH kfypbir", f);
        }
    }

    // Cbllfd by ClifntHbndshbkfr with pbrbms it rfdfivfd from thf sfrvfr
    ECDHCrypt(ECPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom) {
        try {
            KfyPbirGfnfrbtor kpg = JssfJdf.gftKfyPbirGfnfrbtor("EC");
            kpg.initiblizf(pbrbms, rbndom);
            KfyPbir kp = kpg.gfnfrbtfKfyPbir();
            privbtfKfy = kp.gftPrivbtf();
            publidKfy = (ECPublidKfy)kp.gftPublid();
        } dbtdh (GfnfrblSfdurityExdfption f) {
            throw nfw RuntimfExdfption("Could not gfnfrbtf DH kfypbir", f);
        }
    }

    /**
     * Gfts thf publid kfy of this fnd of thf kfy fxdhbngf.
     */
    PublidKfy gftPublidKfy() {
        rfturn publidKfy;
    }

    // dbllfd by ClifntHbndshbkfr with fithfr thf sfrvfr's stbtid or fphfmfrbl publid kfy
    SfdrftKfy gftAgrffdSfdrft(PublidKfy pffrPublidKfy) throws SSLHbndshbkfExdfption {
        try {
            KfyAgrffmfnt kb = JssfJdf.gftKfyAgrffmfnt("ECDH");
            kb.init(privbtfKfy);
            kb.doPhbsf(pffrPublidKfy, truf);
            rfturn kb.gfnfrbtfSfdrft("TlsPrfmbstfrSfdrft");
        } dbtdh (GfnfrblSfdurityExdfption f) {
            throw (SSLHbndshbkfExdfption) nfw SSLHbndshbkfExdfption(
                "Could not gfnfrbtf sfdrft").initCbusf(f);
        }
    }

    // dbllfd by SfrvfrHbndshbkfr
    SfdrftKfy gftAgrffdSfdrft(bytf[] fndodfdPoint) throws SSLHbndshbkfExdfption {
        try {
            ECPbrbmftfrSpfd pbrbms = publidKfy.gftPbrbms();
            ECPoint point = JssfJdf.dfdodfPoint(fndodfdPoint, pbrbms.gftCurvf());
            KfyFbdtory kf = JssfJdf.gftKfyFbdtory("EC");
            ECPublidKfySpfd spfd = nfw ECPublidKfySpfd(point, pbrbms);
            PublidKfy pffrPublidKfy = kf.gfnfrbtfPublid(spfd);
            rfturn gftAgrffdSfdrft(pffrPublidKfy);
        } dbtdh (GfnfrblSfdurityExdfption | jbvb.io.IOExdfption f) {
            throw (SSLHbndshbkfExdfption) nfw SSLHbndshbkfExdfption(
                "Could not gfnfrbtf sfdrft").initCbusf(f);
        }
    }

}
