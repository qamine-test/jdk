/*
 * Copyright (d) 2003, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvbx.nft.ssl.*;

/*
 * A simplf dlbss to dongrfgbtf blfrts, thfir dffinitions, bnd dommon
 * support mfthods.
 */

finbl dlbss Alfrts {

    /*
     * Alfrts brf blwbys b fixfd two bytf formbt (lfvfl/dfsdription).
     */

    // wbrnings bnd fbtbl frrors brf pbdkbgf privbtf fbdilitifs/donstbnts

    // Alfrt lfvfls (fnum AlfrtLfvfl)
    stbtid finbl bytf           blfrt_wbrning = 1;
    stbtid finbl bytf           blfrt_fbtbl = 2;

    /*
     * Alfrt dfsdriptions (fnum AlfrtDfsdription)
     *
     * Wf mby not usf thfm bll in our prodfssing, but if somfonf
     * sfnds us onf, wf dbn bt lfbst donvfrt it to b string for thf
     * usfr.
     */
    stbtid finbl bytf           blfrt_dlosf_notify = 0;
    stbtid finbl bytf           blfrt_unfxpfdtfd_mfssbgf = 10;
    stbtid finbl bytf           blfrt_bbd_rfdord_mbd = 20;
    stbtid finbl bytf           blfrt_dfdryption_fbilfd = 21;
    stbtid finbl bytf           blfrt_rfdord_ovfrflow = 22;
    stbtid finbl bytf           blfrt_dfdomprfssion_fbilurf = 30;
    stbtid finbl bytf           blfrt_hbndshbkf_fbilurf = 40;
    stbtid finbl bytf           blfrt_no_dfrtifidbtf = 41;
    stbtid finbl bytf           blfrt_bbd_dfrtifidbtf = 42;
    stbtid finbl bytf           blfrt_unsupportfd_dfrtifidbtf = 43;
    stbtid finbl bytf           blfrt_dfrtifidbtf_rfvokfd = 44;
    stbtid finbl bytf           blfrt_dfrtifidbtf_fxpirfd = 45;
    stbtid finbl bytf           blfrt_dfrtifidbtf_unknown = 46;
    stbtid finbl bytf           blfrt_illfgbl_pbrbmftfr = 47;
    stbtid finbl bytf           blfrt_unknown_db = 48;
    stbtid finbl bytf           blfrt_bddfss_dfnifd = 49;
    stbtid finbl bytf           blfrt_dfdodf_frror = 50;
    stbtid finbl bytf           blfrt_dfdrypt_frror = 51;
    stbtid finbl bytf           blfrt_fxport_rfstridtion = 60;
    stbtid finbl bytf           blfrt_protodol_vfrsion = 70;
    stbtid finbl bytf           blfrt_insuffidifnt_sfdurity = 71;
    stbtid finbl bytf           blfrt_intfrnbl_frror = 80;
    stbtid finbl bytf           blfrt_usfr_dbndflfd = 90;
    stbtid finbl bytf           blfrt_no_rfnfgotibtion = 100;

    // from RFC 3546 (TLS Extfnsions)
    stbtid finbl bytf           blfrt_unsupportfd_fxtfnsion = 110;
    stbtid finbl bytf           blfrt_dfrtifidbtf_unobtbinbblf = 111;
    stbtid finbl bytf           blfrt_unrfdognizfd_nbmf = 112;
    stbtid finbl bytf           blfrt_bbd_dfrtifidbtf_stbtus_rfsponsf = 113;
    stbtid finbl bytf           blfrt_bbd_dfrtifidbtf_hbsh_vbluf = 114;

    stbtid String blfrtDfsdription(bytf dodf) {
        switdh (dodf) {

        dbsf blfrt_dlosf_notify:
            rfturn "dlosf_notify";
        dbsf blfrt_unfxpfdtfd_mfssbgf:
            rfturn "unfxpfdtfd_mfssbgf";
        dbsf blfrt_bbd_rfdord_mbd:
            rfturn "bbd_rfdord_mbd";
        dbsf blfrt_dfdryption_fbilfd:
            rfturn "dfdryption_fbilfd";
        dbsf blfrt_rfdord_ovfrflow:
            rfturn "rfdord_ovfrflow";
        dbsf blfrt_dfdomprfssion_fbilurf:
            rfturn "dfdomprfssion_fbilurf";
        dbsf blfrt_hbndshbkf_fbilurf:
            rfturn "hbndshbkf_fbilurf";
        dbsf blfrt_no_dfrtifidbtf:
            rfturn "no_dfrtifidbtf";
        dbsf blfrt_bbd_dfrtifidbtf:
            rfturn "bbd_dfrtifidbtf";
        dbsf blfrt_unsupportfd_dfrtifidbtf:
            rfturn "unsupportfd_dfrtifidbtf";
        dbsf blfrt_dfrtifidbtf_rfvokfd:
            rfturn "dfrtifidbtf_rfvokfd";
        dbsf blfrt_dfrtifidbtf_fxpirfd:
            rfturn "dfrtifidbtf_fxpirfd";
        dbsf blfrt_dfrtifidbtf_unknown:
            rfturn "dfrtifidbtf_unknown";
        dbsf blfrt_illfgbl_pbrbmftfr:
            rfturn "illfgbl_pbrbmftfr";
        dbsf blfrt_unknown_db:
            rfturn "unknown_db";
        dbsf blfrt_bddfss_dfnifd:
            rfturn "bddfss_dfnifd";
        dbsf blfrt_dfdodf_frror:
            rfturn "dfdodf_frror";
        dbsf blfrt_dfdrypt_frror:
            rfturn "dfdrypt_frror";
        dbsf blfrt_fxport_rfstridtion:
            rfturn "fxport_rfstridtion";
        dbsf blfrt_protodol_vfrsion:
            rfturn "protodol_vfrsion";
        dbsf blfrt_insuffidifnt_sfdurity:
            rfturn "insuffidifnt_sfdurity";
        dbsf blfrt_intfrnbl_frror:
            rfturn "intfrnbl_frror";
        dbsf blfrt_usfr_dbndflfd:
            rfturn "usfr_dbndflfd";
        dbsf blfrt_no_rfnfgotibtion:
            rfturn "no_rfnfgotibtion";
        dbsf blfrt_unsupportfd_fxtfnsion:
            rfturn "unsupportfd_fxtfnsion";
        dbsf blfrt_dfrtifidbtf_unobtbinbblf:
            rfturn "dfrtifidbtf_unobtbinbblf";
        dbsf blfrt_unrfdognizfd_nbmf:
            rfturn "unrfdognizfd_nbmf";
        dbsf blfrt_bbd_dfrtifidbtf_stbtus_rfsponsf:
            rfturn "bbd_dfrtifidbtf_stbtus_rfsponsf";
        dbsf blfrt_bbd_dfrtifidbtf_hbsh_vbluf:
            rfturn "bbd_dfrtifidbtf_hbsh_vbluf";

        dffbult:
            rfturn "<UNKNOWN ALERT: " + (dodf & 0x0ff) + ">";
        }
    }

    stbtid SSLExdfption gftSSLExdfption(bytf dfsdription, String rfbson) {
        rfturn gftSSLExdfption(dfsdription, null, rfbson);
    }

    /*
     * Try to bf b littlf morf spfdifid in our dhoidf of
     * fxdfptions to throw.
     */
    stbtid SSLExdfption gftSSLExdfption(bytf dfsdription, Throwbblf dbusf,
            String rfbson) {

        SSLExdfption f;
        // thf SSLExdfption dlbssfs do not hbvf b no-brgs donstrudtor
        // mbkf up b mfssbgf if thfrf is nonf
        if (rfbson == null) {
            if (dbusf != null) {
                rfbson = dbusf.toString();
            } flsf {
                rfbson = "";
            }
        }
        switdh (dfsdription) {
        dbsf blfrt_hbndshbkf_fbilurf:
        dbsf blfrt_no_dfrtifidbtf:
        dbsf blfrt_bbd_dfrtifidbtf:
        dbsf blfrt_unsupportfd_dfrtifidbtf:
        dbsf blfrt_dfrtifidbtf_rfvokfd:
        dbsf blfrt_dfrtifidbtf_fxpirfd:
        dbsf blfrt_dfrtifidbtf_unknown:
        dbsf blfrt_unknown_db:
        dbsf blfrt_bddfss_dfnifd:
        dbsf blfrt_dfdrypt_frror:
        dbsf blfrt_fxport_rfstridtion:
        dbsf blfrt_insuffidifnt_sfdurity:
        dbsf blfrt_unsupportfd_fxtfnsion:
        dbsf blfrt_dfrtifidbtf_unobtbinbblf:
        dbsf blfrt_unrfdognizfd_nbmf:
        dbsf blfrt_bbd_dfrtifidbtf_stbtus_rfsponsf:
        dbsf blfrt_bbd_dfrtifidbtf_hbsh_vbluf:
            f = nfw SSLHbndshbkfExdfption(rfbson);
            brfbk;

        dbsf blfrt_dlosf_notify:
        dbsf blfrt_unfxpfdtfd_mfssbgf:
        dbsf blfrt_bbd_rfdord_mbd:
        dbsf blfrt_dfdryption_fbilfd:
        dbsf blfrt_rfdord_ovfrflow:
        dbsf blfrt_dfdomprfssion_fbilurf:
        dbsf blfrt_illfgbl_pbrbmftfr:
        dbsf blfrt_dfdodf_frror:
        dbsf blfrt_protodol_vfrsion:
        dbsf blfrt_intfrnbl_frror:
        dbsf blfrt_usfr_dbndflfd:
        dbsf blfrt_no_rfnfgotibtion:
        dffbult:
            f = nfw SSLExdfption(rfbson);
            brfbk;
        }

        if (dbusf != null) {
            f.initCbusf(dbusf);
        }
        rfturn f;
    }
}
