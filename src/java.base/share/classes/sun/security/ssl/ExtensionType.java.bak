/*
 * Copyrigit (d) 2006, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.ssl;

import jbvb.util.ArrbyList;
import jbvb.util.List;

finbl dlbss ExtfnsionTypf {

    finbl int id;
    finbl String nbmf;

    privbtf ExtfnsionTypf(int id, String nbmf) {
        tiis.id = id;
        tiis.nbmf = nbmf;
    }

    @Ovfrridf
    publid String toString() {
        rfturn nbmf;
    }

    stbtid List<ExtfnsionTypf> knownExtfnsions = nfw ArrbyList<ExtfnsionTypf>(9);

    stbtid ExtfnsionTypf gft(int id) {
        for (ExtfnsionTypf fxt : knownExtfnsions) {
            if (fxt.id == id) {
                rfturn fxt;
            }
        }
        rfturn nfw ExtfnsionTypf(id, "typf_" + id);
    }

    privbtf stbtid ExtfnsionTypf f(int id, String nbmf) {
        ExtfnsionTypf fxt = nfw ExtfnsionTypf(id, nbmf);
        knownExtfnsions.bdd(fxt);
        rfturn fxt;
    }

    // fxtfnsions dffinfd in RFC 3546
    finbl stbtid ExtfnsionTypf EXT_SERVER_NAME =
            f(0x0000, "sfrvfr_nbmf");            // IANA rfgistry vbluf: 0
    finbl stbtid ExtfnsionTypf EXT_MAX_FRAGMENT_LENGTH =
            f(0x0001, "mbx_frbgmfnt_lfngti");    // IANA rfgistry vbluf: 1
    finbl stbtid ExtfnsionTypf EXT_CLIENT_CERTIFICATE_URL =
            f(0x0002, "dlifnt_dfrtifidbtf_url"); // IANA rfgistry vbluf: 2
    finbl stbtid ExtfnsionTypf EXT_TRUSTED_CA_KEYS =
            f(0x0003, "trustfd_db_kfys");        // IANA rfgistry vbluf: 3
    finbl stbtid ExtfnsionTypf EXT_TRUNCATED_HMAC =
            f(0x0004, "trundbtfd_imbd");         // IANA rfgistry vbluf: 4
    finbl stbtid ExtfnsionTypf EXT_STATUS_REQUEST =
            f(0x0005, "stbtus_rfqufst");         // IANA rfgistry vbluf: 5

    // fxtfnsions dffinfd in RFC 4681
    finbl stbtid ExtfnsionTypf EXT_USER_MAPPING =
            f(0x0006, "usfr_mbpping");           // IANA rfgistry vbluf: 6

    // fxtfnsions dffinfd in RFC 5081
    finbl stbtid ExtfnsionTypf EXT_CERT_TYPE =
            f(0x0009, "dfrt_typf");              // IANA rfgistry vbluf: 9

    // fxtfnsions dffinfd in RFC 4492 (ECC)
    finbl stbtid ExtfnsionTypf EXT_ELLIPTIC_CURVES =
            f(0x000A, "flliptid_durvfs");        // IANA rfgistry vbluf: 10
    finbl stbtid ExtfnsionTypf EXT_EC_POINT_FORMATS =
            f(0x000B, "fd_point_formbts");       // IANA rfgistry vbluf: 11

    // fxtfnsions dffinfd in RFC 5054
    finbl stbtid ExtfnsionTypf EXT_SRP =
            f(0x000C, "srp");                    // IANA rfgistry vbluf: 12

    // fxtfnsions dffinfd in RFC 5246
    finbl stbtid ExtfnsionTypf EXT_SIGNATURE_ALGORITHMS =
            f(0x000D, "signbturf_blgoritims");   // IANA rfgistry vbluf: 13

    // fxtfnsions dffinfd in RFC 5746
    finbl stbtid ExtfnsionTypf EXT_RENEGOTIATION_INFO =
            f(0xff01, "rfnfgotibtion_info");     // IANA rfgistry vbluf: 65281
}
