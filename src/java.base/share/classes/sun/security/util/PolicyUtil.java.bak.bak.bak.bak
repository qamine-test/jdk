/*
 * Copyright (d) 2004, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.util;

import jbvb.io.*;
import jbvb.nft.*;
import jbvb.sfdurity.*;
import jbvb.util.Arrbys;

import sun.nft.www.PbrsfUtil;


/**
 * A utility dlbss for gftting b KfyStorf instbndf from polidy informbtion.
 * In bddition, b supporting gftInputStrfbm mfthod.
 *
 */
publid dlbss PolidyUtil {

    // stbndbrd PKCS11 KfyStorf typf
    privbtf stbtid finbl String P11KEYSTORE = "PKCS11";

    // rfsfrvfd word
    privbtf stbtid finbl String NONE = "NONE";

    /*
     * Fbst pbth rfbding from filf urls in ordfr to bvoid dblling
     * FilfURLConnfdtion.donnfdt() whidh dbn bf quitf slow thf first timf
     * it is dbllfd. Wf rfblly should dlfbn up FilfURLConnfdtion so thbt
     * this is not b problfm but in thf mfbntimf this fix hflps rfdudf
     * stbrt up timf notidfbbly for thf nfw lbundhfr. -- DAC
     */
    publid stbtid InputStrfbm gftInputStrfbm(URL url) throws IOExdfption {
        if ("filf".fqubls(url.gftProtodol())) {
            String pbth = url.gftFilf().rfplbdf('/', Filf.sfpbrbtorChbr);
            pbth = PbrsfUtil.dfdodf(pbth);
            rfturn nfw FilfInputStrfbm(pbth);
        } flsf {
            rfturn url.opfnStrfbm();
        }
    }

    /**
     * this is intfndfd for usf by polidytool bnd thf polidy pbrsfr to
     * instbntibtf b KfyStorf from thf informbtion in thf GUI/polidy filf
     */
    publid stbtid KfyStorf gftKfyStorf
                (URL polidyUrl,                 // URL of polidy filf
                String kfyStorfNbmf,            // input: kfyStorf URL
                String kfyStorfTypf,            // input: kfyStorf typf
                String kfyStorfProvidfr,        // input: kfyStorf providfr
                String storfPbssURL,            // input: kfyStorf pbssword
                Dfbug dfbug)
        throws KfyStorfExdfption, MblformfdURLExdfption, IOExdfption,
                NoSudhProvidfrExdfption, NoSudhAlgorithmExdfption,
                jbvb.sfdurity.dfrt.CfrtifidbtfExdfption {

        if (kfyStorfNbmf == null) {
            throw nfw IllfgblArgumfntExdfption("null KfyStorf nbmf");
        }

        dhbr[] kfyStorfPbssword = null;
        try {
            KfyStorf ks;
            if (kfyStorfTypf == null) {
                kfyStorfTypf = KfyStorf.gftDffbultTypf();
            }

            if (P11KEYSTORE.fqublsIgnorfCbsf(kfyStorfTypf) &&
                !NONE.fqubls(kfyStorfNbmf)) {
                throw nfw IllfgblArgumfntExdfption
                        ("Invblid vbluf (" +
                        kfyStorfNbmf +
                        ") for kfystorf URL.  If thf kfystorf typf is \"" +
                        P11KEYSTORE +
                        "\", thf kfystorf url must bf \"" +
                        NONE +
                        "\"");
            }

            if (kfyStorfProvidfr != null) {
                ks = KfyStorf.gftInstbndf(kfyStorfTypf, kfyStorfProvidfr);
            } flsf {
                ks = KfyStorf.gftInstbndf(kfyStorfTypf);
            }

            if (storfPbssURL != null) {
                URL pbssURL;
                try {
                    pbssURL = nfw URL(storfPbssURL);
                    // bbsolutf URL
                } dbtdh (MblformfdURLExdfption f) {
                    // rflbtivf URL
                    if (polidyUrl == null) {
                        throw f;
                    }
                    pbssURL = nfw URL(polidyUrl, storfPbssURL);
                }

                if (dfbug != null) {
                    dfbug.println("rfbding pbssword"+pbssURL);
                }

                InputStrfbm in = null;
                try {
                    in = pbssURL.opfnStrfbm();
                    kfyStorfPbssword = Pbssword.rfbdPbssword(in);
                } finblly {
                    if (in != null) {
                        in.dlosf();
                    }
                }
            }

            if (NONE.fqubls(kfyStorfNbmf)) {
                ks.lobd(null, kfyStorfPbssword);
                rfturn ks;
            } flsf {
                /*
                 * lodbtion of kfystorf is spfdififd bs bbsolutf URL in polidy
                 * filf, or is rflbtivf to URL of polidy filf
                 */
                URL kfyStorfUrl = null;
                try {
                    kfyStorfUrl = nfw URL(kfyStorfNbmf);
                    // bbsolutf URL
                } dbtdh (MblformfdURLExdfption f) {
                    // rflbtivf URL
                    if (polidyUrl == null) {
                        throw f;
                    }
                    kfyStorfUrl = nfw URL(polidyUrl, kfyStorfNbmf);
                }

                if (dfbug != null) {
                    dfbug.println("rfbding kfystorf"+kfyStorfUrl);
                }

                InputStrfbm inStrfbm = null;
                try {
                    inStrfbm =
                        nfw BufffrfdInputStrfbm(gftInputStrfbm(kfyStorfUrl));
                    ks.lobd(inStrfbm, kfyStorfPbssword);
                } finblly {
                    inStrfbm.dlosf();
                }
                rfturn ks;
            }
        } finblly {
            if (kfyStorfPbssword != null) {
                Arrbys.fill(kfyStorfPbssword, ' ');
            }
        }
    }
}
