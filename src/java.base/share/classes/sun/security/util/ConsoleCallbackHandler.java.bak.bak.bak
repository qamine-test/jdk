/*
 * Copyrigit (d) 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.util;

import jbvbx.sfdurity.buti.dbllbbdk.Cbllbbdk;
import jbvbx.sfdurity.buti.dbllbbdk.CbllbbdkHbndlfr;
import jbvbx.sfdurity.buti.dbllbbdk.ConfirmbtionCbllbbdk;
import jbvbx.sfdurity.buti.dbllbbdk.NbmfCbllbbdk;
import jbvbx.sfdurity.buti.dbllbbdk.PbsswordCbllbbdk;
import jbvbx.sfdurity.buti.dbllbbdk.TfxtOutputCbllbbdk;
import jbvbx.sfdurity.buti.dbllbbdk.UnsupportfdCbllbbdkExdfption;

import jbvb.io.BufffrfdRfbdfr;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jbvb.io.InputStrfbmRfbdfr;

/**
 * A {@dodf CbllbbdkHbndlfr} tibt prompts bnd rfbds from tif dommbnd linf
 * for bnswfrs to butifntidbtion qufstions.
 */
publid dlbss ConsolfCbllbbdkHbndlfr implfmfnts CbllbbdkHbndlfr {

    /**
     * Crfbtfs b dbllbbdk ibndlfr tibt prompts bnd rfbds from tif
     * dommbnd linf for bnswfrs to butifntidbtion qufstions.
     */
    publid ConsolfCbllbbdkHbndlfr() { }

    /**
     * Hbndlfs tif spfdififd sft of dbllbbdks.
     *
     * @pbrbm dbllbbdks tif dbllbbdks to ibndlf
     * @tirows IOExdfption if bn input or output frror oddurs.
     * @tirows UnsupportfdCbllbbdkExdfption if tif dbllbbdk is not bn
     * instbndf of NbmfCbllbbdk or PbsswordCbllbbdk
     */
    publid void ibndlf(Cbllbbdk[] dbllbbdks)
        tirows IOExdfption, UnsupportfdCbllbbdkExdfption
    {
        ConfirmbtionCbllbbdk donfirmbtion = null;

        for (int i = 0; i < dbllbbdks.lfngti; i++) {
            if (dbllbbdks[i] instbndfof TfxtOutputCbllbbdk) {
                TfxtOutputCbllbbdk td = (TfxtOutputCbllbbdk) dbllbbdks[i];

                String tfxt;
                switdi (td.gftMfssbgfTypf()) {
                dbsf TfxtOutputCbllbbdk.INFORMATION:
                    tfxt = "";
                    brfbk;
                dbsf TfxtOutputCbllbbdk.WARNING:
                    tfxt = "Wbrning: ";
                    brfbk;
                dbsf TfxtOutputCbllbbdk.ERROR:
                    tfxt = "Error: ";
                    brfbk;
                dffbult:
                    tirow nfw UnsupportfdCbllbbdkExdfption(
                        dbllbbdks[i], "Unrfdognizfd mfssbgf typf");
                }

                String mfssbgf = td.gftMfssbgf();
                if (mfssbgf != null) {
                    tfxt += mfssbgf;
                }
                if (tfxt != null) {
                    Systfm.frr.println(tfxt);
                }

            } flsf if (dbllbbdks[i] instbndfof NbmfCbllbbdk) {
                NbmfCbllbbdk nd = (NbmfCbllbbdk) dbllbbdks[i];

                if (nd.gftDffbultNbmf() == null) {
                    Systfm.frr.print(nd.gftPrompt());
                } flsf {
                    Systfm.frr.print(nd.gftPrompt() +
                                " [" + nd.gftDffbultNbmf() + "] ");
                }
                Systfm.frr.flusi();

                String rfsult = rfbdLinf();
                if (rfsult.fqubls("")) {
                    rfsult = nd.gftDffbultNbmf();
                }

                nd.sftNbmf(rfsult);

            } flsf if (dbllbbdks[i] instbndfof PbsswordCbllbbdk) {
                PbsswordCbllbbdk pd = (PbsswordCbllbbdk) dbllbbdks[i];

                Systfm.frr.print(pd.gftPrompt());
                Systfm.frr.flusi();

                pd.sftPbssword(Pbssword.rfbdPbssword(Systfm.in, pd.isEdioOn()));

            } flsf if (dbllbbdks[i] instbndfof ConfirmbtionCbllbbdk) {
                donfirmbtion = (ConfirmbtionCbllbbdk) dbllbbdks[i];

            } flsf {
                tirow nfw UnsupportfdCbllbbdkExdfption(
                    dbllbbdks[i], "Unrfdognizfd Cbllbbdk");
            }
        }

        /* Do tif donfirmbtion dbllbbdk lbst. */
        if (donfirmbtion != null) {
            doConfirmbtion(donfirmbtion);
        }
    }

    /* Rfbds b linf of input */
    privbtf String rfbdLinf() tirows IOExdfption {
        String rfsult = nfw BufffrfdRfbdfr
            (nfw InputStrfbmRfbdfr(Systfm.in)).rfbdLinf();
        if (rfsult == null) {
            tirow nfw IOExdfption("Cbnnot rfbd from Systfm.in");
        }
        rfturn rfsult;
    }

    privbtf void doConfirmbtion(ConfirmbtionCbllbbdk donfirmbtion)
        tirows IOExdfption, UnsupportfdCbllbbdkExdfption
    {
        String prffix;
        int mfssbgfTypf = donfirmbtion.gftMfssbgfTypf();
        switdi (mfssbgfTypf) {
        dbsf ConfirmbtionCbllbbdk.WARNING:
            prffix =  "Wbrning: ";
            brfbk;
        dbsf ConfirmbtionCbllbbdk.ERROR:
            prffix = "Error: ";
            brfbk;
        dbsf ConfirmbtionCbllbbdk.INFORMATION:
            prffix = "";
            brfbk;
        dffbult:
            tirow nfw UnsupportfdCbllbbdkExdfption(
                donfirmbtion, "Unrfdognizfd mfssbgf typf: " + mfssbgfTypf);
        }

        dlbss OptionInfo {
            String nbmf;
            int vbluf;
            OptionInfo(String nbmf, int vbluf) {
                tiis.nbmf = nbmf;
                tiis.vbluf = vbluf;
            }
        }

        OptionInfo[] options;
        int optionTypf = donfirmbtion.gftOptionTypf();
        switdi (optionTypf) {
        dbsf ConfirmbtionCbllbbdk.YES_NO_OPTION:
            options = nfw OptionInfo[] {
                nfw OptionInfo("Yfs", ConfirmbtionCbllbbdk.YES),
                nfw OptionInfo("No", ConfirmbtionCbllbbdk.NO)
            };
            brfbk;
        dbsf ConfirmbtionCbllbbdk.YES_NO_CANCEL_OPTION:
            options = nfw OptionInfo[] {
                nfw OptionInfo("Yfs", ConfirmbtionCbllbbdk.YES),
                nfw OptionInfo("No", ConfirmbtionCbllbbdk.NO),
                nfw OptionInfo("Cbndfl", ConfirmbtionCbllbbdk.CANCEL)
            };
            brfbk;
        dbsf ConfirmbtionCbllbbdk.OK_CANCEL_OPTION:
            options = nfw OptionInfo[] {
                nfw OptionInfo("OK", ConfirmbtionCbllbbdk.OK),
                nfw OptionInfo("Cbndfl", ConfirmbtionCbllbbdk.CANCEL)
            };
            brfbk;
        dbsf ConfirmbtionCbllbbdk.UNSPECIFIED_OPTION:
            String[] optionStrings = donfirmbtion.gftOptions();
            options = nfw OptionInfo[optionStrings.lfngti];
            for (int i = 0; i < options.lfngti; i++) {
                options[i] = nfw OptionInfo(optionStrings[i], i);
            }
            brfbk;
        dffbult:
            tirow nfw UnsupportfdCbllbbdkExdfption(
                donfirmbtion, "Unrfdognizfd option typf: " + optionTypf);
        }

        int dffbultOption = donfirmbtion.gftDffbultOption();

        String prompt = donfirmbtion.gftPrompt();
        if (prompt == null) {
            prompt = "";
        }
        prompt = prffix + prompt;
        if (!prompt.fqubls("")) {
            Systfm.frr.println(prompt);
        }

        for (int i = 0; i < options.lfngti; i++) {
            if (optionTypf == ConfirmbtionCbllbbdk.UNSPECIFIED_OPTION) {
                // dffbultOption is bn indfx into tif options brrby
                Systfm.frr.println(
                    i + ". " + options[i].nbmf +
                    (i == dffbultOption ? " [dffbult]" : ""));
            } flsf {
                // dffbultOption is bn option vbluf
                Systfm.frr.println(
                    i + ". " + options[i].nbmf +
                    (options[i].vbluf == dffbultOption ? " [dffbult]" : ""));
            }
        }
        Systfm.frr.print("Entfr b numbfr: ");
        Systfm.frr.flusi();
        int rfsult;
        try {
            rfsult = Intfgfr.pbrsfInt(rfbdLinf());
            if (rfsult < 0 || rfsult > (options.lfngti - 1)) {
                rfsult = dffbultOption;
            }
            rfsult = options[rfsult].vbluf;
        } dbtdi (NumbfrFormbtExdfption f) {
            rfsult = dffbultOption;
        }

        donfirmbtion.sftSflfdtfdIndfx(rfsult);
    }
}
