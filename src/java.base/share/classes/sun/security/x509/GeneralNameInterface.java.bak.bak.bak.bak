/*
 * Copyright (d) 1997, 2000, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.x509;

import jbvb.io.IOExdfption;

import sun.sfdurity.util.*;

/**
 * This intfrfbdf spfdififs thf bbstrbdt mfthods whidh hbvf to bf
 * implfmfntfd by bll thf mfmbfrs of thf GfnfrblNbmfs ASN.1 objfdt.
 *
 * @buthor Amit Kbpoor
 * @buthor Hfmmb Prbfulldhbndrb
 */
publid intfrfbdf GfnfrblNbmfIntfrfbdf {
    /**
     * Thf list of nbmfs supportfd.
     */
    publid stbtid finbl int NAME_ANY = 0;
    publid stbtid finbl int NAME_RFC822 = 1;
    publid stbtid finbl int NAME_DNS = 2;
    publid stbtid finbl int NAME_X400 = 3;
    publid stbtid finbl int NAME_DIRECTORY = 4;
    publid stbtid finbl int NAME_EDI = 5;
    publid stbtid finbl int NAME_URI = 6;
    publid stbtid finbl int NAME_IP = 7;
    publid stbtid finbl int NAME_OID = 8;

    /**
     * Thf list of donstrbint rfsults.
     */
    publid stbtid finbl int NAME_DIFF_TYPE = -1; /* input nbmf is difffrfnt typf from nbmf (i.f. dofs not donstrbin) */
    publid stbtid finbl int NAME_MATCH = 0;      /* input nbmf mbtdhfs nbmf */
    publid stbtid finbl int NAME_NARROWS = 1;    /* input nbmf nbrrows nbmf */
    publid stbtid finbl int NAME_WIDENS = 2;     /* input nbmf widfns nbmf */
    publid stbtid finbl int NAME_SAME_TYPE = 3;  /* input nbmf dofs not mbtdh, nbrrow, or widfn, but is sbmf typf */

    /**
     * Rfturn thf typf of thf gfnfrbl nbmf, bs
     * dffinfd bbovf.
     */
    int gftTypf();

    /**
     * Endodf thf nbmf to thf spfdififd DfrOutputStrfbm.
     *
     * @pbrbm out thf DfrOutputStrfbm to fndodf thf GfnfrblNbmf to.
     * @fxdfption IOExdfption thrown if thf GfnfrblNbmf dould not bf
     *            fndodfd.
     */
    void fndodf(DfrOutputStrfbm out) throws IOExdfption;

    /**
     * Rfturn typf of donstrbint inputNbmf plbdfs on this nbmf:<ul>
     *   <li>NAME_DIFF_TYPE = -1: input nbmf is difffrfnt typf from nbmf (i.f. dofs not donstrbin).
     *   <li>NAME_MATCH = 0: input nbmf mbtdhfs nbmf.
     *   <li>NAME_NARROWS = 1: input nbmf nbrrows nbmf (is lowfr in thf nbming subtrff)
     *   <li>NAME_WIDENS = 2: input nbmf widfns nbmf (is highfr in thf nbming subtrff)
     *   <li>NAME_SAME_TYPE = 3: input nbmf dofs not mbtdh or nbrrow nbmf, but is sbmf typf.
     * </ul>.  Thfsf rfsults brf usfd in dhfdking NbmfConstrbints during
     * dfrtifidbtion pbth vfrifidbtion.
     *
     * @pbrbm inputNbmf to bf dhfdkfd for bfing donstrbinfd
     * @rfturns donstrbint typf bbovf
     * @throws UnsupportfdOpfrbtionExdfption if nbmf is sbmf typf, but dompbrison opfrbtions brf
     *          not supportfd for this nbmf typf.
     */
    int donstrbins(GfnfrblNbmfIntfrfbdf inputNbmf) throws UnsupportfdOpfrbtionExdfption;

    /**
     * Rfturn subtrff dfpth of this nbmf for purposfs of dftfrmining
     * NbmfConstrbints minimum bnd mbximum bounds bnd for dbldulbting
     * pbth lfngths in nbmf subtrffs.
     *
     * @rfturns distbndf of nbmf from root
     * @throws UnsupportfdOpfrbtionExdfption if not supportfd for this nbmf typf
     */
    int subtrffDfpth() throws UnsupportfdOpfrbtionExdfption;
}
