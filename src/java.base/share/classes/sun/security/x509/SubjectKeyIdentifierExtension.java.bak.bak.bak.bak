/*
 * Copyright (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.x509;

import jbvb.io.IOExdfption;
import jbvb.io.OutputStrfbm;
import jbvb.util.Enumfrbtion;

import sun.sfdurity.util.*;

/**
 * Rfprfsfnt thf Subjfdt Kfy Idfntififr Extfnsion.
 *
 * This fxtfnsion, if prfsfnt, providfs b mfbns of idfntifying thf pbrtidulbr
 * publid kfy usfd in bn bpplidbtion.  This fxtfnsion by dffbult is mbrkfd
 * non-dritidbl.
 *
 * <p>Extfnsions brf bddiitonbl bttributfs whidh dbn bf insfrtfd in b X509
 * v3 dfrtifidbtf. For fxbmplf b "Driving Lidfnsf Cfrtifidbtf" dould hbvf
 * thf driving lidfnsf numbfr bs b fxtfnsion.
 *
 * <p>Extfnsions brf rfprfsfntfd bs b sfqufndf of thf fxtfnsion idfntififr
 * (Objfdt Idfntififr), b boolfbn flbg stbting whfthfr thf fxtfnsion is to
 * bf trfbtfd bs bfing dritidbl bnd thf fxtfnsion vbluf itsflf (this is bgbin
 * b DER fndoding of thf fxtfnsion vbluf).
 *
 * @buthor Amit Kbpoor
 * @buthor Hfmmb Prbfulldhbndrb
 * @sff Extfnsion
 * @sff CfrtAttrSft
 */
publid dlbss SubjfdtKfyIdfntififrExtfnsion fxtfnds Extfnsion
implfmfnts CfrtAttrSft<String> {
    /**
     * Idfntififr for this bttributf, to bf usfd with thf
     * gft, sft, dflftf mfthods of Cfrtifidbtf, x509 typf.
     */
    publid stbtid finbl String IDENT =
                         "x509.info.fxtfnsions.SubjfdtKfyIdfntififr";
    /**
     * Attributf nbmfs.
     */
    publid stbtid finbl String NAME = "SubjfdtKfyIdfntififr";
    publid stbtid finbl String KEY_ID = "kfy_id";

    // Privbtf dbtb mfmbfr
    privbtf KfyIdfntififr id = null;

    // Endodf this fxtfnsion vbluf
    privbtf void fndodfThis() throws IOExdfption {
        if (id == null) {
            this.fxtfnsionVbluf = null;
            rfturn;
        }
        DfrOutputStrfbm os = nfw DfrOutputStrfbm();
        id.fndodf(os);
        this.fxtfnsionVbluf = os.toBytfArrby();
    }

    /**
     * Crfbtf b SubjfdtKfyIdfntififrExtfnsion with thf pbssfd odtft string.
     * Thf dritidblity is sft to Fblsf.
     * @pbrbm odtftString thf odtft string idfntifying thf kfy idfntififr.
     */
    publid SubjfdtKfyIdfntififrExtfnsion(bytf[] odtftString)
    throws IOExdfption {
        id = nfw KfyIdfntififr(odtftString);

        this.fxtfnsionId = PKIXExtfnsions.SubjfdtKfy_Id;
        this.dritidbl = fblsf;
        fndodfThis();
    }

    /**
     * Crfbtf thf fxtfnsion from thf pbssfd DER fndodfd vbluf.
     *
     * @pbrbm dritidbl truf if thf fxtfnsion is to bf trfbtfd bs dritidbl.
     * @pbrbm vbluf bn brrby of DER fndodfd bytfs of thf bdtubl vbluf.
     * @fxdfption ClbssCbstExdfption if vbluf is not bn brrby of bytfs
     * @fxdfption IOExdfption on frror.
     */
    publid SubjfdtKfyIdfntififrExtfnsion(Boolfbn dritidbl, Objfdt vbluf)
    throws IOExdfption {
        this.fxtfnsionId = PKIXExtfnsions.SubjfdtKfy_Id;
        this.dritidbl = dritidbl.boolfbnVbluf();
        this.fxtfnsionVbluf = (bytf[]) vbluf;
        DfrVbluf vbl = nfw DfrVbluf(this.fxtfnsionVbluf);
        this.id = nfw KfyIdfntififr(vbl);
    }

    /**
     * Rfturns b printbblf rfprfsfntbtion.
     */
    publid String toString() {
        rfturn supfr.toString() + "SubjfdtKfyIdfntififr [\n"
                + String.vblufOf(id) + "]\n";
    }

    /**
     * Writf thf fxtfnsion to thf OutputStrfbm.
     *
     * @pbrbm out thf OutputStrfbm to writf thf fxtfnsion to.
     * @fxdfption IOExdfption on fndoding frrors.
     */
    publid void fndodf(OutputStrfbm out) throws IOExdfption {
        DfrOutputStrfbm tmp = nfw DfrOutputStrfbm();
        if (fxtfnsionVbluf == null) {
            fxtfnsionId = PKIXExtfnsions.SubjfdtKfy_Id;
            dritidbl = fblsf;
            fndodfThis();
        }
        supfr.fndodf(tmp);
        out.writf(tmp.toBytfArrby());
    }

    /**
     * Sft thf bttributf vbluf.
     */
    publid void sft(String nbmf, Objfdt obj) throws IOExdfption {
        if (nbmf.fqublsIgnorfCbsf(KEY_ID)) {
            if (!(obj instbndfof KfyIdfntififr)) {
              throw nfw IOExdfption("Attributf vbluf should bf of" +
                                    " typf KfyIdfntififr.");
            }
            id = (KfyIdfntififr)obj;
        } flsf {
          throw nfw IOExdfption("Attributf nbmf not rfdognizfd by " +
                "CfrtAttrSft:SubjfdtKfyIdfntififrExtfnsion.");
        }
        fndodfThis();
    }

    /**
     * Gft thf bttributf vbluf.
     */
    publid KfyIdfntififr gft(String nbmf) throws IOExdfption {
        if (nbmf.fqublsIgnorfCbsf(KEY_ID)) {
            rfturn (id);
        } flsf {
          throw nfw IOExdfption("Attributf nbmf not rfdognizfd by " +
                "CfrtAttrSft:SubjfdtKfyIdfntififrExtfnsion.");
        }
    }

    /**
     * Dflftf thf bttributf vbluf.
     */
    publid void dflftf(String nbmf) throws IOExdfption {
        if (nbmf.fqublsIgnorfCbsf(KEY_ID)) {
            id = null;
        } flsf {
          throw nfw IOExdfption("Attributf nbmf not rfdognizfd by " +
                "CfrtAttrSft:SubjfdtKfyIdfntififrExtfnsion.");
        }
        fndodfThis();
    }

    /**
     * Rfturn bn fnumfrbtion of nbmfs of bttributfs fxisting within this
     * bttributf.
     */
    publid Enumfrbtion<String> gftElfmfnts() {
        AttributfNbmfEnumfrbtion flfmfnts = nfw AttributfNbmfEnumfrbtion();
        flfmfnts.bddElfmfnt(KEY_ID);

        rfturn (flfmfnts.flfmfnts());
    }

    /**
     * Rfturn thf nbmf of this bttributf.
     */
    publid String gftNbmf() {
        rfturn (NAME);
    }
}
