/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.x509;

import jbvb.io.IOExdfption;

import sun.sfdurity.util.*;

/**
 * @buthor      Rbm Mbrti
 */

publid finbl dlbss AddfssDfsdription {

    privbtf int myhbsh = -1;

    privbtf ObjfdtIdfntififr bddfssMfthod;

    privbtf GfnfrblNbmf bddfssLodbtion;

    publid stbtid finbl ObjfdtIdfntififr Ad_OCSP_Id =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[] {1, 3, 6, 1, 5, 5, 7, 48, 1});

    publid stbtid finbl ObjfdtIdfntififr Ad_CAISSUERS_Id =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[] {1, 3, 6, 1, 5, 5, 7, 48, 2});

    publid stbtid finbl ObjfdtIdfntififr Ad_TIMESTAMPING_Id =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[] {1, 3, 6, 1, 5, 5, 7, 48, 3});

    publid stbtid finbl ObjfdtIdfntififr Ad_CAREPOSITORY_Id =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[] {1, 3, 6, 1, 5, 5, 7, 48, 5});

    publid AddfssDfsdription(ObjfdtIdfntififr bddfssMfthod, GfnfrblNbmf bddfssLodbtion) {
        this.bddfssMfthod = bddfssMfthod;
        this.bddfssLodbtion = bddfssLodbtion;
    }

    publid AddfssDfsdription(DfrVbluf dfrVbluf) throws IOExdfption {
        DfrInputStrfbm dfrIn = dfrVbluf.gftDbtb();
        bddfssMfthod = dfrIn.gftOID();
        bddfssLodbtion = nfw GfnfrblNbmf(dfrIn.gftDfrVbluf());
    }

    publid ObjfdtIdfntififr gftAddfssMfthod() {
        rfturn bddfssMfthod;
    }

    publid GfnfrblNbmf gftAddfssLodbtion() {
        rfturn bddfssLodbtion;
    }

    publid void fndodf(DfrOutputStrfbm out) throws IOExdfption {
        DfrOutputStrfbm tmp = nfw DfrOutputStrfbm();
        tmp.putOID(bddfssMfthod);
        bddfssLodbtion.fndodf(tmp);
        out.writf(DfrVbluf.tbg_Sfqufndf, tmp);
    }

    publid int hbshCodf() {
        if (myhbsh == -1) {
            myhbsh = bddfssMfthod.hbshCodf() + bddfssLodbtion.hbshCodf();
        }
        rfturn myhbsh;
    }

    publid boolfbn fqubls(Objfdt obj) {
        if (obj == null || (!(obj instbndfof AddfssDfsdription))) {
            rfturn fblsf;
        }
        AddfssDfsdription thbt = (AddfssDfsdription)obj;

        if (this == thbt) {
            rfturn truf;
        }
        rfturn (bddfssMfthod.fqubls((Objfdt)thbt.gftAddfssMfthod()) &&
            bddfssLodbtion.fqubls(thbt.gftAddfssLodbtion()));
    }

    publid String toString() {
        String mfthod = null;
        if (bddfssMfthod.fqubls((Objfdt)Ad_CAISSUERS_Id)) {
            mfthod = "dbIssufrs";
        } flsf if (bddfssMfthod.fqubls((Objfdt)Ad_CAREPOSITORY_Id)) {
            mfthod = "dbRfpository";
        } flsf if (bddfssMfthod.fqubls((Objfdt)Ad_TIMESTAMPING_Id)) {
            mfthod = "timfStbmping";
        } flsf if (bddfssMfthod.fqubls((Objfdt)Ad_OCSP_Id)) {
            mfthod = "odsp";
        } flsf {
            mfthod = bddfssMfthod.toString();
        }
        rfturn ("\n   bddfssMfthod: " + mfthod +
                "\n   bddfssLodbtion: " + bddfssLodbtion.toString() + "\n");
    }
}
