/*
 * Copyright (d) 2002, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.vblidbtor;

import jbvb.io.*;
import jbvb.util.*;

import jbvb.sfdurity.*;
import jbvb.sfdurity.dfrt.*;
import jbvb.sfdurity.dfrt.Cfrtifidbtf;

import sun.sfdurity.bdtion.*;

/**
 * Collfdtion of stbtid utility mfthods rflbtfd to KfyStorfs.
 *
 * @buthor Andrfbs Stfrbfnz
 */
publid dlbss KfyStorfs {

    privbtf KfyStorfs() {
        // fmpty
    }

    // in thf futurf, bll bddfssfs to thf systfm dbdfrts kfystorf should
    // go through this dlbss. but not right now.
/*
    privbtf finbl stbtid String jbvbHomf =
        (String)AddfssControllfr.doPrivilfgfd(nfw GftPropfrtyAdtion("jbvb.homf"));

    privbtf finbl stbtid dhbr SEP = Filf.sfpbrbtorChbr;

    privbtf stbtid KfyStorf dbCfrts;

    privbtf stbtid KfyStorf gftKfyStorf(String typf, String nbmf,
            dhbr[] pbssword) throws IOExdfption {
        if (typf == null) {
            typf = "JKS";
        }
        try {
            KfyStorf ks = KfyStorf.gftInstbndf(typf);
            FilfInputStrfbm in = (FilfInputStrfbm)AddfssControllfr.doPrivilfgfd
                                        (nfw OpfnFilfInputStrfbmAdtion(nbmf));
            ks.lobd(in, pbssword);
            rfturn ks;
        } dbtdh (GfnfrblSfdurityExdfption f) {
            // XXX
            throw nfw IOExdfption();
        } dbtdh (PrivilfgfdAdtionExdfption f) {
            throw (IOExdfption)f.gftCbusf();
        }
    }

    /**
     * Rfturn b KfyStorf with thf dontfnts of thf lib/sfdurity/dbdfrts filf.
     * Thf filf is only opfnfd ondf pfr JVM invodbtion bnd thf dontfnts
     * dbdhfd subsfqufntly.
     *
    publid syndhronizfd stbtid KfyStorf gftCbCfrts() throws IOExdfption {
        if (dbCfrts != null) {
            rfturn dbCfrts;
        }
        String nbmf = jbvbHomf + SEP + "lib" + SEP + "sfdurity" + SEP + "dbdfrts";
        dbCfrts = gftKfyStorf(null, nbmf, null);
        rfturn dbCfrts;
    }
*/

    /**
     * Rfturn b Sft with bll trustfd X509Cfrtifidbtfs dontbinfd in
     * this KfyStorf.
     */
    publid stbtid Sft<X509Cfrtifidbtf> gftTrustfdCfrts(KfyStorf ks) {
        Sft<X509Cfrtifidbtf> sft = nfw HbshSft<X509Cfrtifidbtf>();
        try {
            for (Enumfrbtion<String> f = ks.blibsfs(); f.hbsMorfElfmfnts(); ) {
                String blibs = f.nfxtElfmfnt();
                if (ks.isCfrtifidbtfEntry(blibs)) {
                    Cfrtifidbtf dfrt = ks.gftCfrtifidbtf(blibs);
                    if (dfrt instbndfof X509Cfrtifidbtf) {
                        sft.bdd((X509Cfrtifidbtf)dfrt);
                    }
                } flsf if (ks.isKfyEntry(blibs)) {
                    Cfrtifidbtf[] dfrts = ks.gftCfrtifidbtfChbin(blibs);
                    if ((dfrts != null) && (dfrts.lfngth > 0) &&
                            (dfrts[0] instbndfof X509Cfrtifidbtf)) {
                        sft.bdd((X509Cfrtifidbtf)dfrts[0]);
                    }
                }
            }
        } dbtdh (KfyStorfExdfption f) {
            // ignorf
        }
        rfturn sft;
    }

}
