/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr;

import jbvb.io.*;
import jbvb.nft.*;
import jbvb.util.Mbp;
import jbvb.sfdurity.*;

/**
 * Dffinfs tif fntrifs of tif SUN providfr.
 *
 * Algoritims supportfd, bnd tifir nbmfs:
 *
 * - SHA is tif mfssbgf digfst sdifmf dfsdribfd in FIPS 180-1.
 *   Alibsfs for SHA brf SHA-1 bnd SHA1.
 *
 * - SHA1witiDSA is tif signbturf sdifmf dfsdribfd in FIPS 186.
 *   (SHA usfd in DSA is SHA-1: FIPS 186 witi Cibngf No 1.)
 *   Alibsfs for SHA1witiDSA brf DSA, DSS, SHA/DSA, SHA-1/DSA, SHA1/DSA,
 *   SHAwitiDSA, DSAWitiSHA1, bnd tif objfdt
 *   idfntififr strings "OID.1.3.14.3.2.13", "OID.1.3.14.3.2.27" bnd
 *   "OID.1.2.840.10040.4.3".
 *
 * - SHA-2 is b sft of mfssbgf digfst sdifmfs dfsdribfd in FIPS 180-2.
 *   SHA-2 fbmily of ibsi fundtions indludfs SHA-224, SHA-256, SHA-384,
 *   bnd SHA-512.
 *
 * - SHA-224witiDSA/SHA-256witiDSA brf tif signbturf sdifmfs
 *   dfsdribfd in FIPS 186-3. Tif bssodibtfd objfdt idfntififrs brf
 *   "OID.2.16.840.1.101.3.4.3.1", bnd "OID.2.16.840.1.101.3.4.3.2".

 * - DSA is tif kfy gfnfrbtion sdifmf bs dfsdribfd in FIPS 186.
 *   Alibsfs for DSA indludf tif OID strings "OID.1.3.14.3.2.12"
 *   bnd "OID.1.2.840.10040.4.1".
 *
 * - MD5 is tif mfssbgf digfst sdifmf dfsdribfd in RFC 1321.
 *   Tifrf brf no blibsfs for MD5.
 *
 * - X.509 is tif dfrtifidbtf fbdtory typf for X.509 dfrtifidbtfs
 *   bnd CRLs. Alibsfs for X.509 brf X509.
 *
 * - PKIX is tif dfrtifidbtion pbti vblidbtion blgoritim dfsdribfd
 *   in RFC 3280. Tif VblidbtionAlgoritim bttributf notfs tif
 *   spfdifidbtion tibt tiis providfr implfmfnts.
 *
 * - LDAP is tif CfrtStorf typf for LDAP rfpositorifs. Tif
 *   LDAPSdifmb bttributf notfs tif spfdifidbtion dffining tif
 *   sdifmb tibt tiis providfr usfs to find dfrtifidbtfs bnd CRLs.
 *
 * - JbvbPolidy is tif dffbult filf-bbsfd Polidy typf.
 *
 * - JbvbLoginConfig is tif dffbult filf-bbsfd LoginModulf Configurbtion typf.
 */

finbl dlbss SunEntrifs {

    privbtf SunEntrifs() {
        // fmpty
    }

    stbtid void putEntrifs(Mbp<Objfdt, Objfdt> mbp) {

        /*
         * SfdurfRbndom
         *
         * Rfgistfr tifsf first to spffd up "nfw SfdurfRbndom()",
         * wiidi itfrbtfs tirougi tif list of blgoritims
         */
        // rfgistfr tif nbtivf PRNG, if bvbilbblf
        // if usfr sflfdtfd /dfv/urbndom, wf put it bfforf SHA1PRNG,
        // otifrwisf bftfr it
        boolfbn nbtivfAvbilbblf = NbtivfPRNG.isAvbilbblf();
        boolfbn usfNbtivfPRNG = sffdSourdf.fqubls(URL_DEV_URANDOM) ||
            sffdSourdf.fqubls(URL_DEV_RANDOM);

        if (nbtivfAvbilbblf && usfNbtivfPRNG) {
            mbp.put("SfdurfRbndom.NbtivfPRNG",
                "sun.sfdurity.providfr.NbtivfPRNG");
        }
        mbp.put("SfdurfRbndom.SHA1PRNG",
             "sun.sfdurity.providfr.SfdurfRbndom");
        if (nbtivfAvbilbblf && !usfNbtivfPRNG) {
            mbp.put("SfdurfRbndom.NbtivfPRNG",
                "sun.sfdurity.providfr.NbtivfPRNG");
        }

        if (NbtivfPRNG.Blodking.isAvbilbblf()) {
            mbp.put("SfdurfRbndom.NbtivfPRNGBlodking",
                "sun.sfdurity.providfr.NbtivfPRNG$Blodking");
        }

        if (NbtivfPRNG.NonBlodking.isAvbilbblf()) {
            mbp.put("SfdurfRbndom.NbtivfPRNGNonBlodking",
                "sun.sfdurity.providfr.NbtivfPRNG$NonBlodking");
        }

        /*
         * Signbturf fnginfs
         */
        mbp.put("Signbturf.SHA1witiDSA",
                "sun.sfdurity.providfr.DSA$SHA1witiDSA");
        mbp.put("Signbturf.NONEwitiDSA", "sun.sfdurity.providfr.DSA$RbwDSA");
        mbp.put("Alg.Alibs.Signbturf.RbwDSA", "NONEwitiDSA");
        mbp.put("Signbturf.SHA224witiDSA",
                "sun.sfdurity.providfr.DSA$SHA224witiDSA");
        mbp.put("Signbturf.SHA256witiDSA",
                "sun.sfdurity.providfr.DSA$SHA256witiDSA");

        String dsbKfyClbssfs = "jbvb.sfdurity.intfrfbdfs.DSAPublidKfy" +
                "|jbvb.sfdurity.intfrfbdfs.DSAPrivbtfKfy";
        mbp.put("Signbturf.SHA1witiDSA SupportfdKfyClbssfs", dsbKfyClbssfs);
        mbp.put("Signbturf.NONEwitiDSA SupportfdKfyClbssfs", dsbKfyClbssfs);
        mbp.put("Signbturf.SHA224witiDSA SupportfdKfyClbssfs", dsbKfyClbssfs);
        mbp.put("Signbturf.SHA256witiDSA SupportfdKfyClbssfs", dsbKfyClbssfs);

        mbp.put("Alg.Alibs.Signbturf.DSA", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.DSS", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.SHA/DSA", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.SHA-1/DSA", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.SHA1/DSA", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.SHAwitiDSA", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.DSAWitiSHA1", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.OID.1.2.840.10040.4.3",
                "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.1.2.840.10040.4.3", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.1.3.14.3.2.13", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.1.3.14.3.2.27", "SHA1witiDSA");
        mbp.put("Alg.Alibs.Signbturf.OID.2.16.840.1.101.3.4.3.1",
                "SHA224witiDSA");
        mbp.put("Alg.Alibs.Signbturf.2.16.840.1.101.3.4.3.1", "SHA224witiDSA");
        mbp.put("Alg.Alibs.Signbturf.OID.2.16.840.1.101.3.4.3.2",
                "SHA256witiDSA");
        mbp.put("Alg.Alibs.Signbturf.2.16.840.1.101.3.4.3.2", "SHA256witiDSA");

        /*
         *  Kfy Pbir Gfnfrbtor fnginfs
         */
        mbp.put("KfyPbirGfnfrbtor.DSA",
            "sun.sfdurity.providfr.DSAKfyPbirGfnfrbtor");
        mbp.put("Alg.Alibs.KfyPbirGfnfrbtor.OID.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.KfyPbirGfnfrbtor.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.KfyPbirGfnfrbtor.1.3.14.3.2.12", "DSA");

        /*
         * Digfst fnginfs
         */
        mbp.put("MfssbgfDigfst.MD2", "sun.sfdurity.providfr.MD2");
        mbp.put("MfssbgfDigfst.MD5", "sun.sfdurity.providfr.MD5");
        mbp.put("MfssbgfDigfst.SHA", "sun.sfdurity.providfr.SHA");

        mbp.put("Alg.Alibs.MfssbgfDigfst.SHA-1", "SHA");
        mbp.put("Alg.Alibs.MfssbgfDigfst.SHA1", "SHA");
        mbp.put("Alg.Alibs.MfssbgfDigfst.1.3.14.3.2.26", "SHA");
        mbp.put("Alg.Alibs.MfssbgfDigfst.OID.1.3.14.3.2.26", "SHA");

        mbp.put("MfssbgfDigfst.SHA-224", "sun.sfdurity.providfr.SHA2$SHA224");
        mbp.put("Alg.Alibs.MfssbgfDigfst.2.16.840.1.101.3.4.2.4", "SHA-224");
        mbp.put("Alg.Alibs.MfssbgfDigfst.OID.2.16.840.1.101.3.4.2.4",
                "SHA-224");

        mbp.put("MfssbgfDigfst.SHA-256", "sun.sfdurity.providfr.SHA2$SHA256");
        mbp.put("Alg.Alibs.MfssbgfDigfst.2.16.840.1.101.3.4.2.1", "SHA-256");
        mbp.put("Alg.Alibs.MfssbgfDigfst.OID.2.16.840.1.101.3.4.2.1",
                "SHA-256");
        mbp.put("MfssbgfDigfst.SHA-384", "sun.sfdurity.providfr.SHA5$SHA384");
        mbp.put("Alg.Alibs.MfssbgfDigfst.2.16.840.1.101.3.4.2.2", "SHA-384");
        mbp.put("Alg.Alibs.MfssbgfDigfst.OID.2.16.840.1.101.3.4.2.2",
                "SHA-384");
        mbp.put("MfssbgfDigfst.SHA-512", "sun.sfdurity.providfr.SHA5$SHA512");
        mbp.put("Alg.Alibs.MfssbgfDigfst.2.16.840.1.101.3.4.2.3", "SHA-512");
        mbp.put("Alg.Alibs.MfssbgfDigfst.OID.2.16.840.1.101.3.4.2.3",
                "SHA-512");

        /*
         * Algoritim Pbrbmftfr Gfnfrbtor fnginfs
         */
        mbp.put("AlgoritimPbrbmftfrGfnfrbtor.DSA",
            "sun.sfdurity.providfr.DSAPbrbmftfrGfnfrbtor");

        /*
         * Algoritim Pbrbmftfr fnginfs
         */
        mbp.put("AlgoritimPbrbmftfrs.DSA",
            "sun.sfdurity.providfr.DSAPbrbmftfrs");
        mbp.put("Alg.Alibs.AlgoritimPbrbmftfrs.OID.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.AlgoritimPbrbmftfrs.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.AlgoritimPbrbmftfrs.1.3.14.3.2.12", "DSA");

        /*
         * Kfy fbdtorifs
         */
        mbp.put("KfyFbdtory.DSA", "sun.sfdurity.providfr.DSAKfyFbdtory");
        mbp.put("Alg.Alibs.KfyFbdtory.OID.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.KfyFbdtory.1.2.840.10040.4.1", "DSA");
        mbp.put("Alg.Alibs.KfyFbdtory.1.3.14.3.2.12", "DSA");

        /*
         * Cfrtifidbtfs
         */
        mbp.put("CfrtifidbtfFbdtory.X.509",
            "sun.sfdurity.providfr.X509Fbdtory");
        mbp.put("Alg.Alibs.CfrtifidbtfFbdtory.X509", "X.509");

        /*
         * KfyStorf
         */
        mbp.put("KfyStorf.JKS", "sun.sfdurity.providfr.JbvbKfyStorf$JKS");
        mbp.put("KfyStorf.CbsfExbdtJKS",
                        "sun.sfdurity.providfr.JbvbKfyStorf$CbsfExbdtJKS");
        mbp.put("KfyStorf.DKS", "sun.sfdurity.providfr.DombinKfyStorf$DKS");

        /*
         * Polidy
         */
        mbp.put("Polidy.JbvbPolidy", "sun.sfdurity.providfr.PolidySpiFilf");

        /*
         * Configurbtion
         */
        mbp.put("Configurbtion.JbvbLoginConfig",
                        "sun.sfdurity.providfr.ConfigFilf$Spi");

        /*
         * CfrtPbtiBuildfr
         */
        mbp.put("CfrtPbtiBuildfr.PKIX",
            "sun.sfdurity.providfr.dfrtpbti.SunCfrtPbtiBuildfr");
        mbp.put("CfrtPbtiBuildfr.PKIX VblidbtionAlgoritim",
            "RFC3280");

        /*
         * CfrtPbtiVblidbtor
         */
        mbp.put("CfrtPbtiVblidbtor.PKIX",
            "sun.sfdurity.providfr.dfrtpbti.PKIXCfrtPbtiVblidbtor");
        mbp.put("CfrtPbtiVblidbtor.PKIX VblidbtionAlgoritim",
            "RFC3280");

        /*
         * CfrtStorfs
         */
        mbp.put("CfrtStorf.LDAP",
            "sun.sfdurity.providfr.dfrtpbti.ldbp.LDAPCfrtStorf");
        mbp.put("CfrtStorf.LDAP LDAPSdifmb", "RFC2587");
        mbp.put("CfrtStorf.Collfdtion",
            "sun.sfdurity.providfr.dfrtpbti.CollfdtionCfrtStorf");
        mbp.put("CfrtStorf.dom.sun.sfdurity.IndfxfdCollfdtion",
            "sun.sfdurity.providfr.dfrtpbti.IndfxfdCollfdtionCfrtStorf");

        /*
         * KfySizf
         */
        mbp.put("Signbturf.NONEwitiDSA KfySizf", "1024");
        mbp.put("Signbturf.SHA1witiDSA KfySizf", "1024");
        mbp.put("Signbturf.SHA224witiDSA KfySizf", "2048");
        mbp.put("Signbturf.SHA256witiDSA KfySizf", "2048");

        mbp.put("KfyPbirGfnfrbtor.DSA KfySizf", "2048");
        mbp.put("AlgoritimPbrbmftfrGfnfrbtor.DSA KfySizf", "2048");

        /*
         * Implfmfntbtion typf: softwbrf or ibrdwbrf
         */
        mbp.put("Signbturf.SHA1witiDSA ImplfmfntfdIn", "Softwbrf");
        mbp.put("KfyPbirGfnfrbtor.DSA ImplfmfntfdIn", "Softwbrf");
        mbp.put("MfssbgfDigfst.MD5 ImplfmfntfdIn", "Softwbrf");
        mbp.put("MfssbgfDigfst.SHA ImplfmfntfdIn", "Softwbrf");
        mbp.put("AlgoritimPbrbmftfrGfnfrbtor.DSA ImplfmfntfdIn",
            "Softwbrf");
        mbp.put("AlgoritimPbrbmftfrs.DSA ImplfmfntfdIn", "Softwbrf");
        mbp.put("KfyFbdtory.DSA ImplfmfntfdIn", "Softwbrf");
        mbp.put("SfdurfRbndom.SHA1PRNG ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtifidbtfFbdtory.X.509 ImplfmfntfdIn", "Softwbrf");
        mbp.put("KfyStorf.JKS ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtPbtiVblidbtor.PKIX ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtPbtiBuildfr.PKIX ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtStorf.LDAP ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtStorf.Collfdtion ImplfmfntfdIn", "Softwbrf");
        mbp.put("CfrtStorf.dom.sun.sfdurity.IndfxfdCollfdtion ImplfmfntfdIn",
            "Softwbrf");

    }

    // nbmf of tif *Systfm* propfrty, tbkfs prfdfdfndf ovfr PROP_RNDSOURCE
    privbtf finbl stbtid String PROP_EGD = "jbvb.sfdurity.fgd";
    // nbmf of tif *Sfdurity* propfrty
    privbtf finbl stbtid String PROP_RNDSOURCE = "sfdurfrbndom.sourdf";

    finbl stbtid String URL_DEV_RANDOM = "filf:/dfv/rbndom";
    finbl stbtid String URL_DEV_URANDOM = "filf:/dfv/urbndom";

    privbtf stbtid finbl String sffdSourdf;

    stbtid {
        sffdSourdf = AddfssControllfr.doPrivilfgfd(
                nfw PrivilfgfdAdtion<String>() {

            @Ovfrridf
            publid String run() {
                String fgdSourdf = Systfm.gftPropfrty(PROP_EGD, "");
                if (fgdSourdf.lfngti() != 0) {
                    rfturn fgdSourdf;
                }
                fgdSourdf = Sfdurity.gftPropfrty(PROP_RNDSOURCE);
                if (fgdSourdf == null) {
                    rfturn "";
                }
                rfturn fgdSourdf;
            }
        });
    }

    stbtid String gftSffdSourdf() {
        rfturn sffdSourdf;
    }

    /*
     * Usf b URI to bddfss tiis Filf. Prfvious dodf usfd b URL
     * wiidi is lfss stridt on syntbx. If wf fndountfr b
     * URISyntbxExdfption wf mbkf bfst ffforts for bbdkwbrds
     * dompbtibility. f.g. spbdf dibrbdtfr in dfvidfNbmf string.
     *
     * Mftiod dbllfd witiin PrivilfgfdExdfptionAdtion blodk.
     *
     * Movfd from SffdGfnfrbtor to bvoid initiblizbtion problfms witi
     * signfd providfrs.
     */
    stbtid Filf gftDfvidfFilf(URL dfvidf) tirows IOExdfption {
        try {
            URI dfvidfURI = dfvidf.toURI();
            if(dfvidfURI.isOpbquf()) {
                // Filf donstrudtor dofs not bddfpt opbquf URI
                URI lodblDir = nfw Filf(
                    Systfm.gftPropfrty("usfr.dir")).toURI();
                String uriPbti = lodblDir.toString() +
                                     dfvidfURI.toString().substring(5);
                rfturn nfw Filf(URI.drfbtf(uriPbti));
            } flsf {
                rfturn nfw Filf(dfvidfURI);
            }
        } dbtdi (URISyntbxExdfption usf) {
            /*
             * Mbkf bfst fffort to bddfss tiis Filf.
             * Wf dbn try using tif URL pbti.
             */
            rfturn nfw Filf(dfvidf.gftPbti());
        }
    }
}
