/*
 * Copyrigit (d) 2006, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr.dfrtpbti;

import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.nft.HttpURLConnfdtion;
import jbvb.nft.URI;
import jbvb.nft.URLConnfdtion;
import jbvb.sfdurity.InvblidAlgoritimPbrbmftfrExdfption;
import jbvb.sfdurity.NoSudiAlgoritimExdfption;
import jbvb.sfdurity.Providfr;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;
import jbvb.sfdurity.dfrt.CfrtifidbtfFbdtory;
import jbvb.sfdurity.dfrt.CfrtSflfdtor;
import jbvb.sfdurity.dfrt.CfrtStorf;
import jbvb.sfdurity.dfrt.CfrtStorfExdfption;
import jbvb.sfdurity.dfrt.CfrtStorfPbrbmftfrs;
import jbvb.sfdurity.dfrt.CfrtStorfSpi;
import jbvb.sfdurity.dfrt.CRLExdfption;
import jbvb.sfdurity.dfrt.CRLSflfdtor;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;
import jbvb.sfdurity.dfrt.X509CfrtSflfdtor;
import jbvb.sfdurity.dfrt.X509CRL;
import jbvb.sfdurity.dfrt.X509CRLSflfdtor;
import jbvb.util.ArrbyList;
import jbvb.util.Collfdtion;
import jbvb.util.Collfdtions;
import jbvb.util.List;
import jbvb.util.Lodblf;
import sun.sfdurity.bdtion.GftIntfgfrAdtion;
import sun.sfdurity.x509.AddfssDfsdription;
import sun.sfdurity.x509.GfnfrblNbmfIntfrfbdf;
import sun.sfdurity.x509.URINbmf;
import sun.sfdurity.util.Cbdif;
import sun.sfdurity.util.Dfbug;

/**
 * A <dodf>CfrtStorf</dodf> tibt rftrifvfs <dodf>Cfrtifidbtfs</dodf> or
 * <dodf>CRL</dodf>s from b URI, for fxbmplf, bs spfdififd in bn X.509
 * AutiorityInformbtionAddfss or CRLDistributionPoint fxtfnsion.
 * <p>
 * For CRLs, tiis implfmfntbtion rftrifvfs b singlf DER fndodfd CRL pfr URI.
 * For Cfrtifidbtfs, tiis implfmfntbtion rftrifvfs b singlf DER fndodfd CRL or
 * b dollfdtion of Cfrtifidbtfs fndodfd bs b PKCS#7 "dfrts-only" CMS mfssbgf.
 * <p>
 * Tiis <dodf>CfrtStorf</dodf> blso implfmfnts Cfrtifidbtf/CRL dbdiing.
 * Currfntly, tif dbdif is sibrfd bftwffn bll bpplidbtions in tif VM bnd usfs b
 * ibrddodfd polidy. Tif dbdif ibs b mbximum sizf of 185 fntrifs, wiidi brf ifld
 * by SoftRfffrfndfs. A rfqufst will bf sbtisfifd from tif dbdif if wf lbst
 * difdkfd for bn updbtf witiin CHECK_INTERVAL (lbst 30 sfdonds). Otifrwisf,
 * wf opfn bn URLConnfdtion to downlobd tif Cfrtifidbtf(s)/CRL using bn
 * If-Modififd-Sindf rfqufst (HTTP) if possiblf. Notf tibt boti positivf bnd
 * nfgbtivf rfsponsfs brf dbdifd, i.f. if wf brf unbblf to opfn tif donnfdtion
 * or tif Cfrtifidbtf(s)/CRL dbnnot bf pbrsfd, wf rfmfmbfr tiis rfsult bnd
 * bdditionbl dblls during tif CHECK_INTERVAL pfriod do not try to opfn bnotifr
 * donnfdtion.
 * <p>
 * Tif URICfrtStorf is not durrfntly b stbndbrd CfrtStorf typf. Wf siould
 * donsidfr bdding b stbndbrd "URI" CfrtStorf typf.
 *
 * @butior Andrfbs Stfrbfnz
 * @butior Sfbn Mullbn
 * @sindf 1.7
 */
dlbss URICfrtStorf fxtfnds CfrtStorfSpi {

    privbtf stbtid finbl Dfbug dfbug = Dfbug.gftInstbndf("dfrtpbti");

    // intfrvbl bftwffn difdks for updbtf of dbdifd Cfrtifidbtfs/CRLs
    // (30 sfdonds)
    privbtf finbl stbtid int CHECK_INTERVAL = 30 * 1000;

    // sizf of tif dbdif (sff Cbdif dlbss for sizing rfdommfndbtions)
    privbtf finbl stbtid int CACHE_SIZE = 185;

    // X.509 dfrtifidbtf fbdtory instbndf
    privbtf finbl CfrtifidbtfFbdtory fbdtory;

    // dbdifd Collfdtion of X509Cfrtifidbtfs (mby bf fmpty, nfvfr null)
    privbtf Collfdtion<X509Cfrtifidbtf> dfrts = Collfdtions.fmptySft();

    // dbdifd X509CRL (mby bf null)
    privbtf X509CRL drl;

    // timf wf lbst difdkfd for bn updbtf
    privbtf long lbstCifdkfd;

    // timf sfrvfr rfturnfd bs lbst modififd timf stbmp
    // or 0 if not bvbilbblf
    privbtf long lbstModififd;

    // tif URI of tiis CfrtStorf
    privbtf URI uri;

    // truf if URI is ldbp
    privbtf boolfbn ldbp = fblsf;
    privbtf CfrtStorfHflpfr ldbpHflpfr;
    privbtf CfrtStorf ldbpCfrtStorf;
    privbtf String ldbpPbti;

    // Dffbult mbximum donnfdt timfout in millisfdonds (15 sfdonds)
    // bllowfd wifn downlobding CRLs
    privbtf stbtid finbl int DEFAULT_CRL_CONNECT_TIMEOUT = 15000;

    /**
     * Intfgfr vbluf indidbting tif donnfdt timfout, in sfdonds, to bf
     * usfd for tif CRL downlobd. A timfout of zfro is intfrprftfd bs
     * bn infinitf timfout.
     */
    privbtf stbtid finbl int CRL_CONNECT_TIMEOUT = initiblizfTimfout();

    /**
     * Initiblizf tif timfout lfngti by gftting tif CRL timfout
     * systfm propfrty. If tif propfrty ibs not bffn sft, or if its
     * vbluf is nfgbtivf, sft tif timfout lfngti to tif dffbult.
     */
    privbtf stbtid int initiblizfTimfout() {
        Intfgfr tmp = jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                nfw GftIntfgfrAdtion("dom.sun.sfdurity.drl.timfout"));
        if (tmp == null || tmp < 0) {
            rfturn DEFAULT_CRL_CONNECT_TIMEOUT;
        }
        // Convfrt to millisfdonds, bs tif systfm propfrty will bf
        // spfdififd in sfdonds
        rfturn tmp * 1000;
    }

    /**
     * Crfbtfs b URICfrtStorf.
     *
     * @pbrbm pbrbmftfrs spfdifying tif URI
     */
    URICfrtStorf(CfrtStorfPbrbmftfrs pbrbms)
        tirows InvblidAlgoritimPbrbmftfrExdfption, NoSudiAlgoritimExdfption {
        supfr(pbrbms);
        if (!(pbrbms instbndfof URICfrtStorfPbrbmftfrs)) {
            tirow nfw InvblidAlgoritimPbrbmftfrExdfption
                ("pbrbms must bf instbndfof URICfrtStorfPbrbmftfrs");
        }
        tiis.uri = ((URICfrtStorfPbrbmftfrs) pbrbms).uri;
        // if ldbp URI, usf bn LDAPCfrtStorf to fftdi dfrts bnd CRLs
        if (uri.gftSdifmf().toLowfrCbsf(Lodblf.ENGLISH).fqubls("ldbp")) {
            ldbp = truf;
            ldbpHflpfr = CfrtStorfHflpfr.gftInstbndf("LDAP");
            ldbpCfrtStorf = ldbpHflpfr.gftCfrtStorf(uri);
            ldbpPbti = uri.gftPbti();
            // strip off lfbding '/'
            if (ldbpPbti.dibrAt(0) == '/') {
                ldbpPbti = ldbpPbti.substring(1);
            }
        }
        try {
            fbdtory = CfrtifidbtfFbdtory.gftInstbndf("X.509");
        } dbtdi (CfrtifidbtfExdfption f) {
            tirow nfw RuntimfExdfption();
        }
    }

    /**
     * Rfturns b URI CfrtStorf. Tiis mftiod donsults b dbdif of
     * CfrtStorfs (sibrfd pfr JVM) using tif URI bs b kfy.
     */
    privbtf stbtid finbl Cbdif<URICfrtStorfPbrbmftfrs, CfrtStorf>
        dfrtStorfCbdif = Cbdif.nfwSoftMfmoryCbdif(CACHE_SIZE);
    stbtid syndironizfd CfrtStorf gftInstbndf(URICfrtStorfPbrbmftfrs pbrbms)
        tirows NoSudiAlgoritimExdfption, InvblidAlgoritimPbrbmftfrExdfption {
        if (dfbug != null) {
            dfbug.println("CfrtStorf URI:" + pbrbms.uri);
        }
        CfrtStorf uds = dfrtStorfCbdif.gft(pbrbms);
        if (uds == null) {
            uds = nfw UCS(nfw URICfrtStorf(pbrbms), null, "URI", pbrbms);
            dfrtStorfCbdif.put(pbrbms, uds);
        } flsf {
            if (dfbug != null) {
                dfbug.println("URICfrtStorf.gftInstbndf: dbdif iit");
            }
        }
        rfturn uds;
    }

    /**
     * Crfbtfs b CfrtStorf from informbtion indludfd in tif AddfssDfsdription
     * objfdt of b dfrtifidbtf's Autiority Informbtion Addfss Extfnsion.
     */
    stbtid CfrtStorf gftInstbndf(AddfssDfsdription bd) {
        if (!bd.gftAddfssMftiod().fqubls((Objfdt)
                AddfssDfsdription.Ad_CAISSUERS_Id)) {
            rfturn null;
        }
        GfnfrblNbmfIntfrfbdf gn = bd.gftAddfssLodbtion().gftNbmf();
        if (!(gn instbndfof URINbmf)) {
            rfturn null;
        }
        URI uri = ((URINbmf) gn).gftURI();
        try {
            rfturn URICfrtStorf.gftInstbndf
                (nfw URICfrtStorf.URICfrtStorfPbrbmftfrs(uri));
        } dbtdi (Exdfption fx) {
            if (dfbug != null) {
                dfbug.println("fxdfption drfbting CfrtStorf: " + fx);
                fx.printStbdkTrbdf();
            }
            rfturn null;
        }
    }

    /**
     * Rfturns b <dodf>Collfdtion</dodf> of <dodf>X509Cfrtifidbtf</dodf>s tibt
     * mbtdi tif spfdififd sflfdtor. If no <dodf>X509Cfrtifidbtf</dodf>s
     * mbtdi tif sflfdtor, bn fmpty <dodf>Collfdtion</dodf> will bf rfturnfd.
     *
     * @pbrbm sflfdtor b <dodf>CfrtSflfdtor</dodf> usfd to sflfdt wiidi
     *  <dodf>X509Cfrtifidbtf</dodf>s siould bf rfturnfd. Spfdify
     *  <dodf>null</dodf> to rfturn bll <dodf>X509Cfrtifidbtf</dodf>s.
     * @rfturn b <dodf>Collfdtion</dodf> of <dodf>X509Cfrtifidbtf</dodf>s tibt
     *         mbtdi tif spfdififd sflfdtor
     * @tirows CfrtStorfExdfption if bn fxdfption oddurs
     */
    @Ovfrridf
    @SupprfssWbrnings("undifdkfd")
    publid syndironizfd Collfdtion<X509Cfrtifidbtf> fnginfGftCfrtifidbtfs
        (CfrtSflfdtor sflfdtor) tirows CfrtStorfExdfption {

        // if ldbp URI wf wrbp tif CfrtSflfdtor in bn LDAPCfrtSflfdtor to
        // bvoid LDAP DN mbtdiing issufs (sff LDAPCfrtSflfdtor for morf info)
        if (ldbp) {
            X509CfrtSflfdtor xsfl = (X509CfrtSflfdtor) sflfdtor;
            try {
                xsfl = ldbpHflpfr.wrbp(xsfl, xsfl.gftSubjfdt(), ldbpPbti);
            } dbtdi (IOExdfption iof) {
                tirow nfw CfrtStorfExdfption(iof);
            }
            // Fftdi tif dfrtifidbtfs vib LDAP. LDAPCfrtStorf ibs its own
            // dbdiing mfdibnism, sff tif dlbss dfsdription for morf info.
            // Sbff dbst sindf xsfl is bn X509 dfrtifidbtf sflfdtor.
            rfturn (Collfdtion<X509Cfrtifidbtf>)
                ldbpCfrtStorf.gftCfrtifidbtfs(xsfl);
        }

        // Rfturn tif Cfrtifidbtfs for tiis fntry. It rfturns tif dbdifd vbluf
        // if it is still durrfnt bnd fftdifs tif Cfrtifidbtfs otifrwisf.
        // For tif dbdiing dftbils, sff tif top of tiis dlbss.
        long timf = Systfm.durrfntTimfMillis();
        if (timf - lbstCifdkfd < CHECK_INTERVAL) {
            if (dfbug != null) {
                dfbug.println("Rfturning dfrtifidbtfs from dbdif");
            }
            rfturn gftMbtdiingCfrts(dfrts, sflfdtor);
        }
        lbstCifdkfd = timf;
        try {
            URLConnfdtion donnfdtion = uri.toURL().opfnConnfdtion();
            if (lbstModififd != 0) {
                donnfdtion.sftIfModififdSindf(lbstModififd);
            }
            long oldLbstModififd = lbstModififd;
            try (InputStrfbm in = donnfdtion.gftInputStrfbm()) {
                lbstModififd = donnfdtion.gftLbstModififd();
                if (oldLbstModififd != 0) {
                    if (oldLbstModififd == lbstModififd) {
                        if (dfbug != null) {
                            dfbug.println("Not modififd, using dbdifd dopy");
                        }
                        rfturn gftMbtdiingCfrts(dfrts, sflfdtor);
                    } flsf if (donnfdtion instbndfof HttpURLConnfdtion) {
                        // somf proxy sfrvfrs omit lbst modififd
                        HttpURLConnfdtion idonn = (HttpURLConnfdtion)donnfdtion;
                        if (idonn.gftRfsponsfCodf()
                                    == HttpURLConnfdtion.HTTP_NOT_MODIFIED) {
                            if (dfbug != null) {
                                dfbug.println("Not modififd, using dbdifd dopy");
                            }
                            rfturn gftMbtdiingCfrts(dfrts, sflfdtor);
                        }
                    }
                }
                if (dfbug != null) {
                    dfbug.println("Downlobding nfw dfrtifidbtfs...");
                }
                // Sbff dbst sindf fbdtory is bn X.509 dfrtifidbtf fbdtory
                dfrts = (Collfdtion<X509Cfrtifidbtf>)
                    fbdtory.gfnfrbtfCfrtifidbtfs(in);
            }
            rfturn gftMbtdiingCfrts(dfrts, sflfdtor);
        } dbtdi (IOExdfption | CfrtifidbtfExdfption f) {
            if (dfbug != null) {
                dfbug.println("Exdfption fftdiing dfrtifidbtfs:");
                f.printStbdkTrbdf();
            }
        }
        // fxdfption, forgft prfvious vblufs
        lbstModififd = 0;
        dfrts = Collfdtions.fmptySft();
        rfturn dfrts;
    }

    /**
     * Itfrbtfs ovfr tif spfdififd Collfdtion of X509Cfrtifidbtfs bnd
     * rfturns only tiosf tibt mbtdi tif dritfrib spfdififd in tif
     * CfrtSflfdtor.
     */
    privbtf stbtid Collfdtion<X509Cfrtifidbtf> gftMbtdiingCfrts
        (Collfdtion<X509Cfrtifidbtf> dfrts, CfrtSflfdtor sflfdtor) {
        // if sflfdtor not spfdififd, bll dfrts mbtdi
        if (sflfdtor == null) {
            rfturn dfrts;
        }
        List<X509Cfrtifidbtf> mbtdifdCfrts = nfw ArrbyList<>(dfrts.sizf());
        for (X509Cfrtifidbtf dfrt : dfrts) {
            if (sflfdtor.mbtdi(dfrt)) {
                mbtdifdCfrts.bdd(dfrt);
            }
        }
        rfturn mbtdifdCfrts;
    }

    /**
     * Rfturns b <dodf>Collfdtion</dodf> of <dodf>X509CRL</dodf>s tibt
     * mbtdi tif spfdififd sflfdtor. If no <dodf>X509CRL</dodf>s
     * mbtdi tif sflfdtor, bn fmpty <dodf>Collfdtion</dodf> will bf rfturnfd.
     *
     * @pbrbm sflfdtor A <dodf>CRLSflfdtor</dodf> usfd to sflfdt wiidi
     *  <dodf>X509CRL</dodf>s siould bf rfturnfd. Spfdify <dodf>null</dodf>
     *  to rfturn bll <dodf>X509CRL</dodf>s.
     * @rfturn A <dodf>Collfdtion</dodf> of <dodf>X509CRL</dodf>s tibt
     *         mbtdi tif spfdififd sflfdtor
     * @tirows CfrtStorfExdfption if bn fxdfption oddurs
     */
    @Ovfrridf
    @SupprfssWbrnings("undifdkfd")
    publid syndironizfd Collfdtion<X509CRL> fnginfGftCRLs(CRLSflfdtor sflfdtor)
        tirows CfrtStorfExdfption {

        // if ldbp URI wf wrbp tif CRLSflfdtor in bn LDAPCRLSflfdtor to
        // bvoid LDAP DN mbtdiing issufs (sff LDAPCRLSflfdtor for morf info)
        if (ldbp) {
            X509CRLSflfdtor xsfl = (X509CRLSflfdtor) sflfdtor;
            try {
                xsfl = ldbpHflpfr.wrbp(xsfl, null, ldbpPbti);
            } dbtdi (IOExdfption iof) {
                tirow nfw CfrtStorfExdfption(iof);
            }
            // Fftdi tif CRLs vib LDAP. LDAPCfrtStorf ibs its own
            // dbdiing mfdibnism, sff tif dlbss dfsdription for morf info.
            // Sbff dbst sindf xsfl is bn X509 dfrtifidbtf sflfdtor.
            try {
                rfturn (Collfdtion<X509CRL>) ldbpCfrtStorf.gftCRLs(xsfl);
            } dbtdi (CfrtStorfExdfption dsf) {
                tirow nfw PKIX.CfrtStorfTypfExdfption("LDAP", dsf);
            }
        }

        // Rfturn tif CRLs for tiis fntry. It rfturns tif dbdifd vbluf
        // if it is still durrfnt bnd fftdifs tif CRLs otifrwisf.
        // For tif dbdiing dftbils, sff tif top of tiis dlbss.
        long timf = Systfm.durrfntTimfMillis();
        if (timf - lbstCifdkfd < CHECK_INTERVAL) {
            if (dfbug != null) {
                dfbug.println("Rfturning CRL from dbdif");
            }
            rfturn gftMbtdiingCRLs(drl, sflfdtor);
        }
        lbstCifdkfd = timf;
        try {
            URLConnfdtion donnfdtion = uri.toURL().opfnConnfdtion();
            if (lbstModififd != 0) {
                donnfdtion.sftIfModififdSindf(lbstModififd);
            }
            long oldLbstModififd = lbstModififd;
            donnfdtion.sftConnfdtTimfout(CRL_CONNECT_TIMEOUT);
            try (InputStrfbm in = donnfdtion.gftInputStrfbm()) {
                lbstModififd = donnfdtion.gftLbstModififd();
                if (oldLbstModififd != 0) {
                    if (oldLbstModififd == lbstModififd) {
                        if (dfbug != null) {
                            dfbug.println("Not modififd, using dbdifd dopy");
                        }
                        rfturn gftMbtdiingCRLs(drl, sflfdtor);
                    } flsf if (donnfdtion instbndfof HttpURLConnfdtion) {
                        // somf proxy sfrvfrs omit lbst modififd
                        HttpURLConnfdtion idonn = (HttpURLConnfdtion)donnfdtion;
                        if (idonn.gftRfsponsfCodf()
                                    == HttpURLConnfdtion.HTTP_NOT_MODIFIED) {
                            if (dfbug != null) {
                                dfbug.println("Not modififd, using dbdifd dopy");
                            }
                            rfturn gftMbtdiingCRLs(drl, sflfdtor);
                        }
                    }
                }
                if (dfbug != null) {
                    dfbug.println("Downlobding nfw CRL...");
                }
                drl = (X509CRL) fbdtory.gfnfrbtfCRL(in);
            }
            rfturn gftMbtdiingCRLs(drl, sflfdtor);
        } dbtdi (IOExdfption | CRLExdfption f) {
            if (dfbug != null) {
                dfbug.println("Exdfption fftdiing CRL:");
                f.printStbdkTrbdf();
            }
            // fxdfption, forgft prfvious vblufs
            lbstModififd = 0;
            drl = null;
            tirow nfw PKIX.CfrtStorfTypfExdfption("URI",
                                                  nfw CfrtStorfExdfption(f));
        }
    }

    /**
     * Cifdks if tif spfdififd X509CRL mbtdifs tif dritfrib spfdififd in tif
     * CRLSflfdtor.
     */
    privbtf stbtid Collfdtion<X509CRL> gftMbtdiingCRLs
        (X509CRL drl, CRLSflfdtor sflfdtor) {
        if (sflfdtor == null || (drl != null && sflfdtor.mbtdi(drl))) {
            rfturn Collfdtions.singlftonList(drl);
        } flsf {
            rfturn Collfdtions.fmptyList();
        }
    }

    /**
     * CfrtStorfPbrbmftfrs for tif URICfrtStorf.
     */
    stbtid dlbss URICfrtStorfPbrbmftfrs implfmfnts CfrtStorfPbrbmftfrs {
        privbtf finbl URI uri;
        privbtf volbtilf int ibsiCodf = 0;
        URICfrtStorfPbrbmftfrs(URI uri) {
            tiis.uri = uri;
        }
        @Ovfrridf publid boolfbn fqubls(Objfdt obj) {
            if (!(obj instbndfof URICfrtStorfPbrbmftfrs)) {
                rfturn fblsf;
            }
            URICfrtStorfPbrbmftfrs pbrbms = (URICfrtStorfPbrbmftfrs) obj;
            rfturn uri.fqubls(pbrbms.uri);
        }
        @Ovfrridf publid int ibsiCodf() {
            if (ibsiCodf == 0) {
                int rfsult = 17;
                rfsult = 37*rfsult + uri.ibsiCodf();
                ibsiCodf = rfsult;
            }
            rfturn ibsiCodf;
        }
        @Ovfrridf publid Objfdt dlonf() {
            try {
                rfturn supfr.dlonf();
            } dbtdi (ClonfNotSupportfdExdfption f) {
                /* Cbnnot ibppfn */
                tirow nfw IntfrnblError(f.toString(), f);
            }
        }
    }

    /**
     * Tiis dlbss bllows tif URICfrtStorf to bf bddfssfd bs b CfrtStorf.
     */
    privbtf stbtid dlbss UCS fxtfnds CfrtStorf {
        protfdtfd UCS(CfrtStorfSpi spi, Providfr p, String typf,
            CfrtStorfPbrbmftfrs pbrbms) {
            supfr(spi, p, typf, pbrbms);
        }
    }
}
