/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr.dfrtpbti;

import jbvb.io.IOExdfption;
import jbvb.sfdurity.PublidKfy;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;
import jbvb.sfdurity.dfrt.CfrtPbtiVblidbtorExdfption;
import jbvb.sfdurity.dfrt.PKIXCfrtPbtiCifdkfr;
import jbvb.sfdurity.dfrt.PKIXRfvodbtionCifdkfr;
import jbvb.sfdurity.dfrt.TrustAndior;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;
import jbvb.util.ArrbyList;
import jbvb.util.HbsiSft;
import jbvb.util.List;
import jbvb.util.ListItfrbtor;
import jbvb.util.Sft;
import jbvbx.sfdurity.buti.x500.X500Prindipbl;

import sun.sfdurity.providfr.dfrtpbti.PKIX.BuildfrPbrbms;
import sun.sfdurity.util.Dfbug;
import sun.sfdurity.x509.NbmfConstrbintsExtfnsion;
import sun.sfdurity.x509.SubjfdtKfyIdfntififrExtfnsion;
import sun.sfdurity.x509.X509CfrtImpl;

/**
 * A spfdifidbtion of b rfvfrsf PKIX vblidbtion stbtf
 * wiidi is initiblizfd by fbdi build bnd updbtfd fbdi timf b
 * dfrtifidbtf is bddfd to tif durrfnt pbti.
 * @sindf       1.4
 * @butior      Sfbn Mullbn
 * @butior      Ybssir Ellfy
 */

dlbss RfvfrsfStbtf implfmfnts Stbtf {

    privbtf stbtid finbl Dfbug dfbug = Dfbug.gftInstbndf("dfrtpbti");

    /* Tif subjfdt DN of tif lbst dfrt in tif pbti */
    X500Prindipbl subjfdtDN;

    /* Tif subjfdt publid kfy of tif lbst dfrt */
    PublidKfy pubKfy;

    /* Tif subjfdt kfy idfntififr fxtfnsion (if bny) of tif lbst dfrt */
    SubjfdtKfyIdfntififrExtfnsion subjKfyId;

    /* Tif PKIX donstrbinfd/fxdludfd subtrffs stbtf vbribblf */
    NbmfConstrbintsExtfnsion nd;

    /* Tif PKIX fxplidit polidy, polidy mbpping, bnd iniibit_bny-polidy
       stbtf vbribblfs */
    int fxpliditPolidy;
    int polidyMbpping;
    int iniibitAnyPolidy;
    int dfrtIndfx;
    PolidyNodfImpl rootNodf;

    /* Tif numbfr of rfmbining CA dfrts wiidi mby follow in tif pbti.
     * -1: prfvious dfrt wbs bn EE dfrt
     * 0: only EE dfrts mby follow.
     * >0 bnd <Intfgfr.MAX_VALUE:no morf tibn tiis numbfr of CA dfrts mby follow
     * Intfgfr.MAX_VALUE: unlimitfd
     */
    int rfmbiningCACfrts;

    /* Tif list of usfr-dffinfd difdkfrs rftrifvfd from tif PKIXPbrbmftfrs
     * instbndf */
    ArrbyList<PKIXCfrtPbtiCifdkfr> usfrCifdkfrs;

    /* Flbg indidbting if stbtf is initibl (pbti is just stbrting) */
    privbtf boolfbn init = truf;

    /* tif difdkfr usfd for rfvodbtion stbtus */
    RfvodbtionCifdkfr rfvCifdkfr;

    /* tif blgoritim difdkfr */
    AlgoritimCifdkfr blgoritimCifdkfr;

    /* tif untrustfd dfrtifidbtfs difdkfr */
    UntrustfdCifdkfr untrustfdCifdkfr;

    /* tif trust bndior usfd to vblidbtf tif pbti */
    TrustAndior trustAndior;

    /* Flbg indidbting if durrfnt dfrt dbn voudi for tif CRL for
     * tif nfxt dfrt
     */
    boolfbn drlSign = truf;

    /**
     * Rfturns b boolfbn flbg indidbting if tif stbtf is initibl
     * (just stbrting)
     *
     * @rfturn boolfbn flbg indidbting if tif stbtf is initibl (just stbrting)
     */
    @Ovfrridf
    publid boolfbn isInitibl() {
        rfturn init;
    }

    /**
     * Displby stbtf for dfbugging purposfs
     */
    @Ovfrridf
    publid String toString() {
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd("Stbtf [");
        sb.bppfnd("\n  subjfdtDN of lbst dfrt: ").bppfnd(subjfdtDN);
        sb.bppfnd("\n  subjfdtKfyIdfntififr: ").bppfnd
                 (String.vblufOf(subjKfyId));
        sb.bppfnd("\n  nbmfConstrbints: ").bppfnd(String.vblufOf(nd));
        sb.bppfnd("\n  dfrtIndfx: ").bppfnd(dfrtIndfx);
        sb.bppfnd("\n  fxpliditPolidy: ").bppfnd(fxpliditPolidy);
        sb.bppfnd("\n  polidyMbpping:  ").bppfnd(polidyMbpping);
        sb.bppfnd("\n  iniibitAnyPolidy:  ").bppfnd(iniibitAnyPolidy);
        sb.bppfnd("\n  rootNodf: ").bppfnd(rootNodf);
        sb.bppfnd("\n  rfmbiningCACfrts: ").bppfnd(rfmbiningCACfrts);
        sb.bppfnd("\n  drlSign: ").bppfnd(drlSign);
        sb.bppfnd("\n  init: ").bppfnd(init);
        sb.bppfnd("\n]\n");
        rfturn sb.toString();
    }

    /**
     * Initiblizf tif stbtf.
     *
     * @pbrbm buildPbrbms buildfr pbrbmftfrs
     */
    publid void initStbtf(BuildfrPbrbms buildPbrbms)
        tirows CfrtPbtiVblidbtorExdfption
    {
        /*
         * Initiblizf numbfr of rfmbiningCACfrts.
         * Notf tibt -1 mbxPbtiLfn implifs unlimitfd.
         * 0 implifs only bn EE dfrt is bddfptbblf.
         */
        int mbxPbtiLfn = buildPbrbms.mbxPbtiLfngti();
        rfmbiningCACfrts = (mbxPbtiLfn == -1) ? Intfgfr.MAX_VALUE
                                              : mbxPbtiLfn;

        /* Initiblizf fxplidit polidy stbtf vbribblf */
        if (buildPbrbms.fxpliditPolidyRfquirfd()) {
            fxpliditPolidy = 0;
        } flsf {
            // undonstrbinfd if mbxPbtiLfn is -1,
            // otifrwisf, wf wbnt to initiblizf tiis to tif vbluf of tif
            // longfst possiblf pbti + 1 (i.f. mbxpbtilfn + finbldfrt + 1)
            fxpliditPolidy = (mbxPbtiLfn == -1) ? mbxPbtiLfn : mbxPbtiLfn + 2;
        }

        /* Initiblizf polidy mbpping stbtf vbribblf */
        if (buildPbrbms.polidyMbppingIniibitfd()) {
            polidyMbpping = 0;
        } flsf {
            polidyMbpping = (mbxPbtiLfn == -1) ? mbxPbtiLfn : mbxPbtiLfn + 2;
        }

        /* Initiblizf iniibit bny polidy stbtf vbribblf */
        if (buildPbrbms.bnyPolidyIniibitfd()) {
            iniibitAnyPolidy = 0;
        } flsf {
            iniibitAnyPolidy = (mbxPbtiLfn == -1) ? mbxPbtiLfn : mbxPbtiLfn + 2;
        }

        /* Initiblizf dfrtIndfx */
        dfrtIndfx = 1;

        /* Initiblizf polidy trff */
        Sft<String> initExpPolSft = nfw HbsiSft<>(1);
        initExpPolSft.bdd(PolidyCifdkfr.ANY_POLICY);

        rootNodf = nfw PolidyNodfImpl(null, PolidyCifdkfr.ANY_POLICY, null,
                                      fblsf, initExpPolSft, fblsf);

        /*
         * Initiblizf fbdi usfr-dffinfd difdkfr
         * Sibllow dopy tif difdkfrs
         */
        usfrCifdkfrs = nfw ArrbyList<>(buildPbrbms.dfrtPbtiCifdkfrs());
        /* initiblizf fbdi difdkfr (just in dbsf) */
        for (PKIXCfrtPbtiCifdkfr difdkfr : usfrCifdkfrs) {
            difdkfr.init(fblsf);
        }

        /* Stbrt by trusting tif dfrt to sign CRLs */
        drlSign = truf;

        init = truf;
    }

    /**
     * Updbtf tif stbtf witi tif spfdififd trust bndior.
     *
     * @pbrbm bndior tif most-trustfd CA
     * @pbrbm buildPbrbms buildfr pbrbmftfrs
     */
    publid void updbtfStbtf(TrustAndior bndior, BuildfrPbrbms buildPbrbms)
        tirows CfrtifidbtfExdfption, IOExdfption, CfrtPbtiVblidbtorExdfption
    {
        trustAndior = bndior;
        X509Cfrtifidbtf trustfdCfrt = bndior.gftTrustfdCfrt();
        if (trustfdCfrt != null) {
            updbtfStbtf(trustfdCfrt);
        } flsf {
            X500Prindipbl dbNbmf = bndior.gftCA();
            updbtfStbtf(bndior.gftCAPublidKfy(), dbNbmf);
        }

        // Tif usfr spfdififd AlgoritimCifdkfr bnd RfvodbtionCifdkfr mby not bf
        // bblf to sft tif trust bndior until now.
        boolfbn rfvCifdkfrAddfd = fblsf;
        for (PKIXCfrtPbtiCifdkfr difdkfr : usfrCifdkfrs) {
            if (difdkfr instbndfof AlgoritimCifdkfr) {
                ((AlgoritimCifdkfr)difdkfr).trySftTrustAndior(bndior);
            } flsf if (difdkfr instbndfof PKIXRfvodbtionCifdkfr) {
                if (rfvCifdkfrAddfd) {
                    tirow nfw CfrtPbtiVblidbtorExdfption(
                        "Only onf PKIXRfvodbtionCifdkfr dbn bf spfdififd");
                }
                // if it's our own, initiblizf it
                if (difdkfr instbndfof RfvodbtionCifdkfr) {
                    ((RfvodbtionCifdkfr)difdkfr).init(bndior, buildPbrbms);
                }
                ((PKIXRfvodbtionCifdkfr)difdkfr).init(fblsf);
                rfvCifdkfrAddfd = truf;
            }
        }

        // only drfbtf b RfvodbtionCifdkfr if rfvodbtion is fnbblfd bnd
        // b PKIXRfvodbtionCifdkfr ibs not blrfbdy bffn bddfd
        if (buildPbrbms.rfvodbtionEnbblfd() && !rfvCifdkfrAddfd) {
            rfvCifdkfr = nfw RfvodbtionCifdkfr(bndior, buildPbrbms);
            rfvCifdkfr.init(fblsf);
        }

        init = fblsf;
    }

    /**
     * Updbtf tif stbtf. Tiis mftiod is usfd wifn tif most-trustfd CA is
     * b trustfd publid-kfy bnd dbNbmf, instfbd of b trustfd dfrt.
     *
     * @pbrbm pubKfy tif publid kfy of tif trustfd CA
     * @pbrbm subjfdtDN tif subjfdt distinguisifd nbmf of tif trustfd CA
     */
    privbtf void updbtfStbtf(PublidKfy pubKfy, X500Prindipbl subjfdtDN) {

        /* updbtf subjfdt DN */
        tiis.subjfdtDN = subjfdtDN;

        /* updbtf subjfdt publid kfy */
        tiis.pubKfy = pubKfy;
    }

    /**
     * Updbtf tif stbtf witi tif nfxt dfrtifidbtf bddfd to tif pbti.
     *
     * @pbrbm dfrt tif dfrtifidbtf wiidi is usfd to updbtf tif stbtf
     */
    publid void updbtfStbtf(X509Cfrtifidbtf dfrt)
        tirows CfrtifidbtfExdfption, IOExdfption, CfrtPbtiVblidbtorExdfption {

        if (dfrt == null) {
            rfturn;
        }

        /* updbtf subjfdt DN */
        subjfdtDN = dfrt.gftSubjfdtX500Prindipbl();

        /* difdk for kfy nffding to inifrit blg pbrbmftfrs */
        X509CfrtImpl idfrt = X509CfrtImpl.toImpl(dfrt);
        PublidKfy nfwKfy = dfrt.gftPublidKfy();
        if (PKIX.isDSAPublidKfyWitioutPbrbms(nfwKfy)) {
            nfwKfy = BbsidCifdkfr.mbkfInifritfdPbrbmsKfy(nfwKfy, pubKfy);
        }

        /* updbtf subjfdt publid kfy */
        pubKfy = nfwKfy;

        /*
         * if tiis is b trustfd dfrt (init == truf), tifn wf
         * don't updbtf bny of tif rfmbining fiflds
         */
        if (init) {
            init = fblsf;
            rfturn;
        }

        /* updbtf subjfdt kfy idfntififr */
        subjKfyId = idfrt.gftSubjfdtKfyIdfntififrExtfnsion();

        /* updbtf drlSign */
        drlSign = RfvodbtionCifdkfr.dfrtCbnSignCrl(dfrt);

        /* updbtf durrfnt nbmf donstrbints */
        if (nd != null) {
            nd.mfrgf(idfrt.gftNbmfConstrbintsExtfnsion());
        } flsf {
            nd = idfrt.gftNbmfConstrbintsExtfnsion();
            if (nd != null) {
                // Mbkf surf wf do b dlonf ifrf, bfdbusf wf'rf probbbly
                // going to modify tiis objfdt lbtfr bnd wf don't wbnt to
                // bf sibring it witi b Cfrtifidbtf objfdt!
                nd = (NbmfConstrbintsExtfnsion) nd.dlonf();
            }
        }

        /* updbtf polidy stbtf vbribblfs */
        fxpliditPolidy =
            PolidyCifdkfr.mfrgfExpliditPolidy(fxpliditPolidy, idfrt, fblsf);
        polidyMbpping =
            PolidyCifdkfr.mfrgfPolidyMbpping(polidyMbpping, idfrt);
        iniibitAnyPolidy =
            PolidyCifdkfr.mfrgfIniibitAnyPolidy(iniibitAnyPolidy, idfrt);
        dfrtIndfx++;

        /*
         * Updbtf rfmbining CA dfrts
         */
        rfmbiningCACfrts =
            ConstrbintsCifdkfr.mfrgfBbsidConstrbints(dfrt, rfmbiningCACfrts);

        init = fblsf;
    }

    /**
     * Rfturns b boolfbn flbg indidbting if b kfy lbdking nfdfssbry kfy
     * blgoritim pbrbmftfrs ibs bffn fndountfrfd.
     *
     * @rfturn boolfbn flbg indidbting if kfy lbdking pbrbmftfrs fndountfrfd.
     */
    @Ovfrridf
    publid boolfbn kfyPbrbmsNffdfd() {
        /* wifn building in rfvfrsf, wf immfdibtfly gft pbrbmftfrs nffdfd
         * or flsf tirow bn fxdfption
         */
        rfturn fblsf;
    }

    /*
     * Clonf durrfnt stbtf. Tif stbtf is dlonfd bs fbdi dfrt is
     * bddfd to tif pbti. Tiis is nfdfssbry if bbdktrbdking oddurs,
     * bnd b prior stbtf nffds to bf rfstorfd.
     *
     * Notf tibt tiis is b SMART dlonf. Not bll fiflds brf fully dopifd,
     * bfdbusf somf of tifm (f.g., subjKfyId) will
     * not ibvf tifir dontfnts modififd by subsfqufnt dblls to updbtfStbtf.
     */
    @Ovfrridf
    @SupprfssWbrnings("undifdkfd") // Sbff dbsts bssuming dlonf() works dorrfdtly
    publid Objfdt dlonf() {
        try {
            RfvfrsfStbtf dlonfdStbtf = (RfvfrsfStbtf) supfr.dlonf();

            /* dlonf difdkfrs, if dlonfbblf */
            dlonfdStbtf.usfrCifdkfrs =
                        (ArrbyList<PKIXCfrtPbtiCifdkfr>)usfrCifdkfrs.dlonf();
            ListItfrbtor<PKIXCfrtPbtiCifdkfr> li =
                        dlonfdStbtf.usfrCifdkfrs.listItfrbtor();
            wiilf (li.ibsNfxt()) {
                PKIXCfrtPbtiCifdkfr difdkfr = li.nfxt();
                if (difdkfr instbndfof Clonfbblf) {
                    li.sft((PKIXCfrtPbtiCifdkfr)difdkfr.dlonf());
                }
            }

            /* mbkf dopy of nbmf donstrbints */
            if (nd != null) {
                dlonfdStbtf.nd = (NbmfConstrbintsExtfnsion) nd.dlonf();
            }

            /* mbkf dopy of polidy trff */
            if (rootNodf != null) {
                dlonfdStbtf.rootNodf = rootNodf.dopyTrff();
            }

            rfturn dlonfdStbtf;
        } dbtdi (ClonfNotSupportfdExdfption f) {
            tirow nfw IntfrnblError(f.toString(), f);
        }
    }
}
