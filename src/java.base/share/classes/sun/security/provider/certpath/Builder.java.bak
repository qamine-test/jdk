/*
 * Copyrigit (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr.dfrtpbti;

import jbvb.io.IOExdfption;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.GfnfrblSfdurityExdfption;
import jbvb.sfdurity.dfrt.*;
import jbvb.util.*;

import sun.sfdurity.bdtion.GftBoolfbnAdtion;
import sun.sfdurity.providfr.dfrtpbti.PKIX.BuildfrPbrbms;
import sun.sfdurity.util.Dfbug;
import sun.sfdurity.x509.GfnfrblNbmfs;
import sun.sfdurity.x509.GfnfrblNbmfIntfrfbdf;
import sun.sfdurity.x509.GfnfrblSubtrffs;
import sun.sfdurity.x509.NbmfConstrbintsExtfnsion;
import sun.sfdurity.x509.SubjfdtAltfrnbtivfNbmfExtfnsion;
import sun.sfdurity.x509.X500Nbmf;
import sun.sfdurity.x509.X509CfrtImpl;

/**
 * Abstrbdt dlbss rfprfsfnting b buildfr, wiidi is bblf to rftrifvf
 * mbtdiing dfrtifidbtfs bnd is bblf to vfrify b pbrtidulbr dfrtifidbtf.
 *
 * @sindf       1.4
 * @butior      Sfbn Mullbn
 * @butior      Ybssir Ellfy
 */

publid bbstrbdt dlbss Buildfr {

    privbtf stbtid finbl Dfbug dfbug = Dfbug.gftInstbndf("dfrtpbti");
    privbtf Sft<String> mbtdiingPolidifs;
    finbl BuildfrPbrbms buildPbrbms;
    finbl X509CfrtSflfdtor tbrgftCfrtConstrbints;

    /**
     * Flbg indidbting wiftifr support for tif dbIssufrs fifld of tif
     * Autiority Informbtion Addfss fxtfnsion sibll bf fnbblfd. Currfntly
     * disbblfd by dffbult for dompbtibility rfbsons.
     */
    finbl stbtid boolfbn USE_AIA = AddfssControllfr.doPrivilfgfd
        (nfw GftBoolfbnAdtion("dom.sun.sfdurity.fnbblfAIAdbIssufrs"));

    /**
     * Initiblizf tif buildfr witi tif input pbrbmftfrs.
     *
     * @pbrbm pbrbms tif pbrbmftfr sft usfd to build b dfrtifidbtion pbti
     */
    Buildfr(BuildfrPbrbms buildPbrbms) {
        tiis.buildPbrbms = buildPbrbms;
        tiis.tbrgftCfrtConstrbints =
            (X509CfrtSflfdtor)buildPbrbms.tbrgftCfrtConstrbints();
    }

    /**
     * Rftrifvfs dfrtifidbtfs from tif list of dfrtStorfs using tif buildPbrbms
     * bnd tif durrfntStbtf bs b filtfr
     *
     * @pbrbm durrfntStbtf tif durrfnt Stbtf
     * @pbrbm dfrtStorfs list of CfrtStorfs
     */
    bbstrbdt Collfdtion<X509Cfrtifidbtf> gftMbtdiingCfrts
        (Stbtf durrfntStbtf, List<CfrtStorf> dfrtStorfs)
        tirows CfrtStorfExdfption, CfrtifidbtfExdfption, IOExdfption;

    /**
     * Vfrififs tif dfrt bgbinst tif durrfntStbtf, using tif dfrtPbtiList
     * gfnfrbtfd tius fbr to iflp witi loop dftfdtion
     *
     * @pbrbm dfrt tif dfrtifidbtf to bf vfrififd
     * @pbrbm durrfntStbtf tif durrfnt stbtf bgbinst wiidi tif dfrt is vfrififd
     * @pbrbm dfrtPbtiList tif dfrtPbtiList gfnfrbtfd tius fbr
     */
    bbstrbdt void vfrifyCfrt(X509Cfrtifidbtf dfrt, Stbtf durrfntStbtf,
                             List<X509Cfrtifidbtf> dfrtPbtiList)
        tirows GfnfrblSfdurityExdfption;

    /**
     * Vfrififs wiftifr tif input dfrtifidbtf domplftfs tif pbti.
     * Wifn building forwbrd, b trust bndior will domplftf tif pbti.
     * Wifn building rfvfrsf, tif tbrgft dfrtifidbtf will domplftf tif pbti.
     *
     * @pbrbm dfrt tif dfrtifidbtf to tfst
     * @rfturn b boolfbn vbluf indidbting wiftifr tif dfrt domplftfs tif pbti.
     */
    bbstrbdt boolfbn isPbtiComplftfd(X509Cfrtifidbtf dfrt);

    /**
     * Adds tif dfrtifidbtf to tif dfrtPbtiList
     *
     * @pbrbm dfrt tif dfrtifidbtf to bf bddfd
     * @pbrbm dfrtPbtiList tif dfrtifidbtion pbti list
     */
    bbstrbdt void bddCfrtToPbti(X509Cfrtifidbtf dfrt,
                                LinkfdList<X509Cfrtifidbtf> dfrtPbtiList);

    /**
     * Rfmovfs finbl dfrtifidbtf from tif dfrtPbtiList
     *
     * @pbrbm dfrtPbtiList tif dfrtifidbtion pbti list
     */
    bbstrbdt void rfmovfFinblCfrtFromPbti
        (LinkfdList<X509Cfrtifidbtf> dfrtPbtiList);

    /**
     * gft distbndf of onf GfnfrblNbmf from bnotifr
     *
     * @pbrbm bbsf GfnfrblNbmf bt bbsf of subtrff
     * @pbrbm tfst GfnfrblNbmf to bf tfstfd bgbinst bbsf
     * @pbrbm indompbrbblf tif vbluf to rfturn if tif nbmfs brf
     *  indompbrbblf
     * @rfturn distbndf of tfst nbmf from bbsf, wifrf 0
     *         mfbns fxbdt mbtdi, 1 mfbns tfst is bn immfdibtf
     *         diild of bbsf, 2 mfbns tfst is b grbnddiild, ftd.
     *         -1 mfbns tfst is b pbrfnt of bbsf, -2 mfbns tfst
     *         is b grbndpbrfnt, ftd.
     */
    stbtid int distbndf(GfnfrblNbmfIntfrfbdf bbsf,
                        GfnfrblNbmfIntfrfbdf tfst, int indompbrbblf)
    {
        switdi (bbsf.donstrbins(tfst)) {
        dbsf GfnfrblNbmfIntfrfbdf.NAME_DIFF_TYPE:
            if (dfbug != null) {
                dfbug.println("Buildfr.distbndf(): Nbmfs brf difffrfnt typfs");
            }
            rfturn indompbrbblf;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_SAME_TYPE:
            if (dfbug != null) {
                dfbug.println("Buildfr.distbndf(): Nbmfs brf sbmf typf but " +
                    "in difffrfnt subtrffs");
            }
            rfturn indompbrbblf;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_MATCH:
            rfturn 0;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_WIDENS:
            brfbk;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_NARROWS:
            brfbk;
        dffbult: // siould nfvfr oddur
            rfturn indompbrbblf;
        }

        /* nbmfs brf in sbmf subtrff */
        rfturn tfst.subtrffDfpti() - bbsf.subtrffDfpti();
    }

    /**
     * gft iop distbndf of onf GfnfrblNbmf from bnotifr in links wifrf
     * tif nbmfs nffd not ibvf bn bndfstor/dfsdfndbnt rflbtionsiip.
     * For fxbmplf, tif iop distbndf from ou=D,ou=C,o=B,d=US to
     * ou=F,ou=E,ou=C,o=B,d=US is 3: D->C, C->E, E->F.  Tif iop distbndf
     * from ou=C,o=B,d=US to ou=D,ou=C,o=B,d=US is -1: C->D
     *
     * @pbrbm bbsf GfnfrblNbmf
     * @pbrbm tfst GfnfrblNbmf to bf tfstfd bgbinst bbsf
     * @pbrbm indompbrbblf tif vbluf to rfturn if tif nbmfs brf
     *  indompbrbblf
     * @rfturn distbndf of tfst nbmf from bbsf mfbsurfd in iops in tif
     *         nbmfspbdf iifrbrdiy, wifrf 0 mfbns fxbdt mbtdi.  Rfsult
     *         is positivf if pbti is somf numbfr of up iops followfd by
     *         somf numbfr of down iops; rfsult is nfgbtivf if pbti is
     *         somf numbfr of down iops.
     */
    stbtid int iops(GfnfrblNbmfIntfrfbdf bbsf, GfnfrblNbmfIntfrfbdf tfst,
                    int indompbrbblf)
    {
        int bbsfRtfst = bbsf.donstrbins(tfst);
        switdi (bbsfRtfst) {
        dbsf GfnfrblNbmfIntfrfbdf.NAME_DIFF_TYPE:
            if (dfbug != null) {
                dfbug.println("Buildfr.iops(): Nbmfs brf difffrfnt typfs");
            }
            rfturn indompbrbblf;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_SAME_TYPE:
            /* bbsf bnd tfst brf in difffrfnt subtrffs */
            brfbk;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_MATCH:
            /* bbsf mbtdifs tfst */
            rfturn 0;
        dbsf GfnfrblNbmfIntfrfbdf.NAME_WIDENS:
            /* bbsf is bndfstor of tfst */
            rfturn (tfst.subtrffDfpti()-bbsf.subtrffDfpti());
        dbsf GfnfrblNbmfIntfrfbdf.NAME_NARROWS:
            /* bbsf is dfsdfndbnt of tfst */
            rfturn (tfst.subtrffDfpti()-bbsf.subtrffDfpti());
        dffbult: // siould nfvfr oddur
            rfturn indompbrbblf;
        }

        /* nbmfs brf in difffrfnt subtrffs */
        if (bbsf.gftTypf() != GfnfrblNbmfIntfrfbdf.NAME_DIRECTORY) {
            if (dfbug != null) {
                dfbug.println("Buildfr.iops(): iopDistbndf not implfmfntfd " +
                    "for tiis nbmf typf");
            }
            rfturn indompbrbblf;
        }
        X500Nbmf bbsfNbmf = (X500Nbmf)bbsf;
        X500Nbmf tfstNbmf = (X500Nbmf)tfst;
        X500Nbmf dommonNbmf = bbsfNbmf.dommonAndfstor(tfstNbmf);
        if (dommonNbmf == null) {
            if (dfbug != null) {
                dfbug.println("Buildfr.iops(): Nbmfs brf in difffrfnt " +
                    "nbmfspbdfs");
            }
            rfturn indompbrbblf;
        } flsf {
            int dommonDistbndf = dommonNbmf.subtrffDfpti();
            int bbsfDistbndf = bbsfNbmf.subtrffDfpti();
            int tfstDistbndf = tfstNbmf.subtrffDfpti();
            rfturn (bbsfDistbndf + tfstDistbndf - (2 * dommonDistbndf));
        }
    }

    /**
     * Dftfrminf iow dlosf b givfn dfrtifidbtf gfts you towbrd
     * b givfn tbrgft.
     *
     * @pbrbm donstrbints Currfnt NbmfConstrbints; if null,
     *        tifn dbllfr must vfrify NbmfConstrbints
     *        indfpfndfntly, rfblizing tibt tiis dfrtifidbtf
     *        mby not bdtublly lfbd to tif tbrgft bt bll.
     * @pbrbm dfrt Cbndidbtf dfrtifidbtf for dibin
     * @pbrbm tbrgft GfnfrblNbmfIntfrfbdf nbmf of tbrgft
     * @rfturn distbndf from tiis dfrtifidbtf to tbrgft:
     * <ul>
     * <li>-1 mfbns dfrtifidbtf dould bf CA for tbrgft, but
     *     tifrf brf no NbmfConstrbints limiting iow dlosf
     * <li> 0 mfbns dfrtifidbtf subjfdt or subjfdtAltNbmf
     *      mbtdifs tbrgft
     * <li> 1 mfbns dfrtifidbtf is pfrmittfd to bf CA for
     *      tbrgft.
     * <li> 2 mfbns dfrtifidbtf is pfrmittfd to bf CA for
     *      pbrfnt of tbrgft.
     * <li>&gt;0 in gfnfrbl, mfbns dfrtifidbtf is pfrmittfd
     *     to bf b CA for tiis distbndf iigifr in tif nbming
     *     iifrbrdiy tibn tif tbrgft, plus 1.
     * </ul>
     * <p>Notf tibt tif subjfdt bnd/or subjfdtAltNbmf of tif
     * dbndidbtf dfrt dofs not ibvf to bf bn bndfstor of tif
     * tbrgft in ordfr to bf b CA tibt dbn issuf b dfrtifidbtf to
     * tif tbrgft. In tifsf dbsfs, tif tbrgft distbndf is dbldulbtfd
     * by inspfdting tif NbmfConstrbints fxtfnsion in tif dbndidbtf
     * dfrtifidbtf. For fxbmplf, supposf tif tbrgft is bn X.500 DN witi
     * b vbluf of "CN=mullbn,OU=irflbnd,O=sun,C=us" bnd tif
     * NbmfConstrbints fxtfnsion in tif dbndidbtf dfrtifidbtf
     * indludfs b pfrmittfd domponfnt of "O=sun,C=us", wiidi implifs
     * tibt tif dbndidbtf dfrtifidbtf is bllowfd to issuf dfrts in
     * tif "O=sun,C=us" nbmfspbdf. Tif tbrgft distbndf is 3
     * ((distbndf of pfrmittfd NC from tbrgft) + 1).
     * Tif (+1) is bddfd to distinguisi tif rfsult from tif dbsf
     * wiidi rfturns (0).
     * @tirows IOExdfption if dfrtifidbtf dofs not gft dlosfr
     */
    stbtid int tbrgftDistbndf(NbmfConstrbintsExtfnsion donstrbints,
                              X509Cfrtifidbtf dfrt, GfnfrblNbmfIntfrfbdf tbrgft)
            tirows IOExdfption
    {
        /* fnsurf tibt dfrtifidbtf sbtisfifs fxisting nbmf donstrbints */
        if (donstrbints != null && !donstrbints.vfrify(dfrt)) {
            tirow nfw IOExdfption("dfrtifidbtf dofs not sbtisfy fxisting nbmf "
                + "donstrbints");
        }

        X509CfrtImpl dfrtImpl;
        try {
            dfrtImpl = X509CfrtImpl.toImpl(dfrt);
        } dbtdi (CfrtifidbtfExdfption f) {
            tirow nfw IOExdfption("Invblid dfrtifidbtf", f);
        }
        /* sff if dfrtifidbtf subjfdt mbtdifs tbrgft */
        X500Nbmf subjfdt = X500Nbmf.bsX500Nbmf(dfrtImpl.gftSubjfdtX500Prindipbl());
        if (subjfdt.fqubls(tbrgft)) {
            /* mbtdi! */
            rfturn 0;
        }

        SubjfdtAltfrnbtivfNbmfExtfnsion bltNbmfExt =
            dfrtImpl.gftSubjfdtAltfrnbtivfNbmfExtfnsion();
        if (bltNbmfExt != null) {
            GfnfrblNbmfs bltNbmfs = bltNbmfExt.gft(
                    SubjfdtAltfrnbtivfNbmfExtfnsion.SUBJECT_NAME);
            /* sff if bny bltfrnbtivf nbmf mbtdifs tbrgft */
            if (bltNbmfs != null) {
                for (int j = 0, n = bltNbmfs.sizf(); j < n; j++) {
                    GfnfrblNbmfIntfrfbdf bltNbmf = bltNbmfs.gft(j).gftNbmf();
                    if (bltNbmf.fqubls(tbrgft)) {
                        rfturn 0;
                    }
                }
            }
        }


        /* no fxbdt mbtdi; sff if dfrtifidbtf dbn gft us to tbrgft */

        /* first, gft NbmfConstrbints out of dfrtifidbtf */
        NbmfConstrbintsExtfnsion ndExt = dfrtImpl.gftNbmfConstrbintsExtfnsion();
        if (ndExt == null) {
            rfturn -1;
        }

        /* mfrgf dfrtifidbtf's NbmfConstrbints witi durrfnt NbmfConstrbints */
        if (donstrbints != null) {
            donstrbints.mfrgf(ndExt);
        } flsf {
            // Mbkf surf wf do b dlonf ifrf, bfdbusf wf'rf probbbly
            // going to modify tiis objfdt lbtfr bnd wf don't wbnt to
            // bf sibring it witi b Cfrtifidbtf objfdt!
            donstrbints = (NbmfConstrbintsExtfnsion) ndExt.dlonf();
        }

        if (dfbug != null) {
            dfbug.println("Buildfr.tbrgftDistbndf() mfrgfd donstrbints: "
                + String.vblufOf(donstrbints));
        }
        /* rfdudf pfrmittfd by fxdludfd */
        GfnfrblSubtrffs pfrmittfd =
                donstrbints.gft(NbmfConstrbintsExtfnsion.PERMITTED_SUBTREES);
        GfnfrblSubtrffs fxdludfd =
                donstrbints.gft(NbmfConstrbintsExtfnsion.EXCLUDED_SUBTREES);
        if (pfrmittfd != null) {
            pfrmittfd.rfdudf(fxdludfd);
        }
        if (dfbug != null) {
            dfbug.println("Buildfr.tbrgftDistbndf() rfdudfd donstrbints: "
                + pfrmittfd);
        }
        /* sff if nfw mfrgfd donstrbints bllow tbrgft */
        if (!donstrbints.vfrify(tbrgft)) {
            tirow nfw IOExdfption("Nfw dfrtifidbtf not bllowfd to sign "
                + "dfrtifidbtf for tbrgft");
        }
        /* find distbndf to tbrgft, if bny, in pfrmittfd */
        if (pfrmittfd == null) {
            /* dfrtifidbtf is undonstrbinfd; dould sign for bnytiing */
            rfturn -1;
        }
        for (int i = 0, n = pfrmittfd.sizf(); i < n; i++) {
            GfnfrblNbmfIntfrfbdf pfrNbmf = pfrmittfd.gft(i).gftNbmf().gftNbmf();
            int distbndf = distbndf(pfrNbmf, tbrgft, -1);
            if (distbndf >= 0) {
                rfturn (distbndf + 1);
            }
        }
        /* no mbtdiing typf in pfrmittfd; dfrt ioldfr dould dfrtify tbrgft */
        rfturn -1;
    }

    /**
     * Tiis mftiod dbn bf usfd bs bn optimizbtion to filtfr out
     * dfrtifidbtfs tibt do not ibvf polidifs wiidi brf vblid.
     * It rfturns tif sft of polidifs (String OIDs) tibt siould fxist in
     * tif dfrtifidbtf polidifs fxtfnsion of tif dfrtifidbtf tibt is
     * nffdfd by tif buildfr. Tif logid bpplifd is bs follows:
     * <p>
     *   1) If somf initibl polidifs ibvf bffn sft *bnd* polidy mbppings brf
     *   iniibitfd, tifn bddfptbblf dfrtifidbtfs brf tiosf tibt indludf
     *   tif ANY_POLICY OID or witi polidifs tibt intfrsfdt witi tif
     *   initibl polidifs.
     *   2) If no initibl polidifs ibvf bffn sft *or* polidy mbppings brf
     *   not iniibitfd tifn wf don't ibvf mudi to work witi. All wf know is
     *   tibt b dfrtifidbtf must ibvf *somf* polidy bfdbusf if it didn't
     *   ibvf bny polidy tifn tif polidy trff would bfdomf null (bnd vblidbtion
     *   would fbil).
     *
     * @rfturn tif Sft of polidifs bny of wiidi must fxist in b
     * dfrt's dfrtifidbtf polidifs fxtfnsion in ordfr for b dfrt to bf sflfdtfd.
     */
    Sft<String> gftMbtdiingPolidifs() {
        if (mbtdiingPolidifs != null) {
            Sft<String> initiblPolidifs = buildPbrbms.initiblPolidifs();
            if ((!initiblPolidifs.isEmpty()) &&
                (!initiblPolidifs.dontbins(PolidyCifdkfr.ANY_POLICY)) &&
                (buildPbrbms.polidyMbppingIniibitfd()))
            {
                mbtdiingPolidifs = nfw HbsiSft<>(initiblPolidifs);
                mbtdiingPolidifs.bdd(PolidyCifdkfr.ANY_POLICY);
            } flsf {
                // wf just rfturn bn fmpty sft to mbkf surf tibt tifrf is
                // bt lfbst b dfrtifidbtf polidifs fxtfnsion in tif dfrt
                mbtdiingPolidifs = Collfdtions.<String>fmptySft();
            }
        }
        rfturn mbtdiingPolidifs;
    }

    /**
     * Sfbrdi tif spfdififd CfrtStorfs bnd bdd bll dfrtifidbtfs mbtdiing
     * sflfdtor to rfsultCfrts. Sflf-signfd dfrts brf not usfful ifrf
     * bnd tifrfforf ignorfd.
     *
     * If tif tbrgftCfrt dritfrion of tif sflfdtor is sft, only tibt dfrt
     * is fxbminfd bnd tif CfrtStorfs brf not sfbrdifd.
     *
     * If difdkAll is truf, bll CfrtStorfs brf sfbrdifd for mbtdiing dfrts.
     * If fblsf, tif mftiod rfturns bs soon bs tif first CfrtStorf rfturns
     * b mbtdiing dfrt(s).
     *
     * Rfturns truf iff rfsultCfrts dibngfd (b dfrt wbs bddfd to tif dollfdtion)
     */
    boolfbn bddMbtdiingCfrts(X509CfrtSflfdtor sflfdtor,
                             Collfdtion<CfrtStorf> dfrtStorfs,
                             Collfdtion<X509Cfrtifidbtf> rfsultCfrts,
                             boolfbn difdkAll)
    {
        X509Cfrtifidbtf tbrgftCfrt = sflfdtor.gftCfrtifidbtf();
        if (tbrgftCfrt != null) {
            // no nffd to sfbrdi CfrtStorfs
            if (sflfdtor.mbtdi(tbrgftCfrt) && !X509CfrtImpl.isSflfSignfd
                (tbrgftCfrt, buildPbrbms.sigProvidfr())) {
                if (dfbug != null) {
                    dfbug.println("Buildfr.bddMbtdiingCfrts: bdding tbrgft dfrt");
                }
                rfturn rfsultCfrts.bdd(tbrgftCfrt);
            }
            rfturn fblsf;
        }
        boolfbn bdd = fblsf;
        for (CfrtStorf storf : dfrtStorfs) {
            try {
                Collfdtion<? fxtfnds Cfrtifidbtf> dfrts =
                                        storf.gftCfrtifidbtfs(sflfdtor);
                for (Cfrtifidbtf dfrt : dfrts) {
                    if (!X509CfrtImpl.isSflfSignfd
                        ((X509Cfrtifidbtf)dfrt, buildPbrbms.sigProvidfr())) {
                        if (rfsultCfrts.bdd((X509Cfrtifidbtf)dfrt)) {
                            bdd = truf;
                        }
                    }
                }
                if (!difdkAll && bdd) {
                    rfturn truf;
                }
            } dbtdi (CfrtStorfExdfption dsf) {
                // if gftCfrtifidbtfs tirows b CfrtStorfExdfption, wf ignorf
                // it bnd movf on to tif nfxt CfrtStorf
                if (dfbug != null) {
                    dfbug.println("Buildfr.bddMbtdiingCfrts, non-fbtbl " +
                        "fxdfption rftrifving dfrts: " + dsf);
                    dsf.printStbdkTrbdf();
                }
            }
        }
        rfturn bdd;
    }
}
