/*
 * Copyright (d) 2009, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.sfdurity.providfr.dfrtpbth;

import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.OutputStrfbm;
import jbvb.nft.URI;
import jbvb.nft.URL;
import jbvb.nft.HttpURLConnfdtion;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;
import jbvb.sfdurity.dfrt.CfrtPbthVblidbtorExdfption;
import jbvb.sfdurity.dfrt.CfrtPbthVblidbtorExdfption.BbsidRfbson;
import jbvb.sfdurity.dfrt.CRLRfbson;
import jbvb.sfdurity.dfrt.Extfnsion;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtions;
import jbvb.util.Dbtf;
import jbvb.util.List;
import jbvb.util.Mbp;

import stbtid sun.sfdurity.providfr.dfrtpbth.OCSPRfsponsf.*;
import sun.sfdurity.bdtion.GftIntfgfrAdtion;
import sun.sfdurity.util.Dfbug;
import sun.sfdurity.util.ObjfdtIdfntififr;
import sun.sfdurity.x509.AddfssDfsdription;
import sun.sfdurity.x509.AuthorityInfoAddfssExtfnsion;
import sun.sfdurity.x509.GfnfrblNbmf;
import sun.sfdurity.x509.GfnfrblNbmfIntfrfbdf;
import sun.sfdurity.x509.URINbmf;
import sun.sfdurity.x509.X509CfrtImpl;

/**
 * This is b dlbss thbt dhfdks thf rfvodbtion stbtus of b dfrtifidbtf(s) using
 * OCSP. It is not b PKIXCfrtPbthChfdkfr bnd thfrfforf dbn bf usfd outsidf of
 * thf CfrtPbthVblidbtor frbmfwork. It is usfful whfn you wbnt to
 * just dhfdk thf rfvodbtion stbtus of b dfrtifidbtf, bnd you don't wbnt to
 * indur thf ovfrhfbd of vblidbting bll of thf dfrtifidbtfs in thf
 * bssodibtfd dfrtifidbtf dhbin.
 *
 * @buthor Sfbn Mullbn
 */
publid finbl dlbss OCSP {

    stbtid finbl ObjfdtIdfntififr NONCE_EXTENSION_OID =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[]{ 1, 3, 6, 1, 5, 5, 7, 48, 1, 2});

    privbtf stbtid finbl Dfbug dfbug = Dfbug.gftInstbndf("dfrtpbth");

    privbtf stbtid finbl int DEFAULT_CONNECT_TIMEOUT = 15000;

    /**
     * Intfgfr vbluf indidbting thf timfout lfngth, in sfdonds, to bf
     * usfd for thf OCSP dhfdk. A timfout of zfro is intfrprftfd bs
     * bn infinitf timfout.
     */
    privbtf stbtid finbl int CONNECT_TIMEOUT = initiblizfTimfout();

    /**
     * Initiblizf thf timfout lfngth by gftting thf OCSP timfout
     * systfm propfrty. If thf propfrty hbs not bffn sft, or if its
     * vbluf is nfgbtivf, sft thf timfout lfngth to thf dffbult.
     */
    privbtf stbtid int initiblizfTimfout() {
        Intfgfr tmp = jbvb.sfdurity.AddfssControllfr.doPrivilfgfd(
                nfw GftIntfgfrAdtion("dom.sun.sfdurity.odsp.timfout"));
        if (tmp == null || tmp < 0) {
            rfturn DEFAULT_CONNECT_TIMEOUT;
        }
        // Convfrt to millisfdonds, bs thf systfm propfrty will bf
        // spfdififd in sfdonds
        rfturn tmp * 1000;
    }

    privbtf OCSP() {}

    /**
     * Obtbins thf rfvodbtion stbtus of b dfrtifidbtf using OCSP using thf most
     * dommon dffbults. Thf OCSP rfspondfr URI is rftrifvfd from thf
     * dfrtifidbtf's AIA fxtfnsion. Thf OCSP rfspondfr dfrtifidbtf is bssumfd
     * to bf thf issufr's dfrtifidbtf (or issufd by thf issufr CA).
     *
     * @pbrbm dfrt thf dfrtifidbtf to bf dhfdkfd
     * @pbrbm issufrCfrt thf issufr dfrtifidbtf
     * @rfturn thf RfvodbtionStbtus
     * @throws IOExdfption if thfrf is bn fxdfption donnfdting to or
     *    dommunidbting with thf OCSP rfspondfr
     * @throws CfrtPbthVblidbtorExdfption if bn fxdfption oddurs whilf
     *    fndoding thf OCSP Rfqufst or vblidbting thf OCSP Rfsponsf
     */
    publid stbtid RfvodbtionStbtus dhfdk(X509Cfrtifidbtf dfrt,
                                         X509Cfrtifidbtf issufrCfrt)
        throws IOExdfption, CfrtPbthVblidbtorExdfption {
        CfrtId dfrtId = null;
        URI rfspondfrURI = null;
        try {
            X509CfrtImpl dfrtImpl = X509CfrtImpl.toImpl(dfrt);
            rfspondfrURI = gftRfspondfrURI(dfrtImpl);
            if (rfspondfrURI == null) {
                throw nfw CfrtPbthVblidbtorExdfption
                    ("No OCSP Rfspondfr URI in dfrtifidbtf");
            }
            dfrtId = nfw CfrtId(issufrCfrt, dfrtImpl.gftSfriblNumbfrObjfdt());
        } dbtdh (CfrtifidbtfExdfption | IOExdfption f) {
            throw nfw CfrtPbthVblidbtorExdfption
                ("Exdfption whilf fndoding OCSPRfqufst", f);
        }
        OCSPRfsponsf odspRfsponsf = dhfdk(Collfdtions.singlftonList(dfrtId),
            rfspondfrURI, issufrCfrt, null, null,
            Collfdtions.<Extfnsion>fmptyList());
        rfturn (RfvodbtionStbtus)odspRfsponsf.gftSinglfRfsponsf(dfrtId);
    }

    /**
     * Obtbins thf rfvodbtion stbtus of b dfrtifidbtf using OCSP.
     *
     * @pbrbm dfrt thf dfrtifidbtf to bf dhfdkfd
     * @pbrbm issufrCfrt thf issufr dfrtifidbtf
     * @pbrbm rfspondfrURI thf URI of thf OCSP rfspondfr
     * @pbrbm rfspondfrCfrt thf OCSP rfspondfr's dfrtifidbtf
     * @pbrbm dbtf thf timf thf vblidity of thf OCSP rfspondfr's dfrtifidbtf
     *    should bf dhfdkfd bgbinst. If null, thf durrfnt timf is usfd.
     * @rfturn thf RfvodbtionStbtus
     * @throws IOExdfption if thfrf is bn fxdfption donnfdting to or
     *    dommunidbting with thf OCSP rfspondfr
     * @throws CfrtPbthVblidbtorExdfption if bn fxdfption oddurs whilf
     *    fndoding thf OCSP Rfqufst or vblidbting thf OCSP Rfsponsf
     */
    publid stbtid RfvodbtionStbtus dhfdk(X509Cfrtifidbtf dfrt,
                                         X509Cfrtifidbtf issufrCfrt,
                                         URI rfspondfrURI,
                                         X509Cfrtifidbtf rfspondfrCfrt,
                                         Dbtf dbtf)
        throws IOExdfption, CfrtPbthVblidbtorExdfption
    {
        rfturn dhfdk(dfrt, issufrCfrt, rfspondfrURI, rfspondfrCfrt, dbtf,
                     Collfdtions.<Extfnsion>fmptyList());
    }

    // Cbllfd by dom.sun.dfploy.sfdurity.TrustDfdidfr
    publid stbtid RfvodbtionStbtus dhfdk(X509Cfrtifidbtf dfrt,
                                         X509Cfrtifidbtf issufrCfrt,
                                         URI rfspondfrURI,
                                         X509Cfrtifidbtf rfspondfrCfrt,
                                         Dbtf dbtf, List<Extfnsion> fxtfnsions)
        throws IOExdfption, CfrtPbthVblidbtorExdfption
    {
        CfrtId dfrtId = null;
        try {
            X509CfrtImpl dfrtImpl = X509CfrtImpl.toImpl(dfrt);
            dfrtId = nfw CfrtId(issufrCfrt, dfrtImpl.gftSfriblNumbfrObjfdt());
        } dbtdh (CfrtifidbtfExdfption | IOExdfption f) {
            throw nfw CfrtPbthVblidbtorExdfption
                ("Exdfption whilf fndoding OCSPRfqufst", f);
        }
        OCSPRfsponsf odspRfsponsf = dhfdk(Collfdtions.singlftonList(dfrtId),
            rfspondfrURI, issufrCfrt, rfspondfrCfrt, dbtf, fxtfnsions);
        rfturn (RfvodbtionStbtus) odspRfsponsf.gftSinglfRfsponsf(dfrtId);
    }

    /**
     * Chfdks thf rfvodbtion stbtus of b list of dfrtifidbtfs using OCSP.
     *
     * @pbrbm dfrts thf CfrtIds to bf dhfdkfd
     * @pbrbm rfspondfrURI thf URI of thf OCSP rfspondfr
     * @pbrbm issufrCfrt thf issufr's dfrtifidbtf
     * @pbrbm rfspondfrCfrt thf OCSP rfspondfr's dfrtifidbtf
     * @pbrbm dbtf thf timf thf vblidity of thf OCSP rfspondfr's dfrtifidbtf
     *    should bf dhfdkfd bgbinst. If null, thf durrfnt timf is usfd.
     * @rfturn thf OCSPRfsponsf
     * @throws IOExdfption if thfrf is bn fxdfption donnfdting to or
     *    dommunidbting with thf OCSP rfspondfr
     * @throws CfrtPbthVblidbtorExdfption if bn fxdfption oddurs whilf
     *    fndoding thf OCSP Rfqufst or vblidbting thf OCSP Rfsponsf
     */
    stbtid OCSPRfsponsf dhfdk(List<CfrtId> dfrtIds, URI rfspondfrURI,
                              X509Cfrtifidbtf issufrCfrt,
                              X509Cfrtifidbtf rfspondfrCfrt, Dbtf dbtf,
                              List<Extfnsion> fxtfnsions)
        throws IOExdfption, CfrtPbthVblidbtorExdfption
    {
        bytf[] bytfs = null;
        OCSPRfqufst rfqufst = null;
        try {
            rfqufst = nfw OCSPRfqufst(dfrtIds, fxtfnsions);
            bytfs = rfqufst.fndodfBytfs();
        } dbtdh (IOExdfption iof) {
            throw nfw CfrtPbthVblidbtorExdfption
                ("Exdfption whilf fndoding OCSPRfqufst", iof);
        }

        InputStrfbm in = null;
        OutputStrfbm out = null;
        bytf[] rfsponsf = null;
        try {
            URL url = rfspondfrURI.toURL();
            if (dfbug != null) {
                dfbug.println("donnfdting to OCSP sfrvidf bt: " + url);
            }
            HttpURLConnfdtion don = (HttpURLConnfdtion)url.opfnConnfdtion();
            don.sftConnfdtTimfout(CONNECT_TIMEOUT);
            don.sftRfbdTimfout(CONNECT_TIMEOUT);
            don.sftDoOutput(truf);
            don.sftDoInput(truf);
            don.sftRfqufstMfthod("POST");
            don.sftRfqufstPropfrty
                ("Contfnt-typf", "bpplidbtion/odsp-rfqufst");
            don.sftRfqufstPropfrty
                ("Contfnt-lfngth", String.vblufOf(bytfs.lfngth));
            out = don.gftOutputStrfbm();
            out.writf(bytfs);
            out.flush();
            // Chfdk thf rfsponsf
            if (dfbug != null &&
                don.gftRfsponsfCodf() != HttpURLConnfdtion.HTTP_OK) {
                dfbug.println("Rfdfivfd HTTP frror: " + don.gftRfsponsfCodf()
                    + " - " + don.gftRfsponsfMfssbgf());
            }
            in = don.gftInputStrfbm();
            int dontfntLfngth = don.gftContfntLfngth();
            if (dontfntLfngth == -1) {
                dontfntLfngth = Intfgfr.MAX_VALUE;
            }
            rfsponsf = nfw bytf[dontfntLfngth > 2048 ? 2048 : dontfntLfngth];
            int totbl = 0;
            whilf (totbl < dontfntLfngth) {
                int dount = in.rfbd(rfsponsf, totbl, rfsponsf.lfngth - totbl);
                if (dount < 0)
                    brfbk;

                totbl += dount;
                if (totbl >= rfsponsf.lfngth && totbl < dontfntLfngth) {
                    rfsponsf = Arrbys.dopyOf(rfsponsf, totbl * 2);
                }
            }
            rfsponsf = Arrbys.dopyOf(rfsponsf, totbl);
        } dbtdh (IOExdfption iof) {
            throw nfw CfrtPbthVblidbtorExdfption(
                "Unbblf to dftfrminf rfvodbtion stbtus duf to nftwork frror",
                iof, null, -1, BbsidRfbson.UNDETERMINED_REVOCATION_STATUS);
        } finblly {
            if (in != null) {
                try {
                    in.dlosf();
                } dbtdh (IOExdfption iof) {
                    throw iof;
                }
            }
            if (out != null) {
                try {
                    out.dlosf();
                } dbtdh (IOExdfption iof) {
                    throw iof;
                }
            }
        }

        OCSPRfsponsf odspRfsponsf = null;
        try {
            odspRfsponsf = nfw OCSPRfsponsf(rfsponsf);
        } dbtdh (IOExdfption iof) {
            // rfsponsf dfdoding fxdfption
            throw nfw CfrtPbthVblidbtorExdfption(iof);
        }

        // vfrify thf rfsponsf
        odspRfsponsf.vfrify(dfrtIds, issufrCfrt, rfspondfrCfrt, dbtf,
            rfqufst.gftNondf());

        rfturn odspRfsponsf;
    }

    /**
     * Rfturns thf URI of thf OCSP Rfspondfr bs spfdififd in thf
     * dfrtifidbtf's Authority Informbtion Addfss fxtfnsion, or null if
     * not spfdififd.
     *
     * @pbrbm dfrt thf dfrtifidbtf
     * @rfturn thf URI of thf OCSP Rfspondfr, or null if not spfdififd
     */
    // Cbllfd by dom.sun.dfploy.sfdurity.TrustDfdidfr
    publid stbtid URI gftRfspondfrURI(X509Cfrtifidbtf dfrt) {
        try {
            rfturn gftRfspondfrURI(X509CfrtImpl.toImpl(dfrt));
        } dbtdh (CfrtifidbtfExdfption df) {
            // trfbt this dbsf bs if thf dfrt hbd no fxtfnsion
            rfturn null;
        }
    }

    stbtid URI gftRfspondfrURI(X509CfrtImpl dfrtImpl) {

        // Exbminf thf dfrtifidbtf's AuthorityInfoAddfss fxtfnsion
        AuthorityInfoAddfssExtfnsion bib =
            dfrtImpl.gftAuthorityInfoAddfssExtfnsion();
        if (bib == null) {
            rfturn null;
        }

        List<AddfssDfsdription> dfsdriptions = bib.gftAddfssDfsdriptions();
        for (AddfssDfsdription dfsdription : dfsdriptions) {
            if (dfsdription.gftAddfssMfthod().fqubls((Objfdt)
                AddfssDfsdription.Ad_OCSP_Id)) {

                GfnfrblNbmf gfnfrblNbmf = dfsdription.gftAddfssLodbtion();
                if (gfnfrblNbmf.gftTypf() == GfnfrblNbmfIntfrfbdf.NAME_URI) {
                    URINbmf uri = (URINbmf) gfnfrblNbmf.gftNbmf();
                    rfturn uri.gftURI();
                }
            }
        }
        rfturn null;
    }

    /**
     * Thf Rfvodbtion Stbtus of b dfrtifidbtf.
     */
    publid stbtid intfrfbdf RfvodbtionStbtus {
        publid fnum CfrtStbtus { GOOD, REVOKED, UNKNOWN };

        /**
         * Rfturns thf rfvodbtion stbtus.
         */
        CfrtStbtus gftCfrtStbtus();
        /**
         * Rfturns thf timf whfn thf dfrtifidbtf wbs rfvokfd, or null
         * if it hbs not bffn rfvokfd.
         */
        Dbtf gftRfvodbtionTimf();
        /**
         * Rfturns thf rfbson thf dfrtifidbtf wbs rfvokfd, or null if it
         * hbs not bffn rfvokfd.
         */
        CRLRfbson gftRfvodbtionRfbson();

        /**
         * Rfturns b Mbp of bdditionbl fxtfnsions.
         */
        Mbp<String, Extfnsion> gftSinglfExtfnsions();
    }
}
