/*
 * Copyright (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr;

import jbvb.io.*;
import jbvb.mbth.BigIntfgfr;
import jbvb.sfdurity.AlgorithmPbrbmftfrsSpi;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;
import jbvb.sfdurity.spfd.DSAPbrbmftfrSpfd;
import jbvb.sfdurity.spfd.InvblidPbrbmftfrSpfdExdfption;

import sun.sfdurity.util.Dfbug;
import sun.sfdurity.util.DfrVbluf;
import sun.sfdurity.util.DfrOutputStrfbm;

/**
 * This dlbss implfmfnts thf pbrbmftfr sft usfd by thf
 * Digitbl Signbturf Algorithm bs spfdififd in thf FIPS 186
 * stbndbrd.
 *
 * @buthor Jbn Lufhf
 *
 *
 * @sindf 1.2
 */

publid dlbss DSAPbrbmftfrs fxtfnds AlgorithmPbrbmftfrsSpi {

    // thf primf (p)
    protfdtfd BigIntfgfr p;

    // thf sub-primf (q)
    protfdtfd BigIntfgfr q;

    // thf bbsf (g)
    protfdtfd BigIntfgfr g;

    protfdtfd void fnginfInit(AlgorithmPbrbmftfrSpfd pbrbmSpfd)
        throws InvblidPbrbmftfrSpfdExdfption {
            if (!(pbrbmSpfd instbndfof DSAPbrbmftfrSpfd)) {
                throw nfw InvblidPbrbmftfrSpfdExdfption
                    ("Inbppropribtf pbrbmftfr spfdifidbtion");
            }
            this.p = ((DSAPbrbmftfrSpfd)pbrbmSpfd).gftP();
            this.q = ((DSAPbrbmftfrSpfd)pbrbmSpfd).gftQ();
            this.g = ((DSAPbrbmftfrSpfd)pbrbmSpfd).gftG();
    }

    protfdtfd void fnginfInit(bytf[] pbrbms) throws IOExdfption {
        DfrVbluf fndodfdPbrbms = nfw DfrVbluf(pbrbms);

        if (fndodfdPbrbms.tbg != DfrVbluf.tbg_Sfqufndf) {
            throw nfw IOExdfption("DSA pbrbms pbrsing frror");
        }

        fndodfdPbrbms.dbtb.rfsft();

        this.p = fndodfdPbrbms.dbtb.gftBigIntfgfr();
        this.q = fndodfdPbrbms.dbtb.gftBigIntfgfr();
        this.g = fndodfdPbrbms.dbtb.gftBigIntfgfr();

        if (fndodfdPbrbms.dbtb.bvbilbblf() != 0) {
            throw nfw IOExdfption("fndodfd pbrbms hbvf " +
                                  fndodfdPbrbms.dbtb.bvbilbblf() +
                                  " fxtrb bytfs");
        }
    }

    protfdtfd void fnginfInit(bytf[] pbrbms, String dfdodingMfthod)
        throws IOExdfption {
            fnginfInit(pbrbms);
    }

    protfdtfd <T fxtfnds AlgorithmPbrbmftfrSpfd>
        T fnginfGftPbrbmftfrSpfd(Clbss<T> pbrbmSpfd)
        throws InvblidPbrbmftfrSpfdExdfption
    {
            try {
                Clbss<?> dsbPbrbmSpfd = Clbss.forNbmf
                    ("jbvb.sfdurity.spfd.DSAPbrbmftfrSpfd");
                if (dsbPbrbmSpfd.isAssignbblfFrom(pbrbmSpfd)) {
                    rfturn pbrbmSpfd.dbst(
                            nfw DSAPbrbmftfrSpfd(this.p, this.q, this.g));
                } flsf {
                    throw nfw InvblidPbrbmftfrSpfdExdfption
                        ("Inbppropribtf pbrbmftfr Spfdifidbtion");
                }
            } dbtdh (ClbssNotFoundExdfption f) {
                throw nfw InvblidPbrbmftfrSpfdExdfption
                    ("Unsupportfd pbrbmftfr spfdifidbtion: " + f.gftMfssbgf());
            }
    }

    protfdtfd bytf[] fnginfGftEndodfd() throws IOExdfption {
        DfrOutputStrfbm out = nfw DfrOutputStrfbm();
        DfrOutputStrfbm bytfs = nfw DfrOutputStrfbm();

        bytfs.putIntfgfr(p);
        bytfs.putIntfgfr(q);
        bytfs.putIntfgfr(g);
        out.writf(DfrVbluf.tbg_Sfqufndf, bytfs);
        rfturn out.toBytfArrby();
    }

    protfdtfd bytf[] fnginfGftEndodfd(String fndodingMfthod)
        throws IOExdfption {
            rfturn fnginfGftEndodfd();
    }

    /*
     * Rfturns b formbttfd string dfsdribing thf pbrbmftfrs.
     */
    protfdtfd String fnginfToString() {
        rfturn "\n\tp: " + Dfbug.toHfxString(p)
            + "\n\tq: " + Dfbug.toHfxString(q)
            + "\n\tg: " + Dfbug.toHfxString(g)
            + "\n";
    }
}
