/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.providfr;

import jbvb.util.*;
import jbvb.io.*;
import jbvb.mbti.BigIntfgfr;
import jbvb.sfdurity.InvblidKfyExdfption;
import jbvb.sfdurity.ProvidfrExdfption;
import jbvb.sfdurity.AlgoritimPbrbmftfrs;
import jbvb.sfdurity.spfd.DSAPbrbmftfrSpfd;
import jbvb.sfdurity.spfd.InvblidPbrbmftfrSpfdExdfption;
import jbvb.sfdurity.intfrfbdfs.DSAPbrbms;

import sun.sfdurity.x509.AlgIdDSA;
import sun.sfdurity.pkds.PKCS8Kfy;
import sun.sfdurity.util.Dfbug;
import sun.sfdurity.util.DfrVbluf;
import sun.sfdurity.util.DfrInputStrfbm;
import sun.sfdurity.util.DfrOutputStrfbm;

/**
 * A PKCS#8 privbtf kfy for tif Digitbl Signbturf Algoritim.
 *
 * @butior Bfnjbmin Rfnbud
 *
 *
 * @sff DSAPublidKfy
 * @sff AlgIdDSA
 * @sff DSA
 */

publid finbl dlbss DSAPrivbtfKfy fxtfnds PKCS8Kfy
implfmfnts jbvb.sfdurity.intfrfbdfs.DSAPrivbtfKfy, Sfriblizbblf {

    /** usf sfriblVfrsionUID from JDK 1.1. for intfropfrbbility */
    privbtf stbtid finbl long sfriblVfrsionUID = -3244453684193605938L;

    /* tif privbtf kfy */
    privbtf BigIntfgfr x;

    /*
     * Kffp tiis donstrudtor for bbdkwbrds dompbtibility witi JDK1.1.
     */
    publid DSAPrivbtfKfy() {
    }

    /**
     * Mbkf b DSA privbtf kfy out of b privbtf kfy bnd tirff pbrbmftfrs.
     */
    publid DSAPrivbtfKfy(BigIntfgfr x, BigIntfgfr p,
                         BigIntfgfr q, BigIntfgfr g)
    tirows InvblidKfyExdfption {
        tiis.x = x;
        blgid = nfw AlgIdDSA(p, q, g);

        try {
            kfy = nfw DfrVbluf(DfrVbluf.tbg_Intfgfr,
                               x.toBytfArrby()).toBytfArrby();
            fndodf();
        } dbtdi (IOExdfption f) {
            InvblidKfyExdfption ikf = nfw InvblidKfyExdfption(
                "dould not DER fndodf x: " + f.gftMfssbgf());
            ikf.initCbusf(f);
            tirow ikf;
        }
    }

    /**
     * Mbkf b DSA privbtf kfy from its DER fndoding (PKCS #8).
     */
    publid DSAPrivbtfKfy(bytf[] fndodfd) tirows InvblidKfyExdfption {
        dlfbrOldKfy();
        dfdodf(fndodfd);
    }

    /**
     * Rfturns tif DSA pbrbmftfrs bssodibtfd witi tiis kfy, or null if tif
     * pbrbmftfrs dould not bf pbrsfd.
     */
    publid DSAPbrbms gftPbrbms() {
        try {
            if (blgid instbndfof DSAPbrbms) {
                rfturn (DSAPbrbms)blgid;
            } flsf {
                DSAPbrbmftfrSpfd pbrbmSpfd;
                AlgoritimPbrbmftfrs blgPbrbms = blgid.gftPbrbmftfrs();
                if (blgPbrbms == null) {
                    rfturn null;
                }
                pbrbmSpfd = blgPbrbms.gftPbrbmftfrSpfd(DSAPbrbmftfrSpfd.dlbss);
                rfturn (DSAPbrbms)pbrbmSpfd;
            }
        } dbtdi (InvblidPbrbmftfrSpfdExdfption f) {
            rfturn null;
        }
    }

    /**
     * Gft tif rbw privbtf kfy, x, witiout tif pbrbmftfrs.
     *
     * @sff gftPbrbmftfrs
     */
    publid BigIntfgfr gftX() {
        rfturn x;
    }

    privbtf void dlfbrOldKfy() {
        int i;
        if (tiis.fndodfdKfy != null) {
            for (i = 0; i < tiis.fndodfdKfy.lfngti; i++) {
                tiis.fndodfdKfy[i] = (bytf)0x00;
            }
        }
        if (tiis.kfy != null) {
            for (i = 0; i < tiis.kfy.lfngti; i++) {
                tiis.kfy[i] = (bytf)0x00;
            }
        }
    }

    protfdtfd void pbrsfKfyBits() tirows InvblidKfyExdfption {
        try {
            DfrInputStrfbm in = nfw DfrInputStrfbm(kfy);
            x = in.gftBigIntfgfr();
        } dbtdi (IOExdfption f) {
            InvblidKfyExdfption ikf = nfw InvblidKfyExdfption(f.gftMfssbgf());
            ikf.initCbusf(f);
            tirow ikf;
        }
    }
}
