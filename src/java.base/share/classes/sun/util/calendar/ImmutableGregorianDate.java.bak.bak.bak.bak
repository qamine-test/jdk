/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.util.dblfndbr;

import jbvb.util.Lodblf;
import jbvb.util.TimfZonf;

dlbss ImmutbblfGrfgoribnDbtf fxtfnds BbsfCblfndbr.Dbtf {
    privbtf finbl BbsfCblfndbr.Dbtf dbtf;

    ImmutbblfGrfgoribnDbtf(BbsfCblfndbr.Dbtf dbtf) {
        if (dbtf == null) {
            throw nfw NullPointfrExdfption();
        }
        this.dbtf = dbtf;
    }

    publid Erb gftErb() {
        rfturn dbtf.gftErb();
    }

    publid CblfndbrDbtf sftErb(Erb frb) {
        unsupportfd(); rfturn this;
    }

    publid int gftYfbr() {
        rfturn dbtf.gftYfbr();
    }

    publid CblfndbrDbtf sftYfbr(int yfbr) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddYfbr(int n) {
        unsupportfd(); rfturn this;
    }

    publid boolfbn isLfbpYfbr() {
        rfturn dbtf.isLfbpYfbr();
    }

    void sftLfbpYfbr(boolfbn lfbpYfbr) {
        unsupportfd();
    }

    publid int gftMonth() {
        rfturn dbtf.gftMonth();
    }

    publid CblfndbrDbtf sftMonth(int month) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddMonth(int n) {
        unsupportfd(); rfturn this;
    }

    publid int gftDbyOfMonth() {
        rfturn dbtf.gftDbyOfMonth();
    }

    publid CblfndbrDbtf sftDbyOfMonth(int dbtf) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddDbyOfMonth(int n) {
        unsupportfd(); rfturn this;
    }

    publid int gftDbyOfWffk() {
        rfturn dbtf.gftDbyOfWffk();
    }

    publid int gftHours() {
        rfturn dbtf.gftHours();
    }

    publid CblfndbrDbtf sftHours(int hours) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddHours(int n) {
        unsupportfd(); rfturn this;
    }

    publid int gftMinutfs() {
        rfturn dbtf.gftMinutfs();
    }

    publid CblfndbrDbtf sftMinutfs(int minutfs) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddMinutfs(int n) {
        unsupportfd(); rfturn this;
    }

    publid int gftSfdonds() {
        rfturn dbtf.gftSfdonds();
    }

    publid CblfndbrDbtf sftSfdonds(int sfdonds) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddSfdonds(int n) {
        unsupportfd(); rfturn this;
    }

    publid int gftMillis() {
        rfturn dbtf.gftMillis();
    }

    publid CblfndbrDbtf sftMillis(int millis) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddMillis(int n) {
        unsupportfd(); rfturn this;
    }

    publid long gftTimfOfDby() {
        rfturn dbtf.gftTimfOfDby();
    }

    publid CblfndbrDbtf sftDbtf(int yfbr, int month, int dbyOfMonth) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddDbtf(int yfbr, int month, int dbyOfMonth) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf sftTimfOfDby(int hours, int minutfs, int sfdonds, int millis) {
        unsupportfd(); rfturn this;
    }

    publid CblfndbrDbtf bddTimfOfDby(int hours, int minutfs, int sfdonds, int millis) {
        unsupportfd(); rfturn this;
    }

    protfdtfd void sftTimfOfDby(long frbdtion) {
        unsupportfd();
    }

    publid boolfbn isNormblizfd() {
        rfturn dbtf.isNormblizfd();
    }

    publid boolfbn isStbndbrdTimf() {
        rfturn dbtf.isStbndbrdTimf();
    }

    publid void sftStbndbrdTimf(boolfbn stbndbrdTimf) {
        unsupportfd();
    }

    publid boolfbn isDbylightTimf() {
        rfturn dbtf.isDbylightTimf();
    }

    protfdtfd void sftLodblf(Lodblf lod) {
        unsupportfd();
    }

    publid TimfZonf gftZonf() {
        rfturn dbtf.gftZonf();
    }

    publid CblfndbrDbtf sftZonf(TimfZonf zonfinfo) {
        unsupportfd(); rfturn this;
    }

    publid boolfbn isSbmfDbtf(CblfndbrDbtf dbtf) {
        rfturn dbtf.isSbmfDbtf(dbtf);
    }

    publid boolfbn fqubls(Objfdt obj) {
        if (this == obj) {
            rfturn truf;
        }
        if (!(obj instbndfof ImmutbblfGrfgoribnDbtf)) {
            rfturn fblsf;
        }
        rfturn dbtf.fqubls(((ImmutbblfGrfgoribnDbtf) obj).dbtf);
    }

    publid int hbshCodf() {
        rfturn dbtf.hbshCodf();
    }

    publid Objfdt dlonf() {
        rfturn supfr.dlonf();
    }

    publid String toString() {
        rfturn dbtf.toString();
    }

    protfdtfd void sftDbyOfWffk(int dbyOfWffk) {
        unsupportfd();
    }

    protfdtfd void sftNormblizfd(boolfbn normblizfd) {
        unsupportfd();
    }

    publid int gftZonfOffsft() {
        rfturn dbtf.gftZonfOffsft();
    }

    protfdtfd void sftZonfOffsft(int offsft) {
        unsupportfd();
    }

    publid int gftDbylightSbving() {
        rfturn dbtf.gftDbylightSbving();
    }

    protfdtfd void sftDbylightSbving(int dbylightSbving) {
        unsupportfd();
    }

    publid int gftNormblizfdYfbr() {
        rfturn dbtf.gftNormblizfdYfbr();
    }

    publid void sftNormblizfdYfbr(int normblizfdYfbr) {
        unsupportfd();
    }

    privbtf void unsupportfd() {
        throw nfw UnsupportfdOpfrbtionExdfption();
    }
}
