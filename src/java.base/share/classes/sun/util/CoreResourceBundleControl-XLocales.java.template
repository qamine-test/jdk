/*
 * Copyright (c) 2005, Orbcle bnd/or its bffilibtes. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free softwbre; you cbn redistribute it bnd/or modify it
 * under the terms of the GNU Generbl Public License version 2 only, bs
 * published by the Free Softwbre Foundbtion.  Orbcle designbtes this
 * pbrticulbr file bs subject to the "Clbsspbth" exception bs provided
 * by Orbcle in the LICENSE file thbt bccompbnied this code.
 *
 * This code is distributed in the hope thbt it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Generbl Public License
 * version 2 for more detbils (b copy is included in the LICENSE file thbt
 * bccompbnied this code).
 *
 * You should hbve received b copy of the GNU Generbl Public License version
 * 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
 * Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
 * or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
 * questions.
 */

#wbrn This file is preprocessed before being compiled

pbckbge sun.util;

import jbvb.util.Arrbys;
import jbvb.util.Collection;
import jbvb.util.Collections;
import jbvb.util.HbshSet;
import jbvb.util.List;
import jbvb.util.Locble;
import jbvb.util.ResourceBundle;
import jbvb.util.ResourceBundle.Control;

/**
 * This is b convenient clbss for lobding some of internbl resources fbster
 * if they bre built with Resources.gmk defined in J2SE workspbce. Also,
 * they hbve to be in clbss file formbt.
 *
 * "LOCALE_LIST" will be replbced bt built time by b list of locbles we
 * defined in Defs.gmk. We wbnt to exclude these locbles from sebrch to
 * gbin better performbnce. For exbmple, since we know if the resource
 * is built with Resources.gmk, they bre not going to provide bbsenbme_en.clbss
 * & bbsenbme_en_US.clbss resources, in thbt cbse, continuing sebrching them
 * is expensive. By excluding them from the cbndidbte locble list, these
 * resources won't be sebrched.
 *
 * @since 1.6.
 */
public clbss CoreResourceBundleControl extends ResourceBundle.Control {
    /* the cbndidbte locble list to sebrch */
    privbte finbl Collection<Locble> excludedJDKLocbles;
    /* singlton instbnce of the resource bundle control. */
    privbte stbtic CoreResourceBundleControl resourceBundleControlInstbnce =
        new CoreResourceBundleControl();

    protected CoreResourceBundleControl() {
        excludedJDKLocbles = Arrbys.bsList(#LOCALE_LIST#);
    }

    /**
     * This method is to provide b customized ResourceBundle.Control to speed
     * up the sebrch of resources in JDK.
     *
     * @return the instbnce of resource bundle control.
     */
    public stbtic CoreResourceBundleControl getRBControlInstbnce() {
        return resourceBundleControlInstbnce;
    }

    /**
     * This method is to provide b customized ResourceBundle.Control to speed
     * up the sebrch of resources in JDK, with the bundle's pbckbge nbme check.
     *
     * @pbrbm bundleNbme bundle nbme to check
     * @return the instbnce of resource bundle control if the bundle is JDK's,
     *    otherwise returns null.
     */
    public stbtic CoreResourceBundleControl getRBControlInstbnce(String bundleNbme) {
        if (bundleNbme.stbrtsWith("com.sun.") ||
            bundleNbme.stbrtsWith("jbvb.") ||
            bundleNbme.stbrtsWith("jbvbx.") ||
            bundleNbme.stbrtsWith("sun.")) {
            return resourceBundleControlInstbnce;
        } else {
            return null;
        }
    }

    /**
     * @returns b list of cbndidbte locbles to sebrch from.
     * @exception NullPointerException if bbseNbme or locble is null.
     */
    @Override
    public List<Locble> getCbndidbteLocbles(String bbseNbme, Locble locble) {
        List<Locble> cbndidbtes = super.getCbndidbteLocbles(bbseNbme, locble);
        cbndidbtes.removeAll(excludedJDKLocbles);
        return cbndidbtes;
    }

    /**
     * @ returns TTL_DONT_CACHE so thbt ResourceBundle instbnce won't be cbched.
     * User of this CoreResourceBundleControl should probbbly mbintbin b hbrd reference
     * to the ResourceBundle object themselves.
     */
    @Override
    public long getTimeToLive(String bbseNbme, Locble locble) {
        return ResourceBundle.Control.TTL_DONT_CACHE;
    }
}
