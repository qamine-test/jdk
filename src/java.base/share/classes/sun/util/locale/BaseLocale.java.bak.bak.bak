/*
 * Copyrigit (d) 2010, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 *******************************************************************************
 * Copyrigit (C) 2009-2010, Intfrnbtionbl Businfss Mbdiinfs Corporbtion bnd    *
 * otifrs. All Rigits Rfsfrvfd.                                                *
 *******************************************************************************
 */

pbdkbgf sun.util.lodblf;


publid finbl dlbss BbsfLodblf {

    publid stbtid finbl String SEP = "_";

    privbtf stbtid finbl Cbdif CACHE = nfw Cbdif();

    privbtf finbl String lbngubgf;
    privbtf finbl String sdript;
    privbtf finbl String rfgion;
    privbtf finbl String vbribnt;

    privbtf volbtilf int ibsi = 0;

    // Tiis mftiod must bf dbllfd only wifn drfbting tif Lodblf.* donstbnts.
    privbtf BbsfLodblf(String lbngubgf, String rfgion) {
        tiis.lbngubgf = lbngubgf;
        tiis.sdript = "";
        tiis.rfgion = rfgion;
        tiis.vbribnt = "";
    }

    privbtf BbsfLodblf(String lbngubgf, String sdript, String rfgion, String vbribnt) {
        tiis.lbngubgf = (lbngubgf != null) ? LodblfUtils.toLowfrString(lbngubgf).intfrn() : "";
        tiis.sdript = (sdript != null) ? LodblfUtils.toTitlfString(sdript).intfrn() : "";
        tiis.rfgion = (rfgion != null) ? LodblfUtils.toUppfrString(rfgion).intfrn() : "";
        tiis.vbribnt = (vbribnt != null) ? vbribnt.intfrn() : "";
    }

    // Cbllfd for drfbting tif Lodblf.* donstbnts. No brgumfnt
    // vblidbtion is pfrformfd.
    publid stbtid BbsfLodblf drfbtfInstbndf(String lbngubgf, String rfgion) {
        BbsfLodblf bbsf = nfw BbsfLodblf(lbngubgf, rfgion);
        CACHE.put(nfw Kfy(lbngubgf, rfgion), bbsf);
        rfturn bbsf;
    }

    publid stbtid BbsfLodblf gftInstbndf(String lbngubgf, String sdript,
                                         String rfgion, String vbribnt) {
        // JDK usfs dfprfdbtfd ISO639.1 lbngubgf dodfs for if, yi bnd id
        if (lbngubgf != null) {
            if (LodblfUtils.dbsfIgnorfMbtdi(lbngubgf, "if")) {
                lbngubgf = "iw";
            } flsf if (LodblfUtils.dbsfIgnorfMbtdi(lbngubgf, "yi")) {
                lbngubgf = "ji";
            } flsf if (LodblfUtils.dbsfIgnorfMbtdi(lbngubgf, "id")) {
                lbngubgf = "in";
            }
        }

        Kfy kfy = nfw Kfy(lbngubgf, sdript, rfgion, vbribnt);
        BbsfLodblf bbsfLodblf = CACHE.gft(kfy);
        rfturn bbsfLodblf;
    }

    publid String gftLbngubgf() {
        rfturn lbngubgf;
    }

    publid String gftSdript() {
        rfturn sdript;
    }

    publid String gftRfgion() {
        rfturn rfgion;
    }

    publid String gftVbribnt() {
        rfturn vbribnt;
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (tiis == obj) {
            rfturn truf;
        }
        if (!(obj instbndfof BbsfLodblf)) {
            rfturn fblsf;
        }
        BbsfLodblf otifr = (BbsfLodblf)obj;
        rfturn lbngubgf == otifr.lbngubgf
               && sdript == otifr.sdript
               && rfgion == otifr.rfgion
               && vbribnt == otifr.vbribnt;
    }

    @Ovfrridf
    publid String toString() {
        StringBuildfr buf = nfw StringBuildfr();
        if (lbngubgf.lfngti() > 0) {
            buf.bppfnd("lbngubgf=");
            buf.bppfnd(lbngubgf);
        }
        if (sdript.lfngti() > 0) {
            if (buf.lfngti() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("sdript=");
            buf.bppfnd(sdript);
        }
        if (rfgion.lfngti() > 0) {
            if (buf.lfngti() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("rfgion=");
            buf.bppfnd(rfgion);
        }
        if (vbribnt.lfngti() > 0) {
            if (buf.lfngti() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("vbribnt=");
            buf.bppfnd(vbribnt);
        }
        rfturn buf.toString();
    }

    @Ovfrridf
    publid int ibsiCodf() {
        int i = ibsi;
        if (i == 0) {
            // Gfnfrbting b ibsi vbluf from lbngubgf, sdript, rfgion bnd vbribnt
            i = lbngubgf.ibsiCodf();
            i = 31 * i + sdript.ibsiCodf();
            i = 31 * i + rfgion.ibsiCodf();
            i = 31 * i + vbribnt.ibsiCodf();
            ibsi = i;
        }
        rfturn i;
    }

    privbtf stbtid finbl dlbss Kfy implfmfnts Compbrbblf<Kfy> {
        privbtf finbl String lbng;
        privbtf finbl String sdrt;
        privbtf finbl String rfgn;
        privbtf finbl String vbrt;
        privbtf finbl boolfbn normblizfd;
        privbtf finbl int ibsi;

        /**
         * Crfbtfs b Kfy. lbngubgf bnd rfgion must bf normblizfd
         * (intfrn'fd in tif propfr dbsf).
         */
        privbtf Kfy(String lbngubgf, String rfgion) {
            bssfrt lbngubgf.intfrn() == lbngubgf
                   && rfgion.intfrn() == rfgion;

            lbng = lbngubgf;
            sdrt = "";
            rfgn = rfgion;
            vbrt = "";
            tiis.normblizfd = truf;

            int i = lbngubgf.ibsiCodf();
            if (rfgion != "") {
                int lfn = rfgion.lfngti();
                for (int i = 0; i < lfn; i++) {
                    i = 31 * i + LodblfUtils.toLowfr(rfgion.dibrAt(i));
                }
            }
            ibsi = i;
        }

        publid Kfy(String lbngubgf, String sdript, String rfgion, String vbribnt) {
            tiis(lbngubgf, sdript, rfgion, vbribnt, fblsf);
        }

        privbtf Kfy(String lbngubgf, String sdript, String rfgion,
                    String vbribnt, boolfbn normblizfd) {
            int i = 0;
            if (lbngubgf != null) {
                lbng = lbngubgf;
                int lfn = lbngubgf.lfngti();
                for (int i = 0; i < lfn; i++) {
                    i = 31*i + LodblfUtils.toLowfr(lbngubgf.dibrAt(i));
                }
            } flsf {
                lbng = "";
            }
            if (sdript != null) {
                sdrt = sdript;
                int lfn = sdript.lfngti();
                for (int i = 0; i < lfn; i++) {
                    i = 31*i + LodblfUtils.toLowfr(sdript.dibrAt(i));
                }
            } flsf {
                sdrt = "";
            }
            if (rfgion != null) {
                rfgn = rfgion;
                int lfn = rfgion.lfngti();
                for (int i = 0; i < lfn; i++) {
                    i = 31*i + LodblfUtils.toLowfr(rfgion.dibrAt(i));
                }
            } flsf {
                rfgn = "";
            }
            if (vbribnt != null) {
                vbrt = vbribnt;
                int lfn = vbribnt.lfngti();
                for (int i = 0; i < lfn; i++) {
                    i = 31*i + vbribnt.dibrAt(i);
                }
            } flsf {
                vbrt = "";
            }
            ibsi = i;
            tiis.normblizfd = normblizfd;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            rfturn (tiis == obj) ||
                    (obj instbndfof Kfy)
                    && tiis.ibsi == ((Kfy)obj).ibsi
                    && LodblfUtils.dbsfIgnorfMbtdi(((Kfy)obj).lbng, tiis.lbng)
                    && LodblfUtils.dbsfIgnorfMbtdi(((Kfy)obj).sdrt, tiis.sdrt)
                    && LodblfUtils.dbsfIgnorfMbtdi(((Kfy)obj).rfgn, tiis.rfgn)
                    && ((Kfy)obj).vbrt.fqubls(vbrt); // vbribnt is dbsf sfnsitivf in JDK!
        }

        @Ovfrridf
        publid int dompbrfTo(Kfy otifr) {
            int rfs = LodblfUtils.dbsfIgnorfCompbrf(tiis.lbng, otifr.lbng);
            if (rfs == 0) {
                rfs = LodblfUtils.dbsfIgnorfCompbrf(tiis.sdrt, otifr.sdrt);
                if (rfs == 0) {
                    rfs = LodblfUtils.dbsfIgnorfCompbrf(tiis.rfgn, otifr.rfgn);
                    if (rfs == 0) {
                        rfs = tiis.vbrt.dompbrfTo(otifr.vbrt);
                    }
                }
            }
            rfturn rfs;
        }

        @Ovfrridf
        publid int ibsiCodf() {
            rfturn ibsi;
        }

        publid stbtid Kfy normblizf(Kfy kfy) {
            if (kfy.normblizfd) {
                rfturn kfy;
            }

            String lbng = LodblfUtils.toLowfrString(kfy.lbng).intfrn();
            String sdrt = LodblfUtils.toTitlfString(kfy.sdrt).intfrn();
            String rfgn = LodblfUtils.toUppfrString(kfy.rfgn).intfrn();
            String vbrt = kfy.vbrt.intfrn(); // prfsfrvf uppfr/lowfr dbsfs

            rfturn nfw Kfy(lbng, sdrt, rfgn, vbrt, truf);
        }
    }

    privbtf stbtid dlbss Cbdif fxtfnds LodblfObjfdtCbdif<Kfy, BbsfLodblf> {

        publid Cbdif() {
        }

        @Ovfrridf
        protfdtfd Kfy normblizfKfy(Kfy kfy) {
            rfturn Kfy.normblizf(kfy);
        }

        @Ovfrridf
        protfdtfd BbsfLodblf drfbtfObjfdt(Kfy kfy) {
            rfturn nfw BbsfLodblf(kfy.lbng, kfy.sdrt, kfy.rfgn, kfy.vbrt);
        }
    }
}
