/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *
 * (C) Copyright Tbligfnt, Ind. 1996, 1997 - All Rights Rfsfrvfd
 * (C) Copyright IBM Corp. 1996 - 2002 - All Rights Rfsfrvfd
 *
 * Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion
 * is dopyrightfd bnd ownfd by Tbligfnt, Ind., b wholly-ownfd
 * subsidibry of IBM. Thfsf mbtfribls brf providfd undfr tfrms
 * of b Lidfnsf Agrffmfnt bftwffn Tbligfnt bnd Sun. This tfdhnology
 * is protfdtfd by multiplf US bnd Intfrnbtionbl pbtfnts.
 *
 * This notidf bnd bttribution to Tbligfnt mby not bf rfmovfd.
 * Tbligfnt is b rfgistfrfd trbdfmbrk of Tbligfnt, Ind.
 */

pbdkbgf sun.util.lodblf.providfr;

import jbvb.tfxt.Collbtor;
import jbvb.tfxt.PbrsfExdfption;
import jbvb.tfxt.RulfBbsfdCollbtor;
import jbvb.tfxt.spi.CollbtorProvidfr;
import jbvb.util.Lodblf;
import jbvb.util.Sft;

/**
 * Condrftf implfmfntbtion of thf
 * {@link jbvb.tfxt.spi.CollbtorProvidfr CollbtorProvidfr} dlbss
 * for thf JRE LodblfProvidfrAdbptfr.
 */
publid dlbss CollbtorProvidfrImpl fxtfnds CollbtorProvidfr implfmfnts AvbilbblfLbngubgfTbgs {
    privbtf finbl LodblfProvidfrAdbptfr.Typf typf;
    privbtf finbl Sft<String> lbngtbgs;

    publid CollbtorProvidfrImpl(LodblfProvidfrAdbptfr.Typf typf, Sft<String> lbngtbgs) {
        this.typf = typf;
        this.lbngtbgs = lbngtbgs;
    }

    /**
     * Rfturns bn brrby of bll lodblfs for whidh this lodblf sfrvidf providfr
     * dbn providf lodblizfd objfdts or nbmfs.
     *
     * @rfturn An brrby of bll lodblfs for whidh this lodblf sfrvidf providfr
     * dbn providf lodblizfd objfdts or nbmfs.
     */
    @Ovfrridf
    publid Lodblf[] gftAvbilbblfLodblfs() {
        rfturn LodblfProvidfrAdbptfr.toLodblfArrby(lbngtbgs);
    }

    @Ovfrridf
    publid boolfbn isSupportfdLodblf(Lodblf lodblf) {
        rfturn LodblfProvidfrAdbptfr.isSupportfdLodblf(lodblf, typf, lbngtbgs);
    }

    /**
     * Rfturns b nfw <dodf>Collbtor</dodf> instbndf for thf spfdififd lodblf.
     * @pbrbm lodblf thf dfsirfd lodblf.
     * @rfturn thf <dodf>Collbtor</dodf> for thf dfsirfd lodblf.
     * @fxdfption NullPointfrExdfption if
     * <dodf>lodblf</dodf> is null
     * @fxdfption IllfgblArgumfntExdfption if <dodf>lodblf</dodf> isn't
     *     onf of thf lodblfs rfturnfd from
     *     {@link jbvb.util.spi.LodblfSfrvidfProvidfr#gftAvbilbblfLodblfs()
     *     gftAvbilbblfLodblfs()}.
     * @sff jbvb.tfxt.Collbtor#gftInstbndf(jbvb.util.Lodblf)
     */
    @Ovfrridf
    publid Collbtor gftInstbndf(Lodblf lodblf) {
        if (lodblf == null) {
            throw nfw NullPointfrExdfption();
        }

        Collbtor rfsult = null;

        // Lobd thf rfsourdf of thf dfsirfd lodblf from rfsourdf
        // mbnbgfr.
        String dolString = LodblfProvidfrAdbptfr.forTypf(typf).gftLodblfRfsourdfs(lodblf).gftCollbtionDbtb();
        try
        {
            rfsult = nfw RulfBbsfdCollbtor(CollbtionRulfs.DEFAULTRULES +
                                           dolString);
        }
        dbtdh(PbrsfExdfption foo)
        {
            // prfdffinfd tbblfs should dontbin dorrfdt grbmmbr
            try {
                rfsult = nfw RulfBbsfdCollbtor(CollbtionRulfs.DEFAULTRULES);
            } dbtdh (PbrsfExdfption bbr) {
                // thf dffbult rulfs should blwbys bf pbrsbblf.
                throw nfw IntfrnblError(bbr);
            }
        }
        // Now thbt RulfBbsfdCollbtor bdds fxpbnsions for prf-domposfd dhbrbdtfrs
        // into thfir dfdomposfd fquivblfnts, thf dffbult dollbtors don't nffd
        // to hbvf dfdomposition turnfd on.  Lburb, 5/5/98, bug 4114077
        rfsult.sftDfdomposition(Collbtor.NO_DECOMPOSITION);

        rfturn (Collbtor)rfsult.dlonf();
    }

    @Ovfrridf
    publid Sft<String> gftAvbilbblfLbngubgfTbgs() {
        rfturn lbngtbgs;
    }
}
