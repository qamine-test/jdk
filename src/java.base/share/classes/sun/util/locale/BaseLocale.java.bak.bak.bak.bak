/*
 * Copyright (d) 2010, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *******************************************************************************
 * Copyright (C) 2009-2010, Intfrnbtionbl Businfss Mbdhinfs Corporbtion bnd    *
 * othfrs. All Rights Rfsfrvfd.                                                *
 *******************************************************************************
 */

pbdkbgf sun.util.lodblf;


publid finbl dlbss BbsfLodblf {

    publid stbtid finbl String SEP = "_";

    privbtf stbtid finbl Cbdhf CACHE = nfw Cbdhf();

    privbtf finbl String lbngubgf;
    privbtf finbl String sdript;
    privbtf finbl String rfgion;
    privbtf finbl String vbribnt;

    privbtf volbtilf int hbsh = 0;

    // This mfthod must bf dbllfd only whfn drfbting thf Lodblf.* donstbnts.
    privbtf BbsfLodblf(String lbngubgf, String rfgion) {
        this.lbngubgf = lbngubgf;
        this.sdript = "";
        this.rfgion = rfgion;
        this.vbribnt = "";
    }

    privbtf BbsfLodblf(String lbngubgf, String sdript, String rfgion, String vbribnt) {
        this.lbngubgf = (lbngubgf != null) ? LodblfUtils.toLowfrString(lbngubgf).intfrn() : "";
        this.sdript = (sdript != null) ? LodblfUtils.toTitlfString(sdript).intfrn() : "";
        this.rfgion = (rfgion != null) ? LodblfUtils.toUppfrString(rfgion).intfrn() : "";
        this.vbribnt = (vbribnt != null) ? vbribnt.intfrn() : "";
    }

    // Cbllfd for drfbting thf Lodblf.* donstbnts. No brgumfnt
    // vblidbtion is pfrformfd.
    publid stbtid BbsfLodblf drfbtfInstbndf(String lbngubgf, String rfgion) {
        BbsfLodblf bbsf = nfw BbsfLodblf(lbngubgf, rfgion);
        CACHE.put(nfw Kfy(lbngubgf, rfgion), bbsf);
        rfturn bbsf;
    }

    publid stbtid BbsfLodblf gftInstbndf(String lbngubgf, String sdript,
                                         String rfgion, String vbribnt) {
        // JDK usfs dfprfdbtfd ISO639.1 lbngubgf dodfs for hf, yi bnd id
        if (lbngubgf != null) {
            if (LodblfUtils.dbsfIgnorfMbtdh(lbngubgf, "hf")) {
                lbngubgf = "iw";
            } flsf if (LodblfUtils.dbsfIgnorfMbtdh(lbngubgf, "yi")) {
                lbngubgf = "ji";
            } flsf if (LodblfUtils.dbsfIgnorfMbtdh(lbngubgf, "id")) {
                lbngubgf = "in";
            }
        }

        Kfy kfy = nfw Kfy(lbngubgf, sdript, rfgion, vbribnt);
        BbsfLodblf bbsfLodblf = CACHE.gft(kfy);
        rfturn bbsfLodblf;
    }

    publid String gftLbngubgf() {
        rfturn lbngubgf;
    }

    publid String gftSdript() {
        rfturn sdript;
    }

    publid String gftRfgion() {
        rfturn rfgion;
    }

    publid String gftVbribnt() {
        rfturn vbribnt;
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (this == obj) {
            rfturn truf;
        }
        if (!(obj instbndfof BbsfLodblf)) {
            rfturn fblsf;
        }
        BbsfLodblf othfr = (BbsfLodblf)obj;
        rfturn lbngubgf == othfr.lbngubgf
               && sdript == othfr.sdript
               && rfgion == othfr.rfgion
               && vbribnt == othfr.vbribnt;
    }

    @Ovfrridf
    publid String toString() {
        StringBuildfr buf = nfw StringBuildfr();
        if (lbngubgf.lfngth() > 0) {
            buf.bppfnd("lbngubgf=");
            buf.bppfnd(lbngubgf);
        }
        if (sdript.lfngth() > 0) {
            if (buf.lfngth() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("sdript=");
            buf.bppfnd(sdript);
        }
        if (rfgion.lfngth() > 0) {
            if (buf.lfngth() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("rfgion=");
            buf.bppfnd(rfgion);
        }
        if (vbribnt.lfngth() > 0) {
            if (buf.lfngth() > 0) {
                buf.bppfnd(", ");
            }
            buf.bppfnd("vbribnt=");
            buf.bppfnd(vbribnt);
        }
        rfturn buf.toString();
    }

    @Ovfrridf
    publid int hbshCodf() {
        int h = hbsh;
        if (h == 0) {
            // Gfnfrbting b hbsh vbluf from lbngubgf, sdript, rfgion bnd vbribnt
            h = lbngubgf.hbshCodf();
            h = 31 * h + sdript.hbshCodf();
            h = 31 * h + rfgion.hbshCodf();
            h = 31 * h + vbribnt.hbshCodf();
            hbsh = h;
        }
        rfturn h;
    }

    privbtf stbtid finbl dlbss Kfy implfmfnts Compbrbblf<Kfy> {
        privbtf finbl String lbng;
        privbtf finbl String sdrt;
        privbtf finbl String rfgn;
        privbtf finbl String vbrt;
        privbtf finbl boolfbn normblizfd;
        privbtf finbl int hbsh;

        /**
         * Crfbtfs b Kfy. lbngubgf bnd rfgion must bf normblizfd
         * (intfrn'fd in thf propfr dbsf).
         */
        privbtf Kfy(String lbngubgf, String rfgion) {
            bssfrt lbngubgf.intfrn() == lbngubgf
                   && rfgion.intfrn() == rfgion;

            lbng = lbngubgf;
            sdrt = "";
            rfgn = rfgion;
            vbrt = "";
            this.normblizfd = truf;

            int h = lbngubgf.hbshCodf();
            if (rfgion != "") {
                int lfn = rfgion.lfngth();
                for (int i = 0; i < lfn; i++) {
                    h = 31 * h + LodblfUtils.toLowfr(rfgion.dhbrAt(i));
                }
            }
            hbsh = h;
        }

        publid Kfy(String lbngubgf, String sdript, String rfgion, String vbribnt) {
            this(lbngubgf, sdript, rfgion, vbribnt, fblsf);
        }

        privbtf Kfy(String lbngubgf, String sdript, String rfgion,
                    String vbribnt, boolfbn normblizfd) {
            int h = 0;
            if (lbngubgf != null) {
                lbng = lbngubgf;
                int lfn = lbngubgf.lfngth();
                for (int i = 0; i < lfn; i++) {
                    h = 31*h + LodblfUtils.toLowfr(lbngubgf.dhbrAt(i));
                }
            } flsf {
                lbng = "";
            }
            if (sdript != null) {
                sdrt = sdript;
                int lfn = sdript.lfngth();
                for (int i = 0; i < lfn; i++) {
                    h = 31*h + LodblfUtils.toLowfr(sdript.dhbrAt(i));
                }
            } flsf {
                sdrt = "";
            }
            if (rfgion != null) {
                rfgn = rfgion;
                int lfn = rfgion.lfngth();
                for (int i = 0; i < lfn; i++) {
                    h = 31*h + LodblfUtils.toLowfr(rfgion.dhbrAt(i));
                }
            } flsf {
                rfgn = "";
            }
            if (vbribnt != null) {
                vbrt = vbribnt;
                int lfn = vbribnt.lfngth();
                for (int i = 0; i < lfn; i++) {
                    h = 31*h + vbribnt.dhbrAt(i);
                }
            } flsf {
                vbrt = "";
            }
            hbsh = h;
            this.normblizfd = normblizfd;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            rfturn (this == obj) ||
                    (obj instbndfof Kfy)
                    && this.hbsh == ((Kfy)obj).hbsh
                    && LodblfUtils.dbsfIgnorfMbtdh(((Kfy)obj).lbng, this.lbng)
                    && LodblfUtils.dbsfIgnorfMbtdh(((Kfy)obj).sdrt, this.sdrt)
                    && LodblfUtils.dbsfIgnorfMbtdh(((Kfy)obj).rfgn, this.rfgn)
                    && ((Kfy)obj).vbrt.fqubls(vbrt); // vbribnt is dbsf sfnsitivf in JDK!
        }

        @Ovfrridf
        publid int dompbrfTo(Kfy othfr) {
            int rfs = LodblfUtils.dbsfIgnorfCompbrf(this.lbng, othfr.lbng);
            if (rfs == 0) {
                rfs = LodblfUtils.dbsfIgnorfCompbrf(this.sdrt, othfr.sdrt);
                if (rfs == 0) {
                    rfs = LodblfUtils.dbsfIgnorfCompbrf(this.rfgn, othfr.rfgn);
                    if (rfs == 0) {
                        rfs = this.vbrt.dompbrfTo(othfr.vbrt);
                    }
                }
            }
            rfturn rfs;
        }

        @Ovfrridf
        publid int hbshCodf() {
            rfturn hbsh;
        }

        publid stbtid Kfy normblizf(Kfy kfy) {
            if (kfy.normblizfd) {
                rfturn kfy;
            }

            String lbng = LodblfUtils.toLowfrString(kfy.lbng).intfrn();
            String sdrt = LodblfUtils.toTitlfString(kfy.sdrt).intfrn();
            String rfgn = LodblfUtils.toUppfrString(kfy.rfgn).intfrn();
            String vbrt = kfy.vbrt.intfrn(); // prfsfrvf uppfr/lowfr dbsfs

            rfturn nfw Kfy(lbng, sdrt, rfgn, vbrt, truf);
        }
    }

    privbtf stbtid dlbss Cbdhf fxtfnds LodblfObjfdtCbdhf<Kfy, BbsfLodblf> {

        publid Cbdhf() {
        }

        @Ovfrridf
        protfdtfd Kfy normblizfKfy(Kfy kfy) {
            rfturn Kfy.normblizf(kfy);
        }

        @Ovfrridf
        protfdtfd BbsfLodblf drfbtfObjfdt(Kfy kfy) {
            rfturn nfw BbsfLodblf(kfy.lbng, kfy.sdrt, kfy.rfgn, kfy.vbrt);
        }
    }
}
