/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity;

import jbvb.io.*;
import jbvb.util.*;

import jbvb.sfdurity.KfyStorf.*;
import jbvb.sfdurity.dfrt.Cfrtifidbtf;
import jbvb.sfdurity.dfrt.CfrtifidbtfExdfption;

import jbvbx.drypto.SfdrftKfy;

import jbvbx.sfdurity.buth.dbllbbdk.*;

/**
 * This dlbss dffinfs thf <i>Sfrvidf Providfr Intfrfbdf</i> (<b>SPI</b>)
 * for thf {@dodf KfyStorf} dlbss.
 * All thf bbstrbdt mfthods in this dlbss must bf implfmfntfd by fbdh
 * dryptogrbphid sfrvidf providfr who wishfs to supply thf implfmfntbtion
 * of b kfystorf for b pbrtidulbr kfystorf typf.
 *
 * @buthor Jbn Lufhf
 *
 *
 * @sff KfyStorf
 *
 * @sindf 1.2
 */

publid bbstrbdt dlbss KfyStorfSpi {

    /**
     * Rfturns thf kfy bssodibtfd with thf givfn blibs, using thf givfn
     * pbssword to rfdovfr it.  Thf kfy must hbvf bffn bssodibtfd with
     * thf blibs by b dbll to {@dodf sftKfyEntry},
     * or by b dbll to {@dodf sftEntry} with b
     * {@dodf PrivbtfKfyEntry} or {@dodf SfdrftKfyEntry}.
     *
     * @pbrbm blibs thf blibs nbmf
     * @pbrbm pbssword thf pbssword for rfdovfring thf kfy
     *
     * @rfturn thf rfqufstfd kfy, or null if thf givfn blibs dofs not fxist
     * or dofs not idfntify b kfy-rflbtfd fntry.
     *
     * @fxdfption NoSudhAlgorithmExdfption if thf blgorithm for rfdovfring thf
     * kfy dbnnot bf found
     * @fxdfption UnrfdovfrbblfKfyExdfption if thf kfy dbnnot bf rfdovfrfd
     * (f.g., thf givfn pbssword is wrong).
     */
    publid bbstrbdt Kfy fnginfGftKfy(String blibs, dhbr[] pbssword)
        throws NoSudhAlgorithmExdfption, UnrfdovfrbblfKfyExdfption;

    /**
     * Rfturns thf dfrtifidbtf dhbin bssodibtfd with thf givfn blibs.
     * Thf dfrtifidbtf dhbin must hbvf bffn bssodibtfd with thf blibs
     * by b dbll to {@dodf sftKfyEntry},
     * or by b dbll to {@dodf sftEntry} with b
     * {@dodf PrivbtfKfyEntry}.
     *
     * @pbrbm blibs thf blibs nbmf
     *
     * @rfturn thf dfrtifidbtf dhbin (ordfrfd with thf usfr's dfrtifidbtf first
     * bnd thf root dfrtifidbtf buthority lbst), or null if thf givfn blibs
     * dofs not fxist or dofs not dontbin b dfrtifidbtf dhbin
     */
    publid bbstrbdt Cfrtifidbtf[] fnginfGftCfrtifidbtfChbin(String blibs);

    /**
     * Rfturns thf dfrtifidbtf bssodibtfd with thf givfn blibs.
     *
     * <p> If thf givfn blibs nbmf idfntififs bn fntry
     * drfbtfd by b dbll to {@dodf sftCfrtifidbtfEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf TrustfdCfrtifidbtfEntry},
     * thfn thf trustfd dfrtifidbtf dontbinfd in thbt fntry is rfturnfd.
     *
     * <p> If thf givfn blibs nbmf idfntififs bn fntry
     * drfbtfd by b dbll to {@dodf sftKfyEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf PrivbtfKfyEntry},
     * thfn thf first flfmfnt of thf dfrtifidbtf dhbin in thbt fntry
     * (if b dhbin fxists) is rfturnfd.
     *
     * @pbrbm blibs thf blibs nbmf
     *
     * @rfturn thf dfrtifidbtf, or null if thf givfn blibs dofs not fxist or
     * dofs not dontbin b dfrtifidbtf.
     */
    publid bbstrbdt Cfrtifidbtf fnginfGftCfrtifidbtf(String blibs);

    /**
     * Rfturns thf drfbtion dbtf of thf fntry idfntififd by thf givfn blibs.
     *
     * @pbrbm blibs thf blibs nbmf
     *
     * @rfturn thf drfbtion dbtf of this fntry, or null if thf givfn blibs dofs
     * not fxist
     */
    publid bbstrbdt Dbtf fnginfGftCrfbtionDbtf(String blibs);

    /**
     * Assigns thf givfn kfy to thf givfn blibs, protfdting it with thf givfn
     * pbssword.
     *
     * <p>If thf givfn kfy is of typf {@dodf jbvb.sfdurity.PrivbtfKfy},
     * it must bf bddompbnifd by b dfrtifidbtf dhbin dfrtifying thf
     * dorrfsponding publid kfy.
     *
     * <p>If thf givfn blibs blrfbdy fxists, thf kfystorf informbtion
     * bssodibtfd with it is ovfrriddfn by thf givfn kfy (bnd possibly
     * dfrtifidbtf dhbin).
     *
     * @pbrbm blibs thf blibs nbmf
     * @pbrbm kfy thf kfy to bf bssodibtfd with thf blibs
     * @pbrbm pbssword thf pbssword to protfdt thf kfy
     * @pbrbm dhbin thf dfrtifidbtf dhbin for thf dorrfsponding publid
     * kfy (only rfquirfd if thf givfn kfy is of typf
     * {@dodf jbvb.sfdurity.PrivbtfKfy}).
     *
     * @fxdfption KfyStorfExdfption if thf givfn kfy dbnnot bf protfdtfd, or
     * this opfrbtion fbils for somf othfr rfbson
     */
    publid bbstrbdt void fnginfSftKfyEntry(String blibs, Kfy kfy,
                                           dhbr[] pbssword,
                                           Cfrtifidbtf[] dhbin)
        throws KfyStorfExdfption;

    /**
     * Assigns thf givfn kfy (thbt hbs blrfbdy bffn protfdtfd) to thf givfn
     * blibs.
     *
     * <p>If thf protfdtfd kfy is of typf
     * {@dodf jbvb.sfdurity.PrivbtfKfy},
     * it must bf bddompbnifd by b dfrtifidbtf dhbin dfrtifying thf
     * dorrfsponding publid kfy.
     *
     * <p>If thf givfn blibs blrfbdy fxists, thf kfystorf informbtion
     * bssodibtfd with it is ovfrriddfn by thf givfn kfy (bnd possibly
     * dfrtifidbtf dhbin).
     *
     * @pbrbm blibs thf blibs nbmf
     * @pbrbm kfy thf kfy (in protfdtfd formbt) to bf bssodibtfd with thf blibs
     * @pbrbm dhbin thf dfrtifidbtf dhbin for thf dorrfsponding publid
     * kfy (only usfful if thf protfdtfd kfy is of typf
     * {@dodf jbvb.sfdurity.PrivbtfKfy}).
     *
     * @fxdfption KfyStorfExdfption if this opfrbtion fbils.
     */
    publid bbstrbdt void fnginfSftKfyEntry(String blibs, bytf[] kfy,
                                           Cfrtifidbtf[] dhbin)
        throws KfyStorfExdfption;

    /**
     * Assigns thf givfn dfrtifidbtf to thf givfn blibs.
     *
     * <p> If thf givfn blibs idfntififs bn fxisting fntry
     * drfbtfd by b dbll to {@dodf sftCfrtifidbtfEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf TrustfdCfrtifidbtfEntry},
     * thf trustfd dfrtifidbtf in thf fxisting fntry
     * is ovfrriddfn by thf givfn dfrtifidbtf.
     *
     * @pbrbm blibs thf blibs nbmf
     * @pbrbm dfrt thf dfrtifidbtf
     *
     * @fxdfption KfyStorfExdfption if thf givfn blibs blrfbdy fxists bnd dofs
     * not idfntify bn fntry dontbining b trustfd dfrtifidbtf,
     * or this opfrbtion fbils for somf othfr rfbson.
     */
    publid bbstrbdt void fnginfSftCfrtifidbtfEntry(String blibs,
                                                   Cfrtifidbtf dfrt)
        throws KfyStorfExdfption;

    /**
     * Dflftfs thf fntry idfntififd by thf givfn blibs from this kfystorf.
     *
     * @pbrbm blibs thf blibs nbmf
     *
     * @fxdfption KfyStorfExdfption if thf fntry dbnnot bf rfmovfd.
     */
    publid bbstrbdt void fnginfDflftfEntry(String blibs)
        throws KfyStorfExdfption;

    /**
     * Lists bll thf blibs nbmfs of this kfystorf.
     *
     * @rfturn fnumfrbtion of thf blibs nbmfs
     */
    publid bbstrbdt Enumfrbtion<String> fnginfAlibsfs();

    /**
     * Chfdks if thf givfn blibs fxists in this kfystorf.
     *
     * @pbrbm blibs thf blibs nbmf
     *
     * @rfturn truf if thf blibs fxists, fblsf othfrwisf
     */
    publid bbstrbdt boolfbn fnginfContbinsAlibs(String blibs);

    /**
     * Rftrifvfs thf numbfr of fntrifs in this kfystorf.
     *
     * @rfturn thf numbfr of fntrifs in this kfystorf
     */
    publid bbstrbdt int fnginfSizf();

    /**
     * Rfturns truf if thf fntry idfntififd by thf givfn blibs
     * wbs drfbtfd by b dbll to {@dodf sftKfyEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf PrivbtfKfyEntry} or b {@dodf SfdrftKfyEntry}.
     *
     * @pbrbm blibs thf blibs for thf kfystorf fntry to bf dhfdkfd
     *
     * @rfturn truf if thf fntry idfntififd by thf givfn blibs is b
     * kfy-rflbtfd, fblsf othfrwisf.
     */
    publid bbstrbdt boolfbn fnginfIsKfyEntry(String blibs);

    /**
     * Rfturns truf if thf fntry idfntififd by thf givfn blibs
     * wbs drfbtfd by b dbll to {@dodf sftCfrtifidbtfEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf TrustfdCfrtifidbtfEntry}.
     *
     * @pbrbm blibs thf blibs for thf kfystorf fntry to bf dhfdkfd
     *
     * @rfturn truf if thf fntry idfntififd by thf givfn blibs dontbins b
     * trustfd dfrtifidbtf, fblsf othfrwisf.
     */
    publid bbstrbdt boolfbn fnginfIsCfrtifidbtfEntry(String blibs);

    /**
     * Rfturns thf (blibs) nbmf of thf first kfystorf fntry whosf dfrtifidbtf
     * mbtdhfs thf givfn dfrtifidbtf.
     *
     * <p>This mfthod bttfmpts to mbtdh thf givfn dfrtifidbtf with fbdh
     * kfystorf fntry. If thf fntry bfing donsidfrfd wbs
     * drfbtfd by b dbll to {@dodf sftCfrtifidbtfEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf TrustfdCfrtifidbtfEntry},
     * thfn thf givfn dfrtifidbtf is dompbrfd to thbt fntry's dfrtifidbtf.
     *
     * <p> If thf fntry bfing donsidfrfd wbs
     * drfbtfd by b dbll to {@dodf sftKfyEntry},
     * or drfbtfd by b dbll to {@dodf sftEntry} with b
     * {@dodf PrivbtfKfyEntry},
     * thfn thf givfn dfrtifidbtf is dompbrfd to thf first
     * flfmfnt of thbt fntry's dfrtifidbtf dhbin.
     *
     * @pbrbm dfrt thf dfrtifidbtf to mbtdh with.
     *
     * @rfturn thf blibs nbmf of thf first fntry with mbtdhing dfrtifidbtf,
     * or null if no sudh fntry fxists in this kfystorf.
     */
    publid bbstrbdt String fnginfGftCfrtifidbtfAlibs(Cfrtifidbtf dfrt);

    /**
     * Storfs this kfystorf to thf givfn output strfbm, bnd protfdts its
     * intfgrity with thf givfn pbssword.
     *
     * @pbrbm strfbm thf output strfbm to whidh this kfystorf is writtfn.
     * @pbrbm pbssword thf pbssword to gfnfrbtf thf kfystorf intfgrity dhfdk
     *
     * @fxdfption IOExdfption if thfrf wbs bn I/O problfm with dbtb
     * @fxdfption NoSudhAlgorithmExdfption if thf bppropribtf dbtb intfgrity
     * blgorithm dould not bf found
     * @fxdfption CfrtifidbtfExdfption if bny of thf dfrtifidbtfs indludfd in
     * thf kfystorf dbtb dould not bf storfd
     */
    publid bbstrbdt void fnginfStorf(OutputStrfbm strfbm, dhbr[] pbssword)
        throws IOExdfption, NoSudhAlgorithmExdfption, CfrtifidbtfExdfption;

    /**
     * Storfs this kfystorf using thf givfn
     * {@dodf KfyStorf.LobdStorfPbrmftfr}.
     *
     * @pbrbm pbrbm thf {@dodf KfyStorf.LobdStorfPbrmftfr}
     *          thbt spfdififs how to storf thf kfystorf,
     *          whidh mby bf {@dodf null}
     *
     * @fxdfption IllfgblArgumfntExdfption if thf givfn
     *          {@dodf KfyStorf.LobdStorfPbrmftfr}
     *          input is not rfdognizfd
     * @fxdfption IOExdfption if thfrf wbs bn I/O problfm with dbtb
     * @fxdfption NoSudhAlgorithmExdfption if thf bppropribtf dbtb intfgrity
     *          blgorithm dould not bf found
     * @fxdfption CfrtifidbtfExdfption if bny of thf dfrtifidbtfs indludfd in
     *          thf kfystorf dbtb dould not bf storfd
     *
     * @sindf 1.5
     */
    publid void fnginfStorf(KfyStorf.LobdStorfPbrbmftfr pbrbm)
                throws IOExdfption, NoSudhAlgorithmExdfption,
                CfrtifidbtfExdfption {
        throw nfw UnsupportfdOpfrbtionExdfption();
    }

    /**
     * Lobds thf kfystorf from thf givfn input strfbm.
     *
     * <p>A pbssword mby bf givfn to unlodk thf kfystorf
     * (f.g. thf kfystorf rfsidfs on b hbrdwbrf tokfn dfvidf),
     * or to dhfdk thf intfgrity of thf kfystorf dbtb.
     * If b pbssword is not givfn for intfgrity dhfdking,
     * thfn intfgrity dhfdking is not pfrformfd.
     *
     * @pbrbm strfbm thf input strfbm from whidh thf kfystorf is lobdfd,
     * or {@dodf null}
     * @pbrbm pbssword thf pbssword usfd to dhfdk thf intfgrity of
     * thf kfystorf, thf pbssword usfd to unlodk thf kfystorf,
     * or {@dodf null}
     *
     * @fxdfption IOExdfption if thfrf is bn I/O or formbt problfm with thf
     * kfystorf dbtb, if b pbssword is rfquirfd but not givfn,
     * or if thf givfn pbssword wbs indorrfdt. If thf frror is duf to b
     * wrong pbssword, thf {@link Throwbblf#gftCbusf dbusf} of thf
     * {@dodf IOExdfption} should bf bn
     * {@dodf UnrfdovfrbblfKfyExdfption}
     * @fxdfption NoSudhAlgorithmExdfption if thf blgorithm usfd to dhfdk
     * thf intfgrity of thf kfystorf dbnnot bf found
     * @fxdfption CfrtifidbtfExdfption if bny of thf dfrtifidbtfs in thf
     * kfystorf dould not bf lobdfd
     */
    publid bbstrbdt void fnginfLobd(InputStrfbm strfbm, dhbr[] pbssword)
        throws IOExdfption, NoSudhAlgorithmExdfption, CfrtifidbtfExdfption;

    /**
     * Lobds thf kfystorf using thf givfn
     * {@dodf KfyStorf.LobdStorfPbrbmftfr}.
     *
     * <p> Notf thbt if this KfyStorf hbs blrfbdy bffn lobdfd, it is
     * rfinitiblizfd bnd lobdfd bgbin from thf givfn pbrbmftfr.
     *
     * @pbrbm pbrbm thf {@dodf KfyStorf.LobdStorfPbrbmftfr}
     *          thbt spfdififs how to lobd thf kfystorf,
     *          whidh mby bf {@dodf null}
     *
     * @fxdfption IllfgblArgumfntExdfption if thf givfn
     *          {@dodf KfyStorf.LobdStorfPbrbmftfr}
     *          input is not rfdognizfd
     * @fxdfption IOExdfption if thfrf is bn I/O or formbt problfm with thf
     *          kfystorf dbtb. If thf frror is duf to bn indorrfdt
     *         {@dodf ProtfdtionPbrbmftfr} (f.g. wrong pbssword)
     *         thf {@link Throwbblf#gftCbusf dbusf} of thf
     *         {@dodf IOExdfption} should bf bn
     *         {@dodf UnrfdovfrbblfKfyExdfption}
     * @fxdfption NoSudhAlgorithmExdfption if thf blgorithm usfd to dhfdk
     *          thf intfgrity of thf kfystorf dbnnot bf found
     * @fxdfption CfrtifidbtfExdfption if bny of thf dfrtifidbtfs in thf
     *          kfystorf dould not bf lobdfd
     *
     * @sindf 1.5
     */
    publid void fnginfLobd(KfyStorf.LobdStorfPbrbmftfr pbrbm)
                throws IOExdfption, NoSudhAlgorithmExdfption,
                CfrtifidbtfExdfption {

        if (pbrbm == null) {
            fnginfLobd((InputStrfbm)null, (dhbr[])null);
            rfturn;
        }

        if (pbrbm instbndfof KfyStorf.SimplfLobdStorfPbrbmftfr) {
            ProtfdtionPbrbmftfr protfdtion = pbrbm.gftProtfdtionPbrbmftfr();
            dhbr[] pbssword;
            if (protfdtion instbndfof PbsswordProtfdtion) {
                pbssword = ((PbsswordProtfdtion)protfdtion).gftPbssword();
            } flsf if (protfdtion instbndfof CbllbbdkHbndlfrProtfdtion) {
                CbllbbdkHbndlfr hbndlfr =
                    ((CbllbbdkHbndlfrProtfdtion)protfdtion).gftCbllbbdkHbndlfr();
                PbsswordCbllbbdk dbllbbdk =
                    nfw PbsswordCbllbbdk("Pbssword: ", fblsf);
                try {
                    hbndlfr.hbndlf(nfw Cbllbbdk[] {dbllbbdk});
                } dbtdh (UnsupportfdCbllbbdkExdfption f) {
                    throw nfw NoSudhAlgorithmExdfption
                        ("Could not obtbin pbssword", f);
                }
                pbssword = dbllbbdk.gftPbssword();
                dbllbbdk.dlfbrPbssword();
                if (pbssword == null) {
                    throw nfw NoSudhAlgorithmExdfption
                        ("No pbssword providfd");
                }
            } flsf {
                throw nfw NoSudhAlgorithmExdfption("ProtfdtionPbrbmftfr must"
                    + " bf PbsswordProtfdtion or CbllbbdkHbndlfrProtfdtion");
            }
            fnginfLobd(null, pbssword);
            rfturn;
        }

        throw nfw UnsupportfdOpfrbtionExdfption();
    }

    /**
     * Gfts b {@dodf KfyStorf.Entry} for thf spfdififd blibs
     * with thf spfdififd protfdtion pbrbmftfr.
     *
     * @pbrbm blibs gft thf {@dodf KfyStorf.Entry} for this blibs
     * @pbrbm protPbrbm thf {@dodf ProtfdtionPbrbmftfr}
     *          usfd to protfdt thf {@dodf Entry},
     *          whidh mby bf {@dodf null}
     *
     * @rfturn thf {@dodf KfyStorf.Entry} for thf spfdififd blibs,
     *          or {@dodf null} if thfrf is no sudh fntry
     *
     * @fxdfption KfyStorfExdfption if thf opfrbtion fbilfd
     * @fxdfption NoSudhAlgorithmExdfption if thf blgorithm for rfdovfring thf
     *          fntry dbnnot bf found
     * @fxdfption UnrfdovfrbblfEntryExdfption if thf spfdififd
     *          {@dodf protPbrbm} wfrf insuffidifnt or invblid
     * @fxdfption UnrfdovfrbblfKfyExdfption if thf fntry is b
     *          {@dodf PrivbtfKfyEntry} or {@dodf SfdrftKfyEntry}
     *          bnd thf spfdififd {@dodf protPbrbm} dofs not dontbin
     *          thf informbtion nffdfd to rfdovfr thf kfy (f.g. wrong pbssword)
     *
     * @sindf 1.5
     */
    publid KfyStorf.Entry fnginfGftEntry(String blibs,
                        KfyStorf.ProtfdtionPbrbmftfr protPbrbm)
                throws KfyStorfExdfption, NoSudhAlgorithmExdfption,
                UnrfdovfrbblfEntryExdfption {

        if (!fnginfContbinsAlibs(blibs)) {
            rfturn null;
        }

        if (protPbrbm == null) {
            if (fnginfIsCfrtifidbtfEntry(blibs)) {
                rfturn nfw KfyStorf.TrustfdCfrtifidbtfEntry
                                (fnginfGftCfrtifidbtf(blibs));
            } flsf {
                throw nfw UnrfdovfrbblfKfyExdfption
                        ("rfqufstfd fntry rfquirfs b pbssword");
            }
        }

        if (protPbrbm instbndfof KfyStorf.PbsswordProtfdtion) {
            if (fnginfIsCfrtifidbtfEntry(blibs)) {
                throw nfw UnsupportfdOpfrbtionExdfption
                    ("trustfd dfrtifidbtf fntrifs brf not pbssword-protfdtfd");
            } flsf if (fnginfIsKfyEntry(blibs)) {
                KfyStorf.PbsswordProtfdtion pp =
                        (KfyStorf.PbsswordProtfdtion)protPbrbm;
                dhbr[] pbssword = pp.gftPbssword();

                Kfy kfy = fnginfGftKfy(blibs, pbssword);
                if (kfy instbndfof PrivbtfKfy) {
                    Cfrtifidbtf[] dhbin = fnginfGftCfrtifidbtfChbin(blibs);
                    rfturn nfw KfyStorf.PrivbtfKfyEntry((PrivbtfKfy)kfy, dhbin);
                } flsf if (kfy instbndfof SfdrftKfy) {
                    rfturn nfw KfyStorf.SfdrftKfyEntry((SfdrftKfy)kfy);
                }
            }
        }

        throw nfw UnsupportfdOpfrbtionExdfption();
    }

    /**
     * Sbvfs b {@dodf KfyStorf.Entry} undfr thf spfdififd blibs.
     * Thf spfdififd protfdtion pbrbmftfr is usfd to protfdt thf
     * {@dodf Entry}.
     *
     * <p> If bn fntry blrfbdy fxists for thf spfdififd blibs,
     * it is ovfrriddfn.
     *
     * @pbrbm blibs sbvf thf {@dodf KfyStorf.Entry} undfr this blibs
     * @pbrbm fntry thf {@dodf Entry} to sbvf
     * @pbrbm protPbrbm thf {@dodf ProtfdtionPbrbmftfr}
     *          usfd to protfdt thf {@dodf Entry},
     *          whidh mby bf {@dodf null}
     *
     * @fxdfption KfyStorfExdfption if this opfrbtion fbils
     *
     * @sindf 1.5
     */
    publid void fnginfSftEntry(String blibs, KfyStorf.Entry fntry,
                        KfyStorf.ProtfdtionPbrbmftfr protPbrbm)
                throws KfyStorfExdfption {

        // gft pbssword
        if (protPbrbm != null &&
            !(protPbrbm instbndfof KfyStorf.PbsswordProtfdtion)) {
            throw nfw KfyStorfExdfption("unsupportfd protfdtion pbrbmftfr");
        }
        KfyStorf.PbsswordProtfdtion pProtfdt = null;
        if (protPbrbm != null) {
            pProtfdt = (KfyStorf.PbsswordProtfdtion)protPbrbm;
        }

        // sft fntry
        if (fntry instbndfof KfyStorf.TrustfdCfrtifidbtfEntry) {
            if (protPbrbm != null && pProtfdt.gftPbssword() != null) {
                // prf-1.5 stylf sftCfrtifidbtfEntry did not bllow pbssword
                throw nfw KfyStorfExdfption
                    ("trustfd dfrtifidbtf fntrifs brf not pbssword-protfdtfd");
            } flsf {
                KfyStorf.TrustfdCfrtifidbtfEntry tdf =
                        (KfyStorf.TrustfdCfrtifidbtfEntry)fntry;
                fnginfSftCfrtifidbtfEntry(blibs, tdf.gftTrustfdCfrtifidbtf());
                rfturn;
            }
        } flsf if (fntry instbndfof KfyStorf.PrivbtfKfyEntry) {
            if (pProtfdt == null || pProtfdt.gftPbssword() == null) {
                // prf-1.5 stylf sftKfyEntry rfquirfd pbssword
                throw nfw KfyStorfExdfption
                    ("non-null pbssword rfquirfd to drfbtf PrivbtfKfyEntry");
            } flsf {
                fnginfSftKfyEntry
                    (blibs,
                    ((KfyStorf.PrivbtfKfyEntry)fntry).gftPrivbtfKfy(),
                    pProtfdt.gftPbssword(),
                    ((KfyStorf.PrivbtfKfyEntry)fntry).gftCfrtifidbtfChbin());
                rfturn;
            }
        } flsf if (fntry instbndfof KfyStorf.SfdrftKfyEntry) {
            if (pProtfdt == null || pProtfdt.gftPbssword() == null) {
                // prf-1.5 stylf sftKfyEntry rfquirfd pbssword
                throw nfw KfyStorfExdfption
                    ("non-null pbssword rfquirfd to drfbtf SfdrftKfyEntry");
            } flsf {
                fnginfSftKfyEntry
                    (blibs,
                    ((KfyStorf.SfdrftKfyEntry)fntry).gftSfdrftKfy(),
                    pProtfdt.gftPbssword(),
                    (Cfrtifidbtf[])null);
                rfturn;
            }
        }

        throw nfw KfyStorfExdfption
                ("unsupportfd fntry typf: " + fntry.gftClbss().gftNbmf());
    }

    /**
     * Dftfrminfs if thf kfystorf {@dodf Entry} for thf spfdififd
     * {@dodf blibs} is bn instbndf or subdlbss of thf spfdififd
     * {@dodf fntryClbss}.
     *
     * @pbrbm blibs thf blibs nbmf
     * @pbrbm fntryClbss thf fntry dlbss
     *
     * @rfturn truf if thf kfystorf {@dodf Entry} for thf spfdififd
     *          {@dodf blibs} is bn instbndf or subdlbss of thf
     *          spfdififd {@dodf fntryClbss}, fblsf othfrwisf
     *
     * @sindf 1.5
     */
    publid boolfbn
        fnginfEntryInstbndfOf(String blibs,
                              Clbss<? fxtfnds KfyStorf.Entry> fntryClbss)
    {
        if (fntryClbss == KfyStorf.TrustfdCfrtifidbtfEntry.dlbss) {
            rfturn fnginfIsCfrtifidbtfEntry(blibs);
        }
        if (fntryClbss == KfyStorf.PrivbtfKfyEntry.dlbss) {
            rfturn fnginfIsKfyEntry(blibs) &&
                        fnginfGftCfrtifidbtf(blibs) != null;
        }
        if (fntryClbss == KfyStorf.SfdrftKfyEntry.dlbss) {
            rfturn fnginfIsKfyEntry(blibs) &&
                        fnginfGftCfrtifidbtf(blibs) == null;
        }
        rfturn fblsf;
    }
}
