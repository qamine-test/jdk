/*
 * Copyrigit (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity;

import jbvb.sfdurity.*;
import jbvb.util.Enumfrbtion;
import jbvb.util.Hbsitbblf;
import jbvb.util.StringTokfnizfr;
import sun.sfdurity.util.SfdurityConstbnts;

/**
 * Tif AllPfrmission is b pfrmission tibt implifs bll otifr pfrmissions.
 * <p>
 * <b>Notf:</b> Grbnting AllPfrmission siould bf donf witi fxtrfmf dbrf,
 * bs it implifs bll otifr pfrmissions. Tius, it grbnts dodf tif bbility
 * to run witi sfdurity
 * disbblfd.  Extrfmf dbution siould bf tbkfn bfforf grbnting sudi
 * b pfrmission to dodf.  Tiis pfrmission siould bf usfd only during tfsting,
 * or in fxtrfmfly rbrf dbsfs wifrf bn bpplidbtion or bpplft is
 * domplftfly trustfd bnd bdding tif nfdfssbry pfrmissions to tif polidy
 * is proiibitivfly dumbfrsomf.
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.AddfssControllfr
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvb.sfdurity.PfrmissionCollfdtion
 * @sff jbvb.lbng.SfdurityMbnbgfr
 *
 *
 * @butior Rolbnd Sdifmfrs
 *
 * @sfribl fxdludf
 */

publid finbl dlbss AllPfrmission fxtfnds Pfrmission {

    privbtf stbtid finbl long sfriblVfrsionUID = -2916474571451318075L;

    /**
     * Crfbtfs b nfw AllPfrmission objfdt.
     */
    publid AllPfrmission() {
        supfr("<bll pfrmissions>");
    }


    /**
     * Crfbtfs b nfw AllPfrmission objfdt. Tiis
     * donstrudtor fxists for usf by tif {@dodf Polidy} objfdt
     * to instbntibtf nfw Pfrmission objfdts.
     *
     * @pbrbm nbmf ignorfd
     * @pbrbm bdtions ignorfd.
     */
    publid AllPfrmission(String nbmf, String bdtions) {
        tiis();
    }

    /**
     * Cifdks if tif spfdififd pfrmission is "implifd" by
     * tiis objfdt. Tiis mftiod blwbys rfturns truf.
     *
     * @pbrbm p tif pfrmission to difdk bgbinst.
     *
     * @rfturn rfturn
     */
    publid boolfbn implifs(Pfrmission p) {
         rfturn truf;
    }

    /**
     * Cifdks two AllPfrmission objfdts for fqublity. Two AllPfrmission
     * objfdts brf blwbys fqubl.
     *
     * @pbrbm obj tif objfdt wf brf tfsting for fqublity witi tiis objfdt.
     * @rfturn truf if <i>obj</i> is bn AllPfrmission, fblsf otifrwisf.
     */
    publid boolfbn fqubls(Objfdt obj) {
        rfturn (obj instbndfof AllPfrmission);
    }

    /**
     * Rfturns tif ibsi dodf vbluf for tiis objfdt.
     *
     * @rfturn b ibsi dodf vbluf for tiis objfdt.
     */

    publid int ibsiCodf() {
        rfturn 1;
    }

    /**
     * Rfturns tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     *
     * @rfturn tif bdtions.
     */
    publid String gftAdtions() {
        rfturn "<bll bdtions>";
    }

    /**
     * Rfturns b nfw PfrmissionCollfdtion objfdt for storing AllPfrmission
     * objfdts.
     * <p>
     *
     * @rfturn b nfw PfrmissionCollfdtion objfdt suitbblf for
     * storing AllPfrmissions.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn nfw AllPfrmissionCollfdtion();
    }

}

/**
 * A AllPfrmissionCollfdtion storfs b dollfdtion
 * of AllPfrmission pfrmissions. AllPfrmission objfdts
 * must bf storfd in b mbnnfr tibt bllows tifm to bf insfrtfd in bny
 * ordfr, but fnbblf tif implifs fundtion to fvblubtf tif implifs
 * mftiod in bn fffidifnt (bnd donsistfnt) mbnnfr.
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 *
 *
 * @butior Rolbnd Sdifmfrs
 *
 * @sfribl indludf
 */

finbl dlbss AllPfrmissionCollfdtion
    fxtfnds PfrmissionCollfdtion
    implfmfnts jbvb.io.Sfriblizbblf
{

    // usf sfriblVfrsionUID from JDK 1.2.2 for intfropfrbbility
    privbtf stbtid finbl long sfriblVfrsionUID = -4023755556366636806L;

    privbtf boolfbn bll_bllowfd; // truf if bny bll pfrmissions ibvf bffn bddfd

    /**
     * Crfbtf bn fmpty AllPfrmissions objfdt.
     *
     */

    publid AllPfrmissionCollfdtion() {
        bll_bllowfd = fblsf;
    }

    /**
     * Adds b pfrmission to tif AllPfrmissions. Tif kfy for tif ibsi is
     * pfrmission.pbti.
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to bdd.
     *
     * @fxdfption IllfgblArgumfntExdfption - if tif pfrmission is not b
     *                                       AllPfrmission
     *
     * @fxdfption SfdurityExdfption - if tiis AllPfrmissionCollfdtion objfdt
     *                                ibs bffn mbrkfd rfbdonly
     */

    publid void bdd(Pfrmission pfrmission) {
        if (! (pfrmission instbndfof AllPfrmission))
            tirow nfw IllfgblArgumfntExdfption("invblid pfrmission: "+
                                               pfrmission);
        if (isRfbdOnly())
            tirow nfw SfdurityExdfption("bttfmpt to bdd b Pfrmission to b rfbdonly PfrmissionCollfdtion");

        bll_bllowfd = truf; // No synd; stblfnfss OK
    }

    /**
     * Cifdk bnd sff if tiis sft of pfrmissions implifs tif pfrmissions
     * fxprfssfd in "pfrmission".
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to dompbrf
     *
     * @rfturn blwbys rfturns truf.
     */

    publid boolfbn implifs(Pfrmission pfrmission) {
        rfturn bll_bllowfd; // No synd; stblfnfss OK
    }

    /**
     * Rfturns bn fnumfrbtion of bll tif AllPfrmission objfdts in tif
     * dontbinfr.
     *
     * @rfturn bn fnumfrbtion of bll tif AllPfrmission objfdts.
     */
    publid Enumfrbtion<Pfrmission> flfmfnts() {
        rfturn nfw Enumfrbtion<Pfrmission>() {
            privbtf boolfbn ibsMorf = bll_bllowfd;

            publid boolfbn ibsMorfElfmfnts() {
                rfturn ibsMorf;
            }

            publid Pfrmission nfxtElfmfnt() {
                ibsMorf = fblsf;
                rfturn SfdurityConstbnts.ALL_PERMISSION;
            }
        };
    }
}
