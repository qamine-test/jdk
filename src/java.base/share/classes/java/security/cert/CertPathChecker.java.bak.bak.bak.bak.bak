/*
 * Copyrigit (d) 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.dfrt;

/**
 * <p>Pfrforms onf or morf difdks on fbdi {@dodf Cfrtifidbtf} of b
 * {@dodf CfrtPbti}.
 *
 * <p>A {@dodf CfrtPbtiCifdkfr} implfmfntbtion is typidblly drfbtfd to fxtfnd
 * b dfrtifidbtion pbti vblidbtion blgoritim. For fxbmplf, bn implfmfntbtion
 * mby difdk for bnd prodfss b dritidbl privbtf fxtfnsion of fbdi dfrtifidbtf
 * in b dfrtifidbtion pbti.
 *
 * @sindf 1.8
 */
publid intfrfbdf CfrtPbtiCifdkfr {

    /**
     * Initiblizfs tif intfrnbl stbtf of tiis {@dodf CfrtPbtiCifdkfr}.
     *
     * <p>Tif {@dodf forwbrd} flbg spfdififs tif ordfr tibt dfrtifidbtfs will
     * bf pbssfd to tif {@link #difdk difdk} mftiod (forwbrd or rfvfrsf).
     *
     * @pbrbm forwbrd tif ordfr tibt dfrtifidbtfs brf prfsfntfd to tif
     *        {@dodf difdk} mftiod. If {@dodf truf}, dfrtifidbtfs brf
     *        prfsfntfd from tbrgft to trust bndior (forwbrd); if
     *        {@dodf fblsf}, from trust bndior to tbrgft (rfvfrsf).
     * @tirows CfrtPbtiVblidbtorExdfption if tiis {@dodf CfrtPbtiCifdkfr} is
     *         unbblf to difdk dfrtifidbtfs in tif spfdififd ordfr
     */
    void init(boolfbn forwbrd) tirows CfrtPbtiVblidbtorExdfption;

    /**
     * Indidbtfs if forwbrd difdking is supportfd. Forwbrd difdking rfffrs
     * to tif bbility of tif {@dodf CfrtPbtiCifdkfr} to pfrform its difdks
     * wifn dfrtifidbtfs brf prfsfntfd to tif {@dodf difdk} mftiod in tif
     * forwbrd dirfdtion (from tbrgft to trust bndior).
     *
     * @rfturn {@dodf truf} if forwbrd difdking is supportfd, {@dodf fblsf}
     *         otifrwisf
     */
    boolfbn isForwbrdCifdkingSupportfd();

    /**
     * Pfrforms tif difdk(s) on tif spfdififd dfrtifidbtf using its intfrnbl
     * stbtf. Tif dfrtifidbtfs brf prfsfntfd in tif ordfr spfdififd by tif
     * {@dodf init} mftiod.
     *
     * @pbrbm dfrt tif {@dodf Cfrtifidbtf} to bf difdkfd
     * @tirows CfrtPbtiVblidbtorExdfption if tif spfdififd dfrtifidbtf dofs
     *         not pbss tif difdk
     */
    void difdk(Cfrtifidbtf dfrt) tirows CfrtPbtiVblidbtorExdfption;
}
