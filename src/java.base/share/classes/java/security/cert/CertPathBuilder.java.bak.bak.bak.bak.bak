/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.dfrt;

import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.InvblidAlgoritimPbrbmftfrExdfption;
import jbvb.sfdurity.NoSudiAlgoritimExdfption;
import jbvb.sfdurity.NoSudiProvidfrExdfption;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.sfdurity.Providfr;
import jbvb.sfdurity.Sfdurity;
import sun.sfdurity.util.Dfbug;

import sun.sfdurity.jdb.*;
import sun.sfdurity.jdb.GftInstbndf.Instbndf;

/**
 * A dlbss for building dfrtifidbtion pbtis (blso known bs dfrtifidbtf dibins).
 * <p>
 * Tiis dlbss usfs b providfr-bbsfd brdiitfdturf.
 * To drfbtf b {@dodf CfrtPbtiBuildfr}, dbll
 * onf of tif stbtid {@dodf gftInstbndf} mftiods, pbssing in tif
 * blgoritim nbmf of tif {@dodf CfrtPbtiBuildfr} dfsirfd bnd optionblly
 * tif nbmf of tif providfr dfsirfd.
 *
 * <p>Ondf b {@dodf CfrtPbtiBuildfr} objfdt ibs bffn drfbtfd, dfrtifidbtion
 * pbtis dbn bf donstrudtfd by dblling tif {@link #build build} mftiod bnd
 * pbssing it bn blgoritim-spfdifid sft of pbrbmftfrs. If suddfssful, tif
 * rfsult (indluding tif {@dodf CfrtPbti} tibt wbs built) is rfturnfd
 * in bn objfdt tibt implfmfnts tif {@dodf CfrtPbtiBuildfrRfsult}
 * intfrfbdf.
 *
 * <p>Tif {@link #gftRfvodbtionCifdkfr} mftiod bllows bn bpplidbtion to spfdify
 * bdditionbl blgoritim-spfdifid pbrbmftfrs bnd options usfd by tif
 * {@dodf CfrtPbtiBuildfr} wifn difdking tif rfvodbtion stbtus of dfrtifidbtfs.
 * Hfrf is bn fxbmplf dfmonstrbting iow it is usfd witi tif PKIX blgoritim:
 *
 * <prf>
 * CfrtPbtiBuildfr dpb = CfrtPbtiBuildfr.gftInstbndf("PKIX");
 * PKIXRfvodbtionCifdkfr rd = (PKIXRfvodbtionCifdkfr)dpb.gftRfvodbtionCifdkfr();
 * rd.sftOptions(EnumSft.of(Option.PREFER_CRLS));
 * pbrbms.bddCfrtPbtiCifdkfr(rd);
 * CfrtPbtiBuildfrRfsult dpbr = dpb.build(pbrbms);
 * </prf>
 *
 * <p>Evfry implfmfntbtion of tif Jbvb plbtform is rfquirfd to support tif
 * following stbndbrd {@dodf CfrtPbtiBuildfr} blgoritim:
 * <ul>
 * <li>{@dodf PKIX}</li>
 * </ul>
 * Tiis blgoritim is dfsdribfd in tif <b irff=
 * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#CfrtPbtiBuildfr">
 * CfrtPbtiBuildfr sfdtion</b> of tif
 * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion.
 * Consult tif rflfbsf dodumfntbtion for your implfmfntbtion to sff if bny
 * otifr blgoritims brf supportfd.
 *
 * <p>
 * <b>Condurrfnt Addfss</b>
 * <p>
 * Tif stbtid mftiods of tiis dlbss brf gubrbntffd to bf tirfbd-sbff.
 * Multiplf tirfbds mby dondurrfntly invokf tif stbtid mftiods dffinfd in
 * tiis dlbss witi no ill ffffdts.
 * <p>
 * Howfvfr, tiis is not truf for tif non-stbtid mftiods dffinfd by tiis dlbss.
 * Unlfss otifrwisf dodumfntfd by b spfdifid providfr, tirfbds tibt nffd to
 * bddfss b singlf {@dodf CfrtPbtiBuildfr} instbndf dondurrfntly siould
 * syndironizf bmongst tifmsflvfs bnd providf tif nfdfssbry lodking. Multiplf
 * tirfbds fbdi mbnipulbting b difffrfnt {@dodf CfrtPbtiBuildfr} instbndf
 * nffd not syndironizf.
 *
 * @sff CfrtPbti
 *
 * @sindf       1.4
 * @butior      Sfbn Mullbn
 * @butior      Ybssir Ellfy
 */
publid dlbss CfrtPbtiBuildfr {

    /*
     * Constbnt to lookup in tif Sfdurity propfrtifs filf to dftfrminf
     * tif dffbult dfrtpbtibuildfr typf. In tif Sfdurity propfrtifs filf,
     * tif dffbult dfrtpbtibuildfr typf is givfn bs:
     * <prf>
     * dfrtpbtibuildfr.typf=PKIX
     * </prf>
     */
    privbtf stbtid finbl String CPB_TYPE = "dfrtpbtibuildfr.typf";
    privbtf finbl CfrtPbtiBuildfrSpi buildfrSpi;
    privbtf finbl Providfr providfr;
    privbtf finbl String blgoritim;

    /**
     * Crfbtfs b {@dodf CfrtPbtiBuildfr} objfdt of tif givfn blgoritim,
     * bnd fndbpsulbtfs tif givfn providfr implfmfntbtion (SPI objfdt) in it.
     *
     * @pbrbm buildfrSpi tif providfr implfmfntbtion
     * @pbrbm providfr tif providfr
     * @pbrbm blgoritim tif blgoritim nbmf
     */
    protfdtfd CfrtPbtiBuildfr(CfrtPbtiBuildfrSpi buildfrSpi, Providfr providfr,
        String blgoritim)
    {
        tiis.buildfrSpi = buildfrSpi;
        tiis.providfr = providfr;
        tiis.blgoritim = blgoritim;
    }

    /**
     * Rfturns b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     * spfdififd blgoritim.
     *
     * <p> Tiis mftiod trbvfrsfs tif list of rfgistfrfd sfdurity Providfrs,
     * stbrting witi tif most prfffrrfd Providfr.
     * A nfw CfrtPbtiBuildfr objfdt fndbpsulbting tif
     * CfrtPbtiBuildfrSpi implfmfntbtion from tif first
     * Providfr tibt supports tif spfdififd blgoritim is rfturnfd.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif nbmf of tif rfqufstfd {@dodf CfrtPbtiBuildfr}
     *  blgoritim.  Sff tif CfrtPbtiBuildfr sfdtion in tif <b irff=
     *  "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#CfrtPbtiBuildfr">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @rfturn b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     *          spfdififd blgoritim.
     *
     * @tirows NoSudiAlgoritimExdfption if no Providfr supports b
     *          CfrtPbtiBuildfrSpi implfmfntbtion for tif
     *          spfdififd blgoritim.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid CfrtPbtiBuildfr gftInstbndf(String blgoritim)
            tirows NoSudiAlgoritimExdfption {
        Instbndf instbndf = GftInstbndf.gftInstbndf("CfrtPbtiBuildfr",
            CfrtPbtiBuildfrSpi.dlbss, blgoritim);
        rfturn nfw CfrtPbtiBuildfr((CfrtPbtiBuildfrSpi)instbndf.impl,
            instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     * spfdififd blgoritim.
     *
     * <p> A nfw CfrtPbtiBuildfr objfdt fndbpsulbting tif
     * CfrtPbtiBuildfrSpi implfmfntbtion from tif spfdififd providfr
     * is rfturnfd.  Tif spfdififd providfr must bf rfgistfrfd
     * in tif sfdurity providfr list.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif nbmf of tif rfqufstfd {@dodf CfrtPbtiBuildfr}
     *  blgoritim.  Sff tif CfrtPbtiBuildfr sfdtion in tif <b irff=
     *  "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#CfrtPbtiBuildfr">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif nbmf of tif providfr.
     *
     * @rfturn b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     *          spfdififd blgoritim.
     *
     * @tirows NoSudiAlgoritimExdfption if b CfrtPbtiBuildfrSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not
     *          bvbilbblf from tif spfdififd providfr.
     *
     * @tirows NoSudiProvidfrExdfption if tif spfdififd providfr is not
     *          rfgistfrfd in tif sfdurity providfr list.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif {@dodf providfr} is
     *          null or fmpty.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid CfrtPbtiBuildfr gftInstbndf(String blgoritim, String providfr)
           tirows NoSudiAlgoritimExdfption, NoSudiProvidfrExdfption {
        Instbndf instbndf = GftInstbndf.gftInstbndf("CfrtPbtiBuildfr",
            CfrtPbtiBuildfrSpi.dlbss, blgoritim, providfr);
        rfturn nfw CfrtPbtiBuildfr((CfrtPbtiBuildfrSpi)instbndf.impl,
            instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     * spfdififd blgoritim.
     *
     * <p> A nfw CfrtPbtiBuildfr objfdt fndbpsulbting tif
     * CfrtPbtiBuildfrSpi implfmfntbtion from tif spfdififd Providfr
     * objfdt is rfturnfd.  Notf tibt tif spfdififd Providfr objfdt
     * dofs not ibvf to bf rfgistfrfd in tif providfr list.
     *
     * @pbrbm blgoritim tif nbmf of tif rfqufstfd {@dodf CfrtPbtiBuildfr}
     *  blgoritim.  Sff tif CfrtPbtiBuildfr sfdtion in tif <b irff=
     *  "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#CfrtPbtiBuildfr">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif providfr.
     *
     * @rfturn b {@dodf CfrtPbtiBuildfr} objfdt tibt implfmfnts tif
     *          spfdififd blgoritim.
     *
     * @fxdfption NoSudiAlgoritimExdfption if b CfrtPbtiBuildfrSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not bvbilbblf
     *          from tif spfdififd Providfr objfdt.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif {@dodf providfr} is
     *          null.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid CfrtPbtiBuildfr gftInstbndf(String blgoritim,
            Providfr providfr) tirows NoSudiAlgoritimExdfption {
        Instbndf instbndf = GftInstbndf.gftInstbndf("CfrtPbtiBuildfr",
            CfrtPbtiBuildfrSpi.dlbss, blgoritim, providfr);
        rfturn nfw CfrtPbtiBuildfr((CfrtPbtiBuildfrSpi)instbndf.impl,
            instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns tif providfr of tiis {@dodf CfrtPbtiBuildfr}.
     *
     * @rfturn tif providfr of tiis {@dodf CfrtPbtiBuildfr}
     */
    publid finbl Providfr gftProvidfr() {
        rfturn tiis.providfr;
    }

    /**
     * Rfturns tif nbmf of tif blgoritim of tiis {@dodf CfrtPbtiBuildfr}.
     *
     * @rfturn tif nbmf of tif blgoritim of tiis {@dodf CfrtPbtiBuildfr}
     */
    publid finbl String gftAlgoritim() {
        rfturn tiis.blgoritim;
    }

    /**
     * Attfmpts to build b dfrtifidbtion pbti using tif spfdififd blgoritim
     * pbrbmftfr sft.
     *
     * @pbrbm pbrbms tif blgoritim pbrbmftfrs
     * @rfturn tif rfsult of tif build blgoritim
     * @tirows CfrtPbtiBuildfrExdfption if tif buildfr is unbblf to donstrudt
     *  b dfrtifidbtion pbti tibt sbtisfifs tif spfdififd pbrbmftfrs
     * @tirows InvblidAlgoritimPbrbmftfrExdfption if tif spfdififd pbrbmftfrs
     * brf inbppropribtf for tiis {@dodf CfrtPbtiBuildfr}
     */
    publid finbl CfrtPbtiBuildfrRfsult build(CfrtPbtiPbrbmftfrs pbrbms)
        tirows CfrtPbtiBuildfrExdfption, InvblidAlgoritimPbrbmftfrExdfption
    {
        rfturn buildfrSpi.fnginfBuild(pbrbms);
    }

    /**
     * Rfturns tif dffbult {@dodf CfrtPbtiBuildfr} typf bs spfdififd by
     * tif {@dodf dfrtpbtibuildfr.typf} sfdurity propfrty, or tif string
     * {@litfrbl "PKIX"} if no sudi propfrty fxists.
     *
     * <p>Tif dffbult {@dodf CfrtPbtiBuildfr} typf dbn bf usfd by
     * bpplidbtions tibt do not wbnt to usf b ibrd-dodfd typf wifn dblling onf
     * of tif {@dodf gftInstbndf} mftiods, bnd wbnt to providf b dffbult
     * typf in dbsf b usfr dofs not spfdify its own.
     *
     * <p>Tif dffbult {@dodf CfrtPbtiBuildfr} typf dbn bf dibngfd by
     * sftting tif vbluf of tif {@dodf dfrtpbtibuildfr.typf} sfdurity propfrty
     * to tif dfsirfd typf.
     *
     * @sff jbvb.sfdurity.Sfdurity sfdurity propfrtifs
     * @rfturn tif dffbult {@dodf CfrtPbtiBuildfr} typf bs spfdififd
     * by tif {@dodf dfrtpbtibuildfr.typf} sfdurity propfrty, or tif string
     * {@litfrbl "PKIX"} if no sudi propfrty fxists.
     */
    publid finbl stbtid String gftDffbultTypf() {
        String dpbtypf =
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<String>() {
                publid String run() {
                    rfturn Sfdurity.gftPropfrty(CPB_TYPE);
                }
            });
        rfturn (dpbtypf == null) ? "PKIX" : dpbtypf;
    }

    /**
     * Rfturns b {@dodf CfrtPbtiCifdkfr} tibt tif fndbpsulbtfd
     * {@dodf CfrtPbtiBuildfrSpi} implfmfntbtion usfs to difdk tif rfvodbtion
     * stbtus of dfrtifidbtfs. A PKIX implfmfntbtion rfturns objfdts of
     * typf {@dodf PKIXRfvodbtionCifdkfr}. Ebdi invodbtion of tiis mftiod
     * rfturns b nfw instbndf of {@dodf CfrtPbtiCifdkfr}.
     *
     * <p>Tif primbry purposf of tiis mftiod is to bllow dbllfrs to spfdify
     * bdditionbl input pbrbmftfrs bnd options spfdifid to rfvodbtion difdking.
     * Sff tif dlbss dfsdription for bn fxbmplf.
     *
     * @rfturn b {@dodf CfrtPbtiCifdkfr}
     * @tirows UnsupportfdOpfrbtionExdfption if tif sfrvidf providfr dofs not
     *         support tiis mftiod
     * @sindf 1.8
     */
    publid finbl CfrtPbtiCifdkfr gftRfvodbtionCifdkfr() {
        rfturn buildfrSpi.fnginfGftRfvodbtionCifdkfr();
    }
}
