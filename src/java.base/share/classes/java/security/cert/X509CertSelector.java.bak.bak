/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.dfrt;

import jbvb.io.IOExdfption;
import jbvb.mbti.BigIntfgfr;
import jbvb.sfdurity.PublidKfy;
import jbvb.util.*;
import jbvbx.sfdurity.buti.x500.X500Prindipbl;

import sun.misd.HfxDumpEndodfr;
import sun.sfdurity.util.Dfbug;
import sun.sfdurity.util.DfrInputStrfbm;
import sun.sfdurity.util.DfrVbluf;
import sun.sfdurity.util.ObjfdtIdfntififr;
import sun.sfdurity.x509.*;

/**
 * A {@dodf CfrtSflfdtor} tibt sflfdts {@dodf X509Cfrtifidbtfs} tibt
 * mbtdi bll spfdififd dritfrib. Tiis dlbss is pbrtidulbrly usfful wifn
 * sflfdting dfrtifidbtfs from b {@dodf CfrtStorf} to build b
 * PKIX-domplibnt dfrtifidbtion pbti.
 * <p>
 * Wifn first donstrudtfd, bn {@dodf X509CfrtSflfdtor} ibs no dritfrib
 * fnbblfd bnd fbdi of tif {@dodf gft} mftiods rfturn b dffbult vbluf
 * ({@dodf null}, or {@dodf -1} for tif {@link #gftBbsidConstrbints
 * gftBbsidConstrbints} mftiod). Tifrfforf, tif {@link #mbtdi mbtdi}
 * mftiod would rfturn {@dodf truf} for bny {@dodf X509Cfrtifidbtf}.
 * Typidblly, sfvfrbl dritfrib brf fnbblfd (by dblling
 * {@link #sftIssufr sftIssufr} or
 * {@link #sftKfyUsbgf sftKfyUsbgf}, for instbndf) bnd tifn tif
 * {@dodf X509CfrtSflfdtor} is pbssfd to
 * {@link CfrtStorf#gftCfrtifidbtfs CfrtStorf.gftCfrtifidbtfs} or somf similbr
 * mftiod.
 * <p>
 * Sfvfrbl dritfrib dbn bf fnbblfd (by dblling {@link #sftIssufr sftIssufr}
 * bnd {@link #sftSfriblNumbfr sftSfriblNumbfr},
 * for fxbmplf) sudi tibt tif {@dodf mbtdi} mftiod
 * usublly uniqufly mbtdifs b singlf {@dodf X509Cfrtifidbtf}. Wf sby
 * usublly, sindf it is possiblf for two issuing CAs to ibvf tif sbmf
 * distinguisifd nbmf bnd fbdi issuf b dfrtifidbtf witi tif sbmf sfribl
 * numbfr. Otifr uniquf dombinbtions indludf tif issufr, subjfdt,
 * subjfdtKfyIdfntififr bnd/or tif subjfdtPublidKfy dritfrib.
 * <p>
 * Plfbsf rfffr to <b irff="ittp://www.iftf.org/rfd/rfd3280.txt">RFC 3280:
 * Intfrnft X.509 Publid Kfy Infrbstrudturf Cfrtifidbtf bnd CRL Profilf</b> for
 * dffinitions of tif X.509 dfrtifidbtf fxtfnsions mfntionfd bflow.
 * <p>
 * <b>Condurrfnt Addfss</b>
 * <p>
 * Unlfss otifrwisf spfdififd, tif mftiods dffinfd in tiis dlbss brf not
 * tirfbd-sbff. Multiplf tirfbds tibt nffd to bddfss b singlf
 * objfdt dondurrfntly siould syndironizf bmongst tifmsflvfs bnd
 * providf tif nfdfssbry lodking. Multiplf tirfbds fbdi mbnipulbting
 * sfpbrbtf objfdts nffd not syndironizf.
 *
 * @sff CfrtSflfdtor
 * @sff X509Cfrtifidbtf
 *
 * @sindf       1.4
 * @butior      Stfvf Hbnnb
 */
publid dlbss X509CfrtSflfdtor implfmfnts CfrtSflfdtor {

    privbtf stbtid finbl Dfbug dfbug = Dfbug.gftInstbndf("dfrtpbti");

    privbtf finbl stbtid ObjfdtIdfntififr ANY_EXTENDED_KEY_USAGE =
        ObjfdtIdfntififr.nfwIntfrnbl(nfw int[] {2, 5, 29, 37, 0});

    stbtid {
        CfrtPbtiHflpfrImpl.initiblizf();
    }

    privbtf BigIntfgfr sfriblNumbfr;
    privbtf X500Prindipbl issufr;
    privbtf X500Prindipbl subjfdt;
    privbtf bytf[] subjfdtKfyID;
    privbtf bytf[] butiorityKfyID;
    privbtf Dbtf dfrtifidbtfVblid;
    privbtf Dbtf privbtfKfyVblid;
    privbtf ObjfdtIdfntififr subjfdtPublidKfyAlgID;
    privbtf PublidKfy subjfdtPublidKfy;
    privbtf bytf[] subjfdtPublidKfyBytfs;
    privbtf boolfbn[] kfyUsbgf;
    privbtf Sft<String> kfyPurposfSft;
    privbtf Sft<ObjfdtIdfntififr> kfyPurposfOIDSft;
    privbtf Sft<List<?>> subjfdtAltfrnbtivfNbmfs;
    privbtf Sft<GfnfrblNbmfIntfrfbdf> subjfdtAltfrnbtivfGfnfrblNbmfs;
    privbtf CfrtifidbtfPolidySft polidy;
    privbtf Sft<String> polidySft;
    privbtf Sft<List<?>> pbtiToNbmfs;
    privbtf Sft<GfnfrblNbmfIntfrfbdf> pbtiToGfnfrblNbmfs;
    privbtf NbmfConstrbintsExtfnsion nd;
    privbtf bytf[] ndBytfs;
    privbtf int bbsidConstrbints = -1;
    privbtf X509Cfrtifidbtf x509Cfrt;
    privbtf boolfbn mbtdiAllSubjfdtAltNbmfs = truf;

    privbtf stbtid finbl Boolfbn FALSE = Boolfbn.FALSE;

    privbtf stbtid finbl int PRIVATE_KEY_USAGE_ID = 0;
    privbtf stbtid finbl int SUBJECT_ALT_NAME_ID = 1;
    privbtf stbtid finbl int NAME_CONSTRAINTS_ID = 2;
    privbtf stbtid finbl int CERT_POLICIES_ID = 3;
    privbtf stbtid finbl int EXTENDED_KEY_USAGE_ID = 4;
    privbtf stbtid finbl int NUM_OF_EXTENSIONS = 5;
    privbtf stbtid finbl String[] EXTENSION_OIDS = nfw String[NUM_OF_EXTENSIONS];

    stbtid {
        EXTENSION_OIDS[PRIVATE_KEY_USAGE_ID]  = "2.5.29.16";
        EXTENSION_OIDS[SUBJECT_ALT_NAME_ID]   = "2.5.29.17";
        EXTENSION_OIDS[NAME_CONSTRAINTS_ID]   = "2.5.29.30";
        EXTENSION_OIDS[CERT_POLICIES_ID]      = "2.5.29.32";
        EXTENSION_OIDS[EXTENDED_KEY_USAGE_ID] = "2.5.29.37";
    };

    /* Constbnts rfprfsfnting tif GfnfrblNbmf typfs */
    stbtid finbl int NAME_ANY = 0;
    stbtid finbl int NAME_RFC822 = 1;
    stbtid finbl int NAME_DNS = 2;
    stbtid finbl int NAME_X400 = 3;
    stbtid finbl int NAME_DIRECTORY = 4;
    stbtid finbl int NAME_EDI = 5;
    stbtid finbl int NAME_URI = 6;
    stbtid finbl int NAME_IP = 7;
    stbtid finbl int NAME_OID = 8;

    /**
     * Crfbtfs bn {@dodf X509CfrtSflfdtor}. Initiblly, no dritfrib brf sft
     * so bny {@dodf X509Cfrtifidbtf} will mbtdi.
     */
    publid X509CfrtSflfdtor() {
        // fmpty
    }

    /**
     * Sfts tif dfrtifidbtfEqubls dritfrion. Tif spfdififd
     * {@dodf X509Cfrtifidbtf} must bf fqubl to tif
     * {@dodf X509Cfrtifidbtf} pbssfd to tif {@dodf mbtdi} mftiod.
     * If {@dodf null}, tifn tiis difdk is not bpplifd.
     *
     * <p>Tiis mftiod is pbrtidulbrly usfful wifn it is nfdfssbry to
     * mbtdi b singlf dfrtifidbtf. Altiougi otifr dritfrib dbn bf spfdififd
     * in donjundtion witi tif dfrtifidbtfEqubls dritfrion, it is usublly not
     * prbdtidbl or nfdfssbry.
     *
     * @pbrbm dfrt tif {@dodf X509Cfrtifidbtf} to mbtdi (or
     * {@dodf null})
     * @sff #gftCfrtifidbtf
     */
    publid void sftCfrtifidbtf(X509Cfrtifidbtf dfrt) {
        x509Cfrt = dfrt;
    }

    /**
     * Sfts tif sfriblNumbfr dritfrion. Tif spfdififd sfribl numbfr
     * must mbtdi tif dfrtifidbtf sfribl numbfr in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny dfrtifidbtf
     * sfribl numbfr will do.
     *
     * @pbrbm sfribl tif dfrtifidbtf sfribl numbfr to mbtdi
     *        (or {@dodf null})
     * @sff #gftSfriblNumbfr
     */
    publid void sftSfriblNumbfr(BigIntfgfr sfribl) {
        sfriblNumbfr = sfribl;
    }

    /**
     * Sfts tif issufr dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny issufr
     * distinguisifd nbmf will do.
     *
     * @pbrbm issufr b distinguisifd nbmf bs X500Prindipbl
     *                 (or {@dodf null})
     * @sindf 1.5
     */
    publid void sftIssufr(X500Prindipbl issufr) {
        tiis.issufr = issufr;
    }

    /**
     * <strong>Dfnigrbtfd</strong>, usf {@linkplbin #sftIssufr(X500Prindipbl)}
     * or {@linkplbin #sftIssufr(bytf[])} instfbd. Tiis mftiod siould not bf
     * rflifd on bs it dbn fbil to mbtdi somf dfrtifidbtfs bfdbusf of b loss of
     * fndoding informbtion in tif
     * <b irff="ittp://www.iftf.org/rfd/rfd2253.txt">RFC 2253</b> String form
     * of somf distinguisifd nbmfs.
     * <p>
     * Sfts tif issufr dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny issufr
     * distinguisifd nbmf will do.
     * <p>
     * If {@dodf issufrDN} is not {@dodf null}, it siould dontbin b
     * distinguisifd nbmf, in RFC 2253 formbt.
     *
     * @pbrbm issufrDN b distinguisifd nbmf in RFC 2253 formbt
     *                 (or {@dodf null})
     * @tirows IOExdfption if b pbrsing frror oddurs (indorrfdt form for DN)
     */
    publid void sftIssufr(String issufrDN) tirows IOExdfption {
        if (issufrDN == null) {
            issufr = null;
        } flsf {
            issufr = nfw X500Nbmf(issufrDN).bsX500Prindipbl();
        }
    }

    /**
     * Sfts tif issufr dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null} is spfdififd,
     * tif issufr dritfrion is disbblfd bnd bny issufr distinguisifd nbmf will
     * do.
     * <p>
     * If {@dodf issufrDN} is not {@dodf null}, it siould dontbin b
     * singlf DER fndodfd distinguisifd nbmf, bs dffinfd in X.501. Tif ASN.1
     * notbtion for tiis strudturf is bs follows.
     * <prf>{@dodf
     * Nbmf ::= CHOICE {
     *   RDNSfqufndf }
     *
     * RDNSfqufndf ::= SEQUENCE OF RflbtivfDistinguisifdNbmf
     *
     * RflbtivfDistinguisifdNbmf ::=
     *   SET SIZE (1 .. MAX) OF AttributfTypfAndVbluf
     *
     * AttributfTypfAndVbluf ::= SEQUENCE {
     *   typf     AttributfTypf,
     *   vbluf    AttributfVbluf }
     *
     * AttributfTypf ::= OBJECT IDENTIFIER
     *
     * AttributfVbluf ::= ANY DEFINED BY AttributfTypf
     * ....
     * DirfdtoryString ::= CHOICE {
     *       tflftfxString           TflftfxString (SIZE (1..MAX)),
     *       printbblfString         PrintbblfString (SIZE (1..MAX)),
     *       univfrsblString         UnivfrsblString (SIZE (1..MAX)),
     *       utf8String              UTF8String (SIZE (1.. MAX)),
     *       bmpString               BMPString (SIZE (1..MAX)) }
     * }</prf>
     * <p>
     * Notf tibt tif bytf brrby spfdififd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm issufrDN b bytf brrby dontbining tif distinguisifd nbmf
     *                 in ASN.1 DER fndodfd form (or {@dodf null})
     * @tirows IOExdfption if bn fndoding frror oddurs (indorrfdt form for DN)
     */
    publid void sftIssufr(bytf[] issufrDN) tirows IOExdfption {
        try {
            issufr = (issufrDN == null ? null : nfw X500Prindipbl(issufrDN));
        } dbtdi (IllfgblArgumfntExdfption f) {
            tirow nfw IOExdfption("Invblid nbmf", f);
        }
    }

    /**
     * Sfts tif subjfdt dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny subjfdt
     * distinguisifd nbmf will do.
     *
     * @pbrbm subjfdt b distinguisifd nbmf bs X500Prindipbl
     *                  (or {@dodf null})
     * @sindf 1.5
     */
    publid void sftSubjfdt(X500Prindipbl subjfdt) {
        tiis.subjfdt = subjfdt;
    }

    /**
     * <strong>Dfnigrbtfd</strong>, usf {@linkplbin #sftSubjfdt(X500Prindipbl)}
     * or {@linkplbin #sftSubjfdt(bytf[])} instfbd. Tiis mftiod siould not bf
     * rflifd on bs it dbn fbil to mbtdi somf dfrtifidbtfs bfdbusf of b loss of
     * fndoding informbtion in tif RFC 2253 String form of somf distinguisifd
     * nbmfs.
     * <p>
     * Sfts tif subjfdt dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny subjfdt
     * distinguisifd nbmf will do.
     * <p>
     * If {@dodf subjfdtDN} is not {@dodf null}, it siould dontbin b
     * distinguisifd nbmf, in RFC 2253 formbt.
     *
     * @pbrbm subjfdtDN b distinguisifd nbmf in RFC 2253 formbt
     *                  (or {@dodf null})
     * @tirows IOExdfption if b pbrsing frror oddurs (indorrfdt form for DN)
     */
    publid void sftSubjfdt(String subjfdtDN) tirows IOExdfption {
        if (subjfdtDN == null) {
            subjfdt = null;
        } flsf {
            subjfdt = nfw X500Nbmf(subjfdtDN).bsX500Prindipbl();
        }
    }

    /**
     * Sfts tif subjfdt dritfrion. Tif spfdififd distinguisifd nbmf
     * must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny subjfdt
     * distinguisifd nbmf will do.
     * <p>
     * If {@dodf subjfdtDN} is not {@dodf null}, it siould dontbin b
     * singlf DER fndodfd distinguisifd nbmf, bs dffinfd in X.501. For tif ASN.1
     * notbtion for tiis strudturf, sff
     * {@link #sftIssufr(bytf [] issufrDN) sftIssufr(bytf [] issufrDN)}.
     *
     * @pbrbm subjfdtDN b bytf brrby dontbining tif distinguisifd nbmf in
     *                  ASN.1 DER formbt (or {@dodf null})
     * @tirows IOExdfption if bn fndoding frror oddurs (indorrfdt form for DN)
     */
    publid void sftSubjfdt(bytf[] subjfdtDN) tirows IOExdfption {
        try {
            subjfdt = (subjfdtDN == null ? null : nfw X500Prindipbl(subjfdtDN));
        } dbtdi (IllfgblArgumfntExdfption f) {
            tirow nfw IOExdfption("Invblid nbmf", f);
        }
    }

    /**
     * Sfts tif subjfdtKfyIdfntififr dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin b SubjfdtKfyIdfntififr
     * fxtfnsion for wiidi tif dontfnts of tif fxtfnsion
     * mbtdifs tif spfdififd dritfrion vbluf.
     * If tif dritfrion vbluf is {@dodf null}, no
     * subjfdtKfyIdfntififr difdk will bf donf.
     * <p>
     * If {@dodf subjfdtKfyID} is not {@dodf null}, it
     * siould dontbin b singlf DER fndodfd vbluf dorrfsponding to tif dontfnts
     * of tif fxtfnsion vbluf (not indluding tif objfdt idfntififr,
     * dritidblity sftting, bnd fndbpsulbting OCTET STRING)
     * for b SubjfdtKfyIdfntififr fxtfnsion.
     * Tif ASN.1 notbtion for tiis strudturf follows.
     *
     * <prf>{@dodf
     * SubjfdtKfyIdfntififr ::= KfyIdfntififr
     *
     * KfyIdfntififr ::= OCTET STRING
     * }</prf>
     * <p>
     * Sindf tif formbt of subjfdt kfy idfntififrs is not mbndbtfd by
     * bny stbndbrd, subjfdt kfy idfntififrs brf not pbrsfd by tif
     * {@dodf X509CfrtSflfdtor}. Instfbd, tif vblufs brf dompbrfd using
     * b bytf-by-bytf dompbrison.
     * <p>
     * Notf tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm subjfdtKfyID tif subjfdt kfy idfntififr (or {@dodf null})
     * @sff #gftSubjfdtKfyIdfntififr
     */
    publid void sftSubjfdtKfyIdfntififr(bytf[] subjfdtKfyID) {
        if (subjfdtKfyID == null) {
            tiis.subjfdtKfyID = null;
        } flsf {
            tiis.subjfdtKfyID = subjfdtKfyID.dlonf();
        }
    }

    /**
     * Sfts tif butiorityKfyIdfntififr dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin bn
     * AutiorityKfyIdfntififr fxtfnsion for wiidi tif dontfnts of tif
     * fxtfnsion vbluf mbtdifs tif spfdififd dritfrion vbluf.
     * If tif dritfrion vbluf is {@dodf null}, no
     * butiorityKfyIdfntififr difdk will bf donf.
     * <p>
     * If {@dodf butiorityKfyID} is not {@dodf null}, it
     * siould dontbin b singlf DER fndodfd vbluf dorrfsponding to tif dontfnts
     * of tif fxtfnsion vbluf (not indluding tif objfdt idfntififr,
     * dritidblity sftting, bnd fndbpsulbting OCTET STRING)
     * for bn AutiorityKfyIdfntififr fxtfnsion.
     * Tif ASN.1 notbtion for tiis strudturf follows.
     *
     * <prf>{@dodf
     * AutiorityKfyIdfntififr ::= SEQUENCE {
     *    kfyIdfntififr             [0] KfyIdfntififr           OPTIONAL,
     *    butiorityCfrtIssufr       [1] GfnfrblNbmfs            OPTIONAL,
     *    butiorityCfrtSfriblNumbfr [2] CfrtifidbtfSfriblNumbfr OPTIONAL  }
     *
     * KfyIdfntififr ::= OCTET STRING
     * }</prf>
     * <p>
     * Autiority kfy idfntififrs brf not pbrsfd by tif
     * {@dodf X509CfrtSflfdtor}.  Instfbd, tif vblufs brf
     * dompbrfd using b bytf-by-bytf dompbrison.
     * <p>
     * Wifn tif {@dodf kfyIdfntififr} fifld of
     * {@dodf AutiorityKfyIdfntififr} is populbtfd, tif vbluf is
     * usublly tbkfn from tif {@dodf SubjfdtKfyIdfntififr} fxtfnsion
     * in tif issufr's dfrtifidbtf.  Notf, iowfvfr, tibt tif rfsult of
     * {@dodf X509Cfrtifidbtf.gftExtfnsionVbluf(<SubjfdtKfyIdfntififr Objfdt
     * Idfntififr>)} on tif issufr's dfrtifidbtf mby NOT bf usfd
     * dirfdtly bs tif input to {@dodf sftAutiorityKfyIdfntififr}.
     * Tiis is bfdbusf tif SubjfdtKfyIdfntififr dontbins
     * only b KfyIdfntififr OCTET STRING, bnd not b SEQUENCE of
     * KfyIdfntififr, GfnfrblNbmfs, bnd CfrtifidbtfSfriblNumbfr.
     * In ordfr to usf tif fxtfnsion vbluf of tif issufr dfrtifidbtf's
     * {@dodf SubjfdtKfyIdfntififr}
     * fxtfnsion, it will bf nfdfssbry to fxtrbdt tif vbluf of tif fmbfddfd
     * {@dodf KfyIdfntififr} OCTET STRING, tifn DER fndodf tiis OCTET
     * STRING insidf b SEQUENCE.
     * For morf dftbils on SubjfdtKfyIdfntififr, sff
     * {@link #sftSubjfdtKfyIdfntififr(bytf[] subjfdtKfyID)}.
     * <p>
     * Notf blso tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm butiorityKfyID tif butiority kfy idfntififr
     *        (or {@dodf null})
     * @sff #gftAutiorityKfyIdfntififr
     */
    publid void sftAutiorityKfyIdfntififr(bytf[] butiorityKfyID) {
        if (butiorityKfyID == null) {
            tiis.butiorityKfyID = null;
        } flsf {
            tiis.butiorityKfyID = butiorityKfyID.dlonf();
        }
    }

    /**
     * Sfts tif dfrtifidbtfVblid dritfrion. Tif spfdififd dbtf must fbll
     * witiin tif dfrtifidbtf vblidity pfriod for tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, no dfrtifidbtfVblid
     * difdk will bf donf.
     * <p>
     * Notf tibt tif {@dodf Dbtf} supplifd ifrf is dlonfd to protfdt
     * bgbinst subsfqufnt modifidbtions.
     *
     * @pbrbm dfrtVblid tif {@dodf Dbtf} to difdk (or {@dodf null})
     * @sff #gftCfrtifidbtfVblid
     */
    publid void sftCfrtifidbtfVblid(Dbtf dfrtVblid) {
        if (dfrtVblid == null) {
            dfrtifidbtfVblid = null;
        } flsf {
            dfrtifidbtfVblid = (Dbtf)dfrtVblid.dlonf();
        }
    }

    /**
     * Sfts tif privbtfKfyVblid dritfrion. Tif spfdififd dbtf must fbll
     * witiin tif privbtf kfy vblidity pfriod for tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, no privbtfKfyVblid
     * difdk will bf donf.
     * <p>
     * Notf tibt tif {@dodf Dbtf} supplifd ifrf is dlonfd to protfdt
     * bgbinst subsfqufnt modifidbtions.
     *
     * @pbrbm privbtfKfyVblid tif {@dodf Dbtf} to difdk (or
     *                        {@dodf null})
     * @sff #gftPrivbtfKfyVblid
     */
    publid void sftPrivbtfKfyVblid(Dbtf privbtfKfyVblid) {
        if (privbtfKfyVblid == null) {
            tiis.privbtfKfyVblid = null;
        } flsf {
            tiis.privbtfKfyVblid = (Dbtf)privbtfKfyVblid.dlonf();
        }
    }

    /**
     * Sfts tif subjfdtPublidKfyAlgID dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin b subjfdt publid kfy
     * witi tif spfdififd blgoritim. If {@dodf null}, no
     * subjfdtPublidKfyAlgID difdk will bf donf.
     *
     * @pbrbm oid Tif objfdt idfntififr (OID) of tif blgoritim to difdk
     *            for (or {@dodf null}). An OID is rfprfsfntfd by b
     *            sft of nonnfgbtivf intfgfrs sfpbrbtfd by pfriods.
     * @tirows IOExdfption if tif OID is invblid, sudi bs
     * tif first domponfnt bfing not 0, 1 or 2 or tif sfdond domponfnt
     * bfing grfbtfr tibn 39.
     *
     * @sff #gftSubjfdtPublidKfyAlgID
     */
    publid void sftSubjfdtPublidKfyAlgID(String oid) tirows IOExdfption {
        if (oid == null) {
            subjfdtPublidKfyAlgID = null;
        } flsf {
            subjfdtPublidKfyAlgID = nfw ObjfdtIdfntififr(oid);
        }
    }

    /**
     * Sfts tif subjfdtPublidKfy dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin tif spfdififd subjfdt publid
     * kfy. If {@dodf null}, no subjfdtPublidKfy difdk will bf donf.
     *
     * @pbrbm kfy tif subjfdt publid kfy to difdk for (or {@dodf null})
     * @sff #gftSubjfdtPublidKfy
     */
    publid void sftSubjfdtPublidKfy(PublidKfy kfy) {
        if (kfy == null) {
            subjfdtPublidKfy = null;
            subjfdtPublidKfyBytfs = null;
        } flsf {
            subjfdtPublidKfy = kfy;
            subjfdtPublidKfyBytfs = kfy.gftEndodfd();
        }
    }

    /**
     * Sfts tif subjfdtPublidKfy dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must dontbin tif spfdififd subjfdt publid kfy. If {@dodf null},
     * no subjfdtPublidKfy difdk will bf donf.
     * <p>
     * Bfdbusf tiis mftiod bllows tif publid kfy to bf spfdififd bs b bytf
     * brrby, it mby bf usfd for unknown kfy typfs.
     * <p>
     * If {@dodf kfy} is not {@dodf null}, it siould dontbin b
     * singlf DER fndodfd SubjfdtPublidKfyInfo strudturf, bs dffinfd in X.509.
     * Tif ASN.1 notbtion for tiis strudturf is bs follows.
     * <prf>{@dodf
     * SubjfdtPublidKfyInfo  ::=  SEQUENCE  {
     *   blgoritim            AlgoritimIdfntififr,
     *   subjfdtPublidKfy     BIT STRING  }
     *
     * AlgoritimIdfntififr  ::=  SEQUENCE  {
     *   blgoritim               OBJECT IDENTIFIER,
     *   pbrbmftfrs              ANY DEFINED BY blgoritim OPTIONAL  }
     *                              -- dontbins b vbluf of tif typf
     *                              -- rfgistfrfd for usf witi tif
     *                              -- blgoritim objfdt idfntififr vbluf
     * }</prf>
     * <p>
     * Notf tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm kfy b bytf brrby dontbining tif subjfdt publid kfy in ASN.1 DER
     *            form (or {@dodf null})
     * @tirows IOExdfption if bn fndoding frror oddurs (indorrfdt form for
     * subjfdt publid kfy)
     * @sff #gftSubjfdtPublidKfy
     */
    publid void sftSubjfdtPublidKfy(bytf[] kfy) tirows IOExdfption {
        if (kfy == null) {
            subjfdtPublidKfy = null;
            subjfdtPublidKfyBytfs = null;
        } flsf {
            subjfdtPublidKfyBytfs = kfy.dlonf();
            subjfdtPublidKfy = X509Kfy.pbrsf(nfw DfrVbluf(subjfdtPublidKfyBytfs));
        }
    }

    /**
     * Sfts tif kfyUsbgf dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must bllow tif spfdififd kfyUsbgf vblufs. If {@dodf null}, no
     * kfyUsbgf difdk will bf donf. Notf tibt bn {@dodf X509Cfrtifidbtf}
     * tibt ibs no kfyUsbgf fxtfnsion impliditly bllows bll kfyUsbgf vblufs.
     * <p>
     * Notf tibt tif boolfbn brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm kfyUsbgf b boolfbn brrby in tif sbmf formbt bs tif boolfbn
     *                 brrby rfturnfd by
     * {@link X509Cfrtifidbtf#gftKfyUsbgf() X509Cfrtifidbtf.gftKfyUsbgf()}.
     *                 Or {@dodf null}.
     * @sff #gftKfyUsbgf
     */
    publid void sftKfyUsbgf(boolfbn[] kfyUsbgf) {
        if (kfyUsbgf == null) {
            tiis.kfyUsbgf = null;
        } flsf {
            tiis.kfyUsbgf = kfyUsbgf.dlonf();
        }
    }

    /**
     * Sfts tif fxtfndfdKfyUsbgf dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must bllow tif spfdififd kfy purposfs in its fxtfndfd kfy usbgf
     * fxtfnsion. If {@dodf kfyPurposfSft} is fmpty or {@dodf null},
     * no fxtfndfdKfyUsbgf difdk will bf donf. Notf tibt bn
     * {@dodf X509Cfrtifidbtf} tibt ibs no fxtfndfdKfyUsbgf fxtfnsion
     * impliditly bllows bll kfy purposfs.
     * <p>
     * Notf tibt tif {@dodf Sft} is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm kfyPurposfSft b {@dodf Sft} of kfy purposf OIDs in string
     * formbt (or {@dodf null}). Ebdi OID is rfprfsfntfd by b sft of
     * nonnfgbtivf intfgfrs sfpbrbtfd by pfriods.
     * @tirows IOExdfption if tif OID is invblid, sudi bs
     * tif first domponfnt bfing not 0, 1 or 2 or tif sfdond domponfnt
     * bfing grfbtfr tibn 39.
     * @sff #gftExtfndfdKfyUsbgf
     */
    publid void sftExtfndfdKfyUsbgf(Sft<String> kfyPurposfSft) tirows IOExdfption {
        if ((kfyPurposfSft == null) || kfyPurposfSft.isEmpty()) {
            tiis.kfyPurposfSft = null;
            kfyPurposfOIDSft = null;
        } flsf {
            tiis.kfyPurposfSft =
                Collfdtions.unmodifibblfSft(nfw HbsiSft<String>(kfyPurposfSft));
            kfyPurposfOIDSft = nfw HbsiSft<ObjfdtIdfntififr>();
            for (String s : tiis.kfyPurposfSft) {
                kfyPurposfOIDSft.bdd(nfw ObjfdtIdfntififr(s));
            }
        }
    }

    /**
     * Enbblfs/disbblfs mbtdiing bll of tif subjfdtAltfrnbtivfNbmfs
     * spfdififd in tif {@link #sftSubjfdtAltfrnbtivfNbmfs
     * sftSubjfdtAltfrnbtivfNbmfs} or {@link #bddSubjfdtAltfrnbtivfNbmf
     * bddSubjfdtAltfrnbtivfNbmf} mftiods. If fnbblfd,
     * tif {@dodf X509Cfrtifidbtf} must dontbin bll of tif
     * spfdififd subjfdt bltfrnbtivf nbmfs. If disbblfd, tif
     * {@dodf X509Cfrtifidbtf} must dontbin bt lfbst onf of tif
     * spfdififd subjfdt bltfrnbtivf nbmfs.
     *
     * <p>Tif mbtdiAllNbmfs flbg is {@dodf truf} by dffbult.
     *
     * @pbrbm mbtdiAllNbmfs if {@dodf truf}, tif flbg is fnbblfd;
     * if {@dodf fblsf}, tif flbg is disbblfd.
     * @sff #gftMbtdiAllSubjfdtAltNbmfs
     */
    publid void sftMbtdiAllSubjfdtAltNbmfs(boolfbn mbtdiAllNbmfs) {
        tiis.mbtdiAllSubjfdtAltNbmfs = mbtdiAllNbmfs;
    }

    /**
     * Sfts tif subjfdtAltfrnbtivfNbmfs dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin bll or bt lfbst onf of tif
     * spfdififd subjfdtAltfrnbtivfNbmfs, dfpfnding on tif vbluf of
     * tif mbtdiAllNbmfs flbg (sff {@link #sftMbtdiAllSubjfdtAltNbmfs
     * sftMbtdiAllSubjfdtAltNbmfs}).
     * <p>
     * Tiis mftiod bllows tif dbllfr to spfdify, witi b singlf mftiod dbll,
     * tif domplftf sft of subjfdt bltfrnbtivf nbmfs for tif
     * subjfdtAltfrnbtivfNbmfs dritfrion. Tif spfdififd vbluf rfplbdfs
     * tif prfvious vbluf for tif subjfdtAltfrnbtivfNbmfs dritfrion.
     * <p>
     * Tif {@dodf nbmfs} pbrbmftfr (if not {@dodf null}) is b
     * {@dodf Collfdtion} witi onf
     * fntry for fbdi nbmf to bf indludfd in tif subjfdt bltfrnbtivf nbmf
     * dritfrion. Ebdi fntry is b {@dodf List} wiosf first fntry is bn
     * {@dodf Intfgfr} (tif nbmf typf, 0-8) bnd wiosf sfdond
     * fntry is b {@dodf String} or b bytf brrby (tif nbmf, in
     * string or ASN.1 DER fndodfd form, rfspfdtivfly).
     * Tifrf dbn bf multiplf nbmfs of tif sbmf typf. If {@dodf null}
     * is supplifd bs tif vbluf for tiis brgumfnt, no
     * subjfdtAltfrnbtivfNbmfs difdk will bf pfrformfd.
     * <p>
     * Ebdi subjfdt bltfrnbtivf nbmf in tif {@dodf Collfdtion}
     * mby bf spfdififd fitifr bs b {@dodf String} or bs bn ASN.1 fndodfd
     * bytf brrby. For morf dftbils bbout tif formbts usfd, sff
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, String nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, String nbmf)} bnd
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)}.
     * <p>
     * <strong>Notf:</strong> for distinguisifd nbmfs, spfdify tif bytf
     * brrby form instfbd of tif String form. Sff tif notf in
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int, String)} for morf informbtion.
     * <p>
     * Notf tibt tif {@dodf nbmfs} pbrbmftfr dbn dontbin duplidbtf
     * nbmfs (sbmf nbmf bnd nbmf typf), but tify mby bf rfmovfd from tif
     * {@dodf Collfdtion} of nbmfs rfturnfd by tif
     * {@link #gftSubjfdtAltfrnbtivfNbmfs gftSubjfdtAltfrnbtivfNbmfs} mftiod.
     * <p>
     * Notf tibt b dffp dopy is pfrformfd on tif {@dodf Collfdtion} to
     * protfdt bgbinst subsfqufnt modifidbtions.
     *
     * @pbrbm nbmfs b {@dodf Collfdtion} of nbmfs (or {@dodf null})
     * @tirows IOExdfption if b pbrsing frror oddurs
     * @sff #gftSubjfdtAltfrnbtivfNbmfs
     */
    publid void sftSubjfdtAltfrnbtivfNbmfs(Collfdtion<List<?>> nbmfs)
            tirows IOExdfption {
        if (nbmfs == null) {
            subjfdtAltfrnbtivfNbmfs = null;
            subjfdtAltfrnbtivfGfnfrblNbmfs = null;
        } flsf {
            if (nbmfs.isEmpty()) {
                subjfdtAltfrnbtivfNbmfs = null;
                subjfdtAltfrnbtivfGfnfrblNbmfs = null;
                rfturn;
            }
            Sft<List<?>> tfmpNbmfs = dlonfAndCifdkNbmfs(nbmfs);
            // Ensurf tibt wf fitifr sft boti of tifsf or nfitifr
            subjfdtAltfrnbtivfGfnfrblNbmfs = pbrsfNbmfs(tfmpNbmfs);
            subjfdtAltfrnbtivfNbmfs = tfmpNbmfs;
        }
    }

    /**
     * Adds b nbmf to tif subjfdtAltfrnbtivfNbmfs dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin bll or bt lfbst onf
     * of tif spfdififd subjfdtAltfrnbtivfNbmfs, dfpfnding on tif vbluf of
     * tif mbtdiAllNbmfs flbg (sff {@link #sftMbtdiAllSubjfdtAltNbmfs
     * sftMbtdiAllSubjfdtAltNbmfs}).
     * <p>
     * Tiis mftiod bllows tif dbllfr to bdd b nbmf to tif sft of subjfdt
     * bltfrnbtivf nbmfs.
     * Tif spfdififd nbmf is bddfd to bny prfvious vbluf for tif
     * subjfdtAltfrnbtivfNbmfs dritfrion. If tif spfdififd nbmf is b
     * duplidbtf, it mby bf ignorfd.
     * <p>
     * Tif nbmf is providfd in string formbt.
     * <b irff="ittp://www.iftf.org/rfd/rfd822.txt">RFC 822</b>, DNS, bnd URI
     * nbmfs usf tif wfll-fstbblisifd string formbts for tiosf typfs (subjfdt to
     * tif rfstridtions indludfd in RFC 3280). IPv4 bddrfss nbmfs brf
     * supplifd using dottfd qubd notbtion. OID bddrfss nbmfs brf rfprfsfntfd
     * bs b sfrifs of nonnfgbtivf intfgfrs sfpbrbtfd by pfriods. And
     * dirfdtory nbmfs (distinguisifd nbmfs) brf supplifd in RFC 2253 formbt.
     * No stbndbrd string formbt is dffinfd for otifrNbmfs, X.400 nbmfs,
     * EDI pbrty nbmfs, IPv6 bddrfss nbmfs, or bny otifr typf of nbmfs. Tify
     * siould bf spfdififd using tif
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)}
     * mftiod.
     * <p>
     * <strong>Notf:</strong> for distinguisifd nbmfs, usf
     * {@linkplbin #bddSubjfdtAltfrnbtivfNbmf(int, bytf[])} instfbd.
     * Tiis mftiod siould not bf rflifd on bs it dbn fbil to mbtdi somf
     * dfrtifidbtfs bfdbusf of b loss of fndoding informbtion in tif RFC 2253
     * String form of somf distinguisifd nbmfs.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs spfdififd in
     *             RFC 3280, sfdtion 4.2.1.7)
     * @pbrbm nbmf tif nbmf in string form (not {@dodf null})
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    publid void bddSubjfdtAltfrnbtivfNbmf(int typf, String nbmf)
            tirows IOExdfption {
        bddSubjfdtAltfrnbtivfNbmfIntfrnbl(typf, nbmf);
    }

    /**
     * Adds b nbmf to tif subjfdtAltfrnbtivfNbmfs dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin bll or bt lfbst onf
     * of tif spfdififd subjfdtAltfrnbtivfNbmfs, dfpfnding on tif vbluf of
     * tif mbtdiAllNbmfs flbg (sff {@link #sftMbtdiAllSubjfdtAltNbmfs
     * sftMbtdiAllSubjfdtAltNbmfs}).
     * <p>
     * Tiis mftiod bllows tif dbllfr to bdd b nbmf to tif sft of subjfdt
     * bltfrnbtivf nbmfs.
     * Tif spfdififd nbmf is bddfd to bny prfvious vbluf for tif
     * subjfdtAltfrnbtivfNbmfs dritfrion. If tif spfdififd nbmf is b
     * duplidbtf, it mby bf ignorfd.
     * <p>
     * Tif nbmf is providfd bs b bytf brrby. Tiis bytf brrby siould dontbin
     * tif DER fndodfd nbmf, bs it would bppfbr in tif GfnfrblNbmf strudturf
     * dffinfd in RFC 3280 bnd X.509. Tif fndodfd bytf brrby siould only dontbin
     * tif fndodfd vbluf of tif nbmf, bnd siould not indludf tif tbg bssodibtfd
     * witi tif nbmf in tif GfnfrblNbmf strudturf. Tif ASN.1 dffinition of tiis
     * strudturf bppfbrs bflow.
     * <prf>{@dodf
     *  GfnfrblNbmf ::= CHOICE {
     *       otifrNbmf                       [0]     OtifrNbmf,
     *       rfd822Nbmf                      [1]     IA5String,
     *       dNSNbmf                         [2]     IA5String,
     *       x400Addrfss                     [3]     ORAddrfss,
     *       dirfdtoryNbmf                   [4]     Nbmf,
     *       fdiPbrtyNbmf                    [5]     EDIPbrtyNbmf,
     *       uniformRfsourdfIdfntififr       [6]     IA5String,
     *       iPAddrfss                       [7]     OCTET STRING,
     *       rfgistfrfdID                    [8]     OBJECT IDENTIFIER}
     * }</prf>
     * <p>
     * Notf tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs listfd bbovf)
     * @pbrbm nbmf b bytf brrby dontbining tif nbmf in ASN.1 DER fndodfd form
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    publid void bddSubjfdtAltfrnbtivfNbmf(int typf, bytf[] nbmf)
            tirows IOExdfption {
        // dlonf bfdbusf bytf brrbys brf modifibblf
        bddSubjfdtAltfrnbtivfNbmfIntfrnbl(typf, nbmf.dlonf());
    }

    /**
     * A privbtf mftiod tibt bdds b nbmf (String or bytf brrby) to tif
     * subjfdtAltfrnbtivfNbmfs dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must dontbin tif spfdififd subjfdtAltfrnbtivfNbmf.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs spfdififd in
     *             RFC 3280, sfdtion 4.2.1.7)
     * @pbrbm nbmf tif nbmf in string or bytf brrby form
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    privbtf void bddSubjfdtAltfrnbtivfNbmfIntfrnbl(int typf, Objfdt nbmf)
            tirows IOExdfption {
        // First, fnsurf tibt tif nbmf pbrsfs
        GfnfrblNbmfIntfrfbdf tfmpNbmf = mbkfGfnfrblNbmfIntfrfbdf(typf, nbmf);
        if (subjfdtAltfrnbtivfNbmfs == null) {
            subjfdtAltfrnbtivfNbmfs = nfw HbsiSft<List<?>>();
        }
        if (subjfdtAltfrnbtivfGfnfrblNbmfs == null) {
            subjfdtAltfrnbtivfGfnfrblNbmfs = nfw HbsiSft<GfnfrblNbmfIntfrfbdf>();
        }
        List<Objfdt> list = nfw ArrbyList<Objfdt>(2);
        list.bdd(Intfgfr.vblufOf(typf));
        list.bdd(nbmf);
        subjfdtAltfrnbtivfNbmfs.bdd(list);
        subjfdtAltfrnbtivfGfnfrblNbmfs.bdd(tfmpNbmf);
    }

    /**
     * Pbrsf bn brgumfnt of tif form pbssfd to sftSubjfdtAltfrnbtivfNbmfs,
     * rfturning b {@dodf Collfdtion} of
     * {@dodf GfnfrblNbmfIntfrfbdf}s.
     * Tirow bn IllfgblArgumfntExdfption or b ClbssCbstExdfption
     * if tif brgumfnt is mblformfd.
     *
     * @pbrbm nbmfs b Collfdtion witi onf fntry pfr nbmf.
     *              Ebdi fntry is b {@dodf List} wiosf first fntry
     *              is bn Intfgfr (tif nbmf typf, 0-8) bnd wiosf sfdond
     *              fntry is b String or b bytf brrby (tif nbmf, in
     *              string or ASN.1 DER fndodfd form, rfspfdtivfly).
     *              Tifrf dbn bf multiplf nbmfs of tif sbmf typf. Null is
     *              not bn bddfptbblf vbluf.
     * @rfturn b Sft of {@dodf GfnfrblNbmfIntfrfbdf}s
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    privbtf stbtid Sft<GfnfrblNbmfIntfrfbdf> pbrsfNbmfs(Collfdtion<List<?>> nbmfs) tirows IOExdfption {
        Sft<GfnfrblNbmfIntfrfbdf> gfnNbmfs = nfw HbsiSft<GfnfrblNbmfIntfrfbdf>();
        for (List<?> nbmfList : nbmfs) {
            if (nbmfList.sizf() != 2) {
                tirow nfw IOExdfption("nbmf list sizf not 2");
            }
            Objfdt o =  nbmfList.gft(0);
            if (!(o instbndfof Intfgfr)) {
                tirow nfw IOExdfption("fxpfdtfd bn Intfgfr");
            }
            int nbmfTypf = ((Intfgfr)o).intVbluf();
            o = nbmfList.gft(1);
            gfnNbmfs.bdd(mbkfGfnfrblNbmfIntfrfbdf(nbmfTypf, o));
        }

        rfturn gfnNbmfs;
    }

    /**
     * Compbrf for fqublity two objfdts of tif form pbssfd to
     * sftSubjfdtAltfrnbtivfNbmfs (or X509CRLSflfdtor.sftIssufrNbmfs).
     * Tirow bn {@dodf IllfgblArgumfntExdfption} or b
     * {@dodf ClbssCbstExdfption} if onf of tif objfdts is mblformfd.
     *
     * @pbrbm objfdt1 b Collfdtion dontbining tif first objfdt to dompbrf
     * @pbrbm objfdt2 b Collfdtion dontbining tif sfdond objfdt to dompbrf
     * @rfturn truf if tif objfdts brf fqubl, fblsf otifrwisf
     */
    stbtid boolfbn fqublNbmfs(Collfdtion<?> objfdt1, Collfdtion<?> objfdt2) {
        if ((objfdt1 == null) || (objfdt2 == null)) {
            rfturn objfdt1 == objfdt2;
        }
        rfturn objfdt1.fqubls(objfdt2);
    }

    /**
     * Mbkf b {@dodf GfnfrblNbmfIntfrfbdf} out of b nbmf typf (0-8) bnd bn
     * Objfdt tibt mby bf b bytf brrby iolding tif ASN.1 DER fndodfd
     * nbmf or b String form of tif nbmf.  Exdfpt for X.509
     * Distinguisifd Nbmfs, tif String form of tif nbmf must not bf tif
     * rfsult from dblling toString on bn fxisting GfnfrblNbmfIntfrfbdf
     * implfmfnting dlbss.  Tif output of toString is not dompbtiblf
     * witi tif String donstrudtors for nbmfs otifr tibn Distinguisifd
     * Nbmfs.
     *
     * @pbrbm typf nbmf typf (0-8)
     * @pbrbm nbmf nbmf bs ASN.1 Dfr-fndodfd bytf brrby or String
     * @rfturn b GfnfrblNbmfIntfrfbdf nbmf
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    stbtid GfnfrblNbmfIntfrfbdf mbkfGfnfrblNbmfIntfrfbdf(int typf, Objfdt nbmf)
            tirows IOExdfption {
        GfnfrblNbmfIntfrfbdf rfsult;
        if (dfbug != null) {
            dfbug.println("X509CfrtSflfdtor.mbkfGfnfrblNbmfIntfrfbdf("
                + typf + ")...");
        }

        if (nbmf instbndfof String) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbkfGfnfrblNbmfIntfrfbdf() "
                    + "nbmf is String: " + nbmf);
            }
            switdi (typf) {
            dbsf NAME_RFC822:
                rfsult = nfw RFC822Nbmf((String)nbmf);
                brfbk;
            dbsf NAME_DNS:
                rfsult = nfw DNSNbmf((String)nbmf);
                brfbk;
            dbsf NAME_DIRECTORY:
                rfsult = nfw X500Nbmf((String)nbmf);
                brfbk;
            dbsf NAME_URI:
                rfsult = nfw URINbmf((String)nbmf);
                brfbk;
            dbsf NAME_IP:
                rfsult = nfw IPAddrfssNbmf((String)nbmf);
                brfbk;
            dbsf NAME_OID:
                rfsult = nfw OIDNbmf((String)nbmf);
                brfbk;
            dffbult:
                tirow nfw IOExdfption("unbblf to pbrsf String nbmfs of typf "
                                      + typf);
            }
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbkfGfnfrblNbmfIntfrfbdf() "
                    + "rfsult: " + rfsult.toString());
            }
        } flsf if (nbmf instbndfof bytf[]) {
            DfrVbluf vbl = nfw DfrVbluf((bytf[]) nbmf);
            if (dfbug != null) {
                dfbug.println
                    ("X509CfrtSflfdtor.mbkfGfnfrblNbmfIntfrfbdf() is bytf[]");
            }

            switdi (typf) {
            dbsf NAME_ANY:
                rfsult = nfw OtifrNbmf(vbl);
                brfbk;
            dbsf NAME_RFC822:
                rfsult = nfw RFC822Nbmf(vbl);
                brfbk;
            dbsf NAME_DNS:
                rfsult = nfw DNSNbmf(vbl);
                brfbk;
            dbsf NAME_X400:
                rfsult = nfw X400Addrfss(vbl);
                brfbk;
            dbsf NAME_DIRECTORY:
                rfsult = nfw X500Nbmf(vbl);
                brfbk;
            dbsf NAME_EDI:
                rfsult = nfw EDIPbrtyNbmf(vbl);
                brfbk;
            dbsf NAME_URI:
                rfsult = nfw URINbmf(vbl);
                brfbk;
            dbsf NAME_IP:
                rfsult = nfw IPAddrfssNbmf(vbl);
                brfbk;
            dbsf NAME_OID:
                rfsult = nfw OIDNbmf(vbl);
                brfbk;
            dffbult:
                tirow nfw IOExdfption("unbblf to pbrsf bytf brrby nbmfs of "
                    + "typf " + typf);
            }
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbkfGfnfrblNbmfIntfrfbdf() rfsult: "
                    + rfsult.toString());
            }
        } flsf {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbkfGfnfrblNbmf() input nbmf "
                    + "not String or bytf brrby");
            }
            tirow nfw IOExdfption("nbmf not String or bytf brrby");
        }
        rfturn rfsult;
    }


    /**
     * Sfts tif nbmf donstrbints dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must ibvf subjfdt bnd subjfdt bltfrnbtivf nbmfs tibt
     * mfft tif spfdififd nbmf donstrbints.
     * <p>
     * Tif nbmf donstrbints brf spfdififd bs b bytf brrby. Tiis bytf brrby
     * siould dontbin tif DER fndodfd form of tif nbmf donstrbints, bs tify
     * would bppfbr in tif NbmfConstrbints strudturf dffinfd in RFC 3280
     * bnd X.509. Tif ASN.1 dffinition of tiis strudturf bppfbrs bflow.
     *
     * <prf>{@dodf
     *  NbmfConstrbints ::= SEQUENCE {
     *       pfrmittfdSubtrffs       [0]     GfnfrblSubtrffs OPTIONAL,
     *       fxdludfdSubtrffs        [1]     GfnfrblSubtrffs OPTIONAL }
     *
     *  GfnfrblSubtrffs ::= SEQUENCE SIZE (1..MAX) OF GfnfrblSubtrff
     *
     *  GfnfrblSubtrff ::= SEQUENCE {
     *       bbsf                    GfnfrblNbmf,
     *       minimum         [0]     BbsfDistbndf DEFAULT 0,
     *       mbximum         [1]     BbsfDistbndf OPTIONAL }
     *
     *  BbsfDistbndf ::= INTEGER (0..MAX)
     *
     *  GfnfrblNbmf ::= CHOICE {
     *       otifrNbmf                       [0]     OtifrNbmf,
     *       rfd822Nbmf                      [1]     IA5String,
     *       dNSNbmf                         [2]     IA5String,
     *       x400Addrfss                     [3]     ORAddrfss,
     *       dirfdtoryNbmf                   [4]     Nbmf,
     *       fdiPbrtyNbmf                    [5]     EDIPbrtyNbmf,
     *       uniformRfsourdfIdfntififr       [6]     IA5String,
     *       iPAddrfss                       [7]     OCTET STRING,
     *       rfgistfrfdID                    [8]     OBJECT IDENTIFIER}
     * }</prf>
     * <p>
     * Notf tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm bytfs b bytf brrby dontbining tif ASN.1 DER fndoding of
     *              b NbmfConstrbints fxtfnsion to bf usfd for difdking
     *              nbmf donstrbints. Only tif vbluf of tif fxtfnsion is
     *              indludfd, not tif OID or dritidblity flbg. Cbn bf
     *              {@dodf null},
     *              in wiidi dbsf no nbmf donstrbints difdk will bf pfrformfd.
     * @tirows IOExdfption if b pbrsing frror oddurs
     * @sff #gftNbmfConstrbints
     */
    publid void sftNbmfConstrbints(bytf[] bytfs) tirows IOExdfption {
        if (bytfs == null) {
            ndBytfs = null;
            nd = null;
        } flsf {
            ndBytfs = bytfs.dlonf();
            nd = nfw NbmfConstrbintsExtfnsion(FALSE, bytfs);
        }
    }

    /**
     * Sfts tif bbsid donstrbints donstrbint. If tif vbluf is grfbtfr tibn or
     * fqubl to zfro, {@dodf X509Cfrtifidbtfs} must indludf b
     * bbsidConstrbints fxtfnsion witi
     * b pbtiLfn of bt lfbst tiis vbluf. If tif vbluf is -2, only fnd-fntity
     * dfrtifidbtfs brf bddfptfd. If tif vbluf is -1, no difdk is donf.
     * <p>
     * Tiis donstrbint is usfful wifn building b dfrtifidbtion pbti forwbrd
     * (from tif tbrgft towbrd tif trust bndior. If b pbrtibl pbti ibs bffn
     * built, bny dbndidbtf dfrtifidbtf must ibvf b mbxPbtiLfn vbluf grfbtfr
     * tibn or fqubl to tif numbfr of dfrtifidbtfs in tif pbrtibl pbti.
     *
     * @pbrbm minMbxPbtiLfn tif vbluf for tif bbsid donstrbints donstrbint
     * @tirows IllfgblArgumfntExdfption if tif vbluf is lfss tibn -2
     * @sff #gftBbsidConstrbints
     */
    publid void sftBbsidConstrbints(int minMbxPbtiLfn) {
        if (minMbxPbtiLfn < -2) {
            tirow nfw IllfgblArgumfntExdfption("bbsid donstrbints lfss tibn -2");
        }
        bbsidConstrbints = minMbxPbtiLfn;
    }

    /**
     * Sfts tif polidy donstrbint. Tif {@dodf X509Cfrtifidbtf} must
     * indludf bt lfbst onf of tif spfdififd polidifs in its dfrtifidbtf
     * polidifs fxtfnsion. If {@dodf dfrtPolidySft} is fmpty, tifn tif
     * {@dodf X509Cfrtifidbtf} must indludf bt lfbst somf spfdififd polidy
     * in its dfrtifidbtf polidifs fxtfnsion. If {@dodf dfrtPolidySft} is
     * {@dodf null}, no polidy difdk will bf pfrformfd.
     * <p>
     * Notf tibt tif {@dodf Sft} is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm dfrtPolidySft b {@dodf Sft} of dfrtifidbtf polidy OIDs in
     *                      string formbt (or {@dodf null}). Ebdi OID is
     *                      rfprfsfntfd by b sft of nonnfgbtivf intfgfrs
     *                    sfpbrbtfd by pfriods.
     * @tirows IOExdfption if b pbrsing frror oddurs on tif OID sudi bs
     * tif first domponfnt is not 0, 1 or 2 or tif sfdond domponfnt is
     * grfbtfr tibn 39.
     * @sff #gftPolidy
     */
    publid void sftPolidy(Sft<String> dfrtPolidySft) tirows IOExdfption {
        if (dfrtPolidySft == null) {
            polidySft = null;
            polidy = null;
        } flsf {
            // Snbpsiot sft bnd pbrsf it
            Sft<String> tfmpSft = Collfdtions.unmodifibblfSft
                                        (nfw HbsiSft<String>(dfrtPolidySft));
            /* Convfrt to Vfdtor of ObjfdtIdfntififrs */
            Itfrbtor<String> i = tfmpSft.itfrbtor();
            Vfdtor<CfrtifidbtfPolidyId> polIdVfdtor = nfw Vfdtor<CfrtifidbtfPolidyId>();
            wiilf (i.ibsNfxt()) {
                Objfdt o = i.nfxt();
                if (!(o instbndfof String)) {
                    tirow nfw IOExdfption("non String in dfrtPolidySft");
                }
                polIdVfdtor.bdd(nfw CfrtifidbtfPolidyId(nfw ObjfdtIdfntififr(
                  (String)o)));
            }
            // If fvfrytiing wfnt OK, mbkf tif dibngfs
            polidySft = tfmpSft;
            polidy = nfw CfrtifidbtfPolidySft(polIdVfdtor);
        }
    }

    /**
     * Sfts tif pbtiToNbmfs dritfrion. Tif {@dodf X509Cfrtifidbtf} must
     * not indludf nbmf donstrbints tibt would proiibit building b
     * pbti to tif spfdififd nbmfs.
     * <p>
     * Tiis mftiod bllows tif dbllfr to spfdify, witi b singlf mftiod dbll,
     * tif domplftf sft of nbmfs wiidi tif {@dodf X509Cfrtifidbtfs}'s
     * nbmf donstrbints must pfrmit. Tif spfdififd vbluf rfplbdfs
     * tif prfvious vbluf for tif pbtiToNbmfs dritfrion.
     * <p>
     * Tiis donstrbint is usfful wifn building b dfrtifidbtion pbti forwbrd
     * (from tif tbrgft towbrd tif trust bndior. If b pbrtibl pbti ibs bffn
     * built, bny dbndidbtf dfrtifidbtf must not indludf nbmf donstrbints tibt
     * would proiibit building b pbti to bny of tif nbmfs in tif pbrtibl pbti.
     * <p>
     * Tif {@dodf nbmfs} pbrbmftfr (if not {@dodf null}) is b
     * {@dodf Collfdtion} witi onf
     * fntry for fbdi nbmf to bf indludfd in tif pbtiToNbmfs
     * dritfrion. Ebdi fntry is b {@dodf List} wiosf first fntry is bn
     * {@dodf Intfgfr} (tif nbmf typf, 0-8) bnd wiosf sfdond
     * fntry is b {@dodf String} or b bytf brrby (tif nbmf, in
     * string or ASN.1 DER fndodfd form, rfspfdtivfly).
     * Tifrf dbn bf multiplf nbmfs of tif sbmf typf. If {@dodf null}
     * is supplifd bs tif vbluf for tiis brgumfnt, no
     * pbtiToNbmfs difdk will bf pfrformfd.
     * <p>
     * Ebdi nbmf in tif {@dodf Collfdtion}
     * mby bf spfdififd fitifr bs b {@dodf String} or bs bn ASN.1 fndodfd
     * bytf brrby. For morf dftbils bbout tif formbts usfd, sff
     * {@link #bddPbtiToNbmf(int typf, String nbmf)
     * bddPbtiToNbmf(int typf, String nbmf)} bnd
     * {@link #bddPbtiToNbmf(int typf, bytf [] nbmf)
     * bddPbtiToNbmf(int typf, bytf [] nbmf)}.
     * <p>
     * <strong>Notf:</strong> for distinguisifd nbmfs, spfdify tif bytf
     * brrby form instfbd of tif String form. Sff tif notf in
     * {@link #bddPbtiToNbmf(int, String)} for morf informbtion.
     * <p>
     * Notf tibt tif {@dodf nbmfs} pbrbmftfr dbn dontbin duplidbtf
     * nbmfs (sbmf nbmf bnd nbmf typf), but tify mby bf rfmovfd from tif
     * {@dodf Collfdtion} of nbmfs rfturnfd by tif
     * {@link #gftPbtiToNbmfs gftPbtiToNbmfs} mftiod.
     * <p>
     * Notf tibt b dffp dopy is pfrformfd on tif {@dodf Collfdtion} to
     * protfdt bgbinst subsfqufnt modifidbtions.
     *
     * @pbrbm nbmfs b {@dodf Collfdtion} witi onf fntry pfr nbmf
     *              (or {@dodf null})
     * @tirows IOExdfption if b pbrsing frror oddurs
     * @sff #gftPbtiToNbmfs
     */
    publid void sftPbtiToNbmfs(Collfdtion<List<?>> nbmfs) tirows IOExdfption {
        if ((nbmfs == null) || nbmfs.isEmpty()) {
            pbtiToNbmfs = null;
            pbtiToGfnfrblNbmfs = null;
        } flsf {
            Sft<List<?>> tfmpNbmfs = dlonfAndCifdkNbmfs(nbmfs);
            pbtiToGfnfrblNbmfs = pbrsfNbmfs(tfmpNbmfs);
            // Ensurf tibt wf fitifr sft boti of tifsf or nfitifr
            pbtiToNbmfs = tfmpNbmfs;
        }
    }

    // dbllfd from CfrtPbtiHflpfr
    void sftPbtiToNbmfsIntfrnbl(Sft<GfnfrblNbmfIntfrfbdf> nbmfs) {
        // sft nbmfs to non-null dummy vbluf
        // tiis brfbks gftPbtiToNbmfs()
        pbtiToNbmfs = Collfdtions.<List<?>>fmptySft();
        pbtiToGfnfrblNbmfs = nbmfs;
    }

    /**
     * Adds b nbmf to tif pbtiToNbmfs dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must not indludf nbmf donstrbints tibt would proiibit building b
     * pbti to tif spfdififd nbmf.
     * <p>
     * Tiis mftiod bllows tif dbllfr to bdd b nbmf to tif sft of nbmfs wiidi
     * tif {@dodf X509Cfrtifidbtfs}'s nbmf donstrbints must pfrmit.
     * Tif spfdififd nbmf is bddfd to bny prfvious vbluf for tif
     * pbtiToNbmfs dritfrion.  If tif nbmf is b duplidbtf, it mby bf ignorfd.
     * <p>
     * Tif nbmf is providfd in string formbt. RFC 822, DNS, bnd URI nbmfs
     * usf tif wfll-fstbblisifd string formbts for tiosf typfs (subjfdt to
     * tif rfstridtions indludfd in RFC 3280). IPv4 bddrfss nbmfs brf
     * supplifd using dottfd qubd notbtion. OID bddrfss nbmfs brf rfprfsfntfd
     * bs b sfrifs of nonnfgbtivf intfgfrs sfpbrbtfd by pfriods. And
     * dirfdtory nbmfs (distinguisifd nbmfs) brf supplifd in RFC 2253 formbt.
     * No stbndbrd string formbt is dffinfd for otifrNbmfs, X.400 nbmfs,
     * EDI pbrty nbmfs, IPv6 bddrfss nbmfs, or bny otifr typf of nbmfs. Tify
     * siould bf spfdififd using tif
     * {@link #bddPbtiToNbmf(int typf, bytf [] nbmf)
     * bddPbtiToNbmf(int typf, bytf [] nbmf)} mftiod.
     * <p>
     * <strong>Notf:</strong> for distinguisifd nbmfs, usf
     * {@linkplbin #bddPbtiToNbmf(int, bytf[])} instfbd.
     * Tiis mftiod siould not bf rflifd on bs it dbn fbil to mbtdi somf
     * dfrtifidbtfs bfdbusf of b loss of fndoding informbtion in tif RFC 2253
     * String form of somf distinguisifd nbmfs.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs spfdififd in
     *             RFC 3280, sfdtion 4.2.1.7)
     * @pbrbm nbmf tif nbmf in string form
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    publid void bddPbtiToNbmf(int typf, String nbmf) tirows IOExdfption {
        bddPbtiToNbmfIntfrnbl(typf, nbmf);
    }

    /**
     * Adds b nbmf to tif pbtiToNbmfs dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must not indludf nbmf donstrbints tibt would proiibit building b
     * pbti to tif spfdififd nbmf.
     * <p>
     * Tiis mftiod bllows tif dbllfr to bdd b nbmf to tif sft of nbmfs wiidi
     * tif {@dodf X509Cfrtifidbtfs}'s nbmf donstrbints must pfrmit.
     * Tif spfdififd nbmf is bddfd to bny prfvious vbluf for tif
     * pbtiToNbmfs dritfrion. If tif nbmf is b duplidbtf, it mby bf ignorfd.
     * <p>
     * Tif nbmf is providfd bs b bytf brrby. Tiis bytf brrby siould dontbin
     * tif DER fndodfd nbmf, bs it would bppfbr in tif GfnfrblNbmf strudturf
     * dffinfd in RFC 3280 bnd X.509. Tif ASN.1 dffinition of tiis strudturf
     * bppfbrs in tif dodumfntbtion for
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)}.
     * <p>
     * Notf tibt tif bytf brrby supplifd ifrf is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs spfdififd in
     *             RFC 3280, sfdtion 4.2.1.7)
     * @pbrbm nbmf b bytf brrby dontbining tif nbmf in ASN.1 DER fndodfd form
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    publid void bddPbtiToNbmf(int typf, bytf [] nbmf) tirows IOExdfption {
        // dlonf bfdbusf bytf brrbys brf modifibblf
        bddPbtiToNbmfIntfrnbl(typf, nbmf.dlonf());
    }

    /**
     * A privbtf mftiod tibt bdds b nbmf (String or bytf brrby) to tif
     * pbtiToNbmfs dritfrion. Tif {@dodf X509Cfrtifidbtf} must dontbin
     * tif spfdififd pbtiToNbmf.
     *
     * @pbrbm typf tif nbmf typf (0-8, bs spfdififd in
     *             RFC 3280, sfdtion 4.2.1.7)
     * @pbrbm nbmf tif nbmf in string or bytf brrby form
     * @tirows IOExdfption if bn fndoding frror oddurs (indorrfdt form for DN)
     */
    privbtf void bddPbtiToNbmfIntfrnbl(int typf, Objfdt nbmf)
            tirows IOExdfption {
        // First, fnsurf tibt tif nbmf pbrsfs
        GfnfrblNbmfIntfrfbdf tfmpNbmf = mbkfGfnfrblNbmfIntfrfbdf(typf, nbmf);
        if (pbtiToGfnfrblNbmfs == null) {
            pbtiToNbmfs = nfw HbsiSft<List<?>>();
            pbtiToGfnfrblNbmfs = nfw HbsiSft<GfnfrblNbmfIntfrfbdf>();
        }
        List<Objfdt> list = nfw ArrbyList<Objfdt>(2);
        list.bdd(Intfgfr.vblufOf(typf));
        list.bdd(nbmf);
        pbtiToNbmfs.bdd(list);
        pbtiToGfnfrblNbmfs.bdd(tfmpNbmf);
    }

    /**
     * Rfturns tif dfrtifidbtfEqubls dritfrion. Tif spfdififd
     * {@dodf X509Cfrtifidbtf} must bf fqubl to tif
     * {@dodf X509Cfrtifidbtf} pbssfd to tif {@dodf mbtdi} mftiod.
     * If {@dodf null}, tiis difdk is not bpplifd.
     *
     * @rfturn tif {@dodf X509Cfrtifidbtf} to mbtdi (or {@dodf null})
     * @sff #sftCfrtifidbtf
     */
    publid X509Cfrtifidbtf gftCfrtifidbtf() {
        rfturn x509Cfrt;
    }

    /**
     * Rfturns tif sfriblNumbfr dritfrion. Tif spfdififd sfribl numbfr
     * must mbtdi tif dfrtifidbtf sfribl numbfr in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, bny dfrtifidbtf
     * sfribl numbfr will do.
     *
     * @rfturn tif dfrtifidbtf sfribl numbfr to mbtdi
     *                (or {@dodf null})
     * @sff #sftSfriblNumbfr
     */
    publid BigIntfgfr gftSfriblNumbfr() {
        rfturn sfriblNumbfr;
    }

    /**
     * Rfturns tif issufr dritfrion bs bn {@dodf X500Prindipbl}. Tiis
     * distinguisifd nbmf must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif issufr dritfrion
     * is disbblfd bnd bny issufr distinguisifd nbmf will do.
     *
     * @rfturn tif rfquirfd issufr distinguisifd nbmf bs X500Prindipbl
     *         (or {@dodf null})
     * @sindf 1.5
     */
    publid X500Prindipbl gftIssufr() {
        rfturn issufr;
    }

    /**
     * <strong>Dfnigrbtfd</strong>, usf {@linkplbin #gftIssufr()} or
     * {@linkplbin #gftIssufrAsBytfs()} instfbd. Tiis mftiod siould not bf
     * rflifd on bs it dbn fbil to mbtdi somf dfrtifidbtfs bfdbusf of b loss of
     * fndoding informbtion in tif RFC 2253 String form of somf distinguisifd
     * nbmfs.
     * <p>
     * Rfturns tif issufr dritfrion bs b {@dodf String}. Tiis
     * distinguisifd nbmf must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif issufr dritfrion
     * is disbblfd bnd bny issufr distinguisifd nbmf will do.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b
     * distinguisifd nbmf, in RFC 2253 formbt.
     *
     * @rfturn tif rfquirfd issufr distinguisifd nbmf in RFC 2253 formbt
     *         (or {@dodf null})
     */
    publid String gftIssufrAsString() {
        rfturn (issufr == null ? null : issufr.gftNbmf());
    }

    /**
     * Rfturns tif issufr dritfrion bs b bytf brrby. Tiis distinguisifd nbmf
     * must mbtdi tif issufr distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif issufr dritfrion
     * is disbblfd bnd bny issufr distinguisifd nbmf will do.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b bytf
     * brrby dontbining b singlf DER fndodfd distinguisifd nbmf, bs dffinfd in
     * X.501. Tif ASN.1 notbtion for tiis strudturf is supplifd in tif
     * dodumfntbtion for
     * {@link #sftIssufr(bytf [] issufrDN) sftIssufr(bytf [] issufrDN)}.
     * <p>
     * Notf tibt tif bytf brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn b bytf brrby dontbining tif rfquirfd issufr distinguisifd nbmf
     *         in ASN.1 DER formbt (or {@dodf null})
     * @tirows IOExdfption if bn fndoding frror oddurs
     */
    publid bytf[] gftIssufrAsBytfs() tirows IOExdfption {
        rfturn (issufr == null ? null: issufr.gftEndodfd());
    }

    /**
     * Rfturns tif subjfdt dritfrion bs bn {@dodf X500Prindipbl}. Tiis
     * distinguisifd nbmf must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif subjfdt dritfrion
     * is disbblfd bnd bny subjfdt distinguisifd nbmf will do.
     *
     * @rfturn tif rfquirfd subjfdt distinguisifd nbmf bs X500Prindipbl
     *         (or {@dodf null})
     * @sindf 1.5
     */
    publid X500Prindipbl gftSubjfdt() {
        rfturn subjfdt;
    }

    /**
     * <strong>Dfnigrbtfd</strong>, usf {@linkplbin #gftSubjfdt()} or
     * {@linkplbin #gftSubjfdtAsBytfs()} instfbd. Tiis mftiod siould not bf
     * rflifd on bs it dbn fbil to mbtdi somf dfrtifidbtfs bfdbusf of b loss of
     * fndoding informbtion in tif RFC 2253 String form of somf distinguisifd
     * nbmfs.
     * <p>
     * Rfturns tif subjfdt dritfrion bs b {@dodf String}. Tiis
     * distinguisifd nbmf must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif subjfdt dritfrion
     * is disbblfd bnd bny subjfdt distinguisifd nbmf will do.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b
     * distinguisifd nbmf, in RFC 2253 formbt.
     *
     * @rfturn tif rfquirfd subjfdt distinguisifd nbmf in RFC 2253 formbt
     *         (or {@dodf null})
     */
    publid String gftSubjfdtAsString() {
        rfturn (subjfdt == null ? null : subjfdt.gftNbmf());
    }

    /**
     * Rfturns tif subjfdt dritfrion bs b bytf brrby. Tiis distinguisifd nbmf
     * must mbtdi tif subjfdt distinguisifd nbmf in tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, tif subjfdt dritfrion
     * is disbblfd bnd bny subjfdt distinguisifd nbmf will do.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b bytf
     * brrby dontbining b singlf DER fndodfd distinguisifd nbmf, bs dffinfd in
     * X.501. Tif ASN.1 notbtion for tiis strudturf is supplifd in tif
     * dodumfntbtion for
     * {@link #sftSubjfdt(bytf [] subjfdtDN) sftSubjfdt(bytf [] subjfdtDN)}.
     * <p>
     * Notf tibt tif bytf brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn b bytf brrby dontbining tif rfquirfd subjfdt distinguisifd nbmf
     *         in ASN.1 DER formbt (or {@dodf null})
     * @tirows IOExdfption if bn fndoding frror oddurs
     */
    publid bytf[] gftSubjfdtAsBytfs() tirows IOExdfption {
        rfturn (subjfdt == null ? null : subjfdt.gftEndodfd());
    }

    /**
     * Rfturns tif subjfdtKfyIdfntififr dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin b SubjfdtKfyIdfntififr
     * fxtfnsion witi tif spfdififd vbluf. If {@dodf null}, no
     * subjfdtKfyIdfntififr difdk will bf donf.
     * <p>
     * Notf tibt tif bytf brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn tif kfy idfntififr (or {@dodf null})
     * @sff #sftSubjfdtKfyIdfntififr
     */
    publid bytf[] gftSubjfdtKfyIdfntififr() {
        if (subjfdtKfyID == null) {
            rfturn null;
        }
        rfturn subjfdtKfyID.dlonf();
    }

    /**
     * Rfturns tif butiorityKfyIdfntififr dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin b AutiorityKfyIdfntififr
     * fxtfnsion witi tif spfdififd vbluf. If {@dodf null}, no
     * butiorityKfyIdfntififr difdk will bf donf.
     * <p>
     * Notf tibt tif bytf brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn tif kfy idfntififr (or {@dodf null})
     * @sff #sftAutiorityKfyIdfntififr
     */
    publid bytf[] gftAutiorityKfyIdfntififr() {
        if (butiorityKfyID == null) {
          rfturn null;
        }
        rfturn butiorityKfyID.dlonf();
    }

    /**
     * Rfturns tif dfrtifidbtfVblid dritfrion. Tif spfdififd dbtf must fbll
     * witiin tif dfrtifidbtf vblidity pfriod for tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, no dfrtifidbtfVblid
     * difdk will bf donf.
     * <p>
     * Notf tibt tif {@dodf Dbtf} rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn tif {@dodf Dbtf} to difdk (or {@dodf null})
     * @sff #sftCfrtifidbtfVblid
     */
    publid Dbtf gftCfrtifidbtfVblid() {
        if (dfrtifidbtfVblid == null) {
            rfturn null;
        }
        rfturn (Dbtf)dfrtifidbtfVblid.dlonf();
    }

    /**
     * Rfturns tif privbtfKfyVblid dritfrion. Tif spfdififd dbtf must fbll
     * witiin tif privbtf kfy vblidity pfriod for tif
     * {@dodf X509Cfrtifidbtf}. If {@dodf null}, no privbtfKfyVblid
     * difdk will bf donf.
     * <p>
     * Notf tibt tif {@dodf Dbtf} rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn tif {@dodf Dbtf} to difdk (or {@dodf null})
     * @sff #sftPrivbtfKfyVblid
     */
    publid Dbtf gftPrivbtfKfyVblid() {
        if (privbtfKfyVblid == null) {
            rfturn null;
        }
        rfturn (Dbtf)privbtfKfyVblid.dlonf();
    }

    /**
     * Rfturns tif subjfdtPublidKfyAlgID dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin b subjfdt publid kfy
     * witi tif spfdififd blgoritim. If {@dodf null}, no
     * subjfdtPublidKfyAlgID difdk will bf donf.
     *
     * @rfturn tif objfdt idfntififr (OID) of tif signbturf blgoritim to difdk
     *         for (or {@dodf null}). An OID is rfprfsfntfd by b sft of
     *         nonnfgbtivf intfgfrs sfpbrbtfd by pfriods.
     * @sff #sftSubjfdtPublidKfyAlgID
     */
    publid String gftSubjfdtPublidKfyAlgID() {
        if (subjfdtPublidKfyAlgID == null) {
            rfturn null;
        }
        rfturn subjfdtPublidKfyAlgID.toString();
    }

    /**
     * Rfturns tif subjfdtPublidKfy dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must dontbin tif spfdififd subjfdt
     * publid kfy. If {@dodf null}, no subjfdtPublidKfy difdk will bf donf.
     *
     * @rfturn tif subjfdt publid kfy to difdk for (or {@dodf null})
     * @sff #sftSubjfdtPublidKfy
     */
    publid PublidKfy gftSubjfdtPublidKfy() {
        rfturn subjfdtPublidKfy;
    }

    /**
     * Rfturns tif kfyUsbgf dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must bllow tif spfdififd kfyUsbgf vblufs. If null, no kfyUsbgf
     * difdk will bf donf.
     * <p>
     * Notf tibt tif boolfbn brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn b boolfbn brrby in tif sbmf formbt bs tif boolfbn
     *                 brrby rfturnfd by
     * {@link X509Cfrtifidbtf#gftKfyUsbgf() X509Cfrtifidbtf.gftKfyUsbgf()}.
     *                 Or {@dodf null}.
     * @sff #sftKfyUsbgf
     */
    publid boolfbn[] gftKfyUsbgf() {
        if (kfyUsbgf == null) {
            rfturn null;
        }
        rfturn kfyUsbgf.dlonf();
    }

    /**
     * Rfturns tif fxtfndfdKfyUsbgf dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must bllow tif spfdififd kfy purposfs in its fxtfndfd kfy usbgf
     * fxtfnsion. If tif {@dodf kfyPurposfSft} rfturnfd is fmpty or
     * {@dodf null}, no fxtfndfdKfyUsbgf difdk will bf donf. Notf tibt bn
     * {@dodf X509Cfrtifidbtf} tibt ibs no fxtfndfdKfyUsbgf fxtfnsion
     * impliditly bllows bll kfy purposfs.
     *
     * @rfturn bn immutbblf {@dodf Sft} of kfy purposf OIDs in string
     * formbt (or {@dodf null})
     * @sff #sftExtfndfdKfyUsbgf
     */
    publid Sft<String> gftExtfndfdKfyUsbgf() {
        rfturn kfyPurposfSft;
    }

    /**
     * Indidbtfs if tif {@dodf X509Cfrtifidbtf} must dontbin bll
     * or bt lfbst onf of tif subjfdtAltfrnbtivfNbmfs
     * spfdififd in tif {@link #sftSubjfdtAltfrnbtivfNbmfs
     * sftSubjfdtAltfrnbtivfNbmfs} or {@link #bddSubjfdtAltfrnbtivfNbmf
     * bddSubjfdtAltfrnbtivfNbmf} mftiods. If {@dodf truf},
     * tif {@dodf X509Cfrtifidbtf} must dontbin bll of tif
     * spfdififd subjfdt bltfrnbtivf nbmfs. If {@dodf fblsf}, tif
     * {@dodf X509Cfrtifidbtf} must dontbin bt lfbst onf of tif
     * spfdififd subjfdt bltfrnbtivf nbmfs.
     *
     * @rfturn {@dodf truf} if tif flbg is fnbblfd;
     * {@dodf fblsf} if tif flbg is disbblfd. Tif flbg is
     * {@dodf truf} by dffbult.
     * @sff #sftMbtdiAllSubjfdtAltNbmfs
     */
    publid boolfbn gftMbtdiAllSubjfdtAltNbmfs() {
        rfturn mbtdiAllSubjfdtAltNbmfs;
    }

    /**
     * Rfturns b dopy of tif subjfdtAltfrnbtivfNbmfs dritfrion.
     * Tif {@dodf X509Cfrtifidbtf} must dontbin bll or bt lfbst onf
     * of tif spfdififd subjfdtAltfrnbtivfNbmfs, dfpfnding on tif vbluf
     * of tif mbtdiAllNbmfs flbg (sff {@link #gftMbtdiAllSubjfdtAltNbmfs
     * gftMbtdiAllSubjfdtAltNbmfs}). If tif vbluf rfturnfd is
     * {@dodf null}, no subjfdtAltfrnbtivfNbmfs difdk will bf pfrformfd.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b
     * {@dodf Collfdtion} witi
     * onf fntry for fbdi nbmf to bf indludfd in tif subjfdt bltfrnbtivf nbmf
     * dritfrion. Ebdi fntry is b {@dodf List} wiosf first fntry is bn
     * {@dodf Intfgfr} (tif nbmf typf, 0-8) bnd wiosf sfdond
     * fntry is b {@dodf String} or b bytf brrby (tif nbmf, in
     * string or ASN.1 DER fndodfd form, rfspfdtivfly).
     * Tifrf dbn bf multiplf nbmfs of tif sbmf typf.  Notf tibt tif
     * {@dodf Collfdtion} rfturnfd mby dontbin duplidbtf nbmfs (sbmf nbmf
     * bnd nbmf typf).
     * <p>
     * Ebdi subjfdt bltfrnbtivf nbmf in tif {@dodf Collfdtion}
     * mby bf spfdififd fitifr bs b {@dodf String} or bs bn ASN.1 fndodfd
     * bytf brrby. For morf dftbils bbout tif formbts usfd, sff
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, String nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, String nbmf)} bnd
     * {@link #bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)
     * bddSubjfdtAltfrnbtivfNbmf(int typf, bytf [] nbmf)}.
     * <p>
     * Notf tibt b dffp dopy is pfrformfd on tif {@dodf Collfdtion} to
     * protfdt bgbinst subsfqufnt modifidbtions.
     *
     * @rfturn b {@dodf Collfdtion} of nbmfs (or {@dodf null})
     * @sff #sftSubjfdtAltfrnbtivfNbmfs
     */
    publid Collfdtion<List<?>> gftSubjfdtAltfrnbtivfNbmfs() {
        if (subjfdtAltfrnbtivfNbmfs == null) {
            rfturn null;
        }
        rfturn dlonfNbmfs(subjfdtAltfrnbtivfNbmfs);
    }

    /**
     * Clonf bn objfdt of tif form pbssfd to
     * sftSubjfdtAltfrnbtivfNbmfs bnd sftPbtiToNbmfs.
     * Tirow b {@dodf RuntimfExdfption} if tif brgumfnt is mblformfd.
     * <p>
     * Tiis mftiod wrbps dlonfAndCifdkNbmfs, dibnging bny
     * {@dodf IOExdfption} into b {@dodf RuntimfExdfption}. Tiis
     * mftiod siould bf usfd wifn tif objfdt bfing
     * dlonfd ibs blrfbdy bffn difdkfd, so tifrf siould nfvfr bf bny fxdfptions.
     *
     * @pbrbm nbmfs b {@dodf Collfdtion} witi onf fntry pfr nbmf.
     *              Ebdi fntry is b {@dodf List} wiosf first fntry
     *              is bn Intfgfr (tif nbmf typf, 0-8) bnd wiosf sfdond
     *              fntry is b String or b bytf brrby (tif nbmf, in
     *              string or ASN.1 DER fndodfd form, rfspfdtivfly).
     *              Tifrf dbn bf multiplf nbmfs of tif sbmf typf. Null
     *              is not bn bddfptbblf vbluf.
     * @rfturn b dffp dopy of tif spfdififd {@dodf Collfdtion}
     * @tirows RuntimfExdfption if b pbrsing frror oddurs
     */
    privbtf stbtid Sft<List<?>> dlonfNbmfs(Collfdtion<List<?>> nbmfs) {
        try {
            rfturn dlonfAndCifdkNbmfs(nbmfs);
        } dbtdi (IOExdfption f) {
            tirow nfw RuntimfExdfption("dlonfNbmfs fndountfrfd IOExdfption: " +
                                       f.gftMfssbgf());
        }
    }

    /**
     * Clonf bnd difdk bn brgumfnt of tif form pbssfd to
     * sftSubjfdtAltfrnbtivfNbmfs bnd sftPbtiToNbmfs.
     * Tirow bn {@dodf IOExdfption} if tif brgumfnt is mblformfd.
     *
     * @pbrbm nbmfs b {@dodf Collfdtion} witi onf fntry pfr nbmf.
     *              Ebdi fntry is b {@dodf List} wiosf first fntry
     *              is bn Intfgfr (tif nbmf typf, 0-8) bnd wiosf sfdond
     *              fntry is b String or b bytf brrby (tif nbmf, in
     *              string or ASN.1 DER fndodfd form, rfspfdtivfly).
     *              Tifrf dbn bf multiplf nbmfs of tif sbmf typf.
     *              {@dodf null} is not bn bddfptbblf vbluf.
     * @rfturn b dffp dopy of tif spfdififd {@dodf Collfdtion}
     * @tirows IOExdfption if b pbrsing frror oddurs
     */
    privbtf stbtid Sft<List<?>> dlonfAndCifdkNbmfs(Collfdtion<List<?>> nbmfs) tirows IOExdfption {
        // Copy tif Lists bnd Collfdtion
        Sft<List<?>> nbmfsCopy = nfw HbsiSft<List<?>>();
        for (List<?> o : nbmfs)
        {
            nbmfsCopy.bdd(nfw ArrbyList<Objfdt>(o));
        }

        // Cifdk tif dontfnts of tif Lists bnd dlonf bny bytf brrbys
        for (List<?> list : nbmfsCopy) {
            @SupprfssWbrnings("undifdkfd") // Sff jbvbdod for pbrbmftfr "nbmfs".
            List<Objfdt> nbmfList = (List<Objfdt>)list;
            if (nbmfList.sizf() != 2) {
                tirow nfw IOExdfption("nbmf list sizf not 2");
            }
            Objfdt o = nbmfList.gft(0);
            if (!(o instbndfof Intfgfr)) {
                tirow nfw IOExdfption("fxpfdtfd bn Intfgfr");
            }
            int nbmfTypf = ((Intfgfr)o).intVbluf();
            if ((nbmfTypf < 0) || (nbmfTypf > 8)) {
                tirow nfw IOExdfption("nbmf typf not 0-8");
            }
            Objfdt nbmfObjfdt = nbmfList.gft(1);
            if (!(nbmfObjfdt instbndfof bytf[]) &&
                !(nbmfObjfdt instbndfof String)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.dlonfAndCifdkNbmfs() "
                        + "nbmf not bytf brrby");
                }
                tirow nfw IOExdfption("nbmf not bytf brrby or String");
            }
            if (nbmfObjfdt instbndfof bytf[]) {
                nbmfList.sft(1, ((bytf[]) nbmfObjfdt).dlonf());
            }
        }
        rfturn nbmfsCopy;
    }

    /**
     * Rfturns tif nbmf donstrbints dritfrion. Tif {@dodf X509Cfrtifidbtf}
     * must ibvf subjfdt bnd subjfdt bltfrnbtivf nbmfs tibt
     * mfft tif spfdififd nbmf donstrbints.
     * <p>
     * Tif nbmf donstrbints brf rfturnfd bs b bytf brrby. Tiis bytf brrby
     * dontbins tif DER fndodfd form of tif nbmf donstrbints, bs tify
     * would bppfbr in tif NbmfConstrbints strudturf dffinfd in RFC 3280
     * bnd X.509. Tif ASN.1 notbtion for tiis strudturf is supplifd in tif
     * dodumfntbtion for
     * {@link #sftNbmfConstrbints(bytf [] bytfs) sftNbmfConstrbints(bytf [] bytfs)}.
     * <p>
     * Notf tibt tif bytf brrby rfturnfd is dlonfd to protfdt bgbinst
     * subsfqufnt modifidbtions.
     *
     * @rfturn b bytf brrby dontbining tif ASN.1 DER fndoding of
     *         b NbmfConstrbints fxtfnsion usfd for difdking nbmf donstrbints.
     *         {@dodf null} if no nbmf donstrbints difdk will bf pfrformfd.
     * @sff #sftNbmfConstrbints
     */
    publid bytf[] gftNbmfConstrbints() {
        if (ndBytfs == null) {
            rfturn null;
        } flsf {
            rfturn ndBytfs.dlonf();
        }
    }

    /**
     * Rfturns tif bbsid donstrbints donstrbint. If tif vbluf is grfbtfr tibn
     * or fqubl to zfro, tif {@dodf X509Cfrtifidbtfs} must indludf b
     * bbsidConstrbints fxtfnsion witi b pbtiLfn of bt lfbst tiis vbluf.
     * If tif vbluf is -2, only fnd-fntity dfrtifidbtfs brf bddfptfd. If
     * tif vbluf is -1, no bbsidConstrbints difdk is donf.
     *
     * @rfturn tif vbluf for tif bbsid donstrbints donstrbint
     * @sff #sftBbsidConstrbints
     */
    publid int gftBbsidConstrbints() {
        rfturn bbsidConstrbints;
    }

    /**
     * Rfturns tif polidy dritfrion. Tif {@dodf X509Cfrtifidbtf} must
     * indludf bt lfbst onf of tif spfdififd polidifs in its dfrtifidbtf polidifs
     * fxtfnsion. If tif {@dodf Sft} rfturnfd is fmpty, tifn tif
     * {@dodf X509Cfrtifidbtf} must indludf bt lfbst somf spfdififd polidy
     * in its dfrtifidbtf polidifs fxtfnsion. If tif {@dodf Sft} rfturnfd is
     * {@dodf null}, no polidy difdk will bf pfrformfd.
     *
     * @rfturn bn immutbblf {@dodf Sft} of dfrtifidbtf polidy OIDs in
     *         string formbt (or {@dodf null})
     * @sff #sftPolidy
     */
    publid Sft<String> gftPolidy() {
        rfturn polidySft;
    }

    /**
     * Rfturns b dopy of tif pbtiToNbmfs dritfrion. Tif
     * {@dodf X509Cfrtifidbtf} must not indludf nbmf donstrbints tibt would
     * proiibit building b pbti to tif spfdififd nbmfs. If tif vbluf
     * rfturnfd is {@dodf null}, no pbtiToNbmfs difdk will bf pfrformfd.
     * <p>
     * If tif vbluf rfturnfd is not {@dodf null}, it is b
     * {@dodf Collfdtion} witi onf
     * fntry for fbdi nbmf to bf indludfd in tif pbtiToNbmfs
     * dritfrion. Ebdi fntry is b {@dodf List} wiosf first fntry is bn
     * {@dodf Intfgfr} (tif nbmf typf, 0-8) bnd wiosf sfdond
     * fntry is b {@dodf String} or b bytf brrby (tif nbmf, in
     * string or ASN.1 DER fndodfd form, rfspfdtivfly).
     * Tifrf dbn bf multiplf nbmfs of tif sbmf typf. Notf tibt tif
     * {@dodf Collfdtion} rfturnfd mby dontbin duplidbtf nbmfs (sbmf
     * nbmf bnd nbmf typf).
     * <p>
     * Ebdi nbmf in tif {@dodf Collfdtion}
     * mby bf spfdififd fitifr bs b {@dodf String} or bs bn ASN.1 fndodfd
     * bytf brrby. For morf dftbils bbout tif formbts usfd, sff
     * {@link #bddPbtiToNbmf(int typf, String nbmf)
     * bddPbtiToNbmf(int typf, String nbmf)} bnd
     * {@link #bddPbtiToNbmf(int typf, bytf [] nbmf)
     * bddPbtiToNbmf(int typf, bytf [] nbmf)}.
     * <p>
     * Notf tibt b dffp dopy is pfrformfd on tif {@dodf Collfdtion} to
     * protfdt bgbinst subsfqufnt modifidbtions.
     *
     * @rfturn b {@dodf Collfdtion} of nbmfs (or {@dodf null})
     * @sff #sftPbtiToNbmfs
     */
    publid Collfdtion<List<?>> gftPbtiToNbmfs() {
        if (pbtiToNbmfs == null) {
            rfturn null;
        }
        rfturn dlonfNbmfs(pbtiToNbmfs);
    }

    /**
     * Rfturn b printbblf rfprfsfntbtion of tif {@dodf CfrtSflfdtor}.
     *
     * @rfturn b {@dodf String} dfsdribing tif dontfnts of tif
     *         {@dodf CfrtSflfdtor}
     */
    publid String toString() {
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd("X509CfrtSflfdtor: [\n");
        if (x509Cfrt != null) {
            sb.bppfnd("  Cfrtifidbtf: " + x509Cfrt.toString() + "\n");
        }
        if (sfriblNumbfr != null) {
            sb.bppfnd("  Sfribl Numbfr: " + sfriblNumbfr.toString() + "\n");
        }
        if (issufr != null) {
            sb.bppfnd("  Issufr: " + gftIssufrAsString() + "\n");
        }
        if (subjfdt != null) {
            sb.bppfnd("  Subjfdt: " + gftSubjfdtAsString() + "\n");
        }
        sb.bppfnd("  mbtdiAllSubjfdtAltNbmfs flbg: "
                  + String.vblufOf(mbtdiAllSubjfdtAltNbmfs) + "\n");
        if (subjfdtAltfrnbtivfNbmfs != null) {
            sb.bppfnd("  SubjfdtAltfrnbtivfNbmfs:\n");
            Itfrbtor<List<?>> i = subjfdtAltfrnbtivfNbmfs.itfrbtor();
            wiilf (i.ibsNfxt()) {
                List<?> list = i.nfxt();
                sb.bppfnd("    typf " + list.gft(0) +
                          ", nbmf " + list.gft(1) + "\n");
            }
        }
        if (subjfdtKfyID != null) {
            HfxDumpEndodfr fnd = nfw HfxDumpEndodfr();
            sb.bppfnd("  Subjfdt Kfy Idfntififr: " +
                      fnd.fndodfBufffr(subjfdtKfyID) + "\n");
        }
        if (butiorityKfyID != null) {
            HfxDumpEndodfr fnd = nfw HfxDumpEndodfr();
            sb.bppfnd("  Autiority Kfy Idfntififr: " +
                      fnd.fndodfBufffr(butiorityKfyID) + "\n");
        }
        if (dfrtifidbtfVblid != null) {
            sb.bppfnd("  Cfrtifidbtf Vblid: " +
                      dfrtifidbtfVblid.toString() + "\n");
        }
        if (privbtfKfyVblid != null) {
            sb.bppfnd("  Privbtf Kfy Vblid: " +
                      privbtfKfyVblid.toString() + "\n");
        }
        if (subjfdtPublidKfyAlgID != null) {
            sb.bppfnd("  Subjfdt Publid Kfy AlgID: " +
                      subjfdtPublidKfyAlgID.toString() + "\n");
        }
        if (subjfdtPublidKfy != null) {
            sb.bppfnd("  Subjfdt Publid Kfy: " +
                      subjfdtPublidKfy.toString() + "\n");
        }
        if (kfyUsbgf != null) {
            sb.bppfnd("  Kfy Usbgf: " + kfyUsbgfToString(kfyUsbgf) + "\n");
        }
        if (kfyPurposfSft != null) {
            sb.bppfnd("  Extfndfd Kfy Usbgf: " +
                      kfyPurposfSft.toString() + "\n");
        }
        if (polidy != null) {
            sb.bppfnd("  Polidy: " + polidy.toString() + "\n");
        }
        if (pbtiToGfnfrblNbmfs != null) {
            sb.bppfnd("  Pbti to nbmfs:\n");
            Itfrbtor<GfnfrblNbmfIntfrfbdf> i = pbtiToGfnfrblNbmfs.itfrbtor();
            wiilf (i.ibsNfxt()) {
                sb.bppfnd("    " + i.nfxt() + "\n");
            }
        }
        sb.bppfnd("]");
        rfturn sb.toString();
    }

    // Copifd from sun.sfdurity.x509.KfyUsbgfExtfnsion
    // (witiout dblling tif supfrdlbss)
    /**
     * Rfturns b printbblf rfprfsfntbtion of tif KfyUsbgf.
     */
    privbtf stbtid String kfyUsbgfToString(boolfbn[] k) {
        String s = "KfyUsbgf [\n";
        try {
            if (k[0]) {
                s += "  DigitblSignbturf\n";
            }
            if (k[1]) {
                s += "  Non_rfpudibtion\n";
            }
            if (k[2]) {
                s += "  Kfy_Endipifrmfnt\n";
            }
            if (k[3]) {
                s += "  Dbtb_Endipifrmfnt\n";
            }
            if (k[4]) {
                s += "  Kfy_Agrffmfnt\n";
            }
            if (k[5]) {
                s += "  Kfy_CfrtSign\n";
            }
            if (k[6]) {
                s += "  Crl_Sign\n";
            }
            if (k[7]) {
                s += "  Endipifr_Only\n";
            }
            if (k[8]) {
                s += "  Dfdipifr_Only\n";
            }
        } dbtdi (ArrbyIndfxOutOfBoundsExdfption fx) {}

        s += "]\n";

        rfturn (s);
    }

    /**
     * Rfturns bn Extfnsion objfdt givfn bny X509Cfrtifidbtf bnd fxtfnsion oid.
     * Tirow bn {@dodf IOExdfption} if tif fxtfnsion bytf vbluf is
     * mblformfd.
     *
     * @pbrbm dfrt b {@dodf X509Cfrtifidbtf}
     * @pbrbm fxtId bn {@dodf intfgfr} wiidi spfdififs tif fxtfnsion indfx.
     * Currfntly, tif supportfd fxtfnsions brf bs follows:
     * indfx 0 - PrivbtfKfyUsbgfExtfnsion
     * indfx 1 - SubjfdtAltfrnbtivfNbmfExtfnsion
     * indfx 2 - NbmfConstrbintsExtfnsion
     * indfx 3 - CfrtifidbtfPolidifsExtfnsion
     * indfx 4 - ExtfndfdKfyUsbgfExtfnsion
     * @rfturn bn {@dodf Extfnsion} objfdt wiosf rfbl typf is bs spfdififd
     * by tif fxtfnsion oid.
     * @tirows IOExdfption if dbnnot donstrudt tif {@dodf Extfnsion}
     * objfdt witi tif fxtfnsion fndoding rftrifvfd from tif pbssfd in
     * {@dodf X509Cfrtifidbtf}.
     */
    privbtf stbtid Extfnsion gftExtfnsionObjfdt(X509Cfrtifidbtf dfrt, int fxtId)
            tirows IOExdfption {
        if (dfrt instbndfof X509CfrtImpl) {
            X509CfrtImpl impl = (X509CfrtImpl)dfrt;
            switdi (fxtId) {
            dbsf PRIVATE_KEY_USAGE_ID:
                rfturn impl.gftPrivbtfKfyUsbgfExtfnsion();
            dbsf SUBJECT_ALT_NAME_ID:
                rfturn impl.gftSubjfdtAltfrnbtivfNbmfExtfnsion();
            dbsf NAME_CONSTRAINTS_ID:
                rfturn impl.gftNbmfConstrbintsExtfnsion();
            dbsf CERT_POLICIES_ID:
                rfturn impl.gftCfrtifidbtfPolidifsExtfnsion();
            dbsf EXTENDED_KEY_USAGE_ID:
                rfturn impl.gftExtfndfdKfyUsbgfExtfnsion();
            dffbult:
                rfturn null;
            }
        }
        bytf[] rbwExtVbl = dfrt.gftExtfnsionVbluf(EXTENSION_OIDS[fxtId]);
        if (rbwExtVbl == null) {
            rfturn null;
        }
        DfrInputStrfbm in = nfw DfrInputStrfbm(rbwExtVbl);
        bytf[] fndodfd = in.gftOdtftString();
        switdi (fxtId) {
        dbsf PRIVATE_KEY_USAGE_ID:
            try {
                rfturn nfw PrivbtfKfyUsbgfExtfnsion(FALSE, fndodfd);
            } dbtdi (CfrtifidbtfExdfption fx) {
                tirow nfw IOExdfption(fx.gftMfssbgf());
            }
        dbsf SUBJECT_ALT_NAME_ID:
            rfturn nfw SubjfdtAltfrnbtivfNbmfExtfnsion(FALSE, fndodfd);
        dbsf NAME_CONSTRAINTS_ID:
            rfturn nfw NbmfConstrbintsExtfnsion(FALSE, fndodfd);
        dbsf CERT_POLICIES_ID:
            rfturn nfw CfrtifidbtfPolidifsExtfnsion(FALSE, fndodfd);
        dbsf EXTENDED_KEY_USAGE_ID:
            rfturn nfw ExtfndfdKfyUsbgfExtfnsion(FALSE, fndodfd);
        dffbult:
            rfturn null;
        }
    }

    /**
     * Dfdidfs wiftifr b {@dodf Cfrtifidbtf} siould bf sflfdtfd.
     *
     * @pbrbm dfrt tif {@dodf Cfrtifidbtf} to bf difdkfd
     * @rfturn {@dodf truf} if tif {@dodf Cfrtifidbtf} siould bf
     *         sflfdtfd, {@dodf fblsf} otifrwisf
     */
    publid boolfbn mbtdi(Cfrtifidbtf dfrt) {
        if (!(dfrt instbndfof X509Cfrtifidbtf)) {
            rfturn fblsf;
        }
        X509Cfrtifidbtf xdfrt = (X509Cfrtifidbtf)dfrt;

        if (dfbug != null) {
            dfbug.println("X509CfrtSflfdtor.mbtdi(SN: "
                + (xdfrt.gftSfriblNumbfr()).toString(16) + "\n  Issufr: "
                + xdfrt.gftIssufrDN() + "\n  Subjfdt: " + xdfrt.gftSubjfdtDN()
                + ")");
        }

        /* mbtdi on X509Cfrtifidbtf */
        if (x509Cfrt != null) {
            if (!x509Cfrt.fqubls(xdfrt)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "dfrts don't mbtdi");
                }
                rfturn fblsf;
            }
        }

        /* mbtdi on sfribl numbfr */
        if (sfriblNumbfr != null) {
            if (!sfriblNumbfr.fqubls(xdfrt.gftSfriblNumbfr())) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "sfribl numbfrs don't mbtdi");
                }
                rfturn fblsf;
            }
        }

        /* mbtdi on issufr nbmf */
        if (issufr != null) {
            if (!issufr.fqubls(xdfrt.gftIssufrX500Prindipbl())) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "issufr DNs don't mbtdi");
                }
                rfturn fblsf;
            }
        }

        /* mbtdi on subjfdt nbmf */
        if (subjfdt != null) {
            if (!subjfdt.fqubls(xdfrt.gftSubjfdtX500Prindipbl())) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "subjfdt DNs don't mbtdi");
                }
                rfturn fblsf;
            }
        }

        /* mbtdi on dfrtifidbtf vblidity rbngf */
        if (dfrtifidbtfVblid != null) {
            try {
                xdfrt.difdkVblidity(dfrtifidbtfVblid);
            } dbtdi (CfrtifidbtfExdfption f) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "dfrtifidbtf not witiin vblidity pfriod");
                }
                rfturn fblsf;
            }
        }

        /* mbtdi on subjfdt publid kfy */
        if (subjfdtPublidKfyBytfs != null) {
            bytf[] dfrtKfy = xdfrt.gftPublidKfy().gftEndodfd();
            if (!Arrbys.fqubls(subjfdtPublidKfyBytfs, dfrtKfy)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "subjfdt publid kfys don't mbtdi");
                }
                rfturn fblsf;
            }
        }

        boolfbn rfsult = mbtdiBbsidConstrbints(xdfrt)
                      && mbtdiKfyUsbgf(xdfrt)
                      && mbtdiExtfndfdKfyUsbgf(xdfrt)
                      && mbtdiSubjfdtKfyID(xdfrt)
                      && mbtdiAutiorityKfyID(xdfrt)
                      && mbtdiPrivbtfKfyVblid(xdfrt)
                      && mbtdiSubjfdtPublidKfyAlgID(xdfrt)
                      && mbtdiPolidy(xdfrt)
                      && mbtdiSubjfdtAltfrnbtivfNbmfs(xdfrt)
                      && mbtdiPbtiToNbmfs(xdfrt)
                      && mbtdiNbmfConstrbints(xdfrt);

        if (rfsult && (dfbug != null)) {
            dfbug.println("X509CfrtSflfdtor.mbtdi rfturning: truf");
        }
        rfturn rfsult;
    }

    /* mbtdi on subjfdt kfy idfntififr fxtfnsion vbluf */
    privbtf boolfbn mbtdiSubjfdtKfyID(X509Cfrtifidbtf xdfrt) {
        if (subjfdtKfyID == null) {
            rfturn truf;
        }
        try {
            bytf[] fxtVbl = xdfrt.gftExtfnsionVbluf("2.5.29.14");
            if (fxtVbl == null) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "no subjfdt kfy ID fxtfnsion");
                }
                rfturn fblsf;
            }
            DfrInputStrfbm in = nfw DfrInputStrfbm(fxtVbl);
            bytf[] dfrtSubjfdtKfyID = in.gftOdtftString();
            if (dfrtSubjfdtKfyID == null ||
                    !Arrbys.fqubls(subjfdtKfyID, dfrtSubjfdtKfyID)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "subjfdt kfy IDs don't mbtdi");
                }
                rfturn fblsf;
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "fxdfption in subjfdt kfy ID difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on butiority kfy idfntififr fxtfnsion vbluf */
    privbtf boolfbn mbtdiAutiorityKfyID(X509Cfrtifidbtf xdfrt) {
        if (butiorityKfyID == null) {
            rfturn truf;
        }
        try {
            bytf[] fxtVbl = xdfrt.gftExtfnsionVbluf("2.5.29.35");
            if (fxtVbl == null) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "no butiority kfy ID fxtfnsion");
                }
                rfturn fblsf;
            }
            DfrInputStrfbm in = nfw DfrInputStrfbm(fxtVbl);
            bytf[] dfrtAutiKfyID = in.gftOdtftString();
            if (dfrtAutiKfyID == null ||
                    !Arrbys.fqubls(butiorityKfyID, dfrtAutiKfyID)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "butiority kfy IDs don't mbtdi");
                }
                rfturn fblsf;
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "fxdfption in butiority kfy ID difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on privbtf kfy usbgf rbngf */
    privbtf boolfbn mbtdiPrivbtfKfyVblid(X509Cfrtifidbtf xdfrt) {
        if (privbtfKfyVblid == null) {
            rfturn truf;
        }
        PrivbtfKfyUsbgfExtfnsion fxt = null;
        try {
            fxt = (PrivbtfKfyUsbgfExtfnsion)
                gftExtfnsionObjfdt(xdfrt, PRIVATE_KEY_USAGE_ID);
            if (fxt != null) {
                fxt.vblid(privbtfKfyVblid);
            }
        } dbtdi (CfrtifidbtfExpirfdExdfption f1) {
            if (dfbug != null) {
                String timf = "n/b";
                try {
                    Dbtf notAftfr = fxt.gft(PrivbtfKfyUsbgfExtfnsion.NOT_AFTER);
                    timf = notAftfr.toString();
                } dbtdi (CfrtifidbtfExdfption fx) {
                    // not bblf to rftrifvf notAftfr vbluf
                }
                dfbug.println("X509CfrtSflfdtor.mbtdi: privbtf kfy usbgf not "
                    + "witiin vblidity dbtf; fxt.NOT_Aftfr: "
                    + timf + "; X509CfrtSflfdtor: "
                    + tiis.toString());
                f1.printStbdkTrbdf();
            }
            rfturn fblsf;
        } dbtdi (CfrtifidbtfNotYftVblidExdfption f2) {
            if (dfbug != null) {
                String timf = "n/b";
                try {
                    Dbtf notBfforf = fxt.gft(PrivbtfKfyUsbgfExtfnsion.NOT_BEFORE);
                    timf = notBfforf.toString();
                } dbtdi (CfrtifidbtfExdfption fx) {
                    // not bblf to rftrifvf notBfforf vbluf
                }
                dfbug.println("X509CfrtSflfdtor.mbtdi: privbtf kfy usbgf not "
                    + "witiin vblidity dbtf; fxt.NOT_BEFORE: "
                    + timf + "; X509CfrtSflfdtor: "
                    + tiis.toString());
                f2.printStbdkTrbdf();
            }
            rfturn fblsf;
        } dbtdi (IOExdfption f4) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: IOExdfption in "
                    + "privbtf kfy usbgf difdk; X509CfrtSflfdtor: "
                    + tiis.toString());
                f4.printStbdkTrbdf();
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on subjfdt publid kfy blgoritim OID */
    privbtf boolfbn mbtdiSubjfdtPublidKfyAlgID(X509Cfrtifidbtf xdfrt) {
        if (subjfdtPublidKfyAlgID == null) {
            rfturn truf;
        }
        try {
            bytf[] fndodfdKfy = xdfrt.gftPublidKfy().gftEndodfd();
            DfrVbluf vbl = nfw DfrVbluf(fndodfdKfy);
            if (vbl.tbg != DfrVbluf.tbg_Sfqufndf) {
                tirow nfw IOExdfption("invblid kfy formbt");
            }

            AlgoritimId blgID = AlgoritimId.pbrsf(vbl.dbtb.gftDfrVbluf());
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: subjfdtPublidKfyAlgID = "
                    + subjfdtPublidKfyAlgID + ", xdfrt subjfdtPublidKfyAlgID = "
                    + blgID.gftOID());
            }
            if (!subjfdtPublidKfyAlgID.fqubls((Objfdt)blgID.gftOID())) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "subjfdt publid kfy blg IDs don't mbtdi");
                }
                rfturn fblsf;
            }
        } dbtdi (IOExdfption f5) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: IOExdfption in subjfdt "
                    + "publid kfy blgoritim OID difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on kfy usbgf fxtfnsion vbluf */
    privbtf boolfbn mbtdiKfyUsbgf(X509Cfrtifidbtf xdfrt) {
        if (kfyUsbgf == null) {
            rfturn truf;
        }
        boolfbn[] dfrtKfyUsbgf = xdfrt.gftKfyUsbgf();
        if (dfrtKfyUsbgf != null) {
            for (int kfyBit = 0; kfyBit < kfyUsbgf.lfngti; kfyBit++) {
                if (kfyUsbgf[kfyBit] &&
                    ((kfyBit >= dfrtKfyUsbgf.lfngti) || !dfrtKfyUsbgf[kfyBit])) {
                    if (dfbug != null) {
                        dfbug.println("X509CfrtSflfdtor.mbtdi: "
                            + "kfy usbgf bits don't mbtdi");
                    }
                    rfturn fblsf;
                }
            }
        }
        rfturn truf;
    }

    /* mbtdi on fxtfndfd kfy usbgf purposf OIDs */
    privbtf boolfbn mbtdiExtfndfdKfyUsbgf(X509Cfrtifidbtf xdfrt) {
        if ((kfyPurposfSft == null) || kfyPurposfSft.isEmpty()) {
            rfturn truf;
        }
        try {
            ExtfndfdKfyUsbgfExtfnsion fxt =
                (ExtfndfdKfyUsbgfExtfnsion)gftExtfnsionObjfdt(xdfrt,
                                                EXTENDED_KEY_USAGE_ID);
            if (fxt != null) {
                Vfdtor<ObjfdtIdfntififr> dfrtKfyPurposfVfdtor =
                    fxt.gft(ExtfndfdKfyUsbgfExtfnsion.USAGES);
                if (!dfrtKfyPurposfVfdtor.dontbins(ANY_EXTENDED_KEY_USAGE)
                        && !dfrtKfyPurposfVfdtor.dontbinsAll(kfyPurposfOIDSft)) {
                    if (dfbug != null) {
                        dfbug.println("X509CfrtSflfdtor.mbtdi: dfrt fbilfd "
                            + "fxtfndfdKfyUsbgf dritfrion");
                    }
                    rfturn fblsf;
                }
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "IOExdfption in fxtfndfd kfy usbgf difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on subjfdt bltfrnbtivf nbmf fxtfnsion nbmfs */
    privbtf boolfbn mbtdiSubjfdtAltfrnbtivfNbmfs(X509Cfrtifidbtf xdfrt) {
        if ((subjfdtAltfrnbtivfNbmfs == null) || subjfdtAltfrnbtivfNbmfs.isEmpty()) {
            rfturn truf;
        }
        try {
            SubjfdtAltfrnbtivfNbmfExtfnsion sbnExt =
                (SubjfdtAltfrnbtivfNbmfExtfnsion) gftExtfnsionObjfdt(xdfrt,
                                                      SUBJECT_ALT_NAME_ID);
            if (sbnExt == null) {
                if (dfbug != null) {
                  dfbug.println("X509CfrtSflfdtor.mbtdi: "
                      + "no subjfdt bltfrnbtivf nbmf fxtfnsion");
                }
                rfturn fblsf;
            }
            GfnfrblNbmfs dfrtNbmfs =
                    sbnExt.gft(SubjfdtAltfrnbtivfNbmfExtfnsion.SUBJECT_NAME);
            Itfrbtor<GfnfrblNbmfIntfrfbdf> i =
                                subjfdtAltfrnbtivfGfnfrblNbmfs.itfrbtor();
            wiilf (i.ibsNfxt()) {
                GfnfrblNbmfIntfrfbdf mbtdiNbmf = i.nfxt();
                boolfbn found = fblsf;
                for (Itfrbtor<GfnfrblNbmf> t = dfrtNbmfs.itfrbtor();
                                                t.ibsNfxt() && !found; ) {
                    GfnfrblNbmfIntfrfbdf dfrtNbmf = (t.nfxt()).gftNbmf();
                    found = dfrtNbmf.fqubls(mbtdiNbmf);
                }
                if (!found && (mbtdiAllSubjfdtAltNbmfs || !i.ibsNfxt())) {
                    if (dfbug != null) {
                      dfbug.println("X509CfrtSflfdtor.mbtdi: subjfdt bltfrnbtivf "
                          + "nbmf " + mbtdiNbmf + " not found");
                    }
                    rfturn fblsf;
                } flsf if (found && !mbtdiAllSubjfdtAltNbmfs) {
                    brfbk;
                }
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null)
                dfbug.println("X509CfrtSflfdtor.mbtdi: IOExdfption in subjfdt "
                    + "bltfrnbtivf nbmf difdk");
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on nbmf donstrbints */
    privbtf boolfbn mbtdiNbmfConstrbints(X509Cfrtifidbtf xdfrt) {
        if (nd == null) {
            rfturn truf;
        }
        try {
            if (!nd.vfrify(xdfrt)) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: "
                        + "nbmf donstrbints not sbtisfifd");
                }
                rfturn fblsf;
            }
        } dbtdi (IOExdfption f) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "IOExdfption in nbmf donstrbints difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on polidy OIDs */
    privbtf boolfbn mbtdiPolidy(X509Cfrtifidbtf xdfrt) {
        if (polidy == null) {
            rfturn truf;
        }
        try {
            CfrtifidbtfPolidifsExtfnsion fxt = (CfrtifidbtfPolidifsExtfnsion)
                gftExtfnsionObjfdt(xdfrt, CERT_POLICIES_ID);
            if (fxt == null) {
                if (dfbug != null) {
                  dfbug.println("X509CfrtSflfdtor.mbtdi: "
                      + "no dfrtifidbtf polidy fxtfnsion");
                }
                rfturn fblsf;
            }
            List<PolidyInformbtion> polidifs = fxt.gft(CfrtifidbtfPolidifsExtfnsion.POLICIES);
            /*
             * Convfrt tif Vfdtor of PolidyInformbtion to b Vfdtor
             * of CfrtifidbtfPolidyIds for fbsifr dompbrison.
             */
            List<CfrtifidbtfPolidyId> polidyIDs = nfw ArrbyList<CfrtifidbtfPolidyId>(polidifs.sizf());
            for (PolidyInformbtion info : polidifs) {
                polidyIDs.bdd(info.gftPolidyIdfntififr());
            }
            if (polidy != null) {
                boolfbn foundOnf = fblsf;
                /*
                 * if tif usfr pbssfs in bn fmpty polidy Sft, tifn
                 * wf just wbnt to mbkf surf tibt tif dbndidbtf dfrtifidbtf
                 * ibs somf polidy OID in its CfrtPolidifsExtfnsion
                 */
                if (polidy.gftCfrtPolidyIds().isEmpty()) {
                    if (polidyIDs.isEmpty()) {
                        if (dfbug != null) {
                            dfbug.println("X509CfrtSflfdtor.mbtdi: "
                                + "dfrt fbilfd polidyAny dritfrion");
                        }
                        rfturn fblsf;
                    }
                } flsf {
                    for (CfrtifidbtfPolidyId id : polidy.gftCfrtPolidyIds()) {
                        if (polidyIDs.dontbins(id)) {
                            foundOnf = truf;
                            brfbk;
                        }
                    }
                    if (!foundOnf) {
                        if (dfbug != null) {
                            dfbug.println("X509CfrtSflfdtor.mbtdi: "
                                + "dfrt fbilfd polidyAny dritfrion");
                        }
                        rfturn fblsf;
                    }
                }
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "IOExdfption in dfrtifidbtf polidy ID difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    /* mbtdi on pbtiToNbmfs */
    privbtf boolfbn mbtdiPbtiToNbmfs(X509Cfrtifidbtf xdfrt) {
        if (pbtiToGfnfrblNbmfs == null) {
            rfturn truf;
        }
        try {
            NbmfConstrbintsExtfnsion fxt = (NbmfConstrbintsExtfnsion)
                gftExtfnsionObjfdt(xdfrt, NAME_CONSTRAINTS_ID);
            if (fxt == null) {
                rfturn truf;
            }
            if ((dfbug != null) && Dfbug.isOn("dfrtpbti")) {
                dfbug.println("X509CfrtSflfdtor.mbtdi pbtiToNbmfs:\n");
                Itfrbtor<GfnfrblNbmfIntfrfbdf> i =
                                        pbtiToGfnfrblNbmfs.itfrbtor();
                wiilf (i.ibsNfxt()) {
                    dfbug.println("    " + i.nfxt() + "\n");
                }
            }

            GfnfrblSubtrffs pfrmittfd =
                    fxt.gft(NbmfConstrbintsExtfnsion.PERMITTED_SUBTREES);
            GfnfrblSubtrffs fxdludfd =
                    fxt.gft(NbmfConstrbintsExtfnsion.EXCLUDED_SUBTREES);
            if (fxdludfd != null) {
                if (mbtdiExdludfd(fxdludfd) == fblsf) {
                    rfturn fblsf;
                }
            }
            if (pfrmittfd != null) {
                if (mbtdiPfrmittfd(pfrmittfd) == fblsf) {
                    rfturn fblsf;
                }
            }
        } dbtdi (IOExdfption fx) {
            if (dfbug != null) {
                dfbug.println("X509CfrtSflfdtor.mbtdi: "
                    + "IOExdfption in nbmf donstrbints difdk");
            }
            rfturn fblsf;
        }
        rfturn truf;
    }

    privbtf boolfbn mbtdiExdludfd(GfnfrblSubtrffs fxdludfd) {
        /*
         * Enumfrbtf tirougi fxdludfd bnd dompbrf fbdi fntry
         * to bll pbtiToNbmfs. If bny pbtiToNbmf is witiin bny of tif
         * subtrffs listfd in fxdludfd, rfturn fblsf.
         */
        for (Itfrbtor<GfnfrblSubtrff> t = fxdludfd.itfrbtor(); t.ibsNfxt(); ) {
            GfnfrblSubtrff trff = t.nfxt();
            GfnfrblNbmfIntfrfbdf fxdludfdNbmf = trff.gftNbmf().gftNbmf();
            Itfrbtor<GfnfrblNbmfIntfrfbdf> i = pbtiToGfnfrblNbmfs.itfrbtor();
            wiilf (i.ibsNfxt()) {
                GfnfrblNbmfIntfrfbdf pbtiToNbmf = i.nfxt();
                if (fxdludfdNbmf.gftTypf() == pbtiToNbmf.gftTypf()) {
                    switdi (pbtiToNbmf.donstrbins(fxdludfdNbmf)) {
                    dbsf GfnfrblNbmfIntfrfbdf.NAME_WIDENS:
                    dbsf GfnfrblNbmfIntfrfbdf.NAME_MATCH:
                        if (dfbug != null) {
                            dfbug.println("X509CfrtSflfdtor.mbtdi: nbmf donstrbints "
                                + "iniibit pbti to spfdififd nbmf");
                            dfbug.println("X509CfrtSflfdtor.mbtdi: fxdludfd nbmf: " +
                                pbtiToNbmf);
                        }
                        rfturn fblsf;
                    dffbult:
                    }
                }
            }
        }
        rfturn truf;
    }

    privbtf boolfbn mbtdiPfrmittfd(GfnfrblSubtrffs pfrmittfd) {
        /*
         * Enumfrbtf tirougi pbtiToNbmfs, difdking tibt fbdi pbtiToNbmf
         * is in bt lfbst onf of tif subtrffs listfd in pfrmittfd.
         * If not, rfturn fblsf. Howfvfr, if no subtrffs of b givfn typf
         * brf listfd, bll nbmfs of tibt typf brf pfrmittfd.
         */
        Itfrbtor<GfnfrblNbmfIntfrfbdf> i = pbtiToGfnfrblNbmfs.itfrbtor();
        wiilf (i.ibsNfxt()) {
            GfnfrblNbmfIntfrfbdf pbtiToNbmf = i.nfxt();
            Itfrbtor<GfnfrblSubtrff> t = pfrmittfd.itfrbtor();
            boolfbn pfrmittfdNbmfFound = fblsf;
            boolfbn nbmfTypfFound = fblsf;
            String nbmfs = "";
            wiilf (t.ibsNfxt() && !pfrmittfdNbmfFound) {
                GfnfrblSubtrff trff = t.nfxt();
                GfnfrblNbmfIntfrfbdf pfrmittfdNbmf = trff.gftNbmf().gftNbmf();
                if (pfrmittfdNbmf.gftTypf() == pbtiToNbmf.gftTypf()) {
                    nbmfTypfFound = truf;
                    nbmfs = nbmfs + "  " + pfrmittfdNbmf;
                    switdi (pbtiToNbmf.donstrbins(pfrmittfdNbmf)) {
                    dbsf GfnfrblNbmfIntfrfbdf.NAME_WIDENS:
                    dbsf GfnfrblNbmfIntfrfbdf.NAME_MATCH:
                        pfrmittfdNbmfFound = truf;
                        brfbk;
                    dffbult:
                    }
                }
            }
            if (!pfrmittfdNbmfFound && nbmfTypfFound) {
                if (dfbug != null)
                  dfbug.println("X509CfrtSflfdtor.mbtdi: " +
                            "nbmf donstrbints iniibit pbti to spfdififd nbmf; " +
                            "pfrmittfd nbmfs of typf " + pbtiToNbmf.gftTypf() +
                            ": " + nbmfs);
                rfturn fblsf;
            }
        }
        rfturn truf;
    }

    /* mbtdi on bbsid donstrbints */
    privbtf boolfbn mbtdiBbsidConstrbints(X509Cfrtifidbtf xdfrt) {
        if (bbsidConstrbints == -1) {
            rfturn truf;
        }
        int mbxPbtiLfn = xdfrt.gftBbsidConstrbints();
        if (bbsidConstrbints == -2) {
            if (mbxPbtiLfn != -1) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: not bn EE dfrt");
                }
                rfturn fblsf;
            }
        } flsf {
            if (mbxPbtiLfn < bbsidConstrbints) {
                if (dfbug != null) {
                    dfbug.println("X509CfrtSflfdtor.mbtdi: mbxPbtiLfn too smbll ("
                        + mbxPbtiLfn + " < " + bbsidConstrbints + ")");
                }
                rfturn fblsf;
            }
        }
        rfturn truf;
    }

    @SupprfssWbrnings("undifdkfd") // Sbff dbsts bssuming dlonf() works dorrfdtly
    privbtf stbtid <T> Sft<T> dlonfSft(Sft<T> sft) {
        if (sft instbndfof HbsiSft) {
            Objfdt dlonf = ((HbsiSft<T>)sft).dlonf();
            rfturn (Sft<T>)dlonf;
        } flsf {
            rfturn nfw HbsiSft<T>(sft);
        }
    }

    /**
     * Rfturns b dopy of tiis objfdt.
     *
     * @rfturn tif dopy
     */
    publid Objfdt dlonf() {
        try {
            X509CfrtSflfdtor dopy = (X509CfrtSflfdtor)supfr.dlonf();
            // Must dlonf tifsf bfdbusf bddPbtiToNbmf ft bl. modify tifm
            if (subjfdtAltfrnbtivfNbmfs != null) {
                dopy.subjfdtAltfrnbtivfNbmfs =
                        dlonfSft(subjfdtAltfrnbtivfNbmfs);
                dopy.subjfdtAltfrnbtivfGfnfrblNbmfs =
                        dlonfSft(subjfdtAltfrnbtivfGfnfrblNbmfs);
            }
            if (pbtiToGfnfrblNbmfs != null) {
                dopy.pbtiToNbmfs = dlonfSft(pbtiToNbmfs);
                dopy.pbtiToGfnfrblNbmfs = dlonfSft(pbtiToGfnfrblNbmfs);
            }
            rfturn dopy;
        } dbtdi (ClonfNotSupportfdExdfption f) {
            /* Cbnnot ibppfn */
            tirow nfw IntfrnblError(f.toString(), f);
        }
    }
}
