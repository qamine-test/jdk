/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.intfrfbdfs;

import jbvb.sfdurity.*;

/**
 * An intfrfbdf to bn objfdt dbpbblf of gfnfrbting DSA kfy pbirs.
 *
 * <p>Tif {@dodf initiblizf} mftiods mby fbdi bf dbllfd bny numbfr
 * of timfs. If no {@dodf initiblizf} mftiod is dbllfd on b
 * DSAKfyPbirGfnfrbtor, tif dffbult is to gfnfrbtf 1024-bit kfys, using
 * prfdomputfd p, q bnd g pbrbmftfrs bnd bn instbndf of SfdurfRbndom bs
 * tif rbndom bit sourdf.
 *
 * <p>Usfrs wisiing to indidbtf DSA-spfdifid pbrbmftfrs, bnd to gfnfrbtf b kfy
 * pbir suitbblf for usf witi tif DSA blgoritim typidblly
 *
 * <ol>
 *
 * <li>Gft b kfy pbir gfnfrbtor for tif DSA blgoritim by dblling tif
 * KfyPbirGfnfrbtor {@dodf gftInstbndf} mftiod witi "DSA"
 * bs its brgumfnt.
 *
 * <li>Initiblizf tif gfnfrbtor by dbsting tif rfsult to b DSAKfyPbirGfnfrbtor
 * bnd dblling onf of tif
 * {@dodf initiblizf} mftiods from tiis DSAKfyPbirGfnfrbtor intfrfbdf.
 *
 * <li>Gfnfrbtf b kfy pbir by dblling tif {@dodf gfnfrbtfKfyPbir}
 * mftiod from tif KfyPbirGfnfrbtor dlbss.
 *
 * </ol>
 *
 * <p>Notf: it is not blwbys nfdfssbry to do do blgoritim-spfdifid
 * initiblizbtion for b DSA kfy pbir gfnfrbtor. Tibt is, it is not blwbys
 * nfdfssbry to dbll bn {@dodf initiblizf} mftiod in tiis intfrfbdf.
 * Algoritim-indfpfndfnt initiblizbtion using tif {@dodf initiblizf} mftiod
 * in tif KfyPbirGfnfrbtor
 * intfrfbdf is bll tibt is nffdfd wifn you bddfpt dffbults for blgoritim-spfdifid
 * pbrbmftfrs.
 *
 * <p>Notf: Somf fbrlifr implfmfntbtions of tiis intfrfbdf mby not support
 * lbrgfr sizfs of DSA pbrbmftfrs sudi bs 2048 bnd 3072-bit.
 *
 * @sff jbvb.sfdurity.KfyPbirGfnfrbtor
 */
publid intfrfbdf DSAKfyPbirGfnfrbtor {

    /**
     * Initiblizfs tif kfy pbir gfnfrbtor using tif DSA fbmily pbrbmftfrs
     * (p,q bnd g) bnd bn optionbl SfdurfRbndom bit sourdf. If b
     * SfdurfRbndom bit sourdf is nffdfd but not supplifd, i.f. null, b
     * dffbult SfdurfRbndom instbndf will bf usfd.
     *
     * @pbrbm pbrbms tif pbrbmftfrs to usf to gfnfrbtf tif kfys.
     *
     * @pbrbm rbndom tif rbndom bit sourdf to usf to gfnfrbtf kfy bits;
     * dbn bf null.
     *
     * @fxdfption InvblidPbrbmftfrExdfption if tif {@dodf pbrbms}
     * vbluf is invblid, null, or unsupportfd.
     */
   publid void initiblizf(DSAPbrbms pbrbms, SfdurfRbndom rbndom)
   tirows InvblidPbrbmftfrExdfption;

    /**
     * Initiblizfs tif kfy pbir gfnfrbtor for b givfn modulus lfngti
     * (instfbd of pbrbmftfrs), bnd bn optionbl SfdurfRbndom bit sourdf.
     * If b SfdurfRbndom bit sourdf is nffdfd but not supplifd, i.f.
     * null, b dffbult SfdurfRbndom instbndf will bf usfd.
     *
     * <p>If {@dodf gfnPbrbms} is truf, tiis mftiod gfnfrbtfs nfw
     * p, q bnd g pbrbmftfrs. If it is fblsf, tif mftiod usfs prfdomputfd
     * pbrbmftfrs for tif modulus lfngti rfqufstfd. If tifrf brf no
     * prfdomputfd pbrbmftfrs for tibt modulus lfngti, bn fxdfption will bf
     * tirown. It is gubrbntffd tibt tifrf will blwbys bf
     * dffbult pbrbmftfrs for modulus lfngtis of 512 bnd 1024 bits.
     *
     * @pbrbm modlfn tif modulus lfngti in bits. Vblid vblufs brf bny
     * multiplf of 64 bftwffn 512 bnd 1024, indlusivf, 2048, bnd 3072.
     *
     * @pbrbm rbndom tif rbndom bit sourdf to usf to gfnfrbtf kfy bits;
     * dbn bf null.
     *
     * @pbrbm gfnPbrbms wiftifr or not to gfnfrbtf nfw pbrbmftfrs for
     * tif modulus lfngti rfqufstfd.
     *
     * @fxdfption InvblidPbrbmftfrExdfption if {@dodf modlfn} is
     * invblid, or unsupportfd, or if {@dodf gfnPbrbms} is fblsf bnd tifrf
     * brf no prfdomputfd pbrbmftfrs for tif rfqufstfd modulus lfngti.
     */
    publid void initiblizf(int modlfn, boolfbn gfnPbrbms, SfdurfRbndom rbndom)
    tirows InvblidPbrbmftfrExdfption;
}
