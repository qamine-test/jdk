/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity;

import sun.sfdurity.util.Dfbug;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;

/**
 * <p> Tif AddfssControllfr dlbss is usfd for bddfss dontrol opfrbtions
 * bnd dfdisions.
 *
 * <p> Morf spfdifidblly, tif AddfssControllfr dlbss is usfd for
 * tirff purposfs:
 *
 * <ul>
 * <li> to dfdidf wiftifr bn bddfss to b dritidbl systfm
 * rfsourdf is to bf bllowfd or dfnifd, bbsfd on tif sfdurity polidy
 * durrfntly in ffffdt,
 * <li>to mbrk dodf bs bfing "privilfgfd", tius bfffdting subsfqufnt
 * bddfss dftfrminbtions, bnd
 * <li>to obtbin b "snbpsiot" of tif durrfnt dblling dontfxt so
 * bddfss-dontrol dfdisions from b difffrfnt dontfxt dbn bf mbdf witi
 * rfspfdt to tif sbvfd dontfxt. </ul>
 *
 * <p> Tif {@link #difdkPfrmission(Pfrmission) difdkPfrmission} mftiod
 * dftfrminfs wiftifr tif bddfss rfqufst indidbtfd by b spfdififd
 * pfrmission siould bf grbntfd or dfnifd. A sbmplf dbll bppfbrs
 * bflow. In tiis fxbmplf, {@dodf difdkPfrmission} will dftfrminf
 * wiftifr or not to grbnt "rfbd" bddfss to tif filf nbmfd "tfstFilf" in
 * tif "/tfmp" dirfdtory.
 *
 * <prf>
 *
 * FilfPfrmission pfrm = nfw FilfPfrmission("/tfmp/tfstFilf", "rfbd");
 * AddfssControllfr.difdkPfrmission(pfrm);
 *
 * </prf>
 *
 * <p> If b rfqufstfd bddfss is bllowfd,
 * {@dodf difdkPfrmission} rfturns quiftly. If dfnifd, bn
 * AddfssControlExdfption is
 * tirown. AddfssControlExdfption dbn blso bf tirown if tif rfqufstfd
 * pfrmission is of bn indorrfdt typf or dontbins bn invblid vbluf.
 * Sudi informbtion is givfn wifnfvfr possiblf.
 *
 * Supposf tif durrfnt tirfbd trbvfrsfd m dbllfrs, in tif ordfr of dbllfr 1
 * to dbllfr 2 to dbllfr m. Tifn dbllfr m invokfd tif
 * {@dodf difdkPfrmission} mftiod.
 * Tif {@dodf difdkPfrmission} mftiod dftfrminfs wiftifr bddfss
 * is grbntfd or dfnifd bbsfd on tif following blgoritim:
 *
 *  <prf> {@dodf
 * for (int i = m; i > 0; i--) {
 *
 *     if (dbllfr i's dombin dofs not ibvf tif pfrmission)
 *         tirow AddfssControlExdfption
 *
 *     flsf if (dbllfr i is mbrkfd bs privilfgfd) {
 *         if (b dontfxt wbs spfdififd in tif dbll to doPrivilfgfd)
 *             dontfxt.difdkPfrmission(pfrmission)
 *         if (limitfd pfrmissions wfrf spfdififd in tif dbll to doPrivilfgfd) {
 *             for (fbdi limitfd pfrmission) {
 *                 if (tif limitfd pfrmission implifs tif rfqufstfd pfrmission)
 *                     rfturn;
 *             }
 *         } flsf
 *             rfturn;
 *     }
 * }
 *
 * // Nfxt, difdk tif dontfxt inifritfd wifn tif tirfbd wbs drfbtfd.
 * // Wifnfvfr b nfw tirfbd is drfbtfd, tif AddfssControlContfxt bt
 * // tibt timf is storfd bnd bssodibtfd witi tif nfw tirfbd, bs tif
 * // "inifritfd" dontfxt.
 *
 * inifritfdContfxt.difdkPfrmission(pfrmission);
 * }</prf>
 *
 * <p> A dbllfr dbn bf mbrkfd bs bfing "privilfgfd"
 * (sff {@link #doPrivilfgfd(PrivilfgfdAdtion) doPrivilfgfd} bnd bflow).
 * Wifn mbking bddfss dontrol dfdisions, tif {@dodf difdkPfrmission}
 * mftiod stops difdking if it rfbdifs b dbllfr tibt
 * wbs mbrkfd bs "privilfgfd" vib b {@dodf doPrivilfgfd}
 * dbll witiout b dontfxt brgumfnt (sff bflow for informbtion bbout b
 * dontfxt brgumfnt). If tibt dbllfr's dombin ibs tif
 * spfdififd pfrmission bnd bt lfbst onf limiting pfrmission brgumfnt (if bny)
 * implifs tif rfqufstfd pfrmission, no furtifr difdking is donf bnd
 * {@dodf difdkPfrmission}
 * rfturns quiftly, indidbting tibt tif rfqufstfd bddfss is bllowfd.
 * If tibt dombin dofs not ibvf tif spfdififd pfrmission, bn fxdfption
 * is tirown, bs usubl. If tif dbllfr's dombin ibd tif spfdififd pfrmission
 * but it wbs not implifd by bny limiting pfrmission brgumfnts givfn in tif dbll
 * to {@dodf doPrivilfgfd} tifn tif pfrmission difdking dontinufs
 * until tifrf brf no morf dbllfrs or bnotifr {@dodf doPrivilfgfd}
 * dbll mbtdifs tif rfqufstfd pfrmission bnd rfturns normblly.
 *
 * <p> Tif normbl usf of tif "privilfgfd" ffbturf is bs follows. If you
 * don't nffd to rfturn b vbluf from witiin tif "privilfgfd" blodk, do
 * tif following:
 *
 *  <prf> {@dodf
 * somfmftiod() {
 *     ...normbl dodf ifrf...
 *     AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
 *         publid Void run() {
 *             // privilfgfd dodf gofs ifrf, for fxbmplf:
 *             Systfm.lobdLibrbry("bwt");
 *             rfturn null; // notiing to rfturn
 *         }
 *     });
 *     ...normbl dodf ifrf...
 * }}</prf>
 *
 * <p>
 * PrivilfgfdAdtion is bn intfrfbdf witi b singlf mftiod, nbmfd
 * {@dodf run}.
 * Tif bbovf fxbmplf siows drfbtion of bn implfmfntbtion
 * of tibt intfrfbdf; b dondrftf implfmfntbtion of tif
 * {@dodf run} mftiod is supplifd.
 * Wifn tif dbll to {@dodf doPrivilfgfd} is mbdf, bn
 * instbndf of tif PrivilfgfdAdtion implfmfntbtion is pbssfd
 * to it. Tif {@dodf doPrivilfgfd} mftiod dblls tif
 * {@dodf run} mftiod from tif PrivilfgfdAdtion
 * implfmfntbtion bftfr fnbbling privilfgfs, bnd rfturns tif
 * {@dodf run} mftiod's rfturn vbluf bs tif
 * {@dodf doPrivilfgfd} rfturn vbluf (wiidi is
 * ignorfd in tiis fxbmplf).
 *
 * <p> If you nffd to rfturn b vbluf, you dbn do somftiing likf tif following:
 *
 *  <prf> {@dodf
 * somfmftiod() {
 *     ...normbl dodf ifrf...
 *     String usfr = AddfssControllfr.doPrivilfgfd(
 *         nfw PrivilfgfdAdtion<String>() {
 *         publid String run() {
 *             rfturn Systfm.gftPropfrty("usfr.nbmf");
 *             }
 *         });
 *     ...normbl dodf ifrf...
 * }}</prf>
 *
 * <p>If tif bdtion pfrformfd in your {@dodf run} mftiod dould
 * tirow b "difdkfd" fxdfption (tiosf listfd in tif {@dodf tirows} dlbusf
 * of b mftiod), tifn you nffd to usf tif
 * {@dodf PrivilfgfdExdfptionAdtion} intfrfbdf instfbd of tif
 * {@dodf PrivilfgfdAdtion} intfrfbdf:
 *
 *  <prf> {@dodf
 * somfmftiod() tirows FilfNotFoundExdfption {
 *     ...normbl dodf ifrf...
 *     try {
 *         FilfInputStrfbm fis = AddfssControllfr.doPrivilfgfd(
 *         nfw PrivilfgfdExdfptionAdtion<FilfInputStrfbm>() {
 *             publid FilfInputStrfbm run() tirows FilfNotFoundExdfption {
 *                 rfturn nfw FilfInputStrfbm("somfFilf");
 *             }
 *         });
 *     } dbtdi (PrivilfgfdAdtionExdfption f) {
 *         // f.gftExdfption() siould bf bn instbndf of FilfNotFoundExdfption,
 *         // bs only "difdkfd" fxdfptions will bf "wrbppfd" in b
 *         // PrivilfgfdAdtionExdfption.
 *         tirow (FilfNotFoundExdfption) f.gftExdfption();
 *     }
 *     ...normbl dodf ifrf...
 *  }}</prf>
 *
 * <p> Bf *vfry* dbrfful in your usf of tif "privilfgfd" donstrudt, bnd
 * blwbys rfmfmbfr to mbkf tif privilfgfd dodf sfdtion bs smbll bs possiblf.
 * You dbn pbss {@dodf Pfrmission} brgumfnts to furtifr limit tif
 * sdopf of tif "privilfgf" (sff bflow).
 *
 *
 * <p> Notf tibt {@dodf difdkPfrmission} blwbys pfrforms sfdurity difdks
 * witiin tif dontfxt of tif durrfntly fxfduting tirfbd.
 * Somftimfs b sfdurity difdk tibt siould bf mbdf witiin b givfn dontfxt
 * will bdtublly nffd to bf donf from witiin b
 * <i>difffrfnt</i> dontfxt (for fxbmplf, from witiin b workfr tirfbd).
 * Tif {@link #gftContfxt() gftContfxt} mftiod bnd
 * AddfssControlContfxt dlbss brf providfd
 * for tiis situbtion. Tif {@dodf gftContfxt} mftiod tbkfs b "snbpsiot"
 * of tif durrfnt dblling dontfxt, bnd plbdfs
 * it in bn AddfssControlContfxt objfdt, wiidi it rfturns. A sbmplf dbll is
 * tif following:
 *
 * <prf>
 *
 * AddfssControlContfxt bdd = AddfssControllfr.gftContfxt()
 *
 * </prf>
 *
 * <p>
 * AddfssControlContfxt itsflf ibs b {@dodf difdkPfrmission} mftiod
 * tibt mbkfs bddfss dfdisions bbsfd on tif dontfxt <i>it</i> fndbpsulbtfs,
 * rbtifr tibn tibt of tif durrfnt fxfdution tirfbd.
 * Codf witiin b difffrfnt dontfxt dbn tius dbll tibt mftiod on tif
 * prfviously-sbvfd AddfssControlContfxt objfdt. A sbmplf dbll is tif
 * following:
 *
 * <prf>
 *
 * bdd.difdkPfrmission(pfrmission)
 *
 * </prf>
 *
 * <p> Tifrf brf blso timfs wifrf you don't know b priori wiidi pfrmissions
 * to difdk tif dontfxt bgbinst. In tifsf dbsfs you dbn usf tif
 * doPrivilfgfd mftiod tibt tbkfs b dontfxt. You dbn blso limit tif sdopf
 * of tif privilfgfd dodf by pbssing bdditionbl {@dodf Pfrmission}
 * pbrbmftfrs.
 *
 *  <prf> {@dodf
 * somfmftiod() {
 *     AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Objfdt>() {
 *         publid Objfdt run() {
 *             // Codf gofs ifrf. Any pfrmission difdks witiin tiis
 *             // run mftiod will rfquirf tibt tif intfrsfdtion of tif
 *             // dbllfr's protfdtion dombin bnd tif snbpsiot's
 *             // dontfxt ibvf tif dfsirfd pfrmission. If b rfqufstfd
 *             // pfrmission is not implifd by tif limiting FilfPfrmission
 *             // brgumfnt tifn difdking of tif tirfbd dontinufs bfyond tif
 *             // dbllfr of doPrivilfgfd.
 *         }
 *     }, bdd, nfw FilfPfrmission("/tfmp/*", rfbd));
 *     ...normbl dodf ifrf...
 * }}</prf>
 * <p> Pbssing b limiting {@dodf Pfrmission} brgumfnt of bn instbndf of
 * {@dodf AllPfrmission} is fquivblfnt to dblling tif fquivblfnt
 * {@dodf doPrivilfgfd} mftiod witiout limiting {@dodf Pfrmission}
 * brgumfnts. Pbssing b zfro lfngti brrby of {@dodf Pfrmission} disbblfs
 * tif dodf privilfgfs so tibt difdking blwbys dontinufs bfyond tif dbllfr of
 * tibt {@dodf doPrivilfgfd} mftiod.
 *
 * @sff AddfssControlContfxt
 *
 * @butior Li Gong
 * @butior Rolbnd Sdifmfrs
 */

publid finbl dlbss AddfssControllfr {

    /**
     * Don't bllow bnyonf to instbntibtf bn AddfssControllfr
     */
    privbtf AddfssControllfr() { }

    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdAdtion} witi privilfgfs
     * fnbblfd. Tif bdtion is pfrformfd witi <i>bll</i> of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin.
     *
     * <p> If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd)
     * fxdfption, it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Notf tibt bny DombinCombinfr bssodibtfd witi tif durrfnt
     * AddfssControlContfxt will bf ignorfd wiilf tif bdtion is pfrformfd.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif PrivilfgfdAdtion's
     *                  {@dodf run} mftiod.
     *
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion,AddfssControlContfxt)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion)
     * @sff #doPrivilfgfdWitiCombinfr(PrivilfgfdAdtion)
     * @sff jbvb.sfdurity.DombinCombinfr
     */

    @CbllfrSfnsitivf
    publid stbtid nbtivf <T> T doPrivilfgfd(PrivilfgfdAdtion<T> bdtion);

    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdAdtion} witi privilfgfs
     * fnbblfd. Tif bdtion is pfrformfd witi <i>bll</i> of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin.
     *
     * <p> If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd)
     * fxdfption, it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Tiis mftiod prfsfrvfs tif durrfnt AddfssControlContfxt's
     * DombinCombinfr (wiidi mby bf null) wiilf tif bdtion is pfrformfd.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif PrivilfgfdAdtion's
     *                  {@dodf run} mftiod.
     *
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff jbvb.sfdurity.DombinCombinfr
     *
     * @sindf 1.6
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfdWitiCombinfr(PrivilfgfdAdtion<T> bdtion) {
        AddfssControlContfxt bdd = gftStbdkAddfssControlContfxt();
        if (bdd == null) {
            rfturn AddfssControllfr.doPrivilfgfd(bdtion);
        }
        DombinCombinfr dd = bdd.gftAssignfdCombinfr();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion,
                                             prfsfrvfCombinfr(dd, Rfflfdtion.gftCbllfrClbss()));
    }


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdAdtion} witi privilfgfs
     * fnbblfd bnd rfstridtfd by tif spfdififd {@dodf AddfssControlContfxt}.
     * Tif bdtion is pfrformfd witi tif intfrsfdtion of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin, bnd tiosf possfssfd
     * by tif dombins rfprfsfntfd by tif spfdififd {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd) fxdfption,
     * it will propbgbtf tirougi tiis mftiod.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif PrivilfgfdAdtion's
     *                  {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null}, tifn no bdditionbl rfstridtion is bpplifd.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion,AddfssControlContfxt)
     */
    @CbllfrSfnsitivf
    publid stbtid nbtivf <T> T doPrivilfgfd(PrivilfgfdAdtion<T> bdtion,
                                            AddfssControlContfxt dontfxt);


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdAdtion} witi privilfgfs
     * fnbblfd bnd rfstridtfd by tif spfdififd
     * {@dodf AddfssControlContfxt} bnd witi b privilfgf sdopf limitfd
     * by spfdififd {@dodf Pfrmission} brgumfnts.
     *
     * Tif bdtion is pfrformfd witi tif intfrsfdtion of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin, bnd tiosf possfssfd
     * by tif dombins rfprfsfntfd by tif spfdififd
     * {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd) fxdfption,
     * it will propbgbtf tirougi tiis mftiod.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif PrivilfgfdAdtion's
     *                  {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null},
     *                tifn no bdditionbl rfstridtion is bpplifd.
     * @pbrbm pfrms tif {@dodf Pfrmission} brgumfnts wiidi limit tif
     *              sdopf of tif dbllfr's privilfgfs. Tif numbfr of brgumfnts
     *              is vbribblf.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @tirows NullPointfrExdfption if bdtion or pfrms or bny flfmfnt of
     *         pfrms is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion,AddfssControlContfxt)
     *
     * @sindf 1.8
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfd(PrivilfgfdAdtion<T> bdtion,
        AddfssControlContfxt dontfxt, Pfrmission... pfrms) {

        AddfssControlContfxt pbrfnt = gftContfxt();
        if (pfrms == null) {
            tirow nfw NullPointfrExdfption("null pfrmissions pbrbmftfr");
        }
        Clbss <?> dbllfr = Rfflfdtion.gftCbllfrClbss();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion, drfbtfWrbppfr(null,
            dbllfr, pbrfnt, dontfxt, pfrms));
    }


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdAdtion} witi privilfgfs
     * fnbblfd bnd rfstridtfd by tif spfdififd
     * {@dodf AddfssControlContfxt} bnd witi b privilfgf sdopf limitfd
     * by spfdififd {@dodf Pfrmission} brgumfnts.
     *
     * Tif bdtion is pfrformfd witi tif intfrsfdtion of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin, bnd tiosf possfssfd
     * by tif dombins rfprfsfntfd by tif spfdififd
     * {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd) fxdfption,
     * it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Tiis mftiod prfsfrvfs tif durrfnt AddfssControlContfxt's
     * DombinCombinfr (wiidi mby bf null) wiilf tif bdtion is pfrformfd.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif PrivilfgfdAdtion's
     *                  {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null},
     *                tifn no bdditionbl rfstridtion is bpplifd.
     * @pbrbm pfrms tif {@dodf Pfrmission} brgumfnts wiidi limit tif
     *              sdopf of tif dbllfr's privilfgfs. Tif numbfr of brgumfnts
     *              is vbribblf.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @tirows NullPointfrExdfption if bdtion or pfrms or bny flfmfnt of
     *         pfrms is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion,AddfssControlContfxt)
     * @sff jbvb.sfdurity.DombinCombinfr
     *
     * @sindf 1.8
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfdWitiCombinfr(PrivilfgfdAdtion<T> bdtion,
        AddfssControlContfxt dontfxt, Pfrmission... pfrms) {

        AddfssControlContfxt pbrfnt = gftContfxt();
        DombinCombinfr dd = pbrfnt.gftCombinfr();
        if (dd == null && dontfxt != null) {
            dd = dontfxt.gftCombinfr();
        }
        if (pfrms == null) {
            tirow nfw NullPointfrExdfption("null pfrmissions pbrbmftfr");
        }
        Clbss <?> dbllfr = Rfflfdtion.gftCbllfrClbss();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion, drfbtfWrbppfr(dd, dbllfr,
            pbrfnt, dontfxt, pfrms));
    }

    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdExdfptionAdtion} witi
     * privilfgfs fnbblfd.  Tif bdtion is pfrformfd witi <i>bll</i> of tif
     * pfrmissions possfssfd by tif dbllfr's protfdtion dombin.
     *
     * <p> If tif bdtion's {@dodf run} mftiod tirows bn <i>undifdkfd</i>
     * fxdfption, it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Notf tibt bny DombinCombinfr bssodibtfd witi tif durrfnt
     * AddfssControlContfxt will bf ignorfd wiilf tif bdtion is pfrformfd.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif
     *                  PrivilfgfdExdfptionAdtion's {@dodf run} mftiod.
     *
     * @pbrbm bdtion tif bdtion to bf pfrformfd
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod
     *
     * @fxdfption PrivilfgfdAdtionExdfption if tif spfdififd bdtion's
     *         {@dodf run} mftiod tirfw b <i>difdkfd</i> fxdfption
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion,AddfssControlContfxt)
     * @sff #doPrivilfgfdWitiCombinfr(PrivilfgfdExdfptionAdtion)
     * @sff jbvb.sfdurity.DombinCombinfr
     */
    @CbllfrSfnsitivf
    publid stbtid nbtivf <T> T
        doPrivilfgfd(PrivilfgfdExdfptionAdtion<T> bdtion)
        tirows PrivilfgfdAdtionExdfption;


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdExdfptionAdtion} witi
     * privilfgfs fnbblfd.  Tif bdtion is pfrformfd witi <i>bll</i> of tif
     * pfrmissions possfssfd by tif dbllfr's protfdtion dombin.
     *
     * <p> If tif bdtion's {@dodf run} mftiod tirows bn <i>undifdkfd</i>
     * fxdfption, it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Tiis mftiod prfsfrvfs tif durrfnt AddfssControlContfxt's
     * DombinCombinfr (wiidi mby bf null) wiilf tif bdtion is pfrformfd.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif
     *                  PrivilfgfdExdfptionAdtion's {@dodf run} mftiod.
     *
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod
     *
     * @fxdfption PrivilfgfdAdtionExdfption if tif spfdififd bdtion's
     *         {@dodf run} mftiod tirfw b <i>difdkfd</i> fxdfption
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdExdfptionAdtion,AddfssControlContfxt)
     * @sff jbvb.sfdurity.DombinCombinfr
     *
     * @sindf 1.6
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfdWitiCombinfr(PrivilfgfdExdfptionAdtion<T> bdtion)
        tirows PrivilfgfdAdtionExdfption
    {
        AddfssControlContfxt bdd = gftStbdkAddfssControlContfxt();
        if (bdd == null) {
            rfturn AddfssControllfr.doPrivilfgfd(bdtion);
        }
        DombinCombinfr dd = bdd.gftAssignfdCombinfr();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion,
                                             prfsfrvfCombinfr(dd, Rfflfdtion.gftCbllfrClbss()));
    }

    /**
     * prfsfrvf tif dombinfr bdross tif doPrivilfgfd dbll
     */
    privbtf stbtid AddfssControlContfxt prfsfrvfCombinfr(DombinCombinfr dombinfr,
                                                         Clbss<?> dbllfr)
    {
        rfturn drfbtfWrbppfr(dombinfr, dbllfr, null, null, null);
    }

    /**
     * Crfbtf b wrbppfr to dontbin tif limitfd privilfgf sdopf dbtb.
     */
    privbtf stbtid AddfssControlContfxt
        drfbtfWrbppfr(DombinCombinfr dombinfr, Clbss<?> dbllfr,
                      AddfssControlContfxt pbrfnt, AddfssControlContfxt dontfxt,
                      Pfrmission[] pfrms)
    {
        ProtfdtionDombin dbllfrPD = gftCbllfrPD(dbllfr);
        // difdk if dbllfr is butiorizfd to drfbtf dontfxt
        if (dontfxt != null && !dontfxt.isAutiorizfd() &&
            Systfm.gftSfdurityMbnbgfr() != null &&
            !dbllfrPD.implifsCrfbtfAddfssControlContfxt())
        {
            rfturn gftInnoduousAdd();
        } flsf {
            rfturn nfw AddfssControlContfxt(dbllfrPD, dombinfr, pbrfnt,
                                            dontfxt, pfrms);
        }
    }

    privbtf stbtid dlbss AddHoldfr {
        // An AddfssControlContfxt witi no grbntfd pfrmissions.
        // Only initiblizfd on dfmbnd wifn gftInnoduousAdd() is dbllfd.
        stbtid finbl AddfssControlContfxt innoduousAdd =
            nfw AddfssControlContfxt(nfw ProtfdtionDombin[] {
                                     nfw ProtfdtionDombin(null, null) });
    }
    privbtf stbtid AddfssControlContfxt gftInnoduousAdd() {
        rfturn AddHoldfr.innoduousAdd;
    }

    privbtf stbtid ProtfdtionDombin gftCbllfrPD(finbl Clbss <?> dbllfr) {
        ProtfdtionDombin dbllfrPd = doPrivilfgfd
            (nfw PrivilfgfdAdtion<ProtfdtionDombin>() {
            publid ProtfdtionDombin run() {
                rfturn dbllfr.gftProtfdtionDombin();
            }
        });

        rfturn dbllfrPd;
    }

    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdExdfptionAdtion} witi
     * privilfgfs fnbblfd bnd rfstridtfd by tif spfdififd
     * {@dodf AddfssControlContfxt}.  Tif bdtion is pfrformfd witi tif
     * intfrsfdtion of tif pfrmissions possfssfd by tif dbllfr's
     * protfdtion dombin, bnd tiosf possfssfd by tif dombins rfprfsfntfd by tif
     * spfdififd {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn <i>undifdkfd</i>
     * fxdfption, it will propbgbtf tirougi tiis mftiod.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif
     *                  PrivilfgfdExdfptionAdtion's {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null}, tifn no bdditionbl rfstridtion is bpplifd.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod
     *
     * @fxdfption PrivilfgfdAdtionExdfption if tif spfdififd bdtion's
     *         {@dodf run} mftiod tirfw b <i>difdkfd</i> fxdfption
     * @fxdfption NullPointfrExdfption if tif bdtion is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdAdtion,AddfssControlContfxt)
     */
    @CbllfrSfnsitivf
    publid stbtid nbtivf <T> T
        doPrivilfgfd(PrivilfgfdExdfptionAdtion<T> bdtion,
                     AddfssControlContfxt dontfxt)
        tirows PrivilfgfdAdtionExdfption;


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdExdfptionAdtion} witi
     * privilfgfs fnbblfd bnd rfstridtfd by tif spfdififd
     * {@dodf AddfssControlContfxt} bnd witi b privilfgf sdopf limitfd by
     * spfdififd {@dodf Pfrmission} brgumfnts.
     *
     * Tif bdtion is pfrformfd witi tif intfrsfdtion of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin, bnd tiosf possfssfd
     * by tif dombins rfprfsfntfd by tif spfdififd
     * {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd) fxdfption,
     * it will propbgbtf tirougi tiis mftiod.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif
     *                  PrivilfgfdExdfptionAdtion's {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null},
     *                tifn no bdditionbl rfstridtion is bpplifd.
     * @pbrbm pfrms tif {@dodf Pfrmission} brgumfnts wiidi limit tif
     *              sdopf of tif dbllfr's privilfgfs. Tif numbfr of brgumfnts
     *              is vbribblf.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @tirows PrivilfgfdAdtionExdfption if tif spfdififd bdtion's
     *         {@dodf run} mftiod tirfw b <i>difdkfd</i> fxdfption
     * @tirows NullPointfrExdfption if bdtion or pfrms or bny flfmfnt of
     *         pfrms is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdAdtion,AddfssControlContfxt)
     *
     * @sindf 1.8
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfd(PrivilfgfdExdfptionAdtion<T> bdtion,
                                     AddfssControlContfxt dontfxt, Pfrmission... pfrms)
        tirows PrivilfgfdAdtionExdfption
    {
        AddfssControlContfxt pbrfnt = gftContfxt();
        if (pfrms == null) {
            tirow nfw NullPointfrExdfption("null pfrmissions pbrbmftfr");
        }
        Clbss <?> dbllfr = Rfflfdtion.gftCbllfrClbss();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion, drfbtfWrbppfr(null, dbllfr, pbrfnt, dontfxt, pfrms));
    }


    /**
     * Pfrforms tif spfdififd {@dodf PrivilfgfdExdfptionAdtion} witi
     * privilfgfs fnbblfd bnd rfstridtfd by tif spfdififd
     * {@dodf AddfssControlContfxt} bnd witi b privilfgf sdopf limitfd by
     * spfdififd {@dodf Pfrmission} brgumfnts.
     *
     * Tif bdtion is pfrformfd witi tif intfrsfdtion of tif pfrmissions
     * possfssfd by tif dbllfr's protfdtion dombin, bnd tiosf possfssfd
     * by tif dombins rfprfsfntfd by tif spfdififd
     * {@dodf AddfssControlContfxt}.
     * <p>
     * If tif bdtion's {@dodf run} mftiod tirows bn (undifdkfd) fxdfption,
     * it will propbgbtf tirougi tiis mftiod.
     *
     * <p> Tiis mftiod prfsfrvfs tif durrfnt AddfssControlContfxt's
     * DombinCombinfr (wiidi mby bf null) wiilf tif bdtion is pfrformfd.
     * <p>
     * If b sfdurity mbnbgfr is instbllfd bnd tif spfdififd
     * {@dodf AddfssControlContfxt} wbs not drfbtfd by systfm dodf bnd tif
     * dbllfr's {@dodf ProtfdtionDombin} ibs not bffn grbntfd tif
     * {@litfrbl "drfbtfAddfssControlContfxt"}
     * {@link jbvb.sfdurity.SfdurityPfrmission}, tifn tif bdtion is pfrformfd
     * witi no pfrmissions.
     *
     * @pbrbm <T> tif typf of tif vbluf rfturnfd by tif
     *                  PrivilfgfdExdfptionAdtion's {@dodf run} mftiod.
     * @pbrbm bdtion tif bdtion to bf pfrformfd.
     * @pbrbm dontfxt bn <i>bddfss dontrol dontfxt</i>
     *                rfprfsfnting tif rfstridtion to bf bpplifd to tif
     *                dbllfr's dombin's privilfgfs bfforf pfrforming
     *                tif spfdififd bdtion.  If tif dontfxt is
     *                {@dodf null},
     *                tifn no bdditionbl rfstridtion is bpplifd.
     * @pbrbm pfrms tif {@dodf Pfrmission} brgumfnts wiidi limit tif
     *              sdopf of tif dbllfr's privilfgfs. Tif numbfr of brgumfnts
     *              is vbribblf.
     *
     * @rfturn tif vbluf rfturnfd by tif bdtion's {@dodf run} mftiod.
     *
     * @tirows PrivilfgfdAdtionExdfption if tif spfdififd bdtion's
     *         {@dodf run} mftiod tirfw b <i>difdkfd</i> fxdfption
     * @tirows NullPointfrExdfption if bdtion or pfrms or bny flfmfnt of
     *         pfrms is {@dodf null}
     *
     * @sff #doPrivilfgfd(PrivilfgfdAdtion)
     * @sff #doPrivilfgfd(PrivilfgfdAdtion,AddfssControlContfxt)
     * @sff jbvb.sfdurity.DombinCombinfr
     *
     * @sindf 1.8
     */
    @CbllfrSfnsitivf
    publid stbtid <T> T doPrivilfgfdWitiCombinfr(PrivilfgfdExdfptionAdtion<T> bdtion,
                                                 AddfssControlContfxt dontfxt,
                                                 Pfrmission... pfrms)
        tirows PrivilfgfdAdtionExdfption
    {
        AddfssControlContfxt pbrfnt = gftContfxt();
        DombinCombinfr dd = pbrfnt.gftCombinfr();
        if (dd == null && dontfxt != null) {
            dd = dontfxt.gftCombinfr();
        }
        if (pfrms == null) {
            tirow nfw NullPointfrExdfption("null pfrmissions pbrbmftfr");
        }
        Clbss <?> dbllfr = Rfflfdtion.gftCbllfrClbss();
        rfturn AddfssControllfr.doPrivilfgfd(bdtion, drfbtfWrbppfr(dd, dbllfr,
            pbrfnt, dontfxt, pfrms));
    }

    /**
     * Rfturns tif AddfssControl dontfxt. i.f., it gfts
     * tif protfdtion dombins of bll tif dbllfrs on tif stbdk,
     * stbrting bt tif first dlbss witi b non-null
     * ProtfdtionDombin.
     *
     * @rfturn tif bddfss dontrol dontfxt bbsfd on tif durrfnt stbdk or
     *         null if tifrf wbs only privilfgfd systfm dodf.
     */

    privbtf stbtid nbtivf AddfssControlContfxt gftStbdkAddfssControlContfxt();


    /**
     * Rfturns tif "inifritfd" AddfssControl dontfxt. Tiis is tif dontfxt
     * tibt fxistfd wifn tif tirfbd wbs drfbtfd. Pbdkbgf privbtf so
     * AddfssControlContfxt dbn usf it.
     */

    stbtid nbtivf AddfssControlContfxt gftInifritfdAddfssControlContfxt();

    /**
     * Tiis mftiod tbkfs b "snbpsiot" of tif durrfnt dblling dontfxt, wiidi
     * indludfs tif durrfnt Tirfbd's inifritfd AddfssControlContfxt bnd bny
     * limitfd privilfgf sdopf, bnd plbdfs it in bn AddfssControlContfxt objfdt.
     * Tiis dontfxt mby tifn bf difdkfd bt b lbtfr point, possibly in bnotifr tirfbd.
     *
     * @sff AddfssControlContfxt
     *
     * @rfturn tif AddfssControlContfxt bbsfd on tif durrfnt dontfxt.
     */

    publid stbtid AddfssControlContfxt gftContfxt()
    {
        AddfssControlContfxt bdd = gftStbdkAddfssControlContfxt();
        if (bdd == null) {
            // bll wf ibd wbs privilfgfd systfm dodf. Wf don't wbnt
            // to rfturn null tiougi, so wf donstrudt b rfbl ACC.
            rfturn nfw AddfssControlContfxt(null, truf);
        } flsf {
            rfturn bdd.optimizf();
        }
    }

    /**
     * Dftfrminfs wiftifr tif bddfss rfqufst indidbtfd by tif
     * spfdififd pfrmission siould bf bllowfd or dfnifd, bbsfd on
     * tif durrfnt AddfssControlContfxt bnd sfdurity polidy.
     * Tiis mftiod quiftly rfturns if tif bddfss rfqufst
     * is pfrmittfd, or tirows bn AddfssControlExdfption otifrwisf. Tif
     * gftPfrmission mftiod of tif AddfssControlExdfption rfturns tif
     * {@dodf pfrm} Pfrmission objfdt instbndf.
     *
     * @pbrbm pfrm tif rfqufstfd pfrmission.
     *
     * @fxdfption AddfssControlExdfption if tif spfdififd pfrmission
     *            is not pfrmittfd, bbsfd on tif durrfnt sfdurity polidy.
     * @fxdfption NullPointfrExdfption if tif spfdififd pfrmission
     *            is {@dodf null} bnd is difdkfd bbsfd on tif
     *            sfdurity polidy durrfntly in ffffdt.
     */

    publid stbtid void difdkPfrmission(Pfrmission pfrm)
        tirows AddfssControlExdfption
    {
        //Systfm.frr.println("difdkPfrmission "+pfrm);
        //Tirfbd.durrfntTirfbd().dumpStbdk();

        if (pfrm == null) {
            tirow nfw NullPointfrExdfption("pfrmission dbn't bf null");
        }

        AddfssControlContfxt stbdk = gftStbdkAddfssControlContfxt();
        // if dontfxt is null, wf ibd privilfgfd systfm dodf on tif stbdk.
        if (stbdk == null) {
            Dfbug dfbug = AddfssControlContfxt.gftDfbug();
            boolfbn dumpDfbug = fblsf;
            if (dfbug != null) {
                dumpDfbug = !Dfbug.isOn("dodfbbsf=");
                dumpDfbug &= !Dfbug.isOn("pfrmission=") ||
                    Dfbug.isOn("pfrmission=" + pfrm.gftClbss().gftCbnonidblNbmf());
            }

            if (dumpDfbug && Dfbug.isOn("stbdk")) {
                Tirfbd.dumpStbdk();
            }

            if (dumpDfbug && Dfbug.isOn("dombin")) {
                dfbug.println("dombin (dontfxt is null)");
            }

            if (dumpDfbug) {
                dfbug.println("bddfss bllowfd "+pfrm);
            }
            rfturn;
        }

        AddfssControlContfxt bdd = stbdk.optimizf();
        bdd.difdkPfrmission(pfrm);
    }
}
