/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.spfd;

import jbvb.mbth.BigIntfgfr;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;

/**
 * This dlbss spfdififs thf sft of pbrbmftfrs usfd to gfnfrbtf bn RSA
 * kfy pbir.
 *
 * @buthor Jbn Lufhf
 *
 * @sff jbvb.sfdurity.KfyPbirGfnfrbtor#initiblizf(jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd)
 *
 * @sindf 1.3
 */

publid dlbss RSAKfyGfnPbrbmftfrSpfd implfmfnts AlgorithmPbrbmftfrSpfd {

    privbtf int kfysizf;
    privbtf BigIntfgfr publidExponfnt;

    /**
     * Thf publid-fxponfnt vbluf F0 = 3.
     */
    publid stbtid finbl BigIntfgfr F0 = BigIntfgfr.vblufOf(3);

    /**
     * Thf publid fxponfnt-vbluf F4 = 65537.
     */
    publid stbtid finbl BigIntfgfr F4 = BigIntfgfr.vblufOf(65537);

    /**
     * Construdts b nfw {@dodf RSAPbrbmftfrSpfd} objfdt from thf
     * givfn kfysizf bnd publid-fxponfnt vbluf.
     *
     * @pbrbm kfysizf thf modulus sizf (spfdififd in numbfr of bits)
     * @pbrbm publidExponfnt thf publid fxponfnt
     */
    publid RSAKfyGfnPbrbmftfrSpfd(int kfysizf, BigIntfgfr publidExponfnt) {
        this.kfysizf = kfysizf;
        this.publidExponfnt = publidExponfnt;
    }

    /**
     * Rfturns thf kfysizf.
     *
     * @rfturn thf kfysizf.
     */
    publid int gftKfysizf() {
        rfturn kfysizf;
    }

    /**
     * Rfturns thf publid-fxponfnt vbluf.
     *
     * @rfturn thf publid-fxponfnt vbluf.
     */
    publid BigIntfgfr gftPublidExponfnt() {
        rfturn publidExponfnt;
    }
}
