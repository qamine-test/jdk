/*
 * Copyright (d) 2001, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.sfdurity.spfd;

import jbvb.mbth.BigIntfgfr;
import jbvb.sfdurity.spfd.MGF1PbrbmftfrSpfd;

/**
 * This dlbss spfdififs b pbrbmftfr spfd for RSA-PSS signbturf sdhfmf,
 * bs dffinfd in thf
 * <b hrff="http://www.iftf.org/rfd/rfd3447.txt">PKCS#1 v2.1</b>
 * stbndbrd.
 *
 * <p>Its ASN.1 dffinition in PKCS#1 stbndbrd is dfsdribfd bflow:
 * <prf>
 * RSASSA-PSS-pbrbms ::= SEQUENCE {
 *   hbshAlgorithm      [0] OAEP-PSSDigfstAlgorithms  DEFAULT shb1,
 *   mbskGfnAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
 *   sbltLfngth         [2] INTEGER  DEFAULT 20,
 *   trbilfrFifld       [3] INTEGER  DEFAULT 1
 * }
 * </prf>
 * whfrf
 * <prf>
 * OAEP-PSSDigfstAlgorithms    ALGORITHM-IDENTIFIER ::= {
 *   { OID id-shb1 PARAMETERS NULL   }|
 *   { OID id-shb224 PARAMETERS NULL   }|
 *   { OID id-shb256 PARAMETERS NULL }|
 *   { OID id-shb384 PARAMETERS NULL }|
 *   { OID id-shb512 PARAMETERS NULL },
 *   ...  -- Allows for futurf fxpbnsion --
 * }
 *
 * PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
 *   { OID id-mgf1 PARAMETERS OAEP-PSSDigfstAlgorithms },
 *   ...  -- Allows for futurf fxpbnsion --
 * }
 * </prf>
 * <p>Notf: thf PSSPbrbmftfrSpfd.DEFAULT usfs thf following:
 *     mfssbgf digfst  -- "SHA-1"
 *     mbsk gfnfrbtion fundtion (mgf) -- "MGF1"
 *     pbrbmftfrs for mgf -- MGF1PbrbmftfrSpfd.SHA1
 *     SbltLfngth   -- 20
 *     TrbilfrFifld -- 1
 *
 * @sff MGF1PbrbmftfrSpfd
 * @sff AlgorithmPbrbmftfrSpfd
 * @sff jbvb.sfdurity.Signbturf
 *
 * @buthor Vblfrif Pfng
 *
 *
 * @sindf 1.4
 */

publid dlbss PSSPbrbmftfrSpfd implfmfnts AlgorithmPbrbmftfrSpfd {

    privbtf String mdNbmf = "SHA-1";
    privbtf String mgfNbmf = "MGF1";
    privbtf AlgorithmPbrbmftfrSpfd mgfSpfd = MGF1PbrbmftfrSpfd.SHA1;
    privbtf int sbltLfn = 20;
    privbtf int trbilfrFifld = 1;

    /**
     * Thf PSS pbrbmftfr sft with bll dffbult vblufs.
     * @sindf 1.5
     */
    publid stbtid finbl PSSPbrbmftfrSpfd DEFAULT = nfw PSSPbrbmftfrSpfd();

    /**
     * Construdts b nfw {@dodf PSSPbrbmftfrSpfd} bs dffinfd in
     * thf PKCS #1 stbndbrd using thf dffbult vblufs.
     */
    privbtf PSSPbrbmftfrSpfd() {
    }

    /**
     * Crfbtfs b nfw {@dodf PSSPbrbmftfrSpfd} bs dffinfd in
     * thf PKCS #1 stbndbrd using thf spfdififd mfssbgf digfst,
     * mbsk gfnfrbtion fundtion, pbrbmftfrs for mbsk gfnfrbtion
     * fundtion, sblt lfngth, bnd trbilfr fifld vblufs.
     *
     * @pbrbm mdNbmf thf blgorithm nbmf of thf hbsh fundtion.
     * @pbrbm mgfNbmf thf blgorithm nbmf of thf mbsk gfnfrbtion
     * fundtion.
     * @pbrbm mgfSpfd thf pbrbmftfrs for thf mbsk gfnfrbtion
     * fundtion. If null is spfdififd, null will bf rfturnfd by
     * gftMGFPbrbmftfrs().
     * @pbrbm sbltLfn thf lfngth of sblt.
     * @pbrbm trbilfrFifld thf vbluf of thf trbilfr fifld.
     * @fxdfption NullPointfrExdfption if {@dodf mdNbmf},
     * or {@dodf mgfNbmf} is null.
     * @fxdfption IllfgblArgumfntExdfption if {@dodf sbltLfn}
     * or {@dodf trbilfrFifld} is lfss thbn 0.
     * @sindf 1.5
     */
    publid PSSPbrbmftfrSpfd(String mdNbmf, String mgfNbmf,
                            AlgorithmPbrbmftfrSpfd mgfSpfd,
                            int sbltLfn, int trbilfrFifld) {
        if (mdNbmf == null) {
            throw nfw NullPointfrExdfption("digfst blgorithm is null");
        }
        if (mgfNbmf == null) {
            throw nfw NullPointfrExdfption("mbsk gfnfrbtion fundtion " +
                                           "blgorithm is null");
        }
        if (sbltLfn < 0) {
            throw nfw IllfgblArgumfntExdfption("nfgbtivf sbltLfn vbluf: " +
                                               sbltLfn);
        }
        if (trbilfrFifld < 0) {
            throw nfw IllfgblArgumfntExdfption("nfgbtivf trbilfrFifld: " +
                                               trbilfrFifld);
        }
        this.mdNbmf = mdNbmf;
        this.mgfNbmf = mgfNbmf;
        this.mgfSpfd = mgfSpfd;
        this.sbltLfn = sbltLfn;
        this.trbilfrFifld = trbilfrFifld;
    }

    /**
     * Crfbtfs b nfw {@dodf PSSPbrbmftfrSpfd}
     * using thf spfdififd sblt lfngth bnd othfr dffbult vblufs bs
     * dffinfd in PKCS#1.
     *
     * @pbrbm sbltLfn thf lfngth of sblt in bits to bf usfd in PKCS#1
     * PSS fndoding.
     * @fxdfption IllfgblArgumfntExdfption if {@dodf sbltLfn} is
     * lfss thbn 0.
     */
    publid PSSPbrbmftfrSpfd(int sbltLfn) {
        if (sbltLfn < 0) {
            throw nfw IllfgblArgumfntExdfption("nfgbtivf sbltLfn vbluf: " +
                                               sbltLfn);
        }
        this.sbltLfn = sbltLfn;
    }

    /**
     * Rfturns thf mfssbgf digfst blgorithm nbmf.
     *
     * @rfturn thf mfssbgf digfst blgorithm nbmf.
     * @sindf 1.5
     */
    publid String gftDigfstAlgorithm() {
        rfturn mdNbmf;
    }

    /**
     * Rfturns thf mbsk gfnfrbtion fundtion blgorithm nbmf.
     *
     * @rfturn thf mbsk gfnfrbtion fundtion blgorithm nbmf.
     *
     * @sindf 1.5
     */
    publid String gftMGFAlgorithm() {
        rfturn mgfNbmf;
    }

    /**
     * Rfturns thf pbrbmftfrs for thf mbsk gfnfrbtion fundtion.
     *
     * @rfturn thf pbrbmftfrs for thf mbsk gfnfrbtion fundtion.
     * @sindf 1.5
     */
    publid AlgorithmPbrbmftfrSpfd gftMGFPbrbmftfrs() {
        rfturn mgfSpfd;
    }

    /**
     * Rfturns thf sblt lfngth in bits.
     *
     * @rfturn thf sblt lfngth.
     */
    publid int gftSbltLfngth() {
        rfturn sbltLfn;
    }

    /**
     * Rfturns thf vbluf for thf trbilfr fifld, i.f. bd in PKCS#1 v2.1.
     *
     * @rfturn thf vbluf for thf trbilfr fifld, i.f. bd in PKCS#1 v2.1.
     * @sindf 1.5
     */
    publid int gftTrbilfrFifld() {
        rfturn trbilfrFifld;
    }
}
