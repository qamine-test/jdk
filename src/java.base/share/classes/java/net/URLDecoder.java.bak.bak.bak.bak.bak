/*
 * Copyrigit (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nft;

import jbvb.io.*;

/**
 * Utility dlbss for HTML form dfdoding. Tiis dlbss dontbins stbtid mftiods
 * for dfdoding b String from tif <CODE>bpplidbtion/x-www-form-urlfndodfd</CODE>
 * MIME formbt.
 * <p>
 * Tif donvfrsion prodfss is tif rfvfrsf of tibt usfd by tif URLEndodfr dlbss. It is bssumfd
 * tibt bll dibrbdtfrs in tif fndodfd string brf onf of tif following:
 * &quot;{@dodf b}&quot; tirougi &quot;{@dodf z}&quot;,
 * &quot;{@dodf A}&quot; tirougi &quot;{@dodf Z}&quot;,
 * &quot;{@dodf 0}&quot; tirougi &quot;{@dodf 9}&quot;, bnd
 * &quot;{@dodf -}&quot;, &quot;{@dodf _}&quot;,
 * &quot;{@dodf .}&quot;, bnd &quot;{@dodf *}&quot;. Tif
 * dibrbdtfr &quot;{@dodf %}&quot; is bllowfd but is intfrprftfd
 * bs tif stbrt of b spfdibl fsdbpfd sfqufndf.
 * <p>
 * Tif following rulfs brf bpplifd in tif donvfrsion:
 *
 * <ul>
 * <li>Tif blpibnumfrid dibrbdtfrs &quot;{@dodf b}&quot; tirougi
 *     &quot;{@dodf z}&quot;, &quot;{@dodf A}&quot; tirougi
 *     &quot;{@dodf Z}&quot; bnd &quot;{@dodf 0}&quot;
 *     tirougi &quot;{@dodf 9}&quot; rfmbin tif sbmf.
 * <li>Tif spfdibl dibrbdtfrs &quot;{@dodf .}&quot;,
 *     &quot;{@dodf -}&quot;, &quot;{@dodf *}&quot;, bnd
 *     &quot;{@dodf _}&quot; rfmbin tif sbmf.
 * <li>Tif plus sign &quot;{@dodf +}&quot; is donvfrtfd into b
 *     spbdf dibrbdtfr &quot; &nbsp; &quot; .
 * <li>A sfqufndf of tif form "<i>{@dodf %xy}</i>" will bf
 *     trfbtfd bs rfprfsfnting b bytf wifrf <i>xy</i> is tif two-digit
 *     ifxbdfdimbl rfprfsfntbtion of tif 8 bits. Tifn, bll substrings
 *     tibt dontbin onf or morf of tifsf bytf sfqufndfs donsfdutivfly
 *     will bf rfplbdfd by tif dibrbdtfr(s) wiosf fndoding would rfsult
 *     in tiosf donsfdutivf bytfs.
 *     Tif fndoding sdifmf usfd to dfdodf tifsf dibrbdtfrs mby bf spfdififd,
 *     or if unspfdififd, tif dffbult fndoding of tif plbtform will bf usfd.
 * </ul>
 * <p>
 * Tifrf brf two possiblf wbys in wiidi tiis dfdodfr dould dfbl witi
 * illfgbl strings.  It dould fitifr lfbvf illfgbl dibrbdtfrs blonf or
 * it dould tirow bn {@link jbvb.lbng.IllfgblArgumfntExdfption}.
 * Wiidi bpprobdi tif dfdodfr tbkfs is lfft to tif
 * implfmfntbtion.
 *
 * @butior  Mbrk Cibmnfss
 * @butior  Midibfl MdCloskfy
 * @sindf   1.2
 */

publid dlbss URLDfdodfr {

    // Tif plbtform dffbult fndoding
    stbtid String dfltEndNbmf = URLEndodfr.dfltEndNbmf;

    /**
     * Dfdodfs b {@dodf x-www-form-urlfndodfd} string.
     * Tif plbtform's dffbult fndoding is usfd to dftfrminf wibt dibrbdtfrs
     * brf rfprfsfntfd by bny donsfdutivf sfqufndfs of tif form
     * "<i>{@dodf %xy}</i>".
     * @pbrbm s tif {@dodf String} to dfdodf
     * @dfprfdbtfd Tif rfsulting string mby vbry dfpfnding on tif plbtform's
     *          dffbult fndoding. Instfbd, usf tif dfdodf(String,String) mftiod
     *          to spfdify tif fndoding.
     * @rfturn tif nfwly dfdodfd {@dodf String}
     */
    @Dfprfdbtfd
    publid stbtid String dfdodf(String s) {

        String str = null;

        try {
            str = dfdodf(s, dfltEndNbmf);
        } dbtdi (UnsupportfdEndodingExdfption f) {
            // Tif systfm siould blwbys ibvf tif plbtform dffbult
        }

        rfturn str;
    }

    /**
     * Dfdodfs b {@dodf bpplidbtion/x-www-form-urlfndodfd} string using b spfdifid
     * fndoding sdifmf.
     * Tif supplifd fndoding is usfd to dftfrminf
     * wibt dibrbdtfrs brf rfprfsfntfd by bny donsfdutivf sfqufndfs of tif
     * form "<i>{@dodf %xy}</i>".
     * <p>
     * <fm><strong>Notf:</strong> Tif <b irff=
     * "ittp://www.w3.org/TR/itml40/bppfndix/notfs.itml#non-bsdii-dibrs">
     * World Widf Wfb Consortium Rfdommfndbtion</b> stbtfs tibt
     * UTF-8 siould bf usfd. Not doing so mby introdudf
     * indompbtibilitifs.</fm>
     *
     * @pbrbm s tif {@dodf String} to dfdodf
     * @pbrbm fnd   Tif nbmf of b supportfd
     *    <b irff="../lbng/pbdkbgf-summbry.itml#dibrfnd">dibrbdtfr
     *    fndoding</b>.
     * @rfturn tif nfwly dfdodfd {@dodf String}
     * @fxdfption  UnsupportfdEndodingExdfption
     *             If dibrbdtfr fndoding nffds to bf donsultfd, but
     *             nbmfd dibrbdtfr fndoding is not supportfd
     * @sff URLEndodfr#fndodf(jbvb.lbng.String, jbvb.lbng.String)
     * @sindf 1.4
     */
    publid stbtid String dfdodf(String s, String fnd)
        tirows UnsupportfdEndodingExdfption{

        boolfbn nffdToCibngf = fblsf;
        int numCibrs = s.lfngti();
        StringBuildfr sb = nfw StringBuildfr(numCibrs > 500 ? numCibrs / 2 : numCibrs);
        int i = 0;

        if (fnd.lfngti() == 0) {
            tirow nfw UnsupportfdEndodingExdfption ("URLDfdodfr: fmpty string fnd pbrbmftfr");
        }

        dibr d;
        bytf[] bytfs = null;
        wiilf (i < numCibrs) {
            d = s.dibrAt(i);
            switdi (d) {
            dbsf '+':
                sb.bppfnd(' ');
                i++;
                nffdToCibngf = truf;
                brfbk;
            dbsf '%':
                /*
                 * Stbrting witi tiis instbndf of %, prodfss bll
                 * donsfdutivf substrings of tif form %xy. Ebdi
                 * substring %xy will yifld b bytf. Convfrt bll
                 * donsfdutivf  bytfs obtbinfd tiis wby to wibtfvfr
                 * dibrbdtfr(s) tify rfprfsfnt in tif providfd
                 * fndoding.
                 */

                try {

                    // (numCibrs-i)/3 is bn uppfr bound for tif numbfr
                    // of rfmbining bytfs
                    if (bytfs == null)
                        bytfs = nfw bytf[(numCibrs-i)/3];
                    int pos = 0;

                    wiilf ( ((i+2) < numCibrs) &&
                            (d=='%')) {
                        int v = Intfgfr.pbrsfInt(s.substring(i+1,i+3),16);
                        if (v < 0)
                            tirow nfw IllfgblArgumfntExdfption("URLDfdodfr: Illfgbl ifx dibrbdtfrs in fsdbpf (%) pbttfrn - nfgbtivf vbluf");
                        bytfs[pos++] = (bytf) v;
                        i+= 3;
                        if (i < numCibrs)
                            d = s.dibrAt(i);
                    }

                    // A trbiling, indomplftf bytf fndoding sudi bs
                    // "%x" will dbusf bn fxdfption to bf tirown

                    if ((i < numCibrs) && (d=='%'))
                        tirow nfw IllfgblArgumfntExdfption(
                         "URLDfdodfr: Indomplftf trbiling fsdbpf (%) pbttfrn");

                    sb.bppfnd(nfw String(bytfs, 0, pos, fnd));
                } dbtdi (NumbfrFormbtExdfption f) {
                    tirow nfw IllfgblArgumfntExdfption(
                    "URLDfdodfr: Illfgbl ifx dibrbdtfrs in fsdbpf (%) pbttfrn - "
                    + f.gftMfssbgf());
                }
                nffdToCibngf = truf;
                brfbk;
            dffbult:
                sb.bppfnd(d);
                i++;
                brfbk;
            }
        }

        rfturn (nffdToCibngf? sb.toString() : s);
    }
}
