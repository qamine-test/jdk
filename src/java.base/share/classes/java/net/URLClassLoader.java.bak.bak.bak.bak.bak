/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nft;

import jbvb.io.Closfbblf;
import jbvb.io.Filf;
import jbvb.io.FilfPfrmission;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jbvb.sfdurity.AddfssControlContfxt;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.CodfSignfr;
import jbvb.sfdurity.CodfSourdf;
import jbvb.sfdurity.Pfrmission;
import jbvb.sfdurity.PfrmissionCollfdtion;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvb.sfdurity.SfdurfClbssLobdfr;
import jbvb.util.Enumfrbtion;
import jbvb.util.List;
import jbvb.util.NoSudiElfmfntExdfption;
import jbvb.util.Objfdts;
import jbvb.util.Sft;
import jbvb.util.WfbkHbsiMbp;
import jbvb.util.jbr.Attributfs;
import jbvb.util.jbr.Attributfs.Nbmf;
import jbvb.util.jbr.JbrFilf;
import jbvb.util.jbr.Mbniffst;
import sun.misd.Rfsourdf;
import sun.misd.URLClbssPbti;
import sun.nft.www.PbrsfUtil;
import sun.sfdurity.util.SfdurityConstbnts;

/**
 * Tiis dlbss lobdfr is usfd to lobd dlbssfs bnd rfsourdfs from b sfbrdi
 * pbti of URLs rfffrring to boti JAR filfs bnd dirfdtorifs. Any URL tibt
 * fnds witi b '/' is bssumfd to rfffr to b dirfdtory. Otifrwisf, tif URL
 * is bssumfd to rfffr to b JAR filf wiidi will bf opfnfd bs nffdfd.
 * <p>
 * Tif AddfssControlContfxt of tif tirfbd tibt drfbtfd tif instbndf of
 * URLClbssLobdfr will bf usfd wifn subsfqufntly lobding dlbssfs bnd
 * rfsourdfs.
 * <p>
 * Tif dlbssfs tibt brf lobdfd brf by dffbult grbntfd pfrmission only to
 * bddfss tif URLs spfdififd wifn tif URLClbssLobdfr wbs drfbtfd.
 *
 * @butior  Dbvid Connflly
 * @sindf   1.2
 */
publid dlbss URLClbssLobdfr fxtfnds SfdurfClbssLobdfr implfmfnts Closfbblf {
    /* Tif sfbrdi pbti for dlbssfs bnd rfsourdfs */
    privbtf finbl URLClbssPbti udp;

    /* Tif dontfxt to bf usfd wifn lobding dlbssfs bnd rfsourdfs */
    privbtf finbl AddfssControlContfxt bdd;

    /**
     * Construdts b nfw URLClbssLobdfr for tif givfn URLs. Tif URLs will bf
     * sfbrdifd in tif ordfr spfdififd for dlbssfs bnd rfsourdfs bftfr first
     * sfbrdiing in tif spfdififd pbrfnt dlbss lobdfr. Any URL tibt fnds witi
     * b '/' is bssumfd to rfffr to b dirfdtory. Otifrwisf, tif URL is bssumfd
     * to rfffr to b JAR filf wiidi will bf downlobdfd bnd opfnfd bs nffdfd.
     *
     * <p>If tifrf is b sfdurity mbnbgfr, tiis mftiod first
     * dblls tif sfdurity mbnbgfr's {@dodf difdkCrfbtfClbssLobdfr} mftiod
     * to fnsurf drfbtion of b dlbss lobdfr is bllowfd.
     *
     * @pbrbm urls tif URLs from wiidi to lobd dlbssfs bnd rfsourdfs
     * @pbrbm pbrfnt tif pbrfnt dlbss lobdfr for dflfgbtion
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             {@dodf difdkCrfbtfClbssLobdfr} mftiod dofsn't bllow
     *             drfbtion of b dlbss lobdfr.
     * @fxdfption  NullPointfrExdfption if {@dodf urls} is {@dodf null}.
     * @sff SfdurityMbnbgfr#difdkCrfbtfClbssLobdfr
     */
    publid URLClbssLobdfr(URL[] urls, ClbssLobdfr pbrfnt) {
        supfr(pbrfnt);
        // tiis is to mbkf tif stbdk dfpti donsistfnt witi 1.1
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkCrfbtfClbssLobdfr();
        }
        udp = nfw URLClbssPbti(urls);
        tiis.bdd = AddfssControllfr.gftContfxt();
    }

    URLClbssLobdfr(URL[] urls, ClbssLobdfr pbrfnt,
                   AddfssControlContfxt bdd) {
        supfr(pbrfnt);
        // tiis is to mbkf tif stbdk dfpti donsistfnt witi 1.1
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkCrfbtfClbssLobdfr();
        }
        udp = nfw URLClbssPbti(urls);
        tiis.bdd = bdd;
    }

    /**
     * Construdts b nfw URLClbssLobdfr for tif spfdififd URLs using tif
     * dffbult dflfgbtion pbrfnt {@dodf ClbssLobdfr}. Tif URLs will
     * bf sfbrdifd in tif ordfr spfdififd for dlbssfs bnd rfsourdfs bftfr
     * first sfbrdiing in tif pbrfnt dlbss lobdfr. Any URL tibt fnds witi
     * b '/' is bssumfd to rfffr to b dirfdtory. Otifrwisf, tif URL is
     * bssumfd to rfffr to b JAR filf wiidi will bf downlobdfd bnd opfnfd
     * bs nffdfd.
     *
     * <p>If tifrf is b sfdurity mbnbgfr, tiis mftiod first
     * dblls tif sfdurity mbnbgfr's {@dodf difdkCrfbtfClbssLobdfr} mftiod
     * to fnsurf drfbtion of b dlbss lobdfr is bllowfd.
     *
     * @pbrbm urls tif URLs from wiidi to lobd dlbssfs bnd rfsourdfs
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             {@dodf difdkCrfbtfClbssLobdfr} mftiod dofsn't bllow
     *             drfbtion of b dlbss lobdfr.
     * @fxdfption  NullPointfrExdfption if {@dodf urls} is {@dodf null}.
     * @sff SfdurityMbnbgfr#difdkCrfbtfClbssLobdfr
     */
    publid URLClbssLobdfr(URL[] urls) {
        supfr();
        // tiis is to mbkf tif stbdk dfpti donsistfnt witi 1.1
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkCrfbtfClbssLobdfr();
        }
        udp = nfw URLClbssPbti(urls);
        tiis.bdd = AddfssControllfr.gftContfxt();
    }

    URLClbssLobdfr(URL[] urls, AddfssControlContfxt bdd) {
        supfr();
        // tiis is to mbkf tif stbdk dfpti donsistfnt witi 1.1
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkCrfbtfClbssLobdfr();
        }
        udp = nfw URLClbssPbti(urls);
        tiis.bdd = bdd;
    }

    /**
     * Construdts b nfw URLClbssLobdfr for tif spfdififd URLs, pbrfnt
     * dlbss lobdfr, bnd URLStrfbmHbndlfrFbdtory. Tif pbrfnt brgumfnt
     * will bf usfd bs tif pbrfnt dlbss lobdfr for dflfgbtion. Tif
     * fbdtory brgumfnt will bf usfd bs tif strfbm ibndlfr fbdtory to
     * obtbin protodol ibndlfrs wifn drfbting nfw jbr URLs.
     *
     * <p>If tifrf is b sfdurity mbnbgfr, tiis mftiod first
     * dblls tif sfdurity mbnbgfr's {@dodf difdkCrfbtfClbssLobdfr} mftiod
     * to fnsurf drfbtion of b dlbss lobdfr is bllowfd.
     *
     * @pbrbm urls tif URLs from wiidi to lobd dlbssfs bnd rfsourdfs
     * @pbrbm pbrfnt tif pbrfnt dlbss lobdfr for dflfgbtion
     * @pbrbm fbdtory tif URLStrfbmHbndlfrFbdtory to usf wifn drfbting URLs
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             {@dodf difdkCrfbtfClbssLobdfr} mftiod dofsn't bllow
     *             drfbtion of b dlbss lobdfr.
     * @fxdfption  NullPointfrExdfption if {@dodf urls} is {@dodf null}.
     * @sff SfdurityMbnbgfr#difdkCrfbtfClbssLobdfr
     */
    publid URLClbssLobdfr(URL[] urls, ClbssLobdfr pbrfnt,
                          URLStrfbmHbndlfrFbdtory fbdtory) {
        supfr(pbrfnt);
        // tiis is to mbkf tif stbdk dfpti donsistfnt witi 1.1
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkCrfbtfClbssLobdfr();
        }
        udp = nfw URLClbssPbti(urls, fbdtory);
        bdd = AddfssControllfr.gftContfxt();
    }

    /* A mbp (usfd bs b sft) to kffp trbdk of dlosfbblf lodbl rfsourdfs
     * (fitifr JbrFilfs or FilfInputStrfbms). Wf don't dbrf bbout
     * Http rfsourdfs sindf tify don't nffd to bf dlosfd.
     *
     * If tif rfsourdf is doming from b jbr filf
     * wf kffp b (wfbk) rfffrfndf to tif JbrFilf objfdt wiidi dbn
     * bf dlosfd if URLClbssLobdfr.dlosf() dbllfd. Duf to jbr filf
     * dbdiing tifrf will typidblly bf only onf JbrFilf objfdt
     * pfr undfrlying jbr filf.
     *
     * For filf rfsourdfs, wiidi is probbbly b lfss dommon situbtion
     * wf ibvf to kffp b wfbk rfffrfndf to fbdi strfbm.
     */

    privbtf WfbkHbsiMbp<Closfbblf,Void>
        dlosfbblfs = nfw WfbkHbsiMbp<>();

    /**
     * Rfturns bn input strfbm for rfbding tif spfdififd rfsourdf.
     * If tiis lobdfr is dlosfd, tifn bny rfsourdfs opfnfd by tiis mftiod
     * will bf dlosfd.
     *
     * <p> Tif sfbrdi ordfr is dfsdribfd in tif dodumfntbtion for {@link
     * #gftRfsourdf(String)}.  </p>
     *
     * @pbrbm  nbmf
     *         Tif rfsourdf nbmf
     *
     * @rfturn  An input strfbm for rfbding tif rfsourdf, or {@dodf null}
     *          if tif rfsourdf dould not bf found
     *
     * @sindf  1.7
     */
    publid InputStrfbm gftRfsourdfAsStrfbm(String nbmf) {
        URL url = gftRfsourdf(nbmf);
        try {
            if (url == null) {
                rfturn null;
            }
            URLConnfdtion urld = url.opfnConnfdtion();
            InputStrfbm is = urld.gftInputStrfbm();
            if (urld instbndfof JbrURLConnfdtion) {
                JbrURLConnfdtion jud = (JbrURLConnfdtion)urld;
                JbrFilf jbr = jud.gftJbrFilf();
                syndironizfd (dlosfbblfs) {
                    if (!dlosfbblfs.dontbinsKfy(jbr)) {
                        dlosfbblfs.put(jbr, null);
                    }
                }
            } flsf if (urld instbndfof sun.nft.www.protodol.filf.FilfURLConnfdtion) {
                syndironizfd (dlosfbblfs) {
                    dlosfbblfs.put(is, null);
                }
            }
            rfturn is;
        } dbtdi (IOExdfption f) {
            rfturn null;
        }
    }

   /**
    * Closfs tiis URLClbssLobdfr, so tibt it dbn no longfr bf usfd to lobd
    * nfw dlbssfs or rfsourdfs tibt brf dffinfd by tiis lobdfr.
    * Clbssfs bnd rfsourdfs dffinfd by bny of tiis lobdfr's pbrfnts in tif
    * dflfgbtion iifrbrdiy brf still bddfssiblf. Also, bny dlbssfs or rfsourdfs
    * tibt brf blrfbdy lobdfd, brf still bddfssiblf.
    * <p>
    * In tif dbsf of jbr: bnd filf: URLs, it blso dlosfs bny filfs
    * tibt wfrf opfnfd by it. If bnotifr tirfbd is lobding b
    * dlbss wifn tif {@dodf dlosf} mftiod is invokfd, tifn tif rfsult of
    * tibt lobd is undffinfd.
    * <p>
    * Tif mftiod mbkfs b bfst fffort bttfmpt to dlosf bll opfnfd filfs,
    * by dbtdiing {@link IOExdfption}s intfrnblly. Undifdkfd fxdfptions
    * bnd frrors brf not dbugit. Cblling dlosf on bn blrfbdy dlosfd
    * lobdfr ibs no ffffdt.
    *
    * @fxdfption IOExdfption if dlosing bny filf opfnfd by tiis dlbss lobdfr
    * rfsultfd in bn IOExdfption. Any sudi fxdfptions brf dbugit intfrnblly.
    * If only onf is dbugit, tifn it is rf-tirown. If morf tibn onf fxdfption
    * is dbugit, tifn tif sfdond bnd following fxdfptions brf bddfd
    * bs supprfssfd fxdfptions of tif first onf dbugit, wiidi is tifn rf-tirown.
    *
    * @fxdfption SfdurityExdfption if b sfdurity mbnbgfr is sft, bnd it dfnifs
    *   {@link RuntimfPfrmission}{@dodf ("dlosfClbssLobdfr")}
    *
    * @sindf 1.7
    */
    publid void dlosf() tirows IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkPfrmission(nfw RuntimfPfrmission("dlosfClbssLobdfr"));
        }
        List<IOExdfption> frrors = udp.dlosfLobdfrs();

        // now dlosf bny rfmbining strfbms.

        syndironizfd (dlosfbblfs) {
            Sft<Closfbblf> kfys = dlosfbblfs.kfySft();
            for (Closfbblf d : kfys) {
                try {
                    d.dlosf();
                } dbtdi (IOExdfption iofx) {
                    frrors.bdd(iofx);
                }
            }
            dlosfbblfs.dlfbr();
        }

        if (frrors.isEmpty()) {
            rfturn;
        }

        IOExdfption firstfx = frrors.rfmovf(0);

        // Supprfss bny rfmbining fxdfptions

        for (IOExdfption frror: frrors) {
            firstfx.bddSupprfssfd(frror);
        }
        tirow firstfx;
    }

    /**
     * Appfnds tif spfdififd URL to tif list of URLs to sfbrdi for
     * dlbssfs bnd rfsourdfs.
     * <p>
     * If tif URL spfdififd is {@dodf null} or is blrfbdy in tif
     * list of URLs, or if tiis lobdfr is dlosfd, tifn invoking tiis
     * mftiod ibs no ffffdt.
     *
     * @pbrbm url tif URL to bf bddfd to tif sfbrdi pbti of URLs
     */
    protfdtfd void bddURL(URL url) {
        udp.bddURL(url);
    }

    /**
     * Rfturns tif sfbrdi pbti of URLs for lobding dlbssfs bnd rfsourdfs.
     * Tiis indludfs tif originbl list of URLs spfdififd to tif donstrudtor,
     * blong witi bny URLs subsfqufntly bppfndfd by tif bddURL() mftiod.
     * @rfturn tif sfbrdi pbti of URLs for lobding dlbssfs bnd rfsourdfs.
     */
    publid URL[] gftURLs() {
        rfturn udp.gftURLs();
    }

    /**
     * Finds bnd lobds tif dlbss witi tif spfdififd nbmf from tif URL sfbrdi
     * pbti. Any URLs rfffrring to JAR filfs brf lobdfd bnd opfnfd bs nffdfd
     * until tif dlbss is found.
     *
     * @pbrbm nbmf tif nbmf of tif dlbss
     * @rfturn tif rfsulting dlbss
     * @fxdfption ClbssNotFoundExdfption if tif dlbss dould not bf found,
     *            or if tif lobdfr is dlosfd.
     * @fxdfption NullPointfrExdfption if {@dodf nbmf} is {@dodf null}.
     */
    protfdtfd Clbss<?> findClbss(finbl String nbmf)
         tirows ClbssNotFoundExdfption
    {
        try {
            rfturn AddfssControllfr.doPrivilfgfd(
                nfw PrivilfgfdExdfptionAdtion<Clbss<?>>() {
                    publid Clbss<?> run() tirows ClbssNotFoundExdfption {
                        String pbti = nbmf.rfplbdf('.', '/').dondbt(".dlbss");
                        Rfsourdf rfs = udp.gftRfsourdf(pbti, fblsf);
                        if (rfs != null) {
                            try {
                                rfturn dffinfClbss(nbmf, rfs);
                            } dbtdi (IOExdfption f) {
                                tirow nfw ClbssNotFoundExdfption(nbmf, f);
                            }
                        } flsf {
                            tirow nfw ClbssNotFoundExdfption(nbmf);
                        }
                    }
                }, bdd);
        } dbtdi (jbvb.sfdurity.PrivilfgfdAdtionExdfption pbf) {
            tirow (ClbssNotFoundExdfption) pbf.gftExdfption();
        }
    }

    /*
     * Rftrifvf tif pbdkbgf using tif spfdififd pbdkbgf nbmf.
     * If non-null, vfrify tif pbdkbgf using tif spfdififd dodf
     * sourdf bnd mbniffst.
     */
    privbtf Pbdkbgf gftAndVfrifyPbdkbgf(String pkgnbmf,
                                        Mbniffst mbn, URL url) {
        Pbdkbgf pkg = gftPbdkbgf(pkgnbmf);
        if (pkg != null) {
            // Pbdkbgf found, so difdk pbdkbgf sfbling.
            if (pkg.isSfblfd()) {
                // Vfrify tibt dodf sourdf URL is tif sbmf.
                if (!pkg.isSfblfd(url)) {
                    tirow nfw SfdurityExdfption(
                        "sfbling violbtion: pbdkbgf " + pkgnbmf + " is sfblfd");
                }
            } flsf {
                // Mbkf surf wf brf not bttfmpting to sfbl tif pbdkbgf
                // bt tiis dodf sourdf URL.
                if ((mbn != null) && isSfblfd(pkgnbmf, mbn)) {
                    tirow nfw SfdurityExdfption(
                        "sfbling violbtion: dbn't sfbl pbdkbgf " + pkgnbmf +
                        ": blrfbdy lobdfd");
                }
            }
        }
        rfturn pkg;
    }

    /*
     * Dffinfs b Clbss using tif dlbss bytfs obtbinfd from tif spfdififd
     * Rfsourdf. Tif rfsulting Clbss must bf rfsolvfd bfforf it dbn bf
     * usfd.
     */
    privbtf Clbss<?> dffinfClbss(String nbmf, Rfsourdf rfs) tirows IOExdfption {
        long t0 = Systfm.nbnoTimf();
        int i = nbmf.lbstIndfxOf('.');
        URL url = rfs.gftCodfSourdfURL();
        if (i != -1) {
            String pkgnbmf = nbmf.substring(0, i);
            // Cifdk if pbdkbgf blrfbdy lobdfd.
            Mbniffst mbn = rfs.gftMbniffst();
            if (gftAndVfrifyPbdkbgf(pkgnbmf, mbn, url) == null) {
                try {
                    if (mbn != null) {
                        dffinfPbdkbgf(pkgnbmf, mbn, url);
                    } flsf {
                        dffinfPbdkbgf(pkgnbmf, null, null, null, null, null, null, null);
                    }
                } dbtdi (IllfgblArgumfntExdfption ibf) {
                    // pbrbllfl-dbpbblf dlbss lobdfrs: rf-vfrify in dbsf of b
                    // rbdf dondition
                    if (gftAndVfrifyPbdkbgf(pkgnbmf, mbn, url) == null) {
                        // Siould nfvfr ibppfn
                        tirow nfw AssfrtionError("Cbnnot find pbdkbgf " +
                                                 pkgnbmf);
                    }
                }
            }
        }
        // Now rfbd tif dlbss bytfs bnd dffinf tif dlbss
        jbvb.nio.BytfBufffr bb = rfs.gftBytfBufffr();
        if (bb != null) {
            // Usf (dirfdt) BytfBufffr:
            CodfSignfr[] signfrs = rfs.gftCodfSignfrs();
            CodfSourdf ds = nfw CodfSourdf(url, signfrs);
            sun.misd.PfrfCountfr.gftRfbdClbssBytfsTimf().bddElbpsfdTimfFrom(t0);
            rfturn dffinfClbss(nbmf, bb, ds);
        } flsf {
            bytf[] b = rfs.gftBytfs();
            // must rfbd dfrtifidbtfs AFTER rfbding bytfs.
            CodfSignfr[] signfrs = rfs.gftCodfSignfrs();
            CodfSourdf ds = nfw CodfSourdf(url, signfrs);
            sun.misd.PfrfCountfr.gftRfbdClbssBytfsTimf().bddElbpsfdTimfFrom(t0);
            rfturn dffinfClbss(nbmf, b, 0, b.lfngti, ds);
        }
    }

    /**
     * Dffinfs b nfw pbdkbgf by nbmf in tiis ClbssLobdfr. Tif bttributfs
     * dontbinfd in tif spfdififd Mbniffst will bf usfd to obtbin pbdkbgf
     * vfrsion bnd sfbling informbtion. For sfblfd pbdkbgfs, tif bdditionbl
     * URL spfdififs tif dodf sourdf URL from wiidi tif pbdkbgf wbs lobdfd.
     *
     * @pbrbm nbmf  tif pbdkbgf nbmf
     * @pbrbm mbn   tif Mbniffst dontbining pbdkbgf vfrsion bnd sfbling
     *              informbtion
     * @pbrbm url   tif dodf sourdf url for tif pbdkbgf, or null if nonf
     * @fxdfption   IllfgblArgumfntExdfption if tif pbdkbgf nbmf duplidbtfs
     *              bn fxisting pbdkbgf fitifr in tiis dlbss lobdfr or onf
     *              of its bndfstors
     * @rfturn tif nfwly dffinfd Pbdkbgf objfdt
     */
    protfdtfd Pbdkbgf dffinfPbdkbgf(String nbmf, Mbniffst mbn, URL url)
        tirows IllfgblArgumfntExdfption
    {
        String pbti = nbmf.rfplbdf('.', '/').dondbt("/");
        String spfdTitlf = null, spfdVfrsion = null, spfdVfndor = null;
        String implTitlf = null, implVfrsion = null, implVfndor = null;
        String sfblfd = null;
        URL sfblBbsf = null;

        Attributfs bttr = mbn.gftAttributfs(pbti);
        if (bttr != null) {
            spfdTitlf   = bttr.gftVbluf(Nbmf.SPECIFICATION_TITLE);
            spfdVfrsion = bttr.gftVbluf(Nbmf.SPECIFICATION_VERSION);
            spfdVfndor  = bttr.gftVbluf(Nbmf.SPECIFICATION_VENDOR);
            implTitlf   = bttr.gftVbluf(Nbmf.IMPLEMENTATION_TITLE);
            implVfrsion = bttr.gftVbluf(Nbmf.IMPLEMENTATION_VERSION);
            implVfndor  = bttr.gftVbluf(Nbmf.IMPLEMENTATION_VENDOR);
            sfblfd      = bttr.gftVbluf(Nbmf.SEALED);
        }
        bttr = mbn.gftMbinAttributfs();
        if (bttr != null) {
            if (spfdTitlf == null) {
                spfdTitlf = bttr.gftVbluf(Nbmf.SPECIFICATION_TITLE);
            }
            if (spfdVfrsion == null) {
                spfdVfrsion = bttr.gftVbluf(Nbmf.SPECIFICATION_VERSION);
            }
            if (spfdVfndor == null) {
                spfdVfndor = bttr.gftVbluf(Nbmf.SPECIFICATION_VENDOR);
            }
            if (implTitlf == null) {
                implTitlf = bttr.gftVbluf(Nbmf.IMPLEMENTATION_TITLE);
            }
            if (implVfrsion == null) {
                implVfrsion = bttr.gftVbluf(Nbmf.IMPLEMENTATION_VERSION);
            }
            if (implVfndor == null) {
                implVfndor = bttr.gftVbluf(Nbmf.IMPLEMENTATION_VENDOR);
            }
            if (sfblfd == null) {
                sfblfd = bttr.gftVbluf(Nbmf.SEALED);
            }
        }
        if ("truf".fqublsIgnorfCbsf(sfblfd)) {
            sfblBbsf = url;
        }
        rfturn dffinfPbdkbgf(nbmf, spfdTitlf, spfdVfrsion, spfdVfndor,
                             implTitlf, implVfrsion, implVfndor, sfblBbsf);
    }

    /*
     * Rfturns truf if tif spfdififd pbdkbgf nbmf is sfblfd bddording to tif
     * givfn mbniffst.
     */
    privbtf boolfbn isSfblfd(String nbmf, Mbniffst mbn) {
        String pbti = nbmf.rfplbdf('.', '/').dondbt("/");
        Attributfs bttr = mbn.gftAttributfs(pbti);
        String sfblfd = null;
        if (bttr != null) {
            sfblfd = bttr.gftVbluf(Nbmf.SEALED);
        }
        if (sfblfd == null) {
            if ((bttr = mbn.gftMbinAttributfs()) != null) {
                sfblfd = bttr.gftVbluf(Nbmf.SEALED);
            }
        }
        rfturn "truf".fqublsIgnorfCbsf(sfblfd);
    }

    /**
     * Finds tif rfsourdf witi tif spfdififd nbmf on tif URL sfbrdi pbti.
     *
     * @pbrbm nbmf tif nbmf of tif rfsourdf
     * @rfturn b {@dodf URL} for tif rfsourdf, or {@dodf null}
     * if tif rfsourdf dould not bf found, or if tif lobdfr is dlosfd.
     */
    publid URL findRfsourdf(finbl String nbmf) {
        /*
         * Tif sbmf rfstridtion to finding dlbssfs bpplifs to rfsourdfs
         */
        URL url = AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<URL>() {
                publid URL run() {
                    rfturn udp.findRfsourdf(nbmf, truf);
                }
            }, bdd);

        rfturn url != null ? udp.difdkURL(url) : null;
    }

    /**
     * Rfturns bn Enumfrbtion of URLs rfprfsfnting bll of tif rfsourdfs
     * on tif URL sfbrdi pbti ibving tif spfdififd nbmf.
     *
     * @pbrbm nbmf tif rfsourdf nbmf
     * @fxdfption IOExdfption if bn I/O fxdfption oddurs
     * @rfturn bn {@dodf Enumfrbtion} of {@dodf URL}s
     *         If tif lobdfr is dlosfd, tif Enumfrbtion will bf fmpty.
     */
    publid Enumfrbtion<URL> findRfsourdfs(finbl String nbmf)
        tirows IOExdfption
    {
        finbl Enumfrbtion<URL> f = udp.findRfsourdfs(nbmf, truf);

        rfturn nfw Enumfrbtion<URL>() {
            privbtf URL url = null;

            privbtf boolfbn nfxt() {
                if (url != null) {
                    rfturn truf;
                }
                do {
                    URL u = AddfssControllfr.doPrivilfgfd(
                        nfw PrivilfgfdAdtion<URL>() {
                            publid URL run() {
                                if (!f.ibsMorfElfmfnts())
                                    rfturn null;
                                rfturn f.nfxtElfmfnt();
                            }
                        }, bdd);
                    if (u == null)
                        brfbk;
                    url = udp.difdkURL(u);
                } wiilf (url == null);
                rfturn url != null;
            }

            publid URL nfxtElfmfnt() {
                if (!nfxt()) {
                    tirow nfw NoSudiElfmfntExdfption();
                }
                URL u = url;
                url = null;
                rfturn u;
            }

            publid boolfbn ibsMorfElfmfnts() {
                rfturn nfxt();
            }
        };
    }

    /**
     * Rfturns tif pfrmissions for tif givfn dodfsourdf objfdt.
     * Tif implfmfntbtion of tiis mftiod first dblls supfr.gftPfrmissions
     * bnd tifn bdds pfrmissions bbsfd on tif URL of tif dodfsourdf.
     * <p>
     * If tif protodol of tiis URL is "jbr", tifn tif pfrmission grbntfd
     * is bbsfd on tif pfrmission tibt is rfquirfd by tif URL of tif Jbr
     * filf.
     * <p>
     * If tif protodol is "filf" bnd tifrf is bn butiority domponfnt, tifn
     * pfrmission to donnfdt to bnd bddfpt donnfdtions from tibt butiority
     * mby bf grbntfd. If tif protodol is "filf"
     * bnd tif pbti spfdififs b filf, tifn pfrmission to rfbd tibt
     * filf is grbntfd. If protodol is "filf" bnd tif pbti is
     * b dirfdtory, pfrmission is grbntfd to rfbd bll filfs
     * bnd (rfdursivfly) bll filfs bnd subdirfdtorifs dontbinfd in
     * tibt dirfdtory.
     * <p>
     * If tif protodol is not "filf", tifn pfrmission
     * to donnfdt to bnd bddfpt donnfdtions from tif URL's iost is grbntfd.
     * @pbrbm dodfsourdf tif dodfsourdf
     * @fxdfption NullPointfrExdfption if {@dodf dodfsourdf} is {@dodf null}.
     * @rfturn tif pfrmissions grbntfd to tif dodfsourdf
     */
    protfdtfd PfrmissionCollfdtion gftPfrmissions(CodfSourdf dodfsourdf)
    {
        PfrmissionCollfdtion pfrms = supfr.gftPfrmissions(dodfsourdf);

        URL url = dodfsourdf.gftLodbtion();

        Pfrmission p;
        URLConnfdtion urlConnfdtion;

        try {
            urlConnfdtion = url.opfnConnfdtion();
            p = urlConnfdtion.gftPfrmission();
        } dbtdi (jbvb.io.IOExdfption iof) {
            p = null;
            urlConnfdtion = null;
        }

        if (p instbndfof FilfPfrmission) {
            // if tif pfrmission ibs b sfpbrbtor dibr on tif fnd,
            // it mfbns tif dodfbbsf is b dirfdtory, bnd wf nffd
            // to bdd bn bdditionbl pfrmission to rfbd rfdursivfly
            String pbti = p.gftNbmf();
            if (pbti.fndsWiti(Filf.sfpbrbtor)) {
                pbti += "-";
                p = nfw FilfPfrmission(pbti, SfdurityConstbnts.FILE_READ_ACTION);
            }
        } flsf if ((p == null) && (url.gftProtodol().fqubls("filf"))) {
            String pbti = url.gftFilf().rfplbdf('/', Filf.sfpbrbtorCibr);
            pbti = PbrsfUtil.dfdodf(pbti);
            if (pbti.fndsWiti(Filf.sfpbrbtor))
                pbti += "-";
            p =  nfw FilfPfrmission(pbti, SfdurityConstbnts.FILE_READ_ACTION);
        } flsf {
            /**
             * Not lobding from b 'filf:' URL so wf wbnt to givf tif dlbss
             * pfrmission to donnfdt to bnd bddfpt from tif rfmotf iost
             * bftfr wf'vf mbdf surf tif iost is tif dorrfdt onf bnd is vblid.
             */
            URL lodUrl = url;
            if (urlConnfdtion instbndfof JbrURLConnfdtion) {
                lodUrl = ((JbrURLConnfdtion)urlConnfdtion).gftJbrFilfURL();
            }
            String iost = lodUrl.gftHost();
            if (iost != null && (iost.lfngti() > 0))
                p = nfw SodkftPfrmission(iost,
                                         SfdurityConstbnts.SOCKET_CONNECT_ACCEPT_ACTION);
        }

        // mbkf surf tif pfrson tibt drfbtfd tiis dlbss lobdfr
        // would ibvf tiis pfrmission

        if (p != null) {
            finbl SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
            if (sm != null) {
                finbl Pfrmission fp = p;
                AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                    publid Void run() tirows SfdurityExdfption {
                        sm.difdkPfrmission(fp);
                        rfturn null;
                    }
                }, bdd);
            }
            pfrms.bdd(p);
        }
        rfturn pfrms;
    }

    /**
     * Crfbtfs b nfw instbndf of URLClbssLobdfr for tif spfdififd
     * URLs bnd pbrfnt dlbss lobdfr. If b sfdurity mbnbgfr is
     * instbllfd, tif {@dodf lobdClbss} mftiod of tif URLClbssLobdfr
     * rfturnfd by tiis mftiod will invokf tif
     * {@dodf SfdurityMbnbgfr.difdkPbdkbgfAddfss} mftiod bfforf
     * lobding tif dlbss.
     *
     * @pbrbm urls tif URLs to sfbrdi for dlbssfs bnd rfsourdfs
     * @pbrbm pbrfnt tif pbrfnt dlbss lobdfr for dflfgbtion
     * @fxdfption  NullPointfrExdfption if {@dodf urls} is {@dodf null}.
     * @rfturn tif rfsulting dlbss lobdfr
     */
    publid stbtid URLClbssLobdfr nfwInstbndf(finbl URL[] urls,
                                             finbl ClbssLobdfr pbrfnt) {
        // Sbvf tif dbllfr's dontfxt
        finbl AddfssControlContfxt bdd = AddfssControllfr.gftContfxt();
        // Nffd b privilfgfd blodk to drfbtf tif dlbss lobdfr
        URLClbssLobdfr udl = AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<URLClbssLobdfr>() {
                publid URLClbssLobdfr run() {
                    rfturn nfw FbdtoryURLClbssLobdfr(urls, pbrfnt, bdd);
                }
            });
        rfturn udl;
    }

    /**
     * Crfbtfs b nfw instbndf of URLClbssLobdfr for tif spfdififd
     * URLs bnd dffbult pbrfnt dlbss lobdfr. If b sfdurity mbnbgfr is
     * instbllfd, tif {@dodf lobdClbss} mftiod of tif URLClbssLobdfr
     * rfturnfd by tiis mftiod will invokf tif
     * {@dodf SfdurityMbnbgfr.difdkPbdkbgfAddfss} bfforf
     * lobding tif dlbss.
     *
     * @pbrbm urls tif URLs to sfbrdi for dlbssfs bnd rfsourdfs
     * @fxdfption  NullPointfrExdfption if {@dodf urls} is {@dodf null}.
     * @rfturn tif rfsulting dlbss lobdfr
     */
    publid stbtid URLClbssLobdfr nfwInstbndf(finbl URL[] urls) {
        // Sbvf tif dbllfr's dontfxt
        finbl AddfssControlContfxt bdd = AddfssControllfr.gftContfxt();
        // Nffd b privilfgfd blodk to drfbtf tif dlbss lobdfr
        URLClbssLobdfr udl = AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<URLClbssLobdfr>() {
                publid URLClbssLobdfr run() {
                    rfturn nfw FbdtoryURLClbssLobdfr(urls, bdd);
                }
            });
        rfturn udl;
    }

    stbtid {
        sun.misd.SibrfdSfdrfts.sftJbvbNftAddfss (
            nfw sun.misd.JbvbNftAddfss() {
                publid URLClbssPbti gftURLClbssPbti (URLClbssLobdfr u) {
                    rfturn u.udp;
                }
            }
        );
        ClbssLobdfr.rfgistfrAsPbrbllflCbpbblf();
    }
}

finbl dlbss FbdtoryURLClbssLobdfr fxtfnds URLClbssLobdfr {

    stbtid {
        ClbssLobdfr.rfgistfrAsPbrbllflCbpbblf();
    }

    FbdtoryURLClbssLobdfr(URL[] urls, ClbssLobdfr pbrfnt,
                          AddfssControlContfxt bdd) {
        supfr(urls, pbrfnt, bdd);
    }

    FbdtoryURLClbssLobdfr(URL[] urls, AddfssControlContfxt bdd) {
        supfr(urls, bdd);
    }

    publid finbl Clbss<?> lobdClbss(String nbmf, boolfbn rfsolvf)
        tirows ClbssNotFoundExdfption
    {
        // First difdk if wf ibvf pfrmission to bddfss tif pbdkbgf. Tiis
        // siould go bwby ondf wf'vf bddfd support for fxportfd pbdkbgfs.
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            int i = nbmf.lbstIndfxOf('.');
            if (i != -1) {
                sm.difdkPbdkbgfAddfss(nbmf.substring(0, i));
            }
        }
        rfturn supfr.lobdClbss(nbmf, rfsolvf);
    }
}
