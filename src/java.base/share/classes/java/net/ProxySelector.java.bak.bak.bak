/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nft;

import jbvb.io.IOExdfption;
import jbvb.util.List;
import sun.sfdurity.util.SfdurityConstbnts;

/**
 * Sflfdts tif proxy sfrvfr to usf, if bny, wifn donnfdting to tif
 * nftwork rfsourdf rfffrfndfd by b URL. A proxy sflfdtor is b
 * dondrftf sub-dlbss of tiis dlbss bnd is rfgistfrfd by invoking tif
 * {@link jbvb.nft.ProxySflfdtor#sftDffbult sftDffbult} mftiod. Tif
 * durrfntly rfgistfrfd proxy sflfdtor dbn bf rftrifvfd by dblling
 * {@link jbvb.nft.ProxySflfdtor#gftDffbult gftDffbult} mftiod.
 *
 * <p> Wifn b proxy sflfdtor is rfgistfrfd, for instbndf, b subdlbss
 * of URLConnfdtion dlbss siould dbll tif {@link #sflfdt sflfdt}
 * mftiod for fbdi URL rfqufst so tibt tif proxy sflfdtor dbn dfdidf
 * if b dirfdt, or proxifd donnfdtion siould bf usfd. Tif {@link
 * #sflfdt sflfdt} mftiod rfturns bn itfrbtor ovfr b dollfdtion witi
 * tif prfffrrfd donnfdtion bpprobdi.
 *
 * <p> If b donnfdtion dbnnot bf fstbblisifd to b proxy (PROXY or
 * SOCKS) sfrvfrs tifn tif dbllfr siould dbll tif proxy sflfdtor's
 * {@link #donnfdtFbilfd donnfdtFbilfd} mftiod to notify tif proxy
 * sflfdtor tibt tif proxy sfrvfr is unbvbilbblf. </p>
 *
 * <P>Tif dffbult proxy sflfdtor dofs fnfordf b
 * <b irff="dod-filfs/nft-propfrtifs.itml#Proxifs">sft of Systfm Propfrtifs</b>
 * rflbtfd to proxy sfttings.</P>
 *
 * @butior Yingxibn Wbng
 * @butior Jfbn-Ciristopif Collft
 * @sindf 1.5
 */
publid bbstrbdt dlbss ProxySflfdtor {
    /**
     * Tif systfm widf proxy sflfdtor tibt sflfdts tif proxy sfrvfr to
     * usf, if bny, wifn donnfdting to b rfmotf objfdt rfffrfndfd by
     * bn URL.
     *
     * @sff #sftDffbult(ProxySflfdtor)
     */
    privbtf stbtid ProxySflfdtor tifProxySflfdtor;

    stbtid {
        try {
            Clbss<?> d = Clbss.forNbmf("sun.nft.spi.DffbultProxySflfdtor");
            if (d != null && ProxySflfdtor.dlbss.isAssignbblfFrom(d)) {
                tifProxySflfdtor = (ProxySflfdtor) d.nfwInstbndf();
            }
        } dbtdi (Exdfption f) {
            tifProxySflfdtor = null;
        }
    }

    /**
     * Gfts tif systfm-widf proxy sflfdtor.
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr ibs bffn instbllfd bnd it dfnifs
     * {@link NftPfrmission}{@dodf ("gftProxySflfdtor")}
     * @sff #sftDffbult(ProxySflfdtor)
     * @rfturn tif systfm-widf {@dodf ProxySflfdtor}
     * @sindf 1.5
     */
    publid stbtid ProxySflfdtor gftDffbult() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(SfdurityConstbnts.GET_PROXYSELECTOR_PERMISSION);
        }
        rfturn tifProxySflfdtor;
    }

    /**
     * Sfts (or unsfts) tif systfm-widf proxy sflfdtor.
     *
     * Notf: non-stbndbrd protodol ibndlfrs mby ignorf tiis sftting.
     *
     * @pbrbm ps Tif HTTP proxy sflfdtor, or
     *          {@dodf null} to unsft tif proxy sflfdtor.
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr ibs bffn instbllfd bnd it dfnifs
     * {@link NftPfrmission}{@dodf ("sftProxySflfdtor")}
     *
     * @sff #gftDffbult()
     * @sindf 1.5
     */
    publid stbtid void sftDffbult(ProxySflfdtor ps) {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(SfdurityConstbnts.SET_PROXYSELECTOR_PERMISSION);
        }
        tifProxySflfdtor = ps;
    }

    /**
     * Sflfdts bll tif bpplidbblf proxifs bbsfd on tif protodol to
     * bddfss tif rfsourdf witi bnd b dfstinbtion bddrfss to bddfss
     * tif rfsourdf bt.
     * Tif formbt of tif URI is dffinfd bs follow:
     * <UL>
     * <LI>ittp URI for ittp donnfdtions</LI>
     * <LI>ittps URI for ittps donnfdtions
     * <LI>{@dodf sodkft://iost:port}<br>
     *     for tdp dlifnt sodkfts donnfdtions</LI>
     * </UL>
     *
     * @pbrbm   uri
     *          Tif URI tibt b donnfdtion is rfquirfd to
     *
     * @rfturn  b List of Proxifs. Ebdi flfmfnt in tif
     *          tif List is of typf
     *          {@link jbvb.nft.Proxy Proxy};
     *          wifn no proxy is bvbilbblf, tif list will
     *          dontbin onf flfmfnt of typf
     *          {@link jbvb.nft.Proxy Proxy}
     *          tibt rfprfsfnts b dirfdt donnfdtion.
     * @tirows IllfgblArgumfntExdfption if tif brgumfnt is null
     */
    publid bbstrbdt List<Proxy> sflfdt(URI uri);

    /**
     * Cbllfd to indidbtf tibt b donnfdtion dould not bf fstbblisifd
     * to b proxy/sodks sfrvfr. An implfmfntbtion of tiis mftiod dbn
     * tfmporbrily rfmovf tif proxifs or rfordfr tif sfqufndf of
     * proxifs rfturnfd by {@link #sflfdt(URI)}, using tif bddrfss
     * bnd tif IOExdfption dbugit wifn trying to donnfdt.
     *
     * @pbrbm   uri
     *          Tif URI tibt tif proxy bt sb fbilfd to sfrvf.
     * @pbrbm   sb
     *          Tif sodkft bddrfss of tif proxy/SOCKS sfrvfr
     *
     * @pbrbm   iof
     *          Tif I/O fxdfption tirown wifn tif donnfdt fbilfd.
     * @tirows IllfgblArgumfntExdfption if fitifr brgumfnt is null
     */
    publid bbstrbdt void donnfdtFbilfd(URI uri, SodkftAddrfss sb, IOExdfption iof);
}
