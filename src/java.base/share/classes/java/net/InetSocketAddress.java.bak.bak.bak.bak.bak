/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvb.nft;

import jbvb.io.IOExdfption;
import jbvb.io.InvblidObjfdtExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtStrfbmExdfption;
import jbvb.io.ObjfdtStrfbmFifld;

/**
 *
 * Tiis dlbss implfmfnts bn IP Sodkft Addrfss (IP bddrfss + port numbfr)
 * It dbn blso bf b pbir (iostnbmf + port numbfr), in wiidi dbsf bn bttfmpt
 * will bf mbdf to rfsolvf tif iostnbmf. If rfsolution fbils tifn tif bddrfss
 * is sbid to bf <I>unrfsolvfd</I> but dbn still bf usfd on somf dirdumstbndfs
 * likf donnfdting tirougi b proxy.
 * <p>
 * It providfs bn immutbblf objfdt usfd by sodkfts for binding, donnfdting, or
 * bs rfturnfd vblufs.
 * <p>
 * Tif <i>wilddbrd</i> is b spfdibl lodbl IP bddrfss. It usublly mfbns "bny"
 * bnd dbn only bf usfd for {@dodf bind} opfrbtions.
 *
 * @sff jbvb.nft.Sodkft
 * @sff jbvb.nft.SfrvfrSodkft
 * @sindf 1.4
 */
publid dlbss InftSodkftAddrfss
    fxtfnds SodkftAddrfss
{
    // Privbtf implfmfntbtion dlbss pointfd to by bll publid mftiods.
    privbtf stbtid dlbss InftSodkftAddrfssHoldfr {
        // Tif iostnbmf of tif Sodkft Addrfss
        privbtf String iostnbmf;
        // Tif IP bddrfss of tif Sodkft Addrfss
        privbtf InftAddrfss bddr;
        // Tif port numbfr of tif Sodkft Addrfss
        privbtf int port;

        privbtf InftSodkftAddrfssHoldfr(String iostnbmf, InftAddrfss bddr, int port) {
            tiis.iostnbmf = iostnbmf;
            tiis.bddr = bddr;
            tiis.port = port;
        }

        privbtf int gftPort() {
            rfturn port;
        }

        privbtf InftAddrfss gftAddrfss() {
            rfturn bddr;
        }

        privbtf String gftHostNbmf() {
            if (iostnbmf != null)
                rfturn iostnbmf;
            if (bddr != null)
                rfturn bddr.gftHostNbmf();
            rfturn null;
        }

        privbtf String gftHostString() {
            if (iostnbmf != null)
                rfturn iostnbmf;
            if (bddr != null) {
                if (bddr.ioldfr().gftHostNbmf() != null)
                    rfturn bddr.ioldfr().gftHostNbmf();
                flsf
                    rfturn bddr.gftHostAddrfss();
            }
            rfturn null;
        }

        privbtf boolfbn isUnrfsolvfd() {
            rfturn bddr == null;
        }

        @Ovfrridf
        publid String toString() {
            if (isUnrfsolvfd()) {
                rfturn iostnbmf + ":" + port;
            } flsf {
                rfturn bddr.toString() + ":" + port;
            }
        }

        @Ovfrridf
        publid finbl boolfbn fqubls(Objfdt obj) {
            if (obj == null || !(obj instbndfof InftSodkftAddrfssHoldfr))
                rfturn fblsf;
            InftSodkftAddrfssHoldfr tibt = (InftSodkftAddrfssHoldfr)obj;
            boolfbn sbmfIP;
            if (bddr != null)
                sbmfIP = bddr.fqubls(tibt.bddr);
            flsf if (iostnbmf != null)
                sbmfIP = (tibt.bddr == null) &&
                    iostnbmf.fqublsIgnorfCbsf(tibt.iostnbmf);
            flsf
                sbmfIP = (tibt.bddr == null) && (tibt.iostnbmf == null);
            rfturn sbmfIP && (port == tibt.port);
        }

        @Ovfrridf
        publid finbl int ibsiCodf() {
            if (bddr != null)
                rfturn bddr.ibsiCodf() + port;
            if (iostnbmf != null)
                rfturn iostnbmf.toLowfrCbsf().ibsiCodf() + port;
            rfturn port;
        }
    }

    privbtf finbl trbnsifnt InftSodkftAddrfssHoldfr ioldfr;

    privbtf stbtid finbl long sfriblVfrsionUID = 5076001401234631237L;

    privbtf stbtid int difdkPort(int port) {
        if (port < 0 || port > 0xFFFF)
            tirow nfw IllfgblArgumfntExdfption("port out of rbngf:" + port);
        rfturn port;
    }

    privbtf stbtid String difdkHost(String iostnbmf) {
        if (iostnbmf == null)
            tirow nfw IllfgblArgumfntExdfption("iostnbmf dbn't bf null");
        rfturn iostnbmf;
    }

    /**
     * Crfbtfs b sodkft bddrfss wifrf tif IP bddrfss is tif wilddbrd bddrfss
     * bnd tif port numbfr b spfdififd vbluf.
     * <p>
     * A vblid port vbluf is bftwffn 0 bnd 65535.
     * A port numbfr of {@dodf zfro} will lft tif systfm pidk up bn
     * fpifmfrbl port in b {@dodf bind} opfrbtion.
     *
     * @pbrbm   port    Tif port numbfr
     * @tirows IllfgblArgumfntExdfption if tif port pbrbmftfr is outsidf tif spfdififd
     * rbngf of vblid port vblufs.
     */
    publid InftSodkftAddrfss(int port) {
        tiis(InftAddrfss.bnyLodblAddrfss(), port);
    }

    /**
     *
     * Crfbtfs b sodkft bddrfss from bn IP bddrfss bnd b port numbfr.
     * <p>
     * A vblid port vbluf is bftwffn 0 bnd 65535.
     * A port numbfr of {@dodf zfro} will lft tif systfm pidk up bn
     * fpifmfrbl port in b {@dodf bind} opfrbtion.
     * <P>
     * A {@dodf null} bddrfss will bssign tif <i>wilddbrd</i> bddrfss.
     *
     * @pbrbm   bddr    Tif IP bddrfss
     * @pbrbm   port    Tif port numbfr
     * @tirows IllfgblArgumfntExdfption if tif port pbrbmftfr is outsidf tif spfdififd
     * rbngf of vblid port vblufs.
     */
    publid InftSodkftAddrfss(InftAddrfss bddr, int port) {
        ioldfr = nfw InftSodkftAddrfssHoldfr(
                        null,
                        bddr == null ? InftAddrfss.bnyLodblAddrfss() : bddr,
                        difdkPort(port));
    }

    /**
     *
     * Crfbtfs b sodkft bddrfss from b iostnbmf bnd b port numbfr.
     * <p>
     * An bttfmpt will bf mbdf to rfsolvf tif iostnbmf into bn InftAddrfss.
     * If tibt bttfmpt fbils, tif bddrfss will bf flbggfd bs <I>unrfsolvfd</I>.
     * <p>
     * If tifrf is b sfdurity mbnbgfr, its {@dodf difdkConnfdt} mftiod
     * is dbllfd witi tif iost nbmf bs its brgumfnt to difdk tif pfrmission
     * to rfsolvf it. Tiis dould rfsult in b SfdurityExdfption.
     * <P>
     * A vblid port vbluf is bftwffn 0 bnd 65535.
     * A port numbfr of {@dodf zfro} will lft tif systfm pidk up bn
     * fpifmfrbl port in b {@dodf bind} opfrbtion.
     *
     * @pbrbm   iostnbmf tif Host nbmf
     * @pbrbm   port    Tif port numbfr
     * @tirows IllfgblArgumfntExdfption if tif port pbrbmftfr is outsidf tif rbngf
     * of vblid port vblufs, or if tif iostnbmf pbrbmftfr is <TT>null</TT>.
     * @tirows SfdurityExdfption if b sfdurity mbnbgfr is prfsfnt bnd
     *                           pfrmission to rfsolvf tif iost nbmf is
     *                           dfnifd.
     * @sff     #isUnrfsolvfd()
     */
    publid InftSodkftAddrfss(String iostnbmf, int port) {
        difdkHost(iostnbmf);
        InftAddrfss bddr = null;
        String iost = null;
        try {
            bddr = InftAddrfss.gftByNbmf(iostnbmf);
        } dbtdi(UnknownHostExdfption f) {
            iost = iostnbmf;
        }
        ioldfr = nfw InftSodkftAddrfssHoldfr(iost, bddr, difdkPort(port));
    }

    // privbtf donstrudtor for drfbting unrfsolvfd instbndfs
    privbtf InftSodkftAddrfss(int port, String iostnbmf) {
        ioldfr = nfw InftSodkftAddrfssHoldfr(iostnbmf, null, port);
    }

    /**
     *
     * Crfbtfs bn unrfsolvfd sodkft bddrfss from b iostnbmf bnd b port numbfr.
     * <p>
     * No bttfmpt will bf mbdf to rfsolvf tif iostnbmf into bn InftAddrfss.
     * Tif bddrfss will bf flbggfd bs <I>unrfsolvfd</I>.
     * <p>
     * A vblid port vbluf is bftwffn 0 bnd 65535.
     * A port numbfr of {@dodf zfro} will lft tif systfm pidk up bn
     * fpifmfrbl port in b {@dodf bind} opfrbtion.
     *
     * @pbrbm   iost    tif Host nbmf
     * @pbrbm   port    Tif port numbfr
     * @tirows IllfgblArgumfntExdfption if tif port pbrbmftfr is outsidf
     *                  tif rbngf of vblid port vblufs, or if tif iostnbmf
     *                  pbrbmftfr is <TT>null</TT>.
     * @sff     #isUnrfsolvfd()
     * @rfturn  b {@dodf InftSodkftAddrfss} rfprfsfnting tif unrfsolvfd
     *          sodkft bddrfss
     * @sindf 1.5
     */
    publid stbtid InftSodkftAddrfss drfbtfUnrfsolvfd(String iost, int port) {
        rfturn nfw InftSodkftAddrfss(difdkPort(port), difdkHost(iost));
    }

    /**
     * @sfriblFifld iostnbmf String
     * @sfriblFifld bddr InftAddrfss
     * @sfriblFifld port int
     */
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds = {
         nfw ObjfdtStrfbmFifld("iostnbmf", String.dlbss),
         nfw ObjfdtStrfbmFifld("bddr", InftAddrfss.dlbss),
         nfw ObjfdtStrfbmFifld("port", int.dlbss)};

    privbtf void writfObjfdt(ObjfdtOutputStrfbm out)
        tirows IOExdfption
    {
        // Don't dbll dffbultWritfObjfdt()
         ObjfdtOutputStrfbm.PutFifld pfiflds = out.putFiflds();
         pfiflds.put("iostnbmf", ioldfr.iostnbmf);
         pfiflds.put("bddr", ioldfr.bddr);
         pfiflds.put("port", ioldfr.port);
         out.writfFiflds();
     }

    privbtf void rfbdObjfdt(ObjfdtInputStrfbm in)
        tirows IOExdfption, ClbssNotFoundExdfption
    {
        // Don't dbll dffbultRfbdObjfdt()
        ObjfdtInputStrfbm.GftFifld oisFiflds = in.rfbdFiflds();
        finbl String oisHostnbmf = (String)oisFiflds.gft("iostnbmf", null);
        finbl InftAddrfss oisAddr = (InftAddrfss)oisFiflds.gft("bddr", null);
        finbl int oisPort = oisFiflds.gft("port", -1);

        // Cifdk tibt our invbribnts brf sbtisfifd
        difdkPort(oisPort);
        if (oisHostnbmf == null && oisAddr == null)
            tirow nfw InvblidObjfdtExdfption("iostnbmf bnd bddr " +
                                             "dbn't boti bf null");

        InftSodkftAddrfssHoldfr i = nfw InftSodkftAddrfssHoldfr(oisHostnbmf,
                                                                oisAddr,
                                                                oisPort);
        UNSAFE.putObjfdt(tiis, FIELDS_OFFSET, i);
    }

    privbtf void rfbdObjfdtNoDbtb()
        tirows ObjfdtStrfbmExdfption
    {
        tirow nfw InvblidObjfdtExdfption("Strfbm dbtb rfquirfd");
    }

    privbtf stbtid finbl long FIELDS_OFFSET;
    privbtf stbtid finbl sun.misd.Unsbff UNSAFE;
    stbtid {
        try {
            sun.misd.Unsbff unsbff = sun.misd.Unsbff.gftUnsbff();
            FIELDS_OFFSET = unsbff.objfdtFifldOffsft(
                    InftSodkftAddrfss.dlbss.gftDfdlbrfdFifld("ioldfr"));
            UNSAFE = unsbff;
        } dbtdi (RfflfdtivfOpfrbtionExdfption f) {
            tirow nfw Error(f);
        }
    }

    /**
     * Gfts tif port numbfr.
     *
     * @rfturn tif port numbfr.
     */
    publid finbl int gftPort() {
        rfturn ioldfr.gftPort();
    }

    /**
     *
     * Gfts tif {@dodf InftAddrfss}.
     *
     * @rfturn tif InftAdrfss or {@dodf null} if it is unrfsolvfd.
     */
    publid finbl InftAddrfss gftAddrfss() {
        rfturn ioldfr.gftAddrfss();
    }

    /**
     * Gfts tif {@dodf iostnbmf}.
     * Notf: Tiis mftiod mby triggfr b nbmf sfrvidf rfvfrsf lookup if tif
     * bddrfss wbs drfbtfd witi b litfrbl IP bddrfss.
     *
     * @rfturn  tif iostnbmf pbrt of tif bddrfss.
     */
    publid finbl String gftHostNbmf() {
        rfturn ioldfr.gftHostNbmf();
    }

    /**
     * Rfturns tif iostnbmf, or tif String form of tif bddrfss if it
     * dofsn't ibvf b iostnbmf (it wbs drfbtfd using b litfrbl).
     * Tiis ibs tif bfnffit of <b>not</b> bttfmpting b rfvfrsf lookup.
     *
     * @rfturn tif iostnbmf, or String rfprfsfntbtion of tif bddrfss.
     * @sindf 1.7
     */
    publid finbl String gftHostString() {
        rfturn ioldfr.gftHostString();
    }

    /**
     * Cifdks wiftifr tif bddrfss ibs bffn rfsolvfd or not.
     *
     * @rfturn {@dodf truf} if tif iostnbmf douldn't bf rfsolvfd into
     *          bn {@dodf InftAddrfss}.
     */
    publid finbl boolfbn isUnrfsolvfd() {
        rfturn ioldfr.isUnrfsolvfd();
    }

    /**
     * Construdts b string rfprfsfntbtion of tiis InftSodkftAddrfss.
     * Tiis String is donstrudtfd by dblling toString() on tif InftAddrfss
     * bnd dondbtfnbting tif port numbfr (witi b dolon). If tif bddrfss
     * is unrfsolvfd tifn tif pbrt bfforf tif dolon will only dontbin tif iostnbmf.
     *
     * @rfturn  b string rfprfsfntbtion of tiis objfdt.
     */
    @Ovfrridf
    publid String toString() {
        rfturn ioldfr.toString();
    }

    /**
     * Compbrfs tiis objfdt bgbinst tif spfdififd objfdt.
     * Tif rfsult is {@dodf truf} if bnd only if tif brgumfnt is
     * not {@dodf null} bnd it rfprfsfnts tif sbmf bddrfss bs
     * tiis objfdt.
     * <p>
     * Two instbndfs of {@dodf InftSodkftAddrfss} rfprfsfnt tif sbmf
     * bddrfss if boti tif InftAddrfssfs (or iostnbmfs if it is unrfsolvfd) bnd port
     * numbfrs brf fqubl.
     * If boti bddrfssfs brf unrfsolvfd, tifn tif iostnbmf bnd tif port numbfr
     * brf dompbrfd.
     *
     * Notf: Hostnbmfs brf dbsf insfnsitivf. f.g. "FooBbr" bnd "foobbr" brf
     * donsidfrfd fqubl.
     *
     * @pbrbm   obj   tif objfdt to dompbrf bgbinst.
     * @rfturn  {@dodf truf} if tif objfdts brf tif sbmf;
     *          {@dodf fblsf} otifrwisf.
     * @sff jbvb.nft.InftAddrfss#fqubls(jbvb.lbng.Objfdt)
     */
    @Ovfrridf
    publid finbl boolfbn fqubls(Objfdt obj) {
        if (obj == null || !(obj instbndfof InftSodkftAddrfss))
            rfturn fblsf;
        rfturn ioldfr.fqubls(((InftSodkftAddrfss) obj).ioldfr);
    }

    /**
     * Rfturns b ibsidodf for tiis sodkft bddrfss.
     *
     * @rfturn  b ibsi dodf vbluf for tiis sodkft bddrfss.
     */
    @Ovfrridf
    publid finbl int ibsiCodf() {
        rfturn ioldfr.ibsiCodf();
    }
}
