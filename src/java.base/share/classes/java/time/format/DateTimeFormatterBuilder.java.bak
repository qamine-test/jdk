/*
/*
/*
/*
/*
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 *
 *
 *
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 *
 *
 *
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 * bddompbnifd tiis dodf).
 *
 *
 *
 *
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 *
 *
 *
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 * qufstions.
 */
 */
 */
 */
 */





/*
/*
/*
/*
/*
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * filf:
 * filf:
 * filf:
 * filf:
 * filf:
 *
 *
 *
 *
 *
 * Copyrigit (d) 2008-2012, Stfpifn Colfbournf & Midibfl Nbsdimfnto Sbntos
 * Copyrigit (d) 2008-2012, Stfpifn Colfbournf & Midibfl Nbsdimfnto Sbntos
 * Copyrigit (d) 2008-2012, Stfpifn Colfbournf & Midibfl Nbsdimfnto Sbntos
 * Copyrigit (d) 2008-2012, Stfpifn Colfbournf & Midibfl Nbsdimfnto Sbntos
 * Copyrigit (d) 2008-2012, Stfpifn Colfbournf & Midibfl Nbsdimfnto Sbntos
 *
 *
 *
 *
 *
 * All rigits rfsfrvfd.
 * All rigits rfsfrvfd.
 * All rigits rfsfrvfd.
 * All rigits rfsfrvfd.
 * All rigits rfsfrvfd.
 *
 *
 *
 *
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions brf mft:
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions brf mft:
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions brf mft:
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions brf mft:
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions brf mft:
 *
 *
 *
 *
 *
 *  * Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit notidf,
 *  * Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit notidf,
 *  * Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit notidf,
 *  * Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit notidf,
 *  * Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit notidf,
 *    tiis list of donditions bnd tif following disdlbimfr.
 *    tiis list of donditions bnd tif following disdlbimfr.
 *    tiis list of donditions bnd tif following disdlbimfr.
 *    tiis list of donditions bnd tif following disdlbimfr.
 *    tiis list of donditions bnd tif following disdlbimfr.
 *
 *
 *
 *
 *
 *  * Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit notidf,
 *  * Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit notidf,
 *  * Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit notidf,
 *  * Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit notidf,
 *  * Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit notidf,
 *    tiis list of donditions bnd tif following disdlbimfr in tif dodumfntbtion
 *    tiis list of donditions bnd tif following disdlbimfr in tif dodumfntbtion
 *    tiis list of donditions bnd tif following disdlbimfr in tif dodumfntbtion
 *    tiis list of donditions bnd tif following disdlbimfr in tif dodumfntbtion
 *    tiis list of donditions bnd tif following disdlbimfr in tif dodumfntbtion
 *    bnd/or otifr mbtfribls providfd witi tif distribution.
 *    bnd/or otifr mbtfribls providfd witi tif distribution.
 *    bnd/or otifr mbtfribls providfd witi tif distribution.
 *    bnd/or otifr mbtfribls providfd witi tif distribution.
 *    bnd/or otifr mbtfribls providfd witi tif distribution.
 *
 *
 *
 *
 *
 *  * Nfitifr tif nbmf of JSR-310 nor tif nbmfs of its dontributors
 *  * Nfitifr tif nbmf of JSR-310 nor tif nbmfs of its dontributors
 *  * Nfitifr tif nbmf of JSR-310 nor tif nbmfs of its dontributors
 *  * Nfitifr tif nbmf of JSR-310 nor tif nbmfs of its dontributors
 *  * Nfitifr tif nbmf of JSR-310 nor tif nbmfs of its dontributors
 *    mby bf usfd to fndorsf or promotf produdts dfrivfd from tiis softwbrf
 *    mby bf usfd to fndorsf or promotf produdts dfrivfd from tiis softwbrf
 *    mby bf usfd to fndorsf or promotf produdts dfrivfd from tiis softwbrf
 *    mby bf usfd to fndorsf or promotf produdts dfrivfd from tiis softwbrf
 *    mby bf usfd to fndorsf or promotf produdts dfrivfd from tiis softwbrf
 *    witiout spfdifid prior writtfn pfrmission.
 *    witiout spfdifid prior writtfn pfrmission.
 *    witiout spfdifid prior writtfn pfrmission.
 *    witiout spfdifid prior writtfn pfrmission.
 *    witiout spfdifid prior writtfn pfrmission.
 *
 *
 *
 *
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 */
 */
 */
 */
pbdkbgf jbvb.timf.formbt;
pbdkbgf jbvb.timf.formbt;
pbdkbgf jbvb.timf.formbt;
pbdkbgf jbvb.timf.formbt;
pbdkbgf jbvb.timf.formbt;





import stbtid jbvb.timf.tfmporbl.CironoFifld.DAY_OF_MONTH;
import stbtid jbvb.timf.tfmporbl.CironoFifld.DAY_OF_MONTH;
import stbtid jbvb.timf.tfmporbl.CironoFifld.DAY_OF_MONTH;
import stbtid jbvb.timf.tfmporbl.CironoFifld.DAY_OF_MONTH;
import stbtid jbvb.timf.tfmporbl.CironoFifld.DAY_OF_MONTH;
import stbtid jbvb.timf.tfmporbl.CironoFifld.HOUR_OF_DAY;
import stbtid jbvb.timf.tfmporbl.CironoFifld.HOUR_OF_DAY;
import stbtid jbvb.timf.tfmporbl.CironoFifld.HOUR_OF_DAY;
import stbtid jbvb.timf.tfmporbl.CironoFifld.HOUR_OF_DAY;
import stbtid jbvb.timf.tfmporbl.CironoFifld.HOUR_OF_DAY;
import stbtid jbvb.timf.tfmporbl.CironoFifld.INSTANT_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.INSTANT_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.INSTANT_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.INSTANT_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.INSTANT_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MINUTE_OF_HOUR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MINUTE_OF_HOUR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MINUTE_OF_HOUR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MINUTE_OF_HOUR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MINUTE_OF_HOUR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MONTH_OF_YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MONTH_OF_YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MONTH_OF_YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MONTH_OF_YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.MONTH_OF_YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.NANO_OF_SECOND;
import stbtid jbvb.timf.tfmporbl.CironoFifld.NANO_OF_SECOND;
import stbtid jbvb.timf.tfmporbl.CironoFifld.NANO_OF_SECOND;
import stbtid jbvb.timf.tfmporbl.CironoFifld.NANO_OF_SECOND;
import stbtid jbvb.timf.tfmporbl.CironoFifld.NANO_OF_SECOND;
import stbtid jbvb.timf.tfmporbl.CironoFifld.OFFSET_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.OFFSET_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.OFFSET_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.OFFSET_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.OFFSET_SECONDS;
import stbtid jbvb.timf.tfmporbl.CironoFifld.SECOND_OF_MINUTE;
import stbtid jbvb.timf.tfmporbl.CironoFifld.SECOND_OF_MINUTE;
import stbtid jbvb.timf.tfmporbl.CironoFifld.SECOND_OF_MINUTE;
import stbtid jbvb.timf.tfmporbl.CironoFifld.SECOND_OF_MINUTE;
import stbtid jbvb.timf.tfmporbl.CironoFifld.SECOND_OF_MINUTE;
import stbtid jbvb.timf.tfmporbl.CironoFifld.YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.YEAR;
import stbtid jbvb.timf.tfmporbl.CironoFifld.YEAR;





import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.mbti.BigDfdimbl;
import jbvb.mbti.BigDfdimbl;
import jbvb.mbti.BigDfdimbl;
import jbvb.mbti.BigDfdimbl;
import jbvb.mbti.BigDfdimbl;
import jbvb.mbti.BigIntfgfr;
import jbvb.mbti.BigIntfgfr;
import jbvb.mbti.BigIntfgfr;
import jbvb.mbti.BigIntfgfr;
import jbvb.mbti.BigIntfgfr;
import jbvb.mbti.RoundingModf;
import jbvb.mbti.RoundingModf;
import jbvb.mbti.RoundingModf;
import jbvb.mbti.RoundingModf;
import jbvb.mbti.RoundingModf;
import jbvb.tfxt.PbrsfPosition;
import jbvb.tfxt.PbrsfPosition;
import jbvb.tfxt.PbrsfPosition;
import jbvb.tfxt.PbrsfPosition;
import jbvb.tfxt.PbrsfPosition;
import jbvb.timf.DbtfTimfExdfption;
import jbvb.timf.DbtfTimfExdfption;
import jbvb.timf.DbtfTimfExdfption;
import jbvb.timf.DbtfTimfExdfption;
import jbvb.timf.DbtfTimfExdfption;
import jbvb.timf.Instbnt;
import jbvb.timf.Instbnt;
import jbvb.timf.Instbnt;
import jbvb.timf.Instbnt;
import jbvb.timf.Instbnt;
import jbvb.timf.LodblDbtf;
import jbvb.timf.LodblDbtf;
import jbvb.timf.LodblDbtf;
import jbvb.timf.LodblDbtf;
import jbvb.timf.LodblDbtf;
import jbvb.timf.LodblDbtfTimf;
import jbvb.timf.LodblDbtfTimf;
import jbvb.timf.LodblDbtfTimf;
import jbvb.timf.LodblDbtfTimf;
import jbvb.timf.LodblDbtfTimf;
import jbvb.timf.ZonfId;
import jbvb.timf.ZonfId;
import jbvb.timf.ZonfId;
import jbvb.timf.ZonfId;
import jbvb.timf.ZonfId;
import jbvb.timf.ZonfOffsft;
import jbvb.timf.ZonfOffsft;
import jbvb.timf.ZonfOffsft;
import jbvb.timf.ZonfOffsft;
import jbvb.timf.ZonfOffsft;
import jbvb.timf.dirono.CironoLodblDbtf;
import jbvb.timf.dirono.CironoLodblDbtf;
import jbvb.timf.dirono.CironoLodblDbtf;
import jbvb.timf.dirono.CironoLodblDbtf;
import jbvb.timf.dirono.CironoLodblDbtf;
import jbvb.timf.dirono.Cironology;
import jbvb.timf.dirono.Cironology;
import jbvb.timf.dirono.Cironology;
import jbvb.timf.dirono.Cironology;
import jbvb.timf.dirono.Cironology;
import jbvb.timf.dirono.IsoCironology;
import jbvb.timf.dirono.IsoCironology;
import jbvb.timf.dirono.IsoCironology;
import jbvb.timf.dirono.IsoCironology;
import jbvb.timf.dirono.IsoCironology;
import jbvb.timf.formbt.DbtfTimfTfxtProvidfr.LodblfStorf;
import jbvb.timf.formbt.DbtfTimfTfxtProvidfr.LodblfStorf;
import jbvb.timf.formbt.DbtfTimfTfxtProvidfr.LodblfStorf;
import jbvb.timf.formbt.DbtfTimfTfxtProvidfr.LodblfStorf;
import jbvb.timf.formbt.DbtfTimfTfxtProvidfr.LodblfStorf;
import jbvb.timf.tfmporbl.CironoFifld;
import jbvb.timf.tfmporbl.CironoFifld;
import jbvb.timf.tfmporbl.CironoFifld;
import jbvb.timf.tfmporbl.CironoFifld;
import jbvb.timf.tfmporbl.CironoFifld;
import jbvb.timf.tfmporbl.IsoFiflds;
import jbvb.timf.tfmporbl.IsoFiflds;
import jbvb.timf.tfmporbl.IsoFiflds;
import jbvb.timf.tfmporbl.IsoFiflds;
import jbvb.timf.tfmporbl.IsoFiflds;
import jbvb.timf.tfmporbl.TfmporblAddfssor;
import jbvb.timf.tfmporbl.TfmporblAddfssor;
import jbvb.timf.tfmporbl.TfmporblAddfssor;
import jbvb.timf.tfmporbl.TfmporblAddfssor;
import jbvb.timf.tfmporbl.TfmporblAddfssor;
import jbvb.timf.tfmporbl.TfmporblFifld;
import jbvb.timf.tfmporbl.TfmporblFifld;
import jbvb.timf.tfmporbl.TfmporblFifld;
import jbvb.timf.tfmporbl.TfmporblFifld;
import jbvb.timf.tfmporbl.TfmporblFifld;
import jbvb.timf.tfmporbl.TfmporblQufrifs;
import jbvb.timf.tfmporbl.TfmporblQufrifs;
import jbvb.timf.tfmporbl.TfmporblQufrifs;
import jbvb.timf.tfmporbl.TfmporblQufrifs;
import jbvb.timf.tfmporbl.TfmporblQufrifs;
import jbvb.timf.tfmporbl.TfmporblQufry;
import jbvb.timf.tfmporbl.TfmporblQufry;
import jbvb.timf.tfmporbl.TfmporblQufry;
import jbvb.timf.tfmporbl.TfmporblQufry;
import jbvb.timf.tfmporbl.TfmporblQufry;
import jbvb.timf.tfmporbl.VblufRbngf;
import jbvb.timf.tfmporbl.VblufRbngf;
import jbvb.timf.tfmporbl.VblufRbngf;
import jbvb.timf.tfmporbl.VblufRbngf;
import jbvb.timf.tfmporbl.VblufRbngf;
import jbvb.timf.tfmporbl.WffkFiflds;
import jbvb.timf.tfmporbl.WffkFiflds;
import jbvb.timf.tfmporbl.WffkFiflds;
import jbvb.timf.tfmporbl.WffkFiflds;
import jbvb.timf.tfmporbl.WffkFiflds;
import jbvb.timf.zonf.ZonfRulfsProvidfr;
import jbvb.timf.zonf.ZonfRulfsProvidfr;
import jbvb.timf.zonf.ZonfRulfsProvidfr;
import jbvb.timf.zonf.ZonfRulfsProvidfr;
import jbvb.timf.zonf.ZonfRulfsProvidfr;
import jbvb.util.AbstrbdtMbp.SimplfImmutbblfEntry;
import jbvb.util.AbstrbdtMbp.SimplfImmutbblfEntry;
import jbvb.util.AbstrbdtMbp.SimplfImmutbblfEntry;
import jbvb.util.AbstrbdtMbp.SimplfImmutbblfEntry;
import jbvb.util.AbstrbdtMbp.SimplfImmutbblfEntry;
import jbvb.util.ArrbyList;
import jbvb.util.ArrbyList;
import jbvb.util.ArrbyList;
import jbvb.util.ArrbyList;
import jbvb.util.ArrbyList;
import jbvb.util.Arrbys;
import jbvb.util.Arrbys;
import jbvb.util.Arrbys;
import jbvb.util.Arrbys;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtions;
import jbvb.util.Collfdtions;
import jbvb.util.Collfdtions;
import jbvb.util.Collfdtions;
import jbvb.util.Collfdtions;
import jbvb.util.Compbrbtor;
import jbvb.util.Compbrbtor;
import jbvb.util.Compbrbtor;
import jbvb.util.Compbrbtor;
import jbvb.util.Compbrbtor;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiSft;
import jbvb.util.HbsiSft;
import jbvb.util.HbsiSft;
import jbvb.util.HbsiSft;
import jbvb.util.HbsiSft;
import jbvb.util.Itfrbtor;
import jbvb.util.Itfrbtor;
import jbvb.util.Itfrbtor;
import jbvb.util.Itfrbtor;
import jbvb.util.Itfrbtor;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.List;
import jbvb.util.List;
import jbvb.util.List;
import jbvb.util.List;
import jbvb.util.List;
import jbvb.util.Lodblf;
import jbvb.util.Lodblf;
import jbvb.util.Lodblf;
import jbvb.util.Lodblf;
import jbvb.util.Lodblf;
import jbvb.util.Mbp;
import jbvb.util.Mbp;
import jbvb.util.Mbp;
import jbvb.util.Mbp;
import jbvb.util.Mbp;
import jbvb.util.Mbp.Entry;
import jbvb.util.Mbp.Entry;
import jbvb.util.Mbp.Entry;
import jbvb.util.Mbp.Entry;
import jbvb.util.Mbp.Entry;
import jbvb.util.Objfdts;
import jbvb.util.Objfdts;
import jbvb.util.Objfdts;
import jbvb.util.Objfdts;
import jbvb.util.Objfdts;
import jbvb.util.Sft;
import jbvb.util.Sft;
import jbvb.util.Sft;
import jbvb.util.Sft;
import jbvb.util.Sft;
import jbvb.util.TimfZonf;
import jbvb.util.TimfZonf;
import jbvb.util.TimfZonf;
import jbvb.util.TimfZonf;
import jbvb.util.TimfZonf;
import jbvb.util.dondurrfnt.CondurrfntHbsiMbp;
import jbvb.util.dondurrfnt.CondurrfntHbsiMbp;
import jbvb.util.dondurrfnt.CondurrfntHbsiMbp;
import jbvb.util.dondurrfnt.CondurrfntHbsiMbp;
import jbvb.util.dondurrfnt.CondurrfntHbsiMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;





import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.TimfZonfNbmfUtility;
import sun.util.lodblf.providfr.TimfZonfNbmfUtility;
import sun.util.lodblf.providfr.TimfZonfNbmfUtility;
import sun.util.lodblf.providfr.TimfZonfNbmfUtility;
import sun.util.lodblf.providfr.TimfZonfNbmfUtility;





/**
/**
/**
/**
/**
 * Buildfr to drfbtf dbtf-timf formbttfrs.
 * Buildfr to drfbtf dbtf-timf formbttfrs.
 * Buildfr to drfbtf dbtf-timf formbttfrs.
 * Buildfr to drfbtf dbtf-timf formbttfrs.
 * Buildfr to drfbtf dbtf-timf formbttfrs.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Tiis bllows b {@dodf DbtfTimfFormbttfr} to bf drfbtfd.
 * Tiis bllows b {@dodf DbtfTimfFormbttfr} to bf drfbtfd.
 * Tiis bllows b {@dodf DbtfTimfFormbttfr} to bf drfbtfd.
 * Tiis bllows b {@dodf DbtfTimfFormbttfr} to bf drfbtfd.
 * Tiis bllows b {@dodf DbtfTimfFormbttfr} to bf drfbtfd.
 * All dbtf-timf formbttfrs brf drfbtfd ultimbtfly using tiis buildfr.
 * All dbtf-timf formbttfrs brf drfbtfd ultimbtfly using tiis buildfr.
 * All dbtf-timf formbttfrs brf drfbtfd ultimbtfly using tiis buildfr.
 * All dbtf-timf formbttfrs brf drfbtfd ultimbtfly using tiis buildfr.
 * All dbtf-timf formbttfrs brf drfbtfd ultimbtfly using tiis buildfr.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Tif bbsid flfmfnts of dbtf-timf dbn bll bf bddfd:
 * Tif bbsid flfmfnts of dbtf-timf dbn bll bf bddfd:
 * Tif bbsid flfmfnts of dbtf-timf dbn bll bf bddfd:
 * Tif bbsid flfmfnts of dbtf-timf dbn bll bf bddfd:
 * Tif bbsid flfmfnts of dbtf-timf dbn bll bf bddfd:
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <ul>
 * <li>Vbluf - b numfrid vbluf</li>
 * <li>Vbluf - b numfrid vbluf</li>
 * <li>Vbluf - b numfrid vbluf</li>
 * <li>Vbluf - b numfrid vbluf</li>
 * <li>Vbluf - b numfrid vbluf</li>
 * <li>Frbdtion - b frbdtionbl vbluf indluding tif dfdimbl plbdf. Alwbys usf tiis wifn
 * <li>Frbdtion - b frbdtionbl vbluf indluding tif dfdimbl plbdf. Alwbys usf tiis wifn
 * <li>Frbdtion - b frbdtionbl vbluf indluding tif dfdimbl plbdf. Alwbys usf tiis wifn
 * <li>Frbdtion - b frbdtionbl vbluf indluding tif dfdimbl plbdf. Alwbys usf tiis wifn
 * <li>Frbdtion - b frbdtionbl vbluf indluding tif dfdimbl plbdf. Alwbys usf tiis wifn
 * outputting frbdtions to fnsurf tibt tif frbdtion is pbrsfd dorrfdtly</li>
 * outputting frbdtions to fnsurf tibt tif frbdtion is pbrsfd dorrfdtly</li>
 * outputting frbdtions to fnsurf tibt tif frbdtion is pbrsfd dorrfdtly</li>
 * outputting frbdtions to fnsurf tibt tif frbdtion is pbrsfd dorrfdtly</li>
 * outputting frbdtions to fnsurf tibt tif frbdtion is pbrsfd dorrfdtly</li>
 * <li>Tfxt - tif tfxtubl fquivblfnt for tif vbluf</li>
 * <li>Tfxt - tif tfxtubl fquivblfnt for tif vbluf</li>
 * <li>Tfxt - tif tfxtubl fquivblfnt for tif vbluf</li>
 * <li>Tfxt - tif tfxtubl fquivblfnt for tif vbluf</li>
 * <li>Tfxt - tif tfxtubl fquivblfnt for tif vbluf</li>
 * <li>OffsftId/Offsft - tif {@linkplbin ZonfOffsft zonf offsft}</li>
 * <li>OffsftId/Offsft - tif {@linkplbin ZonfOffsft zonf offsft}</li>
 * <li>OffsftId/Offsft - tif {@linkplbin ZonfOffsft zonf offsft}</li>
 * <li>OffsftId/Offsft - tif {@linkplbin ZonfOffsft zonf offsft}</li>
 * <li>OffsftId/Offsft - tif {@linkplbin ZonfOffsft zonf offsft}</li>
 * <li>ZonfId - tif {@linkplbin ZonfId timf-zonf} id</li>
 * <li>ZonfId - tif {@linkplbin ZonfId timf-zonf} id</li>
 * <li>ZonfId - tif {@linkplbin ZonfId timf-zonf} id</li>
 * <li>ZonfId - tif {@linkplbin ZonfId timf-zonf} id</li>
 * <li>ZonfId - tif {@linkplbin ZonfId timf-zonf} id</li>
 * <li>ZonfTfxt - tif nbmf of tif timf-zonf</li>
 * <li>ZonfTfxt - tif nbmf of tif timf-zonf</li>
 * <li>ZonfTfxt - tif nbmf of tif timf-zonf</li>
 * <li>ZonfTfxt - tif nbmf of tif timf-zonf</li>
 * <li>ZonfTfxt - tif nbmf of tif timf-zonf</li>
 * <li>CironologyId - tif {@linkplbin Cironology dironology} id</li>
 * <li>CironologyId - tif {@linkplbin Cironology dironology} id</li>
 * <li>CironologyId - tif {@linkplbin Cironology dironology} id</li>
 * <li>CironologyId - tif {@linkplbin Cironology dironology} id</li>
 * <li>CironologyId - tif {@linkplbin Cironology dironology} id</li>
 * <li>CironologyTfxt - tif nbmf of tif dironology</li>
 * <li>CironologyTfxt - tif nbmf of tif dironology</li>
 * <li>CironologyTfxt - tif nbmf of tif dironology</li>
 * <li>CironologyTfxt - tif nbmf of tif dironology</li>
 * <li>CironologyTfxt - tif nbmf of tif dironology</li>
 * <li>Litfrbl - b tfxt litfrbl</li>
 * <li>Litfrbl - b tfxt litfrbl</li>
 * <li>Litfrbl - b tfxt litfrbl</li>
 * <li>Litfrbl - b tfxt litfrbl</li>
 * <li>Litfrbl - b tfxt litfrbl</li>
 * <li>Nfstfd bnd Optionbl - formbts dbn bf nfstfd or mbdf optionbl</li>
 * <li>Nfstfd bnd Optionbl - formbts dbn bf nfstfd or mbdf optionbl</li>
 * <li>Nfstfd bnd Optionbl - formbts dbn bf nfstfd or mbdf optionbl</li>
 * <li>Nfstfd bnd Optionbl - formbts dbn bf nfstfd or mbdf optionbl</li>
 * <li>Nfstfd bnd Optionbl - formbts dbn bf nfstfd or mbdf optionbl</li>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * </ul>
 * In bddition, bny of tif flfmfnts mby bf dfdorbtfd by pbdding, fitifr witi spbdfs or bny otifr dibrbdtfr.
 * In bddition, bny of tif flfmfnts mby bf dfdorbtfd by pbdding, fitifr witi spbdfs or bny otifr dibrbdtfr.
 * In bddition, bny of tif flfmfnts mby bf dfdorbtfd by pbdding, fitifr witi spbdfs or bny otifr dibrbdtfr.
 * In bddition, bny of tif flfmfnts mby bf dfdorbtfd by pbdding, fitifr witi spbdfs or bny otifr dibrbdtfr.
 * In bddition, bny of tif flfmfnts mby bf dfdorbtfd by pbdding, fitifr witi spbdfs or bny otifr dibrbdtfr.
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * Finblly, b siortibnd pbttfrn, mostly dompbtiblf witi {@dodf jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}
 * Finblly, b siortibnd pbttfrn, mostly dompbtiblf witi {@dodf jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}
 * Finblly, b siortibnd pbttfrn, mostly dompbtiblf witi {@dodf jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}
 * Finblly, b siortibnd pbttfrn, mostly dompbtiblf witi {@dodf jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}
 * Finblly, b siortibnd pbttfrn, mostly dompbtiblf witi {@dodf jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}
 * dbn bf usfd, sff {@link #bppfndPbttfrn(String)}.
 * dbn bf usfd, sff {@link #bppfndPbttfrn(String)}.
 * dbn bf usfd, sff {@link #bppfndPbttfrn(String)}.
 * dbn bf usfd, sff {@link #bppfndPbttfrn(String)}.
 * dbn bf usfd, sff {@link #bppfndPbttfrn(String)}.
 * In prbdtidf, tiis simply pbrsfs tif pbttfrn bnd dblls otifr mftiods on tif buildfr.
 * In prbdtidf, tiis simply pbrsfs tif pbttfrn bnd dblls otifr mftiods on tif buildfr.
 * In prbdtidf, tiis simply pbrsfs tif pbttfrn bnd dblls otifr mftiods on tif buildfr.
 * In prbdtidf, tiis simply pbrsfs tif pbttfrn bnd dblls otifr mftiods on tif buildfr.
 * In prbdtidf, tiis simply pbrsfs tif pbttfrn bnd dblls otifr mftiods on tif buildfr.
 *
 *
 *
 *
 *
 * @implSpfd
 * @implSpfd
 * @implSpfd
 * @implSpfd
 * @implSpfd
 * Tiis dlbss is b mutbblf buildfr intfndfd for usf from b singlf tirfbd.
 * Tiis dlbss is b mutbblf buildfr intfndfd for usf from b singlf tirfbd.
 * Tiis dlbss is b mutbblf buildfr intfndfd for usf from b singlf tirfbd.
 * Tiis dlbss is b mutbblf buildfr intfndfd for usf from b singlf tirfbd.
 * Tiis dlbss is b mutbblf buildfr intfndfd for usf from b singlf tirfbd.
 *
 *
 *
 *
 *
 * @sindf 1.8
 * @sindf 1.8
 * @sindf 1.8
 * @sindf 1.8
 * @sindf 1.8
 */
 */
 */
 */
 */
publid finbl dlbss DbtfTimfFormbttfrBuildfr {
publid finbl dlbss DbtfTimfFormbttfrBuildfr {
publid finbl dlbss DbtfTimfFormbttfrBuildfr {
publid finbl dlbss DbtfTimfFormbttfrBuildfr {
publid finbl dlbss DbtfTimfFormbttfrBuildfr {





    /**
    /**
    /**
    /**
    /**
     * Qufry for b timf-zonf tibt is rfgion-only.
     * Qufry for b timf-zonf tibt is rfgion-only.
     * Qufry for b timf-zonf tibt is rfgion-only.
     * Qufry for b timf-zonf tibt is rfgion-only.
     * Qufry for b timf-zonf tibt is rfgion-only.
     */
     */
     */
     */
     */
    privbtf stbtid finbl TfmporblQufry<ZonfId> QUERY_REGION_ONLY = (tfmporbl) -> {
    privbtf stbtid finbl TfmporblQufry<ZonfId> QUERY_REGION_ONLY = (tfmporbl) -> {
    privbtf stbtid finbl TfmporblQufry<ZonfId> QUERY_REGION_ONLY = (tfmporbl) -> {
    privbtf stbtid finbl TfmporblQufry<ZonfId> QUERY_REGION_ONLY = (tfmporbl) -> {
    privbtf stbtid finbl TfmporblQufry<ZonfId> QUERY_REGION_ONLY = (tfmporbl) -> {
        ZonfId zonf = tfmporbl.qufry(TfmporblQufrifs.zonfId());
        ZonfId zonf = tfmporbl.qufry(TfmporblQufrifs.zonfId());
        ZonfId zonf = tfmporbl.qufry(TfmporblQufrifs.zonfId());
        ZonfId zonf = tfmporbl.qufry(TfmporblQufrifs.zonfId());
        ZonfId zonf = tfmporbl.qufry(TfmporblQufrifs.zonfId());
        rfturn (zonf != null && zonf instbndfof ZonfOffsft == fblsf ? zonf : null);
        rfturn (zonf != null && zonf instbndfof ZonfOffsft == fblsf ? zonf : null);
        rfturn (zonf != null && zonf instbndfof ZonfOffsft == fblsf ? zonf : null);
        rfturn (zonf != null && zonf instbndfof ZonfOffsft == fblsf ? zonf : null);
        rfturn (zonf != null && zonf instbndfof ZonfOffsft == fblsf ? zonf : null);
    };
    };
    };
    };
    };





    /**
    /**
    /**
    /**
    /**
     * Tif durrfntly bdtivf buildfr, usfd by tif outfrmost buildfr.
     * Tif durrfntly bdtivf buildfr, usfd by tif outfrmost buildfr.
     * Tif durrfntly bdtivf buildfr, usfd by tif outfrmost buildfr.
     * Tif durrfntly bdtivf buildfr, usfd by tif outfrmost buildfr.
     * Tif durrfntly bdtivf buildfr, usfd by tif outfrmost buildfr.
     */
     */
     */
     */
     */
    privbtf DbtfTimfFormbttfrBuildfr bdtivf = tiis;
    privbtf DbtfTimfFormbttfrBuildfr bdtivf = tiis;
    privbtf DbtfTimfFormbttfrBuildfr bdtivf = tiis;
    privbtf DbtfTimfFormbttfrBuildfr bdtivf = tiis;
    privbtf DbtfTimfFormbttfrBuildfr bdtivf = tiis;
    /**
    /**
    /**
    /**
    /**
     * Tif pbrfnt buildfr, null for tif outfrmost buildfr.
     * Tif pbrfnt buildfr, null for tif outfrmost buildfr.
     * Tif pbrfnt buildfr, null for tif outfrmost buildfr.
     * Tif pbrfnt buildfr, null for tif outfrmost buildfr.
     * Tif pbrfnt buildfr, null for tif outfrmost buildfr.
     */
     */
     */
     */
     */
    privbtf finbl DbtfTimfFormbttfrBuildfr pbrfnt;
    privbtf finbl DbtfTimfFormbttfrBuildfr pbrfnt;
    privbtf finbl DbtfTimfFormbttfrBuildfr pbrfnt;
    privbtf finbl DbtfTimfFormbttfrBuildfr pbrfnt;
    privbtf finbl DbtfTimfFormbttfrBuildfr pbrfnt;
    /**
    /**
    /**
    /**
    /**
     * Tif list of printfrs tibt will bf usfd.
     * Tif list of printfrs tibt will bf usfd.
     * Tif list of printfrs tibt will bf usfd.
     * Tif list of printfrs tibt will bf usfd.
     * Tif list of printfrs tibt will bf usfd.
     */
     */
     */
     */
     */
    privbtf finbl List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs = nfw ArrbyList<>();
    privbtf finbl List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs = nfw ArrbyList<>();
    privbtf finbl List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs = nfw ArrbyList<>();
    privbtf finbl List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs = nfw ArrbyList<>();
    privbtf finbl List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs = nfw ArrbyList<>();
    /**
    /**
    /**
    /**
    /**
     * Wiftifr tiis buildfr produdfs bn optionbl formbttfr.
     * Wiftifr tiis buildfr produdfs bn optionbl formbttfr.
     * Wiftifr tiis buildfr produdfs bn optionbl formbttfr.
     * Wiftifr tiis buildfr produdfs bn optionbl formbttfr.
     * Wiftifr tiis buildfr produdfs bn optionbl formbttfr.
     */
     */
     */
     */
     */
    privbtf finbl boolfbn optionbl;
    privbtf finbl boolfbn optionbl;
    privbtf finbl boolfbn optionbl;
    privbtf finbl boolfbn optionbl;
    privbtf finbl boolfbn optionbl;
    /**
    /**
    /**
    /**
    /**
     * Tif widti to pbd tif nfxt fifld to.
     * Tif widti to pbd tif nfxt fifld to.
     * Tif widti to pbd tif nfxt fifld to.
     * Tif widti to pbd tif nfxt fifld to.
     * Tif widti to pbd tif nfxt fifld to.
     */
     */
     */
     */
     */
    privbtf int pbdNfxtWidti;
    privbtf int pbdNfxtWidti;
    privbtf int pbdNfxtWidti;
    privbtf int pbdNfxtWidti;
    privbtf int pbdNfxtWidti;
    /**
    /**
    /**
    /**
    /**
     * Tif dibrbdtfr to pbd tif nfxt fifld witi.
     * Tif dibrbdtfr to pbd tif nfxt fifld witi.
     * Tif dibrbdtfr to pbd tif nfxt fifld witi.
     * Tif dibrbdtfr to pbd tif nfxt fifld witi.
     * Tif dibrbdtfr to pbd tif nfxt fifld witi.
     */
     */
     */
     */
     */
    privbtf dibr pbdNfxtCibr;
    privbtf dibr pbdNfxtCibr;
    privbtf dibr pbdNfxtCibr;
    privbtf dibr pbdNfxtCibr;
    privbtf dibr pbdNfxtCibr;
    /**
    /**
    /**
    /**
    /**
     * Tif indfx of tif lbst vbribblf widti vbluf pbrsfr.
     * Tif indfx of tif lbst vbribblf widti vbluf pbrsfr.
     * Tif indfx of tif lbst vbribblf widti vbluf pbrsfr.
     * Tif indfx of tif lbst vbribblf widti vbluf pbrsfr.
     * Tif indfx of tif lbst vbribblf widti vbluf pbrsfr.
     */
     */
     */
     */
     */
    privbtf int vblufPbrsfrIndfx = -1;
    privbtf int vblufPbrsfrIndfx = -1;
    privbtf int vblufPbrsfrIndfx = -1;
    privbtf int vblufPbrsfrIndfx = -1;
    privbtf int vblufPbrsfrIndfx = -1;





    /**
    /**
    /**
    /**
    /**
     * Gfts tif formbtting pbttfrn for dbtf bnd timf stylfs for b lodblf bnd dironology.
     * Gfts tif formbtting pbttfrn for dbtf bnd timf stylfs for b lodblf bnd dironology.
     * Gfts tif formbtting pbttfrn for dbtf bnd timf stylfs for b lodblf bnd dironology.
     * Gfts tif formbtting pbttfrn for dbtf bnd timf stylfs for b lodblf bnd dironology.
     * Gfts tif formbtting pbttfrn for dbtf bnd timf stylfs for b lodblf bnd dironology.
     * Tif lodblf bnd dironology brf usfd to lookup tif lodblf spfdifid formbt
     * Tif lodblf bnd dironology brf usfd to lookup tif lodblf spfdifid formbt
     * Tif lodblf bnd dironology brf usfd to lookup tif lodblf spfdifid formbt
     * Tif lodblf bnd dironology brf usfd to lookup tif lodblf spfdifid formbt
     * Tif lodblf bnd dironology brf usfd to lookup tif lodblf spfdifid formbt
     * for tif rfqufstfd dbtfStylf bnd/or timfStylf.
     * for tif rfqufstfd dbtfStylf bnd/or timfStylf.
     * for tif rfqufstfd dbtfStylf bnd/or timfStylf.
     * for tif rfqufstfd dbtfStylf bnd/or timfStylf.
     * for tif rfqufstfd dbtfStylf bnd/or timfStylf.
     *
     *
     *
     *
     *
     * @pbrbm dbtfStylf  tif FormbtStylf for tif dbtf, null for timf-only pbttfrn
     * @pbrbm dbtfStylf  tif FormbtStylf for tif dbtf, null for timf-only pbttfrn
     * @pbrbm dbtfStylf  tif FormbtStylf for tif dbtf, null for timf-only pbttfrn
     * @pbrbm dbtfStylf  tif FormbtStylf for tif dbtf, null for timf-only pbttfrn
     * @pbrbm dbtfStylf  tif FormbtStylf for tif dbtf, null for timf-only pbttfrn
     * @pbrbm timfStylf  tif FormbtStylf for tif timf, null for dbtf-only pbttfrn
     * @pbrbm timfStylf  tif FormbtStylf for tif timf, null for dbtf-only pbttfrn
     * @pbrbm timfStylf  tif FormbtStylf for tif timf, null for dbtf-only pbttfrn
     * @pbrbm timfStylf  tif FormbtStylf for tif timf, null for dbtf-only pbttfrn
     * @pbrbm timfStylf  tif FormbtStylf for tif timf, null for dbtf-only pbttfrn
     * @pbrbm dirono  tif Cironology, non-null
     * @pbrbm dirono  tif Cironology, non-null
     * @pbrbm dirono  tif Cironology, non-null
     * @pbrbm dirono  tif Cironology, non-null
     * @pbrbm dirono  tif Cironology, non-null
     * @pbrbm lodblf  tif lodblf, non-null
     * @pbrbm lodblf  tif lodblf, non-null
     * @pbrbm lodblf  tif lodblf, non-null
     * @pbrbm lodblf  tif lodblf, non-null
     * @pbrbm lodblf  tif lodblf, non-null
     * @rfturn tif lodblf bnd Cironology spfdifid formbtting pbttfrn
     * @rfturn tif lodblf bnd Cironology spfdifid formbtting pbttfrn
     * @rfturn tif lodblf bnd Cironology spfdifid formbtting pbttfrn
     * @rfturn tif lodblf bnd Cironology spfdifid formbtting pbttfrn
     * @rfturn tif lodblf bnd Cironology spfdifid formbtting pbttfrn
     * @tirows IllfgblArgumfntExdfption if boti dbtfStylf bnd timfStylf brf null
     * @tirows IllfgblArgumfntExdfption if boti dbtfStylf bnd timfStylf brf null
     * @tirows IllfgblArgumfntExdfption if boti dbtfStylf bnd timfStylf brf null
     * @tirows IllfgblArgumfntExdfption if boti dbtfStylf bnd timfStylf brf null
     * @tirows IllfgblArgumfntExdfption if boti dbtfStylf bnd timfStylf brf null
     */
     */
     */
     */
     */
    publid stbtid String gftLodblizfdDbtfTimfPbttfrn(FormbtStylf dbtfStylf, FormbtStylf timfStylf,
    publid stbtid String gftLodblizfdDbtfTimfPbttfrn(FormbtStylf dbtfStylf, FormbtStylf timfStylf,
    publid stbtid String gftLodblizfdDbtfTimfPbttfrn(FormbtStylf dbtfStylf, FormbtStylf timfStylf,
    publid stbtid String gftLodblizfdDbtfTimfPbttfrn(FormbtStylf dbtfStylf, FormbtStylf timfStylf,
    publid stbtid String gftLodblizfdDbtfTimfPbttfrn(FormbtStylf dbtfStylf, FormbtStylf timfStylf,
            Cironology dirono, Lodblf lodblf) {
            Cironology dirono, Lodblf lodblf) {
            Cironology dirono, Lodblf lodblf) {
            Cironology dirono, Lodblf lodblf) {
            Cironology dirono, Lodblf lodblf) {
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(dirono, "dirono");
        Objfdts.rfquirfNonNull(dirono, "dirono");
        Objfdts.rfquirfNonNull(dirono, "dirono");
        Objfdts.rfquirfNonNull(dirono, "dirono");
        Objfdts.rfquirfNonNull(dirono, "dirono");
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
            tirow nfw IllfgblArgumfntExdfption("Eitifr dbtfStylf or timfStylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr dbtfStylf or timfStylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr dbtfStylf or timfStylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr dbtfStylf or timfStylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr dbtfStylf or timfStylf must bf non-null");
        }
        }
        }
        }
        }
        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.gftRfsourdfBundlfBbsfd().gftLodblfRfsourdfs(lodblf);
        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.gftRfsourdfBundlfBbsfd().gftLodblfRfsourdfs(lodblf);
        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.gftRfsourdfBundlfBbsfd().gftLodblfRfsourdfs(lodblf);
        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.gftRfsourdfBundlfBbsfd().gftLodblfRfsourdfs(lodblf);
        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.gftRfsourdfBundlfBbsfd().gftLodblfRfsourdfs(lodblf);
        String pbttfrn = lr.gftJbvbTimfDbtfTimfPbttfrn(
        String pbttfrn = lr.gftJbvbTimfDbtfTimfPbttfrn(
        String pbttfrn = lr.gftJbvbTimfDbtfTimfPbttfrn(
        String pbttfrn = lr.gftJbvbTimfDbtfTimfPbttfrn(
        String pbttfrn = lr.gftJbvbTimfDbtfTimfPbttfrn(
                donvfrtStylf(timfStylf), donvfrtStylf(dbtfStylf), dirono.gftCblfndbrTypf());
                donvfrtStylf(timfStylf), donvfrtStylf(dbtfStylf), dirono.gftCblfndbrTypf());
                donvfrtStylf(timfStylf), donvfrtStylf(dbtfStylf), dirono.gftCblfndbrTypf());
                donvfrtStylf(timfStylf), donvfrtStylf(dbtfStylf), dirono.gftCblfndbrTypf());
                donvfrtStylf(timfStylf), donvfrtStylf(dbtfStylf), dirono.gftCblfndbrTypf());
        rfturn pbttfrn;
        rfturn pbttfrn;
        rfturn pbttfrn;
        rfturn pbttfrn;
        rfturn pbttfrn;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Convfrts tif givfn FormbtStylf to tif jbvb.tfxt.DbtfFormbt stylf.
     * Convfrts tif givfn FormbtStylf to tif jbvb.tfxt.DbtfFormbt stylf.
     * Convfrts tif givfn FormbtStylf to tif jbvb.tfxt.DbtfFormbt stylf.
     * Convfrts tif givfn FormbtStylf to tif jbvb.tfxt.DbtfFormbt stylf.
     * Convfrts tif givfn FormbtStylf to tif jbvb.tfxt.DbtfFormbt stylf.
     *
     *
     *
     *
     *
     * @pbrbm stylf  tif FormbtStylf stylf
     * @pbrbm stylf  tif FormbtStylf stylf
     * @pbrbm stylf  tif FormbtStylf stylf
     * @pbrbm stylf  tif FormbtStylf stylf
     * @pbrbm stylf  tif FormbtStylf stylf
     * @rfturn tif int stylf, or -1 if stylf is null, indidbting un-rfquirfd
     * @rfturn tif int stylf, or -1 if stylf is null, indidbting un-rfquirfd
     * @rfturn tif int stylf, or -1 if stylf is null, indidbting un-rfquirfd
     * @rfturn tif int stylf, or -1 if stylf is null, indidbting un-rfquirfd
     * @rfturn tif int stylf, or -1 if stylf is null, indidbting un-rfquirfd
     */
     */
     */
     */
     */
    privbtf stbtid int donvfrtStylf(FormbtStylf stylf) {
    privbtf stbtid int donvfrtStylf(FormbtStylf stylf) {
    privbtf stbtid int donvfrtStylf(FormbtStylf stylf) {
    privbtf stbtid int donvfrtStylf(FormbtStylf stylf) {
    privbtf stbtid int donvfrtStylf(FormbtStylf stylf) {
        if (stylf == null) {
        if (stylf == null) {
        if (stylf == null) {
        if (stylf == null) {
        if (stylf == null) {
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
            rfturn -1;
        }
        }
        }
        }
        }
        rfturn stylf.ordinbl();  // indidfs ibppfn to blign
        rfturn stylf.ordinbl();  // indidfs ibppfn to blign
        rfturn stylf.ordinbl();  // indidfs ibppfn to blign
        rfturn stylf.ordinbl();  // indidfs ibppfn to blign
        rfturn stylf.ordinbl();  // indidfs ibppfn to blign
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr() {
    publid DbtfTimfFormbttfrBuildfr() {
    publid DbtfTimfFormbttfrBuildfr() {
    publid DbtfTimfFormbttfrBuildfr() {
    publid DbtfTimfFormbttfrBuildfr() {
        supfr();
        supfr();
        supfr();
        supfr();
        supfr();
        pbrfnt = null;
        pbrfnt = null;
        pbrfnt = null;
        pbrfnt = null;
        pbrfnt = null;
        optionbl = fblsf;
        optionbl = fblsf;
        optionbl = fblsf;
        optionbl = fblsf;
        optionbl = fblsf;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     * Construdts b nfw instbndf of tif buildfr.
     *
     *
     *
     *
     *
     * @pbrbm pbrfnt  tif pbrfnt buildfr, not null
     * @pbrbm pbrfnt  tif pbrfnt buildfr, not null
     * @pbrbm pbrfnt  tif pbrfnt buildfr, not null
     * @pbrbm pbrfnt  tif pbrfnt buildfr, not null
     * @pbrbm pbrfnt  tif pbrfnt buildfr, not null
     * @pbrbm optionbl  wiftifr tif formbttfr is optionbl, not null
     * @pbrbm optionbl  wiftifr tif formbttfr is optionbl, not null
     * @pbrbm optionbl  wiftifr tif formbttfr is optionbl, not null
     * @pbrbm optionbl  wiftifr tif formbttfr is optionbl, not null
     * @pbrbm optionbl  wiftifr tif formbttfr is optionbl, not null
     */
     */
     */
     */
     */
    privbtf DbtfTimfFormbttfrBuildfr(DbtfTimfFormbttfrBuildfr pbrfnt, boolfbn optionbl) {
    privbtf DbtfTimfFormbttfrBuildfr(DbtfTimfFormbttfrBuildfr pbrfnt, boolfbn optionbl) {
    privbtf DbtfTimfFormbttfrBuildfr(DbtfTimfFormbttfrBuildfr pbrfnt, boolfbn optionbl) {
    privbtf DbtfTimfFormbttfrBuildfr(DbtfTimfFormbttfrBuildfr pbrfnt, boolfbn optionbl) {
    privbtf DbtfTimfFormbttfrBuildfr(DbtfTimfFormbttfrBuildfr pbrfnt, boolfbn optionbl) {
        supfr();
        supfr();
        supfr();
        supfr();
        supfr();
        tiis.pbrfnt = pbrfnt;
        tiis.pbrfnt = pbrfnt;
        tiis.pbrfnt = pbrfnt;
        tiis.pbrfnt = pbrfnt;
        tiis.pbrfnt = pbrfnt;
        tiis.optionbl = optionbl;
        tiis.optionbl = optionbl;
        tiis.optionbl = optionbl;
        tiis.optionbl = optionbl;
        tiis.optionbl = optionbl;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Cibngfs tif pbrsf stylf to bf dbsf sfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf sfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf sfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf sfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf sfnsitivf for tif rfmbindfr of tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf sfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf sfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf sfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf sfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf sfnsitivf modf.
     * Sff {@link #pbrsfCbsfInsfnsitivf} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfInsfnsitivf} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfInsfnsitivf} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfInsfnsitivf} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfInsfnsitivf} for tif oppositf sftting.
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Sindf tif dffbult is dbsf sfnsitivf, tiis mftiod siould only bf usfd bftfr
     * Sindf tif dffbult is dbsf sfnsitivf, tiis mftiod siould only bf usfd bftfr
     * Sindf tif dffbult is dbsf sfnsitivf, tiis mftiod siould only bf usfd bftfr
     * Sindf tif dffbult is dbsf sfnsitivf, tiis mftiod siould only bf usfd bftfr
     * Sindf tif dffbult is dbsf sfnsitivf, tiis mftiod siould only bf usfd bftfr
     * b prfvious dbll to {@dodf #pbrsfCbsfInsfnsitivf}.
     * b prfvious dbll to {@dodf #pbrsfCbsfInsfnsitivf}.
     * b prfvious dbll to {@dodf #pbrsfCbsfInsfnsitivf}.
     * b prfvious dbll to {@dodf #pbrsfCbsfInsfnsitivf}.
     * b prfvious dbll to {@dodf #pbrsfCbsfInsfnsitivf}.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfSfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfSfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfSfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfSfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfSfnsitivf() {
        bppfndIntfrnbl(SfttingsPbrsfr.SENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.SENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.SENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.SENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.SENSITIVE);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cibngfs tif pbrsf stylf to bf dbsf insfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf insfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf insfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf insfnsitivf for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf dbsf insfnsitivf for tif rfmbindfr of tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Pbrsing dbn bf dbsf sfnsitivf or insfnsitivf - by dffbult it is dbsf sfnsitivf.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * Tiis mftiod bllows tif dbsf sfnsitivity sftting of pbrsing to bf dibngfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * Cblling tiis mftiod dibngfs tif stbtf of tif buildfr sudi tibt bll
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf insfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf insfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf insfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf insfnsitivf modf.
     * subsfqufnt buildfr mftiod dblls will pbrsf tfxt in dbsf insfnsitivf modf.
     * Sff {@link #pbrsfCbsfSfnsitivf()} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfSfnsitivf()} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfSfnsitivf()} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfSfnsitivf()} for tif oppositf sftting.
     * Sff {@link #pbrsfCbsfSfnsitivf()} for tif oppositf sftting.
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * Tif pbrsf dbsf sfnsitivf/insfnsitivf mftiods mby bf dbllfd bt bny point
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * in tif buildfr, tius tif pbrsfr dbn swbp bftwffn dbsf pbrsing modfs
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     * multiplf timfs during tif pbrsf.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfInsfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfInsfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfInsfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfInsfnsitivf() {
    publid DbtfTimfFormbttfrBuildfr pbrsfCbsfInsfnsitivf() {
        bppfndIntfrnbl(SfttingsPbrsfr.INSENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.INSENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.INSENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.INSENSITIVE);
        bppfndIntfrnbl(SfttingsPbrsfr.INSENSITIVE);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Cibngfs tif pbrsf stylf to bf stridt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf stridt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf stridt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf stridt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf stridt for tif rfmbindfr of tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf stridt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf stridt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf stridt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf stridt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf stridt from tiis point onwbrds.
     * As stridt is tif dffbult, tiis is normblly only nffdfd bftfr dblling {@link #pbrsfLfnifnt()}.
     * As stridt is tif dffbult, tiis is normblly only nffdfd bftfr dblling {@link #pbrsfLfnifnt()}.
     * As stridt is tif dffbult, tiis is normblly only nffdfd bftfr dblling {@link #pbrsfLfnifnt()}.
     * As stridt is tif dffbult, tiis is normblly only nffdfd bftfr dblling {@link #pbrsfLfnifnt()}.
     * As stridt is tif dffbult, tiis is normblly only nffdfd bftfr dblling {@link #pbrsfLfnifnt()}.
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * donstrudtfd or until {@dodf pbrsfLfnifnt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfLfnifnt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfLfnifnt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfLfnifnt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfLfnifnt} is dbllfd.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbrsfStridt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfStridt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfStridt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfStridt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfStridt() {
        bppfndIntfrnbl(SfttingsPbrsfr.STRICT);
        bppfndIntfrnbl(SfttingsPbrsfr.STRICT);
        bppfndIntfrnbl(SfttingsPbrsfr.STRICT);
        bppfndIntfrnbl(SfttingsPbrsfr.STRICT);
        bppfndIntfrnbl(SfttingsPbrsfr.STRICT);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cibngfs tif pbrsf stylf to bf lfnifnt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf lfnifnt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf lfnifnt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf lfnifnt for tif rfmbindfr of tif formbttfr.
     * Cibngfs tif pbrsf stylf to bf lfnifnt for tif rfmbindfr of tif formbttfr.
     * Notf tibt dbsf sfnsitivity is sft sfpbrbtfly to tiis mftiod.
     * Notf tibt dbsf sfnsitivity is sft sfpbrbtfly to tiis mftiod.
     * Notf tibt dbsf sfnsitivity is sft sfpbrbtfly to tiis mftiod.
     * Notf tibt dbsf sfnsitivity is sft sfpbrbtfly to tiis mftiod.
     * Notf tibt dbsf sfnsitivity is sft sfpbrbtfly to tiis mftiod.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Pbrsing dbn bf stridt or lfnifnt - by dffbult its stridt.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Tiis dontrols tif dfgrff of flfxibility in mbtdiing tif tfxt bnd sign stylfs.
     * Applidbtions dblling tiis mftiod siould typidblly blso dbll {@link #pbrsfCbsfInsfnsitivf()}.
     * Applidbtions dblling tiis mftiod siould typidblly blso dbll {@link #pbrsfCbsfInsfnsitivf()}.
     * Applidbtions dblling tiis mftiod siould typidblly blso dbll {@link #pbrsfCbsfInsfnsitivf()}.
     * Applidbtions dblling tiis mftiod siould typidblly blso dbll {@link #pbrsfCbsfInsfnsitivf()}.
     * Applidbtions dblling tiis mftiod siould typidblly blso dbll {@link #pbrsfCbsfInsfnsitivf()}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf lfnifnt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf lfnifnt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf lfnifnt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf lfnifnt from tiis point onwbrds.
     * Wifn usfd, tiis mftiod dibngfs tif pbrsing to bf lfnifnt from tiis point onwbrds.
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * Tif dibngf will rfmbin in fordf until tif fnd of tif formbttfr tibt is fvfntublly
     * donstrudtfd or until {@dodf pbrsfStridt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfStridt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfStridt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfStridt} is dbllfd.
     * donstrudtfd or until {@dodf pbrsfStridt} is dbllfd.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbrsfLfnifnt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfLfnifnt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfLfnifnt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfLfnifnt() {
    publid DbtfTimfFormbttfrBuildfr pbrsfLfnifnt() {
        bppfndIntfrnbl(SfttingsPbrsfr.LENIENT);
        bppfndIntfrnbl(SfttingsPbrsfr.LENIENT);
        bppfndIntfrnbl(SfttingsPbrsfr.LENIENT);
        bppfndIntfrnbl(SfttingsPbrsfr.LENIENT);
        bppfndIntfrnbl(SfttingsPbrsfr.LENIENT);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds b dffbult vbluf for b fifld to tif formbttfr for usf in pbrsing.
     * Appfnds b dffbult vbluf for b fifld to tif formbttfr for usf in pbrsing.
     * Appfnds b dffbult vbluf for b fifld to tif formbttfr for usf in pbrsing.
     * Appfnds b dffbult vbluf for b fifld to tif formbttfr for usf in pbrsing.
     * Appfnds b dffbult vbluf for b fifld to tif formbttfr for usf in pbrsing.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to tif buildfr to injfdt b dffbult vbluf
     * Tiis bppfnds bn instrudtion to tif buildfr to injfdt b dffbult vbluf
     * Tiis bppfnds bn instrudtion to tif buildfr to injfdt b dffbult vbluf
     * Tiis bppfnds bn instrudtion to tif buildfr to injfdt b dffbult vbluf
     * Tiis bppfnds bn instrudtion to tif buildfr to injfdt b dffbult vbluf
     * into tif pbrsfd rfsult. Tiis is fspfdiblly usfful in donjundtion witi
     * into tif pbrsfd rfsult. Tiis is fspfdiblly usfful in donjundtion witi
     * into tif pbrsfd rfsult. Tiis is fspfdiblly usfful in donjundtion witi
     * into tif pbrsfd rfsult. Tiis is fspfdiblly usfful in donjundtion witi
     * into tif pbrsfd rfsult. Tiis is fspfdiblly usfful in donjundtion witi
     * optionbl pbrts of tif formbttfr.
     * optionbl pbrts of tif formbttfr.
     * optionbl pbrts of tif formbttfr.
     * optionbl pbrts of tif formbttfr.
     * optionbl pbrts of tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, donsidfr b formbttfr tibt pbrsfs tif yfbr, followfd by
     * For fxbmplf, donsidfr b formbttfr tibt pbrsfs tif yfbr, followfd by
     * For fxbmplf, donsidfr b formbttfr tibt pbrsfs tif yfbr, followfd by
     * For fxbmplf, donsidfr b formbttfr tibt pbrsfs tif yfbr, followfd by
     * For fxbmplf, donsidfr b formbttfr tibt pbrsfs tif yfbr, followfd by
     * bn optionbl monti, witi b furtifr optionbl dby-of-monti. Using sudi b
     * bn optionbl monti, witi b furtifr optionbl dby-of-monti. Using sudi b
     * bn optionbl monti, witi b furtifr optionbl dby-of-monti. Using sudi b
     * bn optionbl monti, witi b furtifr optionbl dby-of-monti. Using sudi b
     * bn optionbl monti, witi b furtifr optionbl dby-of-monti. Using sudi b
     * formbttfr would rfquirf tif dblling dodf to difdk wiftifr b full dbtf,
     * formbttfr would rfquirf tif dblling dodf to difdk wiftifr b full dbtf,
     * formbttfr would rfquirf tif dblling dodf to difdk wiftifr b full dbtf,
     * formbttfr would rfquirf tif dblling dodf to difdk wiftifr b full dbtf,
     * formbttfr would rfquirf tif dblling dodf to difdk wiftifr b full dbtf,
     * yfbr-monti or just b yfbr ibd bffn pbrsfd. Tiis mftiod dbn bf usfd to
     * yfbr-monti or just b yfbr ibd bffn pbrsfd. Tiis mftiod dbn bf usfd to
     * yfbr-monti or just b yfbr ibd bffn pbrsfd. Tiis mftiod dbn bf usfd to
     * yfbr-monti or just b yfbr ibd bffn pbrsfd. Tiis mftiod dbn bf usfd to
     * yfbr-monti or just b yfbr ibd bffn pbrsfd. Tiis mftiod dbn bf usfd to
     * dffbult tif monti bnd dby-of-monti to b sfnsiblf vbluf, sudi bs tif
     * dffbult tif monti bnd dby-of-monti to b sfnsiblf vbluf, sudi bs tif
     * dffbult tif monti bnd dby-of-monti to b sfnsiblf vbluf, sudi bs tif
     * dffbult tif monti bnd dby-of-monti to b sfnsiblf vbluf, sudi bs tif
     * dffbult tif monti bnd dby-of-monti to b sfnsiblf vbluf, sudi bs tif
     * first of tif monti, bllowing tif dblling dodf to blwbys gft b dbtf.
     * first of tif monti, bllowing tif dblling dodf to blwbys gft b dbtf.
     * first of tif monti, bllowing tif dblling dodf to blwbys gft b dbtf.
     * first of tif monti, bllowing tif dblling dodf to blwbys gft b dbtf.
     * first of tif monti, bllowing tif dblling dodf to blwbys gft b dbtf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tiis mftiod ibs no ffffdt.
     * During formbtting, tiis mftiod ibs no ffffdt.
     * During formbtting, tiis mftiod ibs no ffffdt.
     * During formbtting, tiis mftiod ibs no ffffdt.
     * During formbtting, tiis mftiod ibs no ffffdt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif durrfnt stbtf of tif pbrsf is inspfdtfd.
     * During pbrsing, tif durrfnt stbtf of tif pbrsf is inspfdtfd.
     * During pbrsing, tif durrfnt stbtf of tif pbrsf is inspfdtfd.
     * During pbrsing, tif durrfnt stbtf of tif pbrsf is inspfdtfd.
     * During pbrsing, tif durrfnt stbtf of tif pbrsf is inspfdtfd.
     * If tif spfdififd fifld ibs no bssodibtfd vbluf, bfdbusf it ibs not bffn
     * If tif spfdififd fifld ibs no bssodibtfd vbluf, bfdbusf it ibs not bffn
     * If tif spfdififd fifld ibs no bssodibtfd vbluf, bfdbusf it ibs not bffn
     * If tif spfdififd fifld ibs no bssodibtfd vbluf, bfdbusf it ibs not bffn
     * If tif spfdififd fifld ibs no bssodibtfd vbluf, bfdbusf it ibs not bffn
     * pbrsfd suddfssfully bt tibt point, tifn tif spfdififd vbluf is injfdtfd
     * pbrsfd suddfssfully bt tibt point, tifn tif spfdififd vbluf is injfdtfd
     * pbrsfd suddfssfully bt tibt point, tifn tif spfdififd vbluf is injfdtfd
     * pbrsfd suddfssfully bt tibt point, tifn tif spfdififd vbluf is injfdtfd
     * pbrsfd suddfssfully bt tibt point, tifn tif spfdififd vbluf is injfdtfd
     * into tif pbrsf rfsult. Injfdtion is immfdibtf, tius tif fifld-vbluf pbir
     * into tif pbrsf rfsult. Injfdtion is immfdibtf, tius tif fifld-vbluf pbir
     * into tif pbrsf rfsult. Injfdtion is immfdibtf, tius tif fifld-vbluf pbir
     * into tif pbrsf rfsult. Injfdtion is immfdibtf, tius tif fifld-vbluf pbir
     * into tif pbrsf rfsult. Injfdtion is immfdibtf, tius tif fifld-vbluf pbir
     * will bf visiblf to bny subsfqufnt flfmfnts in tif formbttfr.
     * will bf visiblf to bny subsfqufnt flfmfnts in tif formbttfr.
     * will bf visiblf to bny subsfqufnt flfmfnts in tif formbttfr.
     * will bf visiblf to bny subsfqufnt flfmfnts in tif formbttfr.
     * will bf visiblf to bny subsfqufnt flfmfnts in tif formbttfr.
     * As sudi, tiis mftiod is normblly dbllfd bt tif fnd of tif buildfr.
     * As sudi, tiis mftiod is normblly dbllfd bt tif fnd of tif buildfr.
     * As sudi, tiis mftiod is normblly dbllfd bt tif fnd of tif buildfr.
     * As sudi, tiis mftiod is normblly dbllfd bt tif fnd of tif buildfr.
     * As sudi, tiis mftiod is normblly dbllfd bt tif fnd of tif buildfr.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to dffbult tif vbluf of, not null
     * @pbrbm fifld  tif fifld to dffbult tif vbluf of, not null
     * @pbrbm fifld  tif fifld to dffbult tif vbluf of, not null
     * @pbrbm fifld  tif fifld to dffbult tif vbluf of, not null
     * @pbrbm fifld  tif fifld to dffbult tif vbluf of, not null
     * @pbrbm vbluf  tif vbluf to dffbult tif fifld to
     * @pbrbm vbluf  tif vbluf to dffbult tif fifld to
     * @pbrbm vbluf  tif vbluf to dffbult tif fifld to
     * @pbrbm vbluf  tif vbluf to dffbult tif fifld to
     * @pbrbm vbluf  tif vbluf to dffbult tif fifld to
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbrsfDffbulting(TfmporblFifld fifld, long vbluf) {
    publid DbtfTimfFormbttfrBuildfr pbrsfDffbulting(TfmporblFifld fifld, long vbluf) {
    publid DbtfTimfFormbttfrBuildfr pbrsfDffbulting(TfmporblFifld fifld, long vbluf) {
    publid DbtfTimfFormbttfrBuildfr pbrsfDffbulting(TfmporblFifld fifld, long vbluf) {
    publid DbtfTimfFormbttfrBuildfr pbrsfDffbulting(TfmporblFifld fifld, long vbluf) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        bppfndIntfrnbl(nfw DffbultVblufPbrsfr(fifld, vbluf));
        bppfndIntfrnbl(nfw DffbultVblufPbrsfr(fifld, vbluf));
        bppfndIntfrnbl(nfw DffbultVblufPbrsfr(fifld, vbluf));
        bppfndIntfrnbl(nfw DffbultVblufPbrsfr(fifld, vbluf));
        bppfndIntfrnbl(nfw DffbultVblufPbrsfr(fifld, vbluf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b normbl
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b normbl
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b normbl
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b normbl
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b normbl
     * output stylf.
     * output stylf.
     * output stylf.
     * output stylf.
     * output stylf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * rfquiring onf digit, but bddfpting bs mbny digits bs possiblf.
     * rfquiring onf digit, but bddfpting bs mbny digits bs possiblf.
     * rfquiring onf digit, but bddfpting bs mbny digits bs possiblf.
     * rfquiring onf digit, but bddfpting bs mbny digits bs possiblf.
     * rfquiring onf digit, but bddfpting bs mbny digits bs possiblf.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        bppfndVbluf(nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL));
        bppfndVbluf(nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL));
        bppfndVbluf(nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL));
        bppfndVbluf(nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL));
        bppfndVbluf(nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b fixfd
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b fixfd
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b fixfd
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b fixfd
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr using b fixfd
     * widti, zfro-pbddfd bpprobdi.
     * widti, zfro-pbddfd bpprobdi.
     * widti, zfro-pbddfd bpprobdi.
     * widti, zfro-pbddfd bpprobdi.
     * widti, zfro-pbddfd bpprobdi.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf will bf zfro-pbddfd on tif lfft. If tif sizf of tif vbluf
     * Tif vbluf will bf zfro-pbddfd on tif lfft. If tif sizf of tif vbluf
     * Tif vbluf will bf zfro-pbddfd on tif lfft. If tif sizf of tif vbluf
     * Tif vbluf will bf zfro-pbddfd on tif lfft. If tif sizf of tif vbluf
     * Tif vbluf will bf zfro-pbddfd on tif lfft. If tif sizf of tif vbluf
     * mfbns tibt it dbnnot bf printfd witiin tif widti tifn bn fxdfption is tirown.
     * mfbns tibt it dbnnot bf printfd witiin tif widti tifn bn fxdfption is tirown.
     * mfbns tibt it dbnnot bf printfd witiin tif widti tifn bn fxdfption is tirown.
     * mfbns tibt it dbnnot bf printfd witiin tif widti tifn bn fxdfption is tirown.
     * mfbns tibt it dbnnot bf printfd witiin tif widti tifn bn fxdfption is tirown.
     * If tif vbluf of tif fifld is nfgbtivf tifn bn fxdfption is tirown during formbtting.
     * If tif vbluf of tif fifld is nfgbtivf tifn bn fxdfption is tirown during formbtting.
     * If tif vbluf of tif fifld is nfgbtivf tifn bn fxdfption is tirown during formbtting.
     * If tif vbluf of tif fifld is nfgbtivf tifn bn fxdfption is tirown during formbtting.
     * If tif vbluf of tif fifld is nfgbtivf tifn bn fxdfption is tirown during formbtting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod supports b spfdibl tfdiniquf of pbrsing known bs 'bdjbdfnt vbluf pbrsing'.
     * Tiis mftiod supports b spfdibl tfdiniquf of pbrsing known bs 'bdjbdfnt vbluf pbrsing'.
     * Tiis mftiod supports b spfdibl tfdiniquf of pbrsing known bs 'bdjbdfnt vbluf pbrsing'.
     * Tiis mftiod supports b spfdibl tfdiniquf of pbrsing known bs 'bdjbdfnt vbluf pbrsing'.
     * Tiis mftiod supports b spfdibl tfdiniquf of pbrsing known bs 'bdjbdfnt vbluf pbrsing'.
     * Tiis tfdiniquf solvfs tif problfm wifrf b vbluf, vbribblf or fixfd widti, is followfd by onf or morf
     * Tiis tfdiniquf solvfs tif problfm wifrf b vbluf, vbribblf or fixfd widti, is followfd by onf or morf
     * Tiis tfdiniquf solvfs tif problfm wifrf b vbluf, vbribblf or fixfd widti, is followfd by onf or morf
     * Tiis tfdiniquf solvfs tif problfm wifrf b vbluf, vbribblf or fixfd widti, is followfd by onf or morf
     * Tiis tfdiniquf solvfs tif problfm wifrf b vbluf, vbribblf or fixfd widti, is followfd by onf or morf
     * fixfd lfngti vblufs. Tif stbndbrd pbrsfr is grffdy, bnd tius it would normblly
     * fixfd lfngti vblufs. Tif stbndbrd pbrsfr is grffdy, bnd tius it would normblly
     * fixfd lfngti vblufs. Tif stbndbrd pbrsfr is grffdy, bnd tius it would normblly
     * fixfd lfngti vblufs. Tif stbndbrd pbrsfr is grffdy, bnd tius it would normblly
     * fixfd lfngti vblufs. Tif stbndbrd pbrsfr is grffdy, bnd tius it would normblly
     * stfbl tif digits tibt brf nffdfd by tif fixfd widti vbluf pbrsfrs tibt follow tif
     * stfbl tif digits tibt brf nffdfd by tif fixfd widti vbluf pbrsfrs tibt follow tif
     * stfbl tif digits tibt brf nffdfd by tif fixfd widti vbluf pbrsfrs tibt follow tif
     * stfbl tif digits tibt brf nffdfd by tif fixfd widti vbluf pbrsfrs tibt follow tif
     * stfbl tif digits tibt brf nffdfd by tif fixfd widti vbluf pbrsfrs tibt follow tif
     * vbribblf widti onf.
     * vbribblf widti onf.
     * vbribblf widti onf.
     * vbribblf widti onf.
     * vbribblf widti onf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * No bdtion is rfquirfd to initibtf 'bdjbdfnt vbluf pbrsing'.
     * No bdtion is rfquirfd to initibtf 'bdjbdfnt vbluf pbrsing'.
     * No bdtion is rfquirfd to initibtf 'bdjbdfnt vbluf pbrsing'.
     * No bdtion is rfquirfd to initibtf 'bdjbdfnt vbluf pbrsing'.
     * No bdtion is rfquirfd to initibtf 'bdjbdfnt vbluf pbrsing'.
     * Wifn b dbll to {@dodf bppfndVbluf} is mbdf, tif buildfr
     * Wifn b dbll to {@dodf bppfndVbluf} is mbdf, tif buildfr
     * Wifn b dbll to {@dodf bppfndVbluf} is mbdf, tif buildfr
     * Wifn b dbll to {@dodf bppfndVbluf} is mbdf, tif buildfr
     * Wifn b dbll to {@dodf bppfndVbluf} is mbdf, tif buildfr
     * fntfrs bdjbdfnt vbluf pbrsing sftup modf. If tif immfdibtfly subsfqufnt mftiod
     * fntfrs bdjbdfnt vbluf pbrsing sftup modf. If tif immfdibtfly subsfqufnt mftiod
     * fntfrs bdjbdfnt vbluf pbrsing sftup modf. If tif immfdibtfly subsfqufnt mftiod
     * fntfrs bdjbdfnt vbluf pbrsing sftup modf. If tif immfdibtfly subsfqufnt mftiod
     * fntfrs bdjbdfnt vbluf pbrsing sftup modf. If tif immfdibtfly subsfqufnt mftiod
     * dbll or dblls on tif sbmf buildfr brf for b fixfd widti vbluf, tifn tif pbrsfr will rfsfrvf
     * dbll or dblls on tif sbmf buildfr brf for b fixfd widti vbluf, tifn tif pbrsfr will rfsfrvf
     * dbll or dblls on tif sbmf buildfr brf for b fixfd widti vbluf, tifn tif pbrsfr will rfsfrvf
     * dbll or dblls on tif sbmf buildfr brf for b fixfd widti vbluf, tifn tif pbrsfr will rfsfrvf
     * dbll or dblls on tif sbmf buildfr brf for b fixfd widti vbluf, tifn tif pbrsfr will rfsfrvf
     * spbdf so tibt tif fixfd widti vblufs dbn bf pbrsfd.
     * spbdf so tibt tif fixfd widti vblufs dbn bf pbrsfd.
     * spbdf so tibt tif fixfd widti vblufs dbn bf pbrsfd.
     * spbdf so tibt tif fixfd widti vblufs dbn bf pbrsfd.
     * spbdf so tibt tif fixfd widti vblufs dbn bf pbrsfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, donsidfr {@dodf buildfr.bppfndVbluf(YEAR).bppfndVbluf(MONTH_OF_YEAR, 2);}
     * For fxbmplf, donsidfr {@dodf buildfr.bppfndVbluf(YEAR).bppfndVbluf(MONTH_OF_YEAR, 2);}
     * For fxbmplf, donsidfr {@dodf buildfr.bppfndVbluf(YEAR).bppfndVbluf(MONTH_OF_YEAR, 2);}
     * For fxbmplf, donsidfr {@dodf buildfr.bppfndVbluf(YEAR).bppfndVbluf(MONTH_OF_YEAR, 2);}
     * For fxbmplf, donsidfr {@dodf buildfr.bppfndVbluf(YEAR).bppfndVbluf(MONTH_OF_YEAR, 2);}
     * Tif yfbr is b vbribblf widti pbrsf of bftwffn 1 bnd 19 digits.
     * Tif yfbr is b vbribblf widti pbrsf of bftwffn 1 bnd 19 digits.
     * Tif yfbr is b vbribblf widti pbrsf of bftwffn 1 bnd 19 digits.
     * Tif yfbr is b vbribblf widti pbrsf of bftwffn 1 bnd 19 digits.
     * Tif yfbr is b vbribblf widti pbrsf of bftwffn 1 bnd 19 digits.
     * Tif monti is b fixfd widti pbrsf of 2 digits.
     * Tif monti is b fixfd widti pbrsf of 2 digits.
     * Tif monti is b fixfd widti pbrsf of 2 digits.
     * Tif monti is b fixfd widti pbrsf of 2 digits.
     * Tif monti is b fixfd widti pbrsf of 2 digits.
     * Bfdbusf tifsf wfrf bppfndfd to tif sbmf buildfr immfdibtfly bftfr onf bnotifr,
     * Bfdbusf tifsf wfrf bppfndfd to tif sbmf buildfr immfdibtfly bftfr onf bnotifr,
     * Bfdbusf tifsf wfrf bppfndfd to tif sbmf buildfr immfdibtfly bftfr onf bnotifr,
     * Bfdbusf tifsf wfrf bppfndfd to tif sbmf buildfr immfdibtfly bftfr onf bnotifr,
     * Bfdbusf tifsf wfrf bppfndfd to tif sbmf buildfr immfdibtfly bftfr onf bnotifr,
     * tif yfbr pbrsfr will rfsfrvf two digits for tif monti to pbrsf.
     * tif yfbr pbrsfr will rfsfrvf two digits for tif monti to pbrsf.
     * tif yfbr pbrsfr will rfsfrvf two digits for tif monti to pbrsf.
     * tif yfbr pbrsfr will rfsfrvf two digits for tif monti to pbrsf.
     * tif yfbr pbrsfr will rfsfrvf two digits for tif monti to pbrsf.
     * Tius, tif tfxt '201106' will dorrfdtly pbrsf to b yfbr of 2011 bnd b monti of 6.
     * Tius, tif tfxt '201106' will dorrfdtly pbrsf to b yfbr of 2011 bnd b monti of 6.
     * Tius, tif tfxt '201106' will dorrfdtly pbrsf to b yfbr of 2011 bnd b monti of 6.
     * Tius, tif tfxt '201106' will dorrfdtly pbrsf to b yfbr of 2011 bnd b monti of 6.
     * Tius, tif tfxt '201106' will dorrfdtly pbrsf to b yfbr of 2011 bnd b monti of 6.
     * Witiout bdjbdfnt vbluf pbrsing, tif yfbr would grffdily pbrsf bll six digits bnd lfbvf
     * Witiout bdjbdfnt vbluf pbrsing, tif yfbr would grffdily pbrsf bll six digits bnd lfbvf
     * Witiout bdjbdfnt vbluf pbrsing, tif yfbr would grffdily pbrsf bll six digits bnd lfbvf
     * Witiout bdjbdfnt vbluf pbrsing, tif yfbr would grffdily pbrsf bll six digits bnd lfbvf
     * Witiout bdjbdfnt vbluf pbrsing, tif yfbr would grffdily pbrsf bll six digits bnd lfbvf
     * notiing for tif monti.
     * notiing for tif monti.
     * notiing for tif monti.
     * notiing for tif monti.
     * notiing for tif monti.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Adjbdfnt vbluf pbrsing bpplifs to fbdi sft of fixfd widti not-nfgbtivf vblufs in tif pbrsfr
     * Adjbdfnt vbluf pbrsing bpplifs to fbdi sft of fixfd widti not-nfgbtivf vblufs in tif pbrsfr
     * Adjbdfnt vbluf pbrsing bpplifs to fbdi sft of fixfd widti not-nfgbtivf vblufs in tif pbrsfr
     * Adjbdfnt vbluf pbrsing bpplifs to fbdi sft of fixfd widti not-nfgbtivf vblufs in tif pbrsfr
     * Adjbdfnt vbluf pbrsing bpplifs to fbdi sft of fixfd widti not-nfgbtivf vblufs in tif pbrsfr
     * tibt immfdibtfly follow bny kind of vbluf, vbribblf or fixfd widti.
     * tibt immfdibtfly follow bny kind of vbluf, vbribblf or fixfd widti.
     * tibt immfdibtfly follow bny kind of vbluf, vbribblf or fixfd widti.
     * tibt immfdibtfly follow bny kind of vbluf, vbribblf or fixfd widti.
     * tibt immfdibtfly follow bny kind of vbluf, vbribblf or fixfd widti.
     * Cblling bny otifr bppfnd mftiod will fnd tif sftup of bdjbdfnt vbluf pbrsing.
     * Cblling bny otifr bppfnd mftiod will fnd tif sftup of bdjbdfnt vbluf pbrsing.
     * Cblling bny otifr bppfnd mftiod will fnd tif sftup of bdjbdfnt vbluf pbrsing.
     * Cblling bny otifr bppfnd mftiod will fnd tif sftup of bdjbdfnt vbluf pbrsing.
     * Cblling bny otifr bppfnd mftiod will fnd tif sftup of bdjbdfnt vbluf pbrsing.
     * Tius, in tif unlikfly fvfnt tibt you nffd to bvoid bdjbdfnt vbluf pbrsing bfibvior,
     * Tius, in tif unlikfly fvfnt tibt you nffd to bvoid bdjbdfnt vbluf pbrsing bfibvior,
     * Tius, in tif unlikfly fvfnt tibt you nffd to bvoid bdjbdfnt vbluf pbrsing bfibvior,
     * Tius, in tif unlikfly fvfnt tibt you nffd to bvoid bdjbdfnt vbluf pbrsing bfibvior,
     * Tius, in tif unlikfly fvfnt tibt you nffd to bvoid bdjbdfnt vbluf pbrsing bfibvior,
     * simply bdd tif {@dodf bppfndVbluf} to bnotifr {@dodf DbtfTimfFormbttfrBuildfr}
     * simply bdd tif {@dodf bppfndVbluf} to bnotifr {@dodf DbtfTimfFormbttfrBuildfr}
     * simply bdd tif {@dodf bppfndVbluf} to bnotifr {@dodf DbtfTimfFormbttfrBuildfr}
     * simply bdd tif {@dodf bppfndVbluf} to bnotifr {@dodf DbtfTimfFormbttfrBuildfr}
     * simply bdd tif {@dodf bppfndVbluf} to bnotifr {@dodf DbtfTimfFormbttfrBuildfr}
     * bnd bdd tibt to tiis buildfr.
     * bnd bdd tibt to tiis buildfr.
     * bnd bdd tibt to tiis buildfr.
     * bnd bdd tibt to tiis buildfr.
     * bnd bdd tibt to tiis buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If bdjbdfnt pbrsing is bdtivf, tifn pbrsing must mbtdi fxbdtly tif spfdififd
     * If bdjbdfnt pbrsing is bdtivf, tifn pbrsing must mbtdi fxbdtly tif spfdififd
     * If bdjbdfnt pbrsing is bdtivf, tifn pbrsing must mbtdi fxbdtly tif spfdififd
     * If bdjbdfnt pbrsing is bdtivf, tifn pbrsing must mbtdi fxbdtly tif spfdififd
     * If bdjbdfnt pbrsing is bdtivf, tifn pbrsing must mbtdi fxbdtly tif spfdififd
     * numbfr of digits in boti stridt bnd lfnifnt modfs.
     * numbfr of digits in boti stridt bnd lfnifnt modfs.
     * numbfr of digits in boti stridt bnd lfnifnt modfs.
     * numbfr of digits in boti stridt bnd lfnifnt modfs.
     * numbfr of digits in boti stridt bnd lfnifnt modfs.
     * In bddition, no positivf or nfgbtivf sign is pfrmittfd.
     * In bddition, no positivf or nfgbtivf sign is pfrmittfd.
     * In bddition, no positivf or nfgbtivf sign is pfrmittfd.
     * In bddition, no positivf or nfgbtivf sign is pfrmittfd.
     * In bddition, no positivf or nfgbtivf sign is pfrmittfd.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm widti  tif widti of tif printfd fifld, from 1 to 19
     * @pbrbm widti  tif widti of tif printfd fifld, from 1 to 19
     * @pbrbm widti  tif widti of tif printfd fifld, from 1 to 19
     * @pbrbm widti  tif widti of tif printfd fifld, from 1 to 19
     * @pbrbm widti  tif widti of tif printfd fifld, from 1 to 19
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif widti is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti is invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld, int widti) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld, int widti) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld, int widti) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld, int widti) {
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(TfmporblFifld fifld, int widti) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        if (widti < 1 || widti > 19) {
        if (widti < 1 || widti > 19) {
        if (widti < 1 || widti > 19) {
        if (widti < 1 || widti > 19) {
        if (widti < 1 || widti > 19) {
            tirow nfw IllfgblArgumfntExdfption("Tif widti must bf from 1 to 19 indlusivf but wbs " + widti);
            tirow nfw IllfgblArgumfntExdfption("Tif widti must bf from 1 to 19 indlusivf but wbs " + widti);
            tirow nfw IllfgblArgumfntExdfption("Tif widti must bf from 1 to 19 indlusivf but wbs " + widti);
            tirow nfw IllfgblArgumfntExdfption("Tif widti must bf from 1 to 19 indlusivf but wbs " + widti);
            tirow nfw IllfgblArgumfntExdfption("Tif widti must bf from 1 to 19 indlusivf but wbs " + widti);
        }
        }
        }
        }
        }
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, widti, widti, SignStylf.NOT_NEGATIVE);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, widti, widti, SignStylf.NOT_NEGATIVE);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, widti, widti, SignStylf.NOT_NEGATIVE);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, widti, widti, SignStylf.NOT_NEGATIVE);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, widti, widti, SignStylf.NOT_NEGATIVE);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr providing full
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr providing full
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr providing full
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr providing full
     * Appfnds tif vbluf of b dbtf-timf fifld to tif formbttfr providing full
     * dontrol ovfr formbtting.
     * dontrol ovfr formbtting.
     * dontrol ovfr formbtting.
     * dontrol ovfr formbtting.
     * dontrol ovfr formbtting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * Tif vbluf of tif fifld will bf output during b formbt.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod providfs full dontrol of tif numfrid formbtting, indluding
     * Tiis mftiod providfs full dontrol of tif numfrid formbtting, indluding
     * Tiis mftiod providfs full dontrol of tif numfrid formbtting, indluding
     * Tiis mftiod providfs full dontrol of tif numfrid formbtting, indluding
     * Tiis mftiod providfs full dontrol of tif numfrid formbtting, indluding
     * zfro-pbdding bnd tif positivf/nfgbtivf sign.
     * zfro-pbdding bnd tif positivf/nfgbtivf sign.
     * zfro-pbdding bnd tif positivf/nfgbtivf sign.
     * zfro-pbdding bnd tif positivf/nfgbtivf sign.
     * zfro-pbdding bnd tif positivf/nfgbtivf sign.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * Tif pbrsfr for b vbribblf widti vbluf sudi bs tiis normblly bfibvfs grffdily,
     * bddfpting bs mbny digits bs possiblf.
     * bddfpting bs mbny digits bs possiblf.
     * bddfpting bs mbny digits bs possiblf.
     * bddfpting bs mbny digits bs possiblf.
     * bddfpting bs mbny digits bs possiblf.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Tiis bfibvior dbn bf bfffdtfd by 'bdjbdfnt vbluf pbrsing'.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * Sff {@link #bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)} for full dftbils.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * In stridt pbrsing modf, tif minimum numbfr of pbrsfd digits is {@dodf minWidti}
     * In stridt pbrsing modf, tif minimum numbfr of pbrsfd digits is {@dodf minWidti}
     * In stridt pbrsing modf, tif minimum numbfr of pbrsfd digits is {@dodf minWidti}
     * In stridt pbrsing modf, tif minimum numbfr of pbrsfd digits is {@dodf minWidti}
     * In stridt pbrsing modf, tif minimum numbfr of pbrsfd digits is {@dodf minWidti}
     * bnd tif mbximum is {@dodf mbxWidti}.
     * bnd tif mbximum is {@dodf mbxWidti}.
     * bnd tif mbximum is {@dodf mbxWidti}.
     * bnd tif mbximum is {@dodf mbxWidti}.
     * bnd tif mbximum is {@dodf mbxWidti}.
     * In lfnifnt pbrsing modf, tif minimum numbfr of pbrsfd digits is onf
     * In lfnifnt pbrsing modf, tif minimum numbfr of pbrsfd digits is onf
     * In lfnifnt pbrsing modf, tif minimum numbfr of pbrsfd digits is onf
     * In lfnifnt pbrsing modf, tif minimum numbfr of pbrsfd digits is onf
     * In lfnifnt pbrsing modf, tif minimum numbfr of pbrsfd digits is onf
     * bnd tif mbximum is 19 (fxdfpt bs limitfd by bdjbdfnt vbluf pbrsing).
     * bnd tif mbximum is 19 (fxdfpt bs limitfd by bdjbdfnt vbluf pbrsing).
     * bnd tif mbximum is 19 (fxdfpt bs limitfd by bdjbdfnt vbluf pbrsing).
     * bnd tif mbximum is 19 (fxdfpt bs limitfd by bdjbdfnt vbluf pbrsing).
     * bnd tif mbximum is 19 (fxdfpt bs limitfd by bdjbdfnt vbluf pbrsing).
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tiis mftiod is invokfd witi fqubl minimum bnd mbximum widtis bnd b sign stylf of
     * If tiis mftiod is invokfd witi fqubl minimum bnd mbximum widtis bnd b sign stylf of
     * If tiis mftiod is invokfd witi fqubl minimum bnd mbximum widtis bnd b sign stylf of
     * If tiis mftiod is invokfd witi fqubl minimum bnd mbximum widtis bnd b sign stylf of
     * If tiis mftiod is invokfd witi fqubl minimum bnd mbximum widtis bnd b sign stylf of
     * {@dodf NOT_NEGATIVE} tifn it dflfgbtfs to {@dodf bppfndVbluf(TfmporblFifld,int)}.
     * {@dodf NOT_NEGATIVE} tifn it dflfgbtfs to {@dodf bppfndVbluf(TfmporblFifld,int)}.
     * {@dodf NOT_NEGATIVE} tifn it dflfgbtfs to {@dodf bppfndVbluf(TfmporblFifld,int)}.
     * {@dodf NOT_NEGATIVE} tifn it dflfgbtfs to {@dodf bppfndVbluf(TfmporblFifld,int)}.
     * {@dodf NOT_NEGATIVE} tifn it dflfgbtfs to {@dodf bppfndVbluf(TfmporblFifld,int)}.
     * In tiis sdfnbrio, tif formbtting bnd pbrsing bfibvior dfsdribfd tifrf oddur.
     * In tiis sdfnbrio, tif formbtting bnd pbrsing bfibvior dfsdribfd tifrf oddur.
     * In tiis sdfnbrio, tif formbtting bnd pbrsing bfibvior dfsdribfd tifrf oddur.
     * In tiis sdfnbrio, tif formbtting bnd pbrsing bfibvior dfsdribfd tifrf oddur.
     * In tiis sdfnbrio, tif formbtting bnd pbrsing bfibvior dfsdribfd tifrf oddur.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm minWidti  tif minimum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm minWidti  tif minimum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm minWidti  tif minimum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm minWidti  tif minimum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm minWidti  tif minimum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 19
     * @pbrbm signStylf  tif positivf/nfgbtivf output stylf, not null
     * @pbrbm signStylf  tif positivf/nfgbtivf output stylf, not null
     * @pbrbm signStylf  tif positivf/nfgbtivf output stylf, not null
     * @pbrbm signStylf  tif positivf/nfgbtivf output stylf, not null
     * @pbrbm signStylf  tif positivf/nfgbtivf output stylf, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif widtis brf invblid
     * @tirows IllfgblArgumfntExdfption if tif widtis brf invblid
     * @tirows IllfgblArgumfntExdfption if tif widtis brf invblid
     * @tirows IllfgblArgumfntExdfption if tif widtis brf invblid
     * @tirows IllfgblArgumfntExdfption if tif widtis brf invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(
    publid DbtfTimfFormbttfrBuildfr bppfndVbluf(
            TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
        if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
        if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
        if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
        if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
        if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
            rfturn bppfndVbluf(fifld, mbxWidti);
            rfturn bppfndVbluf(fifld, mbxWidti);
            rfturn bppfndVbluf(fifld, mbxWidti);
            rfturn bppfndVbluf(fifld, mbxWidti);
            rfturn bppfndVbluf(fifld, mbxWidti);
        }
        }
        }
        }
        }
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(signStylf, "signStylf");
        Objfdts.rfquirfNonNull(signStylf, "signStylf");
        Objfdts.rfquirfNonNull(signStylf, "signStylf");
        Objfdts.rfquirfNonNull(signStylf, "signStylf");
        Objfdts.rfquirfNonNull(signStylf, "signStylf");
        if (minWidti < 1 || minWidti > 19) {
        if (minWidti < 1 || minWidti > 19) {
        if (minWidti < 1 || minWidti > 19) {
        if (minWidti < 1 || minWidti > 19) {
        if (minWidti < 1 || minWidti > 19) {
            tirow nfw IllfgblArgumfntExdfption("Tif minimum widti must bf from 1 to 19 indlusivf but wbs " + minWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif minimum widti must bf from 1 to 19 indlusivf but wbs " + minWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif minimum widti must bf from 1 to 19 indlusivf but wbs " + minWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif minimum widti must bf from 1 to 19 indlusivf but wbs " + minWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif minimum widti must bf from 1 to 19 indlusivf but wbs " + minWidti);
        }
        }
        }
        }
        }
        if (mbxWidti < 1 || mbxWidti > 19) {
        if (mbxWidti < 1 || mbxWidti > 19) {
        if (mbxWidti < 1 || mbxWidti > 19) {
        if (mbxWidti < 1 || mbxWidti > 19) {
        if (mbxWidti < 1 || mbxWidti > 19) {
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must bf from 1 to 19 indlusivf but wbs " + mbxWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must bf from 1 to 19 indlusivf but wbs " + mbxWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must bf from 1 to 19 indlusivf but wbs " + mbxWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must bf from 1 to 19 indlusivf but wbs " + mbxWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must bf from 1 to 19 indlusivf but wbs " + mbxWidti);
        }
        }
        }
        }
        }
        if (mbxWidti < minWidti) {
        if (mbxWidti < minWidti) {
        if (mbxWidti < minWidti) {
        if (mbxWidti < minWidti) {
        if (mbxWidti < minWidti) {
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must fxdffd or fqubl tif minimum widti but " +
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must fxdffd or fqubl tif minimum widti but " +
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must fxdffd or fqubl tif minimum widti but " +
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must fxdffd or fqubl tif minimum widti but " +
            tirow nfw IllfgblArgumfntExdfption("Tif mbximum widti must fxdffd or fqubl tif minimum widti but " +
                    mbxWidti + " < " + minWidti);
                    mbxWidti + " < " + minWidti);
                    mbxWidti + " < " + minWidti);
                    mbxWidti + " < " + minWidti);
                    mbxWidti + " < " + minWidti);
        }
        }
        }
        }
        }
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf);
        NumbfrPrintfrPbrsfr pp = nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Sindf fiflds sudi bs yfbr vbry by dironology, it is rfdommfndfd to usf tif
     * Sindf fiflds sudi bs yfbr vbry by dironology, it is rfdommfndfd to usf tif
     * Sindf fiflds sudi bs yfbr vbry by dironology, it is rfdommfndfd to usf tif
     * Sindf fiflds sudi bs yfbr vbry by dironology, it is rfdommfndfd to usf tif
     * Sindf fiflds sudi bs yfbr vbry by dironology, it is rfdommfndfd to usf tif
     * {@link #bppfndVblufRfdudfd(TfmporblFifld, int, int, CironoLodblDbtf)} dbtf}
     * {@link #bppfndVblufRfdudfd(TfmporblFifld, int, int, CironoLodblDbtf)} dbtf}
     * {@link #bppfndVblufRfdudfd(TfmporblFifld, int, int, CironoLodblDbtf)} dbtf}
     * {@link #bppfndVblufRfdudfd(TfmporblFifld, int, int, CironoLodblDbtf)} dbtf}
     * {@link #bppfndVblufRfdudfd(TfmporblFifld, int, int, CironoLodblDbtf)} dbtf}
     * vbribnt of tiis mftiod in most dbsfs. Tiis vbribnt is suitbblf for
     * vbribnt of tiis mftiod in most dbsfs. Tiis vbribnt is suitbblf for
     * vbribnt of tiis mftiod in most dbsfs. Tiis vbribnt is suitbblf for
     * vbribnt of tiis mftiod in most dbsfs. Tiis vbribnt is suitbblf for
     * vbribnt of tiis mftiod in most dbsfs. Tiis vbribnt is suitbblf for
     * simplf fiflds or working witi only tif ISO dironology.
     * simplf fiflds or working witi only tif ISO dironology.
     * simplf fiflds or working witi only tif ISO dironology.
     * simplf fiflds or working witi only tif ISO dironology.
     * simplf fiflds or working witi only tif ISO dironology.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm bbsfVbluf  tif bbsf vbluf of tif rbngf of vblid vblufs
     * @pbrbm bbsfVbluf  tif bbsf vbluf of tif rbngf of vblid vblufs
     * @pbrbm bbsfVbluf  tif bbsf vbluf of tif rbngf of vblid vblufs
     * @pbrbm bbsfVbluf  tif bbsf vbluf of tif rbngf of vblid vblufs
     * @pbrbm bbsfVbluf  tif bbsf vbluf of tif rbngf of vblid vblufs
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(TfmporblFifld fifld,
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(TfmporblFifld fifld,
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(TfmporblFifld fifld,
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(TfmporblFifld fifld,
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(TfmporblFifld fifld,
            int widti, int mbxWidti, int bbsfVbluf) {
            int widti, int mbxWidti, int bbsfVbluf) {
            int widti, int mbxWidti, int bbsfVbluf) {
            int widti, int mbxWidti, int bbsfVbluf) {
            int widti, int mbxWidti, int bbsfVbluf) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, bbsfVbluf, null);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, bbsfVbluf, null);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, bbsfVbluf, null);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, bbsfVbluf, null);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, bbsfVbluf, null);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif rfdudfd vbluf of b dbtf-timf fifld to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis is typidblly usfd for formbtting bnd pbrsing b two digit yfbr.
     * Tiis is typidblly usfd for formbtting bnd pbrsing b two digit yfbr.
     * Tiis is typidblly usfd for formbtting bnd pbrsing b two digit yfbr.
     * Tiis is typidblly usfd for formbtting bnd pbrsing b two digit yfbr.
     * Tiis is typidblly usfd for formbtting bnd pbrsing b two digit yfbr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif bbsf dbtf is usfd to dbldulbtf tif full vbluf during pbrsing.
     * Tif bbsf dbtf is usfd to dbldulbtf tif full vbluf during pbrsing.
     * Tif bbsf dbtf is usfd to dbldulbtf tif full vbluf during pbrsing.
     * Tif bbsf dbtf is usfd to dbldulbtf tif full vbluf during pbrsing.
     * Tif bbsf dbtf is usfd to dbldulbtf tif full vbluf during pbrsing.
     * For fxbmplf, if tif bbsf dbtf is 1950-01-01 tifn pbrsfd vblufs for
     * For fxbmplf, if tif bbsf dbtf is 1950-01-01 tifn pbrsfd vblufs for
     * For fxbmplf, if tif bbsf dbtf is 1950-01-01 tifn pbrsfd vblufs for
     * For fxbmplf, if tif bbsf dbtf is 1950-01-01 tifn pbrsfd vblufs for
     * For fxbmplf, if tif bbsf dbtf is 1950-01-01 tifn pbrsfd vblufs for
     * b two digit yfbr pbrsf will bf in tif rbngf 1950-01-01 to 2049-12-31.
     * b two digit yfbr pbrsf will bf in tif rbngf 1950-01-01 to 2049-12-31.
     * b two digit yfbr pbrsf will bf in tif rbngf 1950-01-01 to 2049-12-31.
     * b two digit yfbr pbrsf will bf in tif rbngf 1950-01-01 to 2049-12-31.
     * b two digit yfbr pbrsf will bf in tif rbngf 1950-01-01 to 2049-12-31.
     * Only tif yfbr would bf fxtrbdtfd from tif dbtf, tius b bbsf dbtf of
     * Only tif yfbr would bf fxtrbdtfd from tif dbtf, tius b bbsf dbtf of
     * Only tif yfbr would bf fxtrbdtfd from tif dbtf, tius b bbsf dbtf of
     * Only tif yfbr would bf fxtrbdtfd from tif dbtf, tius b bbsf dbtf of
     * Only tif yfbr would bf fxtrbdtfd from tif dbtf, tius b bbsf dbtf of
     * 1950-08-25 would blso pbrsf to tif rbngf 1950-01-01 to 2049-12-31.
     * 1950-08-25 would blso pbrsf to tif rbngf 1950-01-01 to 2049-12-31.
     * 1950-08-25 would blso pbrsf to tif rbngf 1950-01-01 to 2049-12-31.
     * 1950-08-25 would blso pbrsf to tif rbngf 1950-01-01 to 2049-12-31.
     * 1950-08-25 would blso pbrsf to tif rbngf 1950-01-01 to 2049-12-31.
     * Tiis bfibvior is nfdfssbry to support fiflds sudi bs wffk-bbsfd-yfbr
     * Tiis bfibvior is nfdfssbry to support fiflds sudi bs wffk-bbsfd-yfbr
     * Tiis bfibvior is nfdfssbry to support fiflds sudi bs wffk-bbsfd-yfbr
     * Tiis bfibvior is nfdfssbry to support fiflds sudi bs wffk-bbsfd-yfbr
     * Tiis bfibvior is nfdfssbry to support fiflds sudi bs wffk-bbsfd-yfbr
     * or otifr dblfndbr systfms wifrf tif pbrsfd vbluf dofs not blign witi
     * or otifr dblfndbr systfms wifrf tif pbrsfd vbluf dofs not blign witi
     * or otifr dblfndbr systfms wifrf tif pbrsfd vbluf dofs not blign witi
     * or otifr dblfndbr systfms wifrf tif pbrsfd vbluf dofs not blign witi
     * or otifr dblfndbr systfms wifrf tif pbrsfd vbluf dofs not blign witi
     * stbndbrd ISO yfbrs.
     * stbndbrd ISO yfbrs.
     * stbndbrd ISO yfbrs.
     * stbndbrd ISO yfbrs.
     * stbndbrd ISO yfbrs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif fxbdt bfibvior is bs follows. Pbrsf tif full sft of fiflds bnd
     * Tif fxbdt bfibvior is bs follows. Pbrsf tif full sft of fiflds bnd
     * Tif fxbdt bfibvior is bs follows. Pbrsf tif full sft of fiflds bnd
     * Tif fxbdt bfibvior is bs follows. Pbrsf tif full sft of fiflds bnd
     * Tif fxbdt bfibvior is bs follows. Pbrsf tif full sft of fiflds bnd
     * dftfrminf tif ffffdtivf dironology using tif lbst dironology if
     * dftfrminf tif ffffdtivf dironology using tif lbst dironology if
     * dftfrminf tif ffffdtivf dironology using tif lbst dironology if
     * dftfrminf tif ffffdtivf dironology using tif lbst dironology if
     * dftfrminf tif ffffdtivf dironology using tif lbst dironology if
     * it bppfbrs morf tibn ondf. Tifn donvfrt tif bbsf dbtf to tif
     * it bppfbrs morf tibn ondf. Tifn donvfrt tif bbsf dbtf to tif
     * it bppfbrs morf tibn ondf. Tifn donvfrt tif bbsf dbtf to tif
     * it bppfbrs morf tibn ondf. Tifn donvfrt tif bbsf dbtf to tif
     * it bppfbrs morf tibn ondf. Tifn donvfrt tif bbsf dbtf to tif
     * ffffdtivf dironology. Tifn fxtrbdt tif spfdififd fifld from tif
     * ffffdtivf dironology. Tifn fxtrbdt tif spfdififd fifld from tif
     * ffffdtivf dironology. Tifn fxtrbdt tif spfdififd fifld from tif
     * ffffdtivf dironology. Tifn fxtrbdt tif spfdififd fifld from tif
     * ffffdtivf dironology. Tifn fxtrbdt tif spfdififd fifld from tif
     * dironology-spfdifid bbsf dbtf bnd usf it to dftfrminf tif
     * dironology-spfdifid bbsf dbtf bnd usf it to dftfrminf tif
     * dironology-spfdifid bbsf dbtf bnd usf it to dftfrminf tif
     * dironology-spfdifid bbsf dbtf bnd usf it to dftfrminf tif
     * dironology-spfdifid bbsf dbtf bnd usf it to dftfrminf tif
     * {@dodf bbsfVbluf} usfd bflow.
     * {@dodf bbsfVbluf} usfd bflow.
     * {@dodf bbsfVbluf} usfd bflow.
     * {@dodf bbsfVbluf} usfd bflow.
     * {@dodf bbsfVbluf} usfd bflow.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * For formbtting, tif {@dodf widti} bnd {@dodf mbxWidti} brf usfd to
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * dftfrminf tif numbfr of dibrbdtfrs to formbt.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tify brf fqubl tifn tif formbt is fixfd widti.
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * If tif vbluf of tif fifld is witiin tif rbngf of tif {@dodf bbsfVbluf} using
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * {@dodf widti} dibrbdtfrs tifn tif rfdudfd vbluf is formbttfd otifrwisf tif vbluf is
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * trundbtfd to fit {@dodf mbxWidti}.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * Tif rigitmost dibrbdtfrs brf output to mbtdi tif widti, lfft pbdding witi zfro.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For stridt pbrsing, tif numbfr of dibrbdtfrs bllowfd by {@dodf widti} to {@dodf mbxWidti} brf pbrsfd.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * For lfnifnt pbrsing, tif numbfr of dibrbdtfrs must bf bt lfbst 1 bnd lfss tibn 10.
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * If tif numbfr of digits pbrsfd is fqubl to {@dodf widti} bnd tif vbluf is positivf,
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * tif vbluf of tif fifld is domputfd to bf tif first numbfr grfbtfr tibn
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * or fqubl to tif {@dodf bbsfVbluf} witi tif sbmf lfbst signifidbnt dibrbdtfrs,
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * otifrwisf tif vbluf pbrsfd is tif fifld vbluf.
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * Tiis bllows b rfdudfd vbluf to bf fntfrfd for vblufs in rbngf of tif bbsfVbluf
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * bnd widti bnd bbsolutf vblufs dbn bf fntfrfd for vblufs outsidf tif rbngf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * For fxbmplf, b bbsf vbluf of {@dodf 1980} bnd b widti of {@dodf 2} will ibvf
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * vblid vblufs from {@dodf 1980} to {@dodf 2079}.
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * During pbrsing, tif tfxt {@dodf "12"} will rfsult in tif vbluf {@dodf 2012} bs tibt
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * is tif vbluf witiin tif rbngf wifrf tif lbst two dibrbdtfrs brf "12".
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     * By dontrbst, pbrsing tif tfxt {@dodf "1915"} will rfsult in tif vbluf {@dodf 1915}.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm widti  tif fifld widti of tif printfd bnd pbrsfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm mbxWidti  tif mbximum fifld widti of tif printfd fifld, from 1 to 10
     * @pbrbm bbsfDbtf  tif bbsf dbtf usfd to dbldulbtf tif bbsf vbluf for tif rbngf
     * @pbrbm bbsfDbtf  tif bbsf dbtf usfd to dbldulbtf tif bbsf vbluf for tif rbngf
     * @pbrbm bbsfDbtf  tif bbsf dbtf usfd to dbldulbtf tif bbsf vbluf for tif rbngf
     * @pbrbm bbsfDbtf  tif bbsf dbtf usfd to dbldulbtf tif bbsf vbluf for tif rbngf
     * @pbrbm bbsfDbtf  tif bbsf dbtf usfd to dbldulbtf tif bbsf vbluf for tif rbngf
     *  of vblid vblufs in tif pbrsfd dironology, not null
     *  of vblid vblufs in tif pbrsfd dironology, not null
     *  of vblid vblufs in tif pbrsfd dironology, not null
     *  of vblid vblufs in tif pbrsfd dironology, not null
     *  of vblid vblufs in tif pbrsfd dironology, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     * @tirows IllfgblArgumfntExdfption if tif widti or bbsf vbluf is invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(
    publid DbtfTimfFormbttfrBuildfr bppfndVblufRfdudfd(
            TfmporblFifld fifld, int widti, int mbxWidti, CironoLodblDbtf bbsfDbtf) {
            TfmporblFifld fifld, int widti, int mbxWidti, CironoLodblDbtf bbsfDbtf) {
            TfmporblFifld fifld, int widti, int mbxWidti, CironoLodblDbtf bbsfDbtf) {
            TfmporblFifld fifld, int widti, int mbxWidti, CironoLodblDbtf bbsfDbtf) {
            TfmporblFifld fifld, int widti, int mbxWidti, CironoLodblDbtf bbsfDbtf) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(bbsfDbtf, "bbsfDbtf");
        Objfdts.rfquirfNonNull(bbsfDbtf, "bbsfDbtf");
        Objfdts.rfquirfNonNull(bbsfDbtf, "bbsfDbtf");
        Objfdts.rfquirfNonNull(bbsfDbtf, "bbsfDbtf");
        Objfdts.rfquirfNonNull(bbsfDbtf, "bbsfDbtf");
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, 0, bbsfDbtf);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, 0, bbsfDbtf);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, 0, bbsfDbtf);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, 0, bbsfDbtf);
        RfdudfdPrintfrPbrsfr pp = nfw RfdudfdPrintfrPbrsfr(fifld, widti, mbxWidti, 0, bbsfDbtf);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        bppfndVbluf(pp);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds b fixfd or vbribblf widti printfr-pbrsfr ibndling bdjbdfnt vbluf modf.
     * Appfnds b fixfd or vbribblf widti printfr-pbrsfr ibndling bdjbdfnt vbluf modf.
     * Appfnds b fixfd or vbribblf widti printfr-pbrsfr ibndling bdjbdfnt vbluf modf.
     * Appfnds b fixfd or vbribblf widti printfr-pbrsfr ibndling bdjbdfnt vbluf modf.
     * Appfnds b fixfd or vbribblf widti printfr-pbrsfr ibndling bdjbdfnt vbluf modf.
     * If b PrintfrPbrsfr is not bdtivf tifn tif nfw PrintfrPbrsfr bfdomfs
     * If b PrintfrPbrsfr is not bdtivf tifn tif nfw PrintfrPbrsfr bfdomfs
     * If b PrintfrPbrsfr is not bdtivf tifn tif nfw PrintfrPbrsfr bfdomfs
     * If b PrintfrPbrsfr is not bdtivf tifn tif nfw PrintfrPbrsfr bfdomfs
     * If b PrintfrPbrsfr is not bdtivf tifn tif nfw PrintfrPbrsfr bfdomfs
     * tif bdtivf PrintfrPbrsfr.
     * tif bdtivf PrintfrPbrsfr.
     * tif bdtivf PrintfrPbrsfr.
     * tif bdtivf PrintfrPbrsfr.
     * tif bdtivf PrintfrPbrsfr.
     * Otifrwisf, tif bdtivf PrintfrPbrsfr is modififd dfpfnding on tif nfw PrintfrPbrsfr.
     * Otifrwisf, tif bdtivf PrintfrPbrsfr is modififd dfpfnding on tif nfw PrintfrPbrsfr.
     * Otifrwisf, tif bdtivf PrintfrPbrsfr is modififd dfpfnding on tif nfw PrintfrPbrsfr.
     * Otifrwisf, tif bdtivf PrintfrPbrsfr is modififd dfpfnding on tif nfw PrintfrPbrsfr.
     * Otifrwisf, tif bdtivf PrintfrPbrsfr is modififd dfpfnding on tif nfw PrintfrPbrsfr.
     * If tif nfw PrintfrPbrsfr is fixfd widti bnd ibs sign stylf {@dodf NOT_NEGATIVE}
     * If tif nfw PrintfrPbrsfr is fixfd widti bnd ibs sign stylf {@dodf NOT_NEGATIVE}
     * If tif nfw PrintfrPbrsfr is fixfd widti bnd ibs sign stylf {@dodf NOT_NEGATIVE}
     * If tif nfw PrintfrPbrsfr is fixfd widti bnd ibs sign stylf {@dodf NOT_NEGATIVE}
     * If tif nfw PrintfrPbrsfr is fixfd widti bnd ibs sign stylf {@dodf NOT_NEGATIVE}
     * tifn its widti is bddfd to tif bdtivf PP bnd
     * tifn its widti is bddfd to tif bdtivf PP bnd
     * tifn its widti is bddfd to tif bdtivf PP bnd
     * tifn its widti is bddfd to tif bdtivf PP bnd
     * tifn its widti is bddfd to tif bdtivf PP bnd
     * tif nfw PrintfrPbrsfr is fordfd to bf fixfd widti.
     * tif nfw PrintfrPbrsfr is fordfd to bf fixfd widti.
     * tif nfw PrintfrPbrsfr is fordfd to bf fixfd widti.
     * tif nfw PrintfrPbrsfr is fordfd to bf fixfd widti.
     * tif nfw PrintfrPbrsfr is fordfd to bf fixfd widti.
     * If tif nfw PrintfrPbrsfr is vbribblf widti, tif bdtivf PrintfrPbrsfr is dibngfd
     * If tif nfw PrintfrPbrsfr is vbribblf widti, tif bdtivf PrintfrPbrsfr is dibngfd
     * If tif nfw PrintfrPbrsfr is vbribblf widti, tif bdtivf PrintfrPbrsfr is dibngfd
     * If tif nfw PrintfrPbrsfr is vbribblf widti, tif bdtivf PrintfrPbrsfr is dibngfd
     * If tif nfw PrintfrPbrsfr is vbribblf widti, tif bdtivf PrintfrPbrsfr is dibngfd
     * to bf fixfd widti bnd tif nfw PrintfrPbrsfr bfdomfs tif bdtivf PP.
     * to bf fixfd widti bnd tif nfw PrintfrPbrsfr bfdomfs tif bdtivf PP.
     * to bf fixfd widti bnd tif nfw PrintfrPbrsfr bfdomfs tif bdtivf PP.
     * to bf fixfd widti bnd tif nfw PrintfrPbrsfr bfdomfs tif bdtivf PP.
     * to bf fixfd widti bnd tif nfw PrintfrPbrsfr bfdomfs tif bdtivf PP.
     *
     *
     *
     *
     *
     * @pbrbm pp  tif printfr-pbrsfr, not null
     * @pbrbm pp  tif printfr-pbrsfr, not null
     * @pbrbm pp  tif printfr-pbrsfr, not null
     * @pbrbm pp  tif printfr-pbrsfr, not null
     * @pbrbm pp  tif printfr-pbrsfr, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    privbtf DbtfTimfFormbttfrBuildfr bppfndVbluf(NumbfrPrintfrPbrsfr pp) {
    privbtf DbtfTimfFormbttfrBuildfr bppfndVbluf(NumbfrPrintfrPbrsfr pp) {
    privbtf DbtfTimfFormbttfrBuildfr bppfndVbluf(NumbfrPrintfrPbrsfr pp) {
    privbtf DbtfTimfFormbttfrBuildfr bppfndVbluf(NumbfrPrintfrPbrsfr pp) {
    privbtf DbtfTimfFormbttfrBuildfr bppfndVbluf(NumbfrPrintfrPbrsfr pp) {
        if (bdtivf.vblufPbrsfrIndfx >= 0) {
        if (bdtivf.vblufPbrsfrIndfx >= 0) {
        if (bdtivf.vblufPbrsfrIndfx >= 0) {
        if (bdtivf.vblufPbrsfrIndfx >= 0) {
        if (bdtivf.vblufPbrsfrIndfx >= 0) {
            finbl int bdtivfVblufPbrsfr = bdtivf.vblufPbrsfrIndfx;
            finbl int bdtivfVblufPbrsfr = bdtivf.vblufPbrsfrIndfx;
            finbl int bdtivfVblufPbrsfr = bdtivf.vblufPbrsfrIndfx;
            finbl int bdtivfVblufPbrsfr = bdtivf.vblufPbrsfrIndfx;
            finbl int bdtivfVblufPbrsfr = bdtivf.vblufPbrsfrIndfx;





            // bdjbdfnt pbrsing modf, updbtf sftting in prfvious pbrsfrs
            // bdjbdfnt pbrsing modf, updbtf sftting in prfvious pbrsfrs
            // bdjbdfnt pbrsing modf, updbtf sftting in prfvious pbrsfrs
            // bdjbdfnt pbrsing modf, updbtf sftting in prfvious pbrsfrs
            // bdjbdfnt pbrsing modf, updbtf sftting in prfvious pbrsfrs
            NumbfrPrintfrPbrsfr bbsfPP = (NumbfrPrintfrPbrsfr) bdtivf.printfrPbrsfrs.gft(bdtivfVblufPbrsfr);
            NumbfrPrintfrPbrsfr bbsfPP = (NumbfrPrintfrPbrsfr) bdtivf.printfrPbrsfrs.gft(bdtivfVblufPbrsfr);
            NumbfrPrintfrPbrsfr bbsfPP = (NumbfrPrintfrPbrsfr) bdtivf.printfrPbrsfrs.gft(bdtivfVblufPbrsfr);
            NumbfrPrintfrPbrsfr bbsfPP = (NumbfrPrintfrPbrsfr) bdtivf.printfrPbrsfrs.gft(bdtivfVblufPbrsfr);
            NumbfrPrintfrPbrsfr bbsfPP = (NumbfrPrintfrPbrsfr) bdtivf.printfrPbrsfrs.gft(bdtivfVblufPbrsfr);
            if (pp.minWidti == pp.mbxWidti && pp.signStylf == SignStylf.NOT_NEGATIVE) {
            if (pp.minWidti == pp.mbxWidti && pp.signStylf == SignStylf.NOT_NEGATIVE) {
            if (pp.minWidti == pp.mbxWidti && pp.signStylf == SignStylf.NOT_NEGATIVE) {
            if (pp.minWidti == pp.mbxWidti && pp.signStylf == SignStylf.NOT_NEGATIVE) {
            if (pp.minWidti == pp.mbxWidti && pp.signStylf == SignStylf.NOT_NEGATIVE) {
                // Appfnd tif widti to tif subsfqufntWidti of tif bdtivf pbrsfr
                // Appfnd tif widti to tif subsfqufntWidti of tif bdtivf pbrsfr
                // Appfnd tif widti to tif subsfqufntWidti of tif bdtivf pbrsfr
                // Appfnd tif widti to tif subsfqufntWidti of tif bdtivf pbrsfr
                // Appfnd tif widti to tif subsfqufntWidti of tif bdtivf pbrsfr
                bbsfPP = bbsfPP.witiSubsfqufntWidti(pp.mbxWidti);
                bbsfPP = bbsfPP.witiSubsfqufntWidti(pp.mbxWidti);
                bbsfPP = bbsfPP.witiSubsfqufntWidti(pp.mbxWidti);
                bbsfPP = bbsfPP.witiSubsfqufntWidti(pp.mbxWidti);
                bbsfPP = bbsfPP.witiSubsfqufntWidti(pp.mbxWidti);
                // Appfnd tif nfw pbrsfr bs b fixfd widti
                // Appfnd tif nfw pbrsfr bs b fixfd widti
                // Appfnd tif nfw pbrsfr bs b fixfd widti
                // Appfnd tif nfw pbrsfr bs b fixfd widti
                // Appfnd tif nfw pbrsfr bs b fixfd widti
                bppfndIntfrnbl(pp.witiFixfdWidti());
                bppfndIntfrnbl(pp.witiFixfdWidti());
                bppfndIntfrnbl(pp.witiFixfdWidti());
                bppfndIntfrnbl(pp.witiFixfdWidti());
                bppfndIntfrnbl(pp.witiFixfdWidti());
                // Rftbin tif prfvious bdtivf pbrsfr
                // Rftbin tif prfvious bdtivf pbrsfr
                // Rftbin tif prfvious bdtivf pbrsfr
                // Rftbin tif prfvious bdtivf pbrsfr
                // Rftbin tif prfvious bdtivf pbrsfr
                bdtivf.vblufPbrsfrIndfx = bdtivfVblufPbrsfr;
                bdtivf.vblufPbrsfrIndfx = bdtivfVblufPbrsfr;
                bdtivf.vblufPbrsfrIndfx = bdtivfVblufPbrsfr;
                bdtivf.vblufPbrsfrIndfx = bdtivfVblufPbrsfr;
                bdtivf.vblufPbrsfrIndfx = bdtivfVblufPbrsfr;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // Modify tif bdtivf pbrsfr to bf fixfd widti
                // Modify tif bdtivf pbrsfr to bf fixfd widti
                // Modify tif bdtivf pbrsfr to bf fixfd widti
                // Modify tif bdtivf pbrsfr to bf fixfd widti
                // Modify tif bdtivf pbrsfr to bf fixfd widti
                bbsfPP = bbsfPP.witiFixfdWidti();
                bbsfPP = bbsfPP.witiFixfdWidti();
                bbsfPP = bbsfPP.witiFixfdWidti();
                bbsfPP = bbsfPP.witiFixfdWidti();
                bbsfPP = bbsfPP.witiFixfdWidti();
                // Tif nfw pbrsfr bfdomfs tif mfw bdtivf pbrsfr
                // Tif nfw pbrsfr bfdomfs tif mfw bdtivf pbrsfr
                // Tif nfw pbrsfr bfdomfs tif mfw bdtivf pbrsfr
                // Tif nfw pbrsfr bfdomfs tif mfw bdtivf pbrsfr
                // Tif nfw pbrsfr bfdomfs tif mfw bdtivf pbrsfr
                bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
                bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
                bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
                bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
                bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
            }
            }
            }
            }
            }
            // Rfplbdf tif modififd pbrsfr witi tif updbtfd onf
            // Rfplbdf tif modififd pbrsfr witi tif updbtfd onf
            // Rfplbdf tif modififd pbrsfr witi tif updbtfd onf
            // Rfplbdf tif modififd pbrsfr witi tif updbtfd onf
            // Rfplbdf tif modififd pbrsfr witi tif updbtfd onf
            bdtivf.printfrPbrsfrs.sft(bdtivfVblufPbrsfr, bbsfPP);
            bdtivf.printfrPbrsfrs.sft(bdtivfVblufPbrsfr, bbsfPP);
            bdtivf.printfrPbrsfrs.sft(bdtivfVblufPbrsfr, bbsfPP);
            bdtivf.printfrPbrsfrs.sft(bdtivfVblufPbrsfr, bbsfPP);
            bdtivf.printfrPbrsfrs.sft(bdtivfVblufPbrsfr, bbsfPP);
        } flsf {
        } flsf {
        } flsf {
        } flsf {
        } flsf {
            // Tif nfw Pbrsfr bfdomfs tif bdtivf pbrsfr
            // Tif nfw Pbrsfr bfdomfs tif bdtivf pbrsfr
            // Tif nfw Pbrsfr bfdomfs tif bdtivf pbrsfr
            // Tif nfw Pbrsfr bfdomfs tif bdtivf pbrsfr
            // Tif nfw Pbrsfr bfdomfs tif bdtivf pbrsfr
            bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
            bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
            bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
            bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
            bdtivf.vblufPbrsfrIndfx = bppfndIntfrnbl(pp);
        }
        }
        }
        }
        }
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif frbdtionbl vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif frbdtionbl vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif frbdtionbl vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif frbdtionbl vbluf of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif frbdtionbl vbluf of b dbtf-timf fifld to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif frbdtionbl vbluf of tif fifld will bf output indluding tif
     * Tif frbdtionbl vbluf of tif fifld will bf output indluding tif
     * Tif frbdtionbl vbluf of tif fifld will bf output indluding tif
     * Tif frbdtionbl vbluf of tif fifld will bf output indluding tif
     * Tif frbdtionbl vbluf of tif fifld will bf output indluding tif
     * prfdfding dfdimbl point. Tif prfdfding vbluf is not output.
     * prfdfding dfdimbl point. Tif prfdfding vbluf is not output.
     * prfdfding dfdimbl point. Tif prfdfding vbluf is not output.
     * prfdfding dfdimbl point. Tif prfdfding vbluf is not output.
     * prfdfding dfdimbl point. Tif prfdfding vbluf is not output.
     * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf output bs {@dodf .25}.
     * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf output bs {@dodf .25}.
     * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf output bs {@dodf .25}.
     * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf output bs {@dodf .25}.
     * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf output bs {@dodf .25}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif widti of tif printfd frbdtion dbn bf dontrollfd. Sftting tif
     * Tif widti of tif printfd frbdtion dbn bf dontrollfd. Sftting tif
     * Tif widti of tif printfd frbdtion dbn bf dontrollfd. Sftting tif
     * Tif widti of tif printfd frbdtion dbn bf dontrollfd. Sftting tif
     * Tif widti of tif printfd frbdtion dbn bf dontrollfd. Sftting tif
     * minimum widti to zfro will dbusf no output to bf gfnfrbtfd.
     * minimum widti to zfro will dbusf no output to bf gfnfrbtfd.
     * minimum widti to zfro will dbusf no output to bf gfnfrbtfd.
     * minimum widti to zfro will dbusf no output to bf gfnfrbtfd.
     * minimum widti to zfro will dbusf no output to bf gfnfrbtfd.
     * Tif printfd frbdtion will ibvf tif minimum widti nfdfssbry bftwffn
     * Tif printfd frbdtion will ibvf tif minimum widti nfdfssbry bftwffn
     * Tif printfd frbdtion will ibvf tif minimum widti nfdfssbry bftwffn
     * Tif printfd frbdtion will ibvf tif minimum widti nfdfssbry bftwffn
     * Tif printfd frbdtion will ibvf tif minimum widti nfdfssbry bftwffn
     * tif minimum bnd mbximum widtis - trbiling zfrofs brf omittfd.
     * tif minimum bnd mbximum widtis - trbiling zfrofs brf omittfd.
     * tif minimum bnd mbximum widtis - trbiling zfrofs brf omittfd.
     * tif minimum bnd mbximum widtis - trbiling zfrofs brf omittfd.
     * tif minimum bnd mbximum widtis - trbiling zfrofs brf omittfd.
     * No rounding oddurs duf to tif mbximum widti - digits brf simply droppfd.
     * No rounding oddurs duf to tif mbximum widti - digits brf simply droppfd.
     * No rounding oddurs duf to tif mbximum widti - digits brf simply droppfd.
     * No rounding oddurs duf to tif mbximum widti - digits brf simply droppfd.
     * No rounding oddurs duf to tif mbximum widti - digits brf simply droppfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must bf bftwffn
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must bf bftwffn
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must bf bftwffn
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must bf bftwffn
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must bf bftwffn
     * tif minimum bnd mbximum widti. Wifn pbrsing in lfnifnt modf, tif minimum
     * tif minimum bnd mbximum widti. Wifn pbrsing in lfnifnt modf, tif minimum
     * tif minimum bnd mbximum widti. Wifn pbrsing in lfnifnt modf, tif minimum
     * tif minimum bnd mbximum widti. Wifn pbrsing in lfnifnt modf, tif minimum
     * tif minimum bnd mbximum widti. Wifn pbrsing in lfnifnt modf, tif minimum
     * widti is donsidfrfd to bf zfro bnd tif mbximum is ninf.
     * widti is donsidfrfd to bf zfro bnd tif mbximum is ninf.
     * widti is donsidfrfd to bf zfro bnd tif mbximum is ninf.
     * widti is donsidfrfd to bf zfro bnd tif mbximum is ninf.
     * widti is donsidfrfd to bf zfro bnd tif mbximum is ninf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf is nfgbtivf bn fxdfption will bf tirown.
     * If tif vbluf is nfgbtivf bn fxdfption will bf tirown.
     * If tif vbluf is nfgbtivf bn fxdfption will bf tirown.
     * If tif vbluf is nfgbtivf bn fxdfption will bf tirown.
     * If tif vbluf is nfgbtivf bn fxdfption will bf tirown.
     * If tif fifld dofs not ibvf b fixfd sft of vblid vblufs tifn bn
     * If tif fifld dofs not ibvf b fixfd sft of vblid vblufs tifn bn
     * If tif fifld dofs not ibvf b fixfd sft of vblid vblufs tifn bn
     * If tif fifld dofs not ibvf b fixfd sft of vblid vblufs tifn bn
     * If tif fifld dofs not ibvf b fixfd sft of vblid vblufs tifn bn
     * fxdfption will bf tirown.
     * fxdfption will bf tirown.
     * fxdfption will bf tirown.
     * fxdfption will bf tirown.
     * fxdfption will bf tirown.
     * If tif fifld vbluf in tif dbtf-timf to bf printfd is invblid it
     * If tif fifld vbluf in tif dbtf-timf to bf printfd is invblid it
     * If tif fifld vbluf in tif dbtf-timf to bf printfd is invblid it
     * If tif fifld vbluf in tif dbtf-timf to bf printfd is invblid it
     * If tif fifld vbluf in tif dbtf-timf to bf printfd is invblid it
     * dbnnot bf printfd bnd bn fxdfption will bf tirown.
     * dbnnot bf printfd bnd bn fxdfption will bf tirown.
     * dbnnot bf printfd bnd bn fxdfption will bf tirown.
     * dbnnot bf printfd bnd bn fxdfption will bf tirown.
     * dbnnot bf printfd bnd bn fxdfption will bf tirown.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm minWidti  tif minimum widti of tif fifld fxdluding tif dfdimbl point, from 0 to 9
     * @pbrbm minWidti  tif minimum widti of tif fifld fxdluding tif dfdimbl point, from 0 to 9
     * @pbrbm minWidti  tif minimum widti of tif fifld fxdluding tif dfdimbl point, from 0 to 9
     * @pbrbm minWidti  tif minimum widti of tif fifld fxdluding tif dfdimbl point, from 0 to 9
     * @pbrbm minWidti  tif minimum widti of tif fifld fxdluding tif dfdimbl point, from 0 to 9
     * @pbrbm mbxWidti  tif mbximum widti of tif fifld fxdluding tif dfdimbl point, from 1 to 9
     * @pbrbm mbxWidti  tif mbximum widti of tif fifld fxdluding tif dfdimbl point, from 1 to 9
     * @pbrbm mbxWidti  tif mbximum widti of tif fifld fxdluding tif dfdimbl point, from 1 to 9
     * @pbrbm mbxWidti  tif mbximum widti of tif fifld fxdluding tif dfdimbl point, from 1 to 9
     * @pbrbm mbxWidti  tif mbximum widti of tif fifld fxdluding tif dfdimbl point, from 1 to 9
     * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
     * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
     * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
     * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
     * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif fifld ibs b vbribblf sft of vblid vblufs or
     * @tirows IllfgblArgumfntExdfption if tif fifld ibs b vbribblf sft of vblid vblufs or
     * @tirows IllfgblArgumfntExdfption if tif fifld ibs b vbribblf sft of vblid vblufs or
     * @tirows IllfgblArgumfntExdfption if tif fifld ibs b vbribblf sft of vblid vblufs or
     * @tirows IllfgblArgumfntExdfption if tif fifld ibs b vbribblf sft of vblid vblufs or
     *  fitifr widti is invblid
     *  fitifr widti is invblid
     *  fitifr widti is invblid
     *  fitifr widti is invblid
     *  fitifr widti is invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndFrbdtion(
    publid DbtfTimfFormbttfrBuildfr bppfndFrbdtion(
    publid DbtfTimfFormbttfrBuildfr bppfndFrbdtion(
    publid DbtfTimfFormbttfrBuildfr bppfndFrbdtion(
    publid DbtfTimfFormbttfrBuildfr bppfndFrbdtion(
            TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
            TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
        bppfndIntfrnbl(nfw FrbdtionPrintfrPbrsfr(fifld, minWidti, mbxWidti, dfdimblPoint));
        bppfndIntfrnbl(nfw FrbdtionPrintfrPbrsfr(fifld, minWidti, mbxWidti, dfdimblPoint));
        bppfndIntfrnbl(nfw FrbdtionPrintfrPbrsfr(fifld, minWidti, mbxWidti, dfdimblPoint));
        bppfndIntfrnbl(nfw FrbdtionPrintfrPbrsfr(fifld, minWidti, mbxWidti, dfdimblPoint));
        bppfndIntfrnbl(nfw FrbdtionPrintfrPbrsfr(fifld, minWidti, mbxWidti, dfdimblPoint));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif full
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif full
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif full
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif full
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif full
     * tfxt stylf.
     * tfxt stylf.
     * tfxt stylf.
     * tfxt stylf.
     * tfxt stylf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld) {
        rfturn bppfndTfxt(fifld, TfxtStylf.FULL);
        rfturn bppfndTfxt(fifld, TfxtStylf.FULL);
        rfturn bppfndTfxt(fifld, TfxtStylf.FULL);
        rfturn bppfndTfxt(fifld, TfxtStylf.FULL);
        rfturn bppfndTfxt(fifld, TfxtStylf.FULL);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr.
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif tfxt of tif fifld will bf output during b formbt.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * Tif vbluf must bf witiin tif vblid rbngf of tif fifld.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif vbluf dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * If tif fifld ibs no tfxtubl rfprfsfntbtion, tifn tif numfrid vbluf will bf usfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Tif vbluf will bf printfd bs pfr tif normbl formbt of bn intfgfr vbluf.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     * Only nfgbtivf numbfrs will bf signfd. No pbdding will bf bddfd.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, TfxtStylf tfxtStylf) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, tfxtStylf, DbtfTimfTfxtProvidfr.gftInstbndf()));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, tfxtStylf, DbtfTimfTfxtProvidfr.gftInstbndf()));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, tfxtStylf, DbtfTimfTfxtProvidfr.gftInstbndf()));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, tfxtStylf, DbtfTimfTfxtProvidfr.gftInstbndf()));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, tfxtStylf, DbtfTimfTfxtProvidfr.gftInstbndf()));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif spfdififd
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif spfdififd
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif spfdififd
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif spfdififd
     * Appfnds tif tfxt of b dbtf-timf fifld to tif formbttfr using tif spfdififd
     * mbp to supply tif tfxt.
     * mbp to supply tif tfxt.
     * mbp to supply tif tfxt.
     * mbp to supply tif tfxt.
     * mbp to supply tif tfxt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif stbndbrd tfxt outputting mftiods usf tif lodblizfd tfxt in tif JDK.
     * Tif stbndbrd tfxt outputting mftiods usf tif lodblizfd tfxt in tif JDK.
     * Tif stbndbrd tfxt outputting mftiods usf tif lodblizfd tfxt in tif JDK.
     * Tif stbndbrd tfxt outputting mftiods usf tif lodblizfd tfxt in tif JDK.
     * Tif stbndbrd tfxt outputting mftiods usf tif lodblizfd tfxt in tif JDK.
     * Tiis mftiod bllows tibt tfxt to bf spfdififd dirfdtly.
     * Tiis mftiod bllows tibt tfxt to bf spfdififd dirfdtly.
     * Tiis mftiod bllows tibt tfxt to bf spfdififd dirfdtly.
     * Tiis mftiod bllows tibt tfxt to bf spfdififd dirfdtly.
     * Tiis mftiod bllows tibt tfxt to bf spfdififd dirfdtly.
     * Tif supplifd mbp is not vblidbtfd by tif buildfr to fnsurf tibt formbtting or
     * Tif supplifd mbp is not vblidbtfd by tif buildfr to fnsurf tibt formbtting or
     * Tif supplifd mbp is not vblidbtfd by tif buildfr to fnsurf tibt formbtting or
     * Tif supplifd mbp is not vblidbtfd by tif buildfr to fnsurf tibt formbtting or
     * Tif supplifd mbp is not vblidbtfd by tif buildfr to fnsurf tibt formbtting or
     * pbrsing is possiblf, tius bn invblid mbp mby tirow bn frror during lbtfr usf.
     * pbrsing is possiblf, tius bn invblid mbp mby tirow bn frror during lbtfr usf.
     * pbrsing is possiblf, tius bn invblid mbp mby tirow bn frror during lbtfr usf.
     * pbrsing is possiblf, tius bn invblid mbp mby tirow bn frror during lbtfr usf.
     * pbrsing is possiblf, tius bn invblid mbp mby tirow bn frror during lbtfr usf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Supplying tif mbp of tfxt providfs donsidfrbblf flfxibility in formbtting bnd pbrsing.
     * Supplying tif mbp of tfxt providfs donsidfrbblf flfxibility in formbtting bnd pbrsing.
     * Supplying tif mbp of tfxt providfs donsidfrbblf flfxibility in formbtting bnd pbrsing.
     * Supplying tif mbp of tfxt providfs donsidfrbblf flfxibility in formbtting bnd pbrsing.
     * Supplying tif mbp of tfxt providfs donsidfrbblf flfxibility in formbtting bnd pbrsing.
     * For fxbmplf, b lfgbdy bpplidbtion migit rfquirf or supply tif montis of tif
     * For fxbmplf, b lfgbdy bpplidbtion migit rfquirf or supply tif montis of tif
     * For fxbmplf, b lfgbdy bpplidbtion migit rfquirf or supply tif montis of tif
     * For fxbmplf, b lfgbdy bpplidbtion migit rfquirf or supply tif montis of tif
     * For fxbmplf, b lfgbdy bpplidbtion migit rfquirf or supply tif montis of tif
     * yfbr bs "JNY", "FBY", "MCH" ftd. Tifsf do not mbtdi tif stbndbrd sft of tfxt
     * yfbr bs "JNY", "FBY", "MCH" ftd. Tifsf do not mbtdi tif stbndbrd sft of tfxt
     * yfbr bs "JNY", "FBY", "MCH" ftd. Tifsf do not mbtdi tif stbndbrd sft of tfxt
     * yfbr bs "JNY", "FBY", "MCH" ftd. Tifsf do not mbtdi tif stbndbrd sft of tfxt
     * yfbr bs "JNY", "FBY", "MCH" ftd. Tifsf do not mbtdi tif stbndbrd sft of tfxt
     * for lodblizfd monti nbmfs. Using tiis mftiod, b mbp dbn bf drfbtfd wiidi
     * for lodblizfd monti nbmfs. Using tiis mftiod, b mbp dbn bf drfbtfd wiidi
     * for lodblizfd monti nbmfs. Using tiis mftiod, b mbp dbn bf drfbtfd wiidi
     * for lodblizfd monti nbmfs. Using tiis mftiod, b mbp dbn bf drfbtfd wiidi
     * for lodblizfd monti nbmfs. Using tiis mftiod, b mbp dbn bf drfbtfd wiidi
     * dffinfs tif donnfdtion bftwffn fbdi vbluf bnd tif tfxt:
     * dffinfs tif donnfdtion bftwffn fbdi vbluf bnd tif tfxt:
     * dffinfs tif donnfdtion bftwffn fbdi vbluf bnd tif tfxt:
     * dffinfs tif donnfdtion bftwffn fbdi vbluf bnd tif tfxt:
     * dffinfs tif donnfdtion bftwffn fbdi vbluf bnd tif tfxt:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * Mbp&lt;Long, String&gt; mbp = nfw HbsiMbp&lt;&gt;();
     * Mbp&lt;Long, String&gt; mbp = nfw HbsiMbp&lt;&gt;();
     * Mbp&lt;Long, String&gt; mbp = nfw HbsiMbp&lt;&gt;();
     * Mbp&lt;Long, String&gt; mbp = nfw HbsiMbp&lt;&gt;();
     * Mbp&lt;Long, String&gt; mbp = nfw HbsiMbp&lt;&gt;();
     * mbp.put(1L, "JNY");
     * mbp.put(1L, "JNY");
     * mbp.put(1L, "JNY");
     * mbp.put(1L, "JNY");
     * mbp.put(1L, "JNY");
     * mbp.put(2L, "FBY");
     * mbp.put(2L, "FBY");
     * mbp.put(2L, "FBY");
     * mbp.put(2L, "FBY");
     * mbp.put(2L, "FBY");
     * mbp.put(3L, "MCH");
     * mbp.put(3L, "MCH");
     * mbp.put(3L, "MCH");
     * mbp.put(3L, "MCH");
     * mbp.put(3L, "MCH");
     * ...
     * ...
     * ...
     * ...
     * ...
     * buildfr.bppfndTfxt(MONTH_OF_YEAR, mbp);
     * buildfr.bppfndTfxt(MONTH_OF_YEAR, mbp);
     * buildfr.bppfndTfxt(MONTH_OF_YEAR, mbp);
     * buildfr.bppfndTfxt(MONTH_OF_YEAR, mbp);
     * buildfr.bppfndTfxt(MONTH_OF_YEAR, mbp);
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Otifr usfs migit bf to output tif vbluf witi b suffix, sudi bs "1st", "2nd", "3rd",
     * Otifr usfs migit bf to output tif vbluf witi b suffix, sudi bs "1st", "2nd", "3rd",
     * Otifr usfs migit bf to output tif vbluf witi b suffix, sudi bs "1st", "2nd", "3rd",
     * Otifr usfs migit bf to output tif vbluf witi b suffix, sudi bs "1st", "2nd", "3rd",
     * Otifr usfs migit bf to output tif vbluf witi b suffix, sudi bs "1st", "2nd", "3rd",
     * or bs Rombn numfrbls "I", "II", "III", "IV".
     * or bs Rombn numfrbls "I", "II", "III", "IV".
     * or bs Rombn numfrbls "I", "II", "III", "IV".
     * or bs Rombn numfrbls "I", "II", "III", "IV".
     * or bs Rombn numfrbls "I", "II", "III", "IV".
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif vbluf is obtbinfd bnd difdkfd tibt it is in tif vblid rbngf.
     * During formbtting, tif vbluf is obtbinfd bnd difdkfd tibt it is in tif vblid rbngf.
     * During formbtting, tif vbluf is obtbinfd bnd difdkfd tibt it is in tif vblid rbngf.
     * During formbtting, tif vbluf is obtbinfd bnd difdkfd tibt it is in tif vblid rbngf.
     * During formbtting, tif vbluf is obtbinfd bnd difdkfd tibt it is in tif vblid rbngf.
     * If tfxt is not bvbilbblf for tif vbluf tifn it is output bs b numbfr.
     * If tfxt is not bvbilbblf for tif vbluf tifn it is output bs b numbfr.
     * If tfxt is not bvbilbblf for tif vbluf tifn it is output bs b numbfr.
     * If tfxt is not bvbilbblf for tif vbluf tifn it is output bs b numbfr.
     * If tfxt is not bvbilbblf for tif vbluf tifn it is output bs b numbfr.
     * During pbrsing, tif pbrsfr will mbtdi bgbinst tif mbp of tfxt bnd numfrid vblufs.
     * During pbrsing, tif pbrsfr will mbtdi bgbinst tif mbp of tfxt bnd numfrid vblufs.
     * During pbrsing, tif pbrsfr will mbtdi bgbinst tif mbp of tfxt bnd numfrid vblufs.
     * During pbrsing, tif pbrsfr will mbtdi bgbinst tif mbp of tfxt bnd numfrid vblufs.
     * During pbrsing, tif pbrsfr will mbtdi bgbinst tif mbp of tfxt bnd numfrid vblufs.
     *
     *
     *
     *
     *
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm fifld  tif fifld to bppfnd, not null
     * @pbrbm tfxtLookup  tif mbp from tif vbluf to tif tfxt
     * @pbrbm tfxtLookup  tif mbp from tif vbluf to tif tfxt
     * @pbrbm tfxtLookup  tif mbp from tif vbluf to tif tfxt
     * @pbrbm tfxtLookup  tif mbp from tif vbluf to tif tfxt
     * @pbrbm tfxtLookup  tif mbp from tif vbluf to tif tfxt
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, Mbp<Long, String> tfxtLookup) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, Mbp<Long, String> tfxtLookup) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, Mbp<Long, String> tfxtLookup) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, Mbp<Long, String> tfxtLookup) {
    publid DbtfTimfFormbttfrBuildfr bppfndTfxt(TfmporblFifld fifld, Mbp<Long, String> tfxtLookup) {
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(fifld, "fifld");
        Objfdts.rfquirfNonNull(tfxtLookup, "tfxtLookup");
        Objfdts.rfquirfNonNull(tfxtLookup, "tfxtLookup");
        Objfdts.rfquirfNonNull(tfxtLookup, "tfxtLookup");
        Objfdts.rfquirfNonNull(tfxtLookup, "tfxtLookup");
        Objfdts.rfquirfNonNull(tfxtLookup, "tfxtLookup");
        Mbp<Long, String> dopy = nfw LinkfdHbsiMbp<>(tfxtLookup);
        Mbp<Long, String> dopy = nfw LinkfdHbsiMbp<>(tfxtLookup);
        Mbp<Long, String> dopy = nfw LinkfdHbsiMbp<>(tfxtLookup);
        Mbp<Long, String> dopy = nfw LinkfdHbsiMbp<>(tfxtLookup);
        Mbp<Long, String> dopy = nfw LinkfdHbsiMbp<>(tfxtLookup);
        Mbp<TfxtStylf, Mbp<Long, String>> mbp = Collfdtions.singlftonMbp(TfxtStylf.FULL, dopy);
        Mbp<TfxtStylf, Mbp<Long, String>> mbp = Collfdtions.singlftonMbp(TfxtStylf.FULL, dopy);
        Mbp<TfxtStylf, Mbp<Long, String>> mbp = Collfdtions.singlftonMbp(TfxtStylf.FULL, dopy);
        Mbp<TfxtStylf, Mbp<Long, String>> mbp = Collfdtions.singlftonMbp(TfxtStylf.FULL, dopy);
        Mbp<TfxtStylf, Mbp<Long, String>> mbp = Collfdtions.singlftonMbp(TfxtStylf.FULL, dopy);
        finbl LodblfStorf storf = nfw LodblfStorf(mbp);
        finbl LodblfStorf storf = nfw LodblfStorf(mbp);
        finbl LodblfStorf storf = nfw LodblfStorf(mbp);
        finbl LodblfStorf storf = nfw LodblfStorf(mbp);
        finbl LodblfStorf storf = nfw LodblfStorf(mbp);
        DbtfTimfTfxtProvidfr providfr = nfw DbtfTimfTfxtProvidfr() {
        DbtfTimfTfxtProvidfr providfr = nfw DbtfTimfTfxtProvidfr() {
        DbtfTimfTfxtProvidfr providfr = nfw DbtfTimfTfxtProvidfr() {
        DbtfTimfTfxtProvidfr providfr = nfw DbtfTimfTfxtProvidfr() {
        DbtfTimfTfxtProvidfr providfr = nfw DbtfTimfTfxtProvidfr() {
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            publid String gftTfxt(TfmporblFifld fifld, long vbluf, TfxtStylf stylf, Lodblf lodblf) {
            publid String gftTfxt(TfmporblFifld fifld, long vbluf, TfxtStylf stylf, Lodblf lodblf) {
            publid String gftTfxt(TfmporblFifld fifld, long vbluf, TfxtStylf stylf, Lodblf lodblf) {
            publid String gftTfxt(TfmporblFifld fifld, long vbluf, TfxtStylf stylf, Lodblf lodblf) {
            publid String gftTfxt(TfmporblFifld fifld, long vbluf, TfxtStylf stylf, Lodblf lodblf) {
                rfturn storf.gftTfxt(vbluf, stylf);
                rfturn storf.gftTfxt(vbluf, stylf);
                rfturn storf.gftTfxt(vbluf, stylf);
                rfturn storf.gftTfxt(vbluf, stylf);
                rfturn storf.gftTfxt(vbluf, stylf);
            }
            }
            }
            }
            }
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            publid Itfrbtor<Entry<String, Long>> gftTfxtItfrbtor(TfmporblFifld fifld, TfxtStylf stylf, Lodblf lodblf) {
            publid Itfrbtor<Entry<String, Long>> gftTfxtItfrbtor(TfmporblFifld fifld, TfxtStylf stylf, Lodblf lodblf) {
            publid Itfrbtor<Entry<String, Long>> gftTfxtItfrbtor(TfmporblFifld fifld, TfxtStylf stylf, Lodblf lodblf) {
            publid Itfrbtor<Entry<String, Long>> gftTfxtItfrbtor(TfmporblFifld fifld, TfxtStylf stylf, Lodblf lodblf) {
            publid Itfrbtor<Entry<String, Long>> gftTfxtItfrbtor(TfmporblFifld fifld, TfxtStylf stylf, Lodblf lodblf) {
                rfturn storf.gftTfxtItfrbtor(stylf);
                rfturn storf.gftTfxtItfrbtor(stylf);
                rfturn storf.gftTfxtItfrbtor(stylf);
                rfturn storf.gftTfxtItfrbtor(stylf);
                rfturn storf.gftTfxtItfrbtor(stylf);
            }
            }
            }
            }
            }
        };
        };
        };
        };
        };
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, TfxtStylf.FULL, providfr));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, TfxtStylf.FULL, providfr));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, TfxtStylf.FULL, providfr));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, TfxtStylf.FULL, providfr));
        bppfndIntfrnbl(nfw TfxtPrintfrPbrsfr(fifld, TfxtStylf.FULL, providfr));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr, formbtting frbdtionbl
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr, formbtting frbdtionbl
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr, formbtting frbdtionbl
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr, formbtting frbdtionbl
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr, formbtting frbdtionbl
     * digits in groups of tirff.
     * digits in groups of tirff.
     * digits in groups of tirff.
     * digits in groups of tirff.
     * digits in groups of tirff.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Instbnts ibvf b fixfd output formbt.
     * Instbnts ibvf b fixfd output formbt.
     * Instbnts ibvf b fixfd output formbt.
     * Instbnts ibvf b fixfd output formbt.
     * Instbnts ibvf b fixfd output formbt.
     * Tify brf donvfrtfd to b dbtf-timf witi b zonf-offsft of UTC bnd formbttfd
     * Tify brf donvfrtfd to b dbtf-timf witi b zonf-offsft of UTC bnd formbttfd
     * Tify brf donvfrtfd to b dbtf-timf witi b zonf-offsft of UTC bnd formbttfd
     * Tify brf donvfrtfd to b dbtf-timf witi b zonf-offsft of UTC bnd formbttfd
     * Tify brf donvfrtfd to b dbtf-timf witi b zonf-offsft of UTC bnd formbttfd
     * using tif stbndbrd ISO-8601 formbt.
     * using tif stbndbrd ISO-8601 formbt.
     * using tif stbndbrd ISO-8601 formbt.
     * using tif stbndbrd ISO-8601 formbt.
     * using tif stbndbrd ISO-8601 formbt.
     * Witi tiis mftiod, formbtting nbno-of-sfdond outputs zfro, tirff, six
     * Witi tiis mftiod, formbtting nbno-of-sfdond outputs zfro, tirff, six
     * Witi tiis mftiod, formbtting nbno-of-sfdond outputs zfro, tirff, six
     * Witi tiis mftiod, formbtting nbno-of-sfdond outputs zfro, tirff, six
     * Witi tiis mftiod, formbtting nbno-of-sfdond outputs zfro, tirff, six
     * or ninf digits digits bs nfdfssbry.
     * or ninf digits digits bs nfdfssbry.
     * or ninf digits digits bs nfdfssbry.
     * or ninf digits digits bs nfdfssbry.
     * or ninf digits digits bs nfdfssbry.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif lfbp-sfdond timf of '23:59:59' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:59' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:59' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:59' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:59' is ibndlfd to somf dfgrff, sff
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt() {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt() {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt() {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt() {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt() {
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(-2));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(-2));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(-2));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(-2));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(-2));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr witi dontrol ovfr
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr witi dontrol ovfr
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr witi dontrol ovfr
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr witi dontrol ovfr
     * Appfnds bn instbnt using ISO-8601 to tif formbttfr witi dontrol ovfr
     * tif numbfr of frbdtionbl digits.
     * tif numbfr of frbdtionbl digits.
     * tif numbfr of frbdtionbl digits.
     * tif numbfr of frbdtionbl digits.
     * tif numbfr of frbdtionbl digits.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Instbnts ibvf b fixfd output formbt, bltiougi tiis mftiod providfs somf
     * Instbnts ibvf b fixfd output formbt, bltiougi tiis mftiod providfs somf
     * Instbnts ibvf b fixfd output formbt, bltiougi tiis mftiod providfs somf
     * Instbnts ibvf b fixfd output formbt, bltiougi tiis mftiod providfs somf
     * Instbnts ibvf b fixfd output formbt, bltiougi tiis mftiod providfs somf
     * dontrol ovfr tif frbdtionbl digits. Tify brf donvfrtfd to b dbtf-timf
     * dontrol ovfr tif frbdtionbl digits. Tify brf donvfrtfd to b dbtf-timf
     * dontrol ovfr tif frbdtionbl digits. Tify brf donvfrtfd to b dbtf-timf
     * dontrol ovfr tif frbdtionbl digits. Tify brf donvfrtfd to b dbtf-timf
     * dontrol ovfr tif frbdtionbl digits. Tify brf donvfrtfd to b dbtf-timf
     * witi b zonf-offsft of UTC bnd printfd using tif stbndbrd ISO-8601 formbt.
     * witi b zonf-offsft of UTC bnd printfd using tif stbndbrd ISO-8601 formbt.
     * witi b zonf-offsft of UTC bnd printfd using tif stbndbrd ISO-8601 formbt.
     * witi b zonf-offsft of UTC bnd printfd using tif stbndbrd ISO-8601 formbt.
     * witi b zonf-offsft of UTC bnd printfd using tif stbndbrd ISO-8601 formbt.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * Tif lodblizfd dfdimbl stylf is not usfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif {@dodf frbdtionblDigits} pbrbmftfr bllows tif output of tif frbdtionbl
     * Tif {@dodf frbdtionblDigits} pbrbmftfr bllows tif output of tif frbdtionbl
     * Tif {@dodf frbdtionblDigits} pbrbmftfr bllows tif output of tif frbdtionbl
     * Tif {@dodf frbdtionblDigits} pbrbmftfr bllows tif output of tif frbdtionbl
     * Tif {@dodf frbdtionblDigits} pbrbmftfr bllows tif output of tif frbdtionbl
     * sfdond to bf dontrollfd. Spfdifying zfro will dbusf no frbdtionbl digits
     * sfdond to bf dontrollfd. Spfdifying zfro will dbusf no frbdtionbl digits
     * sfdond to bf dontrollfd. Spfdifying zfro will dbusf no frbdtionbl digits
     * sfdond to bf dontrollfd. Spfdifying zfro will dbusf no frbdtionbl digits
     * sfdond to bf dontrollfd. Spfdifying zfro will dbusf no frbdtionbl digits
     * to bf output. From 1 to 9 will output bn indrfbsing numbfr of digits, using
     * to bf output. From 1 to 9 will output bn indrfbsing numbfr of digits, using
     * to bf output. From 1 to 9 will output bn indrfbsing numbfr of digits, using
     * to bf output. From 1 to 9 will output bn indrfbsing numbfr of digits, using
     * to bf output. From 1 to 9 will output bn indrfbsing numbfr of digits, using
     * zfro rigit-pbdding if nfdfssbry. Tif spfdibl vbluf -1 is usfd to output bs
     * zfro rigit-pbdding if nfdfssbry. Tif spfdibl vbluf -1 is usfd to output bs
     * zfro rigit-pbdding if nfdfssbry. Tif spfdibl vbluf -1 is usfd to output bs
     * zfro rigit-pbdding if nfdfssbry. Tif spfdibl vbluf -1 is usfd to output bs
     * zfro rigit-pbdding if nfdfssbry. Tif spfdibl vbluf -1 is usfd to output bs
     * mbny digits bs nfdfssbry to bvoid bny trbiling zfrofs.
     * mbny digits bs nfdfssbry to bvoid bny trbiling zfrofs.
     * mbny digits bs nfdfssbry to bvoid bny trbiling zfrofs.
     * mbny digits bs nfdfssbry to bvoid bny trbiling zfrofs.
     * mbny digits bs nfdfssbry to bvoid bny trbiling zfrofs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must mbtdi tif
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must mbtdi tif
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must mbtdi tif
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must mbtdi tif
     * Wifn pbrsing in stridt modf, tif numbfr of pbrsfd digits must mbtdi tif
     * frbdtionbl digits. Wifn pbrsing in lfnifnt modf, bny numbfr of frbdtionbl
     * frbdtionbl digits. Wifn pbrsing in lfnifnt modf, bny numbfr of frbdtionbl
     * frbdtionbl digits. Wifn pbrsing in lfnifnt modf, bny numbfr of frbdtionbl
     * frbdtionbl digits. Wifn pbrsing in lfnifnt modf, bny numbfr of frbdtionbl
     * frbdtionbl digits. Wifn pbrsing in lfnifnt modf, bny numbfr of frbdtionbl
     * digits from zfro to ninf brf bddfptfd.
     * digits from zfro to ninf brf bddfptfd.
     * digits from zfro to ninf brf bddfptfd.
     * digits from zfro to ninf brf bddfptfd.
     * digits from zfro to ninf brf bddfptfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * Tif instbnt is obtbinfd using {@link CironoFifld#INSTANT_SECONDS INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * bnd optionblly (@dodf NANO_OF_SECOND). Tif vbluf of {@dodf INSTANT_SECONDS}
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * mby bf outsidf tif mbximum rbngf of {@dodf LodblDbtfTimf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif {@linkplbin RfsolvfrStylf rfsolvfr stylf} ibs no ffffdt on instbnt pbrsing.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif fnd-of-dby timf of '24:00' is ibndlfd bs midnigit bt tif stbrt of tif following dby.
     * Tif lfbp-sfdond timf of '23:59:60' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:60' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:60' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:60' is ibndlfd to somf dfgrff, sff
     * Tif lfbp-sfdond timf of '23:59:60' is ibndlfd to somf dfgrff, sff
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * {@link DbtfTimfFormbttfr#pbrsfdLfbpSfdond()} for full dftbils.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * An bltfrnbtivf to tiis mftiod is to formbt/pbrsf tif instbnt bs b singlf
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     * fpodi-sfdonds vbluf. Tibt is bdiifvfd using {@dodf bppfndVbluf(INSTANT_SECONDS)}.
     *
     *
     *
     *
     *
     * @pbrbm frbdtionblDigits  tif numbfr of frbdtionbl sfdond digits to formbt witi,
     * @pbrbm frbdtionblDigits  tif numbfr of frbdtionbl sfdond digits to formbt witi,
     * @pbrbm frbdtionblDigits  tif numbfr of frbdtionbl sfdond digits to formbt witi,
     * @pbrbm frbdtionblDigits  tif numbfr of frbdtionbl sfdond digits to formbt witi,
     * @pbrbm frbdtionblDigits  tif numbfr of frbdtionbl sfdond digits to formbt witi,
     *  from 0 to 9, or -1 to usf bs mbny digits bs nfdfssbry
     *  from 0 to 9, or -1 to usf bs mbny digits bs nfdfssbry
     *  from 0 to 9, or -1 to usf bs mbny digits bs nfdfssbry
     *  from 0 to 9, or -1 to usf bs mbny digits bs nfdfssbry
     *  from 0 to 9, or -1 to usf bs mbny digits bs nfdfssbry
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt(int frbdtionblDigits) {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt(int frbdtionblDigits) {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt(int frbdtionblDigits) {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt(int frbdtionblDigits) {
    publid DbtfTimfFormbttfrBuildfr bppfndInstbnt(int frbdtionblDigits) {
        if (frbdtionblDigits < -1 || frbdtionblDigits > 9) {
        if (frbdtionblDigits < -1 || frbdtionblDigits > 9) {
        if (frbdtionblDigits < -1 || frbdtionblDigits > 9) {
        if (frbdtionblDigits < -1 || frbdtionblDigits > 9) {
        if (frbdtionblDigits < -1 || frbdtionblDigits > 9) {
            tirow nfw IllfgblArgumfntExdfption("Tif frbdtionbl digits must bf from -1 to 9 indlusivf but wbs " + frbdtionblDigits);
            tirow nfw IllfgblArgumfntExdfption("Tif frbdtionbl digits must bf from -1 to 9 indlusivf but wbs " + frbdtionblDigits);
            tirow nfw IllfgblArgumfntExdfption("Tif frbdtionbl digits must bf from -1 to 9 indlusivf but wbs " + frbdtionblDigits);
            tirow nfw IllfgblArgumfntExdfption("Tif frbdtionbl digits must bf from -1 to 9 indlusivf but wbs " + frbdtionblDigits);
            tirow nfw IllfgblArgumfntExdfption("Tif frbdtionbl digits must bf from -1 to 9 indlusivf but wbs " + frbdtionblDigits);
        }
        }
        }
        }
        }
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(frbdtionblDigits));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(frbdtionblDigits));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(frbdtionblDigits));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(frbdtionblDigits));
        bppfndIntfrnbl(nfw InstbntPrintfrPbrsfr(frbdtionblDigits));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis is fquivblfnt to dblling {@dodf bppfndOffsft("+HH:MM:ss", "Z")}.
     * Tiis is fquivblfnt to dblling {@dodf bppfndOffsft("+HH:MM:ss", "Z")}.
     * Tiis is fquivblfnt to dblling {@dodf bppfndOffsft("+HH:MM:ss", "Z")}.
     * Tiis is fquivblfnt to dblling {@dodf bppfndOffsft("+HH:MM:ss", "Z")}.
     * Tiis is fquivblfnt to dblling {@dodf bppfndOffsft("+HH:MM:ss", "Z")}.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsftId() {
        bppfndIntfrnbl(OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
        bppfndIntfrnbl(OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
        bppfndIntfrnbl(OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
        bppfndIntfrnbl(OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
        bppfndIntfrnbl(OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * Appfnds tif zonf offsft, sudi bs '+01:00', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif offsft ID to tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * It will bf printfd using tif formbt dffinfd bflow.
     * It will bf printfd using tif formbt dffinfd bflow.
     * It will bf printfd using tif formbt dffinfd bflow.
     * It will bf printfd using tif formbt dffinfd bflow.
     * It will bf printfd using tif formbt dffinfd bflow.
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bflow.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bflow.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bflow.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bflow.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bflow.
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif formbt of tif offsft is dontrollfd by b pbttfrn wiidi must bf onf
     * Tif formbt of tif offsft is dontrollfd by b pbttfrn wiidi must bf onf
     * Tif formbt of tif offsft is dontrollfd by b pbttfrn wiidi must bf onf
     * Tif formbt of tif offsft is dontrollfd by b pbttfrn wiidi must bf onf
     * Tif formbt of tif offsft is dontrollfd by b pbttfrn wiidi must bf onf
     * of tif following:
     * of tif following:
     * of tif following:
     * of tif following:
     * of tif following:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <li>{@dodf +HH} - iour only, ignoring minutf bnd sfdond
     * <li>{@dodf +HH} - iour only, ignoring minutf bnd sfdond
     * <li>{@dodf +HH} - iour only, ignoring minutf bnd sfdond
     * <li>{@dodf +HH} - iour only, ignoring minutf bnd sfdond
     * <li>{@dodf +HH} - iour only, ignoring minutf bnd sfdond
     * <li>{@dodf +HHmm} - iour, witi minutf if non-zfro, ignoring sfdond, no dolon
     * <li>{@dodf +HHmm} - iour, witi minutf if non-zfro, ignoring sfdond, no dolon
     * <li>{@dodf +HHmm} - iour, witi minutf if non-zfro, ignoring sfdond, no dolon
     * <li>{@dodf +HHmm} - iour, witi minutf if non-zfro, ignoring sfdond, no dolon
     * <li>{@dodf +HHmm} - iour, witi minutf if non-zfro, ignoring sfdond, no dolon
     * <li>{@dodf +HH:mm} - iour, witi minutf if non-zfro, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:mm} - iour, witi minutf if non-zfro, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:mm} - iour, witi minutf if non-zfro, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:mm} - iour, witi minutf if non-zfro, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:mm} - iour, witi minutf if non-zfro, ignoring sfdond, witi dolon
     * <li>{@dodf +HHMM} - iour bnd minutf, ignoring sfdond, no dolon
     * <li>{@dodf +HHMM} - iour bnd minutf, ignoring sfdond, no dolon
     * <li>{@dodf +HHMM} - iour bnd minutf, ignoring sfdond, no dolon
     * <li>{@dodf +HHMM} - iour bnd minutf, ignoring sfdond, no dolon
     * <li>{@dodf +HHMM} - iour bnd minutf, ignoring sfdond, no dolon
     * <li>{@dodf +HH:MM} - iour bnd minutf, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:MM} - iour bnd minutf, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:MM} - iour bnd minutf, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:MM} - iour bnd minutf, ignoring sfdond, witi dolon
     * <li>{@dodf +HH:MM} - iour bnd minutf, ignoring sfdond, witi dolon
     * <li>{@dodf +HHMMss} - iour bnd minutf, witi sfdond if non-zfro, no dolon
     * <li>{@dodf +HHMMss} - iour bnd minutf, witi sfdond if non-zfro, no dolon
     * <li>{@dodf +HHMMss} - iour bnd minutf, witi sfdond if non-zfro, no dolon
     * <li>{@dodf +HHMMss} - iour bnd minutf, witi sfdond if non-zfro, no dolon
     * <li>{@dodf +HHMMss} - iour bnd minutf, witi sfdond if non-zfro, no dolon
     * <li>{@dodf +HH:MM:ss} - iour bnd minutf, witi sfdond if non-zfro, witi dolon
     * <li>{@dodf +HH:MM:ss} - iour bnd minutf, witi sfdond if non-zfro, witi dolon
     * <li>{@dodf +HH:MM:ss} - iour bnd minutf, witi sfdond if non-zfro, witi dolon
     * <li>{@dodf +HH:MM:ss} - iour bnd minutf, witi sfdond if non-zfro, witi dolon
     * <li>{@dodf +HH:MM:ss} - iour bnd minutf, witi sfdond if non-zfro, witi dolon
     * <li>{@dodf +HHMMSS} - iour, minutf bnd sfdond, no dolon
     * <li>{@dodf +HHMMSS} - iour, minutf bnd sfdond, no dolon
     * <li>{@dodf +HHMMSS} - iour, minutf bnd sfdond, no dolon
     * <li>{@dodf +HHMMSS} - iour, minutf bnd sfdond, no dolon
     * <li>{@dodf +HHMMSS} - iour, minutf bnd sfdond, no dolon
     * <li>{@dodf +HH:MM:SS} - iour, minutf bnd sfdond, witi dolon
     * <li>{@dodf +HH:MM:SS} - iour, minutf bnd sfdond, witi dolon
     * <li>{@dodf +HH:MM:SS} - iour, minutf bnd sfdond, witi dolon
     * <li>{@dodf +HH:MM:SS} - iour, minutf bnd sfdond, witi dolon
     * <li>{@dodf +HH:MM:SS} - iour, minutf bnd sfdond, witi dolon
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * Tif "no offsft" tfxt dontrols wibt tfxt is printfd wifn tif totbl bmount of
     * Tif "no offsft" tfxt dontrols wibt tfxt is printfd wifn tif totbl bmount of
     * Tif "no offsft" tfxt dontrols wibt tfxt is printfd wifn tif totbl bmount of
     * Tif "no offsft" tfxt dontrols wibt tfxt is printfd wifn tif totbl bmount of
     * Tif "no offsft" tfxt dontrols wibt tfxt is printfd wifn tif totbl bmount of
     * tif offsft fiflds to bf output is zfro.
     * tif offsft fiflds to bf output is zfro.
     * tif offsft fiflds to bf output is zfro.
     * tif offsft fiflds to bf output is zfro.
     * tif offsft fiflds to bf output is zfro.
     * Exbmplf vblufs would bf 'Z', '+00:00', 'UTC' or 'GMT'.
     * Exbmplf vblufs would bf 'Z', '+00:00', 'UTC' or 'GMT'.
     * Exbmplf vblufs would bf 'Z', '+00:00', 'UTC' or 'GMT'.
     * Exbmplf vblufs would bf 'Z', '+00:00', 'UTC' or 'GMT'.
     * Exbmplf vblufs would bf 'Z', '+00:00', 'UTC' or 'GMT'.
     * Tirff formbts brf bddfptfd for pbrsing UTC - tif "no offsft" tfxt, bnd tif
     * Tirff formbts brf bddfptfd for pbrsing UTC - tif "no offsft" tfxt, bnd tif
     * Tirff formbts brf bddfptfd for pbrsing UTC - tif "no offsft" tfxt, bnd tif
     * Tirff formbts brf bddfptfd for pbrsing UTC - tif "no offsft" tfxt, bnd tif
     * Tirff formbts brf bddfptfd for pbrsing UTC - tif "no offsft" tfxt, bnd tif
     * plus bnd minus vfrsions of zfro dffinfd by tif pbttfrn.
     * plus bnd minus vfrsions of zfro dffinfd by tif pbttfrn.
     * plus bnd minus vfrsions of zfro dffinfd by tif pbttfrn.
     * plus bnd minus vfrsions of zfro dffinfd by tif pbttfrn.
     * plus bnd minus vfrsions of zfro dffinfd by tif pbttfrn.
     *
     *
     *
     *
     *
     * @pbrbm pbttfrn  tif pbttfrn to usf, not null
     * @pbrbm pbttfrn  tif pbttfrn to usf, not null
     * @pbrbm pbttfrn  tif pbttfrn to usf, not null
     * @pbrbm pbttfrn  tif pbttfrn to usf, not null
     * @pbrbm pbttfrn  tif pbttfrn to usf, not null
     * @pbrbm noOffsftTfxt  tif tfxt to usf wifn tif offsft is zfro, not null
     * @pbrbm noOffsftTfxt  tif tfxt to usf wifn tif offsft is zfro, not null
     * @pbrbm noOffsftTfxt  tif tfxt to usf wifn tif offsft is zfro, not null
     * @pbrbm noOffsftTfxt  tif tfxt to usf wifn tif offsft is zfro, not null
     * @pbrbm noOffsftTfxt  tif tfxt to usf wifn tif offsft is zfro, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndOffsft(String pbttfrn, String noOffsftTfxt) {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsft(String pbttfrn, String noOffsftTfxt) {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsft(String pbttfrn, String noOffsftTfxt) {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsft(String pbttfrn, String noOffsftTfxt) {
    publid DbtfTimfFormbttfrBuildfr bppfndOffsft(String pbttfrn, String noOffsftTfxt) {
        bppfndIntfrnbl(nfw OffsftIdPrintfrPbrsfr(pbttfrn, noOffsftTfxt));
        bppfndIntfrnbl(nfw OffsftIdPrintfrPbrsfr(pbttfrn, noOffsftTfxt));
        bppfndIntfrnbl(nfw OffsftIdPrintfrPbrsfr(pbttfrn, noOffsftTfxt));
        bppfndIntfrnbl(nfw OffsftIdPrintfrPbrsfr(pbttfrn, noOffsftTfxt));
        bppfndIntfrnbl(nfw OffsftIdPrintfrPbrsfr(pbttfrn, noOffsftTfxt));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif lodblizfd zonf offsft, sudi bs 'GMT+01:00', to tif formbttfr.
     * Appfnds tif lodblizfd zonf offsft, sudi bs 'GMT+01:00', to tif formbttfr.
     * Appfnds tif lodblizfd zonf offsft, sudi bs 'GMT+01:00', to tif formbttfr.
     * Appfnds tif lodblizfd zonf offsft, sudi bs 'GMT+01:00', to tif formbttfr.
     * Appfnds tif lodblizfd zonf offsft, sudi bs 'GMT+01:00', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds b lodblizfd zonf offsft to tif buildfr, tif formbt of tif
     * Tiis bppfnds b lodblizfd zonf offsft to tif buildfr, tif formbt of tif
     * Tiis bppfnds b lodblizfd zonf offsft to tif buildfr, tif formbt of tif
     * Tiis bppfnds b lodblizfd zonf offsft to tif buildfr, tif formbt of tif
     * Tiis bppfnds b lodblizfd zonf offsft to tif buildfr, tif formbt of tif
     * lodblizfd offsft is dontrollfd by tif spfdififd {@link FormbtStylf stylf}
     * lodblizfd offsft is dontrollfd by tif spfdififd {@link FormbtStylf stylf}
     * lodblizfd offsft is dontrollfd by tif spfdififd {@link FormbtStylf stylf}
     * lodblizfd offsft is dontrollfd by tif spfdififd {@link FormbtStylf stylf}
     * lodblizfd offsft is dontrollfd by tif spfdififd {@link FormbtStylf stylf}
     * to tiis mftiod:
     * to tiis mftiod:
     * to tiis mftiod:
     * to tiis mftiod:
     * to tiis mftiod:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <li>{@link TfxtStylf#FULL full} - formbts witi lodblizfd offsft tfxt, sudi
     * <li>{@link TfxtStylf#FULL full} - formbts witi lodblizfd offsft tfxt, sudi
     * <li>{@link TfxtStylf#FULL full} - formbts witi lodblizfd offsft tfxt, sudi
     * <li>{@link TfxtStylf#FULL full} - formbts witi lodblizfd offsft tfxt, sudi
     * <li>{@link TfxtStylf#FULL full} - formbts witi lodblizfd offsft tfxt, sudi
     * bs 'GMT, 2-digit iour bnd minutf fifld, optionbl sfdond fifld if non-zfro,
     * bs 'GMT, 2-digit iour bnd minutf fifld, optionbl sfdond fifld if non-zfro,
     * bs 'GMT, 2-digit iour bnd minutf fifld, optionbl sfdond fifld if non-zfro,
     * bs 'GMT, 2-digit iour bnd minutf fifld, optionbl sfdond fifld if non-zfro,
     * bs 'GMT, 2-digit iour bnd minutf fifld, optionbl sfdond fifld if non-zfro,
     * bnd dolon.
     * bnd dolon.
     * bnd dolon.
     * bnd dolon.
     * bnd dolon.
     * <li>{@link TfxtStylf#SHORT siort} - formbts witi lodblizfd offsft tfxt,
     * <li>{@link TfxtStylf#SHORT siort} - formbts witi lodblizfd offsft tfxt,
     * <li>{@link TfxtStylf#SHORT siort} - formbts witi lodblizfd offsft tfxt,
     * <li>{@link TfxtStylf#SHORT siort} - formbts witi lodblizfd offsft tfxt,
     * <li>{@link TfxtStylf#SHORT siort} - formbts witi lodblizfd offsft tfxt,
     * sudi bs 'GMT, iour witiout lfbding zfro, optionbl 2-digit minutf bnd
     * sudi bs 'GMT, iour witiout lfbding zfro, optionbl 2-digit minutf bnd
     * sudi bs 'GMT, iour witiout lfbding zfro, optionbl 2-digit minutf bnd
     * sudi bs 'GMT, iour witiout lfbding zfro, optionbl 2-digit minutf bnd
     * sudi bs 'GMT, iour witiout lfbding zfro, optionbl 2-digit minutf bnd
     * sfdond if non-zfro, bnd dolon.
     * sfdond if non-zfro, bnd dolon.
     * sfdond if non-zfro, bnd dolon.
     * sfdond if non-zfro, bnd dolon.
     * sfdond if non-zfro, bnd dolon.
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif offsft is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#offsft()}.
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bbovf.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bbovf.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bbovf.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bbovf.
     * During pbrsing, tif offsft is pbrsfd using tif formbt dffinfd bbovf.
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif offsft dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     *
     *
     *
     *
     *
     * @pbrbm stylf  tif formbt stylf to usf, not null
     * @pbrbm stylf  tif formbt stylf to usf, not null
     * @pbrbm stylf  tif formbt stylf to usf, not null
     * @pbrbm stylf  tif formbt stylf to usf, not null
     * @pbrbm stylf  tif formbt stylf to usf, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if stylf is nfitifr {@link TfxtStylf#FULL
     * @tirows IllfgblArgumfntExdfption if stylf is nfitifr {@link TfxtStylf#FULL
     * @tirows IllfgblArgumfntExdfption if stylf is nfitifr {@link TfxtStylf#FULL
     * @tirows IllfgblArgumfntExdfption if stylf is nfitifr {@link TfxtStylf#FULL
     * @tirows IllfgblArgumfntExdfption if stylf is nfitifr {@link TfxtStylf#FULL
     * full} nor {@link TfxtStylf#SHORT siort}
     * full} nor {@link TfxtStylf#SHORT siort}
     * full} nor {@link TfxtStylf#SHORT siort}
     * full} nor {@link TfxtStylf#SHORT siort}
     * full} nor {@link TfxtStylf#SHORT siort}
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfdOffsft(TfxtStylf stylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfdOffsft(TfxtStylf stylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfdOffsft(TfxtStylf stylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfdOffsft(TfxtStylf stylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfdOffsft(TfxtStylf stylf) {
        Objfdts.rfquirfNonNull(stylf, "stylf");
        Objfdts.rfquirfNonNull(stylf, "stylf");
        Objfdts.rfquirfNonNull(stylf, "stylf");
        Objfdts.rfquirfNonNull(stylf, "stylf");
        Objfdts.rfquirfNonNull(stylf, "stylf");
        if (stylf != TfxtStylf.FULL && stylf != TfxtStylf.SHORT) {
        if (stylf != TfxtStylf.FULL && stylf != TfxtStylf.SHORT) {
        if (stylf != TfxtStylf.FULL && stylf != TfxtStylf.SHORT) {
        if (stylf != TfxtStylf.FULL && stylf != TfxtStylf.SHORT) {
        if (stylf != TfxtStylf.FULL && stylf != TfxtStylf.SHORT) {
            tirow nfw IllfgblArgumfntExdfption("Stylf must bf fitifr full or siort");
            tirow nfw IllfgblArgumfntExdfption("Stylf must bf fitifr full or siort");
            tirow nfw IllfgblArgumfntExdfption("Stylf must bf fitifr full or siort");
            tirow nfw IllfgblArgumfntExdfption("Stylf must bf fitifr full or siort");
            tirow nfw IllfgblArgumfntExdfption("Stylf must bf fitifr full or siort");
        }
        }
        }
        }
        }
        bppfndIntfrnbl(nfw LodblizfdOffsftIdPrintfrPbrsfr(stylf));
        bppfndIntfrnbl(nfw LodblizfdOffsftIdPrintfrPbrsfr(stylf));
        bppfndIntfrnbl(nfw LodblizfdOffsftIdPrintfrPbrsfr(stylf));
        bppfndIntfrnbl(nfw LodblizfdOffsftIdPrintfrPbrsfr(stylf));
        bppfndIntfrnbl(nfw LodblizfdOffsftIdPrintfrPbrsfr(stylf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to tif formbttfr.
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to tif formbttfr.
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to tif formbttfr.
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to tif formbttfr.
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr.
     * Tif zonf ID is obtbinfd in b stridt mbnnfr suitbblf for {@dodf ZonfdDbtfTimf}.
     * Tif zonf ID is obtbinfd in b stridt mbnnfr suitbblf for {@dodf ZonfdDbtfTimf}.
     * Tif zonf ID is obtbinfd in b stridt mbnnfr suitbblf for {@dodf ZonfdDbtfTimf}.
     * Tif zonf ID is obtbinfd in b stridt mbnnfr suitbblf for {@dodf ZonfdDbtfTimf}.
     * Tif zonf ID is obtbinfd in b stridt mbnnfr suitbblf for {@dodf ZonfdDbtfTimf}.
     * By dontrbst, {@dodf OffsftDbtfTimf} dofs not ibvf b zonf ID suitbblf
     * By dontrbst, {@dodf OffsftDbtfTimf} dofs not ibvf b zonf ID suitbblf
     * By dontrbst, {@dodf OffsftDbtfTimf} dofs not ibvf b zonf ID suitbblf
     * By dontrbst, {@dodf OffsftDbtfTimf} dofs not ibvf b zonf ID suitbblf
     * By dontrbst, {@dodf OffsftDbtfTimf} dofs not ibvf b zonf ID suitbblf
     * for usf witi tiis mftiod, sff {@link #bppfndZonfOrOffsftId()}.
     * for usf witi tiis mftiod, sff {@link #bppfndZonfOrOffsftId()}.
     * for usf witi tiis mftiod, sff {@link #bppfndZonfOrOffsftId()}.
     * for usf witi tiis mftiod, sff {@link #bppfndZonfOrOffsftId()}.
     * for usf witi tiis mftiod, sff {@link #bppfndZonfOrOffsftId()}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @sff #bppfndZonfRfgionId()
     * @sff #bppfndZonfRfgionId()
     * @sff #bppfndZonfRfgionId()
     * @sff #bppfndZonfRfgionId()
     * @sff #bppfndZonfRfgionId()
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndZonfId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfId() {
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonfId(), "ZonfId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonfId(), "ZonfId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonfId(), "ZonfId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonfId(), "ZonfId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonfId(), "ZonfId()"));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif timf-zonf rfgion ID, sudi bs 'Europf/Pbris', to tif formbttfr,
     * Appfnds tif timf-zonf rfgion ID, sudi bs 'Europf/Pbris', to tif formbttfr,
     * Appfnds tif timf-zonf rfgion ID, sudi bs 'Europf/Pbris', to tif formbttfr,
     * Appfnds tif timf-zonf rfgion ID, sudi bs 'Europf/Pbris', to tif formbttfr,
     * Appfnds tif timf-zonf rfgion ID, sudi bs 'Europf/Pbris', to tif formbttfr,
     * rfjfdting tif zonf ID if it is b {@dodf ZonfOffsft}.
     * rfjfdting tif zonf ID if it is b {@dodf ZonfOffsft}.
     * rfjfdting tif zonf ID if it is b {@dodf ZonfOffsft}.
     * rfjfdting tif zonf ID if it is b {@dodf ZonfOffsft}.
     * rfjfdting tif zonf ID if it is b {@dodf ZonfOffsft}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif zonf ID to tif buildfr
     * only if it is b rfgion-bbsfd ID.
     * only if it is b rfgion-bbsfd ID.
     * only if it is b rfgion-bbsfd ID.
     * only if it is b rfgion-bbsfd ID.
     * only if it is b rfgion-bbsfd ID.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * If tif zonf is b {@dodf ZonfOffsft} or it dbnnot bf obtbinfd tifn
     * If tif zonf is b {@dodf ZonfOffsft} or it dbnnot bf obtbinfd tifn
     * If tif zonf is b {@dodf ZonfOffsft} or it dbnnot bf obtbinfd tifn
     * If tif zonf is b {@dodf ZonfOffsft} or it dbnnot bf obtbinfd tifn
     * If tif zonf is b {@dodf ZonfOffsft} or it dbnnot bf obtbinfd tifn
     * bn fxdfption is tirown unlfss tif sfdtion of tif formbttfr is optionbl.
     * bn fxdfption is tirown unlfss tif sfdtion of tif formbttfr is optionbl.
     * bn fxdfption is tirown unlfss tif sfdtion of tif formbttfr is optionbl.
     * bn fxdfption is tirown unlfss tif sfdtion of tif formbttfr is optionbl.
     * bn fxdfption is tirown unlfss tif sfdtion of tif formbttfr is optionbl.
     * If tif zonf is not bn offsft, tifn tif zonf will bf printfd using
     * If tif zonf is not bn offsft, tifn tif zonf will bf printfd using
     * If tif zonf is not bn offsft, tifn tif zonf will bf printfd using
     * If tif zonf is not bn offsft, tifn tif zonf will bf printfd using
     * If tif zonf is not bn offsft, tifn tif zonf will bf printfd using
     * tif zonf ID from {@link ZonfId#gftId()}.
     * tif zonf ID from {@link ZonfId#gftId()}.
     * tif zonf ID from {@link ZonfId#gftId()}.
     * tif zonf ID from {@link ZonfId#gftId()}.
     * tif zonf ID from {@link ZonfId#gftId()}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("+01:30")
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * Notf blso tibt pbrsing bddfpts offsfts, wifrfbs formbtting will nfvfr
     * Notf blso tibt pbrsing bddfpts offsfts, wifrfbs formbtting will nfvfr
     * Notf blso tibt pbrsing bddfpts offsfts, wifrfbs formbtting will nfvfr
     * Notf blso tibt pbrsing bddfpts offsfts, wifrfbs formbtting will nfvfr
     * Notf blso tibt pbrsing bddfpts offsfts, wifrfbs formbtting will nfvfr
     * produdf onf.
     * produdf onf.
     * produdf onf.
     * produdf onf.
     * produdf onf.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndZonfRfgionId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfRfgionId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfRfgionId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfRfgionId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfRfgionId() {
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(QUERY_REGION_ONLY, "ZonfRfgionId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(QUERY_REGION_ONLY, "ZonfRfgionId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(QUERY_REGION_ONLY, "ZonfRfgionId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(QUERY_REGION_ONLY, "ZonfRfgionId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(QUERY_REGION_ONLY, "ZonfRfgionId()"));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to
     * Appfnds tif timf-zonf ID, sudi bs 'Europf/Pbris' or '+02:00', to
     * tif formbttfr, using tif bfst bvbilbblf zonf ID.
     * tif formbttfr, using tif bfst bvbilbblf zonf ID.
     * tif formbttfr, using tif bfst bvbilbblf zonf ID.
     * tif formbttfr, using tif bfst bvbilbblf zonf ID.
     * tif formbttfr, using tif bfst bvbilbblf zonf ID.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif bfst bvbilbblf
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif bfst bvbilbblf
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif bfst bvbilbblf
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif bfst bvbilbblf
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif bfst bvbilbblf
     * zonf or offsft ID to tif buildfr.
     * zonf or offsft ID to tif buildfr.
     * zonf or offsft ID to tif buildfr.
     * zonf or offsft ID to tif buildfr.
     * zonf or offsft ID to tif buildfr.
     * Tif zonf ID is obtbinfd in b lfnifnt mbnnfr tibt first bttfmpts to
     * Tif zonf ID is obtbinfd in b lfnifnt mbnnfr tibt first bttfmpts to
     * Tif zonf ID is obtbinfd in b lfnifnt mbnnfr tibt first bttfmpts to
     * Tif zonf ID is obtbinfd in b lfnifnt mbnnfr tibt first bttfmpts to
     * Tif zonf ID is obtbinfd in b lfnifnt mbnnfr tibt first bttfmpts to
     * find b truf zonf ID, sudi bs tibt on {@dodf ZonfdDbtfTimf}, bnd
     * find b truf zonf ID, sudi bs tibt on {@dodf ZonfdDbtfTimf}, bnd
     * find b truf zonf ID, sudi bs tibt on {@dodf ZonfdDbtfTimf}, bnd
     * find b truf zonf ID, sudi bs tibt on {@dodf ZonfdDbtfTimf}, bnd
     * find b truf zonf ID, sudi bs tibt on {@dodf ZonfdDbtfTimf}, bnd
     * tifn bttfmpts to find bn offsft, sudi bs tibt on {@dodf OffsftDbtfTimf}.
     * tifn bttfmpts to find bn offsft, sudi bs tibt on {@dodf OffsftDbtfTimf}.
     * tifn bttfmpts to find bn offsft, sudi bs tibt on {@dodf OffsftDbtfTimf}.
     * tifn bttfmpts to find bn offsft, sudi bs tibt on {@dodf OffsftDbtfTimf}.
     * tifn bttfmpts to find bn offsft, sudi bs tibt on {@dodf OffsftDbtfTimf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonf()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonf()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonf()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonf()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonf()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * It will bf printfd using tif rfsult of {@link ZonfId#gftId()}.
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * During pbrsing, tif tfxt must mbtdi b known zonf or offsft.
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * Tifrf brf two typfs of zonf ID, offsft-bbsfd, sudi bs '+01:30' bnd
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * rfgion-bbsfd, sudi bs 'Europf/London'. Tifsf brf pbrsfd difffrfntly.
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * If tif pbrsf stbrts witi '+', '-', 'UT', 'UTC' or 'GMT', tifn tif pbrsfr
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * fxpfdts bn offsft-bbsfd zonf bnd will not mbtdi rfgion-bbsfd zonfs.
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * Tif offsft ID, sudi bs '+02:30', mby bf bt tif stbrt of tif pbrsf,
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * or prffixfd by  'UT', 'UTC' or 'GMT'. Tif offsft ID pbrsing is
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * fquivblfnt to using {@link #bppfndOffsft(String, String)} using tif
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * brgumfnts 'HH:MM:ss' bnd tif no offsft string '0'.
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * If tif pbrsf stbrts witi 'UT', 'UTC' or 'GMT', bnd tif pbrsfr dbnnot
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * mbtdi b following offsft ID, tifn {@link ZonfOffsft#UTC} is sflfdtfd.
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * In bll otifr dbsfs, tif list of known rfgion-bbsfd zonfs is usfd to
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * find tif longfst bvbilbblf mbtdi. If no mbtdi is found, bnd tif pbrsf
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * stbrts witi 'Z', tifn {@dodf ZonfOffsft.UTC} is sflfdtfd.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * For fxbmplf, tif following will pbrsf:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Europf/London"           -- ZonfId.of("Europf/London")
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "Z"                       -- ZonfOffsft.UTC
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UT"                      -- ZonfId.of("UT")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "UTC"                     -- ZonfId.of("UTC")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "GMT"                     -- ZonfId.of("GMT")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "+01:30"                  -- ZonfOffsft.of("+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("UT+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("UT+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("UT+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("UT+01:30")
     *   "UT+01:30"                -- ZonfOffsft.of("UT+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("UTC+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("UTC+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("UTC+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("UTC+01:30")
     *   "UTC+01:30"               -- ZonfOffsft.of("UTC+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("GMT+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("GMT+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("GMT+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("GMT+01:30")
     *   "GMT+01:30"               -- ZonfOffsft.of("GMT+01:30")
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * Notf tibt tiis mftiod is idfntidbl to {@dodf bppfndZonfId()} fxdfpt
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     * in tif mfdibnism usfd to obtbin tif zonf.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     * @sff #bppfndZonfId()
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndZonfOrOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfOrOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfOrOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfOrOffsftId() {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfOrOffsftId() {
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonf(), "ZonfOrOffsftId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonf(), "ZonfOrOffsftId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonf(), "ZonfOrOffsftId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonf(), "ZonfOrOffsftId()"));
        bppfndIntfrnbl(nfw ZonfIdPrintfrPbrsfr(TfmporblQufrifs.zonf(), "ZonfOrOffsftId()"));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf. Tif {@link #bppfndZonfTfxt(TfxtStylf, Sft)} mby bf usfd
     * zonf. Tif {@link #bppfndZonfTfxt(TfxtStylf, Sft)} mby bf usfd
     * zonf. Tif {@link #bppfndZonfTfxt(TfxtStylf, Sft)} mby bf usfd
     * zonf. Tif {@link #bppfndZonfTfxt(TfxtStylf, Sft)} mby bf usfd
     * zonf. Tif {@link #bppfndZonfTfxt(TfxtStylf, Sft)} mby bf usfd
     * to spfdify b sft of prfffrrfd {@link ZonfId} in tiis situbtion.
     * to spfdify b sft of prfffrrfd {@link ZonfId} in tiis situbtion.
     * to spfdify b sft of prfffrrfd {@link ZonfId} in tiis situbtion.
     * to spfdify b sft of prfffrrfd {@link ZonfId} in tiis situbtion.
     * to spfdify b sft of prfffrrfd {@link ZonfId} in tiis situbtion.
     *
     *
     *
     *
     *
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf) {
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, null));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, null));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, null));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, null));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, null));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * Appfnds tif timf-zonf nbmf, sudi bs 'Britisi Summfr Timf', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif tfxtubl nbmf of tif zonf to
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif zonf is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#zonfId()}.
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * If tif zonf is b {@dodf ZonfOffsft} it will bf printfd using tif
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * rfsult of {@link ZonfOffsft#gftId()}.
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * If tif zonf is not bn offsft, tif tfxtubl nbmf will bf lookfd up
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * for tif lodblf sft in tif {@link DbtfTimfFormbttfr}.
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * If tif tfmporbl objfdt bfing printfd rfprfsfnts bn instbnt, tifn tif tfxt
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * will bf tif summfr or wintfr timf tfxt bs bppropribtf.
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * If tif lookup for tfxt dofs not find bny suitbblf rfsult, tifn tif
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * {@link ZonfId#gftId() ID} will bf printfd instfbd.
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * During pbrsing, fitifr tif tfxtubl zonf nbmf, tif zonf ID or tif offsft
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * is bddfptfd. Mbny tfxtubl zonf nbmfs brf not uniquf, sudi bs CST dbn bf
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * for boti "Cfntrbl Stbndbrd Timf" bnd "Ciinb Stbndbrd Timf". In tiis
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * situbtion, tif zonf id will bf dftfrminfd by tif rfgion informbtion from
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * formbttfr's  {@link DbtfTimfFormbttfr#gftLodblf() lodblf} bnd tif stbndbrd
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf id for tibt brfb, for fxbmplf, Amfridb/Nfw_York for tif Amfridb Ebstfrn
     * zonf. Tiis mftiod blso bllows b sft of prfffrrfd {@link ZonfId} to bf
     * zonf. Tiis mftiod blso bllows b sft of prfffrrfd {@link ZonfId} to bf
     * zonf. Tiis mftiod blso bllows b sft of prfffrrfd {@link ZonfId} to bf
     * zonf. Tiis mftiod blso bllows b sft of prfffrrfd {@link ZonfId} to bf
     * zonf. Tiis mftiod blso bllows b sft of prfffrrfd {@link ZonfId} to bf
     * spfdififd for pbrsing. Tif mbtdifd prfffrrfd zonf id will bf usfd if tif
     * spfdififd for pbrsing. Tif mbtdifd prfffrrfd zonf id will bf usfd if tif
     * spfdififd for pbrsing. Tif mbtdifd prfffrrfd zonf id will bf usfd if tif
     * spfdififd for pbrsing. Tif mbtdifd prfffrrfd zonf id will bf usfd if tif
     * spfdififd for pbrsing. Tif mbtdifd prfffrrfd zonf id will bf usfd if tif
     * tfxturbl zonf nbmf bfing pbrsfd is not uniquf.
     * tfxturbl zonf nbmf bfing pbrsfd is not uniquf.
     * tfxturbl zonf nbmf bfing pbrsfd is not uniquf.
     * tfxturbl zonf nbmf bfing pbrsfd is not uniquf.
     * tfxturbl zonf nbmf bfing pbrsfd is not uniquf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif zonf dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif zonf dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     *
     *
     *
     *
     *
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm prfffrrfdZonfs  tif sft of prfffrrfd zonf ids, not null
     * @pbrbm prfffrrfdZonfs  tif sft of prfffrrfd zonf ids, not null
     * @pbrbm prfffrrfdZonfs  tif sft of prfffrrfd zonf ids, not null
     * @pbrbm prfffrrfdZonfs  tif sft of prfffrrfd zonf ids, not null
     * @pbrbm prfffrrfdZonfs  tif sft of prfffrrfd zonf ids, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf,
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf,
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf,
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf,
    publid DbtfTimfFormbttfrBuildfr bppfndZonfTfxt(TfxtStylf tfxtStylf,
                                                   Sft<ZonfId> prfffrrfdZonfs) {
                                                   Sft<ZonfId> prfffrrfdZonfs) {
                                                   Sft<ZonfId> prfffrrfdZonfs) {
                                                   Sft<ZonfId> prfffrrfdZonfs) {
                                                   Sft<ZonfId> prfffrrfdZonfs) {
        Objfdts.rfquirfNonNull(prfffrrfdZonfs, "prfffrrfdZonfs");
        Objfdts.rfquirfNonNull(prfffrrfdZonfs, "prfffrrfdZonfs");
        Objfdts.rfquirfNonNull(prfffrrfdZonfs, "prfffrrfdZonfs");
        Objfdts.rfquirfNonNull(prfffrrfdZonfs, "prfffrrfdZonfs");
        Objfdts.rfquirfNonNull(prfffrrfdZonfs, "prfffrrfdZonfs");
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, prfffrrfdZonfs));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, prfffrrfdZonfs));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, prfffrrfdZonfs));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, prfffrrfdZonfs));
        bppfndIntfrnbl(nfw ZonfTfxtPrintfrPbrsfr(tfxtStylf, prfffrrfdZonfs));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif dironology ID, sudi bs 'ISO' or 'TibiBuddiist', to tif formbttfr.
     * Appfnds tif dironology ID, sudi bs 'ISO' or 'TibiBuddiist', to tif formbttfr.
     * Appfnds tif dironology ID, sudi bs 'ISO' or 'TibiBuddiist', to tif formbttfr.
     * Appfnds tif dironology ID, sudi bs 'ISO' or 'TibiBuddiist', to tif formbttfr.
     * Appfnds tif dironology ID, sudi bs 'ISO' or 'TibiBuddiist', to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif dironology ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif dironology ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif dironology ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif dironology ID to tif buildfr.
     * Tiis bppfnds bn instrudtion to formbt/pbrsf tif dironology ID to tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif dironology is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif dironology is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif dironology is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif dironology is obtbinfd using b mfdibnism fquivblfnt
     * During formbtting, tif dironology is obtbinfd using b mfdibnism fquivblfnt
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#dironology()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#dironology()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#dironology()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#dironology()}.
     * to qufrying tif tfmporbl witi {@link TfmporblQufrifs#dironology()}.
     * It will bf printfd using tif rfsult of {@link Cironology#gftId()}.
     * It will bf printfd using tif rfsult of {@link Cironology#gftId()}.
     * It will bf printfd using tif rfsult of {@link Cironology#gftId()}.
     * It will bf printfd using tif rfsult of {@link Cironology#gftId()}.
     * It will bf printfd using tif rfsult of {@link Cironology#gftId()}.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif dironology is pbrsfd bnd must mbtdi onf of tif dironologifs
     * During pbrsing, tif dironology is pbrsfd bnd must mbtdi onf of tif dironologifs
     * During pbrsing, tif dironology is pbrsfd bnd must mbtdi onf of tif dironologifs
     * During pbrsing, tif dironology is pbrsfd bnd must mbtdi onf of tif dironologifs
     * During pbrsing, tif dironology is pbrsfd bnd must mbtdi onf of tif dironologifs
     * in {@link Cironology#gftAvbilbblfCironologifs()}.
     * in {@link Cironology#gftAvbilbblfCironologifs()}.
     * in {@link Cironology#gftAvbilbblfCironologifs()}.
     * in {@link Cironology#gftAvbilbblfCironologifs()}.
     * in {@link Cironology#gftAvbilbblfCironologifs()}.
     * If tif dironology dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * If tif dironology dbnnot bf pbrsfd tifn bn fxdfption is tirown unlfss tif
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * sfdtion of tif formbttfr is optionbl.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     * Tif pbrsfr usfs tif {@linkplbin #pbrsfCbsfInsfnsitivf() dbsf sfnsitivf} sftting.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyId() {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyId() {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyId() {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyId() {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyId() {
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(null));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(null));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(null));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(null));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(null));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds tif dironology nbmf to tif formbttfr.
     * Appfnds tif dironology nbmf to tif formbttfr.
     * Appfnds tif dironology nbmf to tif formbttfr.
     * Appfnds tif dironology nbmf to tif formbttfr.
     * Appfnds tif dironology nbmf to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif dblfndbr systfm nbmf will bf output during b formbt.
     * Tif dblfndbr systfm nbmf will bf output during b formbt.
     * Tif dblfndbr systfm nbmf will bf output during b formbt.
     * Tif dblfndbr systfm nbmf will bf output during b formbt.
     * Tif dblfndbr systfm nbmf will bf output during b formbt.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     * If tif dironology dbnnot bf obtbinfd tifn bn fxdfption will bf tirown.
     *
     *
     *
     *
     *
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @pbrbm tfxtStylf  tif tfxt stylf to usf, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyTfxt(TfxtStylf tfxtStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndCironologyTfxt(TfxtStylf tfxtStylf) {
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(tfxtStylf));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(tfxtStylf));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(tfxtStylf));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(tfxtStylf));
        bppfndIntfrnbl(nfw CironoPrintfrPbrsfr(tfxtStylf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds b lodblizfd dbtf-timf pbttfrn to tif formbttfr.
     * Appfnds b lodblizfd dbtf-timf pbttfrn to tif formbttfr.
     * Appfnds b lodblizfd dbtf-timf pbttfrn to tif formbttfr.
     * Appfnds b lodblizfd dbtf-timf pbttfrn to tif formbttfr.
     * Appfnds b lodblizfd dbtf-timf pbttfrn to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis bppfnds b lodblizfd sfdtion to tif buildfr, suitbblf for outputting
     * Tiis bppfnds b lodblizfd sfdtion to tif buildfr, suitbblf for outputting
     * Tiis bppfnds b lodblizfd sfdtion to tif buildfr, suitbblf for outputting
     * Tiis bppfnds b lodblizfd sfdtion to tif buildfr, suitbblf for outputting
     * Tiis bppfnds b lodblizfd sfdtion to tif buildfr, suitbblf for outputting
     * b dbtf, timf or dbtf-timf dombinbtion. Tif formbt of tif lodblizfd
     * b dbtf, timf or dbtf-timf dombinbtion. Tif formbt of tif lodblizfd
     * b dbtf, timf or dbtf-timf dombinbtion. Tif formbt of tif lodblizfd
     * b dbtf, timf or dbtf-timf dombinbtion. Tif formbt of tif lodblizfd
     * b dbtf, timf or dbtf-timf dombinbtion. Tif formbt of tif lodblizfd
     * sfdtion is lbzily lookfd up bbsfd on four itfms:
     * sfdtion is lbzily lookfd up bbsfd on four itfms:
     * sfdtion is lbzily lookfd up bbsfd on four itfms:
     * sfdtion is lbzily lookfd up bbsfd on four itfms:
     * sfdtion is lbzily lookfd up bbsfd on four itfms:
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <ul>
     * <li>tif {@dodf dbtfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf dbtfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf dbtfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf dbtfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf dbtfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf timfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf timfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf timfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf timfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf timfStylf} spfdififd to tiis mftiod
     * <li>tif {@dodf Lodblf} of tif {@dodf DbtfTimfFormbttfr}
     * <li>tif {@dodf Lodblf} of tif {@dodf DbtfTimfFormbttfr}
     * <li>tif {@dodf Lodblf} of tif {@dodf DbtfTimfFormbttfr}
     * <li>tif {@dodf Lodblf} of tif {@dodf DbtfTimfFormbttfr}
     * <li>tif {@dodf Lodblf} of tif {@dodf DbtfTimfFormbttfr}
     * <li>tif {@dodf Cironology}, sflfdting tif bfst bvbilbblf
     * <li>tif {@dodf Cironology}, sflfdting tif bfst bvbilbblf
     * <li>tif {@dodf Cironology}, sflfdting tif bfst bvbilbblf
     * <li>tif {@dodf Cironology}, sflfdting tif bfst bvbilbblf
     * <li>tif {@dodf Cironology}, sflfdting tif bfst bvbilbblf
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * </ul>
     * During formbtting, tif dironology is obtbinfd from tif tfmporbl objfdt
     * During formbtting, tif dironology is obtbinfd from tif tfmporbl objfdt
     * During formbtting, tif dironology is obtbinfd from tif tfmporbl objfdt
     * During formbtting, tif dironology is obtbinfd from tif tfmporbl objfdt
     * During formbtting, tif dironology is obtbinfd from tif tfmporbl objfdt
     * bfing formbttfd, wiidi mby ibvf bffn ovfrriddfn by
     * bfing formbttfd, wiidi mby ibvf bffn ovfrriddfn by
     * bfing formbttfd, wiidi mby ibvf bffn ovfrriddfn by
     * bfing formbttfd, wiidi mby ibvf bffn ovfrriddfn by
     * bfing formbttfd, wiidi mby ibvf bffn ovfrriddfn by
     * {@link DbtfTimfFormbttfr#witiCironology(Cironology)}.
     * {@link DbtfTimfFormbttfr#witiCironology(Cironology)}.
     * {@link DbtfTimfFormbttfr#witiCironology(Cironology)}.
     * {@link DbtfTimfFormbttfr#witiCironology(Cironology)}.
     * {@link DbtfTimfFormbttfr#witiCironology(Cironology)}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, if b dironology ibs blrfbdy bffn pbrsfd, tifn it is usfd.
     * During pbrsing, if b dironology ibs blrfbdy bffn pbrsfd, tifn it is usfd.
     * During pbrsing, if b dironology ibs blrfbdy bffn pbrsfd, tifn it is usfd.
     * During pbrsing, if b dironology ibs blrfbdy bffn pbrsfd, tifn it is usfd.
     * During pbrsing, if b dironology ibs blrfbdy bffn pbrsfd, tifn it is usfd.
     * Otifrwisf tif dffbult from {@dodf DbtfTimfFormbttfr.witiCironology(Cironology)}
     * Otifrwisf tif dffbult from {@dodf DbtfTimfFormbttfr.witiCironology(Cironology)}
     * Otifrwisf tif dffbult from {@dodf DbtfTimfFormbttfr.witiCironology(Cironology)}
     * Otifrwisf tif dffbult from {@dodf DbtfTimfFormbttfr.witiCironology(Cironology)}
     * Otifrwisf tif dffbult from {@dodf DbtfTimfFormbttfr.witiCironology(Cironology)}
     * is usfd, witi {@dodf IsoCironology} bs tif fbllbbdk.
     * is usfd, witi {@dodf IsoCironology} bs tif fbllbbdk.
     * is usfd, witi {@dodf IsoCironology} bs tif fbllbbdk.
     * is usfd, witi {@dodf IsoCironology} bs tif fbllbbdk.
     * is usfd, witi {@dodf IsoCironology} bs tif fbllbbdk.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt tiis mftiod providfs similbr fundtionblity to mftiods on
     * Notf tibt tiis mftiod providfs similbr fundtionblity to mftiods on
     * Notf tibt tiis mftiod providfs similbr fundtionblity to mftiods on
     * Notf tibt tiis mftiod providfs similbr fundtionblity to mftiods on
     * Notf tibt tiis mftiod providfs similbr fundtionblity to mftiods on
     * {@dodf DbtfFormbt} sudi bs {@link jbvb.tfxt.DbtfFormbt#gftDbtfTimfInstbndf(int, int)}.
     * {@dodf DbtfFormbt} sudi bs {@link jbvb.tfxt.DbtfFormbt#gftDbtfTimfInstbndf(int, int)}.
     * {@dodf DbtfFormbt} sudi bs {@link jbvb.tfxt.DbtfFormbt#gftDbtfTimfInstbndf(int, int)}.
     * {@dodf DbtfFormbt} sudi bs {@link jbvb.tfxt.DbtfFormbt#gftDbtfTimfInstbndf(int, int)}.
     * {@dodf DbtfFormbt} sudi bs {@link jbvb.tfxt.DbtfFormbt#gftDbtfTimfInstbndf(int, int)}.
     *
     *
     *
     *
     *
     * @pbrbm dbtfStylf  tif dbtf stylf to usf, null mfbns no dbtf rfquirfd
     * @pbrbm dbtfStylf  tif dbtf stylf to usf, null mfbns no dbtf rfquirfd
     * @pbrbm dbtfStylf  tif dbtf stylf to usf, null mfbns no dbtf rfquirfd
     * @pbrbm dbtfStylf  tif dbtf stylf to usf, null mfbns no dbtf rfquirfd
     * @pbrbm dbtfStylf  tif dbtf stylf to usf, null mfbns no dbtf rfquirfd
     * @pbrbm timfStylf  tif timf stylf to usf, null mfbns no timf rfquirfd
     * @pbrbm timfStylf  tif timf stylf to usf, null mfbns no timf rfquirfd
     * @pbrbm timfStylf  tif timf stylf to usf, null mfbns no timf rfquirfd
     * @pbrbm timfStylf  tif timf stylf to usf, null mfbns no timf rfquirfd
     * @pbrbm timfStylf  tif timf stylf to usf, null mfbns no timf rfquirfd
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if boti tif dbtf bnd timf stylfs brf null
     * @tirows IllfgblArgumfntExdfption if boti tif dbtf bnd timf stylfs brf null
     * @tirows IllfgblArgumfntExdfption if boti tif dbtf bnd timf stylfs brf null
     * @tirows IllfgblArgumfntExdfption if boti tif dbtf bnd timf stylfs brf null
     * @tirows IllfgblArgumfntExdfption if boti tif dbtf bnd timf stylfs brf null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfd(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfd(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfd(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfd(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
    publid DbtfTimfFormbttfrBuildfr bppfndLodblizfd(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
        if (dbtfStylf == null && timfStylf == null) {
            tirow nfw IllfgblArgumfntExdfption("Eitifr tif dbtf or timf stylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr tif dbtf or timf stylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr tif dbtf or timf stylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr tif dbtf or timf stylf must bf non-null");
            tirow nfw IllfgblArgumfntExdfption("Eitifr tif dbtf or timf stylf must bf non-null");
        }
        }
        }
        }
        }
        bppfndIntfrnbl(nfw LodblizfdPrintfrPbrsfr(dbtfStylf, timfStylf));
        bppfndIntfrnbl(nfw LodblizfdPrintfrPbrsfr(dbtfStylf, timfStylf));
        bppfndIntfrnbl(nfw LodblizfdPrintfrPbrsfr(dbtfStylf, timfStylf));
        bppfndIntfrnbl(nfw LodblizfdPrintfrPbrsfr(dbtfStylf, timfStylf));
        bppfndIntfrnbl(nfw LodblizfdPrintfrPbrsfr(dbtfStylf, timfStylf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds b dibrbdtfr litfrbl to tif formbttfr.
     * Appfnds b dibrbdtfr litfrbl to tif formbttfr.
     * Appfnds b dibrbdtfr litfrbl to tif formbttfr.
     * Appfnds b dibrbdtfr litfrbl to tif formbttfr.
     * Appfnds b dibrbdtfr litfrbl to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis dibrbdtfr will bf output during b formbt.
     * Tiis dibrbdtfr will bf output during b formbt.
     * Tiis dibrbdtfr will bf output during b formbt.
     * Tiis dibrbdtfr will bf output during b formbt.
     * Tiis dibrbdtfr will bf output during b formbt.
     *
     *
     *
     *
     *
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(dibr litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(dibr litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(dibr litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(dibr litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(dibr litfrbl) {
        bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl));
        bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl));
        bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl));
        bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl));
        bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds b string litfrbl to tif formbttfr.
     * Appfnds b string litfrbl to tif formbttfr.
     * Appfnds b string litfrbl to tif formbttfr.
     * Appfnds b string litfrbl to tif formbttfr.
     * Appfnds b string litfrbl to tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis string will bf output during b formbt.
     * Tiis string will bf output during b formbt.
     * Tiis string will bf output during b formbt.
     * Tiis string will bf output during b formbt.
     * Tiis string will bf output during b formbt.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * If tif litfrbl is fmpty, notiing is bddfd to tif formbttfr.
     * If tif litfrbl is fmpty, notiing is bddfd to tif formbttfr.
     * If tif litfrbl is fmpty, notiing is bddfd to tif formbttfr.
     * If tif litfrbl is fmpty, notiing is bddfd to tif formbttfr.
     * If tif litfrbl is fmpty, notiing is bddfd to tif formbttfr.
     *
     *
     *
     *
     *
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @pbrbm litfrbl  tif litfrbl to bppfnd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(String litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(String litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(String litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(String litfrbl) {
    publid DbtfTimfFormbttfrBuildfr bppfndLitfrbl(String litfrbl) {
        Objfdts.rfquirfNonNull(litfrbl, "litfrbl");
        Objfdts.rfquirfNonNull(litfrbl, "litfrbl");
        Objfdts.rfquirfNonNull(litfrbl, "litfrbl");
        Objfdts.rfquirfNonNull(litfrbl, "litfrbl");
        Objfdts.rfquirfNonNull(litfrbl, "litfrbl");
        if (litfrbl.lfngti() > 0) {
        if (litfrbl.lfngti() > 0) {
        if (litfrbl.lfngti() > 0) {
        if (litfrbl.lfngti() > 0) {
        if (litfrbl.lfngti() > 0) {
            if (litfrbl.lfngti() == 1) {
            if (litfrbl.lfngti() == 1) {
            if (litfrbl.lfngti() == 1) {
            if (litfrbl.lfngti() == 1) {
            if (litfrbl.lfngti() == 1) {
                bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl.dibrAt(0)));
                bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl.dibrAt(0)));
                bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl.dibrAt(0)));
                bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl.dibrAt(0)));
                bppfndIntfrnbl(nfw CibrLitfrblPrintfrPbrsfr(litfrbl.dibrAt(0)));
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                bppfndIntfrnbl(nfw StringLitfrblPrintfrPbrsfr(litfrbl));
                bppfndIntfrnbl(nfw StringLitfrblPrintfrPbrsfr(litfrbl));
                bppfndIntfrnbl(nfw StringLitfrblPrintfrPbrsfr(litfrbl));
                bppfndIntfrnbl(nfw StringLitfrblPrintfrPbrsfr(litfrbl));
                bppfndIntfrnbl(nfw StringLitfrblPrintfrPbrsfr(litfrbl));
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds bll tif flfmfnts of b formbttfr to tif buildfr.
     * Appfnds bll tif flfmfnts of b formbttfr to tif buildfr.
     * Appfnds bll tif flfmfnts of b formbttfr to tif buildfr.
     * Appfnds bll tif flfmfnts of b formbttfr to tif buildfr.
     * Appfnds bll tif flfmfnts of b formbttfr to tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * pbrts of tif formbttfr dirfdtly to tiis buildfr.
     * pbrts of tif formbttfr dirfdtly to tiis buildfr.
     * pbrts of tif formbttfr dirfdtly to tiis buildfr.
     * pbrts of tif formbttfr dirfdtly to tiis buildfr.
     * pbrts of tif formbttfr dirfdtly to tiis buildfr.
     *
     *
     *
     *
     *
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfnd(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfnd(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfnd(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfnd(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfnd(DbtfTimfFormbttfr formbttfr) {
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(fblsf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(fblsf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(fblsf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(fblsf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(fblsf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Appfnds b formbttfr to tif buildfr wiidi will optionblly formbt/pbrsf.
     * Appfnds b formbttfr to tif buildfr wiidi will optionblly formbt/pbrsf.
     * Appfnds b formbttfr to tif buildfr wiidi will optionblly formbt/pbrsf.
     * Appfnds b formbttfr to tif buildfr wiidi will optionblly formbt/pbrsf.
     * Appfnds b formbttfr to tif buildfr wiidi will optionblly formbt/pbrsf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * Tiis mftiod ibs tif sbmf ffffdt bs bppfnding fbdi of tif donstitufnt
     * pbrts dirfdtly to tiis buildfr surroundfd by bn {@link #optionblStbrt()} bnd
     * pbrts dirfdtly to tiis buildfr surroundfd by bn {@link #optionblStbrt()} bnd
     * pbrts dirfdtly to tiis buildfr surroundfd by bn {@link #optionblStbrt()} bnd
     * pbrts dirfdtly to tiis buildfr surroundfd by bn {@link #optionblStbrt()} bnd
     * pbrts dirfdtly to tiis buildfr surroundfd by bn {@link #optionblStbrt()} bnd
     * {@link #optionblEnd()}.
     * {@link #optionblEnd()}.
     * {@link #optionblEnd()}.
     * {@link #optionblEnd()}.
     * {@link #optionblEnd()}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif formbttfr will formbt if dbtb is bvbilbblf for bll tif fiflds dontbinfd witiin it.
     * Tif formbttfr will formbt if dbtb is bvbilbblf for bll tif fiflds dontbinfd witiin it.
     * Tif formbttfr will formbt if dbtb is bvbilbblf for bll tif fiflds dontbinfd witiin it.
     * Tif formbttfr will formbt if dbtb is bvbilbblf for bll tif fiflds dontbinfd witiin it.
     * Tif formbttfr will formbt if dbtb is bvbilbblf for bll tif fiflds dontbinfd witiin it.
     * Tif formbttfr will pbrsf if tif string mbtdifs, otifrwisf no frror is rfturnfd.
     * Tif formbttfr will pbrsf if tif string mbtdifs, otifrwisf no frror is rfturnfd.
     * Tif formbttfr will pbrsf if tif string mbtdifs, otifrwisf no frror is rfturnfd.
     * Tif formbttfr will pbrsf if tif string mbtdifs, otifrwisf no frror is rfturnfd.
     * Tif formbttfr will pbrsf if tif string mbtdifs, otifrwisf no frror is rfturnfd.
     *
     *
     *
     *
     *
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @pbrbm formbttfr  tif formbttfr to bdd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndOptionbl(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfndOptionbl(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfndOptionbl(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfndOptionbl(DbtfTimfFormbttfr formbttfr) {
    publid DbtfTimfFormbttfrBuildfr bppfndOptionbl(DbtfTimfFormbttfr formbttfr) {
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        Objfdts.rfquirfNonNull(formbttfr, "formbttfr");
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(truf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(truf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(truf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(truf));
        bppfndIntfrnbl(formbttfr.toPrintfrPbrsfr(truf));
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds tif flfmfnts dffinfd by tif spfdififd pbttfrn to tif buildfr.
     * Appfnds tif flfmfnts dffinfd by tif spfdififd pbttfrn to tif buildfr.
     * Appfnds tif flfmfnts dffinfd by tif spfdififd pbttfrn to tif buildfr.
     * Appfnds tif flfmfnts dffinfd by tif spfdififd pbttfrn to tif buildfr.
     * Appfnds tif flfmfnts dffinfd by tif spfdififd pbttfrn to tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * All lfttfrs 'A' to 'Z' bnd 'b' to 'z' brf rfsfrvfd bs pbttfrn lfttfrs.
     * All lfttfrs 'A' to 'Z' bnd 'b' to 'z' brf rfsfrvfd bs pbttfrn lfttfrs.
     * All lfttfrs 'A' to 'Z' bnd 'b' to 'z' brf rfsfrvfd bs pbttfrn lfttfrs.
     * All lfttfrs 'A' to 'Z' bnd 'b' to 'z' brf rfsfrvfd bs pbttfrn lfttfrs.
     * All lfttfrs 'A' to 'Z' bnd 'b' to 'z' brf rfsfrvfd bs pbttfrn lfttfrs.
     * Tif dibrbdtfrs '#', '{' bnd '}' brf rfsfrvfd for futurf usf.
     * Tif dibrbdtfrs '#', '{' bnd '}' brf rfsfrvfd for futurf usf.
     * Tif dibrbdtfrs '#', '{' bnd '}' brf rfsfrvfd for futurf usf.
     * Tif dibrbdtfrs '#', '{' bnd '}' brf rfsfrvfd for futurf usf.
     * Tif dibrbdtfrs '#', '{' bnd '}' brf rfsfrvfd for futurf usf.
     * Tif dibrbdtfrs '[' bnd ']' indidbtf optionbl pbttfrns.
     * Tif dibrbdtfrs '[' bnd ']' indidbtf optionbl pbttfrns.
     * Tif dibrbdtfrs '[' bnd ']' indidbtf optionbl pbttfrns.
     * Tif dibrbdtfrs '[' bnd ']' indidbtf optionbl pbttfrns.
     * Tif dibrbdtfrs '[' bnd ']' indidbtf optionbl pbttfrns.
     * Tif following pbttfrn lfttfrs brf dffinfd:
     * Tif following pbttfrn lfttfrs brf dffinfd:
     * Tif following pbttfrn lfttfrs brf dffinfd:
     * Tif following pbttfrn lfttfrs brf dffinfd:
     * Tif following pbttfrn lfttfrs brf dffinfd:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Symbol  Mfbning                     Prfsfntbtion      Exbmplfs
     *  Symbol  Mfbning                     Prfsfntbtion      Exbmplfs
     *  Symbol  Mfbning                     Prfsfntbtion      Exbmplfs
     *  Symbol  Mfbning                     Prfsfntbtion      Exbmplfs
     *  Symbol  Mfbning                     Prfsfntbtion      Exbmplfs
     *  ------  -------                     ------------      -------
     *  ------  -------                     ------------      -------
     *  ------  -------                     ------------      -------
     *  ------  -------                     ------------      -------
     *  ------  -------                     ------------      -------
     *   G       frb                         tfxt              AD; Anno Domini; A
     *   G       frb                         tfxt              AD; Anno Domini; A
     *   G       frb                         tfxt              AD; Anno Domini; A
     *   G       frb                         tfxt              AD; Anno Domini; A
     *   G       frb                         tfxt              AD; Anno Domini; A
     *   u       yfbr                        yfbr              2004; 04
     *   u       yfbr                        yfbr              2004; 04
     *   u       yfbr                        yfbr              2004; 04
     *   u       yfbr                        yfbr              2004; 04
     *   u       yfbr                        yfbr              2004; 04
     *   y       yfbr-of-frb                 yfbr              2004; 04
     *   y       yfbr-of-frb                 yfbr              2004; 04
     *   y       yfbr-of-frb                 yfbr              2004; 04
     *   y       yfbr-of-frb                 yfbr              2004; 04
     *   y       yfbr-of-frb                 yfbr              2004; 04
     *   D       dby-of-yfbr                 numbfr            189
     *   D       dby-of-yfbr                 numbfr            189
     *   D       dby-of-yfbr                 numbfr            189
     *   D       dby-of-yfbr                 numbfr            189
     *   D       dby-of-yfbr                 numbfr            189
     *   M/L     monti-of-yfbr               numbfr/tfxt       7; 07; Jul; July; J
     *   M/L     monti-of-yfbr               numbfr/tfxt       7; 07; Jul; July; J
     *   M/L     monti-of-yfbr               numbfr/tfxt       7; 07; Jul; July; J
     *   M/L     monti-of-yfbr               numbfr/tfxt       7; 07; Jul; July; J
     *   M/L     monti-of-yfbr               numbfr/tfxt       7; 07; Jul; July; J
     *   d       dby-of-monti                numbfr            10
     *   d       dby-of-monti                numbfr            10
     *   d       dby-of-monti                numbfr            10
     *   d       dby-of-monti                numbfr            10
     *   d       dby-of-monti                numbfr            10
     *
     *
     *
     *
     *
     *   Q/q     qubrtfr-of-yfbr             numbfr/tfxt       3; 03; Q3; 3rd qubrtfr
     *   Q/q     qubrtfr-of-yfbr             numbfr/tfxt       3; 03; Q3; 3rd qubrtfr
     *   Q/q     qubrtfr-of-yfbr             numbfr/tfxt       3; 03; Q3; 3rd qubrtfr
     *   Q/q     qubrtfr-of-yfbr             numbfr/tfxt       3; 03; Q3; 3rd qubrtfr
     *   Q/q     qubrtfr-of-yfbr             numbfr/tfxt       3; 03; Q3; 3rd qubrtfr
     *   Y       wffk-bbsfd-yfbr             yfbr              1996; 96
     *   Y       wffk-bbsfd-yfbr             yfbr              1996; 96
     *   Y       wffk-bbsfd-yfbr             yfbr              1996; 96
     *   Y       wffk-bbsfd-yfbr             yfbr              1996; 96
     *   Y       wffk-bbsfd-yfbr             yfbr              1996; 96
     *   w       wffk-of-wffk-bbsfd-yfbr     numbfr            27
     *   w       wffk-of-wffk-bbsfd-yfbr     numbfr            27
     *   w       wffk-of-wffk-bbsfd-yfbr     numbfr            27
     *   w       wffk-of-wffk-bbsfd-yfbr     numbfr            27
     *   w       wffk-of-wffk-bbsfd-yfbr     numbfr            27
     *   W       wffk-of-monti               numbfr            4
     *   W       wffk-of-monti               numbfr            4
     *   W       wffk-of-monti               numbfr            4
     *   W       wffk-of-monti               numbfr            4
     *   W       wffk-of-monti               numbfr            4
     *   E       dby-of-wffk                 tfxt              Tuf; Tufsdby; T
     *   E       dby-of-wffk                 tfxt              Tuf; Tufsdby; T
     *   E       dby-of-wffk                 tfxt              Tuf; Tufsdby; T
     *   E       dby-of-wffk                 tfxt              Tuf; Tufsdby; T
     *   E       dby-of-wffk                 tfxt              Tuf; Tufsdby; T
     *   f/d     lodblizfd dby-of-wffk       numbfr/tfxt       2; 02; Tuf; Tufsdby; T
     *   f/d     lodblizfd dby-of-wffk       numbfr/tfxt       2; 02; Tuf; Tufsdby; T
     *   f/d     lodblizfd dby-of-wffk       numbfr/tfxt       2; 02; Tuf; Tufsdby; T
     *   f/d     lodblizfd dby-of-wffk       numbfr/tfxt       2; 02; Tuf; Tufsdby; T
     *   f/d     lodblizfd dby-of-wffk       numbfr/tfxt       2; 02; Tuf; Tufsdby; T
     *   F       wffk-of-monti               numbfr            3
     *   F       wffk-of-monti               numbfr            3
     *   F       wffk-of-monti               numbfr            3
     *   F       wffk-of-monti               numbfr            3
     *   F       wffk-of-monti               numbfr            3
     *
     *
     *
     *
     *
     *   b       bm-pm-of-dby                tfxt              PM
     *   b       bm-pm-of-dby                tfxt              PM
     *   b       bm-pm-of-dby                tfxt              PM
     *   b       bm-pm-of-dby                tfxt              PM
     *   b       bm-pm-of-dby                tfxt              PM
     *   i       dlodk-iour-of-bm-pm (1-12)  numbfr            12
     *   i       dlodk-iour-of-bm-pm (1-12)  numbfr            12
     *   i       dlodk-iour-of-bm-pm (1-12)  numbfr            12
     *   i       dlodk-iour-of-bm-pm (1-12)  numbfr            12
     *   i       dlodk-iour-of-bm-pm (1-12)  numbfr            12
     *   K       iour-of-bm-pm (0-11)        numbfr            0
     *   K       iour-of-bm-pm (0-11)        numbfr            0
     *   K       iour-of-bm-pm (0-11)        numbfr            0
     *   K       iour-of-bm-pm (0-11)        numbfr            0
     *   K       iour-of-bm-pm (0-11)        numbfr            0
     *   k       dlodk-iour-of-bm-pm (1-24)  numbfr            0
     *   k       dlodk-iour-of-bm-pm (1-24)  numbfr            0
     *   k       dlodk-iour-of-bm-pm (1-24)  numbfr            0
     *   k       dlodk-iour-of-bm-pm (1-24)  numbfr            0
     *   k       dlodk-iour-of-bm-pm (1-24)  numbfr            0
     *
     *
     *
     *
     *
     *   H       iour-of-dby (0-23)          numbfr            0
     *   H       iour-of-dby (0-23)          numbfr            0
     *   H       iour-of-dby (0-23)          numbfr            0
     *   H       iour-of-dby (0-23)          numbfr            0
     *   H       iour-of-dby (0-23)          numbfr            0
     *   m       minutf-of-iour              numbfr            30
     *   m       minutf-of-iour              numbfr            30
     *   m       minutf-of-iour              numbfr            30
     *   m       minutf-of-iour              numbfr            30
     *   m       minutf-of-iour              numbfr            30
     *   s       sfdond-of-minutf            numbfr            55
     *   s       sfdond-of-minutf            numbfr            55
     *   s       sfdond-of-minutf            numbfr            55
     *   s       sfdond-of-minutf            numbfr            55
     *   s       sfdond-of-minutf            numbfr            55
     *   S       frbdtion-of-sfdond          frbdtion          978
     *   S       frbdtion-of-sfdond          frbdtion          978
     *   S       frbdtion-of-sfdond          frbdtion          978
     *   S       frbdtion-of-sfdond          frbdtion          978
     *   S       frbdtion-of-sfdond          frbdtion          978
     *   A       milli-of-dby                numbfr            1234
     *   A       milli-of-dby                numbfr            1234
     *   A       milli-of-dby                numbfr            1234
     *   A       milli-of-dby                numbfr            1234
     *   A       milli-of-dby                numbfr            1234
     *   n       nbno-of-sfdond              numbfr            987654321
     *   n       nbno-of-sfdond              numbfr            987654321
     *   n       nbno-of-sfdond              numbfr            987654321
     *   n       nbno-of-sfdond              numbfr            987654321
     *   n       nbno-of-sfdond              numbfr            987654321
     *   N       nbno-of-dby                 numbfr            1234000000
     *   N       nbno-of-dby                 numbfr            1234000000
     *   N       nbno-of-dby                 numbfr            1234000000
     *   N       nbno-of-dby                 numbfr            1234000000
     *   N       nbno-of-dby                 numbfr            1234000000
     *
     *
     *
     *
     *
     *   V       timf-zonf ID                zonf-id           Amfridb/Los_Angflfs; Z; -08:30
     *   V       timf-zonf ID                zonf-id           Amfridb/Los_Angflfs; Z; -08:30
     *   V       timf-zonf ID                zonf-id           Amfridb/Los_Angflfs; Z; -08:30
     *   V       timf-zonf ID                zonf-id           Amfridb/Los_Angflfs; Z; -08:30
     *   V       timf-zonf ID                zonf-id           Amfridb/Los_Angflfs; Z; -08:30
     *   z       timf-zonf nbmf              zonf-nbmf         Pbdifid Stbndbrd Timf; PST
     *   z       timf-zonf nbmf              zonf-nbmf         Pbdifid Stbndbrd Timf; PST
     *   z       timf-zonf nbmf              zonf-nbmf         Pbdifid Stbndbrd Timf; PST
     *   z       timf-zonf nbmf              zonf-nbmf         Pbdifid Stbndbrd Timf; PST
     *   z       timf-zonf nbmf              zonf-nbmf         Pbdifid Stbndbrd Timf; PST
     *   O       lodblizfd zonf-offsft       offsft-O          GMT+8; GMT+08:00; UTC-08:00;
     *   O       lodblizfd zonf-offsft       offsft-O          GMT+8; GMT+08:00; UTC-08:00;
     *   O       lodblizfd zonf-offsft       offsft-O          GMT+8; GMT+08:00; UTC-08:00;
     *   O       lodblizfd zonf-offsft       offsft-O          GMT+8; GMT+08:00; UTC-08:00;
     *   O       lodblizfd zonf-offsft       offsft-O          GMT+8; GMT+08:00; UTC-08:00;
     *   X       zonf-offsft 'Z' for zfro    offsft-X          Z; -08; -0830; -08:30; -083015; -08:30:15;
     *   X       zonf-offsft 'Z' for zfro    offsft-X          Z; -08; -0830; -08:30; -083015; -08:30:15;
     *   X       zonf-offsft 'Z' for zfro    offsft-X          Z; -08; -0830; -08:30; -083015; -08:30:15;
     *   X       zonf-offsft 'Z' for zfro    offsft-X          Z; -08; -0830; -08:30; -083015; -08:30:15;
     *   X       zonf-offsft 'Z' for zfro    offsft-X          Z; -08; -0830; -08:30; -083015; -08:30:15;
     *   x       zonf-offsft                 offsft-x          +0000; -08; -0830; -08:30; -083015; -08:30:15;
     *   x       zonf-offsft                 offsft-x          +0000; -08; -0830; -08:30; -083015; -08:30:15;
     *   x       zonf-offsft                 offsft-x          +0000; -08; -0830; -08:30; -083015; -08:30:15;
     *   x       zonf-offsft                 offsft-x          +0000; -08; -0830; -08:30; -083015; -08:30:15;
     *   x       zonf-offsft                 offsft-x          +0000; -08; -0830; -08:30; -083015; -08:30:15;
     *   Z       zonf-offsft                 offsft-Z          +0000; -0800; -08:00;
     *   Z       zonf-offsft                 offsft-Z          +0000; -0800; -08:00;
     *   Z       zonf-offsft                 offsft-Z          +0000; -0800; -08:00;
     *   Z       zonf-offsft                 offsft-Z          +0000; -0800; -08:00;
     *   Z       zonf-offsft                 offsft-Z          +0000; -0800; -08:00;
     *
     *
     *
     *
     *
     *   p       pbd nfxt                    pbd modififr      1
     *   p       pbd nfxt                    pbd modififr      1
     *   p       pbd nfxt                    pbd modififr      1
     *   p       pbd nfxt                    pbd modififr      1
     *   p       pbd nfxt                    pbd modififr      1
     *
     *
     *
     *
     *
     *   '       fsdbpf for tfxt             dflimitfr
     *   '       fsdbpf for tfxt             dflimitfr
     *   '       fsdbpf for tfxt             dflimitfr
     *   '       fsdbpf for tfxt             dflimitfr
     *   '       fsdbpf for tfxt             dflimitfr
     *   ''      singlf quotf                litfrbl           '
     *   ''      singlf quotf                litfrbl           '
     *   ''      singlf quotf                litfrbl           '
     *   ''      singlf quotf                litfrbl           '
     *   ''      singlf quotf                litfrbl           '
     *   [       optionbl sfdtion stbrt
     *   [       optionbl sfdtion stbrt
     *   [       optionbl sfdtion stbrt
     *   [       optionbl sfdtion stbrt
     *   [       optionbl sfdtion stbrt
     *   ]       optionbl sfdtion fnd
     *   ]       optionbl sfdtion fnd
     *   ]       optionbl sfdtion fnd
     *   ]       optionbl sfdtion fnd
     *   ]       optionbl sfdtion fnd
     *   #       rfsfrvfd for futurf usf
     *   #       rfsfrvfd for futurf usf
     *   #       rfsfrvfd for futurf usf
     *   #       rfsfrvfd for futurf usf
     *   #       rfsfrvfd for futurf usf
     *   {       rfsfrvfd for futurf usf
     *   {       rfsfrvfd for futurf usf
     *   {       rfsfrvfd for futurf usf
     *   {       rfsfrvfd for futurf usf
     *   {       rfsfrvfd for futurf usf
     *   }       rfsfrvfd for futurf usf
     *   }       rfsfrvfd for futurf usf
     *   }       rfsfrvfd for futurf usf
     *   }       rfsfrvfd for futurf usf
     *   }       rfsfrvfd for futurf usf
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif dount of pbttfrn lfttfrs dftfrminf tif formbt.
     * Tif dount of pbttfrn lfttfrs dftfrminf tif formbt.
     * Tif dount of pbttfrn lfttfrs dftfrminf tif formbt.
     * Tif dount of pbttfrn lfttfrs dftfrminf tif formbt.
     * Tif dount of pbttfrn lfttfrs dftfrminf tif formbt.
     * Sff <b irff="DbtfTimfFormbttfr.itml#pbttfrns">DbtfTimfFormbttfr</b> for b usfr-fodusfd dfsdription of tif pbttfrns.
     * Sff <b irff="DbtfTimfFormbttfr.itml#pbttfrns">DbtfTimfFormbttfr</b> for b usfr-fodusfd dfsdription of tif pbttfrns.
     * Sff <b irff="DbtfTimfFormbttfr.itml#pbttfrns">DbtfTimfFormbttfr</b> for b usfr-fodusfd dfsdription of tif pbttfrns.
     * Sff <b irff="DbtfTimfFormbttfr.itml#pbttfrns">DbtfTimfFormbttfr</b> for b usfr-fodusfd dfsdription of tif pbttfrns.
     * Sff <b irff="DbtfTimfFormbttfr.itml#pbttfrns">DbtfTimfFormbttfr</b> for b usfr-fodusfd dfsdription of tif pbttfrns.
     * Tif following tbblfs dffinf iow tif pbttfrn lfttfrs mbp to tif buildfr.
     * Tif following tbblfs dffinf iow tif pbttfrn lfttfrs mbp to tif buildfr.
     * Tif following tbblfs dffinf iow tif pbttfrn lfttfrs mbp to tif buildfr.
     * Tif following tbblfs dffinf iow tif pbttfrn lfttfrs mbp to tif buildfr.
     * Tif following tbblfs dffinf iow tif pbttfrn lfttfrs mbp to tif buildfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Dbtf fiflds</b>: Pbttfrn lfttfrs to output b dbtf.
     * <b>Dbtf fiflds</b>: Pbttfrn lfttfrs to output b dbtf.
     * <b>Dbtf fiflds</b>: Pbttfrn lfttfrs to output b dbtf.
     * <b>Dbtf fiflds</b>: Pbttfrn lfttfrs to output b dbtf.
     * <b>Dbtf fiflds</b>: Pbttfrn lfttfrs to output b dbtf.
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *    G       1      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    G       1      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    G       1      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    G       1      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    G       1      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GG      2      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GG      2      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GG      2      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GG      2      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GG      2      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGG     3      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGG     3      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGG     3      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGG     3      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGG     3      bppfndTfxt(CironoFifld.ERA, TfxtStylf.SHORT)
     *    GGGG    4      bppfndTfxt(CironoFifld.ERA, TfxtStylf.FULL)
     *    GGGG    4      bppfndTfxt(CironoFifld.ERA, TfxtStylf.FULL)
     *    GGGG    4      bppfndTfxt(CironoFifld.ERA, TfxtStylf.FULL)
     *    GGGG    4      bppfndTfxt(CironoFifld.ERA, TfxtStylf.FULL)
     *    GGGG    4      bppfndTfxt(CironoFifld.ERA, TfxtStylf.FULL)
     *    GGGGG   5      bppfndTfxt(CironoFifld.ERA, TfxtStylf.NARROW)
     *    GGGGG   5      bppfndTfxt(CironoFifld.ERA, TfxtStylf.NARROW)
     *    GGGGG   5      bppfndTfxt(CironoFifld.ERA, TfxtStylf.NARROW)
     *    GGGGG   5      bppfndTfxt(CironoFifld.ERA, TfxtStylf.NARROW)
     *    GGGGG   5      bppfndTfxt(CironoFifld.ERA, TfxtStylf.NARROW)
     *
     *
     *
     *
     *
     *    u       1      bppfndVbluf(CironoFifld.YEAR, 1, 19, SignStylf.NORMAL);
     *    u       1      bppfndVbluf(CironoFifld.YEAR, 1, 19, SignStylf.NORMAL);
     *    u       1      bppfndVbluf(CironoFifld.YEAR, 1, 19, SignStylf.NORMAL);
     *    u       1      bppfndVbluf(CironoFifld.YEAR, 1, 19, SignStylf.NORMAL);
     *    u       1      bppfndVbluf(CironoFifld.YEAR, 1, 19, SignStylf.NORMAL);
     *    uu      2      bppfndVblufRfdudfd(CironoFifld.YEAR, 2, 2000);
     *    uu      2      bppfndVblufRfdudfd(CironoFifld.YEAR, 2, 2000);
     *    uu      2      bppfndVblufRfdudfd(CironoFifld.YEAR, 2, 2000);
     *    uu      2      bppfndVblufRfdudfd(CironoFifld.YEAR, 2, 2000);
     *    uu      2      bppfndVblufRfdudfd(CironoFifld.YEAR, 2, 2000);
     *    uuu     3      bppfndVbluf(CironoFifld.YEAR, 3, 19, SignStylf.NORMAL);
     *    uuu     3      bppfndVbluf(CironoFifld.YEAR, 3, 19, SignStylf.NORMAL);
     *    uuu     3      bppfndVbluf(CironoFifld.YEAR, 3, 19, SignStylf.NORMAL);
     *    uuu     3      bppfndVbluf(CironoFifld.YEAR, 3, 19, SignStylf.NORMAL);
     *    uuu     3      bppfndVbluf(CironoFifld.YEAR, 3, 19, SignStylf.NORMAL);
     *    u..u    4..n   bppfndVbluf(CironoFifld.YEAR, n, 19, SignStylf.EXCEEDS_PAD);
     *    u..u    4..n   bppfndVbluf(CironoFifld.YEAR, n, 19, SignStylf.EXCEEDS_PAD);
     *    u..u    4..n   bppfndVbluf(CironoFifld.YEAR, n, 19, SignStylf.EXCEEDS_PAD);
     *    u..u    4..n   bppfndVbluf(CironoFifld.YEAR, n, 19, SignStylf.EXCEEDS_PAD);
     *    u..u    4..n   bppfndVbluf(CironoFifld.YEAR, n, 19, SignStylf.EXCEEDS_PAD);
     *    y       1      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 1, 19, SignStylf.NORMAL);
     *    y       1      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 1, 19, SignStylf.NORMAL);
     *    y       1      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 1, 19, SignStylf.NORMAL);
     *    y       1      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 1, 19, SignStylf.NORMAL);
     *    y       1      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 1, 19, SignStylf.NORMAL);
     *    yy      2      bppfndVblufRfdudfd(CironoFifld.YEAR_OF_ERA, 2, 2000);
     *    yy      2      bppfndVblufRfdudfd(CironoFifld.YEAR_OF_ERA, 2, 2000);
     *    yy      2      bppfndVblufRfdudfd(CironoFifld.YEAR_OF_ERA, 2, 2000);
     *    yy      2      bppfndVblufRfdudfd(CironoFifld.YEAR_OF_ERA, 2, 2000);
     *    yy      2      bppfndVblufRfdudfd(CironoFifld.YEAR_OF_ERA, 2, 2000);
     *    yyy     3      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 3, 19, SignStylf.NORMAL);
     *    yyy     3      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 3, 19, SignStylf.NORMAL);
     *    yyy     3      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 3, 19, SignStylf.NORMAL);
     *    yyy     3      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 3, 19, SignStylf.NORMAL);
     *    yyy     3      bppfndVbluf(CironoFifld.YEAR_OF_ERA, 3, 19, SignStylf.NORMAL);
     *    y..y    4..n   bppfndVbluf(CironoFifld.YEAR_OF_ERA, n, 19, SignStylf.EXCEEDS_PAD);
     *    y..y    4..n   bppfndVbluf(CironoFifld.YEAR_OF_ERA, n, 19, SignStylf.EXCEEDS_PAD);
     *    y..y    4..n   bppfndVbluf(CironoFifld.YEAR_OF_ERA, n, 19, SignStylf.EXCEEDS_PAD);
     *    y..y    4..n   bppfndVbluf(CironoFifld.YEAR_OF_ERA, n, 19, SignStylf.EXCEEDS_PAD);
     *    y..y    4..n   bppfndVbluf(CironoFifld.YEAR_OF_ERA, n, 19, SignStylf.EXCEEDS_PAD);
     *    Y       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr
     *    Y       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr
     *    Y       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr
     *    Y       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr
     *    Y       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr
     *    YY      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for rfdudfd numfrid wffk-bbsfd-yfbr 2 digits;
     *    YY      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for rfdudfd numfrid wffk-bbsfd-yfbr 2 digits;
     *    YY      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for rfdudfd numfrid wffk-bbsfd-yfbr 2 digits;
     *    YY      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for rfdudfd numfrid wffk-bbsfd-yfbr 2 digits;
     *    YY      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for rfdudfd numfrid wffk-bbsfd-yfbr 2 digits;
     *    YYY     3      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (3, 19, SignStylf.NORMAL);
     *    YYY     3      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (3, 19, SignStylf.NORMAL);
     *    YYY     3      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (3, 19, SignStylf.NORMAL);
     *    YYY     3      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (3, 19, SignStylf.NORMAL);
     *    YYY     3      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (3, 19, SignStylf.NORMAL);
     *    Y..Y    4..n   bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (n, 19, SignStylf.EXCEEDS_PAD);
     *    Y..Y    4..n   bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (n, 19, SignStylf.EXCEEDS_PAD);
     *    Y..Y    4..n   bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (n, 19, SignStylf.EXCEEDS_PAD);
     *    Y..Y    4..n   bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (n, 19, SignStylf.EXCEEDS_PAD);
     *    Y..Y    4..n   bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-bbsfd-yfbr (n, 19, SignStylf.EXCEEDS_PAD);
     *
     *
     *
     *
     *
     *    Q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    Q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    Q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    Q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    Q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    QQ      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    QQ      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    QQ      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    QQ      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    QQ      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    QQQ     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT)
     *    QQQ     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT)
     *    QQQ     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT)
     *    QQQ     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT)
     *    QQQ     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT)
     *    QQQQ    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL)
     *    QQQQ    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL)
     *    QQQQ    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL)
     *    QQQQ    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL)
     *    QQQQ    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL)
     *    QQQQQ   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW)
     *    QQQQQ   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW)
     *    QQQQQ   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW)
     *    QQQQQ   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW)
     *    QQQQQ   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW)
     *    q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    q       1      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR);
     *    qq      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    qq      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    qq      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    qq      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    qq      2      bppfndVbluf(IsoFiflds.QUARTER_OF_YEAR, 2);
     *    qqq     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    qqq     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    qqq     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    qqq     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    qqq     3      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    qqqq    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    qqqq    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    qqqq    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    qqqq    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    qqqq    4      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    qqqqq   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    qqqqq   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    qqqqq   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    qqqqq   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    qqqqq   5      bppfndTfxt(IsoFiflds.QUARTER_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *
     *
     *
     *
     *
     *    M       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    M       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    M       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    M       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    M       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    MM      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    MM      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    MM      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    MM      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    MM      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    MMM     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT)
     *    MMM     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT)
     *    MMM     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT)
     *    MMM     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT)
     *    MMM     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT)
     *    MMMM    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL)
     *    MMMM    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL)
     *    MMMM    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL)
     *    MMMM    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL)
     *    MMMM    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL)
     *    MMMMM   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW)
     *    MMMMM   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW)
     *    MMMMM   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW)
     *    MMMMM   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW)
     *    MMMMM   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW)
     *    L       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    L       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    L       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    L       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    L       1      bppfndVbluf(CironoFifld.MONTH_OF_YEAR);
     *    LL      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    LL      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    LL      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    LL      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    LL      2      bppfndVbluf(CironoFifld.MONTH_OF_YEAR, 2);
     *    LLL     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    LLL     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    LLL     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    LLL     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    LLL     3      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.SHORT_STANDALONE)
     *    LLLL    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    LLLL    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    LLLL    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    LLLL    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    LLLL    4      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.FULL_STANDALONE)
     *    LLLLL   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    LLLLL   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    LLLLL   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    LLLLL   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *    LLLLL   5      bppfndTfxt(CironoFifld.MONTH_OF_YEAR, TfxtStylf.NARROW_STANDALONE)
     *
     *
     *
     *
     *
     *    w       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr
     *    w       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr
     *    w       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr
     *    w       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr
     *    w       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr
     *    ww      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr, zfro-pbddfd
     *    ww      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr, zfro-pbddfd
     *    ww      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr, zfro-pbddfd
     *    ww      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr, zfro-pbddfd
     *    ww      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-yfbr, zfro-pbddfd
     *    W       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-monti
     *    W       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-monti
     *    W       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-monti
     *    W       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-monti
     *    W       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid wffk-of-monti
     *    d       1      bppfndVbluf(CironoFifld.DAY_OF_MONTH)
     *    d       1      bppfndVbluf(CironoFifld.DAY_OF_MONTH)
     *    d       1      bppfndVbluf(CironoFifld.DAY_OF_MONTH)
     *    d       1      bppfndVbluf(CironoFifld.DAY_OF_MONTH)
     *    d       1      bppfndVbluf(CironoFifld.DAY_OF_MONTH)
     *    dd      2      bppfndVbluf(CironoFifld.DAY_OF_MONTH, 2)
     *    dd      2      bppfndVbluf(CironoFifld.DAY_OF_MONTH, 2)
     *    dd      2      bppfndVbluf(CironoFifld.DAY_OF_MONTH, 2)
     *    dd      2      bppfndVbluf(CironoFifld.DAY_OF_MONTH, 2)
     *    dd      2      bppfndVbluf(CironoFifld.DAY_OF_MONTH, 2)
     *    D       1      bppfndVbluf(CironoFifld.DAY_OF_YEAR)
     *    D       1      bppfndVbluf(CironoFifld.DAY_OF_YEAR)
     *    D       1      bppfndVbluf(CironoFifld.DAY_OF_YEAR)
     *    D       1      bppfndVbluf(CironoFifld.DAY_OF_YEAR)
     *    D       1      bppfndVbluf(CironoFifld.DAY_OF_YEAR)
     *    DD      2      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 2)
     *    DD      2      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 2)
     *    DD      2      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 2)
     *    DD      2      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 2)
     *    DD      2      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 2)
     *    DDD     3      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 3)
     *    DDD     3      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 3)
     *    DDD     3      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 3)
     *    DDD     3      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 3)
     *    DDD     3      bppfndVbluf(CironoFifld.DAY_OF_YEAR, 3)
     *    F       1      bppfndVbluf(CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH)
     *    F       1      bppfndVbluf(CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH)
     *    F       1      bppfndVbluf(CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH)
     *    F       1      bppfndVbluf(CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH)
     *    F       1      bppfndVbluf(CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH)
     *    E       1      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    E       1      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    E       1      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    E       1      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    E       1      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EE      2      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EE      2      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EE      2      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EE      2      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EE      2      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEE     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEE     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEE     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEE     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEE     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    EEEE    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    EEEE    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    EEEE    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    EEEE    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    EEEE    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    EEEEE   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    EEEEE   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    EEEEE   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    EEEEE   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    EEEEE   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    f       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    f       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    f       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    f       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    f       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    ff      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk, zfro-pbddfd
     *    ff      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk, zfro-pbddfd
     *    ff      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk, zfro-pbddfd
     *    ff      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk, zfro-pbddfd
     *    ff      2      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk, zfro-pbddfd
     *    fff     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    fff     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    fff     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    fff     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    fff     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT)
     *    ffff    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    ffff    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    ffff    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    ffff    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    ffff    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL)
     *    fffff   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    fffff   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    fffff   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    fffff   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    fffff   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW)
     *    d       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    d       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    d       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    d       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    d       1      bppfnd spfdibl lodblizfd WffkFiflds flfmfnt for numfrid dby-of-wffk
     *    ddd     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT_STANDALONE)
     *    ddd     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT_STANDALONE)
     *    ddd     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT_STANDALONE)
     *    ddd     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT_STANDALONE)
     *    ddd     3      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.SHORT_STANDALONE)
     *    dddd    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL_STANDALONE)
     *    dddd    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL_STANDALONE)
     *    dddd    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL_STANDALONE)
     *    dddd    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL_STANDALONE)
     *    dddd    4      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.FULL_STANDALONE)
     *    ddddd   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW_STANDALONE)
     *    ddddd   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW_STANDALONE)
     *    ddddd   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW_STANDALONE)
     *    ddddd   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW_STANDALONE)
     *    ddddd   5      bppfndTfxt(CironoFifld.DAY_OF_WEEK, TfxtStylf.NARROW_STANDALONE)
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Timf fiflds</b>: Pbttfrn lfttfrs to output b timf.
     * <b>Timf fiflds</b>: Pbttfrn lfttfrs to output b timf.
     * <b>Timf fiflds</b>: Pbttfrn lfttfrs to output b timf.
     * <b>Timf fiflds</b>: Pbttfrn lfttfrs to output b timf.
     * <b>Timf fiflds</b>: Pbttfrn lfttfrs to output b timf.
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *    b       1      bppfndTfxt(CironoFifld.AMPM_OF_DAY, TfxtStylf.SHORT)
     *    b       1      bppfndTfxt(CironoFifld.AMPM_OF_DAY, TfxtStylf.SHORT)
     *    b       1      bppfndTfxt(CironoFifld.AMPM_OF_DAY, TfxtStylf.SHORT)
     *    b       1      bppfndTfxt(CironoFifld.AMPM_OF_DAY, TfxtStylf.SHORT)
     *    b       1      bppfndTfxt(CironoFifld.AMPM_OF_DAY, TfxtStylf.SHORT)
     *    i       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM)
     *    i       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM)
     *    i       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM)
     *    i       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM)
     *    i       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM)
     *    ii      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM, 2)
     *    ii      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM, 2)
     *    ii      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM, 2)
     *    ii      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM, 2)
     *    ii      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_AMPM, 2)
     *    H       1      bppfndVbluf(CironoFifld.HOUR_OF_DAY)
     *    H       1      bppfndVbluf(CironoFifld.HOUR_OF_DAY)
     *    H       1      bppfndVbluf(CironoFifld.HOUR_OF_DAY)
     *    H       1      bppfndVbluf(CironoFifld.HOUR_OF_DAY)
     *    H       1      bppfndVbluf(CironoFifld.HOUR_OF_DAY)
     *    HH      2      bppfndVbluf(CironoFifld.HOUR_OF_DAY, 2)
     *    HH      2      bppfndVbluf(CironoFifld.HOUR_OF_DAY, 2)
     *    HH      2      bppfndVbluf(CironoFifld.HOUR_OF_DAY, 2)
     *    HH      2      bppfndVbluf(CironoFifld.HOUR_OF_DAY, 2)
     *    HH      2      bppfndVbluf(CironoFifld.HOUR_OF_DAY, 2)
     *    k       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY)
     *    k       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY)
     *    k       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY)
     *    k       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY)
     *    k       1      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY)
     *    kk      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY, 2)
     *    kk      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY, 2)
     *    kk      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY, 2)
     *    kk      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY, 2)
     *    kk      2      bppfndVbluf(CironoFifld.CLOCK_HOUR_OF_DAY, 2)
     *    K       1      bppfndVbluf(CironoFifld.HOUR_OF_AMPM)
     *    K       1      bppfndVbluf(CironoFifld.HOUR_OF_AMPM)
     *    K       1      bppfndVbluf(CironoFifld.HOUR_OF_AMPM)
     *    K       1      bppfndVbluf(CironoFifld.HOUR_OF_AMPM)
     *    K       1      bppfndVbluf(CironoFifld.HOUR_OF_AMPM)
     *    KK      2      bppfndVbluf(CironoFifld.HOUR_OF_AMPM, 2)
     *    KK      2      bppfndVbluf(CironoFifld.HOUR_OF_AMPM, 2)
     *    KK      2      bppfndVbluf(CironoFifld.HOUR_OF_AMPM, 2)
     *    KK      2      bppfndVbluf(CironoFifld.HOUR_OF_AMPM, 2)
     *    KK      2      bppfndVbluf(CironoFifld.HOUR_OF_AMPM, 2)
     *    m       1      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR)
     *    m       1      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR)
     *    m       1      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR)
     *    m       1      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR)
     *    m       1      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR)
     *    mm      2      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR, 2)
     *    mm      2      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR, 2)
     *    mm      2      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR, 2)
     *    mm      2      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR, 2)
     *    mm      2      bppfndVbluf(CironoFifld.MINUTE_OF_HOUR, 2)
     *    s       1      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE)
     *    s       1      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE)
     *    s       1      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE)
     *    s       1      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE)
     *    s       1      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE)
     *    ss      2      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE, 2)
     *    ss      2      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE, 2)
     *    ss      2      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE, 2)
     *    ss      2      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE, 2)
     *    ss      2      bppfndVbluf(CironoFifld.SECOND_OF_MINUTE, 2)
     *
     *
     *
     *
     *
     *    S..S    1..n   bppfndFrbdtion(CironoFifld.NANO_OF_SECOND, n, n, fblsf)
     *    S..S    1..n   bppfndFrbdtion(CironoFifld.NANO_OF_SECOND, n, n, fblsf)
     *    S..S    1..n   bppfndFrbdtion(CironoFifld.NANO_OF_SECOND, n, n, fblsf)
     *    S..S    1..n   bppfndFrbdtion(CironoFifld.NANO_OF_SECOND, n, n, fblsf)
     *    S..S    1..n   bppfndFrbdtion(CironoFifld.NANO_OF_SECOND, n, n, fblsf)
     *    A       1      bppfndVbluf(CironoFifld.MILLI_OF_DAY)
     *    A       1      bppfndVbluf(CironoFifld.MILLI_OF_DAY)
     *    A       1      bppfndVbluf(CironoFifld.MILLI_OF_DAY)
     *    A       1      bppfndVbluf(CironoFifld.MILLI_OF_DAY)
     *    A       1      bppfndVbluf(CironoFifld.MILLI_OF_DAY)
     *    A..A    2..n   bppfndVbluf(CironoFifld.MILLI_OF_DAY, n)
     *    A..A    2..n   bppfndVbluf(CironoFifld.MILLI_OF_DAY, n)
     *    A..A    2..n   bppfndVbluf(CironoFifld.MILLI_OF_DAY, n)
     *    A..A    2..n   bppfndVbluf(CironoFifld.MILLI_OF_DAY, n)
     *    A..A    2..n   bppfndVbluf(CironoFifld.MILLI_OF_DAY, n)
     *    n       1      bppfndVbluf(CironoFifld.NANO_OF_SECOND)
     *    n       1      bppfndVbluf(CironoFifld.NANO_OF_SECOND)
     *    n       1      bppfndVbluf(CironoFifld.NANO_OF_SECOND)
     *    n       1      bppfndVbluf(CironoFifld.NANO_OF_SECOND)
     *    n       1      bppfndVbluf(CironoFifld.NANO_OF_SECOND)
     *    n..n    2..n   bppfndVbluf(CironoFifld.NANO_OF_SECOND, n)
     *    n..n    2..n   bppfndVbluf(CironoFifld.NANO_OF_SECOND, n)
     *    n..n    2..n   bppfndVbluf(CironoFifld.NANO_OF_SECOND, n)
     *    n..n    2..n   bppfndVbluf(CironoFifld.NANO_OF_SECOND, n)
     *    n..n    2..n   bppfndVbluf(CironoFifld.NANO_OF_SECOND, n)
     *    N       1      bppfndVbluf(CironoFifld.NANO_OF_DAY)
     *    N       1      bppfndVbluf(CironoFifld.NANO_OF_DAY)
     *    N       1      bppfndVbluf(CironoFifld.NANO_OF_DAY)
     *    N       1      bppfndVbluf(CironoFifld.NANO_OF_DAY)
     *    N       1      bppfndVbluf(CironoFifld.NANO_OF_DAY)
     *    N..N    2..n   bppfndVbluf(CironoFifld.NANO_OF_DAY, n)
     *    N..N    2..n   bppfndVbluf(CironoFifld.NANO_OF_DAY, n)
     *    N..N    2..n   bppfndVbluf(CironoFifld.NANO_OF_DAY, n)
     *    N..N    2..n   bppfndVbluf(CironoFifld.NANO_OF_DAY, n)
     *    N..N    2..n   bppfndVbluf(CironoFifld.NANO_OF_DAY, n)
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Zonf ID</b>: Pbttfrn lfttfrs to output {@dodf ZonfId}.
     * <b>Zonf ID</b>: Pbttfrn lfttfrs to output {@dodf ZonfId}.
     * <b>Zonf ID</b>: Pbttfrn lfttfrs to output {@dodf ZonfId}.
     * <b>Zonf ID</b>: Pbttfrn lfttfrs to output {@dodf ZonfId}.
     * <b>Zonf ID</b>: Pbttfrn lfttfrs to output {@dodf ZonfId}.
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *    VV      2      bppfndZonfId()
     *    VV      2      bppfndZonfId()
     *    VV      2      bppfndZonfId()
     *    VV      2      bppfndZonfId()
     *    VV      2      bppfndZonfId()
     *    z       1      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    z       1      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    z       1      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    z       1      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    z       1      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zz      2      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zz      2      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zz      2      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zz      2      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zz      2      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzz     3      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzz     3      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzz     3      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzz     3      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzz     3      bppfndZonfTfxt(TfxtStylf.SHORT)
     *    zzzz    4      bppfndZonfTfxt(TfxtStylf.FULL)
     *    zzzz    4      bppfndZonfTfxt(TfxtStylf.FULL)
     *    zzzz    4      bppfndZonfTfxt(TfxtStylf.FULL)
     *    zzzz    4      bppfndZonfTfxt(TfxtStylf.FULL)
     *    zzzz    4      bppfndZonfTfxt(TfxtStylf.FULL)
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Zonf offsft</b>: Pbttfrn lfttfrs to output {@dodf ZonfOffsft}.
     * <b>Zonf offsft</b>: Pbttfrn lfttfrs to output {@dodf ZonfOffsft}.
     * <b>Zonf offsft</b>: Pbttfrn lfttfrs to output {@dodf ZonfOffsft}.
     * <b>Zonf offsft</b>: Pbttfrn lfttfrs to output {@dodf ZonfOffsft}.
     * <b>Zonf offsft</b>: Pbttfrn lfttfrs to output {@dodf ZonfOffsft}.
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *    O       1      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.SHORT);
     *    O       1      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.SHORT);
     *    O       1      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.SHORT);
     *    O       1      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.SHORT);
     *    O       1      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.SHORT);
     *    OOOO    4      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.FULL);
     *    OOOO    4      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.FULL);
     *    OOOO    4      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.FULL);
     *    OOOO    4      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.FULL);
     *    OOOO    4      bppfndLodblizfdOffsftPrffixfd(TfxtStylf.FULL);
     *    X       1      bppfndOffsft("+HHmm","Z")
     *    X       1      bppfndOffsft("+HHmm","Z")
     *    X       1      bppfndOffsft("+HHmm","Z")
     *    X       1      bppfndOffsft("+HHmm","Z")
     *    X       1      bppfndOffsft("+HHmm","Z")
     *    XX      2      bppfndOffsft("+HHMM","Z")
     *    XX      2      bppfndOffsft("+HHMM","Z")
     *    XX      2      bppfndOffsft("+HHMM","Z")
     *    XX      2      bppfndOffsft("+HHMM","Z")
     *    XX      2      bppfndOffsft("+HHMM","Z")
     *    XXX     3      bppfndOffsft("+HH:MM","Z")
     *    XXX     3      bppfndOffsft("+HH:MM","Z")
     *    XXX     3      bppfndOffsft("+HH:MM","Z")
     *    XXX     3      bppfndOffsft("+HH:MM","Z")
     *    XXX     3      bppfndOffsft("+HH:MM","Z")
     *    XXXX    4      bppfndOffsft("+HHMMss","Z")
     *    XXXX    4      bppfndOffsft("+HHMMss","Z")
     *    XXXX    4      bppfndOffsft("+HHMMss","Z")
     *    XXXX    4      bppfndOffsft("+HHMMss","Z")
     *    XXXX    4      bppfndOffsft("+HHMMss","Z")
     *    XXXXX   5      bppfndOffsft("+HH:MM:ss","Z")
     *    XXXXX   5      bppfndOffsft("+HH:MM:ss","Z")
     *    XXXXX   5      bppfndOffsft("+HH:MM:ss","Z")
     *    XXXXX   5      bppfndOffsft("+HH:MM:ss","Z")
     *    XXXXX   5      bppfndOffsft("+HH:MM:ss","Z")
     *    x       1      bppfndOffsft("+HHmm","+00")
     *    x       1      bppfndOffsft("+HHmm","+00")
     *    x       1      bppfndOffsft("+HHmm","+00")
     *    x       1      bppfndOffsft("+HHmm","+00")
     *    x       1      bppfndOffsft("+HHmm","+00")
     *    xx      2      bppfndOffsft("+HHMM","+0000")
     *    xx      2      bppfndOffsft("+HHMM","+0000")
     *    xx      2      bppfndOffsft("+HHMM","+0000")
     *    xx      2      bppfndOffsft("+HHMM","+0000")
     *    xx      2      bppfndOffsft("+HHMM","+0000")
     *    xxx     3      bppfndOffsft("+HH:MM","+00:00")
     *    xxx     3      bppfndOffsft("+HH:MM","+00:00")
     *    xxx     3      bppfndOffsft("+HH:MM","+00:00")
     *    xxx     3      bppfndOffsft("+HH:MM","+00:00")
     *    xxx     3      bppfndOffsft("+HH:MM","+00:00")
     *    xxxx    4      bppfndOffsft("+HHMMss","+0000")
     *    xxxx    4      bppfndOffsft("+HHMMss","+0000")
     *    xxxx    4      bppfndOffsft("+HHMMss","+0000")
     *    xxxx    4      bppfndOffsft("+HHMMss","+0000")
     *    xxxx    4      bppfndOffsft("+HHMMss","+0000")
     *    xxxxx   5      bppfndOffsft("+HH:MM:ss","+00:00")
     *    xxxxx   5      bppfndOffsft("+HH:MM:ss","+00:00")
     *    xxxxx   5      bppfndOffsft("+HH:MM:ss","+00:00")
     *    xxxxx   5      bppfndOffsft("+HH:MM:ss","+00:00")
     *    xxxxx   5      bppfndOffsft("+HH:MM:ss","+00:00")
     *    Z       1      bppfndOffsft("+HHMM","+0000")
     *    Z       1      bppfndOffsft("+HHMM","+0000")
     *    Z       1      bppfndOffsft("+HHMM","+0000")
     *    Z       1      bppfndOffsft("+HHMM","+0000")
     *    Z       1      bppfndOffsft("+HHMM","+0000")
     *    ZZ      2      bppfndOffsft("+HHMM","+0000")
     *    ZZ      2      bppfndOffsft("+HHMM","+0000")
     *    ZZ      2      bppfndOffsft("+HHMM","+0000")
     *    ZZ      2      bppfndOffsft("+HHMM","+0000")
     *    ZZ      2      bppfndOffsft("+HHMM","+0000")
     *    ZZZ     3      bppfndOffsft("+HHMM","+0000")
     *    ZZZ     3      bppfndOffsft("+HHMM","+0000")
     *    ZZZ     3      bppfndOffsft("+HHMM","+0000")
     *    ZZZ     3      bppfndOffsft("+HHMM","+0000")
     *    ZZZ     3      bppfndOffsft("+HHMM","+0000")
     *    ZZZZ    4      bppfndLodblizfdOffsft(TfxtStylf.FULL);
     *    ZZZZ    4      bppfndLodblizfdOffsft(TfxtStylf.FULL);
     *    ZZZZ    4      bppfndLodblizfdOffsft(TfxtStylf.FULL);
     *    ZZZZ    4      bppfndLodblizfdOffsft(TfxtStylf.FULL);
     *    ZZZZ    4      bppfndLodblizfdOffsft(TfxtStylf.FULL);
     *    ZZZZZ   5      bppfndOffsft("+HH:MM:ss","Z")
     *    ZZZZZ   5      bppfndOffsft("+HH:MM:ss","Z")
     *    ZZZZZ   5      bppfndOffsft("+HH:MM:ss","Z")
     *    ZZZZZ   5      bppfndOffsft("+HH:MM:ss","Z")
     *    ZZZZZ   5      bppfndOffsft("+HH:MM:ss","Z")
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * <b>Modififrs</b>: Pbttfrn lfttfrs tibt modify tif rfst of tif pbttfrn:
     * <b>Modififrs</b>: Pbttfrn lfttfrs tibt modify tif rfst of tif pbttfrn:
     * <b>Modififrs</b>: Pbttfrn lfttfrs tibt modify tif rfst of tif pbttfrn:
     * <b>Modififrs</b>: Pbttfrn lfttfrs tibt modify tif rfst of tif pbttfrn:
     * <b>Modififrs</b>: Pbttfrn lfttfrs tibt modify tif rfst of tif pbttfrn:
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     * <prf>
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  Pbttfrn  Count  Equivblfnt buildfr mftiods
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *  -------  -----  --------------------------
     *    [       1      optionblStbrt()
     *    [       1      optionblStbrt()
     *    [       1      optionblStbrt()
     *    [       1      optionblStbrt()
     *    [       1      optionblStbrt()
     *    ]       1      optionblEnd()
     *    ]       1      optionblEnd()
     *    ]       1      optionblEnd()
     *    ]       1      optionblEnd()
     *    ]       1      optionblEnd()
     *    p..p    1..n   pbdNfxt(n)
     *    p..p    1..n   pbdNfxt(n)
     *    p..p    1..n   pbdNfxt(n)
     *    p..p    1..n   pbdNfxt(n)
     *    p..p    1..n   pbdNfxt(n)
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * </prf>
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Any sfqufndf of lfttfrs not spfdififd bbovf, unrfdognizfd lfttfr or
     * Any sfqufndf of lfttfrs not spfdififd bbovf, unrfdognizfd lfttfr or
     * Any sfqufndf of lfttfrs not spfdififd bbovf, unrfdognizfd lfttfr or
     * Any sfqufndf of lfttfrs not spfdififd bbovf, unrfdognizfd lfttfr or
     * Any sfqufndf of lfttfrs not spfdififd bbovf, unrfdognizfd lfttfr or
     * rfsfrvfd dibrbdtfr will tirow bn fxdfption.
     * rfsfrvfd dibrbdtfr will tirow bn fxdfption.
     * rfsfrvfd dibrbdtfr will tirow bn fxdfption.
     * rfsfrvfd dibrbdtfr will tirow bn fxdfption.
     * rfsfrvfd dibrbdtfr will tirow bn fxdfption.
     * Futurf vfrsions mby bdd to tif sft of pbttfrns.
     * Futurf vfrsions mby bdd to tif sft of pbttfrns.
     * Futurf vfrsions mby bdd to tif sft of pbttfrns.
     * Futurf vfrsions mby bdd to tif sft of pbttfrns.
     * Futurf vfrsions mby bdd to tif sft of pbttfrns.
     * It is rfdommfndfd to usf singlf quotfs bround bll dibrbdtfrs tibt you wbnt
     * It is rfdommfndfd to usf singlf quotfs bround bll dibrbdtfrs tibt you wbnt
     * It is rfdommfndfd to usf singlf quotfs bround bll dibrbdtfrs tibt you wbnt
     * It is rfdommfndfd to usf singlf quotfs bround bll dibrbdtfrs tibt you wbnt
     * It is rfdommfndfd to usf singlf quotfs bround bll dibrbdtfrs tibt you wbnt
     * to output dirfdtly to fnsurf tibt futurf dibngfs do not brfbk your bpplidbtion.
     * to output dirfdtly to fnsurf tibt futurf dibngfs do not brfbk your bpplidbtion.
     * to output dirfdtly to fnsurf tibt futurf dibngfs do not brfbk your bpplidbtion.
     * to output dirfdtly to fnsurf tibt futurf dibngfs do not brfbk your bpplidbtion.
     * to output dirfdtly to fnsurf tibt futurf dibngfs do not brfbk your bpplidbtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Notf tibt tif pbttfrn string is similbr, but not idfntidbl, to
     * Notf tibt tif pbttfrn string is similbr, but not idfntidbl, to
     * Notf tibt tif pbttfrn string is similbr, but not idfntidbl, to
     * Notf tibt tif pbttfrn string is similbr, but not idfntidbl, to
     * Notf tibt tif pbttfrn string is similbr, but not idfntidbl, to
     * {@link jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}.
     * {@link jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}.
     * {@link jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}.
     * {@link jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}.
     * {@link jbvb.tfxt.SimplfDbtfFormbt SimplfDbtfFormbt}.
     * Tif pbttfrn string is blso similbr, but not idfntidbl, to tibt dffinfd by tif
     * Tif pbttfrn string is blso similbr, but not idfntidbl, to tibt dffinfd by tif
     * Tif pbttfrn string is blso similbr, but not idfntidbl, to tibt dffinfd by tif
     * Tif pbttfrn string is blso similbr, but not idfntidbl, to tibt dffinfd by tif
     * Tif pbttfrn string is blso similbr, but not idfntidbl, to tibt dffinfd by tif
     * Unidodf Common Lodblf Dbtb Rfpository (CLDR/LDML).
     * Unidodf Common Lodblf Dbtb Rfpository (CLDR/LDML).
     * Unidodf Common Lodblf Dbtb Rfpository (CLDR/LDML).
     * Unidodf Common Lodblf Dbtb Rfpository (CLDR/LDML).
     * Unidodf Common Lodblf Dbtb Rfpository (CLDR/LDML).
     * Pbttfrn lfttfrs 'X' bnd 'u' brf blignfd witi Unidodf CLDR/LDML.
     * Pbttfrn lfttfrs 'X' bnd 'u' brf blignfd witi Unidodf CLDR/LDML.
     * Pbttfrn lfttfrs 'X' bnd 'u' brf blignfd witi Unidodf CLDR/LDML.
     * Pbttfrn lfttfrs 'X' bnd 'u' brf blignfd witi Unidodf CLDR/LDML.
     * Pbttfrn lfttfrs 'X' bnd 'u' brf blignfd witi Unidodf CLDR/LDML.
     * By dontrbst, {@dodf SimplfDbtfFormbt} usfs 'u' for tif numfrid dby of wffk.
     * By dontrbst, {@dodf SimplfDbtfFormbt} usfs 'u' for tif numfrid dby of wffk.
     * By dontrbst, {@dodf SimplfDbtfFormbt} usfs 'u' for tif numfrid dby of wffk.
     * By dontrbst, {@dodf SimplfDbtfFormbt} usfs 'u' for tif numfrid dby of wffk.
     * By dontrbst, {@dodf SimplfDbtfFormbt} usfs 'u' for tif numfrid dby of wffk.
     * Pbttfrn lfttfrs 'y' bnd 'Y' pbrsf yfbrs of two digits bnd morf tibn 4 digits difffrfntly.
     * Pbttfrn lfttfrs 'y' bnd 'Y' pbrsf yfbrs of two digits bnd morf tibn 4 digits difffrfntly.
     * Pbttfrn lfttfrs 'y' bnd 'Y' pbrsf yfbrs of two digits bnd morf tibn 4 digits difffrfntly.
     * Pbttfrn lfttfrs 'y' bnd 'Y' pbrsf yfbrs of two digits bnd morf tibn 4 digits difffrfntly.
     * Pbttfrn lfttfrs 'y' bnd 'Y' pbrsf yfbrs of two digits bnd morf tibn 4 digits difffrfntly.
     * Pbttfrn lfttfrs 'n', 'A', 'N', bnd 'p' brf bddfd.
     * Pbttfrn lfttfrs 'n', 'A', 'N', bnd 'p' brf bddfd.
     * Pbttfrn lfttfrs 'n', 'A', 'N', bnd 'p' brf bddfd.
     * Pbttfrn lfttfrs 'n', 'A', 'N', bnd 'p' brf bddfd.
     * Pbttfrn lfttfrs 'n', 'A', 'N', bnd 'p' brf bddfd.
     * Numbfr typfs will rfjfdt lbrgf numbfrs.
     * Numbfr typfs will rfjfdt lbrgf numbfrs.
     * Numbfr typfs will rfjfdt lbrgf numbfrs.
     * Numbfr typfs will rfjfdt lbrgf numbfrs.
     * Numbfr typfs will rfjfdt lbrgf numbfrs.
     *
     *
     *
     *
     *
     * @pbrbm pbttfrn  tif pbttfrn to bdd, not null
     * @pbrbm pbttfrn  tif pbttfrn to bdd, not null
     * @pbrbm pbttfrn  tif pbttfrn to bdd, not null
     * @pbrbm pbttfrn  tif pbttfrn to bdd, not null
     * @pbrbm pbttfrn  tif pbttfrn to bdd, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if tif pbttfrn is invblid
     * @tirows IllfgblArgumfntExdfption if tif pbttfrn is invblid
     * @tirows IllfgblArgumfntExdfption if tif pbttfrn is invblid
     * @tirows IllfgblArgumfntExdfption if tif pbttfrn is invblid
     * @tirows IllfgblArgumfntExdfption if tif pbttfrn is invblid
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr bppfndPbttfrn(String pbttfrn) {
    publid DbtfTimfFormbttfrBuildfr bppfndPbttfrn(String pbttfrn) {
    publid DbtfTimfFormbttfrBuildfr bppfndPbttfrn(String pbttfrn) {
    publid DbtfTimfFormbttfrBuildfr bppfndPbttfrn(String pbttfrn) {
    publid DbtfTimfFormbttfrBuildfr bppfndPbttfrn(String pbttfrn) {
        Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
        Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
        Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
        Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
        Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
        pbrsfPbttfrn(pbttfrn);
        pbrsfPbttfrn(pbttfrn);
        pbrsfPbttfrn(pbttfrn);
        pbrsfPbttfrn(pbttfrn);
        pbrsfPbttfrn(pbttfrn);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    privbtf void pbrsfPbttfrn(String pbttfrn) {
    privbtf void pbrsfPbttfrn(String pbttfrn) {
    privbtf void pbrsfPbttfrn(String pbttfrn) {
    privbtf void pbrsfPbttfrn(String pbttfrn) {
    privbtf void pbrsfPbttfrn(String pbttfrn) {
        for (int pos = 0; pos < pbttfrn.lfngti(); pos++) {
        for (int pos = 0; pos < pbttfrn.lfngti(); pos++) {
        for (int pos = 0; pos < pbttfrn.lfngti(); pos++) {
        for (int pos = 0; pos < pbttfrn.lfngti(); pos++) {
        for (int pos = 0; pos < pbttfrn.lfngti(); pos++) {
            dibr dur = pbttfrn.dibrAt(pos);
            dibr dur = pbttfrn.dibrAt(pos);
            dibr dur = pbttfrn.dibrAt(pos);
            dibr dur = pbttfrn.dibrAt(pos);
            dibr dur = pbttfrn.dibrAt(pos);
            if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
            if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
            if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
            if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
            if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                int dount = pos - stbrt;
                int dount = pos - stbrt;
                int dount = pos - stbrt;
                int dount = pos - stbrt;
                int dount = pos - stbrt;
                // pbdding
                // pbdding
                // pbdding
                // pbdding
                // pbdding
                if (dur == 'p') {
                if (dur == 'p') {
                if (dur == 'p') {
                if (dur == 'p') {
                if (dur == 'p') {
                    int pbd = 0;
                    int pbd = 0;
                    int pbd = 0;
                    int pbd = 0;
                    int pbd = 0;
                    if (pos < pbttfrn.lfngti()) {
                    if (pos < pbttfrn.lfngti()) {
                    if (pos < pbttfrn.lfngti()) {
                    if (pos < pbttfrn.lfngti()) {
                    if (pos < pbttfrn.lfngti()) {
                        dur = pbttfrn.dibrAt(pos);
                        dur = pbttfrn.dibrAt(pos);
                        dur = pbttfrn.dibrAt(pos);
                        dur = pbttfrn.dibrAt(pos);
                        dur = pbttfrn.dibrAt(pos);
                        if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                        if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                        if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                        if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                        if ((dur >= 'A' && dur <= 'Z') || (dur >= 'b' && dur <= 'z')) {
                            pbd = dount;
                            pbd = dount;
                            pbd = dount;
                            pbd = dount;
                            pbd = dount;
                            stbrt = pos++;
                            stbrt = pos++;
                            stbrt = pos++;
                            stbrt = pos++;
                            stbrt = pos++;
                            for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                            for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                            for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                            for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                            for ( ; pos < pbttfrn.lfngti() && pbttfrn.dibrAt(pos) == dur; pos++);  // siort loop
                            dount = pos - stbrt;
                            dount = pos - stbrt;
                            dount = pos - stbrt;
                            dount = pos - stbrt;
                            dount = pos - stbrt;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                    if (pbd == 0) {
                    if (pbd == 0) {
                    if (pbd == 0) {
                    if (pbd == 0) {
                    if (pbd == 0) {
                        tirow nfw IllfgblArgumfntExdfption(
                        tirow nfw IllfgblArgumfntExdfption(
                        tirow nfw IllfgblArgumfntExdfption(
                        tirow nfw IllfgblArgumfntExdfption(
                        tirow nfw IllfgblArgumfntExdfption(
                                "Pbd lfttfr 'p' must bf followfd by vblid pbd pbttfrn: " + pbttfrn);
                                "Pbd lfttfr 'p' must bf followfd by vblid pbd pbttfrn: " + pbttfrn);
                                "Pbd lfttfr 'p' must bf followfd by vblid pbd pbttfrn: " + pbttfrn);
                                "Pbd lfttfr 'p' must bf followfd by vblid pbd pbttfrn: " + pbttfrn);
                                "Pbd lfttfr 'p' must bf followfd by vblid pbd pbttfrn: " + pbttfrn);
                    }
                    }
                    }
                    }
                    }
                    pbdNfxt(pbd); // pbd bnd dontinuf pbrsing
                    pbdNfxt(pbd); // pbd bnd dontinuf pbrsing
                    pbdNfxt(pbd); // pbd bnd dontinuf pbrsing
                    pbdNfxt(pbd); // pbd bnd dontinuf pbrsing
                    pbdNfxt(pbd); // pbd bnd dontinuf pbrsing
                }
                }
                }
                }
                }
                // mbin rulfs
                // mbin rulfs
                // mbin rulfs
                // mbin rulfs
                // mbin rulfs
                TfmporblFifld fifld = FIELD_MAP.gft(dur);
                TfmporblFifld fifld = FIELD_MAP.gft(dur);
                TfmporblFifld fifld = FIELD_MAP.gft(dur);
                TfmporblFifld fifld = FIELD_MAP.gft(dur);
                TfmporblFifld fifld = FIELD_MAP.gft(dur);
                if (fifld != null) {
                if (fifld != null) {
                if (fifld != null) {
                if (fifld != null) {
                if (fifld != null) {
                    pbrsfFifld(dur, dount, fifld);
                    pbrsfFifld(dur, dount, fifld);
                    pbrsfFifld(dur, dount, fifld);
                    pbrsfFifld(dur, dount, fifld);
                    pbrsfFifld(dur, dount, fifld);
                } flsf if (dur == 'z') {
                } flsf if (dur == 'z') {
                } flsf if (dur == 'z') {
                } flsf if (dur == 'z') {
                } flsf if (dur == 'z') {
                    if (dount > 4) {
                    if (dount > 4) {
                    if (dount > 4) {
                    if (dount > 4) {
                    if (dount > 4) {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                        bppfndZonfTfxt(TfxtStylf.FULL);
                        bppfndZonfTfxt(TfxtStylf.FULL);
                        bppfndZonfTfxt(TfxtStylf.FULL);
                        bppfndZonfTfxt(TfxtStylf.FULL);
                        bppfndZonfTfxt(TfxtStylf.FULL);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        bppfndZonfTfxt(TfxtStylf.SHORT);
                        bppfndZonfTfxt(TfxtStylf.SHORT);
                        bppfndZonfTfxt(TfxtStylf.SHORT);
                        bppfndZonfTfxt(TfxtStylf.SHORT);
                        bppfndZonfTfxt(TfxtStylf.SHORT);
                    }
                    }
                    }
                    }
                    }
                } flsf if (dur == 'V') {
                } flsf if (dur == 'V') {
                } flsf if (dur == 'V') {
                } flsf if (dur == 'V') {
                } flsf if (dur == 'V') {
                    if (dount != 2) {
                    if (dount != 2) {
                    if (dount != 2) {
                    if (dount != 2) {
                    if (dount != 2) {
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 2: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 2: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 2: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 2: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 2: " + dur);
                    }
                    }
                    }
                    }
                    }
                    bppfndZonfId();
                    bppfndZonfId();
                    bppfndZonfId();
                    bppfndZonfId();
                    bppfndZonfId();
                } flsf if (dur == 'Z') {
                } flsf if (dur == 'Z') {
                } flsf if (dur == 'Z') {
                } flsf if (dur == 'Z') {
                } flsf if (dur == 'Z') {
                    if (dount < 4) {
                    if (dount < 4) {
                    if (dount < 4) {
                    if (dount < 4) {
                    if (dount < 4) {
                        bppfndOffsft("+HHMM", "+0000");
                        bppfndOffsft("+HHMM", "+0000");
                        bppfndOffsft("+HHMM", "+0000");
                        bppfndOffsft("+HHMM", "+0000");
                        bppfndOffsft("+HHMM", "+0000");
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                    } flsf if (dount == 5) {
                    } flsf if (dount == 5) {
                    } flsf if (dount == 5) {
                    } flsf if (dount == 5) {
                    } flsf if (dount == 5) {
                        bppfndOffsft("+HH:MM:ss","Z");
                        bppfndOffsft("+HH:MM:ss","Z");
                        bppfndOffsft("+HH:MM:ss","Z");
                        bppfndOffsft("+HH:MM:ss","Z");
                        bppfndOffsft("+HH:MM:ss","Z");
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    }
                    }
                    }
                    }
                    }
                } flsf if (dur == 'O') {
                } flsf if (dur == 'O') {
                } flsf if (dur == 'O') {
                } flsf if (dur == 'O') {
                } flsf if (dur == 'O') {
                    if (dount == 1) {
                    if (dount == 1) {
                    if (dount == 1) {
                    if (dount == 1) {
                    if (dount == 1) {
                        bppfndLodblizfdOffsft(TfxtStylf.SHORT);
                        bppfndLodblizfdOffsft(TfxtStylf.SHORT);
                        bppfndLodblizfdOffsft(TfxtStylf.SHORT);
                        bppfndLodblizfdOffsft(TfxtStylf.SHORT);
                        bppfndLodblizfdOffsft(TfxtStylf.SHORT);
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                    } flsf if (dount == 4) {
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                        bppfndLodblizfdOffsft(TfxtStylf.FULL);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 1 or 4: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 1 or 4: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 1 or 4: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 1 or 4: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Pbttfrn lfttfr dount must bf 1 or 4: " + dur);
                    }
                    }
                    }
                    }
                    }
                } flsf if (dur == 'X') {
                } flsf if (dur == 'X') {
                } flsf if (dur == 'X') {
                } flsf if (dur == 'X') {
                } flsf if (dur == 'X') {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    }
                    }
                    }
                    }
                    }
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], "Z");
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], "Z");
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], "Z");
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], "Z");
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], "Z");
                } flsf if (dur == 'x') {
                } flsf if (dur == 'x') {
                } flsf if (dur == 'x') {
                } flsf if (dur == 'x') {
                } flsf if (dur == 'x') {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                    if (dount > 5) {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    }
                    }
                    }
                    }
                    }
                    String zfro = (dount == 1 ? "+00" : (dount % 2 == 0 ? "+0000" : "+00:00"));
                    String zfro = (dount == 1 ? "+00" : (dount % 2 == 0 ? "+0000" : "+00:00"));
                    String zfro = (dount == 1 ? "+00" : (dount % 2 == 0 ? "+0000" : "+00:00"));
                    String zfro = (dount == 1 ? "+00" : (dount % 2 == 0 ? "+0000" : "+00:00"));
                    String zfro = (dount == 1 ? "+00" : (dount % 2 == 0 ? "+0000" : "+00:00"));
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], zfro);
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], zfro);
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], zfro);
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], zfro);
                    bppfndOffsft(OffsftIdPrintfrPbrsfr.PATTERNS[dount + (dount == 1 ? 0 : 1)], zfro);
                } flsf if (dur == 'W') {
                } flsf if (dur == 'W') {
                } flsf if (dur == 'W') {
                } flsf if (dur == 'W') {
                } flsf if (dur == 'W') {
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    if (dount > 1) {
                    if (dount > 1) {
                    if (dount > 1) {
                    if (dount > 1) {
                    if (dount > 1) {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    }
                    }
                    }
                    }
                    }
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                } flsf if (dur == 'w') {
                } flsf if (dur == 'w') {
                } flsf if (dur == 'w') {
                } flsf if (dur == 'w') {
                } flsf if (dur == 'w') {
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    if (dount > 2) {
                    if (dount > 2) {
                    if (dount > 2) {
                    if (dount > 2) {
                    if (dount > 2) {
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    }
                    }
                    }
                    }
                    }
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                } flsf if (dur == 'Y') {
                } flsf if (dur == 'Y') {
                } flsf if (dur == 'Y') {
                } flsf if (dur == 'Y') {
                } flsf if (dur == 'Y') {
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    // Fiflds dffinfd by Lodblf
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                    bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    tirow nfw IllfgblArgumfntExdfption("Unknown pbttfrn lfttfr: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Unknown pbttfrn lfttfr: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Unknown pbttfrn lfttfr: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Unknown pbttfrn lfttfr: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Unknown pbttfrn lfttfr: " + dur);
                }
                }
                }
                }
                }
                pos--;
                pos--;
                pos--;
                pos--;
                pos--;





            } flsf if (dur == '\'') {
            } flsf if (dur == '\'') {
            } flsf if (dur == '\'') {
            } flsf if (dur == '\'') {
            } flsf if (dur == '\'') {
                // pbrsf litfrbls
                // pbrsf litfrbls
                // pbrsf litfrbls
                // pbrsf litfrbls
                // pbrsf litfrbls
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                int stbrt = pos++;
                for ( ; pos < pbttfrn.lfngti(); pos++) {
                for ( ; pos < pbttfrn.lfngti(); pos++) {
                for ( ; pos < pbttfrn.lfngti(); pos++) {
                for ( ; pos < pbttfrn.lfngti(); pos++) {
                for ( ; pos < pbttfrn.lfngti(); pos++) {
                    if (pbttfrn.dibrAt(pos) == '\'') {
                    if (pbttfrn.dibrAt(pos) == '\'') {
                    if (pbttfrn.dibrAt(pos) == '\'') {
                    if (pbttfrn.dibrAt(pos) == '\'') {
                    if (pbttfrn.dibrAt(pos) == '\'') {
                        if (pos + 1 < pbttfrn.lfngti() && pbttfrn.dibrAt(pos + 1) == '\'') {
                        if (pos + 1 < pbttfrn.lfngti() && pbttfrn.dibrAt(pos + 1) == '\'') {
                        if (pos + 1 < pbttfrn.lfngti() && pbttfrn.dibrAt(pos + 1) == '\'') {
                        if (pos + 1 < pbttfrn.lfngti() && pbttfrn.dibrAt(pos + 1) == '\'') {
                        if (pos + 1 < pbttfrn.lfngti() && pbttfrn.dibrAt(pos + 1) == '\'') {
                            pos++;
                            pos++;
                            pos++;
                            pos++;
                            pos++;
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            brfbk;  // fnd of litfrbl
                            brfbk;  // fnd of litfrbl
                            brfbk;  // fnd of litfrbl
                            brfbk;  // fnd of litfrbl
                            brfbk;  // fnd of litfrbl
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (pos >= pbttfrn.lfngti()) {
                if (pos >= pbttfrn.lfngti()) {
                if (pos >= pbttfrn.lfngti()) {
                if (pos >= pbttfrn.lfngti()) {
                if (pos >= pbttfrn.lfngti()) {
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn fnds witi bn indomplftf string litfrbl: " + pbttfrn);
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn fnds witi bn indomplftf string litfrbl: " + pbttfrn);
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn fnds witi bn indomplftf string litfrbl: " + pbttfrn);
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn fnds witi bn indomplftf string litfrbl: " + pbttfrn);
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn fnds witi bn indomplftf string litfrbl: " + pbttfrn);
                }
                }
                }
                }
                }
                String str = pbttfrn.substring(stbrt + 1, pos);
                String str = pbttfrn.substring(stbrt + 1, pos);
                String str = pbttfrn.substring(stbrt + 1, pos);
                String str = pbttfrn.substring(stbrt + 1, pos);
                String str = pbttfrn.substring(stbrt + 1, pos);
                if (str.lfngti() == 0) {
                if (str.lfngti() == 0) {
                if (str.lfngti() == 0) {
                if (str.lfngti() == 0) {
                if (str.lfngti() == 0) {
                    bppfndLitfrbl('\'');
                    bppfndLitfrbl('\'');
                    bppfndLitfrbl('\'');
                    bppfndLitfrbl('\'');
                    bppfndLitfrbl('\'');
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    bppfndLitfrbl(str.rfplbdf("''", "'"));
                    bppfndLitfrbl(str.rfplbdf("''", "'"));
                    bppfndLitfrbl(str.rfplbdf("''", "'"));
                    bppfndLitfrbl(str.rfplbdf("''", "'"));
                    bppfndLitfrbl(str.rfplbdf("''", "'"));
                }
                }
                }
                }
                }





            } flsf if (dur == '[') {
            } flsf if (dur == '[') {
            } flsf if (dur == '[') {
            } flsf if (dur == '[') {
            } flsf if (dur == '[') {
                optionblStbrt();
                optionblStbrt();
                optionblStbrt();
                optionblStbrt();
                optionblStbrt();





            } flsf if (dur == ']') {
            } flsf if (dur == ']') {
            } flsf if (dur == ']') {
            } flsf if (dur == ']') {
            } flsf if (dur == ']') {
                if (bdtivf.pbrfnt == null) {
                if (bdtivf.pbrfnt == null) {
                if (bdtivf.pbrfnt == null) {
                if (bdtivf.pbrfnt == null) {
                if (bdtivf.pbrfnt == null) {
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn invblid bs it dontbins ] witiout prfvious [");
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn invblid bs it dontbins ] witiout prfvious [");
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn invblid bs it dontbins ] witiout prfvious [");
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn invblid bs it dontbins ] witiout prfvious [");
                    tirow nfw IllfgblArgumfntExdfption("Pbttfrn invblid bs it dontbins ] witiout prfvious [");
                }
                }
                }
                }
                }
                optionblEnd();
                optionblEnd();
                optionblEnd();
                optionblEnd();
                optionblEnd();





            } flsf if (dur == '{' || dur == '}' || dur == '#') {
            } flsf if (dur == '{' || dur == '}' || dur == '#') {
            } flsf if (dur == '{' || dur == '}' || dur == '#') {
            } flsf if (dur == '{' || dur == '}' || dur == '#') {
            } flsf if (dur == '{' || dur == '}' || dur == '#') {
                tirow nfw IllfgblArgumfntExdfption("Pbttfrn indludfs rfsfrvfd dibrbdtfr: '" + dur + "'");
                tirow nfw IllfgblArgumfntExdfption("Pbttfrn indludfs rfsfrvfd dibrbdtfr: '" + dur + "'");
                tirow nfw IllfgblArgumfntExdfption("Pbttfrn indludfs rfsfrvfd dibrbdtfr: '" + dur + "'");
                tirow nfw IllfgblArgumfntExdfption("Pbttfrn indludfs rfsfrvfd dibrbdtfr: '" + dur + "'");
                tirow nfw IllfgblArgumfntExdfption("Pbttfrn indludfs rfsfrvfd dibrbdtfr: '" + dur + "'");
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                bppfndLitfrbl(dur);
                bppfndLitfrbl(dur);
                bppfndLitfrbl(dur);
                bppfndLitfrbl(dur);
                bppfndLitfrbl(dur);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    @SupprfssWbrnings("fblltirougi")
    @SupprfssWbrnings("fblltirougi")
    @SupprfssWbrnings("fblltirougi")
    @SupprfssWbrnings("fblltirougi")
    @SupprfssWbrnings("fblltirougi")
    privbtf void pbrsfFifld(dibr dur, int dount, TfmporblFifld fifld) {
    privbtf void pbrsfFifld(dibr dur, int dount, TfmporblFifld fifld) {
    privbtf void pbrsfFifld(dibr dur, int dount, TfmporblFifld fifld) {
    privbtf void pbrsfFifld(dibr dur, int dount, TfmporblFifld fifld) {
    privbtf void pbrsfFifld(dibr dur, int dount, TfmporblFifld fifld) {
        boolfbn stbndblonf = fblsf;
        boolfbn stbndblonf = fblsf;
        boolfbn stbndblonf = fblsf;
        boolfbn stbndblonf = fblsf;
        boolfbn stbndblonf = fblsf;
        switdi (dur) {
        switdi (dur) {
        switdi (dur) {
        switdi (dur) {
        switdi (dur) {
            dbsf 'u':
            dbsf 'u':
            dbsf 'u':
            dbsf 'u':
            dbsf 'u':
            dbsf 'y':
            dbsf 'y':
            dbsf 'y':
            dbsf 'y':
            dbsf 'y':
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                    bppfndVblufRfdudfd(fifld, 2, 2, RfdudfdPrintfrPbrsfr.BASE_DATE);
                    bppfndVblufRfdudfd(fifld, 2, 2, RfdudfdPrintfrPbrsfr.BASE_DATE);
                    bppfndVblufRfdudfd(fifld, 2, 2, RfdudfdPrintfrPbrsfr.BASE_DATE);
                    bppfndVblufRfdudfd(fifld, 2, 2, RfdudfdPrintfrPbrsfr.BASE_DATE);
                    bppfndVblufRfdudfd(fifld, 2, 2, RfdudfdPrintfrPbrsfr.BASE_DATE);
                } flsf if (dount < 4) {
                } flsf if (dount < 4) {
                } flsf if (dount < 4) {
                } flsf if (dount < 4) {
                } flsf if (dount < 4) {
                    bppfndVbluf(fifld, dount, 19, SignStylf.NORMAL);
                    bppfndVbluf(fifld, dount, 19, SignStylf.NORMAL);
                    bppfndVbluf(fifld, dount, 19, SignStylf.NORMAL);
                    bppfndVbluf(fifld, dount, 19, SignStylf.NORMAL);
                    bppfndVbluf(fifld, dount, 19, SignStylf.NORMAL);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    bppfndVbluf(fifld, dount, 19, SignStylf.EXCEEDS_PAD);
                    bppfndVbluf(fifld, dount, 19, SignStylf.EXCEEDS_PAD);
                    bppfndVbluf(fifld, dount, 19, SignStylf.EXCEEDS_PAD);
                    bppfndVbluf(fifld, dount, 19, SignStylf.EXCEEDS_PAD);
                    bppfndVbluf(fifld, dount, 19, SignStylf.EXCEEDS_PAD);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                if (dount == 2) {
                    tirow nfw IllfgblArgumfntExdfption("Invblid pbttfrn \"dd\"");
                    tirow nfw IllfgblArgumfntExdfption("Invblid pbttfrn \"dd\"");
                    tirow nfw IllfgblArgumfntExdfption("Invblid pbttfrn \"dd\"");
                    tirow nfw IllfgblArgumfntExdfption("Invblid pbttfrn \"dd\"");
                    tirow nfw IllfgblArgumfntExdfption("Invblid pbttfrn \"dd\"");
                }
                }
                }
                }
                }
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
            dbsf 'L':
            dbsf 'L':
            dbsf 'L':
            dbsf 'L':
            dbsf 'L':
            dbsf 'q':
            dbsf 'q':
            dbsf 'q':
            dbsf 'q':
            dbsf 'q':
                stbndblonf = truf;
                stbndblonf = truf;
                stbndblonf = truf;
                stbndblonf = truf;
                stbndblonf = truf;
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
                /*fblltirougi*/
            dbsf 'M':
            dbsf 'M':
            dbsf 'M':
            dbsf 'M':
            dbsf 'M':
            dbsf 'Q':
            dbsf 'Q':
            dbsf 'Q':
            dbsf 'Q':
            dbsf 'Q':
            dbsf 'E':
            dbsf 'E':
            dbsf 'E':
            dbsf 'E':
            dbsf 'E':
            dbsf 'f':
            dbsf 'f':
            dbsf 'f':
            dbsf 'f':
            dbsf 'f':
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                        if (dur == 'd' || dur == 'f') {
                        if (dur == 'd' || dur == 'f') {
                        if (dur == 'd' || dur == 'f') {
                        if (dur == 'd' || dur == 'f') {
                        if (dur == 'd' || dur == 'f') {
                            bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                            bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                            bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                            bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                            bppfndIntfrnbl(nfw WffkBbsfdFifldPrintfrPbrsfr(dur, dount));
                        } flsf if (dur == 'E') {
                        } flsf if (dur == 'E') {
                        } flsf if (dur == 'E') {
                        } flsf if (dur == 'E') {
                        } flsf if (dur == 'E') {
                            bppfndTfxt(fifld, TfxtStylf.SHORT);
                            bppfndTfxt(fifld, TfxtStylf.SHORT);
                            bppfndTfxt(fifld, TfxtStylf.SHORT);
                            bppfndTfxt(fifld, TfxtStylf.SHORT);
                            bppfndTfxt(fifld, TfxtStylf.SHORT);
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            if (dount == 1) {
                            if (dount == 1) {
                            if (dount == 1) {
                            if (dount == 1) {
                            if (dount == 1) {
                                bppfndVbluf(fifld);
                                bppfndVbluf(fifld);
                                bppfndVbluf(fifld);
                                bppfndVbluf(fifld);
                                bppfndVbluf(fifld);
                            } flsf {
                            } flsf {
                            } flsf {
                            } flsf {
                            } flsf {
                                bppfndVbluf(fifld, 2);
                                bppfndVbluf(fifld, 2);
                                bppfndVbluf(fifld, 2);
                                bppfndVbluf(fifld, 2);
                                bppfndVbluf(fifld, 2);
                            }
                            }
                            }
                            }
                            }
                        }
                        }
                        }
                        }
                        }
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.SHORT_STANDALONE : TfxtStylf.SHORT);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.SHORT_STANDALONE : TfxtStylf.SHORT);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.SHORT_STANDALONE : TfxtStylf.SHORT);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.SHORT_STANDALONE : TfxtStylf.SHORT);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.SHORT_STANDALONE : TfxtStylf.SHORT);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.FULL_STANDALONE : TfxtStylf.FULL);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.FULL_STANDALONE : TfxtStylf.FULL);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.FULL_STANDALONE : TfxtStylf.FULL);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.FULL_STANDALONE : TfxtStylf.FULL);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.FULL_STANDALONE : TfxtStylf.FULL);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.NARROW_STANDALONE : TfxtStylf.NARROW);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.NARROW_STANDALONE : TfxtStylf.NARROW);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.NARROW_STANDALONE : TfxtStylf.NARROW);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.NARROW_STANDALONE : TfxtStylf.NARROW);
                        bppfndTfxt(fifld, stbndblonf ? TfxtStylf.NARROW_STANDALONE : TfxtStylf.NARROW);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'b':
            dbsf 'b':
            dbsf 'b':
            dbsf 'b':
            dbsf 'b':
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    bppfndTfxt(fifld, TfxtStylf.SHORT);
                    bppfndTfxt(fifld, TfxtStylf.SHORT);
                    bppfndTfxt(fifld, TfxtStylf.SHORT);
                    bppfndTfxt(fifld, TfxtStylf.SHORT);
                    bppfndTfxt(fifld, TfxtStylf.SHORT);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'G':
            dbsf 'G':
            dbsf 'G':
            dbsf 'G':
            dbsf 'G':
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                switdi (dount) {
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 1:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                    dbsf 2:
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                    dbsf 3:
                        bppfndTfxt(fifld, TfxtStylf.SHORT);
                        bppfndTfxt(fifld, TfxtStylf.SHORT);
                        bppfndTfxt(fifld, TfxtStylf.SHORT);
                        bppfndTfxt(fifld, TfxtStylf.SHORT);
                        bppfndTfxt(fifld, TfxtStylf.SHORT);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                    dbsf 4:
                        bppfndTfxt(fifld, TfxtStylf.FULL);
                        bppfndTfxt(fifld, TfxtStylf.FULL);
                        bppfndTfxt(fifld, TfxtStylf.FULL);
                        bppfndTfxt(fifld, TfxtStylf.FULL);
                        bppfndTfxt(fifld, TfxtStylf.FULL);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                    dbsf 5:
                        bppfndTfxt(fifld, TfxtStylf.NARROW);
                        bppfndTfxt(fifld, TfxtStylf.NARROW);
                        bppfndTfxt(fifld, TfxtStylf.NARROW);
                        bppfndTfxt(fifld, TfxtStylf.NARROW);
                        bppfndTfxt(fifld, TfxtStylf.NARROW);
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                        tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'S':
            dbsf 'S':
            dbsf 'S':
            dbsf 'S':
            dbsf 'S':
                bppfndFrbdtion(NANO_OF_SECOND, dount, dount, fblsf);
                bppfndFrbdtion(NANO_OF_SECOND, dount, dount, fblsf);
                bppfndFrbdtion(NANO_OF_SECOND, dount, dount, fblsf);
                bppfndFrbdtion(NANO_OF_SECOND, dount, dount, fblsf);
                bppfndFrbdtion(NANO_OF_SECOND, dount, dount, fblsf);
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'F':
            dbsf 'F':
            dbsf 'F':
            dbsf 'F':
            dbsf 'F':
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
            dbsf 'd':
            dbsf 'i':
            dbsf 'i':
            dbsf 'i':
            dbsf 'i':
            dbsf 'i':
            dbsf 'H':
            dbsf 'H':
            dbsf 'H':
            dbsf 'H':
            dbsf 'H':
            dbsf 'k':
            dbsf 'k':
            dbsf 'k':
            dbsf 'k':
            dbsf 'k':
            dbsf 'K':
            dbsf 'K':
            dbsf 'K':
            dbsf 'K':
            dbsf 'K':
            dbsf 'm':
            dbsf 'm':
            dbsf 'm':
            dbsf 'm':
            dbsf 'm':
            dbsf 's':
            dbsf 's':
            dbsf 's':
            dbsf 's':
            dbsf 's':
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dbsf 'D':
            dbsf 'D':
            dbsf 'D':
            dbsf 'D':
            dbsf 'D':
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                } flsf if (dount <= 3) {
                } flsf if (dount <= 3) {
                } flsf if (dount <= 3) {
                } flsf if (dount <= 3) {
                } flsf if (dount <= 3) {
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                    tirow nfw IllfgblArgumfntExdfption("Too mbny pbttfrn lfttfrs: " + dur);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
            dffbult:
            dffbult:
            dffbult:
            dffbult:
            dffbult:
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                    bppfndVbluf(fifld);
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                    bppfndVbluf(fifld, dount);
                }
                }
                }
                }
                }
                brfbk;
                brfbk;
                brfbk;
                brfbk;
                brfbk;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    /** Mbp of lfttfrs to fiflds. */
    /** Mbp of lfttfrs to fiflds. */
    /** Mbp of lfttfrs to fiflds. */
    /** Mbp of lfttfrs to fiflds. */
    /** Mbp of lfttfrs to fiflds. */
    privbtf stbtid finbl Mbp<Cibrbdtfr, TfmporblFifld> FIELD_MAP = nfw HbsiMbp<>();
    privbtf stbtid finbl Mbp<Cibrbdtfr, TfmporblFifld> FIELD_MAP = nfw HbsiMbp<>();
    privbtf stbtid finbl Mbp<Cibrbdtfr, TfmporblFifld> FIELD_MAP = nfw HbsiMbp<>();
    privbtf stbtid finbl Mbp<Cibrbdtfr, TfmporblFifld> FIELD_MAP = nfw HbsiMbp<>();
    privbtf stbtid finbl Mbp<Cibrbdtfr, TfmporblFifld> FIELD_MAP = nfw HbsiMbp<>();
    stbtid {
    stbtid {
    stbtid {
    stbtid {
    stbtid {
        // SDF = SimplfDbtfFormbt
        // SDF = SimplfDbtfFormbt
        // SDF = SimplfDbtfFormbt
        // SDF = SimplfDbtfFormbt
        // SDF = SimplfDbtfFormbt
        FIELD_MAP.put('G', CironoFifld.ERA);                       // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('G', CironoFifld.ERA);                       // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('G', CironoFifld.ERA);                       // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('G', CironoFifld.ERA);                       // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('G', CironoFifld.ERA);                       // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('y', CironoFifld.YEAR_OF_ERA);               // SDF, LDML
        FIELD_MAP.put('y', CironoFifld.YEAR_OF_ERA);               // SDF, LDML
        FIELD_MAP.put('y', CironoFifld.YEAR_OF_ERA);               // SDF, LDML
        FIELD_MAP.put('y', CironoFifld.YEAR_OF_ERA);               // SDF, LDML
        FIELD_MAP.put('y', CironoFifld.YEAR_OF_ERA);               // SDF, LDML
        FIELD_MAP.put('u', CironoFifld.YEAR);                      // LDML (difffrfnt in SDF)
        FIELD_MAP.put('u', CironoFifld.YEAR);                      // LDML (difffrfnt in SDF)
        FIELD_MAP.put('u', CironoFifld.YEAR);                      // LDML (difffrfnt in SDF)
        FIELD_MAP.put('u', CironoFifld.YEAR);                      // LDML (difffrfnt in SDF)
        FIELD_MAP.put('u', CironoFifld.YEAR);                      // LDML (difffrfnt in SDF)
        FIELD_MAP.put('Q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (rfmovfd qubrtfr from 310)
        FIELD_MAP.put('Q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (rfmovfd qubrtfr from 310)
        FIELD_MAP.put('Q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (rfmovfd qubrtfr from 310)
        FIELD_MAP.put('Q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (rfmovfd qubrtfr from 310)
        FIELD_MAP.put('Q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (rfmovfd qubrtfr from 310)
        FIELD_MAP.put('q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (stbnd-blonf)
        FIELD_MAP.put('q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (stbnd-blonf)
        FIELD_MAP.put('q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (stbnd-blonf)
        FIELD_MAP.put('q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (stbnd-blonf)
        FIELD_MAP.put('q', IsoFiflds.QUARTER_OF_YEAR);             // LDML (stbnd-blonf)
        FIELD_MAP.put('M', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML
        FIELD_MAP.put('M', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML
        FIELD_MAP.put('M', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML
        FIELD_MAP.put('M', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML
        FIELD_MAP.put('M', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML
        FIELD_MAP.put('L', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML (stbnd-blonf)
        FIELD_MAP.put('L', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML (stbnd-blonf)
        FIELD_MAP.put('L', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML (stbnd-blonf)
        FIELD_MAP.put('L', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML (stbnd-blonf)
        FIELD_MAP.put('L', CironoFifld.MONTH_OF_YEAR);             // SDF, LDML (stbnd-blonf)
        FIELD_MAP.put('D', CironoFifld.DAY_OF_YEAR);               // SDF, LDML
        FIELD_MAP.put('D', CironoFifld.DAY_OF_YEAR);               // SDF, LDML
        FIELD_MAP.put('D', CironoFifld.DAY_OF_YEAR);               // SDF, LDML
        FIELD_MAP.put('D', CironoFifld.DAY_OF_YEAR);               // SDF, LDML
        FIELD_MAP.put('D', CironoFifld.DAY_OF_YEAR);               // SDF, LDML
        FIELD_MAP.put('d', CironoFifld.DAY_OF_MONTH);              // SDF, LDML
        FIELD_MAP.put('d', CironoFifld.DAY_OF_MONTH);              // SDF, LDML
        FIELD_MAP.put('d', CironoFifld.DAY_OF_MONTH);              // SDF, LDML
        FIELD_MAP.put('d', CironoFifld.DAY_OF_MONTH);              // SDF, LDML
        FIELD_MAP.put('d', CironoFifld.DAY_OF_MONTH);              // SDF, LDML
        FIELD_MAP.put('F', CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH);  // SDF, LDML
        FIELD_MAP.put('F', CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH);  // SDF, LDML
        FIELD_MAP.put('F', CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH);  // SDF, LDML
        FIELD_MAP.put('F', CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH);  // SDF, LDML
        FIELD_MAP.put('F', CironoFifld.ALIGNED_DAY_OF_WEEK_IN_MONTH);  // SDF, LDML
        FIELD_MAP.put('E', CironoFifld.DAY_OF_WEEK);               // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('E', CironoFifld.DAY_OF_WEEK);               // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('E', CironoFifld.DAY_OF_WEEK);               // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('E', CironoFifld.DAY_OF_WEEK);               // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('E', CironoFifld.DAY_OF_WEEK);               // SDF, LDML (difffrfnt to boti for 1/2 dibrs)
        FIELD_MAP.put('d', CironoFifld.DAY_OF_WEEK);               // LDML (stbnd-blonf)
        FIELD_MAP.put('d', CironoFifld.DAY_OF_WEEK);               // LDML (stbnd-blonf)
        FIELD_MAP.put('d', CironoFifld.DAY_OF_WEEK);               // LDML (stbnd-blonf)
        FIELD_MAP.put('d', CironoFifld.DAY_OF_WEEK);               // LDML (stbnd-blonf)
        FIELD_MAP.put('d', CironoFifld.DAY_OF_WEEK);               // LDML (stbnd-blonf)
        FIELD_MAP.put('f', CironoFifld.DAY_OF_WEEK);               // LDML (nffds lodblizfd wffk numbfr)
        FIELD_MAP.put('f', CironoFifld.DAY_OF_WEEK);               // LDML (nffds lodblizfd wffk numbfr)
        FIELD_MAP.put('f', CironoFifld.DAY_OF_WEEK);               // LDML (nffds lodblizfd wffk numbfr)
        FIELD_MAP.put('f', CironoFifld.DAY_OF_WEEK);               // LDML (nffds lodblizfd wffk numbfr)
        FIELD_MAP.put('f', CironoFifld.DAY_OF_WEEK);               // LDML (nffds lodblizfd wffk numbfr)
        FIELD_MAP.put('b', CironoFifld.AMPM_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('b', CironoFifld.AMPM_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('b', CironoFifld.AMPM_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('b', CironoFifld.AMPM_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('b', CironoFifld.AMPM_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('H', CironoFifld.HOUR_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('H', CironoFifld.HOUR_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('H', CironoFifld.HOUR_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('H', CironoFifld.HOUR_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('H', CironoFifld.HOUR_OF_DAY);               // SDF, LDML
        FIELD_MAP.put('k', CironoFifld.CLOCK_HOUR_OF_DAY);         // SDF, LDML
        FIELD_MAP.put('k', CironoFifld.CLOCK_HOUR_OF_DAY);         // SDF, LDML
        FIELD_MAP.put('k', CironoFifld.CLOCK_HOUR_OF_DAY);         // SDF, LDML
        FIELD_MAP.put('k', CironoFifld.CLOCK_HOUR_OF_DAY);         // SDF, LDML
        FIELD_MAP.put('k', CironoFifld.CLOCK_HOUR_OF_DAY);         // SDF, LDML
        FIELD_MAP.put('K', CironoFifld.HOUR_OF_AMPM);              // SDF, LDML
        FIELD_MAP.put('K', CironoFifld.HOUR_OF_AMPM);              // SDF, LDML
        FIELD_MAP.put('K', CironoFifld.HOUR_OF_AMPM);              // SDF, LDML
        FIELD_MAP.put('K', CironoFifld.HOUR_OF_AMPM);              // SDF, LDML
        FIELD_MAP.put('K', CironoFifld.HOUR_OF_AMPM);              // SDF, LDML
        FIELD_MAP.put('i', CironoFifld.CLOCK_HOUR_OF_AMPM);        // SDF, LDML
        FIELD_MAP.put('i', CironoFifld.CLOCK_HOUR_OF_AMPM);        // SDF, LDML
        FIELD_MAP.put('i', CironoFifld.CLOCK_HOUR_OF_AMPM);        // SDF, LDML
        FIELD_MAP.put('i', CironoFifld.CLOCK_HOUR_OF_AMPM);        // SDF, LDML
        FIELD_MAP.put('i', CironoFifld.CLOCK_HOUR_OF_AMPM);        // SDF, LDML
        FIELD_MAP.put('m', CironoFifld.MINUTE_OF_HOUR);            // SDF, LDML
        FIELD_MAP.put('m', CironoFifld.MINUTE_OF_HOUR);            // SDF, LDML
        FIELD_MAP.put('m', CironoFifld.MINUTE_OF_HOUR);            // SDF, LDML
        FIELD_MAP.put('m', CironoFifld.MINUTE_OF_HOUR);            // SDF, LDML
        FIELD_MAP.put('m', CironoFifld.MINUTE_OF_HOUR);            // SDF, LDML
        FIELD_MAP.put('s', CironoFifld.SECOND_OF_MINUTE);          // SDF, LDML
        FIELD_MAP.put('s', CironoFifld.SECOND_OF_MINUTE);          // SDF, LDML
        FIELD_MAP.put('s', CironoFifld.SECOND_OF_MINUTE);          // SDF, LDML
        FIELD_MAP.put('s', CironoFifld.SECOND_OF_MINUTE);          // SDF, LDML
        FIELD_MAP.put('s', CironoFifld.SECOND_OF_MINUTE);          // SDF, LDML
        FIELD_MAP.put('S', CironoFifld.NANO_OF_SECOND);            // LDML (SDF usfs milli-of-sfdond numbfr)
        FIELD_MAP.put('S', CironoFifld.NANO_OF_SECOND);            // LDML (SDF usfs milli-of-sfdond numbfr)
        FIELD_MAP.put('S', CironoFifld.NANO_OF_SECOND);            // LDML (SDF usfs milli-of-sfdond numbfr)
        FIELD_MAP.put('S', CironoFifld.NANO_OF_SECOND);            // LDML (SDF usfs milli-of-sfdond numbfr)
        FIELD_MAP.put('S', CironoFifld.NANO_OF_SECOND);            // LDML (SDF usfs milli-of-sfdond numbfr)
        FIELD_MAP.put('A', CironoFifld.MILLI_OF_DAY);              // LDML
        FIELD_MAP.put('A', CironoFifld.MILLI_OF_DAY);              // LDML
        FIELD_MAP.put('A', CironoFifld.MILLI_OF_DAY);              // LDML
        FIELD_MAP.put('A', CironoFifld.MILLI_OF_DAY);              // LDML
        FIELD_MAP.put('A', CironoFifld.MILLI_OF_DAY);              // LDML
        FIELD_MAP.put('n', CironoFifld.NANO_OF_SECOND);            // 310 (proposfd for LDML)
        FIELD_MAP.put('n', CironoFifld.NANO_OF_SECOND);            // 310 (proposfd for LDML)
        FIELD_MAP.put('n', CironoFifld.NANO_OF_SECOND);            // 310 (proposfd for LDML)
        FIELD_MAP.put('n', CironoFifld.NANO_OF_SECOND);            // 310 (proposfd for LDML)
        FIELD_MAP.put('n', CironoFifld.NANO_OF_SECOND);            // 310 (proposfd for LDML)
        FIELD_MAP.put('N', CironoFifld.NANO_OF_DAY);               // 310 (proposfd for LDML)
        FIELD_MAP.put('N', CironoFifld.NANO_OF_DAY);               // 310 (proposfd for LDML)
        FIELD_MAP.put('N', CironoFifld.NANO_OF_DAY);               // 310 (proposfd for LDML)
        FIELD_MAP.put('N', CironoFifld.NANO_OF_DAY);               // 310 (proposfd for LDML)
        FIELD_MAP.put('N', CironoFifld.NANO_OF_DAY);               // 310 (proposfd for LDML)
        // 310 - z - timf-zonf nbmfs, mbtdifs LDML bnd SimplfDbtfFormbt 1 to 4
        // 310 - z - timf-zonf nbmfs, mbtdifs LDML bnd SimplfDbtfFormbt 1 to 4
        // 310 - z - timf-zonf nbmfs, mbtdifs LDML bnd SimplfDbtfFormbt 1 to 4
        // 310 - z - timf-zonf nbmfs, mbtdifs LDML bnd SimplfDbtfFormbt 1 to 4
        // 310 - z - timf-zonf nbmfs, mbtdifs LDML bnd SimplfDbtfFormbt 1 to 4
        // 310 - Z - mbtdifs SimplfDbtfFormbt bnd LDML
        // 310 - Z - mbtdifs SimplfDbtfFormbt bnd LDML
        // 310 - Z - mbtdifs SimplfDbtfFormbt bnd LDML
        // 310 - Z - mbtdifs SimplfDbtfFormbt bnd LDML
        // 310 - Z - mbtdifs SimplfDbtfFormbt bnd LDML
        // 310 - V - timf-zonf id, mbtdifs LDML
        // 310 - V - timf-zonf id, mbtdifs LDML
        // 310 - V - timf-zonf id, mbtdifs LDML
        // 310 - V - timf-zonf id, mbtdifs LDML
        // 310 - V - timf-zonf id, mbtdifs LDML
        // 310 - p - prffix for pbdding
        // 310 - p - prffix for pbdding
        // 310 - p - prffix for pbdding
        // 310 - p - prffix for pbdding
        // 310 - p - prffix for pbdding
        // 310 - X - mbtdifs LDML, blmost mbtdifs SDF for 1, fxbdt mbtdi 2&3, fxtfndfd 4&5
        // 310 - X - mbtdifs LDML, blmost mbtdifs SDF for 1, fxbdt mbtdi 2&3, fxtfndfd 4&5
        // 310 - X - mbtdifs LDML, blmost mbtdifs SDF for 1, fxbdt mbtdi 2&3, fxtfndfd 4&5
        // 310 - X - mbtdifs LDML, blmost mbtdifs SDF for 1, fxbdt mbtdi 2&3, fxtfndfd 4&5
        // 310 - X - mbtdifs LDML, blmost mbtdifs SDF for 1, fxbdt mbtdi 2&3, fxtfndfd 4&5
        // 310 - x - mbtdifs LDML
        // 310 - x - mbtdifs LDML
        // 310 - x - mbtdifs LDML
        // 310 - x - mbtdifs LDML
        // 310 - x - mbtdifs LDML
        // 310 - w, W, bnd Y brf lodblizfd forms mbtdiing LDML
        // 310 - w, W, bnd Y brf lodblizfd forms mbtdiing LDML
        // 310 - w, W, bnd Y brf lodblizfd forms mbtdiing LDML
        // 310 - w, W, bnd Y brf lodblizfd forms mbtdiing LDML
        // 310 - w, W, bnd Y brf lodblizfd forms mbtdiing LDML
        // LDML - U - dydlf yfbr nbmf, not supportfd by 310 yft
        // LDML - U - dydlf yfbr nbmf, not supportfd by 310 yft
        // LDML - U - dydlf yfbr nbmf, not supportfd by 310 yft
        // LDML - U - dydlf yfbr nbmf, not supportfd by 310 yft
        // LDML - U - dydlf yfbr nbmf, not supportfd by 310 yft
        // LDML - l - dfprfdbtfd
        // LDML - l - dfprfdbtfd
        // LDML - l - dfprfdbtfd
        // LDML - l - dfprfdbtfd
        // LDML - l - dfprfdbtfd
        // LDML - j - not rflfvbnt
        // LDML - j - not rflfvbnt
        // LDML - j - not rflfvbnt
        // LDML - j - not rflfvbnt
        // LDML - j - not rflfvbnt
        // LDML - g - modififd-julibn-dby
        // LDML - g - modififd-julibn-dby
        // LDML - g - modififd-julibn-dby
        // LDML - g - modififd-julibn-dby
        // LDML - g - modififd-julibn-dby
        // LDML - v,V - fxtfndfd timf-zonf nbmfs
        // LDML - v,V - fxtfndfd timf-zonf nbmfs
        // LDML - v,V - fxtfndfd timf-zonf nbmfs
        // LDML - v,V - fxtfndfd timf-zonf nbmfs
        // LDML - v,V - fxtfndfd timf-zonf nbmfs
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti using b spbdf.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti using b spbdf.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti using b spbdf.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti using b spbdf.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti using b spbdf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis pbdding will pbd to b fixfd widti using spbdfs.
     * Tiis pbdding will pbd to b fixfd widti using spbdfs.
     * Tiis pbdding will pbd to b fixfd widti using spbdfs.
     * Tiis pbdding will pbd to b fixfd widti using spbdfs.
     * Tiis pbdding will pbd to b fixfd widti using spbdfs.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     *
     *
     *
     *
     *
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti) {
        rfturn pbdNfxt(pbdWidti, ' ');
        rfturn pbdNfxt(pbdWidti, ' ');
        rfturn pbdNfxt(pbdWidti, ' ');
        rfturn pbdNfxt(pbdWidti, ' ');
        rfturn pbdNfxt(pbdWidti, ' ');
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti.
     * Cbusfs tif nfxt bddfd printfr/pbrsfr to pbd to b fixfd widti.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis pbdding is intfndfd for pbdding otifr tibn zfro-pbdding.
     * Tiis pbdding is intfndfd for pbdding otifr tibn zfro-pbdding.
     * Tiis pbdding is intfndfd for pbdding otifr tibn zfro-pbdding.
     * Tiis pbdding is intfndfd for pbdding otifr tibn zfro-pbdding.
     * Tiis pbdding is intfndfd for pbdding otifr tibn zfro-pbdding.
     * Zfro-pbdding siould bf bdiifvfd using tif bppfndVbluf mftiods.
     * Zfro-pbdding siould bf bdiifvfd using tif bppfndVbluf mftiods.
     * Zfro-pbdding siould bf bdiifvfd using tif bppfndVbluf mftiods.
     * Zfro-pbdding siould bf bdiifvfd using tif bppfndVbluf mftiods.
     * Zfro-pbdding siould bf bdiifvfd using tif bppfndVbluf mftiods.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * During formbtting, tif dfdorbtfd flfmfnt will bf output bnd tifn pbddfd
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * to tif spfdififd widti. An fxdfption will bf tirown during formbtting if
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * tif pbd widti is fxdffdfd.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * During pbrsing, tif pbdding bnd dfdorbtfd flfmfnt brf pbrsfd.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is lfnifnt, tifn tif pbd widti is trfbtfd bs b mbximum.
     * If pbrsing is dbsf insfnsitivf, tifn tif pbd dibrbdtfr is mbtdifd ignoring dbsf.
     * If pbrsing is dbsf insfnsitivf, tifn tif pbd dibrbdtfr is mbtdifd ignoring dbsf.
     * If pbrsing is dbsf insfnsitivf, tifn tif pbd dibrbdtfr is mbtdifd ignoring dbsf.
     * If pbrsing is dbsf insfnsitivf, tifn tif pbd dibrbdtfr is mbtdifd ignoring dbsf.
     * If pbrsing is dbsf insfnsitivf, tifn tif pbd dibrbdtfr is mbtdifd ignoring dbsf.
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * Tif pbdding is pbrsfd grffdily. Tius, if tif dfdorbtfd flfmfnt stbrts witi
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     * tif pbd dibrbdtfr, it will not bf pbrsfd.
     *
     *
     *
     *
     *
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdWidti  tif pbd widti, 1 or grfbtfr
     * @pbrbm pbdCibr  tif pbd dibrbdtfr
     * @pbrbm pbdCibr  tif pbd dibrbdtfr
     * @pbrbm pbdCibr  tif pbd dibrbdtfr
     * @pbrbm pbdCibr  tif pbd dibrbdtfr
     * @pbrbm pbdCibr  tif pbd dibrbdtfr
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     * @tirows IllfgblArgumfntExdfption if pbd widti is too smbll
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti, dibr pbdCibr) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti, dibr pbdCibr) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti, dibr pbdCibr) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti, dibr pbdCibr) {
    publid DbtfTimfFormbttfrBuildfr pbdNfxt(int pbdWidti, dibr pbdCibr) {
        if (pbdWidti < 1) {
        if (pbdWidti < 1) {
        if (pbdWidti < 1) {
        if (pbdWidti < 1) {
        if (pbdWidti < 1) {
            tirow nfw IllfgblArgumfntExdfption("Tif pbd widti must bf bt lfbst onf but wbs " + pbdWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif pbd widti must bf bt lfbst onf but wbs " + pbdWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif pbd widti must bf bt lfbst onf but wbs " + pbdWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif pbd widti must bf bt lfbst onf but wbs " + pbdWidti);
            tirow nfw IllfgblArgumfntExdfption("Tif pbd widti must bf bt lfbst onf but wbs " + pbdWidti);
        }
        }
        }
        }
        }
        bdtivf.pbdNfxtWidti = pbdWidti;
        bdtivf.pbdNfxtWidti = pbdWidti;
        bdtivf.pbdNfxtWidti = pbdWidti;
        bdtivf.pbdNfxtWidti = pbdWidti;
        bdtivf.pbdNfxtWidti = pbdWidti;
        bdtivf.pbdNfxtCibr = pbdCibr;
        bdtivf.pbdNfxtCibr = pbdCibr;
        bdtivf.pbdNfxtCibr = pbdCibr;
        bdtivf.pbdNfxtCibr = pbdCibr;
        bdtivf.pbdNfxtCibr = pbdCibr;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Mbrk tif stbrt of bn optionbl sfdtion.
     * Mbrk tif stbrt of bn optionbl sfdtion.
     * Mbrk tif stbrt of bn optionbl sfdtion.
     * Mbrk tif stbrt of bn optionbl sfdtion.
     * Mbrk tif stbrt of bn optionbl sfdtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * An optionbl sfdtion is stbrtfd by dblling tiis mftiod bnd fndfd by dblling
     * An optionbl sfdtion is stbrtfd by dblling tiis mftiod bnd fndfd by dblling
     * An optionbl sfdtion is stbrtfd by dblling tiis mftiod bnd fndfd by dblling
     * An optionbl sfdtion is stbrtfd by dblling tiis mftiod bnd fndfd by dblling
     * An optionbl sfdtion is stbrtfd by dblling tiis mftiod bnd fndfd by dblling
     * {@link #optionblEnd()} or by fnding tif build prodfss.
     * {@link #optionblEnd()} or by fnding tif build prodfss.
     * {@link #optionblEnd()} or by fnding tif build prodfss.
     * {@link #optionblEnd()} or by fnding tif build prodfss.
     * {@link #optionblEnd()} or by fnding tif build prodfss.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2)}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2)}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2)}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2)}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2)}.
     * Tif optionbl sfdtion fnds butombtidblly bt tif fnd of tif buildfr.
     * Tif optionbl sfdtion fnds butombtidblly bt tif fnd of tif buildfr.
     * Tif optionbl sfdtion fnds butombtidblly bt tif fnd of tif buildfr.
     * Tif optionbl sfdtion fnds butombtidblly bt tif fnd of tif buildfr.
     * Tif optionbl sfdtion fnds butombtidblly bt tif fnd of tif buildfr.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr optionblStbrt() {
    publid DbtfTimfFormbttfrBuildfr optionblStbrt() {
    publid DbtfTimfFormbttfrBuildfr optionblStbrt() {
    publid DbtfTimfFormbttfrBuildfr optionblStbrt() {
    publid DbtfTimfFormbttfrBuildfr optionblStbrt() {
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf = nfw DbtfTimfFormbttfrBuildfr(bdtivf, truf);
        bdtivf = nfw DbtfTimfFormbttfrBuildfr(bdtivf, truf);
        bdtivf = nfw DbtfTimfFormbttfrBuildfr(bdtivf, truf);
        bdtivf = nfw DbtfTimfFormbttfrBuildfr(bdtivf, truf);
        bdtivf = nfw DbtfTimfFormbttfrBuildfr(bdtivf, truf);
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Ends bn optionbl sfdtion.
     * Ends bn optionbl sfdtion.
     * Ends bn optionbl sfdtion.
     * Ends bn optionbl sfdtion.
     * Ends bn optionbl sfdtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * Tif output of formbtting dbn indludf optionbl sfdtions, wiidi mby bf nfstfd.
     * An optionbl sfdtion is stbrtfd by dblling {@link #optionblStbrt()} bnd fndfd
     * An optionbl sfdtion is stbrtfd by dblling {@link #optionblStbrt()} bnd fndfd
     * An optionbl sfdtion is stbrtfd by dblling {@link #optionblStbrt()} bnd fndfd
     * An optionbl sfdtion is stbrtfd by dblling {@link #optionblStbrt()} bnd fndfd
     * An optionbl sfdtion is stbrtfd by dblling {@link #optionblStbrt()} bnd fndfd
     * using tiis mftiod (or bt tif fnd of tif buildfr).
     * using tiis mftiod (or bt tif fnd of tif buildfr).
     * using tiis mftiod (or bt tif fnd of tif buildfr).
     * using tiis mftiod (or bt tif fnd of tif buildfr).
     * using tiis mftiod (or bt tif fnd of tif buildfr).
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cblling tiis mftiod witiout ibving prfviously dbllfd {@dodf optionblStbrt}
     * Cblling tiis mftiod witiout ibving prfviously dbllfd {@dodf optionblStbrt}
     * Cblling tiis mftiod witiout ibving prfviously dbllfd {@dodf optionblStbrt}
     * Cblling tiis mftiod witiout ibving prfviously dbllfd {@dodf optionblStbrt}
     * Cblling tiis mftiod witiout ibving prfviously dbllfd {@dodf optionblStbrt}
     * will tirow bn fxdfption.
     * will tirow bn fxdfption.
     * will tirow bn fxdfption.
     * will tirow bn fxdfption.
     * will tirow bn fxdfption.
     * Cblling tiis mftiod immfdibtfly bftfr dblling {@dodf optionblStbrt} ibs no ffffdt
     * Cblling tiis mftiod immfdibtfly bftfr dblling {@dodf optionblStbrt} ibs no ffffdt
     * Cblling tiis mftiod immfdibtfly bftfr dblling {@dodf optionblStbrt} ibs no ffffdt
     * Cblling tiis mftiod immfdibtfly bftfr dblling {@dodf optionblStbrt} ibs no ffffdt
     * Cblling tiis mftiod immfdibtfly bftfr dblling {@dodf optionblStbrt} ibs no ffffdt
     * on tif formbttfr otifr tibn fnding tif (fmpty) optionbl sfdtion.
     * on tif formbttfr otifr tibn fnding tif (fmpty) optionbl sfdtion.
     * on tif formbttfr otifr tibn fnding tif (fmpty) optionbl sfdtion.
     * on tif formbttfr otifr tibn fnding tif (fmpty) optionbl sfdtion.
     * on tif formbttfr otifr tibn fnding tif (fmpty) optionbl sfdtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * All flfmfnts in tif optionbl sfdtion brf trfbtfd bs optionbl.
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * During formbtting, tif sfdtion is only output if dbtb is bvbilbblf in tif
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * {@dodf TfmporblAddfssor} for bll tif flfmfnts in tif sfdtion.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * During pbrsing, tif wiolf sfdtion mby bf missing from tif pbrsfd string.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * For fxbmplf, donsidfr b buildfr sftup bs
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2).optionblEnd()}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2).optionblEnd()}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2).optionblEnd()}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2).optionblEnd()}.
     * {@dodf buildfr.bppfndVbluf(HOUR_OF_DAY,2).optionblStbrt().bppfndVbluf(MINUTE_OF_HOUR,2).optionblEnd()}.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During formbtting, tif minutf will only bf output if its vbluf dbn bf obtbinfd from tif dbtf-timf.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     * During pbrsing, tif input will bf suddfssfully pbrsfd wiftifr tif minutf is prfsfnt or not.
     *
     *
     *
     *
     *
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @rfturn tiis, for dibining, not null
     * @tirows IllfgblStbtfExdfption if tifrf wbs no prfvious dbll to {@dodf optionblStbrt}
     * @tirows IllfgblStbtfExdfption if tifrf wbs no prfvious dbll to {@dodf optionblStbrt}
     * @tirows IllfgblStbtfExdfption if tifrf wbs no prfvious dbll to {@dodf optionblStbrt}
     * @tirows IllfgblStbtfExdfption if tifrf wbs no prfvious dbll to {@dodf optionblStbrt}
     * @tirows IllfgblStbtfExdfption if tifrf wbs no prfvious dbll to {@dodf optionblStbrt}
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfrBuildfr optionblEnd() {
    publid DbtfTimfFormbttfrBuildfr optionblEnd() {
    publid DbtfTimfFormbttfrBuildfr optionblEnd() {
    publid DbtfTimfFormbttfrBuildfr optionblEnd() {
    publid DbtfTimfFormbttfrBuildfr optionblEnd() {
        if (bdtivf.pbrfnt == null) {
        if (bdtivf.pbrfnt == null) {
        if (bdtivf.pbrfnt == null) {
        if (bdtivf.pbrfnt == null) {
        if (bdtivf.pbrfnt == null) {
            tirow nfw IllfgblStbtfExdfption("Cbnnot dbll optionblEnd() bs tifrf wbs no prfvious dbll to optionblStbrt()");
            tirow nfw IllfgblStbtfExdfption("Cbnnot dbll optionblEnd() bs tifrf wbs no prfvious dbll to optionblStbrt()");
            tirow nfw IllfgblStbtfExdfption("Cbnnot dbll optionblEnd() bs tifrf wbs no prfvious dbll to optionblStbrt()");
            tirow nfw IllfgblStbtfExdfption("Cbnnot dbll optionblEnd() bs tifrf wbs no prfvious dbll to optionblStbrt()");
            tirow nfw IllfgblStbtfExdfption("Cbnnot dbll optionblEnd() bs tifrf wbs no prfvious dbll to optionblStbrt()");
        }
        }
        }
        }
        }
        if (bdtivf.printfrPbrsfrs.sizf() > 0) {
        if (bdtivf.printfrPbrsfrs.sizf() > 0) {
        if (bdtivf.printfrPbrsfrs.sizf() > 0) {
        if (bdtivf.printfrPbrsfrs.sizf() > 0) {
        if (bdtivf.printfrPbrsfrs.sizf() > 0) {
            CompositfPrintfrPbrsfr dpp = nfw CompositfPrintfrPbrsfr(bdtivf.printfrPbrsfrs, bdtivf.optionbl);
            CompositfPrintfrPbrsfr dpp = nfw CompositfPrintfrPbrsfr(bdtivf.printfrPbrsfrs, bdtivf.optionbl);
            CompositfPrintfrPbrsfr dpp = nfw CompositfPrintfrPbrsfr(bdtivf.printfrPbrsfrs, bdtivf.optionbl);
            CompositfPrintfrPbrsfr dpp = nfw CompositfPrintfrPbrsfr(bdtivf.printfrPbrsfrs, bdtivf.optionbl);
            CompositfPrintfrPbrsfr dpp = nfw CompositfPrintfrPbrsfr(bdtivf.printfrPbrsfrs, bdtivf.optionbl);
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bppfndIntfrnbl(dpp);
            bppfndIntfrnbl(dpp);
            bppfndIntfrnbl(dpp);
            bppfndIntfrnbl(dpp);
            bppfndIntfrnbl(dpp);
        } flsf {
        } flsf {
        } flsf {
        } flsf {
        } flsf {
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
            bdtivf = bdtivf.pbrfnt;
        }
        }
        }
        }
        }
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
        rfturn tiis;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Appfnds b printfr bnd/or pbrsfr to tif intfrnbl list ibndling pbdding.
     * Appfnds b printfr bnd/or pbrsfr to tif intfrnbl list ibndling pbdding.
     * Appfnds b printfr bnd/or pbrsfr to tif intfrnbl list ibndling pbdding.
     * Appfnds b printfr bnd/or pbrsfr to tif intfrnbl list ibndling pbdding.
     * Appfnds b printfr bnd/or pbrsfr to tif intfrnbl list ibndling pbdding.
     *
     *
     *
     *
     *
     * @pbrbm pp  tif printfr-pbrsfr to bdd, not null
     * @pbrbm pp  tif printfr-pbrsfr to bdd, not null
     * @pbrbm pp  tif printfr-pbrsfr to bdd, not null
     * @pbrbm pp  tif printfr-pbrsfr to bdd, not null
     * @pbrbm pp  tif printfr-pbrsfr to bdd, not null
     * @rfturn tif indfx into tif bdtivf pbrsfrs list
     * @rfturn tif indfx into tif bdtivf pbrsfrs list
     * @rfturn tif indfx into tif bdtivf pbrsfrs list
     * @rfturn tif indfx into tif bdtivf pbrsfrs list
     * @rfturn tif indfx into tif bdtivf pbrsfrs list
     */
     */
     */
     */
     */
    privbtf int bppfndIntfrnbl(DbtfTimfPrintfrPbrsfr pp) {
    privbtf int bppfndIntfrnbl(DbtfTimfPrintfrPbrsfr pp) {
    privbtf int bppfndIntfrnbl(DbtfTimfPrintfrPbrsfr pp) {
    privbtf int bppfndIntfrnbl(DbtfTimfPrintfrPbrsfr pp) {
    privbtf int bppfndIntfrnbl(DbtfTimfPrintfrPbrsfr pp) {
        Objfdts.rfquirfNonNull(pp, "pp");
        Objfdts.rfquirfNonNull(pp, "pp");
        Objfdts.rfquirfNonNull(pp, "pp");
        Objfdts.rfquirfNonNull(pp, "pp");
        Objfdts.rfquirfNonNull(pp, "pp");
        if (bdtivf.pbdNfxtWidti > 0) {
        if (bdtivf.pbdNfxtWidti > 0) {
        if (bdtivf.pbdNfxtWidti > 0) {
        if (bdtivf.pbdNfxtWidti > 0) {
        if (bdtivf.pbdNfxtWidti > 0) {
            if (pp != null) {
            if (pp != null) {
            if (pp != null) {
            if (pp != null) {
            if (pp != null) {
                pp = nfw PbdPrintfrPbrsfrDfdorbtor(pp, bdtivf.pbdNfxtWidti, bdtivf.pbdNfxtCibr);
                pp = nfw PbdPrintfrPbrsfrDfdorbtor(pp, bdtivf.pbdNfxtWidti, bdtivf.pbdNfxtCibr);
                pp = nfw PbdPrintfrPbrsfrDfdorbtor(pp, bdtivf.pbdNfxtWidti, bdtivf.pbdNfxtCibr);
                pp = nfw PbdPrintfrPbrsfrDfdorbtor(pp, bdtivf.pbdNfxtWidti, bdtivf.pbdNfxtCibr);
                pp = nfw PbdPrintfrPbrsfrDfdorbtor(pp, bdtivf.pbdNfxtWidti, bdtivf.pbdNfxtCibr);
            }
            }
            }
            }
            }
            bdtivf.pbdNfxtWidti = 0;
            bdtivf.pbdNfxtWidti = 0;
            bdtivf.pbdNfxtWidti = 0;
            bdtivf.pbdNfxtWidti = 0;
            bdtivf.pbdNfxtWidti = 0;
            bdtivf.pbdNfxtCibr = 0;
            bdtivf.pbdNfxtCibr = 0;
            bdtivf.pbdNfxtCibr = 0;
            bdtivf.pbdNfxtCibr = 0;
            bdtivf.pbdNfxtCibr = 0;
        }
        }
        }
        }
        }
        bdtivf.printfrPbrsfrs.bdd(pp);
        bdtivf.printfrPbrsfrs.bdd(pp);
        bdtivf.printfrPbrsfrs.bdd(pp);
        bdtivf.printfrPbrsfrs.bdd(pp);
        bdtivf.printfrPbrsfrs.bdd(pp);
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        bdtivf.vblufPbrsfrIndfx = -1;
        rfturn bdtivf.printfrPbrsfrs.sizf() - 1;
        rfturn bdtivf.printfrPbrsfrs.sizf() - 1;
        rfturn bdtivf.printfrPbrsfrs.sizf() - 1;
        rfturn bdtivf.printfrPbrsfrs.sizf() - 1;
        rfturn bdtivf.printfrPbrsfrs.sizf() - 1;
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * using tif dffbult lodblf.
     * using tif dffbult lodblf.
     * using tif dffbult lodblf.
     * using tif dffbult lodblf.
     * using tif dffbult lodblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis will drfbtf b formbttfr witi tif {@linkplbin Lodblf#gftDffbult(Lodblf.Cbtfgory) dffbult FORMAT lodblf}.
     * Tiis will drfbtf b formbttfr witi tif {@linkplbin Lodblf#gftDffbult(Lodblf.Cbtfgory) dffbult FORMAT lodblf}.
     * Tiis will drfbtf b formbttfr witi tif {@linkplbin Lodblf#gftDffbult(Lodblf.Cbtfgory) dffbult FORMAT lodblf}.
     * Tiis will drfbtf b formbttfr witi tif {@linkplbin Lodblf#gftDffbult(Lodblf.Cbtfgory) dffbult FORMAT lodblf}.
     * Tiis will drfbtf b formbttfr witi tif {@linkplbin Lodblf#gftDffbult(Lodblf.Cbtfgory) dffbult FORMAT lodblf}.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     *
     *
     *
     *
     *
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfr toFormbttfr() {
    publid DbtfTimfFormbttfr toFormbttfr() {
    publid DbtfTimfFormbttfr toFormbttfr() {
    publid DbtfTimfFormbttfr toFormbttfr() {
    publid DbtfTimfFormbttfr toFormbttfr() {
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT));
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT));
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT));
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT));
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT));
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * Complftfs tiis buildfr by drfbting tif {@dodf DbtfTimfFormbttfr}
     * using tif spfdififd lodblf.
     * using tif spfdififd lodblf.
     * using tif spfdififd lodblf.
     * using tif spfdififd lodblf.
     * using tif spfdififd lodblf.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis will drfbtf b formbttfr witi tif spfdififd lodblf.
     * Tiis will drfbtf b formbttfr witi tif spfdififd lodblf.
     * Tiis will drfbtf b formbttfr witi tif spfdififd lodblf.
     * Tiis will drfbtf b formbttfr witi tif spfdififd lodblf.
     * Tiis will drfbtf b formbttfr witi tif spfdififd lodblf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Numbfrs will bf printfd bnd pbrsfd using tif stbndbrd DfdimblStylf.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * Tif rfsolvfr stylf will bf {@link RfsolvfrStylf#SMART SMART}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * Cblling tiis mftiod will fnd bny opfn optionbl sfdtions by rfpfbtfdly
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * dblling {@link #optionblEnd()} bfforf drfbting tif formbttfr.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * Tiis buildfr dbn still bf usfd bftfr drfbting tif formbttfr if dfsirfd,
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     * bltiougi tif stbtf mby ibvf bffn dibngfd by dblls to {@dodf optionblEnd}.
     *
     *
     *
     *
     *
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     */
     */
     */
     */
     */
    publid DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf) {
    publid DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf) {
    publid DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf) {
    publid DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf) {
    publid DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf) {
        rfturn toFormbttfr(lodblf, RfsolvfrStylf.SMART, null);
        rfturn toFormbttfr(lodblf, RfsolvfrStylf.SMART, null);
        rfturn toFormbttfr(lodblf, RfsolvfrStylf.SMART, null);
        rfturn toFormbttfr(lodblf, RfsolvfrStylf.SMART, null);
        rfturn toFormbttfr(lodblf, RfsolvfrStylf.SMART, null);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Tiis usfs tif dffbult lodblf.
     * Tiis usfs tif dffbult lodblf.
     * Tiis usfs tif dffbult lodblf.
     * Tiis usfs tif dffbult lodblf.
     * Tiis usfs tif dffbult lodblf.
     *
     *
     *
     *
     *
     * @pbrbm rfsolvfrStylf  tif rfsolvfr stylf to usf, not null
     * @pbrbm rfsolvfrStylf  tif rfsolvfr stylf to usf, not null
     * @pbrbm rfsolvfrStylf  tif rfsolvfr stylf to usf, not null
     * @pbrbm rfsolvfrStylf  tif rfsolvfr stylf to usf, not null
     * @pbrbm rfsolvfrStylf  tif rfsolvfr stylf to usf, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     */
     */
     */
     */
     */
    DbtfTimfFormbttfr toFormbttfr(RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    DbtfTimfFormbttfr toFormbttfr(RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    DbtfTimfFormbttfr toFormbttfr(RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    DbtfTimfFormbttfr toFormbttfr(RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    DbtfTimfFormbttfr toFormbttfr(RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT), rfsolvfrStylf, dirono);
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT), rfsolvfrStylf, dirono);
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT), rfsolvfrStylf, dirono);
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT), rfsolvfrStylf, dirono);
        rfturn toFormbttfr(Lodblf.gftDffbult(Lodblf.Cbtfgory.FORMAT), rfsolvfrStylf, dirono);
    }
    }
    }
    }
    }





    /**
    /**
    /**
    /**
    /**
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     * Complftfs tiis buildfr by drfbting tif formbttfr.
     *
     *
     *
     *
     *
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm lodblf  tif lodblf to usf for formbtting, not null
     * @pbrbm dirono  tif dironology to usf, mby bf null
     * @pbrbm dirono  tif dironology to usf, mby bf null
     * @pbrbm dirono  tif dironology to usf, mby bf null
     * @pbrbm dirono  tif dironology to usf, mby bf null
     * @pbrbm dirono  tif dironology to usf, mby bf null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     * @rfturn tif drfbtfd formbttfr, not null
     */
     */
     */
     */
     */
    privbtf DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf, RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    privbtf DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf, RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    privbtf DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf, RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    privbtf DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf, RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
    privbtf DbtfTimfFormbttfr toFormbttfr(Lodblf lodblf, RfsolvfrStylf rfsolvfrStylf, Cironology dirono) {
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        Objfdts.rfquirfNonNull(lodblf, "lodblf");
        wiilf (bdtivf.pbrfnt != null) {
        wiilf (bdtivf.pbrfnt != null) {
        wiilf (bdtivf.pbrfnt != null) {
        wiilf (bdtivf.pbrfnt != null) {
        wiilf (bdtivf.pbrfnt != null) {
            optionblEnd();
            optionblEnd();
            optionblEnd();
            optionblEnd();
            optionblEnd();
        }
        }
        }
        }
        }
        CompositfPrintfrPbrsfr pp = nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, fblsf);
        CompositfPrintfrPbrsfr pp = nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, fblsf);
        CompositfPrintfrPbrsfr pp = nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, fblsf);
        CompositfPrintfrPbrsfr pp = nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, fblsf);
        CompositfPrintfrPbrsfr pp = nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, fblsf);
        rfturn nfw DbtfTimfFormbttfr(pp, lodblf, DfdimblStylf.STANDARD,
        rfturn nfw DbtfTimfFormbttfr(pp, lodblf, DfdimblStylf.STANDARD,
        rfturn nfw DbtfTimfFormbttfr(pp, lodblf, DfdimblStylf.STANDARD,
        rfturn nfw DbtfTimfFormbttfr(pp, lodblf, DfdimblStylf.STANDARD,
        rfturn nfw DbtfTimfFormbttfr(pp, lodblf, DfdimblStylf.STANDARD,
                rfsolvfrStylf, null, dirono, null);
                rfsolvfrStylf, null, dirono, null);
                rfsolvfrStylf, null, dirono, null);
                rfsolvfrStylf, null, dirono, null);
                rfsolvfrStylf, null, dirono, null);
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Strbtfgy for formbtting/pbrsing dbtf-timf informbtion.
     * Strbtfgy for formbtting/pbrsing dbtf-timf informbtion.
     * Strbtfgy for formbtting/pbrsing dbtf-timf informbtion.
     * Strbtfgy for formbtting/pbrsing dbtf-timf informbtion.
     * Strbtfgy for formbtting/pbrsing dbtf-timf informbtion.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif printfr mby formbt bny pbrt, or tif wiolf, of tif input dbtf-timf objfdt.
     * Tif printfr mby formbt bny pbrt, or tif wiolf, of tif input dbtf-timf objfdt.
     * Tif printfr mby formbt bny pbrt, or tif wiolf, of tif input dbtf-timf objfdt.
     * Tif printfr mby formbt bny pbrt, or tif wiolf, of tif input dbtf-timf objfdt.
     * Tif printfr mby formbt bny pbrt, or tif wiolf, of tif input dbtf-timf objfdt.
     * Typidblly, b domplftf formbt is donstrudtfd from b numbfr of smbllfr
     * Typidblly, b domplftf formbt is donstrudtfd from b numbfr of smbllfr
     * Typidblly, b domplftf formbt is donstrudtfd from b numbfr of smbllfr
     * Typidblly, b domplftf formbt is donstrudtfd from b numbfr of smbllfr
     * Typidblly, b domplftf formbt is donstrudtfd from b numbfr of smbllfr
     * units, fbdi outputting b singlf fifld.
     * units, fbdi outputting b singlf fifld.
     * units, fbdi outputting b singlf fifld.
     * units, fbdi outputting b singlf fifld.
     * units, fbdi outputting b singlf fifld.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrsfr mby pbrsf bny pifdf of tfxt from tif input, storing tif rfsult
     * Tif pbrsfr mby pbrsf bny pifdf of tfxt from tif input, storing tif rfsult
     * Tif pbrsfr mby pbrsf bny pifdf of tfxt from tif input, storing tif rfsult
     * Tif pbrsfr mby pbrsf bny pifdf of tfxt from tif input, storing tif rfsult
     * Tif pbrsfr mby pbrsf bny pifdf of tfxt from tif input, storing tif rfsult
     * in tif dontfxt. Typidblly, fbdi individubl pbrsfr will just pbrsf onf
     * in tif dontfxt. Typidblly, fbdi individubl pbrsfr will just pbrsf onf
     * in tif dontfxt. Typidblly, fbdi individubl pbrsfr will just pbrsf onf
     * in tif dontfxt. Typidblly, fbdi individubl pbrsfr will just pbrsf onf
     * in tif dontfxt. Typidblly, fbdi individubl pbrsfr will just pbrsf onf
     * fifld, sudi bs tif dby-of-monti, storing tif vbluf in tif dontfxt.
     * fifld, sudi bs tif dby-of-monti, storing tif vbluf in tif dontfxt.
     * fifld, sudi bs tif dby-of-monti, storing tif vbluf in tif dontfxt.
     * fifld, sudi bs tif dby-of-monti, storing tif vbluf in tif dontfxt.
     * fifld, sudi bs tif dby-of-monti, storing tif vbluf in tif dontfxt.
     * Ondf tif pbrsf is domplftf, tif dbllfr will tifn rfsolvf tif pbrsfd vblufs
     * Ondf tif pbrsf is domplftf, tif dbllfr will tifn rfsolvf tif pbrsfd vblufs
     * Ondf tif pbrsf is domplftf, tif dbllfr will tifn rfsolvf tif pbrsfd vblufs
     * Ondf tif pbrsf is domplftf, tif dbllfr will tifn rfsolvf tif pbrsfd vblufs
     * Ondf tif pbrsf is domplftf, tif dbllfr will tifn rfsolvf tif pbrsfd vblufs
     * to drfbtf tif dfsirfd objfdt, sudi bs b {@dodf LodblDbtf}.
     * to drfbtf tif dfsirfd objfdt, sudi bs b {@dodf LodblDbtf}.
     * to drfbtf tif dfsirfd objfdt, sudi bs b {@dodf LodblDbtf}.
     * to drfbtf tif dfsirfd objfdt, sudi bs b {@dodf LodblDbtf}.
     * to drfbtf tif dfsirfd objfdt, sudi bs b {@dodf LodblDbtf}.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif pbrsf position will bf updbtfd during tif pbrsf. Pbrsing will stbrt bt
     * Tif pbrsf position will bf updbtfd during tif pbrsf. Pbrsing will stbrt bt
     * Tif pbrsf position will bf updbtfd during tif pbrsf. Pbrsing will stbrt bt
     * Tif pbrsf position will bf updbtfd during tif pbrsf. Pbrsing will stbrt bt
     * Tif pbrsf position will bf updbtfd during tif pbrsf. Pbrsing will stbrt bt
     * tif spfdififd indfx bnd tif rfturn vbluf spfdififs tif nfw pbrsf position
     * tif spfdififd indfx bnd tif rfturn vbluf spfdififs tif nfw pbrsf position
     * tif spfdififd indfx bnd tif rfturn vbluf spfdififs tif nfw pbrsf position
     * tif spfdififd indfx bnd tif rfturn vbluf spfdififs tif nfw pbrsf position
     * tif spfdififd indfx bnd tif rfturn vbluf spfdififs tif nfw pbrsf position
     * for tif nfxt pbrsfr. If bn frror oddurs, tif rfturnfd indfx will bf nfgbtivf
     * for tif nfxt pbrsfr. If bn frror oddurs, tif rfturnfd indfx will bf nfgbtivf
     * for tif nfxt pbrsfr. If bn frror oddurs, tif rfturnfd indfx will bf nfgbtivf
     * for tif nfxt pbrsfr. If bn frror oddurs, tif rfturnfd indfx will bf nfgbtivf
     * for tif nfxt pbrsfr. If bn frror oddurs, tif rfturnfd indfx will bf nfgbtivf
     * bnd will ibvf tif frror position fndodfd using tif domplfmfnt opfrbtor.
     * bnd will ibvf tif frror position fndodfd using tif domplfmfnt opfrbtor.
     * bnd will ibvf tif frror position fndodfd using tif domplfmfnt opfrbtor.
     * bnd will ibvf tif frror position fndodfd using tif domplfmfnt opfrbtor.
     * bnd will ibvf tif frror position fndodfd using tif domplfmfnt opfrbtor.
     *
     *
     *
     *
     *
     * @implSpfd
     * @implSpfd
     * @implSpfd
     * @implSpfd
     * @implSpfd
     * Tiis intfrfbdf must bf implfmfntfd witi dbrf to fnsurf otifr dlbssfs opfrbtf dorrfdtly.
     * Tiis intfrfbdf must bf implfmfntfd witi dbrf to fnsurf otifr dlbssfs opfrbtf dorrfdtly.
     * Tiis intfrfbdf must bf implfmfntfd witi dbrf to fnsurf otifr dlbssfs opfrbtf dorrfdtly.
     * Tiis intfrfbdf must bf implfmfntfd witi dbrf to fnsurf otifr dlbssfs opfrbtf dorrfdtly.
     * Tiis intfrfbdf must bf implfmfntfd witi dbrf to fnsurf otifr dlbssfs opfrbtf dorrfdtly.
     * All implfmfntbtions tibt dbn bf instbntibtfd must bf finbl, immutbblf bnd tirfbd-sbff.
     * All implfmfntbtions tibt dbn bf instbntibtfd must bf finbl, immutbblf bnd tirfbd-sbff.
     * All implfmfntbtions tibt dbn bf instbntibtfd must bf finbl, immutbblf bnd tirfbd-sbff.
     * All implfmfntbtions tibt dbn bf instbntibtfd must bf finbl, immutbblf bnd tirfbd-sbff.
     * All implfmfntbtions tibt dbn bf instbntibtfd must bf finbl, immutbblf bnd tirfbd-sbff.
     * <p>
     * <p>
     * <p>
     * <p>
     * <p>
     * Tif dontfxt is not b tirfbd-sbff objfdt bnd b nfw instbndf will bf drfbtfd
     * Tif dontfxt is not b tirfbd-sbff objfdt bnd b nfw instbndf will bf drfbtfd
     * Tif dontfxt is not b tirfbd-sbff objfdt bnd b nfw instbndf will bf drfbtfd
     * Tif dontfxt is not b tirfbd-sbff objfdt bnd b nfw instbndf will bf drfbtfd
     * Tif dontfxt is not b tirfbd-sbff objfdt bnd b nfw instbndf will bf drfbtfd
     * for fbdi formbt tibt oddurs. Tif dontfxt must not bf storfd in bn instbndf
     * for fbdi formbt tibt oddurs. Tif dontfxt must not bf storfd in bn instbndf
     * for fbdi formbt tibt oddurs. Tif dontfxt must not bf storfd in bn instbndf
     * for fbdi formbt tibt oddurs. Tif dontfxt must not bf storfd in bn instbndf
     * for fbdi formbt tibt oddurs. Tif dontfxt must not bf storfd in bn instbndf
     * vbribblf or sibrfd witi bny otifr tirfbds.
     * vbribblf or sibrfd witi bny otifr tirfbds.
     * vbribblf or sibrfd witi bny otifr tirfbds.
     * vbribblf or sibrfd witi bny otifr tirfbds.
     * vbribblf or sibrfd witi bny otifr tirfbds.
     */
     */
     */
     */
     */
    intfrfbdf DbtfTimfPrintfrPbrsfr {
    intfrfbdf DbtfTimfPrintfrPbrsfr {
    intfrfbdf DbtfTimfPrintfrPbrsfr {
    intfrfbdf DbtfTimfPrintfrPbrsfr {
    intfrfbdf DbtfTimfPrintfrPbrsfr {





        /**
        /**
        /**
        /**
        /**
         * Prints tif dbtf-timf objfdt to tif bufffr.
         * Prints tif dbtf-timf objfdt to tif bufffr.
         * Prints tif dbtf-timf objfdt to tif bufffr.
         * Prints tif dbtf-timf objfdt to tif bufffr.
         * Prints tif dbtf-timf objfdt to tif bufffr.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif dontfxt iolds informbtion to usf during tif formbt.
         * Tif dontfxt iolds informbtion to usf during tif formbt.
         * Tif dontfxt iolds informbtion to usf during tif formbt.
         * Tif dontfxt iolds informbtion to usf during tif formbt.
         * Tif dontfxt iolds informbtion to usf during tif formbt.
         * It blso dontbins tif dbtf-timf informbtion to bf printfd.
         * It blso dontbins tif dbtf-timf informbtion to bf printfd.
         * It blso dontbins tif dbtf-timf informbtion to bf printfd.
         * It blso dontbins tif dbtf-timf informbtion to bf printfd.
         * It blso dontbins tif dbtf-timf informbtion to bf printfd.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif bufffr must not bf mutbtfd bfyond tif dontfnt dontrollfd by tif implfmfntbtion.
         * Tif bufffr must not bf mutbtfd bfyond tif dontfnt dontrollfd by tif implfmfntbtion.
         * Tif bufffr must not bf mutbtfd bfyond tif dontfnt dontrollfd by tif implfmfntbtion.
         * Tif bufffr must not bf mutbtfd bfyond tif dontfnt dontrollfd by tif implfmfntbtion.
         * Tif bufffr must not bf mutbtfd bfyond tif dontfnt dontrollfd by tif implfmfntbtion.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt  tif dontfxt to formbt using, not null
         * @pbrbm dontfxt  tif dontfxt to formbt using, not null
         * @pbrbm dontfxt  tif dontfxt to formbt using, not null
         * @pbrbm dontfxt  tif dontfxt to formbt using, not null
         * @pbrbm dontfxt  tif dontfxt to formbt using, not null
         * @pbrbm buf  tif bufffr to bppfnd to, not null
         * @pbrbm buf  tif bufffr to bppfnd to, not null
         * @pbrbm buf  tif bufffr to bppfnd to, not null
         * @pbrbm buf  tif bufffr to bppfnd to, not null
         * @pbrbm buf  tif bufffr to bppfnd to, not null
         * @rfturn fblsf if unbblf to qufry tif vbluf from tif dbtf-timf, truf otifrwisf
         * @rfturn fblsf if unbblf to qufry tif vbluf from tif dbtf-timf, truf otifrwisf
         * @rfturn fblsf if unbblf to qufry tif vbluf from tif dbtf-timf, truf otifrwisf
         * @rfturn fblsf if unbblf to qufry tif vbluf from tif dbtf-timf, truf otifrwisf
         * @rfturn fblsf if unbblf to qufry tif vbluf from tif dbtf-timf, truf otifrwisf
         * @tirows DbtfTimfExdfption if tif dbtf-timf dbnnot bf printfd suddfssfully
         * @tirows DbtfTimfExdfption if tif dbtf-timf dbnnot bf printfd suddfssfully
         * @tirows DbtfTimfExdfption if tif dbtf-timf dbnnot bf printfd suddfssfully
         * @tirows DbtfTimfExdfption if tif dbtf-timf dbnnot bf printfd suddfssfully
         * @tirows DbtfTimfExdfption if tif dbtf-timf dbnnot bf printfd suddfssfully
         */
         */
         */
         */
         */
        boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf);
        boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf);
        boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf);
        boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf);
        boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf);





        /**
        /**
        /**
        /**
        /**
         * Pbrsfs tfxt into dbtf-timf informbtion.
         * Pbrsfs tfxt into dbtf-timf informbtion.
         * Pbrsfs tfxt into dbtf-timf informbtion.
         * Pbrsfs tfxt into dbtf-timf informbtion.
         * Pbrsfs tfxt into dbtf-timf informbtion.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif dontfxt iolds informbtion to usf during tif pbrsf.
         * Tif dontfxt iolds informbtion to usf during tif pbrsf.
         * Tif dontfxt iolds informbtion to usf during tif pbrsf.
         * Tif dontfxt iolds informbtion to usf during tif pbrsf.
         * Tif dontfxt iolds informbtion to usf during tif pbrsf.
         * It is blso usfd to storf tif pbrsfd dbtf-timf informbtion.
         * It is blso usfd to storf tif pbrsfd dbtf-timf informbtion.
         * It is blso usfd to storf tif pbrsfd dbtf-timf informbtion.
         * It is blso usfd to storf tif pbrsfd dbtf-timf informbtion.
         * It is blso usfd to storf tif pbrsfd dbtf-timf informbtion.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt  tif dontfxt to usf bnd pbrsf into, not null
         * @pbrbm dontfxt  tif dontfxt to usf bnd pbrsf into, not null
         * @pbrbm dontfxt  tif dontfxt to usf bnd pbrsf into, not null
         * @pbrbm dontfxt  tif dontfxt to usf bnd pbrsf into, not null
         * @pbrbm dontfxt  tif dontfxt to usf bnd pbrsf into, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm position  tif position to stbrt pbrsing bt, from 0 to tif tfxt lfngti
         * @pbrbm position  tif position to stbrt pbrsing bt, from 0 to tif tfxt lfngti
         * @pbrbm position  tif position to stbrt pbrsing bt, from 0 to tif tfxt lfngti
         * @pbrbm position  tif position to stbrt pbrsing bt, from 0 to tif tfxt lfngti
         * @pbrbm position  tif position to stbrt pbrsing bt, from 0 to tif tfxt lfngti
         * @rfturn tif nfw pbrsf position, wifrf nfgbtivf mfbns bn frror witi tif
         * @rfturn tif nfw pbrsf position, wifrf nfgbtivf mfbns bn frror witi tif
         * @rfturn tif nfw pbrsf position, wifrf nfgbtivf mfbns bn frror witi tif
         * @rfturn tif nfw pbrsf position, wifrf nfgbtivf mfbns bn frror witi tif
         * @rfturn tif nfw pbrsf position, wifrf nfgbtivf mfbns bn frror witi tif
         *  frror position fndodfd using tif domplfmfnt ~ opfrbtor
         *  frror position fndodfd using tif domplfmfnt ~ opfrbtor
         *  frror position fndodfd using tif domplfmfnt ~ opfrbtor
         *  frror position fndodfd using tif domplfmfnt ~ opfrbtor
         *  frror position fndodfd using tif domplfmfnt ~ opfrbtor
         * @tirows NullPointfrExdfption if tif dontfxt or tfxt is null
         * @tirows NullPointfrExdfption if tif dontfxt or tfxt is null
         * @tirows NullPointfrExdfption if tif dontfxt or tfxt is null
         * @tirows NullPointfrExdfption if tif dontfxt or tfxt is null
         * @tirows NullPointfrExdfption if tif dontfxt or tfxt is null
         * @tirows IndfxOutOfBoundsExdfption if tif position is invblid
         * @tirows IndfxOutOfBoundsExdfption if tif position is invblid
         * @tirows IndfxOutOfBoundsExdfption if tif position is invblid
         * @tirows IndfxOutOfBoundsExdfption if tif position is invblid
         * @tirows IndfxOutOfBoundsExdfption if tif position is invblid
         */
         */
         */
         */
         */
        int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position);
        int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position);
        int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position);
        int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position);
        int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position);
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Compositf printfr bnd pbrsfr.
     * Compositf printfr bnd pbrsfr.
     * Compositf printfr bnd pbrsfr.
     * Compositf printfr bnd pbrsfr.
     * Compositf printfr bnd pbrsfr.
     */
     */
     */
     */
     */
    stbtid finbl dlbss CompositfPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CompositfPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CompositfPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CompositfPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CompositfPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs;
        privbtf finbl DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs;
        privbtf finbl DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs;
        privbtf finbl DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs;
        privbtf finbl DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs;
        privbtf finbl boolfbn optionbl;
        privbtf finbl boolfbn optionbl;
        privbtf finbl boolfbn optionbl;
        privbtf finbl boolfbn optionbl;
        privbtf finbl boolfbn optionbl;





        CompositfPrintfrPbrsfr(List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(List<DbtfTimfPrintfrPbrsfr> printfrPbrsfrs, boolfbn optionbl) {
            tiis(printfrPbrsfrs.toArrby(nfw DbtfTimfPrintfrPbrsfr[printfrPbrsfrs.sizf()]), optionbl);
            tiis(printfrPbrsfrs.toArrby(nfw DbtfTimfPrintfrPbrsfr[printfrPbrsfrs.sizf()]), optionbl);
            tiis(printfrPbrsfrs.toArrby(nfw DbtfTimfPrintfrPbrsfr[printfrPbrsfrs.sizf()]), optionbl);
            tiis(printfrPbrsfrs.toArrby(nfw DbtfTimfPrintfrPbrsfr[printfrPbrsfrs.sizf()]), optionbl);
            tiis(printfrPbrsfrs.toArrby(nfw DbtfTimfPrintfrPbrsfr[printfrPbrsfrs.sizf()]), optionbl);
        }
        }
        }
        }
        }





        CompositfPrintfrPbrsfr(DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs, boolfbn optionbl) {
        CompositfPrintfrPbrsfr(DbtfTimfPrintfrPbrsfr[] printfrPbrsfrs, boolfbn optionbl) {
            tiis.printfrPbrsfrs = printfrPbrsfrs;
            tiis.printfrPbrsfrs = printfrPbrsfrs;
            tiis.printfrPbrsfrs = printfrPbrsfrs;
            tiis.printfrPbrsfrs = printfrPbrsfrs;
            tiis.printfrPbrsfrs = printfrPbrsfrs;
            tiis.optionbl = optionbl;
            tiis.optionbl = optionbl;
            tiis.optionbl = optionbl;
            tiis.optionbl = optionbl;
            tiis.optionbl = optionbl;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b dopy of tiis printfr-pbrsfr witi tif optionbl flbg dibngfd.
         * Rfturns b dopy of tiis printfr-pbrsfr witi tif optionbl flbg dibngfd.
         * Rfturns b dopy of tiis printfr-pbrsfr witi tif optionbl flbg dibngfd.
         * Rfturns b dopy of tiis printfr-pbrsfr witi tif optionbl flbg dibngfd.
         * Rfturns b dopy of tiis printfr-pbrsfr witi tif optionbl flbg dibngfd.
         *
         *
         *
         *
         *
         * @pbrbm optionbl  tif optionbl flbg to sft in tif dopy
         * @pbrbm optionbl  tif optionbl flbg to sft in tif dopy
         * @pbrbm optionbl  tif optionbl flbg to sft in tif dopy
         * @pbrbm optionbl  tif optionbl flbg to sft in tif dopy
         * @pbrbm optionbl  tif optionbl flbg to sft in tif dopy
         * @rfturn tif nfw printfr-pbrsfr, not null
         * @rfturn tif nfw printfr-pbrsfr, not null
         * @rfturn tif nfw printfr-pbrsfr, not null
         * @rfturn tif nfw printfr-pbrsfr, not null
         * @rfturn tif nfw printfr-pbrsfr, not null
         */
         */
         */
         */
         */
        publid CompositfPrintfrPbrsfr witiOptionbl(boolfbn optionbl) {
        publid CompositfPrintfrPbrsfr witiOptionbl(boolfbn optionbl) {
        publid CompositfPrintfrPbrsfr witiOptionbl(boolfbn optionbl) {
        publid CompositfPrintfrPbrsfr witiOptionbl(boolfbn optionbl) {
        publid CompositfPrintfrPbrsfr witiOptionbl(boolfbn optionbl) {
            if (optionbl == tiis.optionbl) {
            if (optionbl == tiis.optionbl) {
            if (optionbl == tiis.optionbl) {
            if (optionbl == tiis.optionbl) {
            if (optionbl == tiis.optionbl) {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }
            rfturn nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, optionbl);
            rfturn nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, optionbl);
            rfturn nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, optionbl);
            rfturn nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, optionbl);
            rfturn nfw CompositfPrintfrPbrsfr(printfrPbrsfrs, optionbl);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            int lfngti = buf.lfngti();
            int lfngti = buf.lfngti();
            int lfngti = buf.lfngti();
            int lfngti = buf.lfngti();
            int lfngti = buf.lfngti();
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
            }
            }
            }
            }
            }
            try {
            try {
            try {
            try {
            try {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                    if (pp.formbt(dontfxt, buf) == fblsf) {
                    if (pp.formbt(dontfxt, buf) == fblsf) {
                    if (pp.formbt(dontfxt, buf) == fblsf) {
                    if (pp.formbt(dontfxt, buf) == fblsf) {
                    if (pp.formbt(dontfxt, buf) == fblsf) {
                        buf.sftLfngti(lfngti);  // rfsft bufffr
                        buf.sftLfngti(lfngti);  // rfsft bufffr
                        buf.sftLfngti(lfngti);  // rfsft bufffr
                        buf.sftLfngti(lfngti);  // rfsft bufffr
                        buf.sftLfngti(lfngti);  // rfsft bufffr
                        rfturn truf;
                        rfturn truf;
                        rfturn truf;
                        rfturn truf;
                        rfturn truf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            } finblly {
            } finblly {
            } finblly {
            } finblly {
            } finblly {
                if (optionbl) {
                if (optionbl) {
                if (optionbl) {
                if (optionbl) {
                if (optionbl) {
                    dontfxt.fndOptionbl();
                    dontfxt.fndOptionbl();
                    dontfxt.fndOptionbl();
                    dontfxt.fndOptionbl();
                    dontfxt.fndOptionbl();
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
            if (optionbl) {
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                dontfxt.stbrtOptionbl();
                int pos = position;
                int pos = position;
                int pos = position;
                int pos = position;
                int pos = position;
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                    pos = pp.pbrsf(dontfxt, tfxt, pos);
                    pos = pp.pbrsf(dontfxt, tfxt, pos);
                    pos = pp.pbrsf(dontfxt, tfxt, pos);
                    pos = pp.pbrsf(dontfxt, tfxt, pos);
                    pos = pp.pbrsf(dontfxt, tfxt, pos);
                    if (pos < 0) {
                    if (pos < 0) {
                    if (pos < 0) {
                    if (pos < 0) {
                    if (pos < 0) {
                        dontfxt.fndOptionbl(fblsf);
                        dontfxt.fndOptionbl(fblsf);
                        dontfxt.fndOptionbl(fblsf);
                        dontfxt.fndOptionbl(fblsf);
                        dontfxt.fndOptionbl(fblsf);
                        rfturn position;  // rfturn originbl position
                        rfturn position;  // rfturn originbl position
                        rfturn position;  // rfturn originbl position
                        rfturn position;  // rfturn originbl position
                        rfturn position;  // rfturn originbl position
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                dontfxt.fndOptionbl(truf);
                dontfxt.fndOptionbl(truf);
                dontfxt.fndOptionbl(truf);
                dontfxt.fndOptionbl(truf);
                dontfxt.fndOptionbl(truf);
                rfturn pos;
                rfturn pos;
                rfturn pos;
                rfturn pos;
                rfturn pos;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                    position = pp.pbrsf(dontfxt, tfxt, position);
                    position = pp.pbrsf(dontfxt, tfxt, position);
                    position = pp.pbrsf(dontfxt, tfxt, position);
                    position = pp.pbrsf(dontfxt, tfxt, position);
                    position = pp.pbrsf(dontfxt, tfxt, position);
                    if (position < 0) {
                    if (position < 0) {
                    if (position < 0) {
                    if (position < 0) {
                    if (position < 0) {
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            StringBuildfr buf = nfw StringBuildfr();
            StringBuildfr buf = nfw StringBuildfr();
            StringBuildfr buf = nfw StringBuildfr();
            StringBuildfr buf = nfw StringBuildfr();
            StringBuildfr buf = nfw StringBuildfr();
            if (printfrPbrsfrs != null) {
            if (printfrPbrsfrs != null) {
            if (printfrPbrsfrs != null) {
            if (printfrPbrsfrs != null) {
            if (printfrPbrsfrs != null) {
                buf.bppfnd(optionbl ? "[" : "(");
                buf.bppfnd(optionbl ? "[" : "(");
                buf.bppfnd(optionbl ? "[" : "(");
                buf.bppfnd(optionbl ? "[" : "(");
                buf.bppfnd(optionbl ? "[" : "(");
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                for (DbtfTimfPrintfrPbrsfr pp : printfrPbrsfrs) {
                    buf.bppfnd(pp);
                    buf.bppfnd(pp);
                    buf.bppfnd(pp);
                    buf.bppfnd(pp);
                    buf.bppfnd(pp);
                }
                }
                }
                }
                }
                buf.bppfnd(optionbl ? "]" : ")");
                buf.bppfnd(optionbl ? "]" : ")");
                buf.bppfnd(optionbl ? "]" : ")");
                buf.bppfnd(optionbl ? "]" : ")");
                buf.bppfnd(optionbl ? "]" : ")");
            }
            }
            }
            }
            }
            rfturn buf.toString();
            rfturn buf.toString();
            rfturn buf.toString();
            rfturn buf.toString();
            rfturn buf.toString();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Pbds tif output to b fixfd widti.
     * Pbds tif output to b fixfd widti.
     * Pbds tif output to b fixfd widti.
     * Pbds tif output to b fixfd widti.
     * Pbds tif output to b fixfd widti.
     */
     */
     */
     */
     */
    stbtid finbl dlbss PbdPrintfrPbrsfrDfdorbtor implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss PbdPrintfrPbrsfrDfdorbtor implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss PbdPrintfrPbrsfrDfdorbtor implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss PbdPrintfrPbrsfrDfdorbtor implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss PbdPrintfrPbrsfrDfdorbtor implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl DbtfTimfPrintfrPbrsfr printfrPbrsfr;
        privbtf finbl DbtfTimfPrintfrPbrsfr printfrPbrsfr;
        privbtf finbl DbtfTimfPrintfrPbrsfr printfrPbrsfr;
        privbtf finbl DbtfTimfPrintfrPbrsfr printfrPbrsfr;
        privbtf finbl DbtfTimfPrintfrPbrsfr printfrPbrsfr;
        privbtf finbl int pbdWidti;
        privbtf finbl int pbdWidti;
        privbtf finbl int pbdWidti;
        privbtf finbl int pbdWidti;
        privbtf finbl int pbdWidti;
        privbtf finbl dibr pbdCibr;
        privbtf finbl dibr pbdCibr;
        privbtf finbl dibr pbdCibr;
        privbtf finbl dibr pbdCibr;
        privbtf finbl dibr pbdCibr;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm printfrPbrsfr  tif printfr, not null
         * @pbrbm printfrPbrsfr  tif printfr, not null
         * @pbrbm printfrPbrsfr  tif printfr, not null
         * @pbrbm printfrPbrsfr  tif printfr, not null
         * @pbrbm printfrPbrsfr  tif printfr, not null
         * @pbrbm pbdWidti  tif widti to pbd to, 1 or grfbtfr
         * @pbrbm pbdWidti  tif widti to pbd to, 1 or grfbtfr
         * @pbrbm pbdWidti  tif widti to pbd to, 1 or grfbtfr
         * @pbrbm pbdWidti  tif widti to pbd to, 1 or grfbtfr
         * @pbrbm pbdWidti  tif widti to pbd to, 1 or grfbtfr
         * @pbrbm pbdCibr  tif pbd dibrbdtfr
         * @pbrbm pbdCibr  tif pbd dibrbdtfr
         * @pbrbm pbdCibr  tif pbd dibrbdtfr
         * @pbrbm pbdCibr  tif pbd dibrbdtfr
         * @pbrbm pbdCibr  tif pbd dibrbdtfr
         */
         */
         */
         */
         */
        PbdPrintfrPbrsfrDfdorbtor(DbtfTimfPrintfrPbrsfr printfrPbrsfr, int pbdWidti, dibr pbdCibr) {
        PbdPrintfrPbrsfrDfdorbtor(DbtfTimfPrintfrPbrsfr printfrPbrsfr, int pbdWidti, dibr pbdCibr) {
        PbdPrintfrPbrsfrDfdorbtor(DbtfTimfPrintfrPbrsfr printfrPbrsfr, int pbdWidti, dibr pbdCibr) {
        PbdPrintfrPbrsfrDfdorbtor(DbtfTimfPrintfrPbrsfr printfrPbrsfr, int pbdWidti, dibr pbdCibr) {
        PbdPrintfrPbrsfrDfdorbtor(DbtfTimfPrintfrPbrsfr printfrPbrsfr, int pbdWidti, dibr pbdCibr) {
            // input difdkfd by DbtfTimfFormbttfrBuildfr
            // input difdkfd by DbtfTimfFormbttfrBuildfr
            // input difdkfd by DbtfTimfFormbttfrBuildfr
            // input difdkfd by DbtfTimfFormbttfrBuildfr
            // input difdkfd by DbtfTimfFormbttfrBuildfr
            tiis.printfrPbrsfr = printfrPbrsfr;
            tiis.printfrPbrsfr = printfrPbrsfr;
            tiis.printfrPbrsfr = printfrPbrsfr;
            tiis.printfrPbrsfr = printfrPbrsfr;
            tiis.printfrPbrsfr = printfrPbrsfr;
            tiis.pbdWidti = pbdWidti;
            tiis.pbdWidti = pbdWidti;
            tiis.pbdWidti = pbdWidti;
            tiis.pbdWidti = pbdWidti;
            tiis.pbdWidti = pbdWidti;
            tiis.pbdCibr = pbdCibr;
            tiis.pbdCibr = pbdCibr;
            tiis.pbdCibr = pbdCibr;
            tiis.pbdCibr = pbdCibr;
            tiis.pbdCibr = pbdCibr;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            int prfLfn = buf.lfngti();
            int prfLfn = buf.lfngti();
            int prfLfn = buf.lfngti();
            int prfLfn = buf.lfngti();
            int prfLfn = buf.lfngti();
            if (printfrPbrsfr.formbt(dontfxt, buf) == fblsf) {
            if (printfrPbrsfr.formbt(dontfxt, buf) == fblsf) {
            if (printfrPbrsfr.formbt(dontfxt, buf) == fblsf) {
            if (printfrPbrsfr.formbt(dontfxt, buf) == fblsf) {
            if (printfrPbrsfr.formbt(dontfxt, buf) == fblsf) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            int lfn = buf.lfngti() - prfLfn;
            int lfn = buf.lfngti() - prfLfn;
            int lfn = buf.lfngti() - prfLfn;
            int lfn = buf.lfngti() - prfLfn;
            int lfn = buf.lfngti() - prfLfn;
            if (lfn > pbdWidti) {
            if (lfn > pbdWidti) {
            if (lfn > pbdWidti) {
            if (lfn > pbdWidti) {
            if (lfn > pbdWidti) {
                tirow nfw DbtfTimfExdfption(
                tirow nfw DbtfTimfExdfption(
                tirow nfw DbtfTimfExdfption(
                tirow nfw DbtfTimfExdfption(
                tirow nfw DbtfTimfExdfption(
                    "Cbnnot print bs output of " + lfn + " dibrbdtfrs fxdffds pbd widti of " + pbdWidti);
                    "Cbnnot print bs output of " + lfn + " dibrbdtfrs fxdffds pbd widti of " + pbdWidti);
                    "Cbnnot print bs output of " + lfn + " dibrbdtfrs fxdffds pbd widti of " + pbdWidti);
                    "Cbnnot print bs output of " + lfn + " dibrbdtfrs fxdffds pbd widti of " + pbdWidti);
                    "Cbnnot print bs output of " + lfn + " dibrbdtfrs fxdffds pbd widti of " + pbdWidti);
            }
            }
            }
            }
            }
            for (int i = 0; i < pbdWidti - lfn; i++) {
            for (int i = 0; i < pbdWidti - lfn; i++) {
            for (int i = 0; i < pbdWidti - lfn; i++) {
            for (int i = 0; i < pbdWidti - lfn; i++) {
            for (int i = 0; i < pbdWidti - lfn; i++) {
                buf.insfrt(prfLfn, pbdCibr);
                buf.insfrt(prfLfn, pbdCibr);
                buf.insfrt(prfLfn, pbdCibr);
                buf.insfrt(prfLfn, pbdCibr);
                buf.insfrt(prfLfn, pbdCibr);
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            // dbdif dontfxt bfforf dibngfd by dfdorbtfd pbrsfr
            // dbdif dontfxt bfforf dibngfd by dfdorbtfd pbrsfr
            // dbdif dontfxt bfforf dibngfd by dfdorbtfd pbrsfr
            // dbdif dontfxt bfforf dibngfd by dfdorbtfd pbrsfr
            // dbdif dontfxt bfforf dibngfd by dfdorbtfd pbrsfr
            finbl boolfbn stridt = dontfxt.isStridt();
            finbl boolfbn stridt = dontfxt.isStridt();
            finbl boolfbn stridt = dontfxt.isStridt();
            finbl boolfbn stridt = dontfxt.isStridt();
            finbl boolfbn stridt = dontfxt.isStridt();
            // pbrsf
            // pbrsf
            // pbrsf
            // pbrsf
            // pbrsf
            if (position > tfxt.lfngti()) {
            if (position > tfxt.lfngti()) {
            if (position > tfxt.lfngti()) {
            if (position > tfxt.lfngti()) {
            if (position > tfxt.lfngti()) {
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
            }
            }
            }
            }
            }
            if (position == tfxt.lfngti()) {
            if (position == tfxt.lfngti()) {
            if (position == tfxt.lfngti()) {
            if (position == tfxt.lfngti()) {
            if (position == tfxt.lfngti()) {
                rfturn ~position;  // no morf dibrbdtfrs in tif string
                rfturn ~position;  // no morf dibrbdtfrs in tif string
                rfturn ~position;  // no morf dibrbdtfrs in tif string
                rfturn ~position;  // no morf dibrbdtfrs in tif string
                rfturn ~position;  // no morf dibrbdtfrs in tif string
            }
            }
            }
            }
            }
            int fndPos = position + pbdWidti;
            int fndPos = position + pbdWidti;
            int fndPos = position + pbdWidti;
            int fndPos = position + pbdWidti;
            int fndPos = position + pbdWidti;
            if (fndPos > tfxt.lfngti()) {
            if (fndPos > tfxt.lfngti()) {
            if (fndPos > tfxt.lfngti()) {
            if (fndPos > tfxt.lfngti()) {
            if (fndPos > tfxt.lfngti()) {
                if (stridt) {
                if (stridt) {
                if (stridt) {
                if (stridt) {
                if (stridt) {
                    rfturn ~position;  // not fnougi dibrbdtfrs in tif string to mfft tif pbrsf widti
                    rfturn ~position;  // not fnougi dibrbdtfrs in tif string to mfft tif pbrsf widti
                    rfturn ~position;  // not fnougi dibrbdtfrs in tif string to mfft tif pbrsf widti
                    rfturn ~position;  // not fnougi dibrbdtfrs in tif string to mfft tif pbrsf widti
                    rfturn ~position;  // not fnougi dibrbdtfrs in tif string to mfft tif pbrsf widti
                }
                }
                }
                }
                }
                fndPos = tfxt.lfngti();
                fndPos = tfxt.lfngti();
                fndPos = tfxt.lfngti();
                fndPos = tfxt.lfngti();
                fndPos = tfxt.lfngti();
            }
            }
            }
            }
            }
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            wiilf (pos < fndPos && dontfxt.dibrEqubls(tfxt.dibrAt(pos), pbdCibr)) {
            wiilf (pos < fndPos && dontfxt.dibrEqubls(tfxt.dibrAt(pos), pbdCibr)) {
            wiilf (pos < fndPos && dontfxt.dibrEqubls(tfxt.dibrAt(pos), pbdCibr)) {
            wiilf (pos < fndPos && dontfxt.dibrEqubls(tfxt.dibrAt(pos), pbdCibr)) {
            wiilf (pos < fndPos && dontfxt.dibrEqubls(tfxt.dibrAt(pos), pbdCibr)) {
                pos++;
                pos++;
                pos++;
                pos++;
                pos++;
            }
            }
            }
            }
            }
            tfxt = tfxt.subSfqufndf(0, fndPos);
            tfxt = tfxt.subSfqufndf(0, fndPos);
            tfxt = tfxt.subSfqufndf(0, fndPos);
            tfxt = tfxt.subSfqufndf(0, fndPos);
            tfxt = tfxt.subSfqufndf(0, fndPos);
            int rfsultPos = printfrPbrsfr.pbrsf(dontfxt, tfxt, pos);
            int rfsultPos = printfrPbrsfr.pbrsf(dontfxt, tfxt, pos);
            int rfsultPos = printfrPbrsfr.pbrsf(dontfxt, tfxt, pos);
            int rfsultPos = printfrPbrsfr.pbrsf(dontfxt, tfxt, pos);
            int rfsultPos = printfrPbrsfr.pbrsf(dontfxt, tfxt, pos);
            if (rfsultPos != fndPos && stridt) {
            if (rfsultPos != fndPos && stridt) {
            if (rfsultPos != fndPos && stridt) {
            if (rfsultPos != fndPos && stridt) {
            if (rfsultPos != fndPos && stridt) {
                rfturn ~(position + pos);  // pbrsf of dfdorbtfd fifld didn't pbrsf to tif fnd
                rfturn ~(position + pos);  // pbrsf of dfdorbtfd fifld didn't pbrsf to tif fnd
                rfturn ~(position + pos);  // pbrsf of dfdorbtfd fifld didn't pbrsf to tif fnd
                rfturn ~(position + pos);  // pbrsf of dfdorbtfd fifld didn't pbrsf to tif fnd
                rfturn ~(position + pos);  // pbrsf of dfdorbtfd fifld didn't pbrsf to tif fnd
            }
            }
            }
            }
            }
            rfturn rfsultPos;
            rfturn rfsultPos;
            rfturn rfsultPos;
            rfturn rfsultPos;
            rfturn rfsultPos;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn "Pbd(" + printfrPbrsfr + "," + pbdWidti + (pbdCibr == ' ' ? ")" : ",'" + pbdCibr + "')");
            rfturn "Pbd(" + printfrPbrsfr + "," + pbdWidti + (pbdCibr == ' ' ? ")" : ",'" + pbdCibr + "')");
            rfturn "Pbd(" + printfrPbrsfr + "," + pbdWidti + (pbdCibr == ' ' ? ")" : ",'" + pbdCibr + "')");
            rfturn "Pbd(" + printfrPbrsfr + "," + pbdWidti + (pbdCibr == ' ' ? ")" : ",'" + pbdCibr + "')");
            rfturn "Pbd(" + printfrPbrsfr + "," + pbdWidti + (pbdCibr == ' ' ? ")" : ",'" + pbdCibr + "')");
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Enumfrbtion to bpply simplf pbrsf sfttings.
     * Enumfrbtion to bpply simplf pbrsf sfttings.
     * Enumfrbtion to bpply simplf pbrsf sfttings.
     * Enumfrbtion to bpply simplf pbrsf sfttings.
     * Enumfrbtion to bpply simplf pbrsf sfttings.
     */
     */
     */
     */
     */
    stbtid fnum SfttingsPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid fnum SfttingsPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid fnum SfttingsPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid fnum SfttingsPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid fnum SfttingsPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        SENSITIVE,
        SENSITIVE,
        SENSITIVE,
        SENSITIVE,
        SENSITIVE,
        INSENSITIVE,
        INSENSITIVE,
        INSENSITIVE,
        INSENSITIVE,
        INSENSITIVE,
        STRICT,
        STRICT,
        STRICT,
        STRICT,
        STRICT,
        LENIENT;
        LENIENT;
        LENIENT;
        LENIENT;
        LENIENT;





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            rfturn truf;  // notiing to do ifrf
            rfturn truf;  // notiing to do ifrf
            rfturn truf;  // notiing to do ifrf
            rfturn truf;  // notiing to do ifrf
            rfturn truf;  // notiing to do ifrf
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
                dbsf 0: dontfxt.sftCbsfSfnsitivf(truf); brfbk;
                dbsf 0: dontfxt.sftCbsfSfnsitivf(truf); brfbk;
                dbsf 0: dontfxt.sftCbsfSfnsitivf(truf); brfbk;
                dbsf 0: dontfxt.sftCbsfSfnsitivf(truf); brfbk;
                dbsf 0: dontfxt.sftCbsfSfnsitivf(truf); brfbk;
                dbsf 1: dontfxt.sftCbsfSfnsitivf(fblsf); brfbk;
                dbsf 1: dontfxt.sftCbsfSfnsitivf(fblsf); brfbk;
                dbsf 1: dontfxt.sftCbsfSfnsitivf(fblsf); brfbk;
                dbsf 1: dontfxt.sftCbsfSfnsitivf(fblsf); brfbk;
                dbsf 1: dontfxt.sftCbsfSfnsitivf(fblsf); brfbk;
                dbsf 2: dontfxt.sftStridt(truf); brfbk;
                dbsf 2: dontfxt.sftStridt(truf); brfbk;
                dbsf 2: dontfxt.sftStridt(truf); brfbk;
                dbsf 2: dontfxt.sftStridt(truf); brfbk;
                dbsf 2: dontfxt.sftStridt(truf); brfbk;
                dbsf 3: dontfxt.sftStridt(fblsf); brfbk;
                dbsf 3: dontfxt.sftStridt(fblsf); brfbk;
                dbsf 3: dontfxt.sftStridt(fblsf); brfbk;
                dbsf 3: dontfxt.sftStridt(fblsf); brfbk;
                dbsf 3: dontfxt.sftStridt(fblsf); brfbk;
            }
            }
            }
            }
            }
            rfturn position;
            rfturn position;
            rfturn position;
            rfturn position;
            rfturn position;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            // using ordinbls to bvoid jbvbd syntiftid innfr dlbss
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
            switdi (ordinbl()) {
                dbsf 0: rfturn "PbrsfCbsfSfnsitivf(truf)";
                dbsf 0: rfturn "PbrsfCbsfSfnsitivf(truf)";
                dbsf 0: rfturn "PbrsfCbsfSfnsitivf(truf)";
                dbsf 0: rfturn "PbrsfCbsfSfnsitivf(truf)";
                dbsf 0: rfturn "PbrsfCbsfSfnsitivf(truf)";
                dbsf 1: rfturn "PbrsfCbsfSfnsitivf(fblsf)";
                dbsf 1: rfturn "PbrsfCbsfSfnsitivf(fblsf)";
                dbsf 1: rfturn "PbrsfCbsfSfnsitivf(fblsf)";
                dbsf 1: rfturn "PbrsfCbsfSfnsitivf(fblsf)";
                dbsf 1: rfturn "PbrsfCbsfSfnsitivf(fblsf)";
                dbsf 2: rfturn "PbrsfStridt(truf)";
                dbsf 2: rfturn "PbrsfStridt(truf)";
                dbsf 2: rfturn "PbrsfStridt(truf)";
                dbsf 2: rfturn "PbrsfStridt(truf)";
                dbsf 2: rfturn "PbrsfStridt(truf)";
                dbsf 3: rfturn "PbrsfStridt(fblsf)";
                dbsf 3: rfturn "PbrsfStridt(fblsf)";
                dbsf 3: rfturn "PbrsfStridt(fblsf)";
                dbsf 3: rfturn "PbrsfStridt(fblsf)";
                dbsf 3: rfturn "PbrsfStridt(fblsf)";
            }
            }
            }
            }
            }
            tirow nfw IllfgblStbtfExdfption("Unrfbdibblf");
            tirow nfw IllfgblStbtfExdfption("Unrfbdibblf");
            tirow nfw IllfgblStbtfExdfption("Unrfbdibblf");
            tirow nfw IllfgblStbtfExdfption("Unrfbdibblf");
            tirow nfw IllfgblStbtfExdfption("Unrfbdibblf");
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Dffbults b vbluf into tif pbrsf if not durrfntly prfsfnt.
     * Dffbults b vbluf into tif pbrsf if not durrfntly prfsfnt.
     * Dffbults b vbluf into tif pbrsf if not durrfntly prfsfnt.
     * Dffbults b vbluf into tif pbrsf if not durrfntly prfsfnt.
     * Dffbults b vbluf into tif pbrsf if not durrfntly prfsfnt.
     */
     */
     */
     */
     */
    stbtid dlbss DffbultVblufPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss DffbultVblufPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss DffbultVblufPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss DffbultVblufPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss DffbultVblufPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl long vbluf;
        privbtf finbl long vbluf;
        privbtf finbl long vbluf;
        privbtf finbl long vbluf;
        privbtf finbl long vbluf;





        DffbultVblufPbrsfr(TfmporblFifld fifld, long vbluf) {
        DffbultVblufPbrsfr(TfmporblFifld fifld, long vbluf) {
        DffbultVblufPbrsfr(TfmporblFifld fifld, long vbluf) {
        DffbultVblufPbrsfr(TfmporblFifld fifld, long vbluf) {
        DffbultVblufPbrsfr(TfmporblFifld fifld, long vbluf) {
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.vbluf = vbluf;
            tiis.vbluf = vbluf;
            tiis.vbluf = vbluf;
            tiis.vbluf = vbluf;
            tiis.vbluf = vbluf;
        }
        }
        }
        }
        }





        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            if (dontfxt.gftPbrsfd(fifld) == null) {
            if (dontfxt.gftPbrsfd(fifld) == null) {
            if (dontfxt.gftPbrsfd(fifld) == null) {
            if (dontfxt.gftPbrsfd(fifld) == null) {
            if (dontfxt.gftPbrsfd(fifld) == null) {
                dontfxt.sftPbrsfdFifld(fifld, vbluf, position, position);
                dontfxt.sftPbrsfdFifld(fifld, vbluf, position, position);
                dontfxt.sftPbrsfdFifld(fifld, vbluf, position, position);
                dontfxt.sftPbrsfdFifld(fifld, vbluf, position, position);
                dontfxt.sftPbrsfdFifld(fifld, vbluf, position, position);
            }
            }
            }
            }
            }
            rfturn position;
            rfturn position;
            rfturn position;
            rfturn position;
            rfturn position;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b dibrbdtfr litfrbl.
     * Prints or pbrsfs b dibrbdtfr litfrbl.
     * Prints or pbrsfs b dibrbdtfr litfrbl.
     * Prints or pbrsfs b dibrbdtfr litfrbl.
     * Prints or pbrsfs b dibrbdtfr litfrbl.
     */
     */
     */
     */
     */
    stbtid finbl dlbss CibrLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CibrLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CibrLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CibrLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CibrLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl dibr litfrbl;
        privbtf finbl dibr litfrbl;
        privbtf finbl dibr litfrbl;
        privbtf finbl dibr litfrbl;
        privbtf finbl dibr litfrbl;





        CibrLitfrblPrintfrPbrsfr(dibr litfrbl) {
        CibrLitfrblPrintfrPbrsfr(dibr litfrbl) {
        CibrLitfrblPrintfrPbrsfr(dibr litfrbl) {
        CibrLitfrblPrintfrPbrsfr(dibr litfrbl) {
        CibrLitfrblPrintfrPbrsfr(dibr litfrbl) {
            tiis.litfrbl = litfrbl;
            tiis.litfrbl = litfrbl;
            tiis.litfrbl = litfrbl;
            tiis.litfrbl = litfrbl;
            tiis.litfrbl = litfrbl;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            dibr di = tfxt.dibrAt(position);
            dibr di = tfxt.dibrAt(position);
            dibr di = tfxt.dibrAt(position);
            dibr di = tfxt.dibrAt(position);
            dibr di = tfxt.dibrAt(position);
            if (di != litfrbl) {
            if (di != litfrbl) {
            if (di != litfrbl) {
            if (di != litfrbl) {
            if (di != litfrbl) {
                if (dontfxt.isCbsfSfnsitivf() ||
                if (dontfxt.isCbsfSfnsitivf() ||
                if (dontfxt.isCbsfSfnsitivf() ||
                if (dontfxt.isCbsfSfnsitivf() ||
                if (dontfxt.isCbsfSfnsitivf() ||
                        (Cibrbdtfr.toUppfrCbsf(di) != Cibrbdtfr.toUppfrCbsf(litfrbl) &&
                        (Cibrbdtfr.toUppfrCbsf(di) != Cibrbdtfr.toUppfrCbsf(litfrbl) &&
                        (Cibrbdtfr.toUppfrCbsf(di) != Cibrbdtfr.toUppfrCbsf(litfrbl) &&
                        (Cibrbdtfr.toUppfrCbsf(di) != Cibrbdtfr.toUppfrCbsf(litfrbl) &&
                        (Cibrbdtfr.toUppfrCbsf(di) != Cibrbdtfr.toUppfrCbsf(litfrbl) &&
                         Cibrbdtfr.toLowfrCbsf(di) != Cibrbdtfr.toLowfrCbsf(litfrbl))) {
                         Cibrbdtfr.toLowfrCbsf(di) != Cibrbdtfr.toLowfrCbsf(litfrbl))) {
                         Cibrbdtfr.toLowfrCbsf(di) != Cibrbdtfr.toLowfrCbsf(litfrbl))) {
                         Cibrbdtfr.toLowfrCbsf(di) != Cibrbdtfr.toLowfrCbsf(litfrbl))) {
                         Cibrbdtfr.toLowfrCbsf(di) != Cibrbdtfr.toLowfrCbsf(litfrbl))) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn position + 1;
            rfturn position + 1;
            rfturn position + 1;
            rfturn position + 1;
            rfturn position + 1;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            if (litfrbl == '\'') {
            if (litfrbl == '\'') {
            if (litfrbl == '\'') {
            if (litfrbl == '\'') {
            if (litfrbl == '\'') {
                rfturn "''";
                rfturn "''";
                rfturn "''";
                rfturn "''";
                rfturn "''";
            }
            }
            }
            }
            }
            rfturn "'" + litfrbl + "'";
            rfturn "'" + litfrbl + "'";
            rfturn "'" + litfrbl + "'";
            rfturn "'" + litfrbl + "'";
            rfturn "'" + litfrbl + "'";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b string litfrbl.
     * Prints or pbrsfs b string litfrbl.
     * Prints or pbrsfs b string litfrbl.
     * Prints or pbrsfs b string litfrbl.
     * Prints or pbrsfs b string litfrbl.
     */
     */
     */
     */
     */
    stbtid finbl dlbss StringLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss StringLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss StringLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss StringLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss StringLitfrblPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl String litfrbl;
        privbtf finbl String litfrbl;
        privbtf finbl String litfrbl;
        privbtf finbl String litfrbl;
        privbtf finbl String litfrbl;





        StringLitfrblPrintfrPbrsfr(String litfrbl) {
        StringLitfrblPrintfrPbrsfr(String litfrbl) {
        StringLitfrblPrintfrPbrsfr(String litfrbl) {
        StringLitfrblPrintfrPbrsfr(String litfrbl) {
        StringLitfrblPrintfrPbrsfr(String litfrbl) {
            tiis.litfrbl = litfrbl;  // vblidbtfd by dbllfr
            tiis.litfrbl = litfrbl;  // vblidbtfd by dbllfr
            tiis.litfrbl = litfrbl;  // vblidbtfd by dbllfr
            tiis.litfrbl = litfrbl;  // vblidbtfd by dbllfr
            tiis.litfrbl = litfrbl;  // vblidbtfd by dbllfr
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            buf.bppfnd(litfrbl);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            if (position > lfngti || position < 0) {
            if (position > lfngti || position < 0) {
            if (position > lfngti || position < 0) {
            if (position > lfngti || position < 0) {
            if (position > lfngti || position < 0) {
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
            }
            }
            }
            }
            }
            if (dontfxt.subSfqufndfEqubls(tfxt, position, litfrbl, 0, litfrbl.lfngti()) == fblsf) {
            if (dontfxt.subSfqufndfEqubls(tfxt, position, litfrbl, 0, litfrbl.lfngti()) == fblsf) {
            if (dontfxt.subSfqufndfEqubls(tfxt, position, litfrbl, 0, litfrbl.lfngti()) == fblsf) {
            if (dontfxt.subSfqufndfEqubls(tfxt, position, litfrbl, 0, litfrbl.lfngti()) == fblsf) {
            if (dontfxt.subSfqufndfEqubls(tfxt, position, litfrbl, 0, litfrbl.lfngti()) == fblsf) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            rfturn position + litfrbl.lfngti();
            rfturn position + litfrbl.lfngti();
            rfturn position + litfrbl.lfngti();
            rfturn position + litfrbl.lfngti();
            rfturn position + litfrbl.lfngti();
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            String donvfrtfd = litfrbl.rfplbdf("'", "''");
            String donvfrtfd = litfrbl.rfplbdf("'", "''");
            String donvfrtfd = litfrbl.rfplbdf("'", "''");
            String donvfrtfd = litfrbl.rfplbdf("'", "''");
            String donvfrtfd = litfrbl.rfplbdf("'", "''");
            rfturn "'" + donvfrtfd + "'";
            rfturn "'" + donvfrtfd + "'";
            rfturn "'" + donvfrtfd + "'";
            rfturn "'" + donvfrtfd + "'";
            rfturn "'" + donvfrtfd + "'";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     */
     */
     */
     */
     */
    stbtid dlbss NumbfrPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss NumbfrPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss NumbfrPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss NumbfrPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss NumbfrPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {





        /**
        /**
        /**
        /**
        /**
         * Arrby of 10 to tif powfr of n.
         * Arrby of 10 to tif powfr of n.
         * Arrby of 10 to tif powfr of n.
         * Arrby of 10 to tif powfr of n.
         * Arrby of 10 to tif powfr of n.
         */
         */
         */
         */
         */
        stbtid finbl long[] EXCEED_POINTS = nfw long[] {
        stbtid finbl long[] EXCEED_POINTS = nfw long[] {
        stbtid finbl long[] EXCEED_POINTS = nfw long[] {
        stbtid finbl long[] EXCEED_POINTS = nfw long[] {
        stbtid finbl long[] EXCEED_POINTS = nfw long[] {
            0L,
            0L,
            0L,
            0L,
            0L,
            10L,
            10L,
            10L,
            10L,
            10L,
            100L,
            100L,
            100L,
            100L,
            100L,
            1000L,
            1000L,
            1000L,
            1000L,
            1000L,
            10000L,
            10000L,
            10000L,
            10000L,
            10000L,
            100000L,
            100000L,
            100000L,
            100000L,
            100000L,
            1000000L,
            1000000L,
            1000000L,
            1000000L,
            1000000L,
            10000000L,
            10000000L,
            10000000L,
            10000000L,
            10000000L,
            100000000L,
            100000000L,
            100000000L,
            100000000L,
            100000000L,
            1000000000L,
            1000000000L,
            1000000000L,
            1000000000L,
            1000000000L,
            10000000000L,
            10000000000L,
            10000000000L,
            10000000000L,
            10000000000L,
        };
        };
        };
        };
        };





        finbl TfmporblFifld fifld;
        finbl TfmporblFifld fifld;
        finbl TfmporblFifld fifld;
        finbl TfmporblFifld fifld;
        finbl TfmporblFifld fifld;
        finbl int minWidti;
        finbl int minWidti;
        finbl int minWidti;
        finbl int minWidti;
        finbl int minWidti;
        finbl int mbxWidti;
        finbl int mbxWidti;
        finbl int mbxWidti;
        finbl int mbxWidti;
        finbl int mbxWidti;
        privbtf finbl SignStylf signStylf;
        privbtf finbl SignStylf signStylf;
        privbtf finbl SignStylf signStylf;
        privbtf finbl SignStylf signStylf;
        privbtf finbl SignStylf signStylf;
        finbl int subsfqufntWidti;
        finbl int subsfqufntWidti;
        finbl int subsfqufntWidti;
        finbl int subsfqufntWidti;
        finbl int subsfqufntWidti;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         */
         */
         */
         */
         */
        NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
        NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
        NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
        NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
        NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf) {
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.subsfqufntWidti = 0;
            tiis.subsfqufntWidti = 0;
            tiis.subsfqufntWidti = 0;
            tiis.subsfqufntWidti = 0;
            tiis.subsfqufntWidti = 0;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm fifld  tif fifld to formbt, not null
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm mbxWidti  tif mbximum fifld widti, from minWidti to 19
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm signStylf  tif positivf/nfgbtivf sign stylf, not null
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr,
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr,
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr,
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr,
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr,
         *  -1 if fixfd widti duf to bdtivf bdjbdfnt pbrsing
         *  -1 if fixfd widti duf to bdtivf bdjbdfnt pbrsing
         *  -1 if fixfd widti duf to bdtivf bdjbdfnt pbrsing
         *  -1 if fixfd widti duf to bdtivf bdjbdfnt pbrsing
         *  -1 if fixfd widti duf to bdtivf bdjbdfnt pbrsing
         */
         */
         */
         */
         */
        protfdtfd NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf, int subsfqufntWidti) {
        protfdtfd NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf, int subsfqufntWidti) {
        protfdtfd NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf, int subsfqufntWidti) {
        protfdtfd NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf, int subsfqufntWidti) {
        protfdtfd NumbfrPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, SignStylf signStylf, int subsfqufntWidti) {
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.signStylf = signStylf;
            tiis.subsfqufntWidti = subsfqufntWidti;
            tiis.subsfqufntWidti = subsfqufntWidti;
            tiis.subsfqufntWidti = subsfqufntWidti;
            tiis.subsfqufntWidti = subsfqufntWidti;
            tiis.subsfqufntWidti = subsfqufntWidti;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         *
         *
         *
         *
         *
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         */
         */
         */
         */
         */
        NumbfrPrintfrPbrsfr witiFixfdWidti() {
        NumbfrPrintfrPbrsfr witiFixfdWidti() {
        NumbfrPrintfrPbrsfr witiFixfdWidti() {
        NumbfrPrintfrPbrsfr witiFixfdWidti() {
        NumbfrPrintfrPbrsfr witiFixfdWidti() {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, -1);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, -1);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, -1);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, -1);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, -1);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         *
         *
         *
         *
         *
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         */
         */
         */
         */
         */
        NumbfrPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        NumbfrPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        NumbfrPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        NumbfrPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        NumbfrPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, tiis.subsfqufntWidti + subsfqufntWidti);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, tiis.subsfqufntWidti + subsfqufntWidti);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, tiis.subsfqufntWidti + subsfqufntWidti);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, tiis.subsfqufntWidti + subsfqufntWidti);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, minWidti, mbxWidti, signStylf, tiis.subsfqufntWidti + subsfqufntWidti);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Long vblufLong = dontfxt.gftVbluf(fifld);
            Long vblufLong = dontfxt.gftVbluf(fifld);
            Long vblufLong = dontfxt.gftVbluf(fifld);
            Long vblufLong = dontfxt.gftVbluf(fifld);
            Long vblufLong = dontfxt.gftVbluf(fifld);
            if (vblufLong == null) {
            if (vblufLong == null) {
            if (vblufLong == null) {
            if (vblufLong == null) {
            if (vblufLong == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            long vbluf = gftVbluf(dontfxt, vblufLong);
            long vbluf = gftVbluf(dontfxt, vblufLong);
            long vbluf = gftVbluf(dontfxt, vblufLong);
            long vbluf = gftVbluf(dontfxt, vblufLong);
            long vbluf = gftVbluf(dontfxt, vblufLong);
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            String str = (vbluf == Long.MIN_VALUE ? "9223372036854775808" : Long.toString(Mbti.bbs(vbluf)));
            String str = (vbluf == Long.MIN_VALUE ? "9223372036854775808" : Long.toString(Mbti.bbs(vbluf)));
            String str = (vbluf == Long.MIN_VALUE ? "9223372036854775808" : Long.toString(Mbti.bbs(vbluf)));
            String str = (vbluf == Long.MIN_VALUE ? "9223372036854775808" : Long.toString(Mbti.bbs(vbluf)));
            String str = (vbluf == Long.MIN_VALUE ? "9223372036854775808" : Long.toString(Mbti.bbs(vbluf)));
            if (str.lfngti() > mbxWidti) {
            if (str.lfngti() > mbxWidti) {
            if (str.lfngti() > mbxWidti) {
            if (str.lfngti() > mbxWidti) {
            if (str.lfngti() > mbxWidti) {
                tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                    " dbnnot bf printfd bs tif vbluf " + vbluf +
                    " dbnnot bf printfd bs tif vbluf " + vbluf +
                    " dbnnot bf printfd bs tif vbluf " + vbluf +
                    " dbnnot bf printfd bs tif vbluf " + vbluf +
                    " dbnnot bf printfd bs tif vbluf " + vbluf +
                    " fxdffds tif mbximum print widti of " + mbxWidti);
                    " fxdffds tif mbximum print widti of " + mbxWidti);
                    " fxdffds tif mbximum print widti of " + mbxWidti);
                    " fxdffds tif mbximum print widti of " + mbxWidti);
                    " fxdffds tif mbximum print widti of " + mbxWidti);
            }
            }
            }
            }
            }
            str = dfdimblStylf.donvfrtNumbfrToI18N(str);
            str = dfdimblStylf.donvfrtNumbfrToI18N(str);
            str = dfdimblStylf.donvfrtNumbfrToI18N(str);
            str = dfdimblStylf.donvfrtNumbfrToI18N(str);
            str = dfdimblStylf.donvfrtNumbfrToI18N(str);





            if (vbluf >= 0) {
            if (vbluf >= 0) {
            if (vbluf >= 0) {
            if (vbluf >= 0) {
            if (vbluf >= 0) {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                        if (minWidti < 19 && vbluf >= EXCEED_POINTS[minWidti]) {
                        if (minWidti < 19 && vbluf >= EXCEED_POINTS[minWidti]) {
                        if (minWidti < 19 && vbluf >= EXCEED_POINTS[minWidti]) {
                        if (minWidti < 19 && vbluf >= EXCEED_POINTS[minWidti]) {
                        if (minWidti < 19 && vbluf >= EXCEED_POINTS[minWidti]) {
                            buf.bppfnd(dfdimblStylf.gftPositivfSign());
                            buf.bppfnd(dfdimblStylf.gftPositivfSign());
                            buf.bppfnd(dfdimblStylf.gftPositivfSign());
                            buf.bppfnd(dfdimblStylf.gftPositivfSign());
                            buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        }
                        }
                        }
                        }
                        }
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                        buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        buf.bppfnd(dfdimblStylf.gftPositivfSign());
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                switdi (signStylf) {
                    dbsf NORMAL:
                    dbsf NORMAL:
                    dbsf NORMAL:
                    dbsf NORMAL:
                    dbsf NORMAL:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf EXCEEDS_PAD:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                    dbsf ALWAYS:
                        buf.bppfnd(dfdimblStylf.gftNfgbtivfSign());
                        buf.bppfnd(dfdimblStylf.gftNfgbtivfSign());
                        buf.bppfnd(dfdimblStylf.gftNfgbtivfSign());
                        buf.bppfnd(dfdimblStylf.gftNfgbtivfSign());
                        buf.bppfnd(dfdimblStylf.gftNfgbtivfSign());
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf NOT_NEGATIVE:
                    dbsf NOT_NEGATIVE:
                    dbsf NOT_NEGATIVE:
                    dbsf NOT_NEGATIVE:
                    dbsf NOT_NEGATIVE:
                        tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                        tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                        tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                        tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                        tirow nfw DbtfTimfExdfption("Fifld " + fifld +
                            " dbnnot bf printfd bs tif vbluf " + vbluf +
                            " dbnnot bf printfd bs tif vbluf " + vbluf +
                            " dbnnot bf printfd bs tif vbluf " + vbluf +
                            " dbnnot bf printfd bs tif vbluf " + vbluf +
                            " dbnnot bf printfd bs tif vbluf " + vbluf +
                            " dbnnot bf nfgbtivf bddording to tif SignStylf");
                            " dbnnot bf nfgbtivf bddording to tif SignStylf");
                            " dbnnot bf nfgbtivf bddording to tif SignStylf");
                            " dbnnot bf nfgbtivf bddording to tif SignStylf");
                            " dbnnot bf nfgbtivf bddording to tif SignStylf");
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            for (int i = 0; i < minWidti - str.lfngti(); i++) {
            for (int i = 0; i < minWidti - str.lfngti(); i++) {
            for (int i = 0; i < minWidti - str.lfngti(); i++) {
            for (int i = 0; i < minWidti - str.lfngti(); i++) {
            for (int i = 0; i < minWidti - str.lfngti(); i++) {
                buf.bppfnd(dfdimblStylf.gftZfroDigit());
                buf.bppfnd(dfdimblStylf.gftZfroDigit());
                buf.bppfnd(dfdimblStylf.gftZfroDigit());
                buf.bppfnd(dfdimblStylf.gftZfroDigit());
                buf.bppfnd(dfdimblStylf.gftZfroDigit());
            }
            }
            }
            }
            }
            buf.bppfnd(str);
            buf.bppfnd(str);
            buf.bppfnd(str);
            buf.bppfnd(str);
            buf.bppfnd(str);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Gfts tif vbluf to output.
         * Gfts tif vbluf to output.
         * Gfts tif vbluf to output.
         * Gfts tif vbluf to output.
         * Gfts tif vbluf to output.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt  tif dontfxt
         * @pbrbm dontfxt  tif dontfxt
         * @pbrbm dontfxt  tif dontfxt
         * @pbrbm dontfxt  tif dontfxt
         * @pbrbm dontfxt  tif dontfxt
         * @pbrbm vbluf  tif vbluf of tif fifld, not null
         * @pbrbm vbluf  tif vbluf of tif fifld, not null
         * @pbrbm vbluf  tif vbluf of tif fifld, not null
         * @pbrbm vbluf  tif vbluf of tif fifld, not null
         * @pbrbm vbluf  tif vbluf of tif fifld, not null
         * @rfturn tif vbluf
         * @rfturn tif vbluf
         * @rfturn tif vbluf
         * @rfturn tif vbluf
         * @rfturn tif vbluf
         */
         */
         */
         */
         */
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * For NumbfrPrintfrPbrsfr, tif widti is fixfd dfpfnding on tif
         * For NumbfrPrintfrPbrsfr, tif widti is fixfd dfpfnding on tif
         * For NumbfrPrintfrPbrsfr, tif widti is fixfd dfpfnding on tif
         * For NumbfrPrintfrPbrsfr, tif widti is fixfd dfpfnding on tif
         * For NumbfrPrintfrPbrsfr, tif widti is fixfd dfpfnding on tif
         * minWidti, mbxWidti, signStylf bnd wiftifr subsfqufnt fiflds brf fixfd.
         * minWidti, mbxWidti, signStylf bnd wiftifr subsfqufnt fiflds brf fixfd.
         * minWidti, mbxWidti, signStylf bnd wiftifr subsfqufnt fiflds brf fixfd.
         * minWidti, mbxWidti, signStylf bnd wiftifr subsfqufnt fiflds brf fixfd.
         * minWidti, mbxWidti, signStylf bnd wiftifr subsfqufnt fiflds brf fixfd.
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @rfturn truf if tif fifld is fixfd widti
         * @rfturn truf if tif fifld is fixfd widti
         * @rfturn truf if tif fifld is fixfd widti
         * @rfturn truf if tif fifld is fixfd widti
         * @rfturn truf if tif fifld is fixfd widti
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVbluf(jbvb.timf.tfmporbl.TfmporblFifld, int)
         */
         */
         */
         */
         */
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
            rfturn subsfqufntWidti == -1 ||
            rfturn subsfqufntWidti == -1 ||
            rfturn subsfqufntWidti == -1 ||
            rfturn subsfqufntWidti == -1 ||
            rfturn subsfqufntWidti == -1 ||
                (subsfqufntWidti > 0 && minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE);
                (subsfqufntWidti > 0 && minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE);
                (subsfqufntWidti > 0 && minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE);
                (subsfqufntWidti > 0 && minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE);
                (subsfqufntWidti > 0 && minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            boolfbn nfgbtivf = fblsf;
            boolfbn nfgbtivf = fblsf;
            boolfbn nfgbtivf = fblsf;
            boolfbn nfgbtivf = fblsf;
            boolfbn nfgbtivf = fblsf;
            boolfbn positivf = fblsf;
            boolfbn positivf = fblsf;
            boolfbn positivf = fblsf;
            boolfbn positivf = fblsf;
            boolfbn positivf = fblsf;
            if (sign == dontfxt.gftDfdimblStylf().gftPositivfSign()) {
            if (sign == dontfxt.gftDfdimblStylf().gftPositivfSign()) {
            if (sign == dontfxt.gftDfdimblStylf().gftPositivfSign()) {
            if (sign == dontfxt.gftDfdimblStylf().gftPositivfSign()) {
            if (sign == dontfxt.gftDfdimblStylf().gftPositivfSign()) {
                if (signStylf.pbrsf(truf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(truf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(truf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(truf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(truf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                positivf = truf;
                positivf = truf;
                positivf = truf;
                positivf = truf;
                positivf = truf;
                position++;
                position++;
                position++;
                position++;
                position++;
            } flsf if (sign == dontfxt.gftDfdimblStylf().gftNfgbtivfSign()) {
            } flsf if (sign == dontfxt.gftDfdimblStylf().gftNfgbtivfSign()) {
            } flsf if (sign == dontfxt.gftDfdimblStylf().gftNfgbtivfSign()) {
            } flsf if (sign == dontfxt.gftDfdimblStylf().gftNfgbtivfSign()) {
            } flsf if (sign == dontfxt.gftDfdimblStylf().gftNfgbtivfSign()) {
                if (signStylf.pbrsf(fblsf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(fblsf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(fblsf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(fblsf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                if (signStylf.pbrsf(fblsf, dontfxt.isStridt(), minWidti == mbxWidti) == fblsf) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                nfgbtivf = truf;
                nfgbtivf = truf;
                nfgbtivf = truf;
                nfgbtivf = truf;
                nfgbtivf = truf;
                position++;
                position++;
                position++;
                position++;
                position++;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                if (signStylf == SignStylf.ALWAYS && dontfxt.isStridt()) {
                if (signStylf == SignStylf.ALWAYS && dontfxt.isStridt()) {
                if (signStylf == SignStylf.ALWAYS && dontfxt.isStridt()) {
                if (signStylf == SignStylf.ALWAYS && dontfxt.isStridt()) {
                if (signStylf == SignStylf.ALWAYS && dontfxt.isStridt()) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            int fffMinWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? minWidti : 1);
            int fffMinWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? minWidti : 1);
            int fffMinWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? minWidti : 1);
            int fffMinWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? minWidti : 1);
            int fffMinWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? minWidti : 1);
            int minEndPos = position + fffMinWidti;
            int minEndPos = position + fffMinWidti;
            int minEndPos = position + fffMinWidti;
            int minEndPos = position + fffMinWidti;
            int minEndPos = position + fffMinWidti;
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            int fffMbxWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? mbxWidti : 9) + Mbti.mbx(subsfqufntWidti, 0);
            int fffMbxWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? mbxWidti : 9) + Mbti.mbx(subsfqufntWidti, 0);
            int fffMbxWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? mbxWidti : 9) + Mbti.mbx(subsfqufntWidti, 0);
            int fffMbxWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? mbxWidti : 9) + Mbti.mbx(subsfqufntWidti, 0);
            int fffMbxWidti = (dontfxt.isStridt() || isFixfdWidti(dontfxt) ? mbxWidti : 9) + Mbti.mbx(subsfqufntWidti, 0);
            long totbl = 0;
            long totbl = 0;
            long totbl = 0;
            long totbl = 0;
            long totbl = 0;
            BigIntfgfr totblBig = null;
            BigIntfgfr totblBig = null;
            BigIntfgfr totblBig = null;
            BigIntfgfr totblBig = null;
            BigIntfgfr totblBig = null;
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            for (int pbss = 0; pbss < 2; pbss++) {
            for (int pbss = 0; pbss < 2; pbss++) {
            for (int pbss = 0; pbss < 2; pbss++) {
            for (int pbss = 0; pbss < 2; pbss++) {
            for (int pbss = 0; pbss < 2; pbss++) {
                int mbxEndPos = Mbti.min(pos + fffMbxWidti, lfngti);
                int mbxEndPos = Mbti.min(pos + fffMbxWidti, lfngti);
                int mbxEndPos = Mbti.min(pos + fffMbxWidti, lfngti);
                int mbxEndPos = Mbti.min(pos + fffMbxWidti, lfngti);
                int mbxEndPos = Mbti.min(pos + fffMbxWidti, lfngti);
                wiilf (pos < mbxEndPos) {
                wiilf (pos < mbxEndPos) {
                wiilf (pos < mbxEndPos) {
                wiilf (pos < mbxEndPos) {
                wiilf (pos < mbxEndPos) {
                    dibr di = tfxt.dibrAt(pos++);
                    dibr di = tfxt.dibrAt(pos++);
                    dibr di = tfxt.dibrAt(pos++);
                    dibr di = tfxt.dibrAt(pos++);
                    dibr di = tfxt.dibrAt(pos++);
                    int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                    int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                    int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                    int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                    int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                    if (digit < 0) {
                    if (digit < 0) {
                    if (digit < 0) {
                    if (digit < 0) {
                    if (digit < 0) {
                        pos--;
                        pos--;
                        pos--;
                        pos--;
                        pos--;
                        if (pos < minEndPos) {
                        if (pos < minEndPos) {
                        if (pos < minEndPos) {
                        if (pos < minEndPos) {
                        if (pos < minEndPos) {
                            rfturn ~position;  // nffd bt lfbst min widti digits
                            rfturn ~position;  // nffd bt lfbst min widti digits
                            rfturn ~position;  // nffd bt lfbst min widti digits
                            rfturn ~position;  // nffd bt lfbst min widti digits
                            rfturn ~position;  // nffd bt lfbst min widti digits
                        }
                        }
                        }
                        }
                        }
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    }
                    }
                    }
                    }
                    }
                    if ((pos - position) > 18) {
                    if ((pos - position) > 18) {
                    if ((pos - position) > 18) {
                    if ((pos - position) > 18) {
                    if ((pos - position) > 18) {
                        if (totblBig == null) {
                        if (totblBig == null) {
                        if (totblBig == null) {
                        if (totblBig == null) {
                        if (totblBig == null) {
                            totblBig = BigIntfgfr.vblufOf(totbl);
                            totblBig = BigIntfgfr.vblufOf(totbl);
                            totblBig = BigIntfgfr.vblufOf(totbl);
                            totblBig = BigIntfgfr.vblufOf(totbl);
                            totblBig = BigIntfgfr.vblufOf(totbl);
                        }
                        }
                        }
                        }
                        }
                        totblBig = totblBig.multiply(BigIntfgfr.TEN).bdd(BigIntfgfr.vblufOf(digit));
                        totblBig = totblBig.multiply(BigIntfgfr.TEN).bdd(BigIntfgfr.vblufOf(digit));
                        totblBig = totblBig.multiply(BigIntfgfr.TEN).bdd(BigIntfgfr.vblufOf(digit));
                        totblBig = totblBig.multiply(BigIntfgfr.TEN).bdd(BigIntfgfr.vblufOf(digit));
                        totblBig = totblBig.multiply(BigIntfgfr.TEN).bdd(BigIntfgfr.vblufOf(digit));
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        totbl = totbl * 10 + digit;
                        totbl = totbl * 10 + digit;
                        totbl = totbl * 10 + digit;
                        totbl = totbl * 10 + digit;
                        totbl = totbl * 10 + digit;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (subsfqufntWidti > 0 && pbss == 0) {
                if (subsfqufntWidti > 0 && pbss == 0) {
                if (subsfqufntWidti > 0 && pbss == 0) {
                if (subsfqufntWidti > 0 && pbss == 0) {
                if (subsfqufntWidti > 0 && pbss == 0) {
                    // rf-pbrsf now wf know tif dorrfdt widti
                    // rf-pbrsf now wf know tif dorrfdt widti
                    // rf-pbrsf now wf know tif dorrfdt widti
                    // rf-pbrsf now wf know tif dorrfdt widti
                    // rf-pbrsf now wf know tif dorrfdt widti
                    int pbrsfLfn = pos - position;
                    int pbrsfLfn = pos - position;
                    int pbrsfLfn = pos - position;
                    int pbrsfLfn = pos - position;
                    int pbrsfLfn = pos - position;
                    fffMbxWidti = Mbti.mbx(fffMinWidti, pbrsfLfn - subsfqufntWidti);
                    fffMbxWidti = Mbti.mbx(fffMinWidti, pbrsfLfn - subsfqufntWidti);
                    fffMbxWidti = Mbti.mbx(fffMinWidti, pbrsfLfn - subsfqufntWidti);
                    fffMbxWidti = Mbti.mbx(fffMinWidti, pbrsfLfn - subsfqufntWidti);
                    fffMbxWidti = Mbti.mbx(fffMinWidti, pbrsfLfn - subsfqufntWidti);
                    pos = position;
                    pos = position;
                    pos = position;
                    pos = position;
                    pos = position;
                    totbl = 0;
                    totbl = 0;
                    totbl = 0;
                    totbl = 0;
                    totbl = 0;
                    totblBig = null;
                    totblBig = null;
                    totblBig = null;
                    totblBig = null;
                    totblBig = null;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if (nfgbtivf) {
            if (nfgbtivf) {
            if (nfgbtivf) {
            if (nfgbtivf) {
            if (nfgbtivf) {
                if (totblBig != null) {
                if (totblBig != null) {
                if (totblBig != null) {
                if (totblBig != null) {
                if (totblBig != null) {
                    if (totblBig.fqubls(BigIntfgfr.ZERO) && dontfxt.isStridt()) {
                    if (totblBig.fqubls(BigIntfgfr.ZERO) && dontfxt.isStridt()) {
                    if (totblBig.fqubls(BigIntfgfr.ZERO) && dontfxt.isStridt()) {
                    if (totblBig.fqubls(BigIntfgfr.ZERO) && dontfxt.isStridt()) {
                    if (totblBig.fqubls(BigIntfgfr.ZERO) && dontfxt.isStridt()) {
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                    }
                    }
                    }
                    }
                    }
                    totblBig = totblBig.nfgbtf();
                    totblBig = totblBig.nfgbtf();
                    totblBig = totblBig.nfgbtf();
                    totblBig = totblBig.nfgbtf();
                    totblBig = totblBig.nfgbtf();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (totbl == 0 && dontfxt.isStridt()) {
                    if (totbl == 0 && dontfxt.isStridt()) {
                    if (totbl == 0 && dontfxt.isStridt()) {
                    if (totbl == 0 && dontfxt.isStridt()) {
                    if (totbl == 0 && dontfxt.isStridt()) {
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                        rfturn ~(position - 1);  // minus zfro not bllowfd
                    }
                    }
                    }
                    }
                    }
                    totbl = -totbl;
                    totbl = -totbl;
                    totbl = -totbl;
                    totbl = -totbl;
                    totbl = -totbl;
                }
                }
                }
                }
                }
            } flsf if (signStylf == SignStylf.EXCEEDS_PAD && dontfxt.isStridt()) {
            } flsf if (signStylf == SignStylf.EXCEEDS_PAD && dontfxt.isStridt()) {
            } flsf if (signStylf == SignStylf.EXCEEDS_PAD && dontfxt.isStridt()) {
            } flsf if (signStylf == SignStylf.EXCEEDS_PAD && dontfxt.isStridt()) {
            } flsf if (signStylf == SignStylf.EXCEEDS_PAD && dontfxt.isStridt()) {
                int pbrsfLfn = pos - position;
                int pbrsfLfn = pos - position;
                int pbrsfLfn = pos - position;
                int pbrsfLfn = pos - position;
                int pbrsfLfn = pos - position;
                if (positivf) {
                if (positivf) {
                if (positivf) {
                if (positivf) {
                if (positivf) {
                    if (pbrsfLfn <= minWidti) {
                    if (pbrsfLfn <= minWidti) {
                    if (pbrsfLfn <= minWidti) {
                    if (pbrsfLfn <= minWidti) {
                    if (pbrsfLfn <= minWidti) {
                        rfturn ~(position - 1);  // '+' only pbrsfd if minWidti fxdffdfd
                        rfturn ~(position - 1);  // '+' only pbrsfd if minWidti fxdffdfd
                        rfturn ~(position - 1);  // '+' only pbrsfd if minWidti fxdffdfd
                        rfturn ~(position - 1);  // '+' only pbrsfd if minWidti fxdffdfd
                        rfturn ~(position - 1);  // '+' only pbrsfd if minWidti fxdffdfd
                    }
                    }
                    }
                    }
                    }
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (pbrsfLfn > minWidti) {
                    if (pbrsfLfn > minWidti) {
                    if (pbrsfLfn > minWidti) {
                    if (pbrsfLfn > minWidti) {
                    if (pbrsfLfn > minWidti) {
                        rfturn ~position;  // '+' must bf pbrsfd if minWidti fxdffdfd
                        rfturn ~position;  // '+' must bf pbrsfd if minWidti fxdffdfd
                        rfturn ~position;  // '+' must bf pbrsfd if minWidti fxdffdfd
                        rfturn ~position;  // '+' must bf pbrsfd if minWidti fxdffdfd
                        rfturn ~position;  // '+' must bf pbrsfd if minWidti fxdffdfd
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if (totblBig != null) {
            if (totblBig != null) {
            if (totblBig != null) {
            if (totblBig != null) {
            if (totblBig != null) {
                if (totblBig.bitLfngti() > 63) {
                if (totblBig.bitLfngti() > 63) {
                if (totblBig.bitLfngti() > 63) {
                if (totblBig.bitLfngti() > 63) {
                if (totblBig.bitLfngti() > 63) {
                    // ovfrflow, pbrsf 1 lfss digit
                    // ovfrflow, pbrsf 1 lfss digit
                    // ovfrflow, pbrsf 1 lfss digit
                    // ovfrflow, pbrsf 1 lfss digit
                    // ovfrflow, pbrsf 1 lfss digit
                    totblBig = totblBig.dividf(BigIntfgfr.TEN);
                    totblBig = totblBig.dividf(BigIntfgfr.TEN);
                    totblBig = totblBig.dividf(BigIntfgfr.TEN);
                    totblBig = totblBig.dividf(BigIntfgfr.TEN);
                    totblBig = totblBig.dividf(BigIntfgfr.TEN);
                    pos--;
                    pos--;
                    pos--;
                    pos--;
                    pos--;
                }
                }
                }
                }
                }
                rfturn sftVbluf(dontfxt, totblBig.longVbluf(), position, pos);
                rfturn sftVbluf(dontfxt, totblBig.longVbluf(), position, pos);
                rfturn sftVbluf(dontfxt, totblBig.longVbluf(), position, pos);
                rfturn sftVbluf(dontfxt, totblBig.longVbluf(), position, pos);
                rfturn sftVbluf(dontfxt, totblBig.longVbluf(), position, pos);
            }
            }
            }
            }
            }
            rfturn sftVbluf(dontfxt, totbl, position, pos);
            rfturn sftVbluf(dontfxt, totbl, position, pos);
            rfturn sftVbluf(dontfxt, totbl, position, pos);
            rfturn sftVbluf(dontfxt, totbl, position, pos);
            rfturn sftVbluf(dontfxt, totbl, position, pos);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Storfs tif vbluf.
         * Storfs tif vbluf.
         * Storfs tif vbluf.
         * Storfs tif vbluf.
         * Storfs tif vbluf.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt  tif dontfxt to storf into, not null
         * @pbrbm dontfxt  tif dontfxt to storf into, not null
         * @pbrbm dontfxt  tif dontfxt to storf into, not null
         * @pbrbm dontfxt  tif dontfxt to storf into, not null
         * @pbrbm dontfxt  tif dontfxt to storf into, not null
         * @pbrbm vbluf  tif vbluf
         * @pbrbm vbluf  tif vbluf
         * @pbrbm vbluf  tif vbluf
         * @pbrbm vbluf  tif vbluf
         * @pbrbm vbluf  tif vbluf
         * @pbrbm frrorPos  tif position of tif fifld bfing pbrsfd
         * @pbrbm frrorPos  tif position of tif fifld bfing pbrsfd
         * @pbrbm frrorPos  tif position of tif fifld bfing pbrsfd
         * @pbrbm frrorPos  tif position of tif fifld bfing pbrsfd
         * @pbrbm frrorPos  tif position of tif fifld bfing pbrsfd
         * @pbrbm suddfssPos  tif position bftfr tif fifld bfing pbrsfd
         * @pbrbm suddfssPos  tif position bftfr tif fifld bfing pbrsfd
         * @pbrbm suddfssPos  tif position bftfr tif fifld bfing pbrsfd
         * @pbrbm suddfssPos  tif position bftfr tif fifld bfing pbrsfd
         * @pbrbm suddfssPos  tif position bftfr tif fifld bfing pbrsfd
         * @rfturn tif nfw position
         * @rfturn tif nfw position
         * @rfturn tif nfw position
         * @rfturn tif nfw position
         * @rfturn tif nfw position
         */
         */
         */
         */
         */
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            if (minWidti == 1 && mbxWidti == 19 && signStylf == SignStylf.NORMAL) {
            if (minWidti == 1 && mbxWidti == 19 && signStylf == SignStylf.NORMAL) {
            if (minWidti == 1 && mbxWidti == 19 && signStylf == SignStylf.NORMAL) {
            if (minWidti == 1 && mbxWidti == 19 && signStylf == SignStylf.NORMAL) {
            if (minWidti == 1 && mbxWidti == 19 && signStylf == SignStylf.NORMAL) {
                rfturn "Vbluf(" + fifld + ")";
                rfturn "Vbluf(" + fifld + ")";
                rfturn "Vbluf(" + fifld + ")";
                rfturn "Vbluf(" + fifld + ")";
                rfturn "Vbluf(" + fifld + ")";
            }
            }
            }
            }
            }
            if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
            if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
            if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
            if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
            if (minWidti == mbxWidti && signStylf == SignStylf.NOT_NEGATIVE) {
                rfturn "Vbluf(" + fifld + "," + minWidti + ")";
                rfturn "Vbluf(" + fifld + "," + minWidti + ")";
                rfturn "Vbluf(" + fifld + "," + minWidti + ")";
                rfturn "Vbluf(" + fifld + "," + minWidti + ")";
                rfturn "Vbluf(" + fifld + "," + minWidti + ")";
            }
            }
            }
            }
            }
            rfturn "Vbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + signStylf + ")";
            rfturn "Vbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + signStylf + ")";
            rfturn "Vbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + signStylf + ")";
            rfturn "Vbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + signStylf + ")";
            rfturn "Vbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + signStylf + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints bnd pbrsfs b rfdudfd numfrid dbtf-timf fifld.
     * Prints bnd pbrsfs b rfdudfd numfrid dbtf-timf fifld.
     * Prints bnd pbrsfs b rfdudfd numfrid dbtf-timf fifld.
     * Prints bnd pbrsfs b rfdudfd numfrid dbtf-timf fifld.
     * Prints bnd pbrsfs b rfdudfd numfrid dbtf-timf fifld.
     */
     */
     */
     */
     */
    stbtid finbl dlbss RfdudfdPrintfrPbrsfr fxtfnds NumbfrPrintfrPbrsfr {
    stbtid finbl dlbss RfdudfdPrintfrPbrsfr fxtfnds NumbfrPrintfrPbrsfr {
    stbtid finbl dlbss RfdudfdPrintfrPbrsfr fxtfnds NumbfrPrintfrPbrsfr {
    stbtid finbl dlbss RfdudfdPrintfrPbrsfr fxtfnds NumbfrPrintfrPbrsfr {
    stbtid finbl dlbss RfdudfdPrintfrPbrsfr fxtfnds NumbfrPrintfrPbrsfr {
        /**
        /**
        /**
        /**
        /**
         * Tif bbsf dbtf for rfdudfd vbluf pbrsing.
         * Tif bbsf dbtf for rfdudfd vbluf pbrsing.
         * Tif bbsf dbtf for rfdudfd vbluf pbrsing.
         * Tif bbsf dbtf for rfdudfd vbluf pbrsing.
         * Tif bbsf dbtf for rfdudfd vbluf pbrsing.
         */
         */
         */
         */
         */
        stbtid finbl LodblDbtf BASE_DATE = LodblDbtf.of(2000, 1, 1);
        stbtid finbl LodblDbtf BASE_DATE = LodblDbtf.of(2000, 1, 1);
        stbtid finbl LodblDbtf BASE_DATE = LodblDbtf.of(2000, 1, 1);
        stbtid finbl LodblDbtf BASE_DATE = LodblDbtf.of(2000, 1, 1);
        stbtid finbl LodblDbtf BASE_DATE = LodblDbtf.of(2000, 1, 1);





        privbtf finbl int bbsfVbluf;
        privbtf finbl int bbsfVbluf;
        privbtf finbl int bbsfVbluf;
        privbtf finbl int bbsfVbluf;
        privbtf finbl int bbsfVbluf;
        privbtf finbl CironoLodblDbtf bbsfDbtf;
        privbtf finbl CironoLodblDbtf bbsfDbtf;
        privbtf finbl CironoLodblDbtf bbsfDbtf;
        privbtf finbl CironoLodblDbtf bbsfDbtf;
        privbtf finbl CironoLodblDbtf bbsfDbtf;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         */
         */
         */
         */
         */
        RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf) {
            tiis(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, 0);
            tiis(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, 0);
            tiis(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, 0);
            tiis(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, 0);
            tiis(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, 0);
            if (minWidti < 1 || minWidti > 10) {
            if (minWidti < 1 || minWidti > 10) {
            if (minWidti < 1 || minWidti > 10) {
            if (minWidti < 1 || minWidti > 10) {
            if (minWidti < 1 || minWidti > 10) {
                tirow nfw IllfgblArgumfntExdfption("Tif minWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif minWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif minWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif minWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif minWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
            }
            }
            }
            }
            }
            if (mbxWidti < 1 || mbxWidti > 10) {
            if (mbxWidti < 1 || mbxWidti > 10) {
            if (mbxWidti < 1 || mbxWidti > 10) {
            if (mbxWidti < 1 || mbxWidti > 10) {
            if (mbxWidti < 1 || mbxWidti > 10) {
                tirow nfw IllfgblArgumfntExdfption("Tif mbxWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif mbxWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif mbxWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif mbxWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Tif mbxWidti must bf from 1 to 10 indlusivf but wbs " + minWidti);
            }
            }
            }
            }
            }
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
            }
            }
            }
            }
            }
            if (bbsfDbtf == null) {
            if (bbsfDbtf == null) {
            if (bbsfDbtf == null) {
            if (bbsfDbtf == null) {
            if (bbsfDbtf == null) {
                if (fifld.rbngf().isVblidVbluf(bbsfVbluf) == fblsf) {
                if (fifld.rbngf().isVblidVbluf(bbsfVbluf) == fblsf) {
                if (fifld.rbngf().isVblidVbluf(bbsfVbluf) == fblsf) {
                if (fifld.rbngf().isVblidVbluf(bbsfVbluf) == fblsf) {
                if (fifld.rbngf().isVblidVbluf(bbsfVbluf) == fblsf) {
                    tirow nfw IllfgblArgumfntExdfption("Tif bbsf vbluf must bf witiin tif rbngf of tif fifld");
                    tirow nfw IllfgblArgumfntExdfption("Tif bbsf vbluf must bf witiin tif rbngf of tif fifld");
                    tirow nfw IllfgblArgumfntExdfption("Tif bbsf vbluf must bf witiin tif rbngf of tif fifld");
                    tirow nfw IllfgblArgumfntExdfption("Tif bbsf vbluf must bf witiin tif rbngf of tif fifld");
                    tirow nfw IllfgblArgumfntExdfption("Tif bbsf vbluf must bf witiin tif rbngf of tif fifld");
                }
                }
                }
                }
                }
                if ((((long) bbsfVbluf) + EXCEED_POINTS[mbxWidti]) > Intfgfr.MAX_VALUE) {
                if ((((long) bbsfVbluf) + EXCEED_POINTS[mbxWidti]) > Intfgfr.MAX_VALUE) {
                if ((((long) bbsfVbluf) + EXCEED_POINTS[mbxWidti]) > Intfgfr.MAX_VALUE) {
                if ((((long) bbsfVbluf) + EXCEED_POINTS[mbxWidti]) > Intfgfr.MAX_VALUE) {
                if ((((long) bbsfVbluf) + EXCEED_POINTS[mbxWidti]) > Intfgfr.MAX_VALUE) {
                    tirow nfw DbtfTimfExdfption("Unbblf to bdd printfr-pbrsfr bs tif rbngf fxdffds tif dbpbdity of bn int");
                    tirow nfw DbtfTimfExdfption("Unbblf to bdd printfr-pbrsfr bs tif rbngf fxdffds tif dbpbdity of bn int");
                    tirow nfw DbtfTimfExdfption("Unbblf to bdd printfr-pbrsfr bs tif rbngf fxdffds tif dbpbdity of bn int");
                    tirow nfw DbtfTimfExdfption("Unbblf to bdd printfr-pbrsfr bs tif rbngf fxdffds tif dbpbdity of bn int");
                    tirow nfw DbtfTimfExdfption("Unbblf to bdd printfr-pbrsfr bs tif rbngf fxdffds tif dbpbdity of bn int");
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Tif brgumfnts ibvf blrfbdy bffn difdkfd.
         * Tif brgumfnts ibvf blrfbdy bffn difdkfd.
         * Tif brgumfnts ibvf blrfbdy bffn difdkfd.
         * Tif brgumfnts ibvf blrfbdy bffn difdkfd.
         * Tif brgumfnts ibvf blrfbdy bffn difdkfd.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm fifld  tif fifld to formbt, vblidbtfd not null
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm minWidti  tif minimum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm mbxWidti  tif mbximum fifld widti, from 1 to 10
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfVbluf  tif bbsf vbluf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm bbsfDbtf  tif bbsf dbtf
         * @pbrbm subsfqufntWidti tif subsfqufntWidti for tiis instbndf
         * @pbrbm subsfqufntWidti tif subsfqufntWidti for tiis instbndf
         * @pbrbm subsfqufntWidti tif subsfqufntWidti for tiis instbndf
         * @pbrbm subsfqufntWidti tif subsfqufntWidti for tiis instbndf
         * @pbrbm subsfqufntWidti tif subsfqufntWidti for tiis instbndf
         */
         */
         */
         */
         */
        privbtf RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        privbtf RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        privbtf RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        privbtf RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
        privbtf RfdudfdPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti,
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf, int subsfqufntWidti) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf, int subsfqufntWidti) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf, int subsfqufntWidti) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf, int subsfqufntWidti) {
                int bbsfVbluf, CironoLodblDbtf bbsfDbtf, int subsfqufntWidti) {
            supfr(fifld, minWidti, mbxWidti, SignStylf.NOT_NEGATIVE, subsfqufntWidti);
            supfr(fifld, minWidti, mbxWidti, SignStylf.NOT_NEGATIVE, subsfqufntWidti);
            supfr(fifld, minWidti, mbxWidti, SignStylf.NOT_NEGATIVE, subsfqufntWidti);
            supfr(fifld, minWidti, mbxWidti, SignStylf.NOT_NEGATIVE, subsfqufntWidti);
            supfr(fifld, minWidti, mbxWidti, SignStylf.NOT_NEGATIVE, subsfqufntWidti);
            tiis.bbsfVbluf = bbsfVbluf;
            tiis.bbsfVbluf = bbsfVbluf;
            tiis.bbsfVbluf = bbsfVbluf;
            tiis.bbsfVbluf = bbsfVbluf;
            tiis.bbsfVbluf = bbsfVbluf;
            tiis.bbsfDbtf = bbsfDbtf;
            tiis.bbsfDbtf = bbsfDbtf;
            tiis.bbsfDbtf = bbsfDbtf;
            tiis.bbsfDbtf = bbsfDbtf;
            tiis.bbsfDbtf = bbsfDbtf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
        long gftVbluf(DbtfTimfPrintContfxt dontfxt, long vbluf) {
            long bbsVbluf = Mbti.bbs(vbluf);
            long bbsVbluf = Mbti.bbs(vbluf);
            long bbsVbluf = Mbti.bbs(vbluf);
            long bbsVbluf = Mbti.bbs(vbluf);
            long bbsVbluf = Mbti.bbs(vbluf);
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
                Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
                Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
                Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
                Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
                Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
            }
            }
            }
            }
            }
            if (vbluf >= bbsfVbluf && vbluf < bbsfVbluf + EXCEED_POINTS[minWidti]) {
            if (vbluf >= bbsfVbluf && vbluf < bbsfVbluf + EXCEED_POINTS[minWidti]) {
            if (vbluf >= bbsfVbluf && vbluf < bbsfVbluf + EXCEED_POINTS[minWidti]) {
            if (vbluf >= bbsfVbluf && vbluf < bbsfVbluf + EXCEED_POINTS[minWidti]) {
            if (vbluf >= bbsfVbluf && vbluf < bbsfVbluf + EXCEED_POINTS[minWidti]) {
                // Usf tif rfdudfd vbluf if it fits in minWidti
                // Usf tif rfdudfd vbluf if it fits in minWidti
                // Usf tif rfdudfd vbluf if it fits in minWidti
                // Usf tif rfdudfd vbluf if it fits in minWidti
                // Usf tif rfdudfd vbluf if it fits in minWidti
                rfturn bbsVbluf % EXCEED_POINTS[minWidti];
                rfturn bbsVbluf % EXCEED_POINTS[minWidti];
                rfturn bbsVbluf % EXCEED_POINTS[minWidti];
                rfturn bbsVbluf % EXCEED_POINTS[minWidti];
                rfturn bbsVbluf % EXCEED_POINTS[minWidti];
            }
            }
            }
            }
            }
            // Otifrwisf trundbtf to fit in mbxWidti
            // Otifrwisf trundbtf to fit in mbxWidti
            // Otifrwisf trundbtf to fit in mbxWidti
            // Otifrwisf trundbtf to fit in mbxWidti
            // Otifrwisf trundbtf to fit in mbxWidti
            rfturn bbsVbluf % EXCEED_POINTS[mbxWidti];
            rfturn bbsVbluf % EXCEED_POINTS[mbxWidti];
            rfturn bbsVbluf % EXCEED_POINTS[mbxWidti];
            rfturn bbsVbluf % EXCEED_POINTS[mbxWidti];
            rfturn bbsVbluf % EXCEED_POINTS[mbxWidti];
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
        int sftVbluf(DbtfTimfPbrsfContfxt dontfxt, long vbluf, int frrorPos, int suddfssPos) {
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            int bbsfVbluf = tiis.bbsfVbluf;
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
            if (bbsfDbtf != null) {
                Cironology dirono = dontfxt.gftEfffdtivfCironology();
                Cironology dirono = dontfxt.gftEfffdtivfCironology();
                Cironology dirono = dontfxt.gftEfffdtivfCironology();
                Cironology dirono = dontfxt.gftEfffdtivfCironology();
                Cironology dirono = dontfxt.gftEfffdtivfCironology();
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);
                bbsfVbluf = dirono.dbtf(bbsfDbtf).gft(fifld);





                // In dbsf tif Cironology is dibngfd lbtfr, bdd b dbllbbdk wifn/if it dibngfs
                // In dbsf tif Cironology is dibngfd lbtfr, bdd b dbllbbdk wifn/if it dibngfs
                // In dbsf tif Cironology is dibngfd lbtfr, bdd b dbllbbdk wifn/if it dibngfs
                // In dbsf tif Cironology is dibngfd lbtfr, bdd b dbllbbdk wifn/if it dibngfs
                // In dbsf tif Cironology is dibngfd lbtfr, bdd b dbllbbdk wifn/if it dibngfs
                finbl long initiblVbluf = vbluf;
                finbl long initiblVbluf = vbluf;
                finbl long initiblVbluf = vbluf;
                finbl long initiblVbluf = vbluf;
                finbl long initiblVbluf = vbluf;
                dontfxt.bddCironoCibngfdListfnfr(
                dontfxt.bddCironoCibngfdListfnfr(
                dontfxt.bddCironoCibngfdListfnfr(
                dontfxt.bddCironoCibngfdListfnfr(
                dontfxt.bddCironoCibngfdListfnfr(
                        (_unusfd) ->  {
                        (_unusfd) ->  {
                        (_unusfd) ->  {
                        (_unusfd) ->  {
                        (_unusfd) ->  {
                            /* Rfpfbt tif sft of tif fifld using tif durrfnt Cironology
                            /* Rfpfbt tif sft of tif fifld using tif durrfnt Cironology
                            /* Rfpfbt tif sft of tif fifld using tif durrfnt Cironology
                            /* Rfpfbt tif sft of tif fifld using tif durrfnt Cironology
                            /* Rfpfbt tif sft of tif fifld using tif durrfnt Cironology
                             * Tif suddfss/frror position is ignorfd bfdbusf tif vbluf is
                             * Tif suddfss/frror position is ignorfd bfdbusf tif vbluf is
                             * Tif suddfss/frror position is ignorfd bfdbusf tif vbluf is
                             * Tif suddfss/frror position is ignorfd bfdbusf tif vbluf is
                             * Tif suddfss/frror position is ignorfd bfdbusf tif vbluf is
                             * intfntionblly bfing ovfrwrittfn.
                             * intfntionblly bfing ovfrwrittfn.
                             * intfntionblly bfing ovfrwrittfn.
                             * intfntionblly bfing ovfrwrittfn.
                             * intfntionblly bfing ovfrwrittfn.
                             */
                             */
                             */
                             */
                             */
                            sftVbluf(dontfxt, initiblVbluf, frrorPos, suddfssPos);
                            sftVbluf(dontfxt, initiblVbluf, frrorPos, suddfssPos);
                            sftVbluf(dontfxt, initiblVbluf, frrorPos, suddfssPos);
                            sftVbluf(dontfxt, initiblVbluf, frrorPos, suddfssPos);
                            sftVbluf(dontfxt, initiblVbluf, frrorPos, suddfssPos);
                        });
                        });
                        });
                        });
                        });
            }
            }
            }
            }
            }
            int pbrsfLfn = suddfssPos - frrorPos;
            int pbrsfLfn = suddfssPos - frrorPos;
            int pbrsfLfn = suddfssPos - frrorPos;
            int pbrsfLfn = suddfssPos - frrorPos;
            int pbrsfLfn = suddfssPos - frrorPos;
            if (pbrsfLfn == minWidti && vbluf >= 0) {
            if (pbrsfLfn == minWidti && vbluf >= 0) {
            if (pbrsfLfn == minWidti && vbluf >= 0) {
            if (pbrsfLfn == minWidti && vbluf >= 0) {
            if (pbrsfLfn == minWidti && vbluf >= 0) {
                long rbngf = EXCEED_POINTS[minWidti];
                long rbngf = EXCEED_POINTS[minWidti];
                long rbngf = EXCEED_POINTS[minWidti];
                long rbngf = EXCEED_POINTS[minWidti];
                long rbngf = EXCEED_POINTS[minWidti];
                long lbstPbrt = bbsfVbluf % rbngf;
                long lbstPbrt = bbsfVbluf % rbngf;
                long lbstPbrt = bbsfVbluf % rbngf;
                long lbstPbrt = bbsfVbluf % rbngf;
                long lbstPbrt = bbsfVbluf % rbngf;
                long bbsfPbrt = bbsfVbluf - lbstPbrt;
                long bbsfPbrt = bbsfVbluf - lbstPbrt;
                long bbsfPbrt = bbsfVbluf - lbstPbrt;
                long bbsfPbrt = bbsfVbluf - lbstPbrt;
                long bbsfPbrt = bbsfVbluf - lbstPbrt;
                if (bbsfVbluf > 0) {
                if (bbsfVbluf > 0) {
                if (bbsfVbluf > 0) {
                if (bbsfVbluf > 0) {
                if (bbsfVbluf > 0) {
                    vbluf = bbsfPbrt + vbluf;
                    vbluf = bbsfPbrt + vbluf;
                    vbluf = bbsfPbrt + vbluf;
                    vbluf = bbsfPbrt + vbluf;
                    vbluf = bbsfPbrt + vbluf;
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    vbluf = bbsfPbrt - vbluf;
                    vbluf = bbsfPbrt - vbluf;
                    vbluf = bbsfPbrt - vbluf;
                    vbluf = bbsfPbrt - vbluf;
                    vbluf = bbsfPbrt - vbluf;
                }
                }
                }
                }
                }
                if (vbluf < bbsfVbluf) {
                if (vbluf < bbsfVbluf) {
                if (vbluf < bbsfVbluf) {
                if (vbluf < bbsfVbluf) {
                if (vbluf < bbsfVbluf) {
                    vbluf += rbngf;
                    vbluf += rbngf;
                    vbluf += rbngf;
                    vbluf += rbngf;
                    vbluf += rbngf;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, frrorPos, suddfssPos);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         * Rfturns b nfw instbndf witi fixfd widti flbg sft.
         *
         *
         *
         *
         *
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         */
         */
         */
         */
         */
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        RfdudfdPrintfrPbrsfr witiFixfdWidti() {
        RfdudfdPrintfrPbrsfr witiFixfdWidti() {
        RfdudfdPrintfrPbrsfr witiFixfdWidti() {
        RfdudfdPrintfrPbrsfr witiFixfdWidti() {
        RfdudfdPrintfrPbrsfr witiFixfdWidti() {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
            if (subsfqufntWidti == -1) {
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
                rfturn tiis;
            }
            }
            }
            }
            }
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, -1);
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, -1);
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, -1);
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, -1);
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf, -1);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         * Rfturns b nfw instbndf witi bn updbtfd subsfqufnt widti.
         *
         *
         *
         *
         *
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @pbrbm subsfqufntWidti  tif widti of subsfqufnt non-nfgbtivf numbfrs, 0 or grfbtfr
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         * @rfturn b nfw updbtfd printfr-pbrsfr, not null
         */
         */
         */
         */
         */
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        RfdudfdPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        RfdudfdPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        RfdudfdPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        RfdudfdPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
        RfdudfdPrintfrPbrsfr witiSubsfqufntWidti(int subsfqufntWidti) {
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf,
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf,
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf,
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf,
            rfturn nfw RfdudfdPrintfrPbrsfr(fifld, minWidti, mbxWidti, bbsfVbluf, bbsfDbtf,
                    tiis.subsfqufntWidti + subsfqufntWidti);
                    tiis.subsfqufntWidti + subsfqufntWidti);
                    tiis.subsfqufntWidti + subsfqufntWidti);
                    tiis.subsfqufntWidti + subsfqufntWidti);
                    tiis.subsfqufntWidti + subsfqufntWidti);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * For b RfdudfdPrintfrPbrsfr, fixfd widti is fblsf if tif modf is stridt,
         * For b RfdudfdPrintfrPbrsfr, fixfd widti is fblsf if tif modf is stridt,
         * For b RfdudfdPrintfrPbrsfr, fixfd widti is fblsf if tif modf is stridt,
         * For b RfdudfdPrintfrPbrsfr, fixfd widti is fblsf if tif modf is stridt,
         * For b RfdudfdPrintfrPbrsfr, fixfd widti is fblsf if tif modf is stridt,
         * otifrwisf it is sft bs for NumbfrPrintfrPbrsfr.
         * otifrwisf it is sft bs for NumbfrPrintfrPbrsfr.
         * otifrwisf it is sft bs for NumbfrPrintfrPbrsfr.
         * otifrwisf it is sft bs for NumbfrPrintfrPbrsfr.
         * otifrwisf it is sft bs for NumbfrPrintfrPbrsfr.
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @pbrbm dontfxt tif dontfxt
         * @rfturn if tif fifld is fixfd widti
         * @rfturn if tif fifld is fixfd widti
         * @rfturn if tif fifld is fixfd widti
         * @rfturn if tif fifld is fixfd widti
         * @rfturn if tif fifld is fixfd widti
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVblufRfdudfd(jbvb.timf.tfmporbl.TfmporblFifld, int, int, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVblufRfdudfd(jbvb.timf.tfmporbl.TfmporblFifld, int, int, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVblufRfdudfd(jbvb.timf.tfmporbl.TfmporblFifld, int, int, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVblufRfdudfd(jbvb.timf.tfmporbl.TfmporblFifld, int, int, int)
         * @sff DbtfTimfFormbttfrBuildfr#bppfndVblufRfdudfd(jbvb.timf.tfmporbl.TfmporblFifld, int, int, int)
         */
         */
         */
         */
         */
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
        boolfbn isFixfdWidti(DbtfTimfPbrsfContfxt dontfxt) {
           if (dontfxt.isStridt() == fblsf) {
           if (dontfxt.isStridt() == fblsf) {
           if (dontfxt.isStridt() == fblsf) {
           if (dontfxt.isStridt() == fblsf) {
           if (dontfxt.isStridt() == fblsf) {
               rfturn fblsf;
               rfturn fblsf;
               rfturn fblsf;
               rfturn fblsf;
               rfturn fblsf;
           }
           }
           }
           }
           }
           rfturn supfr.isFixfdWidti(dontfxt);
           rfturn supfr.isFixfdWidti(dontfxt);
           rfturn supfr.isFixfdWidti(dontfxt);
           rfturn supfr.isFixfdWidti(dontfxt);
           rfturn supfr.isFixfdWidti(dontfxt);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn "RfdudfdVbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + (bbsfDbtf != null ? bbsfDbtf : bbsfVbluf) + ")";
            rfturn "RfdudfdVbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + (bbsfDbtf != null ? bbsfDbtf : bbsfVbluf) + ")";
            rfturn "RfdudfdVbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + (bbsfDbtf != null ? bbsfDbtf : bbsfVbluf) + ")";
            rfturn "RfdudfdVbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + (bbsfDbtf != null ? bbsfDbtf : bbsfVbluf) + ")";
            rfturn "RfdudfdVbluf(" + fifld + "," + minWidti + "," + mbxWidti + "," + (bbsfDbtf != null ? bbsfDbtf : bbsfVbluf) + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     * Prints bnd pbrsfs b numfrid dbtf-timf fifld witi optionbl pbdding.
     */
     */
     */
     */
     */
    stbtid finbl dlbss FrbdtionPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss FrbdtionPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss FrbdtionPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss FrbdtionPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss FrbdtionPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl int minWidti;
        privbtf finbl int minWidti;
        privbtf finbl int minWidti;
        privbtf finbl int minWidti;
        privbtf finbl int minWidti;
        privbtf finbl int mbxWidti;
        privbtf finbl int mbxWidti;
        privbtf finbl int mbxWidti;
        privbtf finbl int mbxWidti;
        privbtf finbl int mbxWidti;
        privbtf finbl boolfbn dfdimblPoint;
        privbtf finbl boolfbn dfdimblPoint;
        privbtf finbl boolfbn dfdimblPoint;
        privbtf finbl boolfbn dfdimblPoint;
        privbtf finbl boolfbn dfdimblPoint;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm minWidti  tif minimum widti to output, from 0 to 9
         * @pbrbm minWidti  tif minimum widti to output, from 0 to 9
         * @pbrbm minWidti  tif minimum widti to output, from 0 to 9
         * @pbrbm minWidti  tif minimum widti to output, from 0 to 9
         * @pbrbm minWidti  tif minimum widti to output, from 0 to 9
         * @pbrbm mbxWidti  tif mbximum widti to output, from 0 to 9
         * @pbrbm mbxWidti  tif mbximum widti to output, from 0 to 9
         * @pbrbm mbxWidti  tif mbximum widti to output, from 0 to 9
         * @pbrbm mbxWidti  tif mbximum widti to output, from 0 to 9
         * @pbrbm mbxWidti  tif mbximum widti to output, from 0 to 9
         * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
         * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
         * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
         * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
         * @pbrbm dfdimblPoint  wiftifr to output tif lodblizfd dfdimbl point symbol
         */
         */
         */
         */
         */
        FrbdtionPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
        FrbdtionPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
        FrbdtionPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
        FrbdtionPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
        FrbdtionPrintfrPbrsfr(TfmporblFifld fifld, int minWidti, int mbxWidti, boolfbn dfdimblPoint) {
            Objfdts.rfquirfNonNull(fifld, "fifld");
            Objfdts.rfquirfNonNull(fifld, "fifld");
            Objfdts.rfquirfNonNull(fifld, "fifld");
            Objfdts.rfquirfNonNull(fifld, "fifld");
            Objfdts.rfquirfNonNull(fifld, "fifld");
            if (fifld.rbngf().isFixfd() == fblsf) {
            if (fifld.rbngf().isFixfd() == fblsf) {
            if (fifld.rbngf().isFixfd() == fblsf) {
            if (fifld.rbngf().isFixfd() == fblsf) {
            if (fifld.rbngf().isFixfd() == fblsf) {
                tirow nfw IllfgblArgumfntExdfption("Fifld must ibvf b fixfd sft of vblufs: " + fifld);
                tirow nfw IllfgblArgumfntExdfption("Fifld must ibvf b fixfd sft of vblufs: " + fifld);
                tirow nfw IllfgblArgumfntExdfption("Fifld must ibvf b fixfd sft of vblufs: " + fifld);
                tirow nfw IllfgblArgumfntExdfption("Fifld must ibvf b fixfd sft of vblufs: " + fifld);
                tirow nfw IllfgblArgumfntExdfption("Fifld must ibvf b fixfd sft of vblufs: " + fifld);
            }
            }
            }
            }
            }
            if (minWidti < 0 || minWidti > 9) {
            if (minWidti < 0 || minWidti > 9) {
            if (minWidti < 0 || minWidti > 9) {
            if (minWidti < 0 || minWidti > 9) {
            if (minWidti < 0 || minWidti > 9) {
                tirow nfw IllfgblArgumfntExdfption("Minimum widti must bf from 0 to 9 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Minimum widti must bf from 0 to 9 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Minimum widti must bf from 0 to 9 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Minimum widti must bf from 0 to 9 indlusivf but wbs " + minWidti);
                tirow nfw IllfgblArgumfntExdfption("Minimum widti must bf from 0 to 9 indlusivf but wbs " + minWidti);
            }
            }
            }
            }
            }
            if (mbxWidti < 1 || mbxWidti > 9) {
            if (mbxWidti < 1 || mbxWidti > 9) {
            if (mbxWidti < 1 || mbxWidti > 9) {
            if (mbxWidti < 1 || mbxWidti > 9) {
            if (mbxWidti < 1 || mbxWidti > 9) {
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must bf from 1 to 9 indlusivf but wbs " + mbxWidti);
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must bf from 1 to 9 indlusivf but wbs " + mbxWidti);
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must bf from 1 to 9 indlusivf but wbs " + mbxWidti);
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must bf from 1 to 9 indlusivf but wbs " + mbxWidti);
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must bf from 1 to 9 indlusivf but wbs " + mbxWidti);
            }
            }
            }
            }
            }
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
            if (mbxWidti < minWidti) {
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                tirow nfw IllfgblArgumfntExdfption("Mbximum widti must fxdffd or fqubl tif minimum widti but " +
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
                        mbxWidti + " < " + minWidti);
            }
            }
            }
            }
            }
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.minWidti = minWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.mbxWidti = mbxWidti;
            tiis.dfdimblPoint = dfdimblPoint;
            tiis.dfdimblPoint = dfdimblPoint;
            tiis.dfdimblPoint = dfdimblPoint;
            tiis.dfdimblPoint = dfdimblPoint;
            tiis.dfdimblPoint = dfdimblPoint;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            DfdimblStylf dfdimblStylf = dontfxt.gftDfdimblStylf();
            BigDfdimbl frbdtion = donvfrtToFrbdtion(vbluf);
            BigDfdimbl frbdtion = donvfrtToFrbdtion(vbluf);
            BigDfdimbl frbdtion = donvfrtToFrbdtion(vbluf);
            BigDfdimbl frbdtion = donvfrtToFrbdtion(vbluf);
            BigDfdimbl frbdtion = donvfrtToFrbdtion(vbluf);
            if (frbdtion.sdblf() == 0) {  // sdblf is zfro if vbluf is zfro
            if (frbdtion.sdblf() == 0) {  // sdblf is zfro if vbluf is zfro
            if (frbdtion.sdblf() == 0) {  // sdblf is zfro if vbluf is zfro
            if (frbdtion.sdblf() == 0) {  // sdblf is zfro if vbluf is zfro
            if (frbdtion.sdblf() == 0) {  // sdblf is zfro if vbluf is zfro
                if (minWidti > 0) {
                if (minWidti > 0) {
                if (minWidti > 0) {
                if (minWidti > 0) {
                if (minWidti > 0) {
                    if (dfdimblPoint) {
                    if (dfdimblPoint) {
                    if (dfdimblPoint) {
                    if (dfdimblPoint) {
                    if (dfdimblPoint) {
                        buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                        buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                        buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                        buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                        buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                    }
                    }
                    }
                    }
                    }
                    for (int i = 0; i < minWidti; i++) {
                    for (int i = 0; i < minWidti; i++) {
                    for (int i = 0; i < minWidti; i++) {
                    for (int i = 0; i < minWidti; i++) {
                    for (int i = 0; i < minWidti; i++) {
                        buf.bppfnd(dfdimblStylf.gftZfroDigit());
                        buf.bppfnd(dfdimblStylf.gftZfroDigit());
                        buf.bppfnd(dfdimblStylf.gftZfroDigit());
                        buf.bppfnd(dfdimblStylf.gftZfroDigit());
                        buf.bppfnd(dfdimblStylf.gftZfroDigit());
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                int outputSdblf = Mbti.min(Mbti.mbx(frbdtion.sdblf(), minWidti), mbxWidti);
                int outputSdblf = Mbti.min(Mbti.mbx(frbdtion.sdblf(), minWidti), mbxWidti);
                int outputSdblf = Mbti.min(Mbti.mbx(frbdtion.sdblf(), minWidti), mbxWidti);
                int outputSdblf = Mbti.min(Mbti.mbx(frbdtion.sdblf(), minWidti), mbxWidti);
                int outputSdblf = Mbti.min(Mbti.mbx(frbdtion.sdblf(), minWidti), mbxWidti);
                frbdtion = frbdtion.sftSdblf(outputSdblf, RoundingModf.FLOOR);
                frbdtion = frbdtion.sftSdblf(outputSdblf, RoundingModf.FLOOR);
                frbdtion = frbdtion.sftSdblf(outputSdblf, RoundingModf.FLOOR);
                frbdtion = frbdtion.sftSdblf(outputSdblf, RoundingModf.FLOOR);
                frbdtion = frbdtion.sftSdblf(outputSdblf, RoundingModf.FLOOR);
                String str = frbdtion.toPlbinString().substring(2);
                String str = frbdtion.toPlbinString().substring(2);
                String str = frbdtion.toPlbinString().substring(2);
                String str = frbdtion.toPlbinString().substring(2);
                String str = frbdtion.toPlbinString().substring(2);
                str = dfdimblStylf.donvfrtNumbfrToI18N(str);
                str = dfdimblStylf.donvfrtNumbfrToI18N(str);
                str = dfdimblStylf.donvfrtNumbfrToI18N(str);
                str = dfdimblStylf.donvfrtNumbfrToI18N(str);
                str = dfdimblStylf.donvfrtNumbfrToI18N(str);
                if (dfdimblPoint) {
                if (dfdimblPoint) {
                if (dfdimblPoint) {
                if (dfdimblPoint) {
                if (dfdimblPoint) {
                    buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                    buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                    buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                    buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                    buf.bppfnd(dfdimblStylf.gftDfdimblSfpbrbtor());
                }
                }
                }
                }
                }
                buf.bppfnd(str);
                buf.bppfnd(str);
                buf.bppfnd(str);
                buf.bppfnd(str);
                buf.bppfnd(str);
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int ffffdtivfMin = (dontfxt.isStridt() ? minWidti : 0);
            int ffffdtivfMin = (dontfxt.isStridt() ? minWidti : 0);
            int ffffdtivfMin = (dontfxt.isStridt() ? minWidti : 0);
            int ffffdtivfMin = (dontfxt.isStridt() ? minWidti : 0);
            int ffffdtivfMin = (dontfxt.isStridt() ? minWidti : 0);
            int ffffdtivfMbx = (dontfxt.isStridt() ? mbxWidti : 9);
            int ffffdtivfMbx = (dontfxt.isStridt() ? mbxWidti : 9);
            int ffffdtivfMbx = (dontfxt.isStridt() ? mbxWidti : 9);
            int ffffdtivfMbx = (dontfxt.isStridt() ? mbxWidti : 9);
            int ffffdtivfMbx = (dontfxt.isStridt() ? mbxWidti : 9);
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
                // vblid if wiolf fifld is optionbl, invblid if minimum widti
                // vblid if wiolf fifld is optionbl, invblid if minimum widti
                // vblid if wiolf fifld is optionbl, invblid if minimum widti
                // vblid if wiolf fifld is optionbl, invblid if minimum widti
                // vblid if wiolf fifld is optionbl, invblid if minimum widti
                rfturn (ffffdtivfMin > 0 ? ~position : position);
                rfturn (ffffdtivfMin > 0 ? ~position : position);
                rfturn (ffffdtivfMin > 0 ? ~position : position);
                rfturn (ffffdtivfMin > 0 ? ~position : position);
                rfturn (ffffdtivfMin > 0 ? ~position : position);
            }
            }
            }
            }
            }
            if (dfdimblPoint) {
            if (dfdimblPoint) {
            if (dfdimblPoint) {
            if (dfdimblPoint) {
            if (dfdimblPoint) {
                if (tfxt.dibrAt(position) != dontfxt.gftDfdimblStylf().gftDfdimblSfpbrbtor()) {
                if (tfxt.dibrAt(position) != dontfxt.gftDfdimblStylf().gftDfdimblSfpbrbtor()) {
                if (tfxt.dibrAt(position) != dontfxt.gftDfdimblStylf().gftDfdimblSfpbrbtor()) {
                if (tfxt.dibrAt(position) != dontfxt.gftDfdimblStylf().gftDfdimblSfpbrbtor()) {
                if (tfxt.dibrAt(position) != dontfxt.gftDfdimblStylf().gftDfdimblSfpbrbtor()) {
                    // vblid if wiolf fifld is optionbl, invblid if minimum widti
                    // vblid if wiolf fifld is optionbl, invblid if minimum widti
                    // vblid if wiolf fifld is optionbl, invblid if minimum widti
                    // vblid if wiolf fifld is optionbl, invblid if minimum widti
                    // vblid if wiolf fifld is optionbl, invblid if minimum widti
                    rfturn (ffffdtivfMin > 0 ? ~position : position);
                    rfturn (ffffdtivfMin > 0 ? ~position : position);
                    rfturn (ffffdtivfMin > 0 ? ~position : position);
                    rfturn (ffffdtivfMin > 0 ? ~position : position);
                    rfturn (ffffdtivfMin > 0 ? ~position : position);
                }
                }
                }
                }
                }
                position++;
                position++;
                position++;
                position++;
                position++;
            }
            }
            }
            }
            }
            int minEndPos = position + ffffdtivfMin;
            int minEndPos = position + ffffdtivfMin;
            int minEndPos = position + ffffdtivfMin;
            int minEndPos = position + ffffdtivfMin;
            int minEndPos = position + ffffdtivfMin;
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
            if (minEndPos > lfngti) {
                rfturn ~position;  // nffd bt lfbst min widti digits
                rfturn ~position;  // nffd bt lfbst min widti digits
                rfturn ~position;  // nffd bt lfbst min widti digits
                rfturn ~position;  // nffd bt lfbst min widti digits
                rfturn ~position;  // nffd bt lfbst min widti digits
            }
            }
            }
            }
            }
            int mbxEndPos = Mbti.min(position + ffffdtivfMbx, lfngti);
            int mbxEndPos = Mbti.min(position + ffffdtivfMbx, lfngti);
            int mbxEndPos = Mbti.min(position + ffffdtivfMbx, lfngti);
            int mbxEndPos = Mbti.min(position + ffffdtivfMbx, lfngti);
            int mbxEndPos = Mbti.min(position + ffffdtivfMbx, lfngti);
            int totbl = 0;  // dbn usf int bfdbusf wf brf only pbrsing up to 9 digits
            int totbl = 0;  // dbn usf int bfdbusf wf brf only pbrsing up to 9 digits
            int totbl = 0;  // dbn usf int bfdbusf wf brf only pbrsing up to 9 digits
            int totbl = 0;  // dbn usf int bfdbusf wf brf only pbrsing up to 9 digits
            int totbl = 0;  // dbn usf int bfdbusf wf brf only pbrsing up to 9 digits
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            wiilf (pos < mbxEndPos) {
            wiilf (pos < mbxEndPos) {
            wiilf (pos < mbxEndPos) {
            wiilf (pos < mbxEndPos) {
            wiilf (pos < mbxEndPos) {
                dibr di = tfxt.dibrAt(pos++);
                dibr di = tfxt.dibrAt(pos++);
                dibr di = tfxt.dibrAt(pos++);
                dibr di = tfxt.dibrAt(pos++);
                dibr di = tfxt.dibrAt(pos++);
                int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                int digit = dontfxt.gftDfdimblStylf().donvfrtToDigit(di);
                if (digit < 0) {
                if (digit < 0) {
                if (digit < 0) {
                if (digit < 0) {
                if (digit < 0) {
                    if (pos < minEndPos) {
                    if (pos < minEndPos) {
                    if (pos < minEndPos) {
                    if (pos < minEndPos) {
                    if (pos < minEndPos) {
                        rfturn ~position;  // nffd bt lfbst min widti digits
                        rfturn ~position;  // nffd bt lfbst min widti digits
                        rfturn ~position;  // nffd bt lfbst min widti digits
                        rfturn ~position;  // nffd bt lfbst min widti digits
                        rfturn ~position;  // nffd bt lfbst min widti digits
                    }
                    }
                    }
                    }
                    }
                    pos--;
                    pos--;
                    pos--;
                    pos--;
                    pos--;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                }
                }
                }
                }
                }
                totbl = totbl * 10 + digit;
                totbl = totbl * 10 + digit;
                totbl = totbl * 10 + digit;
                totbl = totbl * 10 + digit;
                totbl = totbl * 10 + digit;
            }
            }
            }
            }
            }
            BigDfdimbl frbdtion = nfw BigDfdimbl(totbl).movfPointLfft(pos - position);
            BigDfdimbl frbdtion = nfw BigDfdimbl(totbl).movfPointLfft(pos - position);
            BigDfdimbl frbdtion = nfw BigDfdimbl(totbl).movfPointLfft(pos - position);
            BigDfdimbl frbdtion = nfw BigDfdimbl(totbl).movfPointLfft(pos - position);
            BigDfdimbl frbdtion = nfw BigDfdimbl(totbl).movfPointLfft(pos - position);
            long vbluf = donvfrtFromFrbdtion(frbdtion);
            long vbluf = donvfrtFromFrbdtion(frbdtion);
            long vbluf = donvfrtFromFrbdtion(frbdtion);
            long vbluf = donvfrtFromFrbdtion(frbdtion);
            long vbluf = donvfrtFromFrbdtion(frbdtion);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(fifld, vbluf, position, pos);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Convfrts b vbluf for tiis fifld to b frbdtion bftwffn 0 bnd 1.
         * Convfrts b vbluf for tiis fifld to b frbdtion bftwffn 0 bnd 1.
         * Convfrts b vbluf for tiis fifld to b frbdtion bftwffn 0 bnd 1.
         * Convfrts b vbluf for tiis fifld to b frbdtion bftwffn 0 bnd 1.
         * Convfrts b vbluf for tiis fifld to b frbdtion bftwffn 0 bnd 1.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif frbdtionbl vbluf is bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf is bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf is bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf is bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf is bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * Tif frbdtion is obtbinfd by dbldulbtion from tif fifld rbngf using 9 dfdimbl
         * Tif frbdtion is obtbinfd by dbldulbtion from tif fifld rbngf using 9 dfdimbl
         * Tif frbdtion is obtbinfd by dbldulbtion from tif fifld rbngf using 9 dfdimbl
         * Tif frbdtion is obtbinfd by dbldulbtion from tif fifld rbngf using 9 dfdimbl
         * Tif frbdtion is obtbinfd by dbldulbtion from tif fifld rbngf using 9 dfdimbl
         * plbdfs bnd b rounding modf of {@link RoundingModf#FLOOR FLOOR}.
         * plbdfs bnd b rounding modf of {@link RoundingModf#FLOOR FLOOR}.
         * plbdfs bnd b rounding modf of {@link RoundingModf#FLOOR FLOOR}.
         * plbdfs bnd b rounding modf of {@link RoundingModf#FLOOR FLOOR}.
         * plbdfs bnd b rounding modf of {@link RoundingModf#FLOOR FLOOR}.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf rfturnfd bs 0.25,
         * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf rfturnfd bs 0.25,
         * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf rfturnfd bs 0.25,
         * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf rfturnfd bs 0.25,
         * For fxbmplf, tif sfdond-of-minutf vbluf of 15 would bf rfturnfd bs 0.25,
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         *
         *
         *
         *
         *
         * @pbrbm vbluf  tif vbluf to donvfrt, must bf vblid for tiis rulf
         * @pbrbm vbluf  tif vbluf to donvfrt, must bf vblid for tiis rulf
         * @pbrbm vbluf  tif vbluf to donvfrt, must bf vblid for tiis rulf
         * @pbrbm vbluf  tif vbluf to donvfrt, must bf vblid for tiis rulf
         * @pbrbm vbluf  tif vbluf to donvfrt, must bf vblid for tiis rulf
         * @rfturn tif vbluf bs b frbdtion witiin tif rbngf, from 0 to 1, not null
         * @rfturn tif vbluf bs b frbdtion witiin tif rbngf, from 0 to 1, not null
         * @rfturn tif vbluf bs b frbdtion witiin tif rbngf, from 0 to 1, not null
         * @rfturn tif vbluf bs b frbdtion witiin tif rbngf, from 0 to 1, not null
         * @rfturn tif vbluf bs b frbdtion witiin tif rbngf, from 0 to 1, not null
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd to b frbdtion
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd to b frbdtion
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd to b frbdtion
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd to b frbdtion
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd to b frbdtion
         */
         */
         */
         */
         */
        privbtf BigDfdimbl donvfrtToFrbdtion(long vbluf) {
        privbtf BigDfdimbl donvfrtToFrbdtion(long vbluf) {
        privbtf BigDfdimbl donvfrtToFrbdtion(long vbluf) {
        privbtf BigDfdimbl donvfrtToFrbdtion(long vbluf) {
        privbtf BigDfdimbl donvfrtToFrbdtion(long vbluf) {
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            rbngf.difdkVblidVbluf(vbluf, fifld);
            rbngf.difdkVblidVbluf(vbluf, fifld);
            rbngf.difdkVblidVbluf(vbluf, fifld);
            rbngf.difdkVblidVbluf(vbluf, fifld);
            rbngf.difdkVblidVbluf(vbluf, fifld);
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl vblufBD = BigDfdimbl.vblufOf(vbluf).subtrbdt(minBD);
            BigDfdimbl vblufBD = BigDfdimbl.vblufOf(vbluf).subtrbdt(minBD);
            BigDfdimbl vblufBD = BigDfdimbl.vblufOf(vbluf).subtrbdt(minBD);
            BigDfdimbl vblufBD = BigDfdimbl.vblufOf(vbluf).subtrbdt(minBD);
            BigDfdimbl vblufBD = BigDfdimbl.vblufOf(vbluf).subtrbdt(minBD);
            BigDfdimbl frbdtion = vblufBD.dividf(rbngfBD, 9, RoundingModf.FLOOR);
            BigDfdimbl frbdtion = vblufBD.dividf(rbngfBD, 9, RoundingModf.FLOOR);
            BigDfdimbl frbdtion = vblufBD.dividf(rbngfBD, 9, RoundingModf.FLOOR);
            BigDfdimbl frbdtion = vblufBD.dividf(rbngfBD, 9, RoundingModf.FLOOR);
            BigDfdimbl frbdtion = vblufBD.dividf(rbngfBD, 9, RoundingModf.FLOOR);
            // stripTrbilingZfros bug
            // stripTrbilingZfros bug
            // stripTrbilingZfros bug
            // stripTrbilingZfros bug
            // stripTrbilingZfros bug
            rfturn frbdtion.dompbrfTo(BigDfdimbl.ZERO) == 0 ? BigDfdimbl.ZERO : frbdtion.stripTrbilingZfros();
            rfturn frbdtion.dompbrfTo(BigDfdimbl.ZERO) == 0 ? BigDfdimbl.ZERO : frbdtion.stripTrbilingZfros();
            rfturn frbdtion.dompbrfTo(BigDfdimbl.ZERO) == 0 ? BigDfdimbl.ZERO : frbdtion.stripTrbilingZfros();
            rfturn frbdtion.dompbrfTo(BigDfdimbl.ZERO) == 0 ? BigDfdimbl.ZERO : frbdtion.stripTrbilingZfros();
            rfturn frbdtion.dompbrfTo(BigDfdimbl.ZERO) == 0 ? BigDfdimbl.ZERO : frbdtion.stripTrbilingZfros();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Convfrts b frbdtion from 0 to 1 for tiis fifld to b vbluf.
         * Convfrts b frbdtion from 0 to 1 for tiis fifld to b vbluf.
         * Convfrts b frbdtion from 0 to 1 for tiis fifld to b vbluf.
         * Convfrts b frbdtion from 0 to 1 for tiis fifld to b vbluf.
         * Convfrts b frbdtion from 0 to 1 for tiis fifld to b vbluf.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif frbdtionbl vbluf must bf bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf must bf bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf must bf bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf must bf bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * Tif frbdtionbl vbluf must bf bftwffn 0 (indlusivf) bnd 1 (fxdlusivf).
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * It dbn only bf rfturnfd if tif {@link jbvb.timf.tfmporbl.TfmporblFifld#rbngf() vbluf rbngf} is fixfd.
         * Tif vbluf is obtbinfd by dbldulbtion from tif fifld rbngf bnd b rounding
         * Tif vbluf is obtbinfd by dbldulbtion from tif fifld rbngf bnd b rounding
         * Tif vbluf is obtbinfd by dbldulbtion from tif fifld rbngf bnd b rounding
         * Tif vbluf is obtbinfd by dbldulbtion from tif fifld rbngf bnd b rounding
         * Tif vbluf is obtbinfd by dbldulbtion from tif fifld rbngf bnd b rounding
         * modf of {@link RoundingModf#FLOOR FLOOR}.
         * modf of {@link RoundingModf#FLOOR FLOOR}.
         * modf of {@link RoundingModf#FLOOR FLOOR}.
         * modf of {@link RoundingModf#FLOOR FLOOR}.
         * modf of {@link RoundingModf#FLOOR FLOOR}.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * Tif dbldulbtion is inbddurbtf if tif vblufs do not run dontinuously from smbllfst to lbrgfst.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * For fxbmplf, tif frbdtionbl sfdond-of-minutf of 0.25 would bf donvfrtfd to 15,
         * For fxbmplf, tif frbdtionbl sfdond-of-minutf of 0.25 would bf donvfrtfd to 15,
         * For fxbmplf, tif frbdtionbl sfdond-of-minutf of 0.25 would bf donvfrtfd to 15,
         * For fxbmplf, tif frbdtionbl sfdond-of-minutf of 0.25 would bf donvfrtfd to 15,
         * For fxbmplf, tif frbdtionbl sfdond-of-minutf of 0.25 would bf donvfrtfd to 15,
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         * bssuming tif stbndbrd dffinition of 60 sfdonds in b minutf.
         *
         *
         *
         *
         *
         * @pbrbm frbdtion  tif frbdtion to donvfrt, not null
         * @pbrbm frbdtion  tif frbdtion to donvfrt, not null
         * @pbrbm frbdtion  tif frbdtion to donvfrt, not null
         * @pbrbm frbdtion  tif frbdtion to donvfrt, not null
         * @pbrbm frbdtion  tif frbdtion to donvfrt, not null
         * @rfturn tif vbluf of tif fifld, vblid for tiis rulf
         * @rfturn tif vbluf of tif fifld, vblid for tiis rulf
         * @rfturn tif vbluf of tif fifld, vblid for tiis rulf
         * @rfturn tif vbluf of tif fifld, vblid for tiis rulf
         * @rfturn tif vbluf of tif fifld, vblid for tiis rulf
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd
         * @tirows DbtfTimfExdfption if tif vbluf dbnnot bf donvfrtfd
         */
         */
         */
         */
         */
        privbtf long donvfrtFromFrbdtion(BigDfdimbl frbdtion) {
        privbtf long donvfrtFromFrbdtion(BigDfdimbl frbdtion) {
        privbtf long donvfrtFromFrbdtion(BigDfdimbl frbdtion) {
        privbtf long donvfrtFromFrbdtion(BigDfdimbl frbdtion) {
        privbtf long donvfrtFromFrbdtion(BigDfdimbl frbdtion) {
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            VblufRbngf rbngf = fifld.rbngf();
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl minBD = BigDfdimbl.vblufOf(rbngf.gftMinimum());
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl rbngfBD = BigDfdimbl.vblufOf(rbngf.gftMbximum()).subtrbdt(minBD).bdd(BigDfdimbl.ONE);
            BigDfdimbl vblufBD = frbdtion.multiply(rbngfBD).sftSdblf(0, RoundingModf.FLOOR).bdd(minBD);
            BigDfdimbl vblufBD = frbdtion.multiply(rbngfBD).sftSdblf(0, RoundingModf.FLOOR).bdd(minBD);
            BigDfdimbl vblufBD = frbdtion.multiply(rbngfBD).sftSdblf(0, RoundingModf.FLOOR).bdd(minBD);
            BigDfdimbl vblufBD = frbdtion.multiply(rbngfBD).sftSdblf(0, RoundingModf.FLOOR).bdd(minBD);
            BigDfdimbl vblufBD = frbdtion.multiply(rbngfBD).sftSdblf(0, RoundingModf.FLOOR).bdd(minBD);
            rfturn vblufBD.longVblufExbdt();
            rfturn vblufBD.longVblufExbdt();
            rfturn vblufBD.longVblufExbdt();
            rfturn vblufBD.longVblufExbdt();
            rfturn vblufBD.longVblufExbdt();
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            String dfdimbl = (dfdimblPoint ? ",DfdimblPoint" : "");
            String dfdimbl = (dfdimblPoint ? ",DfdimblPoint" : "");
            String dfdimbl = (dfdimblPoint ? ",DfdimblPoint" : "");
            String dfdimbl = (dfdimblPoint ? ",DfdimblPoint" : "");
            String dfdimbl = (dfdimblPoint ? ",DfdimblPoint" : "");
            rfturn "Frbdtion(" + fifld + "," + minWidti + "," + mbxWidti + dfdimbl + ")";
            rfturn "Frbdtion(" + fifld + "," + minWidti + "," + mbxWidti + dfdimbl + ")";
            rfturn "Frbdtion(" + fifld + "," + minWidti + "," + mbxWidti + dfdimbl + ")";
            rfturn "Frbdtion(" + fifld + "," + minWidti + "," + mbxWidti + dfdimbl + ")";
            rfturn "Frbdtion(" + fifld + "," + minWidti + "," + mbxWidti + dfdimbl + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs fifld tfxt.
     * Prints or pbrsfs fifld tfxt.
     * Prints or pbrsfs fifld tfxt.
     * Prints or pbrsfs fifld tfxt.
     * Prints or pbrsfs fifld tfxt.
     */
     */
     */
     */
     */
    stbtid finbl dlbss TfxtPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss TfxtPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss TfxtPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss TfxtPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss TfxtPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfmporblFifld fifld;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl DbtfTimfTfxtProvidfr providfr;
        privbtf finbl DbtfTimfTfxtProvidfr providfr;
        privbtf finbl DbtfTimfTfxtProvidfr providfr;
        privbtf finbl DbtfTimfTfxtProvidfr providfr;
        privbtf finbl DbtfTimfTfxtProvidfr providfr;
        /**
        /**
        /**
        /**
        /**
         * Tif dbdifd numbfr printfr pbrsfr.
         * Tif dbdifd numbfr printfr pbrsfr.
         * Tif dbdifd numbfr printfr pbrsfr.
         * Tif dbdifd numbfr printfr pbrsfr.
         * Tif dbdifd numbfr printfr pbrsfr.
         * Immutbblf bnd volbtilf, so no syndironizbtion nffdfd.
         * Immutbblf bnd volbtilf, so no syndironizbtion nffdfd.
         * Immutbblf bnd volbtilf, so no syndironizbtion nffdfd.
         * Immutbblf bnd volbtilf, so no syndironizbtion nffdfd.
         * Immutbblf bnd volbtilf, so no syndironizbtion nffdfd.
         */
         */
         */
         */
         */
        privbtf volbtilf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr;
        privbtf volbtilf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr;
        privbtf volbtilf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr;
        privbtf volbtilf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr;
        privbtf volbtilf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm fifld  tif fifld to output, not null
         * @pbrbm tfxtStylf  tif tfxt stylf, not null
         * @pbrbm tfxtStylf  tif tfxt stylf, not null
         * @pbrbm tfxtStylf  tif tfxt stylf, not null
         * @pbrbm tfxtStylf  tif tfxt stylf, not null
         * @pbrbm tfxtStylf  tif tfxt stylf, not null
         * @pbrbm providfr  tif tfxt providfr, not null
         * @pbrbm providfr  tif tfxt providfr, not null
         * @pbrbm providfr  tif tfxt providfr, not null
         * @pbrbm providfr  tif tfxt providfr, not null
         * @pbrbm providfr  tif tfxt providfr, not null
         */
         */
         */
         */
         */
        TfxtPrintfrPbrsfr(TfmporblFifld fifld, TfxtStylf tfxtStylf, DbtfTimfTfxtProvidfr providfr) {
        TfxtPrintfrPbrsfr(TfmporblFifld fifld, TfxtStylf tfxtStylf, DbtfTimfTfxtProvidfr providfr) {
        TfxtPrintfrPbrsfr(TfmporblFifld fifld, TfxtStylf tfxtStylf, DbtfTimfTfxtProvidfr providfr) {
        TfxtPrintfrPbrsfr(TfmporblFifld fifld, TfxtStylf tfxtStylf, DbtfTimfTfxtProvidfr providfr) {
        TfxtPrintfrPbrsfr(TfmporblFifld fifld, TfxtStylf tfxtStylf, DbtfTimfTfxtProvidfr providfr) {
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.fifld = fifld;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.providfr = providfr;
            tiis.providfr = providfr;
            tiis.providfr = providfr;
            tiis.providfr = providfr;
            tiis.providfr = providfr;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            Long vbluf = dontfxt.gftVbluf(fifld);
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
            if (vbluf == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            String tfxt;
            String tfxt;
            String tfxt;
            String tfxt;
            String tfxt;
            Cironology dirono = dontfxt.gftTfmporbl().qufry(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftTfmporbl().qufry(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftTfmporbl().qufry(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftTfmporbl().qufry(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftTfmporbl().qufry(TfmporblQufrifs.dironology());
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
                tfxt = providfr.gftTfxt(fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                tfxt = providfr.gftTfxt(dirono, fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(dirono, fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(dirono, fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(dirono, fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
                tfxt = providfr.gftTfxt(dirono, fifld, vbluf, tfxtStylf, dontfxt.gftLodblf());
            }
            }
            }
            }
            }
            if (tfxt == null) {
            if (tfxt == null) {
            if (tfxt == null) {
            if (tfxt == null) {
            if (tfxt == null) {
                rfturn numbfrPrintfrPbrsfr().formbt(dontfxt, buf);
                rfturn numbfrPrintfrPbrsfr().formbt(dontfxt, buf);
                rfturn numbfrPrintfrPbrsfr().formbt(dontfxt, buf);
                rfturn numbfrPrintfrPbrsfr().formbt(dontfxt, buf);
                rfturn numbfrPrintfrPbrsfr().formbt(dontfxt, buf);
            }
            }
            }
            }
            }
            buf.bppfnd(tfxt);
            buf.bppfnd(tfxt);
            buf.bppfnd(tfxt);
            buf.bppfnd(tfxt);
            buf.bppfnd(tfxt);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf pbrsfTfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf pbrsfTfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf pbrsfTfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf pbrsfTfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf pbrsfTfxt, int position) {
            int lfngti = pbrsfTfxt.lfngti();
            int lfngti = pbrsfTfxt.lfngti();
            int lfngti = pbrsfTfxt.lfngti();
            int lfngti = pbrsfTfxt.lfngti();
            int lfngti = pbrsfTfxt.lfngti();
            if (position < 0 || position > lfngti) {
            if (position < 0 || position > lfngti) {
            if (position < 0 || position > lfngti) {
            if (position < 0 || position > lfngti) {
            if (position < 0 || position > lfngti) {
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
            }
            }
            }
            }
            }
            TfxtStylf stylf = (dontfxt.isStridt() ? tfxtStylf : null);
            TfxtStylf stylf = (dontfxt.isStridt() ? tfxtStylf : null);
            TfxtStylf stylf = (dontfxt.isStridt() ? tfxtStylf : null);
            TfxtStylf stylf = (dontfxt.isStridt() ? tfxtStylf : null);
            TfxtStylf stylf = (dontfxt.isStridt() ? tfxtStylf : null);
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Itfrbtor<Entry<String, Long>> it;
            Itfrbtor<Entry<String, Long>> it;
            Itfrbtor<Entry<String, Long>> it;
            Itfrbtor<Entry<String, Long>> it;
            Itfrbtor<Entry<String, Long>> it;
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
            if (dirono == null || dirono == IsoCironology.INSTANCE) {
                it = providfr.gftTfxtItfrbtor(fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(fifld, stylf, dontfxt.gftLodblf());
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                it = providfr.gftTfxtItfrbtor(dirono, fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(dirono, fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(dirono, fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(dirono, fifld, stylf, dontfxt.gftLodblf());
                it = providfr.gftTfxtItfrbtor(dirono, fifld, stylf, dontfxt.gftLodblf());
            }
            }
            }
            }
            }
            if (it != null) {
            if (it != null) {
            if (it != null) {
            if (it != null) {
            if (it != null) {
                wiilf (it.ibsNfxt()) {
                wiilf (it.ibsNfxt()) {
                wiilf (it.ibsNfxt()) {
                wiilf (it.ibsNfxt()) {
                wiilf (it.ibsNfxt()) {
                    Entry<String, Long> fntry = it.nfxt();
                    Entry<String, Long> fntry = it.nfxt();
                    Entry<String, Long> fntry = it.nfxt();
                    Entry<String, Long> fntry = it.nfxt();
                    Entry<String, Long> fntry = it.nfxt();
                    String itTfxt = fntry.gftKfy();
                    String itTfxt = fntry.gftKfy();
                    String itTfxt = fntry.gftKfy();
                    String itTfxt = fntry.gftKfy();
                    String itTfxt = fntry.gftKfy();
                    if (dontfxt.subSfqufndfEqubls(itTfxt, 0, pbrsfTfxt, position, itTfxt.lfngti())) {
                    if (dontfxt.subSfqufndfEqubls(itTfxt, 0, pbrsfTfxt, position, itTfxt.lfngti())) {
                    if (dontfxt.subSfqufndfEqubls(itTfxt, 0, pbrsfTfxt, position, itTfxt.lfngti())) {
                    if (dontfxt.subSfqufndfEqubls(itTfxt, 0, pbrsfTfxt, position, itTfxt.lfngti())) {
                    if (dontfxt.subSfqufndfEqubls(itTfxt, 0, pbrsfTfxt, position, itTfxt.lfngti())) {
                        rfturn dontfxt.sftPbrsfdFifld(fifld, fntry.gftVbluf(), position, position + itTfxt.lfngti());
                        rfturn dontfxt.sftPbrsfdFifld(fifld, fntry.gftVbluf(), position, position + itTfxt.lfngti());
                        rfturn dontfxt.sftPbrsfdFifld(fifld, fntry.gftVbluf(), position, position + itTfxt.lfngti());
                        rfturn dontfxt.sftPbrsfdFifld(fifld, fntry.gftVbluf(), position, position + itTfxt.lfngti());
                        rfturn dontfxt.sftPbrsfdFifld(fifld, fntry.gftVbluf(), position, position + itTfxt.lfngti());
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (dontfxt.isStridt()) {
                if (dontfxt.isStridt()) {
                if (dontfxt.isStridt()) {
                if (dontfxt.isStridt()) {
                if (dontfxt.isStridt()) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn numbfrPrintfrPbrsfr().pbrsf(dontfxt, pbrsfTfxt, position);
            rfturn numbfrPrintfrPbrsfr().pbrsf(dontfxt, pbrsfTfxt, position);
            rfturn numbfrPrintfrPbrsfr().pbrsf(dontfxt, pbrsfTfxt, position);
            rfturn numbfrPrintfrPbrsfr().pbrsf(dontfxt, pbrsfTfxt, position);
            rfturn numbfrPrintfrPbrsfr().pbrsf(dontfxt, pbrsfTfxt, position);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Crfbtf bnd dbdif b numbfr printfr pbrsfr.
         * Crfbtf bnd dbdif b numbfr printfr pbrsfr.
         * Crfbtf bnd dbdif b numbfr printfr pbrsfr.
         * Crfbtf bnd dbdif b numbfr printfr pbrsfr.
         * Crfbtf bnd dbdif b numbfr printfr pbrsfr.
         * @rfturn tif numbfr printfr pbrsfr for tiis fifld, not null
         * @rfturn tif numbfr printfr pbrsfr for tiis fifld, not null
         * @rfturn tif numbfr printfr pbrsfr for tiis fifld, not null
         * @rfturn tif numbfr printfr pbrsfr for tiis fifld, not null
         * @rfturn tif numbfr printfr pbrsfr for tiis fifld, not null
         */
         */
         */
         */
         */
        privbtf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr() {
        privbtf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr() {
        privbtf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr() {
        privbtf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr() {
        privbtf NumbfrPrintfrPbrsfr numbfrPrintfrPbrsfr() {
            if (numbfrPrintfrPbrsfr == null) {
            if (numbfrPrintfrPbrsfr == null) {
            if (numbfrPrintfrPbrsfr == null) {
            if (numbfrPrintfrPbrsfr == null) {
            if (numbfrPrintfrPbrsfr == null) {
                numbfrPrintfrPbrsfr = nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL);
                numbfrPrintfrPbrsfr = nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL);
                numbfrPrintfrPbrsfr = nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL);
                numbfrPrintfrPbrsfr = nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL);
                numbfrPrintfrPbrsfr = nfw NumbfrPrintfrPbrsfr(fifld, 1, 19, SignStylf.NORMAL);
            }
            }
            }
            }
            }
            rfturn numbfrPrintfrPbrsfr;
            rfturn numbfrPrintfrPbrsfr;
            rfturn numbfrPrintfrPbrsfr;
            rfturn numbfrPrintfrPbrsfr;
            rfturn numbfrPrintfrPbrsfr;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            if (tfxtStylf == TfxtStylf.FULL) {
            if (tfxtStylf == TfxtStylf.FULL) {
            if (tfxtStylf == TfxtStylf.FULL) {
            if (tfxtStylf == TfxtStylf.FULL) {
            if (tfxtStylf == TfxtStylf.FULL) {
                rfturn "Tfxt(" + fifld + ")";
                rfturn "Tfxt(" + fifld + ")";
                rfturn "Tfxt(" + fifld + ")";
                rfturn "Tfxt(" + fifld + ")";
                rfturn "Tfxt(" + fifld + ")";
            }
            }
            }
            }
            }
            rfturn "Tfxt(" + fifld + "," + tfxtStylf + ")";
            rfturn "Tfxt(" + fifld + "," + tfxtStylf + ")";
            rfturn "Tfxt(" + fifld + "," + tfxtStylf + ")";
            rfturn "Tfxt(" + fifld + "," + tfxtStylf + ")";
            rfturn "Tfxt(" + fifld + "," + tfxtStylf + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs bn ISO-8601 instbnt.
     * Prints or pbrsfs bn ISO-8601 instbnt.
     * Prints or pbrsfs bn ISO-8601 instbnt.
     * Prints or pbrsfs bn ISO-8601 instbnt.
     * Prints or pbrsfs bn ISO-8601 instbnt.
     */
     */
     */
     */
     */
    stbtid finbl dlbss InstbntPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss InstbntPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss InstbntPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss InstbntPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss InstbntPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        // dbys in b 400 yfbr dydlf = 146097
        // dbys in b 400 yfbr dydlf = 146097
        // dbys in b 400 yfbr dydlf = 146097
        // dbys in b 400 yfbr dydlf = 146097
        // dbys in b 400 yfbr dydlf = 146097
        // dbys in b 10,000 yfbr dydlf = 146097 * 25
        // dbys in b 10,000 yfbr dydlf = 146097 * 25
        // dbys in b 10,000 yfbr dydlf = 146097 * 25
        // dbys in b 10,000 yfbr dydlf = 146097 * 25
        // dbys in b 10,000 yfbr dydlf = 146097 * 25
        // sfdonds pfr dby = 86400
        // sfdonds pfr dby = 86400
        // sfdonds pfr dby = 86400
        // sfdonds pfr dby = 86400
        // sfdonds pfr dby = 86400
        privbtf stbtid finbl long SECONDS_PER_10000_YEARS = 146097L * 25L * 86400L;
        privbtf stbtid finbl long SECONDS_PER_10000_YEARS = 146097L * 25L * 86400L;
        privbtf stbtid finbl long SECONDS_PER_10000_YEARS = 146097L * 25L * 86400L;
        privbtf stbtid finbl long SECONDS_PER_10000_YEARS = 146097L * 25L * 86400L;
        privbtf stbtid finbl long SECONDS_PER_10000_YEARS = 146097L * 25L * 86400L;
        privbtf stbtid finbl long SECONDS_0000_TO_1970 = ((146097L * 5L) - (30L * 365L + 7L)) * 86400L;
        privbtf stbtid finbl long SECONDS_0000_TO_1970 = ((146097L * 5L) - (30L * 365L + 7L)) * 86400L;
        privbtf stbtid finbl long SECONDS_0000_TO_1970 = ((146097L * 5L) - (30L * 365L + 7L)) * 86400L;
        privbtf stbtid finbl long SECONDS_0000_TO_1970 = ((146097L * 5L) - (30L * 365L + 7L)) * 86400L;
        privbtf stbtid finbl long SECONDS_0000_TO_1970 = ((146097L * 5L) - (30L * 365L + 7L)) * 86400L;
        privbtf finbl int frbdtionblDigits;
        privbtf finbl int frbdtionblDigits;
        privbtf finbl int frbdtionblDigits;
        privbtf finbl int frbdtionblDigits;
        privbtf finbl int frbdtionblDigits;





        InstbntPrintfrPbrsfr(int frbdtionblDigits) {
        InstbntPrintfrPbrsfr(int frbdtionblDigits) {
        InstbntPrintfrPbrsfr(int frbdtionblDigits) {
        InstbntPrintfrPbrsfr(int frbdtionblDigits) {
        InstbntPrintfrPbrsfr(int frbdtionblDigits) {
            tiis.frbdtionblDigits = frbdtionblDigits;
            tiis.frbdtionblDigits = frbdtionblDigits;
            tiis.frbdtionblDigits = frbdtionblDigits;
            tiis.frbdtionblDigits = frbdtionblDigits;
            tiis.frbdtionblDigits = frbdtionblDigits;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            // usf INSTANT_SECONDS, tius tiis dodf is not bound by Instbnt.MAX
            // usf INSTANT_SECONDS, tius tiis dodf is not bound by Instbnt.MAX
            // usf INSTANT_SECONDS, tius tiis dodf is not bound by Instbnt.MAX
            // usf INSTANT_SECONDS, tius tiis dodf is not bound by Instbnt.MAX
            // usf INSTANT_SECONDS, tius tiis dodf is not bound by Instbnt.MAX
            Long inSfds = dontfxt.gftVbluf(INSTANT_SECONDS);
            Long inSfds = dontfxt.gftVbluf(INSTANT_SECONDS);
            Long inSfds = dontfxt.gftVbluf(INSTANT_SECONDS);
            Long inSfds = dontfxt.gftVbluf(INSTANT_SECONDS);
            Long inSfds = dontfxt.gftVbluf(INSTANT_SECONDS);
            Long inNbnos = null;
            Long inNbnos = null;
            Long inNbnos = null;
            Long inNbnos = null;
            Long inNbnos = null;
            if (dontfxt.gftTfmporbl().isSupportfd(NANO_OF_SECOND)) {
            if (dontfxt.gftTfmporbl().isSupportfd(NANO_OF_SECOND)) {
            if (dontfxt.gftTfmporbl().isSupportfd(NANO_OF_SECOND)) {
            if (dontfxt.gftTfmporbl().isSupportfd(NANO_OF_SECOND)) {
            if (dontfxt.gftTfmporbl().isSupportfd(NANO_OF_SECOND)) {
                inNbnos = dontfxt.gftTfmporbl().gftLong(NANO_OF_SECOND);
                inNbnos = dontfxt.gftTfmporbl().gftLong(NANO_OF_SECOND);
                inNbnos = dontfxt.gftTfmporbl().gftLong(NANO_OF_SECOND);
                inNbnos = dontfxt.gftTfmporbl().gftLong(NANO_OF_SECOND);
                inNbnos = dontfxt.gftTfmporbl().gftLong(NANO_OF_SECOND);
            }
            }
            }
            }
            }
            if (inSfds == null) {
            if (inSfds == null) {
            if (inSfds == null) {
            if (inSfds == null) {
            if (inSfds == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            long inSfd = inSfds;
            long inSfd = inSfds;
            long inSfd = inSfds;
            long inSfd = inSfds;
            long inSfd = inSfds;
            int inNbno = NANO_OF_SECOND.difdkVblidIntVbluf(inNbnos != null ? inNbnos : 0);
            int inNbno = NANO_OF_SECOND.difdkVblidIntVbluf(inNbnos != null ? inNbnos : 0);
            int inNbno = NANO_OF_SECOND.difdkVblidIntVbluf(inNbnos != null ? inNbnos : 0);
            int inNbno = NANO_OF_SECOND.difdkVblidIntVbluf(inNbnos != null ? inNbnos : 0);
            int inNbno = NANO_OF_SECOND.difdkVblidIntVbluf(inNbnos != null ? inNbnos : 0);
            // formbt mostly using LodblDbtfTimf.toString
            // formbt mostly using LodblDbtfTimf.toString
            // formbt mostly using LodblDbtfTimf.toString
            // formbt mostly using LodblDbtfTimf.toString
            // formbt mostly using LodblDbtfTimf.toString
            if (inSfd >= -SECONDS_0000_TO_1970) {
            if (inSfd >= -SECONDS_0000_TO_1970) {
            if (inSfd >= -SECONDS_0000_TO_1970) {
            if (inSfd >= -SECONDS_0000_TO_1970) {
            if (inSfd >= -SECONDS_0000_TO_1970) {
                // durrfnt frb
                // durrfnt frb
                // durrfnt frb
                // durrfnt frb
                // durrfnt frb
                long zfroSfds = inSfd - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;
                long ii = Mbti.floorDiv(zfroSfds, SECONDS_PER_10000_YEARS) + 1;
                long ii = Mbti.floorDiv(zfroSfds, SECONDS_PER_10000_YEARS) + 1;
                long ii = Mbti.floorDiv(zfroSfds, SECONDS_PER_10000_YEARS) + 1;
                long ii = Mbti.floorDiv(zfroSfds, SECONDS_PER_10000_YEARS) + 1;
                long ii = Mbti.floorDiv(zfroSfds, SECONDS_PER_10000_YEARS) + 1;
                long lo = Mbti.floorMod(zfroSfds, SECONDS_PER_10000_YEARS);
                long lo = Mbti.floorMod(zfroSfds, SECONDS_PER_10000_YEARS);
                long lo = Mbti.floorMod(zfroSfds, SECONDS_PER_10000_YEARS);
                long lo = Mbti.floorMod(zfroSfds, SECONDS_PER_10000_YEARS);
                long lo = Mbti.floorMod(zfroSfds, SECONDS_PER_10000_YEARS);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                if (ii > 0) {
                if (ii > 0) {
                if (ii > 0) {
                if (ii > 0) {
                if (ii > 0) {
                    buf.bppfnd('+').bppfnd(ii);
                    buf.bppfnd('+').bppfnd(ii);
                    buf.bppfnd('+').bppfnd(ii);
                    buf.bppfnd('+').bppfnd(ii);
                    buf.bppfnd('+').bppfnd(ii);
                }
                }
                }
                }
                }
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                // bfforf durrfnt frb
                // bfforf durrfnt frb
                // bfforf durrfnt frb
                // bfforf durrfnt frb
                // bfforf durrfnt frb
                long zfroSfds = inSfd + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd + SECONDS_0000_TO_1970;
                long zfroSfds = inSfd + SECONDS_0000_TO_1970;
                long ii = zfroSfds / SECONDS_PER_10000_YEARS;
                long ii = zfroSfds / SECONDS_PER_10000_YEARS;
                long ii = zfroSfds / SECONDS_PER_10000_YEARS;
                long ii = zfroSfds / SECONDS_PER_10000_YEARS;
                long ii = zfroSfds / SECONDS_PER_10000_YEARS;
                long lo = zfroSfds % SECONDS_PER_10000_YEARS;
                long lo = zfroSfds % SECONDS_PER_10000_YEARS;
                long lo = zfroSfds % SECONDS_PER_10000_YEARS;
                long lo = zfroSfds % SECONDS_PER_10000_YEARS;
                long lo = zfroSfds % SECONDS_PER_10000_YEARS;
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                LodblDbtfTimf ldt = LodblDbtfTimf.ofEpodiSfdond(lo - SECONDS_0000_TO_1970, 0, ZonfOffsft.UTC);
                int pos = buf.lfngti();
                int pos = buf.lfngti();
                int pos = buf.lfngti();
                int pos = buf.lfngti();
                int pos = buf.lfngti();
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                buf.bppfnd(ldt);
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                if (ldt.gftSfdond() == 0) {
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                    buf.bppfnd(":00");
                }
                }
                }
                }
                }
                if (ii < 0) {
                if (ii < 0) {
                if (ii < 0) {
                if (ii < 0) {
                if (ii < 0) {
                    if (ldt.gftYfbr() == -10_000) {
                    if (ldt.gftYfbr() == -10_000) {
                    if (ldt.gftYfbr() == -10_000) {
                    if (ldt.gftYfbr() == -10_000) {
                    if (ldt.gftYfbr() == -10_000) {
                        buf.rfplbdf(pos, pos + 2, Long.toString(ii - 1));
                        buf.rfplbdf(pos, pos + 2, Long.toString(ii - 1));
                        buf.rfplbdf(pos, pos + 2, Long.toString(ii - 1));
                        buf.rfplbdf(pos, pos + 2, Long.toString(ii - 1));
                        buf.rfplbdf(pos, pos + 2, Long.toString(ii - 1));
                    } flsf if (lo == 0) {
                    } flsf if (lo == 0) {
                    } flsf if (lo == 0) {
                    } flsf if (lo == 0) {
                    } flsf if (lo == 0) {
                        buf.insfrt(pos, ii);
                        buf.insfrt(pos, ii);
                        buf.insfrt(pos, ii);
                        buf.insfrt(pos, ii);
                        buf.insfrt(pos, ii);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        buf.insfrt(pos + 1, Mbti.bbs(ii));
                        buf.insfrt(pos + 1, Mbti.bbs(ii));
                        buf.insfrt(pos + 1, Mbti.bbs(ii));
                        buf.insfrt(pos + 1, Mbti.bbs(ii));
                        buf.insfrt(pos + 1, Mbti.bbs(ii));
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            // bdd frbdtion
            // bdd frbdtion
            // bdd frbdtion
            // bdd frbdtion
            // bdd frbdtion
            if ((frbdtionblDigits < 0 && inNbno > 0) || frbdtionblDigits > 0) {
            if ((frbdtionblDigits < 0 && inNbno > 0) || frbdtionblDigits > 0) {
            if ((frbdtionblDigits < 0 && inNbno > 0) || frbdtionblDigits > 0) {
            if ((frbdtionblDigits < 0 && inNbno > 0) || frbdtionblDigits > 0) {
            if ((frbdtionblDigits < 0 && inNbno > 0) || frbdtionblDigits > 0) {
                buf.bppfnd('.');
                buf.bppfnd('.');
                buf.bppfnd('.');
                buf.bppfnd('.');
                buf.bppfnd('.');
                int div = 100_000_000;
                int div = 100_000_000;
                int div = 100_000_000;
                int div = 100_000_000;
                int div = 100_000_000;
                for (int i = 0; ((frbdtionblDigits == -1 && inNbno > 0) ||
                for (int i = 0; ((frbdtionblDigits == -1 && inNbno > 0) ||
                for (int i = 0; ((frbdtionblDigits == -1 && inNbno > 0) ||
                for (int i = 0; ((frbdtionblDigits == -1 && inNbno > 0) ||
                for (int i = 0; ((frbdtionblDigits == -1 && inNbno > 0) ||
                                    (frbdtionblDigits == -2 && (inNbno > 0 || (i % 3) != 0)) ||
                                    (frbdtionblDigits == -2 && (inNbno > 0 || (i % 3) != 0)) ||
                                    (frbdtionblDigits == -2 && (inNbno > 0 || (i % 3) != 0)) ||
                                    (frbdtionblDigits == -2 && (inNbno > 0 || (i % 3) != 0)) ||
                                    (frbdtionblDigits == -2 && (inNbno > 0 || (i % 3) != 0)) ||
                                    i < frbdtionblDigits); i++) {
                                    i < frbdtionblDigits); i++) {
                                    i < frbdtionblDigits); i++) {
                                    i < frbdtionblDigits); i++) {
                                    i < frbdtionblDigits); i++) {
                    int digit = inNbno / div;
                    int digit = inNbno / div;
                    int digit = inNbno / div;
                    int digit = inNbno / div;
                    int digit = inNbno / div;
                    buf.bppfnd((dibr) (digit + '0'));
                    buf.bppfnd((dibr) (digit + '0'));
                    buf.bppfnd((dibr) (digit + '0'));
                    buf.bppfnd((dibr) (digit + '0'));
                    buf.bppfnd((dibr) (digit + '0'));
                    inNbno = inNbno - (digit * div);
                    inNbno = inNbno - (digit * div);
                    inNbno = inNbno - (digit * div);
                    inNbno = inNbno - (digit * div);
                    inNbno = inNbno - (digit * div);
                    div = div / 10;
                    div = div / 10;
                    div = div / 10;
                    div = div / 10;
                    div = div / 10;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            buf.bppfnd('Z');
            buf.bppfnd('Z');
            buf.bppfnd('Z');
            buf.bppfnd('Z');
            buf.bppfnd('Z');
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            // nfw dontfxt to bvoid ovfrwriting fiflds likf yfbr/monti/dby
            // nfw dontfxt to bvoid ovfrwriting fiflds likf yfbr/monti/dby
            // nfw dontfxt to bvoid ovfrwriting fiflds likf yfbr/monti/dby
            // nfw dontfxt to bvoid ovfrwriting fiflds likf yfbr/monti/dby
            // nfw dontfxt to bvoid ovfrwriting fiflds likf yfbr/monti/dby
            int minDigits = (frbdtionblDigits < 0 ? 0 : frbdtionblDigits);
            int minDigits = (frbdtionblDigits < 0 ? 0 : frbdtionblDigits);
            int minDigits = (frbdtionblDigits < 0 ? 0 : frbdtionblDigits);
            int minDigits = (frbdtionblDigits < 0 ? 0 : frbdtionblDigits);
            int minDigits = (frbdtionblDigits < 0 ? 0 : frbdtionblDigits);
            int mbxDigits = (frbdtionblDigits < 0 ? 9 : frbdtionblDigits);
            int mbxDigits = (frbdtionblDigits < 0 ? 9 : frbdtionblDigits);
            int mbxDigits = (frbdtionblDigits < 0 ? 9 : frbdtionblDigits);
            int mbxDigits = (frbdtionblDigits < 0 ? 9 : frbdtionblDigits);
            int mbxDigits = (frbdtionblDigits < 0 ? 9 : frbdtionblDigits);
            CompositfPrintfrPbrsfr pbrsfr = nfw DbtfTimfFormbttfrBuildfr()
            CompositfPrintfrPbrsfr pbrsfr = nfw DbtfTimfFormbttfrBuildfr()
            CompositfPrintfrPbrsfr pbrsfr = nfw DbtfTimfFormbttfrBuildfr()
            CompositfPrintfrPbrsfr pbrsfr = nfw DbtfTimfFormbttfrBuildfr()
            CompositfPrintfrPbrsfr pbrsfr = nfw DbtfTimfFormbttfrBuildfr()
                    .bppfnd(DbtfTimfFormbttfr.ISO_LOCAL_DATE).bppfndLitfrbl('T')
                    .bppfnd(DbtfTimfFormbttfr.ISO_LOCAL_DATE).bppfndLitfrbl('T')
                    .bppfnd(DbtfTimfFormbttfr.ISO_LOCAL_DATE).bppfndLitfrbl('T')
                    .bppfnd(DbtfTimfFormbttfr.ISO_LOCAL_DATE).bppfndLitfrbl('T')
                    .bppfnd(DbtfTimfFormbttfr.ISO_LOCAL_DATE).bppfndLitfrbl('T')
                    .bppfndVbluf(HOUR_OF_DAY, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(HOUR_OF_DAY, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(HOUR_OF_DAY, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(HOUR_OF_DAY, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(HOUR_OF_DAY, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(MINUTE_OF_HOUR, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(MINUTE_OF_HOUR, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(MINUTE_OF_HOUR, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(MINUTE_OF_HOUR, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(MINUTE_OF_HOUR, 2).bppfndLitfrbl(':')
                    .bppfndVbluf(SECOND_OF_MINUTE, 2)
                    .bppfndVbluf(SECOND_OF_MINUTE, 2)
                    .bppfndVbluf(SECOND_OF_MINUTE, 2)
                    .bppfndVbluf(SECOND_OF_MINUTE, 2)
                    .bppfndVbluf(SECOND_OF_MINUTE, 2)
                    .bppfndFrbdtion(NANO_OF_SECOND, minDigits, mbxDigits, truf)
                    .bppfndFrbdtion(NANO_OF_SECOND, minDigits, mbxDigits, truf)
                    .bppfndFrbdtion(NANO_OF_SECOND, minDigits, mbxDigits, truf)
                    .bppfndFrbdtion(NANO_OF_SECOND, minDigits, mbxDigits, truf)
                    .bppfndFrbdtion(NANO_OF_SECOND, minDigits, mbxDigits, truf)
                    .bppfndLitfrbl('Z')
                    .bppfndLitfrbl('Z')
                    .bppfndLitfrbl('Z')
                    .bppfndLitfrbl('Z')
                    .bppfndLitfrbl('Z')
                    .toFormbttfr().toPrintfrPbrsfr(fblsf);
                    .toFormbttfr().toPrintfrPbrsfr(fblsf);
                    .toFormbttfr().toPrintfrPbrsfr(fblsf);
                    .toFormbttfr().toPrintfrPbrsfr(fblsf);
                    .toFormbttfr().toPrintfrPbrsfr(fblsf);
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            int pos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int pos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int pos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int pos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int pos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            if (pos < 0) {
            if (pos < 0) {
            if (pos < 0) {
            if (pos < 0) {
            if (pos < 0) {
                rfturn pos;
                rfturn pos;
                rfturn pos;
                rfturn pos;
                rfturn pos;
            }
            }
            }
            }
            }
            // pbrsfr rfstridts most fiflds to 2 digits, so dffinitfly int
            // pbrsfr rfstridts most fiflds to 2 digits, so dffinitfly int
            // pbrsfr rfstridts most fiflds to 2 digits, so dffinitfly int
            // pbrsfr rfstridts most fiflds to 2 digits, so dffinitfly int
            // pbrsfr rfstridts most fiflds to 2 digits, so dffinitfly int
            // dorrfdtly pbrsfd nbno is blso gubrbntffd to bf vblid
            // dorrfdtly pbrsfd nbno is blso gubrbntffd to bf vblid
            // dorrfdtly pbrsfd nbno is blso gubrbntffd to bf vblid
            // dorrfdtly pbrsfd nbno is blso gubrbntffd to bf vblid
            // dorrfdtly pbrsfd nbno is blso gubrbntffd to bf vblid
            long yfbrPbrsfd = nfwContfxt.gftPbrsfd(YEAR);
            long yfbrPbrsfd = nfwContfxt.gftPbrsfd(YEAR);
            long yfbrPbrsfd = nfwContfxt.gftPbrsfd(YEAR);
            long yfbrPbrsfd = nfwContfxt.gftPbrsfd(YEAR);
            long yfbrPbrsfd = nfwContfxt.gftPbrsfd(YEAR);
            int monti = nfwContfxt.gftPbrsfd(MONTH_OF_YEAR).intVbluf();
            int monti = nfwContfxt.gftPbrsfd(MONTH_OF_YEAR).intVbluf();
            int monti = nfwContfxt.gftPbrsfd(MONTH_OF_YEAR).intVbluf();
            int monti = nfwContfxt.gftPbrsfd(MONTH_OF_YEAR).intVbluf();
            int monti = nfwContfxt.gftPbrsfd(MONTH_OF_YEAR).intVbluf();
            int dby = nfwContfxt.gftPbrsfd(DAY_OF_MONTH).intVbluf();
            int dby = nfwContfxt.gftPbrsfd(DAY_OF_MONTH).intVbluf();
            int dby = nfwContfxt.gftPbrsfd(DAY_OF_MONTH).intVbluf();
            int dby = nfwContfxt.gftPbrsfd(DAY_OF_MONTH).intVbluf();
            int dby = nfwContfxt.gftPbrsfd(DAY_OF_MONTH).intVbluf();
            int iour = nfwContfxt.gftPbrsfd(HOUR_OF_DAY).intVbluf();
            int iour = nfwContfxt.gftPbrsfd(HOUR_OF_DAY).intVbluf();
            int iour = nfwContfxt.gftPbrsfd(HOUR_OF_DAY).intVbluf();
            int iour = nfwContfxt.gftPbrsfd(HOUR_OF_DAY).intVbluf();
            int iour = nfwContfxt.gftPbrsfd(HOUR_OF_DAY).intVbluf();
            int min = nfwContfxt.gftPbrsfd(MINUTE_OF_HOUR).intVbluf();
            int min = nfwContfxt.gftPbrsfd(MINUTE_OF_HOUR).intVbluf();
            int min = nfwContfxt.gftPbrsfd(MINUTE_OF_HOUR).intVbluf();
            int min = nfwContfxt.gftPbrsfd(MINUTE_OF_HOUR).intVbluf();
            int min = nfwContfxt.gftPbrsfd(MINUTE_OF_HOUR).intVbluf();
            Long sfdVbl = nfwContfxt.gftPbrsfd(SECOND_OF_MINUTE);
            Long sfdVbl = nfwContfxt.gftPbrsfd(SECOND_OF_MINUTE);
            Long sfdVbl = nfwContfxt.gftPbrsfd(SECOND_OF_MINUTE);
            Long sfdVbl = nfwContfxt.gftPbrsfd(SECOND_OF_MINUTE);
            Long sfdVbl = nfwContfxt.gftPbrsfd(SECOND_OF_MINUTE);
            Long nbnoVbl = nfwContfxt.gftPbrsfd(NANO_OF_SECOND);
            Long nbnoVbl = nfwContfxt.gftPbrsfd(NANO_OF_SECOND);
            Long nbnoVbl = nfwContfxt.gftPbrsfd(NANO_OF_SECOND);
            Long nbnoVbl = nfwContfxt.gftPbrsfd(NANO_OF_SECOND);
            Long nbnoVbl = nfwContfxt.gftPbrsfd(NANO_OF_SECOND);
            int sfd = (sfdVbl != null ? sfdVbl.intVbluf() : 0);
            int sfd = (sfdVbl != null ? sfdVbl.intVbluf() : 0);
            int sfd = (sfdVbl != null ? sfdVbl.intVbluf() : 0);
            int sfd = (sfdVbl != null ? sfdVbl.intVbluf() : 0);
            int sfd = (sfdVbl != null ? sfdVbl.intVbluf() : 0);
            int nbno = (nbnoVbl != null ? nbnoVbl.intVbluf() : 0);
            int nbno = (nbnoVbl != null ? nbnoVbl.intVbluf() : 0);
            int nbno = (nbnoVbl != null ? nbnoVbl.intVbluf() : 0);
            int nbno = (nbnoVbl != null ? nbnoVbl.intVbluf() : 0);
            int nbno = (nbnoVbl != null ? nbnoVbl.intVbluf() : 0);
            int dbys = 0;
            int dbys = 0;
            int dbys = 0;
            int dbys = 0;
            int dbys = 0;
            if (iour == 24 && min == 0 && sfd == 0 && nbno == 0) {
            if (iour == 24 && min == 0 && sfd == 0 && nbno == 0) {
            if (iour == 24 && min == 0 && sfd == 0 && nbno == 0) {
            if (iour == 24 && min == 0 && sfd == 0 && nbno == 0) {
            if (iour == 24 && min == 0 && sfd == 0 && nbno == 0) {
                iour = 0;
                iour = 0;
                iour = 0;
                iour = 0;
                iour = 0;
                dbys = 1;
                dbys = 1;
                dbys = 1;
                dbys = 1;
                dbys = 1;
            } flsf if (iour == 23 && min == 59 && sfd == 60) {
            } flsf if (iour == 23 && min == 59 && sfd == 60) {
            } flsf if (iour == 23 && min == 59 && sfd == 60) {
            } flsf if (iour == 23 && min == 59 && sfd == 60) {
            } flsf if (iour == 23 && min == 59 && sfd == 60) {
                dontfxt.sftPbrsfdLfbpSfdond();
                dontfxt.sftPbrsfdLfbpSfdond();
                dontfxt.sftPbrsfdLfbpSfdond();
                dontfxt.sftPbrsfdLfbpSfdond();
                dontfxt.sftPbrsfdLfbpSfdond();
                sfd = 59;
                sfd = 59;
                sfd = 59;
                sfd = 59;
                sfd = 59;
            }
            }
            }
            }
            }
            int yfbr = (int) yfbrPbrsfd % 10_000;
            int yfbr = (int) yfbrPbrsfd % 10_000;
            int yfbr = (int) yfbrPbrsfd % 10_000;
            int yfbr = (int) yfbrPbrsfd % 10_000;
            int yfbr = (int) yfbrPbrsfd % 10_000;
            long instbntSfds;
            long instbntSfds;
            long instbntSfds;
            long instbntSfds;
            long instbntSfds;
            try {
            try {
            try {
            try {
            try {
                LodblDbtfTimf ldt = LodblDbtfTimf.of(yfbr, monti, dby, iour, min, sfd, 0).plusDbys(dbys);
                LodblDbtfTimf ldt = LodblDbtfTimf.of(yfbr, monti, dby, iour, min, sfd, 0).plusDbys(dbys);
                LodblDbtfTimf ldt = LodblDbtfTimf.of(yfbr, monti, dby, iour, min, sfd, 0).plusDbys(dbys);
                LodblDbtfTimf ldt = LodblDbtfTimf.of(yfbr, monti, dby, iour, min, sfd, 0).plusDbys(dbys);
                LodblDbtfTimf ldt = LodblDbtfTimf.of(yfbr, monti, dby, iour, min, sfd, 0).plusDbys(dbys);
                instbntSfds = ldt.toEpodiSfdond(ZonfOffsft.UTC);
                instbntSfds = ldt.toEpodiSfdond(ZonfOffsft.UTC);
                instbntSfds = ldt.toEpodiSfdond(ZonfOffsft.UTC);
                instbntSfds = ldt.toEpodiSfdond(ZonfOffsft.UTC);
                instbntSfds = ldt.toEpodiSfdond(ZonfOffsft.UTC);
                instbntSfds += Mbti.multiplyExbdt(yfbrPbrsfd / 10_000L, SECONDS_PER_10000_YEARS);
                instbntSfds += Mbti.multiplyExbdt(yfbrPbrsfd / 10_000L, SECONDS_PER_10000_YEARS);
                instbntSfds += Mbti.multiplyExbdt(yfbrPbrsfd / 10_000L, SECONDS_PER_10000_YEARS);
                instbntSfds += Mbti.multiplyExbdt(yfbrPbrsfd / 10_000L, SECONDS_PER_10000_YEARS);
                instbntSfds += Mbti.multiplyExbdt(yfbrPbrsfd / 10_000L, SECONDS_PER_10000_YEARS);
            } dbtdi (RuntimfExdfption fx) {
            } dbtdi (RuntimfExdfption fx) {
            } dbtdi (RuntimfExdfption fx) {
            } dbtdi (RuntimfExdfption fx) {
            } dbtdi (RuntimfExdfption fx) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            int suddfssPos = pos;
            int suddfssPos = pos;
            int suddfssPos = pos;
            int suddfssPos = pos;
            int suddfssPos = pos;
            suddfssPos = dontfxt.sftPbrsfdFifld(INSTANT_SECONDS, instbntSfds, position, suddfssPos);
            suddfssPos = dontfxt.sftPbrsfdFifld(INSTANT_SECONDS, instbntSfds, position, suddfssPos);
            suddfssPos = dontfxt.sftPbrsfdFifld(INSTANT_SECONDS, instbntSfds, position, suddfssPos);
            suddfssPos = dontfxt.sftPbrsfdFifld(INSTANT_SECONDS, instbntSfds, position, suddfssPos);
            suddfssPos = dontfxt.sftPbrsfdFifld(INSTANT_SECONDS, instbntSfds, position, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(NANO_OF_SECOND, nbno, position, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(NANO_OF_SECOND, nbno, position, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(NANO_OF_SECOND, nbno, position, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(NANO_OF_SECOND, nbno, position, suddfssPos);
            rfturn dontfxt.sftPbrsfdFifld(NANO_OF_SECOND, nbno, position, suddfssPos);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn "Instbnt()";
            rfturn "Instbnt()";
            rfturn "Instbnt()";
            rfturn "Instbnt()";
            rfturn "Instbnt()";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     */
     */
     */
     */
     */
    stbtid finbl dlbss OffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss OffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss OffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss OffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss OffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        stbtid finbl String[] PATTERNS = nfw String[] {
        stbtid finbl String[] PATTERNS = nfw String[] {
        stbtid finbl String[] PATTERNS = nfw String[] {
        stbtid finbl String[] PATTERNS = nfw String[] {
        stbtid finbl String[] PATTERNS = nfw String[] {
            "+HH", "+HHmm", "+HH:mm", "+HHMM", "+HH:MM", "+HHMMss", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS",
            "+HH", "+HHmm", "+HH:mm", "+HHMM", "+HH:MM", "+HHMMss", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS",
            "+HH", "+HHmm", "+HH:mm", "+HHMM", "+HH:MM", "+HHMMss", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS",
            "+HH", "+HHmm", "+HH:mm", "+HHMM", "+HH:MM", "+HHMMss", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS",
            "+HH", "+HHmm", "+HH:mm", "+HHMM", "+HH:MM", "+HHMMss", "+HH:MM:ss", "+HHMMSS", "+HH:MM:SS",
        };  // ordfr usfd in pbttfrn buildfr
        };  // ordfr usfd in pbttfrn buildfr
        };  // ordfr usfd in pbttfrn buildfr
        };  // ordfr usfd in pbttfrn buildfr
        };  // ordfr usfd in pbttfrn buildfr
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_Z = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "Z");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_Z = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "Z");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_Z = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "Z");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_Z = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "Z");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_Z = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "Z");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_ZERO = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "0");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_ZERO = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "0");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_ZERO = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "0");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_ZERO = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "0");
        stbtid finbl OffsftIdPrintfrPbrsfr INSTANCE_ID_ZERO = nfw OffsftIdPrintfrPbrsfr("+HH:MM:ss", "0");





        privbtf finbl String noOffsftTfxt;
        privbtf finbl String noOffsftTfxt;
        privbtf finbl String noOffsftTfxt;
        privbtf finbl String noOffsftTfxt;
        privbtf finbl String noOffsftTfxt;
        privbtf finbl int typf;
        privbtf finbl int typf;
        privbtf finbl int typf;
        privbtf finbl int typf;
        privbtf finbl int typf;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm pbttfrn  tif pbttfrn
         * @pbrbm pbttfrn  tif pbttfrn
         * @pbrbm pbttfrn  tif pbttfrn
         * @pbrbm pbttfrn  tif pbttfrn
         * @pbrbm pbttfrn  tif pbttfrn
         * @pbrbm noOffsftTfxt  tif tfxt to usf for UTC, not null
         * @pbrbm noOffsftTfxt  tif tfxt to usf for UTC, not null
         * @pbrbm noOffsftTfxt  tif tfxt to usf for UTC, not null
         * @pbrbm noOffsftTfxt  tif tfxt to usf for UTC, not null
         * @pbrbm noOffsftTfxt  tif tfxt to usf for UTC, not null
         */
         */
         */
         */
         */
        OffsftIdPrintfrPbrsfr(String pbttfrn, String noOffsftTfxt) {
        OffsftIdPrintfrPbrsfr(String pbttfrn, String noOffsftTfxt) {
        OffsftIdPrintfrPbrsfr(String pbttfrn, String noOffsftTfxt) {
        OffsftIdPrintfrPbrsfr(String pbttfrn, String noOffsftTfxt) {
        OffsftIdPrintfrPbrsfr(String pbttfrn, String noOffsftTfxt) {
            Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
            Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
            Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
            Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
            Objfdts.rfquirfNonNull(pbttfrn, "pbttfrn");
            Objfdts.rfquirfNonNull(noOffsftTfxt, "noOffsftTfxt");
            Objfdts.rfquirfNonNull(noOffsftTfxt, "noOffsftTfxt");
            Objfdts.rfquirfNonNull(noOffsftTfxt, "noOffsftTfxt");
            Objfdts.rfquirfNonNull(noOffsftTfxt, "noOffsftTfxt");
            Objfdts.rfquirfNonNull(noOffsftTfxt, "noOffsftTfxt");
            tiis.typf = difdkPbttfrn(pbttfrn);
            tiis.typf = difdkPbttfrn(pbttfrn);
            tiis.typf = difdkPbttfrn(pbttfrn);
            tiis.typf = difdkPbttfrn(pbttfrn);
            tiis.typf = difdkPbttfrn(pbttfrn);
            tiis.noOffsftTfxt = noOffsftTfxt;
            tiis.noOffsftTfxt = noOffsftTfxt;
            tiis.noOffsftTfxt = noOffsftTfxt;
            tiis.noOffsftTfxt = noOffsftTfxt;
            tiis.noOffsftTfxt = noOffsftTfxt;
        }
        }
        }
        }
        }





        privbtf int difdkPbttfrn(String pbttfrn) {
        privbtf int difdkPbttfrn(String pbttfrn) {
        privbtf int difdkPbttfrn(String pbttfrn) {
        privbtf int difdkPbttfrn(String pbttfrn) {
        privbtf int difdkPbttfrn(String pbttfrn) {
            for (int i = 0; i < PATTERNS.lfngti; i++) {
            for (int i = 0; i < PATTERNS.lfngti; i++) {
            for (int i = 0; i < PATTERNS.lfngti; i++) {
            for (int i = 0; i < PATTERNS.lfngti; i++) {
            for (int i = 0; i < PATTERNS.lfngti; i++) {
                if (PATTERNS[i].fqubls(pbttfrn)) {
                if (PATTERNS[i].fqubls(pbttfrn)) {
                if (PATTERNS[i].fqubls(pbttfrn)) {
                if (PATTERNS[i].fqubls(pbttfrn)) {
                if (PATTERNS[i].fqubls(pbttfrn)) {
                    rfturn i;
                    rfturn i;
                    rfturn i;
                    rfturn i;
                    rfturn i;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            tirow nfw IllfgblArgumfntExdfption("Invblid zonf offsft pbttfrn: " + pbttfrn);
            tirow nfw IllfgblArgumfntExdfption("Invblid zonf offsft pbttfrn: " + pbttfrn);
            tirow nfw IllfgblArgumfntExdfption("Invblid zonf offsft pbttfrn: " + pbttfrn);
            tirow nfw IllfgblArgumfntExdfption("Invblid zonf offsft pbttfrn: " + pbttfrn);
            tirow nfw IllfgblArgumfntExdfption("Invblid zonf offsft pbttfrn: " + pbttfrn);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            if (totblSfds == 0) {
            if (totblSfds == 0) {
            if (totblSfds == 0) {
            if (totblSfds == 0) {
            if (totblSfds == 0) {
                buf.bppfnd(noOffsftTfxt);
                buf.bppfnd(noOffsftTfxt);
                buf.bppfnd(noOffsftTfxt);
                buf.bppfnd(noOffsftTfxt);
                buf.bppfnd(noOffsftTfxt);
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bufPos = buf.lfngti();
                int bufPos = buf.lfngti();
                int bufPos = buf.lfngti();
                int bufPos = buf.lfngti();
                int bufPos = buf.lfngti();
                int output = bbsHours;
                int output = bbsHours;
                int output = bbsHours;
                int output = bbsHours;
                int output = bbsHours;
                buf.bppfnd(totblSfds < 0 ? "-" : "+")
                buf.bppfnd(totblSfds < 0 ? "-" : "+")
                buf.bppfnd(totblSfds < 0 ? "-" : "+")
                buf.bppfnd(totblSfds < 0 ? "-" : "+")
                buf.bppfnd(totblSfds < 0 ? "-" : "+")
                    .bppfnd((dibr) (bbsHours / 10 + '0')).bppfnd((dibr) (bbsHours % 10 + '0'));
                    .bppfnd((dibr) (bbsHours / 10 + '0')).bppfnd((dibr) (bbsHours % 10 + '0'));
                    .bppfnd((dibr) (bbsHours / 10 + '0')).bppfnd((dibr) (bbsHours % 10 + '0'));
                    .bppfnd((dibr) (bbsHours / 10 + '0')).bppfnd((dibr) (bbsHours % 10 + '0'));
                    .bppfnd((dibr) (bbsHours / 10 + '0')).bppfnd((dibr) (bbsHours % 10 + '0'));
                if (typf >= 3 || (typf >= 1 && bbsMinutfs > 0)) {
                if (typf >= 3 || (typf >= 1 && bbsMinutfs > 0)) {
                if (typf >= 3 || (typf >= 1 && bbsMinutfs > 0)) {
                if (typf >= 3 || (typf >= 1 && bbsMinutfs > 0)) {
                if (typf >= 3 || (typf >= 1 && bbsMinutfs > 0)) {
                    buf.bppfnd((typf % 2) == 0 ? ":" : "")
                    buf.bppfnd((typf % 2) == 0 ? ":" : "")
                    buf.bppfnd((typf % 2) == 0 ? ":" : "")
                    buf.bppfnd((typf % 2) == 0 ? ":" : "")
                    buf.bppfnd((typf % 2) == 0 ? ":" : "")
                        .bppfnd((dibr) (bbsMinutfs / 10 + '0')).bppfnd((dibr) (bbsMinutfs % 10 + '0'));
                        .bppfnd((dibr) (bbsMinutfs / 10 + '0')).bppfnd((dibr) (bbsMinutfs % 10 + '0'));
                        .bppfnd((dibr) (bbsMinutfs / 10 + '0')).bppfnd((dibr) (bbsMinutfs % 10 + '0'));
                        .bppfnd((dibr) (bbsMinutfs / 10 + '0')).bppfnd((dibr) (bbsMinutfs % 10 + '0'));
                        .bppfnd((dibr) (bbsMinutfs / 10 + '0')).bppfnd((dibr) (bbsMinutfs % 10 + '0'));
                    output += bbsMinutfs;
                    output += bbsMinutfs;
                    output += bbsMinutfs;
                    output += bbsMinutfs;
                    output += bbsMinutfs;
                    if (typf >= 7 || (typf >= 5 && bbsSfdonds > 0)) {
                    if (typf >= 7 || (typf >= 5 && bbsSfdonds > 0)) {
                    if (typf >= 7 || (typf >= 5 && bbsSfdonds > 0)) {
                    if (typf >= 7 || (typf >= 5 && bbsSfdonds > 0)) {
                    if (typf >= 7 || (typf >= 5 && bbsSfdonds > 0)) {
                        buf.bppfnd((typf % 2) == 0 ? ":" : "")
                        buf.bppfnd((typf % 2) == 0 ? ":" : "")
                        buf.bppfnd((typf % 2) == 0 ? ":" : "")
                        buf.bppfnd((typf % 2) == 0 ? ":" : "")
                        buf.bppfnd((typf % 2) == 0 ? ":" : "")
                            .bppfnd((dibr) (bbsSfdonds / 10 + '0')).bppfnd((dibr) (bbsSfdonds % 10 + '0'));
                            .bppfnd((dibr) (bbsSfdonds / 10 + '0')).bppfnd((dibr) (bbsSfdonds % 10 + '0'));
                            .bppfnd((dibr) (bbsSfdonds / 10 + '0')).bppfnd((dibr) (bbsSfdonds % 10 + '0'));
                            .bppfnd((dibr) (bbsSfdonds / 10 + '0')).bppfnd((dibr) (bbsSfdonds % 10 + '0'));
                            .bppfnd((dibr) (bbsSfdonds / 10 + '0')).bppfnd((dibr) (bbsSfdonds % 10 + '0'));
                        output += bbsSfdonds;
                        output += bbsSfdonds;
                        output += bbsSfdonds;
                        output += bbsSfdonds;
                        output += bbsSfdonds;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (output == 0) {
                if (output == 0) {
                if (output == 0) {
                if (output == 0) {
                if (output == 0) {
                    buf.sftLfngti(bufPos);
                    buf.sftLfngti(bufPos);
                    buf.sftLfngti(bufPos);
                    buf.sftLfngti(bufPos);
                    buf.sftLfngti(bufPos);
                    buf.bppfnd(noOffsftTfxt);
                    buf.bppfnd(noOffsftTfxt);
                    buf.bppfnd(noOffsftTfxt);
                    buf.bppfnd(noOffsftTfxt);
                    buf.bppfnd(noOffsftTfxt);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int noOffsftLfn = noOffsftTfxt.lfngti();
            int noOffsftLfn = noOffsftTfxt.lfngti();
            int noOffsftLfn = noOffsftTfxt.lfngti();
            int noOffsftLfn = noOffsftTfxt.lfngti();
            int noOffsftLfn = noOffsftTfxt.lfngti();
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position);
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                if (position == lfngti) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                if (dontfxt.subSfqufndfEqubls(tfxt, position, noOffsftTfxt, 0, noOffsftLfn)) {
                if (dontfxt.subSfqufndfEqubls(tfxt, position, noOffsftTfxt, 0, noOffsftLfn)) {
                if (dontfxt.subSfqufndfEqubls(tfxt, position, noOffsftTfxt, 0, noOffsftLfn)) {
                if (dontfxt.subSfqufndfEqubls(tfxt, position, noOffsftTfxt, 0, noOffsftLfn)) {
                if (dontfxt.subSfqufndfEqubls(tfxt, position, noOffsftTfxt, 0, noOffsftLfn)) {
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(position);  // IOOBE if invblid position
            if (sign == '+' || sign == '-') {
            if (sign == '+' || sign == '-') {
            if (sign == '+' || sign == '-') {
            if (sign == '+' || sign == '-') {
            if (sign == '+' || sign == '-') {
                // stbrts
                // stbrts
                // stbrts
                // stbrts
                // stbrts
                int nfgbtivf = (sign == '-' ? -1 : 1);
                int nfgbtivf = (sign == '-' ? -1 : 1);
                int nfgbtivf = (sign == '-' ? -1 : 1);
                int nfgbtivf = (sign == '-' ? -1 : 1);
                int nfgbtivf = (sign == '-' ? -1 : 1);
                int[] brrby = nfw int[4];
                int[] brrby = nfw int[4];
                int[] brrby = nfw int[4];
                int[] brrby = nfw int[4];
                int[] brrby = nfw int[4];
                brrby[0] = position + 1;
                brrby[0] = position + 1;
                brrby[0] = position + 1;
                brrby[0] = position + 1;
                brrby[0] = position + 1;
                if ((pbrsfNumbfr(brrby, 1, tfxt, truf) ||
                if ((pbrsfNumbfr(brrby, 1, tfxt, truf) ||
                if ((pbrsfNumbfr(brrby, 1, tfxt, truf) ||
                if ((pbrsfNumbfr(brrby, 1, tfxt, truf) ||
                if ((pbrsfNumbfr(brrby, 1, tfxt, truf) ||
                        pbrsfNumbfr(brrby, 2, tfxt, typf >=3) ||
                        pbrsfNumbfr(brrby, 2, tfxt, typf >=3) ||
                        pbrsfNumbfr(brrby, 2, tfxt, typf >=3) ||
                        pbrsfNumbfr(brrby, 2, tfxt, typf >=3) ||
                        pbrsfNumbfr(brrby, 2, tfxt, typf >=3) ||
                        pbrsfNumbfr(brrby, 3, tfxt, fblsf)) == fblsf) {
                        pbrsfNumbfr(brrby, 3, tfxt, fblsf)) == fblsf) {
                        pbrsfNumbfr(brrby, 3, tfxt, fblsf)) == fblsf) {
                        pbrsfNumbfr(brrby, 3, tfxt, fblsf)) == fblsf) {
                        pbrsfNumbfr(brrby, 3, tfxt, fblsf)) == fblsf) {
                    // suddfss
                    // suddfss
                    // suddfss
                    // suddfss
                    // suddfss
                    long offsftSfds = nfgbtivf * (brrby[1] * 3600L + brrby[2] * 60L + brrby[3]);
                    long offsftSfds = nfgbtivf * (brrby[1] * 3600L + brrby[2] * 60L + brrby[3]);
                    long offsftSfds = nfgbtivf * (brrby[1] * 3600L + brrby[2] * 60L + brrby[3]);
                    long offsftSfds = nfgbtivf * (brrby[1] * 3600L + brrby[2] * 60L + brrby[3]);
                    long offsftSfds = nfgbtivf * (brrby[1] * 3600L + brrby[2] * 60L + brrby[3]);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, brrby[0]);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, brrby[0]);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, brrby[0]);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, brrby[0]);
                    rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, brrby[0]);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            // ibndlf spfdibl dbsf of fmpty no offsft tfxt
            // ibndlf spfdibl dbsf of fmpty no offsft tfxt
            // ibndlf spfdibl dbsf of fmpty no offsft tfxt
            // ibndlf spfdibl dbsf of fmpty no offsft tfxt
            // ibndlf spfdibl dbsf of fmpty no offsft tfxt
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
            if (noOffsftLfn == 0) {
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, position + noOffsftLfn);
            }
            }
            }
            }
            }
            rfturn ~position;
            rfturn ~position;
            rfturn ~position;
            rfturn ~position;
            rfturn ~position;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Pbrsf b two digit zfro-prffixfd numbfr.
         * Pbrsf b two digit zfro-prffixfd numbfr.
         * Pbrsf b two digit zfro-prffixfd numbfr.
         * Pbrsf b two digit zfro-prffixfd numbfr.
         * Pbrsf b two digit zfro-prffixfd numbfr.
         *
         *
         *
         *
         *
         * @pbrbm brrby  tif brrby of pbrsfd dbtb, 0=pos,1=iours,2=mins,3=sfds, not null
         * @pbrbm brrby  tif brrby of pbrsfd dbtb, 0=pos,1=iours,2=mins,3=sfds, not null
         * @pbrbm brrby  tif brrby of pbrsfd dbtb, 0=pos,1=iours,2=mins,3=sfds, not null
         * @pbrbm brrby  tif brrby of pbrsfd dbtb, 0=pos,1=iours,2=mins,3=sfds, not null
         * @pbrbm brrby  tif brrby of pbrsfd dbtb, 0=pos,1=iours,2=mins,3=sfds, not null
         * @pbrbm brrbyIndfx  tif indfx to pbrsf tif vbluf into
         * @pbrbm brrbyIndfx  tif indfx to pbrsf tif vbluf into
         * @pbrbm brrbyIndfx  tif indfx to pbrsf tif vbluf into
         * @pbrbm brrbyIndfx  tif indfx to pbrsf tif vbluf into
         * @pbrbm brrbyIndfx  tif indfx to pbrsf tif vbluf into
         * @pbrbm pbrsfTfxt  tif offsft ID, not null
         * @pbrbm pbrsfTfxt  tif offsft ID, not null
         * @pbrbm pbrsfTfxt  tif offsft ID, not null
         * @pbrbm pbrsfTfxt  tif offsft ID, not null
         * @pbrbm pbrsfTfxt  tif offsft ID, not null
         * @pbrbm rfquirfd  wiftifr tiis numbfr is rfquirfd
         * @pbrbm rfquirfd  wiftifr tiis numbfr is rfquirfd
         * @pbrbm rfquirfd  wiftifr tiis numbfr is rfquirfd
         * @pbrbm rfquirfd  wiftifr tiis numbfr is rfquirfd
         * @pbrbm rfquirfd  wiftifr tiis numbfr is rfquirfd
         * @rfturn truf if bn frror oddurrfd
         * @rfturn truf if bn frror oddurrfd
         * @rfturn truf if bn frror oddurrfd
         * @rfturn truf if bn frror oddurrfd
         * @rfturn truf if bn frror oddurrfd
         */
         */
         */
         */
         */
        privbtf boolfbn pbrsfNumbfr(int[] brrby, int brrbyIndfx, CibrSfqufndf pbrsfTfxt, boolfbn rfquirfd) {
        privbtf boolfbn pbrsfNumbfr(int[] brrby, int brrbyIndfx, CibrSfqufndf pbrsfTfxt, boolfbn rfquirfd) {
        privbtf boolfbn pbrsfNumbfr(int[] brrby, int brrbyIndfx, CibrSfqufndf pbrsfTfxt, boolfbn rfquirfd) {
        privbtf boolfbn pbrsfNumbfr(int[] brrby, int brrbyIndfx, CibrSfqufndf pbrsfTfxt, boolfbn rfquirfd) {
        privbtf boolfbn pbrsfNumbfr(int[] brrby, int brrbyIndfx, CibrSfqufndf pbrsfTfxt, boolfbn rfquirfd) {
            if ((typf + 3) / 2 < brrbyIndfx) {
            if ((typf + 3) / 2 < brrbyIndfx) {
            if ((typf + 3) / 2 < brrbyIndfx) {
            if ((typf + 3) / 2 < brrbyIndfx) {
            if ((typf + 3) / 2 < brrbyIndfx) {
                rfturn fblsf;  // ignorf sfdonds/minutfs
                rfturn fblsf;  // ignorf sfdonds/minutfs
                rfturn fblsf;  // ignorf sfdonds/minutfs
                rfturn fblsf;  // ignorf sfdonds/minutfs
                rfturn fblsf;  // ignorf sfdonds/minutfs
            }
            }
            }
            }
            }
            int pos = brrby[0];
            int pos = brrby[0];
            int pos = brrby[0];
            int pos = brrby[0];
            int pos = brrby[0];
            if ((typf % 2) == 0 && brrbyIndfx > 1) {
            if ((typf % 2) == 0 && brrbyIndfx > 1) {
            if ((typf % 2) == 0 && brrbyIndfx > 1) {
            if ((typf % 2) == 0 && brrbyIndfx > 1) {
            if ((typf % 2) == 0 && brrbyIndfx > 1) {
                if (pos + 1 > pbrsfTfxt.lfngti() || pbrsfTfxt.dibrAt(pos) != ':') {
                if (pos + 1 > pbrsfTfxt.lfngti() || pbrsfTfxt.dibrAt(pos) != ':') {
                if (pos + 1 > pbrsfTfxt.lfngti() || pbrsfTfxt.dibrAt(pos) != ':') {
                if (pos + 1 > pbrsfTfxt.lfngti() || pbrsfTfxt.dibrAt(pos) != ':') {
                if (pos + 1 > pbrsfTfxt.lfngti() || pbrsfTfxt.dibrAt(pos) != ':') {
                    rfturn rfquirfd;
                    rfturn rfquirfd;
                    rfturn rfquirfd;
                    rfturn rfquirfd;
                    rfturn rfquirfd;
                }
                }
                }
                }
                }
                pos++;
                pos++;
                pos++;
                pos++;
                pos++;
            }
            }
            }
            }
            }
            if (pos + 2 > pbrsfTfxt.lfngti()) {
            if (pos + 2 > pbrsfTfxt.lfngti()) {
            if (pos + 2 > pbrsfTfxt.lfngti()) {
            if (pos + 2 > pbrsfTfxt.lfngti()) {
            if (pos + 2 > pbrsfTfxt.lfngti()) {
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
            }
            }
            }
            }
            }
            dibr di1 = pbrsfTfxt.dibrAt(pos++);
            dibr di1 = pbrsfTfxt.dibrAt(pos++);
            dibr di1 = pbrsfTfxt.dibrAt(pos++);
            dibr di1 = pbrsfTfxt.dibrAt(pos++);
            dibr di1 = pbrsfTfxt.dibrAt(pos++);
            dibr di2 = pbrsfTfxt.dibrAt(pos++);
            dibr di2 = pbrsfTfxt.dibrAt(pos++);
            dibr di2 = pbrsfTfxt.dibrAt(pos++);
            dibr di2 = pbrsfTfxt.dibrAt(pos++);
            dibr di2 = pbrsfTfxt.dibrAt(pos++);
            if (di1 < '0' || di1 > '9' || di2 < '0' || di2 > '9') {
            if (di1 < '0' || di1 > '9' || di2 < '0' || di2 > '9') {
            if (di1 < '0' || di1 > '9' || di2 < '0' || di2 > '9') {
            if (di1 < '0' || di1 > '9' || di2 < '0' || di2 > '9') {
            if (di1 < '0' || di1 > '9' || di2 < '0' || di2 > '9') {
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
            }
            }
            }
            }
            }
            int vbluf = (di1 - 48) * 10 + (di2 - 48);
            int vbluf = (di1 - 48) * 10 + (di2 - 48);
            int vbluf = (di1 - 48) * 10 + (di2 - 48);
            int vbluf = (di1 - 48) * 10 + (di2 - 48);
            int vbluf = (di1 - 48) * 10 + (di2 - 48);
            if (vbluf < 0 || vbluf > 59) {
            if (vbluf < 0 || vbluf > 59) {
            if (vbluf < 0 || vbluf > 59) {
            if (vbluf < 0 || vbluf > 59) {
            if (vbluf < 0 || vbluf > 59) {
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
                rfturn rfquirfd;
            }
            }
            }
            }
            }
            brrby[brrbyIndfx] = vbluf;
            brrby[brrbyIndfx] = vbluf;
            brrby[brrbyIndfx] = vbluf;
            brrby[brrbyIndfx] = vbluf;
            brrby[brrbyIndfx] = vbluf;
            brrby[0] = pos;
            brrby[0] = pos;
            brrby[0] = pos;
            brrby[0] = pos;
            brrby[0] = pos;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
            rfturn fblsf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            String donvfrtfd = noOffsftTfxt.rfplbdf("'", "''");
            String donvfrtfd = noOffsftTfxt.rfplbdf("'", "''");
            String donvfrtfd = noOffsftTfxt.rfplbdf("'", "''");
            String donvfrtfd = noOffsftTfxt.rfplbdf("'", "''");
            String donvfrtfd = noOffsftTfxt.rfplbdf("'", "''");
            rfturn "Offsft(" + PATTERNS[typf] + ",'" + donvfrtfd + "')";
            rfturn "Offsft(" + PATTERNS[typf] + ",'" + donvfrtfd + "')";
            rfturn "Offsft(" + PATTERNS[typf] + ",'" + donvfrtfd + "')";
            rfturn "Offsft(" + PATTERNS[typf] + ",'" + donvfrtfd + "')";
            rfturn "Offsft(" + PATTERNS[typf] + ",'" + donvfrtfd + "')";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     * Prints or pbrsfs bn offsft ID.
     */
     */
     */
     */
     */
    stbtid finbl dlbss LodblizfdOffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdOffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdOffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdOffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdOffsftIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl TfxtStylf stylf;
        privbtf finbl TfxtStylf stylf;
        privbtf finbl TfxtStylf stylf;
        privbtf finbl TfxtStylf stylf;
        privbtf finbl TfxtStylf stylf;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm stylf  tif stylf, not null
         * @pbrbm stylf  tif stylf, not null
         * @pbrbm stylf  tif stylf, not null
         * @pbrbm stylf  tif stylf, not null
         * @pbrbm stylf  tif stylf, not null
         */
         */
         */
         */
         */
        LodblizfdOffsftIdPrintfrPbrsfr(TfxtStylf stylf) {
        LodblizfdOffsftIdPrintfrPbrsfr(TfxtStylf stylf) {
        LodblizfdOffsftIdPrintfrPbrsfr(TfxtStylf stylf) {
        LodblizfdOffsftIdPrintfrPbrsfr(TfxtStylf stylf) {
        LodblizfdOffsftIdPrintfrPbrsfr(TfxtStylf stylf) {
            tiis.stylf = stylf;
            tiis.stylf = stylf;
            tiis.stylf = stylf;
            tiis.stylf = stylf;
            tiis.stylf = stylf;
        }
        }
        }
        }
        }





        privbtf stbtid StringBuildfr bppfndHMS(StringBuildfr buf, int t) {
        privbtf stbtid StringBuildfr bppfndHMS(StringBuildfr buf, int t) {
        privbtf stbtid StringBuildfr bppfndHMS(StringBuildfr buf, int t) {
        privbtf stbtid StringBuildfr bppfndHMS(StringBuildfr buf, int t) {
        privbtf stbtid StringBuildfr bppfndHMS(StringBuildfr buf, int t) {
            rfturn buf.bppfnd((dibr)(t / 10 + '0'))
            rfturn buf.bppfnd((dibr)(t / 10 + '0'))
            rfturn buf.bppfnd((dibr)(t / 10 + '0'))
            rfturn buf.bppfnd((dibr)(t / 10 + '0'))
            rfturn buf.bppfnd((dibr)(t / 10 + '0'))
                      .bppfnd((dibr)(t % 10 + '0'));
                      .bppfnd((dibr)(t % 10 + '0'));
                      .bppfnd((dibr)(t % 10 + '0'));
                      .bppfnd((dibr)(t % 10 + '0'));
                      .bppfnd((dibr)(t % 10 + '0'));
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            Long offsftSfds = dontfxt.gftVbluf(OFFSET_SECONDS);
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
            if (offsftSfds == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
                buf.bppfnd(gmtTfxt);
                buf.bppfnd(gmtTfxt);
                buf.bppfnd(gmtTfxt);
                buf.bppfnd(gmtTfxt);
                buf.bppfnd(gmtTfxt);
            }
            }
            }
            }
            }
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            int totblSfds = Mbti.toIntExbdt(offsftSfds);
            if (totblSfds != 0) {
            if (totblSfds != 0) {
            if (totblSfds != 0) {
            if (totblSfds != 0) {
            if (totblSfds != 0) {
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsHours = Mbti.bbs((totblSfds / 3600) % 100);  // bnytiing lbrgfr tibn 99 silfntly droppfd
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsMinutfs = Mbti.bbs((totblSfds / 60) % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                int bbsSfdonds = Mbti.bbs(totblSfds % 60);
                buf.bppfnd(totblSfds < 0 ? "-" : "+");
                buf.bppfnd(totblSfds < 0 ? "-" : "+");
                buf.bppfnd(totblSfds < 0 ? "-" : "+");
                buf.bppfnd(totblSfds < 0 ? "-" : "+");
                buf.bppfnd(totblSfds < 0 ? "-" : "+");
                if (stylf == TfxtStylf.FULL) {
                if (stylf == TfxtStylf.FULL) {
                if (stylf == TfxtStylf.FULL) {
                if (stylf == TfxtStylf.FULL) {
                if (stylf == TfxtStylf.FULL) {
                    bppfndHMS(buf, bbsHours);
                    bppfndHMS(buf, bbsHours);
                    bppfndHMS(buf, bbsHours);
                    bppfndHMS(buf, bbsHours);
                    bppfndHMS(buf, bbsHours);
                    buf.bppfnd(':');
                    buf.bppfnd(':');
                    buf.bppfnd(':');
                    buf.bppfnd(':');
                    buf.bppfnd(':');
                    bppfndHMS(buf, bbsMinutfs);
                    bppfndHMS(buf, bbsMinutfs);
                    bppfndHMS(buf, bbsMinutfs);
                    bppfndHMS(buf, bbsMinutfs);
                    bppfndHMS(buf, bbsMinutfs);
                    if (bbsSfdonds != 0) {
                    if (bbsSfdonds != 0) {
                    if (bbsSfdonds != 0) {
                    if (bbsSfdonds != 0) {
                    if (bbsSfdonds != 0) {
                       buf.bppfnd(':');
                       buf.bppfnd(':');
                       buf.bppfnd(':');
                       buf.bppfnd(':');
                       buf.bppfnd(':');
                       bppfndHMS(buf, bbsSfdonds);
                       bppfndHMS(buf, bbsSfdonds);
                       bppfndHMS(buf, bbsSfdonds);
                       bppfndHMS(buf, bbsSfdonds);
                       bppfndHMS(buf, bbsSfdonds);
                    }
                    }
                    }
                    }
                    }
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    if (bbsHours >= 10) {
                    if (bbsHours >= 10) {
                    if (bbsHours >= 10) {
                    if (bbsHours >= 10) {
                    if (bbsHours >= 10) {
                        buf.bppfnd((dibr)(bbsHours / 10 + '0'));
                        buf.bppfnd((dibr)(bbsHours / 10 + '0'));
                        buf.bppfnd((dibr)(bbsHours / 10 + '0'));
                        buf.bppfnd((dibr)(bbsHours / 10 + '0'));
                        buf.bppfnd((dibr)(bbsHours / 10 + '0'));
                    }
                    }
                    }
                    }
                    }
                    buf.bppfnd((dibr)(bbsHours % 10 + '0'));
                    buf.bppfnd((dibr)(bbsHours % 10 + '0'));
                    buf.bppfnd((dibr)(bbsHours % 10 + '0'));
                    buf.bppfnd((dibr)(bbsHours % 10 + '0'));
                    buf.bppfnd((dibr)(bbsHours % 10 + '0'));
                    if (bbsMinutfs != 0 || bbsSfdonds != 0) {
                    if (bbsMinutfs != 0 || bbsSfdonds != 0) {
                    if (bbsMinutfs != 0 || bbsSfdonds != 0) {
                    if (bbsMinutfs != 0 || bbsSfdonds != 0) {
                    if (bbsMinutfs != 0 || bbsSfdonds != 0) {
                        buf.bppfnd(':');
                        buf.bppfnd(':');
                        buf.bppfnd(':');
                        buf.bppfnd(':');
                        buf.bppfnd(':');
                        bppfndHMS(buf, bbsMinutfs);
                        bppfndHMS(buf, bbsMinutfs);
                        bppfndHMS(buf, bbsMinutfs);
                        bppfndHMS(buf, bbsMinutfs);
                        bppfndHMS(buf, bbsMinutfs);
                        if (bbsSfdonds != 0) {
                        if (bbsSfdonds != 0) {
                        if (bbsSfdonds != 0) {
                        if (bbsSfdonds != 0) {
                        if (bbsSfdonds != 0) {
                            buf.bppfnd(':');
                            buf.bppfnd(':');
                            buf.bppfnd(':');
                            buf.bppfnd(':');
                            buf.bppfnd(':');
                            bppfndHMS(buf, bbsSfdonds);
                            bppfndHMS(buf, bbsSfdonds);
                            bppfndHMS(buf, bbsSfdonds);
                            bppfndHMS(buf, bbsSfdonds);
                            bppfndHMS(buf, bbsSfdonds);
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        int gftDigit(CibrSfqufndf tfxt, int position) {
        int gftDigit(CibrSfqufndf tfxt, int position) {
        int gftDigit(CibrSfqufndf tfxt, int position) {
        int gftDigit(CibrSfqufndf tfxt, int position) {
        int gftDigit(CibrSfqufndf tfxt, int position) {
            dibr d = tfxt.dibrAt(position);
            dibr d = tfxt.dibrAt(position);
            dibr d = tfxt.dibrAt(position);
            dibr d = tfxt.dibrAt(position);
            dibr d = tfxt.dibrAt(position);
            if (d < '0' || d > '9') {
            if (d < '0' || d > '9') {
            if (d < '0' || d > '9') {
            if (d < '0' || d > '9') {
            if (d < '0' || d > '9') {
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
                rfturn -1;
            }
            }
            }
            }
            }
            rfturn d - '0';
            rfturn d - '0';
            rfturn d - '0';
            rfturn d - '0';
            rfturn d - '0';
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            int pos = position;
            int fnd = pos + tfxt.lfngti();
            int fnd = pos + tfxt.lfngti();
            int fnd = pos + tfxt.lfngti();
            int fnd = pos + tfxt.lfngti();
            int fnd = pos + tfxt.lfngti();
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            String gmtTfxt = "GMT";  // TODO: gft lodblizfd vfrsion of 'GMT'
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
            if (gmtTfxt != null) {
                if (!dontfxt.subSfqufndfEqubls(tfxt, pos, gmtTfxt, 0, gmtTfxt.lfngti())) {
                if (!dontfxt.subSfqufndfEqubls(tfxt, pos, gmtTfxt, 0, gmtTfxt.lfngti())) {
                if (!dontfxt.subSfqufndfEqubls(tfxt, pos, gmtTfxt, 0, gmtTfxt.lfngti())) {
                if (!dontfxt.subSfqufndfEqubls(tfxt, pos, gmtTfxt, 0, gmtTfxt.lfngti())) {
                if (!dontfxt.subSfqufndfEqubls(tfxt, pos, gmtTfxt, 0, gmtTfxt.lfngti())) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                pos += gmtTfxt.lfngti();
                pos += gmtTfxt.lfngti();
                pos += gmtTfxt.lfngti();
                pos += gmtTfxt.lfngti();
                pos += gmtTfxt.lfngti();
            }
            }
            }
            }
            }
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            // pbrsf normbl plus/minus offsft
            int nfgbtivf = 0;
            int nfgbtivf = 0;
            int nfgbtivf = 0;
            int nfgbtivf = 0;
            int nfgbtivf = 0;
            if (pos == fnd) {
            if (pos == fnd) {
            if (pos == fnd) {
            if (pos == fnd) {
            if (pos == fnd) {
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
            }
            }
            }
            }
            }
            dibr sign = tfxt.dibrAt(pos);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(pos);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(pos);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(pos);  // IOOBE if invblid position
            dibr sign = tfxt.dibrAt(pos);  // IOOBE if invblid position
            if (sign == '+') {
            if (sign == '+') {
            if (sign == '+') {
            if (sign == '+') {
            if (sign == '+') {
                nfgbtivf = 1;
                nfgbtivf = 1;
                nfgbtivf = 1;
                nfgbtivf = 1;
                nfgbtivf = 1;
            } flsf if (sign == '-') {
            } flsf if (sign == '-') {
            } flsf if (sign == '-') {
            } flsf if (sign == '-') {
            } flsf if (sign == '-') {
                nfgbtivf = -1;
                nfgbtivf = -1;
                nfgbtivf = -1;
                nfgbtivf = -1;
                nfgbtivf = -1;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
                rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, 0, position, pos);
            }
            }
            }
            }
            }
            pos++;
            pos++;
            pos++;
            pos++;
            pos++;
            int i = 0;
            int i = 0;
            int i = 0;
            int i = 0;
            int i = 0;
            int m = 0;
            int m = 0;
            int m = 0;
            int m = 0;
            int m = 0;
            int s = 0;
            int s = 0;
            int s = 0;
            int s = 0;
            int s = 0;
            if (stylf == TfxtStylf.FULL) {
            if (stylf == TfxtStylf.FULL) {
            if (stylf == TfxtStylf.FULL) {
            if (stylf == TfxtStylf.FULL) {
            if (stylf == TfxtStylf.FULL) {
                int i1 = gftDigit(tfxt, pos++);
                int i1 = gftDigit(tfxt, pos++);
                int i1 = gftDigit(tfxt, pos++);
                int i1 = gftDigit(tfxt, pos++);
                int i1 = gftDigit(tfxt, pos++);
                int i2 = gftDigit(tfxt, pos++);
                int i2 = gftDigit(tfxt, pos++);
                int i2 = gftDigit(tfxt, pos++);
                int i2 = gftDigit(tfxt, pos++);
                int i2 = gftDigit(tfxt, pos++);
                if (i1 < 0 || i2 < 0 || tfxt.dibrAt(pos++) != ':') {
                if (i1 < 0 || i2 < 0 || tfxt.dibrAt(pos++) != ':') {
                if (i1 < 0 || i2 < 0 || tfxt.dibrAt(pos++) != ':') {
                if (i1 < 0 || i2 < 0 || tfxt.dibrAt(pos++) != ':') {
                if (i1 < 0 || i2 < 0 || tfxt.dibrAt(pos++) != ':') {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                i = i1 * 10 + i2;
                i = i1 * 10 + i2;
                i = i1 * 10 + i2;
                i = i1 * 10 + i2;
                i = i1 * 10 + i2;
                int m1 = gftDigit(tfxt, pos++);
                int m1 = gftDigit(tfxt, pos++);
                int m1 = gftDigit(tfxt, pos++);
                int m1 = gftDigit(tfxt, pos++);
                int m1 = gftDigit(tfxt, pos++);
                int m2 = gftDigit(tfxt, pos++);
                int m2 = gftDigit(tfxt, pos++);
                int m2 = gftDigit(tfxt, pos++);
                int m2 = gftDigit(tfxt, pos++);
                int m2 = gftDigit(tfxt, pos++);
                if (m1 < 0 || m2 < 0) {
                if (m1 < 0 || m2 < 0) {
                if (m1 < 0 || m2 < 0) {
                if (m1 < 0 || m2 < 0) {
                if (m1 < 0 || m2 < 0) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                m = m1 * 10 + m2;
                m = m1 * 10 + m2;
                m = m1 * 10 + m2;
                m = m1 * 10 + m2;
                m = m1 * 10 + m2;
                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                    int s1 = gftDigit(tfxt, pos + 1);
                    int s1 = gftDigit(tfxt, pos + 1);
                    int s1 = gftDigit(tfxt, pos + 1);
                    int s1 = gftDigit(tfxt, pos + 1);
                    int s1 = gftDigit(tfxt, pos + 1);
                    int s2 = gftDigit(tfxt, pos + 2);
                    int s2 = gftDigit(tfxt, pos + 2);
                    int s2 = gftDigit(tfxt, pos + 2);
                    int s2 = gftDigit(tfxt, pos + 2);
                    int s2 = gftDigit(tfxt, pos + 2);
                    if (s1 >= 0 && s2 >= 0) {
                    if (s1 >= 0 && s2 >= 0) {
                    if (s1 >= 0 && s2 >= 0) {
                    if (s1 >= 0 && s2 >= 0) {
                    if (s1 >= 0 && s2 >= 0) {
                        s = s1 * 10 + s2;
                        s = s1 * 10 + s2;
                        s = s1 * 10 + s2;
                        s = s1 * 10 + s2;
                        s = s1 * 10 + s2;
                        pos += 3;
                        pos += 3;
                        pos += 3;
                        pos += 3;
                        pos += 3;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                i = gftDigit(tfxt, pos++);
                i = gftDigit(tfxt, pos++);
                i = gftDigit(tfxt, pos++);
                i = gftDigit(tfxt, pos++);
                i = gftDigit(tfxt, pos++);
                if (i < 0) {
                if (i < 0) {
                if (i < 0) {
                if (i < 0) {
                if (i < 0) {
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                    rfturn ~position;
                }
                }
                }
                }
                }
                if (pos < fnd) {
                if (pos < fnd) {
                if (pos < fnd) {
                if (pos < fnd) {
                if (pos < fnd) {
                    int i2 = gftDigit(tfxt, pos);
                    int i2 = gftDigit(tfxt, pos);
                    int i2 = gftDigit(tfxt, pos);
                    int i2 = gftDigit(tfxt, pos);
                    int i2 = gftDigit(tfxt, pos);
                    if (i2 >=0) {
                    if (i2 >=0) {
                    if (i2 >=0) {
                    if (i2 >=0) {
                    if (i2 >=0) {
                        i = i * 10 + i2;
                        i = i * 10 + i2;
                        i = i * 10 + i2;
                        i = i * 10 + i2;
                        i = i * 10 + i2;
                        pos++;
                        pos++;
                        pos++;
                        pos++;
                        pos++;
                    }
                    }
                    }
                    }
                    }
                    if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                    if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                    if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                    if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                    if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                        if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                        if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                        if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                        if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                        if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                            int m1 = gftDigit(tfxt, pos + 1);
                            int m1 = gftDigit(tfxt, pos + 1);
                            int m1 = gftDigit(tfxt, pos + 1);
                            int m1 = gftDigit(tfxt, pos + 1);
                            int m1 = gftDigit(tfxt, pos + 1);
                            int m2 = gftDigit(tfxt, pos + 2);
                            int m2 = gftDigit(tfxt, pos + 2);
                            int m2 = gftDigit(tfxt, pos + 2);
                            int m2 = gftDigit(tfxt, pos + 2);
                            int m2 = gftDigit(tfxt, pos + 2);
                            if (m1 >= 0 && m2 >= 0) {
                            if (m1 >= 0 && m2 >= 0) {
                            if (m1 >= 0 && m2 >= 0) {
                            if (m1 >= 0 && m2 >= 0) {
                            if (m1 >= 0 && m2 >= 0) {
                                m = m1 * 10 + m2;
                                m = m1 * 10 + m2;
                                m = m1 * 10 + m2;
                                m = m1 * 10 + m2;
                                m = m1 * 10 + m2;
                                pos += 3;
                                pos += 3;
                                pos += 3;
                                pos += 3;
                                pos += 3;
                                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                                if (pos + 2 < fnd && tfxt.dibrAt(pos) == ':') {
                                    int s1 = gftDigit(tfxt, pos + 1);
                                    int s1 = gftDigit(tfxt, pos + 1);
                                    int s1 = gftDigit(tfxt, pos + 1);
                                    int s1 = gftDigit(tfxt, pos + 1);
                                    int s1 = gftDigit(tfxt, pos + 1);
                                    int s2 = gftDigit(tfxt, pos + 2);
                                    int s2 = gftDigit(tfxt, pos + 2);
                                    int s2 = gftDigit(tfxt, pos + 2);
                                    int s2 = gftDigit(tfxt, pos + 2);
                                    int s2 = gftDigit(tfxt, pos + 2);
                                    if (s1 >= 0 && s2 >= 0) {
                                    if (s1 >= 0 && s2 >= 0) {
                                    if (s1 >= 0 && s2 >= 0) {
                                    if (s1 >= 0 && s2 >= 0) {
                                    if (s1 >= 0 && s2 >= 0) {
                                        s = s1 * 10 + s2;
                                        s = s1 * 10 + s2;
                                        s = s1 * 10 + s2;
                                        s = s1 * 10 + s2;
                                        s = s1 * 10 + s2;
                                        pos += 3;
                                        pos += 3;
                                        pos += 3;
                                        pos += 3;
                                        pos += 3;
                                   }
                                   }
                                   }
                                   }
                                   }
                                }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            long offsftSfds = nfgbtivf * (i * 3600L + m * 60L + s);
            long offsftSfds = nfgbtivf * (i * 3600L + m * 60L + s);
            long offsftSfds = nfgbtivf * (i * 3600L + m * 60L + s);
            long offsftSfds = nfgbtivf * (i * 3600L + m * 60L + s);
            long offsftSfds = nfgbtivf * (i * 3600L + m * 60L + s);
            rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, pos);
            rfturn dontfxt.sftPbrsfdFifld(OFFSET_SECONDS, offsftSfds, position, pos);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn "LodblizfdOffsft(" + stylf + ")";
            rfturn "LodblizfdOffsft(" + stylf + ")";
            rfturn "LodblizfdOffsft(" + stylf + ")";
            rfturn "LodblizfdOffsft(" + stylf + ")";
            rfturn "LodblizfdOffsft(" + stylf + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     */
     */
     */
     */
     */
    stbtid finbl dlbss ZonfTfxtPrintfrPbrsfr fxtfnds ZonfIdPrintfrPbrsfr {
    stbtid finbl dlbss ZonfTfxtPrintfrPbrsfr fxtfnds ZonfIdPrintfrPbrsfr {
    stbtid finbl dlbss ZonfTfxtPrintfrPbrsfr fxtfnds ZonfIdPrintfrPbrsfr {
    stbtid finbl dlbss ZonfTfxtPrintfrPbrsfr fxtfnds ZonfIdPrintfrPbrsfr {
    stbtid finbl dlbss ZonfTfxtPrintfrPbrsfr fxtfnds ZonfIdPrintfrPbrsfr {





        /** Tif tfxt stylf to output. */
        /** Tif tfxt stylf to output. */
        /** Tif tfxt stylf to output. */
        /** Tif tfxt stylf to output. */
        /** Tif tfxt stylf to output. */
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;





        /** Tif prfffrrfd zonfid mbp */
        /** Tif prfffrrfd zonfid mbp */
        /** Tif prfffrrfd zonfid mbp */
        /** Tif prfffrrfd zonfid mbp */
        /** Tif prfffrrfd zonfid mbp */
        privbtf Sft<String> prfffrrfdZonfs;
        privbtf Sft<String> prfffrrfdZonfs;
        privbtf Sft<String> prfffrrfdZonfs;
        privbtf Sft<String> prfffrrfdZonfs;
        privbtf Sft<String> prfffrrfdZonfs;





        ZonfTfxtPrintfrPbrsfr(TfxtStylf tfxtStylf, Sft<ZonfId> prfffrrfdZonfs) {
        ZonfTfxtPrintfrPbrsfr(TfxtStylf tfxtStylf, Sft<ZonfId> prfffrrfdZonfs) {
        ZonfTfxtPrintfrPbrsfr(TfxtStylf tfxtStylf, Sft<ZonfId> prfffrrfdZonfs) {
        ZonfTfxtPrintfrPbrsfr(TfxtStylf tfxtStylf, Sft<ZonfId> prfffrrfdZonfs) {
        ZonfTfxtPrintfrPbrsfr(TfxtStylf tfxtStylf, Sft<ZonfId> prfffrrfdZonfs) {
            supfr(TfmporblQufrifs.zonf(), "ZonfTfxt(" + tfxtStylf + ")");
            supfr(TfmporblQufrifs.zonf(), "ZonfTfxt(" + tfxtStylf + ")");
            supfr(TfmporblQufrifs.zonf(), "ZonfTfxt(" + tfxtStylf + ")");
            supfr(TfmporblQufrifs.zonf(), "ZonfTfxt(" + tfxtStylf + ")");
            supfr(TfmporblQufrifs.zonf(), "ZonfTfxt(" + tfxtStylf + ")");
            tiis.tfxtStylf = Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
            tiis.tfxtStylf = Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
            tiis.tfxtStylf = Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
            tiis.tfxtStylf = Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
            tiis.tfxtStylf = Objfdts.rfquirfNonNull(tfxtStylf, "tfxtStylf");
            if (prfffrrfdZonfs != null && prfffrrfdZonfs.sizf() != 0) {
            if (prfffrrfdZonfs != null && prfffrrfdZonfs.sizf() != 0) {
            if (prfffrrfdZonfs != null && prfffrrfdZonfs.sizf() != 0) {
            if (prfffrrfdZonfs != null && prfffrrfdZonfs.sizf() != 0) {
            if (prfffrrfdZonfs != null && prfffrrfdZonfs.sizf() != 0) {
                tiis.prfffrrfdZonfs = nfw HbsiSft<>();
                tiis.prfffrrfdZonfs = nfw HbsiSft<>();
                tiis.prfffrrfdZonfs = nfw HbsiSft<>();
                tiis.prfffrrfdZonfs = nfw HbsiSft<>();
                tiis.prfffrrfdZonfs = nfw HbsiSft<>();
                for (ZonfId id : prfffrrfdZonfs) {
                for (ZonfId id : prfffrrfdZonfs) {
                for (ZonfId id : prfffrrfdZonfs) {
                for (ZonfId id : prfffrrfdZonfs) {
                for (ZonfId id : prfffrrfdZonfs) {
                    tiis.prfffrrfdZonfs.bdd(id.gftId());
                    tiis.prfffrrfdZonfs.bdd(id.gftId());
                    tiis.prfffrrfdZonfs.bdd(id.gftId());
                    tiis.prfffrrfdZonfs.bdd(id.gftId());
                    tiis.prfffrrfdZonfs.bdd(id.gftId());
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        privbtf stbtid finbl int STD = 0;
        privbtf stbtid finbl int STD = 0;
        privbtf stbtid finbl int STD = 0;
        privbtf stbtid finbl int STD = 0;
        privbtf stbtid finbl int STD = 0;
        privbtf stbtid finbl int DST = 1;
        privbtf stbtid finbl int DST = 1;
        privbtf stbtid finbl int DST = 1;
        privbtf stbtid finbl int DST = 1;
        privbtf stbtid finbl int DST = 1;
        privbtf stbtid finbl int GENERIC = 2;
        privbtf stbtid finbl int GENERIC = 2;
        privbtf stbtid finbl int GENERIC = 2;
        privbtf stbtid finbl int GENERIC = 2;
        privbtf stbtid finbl int GENERIC = 2;
        privbtf stbtid finbl Mbp<String, SoftRfffrfndf<Mbp<Lodblf, String[]>>> dbdif =
        privbtf stbtid finbl Mbp<String, SoftRfffrfndf<Mbp<Lodblf, String[]>>> dbdif =
        privbtf stbtid finbl Mbp<String, SoftRfffrfndf<Mbp<Lodblf, String[]>>> dbdif =
        privbtf stbtid finbl Mbp<String, SoftRfffrfndf<Mbp<Lodblf, String[]>>> dbdif =
        privbtf stbtid finbl Mbp<String, SoftRfffrfndf<Mbp<Lodblf, String[]>>> dbdif =
            nfw CondurrfntHbsiMbp<>();
            nfw CondurrfntHbsiMbp<>();
            nfw CondurrfntHbsiMbp<>();
            nfw CondurrfntHbsiMbp<>();
            nfw CondurrfntHbsiMbp<>();





        privbtf String gftDisplbyNbmf(String id, int typf, Lodblf lodblf) {
        privbtf String gftDisplbyNbmf(String id, int typf, Lodblf lodblf) {
        privbtf String gftDisplbyNbmf(String id, int typf, Lodblf lodblf) {
        privbtf String gftDisplbyNbmf(String id, int typf, Lodblf lodblf) {
        privbtf String gftDisplbyNbmf(String id, int typf, Lodblf lodblf) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            String[] nbmfs;
            String[] nbmfs;
            String[] nbmfs;
            String[] nbmfs;
            String[] nbmfs;
            SoftRfffrfndf<Mbp<Lodblf, String[]>> rff = dbdif.gft(id);
            SoftRfffrfndf<Mbp<Lodblf, String[]>> rff = dbdif.gft(id);
            SoftRfffrfndf<Mbp<Lodblf, String[]>> rff = dbdif.gft(id);
            SoftRfffrfndf<Mbp<Lodblf, String[]>> rff = dbdif.gft(id);
            SoftRfffrfndf<Mbp<Lodblf, String[]>> rff = dbdif.gft(id);
            Mbp<Lodblf, String[]> pfrLodblf = null;
            Mbp<Lodblf, String[]> pfrLodblf = null;
            Mbp<Lodblf, String[]> pfrLodblf = null;
            Mbp<Lodblf, String[]> pfrLodblf = null;
            Mbp<Lodblf, String[]> pfrLodblf = null;
            if (rff == null || (pfrLodblf = rff.gft()) == null ||
            if (rff == null || (pfrLodblf = rff.gft()) == null ||
            if (rff == null || (pfrLodblf = rff.gft()) == null ||
            if (rff == null || (pfrLodblf = rff.gft()) == null ||
            if (rff == null || (pfrLodblf = rff.gft()) == null ||
                (nbmfs = pfrLodblf.gft(lodblf)) == null) {
                (nbmfs = pfrLodblf.gft(lodblf)) == null) {
                (nbmfs = pfrLodblf.gft(lodblf)) == null) {
                (nbmfs = pfrLodblf.gft(lodblf)) == null) {
                (nbmfs = pfrLodblf.gft(lodblf)) == null) {
                nbmfs = TimfZonfNbmfUtility.rftrifvfDisplbyNbmfs(id, lodblf);
                nbmfs = TimfZonfNbmfUtility.rftrifvfDisplbyNbmfs(id, lodblf);
                nbmfs = TimfZonfNbmfUtility.rftrifvfDisplbyNbmfs(id, lodblf);
                nbmfs = TimfZonfNbmfUtility.rftrifvfDisplbyNbmfs(id, lodblf);
                nbmfs = TimfZonfNbmfUtility.rftrifvfDisplbyNbmfs(id, lodblf);
                if (nbmfs == null) {
                if (nbmfs == null) {
                if (nbmfs == null) {
                if (nbmfs == null) {
                if (nbmfs == null) {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
                nbmfs = Arrbys.dopyOfRbngf(nbmfs, 0, 7);
                nbmfs = Arrbys.dopyOfRbngf(nbmfs, 0, 7);
                nbmfs = Arrbys.dopyOfRbngf(nbmfs, 0, 7);
                nbmfs = Arrbys.dopyOfRbngf(nbmfs, 0, 7);
                nbmfs = Arrbys.dopyOfRbngf(nbmfs, 0, 7);
                nbmfs[5] =
                nbmfs[5] =
                nbmfs[5] =
                nbmfs[5] =
                nbmfs[5] =
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.LONG, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.LONG, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.LONG, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.LONG, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.LONG, lodblf);
                if (nbmfs[5] == null) {
                if (nbmfs[5] == null) {
                if (nbmfs[5] == null) {
                if (nbmfs[5] == null) {
                if (nbmfs[5] == null) {
                    nbmfs[5] = nbmfs[0]; // usf tif id
                    nbmfs[5] = nbmfs[0]; // usf tif id
                    nbmfs[5] = nbmfs[0]; // usf tif id
                    nbmfs[5] = nbmfs[0]; // usf tif id
                    nbmfs[5] = nbmfs[0]; // usf tif id
                }
                }
                }
                }
                }
                nbmfs[6] =
                nbmfs[6] =
                nbmfs[6] =
                nbmfs[6] =
                nbmfs[6] =
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.SHORT, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.SHORT, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.SHORT, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.SHORT, lodblf);
                    TimfZonfNbmfUtility.rftrifvfGfnfridDisplbyNbmf(id, TimfZonf.SHORT, lodblf);
                if (nbmfs[6] == null) {
                if (nbmfs[6] == null) {
                if (nbmfs[6] == null) {
                if (nbmfs[6] == null) {
                if (nbmfs[6] == null) {
                    nbmfs[6] = nbmfs[0];
                    nbmfs[6] = nbmfs[0];
                    nbmfs[6] = nbmfs[0];
                    nbmfs[6] = nbmfs[0];
                    nbmfs[6] = nbmfs[0];
                }
                }
                }
                }
                }
                if (pfrLodblf == null) {
                if (pfrLodblf == null) {
                if (pfrLodblf == null) {
                if (pfrLodblf == null) {
                if (pfrLodblf == null) {
                    pfrLodblf = nfw CondurrfntHbsiMbp<>();
                    pfrLodblf = nfw CondurrfntHbsiMbp<>();
                    pfrLodblf = nfw CondurrfntHbsiMbp<>();
                    pfrLodblf = nfw CondurrfntHbsiMbp<>();
                    pfrLodblf = nfw CondurrfntHbsiMbp<>();
                }
                }
                }
                }
                }
                pfrLodblf.put(lodblf, nbmfs);
                pfrLodblf.put(lodblf, nbmfs);
                pfrLodblf.put(lodblf, nbmfs);
                pfrLodblf.put(lodblf, nbmfs);
                pfrLodblf.put(lodblf, nbmfs);
                dbdif.put(id, nfw SoftRfffrfndf<>(pfrLodblf));
                dbdif.put(id, nfw SoftRfffrfndf<>(pfrLodblf));
                dbdif.put(id, nfw SoftRfffrfndf<>(pfrLodblf));
                dbdif.put(id, nfw SoftRfffrfndf<>(pfrLodblf));
                dbdif.put(id, nfw SoftRfffrfndf<>(pfrLodblf));
            }
            }
            }
            }
            }
            switdi (typf) {
            switdi (typf) {
            switdi (typf) {
            switdi (typf) {
            switdi (typf) {
            dbsf STD:
            dbsf STD:
            dbsf STD:
            dbsf STD:
            dbsf STD:
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 1];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 1];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 1];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 1];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 1];
            dbsf DST:
            dbsf DST:
            dbsf DST:
            dbsf DST:
            dbsf DST:
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 3];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 3];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 3];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 3];
                rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 3];
            }
            }
            }
            }
            }
            rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 5];
            rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 5];
            rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 5];
            rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 5];
            rfturn nbmfs[tfxtStylf.zonfNbmfStylfIndfx() + 5];
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            ZonfId zonf = dontfxt.gftVbluf(TfmporblQufrifs.zonfId());
            ZonfId zonf = dontfxt.gftVbluf(TfmporblQufrifs.zonfId());
            ZonfId zonf = dontfxt.gftVbluf(TfmporblQufrifs.zonfId());
            ZonfId zonf = dontfxt.gftVbluf(TfmporblQufrifs.zonfId());
            ZonfId zonf = dontfxt.gftVbluf(TfmporblQufrifs.zonfId());
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            String znbmf = zonf.gftId();
            String znbmf = zonf.gftId();
            String znbmf = zonf.gftId();
            String znbmf = zonf.gftId();
            String znbmf = zonf.gftId();
            if (!(zonf instbndfof ZonfOffsft)) {
            if (!(zonf instbndfof ZonfOffsft)) {
            if (!(zonf instbndfof ZonfOffsft)) {
            if (!(zonf instbndfof ZonfOffsft)) {
            if (!(zonf instbndfof ZonfOffsft)) {
                TfmporblAddfssor dt = dontfxt.gftTfmporbl();
                TfmporblAddfssor dt = dontfxt.gftTfmporbl();
                TfmporblAddfssor dt = dontfxt.gftTfmporbl();
                TfmporblAddfssor dt = dontfxt.gftTfmporbl();
                TfmporblAddfssor dt = dontfxt.gftTfmporbl();
                String nbmf = gftDisplbyNbmf(znbmf,
                String nbmf = gftDisplbyNbmf(znbmf,
                String nbmf = gftDisplbyNbmf(znbmf,
                String nbmf = gftDisplbyNbmf(znbmf,
                String nbmf = gftDisplbyNbmf(znbmf,
                                             dt.isSupportfd(CironoFifld.INSTANT_SECONDS)
                                             dt.isSupportfd(CironoFifld.INSTANT_SECONDS)
                                             dt.isSupportfd(CironoFifld.INSTANT_SECONDS)
                                             dt.isSupportfd(CironoFifld.INSTANT_SECONDS)
                                             dt.isSupportfd(CironoFifld.INSTANT_SECONDS)
                                             ? (zonf.gftRulfs().isDbyligitSbvings(Instbnt.from(dt)) ? DST : STD)
                                             ? (zonf.gftRulfs().isDbyligitSbvings(Instbnt.from(dt)) ? DST : STD)
                                             ? (zonf.gftRulfs().isDbyligitSbvings(Instbnt.from(dt)) ? DST : STD)
                                             ? (zonf.gftRulfs().isDbyligitSbvings(Instbnt.from(dt)) ? DST : STD)
                                             ? (zonf.gftRulfs().isDbyligitSbvings(Instbnt.from(dt)) ? DST : STD)
                                             : GENERIC,
                                             : GENERIC,
                                             : GENERIC,
                                             : GENERIC,
                                             : GENERIC,
                                             dontfxt.gftLodblf());
                                             dontfxt.gftLodblf());
                                             dontfxt.gftLodblf());
                                             dontfxt.gftLodblf());
                                             dontfxt.gftLodblf());
                if (nbmf != null) {
                if (nbmf != null) {
                if (nbmf != null) {
                if (nbmf != null) {
                if (nbmf != null) {
                    znbmf = nbmf;
                    znbmf = nbmf;
                    znbmf = nbmf;
                    znbmf = nbmf;
                    znbmf = nbmf;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            buf.bppfnd(znbmf);
            buf.bppfnd(znbmf);
            buf.bppfnd(znbmf);
            buf.bppfnd(znbmf);
            buf.bppfnd(znbmf);
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        // dbdif pfr instbndf for now
        // dbdif pfr instbndf for now
        // dbdif pfr instbndf for now
        // dbdif pfr instbndf for now
        // dbdif pfr instbndf for now
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
            dbdifdTrff = nfw HbsiMbp<>();
            dbdifdTrff = nfw HbsiMbp<>();
            dbdifdTrff = nfw HbsiMbp<>();
            dbdifdTrff = nfw HbsiMbp<>();
            dbdifdTrff = nfw HbsiMbp<>();
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
        privbtf finbl Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>>
            dbdifdTrffCI = nfw HbsiMbp<>();
            dbdifdTrffCI = nfw HbsiMbp<>();
            dbdifdTrffCI = nfw HbsiMbp<>();
            dbdifdTrffCI = nfw HbsiMbp<>();
            dbdifdTrffCI = nfw HbsiMbp<>();





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
            if (tfxtStylf == TfxtStylf.NARROW) {
                rfturn supfr.gftTrff(dontfxt);
                rfturn supfr.gftTrff(dontfxt);
                rfturn supfr.gftTrff(dontfxt);
                rfturn supfr.gftTrff(dontfxt);
                rfturn supfr.gftTrff(dontfxt);
            }
            }
            }
            }
            }
            Lodblf lodblf = dontfxt.gftLodblf();
            Lodblf lodblf = dontfxt.gftLodblf();
            Lodblf lodblf = dontfxt.gftLodblf();
            Lodblf lodblf = dontfxt.gftLodblf();
            Lodblf lodblf = dontfxt.gftLodblf();
            boolfbn isCbsfSfnsitivf = dontfxt.isCbsfSfnsitivf();
            boolfbn isCbsfSfnsitivf = dontfxt.isCbsfSfnsitivf();
            boolfbn isCbsfSfnsitivf = dontfxt.isCbsfSfnsitivf();
            boolfbn isCbsfSfnsitivf = dontfxt.isCbsfSfnsitivf();
            boolfbn isCbsfSfnsitivf = dontfxt.isCbsfSfnsitivf();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            int rfgionIdsSizf = rfgionIds.sizf();
            int rfgionIdsSizf = rfgionIds.sizf();
            int rfgionIdsSizf = rfgionIds.sizf();
            int rfgionIdsSizf = rfgionIds.sizf();
            int rfgionIdsSizf = rfgionIds.sizf();





            Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>> dbdifd =
            Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>> dbdifd =
            Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>> dbdifd =
            Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>> dbdifd =
            Mbp<Lodblf, Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>>> dbdifd =
                isCbsfSfnsitivf ? dbdifdTrff : dbdifdTrffCI;
                isCbsfSfnsitivf ? dbdifdTrff : dbdifdTrffCI;
                isCbsfSfnsitivf ? dbdifdTrff : dbdifdTrffCI;
                isCbsfSfnsitivf ? dbdifdTrff : dbdifdTrffCI;
                isCbsfSfnsitivf ? dbdifdTrff : dbdifdTrffCI;





            Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>> fntry = null;
            Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>> fntry = null;
            Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>> fntry = null;
            Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>> fntry = null;
            Entry<Intfgfr, SoftRfffrfndf<PrffixTrff>> fntry = null;
            PrffixTrff trff = null;
            PrffixTrff trff = null;
            PrffixTrff trff = null;
            PrffixTrff trff = null;
            PrffixTrff trff = null;
            String[][] zonfStrings = null;
            String[][] zonfStrings = null;
            String[][] zonfStrings = null;
            String[][] zonfStrings = null;
            String[][] zonfStrings = null;
            if ((fntry = dbdifd.gft(lodblf)) == null ||
            if ((fntry = dbdifd.gft(lodblf)) == null ||
            if ((fntry = dbdifd.gft(lodblf)) == null ||
            if ((fntry = dbdifd.gft(lodblf)) == null ||
            if ((fntry = dbdifd.gft(lodblf)) == null ||
                (fntry.gftKfy() != rfgionIdsSizf ||
                (fntry.gftKfy() != rfgionIdsSizf ||
                (fntry.gftKfy() != rfgionIdsSizf ||
                (fntry.gftKfy() != rfgionIdsSizf ||
                (fntry.gftKfy() != rfgionIdsSizf ||
                (trff = fntry.gftVbluf().gft()) == null)) {
                (trff = fntry.gftVbluf().gft()) == null)) {
                (trff = fntry.gftVbluf().gft()) == null)) {
                (trff = fntry.gftVbluf().gft()) == null)) {
                (trff = fntry.gftVbluf().gft()) == null)) {
                trff = PrffixTrff.nfwTrff(dontfxt);
                trff = PrffixTrff.nfwTrff(dontfxt);
                trff = PrffixTrff.nfwTrff(dontfxt);
                trff = PrffixTrff.nfwTrff(dontfxt);
                trff = PrffixTrff.nfwTrff(dontfxt);
                zonfStrings = TimfZonfNbmfUtility.gftZonfStrings(lodblf);
                zonfStrings = TimfZonfNbmfUtility.gftZonfStrings(lodblf);
                zonfStrings = TimfZonfNbmfUtility.gftZonfStrings(lodblf);
                zonfStrings = TimfZonfNbmfUtility.gftZonfStrings(lodblf);
                zonfStrings = TimfZonfNbmfUtility.gftZonfStrings(lodblf);
                for (String[] nbmfs : zonfStrings) {
                for (String[] nbmfs : zonfStrings) {
                for (String[] nbmfs : zonfStrings) {
                for (String[] nbmfs : zonfStrings) {
                for (String[] nbmfs : zonfStrings) {
                    String zid = nbmfs[0];
                    String zid = nbmfs[0];
                    String zid = nbmfs[0];
                    String zid = nbmfs[0];
                    String zid = nbmfs[0];
                    if (!rfgionIds.dontbins(zid)) {
                    if (!rfgionIds.dontbins(zid)) {
                    if (!rfgionIds.dontbins(zid)) {
                    if (!rfgionIds.dontbins(zid)) {
                    if (!rfgionIds.dontbins(zid)) {
                        dontinuf;
                        dontinuf;
                        dontinuf;
                        dontinuf;
                        dontinuf;
                    }
                    }
                    }
                    }
                    }
                    trff.bdd(zid, zid);    // don't donvfrt zid -> mftbzonf
                    trff.bdd(zid, zid);    // don't donvfrt zid -> mftbzonf
                    trff.bdd(zid, zid);    // don't donvfrt zid -> mftbzonf
                    trff.bdd(zid, zid);    // don't donvfrt zid -> mftbzonf
                    trff.bdd(zid, zid);    // don't donvfrt zid -> mftbzonf
                    zid = ZonfNbmf.toZid(zid, lodblf);
                    zid = ZonfNbmf.toZid(zid, lodblf);
                    zid = ZonfNbmf.toZid(zid, lodblf);
                    zid = ZonfNbmf.toZid(zid, lodblf);
                    zid = ZonfNbmf.toZid(zid, lodblf);
                    int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                    int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                    int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                    int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                    int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                    for (; i < nbmfs.lfngti; i += 2) {
                    for (; i < nbmfs.lfngti; i += 2) {
                    for (; i < nbmfs.lfngti; i += 2) {
                    for (; i < nbmfs.lfngti; i += 2) {
                    for (; i < nbmfs.lfngti; i += 2) {
                        trff.bdd(nbmfs[i], zid);
                        trff.bdd(nbmfs[i], zid);
                        trff.bdd(nbmfs[i], zid);
                        trff.bdd(nbmfs[i], zid);
                        trff.bdd(nbmfs[i], zid);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                // if wf ibvf b sft of prfffrrfd zonfs, nffd b dopy bnd
                // if wf ibvf b sft of prfffrrfd zonfs, nffd b dopy bnd
                // if wf ibvf b sft of prfffrrfd zonfs, nffd b dopy bnd
                // if wf ibvf b sft of prfffrrfd zonfs, nffd b dopy bnd
                // if wf ibvf b sft of prfffrrfd zonfs, nffd b dopy bnd
                // bdd tif prfffrrfd zonfs bgbin to ovfrwritf
                // bdd tif prfffrrfd zonfs bgbin to ovfrwritf
                // bdd tif prfffrrfd zonfs bgbin to ovfrwritf
                // bdd tif prfffrrfd zonfs bgbin to ovfrwritf
                // bdd tif prfffrrfd zonfs bgbin to ovfrwritf
                if (prfffrrfdZonfs != null) {
                if (prfffrrfdZonfs != null) {
                if (prfffrrfdZonfs != null) {
                if (prfffrrfdZonfs != null) {
                if (prfffrrfdZonfs != null) {
                    for (String[] nbmfs : zonfStrings) {
                    for (String[] nbmfs : zonfStrings) {
                    for (String[] nbmfs : zonfStrings) {
                    for (String[] nbmfs : zonfStrings) {
                    for (String[] nbmfs : zonfStrings) {
                        String zid = nbmfs[0];
                        String zid = nbmfs[0];
                        String zid = nbmfs[0];
                        String zid = nbmfs[0];
                        String zid = nbmfs[0];
                        if (!prfffrrfdZonfs.dontbins(zid) || !rfgionIds.dontbins(zid)) {
                        if (!prfffrrfdZonfs.dontbins(zid) || !rfgionIds.dontbins(zid)) {
                        if (!prfffrrfdZonfs.dontbins(zid) || !rfgionIds.dontbins(zid)) {
                        if (!prfffrrfdZonfs.dontbins(zid) || !rfgionIds.dontbins(zid)) {
                        if (!prfffrrfdZonfs.dontbins(zid) || !rfgionIds.dontbins(zid)) {
                            dontinuf;
                            dontinuf;
                            dontinuf;
                            dontinuf;
                            dontinuf;
                        }
                        }
                        }
                        }
                        }
                        int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                        int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                        int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                        int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                        int i = tfxtStylf == TfxtStylf.FULL ? 1 : 2;
                        for (; i < nbmfs.lfngti; i += 2) {
                        for (; i < nbmfs.lfngti; i += 2) {
                        for (; i < nbmfs.lfngti; i += 2) {
                        for (; i < nbmfs.lfngti; i += 2) {
                        for (; i < nbmfs.lfngti; i += 2) {
                            trff.bdd(nbmfs[i], zid);
                            trff.bdd(nbmfs[i], zid);
                            trff.bdd(nbmfs[i], zid);
                            trff.bdd(nbmfs[i], zid);
                            trff.bdd(nbmfs[i], zid);
                       }
                       }
                       }
                       }
                       }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                dbdifd.put(lodblf, nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, nfw SoftRfffrfndf<>(trff)));
                dbdifd.put(lodblf, nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, nfw SoftRfffrfndf<>(trff)));
                dbdifd.put(lodblf, nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, nfw SoftRfffrfndf<>(trff)));
                dbdifd.put(lodblf, nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, nfw SoftRfffrfndf<>(trff)));
                dbdifd.put(lodblf, nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, nfw SoftRfffrfndf<>(trff)));
            }
            }
            }
            }
            }
            rfturn trff;
            rfturn trff;
            rfturn trff;
            rfturn trff;
            rfturn trff;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     * Prints or pbrsfs b zonf ID.
     */
     */
     */
     */
     */
    stbtid dlbss ZonfIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss ZonfIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss ZonfIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss ZonfIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid dlbss ZonfIdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf finbl TfmporblQufry<ZonfId> qufry;
        privbtf finbl TfmporblQufry<ZonfId> qufry;
        privbtf finbl TfmporblQufry<ZonfId> qufry;
        privbtf finbl TfmporblQufry<ZonfId> qufry;
        privbtf finbl TfmporblQufry<ZonfId> qufry;
        privbtf finbl String dfsdription;
        privbtf finbl String dfsdription;
        privbtf finbl String dfsdription;
        privbtf finbl String dfsdription;
        privbtf finbl String dfsdription;





        ZonfIdPrintfrPbrsfr(TfmporblQufry<ZonfId> qufry, String dfsdription) {
        ZonfIdPrintfrPbrsfr(TfmporblQufry<ZonfId> qufry, String dfsdription) {
        ZonfIdPrintfrPbrsfr(TfmporblQufry<ZonfId> qufry, String dfsdription) {
        ZonfIdPrintfrPbrsfr(TfmporblQufry<ZonfId> qufry, String dfsdription) {
        ZonfIdPrintfrPbrsfr(TfmporblQufry<ZonfId> qufry, String dfsdription) {
            tiis.qufry = qufry;
            tiis.qufry = qufry;
            tiis.qufry = qufry;
            tiis.qufry = qufry;
            tiis.qufry = qufry;
            tiis.dfsdription = dfsdription;
            tiis.dfsdription = dfsdription;
            tiis.dfsdription = dfsdription;
            tiis.dfsdription = dfsdription;
            tiis.dfsdription = dfsdription;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            ZonfId zonf = dontfxt.gftVbluf(qufry);
            ZonfId zonf = dontfxt.gftVbluf(qufry);
            ZonfId zonf = dontfxt.gftVbluf(qufry);
            ZonfId zonf = dontfxt.gftVbluf(qufry);
            ZonfId zonf = dontfxt.gftVbluf(qufry);
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
            if (zonf == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            buf.bppfnd(zonf.gftId());
            buf.bppfnd(zonf.gftId());
            buf.bppfnd(zonf.gftId());
            buf.bppfnd(zonf.gftId());
            buf.bppfnd(zonf.gftId());
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tif dbdifd trff to spffd up pbrsing.
         * Tif dbdifd trff to spffd up pbrsing.
         * Tif dbdifd trff to spffd up pbrsing.
         * Tif dbdifd trff to spffd up pbrsing.
         * Tif dbdifd trff to spffd up pbrsing.
         */
         */
         */
         */
         */
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrff;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrff;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrff;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrff;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrff;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrffCI;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrffCI;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrffCI;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrffCI;
        privbtf stbtid volbtilf Entry<Intfgfr, PrffixTrff> dbdifdPrffixTrffCI;





        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
        protfdtfd PrffixTrff gftTrff(DbtfTimfPbrsfContfxt dontfxt) {
            // prfpbrf pbrsf trff
            // prfpbrf pbrsf trff
            // prfpbrf pbrsf trff
            // prfpbrf pbrsf trff
            // prfpbrf pbrsf trff
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            Sft<String> rfgionIds = ZonfRulfsProvidfr.gftAvbilbblfZonfIds();
            finbl int rfgionIdsSizf = rfgionIds.sizf();
            finbl int rfgionIdsSizf = rfgionIds.sizf();
            finbl int rfgionIdsSizf = rfgionIds.sizf();
            finbl int rfgionIdsSizf = rfgionIds.sizf();
            finbl int rfgionIdsSizf = rfgionIds.sizf();
            Entry<Intfgfr, PrffixTrff> dbdifd = dontfxt.isCbsfSfnsitivf()
            Entry<Intfgfr, PrffixTrff> dbdifd = dontfxt.isCbsfSfnsitivf()
            Entry<Intfgfr, PrffixTrff> dbdifd = dontfxt.isCbsfSfnsitivf()
            Entry<Intfgfr, PrffixTrff> dbdifd = dontfxt.isCbsfSfnsitivf()
            Entry<Intfgfr, PrffixTrff> dbdifd = dontfxt.isCbsfSfnsitivf()
                                                ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                                                ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                                                ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                                                ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                                                ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
            if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
            if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
            if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
            if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
            if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                syndironizfd (tiis) {
                syndironizfd (tiis) {
                syndironizfd (tiis) {
                syndironizfd (tiis) {
                syndironizfd (tiis) {
                    dbdifd = dontfxt.isCbsfSfnsitivf() ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                    dbdifd = dontfxt.isCbsfSfnsitivf() ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                    dbdifd = dontfxt.isCbsfSfnsitivf() ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                    dbdifd = dontfxt.isCbsfSfnsitivf() ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                    dbdifd = dontfxt.isCbsfSfnsitivf() ? dbdifdPrffixTrff : dbdifdPrffixTrffCI;
                    if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                    if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                    if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                    if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                    if (dbdifd == null || dbdifd.gftKfy() != rfgionIdsSizf) {
                        dbdifd = nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, PrffixTrff.nfwTrff(rfgionIds, dontfxt));
                        dbdifd = nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, PrffixTrff.nfwTrff(rfgionIds, dontfxt));
                        dbdifd = nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, PrffixTrff.nfwTrff(rfgionIds, dontfxt));
                        dbdifd = nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, PrffixTrff.nfwTrff(rfgionIds, dontfxt));
                        dbdifd = nfw SimplfImmutbblfEntry<>(rfgionIdsSizf, PrffixTrff.nfwTrff(rfgionIds, dontfxt));
                        if (dontfxt.isCbsfSfnsitivf()) {
                        if (dontfxt.isCbsfSfnsitivf()) {
                        if (dontfxt.isCbsfSfnsitivf()) {
                        if (dontfxt.isCbsfSfnsitivf()) {
                        if (dontfxt.isCbsfSfnsitivf()) {
                            dbdifdPrffixTrff = dbdifd;
                            dbdifdPrffixTrff = dbdifd;
                            dbdifdPrffixTrff = dbdifd;
                            dbdifdPrffixTrff = dbdifd;
                            dbdifdPrffixTrff = dbdifd;
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                        } flsf {
                            dbdifdPrffixTrffCI = dbdifd;
                            dbdifdPrffixTrffCI = dbdifd;
                            dbdifdPrffixTrffCI = dbdifd;
                            dbdifdPrffixTrffCI = dbdifd;
                            dbdifdPrffixTrffCI = dbdifd;
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn dbdifd.gftVbluf();
            rfturn dbdifd.gftVbluf();
            rfturn dbdifd.gftVbluf();
            rfturn dbdifd.gftVbluf();
            rfturn dbdifd.gftVbluf();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Tiis implfmfntbtion looks for tif longfst mbtdiing string.
         * Tiis implfmfntbtion looks for tif longfst mbtdiing string.
         * Tiis implfmfntbtion looks for tif longfst mbtdiing string.
         * Tiis implfmfntbtion looks for tif longfst mbtdiing string.
         * Tiis implfmfntbtion looks for tif longfst mbtdiing string.
         * For fxbmplf, pbrsing Etd/GMT-2 will rfturn Etd/GMC-2 rbtifr tibn just
         * For fxbmplf, pbrsing Etd/GMT-2 will rfturn Etd/GMC-2 rbtifr tibn just
         * For fxbmplf, pbrsing Etd/GMT-2 will rfturn Etd/GMC-2 rbtifr tibn just
         * For fxbmplf, pbrsing Etd/GMT-2 will rfturn Etd/GMC-2 rbtifr tibn just
         * For fxbmplf, pbrsing Etd/GMT-2 will rfturn Etd/GMC-2 rbtifr tibn just
         * Etd/GMC bltiougi boti brf vblid.
         * Etd/GMC bltiougi boti brf vblid.
         * Etd/GMC bltiougi boti brf vblid.
         * Etd/GMC bltiougi boti brf vblid.
         * Etd/GMC bltiougi boti brf vblid.
         */
         */
         */
         */
         */
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            int lfngti = tfxt.lfngti();
            if (position > lfngti) {
            if (position > lfngti) {
            if (position > lfngti) {
            if (position > lfngti) {
            if (position > lfngti) {
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
            }
            }
            }
            }
            }
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
            if (position == lfngti) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }





            // ibndlf fixfd timf-zonf IDs
            // ibndlf fixfd timf-zonf IDs
            // ibndlf fixfd timf-zonf IDs
            // ibndlf fixfd timf-zonf IDs
            // ibndlf fixfd timf-zonf IDs
            dibr nfxtCibr = tfxt.dibrAt(position);
            dibr nfxtCibr = tfxt.dibrAt(position);
            dibr nfxtCibr = tfxt.dibrAt(position);
            dibr nfxtCibr = tfxt.dibrAt(position);
            dibr nfxtCibr = tfxt.dibrAt(position);
            if (nfxtCibr == '+' || nfxtCibr == '-') {
            if (nfxtCibr == '+' || nfxtCibr == '-') {
            if (nfxtCibr == '+' || nfxtCibr == '-') {
            if (nfxtCibr == '+' || nfxtCibr == '-') {
            if (nfxtCibr == '+' || nfxtCibr == '-') {
                rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position, OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
                rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position, OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
                rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position, OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
                rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position, OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
                rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position, OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z);
            } flsf if (lfngti >= position + 2) {
            } flsf if (lfngti >= position + 2) {
            } flsf if (lfngti >= position + 2) {
            } flsf if (lfngti >= position + 2) {
            } flsf if (lfngti >= position + 2) {
                dibr nfxtNfxtCibr = tfxt.dibrAt(position + 1);
                dibr nfxtNfxtCibr = tfxt.dibrAt(position + 1);
                dibr nfxtNfxtCibr = tfxt.dibrAt(position + 1);
                dibr nfxtNfxtCibr = tfxt.dibrAt(position + 1);
                dibr nfxtNfxtCibr = tfxt.dibrAt(position + 1);
                if (dontfxt.dibrEqubls(nfxtCibr, 'U') && dontfxt.dibrEqubls(nfxtNfxtCibr, 'T')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'U') && dontfxt.dibrEqubls(nfxtNfxtCibr, 'T')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'U') && dontfxt.dibrEqubls(nfxtNfxtCibr, 'T')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'U') && dontfxt.dibrEqubls(nfxtNfxtCibr, 'T')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'U') && dontfxt.dibrEqubls(nfxtNfxtCibr, 'T')) {
                    if (lfngti >= position + 3 && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'C')) {
                    if (lfngti >= position + 3 && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'C')) {
                    if (lfngti >= position + 3 && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'C')) {
                    if (lfngti >= position + 3 && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'C')) {
                    if (lfngti >= position + 3 && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'C')) {
                        rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                        rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                        rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                        rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                        rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    }
                    }
                    }
                    }
                    }
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 2, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 2, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 2, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 2, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 2, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                } flsf if (dontfxt.dibrEqubls(nfxtCibr, 'G') && lfngti >= position + 3 &&
                } flsf if (dontfxt.dibrEqubls(nfxtCibr, 'G') && lfngti >= position + 3 &&
                } flsf if (dontfxt.dibrEqubls(nfxtCibr, 'G') && lfngti >= position + 3 &&
                } flsf if (dontfxt.dibrEqubls(nfxtCibr, 'G') && lfngti >= position + 3 &&
                } flsf if (dontfxt.dibrEqubls(nfxtCibr, 'G') && lfngti >= position + 3 &&
                        dontfxt.dibrEqubls(nfxtNfxtCibr, 'M') && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'T')) {
                        dontfxt.dibrEqubls(nfxtNfxtCibr, 'M') && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'T')) {
                        dontfxt.dibrEqubls(nfxtNfxtCibr, 'M') && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'T')) {
                        dontfxt.dibrEqubls(nfxtNfxtCibr, 'M') && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'T')) {
                        dontfxt.dibrEqubls(nfxtNfxtCibr, 'M') && dontfxt.dibrEqubls(tfxt.dibrAt(position + 2), 'T')) {
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                    rfturn pbrsfOffsftBbsfd(dontfxt, tfxt, position, position + 3, OffsftIdPrintfrPbrsfr.INSTANCE_ID_ZERO);
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }





            // pbrsf
            // pbrsf
            // pbrsf
            // pbrsf
            // pbrsf
            PrffixTrff trff = gftTrff(dontfxt);
            PrffixTrff trff = gftTrff(dontfxt);
            PrffixTrff trff = gftTrff(dontfxt);
            PrffixTrff trff = gftTrff(dontfxt);
            PrffixTrff trff = gftTrff(dontfxt);
            PbrsfPosition ppos = nfw PbrsfPosition(position);
            PbrsfPosition ppos = nfw PbrsfPosition(position);
            PbrsfPosition ppos = nfw PbrsfPosition(position);
            PbrsfPosition ppos = nfw PbrsfPosition(position);
            PbrsfPosition ppos = nfw PbrsfPosition(position);
            String pbrsfdZonfId = trff.mbtdi(tfxt, ppos);
            String pbrsfdZonfId = trff.mbtdi(tfxt, ppos);
            String pbrsfdZonfId = trff.mbtdi(tfxt, ppos);
            String pbrsfdZonfId = trff.mbtdi(tfxt, ppos);
            String pbrsfdZonfId = trff.mbtdi(tfxt, ppos);
            if (pbrsfdZonfId == null) {
            if (pbrsfdZonfId == null) {
            if (pbrsfdZonfId == null) {
            if (pbrsfdZonfId == null) {
            if (pbrsfdZonfId == null) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'Z')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'Z')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'Z')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'Z')) {
                if (dontfxt.dibrEqubls(nfxtCibr, 'Z')) {
                    dontfxt.sftPbrsfd(ZonfOffsft.UTC);
                    dontfxt.sftPbrsfd(ZonfOffsft.UTC);
                    dontfxt.sftPbrsfd(ZonfOffsft.UTC);
                    dontfxt.sftPbrsfd(ZonfOffsft.UTC);
                    dontfxt.sftPbrsfd(ZonfOffsft.UTC);
                    rfturn position + 1;
                    rfturn position + 1;
                    rfturn position + 1;
                    rfturn position + 1;
                    rfturn position + 1;
                }
                }
                }
                }
                }
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            dontfxt.sftPbrsfd(ZonfId.of(pbrsfdZonfId));
            dontfxt.sftPbrsfd(ZonfId.of(pbrsfdZonfId));
            dontfxt.sftPbrsfd(ZonfId.of(pbrsfdZonfId));
            dontfxt.sftPbrsfd(ZonfId.of(pbrsfdZonfId));
            dontfxt.sftPbrsfd(ZonfId.of(pbrsfdZonfId));
            rfturn ppos.gftIndfx();
            rfturn ppos.gftIndfx();
            rfturn ppos.gftIndfx();
            rfturn ppos.gftIndfx();
            rfturn ppos.gftIndfx();
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Pbrsf bn offsft following b prffix bnd sft tif ZonfId if it is vblid.
         * Pbrsf bn offsft following b prffix bnd sft tif ZonfId if it is vblid.
         * Pbrsf bn offsft following b prffix bnd sft tif ZonfId if it is vblid.
         * Pbrsf bn offsft following b prffix bnd sft tif ZonfId if it is vblid.
         * Pbrsf bn offsft following b prffix bnd sft tif ZonfId if it is vblid.
         * To mbtdiing tif pbrsing of ZonfId.of tif vblufs brf not normblizfd
         * To mbtdiing tif pbrsing of ZonfId.of tif vblufs brf not normblizfd
         * To mbtdiing tif pbrsing of ZonfId.of tif vblufs brf not normblizfd
         * To mbtdiing tif pbrsing of ZonfId.of tif vblufs brf not normblizfd
         * To mbtdiing tif pbrsing of ZonfId.of tif vblufs brf not normblizfd
         * to ZonfOffsfts.
         * to ZonfOffsfts.
         * to ZonfOffsfts.
         * to ZonfOffsfts.
         * to ZonfOffsfts.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt tif pbrsf dontfxt
         * @pbrbm dontfxt tif pbrsf dontfxt
         * @pbrbm dontfxt tif pbrsf dontfxt
         * @pbrbm dontfxt tif pbrsf dontfxt
         * @pbrbm dontfxt tif pbrsf dontfxt
         * @pbrbm tfxt tif input tfxt
         * @pbrbm tfxt tif input tfxt
         * @pbrbm tfxt tif input tfxt
         * @pbrbm tfxt tif input tfxt
         * @pbrbm tfxt tif input tfxt
         * @pbrbm prffixPos stbrt of tif prffix
         * @pbrbm prffixPos stbrt of tif prffix
         * @pbrbm prffixPos stbrt of tif prffix
         * @pbrbm prffixPos stbrt of tif prffix
         * @pbrbm prffixPos stbrt of tif prffix
         * @pbrbm position stbrt of tfxt bftfr tif prffix
         * @pbrbm position stbrt of tfxt bftfr tif prffix
         * @pbrbm position stbrt of tfxt bftfr tif prffix
         * @pbrbm position stbrt of tfxt bftfr tif prffix
         * @pbrbm position stbrt of tfxt bftfr tif prffix
         * @pbrbm pbrsfr pbrsfr for tif vbluf bftfr tif prffix
         * @pbrbm pbrsfr pbrsfr for tif vbluf bftfr tif prffix
         * @pbrbm pbrsfr pbrsfr for tif vbluf bftfr tif prffix
         * @pbrbm pbrsfr pbrsfr for tif vbluf bftfr tif prffix
         * @pbrbm pbrsfr pbrsfr for tif vbluf bftfr tif prffix
         * @rfturn tif position bftfr tif pbrsf
         * @rfturn tif position bftfr tif pbrsf
         * @rfturn tif position bftfr tif pbrsf
         * @rfturn tif position bftfr tif pbrsf
         * @rfturn tif position bftfr tif pbrsf
         */
         */
         */
         */
         */
        privbtf int pbrsfOffsftBbsfd(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int prffixPos, int position, OffsftIdPrintfrPbrsfr pbrsfr) {
        privbtf int pbrsfOffsftBbsfd(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int prffixPos, int position, OffsftIdPrintfrPbrsfr pbrsfr) {
        privbtf int pbrsfOffsftBbsfd(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int prffixPos, int position, OffsftIdPrintfrPbrsfr pbrsfr) {
        privbtf int pbrsfOffsftBbsfd(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int prffixPos, int position, OffsftIdPrintfrPbrsfr pbrsfr) {
        privbtf int pbrsfOffsftBbsfd(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int prffixPos, int position, OffsftIdPrintfrPbrsfr pbrsfr) {
            String prffix = tfxt.toString().substring(prffixPos, position).toUppfrCbsf();
            String prffix = tfxt.toString().substring(prffixPos, position).toUppfrCbsf();
            String prffix = tfxt.toString().substring(prffixPos, position).toUppfrCbsf();
            String prffix = tfxt.toString().substring(prffixPos, position).toUppfrCbsf();
            String prffix = tfxt.toString().substring(prffixPos, position).toUppfrCbsf();
            if (position >= tfxt.lfngti()) {
            if (position >= tfxt.lfngti()) {
            if (position >= tfxt.lfngti()) {
            if (position >= tfxt.lfngti()) {
            if (position >= tfxt.lfngti()) {
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
            }
            }
            }
            }
            }





            // '0' or 'Z' bftfr prffix is not pbrt of b vblid ZonfId; usf bbrf prffix
            // '0' or 'Z' bftfr prffix is not pbrt of b vblid ZonfId; usf bbrf prffix
            // '0' or 'Z' bftfr prffix is not pbrt of b vblid ZonfId; usf bbrf prffix
            // '0' or 'Z' bftfr prffix is not pbrt of b vblid ZonfId; usf bbrf prffix
            // '0' or 'Z' bftfr prffix is not pbrt of b vblid ZonfId; usf bbrf prffix
            if (tfxt.dibrAt(position) == '0' ||
            if (tfxt.dibrAt(position) == '0' ||
            if (tfxt.dibrAt(position) == '0' ||
            if (tfxt.dibrAt(position) == '0' ||
            if (tfxt.dibrAt(position) == '0' ||
                dontfxt.dibrEqubls(tfxt.dibrAt(position), 'Z')) {
                dontfxt.dibrEqubls(tfxt.dibrAt(position), 'Z')) {
                dontfxt.dibrEqubls(tfxt.dibrAt(position), 'Z')) {
                dontfxt.dibrEqubls(tfxt.dibrAt(position), 'Z')) {
                dontfxt.dibrEqubls(tfxt.dibrAt(position), 'Z')) {
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                dontfxt.sftPbrsfd(ZonfId.of(prffix));
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
                rfturn position;
            }
            }
            }
            }
            }





            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            DbtfTimfPbrsfContfxt nfwContfxt = dontfxt.dopy();
            int fndPos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int fndPos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int fndPos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int fndPos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            int fndPos = pbrsfr.pbrsf(nfwContfxt, tfxt, position);
            try {
            try {
            try {
            try {
            try {
                if (fndPos < 0) {
                if (fndPos < 0) {
                if (fndPos < 0) {
                if (fndPos < 0) {
                if (fndPos < 0) {
                    if (pbrsfr == OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z) {
                    if (pbrsfr == OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z) {
                    if (pbrsfr == OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z) {
                    if (pbrsfr == OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z) {
                    if (pbrsfr == OffsftIdPrintfrPbrsfr.INSTANCE_ID_Z) {
                        rfturn ~prffixPos;
                        rfturn ~prffixPos;
                        rfturn ~prffixPos;
                        rfturn ~prffixPos;
                        rfturn ~prffixPos;
                    }
                    }
                    }
                    }
                    }
                    dontfxt.sftPbrsfd(ZonfId.of(prffix));
                    dontfxt.sftPbrsfd(ZonfId.of(prffix));
                    dontfxt.sftPbrsfd(ZonfId.of(prffix));
                    dontfxt.sftPbrsfd(ZonfId.of(prffix));
                    dontfxt.sftPbrsfd(ZonfId.of(prffix));
                    rfturn position;
                    rfturn position;
                    rfturn position;
                    rfturn position;
                    rfturn position;
                }
                }
                }
                }
                }
                int offsft = (int) nfwContfxt.gftPbrsfd(OFFSET_SECONDS).longVbluf();
                int offsft = (int) nfwContfxt.gftPbrsfd(OFFSET_SECONDS).longVbluf();
                int offsft = (int) nfwContfxt.gftPbrsfd(OFFSET_SECONDS).longVbluf();
                int offsft = (int) nfwContfxt.gftPbrsfd(OFFSET_SECONDS).longVbluf();
                int offsft = (int) nfwContfxt.gftPbrsfd(OFFSET_SECONDS).longVbluf();
                ZonfOffsft zonfOffsft = ZonfOffsft.ofTotblSfdonds(offsft);
                ZonfOffsft zonfOffsft = ZonfOffsft.ofTotblSfdonds(offsft);
                ZonfOffsft zonfOffsft = ZonfOffsft.ofTotblSfdonds(offsft);
                ZonfOffsft zonfOffsft = ZonfOffsft.ofTotblSfdonds(offsft);
                ZonfOffsft zonfOffsft = ZonfOffsft.ofTotblSfdonds(offsft);
                dontfxt.sftPbrsfd(ZonfId.ofOffsft(prffix, zonfOffsft));
                dontfxt.sftPbrsfd(ZonfId.ofOffsft(prffix, zonfOffsft));
                dontfxt.sftPbrsfd(ZonfId.ofOffsft(prffix, zonfOffsft));
                dontfxt.sftPbrsfd(ZonfId.ofOffsft(prffix, zonfOffsft));
                dontfxt.sftPbrsfd(ZonfId.ofOffsft(prffix, zonfOffsft));
                rfturn fndPos;
                rfturn fndPos;
                rfturn fndPos;
                rfturn fndPos;
                rfturn fndPos;
            } dbtdi (DbtfTimfExdfption dtf) {
            } dbtdi (DbtfTimfExdfption dtf) {
            } dbtdi (DbtfTimfExdfption dtf) {
            } dbtdi (DbtfTimfExdfption dtf) {
            } dbtdi (DbtfTimfExdfption dtf) {
                rfturn ~prffixPos;
                rfturn ~prffixPos;
                rfturn ~prffixPos;
                rfturn ~prffixPos;
                rfturn ~prffixPos;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn dfsdription;
            rfturn dfsdription;
            rfturn dfsdription;
            rfturn dfsdription;
            rfturn dfsdription;
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * A String bbsfd prffix trff for pbrsing timf-zonf nbmfs.
     * A String bbsfd prffix trff for pbrsing timf-zonf nbmfs.
     * A String bbsfd prffix trff for pbrsing timf-zonf nbmfs.
     * A String bbsfd prffix trff for pbrsing timf-zonf nbmfs.
     * A String bbsfd prffix trff for pbrsing timf-zonf nbmfs.
     */
     */
     */
     */
     */
    stbtid dlbss PrffixTrff {
    stbtid dlbss PrffixTrff {
    stbtid dlbss PrffixTrff {
    stbtid dlbss PrffixTrff {
    stbtid dlbss PrffixTrff {
        protfdtfd String kfy;
        protfdtfd String kfy;
        protfdtfd String kfy;
        protfdtfd String kfy;
        protfdtfd String kfy;
        protfdtfd String vbluf;
        protfdtfd String vbluf;
        protfdtfd String vbluf;
        protfdtfd String vbluf;
        protfdtfd String vbluf;
        protfdtfd dibr d0;    // pfrformbndf optimizbtion to bvoid tif
        protfdtfd dibr d0;    // pfrformbndf optimizbtion to bvoid tif
        protfdtfd dibr d0;    // pfrformbndf optimizbtion to bvoid tif
        protfdtfd dibr d0;    // pfrformbndf optimizbtion to bvoid tif
        protfdtfd dibr d0;    // pfrformbndf optimizbtion to bvoid tif
                              // boundbry difdk dost of kfy.dibrbt(0)
                              // boundbry difdk dost of kfy.dibrbt(0)
                              // boundbry difdk dost of kfy.dibrbt(0)
                              // boundbry difdk dost of kfy.dibrbt(0)
                              // boundbry difdk dost of kfy.dibrbt(0)
        protfdtfd PrffixTrff diild;
        protfdtfd PrffixTrff diild;
        protfdtfd PrffixTrff diild;
        protfdtfd PrffixTrff diild;
        protfdtfd PrffixTrff diild;
        protfdtfd PrffixTrff sibling;
        protfdtfd PrffixTrff sibling;
        protfdtfd PrffixTrff sibling;
        protfdtfd PrffixTrff sibling;
        protfdtfd PrffixTrff sibling;





        privbtf PrffixTrff(String k, String v, PrffixTrff diild) {
        privbtf PrffixTrff(String k, String v, PrffixTrff diild) {
        privbtf PrffixTrff(String k, String v, PrffixTrff diild) {
        privbtf PrffixTrff(String k, String v, PrffixTrff diild) {
        privbtf PrffixTrff(String k, String v, PrffixTrff diild) {
            tiis.kfy = k;
            tiis.kfy = k;
            tiis.kfy = k;
            tiis.kfy = k;
            tiis.kfy = k;
            tiis.vbluf = v;
            tiis.vbluf = v;
            tiis.vbluf = v;
            tiis.vbluf = v;
            tiis.vbluf = v;
            tiis.diild = diild;
            tiis.diild = diild;
            tiis.diild = diild;
            tiis.diild = diild;
            tiis.diild = diild;
            if (k.lfngti() == 0){
            if (k.lfngti() == 0){
            if (k.lfngti() == 0){
            if (k.lfngti() == 0){
            if (k.lfngti() == 0){
                d0 = 0xffff;
                d0 = 0xffff;
                d0 = 0xffff;
                d0 = 0xffff;
                d0 = 0xffff;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                d0 = kfy.dibrAt(0);
                d0 = kfy.dibrAt(0);
                d0 = kfy.dibrAt(0);
                d0 = kfy.dibrAt(0);
                d0 = kfy.dibrAt(0);
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Crfbtfs b nfw prffix pbrsing trff bbsfd on pbrsf dontfxt.
         * Crfbtfs b nfw prffix pbrsing trff bbsfd on pbrsf dontfxt.
         * Crfbtfs b nfw prffix pbrsing trff bbsfd on pbrsf dontfxt.
         * Crfbtfs b nfw prffix pbrsing trff bbsfd on pbrsf dontfxt.
         * Crfbtfs b nfw prffix pbrsing trff bbsfd on pbrsf dontfxt.
         *
         *
         *
         *
         *
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         */
         */
         */
         */
         */
        publid stbtid PrffixTrff nfwTrff(DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid PrffixTrff nfwTrff(DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid PrffixTrff nfwTrff(DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid PrffixTrff nfwTrff(DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid PrffixTrff nfwTrff(DbtfTimfPbrsfContfxt dontfxt) {
            //if (!dontfxt.isStridt()) {
            //if (!dontfxt.isStridt()) {
            //if (!dontfxt.isStridt()) {
            //if (!dontfxt.isStridt()) {
            //if (!dontfxt.isStridt()) {
            //    rfturn nfw LENIENT("", null, null);
            //    rfturn nfw LENIENT("", null, null);
            //    rfturn nfw LENIENT("", null, null);
            //    rfturn nfw LENIENT("", null, null);
            //    rfturn nfw LENIENT("", null, null);
            //}
            //}
            //}
            //}
            //}
            if (dontfxt.isCbsfSfnsitivf()) {
            if (dontfxt.isCbsfSfnsitivf()) {
            if (dontfxt.isCbsfSfnsitivf()) {
            if (dontfxt.isCbsfSfnsitivf()) {
            if (dontfxt.isCbsfSfnsitivf()) {
                rfturn nfw PrffixTrff("", null, null);
                rfturn nfw PrffixTrff("", null, null);
                rfturn nfw PrffixTrff("", null, null);
                rfturn nfw PrffixTrff("", null, null);
                rfturn nfw PrffixTrff("", null, null);
            }
            }
            }
            }
            }
            rfturn nfw CI("", null, null);
            rfturn nfw CI("", null, null);
            rfturn nfw CI("", null, null);
            rfturn nfw CI("", null, null);
            rfturn nfw CI("", null, null);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Crfbtfs b nfw prffix pbrsing trff.
         * Crfbtfs b nfw prffix pbrsing trff.
         * Crfbtfs b nfw prffix pbrsing trff.
         * Crfbtfs b nfw prffix pbrsing trff.
         * Crfbtfs b nfw prffix pbrsing trff.
         *
         *
         *
         *
         *
         * @pbrbm kfys  b sft of strings to build tif prffix pbrsing trff, not null
         * @pbrbm kfys  b sft of strings to build tif prffix pbrsing trff, not null
         * @pbrbm kfys  b sft of strings to build tif prffix pbrsing trff, not null
         * @pbrbm kfys  b sft of strings to build tif prffix pbrsing trff, not null
         * @pbrbm kfys  b sft of strings to build tif prffix pbrsing trff, not null
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @pbrbm dontfxt  tif pbrsf dontfxt
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         * @rfturn tif trff, not null
         */
         */
         */
         */
         */
        publid stbtid  PrffixTrff nfwTrff(Sft<String> kfys, DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid  PrffixTrff nfwTrff(Sft<String> kfys, DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid  PrffixTrff nfwTrff(Sft<String> kfys, DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid  PrffixTrff nfwTrff(Sft<String> kfys, DbtfTimfPbrsfContfxt dontfxt) {
        publid stbtid  PrffixTrff nfwTrff(Sft<String> kfys, DbtfTimfPbrsfContfxt dontfxt) {
            PrffixTrff trff = nfwTrff(dontfxt);
            PrffixTrff trff = nfwTrff(dontfxt);
            PrffixTrff trff = nfwTrff(dontfxt);
            PrffixTrff trff = nfwTrff(dontfxt);
            PrffixTrff trff = nfwTrff(dontfxt);
            for (String k : kfys) {
            for (String k : kfys) {
            for (String k : kfys) {
            for (String k : kfys) {
            for (String k : kfys) {
                trff.bdd0(k, k);
                trff.bdd0(k, k);
                trff.bdd0(k, k);
                trff.bdd0(k, k);
                trff.bdd0(k, k);
            }
            }
            }
            }
            }
            rfturn trff;
            rfturn trff;
            rfturn trff;
            rfturn trff;
            rfturn trff;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Clonf b dopy of tiis trff
         * Clonf b dopy of tiis trff
         * Clonf b dopy of tiis trff
         * Clonf b dopy of tiis trff
         * Clonf b dopy of tiis trff
         */
         */
         */
         */
         */
        publid PrffixTrff dopyTrff() {
        publid PrffixTrff dopyTrff() {
        publid PrffixTrff dopyTrff() {
        publid PrffixTrff dopyTrff() {
        publid PrffixTrff dopyTrff() {
            PrffixTrff dopy = nfw PrffixTrff(kfy, vbluf, null);
            PrffixTrff dopy = nfw PrffixTrff(kfy, vbluf, null);
            PrffixTrff dopy = nfw PrffixTrff(kfy, vbluf, null);
            PrffixTrff dopy = nfw PrffixTrff(kfy, vbluf, null);
            PrffixTrff dopy = nfw PrffixTrff(kfy, vbluf, null);
            if (diild != null) {
            if (diild != null) {
            if (diild != null) {
            if (diild != null) {
            if (diild != null) {
                dopy.diild = diild.dopyTrff();
                dopy.diild = diild.dopyTrff();
                dopy.diild = diild.dopyTrff();
                dopy.diild = diild.dopyTrff();
                dopy.diild = diild.dopyTrff();
            }
            }
            }
            }
            }
            if (sibling != null) {
            if (sibling != null) {
            if (sibling != null) {
            if (sibling != null) {
            if (sibling != null) {
                dopy.sibling = sibling.dopyTrff();
                dopy.sibling = sibling.dopyTrff();
                dopy.sibling = sibling.dopyTrff();
                dopy.sibling = sibling.dopyTrff();
                dopy.sibling = sibling.dopyTrff();
            }
            }
            }
            }
            }
            rfturn dopy;
            rfturn dopy;
            rfturn dopy;
            rfturn dopy;
            rfturn dopy;
        }
        }
        }
        }
        }










        /**
        /**
        /**
        /**
        /**
         * Adds b pbir of {kfy, vbluf} into tif prffix trff.
         * Adds b pbir of {kfy, vbluf} into tif prffix trff.
         * Adds b pbir of {kfy, vbluf} into tif prffix trff.
         * Adds b pbir of {kfy, vbluf} into tif prffix trff.
         * Adds b pbir of {kfy, vbluf} into tif prffix trff.
         *
         *
         *
         *
         *
         * @pbrbm k  tif kfy, not null
         * @pbrbm k  tif kfy, not null
         * @pbrbm k  tif kfy, not null
         * @pbrbm k  tif kfy, not null
         * @pbrbm k  tif kfy, not null
         * @pbrbm v  tif vbluf, not null
         * @pbrbm v  tif vbluf, not null
         * @pbrbm v  tif vbluf, not null
         * @pbrbm v  tif vbluf, not null
         * @pbrbm v  tif vbluf, not null
         * @rfturn  truf if tif pbir is bddfd suddfssfully
         * @rfturn  truf if tif pbir is bddfd suddfssfully
         * @rfturn  truf if tif pbir is bddfd suddfssfully
         * @rfturn  truf if tif pbir is bddfd suddfssfully
         * @rfturn  truf if tif pbir is bddfd suddfssfully
         */
         */
         */
         */
         */
        publid boolfbn bdd(String k, String v) {
        publid boolfbn bdd(String k, String v) {
        publid boolfbn bdd(String k, String v) {
        publid boolfbn bdd(String k, String v) {
        publid boolfbn bdd(String k, String v) {
            rfturn bdd0(k, v);
            rfturn bdd0(k, v);
            rfturn bdd0(k, v);
            rfturn bdd0(k, v);
            rfturn bdd0(k, v);
        }
        }
        }
        }
        }





        privbtf boolfbn bdd0(String k, String v) {
        privbtf boolfbn bdd0(String k, String v) {
        privbtf boolfbn bdd0(String k, String v) {
        privbtf boolfbn bdd0(String k, String v) {
        privbtf boolfbn bdd0(String k, String v) {
            k = toKfy(k);
            k = toKfy(k);
            k = toKfy(k);
            k = toKfy(k);
            k = toKfy(k);
            int prffixLfn = prffixLfngti(k);
            int prffixLfn = prffixLfngti(k);
            int prffixLfn = prffixLfngti(k);
            int prffixLfn = prffixLfngti(k);
            int prffixLfn = prffixLfngti(k);
            if (prffixLfn == kfy.lfngti()) {
            if (prffixLfn == kfy.lfngti()) {
            if (prffixLfn == kfy.lfngti()) {
            if (prffixLfn == kfy.lfngti()) {
            if (prffixLfn == kfy.lfngti()) {
                if (prffixLfn < k.lfngti()) {  // down tif trff
                if (prffixLfn < k.lfngti()) {  // down tif trff
                if (prffixLfn < k.lfngti()) {  // down tif trff
                if (prffixLfn < k.lfngti()) {  // down tif trff
                if (prffixLfn < k.lfngti()) {  // down tif trff
                    String subKfy = k.substring(prffixLfn);
                    String subKfy = k.substring(prffixLfn);
                    String subKfy = k.substring(prffixLfn);
                    String subKfy = k.substring(prffixLfn);
                    String subKfy = k.substring(prffixLfn);
                    PrffixTrff d = diild;
                    PrffixTrff d = diild;
                    PrffixTrff d = diild;
                    PrffixTrff d = diild;
                    PrffixTrff d = diild;
                    wiilf (d != null) {
                    wiilf (d != null) {
                    wiilf (d != null) {
                    wiilf (d != null) {
                    wiilf (d != null) {
                        if (isEqubl(d.d0, subKfy.dibrAt(0))) {
                        if (isEqubl(d.d0, subKfy.dibrAt(0))) {
                        if (isEqubl(d.d0, subKfy.dibrAt(0))) {
                        if (isEqubl(d.d0, subKfy.dibrAt(0))) {
                        if (isEqubl(d.d0, subKfy.dibrAt(0))) {
                            rfturn d.bdd0(subKfy, v);
                            rfturn d.bdd0(subKfy, v);
                            rfturn d.bdd0(subKfy, v);
                            rfturn d.bdd0(subKfy, v);
                            rfturn d.bdd0(subKfy, v);
                        }
                        }
                        }
                        }
                        }
                        d = d.sibling;
                        d = d.sibling;
                        d = d.sibling;
                        d = d.sibling;
                        d = d.sibling;
                    }
                    }
                    }
                    }
                    }
                    // bdd tif nodf bs tif diild of tif durrfnt nodf
                    // bdd tif nodf bs tif diild of tif durrfnt nodf
                    // bdd tif nodf bs tif diild of tif durrfnt nodf
                    // bdd tif nodf bs tif diild of tif durrfnt nodf
                    // bdd tif nodf bs tif diild of tif durrfnt nodf
                    d = nfwNodf(subKfy, v, null);
                    d = nfwNodf(subKfy, v, null);
                    d = nfwNodf(subKfy, v, null);
                    d = nfwNodf(subKfy, v, null);
                    d = nfwNodf(subKfy, v, null);
                    d.sibling = diild;
                    d.sibling = diild;
                    d.sibling = diild;
                    d.sibling = diild;
                    d.sibling = diild;
                    diild = d;
                    diild = d;
                    diild = d;
                    diild = d;
                    diild = d;
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                    rfturn truf;
                }
                }
                }
                }
                }
                // ibvf bn fxisting <kfy, vbluf> blrfbdy, ovfrwritf it
                // ibvf bn fxisting <kfy, vbluf> blrfbdy, ovfrwritf it
                // ibvf bn fxisting <kfy, vbluf> blrfbdy, ovfrwritf it
                // ibvf bn fxisting <kfy, vbluf> blrfbdy, ovfrwritf it
                // ibvf bn fxisting <kfy, vbluf> blrfbdy, ovfrwritf it
                // if (vbluf != null) {
                // if (vbluf != null) {
                // if (vbluf != null) {
                // if (vbluf != null) {
                // if (vbluf != null) {
                //    rfturn fblsf;
                //    rfturn fblsf;
                //    rfturn fblsf;
                //    rfturn fblsf;
                //    rfturn fblsf;
                //}
                //}
                //}
                //}
                //}
                vbluf = v;
                vbluf = v;
                vbluf = v;
                vbluf = v;
                vbluf = v;
                rfturn truf;
                rfturn truf;
                rfturn truf;
                rfturn truf;
                rfturn truf;
            }
            }
            }
            }
            }
            // split tif fxisting nodf
            // split tif fxisting nodf
            // split tif fxisting nodf
            // split tif fxisting nodf
            // split tif fxisting nodf
            PrffixTrff n1 = nfwNodf(kfy.substring(prffixLfn), vbluf, diild);
            PrffixTrff n1 = nfwNodf(kfy.substring(prffixLfn), vbluf, diild);
            PrffixTrff n1 = nfwNodf(kfy.substring(prffixLfn), vbluf, diild);
            PrffixTrff n1 = nfwNodf(kfy.substring(prffixLfn), vbluf, diild);
            PrffixTrff n1 = nfwNodf(kfy.substring(prffixLfn), vbluf, diild);
            kfy = k.substring(0, prffixLfn);
            kfy = k.substring(0, prffixLfn);
            kfy = k.substring(0, prffixLfn);
            kfy = k.substring(0, prffixLfn);
            kfy = k.substring(0, prffixLfn);
            diild = n1;
            diild = n1;
            diild = n1;
            diild = n1;
            diild = n1;
            if (prffixLfn < k.lfngti()) {
            if (prffixLfn < k.lfngti()) {
            if (prffixLfn < k.lfngti()) {
            if (prffixLfn < k.lfngti()) {
            if (prffixLfn < k.lfngti()) {
                PrffixTrff n2 = nfwNodf(k.substring(prffixLfn), v, null);
                PrffixTrff n2 = nfwNodf(k.substring(prffixLfn), v, null);
                PrffixTrff n2 = nfwNodf(k.substring(prffixLfn), v, null);
                PrffixTrff n2 = nfwNodf(k.substring(prffixLfn), v, null);
                PrffixTrff n2 = nfwNodf(k.substring(prffixLfn), v, null);
                diild.sibling = n2;
                diild.sibling = n2;
                diild.sibling = n2;
                diild.sibling = n2;
                diild.sibling = n2;
                vbluf = null;
                vbluf = null;
                vbluf = null;
                vbluf = null;
                vbluf = null;
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                vbluf = v;
                vbluf = v;
                vbluf = v;
                vbluf = v;
                vbluf = v;
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         *
         *
         *
         *
         *
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm off  tif offsft position to stbrt pbrsing bt
         * @pbrbm off  tif offsft position to stbrt pbrsing bt
         * @pbrbm off  tif offsft position to stbrt pbrsing bt
         * @pbrbm off  tif offsft position to stbrt pbrsing bt
         * @pbrbm off  tif offsft position to stbrt pbrsing bt
         * @pbrbm fnd  tif fnd position to stop pbrsing
         * @pbrbm fnd  tif fnd position to stop pbrsing
         * @pbrbm fnd  tif fnd position to stop pbrsing
         * @pbrbm fnd  tif fnd position to stop pbrsing
         * @pbrbm fnd  tif fnd position to stop pbrsing
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         */
         */
         */
         */
         */
        publid String mbtdi(CibrSfqufndf tfxt, int off, int fnd) {
        publid String mbtdi(CibrSfqufndf tfxt, int off, int fnd) {
        publid String mbtdi(CibrSfqufndf tfxt, int off, int fnd) {
        publid String mbtdi(CibrSfqufndf tfxt, int off, int fnd) {
        publid String mbtdi(CibrSfqufndf tfxt, int off, int fnd) {
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            if (diild != null && (off += kfy.lfngti()) != fnd) {
            if (diild != null && (off += kfy.lfngti()) != fnd) {
            if (diild != null && (off += kfy.lfngti()) != fnd) {
            if (diild != null && (off += kfy.lfngti()) != fnd) {
            if (diild != null && (off += kfy.lfngti()) != fnd) {
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                do {
                do {
                do {
                do {
                do {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                        String found = d.mbtdi(tfxt, off, fnd);
                        String found = d.mbtdi(tfxt, off, fnd);
                        String found = d.mbtdi(tfxt, off, fnd);
                        String found = d.mbtdi(tfxt, off, fnd);
                        String found = d.mbtdi(tfxt, off, fnd);
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                            rfturn found;
                            rfturn found;
                            rfturn found;
                            rfturn found;
                            rfturn found;
                        }
                        }
                        }
                        }
                        }
                        rfturn vbluf;
                        rfturn vbluf;
                        rfturn vbluf;
                        rfturn vbluf;
                        rfturn vbluf;
                    }
                    }
                    }
                    }
                    }
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
            }
            }
            }
            }
            }
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         * Mbtdi tfxt witi tif prffix trff.
         *
         *
         *
         *
         *
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm tfxt  tif input tfxt to pbrsf, not null
         * @pbrbm pos  tif position to stbrt pbrsing bt, from 0 to tif tfxt
         * @pbrbm pos  tif position to stbrt pbrsing bt, from 0 to tif tfxt
         * @pbrbm pos  tif position to stbrt pbrsing bt, from 0 to tif tfxt
         * @pbrbm pos  tif position to stbrt pbrsing bt, from 0 to tif tfxt
         * @pbrbm pos  tif position to stbrt pbrsing bt, from 0 to tif tfxt
         *  lfngti. Upon rfturn, position will bf updbtfd to tif nfw pbrsf
         *  lfngti. Upon rfturn, position will bf updbtfd to tif nfw pbrsf
         *  lfngti. Upon rfturn, position will bf updbtfd to tif nfw pbrsf
         *  lfngti. Upon rfturn, position will bf updbtfd to tif nfw pbrsf
         *  lfngti. Upon rfturn, position will bf updbtfd to tif nfw pbrsf
         *  position, or undibngfd, if no mbtdi found.
         *  position, or undibngfd, if no mbtdi found.
         *  position, or undibngfd, if no mbtdi found.
         *  position, or undibngfd, if no mbtdi found.
         *  position, or undibngfd, if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         * @rfturn tif rfsulting string, or null if no mbtdi found.
         */
         */
         */
         */
         */
        publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
        publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
        publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
        publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
        publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
            int off = pos.gftIndfx();
            int off = pos.gftIndfx();
            int off = pos.gftIndfx();
            int off = pos.gftIndfx();
            int off = pos.gftIndfx();
            int fnd = tfxt.lfngti();
            int fnd = tfxt.lfngti();
            int fnd = tfxt.lfngti();
            int fnd = tfxt.lfngti();
            int fnd = tfxt.lfngti();
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
            if (!prffixOf(tfxt, off, fnd)){
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
                rfturn null;
            }
            }
            }
            }
            }
            off += kfy.lfngti();
            off += kfy.lfngti();
            off += kfy.lfngti();
            off += kfy.lfngti();
            off += kfy.lfngti();
            if (diild != null && off != fnd) {
            if (diild != null && off != fnd) {
            if (diild != null && off != fnd) {
            if (diild != null && off != fnd) {
            if (diild != null && off != fnd) {
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                PrffixTrff d = diild;
                do {
                do {
                do {
                do {
                do {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                    if (isEqubl(d.d0, tfxt.dibrAt(off))) {
                        pos.sftIndfx(off);
                        pos.sftIndfx(off);
                        pos.sftIndfx(off);
                        pos.sftIndfx(off);
                        pos.sftIndfx(off);
                        String found = d.mbtdi(tfxt, pos);
                        String found = d.mbtdi(tfxt, pos);
                        String found = d.mbtdi(tfxt, pos);
                        String found = d.mbtdi(tfxt, pos);
                        String found = d.mbtdi(tfxt, pos);
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                        if (found != null) {
                            rfturn found;
                            rfturn found;
                            rfturn found;
                            rfturn found;
                            rfturn found;
                        }
                        }
                        }
                        }
                        }
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    }
                    }
                    }
                    }
                    }
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                    d = d.sibling;
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
                } wiilf (d != null);
            }
            }
            }
            }
            }
            pos.sftIndfx(off);
            pos.sftIndfx(off);
            pos.sftIndfx(off);
            pos.sftIndfx(off);
            pos.sftIndfx(off);
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
            rfturn vbluf;
        }
        }
        }
        }
        }





        protfdtfd String toKfy(String k) {
        protfdtfd String toKfy(String k) {
        protfdtfd String toKfy(String k) {
        protfdtfd String toKfy(String k) {
        protfdtfd String toKfy(String k) {
            rfturn k;
            rfturn k;
            rfturn k;
            rfturn k;
            rfturn k;
        }
        }
        }
        }
        }





        protfdtfd PrffixTrff nfwNodf(String k, String v, PrffixTrff diild) {
        protfdtfd PrffixTrff nfwNodf(String k, String v, PrffixTrff diild) {
        protfdtfd PrffixTrff nfwNodf(String k, String v, PrffixTrff diild) {
        protfdtfd PrffixTrff nfwNodf(String k, String v, PrffixTrff diild) {
        protfdtfd PrffixTrff nfwNodf(String k, String v, PrffixTrff diild) {
            rfturn nfw PrffixTrff(k, v, diild);
            rfturn nfw PrffixTrff(k, v, diild);
            rfturn nfw PrffixTrff(k, v, diild);
            rfturn nfw PrffixTrff(k, v, diild);
            rfturn nfw PrffixTrff(k, v, diild);
        }
        }
        }
        }
        }





        protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
        protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
        protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
        protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
        protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
            rfturn d1 == d2;
            rfturn d1 == d2;
            rfturn d1 == d2;
            rfturn d1 == d2;
            rfturn d1 == d2;
        }
        }
        }
        }
        }





        protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
        protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
        protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
        protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
        protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
            if (tfxt instbndfof String) {
            if (tfxt instbndfof String) {
            if (tfxt instbndfof String) {
            if (tfxt instbndfof String) {
            if (tfxt instbndfof String) {
                rfturn ((String)tfxt).stbrtsWiti(kfy, off);
                rfturn ((String)tfxt).stbrtsWiti(kfy, off);
                rfturn ((String)tfxt).stbrtsWiti(kfy, off);
                rfturn ((String)tfxt).stbrtsWiti(kfy, off);
                rfturn ((String)tfxt).stbrtsWiti(kfy, off);
            }
            }
            }
            }
            }
            int lfn = kfy.lfngti();
            int lfn = kfy.lfngti();
            int lfn = kfy.lfngti();
            int lfn = kfy.lfngti();
            int lfn = kfy.lfngti();
            if (lfn > fnd - off) {
            if (lfn > fnd - off) {
            if (lfn > fnd - off) {
            if (lfn > fnd - off) {
            if (lfn > fnd - off) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            int off0 = 0;
            int off0 = 0;
            int off0 = 0;
            int off0 = 0;
            int off0 = 0;
            wiilf (lfn-- > 0) {
            wiilf (lfn-- > 0) {
            wiilf (lfn-- > 0) {
            wiilf (lfn-- > 0) {
            wiilf (lfn-- > 0) {
                if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        privbtf int prffixLfngti(String k) {
        privbtf int prffixLfngti(String k) {
        privbtf int prffixLfngti(String k) {
        privbtf int prffixLfngti(String k) {
        privbtf int prffixLfngti(String k) {
            int off = 0;
            int off = 0;
            int off = 0;
            int off = 0;
            int off = 0;
            wiilf (off < k.lfngti() && off < kfy.lfngti()) {
            wiilf (off < k.lfngti() && off < kfy.lfngti()) {
            wiilf (off < k.lfngti() && off < kfy.lfngti()) {
            wiilf (off < k.lfngti() && off < kfy.lfngti()) {
            wiilf (off < k.lfngti() && off < kfy.lfngti()) {
                if (!isEqubl(k.dibrAt(off), kfy.dibrAt(off))) {
                if (!isEqubl(k.dibrAt(off), kfy.dibrAt(off))) {
                if (!isEqubl(k.dibrAt(off), kfy.dibrAt(off))) {
                if (!isEqubl(k.dibrAt(off), kfy.dibrAt(off))) {
                if (!isEqubl(k.dibrAt(off), kfy.dibrAt(off))) {
                    rfturn off;
                    rfturn off;
                    rfturn off;
                    rfturn off;
                    rfturn off;
                }
                }
                }
                }
                }
                off++;
                off++;
                off++;
                off++;
                off++;
            }
            }
            }
            }
            }
            rfturn off;
            rfturn off;
            rfturn off;
            rfturn off;
            rfturn off;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Cbsf Insfnsitivf prffix trff.
         * Cbsf Insfnsitivf prffix trff.
         * Cbsf Insfnsitivf prffix trff.
         * Cbsf Insfnsitivf prffix trff.
         * Cbsf Insfnsitivf prffix trff.
         */
         */
         */
         */
         */
        privbtf stbtid dlbss CI fxtfnds PrffixTrff {
        privbtf stbtid dlbss CI fxtfnds PrffixTrff {
        privbtf stbtid dlbss CI fxtfnds PrffixTrff {
        privbtf stbtid dlbss CI fxtfnds PrffixTrff {
        privbtf stbtid dlbss CI fxtfnds PrffixTrff {





            privbtf CI(String k, String v, PrffixTrff diild) {
            privbtf CI(String k, String v, PrffixTrff diild) {
            privbtf CI(String k, String v, PrffixTrff diild) {
            privbtf CI(String k, String v, PrffixTrff diild) {
            privbtf CI(String k, String v, PrffixTrff diild) {
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
            }
            }
            }
            }
            }





            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
                rfturn nfw CI(k, v, diild);
                rfturn nfw CI(k, v, diild);
                rfturn nfw CI(k, v, diild);
                rfturn nfw CI(k, v, diild);
                rfturn nfw CI(k, v, diild);
            }
            }
            }
            }
            }





            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
            protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
            protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
            protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
            protfdtfd boolfbn isEqubl(dibr d1, dibr d2) {
                rfturn DbtfTimfPbrsfContfxt.dibrEqublsIgnorfCbsf(d1, d2);
                rfturn DbtfTimfPbrsfContfxt.dibrEqublsIgnorfCbsf(d1, d2);
                rfturn DbtfTimfPbrsfContfxt.dibrEqublsIgnorfCbsf(d1, d2);
                rfturn DbtfTimfPbrsfContfxt.dibrEqublsIgnorfCbsf(d1, d2);
                rfturn DbtfTimfPbrsfContfxt.dibrEqublsIgnorfCbsf(d1, d2);
            }
            }
            }
            }
            }





            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
            protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
            protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
            protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
            protfdtfd boolfbn prffixOf(CibrSfqufndf tfxt, int off, int fnd) {
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                if (lfn > fnd - off) {
                if (lfn > fnd - off) {
                if (lfn > fnd - off) {
                if (lfn > fnd - off) {
                if (lfn > fnd - off) {
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                    rfturn fblsf;
                }
                }
                }
                }
                }
                int off0 = 0;
                int off0 = 0;
                int off0 = 0;
                int off0 = 0;
                int off0 = 0;
                wiilf (lfn-- > 0) {
                wiilf (lfn-- > 0) {
                wiilf (lfn-- > 0) {
                wiilf (lfn-- > 0) {
                wiilf (lfn-- > 0) {
                    if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(off0++), tfxt.dibrAt(off++))) {
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                        rfturn fblsf;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn truf;
                rfturn truf;
                rfturn truf;
                rfturn truf;
                rfturn truf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Lfnifnt prffix trff. Cbsf insfnsitivf bnd ignorfs dibrbdtfrs
         * Lfnifnt prffix trff. Cbsf insfnsitivf bnd ignorfs dibrbdtfrs
         * Lfnifnt prffix trff. Cbsf insfnsitivf bnd ignorfs dibrbdtfrs
         * Lfnifnt prffix trff. Cbsf insfnsitivf bnd ignorfs dibrbdtfrs
         * Lfnifnt prffix trff. Cbsf insfnsitivf bnd ignorfs dibrbdtfrs
         * likf spbdf, undfrsdorf bnd slbsi.
         * likf spbdf, undfrsdorf bnd slbsi.
         * likf spbdf, undfrsdorf bnd slbsi.
         * likf spbdf, undfrsdorf bnd slbsi.
         * likf spbdf, undfrsdorf bnd slbsi.
         */
         */
         */
         */
         */
        privbtf stbtid dlbss LENIENT fxtfnds CI {
        privbtf stbtid dlbss LENIENT fxtfnds CI {
        privbtf stbtid dlbss LENIENT fxtfnds CI {
        privbtf stbtid dlbss LENIENT fxtfnds CI {
        privbtf stbtid dlbss LENIENT fxtfnds CI {





            privbtf LENIENT(String k, String v, PrffixTrff diild) {
            privbtf LENIENT(String k, String v, PrffixTrff diild) {
            privbtf LENIENT(String k, String v, PrffixTrff diild) {
            privbtf LENIENT(String k, String v, PrffixTrff diild) {
            privbtf LENIENT(String k, String v, PrffixTrff diild) {
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
                supfr(k, v, diild);
            }
            }
            }
            }
            }





            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
            protfdtfd CI nfwNodf(String k, String v, PrffixTrff diild) {
                rfturn nfw LENIENT(k, v, diild);
                rfturn nfw LENIENT(k, v, diild);
                rfturn nfw LENIENT(k, v, diild);
                rfturn nfw LENIENT(k, v, diild);
                rfturn nfw LENIENT(k, v, diild);
            }
            }
            }
            }
            }





            privbtf boolfbn isLfnifntCibr(dibr d) {
            privbtf boolfbn isLfnifntCibr(dibr d) {
            privbtf boolfbn isLfnifntCibr(dibr d) {
            privbtf boolfbn isLfnifntCibr(dibr d) {
            privbtf boolfbn isLfnifntCibr(dibr d) {
                rfturn d == ' ' || d == '_' || d == '/';
                rfturn d == ' ' || d == '_' || d == '/';
                rfturn d == ' ' || d == '_' || d == '/';
                rfturn d == ' ' || d == '_' || d == '/';
                rfturn d == ' ' || d == '_' || d == '/';
            }
            }
            }
            }
            }





            protfdtfd String toKfy(String k) {
            protfdtfd String toKfy(String k) {
            protfdtfd String toKfy(String k) {
            protfdtfd String toKfy(String k) {
            protfdtfd String toKfy(String k) {
                for (int i = 0; i < k.lfngti(); i++) {
                for (int i = 0; i < k.lfngti(); i++) {
                for (int i = 0; i < k.lfngti(); i++) {
                for (int i = 0; i < k.lfngti(); i++) {
                for (int i = 0; i < k.lfngti(); i++) {
                    if (isLfnifntCibr(k.dibrAt(i))) {
                    if (isLfnifntCibr(k.dibrAt(i))) {
                    if (isLfnifntCibr(k.dibrAt(i))) {
                    if (isLfnifntCibr(k.dibrAt(i))) {
                    if (isLfnifntCibr(k.dibrAt(i))) {
                        StringBuildfr sb = nfw StringBuildfr(k.lfngti());
                        StringBuildfr sb = nfw StringBuildfr(k.lfngti());
                        StringBuildfr sb = nfw StringBuildfr(k.lfngti());
                        StringBuildfr sb = nfw StringBuildfr(k.lfngti());
                        StringBuildfr sb = nfw StringBuildfr(k.lfngti());
                        sb.bppfnd(k, 0, i);
                        sb.bppfnd(k, 0, i);
                        sb.bppfnd(k, 0, i);
                        sb.bppfnd(k, 0, i);
                        sb.bppfnd(k, 0, i);
                        i++;
                        i++;
                        i++;
                        i++;
                        i++;
                        wiilf (i < k.lfngti()) {
                        wiilf (i < k.lfngti()) {
                        wiilf (i < k.lfngti()) {
                        wiilf (i < k.lfngti()) {
                        wiilf (i < k.lfngti()) {
                            if (!isLfnifntCibr(k.dibrAt(i))) {
                            if (!isLfnifntCibr(k.dibrAt(i))) {
                            if (!isLfnifntCibr(k.dibrAt(i))) {
                            if (!isLfnifntCibr(k.dibrAt(i))) {
                            if (!isLfnifntCibr(k.dibrAt(i))) {
                                sb.bppfnd(k.dibrAt(i));
                                sb.bppfnd(k.dibrAt(i));
                                sb.bppfnd(k.dibrAt(i));
                                sb.bppfnd(k.dibrAt(i));
                                sb.bppfnd(k.dibrAt(i));
                            }
                            }
                            }
                            }
                            }
                            i++;
                            i++;
                            i++;
                            i++;
                            i++;
                        }
                        }
                        }
                        }
                        }
                        rfturn sb.toString();
                        rfturn sb.toString();
                        rfturn sb.toString();
                        rfturn sb.toString();
                        rfturn sb.toString();
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                rfturn k;
                rfturn k;
                rfturn k;
                rfturn k;
                rfturn k;
            }
            }
            }
            }
            }





            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            @Ovfrridf
            publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
            publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
            publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
            publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
            publid String mbtdi(CibrSfqufndf tfxt, PbrsfPosition pos) {
                int off = pos.gftIndfx();
                int off = pos.gftIndfx();
                int off = pos.gftIndfx();
                int off = pos.gftIndfx();
                int off = pos.gftIndfx();
                int fnd = tfxt.lfngti();
                int fnd = tfxt.lfngti();
                int fnd = tfxt.lfngti();
                int fnd = tfxt.lfngti();
                int fnd = tfxt.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int lfn = kfy.lfngti();
                int koff = 0;
                int koff = 0;
                int koff = 0;
                int koff = 0;
                int koff = 0;
                wiilf (koff < lfn && off < fnd) {
                wiilf (koff < lfn && off < fnd) {
                wiilf (koff < lfn && off < fnd) {
                wiilf (koff < lfn && off < fnd) {
                wiilf (koff < lfn && off < fnd) {
                    if (isLfnifntCibr(tfxt.dibrAt(off))) {
                    if (isLfnifntCibr(tfxt.dibrAt(off))) {
                    if (isLfnifntCibr(tfxt.dibrAt(off))) {
                    if (isLfnifntCibr(tfxt.dibrAt(off))) {
                    if (isLfnifntCibr(tfxt.dibrAt(off))) {
                        off++;
                        off++;
                        off++;
                        off++;
                        off++;
                        dontinuf;
                        dontinuf;
                        dontinuf;
                        dontinuf;
                        dontinuf;
                    }
                    }
                    }
                    }
                    }
                    if (!isEqubl(kfy.dibrAt(koff++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(koff++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(koff++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(koff++), tfxt.dibrAt(off++))) {
                    if (!isEqubl(kfy.dibrAt(koff++), tfxt.dibrAt(off++))) {
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                        rfturn null;
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                if (koff != lfn) {
                if (koff != lfn) {
                if (koff != lfn) {
                if (koff != lfn) {
                if (koff != lfn) {
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                    rfturn null;
                }
                }
                }
                }
                }
                if (diild != null && off != fnd) {
                if (diild != null && off != fnd) {
                if (diild != null && off != fnd) {
                if (diild != null && off != fnd) {
                if (diild != null && off != fnd) {
                    int off0 = off;
                    int off0 = off;
                    int off0 = off;
                    int off0 = off;
                    int off0 = off;
                    wiilf (off0 < fnd && isLfnifntCibr(tfxt.dibrAt(off0))) {
                    wiilf (off0 < fnd && isLfnifntCibr(tfxt.dibrAt(off0))) {
                    wiilf (off0 < fnd && isLfnifntCibr(tfxt.dibrAt(off0))) {
                    wiilf (off0 < fnd && isLfnifntCibr(tfxt.dibrAt(off0))) {
                    wiilf (off0 < fnd && isLfnifntCibr(tfxt.dibrAt(off0))) {
                        off0++;
                        off0++;
                        off0++;
                        off0++;
                        off0++;
                    }
                    }
                    }
                    }
                    }
                    if (off0 < fnd) {
                    if (off0 < fnd) {
                    if (off0 < fnd) {
                    if (off0 < fnd) {
                    if (off0 < fnd) {
                        PrffixTrff d = diild;
                        PrffixTrff d = diild;
                        PrffixTrff d = diild;
                        PrffixTrff d = diild;
                        PrffixTrff d = diild;
                        do {
                        do {
                        do {
                        do {
                        do {
                            if (isEqubl(d.d0, tfxt.dibrAt(off0))) {
                            if (isEqubl(d.d0, tfxt.dibrAt(off0))) {
                            if (isEqubl(d.d0, tfxt.dibrAt(off0))) {
                            if (isEqubl(d.d0, tfxt.dibrAt(off0))) {
                            if (isEqubl(d.d0, tfxt.dibrAt(off0))) {
                                pos.sftIndfx(off0);
                                pos.sftIndfx(off0);
                                pos.sftIndfx(off0);
                                pos.sftIndfx(off0);
                                pos.sftIndfx(off0);
                                String found = d.mbtdi(tfxt, pos);
                                String found = d.mbtdi(tfxt, pos);
                                String found = d.mbtdi(tfxt, pos);
                                String found = d.mbtdi(tfxt, pos);
                                String found = d.mbtdi(tfxt, pos);
                                if (found != null) {
                                if (found != null) {
                                if (found != null) {
                                if (found != null) {
                                if (found != null) {
                                    rfturn found;
                                    rfturn found;
                                    rfturn found;
                                    rfturn found;
                                    rfturn found;
                                }
                                }
                                }
                                }
                                }
                                brfbk;
                                brfbk;
                                brfbk;
                                brfbk;
                                brfbk;
                            }
                            }
                            }
                            }
                            }
                            d = d.sibling;
                            d = d.sibling;
                            d = d.sibling;
                            d = d.sibling;
                            d = d.sibling;
                        } wiilf (d != null);
                        } wiilf (d != null);
                        } wiilf (d != null);
                        } wiilf (d != null);
                        } wiilf (d != null);
                    }
                    }
                    }
                    }
                    }
                }
                }
                }
                }
                }
                pos.sftIndfx(off);
                pos.sftIndfx(off);
                pos.sftIndfx(off);
                pos.sftIndfx(off);
                pos.sftIndfx(off);
                rfturn vbluf;
                rfturn vbluf;
                rfturn vbluf;
                rfturn vbluf;
                rfturn vbluf;
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b dironology.
     * Prints or pbrsfs b dironology.
     * Prints or pbrsfs b dironology.
     * Prints or pbrsfs b dironology.
     * Prints or pbrsfs b dironology.
     */
     */
     */
     */
     */
    stbtid finbl dlbss CironoPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CironoPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CironoPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CironoPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss CironoPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        /** Tif tfxt stylf to output, null mfbns tif ID. */
        /** Tif tfxt stylf to output, null mfbns tif ID. */
        /** Tif tfxt stylf to output, null mfbns tif ID. */
        /** Tif tfxt stylf to output, null mfbns tif ID. */
        /** Tif tfxt stylf to output, null mfbns tif ID. */
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;
        privbtf finbl TfxtStylf tfxtStylf;





        CironoPrintfrPbrsfr(TfxtStylf tfxtStylf) {
        CironoPrintfrPbrsfr(TfxtStylf tfxtStylf) {
        CironoPrintfrPbrsfr(TfxtStylf tfxtStylf) {
        CironoPrintfrPbrsfr(TfxtStylf tfxtStylf) {
        CironoPrintfrPbrsfr(TfxtStylf tfxtStylf) {
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
            tiis.tfxtStylf = tfxtStylf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Cironology dirono = dontfxt.gftVbluf(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftVbluf(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftVbluf(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftVbluf(TfmporblQufrifs.dironology());
            Cironology dirono = dontfxt.gftVbluf(TfmporblQufrifs.dironology());
            if (dirono == null) {
            if (dirono == null) {
            if (dirono == null) {
            if (dirono == null) {
            if (dirono == null) {
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
                rfturn fblsf;
            }
            }
            }
            }
            }
            if (tfxtStylf == null) {
            if (tfxtStylf == null) {
            if (tfxtStylf == null) {
            if (tfxtStylf == null) {
            if (tfxtStylf == null) {
                buf.bppfnd(dirono.gftId());
                buf.bppfnd(dirono.gftId());
                buf.bppfnd(dirono.gftId());
                buf.bppfnd(dirono.gftId());
                buf.bppfnd(dirono.gftId());
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                buf.bppfnd(gftCironologyNbmf(dirono, dontfxt.gftLodblf()));
                buf.bppfnd(gftCironologyNbmf(dirono, dontfxt.gftLodblf()));
                buf.bppfnd(gftCironologyNbmf(dirono, dontfxt.gftLodblf()));
                buf.bppfnd(gftCironologyNbmf(dirono, dontfxt.gftLodblf()));
                buf.bppfnd(gftCironologyNbmf(dirono, dontfxt.gftLodblf()));
            }
            }
            }
            }
            }
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
            rfturn truf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            // simplf looping pbrsfr to find tif dironology
            // simplf looping pbrsfr to find tif dironology
            // simplf looping pbrsfr to find tif dironology
            // simplf looping pbrsfr to find tif dironology
            // simplf looping pbrsfr to find tif dironology
            if (position < 0 || position > tfxt.lfngti()) {
            if (position < 0 || position > tfxt.lfngti()) {
            if (position < 0 || position > tfxt.lfngti()) {
            if (position < 0 || position > tfxt.lfngti()) {
            if (position < 0 || position > tfxt.lfngti()) {
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
                tirow nfw IndfxOutOfBoundsExdfption();
            }
            }
            }
            }
            }
            Sft<Cironology> dironos = Cironology.gftAvbilbblfCironologifs();
            Sft<Cironology> dironos = Cironology.gftAvbilbblfCironologifs();
            Sft<Cironology> dironos = Cironology.gftAvbilbblfCironologifs();
            Sft<Cironology> dironos = Cironology.gftAvbilbblfCironologifs();
            Sft<Cironology> dironos = Cironology.gftAvbilbblfCironologifs();
            Cironology bfstMbtdi = null;
            Cironology bfstMbtdi = null;
            Cironology bfstMbtdi = null;
            Cironology bfstMbtdi = null;
            Cironology bfstMbtdi = null;
            int mbtdiLfn = -1;
            int mbtdiLfn = -1;
            int mbtdiLfn = -1;
            int mbtdiLfn = -1;
            int mbtdiLfn = -1;
            for (Cironology dirono : dironos) {
            for (Cironology dirono : dironos) {
            for (Cironology dirono : dironos) {
            for (Cironology dirono : dironos) {
            for (Cironology dirono : dironos) {
                String nbmf;
                String nbmf;
                String nbmf;
                String nbmf;
                String nbmf;
                if (tfxtStylf == null) {
                if (tfxtStylf == null) {
                if (tfxtStylf == null) {
                if (tfxtStylf == null) {
                if (tfxtStylf == null) {
                    nbmf = dirono.gftId();
                    nbmf = dirono.gftId();
                    nbmf = dirono.gftId();
                    nbmf = dirono.gftId();
                    nbmf = dirono.gftId();
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    nbmf = gftCironologyNbmf(dirono, dontfxt.gftLodblf());
                    nbmf = gftCironologyNbmf(dirono, dontfxt.gftLodblf());
                    nbmf = gftCironologyNbmf(dirono, dontfxt.gftLodblf());
                    nbmf = gftCironologyNbmf(dirono, dontfxt.gftLodblf());
                    nbmf = gftCironologyNbmf(dirono, dontfxt.gftLodblf());
                }
                }
                }
                }
                }
                int nbmfLfn = nbmf.lfngti();
                int nbmfLfn = nbmf.lfngti();
                int nbmfLfn = nbmf.lfngti();
                int nbmfLfn = nbmf.lfngti();
                int nbmfLfn = nbmf.lfngti();
                if (nbmfLfn > mbtdiLfn && dontfxt.subSfqufndfEqubls(tfxt, position, nbmf, 0, nbmfLfn)) {
                if (nbmfLfn > mbtdiLfn && dontfxt.subSfqufndfEqubls(tfxt, position, nbmf, 0, nbmfLfn)) {
                if (nbmfLfn > mbtdiLfn && dontfxt.subSfqufndfEqubls(tfxt, position, nbmf, 0, nbmfLfn)) {
                if (nbmfLfn > mbtdiLfn && dontfxt.subSfqufndfEqubls(tfxt, position, nbmf, 0, nbmfLfn)) {
                if (nbmfLfn > mbtdiLfn && dontfxt.subSfqufndfEqubls(tfxt, position, nbmf, 0, nbmfLfn)) {
                    bfstMbtdi = dirono;
                    bfstMbtdi = dirono;
                    bfstMbtdi = dirono;
                    bfstMbtdi = dirono;
                    bfstMbtdi = dirono;
                    mbtdiLfn = nbmfLfn;
                    mbtdiLfn = nbmfLfn;
                    mbtdiLfn = nbmfLfn;
                    mbtdiLfn = nbmfLfn;
                    mbtdiLfn = nbmfLfn;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            if (bfstMbtdi == null) {
            if (bfstMbtdi == null) {
            if (bfstMbtdi == null) {
            if (bfstMbtdi == null) {
            if (bfstMbtdi == null) {
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
                rfturn ~position;
            }
            }
            }
            }
            }
            dontfxt.sftPbrsfd(bfstMbtdi);
            dontfxt.sftPbrsfd(bfstMbtdi);
            dontfxt.sftPbrsfd(bfstMbtdi);
            dontfxt.sftPbrsfd(bfstMbtdi);
            dontfxt.sftPbrsfd(bfstMbtdi);
            rfturn position + mbtdiLfn;
            rfturn position + mbtdiLfn;
            rfturn position + mbtdiLfn;
            rfturn position + mbtdiLfn;
            rfturn position + mbtdiLfn;
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Rfturns tif dironology nbmf of tif givfn dirono in tif givfn lodblf
         * Rfturns tif dironology nbmf of tif givfn dirono in tif givfn lodblf
         * Rfturns tif dironology nbmf of tif givfn dirono in tif givfn lodblf
         * Rfturns tif dironology nbmf of tif givfn dirono in tif givfn lodblf
         * Rfturns tif dironology nbmf of tif givfn dirono in tif givfn lodblf
         * if bvbilbblf, or tif dironology Id otifrwisf. Tif rfgulbr RfsourdfBundlf
         * if bvbilbblf, or tif dironology Id otifrwisf. Tif rfgulbr RfsourdfBundlf
         * if bvbilbblf, or tif dironology Id otifrwisf. Tif rfgulbr RfsourdfBundlf
         * if bvbilbblf, or tif dironology Id otifrwisf. Tif rfgulbr RfsourdfBundlf
         * if bvbilbblf, or tif dironology Id otifrwisf. Tif rfgulbr RfsourdfBundlf
         * sfbrdi pbti is usfd for looking up tif dironology nbmf.
         * sfbrdi pbti is usfd for looking up tif dironology nbmf.
         * sfbrdi pbti is usfd for looking up tif dironology nbmf.
         * sfbrdi pbti is usfd for looking up tif dironology nbmf.
         * sfbrdi pbti is usfd for looking up tif dironology nbmf.
         *
         *
         *
         *
         *
         * @pbrbm dirono  tif dironology, not null
         * @pbrbm dirono  tif dironology, not null
         * @pbrbm dirono  tif dironology, not null
         * @pbrbm dirono  tif dironology, not null
         * @pbrbm dirono  tif dironology, not null
         * @pbrbm lodblf  tif lodblf, not null
         * @pbrbm lodblf  tif lodblf, not null
         * @pbrbm lodblf  tif lodblf, not null
         * @pbrbm lodblf  tif lodblf, not null
         * @pbrbm lodblf  tif lodblf, not null
         * @rfturn tif dironology nbmf of dirono in lodblf, or tif id if no nbmf is bvbilbblf
         * @rfturn tif dironology nbmf of dirono in lodblf, or tif id if no nbmf is bvbilbblf
         * @rfturn tif dironology nbmf of dirono in lodblf, or tif id if no nbmf is bvbilbblf
         * @rfturn tif dironology nbmf of dirono in lodblf, or tif id if no nbmf is bvbilbblf
         * @rfturn tif dironology nbmf of dirono in lodblf, or tif id if no nbmf is bvbilbblf
         * @tirows NullPointfrExdfption if dirono or lodblf is null
         * @tirows NullPointfrExdfption if dirono or lodblf is null
         * @tirows NullPointfrExdfption if dirono or lodblf is null
         * @tirows NullPointfrExdfption if dirono or lodblf is null
         * @tirows NullPointfrExdfption if dirono or lodblf is null
         */
         */
         */
         */
         */
        privbtf String gftCironologyNbmf(Cironology dirono, Lodblf lodblf) {
        privbtf String gftCironologyNbmf(Cironology dirono, Lodblf lodblf) {
        privbtf String gftCironologyNbmf(Cironology dirono, Lodblf lodblf) {
        privbtf String gftCironologyNbmf(Cironology dirono, Lodblf lodblf) {
        privbtf String gftCironologyNbmf(Cironology dirono, Lodblf lodblf) {
            String kfy = "dblfndbrnbmf." + dirono.gftCblfndbrTypf();
            String kfy = "dblfndbrnbmf." + dirono.gftCblfndbrTypf();
            String kfy = "dblfndbrnbmf." + dirono.gftCblfndbrTypf();
            String kfy = "dblfndbrnbmf." + dirono.gftCblfndbrTypf();
            String kfy = "dblfndbrnbmf." + dirono.gftCblfndbrTypf();
            String nbmf = DbtfTimfTfxtProvidfr.gftLodblizfdRfsourdf(kfy, lodblf);
            String nbmf = DbtfTimfTfxtProvidfr.gftLodblizfdRfsourdf(kfy, lodblf);
            String nbmf = DbtfTimfTfxtProvidfr.gftLodblizfdRfsourdf(kfy, lodblf);
            String nbmf = DbtfTimfTfxtProvidfr.gftLodblizfdRfsourdf(kfy, lodblf);
            String nbmf = DbtfTimfTfxtProvidfr.gftLodblizfdRfsourdf(kfy, lodblf);
            rfturn nbmf != null ? nbmf : dirono.gftId();
            rfturn nbmf != null ? nbmf : dirono.gftId();
            rfturn nbmf != null ? nbmf : dirono.gftId();
            rfturn nbmf != null ? nbmf : dirono.gftId();
            rfturn nbmf != null ? nbmf : dirono.gftId();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b lodblizfd pbttfrn.
     * Prints or pbrsfs b lodblizfd pbttfrn.
     * Prints or pbrsfs b lodblizfd pbttfrn.
     * Prints or pbrsfs b lodblizfd pbttfrn.
     * Prints or pbrsfs b lodblizfd pbttfrn.
     */
     */
     */
     */
     */
    stbtid finbl dlbss LodblizfdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss LodblizfdPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        /** Cbdif of formbttfrs. */
        /** Cbdif of formbttfrs. */
        /** Cbdif of formbttfrs. */
        /** Cbdif of formbttfrs. */
        /** Cbdif of formbttfrs. */
        privbtf stbtid finbl CondurrfntMbp<String, DbtfTimfFormbttfr> FORMATTER_CACHE = nfw CondurrfntHbsiMbp<>(16, 0.75f, 2);
        privbtf stbtid finbl CondurrfntMbp<String, DbtfTimfFormbttfr> FORMATTER_CACHE = nfw CondurrfntHbsiMbp<>(16, 0.75f, 2);
        privbtf stbtid finbl CondurrfntMbp<String, DbtfTimfFormbttfr> FORMATTER_CACHE = nfw CondurrfntHbsiMbp<>(16, 0.75f, 2);
        privbtf stbtid finbl CondurrfntMbp<String, DbtfTimfFormbttfr> FORMATTER_CACHE = nfw CondurrfntHbsiMbp<>(16, 0.75f, 2);
        privbtf stbtid finbl CondurrfntMbp<String, DbtfTimfFormbttfr> FORMATTER_CACHE = nfw CondurrfntHbsiMbp<>(16, 0.75f, 2);





        privbtf finbl FormbtStylf dbtfStylf;
        privbtf finbl FormbtStylf dbtfStylf;
        privbtf finbl FormbtStylf dbtfStylf;
        privbtf finbl FormbtStylf dbtfStylf;
        privbtf finbl FormbtStylf dbtfStylf;
        privbtf finbl FormbtStylf timfStylf;
        privbtf finbl FormbtStylf timfStylf;
        privbtf finbl FormbtStylf timfStylf;
        privbtf finbl FormbtStylf timfStylf;
        privbtf finbl FormbtStylf timfStylf;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm dbtfStylf  tif dbtf stylf to usf, mby bf null
         * @pbrbm dbtfStylf  tif dbtf stylf to usf, mby bf null
         * @pbrbm dbtfStylf  tif dbtf stylf to usf, mby bf null
         * @pbrbm dbtfStylf  tif dbtf stylf to usf, mby bf null
         * @pbrbm dbtfStylf  tif dbtf stylf to usf, mby bf null
         * @pbrbm timfStylf  tif timf stylf to usf, mby bf null
         * @pbrbm timfStylf  tif timf stylf to usf, mby bf null
         * @pbrbm timfStylf  tif timf stylf to usf, mby bf null
         * @pbrbm timfStylf  tif timf stylf to usf, mby bf null
         * @pbrbm timfStylf  tif timf stylf to usf, mby bf null
         */
         */
         */
         */
         */
        LodblizfdPrintfrPbrsfr(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
        LodblizfdPrintfrPbrsfr(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
        LodblizfdPrintfrPbrsfr(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
        LodblizfdPrintfrPbrsfr(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
        LodblizfdPrintfrPbrsfr(FormbtStylf dbtfStylf, FormbtStylf timfStylf) {
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            // vblidbtfd by dbllfr
            tiis.dbtfStylf = dbtfStylf;
            tiis.dbtfStylf = dbtfStylf;
            tiis.dbtfStylf = dbtfStylf;
            tiis.dbtfStylf = dbtfStylf;
            tiis.dbtfStylf = dbtfStylf;
            tiis.timfStylf = timfStylf;
            tiis.timfStylf = timfStylf;
            tiis.timfStylf = timfStylf;
            tiis.timfStylf = timfStylf;
            tiis.timfStylf = timfStylf;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
            Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
            Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
            Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
            Cironology dirono = Cironology.from(dontfxt.gftTfmporbl());
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).formbt(dontfxt, buf);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).formbt(dontfxt, buf);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).formbt(dontfxt, buf);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).formbt(dontfxt, buf);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).formbt(dontfxt, buf);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            Cironology dirono = dontfxt.gftEfffdtivfCironology();
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).pbrsf(dontfxt, tfxt, position);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).pbrsf(dontfxt, tfxt, position);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).pbrsf(dontfxt, tfxt, position);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).pbrsf(dontfxt, tfxt, position);
            rfturn formbttfr(dontfxt.gftLodblf(), dirono).toPrintfrPbrsfr(fblsf).pbrsf(dontfxt, tfxt, position);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Gfts tif formbttfr to usf.
         * Gfts tif formbttfr to usf.
         * Gfts tif formbttfr to usf.
         * Gfts tif formbttfr to usf.
         * Gfts tif formbttfr to usf.
         * <p>
         * <p>
         * <p>
         * <p>
         * <p>
         * Tif formbttfr will bf tif most bppropribtf to usf for tif dbtf bnd timf stylf in tif lodblf.
         * Tif formbttfr will bf tif most bppropribtf to usf for tif dbtf bnd timf stylf in tif lodblf.
         * Tif formbttfr will bf tif most bppropribtf to usf for tif dbtf bnd timf stylf in tif lodblf.
         * Tif formbttfr will bf tif most bppropribtf to usf for tif dbtf bnd timf stylf in tif lodblf.
         * Tif formbttfr will bf tif most bppropribtf to usf for tif dbtf bnd timf stylf in tif lodblf.
         * For fxbmplf, somf lodblfs will usf tif monti nbmf wiilf otifrs will usf tif numbfr.
         * For fxbmplf, somf lodblfs will usf tif monti nbmf wiilf otifrs will usf tif numbfr.
         * For fxbmplf, somf lodblfs will usf tif monti nbmf wiilf otifrs will usf tif numbfr.
         * For fxbmplf, somf lodblfs will usf tif monti nbmf wiilf otifrs will usf tif numbfr.
         * For fxbmplf, somf lodblfs will usf tif monti nbmf wiilf otifrs will usf tif numbfr.
         *
         *
         *
         *
         *
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm dirono  tif dironology to usf, not null
         * @pbrbm dirono  tif dironology to usf, not null
         * @pbrbm dirono  tif dironology to usf, not null
         * @pbrbm dirono  tif dironology to usf, not null
         * @pbrbm dirono  tif dironology to usf, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         */
         */
         */
         */
         */
        privbtf DbtfTimfFormbttfr formbttfr(Lodblf lodblf, Cironology dirono) {
        privbtf DbtfTimfFormbttfr formbttfr(Lodblf lodblf, Cironology dirono) {
        privbtf DbtfTimfFormbttfr formbttfr(Lodblf lodblf, Cironology dirono) {
        privbtf DbtfTimfFormbttfr formbttfr(Lodblf lodblf, Cironology dirono) {
        privbtf DbtfTimfFormbttfr formbttfr(Lodblf lodblf, Cironology dirono) {
            String kfy = dirono.gftId() + '|' + lodblf.toString() + '|' + dbtfStylf + timfStylf;
            String kfy = dirono.gftId() + '|' + lodblf.toString() + '|' + dbtfStylf + timfStylf;
            String kfy = dirono.gftId() + '|' + lodblf.toString() + '|' + dbtfStylf + timfStylf;
            String kfy = dirono.gftId() + '|' + lodblf.toString() + '|' + dbtfStylf + timfStylf;
            String kfy = dirono.gftId() + '|' + lodblf.toString() + '|' + dbtfStylf + timfStylf;
            DbtfTimfFormbttfr formbttfr = FORMATTER_CACHE.gft(kfy);
            DbtfTimfFormbttfr formbttfr = FORMATTER_CACHE.gft(kfy);
            DbtfTimfFormbttfr formbttfr = FORMATTER_CACHE.gft(kfy);
            DbtfTimfFormbttfr formbttfr = FORMATTER_CACHE.gft(kfy);
            DbtfTimfFormbttfr formbttfr = FORMATTER_CACHE.gft(kfy);
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
            if (formbttfr == null) {
                String pbttfrn = gftLodblizfdDbtfTimfPbttfrn(dbtfStylf, timfStylf, dirono, lodblf);
                String pbttfrn = gftLodblizfdDbtfTimfPbttfrn(dbtfStylf, timfStylf, dirono, lodblf);
                String pbttfrn = gftLodblizfdDbtfTimfPbttfrn(dbtfStylf, timfStylf, dirono, lodblf);
                String pbttfrn = gftLodblizfdDbtfTimfPbttfrn(dbtfStylf, timfStylf, dirono, lodblf);
                String pbttfrn = gftLodblizfdDbtfTimfPbttfrn(dbtfStylf, timfStylf, dirono, lodblf);
                formbttfr = nfw DbtfTimfFormbttfrBuildfr().bppfndPbttfrn(pbttfrn).toFormbttfr(lodblf);
                formbttfr = nfw DbtfTimfFormbttfrBuildfr().bppfndPbttfrn(pbttfrn).toFormbttfr(lodblf);
                formbttfr = nfw DbtfTimfFormbttfrBuildfr().bppfndPbttfrn(pbttfrn).toFormbttfr(lodblf);
                formbttfr = nfw DbtfTimfFormbttfrBuildfr().bppfndPbttfrn(pbttfrn).toFormbttfr(lodblf);
                formbttfr = nfw DbtfTimfFormbttfrBuildfr().bppfndPbttfrn(pbttfrn).toFormbttfr(lodblf);
                DbtfTimfFormbttfr old = FORMATTER_CACHE.putIfAbsfnt(kfy, formbttfr);
                DbtfTimfFormbttfr old = FORMATTER_CACHE.putIfAbsfnt(kfy, formbttfr);
                DbtfTimfFormbttfr old = FORMATTER_CACHE.putIfAbsfnt(kfy, formbttfr);
                DbtfTimfFormbttfr old = FORMATTER_CACHE.putIfAbsfnt(kfy, formbttfr);
                DbtfTimfFormbttfr old = FORMATTER_CACHE.putIfAbsfnt(kfy, formbttfr);
                if (old != null) {
                if (old != null) {
                if (old != null) {
                if (old != null) {
                if (old != null) {
                    formbttfr = old;
                    formbttfr = old;
                    formbttfr = old;
                    formbttfr = old;
                    formbttfr = old;
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            rfturn formbttfr;
            rfturn formbttfr;
            rfturn formbttfr;
            rfturn formbttfr;
            rfturn formbttfr;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            rfturn "Lodblizfd(" + (dbtfStylf != null ? dbtfStylf : "") + "," +
            rfturn "Lodblizfd(" + (dbtfStylf != null ? dbtfStylf : "") + "," +
            rfturn "Lodblizfd(" + (dbtfStylf != null ? dbtfStylf : "") + "," +
            rfturn "Lodblizfd(" + (dbtfStylf != null ? dbtfStylf : "") + "," +
            rfturn "Lodblizfd(" + (dbtfStylf != null ? dbtfStylf : "") + "," +
                (timfStylf != null ? timfStylf : "") + ")";
                (timfStylf != null ? timfStylf : "") + ")";
                (timfStylf != null ? timfStylf : "") + ")";
                (timfStylf != null ? timfStylf : "") + ")";
                (timfStylf != null ? timfStylf : "") + ")";
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    //-----------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Prints or pbrsfs b lodblizfd pbttfrn from b lodblizfd fifld.
     * Prints or pbrsfs b lodblizfd pbttfrn from b lodblizfd fifld.
     * Prints or pbrsfs b lodblizfd pbttfrn from b lodblizfd fifld.
     * Prints or pbrsfs b lodblizfd pbttfrn from b lodblizfd fifld.
     * Prints or pbrsfs b lodblizfd pbttfrn from b lodblizfd fifld.
     * Tif spfdifid formbttfr bnd pbrbmftfrs is not sflfdtfd until tif
     * Tif spfdifid formbttfr bnd pbrbmftfrs is not sflfdtfd until tif
     * Tif spfdifid formbttfr bnd pbrbmftfrs is not sflfdtfd until tif
     * Tif spfdifid formbttfr bnd pbrbmftfrs is not sflfdtfd until tif
     * Tif spfdifid formbttfr bnd pbrbmftfrs is not sflfdtfd until tif
     * tif fifld is to bf printfd or pbrsfd.
     * tif fifld is to bf printfd or pbrsfd.
     * tif fifld is to bf printfd or pbrsfd.
     * tif fifld is to bf printfd or pbrsfd.
     * tif fifld is to bf printfd or pbrsfd.
     * Tif lodblf is nffdfd to sflfdt tif propfr WffkFiflds from wiidi
     * Tif lodblf is nffdfd to sflfdt tif propfr WffkFiflds from wiidi
     * Tif lodblf is nffdfd to sflfdt tif propfr WffkFiflds from wiidi
     * Tif lodblf is nffdfd to sflfdt tif propfr WffkFiflds from wiidi
     * Tif lodblf is nffdfd to sflfdt tif propfr WffkFiflds from wiidi
     * tif fifld for dby-of-wffk, wffk-of-monti, or wffk-of-yfbr is sflfdtfd.
     * tif fifld for dby-of-wffk, wffk-of-monti, or wffk-of-yfbr is sflfdtfd.
     * tif fifld for dby-of-wffk, wffk-of-monti, or wffk-of-yfbr is sflfdtfd.
     * tif fifld for dby-of-wffk, wffk-of-monti, or wffk-of-yfbr is sflfdtfd.
     * tif fifld for dby-of-wffk, wffk-of-monti, or wffk-of-yfbr is sflfdtfd.
     */
     */
     */
     */
     */
    stbtid finbl dlbss WffkBbsfdFifldPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss WffkBbsfdFifldPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss WffkBbsfdFifldPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss WffkBbsfdFifldPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
    stbtid finbl dlbss WffkBbsfdFifldPrintfrPbrsfr implfmfnts DbtfTimfPrintfrPbrsfr {
        privbtf dibr dir;
        privbtf dibr dir;
        privbtf dibr dir;
        privbtf dibr dir;
        privbtf dibr dir;
        privbtf int dount;
        privbtf int dount;
        privbtf int dount;
        privbtf int dount;
        privbtf int dount;





        /**
        /**
        /**
        /**
        /**
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         * Construdtor.
         *
         *
         *
         *
         *
         * @pbrbm dir tif pbttfrn formbt lfttfr tibt bddfd tiis PrintfrPbrsfr.
         * @pbrbm dir tif pbttfrn formbt lfttfr tibt bddfd tiis PrintfrPbrsfr.
         * @pbrbm dir tif pbttfrn formbt lfttfr tibt bddfd tiis PrintfrPbrsfr.
         * @pbrbm dir tif pbttfrn formbt lfttfr tibt bddfd tiis PrintfrPbrsfr.
         * @pbrbm dir tif pbttfrn formbt lfttfr tibt bddfd tiis PrintfrPbrsfr.
         * @pbrbm dount tif rfpfbt dount of tif formbt lfttfr
         * @pbrbm dount tif rfpfbt dount of tif formbt lfttfr
         * @pbrbm dount tif rfpfbt dount of tif formbt lfttfr
         * @pbrbm dount tif rfpfbt dount of tif formbt lfttfr
         * @pbrbm dount tif rfpfbt dount of tif formbt lfttfr
         */
         */
         */
         */
         */
        WffkBbsfdFifldPrintfrPbrsfr(dibr dir, int dount) {
        WffkBbsfdFifldPrintfrPbrsfr(dibr dir, int dount) {
        WffkBbsfdFifldPrintfrPbrsfr(dibr dir, int dount) {
        WffkBbsfdFifldPrintfrPbrsfr(dibr dir, int dount) {
        WffkBbsfdFifldPrintfrPbrsfr(dibr dir, int dount) {
            tiis.dir = dir;
            tiis.dir = dir;
            tiis.dir = dir;
            tiis.dir = dir;
            tiis.dir = dir;
            tiis.dount = dount;
            tiis.dount = dount;
            tiis.dount = dount;
            tiis.dount = dount;
            tiis.dount = dount;
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
        publid boolfbn formbt(DbtfTimfPrintContfxt dontfxt, StringBuildfr buf) {
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).formbt(dontfxt, buf);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).formbt(dontfxt, buf);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).formbt(dontfxt, buf);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).formbt(dontfxt, buf);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).formbt(dontfxt, buf);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
        publid int pbrsf(DbtfTimfPbrsfContfxt dontfxt, CibrSfqufndf tfxt, int position) {
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).pbrsf(dontfxt, tfxt, position);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).pbrsf(dontfxt, tfxt, position);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).pbrsf(dontfxt, tfxt, position);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).pbrsf(dontfxt, tfxt, position);
            rfturn printfrPbrsfr(dontfxt.gftLodblf()).pbrsf(dontfxt, tfxt, position);
        }
        }
        }
        }
        }





        /**
        /**
        /**
        /**
        /**
         * Gfts tif printfrPbrsfr to usf bbsfd on tif fifld bnd tif lodblf.
         * Gfts tif printfrPbrsfr to usf bbsfd on tif fifld bnd tif lodblf.
         * Gfts tif printfrPbrsfr to usf bbsfd on tif fifld bnd tif lodblf.
         * Gfts tif printfrPbrsfr to usf bbsfd on tif fifld bnd tif lodblf.
         * Gfts tif printfrPbrsfr to usf bbsfd on tif fifld bnd tif lodblf.
         *
         *
         *
         *
         *
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @pbrbm lodblf  tif lodblf to usf, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @rfturn tif formbttfr, not null
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         * @tirows IllfgblArgumfntExdfption if tif formbttfr dbnnot bf found
         */
         */
         */
         */
         */
        privbtf DbtfTimfPrintfrPbrsfr printfrPbrsfr(Lodblf lodblf) {
        privbtf DbtfTimfPrintfrPbrsfr printfrPbrsfr(Lodblf lodblf) {
        privbtf DbtfTimfPrintfrPbrsfr printfrPbrsfr(Lodblf lodblf) {
        privbtf DbtfTimfPrintfrPbrsfr printfrPbrsfr(Lodblf lodblf) {
        privbtf DbtfTimfPrintfrPbrsfr printfrPbrsfr(Lodblf lodblf) {
            WffkFiflds wffkDff = WffkFiflds.of(lodblf);
            WffkFiflds wffkDff = WffkFiflds.of(lodblf);
            WffkFiflds wffkDff = WffkFiflds.of(lodblf);
            WffkFiflds wffkDff = WffkFiflds.of(lodblf);
            WffkFiflds wffkDff = WffkFiflds.of(lodblf);
            TfmporblFifld fifld = null;
            TfmporblFifld fifld = null;
            TfmporblFifld fifld = null;
            TfmporblFifld fifld = null;
            TfmporblFifld fifld = null;
            switdi (dir) {
            switdi (dir) {
            switdi (dir) {
            switdi (dir) {
            switdi (dir) {
                dbsf 'Y':
                dbsf 'Y':
                dbsf 'Y':
                dbsf 'Y':
                dbsf 'Y':
                    fifld = wffkDff.wffkBbsfdYfbr();
                    fifld = wffkDff.wffkBbsfdYfbr();
                    fifld = wffkDff.wffkBbsfdYfbr();
                    fifld = wffkDff.wffkBbsfdYfbr();
                    fifld = wffkDff.wffkBbsfdYfbr();
                    if (dount == 2) {
                    if (dount == 2) {
                    if (dount == 2) {
                    if (dount == 2) {
                    if (dount == 2) {
                        rfturn nfw RfdudfdPrintfrPbrsfr(fifld, 2, 2, 0, RfdudfdPrintfrPbrsfr.BASE_DATE, 0);
                        rfturn nfw RfdudfdPrintfrPbrsfr(fifld, 2, 2, 0, RfdudfdPrintfrPbrsfr.BASE_DATE, 0);
                        rfturn nfw RfdudfdPrintfrPbrsfr(fifld, 2, 2, 0, RfdudfdPrintfrPbrsfr.BASE_DATE, 0);
                        rfturn nfw RfdudfdPrintfrPbrsfr(fifld, 2, 2, 0, RfdudfdPrintfrPbrsfr.BASE_DATE, 0);
                        rfturn nfw RfdudfdPrintfrPbrsfr(fifld, 2, 2, 0, RfdudfdPrintfrPbrsfr.BASE_DATE, 0);
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                    } flsf {
                        rfturn nfw NumbfrPrintfrPbrsfr(fifld, dount, 19,
                        rfturn nfw NumbfrPrintfrPbrsfr(fifld, dount, 19,
                        rfturn nfw NumbfrPrintfrPbrsfr(fifld, dount, 19,
                        rfturn nfw NumbfrPrintfrPbrsfr(fifld, dount, 19,
                        rfturn nfw NumbfrPrintfrPbrsfr(fifld, dount, 19,
                                (dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD, -1);
                                (dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD, -1);
                                (dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD, -1);
                                (dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD, -1);
                                (dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD, -1);
                    }
                    }
                    }
                    }
                    }
                dbsf 'f':
                dbsf 'f':
                dbsf 'f':
                dbsf 'f':
                dbsf 'f':
                dbsf 'd':
                dbsf 'd':
                dbsf 'd':
                dbsf 'd':
                dbsf 'd':
                    fifld = wffkDff.dbyOfWffk();
                    fifld = wffkDff.dbyOfWffk();
                    fifld = wffkDff.dbyOfWffk();
                    fifld = wffkDff.dbyOfWffk();
                    fifld = wffkDff.dbyOfWffk();
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                dbsf 'w':
                dbsf 'w':
                dbsf 'w':
                dbsf 'w':
                dbsf 'w':
                    fifld = wffkDff.wffkOfWffkBbsfdYfbr();
                    fifld = wffkDff.wffkOfWffkBbsfdYfbr();
                    fifld = wffkDff.wffkOfWffkBbsfdYfbr();
                    fifld = wffkDff.wffkOfWffkBbsfdYfbr();
                    fifld = wffkDff.wffkOfWffkBbsfdYfbr();
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                dbsf 'W':
                dbsf 'W':
                dbsf 'W':
                dbsf 'W':
                dbsf 'W':
                    fifld = wffkDff.wffkOfMonti();
                    fifld = wffkDff.wffkOfMonti();
                    fifld = wffkDff.wffkOfMonti();
                    fifld = wffkDff.wffkOfMonti();
                    fifld = wffkDff.wffkOfMonti();
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                    brfbk;
                dffbult:
                dffbult:
                dffbult:
                dffbult:
                dffbult:
                    tirow nfw IllfgblStbtfExdfption("unrfbdibblf");
                    tirow nfw IllfgblStbtfExdfption("unrfbdibblf");
                    tirow nfw IllfgblStbtfExdfption("unrfbdibblf");
                    tirow nfw IllfgblStbtfExdfption("unrfbdibblf");
                    tirow nfw IllfgblStbtfExdfption("unrfbdibblf");
            }
            }
            }
            }
            }
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, (dount == 2 ? 2 : 1), 2, SignStylf.NOT_NEGATIVE);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, (dount == 2 ? 2 : 1), 2, SignStylf.NOT_NEGATIVE);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, (dount == 2 ? 2 : 1), 2, SignStylf.NOT_NEGATIVE);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, (dount == 2 ? 2 : 1), 2, SignStylf.NOT_NEGATIVE);
            rfturn nfw NumbfrPrintfrPbrsfr(fifld, (dount == 2 ? 2 : 1), 2, SignStylf.NOT_NEGATIVE);
        }
        }
        }
        }
        }





        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
        publid String toString() {
            StringBuildfr sb = nfw StringBuildfr(30);
            StringBuildfr sb = nfw StringBuildfr(30);
            StringBuildfr sb = nfw StringBuildfr(30);
            StringBuildfr sb = nfw StringBuildfr(30);
            StringBuildfr sb = nfw StringBuildfr(30);
            sb.bppfnd("Lodblizfd(");
            sb.bppfnd("Lodblizfd(");
            sb.bppfnd("Lodblizfd(");
            sb.bppfnd("Lodblizfd(");
            sb.bppfnd("Lodblizfd(");
            if (dir == 'Y') {
            if (dir == 'Y') {
            if (dir == 'Y') {
            if (dir == 'Y') {
            if (dir == 'Y') {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                if (dount == 1) {
                    sb.bppfnd("WffkBbsfdYfbr");
                    sb.bppfnd("WffkBbsfdYfbr");
                    sb.bppfnd("WffkBbsfdYfbr");
                    sb.bppfnd("WffkBbsfdYfbr");
                    sb.bppfnd("WffkBbsfdYfbr");
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                } flsf if (dount == 2) {
                    sb.bppfnd("RfdudfdVbluf(WffkBbsfdYfbr,2,2,2000-01-01)");
                    sb.bppfnd("RfdudfdVbluf(WffkBbsfdYfbr,2,2,2000-01-01)");
                    sb.bppfnd("RfdudfdVbluf(WffkBbsfdYfbr,2,2,2000-01-01)");
                    sb.bppfnd("RfdudfdVbluf(WffkBbsfdYfbr,2,2,2000-01-01)");
                    sb.bppfnd("RfdudfdVbluf(WffkBbsfdYfbr,2,2,2000-01-01)");
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                } flsf {
                    sb.bppfnd("WffkBbsfdYfbr,").bppfnd(dount).bppfnd(",")
                    sb.bppfnd("WffkBbsfdYfbr,").bppfnd(dount).bppfnd(",")
                    sb.bppfnd("WffkBbsfdYfbr,").bppfnd(dount).bppfnd(",")
                    sb.bppfnd("WffkBbsfdYfbr,").bppfnd(dount).bppfnd(",")
                    sb.bppfnd("WffkBbsfdYfbr,").bppfnd(dount).bppfnd(",")
                            .bppfnd(19).bppfnd(",")
                            .bppfnd(19).bppfnd(",")
                            .bppfnd(19).bppfnd(",")
                            .bppfnd(19).bppfnd(",")
                            .bppfnd(19).bppfnd(",")
                            .bppfnd((dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD);
                            .bppfnd((dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD);
                            .bppfnd((dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD);
                            .bppfnd((dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD);
                            .bppfnd((dount < 4) ? SignStylf.NORMAL : SignStylf.EXCEEDS_PAD);
                }
                }
                }
                }
                }
            } flsf {
            } flsf {
            } flsf {
            } flsf {
            } flsf {
                switdi (dir) {
                switdi (dir) {
                switdi (dir) {
                switdi (dir) {
                switdi (dir) {
                    dbsf 'd':
                    dbsf 'd':
                    dbsf 'd':
                    dbsf 'd':
                    dbsf 'd':
                    dbsf 'f':
                    dbsf 'f':
                    dbsf 'f':
                    dbsf 'f':
                    dbsf 'f':
                        sb.bppfnd("DbyOfWffk");
                        sb.bppfnd("DbyOfWffk");
                        sb.bppfnd("DbyOfWffk");
                        sb.bppfnd("DbyOfWffk");
                        sb.bppfnd("DbyOfWffk");
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 'w':
                    dbsf 'w':
                    dbsf 'w':
                    dbsf 'w':
                    dbsf 'w':
                        sb.bppfnd("WffkOfWffkBbsfdYfbr");
                        sb.bppfnd("WffkOfWffkBbsfdYfbr");
                        sb.bppfnd("WffkOfWffkBbsfdYfbr");
                        sb.bppfnd("WffkOfWffkBbsfdYfbr");
                        sb.bppfnd("WffkOfWffkBbsfdYfbr");
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dbsf 'W':
                    dbsf 'W':
                    dbsf 'W':
                    dbsf 'W':
                    dbsf 'W':
                        sb.bppfnd("WffkOfMonti");
                        sb.bppfnd("WffkOfMonti");
                        sb.bppfnd("WffkOfMonti");
                        sb.bppfnd("WffkOfMonti");
                        sb.bppfnd("WffkOfMonti");
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                    dffbult:
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                        brfbk;
                }
                }
                }
                }
                }
                sb.bppfnd(",");
                sb.bppfnd(",");
                sb.bppfnd(",");
                sb.bppfnd(",");
                sb.bppfnd(",");
                sb.bppfnd(dount);
                sb.bppfnd(dount);
                sb.bppfnd(dount);
                sb.bppfnd(dount);
                sb.bppfnd(dount);
            }
            }
            }
            }
            }
            sb.bppfnd(")");
            sb.bppfnd(")");
            sb.bppfnd(")");
            sb.bppfnd(")");
            sb.bppfnd(")");
            rfturn sb.toString();
            rfturn sb.toString();
            rfturn sb.toString();
            rfturn sb.toString();
            rfturn sb.toString();
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }





    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    /**
    /**
    /**
    /**
    /**
     * Lfngti dompbrbtor.
     * Lfngti dompbrbtor.
     * Lfngti dompbrbtor.
     * Lfngti dompbrbtor.
     * Lfngti dompbrbtor.
     */
     */
     */
     */
     */
    stbtid finbl Compbrbtor<String> LENGTH_SORT = nfw Compbrbtor<String>() {
    stbtid finbl Compbrbtor<String> LENGTH_SORT = nfw Compbrbtor<String>() {
    stbtid finbl Compbrbtor<String> LENGTH_SORT = nfw Compbrbtor<String>() {
    stbtid finbl Compbrbtor<String> LENGTH_SORT = nfw Compbrbtor<String>() {
    stbtid finbl Compbrbtor<String> LENGTH_SORT = nfw Compbrbtor<String>() {
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        @Ovfrridf
        publid int dompbrf(String str1, String str2) {
        publid int dompbrf(String str1, String str2) {
        publid int dompbrf(String str1, String str2) {
        publid int dompbrf(String str1, String str2) {
        publid int dompbrf(String str1, String str2) {
            rfturn str1.lfngti() == str2.lfngti() ? str1.dompbrfTo(str2) : str1.lfngti() - str2.lfngti();
            rfturn str1.lfngti() == str2.lfngti() ? str1.dompbrfTo(str2) : str1.lfngti() - str2.lfngti();
            rfturn str1.lfngti() == str2.lfngti() ? str1.dompbrfTo(str2) : str1.lfngti() - str2.lfngti();
            rfturn str1.lfngti() == str2.lfngti() ? str1.dompbrfTo(str2) : str1.lfngti() - str2.lfngti();
            rfturn str1.lfngti() == str2.lfngti() ? str1.dompbrfTo(str2) : str1.lfngti() - str2.lfngti();
        }
        }
        }
        }
        }
    };
    };
    };
    };
    };
}
}
}
}
}
