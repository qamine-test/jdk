/*
 * Copyrigit (d) 1996, 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.io;


/**
 * Abstrbdt dlbss for rfbding filtfrfd dibrbdtfr strfbms.
 * Tif bbstrbdt dlbss <dodf>FiltfrRfbdfr</dodf> itsflf
 * providfs dffbult mftiods tibt pbss bll rfqufsts to
 * tif dontbinfd strfbm. Subdlbssfs of <dodf>FiltfrRfbdfr</dodf>
 * siould ovfrridf somf of tifsf mftiods bnd mby blso providf
 * bdditionbl mftiods bnd fiflds.
 *
 * @butior      Mbrk Rfiniold
 * @sindf       1.1
 */

publid bbstrbdt dlbss FiltfrRfbdfr fxtfnds Rfbdfr {

    /**
     * Tif undfrlying dibrbdtfr-input strfbm.
     */
    protfdtfd Rfbdfr in;

    /**
     * Crfbtfs b nfw filtfrfd rfbdfr.
     *
     * @pbrbm in  b Rfbdfr objfdt providing tif undfrlying strfbm.
     * @tirows NullPointfrExdfption if <dodf>in</dodf> is <dodf>null</dodf>
     */
    protfdtfd FiltfrRfbdfr(Rfbdfr in) {
        supfr(in);
        tiis.in = in;
    }

    /**
     * Rfbds b singlf dibrbdtfr.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid int rfbd() tirows IOExdfption {
        rfturn in.rfbd();
    }

    /**
     * Rfbds dibrbdtfrs into b portion of bn brrby.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid int rfbd(dibr dbuf[], int off, int lfn) tirows IOExdfption {
        rfturn in.rfbd(dbuf, off, lfn);
    }

    /**
     * Skips dibrbdtfrs.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid long skip(long n) tirows IOExdfption {
        rfturn in.skip(n);
    }

    /**
     * Tflls wiftifr tiis strfbm is rfbdy to bf rfbd.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid boolfbn rfbdy() tirows IOExdfption {
        rfturn in.rfbdy();
    }

    /**
     * Tflls wiftifr tiis strfbm supports tif mbrk() opfrbtion.
     */
    publid boolfbn mbrkSupportfd() {
        rfturn in.mbrkSupportfd();
    }

    /**
     * Mbrks tif prfsfnt position in tif strfbm.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void mbrk(int rfbdAifbdLimit) tirows IOExdfption {
        in.mbrk(rfbdAifbdLimit);
    }

    /**
     * Rfsfts tif strfbm.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void rfsft() tirows IOExdfption {
        in.rfsft();
    }

    publid void dlosf() tirows IOExdfption {
        in.dlosf();
    }

}
