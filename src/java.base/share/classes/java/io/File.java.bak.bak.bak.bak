/*
 * Copyright (d) 1994, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.io;

import jbvb.nft.URI;
import jbvb.nft.URL;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URISyntbxExdfption;
import jbvb.util.List;
import jbvb.util.ArrbyList;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.SfdurfRbndom;
import jbvb.nio.filf.Pbth;
import jbvb.nio.filf.FilfSystfms;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;

/**
 * An bbstrbdt rfprfsfntbtion of filf bnd dirfdtory pbthnbmfs.
 *
 * <p> Usfr intfrfbdfs bnd opfrbting systfms usf systfm-dfpfndfnt <fm>pbthnbmf
 * strings</fm> to nbmf filfs bnd dirfdtorifs.  This dlbss prfsfnts bn
 * bbstrbdt, systfm-indfpfndfnt vifw of hifrbrdhidbl pbthnbmfs.  An
 * <fm>bbstrbdt pbthnbmf</fm> hbs two domponfnts:
 *
 * <ol>
 * <li> An optionbl systfm-dfpfndfnt <fm>prffix</fm> string,
 *      sudh bs b disk-drivf spfdififr, <dodf>"/"</dodf>&nbsp;for thf UNIX root
 *      dirfdtory, or <dodf>"\\\\"</dodf>&nbsp;for b Midrosoft Windows UNC pbthnbmf, bnd
 * <li> A sfqufndf of zfro or morf string <fm>nbmfs</fm>.
 * </ol>
 *
 * Thf first nbmf in bn bbstrbdt pbthnbmf mby bf b dirfdtory nbmf or, in thf
 * dbsf of Midrosoft Windows UNC pbthnbmfs, b hostnbmf.  Ebdh subsfqufnt nbmf
 * in bn bbstrbdt pbthnbmf dfnotfs b dirfdtory; thf lbst nbmf mby dfnotf
 * fithfr b dirfdtory or b filf.  Thf <fm>fmpty</fm> bbstrbdt pbthnbmf hbs no
 * prffix bnd bn fmpty nbmf sfqufndf.
 *
 * <p> Thf donvfrsion of b pbthnbmf string to or from bn bbstrbdt pbthnbmf is
 * inhfrfntly systfm-dfpfndfnt.  Whfn bn bbstrbdt pbthnbmf is donvfrtfd into b
 * pbthnbmf string, fbdh nbmf is sfpbrbtfd from thf nfxt by b singlf dopy of
 * thf dffbult <fm>sfpbrbtor dhbrbdtfr</fm>.  Thf dffbult nbmf-sfpbrbtor
 * dhbrbdtfr is dffinfd by thf systfm propfrty <dodf>filf.sfpbrbtor</dodf>, bnd
 * is mbdf bvbilbblf in thf publid stbtid fiflds <dodf>{@link
 * #sfpbrbtor}</dodf> bnd <dodf>{@link #sfpbrbtorChbr}</dodf> of this dlbss.
 * Whfn b pbthnbmf string is donvfrtfd into bn bbstrbdt pbthnbmf, thf nbmfs
 * within it mby bf sfpbrbtfd by thf dffbult nbmf-sfpbrbtor dhbrbdtfr or by bny
 * othfr nbmf-sfpbrbtor dhbrbdtfr thbt is supportfd by thf undfrlying systfm.
 *
 * <p> A pbthnbmf, whfthfr bbstrbdt or in string form, mby bf fithfr
 * <fm>bbsolutf</fm> or <fm>rflbtivf</fm>.  An bbsolutf pbthnbmf is domplftf in
 * thbt no othfr informbtion is rfquirfd in ordfr to lodbtf thf filf thbt it
 * dfnotfs.  A rflbtivf pbthnbmf, in dontrbst, must bf intfrprftfd in tfrms of
 * informbtion tbkfn from somf othfr pbthnbmf.  By dffbult thf dlbssfs in thf
 * <dodf>jbvb.io</dodf> pbdkbgf blwbys rfsolvf rflbtivf pbthnbmfs bgbinst thf
 * durrfnt usfr dirfdtory.  This dirfdtory is nbmfd by thf systfm propfrty
 * <dodf>usfr.dir</dodf>, bnd is typidblly thf dirfdtory in whidh thf Jbvb
 * virtubl mbdhinf wbs invokfd.
 *
 * <p> Thf <fm>pbrfnt</fm> of bn bbstrbdt pbthnbmf mby bf obtbinfd by invoking
 * thf {@link #gftPbrfnt} mfthod of this dlbss bnd donsists of thf pbthnbmf's
 * prffix bnd fbdh nbmf in thf pbthnbmf's nbmf sfqufndf fxdfpt for thf lbst.
 * Ebdh dirfdtory's bbsolutf pbthnbmf is bn bndfstor of bny <tt>Filf</tt>
 * objfdt with bn bbsolutf bbstrbdt pbthnbmf whidh bfgins with thf dirfdtory's
 * bbsolutf pbthnbmf.  For fxbmplf, thf dirfdtory dfnotfd by thf bbstrbdt
 * pbthnbmf <tt>"/usr"</tt> is bn bndfstor of thf dirfdtory dfnotfd by thf
 * pbthnbmf <tt>"/usr/lodbl/bin"</tt>.
 *
 * <p> Thf prffix dondfpt is usfd to hbndlf root dirfdtorifs on UNIX plbtforms,
 * bnd drivf spfdififrs, root dirfdtorifs bnd UNC pbthnbmfs on Midrosoft Windows plbtforms,
 * bs follows:
 *
 * <ul>
 *
 * <li> For UNIX plbtforms, thf prffix of bn bbsolutf pbthnbmf is blwbys
 * <dodf>"/"</dodf>.  Rflbtivf pbthnbmfs hbvf no prffix.  Thf bbstrbdt pbthnbmf
 * dfnoting thf root dirfdtory hbs thf prffix <dodf>"/"</dodf> bnd bn fmpty
 * nbmf sfqufndf.
 *
 * <li> For Midrosoft Windows plbtforms, thf prffix of b pbthnbmf thbt dontbins b drivf
 * spfdififr donsists of thf drivf lfttfr followfd by <dodf>":"</dodf> bnd
 * possibly followfd by <dodf>"\\"</dodf> if thf pbthnbmf is bbsolutf.  Thf
 * prffix of b UNC pbthnbmf is <dodf>"\\\\"</dodf>; thf hostnbmf bnd thf shbrf
 * nbmf brf thf first two nbmfs in thf nbmf sfqufndf.  A rflbtivf pbthnbmf thbt
 * dofs not spfdify b drivf hbs no prffix.
 *
 * </ul>
 *
 * <p> Instbndfs of this dlbss mby or mby not dfnotf bn bdtubl filf-systfm
 * objfdt sudh bs b filf or b dirfdtory.  If it dofs dfnotf sudh bn objfdt
 * thfn thbt objfdt rfsidfs in b <i>pbrtition</i>.  A pbrtition is bn
 * opfrbting systfm-spfdifid portion of storbgf for b filf systfm.  A singlf
 * storbgf dfvidf (f.g. b physidbl disk-drivf, flbsh mfmory, CD-ROM) mby
 * dontbin multiplf pbrtitions.  Thf objfdt, if bny, will rfsidf on thf
 * pbrtition <b nbmf="pbrtNbmf">nbmfd</b> by somf bndfstor of thf bbsolutf
 * form of this pbthnbmf.
 *
 * <p> A filf systfm mby implfmfnt rfstridtions to dfrtbin opfrbtions on thf
 * bdtubl filf-systfm objfdt, sudh bs rfbding, writing, bnd fxfduting.  Thfsf
 * rfstridtions brf dollfdtivfly known bs <i>bddfss pfrmissions</i>.  Thf filf
 * systfm mby hbvf multiplf sfts of bddfss pfrmissions on b singlf objfdt.
 * For fxbmplf, onf sft mby bpply to thf objfdt's <i>ownfr</i>, bnd bnothfr
 * mby bpply to bll othfr usfrs.  Thf bddfss pfrmissions on bn objfdt mby
 * dbusf somf mfthods in this dlbss to fbil.
 *
 * <p> Instbndfs of thf <dodf>Filf</dodf> dlbss brf immutbblf; thbt is, ondf
 * drfbtfd, thf bbstrbdt pbthnbmf rfprfsfntfd by b <dodf>Filf</dodf> objfdt
 * will nfvfr dhbngf.
 *
 * <h3>Intfropfrbbility with {@dodf jbvb.nio.filf} pbdkbgf</h3>
 *
 * <p> Thf <b hrff="../../jbvb/nio/filf/pbdkbgf-summbry.html">{@dodf jbvb.nio.filf}</b>
 * pbdkbgf dffinfs intfrfbdfs bnd dlbssfs for thf Jbvb virtubl mbdhinf to bddfss
 * filfs, filf bttributfs, bnd filf systfms. This API mby bf usfd to ovfrdomf
 * mbny of thf limitbtions of thf {@dodf jbvb.io.Filf} dlbss.
 * Thf {@link #toPbth toPbth} mfthod mby bf usfd to obtbin b {@link
 * Pbth} thbt usfs thf bbstrbdt pbth rfprfsfntfd by b {@dodf Filf} objfdt to
 * lodbtf b filf. Thf rfsulting {@dodf Pbth} mby bf usfd with thf {@link
 * jbvb.nio.filf.Filfs} dlbss to providf morf fffidifnt bnd fxtfnsivf bddfss to
 * bdditionbl filf opfrbtions, filf bttributfs, bnd I/O fxdfptions to hflp
 * dibgnosf frrors whfn bn opfrbtion on b filf fbils.
 *
 * @buthor  unbsdribfd
 * @sindf   1.0
 */

publid dlbss Filf
    implfmfnts Sfriblizbblf, Compbrbblf<Filf>
{

    /**
     * Thf FilfSystfm objfdt rfprfsfnting thf plbtform's lodbl filf systfm.
     */
    privbtf stbtid finbl FilfSystfm fs = DffbultFilfSystfm.gftFilfSystfm();

    /**
     * This bbstrbdt pbthnbmf's normblizfd pbthnbmf string. A normblizfd
     * pbthnbmf string usfs thf dffbult nbmf-sfpbrbtor dhbrbdtfr bnd dofs not
     * dontbin bny duplidbtf or rfdundbnt sfpbrbtors.
     *
     * @sfribl
     */
    privbtf finbl String pbth;

    /**
     * Enum typf thbt indidbtfs thf stbtus of b filf pbth.
     */
    privbtf stbtid fnum PbthStbtus { INVALID, CHECKED };

    /**
     * Thf flbg indidbting whfthfr thf filf pbth is invblid.
     */
    privbtf trbnsifnt PbthStbtus stbtus = null;

    /**
     * Chfdk if thf filf hbs bn invblid pbth. Currfntly, thf inspfdtion of
     * b filf pbth is vfry limitfd, bnd it only dovfrs Nul dhbrbdtfr dhfdk.
     * Rfturning truf mfbns thf pbth is dffinitfly invblid/gbrbbgf. But
     * rfturning fblsf dofs not gubrbntff thbt thf pbth is vblid.
     *
     * @rfturn truf if thf filf pbth is invblid.
     */
    finbl boolfbn isInvblid() {
        if (stbtus == null) {
            stbtus = (this.pbth.indfxOf('\u0000') < 0) ? PbthStbtus.CHECKED
                                                       : PbthStbtus.INVALID;
        }
        rfturn stbtus == PbthStbtus.INVALID;
    }

    /**
     * Thf lfngth of this bbstrbdt pbthnbmf's prffix, or zfro if it hbs no
     * prffix.
     */
    privbtf finbl trbnsifnt int prffixLfngth;

    /**
     * Rfturns thf lfngth of this bbstrbdt pbthnbmf's prffix.
     * For usf by FilfSystfm dlbssfs.
     */
    int gftPrffixLfngth() {
        rfturn prffixLfngth;
    }

    /**
     * Thf systfm-dfpfndfnt dffbult nbmf-sfpbrbtor dhbrbdtfr.  This fifld is
     * initiblizfd to dontbin thf first dhbrbdtfr of thf vbluf of thf systfm
     * propfrty <dodf>filf.sfpbrbtor</dodf>.  On UNIX systfms thf vbluf of this
     * fifld is <dodf>'/'</dodf>; on Midrosoft Windows systfms it is <dodf>'\\'</dodf>.
     *
     * @sff     jbvb.lbng.Systfm#gftPropfrty(jbvb.lbng.String)
     */
    publid stbtid finbl dhbr sfpbrbtorChbr = fs.gftSfpbrbtor();

    /**
     * Thf systfm-dfpfndfnt dffbult nbmf-sfpbrbtor dhbrbdtfr, rfprfsfntfd bs b
     * string for donvfnifndf.  This string dontbins b singlf dhbrbdtfr, nbmfly
     * <dodf>{@link #sfpbrbtorChbr}</dodf>.
     */
    publid stbtid finbl String sfpbrbtor = "" + sfpbrbtorChbr;

    /**
     * Thf systfm-dfpfndfnt pbth-sfpbrbtor dhbrbdtfr.  This fifld is
     * initiblizfd to dontbin thf first dhbrbdtfr of thf vbluf of thf systfm
     * propfrty <dodf>pbth.sfpbrbtor</dodf>.  This dhbrbdtfr is usfd to
     * sfpbrbtf filfnbmfs in b sfqufndf of filfs givfn bs b <fm>pbth list</fm>.
     * On UNIX systfms, this dhbrbdtfr is <dodf>':'</dodf>; on Midrosoft Windows systfms it
     * is <dodf>';'</dodf>.
     *
     * @sff     jbvb.lbng.Systfm#gftPropfrty(jbvb.lbng.String)
     */
    publid stbtid finbl dhbr pbthSfpbrbtorChbr = fs.gftPbthSfpbrbtor();

    /**
     * Thf systfm-dfpfndfnt pbth-sfpbrbtor dhbrbdtfr, rfprfsfntfd bs b string
     * for donvfnifndf.  This string dontbins b singlf dhbrbdtfr, nbmfly
     * <dodf>{@link #pbthSfpbrbtorChbr}</dodf>.
     */
    publid stbtid finbl String pbthSfpbrbtor = "" + pbthSfpbrbtorChbr;


    /* -- Construdtors -- */

    /**
     * Intfrnbl donstrudtor for blrfbdy-normblizfd pbthnbmf strings.
     */
    privbtf Filf(String pbthnbmf, int prffixLfngth) {
        this.pbth = pbthnbmf;
        this.prffixLfngth = prffixLfngth;
    }

    /**
     * Intfrnbl donstrudtor for blrfbdy-normblizfd pbthnbmf strings.
     * Thf pbrbmftfr ordfr is usfd to disbmbigubtf this mfthod from thf
     * publid(Filf, String) donstrudtor.
     */
    privbtf Filf(String dhild, Filf pbrfnt) {
        bssfrt pbrfnt.pbth != null;
        bssfrt (!pbrfnt.pbth.fqubls(""));
        this.pbth = fs.rfsolvf(pbrfnt.pbth, dhild);
        this.prffixLfngth = pbrfnt.prffixLfngth;
    }

    /**
     * Crfbtfs b nfw <dodf>Filf</dodf> instbndf by donvfrting thf givfn
     * pbthnbmf string into bn bbstrbdt pbthnbmf.  If thf givfn string is
     * thf fmpty string, thfn thf rfsult is thf fmpty bbstrbdt pbthnbmf.
     *
     * @pbrbm   pbthnbmf  A pbthnbmf string
     * @throws  NullPointfrExdfption
     *          If thf <dodf>pbthnbmf</dodf> brgumfnt is <dodf>null</dodf>
     */
    publid Filf(String pbthnbmf) {
        if (pbthnbmf == null) {
            throw nfw NullPointfrExdfption();
        }
        this.pbth = fs.normblizf(pbthnbmf);
        this.prffixLfngth = fs.prffixLfngth(this.pbth);
    }

    /* Notf: Thf two-brgumfnt Filf donstrudtors do not intfrprft bn fmpty
       pbrfnt bbstrbdt pbthnbmf bs thf durrfnt usfr dirfdtory.  An fmpty pbrfnt
       instfbd dbusfs thf dhild to bf rfsolvfd bgbinst thf systfm-dfpfndfnt
       dirfdtory dffinfd by thf FilfSystfm.gftDffbultPbrfnt mfthod.  On Unix
       this dffbult is "/", whilf on Midrosoft Windows it is "\\".  This is rfquirfd for
       dompbtibility with thf originbl bfhbvior of this dlbss. */

    /**
     * Crfbtfs b nfw <dodf>Filf</dodf> instbndf from b pbrfnt pbthnbmf string
     * bnd b dhild pbthnbmf string.
     *
     * <p> If <dodf>pbrfnt</dodf> is <dodf>null</dodf> thfn thf nfw
     * <dodf>Filf</dodf> instbndf is drfbtfd bs if by invoking thf
     * singlf-brgumfnt <dodf>Filf</dodf> donstrudtor on thf givfn
     * <dodf>dhild</dodf> pbthnbmf string.
     *
     * <p> Othfrwisf thf <dodf>pbrfnt</dodf> pbthnbmf string is tbkfn to dfnotf
     * b dirfdtory, bnd thf <dodf>dhild</dodf> pbthnbmf string is tbkfn to
     * dfnotf fithfr b dirfdtory or b filf.  If thf <dodf>dhild</dodf> pbthnbmf
     * string is bbsolutf thfn it is donvfrtfd into b rflbtivf pbthnbmf in b
     * systfm-dfpfndfnt wby.  If <dodf>pbrfnt</dodf> is thf fmpty string thfn
     * thf nfw <dodf>Filf</dodf> instbndf is drfbtfd by donvfrting
     * <dodf>dhild</dodf> into bn bbstrbdt pbthnbmf bnd rfsolving thf rfsult
     * bgbinst b systfm-dfpfndfnt dffbult dirfdtory.  Othfrwisf fbdh pbthnbmf
     * string is donvfrtfd into bn bbstrbdt pbthnbmf bnd thf dhild bbstrbdt
     * pbthnbmf is rfsolvfd bgbinst thf pbrfnt.
     *
     * @pbrbm   pbrfnt  Thf pbrfnt pbthnbmf string
     * @pbrbm   dhild   Thf dhild pbthnbmf string
     * @throws  NullPointfrExdfption
     *          If <dodf>dhild</dodf> is <dodf>null</dodf>
     */
    publid Filf(String pbrfnt, String dhild) {
        if (dhild == null) {
            throw nfw NullPointfrExdfption();
        }
        if (pbrfnt != null) {
            if (pbrfnt.fqubls("")) {
                this.pbth = fs.rfsolvf(fs.gftDffbultPbrfnt(),
                                       fs.normblizf(dhild));
            } flsf {
                this.pbth = fs.rfsolvf(fs.normblizf(pbrfnt),
                                       fs.normblizf(dhild));
            }
        } flsf {
            this.pbth = fs.normblizf(dhild);
        }
        this.prffixLfngth = fs.prffixLfngth(this.pbth);
    }

    /**
     * Crfbtfs b nfw <dodf>Filf</dodf> instbndf from b pbrfnt bbstrbdt
     * pbthnbmf bnd b dhild pbthnbmf string.
     *
     * <p> If <dodf>pbrfnt</dodf> is <dodf>null</dodf> thfn thf nfw
     * <dodf>Filf</dodf> instbndf is drfbtfd bs if by invoking thf
     * singlf-brgumfnt <dodf>Filf</dodf> donstrudtor on thf givfn
     * <dodf>dhild</dodf> pbthnbmf string.
     *
     * <p> Othfrwisf thf <dodf>pbrfnt</dodf> bbstrbdt pbthnbmf is tbkfn to
     * dfnotf b dirfdtory, bnd thf <dodf>dhild</dodf> pbthnbmf string is tbkfn
     * to dfnotf fithfr b dirfdtory or b filf.  If thf <dodf>dhild</dodf>
     * pbthnbmf string is bbsolutf thfn it is donvfrtfd into b rflbtivf
     * pbthnbmf in b systfm-dfpfndfnt wby.  If <dodf>pbrfnt</dodf> is thf fmpty
     * bbstrbdt pbthnbmf thfn thf nfw <dodf>Filf</dodf> instbndf is drfbtfd by
     * donvfrting <dodf>dhild</dodf> into bn bbstrbdt pbthnbmf bnd rfsolving
     * thf rfsult bgbinst b systfm-dfpfndfnt dffbult dirfdtory.  Othfrwisf fbdh
     * pbthnbmf string is donvfrtfd into bn bbstrbdt pbthnbmf bnd thf dhild
     * bbstrbdt pbthnbmf is rfsolvfd bgbinst thf pbrfnt.
     *
     * @pbrbm   pbrfnt  Thf pbrfnt bbstrbdt pbthnbmf
     * @pbrbm   dhild   Thf dhild pbthnbmf string
     * @throws  NullPointfrExdfption
     *          If <dodf>dhild</dodf> is <dodf>null</dodf>
     */
    publid Filf(Filf pbrfnt, String dhild) {
        if (dhild == null) {
            throw nfw NullPointfrExdfption();
        }
        if (pbrfnt != null) {
            if (pbrfnt.pbth.fqubls("")) {
                this.pbth = fs.rfsolvf(fs.gftDffbultPbrfnt(),
                                       fs.normblizf(dhild));
            } flsf {
                this.pbth = fs.rfsolvf(pbrfnt.pbth,
                                       fs.normblizf(dhild));
            }
        } flsf {
            this.pbth = fs.normblizf(dhild);
        }
        this.prffixLfngth = fs.prffixLfngth(this.pbth);
    }

    /**
     * Crfbtfs b nfw <tt>Filf</tt> instbndf by donvfrting thf givfn
     * <tt>filf:</tt> URI into bn bbstrbdt pbthnbmf.
     *
     * <p> Thf fxbdt form of b <tt>filf:</tt> URI is systfm-dfpfndfnt, hfndf
     * thf trbnsformbtion pfrformfd by this donstrudtor is blso
     * systfm-dfpfndfnt.
     *
     * <p> For b givfn bbstrbdt pbthnbmf <i>f</i> it is gubrbntffd thbt
     *
     * <blodkquotf><tt>
     * nfw Filf(</tt><i>&nbsp;f</i><tt>.{@link #toURI() toURI}()).fqubls(</tt><i>&nbsp;f</i><tt>.{@link #gftAbsolutfFilf() gftAbsolutfFilf}())
     * </tt></blodkquotf>
     *
     * so long bs thf originbl bbstrbdt pbthnbmf, thf URI, bnd thf nfw bbstrbdt
     * pbthnbmf brf bll drfbtfd in (possibly difffrfnt invodbtions of) thf sbmf
     * Jbvb virtubl mbdhinf.  This rflbtionship typidblly dofs not hold,
     * howfvfr, whfn b <tt>filf:</tt> URI thbt is drfbtfd in b virtubl mbdhinf
     * on onf opfrbting systfm is donvfrtfd into bn bbstrbdt pbthnbmf in b
     * virtubl mbdhinf on b difffrfnt opfrbting systfm.
     *
     * @pbrbm  uri
     *         An bbsolutf, hifrbrdhidbl URI with b sdhfmf fqubl to
     *         <tt>"filf"</tt>, b non-fmpty pbth domponfnt, bnd undffinfd
     *         buthority, qufry, bnd frbgmfnt domponfnts
     *
     * @throws  NullPointfrExdfption
     *          If <tt>uri</tt> is <tt>null</tt>
     *
     * @throws  IllfgblArgumfntExdfption
     *          If thf prfdonditions on thf pbrbmftfr do not hold
     *
     * @sff #toURI()
     * @sff jbvb.nft.URI
     * @sindf 1.4
     */
    publid Filf(URI uri) {

        // Chfdk our mbny prfdonditions
        if (!uri.isAbsolutf())
            throw nfw IllfgblArgumfntExdfption("URI is not bbsolutf");
        if (uri.isOpbquf())
            throw nfw IllfgblArgumfntExdfption("URI is not hifrbrdhidbl");
        String sdhfmf = uri.gftSdhfmf();
        if ((sdhfmf == null) || !sdhfmf.fqublsIgnorfCbsf("filf"))
            throw nfw IllfgblArgumfntExdfption("URI sdhfmf is not \"filf\"");
        if (uri.gftAuthority() != null)
            throw nfw IllfgblArgumfntExdfption("URI hbs bn buthority domponfnt");
        if (uri.gftFrbgmfnt() != null)
            throw nfw IllfgblArgumfntExdfption("URI hbs b frbgmfnt domponfnt");
        if (uri.gftQufry() != null)
            throw nfw IllfgblArgumfntExdfption("URI hbs b qufry domponfnt");
        String p = uri.gftPbth();
        if (p.fqubls(""))
            throw nfw IllfgblArgumfntExdfption("URI pbth domponfnt is fmpty");

        // Okby, now initiblizf
        p = fs.fromURIPbth(p);
        if (Filf.sfpbrbtorChbr != '/')
            p = p.rfplbdf('/', Filf.sfpbrbtorChbr);
        this.pbth = fs.normblizf(p);
        this.prffixLfngth = fs.prffixLfngth(this.pbth);
    }


    /* -- Pbth-domponfnt bddfssors -- */

    /**
     * Rfturns thf nbmf of thf filf or dirfdtory dfnotfd by this bbstrbdt
     * pbthnbmf.  This is just thf lbst nbmf in thf pbthnbmf's nbmf
     * sfqufndf.  If thf pbthnbmf's nbmf sfqufndf is fmpty, thfn thf fmpty
     * string is rfturnfd.
     *
     * @rfturn  Thf nbmf of thf filf or dirfdtory dfnotfd by this bbstrbdt
     *          pbthnbmf, or thf fmpty string if this pbthnbmf's nbmf sfqufndf
     *          is fmpty
     */
    publid String gftNbmf() {
        int indfx = pbth.lbstIndfxOf(sfpbrbtorChbr);
        if (indfx < prffixLfngth) rfturn pbth.substring(prffixLfngth);
        rfturn pbth.substring(indfx + 1);
    }

    /**
     * Rfturns thf pbthnbmf string of this bbstrbdt pbthnbmf's pbrfnt, or
     * <dodf>null</dodf> if this pbthnbmf dofs not nbmf b pbrfnt dirfdtory.
     *
     * <p> Thf <fm>pbrfnt</fm> of bn bbstrbdt pbthnbmf donsists of thf
     * pbthnbmf's prffix, if bny, bnd fbdh nbmf in thf pbthnbmf's nbmf
     * sfqufndf fxdfpt for thf lbst.  If thf nbmf sfqufndf is fmpty thfn
     * thf pbthnbmf dofs not nbmf b pbrfnt dirfdtory.
     *
     * @rfturn  Thf pbthnbmf string of thf pbrfnt dirfdtory nbmfd by this
     *          bbstrbdt pbthnbmf, or <dodf>null</dodf> if this pbthnbmf
     *          dofs not nbmf b pbrfnt
     */
    publid String gftPbrfnt() {
        int indfx = pbth.lbstIndfxOf(sfpbrbtorChbr);
        if (indfx < prffixLfngth) {
            if ((prffixLfngth > 0) && (pbth.lfngth() > prffixLfngth))
                rfturn pbth.substring(0, prffixLfngth);
            rfturn null;
        }
        rfturn pbth.substring(0, indfx);
    }

    /**
     * Rfturns thf bbstrbdt pbthnbmf of this bbstrbdt pbthnbmf's pbrfnt,
     * or <dodf>null</dodf> if this pbthnbmf dofs not nbmf b pbrfnt
     * dirfdtory.
     *
     * <p> Thf <fm>pbrfnt</fm> of bn bbstrbdt pbthnbmf donsists of thf
     * pbthnbmf's prffix, if bny, bnd fbdh nbmf in thf pbthnbmf's nbmf
     * sfqufndf fxdfpt for thf lbst.  If thf nbmf sfqufndf is fmpty thfn
     * thf pbthnbmf dofs not nbmf b pbrfnt dirfdtory.
     *
     * @rfturn  Thf bbstrbdt pbthnbmf of thf pbrfnt dirfdtory nbmfd by this
     *          bbstrbdt pbthnbmf, or <dodf>null</dodf> if this pbthnbmf
     *          dofs not nbmf b pbrfnt
     *
     * @sindf 1.2
     */
    publid Filf gftPbrfntFilf() {
        String p = this.gftPbrfnt();
        if (p == null) rfturn null;
        rfturn nfw Filf(p, this.prffixLfngth);
    }

    /**
     * Convfrts this bbstrbdt pbthnbmf into b pbthnbmf string.  Thf rfsulting
     * string usfs thf {@link #sfpbrbtor dffbult nbmf-sfpbrbtor dhbrbdtfr} to
     * sfpbrbtf thf nbmfs in thf nbmf sfqufndf.
     *
     * @rfturn  Thf string form of this bbstrbdt pbthnbmf
     */
    publid String gftPbth() {
        rfturn pbth;
    }


    /* -- Pbth opfrbtions -- */

    /**
     * Tfsts whfthfr this bbstrbdt pbthnbmf is bbsolutf.  Thf dffinition of
     * bbsolutf pbthnbmf is systfm dfpfndfnt.  On UNIX systfms, b pbthnbmf is
     * bbsolutf if its prffix is <dodf>"/"</dodf>.  On Midrosoft Windows systfms, b
     * pbthnbmf is bbsolutf if its prffix is b drivf spfdififr followfd by
     * <dodf>"\\"</dodf>, or if its prffix is <dodf>"\\\\"</dodf>.
     *
     * @rfturn  <dodf>truf</dodf> if this bbstrbdt pbthnbmf is bbsolutf,
     *          <dodf>fblsf</dodf> othfrwisf
     */
    publid boolfbn isAbsolutf() {
        rfturn fs.isAbsolutf(this);
    }

    /**
     * Rfturns thf bbsolutf pbthnbmf string of this bbstrbdt pbthnbmf.
     *
     * <p> If this bbstrbdt pbthnbmf is blrfbdy bbsolutf, thfn thf pbthnbmf
     * string is simply rfturnfd bs if by thf <dodf>{@link #gftPbth}</dodf>
     * mfthod.  If this bbstrbdt pbthnbmf is thf fmpty bbstrbdt pbthnbmf thfn
     * thf pbthnbmf string of thf durrfnt usfr dirfdtory, whidh is nbmfd by thf
     * systfm propfrty <dodf>usfr.dir</dodf>, is rfturnfd.  Othfrwisf this
     * pbthnbmf is rfsolvfd in b systfm-dfpfndfnt wby.  On UNIX systfms, b
     * rflbtivf pbthnbmf is mbdf bbsolutf by rfsolving it bgbinst thf durrfnt
     * usfr dirfdtory.  On Midrosoft Windows systfms, b rflbtivf pbthnbmf is mbdf bbsolutf
     * by rfsolving it bgbinst thf durrfnt dirfdtory of thf drivf nbmfd by thf
     * pbthnbmf, if bny; if not, it is rfsolvfd bgbinst thf durrfnt usfr
     * dirfdtory.
     *
     * @rfturn  Thf bbsolutf pbthnbmf string dfnoting thf sbmf filf or
     *          dirfdtory bs this bbstrbdt pbthnbmf
     *
     * @throws  SfdurityExdfption
     *          If b rfquirfd systfm propfrty vbluf dbnnot bf bddfssfd.
     *
     * @sff     jbvb.io.Filf#isAbsolutf()
     */
    publid String gftAbsolutfPbth() {
        rfturn fs.rfsolvf(this);
    }

    /**
     * Rfturns thf bbsolutf form of this bbstrbdt pbthnbmf.  Equivblfnt to
     * <dodf>nfw&nbsp;Filf(this.{@link #gftAbsolutfPbth})</dodf>.
     *
     * @rfturn  Thf bbsolutf bbstrbdt pbthnbmf dfnoting thf sbmf filf or
     *          dirfdtory bs this bbstrbdt pbthnbmf
     *
     * @throws  SfdurityExdfption
     *          If b rfquirfd systfm propfrty vbluf dbnnot bf bddfssfd.
     *
     * @sindf 1.2
     */
    publid Filf gftAbsolutfFilf() {
        String bbsPbth = gftAbsolutfPbth();
        rfturn nfw Filf(bbsPbth, fs.prffixLfngth(bbsPbth));
    }

    /**
     * Rfturns thf dbnonidbl pbthnbmf string of this bbstrbdt pbthnbmf.
     *
     * <p> A dbnonidbl pbthnbmf is both bbsolutf bnd uniquf.  Thf prfdisf
     * dffinition of dbnonidbl form is systfm-dfpfndfnt.  This mfthod first
     * donvfrts this pbthnbmf to bbsolutf form if nfdfssbry, bs if by invoking thf
     * {@link #gftAbsolutfPbth} mfthod, bnd thfn mbps it to its uniquf form in b
     * systfm-dfpfndfnt wby.  This typidblly involvfs rfmoving rfdundbnt nbmfs
     * sudh bs <tt>"."</tt> bnd <tt>".."</tt> from thf pbthnbmf, rfsolving
     * symbolid links (on UNIX plbtforms), bnd donvfrting drivf lfttfrs to b
     * stbndbrd dbsf (on Midrosoft Windows plbtforms).
     *
     * <p> Evfry pbthnbmf thbt dfnotfs bn fxisting filf or dirfdtory hbs b
     * uniquf dbnonidbl form.  Evfry pbthnbmf thbt dfnotfs b nonfxistfnt filf
     * or dirfdtory blso hbs b uniquf dbnonidbl form.  Thf dbnonidbl form of
     * thf pbthnbmf of b nonfxistfnt filf or dirfdtory mby bf difffrfnt from
     * thf dbnonidbl form of thf sbmf pbthnbmf bftfr thf filf or dirfdtory is
     * drfbtfd.  Similbrly, thf dbnonidbl form of thf pbthnbmf of bn fxisting
     * filf or dirfdtory mby bf difffrfnt from thf dbnonidbl form of thf sbmf
     * pbthnbmf bftfr thf filf or dirfdtory is dflftfd.
     *
     * @rfturn  Thf dbnonidbl pbthnbmf string dfnoting thf sbmf filf or
     *          dirfdtory bs this bbstrbdt pbthnbmf
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs, whidh is possiblf bfdbusf thf
     *          donstrudtion of thf dbnonidbl pbthnbmf mby rfquirf
     *          filfsystfm qufrifs
     *
     * @throws  SfdurityExdfption
     *          If b rfquirfd systfm propfrty vbluf dbnnot bf bddfssfd, or
     *          if b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd}</dodf> mfthod dfnifs
     *          rfbd bddfss to thf filf
     *
     * @sindf   1.1
     * @sff     Pbth#toRfblPbth
     */
    publid String gftCbnonidblPbth() throws IOExdfption {
        if (isInvblid()) {
            throw nfw IOExdfption("Invblid filf pbth");
        }
        rfturn fs.dbnonidblizf(fs.rfsolvf(this));
    }

    /**
     * Rfturns thf dbnonidbl form of this bbstrbdt pbthnbmf.  Equivblfnt to
     * <dodf>nfw&nbsp;Filf(this.{@link #gftCbnonidblPbth})</dodf>.
     *
     * @rfturn  Thf dbnonidbl pbthnbmf string dfnoting thf sbmf filf or
     *          dirfdtory bs this bbstrbdt pbthnbmf
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurs, whidh is possiblf bfdbusf thf
     *          donstrudtion of thf dbnonidbl pbthnbmf mby rfquirf
     *          filfsystfm qufrifs
     *
     * @throws  SfdurityExdfption
     *          If b rfquirfd systfm propfrty vbluf dbnnot bf bddfssfd, or
     *          if b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd}</dodf> mfthod dfnifs
     *          rfbd bddfss to thf filf
     *
     * @sindf 1.2
     * @sff     Pbth#toRfblPbth
     */
    publid Filf gftCbnonidblFilf() throws IOExdfption {
        String dbnonPbth = gftCbnonidblPbth();
        rfturn nfw Filf(dbnonPbth, fs.prffixLfngth(dbnonPbth));
    }

    privbtf stbtid String slbshify(String pbth, boolfbn isDirfdtory) {
        String p = pbth;
        if (Filf.sfpbrbtorChbr != '/')
            p = p.rfplbdf(Filf.sfpbrbtorChbr, '/');
        if (!p.stbrtsWith("/"))
            p = "/" + p;
        if (!p.fndsWith("/") && isDirfdtory)
            p = p + "/";
        rfturn p;
    }

    /**
     * Convfrts this bbstrbdt pbthnbmf into b <dodf>filf:</dodf> URL.  Thf
     * fxbdt form of thf URL is systfm-dfpfndfnt.  If it dbn bf dftfrminfd thbt
     * thf filf dfnotfd by this bbstrbdt pbthnbmf is b dirfdtory, thfn thf
     * rfsulting URL will fnd with b slbsh.
     *
     * @rfturn  A URL objfdt rfprfsfnting thf fquivblfnt filf URL
     *
     * @throws  MblformfdURLExdfption
     *          If thf pbth dbnnot bf pbrsfd bs b URL
     *
     * @sff     #toURI()
     * @sff     jbvb.nft.URI
     * @sff     jbvb.nft.URI#toURL()
     * @sff     jbvb.nft.URL
     * @sindf   1.2
     *
     * @dfprfdbtfd This mfthod dofs not butombtidblly fsdbpf dhbrbdtfrs thbt
     * brf illfgbl in URLs.  It is rfdommfndfd thbt nfw dodf donvfrt bn
     * bbstrbdt pbthnbmf into b URL by first donvfrting it into b URI, vib thf
     * {@link #toURI() toURI} mfthod, bnd thfn donvfrting thf URI into b URL
     * vib thf {@link jbvb.nft.URI#toURL() URI.toURL} mfthod.
     */
    @Dfprfdbtfd
    publid URL toURL() throws MblformfdURLExdfption {
        if (isInvblid()) {
            throw nfw MblformfdURLExdfption("Invblid filf pbth");
        }
        rfturn nfw URL("filf", "", slbshify(gftAbsolutfPbth(), isDirfdtory()));
    }

    /**
     * Construdts b <tt>filf:</tt> URI thbt rfprfsfnts this bbstrbdt pbthnbmf.
     *
     * <p> Thf fxbdt form of thf URI is systfm-dfpfndfnt.  If it dbn bf
     * dftfrminfd thbt thf filf dfnotfd by this bbstrbdt pbthnbmf is b
     * dirfdtory, thfn thf rfsulting URI will fnd with b slbsh.
     *
     * <p> For b givfn bbstrbdt pbthnbmf <i>f</i>, it is gubrbntffd thbt
     *
     * <blodkquotf><tt>
     * nfw {@link #Filf(jbvb.nft.URI) Filf}(</tt><i>&nbsp;f</i><tt>.toURI()).fqubls(</tt><i>&nbsp;f</i><tt>.{@link #gftAbsolutfFilf() gftAbsolutfFilf}())
     * </tt></blodkquotf>
     *
     * so long bs thf originbl bbstrbdt pbthnbmf, thf URI, bnd thf nfw bbstrbdt
     * pbthnbmf brf bll drfbtfd in (possibly difffrfnt invodbtions of) thf sbmf
     * Jbvb virtubl mbdhinf.  Duf to thf systfm-dfpfndfnt nbturf of bbstrbdt
     * pbthnbmfs, howfvfr, this rflbtionship typidblly dofs not hold whfn b
     * <tt>filf:</tt> URI thbt is drfbtfd in b virtubl mbdhinf on onf opfrbting
     * systfm is donvfrtfd into bn bbstrbdt pbthnbmf in b virtubl mbdhinf on b
     * difffrfnt opfrbting systfm.
     *
     * <p> Notf thbt whfn this bbstrbdt pbthnbmf rfprfsfnts b UNC pbthnbmf thfn
     * bll domponfnts of thf UNC (indluding thf sfrvfr nbmf domponfnt) brf fndodfd
     * in thf {@dodf URI} pbth. Thf buthority domponfnt is undffinfd, mfbning
     * thbt it is rfprfsfntfd bs {@dodf null}. Thf {@link Pbth} dlbss dffinfs thf
     * {@link Pbth#toUri toUri} mfthod to fndodf thf sfrvfr nbmf in thf buthority
     * domponfnt of thf rfsulting {@dodf URI}. Thf {@link #toPbth toPbth} mfthod
     * mby bf usfd to obtbin b {@dodf Pbth} rfprfsfnting this bbstrbdt pbthnbmf.
     *
     * @rfturn  An bbsolutf, hifrbrdhidbl URI with b sdhfmf fqubl to
     *          <tt>"filf"</tt>, b pbth rfprfsfnting this bbstrbdt pbthnbmf,
     *          bnd undffinfd buthority, qufry, bnd frbgmfnt domponfnts
     * @throws SfdurityExdfption If b rfquirfd systfm propfrty vbluf dbnnot
     * bf bddfssfd.
     *
     * @sff #Filf(jbvb.nft.URI)
     * @sff jbvb.nft.URI
     * @sff jbvb.nft.URI#toURL()
     * @sindf 1.4
     */
    publid URI toURI() {
        try {
            Filf f = gftAbsolutfFilf();
            String sp = slbshify(f.gftPbth(), f.isDirfdtory());
            if (sp.stbrtsWith("//"))
                sp = "//" + sp;
            rfturn nfw URI("filf", null, sp, null);
        } dbtdh (URISyntbxExdfption x) {
            throw nfw Error(x);         // Cbn't hbppfn
        }
    }


    /* -- Attributf bddfssors -- */

    /**
     * Tfsts whfthfr thf bpplidbtion dbn rfbd thf filf dfnotfd by this
     * bbstrbdt pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf
     * Jbvb virtubl mbdhinf with spfdibl privilfgfs thbt bllow it to rfbd
     * filfs thbt brf mbrkfd bs unrfbdbblf. Consfqufntly this mfthod mby rfturn
     * {@dodf truf} fvfn though thf filf dofs not hbvf rfbd pfrmissions.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf spfdififd by this
     *          bbstrbdt pbthnbmf fxists <fm>bnd</fm> dbn bf rfbd by thf
     *          bpplidbtion; <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     */
    publid boolfbn dbnRfbd() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.dhfdkAddfss(this, FilfSystfm.ACCESS_READ);
    }

    /**
     * Tfsts whfthfr thf bpplidbtion dbn modify thf filf dfnotfd by this
     * bbstrbdt pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf
     * Jbvb virtubl mbdhinf with spfdibl privilfgfs thbt bllow it to modify
     * filfs thbt brf mbrkfd rfbd-only. Consfqufntly this mfthod mby rfturn
     * {@dodf truf} fvfn though thf filf is mbrkfd rfbd-only.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf systfm bdtublly
     *          dontbins b filf dfnotfd by this bbstrbdt pbthnbmf <fm>bnd</fm>
     *          thf bpplidbtion is bllowfd to writf to thf filf;
     *          <dodf>fblsf</dodf> othfrwisf.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     */
    publid boolfbn dbnWritf() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.dhfdkAddfss(this, FilfSystfm.ACCESS_WRITE);
    }

    /**
     * Tfsts whfthfr thf filf or dirfdtory dfnotfd by this bbstrbdt pbthnbmf
     * fxists.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf or dirfdtory dfnotfd
     *          by this bbstrbdt pbthnbmf fxists; <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf or dirfdtory
     */
    publid boolfbn fxists() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn ((fs.gftBoolfbnAttributfs(this) & FilfSystfm.BA_EXISTS) != 0);
    }

    /**
     * Tfsts whfthfr thf filf dfnotfd by this bbstrbdt pbthnbmf is b
     * dirfdtory.
     *
     * <p> Whfrf it is rfquirfd to distinguish bn I/O fxdfption from thf dbsf
     * thbt thf filf is not b dirfdtory, or whfrf sfvfrbl bttributfs of thf
     * sbmf filf brf rfquirfd bt thf sbmf timf, thfn thf {@link
     * jbvb.nio.filf.Filfs#rfbdAttributfs(Pbth,Clbss,LinkOption[])
     * Filfs.rfbdAttributfs} mfthod mby bf usfd.
     *
     * @rfturn <dodf>truf</dodf> if bnd only if thf filf dfnotfd by this
     *          bbstrbdt pbthnbmf fxists <fm>bnd</fm> is b dirfdtory;
     *          <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     */
    publid boolfbn isDirfdtory() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn ((fs.gftBoolfbnAttributfs(this) & FilfSystfm.BA_DIRECTORY)
                != 0);
    }

    /**
     * Tfsts whfthfr thf filf dfnotfd by this bbstrbdt pbthnbmf is b normbl
     * filf.  A filf is <fm>normbl</fm> if it is not b dirfdtory bnd, in
     * bddition, sbtisfifs othfr systfm-dfpfndfnt dritfrib.  Any non-dirfdtory
     * filf drfbtfd by b Jbvb bpplidbtion is gubrbntffd to bf b normbl filf.
     *
     * <p> Whfrf it is rfquirfd to distinguish bn I/O fxdfption from thf dbsf
     * thbt thf filf is not b normbl filf, or whfrf sfvfrbl bttributfs of thf
     * sbmf filf brf rfquirfd bt thf sbmf timf, thfn thf {@link
     * jbvb.nio.filf.Filfs#rfbdAttributfs(Pbth,Clbss,LinkOption[])
     * Filfs.rfbdAttributfs} mfthod mby bf usfd.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf dfnotfd by this
     *          bbstrbdt pbthnbmf fxists <fm>bnd</fm> is b normbl filf;
     *          <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     */
    publid boolfbn isFilf() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn ((fs.gftBoolfbnAttributfs(this) & FilfSystfm.BA_REGULAR) != 0);
    }

    /**
     * Tfsts whfthfr thf filf nbmfd by this bbstrbdt pbthnbmf is b hiddfn
     * filf.  Thf fxbdt dffinition of <fm>hiddfn</fm> is systfm-dfpfndfnt.  On
     * UNIX systfms, b filf is donsidfrfd to bf hiddfn if its nbmf bfgins with
     * b pfriod dhbrbdtfr (<dodf>'.'</dodf>).  On Midrosoft Windows systfms, b filf is
     * donsidfrfd to bf hiddfn if it hbs bffn mbrkfd bs sudh in thf filfsystfm.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf dfnotfd by this
     *          bbstrbdt pbthnbmf is hiddfn bddording to thf donvfntions of thf
     *          undfrlying plbtform
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     *
     * @sindf 1.2
     */
    publid boolfbn isHiddfn() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn ((fs.gftBoolfbnAttributfs(this) & FilfSystfm.BA_HIDDEN) != 0);
    }

    /**
     * Rfturns thf timf thbt thf filf dfnotfd by this bbstrbdt pbthnbmf wbs
     * lbst modififd.
     *
     * <p> Whfrf it is rfquirfd to distinguish bn I/O fxdfption from thf dbsf
     * whfrf {@dodf 0L} is rfturnfd, or whfrf sfvfrbl bttributfs of thf
     * sbmf filf brf rfquirfd bt thf sbmf timf, or whfrf thf timf of lbst
     * bddfss or thf drfbtion timf brf rfquirfd, thfn thf {@link
     * jbvb.nio.filf.Filfs#rfbdAttributfs(Pbth,Clbss,LinkOption[])
     * Filfs.rfbdAttributfs} mfthod mby bf usfd.
     *
     * @rfturn  A <dodf>long</dodf> vbluf rfprfsfnting thf timf thf filf wbs
     *          lbst modififd, mfbsurfd in millisfdonds sindf thf fpodh
     *          (00:00:00 GMT, Jbnubry 1, 1970), or <dodf>0L</dodf> if thf
     *          filf dofs not fxist or if bn I/O frror oddurs
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     */
    publid long lbstModififd() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn 0L;
        }
        rfturn fs.gftLbstModififdTimf(this);
    }

    /**
     * Rfturns thf lfngth of thf filf dfnotfd by this bbstrbdt pbthnbmf.
     * Thf rfturn vbluf is unspfdififd if this pbthnbmf dfnotfs b dirfdtory.
     *
     * <p> Whfrf it is rfquirfd to distinguish bn I/O fxdfption from thf dbsf
     * thbt {@dodf 0L} is rfturnfd, or whfrf sfvfrbl bttributfs of thf sbmf filf
     * brf rfquirfd bt thf sbmf timf, thfn thf {@link
     * jbvb.nio.filf.Filfs#rfbdAttributfs(Pbth,Clbss,LinkOption[])
     * Filfs.rfbdAttributfs} mfthod mby bf usfd.
     *
     * @rfturn  Thf lfngth, in bytfs, of thf filf dfnotfd by this bbstrbdt
     *          pbthnbmf, or <dodf>0L</dodf> if thf filf dofs not fxist.  Somf
     *          opfrbting systfms mby rfturn <dodf>0L</dodf> for pbthnbmfs
     *          dfnoting systfm-dfpfndfnt fntitifs sudh bs dfvidfs or pipfs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs rfbd bddfss to thf filf
     */
    publid long lfngth() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn 0L;
        }
        rfturn fs.gftLfngth(this);
    }


    /* -- Filf opfrbtions -- */

    /**
     * Atomidblly drfbtfs b nfw, fmpty filf nbmfd by this bbstrbdt pbthnbmf if
     * bnd only if b filf with this nbmf dofs not yft fxist.  Thf dhfdk for thf
     * fxistfndf of thf filf bnd thf drfbtion of thf filf if it dofs not fxist
     * brf b singlf opfrbtion thbt is btomid with rfspfdt to bll othfr
     * filfsystfm bdtivitifs thbt might bfffdt thf filf.
     * <P>
     * Notf: this mfthod should <i>not</i> bf usfd for filf-lodking, bs
     * thf rfsulting protodol dbnnot bf mbdf to work rflibbly. Thf
     * {@link jbvb.nio.dhbnnfls.FilfLodk FilfLodk}
     * fbdility should bf usfd instfbd.
     *
     * @rfturn  <dodf>truf</dodf> if thf nbmfd filf dofs not fxist bnd wbs
     *          suddfssfully drfbtfd; <dodf>fblsf</dodf> if thf nbmfd filf
     *          blrfbdy fxists
     *
     * @throws  IOExdfption
     *          If bn I/O frror oddurrfd
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.2
     */
    publid boolfbn drfbtfNfwFilf() throws IOExdfption {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) sfdurity.dhfdkWritf(pbth);
        if (isInvblid()) {
            throw nfw IOExdfption("Invblid filf pbth");
        }
        rfturn fs.drfbtfFilfExdlusivfly(pbth);
    }

    /**
     * Dflftfs thf filf or dirfdtory dfnotfd by this bbstrbdt pbthnbmf.  If
     * this pbthnbmf dfnotfs b dirfdtory, thfn thf dirfdtory must bf fmpty in
     * ordfr to bf dflftfd.
     *
     * <p> Notf thbt thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs thf {@link
     * jbvb.nio.filf.Filfs#dflftf(Pbth) dflftf} mfthod to throw bn {@link IOExdfption}
     * whfn b filf dbnnot bf dflftfd. This is usfful for frror rfporting bnd to
     * dibgnosf why b filf dbnnot bf dflftfd.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf filf or dirfdtory is
     *          suddfssfully dflftfd; <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkDflftf}</dodf> mfthod dfnifs
     *          dflftf bddfss to thf filf
     */
    publid boolfbn dflftf() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkDflftf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.dflftf(this);
    }

    /**
     * Rfqufsts thbt thf filf or dirfdtory dfnotfd by this bbstrbdt
     * pbthnbmf bf dflftfd whfn thf virtubl mbdhinf tfrminbtfs.
     * Filfs (or dirfdtorifs) brf dflftfd in thf rfvfrsf ordfr thbt
     * thfy brf rfgistfrfd. Invoking this mfthod to dflftf b filf or
     * dirfdtory thbt is blrfbdy rfgistfrfd for dflftion hbs no ffffdt.
     * Dflftion will bf bttfmptfd only for normbl tfrminbtion of thf
     * virtubl mbdhinf, bs dffinfd by thf Jbvb Lbngubgf Spfdifidbtion.
     *
     * <p> Ondf dflftion hbs bffn rfqufstfd, it is not possiblf to dbndfl thf
     * rfqufst.  This mfthod should thfrfforf bf usfd with dbrf.
     *
     * <P>
     * Notf: this mfthod should <i>not</i> bf usfd for filf-lodking, bs
     * thf rfsulting protodol dbnnot bf mbdf to work rflibbly. Thf
     * {@link jbvb.nio.dhbnnfls.FilfLodk FilfLodk}
     * fbdility should bf usfd instfbd.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkDflftf}</dodf> mfthod dfnifs
     *          dflftf bddfss to thf filf
     *
     * @sff #dflftf
     *
     * @sindf 1.2
     */
    publid void dflftfOnExit() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkDflftf(pbth);
        }
        if (isInvblid()) {
            rfturn;
        }
        DflftfOnExitHook.bdd(pbth);
    }

    /**
     * Rfturns bn brrby of strings nbming thf filfs bnd dirfdtorifs in thf
     * dirfdtory dfnotfd by this bbstrbdt pbthnbmf.
     *
     * <p> If this bbstrbdt pbthnbmf dofs not dfnotf b dirfdtory, thfn this
     * mfthod rfturns {@dodf null}.  Othfrwisf bn brrby of strings is
     * rfturnfd, onf for fbdh filf or dirfdtory in thf dirfdtory.  Nbmfs
     * dfnoting thf dirfdtory itsflf bnd thf dirfdtory's pbrfnt dirfdtory brf
     * not indludfd in thf rfsult.  Ebdh string is b filf nbmf rbthfr thbn b
     * domplftf pbth.
     *
     * <p> Thfrf is no gubrbntff thbt thf nbmf strings in thf rfsulting brrby
     * will bppfbr in bny spfdifid ordfr; thfy brf not, in pbrtidulbr,
     * gubrbntffd to bppfbr in blphbbftidbl ordfr.
     *
     * <p> Notf thbt thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs thf {@link
     * jbvb.nio.filf.Filfs#nfwDirfdtoryStrfbm(Pbth) nfwDirfdtoryStrfbm} mfthod to
     * opfn b dirfdtory bnd itfrbtf ovfr thf nbmfs of thf filfs in thf dirfdtory.
     * This mby usf lfss rfsourdfs whfn working with vfry lbrgf dirfdtorifs, bnd
     * mby bf morf rfsponsivf whfn working with rfmotf dirfdtorifs.
     *
     * @rfturn  An brrby of strings nbming thf filfs bnd dirfdtorifs in thf
     *          dirfdtory dfnotfd by this bbstrbdt pbthnbmf.  Thf brrby will bf
     *          fmpty if thf dirfdtory is fmpty.  Rfturns {@dodf null} if
     *          this bbstrbdt pbthnbmf dofs not dfnotf b dirfdtory, or if bn
     *          I/O frror oddurs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its {@link
     *          SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to
     *          thf dirfdtory
     */
    publid String[] list() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn null;
        }
        rfturn fs.list(this);
    }

    /**
     * Rfturns bn brrby of strings nbming thf filfs bnd dirfdtorifs in thf
     * dirfdtory dfnotfd by this bbstrbdt pbthnbmf thbt sbtisfy thf spfdififd
     * filtfr.  Thf bfhbvior of this mfthod is thf sbmf bs thbt of thf
     * {@link #list()} mfthod, fxdfpt thbt thf strings in thf rfturnfd brrby
     * must sbtisfy thf filtfr.  If thf givfn {@dodf filtfr} is {@dodf null}
     * thfn bll nbmfs brf bddfptfd.  Othfrwisf, b nbmf sbtisfifs thf filtfr if
     * bnd only if thf vbluf {@dodf truf} rfsults whfn thf {@link
     * FilfnbmfFiltfr#bddfpt FilfnbmfFiltfr.bddfpt(Filf,&nbsp;String)} mfthod
     * of thf filtfr is invokfd on this bbstrbdt pbthnbmf bnd thf nbmf of b
     * filf or dirfdtory in thf dirfdtory thbt it dfnotfs.
     *
     * @pbrbm  filtfr
     *         A filfnbmf filtfr
     *
     * @rfturn  An brrby of strings nbming thf filfs bnd dirfdtorifs in thf
     *          dirfdtory dfnotfd by this bbstrbdt pbthnbmf thbt wfrf bddfptfd
     *          by thf givfn {@dodf filtfr}.  Thf brrby will bf fmpty if thf
     *          dirfdtory is fmpty or if no nbmfs wfrf bddfptfd by thf filtfr.
     *          Rfturns {@dodf null} if this bbstrbdt pbthnbmf dofs not dfnotf
     *          b dirfdtory, or if bn I/O frror oddurs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its {@link
     *          SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to
     *          thf dirfdtory
     *
     * @sff jbvb.nio.filf.Filfs#nfwDirfdtoryStrfbm(Pbth,String)
     */
    publid String[] list(FilfnbmfFiltfr filtfr) {
        String nbmfs[] = list();
        if ((nbmfs == null) || (filtfr == null)) {
            rfturn nbmfs;
        }
        List<String> v = nfw ArrbyList<>();
        for (int i = 0 ; i < nbmfs.lfngth ; i++) {
            if (filtfr.bddfpt(this, nbmfs[i])) {
                v.bdd(nbmfs[i]);
            }
        }
        rfturn v.toArrby(nfw String[v.sizf()]);
    }

    /**
     * Rfturns bn brrby of bbstrbdt pbthnbmfs dfnoting thf filfs in thf
     * dirfdtory dfnotfd by this bbstrbdt pbthnbmf.
     *
     * <p> If this bbstrbdt pbthnbmf dofs not dfnotf b dirfdtory, thfn this
     * mfthod rfturns {@dodf null}.  Othfrwisf bn brrby of {@dodf Filf} objfdts
     * is rfturnfd, onf for fbdh filf or dirfdtory in thf dirfdtory.  Pbthnbmfs
     * dfnoting thf dirfdtory itsflf bnd thf dirfdtory's pbrfnt dirfdtory brf
     * not indludfd in thf rfsult.  Ebdh rfsulting bbstrbdt pbthnbmf is
     * donstrudtfd from this bbstrbdt pbthnbmf using thf {@link #Filf(Filf,
     * String) Filf(Filf,&nbsp;String)} donstrudtor.  Thfrfforf if this
     * pbthnbmf is bbsolutf thfn fbdh rfsulting pbthnbmf is bbsolutf; if this
     * pbthnbmf is rflbtivf thfn fbdh rfsulting pbthnbmf will bf rflbtivf to
     * thf sbmf dirfdtory.
     *
     * <p> Thfrf is no gubrbntff thbt thf nbmf strings in thf rfsulting brrby
     * will bppfbr in bny spfdifid ordfr; thfy brf not, in pbrtidulbr,
     * gubrbntffd to bppfbr in blphbbftidbl ordfr.
     *
     * <p> Notf thbt thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs thf {@link
     * jbvb.nio.filf.Filfs#nfwDirfdtoryStrfbm(Pbth) nfwDirfdtoryStrfbm} mfthod
     * to opfn b dirfdtory bnd itfrbtf ovfr thf nbmfs of thf filfs in thf
     * dirfdtory. This mby usf lfss rfsourdfs whfn working with vfry lbrgf
     * dirfdtorifs.
     *
     * @rfturn  An brrby of bbstrbdt pbthnbmfs dfnoting thf filfs bnd
     *          dirfdtorifs in thf dirfdtory dfnotfd by this bbstrbdt pbthnbmf.
     *          Thf brrby will bf fmpty if thf dirfdtory is fmpty.  Rfturns
     *          {@dodf null} if this bbstrbdt pbthnbmf dofs not dfnotf b
     *          dirfdtory, or if bn I/O frror oddurs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its {@link
     *          SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to
     *          thf dirfdtory
     *
     * @sindf  1.2
     */
    publid Filf[] listFilfs() {
        String[] ss = list();
        if (ss == null) rfturn null;
        int n = ss.lfngth;
        Filf[] fs = nfw Filf[n];
        for (int i = 0; i < n; i++) {
            fs[i] = nfw Filf(ss[i], this);
        }
        rfturn fs;
    }

    /**
     * Rfturns bn brrby of bbstrbdt pbthnbmfs dfnoting thf filfs bnd
     * dirfdtorifs in thf dirfdtory dfnotfd by this bbstrbdt pbthnbmf thbt
     * sbtisfy thf spfdififd filtfr.  Thf bfhbvior of this mfthod is thf sbmf
     * bs thbt of thf {@link #listFilfs()} mfthod, fxdfpt thbt thf pbthnbmfs in
     * thf rfturnfd brrby must sbtisfy thf filtfr.  If thf givfn {@dodf filtfr}
     * is {@dodf null} thfn bll pbthnbmfs brf bddfptfd.  Othfrwisf, b pbthnbmf
     * sbtisfifs thf filtfr if bnd only if thf vbluf {@dodf truf} rfsults whfn
     * thf {@link FilfnbmfFiltfr#bddfpt
     * FilfnbmfFiltfr.bddfpt(Filf,&nbsp;String)} mfthod of thf filtfr is
     * invokfd on this bbstrbdt pbthnbmf bnd thf nbmf of b filf or dirfdtory in
     * thf dirfdtory thbt it dfnotfs.
     *
     * @pbrbm  filtfr
     *         A filfnbmf filtfr
     *
     * @rfturn  An brrby of bbstrbdt pbthnbmfs dfnoting thf filfs bnd
     *          dirfdtorifs in thf dirfdtory dfnotfd by this bbstrbdt pbthnbmf.
     *          Thf brrby will bf fmpty if thf dirfdtory is fmpty.  Rfturns
     *          {@dodf null} if this bbstrbdt pbthnbmf dofs not dfnotf b
     *          dirfdtory, or if bn I/O frror oddurs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its {@link
     *          SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to
     *          thf dirfdtory
     *
     * @sindf  1.2
     * @sff jbvb.nio.filf.Filfs#nfwDirfdtoryStrfbm(Pbth,String)
     */
    publid Filf[] listFilfs(FilfnbmfFiltfr filtfr) {
        String ss[] = list();
        if (ss == null) rfturn null;
        ArrbyList<Filf> filfs = nfw ArrbyList<>();
        for (String s : ss)
            if ((filtfr == null) || filtfr.bddfpt(this, s))
                filfs.bdd(nfw Filf(s, this));
        rfturn filfs.toArrby(nfw Filf[filfs.sizf()]);
    }

    /**
     * Rfturns bn brrby of bbstrbdt pbthnbmfs dfnoting thf filfs bnd
     * dirfdtorifs in thf dirfdtory dfnotfd by this bbstrbdt pbthnbmf thbt
     * sbtisfy thf spfdififd filtfr.  Thf bfhbvior of this mfthod is thf sbmf
     * bs thbt of thf {@link #listFilfs()} mfthod, fxdfpt thbt thf pbthnbmfs in
     * thf rfturnfd brrby must sbtisfy thf filtfr.  If thf givfn {@dodf filtfr}
     * is {@dodf null} thfn bll pbthnbmfs brf bddfptfd.  Othfrwisf, b pbthnbmf
     * sbtisfifs thf filtfr if bnd only if thf vbluf {@dodf truf} rfsults whfn
     * thf {@link FilfFiltfr#bddfpt FilfFiltfr.bddfpt(Filf)} mfthod of thf
     * filtfr is invokfd on thf pbthnbmf.
     *
     * @pbrbm  filtfr
     *         A filf filtfr
     *
     * @rfturn  An brrby of bbstrbdt pbthnbmfs dfnoting thf filfs bnd
     *          dirfdtorifs in thf dirfdtory dfnotfd by this bbstrbdt pbthnbmf.
     *          Thf brrby will bf fmpty if thf dirfdtory is fmpty.  Rfturns
     *          {@dodf null} if this bbstrbdt pbthnbmf dofs not dfnotf b
     *          dirfdtory, or if bn I/O frror oddurs.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its {@link
     *          SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to
     *          thf dirfdtory
     *
     * @sindf  1.2
     * @sff jbvb.nio.filf.Filfs#nfwDirfdtoryStrfbm(Pbth,jbvb.nio.filf.DirfdtoryStrfbm.Filtfr)
     */
    publid Filf[] listFilfs(FilfFiltfr filtfr) {
        String ss[] = list();
        if (ss == null) rfturn null;
        ArrbyList<Filf> filfs = nfw ArrbyList<>();
        for (String s : ss) {
            Filf f = nfw Filf(s, this);
            if ((filtfr == null) || filtfr.bddfpt(f))
                filfs.bdd(f);
        }
        rfturn filfs.toArrby(nfw Filf[filfs.sizf()]);
    }

    /**
     * Crfbtfs thf dirfdtory nbmfd by this bbstrbdt pbthnbmf.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf dirfdtory wbs
     *          drfbtfd; <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dofs not pfrmit thf nbmfd dirfdtory to bf drfbtfd
     */
    publid boolfbn mkdir() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.drfbtfDirfdtory(this);
    }

    /**
     * Crfbtfs thf dirfdtory nbmfd by this bbstrbdt pbthnbmf, indluding bny
     * nfdfssbry but nonfxistfnt pbrfnt dirfdtorifs.  Notf thbt if this
     * opfrbtion fbils it mby hbvf suddffdfd in drfbting somf of thf nfdfssbry
     * pbrfnt dirfdtorifs.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf dirfdtory wbs drfbtfd,
     *          blong with bll nfdfssbry pbrfnt dirfdtorifs; <dodf>fblsf</dodf>
     *          othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkRfbd(jbvb.lbng.String)}</dodf>
     *          mfthod dofs not pfrmit vfrifidbtion of thf fxistfndf of thf
     *          nbmfd dirfdtory bnd bll nfdfssbry pbrfnt dirfdtorifs; or if
     *          thf <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dofs not pfrmit thf nbmfd dirfdtory bnd bll nfdfssbry
     *          pbrfnt dirfdtorifs to bf drfbtfd
     */
    publid boolfbn mkdirs() {
        if (fxists()) {
            rfturn fblsf;
        }
        if (mkdir()) {
            rfturn truf;
        }
        Filf dbnonFilf = null;
        try {
            dbnonFilf = gftCbnonidblFilf();
        } dbtdh (IOExdfption f) {
            rfturn fblsf;
        }

        Filf pbrfnt = dbnonFilf.gftPbrfntFilf();
        rfturn (pbrfnt != null && (pbrfnt.mkdirs() || pbrfnt.fxists()) &&
                dbnonFilf.mkdir());
    }

    /**
     * Rfnbmfs thf filf dfnotfd by this bbstrbdt pbthnbmf.
     *
     * <p> Mbny bspfdts of thf bfhbvior of this mfthod brf inhfrfntly
     * plbtform-dfpfndfnt: Thf rfnbmf opfrbtion might not bf bblf to movf b
     * filf from onf filfsystfm to bnothfr, it might not bf btomid, bnd it
     * might not suddffd if b filf with thf dfstinbtion bbstrbdt pbthnbmf
     * blrfbdy fxists.  Thf rfturn vbluf should blwbys bf dhfdkfd to mbkf surf
     * thbt thf rfnbmf opfrbtion wbs suddfssful.
     *
     * <p> Notf thbt thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs thf {@link
     * jbvb.nio.filf.Filfs#movf movf} mfthod to movf or rfnbmf b filf in b
     * plbtform indfpfndfnt mbnnfr.
     *
     * @pbrbm  dfst  Thf nfw bbstrbdt pbthnbmf for thf nbmfd filf
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf rfnbming suddffdfd;
     *          <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to fithfr thf old or nfw pbthnbmfs
     *
     * @throws  NullPointfrExdfption
     *          If pbrbmftfr <dodf>dfst</dodf> is <dodf>null</dodf>
     */
    publid boolfbn rfnbmfTo(Filf dfst) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
            sfdurity.dhfdkWritf(dfst.pbth);
        }
        if (dfst == null) {
            throw nfw NullPointfrExdfption();
        }
        if (this.isInvblid() || dfst.isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.rfnbmf(this, dfst);
    }

    /**
     * Sfts thf lbst-modififd timf of thf filf or dirfdtory nbmfd by this
     * bbstrbdt pbthnbmf.
     *
     * <p> All plbtforms support filf-modifidbtion timfs to thf nfbrfst sfdond,
     * but somf providf morf prfdision.  Thf brgumfnt will bf trundbtfd to fit
     * thf supportfd prfdision.  If thf opfrbtion suddffds bnd no intfrvfning
     * opfrbtions on thf filf tbkf plbdf, thfn thf nfxt invodbtion of thf
     * <dodf>{@link #lbstModififd}</dodf> mfthod will rfturn thf (possibly
     * trundbtfd) <dodf>timf</dodf> brgumfnt thbt wbs pbssfd to this mfthod.
     *
     * @pbrbm  timf  Thf nfw lbst-modififd timf, mfbsurfd in millisfdonds sindf
     *               thf fpodh (00:00:00 GMT, Jbnubry 1, 1970)
     *
     * @rfturn <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd;
     *          <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  IllfgblArgumfntExdfption  If thf brgumfnt is nfgbtivf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf nbmfd filf
     *
     * @sindf 1.2
     */
    publid boolfbn sftLbstModififd(long timf) {
        if (timf < 0) throw nfw IllfgblArgumfntExdfption("Nfgbtivf timf");
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.sftLbstModififdTimf(this, timf);
    }

    /**
     * Mbrks thf filf or dirfdtory nbmfd by this bbstrbdt pbthnbmf so thbt
     * only rfbd opfrbtions brf bllowfd. Aftfr invoking this mfthod thf filf
     * or dirfdtory will not dhbngf until it is fithfr dflftfd or mbrkfd
     * to bllow writf bddfss. On somf plbtforms it mby bf possiblf to stbrt thf
     * Jbvb virtubl mbdhinf with spfdibl privilfgfs thbt bllow it to modify
     * filfs thbt brf mbrkfd rfbd-only. Whfthfr or not b rfbd-only filf or
     * dirfdtory mby bf dflftfd dfpfnds upon thf undfrlying systfm.
     *
     * @rfturn <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd;
     *          <dodf>fblsf</dodf> othfrwisf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf nbmfd filf
     *
     * @sindf 1.2
     */
    publid boolfbn sftRfbdOnly() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.sftRfbdOnly(this);
    }

    /**
     * Sfts thf ownfr's or fvfrybody's writf pfrmission for this bbstrbdt
     * pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb virtubl
     * mbdhinf with spfdibl privilfgfs thbt bllow it to modify filfs thbt
     * disbllow writf opfrbtions.
     *
     * <p> Thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs mfthods thbt opfrbtf on
     * filf bttributfs indluding filf pfrmissions. This mby bf usfd whfn finfr
     * mbnipulbtion of filf pfrmissions is rfquirfd.
     *
     * @pbrbm   writbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow writf
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow writf opfrbtions
     *
     * @pbrbm   ownfrOnly
     *          If <dodf>truf</dodf>, thf writf pfrmission bpplifs only to thf
     *          ownfr's writf pfrmission; othfrwisf, it bpplifs to fvfrybody.  If
     *          thf undfrlying filf systfm dbn not distinguish thf ownfr's writf
     *          pfrmission from thbt of othfrs, thfn thf pfrmission will bpply to
     *          fvfrybody, rfgbrdlfss of this vbluf.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd. Thf
     *          opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to dhbngf
     *          thf bddfss pfrmissions of this bbstrbdt pbthnbmf.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf nbmfd filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftWritbblf(boolfbn writbblf, boolfbn ownfrOnly) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.sftPfrmission(this, FilfSystfm.ACCESS_WRITE, writbblf, ownfrOnly);
    }

    /**
     * A donvfnifndf mfthod to sft thf ownfr's writf pfrmission for this bbstrbdt
     * pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb virtubl
     * mbdhinf with spfdibl privilfgfs thbt bllow it to modify filfs thbt
     * disbllow writf opfrbtions.
     *
     * <p> An invodbtion of this mfthod of thf form <tt>filf.sftWritbblf(brg)</tt>
     * bfhbvfs in fxbdtly thf sbmf wby bs thf invodbtion
     *
     * <prf>
     *     filf.sftWritbblf(brg, truf) </prf>
     *
     * @pbrbm   writbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow writf
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow writf opfrbtions
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd.  Thf
     *          opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to
     *          dhbngf thf bddfss pfrmissions of this bbstrbdt pbthnbmf.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftWritbblf(boolfbn writbblf) {
        rfturn sftWritbblf(writbblf, truf);
    }

    /**
     * Sfts thf ownfr's or fvfrybody's rfbd pfrmission for this bbstrbdt
     * pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb virtubl
     * mbdhinf with spfdibl privilfgfs thbt bllow it to rfbd filfs thbt brf
     * mbrkfd bs unrfbdbblf.
     *
     * <p> Thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs mfthods thbt opfrbtf on
     * filf bttributfs indluding filf pfrmissions. This mby bf usfd whfn finfr
     * mbnipulbtion of filf pfrmissions is rfquirfd.
     *
     * @pbrbm   rfbdbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow rfbd
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow rfbd opfrbtions
     *
     * @pbrbm   ownfrOnly
     *          If <dodf>truf</dodf>, thf rfbd pfrmission bpplifs only to thf
     *          ownfr's rfbd pfrmission; othfrwisf, it bpplifs to fvfrybody.  If
     *          thf undfrlying filf systfm dbn not distinguish thf ownfr's rfbd
     *          pfrmission from thbt of othfrs, thfn thf pfrmission will bpply to
     *          fvfrybody, rfgbrdlfss of this vbluf.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd.  Thf
     *          opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to
     *          dhbngf thf bddfss pfrmissions of this bbstrbdt pbthnbmf.  If
     *          <dodf>rfbdbblf</dodf> is <dodf>fblsf</dodf> bnd thf undfrlying
     *          filf systfm dofs not implfmfnt b rfbd pfrmission, thfn thf
     *          opfrbtion will fbil.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftRfbdbblf(boolfbn rfbdbblf, boolfbn ownfrOnly) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.sftPfrmission(this, FilfSystfm.ACCESS_READ, rfbdbblf, ownfrOnly);
    }

    /**
     * A donvfnifndf mfthod to sft thf ownfr's rfbd pfrmission for this bbstrbdt
     * pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb virtubl
     * mbdhinf with spfdibl privilfgfs thbt bllow it to rfbd filfs thbt thbt brf
     * mbrkfd bs unrfbdbblf.
     *
     * <p>An invodbtion of this mfthod of thf form <tt>filf.sftRfbdbblf(brg)</tt>
     * bfhbvfs in fxbdtly thf sbmf wby bs thf invodbtion
     *
     * <prf>
     *     filf.sftRfbdbblf(brg, truf) </prf>
     *
     * @pbrbm  rfbdbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow rfbd
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow rfbd opfrbtions
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd.  Thf
     *          opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to
     *          dhbngf thf bddfss pfrmissions of this bbstrbdt pbthnbmf.  If
     *          <dodf>rfbdbblf</dodf> is <dodf>fblsf</dodf> bnd thf undfrlying
     *          filf systfm dofs not implfmfnt b rfbd pfrmission, thfn thf
     *          opfrbtion will fbil.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftRfbdbblf(boolfbn rfbdbblf) {
        rfturn sftRfbdbblf(rfbdbblf, truf);
    }

    /**
     * Sfts thf ownfr's or fvfrybody's fxfdutf pfrmission for this bbstrbdt
     * pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb virtubl
     * mbdhinf with spfdibl privilfgfs thbt bllow it to fxfdutf filfs thbt brf
     * not mbrkfd fxfdutbblf.
     *
     * <p> Thf {@link jbvb.nio.filf.Filfs} dlbss dffinfs mfthods thbt opfrbtf on
     * filf bttributfs indluding filf pfrmissions. This mby bf usfd whfn finfr
     * mbnipulbtion of filf pfrmissions is rfquirfd.
     *
     * @pbrbm   fxfdutbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow fxfdutf
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow fxfdutf opfrbtions
     *
     * @pbrbm   ownfrOnly
     *          If <dodf>truf</dodf>, thf fxfdutf pfrmission bpplifs only to thf
     *          ownfr's fxfdutf pfrmission; othfrwisf, it bpplifs to fvfrybody.
     *          If thf undfrlying filf systfm dbn not distinguish thf ownfr's
     *          fxfdutf pfrmission from thbt of othfrs, thfn thf pfrmission will
     *          bpply to fvfrybody, rfgbrdlfss of this vbluf.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd.  Thf
     *          opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to
     *          dhbngf thf bddfss pfrmissions of this bbstrbdt pbthnbmf.  If
     *          <dodf>fxfdutbblf</dodf> is <dodf>fblsf</dodf> bnd thf undfrlying
     *          filf systfm dofs not implfmfnt bn fxfdutf pfrmission, thfn thf
     *          opfrbtion will fbil.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftExfdutbblf(boolfbn fxfdutbblf, boolfbn ownfrOnly) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkWritf(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.sftPfrmission(this, FilfSystfm.ACCESS_EXECUTE, fxfdutbblf, ownfrOnly);
    }

    /**
     * A donvfnifndf mfthod to sft thf ownfr's fxfdutf pfrmission for this
     * bbstrbdt pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf Jbvb
     * virtubl mbdhinf with spfdibl privilfgfs thbt bllow it to fxfdutf filfs
     * thbt brf not mbrkfd fxfdutbblf.
     *
     * <p>An invodbtion of this mfthod of thf form <tt>filf.sftExdutbblf(brg)</tt>
     * bfhbvfs in fxbdtly thf sbmf wby bs thf invodbtion
     *
     * <prf>
     *     filf.sftExfdutbblf(brg, truf) </prf>
     *
     * @pbrbm   fxfdutbblf
     *          If <dodf>truf</dodf>, sfts thf bddfss pfrmission to bllow fxfdutf
     *          opfrbtions; if <dodf>fblsf</dodf> to disbllow fxfdutf opfrbtions
     *
     * @rfturn   <dodf>truf</dodf> if bnd only if thf opfrbtion suddffdfd.  Thf
     *           opfrbtion will fbil if thf usfr dofs not hbvf pfrmission to
     *           dhbngf thf bddfss pfrmissions of this bbstrbdt pbthnbmf.  If
     *           <dodf>fxfdutbblf</dodf> is <dodf>fblsf</dodf> bnd thf undfrlying
     *           filf systfm dofs not implfmfnt bn fxfdutf pfrmission, thfn thf
     *           opfrbtion will fbil.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs writf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn sftExfdutbblf(boolfbn fxfdutbblf) {
        rfturn sftExfdutbblf(fxfdutbblf, truf);
    }

    /**
     * Tfsts whfthfr thf bpplidbtion dbn fxfdutf thf filf dfnotfd by this
     * bbstrbdt pbthnbmf. On somf plbtforms it mby bf possiblf to stbrt thf
     * Jbvb virtubl mbdhinf with spfdibl privilfgfs thbt bllow it to fxfdutf
     * filfs thbt brf not mbrkfd fxfdutbblf. Consfqufntly this mfthod mby rfturn
     * {@dodf truf} fvfn though thf filf dofs not hbvf fxfdutf pfrmissions.
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf bbstrbdt pbthnbmf fxists
     *          <fm>bnd</fm> thf bpplidbtion is bllowfd to fxfdutf thf filf
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkExfd(jbvb.lbng.String)}</dodf>
     *          mfthod dfnifs fxfdutf bddfss to thf filf
     *
     * @sindf 1.6
     */
    publid boolfbn dbnExfdutf() {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.dhfdkExfd(pbth);
        }
        if (isInvblid()) {
            rfturn fblsf;
        }
        rfturn fs.dhfdkAddfss(this, FilfSystfm.ACCESS_EXECUTE);
    }


    /* -- Filfsystfm intfrfbdf -- */

    /**
     * List thf bvbilbblf filfsystfm roots.
     *
     * <p> A pbrtidulbr Jbvb plbtform mby support zfro or morf
     * hifrbrdhidblly-orgbnizfd filf systfms.  Ebdh filf systfm hbs b
     * {@dodf root} dirfdtory from whidh bll othfr filfs in thbt filf systfm
     * dbn bf rfbdhfd.  Windows plbtforms, for fxbmplf, hbvf b root dirfdtory
     * for fbdh bdtivf drivf; UNIX plbtforms hbvf b singlf root dirfdtory,
     * nbmfly {@dodf "/"}.  Thf sft of bvbilbblf filfsystfm roots is bfffdtfd
     * by vbrious systfm-lfvfl opfrbtions sudh bs thf insfrtion or fjfdtion of
     * rfmovbblf mfdib bnd thf disdonnfdting or unmounting of physidbl or
     * virtubl disk drivfs.
     *
     * <p> This mfthod rfturns bn brrby of {@dodf Filf} objfdts thbt dfnotf thf
     * root dirfdtorifs of thf bvbilbblf filfsystfm roots.  It is gubrbntffd
     * thbt thf dbnonidbl pbthnbmf of bny filf physidblly prfsfnt on thf lodbl
     * mbdhinf will bfgin with onf of thf roots rfturnfd by this mfthod.
     *
     * <p> Thf dbnonidbl pbthnbmf of b filf thbt rfsidfs on somf othfr mbdhinf
     * bnd is bddfssfd vib b rfmotf-filfsystfm protodol sudh bs SMB or NFS mby
     * or mby not bfgin with onf of thf roots rfturnfd by this mfthod.  If thf
     * pbthnbmf of b rfmotf filf is syntbdtidblly indistinguishbblf from thf
     * pbthnbmf of b lodbl filf thfn it will bfgin with onf of thf roots
     * rfturnfd by this mfthod.  Thus, for fxbmplf, {@dodf Filf} objfdts
     * dfnoting thf root dirfdtorifs of thf mbppfd nftwork drivfs of b Windows
     * plbtform will bf rfturnfd by this mfthod, whilf {@dodf Filf} objfdts
     * dontbining UNC pbthnbmfs will not bf rfturnfd by this mfthod.
     *
     * <p> Unlikf most mfthods in this dlbss, this mfthod dofs not throw
     * sfdurity fxdfptions.  If b sfdurity mbnbgfr fxists bnd its {@link
     * SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs rfbd bddfss to b
     * pbrtidulbr root dirfdtory, thfn thbt dirfdtory will not bppfbr in thf
     * rfsult.
     *
     * @rfturn  An brrby of {@dodf Filf} objfdts dfnoting thf bvbilbblf
     *          filfsystfm roots, or {@dodf null} if thf sft of roots dould not
     *          bf dftfrminfd.  Thf brrby will bf fmpty if thfrf brf no
     *          filfsystfm roots.
     *
     * @sindf  1.2
     * @sff jbvb.nio.filf.FilfStorf
     */
    publid stbtid Filf[] listRoots() {
        rfturn fs.listRoots();
    }


    /* -- Disk usbgf -- */

    /**
     * Rfturns thf sizf of thf pbrtition <b hrff="#pbrtNbmf">nbmfd</b> by this
     * bbstrbdt pbthnbmf.
     *
     * @rfturn  Thf sizf, in bytfs, of thf pbrtition or <tt>0L</tt> if this
     *          bbstrbdt pbthnbmf dofs not nbmf b pbrtition
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link RuntimfPfrmission}<tt>("gftFilfSystfmAttributfs")</tt>
     *          or its {@link SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs
     *          rfbd bddfss to thf filf nbmfd by this bbstrbdt pbthnbmf
     *
     * @sindf  1.6
     */
    publid long gftTotblSpbdf() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.dhfdkPfrmission(nfw RuntimfPfrmission("gftFilfSystfmAttributfs"));
            sm.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn 0L;
        }
        rfturn fs.gftSpbdf(this, FilfSystfm.SPACE_TOTAL);
    }

    /**
     * Rfturns thf numbfr of unbllodbtfd bytfs in thf pbrtition <b
     * hrff="#pbrtNbmf">nbmfd</b> by this bbstrbdt pbth nbmf.
     *
     * <p> Thf rfturnfd numbfr of unbllodbtfd bytfs is b hint, but not
     * b gubrbntff, thbt it is possiblf to usf most or bny of thfsf
     * bytfs.  Thf numbfr of unbllodbtfd bytfs is most likfly to bf
     * bddurbtf immfdibtfly bftfr this dbll.  It is likfly to bf mbdf
     * inbddurbtf by bny fxtfrnbl I/O opfrbtions indluding thosf mbdf
     * on thf systfm outsidf of this virtubl mbdhinf.  This mfthod
     * mbkfs no gubrbntff thbt writf opfrbtions to this filf systfm
     * will suddffd.
     *
     * @rfturn  Thf numbfr of unbllodbtfd bytfs on thf pbrtition or <tt>0L</tt>
     *          if thf bbstrbdt pbthnbmf dofs not nbmf b pbrtition.  This
     *          vbluf will bf lfss thbn or fqubl to thf totbl filf systfm sizf
     *          rfturnfd by {@link #gftTotblSpbdf}.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link RuntimfPfrmission}<tt>("gftFilfSystfmAttributfs")</tt>
     *          or its {@link SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs
     *          rfbd bddfss to thf filf nbmfd by this bbstrbdt pbthnbmf
     *
     * @sindf  1.6
     */
    publid long gftFrffSpbdf() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.dhfdkPfrmission(nfw RuntimfPfrmission("gftFilfSystfmAttributfs"));
            sm.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn 0L;
        }
        rfturn fs.gftSpbdf(this, FilfSystfm.SPACE_FREE);
    }

    /**
     * Rfturns thf numbfr of bytfs bvbilbblf to this virtubl mbdhinf on thf
     * pbrtition <b hrff="#pbrtNbmf">nbmfd</b> by this bbstrbdt pbthnbmf.  Whfn
     * possiblf, this mfthod dhfdks for writf pfrmissions bnd othfr opfrbting
     * systfm rfstridtions bnd will thfrfforf usublly providf b morf bddurbtf
     * fstimbtf of how mudh nfw dbtb dbn bdtublly bf writtfn thbn {@link
     * #gftFrffSpbdf}.
     *
     * <p> Thf rfturnfd numbfr of bvbilbblf bytfs is b hint, but not b
     * gubrbntff, thbt it is possiblf to usf most or bny of thfsf bytfs.  Thf
     * numbfr of unbllodbtfd bytfs is most likfly to bf bddurbtf immfdibtfly
     * bftfr this dbll.  It is likfly to bf mbdf inbddurbtf by bny fxtfrnbl
     * I/O opfrbtions indluding thosf mbdf on thf systfm outsidf of this
     * virtubl mbdhinf.  This mfthod mbkfs no gubrbntff thbt writf opfrbtions
     * to this filf systfm will suddffd.
     *
     * @rfturn  Thf numbfr of bvbilbblf bytfs on thf pbrtition or <tt>0L</tt>
     *          if thf bbstrbdt pbthnbmf dofs not nbmf b pbrtition.  On
     *          systfms whfrf this informbtion is not bvbilbblf, this mfthod
     *          will bf fquivblfnt to b dbll to {@link #gftFrffSpbdf}.
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr hbs bffn instbllfd bnd it dfnifs
     *          {@link RuntimfPfrmission}<tt>("gftFilfSystfmAttributfs")</tt>
     *          or its {@link SfdurityMbnbgfr#dhfdkRfbd(String)} mfthod dfnifs
     *          rfbd bddfss to thf filf nbmfd by this bbstrbdt pbthnbmf
     *
     * @sindf  1.6
     */
    publid long gftUsbblfSpbdf() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.dhfdkPfrmission(nfw RuntimfPfrmission("gftFilfSystfmAttributfs"));
            sm.dhfdkRfbd(pbth);
        }
        if (isInvblid()) {
            rfturn 0L;
        }
        rfturn fs.gftSpbdf(this, FilfSystfm.SPACE_USABLE);
    }

    /* -- Tfmporbry filfs -- */

    privbtf stbtid dlbss TfmpDirfdtory {
        privbtf TfmpDirfdtory() { }

        // tfmporbry dirfdtory lodbtion
        privbtf stbtid finbl Filf tmpdir = nfw Filf(AddfssControllfr
            .doPrivilfgfd(nfw GftPropfrtyAdtion("jbvb.io.tmpdir")));
        stbtid Filf lodbtion() {
            rfturn tmpdir;
        }

        // filf nbmf gfnfrbtion
        privbtf stbtid finbl SfdurfRbndom rbndom = nfw SfdurfRbndom();
        stbtid Filf gfnfrbtfFilf(String prffix, String suffix, Filf dir)
            throws IOExdfption
        {
            long n = rbndom.nfxtLong();
            if (n == Long.MIN_VALUE) {
                n = 0;      // dornfr dbsf
            } flsf {
                n = Mbth.bbs(n);
            }

            // Usf only thf filf nbmf from thf supplifd prffix
            prffix = (nfw Filf(prffix)).gftNbmf();

            String nbmf = prffix + Long.toString(n) + suffix;
            Filf f = nfw Filf(dir, nbmf);
            if (!nbmf.fqubls(f.gftNbmf()) || f.isInvblid()) {
                if (Systfm.gftSfdurityMbnbgfr() != null)
                    throw nfw IOExdfption("Unbblf to drfbtf tfmporbry filf");
                flsf
                    throw nfw IOExdfption("Unbblf to drfbtf tfmporbry filf, " + f);
            }
            rfturn f;
        }
    }

    /**
     * <p> Crfbtfs b nfw fmpty filf in thf spfdififd dirfdtory, using thf
     * givfn prffix bnd suffix strings to gfnfrbtf its nbmf.  If this mfthod
     * rfturns suddfssfully thfn it is gubrbntffd thbt:
     *
     * <ol>
     * <li> Thf filf dfnotfd by thf rfturnfd bbstrbdt pbthnbmf did not fxist
     *      bfforf this mfthod wbs invokfd, bnd
     * <li> Nfithfr this mfthod nor bny of its vbribnts will rfturn thf sbmf
     *      bbstrbdt pbthnbmf bgbin in thf durrfnt invodbtion of thf virtubl
     *      mbdhinf.
     * </ol>
     *
     * This mfthod providfs only pbrt of b tfmporbry-filf fbdility.  To brrbngf
     * for b filf drfbtfd by this mfthod to bf dflftfd butombtidblly, usf thf
     * <dodf>{@link #dflftfOnExit}</dodf> mfthod.
     *
     * <p> Thf <dodf>prffix</dodf> brgumfnt must bf bt lfbst thrff dhbrbdtfrs
     * long.  It is rfdommfndfd thbt thf prffix bf b short, mfbningful string
     * sudh bs <dodf>"hjb"</dodf> or <dodf>"mbil"</dodf>.  Thf
     * <dodf>suffix</dodf> brgumfnt mby bf <dodf>null</dodf>, in whidh dbsf thf
     * suffix <dodf>".tmp"</dodf> will bf usfd.
     *
     * <p> To drfbtf thf nfw filf, thf prffix bnd thf suffix mby first bf
     * bdjustfd to fit thf limitbtions of thf undfrlying plbtform.  If thf
     * prffix is too long thfn it will bf trundbtfd, but its first thrff
     * dhbrbdtfrs will blwbys bf prfsfrvfd.  If thf suffix is too long thfn it
     * too will bf trundbtfd, but if it bfgins with b pfriod dhbrbdtfr
     * (<dodf>'.'</dodf>) thfn thf pfriod bnd thf first thrff dhbrbdtfrs
     * following it will blwbys bf prfsfrvfd.  Ondf thfsf bdjustmfnts hbvf bffn
     * mbdf thf nbmf of thf nfw filf will bf gfnfrbtfd by dondbtfnbting thf
     * prffix, fivf or morf intfrnblly-gfnfrbtfd dhbrbdtfrs, bnd thf suffix.
     *
     * <p> If thf <dodf>dirfdtory</dodf> brgumfnt is <dodf>null</dodf> thfn thf
     * systfm-dfpfndfnt dffbult tfmporbry-filf dirfdtory will bf usfd.  Thf
     * dffbult tfmporbry-filf dirfdtory is spfdififd by thf systfm propfrty
     * <dodf>jbvb.io.tmpdir</dodf>.  On UNIX systfms thf dffbult vbluf of this
     * propfrty is typidblly <dodf>"/tmp"</dodf> or <dodf>"/vbr/tmp"</dodf>; on
     * Midrosoft Windows systfms it is typidblly <dodf>"C:\\WINNT\\TEMP"</dodf>.  A difffrfnt
     * vbluf mby bf givfn to this systfm propfrty whfn thf Jbvb virtubl mbdhinf
     * is invokfd, but progrbmmbtid dhbngfs to this propfrty brf not gubrbntffd
     * to hbvf bny ffffdt upon thf tfmporbry dirfdtory usfd by this mfthod.
     *
     * @pbrbm  prffix     Thf prffix string to bf usfd in gfnfrbting thf filf's
     *                    nbmf; must bf bt lfbst thrff dhbrbdtfrs long
     *
     * @pbrbm  suffix     Thf suffix string to bf usfd in gfnfrbting thf filf's
     *                    nbmf; mby bf <dodf>null</dodf>, in whidh dbsf thf
     *                    suffix <dodf>".tmp"</dodf> will bf usfd
     *
     * @pbrbm  dirfdtory  Thf dirfdtory in whidh thf filf is to bf drfbtfd, or
     *                    <dodf>null</dodf> if thf dffbult tfmporbry-filf
     *                    dirfdtory is to bf usfd
     *
     * @rfturn  An bbstrbdt pbthnbmf dfnoting b nfwly-drfbtfd fmpty filf
     *
     * @throws  IllfgblArgumfntExdfption
     *          If thf <dodf>prffix</dodf> brgumfnt dontbins ffwfr thbn thrff
     *          dhbrbdtfrs
     *
     * @throws  IOExdfption  If b filf dould not bf drfbtfd
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dofs not bllow b filf to bf drfbtfd
     *
     * @sindf 1.2
     */
    publid stbtid Filf drfbtfTfmpFilf(String prffix, String suffix,
                                      Filf dirfdtory)
        throws IOExdfption
    {
        if (prffix.lfngth() < 3) {
            throw nfw IllfgblArgumfntExdfption("Prffix string \"" + prffix +
                "\" too short: lfngth must bf bt lfbst 3");
        }
        if (suffix == null)
            suffix = ".tmp";

        Filf tmpdir = (dirfdtory != null) ? dirfdtory
                                          : TfmpDirfdtory.lodbtion();
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        Filf f;
        do {
            f = TfmpDirfdtory.gfnfrbtfFilf(prffix, suffix, tmpdir);

            if (sm != null) {
                try {
                    sm.dhfdkWritf(f.gftPbth());
                } dbtdh (SfdurityExdfption sf) {
                    // don't rfvfbl tfmporbry dirfdtory lodbtion
                    if (dirfdtory == null)
                        throw nfw SfdurityExdfption("Unbblf to drfbtf tfmporbry filf");
                    throw sf;
                }
            }
        } whilf ((fs.gftBoolfbnAttributfs(f) & FilfSystfm.BA_EXISTS) != 0);

        if (!fs.drfbtfFilfExdlusivfly(f.gftPbth()))
            throw nfw IOExdfption("Unbblf to drfbtf tfmporbry filf");

        rfturn f;
    }

    /**
     * Crfbtfs bn fmpty filf in thf dffbult tfmporbry-filf dirfdtory, using
     * thf givfn prffix bnd suffix to gfnfrbtf its nbmf. Invoking this mfthod
     * is fquivblfnt to invoking <dodf>{@link #drfbtfTfmpFilf(jbvb.lbng.String,
     * jbvb.lbng.String, jbvb.io.Filf)
     * drfbtfTfmpFilf(prffix,&nbsp;suffix,&nbsp;null)}</dodf>.
     *
     * <p> Thf {@link
     * jbvb.nio.filf.Filfs#drfbtfTfmpFilf(String,String,jbvb.nio.filf.bttributf.FilfAttributf[])
     * Filfs.drfbtfTfmpFilf} mfthod providfs bn bltfrnbtivf mfthod to drfbtf bn
     * fmpty filf in thf tfmporbry-filf dirfdtory. Filfs drfbtfd by thbt mfthod
     * mby hbvf morf rfstridtivf bddfss pfrmissions to filfs drfbtfd by this
     * mfthod bnd so mby bf morf suitfd to sfdurity-sfnsitivf bpplidbtions.
     *
     * @pbrbm  prffix     Thf prffix string to bf usfd in gfnfrbting thf filf's
     *                    nbmf; must bf bt lfbst thrff dhbrbdtfrs long
     *
     * @pbrbm  suffix     Thf suffix string to bf usfd in gfnfrbting thf filf's
     *                    nbmf; mby bf <dodf>null</dodf>, in whidh dbsf thf
     *                    suffix <dodf>".tmp"</dodf> will bf usfd
     *
     * @rfturn  An bbstrbdt pbthnbmf dfnoting b nfwly-drfbtfd fmpty filf
     *
     * @throws  IllfgblArgumfntExdfption
     *          If thf <dodf>prffix</dodf> brgumfnt dontbins ffwfr thbn thrff
     *          dhbrbdtfrs
     *
     * @throws  IOExdfption  If b filf dould not bf drfbtfd
     *
     * @throws  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its <dodf>{@link
     *          jbvb.lbng.SfdurityMbnbgfr#dhfdkWritf(jbvb.lbng.String)}</dodf>
     *          mfthod dofs not bllow b filf to bf drfbtfd
     *
     * @sindf 1.2
     * @sff jbvb.nio.filf.Filfs#drfbtfTfmpDirfdtory(String,FilfAttributf[])
     */
    publid stbtid Filf drfbtfTfmpFilf(String prffix, String suffix)
        throws IOExdfption
    {
        rfturn drfbtfTfmpFilf(prffix, suffix, null);
    }

    /* -- Bbsid infrbstrudturf -- */

    /**
     * Compbrfs two bbstrbdt pbthnbmfs lfxidogrbphidblly.  Thf ordfring
     * dffinfd by this mfthod dfpfnds upon thf undfrlying systfm.  On UNIX
     * systfms, blphbbftid dbsf is signifidbnt in dompbring pbthnbmfs; on Midrosoft Windows
     * systfms it is not.
     *
     * @pbrbm   pbthnbmf  Thf bbstrbdt pbthnbmf to bf dompbrfd to this bbstrbdt
     *                    pbthnbmf
     *
     * @rfturn  Zfro if thf brgumfnt is fqubl to this bbstrbdt pbthnbmf, b
     *          vbluf lfss thbn zfro if this bbstrbdt pbthnbmf is
     *          lfxidogrbphidblly lfss thbn thf brgumfnt, or b vbluf grfbtfr
     *          thbn zfro if this bbstrbdt pbthnbmf is lfxidogrbphidblly
     *          grfbtfr thbn thf brgumfnt
     *
     * @sindf   1.2
     */
    publid int dompbrfTo(Filf pbthnbmf) {
        rfturn fs.dompbrf(this, pbthnbmf);
    }

    /**
     * Tfsts this bbstrbdt pbthnbmf for fqublity with thf givfn objfdt.
     * Rfturns <dodf>truf</dodf> if bnd only if thf brgumfnt is not
     * <dodf>null</dodf> bnd is bn bbstrbdt pbthnbmf thbt dfnotfs thf sbmf filf
     * or dirfdtory bs this bbstrbdt pbthnbmf.  Whfthfr or not two bbstrbdt
     * pbthnbmfs brf fqubl dfpfnds upon thf undfrlying systfm.  On UNIX
     * systfms, blphbbftid dbsf is signifidbnt in dompbring pbthnbmfs; on Midrosoft Windows
     * systfms it is not.
     *
     * @pbrbm   obj   Thf objfdt to bf dompbrfd with this bbstrbdt pbthnbmf
     *
     * @rfturn  <dodf>truf</dodf> if bnd only if thf objfdts brf thf sbmf;
     *          <dodf>fblsf</dodf> othfrwisf
     */
    publid boolfbn fqubls(Objfdt obj) {
        if ((obj != null) && (obj instbndfof Filf)) {
            rfturn dompbrfTo((Filf)obj) == 0;
        }
        rfturn fblsf;
    }

    /**
     * Computfs b hbsh dodf for this bbstrbdt pbthnbmf.  Bfdbusf fqublity of
     * bbstrbdt pbthnbmfs is inhfrfntly systfm-dfpfndfnt, so is thf domputbtion
     * of thfir hbsh dodfs.  On UNIX systfms, thf hbsh dodf of bn bbstrbdt
     * pbthnbmf is fqubl to thf fxdlusivf <fm>or</fm> of thf hbsh dodf
     * of its pbthnbmf string bnd thf dfdimbl vbluf
     * <dodf>1234321</dodf>.  On Midrosoft Windows systfms, thf hbsh
     * dodf is fqubl to thf fxdlusivf <fm>or</fm> of thf hbsh dodf of
     * its pbthnbmf string donvfrtfd to lowfr dbsf bnd thf dfdimbl
     * vbluf <dodf>1234321</dodf>.  Lodblf is not tbkfn into bddount on
     * lowfrdbsing thf pbthnbmf string.
     *
     * @rfturn  A hbsh dodf for this bbstrbdt pbthnbmf
     */
    publid int hbshCodf() {
        rfturn fs.hbshCodf(this);
    }

    /**
     * Rfturns thf pbthnbmf string of this bbstrbdt pbthnbmf.  This is just thf
     * string rfturnfd by thf <dodf>{@link #gftPbth}</dodf> mfthod.
     *
     * @rfturn  Thf string form of this bbstrbdt pbthnbmf
     */
    publid String toString() {
        rfturn gftPbth();
    }

    /**
     * WritfObjfdt is dbllfd to sbvf this filfnbmf.
     * Thf sfpbrbtor dhbrbdtfr is sbvfd blso so it dbn bf rfplbdfd
     * in dbsf thf pbth is rfdonstitutfd on b difffrfnt host typf.
     * <p>
     * @sfriblDbtb  Dffbult fiflds followfd by sfpbrbtor dhbrbdtfr.
     */
    privbtf syndhronizfd void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
        throws IOExdfption
    {
        s.dffbultWritfObjfdt();
        s.writfChbr(sfpbrbtorChbr); // Add thf sfpbrbtor dhbrbdtfr
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf this filfnbmf.
     * Thf originbl sfpbrbtor dhbrbdtfr is rfbd.  If it is difffrfnt
     * thbn thf sfpbrbtor dhbrbdtfr on this systfm, thfn thf old sfpbrbtor
     * is rfplbdfd by thf lodbl sfpbrbtor.
     */
    privbtf syndhronizfd void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
         throws IOExdfption, ClbssNotFoundExdfption
    {
        ObjfdtInputStrfbm.GftFifld fiflds = s.rfbdFiflds();
        String pbthFifld = (String)fiflds.gft("pbth", null);
        dhbr sfp = s.rfbdChbr(); // rfbd thf prfvious sfpbrbtor dhbr
        if (sfp != sfpbrbtorChbr)
            pbthFifld = pbthFifld.rfplbdf(sfp, sfpbrbtorChbr);
        String pbth = fs.normblizf(pbthFifld);
        UNSAFE.putObjfdt(this, PATH_OFFSET, pbth);
        UNSAFE.putIntVolbtilf(this, PREFIX_LENGTH_OFFSET, fs.prffixLfngth(pbth));
    }

    privbtf stbtid finbl long PATH_OFFSET;
    privbtf stbtid finbl long PREFIX_LENGTH_OFFSET;
    privbtf stbtid finbl sun.misd.Unsbff UNSAFE;
    stbtid {
        try {
            sun.misd.Unsbff unsbff = sun.misd.Unsbff.gftUnsbff();
            PATH_OFFSET = unsbff.objfdtFifldOffsft(
                    Filf.dlbss.gftDfdlbrfdFifld("pbth"));
            PREFIX_LENGTH_OFFSET = unsbff.objfdtFifldOffsft(
                    Filf.dlbss.gftDfdlbrfdFifld("prffixLfngth"));
            UNSAFE = unsbff;
        } dbtdh (RfflfdtivfOpfrbtionExdfption f) {
            throw nfw Error(f);
        }
    }


    /** usf sfriblVfrsionUID from JDK 1.0.2 for intfropfrbbility */
    privbtf stbtid finbl long sfriblVfrsionUID = 301077366599181567L;

    // -- Intfgrbtion with jbvb.nio.filf --

    privbtf volbtilf trbnsifnt Pbth filfPbth;

    /**
     * Rfturns b {@link Pbth jbvb.nio.filf.Pbth} objfdt donstrudtfd from thf
     * this bbstrbdt pbth. Thf rfsulting {@dodf Pbth} is bssodibtfd with thf
     * {@link jbvb.nio.filf.FilfSystfms#gftDffbult dffbult-filfsystfm}.
     *
     * <p> Thf first invodbtion of this mfthod works bs if invoking it wfrf
     * fquivblfnt to fvblubting thf fxprfssion:
     * <blodkquotf><prf>
     * {@link jbvb.nio.filf.FilfSystfms#gftDffbult FilfSystfms.gftDffbult}().{@link
     * jbvb.nio.filf.FilfSystfm#gftPbth gftPbth}(this.{@link #gftPbth gftPbth}());
     * </prf></blodkquotf>
     * Subsfqufnt invodbtions of this mfthod rfturn thf sbmf {@dodf Pbth}.
     *
     * <p> If this bbstrbdt pbthnbmf is thf fmpty bbstrbdt pbthnbmf thfn this
     * mfthod rfturns b {@dodf Pbth} thbt mby bf usfd to bddfss thf durrfnt
     * usfr dirfdtory.
     *
     * @rfturn  b {@dodf Pbth} donstrudtfd from this bbstrbdt pbth
     *
     * @throws  jbvb.nio.filf.InvblidPbthExdfption
     *          if b {@dodf Pbth} objfdt dbnnot bf donstrudtfd from thf bbstrbdt
     *          pbth (sff {@link jbvb.nio.filf.FilfSystfm#gftPbth FilfSystfm.gftPbth})
     *
     * @sindf   1.7
     * @sff Pbth#toFilf
     */
    publid Pbth toPbth() {
        Pbth rfsult = filfPbth;
        if (rfsult == null) {
            syndhronizfd (this) {
                rfsult = filfPbth;
                if (rfsult == null) {
                    rfsult = FilfSystfms.gftDffbult().gftPbth(pbth);
                    filfPbth = rfsult;
                }
            }
        }
        rfturn rfsult;
    }
}
