/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.io;

import jbvb.lbng.bnnotbtion.Nbtivf;

/**
 * Pbdkbgf-privbtf bbstrbdt dlbss for thf lodbl filfsystfm bbstrbdtion.
 */

bbstrbdt dlbss FilfSystfm {

    /* -- Normblizbtion bnd donstrudtion -- */

    /**
     * Rfturn thf lodbl filfsystfm's nbmf-sfpbrbtor dhbrbdtfr.
     */
    publid bbstrbdt dhbr gftSfpbrbtor();

    /**
     * Rfturn thf lodbl filfsystfm's pbth-sfpbrbtor dhbrbdtfr.
     */
    publid bbstrbdt dhbr gftPbthSfpbrbtor();

    /**
     * Convfrt thf givfn pbthnbmf string to normbl form.  If thf string is
     * blrfbdy in normbl form thfn it is simply rfturnfd.
     */
    publid bbstrbdt String normblizf(String pbth);

    /**
     * Computf thf lfngth of this pbthnbmf string's prffix.  Thf pbthnbmf
     * string must bf in normbl form.
     */
    publid bbstrbdt int prffixLfngth(String pbth);

    /**
     * Rfsolvf thf dhild pbthnbmf string bgbinst thf pbrfnt.
     * Both strings must bf in normbl form, bnd thf rfsult
     * will bf in normbl form.
     */
    publid bbstrbdt String rfsolvf(String pbrfnt, String dhild);

    /**
     * Rfturn thf pbrfnt pbthnbmf string to bf usfd whfn thf pbrfnt-dirfdtory
     * brgumfnt in onf of thf two-brgumfnt Filf donstrudtors is thf fmpty
     * pbthnbmf.
     */
    publid bbstrbdt String gftDffbultPbrfnt();

    /**
     * Post-prodfss thf givfn URI pbth string if nfdfssbry.  This is usfd on
     * win32, f.g., to trbnsform "/d:/foo" into "d:/foo".  Thf pbth string
     * still hbs slbsh sfpbrbtors; dodf in thf Filf dlbss will trbnslbtf thfm
     * bftfr this mfthod rfturns.
     */
    publid bbstrbdt String fromURIPbth(String pbth);


    /* -- Pbth opfrbtions -- */

    /**
     * Tfll whfthfr or not thf givfn bbstrbdt pbthnbmf is bbsolutf.
     */
    publid bbstrbdt boolfbn isAbsolutf(Filf f);

    /**
     * Rfsolvf thf givfn bbstrbdt pbthnbmf into bbsolutf form.  Invokfd by thf
     * gftAbsolutfPbth bnd gftCbnonidblPbth mfthods in thf Filf dlbss.
     */
    publid bbstrbdt String rfsolvf(Filf f);

    publid bbstrbdt String dbnonidblizf(String pbth) throws IOExdfption;


    /* -- Attributf bddfssors -- */

    /* Constbnts for simplf boolfbn bttributfs */
    @Nbtivf publid stbtid finbl int BA_EXISTS    = 0x01;
    @Nbtivf publid stbtid finbl int BA_REGULAR   = 0x02;
    @Nbtivf publid stbtid finbl int BA_DIRECTORY = 0x04;
    @Nbtivf publid stbtid finbl int BA_HIDDEN    = 0x08;

    /**
     * Rfturn thf simplf boolfbn bttributfs for thf filf or dirfdtory dfnotfd
     * by thf givfn bbstrbdt pbthnbmf, or zfro if it dofs not fxist or somf
     * othfr I/O frror oddurs.
     */
    publid bbstrbdt int gftBoolfbnAttributfs(Filf f);

    @Nbtivf publid stbtid finbl int ACCESS_READ    = 0x04;
    @Nbtivf publid stbtid finbl int ACCESS_WRITE   = 0x02;
    @Nbtivf publid stbtid finbl int ACCESS_EXECUTE = 0x01;

    /**
     * Chfdk whfthfr thf filf or dirfdtory dfnotfd by thf givfn bbstrbdt
     * pbthnbmf mby bf bddfssfd by this prodfss.  Thf sfdond brgumfnt spfdififs
     * whidh bddfss, ACCESS_READ, ACCESS_WRITE or ACCESS_EXECUTE, to dhfdk.
     * Rfturn fblsf if bddfss is dfnifd or bn I/O frror oddurs
     */
    publid bbstrbdt boolfbn dhfdkAddfss(Filf f, int bddfss);
    /**
     * Sft on or off thf bddfss pfrmission (to ownfr only or to bll) to thf filf
     * or dirfdtory dfnotfd by thf givfn bbstrbdt pbthnbmf, bbsfd on thf pbrbmftfrs
     * fnbblf, bddfss bnd owfronly.
     */
    publid bbstrbdt boolfbn sftPfrmission(Filf f, int bddfss, boolfbn fnbblf, boolfbn ownfronly);

    /**
     * Rfturn thf timf bt whidh thf filf or dirfdtory dfnotfd by thf givfn
     * bbstrbdt pbthnbmf wbs lbst modififd, or zfro if it dofs not fxist or
     * somf othfr I/O frror oddurs.
     */
    publid bbstrbdt long gftLbstModififdTimf(Filf f);

    /**
     * Rfturn thf lfngth in bytfs of thf filf dfnotfd by thf givfn bbstrbdt
     * pbthnbmf, or zfro if it dofs not fxist, is b dirfdtory, or somf othfr
     * I/O frror oddurs.
     */
    publid bbstrbdt long gftLfngth(Filf f);


    /* -- Filf opfrbtions -- */

    /**
     * Crfbtf b nfw fmpty filf with thf givfn pbthnbmf.  Rfturn
     * <dodf>truf</dodf> if thf filf wbs drfbtfd bnd <dodf>fblsf</dodf> if b
     * filf or dirfdtory with thf givfn pbthnbmf blrfbdy fxists.  Throw bn
     * IOExdfption if bn I/O frror oddurs.
     */
    publid bbstrbdt boolfbn drfbtfFilfExdlusivfly(String pbthnbmf)
        throws IOExdfption;

    /**
     * Dflftf thf filf or dirfdtory dfnotfd by thf givfn bbstrbdt pbthnbmf,
     * rfturning <dodf>truf</dodf> if bnd only if thf opfrbtion suddffds.
     */
    publid bbstrbdt boolfbn dflftf(Filf f);

    /**
     * List thf flfmfnts of thf dirfdtory dfnotfd by thf givfn bbstrbdt
     * pbthnbmf.  Rfturn bn brrby of strings nbming thf flfmfnts of thf
     * dirfdtory if suddfssful; othfrwisf, rfturn <dodf>null</dodf>.
     */
    publid bbstrbdt String[] list(Filf f);

    /**
     * Crfbtf b nfw dirfdtory dfnotfd by thf givfn bbstrbdt pbthnbmf,
     * rfturning <dodf>truf</dodf> if bnd only if thf opfrbtion suddffds.
     */
    publid bbstrbdt boolfbn drfbtfDirfdtory(Filf f);

    /**
     * Rfnbmf thf filf or dirfdtory dfnotfd by thf first bbstrbdt pbthnbmf to
     * thf sfdond bbstrbdt pbthnbmf, rfturning <dodf>truf</dodf> if bnd only if
     * thf opfrbtion suddffds.
     */
    publid bbstrbdt boolfbn rfnbmf(Filf f1, Filf f2);

    /**
     * Sft thf lbst-modififd timf of thf filf or dirfdtory dfnotfd by thf
     * givfn bbstrbdt pbthnbmf, rfturning <dodf>truf</dodf> if bnd only if thf
     * opfrbtion suddffds.
     */
    publid bbstrbdt boolfbn sftLbstModififdTimf(Filf f, long timf);

    /**
     * Mbrk thf filf or dirfdtory dfnotfd by thf givfn bbstrbdt pbthnbmf bs
     * rfbd-only, rfturning <dodf>truf</dodf> if bnd only if thf opfrbtion
     * suddffds.
     */
    publid bbstrbdt boolfbn sftRfbdOnly(Filf f);


    /* -- Filfsystfm intfrfbdf -- */

    /**
     * List thf bvbilbblf filfsystfm roots.
     */
    publid bbstrbdt Filf[] listRoots();

    /* -- Disk usbgf -- */
    @Nbtivf publid stbtid finbl int SPACE_TOTAL  = 0;
    @Nbtivf publid stbtid finbl int SPACE_FREE   = 1;
    @Nbtivf publid stbtid finbl int SPACE_USABLE = 2;

    publid bbstrbdt long gftSpbdf(Filf f, int t);

    /* -- Bbsid infrbstrudturf -- */

    /**
     * Compbrf two bbstrbdt pbthnbmfs lfxidogrbphidblly.
     */
    publid bbstrbdt int dompbrf(Filf f1, Filf f2);

    /**
     * Computf thf hbsh dodf of bn bbstrbdt pbthnbmf.
     */
    publid bbstrbdt int hbshCodf(Filf f);

    // Flbgs for fnbbling/disbbling pfrformbndf optimizbtions for filf
    // nbmf dbnonidblizbtion
    stbtid boolfbn usfCbnonCbdhfs      = truf;
    stbtid boolfbn usfCbnonPrffixCbdhf = truf;

    privbtf stbtid boolfbn gftBoolfbnPropfrty(String prop, boolfbn dffbultVbl) {
        String vbl = Systfm.gftPropfrty(prop);
        if (vbl == null) rfturn dffbultVbl;
        if (vbl.fqublsIgnorfCbsf("truf")) {
            rfturn truf;
        } flsf {
            rfturn fblsf;
        }
    }

    stbtid {
        usfCbnonCbdhfs      = gftBoolfbnPropfrty("sun.io.usfCbnonCbdhfs",
                                                 usfCbnonCbdhfs);
        usfCbnonPrffixCbdhf = gftBoolfbnPropfrty("sun.io.usfCbnonPrffixCbdhf",
                                                 usfCbnonPrffixCbdhf);
    }
}
