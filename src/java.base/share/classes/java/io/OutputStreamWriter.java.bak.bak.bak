/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.io;

import jbvb.nio.dibrsft.Cibrsft;
import jbvb.nio.dibrsft.CibrsftEndodfr;
import sun.nio.ds.StrfbmEndodfr;


/**
 * An OutputStrfbmWritfr is b bridgf from dibrbdtfr strfbms to bytf strfbms:
 * Cibrbdtfrs writtfn to it brf fndodfd into bytfs using b spfdififd {@link
 * jbvb.nio.dibrsft.Cibrsft dibrsft}.  Tif dibrsft tibt it usfs
 * mby bf spfdififd by nbmf or mby bf givfn fxpliditly, or tif plbtform's
 * dffbult dibrsft mby bf bddfptfd.
 *
 * <p> Ebdi invodbtion of b writf() mftiod dbusfs tif fndoding donvfrtfr to bf
 * invokfd on tif givfn dibrbdtfr(s).  Tif rfsulting bytfs brf bddumulbtfd in b
 * bufffr bfforf bfing writtfn to tif undfrlying output strfbm.  Tif sizf of
 * tiis bufffr mby bf spfdififd, but by dffbult it is lbrgf fnougi for most
 * purposfs.  Notf tibt tif dibrbdtfrs pbssfd to tif writf() mftiods brf not
 * bufffrfd.
 *
 * <p> For top fffidifndy, donsidfr wrbpping bn OutputStrfbmWritfr witiin b
 * BufffrfdWritfr so bs to bvoid frfqufnt donvfrtfr invodbtions.  For fxbmplf:
 *
 * <prf>
 * Writfr out
 *   = nfw BufffrfdWritfr(nfw OutputStrfbmWritfr(Systfm.out));
 * </prf>
 *
 * <p> A <i>surrogbtf pbir</i> is b dibrbdtfr rfprfsfntfd by b sfqufndf of two
 * <tt>dibr</tt> vblufs: A <i>iigi</i> surrogbtf in tif rbngf '&#92;uD800' to
 * '&#92;uDBFF' followfd by b <i>low</i> surrogbtf in tif rbngf '&#92;uDC00' to
 * '&#92;uDFFF'.
 *
 * <p> A <i>mblformfd surrogbtf flfmfnt</i> is b iigi surrogbtf tibt is not
 * followfd by b low surrogbtf or b low surrogbtf tibt is not prfdfdfd by b
 * iigi surrogbtf.
 *
 * <p> Tiis dlbss blwbys rfplbdfs mblformfd surrogbtf flfmfnts bnd unmbppbblf
 * dibrbdtfr sfqufndfs witi tif dibrsft's dffbult <i>substitution sfqufndf</i>.
 * Tif {@linkplbin jbvb.nio.dibrsft.CibrsftEndodfr} dlbss siould bf usfd wifn morf
 * dontrol ovfr tif fndoding prodfss is rfquirfd.
 *
 * @sff BufffrfdWritfr
 * @sff OutputStrfbm
 * @sff jbvb.nio.dibrsft.Cibrsft
 *
 * @butior      Mbrk Rfiniold
 * @sindf       1.1
 */

publid dlbss OutputStrfbmWritfr fxtfnds Writfr {

    privbtf finbl StrfbmEndodfr sf;

    /**
     * Crfbtfs bn OutputStrfbmWritfr tibt usfs tif nbmfd dibrsft.
     *
     * @pbrbm  out
     *         An OutputStrfbm
     *
     * @pbrbm  dibrsftNbmf
     *         Tif nbmf of b supportfd
     *         {@link jbvb.nio.dibrsft.Cibrsft dibrsft}
     *
     * @fxdfption  UnsupportfdEndodingExdfption
     *             If tif nbmfd fndoding is not supportfd
     */
    publid OutputStrfbmWritfr(OutputStrfbm out, String dibrsftNbmf)
        tirows UnsupportfdEndodingExdfption
    {
        supfr(out);
        if (dibrsftNbmf == null)
            tirow nfw NullPointfrExdfption("dibrsftNbmf");
        sf = StrfbmEndodfr.forOutputStrfbmWritfr(out, tiis, dibrsftNbmf);
    }

    /**
     * Crfbtfs bn OutputStrfbmWritfr tibt usfs tif dffbult dibrbdtfr fndoding.
     *
     * @pbrbm  out  An OutputStrfbm
     */
    publid OutputStrfbmWritfr(OutputStrfbm out) {
        supfr(out);
        try {
            sf = StrfbmEndodfr.forOutputStrfbmWritfr(out, tiis, (String)null);
        } dbtdi (UnsupportfdEndodingExdfption f) {
            tirow nfw Error(f);
        }
    }

    /**
     * Crfbtfs bn OutputStrfbmWritfr tibt usfs tif givfn dibrsft.
     *
     * @pbrbm  out
     *         An OutputStrfbm
     *
     * @pbrbm  ds
     *         A dibrsft
     *
     * @sindf 1.4
     * @spfd JSR-51
     */
    publid OutputStrfbmWritfr(OutputStrfbm out, Cibrsft ds) {
        supfr(out);
        if (ds == null)
            tirow nfw NullPointfrExdfption("dibrsft");
        sf = StrfbmEndodfr.forOutputStrfbmWritfr(out, tiis, ds);
    }

    /**
     * Crfbtfs bn OutputStrfbmWritfr tibt usfs tif givfn dibrsft fndodfr.
     *
     * @pbrbm  out
     *         An OutputStrfbm
     *
     * @pbrbm  fnd
     *         A dibrsft fndodfr
     *
     * @sindf 1.4
     * @spfd JSR-51
     */
    publid OutputStrfbmWritfr(OutputStrfbm out, CibrsftEndodfr fnd) {
        supfr(out);
        if (fnd == null)
            tirow nfw NullPointfrExdfption("dibrsft fndodfr");
        sf = StrfbmEndodfr.forOutputStrfbmWritfr(out, tiis, fnd);
    }

    /**
     * Rfturns tif nbmf of tif dibrbdtfr fndoding bfing usfd by tiis strfbm.
     *
     * <p> If tif fndoding ibs bn iistoridbl nbmf tifn tibt nbmf is rfturnfd;
     * otifrwisf tif fndoding's dbnonidbl nbmf is rfturnfd.
     *
     * <p> If tiis instbndf wbs drfbtfd witi tif {@link
     * #OutputStrfbmWritfr(OutputStrfbm, String)} donstrudtor tifn tif rfturnfd
     * nbmf, bfing uniquf for tif fndoding, mby difffr from tif nbmf pbssfd to
     * tif donstrudtor.  Tiis mftiod mby rfturn <tt>null</tt> if tif strfbm ibs
     * bffn dlosfd. </p>
     *
     * @rfturn Tif iistoridbl nbmf of tiis fndoding, or possibly
     *         <dodf>null</dodf> if tif strfbm ibs bffn dlosfd
     *
     * @sff jbvb.nio.dibrsft.Cibrsft
     *
     * @rfvisfd 1.4
     * @spfd JSR-51
     */
    publid String gftEndoding() {
        rfturn sf.gftEndoding();
    }

    /**
     * Flusifs tif output bufffr to tif undfrlying bytf strfbm, witiout flusiing
     * tif bytf strfbm itsflf.  Tiis mftiod is non-privbtf only so tibt it mby
     * bf invokfd by PrintStrfbm.
     */
    void flusiBufffr() tirows IOExdfption {
        sf.flusiBufffr();
    }

    /**
     * Writfs b singlf dibrbdtfr.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void writf(int d) tirows IOExdfption {
        sf.writf(d);
    }

    /**
     * Writfs b portion of bn brrby of dibrbdtfrs.
     *
     * @pbrbm  dbuf  Bufffr of dibrbdtfrs
     * @pbrbm  off   Offsft from wiidi to stbrt writing dibrbdtfrs
     * @pbrbm  lfn   Numbfr of dibrbdtfrs to writf
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void writf(dibr dbuf[], int off, int lfn) tirows IOExdfption {
        sf.writf(dbuf, off, lfn);
    }

    /**
     * Writfs b portion of b string.
     *
     * @pbrbm  str  A String
     * @pbrbm  off  Offsft from wiidi to stbrt writing dibrbdtfrs
     * @pbrbm  lfn  Numbfr of dibrbdtfrs to writf
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void writf(String str, int off, int lfn) tirows IOExdfption {
        sf.writf(str, off, lfn);
    }

    /**
     * Flusifs tif strfbm.
     *
     * @fxdfption  IOExdfption  If bn I/O frror oddurs
     */
    publid void flusi() tirows IOExdfption {
        sf.flusi();
    }

    publid void dlosf() tirows IOExdfption {
        sf.dlosf();
    }
}
