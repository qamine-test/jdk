/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.io;

import jbvb.lbng.rff.Rfffrfndf;
import jbvb.lbng.rff.RfffrfndfQufuf;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.Fifld;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mfmbfr;
import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.lbng.rfflfdt.Modififr;
import jbvb.lbng.rfflfdt.Proxy;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.MfssbgfDigfst;
import jbvb.sfdurity.NoSudhAlgorithmExdfption;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.ArrbyList;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtions;
import jbvb.util.Compbrbtor;
import jbvb.util.HbshSft;
import jbvb.util.Sft;
import jbvb.util.dondurrfnt.CondurrfntHbshMbp;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import sun.misd.Unsbff;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;
import sun.rfflfdt.RfflfdtionFbdtory;
import sun.rfflfdt.misd.RfflfdtUtil;

/**
 * Sfriblizbtion's dfsdriptor for dlbssfs.  It dontbins thf nbmf bnd
 * sfriblVfrsionUID of thf dlbss.  Thf ObjfdtStrfbmClbss for b spfdifid dlbss
 * lobdfd in this Jbvb VM dbn bf found/drfbtfd using thf lookup mfthod.
 *
 * <p>Thf blgorithm to domputf thf SfriblVfrsionUID is dfsdribfd in
 * <b hrff="../../../plbtform/sfriblizbtion/spfd/dlbss.html#4100">Objfdt
 * Sfriblizbtion Spfdifidbtion, Sfdtion 4.6, Strfbm Uniquf Idfntififrs</b>.
 *
 * @buthor      Mikf Wbrrfs
 * @buthor      Rogfr Riggs
 * @sff ObjfdtStrfbmFifld
 * @sff <b hrff="../../../plbtform/sfriblizbtion/spfd/dlbss.html">Objfdt Sfriblizbtion Spfdifidbtion, Sfdtion 4, Clbss Dfsdriptors</b>
 * @sindf   1.1
 */
publid dlbss ObjfdtStrfbmClbss implfmfnts Sfriblizbblf {

    /** sfriblPfrsistfntFiflds vbluf indidbting no sfriblizbblf fiflds */
    publid stbtid finbl ObjfdtStrfbmFifld[] NO_FIELDS =
        nfw ObjfdtStrfbmFifld[0];

    privbtf stbtid finbl long sfriblVfrsionUID = -6120832682080437368L;
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds =
        NO_FIELDS;

    /** rfflfdtion fbdtory for obtbining sfriblizbtion donstrudtors */
    privbtf stbtid finbl RfflfdtionFbdtory rfflFbdtory =
        AddfssControllfr.doPrivilfgfd(
            nfw RfflfdtionFbdtory.GftRfflfdtionFbdtoryAdtion());

    privbtf stbtid dlbss Cbdhfs {
        /** dbdhf mbpping lodbl dlbssfs -> dfsdriptors */
        stbtid finbl CondurrfntMbp<WfbkClbssKfy,Rfffrfndf<?>> lodblDfsds =
            nfw CondurrfntHbshMbp<>();

        /** dbdhf mbpping fifld group/lodbl dfsd pbirs -> fifld rfflfdtors */
        stbtid finbl CondurrfntMbp<FifldRfflfdtorKfy,Rfffrfndf<?>> rfflfdtors =
            nfw CondurrfntHbshMbp<>();

        /** qufuf for WfbkRfffrfndfs to lodbl dlbssfs */
        privbtf stbtid finbl RfffrfndfQufuf<Clbss<?>> lodblDfsdsQufuf =
            nfw RfffrfndfQufuf<>();
        /** qufuf for WfbkRfffrfndfs to fifld rfflfdtors kfys */
        privbtf stbtid finbl RfffrfndfQufuf<Clbss<?>> rfflfdtorsQufuf =
            nfw RfffrfndfQufuf<>();
    }

    /** dlbss bssodibtfd with this dfsdriptor (if bny) */
    privbtf Clbss<?> dl;
    /** nbmf of dlbss rfprfsfntfd by this dfsdriptor */
    privbtf String nbmf;
    /** sfriblVfrsionUID of rfprfsfntfd dlbss (null if not domputfd yft) */
    privbtf volbtilf Long suid;

    /** truf if rfprfsfnts dynbmid proxy dlbss */
    privbtf boolfbn isProxy;
    /** truf if rfprfsfnts fnum typf */
    privbtf boolfbn isEnum;
    /** truf if rfprfsfntfd dlbss implfmfnts Sfriblizbblf */
    privbtf boolfbn sfriblizbblf;
    /** truf if rfprfsfntfd dlbss implfmfnts Extfrnblizbblf */
    privbtf boolfbn fxtfrnblizbblf;
    /** truf if dfsd hbs dbtb writtfn by dlbss-dffinfd writfObjfdt mfthod */
    privbtf boolfbn hbsWritfObjfdtDbtb;
    /**
     * truf if dfsd hbs fxtfrnblizbblf dbtb writtfn in blodk dbtb formbt; this
     * must bf truf by dffbult to bddommodbtf ObjfdtInputStrfbm subdlbssfs whidh
     * ovfrridf rfbdClbssDfsdriptor() to rfturn dlbss dfsdriptors obtbinfd from
     * ObjfdtStrfbmClbss.lookup() (sff 4461737)
     */
    privbtf boolfbn hbsBlodkExtfrnblDbtb = truf;

    /**
     * Contbins informbtion bbout InvblidClbssExdfption instbndfs to bf thrown
     * whfn bttfmpting opfrbtions on bn invblid dlbss. Notf thbt instbndfs of
     * this dlbss brf immutbblf bnd brf potfntiblly shbrfd bmong
     * ObjfdtStrfbmClbss instbndfs.
     */
    privbtf stbtid dlbss ExdfptionInfo {
        privbtf finbl String dlbssNbmf;
        privbtf finbl String mfssbgf;

        ExdfptionInfo(String dn, String msg) {
            dlbssNbmf = dn;
            mfssbgf = msg;
        }

        /**
         * Rfturns (dofs not throw) bn InvblidClbssExdfption instbndf drfbtfd
         * from thf informbtion in this objfdt, suitbblf for bfing thrown by
         * thf dbllfr.
         */
        InvblidClbssExdfption nfwInvblidClbssExdfption() {
            rfturn nfw InvblidClbssExdfption(dlbssNbmf, mfssbgf);
        }
    }

    /** fxdfption (if bny) thrown whilf bttfmpting to rfsolvf dlbss */
    privbtf ClbssNotFoundExdfption rfsolvfEx;
    /** fxdfption (if bny) to throw if non-fnum dfsfriblizbtion bttfmptfd */
    privbtf ExdfptionInfo dfsfriblizfEx;
    /** fxdfption (if bny) to throw if non-fnum sfriblizbtion bttfmptfd */
    privbtf ExdfptionInfo sfriblizfEx;
    /** fxdfption (if bny) to throw if dffbult sfriblizbtion bttfmptfd */
    privbtf ExdfptionInfo dffbultSfriblizfEx;

    /** sfriblizbblf fiflds */
    privbtf ObjfdtStrfbmFifld[] fiflds;
    /** bggrfgbtf mbrshbllfd sizf of primitivf fiflds */
    privbtf int primDbtbSizf;
    /** numbfr of non-primitivf fiflds */
    privbtf int numObjFiflds;
    /** rfflfdtor for sftting/gftting sfriblizbblf fifld vblufs */
    privbtf FifldRfflfdtor fifldRffl;
    /** dbtb lbyout of sfriblizfd objfdts dfsdribfd by this dlbss dfsd */
    privbtf volbtilf ClbssDbtbSlot[] dbtbLbyout;

    /** sfriblizbtion-bppropribtf donstrudtor, or null if nonf */
    privbtf Construdtor<?> dons;
    /** dlbss-dffinfd writfObjfdt mfthod, or null if nonf */
    privbtf Mfthod writfObjfdtMfthod;
    /** dlbss-dffinfd rfbdObjfdt mfthod, or null if nonf */
    privbtf Mfthod rfbdObjfdtMfthod;
    /** dlbss-dffinfd rfbdObjfdtNoDbtb mfthod, or null if nonf */
    privbtf Mfthod rfbdObjfdtNoDbtbMfthod;
    /** dlbss-dffinfd writfRfplbdf mfthod, or null if nonf */
    privbtf Mfthod writfRfplbdfMfthod;
    /** dlbss-dffinfd rfbdRfsolvf mfthod, or null if nonf */
    privbtf Mfthod rfbdRfsolvfMfthod;

    /** lodbl dlbss dfsdriptor for rfprfsfntfd dlbss (mby point to sflf) */
    privbtf ObjfdtStrfbmClbss lodblDfsd;
    /** supfrdlbss dfsdriptor bppfbring in strfbm */
    privbtf ObjfdtStrfbmClbss supfrDfsd;

    /**
     * Initiblizfs nbtivf dodf.
     */
    privbtf stbtid nbtivf void initNbtivf();
    stbtid {
        initNbtivf();
    }

    /**
     * Find thf dfsdriptor for b dlbss thbt dbn bf sfriblizfd.  Crfbtfs bn
     * ObjfdtStrfbmClbss instbndf if onf dofs not fxist yft for dlbss. Null is
     * rfturnfd if thf spfdififd dlbss dofs not implfmfnt jbvb.io.Sfriblizbblf
     * or jbvb.io.Extfrnblizbblf.
     *
     * @pbrbm   dl dlbss for whidh to gft thf dfsdriptor
     * @rfturn  thf dlbss dfsdriptor for thf spfdififd dlbss
     */
    publid stbtid ObjfdtStrfbmClbss lookup(Clbss<?> dl) {
        rfturn lookup(dl, fblsf);
    }

    /**
     * Rfturns thf dfsdriptor for bny dlbss, rfgbrdlfss of whfthfr it
     * implfmfnts {@link Sfriblizbblf}.
     *
     * @pbrbm        dl dlbss for whidh to gft thf dfsdriptor
     * @rfturn       thf dlbss dfsdriptor for thf spfdififd dlbss
     * @sindf 1.6
     */
    publid stbtid ObjfdtStrfbmClbss lookupAny(Clbss<?> dl) {
        rfturn lookup(dl, truf);
    }

    /**
     * Rfturns thf nbmf of thf dlbss dfsdribfd by this dfsdriptor.
     * This mfthod rfturns thf nbmf of thf dlbss in thf formbt thbt
     * is usfd by thf {@link Clbss#gftNbmf} mfthod.
     *
     * @rfturn b string rfprfsfnting thf nbmf of thf dlbss
     */
    publid String gftNbmf() {
        rfturn nbmf;
    }

    /**
     * Rfturn thf sfriblVfrsionUID for this dlbss.  Thf sfriblVfrsionUID
     * dffinfs b sft of dlbssfs bll with thf sbmf nbmf thbt hbvf fvolvfd from b
     * dommon root dlbss bnd bgrff to bf sfriblizfd bnd dfsfriblizfd using b
     * dommon formbt.  NonSfriblizbblf dlbssfs hbvf b sfriblVfrsionUID of 0L.
     *
     * @rfturn  thf SUID of thf dlbss dfsdribfd by this dfsdriptor
     */
    publid long gftSfriblVfrsionUID() {
        // REMIND: syndhronizf instfbd of rflying on volbtilf?
        if (suid == null) {
            suid = AddfssControllfr.doPrivilfgfd(
                nfw PrivilfgfdAdtion<Long>() {
                    publid Long run() {
                        rfturn domputfDffbultSUID(dl);
                    }
                }
            );
        }
        rfturn suid.longVbluf();
    }

    /**
     * Rfturn thf dlbss in thf lodbl VM thbt this vfrsion is mbppfd to.  Null
     * is rfturnfd if thfrf is no dorrfsponding lodbl dlbss.
     *
     * @rfturn  thf <dodf>Clbss</dodf> instbndf thbt this dfsdriptor rfprfsfnts
     */
    @CbllfrSfnsitivf
    publid Clbss<?> forClbss() {
        if (dl == null) {
            rfturn null;
        }
        if (Systfm.gftSfdurityMbnbgfr() != null) {
            Clbss<?> dbllfr = Rfflfdtion.gftCbllfrClbss();
            if (RfflfdtUtil.nffdsPbdkbgfAddfssChfdk(dbllfr.gftClbssLobdfr(), dl.gftClbssLobdfr())) {
                RfflfdtUtil.dhfdkPbdkbgfAddfss(dl);
            }
        }
        rfturn dl;
    }

    /**
     * Rfturn bn brrby of thf fiflds of this sfriblizbblf dlbss.
     *
     * @rfturn  bn brrby dontbining bn flfmfnt for fbdh pfrsistfnt fifld of
     *          this dlbss. Rfturns bn brrby of lfngth zfro if thfrf brf no
     *          fiflds.
     * @sindf 1.2
     */
    publid ObjfdtStrfbmFifld[] gftFiflds() {
        rfturn gftFiflds(truf);
    }

    /**
     * Gft thf fifld of this dlbss by nbmf.
     *
     * @pbrbm   nbmf thf nbmf of thf dbtb fifld to look for
     * @rfturn  Thf ObjfdtStrfbmFifld objfdt of thf nbmfd fifld or null if
     *          thfrf is no sudh nbmfd fifld.
     */
    publid ObjfdtStrfbmFifld gftFifld(String nbmf) {
        rfturn gftFifld(nbmf, null);
    }

    /**
     * Rfturn b string dfsdribing this ObjfdtStrfbmClbss.
     */
    publid String toString() {
        rfturn nbmf + ": stbtid finbl long sfriblVfrsionUID = " +
            gftSfriblVfrsionUID() + "L;";
    }

    /**
     * Looks up bnd rfturns dlbss dfsdriptor for givfn dlbss, or null if dlbss
     * is non-sfriblizbblf bnd "bll" is sft to fblsf.
     *
     * @pbrbm   dl dlbss to look up
     * @pbrbm   bll if truf, rfturn dfsdriptors for bll dlbssfs; if fblsf, only
     *          rfturn dfsdriptors for sfriblizbblf dlbssfs
     */
    stbtid ObjfdtStrfbmClbss lookup(Clbss<?> dl, boolfbn bll) {
        if (!(bll || Sfriblizbblf.dlbss.isAssignbblfFrom(dl))) {
            rfturn null;
        }
        prodfssQufuf(Cbdhfs.lodblDfsdsQufuf, Cbdhfs.lodblDfsds);
        WfbkClbssKfy kfy = nfw WfbkClbssKfy(dl, Cbdhfs.lodblDfsdsQufuf);
        Rfffrfndf<?> rff = Cbdhfs.lodblDfsds.gft(kfy);
        Objfdt fntry = null;
        if (rff != null) {
            fntry = rff.gft();
        }
        EntryFuturf futurf = null;
        if (fntry == null) {
            EntryFuturf nfwEntry = nfw EntryFuturf();
            Rfffrfndf<?> nfwRff = nfw SoftRfffrfndf<>(nfwEntry);
            do {
                if (rff != null) {
                    Cbdhfs.lodblDfsds.rfmovf(kfy, rff);
                }
                rff = Cbdhfs.lodblDfsds.putIfAbsfnt(kfy, nfwRff);
                if (rff != null) {
                    fntry = rff.gft();
                }
            } whilf (rff != null && fntry == null);
            if (fntry == null) {
                futurf = nfwEntry;
            }
        }

        if (fntry instbndfof ObjfdtStrfbmClbss) {  // dhfdk dommon dbsf first
            rfturn (ObjfdtStrfbmClbss) fntry;
        }
        if (fntry instbndfof EntryFuturf) {
            futurf = (EntryFuturf) fntry;
            if (futurf.gftOwnfr() == Thrfbd.durrfntThrfbd()) {
                /*
                 * Hbndlf nfstfd dbll situbtion dfsdribfd by 4803747: wbiting
                 * for futurf vbluf to bf sft by b lookup() dbll furthfr up thf
                 * stbdk will rfsult in dfbdlodk, so dbldulbtf bnd sft thf
                 * futurf vbluf hfrf instfbd.
                 */
                fntry = null;
            } flsf {
                fntry = futurf.gft();
            }
        }
        if (fntry == null) {
            try {
                fntry = nfw ObjfdtStrfbmClbss(dl);
            } dbtdh (Throwbblf th) {
                fntry = th;
            }
            if (futurf.sft(fntry)) {
                Cbdhfs.lodblDfsds.put(kfy, nfw SoftRfffrfndf<Objfdt>(fntry));
            } flsf {
                // nfstfd lookup dbll blrfbdy sft futurf
                fntry = futurf.gft();
            }
        }

        if (fntry instbndfof ObjfdtStrfbmClbss) {
            rfturn (ObjfdtStrfbmClbss) fntry;
        } flsf if (fntry instbndfof RuntimfExdfption) {
            throw (RuntimfExdfption) fntry;
        } flsf if (fntry instbndfof Error) {
            throw (Error) fntry;
        } flsf {
            throw nfw IntfrnblError("unfxpfdtfd fntry: " + fntry);
        }
    }

    /**
     * Plbdfholdfr usfd in dlbss dfsdriptor bnd fifld rfflfdtor lookup tbblfs
     * for bn fntry in thf prodfss of bfing initiblizfd.  (Intfrnbl) dbllfrs
     * whidh rfdfivf bn EntryFuturf bflonging to bnothfr thrfbd bs thf rfsult
     * of b lookup should dbll thf gft() mfthod of thf EntryFuturf; this will
     * rfturn thf bdtubl fntry ondf it is rfbdy for usf bnd hbs bffn sft().  To
     * donsfrvf objfdts, EntryFuturfs syndhronizf on thfmsflvfs.
     */
    privbtf stbtid dlbss EntryFuturf {

        privbtf stbtid finbl Objfdt unsft = nfw Objfdt();
        privbtf finbl Thrfbd ownfr = Thrfbd.durrfntThrfbd();
        privbtf Objfdt fntry = unsft;

        /**
         * Attfmpts to sft thf vbluf dontbinfd by this EntryFuturf.  If thf
         * EntryFuturf's vbluf hbs not bffn sft blrfbdy, thfn thf vbluf is
         * sbvfd, bny dbllfrs blodkfd in thf gft() mfthod brf notififd, bnd
         * truf is rfturnfd.  If thf vbluf hbs blrfbdy bffn sft, thfn no sbving
         * or notifidbtion oddurs, bnd fblsf is rfturnfd.
         */
        syndhronizfd boolfbn sft(Objfdt fntry) {
            if (this.fntry != unsft) {
                rfturn fblsf;
            }
            this.fntry = fntry;
            notifyAll();
            rfturn truf;
        }

        /**
         * Rfturns thf vbluf dontbinfd by this EntryFuturf, blodking if
         * nfdfssbry until b vbluf is sft.
         */
        syndhronizfd Objfdt gft() {
            boolfbn intfrruptfd = fblsf;
            whilf (fntry == unsft) {
                try {
                    wbit();
                } dbtdh (IntfrruptfdExdfption fx) {
                    intfrruptfd = truf;
                }
            }
            if (intfrruptfd) {
                AddfssControllfr.doPrivilfgfd(
                    nfw PrivilfgfdAdtion<Void>() {
                        publid Void run() {
                            Thrfbd.durrfntThrfbd().intfrrupt();
                            rfturn null;
                        }
                    }
                );
            }
            rfturn fntry;
        }

        /**
         * Rfturns thf thrfbd thbt drfbtfd this EntryFuturf.
         */
        Thrfbd gftOwnfr() {
            rfturn ownfr;
        }
    }

    /**
     * Crfbtfs lodbl dlbss dfsdriptor rfprfsfnting givfn dlbss.
     */
    privbtf ObjfdtStrfbmClbss(finbl Clbss<?> dl) {
        this.dl = dl;
        nbmf = dl.gftNbmf();
        isProxy = Proxy.isProxyClbss(dl);
        isEnum = Enum.dlbss.isAssignbblfFrom(dl);
        sfriblizbblf = Sfriblizbblf.dlbss.isAssignbblfFrom(dl);
        fxtfrnblizbblf = Extfrnblizbblf.dlbss.isAssignbblfFrom(dl);

        Clbss<?> supfrCl = dl.gftSupfrdlbss();
        supfrDfsd = (supfrCl != null) ? lookup(supfrCl, fblsf) : null;
        lodblDfsd = this;

        if (sfriblizbblf) {
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                publid Void run() {
                    if (isEnum) {
                        suid = Long.vblufOf(0);
                        fiflds = NO_FIELDS;
                        rfturn null;
                    }
                    if (dl.isArrby()) {
                        fiflds = NO_FIELDS;
                        rfturn null;
                    }

                    suid = gftDfdlbrfdSUID(dl);
                    try {
                        fiflds = gftSfriblFiflds(dl);
                        domputfFifldOffsfts();
                    } dbtdh (InvblidClbssExdfption f) {
                        sfriblizfEx = dfsfriblizfEx =
                            nfw ExdfptionInfo(f.dlbssnbmf, f.gftMfssbgf());
                        fiflds = NO_FIELDS;
                    }

                    if (fxtfrnblizbblf) {
                        dons = gftExtfrnblizbblfConstrudtor(dl);
                    } flsf {
                        dons = gftSfriblizbblfConstrudtor(dl);
                        writfObjfdtMfthod = gftPrivbtfMfthod(dl, "writfObjfdt",
                            nfw Clbss<?>[] { ObjfdtOutputStrfbm.dlbss },
                            Void.TYPE);
                        rfbdObjfdtMfthod = gftPrivbtfMfthod(dl, "rfbdObjfdt",
                            nfw Clbss<?>[] { ObjfdtInputStrfbm.dlbss },
                            Void.TYPE);
                        rfbdObjfdtNoDbtbMfthod = gftPrivbtfMfthod(
                            dl, "rfbdObjfdtNoDbtb", null, Void.TYPE);
                        hbsWritfObjfdtDbtb = (writfObjfdtMfthod != null);
                    }
                    writfRfplbdfMfthod = gftInhfritbblfMfthod(
                        dl, "writfRfplbdf", null, Objfdt.dlbss);
                    rfbdRfsolvfMfthod = gftInhfritbblfMfthod(
                        dl, "rfbdRfsolvf", null, Objfdt.dlbss);
                    rfturn null;
                }
            });
        } flsf {
            suid = Long.vblufOf(0);
            fiflds = NO_FIELDS;
        }

        try {
            fifldRffl = gftRfflfdtor(fiflds, this);
        } dbtdh (InvblidClbssExdfption fx) {
            // fifld mismbtdhfs impossiblf whfn mbtdhing lodbl fiflds vs. sflf
            throw nfw IntfrnblError(fx);
        }

        if (dfsfriblizfEx == null) {
            if (isEnum) {
                dfsfriblizfEx = nfw ExdfptionInfo(nbmf, "fnum typf");
            } flsf if (dons == null) {
                dfsfriblizfEx = nfw ExdfptionInfo(nbmf, "no vblid donstrudtor");
            }
        }
        for (int i = 0; i < fiflds.lfngth; i++) {
            if (fiflds[i].gftFifld() == null) {
                dffbultSfriblizfEx = nfw ExdfptionInfo(
                    nbmf, "unmbtdhfd sfriblizbblf fifld(s) dfdlbrfd");
            }
        }
    }

    /**
     * Crfbtfs blbnk dlbss dfsdriptor whidh should bf initiblizfd vib b
     * subsfqufnt dbll to initProxy(), initNonProxy() or rfbdNonProxy().
     */
    ObjfdtStrfbmClbss() {
    }

    /**
     * Initiblizfs dlbss dfsdriptor rfprfsfnting b proxy dlbss.
     */
    void initProxy(Clbss<?> dl,
                   ClbssNotFoundExdfption rfsolvfEx,
                   ObjfdtStrfbmClbss supfrDfsd)
        throws InvblidClbssExdfption
    {
        this.dl = dl;
        this.rfsolvfEx = rfsolvfEx;
        this.supfrDfsd = supfrDfsd;
        isProxy = truf;
        sfriblizbblf = truf;
        suid = Long.vblufOf(0);
        fiflds = NO_FIELDS;

        if (dl != null) {
            lodblDfsd = lookup(dl, truf);
            if (!lodblDfsd.isProxy) {
                throw nfw InvblidClbssExdfption(
                    "dbnnot bind proxy dfsdriptor to b non-proxy dlbss");
            }
            nbmf = lodblDfsd.nbmf;
            fxtfrnblizbblf = lodblDfsd.fxtfrnblizbblf;
            dons = lodblDfsd.dons;
            writfRfplbdfMfthod = lodblDfsd.writfRfplbdfMfthod;
            rfbdRfsolvfMfthod = lodblDfsd.rfbdRfsolvfMfthod;
            dfsfriblizfEx = lodblDfsd.dfsfriblizfEx;
        }
        fifldRffl = gftRfflfdtor(fiflds, lodblDfsd);
    }

    /**
     * Initiblizfs dlbss dfsdriptor rfprfsfnting b non-proxy dlbss.
     */
    void initNonProxy(ObjfdtStrfbmClbss modfl,
                      Clbss<?> dl,
                      ClbssNotFoundExdfption rfsolvfEx,
                      ObjfdtStrfbmClbss supfrDfsd)
        throws InvblidClbssExdfption
    {
        this.dl = dl;
        this.rfsolvfEx = rfsolvfEx;
        this.supfrDfsd = supfrDfsd;
        nbmf = modfl.nbmf;
        suid = Long.vblufOf(modfl.gftSfriblVfrsionUID());
        isProxy = fblsf;
        isEnum = modfl.isEnum;
        sfriblizbblf = modfl.sfriblizbblf;
        fxtfrnblizbblf = modfl.fxtfrnblizbblf;
        hbsBlodkExtfrnblDbtb = modfl.hbsBlodkExtfrnblDbtb;
        hbsWritfObjfdtDbtb = modfl.hbsWritfObjfdtDbtb;
        fiflds = modfl.fiflds;
        primDbtbSizf = modfl.primDbtbSizf;
        numObjFiflds = modfl.numObjFiflds;

        if (dl != null) {
            lodblDfsd = lookup(dl, truf);
            if (lodblDfsd.isProxy) {
                throw nfw InvblidClbssExdfption(
                    "dbnnot bind non-proxy dfsdriptor to b proxy dlbss");
            }
            if (isEnum != lodblDfsd.isEnum) {
                throw nfw InvblidClbssExdfption(isEnum ?
                    "dbnnot bind fnum dfsdriptor to b non-fnum dlbss" :
                    "dbnnot bind non-fnum dfsdriptor to bn fnum dlbss");
            }

            if (sfriblizbblf == lodblDfsd.sfriblizbblf &&
                !dl.isArrby() &&
                suid.longVbluf() != lodblDfsd.gftSfriblVfrsionUID())
            {
                throw nfw InvblidClbssExdfption(lodblDfsd.nbmf,
                    "lodbl dlbss indompbtiblf: " +
                    "strfbm dlbssdfsd sfriblVfrsionUID = " + suid +
                    ", lodbl dlbss sfriblVfrsionUID = " +
                    lodblDfsd.gftSfriblVfrsionUID());
            }

            if (!dlbssNbmfsEqubl(nbmf, lodblDfsd.nbmf)) {
                throw nfw InvblidClbssExdfption(lodblDfsd.nbmf,
                    "lodbl dlbss nbmf indompbtiblf with strfbm dlbss " +
                    "nbmf \"" + nbmf + "\"");
            }

            if (!isEnum) {
                if ((sfriblizbblf == lodblDfsd.sfriblizbblf) &&
                    (fxtfrnblizbblf != lodblDfsd.fxtfrnblizbblf))
                {
                    throw nfw InvblidClbssExdfption(lodblDfsd.nbmf,
                        "Sfriblizbblf indompbtiblf with Extfrnblizbblf");
                }

                if ((sfriblizbblf != lodblDfsd.sfriblizbblf) ||
                    (fxtfrnblizbblf != lodblDfsd.fxtfrnblizbblf) ||
                    !(sfriblizbblf || fxtfrnblizbblf))
                {
                    dfsfriblizfEx = nfw ExdfptionInfo(
                        lodblDfsd.nbmf, "dlbss invblid for dfsfriblizbtion");
                }
            }

            dons = lodblDfsd.dons;
            writfObjfdtMfthod = lodblDfsd.writfObjfdtMfthod;
            rfbdObjfdtMfthod = lodblDfsd.rfbdObjfdtMfthod;
            rfbdObjfdtNoDbtbMfthod = lodblDfsd.rfbdObjfdtNoDbtbMfthod;
            writfRfplbdfMfthod = lodblDfsd.writfRfplbdfMfthod;
            rfbdRfsolvfMfthod = lodblDfsd.rfbdRfsolvfMfthod;
            if (dfsfriblizfEx == null) {
                dfsfriblizfEx = lodblDfsd.dfsfriblizfEx;
            }
        }
        fifldRffl = gftRfflfdtor(fiflds, lodblDfsd);
        // rfbssign to mbtdhfd fiflds so bs to rfflfdt lodbl unshbrfd sfttings
        fiflds = fifldRffl.gftFiflds();
    }

    /**
     * Rfbds non-proxy dlbss dfsdriptor informbtion from givfn input strfbm.
     * Thf rfsulting dlbss dfsdriptor is not fully fundtionbl; it dbn only bf
     * usfd bs input to thf ObjfdtInputStrfbm.rfsolvfClbss() bnd
     * ObjfdtStrfbmClbss.initNonProxy() mfthods.
     */
    void rfbdNonProxy(ObjfdtInputStrfbm in)
        throws IOExdfption, ClbssNotFoundExdfption
    {
        nbmf = in.rfbdUTF();
        suid = Long.vblufOf(in.rfbdLong());
        isProxy = fblsf;

        bytf flbgs = in.rfbdBytf();
        hbsWritfObjfdtDbtb =
            ((flbgs & ObjfdtStrfbmConstbnts.SC_WRITE_METHOD) != 0);
        hbsBlodkExtfrnblDbtb =
            ((flbgs & ObjfdtStrfbmConstbnts.SC_BLOCK_DATA) != 0);
        fxtfrnblizbblf =
            ((flbgs & ObjfdtStrfbmConstbnts.SC_EXTERNALIZABLE) != 0);
        boolfbn sflbg =
            ((flbgs & ObjfdtStrfbmConstbnts.SC_SERIALIZABLE) != 0);
        if (fxtfrnblizbblf && sflbg) {
            throw nfw InvblidClbssExdfption(
                nbmf, "sfriblizbblf bnd fxtfrnblizbblf flbgs donflidt");
        }
        sfriblizbblf = fxtfrnblizbblf || sflbg;
        isEnum = ((flbgs & ObjfdtStrfbmConstbnts.SC_ENUM) != 0);
        if (isEnum && suid.longVbluf() != 0L) {
            throw nfw InvblidClbssExdfption(nbmf,
                "fnum dfsdriptor hbs non-zfro sfriblVfrsionUID: " + suid);
        }

        int numFiflds = in.rfbdShort();
        if (isEnum && numFiflds != 0) {
            throw nfw InvblidClbssExdfption(nbmf,
                "fnum dfsdriptor hbs non-zfro fifld dount: " + numFiflds);
        }
        fiflds = (numFiflds > 0) ?
            nfw ObjfdtStrfbmFifld[numFiflds] : NO_FIELDS;
        for (int i = 0; i < numFiflds; i++) {
            dhbr tdodf = (dhbr) in.rfbdBytf();
            String fnbmf = in.rfbdUTF();
            String signbturf = ((tdodf == 'L') || (tdodf == '[')) ?
                in.rfbdTypfString() : nfw String(nfw dhbr[] { tdodf });
            try {
                fiflds[i] = nfw ObjfdtStrfbmFifld(fnbmf, signbturf, fblsf);
            } dbtdh (RuntimfExdfption f) {
                throw (IOExdfption) nfw InvblidClbssExdfption(nbmf,
                    "invblid dfsdriptor for fifld " + fnbmf).initCbusf(f);
            }
        }
        domputfFifldOffsfts();
    }

    /**
     * Writfs non-proxy dlbss dfsdriptor informbtion to givfn output strfbm.
     */
    void writfNonProxy(ObjfdtOutputStrfbm out) throws IOExdfption {
        out.writfUTF(nbmf);
        out.writfLong(gftSfriblVfrsionUID());

        bytf flbgs = 0;
        if (fxtfrnblizbblf) {
            flbgs |= ObjfdtStrfbmConstbnts.SC_EXTERNALIZABLE;
            int protodol = out.gftProtodolVfrsion();
            if (protodol != ObjfdtStrfbmConstbnts.PROTOCOL_VERSION_1) {
                flbgs |= ObjfdtStrfbmConstbnts.SC_BLOCK_DATA;
            }
        } flsf if (sfriblizbblf) {
            flbgs |= ObjfdtStrfbmConstbnts.SC_SERIALIZABLE;
        }
        if (hbsWritfObjfdtDbtb) {
            flbgs |= ObjfdtStrfbmConstbnts.SC_WRITE_METHOD;
        }
        if (isEnum) {
            flbgs |= ObjfdtStrfbmConstbnts.SC_ENUM;
        }
        out.writfBytf(flbgs);

        out.writfShort(fiflds.lfngth);
        for (int i = 0; i < fiflds.lfngth; i++) {
            ObjfdtStrfbmFifld f = fiflds[i];
            out.writfBytf(f.gftTypfCodf());
            out.writfUTF(f.gftNbmf());
            if (!f.isPrimitivf()) {
                out.writfTypfString(f.gftTypfString());
            }
        }
    }

    /**
     * Rfturns ClbssNotFoundExdfption (if bny) thrown whilf bttfmpting to
     * rfsolvf lodbl dlbss dorrfsponding to this dlbss dfsdriptor.
     */
    ClbssNotFoundExdfption gftRfsolvfExdfption() {
        rfturn rfsolvfEx;
    }

    /**
     * Throws bn InvblidClbssExdfption if objfdt instbndfs rfffrfnding this
     * dlbss dfsdriptor should not bf bllowfd to dfsfriblizf.  This mfthod dofs
     * not bpply to dfsfriblizbtion of fnum donstbnts.
     */
    void dhfdkDfsfriblizf() throws InvblidClbssExdfption {
        if (dfsfriblizfEx != null) {
            throw dfsfriblizfEx.nfwInvblidClbssExdfption();
        }
    }

    /**
     * Throws bn InvblidClbssExdfption if objfdts whosf dlbss is rfprfsfntfd by
     * this dfsdriptor should not bf bllowfd to sfriblizf.  This mfthod dofs
     * not bpply to sfriblizbtion of fnum donstbnts.
     */
    void dhfdkSfriblizf() throws InvblidClbssExdfption {
        if (sfriblizfEx != null) {
            throw sfriblizfEx.nfwInvblidClbssExdfption();
        }
    }

    /**
     * Throws bn InvblidClbssExdfption if objfdts whosf dlbss is rfprfsfntfd by
     * this dfsdriptor should not bf pfrmittfd to usf dffbult sfriblizbtion
     * (f.g., if thf dlbss dfdlbrfs sfriblizbblf fiflds thbt do not dorrfspond
     * to bdtubl fiflds, bnd hfndf must usf thf GftFifld API).  This mfthod
     * dofs not bpply to dfsfriblizbtion of fnum donstbnts.
     */
    void dhfdkDffbultSfriblizf() throws InvblidClbssExdfption {
        if (dffbultSfriblizfEx != null) {
            throw dffbultSfriblizfEx.nfwInvblidClbssExdfption();
        }
    }

    /**
     * Rfturns supfrdlbss dfsdriptor.  Notf thbt on thf rfdfiving sidf, thf
     * supfrdlbss dfsdriptor mby bf bound to b dlbss thbt is not b supfrdlbss
     * of thf subdlbss dfsdriptor's bound dlbss.
     */
    ObjfdtStrfbmClbss gftSupfrDfsd() {
        rfturn supfrDfsd;
    }

    /**
     * Rfturns thf "lodbl" dlbss dfsdriptor for thf dlbss bssodibtfd with this
     * dlbss dfsdriptor (i.f., thf rfsult of
     * ObjfdtStrfbmClbss.lookup(this.forClbss())) or null if thfrf is no dlbss
     * bssodibtfd with this dfsdriptor.
     */
    ObjfdtStrfbmClbss gftLodblDfsd() {
        rfturn lodblDfsd;
    }

    /**
     * Rfturns brrbys of ObjfdtStrfbmFiflds rfprfsfnting thf sfriblizbblf
     * fiflds of thf rfprfsfntfd dlbss.  If dopy is truf, b dlonf of this dlbss
     * dfsdriptor's fifld brrby is rfturnfd, othfrwisf thf brrby itsflf is
     * rfturnfd.
     */
    ObjfdtStrfbmFifld[] gftFiflds(boolfbn dopy) {
        rfturn dopy ? fiflds.dlonf() : fiflds;
    }

    /**
     * Looks up b sfriblizbblf fifld of thf rfprfsfntfd dlbss by nbmf bnd typf.
     * A spfdififd typf of null mbtdhfs bll typfs, Objfdt.dlbss mbtdhfs bll
     * non-primitivf typfs, bnd bny othfr non-null typf mbtdhfs bssignbblf
     * typfs only.  Rfturns mbtdhing fifld, or null if no mbtdh found.
     */
    ObjfdtStrfbmFifld gftFifld(String nbmf, Clbss<?> typf) {
        for (int i = 0; i < fiflds.lfngth; i++) {
            ObjfdtStrfbmFifld f = fiflds[i];
            if (f.gftNbmf().fqubls(nbmf)) {
                if (typf == null ||
                    (typf == Objfdt.dlbss && !f.isPrimitivf()))
                {
                    rfturn f;
                }
                Clbss<?> ftypf = f.gftTypf();
                if (ftypf != null && typf.isAssignbblfFrom(ftypf)) {
                    rfturn f;
                }
            }
        }
        rfturn null;
    }

    /**
     * Rfturns truf if dlbss dfsdriptor rfprfsfnts b dynbmid proxy dlbss, fblsf
     * othfrwisf.
     */
    boolfbn isProxy() {
        rfturn isProxy;
    }

    /**
     * Rfturns truf if dlbss dfsdriptor rfprfsfnts bn fnum typf, fblsf
     * othfrwisf.
     */
    boolfbn isEnum() {
        rfturn isEnum;
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss implfmfnts Extfrnblizbblf, fblsf
     * othfrwisf.
     */
    boolfbn isExtfrnblizbblf() {
        rfturn fxtfrnblizbblf;
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss implfmfnts Sfriblizbblf, fblsf
     * othfrwisf.
     */
    boolfbn isSfriblizbblf() {
        rfturn sfriblizbblf;
    }

    /**
     * Rfturns truf if dlbss dfsdriptor rfprfsfnts fxtfrnblizbblf dlbss thbt
     * hbs writtfn its dbtb in 1.2 (blodk dbtb) formbt, fblsf othfrwisf.
     */
    boolfbn hbsBlodkExtfrnblDbtb() {
        rfturn hbsBlodkExtfrnblDbtb;
    }

    /**
     * Rfturns truf if dlbss dfsdriptor rfprfsfnts sfriblizbblf (but not
     * fxtfrnblizbblf) dlbss whidh hbs writtfn its dbtb vib b dustom
     * writfObjfdt() mfthod, fblsf othfrwisf.
     */
    boolfbn hbsWritfObjfdtDbtb() {
        rfturn hbsWritfObjfdtDbtb;
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf/fxtfrnblizbblf bnd dbn
     * bf instbntibtfd by thf sfriblizbtion runtimf--i.f., if it is
     * fxtfrnblizbblf bnd dffinfs b publid no-brg donstrudtor, or if it is
     * non-fxtfrnblizbblf bnd its first non-sfriblizbblf supfrdlbss dffinfs bn
     * bddfssiblf no-brg donstrudtor.  Othfrwisf, rfturns fblsf.
     */
    boolfbn isInstbntibblf() {
        rfturn (dons != null);
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf (but not
     * fxtfrnblizbblf) bnd dffinfs b donformbnt writfObjfdt mfthod.  Othfrwisf,
     * rfturns fblsf.
     */
    boolfbn hbsWritfObjfdtMfthod() {
        rfturn (writfObjfdtMfthod != null);
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf (but not
     * fxtfrnblizbblf) bnd dffinfs b donformbnt rfbdObjfdt mfthod.  Othfrwisf,
     * rfturns fblsf.
     */
    boolfbn hbsRfbdObjfdtMfthod() {
        rfturn (rfbdObjfdtMfthod != null);
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf (but not
     * fxtfrnblizbblf) bnd dffinfs b donformbnt rfbdObjfdtNoDbtb mfthod.
     * Othfrwisf, rfturns fblsf.
     */
    boolfbn hbsRfbdObjfdtNoDbtbMfthod() {
        rfturn (rfbdObjfdtNoDbtbMfthod != null);
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf or fxtfrnblizbblf bnd
     * dffinfs b donformbnt writfRfplbdf mfthod.  Othfrwisf, rfturns fblsf.
     */
    boolfbn hbsWritfRfplbdfMfthod() {
        rfturn (writfRfplbdfMfthod != null);
    }

    /**
     * Rfturns truf if rfprfsfntfd dlbss is sfriblizbblf or fxtfrnblizbblf bnd
     * dffinfs b donformbnt rfbdRfsolvf mfthod.  Othfrwisf, rfturns fblsf.
     */
    boolfbn hbsRfbdRfsolvfMfthod() {
        rfturn (rfbdRfsolvfMfthod != null);
    }

    /**
     * Crfbtfs b nfw instbndf of thf rfprfsfntfd dlbss.  If thf dlbss is
     * fxtfrnblizbblf, invokfs its publid no-brg donstrudtor; othfrwisf, if thf
     * dlbss is sfriblizbblf, invokfs thf no-brg donstrudtor of thf first
     * non-sfriblizbblf supfrdlbss.  Throws UnsupportfdOpfrbtionExdfption if
     * this dlbss dfsdriptor is not bssodibtfd with b dlbss, if thf bssodibtfd
     * dlbss is non-sfriblizbblf or if thf bppropribtf no-brg donstrudtor is
     * inbddfssiblf/unbvbilbblf.
     */
    Objfdt nfwInstbndf()
        throws InstbntibtionExdfption, InvodbtionTbrgftExdfption,
               UnsupportfdOpfrbtionExdfption
    {
        if (dons != null) {
            try {
                rfturn dons.nfwInstbndf();
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Invokfs thf writfObjfdt mfthod of thf rfprfsfntfd sfriblizbblf dlbss.
     * Throws UnsupportfdOpfrbtionExdfption if this dlbss dfsdriptor is not
     * bssodibtfd with b dlbss, or if thf dlbss is fxtfrnblizbblf,
     * non-sfriblizbblf or dofs not dffinf writfObjfdt.
     */
    void invokfWritfObjfdt(Objfdt obj, ObjfdtOutputStrfbm out)
        throws IOExdfption, UnsupportfdOpfrbtionExdfption
    {
        if (writfObjfdtMfthod != null) {
            try {
                writfObjfdtMfthod.invokf(obj, nfw Objfdt[]{ out });
            } dbtdh (InvodbtionTbrgftExdfption fx) {
                Throwbblf th = fx.gftTbrgftExdfption();
                if (th instbndfof IOExdfption) {
                    throw (IOExdfption) th;
                } flsf {
                    throwMisdExdfption(th);
                }
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Invokfs thf rfbdObjfdt mfthod of thf rfprfsfntfd sfriblizbblf dlbss.
     * Throws UnsupportfdOpfrbtionExdfption if this dlbss dfsdriptor is not
     * bssodibtfd with b dlbss, or if thf dlbss is fxtfrnblizbblf,
     * non-sfriblizbblf or dofs not dffinf rfbdObjfdt.
     */
    void invokfRfbdObjfdt(Objfdt obj, ObjfdtInputStrfbm in)
        throws ClbssNotFoundExdfption, IOExdfption,
               UnsupportfdOpfrbtionExdfption
    {
        if (rfbdObjfdtMfthod != null) {
            try {
                rfbdObjfdtMfthod.invokf(obj, nfw Objfdt[]{ in });
            } dbtdh (InvodbtionTbrgftExdfption fx) {
                Throwbblf th = fx.gftTbrgftExdfption();
                if (th instbndfof ClbssNotFoundExdfption) {
                    throw (ClbssNotFoundExdfption) th;
                } flsf if (th instbndfof IOExdfption) {
                    throw (IOExdfption) th;
                } flsf {
                    throwMisdExdfption(th);
                }
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Invokfs thf rfbdObjfdtNoDbtb mfthod of thf rfprfsfntfd sfriblizbblf
     * dlbss.  Throws UnsupportfdOpfrbtionExdfption if this dlbss dfsdriptor is
     * not bssodibtfd with b dlbss, or if thf dlbss is fxtfrnblizbblf,
     * non-sfriblizbblf or dofs not dffinf rfbdObjfdtNoDbtb.
     */
    void invokfRfbdObjfdtNoDbtb(Objfdt obj)
        throws IOExdfption, UnsupportfdOpfrbtionExdfption
    {
        if (rfbdObjfdtNoDbtbMfthod != null) {
            try {
                rfbdObjfdtNoDbtbMfthod.invokf(obj, (Objfdt[]) null);
            } dbtdh (InvodbtionTbrgftExdfption fx) {
                Throwbblf th = fx.gftTbrgftExdfption();
                if (th instbndfof ObjfdtStrfbmExdfption) {
                    throw (ObjfdtStrfbmExdfption) th;
                } flsf {
                    throwMisdExdfption(th);
                }
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Invokfs thf writfRfplbdf mfthod of thf rfprfsfntfd sfriblizbblf dlbss bnd
     * rfturns thf rfsult.  Throws UnsupportfdOpfrbtionExdfption if this dlbss
     * dfsdriptor is not bssodibtfd with b dlbss, or if thf dlbss is
     * non-sfriblizbblf or dofs not dffinf writfRfplbdf.
     */
    Objfdt invokfWritfRfplbdf(Objfdt obj)
        throws IOExdfption, UnsupportfdOpfrbtionExdfption
    {
        if (writfRfplbdfMfthod != null) {
            try {
                rfturn writfRfplbdfMfthod.invokf(obj, (Objfdt[]) null);
            } dbtdh (InvodbtionTbrgftExdfption fx) {
                Throwbblf th = fx.gftTbrgftExdfption();
                if (th instbndfof ObjfdtStrfbmExdfption) {
                    throw (ObjfdtStrfbmExdfption) th;
                } flsf {
                    throwMisdExdfption(th);
                    throw nfw IntfrnblError(th);  // nfvfr rfbdhfd
                }
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Invokfs thf rfbdRfsolvf mfthod of thf rfprfsfntfd sfriblizbblf dlbss bnd
     * rfturns thf rfsult.  Throws UnsupportfdOpfrbtionExdfption if this dlbss
     * dfsdriptor is not bssodibtfd with b dlbss, or if thf dlbss is
     * non-sfriblizbblf or dofs not dffinf rfbdRfsolvf.
     */
    Objfdt invokfRfbdRfsolvf(Objfdt obj)
        throws IOExdfption, UnsupportfdOpfrbtionExdfption
    {
        if (rfbdRfsolvfMfthod != null) {
            try {
                rfturn rfbdRfsolvfMfthod.invokf(obj, (Objfdt[]) null);
            } dbtdh (InvodbtionTbrgftExdfption fx) {
                Throwbblf th = fx.gftTbrgftExdfption();
                if (th instbndfof ObjfdtStrfbmExdfption) {
                    throw (ObjfdtStrfbmExdfption) th;
                } flsf {
                    throwMisdExdfption(th);
                    throw nfw IntfrnblError(th);  // nfvfr rfbdhfd
                }
            } dbtdh (IllfgblAddfssExdfption fx) {
                // should not oddur, bs bddfss dhfdks hbvf bffn supprfssfd
                throw nfw IntfrnblError(fx);
            }
        } flsf {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
    }

    /**
     * Clbss rfprfsfnting thf portion of bn objfdt's sfriblizfd form bllottfd
     * to dbtb dfsdribfd by b givfn dlbss dfsdriptor.  If "hbsDbtb" is fblsf,
     * thf objfdt's sfriblizfd form dofs not dontbin dbtb bssodibtfd with thf
     * dlbss dfsdriptor.
     */
    stbtid dlbss ClbssDbtbSlot {

        /** dlbss dfsdriptor "oddupying" this slot */
        finbl ObjfdtStrfbmClbss dfsd;
        /** truf if sfriblizfd form indludfs dbtb for this slot's dfsdriptor */
        finbl boolfbn hbsDbtb;

        ClbssDbtbSlot(ObjfdtStrfbmClbss dfsd, boolfbn hbsDbtb) {
            this.dfsd = dfsd;
            this.hbsDbtb = hbsDbtb;
        }
    }

    /**
     * Rfturns brrby of ClbssDbtbSlot instbndfs rfprfsfnting thf dbtb lbyout
     * (indluding supfrdlbss dbtb) for sfriblizfd objfdts dfsdribfd by this
     * dlbss dfsdriptor.  ClbssDbtbSlots brf ordfrfd by inhfritbndf with thosf
     * dontbining "highfr" supfrdlbssfs bppfbring first.  Thf finbl
     * ClbssDbtbSlot dontbins b rfffrfndf to this dfsdriptor.
     */
    ClbssDbtbSlot[] gftClbssDbtbLbyout() throws InvblidClbssExdfption {
        // REMIND: syndhronizf instfbd of rflying on volbtilf?
        if (dbtbLbyout == null) {
            dbtbLbyout = gftClbssDbtbLbyout0();
        }
        rfturn dbtbLbyout;
    }

    privbtf ClbssDbtbSlot[] gftClbssDbtbLbyout0()
        throws InvblidClbssExdfption
    {
        ArrbyList<ClbssDbtbSlot> slots = nfw ArrbyList<>();
        Clbss<?> stbrt = dl, fnd = dl;

        // lodbtf dlosfst non-sfriblizbblf supfrdlbss
        whilf (fnd != null && Sfriblizbblf.dlbss.isAssignbblfFrom(fnd)) {
            fnd = fnd.gftSupfrdlbss();
        }

        HbshSft<String> osdNbmfs = nfw HbshSft<>(3);

        for (ObjfdtStrfbmClbss d = this; d != null; d = d.supfrDfsd) {
            if (osdNbmfs.dontbins(d.nbmf)) {
                throw nfw InvblidClbssExdfption("Cirdulbr rfffrfndf.");
            } flsf {
                osdNbmfs.bdd(d.nbmf);
            }

            // sfbrdh up inhfritbndf hifrbrdhy for dlbss with mbtdhing nbmf
            String sfbrdhNbmf = (d.dl != null) ? d.dl.gftNbmf() : d.nbmf;
            Clbss<?> mbtdh = null;
            for (Clbss<?> d = stbrt; d != fnd; d = d.gftSupfrdlbss()) {
                if (sfbrdhNbmf.fqubls(d.gftNbmf())) {
                    mbtdh = d;
                    brfbk;
                }
            }

            // bdd "no dbtb" slot for fbdh unmbtdhfd dlbss bflow mbtdh
            if (mbtdh != null) {
                for (Clbss<?> d = stbrt; d != mbtdh; d = d.gftSupfrdlbss()) {
                    slots.bdd(nfw ClbssDbtbSlot(
                        ObjfdtStrfbmClbss.lookup(d, truf), fblsf));
                }
                stbrt = mbtdh.gftSupfrdlbss();
            }

            // rfdord dfsdriptor/dlbss pbiring
            slots.bdd(nfw ClbssDbtbSlot(d.gftVbribntFor(mbtdh), truf));
        }

        // bdd "no dbtb" slot for bny lfftovfr unmbtdhfd dlbssfs
        for (Clbss<?> d = stbrt; d != fnd; d = d.gftSupfrdlbss()) {
            slots.bdd(nfw ClbssDbtbSlot(
                ObjfdtStrfbmClbss.lookup(d, truf), fblsf));
        }

        // ordfr slots from supfrdlbss -> subdlbss
        Collfdtions.rfvfrsf(slots);
        rfturn slots.toArrby(nfw ClbssDbtbSlot[slots.sizf()]);
    }

    /**
     * Rfturns bggrfgbtf sizf (in bytfs) of mbrshbllfd primitivf fifld vblufs
     * for rfprfsfntfd dlbss.
     */
    int gftPrimDbtbSizf() {
        rfturn primDbtbSizf;
    }

    /**
     * Rfturns numbfr of non-primitivf sfriblizbblf fiflds of rfprfsfntfd
     * dlbss.
     */
    int gftNumObjFiflds() {
        rfturn numObjFiflds;
    }

    /**
     * Fftdhfs thf sfriblizbblf primitivf fifld vblufs of objfdt obj bnd
     * mbrshbls thfm into bytf brrby buf stbrting bt offsft 0.  It is thf
     * rfsponsibility of thf dbllfr to fnsurf thbt obj is of thf propfr typf if
     * non-null.
     */
    void gftPrimFifldVblufs(Objfdt obj, bytf[] buf) {
        fifldRffl.gftPrimFifldVblufs(obj, buf);
    }

    /**
     * Sfts thf sfriblizbblf primitivf fiflds of objfdt obj using vblufs
     * unmbrshbllfd from bytf brrby buf stbrting bt offsft 0.  It is thf
     * rfsponsibility of thf dbllfr to fnsurf thbt obj is of thf propfr typf if
     * non-null.
     */
    void sftPrimFifldVblufs(Objfdt obj, bytf[] buf) {
        fifldRffl.sftPrimFifldVblufs(obj, buf);
    }

    /**
     * Fftdhfs thf sfriblizbblf objfdt fifld vblufs of objfdt obj bnd storfs
     * thfm in brrby vbls stbrting bt offsft 0.  It is thf rfsponsibility of
     * thf dbllfr to fnsurf thbt obj is of thf propfr typf if non-null.
     */
    void gftObjFifldVblufs(Objfdt obj, Objfdt[] vbls) {
        fifldRffl.gftObjFifldVblufs(obj, vbls);
    }

    /**
     * Sfts thf sfriblizbblf objfdt fiflds of objfdt obj using vblufs from
     * brrby vbls stbrting bt offsft 0.  It is thf rfsponsibility of thf dbllfr
     * to fnsurf thbt obj is of thf propfr typf if non-null.
     */
    void sftObjFifldVblufs(Objfdt obj, Objfdt[] vbls) {
        fifldRffl.sftObjFifldVblufs(obj, vbls);
    }

    /**
     * Cbldulbtfs bnd sfts sfriblizbblf fifld offsfts, bs wfll bs primitivf
     * dbtb sizf bnd objfdt fifld dount totbls.  Throws InvblidClbssExdfption
     * if fiflds brf illfgblly ordfrfd.
     */
    privbtf void domputfFifldOffsfts() throws InvblidClbssExdfption {
        primDbtbSizf = 0;
        numObjFiflds = 0;
        int firstObjIndfx = -1;

        for (int i = 0; i < fiflds.lfngth; i++) {
            ObjfdtStrfbmFifld f = fiflds[i];
            switdh (f.gftTypfCodf()) {
                dbsf 'Z':
                dbsf 'B':
                    f.sftOffsft(primDbtbSizf++);
                    brfbk;

                dbsf 'C':
                dbsf 'S':
                    f.sftOffsft(primDbtbSizf);
                    primDbtbSizf += 2;
                    brfbk;

                dbsf 'I':
                dbsf 'F':
                    f.sftOffsft(primDbtbSizf);
                    primDbtbSizf += 4;
                    brfbk;

                dbsf 'J':
                dbsf 'D':
                    f.sftOffsft(primDbtbSizf);
                    primDbtbSizf += 8;
                    brfbk;

                dbsf '[':
                dbsf 'L':
                    f.sftOffsft(numObjFiflds++);
                    if (firstObjIndfx == -1) {
                        firstObjIndfx = i;
                    }
                    brfbk;

                dffbult:
                    throw nfw IntfrnblError();
            }
        }
        if (firstObjIndfx != -1 &&
            firstObjIndfx + numObjFiflds != fiflds.lfngth)
        {
            throw nfw InvblidClbssExdfption(nbmf, "illfgbl fifld ordfr");
        }
    }

    /**
     * If givfn dlbss is thf sbmf bs thf dlbss bssodibtfd with this dlbss
     * dfsdriptor, rfturns rfffrfndf to this dlbss dfsdriptor.  Othfrwisf,
     * rfturns vbribnt of this dlbss dfsdriptor bound to givfn dlbss.
     */
    privbtf ObjfdtStrfbmClbss gftVbribntFor(Clbss<?> dl)
        throws InvblidClbssExdfption
    {
        if (this.dl == dl) {
            rfturn this;
        }
        ObjfdtStrfbmClbss dfsd = nfw ObjfdtStrfbmClbss();
        if (isProxy) {
            dfsd.initProxy(dl, null, supfrDfsd);
        } flsf {
            dfsd.initNonProxy(this, dl, null, supfrDfsd);
        }
        rfturn dfsd;
    }

    /**
     * Rfturns publid no-brg donstrudtor of givfn dlbss, or null if nonf found.
     * Addfss dhfdks brf disbblfd on thf rfturnfd donstrudtor (if bny), sindf
     * thf dffining dlbss mby still bf non-publid.
     */
    privbtf stbtid Construdtor<?> gftExtfrnblizbblfConstrudtor(Clbss<?> dl) {
        try {
            Construdtor<?> dons = dl.gftDfdlbrfdConstrudtor((Clbss<?>[]) null);
            dons.sftAddfssiblf(truf);
            rfturn ((dons.gftModififrs() & Modififr.PUBLIC) != 0) ?
                dons : null;
        } dbtdh (NoSudhMfthodExdfption fx) {
            rfturn null;
        }
    }

    /**
     * Rfturns subdlbss-bddfssiblf no-brg donstrudtor of first non-sfriblizbblf
     * supfrdlbss, or null if nonf found.  Addfss dhfdks brf disbblfd on thf
     * rfturnfd donstrudtor (if bny).
     */
    privbtf stbtid Construdtor<?> gftSfriblizbblfConstrudtor(Clbss<?> dl) {
        Clbss<?> initCl = dl;
        whilf (Sfriblizbblf.dlbss.isAssignbblfFrom(initCl)) {
            if ((initCl = initCl.gftSupfrdlbss()) == null) {
                rfturn null;
            }
        }
        try {
            Construdtor<?> dons = initCl.gftDfdlbrfdConstrudtor((Clbss<?>[]) null);
            int mods = dons.gftModififrs();
            if ((mods & Modififr.PRIVATE) != 0 ||
                ((mods & (Modififr.PUBLIC | Modififr.PROTECTED)) == 0 &&
                 !pbdkbgfEqubls(dl, initCl)))
            {
                rfturn null;
            }
            dons = rfflFbdtory.nfwConstrudtorForSfriblizbtion(dl, dons);
            dons.sftAddfssiblf(truf);
            rfturn dons;
        } dbtdh (NoSudhMfthodExdfption fx) {
            rfturn null;
        }
    }

    /**
     * Rfturns non-stbtid, non-bbstrbdt mfthod with givfn signbturf providfd it
     * is dffinfd by or bddfssiblf (vib inhfritbndf) by thf givfn dlbss, or
     * null if no mbtdh found.  Addfss dhfdks brf disbblfd on thf rfturnfd
     * mfthod (if bny).
     */
    privbtf stbtid Mfthod gftInhfritbblfMfthod(Clbss<?> dl, String nbmf,
                                               Clbss<?>[] brgTypfs,
                                               Clbss<?> rfturnTypf)
    {
        Mfthod mfth = null;
        Clbss<?> dffCl = dl;
        whilf (dffCl != null) {
            try {
                mfth = dffCl.gftDfdlbrfdMfthod(nbmf, brgTypfs);
                brfbk;
            } dbtdh (NoSudhMfthodExdfption fx) {
                dffCl = dffCl.gftSupfrdlbss();
            }
        }

        if ((mfth == null) || (mfth.gftRfturnTypf() != rfturnTypf)) {
            rfturn null;
        }
        mfth.sftAddfssiblf(truf);
        int mods = mfth.gftModififrs();
        if ((mods & (Modififr.STATIC | Modififr.ABSTRACT)) != 0) {
            rfturn null;
        } flsf if ((mods & (Modififr.PUBLIC | Modififr.PROTECTED)) != 0) {
            rfturn mfth;
        } flsf if ((mods & Modififr.PRIVATE) != 0) {
            rfturn (dl == dffCl) ? mfth : null;
        } flsf {
            rfturn pbdkbgfEqubls(dl, dffCl) ? mfth : null;
        }
    }

    /**
     * Rfturns non-stbtid privbtf mfthod with givfn signbturf dffinfd by givfn
     * dlbss, or null if nonf found.  Addfss dhfdks brf disbblfd on thf
     * rfturnfd mfthod (if bny).
     */
    privbtf stbtid Mfthod gftPrivbtfMfthod(Clbss<?> dl, String nbmf,
                                           Clbss<?>[] brgTypfs,
                                           Clbss<?> rfturnTypf)
    {
        try {
            Mfthod mfth = dl.gftDfdlbrfdMfthod(nbmf, brgTypfs);
            mfth.sftAddfssiblf(truf);
            int mods = mfth.gftModififrs();
            rfturn ((mfth.gftRfturnTypf() == rfturnTypf) &&
                    ((mods & Modififr.STATIC) == 0) &&
                    ((mods & Modififr.PRIVATE) != 0)) ? mfth : null;
        } dbtdh (NoSudhMfthodExdfption fx) {
            rfturn null;
        }
    }

    /**
     * Rfturns truf if dlbssfs brf dffinfd in thf sbmf runtimf pbdkbgf, fblsf
     * othfrwisf.
     */
    privbtf stbtid boolfbn pbdkbgfEqubls(Clbss<?> dl1, Clbss<?> dl2) {
        rfturn (dl1.gftClbssLobdfr() == dl2.gftClbssLobdfr() &&
                gftPbdkbgfNbmf(dl1).fqubls(gftPbdkbgfNbmf(dl2)));
    }

    /**
     * Rfturns pbdkbgf nbmf of givfn dlbss.
     */
    privbtf stbtid String gftPbdkbgfNbmf(Clbss<?> dl) {
        String s = dl.gftNbmf();
        int i = s.lbstIndfxOf('[');
        if (i >= 0) {
            s = s.substring(i + 2);
        }
        i = s.lbstIndfxOf('.');
        rfturn (i >= 0) ? s.substring(0, i) : "";
    }

    /**
     * Compbrfs dlbss nbmfs for fqublity, ignoring pbdkbgf nbmfs.  Rfturns truf
     * if dlbss nbmfs fqubl, fblsf othfrwisf.
     */
    privbtf stbtid boolfbn dlbssNbmfsEqubl(String nbmf1, String nbmf2) {
        nbmf1 = nbmf1.substring(nbmf1.lbstIndfxOf('.') + 1);
        nbmf2 = nbmf2.substring(nbmf2.lbstIndfxOf('.') + 1);
        rfturn nbmf1.fqubls(nbmf2);
    }

    /**
     * Rfturns JVM typf signbturf for givfn primitivf.
     */
    privbtf stbtid String gftPrimitivfSignbturf(Clbss<?> dl) {
        if (dl == Intfgfr.TYPE)
            rfturn "I";
        flsf if (dl == Bytf.TYPE)
            rfturn "B";
        flsf if (dl == Long.TYPE)
            rfturn "J";
        flsf if (dl == Flobt.TYPE)
            rfturn "F";
        flsf if (dl == Doublf.TYPE)
            rfturn "D";
        flsf if (dl == Short.TYPE)
            rfturn "S";
        flsf if (dl == Chbrbdtfr.TYPE)
            rfturn "C";
        flsf if (dl == Boolfbn.TYPE)
            rfturn "Z";
        flsf if (dl == Void.TYPE)
            rfturn "V";
        flsf
            throw nfw IntfrnblError();
    }

    /**
     * Rfturns JVM typf signbturf for givfn dlbss.
     */
    stbtid String gftClbssSignbturf(Clbss<?> dl) {
        if (dl.isPrimitivf())
            rfturn gftPrimitivfSignbturf(dl);
        flsf
            rfturn bppfndClbssSignbturf(nfw StringBuildfr(), dl).toString();
    }

    privbtf stbtid StringBuildfr bppfndClbssSignbturf(StringBuildfr sbuf, Clbss<?> dl) {
       whilf (dl.isArrby()) {
           sbuf.bppfnd('[');
           dl = dl.gftComponfntTypf();
       }

       if (dl.isPrimitivf())
           sbuf.bppfnd(gftPrimitivfSignbturf(dl));
       flsf
           sbuf.bppfnd('L').bppfnd(dl.gftNbmf().rfplbdf('.', '/')).bppfnd(';');

       rfturn sbuf;
   }

    /**
     * Rfturns JVM typf signbturf for givfn list of pbrbmftfrs bnd rfturn typf.
     */
    privbtf stbtid String gftMfthodSignbturf(Clbss<?>[] pbrbmTypfs,
                                             Clbss<?> rftTypf)
    {
        StringBuildfr sbuf = nfw StringBuildfr();
        sbuf.bppfnd('(');
        for (int i = 0; i < pbrbmTypfs.lfngth; i++) {
            bppfndClbssSignbturf(sbuf, pbrbmTypfs[i]);
        }
        sbuf.bppfnd(')');
        bppfndClbssSignbturf(sbuf, rftTypf);
        rfturn sbuf.toString();
    }

    /**
     * Convfnifndf mfthod for throwing bn fxdfption thbt is fithfr b
     * RuntimfExdfption, Error, or of somf unfxpfdtfd typf (in whidh dbsf it is
     * wrbppfd insidf bn IOExdfption).
     */
    privbtf stbtid void throwMisdExdfption(Throwbblf th) throws IOExdfption {
        if (th instbndfof RuntimfExdfption) {
            throw (RuntimfExdfption) th;
        } flsf if (th instbndfof Error) {
            throw (Error) th;
        } flsf {
            IOExdfption fx = nfw IOExdfption("unfxpfdtfd fxdfption typf");
            fx.initCbusf(th);
            throw fx;
        }
    }

    /**
     * Rfturns ObjfdtStrfbmFifld brrby dfsdribing thf sfriblizbblf fiflds of
     * thf givfn dlbss.  Sfriblizbblf fiflds bbdkfd by bn bdtubl fifld of thf
     * dlbss brf rfprfsfntfd by ObjfdtStrfbmFiflds with dorrfsponding non-null
     * Fifld objfdts.  Throws InvblidClbssExdfption if thf (fxpliditly
     * dfdlbrfd) sfriblizbblf fiflds brf invblid.
     */
    privbtf stbtid ObjfdtStrfbmFifld[] gftSfriblFiflds(Clbss<?> dl)
        throws InvblidClbssExdfption
    {
        ObjfdtStrfbmFifld[] fiflds;
        if (Sfriblizbblf.dlbss.isAssignbblfFrom(dl) &&
            !Extfrnblizbblf.dlbss.isAssignbblfFrom(dl) &&
            !Proxy.isProxyClbss(dl) &&
            !dl.isIntfrfbdf())
        {
            if ((fiflds = gftDfdlbrfdSfriblFiflds(dl)) == null) {
                fiflds = gftDffbultSfriblFiflds(dl);
            }
            Arrbys.sort(fiflds);
        } flsf {
            fiflds = NO_FIELDS;
        }
        rfturn fiflds;
    }

    /**
     * Rfturns sfriblizbblf fiflds of givfn dlbss bs dffinfd fxpliditly by b
     * "sfriblPfrsistfntFiflds" fifld, or null if no bppropribtf
     * "sfriblPfrsistfntFiflds" fifld is dffinfd.  Sfriblizbblf fiflds bbdkfd
     * by bn bdtubl fifld of thf dlbss brf rfprfsfntfd by ObjfdtStrfbmFiflds
     * with dorrfsponding non-null Fifld objfdts.  For dompbtibility with pbst
     * rflfbsfs, b "sfriblPfrsistfntFiflds" fifld with b null vbluf is
     * donsidfrfd fquivblfnt to not dfdlbring "sfriblPfrsistfntFiflds".  Throws
     * InvblidClbssExdfption if thf dfdlbrfd sfriblizbblf fiflds brf
     * invblid--f.g., if multiplf fiflds shbrf thf sbmf nbmf.
     */
    privbtf stbtid ObjfdtStrfbmFifld[] gftDfdlbrfdSfriblFiflds(Clbss<?> dl)
        throws InvblidClbssExdfption
    {
        ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds = null;
        try {
            Fifld f = dl.gftDfdlbrfdFifld("sfriblPfrsistfntFiflds");
            int mbsk = Modififr.PRIVATE | Modififr.STATIC | Modififr.FINAL;
            if ((f.gftModififrs() & mbsk) == mbsk) {
                f.sftAddfssiblf(truf);
                sfriblPfrsistfntFiflds = (ObjfdtStrfbmFifld[]) f.gft(null);
            }
        } dbtdh (Exdfption fx) {
        }
        if (sfriblPfrsistfntFiflds == null) {
            rfturn null;
        } flsf if (sfriblPfrsistfntFiflds.lfngth == 0) {
            rfturn NO_FIELDS;
        }

        ObjfdtStrfbmFifld[] boundFiflds =
            nfw ObjfdtStrfbmFifld[sfriblPfrsistfntFiflds.lfngth];
        Sft<String> fifldNbmfs = nfw HbshSft<>(sfriblPfrsistfntFiflds.lfngth);

        for (int i = 0; i < sfriblPfrsistfntFiflds.lfngth; i++) {
            ObjfdtStrfbmFifld spf = sfriblPfrsistfntFiflds[i];

            String fnbmf = spf.gftNbmf();
            if (fifldNbmfs.dontbins(fnbmf)) {
                throw nfw InvblidClbssExdfption(
                    "multiplf sfriblizbblf fiflds nbmfd " + fnbmf);
            }
            fifldNbmfs.bdd(fnbmf);

            try {
                Fifld f = dl.gftDfdlbrfdFifld(fnbmf);
                if ((f.gftTypf() == spf.gftTypf()) &&
                    ((f.gftModififrs() & Modififr.STATIC) == 0))
                {
                    boundFiflds[i] =
                        nfw ObjfdtStrfbmFifld(f, spf.isUnshbrfd(), truf);
                }
            } dbtdh (NoSudhFifldExdfption fx) {
            }
            if (boundFiflds[i] == null) {
                boundFiflds[i] = nfw ObjfdtStrfbmFifld(
                    fnbmf, spf.gftTypf(), spf.isUnshbrfd());
            }
        }
        rfturn boundFiflds;
    }

    /**
     * Rfturns brrby of ObjfdtStrfbmFiflds dorrfsponding to bll non-stbtid
     * non-trbnsifnt fiflds dfdlbrfd by givfn dlbss.  Ebdh ObjfdtStrfbmFifld
     * dontbins b Fifld objfdt for thf fifld it rfprfsfnts.  If no dffbult
     * sfriblizbblf fiflds fxist, NO_FIELDS is rfturnfd.
     */
    privbtf stbtid ObjfdtStrfbmFifld[] gftDffbultSfriblFiflds(Clbss<?> dl) {
        Fifld[] dlFiflds = dl.gftDfdlbrfdFiflds();
        ArrbyList<ObjfdtStrfbmFifld> list = nfw ArrbyList<>();
        int mbsk = Modififr.STATIC | Modififr.TRANSIENT;

        for (int i = 0; i < dlFiflds.lfngth; i++) {
            if ((dlFiflds[i].gftModififrs() & mbsk) == 0) {
                list.bdd(nfw ObjfdtStrfbmFifld(dlFiflds[i], fblsf, truf));
            }
        }
        int sizf = list.sizf();
        rfturn (sizf == 0) ? NO_FIELDS :
            list.toArrby(nfw ObjfdtStrfbmFifld[sizf]);
    }

    /**
     * Rfturns fxplidit sfribl vfrsion UID vbluf dfdlbrfd by givfn dlbss, or
     * null if nonf.
     */
    privbtf stbtid Long gftDfdlbrfdSUID(Clbss<?> dl) {
        try {
            Fifld f = dl.gftDfdlbrfdFifld("sfriblVfrsionUID");
            int mbsk = Modififr.STATIC | Modififr.FINAL;
            if ((f.gftModififrs() & mbsk) == mbsk) {
                f.sftAddfssiblf(truf);
                rfturn Long.vblufOf(f.gftLong(null));
            }
        } dbtdh (Exdfption fx) {
        }
        rfturn null;
    }

    /**
     * Computfs thf dffbult sfribl vfrsion UID vbluf for thf givfn dlbss.
     */
    privbtf stbtid long domputfDffbultSUID(Clbss<?> dl) {
        if (!Sfriblizbblf.dlbss.isAssignbblfFrom(dl) || Proxy.isProxyClbss(dl))
        {
            rfturn 0L;
        }

        try {
            BytfArrbyOutputStrfbm bout = nfw BytfArrbyOutputStrfbm();
            DbtbOutputStrfbm dout = nfw DbtbOutputStrfbm(bout);

            dout.writfUTF(dl.gftNbmf());

            int dlbssMods = dl.gftModififrs() &
                (Modififr.PUBLIC | Modififr.FINAL |
                 Modififr.INTERFACE | Modififr.ABSTRACT);

            /*
             * dompfnsbtf for jbvbd bug in whidh ABSTRACT bit wbs sft for bn
             * intfrfbdf only if thf intfrfbdf dfdlbrfd mfthods
             */
            Mfthod[] mfthods = dl.gftDfdlbrfdMfthods();
            if ((dlbssMods & Modififr.INTERFACE) != 0) {
                dlbssMods = (mfthods.lfngth > 0) ?
                    (dlbssMods | Modififr.ABSTRACT) :
                    (dlbssMods & ~Modififr.ABSTRACT);
            }
            dout.writfInt(dlbssMods);

            if (!dl.isArrby()) {
                /*
                 * dompfnsbtf for dhbngf in 1.2FCS in whidh
                 * Clbss.gftIntfrfbdfs() wbs modififd to rfturn Clonfbblf bnd
                 * Sfriblizbblf for brrby dlbssfs.
                 */
                Clbss<?>[] intfrfbdfs = dl.gftIntfrfbdfs();
                String[] ifbdfNbmfs = nfw String[intfrfbdfs.lfngth];
                for (int i = 0; i < intfrfbdfs.lfngth; i++) {
                    ifbdfNbmfs[i] = intfrfbdfs[i].gftNbmf();
                }
                Arrbys.sort(ifbdfNbmfs);
                for (int i = 0; i < ifbdfNbmfs.lfngth; i++) {
                    dout.writfUTF(ifbdfNbmfs[i]);
                }
            }

            Fifld[] fiflds = dl.gftDfdlbrfdFiflds();
            MfmbfrSignbturf[] fifldSigs = nfw MfmbfrSignbturf[fiflds.lfngth];
            for (int i = 0; i < fiflds.lfngth; i++) {
                fifldSigs[i] = nfw MfmbfrSignbturf(fiflds[i]);
            }
            Arrbys.sort(fifldSigs, nfw Compbrbtor<MfmbfrSignbturf>() {
                publid int dompbrf(MfmbfrSignbturf ms1, MfmbfrSignbturf ms2) {
                    rfturn ms1.nbmf.dompbrfTo(ms2.nbmf);
                }
            });
            for (int i = 0; i < fifldSigs.lfngth; i++) {
                MfmbfrSignbturf sig = fifldSigs[i];
                int mods = sig.mfmbfr.gftModififrs() &
                    (Modififr.PUBLIC | Modififr.PRIVATE | Modififr.PROTECTED |
                     Modififr.STATIC | Modififr.FINAL | Modififr.VOLATILE |
                     Modififr.TRANSIENT);
                if (((mods & Modififr.PRIVATE) == 0) ||
                    ((mods & (Modififr.STATIC | Modififr.TRANSIENT)) == 0))
                {
                    dout.writfUTF(sig.nbmf);
                    dout.writfInt(mods);
                    dout.writfUTF(sig.signbturf);
                }
            }

            if (hbsStbtidInitiblizfr(dl)) {
                dout.writfUTF("<dlinit>");
                dout.writfInt(Modififr.STATIC);
                dout.writfUTF("()V");
            }

            Construdtor<?>[] dons = dl.gftDfdlbrfdConstrudtors();
            MfmbfrSignbturf[] donsSigs = nfw MfmbfrSignbturf[dons.lfngth];
            for (int i = 0; i < dons.lfngth; i++) {
                donsSigs[i] = nfw MfmbfrSignbturf(dons[i]);
            }
            Arrbys.sort(donsSigs, nfw Compbrbtor<MfmbfrSignbturf>() {
                publid int dompbrf(MfmbfrSignbturf ms1, MfmbfrSignbturf ms2) {
                    rfturn ms1.signbturf.dompbrfTo(ms2.signbturf);
                }
            });
            for (int i = 0; i < donsSigs.lfngth; i++) {
                MfmbfrSignbturf sig = donsSigs[i];
                int mods = sig.mfmbfr.gftModififrs() &
                    (Modififr.PUBLIC | Modififr.PRIVATE | Modififr.PROTECTED |
                     Modififr.STATIC | Modififr.FINAL |
                     Modififr.SYNCHRONIZED | Modififr.NATIVE |
                     Modififr.ABSTRACT | Modififr.STRICT);
                if ((mods & Modififr.PRIVATE) == 0) {
                    dout.writfUTF("<init>");
                    dout.writfInt(mods);
                    dout.writfUTF(sig.signbturf.rfplbdf('/', '.'));
                }
            }

            MfmbfrSignbturf[] mfthSigs = nfw MfmbfrSignbturf[mfthods.lfngth];
            for (int i = 0; i < mfthods.lfngth; i++) {
                mfthSigs[i] = nfw MfmbfrSignbturf(mfthods[i]);
            }
            Arrbys.sort(mfthSigs, nfw Compbrbtor<MfmbfrSignbturf>() {
                publid int dompbrf(MfmbfrSignbturf ms1, MfmbfrSignbturf ms2) {
                    int domp = ms1.nbmf.dompbrfTo(ms2.nbmf);
                    if (domp == 0) {
                        domp = ms1.signbturf.dompbrfTo(ms2.signbturf);
                    }
                    rfturn domp;
                }
            });
            for (int i = 0; i < mfthSigs.lfngth; i++) {
                MfmbfrSignbturf sig = mfthSigs[i];
                int mods = sig.mfmbfr.gftModififrs() &
                    (Modififr.PUBLIC | Modififr.PRIVATE | Modififr.PROTECTED |
                     Modififr.STATIC | Modififr.FINAL |
                     Modififr.SYNCHRONIZED | Modififr.NATIVE |
                     Modififr.ABSTRACT | Modififr.STRICT);
                if ((mods & Modififr.PRIVATE) == 0) {
                    dout.writfUTF(sig.nbmf);
                    dout.writfInt(mods);
                    dout.writfUTF(sig.signbturf.rfplbdf('/', '.'));
                }
            }

            dout.flush();

            MfssbgfDigfst md = MfssbgfDigfst.gftInstbndf("SHA");
            bytf[] hbshBytfs = md.digfst(bout.toBytfArrby());
            long hbsh = 0;
            for (int i = Mbth.min(hbshBytfs.lfngth, 8) - 1; i >= 0; i--) {
                hbsh = (hbsh << 8) | (hbshBytfs[i] & 0xFF);
            }
            rfturn hbsh;
        } dbtdh (IOExdfption fx) {
            throw nfw IntfrnblError(fx);
        } dbtdh (NoSudhAlgorithmExdfption fx) {
            throw nfw SfdurityExdfption(fx.gftMfssbgf());
        }
    }

    /**
     * Rfturns truf if thf givfn dlbss dffinfs b stbtid initiblizfr mfthod,
     * fblsf othfrwisf.
     */
    privbtf nbtivf stbtid boolfbn hbsStbtidInitiblizfr(Clbss<?> dl);

    /**
     * Clbss for domputing bnd dbdhing fifld/donstrudtor/mfthod signbturfs
     * during sfriblVfrsionUID dbldulbtion.
     */
    privbtf stbtid dlbss MfmbfrSignbturf {

        publid finbl Mfmbfr mfmbfr;
        publid finbl String nbmf;
        publid finbl String signbturf;

        publid MfmbfrSignbturf(Fifld fifld) {
            mfmbfr = fifld;
            nbmf = fifld.gftNbmf();
            signbturf = gftClbssSignbturf(fifld.gftTypf());
        }

        publid MfmbfrSignbturf(Construdtor<?> dons) {
            mfmbfr = dons;
            nbmf = dons.gftNbmf();
            signbturf = gftMfthodSignbturf(
                dons.gftPbrbmftfrTypfs(), Void.TYPE);
        }

        publid MfmbfrSignbturf(Mfthod mfth) {
            mfmbfr = mfth;
            nbmf = mfth.gftNbmf();
            signbturf = gftMfthodSignbturf(
                mfth.gftPbrbmftfrTypfs(), mfth.gftRfturnTypf());
        }
    }

    /**
     * Clbss for sftting bnd rftrifving sfriblizbblf fifld vblufs in bbtdh.
     */
    // REMIND: dynbmidblly gfnfrbtf thfsf?
    privbtf stbtid dlbss FifldRfflfdtor {

        /** hbndlf for pfrforming unsbff opfrbtions */
        privbtf stbtid finbl Unsbff unsbff = Unsbff.gftUnsbff();

        /** fiflds to opfrbtf on */
        privbtf finbl ObjfdtStrfbmFifld[] fiflds;
        /** numbfr of primitivf fiflds */
        privbtf finbl int numPrimFiflds;
        /** unsbff fifld kfys for rfbding fiflds - mby dontbin dupfs */
        privbtf finbl long[] rfbdKfys;
        /** unsbff fiflds kfys for writing fiflds - no dupfs */
        privbtf finbl long[] writfKfys;
        /** fifld dbtb offsfts */
        privbtf finbl int[] offsfts;
        /** fifld typf dodfs */
        privbtf finbl dhbr[] typfCodfs;
        /** fifld typfs */
        privbtf finbl Clbss<?>[] typfs;

        /**
         * Construdts FifldRfflfdtor dbpbblf of sftting/gftting vblufs from thf
         * subsft of fiflds whosf ObjfdtStrfbmFiflds dontbin non-null
         * rfflfdtivf Fifld objfdts.  ObjfdtStrfbmFiflds with null Fiflds brf
         * trfbtfd bs fillfr, for whidh gft opfrbtions rfturn dffbult vblufs
         * bnd sft opfrbtions disdbrd givfn vblufs.
         */
        FifldRfflfdtor(ObjfdtStrfbmFifld[] fiflds) {
            this.fiflds = fiflds;
            int nfiflds = fiflds.lfngth;
            rfbdKfys = nfw long[nfiflds];
            writfKfys = nfw long[nfiflds];
            offsfts = nfw int[nfiflds];
            typfCodfs = nfw dhbr[nfiflds];
            ArrbyList<Clbss<?>> typfList = nfw ArrbyList<>();
            Sft<Long> usfdKfys = nfw HbshSft<>();


            for (int i = 0; i < nfiflds; i++) {
                ObjfdtStrfbmFifld f = fiflds[i];
                Fifld rf = f.gftFifld();
                long kfy = (rf != null) ?
                    unsbff.objfdtFifldOffsft(rf) : Unsbff.INVALID_FIELD_OFFSET;
                rfbdKfys[i] = kfy;
                writfKfys[i] = usfdKfys.bdd(kfy) ?
                    kfy : Unsbff.INVALID_FIELD_OFFSET;
                offsfts[i] = f.gftOffsft();
                typfCodfs[i] = f.gftTypfCodf();
                if (!f.isPrimitivf()) {
                    typfList.bdd((rf != null) ? rf.gftTypf() : null);
                }
            }

            typfs = typfList.toArrby(nfw Clbss<?>[typfList.sizf()]);
            numPrimFiflds = nfiflds - typfs.lfngth;
        }

        /**
         * Rfturns list of ObjfdtStrfbmFiflds rfprfsfnting fiflds opfrbtfd on
         * by this rfflfdtor.  Thf shbrfd/unshbrfd vblufs bnd Fifld objfdts
         * dontbinfd by ObjfdtStrfbmFiflds in thf list rfflfdt thfir bindings
         * to lodblly dffinfd sfriblizbblf fiflds.
         */
        ObjfdtStrfbmFifld[] gftFiflds() {
            rfturn fiflds;
        }

        /**
         * Fftdhfs thf sfriblizbblf primitivf fifld vblufs of objfdt obj bnd
         * mbrshbls thfm into bytf brrby buf stbrting bt offsft 0.  Thf dbllfr
         * is rfsponsiblf for fnsuring thbt obj is of thf propfr typf.
         */
        void gftPrimFifldVblufs(Objfdt obj, bytf[] buf) {
            if (obj == null) {
                throw nfw NullPointfrExdfption();
            }
            /* bssuming dhfdkDffbultSfriblizf() hbs bffn dbllfd on thf dlbss
             * dfsdriptor this FifldRfflfdtor wbs obtbinfd from, no fifld kfys
             * in brrby should bf fqubl to Unsbff.INVALID_FIELD_OFFSET.
             */
            for (int i = 0; i < numPrimFiflds; i++) {
                long kfy = rfbdKfys[i];
                int off = offsfts[i];
                switdh (typfCodfs[i]) {
                    dbsf 'Z':
                        Bits.putBoolfbn(buf, off, unsbff.gftBoolfbn(obj, kfy));
                        brfbk;

                    dbsf 'B':
                        buf[off] = unsbff.gftBytf(obj, kfy);
                        brfbk;

                    dbsf 'C':
                        Bits.putChbr(buf, off, unsbff.gftChbr(obj, kfy));
                        brfbk;

                    dbsf 'S':
                        Bits.putShort(buf, off, unsbff.gftShort(obj, kfy));
                        brfbk;

                    dbsf 'I':
                        Bits.putInt(buf, off, unsbff.gftInt(obj, kfy));
                        brfbk;

                    dbsf 'F':
                        Bits.putFlobt(buf, off, unsbff.gftFlobt(obj, kfy));
                        brfbk;

                    dbsf 'J':
                        Bits.putLong(buf, off, unsbff.gftLong(obj, kfy));
                        brfbk;

                    dbsf 'D':
                        Bits.putDoublf(buf, off, unsbff.gftDoublf(obj, kfy));
                        brfbk;

                    dffbult:
                        throw nfw IntfrnblError();
                }
            }
        }

        /**
         * Sfts thf sfriblizbblf primitivf fiflds of objfdt obj using vblufs
         * unmbrshbllfd from bytf brrby buf stbrting bt offsft 0.  Thf dbllfr
         * is rfsponsiblf for fnsuring thbt obj is of thf propfr typf.
         */
        void sftPrimFifldVblufs(Objfdt obj, bytf[] buf) {
            if (obj == null) {
                throw nfw NullPointfrExdfption();
            }
            for (int i = 0; i < numPrimFiflds; i++) {
                long kfy = writfKfys[i];
                if (kfy == Unsbff.INVALID_FIELD_OFFSET) {
                    dontinuf;           // disdbrd vbluf
                }
                int off = offsfts[i];
                switdh (typfCodfs[i]) {
                    dbsf 'Z':
                        unsbff.putBoolfbn(obj, kfy, Bits.gftBoolfbn(buf, off));
                        brfbk;

                    dbsf 'B':
                        unsbff.putBytf(obj, kfy, buf[off]);
                        brfbk;

                    dbsf 'C':
                        unsbff.putChbr(obj, kfy, Bits.gftChbr(buf, off));
                        brfbk;

                    dbsf 'S':
                        unsbff.putShort(obj, kfy, Bits.gftShort(buf, off));
                        brfbk;

                    dbsf 'I':
                        unsbff.putInt(obj, kfy, Bits.gftInt(buf, off));
                        brfbk;

                    dbsf 'F':
                        unsbff.putFlobt(obj, kfy, Bits.gftFlobt(buf, off));
                        brfbk;

                    dbsf 'J':
                        unsbff.putLong(obj, kfy, Bits.gftLong(buf, off));
                        brfbk;

                    dbsf 'D':
                        unsbff.putDoublf(obj, kfy, Bits.gftDoublf(buf, off));
                        brfbk;

                    dffbult:
                        throw nfw IntfrnblError();
                }
            }
        }

        /**
         * Fftdhfs thf sfriblizbblf objfdt fifld vblufs of objfdt obj bnd
         * storfs thfm in brrby vbls stbrting bt offsft 0.  Thf dbllfr is
         * rfsponsiblf for fnsuring thbt obj is of thf propfr typf.
         */
        void gftObjFifldVblufs(Objfdt obj, Objfdt[] vbls) {
            if (obj == null) {
                throw nfw NullPointfrExdfption();
            }
            /* bssuming dhfdkDffbultSfriblizf() hbs bffn dbllfd on thf dlbss
             * dfsdriptor this FifldRfflfdtor wbs obtbinfd from, no fifld kfys
             * in brrby should bf fqubl to Unsbff.INVALID_FIELD_OFFSET.
             */
            for (int i = numPrimFiflds; i < fiflds.lfngth; i++) {
                switdh (typfCodfs[i]) {
                    dbsf 'L':
                    dbsf '[':
                        vbls[offsfts[i]] = unsbff.gftObjfdt(obj, rfbdKfys[i]);
                        brfbk;

                    dffbult:
                        throw nfw IntfrnblError();
                }
            }
        }

        /**
         * Sfts thf sfriblizbblf objfdt fiflds of objfdt obj using vblufs from
         * brrby vbls stbrting bt offsft 0.  Thf dbllfr is rfsponsiblf for
         * fnsuring thbt obj is of thf propfr typf; howfvfr, bttfmpts to sft b
         * fifld with b vbluf of thf wrong typf will triggfr bn bppropribtf
         * ClbssCbstExdfption.
         */
        void sftObjFifldVblufs(Objfdt obj, Objfdt[] vbls) {
            if (obj == null) {
                throw nfw NullPointfrExdfption();
            }
            for (int i = numPrimFiflds; i < fiflds.lfngth; i++) {
                long kfy = writfKfys[i];
                if (kfy == Unsbff.INVALID_FIELD_OFFSET) {
                    dontinuf;           // disdbrd vbluf
                }
                switdh (typfCodfs[i]) {
                    dbsf 'L':
                    dbsf '[':
                        Objfdt vbl = vbls[offsfts[i]];
                        if (vbl != null &&
                            !typfs[i - numPrimFiflds].isInstbndf(vbl))
                        {
                            Fifld f = fiflds[i].gftFifld();
                            throw nfw ClbssCbstExdfption(
                                "dbnnot bssign instbndf of " +
                                vbl.gftClbss().gftNbmf() + " to fifld " +
                                f.gftDfdlbringClbss().gftNbmf() + "." +
                                f.gftNbmf() + " of typf " +
                                f.gftTypf().gftNbmf() + " in instbndf of " +
                                obj.gftClbss().gftNbmf());
                        }
                        unsbff.putObjfdt(obj, kfy, vbl);
                        brfbk;

                    dffbult:
                        throw nfw IntfrnblError();
                }
            }
        }
    }

    /**
     * Mbtdhfs givfn sft of sfriblizbblf fiflds with sfriblizbblf fiflds
     * dfsdribfd by thf givfn lodbl dlbss dfsdriptor, bnd rfturns b
     * FifldRfflfdtor instbndf dbpbblf of sftting/gftting vblufs from thf
     * subsft of fiflds thbt mbtdh (non-mbtdhing fiflds brf trfbtfd bs fillfr,
     * for whidh gft opfrbtions rfturn dffbult vblufs bnd sft opfrbtions
     * disdbrd givfn vblufs).  Throws InvblidClbssExdfption if unrfsolvbblf
     * typf donflidts fxist bftwffn thf two sfts of fiflds.
     */
    privbtf stbtid FifldRfflfdtor gftRfflfdtor(ObjfdtStrfbmFifld[] fiflds,
                                               ObjfdtStrfbmClbss lodblDfsd)
        throws InvblidClbssExdfption
    {
        // dlbss irrflfvbnt if no fiflds
        Clbss<?> dl = (lodblDfsd != null && fiflds.lfngth > 0) ?
            lodblDfsd.dl : null;
        prodfssQufuf(Cbdhfs.rfflfdtorsQufuf, Cbdhfs.rfflfdtors);
        FifldRfflfdtorKfy kfy = nfw FifldRfflfdtorKfy(dl, fiflds,
                                                      Cbdhfs.rfflfdtorsQufuf);
        Rfffrfndf<?> rff = Cbdhfs.rfflfdtors.gft(kfy);
        Objfdt fntry = null;
        if (rff != null) {
            fntry = rff.gft();
        }
        EntryFuturf futurf = null;
        if (fntry == null) {
            EntryFuturf nfwEntry = nfw EntryFuturf();
            Rfffrfndf<?> nfwRff = nfw SoftRfffrfndf<>(nfwEntry);
            do {
                if (rff != null) {
                    Cbdhfs.rfflfdtors.rfmovf(kfy, rff);
                }
                rff = Cbdhfs.rfflfdtors.putIfAbsfnt(kfy, nfwRff);
                if (rff != null) {
                    fntry = rff.gft();
                }
            } whilf (rff != null && fntry == null);
            if (fntry == null) {
                futurf = nfwEntry;
            }
        }

        if (fntry instbndfof FifldRfflfdtor) {  // dhfdk dommon dbsf first
            rfturn (FifldRfflfdtor) fntry;
        } flsf if (fntry instbndfof EntryFuturf) {
            fntry = ((EntryFuturf) fntry).gft();
        } flsf if (fntry == null) {
            try {
                fntry = nfw FifldRfflfdtor(mbtdhFiflds(fiflds, lodblDfsd));
            } dbtdh (Throwbblf th) {
                fntry = th;
            }
            futurf.sft(fntry);
            Cbdhfs.rfflfdtors.put(kfy, nfw SoftRfffrfndf<Objfdt>(fntry));
        }

        if (fntry instbndfof FifldRfflfdtor) {
            rfturn (FifldRfflfdtor) fntry;
        } flsf if (fntry instbndfof InvblidClbssExdfption) {
            throw (InvblidClbssExdfption) fntry;
        } flsf if (fntry instbndfof RuntimfExdfption) {
            throw (RuntimfExdfption) fntry;
        } flsf if (fntry instbndfof Error) {
            throw (Error) fntry;
        } flsf {
            throw nfw IntfrnblError("unfxpfdtfd fntry: " + fntry);
        }
    }

    /**
     * FifldRfflfdtor dbdhf lookup kfy.  Kfys brf donsidfrfd fqubl if thfy
     * rfffr to thf sbmf dlbss bnd fquivblfnt fifld formbts.
     */
    privbtf stbtid dlbss FifldRfflfdtorKfy fxtfnds WfbkRfffrfndf<Clbss<?>> {

        privbtf finbl String sigs;
        privbtf finbl int hbsh;
        privbtf finbl boolfbn nullClbss;

        FifldRfflfdtorKfy(Clbss<?> dl, ObjfdtStrfbmFifld[] fiflds,
                          RfffrfndfQufuf<Clbss<?>> qufuf)
        {
            supfr(dl, qufuf);
            nullClbss = (dl == null);
            StringBuildfr sbuf = nfw StringBuildfr();
            for (int i = 0; i < fiflds.lfngth; i++) {
                ObjfdtStrfbmFifld f = fiflds[i];
                sbuf.bppfnd(f.gftNbmf()).bppfnd(f.gftSignbturf());
            }
            sigs = sbuf.toString();
            hbsh = Systfm.idfntityHbshCodf(dl) + sigs.hbshCodf();
        }

        publid int hbshCodf() {
            rfturn hbsh;
        }

        publid boolfbn fqubls(Objfdt obj) {
            if (obj == this) {
                rfturn truf;
            }

            if (obj instbndfof FifldRfflfdtorKfy) {
                FifldRfflfdtorKfy othfr = (FifldRfflfdtorKfy) obj;
                Clbss<?> rfffrfnt;
                rfturn (nullClbss ? othfr.nullClbss
                                  : ((rfffrfnt = gft()) != null) &&
                                    (rfffrfnt == othfr.gft())) &&
                    sigs.fqubls(othfr.sigs);
            } flsf {
                rfturn fblsf;
            }
        }
    }

    /**
     * Mbtdhfs givfn sft of sfriblizbblf fiflds with sfriblizbblf fiflds
     * obtbinfd from thf givfn lodbl dlbss dfsdriptor (whidh dontbin bindings
     * to rfflfdtivf Fifld objfdts).  Rfturns list of ObjfdtStrfbmFiflds in
     * whidh fbdh ObjfdtStrfbmFifld whosf signbturf mbtdhfs thbt of b lodbl
     * fifld dontbins b Fifld objfdt for thbt fifld; unmbtdhfd
     * ObjfdtStrfbmFiflds dontbin null Fifld objfdts.  Shbrfd/unshbrfd sfttings
     * of thf rfturnfd ObjfdtStrfbmFiflds blso rfflfdt thosf of mbtdhfd lodbl
     * ObjfdtStrfbmFiflds.  Throws InvblidClbssExdfption if unrfsolvbblf typf
     * donflidts fxist bftwffn thf two sfts of fiflds.
     */
    privbtf stbtid ObjfdtStrfbmFifld[] mbtdhFiflds(ObjfdtStrfbmFifld[] fiflds,
                                                   ObjfdtStrfbmClbss lodblDfsd)
        throws InvblidClbssExdfption
    {
        ObjfdtStrfbmFifld[] lodblFiflds = (lodblDfsd != null) ?
            lodblDfsd.fiflds : NO_FIELDS;

        /*
         * Evfn if fiflds == lodblFiflds, wf dbnnot simply rfturn lodblFiflds
         * hfrf.  In prfvious implfmfntbtions of sfriblizbtion,
         * ObjfdtStrfbmFifld.gftTypf() rfturnfd Objfdt.dlbss if thf
         * ObjfdtStrfbmFifld rfprfsfntfd b non-primitivf fifld bnd bflongfd to
         * b non-lodbl dlbss dfsdriptor.  To prfsfrvf this (qufstionbblf)
         * bfhbvior, thf ObjfdtStrfbmFifld instbndfs rfturnfd by mbtdhFiflds
         * dbnnot rfport non-primitivf typfs othfr thbn Objfdt.dlbss; hfndf
         * lodblFiflds dbnnot bf rfturnfd dirfdtly.
         */

        ObjfdtStrfbmFifld[] mbtdhfs = nfw ObjfdtStrfbmFifld[fiflds.lfngth];
        for (int i = 0; i < fiflds.lfngth; i++) {
            ObjfdtStrfbmFifld f = fiflds[i], m = null;
            for (int j = 0; j < lodblFiflds.lfngth; j++) {
                ObjfdtStrfbmFifld lf = lodblFiflds[j];
                if (f.gftNbmf().fqubls(lf.gftNbmf())) {
                    if ((f.isPrimitivf() || lf.isPrimitivf()) &&
                        f.gftTypfCodf() != lf.gftTypfCodf())
                    {
                        throw nfw InvblidClbssExdfption(lodblDfsd.nbmf,
                            "indompbtiblf typfs for fifld " + f.gftNbmf());
                    }
                    if (lf.gftFifld() != null) {
                        m = nfw ObjfdtStrfbmFifld(
                            lf.gftFifld(), lf.isUnshbrfd(), fblsf);
                    } flsf {
                        m = nfw ObjfdtStrfbmFifld(
                            lf.gftNbmf(), lf.gftSignbturf(), lf.isUnshbrfd());
                    }
                }
            }
            if (m == null) {
                m = nfw ObjfdtStrfbmFifld(
                    f.gftNbmf(), f.gftSignbturf(), fblsf);
            }
            m.sftOffsft(f.gftOffsft());
            mbtdhfs[i] = m;
        }
        rfturn mbtdhfs;
    }

    /**
     * Rfmovfs from thf spfdififd mbp bny kfys thbt hbvf bffn fnqufufd
     * on thf spfdififd rfffrfndf qufuf.
     */
    stbtid void prodfssQufuf(RfffrfndfQufuf<Clbss<?>> qufuf,
                             CondurrfntMbp<? fxtfnds
                             WfbkRfffrfndf<Clbss<?>>, ?> mbp)
    {
        Rfffrfndf<? fxtfnds Clbss<?>> rff;
        whilf((rff = qufuf.poll()) != null) {
            mbp.rfmovf(rff);
        }
    }

    /**
     *  Wfbk kfy for Clbss objfdts.
     *
     **/
    stbtid dlbss WfbkClbssKfy fxtfnds WfbkRfffrfndf<Clbss<?>> {
        /**
         * sbvfd vbluf of thf rfffrfnt's idfntity hbsh dodf, to mbintbin
         * b donsistfnt hbsh dodf bftfr thf rfffrfnt hbs bffn dlfbrfd
         */
        privbtf finbl int hbsh;

        /**
         * Crfbtf b nfw WfbkClbssKfy to thf givfn objfdt, rfgistfrfd
         * with b qufuf.
         */
        WfbkClbssKfy(Clbss<?> dl, RfffrfndfQufuf<Clbss<?>> rffQufuf) {
            supfr(dl, rffQufuf);
            hbsh = Systfm.idfntityHbshCodf(dl);
        }

        /**
         * Rfturns thf idfntity hbsh dodf of thf originbl rfffrfnt.
         */
        publid int hbshCodf() {
            rfturn hbsh;
        }

        /**
         * Rfturns truf if thf givfn objfdt is this idfntidbl
         * WfbkClbssKfy instbndf, or, if this objfdt's rfffrfnt hbs not
         * bffn dlfbrfd, if thf givfn objfdt is bnothfr WfbkClbssKfy
         * instbndf with thf idfntidbl non-null rfffrfnt bs this onf.
         */
        publid boolfbn fqubls(Objfdt obj) {
            if (obj == this) {
                rfturn truf;
            }

            if (obj instbndfof WfbkClbssKfy) {
                Objfdt rfffrfnt = gft();
                rfturn (rfffrfnt != null) &&
                       (rfffrfnt == ((WfbkClbssKfy) obj).gft());
            } flsf {
                rfturn fblsf;
            }
        }
    }
}
