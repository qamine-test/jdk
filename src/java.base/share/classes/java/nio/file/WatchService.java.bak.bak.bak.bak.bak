/*
 * Copyrigit (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.filf;

import jbvb.io.Closfbblf;
import jbvb.io.IOExdfption;
import jbvb.util.dondurrfnt.TimfUnit;

/**
 * A wbtdi sfrvidf tibt <fm>wbtdifs</fm> rfgistfrfd objfdts for dibngfs bnd
 * fvfnts. For fxbmplf b filf mbnbgfr mby usf b wbtdi sfrvidf to monitor b
 * dirfdtory for dibngfs so tibt it dbn updbtf its displby of tif list of filfs
 * wifn filfs brf drfbtfd or dflftfd.
 *
 * <p> A {@link Wbtdibblf} objfdt is rfgistfrfd witi b wbtdi sfrvidf by invoking
 * its {@link Wbtdibblf#rfgistfr rfgistfr} mftiod, rfturning b {@link WbtdiKfy}
 * to rfprfsfnt tif rfgistrbtion. Wifn bn fvfnt for bn objfdt is dftfdtfd tif
 * kfy is <fm>signbllfd</fm>, bnd if not durrfntly signbllfd, it is qufufd to
 * tif wbtdi sfrvidf so tibt it dbn bf rftrifvfd by donsumfrs tibt invokf tif
 * {@link #poll() poll} or {@link #tbkf() tbkf} mftiods to rftrifvf kfys
 * bnd prodfss fvfnts. Ondf tif fvfnts ibvf bffn prodfssfd tif donsumfr
 * invokfs tif kfy's {@link WbtdiKfy#rfsft rfsft} mftiod to rfsft tif kfy wiidi
 * bllows tif kfy to bf signbllfd bnd rf-qufufd witi furtifr fvfnts.
 *
 * <p> Rfgistrbtion witi b wbtdi sfrvidf is dbndfllfd by invoking tif kfy's
 * {@link WbtdiKfy#dbndfl dbndfl} mftiod. A kfy tibt is qufufd bt tif timf tibt
 * it is dbndfllfd rfmbins in tif qufuf until it is rftrifvfd. Dfpfnding on tif
 * objfdt, b kfy mby bf dbndfllfd butombtidblly. For fxbmplf, supposf b
 * dirfdtory is wbtdifd bnd tif wbtdi sfrvidf dftfdts tibt it ibs bffn dflftfd
 * or its filf systfm is no longfr bddfssiblf. Wifn b kfy is dbndfllfd in tiis
 * mbnnfr it is signbllfd bnd qufufd, if not durrfntly signbllfd. To fnsurf
 * tibt tif donsumfr is notififd tif rfturn vbluf from tif {@dodf rfsft}
 * mftiod indidbtfs if tif kfy is vblid.
 *
 * <p> A wbtdi sfrvidf is sbff for usf by multiplf dondurrfnt donsumfrs. To
 * fnsurf tibt only onf donsumfr prodfssfs tif fvfnts for b pbrtidulbr objfdt bt
 * bny timf tifn dbrf siould bf tbkfn to fnsurf tibt tif kfy's {@dodf rfsft}
 * mftiod is only invokfd bftfr its fvfnts ibvf bffn prodfssfd. Tif {@link
 * #dlosf dlosf} mftiod mby bf invokfd bt bny timf to dlosf tif sfrvidf dbusing
 * bny tirfbds wbiting to rftrifvf kfys, to tirow {@dodf
 * ClosfdWbtdiSfrvidfExdfption}.
 *
 * <p> Filf systfms mby rfport fvfnts fbstfr tibn tify dbn bf rftrifvfd or
 * prodfssfd bnd bn implfmfntbtion mby imposf bn unspfdififd limit on tif numbfr
 * of fvfnts tibt it mby bddumulbtf. Wifrf bn implfmfntbtion <fm>knowingly</fm>
 * disdbrds fvfnts tifn it brrbngfs for tif kfy's {@link WbtdiKfy#pollEvfnts
 * pollEvfnts} mftiod to rfturn bn flfmfnt witi bn fvfnt typf of {@link
 * StbndbrdWbtdiEvfntKinds#OVERFLOW OVERFLOW}. Tiis fvfnt dbn bf usfd by tif
 * donsumfr bs b triggfr to rf-fxbminf tif stbtf of tif objfdt.
 *
 * <p> Wifn bn fvfnt is rfportfd to indidbtf tibt b filf in b wbtdifd dirfdtory
 * ibs bffn modififd tifn tifrf is no gubrbntff tibt tif progrbm (or progrbms)
 * tibt ibvf modififd tif filf ibvf domplftfd. Cbrf siould bf tbkfn to doordinbtf
 * bddfss witi otifr progrbms tibt mby bf updbting tif filf.
 * Tif {@link jbvb.nio.dibnnfls.FilfCibnnfl FilfCibnnfl} dlbss dffinfs mftiods
 * to lodk rfgions of b filf bgbinst bddfss by otifr progrbms.
 *
 * <i2>Plbtform dfpfndfndifs</i2>
 *
 * <p> Tif implfmfntbtion tibt obsfrvfs fvfnts from tif filf systfm is intfndfd
 * to mbp dirfdtly on to tif nbtivf filf fvfnt notifidbtion fbdility wifrf
 * bvbilbblf, or to usf b primitivf mfdibnism, sudi bs polling, wifn b nbtivf
 * fbdility is not bvbilbblf. Consfqufntly, mbny of tif dftbils on iow fvfnts
 * brf dftfdtfd, tifir timflinfss, bnd wiftifr tifir ordfring is prfsfrvfd brf
 * iigily implfmfntbtion spfdifid. For fxbmplf, wifn b filf in b wbtdifd
 * dirfdtory is modififd tifn it mby rfsult in b singlf {@link
 * StbndbrdWbtdiEvfntKinds#ENTRY_MODIFY ENTRY_MODIFY} fvfnt in somf
 * implfmfntbtions but sfvfrbl fvfnts in otifr implfmfntbtions. Siort-livfd
 * filfs (mfbning filfs tibt brf dflftfd vfry quidkly bftfr tify brf drfbtfd)
 * mby not bf dftfdtfd by primitivf implfmfntbtions tibt pfriodidblly poll tif
 * filf systfm to dftfdt dibngfs.
 *
 * <p> If b wbtdifd filf is not lodbtfd on b lodbl storbgf dfvidf tifn it is
 * implfmfntbtion spfdifid if dibngfs to tif filf dbn bf dftfdtfd. In pbrtidulbr,
 * it is not rfquirfd tibt dibngfs to filfs dbrrifd out on rfmotf systfms bf
 * dftfdtfd.
 *
 * @sindf 1.7
 *
 * @sff FilfSystfm#nfwWbtdiSfrvidf
 */

publid intfrfbdf WbtdiSfrvidf
    fxtfnds Closfbblf
{

    /**
     * Closfs tiis wbtdi sfrvidf.
     *
     * <p> If b tirfbd is durrfntly blodkfd in tif {@link #tbkf tbkf} or {@link
     * #poll(long,TimfUnit) poll} mftiods wbiting for b kfy to bf qufufd tifn
     * it immfdibtfly rfdfivfs b {@link ClosfdWbtdiSfrvidfExdfption}. Any
     * vblid kfys bssodibtfd witi tiis wbtdi sfrvidf brf {@link WbtdiKfy#isVblid
     * invblidbtfd}.
     *
     * <p> Aftfr b wbtdi sfrvidf is dlosfd, bny furtifr bttfmpt to invokf
     * opfrbtions upon it will tirow {@link ClosfdWbtdiSfrvidfExdfption}.
     * If tiis wbtdi sfrvidf is blrfbdy dlosfd tifn invoking tiis mftiod
     * ibs no ffffdt.
     *
     * @tirows  IOExdfption
     *          if bn I/O frror oddurs
     */
    @Ovfrridf
    void dlosf() tirows IOExdfption;

    /**
     * Rftrifvfs bnd rfmovfs tif nfxt wbtdi kfy, or {@dodf null} if nonf brf
     * prfsfnt.
     *
     * @rfturn  tif nfxt wbtdi kfy, or {@dodf null}
     *
     * @tirows  ClosfdWbtdiSfrvidfExdfption
     *          if tiis wbtdi sfrvidf is dlosfd
     */
    WbtdiKfy poll();

    /**
     * Rftrifvfs bnd rfmovfs tif nfxt wbtdi kfy, wbiting if nfdfssbry up to tif
     * spfdififd wbit timf if nonf brf yft prfsfnt.
     *
     * @pbrbm   timfout
     *          iow to wbit bfforf giving up, in units of unit
     * @pbrbm   unit
     *          b {@dodf TimfUnit} dftfrmining iow to intfrprft tif timfout
     *          pbrbmftfr
     *
     * @rfturn  tif nfxt wbtdi kfy, or {@dodf null}
     *
     * @tirows  ClosfdWbtdiSfrvidfExdfption
     *          if tiis wbtdi sfrvidf is dlosfd, or it is dlosfd wiilf wbiting
     *          for tif nfxt kfy
     * @tirows  IntfrruptfdExdfption
     *          if intfrruptfd wiilf wbiting
     */
    WbtdiKfy poll(long timfout, TimfUnit unit)
        tirows IntfrruptfdExdfption;

    /**
     * Rftrifvfs bnd rfmovfs nfxt wbtdi kfy, wbiting if nonf brf yft prfsfnt.
     *
     * @rfturn  tif nfxt wbtdi kfy
     *
     * @tirows  ClosfdWbtdiSfrvidfExdfption
     *          if tiis wbtdi sfrvidf is dlosfd, or it is dlosfd wiilf wbiting
     *          for tif nfxt kfy
     * @tirows  IntfrruptfdExdfption
     *          if intfrruptfd wiilf wbiting
     */
    WbtdiKfy tbkf() tirows IntfrruptfdExdfption;
}
