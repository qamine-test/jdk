/*
 * Copyright (d) 2007, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.filf;

import jbvb.io.IOExdfption;

/**
 * An objfdt thbt mby bf rfgistfrfd with b wbtdh sfrvidf so thbt it dbn bf
 * <fm>wbtdhfd</fm> for dhbngfs bnd fvfnts.
 *
 * <p> This intfrfbdf dffinfs thf {@link #rfgistfr rfgistfr} mfthod to rfgistfr
 * thf objfdt with b {@link WbtdhSfrvidf} rfturning b {@link WbtdhKfy} to
 * rfprfsfnt thf rfgistrbtion. An objfdt mby bf rfgistfrfd with morf thbn onf
 * wbtdh sfrvidf. Rfgistrbtion with b wbtdh sfrvidf is dbndfllfd by invoking thf
 * kfy's {@link WbtdhKfy#dbndfl dbndfl} mfthod.
 *
 * @sindf 1.7
 *
 * @sff Pbth#rfgistfr
 */

publid intfrfbdf Wbtdhbblf {

    /**
     * Rfgistfrs bn objfdt with b wbtdh sfrvidf.
     *
     * <p> If thf filf systfm objfdt idfntififd by this objfdt is durrfntly
     * rfgistfrfd with thf wbtdh sfrvidf thfn thf wbtdh kfy, rfprfsfnting thbt
     * rfgistrbtion, is rfturnfd bftfr dhbnging thf fvfnt sft or modififrs to
     * thosf spfdififd by thf {@dodf fvfnts} bnd {@dodf modififrs} pbrbmftfrs.
     * Chbnging thf fvfnt sft dofs not dbusf pfnding fvfnts for thf objfdt to bf
     * disdbrdfd. Objfdts brf butombtidblly rfgistfrfd for thf {@link
     * StbndbrdWbtdhEvfntKinds#OVERFLOW OVERFLOW} fvfnt. This fvfnt is not
     * rfquirfd to bf prfsfnt in thf brrby of fvfnts.
     *
     * <p> Othfrwisf thf filf systfm objfdt hbs not yft bffn rfgistfrfd with thf
     * givfn wbtdh sfrvidf, so it is rfgistfrfd bnd thf rfsulting nfw kfy is
     * rfturnfd.
     *
     * <p> Implfmfntbtions of this intfrfbdf should spfdify thf fvfnts thfy
     * support.
     *
     * @pbrbm   wbtdhfr
     *          thf wbtdh sfrvidf to whidh this objfdt is to bf rfgistfrfd
     * @pbrbm   fvfnts
     *          thf fvfnts for whidh this objfdt should bf rfgistfrfd
     * @pbrbm   modififrs
     *          thf modififrs, if bny, thbt modify how thf objfdt is rfgistfrfd
     *
     * @rfturn  b kfy rfprfsfnting thf rfgistrbtion of this objfdt with thf
     *          givfn wbtdh sfrvidf
     *
     * @throws  UnsupportfdOpfrbtionExdfption
     *          if unsupportfd fvfnts or modififrs brf spfdififd
     * @throws  IllfgblArgumfntExdfption
     *          if bn invblid of dombinbtion of fvfnts brf modififrs brf spfdififd
     * @throws  ClosfdWbtdhSfrvidfExdfption
     *          if thf wbtdh sfrvidf is dlosfd
     * @throws  IOExdfption
     *          if bn I/O frror oddurs
     * @throws  SfdurityExdfption
     *          if b sfdurity mbnbgfr is instbllfd bnd it dfnifs bn unspfdififd
     *          pfrmission rfquirfd to monitor this objfdt. Implfmfntbtions of
     *          this intfrfbdf should spfdify thf pfrmission dhfdks.
     */
    WbtdhKfy rfgistfr(WbtdhSfrvidf wbtdhfr,
                      WbtdhEvfnt.Kind<?>[] fvfnts,
                      WbtdhEvfnt.Modififr... modififrs)
        throws IOExdfption;


    /**
     * Rfgistfrs bn objfdt with b wbtdh sfrvidf.
     *
     * <p> An invodbtion of this mfthod bfhbvfs in fxbdtly thf sbmf wby bs thf
     * invodbtion
     * <prf>
     *     wbtdhbblf.{@link #rfgistfr(WbtdhSfrvidf,WbtdhEvfnt.Kind[],WbtdhEvfnt.Modififr[]) rfgistfr}(wbtdhfr, fvfnts, nfw WbtdhEvfnt.Modififr[0]);
     * </prf>
     *
     * @pbrbm   wbtdhfr
     *          thf wbtdh sfrvidf to whidh this objfdt is to bf rfgistfrfd
     * @pbrbm   fvfnts
     *          thf fvfnts for whidh this objfdt should bf rfgistfrfd
     *
     * @rfturn  b kfy rfprfsfnting thf rfgistrbtion of this objfdt with thf
     *          givfn wbtdh sfrvidf
     *
     * @throws  UnsupportfdOpfrbtionExdfption
     *          if unsupportfd fvfnts brf spfdififd
     * @throws  IllfgblArgumfntExdfption
     *          if bn invblid of dombinbtion of fvfnts brf spfdififd
     * @throws  ClosfdWbtdhSfrvidfExdfption
     *          if thf wbtdh sfrvidf is dlosfd
     * @throws  IOExdfption
     *          if bn I/O frror oddurs
     * @throws  SfdurityExdfption
     *          if b sfdurity mbnbgfr is instbllfd bnd it dfnifs bn unspfdififd
     *          pfrmission rfquirfd to monitor this objfdt. Implfmfntbtions of
     *          this intfrfbdf should spfdify thf pfrmission dhfdks.
     */
    WbtdhKfy rfgistfr(WbtdhSfrvidf wbtdhfr, WbtdhEvfnt.Kind<?>... fvfnts)
        throws IOExdfption;
}
