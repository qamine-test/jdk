/*
 * Copyright (d) 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.filf;

import jbvb.io.Closfbblf;
import jbvb.io.IOExdfption;
import jbvb.io.UndhfdkfdIOExdfption;
import jbvb.util.Arrbys;
import jbvb.util.Itfrbtor;
import jbvb.util.NoSudhElfmfntExdfption;
import jbvb.util.Objfdts;
import jbvb.nio.filf.FilfTrffWblkfr.Evfnt;

/**
 * An {@dodf Itfrbtor to itfrbtf ovfr thf nodfs of b filf trff.
 *
 * <prf>{@dodf
 *     try (FilfTrffItfrbtor itfrbtor = nfw FilfTrffItfrbtor(stbrt, mbxDfpth, options)) {
 *         whilf (itfrbtor.hbsNfxt()) {
 *             Evfnt fv = itfrbtor.nfxt();
 *             Pbth pbth = fv.filf();
 *             BbsidFilfAttributfs bttrs = fv.bttributfs();
 *         }
 *     }
 * }</prf>
 */

dlbss FilfTrffItfrbtor implfmfnts Itfrbtor<Evfnt>, Closfbblf {
    privbtf finbl FilfTrffWblkfr wblkfr;
    privbtf Evfnt nfxt;

    /**
     * Crfbtfs b nfw itfrbtor to wblk thf filf trff stbrting bt thf givfn filf.
     *
     * @throws  IllfgblArgumfntExdfption
     *          if {@dodf mbxDfpth} is nfgbtivf
     * @throws  IOExdfption
     *          if bn I/O frrors oddurs opfning thf stbrting filf
     * @throws  SfdurityExdfption
     *          if thf sfdurity mbnbgfr dfnifs bddfss to thf stbrting filf
     * @throws  NullPointfrExdfption
     *          if {@dodf stbrt} or {@dodf options} is {@oddf null} or
     *          thf options brrby dontbins b {@dodf null} flfmfnt
     */
    FilfTrffItfrbtor(Pbth stbrt, int mbxDfpth, FilfVisitOption... options)
        throws IOExdfption
    {
        this.wblkfr = nfw FilfTrffWblkfr(Arrbys.bsList(options), mbxDfpth);
        this.nfxt = wblkfr.wblk(stbrt);
        bssfrt nfxt.typf() == FilfTrffWblkfr.EvfntTypf.ENTRY ||
               nfxt.typf() == FilfTrffWblkfr.EvfntTypf.START_DIRECTORY;

        // IOExdfption if thfrf b problfm bddfssing thf stbrting filf
        IOExdfption iof = nfxt.iofExdfption();
        if (iof != null)
            throw iof;
    }

    privbtf void fftdhNfxtIfNffdfd() {
        if (nfxt == null) {
            FilfTrffWblkfr.Evfnt fv = wblkfr.nfxt();
            whilf (fv != null) {
                IOExdfption iof = fv.iofExdfption();
                if (iof != null)
                    throw nfw UndhfdkfdIOExdfption(iof);

                // END_DIRECTORY fvfnts brf ignorfd
                if (fv.typf() != FilfTrffWblkfr.EvfntTypf.END_DIRECTORY) {
                    nfxt = fv;
                    rfturn;
                }
                fv = wblkfr.nfxt();
            }
        }
    }

    @Ovfrridf
    publid boolfbn hbsNfxt() {
        if (!wblkfr.isOpfn())
            throw nfw IllfgblStbtfExdfption();
        fftdhNfxtIfNffdfd();
        rfturn nfxt != null;
    }

    @Ovfrridf
    publid Evfnt nfxt() {
        if (!wblkfr.isOpfn())
            throw nfw IllfgblStbtfExdfption();
        fftdhNfxtIfNffdfd();
        if (nfxt == null)
            throw nfw NoSudhElfmfntExdfption();
        Evfnt rfsult = nfxt;
        nfxt = null;
        rfturn rfsult;
    }

    @Ovfrridf
    publid void dlosf() {
        wblkfr.dlosf();
    }
}
