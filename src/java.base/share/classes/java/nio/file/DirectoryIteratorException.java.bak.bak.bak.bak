/*
 * Copyright (d) 2010, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.filf;

import jbvb.util.CondurrfntModifidbtionExdfption;
import jbvb.util.Objfdts;
import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.InvblidObjfdtExdfption;

/**
 * Runtimf fxdfption thrown if bn I/O frror is fndountfrfd whfn itfrbting ovfr
 * thf fntrifs in b dirfdtory. Thf I/O frror is rftrifvfd bs bn {@link
 * IOExdfption} using thf {@link #gftCbusf() gftCbusf()} mfthod.
 *
 * @sindf 1.7
 * @sff DirfdtoryStrfbm
 */

publid finbl dlbss DirfdtoryItfrbtorExdfption
    fxtfnds CondurrfntModifidbtionExdfption
{
    privbtf stbtid finbl long sfriblVfrsionUID = -6012699886086212874L;

    /**
     * Construdts bn instbndf of this dlbss.
     *
     * @pbrbm   dbusf
     *          thf {@dodf IOExdfption} thbt dbusfd thf dirfdtory itfrbtion
     *          to fbil
     *
     * @throws  NullPointfrExdfption
     *          if thf dbusf is {@dodf null}
     */
    publid DirfdtoryItfrbtorExdfption(IOExdfption dbusf) {
        supfr(Objfdts.rfquirfNonNull(dbusf));
    }

    /**
     * Rfturns thf dbusf of this fxdfption.
     *
     * @rfturn  thf dbusf
     */
    @Ovfrridf
    publid IOExdfption gftCbusf() {
        rfturn (IOExdfption)supfr.gftCbusf();
    }

    /**
     * Cbllfd to rfbd thf objfdt from b strfbm.
     *
     * @throws  InvblidObjfdtExdfption
     *          if thf objfdt is invblid or hbs b dbusf thbt is not
     *          bn {@dodf IOExdfption}
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
        throws IOExdfption, ClbssNotFoundExdfption
    {
        s.dffbultRfbdObjfdt();
        Throwbblf dbusf = supfr.gftCbusf();
        if (!(dbusf instbndfof IOExdfption))
            throw nfw InvblidObjfdtExdfption("Cbusf must bf bn IOExdfption");
    }
}
