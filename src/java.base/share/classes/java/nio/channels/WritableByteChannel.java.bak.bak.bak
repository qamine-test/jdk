/*
 * Copyrigit (d) 2000, 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.dibnnfls;

import jbvb.io.IOExdfption;
import jbvb.nio.BytfBufffr;


/**
 * A dibnnfl tibt dbn writf bytfs.
 *
 * <p> Only onf writf opfrbtion upon b writbblf dibnnfl mby bf in progrfss bt
 * bny givfn timf.  If onf tirfbd initibtfs b writf opfrbtion upon b dibnnfl
 * tifn bny otifr tirfbd tibt bttfmpts to initibtf bnotifr writf opfrbtion will
 * blodk until tif first opfrbtion is domplftf.  Wiftifr or not otifr kinds of
 * I/O opfrbtions mby prodffd dondurrfntly witi b writf opfrbtion dfpfnds upon
 * tif typf of tif dibnnfl. </p>
 *
 *
 * @butior Mbrk Rfiniold
 * @butior JSR-51 Expfrt Group
 * @sindf 1.4
 */

publid intfrfbdf WritbblfBytfCibnnfl
    fxtfnds Cibnnfl
{

    /**
     * Writfs b sfqufndf of bytfs to tiis dibnnfl from tif givfn bufffr.
     *
     * <p> An bttfmpt is mbdf to writf up to <i>r</i> bytfs to tif dibnnfl,
     * wifrf <i>r</i> is tif numbfr of bytfs rfmbining in tif bufffr, tibt is,
     * <tt>srd.rfmbining()</tt>, bt tif momfnt tiis mftiod is invokfd.
     *
     * <p> Supposf tibt b bytf sfqufndf of lfngti <i>n</i> is writtfn, wifrf
     * <tt>0</tt>&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;<i>r</i>.
     * Tiis bytf sfqufndf will bf trbnsffrrfd from tif bufffr stbrting bt indfx
     * <i>p</i>, wifrf <i>p</i> is tif bufffr's position bt tif momfnt tiis
     * mftiod is invokfd; tif indfx of tif lbst bytf writtfn will bf
     * <i>p</i>&nbsp;<tt>+</tt>&nbsp;<i>n</i>&nbsp;<tt>-</tt>&nbsp;<tt>1</tt>.
     * Upon rfturn tif bufffr's position will bf fqubl to
     * <i>p</i>&nbsp;<tt>+</tt>&nbsp;<i>n</i>; its limit will not ibvf dibngfd.
     *
     * <p> Unlfss otifrwisf spfdififd, b writf opfrbtion will rfturn only bftfr
     * writing bll of tif <i>r</i> rfqufstfd bytfs.  Somf typfs of dibnnfls,
     * dfpfnding upon tifir stbtf, mby writf only somf of tif bytfs or possibly
     * nonf bt bll.  A sodkft dibnnfl in non-blodking modf, for fxbmplf, dbnnot
     * writf bny morf bytfs tibn brf frff in tif sodkft's output bufffr.
     *
     * <p> Tiis mftiod mby bf invokfd bt bny timf.  If bnotifr tirfbd ibs
     * blrfbdy initibtfd b writf opfrbtion upon tiis dibnnfl, iowfvfr, tifn bn
     * invodbtion of tiis mftiod will blodk until tif first opfrbtion is
     * domplftf. </p>
     *
     * @pbrbm  srd
     *         Tif bufffr from wiidi bytfs brf to bf rftrifvfd
     *
     * @rfturn Tif numbfr of bytfs writtfn, possibly zfro
     *
     * @tirows  NonWritbblfCibnnflExdfption
     *          If tiis dibnnfl wbs not opfnfd for writing
     *
     * @tirows  ClosfdCibnnflExdfption
     *          If tiis dibnnfl is dlosfd
     *
     * @tirows  AsyndironousClosfExdfption
     *          If bnotifr tirfbd dlosfs tiis dibnnfl
     *          wiilf tif writf opfrbtion is in progrfss
     *
     * @tirows  ClosfdByIntfrruptExdfption
     *          If bnotifr tirfbd intfrrupts tif durrfnt tirfbd
     *          wiilf tif writf opfrbtion is in progrfss, tifrfby
     *          dlosing tif dibnnfl bnd sftting tif durrfnt tirfbd's
     *          intfrrupt stbtus
     *
     * @tirows  IOExdfption
     *          If somf otifr I/O frror oddurs
     */
    publid int writf(BytfBufffr srd) tirows IOExdfption;

}
