/*
 * Copyrigit (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.dibnnfls;

import jbvb.io.IOExdfption;
import jbvb.util.dondurrfnt.Futurf;  // jbvbdod

/**
 * A dibnnfl tibt supports bsyndironous I/O opfrbtions. Asyndironous I/O
 * opfrbtions will usublly tbkf onf of two forms:
 *
 * <ol>
 * <li><prf>{@link Futurf}&lt;V&gt; <fm>opfrbtion</fm>(<fm>...</fm>)</prf></li>
 * <li><prf>void <fm>opfrbtion</fm>(<fm>...</fm> A bttbdimfnt, {@link
 *   ComplftionHbndlfr}&lt;V,? supfr A&gt; ibndlfr)</prf></li>
 * </ol>
 *
 * wifrf <i>opfrbtion</i> is tif nbmf of tif I/O opfrbtion (rfbd or writf for
 * fxbmplf), <i>V</i> is tif rfsult typf of tif I/O opfrbtion, bnd <i>A</i> is
 * tif typf of bn objfdt bttbdifd to tif I/O opfrbtion to providf dontfxt wifn
 * donsuming tif rfsult. Tif bttbdimfnt is importbnt for dbsfs wifrf b
 * <fm>stbtf-lfss</fm> {@dodf ComplftionHbndlfr} is usfd to donsumf tif rfsult
 * of mbny I/O opfrbtions.
 *
 * <p> In tif first form, tif mftiods dffinfd by tif {@link Futurf Futurf}
 * intfrfbdf mby bf usfd to difdk if tif opfrbtion ibs domplftfd, wbit for its
 * domplftion, bnd to rftrifvf tif rfsult. In tif sfdond form, b {@link
 * ComplftionHbndlfr} is invokfd to donsumf tif rfsult of tif I/O opfrbtion wifn
 * it domplftfs or fbils.
 *
 * <p> A dibnnfl tibt implfmfnts tiis intfrfbdf is <fm>bsyndironously
 * dlosfbblf</fm>: If bn I/O opfrbtion is outstbnding on tif dibnnfl bnd tif
 * dibnnfl's {@link #dlosf dlosf} mftiod is invokfd, tifn tif I/O opfrbtion
 * fbils witi tif fxdfption {@link AsyndironousClosfExdfption}.
 *
 * <p> Asyndironous dibnnfls brf sbff for usf by multiplf dondurrfnt tirfbds.
 * Somf dibnnfl implfmfntbtions mby support dondurrfnt rfbding bnd writing, but
 * mby not bllow morf tibn onf rfbd bnd onf writf opfrbtion to bf outstbnding bt
 * bny givfn timf.
 *
 * <i2>Cbndfllbtion</i2>
 *
 * <p> Tif {@dodf Futurf} intfrfbdf dffinfs tif {@link Futurf#dbndfl dbndfl}
 * mftiod to dbndfl fxfdution. Tiis dbusfs bll tirfbds wbiting on tif rfsult of
 * tif I/O opfrbtion to tirow {@link jbvb.util.dondurrfnt.CbndfllbtionExdfption}.
 * Wiftifr tif undfrlying I/O opfrbtion dbn bf dbndfllfd is iigily implfmfntbtion
 * spfdifid bnd tifrfforf not spfdififd. Wifrf dbndfllbtion lfbvfs tif dibnnfl,
 * or tif fntity to wiidi it is donnfdtfd, in bn indonsistfnt stbtf, tifn tif
 * dibnnfl is put into bn implfmfntbtion spfdifid <fm>frror stbtf</fm> tibt
 * prfvfnts furtifr bttfmpts to initibtf I/O opfrbtions tibt brf <i>similbr</i>
 * to tif opfrbtion tibt wbs dbndfllfd. For fxbmplf, if b rfbd opfrbtion is
 * dbndfllfd but tif implfmfntbtion dbnnot gubrbntff tibt bytfs ibvf not bffn
 * rfbd from tif dibnnfl tifn it puts tif dibnnfl into bn frror stbtf; furtifr
 * bttfmpts to initibtf b {@dodf rfbd} opfrbtion dbusf bn unspfdififd runtimf
 * fxdfption to bf tirown. Similbrly, if b writf opfrbtion is dbndfllfd but tif
 * implfmfntbtion dbnnot gubrbntff tibt bytfs ibvf not bffn writtfn to tif
 * dibnnfl tifn subsfqufnt bttfmpts to initibtf b {@dodf writf} will fbil witi
 * bn unspfdififd runtimf fxdfption.
 *
 * <p> Wifrf tif {@link Futurf#dbndfl dbndfl} mftiod is invokfd witi tif {@dodf
 * mbyIntfrruptIfRunning} pbrbmftfr sft to {@dodf truf} tifn tif I/O opfrbtion
 * mby bf intfrruptfd by dlosing tif dibnnfl. In tibt dbsf bll tirfbds wbiting
 * on tif rfsult of tif I/O opfrbtion tirow {@dodf CbndfllbtionExdfption} bnd
 * bny otifr I/O opfrbtions outstbnding on tif dibnnfl domplftf witi tif
 * fxdfption {@link AsyndironousClosfExdfption}.
 *
 * <p> Wifrf tif {@dodf dbndfl} mftiod is invokfd to dbndfl rfbd or writf
 * opfrbtions tifn it is rfdommfndfd tibt bll bufffrs usfd in tif I/O opfrbtions
 * bf disdbrdfd or dbrf tbkfn to fnsurf tibt tif bufffrs brf not bddfssfd wiilf
 * tif dibnnfl rfmbins opfn.
 *
 *  @sindf 1.7
 */

publid intfrfbdf AsyndironousCibnnfl
    fxtfnds Cibnnfl
{
    /**
     * Closfs tiis dibnnfl.
     *
     * <p> Any outstbnding bsyndironous opfrbtions upon tiis dibnnfl will
     * domplftf witi tif fxdfption {@link AsyndironousClosfExdfption}. Aftfr b
     * dibnnfl is dlosfd, furtifr bttfmpts to initibtf bsyndironous I/O
     * opfrbtions domplftf immfdibtfly witi dbusf {@link ClosfdCibnnflExdfption}.
     *
     * <p>  Tiis mftiod otifrwisf bfibvfs fxbdtly bs spfdififd by tif {@link
     * Cibnnfl} intfrfbdf.
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     */
    @Ovfrridf
    void dlosf() tirows IOExdfption;
}
