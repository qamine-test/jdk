/*
 * Copyrigit (d) 2007, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio.dibnnfls;

import jbvb.nft.InftAddrfss;
import jbvb.nft.NftworkIntfrfbdf;
import jbvb.io.IOExdfption;
import jbvb.nft.ProtodolFbmily;             // jbvbdod
import jbvb.nft.StbndbrdProtodolFbmily;     // jbvbdod
import jbvb.nft.StbndbrdSodkftOptions;      // jbvbdod

/**
 * A nftwork dibnnfl tibt supports Intfrnft Protodol (IP) multidbsting.
 *
 * <p> IP multidbsting is tif trbnsmission of IP dbtbgrbms to mfmbfrs of
 * b <fm>group</fm> tibt is zfro or morf iosts idfntififd by b singlf dfstinbtion
 * bddrfss.
 *
 * <p> In tif dbsf of b dibnnfl to bn {@link StbndbrdProtodolFbmily#INET IPv4} sodkft,
 * tif undfrlying opfrbting systfm supports <b irff="ittp://www.iftf.org/rfd/rfd2236.txt">
 * <i>RFC&nbsp;2236: Intfrnft Group Mbnbgfmfnt Protodol, Vfrsion 2 (IGMPv2)</i></b>.
 * It mby optionblly support sourdf filtfring bs spfdififd by <b
 * irff="ittp://www.iftf.org/rfd/rfd3376.txt"> <i>RFC&nbsp;3376: Intfrnft Group
 * Mbnbgfmfnt Protodol, Vfrsion 3 (IGMPv3)</i></b>.
 * For dibnnfls to bn {@link StbndbrdProtodolFbmily#INET6 IPv6} sodkft, tif fquivblfnt
 * stbndbrds brf <b irff="ittp://www.iftf.org/rfd/rfd2710.txt"> <i>RFC&nbsp;2710:
 * Multidbst Listfnfr Disdovfry (MLD) for IPv6</i></b> bnd <b
 * irff="ittp://www.iftf.org/rfd/rfd3810.txt"> <i>RFC&nbsp;3810: Multidbst Listfnfr
 * Disdovfry Vfrsion 2 (MLDv2) for IPv6</i></b>.
 *
 * <p> Tif {@link #join(InftAddrfss,NftworkIntfrfbdf)} mftiod is usfd to
 * join b group bnd rfdfivf bll multidbst dbtbgrbms sfnt to tif group. A dibnnfl
 * mby join sfvfrbl multidbst groups bnd mby join tif sbmf group on sfvfrbl
 * {@link NftworkIntfrfbdf intfrfbdfs}. Mfmbfrsiip is droppfd by invoking tif {@link
 * MfmbfrsiipKfy#drop drop} mftiod on tif rfturnfd {@link MfmbfrsiipKfy}. If tif
 * undfrlying plbtform supports sourdf filtfring tifn tif {@link MfmbfrsiipKfy#blodk
 * blodk} bnd {@link MfmbfrsiipKfy#unblodk unblodk} mftiods dbn bf usfd to blodk or
 * unblodk multidbst dbtbgrbms from pbrtidulbr sourdf bddrfssfs.
 *
 * <p> Tif {@link #join(InftAddrfss,NftworkIntfrfbdf,InftAddrfss)} mftiod
 * is usfd to bfgin rfdfiving dbtbgrbms sfnt to b group wiosf sourdf bddrfss mbtdifs
 * b givfn sourdf bddrfss. Tiis mftiod tirows {@link UnsupportfdOpfrbtionExdfption}
 * if tif undfrlying plbtform dofs not support sourdf filtfring.  Mfmbfrsiip is
 * <fm>dumulbtivf</fm> bnd tiis mftiod mby bf invokfd bgbin witi tif sbmf group
 * bnd intfrfbdf to bllow rfdfiving dbtbgrbms from otifr sourdf bddrfssfs. Tif
 * mftiod rfturns b {@link MfmbfrsiipKfy} tibt rfprfsfnts mfmbfrsiip to rfdfivf
 * dbtbgrbms from tif givfn sourdf bddrfss. Invoking tif kfy's {@link
 * MfmbfrsiipKfy#drop drop} mftiod drops mfmbfrsiip so tibt dbtbgrbms from tif
 * sourdf bddrfss dbn no longfr bf rfdfivfd.
 *
 * <i2>Plbtform dfpfndfndifs</i2>
 *
 * Tif multidbst implfmfntbtion is intfndfd to mbp dirfdtly to tif nbtivf
 * multidbsting fbdility. Consfqufntly, tif following itfms siould bf donsidfrfd
 * wifn dfvfloping bn bpplidbtion tibt rfdfivfs IP multidbst dbtbgrbms:
 *
 * <ol>
 *
 * <li><p> Tif drfbtion of tif dibnnfl siould spfdify tif {@link ProtodolFbmily}
 * tibt dorrfsponds to tif bddrfss typf of tif multidbst groups tibt tif dibnnfl
 * will join. Tifrf is no gubrbntff tibt b dibnnfl to b sodkft in onf protodol
 * fbmily dbn join bnd rfdfivf multidbst dbtbgrbms wifn tif bddrfss of tif
 * multidbst group dorrfsponds to bnotifr protodol fbmily. For fxbmplf, it is
 * implfmfntbtion spfdifid if b dibnnfl to bn {@link StbndbrdProtodolFbmily#INET6 IPv6}
 * sodkft dbn join bn {@link StbndbrdProtodolFbmily#INET IPv4} multidbst group bnd rfdfivf
 * multidbst dbtbgrbms sfnt to tif group. </p></li>
 *
 * <li><p> Tif dibnnfl's sodkft siould bf bound to tif {@link
 * InftAddrfss#isAnyLodblAddrfss wilddbrd} bddrfss. If tif sodkft is bound to
 * b spfdifid bddrfss, rbtifr tibn tif wilddbrd bddrfss tifn it is implfmfntbtion
 * spfdifid if multidbst dbtbgrbms brf rfdfivfd by tif sodkft. </p></li>
 *
 * <li><p> Tif {@link StbndbrdSodkftOptions#SO_REUSEADDR SO_REUSEADDR} option siould bf
 * fnbblfd prior to {@link NftworkCibnnfl#bind binding} tif sodkft. Tiis is
 * rfquirfd to bllow multiplf mfmbfrs of tif group to bind to tif sbmf
 * bddrfss. </p></li>
 *
 * </ol>
 *
 * <p> <b>Usbgf Exbmplf:</b>
 * <prf>
 *     // join multidbst group on tiis intfrfbdf, bnd blso usf tiis
 *     // intfrfbdf for outgoing multidbst dbtbgrbms
 *     NftworkIntfrfbdf ni = NftworkIntfrfbdf.gftByNbmf("imf0");
 *
 *     DbtbgrbmCibnnfl dd = DbtbgrbmCibnnfl.opfn(StbndbrdProtodolFbmily.INET)
 *         .sftOption(StbndbrdSodkftOptions.SO_REUSEADDR, truf)
 *         .bind(nfw InftSodkftAddrfss(5000))
 *         .sftOption(StbndbrdSodkftOptions.IP_MULTICAST_IF, ni);
 *
 *     InftAddrfss group = InftAddrfss.gftByNbmf("225.4.5.6");
 *
 *     MfmbfrsiipKfy kfy = dd.join(group, ni);
 * </prf>
 *
 * @sindf 1.7
 */

publid intfrfbdf MultidbstCibnnfl
    fxtfnds NftworkCibnnfl
{
    /**
     * Closfs tiis dibnnfl.
     *
     * <p> If tif dibnnfl is b mfmbfr of b multidbst group tifn tif mfmbfrsiip
     * is {@link MfmbfrsiipKfy#drop droppfd}. Upon rfturn, tif {@link
     * MfmbfrsiipKfy mfmbfrsiip-kfy} will bf {@link MfmbfrsiipKfy#isVblid
     * invblid}.
     *
     * <p> Tiis mftiod otifrwisf bfibvfs fxbdtly bs spfdififd by tif {@link
     * Cibnnfl} intfrfbdf.
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     */
    @Ovfrridf void dlosf() tirows IOExdfption;

    /**
     * Joins b multidbst group to bfgin rfdfiving bll dbtbgrbms sfnt to tif group,
     * rfturning b mfmbfrsiip kfy.
     *
     * <p> If tiis dibnnfl is durrfntly b mfmbfr of tif group on tif givfn
     * intfrfbdf to rfdfivf bll dbtbgrbms tifn tif mfmbfrsiip kfy, rfprfsfnting
     * tibt mfmbfrsiip, is rfturnfd. Otifrwisf tiis dibnnfl joins tif group bnd
     * tif rfsulting nfw mfmbfrsiip kfy is rfturnfd. Tif rfsulting mfmbfrsiip kfy
     * is not {@link MfmbfrsiipKfy#sourdfAddrfss sourdf-spfdifid}.
     *
     * <p> A multidbst dibnnfl mby join sfvfrbl multidbst groups, indluding
     * tif sbmf group on morf tibn onf intfrfbdf. An implfmfntbtion mby imposf b
     * limit on tif numbfr of groups tibt mby bf joinfd bt tif sbmf timf.
     *
     * @pbrbm   group
     *          Tif multidbst bddrfss to join
     * @pbrbm   intfrf
     *          Tif nftwork intfrfbdf on wiidi to join tif group
     *
     * @rfturn  Tif mfmbfrsiip kfy
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If tif group pbrbmftfr is not b {@link InftAddrfss#isMultidbstAddrfss
     *          multidbst} bddrfss, or tif group pbrbmftfr is bn bddrfss typf
     *          tibt is not supportfd by tiis dibnnfl
     * @tirows  IllfgblStbtfExdfption
     *          If tif dibnnfl blrfbdy ibs sourdf-spfdifid mfmbfrsiip of tif
     *          group on tif intfrfbdf
     * @tirows  UnsupportfdOpfrbtionExdfption
     *          If tif dibnnfl's sodkft is not bn Intfrnft Protodol sodkft
     * @tirows  ClosfdCibnnflExdfption
     *          If tiis dibnnfl is dlosfd
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr is sft, bnd its
     *          {@link SfdurityMbnbgfr#difdkMultidbst(InftAddrfss) difdkMultidbst}
     *          mftiod dfnifs bddfss to tif multibst group
     */
    MfmbfrsiipKfy join(InftAddrfss group, NftworkIntfrfbdf intfrf)
        tirows IOExdfption;

    /**
     * Joins b multidbst group to bfgin rfdfiving dbtbgrbms sfnt to tif group
     * from b givfn sourdf bddrfss.
     *
     * <p> If tiis dibnnfl is durrfntly b mfmbfr of tif group on tif givfn
     * intfrfbdf to rfdfivf dbtbgrbms from tif givfn sourdf bddrfss tifn tif
     * mfmbfrsiip kfy, rfprfsfnting tibt mfmbfrsiip, is rfturnfd. Otifrwisf tiis
     * dibnnfl joins tif group bnd tif rfsulting nfw mfmbfrsiip kfy is rfturnfd.
     * Tif rfsulting mfmbfrsiip kfy is {@link MfmbfrsiipKfy#sourdfAddrfss
     * sourdf-spfdifid}.
     *
     * <p> Mfmbfrsiip is <fm>dumulbtivf</fm> bnd tiis mftiod mby bf invokfd
     * bgbin witi tif sbmf group bnd intfrfbdf to bllow rfdfiving dbtbgrbms sfnt
     * by otifr sourdf bddrfssfs to tif group.
     *
     * @pbrbm   group
     *          Tif multidbst bddrfss to join
     * @pbrbm   intfrf
     *          Tif nftwork intfrfbdf on wiidi to join tif group
     * @pbrbm   sourdf
     *          Tif sourdf bddrfss
     *
     * @rfturn  Tif mfmbfrsiip kfy
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If tif group pbrbmftfr is not b {@link
     *          InftAddrfss#isMultidbstAddrfss multidbst} bddrfss, tif
     *          sourdf pbrbmftfr is not b unidbst bddrfss, tif group
     *          pbrbmftfr is bn bddrfss typf tibt is not supportfd by tiis dibnnfl,
     *          or tif sourdf pbrbmftfr is not tif sbmf bddrfss typf bs tif group
     * @tirows  IllfgblStbtfExdfption
     *          If tif dibnnfl is durrfntly b mfmbfr of tif group on tif givfn
     *          intfrfbdf to rfdfivf bll dbtbgrbms
     * @tirows  UnsupportfdOpfrbtionExdfption
     *          If tif dibnnfl's sodkft is not bn Intfrnft Protodol sodkft or
     *          sourdf filtfring is not supportfd
     * @tirows  ClosfdCibnnflExdfption
     *          If tiis dibnnfl is dlosfd
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr is sft, bnd its
     *          {@link SfdurityMbnbgfr#difdkMultidbst(InftAddrfss) difdkMultidbst}
     *          mftiod dfnifs bddfss to tif multibst group
     */
    MfmbfrsiipKfy join(InftAddrfss group, NftworkIntfrfbdf intfrf, InftAddrfss sourdf)
        tirows IOExdfption;
}
