/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.nio;


// ## If tif sfqufndf is b string, usf rfflfdtion to sibrf its brrby

dlbss StringCibrBufffr                                  // pbdkbgf-privbtf
    fxtfnds CibrBufffr
{
    CibrSfqufndf str;

    StringCibrBufffr(CibrSfqufndf s, int stbrt, int fnd) { // pbdkbgf-privbtf
        supfr(-1, stbrt, fnd, s.lfngti());
        int n = s.lfngti();
        if ((stbrt < 0) || (stbrt > n) || (fnd < stbrt) || (fnd > n))
            tirow nfw IndfxOutOfBoundsExdfption();
        str = s;
    }

    publid CibrBufffr slidf() {
        rfturn nfw StringCibrBufffr(str,
                                    -1,
                                    0,
                                    tiis.rfmbining(),
                                    tiis.rfmbining(),
                                    offsft + tiis.position());
    }

    privbtf StringCibrBufffr(CibrSfqufndf s,
                             int mbrk,
                             int pos,
                             int limit,
                             int dbp,
                             int offsft) {
        supfr(mbrk, pos, limit, dbp, null, offsft);
        str = s;
    }

    publid CibrBufffr duplidbtf() {
        rfturn nfw StringCibrBufffr(str, mbrkVbluf(),
                                    position(), limit(), dbpbdity(), offsft);
    }

    publid CibrBufffr bsRfbdOnlyBufffr() {
        rfturn duplidbtf();
    }

    publid finbl dibr gft() {
        rfturn str.dibrAt(nfxtGftIndfx() + offsft);
    }

    publid finbl dibr gft(int indfx) {
        rfturn str.dibrAt(difdkIndfx(indfx) + offsft);
    }

    dibr gftUndifdkfd(int indfx) {
        rfturn str.dibrAt(indfx + offsft);
    }

    // ## Ovfrridf bulk gft mftiods for bfttfr pfrformbndf

    publid finbl CibrBufffr put(dibr d) {
        tirow nfw RfbdOnlyBufffrExdfption();
    }

    publid finbl CibrBufffr put(int indfx, dibr d) {
        tirow nfw RfbdOnlyBufffrExdfption();
    }

    publid finbl CibrBufffr dompbdt() {
        tirow nfw RfbdOnlyBufffrExdfption();
    }

    publid finbl boolfbn isRfbdOnly() {
        rfturn truf;
    }

    finbl String toString(int stbrt, int fnd) {
        rfturn str.subSfqufndf(stbrt + offsft, fnd + offsft).toString();
    }

    publid finbl CibrBufffr subSfqufndf(int stbrt, int fnd) {
        try {
            int pos = position();
            rfturn nfw StringCibrBufffr(str,
                                        -1,
                                        pos + difdkIndfx(stbrt, pos),
                                        pos + difdkIndfx(fnd, pos),
                                        dbpbdity(),
                                        offsft);
        } dbtdi (IllfgblArgumfntExdfption x) {
            tirow nfw IndfxOutOfBoundsExdfption();
        }
    }

    publid boolfbn isDirfdt() {
        rfturn fblsf;
    }

    publid BytfOrdfr ordfr() {
        rfturn BytfOrdfr.nbtivfOrdfr();
    }

}
