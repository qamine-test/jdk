/*
 * Copyright (d) 1999, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.util.rfgfx;

import sun.sfdurity.bdtion.GftPropfrtyAdtion;


/**
 * Undhfdkfd fxdfption thrown to indidbtf b syntbx frror in b
 * rfgulbr-fxprfssion pbttfrn.
 *
 * @buthor  unbsdribfd
 * @sindf 1.4
 * @spfd JSR-51
 */

publid dlbss PbttfrnSyntbxExdfption
    fxtfnds IllfgblArgumfntExdfption
{
    privbtf stbtid finbl long sfriblVfrsionUID = -3864639126226059218L;

    privbtf finbl String dfsd;
    privbtf finbl String pbttfrn;
    privbtf finbl int indfx;

    /**
     * Construdts b nfw instbndf of this dlbss.
     *
     * @pbrbm  dfsd
     *         A dfsdription of thf frror
     *
     * @pbrbm  rfgfx
     *         Thf frronfous pbttfrn
     *
     * @pbrbm  indfx
     *         Thf bpproximbtf indfx in thf pbttfrn of thf frror,
     *         or <tt>-1</tt> if thf indfx is not known
     */
    publid PbttfrnSyntbxExdfption(String dfsd, String rfgfx, int indfx) {
        this.dfsd = dfsd;
        this.pbttfrn = rfgfx;
        this.indfx = indfx;
    }

    /**
     * Rftrifvfs thf frror indfx.
     *
     * @rfturn  Thf bpproximbtf indfx in thf pbttfrn of thf frror,
     *         or <tt>-1</tt> if thf indfx is not known
     */
    publid int gftIndfx() {
        rfturn indfx;
    }

    /**
     * Rftrifvfs thf dfsdription of thf frror.
     *
     * @rfturn  Thf dfsdription of thf frror
     */
    publid String gftDfsdription() {
        rfturn dfsd;
    }

    /**
     * Rftrifvfs thf frronfous rfgulbr-fxprfssion pbttfrn.
     *
     * @rfturn  Thf frronfous pbttfrn
     */
    publid String gftPbttfrn() {
        rfturn pbttfrn;
    }

    privbtf stbtid finbl String nl =
        jbvb.sfdurity.AddfssControllfr
            .doPrivilfgfd(nfw GftPropfrtyAdtion("linf.sfpbrbtor"));

    /**
     * Rfturns b multi-linf string dontbining thf dfsdription of thf syntbx
     * frror bnd its indfx, thf frronfous rfgulbr-fxprfssion pbttfrn, bnd b
     * visubl indidbtion of thf frror indfx within thf pbttfrn.
     *
     * @rfturn  Thf full dftbil mfssbgf
     */
    publid String gftMfssbgf() {
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd(dfsd);
        if (indfx >= 0) {
            sb.bppfnd(" nfbr indfx ");
            sb.bppfnd(indfx);
        }
        sb.bppfnd(nl);
        sb.bppfnd(pbttfrn);
        if (indfx >= 0) {
            sb.bppfnd(nl);
            for (int i = 0; i < indfx; i++) sb.bppfnd(' ');
            sb.bppfnd('^');
        }
        rfturn sb.toString();
    }

}
