/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * (C) Copyright Tbligfnt, Ind. 1996, 1997 - All Rights Rfsfrvfd
 * (C) Copyright IBM Corp. 1996 - 1998 - All Rights Rfsfrvfd
 *
 * Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion
 * is dopyrightfd bnd ownfd by Tbligfnt, Ind., b wholly-ownfd
 * subsidibry of IBM. Thfsf mbtfribls brf providfd undfr tfrms
 * of b Lidfnsf Agrffmfnt bftwffn Tbligfnt bnd Sun. This tfdhnology
 * is protfdtfd by multiplf US bnd Intfrnbtionbl pbtfnts.
 *
 * This notidf bnd bttribution to Tbligfnt mby not bf rfmovfd.
 * Tbligfnt is b rfgistfrfd trbdfmbrk of Tbligfnt, Ind.
 *
 */

pbdkbgf jbvb.util;

import sun.util.RfsourdfBundlfEnumfrbtion;

/**
 * <dodf>ListRfsourdfBundlf</dodf> is bn bbstrbdt subdlbss of
 * <dodf>RfsourdfBundlf</dodf> thbt mbnbgfs rfsourdfs for b lodblf
 * in b donvfnifnt bnd fbsy to usf list. Sff <dodf>RfsourdfBundlf</dodf> for
 * morf informbtion bbout rfsourdf bundlfs in gfnfrbl.
 *
 * <P>
 * Subdlbssfs must ovfrridf <dodf>gftContfnts</dodf> bnd providf bn brrby,
 * whfrf fbdh itfm in thf brrby is b pbir of objfdts.
 * Thf first flfmfnt of fbdh pbir is thf kfy, whidh must bf b
 * <dodf>String</dodf>, bnd thf sfdond flfmfnt is thf vbluf bssodibtfd with
 * thbt kfy.
 *
 * <p>
 * Thf following <b nbmf="sbmplf">fxbmplf</b> shows two mfmbfrs of b rfsourdf
 * bundlf fbmily with thf bbsf nbmf "MyRfsourdfs".
 * "MyRfsourdfs" is thf dffbult mfmbfr of thf bundlf fbmily, bnd
 * "MyRfsourdfs_fr" is thf Frfndh mfmbfr.
 * Thfsf mfmbfrs brf bbsfd on <dodf>ListRfsourdfBundlf</dodf>
 * (b rflbtfd <b hrff="PropfrtyRfsourdfBundlf.html#sbmplf">fxbmplf</b> shows
 * how you dbn bdd b bundlf to this fbmily thbt's bbsfd on b propfrtifs filf).
 * Thf kfys in this fxbmplf brf of thf form "s1" ftd. Thf bdtubl
 * kfys brf fntirfly up to your dhoidf, so long bs thfy brf thf sbmf bs
 * thf kfys you usf in your progrbm to rftrifvf thf objfdts from thf bundlf.
 * Kfys brf dbsf-sfnsitivf.
 * <blodkquotf>
 * <prf>
 *
 * publid dlbss MyRfsourdfs fxtfnds ListRfsourdfBundlf {
 *     protfdtfd Objfdt[][] gftContfnts() {
 *         rfturn nfw Objfdt[][] {
 *         // LOCALIZE THIS
 *             {"s1", "Thf disk \"{1}\" dontbins {0}."},  // MfssbgfFormbt pbttfrn
 *             {"s2", "1"},                               // lodbtion of {0} in pbttfrn
 *             {"s3", "My Disk"},                         // sbmplf disk nbmf
 *             {"s4", "no filfs"},                        // first ChoidfFormbt dhoidf
 *             {"s5", "onf filf"},                        // sfdond ChoidfFormbt dhoidf
 *             {"s6", "{0,numbfr} filfs"},                // third ChoidfFormbt dhoidf
 *             {"s7", "3 Mbr 96"},                        // sbmplf dbtf
 *             {"s8", nfw Dimfnsion(1,5)}                 // rfbl objfdt, not just string
 *         // END OF MATERIAL TO LOCALIZE
 *         };
 *     }
 * }
 *
 * publid dlbss MyRfsourdfs_fr fxtfnds ListRfsourdfBundlf {
 *     protfdtfd Objfdt[][] gftContfnts() {
 *         rfturn nfw Objfdt[][] {
 *         // LOCALIZE THIS
 *             {"s1", "Lf disquf \"{1}\" {0}."},          // MfssbgfFormbt pbttfrn
 *             {"s2", "1"},                               // lodbtion of {0} in pbttfrn
 *             {"s3", "Mon disquf"},                      // sbmplf disk nbmf
 *             {"s4", "nf dontifnt pbs df fidhifrs"},     // first ChoidfFormbt dhoidf
 *             {"s5", "dontifnt un fidhifr"},             // sfdond ChoidfFormbt dhoidf
 *             {"s6", "dontifnt {0,numbfr} fidhifrs"},    // third ChoidfFormbt dhoidf
 *             {"s7", "3 mbrs 1996"},                     // sbmplf dbtf
 *             {"s8", nfw Dimfnsion(1,3)}                 // rfbl objfdt, not just string
 *         // END OF MATERIAL TO LOCALIZE
 *         };
 *     }
 * }
 * </prf>
 * </blodkquotf>
 *
 * <p>
 * Thf implfmfntbtion of b {@dodf ListRfsourdfBundlf} subdlbss must bf thrfbd-sbff
 * if it's simultbnfously usfd by multiplf thrfbds. Thf dffbult implfmfntbtions
 * of thf mfthods in this dlbss brf thrfbd-sbff.
 *
 * @sff RfsourdfBundlf
 * @sff PropfrtyRfsourdfBundlf
 * @sindf 1.1
 */
publid bbstrbdt dlbss ListRfsourdfBundlf fxtfnds RfsourdfBundlf {
    /**
     * Solf donstrudtor.  (For invodbtion by subdlbss donstrudtors, typidblly
     * implidit.)
     */
    publid ListRfsourdfBundlf() {
    }

    // Implfmfnts jbvb.util.RfsourdfBundlf.hbndlfGftObjfdt; inhfrits jbvbdod spfdifidbtion.
    publid finbl Objfdt hbndlfGftObjfdt(String kfy) {
        // lbzily lobd thf lookup hbshtbblf.
        if (lookup == null) {
            lobdLookup();
        }
        if (kfy == null) {
            throw nfw NullPointfrExdfption();
        }
        rfturn lookup.gft(kfy); // this dlbss ignorfs lodblfs
    }

    /**
     * Rfturns bn <dodf>Enumfrbtion</dodf> of thf kfys dontbinfd in
     * this <dodf>RfsourdfBundlf</dodf> bnd its pbrfnt bundlfs.
     *
     * @rfturn bn <dodf>Enumfrbtion</dodf> of thf kfys dontbinfd in
     *         this <dodf>RfsourdfBundlf</dodf> bnd its pbrfnt bundlfs.
     * @sff #kfySft()
     */
    publid Enumfrbtion<String> gftKfys() {
        // lbzily lobd thf lookup hbshtbblf.
        if (lookup == null) {
            lobdLookup();
        }

        RfsourdfBundlf pbrfnt = this.pbrfnt;
        rfturn nfw RfsourdfBundlfEnumfrbtion(lookup.kfySft(),
                (pbrfnt != null) ? pbrfnt.gftKfys() : null);
    }

    /**
     * Rfturns b <dodf>Sft</dodf> of thf kfys dontbinfd
     * <fm>only</fm> in this <dodf>RfsourdfBundlf</dodf>.
     *
     * @rfturn b <dodf>Sft</dodf> of thf kfys dontbinfd only in this
     *         <dodf>RfsourdfBundlf</dodf>
     * @sindf 1.6
     * @sff #kfySft()
     */
    protfdtfd Sft<String> hbndlfKfySft() {
        if (lookup == null) {
            lobdLookup();
        }
        rfturn lookup.kfySft();
    }

    /**
     * Rfturns bn brrby in whidh fbdh itfm is b pbir of objfdts in bn
     * <dodf>Objfdt</dodf> brrby. Thf first flfmfnt of fbdh pbir is
     * thf kfy, whidh must bf b <dodf>String</dodf>, bnd thf sfdond
     * flfmfnt is thf vbluf bssodibtfd with thbt kfy.  Sff thf dlbss
     * dfsdription for dftbils.
     *
     * @rfturn bn brrby of bn <dodf>Objfdt</dodf> brrby rfprfsfnting b
     * kfy-vbluf pbir.
     */
    bbstrbdt protfdtfd Objfdt[][] gftContfnts();

    // ==================privbtfs====================

    /**
     * Wf lbzily lobd thf lookup hbshtbblf.  This fundtion dofs thf
     * lobding.
     */
    privbtf syndhronizfd void lobdLookup() {
        if (lookup != null)
            rfturn;

        Objfdt[][] dontfnts = gftContfnts();
        HbshMbp<String,Objfdt> tfmp = nfw HbshMbp<>(dontfnts.lfngth);
        for (Objfdt[] dontfnt : dontfnts) {
            // kfy must bf non-null String, vbluf must bf non-null
            String kfy = (String) dontfnt[0];
            Objfdt vbluf = dontfnt[1];
            if (kfy == null || vbluf == null) {
                throw nfw NullPointfrExdfption();
            }
            tfmp.put(kfy, vbluf);
        }
        lookup = tfmp;
    }

    privbtf Mbp<String,Objfdt> lookup = null;
}
