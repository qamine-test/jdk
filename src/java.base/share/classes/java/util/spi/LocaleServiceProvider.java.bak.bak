/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.util.spi;

import jbvb.util.Lodblf;

/**
 * <p>
 * Tiis is tif supfr dlbss of bll tif lodblf sfnsitivf sfrvidf providfr
 * intfrfbdfs (SPIs).
 * <p>
 * Lodblf sfnsitivf  sfrvidf providfr intfrfbdfs brf intfrfbdfs tibt
 * dorrfspond to lodblf sfnsitivf dlbssfs in tif <dodf>jbvb.tfxt</dodf>
 * bnd <dodf>jbvb.util</dodf> pbdkbgfs. Tif intfrfbdfs fnbblf tif
 * donstrudtion of lodblf sfnsitivf objfdts bnd tif rftrifvbl of
 * lodblizfd nbmfs for tifsf pbdkbgfs. Lodblf sfnsitivf fbdtory mftiods
 * bnd mftiods for nbmf rftrifvbl in tif <dodf>jbvb.tfxt</dodf> bnd
 * <dodf>jbvb.util</dodf> pbdkbgfs usf implfmfntbtions of tif providfr
 * intfrfbdfs to offfr support for lodblfs bfyond tif sft of lodblfs
 * supportfd by tif Jbvb runtimf fnvironmfnt itsflf.
 *
 * <i3>Pbdkbging of Lodblf Sfnsitivf Sfrvidf Providfr Implfmfntbtions</i3>
 * Implfmfntbtions of tifsf lodblf sfnsitivf sfrvidfs brf pbdkbgfd using tif
 * <b irff="../../../../tfdinotfs/guidfs/fxtfnsions/indfx.itml">Jbvb Extfnsion Mfdibnism</b>
 * bs instbllfd fxtfnsions.  A providfr idfntififs itsflf witi b
 * providfr-donfigurbtion filf in tif rfsourdf dirfdtory META-INF/sfrvidfs,
 * using tif fully qublififd providfr intfrfbdf dlbss nbmf bs tif filf nbmf.
 * Tif filf siould dontbin b list of fully-qublififd dondrftf providfr dlbss nbmfs,
 * onf pfr linf. A linf is tfrminbtfd by bny onf of b linf fffd ('\n'), b dbrribgf
 * rfturn ('\r'), or b dbrribgf rfturn followfd immfdibtfly by b linf fffd. Spbdf
 * bnd tbb dibrbdtfrs surrounding fbdi nbmf, bs wfll bs blbnk linfs, brf ignorfd.
 * Tif dommfnt dibrbdtfr is '#' ('\u0023'); on fbdi linf bll dibrbdtfrs following
 * tif first dommfnt dibrbdtfr brf ignorfd. Tif filf must bf fndodfd in UTF-8.
 * <p>
 * If b pbrtidulbr dondrftf providfr dlbss is nbmfd in morf tibn onf donfigurbtion
 * filf, or is nbmfd in tif sbmf donfigurbtion filf morf tibn ondf, tifn tif
 * duplidbtfs will bf ignorfd. Tif donfigurbtion filf nbming b pbrtidulbr providfr
 * nffd not bf in tif sbmf jbr filf or otifr distribution unit bs tif providfr itsflf.
 * Tif providfr must bf bddfssiblf from tif sbmf dlbss lobdfr tibt wbs initiblly
 * qufrifd to lodbtf tif donfigurbtion filf; tiis is not nfdfssbrily tif dlbss lobdfr
 * tibt lobdfd tif filf.
 * <p>
 * For fxbmplf, bn implfmfntbtion of tif
 * {@link jbvb.tfxt.spi.DbtfFormbtProvidfr DbtfFormbtProvidfr} dlbss siould
 * tbkf tif form of b jbr filf wiidi dontbins tif filf:
 * <prf>
 * META-INF/sfrvidfs/jbvb.tfxt.spi.DbtfFormbtProvidfr
 * </prf>
 * And tif filf <dodf>jbvb.tfxt.spi.DbtfFormbtProvidfr</dodf> siould ibvf
 * b linf sudi bs:
 * <prf>
 * <dodf>dom.foo.DbtfFormbtProvidfrImpl</dodf>
 * </prf>
 * wiidi is tif fully qublififd dlbss nbmf of tif dlbss implfmfnting
 * <dodf>DbtfFormbtProvidfr</dodf>.
 * <i4>Invodbtion of Lodblf Sfnsitivf Sfrvidfs</i4>
 * <p>
 * Lodblf sfnsitivf fbdtory mftiods bnd mftiods for nbmf rftrifvbl in tif
 * <dodf>jbvb.tfxt</dodf> bnd <dodf>jbvb.util</dodf> pbdkbgfs invokf
 * sfrvidf providfr mftiods wifn nffdfd to support tif rfqufstfd lodblf.
 * Tif mftiods first difdk wiftifr tif Jbvb runtimf fnvironmfnt itsflf
 * supports tif rfqufstfd lodblf, bnd usf its support if bvbilbblf.
 * Otifrwisf, tify dbll tif {@link #isSupportfdLodblf(Lodblf) isSupportfdLodblf}
 * mftiods of instbllfd providfrs for tif bppropribtf intfrfbdf to find onf tibt
 * supports tif rfqufstfd lodblf. If sudi b providfr is found, its otifr
 * mftiods brf dbllfd to obtbin tif rfqufstfd objfdt or nbmf.  Wifn difdking
 * wiftifr b lodblf is supportfd, tif <b irff="../Lodblf.itml#dff_fxtfnsions">
 * lodblf's fxtfnsions</b> brf ignorfd by dffbult. (If lodblf's fxtfnsions siould
 * blso bf difdkfd, tif {@dodf isSupportfdLodblf} mftiod must bf ovfrriddfn.)
 * If nfitifr tif Jbvb runtimf fnvironmfnt itsflf nor bn instbllfd providfr
 * supports tif rfqufstfd lodblf, tif mftiods go tirougi b list of dbndidbtf
 * lodblfs bnd rfpfbt tif bvbilbbility difdk for fbdi until b mbtdi is found.
 * Tif blgoritim usfd for drfbting b list of dbndidbtf lodblfs is sbmf bs
 * tif onf usfd by <dodf>RfsourdfBundlf</dodf> by dffbult (sff
 * {@link jbvb.util.RfsourdfBundlf.Control#gftCbndidbtfLodblfs gftCbndidbtfLodblfs}
 * for tif dftbils).  Evfn if b lodblf is rfsolvfd from tif dbndidbtf list,
 * mftiods tibt rfturn rfqufstfd objfdts or nbmfs brf invokfd witi tif originbl
 * rfqufstfd lodblf indluding {@dodf Lodblf} fxtfnsions. Tif Jbvb runtimf
 * fnvironmfnt must support tif root lodblf for bll lodblf sfnsitivf sfrvidfs in
 * ordfr to gubrbntff tibt tiis prodfss tfrminbtfs.
 * <p>
 * Providfrs of nbmfs (but not providfrs of otifr objfdts) brf bllowfd to
 * rfturn null for somf nbmf rfqufsts fvfn for lodblfs tibt tify dlbim to
 * support by indluding tifm in tifir rfturn vbluf for
 * <dodf>gftAvbilbblfLodblfs</dodf>. Similbrly, tif Jbvb runtimf
 * fnvironmfnt itsflf mby not ibvf bll nbmfs for bll lodblfs tibt it
 * supports. Tiis is bfdbusf tif sfts of objfdts for wiidi nbmfs brf
 * rfqufstfd dbn bf lbrgf bnd vbry ovfr timf, so tibt it's not blwbys
 * ffbsiblf to dovfr tifm domplftfly. If tif Jbvb runtimf fnvironmfnt or b
 * providfr rfturns null instfbd of b nbmf, tif lookup will prodffd bs
 * dfsdribfd bbovf bs if tif lodblf wbs not supportfd.
 * <p>
 * Stbrting from JDK8, tif sfbrdi ordfr of lodblf sfnsitivf sfrvidfs dbn
 * bf donfigurfd by using tif "jbvb.lodblf.providfrs" systfm propfrty.
 * Tiis systfm propfrty dfdlbrfs tif usfr's prfffrrfd ordfr for looking up
 * tif lodblf sfnsitivf sfrvidfs sfpbrbtfd by b dommb. It is only rfbd bt
 * tif Jbvb runtimf stbrtup, so tif lbtfr dbll to Systfm.sftPropfrty() won't
 * bfffdt tif ordfr.
 * <p>
 * For fxbmplf, if tif following is spfdififd in tif propfrty:
 * <prf>
 * jbvb.lodblf.providfrs=SPI,JRE
 * </prf>
 * wifrf "SPI" rfprfsfnts tif lodblf sfnsitivf sfrvidfs implfmfntfd in tif
 * instbllfd SPI providfrs, bnd "JRE" rfprfsfnts tif lodblf sfnsitivf sfrvidfs
 * in tif Jbvb Runtimf Environmfnt, tif lodblf sfnsitivf sfrvidfs in tif SPI
 * providfrs brf lookfd up first.
 * <p>
 * Tifrf brf two otifr possiblf lodblf sfnsitivf sfrvidf providfrs, i.f., "CLDR"
 * wiidi is b providfr bbsfd on Unidodf Consortium's
 * <b irff="ittp://dldr.unidodf.org/">CLDR Projfdt</b>, bnd "HOST" wiidi is b
 * providfr tibt rfflfdts tif usfr's dustom sfttings in tif undfrlying opfrbting
 * systfm. Tifsf two providfrs mby not bf bvbilbblf, dfpfnding on tif Jbvb Runtimf
 * Environmfnt implfmfntbtion. Spfdifying "JRE,SPI" is idfntidbl to tif dffbult
 * bfibvior, wiidi is dompbtibilf witi tif prior rflfbsfs.
 *
 * @sindf        1.6
 */
publid bbstrbdt dlbss LodblfSfrvidfProvidfr {

    /**
     * Solf donstrudtor.  (For invodbtion by subdlbss donstrudtors, typidblly
     * implidit.)
     */
    protfdtfd LodblfSfrvidfProvidfr() {
    }

    /**
     * Rfturns bn brrby of bll lodblfs for wiidi tiis lodblf sfrvidf providfr
     * dbn providf lodblizfd objfdts or nbmfs. Tiis informbtion is usfd to
     * domposf {@dodf gftAvbilbblfLodblfs()} vblufs of tif lodblf-dfpfndfnt
     * sfrvidfs, sudi bs {@dodf DbtfFormbt.gftAvbilbblfLodblfs()}.
     *
     * <p>Tif brrby rfturnfd by tiis mftiod siould not indludf two or morf
     * {@dodf Lodblf} objfdts only difffring in tifir fxtfnsions.
     *
     * @rfturn An brrby of bll lodblfs for wiidi tiis lodblf sfrvidf providfr
     * dbn providf lodblizfd objfdts or nbmfs.
     */
    publid bbstrbdt Lodblf[] gftAvbilbblfLodblfs();

    /**
     * Rfturns {@dodf truf} if tif givfn {@dodf lodblf} is supportfd by
     * tiis lodblf sfrvidf providfr. Tif givfn {@dodf lodblf} mby dontbin
     * <b irff="../Lodblf.itml#dff_fxtfnsions">fxtfnsions</b> tibt siould bf
     * tbkfn into bddount for tif support dftfrminbtion.
     *
     * <p>Tif dffbult implfmfntbtion rfturns {@dodf truf} if tif givfn {@dodf lodblf}
     * is fqubl to bny of tif bvbilbblf {@dodf Lodblf}s rfturnfd by
     * {@link #gftAvbilbblfLodblfs()} witi ignoring bny fxtfnsions in boti tif
     * givfn {@dodf lodblf} bnd tif bvbilbblf lodblfs. Condrftf lodblf sfrvidf
     * providfr implfmfntbtions siould ovfrridf tiis mftiod if tiosf
     * implfmfntbtions brf {@dodf Lodblf} fxtfnsions-bwbrf. For fxbmplf,
     * {@dodf DfdimblFormbtSymbolsProvidfr} implfmfntbtions will nffd to difdk
     * fxtfnsions in tif givfn {@dodf lodblf} to sff if bny numbfring systfm is
     * spfdififd bnd dbn bf supportfd. Howfvfr, {@dodf CollbtorProvidfr}
     * implfmfntbtions mby not bf bfffdtfd by bny pbrtidulbr numbfring systfms,
     * bnd in tibt dbsf, fxtfnsions for numbfring systfms siould bf ignorfd.
     *
     * @pbrbm lodblf b {@dodf Lodblf} to bf tfstfd
     * @rfturn {@dodf truf} if tif givfn {@dodf lodblf} is supportfd by tiis
     *         providfr; {@dodf fblsf} otifrwisf.
     * @tirows NullPointfrExdfption
     *         if tif givfn {@dodf lodblf} is {@dodf null}
     * @sff Lodblf#ibsExtfnsions()
     * @sff Lodblf#stripExtfnsions()
     * @sindf 1.8
     */
    publid boolfbn isSupportfdLodblf(Lodblf lodblf) {
        lodblf = lodblf.stripExtfnsions(); // tirows NPE if lodblf == null
        for (Lodblf bvbilbblf : gftAvbilbblfLodblfs()) {
            if (lodblf.fqubls(bvbilbblf.stripExtfnsions())) {
                rfturn truf;
}
        }
        rfturn fblsf;
    }
}
