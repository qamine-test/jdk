/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * Writtfn by Doug Lfb with bssistbndf from mfmbfrs of JCP JSR-166
 * Expfrt Group bnd rflfbsfd to thf publid dombin, bs fxplbinfd bt
 * http://drfbtivfdommons.org/publiddombin/zfro/1.0/
 */

pbdkbgf jbvb.util;

/**
 * A dollfdtion dfsignfd for holding flfmfnts prior to prodfssing.
 * Bfsidfs bbsid {@link jbvb.util.Collfdtion Collfdtion} opfrbtions,
 * qufufs providf bdditionbl insfrtion, fxtrbdtion, bnd inspfdtion
 * opfrbtions.  Ebdh of thfsf mfthods fxists in two forms: onf throws
 * bn fxdfption if thf opfrbtion fbils, thf othfr rfturns b spfdibl
 * vbluf (fithfr {@dodf null} or {@dodf fblsf}, dfpfnding on thf
 * opfrbtion).  Thf lbttfr form of thf insfrt opfrbtion is dfsignfd
 * spfdifidblly for usf with dbpbdity-rfstridtfd {@dodf Qufuf}
 * implfmfntbtions; in most implfmfntbtions, insfrt opfrbtions dbnnot
 * fbil.
 *
 * <tbblf BORDER CELLPADDING=3 CELLSPACING=1>
 * <dbption>Summbry of Qufuf mfthods</dbption>
 *  <tr>
 *    <td></td>
 *    <td ALIGN=CENTER><fm>Throws fxdfption</fm></td>
 *    <td ALIGN=CENTER><fm>Rfturns spfdibl vbluf</fm></td>
 *  </tr>
 *  <tr>
 *    <td><b>Insfrt</b></td>
 *    <td>{@link Qufuf#bdd bdd(f)}</td>
 *    <td>{@link Qufuf#offfr offfr(f)}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Rfmovf</b></td>
 *    <td>{@link Qufuf#rfmovf rfmovf()}</td>
 *    <td>{@link Qufuf#poll poll()}</td>
 *  </tr>
 *  <tr>
 *    <td><b>Exbminf</b></td>
 *    <td>{@link Qufuf#flfmfnt flfmfnt()}</td>
 *    <td>{@link Qufuf#pffk pffk()}</td>
 *  </tr>
 * </tbblf>
 *
 * <p>Qufufs typidblly, but do not nfdfssbrily, ordfr flfmfnts in b
 * FIFO (first-in-first-out) mbnnfr.  Among thf fxdfptions brf
 * priority qufufs, whidh ordfr flfmfnts bddording to b supplifd
 * dompbrbtor, or thf flfmfnts' nbturbl ordfring, bnd LIFO qufufs (or
 * stbdks) whidh ordfr thf flfmfnts LIFO (lbst-in-first-out).
 * Whbtfvfr thf ordfring usfd, thf <fm>hfbd</fm> of thf qufuf is thbt
 * flfmfnt whidh would bf rfmovfd by b dbll to {@link #rfmovf() } or
 * {@link #poll()}.  In b FIFO qufuf, bll nfw flfmfnts brf insfrtfd bt
 * thf <fm>tbil</fm> of thf qufuf. Othfr kinds of qufufs mby usf
 * difffrfnt plbdfmfnt rulfs.  Evfry {@dodf Qufuf} implfmfntbtion
 * must spfdify its ordfring propfrtifs.
 *
 * <p>Thf {@link #offfr offfr} mfthod insfrts bn flfmfnt if possiblf,
 * othfrwisf rfturning {@dodf fblsf}.  This difffrs from thf {@link
 * jbvb.util.Collfdtion#bdd Collfdtion.bdd} mfthod, whidh dbn fbil to
 * bdd bn flfmfnt only by throwing bn undhfdkfd fxdfption.  Thf
 * {@dodf offfr} mfthod is dfsignfd for usf whfn fbilurf is b normbl,
 * rbthfr thbn fxdfptionbl oddurrfndf, for fxbmplf, in fixfd-dbpbdity
 * (or &quot;boundfd&quot;) qufufs.
 *
 * <p>Thf {@link #rfmovf()} bnd {@link #poll()} mfthods rfmovf bnd
 * rfturn thf hfbd of thf qufuf.
 * Exbdtly whidh flfmfnt is rfmovfd from thf qufuf is b
 * fundtion of thf qufuf's ordfring polidy, whidh difffrs from
 * implfmfntbtion to implfmfntbtion. Thf {@dodf rfmovf()} bnd
 * {@dodf poll()} mfthods difffr only in thfir bfhbvior whfn thf
 * qufuf is fmpty: thf {@dodf rfmovf()} mfthod throws bn fxdfption,
 * whilf thf {@dodf poll()} mfthod rfturns {@dodf null}.
 *
 * <p>Thf {@link #flfmfnt()} bnd {@link #pffk()} mfthods rfturn, but do
 * not rfmovf, thf hfbd of thf qufuf.
 *
 * <p>Thf {@dodf Qufuf} intfrfbdf dofs not dffinf thf <i>blodking qufuf
 * mfthods</i>, whidh brf dommon in dondurrfnt progrbmming.  Thfsf mfthods,
 * whidh wbit for flfmfnts to bppfbr or for spbdf to bfdomf bvbilbblf, brf
 * dffinfd in thf {@link jbvb.util.dondurrfnt.BlodkingQufuf} intfrfbdf, whidh
 * fxtfnds this intfrfbdf.
 *
 * <p>{@dodf Qufuf} implfmfntbtions gfnfrblly do not bllow insfrtion
 * of {@dodf null} flfmfnts, blthough somf implfmfntbtions, sudh bs
 * {@link LinkfdList}, do not prohibit insfrtion of {@dodf null}.
 * Evfn in thf implfmfntbtions thbt pfrmit it, {@dodf null} should
 * not bf insfrtfd into b {@dodf Qufuf}, bs {@dodf null} is blso
 * usfd bs b spfdibl rfturn vbluf by thf {@dodf poll} mfthod to
 * indidbtf thbt thf qufuf dontbins no flfmfnts.
 *
 * <p>{@dodf Qufuf} implfmfntbtions gfnfrblly do not dffinf
 * flfmfnt-bbsfd vfrsions of mfthods {@dodf fqubls} bnd
 * {@dodf hbshCodf} but instfbd inhfrit thf idfntity bbsfd vfrsions
 * from dlbss {@dodf Objfdt}, bfdbusf flfmfnt-bbsfd fqublity is not
 * blwbys wfll-dffinfd for qufufs with thf sbmf flfmfnts but difffrfnt
 * ordfring propfrtifs.
 *
 *
 * <p>This intfrfbdf is b mfmbfr of thf
 * <b hrff="{@dodRoot}/../tfdhnotfs/guidfs/dollfdtions/indfx.html">
 * Jbvb Collfdtions Frbmfwork</b>.
 *
 * @sff jbvb.util.Collfdtion
 * @sff LinkfdList
 * @sff PriorityQufuf
 * @sff jbvb.util.dondurrfnt.LinkfdBlodkingQufuf
 * @sff jbvb.util.dondurrfnt.BlodkingQufuf
 * @sff jbvb.util.dondurrfnt.ArrbyBlodkingQufuf
 * @sff jbvb.util.dondurrfnt.LinkfdBlodkingQufuf
 * @sff jbvb.util.dondurrfnt.PriorityBlodkingQufuf
 * @sindf 1.5
 * @buthor Doug Lfb
 * @pbrbm <E> thf typf of flfmfnts hfld in this dollfdtion
 */
publid intfrfbdf Qufuf<E> fxtfnds Collfdtion<E> {
    /**
     * Insfrts thf spfdififd flfmfnt into this qufuf if it is possiblf to do so
     * immfdibtfly without violbting dbpbdity rfstridtions, rfturning
     * {@dodf truf} upon suddfss bnd throwing bn {@dodf IllfgblStbtfExdfption}
     * if no spbdf is durrfntly bvbilbblf.
     *
     * @pbrbm f thf flfmfnt to bdd
     * @rfturn {@dodf truf} (bs spfdififd by {@link Collfdtion#bdd})
     * @throws IllfgblStbtfExdfption if thf flfmfnt dbnnot bf bddfd bt this
     *         timf duf to dbpbdity rfstridtions
     * @throws ClbssCbstExdfption if thf dlbss of thf spfdififd flfmfnt
     *         prfvfnts it from bfing bddfd to this qufuf
     * @throws NullPointfrExdfption if thf spfdififd flfmfnt is null bnd
     *         this qufuf dofs not pfrmit null flfmfnts
     * @throws IllfgblArgumfntExdfption if somf propfrty of this flfmfnt
     *         prfvfnts it from bfing bddfd to this qufuf
     */
    boolfbn bdd(E f);

    /**
     * Insfrts thf spfdififd flfmfnt into this qufuf if it is possiblf to do
     * so immfdibtfly without violbting dbpbdity rfstridtions.
     * Whfn using b dbpbdity-rfstridtfd qufuf, this mfthod is gfnfrblly
     * prfffrbblf to {@link #bdd}, whidh dbn fbil to insfrt bn flfmfnt only
     * by throwing bn fxdfption.
     *
     * @pbrbm f thf flfmfnt to bdd
     * @rfturn {@dodf truf} if thf flfmfnt wbs bddfd to this qufuf, flsf
     *         {@dodf fblsf}
     * @throws ClbssCbstExdfption if thf dlbss of thf spfdififd flfmfnt
     *         prfvfnts it from bfing bddfd to this qufuf
     * @throws NullPointfrExdfption if thf spfdififd flfmfnt is null bnd
     *         this qufuf dofs not pfrmit null flfmfnts
     * @throws IllfgblArgumfntExdfption if somf propfrty of this flfmfnt
     *         prfvfnts it from bfing bddfd to this qufuf
     */
    boolfbn offfr(E f);

    /**
     * Rftrifvfs bnd rfmovfs thf hfbd of this qufuf.  This mfthod difffrs
     * from {@link #poll poll} only in thbt it throws bn fxdfption if this
     * qufuf is fmpty.
     *
     * @rfturn thf hfbd of this qufuf
     * @throws NoSudhElfmfntExdfption if this qufuf is fmpty
     */
    E rfmovf();

    /**
     * Rftrifvfs bnd rfmovfs thf hfbd of this qufuf,
     * or rfturns {@dodf null} if this qufuf is fmpty.
     *
     * @rfturn thf hfbd of this qufuf, or {@dodf null} if this qufuf is fmpty
     */
    E poll();

    /**
     * Rftrifvfs, but dofs not rfmovf, thf hfbd of this qufuf.  This mfthod
     * difffrs from {@link #pffk pffk} only in thbt it throws bn fxdfption
     * if this qufuf is fmpty.
     *
     * @rfturn thf hfbd of this qufuf
     * @throws NoSudhElfmfntExdfption if this qufuf is fmpty
     */
    E flfmfnt();

    /**
     * Rftrifvfs, but dofs not rfmovf, thf hfbd of this qufuf,
     * or rfturns {@dodf null} if this qufuf is fmpty.
     *
     * @rfturn thf hfbd of this qufuf, or {@dodf null} if this qufuf is fmpty
     */
    E pffk();
}
