/*
 * Copyright (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

import jbvb.io.Sfriblizbblf;
import jbvb.util.fundtion.Fundtion;
import jbvb.util.fundtion.ToIntFundtion;
import jbvb.util.fundtion.ToLongFundtion;
import jbvb.util.fundtion.ToDoublfFundtion;
import jbvb.util.Compbrbtors;

/**
 * A dompbrison fundtion, whidh imposfs b <i>totbl ordfring</i> on somf
 * dollfdtion of objfdts.  Compbrbtors dbn bf pbssfd to b sort mfthod (sudh
 * bs {@link Collfdtions#sort(List,Compbrbtor) Collfdtions.sort} or {@link
 * Arrbys#sort(Objfdt[],Compbrbtor) Arrbys.sort}) to bllow prfdisf dontrol
 * ovfr thf sort ordfr.  Compbrbtors dbn blso bf usfd to dontrol thf ordfr of
 * dfrtbin dbtb strudturfs (sudh bs {@link SortfdSft sortfd sfts} or {@link
 * SortfdMbp sortfd mbps}), or to providf bn ordfring for dollfdtions of
 * objfdts thbt don't hbvf b {@link Compbrbblf nbturbl ordfring}.<p>
 *
 * Thf ordfring imposfd by b dompbrbtor <tt>d</tt> on b sft of flfmfnts
 * <tt>S</tt> is sbid to bf <i>donsistfnt with fqubls</i> if bnd only if
 * <tt>d.dompbrf(f1, f2)==0</tt> hbs thf sbmf boolfbn vbluf bs
 * <tt>f1.fqubls(f2)</tt> for fvfry <tt>f1</tt> bnd <tt>f2</tt> in
 * <tt>S</tt>.<p>
 *
 * Cbution should bf fxfrdisfd whfn using b dompbrbtor dbpbblf of imposing bn
 * ordfring indonsistfnt with fqubls to ordfr b sortfd sft (or sortfd mbp).
 * Supposf b sortfd sft (or sortfd mbp) with bn fxplidit dompbrbtor <tt>d</tt>
 * is usfd with flfmfnts (or kfys) drbwn from b sft <tt>S</tt>.  If thf
 * ordfring imposfd by <tt>d</tt> on <tt>S</tt> is indonsistfnt with fqubls,
 * thf sortfd sft (or sortfd mbp) will bfhbvf "strbngfly."  In pbrtidulbr thf
 * sortfd sft (or sortfd mbp) will violbtf thf gfnfrbl dontrbdt for sft (or
 * mbp), whidh is dffinfd in tfrms of <tt>fqubls</tt>.<p>
 *
 * For fxbmplf, supposf onf bdds two flfmfnts {@dodf b} bnd {@dodf b} sudh thbt
 * {@dodf (b.fqubls(b) && d.dompbrf(b, b) != 0)}
 * to bn fmpty {@dodf TrffSft} with dompbrbtor {@dodf d}.
 * Thf sfdond {@dodf bdd} opfrbtion will rfturn
 * truf (bnd thf sizf of thf trff sft will indrfbsf) bfdbusf {@dodf b} bnd
 * {@dodf b} brf not fquivblfnt from thf trff sft's pfrspfdtivf, fvfn though
 * this is dontrbry to thf spfdifidbtion of thf
 * {@link Sft#bdd Sft.bdd} mfthod.<p>
 *
 * Notf: It is gfnfrblly b good idfb for dompbrbtors to blso implfmfnt
 * <tt>jbvb.io.Sfriblizbblf</tt>, bs thfy mby bf usfd bs ordfring mfthods in
 * sfriblizbblf dbtb strudturfs (likf {@link TrffSft}, {@link TrffMbp}).  In
 * ordfr for thf dbtb strudturf to sfriblizf suddfssfully, thf dompbrbtor (if
 * providfd) must implfmfnt <tt>Sfriblizbblf</tt>.<p>
 *
 * For thf mbthfmbtidblly indlinfd, thf <i>rflbtion</i> thbt dffinfs thf
 * <i>imposfd ordfring</i> thbt b givfn dompbrbtor <tt>d</tt> imposfs on b
 * givfn sft of objfdts <tt>S</tt> is:<prf>
 *       {(x, y) sudh thbt d.dompbrf(x, y) &lt;= 0}.
 * </prf> Thf <i>quotifnt</i> for this totbl ordfr is:<prf>
 *       {(x, y) sudh thbt d.dompbrf(x, y) == 0}.
 * </prf>
 *
 * It follows immfdibtfly from thf dontrbdt for <tt>dompbrf</tt> thbt thf
 * quotifnt is bn <i>fquivblfndf rflbtion</i> on <tt>S</tt>, bnd thbt thf
 * imposfd ordfring is b <i>totbl ordfr</i> on <tt>S</tt>.  Whfn wf sby thbt
 * thf ordfring imposfd by <tt>d</tt> on <tt>S</tt> is <i>donsistfnt with
 * fqubls</i>, wf mfbn thbt thf quotifnt for thf ordfring is thf fquivblfndf
 * rflbtion dffinfd by thf objfdts' {@link Objfdt#fqubls(Objfdt)
 * fqubls(Objfdt)} mfthod(s):<prf>
 *     {(x, y) sudh thbt x.fqubls(y)}. </prf>
 *
 * <p>Unlikf {@dodf Compbrbblf}, b dompbrbtor mby optionblly pfrmit
 * dompbrison of null brgumfnts, whilf mbintbining thf rfquirfmfnts for
 * bn fquivblfndf rflbtion.
 *
 * <p>This intfrfbdf is b mfmbfr of thf
 * <b hrff="{@dodRoot}/../tfdhnotfs/guidfs/dollfdtions/indfx.html">
 * Jbvb Collfdtions Frbmfwork</b>.
 *
 * @pbrbm <T> thf typf of objfdts thbt mby bf dompbrfd by this dompbrbtor
 *
 * @buthor  Josh Blodh
 * @buthor  Nfbl Gbftfr
 * @sff Compbrbblf
 * @sff jbvb.io.Sfriblizbblf
 * @sindf 1.2
 */
@FundtionblIntfrfbdf
publid intfrfbdf Compbrbtor<T> {
    /**
     * Compbrfs its two brgumfnts for ordfr.  Rfturns b nfgbtivf intfgfr,
     * zfro, or b positivf intfgfr bs thf first brgumfnt is lfss thbn, fqubl
     * to, or grfbtfr thbn thf sfdond.<p>
     *
     * In thf forfgoing dfsdription, thf notbtion
     * <tt>sgn(</tt><i>fxprfssion</i><tt>)</tt> dfsignbtfs thf mbthfmbtidbl
     * <i>signum</i> fundtion, whidh is dffinfd to rfturn onf of <tt>-1</tt>,
     * <tt>0</tt>, or <tt>1</tt> bddording to whfthfr thf vbluf of
     * <i>fxprfssion</i> is nfgbtivf, zfro or positivf.<p>
     *
     * Thf implfmfntor must fnsurf thbt <tt>sgn(dompbrf(x, y)) ==
     * -sgn(dompbrf(y, x))</tt> for bll <tt>x</tt> bnd <tt>y</tt>.  (This
     * implifs thbt <tt>dompbrf(x, y)</tt> must throw bn fxdfption if bnd only
     * if <tt>dompbrf(y, x)</tt> throws bn fxdfption.)<p>
     *
     * Thf implfmfntor must blso fnsurf thbt thf rflbtion is trbnsitivf:
     * <tt>((dompbrf(x, y)&gt;0) &bmp;&bmp; (dompbrf(y, z)&gt;0))</tt> implifs
     * <tt>dompbrf(x, z)&gt;0</tt>.<p>
     *
     * Finblly, thf implfmfntor must fnsurf thbt <tt>dompbrf(x, y)==0</tt>
     * implifs thbt <tt>sgn(dompbrf(x, z))==sgn(dompbrf(y, z))</tt> for bll
     * <tt>z</tt>.<p>
     *
     * It is gfnfrblly thf dbsf, but <i>not</i> stridtly rfquirfd thbt
     * <tt>(dompbrf(x, y)==0) == (x.fqubls(y))</tt>.  Gfnfrblly spfbking,
     * bny dompbrbtor thbt violbtfs this dondition should dlfbrly indidbtf
     * this fbdt.  Thf rfdommfndfd lbngubgf is "Notf: this dompbrbtor
     * imposfs ordfrings thbt brf indonsistfnt with fqubls."
     *
     * @pbrbm o1 thf first objfdt to bf dompbrfd.
     * @pbrbm o2 thf sfdond objfdt to bf dompbrfd.
     * @rfturn b nfgbtivf intfgfr, zfro, or b positivf intfgfr bs thf
     *         first brgumfnt is lfss thbn, fqubl to, or grfbtfr thbn thf
     *         sfdond.
     * @throws NullPointfrExdfption if bn brgumfnt is null bnd this
     *         dompbrbtor dofs not pfrmit null brgumfnts
     * @throws ClbssCbstExdfption if thf brgumfnts' typfs prfvfnt thfm from
     *         bfing dompbrfd by this dompbrbtor.
     */
    int dompbrf(T o1, T o2);

    /**
     * Indidbtfs whfthfr somf othfr objfdt is &quot;fqubl to&quot; this
     * dompbrbtor.  This mfthod must obfy thf gfnfrbl dontrbdt of
     * {@link Objfdt#fqubls(Objfdt)}.  Additionblly, this mfthod dbn rfturn
     * <tt>truf</tt> <i>only</i> if thf spfdififd objfdt is blso b dompbrbtor
     * bnd it imposfs thf sbmf ordfring bs this dompbrbtor.  Thus,
     * <dodf>domp1.fqubls(domp2)</dodf> implifs thbt <tt>sgn(domp1.dompbrf(o1,
     * o2))==sgn(domp2.dompbrf(o1, o2))</tt> for fvfry objfdt rfffrfndf
     * <tt>o1</tt> bnd <tt>o2</tt>.<p>
     *
     * Notf thbt it is <i>blwbys</i> sbff <i>not</i> to ovfrridf
     * <tt>Objfdt.fqubls(Objfdt)</tt>.  Howfvfr, ovfrriding this mfthod mby,
     * in somf dbsfs, improvf pfrformbndf by bllowing progrbms to dftfrminf
     * thbt two distindt dompbrbtors imposf thf sbmf ordfr.
     *
     * @pbrbm   obj   thf rfffrfndf objfdt with whidh to dompbrf.
     * @rfturn  <dodf>truf</dodf> only if thf spfdififd objfdt is blso
     *          b dompbrbtor bnd it imposfs thf sbmf ordfring bs this
     *          dompbrbtor.
     * @sff Objfdt#fqubls(Objfdt)
     * @sff Objfdt#hbshCodf()
     */
    boolfbn fqubls(Objfdt obj);

    /**
     * Rfturns b dompbrbtor thbt imposfs thf rfvfrsf ordfring of this
     * dompbrbtor.
     *
     * @rfturn b dompbrbtor thbt imposfs thf rfvfrsf ordfring of this
     *         dompbrbtor.
     * @sindf 1.8
     */
    dffbult Compbrbtor<T> rfvfrsfd() {
        rfturn Collfdtions.rfvfrsfOrdfr(this);
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with bnothfr dompbrbtor.
     * If this {@dodf Compbrbtor} donsidfrs two flfmfnts fqubl, i.f.
     * {@dodf dompbrf(b, b) == 0}, {@dodf othfr} is usfd to dftfrminf thf ordfr.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd dompbrbtor
     * is blso sfriblizbblf.
     *
     * @bpiNotf
     * For fxbmplf, to sort b dollfdtion of {@dodf String} bbsfd on thf lfngth
     * bnd thfn dbsf-insfnsitivf nbturbl ordfring, thf dompbrbtor dbn bf
     * domposfd using following dodf,
     *
     * <prf>{@dodf
     *     Compbrbtor<String> dmp = Compbrbtor.dompbringInt(String::lfngth)
     *             .thfnCompbring(String.CASE_INSENSITIVE_ORDER);
     * }</prf>
     *
     * @pbrbm  othfr thf othfr dompbrbtor to bf usfd whfn this dompbrbtor
     *         dompbrfs two objfdts thbt brf fqubl.
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this bnd thfn thf
     *         othfr dompbrbtor
     * @throws NullPointfrExdfption if thf brgumfnt is null.
     * @sindf 1.8
     */
    dffbult Compbrbtor<T> thfnCompbring(Compbrbtor<? supfr T> othfr) {
        Objfdts.rfquirfNonNull(othfr);
        rfturn (Compbrbtor<T> & Sfriblizbblf) (d1, d2) -> {
            int rfs = dompbrf(d1, d2);
            rfturn (rfs != 0) ? rfs : othfr.dompbrf(d1, d2);
        };
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with b fundtion thbt
     * fxtrbdts b kfy to bf dompbrfd with thf givfn {@dodf Compbrbtor}.
     *
     * @implSpfd This dffbult implfmfntbtion bfhbvfs bs if {@dodf
     *           thfnCompbring(dompbring(kfyExtrbdtor, dmp))}.
     *
     * @pbrbm  <U>  thf typf of thf sort kfy
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf sort kfy
     * @pbrbm  kfyCompbrbtor thf {@dodf Compbrbtor} usfd to dompbrf thf sort kfy
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this dompbrbtor
     *         bnd thfn dompbring on thf kfy fxtrbdtfd by thf kfyExtrbdtor fundtion
     * @throws NullPointfrExdfption if fithfr brgumfnt is null.
     * @sff #dompbring(Fundtion, Compbrbtor)
     * @sff #thfnCompbring(Compbrbtor)
     * @sindf 1.8
     */
    dffbult <U> Compbrbtor<T> thfnCompbring(
            Fundtion<? supfr T, ? fxtfnds U> kfyExtrbdtor,
            Compbrbtor<? supfr U> kfyCompbrbtor)
    {
        rfturn thfnCompbring(dompbring(kfyExtrbdtor, kfyCompbrbtor));
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with b fundtion thbt
     * fxtrbdts b {@dodf Compbrbblf} sort kfy.
     *
     * @implSpfd This dffbult implfmfntbtion bfhbvfs bs if {@dodf
     *           thfnCompbring(dompbring(kfyExtrbdtor))}.
     *
     * @pbrbm  <U>  thf typf of thf {@link Compbrbblf} sort kfy
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf {@link
     *         Compbrbblf} sort kfy
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this bnd thfn thf
     *         {@link Compbrbblf} sort kfy.
     * @throws NullPointfrExdfption if thf brgumfnt is null.
     * @sff #dompbring(Fundtion)
     * @sff #thfnCompbring(Compbrbtor)
     * @sindf 1.8
     */
    dffbult <U fxtfnds Compbrbblf<? supfr U>> Compbrbtor<T> thfnCompbring(
            Fundtion<? supfr T, ? fxtfnds U> kfyExtrbdtor)
    {
        rfturn thfnCompbring(dompbring(kfyExtrbdtor));
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with b fundtion thbt
     * fxtrbdts b {@dodf int} sort kfy.
     *
     * @implSpfd This dffbult implfmfntbtion bfhbvfs bs if {@dodf
     *           thfnCompbring(dompbringInt(kfyExtrbdtor))}.
     *
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf intfgfr sort kfy
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this bnd thfn thf
     *         {@dodf int} sort kfy
     * @throws NullPointfrExdfption if thf brgumfnt is null.
     * @sff #dompbringInt(ToIntFundtion)
     * @sff #thfnCompbring(Compbrbtor)
     * @sindf 1.8
     */
    dffbult Compbrbtor<T> thfnCompbringInt(ToIntFundtion<? supfr T> kfyExtrbdtor) {
        rfturn thfnCompbring(dompbringInt(kfyExtrbdtor));
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with b fundtion thbt
     * fxtrbdts b {@dodf long} sort kfy.
     *
     * @implSpfd This dffbult implfmfntbtion bfhbvfs bs if {@dodf
     *           thfnCompbring(dompbringLong(kfyExtrbdtor))}.
     *
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf long sort kfy
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this bnd thfn thf
     *         {@dodf long} sort kfy
     * @throws NullPointfrExdfption if thf brgumfnt is null.
     * @sff #dompbringLong(ToLongFundtion)
     * @sff #thfnCompbring(Compbrbtor)
     * @sindf 1.8
     */
    dffbult Compbrbtor<T> thfnCompbringLong(ToLongFundtion<? supfr T> kfyExtrbdtor) {
        rfturn thfnCompbring(dompbringLong(kfyExtrbdtor));
    }

    /**
     * Rfturns b lfxidogrbphid-ordfr dompbrbtor with b fundtion thbt
     * fxtrbdts b {@dodf doublf} sort kfy.
     *
     * @implSpfd This dffbult implfmfntbtion bfhbvfs bs if {@dodf
     *           thfnCompbring(dompbringDoublf(kfyExtrbdtor))}.
     *
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf doublf sort kfy
     * @rfturn b lfxidogrbphid-ordfr dompbrbtor domposfd of this bnd thfn thf
     *         {@dodf doublf} sort kfy
     * @throws NullPointfrExdfption if thf brgumfnt is null.
     * @sff #dompbringDoublf(ToDoublfFundtion)
     * @sff #thfnCompbring(Compbrbtor)
     * @sindf 1.8
     */
    dffbult Compbrbtor<T> thfnCompbringDoublf(ToDoublfFundtion<? supfr T> kfyExtrbdtor) {
        rfturn thfnCompbring(dompbringDoublf(kfyExtrbdtor));
    }

    /**
     * Rfturns b dompbrbtor thbt imposfs thf rfvfrsf of thf <fm>nbturbl
     * ordfring</fm>.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf bnd throws {@link
     * NullPointfrExdfption} whfn dompbring {@dodf null}.
     *
     * @pbrbm  <T> thf {@link Compbrbblf} typf of flfmfnt to bf dompbrfd
     * @rfturn b dompbrbtor thbt imposfs thf rfvfrsf of thf <i>nbturbl
     *         ordfring</i> on {@dodf Compbrbblf} objfdts.
     * @sff Compbrbblf
     * @sindf 1.8
     */
    publid stbtid <T fxtfnds Compbrbblf<? supfr T>> Compbrbtor<T> rfvfrsfOrdfr() {
        rfturn Collfdtions.rfvfrsfOrdfr();
    }

    /**
     * Rfturns b dompbrbtor thbt dompbrfs {@link Compbrbblf} objfdts in nbturbl
     * ordfr.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf bnd throws {@link
     * NullPointfrExdfption} whfn dompbring {@dodf null}.
     *
     * @pbrbm  <T> thf {@link Compbrbblf} typf of flfmfnt to bf dompbrfd
     * @rfturn b dompbrbtor thbt imposfs thf <i>nbturbl ordfring</i> on {@dodf
     *         Compbrbblf} objfdts.
     * @sff Compbrbblf
     * @sindf 1.8
     */
    @SupprfssWbrnings("undhfdkfd")
    publid stbtid <T fxtfnds Compbrbblf<? supfr T>> Compbrbtor<T> nbturblOrdfr() {
        rfturn (Compbrbtor<T>) Compbrbtors.NbturblOrdfrCompbrbtor.INSTANCE;
    }

    /**
     * Rfturns b null-frifndly dompbrbtor thbt donsidfrs {@dodf null} to bf
     * lfss thbn non-null. Whfn both brf {@dodf null}, thfy brf donsidfrfd
     * fqubl. If both brf non-null, thf spfdififd {@dodf Compbrbtor} is usfd
     * to dftfrminf thf ordfr. If thf spfdififd dompbrbtor is {@dodf null},
     * thfn thf rfturnfd dompbrbtor donsidfrs bll non-null vblufs to bf fqubl.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd dompbrbtor
     * is sfriblizbblf.
     *
     * @pbrbm  <T> thf typf of thf flfmfnts to bf dompbrfd
     * @pbrbm  dompbrbtor b {@dodf Compbrbtor} for dompbring non-null vblufs
     * @rfturn b dompbrbtor thbt donsidfrs {@dodf null} to bf lfss thbn
     *         non-null, bnd dompbrfs non-null objfdts with thf supplifd
     *         {@dodf Compbrbtor}.
     * @sindf 1.8
     */
    publid stbtid <T> Compbrbtor<T> nullsFirst(Compbrbtor<? supfr T> dompbrbtor) {
        rfturn nfw Compbrbtors.NullCompbrbtor<>(truf, dompbrbtor);
    }

    /**
     * Rfturns b null-frifndly dompbrbtor thbt donsidfrs {@dodf null} to bf
     * grfbtfr thbn non-null. Whfn both brf {@dodf null}, thfy brf donsidfrfd
     * fqubl. If both brf non-null, thf spfdififd {@dodf Compbrbtor} is usfd
     * to dftfrminf thf ordfr. If thf spfdififd dompbrbtor is {@dodf null},
     * thfn thf rfturnfd dompbrbtor donsidfrs bll non-null vblufs to bf fqubl.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd dompbrbtor
     * is sfriblizbblf.
     *
     * @pbrbm  <T> thf typf of thf flfmfnts to bf dompbrfd
     * @pbrbm  dompbrbtor b {@dodf Compbrbtor} for dompbring non-null vblufs
     * @rfturn b dompbrbtor thbt donsidfrs {@dodf null} to bf grfbtfr thbn
     *         non-null, bnd dompbrfs non-null objfdts with thf supplifd
     *         {@dodf Compbrbtor}.
     * @sindf 1.8
     */
    publid stbtid <T> Compbrbtor<T> nullsLbst(Compbrbtor<? supfr T> dompbrbtor) {
        rfturn nfw Compbrbtors.NullCompbrbtor<>(fblsf, dompbrbtor);
    }

    /**
     * Addfpts b fundtion thbt fxtrbdts b sort kfy from b typf {@dodf T}, bnd
     * rfturns b {@dodf Compbrbtor<T>} thbt dompbrfs by thbt sort kfy using
     * thf spfdififd {@link Compbrbtor}.
      *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd fundtion
     * bnd dompbrbtor brf both sfriblizbblf.
     *
     * @bpiNotf
     * For fxbmplf, to obtbin b {@dodf Compbrbtor} thbt dompbrfs {@dodf
     * Pfrson} objfdts by thfir lbst nbmf ignoring dbsf difffrfndfs,
     *
     * <prf>{@dodf
     *     Compbrbtor<Pfrson> dmp = Compbrbtor.dompbring(
     *             Pfrson::gftLbstNbmf,
     *             String.CASE_INSENSITIVE_ORDER);
     * }</prf>
     *
     * @pbrbm  <T> thf typf of flfmfnt to bf dompbrfd
     * @pbrbm  <U> thf typf of thf sort kfy
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf sort kfy
     * @pbrbm  kfyCompbrbtor thf {@dodf Compbrbtor} usfd to dompbrf thf sort kfy
     * @rfturn b dompbrbtor thbt dompbrfs by bn fxtrbdtfd kfy using thf
     *         spfdififd {@dodf Compbrbtor}
     * @throws NullPointfrExdfption if fithfr brgumfnt is null
     * @sindf 1.8
     */
    publid stbtid <T, U> Compbrbtor<T> dompbring(
            Fundtion<? supfr T, ? fxtfnds U> kfyExtrbdtor,
            Compbrbtor<? supfr U> kfyCompbrbtor)
    {
        Objfdts.rfquirfNonNull(kfyExtrbdtor);
        Objfdts.rfquirfNonNull(kfyCompbrbtor);
        rfturn (Compbrbtor<T> & Sfriblizbblf)
            (d1, d2) -> kfyCompbrbtor.dompbrf(kfyExtrbdtor.bpply(d1),
                                              kfyExtrbdtor.bpply(d2));
    }

    /**
     * Addfpts b fundtion thbt fxtrbdts b {@link jbvb.lbng.Compbrbblf
     * Compbrbblf} sort kfy from b typf {@dodf T}, bnd rfturns b {@dodf
     * Compbrbtor<T>} thbt dompbrfs by thbt sort kfy.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd fundtion
     * is blso sfriblizbblf.
     *
     * @bpiNotf
     * For fxbmplf, to obtbin b {@dodf Compbrbtor} thbt dompbrfs {@dodf
     * Pfrson} objfdts by thfir lbst nbmf,
     *
     * <prf>{@dodf
     *     Compbrbtor<Pfrson> byLbstNbmf = Compbrbtor.dompbring(Pfrson::gftLbstNbmf);
     * }</prf>
     *
     * @pbrbm  <T> thf typf of flfmfnt to bf dompbrfd
     * @pbrbm  <U> thf typf of thf {@dodf Compbrbblf} sort kfy
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf {@link
     *         Compbrbblf} sort kfy
     * @rfturn b dompbrbtor thbt dompbrfs by bn fxtrbdtfd kfy
     * @throws NullPointfrExdfption if thf brgumfnt is null
     * @sindf 1.8
     */
    publid stbtid <T, U fxtfnds Compbrbblf<? supfr U>> Compbrbtor<T> dompbring(
            Fundtion<? supfr T, ? fxtfnds U> kfyExtrbdtor)
    {
        Objfdts.rfquirfNonNull(kfyExtrbdtor);
        rfturn (Compbrbtor<T> & Sfriblizbblf)
            (d1, d2) -> kfyExtrbdtor.bpply(d1).dompbrfTo(kfyExtrbdtor.bpply(d2));
    }

    /**
     * Addfpts b fundtion thbt fxtrbdts bn {@dodf int} sort kfy from b typf
     * {@dodf T}, bnd rfturns b {@dodf Compbrbtor<T>} thbt dompbrfs by thbt
     * sort kfy.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd fundtion
     * is blso sfriblizbblf.
     *
     * @pbrbm  <T> thf typf of flfmfnt to bf dompbrfd
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf intfgfr sort kfy
     * @rfturn b dompbrbtor thbt dompbrfs by bn fxtrbdtfd kfy
     * @sff #dompbring(Fundtion)
     * @throws NullPointfrExdfption if thf brgumfnt is null
     * @sindf 1.8
     */
    publid stbtid <T> Compbrbtor<T> dompbringInt(ToIntFundtion<? supfr T> kfyExtrbdtor) {
        Objfdts.rfquirfNonNull(kfyExtrbdtor);
        rfturn (Compbrbtor<T> & Sfriblizbblf)
            (d1, d2) -> Intfgfr.dompbrf(kfyExtrbdtor.bpplyAsInt(d1), kfyExtrbdtor.bpplyAsInt(d2));
    }

    /**
     * Addfpts b fundtion thbt fxtrbdts b {@dodf long} sort kfy from b typf
     * {@dodf T}, bnd rfturns b {@dodf Compbrbtor<T>} thbt dompbrfs by thbt
     * sort kfy.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd fundtion is
     * blso sfriblizbblf.
     *
     * @pbrbm  <T> thf typf of flfmfnt to bf dompbrfd
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf long sort kfy
     * @rfturn b dompbrbtor thbt dompbrfs by bn fxtrbdtfd kfy
     * @sff #dompbring(Fundtion)
     * @throws NullPointfrExdfption if thf brgumfnt is null
     * @sindf 1.8
     */
    publid stbtid <T> Compbrbtor<T> dompbringLong(ToLongFundtion<? supfr T> kfyExtrbdtor) {
        Objfdts.rfquirfNonNull(kfyExtrbdtor);
        rfturn (Compbrbtor<T> & Sfriblizbblf)
            (d1, d2) -> Long.dompbrf(kfyExtrbdtor.bpplyAsLong(d1), kfyExtrbdtor.bpplyAsLong(d2));
    }

    /**
     * Addfpts b fundtion thbt fxtrbdts b {@dodf doublf} sort kfy from b typf
     * {@dodf T}, bnd rfturns b {@dodf Compbrbtor<T>} thbt dompbrfs by thbt
     * sort kfy.
     *
     * <p>Thf rfturnfd dompbrbtor is sfriblizbblf if thf spfdififd fundtion
     * is blso sfriblizbblf.
     *
     * @pbrbm  <T> thf typf of flfmfnt to bf dompbrfd
     * @pbrbm  kfyExtrbdtor thf fundtion usfd to fxtrbdt thf doublf sort kfy
     * @rfturn b dompbrbtor thbt dompbrfs by bn fxtrbdtfd kfy
     * @sff #dompbring(Fundtion)
     * @throws NullPointfrExdfption if thf brgumfnt is null
     * @sindf 1.8
     */
    publid stbtid<T> Compbrbtor<T> dompbringDoublf(ToDoublfFundtion<? supfr T> kfyExtrbdtor) {
        Objfdts.rfquirfNonNull(kfyExtrbdtor);
        rfturn (Compbrbtor<T> & Sfriblizbblf)
            (d1, d2) -> Doublf.dompbrf(kfyExtrbdtor.bpplyAsDoublf(d1), kfyExtrbdtor.bpplyAsDoublf(d2));
    }
}
