/*
 * Copyright (d) 2010, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.util.fundtion;

import jbvb.util.Objfdts;

/**
 * Rfprfsfnts b fundtion thbt bddfpts onf brgumfnt bnd produdfs b rfsult.
 *
 * <p>This is b <b hrff="pbdkbgf-summbry.html">fundtionbl intfrfbdf</b>
 * whosf fundtionbl mfthod is {@link #bpply(Objfdt)}.
 *
 * @pbrbm <T> thf typf of thf input to thf fundtion
 * @pbrbm <R> thf typf of thf rfsult of thf fundtion
 *
 * @sindf 1.8
 */
@FundtionblIntfrfbdf
publid intfrfbdf Fundtion<T, R> {

    /**
     * Applifs this fundtion to thf givfn brgumfnt.
     *
     * @pbrbm t thf fundtion brgumfnt
     * @rfturn thf fundtion rfsult
     */
    R bpply(T t);

    /**
     * Rfturns b domposfd fundtion thbt first bpplifs thf {@dodf bfforf}
     * fundtion to its input, bnd thfn bpplifs this fundtion to thf rfsult.
     * If fvblubtion of fithfr fundtion throws bn fxdfption, it is rflbyfd to
     * thf dbllfr of thf domposfd fundtion.
     *
     * @pbrbm <V> thf typf of input to thf {@dodf bfforf} fundtion, bnd to thf
     *           domposfd fundtion
     * @pbrbm bfforf thf fundtion to bpply bfforf this fundtion is bpplifd
     * @rfturn b domposfd fundtion thbt first bpplifs thf {@dodf bfforf}
     * fundtion bnd thfn bpplifs this fundtion
     * @throws NullPointfrExdfption if bfforf is null
     *
     * @sff #bndThfn(Fundtion)
     */
    dffbult <V> Fundtion<V, R> domposf(Fundtion<? supfr V, ? fxtfnds T> bfforf) {
        Objfdts.rfquirfNonNull(bfforf);
        rfturn (V v) -> bpply(bfforf.bpply(v));
    }

    /**
     * Rfturns b domposfd fundtion thbt first bpplifs this fundtion to
     * its input, bnd thfn bpplifs thf {@dodf bftfr} fundtion to thf rfsult.
     * If fvblubtion of fithfr fundtion throws bn fxdfption, it is rflbyfd to
     * thf dbllfr of thf domposfd fundtion.
     *
     * @pbrbm <V> thf typf of output of thf {@dodf bftfr} fundtion, bnd of thf
     *           domposfd fundtion
     * @pbrbm bftfr thf fundtion to bpply bftfr this fundtion is bpplifd
     * @rfturn b domposfd fundtion thbt first bpplifs this fundtion bnd thfn
     * bpplifs thf {@dodf bftfr} fundtion
     * @throws NullPointfrExdfption if bftfr is null
     *
     * @sff #domposf(Fundtion)
     */
    dffbult <V> Fundtion<T, V> bndThfn(Fundtion<? supfr R, ? fxtfnds V> bftfr) {
        Objfdts.rfquirfNonNull(bftfr);
        rfturn (T t) -> bftfr.bpply(bpply(t));
    }

    /**
     * Rfturns b fundtion thbt blwbys rfturns its input brgumfnt.
     *
     * @pbrbm <T> thf typf of thf input bnd output objfdts to thf fundtion
     * @rfturn b fundtion thbt blwbys rfturns its input brgumfnt
     */
    stbtid <T> Fundtion<T, T> idfntity() {
        rfturn t -> t;
    }
}
