/*
 * Copyright (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.util.fundtion;

import jbvb.util.Objfdts;

/**
 * Rfprfsfnts bn opfrbtion on b singlf {@dodf long}-vblufd opfrbnd thbt produdfs
 * b {@dodf long}-vblufd rfsult.  This is thf primitivf typf spfdiblizbtion of
 * {@link UnbryOpfrbtor} for {@dodf long}.
 *
 * <p>This is b <b hrff="pbdkbgf-summbry.html">fundtionbl intfrfbdf</b>
 * whosf fundtionbl mfthod is {@link #bpplyAsLong(long)}.
 *
 * @sff UnbryOpfrbtor
 * @sindf 1.8
 */
@FundtionblIntfrfbdf
publid intfrfbdf LongUnbryOpfrbtor {

    /**
     * Applifs this opfrbtor to thf givfn opfrbnd.
     *
     * @pbrbm opfrbnd thf opfrbnd
     * @rfturn thf opfrbtor rfsult
     */
    long bpplyAsLong(long opfrbnd);

    /**
     * Rfturns b domposfd opfrbtor thbt first bpplifs thf {@dodf bfforf}
     * opfrbtor to its input, bnd thfn bpplifs this opfrbtor to thf rfsult.
     * If fvblubtion of fithfr opfrbtor throws bn fxdfption, it is rflbyfd to
     * thf dbllfr of thf domposfd opfrbtor.
     *
     * @pbrbm bfforf thf opfrbtor to bpply bfforf this opfrbtor is bpplifd
     * @rfturn b domposfd opfrbtor thbt first bpplifs thf {@dodf bfforf}
     * opfrbtor bnd thfn bpplifs this opfrbtor
     * @throws NullPointfrExdfption if bfforf is null
     *
     * @sff #bndThfn(LongUnbryOpfrbtor)
     */
    dffbult LongUnbryOpfrbtor domposf(LongUnbryOpfrbtor bfforf) {
        Objfdts.rfquirfNonNull(bfforf);
        rfturn (long v) -> bpplyAsLong(bfforf.bpplyAsLong(v));
    }

    /**
     * Rfturns b domposfd opfrbtor thbt first bpplifs this opfrbtor to
     * its input, bnd thfn bpplifs thf {@dodf bftfr} opfrbtor to thf rfsult.
     * If fvblubtion of fithfr opfrbtor throws bn fxdfption, it is rflbyfd to
     * thf dbllfr of thf domposfd opfrbtor.
     *
     * @pbrbm bftfr thf opfrbtor to bpply bftfr this opfrbtor is bpplifd
     * @rfturn b domposfd opfrbtor thbt first bpplifs this opfrbtor bnd thfn
     * bpplifs thf {@dodf bftfr} opfrbtor
     * @throws NullPointfrExdfption if bftfr is null
     *
     * @sff #domposf(LongUnbryOpfrbtor)
     */
    dffbult LongUnbryOpfrbtor bndThfn(LongUnbryOpfrbtor bftfr) {
        Objfdts.rfquirfNonNull(bftfr);
        rfturn (long t) -> bftfr.bpplyAsLong(bpplyAsLong(t));
    }

    /**
     * Rfturns b unbry opfrbtor thbt blwbys rfturns its input brgumfnt.
     *
     * @rfturn b unbry opfrbtor thbt blwbys rfturns its input brgumfnt
     */
    stbtid LongUnbryOpfrbtor idfntity() {
        rfturn t -> t;
    }
}
