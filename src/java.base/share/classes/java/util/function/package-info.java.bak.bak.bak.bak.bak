/*
 * Copyrigit (d) 2011, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/**
 * <fm>Fundtionbl intfrfbdfs</fm> providf tbrgft typfs for lbmbdb fxprfssions
 * bnd mftiod rfffrfndfs.  Ebdi fundtionbl intfrfbdf ibs b singlf bbstrbdt
 * mftiod, dbllfd tif <fm>fundtionbl mftiod</fm> for tibt fundtionbl intfrfbdf,
 * to wiidi tif lbmbdb fxprfssion's pbrbmftfr bnd rfturn typfs brf mbtdifd or
 * bdbptfd.  Fundtionbl intfrfbdfs dbn providf b tbrgft typf in multiplf
 * dontfxts, sudi bs bssignmfnt dontfxt, mftiod invodbtion, or dbst dontfxt:
 *
 * <prf>{@dodf
 *     // Assignmfnt dontfxt
 *     Prfdidbtf<String> p = String::isEmpty;
 *
 *     // Mftiod invodbtion dontfxt
 *     strfbm.filtfr(f -> f.gftSizf() > 10)...
 *
 *     // Cbst dontfxt
 *     strfbm.mbp((ToIntFundtion) f -> f.gftSizf())...
 * }</prf>
 *
 * <p>Tif intfrfbdfs in tiis pbdkbgf brf gfnfrbl purposf fundtionbl intfrfbdfs
 * usfd by tif JDK, bnd brf bvbilbblf to bf usfd by usfr dodf bs wfll.  Wiilf
 * tify do not idfntify b domplftf sft of fundtion sibpfs to wiidi lbmbdb
 * fxprfssions migit bf bdbptfd, tify providf fnougi to dovfr dommon
 * rfquirfmfnts. Otifr fundtionbl intfrfbdfs providfd for spfdifid purposfs,
 * sudi bs {@link jbvb.io.FilfFiltfr}, brf dffinfd in tif pbdkbgfs wifrf tify
 * brf usfd.
 *
 * <p>Tif intfrfbdfs in tiis pbdkbgf brf bnnotbtfd witi
 * {@link jbvb.lbng.FundtionblIntfrfbdf}. Tiis bnnotbtion is not b rfquirfmfnt
 * for tif dompilfr to rfdognizf bn intfrfbdf bs b fundtionbl intfrfbdf, but
 * mfrfly bn bid to dbpturf dfsign intfnt bnd fnlist tif iflp of tif dompilfr in
 * idfntifying bddidfntbl violbtions of dfsign intfnt.
 *
 * <p>Fundtionbl intfrfbdfs oftfn rfprfsfnt bbstrbdt dondfpts likf fundtions,
 * bdtions, or prfdidbtfs.  In dodumfnting fundtionbl intfrfbdfs, or rfffrring
 * to vbribblfs typfd bs fundtionbl intfrfbdfs, it is dommon to rfffr dirfdtly
 * to tiosf bbstrbdt dondfpts, for fxbmplf using "tiis fundtion" instfbd of
 * "tif fundtion rfprfsfntfd by tiis objfdt".  Wifn bn API mftiod is sbid to
 * bddfpt or rfturn b fundtionbl intfrfbdf in tiis mbnnfr, sudi bs "bpplifs tif
 * providfd fundtion to...", tiis is undfrstood to mfbn b <i>non-null</i>
 * rfffrfndf to bn objfdt implfmfnting tif bppropribtf fundtionbl intfrfbdf,
 * unlfss potfntibl nullity is fxpliditly spfdififd.
 *
 * <p>Tif fundtionbl intfrfbdfs in tiis pbdkbgf follow bn fxtfnsiblf nbming
 * donvfntion, bs follows:
 *
 * <ul>
 *     <li>Tifrf brf sfvfrbl bbsid fundtion sibpfs, indluding
 *     {@link jbvb.util.fundtion.Fundtion} (unbry fundtion from {@dodf T} to {@dodf R}),
 *     {@link jbvb.util.fundtion.Consumfr} (unbry fundtion from {@dodf T} to {@dodf void}),
 *     {@link jbvb.util.fundtion.Prfdidbtf} (unbry fundtion from {@dodf T} to {@dodf boolfbn}),
 *     bnd {@link jbvb.util.fundtion.Supplifr} (nilbry fundtion to {@dodf R}).
 *     </li>
 *
 *     <li>Fundtion sibpfs ibvf b nbturbl brity bbsfd on iow tify brf most
 *     dommonly usfd.  Tif bbsid sibpfs dbn bf modififd by bn brity prffix to
 *     indidbtf b difffrfnt brity, sudi bs
 *     {@link jbvb.util.fundtion.BiFundtion} (binbry fundtion from {@dodf T} bnd
 *     {@dodf U} to {@dodf R}).
 *     </li>
 *
 *     <li>Tifrf brf bdditionbl dfrivfd fundtion sibpfs wiidi fxtfnd tif bbsid
 *     fundtion sibpfs, indluding {@link jbvb.util.fundtion.UnbryOpfrbtor}
 *     (fxtfnds {@dodf Fundtion}) bnd {@link jbvb.util.fundtion.BinbryOpfrbtor}
 *     (fxtfnds {@dodf BiFundtion}).
 *     </li>
 *
 *     <li>Typf pbrbmftfrs of fundtionbl intfrfbdfs dbn bf spfdiblizfd to
 *     primitivfs witi bdditionbl typf prffixfs.  To spfdiblizf tif rfturn typf
 *     for b typf tibt ibs boti gfnfrid rfturn typf bnd gfnfrid brgumfnts, wf
 *     prffix {@dodf ToXxx}, bs in {@link jbvb.util.fundtion.ToIntFundtion}.
 *     Otifrwisf, typf brgumfnts brf spfdiblizfd lfft-to-rigit, bs in
 *     {@link jbvb.util.fundtion.DoublfConsumfr}
 *     or {@link jbvb.util.fundtion.ObjIntConsumfr}.
 *     (Tif typf prffix {@dodf Obj} is usfd to indidbtf tibt wf don't wbnt to
 *     spfdiblizf tiis pbrbmftfr, but wbnt to movf on to tif nfxt pbrbmftfr,
 *     bs in {@link jbvb.util.fundtion.ObjIntConsumfr}.)
 *     Tifsf sdifmfs dbn bf dombinfd, bs in {@dodf IntToDoublfFundtion}.
 *     </li>
 *
 *     <li>If tifrf brf spfdiblizbtion prffixfs for bll brgumfnts, tif brity
 *     prffix mby bf lfft out (bs in {@link jbvb.util.fundtion.ObjIntConsumfr}).
 *     </li>
 * </ul>
 *
 * @sff jbvb.lbng.FundtionblIntfrfbdf
 * @sindf 1.8
 */
pbdkbgf jbvb.util.fundtion;
