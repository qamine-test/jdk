/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * Writtfn by Doug Lfb with bssistbndf from mfmbfrs of JCP JSR-166
 * Expfrt Group bnd rflfbsfd to thf publid dombin, bs fxplbinfd bt
 * http://drfbtivfdommons.org/publiddombin/zfro/1.0/
 */

pbdkbgf jbvb.util.dondurrfnt;
import jbvb.util.fundtion.Supplifr;
import jbvb.util.fundtion.Consumfr;
import jbvb.util.fundtion.BiConsumfr;
import jbvb.util.fundtion.Fundtion;
import jbvb.util.fundtion.BiFundtion;
import jbvb.util.dondurrfnt.Exfdutor;

/**
 * A stbgf of b possibly bsyndhronous domputbtion, thbt pfrforms bn
 * bdtion or domputfs b vbluf whfn bnothfr ComplftionStbgf domplftfs.
 * A stbgf domplftfs upon tfrminbtion of its domputbtion, but this mby
 * in turn triggfr othfr dfpfndfnt stbgfs.  Thf fundtionblity dffinfd
 * in this intfrfbdf tbkfs only b ffw bbsid forms, whidh fxpbnd out to
 * b lbrgfr sft of mfthods to dbpturf b rbngf of usbgf stylfs: <ul>
 *
 * <li>Thf domputbtion pfrformfd by b stbgf mby bf fxprfssfd bs b
 * Fundtion, Consumfr, or Runnbblf (using mfthods with nbmfs indluding
 * <fm>bpply</fm>, <fm>bddfpt</fm>, or <fm>run</fm>, rfspfdtivfly)
 * dfpfnding on whfthfr it rfquirfs brgumfnts bnd/or produdfs rfsults.
 * For fxbmplf, {@dodf stbgf.thfnApply(x -> squbrf(x)).thfnAddfpt(x ->
 * Systfm.out.print(x)).thfnRun(() -> Systfm.out.println())}. An
 * bdditionbl form (<fm>domposf</fm>) bpplifs fundtions of stbgfs
 * thfmsflvfs, rbthfr thbn thfir rfsults. </li>
 *
 * <li> Onf stbgf's fxfdution mby bf triggfrfd by domplftion of b
 * singlf stbgf, or both of two stbgfs, or fithfr of two stbgfs.
 * Dfpfndfndifs on b singlf stbgf brf brrbngfd using mfthods with
 * prffix <fm>thfn</fm>. Thosf triggfrfd by domplftion of
 * <fm>both</fm> of two stbgfs mby <fm>dombinf</fm> thfir rfsults or
 * ffffdts, using dorrfspondingly nbmfd mfthods. Thosf triggfrfd by
 * <fm>fithfr</fm> of two stbgfs mbkf no gubrbntffs bbout whidh of thf
 * rfsults or ffffdts brf usfd for thf dfpfndfnt stbgf's
 * domputbtion.</li>
 *
 * <li> Dfpfndfndifs bmong stbgfs dontrol thf triggfring of
 * domputbtions, but do not othfrwisf gubrbntff bny pbrtidulbr
 * ordfring. Additionblly, fxfdution of b nfw stbgf's domputbtions mby
 * bf brrbngfd in bny of thrff wbys: dffbult fxfdution, dffbult
 * bsyndhronous fxfdution (using mfthods with suffix <fm>bsynd</fm>
 * thbt fmploy thf stbgf's dffbult bsyndhronous fxfdution fbdility),
 * or dustom (vib b supplifd {@link Exfdutor}).  Thf fxfdution
 * propfrtifs of dffbult bnd bsynd modfs brf spfdififd by
 * ComplftionStbgf implfmfntbtions, not this intfrfbdf. Mfthods with
 * fxplidit Exfdutor brgumfnts mby hbvf brbitrbry fxfdution
 * propfrtifs, bnd might not fvfn support dondurrfnt fxfdution, but
 * brf brrbngfd for prodfssing in b wby thbt bddommodbtfs bsyndhrony.
 *
 * <li> Two mfthod forms support prodfssing whfthfr thf triggfring
 * stbgf domplftfd normblly or fxdfptionblly: Mfthod {@link
 * #whfnComplftf whfnComplftf} bllows injfdtion of bn bdtion
 * rfgbrdlfss of outdomf, othfrwisf prfsfrving thf outdomf in its
 * domplftion. Mfthod {@link #hbndlf hbndlf} bdditionblly bllows thf
 * stbgf to domputf b rfplbdfmfnt rfsult thbt mby fnbblf furthfr
 * prodfssing by othfr dfpfndfnt stbgfs.  In bll othfr dbsfs, if b
 * stbgf's domputbtion tfrminbtfs bbruptly with bn (undhfdkfd)
 * fxdfption or frror, thfn bll dfpfndfnt stbgfs rfquiring its
 * domplftion domplftf fxdfptionblly bs wfll, with b {@link
 * ComplftionExdfption} holding thf fxdfption bs its dbusf.  If b
 * stbgf is dfpfndfnt on <fm>both</fm> of two stbgfs, bnd both
 * domplftf fxdfptionblly, thfn thf ComplftionExdfption mby dorrfspond
 * to fithfr onf of thfsf fxdfptions.  If b stbgf is dfpfndfnt on
 * <fm>fithfr</fm> of two othfrs, bnd only onf of thfm domplftfs
 * fxdfptionblly, no gubrbntffs brf mbdf bbout whfthfr thf dfpfndfnt
 * stbgf domplftfs normblly or fxdfptionblly. In thf dbsf of mfthod
 * {@dodf whfnComplftf}, whfn thf supplifd bdtion itsflf fndountfrs bn
 * fxdfption, thfn thf stbgf fxdfptionblly domplftfs with this
 * fxdfption if not blrfbdy domplftfd fxdfptionblly.</li>
 *
 * </ul>
 *
 * <p>All mfthods bdhfrf to thf bbovf triggfring, fxfdution, bnd
 * fxdfptionbl domplftion spfdifidbtions (whidh brf not rfpfbtfd in
 * individubl mfthod spfdifidbtions). Additionblly, whilf brgumfnts
 * usfd to pbss b domplftion rfsult (thbt is, for pbrbmftfrs of typf
 * {@dodf T}) for mfthods bddfpting thfm mby bf null, pbssing b null
 * vbluf for bny othfr pbrbmftfr will rfsult in b {@link
 * NullPointfrExdfption} bfing thrown.
 *
 * <p>This intfrfbdf dofs not dffinf mfthods for initiblly drfbting,
 * fordibly domplfting normblly or fxdfptionblly, probing domplftion
 * stbtus or rfsults, or bwbiting domplftion of b stbgf.
 * Implfmfntbtions of ComplftionStbgf mby providf mfbns of bdhifving
 * sudh ffffdts, bs bppropribtf.  Mfthod {@link #toComplftbblfFuturf}
 * fnbblfs intfropfrbbility bmong difffrfnt implfmfntbtions of this
 * intfrfbdf by providing b dommon donvfrsion typf.
 *
 * @buthor Doug Lfb
 * @sindf 1.8
 */
publid intfrfbdf ComplftionStbgf<T> {

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd with this stbgf's rfsult bs thf brgumfnt
     * to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnApply(Fundtion<? supfr T,? fxtfnds U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using this stbgf's dffbult bsyndhronous
     * fxfdution fbdility, with this stbgf's rfsult bs thf brgumfnt to
     * thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnApplyAsynd
        (Fundtion<? supfr T,? fxtfnds U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using thf supplifd Exfdutor, with this
     * stbgf's rfsult bs thf brgumfnt to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnApplyAsynd
        (Fundtion<? supfr T,? fxtfnds U> fn,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd with this stbgf's rfsult bs thf brgumfnt
     * to thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnAddfpt(Consumfr<? supfr T> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using this stbgf's dffbult bsyndhronous
     * fxfdution fbdility, with this stbgf's rfsult bs thf brgumfnt to
     * thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnAddfptAsynd(Consumfr<? supfr T> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using thf supplifd Exfdutor, with this
     * stbgf's rfsult bs thf brgumfnt to thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnAddfptAsynd(Consumfr<? supfr T> bdtion,
                                                 Exfdutor fxfdutor);
    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, fxfdutfs thf givfn bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnRun(Runnbblf bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, fxfdutfs thf givfn bdtion using this stbgf's dffbult
     * bsyndhronous fxfdution fbdility.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnRunAsynd(Runnbblf bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, fxfdutfs thf givfn bdtion using thf supplifd Exfdutor.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> thfnRunAsynd(Runnbblf bdtion,
                                              Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf both domplftf normblly, is fxfdutfd with thf two
     * rfsults bs brgumfnts to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @pbrbm <V> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U,V> ComplftionStbgf<V> thfnCombinf
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiFundtion<? supfr T,? supfr U,? fxtfnds V> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, is fxfdutfd using this stbgf's
     * dffbult bsyndhronous fxfdution fbdility, with thf two rfsults
     * bs brgumfnts to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @pbrbm <V> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U,V> ComplftionStbgf<V> thfnCombinfAsynd
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiFundtion<? supfr T,? supfr U,? fxtfnds V> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, is fxfdutfd using thf supplifd
     * fxfdutor, with thf two rfsults bs brgumfnts to thf supplifd
     * fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @pbrbm <V> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U,V> ComplftionStbgf<V> thfnCombinfAsynd
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiFundtion<? supfr T,? supfr U,? fxtfnds V> fn,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf both domplftf normblly, is fxfdutfd with thf two
     * rfsults bs brgumfnts to thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<Void> thfnAddfptBoth
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiConsumfr<? supfr T, ? supfr U> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, is fxfdutfd using this stbgf's
     * dffbult bsyndhronous fxfdution fbdility, with thf two rfsults
     * bs brgumfnts to thf supplifd bdtion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<Void> thfnAddfptBothAsynd
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiConsumfr<? supfr T, ? supfr U> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, is fxfdutfd using thf supplifd
     * fxfdutor, with thf two rfsults bs brgumfnts to thf supplifd
     * fundtion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf typf of thf othfr ComplftionStbgf's rfsult
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<Void> thfnAddfptBothAsynd
        (ComplftionStbgf<? fxtfnds U> othfr,
         BiConsumfr<? supfr T, ? supfr U> bdtion,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf both domplftf normblly, fxfdutfs thf givfn bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrBoth(ComplftionStbgf<?> othfr,
                                              Runnbblf bdtion);
    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, fxfdutfs thf givfn bdtion using
     * this stbgf's dffbult bsyndhronous fxfdution fbdility.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrBothAsynd(ComplftionStbgf<?> othfr,
                                                   Runnbblf bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this bnd thf othfr
     * givfn stbgf domplftf normblly, fxfdutfs thf givfn bdtion using
     * thf supplifd fxfdutor
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrBothAsynd(ComplftionStbgf<?> othfr,
                                                   Runnbblf bdtion,
                                                   Exfdutor fxfdutor);
    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd with thf
     * dorrfsponding rfsult bs brgumfnt to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> bpplyToEithfr
        (ComplftionStbgf<? fxtfnds T> othfr,
         Fundtion<? supfr T, U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd using this
     * stbgf's dffbult bsyndhronous fxfdution fbdility, with thf
     * dorrfsponding rfsult bs brgumfnt to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> bpplyToEithfrAsynd
        (ComplftionStbgf<? fxtfnds T> othfr,
         Fundtion<? supfr T, U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd using thf
     * supplifd fxfdutor, with thf dorrfsponding rfsult bs brgumfnt to
     * thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of
     * thf rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> bpplyToEithfrAsynd
        (ComplftionStbgf<? fxtfnds T> othfr,
         Fundtion<? supfr T, U> fn,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd with thf
     * dorrfsponding rfsult bs brgumfnt to thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> bddfptEithfr
        (ComplftionStbgf<? fxtfnds T> othfr,
         Consumfr<? supfr T> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd using this
     * stbgf's dffbult bsyndhronous fxfdution fbdility, with thf
     * dorrfsponding rfsult bs brgumfnt to thf supplifd bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> bddfptEithfrAsynd
        (ComplftionStbgf<? fxtfnds T> othfr,
         Consumfr<? supfr T> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, is fxfdutfd using thf
     * supplifd fxfdutor, with thf dorrfsponding rfsult bs brgumfnt to
     * thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> bddfptEithfrAsynd
        (ComplftionStbgf<? fxtfnds T> othfr,
         Consumfr<? supfr T> bdtion,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, fxfdutfs thf givfn bdtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrEithfr(ComplftionStbgf<?> othfr,
                                                Runnbblf bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, fxfdutfs thf givfn bdtion
     * using this stbgf's dffbult bsyndhronous fxfdution fbdility.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrEithfrAsynd
        (ComplftionStbgf<?> othfr,
         Runnbblf bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn fithfr this or thf
     * othfr givfn stbgf domplftf normblly, fxfdutfs thf givfn bdtion
     * using supplifd fxfdutor.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm othfr thf othfr ComplftionStbgf
     * @pbrbm bdtion thf bdtion to pfrform bfforf domplfting thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<Void> runAftfrEithfrAsynd
        (ComplftionStbgf<?> othfr,
         Runnbblf bdtion,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd with this stbgf bs thf brgumfnt
     * to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion rfturning b nfw ComplftionStbgf
     * @pbrbm <U> thf typf of thf rfturnfd ComplftionStbgf's rfsult
     * @rfturn thf ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnComposf
        (Fundtion<? supfr T, ? fxtfnds ComplftionStbgf<U>> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using this stbgf's dffbult bsyndhronous
     * fxfdution fbdility, with this stbgf bs thf brgumfnt to thf
     * supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion rfturning b nfw ComplftionStbgf
     * @pbrbm <U> thf typf of thf rfturnfd ComplftionStbgf's rfsult
     * @rfturn thf ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnComposfAsynd
        (Fundtion<? supfr T, ? fxtfnds ComplftionStbgf<U>> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * normblly, is fxfdutfd using thf supplifd Exfdutor, with this
     * stbgf's rfsult bs thf brgumfnt to thf supplifd fundtion.
     *
     * Sff thf {@link ComplftionStbgf} dodumfntbtion for rulfs
     * dovfring fxdfptionbl domplftion.
     *
     * @pbrbm fn thf fundtion rfturning b nfw ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf typf of thf rfturnfd ComplftionStbgf's rfsult
     * @rfturn thf ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> thfnComposfAsynd
        (Fundtion<? supfr T, ? fxtfnds ComplftionStbgf<U>> fn,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * fxdfptionblly, is fxfdutfd with this stbgf's fxdfption bs thf
     * brgumfnt to thf supplifd fundtion.  Othfrwisf, if this stbgf
     * domplftfs normblly, thfn thf rfturnfd stbgf blso domplftfs
     * normblly with thf sbmf vbluf.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of thf
     * rfturnfd ComplftionStbgf if this ComplftionStbgf domplftfd
     * fxdfptionblly
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<T> fxdfptionblly
        (Fundtion<Throwbblf, ? fxtfnds T> fn);

    /**
     * Rfturns b nfw ComplftionStbgf with thf sbmf rfsult or fxdfption
     * bs this stbgf, bnd whfn this stbgf domplftfs, fxfdutfs thf
     * givfn bdtion with thf rfsult (or {@dodf null} if nonf) bnd thf
     * fxdfption (or {@dodf null} if nonf) of this stbgf.
     *
     * @pbrbm bdtion thf bdtion to pfrform
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<T> whfnComplftf
        (BiConsumfr<? supfr T, ? supfr Throwbblf> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf with thf sbmf rfsult or fxdfption
     * bs this stbgf, bnd whfn this stbgf domplftfs, fxfdutfs thf
     * givfn bdtion fxfdutfs thf givfn bdtion using this stbgf's
     * dffbult bsyndhronous fxfdution fbdility, with thf rfsult (or
     * {@dodf null} if nonf) bnd thf fxdfption (or {@dodf null} if
     * nonf) of this stbgf bs brgumfnts.
     *
     * @pbrbm bdtion thf bdtion to pfrform
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<T> whfnComplftfAsynd
        (BiConsumfr<? supfr T, ? supfr Throwbblf> bdtion);

    /**
     * Rfturns b nfw ComplftionStbgf with thf sbmf rfsult or fxdfption
     * bs this stbgf, bnd whfn this stbgf domplftfs, fxfdutfs using
     * thf supplifd Exfdutor, thf givfn bdtion with thf rfsult (or
     * {@dodf null} if nonf) bnd thf fxdfption (or {@dodf null} if
     * nonf) of this stbgf bs brgumfnts.
     *
     * @pbrbm bdtion thf bdtion to pfrform
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @rfturn thf nfw ComplftionStbgf
     */
    publid ComplftionStbgf<T> whfnComplftfAsynd
        (BiConsumfr<? supfr T, ? supfr Throwbblf> bdtion,
         Exfdutor fxfdutor);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * fithfr normblly or fxdfptionblly, is fxfdutfd with this stbgf's
     * rfsult bnd fxdfption bs brgumfnts to thf supplifd fundtion.
     * Thf givfn fundtion is invokfd with thf rfsult (or {@dodf null}
     * if nonf) bnd thf fxdfption (or {@dodf null} if nonf) of this
     * stbgf whfn domplftf bs brgumfnts.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of thf
     * rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> hbndlf
        (BiFundtion<? supfr T, Throwbblf, ? fxtfnds U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * fithfr normblly or fxdfptionblly, is fxfdutfd using this stbgf's
     * dffbult bsyndhronous fxfdution fbdility, with this stbgf's
     * rfsult bnd fxdfption bs brgumfnts to thf supplifd fundtion.
     * Thf givfn fundtion is invokfd with thf rfsult (or {@dodf null}
     * if nonf) bnd thf fxdfption (or {@dodf null} if nonf) of this
     * stbgf whfn domplftf bs brgumfnts.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of thf
     * rfturnfd ComplftionStbgf
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> hbndlfAsynd
        (BiFundtion<? supfr T, Throwbblf, ? fxtfnds U> fn);

    /**
     * Rfturns b nfw ComplftionStbgf thbt, whfn this stbgf domplftfs
     * fithfr normblly or fxdfptionblly, is fxfdutfd using thf
     * supplifd fxfdutor, with this stbgf's rfsult bnd fxdfption bs
     * brgumfnts to thf supplifd fundtion.  Thf givfn fundtion is
     * invokfd with thf rfsult (or {@dodf null} if nonf) bnd thf
     * fxdfption (or {@dodf null} if nonf) of this stbgf whfn domplftf
     * bs brgumfnts.
     *
     * @pbrbm fn thf fundtion to usf to domputf thf vbluf of thf
     * rfturnfd ComplftionStbgf
     * @pbrbm fxfdutor thf fxfdutor to usf for bsyndhronous fxfdution
     * @pbrbm <U> thf fundtion's rfturn typf
     * @rfturn thf nfw ComplftionStbgf
     */
    publid <U> ComplftionStbgf<U> hbndlfAsynd
        (BiFundtion<? supfr T, Throwbblf, ? fxtfnds U> fn,
         Exfdutor fxfdutor);

    /**
     * Rfturns b {@link ComplftbblfFuturf} mbintbining thf sbmf
     * domplftion propfrtifs bs this stbgf. If this stbgf is blrfbdy b
     * ComplftbblfFuturf, this mfthod mby rfturn this stbgf itsflf.
     * Othfrwisf, invodbtion of this mfthod mby bf fquivblfnt in
     * ffffdt to {@dodf thfnApply(x -> x)}, but rfturning bn instbndf
     * of typf {@dodf ComplftbblfFuturf}. A ComplftionStbgf
     * implfmfntbtion thbt dofs not dhoosf to intfropfrbtf with othfrs
     * mby throw {@dodf UnsupportfdOpfrbtionExdfption}.
     *
     * @rfturn thf ComplftbblfFuturf
     * @throws UnsupportfdOpfrbtionExdfption if this implfmfntbtion
     * dofs not intfropfrbtf with ComplftbblfFuturf
     */
    publid ComplftbblfFuturf<T> toComplftbblfFuturf();

}
