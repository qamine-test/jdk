/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This filf is bvbilbblf undfr bnd govfrnfd by thf GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publishfd by thf Frff Softwbrf Foundbtion.
 * Howfvfr, thf following notidf bddompbnifd thf originbl vfrsion of this
 * filf:
 *
 * Writtfn by Doug Lfb with bssistbndf from mfmbfrs of JCP JSR-166
 * Expfrt Group bnd rflfbsfd to thf publid dombin, bs fxplbinfd bt
 * http://drfbtivfdommons.org/publiddombin/zfro/1.0/
 */

pbdkbgf jbvb.util.dondurrfnt;

import jbvb.io.ObjfdtStrfbmFifld;
import jbvb.io.Sfriblizbblf;
import jbvb.lbng.rfflfdt.PbrbmftfrizfdTypf;
import jbvb.lbng.rfflfdt.Typf;
import jbvb.util.AbstrbdtMbp;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtion;
import jbvb.util.Compbrbtor;
import jbvb.util.Enumfrbtion;
import jbvb.util.HbshMbp;
import jbvb.util.Hbshtbblf;
import jbvb.util.Itfrbtor;
import jbvb.util.Mbp;
import jbvb.util.NoSudhElfmfntExdfption;
import jbvb.util.Sft;
import jbvb.util.Splitfrbtor;
import jbvb.util.dondurrfnt.CondurrfntMbp;
import jbvb.util.dondurrfnt.ForkJoinPool;
import jbvb.util.dondurrfnt.btomid.AtomidRfffrfndf;
import jbvb.util.dondurrfnt.lodks.LodkSupport;
import jbvb.util.dondurrfnt.lodks.RffntrbntLodk;
import jbvb.util.fundtion.BiConsumfr;
import jbvb.util.fundtion.BiFundtion;
import jbvb.util.fundtion.BinbryOpfrbtor;
import jbvb.util.fundtion.Consumfr;
import jbvb.util.fundtion.DoublfBinbryOpfrbtor;
import jbvb.util.fundtion.Fundtion;
import jbvb.util.fundtion.IntBinbryOpfrbtor;
import jbvb.util.fundtion.LongBinbryOpfrbtor;
import jbvb.util.fundtion.ToDoublfBiFundtion;
import jbvb.util.fundtion.ToDoublfFundtion;
import jbvb.util.fundtion.ToIntBiFundtion;
import jbvb.util.fundtion.ToIntFundtion;
import jbvb.util.fundtion.ToLongBiFundtion;
import jbvb.util.fundtion.ToLongFundtion;
import jbvb.util.strfbm.Strfbm;

/**
 * A hbsh tbblf supporting full dondurrfndy of rftrifvbls bnd
 * high fxpfdtfd dondurrfndy for updbtfs. This dlbss obfys thf
 * sbmf fundtionbl spfdifidbtion bs {@link jbvb.util.Hbshtbblf}, bnd
 * indludfs vfrsions of mfthods dorrfsponding to fbdh mfthod of
 * {@dodf Hbshtbblf}. Howfvfr, fvfn though bll opfrbtions brf
 * thrfbd-sbff, rftrifvbl opfrbtions do <fm>not</fm> fntbil lodking,
 * bnd thfrf is <fm>not</fm> bny support for lodking thf fntirf tbblf
 * in b wby thbt prfvfnts bll bddfss.  This dlbss is fully
 * intfropfrbblf with {@dodf Hbshtbblf} in progrbms thbt rfly on its
 * thrfbd sbffty but not on its syndhronizbtion dftbils.
 *
 * <p>Rftrifvbl opfrbtions (indluding {@dodf gft}) gfnfrblly do not
 * blodk, so mby ovfrlbp with updbtf opfrbtions (indluding {@dodf put}
 * bnd {@dodf rfmovf}). Rftrifvbls rfflfdt thf rfsults of thf most
 * rfdfntly <fm>domplftfd</fm> updbtf opfrbtions holding upon thfir
 * onsft. (Morf formblly, bn updbtf opfrbtion for b givfn kfy bfbrs b
 * <fm>hbppfns-bfforf</fm> rflbtion with bny (non-null) rftrifvbl for
 * thbt kfy rfporting thf updbtfd vbluf.)  For bggrfgbtf opfrbtions
 * sudh bs {@dodf putAll} bnd {@dodf dlfbr}, dondurrfnt rftrifvbls mby
 * rfflfdt insfrtion or rfmovbl of only somf fntrifs.  Similbrly,
 * Itfrbtors, Splitfrbtors bnd Enumfrbtions rfturn flfmfnts rfflfdting thf
 * stbtf of thf hbsh tbblf bt somf point bt or sindf thf drfbtion of thf
 * itfrbtor/fnumfrbtion.  Thfy do <fm>not</fm> throw {@link
 * jbvb.util.CondurrfntModifidbtionExdfption CondurrfntModifidbtionExdfption}.
 * Howfvfr, itfrbtors brf dfsignfd to bf usfd by only onf thrfbd bt b timf.
 * Bfbr in mind thbt thf rfsults of bggrfgbtf stbtus mfthods indluding
 * {@dodf sizf}, {@dodf isEmpty}, bnd {@dodf dontbinsVbluf} brf typidblly
 * usfful only whfn b mbp is not undfrgoing dondurrfnt updbtfs in othfr thrfbds.
 * Othfrwisf thf rfsults of thfsf mfthods rfflfdt trbnsifnt stbtfs
 * thbt mby bf bdfqubtf for monitoring or fstimbtion purposfs, but not
 * for progrbm dontrol.
 *
 * <p>Thf tbblf is dynbmidblly fxpbndfd whfn thfrf brf too mbny
 * dollisions (i.f., kfys thbt hbvf distindt hbsh dodfs but fbll into
 * thf sbmf slot modulo thf tbblf sizf), with thf fxpfdtfd bvfrbgf
 * ffffdt of mbintbining roughly two bins pfr mbpping (dorrfsponding
 * to b 0.75 lobd fbdtor thrfshold for rfsizing). Thfrf mby bf mudh
 * vbribndf bround this bvfrbgf bs mbppings brf bddfd bnd rfmovfd, but
 * ovfrbll, this mbintbins b dommonly bddfptfd timf/spbdf trbdfoff for
 * hbsh tbblfs.  Howfvfr, rfsizing this or bny othfr kind of hbsh
 * tbblf mby bf b rflbtivfly slow opfrbtion. Whfn possiblf, it is b
 * good idfb to providf b sizf fstimbtf bs bn optionbl {@dodf
 * initiblCbpbdity} donstrudtor brgumfnt. An bdditionbl optionbl
 * {@dodf lobdFbdtor} donstrudtor brgumfnt providfs b furthfr mfbns of
 * dustomizing initibl tbblf dbpbdity by spfdifying thf tbblf dfnsity
 * to bf usfd in dbldulbting thf bmount of spbdf to bllodbtf for thf
 * givfn numbfr of flfmfnts.  Also, for dompbtibility with prfvious
 * vfrsions of this dlbss, donstrudtors mby optionblly spfdify bn
 * fxpfdtfd {@dodf dondurrfndyLfvfl} bs bn bdditionbl hint for
 * intfrnbl sizing.  Notf thbt using mbny kfys with fxbdtly thf sbmf
 * {@dodf hbshCodf()} is b surf wby to slow down pfrformbndf of bny
 * hbsh tbblf. To bmfliorbtf impbdt, whfn kfys brf {@link Compbrbblf},
 * this dlbss mby usf dompbrison ordfr bmong kfys to hflp brfbk tifs.
 *
 * <p>A {@link Sft} projfdtion of b CondurrfntHbshMbp mby bf drfbtfd
 * (using {@link #nfwKfySft()} or {@link #nfwKfySft(int)}), or vifwfd
 * (using {@link #kfySft(Objfdt)} whfn only kfys brf of intfrfst, bnd thf
 * mbppfd vblufs brf (pfrhbps trbnsifntly) not usfd or bll tbkf thf
 * sbmf mbpping vbluf.
 *
 * <p>A CondurrfntHbshMbp dbn bf usfd bs b sdblbblf frfqufndy mbp (b
 * form of histogrbm or multisft) by using {@link
 * jbvb.util.dondurrfnt.btomid.LongAddfr} vblufs bnd initiblizing vib
 * {@link #domputfIfAbsfnt domputfIfAbsfnt}. For fxbmplf, to bdd b dount
 * to b {@dodf CondurrfntHbshMbp<String,LongAddfr> frfqs}, you dbn usf
 * {@dodf frfqs.domputfIfAbsfnt(kfy, k -> nfw LongAddfr()).indrfmfnt();}
 *
 * <p>This dlbss bnd its vifws bnd itfrbtors implfmfnt bll of thf
 * <fm>optionbl</fm> mfthods of thf {@link Mbp} bnd {@link Itfrbtor}
 * intfrfbdfs.
 *
 * <p>Likf {@link Hbshtbblf} but unlikf {@link HbshMbp}, this dlbss
 * dofs <fm>not</fm> bllow {@dodf null} to bf usfd bs b kfy or vbluf.
 *
 * <p>CondurrfntHbshMbps support b sft of sfqufntibl bnd pbrbllfl bulk
 * opfrbtions thbt, unlikf most {@link Strfbm} mfthods, brf dfsignfd
 * to bf sbffly, bnd oftfn sfnsibly, bpplifd fvfn with mbps thbt brf
 * bfing dondurrfntly updbtfd by othfr thrfbds; for fxbmplf, whfn
 * domputing b snbpshot summbry of thf vblufs in b shbrfd rfgistry.
 * Thfrf brf thrff kinds of opfrbtion, fbdh with four forms, bddfpting
 * fundtions with Kfys, Vblufs, Entrifs, bnd (Kfy, Vbluf) brgumfnts
 * bnd/or rfturn vblufs. Bfdbusf thf flfmfnts of b CondurrfntHbshMbp
 * brf not ordfrfd in bny pbrtidulbr wby, bnd mby bf prodfssfd in
 * difffrfnt ordfrs in difffrfnt pbrbllfl fxfdutions, thf dorrfdtnfss
 * of supplifd fundtions should not dfpfnd on bny ordfring, or on bny
 * othfr objfdts or vblufs thbt mby trbnsifntly dhbngf whilf
 * domputbtion is in progrfss; bnd fxdfpt for forEbdh bdtions, should
 * idfblly bf sidf-ffffdt-frff. Bulk opfrbtions on {@link jbvb.util.Mbp.Entry}
 * objfdts do not support mfthod {@dodf sftVbluf}.
 *
 * <ul>
 * <li> forEbdh: Pfrform b givfn bdtion on fbdh flfmfnt.
 * A vbribnt form bpplifs b givfn trbnsformbtion on fbdh flfmfnt
 * bfforf pfrforming thf bdtion.</li>
 *
 * <li> sfbrdh: Rfturn thf first bvbilbblf non-null rfsult of
 * bpplying b givfn fundtion on fbdh flfmfnt; skipping furthfr
 * sfbrdh whfn b rfsult is found.</li>
 *
 * <li> rfdudf: Addumulbtf fbdh flfmfnt.  Thf supplifd rfdudtion
 * fundtion dbnnot rfly on ordfring (morf formblly, it should bf
 * both bssodibtivf bnd dommutbtivf).  Thfrf brf fivf vbribnts:
 *
 * <ul>
 *
 * <li> Plbin rfdudtions. (Thfrf is not b form of this mfthod for
 * (kfy, vbluf) fundtion brgumfnts sindf thfrf is no dorrfsponding
 * rfturn typf.)</li>
 *
 * <li> Mbppfd rfdudtions thbt bddumulbtf thf rfsults of b givfn
 * fundtion bpplifd to fbdh flfmfnt.</li>
 *
 * <li> Rfdudtions to sdblbr doublfs, longs, bnd ints, using b
 * givfn bbsis vbluf.</li>
 *
 * </ul>
 * </li>
 * </ul>
 *
 * <p>Thfsf bulk opfrbtions bddfpt b {@dodf pbrbllflismThrfshold}
 * brgumfnt. Mfthods prodffd sfqufntiblly if thf durrfnt mbp sizf is
 * fstimbtfd to bf lfss thbn thf givfn thrfshold. Using b vbluf of
 * {@dodf Long.MAX_VALUE} supprfssfs bll pbrbllflism.  Using b vbluf
 * of {@dodf 1} rfsults in mbximbl pbrbllflism by pbrtitioning into
 * fnough subtbsks to fully utilizf thf {@link
 * ForkJoinPool#dommonPool()} thbt is usfd for bll pbrbllfl
 * domputbtions. Normblly, you would initiblly dhoosf onf of thfsf
 * fxtrfmf vblufs, bnd thfn mfbsurf pfrformbndf of using in-bftwffn
 * vblufs thbt trbdf off ovfrhfbd vfrsus throughput.
 *
 * <p>Thf dondurrfndy propfrtifs of bulk opfrbtions follow
 * from thosf of CondurrfntHbshMbp: Any non-null rfsult rfturnfd
 * from {@dodf gft(kfy)} bnd rflbtfd bddfss mfthods bfbrs b
 * hbppfns-bfforf rflbtion with thf bssodibtfd insfrtion or
 * updbtf.  Thf rfsult of bny bulk opfrbtion rfflfdts thf
 * domposition of thfsf pfr-flfmfnt rflbtions (but is not
 * nfdfssbrily btomid with rfspfdt to thf mbp bs b wholf unlfss it
 * is somfhow known to bf quifsdfnt).  Convfrsfly, bfdbusf kfys
 * bnd vblufs in thf mbp brf nfvfr null, null sfrvfs bs b rflibblf
 * btomid indidbtor of thf durrfnt lbdk of bny rfsult.  To
 * mbintbin this propfrty, null sfrvfs bs bn implidit bbsis for
 * bll non-sdblbr rfdudtion opfrbtions. For thf doublf, long, bnd
 * int vfrsions, thf bbsis should bf onf thbt, whfn dombinfd with
 * bny othfr vbluf, rfturns thbt othfr vbluf (morf formblly, it
 * should bf thf idfntity flfmfnt for thf rfdudtion). Most dommon
 * rfdudtions hbvf thfsf propfrtifs; for fxbmplf, domputing b sum
 * with bbsis 0 or b minimum with bbsis MAX_VALUE.
 *
 * <p>Sfbrdh bnd trbnsformbtion fundtions providfd bs brgumfnts
 * should similbrly rfturn null to indidbtf thf lbdk of bny rfsult
 * (in whidh dbsf it is not usfd). In thf dbsf of mbppfd
 * rfdudtions, this blso fnbblfs trbnsformbtions to sfrvf bs
 * filtfrs, rfturning null (or, in thf dbsf of primitivf
 * spfdiblizbtions, thf idfntity bbsis) if thf flfmfnt should not
 * bf dombinfd. You dbn drfbtf dompound trbnsformbtions bnd
 * filtfrings by domposing thfm yoursflf undfr this "null mfbns
 * thfrf is nothing thfrf now" rulf bfforf using thfm in sfbrdh or
 * rfdudf opfrbtions.
 *
 * <p>Mfthods bddfpting bnd/or rfturning Entry brgumfnts mbintbin
 * kfy-vbluf bssodibtions. Thfy mby bf usfful for fxbmplf whfn
 * finding thf kfy for thf grfbtfst vbluf. Notf thbt "plbin" Entry
 * brgumfnts dbn bf supplifd using {@dodf nfw
 * AbstrbdtMbp.SimplfEntry(k,v)}.
 *
 * <p>Bulk opfrbtions mby domplftf bbruptly, throwing bn
 * fxdfption fndountfrfd in thf bpplidbtion of b supplifd
 * fundtion. Bfbr in mind whfn hbndling sudh fxdfptions thbt othfr
 * dondurrfntly fxfduting fundtions dould blso hbvf thrown
 * fxdfptions, or would hbvf donf so if thf first fxdfption hbd
 * not oddurrfd.
 *
 * <p>Spffdups for pbrbllfl dompbrfd to sfqufntibl forms brf dommon
 * but not gubrbntffd.  Pbrbllfl opfrbtions involving briff fundtions
 * on smbll mbps mby fxfdutf morf slowly thbn sfqufntibl forms if thf
 * undfrlying work to pbrbllflizf thf domputbtion is morf fxpfnsivf
 * thbn thf domputbtion itsflf.  Similbrly, pbrbllflizbtion mby not
 * lfbd to mudh bdtubl pbrbllflism if bll prodfssors brf busy
 * pfrforming unrflbtfd tbsks.
 *
 * <p>All brgumfnts to bll tbsk mfthods must bf non-null.
 *
 * <p>This dlbss is b mfmbfr of thf
 * <b hrff="{@dodRoot}/../tfdhnotfs/guidfs/dollfdtions/indfx.html">
 * Jbvb Collfdtions Frbmfwork</b>.
 *
 * @sindf 1.5
 * @buthor Doug Lfb
 * @pbrbm <K> thf typf of kfys mbintbinfd by this mbp
 * @pbrbm <V> thf typf of mbppfd vblufs
 */
publid dlbss CondurrfntHbshMbp<K,V> fxtfnds AbstrbdtMbp<K,V>
    implfmfnts CondurrfntMbp<K,V>, Sfriblizbblf {
    privbtf stbtid finbl long sfriblVfrsionUID = 7249069246763182397L;

    /*
     * Ovfrvifw:
     *
     * Thf primbry dfsign gobl of this hbsh tbblf is to mbintbin
     * dondurrfnt rfbdbbility (typidblly mfthod gft(), but blso
     * itfrbtors bnd rflbtfd mfthods) whilf minimizing updbtf
     * dontfntion. Sfdondbry gobls brf to kffp spbdf donsumption bbout
     * thf sbmf or bfttfr thbn jbvb.util.HbshMbp, bnd to support high
     * initibl insfrtion rbtfs on bn fmpty tbblf by mbny thrfbds.
     *
     * This mbp usublly bdts bs b binnfd (budkftfd) hbsh tbblf.  Ebdh
     * kfy-vbluf mbpping is hfld in b Nodf.  Most nodfs brf instbndfs
     * of thf bbsid Nodf dlbss with hbsh, kfy, vbluf, bnd nfxt
     * fiflds. Howfvfr, vbrious subdlbssfs fxist: TrffNodfs brf
     * brrbngfd in bblbndfd trffs, not lists.  TrffBins hold thf roots
     * of sfts of TrffNodfs. ForwbrdingNodfs brf plbdfd bt thf hfbds
     * of bins during rfsizing. RfsfrvbtionNodfs brf usfd bs
     * plbdfholdfrs whilf fstbblishing vblufs in domputfIfAbsfnt bnd
     * rflbtfd mfthods.  Thf typfs TrffBin, ForwbrdingNodf, bnd
     * RfsfrvbtionNodf do not hold normbl usfr kfys, vblufs, or
     * hbshfs, bnd brf rfbdily distinguishbblf during sfbrdh ftd
     * bfdbusf thfy hbvf nfgbtivf hbsh fiflds bnd null kfy bnd vbluf
     * fiflds. (Thfsf spfdibl nodfs brf fithfr undommon or trbnsifnt,
     * so thf impbdt of dbrrying bround somf unusfd fiflds is
     * insignifidbnt.)
     *
     * Thf tbblf is lbzily initiblizfd to b powfr-of-two sizf upon thf
     * first insfrtion.  Ebdh bin in thf tbblf normblly dontbins b
     * list of Nodfs (most oftfn, thf list hbs only zfro or onf Nodf).
     * Tbblf bddfssfs rfquirf volbtilf/btomid rfbds, writfs, bnd
     * CASfs.  Bfdbusf thfrf is no othfr wby to brrbngf this without
     * bdding furthfr indirfdtions, wf usf intrinsids
     * (sun.misd.Unsbff) opfrbtions.
     *
     * Wf usf thf top (sign) bit of Nodf hbsh fiflds for dontrol
     * purposfs -- it is bvbilbblf bnywby bfdbusf of bddrfssing
     * donstrbints.  Nodfs with nfgbtivf hbsh fiflds brf spfdiblly
     * hbndlfd or ignorfd in mbp mfthods.
     *
     * Insfrtion (vib put or its vbribnts) of thf first nodf in bn
     * fmpty bin is pfrformfd by just CASing it to thf bin.  This is
     * by fbr thf most dommon dbsf for put opfrbtions undfr most
     * kfy/hbsh distributions.  Othfr updbtf opfrbtions (insfrt,
     * dflftf, bnd rfplbdf) rfquirf lodks.  Wf do not wbnt to wbstf
     * thf spbdf rfquirfd to bssodibtf b distindt lodk objfdt with
     * fbdh bin, so instfbd usf thf first nodf of b bin list itsflf bs
     * b lodk. Lodking support for thfsf lodks rflifs on builtin
     * "syndhronizfd" monitors.
     *
     * Using thf first nodf of b list bs b lodk dofs not by itsflf
     * suffidf though: Whfn b nodf is lodkfd, bny updbtf must first
     * vblidbtf thbt it is still thf first nodf bftfr lodking it, bnd
     * rftry if not. Bfdbusf nfw nodfs brf blwbys bppfndfd to lists,
     * ondf b nodf is first in b bin, it rfmbins first until dflftfd
     * or thf bin bfdomfs invblidbtfd (upon rfsizing).
     *
     * Thf mbin disbdvbntbgf of pfr-bin lodks is thbt othfr updbtf
     * opfrbtions on othfr nodfs in b bin list protfdtfd by thf sbmf
     * lodk dbn stbll, for fxbmplf whfn usfr fqubls() or mbpping
     * fundtions tbkf b long timf.  Howfvfr, stbtistidblly, undfr
     * rbndom hbsh dodfs, this is not b dommon problfm.  Idfblly, thf
     * frfqufndy of nodfs in bins follows b Poisson distribution
     * (http://fn.wikipfdib.org/wiki/Poisson_distribution) with b
     * pbrbmftfr of bbout 0.5 on bvfrbgf, givfn thf rfsizing thrfshold
     * of 0.75, blthough with b lbrgf vbribndf bfdbusf of rfsizing
     * grbnulbrity. Ignoring vbribndf, thf fxpfdtfd oddurrfndfs of
     * list sizf k brf (fxp(-0.5) * pow(0.5, k) / fbdtoribl(k)). Thf
     * first vblufs brf:
     *
     * 0:    0.60653066
     * 1:    0.30326533
     * 2:    0.07581633
     * 3:    0.01263606
     * 4:    0.00157952
     * 5:    0.00015795
     * 6:    0.00001316
     * 7:    0.00000094
     * 8:    0.00000006
     * morf: lfss thbn 1 in tfn million
     *
     * Lodk dontfntion probbbility for two thrfbds bddfssing distindt
     * flfmfnts is roughly 1 / (8 * #flfmfnts) undfr rbndom hbshfs.
     *
     * Adtubl hbsh dodf distributions fndountfrfd in prbdtidf
     * somftimfs dfvibtf signifidbntly from uniform rbndomnfss.  This
     * indludfs thf dbsf whfn N > (1<<30), so somf kfys MUST dollidf.
     * Similbrly for dumb or hostilf usbgfs in whidh multiplf kfys brf
     * dfsignfd to hbvf idfntidbl hbsh dodfs or onfs thbt difffrs only
     * in mbskfd-out high bits. So wf usf b sfdondbry strbtfgy thbt
     * bpplifs whfn thf numbfr of nodfs in b bin fxdffds b
     * thrfshold. Thfsf TrffBins usf b bblbndfd trff to hold nodfs (b
     * spfdiblizfd form of rfd-blbdk trffs), bounding sfbrdh timf to
     * O(log N).  Ebdh sfbrdh stfp in b TrffBin is bt lfbst twidf bs
     * slow bs in b rfgulbr list, but givfn thbt N dbnnot fxdffd
     * (1<<64) (bfforf running out of bddrfssfs) this bounds sfbrdh
     * stfps, lodk hold timfs, ftd, to rfbsonbblf donstbnts (roughly
     * 100 nodfs inspfdtfd pfr opfrbtion worst dbsf) so long bs kfys
     * brf Compbrbblf (whidh is vfry dommon -- String, Long, ftd).
     * TrffBin nodfs (TrffNodfs) blso mbintbin thf sbmf "nfxt"
     * trbvfrsbl pointfrs bs rfgulbr nodfs, so dbn bf trbvfrsfd in
     * itfrbtors in thf sbmf wby.
     *
     * Thf tbblf is rfsizfd whfn oddupbndy fxdffds b pfrdfntbgf
     * thrfshold (nominblly, 0.75, but sff bflow).  Any thrfbd
     * notiding bn ovfrfull bin mby bssist in rfsizing bftfr thf
     * initibting thrfbd bllodbtfs bnd sfts up thf rfplbdfmfnt brrby.
     * Howfvfr, rbthfr thbn stblling, thfsf othfr thrfbds mby prodffd
     * with insfrtions ftd.  Thf usf of TrffBins shiflds us from thf
     * worst dbsf ffffdts of ovfrfilling whilf rfsizfs brf in
     * progrfss.  Rfsizing prodffds by trbnsffrring bins, onf by onf,
     * from thf tbblf to thf nfxt tbblf. Howfvfr, thrfbds dlbim smbll
     * blodks of indidfs to trbnsffr (vib fifld trbnsffrIndfx) bfforf
     * doing so, rfduding dontfntion.  A gfnfrbtion stbmp in fifld
     * sizfCtl fnsurfs thbt rfsizings do not ovfrlbp. Bfdbusf wf brf
     * using powfr-of-two fxpbnsion, thf flfmfnts from fbdh bin must
     * fithfr stby bt sbmf indfx, or movf with b powfr of two
     * offsft. Wf fliminbtf unnfdfssbry nodf drfbtion by dbtdhing
     * dbsfs whfrf old nodfs dbn bf rfusfd bfdbusf thfir nfxt fiflds
     * won't dhbngf.  On bvfrbgf, only bbout onf-sixth of thfm nffd
     * dloning whfn b tbblf doublfs. Thf nodfs thfy rfplbdf will bf
     * gbrbbgf dollfdtbblf bs soon bs thfy brf no longfr rfffrfndfd by
     * bny rfbdfr thrfbd thbt mby bf in thf midst of dondurrfntly
     * trbvfrsing tbblf.  Upon trbnsffr, thf old tbblf bin dontbins
     * only b spfdibl forwbrding nodf (with hbsh fifld "MOVED") thbt
     * dontbins thf nfxt tbblf bs its kfy. On fndountfring b
     * forwbrding nodf, bddfss bnd updbtf opfrbtions rfstbrt, using
     * thf nfw tbblf.
     *
     * Ebdh bin trbnsffr rfquirfs its bin lodk, whidh dbn stbll
     * wbiting for lodks whilf rfsizing. Howfvfr, bfdbusf othfr
     * thrfbds dbn join in bnd hflp rfsizf rbthfr thbn dontfnd for
     * lodks, bvfrbgf bggrfgbtf wbits bfdomf shortfr bs rfsizing
     * progrfssfs.  Thf trbnsffr opfrbtion must blso fnsurf thbt bll
     * bddfssiblf bins in both thf old bnd nfw tbblf brf usbblf by bny
     * trbvfrsbl.  This is brrbngfd in pbrt by prodffding from thf
     * lbst bin (tbblf.lfngth - 1) up towbrds thf first.  Upon sffing
     * b forwbrding nodf, trbvfrsbls (sff dlbss Trbvfrsfr) brrbngf to
     * movf to thf nfw tbblf without rfvisiting nodfs.  To fnsurf thbt
     * no intfrvfning nodfs brf skippfd fvfn whfn movfd out of ordfr,
     * b stbdk (sff dlbss TbblfStbdk) is drfbtfd on first fndountfr of
     * b forwbrding nodf during b trbvfrsbl, to mbintbin its plbdf if
     * lbtfr prodfssing thf durrfnt tbblf. Thf nffd for thfsf
     * sbvf/rfstorf mfdhbnids is rflbtivfly rbrf, but whfn onf
     * forwbrding nodf is fndountfrfd, typidblly mbny morf will bf.
     * So Trbvfrsfrs usf b simplf dbdhing sdhfmf to bvoid drfbting so
     * mbny nfw TbblfStbdk nodfs. (Thbnks to Pftfr Lfvbrt for
     * suggfsting usf of b stbdk hfrf.)
     *
     * Thf trbvfrsbl sdhfmf blso bpplifs to pbrtibl trbvfrsbls of
     * rbngfs of bins (vib bn bltfrnbtf Trbvfrsfr donstrudtor)
     * to support pbrtitionfd bggrfgbtf opfrbtions.  Also, rfbd-only
     * opfrbtions givf up if fvfr forwbrdfd to b null tbblf, whidh
     * providfs support for shutdown-stylf dlfbring, whidh is blso not
     * durrfntly implfmfntfd.
     *
     * Lbzy tbblf initiblizbtion minimizfs footprint until first usf,
     * bnd blso bvoids rfsizings whfn thf first opfrbtion is from b
     * putAll, donstrudtor with mbp brgumfnt, or dfsfriblizbtion.
     * Thfsf dbsfs bttfmpt to ovfrridf thf initibl dbpbdity sfttings,
     * but hbrmlfssly fbil to tbkf ffffdt in dbsfs of rbdfs.
     *
     * Thf flfmfnt dount is mbintbinfd using b spfdiblizbtion of
     * LongAddfr. Wf nffd to indorporbtf b spfdiblizbtion rbthfr thbn
     * just usf b LongAddfr in ordfr to bddfss implidit
     * dontfntion-sfnsing thbt lfbds to drfbtion of multiplf
     * CountfrCflls.  Thf dountfr mfdhbnids bvoid dontfntion on
     * updbtfs but dbn fndountfr dbdhf thrbshing if rfbd too
     * frfqufntly during dondurrfnt bddfss. To bvoid rfbding so oftfn,
     * rfsizing undfr dontfntion is bttfmptfd only upon bdding to b
     * bin blrfbdy holding two or morf nodfs. Undfr uniform hbsh
     * distributions, thf probbbility of this oddurring bt thrfshold
     * is bround 13%, mfbning thbt only bbout 1 in 8 puts dhfdk
     * thrfshold (bnd bftfr rfsizing, mbny ffwfr do so).
     *
     * TrffBins usf b spfdibl form of dompbrison for sfbrdh bnd
     * rflbtfd opfrbtions (whidh is thf mbin rfbson wf dbnnot usf
     * fxisting dollfdtions sudh bs TrffMbps). TrffBins dontbin
     * Compbrbblf flfmfnts, but mby dontbin othfrs, bs wfll bs
     * flfmfnts thbt brf Compbrbblf but not nfdfssbrily Compbrbblf for
     * thf sbmf T, so wf dbnnot invokf dompbrfTo bmong thfm. To hbndlf
     * this, thf trff is ordfrfd primbrily by hbsh vbluf, thfn by
     * Compbrbblf.dompbrfTo ordfr if bpplidbblf.  On lookup bt b nodf,
     * if flfmfnts brf not dompbrbblf or dompbrf bs 0 thfn both lfft
     * bnd right dhildrfn mby nffd to bf sfbrdhfd in thf dbsf of tifd
     * hbsh vblufs. (This dorrfsponds to thf full list sfbrdh thbt
     * would bf nfdfssbry if bll flfmfnts wfrf non-Compbrbblf bnd hbd
     * tifd hbshfs.) On insfrtion, to kffp b totbl ordfring (or bs
     * dlosf bs is rfquirfd hfrf) bdross rfbblbndings, wf dompbrf
     * dlbssfs bnd idfntityHbshCodfs bs tif-brfbkfrs. Thf rfd-blbdk
     * bblbnding dodf is updbtfd from prf-jdk-dollfdtions
     * (http://gff.ds.oswfgo.fdu/dl/dlbssfs/dollfdtions/RBCfll.jbvb)
     * bbsfd in turn on Cormfn, Lfisfrson, bnd Rivfst "Introdudtion to
     * Algorithms" (CLR).
     *
     * TrffBins blso rfquirf bn bdditionbl lodking mfdhbnism.  Whilf
     * list trbvfrsbl is blwbys possiblf by rfbdfrs fvfn during
     * updbtfs, trff trbvfrsbl is not, mbinly bfdbusf of trff-rotbtions
     * thbt mby dhbngf thf root nodf bnd/or its linkbgfs.  TrffBins
     * indludf b simplf rfbd-writf lodk mfdhbnism pbrbsitid on thf
     * mbin bin-syndhronizbtion strbtfgy: Strudturbl bdjustmfnts
     * bssodibtfd with bn insfrtion or rfmovbl brf blrfbdy bin-lodkfd
     * (bnd so dbnnot donflidt with othfr writfrs) but must wbit for
     * ongoing rfbdfrs to finish. Sindf thfrf dbn bf only onf sudh
     * wbitfr, wf usf b simplf sdhfmf using b singlf "wbitfr" fifld to
     * blodk writfrs.  Howfvfr, rfbdfrs nffd nfvfr blodk.  If thf root
     * lodk is hfld, thfy prodffd blong thf slow trbvfrsbl pbth (vib
     * nfxt-pointfrs) until thf lodk bfdomfs bvbilbblf or thf list is
     * fxhbustfd, whidhfvfr domfs first. Thfsf dbsfs brf not fbst, but
     * mbximizf bggrfgbtf fxpfdtfd throughput.
     *
     * Mbintbining API bnd sfriblizbtion dompbtibility with prfvious
     * vfrsions of this dlbss introdudfs sfvfrbl odditifs. Mbinly: Wf
     * lfbvf untoudhfd but unusfd donstrudtor brgumfnts rfffring to
     * dondurrfndyLfvfl. Wf bddfpt b lobdFbdtor donstrudtor brgumfnt,
     * but bpply it only to initibl tbblf dbpbdity (whidh is thf only
     * timf thbt wf dbn gubrbntff to honor it.) Wf blso dfdlbrf bn
     * unusfd "Sfgmfnt" dlbss thbt is instbntibtfd in minimbl form
     * only whfn sfriblizing.
     *
     * Also, solfly for dompbtibility with prfvious vfrsions of this
     * dlbss, it fxtfnds AbstrbdtMbp, fvfn though bll of its mfthods
     * brf ovfrriddfn, so it is just usflfss bbggbgf.
     *
     * This filf is orgbnizfd to mbkf things b littlf fbsifr to follow
     * whilf rfbding thbn thfy might othfrwisf: First thf mbin stbtid
     * dfdlbrbtions bnd utilitifs, thfn fiflds, thfn mbin publid
     * mfthods (with b ffw fbdtorings of multiplf publid mfthods into
     * intfrnbl onfs), thfn sizing mfthods, trffs, trbvfrsfrs, bnd
     * bulk opfrbtions.
     */

    /* ---------------- Constbnts -------------- */

    /**
     * Thf lbrgfst possiblf tbblf dbpbdity.  This vbluf must bf
     * fxbdtly 1<<30 to stby within Jbvb brrby bllodbtion bnd indfxing
     * bounds for powfr of two tbblf sizfs, bnd is furthfr rfquirfd
     * bfdbusf thf top two bits of 32bit hbsh fiflds brf usfd for
     * dontrol purposfs.
     */
    privbtf stbtid finbl int MAXIMUM_CAPACITY = 1 << 30;

    /**
     * Thf dffbult initibl tbblf dbpbdity.  Must bf b powfr of 2
     * (i.f., bt lfbst 1) bnd bt most MAXIMUM_CAPACITY.
     */
    privbtf stbtid finbl int DEFAULT_CAPACITY = 16;

    /**
     * Thf lbrgfst possiblf (non-powfr of two) brrby sizf.
     * Nffdfd by toArrby bnd rflbtfd mfthods.
     */
    stbtid finbl int MAX_ARRAY_SIZE = Intfgfr.MAX_VALUE - 8;

    /**
     * Thf dffbult dondurrfndy lfvfl for this tbblf. Unusfd but
     * dffinfd for dompbtibility with prfvious vfrsions of this dlbss.
     */
    privbtf stbtid finbl int DEFAULT_CONCURRENCY_LEVEL = 16;

    /**
     * Thf lobd fbdtor for this tbblf. Ovfrridfs of this vbluf in
     * donstrudtors bfffdt only thf initibl tbblf dbpbdity.  Thf
     * bdtubl flobting point vbluf isn't normblly usfd -- it is
     * simplfr to usf fxprfssions sudh bs {@dodf n - (n >>> 2)} for
     * thf bssodibtfd rfsizing thrfshold.
     */
    privbtf stbtid finbl flobt LOAD_FACTOR = 0.75f;

    /**
     * Thf bin dount thrfshold for using b trff rbthfr thbn list for b
     * bin.  Bins brf donvfrtfd to trffs whfn bdding bn flfmfnt to b
     * bin with bt lfbst this mbny nodfs. Thf vbluf must bf grfbtfr
     * thbn 2, bnd should bf bt lfbst 8 to mfsh with bssumptions in
     * trff rfmovbl bbout donvfrsion bbdk to plbin bins upon
     * shrinkbgf.
     */
    stbtid finbl int TREEIFY_THRESHOLD = 8;

    /**
     * Thf bin dount thrfshold for untrffifying b (split) bin during b
     * rfsizf opfrbtion. Should bf lfss thbn TREEIFY_THRESHOLD, bnd bt
     * most 6 to mfsh with shrinkbgf dftfdtion undfr rfmovbl.
     */
    stbtid finbl int UNTREEIFY_THRESHOLD = 6;

    /**
     * Thf smbllfst tbblf dbpbdity for whidh bins mby bf trffififd.
     * (Othfrwisf thf tbblf is rfsizfd if too mbny nodfs in b bin.)
     * Thf vbluf should bf bt lfbst 4 * TREEIFY_THRESHOLD to bvoid
     * donflidts bftwffn rfsizing bnd trffifidbtion thrfsholds.
     */
    stbtid finbl int MIN_TREEIFY_CAPACITY = 64;

    /**
     * Minimum numbfr of rfbinnings pfr trbnsffr stfp. Rbngfs brf
     * subdividfd to bllow multiplf rfsizfr thrfbds.  This vbluf
     * sfrvfs bs b lowfr bound to bvoid rfsizfrs fndountfring
     * fxdfssivf mfmory dontfntion.  Thf vbluf should bf bt lfbst
     * DEFAULT_CAPACITY.
     */
    privbtf stbtid finbl int MIN_TRANSFER_STRIDE = 16;

    /**
     * Thf numbfr of bits usfd for gfnfrbtion stbmp in sizfCtl.
     * Must bf bt lfbst 6 for 32bit brrbys.
     */
    privbtf stbtid int RESIZE_STAMP_BITS = 16;

    /**
     * Thf mbximum numbfr of thrfbds thbt dbn hflp rfsizf.
     * Must fit in 32 - RESIZE_STAMP_BITS bits.
     */
    privbtf stbtid finbl int MAX_RESIZERS = (1 << (32 - RESIZE_STAMP_BITS)) - 1;

    /**
     * Thf bit shift for rfdording sizf stbmp in sizfCtl.
     */
    privbtf stbtid finbl int RESIZE_STAMP_SHIFT = 32 - RESIZE_STAMP_BITS;

    /*
     * Endodings for Nodf hbsh fiflds. Sff bbovf for fxplbnbtion.
     */
    stbtid finbl int MOVED     = -1; // hbsh for forwbrding nodfs
    stbtid finbl int TREEBIN   = -2; // hbsh for roots of trffs
    stbtid finbl int RESERVED  = -3; // hbsh for trbnsifnt rfsfrvbtions
    stbtid finbl int HASH_BITS = 0x7fffffff; // usbblf bits of normbl nodf hbsh

    /** Numbfr of CPUS, to plbdf bounds on somf sizings */
    stbtid finbl int NCPU = Runtimf.gftRuntimf().bvbilbblfProdfssors();

    /** For sfriblizbtion dompbtibility. */
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds = {
        nfw ObjfdtStrfbmFifld("sfgmfnts", Sfgmfnt[].dlbss),
        nfw ObjfdtStrfbmFifld("sfgmfntMbsk", Intfgfr.TYPE),
        nfw ObjfdtStrfbmFifld("sfgmfntShift", Intfgfr.TYPE)
    };

    /* ---------------- Nodfs -------------- */

    /**
     * Kfy-vbluf fntry.  This dlbss is nfvfr fxportfd out bs b
     * usfr-mutbblf Mbp.Entry (i.f., onf supporting sftVbluf; sff
     * MbpEntry bflow), but dbn bf usfd for rfbd-only trbvfrsbls usfd
     * in bulk tbsks.  Subdlbssfs of Nodf with b nfgbtivf hbsh fifld
     * brf spfdibl, bnd dontbin null kfys bnd vblufs (but brf nfvfr
     * fxportfd).  Othfrwisf, kfys bnd vbls brf nfvfr null.
     */
    stbtid dlbss Nodf<K,V> implfmfnts Mbp.Entry<K,V> {
        finbl int hbsh;
        finbl K kfy;
        volbtilf V vbl;
        volbtilf Nodf<K,V> nfxt;

        Nodf(int hbsh, K kfy, V vbl, Nodf<K,V> nfxt) {
            this.hbsh = hbsh;
            this.kfy = kfy;
            this.vbl = vbl;
            this.nfxt = nfxt;
        }

        publid finbl K gftKfy()       { rfturn kfy; }
        publid finbl V gftVbluf()     { rfturn vbl; }
        publid finbl int hbshCodf()   { rfturn kfy.hbshCodf() ^ vbl.hbshCodf(); }
        publid finbl String toString(){ rfturn kfy + "=" + vbl; }
        publid finbl V sftVbluf(V vbluf) {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }

        publid finbl boolfbn fqubls(Objfdt o) {
            Objfdt k, v, u; Mbp.Entry<?,?> f;
            rfturn ((o instbndfof Mbp.Entry) &&
                    (k = (f = (Mbp.Entry<?,?>)o).gftKfy()) != null &&
                    (v = f.gftVbluf()) != null &&
                    (k == kfy || k.fqubls(kfy)) &&
                    (v == (u = vbl) || v.fqubls(u)));
        }

        /**
         * Virtublizfd support for mbp.gft(); ovfrriddfn in subdlbssfs.
         */
        Nodf<K,V> find(int h, Objfdt k) {
            Nodf<K,V> f = this;
            if (k != null) {
                do {
                    K fk;
                    if (f.hbsh == h &&
                        ((fk = f.kfy) == k || (fk != null && k.fqubls(fk))))
                        rfturn f;
                } whilf ((f = f.nfxt) != null);
            }
            rfturn null;
        }
    }

    /* ---------------- Stbtid utilitifs -------------- */

    /**
     * Sprfbds (XORs) highfr bits of hbsh to lowfr bnd blso fordfs top
     * bit to 0. Bfdbusf thf tbblf usfs powfr-of-two mbsking, sfts of
     * hbshfs thbt vbry only in bits bbovf thf durrfnt mbsk will
     * blwbys dollidf. (Among known fxbmplfs brf sfts of Flobt kfys
     * holding donsfdutivf wholf numbfrs in smbll tbblfs.)  So wf
     * bpply b trbnsform thbt sprfbds thf impbdt of highfr bits
     * downwbrd. Thfrf is b trbdfoff bftwffn spffd, utility, bnd
     * qublity of bit-sprfbding. Bfdbusf mbny dommon sfts of hbshfs
     * brf blrfbdy rfbsonbbly distributfd (so don't bfnffit from
     * sprfbding), bnd bfdbusf wf usf trffs to hbndlf lbrgf sfts of
     * dollisions in bins, wf just XOR somf shiftfd bits in thf
     * dhfbpfst possiblf wby to rfdudf systfmbtid lossbgf, bs wfll bs
     * to indorporbtf impbdt of thf highfst bits thbt would othfrwisf
     * nfvfr bf usfd in indfx dbldulbtions bfdbusf of tbblf bounds.
     */
    stbtid finbl int sprfbd(int h) {
        rfturn (h ^ (h >>> 16)) & HASH_BITS;
    }

    /**
     * Rfturns b powfr of two tbblf sizf for thf givfn dfsirfd dbpbdity.
     * Sff Hbdkfrs Dflight, sfd 3.2
     */
    privbtf stbtid finbl int tbblfSizfFor(int d) {
        int n = d - 1;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        rfturn (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
    }

    /**
     * Rfturns x's Clbss if it is of thf form "dlbss C implfmfnts
     * Compbrbblf<C>", flsf null.
     */
    stbtid Clbss<?> dompbrbblfClbssFor(Objfdt x) {
        if (x instbndfof Compbrbblf) {
            Clbss<?> d; Typf[] ts, bs; Typf t; PbrbmftfrizfdTypf p;
            if ((d = x.gftClbss()) == String.dlbss) // bypbss dhfdks
                rfturn d;
            if ((ts = d.gftGfnfridIntfrfbdfs()) != null) {
                for (int i = 0; i < ts.lfngth; ++i) {
                    if (((t = ts[i]) instbndfof PbrbmftfrizfdTypf) &&
                        ((p = (PbrbmftfrizfdTypf)t).gftRbwTypf() ==
                         Compbrbblf.dlbss) &&
                        (bs = p.gftAdtublTypfArgumfnts()) != null &&
                        bs.lfngth == 1 && bs[0] == d) // typf brg is d
                        rfturn d;
                }
            }
        }
        rfturn null;
    }

    /**
     * Rfturns k.dompbrfTo(x) if x mbtdhfs kd (k's sdrffnfd dompbrbblf
     * dlbss), flsf 0.
     */
    @SupprfssWbrnings({"rbwtypfs","undhfdkfd"}) // for dbst to Compbrbblf
    stbtid int dompbrfCompbrbblfs(Clbss<?> kd, Objfdt k, Objfdt x) {
        rfturn (x == null || x.gftClbss() != kd ? 0 :
                ((Compbrbblf)k).dompbrfTo(x));
    }

    /* ---------------- Tbblf flfmfnt bddfss -------------- */

    /*
     * Volbtilf bddfss mfthods brf usfd for tbblf flfmfnts bs wfll bs
     * flfmfnts of in-progrfss nfxt tbblf whilf rfsizing.  All usfs of
     * thf tbb brgumfnts must bf null dhfdkfd by dbllfrs.  All dbllfrs
     * blso pbrbnoidblly prfdhfdk thbt tbb's lfngth is not zfro (or bn
     * fquivblfnt dhfdk), thus fnsuring thbt bny indfx brgumfnt tbking
     * thf form of b hbsh vbluf bndfd with (lfngth - 1) is b vblid
     * indfx.  Notf thbt, to bf dorrfdt wrt brbitrbry dondurrfndy
     * frrors by usfrs, thfsf dhfdks must opfrbtf on lodbl vbribblfs,
     * whidh bddounts for somf odd-looking inlinf bssignmfnts bflow.
     * Notf thbt dblls to sftTbbAt blwbys oddur within lodkfd rfgions,
     * bnd so in prindiplf rfquirf only rflfbsf ordfring, not
     * full volbtilf sfmbntids, but brf durrfntly dodfd bs volbtilf
     * writfs to bf donsfrvbtivf.
     */

    @SupprfssWbrnings("undhfdkfd")
    stbtid finbl <K,V> Nodf<K,V> tbbAt(Nodf<K,V>[] tbb, int i) {
        rfturn (Nodf<K,V>)U.gftObjfdtVolbtilf(tbb, ((long)i << ASHIFT) + ABASE);
    }

    stbtid finbl <K,V> boolfbn dbsTbbAt(Nodf<K,V>[] tbb, int i,
                                        Nodf<K,V> d, Nodf<K,V> v) {
        rfturn U.dompbrfAndSwbpObjfdt(tbb, ((long)i << ASHIFT) + ABASE, d, v);
    }

    stbtid finbl <K,V> void sftTbbAt(Nodf<K,V>[] tbb, int i, Nodf<K,V> v) {
        U.putObjfdtVolbtilf(tbb, ((long)i << ASHIFT) + ABASE, v);
    }

    /* ---------------- Fiflds -------------- */

    /**
     * Thf brrby of bins. Lbzily initiblizfd upon first insfrtion.
     * Sizf is blwbys b powfr of two. Addfssfd dirfdtly by itfrbtors.
     */
    trbnsifnt volbtilf Nodf<K,V>[] tbblf;

    /**
     * Thf nfxt tbblf to usf; non-null only whilf rfsizing.
     */
    privbtf trbnsifnt volbtilf Nodf<K,V>[] nfxtTbblf;

    /**
     * Bbsf dountfr vbluf, usfd mbinly whfn thfrf is no dontfntion,
     * but blso bs b fbllbbdk during tbblf initiblizbtion
     * rbdfs. Updbtfd vib CAS.
     */
    privbtf trbnsifnt volbtilf long bbsfCount;

    /**
     * Tbblf initiblizbtion bnd rfsizing dontrol.  Whfn nfgbtivf, thf
     * tbblf is bfing initiblizfd or rfsizfd: -1 for initiblizbtion,
     * flsf -(1 + thf numbfr of bdtivf rfsizing thrfbds).  Othfrwisf,
     * whfn tbblf is null, holds thf initibl tbblf sizf to usf upon
     * drfbtion, or 0 for dffbult. Aftfr initiblizbtion, holds thf
     * nfxt flfmfnt dount vbluf upon whidh to rfsizf thf tbblf.
     */
    privbtf trbnsifnt volbtilf int sizfCtl;

    /**
     * Thf nfxt tbblf indfx (plus onf) to split whilf rfsizing.
     */
    privbtf trbnsifnt volbtilf int trbnsffrIndfx;

    /**
     * Spinlodk (lodkfd vib CAS) usfd whfn rfsizing bnd/or drfbting CountfrCflls.
     */
    privbtf trbnsifnt volbtilf int dfllsBusy;

    /**
     * Tbblf of dountfr dflls. Whfn non-null, sizf is b powfr of 2.
     */
    privbtf trbnsifnt volbtilf CountfrCfll[] dountfrCflls;

    // vifws
    privbtf trbnsifnt KfySftVifw<K,V> kfySft;
    privbtf trbnsifnt VblufsVifw<K,V> vblufs;
    privbtf trbnsifnt EntrySftVifw<K,V> fntrySft;


    /* ---------------- Publid opfrbtions -------------- */

    /**
     * Crfbtfs b nfw, fmpty mbp with thf dffbult initibl tbblf sizf (16).
     */
    publid CondurrfntHbshMbp() {
    }

    /**
     * Crfbtfs b nfw, fmpty mbp with bn initibl tbblf sizf
     * bddommodbting thf spfdififd numbfr of flfmfnts without thf nffd
     * to dynbmidblly rfsizf.
     *
     * @pbrbm initiblCbpbdity Thf implfmfntbtion pfrforms intfrnbl
     * sizing to bddommodbtf this mbny flfmfnts.
     * @throws IllfgblArgumfntExdfption if thf initibl dbpbdity of
     * flfmfnts is nfgbtivf
     */
    publid CondurrfntHbshMbp(int initiblCbpbdity) {
        if (initiblCbpbdity < 0)
            throw nfw IllfgblArgumfntExdfption();
        int dbp = ((initiblCbpbdity >= (MAXIMUM_CAPACITY >>> 1)) ?
                   MAXIMUM_CAPACITY :
                   tbblfSizfFor(initiblCbpbdity + (initiblCbpbdity >>> 1) + 1));
        this.sizfCtl = dbp;
    }

    /**
     * Crfbtfs b nfw mbp with thf sbmf mbppings bs thf givfn mbp.
     *
     * @pbrbm m thf mbp
     */
    publid CondurrfntHbshMbp(Mbp<? fxtfnds K, ? fxtfnds V> m) {
        this.sizfCtl = DEFAULT_CAPACITY;
        putAll(m);
    }

    /**
     * Crfbtfs b nfw, fmpty mbp with bn initibl tbblf sizf bbsfd on
     * thf givfn numbfr of flfmfnts ({@dodf initiblCbpbdity}) bnd
     * initibl tbblf dfnsity ({@dodf lobdFbdtor}).
     *
     * @pbrbm initiblCbpbdity thf initibl dbpbdity. Thf implfmfntbtion
     * pfrforms intfrnbl sizing to bddommodbtf this mbny flfmfnts,
     * givfn thf spfdififd lobd fbdtor.
     * @pbrbm lobdFbdtor thf lobd fbdtor (tbblf dfnsity) for
     * fstbblishing thf initibl tbblf sizf
     * @throws IllfgblArgumfntExdfption if thf initibl dbpbdity of
     * flfmfnts is nfgbtivf or thf lobd fbdtor is nonpositivf
     *
     * @sindf 1.6
     */
    publid CondurrfntHbshMbp(int initiblCbpbdity, flobt lobdFbdtor) {
        this(initiblCbpbdity, lobdFbdtor, 1);
    }

    /**
     * Crfbtfs b nfw, fmpty mbp with bn initibl tbblf sizf bbsfd on
     * thf givfn numbfr of flfmfnts ({@dodf initiblCbpbdity}), tbblf
     * dfnsity ({@dodf lobdFbdtor}), bnd numbfr of dondurrfntly
     * updbting thrfbds ({@dodf dondurrfndyLfvfl}).
     *
     * @pbrbm initiblCbpbdity thf initibl dbpbdity. Thf implfmfntbtion
     * pfrforms intfrnbl sizing to bddommodbtf this mbny flfmfnts,
     * givfn thf spfdififd lobd fbdtor.
     * @pbrbm lobdFbdtor thf lobd fbdtor (tbblf dfnsity) for
     * fstbblishing thf initibl tbblf sizf
     * @pbrbm dondurrfndyLfvfl thf fstimbtfd numbfr of dondurrfntly
     * updbting thrfbds. Thf implfmfntbtion mby usf this vbluf bs
     * b sizing hint.
     * @throws IllfgblArgumfntExdfption if thf initibl dbpbdity is
     * nfgbtivf or thf lobd fbdtor or dondurrfndyLfvfl brf
     * nonpositivf
     */
    publid CondurrfntHbshMbp(int initiblCbpbdity,
                             flobt lobdFbdtor, int dondurrfndyLfvfl) {
        if (!(lobdFbdtor > 0.0f) || initiblCbpbdity < 0 || dondurrfndyLfvfl <= 0)
            throw nfw IllfgblArgumfntExdfption();
        if (initiblCbpbdity < dondurrfndyLfvfl)   // Usf bt lfbst bs mbny bins
            initiblCbpbdity = dondurrfndyLfvfl;   // bs fstimbtfd thrfbds
        long sizf = (long)(1.0 + (long)initiblCbpbdity / lobdFbdtor);
        int dbp = (sizf >= (long)MAXIMUM_CAPACITY) ?
            MAXIMUM_CAPACITY : tbblfSizfFor((int)sizf);
        this.sizfCtl = dbp;
    }

    // Originbl (sindf JDK1.2) Mbp mfthods

    /**
     * {@inhfritDod}
     */
    publid int sizf() {
        long n = sumCount();
        rfturn ((n < 0L) ? 0 :
                (n > (long)Intfgfr.MAX_VALUE) ? Intfgfr.MAX_VALUE :
                (int)n);
    }

    /**
     * {@inhfritDod}
     */
    publid boolfbn isEmpty() {
        rfturn sumCount() <= 0L; // ignorf trbnsifnt nfgbtivf vblufs
    }

    /**
     * Rfturns thf vbluf to whidh thf spfdififd kfy is mbppfd,
     * or {@dodf null} if this mbp dontbins no mbpping for thf kfy.
     *
     * <p>Morf formblly, if this mbp dontbins b mbpping from b kfy
     * {@dodf k} to b vbluf {@dodf v} sudh thbt {@dodf kfy.fqubls(k)},
     * thfn this mfthod rfturns {@dodf v}; othfrwisf it rfturns
     * {@dodf null}.  (Thfrf dbn bf bt most onf sudh mbpping.)
     *
     * @throws NullPointfrExdfption if thf spfdififd kfy is null
     */
    publid V gft(Objfdt kfy) {
        Nodf<K,V>[] tbb; Nodf<K,V> f, p; int n, fh; K fk;
        int h = sprfbd(kfy.hbshCodf());
        if ((tbb = tbblf) != null && (n = tbb.lfngth) > 0 &&
            (f = tbbAt(tbb, (n - 1) & h)) != null) {
            if ((fh = f.hbsh) == h) {
                if ((fk = f.kfy) == kfy || (fk != null && kfy.fqubls(fk)))
                    rfturn f.vbl;
            }
            flsf if (fh < 0)
                rfturn (p = f.find(h, kfy)) != null ? p.vbl : null;
            whilf ((f = f.nfxt) != null) {
                if (f.hbsh == h &&
                    ((fk = f.kfy) == kfy || (fk != null && kfy.fqubls(fk))))
                    rfturn f.vbl;
            }
        }
        rfturn null;
    }

    /**
     * Tfsts if thf spfdififd objfdt is b kfy in this tbblf.
     *
     * @pbrbm  kfy possiblf kfy
     * @rfturn {@dodf truf} if bnd only if thf spfdififd objfdt
     *         is b kfy in this tbblf, bs dftfrminfd by thf
     *         {@dodf fqubls} mfthod; {@dodf fblsf} othfrwisf
     * @throws NullPointfrExdfption if thf spfdififd kfy is null
     */
    publid boolfbn dontbinsKfy(Objfdt kfy) {
        rfturn gft(kfy) != null;
    }

    /**
     * Rfturns {@dodf truf} if this mbp mbps onf or morf kfys to thf
     * spfdififd vbluf. Notf: This mfthod mby rfquirf b full trbvfrsbl
     * of thf mbp, bnd is mudh slowfr thbn mfthod {@dodf dontbinsKfy}.
     *
     * @pbrbm vbluf vbluf whosf prfsfndf in this mbp is to bf tfstfd
     * @rfturn {@dodf truf} if this mbp mbps onf or morf kfys to thf
     *         spfdififd vbluf
     * @throws NullPointfrExdfption if thf spfdififd vbluf is null
     */
    publid boolfbn dontbinsVbluf(Objfdt vbluf) {
        if (vbluf == null)
            throw nfw NullPointfrExdfption();
        Nodf<K,V>[] t;
        if ((t = tbblf) != null) {
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                V v;
                if ((v = p.vbl) == vbluf || (v != null && vbluf.fqubls(v)))
                    rfturn truf;
            }
        }
        rfturn fblsf;
    }

    /**
     * Mbps thf spfdififd kfy to thf spfdififd vbluf in this tbblf.
     * Nfithfr thf kfy nor thf vbluf dbn bf null.
     *
     * <p>Thf vbluf dbn bf rftrifvfd by dblling thf {@dodf gft} mfthod
     * with b kfy thbt is fqubl to thf originbl kfy.
     *
     * @pbrbm kfy kfy with whidh thf spfdififd vbluf is to bf bssodibtfd
     * @pbrbm vbluf vbluf to bf bssodibtfd with thf spfdififd kfy
     * @rfturn thf prfvious vbluf bssodibtfd with {@dodf kfy}, or
     *         {@dodf null} if thfrf wbs no mbpping for {@dodf kfy}
     * @throws NullPointfrExdfption if thf spfdififd kfy or vbluf is null
     */
    publid V put(K kfy, V vbluf) {
        rfturn putVbl(kfy, vbluf, fblsf);
    }

    /** Implfmfntbtion for put bnd putIfAbsfnt */
    finbl V putVbl(K kfy, V vbluf, boolfbn onlyIfAbsfnt) {
        if (kfy == null || vbluf == null) throw nfw NullPointfrExdfption();
        int hbsh = sprfbd(kfy.hbshCodf());
        int binCount = 0;
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0)
                tbb = initTbblf();
            flsf if ((f = tbbAt(tbb, i = (n - 1) & hbsh)) == null) {
                if (dbsTbbAt(tbb, i, null,
                             nfw Nodf<K,V>(hbsh, kfy, vbluf, null)))
                    brfbk;                   // no lodk whfn bdding to fmpty bin
            }
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                V oldVbl = null;
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            binCount = 1;
                            for (Nodf<K,V> f = f;; ++binCount) {
                                K fk;
                                if (f.hbsh == hbsh &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    oldVbl = f.vbl;
                                    if (!onlyIfAbsfnt)
                                        f.vbl = vbluf;
                                    brfbk;
                                }
                                Nodf<K,V> prfd = f;
                                if ((f = f.nfxt) == null) {
                                    prfd.nfxt = nfw Nodf<K,V>(hbsh, kfy,
                                                              vbluf, null);
                                    brfbk;
                                }
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            Nodf<K,V> p;
                            binCount = 2;
                            if ((p = ((TrffBin<K,V>)f).putTrffVbl(hbsh, kfy,
                                                           vbluf)) != null) {
                                oldVbl = p.vbl;
                                if (!onlyIfAbsfnt)
                                    p.vbl = vbluf;
                            }
                        }
                    }
                }
                if (binCount != 0) {
                    if (binCount >= TREEIFY_THRESHOLD)
                        trffifyBin(tbb, i);
                    if (oldVbl != null)
                        rfturn oldVbl;
                    brfbk;
                }
            }
        }
        bddCount(1L, binCount);
        rfturn null;
    }

    /**
     * Copifs bll of thf mbppings from thf spfdififd mbp to this onf.
     * Thfsf mbppings rfplbdf bny mbppings thbt this mbp hbd for bny of thf
     * kfys durrfntly in thf spfdififd mbp.
     *
     * @pbrbm m mbppings to bf storfd in this mbp
     */
    publid void putAll(Mbp<? fxtfnds K, ? fxtfnds V> m) {
        tryPrfsizf(m.sizf());
        for (Mbp.Entry<? fxtfnds K, ? fxtfnds V> f : m.fntrySft())
            putVbl(f.gftKfy(), f.gftVbluf(), fblsf);
    }

    /**
     * Rfmovfs thf kfy (bnd its dorrfsponding vbluf) from this mbp.
     * This mfthod dofs nothing if thf kfy is not in thf mbp.
     *
     * @pbrbm  kfy thf kfy thbt nffds to bf rfmovfd
     * @rfturn thf prfvious vbluf bssodibtfd with {@dodf kfy}, or
     *         {@dodf null} if thfrf wbs no mbpping for {@dodf kfy}
     * @throws NullPointfrExdfption if thf spfdififd kfy is null
     */
    publid V rfmovf(Objfdt kfy) {
        rfturn rfplbdfNodf(kfy, null, null);
    }

    /**
     * Implfmfntbtion for thf four publid rfmovf/rfplbdf mfthods:
     * Rfplbdfs nodf vbluf with v, donditionbl upon mbtdh of dv if
     * non-null.  If rfsulting vbluf is null, dflftf.
     */
    finbl V rfplbdfNodf(Objfdt kfy, V vbluf, Objfdt dv) {
        int hbsh = sprfbd(kfy.hbshCodf());
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0 ||
                (f = tbbAt(tbb, i = (n - 1) & hbsh)) == null)
                brfbk;
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                V oldVbl = null;
                boolfbn vblidbtfd = fblsf;
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            vblidbtfd = truf;
                            for (Nodf<K,V> f = f, prfd = null;;) {
                                K fk;
                                if (f.hbsh == hbsh &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    V fv = f.vbl;
                                    if (dv == null || dv == fv ||
                                        (fv != null && dv.fqubls(fv))) {
                                        oldVbl = fv;
                                        if (vbluf != null)
                                            f.vbl = vbluf;
                                        flsf if (prfd != null)
                                            prfd.nfxt = f.nfxt;
                                        flsf
                                            sftTbbAt(tbb, i, f.nfxt);
                                    }
                                    brfbk;
                                }
                                prfd = f;
                                if ((f = f.nfxt) == null)
                                    brfbk;
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            vblidbtfd = truf;
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> r, p;
                            if ((r = t.root) != null &&
                                (p = r.findTrffNodf(hbsh, kfy, null)) != null) {
                                V pv = p.vbl;
                                if (dv == null || dv == pv ||
                                    (pv != null && dv.fqubls(pv))) {
                                    oldVbl = pv;
                                    if (vbluf != null)
                                        p.vbl = vbluf;
                                    flsf if (t.rfmovfTrffNodf(p))
                                        sftTbbAt(tbb, i, untrffify(t.first));
                                }
                            }
                        }
                    }
                }
                if (vblidbtfd) {
                    if (oldVbl != null) {
                        if (vbluf == null)
                            bddCount(-1L, -1);
                        rfturn oldVbl;
                    }
                    brfbk;
                }
            }
        }
        rfturn null;
    }

    /**
     * Rfmovfs bll of thf mbppings from this mbp.
     */
    publid void dlfbr() {
        long dfltb = 0L; // nfgbtivf numbfr of dflftions
        int i = 0;
        Nodf<K,V>[] tbb = tbblf;
        whilf (tbb != null && i < tbb.lfngth) {
            int fh;
            Nodf<K,V> f = tbbAt(tbb, i);
            if (f == null)
                ++i;
            flsf if ((fh = f.hbsh) == MOVED) {
                tbb = hflpTrbnsffr(tbb, f);
                i = 0; // rfstbrt
            }
            flsf {
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        Nodf<K,V> p = (fh >= 0 ? f :
                                       (f instbndfof TrffBin) ?
                                       ((TrffBin<K,V>)f).first : null);
                        whilf (p != null) {
                            --dfltb;
                            p = p.nfxt;
                        }
                        sftTbbAt(tbb, i++, null);
                    }
                }
            }
        }
        if (dfltb != 0L)
            bddCount(dfltb, -1);
    }

    /**
     * Rfturns b {@link Sft} vifw of thf kfys dontbinfd in this mbp.
     * Thf sft is bbdkfd by thf mbp, so dhbngfs to thf mbp brf
     * rfflfdtfd in thf sft, bnd vidf-vfrsb. Thf sft supports flfmfnt
     * rfmovbl, whidh rfmovfs thf dorrfsponding mbpping from this mbp,
     * vib thf {@dodf Itfrbtor.rfmovf}, {@dodf Sft.rfmovf},
     * {@dodf rfmovfAll}, {@dodf rftbinAll}, bnd {@dodf dlfbr}
     * opfrbtions.  It dofs not support thf {@dodf bdd} or
     * {@dodf bddAll} opfrbtions.
     *
     * <p>Thf vifw's itfrbtors bnd splitfrbtors brf
     * <b hrff="pbdkbgf-summbry.html#Wfbkly"><i>wfbkly donsistfnt</i></b>.
     *
     * <p>Thf vifw's {@dodf splitfrbtor} rfports {@link Splitfrbtor#CONCURRENT},
     * {@link Splitfrbtor#DISTINCT}, bnd {@link Splitfrbtor#NONNULL}.
     *
     * @rfturn thf sft vifw
     */
    publid KfySftVifw<K,V> kfySft() {
        KfySftVifw<K,V> ks;
        rfturn (ks = kfySft) != null ? ks : (kfySft = nfw KfySftVifw<K,V>(this, null));
    }

    /**
     * Rfturns b {@link Collfdtion} vifw of thf vblufs dontbinfd in this mbp.
     * Thf dollfdtion is bbdkfd by thf mbp, so dhbngfs to thf mbp brf
     * rfflfdtfd in thf dollfdtion, bnd vidf-vfrsb.  Thf dollfdtion
     * supports flfmfnt rfmovbl, whidh rfmovfs thf dorrfsponding
     * mbpping from this mbp, vib thf {@dodf Itfrbtor.rfmovf},
     * {@dodf Collfdtion.rfmovf}, {@dodf rfmovfAll},
     * {@dodf rftbinAll}, bnd {@dodf dlfbr} opfrbtions.  It dofs not
     * support thf {@dodf bdd} or {@dodf bddAll} opfrbtions.
     *
     * <p>Thf vifw's itfrbtors bnd splitfrbtors brf
     * <b hrff="pbdkbgf-summbry.html#Wfbkly"><i>wfbkly donsistfnt</i></b>.
     *
     * <p>Thf vifw's {@dodf splitfrbtor} rfports {@link Splitfrbtor#CONCURRENT}
     * bnd {@link Splitfrbtor#NONNULL}.
     *
     * @rfturn thf dollfdtion vifw
     */
    publid Collfdtion<V> vblufs() {
        VblufsVifw<K,V> vs;
        rfturn (vs = vblufs) != null ? vs : (vblufs = nfw VblufsVifw<K,V>(this));
    }

    /**
     * Rfturns b {@link Sft} vifw of thf mbppings dontbinfd in this mbp.
     * Thf sft is bbdkfd by thf mbp, so dhbngfs to thf mbp brf
     * rfflfdtfd in thf sft, bnd vidf-vfrsb.  Thf sft supports flfmfnt
     * rfmovbl, whidh rfmovfs thf dorrfsponding mbpping from thf mbp,
     * vib thf {@dodf Itfrbtor.rfmovf}, {@dodf Sft.rfmovf},
     * {@dodf rfmovfAll}, {@dodf rftbinAll}, bnd {@dodf dlfbr}
     * opfrbtions.
     *
     * <p>Thf vifw's itfrbtors bnd splitfrbtors brf
     * <b hrff="pbdkbgf-summbry.html#Wfbkly"><i>wfbkly donsistfnt</i></b>.
     *
     * <p>Thf vifw's {@dodf splitfrbtor} rfports {@link Splitfrbtor#CONCURRENT},
     * {@link Splitfrbtor#DISTINCT}, bnd {@link Splitfrbtor#NONNULL}.
     *
     * @rfturn thf sft vifw
     */
    publid Sft<Mbp.Entry<K,V>> fntrySft() {
        EntrySftVifw<K,V> fs;
        rfturn (fs = fntrySft) != null ? fs : (fntrySft = nfw EntrySftVifw<K,V>(this));
    }

    /**
     * Rfturns thf hbsh dodf vbluf for this {@link Mbp}, i.f.,
     * thf sum of, for fbdh kfy-vbluf pbir in thf mbp,
     * {@dodf kfy.hbshCodf() ^ vbluf.hbshCodf()}.
     *
     * @rfturn thf hbsh dodf vbluf for this mbp
     */
    publid int hbshCodf() {
        int h = 0;
        Nodf<K,V>[] t;
        if ((t = tbblf) != null) {
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; )
                h += p.kfy.hbshCodf() ^ p.vbl.hbshCodf();
        }
        rfturn h;
    }

    /**
     * Rfturns b string rfprfsfntbtion of this mbp.  Thf string
     * rfprfsfntbtion donsists of b list of kfy-vbluf mbppings (in no
     * pbrtidulbr ordfr) fndlosfd in brbdfs ("{@dodf {}}").  Adjbdfnt
     * mbppings brf sfpbrbtfd by thf dhbrbdtfrs {@dodf ", "} (dommb
     * bnd spbdf).  Ebdh kfy-vbluf mbpping is rfndfrfd bs thf kfy
     * followfd by bn fqubls sign ("{@dodf =}") followfd by thf
     * bssodibtfd vbluf.
     *
     * @rfturn b string rfprfsfntbtion of this mbp
     */
    publid String toString() {
        Nodf<K,V>[] t;
        int f = (t = tbblf) == null ? 0 : t.lfngth;
        Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, f, 0, f);
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd('{');
        Nodf<K,V> p;
        if ((p = it.bdvbndf()) != null) {
            for (;;) {
                K k = p.kfy;
                V v = p.vbl;
                sb.bppfnd(k == this ? "(this Mbp)" : k);
                sb.bppfnd('=');
                sb.bppfnd(v == this ? "(this Mbp)" : v);
                if ((p = it.bdvbndf()) == null)
                    brfbk;
                sb.bppfnd(',').bppfnd(' ');
            }
        }
        rfturn sb.bppfnd('}').toString();
    }

    /**
     * Compbrfs thf spfdififd objfdt with this mbp for fqublity.
     * Rfturns {@dodf truf} if thf givfn objfdt is b mbp with thf sbmf
     * mbppings bs this mbp.  This opfrbtion mby rfturn mislfbding
     * rfsults if fithfr mbp is dondurrfntly modififd during fxfdution
     * of this mfthod.
     *
     * @pbrbm o objfdt to bf dompbrfd for fqublity with this mbp
     * @rfturn {@dodf truf} if thf spfdififd objfdt is fqubl to this mbp
     */
    publid boolfbn fqubls(Objfdt o) {
        if (o != this) {
            if (!(o instbndfof Mbp))
                rfturn fblsf;
            Mbp<?,?> m = (Mbp<?,?>) o;
            Nodf<K,V>[] t;
            int f = (t = tbblf) == null ? 0 : t.lfngth;
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, f, 0, f);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                V vbl = p.vbl;
                Objfdt v = m.gft(p.kfy);
                if (v == null || (v != vbl && !v.fqubls(vbl)))
                    rfturn fblsf;
            }
            for (Mbp.Entry<?,?> f : m.fntrySft()) {
                Objfdt mk, mv, v;
                if ((mk = f.gftKfy()) == null ||
                    (mv = f.gftVbluf()) == null ||
                    (v = gft(mk)) == null ||
                    (mv != v && !mv.fqubls(v)))
                    rfturn fblsf;
            }
        }
        rfturn truf;
    }

    /**
     * Strippfd-down vfrsion of hflpfr dlbss usfd in prfvious vfrsion,
     * dfdlbrfd for thf sbkf of sfriblizbtion dompbtibility
     */
    stbtid dlbss Sfgmfnt<K,V> fxtfnds RffntrbntLodk implfmfnts Sfriblizbblf {
        privbtf stbtid finbl long sfriblVfrsionUID = 2249069246763182397L;
        finbl flobt lobdFbdtor;
        Sfgmfnt(flobt lf) { this.lobdFbdtor = lf; }
    }

    /**
     * Sbvfs thf stbtf of thf {@dodf CondurrfntHbshMbp} instbndf to b
     * strfbm (i.f., sfriblizfs it).
     * @pbrbm s thf strfbm
     * @throws jbvb.io.IOExdfption if bn I/O frror oddurs
     * @sfriblDbtb
     * thf kfy (Objfdt) bnd vbluf (Objfdt)
     * for fbdh kfy-vbluf mbpping, followfd by b null pbir.
     * Thf kfy-vbluf mbppings brf fmittfd in no pbrtidulbr ordfr.
     */
    privbtf void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
        throws jbvb.io.IOExdfption {
        // For sfriblizbtion dompbtibility
        // Emulbtf sfgmfnt dbldulbtion from prfvious vfrsion of this dlbss
        int sshift = 0;
        int ssizf = 1;
        whilf (ssizf < DEFAULT_CONCURRENCY_LEVEL) {
            ++sshift;
            ssizf <<= 1;
        }
        int sfgmfntShift = 32 - sshift;
        int sfgmfntMbsk = ssizf - 1;
        @SupprfssWbrnings("undhfdkfd")
        Sfgmfnt<K,V>[] sfgmfnts = (Sfgmfnt<K,V>[])
            nfw Sfgmfnt<?,?>[DEFAULT_CONCURRENCY_LEVEL];
        for (int i = 0; i < sfgmfnts.lfngth; ++i)
            sfgmfnts[i] = nfw Sfgmfnt<K,V>(LOAD_FACTOR);
        s.putFiflds().put("sfgmfnts", sfgmfnts);
        s.putFiflds().put("sfgmfntShift", sfgmfntShift);
        s.putFiflds().put("sfgmfntMbsk", sfgmfntMbsk);
        s.writfFiflds();

        Nodf<K,V>[] t;
        if ((t = tbblf) != null) {
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                s.writfObjfdt(p.kfy);
                s.writfObjfdt(p.vbl);
            }
        }
        s.writfObjfdt(null);
        s.writfObjfdt(null);
        sfgmfnts = null; // throw bwby
    }

    /**
     * Rfdonstitutfs thf instbndf from b strfbm (thbt is, dfsfriblizfs it).
     * @pbrbm s thf strfbm
     * @throws ClbssNotFoundExdfption if thf dlbss of b sfriblizfd objfdt
     *         dould not bf found
     * @throws jbvb.io.IOExdfption if bn I/O frror oddurs
     */
    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
        throws jbvb.io.IOExdfption, ClbssNotFoundExdfption {
        /*
         * To improvf pfrformbndf in typidbl dbsfs, wf drfbtf nodfs
         * whilf rfbding, thfn plbdf in tbblf ondf sizf is known.
         * Howfvfr, wf must blso vblidbtf uniqufnfss bnd dfbl with
         * ovfrpopulbtfd bins whilf doing so, whidh rfquirfs
         * spfdiblizfd vfrsions of putVbl mfdhbnids.
         */
        sizfCtl = -1; // fordf fxdlusion for tbblf donstrudtion
        s.dffbultRfbdObjfdt();
        long sizf = 0L;
        Nodf<K,V> p = null;
        for (;;) {
            @SupprfssWbrnings("undhfdkfd")
            K k = (K) s.rfbdObjfdt();
            @SupprfssWbrnings("undhfdkfd")
            V v = (V) s.rfbdObjfdt();
            if (k != null && v != null) {
                p = nfw Nodf<K,V>(sprfbd(k.hbshCodf()), k, v, p);
                ++sizf;
            }
            flsf
                brfbk;
        }
        if (sizf == 0L)
            sizfCtl = 0;
        flsf {
            int n;
            if (sizf >= (long)(MAXIMUM_CAPACITY >>> 1))
                n = MAXIMUM_CAPACITY;
            flsf {
                int sz = (int)sizf;
                n = tbblfSizfFor(sz + (sz >>> 1) + 1);
            }
            @SupprfssWbrnings("undhfdkfd")
            Nodf<K,V>[] tbb = (Nodf<K,V>[])nfw Nodf<?,?>[n];
            int mbsk = n - 1;
            long bddfd = 0L;
            whilf (p != null) {
                boolfbn insfrtAtFront;
                Nodf<K,V> nfxt = p.nfxt, first;
                int h = p.hbsh, j = h & mbsk;
                if ((first = tbbAt(tbb, j)) == null)
                    insfrtAtFront = truf;
                flsf {
                    K k = p.kfy;
                    if (first.hbsh < 0) {
                        TrffBin<K,V> t = (TrffBin<K,V>)first;
                        if (t.putTrffVbl(h, k, p.vbl) == null)
                            ++bddfd;
                        insfrtAtFront = fblsf;
                    }
                    flsf {
                        int binCount = 0;
                        insfrtAtFront = truf;
                        Nodf<K,V> q; K qk;
                        for (q = first; q != null; q = q.nfxt) {
                            if (q.hbsh == h &&
                                ((qk = q.kfy) == k ||
                                 (qk != null && k.fqubls(qk)))) {
                                insfrtAtFront = fblsf;
                                brfbk;
                            }
                            ++binCount;
                        }
                        if (insfrtAtFront && binCount >= TREEIFY_THRESHOLD) {
                            insfrtAtFront = fblsf;
                            ++bddfd;
                            p.nfxt = first;
                            TrffNodf<K,V> hd = null, tl = null;
                            for (q = p; q != null; q = q.nfxt) {
                                TrffNodf<K,V> t = nfw TrffNodf<K,V>
                                    (q.hbsh, q.kfy, q.vbl, null, null);
                                if ((t.prfv = tl) == null)
                                    hd = t;
                                flsf
                                    tl.nfxt = t;
                                tl = t;
                            }
                            sftTbbAt(tbb, j, nfw TrffBin<K,V>(hd));
                        }
                    }
                }
                if (insfrtAtFront) {
                    ++bddfd;
                    p.nfxt = first;
                    sftTbbAt(tbb, j, p);
                }
                p = nfxt;
            }
            tbblf = tbb;
            sizfCtl = n - (n >>> 2);
            bbsfCount = bddfd;
        }
    }

    // CondurrfntMbp mfthods

    /**
     * {@inhfritDod}
     *
     * @rfturn thf prfvious vbluf bssodibtfd with thf spfdififd kfy,
     *         or {@dodf null} if thfrf wbs no mbpping for thf kfy
     * @throws NullPointfrExdfption if thf spfdififd kfy or vbluf is null
     */
    publid V putIfAbsfnt(K kfy, V vbluf) {
        rfturn putVbl(kfy, vbluf, truf);
    }

    /**
     * {@inhfritDod}
     *
     * @throws NullPointfrExdfption if thf spfdififd kfy is null
     */
    publid boolfbn rfmovf(Objfdt kfy, Objfdt vbluf) {
        if (kfy == null)
            throw nfw NullPointfrExdfption();
        rfturn vbluf != null && rfplbdfNodf(kfy, null, vbluf) != null;
    }

    /**
     * {@inhfritDod}
     *
     * @throws NullPointfrExdfption if bny of thf brgumfnts brf null
     */
    publid boolfbn rfplbdf(K kfy, V oldVbluf, V nfwVbluf) {
        if (kfy == null || oldVbluf == null || nfwVbluf == null)
            throw nfw NullPointfrExdfption();
        rfturn rfplbdfNodf(kfy, nfwVbluf, oldVbluf) != null;
    }

    /**
     * {@inhfritDod}
     *
     * @rfturn thf prfvious vbluf bssodibtfd with thf spfdififd kfy,
     *         or {@dodf null} if thfrf wbs no mbpping for thf kfy
     * @throws NullPointfrExdfption if thf spfdififd kfy or vbluf is null
     */
    publid V rfplbdf(K kfy, V vbluf) {
        if (kfy == null || vbluf == null)
            throw nfw NullPointfrExdfption();
        rfturn rfplbdfNodf(kfy, vbluf, null);
    }

    // Ovfrridfs of JDK8+ Mbp fxtfnsion mfthod dffbults

    /**
     * Rfturns thf vbluf to whidh thf spfdififd kfy is mbppfd, or thf
     * givfn dffbult vbluf if this mbp dontbins no mbpping for thf
     * kfy.
     *
     * @pbrbm kfy thf kfy whosf bssodibtfd vbluf is to bf rfturnfd
     * @pbrbm dffbultVbluf thf vbluf to rfturn if this mbp dontbins
     * no mbpping for thf givfn kfy
     * @rfturn thf mbpping for thf kfy, if prfsfnt; flsf thf dffbult vbluf
     * @throws NullPointfrExdfption if thf spfdififd kfy is null
     */
    publid V gftOrDffbult(Objfdt kfy, V dffbultVbluf) {
        V v;
        rfturn (v = gft(kfy)) == null ? dffbultVbluf : v;
    }

    publid void forEbdh(BiConsumfr<? supfr K, ? supfr V> bdtion) {
        if (bdtion == null) throw nfw NullPointfrExdfption();
        Nodf<K,V>[] t;
        if ((t = tbblf) != null) {
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                bdtion.bddfpt(p.kfy, p.vbl);
            }
        }
    }

    publid void rfplbdfAll(BiFundtion<? supfr K, ? supfr V, ? fxtfnds V> fundtion) {
        if (fundtion == null) throw nfw NullPointfrExdfption();
        Nodf<K,V>[] t;
        if ((t = tbblf) != null) {
            Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
            for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                V oldVbluf = p.vbl;
                for (K kfy = p.kfy;;) {
                    V nfwVbluf = fundtion.bpply(kfy, oldVbluf);
                    if (nfwVbluf == null)
                        throw nfw NullPointfrExdfption();
                    if (rfplbdfNodf(kfy, nfwVbluf, oldVbluf) != null ||
                        (oldVbluf = gft(kfy)) == null)
                        brfbk;
                }
            }
        }
    }

    /**
     * If thf spfdififd kfy is not blrfbdy bssodibtfd with b vbluf,
     * bttfmpts to domputf its vbluf using thf givfn mbpping fundtion
     * bnd fntfrs it into this mbp unlfss {@dodf null}.  Thf fntirf
     * mfthod invodbtion is pfrformfd btomidblly, so thf fundtion is
     * bpplifd bt most ondf pfr kfy.  Somf bttfmptfd updbtf opfrbtions
     * on this mbp by othfr thrfbds mby bf blodkfd whilf domputbtion
     * is in progrfss, so thf domputbtion should bf short bnd simplf,
     * bnd must not bttfmpt to updbtf bny othfr mbppings of this mbp.
     *
     * @pbrbm kfy kfy with whidh thf spfdififd vbluf is to bf bssodibtfd
     * @pbrbm mbppingFundtion thf fundtion to domputf b vbluf
     * @rfturn thf durrfnt (fxisting or domputfd) vbluf bssodibtfd with
     *         thf spfdififd kfy, or null if thf domputfd vbluf is null
     * @throws NullPointfrExdfption if thf spfdififd kfy or mbppingFundtion
     *         is null
     * @throws IllfgblStbtfExdfption if thf domputbtion dftfdtbbly
     *         bttfmpts b rfdursivf updbtf to this mbp thbt would
     *         othfrwisf nfvfr domplftf
     * @throws RuntimfExdfption or Error if thf mbppingFundtion dofs so,
     *         in whidh dbsf thf mbpping is lfft unfstbblishfd
     */
    publid V domputfIfAbsfnt(K kfy, Fundtion<? supfr K, ? fxtfnds V> mbppingFundtion) {
        if (kfy == null || mbppingFundtion == null)
            throw nfw NullPointfrExdfption();
        int h = sprfbd(kfy.hbshCodf());
        V vbl = null;
        int binCount = 0;
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0)
                tbb = initTbblf();
            flsf if ((f = tbbAt(tbb, i = (n - 1) & h)) == null) {
                Nodf<K,V> r = nfw RfsfrvbtionNodf<K,V>();
                syndhronizfd (r) {
                    if (dbsTbbAt(tbb, i, null, r)) {
                        binCount = 1;
                        Nodf<K,V> nodf = null;
                        try {
                            if ((vbl = mbppingFundtion.bpply(kfy)) != null)
                                nodf = nfw Nodf<K,V>(h, kfy, vbl, null);
                        } finblly {
                            sftTbbAt(tbb, i, nodf);
                        }
                    }
                }
                if (binCount != 0)
                    brfbk;
            }
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                boolfbn bddfd = fblsf;
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            binCount = 1;
                            for (Nodf<K,V> f = f;; ++binCount) {
                                K fk; V fv;
                                if (f.hbsh == h &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    vbl = f.vbl;
                                    brfbk;
                                }
                                Nodf<K,V> prfd = f;
                                if ((f = f.nfxt) == null) {
                                    if ((vbl = mbppingFundtion.bpply(kfy)) != null) {
                                        bddfd = truf;
                                        prfd.nfxt = nfw Nodf<K,V>(h, kfy, vbl, null);
                                    }
                                    brfbk;
                                }
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            binCount = 2;
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> r, p;
                            if ((r = t.root) != null &&
                                (p = r.findTrffNodf(h, kfy, null)) != null)
                                vbl = p.vbl;
                            flsf if ((vbl = mbppingFundtion.bpply(kfy)) != null) {
                                bddfd = truf;
                                t.putTrffVbl(h, kfy, vbl);
                            }
                        }
                    }
                }
                if (binCount != 0) {
                    if (binCount >= TREEIFY_THRESHOLD)
                        trffifyBin(tbb, i);
                    if (!bddfd)
                        rfturn vbl;
                    brfbk;
                }
            }
        }
        if (vbl != null)
            bddCount(1L, binCount);
        rfturn vbl;
    }

    /**
     * If thf vbluf for thf spfdififd kfy is prfsfnt, bttfmpts to
     * domputf b nfw mbpping givfn thf kfy bnd its durrfnt mbppfd
     * vbluf.  Thf fntirf mfthod invodbtion is pfrformfd btomidblly.
     * Somf bttfmptfd updbtf opfrbtions on this mbp by othfr thrfbds
     * mby bf blodkfd whilf domputbtion is in progrfss, so thf
     * domputbtion should bf short bnd simplf, bnd must not bttfmpt to
     * updbtf bny othfr mbppings of this mbp.
     *
     * @pbrbm kfy kfy with whidh b vbluf mby bf bssodibtfd
     * @pbrbm rfmbppingFundtion thf fundtion to domputf b vbluf
     * @rfturn thf nfw vbluf bssodibtfd with thf spfdififd kfy, or null if nonf
     * @throws NullPointfrExdfption if thf spfdififd kfy or rfmbppingFundtion
     *         is null
     * @throws IllfgblStbtfExdfption if thf domputbtion dftfdtbbly
     *         bttfmpts b rfdursivf updbtf to this mbp thbt would
     *         othfrwisf nfvfr domplftf
     * @throws RuntimfExdfption or Error if thf rfmbppingFundtion dofs so,
     *         in whidh dbsf thf mbpping is undhbngfd
     */
    publid V domputfIfPrfsfnt(K kfy, BiFundtion<? supfr K, ? supfr V, ? fxtfnds V> rfmbppingFundtion) {
        if (kfy == null || rfmbppingFundtion == null)
            throw nfw NullPointfrExdfption();
        int h = sprfbd(kfy.hbshCodf());
        V vbl = null;
        int dfltb = 0;
        int binCount = 0;
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0)
                tbb = initTbblf();
            flsf if ((f = tbbAt(tbb, i = (n - 1) & h)) == null)
                brfbk;
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            binCount = 1;
                            for (Nodf<K,V> f = f, prfd = null;; ++binCount) {
                                K fk;
                                if (f.hbsh == h &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    vbl = rfmbppingFundtion.bpply(kfy, f.vbl);
                                    if (vbl != null)
                                        f.vbl = vbl;
                                    flsf {
                                        dfltb = -1;
                                        Nodf<K,V> fn = f.nfxt;
                                        if (prfd != null)
                                            prfd.nfxt = fn;
                                        flsf
                                            sftTbbAt(tbb, i, fn);
                                    }
                                    brfbk;
                                }
                                prfd = f;
                                if ((f = f.nfxt) == null)
                                    brfbk;
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            binCount = 2;
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> r, p;
                            if ((r = t.root) != null &&
                                (p = r.findTrffNodf(h, kfy, null)) != null) {
                                vbl = rfmbppingFundtion.bpply(kfy, p.vbl);
                                if (vbl != null)
                                    p.vbl = vbl;
                                flsf {
                                    dfltb = -1;
                                    if (t.rfmovfTrffNodf(p))
                                        sftTbbAt(tbb, i, untrffify(t.first));
                                }
                            }
                        }
                    }
                }
                if (binCount != 0)
                    brfbk;
            }
        }
        if (dfltb != 0)
            bddCount((long)dfltb, binCount);
        rfturn vbl;
    }

    /**
     * Attfmpts to domputf b mbpping for thf spfdififd kfy bnd its
     * durrfnt mbppfd vbluf (or {@dodf null} if thfrf is no durrfnt
     * mbpping). Thf fntirf mfthod invodbtion is pfrformfd btomidblly.
     * Somf bttfmptfd updbtf opfrbtions on this mbp by othfr thrfbds
     * mby bf blodkfd whilf domputbtion is in progrfss, so thf
     * domputbtion should bf short bnd simplf, bnd must not bttfmpt to
     * updbtf bny othfr mbppings of this Mbp.
     *
     * @pbrbm kfy kfy with whidh thf spfdififd vbluf is to bf bssodibtfd
     * @pbrbm rfmbppingFundtion thf fundtion to domputf b vbluf
     * @rfturn thf nfw vbluf bssodibtfd with thf spfdififd kfy, or null if nonf
     * @throws NullPointfrExdfption if thf spfdififd kfy or rfmbppingFundtion
     *         is null
     * @throws IllfgblStbtfExdfption if thf domputbtion dftfdtbbly
     *         bttfmpts b rfdursivf updbtf to this mbp thbt would
     *         othfrwisf nfvfr domplftf
     * @throws RuntimfExdfption or Error if thf rfmbppingFundtion dofs so,
     *         in whidh dbsf thf mbpping is undhbngfd
     */
    publid V domputf(K kfy,
                     BiFundtion<? supfr K, ? supfr V, ? fxtfnds V> rfmbppingFundtion) {
        if (kfy == null || rfmbppingFundtion == null)
            throw nfw NullPointfrExdfption();
        int h = sprfbd(kfy.hbshCodf());
        V vbl = null;
        int dfltb = 0;
        int binCount = 0;
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0)
                tbb = initTbblf();
            flsf if ((f = tbbAt(tbb, i = (n - 1) & h)) == null) {
                Nodf<K,V> r = nfw RfsfrvbtionNodf<K,V>();
                syndhronizfd (r) {
                    if (dbsTbbAt(tbb, i, null, r)) {
                        binCount = 1;
                        Nodf<K,V> nodf = null;
                        try {
                            if ((vbl = rfmbppingFundtion.bpply(kfy, null)) != null) {
                                dfltb = 1;
                                nodf = nfw Nodf<K,V>(h, kfy, vbl, null);
                            }
                        } finblly {
                            sftTbbAt(tbb, i, nodf);
                        }
                    }
                }
                if (binCount != 0)
                    brfbk;
            }
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            binCount = 1;
                            for (Nodf<K,V> f = f, prfd = null;; ++binCount) {
                                K fk;
                                if (f.hbsh == h &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    vbl = rfmbppingFundtion.bpply(kfy, f.vbl);
                                    if (vbl != null)
                                        f.vbl = vbl;
                                    flsf {
                                        dfltb = -1;
                                        Nodf<K,V> fn = f.nfxt;
                                        if (prfd != null)
                                            prfd.nfxt = fn;
                                        flsf
                                            sftTbbAt(tbb, i, fn);
                                    }
                                    brfbk;
                                }
                                prfd = f;
                                if ((f = f.nfxt) == null) {
                                    vbl = rfmbppingFundtion.bpply(kfy, null);
                                    if (vbl != null) {
                                        dfltb = 1;
                                        prfd.nfxt =
                                            nfw Nodf<K,V>(h, kfy, vbl, null);
                                    }
                                    brfbk;
                                }
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            binCount = 1;
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> r, p;
                            if ((r = t.root) != null)
                                p = r.findTrffNodf(h, kfy, null);
                            flsf
                                p = null;
                            V pv = (p == null) ? null : p.vbl;
                            vbl = rfmbppingFundtion.bpply(kfy, pv);
                            if (vbl != null) {
                                if (p != null)
                                    p.vbl = vbl;
                                flsf {
                                    dfltb = 1;
                                    t.putTrffVbl(h, kfy, vbl);
                                }
                            }
                            flsf if (p != null) {
                                dfltb = -1;
                                if (t.rfmovfTrffNodf(p))
                                    sftTbbAt(tbb, i, untrffify(t.first));
                            }
                        }
                    }
                }
                if (binCount != 0) {
                    if (binCount >= TREEIFY_THRESHOLD)
                        trffifyBin(tbb, i);
                    brfbk;
                }
            }
        }
        if (dfltb != 0)
            bddCount((long)dfltb, binCount);
        rfturn vbl;
    }

    /**
     * If thf spfdififd kfy is not blrfbdy bssodibtfd with b
     * (non-null) vbluf, bssodibtfs it with thf givfn vbluf.
     * Othfrwisf, rfplbdfs thf vbluf with thf rfsults of thf givfn
     * rfmbpping fundtion, or rfmovfs if {@dodf null}. Thf fntirf
     * mfthod invodbtion is pfrformfd btomidblly.  Somf bttfmptfd
     * updbtf opfrbtions on this mbp by othfr thrfbds mby bf blodkfd
     * whilf domputbtion is in progrfss, so thf domputbtion should bf
     * short bnd simplf, bnd must not bttfmpt to updbtf bny othfr
     * mbppings of this Mbp.
     *
     * @pbrbm kfy kfy with whidh thf spfdififd vbluf is to bf bssodibtfd
     * @pbrbm vbluf thf vbluf to usf if bbsfnt
     * @pbrbm rfmbppingFundtion thf fundtion to rfdomputf b vbluf if prfsfnt
     * @rfturn thf nfw vbluf bssodibtfd with thf spfdififd kfy, or null if nonf
     * @throws NullPointfrExdfption if thf spfdififd kfy or thf
     *         rfmbppingFundtion is null
     * @throws RuntimfExdfption or Error if thf rfmbppingFundtion dofs so,
     *         in whidh dbsf thf mbpping is undhbngfd
     */
    publid V mfrgf(K kfy, V vbluf, BiFundtion<? supfr V, ? supfr V, ? fxtfnds V> rfmbppingFundtion) {
        if (kfy == null || vbluf == null || rfmbppingFundtion == null)
            throw nfw NullPointfrExdfption();
        int h = sprfbd(kfy.hbshCodf());
        V vbl = null;
        int dfltb = 0;
        int binCount = 0;
        for (Nodf<K,V>[] tbb = tbblf;;) {
            Nodf<K,V> f; int n, i, fh;
            if (tbb == null || (n = tbb.lfngth) == 0)
                tbb = initTbblf();
            flsf if ((f = tbbAt(tbb, i = (n - 1) & h)) == null) {
                if (dbsTbbAt(tbb, i, null, nfw Nodf<K,V>(h, kfy, vbluf, null))) {
                    dfltb = 1;
                    vbl = vbluf;
                    brfbk;
                }
            }
            flsf if ((fh = f.hbsh) == MOVED)
                tbb = hflpTrbnsffr(tbb, f);
            flsf {
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        if (fh >= 0) {
                            binCount = 1;
                            for (Nodf<K,V> f = f, prfd = null;; ++binCount) {
                                K fk;
                                if (f.hbsh == h &&
                                    ((fk = f.kfy) == kfy ||
                                     (fk != null && kfy.fqubls(fk)))) {
                                    vbl = rfmbppingFundtion.bpply(f.vbl, vbluf);
                                    if (vbl != null)
                                        f.vbl = vbl;
                                    flsf {
                                        dfltb = -1;
                                        Nodf<K,V> fn = f.nfxt;
                                        if (prfd != null)
                                            prfd.nfxt = fn;
                                        flsf
                                            sftTbbAt(tbb, i, fn);
                                    }
                                    brfbk;
                                }
                                prfd = f;
                                if ((f = f.nfxt) == null) {
                                    dfltb = 1;
                                    vbl = vbluf;
                                    prfd.nfxt =
                                        nfw Nodf<K,V>(h, kfy, vbl, null);
                                    brfbk;
                                }
                            }
                        }
                        flsf if (f instbndfof TrffBin) {
                            binCount = 2;
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> r = t.root;
                            TrffNodf<K,V> p = (r == null) ? null :
                                r.findTrffNodf(h, kfy, null);
                            vbl = (p == null) ? vbluf :
                                rfmbppingFundtion.bpply(p.vbl, vbluf);
                            if (vbl != null) {
                                if (p != null)
                                    p.vbl = vbl;
                                flsf {
                                    dfltb = 1;
                                    t.putTrffVbl(h, kfy, vbl);
                                }
                            }
                            flsf if (p != null) {
                                dfltb = -1;
                                if (t.rfmovfTrffNodf(p))
                                    sftTbbAt(tbb, i, untrffify(t.first));
                            }
                        }
                    }
                }
                if (binCount != 0) {
                    if (binCount >= TREEIFY_THRESHOLD)
                        trffifyBin(tbb, i);
                    brfbk;
                }
            }
        }
        if (dfltb != 0)
            bddCount((long)dfltb, binCount);
        rfturn vbl;
    }

    // Hbshtbblf lfgbdy mfthods

    /**
     * Lfgbdy mfthod tfsting if somf kfy mbps into thf spfdififd vbluf
     * in this tbblf.  This mfthod is idfntidbl in fundtionblity to
     * {@link #dontbinsVbluf(Objfdt)}, bnd fxists solfly to fnsurf
     * full dompbtibility with dlbss {@link jbvb.util.Hbshtbblf},
     * whidh supportfd this mfthod prior to introdudtion of thf
     * Jbvb Collfdtions frbmfwork.
     *
     * @pbrbm  vbluf b vbluf to sfbrdh for
     * @rfturn {@dodf truf} if bnd only if somf kfy mbps to thf
     *         {@dodf vbluf} brgumfnt in this tbblf bs
     *         dftfrminfd by thf {@dodf fqubls} mfthod;
     *         {@dodf fblsf} othfrwisf
     * @throws NullPointfrExdfption if thf spfdififd vbluf is null
     */
    publid boolfbn dontbins(Objfdt vbluf) {
        rfturn dontbinsVbluf(vbluf);
    }

    /**
     * Rfturns bn fnumfrbtion of thf kfys in this tbblf.
     *
     * @rfturn bn fnumfrbtion of thf kfys in this tbblf
     * @sff #kfySft()
     */
    publid Enumfrbtion<K> kfys() {
        Nodf<K,V>[] t;
        int f = (t = tbblf) == null ? 0 : t.lfngth;
        rfturn nfw KfyItfrbtor<K,V>(t, f, 0, f, this);
    }

    /**
     * Rfturns bn fnumfrbtion of thf vblufs in this tbblf.
     *
     * @rfturn bn fnumfrbtion of thf vblufs in this tbblf
     * @sff #vblufs()
     */
    publid Enumfrbtion<V> flfmfnts() {
        Nodf<K,V>[] t;
        int f = (t = tbblf) == null ? 0 : t.lfngth;
        rfturn nfw VblufItfrbtor<K,V>(t, f, 0, f, this);
    }

    // CondurrfntHbshMbp-only mfthods

    /**
     * Rfturns thf numbfr of mbppings. This mfthod should bf usfd
     * instfbd of {@link #sizf} bfdbusf b CondurrfntHbshMbp mby
     * dontbin morf mbppings thbn dbn bf rfprfsfntfd bs bn int. Thf
     * vbluf rfturnfd is bn fstimbtf; thf bdtubl dount mby difffr if
     * thfrf brf dondurrfnt insfrtions or rfmovbls.
     *
     * @rfturn thf numbfr of mbppings
     * @sindf 1.8
     */
    publid long mbppingCount() {
        long n = sumCount();
        rfturn (n < 0L) ? 0L : n; // ignorf trbnsifnt nfgbtivf vblufs
    }

    /**
     * Crfbtfs b nfw {@link Sft} bbdkfd by b CondurrfntHbshMbp
     * from thf givfn typf to {@dodf Boolfbn.TRUE}.
     *
     * @pbrbm <K> thf flfmfnt typf of thf rfturnfd sft
     * @rfturn thf nfw sft
     * @sindf 1.8
     */
    publid stbtid <K> KfySftVifw<K,Boolfbn> nfwKfySft() {
        rfturn nfw KfySftVifw<K,Boolfbn>
            (nfw CondurrfntHbshMbp<K,Boolfbn>(), Boolfbn.TRUE);
    }

    /**
     * Crfbtfs b nfw {@link Sft} bbdkfd by b CondurrfntHbshMbp
     * from thf givfn typf to {@dodf Boolfbn.TRUE}.
     *
     * @pbrbm initiblCbpbdity Thf implfmfntbtion pfrforms intfrnbl
     * sizing to bddommodbtf this mbny flfmfnts.
     * @pbrbm <K> thf flfmfnt typf of thf rfturnfd sft
     * @rfturn thf nfw sft
     * @throws IllfgblArgumfntExdfption if thf initibl dbpbdity of
     * flfmfnts is nfgbtivf
     * @sindf 1.8
     */
    publid stbtid <K> KfySftVifw<K,Boolfbn> nfwKfySft(int initiblCbpbdity) {
        rfturn nfw KfySftVifw<K,Boolfbn>
            (nfw CondurrfntHbshMbp<K,Boolfbn>(initiblCbpbdity), Boolfbn.TRUE);
    }

    /**
     * Rfturns b {@link Sft} vifw of thf kfys in this mbp, using thf
     * givfn dommon mbppfd vbluf for bny bdditions (i.f., {@link
     * Collfdtion#bdd} bnd {@link Collfdtion#bddAll(Collfdtion)}).
     * This is of doursf only bppropribtf if it is bddfptbblf to usf
     * thf sbmf vbluf for bll bdditions from this vifw.
     *
     * @pbrbm mbppfdVbluf thf mbppfd vbluf to usf for bny bdditions
     * @rfturn thf sft vifw
     * @throws NullPointfrExdfption if thf mbppfdVbluf is null
     */
    publid KfySftVifw<K,V> kfySft(V mbppfdVbluf) {
        if (mbppfdVbluf == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw KfySftVifw<K,V>(this, mbppfdVbluf);
    }

    /* ---------------- Spfdibl Nodfs -------------- */

    /**
     * A nodf insfrtfd bt hfbd of bins during trbnsffr opfrbtions.
     */
    stbtid finbl dlbss ForwbrdingNodf<K,V> fxtfnds Nodf<K,V> {
        finbl Nodf<K,V>[] nfxtTbblf;
        ForwbrdingNodf(Nodf<K,V>[] tbb) {
            supfr(MOVED, null, null, null);
            this.nfxtTbblf = tbb;
        }

        Nodf<K,V> find(int h, Objfdt k) {
            // loop to bvoid brbitrbrily dffp rfdursion on forwbrding nodfs
            outfr: for (Nodf<K,V>[] tbb = nfxtTbblf;;) {
                Nodf<K,V> f; int n;
                if (k == null || tbb == null || (n = tbb.lfngth) == 0 ||
                    (f = tbbAt(tbb, (n - 1) & h)) == null)
                    rfturn null;
                for (;;) {
                    int fh; K fk;
                    if ((fh = f.hbsh) == h &&
                        ((fk = f.kfy) == k || (fk != null && k.fqubls(fk))))
                        rfturn f;
                    if (fh < 0) {
                        if (f instbndfof ForwbrdingNodf) {
                            tbb = ((ForwbrdingNodf<K,V>)f).nfxtTbblf;
                            dontinuf outfr;
                        }
                        flsf
                            rfturn f.find(h, k);
                    }
                    if ((f = f.nfxt) == null)
                        rfturn null;
                }
            }
        }
    }

    /**
     * A plbdf-holdfr nodf usfd in domputfIfAbsfnt bnd domputf
     */
    stbtid finbl dlbss RfsfrvbtionNodf<K,V> fxtfnds Nodf<K,V> {
        RfsfrvbtionNodf() {
            supfr(RESERVED, null, null, null);
        }

        Nodf<K,V> find(int h, Objfdt k) {
            rfturn null;
        }
    }

    /* ---------------- Tbblf Initiblizbtion bnd Rfsizing -------------- */

    /**
     * Rfturns thf stbmp bits for rfsizing b tbblf of sizf n.
     * Must bf nfgbtivf whfn shiftfd lfft by RESIZE_STAMP_SHIFT.
     */
    stbtid finbl int rfsizfStbmp(int n) {
        rfturn Intfgfr.numbfrOfLfbdingZfros(n) | (1 << (RESIZE_STAMP_BITS - 1));
    }

    /**
     * Initiblizfs tbblf, using thf sizf rfdordfd in sizfCtl.
     */
    privbtf finbl Nodf<K,V>[] initTbblf() {
        Nodf<K,V>[] tbb; int sd;
        whilf ((tbb = tbblf) == null || tbb.lfngth == 0) {
            if ((sd = sizfCtl) < 0)
                Thrfbd.yifld(); // lost initiblizbtion rbdf; just spin
            flsf if (U.dompbrfAndSwbpInt(this, SIZECTL, sd, -1)) {
                try {
                    if ((tbb = tbblf) == null || tbb.lfngth == 0) {
                        int n = (sd > 0) ? sd : DEFAULT_CAPACITY;
                        @SupprfssWbrnings("undhfdkfd")
                        Nodf<K,V>[] nt = (Nodf<K,V>[])nfw Nodf<?,?>[n];
                        tbblf = tbb = nt;
                        sd = n - (n >>> 2);
                    }
                } finblly {
                    sizfCtl = sd;
                }
                brfbk;
            }
        }
        rfturn tbb;
    }

    /**
     * Adds to dount, bnd if tbblf is too smbll bnd not blrfbdy
     * rfsizing, initibtfs trbnsffr. If blrfbdy rfsizing, hflps
     * pfrform trbnsffr if work is bvbilbblf.  Rfdhfdks oddupbndy
     * bftfr b trbnsffr to sff if bnothfr rfsizf is blrfbdy nffdfd
     * bfdbusf rfsizings brf lbgging bdditions.
     *
     * @pbrbm x thf dount to bdd
     * @pbrbm dhfdk if <0, don't dhfdk rfsizf, if <= 1 only dhfdk if undontfndfd
     */
    privbtf finbl void bddCount(long x, int dhfdk) {
        CountfrCfll[] bs; long b, s;
        if ((bs = dountfrCflls) != null ||
            !U.dompbrfAndSwbpLong(this, BASECOUNT, b = bbsfCount, s = b + x)) {
            CountfrCfll b; long v; int m;
            boolfbn undontfndfd = truf;
            if (bs == null || (m = bs.lfngth - 1) < 0 ||
                (b = bs[ThrfbdLodblRbndom.gftProbf() & m]) == null ||
                !(undontfndfd =
                  U.dompbrfAndSwbpLong(b, CELLVALUE, v = b.vbluf, v + x))) {
                fullAddCount(x, undontfndfd);
                rfturn;
            }
            if (dhfdk <= 1)
                rfturn;
            s = sumCount();
        }
        if (dhfdk >= 0) {
            Nodf<K,V>[] tbb, nt; int n, sd;
            whilf (s >= (long)(sd = sizfCtl) && (tbb = tbblf) != null &&
                   (n = tbb.lfngth) < MAXIMUM_CAPACITY) {
                int rs = rfsizfStbmp(n);
                if (sd < 0) {
                    if ((sd >>> RESIZE_STAMP_SHIFT) != rs || sd == rs + 1 ||
                        sd == rs + MAX_RESIZERS || (nt = nfxtTbblf) == null ||
                        trbnsffrIndfx <= 0)
                        brfbk;
                    if (U.dompbrfAndSwbpInt(this, SIZECTL, sd, sd + 1))
                        trbnsffr(tbb, nt);
                }
                flsf if (U.dompbrfAndSwbpInt(this, SIZECTL, sd,
                                             (rs << RESIZE_STAMP_SHIFT) + 2))
                    trbnsffr(tbb, null);
                s = sumCount();
            }
        }
    }

    /**
     * Hflps trbnsffr if b rfsizf is in progrfss.
     */
    finbl Nodf<K,V>[] hflpTrbnsffr(Nodf<K,V>[] tbb, Nodf<K,V> f) {
        Nodf<K,V>[] nfxtTbb; int sd;
        if (tbb != null && (f instbndfof ForwbrdingNodf) &&
            (nfxtTbb = ((ForwbrdingNodf<K,V>)f).nfxtTbblf) != null) {
            int rs = rfsizfStbmp(tbb.lfngth);
            whilf (nfxtTbb == nfxtTbblf && tbblf == tbb &&
                   (sd = sizfCtl) < 0) {
                if ((sd >>> RESIZE_STAMP_SHIFT) != rs || sd == rs + 1 ||
                    sd == rs + MAX_RESIZERS || trbnsffrIndfx <= 0)
                    brfbk;
                if (U.dompbrfAndSwbpInt(this, SIZECTL, sd, sd + 1)) {
                    trbnsffr(tbb, nfxtTbb);
                    brfbk;
                }
            }
            rfturn nfxtTbb;
        }
        rfturn tbblf;
    }

    /**
     * Trifs to prfsizf tbblf to bddommodbtf thf givfn numbfr of flfmfnts.
     *
     * @pbrbm sizf numbfr of flfmfnts (dofsn't nffd to bf pfrffdtly bddurbtf)
     */
    privbtf finbl void tryPrfsizf(int sizf) {
        int d = (sizf >= (MAXIMUM_CAPACITY >>> 1)) ? MAXIMUM_CAPACITY :
            tbblfSizfFor(sizf + (sizf >>> 1) + 1);
        int sd;
        whilf ((sd = sizfCtl) >= 0) {
            Nodf<K,V>[] tbb = tbblf; int n;
            if (tbb == null || (n = tbb.lfngth) == 0) {
                n = (sd > d) ? sd : d;
                if (U.dompbrfAndSwbpInt(this, SIZECTL, sd, -1)) {
                    try {
                        if (tbblf == tbb) {
                            @SupprfssWbrnings("undhfdkfd")
                            Nodf<K,V>[] nt = (Nodf<K,V>[])nfw Nodf<?,?>[n];
                            tbblf = nt;
                            sd = n - (n >>> 2);
                        }
                    } finblly {
                        sizfCtl = sd;
                    }
                }
            }
            flsf if (d <= sd || n >= MAXIMUM_CAPACITY)
                brfbk;
            flsf if (tbb == tbblf) {
                int rs = rfsizfStbmp(n);
                if (sd < 0) {
                    Nodf<K,V>[] nt;
                    if ((sd >>> RESIZE_STAMP_SHIFT) != rs || sd == rs + 1 ||
                        sd == rs + MAX_RESIZERS || (nt = nfxtTbblf) == null ||
                        trbnsffrIndfx <= 0)
                        brfbk;
                    if (U.dompbrfAndSwbpInt(this, SIZECTL, sd, sd + 1))
                        trbnsffr(tbb, nt);
                }
                flsf if (U.dompbrfAndSwbpInt(this, SIZECTL, sd,
                                             (rs << RESIZE_STAMP_SHIFT) + 2))
                    trbnsffr(tbb, null);
            }
        }
    }

    /**
     * Movfs bnd/or dopifs thf nodfs in fbdh bin to nfw tbblf. Sff
     * bbovf for fxplbnbtion.
     */
    privbtf finbl void trbnsffr(Nodf<K,V>[] tbb, Nodf<K,V>[] nfxtTbb) {
        int n = tbb.lfngth, stridf;
        if ((stridf = (NCPU > 1) ? (n >>> 3) / NCPU : n) < MIN_TRANSFER_STRIDE)
            stridf = MIN_TRANSFER_STRIDE; // subdividf rbngf
        if (nfxtTbb == null) {            // initibting
            try {
                @SupprfssWbrnings("undhfdkfd")
                Nodf<K,V>[] nt = (Nodf<K,V>[])nfw Nodf<?,?>[n << 1];
                nfxtTbb = nt;
            } dbtdh (Throwbblf fx) {      // try to dopf with OOME
                sizfCtl = Intfgfr.MAX_VALUE;
                rfturn;
            }
            nfxtTbblf = nfxtTbb;
            trbnsffrIndfx = n;
        }
        int nfxtn = nfxtTbb.lfngth;
        ForwbrdingNodf<K,V> fwd = nfw ForwbrdingNodf<K,V>(nfxtTbb);
        boolfbn bdvbndf = truf;
        boolfbn finishing = fblsf; // to fnsurf swffp bfforf dommitting nfxtTbb
        for (int i = 0, bound = 0;;) {
            Nodf<K,V> f; int fh;
            whilf (bdvbndf) {
                int nfxtIndfx, nfxtBound;
                if (--i >= bound || finishing)
                    bdvbndf = fblsf;
                flsf if ((nfxtIndfx = trbnsffrIndfx) <= 0) {
                    i = -1;
                    bdvbndf = fblsf;
                }
                flsf if (U.dompbrfAndSwbpInt
                         (this, TRANSFERINDEX, nfxtIndfx,
                          nfxtBound = (nfxtIndfx > stridf ?
                                       nfxtIndfx - stridf : 0))) {
                    bound = nfxtBound;
                    i = nfxtIndfx - 1;
                    bdvbndf = fblsf;
                }
            }
            if (i < 0 || i >= n || i + n >= nfxtn) {
                int sd;
                if (finishing) {
                    nfxtTbblf = null;
                    tbblf = nfxtTbb;
                    sizfCtl = (n << 1) - (n >>> 1);
                    rfturn;
                }
                if (U.dompbrfAndSwbpInt(this, SIZECTL, sd = sizfCtl, sd - 1)) {
                    if ((sd - 2) != rfsizfStbmp(n) << RESIZE_STAMP_SHIFT)
                        rfturn;
                    finishing = bdvbndf = truf;
                    i = n; // rfdhfdk bfforf dommit
                }
            }
            flsf if ((f = tbbAt(tbb, i)) == null)
                bdvbndf = dbsTbbAt(tbb, i, null, fwd);
            flsf if ((fh = f.hbsh) == MOVED)
                bdvbndf = truf; // blrfbdy prodfssfd
            flsf {
                syndhronizfd (f) {
                    if (tbbAt(tbb, i) == f) {
                        Nodf<K,V> ln, hn;
                        if (fh >= 0) {
                            int runBit = fh & n;
                            Nodf<K,V> lbstRun = f;
                            for (Nodf<K,V> p = f.nfxt; p != null; p = p.nfxt) {
                                int b = p.hbsh & n;
                                if (b != runBit) {
                                    runBit = b;
                                    lbstRun = p;
                                }
                            }
                            if (runBit == 0) {
                                ln = lbstRun;
                                hn = null;
                            }
                            flsf {
                                hn = lbstRun;
                                ln = null;
                            }
                            for (Nodf<K,V> p = f; p != lbstRun; p = p.nfxt) {
                                int ph = p.hbsh; K pk = p.kfy; V pv = p.vbl;
                                if ((ph & n) == 0)
                                    ln = nfw Nodf<K,V>(ph, pk, pv, ln);
                                flsf
                                    hn = nfw Nodf<K,V>(ph, pk, pv, hn);
                            }
                            sftTbbAt(nfxtTbb, i, ln);
                            sftTbbAt(nfxtTbb, i + n, hn);
                            sftTbbAt(tbb, i, fwd);
                            bdvbndf = truf;
                        }
                        flsf if (f instbndfof TrffBin) {
                            TrffBin<K,V> t = (TrffBin<K,V>)f;
                            TrffNodf<K,V> lo = null, loTbil = null;
                            TrffNodf<K,V> hi = null, hiTbil = null;
                            int ld = 0, hd = 0;
                            for (Nodf<K,V> f = t.first; f != null; f = f.nfxt) {
                                int h = f.hbsh;
                                TrffNodf<K,V> p = nfw TrffNodf<K,V>
                                    (h, f.kfy, f.vbl, null, null);
                                if ((h & n) == 0) {
                                    if ((p.prfv = loTbil) == null)
                                        lo = p;
                                    flsf
                                        loTbil.nfxt = p;
                                    loTbil = p;
                                    ++ld;
                                }
                                flsf {
                                    if ((p.prfv = hiTbil) == null)
                                        hi = p;
                                    flsf
                                        hiTbil.nfxt = p;
                                    hiTbil = p;
                                    ++hd;
                                }
                            }
                            ln = (ld <= UNTREEIFY_THRESHOLD) ? untrffify(lo) :
                                (hd != 0) ? nfw TrffBin<K,V>(lo) : t;
                            hn = (hd <= UNTREEIFY_THRESHOLD) ? untrffify(hi) :
                                (ld != 0) ? nfw TrffBin<K,V>(hi) : t;
                            sftTbbAt(nfxtTbb, i, ln);
                            sftTbbAt(nfxtTbb, i + n, hn);
                            sftTbbAt(tbb, i, fwd);
                            bdvbndf = truf;
                        }
                    }
                }
            }
        }
    }

    /* ---------------- Countfr support -------------- */

    /**
     * A pbddfd dfll for distributing dounts.  Adbptfd from LongAddfr
     * bnd Stripfd64.  Sff thfir intfrnbl dods for fxplbnbtion.
     */
    @sun.misd.Contfndfd stbtid finbl dlbss CountfrCfll {
        volbtilf long vbluf;
        CountfrCfll(long x) { vbluf = x; }
    }

    finbl long sumCount() {
        CountfrCfll[] bs = dountfrCflls; CountfrCfll b;
        long sum = bbsfCount;
        if (bs != null) {
            for (int i = 0; i < bs.lfngth; ++i) {
                if ((b = bs[i]) != null)
                    sum += b.vbluf;
            }
        }
        rfturn sum;
    }

    // Sff LongAddfr vfrsion for fxplbnbtion
    privbtf finbl void fullAddCount(long x, boolfbn wbsUndontfndfd) {
        int h;
        if ((h = ThrfbdLodblRbndom.gftProbf()) == 0) {
            ThrfbdLodblRbndom.lodblInit();      // fordf initiblizbtion
            h = ThrfbdLodblRbndom.gftProbf();
            wbsUndontfndfd = truf;
        }
        boolfbn dollidf = fblsf;                // Truf if lbst slot nonfmpty
        for (;;) {
            CountfrCfll[] bs; CountfrCfll b; int n; long v;
            if ((bs = dountfrCflls) != null && (n = bs.lfngth) > 0) {
                if ((b = bs[(n - 1) & h]) == null) {
                    if (dfllsBusy == 0) {            // Try to bttbdh nfw Cfll
                        CountfrCfll r = nfw CountfrCfll(x); // Optimistid drfbtf
                        if (dfllsBusy == 0 &&
                            U.dompbrfAndSwbpInt(this, CELLSBUSY, 0, 1)) {
                            boolfbn drfbtfd = fblsf;
                            try {               // Rfdhfdk undfr lodk
                                CountfrCfll[] rs; int m, j;
                                if ((rs = dountfrCflls) != null &&
                                    (m = rs.lfngth) > 0 &&
                                    rs[j = (m - 1) & h] == null) {
                                    rs[j] = r;
                                    drfbtfd = truf;
                                }
                            } finblly {
                                dfllsBusy = 0;
                            }
                            if (drfbtfd)
                                brfbk;
                            dontinuf;           // Slot is now non-fmpty
                        }
                    }
                    dollidf = fblsf;
                }
                flsf if (!wbsUndontfndfd)       // CAS blrfbdy known to fbil
                    wbsUndontfndfd = truf;      // Continuf bftfr rfhbsh
                flsf if (U.dompbrfAndSwbpLong(b, CELLVALUE, v = b.vbluf, v + x))
                    brfbk;
                flsf if (dountfrCflls != bs || n >= NCPU)
                    dollidf = fblsf;            // At mbx sizf or stblf
                flsf if (!dollidf)
                    dollidf = truf;
                flsf if (dfllsBusy == 0 &&
                         U.dompbrfAndSwbpInt(this, CELLSBUSY, 0, 1)) {
                    try {
                        if (dountfrCflls == bs) {// Expbnd tbblf unlfss stblf
                            CountfrCfll[] rs = nfw CountfrCfll[n << 1];
                            for (int i = 0; i < n; ++i)
                                rs[i] = bs[i];
                            dountfrCflls = rs;
                        }
                    } finblly {
                        dfllsBusy = 0;
                    }
                    dollidf = fblsf;
                    dontinuf;                   // Rftry with fxpbndfd tbblf
                }
                h = ThrfbdLodblRbndom.bdvbndfProbf(h);
            }
            flsf if (dfllsBusy == 0 && dountfrCflls == bs &&
                     U.dompbrfAndSwbpInt(this, CELLSBUSY, 0, 1)) {
                boolfbn init = fblsf;
                try {                           // Initiblizf tbblf
                    if (dountfrCflls == bs) {
                        CountfrCfll[] rs = nfw CountfrCfll[2];
                        rs[h & 1] = nfw CountfrCfll(x);
                        dountfrCflls = rs;
                        init = truf;
                    }
                } finblly {
                    dfllsBusy = 0;
                }
                if (init)
                    brfbk;
            }
            flsf if (U.dompbrfAndSwbpLong(this, BASECOUNT, v = bbsfCount, v + x))
                brfbk;                          // Fbll bbdk on using bbsf
        }
    }

    /* ---------------- Convfrsion from/to TrffBins -------------- */

    /**
     * Rfplbdfs bll linkfd nodfs in bin bt givfn indfx unlfss tbblf is
     * too smbll, in whidh dbsf rfsizfs instfbd.
     */
    privbtf finbl void trffifyBin(Nodf<K,V>[] tbb, int indfx) {
        Nodf<K,V> b; int n, sd;
        if (tbb != null) {
            if ((n = tbb.lfngth) < MIN_TREEIFY_CAPACITY)
                tryPrfsizf(n << 1);
            flsf if ((b = tbbAt(tbb, indfx)) != null && b.hbsh >= 0) {
                syndhronizfd (b) {
                    if (tbbAt(tbb, indfx) == b) {
                        TrffNodf<K,V> hd = null, tl = null;
                        for (Nodf<K,V> f = b; f != null; f = f.nfxt) {
                            TrffNodf<K,V> p =
                                nfw TrffNodf<K,V>(f.hbsh, f.kfy, f.vbl,
                                                  null, null);
                            if ((p.prfv = tl) == null)
                                hd = p;
                            flsf
                                tl.nfxt = p;
                            tl = p;
                        }
                        sftTbbAt(tbb, indfx, nfw TrffBin<K,V>(hd));
                    }
                }
            }
        }
    }

    /**
     * Rfturns b list on non-TrffNodfs rfplbding thosf in givfn list.
     */
    stbtid <K,V> Nodf<K,V> untrffify(Nodf<K,V> b) {
        Nodf<K,V> hd = null, tl = null;
        for (Nodf<K,V> q = b; q != null; q = q.nfxt) {
            Nodf<K,V> p = nfw Nodf<K,V>(q.hbsh, q.kfy, q.vbl, null);
            if (tl == null)
                hd = p;
            flsf
                tl.nfxt = p;
            tl = p;
        }
        rfturn hd;
    }

    /* ---------------- TrffNodfs -------------- */

    /**
     * Nodfs for usf in TrffBins
     */
    stbtid finbl dlbss TrffNodf<K,V> fxtfnds Nodf<K,V> {
        TrffNodf<K,V> pbrfnt;  // rfd-blbdk trff links
        TrffNodf<K,V> lfft;
        TrffNodf<K,V> right;
        TrffNodf<K,V> prfv;    // nffdfd to unlink nfxt upon dflftion
        boolfbn rfd;

        TrffNodf(int hbsh, K kfy, V vbl, Nodf<K,V> nfxt,
                 TrffNodf<K,V> pbrfnt) {
            supfr(hbsh, kfy, vbl, nfxt);
            this.pbrfnt = pbrfnt;
        }

        Nodf<K,V> find(int h, Objfdt k) {
            rfturn findTrffNodf(h, k, null);
        }

        /**
         * Rfturns thf TrffNodf (or null if not found) for thf givfn kfy
         * stbrting bt givfn root.
         */
        finbl TrffNodf<K,V> findTrffNodf(int h, Objfdt k, Clbss<?> kd) {
            if (k != null) {
                TrffNodf<K,V> p = this;
                do  {
                    int ph, dir; K pk; TrffNodf<K,V> q;
                    TrffNodf<K,V> pl = p.lfft, pr = p.right;
                    if ((ph = p.hbsh) > h)
                        p = pl;
                    flsf if (ph < h)
                        p = pr;
                    flsf if ((pk = p.kfy) == k || (pk != null && k.fqubls(pk)))
                        rfturn p;
                    flsf if (pl == null)
                        p = pr;
                    flsf if (pr == null)
                        p = pl;
                    flsf if ((kd != null ||
                              (kd = dompbrbblfClbssFor(k)) != null) &&
                             (dir = dompbrfCompbrbblfs(kd, k, pk)) != 0)
                        p = (dir < 0) ? pl : pr;
                    flsf if ((q = pr.findTrffNodf(h, k, kd)) != null)
                        rfturn q;
                    flsf
                        p = pl;
                } whilf (p != null);
            }
            rfturn null;
        }
    }

    /* ---------------- TrffBins -------------- */

    /**
     * TrffNodfs usfd bt thf hfbds of bins. TrffBins do not hold usfr
     * kfys or vblufs, but instfbd point to list of TrffNodfs bnd
     * thfir root. Thfy blso mbintbin b pbrbsitid rfbd-writf lodk
     * fording writfrs (who hold bin lodk) to wbit for rfbdfrs (who do
     * not) to domplftf bfforf trff rfstrudturing opfrbtions.
     */
    stbtid finbl dlbss TrffBin<K,V> fxtfnds Nodf<K,V> {
        TrffNodf<K,V> root;
        volbtilf TrffNodf<K,V> first;
        volbtilf Thrfbd wbitfr;
        volbtilf int lodkStbtf;
        // vblufs for lodkStbtf
        stbtid finbl int WRITER = 1; // sft whilf holding writf lodk
        stbtid finbl int WAITER = 2; // sft whfn wbiting for writf lodk
        stbtid finbl int READER = 4; // indrfmfnt vbluf for sftting rfbd lodk

        /**
         * Tif-brfbking utility for ordfring insfrtions whfn fqubl
         * hbshCodfs bnd non-dompbrbblf. Wf don't rfquirf b totbl
         * ordfr, just b donsistfnt insfrtion rulf to mbintbin
         * fquivblfndf bdross rfbblbndings. Tif-brfbking furthfr thbn
         * nfdfssbry simplififs tfsting b bit.
         */
        stbtid int tifBrfbkOrdfr(Objfdt b, Objfdt b) {
            int d;
            if (b == null || b == null ||
                (d = b.gftClbss().gftNbmf().
                 dompbrfTo(b.gftClbss().gftNbmf())) == 0)
                d = (Systfm.idfntityHbshCodf(b) <= Systfm.idfntityHbshCodf(b) ?
                     -1 : 1);
            rfturn d;
        }

        /**
         * Crfbtfs bin with initibl sft of nodfs hfbdfd by b.
         */
        TrffBin(TrffNodf<K,V> b) {
            supfr(TREEBIN, null, null, null);
            this.first = b;
            TrffNodf<K,V> r = null;
            for (TrffNodf<K,V> x = b, nfxt; x != null; x = nfxt) {
                nfxt = (TrffNodf<K,V>)x.nfxt;
                x.lfft = x.right = null;
                if (r == null) {
                    x.pbrfnt = null;
                    x.rfd = fblsf;
                    r = x;
                }
                flsf {
                    K k = x.kfy;
                    int h = x.hbsh;
                    Clbss<?> kd = null;
                    for (TrffNodf<K,V> p = r;;) {
                        int dir, ph;
                        K pk = p.kfy;
                        if ((ph = p.hbsh) > h)
                            dir = -1;
                        flsf if (ph < h)
                            dir = 1;
                        flsf if ((kd == null &&
                                  (kd = dompbrbblfClbssFor(k)) == null) ||
                                 (dir = dompbrfCompbrbblfs(kd, k, pk)) == 0)
                            dir = tifBrfbkOrdfr(k, pk);
                            TrffNodf<K,V> xp = p;
                        if ((p = (dir <= 0) ? p.lfft : p.right) == null) {
                            x.pbrfnt = xp;
                            if (dir <= 0)
                                xp.lfft = x;
                            flsf
                                xp.right = x;
                            r = bblbndfInsfrtion(r, x);
                            brfbk;
                        }
                    }
                }
            }
            this.root = r;
            bssfrt dhfdkInvbribnts(root);
        }

        /**
         * Adquirfs writf lodk for trff rfstrudturing.
         */
        privbtf finbl void lodkRoot() {
            if (!U.dompbrfAndSwbpInt(this, LOCKSTATE, 0, WRITER))
                dontfndfdLodk(); // offlobd to sfpbrbtf mfthod
        }

        /**
         * Rflfbsfs writf lodk for trff rfstrudturing.
         */
        privbtf finbl void unlodkRoot() {
            lodkStbtf = 0;
        }

        /**
         * Possibly blodks bwbiting root lodk.
         */
        privbtf finbl void dontfndfdLodk() {
            boolfbn wbiting = fblsf;
            for (int s;;) {
                if (((s = lodkStbtf) & ~WAITER) == 0) {
                    if (U.dompbrfAndSwbpInt(this, LOCKSTATE, s, WRITER)) {
                        if (wbiting)
                            wbitfr = null;
                        rfturn;
                    }
                }
                flsf if ((s & WAITER) == 0) {
                    if (U.dompbrfAndSwbpInt(this, LOCKSTATE, s, s | WAITER)) {
                        wbiting = truf;
                        wbitfr = Thrfbd.durrfntThrfbd();
                    }
                }
                flsf if (wbiting)
                    LodkSupport.pbrk(this);
            }
        }

        /**
         * Rfturns mbtdhing nodf or null if nonf. Trifs to sfbrdh
         * using trff dompbrisons from root, but dontinufs linfbr
         * sfbrdh whfn lodk not bvbilbblf.
         */
        finbl Nodf<K,V> find(int h, Objfdt k) {
            if (k != null) {
                for (Nodf<K,V> f = first; f != null; ) {
                    int s; K fk;
                    if (((s = lodkStbtf) & (WAITER|WRITER)) != 0) {
                        if (f.hbsh == h &&
                            ((fk = f.kfy) == k || (fk != null && k.fqubls(fk))))
                            rfturn f;
                        f = f.nfxt;
                    }
                    flsf if (U.dompbrfAndSwbpInt(this, LOCKSTATE, s,
                                                 s + READER)) {
                        TrffNodf<K,V> r, p;
                        try {
                            p = ((r = root) == null ? null :
                                 r.findTrffNodf(h, k, null));
                        } finblly {
                            Thrfbd w;
                            if (U.gftAndAddInt(this, LOCKSTATE, -READER) ==
                                (READER|WAITER) && (w = wbitfr) != null)
                                LodkSupport.unpbrk(w);
                        }
                        rfturn p;
                    }
                }
            }
            rfturn null;
        }

        /**
         * Finds or bdds b nodf.
         * @rfturn null if bddfd
         */
        finbl TrffNodf<K,V> putTrffVbl(int h, K k, V v) {
            Clbss<?> kd = null;
            boolfbn sfbrdhfd = fblsf;
            for (TrffNodf<K,V> p = root;;) {
                int dir, ph; K pk;
                if (p == null) {
                    first = root = nfw TrffNodf<K,V>(h, k, v, null, null);
                    brfbk;
                }
                flsf if ((ph = p.hbsh) > h)
                    dir = -1;
                flsf if (ph < h)
                    dir = 1;
                flsf if ((pk = p.kfy) == k || (pk != null && k.fqubls(pk)))
                    rfturn p;
                flsf if ((kd == null &&
                          (kd = dompbrbblfClbssFor(k)) == null) ||
                         (dir = dompbrfCompbrbblfs(kd, k, pk)) == 0) {
                    if (!sfbrdhfd) {
                        TrffNodf<K,V> q, dh;
                        sfbrdhfd = truf;
                        if (((dh = p.lfft) != null &&
                             (q = dh.findTrffNodf(h, k, kd)) != null) ||
                            ((dh = p.right) != null &&
                             (q = dh.findTrffNodf(h, k, kd)) != null))
                            rfturn q;
                    }
                    dir = tifBrfbkOrdfr(k, pk);
                }

                TrffNodf<K,V> xp = p;
                if ((p = (dir <= 0) ? p.lfft : p.right) == null) {
                    TrffNodf<K,V> x, f = first;
                    first = x = nfw TrffNodf<K,V>(h, k, v, f, xp);
                    if (f != null)
                        f.prfv = x;
                    if (dir <= 0)
                        xp.lfft = x;
                    flsf
                        xp.right = x;
                    if (!xp.rfd)
                        x.rfd = truf;
                    flsf {
                        lodkRoot();
                        try {
                            root = bblbndfInsfrtion(root, x);
                        } finblly {
                            unlodkRoot();
                        }
                    }
                    brfbk;
                }
            }
            bssfrt dhfdkInvbribnts(root);
            rfturn null;
        }

        /**
         * Rfmovfs thf givfn nodf, thbt must bf prfsfnt bfforf this
         * dbll.  This is mfssifr thbn typidbl rfd-blbdk dflftion dodf
         * bfdbusf wf dbnnot swbp thf dontfnts of bn intfrior nodf
         * with b lfbf suddfssor thbt is pinnfd by "nfxt" pointfrs
         * thbt brf bddfssiblf indfpfndfntly of lodk. So instfbd wf
         * swbp thf trff linkbgfs.
         *
         * @rfturn truf if now too smbll, so should bf untrffififd
         */
        finbl boolfbn rfmovfTrffNodf(TrffNodf<K,V> p) {
            TrffNodf<K,V> nfxt = (TrffNodf<K,V>)p.nfxt;
            TrffNodf<K,V> prfd = p.prfv;  // unlink trbvfrsbl pointfrs
            TrffNodf<K,V> r, rl;
            if (prfd == null)
                first = nfxt;
            flsf
                prfd.nfxt = nfxt;
            if (nfxt != null)
                nfxt.prfv = prfd;
            if (first == null) {
                root = null;
                rfturn truf;
            }
            if ((r = root) == null || r.right == null || // too smbll
                (rl = r.lfft) == null || rl.lfft == null)
                rfturn truf;
            lodkRoot();
            try {
                TrffNodf<K,V> rfplbdfmfnt;
                TrffNodf<K,V> pl = p.lfft;
                TrffNodf<K,V> pr = p.right;
                if (pl != null && pr != null) {
                    TrffNodf<K,V> s = pr, sl;
                    whilf ((sl = s.lfft) != null) // find suddfssor
                        s = sl;
                    boolfbn d = s.rfd; s.rfd = p.rfd; p.rfd = d; // swbp dolors
                    TrffNodf<K,V> sr = s.right;
                    TrffNodf<K,V> pp = p.pbrfnt;
                    if (s == pr) { // p wbs s's dirfdt pbrfnt
                        p.pbrfnt = s;
                        s.right = p;
                    }
                    flsf {
                        TrffNodf<K,V> sp = s.pbrfnt;
                        if ((p.pbrfnt = sp) != null) {
                            if (s == sp.lfft)
                                sp.lfft = p;
                            flsf
                                sp.right = p;
                        }
                        if ((s.right = pr) != null)
                            pr.pbrfnt = s;
                    }
                    p.lfft = null;
                    if ((p.right = sr) != null)
                        sr.pbrfnt = p;
                    if ((s.lfft = pl) != null)
                        pl.pbrfnt = s;
                    if ((s.pbrfnt = pp) == null)
                        r = s;
                    flsf if (p == pp.lfft)
                        pp.lfft = s;
                    flsf
                        pp.right = s;
                    if (sr != null)
                        rfplbdfmfnt = sr;
                    flsf
                        rfplbdfmfnt = p;
                }
                flsf if (pl != null)
                    rfplbdfmfnt = pl;
                flsf if (pr != null)
                    rfplbdfmfnt = pr;
                flsf
                    rfplbdfmfnt = p;
                if (rfplbdfmfnt != p) {
                    TrffNodf<K,V> pp = rfplbdfmfnt.pbrfnt = p.pbrfnt;
                    if (pp == null)
                        r = rfplbdfmfnt;
                    flsf if (p == pp.lfft)
                        pp.lfft = rfplbdfmfnt;
                    flsf
                        pp.right = rfplbdfmfnt;
                    p.lfft = p.right = p.pbrfnt = null;
                }

                root = (p.rfd) ? r : bblbndfDflftion(r, rfplbdfmfnt);

                if (p == rfplbdfmfnt) {  // dftbdh pointfrs
                    TrffNodf<K,V> pp;
                    if ((pp = p.pbrfnt) != null) {
                        if (p == pp.lfft)
                            pp.lfft = null;
                        flsf if (p == pp.right)
                            pp.right = null;
                        p.pbrfnt = null;
                    }
                }
            } finblly {
                unlodkRoot();
            }
            bssfrt dhfdkInvbribnts(root);
            rfturn fblsf;
        }

        /* ------------------------------------------------------------ */
        // Rfd-blbdk trff mfthods, bll bdbptfd from CLR

        stbtid <K,V> TrffNodf<K,V> rotbtfLfft(TrffNodf<K,V> root,
                                              TrffNodf<K,V> p) {
            TrffNodf<K,V> r, pp, rl;
            if (p != null && (r = p.right) != null) {
                if ((rl = p.right = r.lfft) != null)
                    rl.pbrfnt = p;
                if ((pp = r.pbrfnt = p.pbrfnt) == null)
                    (root = r).rfd = fblsf;
                flsf if (pp.lfft == p)
                    pp.lfft = r;
                flsf
                    pp.right = r;
                r.lfft = p;
                p.pbrfnt = r;
            }
            rfturn root;
        }

        stbtid <K,V> TrffNodf<K,V> rotbtfRight(TrffNodf<K,V> root,
                                               TrffNodf<K,V> p) {
            TrffNodf<K,V> l, pp, lr;
            if (p != null && (l = p.lfft) != null) {
                if ((lr = p.lfft = l.right) != null)
                    lr.pbrfnt = p;
                if ((pp = l.pbrfnt = p.pbrfnt) == null)
                    (root = l).rfd = fblsf;
                flsf if (pp.right == p)
                    pp.right = l;
                flsf
                    pp.lfft = l;
                l.right = p;
                p.pbrfnt = l;
            }
            rfturn root;
        }

        stbtid <K,V> TrffNodf<K,V> bblbndfInsfrtion(TrffNodf<K,V> root,
                                                    TrffNodf<K,V> x) {
            x.rfd = truf;
            for (TrffNodf<K,V> xp, xpp, xppl, xppr;;) {
                if ((xp = x.pbrfnt) == null) {
                    x.rfd = fblsf;
                    rfturn x;
                }
                flsf if (!xp.rfd || (xpp = xp.pbrfnt) == null)
                    rfturn root;
                if (xp == (xppl = xpp.lfft)) {
                    if ((xppr = xpp.right) != null && xppr.rfd) {
                        xppr.rfd = fblsf;
                        xp.rfd = fblsf;
                        xpp.rfd = truf;
                        x = xpp;
                    }
                    flsf {
                        if (x == xp.right) {
                            root = rotbtfLfft(root, x = xp);
                            xpp = (xp = x.pbrfnt) == null ? null : xp.pbrfnt;
                        }
                        if (xp != null) {
                            xp.rfd = fblsf;
                            if (xpp != null) {
                                xpp.rfd = truf;
                                root = rotbtfRight(root, xpp);
                            }
                        }
                    }
                }
                flsf {
                    if (xppl != null && xppl.rfd) {
                        xppl.rfd = fblsf;
                        xp.rfd = fblsf;
                        xpp.rfd = truf;
                        x = xpp;
                    }
                    flsf {
                        if (x == xp.lfft) {
                            root = rotbtfRight(root, x = xp);
                            xpp = (xp = x.pbrfnt) == null ? null : xp.pbrfnt;
                        }
                        if (xp != null) {
                            xp.rfd = fblsf;
                            if (xpp != null) {
                                xpp.rfd = truf;
                                root = rotbtfLfft(root, xpp);
                            }
                        }
                    }
                }
            }
        }

        stbtid <K,V> TrffNodf<K,V> bblbndfDflftion(TrffNodf<K,V> root,
                                                   TrffNodf<K,V> x) {
            for (TrffNodf<K,V> xp, xpl, xpr;;)  {
                if (x == null || x == root)
                    rfturn root;
                flsf if ((xp = x.pbrfnt) == null) {
                    x.rfd = fblsf;
                    rfturn x;
                }
                flsf if (x.rfd) {
                    x.rfd = fblsf;
                    rfturn root;
                }
                flsf if ((xpl = xp.lfft) == x) {
                    if ((xpr = xp.right) != null && xpr.rfd) {
                        xpr.rfd = fblsf;
                        xp.rfd = truf;
                        root = rotbtfLfft(root, xp);
                        xpr = (xp = x.pbrfnt) == null ? null : xp.right;
                    }
                    if (xpr == null)
                        x = xp;
                    flsf {
                        TrffNodf<K,V> sl = xpr.lfft, sr = xpr.right;
                        if ((sr == null || !sr.rfd) &&
                            (sl == null || !sl.rfd)) {
                            xpr.rfd = truf;
                            x = xp;
                        }
                        flsf {
                            if (sr == null || !sr.rfd) {
                                if (sl != null)
                                    sl.rfd = fblsf;
                                xpr.rfd = truf;
                                root = rotbtfRight(root, xpr);
                                xpr = (xp = x.pbrfnt) == null ?
                                    null : xp.right;
                            }
                            if (xpr != null) {
                                xpr.rfd = (xp == null) ? fblsf : xp.rfd;
                                if ((sr = xpr.right) != null)
                                    sr.rfd = fblsf;
                            }
                            if (xp != null) {
                                xp.rfd = fblsf;
                                root = rotbtfLfft(root, xp);
                            }
                            x = root;
                        }
                    }
                }
                flsf { // symmftrid
                    if (xpl != null && xpl.rfd) {
                        xpl.rfd = fblsf;
                        xp.rfd = truf;
                        root = rotbtfRight(root, xp);
                        xpl = (xp = x.pbrfnt) == null ? null : xp.lfft;
                    }
                    if (xpl == null)
                        x = xp;
                    flsf {
                        TrffNodf<K,V> sl = xpl.lfft, sr = xpl.right;
                        if ((sl == null || !sl.rfd) &&
                            (sr == null || !sr.rfd)) {
                            xpl.rfd = truf;
                            x = xp;
                        }
                        flsf {
                            if (sl == null || !sl.rfd) {
                                if (sr != null)
                                    sr.rfd = fblsf;
                                xpl.rfd = truf;
                                root = rotbtfLfft(root, xpl);
                                xpl = (xp = x.pbrfnt) == null ?
                                    null : xp.lfft;
                            }
                            if (xpl != null) {
                                xpl.rfd = (xp == null) ? fblsf : xp.rfd;
                                if ((sl = xpl.lfft) != null)
                                    sl.rfd = fblsf;
                            }
                            if (xp != null) {
                                xp.rfd = fblsf;
                                root = rotbtfRight(root, xp);
                            }
                            x = root;
                        }
                    }
                }
            }
        }

        /**
         * Rfdursivf invbribnt dhfdk
         */
        stbtid <K,V> boolfbn dhfdkInvbribnts(TrffNodf<K,V> t) {
            TrffNodf<K,V> tp = t.pbrfnt, tl = t.lfft, tr = t.right,
                tb = t.prfv, tn = (TrffNodf<K,V>)t.nfxt;
            if (tb != null && tb.nfxt != t)
                rfturn fblsf;
            if (tn != null && tn.prfv != t)
                rfturn fblsf;
            if (tp != null && t != tp.lfft && t != tp.right)
                rfturn fblsf;
            if (tl != null && (tl.pbrfnt != t || tl.hbsh > t.hbsh))
                rfturn fblsf;
            if (tr != null && (tr.pbrfnt != t || tr.hbsh < t.hbsh))
                rfturn fblsf;
            if (t.rfd && tl != null && tl.rfd && tr != null && tr.rfd)
                rfturn fblsf;
            if (tl != null && !dhfdkInvbribnts(tl))
                rfturn fblsf;
            if (tr != null && !dhfdkInvbribnts(tr))
                rfturn fblsf;
            rfturn truf;
        }

        privbtf stbtid finbl sun.misd.Unsbff U;
        privbtf stbtid finbl long LOCKSTATE;
        stbtid {
            try {
                U = sun.misd.Unsbff.gftUnsbff();
                Clbss<?> k = TrffBin.dlbss;
                LOCKSTATE = U.objfdtFifldOffsft
                    (k.gftDfdlbrfdFifld("lodkStbtf"));
            } dbtdh (Exdfption f) {
                throw nfw Error(f);
            }
        }
    }

    /* ----------------Tbblf Trbvfrsbl -------------- */

    /**
     * Rfdords thf tbblf, its lfngth, bnd durrfnt trbvfrsbl indfx for b
     * trbvfrsfr thbt must prodfss b rfgion of b forwbrdfd tbblf bfforf
     * prodffding with durrfnt tbblf.
     */
    stbtid finbl dlbss TbblfStbdk<K,V> {
        int lfngth;
        int indfx;
        Nodf<K,V>[] tbb;
        TbblfStbdk<K,V> nfxt;
    }

    /**
     * Endbpsulbtfs trbvfrsbl for mfthods sudh bs dontbinsVbluf; blso
     * sfrvfs bs b bbsf dlbss for othfr itfrbtors bnd splitfrbtors.
     *
     * Mfthod bdvbndf visits ondf fbdh still-vblid nodf thbt wbs
     * rfbdhbblf upon itfrbtor donstrudtion. It might miss somf thbt
     * wfrf bddfd to b bin bftfr thf bin wbs visitfd, whidh is OK wrt
     * donsistfndy gubrbntffs. Mbintbining this propfrty in thf fbdf
     * of possiblf ongoing rfsizfs rfquirfs b fbir bmount of
     * bookkffping stbtf thbt is diffidult to optimizf bwby bmidst
     * volbtilf bddfssfs.  Evfn so, trbvfrsbl mbintbins rfbsonbblf
     * throughput.
     *
     * Normblly, itfrbtion prodffds bin-by-bin trbvfrsing lists.
     * Howfvfr, if thf tbblf hbs bffn rfsizfd, thfn bll futurf stfps
     * must trbvfrsf both thf bin bt thf durrfnt indfx bs wfll bs bt
     * (indfx + bbsfSizf); bnd so on for furthfr rfsizings. To
     * pbrbnoidblly dopf with potfntibl shbring by usfrs of itfrbtors
     * bdross thrfbds, itfrbtion tfrminbtfs if b bounds dhfdks fbils
     * for b tbblf rfbd.
     */
    stbtid dlbss Trbvfrsfr<K,V> {
        Nodf<K,V>[] tbb;        // durrfnt tbblf; updbtfd if rfsizfd
        Nodf<K,V> nfxt;         // thf nfxt fntry to usf
        TbblfStbdk<K,V> stbdk, spbrf; // to sbvf/rfstorf on ForwbrdingNodfs
        int indfx;              // indfx of bin to usf nfxt
        int bbsfIndfx;          // durrfnt indfx of initibl tbblf
        int bbsfLimit;          // indfx bound for initibl tbblf
        finbl int bbsfSizf;     // initibl tbblf sizf

        Trbvfrsfr(Nodf<K,V>[] tbb, int sizf, int indfx, int limit) {
            this.tbb = tbb;
            this.bbsfSizf = sizf;
            this.bbsfIndfx = this.indfx = indfx;
            this.bbsfLimit = limit;
            this.nfxt = null;
        }

        /**
         * Advbndfs if possiblf, rfturning nfxt vblid nodf, or null if nonf.
         */
        finbl Nodf<K,V> bdvbndf() {
            Nodf<K,V> f;
            if ((f = nfxt) != null)
                f = f.nfxt;
            for (;;) {
                Nodf<K,V>[] t; int i, n;  // must usf lodbls in dhfdks
                if (f != null)
                    rfturn nfxt = f;
                if (bbsfIndfx >= bbsfLimit || (t = tbb) == null ||
                    (n = t.lfngth) <= (i = indfx) || i < 0)
                    rfturn nfxt = null;
                if ((f = tbbAt(t, i)) != null && f.hbsh < 0) {
                    if (f instbndfof ForwbrdingNodf) {
                        tbb = ((ForwbrdingNodf<K,V>)f).nfxtTbblf;
                        f = null;
                        pushStbtf(t, i, n);
                        dontinuf;
                    }
                    flsf if (f instbndfof TrffBin)
                        f = ((TrffBin<K,V>)f).first;
                    flsf
                        f = null;
                }
                if (stbdk != null)
                    rfdovfrStbtf(n);
                flsf if ((indfx = i + bbsfSizf) >= n)
                    indfx = ++bbsfIndfx; // visit uppfr slots if prfsfnt
            }
        }

        /**
         * Sbvfs trbvfrsbl stbtf upon fndountfring b forwbrding nodf.
         */
        privbtf void pushStbtf(Nodf<K,V>[] t, int i, int n) {
            TbblfStbdk<K,V> s = spbrf;  // rfusf if possiblf
            if (s != null)
                spbrf = s.nfxt;
            flsf
                s = nfw TbblfStbdk<K,V>();
            s.tbb = t;
            s.lfngth = n;
            s.indfx = i;
            s.nfxt = stbdk;
            stbdk = s;
        }

        /**
         * Possibly pops trbvfrsbl stbtf.
         *
         * @pbrbm n lfngth of durrfnt tbblf
         */
        privbtf void rfdovfrStbtf(int n) {
            TbblfStbdk<K,V> s; int lfn;
            whilf ((s = stbdk) != null && (indfx += (lfn = s.lfngth)) >= n) {
                n = lfn;
                indfx = s.indfx;
                tbb = s.tbb;
                s.tbb = null;
                TbblfStbdk<K,V> nfxt = s.nfxt;
                s.nfxt = spbrf; // sbvf for rfusf
                stbdk = nfxt;
                spbrf = s;
            }
            if (s == null && (indfx += bbsfSizf) >= n)
                indfx = ++bbsfIndfx;
        }
    }

    /**
     * Bbsf of kfy, vbluf, bnd fntry Itfrbtors. Adds fiflds to
     * Trbvfrsfr to support itfrbtor.rfmovf.
     */
    stbtid dlbss BbsfItfrbtor<K,V> fxtfnds Trbvfrsfr<K,V> {
        finbl CondurrfntHbshMbp<K,V> mbp;
        Nodf<K,V> lbstRfturnfd;
        BbsfItfrbtor(Nodf<K,V>[] tbb, int sizf, int indfx, int limit,
                    CondurrfntHbshMbp<K,V> mbp) {
            supfr(tbb, sizf, indfx, limit);
            this.mbp = mbp;
            bdvbndf();
        }

        publid finbl boolfbn hbsNfxt() { rfturn nfxt != null; }
        publid finbl boolfbn hbsMorfElfmfnts() { rfturn nfxt != null; }

        publid finbl void rfmovf() {
            Nodf<K,V> p;
            if ((p = lbstRfturnfd) == null)
                throw nfw IllfgblStbtfExdfption();
            lbstRfturnfd = null;
            mbp.rfplbdfNodf(p.kfy, null, null);
        }
    }

    stbtid finbl dlbss KfyItfrbtor<K,V> fxtfnds BbsfItfrbtor<K,V>
        implfmfnts Itfrbtor<K>, Enumfrbtion<K> {
        KfyItfrbtor(Nodf<K,V>[] tbb, int indfx, int sizf, int limit,
                    CondurrfntHbshMbp<K,V> mbp) {
            supfr(tbb, indfx, sizf, limit, mbp);
        }

        publid finbl K nfxt() {
            Nodf<K,V> p;
            if ((p = nfxt) == null)
                throw nfw NoSudhElfmfntExdfption();
            K k = p.kfy;
            lbstRfturnfd = p;
            bdvbndf();
            rfturn k;
        }

        publid finbl K nfxtElfmfnt() { rfturn nfxt(); }
    }

    stbtid finbl dlbss VblufItfrbtor<K,V> fxtfnds BbsfItfrbtor<K,V>
        implfmfnts Itfrbtor<V>, Enumfrbtion<V> {
        VblufItfrbtor(Nodf<K,V>[] tbb, int indfx, int sizf, int limit,
                      CondurrfntHbshMbp<K,V> mbp) {
            supfr(tbb, indfx, sizf, limit, mbp);
        }

        publid finbl V nfxt() {
            Nodf<K,V> p;
            if ((p = nfxt) == null)
                throw nfw NoSudhElfmfntExdfption();
            V v = p.vbl;
            lbstRfturnfd = p;
            bdvbndf();
            rfturn v;
        }

        publid finbl V nfxtElfmfnt() { rfturn nfxt(); }
    }

    stbtid finbl dlbss EntryItfrbtor<K,V> fxtfnds BbsfItfrbtor<K,V>
        implfmfnts Itfrbtor<Mbp.Entry<K,V>> {
        EntryItfrbtor(Nodf<K,V>[] tbb, int indfx, int sizf, int limit,
                      CondurrfntHbshMbp<K,V> mbp) {
            supfr(tbb, indfx, sizf, limit, mbp);
        }

        publid finbl Mbp.Entry<K,V> nfxt() {
            Nodf<K,V> p;
            if ((p = nfxt) == null)
                throw nfw NoSudhElfmfntExdfption();
            K k = p.kfy;
            V v = p.vbl;
            lbstRfturnfd = p;
            bdvbndf();
            rfturn nfw MbpEntry<K,V>(k, v, mbp);
        }
    }

    /**
     * Exportfd Entry for EntryItfrbtor
     */
    stbtid finbl dlbss MbpEntry<K,V> implfmfnts Mbp.Entry<K,V> {
        finbl K kfy; // non-null
        V vbl;       // non-null
        finbl CondurrfntHbshMbp<K,V> mbp;
        MbpEntry(K kfy, V vbl, CondurrfntHbshMbp<K,V> mbp) {
            this.kfy = kfy;
            this.vbl = vbl;
            this.mbp = mbp;
        }
        publid K gftKfy()        { rfturn kfy; }
        publid V gftVbluf()      { rfturn vbl; }
        publid int hbshCodf()    { rfturn kfy.hbshCodf() ^ vbl.hbshCodf(); }
        publid String toString() { rfturn kfy + "=" + vbl; }

        publid boolfbn fqubls(Objfdt o) {
            Objfdt k, v; Mbp.Entry<?,?> f;
            rfturn ((o instbndfof Mbp.Entry) &&
                    (k = (f = (Mbp.Entry<?,?>)o).gftKfy()) != null &&
                    (v = f.gftVbluf()) != null &&
                    (k == kfy || k.fqubls(kfy)) &&
                    (v == vbl || v.fqubls(vbl)));
        }

        /**
         * Sfts our fntry's vbluf bnd writfs through to thf mbp. Thf
         * vbluf to rfturn is somfwhbt brbitrbry hfrf. Sindf wf do not
         * nfdfssbrily trbdk bsyndhronous dhbngfs, thf most rfdfnt
         * "prfvious" vbluf dould bf difffrfnt from whbt wf rfturn (or
         * dould fvfn hbvf bffn rfmovfd, in whidh dbsf thf put will
         * rf-fstbblish). Wf do not bnd dbnnot gubrbntff morf.
         */
        publid V sftVbluf(V vbluf) {
            if (vbluf == null) throw nfw NullPointfrExdfption();
            V v = vbl;
            vbl = vbluf;
            mbp.put(kfy, vbluf);
            rfturn v;
        }
    }

    stbtid finbl dlbss KfySplitfrbtor<K,V> fxtfnds Trbvfrsfr<K,V>
        implfmfnts Splitfrbtor<K> {
        long fst;               // sizf fstimbtf
        KfySplitfrbtor(Nodf<K,V>[] tbb, int sizf, int indfx, int limit,
                       long fst) {
            supfr(tbb, sizf, indfx, limit);
            this.fst = fst;
        }

        publid Splitfrbtor<K> trySplit() {
            int i, f, h;
            rfturn (h = ((i = bbsfIndfx) + (f = bbsfLimit)) >>> 1) <= i ? null :
                nfw KfySplitfrbtor<K,V>(tbb, bbsfSizf, bbsfLimit = h,
                                        f, fst >>>= 1);
        }

        publid void forEbdhRfmbining(Consumfr<? supfr K> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            for (Nodf<K,V> p; (p = bdvbndf()) != null;)
                bdtion.bddfpt(p.kfy);
        }

        publid boolfbn tryAdvbndf(Consumfr<? supfr K> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V> p;
            if ((p = bdvbndf()) == null)
                rfturn fblsf;
            bdtion.bddfpt(p.kfy);
            rfturn truf;
        }

        publid long fstimbtfSizf() { rfturn fst; }

        publid int dhbrbdtfristids() {
            rfturn Splitfrbtor.DISTINCT | Splitfrbtor.CONCURRENT |
                Splitfrbtor.NONNULL;
        }
    }

    stbtid finbl dlbss VblufSplitfrbtor<K,V> fxtfnds Trbvfrsfr<K,V>
        implfmfnts Splitfrbtor<V> {
        long fst;               // sizf fstimbtf
        VblufSplitfrbtor(Nodf<K,V>[] tbb, int sizf, int indfx, int limit,
                         long fst) {
            supfr(tbb, sizf, indfx, limit);
            this.fst = fst;
        }

        publid Splitfrbtor<V> trySplit() {
            int i, f, h;
            rfturn (h = ((i = bbsfIndfx) + (f = bbsfLimit)) >>> 1) <= i ? null :
                nfw VblufSplitfrbtor<K,V>(tbb, bbsfSizf, bbsfLimit = h,
                                          f, fst >>>= 1);
        }

        publid void forEbdhRfmbining(Consumfr<? supfr V> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            for (Nodf<K,V> p; (p = bdvbndf()) != null;)
                bdtion.bddfpt(p.vbl);
        }

        publid boolfbn tryAdvbndf(Consumfr<? supfr V> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V> p;
            if ((p = bdvbndf()) == null)
                rfturn fblsf;
            bdtion.bddfpt(p.vbl);
            rfturn truf;
        }

        publid long fstimbtfSizf() { rfturn fst; }

        publid int dhbrbdtfristids() {
            rfturn Splitfrbtor.CONCURRENT | Splitfrbtor.NONNULL;
        }
    }

    stbtid finbl dlbss EntrySplitfrbtor<K,V> fxtfnds Trbvfrsfr<K,V>
        implfmfnts Splitfrbtor<Mbp.Entry<K,V>> {
        finbl CondurrfntHbshMbp<K,V> mbp; // To fxport MbpEntry
        long fst;               // sizf fstimbtf
        EntrySplitfrbtor(Nodf<K,V>[] tbb, int sizf, int indfx, int limit,
                         long fst, CondurrfntHbshMbp<K,V> mbp) {
            supfr(tbb, sizf, indfx, limit);
            this.mbp = mbp;
            this.fst = fst;
        }

        publid Splitfrbtor<Mbp.Entry<K,V>> trySplit() {
            int i, f, h;
            rfturn (h = ((i = bbsfIndfx) + (f = bbsfLimit)) >>> 1) <= i ? null :
                nfw EntrySplitfrbtor<K,V>(tbb, bbsfSizf, bbsfLimit = h,
                                          f, fst >>>= 1, mbp);
        }

        publid void forEbdhRfmbining(Consumfr<? supfr Mbp.Entry<K,V>> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                bdtion.bddfpt(nfw MbpEntry<K,V>(p.kfy, p.vbl, mbp));
        }

        publid boolfbn tryAdvbndf(Consumfr<? supfr Mbp.Entry<K,V>> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V> p;
            if ((p = bdvbndf()) == null)
                rfturn fblsf;
            bdtion.bddfpt(nfw MbpEntry<K,V>(p.kfy, p.vbl, mbp));
            rfturn truf;
        }

        publid long fstimbtfSizf() { rfturn fst; }

        publid int dhbrbdtfristids() {
            rfturn Splitfrbtor.DISTINCT | Splitfrbtor.CONCURRENT |
                Splitfrbtor.NONNULL;
        }
    }

    // Pbrbllfl bulk opfrbtions

    /**
     * Computfs initibl bbtdh vbluf for bulk tbsks. Thf rfturnfd vbluf
     * is bpproximbtfly fxp2 of thf numbfr of timfs (minus onf) to
     * split tbsk by two bfforf fxfduting lfbf bdtion. This vbluf is
     * fbstfr to domputf bnd morf donvfnifnt to usf bs b guidf to
     * splitting thbn is thf dfpth, sindf it is usfd whilf dividing by
     * two bnywby.
     */
    finbl int bbtdhFor(long b) {
        long n;
        if (b == Long.MAX_VALUE || (n = sumCount()) <= 1L || n < b)
            rfturn 0;
        int sp = ForkJoinPool.gftCommonPoolPbrbllflism() << 2; // slbdk of 4
        rfturn (b <= 0L || (n /= b) >= sp) ? sp : (int)n;
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh (kfy, vbluf).
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm bdtion thf bdtion
     * @sindf 1.8
     */
    publid void forEbdh(long pbrbllflismThrfshold,
                        BiConsumfr<? supfr K,? supfr V> bdtion) {
        if (bdtion == null) throw nfw NullPointfrExdfption();
        nfw ForEbdhMbppingTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             bdtion).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh non-null trbnsformbtion
     * of fbdh (kfy, vbluf).
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf thf bdtion is not bpplifd)
     * @pbrbm bdtion thf bdtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @sindf 1.8
     */
    publid <U> void forEbdh(long pbrbllflismThrfshold,
                            BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr,
                            Consumfr<? supfr U> bdtion) {
        if (trbnsformfr == null || bdtion == null)
            throw nfw NullPointfrExdfption();
        nfw ForEbdhTrbnsformfdMbppingTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             trbnsformfr, bdtion).invokf();
    }

    /**
     * Rfturns b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh (kfy, vbluf), or null if nonf.  Upon
     * suddfss, furthfr flfmfnt prodfssing is supprfssfd bnd thf
     * rfsults of bny othfr pbrbllfl invodbtions of thf sfbrdh
     * fundtion brf ignorfd.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm sfbrdhFundtion b fundtion rfturning b non-null
     * rfsult on suddfss, flsf null
     * @pbrbm <U> thf rfturn typf of thf sfbrdh fundtion
     * @rfturn b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh (kfy, vbluf), or null if nonf
     * @sindf 1.8
     */
    publid <U> U sfbrdh(long pbrbllflismThrfshold,
                        BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> sfbrdhFundtion) {
        if (sfbrdhFundtion == null) throw nfw NullPointfrExdfption();
        rfturn nfw SfbrdhMbppingsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             sfbrdhFundtion, nfw AtomidRfffrfndf<U>()).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs using thf givfn rfdudfr to
     * dombinf vblufs, or null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf it is not dombinfd)
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs
     * @sindf 1.8
     */
    publid <U> U rfdudf(long pbrbllflismThrfshold,
                        BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr,
                        BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfMbppingsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs using thf givfn rfdudfr to
     * dombinf vblufs, bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs
     * @sindf 1.8
     */
    publid doublf rfdudfToDoublf(long pbrbllflismThrfshold,
                                 ToDoublfBiFundtion<? supfr K, ? supfr V> trbnsformfr,
                                 doublf bbsis,
                                 DoublfBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfMbppingsToDoublfTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs using thf givfn rfdudfr to
     * dombinf vblufs, bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs
     * @sindf 1.8
     */
    publid long rfdudfToLong(long pbrbllflismThrfshold,
                             ToLongBiFundtion<? supfr K, ? supfr V> trbnsformfr,
                             long bbsis,
                             LongBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfMbppingsToLongTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs using thf givfn rfdudfr to
     * dombinf vblufs, bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll (kfy, vbluf) pbirs
     * @sindf 1.8
     */
    publid int rfdudfToInt(long pbrbllflismThrfshold,
                           ToIntBiFundtion<? supfr K, ? supfr V> trbnsformfr,
                           int bbsis,
                           IntBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfMbppingsToIntTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh kfy.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm bdtion thf bdtion
     * @sindf 1.8
     */
    publid void forEbdhKfy(long pbrbllflismThrfshold,
                           Consumfr<? supfr K> bdtion) {
        if (bdtion == null) throw nfw NullPointfrExdfption();
        nfw ForEbdhKfyTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             bdtion).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh non-null trbnsformbtion
     * of fbdh kfy.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf thf bdtion is not bpplifd)
     * @pbrbm bdtion thf bdtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @sindf 1.8
     */
    publid <U> void forEbdhKfy(long pbrbllflismThrfshold,
                               Fundtion<? supfr K, ? fxtfnds U> trbnsformfr,
                               Consumfr<? supfr U> bdtion) {
        if (trbnsformfr == null || bdtion == null)
            throw nfw NullPointfrExdfption();
        nfw ForEbdhTrbnsformfdKfyTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             trbnsformfr, bdtion).invokf();
    }

    /**
     * Rfturns b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh kfy, or null if nonf. Upon suddfss,
     * furthfr flfmfnt prodfssing is supprfssfd bnd thf rfsults of
     * bny othfr pbrbllfl invodbtions of thf sfbrdh fundtion brf
     * ignorfd.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm sfbrdhFundtion b fundtion rfturning b non-null
     * rfsult on suddfss, flsf null
     * @pbrbm <U> thf rfturn typf of thf sfbrdh fundtion
     * @rfturn b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh kfy, or null if nonf
     * @sindf 1.8
     */
    publid <U> U sfbrdhKfys(long pbrbllflismThrfshold,
                            Fundtion<? supfr K, ? fxtfnds U> sfbrdhFundtion) {
        if (sfbrdhFundtion == null) throw nfw NullPointfrExdfption();
        rfturn nfw SfbrdhKfysTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             sfbrdhFundtion, nfw AtomidRfffrfndf<U>()).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting bll kfys using thf givfn
     * rfdudfr to dombinf vblufs, or null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting bll kfys using thf givfn
     * rfdudfr to dombinf vblufs, or null if nonf
     * @sindf 1.8
     */
    publid K rfdudfKfys(long pbrbllflismThrfshold,
                        BiFundtion<? supfr K, ? supfr K, ? fxtfnds K> rfdudfr) {
        if (rfdudfr == null) throw nfw NullPointfrExdfption();
        rfturn nfw RfdudfKfysTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys using thf givfn rfdudfr to dombinf vblufs, or
     * null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf it is not dombinfd)
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys
     * @sindf 1.8
     */
    publid <U> U rfdudfKfys(long pbrbllflismThrfshold,
                            Fundtion<? supfr K, ? fxtfnds U> trbnsformfr,
         BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfKfysTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys using thf givfn rfdudfr to dombinf vblufs, bnd
     * thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys
     * @sindf 1.8
     */
    publid doublf rfdudfKfysToDoublf(long pbrbllflismThrfshold,
                                     ToDoublfFundtion<? supfr K> trbnsformfr,
                                     doublf bbsis,
                                     DoublfBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfKfysToDoublfTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys using thf givfn rfdudfr to dombinf vblufs, bnd
     * thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys
     * @sindf 1.8
     */
    publid long rfdudfKfysToLong(long pbrbllflismThrfshold,
                                 ToLongFundtion<? supfr K> trbnsformfr,
                                 long bbsis,
                                 LongBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfKfysToLongTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys using thf givfn rfdudfr to dombinf vblufs, bnd
     * thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll kfys
     * @sindf 1.8
     */
    publid int rfdudfKfysToInt(long pbrbllflismThrfshold,
                               ToIntFundtion<? supfr K> trbnsformfr,
                               int bbsis,
                               IntBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfKfysToIntTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm bdtion thf bdtion
     * @sindf 1.8
     */
    publid void forEbdhVbluf(long pbrbllflismThrfshold,
                             Consumfr<? supfr V> bdtion) {
        if (bdtion == null)
            throw nfw NullPointfrExdfption();
        nfw ForEbdhVblufTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             bdtion).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh non-null trbnsformbtion
     * of fbdh vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf thf bdtion is not bpplifd)
     * @pbrbm bdtion thf bdtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @sindf 1.8
     */
    publid <U> void forEbdhVbluf(long pbrbllflismThrfshold,
                                 Fundtion<? supfr V, ? fxtfnds U> trbnsformfr,
                                 Consumfr<? supfr U> bdtion) {
        if (trbnsformfr == null || bdtion == null)
            throw nfw NullPointfrExdfption();
        nfw ForEbdhTrbnsformfdVblufTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             trbnsformfr, bdtion).invokf();
    }

    /**
     * Rfturns b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh vbluf, or null if nonf.  Upon suddfss,
     * furthfr flfmfnt prodfssing is supprfssfd bnd thf rfsults of
     * bny othfr pbrbllfl invodbtions of thf sfbrdh fundtion brf
     * ignorfd.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm sfbrdhFundtion b fundtion rfturning b non-null
     * rfsult on suddfss, flsf null
     * @pbrbm <U> thf rfturn typf of thf sfbrdh fundtion
     * @rfturn b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh vbluf, or null if nonf
     * @sindf 1.8
     */
    publid <U> U sfbrdhVblufs(long pbrbllflismThrfshold,
                              Fundtion<? supfr V, ? fxtfnds U> sfbrdhFundtion) {
        if (sfbrdhFundtion == null) throw nfw NullPointfrExdfption();
        rfturn nfw SfbrdhVblufsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             sfbrdhFundtion, nfw AtomidRfffrfndf<U>()).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting bll vblufs using thf
     * givfn rfdudfr to dombinf vblufs, or null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting bll vblufs
     * @sindf 1.8
     */
    publid V rfdudfVblufs(long pbrbllflismThrfshold,
                          BiFundtion<? supfr V, ? supfr V, ? fxtfnds V> rfdudfr) {
        if (rfdudfr == null) throw nfw NullPointfrExdfption();
        rfturn nfw RfdudfVblufsTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs using thf givfn rfdudfr to dombinf vblufs, or
     * null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf it is not dombinfd)
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs
     * @sindf 1.8
     */
    publid <U> U rfdudfVblufs(long pbrbllflismThrfshold,
                              Fundtion<? supfr V, ? fxtfnds U> trbnsformfr,
                              BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfVblufsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs
     * @sindf 1.8
     */
    publid doublf rfdudfVblufsToDoublf(long pbrbllflismThrfshold,
                                       ToDoublfFundtion<? supfr V> trbnsformfr,
                                       doublf bbsis,
                                       DoublfBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfVblufsToDoublfTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs
     * @sindf 1.8
     */
    publid long rfdudfVblufsToLong(long pbrbllflismThrfshold,
                                   ToLongFundtion<? supfr V> trbnsformfr,
                                   long bbsis,
                                   LongBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfVblufsToLongTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll vblufs
     * @sindf 1.8
     */
    publid int rfdudfVblufsToInt(long pbrbllflismThrfshold,
                                 ToIntFundtion<? supfr V> trbnsformfr,
                                 int bbsis,
                                 IntBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfVblufsToIntTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh fntry.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm bdtion thf bdtion
     * @sindf 1.8
     */
    publid void forEbdhEntry(long pbrbllflismThrfshold,
                             Consumfr<? supfr Mbp.Entry<K,V>> bdtion) {
        if (bdtion == null) throw nfw NullPointfrExdfption();
        nfw ForEbdhEntryTbsk<K,V>(null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
                                  bdtion).invokf();
    }

    /**
     * Pfrforms thf givfn bdtion for fbdh non-null trbnsformbtion
     * of fbdh fntry.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf thf bdtion is not bpplifd)
     * @pbrbm bdtion thf bdtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @sindf 1.8
     */
    publid <U> void forEbdhEntry(long pbrbllflismThrfshold,
                                 Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr,
                                 Consumfr<? supfr U> bdtion) {
        if (trbnsformfr == null || bdtion == null)
            throw nfw NullPointfrExdfption();
        nfw ForEbdhTrbnsformfdEntryTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             trbnsformfr, bdtion).invokf();
    }

    /**
     * Rfturns b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh fntry, or null if nonf.  Upon suddfss,
     * furthfr flfmfnt prodfssing is supprfssfd bnd thf rfsults of
     * bny othfr pbrbllfl invodbtions of thf sfbrdh fundtion brf
     * ignorfd.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm sfbrdhFundtion b fundtion rfturning b non-null
     * rfsult on suddfss, flsf null
     * @pbrbm <U> thf rfturn typf of thf sfbrdh fundtion
     * @rfturn b non-null rfsult from bpplying thf givfn sfbrdh
     * fundtion on fbdh fntry, or null if nonf
     * @sindf 1.8
     */
    publid <U> U sfbrdhEntrifs(long pbrbllflismThrfshold,
                               Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> sfbrdhFundtion) {
        if (sfbrdhFundtion == null) throw nfw NullPointfrExdfption();
        rfturn nfw SfbrdhEntrifsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             sfbrdhFundtion, nfw AtomidRfffrfndf<U>()).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting bll fntrifs using thf
     * givfn rfdudfr to dombinf vblufs, or null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting bll fntrifs
     * @sindf 1.8
     */
    publid Mbp.Entry<K,V> rfdudfEntrifs(long pbrbllflismThrfshold,
                                        BiFundtion<Mbp.Entry<K,V>, Mbp.Entry<K,V>, ? fxtfnds Mbp.Entry<K,V>> rfdudfr) {
        if (rfdudfr == null) throw nfw NullPointfrExdfption();
        rfturn nfw RfdudfEntrifsTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs using thf givfn rfdudfr to dombinf vblufs,
     * or null if nonf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt, or null if thfrf is no trbnsformbtion (in
     * whidh dbsf it is not dombinfd)
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @pbrbm <U> thf rfturn typf of thf trbnsformfr
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs
     * @sindf 1.8
     */
    publid <U> U rfdudfEntrifs(long pbrbllflismThrfshold,
                               Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr,
                               BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfEntrifsTbsk<K,V,U>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs
     * @sindf 1.8
     */
    publid doublf rfdudfEntrifsToDoublf(long pbrbllflismThrfshold,
                                        ToDoublfFundtion<Mbp.Entry<K,V>> trbnsformfr,
                                        doublf bbsis,
                                        DoublfBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfEntrifsToDoublfTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs
     * @sindf 1.8
     */
    publid long rfdudfEntrifsToLong(long pbrbllflismThrfshold,
                                    ToLongFundtion<Mbp.Entry<K,V>> trbnsformfr,
                                    long bbsis,
                                    LongBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfEntrifsToLongTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }

    /**
     * Rfturns thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs using thf givfn rfdudfr to dombinf vblufs,
     * bnd thf givfn bbsis bs bn idfntity vbluf.
     *
     * @pbrbm pbrbllflismThrfshold thf (fstimbtfd) numbfr of flfmfnts
     * nffdfd for this opfrbtion to bf fxfdutfd in pbrbllfl
     * @pbrbm trbnsformfr b fundtion rfturning thf trbnsformbtion
     * for bn flfmfnt
     * @pbrbm bbsis thf idfntity (initibl dffbult vbluf) for thf rfdudtion
     * @pbrbm rfdudfr b dommutbtivf bssodibtivf dombining fundtion
     * @rfturn thf rfsult of bddumulbting thf givfn trbnsformbtion
     * of bll fntrifs
     * @sindf 1.8
     */
    publid int rfdudfEntrifsToInt(long pbrbllflismThrfshold,
                                  ToIntFundtion<Mbp.Entry<K,V>> trbnsformfr,
                                  int bbsis,
                                  IntBinbryOpfrbtor rfdudfr) {
        if (trbnsformfr == null || rfdudfr == null)
            throw nfw NullPointfrExdfption();
        rfturn nfw MbpRfdudfEntrifsToIntTbsk<K,V>
            (null, bbtdhFor(pbrbllflismThrfshold), 0, 0, tbblf,
             null, trbnsformfr, bbsis, rfdudfr).invokf();
    }


    /* ----------------Vifws -------------- */

    /**
     * Bbsf dlbss for vifws.
     */
    bbstrbdt stbtid dlbss CollfdtionVifw<K,V,E>
        implfmfnts Collfdtion<E>, jbvb.io.Sfriblizbblf {
        privbtf stbtid finbl long sfriblVfrsionUID = 7249069246763182397L;
        finbl CondurrfntHbshMbp<K,V> mbp;
        CollfdtionVifw(CondurrfntHbshMbp<K,V> mbp)  { this.mbp = mbp; }

        /**
         * Rfturns thf mbp bbdking this vifw.
         *
         * @rfturn thf mbp bbdking this vifw
         */
        publid CondurrfntHbshMbp<K,V> gftMbp() { rfturn mbp; }

        /**
         * Rfmovfs bll of thf flfmfnts from this vifw, by rfmoving bll
         * thf mbppings from thf mbp bbdking this vifw.
         */
        publid finbl void dlfbr()      { mbp.dlfbr(); }
        publid finbl int sizf()        { rfturn mbp.sizf(); }
        publid finbl boolfbn isEmpty() { rfturn mbp.isEmpty(); }

        // implfmfntbtions bflow rfly on dondrftf dlbssfs supplying thfsf
        // bbstrbdt mfthods
        /**
         * Rfturns bn itfrbtor ovfr thf flfmfnts in this dollfdtion.
         *
         * <p>Thf rfturnfd itfrbtor is
         * <b hrff="pbdkbgf-summbry.html#Wfbkly"><i>wfbkly donsistfnt</i></b>.
         *
         * @rfturn bn itfrbtor ovfr thf flfmfnts in this dollfdtion
         */
        publid bbstrbdt Itfrbtor<E> itfrbtor();
        publid bbstrbdt boolfbn dontbins(Objfdt o);
        publid bbstrbdt boolfbn rfmovf(Objfdt o);

        privbtf stbtid finbl String oomfMsg = "Rfquirfd brrby sizf too lbrgf";

        publid finbl Objfdt[] toArrby() {
            long sz = mbp.mbppingCount();
            if (sz > MAX_ARRAY_SIZE)
                throw nfw OutOfMfmoryError(oomfMsg);
            int n = (int)sz;
            Objfdt[] r = nfw Objfdt[n];
            int i = 0;
            for (E f : this) {
                if (i == n) {
                    if (n >= MAX_ARRAY_SIZE)
                        throw nfw OutOfMfmoryError(oomfMsg);
                    if (n >= MAX_ARRAY_SIZE - (MAX_ARRAY_SIZE >>> 1) - 1)
                        n = MAX_ARRAY_SIZE;
                    flsf
                        n += (n >>> 1) + 1;
                    r = Arrbys.dopyOf(r, n);
                }
                r[i++] = f;
            }
            rfturn (i == n) ? r : Arrbys.dopyOf(r, i);
        }

        @SupprfssWbrnings("undhfdkfd")
        publid finbl <T> T[] toArrby(T[] b) {
            long sz = mbp.mbppingCount();
            if (sz > MAX_ARRAY_SIZE)
                throw nfw OutOfMfmoryError(oomfMsg);
            int m = (int)sz;
            T[] r = (b.lfngth >= m) ? b :
                (T[])jbvb.lbng.rfflfdt.Arrby
                .nfwInstbndf(b.gftClbss().gftComponfntTypf(), m);
            int n = r.lfngth;
            int i = 0;
            for (E f : this) {
                if (i == n) {
                    if (n >= MAX_ARRAY_SIZE)
                        throw nfw OutOfMfmoryError(oomfMsg);
                    if (n >= MAX_ARRAY_SIZE - (MAX_ARRAY_SIZE >>> 1) - 1)
                        n = MAX_ARRAY_SIZE;
                    flsf
                        n += (n >>> 1) + 1;
                    r = Arrbys.dopyOf(r, n);
                }
                r[i++] = (T)f;
            }
            if (b == r && i < n) {
                r[i] = null; // null-tfrminbtf
                rfturn r;
            }
            rfturn (i == n) ? r : Arrbys.dopyOf(r, i);
        }

        /**
         * Rfturns b string rfprfsfntbtion of this dollfdtion.
         * Thf string rfprfsfntbtion donsists of thf string rfprfsfntbtions
         * of thf dollfdtion's flfmfnts in thf ordfr thfy brf rfturnfd by
         * its itfrbtor, fndlosfd in squbrf brbdkfts ({@dodf "[]"}).
         * Adjbdfnt flfmfnts brf sfpbrbtfd by thf dhbrbdtfrs {@dodf ", "}
         * (dommb bnd spbdf).  Elfmfnts brf donvfrtfd to strings bs by
         * {@link String#vblufOf(Objfdt)}.
         *
         * @rfturn b string rfprfsfntbtion of this dollfdtion
         */
        publid finbl String toString() {
            StringBuildfr sb = nfw StringBuildfr();
            sb.bppfnd('[');
            Itfrbtor<E> it = itfrbtor();
            if (it.hbsNfxt()) {
                for (;;) {
                    Objfdt f = it.nfxt();
                    sb.bppfnd(f == this ? "(this Collfdtion)" : f);
                    if (!it.hbsNfxt())
                        brfbk;
                    sb.bppfnd(',').bppfnd(' ');
                }
            }
            rfturn sb.bppfnd(']').toString();
        }

        publid finbl boolfbn dontbinsAll(Collfdtion<?> d) {
            if (d != this) {
                for (Objfdt f : d) {
                    if (f == null || !dontbins(f))
                        rfturn fblsf;
                }
            }
            rfturn truf;
        }

        publid finbl boolfbn rfmovfAll(Collfdtion<?> d) {
            if (d == null) throw nfw NullPointfrExdfption();
            boolfbn modififd = fblsf;
            for (Itfrbtor<E> it = itfrbtor(); it.hbsNfxt();) {
                if (d.dontbins(it.nfxt())) {
                    it.rfmovf();
                    modififd = truf;
                }
            }
            rfturn modififd;
        }

        publid finbl boolfbn rftbinAll(Collfdtion<?> d) {
            if (d == null) throw nfw NullPointfrExdfption();
            boolfbn modififd = fblsf;
            for (Itfrbtor<E> it = itfrbtor(); it.hbsNfxt();) {
                if (!d.dontbins(it.nfxt())) {
                    it.rfmovf();
                    modififd = truf;
                }
            }
            rfturn modififd;
        }

    }

    /**
     * A vifw of b CondurrfntHbshMbp bs b {@link Sft} of kfys, in
     * whidh bdditions mby optionblly bf fnbblfd by mbpping to b
     * dommon vbluf.  This dlbss dbnnot bf dirfdtly instbntibtfd.
     * Sff {@link #kfySft() kfySft()},
     * {@link #kfySft(Objfdt) kfySft(V)},
     * {@link #nfwKfySft() nfwKfySft()},
     * {@link #nfwKfySft(int) nfwKfySft(int)}.
     *
     * @sindf 1.8
     */
    publid stbtid dlbss KfySftVifw<K,V> fxtfnds CollfdtionVifw<K,V,K>
        implfmfnts Sft<K>, jbvb.io.Sfriblizbblf {
        privbtf stbtid finbl long sfriblVfrsionUID = 7249069246763182397L;
        privbtf finbl V vbluf;
        KfySftVifw(CondurrfntHbshMbp<K,V> mbp, V vbluf) {  // non-publid
            supfr(mbp);
            this.vbluf = vbluf;
        }

        /**
         * Rfturns thf dffbult mbppfd vbluf for bdditions,
         * or {@dodf null} if bdditions brf not supportfd.
         *
         * @rfturn thf dffbult mbppfd vbluf for bdditions, or {@dodf null}
         * if not supportfd
         */
        publid V gftMbppfdVbluf() { rfturn vbluf; }

        /**
         * {@inhfritDod}
         * @throws NullPointfrExdfption if thf spfdififd kfy is null
         */
        publid boolfbn dontbins(Objfdt o) { rfturn mbp.dontbinsKfy(o); }

        /**
         * Rfmovfs thf kfy from this mbp vifw, by rfmoving thf kfy (bnd its
         * dorrfsponding vbluf) from thf bbdking mbp.  This mfthod dofs
         * nothing if thf kfy is not in thf mbp.
         *
         * @pbrbm  o thf kfy to bf rfmovfd from thf bbdking mbp
         * @rfturn {@dodf truf} if thf bbdking mbp dontbinfd thf spfdififd kfy
         * @throws NullPointfrExdfption if thf spfdififd kfy is null
         */
        publid boolfbn rfmovf(Objfdt o) { rfturn mbp.rfmovf(o) != null; }

        /**
         * @rfturn bn itfrbtor ovfr thf kfys of thf bbdking mbp
         */
        publid Itfrbtor<K> itfrbtor() {
            Nodf<K,V>[] t;
            CondurrfntHbshMbp<K,V> m = mbp;
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw KfyItfrbtor<K,V>(t, f, 0, f, m);
        }

        /**
         * Adds thf spfdififd kfy to this sft vifw by mbpping thf kfy to
         * thf dffbult mbppfd vbluf in thf bbdking mbp, if dffinfd.
         *
         * @pbrbm f kfy to bf bddfd
         * @rfturn {@dodf truf} if this sft dhbngfd bs b rfsult of thf dbll
         * @throws NullPointfrExdfption if thf spfdififd kfy is null
         * @throws UnsupportfdOpfrbtionExdfption if no dffbult mbppfd vbluf
         * for bdditions wbs providfd
         */
        publid boolfbn bdd(K f) {
            V v;
            if ((v = vbluf) == null)
                throw nfw UnsupportfdOpfrbtionExdfption();
            rfturn mbp.putVbl(f, v, truf) == null;
        }

        /**
         * Adds bll of thf flfmfnts in thf spfdififd dollfdtion to this sft,
         * bs if by dblling {@link #bdd} on fbdh onf.
         *
         * @pbrbm d thf flfmfnts to bf insfrtfd into this sft
         * @rfturn {@dodf truf} if this sft dhbngfd bs b rfsult of thf dbll
         * @throws NullPointfrExdfption if thf dollfdtion or bny of its
         * flfmfnts brf {@dodf null}
         * @throws UnsupportfdOpfrbtionExdfption if no dffbult mbppfd vbluf
         * for bdditions wbs providfd
         */
        publid boolfbn bddAll(Collfdtion<? fxtfnds K> d) {
            boolfbn bddfd = fblsf;
            V v;
            if ((v = vbluf) == null)
                throw nfw UnsupportfdOpfrbtionExdfption();
            for (K f : d) {
                if (mbp.putVbl(f, v, truf) == null)
                    bddfd = truf;
            }
            rfturn bddfd;
        }

        publid int hbshCodf() {
            int h = 0;
            for (K f : this)
                h += f.hbshCodf();
            rfturn h;
        }

        publid boolfbn fqubls(Objfdt o) {
            Sft<?> d;
            rfturn ((o instbndfof Sft) &&
                    ((d = (Sft<?>)o) == this ||
                     (dontbinsAll(d) && d.dontbinsAll(this))));
        }

        publid Splitfrbtor<K> splitfrbtor() {
            Nodf<K,V>[] t;
            CondurrfntHbshMbp<K,V> m = mbp;
            long n = m.sumCount();
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw KfySplitfrbtor<K,V>(t, f, 0, f, n < 0L ? 0L : n);
        }

        publid void forEbdh(Consumfr<? supfr K> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V>[] t;
            if ((t = mbp.tbblf) != null) {
                Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
                for (Nodf<K,V> p; (p = it.bdvbndf()) != null; )
                    bdtion.bddfpt(p.kfy);
            }
        }
    }

    /**
     * A vifw of b CondurrfntHbshMbp bs b {@link Collfdtion} of
     * vblufs, in whidh bdditions brf disbblfd. This dlbss dbnnot bf
     * dirfdtly instbntibtfd. Sff {@link #vblufs()}.
     */
    stbtid finbl dlbss VblufsVifw<K,V> fxtfnds CollfdtionVifw<K,V,V>
        implfmfnts Collfdtion<V>, jbvb.io.Sfriblizbblf {
        privbtf stbtid finbl long sfriblVfrsionUID = 2249069246763182397L;
        VblufsVifw(CondurrfntHbshMbp<K,V> mbp) { supfr(mbp); }
        publid finbl boolfbn dontbins(Objfdt o) {
            rfturn mbp.dontbinsVbluf(o);
        }

        publid finbl boolfbn rfmovf(Objfdt o) {
            if (o != null) {
                for (Itfrbtor<V> it = itfrbtor(); it.hbsNfxt();) {
                    if (o.fqubls(it.nfxt())) {
                        it.rfmovf();
                        rfturn truf;
                    }
                }
            }
            rfturn fblsf;
        }

        publid finbl Itfrbtor<V> itfrbtor() {
            CondurrfntHbshMbp<K,V> m = mbp;
            Nodf<K,V>[] t;
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw VblufItfrbtor<K,V>(t, f, 0, f, m);
        }

        publid finbl boolfbn bdd(V f) {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }
        publid finbl boolfbn bddAll(Collfdtion<? fxtfnds V> d) {
            throw nfw UnsupportfdOpfrbtionExdfption();
        }

        publid Splitfrbtor<V> splitfrbtor() {
            Nodf<K,V>[] t;
            CondurrfntHbshMbp<K,V> m = mbp;
            long n = m.sumCount();
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw VblufSplitfrbtor<K,V>(t, f, 0, f, n < 0L ? 0L : n);
        }

        publid void forEbdh(Consumfr<? supfr V> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V>[] t;
            if ((t = mbp.tbblf) != null) {
                Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
                for (Nodf<K,V> p; (p = it.bdvbndf()) != null; )
                    bdtion.bddfpt(p.vbl);
            }
        }
    }

    /**
     * A vifw of b CondurrfntHbshMbp bs b {@link Sft} of (kfy, vbluf)
     * fntrifs.  This dlbss dbnnot bf dirfdtly instbntibtfd. Sff
     * {@link #fntrySft()}.
     */
    stbtid finbl dlbss EntrySftVifw<K,V> fxtfnds CollfdtionVifw<K,V,Mbp.Entry<K,V>>
        implfmfnts Sft<Mbp.Entry<K,V>>, jbvb.io.Sfriblizbblf {
        privbtf stbtid finbl long sfriblVfrsionUID = 2249069246763182397L;
        EntrySftVifw(CondurrfntHbshMbp<K,V> mbp) { supfr(mbp); }

        publid boolfbn dontbins(Objfdt o) {
            Objfdt k, v, r; Mbp.Entry<?,?> f;
            rfturn ((o instbndfof Mbp.Entry) &&
                    (k = (f = (Mbp.Entry<?,?>)o).gftKfy()) != null &&
                    (r = mbp.gft(k)) != null &&
                    (v = f.gftVbluf()) != null &&
                    (v == r || v.fqubls(r)));
        }

        publid boolfbn rfmovf(Objfdt o) {
            Objfdt k, v; Mbp.Entry<?,?> f;
            rfturn ((o instbndfof Mbp.Entry) &&
                    (k = (f = (Mbp.Entry<?,?>)o).gftKfy()) != null &&
                    (v = f.gftVbluf()) != null &&
                    mbp.rfmovf(k, v));
        }

        /**
         * @rfturn bn itfrbtor ovfr thf fntrifs of thf bbdking mbp
         */
        publid Itfrbtor<Mbp.Entry<K,V>> itfrbtor() {
            CondurrfntHbshMbp<K,V> m = mbp;
            Nodf<K,V>[] t;
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw EntryItfrbtor<K,V>(t, f, 0, f, m);
        }

        publid boolfbn bdd(Entry<K,V> f) {
            rfturn mbp.putVbl(f.gftKfy(), f.gftVbluf(), fblsf) == null;
        }

        publid boolfbn bddAll(Collfdtion<? fxtfnds Entry<K,V>> d) {
            boolfbn bddfd = fblsf;
            for (Entry<K,V> f : d) {
                if (bdd(f))
                    bddfd = truf;
            }
            rfturn bddfd;
        }

        publid finbl int hbshCodf() {
            int h = 0;
            Nodf<K,V>[] t;
            if ((t = mbp.tbblf) != null) {
                Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
                for (Nodf<K,V> p; (p = it.bdvbndf()) != null; ) {
                    h += p.hbshCodf();
                }
            }
            rfturn h;
        }

        publid finbl boolfbn fqubls(Objfdt o) {
            Sft<?> d;
            rfturn ((o instbndfof Sft) &&
                    ((d = (Sft<?>)o) == this ||
                     (dontbinsAll(d) && d.dontbinsAll(this))));
        }

        publid Splitfrbtor<Mbp.Entry<K,V>> splitfrbtor() {
            Nodf<K,V>[] t;
            CondurrfntHbshMbp<K,V> m = mbp;
            long n = m.sumCount();
            int f = (t = m.tbblf) == null ? 0 : t.lfngth;
            rfturn nfw EntrySplitfrbtor<K,V>(t, f, 0, f, n < 0L ? 0L : n, m);
        }

        publid void forEbdh(Consumfr<? supfr Mbp.Entry<K,V>> bdtion) {
            if (bdtion == null) throw nfw NullPointfrExdfption();
            Nodf<K,V>[] t;
            if ((t = mbp.tbblf) != null) {
                Trbvfrsfr<K,V> it = nfw Trbvfrsfr<K,V>(t, t.lfngth, 0, t.lfngth);
                for (Nodf<K,V> p; (p = it.bdvbndf()) != null; )
                    bdtion.bddfpt(nfw MbpEntry<K,V>(p.kfy, p.vbl, mbp));
            }
        }

    }

    // -------------------------------------------------------

    /**
     * Bbsf dlbss for bulk tbsks. Rfpfbts somf fiflds bnd dodf from
     * dlbss Trbvfrsfr, bfdbusf wf nffd to subdlbss CountfdComplftfr.
     */
    @SupprfssWbrnings("sfribl")
    bbstrbdt stbtid dlbss BulkTbsk<K,V,R> fxtfnds CountfdComplftfr<R> {
        Nodf<K,V>[] tbb;        // sbmf bs Trbvfrsfr
        Nodf<K,V> nfxt;
        TbblfStbdk<K,V> stbdk, spbrf;
        int indfx;
        int bbsfIndfx;
        int bbsfLimit;
        finbl int bbsfSizf;
        int bbtdh;              // split dontrol

        BulkTbsk(BulkTbsk<K,V,?> pbr, int b, int i, int f, Nodf<K,V>[] t) {
            supfr(pbr);
            this.bbtdh = b;
            this.indfx = this.bbsfIndfx = i;
            if ((this.tbb = t) == null)
                this.bbsfSizf = this.bbsfLimit = 0;
            flsf if (pbr == null)
                this.bbsfSizf = this.bbsfLimit = t.lfngth;
            flsf {
                this.bbsfLimit = f;
                this.bbsfSizf = pbr.bbsfSizf;
            }
        }

        /**
         * Sbmf bs Trbvfrsfr vfrsion
         */
        finbl Nodf<K,V> bdvbndf() {
            Nodf<K,V> f;
            if ((f = nfxt) != null)
                f = f.nfxt;
            for (;;) {
                Nodf<K,V>[] t; int i, n;
                if (f != null)
                    rfturn nfxt = f;
                if (bbsfIndfx >= bbsfLimit || (t = tbb) == null ||
                    (n = t.lfngth) <= (i = indfx) || i < 0)
                    rfturn nfxt = null;
                if ((f = tbbAt(t, i)) != null && f.hbsh < 0) {
                    if (f instbndfof ForwbrdingNodf) {
                        tbb = ((ForwbrdingNodf<K,V>)f).nfxtTbblf;
                        f = null;
                        pushStbtf(t, i, n);
                        dontinuf;
                    }
                    flsf if (f instbndfof TrffBin)
                        f = ((TrffBin<K,V>)f).first;
                    flsf
                        f = null;
                }
                if (stbdk != null)
                    rfdovfrStbtf(n);
                flsf if ((indfx = i + bbsfSizf) >= n)
                    indfx = ++bbsfIndfx;
            }
        }

        privbtf void pushStbtf(Nodf<K,V>[] t, int i, int n) {
            TbblfStbdk<K,V> s = spbrf;
            if (s != null)
                spbrf = s.nfxt;
            flsf
                s = nfw TbblfStbdk<K,V>();
            s.tbb = t;
            s.lfngth = n;
            s.indfx = i;
            s.nfxt = stbdk;
            stbdk = s;
        }

        privbtf void rfdovfrStbtf(int n) {
            TbblfStbdk<K,V> s; int lfn;
            whilf ((s = stbdk) != null && (indfx += (lfn = s.lfngth)) >= n) {
                n = lfn;
                indfx = s.indfx;
                tbb = s.tbb;
                s.tbb = null;
                TbblfStbdk<K,V> nfxt = s.nfxt;
                s.nfxt = spbrf; // sbvf for rfusf
                stbdk = nfxt;
                spbrf = s;
            }
            if (s == null && (indfx += bbsfSizf) >= n)
                indfx = ++bbsfIndfx;
        }
    }

    /*
     * Tbsk dlbssfs. Codfd in b rfgulbr but ugly formbt/stylf to
     * simplify dhfdks thbt fbdh vbribnt difffrs in thf right wby from
     * othfrs. Thf null sdrffnings fxist bfdbusf dompilfrs dbnnot tfll
     * thbt wf'vf blrfbdy null-dhfdkfd tbsk brgumfnts, so wf fordf
     * simplfst hoistfd bypbss to hflp bvoid donvolutfd trbps.
     */
    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhKfyTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Consumfr<? supfr K> bdtion;
        ForEbdhKfyTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Consumfr<? supfr K> bdtion) {
            supfr(p, b, i, f, t);
            this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Consumfr<? supfr K> bdtion;
            if ((bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhKfyTbsk<K,V>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null;)
                    bdtion.bddfpt(p.kfy);
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhVblufTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Consumfr<? supfr V> bdtion;
        ForEbdhVblufTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Consumfr<? supfr V> bdtion) {
            supfr(p, b, i, f, t);
            this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Consumfr<? supfr V> bdtion;
            if ((bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhVblufTbsk<K,V>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null;)
                    bdtion.bddfpt(p.vbl);
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhEntryTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Consumfr<? supfr Entry<K,V>> bdtion;
        ForEbdhEntryTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Consumfr<? supfr Entry<K,V>> bdtion) {
            supfr(p, b, i, f, t);
            this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Consumfr<? supfr Entry<K,V>> bdtion;
            if ((bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhEntryTbsk<K,V>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    bdtion.bddfpt(p);
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhMbppingTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl BiConsumfr<? supfr K, ? supfr V> bdtion;
        ForEbdhMbppingTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             BiConsumfr<? supfr K,? supfr V> bdtion) {
            supfr(p, b, i, f, t);
            this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl BiConsumfr<? supfr K, ? supfr V> bdtion;
            if ((bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhMbppingTbsk<K,V>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    bdtion.bddfpt(p.kfy, p.vbl);
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhTrbnsformfdKfyTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Fundtion<? supfr K, ? fxtfnds U> trbnsformfr;
        finbl Consumfr<? supfr U> bdtion;
        ForEbdhTrbnsformfdKfyTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<? supfr K, ? fxtfnds U> trbnsformfr, Consumfr<? supfr U> bdtion) {
            supfr(p, b, i, f, t);
            this.trbnsformfr = trbnsformfr; this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Fundtion<? supfr K, ? fxtfnds U> trbnsformfr;
            finbl Consumfr<? supfr U> bdtion;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhTrbnsformfdKfyTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         trbnsformfr, bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.kfy)) != null)
                        bdtion.bddfpt(u);
                }
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhTrbnsformfdVblufTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Fundtion<? supfr V, ? fxtfnds U> trbnsformfr;
        finbl Consumfr<? supfr U> bdtion;
        ForEbdhTrbnsformfdVblufTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<? supfr V, ? fxtfnds U> trbnsformfr, Consumfr<? supfr U> bdtion) {
            supfr(p, b, i, f, t);
            this.trbnsformfr = trbnsformfr; this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Fundtion<? supfr V, ? fxtfnds U> trbnsformfr;
            finbl Consumfr<? supfr U> bdtion;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhTrbnsformfdVblufTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         trbnsformfr, bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.vbl)) != null)
                        bdtion.bddfpt(u);
                }
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhTrbnsformfdEntryTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr;
        finbl Consumfr<? supfr U> bdtion;
        ForEbdhTrbnsformfdEntryTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr, Consumfr<? supfr U> bdtion) {
            supfr(p, b, i, f, t);
            this.trbnsformfr = trbnsformfr; this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr;
            finbl Consumfr<? supfr U> bdtion;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhTrbnsformfdEntryTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         trbnsformfr, bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p)) != null)
                        bdtion.bddfpt(u);
                }
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss ForEbdhTrbnsformfdMbppingTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,Void> {
        finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr;
        finbl Consumfr<? supfr U> bdtion;
        ForEbdhTrbnsformfdMbppingTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr,
             Consumfr<? supfr U> bdtion) {
            supfr(p, b, i, f, t);
            this.trbnsformfr = trbnsformfr; this.bdtion = bdtion;
        }
        publid finbl void domputf() {
            finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr;
            finbl Consumfr<? supfr U> bdtion;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (bdtion = this.bdtion) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    nfw ForEbdhTrbnsformfdMbppingTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         trbnsformfr, bdtion).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.kfy, p.vbl)) != null)
                        bdtion.bddfpt(u);
                }
                propbgbtfComplftion();
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss SfbrdhKfysTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<? supfr K, ? fxtfnds U> sfbrdhFundtion;
        finbl AtomidRfffrfndf<U> rfsult;
        SfbrdhKfysTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<? supfr K, ? fxtfnds U> sfbrdhFundtion,
             AtomidRfffrfndf<U> rfsult) {
            supfr(p, b, i, f, t);
            this.sfbrdhFundtion = sfbrdhFundtion; this.rfsult = rfsult;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult.gft(); }
        publid finbl void domputf() {
            finbl Fundtion<? supfr K, ? fxtfnds U> sfbrdhFundtion;
            finbl AtomidRfffrfndf<U> rfsult;
            if ((sfbrdhFundtion = this.sfbrdhFundtion) != null &&
                (rfsult = this.rfsult) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    if (rfsult.gft() != null)
                        rfturn;
                    bddToPfndingCount(1);
                    nfw SfbrdhKfysTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         sfbrdhFundtion, rfsult).fork();
                }
                whilf (rfsult.gft() == null) {
                    U u;
                    Nodf<K,V> p;
                    if ((p = bdvbndf()) == null) {
                        propbgbtfComplftion();
                        brfbk;
                    }
                    if ((u = sfbrdhFundtion.bpply(p.kfy)) != null) {
                        if (rfsult.dompbrfAndSft(null, u))
                            quiftlyComplftfRoot();
                        brfbk;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss SfbrdhVblufsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<? supfr V, ? fxtfnds U> sfbrdhFundtion;
        finbl AtomidRfffrfndf<U> rfsult;
        SfbrdhVblufsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<? supfr V, ? fxtfnds U> sfbrdhFundtion,
             AtomidRfffrfndf<U> rfsult) {
            supfr(p, b, i, f, t);
            this.sfbrdhFundtion = sfbrdhFundtion; this.rfsult = rfsult;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult.gft(); }
        publid finbl void domputf() {
            finbl Fundtion<? supfr V, ? fxtfnds U> sfbrdhFundtion;
            finbl AtomidRfffrfndf<U> rfsult;
            if ((sfbrdhFundtion = this.sfbrdhFundtion) != null &&
                (rfsult = this.rfsult) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    if (rfsult.gft() != null)
                        rfturn;
                    bddToPfndingCount(1);
                    nfw SfbrdhVblufsTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         sfbrdhFundtion, rfsult).fork();
                }
                whilf (rfsult.gft() == null) {
                    U u;
                    Nodf<K,V> p;
                    if ((p = bdvbndf()) == null) {
                        propbgbtfComplftion();
                        brfbk;
                    }
                    if ((u = sfbrdhFundtion.bpply(p.vbl)) != null) {
                        if (rfsult.dompbrfAndSft(null, u))
                            quiftlyComplftfRoot();
                        brfbk;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss SfbrdhEntrifsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<Entry<K,V>, ? fxtfnds U> sfbrdhFundtion;
        finbl AtomidRfffrfndf<U> rfsult;
        SfbrdhEntrifsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             Fundtion<Entry<K,V>, ? fxtfnds U> sfbrdhFundtion,
             AtomidRfffrfndf<U> rfsult) {
            supfr(p, b, i, f, t);
            this.sfbrdhFundtion = sfbrdhFundtion; this.rfsult = rfsult;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult.gft(); }
        publid finbl void domputf() {
            finbl Fundtion<Entry<K,V>, ? fxtfnds U> sfbrdhFundtion;
            finbl AtomidRfffrfndf<U> rfsult;
            if ((sfbrdhFundtion = this.sfbrdhFundtion) != null &&
                (rfsult = this.rfsult) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    if (rfsult.gft() != null)
                        rfturn;
                    bddToPfndingCount(1);
                    nfw SfbrdhEntrifsTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         sfbrdhFundtion, rfsult).fork();
                }
                whilf (rfsult.gft() == null) {
                    U u;
                    Nodf<K,V> p;
                    if ((p = bdvbndf()) == null) {
                        propbgbtfComplftion();
                        brfbk;
                    }
                    if ((u = sfbrdhFundtion.bpply(p)) != null) {
                        if (rfsult.dompbrfAndSft(null, u))
                            quiftlyComplftfRoot();
                        rfturn;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss SfbrdhMbppingsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> sfbrdhFundtion;
        finbl AtomidRfffrfndf<U> rfsult;
        SfbrdhMbppingsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> sfbrdhFundtion,
             AtomidRfffrfndf<U> rfsult) {
            supfr(p, b, i, f, t);
            this.sfbrdhFundtion = sfbrdhFundtion; this.rfsult = rfsult;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult.gft(); }
        publid finbl void domputf() {
            finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> sfbrdhFundtion;
            finbl AtomidRfffrfndf<U> rfsult;
            if ((sfbrdhFundtion = this.sfbrdhFundtion) != null &&
                (rfsult = this.rfsult) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    if (rfsult.gft() != null)
                        rfturn;
                    bddToPfndingCount(1);
                    nfw SfbrdhMbppingsTbsk<K,V,U>
                        (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                         sfbrdhFundtion, rfsult).fork();
                }
                whilf (rfsult.gft() == null) {
                    U u;
                    Nodf<K,V> p;
                    if ((p = bdvbndf()) == null) {
                        propbgbtfComplftion();
                        brfbk;
                    }
                    if ((u = sfbrdhFundtion.bpply(p.kfy, p.vbl)) != null) {
                        if (rfsult.dompbrfAndSft(null, u))
                            quiftlyComplftfRoot();
                        brfbk;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss RfdudfKfysTbsk<K,V>
        fxtfnds BulkTbsk<K,V,K> {
        finbl BiFundtion<? supfr K, ? supfr K, ? fxtfnds K> rfdudfr;
        K rfsult;
        RfdudfKfysTbsk<K,V> rights, nfxtRight;
        RfdudfKfysTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             RfdudfKfysTbsk<K,V> nfxtRight,
             BiFundtion<? supfr K, ? supfr K, ? fxtfnds K> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.rfdudfr = rfdudfr;
        }
        publid finbl K gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl BiFundtion<? supfr K, ? supfr K, ? fxtfnds K> rfdudfr;
            if ((rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw RfdudfKfysTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, rfdudfr)).fork();
                }
                K r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    K u = p.kfy;
                    r = (r == null) ? u : u == null ? r : rfdudfr.bpply(r, u);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    RfdudfKfysTbsk<K,V>
                        t = (RfdudfKfysTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        K tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss RfdudfVblufsTbsk<K,V>
        fxtfnds BulkTbsk<K,V,V> {
        finbl BiFundtion<? supfr V, ? supfr V, ? fxtfnds V> rfdudfr;
        V rfsult;
        RfdudfVblufsTbsk<K,V> rights, nfxtRight;
        RfdudfVblufsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             RfdudfVblufsTbsk<K,V> nfxtRight,
             BiFundtion<? supfr V, ? supfr V, ? fxtfnds V> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.rfdudfr = rfdudfr;
        }
        publid finbl V gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl BiFundtion<? supfr V, ? supfr V, ? fxtfnds V> rfdudfr;
            if ((rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw RfdudfVblufsTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, rfdudfr)).fork();
                }
                V r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    V v = p.vbl;
                    r = (r == null) ? v : rfdudfr.bpply(r, v);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    RfdudfVblufsTbsk<K,V>
                        t = (RfdudfVblufsTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        V tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss RfdudfEntrifsTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Mbp.Entry<K,V>> {
        finbl BiFundtion<Mbp.Entry<K,V>, Mbp.Entry<K,V>, ? fxtfnds Mbp.Entry<K,V>> rfdudfr;
        Mbp.Entry<K,V> rfsult;
        RfdudfEntrifsTbsk<K,V> rights, nfxtRight;
        RfdudfEntrifsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             RfdudfEntrifsTbsk<K,V> nfxtRight,
             BiFundtion<Entry<K,V>, Mbp.Entry<K,V>, ? fxtfnds Mbp.Entry<K,V>> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.rfdudfr = rfdudfr;
        }
        publid finbl Mbp.Entry<K,V> gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl BiFundtion<Mbp.Entry<K,V>, Mbp.Entry<K,V>, ? fxtfnds Mbp.Entry<K,V>> rfdudfr;
            if ((rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw RfdudfEntrifsTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, rfdudfr)).fork();
                }
                Mbp.Entry<K,V> r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = (r == null) ? p : rfdudfr.bpply(r, p);
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    RfdudfEntrifsTbsk<K,V>
                        t = (RfdudfEntrifsTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        Mbp.Entry<K,V> tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfKfysTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<? supfr K, ? fxtfnds U> trbnsformfr;
        finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
        U rfsult;
        MbpRfdudfKfysTbsk<K,V,U> rights, nfxtRight;
        MbpRfdudfKfysTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfKfysTbsk<K,V,U> nfxtRight,
             Fundtion<? supfr K, ? fxtfnds U> trbnsformfr,
             BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.rfdudfr = rfdudfr;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl Fundtion<? supfr K, ? fxtfnds U> trbnsformfr;
            finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfKfysTbsk<K,V,U>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, rfdudfr)).fork();
                }
                U r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.kfy)) != null)
                        r = (r == null) ? u : rfdudfr.bpply(r, u);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfKfysTbsk<K,V,U>
                        t = (MbpRfdudfKfysTbsk<K,V,U>)d,
                        s = t.rights;
                    whilf (s != null) {
                        U tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfVblufsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<? supfr V, ? fxtfnds U> trbnsformfr;
        finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
        U rfsult;
        MbpRfdudfVblufsTbsk<K,V,U> rights, nfxtRight;
        MbpRfdudfVblufsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfVblufsTbsk<K,V,U> nfxtRight,
             Fundtion<? supfr V, ? fxtfnds U> trbnsformfr,
             BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.rfdudfr = rfdudfr;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl Fundtion<? supfr V, ? fxtfnds U> trbnsformfr;
            finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfVblufsTbsk<K,V,U>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, rfdudfr)).fork();
                }
                U r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.vbl)) != null)
                        r = (r == null) ? u : rfdudfr.bpply(r, u);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfVblufsTbsk<K,V,U>
                        t = (MbpRfdudfVblufsTbsk<K,V,U>)d,
                        s = t.rights;
                    whilf (s != null) {
                        U tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfEntrifsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr;
        finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
        U rfsult;
        MbpRfdudfEntrifsTbsk<K,V,U> rights, nfxtRight;
        MbpRfdudfEntrifsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfEntrifsTbsk<K,V,U> nfxtRight,
             Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr,
             BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.rfdudfr = rfdudfr;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl Fundtion<Mbp.Entry<K,V>, ? fxtfnds U> trbnsformfr;
            finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfEntrifsTbsk<K,V,U>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, rfdudfr)).fork();
                }
                U r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p)) != null)
                        r = (r == null) ? u : rfdudfr.bpply(r, u);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfEntrifsTbsk<K,V,U>
                        t = (MbpRfdudfEntrifsTbsk<K,V,U>)d,
                        s = t.rights;
                    whilf (s != null) {
                        U tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfMbppingsTbsk<K,V,U>
        fxtfnds BulkTbsk<K,V,U> {
        finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr;
        finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
        U rfsult;
        MbpRfdudfMbppingsTbsk<K,V,U> rights, nfxtRight;
        MbpRfdudfMbppingsTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfMbppingsTbsk<K,V,U> nfxtRight,
             BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr,
             BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.rfdudfr = rfdudfr;
        }
        publid finbl U gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl BiFundtion<? supfr K, ? supfr V, ? fxtfnds U> trbnsformfr;
            finbl BiFundtion<? supfr U, ? supfr U, ? fxtfnds U> rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfMbppingsTbsk<K,V,U>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, rfdudfr)).fork();
                }
                U r = null;
                for (Nodf<K,V> p; (p = bdvbndf()) != null; ) {
                    U u;
                    if ((u = trbnsformfr.bpply(p.kfy, p.vbl)) != null)
                        r = (r == null) ? u : rfdudfr.bpply(r, u);
                }
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfMbppingsTbsk<K,V,U>
                        t = (MbpRfdudfMbppingsTbsk<K,V,U>)d,
                        s = t.rights;
                    whilf (s != null) {
                        U tr, sr;
                        if ((sr = s.rfsult) != null)
                            t.rfsult = (((tr = t.rfsult) == null) ? sr :
                                        rfdudfr.bpply(tr, sr));
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfKfysToDoublfTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Doublf> {
        finbl ToDoublfFundtion<? supfr K> trbnsformfr;
        finbl DoublfBinbryOpfrbtor rfdudfr;
        finbl doublf bbsis;
        doublf rfsult;
        MbpRfdudfKfysToDoublfTbsk<K,V> rights, nfxtRight;
        MbpRfdudfKfysToDoublfTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfKfysToDoublfTbsk<K,V> nfxtRight,
             ToDoublfFundtion<? supfr K> trbnsformfr,
             doublf bbsis,
             DoublfBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Doublf gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToDoublfFundtion<? supfr K> trbnsformfr;
            finbl DoublfBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                doublf r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfKfysToDoublfTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsDoublf(r, trbnsformfr.bpplyAsDoublf(p.kfy));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfKfysToDoublfTbsk<K,V>
                        t = (MbpRfdudfKfysToDoublfTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsDoublf(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfVblufsToDoublfTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Doublf> {
        finbl ToDoublfFundtion<? supfr V> trbnsformfr;
        finbl DoublfBinbryOpfrbtor rfdudfr;
        finbl doublf bbsis;
        doublf rfsult;
        MbpRfdudfVblufsToDoublfTbsk<K,V> rights, nfxtRight;
        MbpRfdudfVblufsToDoublfTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfVblufsToDoublfTbsk<K,V> nfxtRight,
             ToDoublfFundtion<? supfr V> trbnsformfr,
             doublf bbsis,
             DoublfBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Doublf gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToDoublfFundtion<? supfr V> trbnsformfr;
            finbl DoublfBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                doublf r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfVblufsToDoublfTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsDoublf(r, trbnsformfr.bpplyAsDoublf(p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfVblufsToDoublfTbsk<K,V>
                        t = (MbpRfdudfVblufsToDoublfTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsDoublf(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfEntrifsToDoublfTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Doublf> {
        finbl ToDoublfFundtion<Mbp.Entry<K,V>> trbnsformfr;
        finbl DoublfBinbryOpfrbtor rfdudfr;
        finbl doublf bbsis;
        doublf rfsult;
        MbpRfdudfEntrifsToDoublfTbsk<K,V> rights, nfxtRight;
        MbpRfdudfEntrifsToDoublfTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfEntrifsToDoublfTbsk<K,V> nfxtRight,
             ToDoublfFundtion<Mbp.Entry<K,V>> trbnsformfr,
             doublf bbsis,
             DoublfBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Doublf gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToDoublfFundtion<Mbp.Entry<K,V>> trbnsformfr;
            finbl DoublfBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                doublf r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfEntrifsToDoublfTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsDoublf(r, trbnsformfr.bpplyAsDoublf(p));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfEntrifsToDoublfTbsk<K,V>
                        t = (MbpRfdudfEntrifsToDoublfTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsDoublf(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfMbppingsToDoublfTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Doublf> {
        finbl ToDoublfBiFundtion<? supfr K, ? supfr V> trbnsformfr;
        finbl DoublfBinbryOpfrbtor rfdudfr;
        finbl doublf bbsis;
        doublf rfsult;
        MbpRfdudfMbppingsToDoublfTbsk<K,V> rights, nfxtRight;
        MbpRfdudfMbppingsToDoublfTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfMbppingsToDoublfTbsk<K,V> nfxtRight,
             ToDoublfBiFundtion<? supfr K, ? supfr V> trbnsformfr,
             doublf bbsis,
             DoublfBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Doublf gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToDoublfBiFundtion<? supfr K, ? supfr V> trbnsformfr;
            finbl DoublfBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                doublf r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfMbppingsToDoublfTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsDoublf(r, trbnsformfr.bpplyAsDoublf(p.kfy, p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfMbppingsToDoublfTbsk<K,V>
                        t = (MbpRfdudfMbppingsToDoublfTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsDoublf(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfKfysToLongTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Long> {
        finbl ToLongFundtion<? supfr K> trbnsformfr;
        finbl LongBinbryOpfrbtor rfdudfr;
        finbl long bbsis;
        long rfsult;
        MbpRfdudfKfysToLongTbsk<K,V> rights, nfxtRight;
        MbpRfdudfKfysToLongTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfKfysToLongTbsk<K,V> nfxtRight,
             ToLongFundtion<? supfr K> trbnsformfr,
             long bbsis,
             LongBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Long gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToLongFundtion<? supfr K> trbnsformfr;
            finbl LongBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                long r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfKfysToLongTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsLong(r, trbnsformfr.bpplyAsLong(p.kfy));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfKfysToLongTbsk<K,V>
                        t = (MbpRfdudfKfysToLongTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsLong(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfVblufsToLongTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Long> {
        finbl ToLongFundtion<? supfr V> trbnsformfr;
        finbl LongBinbryOpfrbtor rfdudfr;
        finbl long bbsis;
        long rfsult;
        MbpRfdudfVblufsToLongTbsk<K,V> rights, nfxtRight;
        MbpRfdudfVblufsToLongTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfVblufsToLongTbsk<K,V> nfxtRight,
             ToLongFundtion<? supfr V> trbnsformfr,
             long bbsis,
             LongBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Long gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToLongFundtion<? supfr V> trbnsformfr;
            finbl LongBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                long r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfVblufsToLongTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsLong(r, trbnsformfr.bpplyAsLong(p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfVblufsToLongTbsk<K,V>
                        t = (MbpRfdudfVblufsToLongTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsLong(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfEntrifsToLongTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Long> {
        finbl ToLongFundtion<Mbp.Entry<K,V>> trbnsformfr;
        finbl LongBinbryOpfrbtor rfdudfr;
        finbl long bbsis;
        long rfsult;
        MbpRfdudfEntrifsToLongTbsk<K,V> rights, nfxtRight;
        MbpRfdudfEntrifsToLongTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfEntrifsToLongTbsk<K,V> nfxtRight,
             ToLongFundtion<Mbp.Entry<K,V>> trbnsformfr,
             long bbsis,
             LongBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Long gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToLongFundtion<Mbp.Entry<K,V>> trbnsformfr;
            finbl LongBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                long r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfEntrifsToLongTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsLong(r, trbnsformfr.bpplyAsLong(p));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfEntrifsToLongTbsk<K,V>
                        t = (MbpRfdudfEntrifsToLongTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsLong(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfMbppingsToLongTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Long> {
        finbl ToLongBiFundtion<? supfr K, ? supfr V> trbnsformfr;
        finbl LongBinbryOpfrbtor rfdudfr;
        finbl long bbsis;
        long rfsult;
        MbpRfdudfMbppingsToLongTbsk<K,V> rights, nfxtRight;
        MbpRfdudfMbppingsToLongTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfMbppingsToLongTbsk<K,V> nfxtRight,
             ToLongBiFundtion<? supfr K, ? supfr V> trbnsformfr,
             long bbsis,
             LongBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Long gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToLongBiFundtion<? supfr K, ? supfr V> trbnsformfr;
            finbl LongBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                long r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfMbppingsToLongTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsLong(r, trbnsformfr.bpplyAsLong(p.kfy, p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfMbppingsToLongTbsk<K,V>
                        t = (MbpRfdudfMbppingsToLongTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsLong(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfKfysToIntTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Intfgfr> {
        finbl ToIntFundtion<? supfr K> trbnsformfr;
        finbl IntBinbryOpfrbtor rfdudfr;
        finbl int bbsis;
        int rfsult;
        MbpRfdudfKfysToIntTbsk<K,V> rights, nfxtRight;
        MbpRfdudfKfysToIntTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfKfysToIntTbsk<K,V> nfxtRight,
             ToIntFundtion<? supfr K> trbnsformfr,
             int bbsis,
             IntBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Intfgfr gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToIntFundtion<? supfr K> trbnsformfr;
            finbl IntBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                int r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfKfysToIntTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsInt(r, trbnsformfr.bpplyAsInt(p.kfy));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfKfysToIntTbsk<K,V>
                        t = (MbpRfdudfKfysToIntTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsInt(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfVblufsToIntTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Intfgfr> {
        finbl ToIntFundtion<? supfr V> trbnsformfr;
        finbl IntBinbryOpfrbtor rfdudfr;
        finbl int bbsis;
        int rfsult;
        MbpRfdudfVblufsToIntTbsk<K,V> rights, nfxtRight;
        MbpRfdudfVblufsToIntTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfVblufsToIntTbsk<K,V> nfxtRight,
             ToIntFundtion<? supfr V> trbnsformfr,
             int bbsis,
             IntBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Intfgfr gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToIntFundtion<? supfr V> trbnsformfr;
            finbl IntBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                int r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfVblufsToIntTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsInt(r, trbnsformfr.bpplyAsInt(p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfVblufsToIntTbsk<K,V>
                        t = (MbpRfdudfVblufsToIntTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsInt(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfEntrifsToIntTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Intfgfr> {
        finbl ToIntFundtion<Mbp.Entry<K,V>> trbnsformfr;
        finbl IntBinbryOpfrbtor rfdudfr;
        finbl int bbsis;
        int rfsult;
        MbpRfdudfEntrifsToIntTbsk<K,V> rights, nfxtRight;
        MbpRfdudfEntrifsToIntTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfEntrifsToIntTbsk<K,V> nfxtRight,
             ToIntFundtion<Mbp.Entry<K,V>> trbnsformfr,
             int bbsis,
             IntBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Intfgfr gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToIntFundtion<Mbp.Entry<K,V>> trbnsformfr;
            finbl IntBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                int r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfEntrifsToIntTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsInt(r, trbnsformfr.bpplyAsInt(p));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfEntrifsToIntTbsk<K,V>
                        t = (MbpRfdudfEntrifsToIntTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsInt(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    @SupprfssWbrnings("sfribl")
    stbtid finbl dlbss MbpRfdudfMbppingsToIntTbsk<K,V>
        fxtfnds BulkTbsk<K,V,Intfgfr> {
        finbl ToIntBiFundtion<? supfr K, ? supfr V> trbnsformfr;
        finbl IntBinbryOpfrbtor rfdudfr;
        finbl int bbsis;
        int rfsult;
        MbpRfdudfMbppingsToIntTbsk<K,V> rights, nfxtRight;
        MbpRfdudfMbppingsToIntTbsk
            (BulkTbsk<K,V,?> p, int b, int i, int f, Nodf<K,V>[] t,
             MbpRfdudfMbppingsToIntTbsk<K,V> nfxtRight,
             ToIntBiFundtion<? supfr K, ? supfr V> trbnsformfr,
             int bbsis,
             IntBinbryOpfrbtor rfdudfr) {
            supfr(p, b, i, f, t); this.nfxtRight = nfxtRight;
            this.trbnsformfr = trbnsformfr;
            this.bbsis = bbsis; this.rfdudfr = rfdudfr;
        }
        publid finbl Intfgfr gftRbwRfsult() { rfturn rfsult; }
        publid finbl void domputf() {
            finbl ToIntBiFundtion<? supfr K, ? supfr V> trbnsformfr;
            finbl IntBinbryOpfrbtor rfdudfr;
            if ((trbnsformfr = this.trbnsformfr) != null &&
                (rfdudfr = this.rfdudfr) != null) {
                int r = this.bbsis;
                for (int i = bbsfIndfx, f, h; bbtdh > 0 &&
                         (h = ((f = bbsfLimit) + i) >>> 1) > i;) {
                    bddToPfndingCount(1);
                    (rights = nfw MbpRfdudfMbppingsToIntTbsk<K,V>
                     (this, bbtdh >>>= 1, bbsfLimit = h, f, tbb,
                      rights, trbnsformfr, r, rfdudfr)).fork();
                }
                for (Nodf<K,V> p; (p = bdvbndf()) != null; )
                    r = rfdudfr.bpplyAsInt(r, trbnsformfr.bpplyAsInt(p.kfy, p.vbl));
                rfsult = r;
                CountfdComplftfr<?> d;
                for (d = firstComplftf(); d != null; d = d.nfxtComplftf()) {
                    @SupprfssWbrnings("undhfdkfd")
                    MbpRfdudfMbppingsToIntTbsk<K,V>
                        t = (MbpRfdudfMbppingsToIntTbsk<K,V>)d,
                        s = t.rights;
                    whilf (s != null) {
                        t.rfsult = rfdudfr.bpplyAsInt(t.rfsult, s.rfsult);
                        s = t.rights = s.nfxtRight;
                    }
                }
            }
        }
    }

    // Unsbff mfdhbnids
    privbtf stbtid finbl sun.misd.Unsbff U;
    privbtf stbtid finbl long SIZECTL;
    privbtf stbtid finbl long TRANSFERINDEX;
    privbtf stbtid finbl long BASECOUNT;
    privbtf stbtid finbl long CELLSBUSY;
    privbtf stbtid finbl long CELLVALUE;
    privbtf stbtid finbl long ABASE;
    privbtf stbtid finbl int ASHIFT;

    stbtid {
        try {
            U = sun.misd.Unsbff.gftUnsbff();
            Clbss<?> k = CondurrfntHbshMbp.dlbss;
            SIZECTL = U.objfdtFifldOffsft
                (k.gftDfdlbrfdFifld("sizfCtl"));
            TRANSFERINDEX = U.objfdtFifldOffsft
                (k.gftDfdlbrfdFifld("trbnsffrIndfx"));
            BASECOUNT = U.objfdtFifldOffsft
                (k.gftDfdlbrfdFifld("bbsfCount"));
            CELLSBUSY = U.objfdtFifldOffsft
                (k.gftDfdlbrfdFifld("dfllsBusy"));
            Clbss<?> dk = CountfrCfll.dlbss;
            CELLVALUE = U.objfdtFifldOffsft
                (dk.gftDfdlbrfdFifld("vbluf"));
            Clbss<?> bk = Nodf[].dlbss;
            ABASE = U.brrbyBbsfOffsft(bk);
            int sdblf = U.brrbyIndfxSdblf(bk);
            if ((sdblf & (sdblf - 1)) != 0)
                throw nfw Error("dbtb typf sdblf not b powfr of two");
            ASHIFT = 31 - Intfgfr.numbfrOfLfbdingZfros(sdblf);
        } dbtdh (Exdfption f) {
            throw nfw Error(f);
        }
    }
}
