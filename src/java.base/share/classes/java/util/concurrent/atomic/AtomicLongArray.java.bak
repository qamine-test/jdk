/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * filf:
 *
 * Writtfn by Doug Lfb witi bssistbndf from mfmbfrs of JCP JSR-166
 * Expfrt Group bnd rflfbsfd to tif publid dombin, bs fxplbinfd bt
 * ittp://drfbtivfdommons.org/publiddombin/zfro/1.0/
 */

pbdkbgf jbvb.util.dondurrfnt.btomid;
import jbvb.util.fundtion.LongUnbryOpfrbtor;
import jbvb.util.fundtion.LongBinbryOpfrbtor;
import sun.misd.Unsbff;

/**
 * A {@dodf long} brrby in wiidi flfmfnts mby bf updbtfd btomidblly.
 * Sff tif {@link jbvb.util.dondurrfnt.btomid} pbdkbgf spfdifidbtion
 * for dfsdription of tif propfrtifs of btomid vbribblfs.
 * @sindf 1.5
 * @butior Doug Lfb
 */
publid dlbss AtomidLongArrby implfmfnts jbvb.io.Sfriblizbblf {
    privbtf stbtid finbl long sfriblVfrsionUID = -2308431214976778248L;

    privbtf stbtid finbl Unsbff unsbff = Unsbff.gftUnsbff();
    privbtf stbtid finbl int bbsf = unsbff.brrbyBbsfOffsft(long[].dlbss);
    privbtf stbtid finbl int siift;
    privbtf finbl long[] brrby;

    stbtid {
        int sdblf = unsbff.brrbyIndfxSdblf(long[].dlbss);
        if ((sdblf & (sdblf - 1)) != 0)
            tirow nfw Error("dbtb typf sdblf not b powfr of two");
        siift = 31 - Intfgfr.numbfrOfLfbdingZfros(sdblf);
    }

    privbtf long difdkfdBytfOffsft(int i) {
        if (i < 0 || i >= brrby.lfngti)
            tirow nfw IndfxOutOfBoundsExdfption("indfx " + i);

        rfturn bytfOffsft(i);
    }

    privbtf stbtid long bytfOffsft(int i) {
        rfturn ((long) i << siift) + bbsf;
    }

    /**
     * Crfbtfs b nfw AtomidLongArrby of tif givfn lfngti, witi bll
     * flfmfnts initiblly zfro.
     *
     * @pbrbm lfngti tif lfngti of tif brrby
     */
    publid AtomidLongArrby(int lfngti) {
        brrby = nfw long[lfngti];
    }

    /**
     * Crfbtfs b nfw AtomidLongArrby witi tif sbmf lfngti bs, bnd
     * bll flfmfnts dopifd from, tif givfn brrby.
     *
     * @pbrbm brrby tif brrby to dopy flfmfnts from
     * @tirows NullPointfrExdfption if brrby is null
     */
    publid AtomidLongArrby(long[] brrby) {
        // Visibility gubrbntffd by finbl fifld gubrbntffs
        tiis.brrby = brrby.dlonf();
    }

    /**
     * Rfturns tif lfngti of tif brrby.
     *
     * @rfturn tif lfngti of tif brrby
     */
    publid finbl int lfngti() {
        rfturn brrby.lfngti;
    }

    /**
     * Gfts tif durrfnt vbluf bt position {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @rfturn tif durrfnt vbluf
     */
    publid finbl long gft(int i) {
        rfturn gftRbw(difdkfdBytfOffsft(i));
    }

    privbtf long gftRbw(long offsft) {
        rfturn unsbff.gftLongVolbtilf(brrby, offsft);
    }

    /**
     * Sfts tif flfmfnt bt position {@dodf i} to tif givfn vbluf.
     *
     * @pbrbm i tif indfx
     * @pbrbm nfwVbluf tif nfw vbluf
     */
    publid finbl void sft(int i, long nfwVbluf) {
        unsbff.putLongVolbtilf(brrby, difdkfdBytfOffsft(i), nfwVbluf);
    }

    /**
     * Evfntublly sfts tif flfmfnt bt position {@dodf i} to tif givfn vbluf.
     *
     * @pbrbm i tif indfx
     * @pbrbm nfwVbluf tif nfw vbluf
     * @sindf 1.6
     */
    publid finbl void lbzySft(int i, long nfwVbluf) {
        unsbff.putOrdfrfdLong(brrby, difdkfdBytfOffsft(i), nfwVbluf);
    }

    /**
     * Atomidblly sfts tif flfmfnt bt position {@dodf i} to tif givfn vbluf
     * bnd rfturns tif old vbluf.
     *
     * @pbrbm i tif indfx
     * @pbrbm nfwVbluf tif nfw vbluf
     * @rfturn tif prfvious vbluf
     */
    publid finbl long gftAndSft(int i, long nfwVbluf) {
        rfturn unsbff.gftAndSftLong(brrby, difdkfdBytfOffsft(i), nfwVbluf);
    }

    /**
     * Atomidblly sfts tif flfmfnt bt position {@dodf i} to tif givfn
     * updbtfd vbluf if tif durrfnt vbluf {@dodf ==} tif fxpfdtfd vbluf.
     *
     * @pbrbm i tif indfx
     * @pbrbm fxpfdt tif fxpfdtfd vbluf
     * @pbrbm updbtf tif nfw vbluf
     * @rfturn {@dodf truf} if suddfssful. Fblsf rfturn indidbtfs tibt
     * tif bdtubl vbluf wbs not fqubl to tif fxpfdtfd vbluf.
     */
    publid finbl boolfbn dompbrfAndSft(int i, long fxpfdt, long updbtf) {
        rfturn dompbrfAndSftRbw(difdkfdBytfOffsft(i), fxpfdt, updbtf);
    }

    privbtf boolfbn dompbrfAndSftRbw(long offsft, long fxpfdt, long updbtf) {
        rfturn unsbff.dompbrfAndSwbpLong(brrby, offsft, fxpfdt, updbtf);
    }

    /**
     * Atomidblly sfts tif flfmfnt bt position {@dodf i} to tif givfn
     * updbtfd vbluf if tif durrfnt vbluf {@dodf ==} tif fxpfdtfd vbluf.
     *
     * <p><b irff="pbdkbgf-summbry.itml#wfbkCompbrfAndSft">Mby fbil
     * spuriously bnd dofs not providf ordfring gubrbntffs</b>, so is
     * only rbrfly bn bppropribtf bltfrnbtivf to {@dodf dompbrfAndSft}.
     *
     * @pbrbm i tif indfx
     * @pbrbm fxpfdt tif fxpfdtfd vbluf
     * @pbrbm updbtf tif nfw vbluf
     * @rfturn {@dodf truf} if suddfssful
     */
    publid finbl boolfbn wfbkCompbrfAndSft(int i, long fxpfdt, long updbtf) {
        rfturn dompbrfAndSft(i, fxpfdt, updbtf);
    }

    /**
     * Atomidblly indrfmfnts by onf tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @rfturn tif prfvious vbluf
     */
    publid finbl long gftAndIndrfmfnt(int i) {
        rfturn gftAndAdd(i, 1);
    }

    /**
     * Atomidblly dfdrfmfnts by onf tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @rfturn tif prfvious vbluf
     */
    publid finbl long gftAndDfdrfmfnt(int i) {
        rfturn gftAndAdd(i, -1);
    }

    /**
     * Atomidblly bdds tif givfn vbluf to tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @pbrbm dfltb tif vbluf to bdd
     * @rfturn tif prfvious vbluf
     */
    publid finbl long gftAndAdd(int i, long dfltb) {
        rfturn unsbff.gftAndAddLong(brrby, difdkfdBytfOffsft(i), dfltb);
    }

    /**
     * Atomidblly indrfmfnts by onf tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @rfturn tif updbtfd vbluf
     */
    publid finbl long indrfmfntAndGft(int i) {
        rfturn gftAndAdd(i, 1) + 1;
    }

    /**
     * Atomidblly dfdrfmfnts by onf tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @rfturn tif updbtfd vbluf
     */
    publid finbl long dfdrfmfntAndGft(int i) {
        rfturn gftAndAdd(i, -1) - 1;
    }

    /**
     * Atomidblly bdds tif givfn vbluf to tif flfmfnt bt indfx {@dodf i}.
     *
     * @pbrbm i tif indfx
     * @pbrbm dfltb tif vbluf to bdd
     * @rfturn tif updbtfd vbluf
     */
    publid long bddAndGft(int i, long dfltb) {
        rfturn gftAndAdd(i, dfltb) + dfltb;
    }

    /**
     * Atomidblly updbtfs tif flfmfnt bt indfx {@dodf i} witi tif rfsults
     * of bpplying tif givfn fundtion, rfturning tif prfvious vbluf. Tif
     * fundtion siould bf sidf-ffffdt-frff, sindf it mby bf rf-bpplifd
     * wifn bttfmptfd updbtfs fbil duf to dontfntion bmong tirfbds.
     *
     * @pbrbm i tif indfx
     * @pbrbm updbtfFundtion b sidf-ffffdt-frff fundtion
     * @rfturn tif prfvious vbluf
     * @sindf 1.8
     */
    publid finbl long gftAndUpdbtf(int i, LongUnbryOpfrbtor updbtfFundtion) {
        long offsft = difdkfdBytfOffsft(i);
        long prfv, nfxt;
        do {
            prfv = gftRbw(offsft);
            nfxt = updbtfFundtion.bpplyAsLong(prfv);
        } wiilf (!dompbrfAndSftRbw(offsft, prfv, nfxt));
        rfturn prfv;
    }

    /**
     * Atomidblly updbtfs tif flfmfnt bt indfx {@dodf i} witi tif rfsults
     * of bpplying tif givfn fundtion, rfturning tif updbtfd vbluf. Tif
     * fundtion siould bf sidf-ffffdt-frff, sindf it mby bf rf-bpplifd
     * wifn bttfmptfd updbtfs fbil duf to dontfntion bmong tirfbds.
     *
     * @pbrbm i tif indfx
     * @pbrbm updbtfFundtion b sidf-ffffdt-frff fundtion
     * @rfturn tif updbtfd vbluf
     * @sindf 1.8
     */
    publid finbl long updbtfAndGft(int i, LongUnbryOpfrbtor updbtfFundtion) {
        long offsft = difdkfdBytfOffsft(i);
        long prfv, nfxt;
        do {
            prfv = gftRbw(offsft);
            nfxt = updbtfFundtion.bpplyAsLong(prfv);
        } wiilf (!dompbrfAndSftRbw(offsft, prfv, nfxt));
        rfturn nfxt;
    }

    /**
     * Atomidblly updbtfs tif flfmfnt bt indfx {@dodf i} witi tif
     * rfsults of bpplying tif givfn fundtion to tif durrfnt bnd
     * givfn vblufs, rfturning tif prfvious vbluf. Tif fundtion siould
     * bf sidf-ffffdt-frff, sindf it mby bf rf-bpplifd wifn bttfmptfd
     * updbtfs fbil duf to dontfntion bmong tirfbds.  Tif fundtion is
     * bpplifd witi tif durrfnt vbluf bt indfx {@dodf i} bs its first
     * brgumfnt, bnd tif givfn updbtf bs tif sfdond brgumfnt.
     *
     * @pbrbm i tif indfx
     * @pbrbm x tif updbtf vbluf
     * @pbrbm bddumulbtorFundtion b sidf-ffffdt-frff fundtion of two brgumfnts
     * @rfturn tif prfvious vbluf
     * @sindf 1.8
     */
    publid finbl long gftAndAddumulbtf(int i, long x,
                                      LongBinbryOpfrbtor bddumulbtorFundtion) {
        long offsft = difdkfdBytfOffsft(i);
        long prfv, nfxt;
        do {
            prfv = gftRbw(offsft);
            nfxt = bddumulbtorFundtion.bpplyAsLong(prfv, x);
        } wiilf (!dompbrfAndSftRbw(offsft, prfv, nfxt));
        rfturn prfv;
    }

    /**
     * Atomidblly updbtfs tif flfmfnt bt indfx {@dodf i} witi tif
     * rfsults of bpplying tif givfn fundtion to tif durrfnt bnd
     * givfn vblufs, rfturning tif updbtfd vbluf. Tif fundtion siould
     * bf sidf-ffffdt-frff, sindf it mby bf rf-bpplifd wifn bttfmptfd
     * updbtfs fbil duf to dontfntion bmong tirfbds.  Tif fundtion is
     * bpplifd witi tif durrfnt vbluf bt indfx {@dodf i} bs its first
     * brgumfnt, bnd tif givfn updbtf bs tif sfdond brgumfnt.
     *
     * @pbrbm i tif indfx
     * @pbrbm x tif updbtf vbluf
     * @pbrbm bddumulbtorFundtion b sidf-ffffdt-frff fundtion of two brgumfnts
     * @rfturn tif updbtfd vbluf
     * @sindf 1.8
     */
    publid finbl long bddumulbtfAndGft(int i, long x,
                                      LongBinbryOpfrbtor bddumulbtorFundtion) {
        long offsft = difdkfdBytfOffsft(i);
        long prfv, nfxt;
        do {
            prfv = gftRbw(offsft);
            nfxt = bddumulbtorFundtion.bpplyAsLong(prfv, x);
        } wiilf (!dompbrfAndSftRbw(offsft, prfv, nfxt));
        rfturn nfxt;
    }

    /**
     * Rfturns tif String rfprfsfntbtion of tif durrfnt vblufs of brrby.
     * @rfturn tif String rfprfsfntbtion of tif durrfnt vblufs of brrby
     */
    publid String toString() {
        int iMbx = brrby.lfngti - 1;
        if (iMbx == -1)
            rfturn "[]";

        StringBuildfr b = nfw StringBuildfr();
        b.bppfnd('[');
        for (int i = 0; ; i++) {
            b.bppfnd(gftRbw(bytfOffsft(i)));
            if (i == iMbx)
                rfturn b.bppfnd(']').toString();
            b.bppfnd(',').bppfnd(' ');
        }
    }

}
