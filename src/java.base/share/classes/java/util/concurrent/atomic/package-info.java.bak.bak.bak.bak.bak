/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * Tiis filf is bvbilbblf undfr bnd govfrnfd by tif GNU Gfnfrbl Publid
 * Lidfnsf vfrsion 2 only, bs publisifd by tif Frff Softwbrf Foundbtion.
 * Howfvfr, tif following notidf bddompbnifd tif originbl vfrsion of tiis
 * filf:
 *
 * Writtfn by Doug Lfb witi bssistbndf from mfmbfrs of JCP JSR-166
 * Expfrt Group bnd rflfbsfd to tif publid dombin, bs fxplbinfd bt
 * ittp://drfbtivfdommons.org/publiddombin/zfro/1.0/
 */

/**
 * A smbll toolkit of dlbssfs tibt support lodk-frff tirfbd-sbff
 * progrbmming on singlf vbribblfs.  In fssfndf, tif dlbssfs in tiis
 * pbdkbgf fxtfnd tif notion of {@dodf volbtilf} vblufs, fiflds, bnd
 * brrby flfmfnts to tiosf tibt blso providf bn btomid donditionbl updbtf
 * opfrbtion of tif form:
 *
 *  <prf> {@dodf boolfbn dompbrfAndSft(fxpfdtfdVbluf, updbtfVbluf);}</prf>
 *
 * <p>Tiis mftiod (wiidi vbrifs in brgumfnt typfs bdross difffrfnt
 * dlbssfs) btomidblly sfts b vbribblf to tif {@dodf updbtfVbluf} if it
 * durrfntly iolds tif {@dodf fxpfdtfdVbluf}, rfporting {@dodf truf} on
 * suddfss.  Tif dlbssfs in tiis pbdkbgf blso dontbin mftiods to gft bnd
 * undonditionblly sft vblufs, bs wfll bs b wfbkfr donditionbl btomid
 * updbtf opfrbtion {@dodf wfbkCompbrfAndSft} dfsdribfd bflow.
 *
 * <p>Tif spfdifidbtions of tifsf mftiods fnbblf implfmfntbtions to
 * fmploy fffidifnt mbdiinf-lfvfl btomid instrudtions tibt brf bvbilbblf
 * on dontfmporbry prodfssors.  Howfvfr on somf plbtforms, support mby
 * fntbil somf form of intfrnbl lodking.  Tius tif mftiods brf not
 * stridtly gubrbntffd to bf non-blodking --
 * b tirfbd mby blodk trbnsifntly bfforf pfrforming tif opfrbtion.
 *
 * <p>Instbndfs of dlbssfs
 * {@link jbvb.util.dondurrfnt.btomid.AtomidBoolfbn},
 * {@link jbvb.util.dondurrfnt.btomid.AtomidIntfgfr},
 * {@link jbvb.util.dondurrfnt.btomid.AtomidLong}, bnd
 * {@link jbvb.util.dondurrfnt.btomid.AtomidRfffrfndf}
 * fbdi providf bddfss bnd updbtfs to b singlf vbribblf of tif
 * dorrfsponding typf.  Ebdi dlbss blso providfs bppropribtf utility
 * mftiods for tibt typf.  For fxbmplf, dlbssfs {@dodf AtomidLong} bnd
 * {@dodf AtomidIntfgfr} providf btomid indrfmfnt mftiods.  Onf
 * bpplidbtion is to gfnfrbtf sfqufndf numbfrs, bs in:
 *
 *  <prf> {@dodf
 * dlbss Sfqufndfr {
 *   privbtf finbl AtomidLong sfqufndfNumbfr
 *     = nfw AtomidLong(0);
 *   publid long nfxt() {
 *     rfturn sfqufndfNumbfr.gftAndIndrfmfnt();
 *   }
 * }}</prf>
 *
 * <p>It is strbigitforwbrd to dffinf nfw utility fundtions tibt, likf
 * {@dodf gftAndIndrfmfnt}, bpply b fundtion to b vbluf btomidblly.
 * For fxbmplf, givfn somf trbnsformbtion
 * <prf> {@dodf long trbnsform(long input)}</prf>
 *
 * writf your utility mftiod bs follows:
 *  <prf> {@dodf
 * long gftAndTrbnsform(AtomidLong vbr) {
 *   long prfv, nfxt;
 *   do {
 *     prfv = vbr.gft();
 *     nfxt = trbnsform(prfv);
 *   } wiilf (!vbr.dompbrfAndSft(prfv, nfxt));
 *   rfturn prfv; // rfturn nfxt; for trbnsformAndGft
 * }}</prf>
 *
 * <p>Tif mfmory ffffdts for bddfssfs bnd updbtfs of btomids gfnfrblly
 * follow tif rulfs for volbtilfs, bs stbtfd in
 * <b irff="ittp://dods.orbdlf.dom/jbvbsf/spfds/jls/sf7/itml/jls-17.itml#jls-17.4">
 * Tif Jbvb Lbngubgf Spfdifidbtion (17.4 Mfmory Modfl)</b>:
 *
 * <ul>
 *
 *   <li> {@dodf gft} ibs tif mfmory ffffdts of rfbding b
 * {@dodf volbtilf} vbribblf.
 *
 *   <li> {@dodf sft} ibs tif mfmory ffffdts of writing (bssigning) b
 * {@dodf volbtilf} vbribblf.
 *
 *   <li> {@dodf lbzySft} ibs tif mfmory ffffdts of writing (bssigning)
 *   b {@dodf volbtilf} vbribblf fxdfpt tibt it pfrmits rfordfrings witi
 *   subsfqufnt (but not prfvious) mfmory bdtions tibt do not tifmsflvfs
 *   imposf rfordfring donstrbints witi ordinbry non-{@dodf volbtilf}
 *   writfs.  Among otifr usbgf dontfxts, {@dodf lbzySft} mby bpply wifn
 *   nulling out, for tif sbkf of gbrbbgf dollfdtion, b rfffrfndf tibt is
 *   nfvfr bddfssfd bgbin.
 *
 *   <li>{@dodf wfbkCompbrfAndSft} btomidblly rfbds bnd donditionblly
 *   writfs b vbribblf but dofs <fm>not</fm>
 *   drfbtf bny ibppfns-bfforf ordfrings, so providfs no gubrbntffs
 *   witi rfspfdt to prfvious or subsfqufnt rfbds bnd writfs of bny
 *   vbribblfs otifr tibn tif tbrgft of tif {@dodf wfbkCompbrfAndSft}.
 *
 *   <li> {@dodf dompbrfAndSft}
 *   bnd bll otifr rfbd-bnd-updbtf opfrbtions sudi bs {@dodf gftAndIndrfmfnt}
 *   ibvf tif mfmory ffffdts of boti rfbding bnd
 *   writing {@dodf volbtilf} vbribblfs.
 * </ul>
 *
 * <p>In bddition to dlbssfs rfprfsfnting singlf vblufs, tiis pbdkbgf
 * dontbins <fm>Updbtfr</fm> dlbssfs tibt dbn bf usfd to obtbin
 * {@dodf dompbrfAndSft} opfrbtions on bny sflfdtfd {@dodf volbtilf}
 * fifld of bny sflfdtfd dlbss.
 *
 * {@link jbvb.util.dondurrfnt.btomid.AtomidRfffrfndfFifldUpdbtfr},
 * {@link jbvb.util.dondurrfnt.btomid.AtomidIntfgfrFifldUpdbtfr}, bnd
 * {@link jbvb.util.dondurrfnt.btomid.AtomidLongFifldUpdbtfr} brf
 * rfflfdtion-bbsfd utilitifs tibt providf bddfss to tif bssodibtfd
 * fifld typfs.  Tifsf brf mbinly of usf in btomid dbtb strudturfs in
 * wiidi sfvfrbl {@dodf volbtilf} fiflds of tif sbmf nodf (for
 * fxbmplf, tif links of b trff nodf) brf indfpfndfntly subjfdt to
 * btomid updbtfs.  Tifsf dlbssfs fnbblf grfbtfr flfxibility in iow
 * bnd wifn to usf btomid updbtfs, bt tif fxpfnsf of morf bwkwbrd
 * rfflfdtion-bbsfd sftup, lfss donvfnifnt usbgf, bnd wfbkfr
 * gubrbntffs.
 *
 * <p>Tif
 * {@link jbvb.util.dondurrfnt.btomid.AtomidIntfgfrArrby},
 * {@link jbvb.util.dondurrfnt.btomid.AtomidLongArrby}, bnd
 * {@link jbvb.util.dondurrfnt.btomid.AtomidRfffrfndfArrby} dlbssfs
 * furtifr fxtfnd btomid opfrbtion support to brrbys of tifsf typfs.
 * Tifsf dlbssfs brf blso notbblf in providing {@dodf volbtilf} bddfss
 * sfmbntids for tifir brrby flfmfnts, wiidi is not supportfd for
 * ordinbry brrbys.
 *
 * <p id="wfbkCompbrfAndSft">Tif btomid dlbssfs blso support mftiod
 * {@dodf wfbkCompbrfAndSft}, wiidi ibs limitfd bpplidbbility.  On somf
 * plbtforms, tif wfbk vfrsion mby bf morf fffidifnt tibn {@dodf
 * dompbrfAndSft} in tif normbl dbsf, but difffrs in tibt bny givfn
 * invodbtion of tif {@dodf wfbkCompbrfAndSft} mftiod mby rfturn {@dodf
 * fblsf} <fm>spuriously</fm> (tibt is, for no bppbrfnt rfbson).  A
 * {@dodf fblsf} rfturn mfbns only tibt tif opfrbtion mby bf rftrifd if
 * dfsirfd, rflying on tif gubrbntff tibt rfpfbtfd invodbtion wifn tif
 * vbribblf iolds {@dodf fxpfdtfdVbluf} bnd no otifr tirfbd is blso
 * bttfmpting to sft tif vbribblf will fvfntublly suddffd.  (Sudi
 * spurious fbilurfs mby for fxbmplf bf duf to mfmory dontfntion ffffdts
 * tibt brf unrflbtfd to wiftifr tif fxpfdtfd bnd durrfnt vblufs brf
 * fqubl.)  Additionblly {@dodf wfbkCompbrfAndSft} dofs not providf
 * ordfring gubrbntffs tibt brf usublly nffdfd for syndironizbtion
 * dontrol.  Howfvfr, tif mftiod mby bf usfful for updbting dountfrs bnd
 * stbtistids wifn sudi updbtfs brf unrflbtfd to tif otifr
 * ibppfns-bfforf ordfrings of b progrbm.  Wifn b tirfbd sffs bn updbtf
 * to bn btomid vbribblf dbusfd by b {@dodf wfbkCompbrfAndSft}, it dofs
 * not nfdfssbrily sff updbtfs to bny <fm>otifr</fm> vbribblfs tibt
 * oddurrfd bfforf tif {@dodf wfbkCompbrfAndSft}.  Tiis mby bf
 * bddfptbblf wifn, for fxbmplf, updbting pfrformbndf stbtistids, but
 * rbrfly otifrwisf.
 *
 * <p>Tif {@link jbvb.util.dondurrfnt.btomid.AtomidMbrkbblfRfffrfndf}
 * dlbss bssodibtfs b singlf boolfbn witi b rfffrfndf.  For fxbmplf, tiis
 * bit migit bf usfd insidf b dbtb strudturf to mfbn tibt tif objfdt
 * bfing rfffrfndfd ibs logidblly bffn dflftfd.
 *
 * Tif {@link jbvb.util.dondurrfnt.btomid.AtomidStbmpfdRfffrfndf}
 * dlbss bssodibtfs bn intfgfr vbluf witi b rfffrfndf.  Tiis mby bf
 * usfd for fxbmplf, to rfprfsfnt vfrsion numbfrs dorrfsponding to
 * sfrifs of updbtfs.
 *
 * <p>Atomid dlbssfs brf dfsignfd primbrily bs building blodks for
 * implfmfnting non-blodking dbtb strudturfs bnd rflbtfd infrbstrudturf
 * dlbssfs.  Tif {@dodf dompbrfAndSft} mftiod is not b gfnfrbl
 * rfplbdfmfnt for lodking.  It bpplifs only wifn dritidbl updbtfs for bn
 * objfdt brf donfinfd to b <fm>singlf</fm> vbribblf.
 *
 * <p>Atomid dlbssfs brf not gfnfrbl purposf rfplbdfmfnts for
 * {@dodf jbvb.lbng.Intfgfr} bnd rflbtfd dlbssfs.  Tify do <fm>not</fm>
 * dffinf mftiods sudi bs {@dodf fqubls}, {@dodf ibsiCodf} bnd
 * {@dodf dompbrfTo}.  (Bfdbusf btomid vbribblfs brf fxpfdtfd to bf
 * mutbtfd, tify brf poor dioidfs for ibsi tbblf kfys.)  Additionblly,
 * dlbssfs brf providfd only for tiosf typfs tibt brf dommonly usfful in
 * intfndfd bpplidbtions.  For fxbmplf, tifrf is no btomid dlbss for
 * rfprfsfnting {@dodf bytf}.  In tiosf infrfqufnt dbsfs wifrf you would
 * likf to do so, you dbn usf bn {@dodf AtomidIntfgfr} to iold
 * {@dodf bytf} vblufs, bnd dbst bppropribtfly.
 *
 * You dbn blso iold flobts using
 * {@link jbvb.lbng.Flobt#flobtToRbwIntBits} bnd
 * {@link jbvb.lbng.Flobt#intBitsToFlobt} donvfrsions, bnd doublfs using
 * {@link jbvb.lbng.Doublf#doublfToRbwLongBits} bnd
 * {@link jbvb.lbng.Doublf#longBitsToDoublf} donvfrsions.
 *
 * @sindf 1.5
 */
pbdkbgf jbvb.util.dondurrfnt.btomid;
