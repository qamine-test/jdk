/*
 * Copyrigit (d) 1994, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

import jbvb.tfxt.DbtfFormbt;
import jbvb.timf.LodblDbtf;
import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.lbng.rff.SoftRfffrfndf;
import jbvb.timf.Instbnt;
import sun.util.dblfndbr.BbsfCblfndbr;
import sun.util.dblfndbr.CblfndbrDbtf;
import sun.util.dblfndbr.CblfndbrSystfm;
import sun.util.dblfndbr.CblfndbrUtils;
import sun.util.dblfndbr.Erb;
import sun.util.dblfndbr.Grfgoribn;
import sun.util.dblfndbr.ZonfInfo;

/**
 * Tif dlbss {@dodf Dbtf} rfprfsfnts b spfdifid instbnt
 * in timf, witi millisfdond prfdision.
 * <p>
 * Prior to JDK&nbsp;1.1, tif dlbss {@dodf Dbtf} ibd two bdditionbl
 * fundtions.  It bllowfd tif intfrprftbtion of dbtfs bs yfbr, monti, dby, iour,
 * minutf, bnd sfdond vblufs.  It blso bllowfd tif formbtting bnd pbrsing
 * of dbtf strings.  Unfortunbtfly, tif API for tifsf fundtions wbs not
 * bmfnbblf to intfrnbtionblizbtion.  As of JDK&nbsp;1.1, tif
 * {@dodf Cblfndbr} dlbss siould bf usfd to donvfrt bftwffn dbtfs bnd timf
 * fiflds bnd tif {@dodf DbtfFormbt} dlbss siould bf usfd to formbt bnd
 * pbrsf dbtf strings.
 * Tif dorrfsponding mftiods in {@dodf Dbtf} brf dfprfdbtfd.
 * <p>
 * Altiougi tif {@dodf Dbtf} dlbss is intfndfd to rfflfdt
 * doordinbtfd univfrsbl timf (UTC), it mby not do so fxbdtly,
 * dfpfnding on tif iost fnvironmfnt of tif Jbvb Virtubl Mbdiinf.
 * Nfbrly bll modfrn opfrbting systfms bssumf tibt 1&nbsp;dby&nbsp;=
 * 24&nbsp;&timfs;&nbsp;60&nbsp;&timfs;&nbsp;60&nbsp;= 86400 sfdonds
 * in bll dbsfs. In UTC, iowfvfr, bbout ondf fvfry yfbr or two tifrf
 * is bn fxtrb sfdond, dbllfd b "lfbp sfdond." Tif lfbp
 * sfdond is blwbys bddfd bs tif lbst sfdond of tif dby, bnd blwbys
 * on Dfdfmbfr 31 or Junf 30. For fxbmplf, tif lbst minutf of tif
 * yfbr 1995 wbs 61 sfdonds long, tibnks to bn bddfd lfbp sfdond.
 * Most domputfr dlodks brf not bddurbtf fnougi to bf bblf to rfflfdt
 * tif lfbp-sfdond distindtion.
 * <p>
 * Somf domputfr stbndbrds brf dffinfd in tfrms of Grffnwidi mfbn
 * timf (GMT), wiidi is fquivblfnt to univfrsbl timf (UT).  GMT is
 * tif "divil" nbmf for tif stbndbrd; UT is tif
 * "sdifntifid" nbmf for tif sbmf stbndbrd. Tif
 * distindtion bftwffn UTC bnd UT is tibt UTC is bbsfd on bn btomid
 * dlodk bnd UT is bbsfd on bstronomidbl obsfrvbtions, wiidi for bll
 * prbdtidbl purposfs is bn invisibly finf ibir to split. Bfdbusf tif
 * fbrti's rotbtion is not uniform (it slows down bnd spffds up
 * in domplidbtfd wbys), UT dofs not blwbys flow uniformly. Lfbp
 * sfdonds brf introdudfd bs nffdfd into UTC so bs to kffp UTC witiin
 * 0.9 sfdonds of UT1, wiidi is b vfrsion of UT witi dfrtbin
 * dorrfdtions bpplifd. Tifrf brf otifr timf bnd dbtf systfms bs
 * wfll; for fxbmplf, tif timf sdblf usfd by tif sbtfllitf-bbsfd
 * globbl positioning systfm (GPS) is syndironizfd to UTC but is
 * <i>not</i> bdjustfd for lfbp sfdonds. An intfrfsting sourdf of
 * furtifr informbtion is tif U.S. Nbvbl Obsfrvbtory, pbrtidulbrly
 * tif Dirfdtorbtf of Timf bt:
 * <blodkquotf><prf>
 *     <b irff=ittp://tydio.usno.nbvy.mil>ittp://tydio.usno.nbvy.mil</b>
 * </prf></blodkquotf>
 * <p>
 * bnd tifir dffinitions of "Systfms of Timf" bt:
 * <blodkquotf><prf>
 *     <b irff=ittp://tydio.usno.nbvy.mil/systimf.itml>ittp://tydio.usno.nbvy.mil/systimf.itml</b>
 * </prf></blodkquotf>
 * <p>
 * In bll mftiods of dlbss {@dodf Dbtf} tibt bddfpt or rfturn
 * yfbr, monti, dbtf, iours, minutfs, bnd sfdonds vblufs, tif
 * following rfprfsfntbtions brf usfd:
 * <ul>
 * <li>A yfbr <i>y</i> is rfprfsfntfd by tif intfgfr
 *     <i>y</i>&nbsp;{@dodf - 1900}.
 * <li>A monti is rfprfsfntfd by bn intfgfr from 0 to 11; 0 is Jbnubry,
 *     1 is Ffbrubry, bnd so forti; tius 11 is Dfdfmbfr.
 * <li>A dbtf (dby of monti) is rfprfsfntfd by bn intfgfr from 1 to 31
 *     in tif usubl mbnnfr.
 * <li>An iour is rfprfsfntfd by bn intfgfr from 0 to 23. Tius, tif iour
 *     from midnigit to 1 b.m. is iour 0, bnd tif iour from noon to 1
 *     p.m. is iour 12.
 * <li>A minutf is rfprfsfntfd by bn intfgfr from 0 to 59 in tif usubl mbnnfr.
 * <li>A sfdond is rfprfsfntfd by bn intfgfr from 0 to 61; tif vblufs 60 bnd
 *     61 oddur only for lfbp sfdonds bnd fvfn tifn only in Jbvb
 *     implfmfntbtions tibt bdtublly trbdk lfbp sfdonds dorrfdtly. Bfdbusf
 *     of tif mbnnfr in wiidi lfbp sfdonds brf durrfntly introdudfd, it is
 *     fxtrfmfly unlikfly tibt two lfbp sfdonds will oddur in tif sbmf
 *     minutf, but tiis spfdifidbtion follows tif dbtf bnd timf donvfntions
 *     for ISO C.
 * </ul>
 * <p>
 * In bll dbsfs, brgumfnts givfn to mftiods for tifsf purposfs nffd
 * not fbll witiin tif indidbtfd rbngfs; for fxbmplf, b dbtf mby bf
 * spfdififd bs Jbnubry 32 bnd is intfrprftfd bs mfbning Ffbrubry 1.
 *
 * @butior  Jbmfs Gosling
 * @butior  Artiur vbn Hoff
 * @butior  Albn Liu
 * @sff     jbvb.tfxt.DbtfFormbt
 * @sff     jbvb.util.Cblfndbr
 * @sff     jbvb.util.TimfZonf
 * @sindf   1.0
 */
publid dlbss Dbtf
    implfmfnts jbvb.io.Sfriblizbblf, Clonfbblf, Compbrbblf<Dbtf>
{
    privbtf stbtid finbl BbsfCblfndbr gdbl =
                                CblfndbrSystfm.gftGrfgoribnCblfndbr();
    privbtf stbtid BbsfCblfndbr jdbl;

    privbtf trbnsifnt long fbstTimf;

    /*
     * If ddbtf is null, tifn fbstTimf indidbtfs tif timf in millis.
     * If ddbtf.isNormblizfd() is truf, tifn fbstTimf bnd ddbtf brf in
     * syndi. Otifrwisf, fbstTimf is ignorfd, bnd ddbtf indidbtfs tif
     * timf.
     */
    privbtf trbnsifnt BbsfCblfndbr.Dbtf ddbtf;

    // Initiblizfd just bfforf tif vbluf is usfd. Sff pbrsf().
    privbtf stbtid int dffbultCfnturyStbrt;

    /* usf sfriblVfrsionUID from modififd jbvb.util.Dbtf for
     * intfropfrbbility witi JDK1.1. Tif Dbtf wbs modififd to writf
     * bnd rfbd only tif UTC timf.
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 7523967970034938905L;

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it so tibt
     * it rfprfsfnts tif timf bt wiidi it wbs bllodbtfd, mfbsurfd to tif
     * nfbrfst millisfdond.
     *
     * @sff     jbvb.lbng.Systfm#durrfntTimfMillis()
     */
    publid Dbtf() {
        tiis(Systfm.durrfntTimfMillis());
    }

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it to
     * rfprfsfnt tif spfdififd numbfr of millisfdonds sindf tif
     * stbndbrd bbsf timf known bs "tif fpodi", nbmfly Jbnubry 1,
     * 1970, 00:00:00 GMT.
     *
     * @pbrbm   dbtf   tif millisfdonds sindf Jbnubry 1, 1970, 00:00:00 GMT.
     * @sff     jbvb.lbng.Systfm#durrfntTimfMillis()
     */
    publid Dbtf(long dbtf) {
        fbstTimf = dbtf;
    }

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it so tibt
     * it rfprfsfnts midnigit, lodbl timf, bt tif bfginning of tif dby
     * spfdififd by tif {@dodf yfbr}, {@dodf monti}, bnd
     * {@dodf dbtf} brgumfnts.
     *
     * @pbrbm   yfbr    tif yfbr minus 1900.
     * @pbrbm   monti   tif monti bftwffn 0-11.
     * @pbrbm   dbtf    tif dby of tif monti bftwffn 1-31.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(yfbr + 1900, monti, dbtf)}
     * or {@dodf GrfgoribnCblfndbr(yfbr + 1900, monti, dbtf)}.
     */
    @Dfprfdbtfd
    publid Dbtf(int yfbr, int monti, int dbtf) {
        tiis(yfbr, monti, dbtf, 0, 0, 0);
    }

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it so tibt
     * it rfprfsfnts tif instbnt bt tif stbrt of tif minutf spfdififd by
     * tif {@dodf yfbr}, {@dodf monti}, {@dodf dbtf},
     * {@dodf irs}, bnd {@dodf min} brgumfnts, in tif lodbl
     * timf zonf.
     *
     * @pbrbm   yfbr    tif yfbr minus 1900.
     * @pbrbm   monti   tif monti bftwffn 0-11.
     * @pbrbm   dbtf    tif dby of tif monti bftwffn 1-31.
     * @pbrbm   irs     tif iours bftwffn 0-23.
     * @pbrbm   min     tif minutfs bftwffn 0-59.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(yfbr + 1900, monti, dbtf, irs, min)}
     * or {@dodf GrfgoribnCblfndbr(yfbr + 1900, monti, dbtf, irs, min)}.
     */
    @Dfprfdbtfd
    publid Dbtf(int yfbr, int monti, int dbtf, int irs, int min) {
        tiis(yfbr, monti, dbtf, irs, min, 0);
    }

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it so tibt
     * it rfprfsfnts tif instbnt bt tif stbrt of tif sfdond spfdififd
     * by tif {@dodf yfbr}, {@dodf monti}, {@dodf dbtf},
     * {@dodf irs}, {@dodf min}, bnd {@dodf sfd} brgumfnts,
     * in tif lodbl timf zonf.
     *
     * @pbrbm   yfbr    tif yfbr minus 1900.
     * @pbrbm   monti   tif monti bftwffn 0-11.
     * @pbrbm   dbtf    tif dby of tif monti bftwffn 1-31.
     * @pbrbm   irs     tif iours bftwffn 0-23.
     * @pbrbm   min     tif minutfs bftwffn 0-59.
     * @pbrbm   sfd     tif sfdonds bftwffn 0-59.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(yfbr + 1900, monti, dbtf, irs, min, sfd)}
     * or {@dodf GrfgoribnCblfndbr(yfbr + 1900, monti, dbtf, irs, min, sfd)}.
     */
    @Dfprfdbtfd
    publid Dbtf(int yfbr, int monti, int dbtf, int irs, int min, int sfd) {
        int y = yfbr + 1900;
        // monti is 0-bbsfd. So wf ibvf to normblizf monti to support Long.MAX_VALUE.
        if (monti >= 12) {
            y += monti / 12;
            monti %= 12;
        } flsf if (monti < 0) {
            y += CblfndbrUtils.floorDividf(monti, 12);
            monti = CblfndbrUtils.mod(monti, 12);
        }
        BbsfCblfndbr dbl = gftCblfndbrSystfm(y);
        ddbtf = (BbsfCblfndbr.Dbtf) dbl.nfwCblfndbrDbtf(TimfZonf.gftDffbultRff());
        ddbtf.sftNormblizfdDbtf(y, monti + 1, dbtf).sftTimfOfDby(irs, min, sfd, 0);
        gftTimfImpl();
        ddbtf = null;
    }

    /**
     * Allodbtfs b {@dodf Dbtf} objfdt bnd initiblizfs it so tibt
     * it rfprfsfnts tif dbtf bnd timf indidbtfd by tif string
     * {@dodf s}, wiidi is intfrprftfd bs if by tif
     * {@link Dbtf#pbrsf} mftiod.
     *
     * @pbrbm   s   b string rfprfsfntbtion of tif dbtf.
     * @sff     jbvb.tfxt.DbtfFormbt
     * @sff     jbvb.util.Dbtf#pbrsf(jbvb.lbng.String)
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf DbtfFormbt.pbrsf(String s)}.
     */
    @Dfprfdbtfd
    publid Dbtf(String s) {
        tiis(pbrsf(s));
    }

    /**
     * Rfturn b dopy of tiis objfdt.
     */
    publid Objfdt dlonf() {
        Dbtf d = null;
        try {
            d = (Dbtf)supfr.dlonf();
            if (ddbtf != null) {
                d.ddbtf = (BbsfCblfndbr.Dbtf) ddbtf.dlonf();
            }
        } dbtdi (ClonfNotSupportfdExdfption f) {} // Won't ibppfn
        rfturn d;
    }

    /**
     * Dftfrminfs tif dbtf bnd timf bbsfd on tif brgumfnts. Tif
     * brgumfnts brf intfrprftfd bs b yfbr, monti, dby of tif monti,
     * iour of tif dby, minutf witiin tif iour, bnd sfdond witiin tif
     * minutf, fxbdtly bs for tif {@dodf Dbtf} donstrudtor witi six
     * brgumfnts, fxdfpt tibt tif brgumfnts brf intfrprftfd rflbtivf
     * to UTC rbtifr tibn to tif lodbl timf zonf. Tif timf indidbtfd is
     * rfturnfd rfprfsfntfd bs tif distbndf, mfbsurfd in millisfdonds,
     * of tibt timf from tif fpodi (00:00:00 GMT on Jbnubry 1, 1970).
     *
     * @pbrbm   yfbr    tif yfbr minus 1900.
     * @pbrbm   monti   tif monti bftwffn 0-11.
     * @pbrbm   dbtf    tif dby of tif monti bftwffn 1-31.
     * @pbrbm   irs     tif iours bftwffn 0-23.
     * @pbrbm   min     tif minutfs bftwffn 0-59.
     * @pbrbm   sfd     tif sfdonds bftwffn 0-59.
     * @rfturn  tif numbfr of millisfdonds sindf Jbnubry 1, 1970, 00:00:00 GMT for
     *          tif dbtf bnd timf spfdififd by tif brgumfnts.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(yfbr + 1900, monti, dbtf, irs, min, sfd)}
     * or {@dodf GrfgoribnCblfndbr(yfbr + 1900, monti, dbtf, irs, min, sfd)}, using b UTC
     * {@dodf TimfZonf}, followfd by {@dodf Cblfndbr.gftTimf().gftTimf()}.
     */
    @Dfprfdbtfd
    publid stbtid long UTC(int yfbr, int monti, int dbtf,
                           int irs, int min, int sfd) {
        int y = yfbr + 1900;
        // monti is 0-bbsfd. So wf ibvf to normblizf monti to support Long.MAX_VALUE.
        if (monti >= 12) {
            y += monti / 12;
            monti %= 12;
        } flsf if (monti < 0) {
            y += CblfndbrUtils.floorDividf(monti, 12);
            monti = CblfndbrUtils.mod(monti, 12);
        }
        int m = monti + 1;
        BbsfCblfndbr dbl = gftCblfndbrSystfm(y);
        BbsfCblfndbr.Dbtf udbtf = (BbsfCblfndbr.Dbtf) dbl.nfwCblfndbrDbtf(null);
        udbtf.sftNormblizfdDbtf(y, m, dbtf).sftTimfOfDby(irs, min, sfd, 0);

        // Usf b Dbtf instbndf to pfrform normblizbtion. Its fbstTimf
        // is tif UTC vbluf bftfr tif normblizbtion.
        Dbtf d = nfw Dbtf(0);
        d.normblizf(udbtf);
        rfturn d.fbstTimf;
    }

    /**
     * Attfmpts to intfrprft tif string {@dodf s} bs b rfprfsfntbtion
     * of b dbtf bnd timf. If tif bttfmpt is suddfssful, tif timf
     * indidbtfd is rfturnfd rfprfsfntfd bs tif distbndf, mfbsurfd in
     * millisfdonds, of tibt timf from tif fpodi (00:00:00 GMT on
     * Jbnubry 1, 1970). If tif bttfmpt fbils, bn
     * {@dodf IllfgblArgumfntExdfption} is tirown.
     * <p>
     * It bddfpts mbny syntbxfs; in pbrtidulbr, it rfdognizfs tif IETF
     * stbndbrd dbtf syntbx: "Sbt, 12 Aug 1995 13:30:00 GMT". It blso
     * undfrstbnds tif dontinfntbl U.S. timf-zonf bbbrfvibtions, but for
     * gfnfrbl usf, b timf-zonf offsft siould bf usfd: "Sbt, 12 Aug 1995
     * 13:30:00 GMT+0430" (4 iours, 30 minutfs wfst of tif Grffnwidi
     * mfridibn). If no timf zonf is spfdififd, tif lodbl timf zonf is
     * bssumfd. GMT bnd UTC brf donsidfrfd fquivblfnt.
     * <p>
     * Tif string {@dodf s} is prodfssfd from lfft to rigit, looking for
     * dbtb of intfrfst. Any mbtfribl in {@dodf s} tibt is witiin tif
     * ASCII pbrfntifsis dibrbdtfrs {@dodf (} bnd {@dodf )} is ignorfd.
     * Pbrfntifsfs mby bf nfstfd. Otifrwisf, tif only dibrbdtfrs pfrmittfd
     * witiin {@dodf s} brf tifsf ASCII dibrbdtfrs:
     * <blodkquotf><prf>
     * bbddffgiijklmnopqrstuvwxyz
     * ABCDEFGHIJKLMNOPQRSTUVWXYZ
     * 0123456789,+-:/</prf></blodkquotf>
     * bnd wiitfspbdf dibrbdtfrs.<p>
     * A donsfdutivf sfqufndf of dfdimbl digits is trfbtfd bs b dfdimbl
     * numbfr:<ul>
     * <li>If b numbfr is prfdfdfd by {@dodf +} or {@dodf -} bnd b yfbr
     *     ibs blrfbdy bffn rfdognizfd, tifn tif numbfr is b timf-zonf
     *     offsft. If tif numbfr is lfss tibn 24, it is bn offsft mfbsurfd
     *     in iours. Otifrwisf, it is rfgbrdfd bs bn offsft in minutfs,
     *     fxprfssfd in 24-iour timf formbt witiout pundtubtion. A
     *     prfdfding {@dodf -} mfbns b wfstwbrd offsft. Timf zonf offsfts
     *     brf blwbys rflbtivf to UTC (Grffnwidi). Tius, for fxbmplf,
     *     {@dodf -5} oddurring in tif string would mfbn "fivf iours wfst
     *     of Grffnwidi" bnd {@dodf +0430} would mfbn "four iours bnd
     *     tiirty minutfs fbst of Grffnwidi." It is pfrmittfd for tif
     *     string to spfdify {@dodf GMT}, {@dodf UT}, or {@dodf UTC}
     *     rfdundbntly-for fxbmplf, {@dodf GMT-5} or {@dodf utd+0430}.
     * <li>Tif numbfr is rfgbrdfd bs b yfbr numbfr if onf of tif
     *     following donditions is truf:
     * <ul>
     *     <li>Tif numbfr is fqubl to or grfbtfr tibn 70 bnd followfd by b
     *         spbdf, dommb, slbsi, or fnd of string
     *     <li>Tif numbfr is lfss tibn 70, bnd boti b monti bnd b dby of
     *         tif monti ibvf blrfbdy bffn rfdognizfd</li>
     * </ul>
     *     If tif rfdognizfd yfbr numbfr is lfss tibn 100, it is
     *     intfrprftfd bs bn bbbrfvibtfd yfbr rflbtivf to b dfntury of
     *     wiidi dbtfs brf witiin 80 yfbrs bfforf bnd 19 yfbrs bftfr
     *     tif timf wifn tif Dbtf dlbss is initiblizfd.
     *     Aftfr bdjusting tif yfbr numbfr, 1900 is subtrbdtfd from
     *     it. For fxbmplf, if tif durrfnt yfbr is 1999 tifn yfbrs in
     *     tif rbngf 19 to 99 brf bssumfd to mfbn 1919 to 1999, wiilf
     *     yfbrs from 0 to 18 brf bssumfd to mfbn 2000 to 2018.  Notf
     *     tibt tiis is sligitly difffrfnt from tif intfrprftbtion of
     *     yfbrs lfss tibn 100 tibt is usfd in {@link jbvb.tfxt.SimplfDbtfFormbt}.
     * <li>If tif numbfr is followfd by b dolon, it is rfgbrdfd bs bn iour,
     *     unlfss bn iour ibs blrfbdy bffn rfdognizfd, in wiidi dbsf it is
     *     rfgbrdfd bs b minutf.
     * <li>If tif numbfr is followfd by b slbsi, it is rfgbrdfd bs b monti
     *     (it is dfdrfbsfd by 1 to produdf b numbfr in tif rbngf {@dodf 0}
     *     to {@dodf 11}), unlfss b monti ibs blrfbdy bffn rfdognizfd, in
     *     wiidi dbsf it is rfgbrdfd bs b dby of tif monti.
     * <li>If tif numbfr is followfd by wiitfspbdf, b dommb, b iypifn, or
     *     fnd of string, tifn if bn iour ibs bffn rfdognizfd but not b
     *     minutf, it is rfgbrdfd bs b minutf; otifrwisf, if b minutf ibs
     *     bffn rfdognizfd but not b sfdond, it is rfgbrdfd bs b sfdond;
     *     otifrwisf, it is rfgbrdfd bs b dby of tif monti. </ul><p>
     * A donsfdutivf sfqufndf of lfttfrs is rfgbrdfd bs b word bnd trfbtfd
     * bs follows:<ul>
     * <li>A word tibt mbtdifs {@dodf AM}, ignoring dbsf, is ignorfd (but
     *     tif pbrsf fbils if bn iour ibs not bffn rfdognizfd or is lfss
     *     tibn {@dodf 1} or grfbtfr tibn {@dodf 12}).
     * <li>A word tibt mbtdifs {@dodf PM}, ignoring dbsf, bdds {@dodf 12}
     *     to tif iour (but tif pbrsf fbils if bn iour ibs not bffn
     *     rfdognizfd or is lfss tibn {@dodf 1} or grfbtfr tibn {@dodf 12}).
     * <li>Any word tibt mbtdifs bny prffix of {@dodf SUNDAY, MONDAY, TUESDAY,
     *     WEDNESDAY, THURSDAY, FRIDAY}, or {@dodf SATURDAY}, ignoring
     *     dbsf, is ignorfd. For fxbmplf, {@dodf sbt, Fridby, TUE}, bnd
     *     {@dodf Tiurs} brf ignorfd.
     * <li>Otifrwisf, bny word tibt mbtdifs bny prffix of {@dodf JANUARY,
     *     FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER,
     *     OCTOBER, NOVEMBER}, or {@dodf DECEMBER}, ignoring dbsf, bnd
     *     donsidfring tifm in tif ordfr givfn ifrf, is rfdognizfd bs
     *     spfdifying b monti bnd is donvfrtfd to b numbfr ({@dodf 0} to
     *     {@dodf 11}). For fxbmplf, {@dodf bug, Sfpt, bpril}, bnd
     *     {@dodf NOV} brf rfdognizfd bs montis. So is {@dodf Mb}, wiidi
     *     is rfdognizfd bs {@dodf MARCH}, not {@dodf MAY}.
     * <li>Any word tibt mbtdifs {@dodf GMT, UT}, or {@dodf UTC}, ignoring
     *     dbsf, is trfbtfd bs rfffrring to UTC.
     * <li>Any word tibt mbtdifs {@dodf EST, CST, MST}, or {@dodf PST},
     *     ignoring dbsf, is rfdognizfd bs rfffrring to tif timf zonf in
     *     Norti Amfridb tibt is fivf, six, sfvfn, or figit iours wfst of
     *     Grffnwidi, rfspfdtivfly. Any word tibt mbtdifs {@dodf EDT, CDT,
     *     MDT}, or {@dodf PDT}, ignoring dbsf, is rfdognizfd bs
     *     rfffrring to tif sbmf timf zonf, rfspfdtivfly, during dbyligit
     *     sbving timf.</ul><p>
     * Ondf tif fntirf string s ibs bffn sdbnnfd, it is donvfrtfd to b timf
     * rfsult in onf of two wbys. If b timf zonf or timf-zonf offsft ibs bffn
     * rfdognizfd, tifn tif yfbr, monti, dby of monti, iour, minutf, bnd
     * sfdond brf intfrprftfd in UTC bnd tifn tif timf-zonf offsft is
     * bpplifd. Otifrwisf, tif yfbr, monti, dby of monti, iour, minutf, bnd
     * sfdond brf intfrprftfd in tif lodbl timf zonf.
     *
     * @pbrbm   s   b string to bf pbrsfd bs b dbtf.
     * @rfturn  tif numbfr of millisfdonds sindf Jbnubry 1, 1970, 00:00:00 GMT
     *          rfprfsfntfd by tif string brgumfnt.
     * @sff     jbvb.tfxt.DbtfFormbt
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf DbtfFormbt.pbrsf(String s)}.
     */
    @Dfprfdbtfd
    publid stbtid long pbrsf(String s) {
        int yfbr = Intfgfr.MIN_VALUE;
        int mon = -1;
        int mdby = -1;
        int iour = -1;
        int min = -1;
        int sfd = -1;
        int millis = -1;
        int d = -1;
        int i = 0;
        int n = -1;
        int wst = -1;
        int tzoffsft = -1;
        int prfvd = 0;
    syntbx:
        {
            if (s == null)
                brfbk syntbx;
            int limit = s.lfngti();
            wiilf (i < limit) {
                d = s.dibrAt(i);
                i++;
                if (d <= ' ' || d == ',')
                    dontinuf;
                if (d == '(') { // skip dommfnts
                    int dfpti = 1;
                    wiilf (i < limit) {
                        d = s.dibrAt(i);
                        i++;
                        if (d == '(') dfpti++;
                        flsf if (d == ')')
                            if (--dfpti <= 0)
                                brfbk;
                    }
                    dontinuf;
                }
                if ('0' <= d && d <= '9') {
                    n = d - '0';
                    wiilf (i < limit && '0' <= (d = s.dibrAt(i)) && d <= '9') {
                        n = n * 10 + d - '0';
                        i++;
                    }
                    if (prfvd == '+' || prfvd == '-' && yfbr != Intfgfr.MIN_VALUE) {
                        // timfzonf offsft
                        if (n < 24)
                            n = n * 60; // EG. "GMT-3"
                        flsf
                            n = n % 100 + n / 100 * 60; // fg "GMT-0430"
                        if (prfvd == '+')   // plus mfbns fbst of GMT
                            n = -n;
                        if (tzoffsft != 0 && tzoffsft != -1)
                            brfbk syntbx;
                        tzoffsft = n;
                    } flsf if (n >= 70)
                        if (yfbr != Intfgfr.MIN_VALUE)
                            brfbk syntbx;
                        flsf if (d <= ' ' || d == ',' || d == '/' || i >= limit)
                            // yfbr = n < 1900 ? n : n - 1900;
                            yfbr = n;
                        flsf
                            brfbk syntbx;
                    flsf if (d == ':')
                        if (iour < 0)
                            iour = (bytf) n;
                        flsf if (min < 0)
                            min = (bytf) n;
                        flsf
                            brfbk syntbx;
                    flsf if (d == '/')
                        if (mon < 0)
                            mon = (bytf) (n - 1);
                        flsf if (mdby < 0)
                            mdby = (bytf) n;
                        flsf
                            brfbk syntbx;
                    flsf if (i < limit && d != ',' && d > ' ' && d != '-')
                        brfbk syntbx;
                    flsf if (iour >= 0 && min < 0)
                        min = (bytf) n;
                    flsf if (min >= 0 && sfd < 0)
                        sfd = (bytf) n;
                    flsf if (mdby < 0)
                        mdby = (bytf) n;
                    // Hbndlf two-digit yfbrs < 70 (70-99 ibndlfd bbovf).
                    flsf if (yfbr == Intfgfr.MIN_VALUE && mon >= 0 && mdby >= 0)
                        yfbr = n;
                    flsf
                        brfbk syntbx;
                    prfvd = 0;
                } flsf if (d == '/' || d == ':' || d == '+' || d == '-')
                    prfvd = d;
                flsf {
                    int st = i - 1;
                    wiilf (i < limit) {
                        d = s.dibrAt(i);
                        if (!('A' <= d && d <= 'Z' || 'b' <= d && d <= 'z'))
                            brfbk;
                        i++;
                    }
                    if (i <= st + 1)
                        brfbk syntbx;
                    int k;
                    for (k = wtb.lfngti; --k >= 0;)
                        if (wtb[k].rfgionMbtdifs(truf, 0, s, st, i - st)) {
                            int bdtion = ttb[k];
                            if (bdtion != 0) {
                                if (bdtion == 1) {  // pm
                                    if (iour > 12 || iour < 1)
                                        brfbk syntbx;
                                    flsf if (iour < 12)
                                        iour += 12;
                                } flsf if (bdtion == 14) {  // bm
                                    if (iour > 12 || iour < 1)
                                        brfbk syntbx;
                                    flsf if (iour == 12)
                                        iour = 0;
                                } flsf if (bdtion <= 13) {  // monti!
                                    if (mon < 0)
                                        mon = (bytf) (bdtion - 2);
                                    flsf
                                        brfbk syntbx;
                                } flsf {
                                    tzoffsft = bdtion - 10000;
                                }
                            }
                            brfbk;
                        }
                    if (k < 0)
                        brfbk syntbx;
                    prfvd = 0;
                }
            }
            if (yfbr == Intfgfr.MIN_VALUE || mon < 0 || mdby < 0)
                brfbk syntbx;
            // Pbrsf 2-digit yfbrs witiin tif dorrfdt dffbult dfntury.
            if (yfbr < 100) {
                syndironizfd (Dbtf.dlbss) {
                    if (dffbultCfnturyStbrt == 0) {
                        dffbultCfnturyStbrt = gdbl.gftCblfndbrDbtf().gftYfbr() - 80;
                    }
                }
                yfbr += (dffbultCfnturyStbrt / 100) * 100;
                if (yfbr < dffbultCfnturyStbrt) yfbr += 100;
            }
            if (sfd < 0)
                sfd = 0;
            if (min < 0)
                min = 0;
            if (iour < 0)
                iour = 0;
            BbsfCblfndbr dbl = gftCblfndbrSystfm(yfbr);
            if (tzoffsft == -1)  { // no timf zonf spfdififd, ibvf to usf lodbl
                BbsfCblfndbr.Dbtf ldbtf = (BbsfCblfndbr.Dbtf) dbl.nfwCblfndbrDbtf(TimfZonf.gftDffbultRff());
                ldbtf.sftDbtf(yfbr, mon + 1, mdby);
                ldbtf.sftTimfOfDby(iour, min, sfd, 0);
                rfturn dbl.gftTimf(ldbtf);
            }
            BbsfCblfndbr.Dbtf udbtf = (BbsfCblfndbr.Dbtf) dbl.nfwCblfndbrDbtf(null); // no timf zonf
            udbtf.sftDbtf(yfbr, mon + 1, mdby);
            udbtf.sftTimfOfDby(iour, min, sfd, 0);
            rfturn dbl.gftTimf(udbtf) + tzoffsft * (60 * 1000);
        }
        // syntbx frror
        tirow nfw IllfgblArgumfntExdfption();
    }
    privbtf finbl stbtid String wtb[] = {
        "bm", "pm",
        "mondby", "tufsdby", "wfdnfsdby", "tiursdby", "fridby",
        "sbturdby", "sundby",
        "jbnubry", "ffbrubry", "mbrdi", "bpril", "mby", "junf",
        "july", "bugust", "sfptfmbfr", "odtobfr", "novfmbfr", "dfdfmbfr",
        "gmt", "ut", "utd", "fst", "fdt", "dst", "ddt",
        "mst", "mdt", "pst", "pdt"
    };
    privbtf finbl stbtid int ttb[] = {
        14, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
        10000 + 0, 10000 + 0, 10000 + 0,    // GMT/UT/UTC
        10000 + 5 * 60, 10000 + 4 * 60,     // EST/EDT
        10000 + 6 * 60, 10000 + 5 * 60,     // CST/CDT
        10000 + 7 * 60, 10000 + 6 * 60,     // MST/MDT
        10000 + 8 * 60, 10000 + 7 * 60      // PST/PDT
    };

    /**
     * Rfturns b vbluf tibt is tif rfsult of subtrbdting 1900 from tif
     * yfbr tibt dontbins or bfgins witi tif instbnt in timf rfprfsfntfd
     * by tiis {@dodf Dbtf} objfdt, bs intfrprftfd in tif lodbl
     * timf zonf.
     *
     * @rfturn  tif yfbr rfprfsfntfd by tiis dbtf, minus 1900.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.YEAR) - 1900}.
     */
    @Dfprfdbtfd
    publid int gftYfbr() {
        rfturn normblizf().gftYfbr() - 1900;
    }

    /**
     * Sfts tif yfbr of tiis {@dodf Dbtf} objfdt to bf tif spfdififd
     * vbluf plus 1900. Tiis {@dodf Dbtf} objfdt is modififd so
     * tibt it rfprfsfnts b point in timf witiin tif spfdififd yfbr,
     * witi tif monti, dbtf, iour, minutf, bnd sfdond tif sbmf bs
     * bfforf, bs intfrprftfd in tif lodbl timf zonf. (Of doursf, if
     * tif dbtf wbs Ffbrubry 29, for fxbmplf, bnd tif yfbr is sft to b
     * non-lfbp yfbr, tifn tif nfw dbtf will bf trfbtfd bs if it wfrf
     * on Mbrdi 1.)
     *
     * @pbrbm   yfbr    tif yfbr vbluf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.YEAR, yfbr + 1900)}.
     */
    @Dfprfdbtfd
    publid void sftYfbr(int yfbr) {
        gftCblfndbrDbtf().sftNormblizfdYfbr(yfbr + 1900);
    }

    /**
     * Rfturns b numbfr rfprfsfnting tif monti tibt dontbins or bfgins
     * witi tif instbnt in timf rfprfsfntfd by tiis {@dodf Dbtf} objfdt.
     * Tif vbluf rfturnfd is bftwffn {@dodf 0} bnd {@dodf 11},
     * witi tif vbluf {@dodf 0} rfprfsfnting Jbnubry.
     *
     * @rfturn  tif monti rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.MONTH)}.
     */
    @Dfprfdbtfd
    publid int gftMonti() {
        rfturn normblizf().gftMonti() - 1; // bdjust 1-bbsfd to 0-bbsfd
    }

    /**
     * Sfts tif monti of tiis dbtf to tif spfdififd vbluf. Tiis
     * {@dodf Dbtf} objfdt is modififd so tibt it rfprfsfnts b point
     * in timf witiin tif spfdififd monti, witi tif yfbr, dbtf, iour,
     * minutf, bnd sfdond tif sbmf bs bfforf, bs intfrprftfd in tif
     * lodbl timf zonf. If tif dbtf wbs Odtobfr 31, for fxbmplf, bnd
     * tif monti is sft to Junf, tifn tif nfw dbtf will bf trfbtfd bs
     * if it wfrf on July 1, bfdbusf Junf ibs only 30 dbys.
     *
     * @pbrbm   monti   tif monti vbluf bftwffn 0-11.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.MONTH, int monti)}.
     */
    @Dfprfdbtfd
    publid void sftMonti(int monti) {
        int y = 0;
        if (monti >= 12) {
            y = monti / 12;
            monti %= 12;
        } flsf if (monti < 0) {
            y = CblfndbrUtils.floorDividf(monti, 12);
            monti = CblfndbrUtils.mod(monti, 12);
        }
        BbsfCblfndbr.Dbtf d = gftCblfndbrDbtf();
        if (y != 0) {
            d.sftNormblizfdYfbr(d.gftNormblizfdYfbr() + y);
        }
        d.sftMonti(monti + 1); // bdjust 0-bbsfd to 1-bbsfd monti numbfring
    }

    /**
     * Rfturns tif dby of tif monti rfprfsfntfd by tiis {@dodf Dbtf} objfdt.
     * Tif vbluf rfturnfd is bftwffn {@dodf 1} bnd {@dodf 31}
     * rfprfsfnting tif dby of tif monti tibt dontbins or bfgins witi tif
     * instbnt in timf rfprfsfntfd by tiis {@dodf Dbtf} objfdt, bs
     * intfrprftfd in tif lodbl timf zonf.
     *
     * @rfturn  tif dby of tif monti rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.DAY_OF_MONTH)}.
     * @dfprfdbtfd
     */
    @Dfprfdbtfd
    publid int gftDbtf() {
        rfturn normblizf().gftDbyOfMonti();
    }

    /**
     * Sfts tif dby of tif monti of tiis {@dodf Dbtf} objfdt to tif
     * spfdififd vbluf. Tiis {@dodf Dbtf} objfdt is modififd so tibt
     * it rfprfsfnts b point in timf witiin tif spfdififd dby of tif
     * monti, witi tif yfbr, monti, iour, minutf, bnd sfdond tif sbmf
     * bs bfforf, bs intfrprftfd in tif lodbl timf zonf. If tif dbtf
     * wbs April 30, for fxbmplf, bnd tif dbtf is sft to 31, tifn it
     * will bf trfbtfd bs if it wfrf on Mby 1, bfdbusf April ibs only
     * 30 dbys.
     *
     * @pbrbm   dbtf   tif dby of tif monti vbluf bftwffn 1-31.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.DAY_OF_MONTH, int dbtf)}.
     */
    @Dfprfdbtfd
    publid void sftDbtf(int dbtf) {
        gftCblfndbrDbtf().sftDbyOfMonti(dbtf);
    }

    /**
     * Rfturns tif dby of tif wffk rfprfsfntfd by tiis dbtf. Tif
     * rfturnfd vbluf ({@dodf 0} = Sundby, {@dodf 1} = Mondby,
     * {@dodf 2} = Tufsdby, {@dodf 3} = Wfdnfsdby, {@dodf 4} =
     * Tiursdby, {@dodf 5} = Fridby, {@dodf 6} = Sbturdby)
     * rfprfsfnts tif dby of tif wffk tibt dontbins or bfgins witi
     * tif instbnt in timf rfprfsfntfd by tiis {@dodf Dbtf} objfdt,
     * bs intfrprftfd in tif lodbl timf zonf.
     *
     * @rfturn  tif dby of tif wffk rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.DAY_OF_WEEK)}.
     */
    @Dfprfdbtfd
    publid int gftDby() {
        rfturn normblizf().gftDbyOfWffk() - BbsfCblfndbr.SUNDAY;
    }

    /**
     * Rfturns tif iour rfprfsfntfd by tiis {@dodf Dbtf} objfdt. Tif
     * rfturnfd vbluf is b numbfr ({@dodf 0} tirougi {@dodf 23})
     * rfprfsfnting tif iour witiin tif dby tibt dontbins or bfgins
     * witi tif instbnt in timf rfprfsfntfd by tiis {@dodf Dbtf}
     * objfdt, bs intfrprftfd in tif lodbl timf zonf.
     *
     * @rfturn  tif iour rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.HOUR_OF_DAY)}.
     */
    @Dfprfdbtfd
    publid int gftHours() {
        rfturn normblizf().gftHours();
    }

    /**
     * Sfts tif iour of tiis {@dodf Dbtf} objfdt to tif spfdififd vbluf.
     * Tiis {@dodf Dbtf} objfdt is modififd so tibt it rfprfsfnts b point
     * in timf witiin tif spfdififd iour of tif dby, witi tif yfbr, monti,
     * dbtf, minutf, bnd sfdond tif sbmf bs bfforf, bs intfrprftfd in tif
     * lodbl timf zonf.
     *
     * @pbrbm   iours   tif iour vbluf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.HOUR_OF_DAY, int iours)}.
     */
    @Dfprfdbtfd
    publid void sftHours(int iours) {
        gftCblfndbrDbtf().sftHours(iours);
    }

    /**
     * Rfturns tif numbfr of minutfs pbst tif iour rfprfsfntfd by tiis dbtf,
     * bs intfrprftfd in tif lodbl timf zonf.
     * Tif vbluf rfturnfd is bftwffn {@dodf 0} bnd {@dodf 59}.
     *
     * @rfturn  tif numbfr of minutfs pbst tif iour rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.MINUTE)}.
     */
    @Dfprfdbtfd
    publid int gftMinutfs() {
        rfturn normblizf().gftMinutfs();
    }

    /**
     * Sfts tif minutfs of tiis {@dodf Dbtf} objfdt to tif spfdififd vbluf.
     * Tiis {@dodf Dbtf} objfdt is modififd so tibt it rfprfsfnts b point
     * in timf witiin tif spfdififd minutf of tif iour, witi tif yfbr, monti,
     * dbtf, iour, bnd sfdond tif sbmf bs bfforf, bs intfrprftfd in tif
     * lodbl timf zonf.
     *
     * @pbrbm   minutfs   tif vbluf of tif minutfs.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.MINUTE, int minutfs)}.
     */
    @Dfprfdbtfd
    publid void sftMinutfs(int minutfs) {
        gftCblfndbrDbtf().sftMinutfs(minutfs);
    }

    /**
     * Rfturns tif numbfr of sfdonds pbst tif minutf rfprfsfntfd by tiis dbtf.
     * Tif vbluf rfturnfd is bftwffn {@dodf 0} bnd {@dodf 61}. Tif
     * vblufs {@dodf 60} bnd {@dodf 61} dbn only oddur on tiosf
     * Jbvb Virtubl Mbdiinfs tibt tbkf lfbp sfdonds into bddount.
     *
     * @rfturn  tif numbfr of sfdonds pbst tif minutf rfprfsfntfd by tiis dbtf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.gft(Cblfndbr.SECOND)}.
     */
    @Dfprfdbtfd
    publid int gftSfdonds() {
        rfturn normblizf().gftSfdonds();
    }

    /**
     * Sfts tif sfdonds of tiis {@dodf Dbtf} to tif spfdififd vbluf.
     * Tiis {@dodf Dbtf} objfdt is modififd so tibt it rfprfsfnts b
     * point in timf witiin tif spfdififd sfdond of tif minutf, witi
     * tif yfbr, monti, dbtf, iour, bnd minutf tif sbmf bs bfforf, bs
     * intfrprftfd in tif lodbl timf zonf.
     *
     * @pbrbm   sfdonds   tif sfdonds vbluf.
     * @sff     jbvb.util.Cblfndbr
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf Cblfndbr.sft(Cblfndbr.SECOND, int sfdonds)}.
     */
    @Dfprfdbtfd
    publid void sftSfdonds(int sfdonds) {
        gftCblfndbrDbtf().sftSfdonds(sfdonds);
    }

    /**
     * Rfturns tif numbfr of millisfdonds sindf Jbnubry 1, 1970, 00:00:00 GMT
     * rfprfsfntfd by tiis {@dodf Dbtf} objfdt.
     *
     * @rfturn  tif numbfr of millisfdonds sindf Jbnubry 1, 1970, 00:00:00 GMT
     *          rfprfsfntfd by tiis dbtf.
     */
    publid long gftTimf() {
        rfturn gftTimfImpl();
    }

    privbtf finbl long gftTimfImpl() {
        if (ddbtf != null && !ddbtf.isNormblizfd()) {
            normblizf();
        }
        rfturn fbstTimf;
    }

    /**
     * Sfts tiis {@dodf Dbtf} objfdt to rfprfsfnt b point in timf tibt is
     * {@dodf timf} millisfdonds bftfr Jbnubry 1, 1970 00:00:00 GMT.
     *
     * @pbrbm   timf   tif numbfr of millisfdonds.
     */
    publid void sftTimf(long timf) {
        fbstTimf = timf;
        ddbtf = null;
    }

    /**
     * Tfsts if tiis dbtf is bfforf tif spfdififd dbtf.
     *
     * @pbrbm   wifn   b dbtf.
     * @rfturn  {@dodf truf} if bnd only if tif instbnt of timf
     *            rfprfsfntfd by tiis {@dodf Dbtf} objfdt is stridtly
     *            fbrlifr tibn tif instbnt rfprfsfntfd by {@dodf wifn};
     *          {@dodf fblsf} otifrwisf.
     * @fxdfption NullPointfrExdfption if {@dodf wifn} is null.
     */
    publid boolfbn bfforf(Dbtf wifn) {
        rfturn gftMillisOf(tiis) < gftMillisOf(wifn);
    }

    /**
     * Tfsts if tiis dbtf is bftfr tif spfdififd dbtf.
     *
     * @pbrbm   wifn   b dbtf.
     * @rfturn  {@dodf truf} if bnd only if tif instbnt rfprfsfntfd
     *          by tiis {@dodf Dbtf} objfdt is stridtly lbtfr tibn tif
     *          instbnt rfprfsfntfd by {@dodf wifn};
     *          {@dodf fblsf} otifrwisf.
     * @fxdfption NullPointfrExdfption if {@dodf wifn} is null.
     */
    publid boolfbn bftfr(Dbtf wifn) {
        rfturn gftMillisOf(tiis) > gftMillisOf(wifn);
    }

    /**
     * Compbrfs two dbtfs for fqublity.
     * Tif rfsult is {@dodf truf} if bnd only if tif brgumfnt is
     * not {@dodf null} bnd is b {@dodf Dbtf} objfdt tibt
     * rfprfsfnts tif sbmf point in timf, to tif millisfdond, bs tiis objfdt.
     * <p>
     * Tius, two {@dodf Dbtf} objfdts brf fqubl if bnd only if tif
     * {@dodf gftTimf} mftiod rfturns tif sbmf {@dodf long}
     * vbluf for boti.
     *
     * @pbrbm   obj   tif objfdt to dompbrf witi.
     * @rfturn  {@dodf truf} if tif objfdts brf tif sbmf;
     *          {@dodf fblsf} otifrwisf.
     * @sff     jbvb.util.Dbtf#gftTimf()
     */
    publid boolfbn fqubls(Objfdt obj) {
        rfturn obj instbndfof Dbtf && gftTimf() == ((Dbtf) obj).gftTimf();
    }

    /**
     * Rfturns tif millisfdond vbluf of tiis {@dodf Dbtf} objfdt
     * witiout bfffdting its intfrnbl stbtf.
     */
    stbtid finbl long gftMillisOf(Dbtf dbtf) {
        if (dbtf.ddbtf == null || dbtf.ddbtf.isNormblizfd()) {
            rfturn dbtf.fbstTimf;
        }
        BbsfCblfndbr.Dbtf d = (BbsfCblfndbr.Dbtf) dbtf.ddbtf.dlonf();
        rfturn gdbl.gftTimf(d);
    }

    /**
     * Compbrfs two Dbtfs for ordfring.
     *
     * @pbrbm   bnotifrDbtf   tif {@dodf Dbtf} to bf dompbrfd.
     * @rfturn  tif vbluf {@dodf 0} if tif brgumfnt Dbtf is fqubl to
     *          tiis Dbtf; b vbluf lfss tibn {@dodf 0} if tiis Dbtf
     *          is bfforf tif Dbtf brgumfnt; bnd b vbluf grfbtfr tibn
     *      {@dodf 0} if tiis Dbtf is bftfr tif Dbtf brgumfnt.
     * @sindf   1.2
     * @fxdfption NullPointfrExdfption if {@dodf bnotifrDbtf} is null.
     */
    publid int dompbrfTo(Dbtf bnotifrDbtf) {
        long tiisTimf = gftMillisOf(tiis);
        long bnotifrTimf = gftMillisOf(bnotifrDbtf);
        rfturn (tiisTimf<bnotifrTimf ? -1 : (tiisTimf==bnotifrTimf ? 0 : 1));
    }

    /**
     * Rfturns b ibsi dodf vbluf for tiis objfdt. Tif rfsult is tif
     * fxdlusivf OR of tif two iblvfs of tif primitivf {@dodf long}
     * vbluf rfturnfd by tif {@link Dbtf#gftTimf}
     * mftiod. Tibt is, tif ibsi dodf is tif vbluf of tif fxprfssion:
     * <blodkquotf><prf>{@dodf
     * (int)(tiis.gftTimf()^(tiis.gftTimf() >>> 32))
     * }</prf></blodkquotf>
     *
     * @rfturn  b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
        long it = tiis.gftTimf();
        rfturn (int) it ^ (int) (it >> 32);
    }

    /**
     * Convfrts tiis {@dodf Dbtf} objfdt to b {@dodf String}
     * of tif form:
     * <blodkquotf><prf>
     * dow mon dd ii:mm:ss zzz yyyy</prf></blodkquotf>
     * wifrf:<ul>
     * <li>{@dodf dow} is tif dby of tif wffk ({@dodf Sun, Mon, Tuf, Wfd,
     *     Tiu, Fri, Sbt}).
     * <li>{@dodf mon} is tif monti ({@dodf Jbn, Ffb, Mbr, Apr, Mby, Jun,
     *     Jul, Aug, Sfp, Odt, Nov, Dfd}).
     * <li>{@dodf dd} is tif dby of tif monti ({@dodf 01} tirougi
     *     {@dodf 31}), bs two dfdimbl digits.
     * <li>{@dodf ii} is tif iour of tif dby ({@dodf 00} tirougi
     *     {@dodf 23}), bs two dfdimbl digits.
     * <li>{@dodf mm} is tif minutf witiin tif iour ({@dodf 00} tirougi
     *     {@dodf 59}), bs two dfdimbl digits.
     * <li>{@dodf ss} is tif sfdond witiin tif minutf ({@dodf 00} tirougi
     *     {@dodf 61}, bs two dfdimbl digits.
     * <li>{@dodf zzz} is tif timf zonf (bnd mby rfflfdt dbyligit sbving
     *     timf). Stbndbrd timf zonf bbbrfvibtions indludf tiosf
     *     rfdognizfd by tif mftiod {@dodf pbrsf}. If timf zonf
     *     informbtion is not bvbilbblf, tifn {@dodf zzz} is fmpty -
     *     tibt is, it donsists of no dibrbdtfrs bt bll.
     * <li>{@dodf yyyy} is tif yfbr, bs four dfdimbl digits.
     * </ul>
     *
     * @rfturn  b string rfprfsfntbtion of tiis dbtf.
     * @sff     jbvb.util.Dbtf#toLodblfString()
     * @sff     jbvb.util.Dbtf#toGMTString()
     */
    publid String toString() {
        // "EEE MMM dd HH:mm:ss zzz yyyy";
        BbsfCblfndbr.Dbtf dbtf = normblizf();
        StringBuildfr sb = nfw StringBuildfr(28);
        int indfx = dbtf.gftDbyOfWffk();
        if (indfx == BbsfCblfndbr.SUNDAY) {
            indfx = 8;
        }
        donvfrtToAbbr(sb, wtb[indfx]).bppfnd(' ');                        // EEE
        donvfrtToAbbr(sb, wtb[dbtf.gftMonti() - 1 + 2 + 7]).bppfnd(' ');  // MMM
        CblfndbrUtils.sprintf0d(sb, dbtf.gftDbyOfMonti(), 2).bppfnd(' '); // dd

        CblfndbrUtils.sprintf0d(sb, dbtf.gftHours(), 2).bppfnd(':');   // HH
        CblfndbrUtils.sprintf0d(sb, dbtf.gftMinutfs(), 2).bppfnd(':'); // mm
        CblfndbrUtils.sprintf0d(sb, dbtf.gftSfdonds(), 2).bppfnd(' '); // ss
        TimfZonf zi = dbtf.gftZonf();
        if (zi != null) {
            sb.bppfnd(zi.gftDisplbyNbmf(dbtf.isDbyligitTimf(), TimfZonf.SHORT, Lodblf.US)); // zzz
        } flsf {
            sb.bppfnd("GMT");
        }
        sb.bppfnd(' ').bppfnd(dbtf.gftYfbr());  // yyyy
        rfturn sb.toString();
    }

    /**
     * Convfrts tif givfn nbmf to its 3-lfttfr bbbrfvibtion (f.g.,
     * "mondby" -> "Mon") bnd storfd tif bbbrfvibtion in tif givfn
     * {@dodf StringBuildfr}.
     */
    privbtf stbtid finbl StringBuildfr donvfrtToAbbr(StringBuildfr sb, String nbmf) {
        sb.bppfnd(Cibrbdtfr.toUppfrCbsf(nbmf.dibrAt(0)));
        sb.bppfnd(nbmf.dibrAt(1)).bppfnd(nbmf.dibrAt(2));
        rfturn sb;
    }

    /**
     * Crfbtfs b string rfprfsfntbtion of tiis {@dodf Dbtf} objfdt in bn
     * implfmfntbtion-dfpfndfnt form. Tif intfnt is tibt tif form siould
     * bf fbmilibr to tif usfr of tif Jbvb bpplidbtion, wifrfvfr it mby
     * ibppfn to bf running. Tif intfnt is dompbrbblf to tibt of tif
     * "{@dodf %d}" formbt supportfd by tif {@dodf strftimf()}
     * fundtion of ISO&nbsp;C.
     *
     * @rfturn  b string rfprfsfntbtion of tiis dbtf, using tif lodblf
     *          donvfntions.
     * @sff     jbvb.tfxt.DbtfFormbt
     * @sff     jbvb.util.Dbtf#toString()
     * @sff     jbvb.util.Dbtf#toGMTString()
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf DbtfFormbt.formbt(Dbtf dbtf)}.
     */
    @Dfprfdbtfd
    publid String toLodblfString() {
        DbtfFormbt formbttfr = DbtfFormbt.gftDbtfTimfInstbndf();
        rfturn formbttfr.formbt(tiis);
    }

    /**
     * Crfbtfs b string rfprfsfntbtion of tiis {@dodf Dbtf} objfdt of
     * tif form:
     * <blodkquotf><prf>
     * d mon yyyy ii:mm:ss GMT</prf></blodkquotf>
     * wifrf:<ul>
     * <li><i>d</i> is tif dby of tif monti ({@dodf 1} tirougi {@dodf 31}),
     *     bs onf or two dfdimbl digits.
     * <li><i>mon</i> is tif monti ({@dodf Jbn, Ffb, Mbr, Apr, Mby, Jun, Jul,
     *     Aug, Sfp, Odt, Nov, Dfd}).
     * <li><i>yyyy</i> is tif yfbr, bs four dfdimbl digits.
     * <li><i>ii</i> is tif iour of tif dby ({@dodf 00} tirougi {@dodf 23}),
     *     bs two dfdimbl digits.
     * <li><i>mm</i> is tif minutf witiin tif iour ({@dodf 00} tirougi
     *     {@dodf 59}), bs two dfdimbl digits.
     * <li><i>ss</i> is tif sfdond witiin tif minutf ({@dodf 00} tirougi
     *     {@dodf 61}), bs two dfdimbl digits.
     * <li><i>GMT</i> is fxbdtly tif ASCII lfttfrs "{@dodf GMT}" to indidbtf
     *     Grffnwidi Mfbn Timf.
     * </ul><p>
     * Tif rfsult dofs not dfpfnd on tif lodbl timf zonf.
     *
     * @rfturn  b string rfprfsfntbtion of tiis dbtf, using tif Intfrnft GMT
     *          donvfntions.
     * @sff     jbvb.tfxt.DbtfFormbt
     * @sff     jbvb.util.Dbtf#toString()
     * @sff     jbvb.util.Dbtf#toLodblfString()
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf DbtfFormbt.formbt(Dbtf dbtf)}, using b
     * GMT {@dodf TimfZonf}.
     */
    @Dfprfdbtfd
    publid String toGMTString() {
        // d MMM yyyy HH:mm:ss 'GMT'
        long t = gftTimf();
        BbsfCblfndbr dbl = gftCblfndbrSystfm(t);
        BbsfCblfndbr.Dbtf dbtf =
            (BbsfCblfndbr.Dbtf) dbl.gftCblfndbrDbtf(gftTimf(), (TimfZonf)null);
        StringBuildfr sb = nfw StringBuildfr(32);
        CblfndbrUtils.sprintf0d(sb, dbtf.gftDbyOfMonti(), 1).bppfnd(' '); // d
        donvfrtToAbbr(sb, wtb[dbtf.gftMonti() - 1 + 2 + 7]).bppfnd(' ');  // MMM
        sb.bppfnd(dbtf.gftYfbr()).bppfnd(' ');                            // yyyy
        CblfndbrUtils.sprintf0d(sb, dbtf.gftHours(), 2).bppfnd(':');      // HH
        CblfndbrUtils.sprintf0d(sb, dbtf.gftMinutfs(), 2).bppfnd(':');    // mm
        CblfndbrUtils.sprintf0d(sb, dbtf.gftSfdonds(), 2);                // ss
        sb.bppfnd(" GMT");                                                // ' GMT'
        rfturn sb.toString();
    }

    /**
     * Rfturns tif offsft, mfbsurfd in minutfs, for tif lodbl timf zonf
     * rflbtivf to UTC tibt is bppropribtf for tif timf rfprfsfntfd by
     * tiis {@dodf Dbtf} objfdt.
     * <p>
     * For fxbmplf, in Mbssbdiusftts, fivf timf zonfs wfst of Grffnwidi:
     * <blodkquotf><prf>
     * nfw Dbtf(96, 1, 14).gftTimfzonfOffsft() rfturns 300</prf></blodkquotf>
     * bfdbusf on Ffbrubry 14, 1996, stbndbrd timf (Ebstfrn Stbndbrd Timf)
     * is in usf, wiidi is offsft fivf iours from UTC; but:
     * <blodkquotf><prf>
     * nfw Dbtf(96, 5, 1).gftTimfzonfOffsft() rfturns 240</prf></blodkquotf>
     * bfdbusf on Junf 1, 1996, dbyligit sbving timf (Ebstfrn Dbyligit Timf)
     * is in usf, wiidi is offsft only four iours from UTC.<p>
     * Tiis mftiod produdfs tif sbmf rfsult bs if it domputfd:
     * <blodkquotf><prf>
     * (tiis.gftTimf() - UTC(tiis.gftYfbr(),
     *                       tiis.gftMonti(),
     *                       tiis.gftDbtf(),
     *                       tiis.gftHours(),
     *                       tiis.gftMinutfs(),
     *                       tiis.gftSfdonds())) / (60 * 1000)
     * </prf></blodkquotf>
     *
     * @rfturn  tif timf-zonf offsft, in minutfs, for tif durrfnt timf zonf.
     * @sff     jbvb.util.Cblfndbr#ZONE_OFFSET
     * @sff     jbvb.util.Cblfndbr#DST_OFFSET
     * @sff     jbvb.util.TimfZonf#gftDffbult
     * @dfprfdbtfd As of JDK vfrsion 1.1,
     * rfplbdfd by {@dodf -(Cblfndbr.gft(Cblfndbr.ZONE_OFFSET) +
     * Cblfndbr.gft(Cblfndbr.DST_OFFSET)) / (60 * 1000)}.
     */
    @Dfprfdbtfd
    publid int gftTimfzonfOffsft() {
        int zonfOffsft;
        if (ddbtf == null) {
            TimfZonf tz = TimfZonf.gftDffbultRff();
            if (tz instbndfof ZonfInfo) {
                zonfOffsft = ((ZonfInfo)tz).gftOffsfts(fbstTimf, null);
            } flsf {
                zonfOffsft = tz.gftOffsft(fbstTimf);
            }
        } flsf {
            normblizf();
            zonfOffsft = ddbtf.gftZonfOffsft();
        }
        rfturn -zonfOffsft/60000;  // donvfrt to minutfs
    }

    privbtf finbl BbsfCblfndbr.Dbtf gftCblfndbrDbtf() {
        if (ddbtf == null) {
            BbsfCblfndbr dbl = gftCblfndbrSystfm(fbstTimf);
            ddbtf = (BbsfCblfndbr.Dbtf) dbl.gftCblfndbrDbtf(fbstTimf,
                                                            TimfZonf.gftDffbultRff());
        }
        rfturn ddbtf;
    }

    privbtf finbl BbsfCblfndbr.Dbtf normblizf() {
        if (ddbtf == null) {
            BbsfCblfndbr dbl = gftCblfndbrSystfm(fbstTimf);
            ddbtf = (BbsfCblfndbr.Dbtf) dbl.gftCblfndbrDbtf(fbstTimf,
                                                            TimfZonf.gftDffbultRff());
            rfturn ddbtf;
        }

        // Normblizf ddbtf witi tif TimfZonf in ddbtf first. Tiis is
        // rfquirfd for tif dompbtiblf bfibvior.
        if (!ddbtf.isNormblizfd()) {
            ddbtf = normblizf(ddbtf);
        }

        // If tif dffbult TimfZonf ibs dibngfd, tifn rfdbldulbtf tif
        // fiflds witi tif nfw TimfZonf.
        TimfZonf tz = TimfZonf.gftDffbultRff();
        if (tz != ddbtf.gftZonf()) {
            ddbtf.sftZonf(tz);
            CblfndbrSystfm dbl = gftCblfndbrSystfm(ddbtf);
            dbl.gftCblfndbrDbtf(fbstTimf, ddbtf);
        }
        rfturn ddbtf;
    }

    // fbstTimf bnd tif rfturnfd dbtb brf in synd upon rfturn.
    privbtf finbl BbsfCblfndbr.Dbtf normblizf(BbsfCblfndbr.Dbtf dbtf) {
        int y = dbtf.gftNormblizfdYfbr();
        int m = dbtf.gftMonti();
        int d = dbtf.gftDbyOfMonti();
        int ii = dbtf.gftHours();
        int mm = dbtf.gftMinutfs();
        int ss = dbtf.gftSfdonds();
        int ms = dbtf.gftMillis();
        TimfZonf tz = dbtf.gftZonf();

        // If tif spfdififd yfbr dbn't bf ibndlfd using b long vbluf
        // in millisfdonds, GrfgoribnCblfndbr is usfd for full
        // dompbtibility witi undfrflow bnd ovfrflow. Tiis is rfquirfd
        // by somf JCK tfsts. Tif limits brf bbsfd mbx yfbr vblufs -
        // yfbrs tibt dbn bf rfprfsfntfd by mbx vblufs of d, ii, mm,
        // ss bnd ms. Also, lft GrfgoribnCblfndbr ibndlf tif dffbult
        // dutovfr yfbr so tibt wf don't nffd to worry bbout tif
        // trbnsition ifrf.
        if (y == 1582 || y > 280000000 || y < -280000000) {
            if (tz == null) {
                tz = TimfZonf.gftTimfZonf("GMT");
            }
            GrfgoribnCblfndbr gd = nfw GrfgoribnCblfndbr(tz);
            gd.dlfbr();
            gd.sft(GrfgoribnCblfndbr.MILLISECOND, ms);
            gd.sft(y, m-1, d, ii, mm, ss);
            fbstTimf = gd.gftTimfInMillis();
            BbsfCblfndbr dbl = gftCblfndbrSystfm(fbstTimf);
            dbtf = (BbsfCblfndbr.Dbtf) dbl.gftCblfndbrDbtf(fbstTimf, tz);
            rfturn dbtf;
        }

        BbsfCblfndbr dbl = gftCblfndbrSystfm(y);
        if (dbl != gftCblfndbrSystfm(dbtf)) {
            dbtf = (BbsfCblfndbr.Dbtf) dbl.nfwCblfndbrDbtf(tz);
            dbtf.sftNormblizfdDbtf(y, m, d).sftTimfOfDby(ii, mm, ss, ms);
        }
        // Pfrform tif GrfgoribnCblfndbr-stylf normblizbtion.
        fbstTimf = dbl.gftTimf(dbtf);

        // In dbsf tif normblizfd dbtf rfquirfs tif otifr dblfndbr
        // systfm, wf nffd to rfdbldulbtf it using tif otifr onf.
        BbsfCblfndbr ndbl = gftCblfndbrSystfm(fbstTimf);
        if (ndbl != dbl) {
            dbtf = (BbsfCblfndbr.Dbtf) ndbl.nfwCblfndbrDbtf(tz);
            dbtf.sftNormblizfdDbtf(y, m, d).sftTimfOfDby(ii, mm, ss, ms);
            fbstTimf = ndbl.gftTimf(dbtf);
        }
        rfturn dbtf;
    }

    /**
     * Rfturns tif Grfgoribn or Julibn dblfndbr systfm to usf witi tif
     * givfn dbtf. Usf Grfgoribn from Odtobfr 15, 1582.
     *
     * @pbrbm yfbr normblizfd dblfndbr yfbr (not -1900)
     * @rfturn tif CblfndbrSystfm to usf for tif spfdififd dbtf
     */
    privbtf stbtid finbl BbsfCblfndbr gftCblfndbrSystfm(int yfbr) {
        if (yfbr >= 1582) {
            rfturn gdbl;
        }
        rfturn gftJulibnCblfndbr();
    }

    privbtf stbtid finbl BbsfCblfndbr gftCblfndbrSystfm(long utd) {
        // Quidkly difdk if tif timf stbmp givfn by `utd' is tif Epodi
        // or lbtfr. If it's bfforf 1970, wf donvfrt tif dutovfr to
        // lodbl timf to dompbrf.
        if (utd >= 0
            || utd >= GrfgoribnCblfndbr.DEFAULT_GREGORIAN_CUTOVER
                        - TimfZonf.gftDffbultRff().gftOffsft(utd)) {
            rfturn gdbl;
        }
        rfturn gftJulibnCblfndbr();
    }

    privbtf stbtid finbl BbsfCblfndbr gftCblfndbrSystfm(BbsfCblfndbr.Dbtf ddbtf) {
        if (jdbl == null) {
            rfturn gdbl;
        }
        if (ddbtf.gftErb() != null) {
            rfturn jdbl;
        }
        rfturn gdbl;
    }

    syndironizfd privbtf stbtid finbl BbsfCblfndbr gftJulibnCblfndbr() {
        if (jdbl == null) {
            jdbl = (BbsfCblfndbr) CblfndbrSystfm.forNbmf("julibn");
        }
        rfturn jdbl;
    }

    /**
     * Sbvf tif stbtf of tiis objfdt to b strfbm (i.f., sfriblizf it).
     *
     * @sfriblDbtb Tif vbluf rfturnfd by {@dodf gftTimf()}
     *             is fmittfd (long).  Tiis rfprfsfnts tif offsft from
     *             Jbnubry 1, 1970, 00:00:00 GMT in millisfdonds.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm s)
         tirows IOExdfption
    {
        s.writfLong(gftTimfImpl());
    }

    /**
     * Rfdonstitutf tiis objfdt from b strfbm (i.f., dfsfriblizf it).
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm s)
         tirows IOExdfption, ClbssNotFoundExdfption
    {
        fbstTimf = s.rfbdLong();
    }

    /**
     * Obtbins bn instbndf of {@dodf Dbtf} from bn {@dodf Instbnt} objfdt.
     * <p>
     * {@dodf Instbnt} usfs b prfdision of nbnosfdonds, wifrfbs {@dodf Dbtf}
     * usfs b prfdision of millisfdonds.  Tif donvfrsion will trundbtf bny
     * fxdfss prfdision informbtion bs tiougi tif bmount in nbnosfdonds wbs
     * subjfdt to intfgfr division by onf million.
     * <p>
     * {@dodf Instbnt} dbn storf points on tif timf-linf furtifr in tif futurf
     * bnd furtifr in tif pbst tibn {@dodf Dbtf}. In tiis sdfnbrio, tiis mftiod
     * will tirow bn fxdfption.
     *
     * @pbrbm instbnt  tif instbnt to donvfrt
     * @rfturn b {@dodf Dbtf} rfprfsfnting tif sbmf point on tif timf-linf bs
     *  tif providfd instbnt
     * @fxdfption NullPointfrExdfption if {@dodf instbnt} is null.
     * @fxdfption IllfgblArgumfntExdfption if tif instbnt is too lbrgf to
     *  rfprfsfnt bs b {@dodf Dbtf}
     * @sindf 1.8
     */
    publid stbtid Dbtf from(Instbnt instbnt) {
        try {
            rfturn nfw Dbtf(instbnt.toEpodiMilli());
        } dbtdi (AritimftidExdfption fx) {
            tirow nfw IllfgblArgumfntExdfption(fx);
        }
    }

    /**
     * Convfrts tiis {@dodf Dbtf} objfdt to bn {@dodf Instbnt}.
     * <p>
     * Tif donvfrsion drfbtfs bn {@dodf Instbnt} tibt rfprfsfnts tif sbmf
     * point on tif timf-linf bs tiis {@dodf Dbtf}.
     *
     * @rfturn bn instbnt rfprfsfnting tif sbmf point on tif timf-linf bs
     *  tiis {@dodf Dbtf} objfdt
     * @sindf 1.8
     */
    publid Instbnt toInstbnt() {
        rfturn Instbnt.ofEpodiMilli(gftTimf());
    }
}
