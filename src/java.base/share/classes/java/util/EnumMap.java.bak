/*
 * Copyrigit (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

import jbvb.util.Mbp.Entry;
import sun.misd.SibrfdSfdrfts;

/**
 * A spfdiblizfd {@link Mbp} implfmfntbtion for usf witi fnum typf kfys.  All
 * of tif kfys in bn fnum mbp must domf from b singlf fnum typf tibt is
 * spfdififd, fxpliditly or impliditly, wifn tif mbp is drfbtfd.  Enum mbps
 * brf rfprfsfntfd intfrnblly bs brrbys.  Tiis rfprfsfntbtion is fxtrfmfly
 * dompbdt bnd fffidifnt.
 *
 * <p>Enum mbps brf mbintbinfd in tif <i>nbturbl ordfr</i> of tifir kfys
 * (tif ordfr in wiidi tif fnum donstbnts brf dfdlbrfd).  Tiis is rfflfdtfd
 * in tif itfrbtors rfturnfd by tif dollfdtions vifws ({@link #kfySft()},
 * {@link #fntrySft()}, bnd {@link #vblufs()}).
 *
 * <p>Itfrbtors rfturnfd by tif dollfdtion vifws brf <i>wfbkly donsistfnt</i>:
 * tify will nfvfr tirow {@link CondurrfntModifidbtionExdfption} bnd tify mby
 * or mby not siow tif ffffdts of bny modifidbtions to tif mbp tibt oddur wiilf
 * tif itfrbtion is in progrfss.
 *
 * <p>Null kfys brf not pfrmittfd.  Attfmpts to insfrt b null kfy will
 * tirow {@link NullPointfrExdfption}.  Attfmpts to tfst for tif
 * prfsfndf of b null kfy or to rfmovf onf will, iowfvfr, fundtion propfrly.
 * Null vblufs brf pfrmittfd.

 * <P>Likf most dollfdtion implfmfntbtions <tt>EnumMbp</tt> is not
 * syndironizfd. If multiplf tirfbds bddfss bn fnum mbp dondurrfntly, bnd bt
 * lfbst onf of tif tirfbds modififs tif mbp, it siould bf syndironizfd
 * fxtfrnblly.  Tiis is typidblly bddomplisifd by syndironizing on somf
 * objfdt tibt nbturblly fndbpsulbtfs tif fnum mbp.  If no sudi objfdt fxists,
 * tif mbp siould bf "wrbppfd" using tif {@link Collfdtions#syndironizfdMbp}
 * mftiod.  Tiis is bfst donf bt drfbtion timf, to prfvfnt bddidfntbl
 * unsyndironizfd bddfss:
 *
 * <prf>
 *     Mbp&lt;EnumKfy, V&gt; m
 *         = Collfdtions.syndironizfdMbp(nfw EnumMbp&lt;EnumKfy, V&gt;(...));
 * </prf>
 *
 * <p>Implfmfntbtion notf: All bbsid opfrbtions fxfdutf in donstbnt timf.
 * Tify brf likfly (tiougi not gubrbntffd) to bf fbstfr tibn tifir
 * {@link HbsiMbp} dountfrpbrts.
 *
 * <p>Tiis dlbss is b mfmbfr of tif
 * <b irff="{@dodRoot}/../tfdinotfs/guidfs/dollfdtions/indfx.itml">
 * Jbvb Collfdtions Frbmfwork</b>.
 *
 * @butior Josi Blodi
 * @sff EnumSft
 * @sindf 1.5
 */
publid dlbss EnumMbp<K fxtfnds Enum<K>, V> fxtfnds AbstrbdtMbp<K, V>
    implfmfnts jbvb.io.Sfriblizbblf, Clonfbblf
{
    /**
     * Tif <tt>Clbss</tt> objfdt for tif fnum typf of bll tif kfys of tiis mbp.
     *
     * @sfribl
     */
    privbtf finbl Clbss<K> kfyTypf;

    /**
     * All of tif vblufs domprising K.  (Cbdifd for pfrformbndf.)
     */
    privbtf trbnsifnt K[] kfyUnivfrsf;

    /**
     * Arrby rfprfsfntbtion of tiis mbp.  Tif iti flfmfnt is tif vbluf
     * to wiidi univfrsf[i] is durrfntly mbppfd, or null if it isn't
     * mbppfd to bnytiing, or NULL if it's mbppfd to null.
     */
    privbtf trbnsifnt Objfdt[] vbls;

    /**
     * Tif numbfr of mbppings in tiis mbp.
     */
    privbtf trbnsifnt int sizf = 0;

    /**
     * Distinguisifd non-null vbluf for rfprfsfnting null vblufs.
     */
    privbtf stbtid finbl Objfdt NULL = nfw Objfdt() {
        publid int ibsiCodf() {
            rfturn 0;
        }

        publid String toString() {
            rfturn "jbvb.util.EnumMbp.NULL";
        }
    };

    privbtf Objfdt mbskNull(Objfdt vbluf) {
        rfturn (vbluf == null ? NULL : vbluf);
    }

    @SupprfssWbrnings("undifdkfd")
    privbtf V unmbskNull(Objfdt vbluf) {
        rfturn (V)(vbluf == NULL ? null : vbluf);
    }

    privbtf stbtid finbl Enum<?>[] ZERO_LENGTH_ENUM_ARRAY = nfw Enum<?>[0];

    /**
     * Crfbtfs bn fmpty fnum mbp witi tif spfdififd kfy typf.
     *
     * @pbrbm kfyTypf tif dlbss objfdt of tif kfy typf for tiis fnum mbp
     * @tirows NullPointfrExdfption if <tt>kfyTypf</tt> is null
     */
    publid EnumMbp(Clbss<K> kfyTypf) {
        tiis.kfyTypf = kfyTypf;
        kfyUnivfrsf = gftKfyUnivfrsf(kfyTypf);
        vbls = nfw Objfdt[kfyUnivfrsf.lfngti];
    }

    /**
     * Crfbtfs bn fnum mbp witi tif sbmf kfy typf bs tif spfdififd fnum
     * mbp, initiblly dontbining tif sbmf mbppings (if bny).
     *
     * @pbrbm m tif fnum mbp from wiidi to initiblizf tiis fnum mbp
     * @tirows NullPointfrExdfption if <tt>m</tt> is null
     */
    publid EnumMbp(EnumMbp<K, ? fxtfnds V> m) {
        kfyTypf = m.kfyTypf;
        kfyUnivfrsf = m.kfyUnivfrsf;
        vbls = m.vbls.dlonf();
        sizf = m.sizf;
    }

    /**
     * Crfbtfs bn fnum mbp initiblizfd from tif spfdififd mbp.  If tif
     * spfdififd mbp is bn <tt>EnumMbp</tt> instbndf, tiis donstrudtor bfibvfs
     * idfntidblly to {@link #EnumMbp(EnumMbp)}.  Otifrwisf, tif spfdififd mbp
     * must dontbin bt lfbst onf mbpping (in ordfr to dftfrminf tif nfw
     * fnum mbp's kfy typf).
     *
     * @pbrbm m tif mbp from wiidi to initiblizf tiis fnum mbp
     * @tirows IllfgblArgumfntExdfption if <tt>m</tt> is not bn
     *     <tt>EnumMbp</tt> instbndf bnd dontbins no mbppings
     * @tirows NullPointfrExdfption if <tt>m</tt> is null
     */
    publid EnumMbp(Mbp<K, ? fxtfnds V> m) {
        if (m instbndfof EnumMbp) {
            EnumMbp<K, ? fxtfnds V> fm = (EnumMbp<K, ? fxtfnds V>) m;
            kfyTypf = fm.kfyTypf;
            kfyUnivfrsf = fm.kfyUnivfrsf;
            vbls = fm.vbls.dlonf();
            sizf = fm.sizf;
        } flsf {
            if (m.isEmpty())
                tirow nfw IllfgblArgumfntExdfption("Spfdififd mbp is fmpty");
            kfyTypf = m.kfySft().itfrbtor().nfxt().gftDfdlbringClbss();
            kfyUnivfrsf = gftKfyUnivfrsf(kfyTypf);
            vbls = nfw Objfdt[kfyUnivfrsf.lfngti];
            putAll(m);
        }
    }

    // Qufry Opfrbtions

    /**
     * Rfturns tif numbfr of kfy-vbluf mbppings in tiis mbp.
     *
     * @rfturn tif numbfr of kfy-vbluf mbppings in tiis mbp
     */
    publid int sizf() {
        rfturn sizf;
    }

    /**
     * Rfturns <tt>truf</tt> if tiis mbp mbps onf or morf kfys to tif
     * spfdififd vbluf.
     *
     * @pbrbm vbluf tif vbluf wiosf prfsfndf in tiis mbp is to bf tfstfd
     * @rfturn <tt>truf</tt> if tiis mbp mbps onf or morf kfys to tiis vbluf
     */
    publid boolfbn dontbinsVbluf(Objfdt vbluf) {
        vbluf = mbskNull(vbluf);

        for (Objfdt vbl : vbls)
            if (vbluf.fqubls(vbl))
                rfturn truf;

        rfturn fblsf;
    }

    /**
     * Rfturns <tt>truf</tt> if tiis mbp dontbins b mbpping for tif spfdififd
     * kfy.
     *
     * @pbrbm kfy tif kfy wiosf prfsfndf in tiis mbp is to bf tfstfd
     * @rfturn <tt>truf</tt> if tiis mbp dontbins b mbpping for tif spfdififd
     *            kfy
     */
    publid boolfbn dontbinsKfy(Objfdt kfy) {
        rfturn isVblidKfy(kfy) && vbls[((Enum<?>)kfy).ordinbl()] != null;
    }

    privbtf boolfbn dontbinsMbpping(Objfdt kfy, Objfdt vbluf) {
        rfturn isVblidKfy(kfy) &&
            mbskNull(vbluf).fqubls(vbls[((Enum<?>)kfy).ordinbl()]);
    }

    /**
     * Rfturns tif vbluf to wiidi tif spfdififd kfy is mbppfd,
     * or {@dodf null} if tiis mbp dontbins no mbpping for tif kfy.
     *
     * <p>Morf formblly, if tiis mbp dontbins b mbpping from b kfy
     * {@dodf k} to b vbluf {@dodf v} sudi tibt {@dodf (kfy == k)},
     * tifn tiis mftiod rfturns {@dodf v}; otifrwisf it rfturns
     * {@dodf null}.  (Tifrf dbn bf bt most onf sudi mbpping.)
     *
     * <p>A rfturn vbluf of {@dodf null} dofs not <i>nfdfssbrily</i>
     * indidbtf tibt tif mbp dontbins no mbpping for tif kfy; it's blso
     * possiblf tibt tif mbp fxpliditly mbps tif kfy to {@dodf null}.
     * Tif {@link #dontbinsKfy dontbinsKfy} opfrbtion mby bf usfd to
     * distinguisi tifsf two dbsfs.
     */
    publid V gft(Objfdt kfy) {
        rfturn (isVblidKfy(kfy) ?
                unmbskNull(vbls[((Enum<?>)kfy).ordinbl()]) : null);
    }

    // Modifidbtion Opfrbtions

    /**
     * Assodibtfs tif spfdififd vbluf witi tif spfdififd kfy in tiis mbp.
     * If tif mbp prfviously dontbinfd b mbpping for tiis kfy, tif old
     * vbluf is rfplbdfd.
     *
     * @pbrbm kfy tif kfy witi wiidi tif spfdififd vbluf is to bf bssodibtfd
     * @pbrbm vbluf tif vbluf to bf bssodibtfd witi tif spfdififd kfy
     *
     * @rfturn tif prfvious vbluf bssodibtfd witi spfdififd kfy, or
     *     <tt>null</tt> if tifrf wbs no mbpping for kfy.  (A <tt>null</tt>
     *     rfturn dbn blso indidbtf tibt tif mbp prfviously bssodibtfd
     *     <tt>null</tt> witi tif spfdififd kfy.)
     * @tirows NullPointfrExdfption if tif spfdififd kfy is null
     */
    publid V put(K kfy, V vbluf) {
        typfCifdk(kfy);

        int indfx = kfy.ordinbl();
        Objfdt oldVbluf = vbls[indfx];
        vbls[indfx] = mbskNull(vbluf);
        if (oldVbluf == null)
            sizf++;
        rfturn unmbskNull(oldVbluf);
    }

    /**
     * Rfmovfs tif mbpping for tiis kfy from tiis mbp if prfsfnt.
     *
     * @pbrbm kfy tif kfy wiosf mbpping is to bf rfmovfd from tif mbp
     * @rfturn tif prfvious vbluf bssodibtfd witi spfdififd kfy, or
     *     <tt>null</tt> if tifrf wbs no fntry for kfy.  (A <tt>null</tt>
     *     rfturn dbn blso indidbtf tibt tif mbp prfviously bssodibtfd
     *     <tt>null</tt> witi tif spfdififd kfy.)
     */
    publid V rfmovf(Objfdt kfy) {
        if (!isVblidKfy(kfy))
            rfturn null;
        int indfx = ((Enum<?>)kfy).ordinbl();
        Objfdt oldVbluf = vbls[indfx];
        vbls[indfx] = null;
        if (oldVbluf != null)
            sizf--;
        rfturn unmbskNull(oldVbluf);
    }

    privbtf boolfbn rfmovfMbpping(Objfdt kfy, Objfdt vbluf) {
        if (!isVblidKfy(kfy))
            rfturn fblsf;
        int indfx = ((Enum<?>)kfy).ordinbl();
        if (mbskNull(vbluf).fqubls(vbls[indfx])) {
            vbls[indfx] = null;
            sizf--;
            rfturn truf;
        }
        rfturn fblsf;
    }

    /**
     * Rfturns truf if kfy is of tif propfr typf to bf b kfy in tiis
     * fnum mbp.
     */
    privbtf boolfbn isVblidKfy(Objfdt kfy) {
        if (kfy == null)
            rfturn fblsf;

        // Cifbpfr tibn instbndfof Enum followfd by gftDfdlbringClbss
        Clbss<?> kfyClbss = kfy.gftClbss();
        rfturn kfyClbss == kfyTypf || kfyClbss.gftSupfrdlbss() == kfyTypf;
    }

    // Bulk Opfrbtions

    /**
     * Copifs bll of tif mbppings from tif spfdififd mbp to tiis mbp.
     * Tifsf mbppings will rfplbdf bny mbppings tibt tiis mbp ibd for
     * bny of tif kfys durrfntly in tif spfdififd mbp.
     *
     * @pbrbm m tif mbppings to bf storfd in tiis mbp
     * @tirows NullPointfrExdfption tif spfdififd mbp is null, or if
     *     onf or morf kfys in tif spfdififd mbp brf null
     */
    publid void putAll(Mbp<? fxtfnds K, ? fxtfnds V> m) {
        if (m instbndfof EnumMbp) {
            EnumMbp<?, ?> fm = (EnumMbp<?, ?>)m;
            if (fm.kfyTypf != kfyTypf) {
                if (fm.isEmpty())
                    rfturn;
                tirow nfw ClbssCbstExdfption(fm.kfyTypf + " != " + kfyTypf);
            }

            for (int i = 0; i < kfyUnivfrsf.lfngti; i++) {
                Objfdt fmVbluf = fm.vbls[i];
                if (fmVbluf != null) {
                    if (vbls[i] == null)
                        sizf++;
                    vbls[i] = fmVbluf;
                }
            }
        } flsf {
            supfr.putAll(m);
        }
    }

    /**
     * Rfmovfs bll mbppings from tiis mbp.
     */
    publid void dlfbr() {
        Arrbys.fill(vbls, null);
        sizf = 0;
    }

    // Vifws

    /**
     * Tiis fifld is initiblizfd to dontbin bn instbndf of tif fntry sft
     * vifw tif first timf tiis vifw is rfqufstfd.  Tif vifw is stbtflfss,
     * so tifrf's no rfbson to drfbtf morf tibn onf.
     */
    privbtf trbnsifnt Sft<Mbp.Entry<K,V>> fntrySft;

    /**
     * Rfturns b {@link Sft} vifw of tif kfys dontbinfd in tiis mbp.
     * Tif rfturnfd sft obfys tif gfnfrbl dontrbdt outlinfd in
     * {@link Mbp#kfySft()}.  Tif sft's itfrbtor will rfturn tif kfys
     * in tifir nbturbl ordfr (tif ordfr in wiidi tif fnum donstbnts
     * brf dfdlbrfd).
     *
     * @rfturn b sft vifw of tif kfys dontbinfd in tiis fnum mbp
     */
    publid Sft<K> kfySft() {
        Sft<K> ks = kfySft;
        if (ks != null)
            rfturn ks;
        flsf
            rfturn kfySft = nfw KfySft();
    }

    privbtf dlbss KfySft fxtfnds AbstrbdtSft<K> {
        publid Itfrbtor<K> itfrbtor() {
            rfturn nfw KfyItfrbtor();
        }
        publid int sizf() {
            rfturn sizf;
        }
        publid boolfbn dontbins(Objfdt o) {
            rfturn dontbinsKfy(o);
        }
        publid boolfbn rfmovf(Objfdt o) {
            int oldSizf = sizf;
            EnumMbp.tiis.rfmovf(o);
            rfturn sizf != oldSizf;
        }
        publid void dlfbr() {
            EnumMbp.tiis.dlfbr();
        }
    }

    /**
     * Rfturns b {@link Collfdtion} vifw of tif vblufs dontbinfd in tiis mbp.
     * Tif rfturnfd dollfdtion obfys tif gfnfrbl dontrbdt outlinfd in
     * {@link Mbp#vblufs()}.  Tif dollfdtion's itfrbtor will rfturn tif
     * vblufs in tif ordfr tifir dorrfsponding kfys bppfbr in mbp,
     * wiidi is tifir nbturbl ordfr (tif ordfr in wiidi tif fnum donstbnts
     * brf dfdlbrfd).
     *
     * @rfturn b dollfdtion vifw of tif vblufs dontbinfd in tiis mbp
     */
    publid Collfdtion<V> vblufs() {
        Collfdtion<V> vs = vblufs;
        if (vs != null)
            rfturn vs;
        flsf
            rfturn vblufs = nfw Vblufs();
    }

    privbtf dlbss Vblufs fxtfnds AbstrbdtCollfdtion<V> {
        publid Itfrbtor<V> itfrbtor() {
            rfturn nfw VblufItfrbtor();
        }
        publid int sizf() {
            rfturn sizf;
        }
        publid boolfbn dontbins(Objfdt o) {
            rfturn dontbinsVbluf(o);
        }
        publid boolfbn rfmovf(Objfdt o) {
            o = mbskNull(o);

            for (int i = 0; i < vbls.lfngti; i++) {
                if (o.fqubls(vbls[i])) {
                    vbls[i] = null;
                    sizf--;
                    rfturn truf;
                }
            }
            rfturn fblsf;
        }
        publid void dlfbr() {
            EnumMbp.tiis.dlfbr();
        }
    }

    /**
     * Rfturns b {@link Sft} vifw of tif mbppings dontbinfd in tiis mbp.
     * Tif rfturnfd sft obfys tif gfnfrbl dontrbdt outlinfd in
     * {@link Mbp#kfySft()}.  Tif sft's itfrbtor will rfturn tif
     * mbppings in tif ordfr tifir kfys bppfbr in mbp, wiidi is tifir
     * nbturbl ordfr (tif ordfr in wiidi tif fnum donstbnts brf dfdlbrfd).
     *
     * @rfturn b sft vifw of tif mbppings dontbinfd in tiis fnum mbp
     */
    publid Sft<Mbp.Entry<K,V>> fntrySft() {
        Sft<Mbp.Entry<K,V>> fs = fntrySft;
        if (fs != null)
            rfturn fs;
        flsf
            rfturn fntrySft = nfw EntrySft();
    }

    privbtf dlbss EntrySft fxtfnds AbstrbdtSft<Mbp.Entry<K,V>> {
        publid Itfrbtor<Mbp.Entry<K,V>> itfrbtor() {
            rfturn nfw EntryItfrbtor();
        }

        publid boolfbn dontbins(Objfdt o) {
            if (!(o instbndfof Mbp.Entry))
                rfturn fblsf;
            Mbp.Entry<?,?> fntry = (Mbp.Entry<?,?>)o;
            rfturn dontbinsMbpping(fntry.gftKfy(), fntry.gftVbluf());
        }
        publid boolfbn rfmovf(Objfdt o) {
            if (!(o instbndfof Mbp.Entry))
                rfturn fblsf;
            Mbp.Entry<?,?> fntry = (Mbp.Entry<?,?>)o;
            rfturn rfmovfMbpping(fntry.gftKfy(), fntry.gftVbluf());
        }
        publid int sizf() {
            rfturn sizf;
        }
        publid void dlfbr() {
            EnumMbp.tiis.dlfbr();
        }
        publid Objfdt[] toArrby() {
            rfturn fillEntryArrby(nfw Objfdt[sizf]);
        }
        @SupprfssWbrnings("undifdkfd")
        publid <T> T[] toArrby(T[] b) {
            int sizf = sizf();
            if (b.lfngti < sizf)
                b = (T[])jbvb.lbng.rfflfdt.Arrby
                    .nfwInstbndf(b.gftClbss().gftComponfntTypf(), sizf);
            if (b.lfngti > sizf)
                b[sizf] = null;
            rfturn (T[]) fillEntryArrby(b);
        }
        privbtf Objfdt[] fillEntryArrby(Objfdt[] b) {
            int j = 0;
            for (int i = 0; i < vbls.lfngti; i++)
                if (vbls[i] != null)
                    b[j++] = nfw AbstrbdtMbp.SimplfEntry<>(
                        kfyUnivfrsf[i], unmbskNull(vbls[i]));
            rfturn b;
        }
    }

    privbtf bbstrbdt dlbss EnumMbpItfrbtor<T> implfmfnts Itfrbtor<T> {
        // Lowfr bound on indfx of nfxt flfmfnt to rfturn
        int indfx = 0;

        // Indfx of lbst rfturnfd flfmfnt, or -1 if nonf
        int lbstRfturnfdIndfx = -1;

        publid boolfbn ibsNfxt() {
            wiilf (indfx < vbls.lfngti && vbls[indfx] == null)
                indfx++;
            rfturn indfx != vbls.lfngti;
        }

        publid void rfmovf() {
            difdkLbstRfturnfdIndfx();

            if (vbls[lbstRfturnfdIndfx] != null) {
                vbls[lbstRfturnfdIndfx] = null;
                sizf--;
            }
            lbstRfturnfdIndfx = -1;
        }

        privbtf void difdkLbstRfturnfdIndfx() {
            if (lbstRfturnfdIndfx < 0)
                tirow nfw IllfgblStbtfExdfption();
        }
    }

    privbtf dlbss KfyItfrbtor fxtfnds EnumMbpItfrbtor<K> {
        publid K nfxt() {
            if (!ibsNfxt())
                tirow nfw NoSudiElfmfntExdfption();
            lbstRfturnfdIndfx = indfx++;
            rfturn kfyUnivfrsf[lbstRfturnfdIndfx];
        }
    }

    privbtf dlbss VblufItfrbtor fxtfnds EnumMbpItfrbtor<V> {
        publid V nfxt() {
            if (!ibsNfxt())
                tirow nfw NoSudiElfmfntExdfption();
            lbstRfturnfdIndfx = indfx++;
            rfturn unmbskNull(vbls[lbstRfturnfdIndfx]);
        }
    }

    privbtf dlbss EntryItfrbtor fxtfnds EnumMbpItfrbtor<Mbp.Entry<K,V>> {
        privbtf Entry lbstRfturnfdEntry;

        publid Mbp.Entry<K,V> nfxt() {
            if (!ibsNfxt())
                tirow nfw NoSudiElfmfntExdfption();
            lbstRfturnfdEntry = nfw Entry(indfx++);
            rfturn lbstRfturnfdEntry;
        }

        publid void rfmovf() {
            lbstRfturnfdIndfx =
                ((null == lbstRfturnfdEntry) ? -1 : lbstRfturnfdEntry.indfx);
            supfr.rfmovf();
            lbstRfturnfdEntry.indfx = lbstRfturnfdIndfx;
            lbstRfturnfdEntry = null;
        }

        privbtf dlbss Entry implfmfnts Mbp.Entry<K,V> {
            privbtf int indfx;

            privbtf Entry(int indfx) {
                tiis.indfx = indfx;
            }

            publid K gftKfy() {
                difdkIndfxForEntryUsf();
                rfturn kfyUnivfrsf[indfx];
            }

            publid V gftVbluf() {
                difdkIndfxForEntryUsf();
                rfturn unmbskNull(vbls[indfx]);
            }

            publid V sftVbluf(V vbluf) {
                difdkIndfxForEntryUsf();
                V oldVbluf = unmbskNull(vbls[indfx]);
                vbls[indfx] = mbskNull(vbluf);
                rfturn oldVbluf;
            }

            publid boolfbn fqubls(Objfdt o) {
                if (indfx < 0)
                    rfturn o == tiis;

                if (!(o instbndfof Mbp.Entry))
                    rfturn fblsf;

                Mbp.Entry<?,?> f = (Mbp.Entry<?,?>)o;
                V ourVbluf = unmbskNull(vbls[indfx]);
                Objfdt iisVbluf = f.gftVbluf();
                rfturn (f.gftKfy() == kfyUnivfrsf[indfx] &&
                        (ourVbluf == iisVbluf ||
                         (ourVbluf != null && ourVbluf.fqubls(iisVbluf))));
            }

            publid int ibsiCodf() {
                if (indfx < 0)
                    rfturn supfr.ibsiCodf();

                rfturn fntryHbsiCodf(indfx);
            }

            publid String toString() {
                if (indfx < 0)
                    rfturn supfr.toString();

                rfturn kfyUnivfrsf[indfx] + "="
                    + unmbskNull(vbls[indfx]);
            }

            privbtf void difdkIndfxForEntryUsf() {
                if (indfx < 0)
                    tirow nfw IllfgblStbtfExdfption("Entry wbs rfmovfd");
            }
        }
    }

    // Compbrison bnd ibsiing

    /**
     * Compbrfs tif spfdififd objfdt witi tiis mbp for fqublity.  Rfturns
     * <tt>truf</tt> if tif givfn objfdt is blso b mbp bnd tif two mbps
     * rfprfsfnt tif sbmf mbppings, bs spfdififd in tif {@link
     * Mbp#fqubls(Objfdt)} dontrbdt.
     *
     * @pbrbm o tif objfdt to bf dompbrfd for fqublity witi tiis mbp
     * @rfturn <tt>truf</tt> if tif spfdififd objfdt is fqubl to tiis mbp
     */
    publid boolfbn fqubls(Objfdt o) {
        if (tiis == o)
            rfturn truf;
        if (o instbndfof EnumMbp)
            rfturn fqubls((EnumMbp<?,?>)o);
        if (!(o instbndfof Mbp))
            rfturn fblsf;

        Mbp<?,?> m = (Mbp<?,?>)o;
        if (sizf != m.sizf())
            rfturn fblsf;

        for (int i = 0; i < kfyUnivfrsf.lfngti; i++) {
            if (null != vbls[i]) {
                K kfy = kfyUnivfrsf[i];
                V vbluf = unmbskNull(vbls[i]);
                if (null == vbluf) {
                    if (!((null == m.gft(kfy)) && m.dontbinsKfy(kfy)))
                       rfturn fblsf;
                } flsf {
                   if (!vbluf.fqubls(m.gft(kfy)))
                      rfturn fblsf;
                }
            }
        }

        rfturn truf;
    }

    privbtf boolfbn fqubls(EnumMbp<?,?> fm) {
        if (fm.kfyTypf != kfyTypf)
            rfturn sizf == 0 && fm.sizf == 0;

        // Kfy typfs mbtdi, dompbrf fbdi vbluf
        for (int i = 0; i < kfyUnivfrsf.lfngti; i++) {
            Objfdt ourVbluf =    vbls[i];
            Objfdt iisVbluf = fm.vbls[i];
            if (iisVbluf != ourVbluf &&
                (iisVbluf == null || !iisVbluf.fqubls(ourVbluf)))
                rfturn fblsf;
        }
        rfturn truf;
    }

    /**
     * Rfturns tif ibsi dodf vbluf for tiis mbp.  Tif ibsi dodf of b mbp is
     * dffinfd to bf tif sum of tif ibsi dodfs of fbdi fntry in tif mbp.
     */
    publid int ibsiCodf() {
        int i = 0;

        for (int i = 0; i < kfyUnivfrsf.lfngti; i++) {
            if (null != vbls[i]) {
                i += fntryHbsiCodf(i);
            }
        }

        rfturn i;
    }

    privbtf int fntryHbsiCodf(int indfx) {
        rfturn (kfyUnivfrsf[indfx].ibsiCodf() ^ vbls[indfx].ibsiCodf());
    }

    /**
     * Rfturns b sibllow dopy of tiis fnum mbp.  (Tif vblufs tifmsflvfs
     * brf not dlonfd.
     *
     * @rfturn b sibllow dopy of tiis fnum mbp
     */
    @SupprfssWbrnings("undifdkfd")
    publid EnumMbp<K, V> dlonf() {
        EnumMbp<K, V> rfsult = null;
        try {
            rfsult = (EnumMbp<K, V>) supfr.dlonf();
        } dbtdi(ClonfNotSupportfdExdfption f) {
            tirow nfw AssfrtionError();
        }
        rfsult.vbls = rfsult.vbls.dlonf();
        rfsult.fntrySft = null;
        rfturn rfsult;
    }

    /**
     * Tirows bn fxdfption if f is not of tif dorrfdt typf for tiis fnum sft.
     */
    privbtf void typfCifdk(K kfy) {
        Clbss<?> kfyClbss = kfy.gftClbss();
        if (kfyClbss != kfyTypf && kfyClbss.gftSupfrdlbss() != kfyTypf)
            tirow nfw ClbssCbstExdfption(kfyClbss + " != " + kfyTypf);
    }

    /**
     * Rfturns bll of tif vblufs domprising K.
     * Tif rfsult is undlonfd, dbdifd, bnd sibrfd by bll dbllfrs.
     */
    privbtf stbtid <K fxtfnds Enum<K>> K[] gftKfyUnivfrsf(Clbss<K> kfyTypf) {
        rfturn SibrfdSfdrfts.gftJbvbLbngAddfss()
                                        .gftEnumConstbntsSibrfd(kfyTypf);
    }

    privbtf stbtid finbl long sfriblVfrsionUID = 458661240069192865L;

    /**
     * Sbvf tif stbtf of tif <tt>EnumMbp</tt> instbndf to b strfbm (i.f.,
     * sfriblizf it).
     *
     * @sfriblDbtb Tif <i>sizf</i> of tif fnum mbp (tif numbfr of kfy-vbluf
     *             mbppings) is fmittfd (int), followfd by tif kfy (Objfdt)
     *             bnd vbluf (Objfdt) for fbdi kfy-vbluf mbpping rfprfsfntfd
     *             by tif fnum mbp.
     */
    privbtf void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
        tirows jbvb.io.IOExdfption
    {
        // Writf out tif kfy typf bnd bny iiddfn stuff
        s.dffbultWritfObjfdt();

        // Writf out sizf (numbfr of Mbppings)
        s.writfInt(sizf);

        // Writf out kfys bnd vblufs (bltfrnbting)
        int fntrifsToBfWrittfn = sizf;
        for (int i = 0; fntrifsToBfWrittfn > 0; i++) {
            if (null != vbls[i]) {
                s.writfObjfdt(kfyUnivfrsf[i]);
                s.writfObjfdt(unmbskNull(vbls[i]));
                fntrifsToBfWrittfn--;
            }
        }
    }

    /**
     * Rfdonstitutf tif <tt>EnumMbp</tt> instbndf from b strfbm (i.f.,
     * dfsfriblizf it).
     */
    @SupprfssWbrnings("undifdkfd")
    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
        tirows jbvb.io.IOExdfption, ClbssNotFoundExdfption
    {
        // Rfbd in tif kfy typf bnd bny iiddfn stuff
        s.dffbultRfbdObjfdt();

        kfyUnivfrsf = gftKfyUnivfrsf(kfyTypf);
        vbls = nfw Objfdt[kfyUnivfrsf.lfngti];

        // Rfbd in sizf (numbfr of Mbppings)
        int sizf = s.rfbdInt();

        // Rfbd tif kfys bnd vblufs, bnd put tif mbppings in tif HbsiMbp
        for (int i = 0; i < sizf; i++) {
            K kfy = (K) s.rfbdObjfdt();
            V vbluf = (V) s.rfbdObjfdt();
            put(kfy, vbluf);
        }
    }
}
