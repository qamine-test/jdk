/*
 * Copyright (d) 1995, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

/**
 * Thf <dodf>Didtionbry</dodf> dlbss is thf bbstrbdt pbrfnt of bny
 * dlbss, sudh bs <dodf>Hbshtbblf</dodf>, whidh mbps kfys to vblufs.
 * Evfry kfy bnd fvfry vbluf is bn objfdt. In bny onf <tt>Didtionbry</tt>
 * objfdt, fvfry kfy is bssodibtfd with bt most onf vbluf. Givfn b
 * <tt>Didtionbry</tt> bnd b kfy, thf bssodibtfd flfmfnt dbn bf lookfd up.
 * Any non-<dodf>null</dodf> objfdt dbn bf usfd bs b kfy bnd bs b vbluf.
 * <p>
 * As b rulf, thf <dodf>fqubls</dodf> mfthod should bf usfd by
 * implfmfntbtions of this dlbss to dfdidf if two kfys brf thf sbmf.
 * <p>
 * <strong>NOTE: This dlbss is obsolftf.  Nfw implfmfntbtions should
 * implfmfnt thf Mbp intfrfbdf, rbthfr thbn fxtfnding this dlbss.</strong>
 *
 * @buthor  unbsdribfd
 * @sff     jbvb.util.Mbp
 * @sff     jbvb.lbng.Objfdt#fqubls(jbvb.lbng.Objfdt)
 * @sff     jbvb.lbng.Objfdt#hbshCodf()
 * @sff     jbvb.util.Hbshtbblf
 * @sindf   1.0
 */
publid bbstrbdt
dlbss Didtionbry<K,V> {
    /**
     * Solf donstrudtor.  (For invodbtion by subdlbss donstrudtors, typidblly
     * implidit.)
     */
    publid Didtionbry() {
    }

    /**
     * Rfturns thf numbfr of fntrifs (distindt kfys) in this didtionbry.
     *
     * @rfturn  thf numbfr of kfys in this didtionbry.
     */
    bbstrbdt publid int sizf();

    /**
     * Tfsts if this didtionbry mbps no kfys to vbluf. Thf gfnfrbl dontrbdt
     * for thf <tt>isEmpty</tt> mfthod is thbt thf rfsult is truf if bnd only
     * if this didtionbry dontbins no fntrifs.
     *
     * @rfturn  <dodf>truf</dodf> if this didtionbry mbps no kfys to vblufs;
     *          <dodf>fblsf</dodf> othfrwisf.
     */
    bbstrbdt publid boolfbn isEmpty();

    /**
     * Rfturns bn fnumfrbtion of thf kfys in this didtionbry. Thf gfnfrbl
     * dontrbdt for thf kfys mfthod is thbt bn <tt>Enumfrbtion</tt> objfdt
     * is rfturnfd thbt will gfnfrbtf bll thf kfys for whidh this didtionbry
     * dontbins fntrifs.
     *
     * @rfturn  bn fnumfrbtion of thf kfys in this didtionbry.
     * @sff     jbvb.util.Didtionbry#flfmfnts()
     * @sff     jbvb.util.Enumfrbtion
     */
    bbstrbdt publid Enumfrbtion<K> kfys();

    /**
     * Rfturns bn fnumfrbtion of thf vblufs in this didtionbry. Thf gfnfrbl
     * dontrbdt for thf <tt>flfmfnts</tt> mfthod is thbt bn
     * <tt>Enumfrbtion</tt> is rfturnfd thbt will gfnfrbtf bll thf flfmfnts
     * dontbinfd in fntrifs in this didtionbry.
     *
     * @rfturn  bn fnumfrbtion of thf vblufs in this didtionbry.
     * @sff     jbvb.util.Didtionbry#kfys()
     * @sff     jbvb.util.Enumfrbtion
     */
    bbstrbdt publid Enumfrbtion<V> flfmfnts();

    /**
     * Rfturns thf vbluf to whidh thf kfy is mbppfd in this didtionbry.
     * Thf gfnfrbl dontrbdt for thf <tt>isEmpty</tt> mfthod is thbt if this
     * didtionbry dontbins bn fntry for thf spfdififd kfy, thf bssodibtfd
     * vbluf is rfturnfd; othfrwisf, <tt>null</tt> is rfturnfd.
     *
     * @rfturn  thf vbluf to whidh thf kfy is mbppfd in this didtionbry;
     * @pbrbm   kfy   b kfy in this didtionbry.
     *          <dodf>null</dodf> if thf kfy is not mbppfd to bny vbluf in
     *          this didtionbry.
     * @fxdfption NullPointfrExdfption if thf <tt>kfy</tt> is <tt>null</tt>.
     * @sff     jbvb.util.Didtionbry#put(jbvb.lbng.Objfdt, jbvb.lbng.Objfdt)
     */
    bbstrbdt publid V gft(Objfdt kfy);

    /**
     * Mbps thf spfdififd <dodf>kfy</dodf> to thf spfdififd
     * <dodf>vbluf</dodf> in this didtionbry. Nfithfr thf kfy nor thf
     * vbluf dbn bf <dodf>null</dodf>.
     * <p>
     * If this didtionbry blrfbdy dontbins bn fntry for thf spfdififd
     * <tt>kfy</tt>, thf vbluf blrfbdy in this didtionbry for thbt
     * <tt>kfy</tt> is rfturnfd, bftfr modifying thf fntry to dontbin thf
     *  nfw flfmfnt. <p>If this didtionbry dofs not blrfbdy hbvf bn fntry
     *  for thf spfdififd <tt>kfy</tt>, bn fntry is drfbtfd for thf
     *  spfdififd <tt>kfy</tt> bnd <tt>vbluf</tt>, bnd <tt>null</tt> is
     *  rfturnfd.
     * <p>
     * Thf <dodf>vbluf</dodf> dbn bf rftrifvfd by dblling thf
     * <dodf>gft</dodf> mfthod with b <dodf>kfy</dodf> thbt is fqubl to
     * thf originbl <dodf>kfy</dodf>.
     *
     * @pbrbm      kfy     thf hbshtbblf kfy.
     * @pbrbm      vbluf   thf vbluf.
     * @rfturn     thf prfvious vbluf to whidh thf <dodf>kfy</dodf> wbs mbppfd
     *             in this didtionbry, or <dodf>null</dodf> if thf kfy did not
     *             hbvf b prfvious mbpping.
     * @fxdfption  NullPointfrExdfption  if thf <dodf>kfy</dodf> or
     *               <dodf>vbluf</dodf> is <dodf>null</dodf>.
     * @sff        jbvb.lbng.Objfdt#fqubls(jbvb.lbng.Objfdt)
     * @sff        jbvb.util.Didtionbry#gft(jbvb.lbng.Objfdt)
     */
    bbstrbdt publid V put(K kfy, V vbluf);

    /**
     * Rfmovfs thf <dodf>kfy</dodf> (bnd its dorrfsponding
     * <dodf>vbluf</dodf>) from this didtionbry. This mfthod dofs nothing
     * if thf <dodf>kfy</dodf> is not in this didtionbry.
     *
     * @pbrbm   kfy   thf kfy thbt nffds to bf rfmovfd.
     * @rfturn  thf vbluf to whidh thf <dodf>kfy</dodf> hbd bffn mbppfd in this
     *          didtionbry, or <dodf>null</dodf> if thf kfy did not hbvf b
     *          mbpping.
     * @fxdfption NullPointfrExdfption if <tt>kfy</tt> is <tt>null</tt>.
     */
    bbstrbdt publid V rfmovf(Objfdt kfy);
}
