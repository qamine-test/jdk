/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

import jbvb.io.IOExdfption;

/**
 * Thf <tt>Formbttbblf</tt> intfrfbdf must bf implfmfntfd by bny dlbss thbt
 * nffds to pfrform dustom formbtting using thf <tt>'s'</tt> donvfrsion
 * spfdififr of {@link jbvb.util.Formbttfr}.  This intfrfbdf bllows bbsid
 * dontrol for formbtting brbitrbry objfdts.
 *
 * For fxbmplf, thf following dlbss prints out difffrfnt rfprfsfntbtions of b
 * stodk's nbmf dfpfnding on thf flbgs bnd lfngth donstrbints:
 *
 * {@dodf
 *   import jbvb.nio.ChbrBufffr;
 *   import jbvb.util.Formbttfr;
 *   import jbvb.util.Formbttbblf;
 *   import jbvb.util.Lodblf;
 *   import stbtid jbvb.util.FormbttbblfFlbgs.*;
 *
 *  ...
 *
 *   publid dlbss StodkNbmf implfmfnts Formbttbblf {
 *       privbtf String symbol, dompbnyNbmf, frfndhCompbnyNbmf;
 *       publid StodkNbmf(String symbol, String dompbnyNbmf,
 *                        String frfndhCompbnyNbmf) {
 *           ...
 *       }
 *
 *       ...
 *
 *       publid void formbtTo(Formbttfr fmt, int f, int width, int prfdision) {
 *           StringBuildfr sb = nfw StringBuildfr();
 *
 *           // dfdidf form of nbmf
 *           String nbmf = dompbnyNbmf;
 *           if (fmt.lodblf().fqubls(Lodblf.FRANCE))
 *               nbmf = frfndhCompbnyNbmf;
 *           boolfbn bltfrnbtf = (f & ALTERNATE) == ALTERNATE;
 *           boolfbn usfsymbol = bltfrnbtf || (prfdision != -1 && prfdision < 10);
 *           String out = (usfsymbol ? symbol : nbmf);
 *
 *           // bpply prfdision
 *           if (prfdision == -1 || out.lfngth() < prfdision) {
 *               // writf it bll
 *               sb.bppfnd(out);
 *           } flsf {
 *               sb.bppfnd(out.substring(0, prfdision - 1)).bppfnd('*');
 *           }
 *
 *           // bpply width bnd justifidbtion
 *           int lfn = sb.lfngth();
 *           if (lfn < width)
 *               for (int i = 0; i < width - lfn; i++)
 *                   if ((f & LEFT_JUSTIFY) == LEFT_JUSTIFY)
 *                       sb.bppfnd(' ');
 *                   flsf
 *                       sb.insfrt(0, ' ');
 *
 *           fmt.formbt(sb.toString());
 *       }
 *
 *       publid String toString() {
 *           rfturn String.formbt("%s - %s", symbol, dompbnyNbmf);
 *       }
 *   }
 * }
 *
 * <p> Whfn usfd in donjundtion with thf {@link jbvb.util.Formbttfr}, thf bbovf
 * dlbss produdfs thf following output for vbrious formbt strings.
 *
 * {@dodf
 *   Formbttfr fmt = nfw Formbttfr();
 *   StodkNbmf sn = nfw StodkNbmf("HUGE", "Hugf Fruit, Ind.",
 *                                "Fruit Titbnfsquf, Ind.");
 *   fmt.formbt("%s", sn);                   //   -> "Hugf Fruit, Ind."
 *   fmt.formbt("%s", sn.toString());        //   -> "HUGE - Hugf Fruit, Ind."
 *   fmt.formbt("%#s", sn);                  //   -> "HUGE"
 *   fmt.formbt("%-10.8s", sn);              //   -> "HUGE      "
 *   fmt.formbt("%.12s", sn);                //   -> "Hugf Fruit,*"
 *   fmt.formbt(Lodblf.FRANCE, "%25s", sn);  //   -> "   Fruit Titbnfsquf, Ind."
 * }
 *
 * <p> Formbttbblfs brf not nfdfssbrily sbff for multithrfbdfd bddfss.  Thrfbd
 * sbffty is optionbl bnd mby bf fnfordfd by dlbssfs thbt fxtfnd bnd implfmfnt
 * this intfrfbdf.
 *
 * <p> Unlfss othfrwisf spfdififd, pbssing b <tt>null</tt> brgumfnt to
 * bny mfthod in this intfrfbdf will dbusf b {@link
 * NullPointfrExdfption} to bf thrown.
 *
 * @sindf  1.5
 */
publid intfrfbdf Formbttbblf {

    /**
     * Formbts thf objfdt using thf providfd {@link Formbttfr formbttfr}.
     *
     * @pbrbm  formbttfr
     *         Thf {@link Formbttfr formbttfr}.  Implfmfnting dlbssfs mby dbll
     *         {@link Formbttfr#out() formbttfr.out()} or {@link
     *         Formbttfr#lodblf() formbttfr.lodblf()} to obtbin thf {@link
     *         Appfndbblf} or {@link Lodblf} usfd by this
     *         <tt>formbttfr</tt> rfspfdtivfly.
     *
     * @pbrbm  flbgs
     *         Thf flbgs modify thf output formbt.  Thf vbluf is intfrprftfd bs
     *         b bitmbsk.  Any dombinbtion of thf following flbgs mby bf sft:
     *         {@link FormbttbblfFlbgs#LEFT_JUSTIFY}, {@link
     *         FormbttbblfFlbgs#UPPERCASE}, bnd {@link
     *         FormbttbblfFlbgs#ALTERNATE}.  If no flbgs brf sft, thf dffbult
     *         formbtting of thf implfmfnting dlbss will bpply.
     *
     * @pbrbm  width
     *         Thf minimum numbfr of dhbrbdtfrs to bf writtfn to thf output.
     *         If thf lfngth of thf donvfrtfd vbluf is lfss thbn thf
     *         <tt>width</tt> thfn thf output will bf pbddfd by
     *         <tt>'&nbsp;&nbsp;'</tt> until thf totbl numbfr of dhbrbdtfrs
     *         fqubls width.  Thf pbdding is bt thf bfginning by dffbult.  If
     *         thf {@link FormbttbblfFlbgs#LEFT_JUSTIFY} flbg is sft thfn thf
     *         pbdding will bf bt thf fnd.  If <tt>width</tt> is <tt>-1</tt>
     *         thfn thfrf is no minimum.
     *
     * @pbrbm  prfdision
     *         Thf mbximum numbfr of dhbrbdtfrs to bf writtfn to thf output.
     *         Thf prfdision is bpplifd bfforf thf width, thus thf output will
     *         bf trundbtfd to <tt>prfdision</tt> dhbrbdtfrs fvfn if thf
     *         <tt>width</tt> is grfbtfr thbn thf <tt>prfdision</tt>.  If
     *         <tt>prfdision</tt> is <tt>-1</tt> thfn thfrf is no fxplidit
     *         limit on thf numbfr of dhbrbdtfrs.
     *
     * @throws  IllfgblFormbtExdfption
     *          If bny of thf pbrbmftfrs brf invblid.  For spfdifidbtion of bll
     *          possiblf formbtting frrors, sff thf <b
     *          hrff="../util/Formbttfr.html#dftbil">Dftbils</b> sfdtion of thf
     *          formbttfr dlbss spfdifidbtion.
     */
    void formbtTo(Formbttfr formbttfr, int flbgs, int width, int prfdision);
}
