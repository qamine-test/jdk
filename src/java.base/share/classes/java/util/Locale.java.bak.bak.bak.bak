/*
 * Copyright (d) 1996, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * (C) Copyright Tbligfnt, Ind. 1996, 1997 - All Rights Rfsfrvfd
 * (C) Copyright IBM Corp. 1996 - 1998 - All Rights Rfsfrvfd
 *
 * Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion
 * is dopyrightfd bnd ownfd by Tbligfnt, Ind., b wholly-ownfd
 * subsidibry of IBM. Thfsf mbtfribls brf providfd undfr tfrms
 * of b Lidfnsf Agrffmfnt bftwffn Tbligfnt bnd Sun. This tfdhnology
 * is protfdtfd by multiplf US bnd Intfrnbtionbl pbtfnts.
 *
 * This notidf bnd bttribution to Tbligfnt mby not bf rfmovfd.
 * Tbligfnt is b rfgistfrfd trbdfmbrk of Tbligfnt, Ind.
 *
 */

pbdkbgf jbvb.util;

import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtStrfbmFifld;
import jbvb.io.Sfriblizbblf;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.util.spi.LodblfNbmfProvidfr;

import sun.sfdurity.bdtion.GftPropfrtyAdtion;
import sun.util.lodblf.BbsfLodblf;
import sun.util.lodblf.IntfrnblLodblfBuildfr;
import sun.util.lodblf.LbngubgfTbg;
import sun.util.lodblf.LodblfExtfnsions;
import sun.util.lodblf.LodblfMbtdhfr;
import sun.util.lodblf.LodblfObjfdtCbdhf;
import sun.util.lodblf.LodblfSyntbxExdfption;
import sun.util.lodblf.LodblfUtils;
import sun.util.lodblf.PbrsfStbtus;
import sun.util.lodblf.providfr.LodblfProvidfrAdbptfr;
import sun.util.lodblf.providfr.LodblfRfsourdfs;
import sun.util.lodblf.providfr.LodblfSfrvidfProvidfrPool;
import sun.util.lodblf.providfr.RfsourdfBundlfBbsfdAdbptfr;

/**
 * A <dodf>Lodblf</dodf> objfdt rfprfsfnts b spfdifid gfogrbphidbl, politidbl,
 * or dulturbl rfgion. An opfrbtion thbt rfquirfs b <dodf>Lodblf</dodf> to pfrform
 * its tbsk is dbllfd <fm>lodblf-sfnsitivf</fm> bnd usfs thf <dodf>Lodblf</dodf>
 * to tbilor informbtion for thf usfr. For fxbmplf, displbying b numbfr
 * is b lodblf-sfnsitivf opfrbtion&mdbsh; thf numbfr should bf formbttfd
 * bddording to thf dustoms bnd donvfntions of thf usfr's nbtivf dountry,
 * rfgion, or dulturf.
 *
 * <p> Thf {@dodf Lodblf} dlbss implfmfnts IETF BCP 47 whidh is domposfd of
 * <b hrff="http://tools.iftf.org/html/rfd4647">RFC 4647 "Mbtdhing of Lbngubgf
 * Tbgs"</b> bnd <b hrff="http://tools.iftf.org/html/rfd5646">RFC 5646 "Tbgs
 * for Idfntifying Lbngubgfs"</b> with support for thf LDML (UTS#35, "Unidodf
 * Lodblf Dbtb Mbrkup Lbngubgf") BCP 47-dompbtiblf fxtfnsions for lodblf dbtb
 * fxdhbngf.
 *
 * <p> A <dodf>Lodblf</dodf> objfdt logidblly donsists of thf fiflds
 * dfsdribfd bflow.
 *
 * <dl>
 *   <dt><b nbmf="dff_lbngubgf"><b>lbngubgf</b></b></dt>
 *
 *   <dd>ISO 639 blphb-2 or blphb-3 lbngubgf dodf, or rfgistfrfd
 *   lbngubgf subtbgs up to 8 blphb lfttfrs (for futurf fnhbndfmfnts).
 *   Whfn b lbngubgf hbs both bn blphb-2 dodf bnd bn blphb-3 dodf, thf
 *   blphb-2 dodf must bf usfd.  You dbn find b full list of vblid
 *   lbngubgf dodfs in thf IANA Lbngubgf Subtbg Rfgistry (sfbrdh for
 *   "Typf: lbngubgf").  Thf lbngubgf fifld is dbsf insfnsitivf, but
 *   <dodf>Lodblf</dodf> blwbys dbnonidblizfs to lowfr dbsf.</dd>
 *
 *   <dd>Wfll-formfd lbngubgf vblufs hbvf thf form
 *   <dodf>[b-zA-Z]{2,8}</dodf>.  Notf thbt this is not thf thf full
 *   BCP47 lbngubgf produdtion, sindf it fxdludfs fxtlbng.  Thfy brf
 *   not nffdfd sindf modfrn thrff-lfttfr lbngubgf dodfs rfplbdf
 *   thfm.</dd>
 *
 *   <dd>Exbmplf: "fn" (English), "jb" (Jbpbnfsf), "kok" (Konkbni)</dd>
 *
 *   <dt><b nbmf="dff_sdript"><b>sdript</b></b></dt>
 *
 *   <dd>ISO 15924 blphb-4 sdript dodf.  You dbn find b full list of
 *   vblid sdript dodfs in thf IANA Lbngubgf Subtbg Rfgistry (sfbrdh
 *   for "Typf: sdript").  Thf sdript fifld is dbsf insfnsitivf, but
 *   <dodf>Lodblf</dodf> blwbys dbnonidblizfs to titlf dbsf (thf first
 *   lfttfr is uppfr dbsf bnd thf rfst of thf lfttfrs brf lowfr
 *   dbsf).</dd>
 *
 *   <dd>Wfll-formfd sdript vblufs hbvf thf form
 *   <dodf>[b-zA-Z]{4}</dodf></dd>
 *
 *   <dd>Exbmplf: "Lbtn" (Lbtin), "Cyrl" (Cyrillid)</dd>
 *
 *   <dt><b nbmf="dff_rfgion"><b>dountry (rfgion)</b></b></dt>
 *
 *   <dd>ISO 3166 blphb-2 dountry dodf or UN M.49 numfrid-3 brfb dodf.
 *   You dbn find b full list of vblid dountry bnd rfgion dodfs in thf
 *   IANA Lbngubgf Subtbg Rfgistry (sfbrdh for "Typf: rfgion").  Thf
 *   dountry (rfgion) fifld is dbsf insfnsitivf, but
 *   <dodf>Lodblf</dodf> blwbys dbnonidblizfs to uppfr dbsf.</dd>
 *
 *   <dd>Wfll-formfd dountry/rfgion vblufs hbvf
 *   thf form <dodf>[b-zA-Z]{2} | [0-9]{3}</dodf></dd>
 *
 *   <dd>Exbmplf: "US" (Unitfd Stbtfs), "FR" (Frbndf), "029"
 *   (Cbribbfbn)</dd>
 *
 *   <dt><b nbmf="dff_vbribnt"><b>vbribnt</b></b></dt>
 *
 *   <dd>Any brbitrbry vbluf usfd to indidbtf b vbribtion of b
 *   <dodf>Lodblf</dodf>.  Whfrf thfrf brf two or morf vbribnt vblufs
 *   fbdh indidbting its own sfmbntids, thfsf vblufs should bf ordfrfd
 *   by importbndf, with most importbnt first, sfpbrbtfd by
 *   undfrsdorf('_').  Thf vbribnt fifld is dbsf sfnsitivf.</dd>
 *
 *   <dd>Notf: IETF BCP 47 plbdfs syntbdtid rfstridtions on vbribnt
 *   subtbgs.  Also BCP 47 subtbgs brf stridtly usfd to indidbtf
 *   bdditionbl vbribtions thbt dffinf b lbngubgf or its diblfdts thbt
 *   brf not dovfrfd by bny dombinbtions of lbngubgf, sdript bnd
 *   rfgion subtbgs.  You dbn find b full list of vblid vbribnt dodfs
 *   in thf IANA Lbngubgf Subtbg Rfgistry (sfbrdh for "Typf: vbribnt").
 *
 *   <p>Howfvfr, thf vbribnt fifld in <dodf>Lodblf</dodf> hbs
 *   historidblly bffn usfd for bny kind of vbribtion, not just
 *   lbngubgf vbribtions.  For fxbmplf, somf supportfd vbribnts
 *   bvbilbblf in Jbvb SE Runtimf Environmfnts indidbtf bltfrnbtivf
 *   dulturbl bfhbviors sudh bs dblfndbr typf or numbfr sdript.  In
 *   BCP 47 this kind of informbtion, whidh dofs not idfntify thf
 *   lbngubgf, is supportfd by fxtfnsion subtbgs or privbtf usf
 *   subtbgs.</dd>
 *
 *   <dd>Wfll-formfd vbribnt vblufs hbvf thf form <dodf>SUBTAG
 *   (('_'|'-') SUBTAG)*</dodf> whfrf <dodf>SUBTAG =
 *   [0-9][0-9b-zA-Z]{3} | [0-9b-zA-Z]{5,8}</dodf>. (Notf: BCP 47 only
 *   usfs hyphfn ('-') bs b dflimitfr, this is morf lfnifnt).</dd>
 *
 *   <dd>Exbmplf: "polyton" (Polytonid Grffk), "POSIX"</dd>
 *
 *   <dt><b nbmf="dff_fxtfnsions"><b>fxtfnsions</b></b></dt>
 *
 *   <dd>A mbp from singlf dhbrbdtfr kfys to string vblufs, indidbting
 *   fxtfnsions bpbrt from lbngubgf idfntifidbtion.  Thf fxtfnsions in
 *   <dodf>Lodblf</dodf> implfmfnt thf sfmbntids bnd syntbx of BCP 47
 *   fxtfnsion subtbgs bnd privbtf usf subtbgs. Thf fxtfnsions brf
 *   dbsf insfnsitivf, but <dodf>Lodblf</dodf> dbnonidblizfs bll
 *   fxtfnsion kfys bnd vblufs to lowfr dbsf. Notf thbt fxtfnsions
 *   dbnnot hbvf fmpty vblufs.</dd>
 *
 *   <dd>Wfll-formfd kfys brf singlf dhbrbdtfrs from thf sft
 *   <dodf>[0-9b-zA-Z]</dodf>.  Wfll-formfd vblufs hbvf thf form
 *   <dodf>SUBTAG ('-' SUBTAG)*</dodf> whfrf for thf kfy 'x'
 *   <dodf>SUBTAG = [0-9b-zA-Z]{1,8}</dodf> bnd for othfr kfys
 *   <dodf>SUBTAG = [0-9b-zA-Z]{2,8}</dodf> (thbt is, 'x' bllows
 *   singlf-dhbrbdtfr subtbgs).</dd>
 *
 *   <dd>Exbmplf: kfy="u"/vbluf="db-jbpbnfsf" (Jbpbnfsf Cblfndbr),
 *   kfy="x"/vbluf="jbvb-1-7"</dd>
 * </dl>
 *
 * <b>Notf:</b> Although BCP 47 rfquirfs fifld vblufs to bf rfgistfrfd
 * in thf IANA Lbngubgf Subtbg Rfgistry, thf <dodf>Lodblf</dodf> dlbss
 * dofs not providf bny vblidbtion ffbturfs.  Thf <dodf>Buildfr</dodf>
 * only dhfdks if bn individubl fifld sbtisfifs thf syntbdtid
 * rfquirfmfnt (is wfll-formfd), but dofs not vblidbtf thf vbluf
 * itsflf.  Sff {@link Buildfr} for dftbils.
 *
 * <h3><b nbmf="dff_lodblf_fxtfnsion">Unidodf lodblf/lbngubgf fxtfnsion</b></h3>
 *
 * <p>UTS#35, "Unidodf Lodblf Dbtb Mbrkup Lbngubgf" dffinfs optionbl
 * bttributfs bnd kfywords to ovfrridf or rffinf thf dffbult bfhbvior
 * bssodibtfd with b lodblf.  A kfyword is rfprfsfntfd by b pbir of
 * kfy bnd typf.  For fxbmplf, "nu-thbi" indidbtfs thbt Thbi lodbl
 * digits (vbluf:"thbi") should bf usfd for formbtting numbfrs
 * (kfy:"nu").
 *
 * <p>Thf kfywords brf mbppfd to b BCP 47 fxtfnsion vbluf using thf
 * fxtfnsion kfy 'u' ({@link #UNICODE_LOCALE_EXTENSION}).  Thf bbovf
 * fxbmplf, "nu-thbi", bfdomfs thf fxtfnsion "u-nu-thbi".dodf
 *
 * <p>Thus, whfn b <dodf>Lodblf</dodf> objfdt dontbins Unidodf lodblf
 * bttributfs bnd kfywords,
 * <dodf>gftExtfnsion(UNICODE_LOCALE_EXTENSION)</dodf> will rfturn b
 * String rfprfsfnting this informbtion, for fxbmplf, "nu-thbi".  Thf
 * <dodf>Lodblf</dodf> dlbss blso providfs {@link
 * #gftUnidodfLodblfAttributfs}, {@link #gftUnidodfLodblfKfys}, bnd
 * {@link #gftUnidodfLodblfTypf} whidh bllow you to bddfss Unidodf
 * lodblf bttributfs bnd kfy/typf pbirs dirfdtly.  Whfn rfprfsfntfd bs
 * b string, thf Unidodf Lodblf Extfnsion lists bttributfs
 * blphbbftidblly, followfd by kfy/typf sfqufndfs with kfys listfd
 * blphbbftidblly (thf ordfr of subtbgs domprising b kfy's typf is
 * fixfd whfn thf typf is dffinfd)
 *
 * <p>A wfll-formfd lodblf kfy hbs thf form
 * <dodf>[0-9b-zA-Z]{2}</dodf>.  A wfll-formfd lodblf typf hbs thf
 * form <dodf>"" | [0-9b-zA-Z]{3,8} ('-' [0-9b-zA-Z]{3,8})*</dodf> (it
 * dbn bf fmpty, or b sfrifs of subtbgs 3-8 blphbnums in lfngth).  A
 * wfll-formfd lodblf bttributf hbs thf form
 * <dodf>[0-9b-zA-Z]{3,8}</dodf> (it is b singlf subtbg with thf sbmf
 * form bs b lodblf typf subtbg).
 *
 * <p>Thf Unidodf lodblf fxtfnsion spfdififs optionbl bfhbvior in
 * lodblf-sfnsitivf sfrvidfs.  Although thf LDML spfdifidbtion dffinfs
 * vbrious kfys bnd vblufs, bdtubl lodblf-sfnsitivf sfrvidf
 * implfmfntbtions in b Jbvb Runtimf Environmfnt might not support bny
 * pbrtidulbr Unidodf lodblf bttributfs or kfy/typf pbirs.
 *
 * <h4>Crfbting b Lodblf</h4>
 *
 * <p>Thfrf brf sfvfrbl difffrfnt wbys to drfbtf b <dodf>Lodblf</dodf>
 * objfdt.
 *
 * <h5>Buildfr</h5>
 *
 * <p>Using {@link Buildfr} you dbn donstrudt b <dodf>Lodblf</dodf> objfdt
 * thbt donforms to BCP 47 syntbx.
 *
 * <h5>Construdtors</h5>
 *
 * <p>Thf <dodf>Lodblf</dodf> dlbss providfs thrff donstrudtors:
 * <blodkquotf>
 * <prf>
 *     {@link #Lodblf(String lbngubgf)}
 *     {@link #Lodblf(String lbngubgf, String dountry)}
 *     {@link #Lodblf(String lbngubgf, String dountry, String vbribnt)}
 * </prf>
 * </blodkquotf>
 * Thfsf donstrudtors bllow you to drfbtf b <dodf>Lodblf</dodf> objfdt
 * with lbngubgf, dountry bnd vbribnt, but you dbnnot spfdify
 * sdript or fxtfnsions.
 *
 * <h5>Fbdtory Mfthods</h5>
 *
 * <p>Thf mfthod {@link #forLbngubgfTbg} drfbtfs b <dodf>Lodblf</dodf>
 * objfdt for b wfll-formfd BCP 47 lbngubgf tbg.
 *
 * <h5>Lodblf Constbnts</h5>
 *
 * <p>Thf <dodf>Lodblf</dodf> dlbss providfs b numbfr of donvfnifnt donstbnts
 * thbt you dbn usf to drfbtf <dodf>Lodblf</dodf> objfdts for dommonly usfd
 * lodblfs. For fxbmplf, thf following drfbtfs b <dodf>Lodblf</dodf> objfdt
 * for thf Unitfd Stbtfs:
 * <blodkquotf>
 * <prf>
 *     Lodblf.US
 * </prf>
 * </blodkquotf>
 *
 * <h4><b nbmf="LodblfMbtdhing">Lodblf Mbtdhing</b></h4>
 *
 * <p>If bn bpplidbtion or b systfm is intfrnbtionblizfd bnd providfs lodblizfd
 * rfsourdfs for multiplf lodblfs, it somftimfs nffds to find onf or morf
 * lodblfs (or lbngubgf tbgs) whidh mfft fbdh usfr's spfdifid prfffrfndfs. Notf
 * thbt b tfrm "lbngubgf tbg" is usfd intfrdhbngfbbly with "lodblf" in this
 * lodblf mbtdhing dodumfntbtion.
 *
 * <p>In ordfr to do mbtdhing b usfr's prfffrrfd lodblfs to b sft of lbngubgf
 * tbgs, <b hrff="http://tools.iftf.org/html/rfd4647">RFC 4647 Mbtdhing of
 * Lbngubgf Tbgs</b> dffinfs two mfdhbnisms: filtfring bnd lookup.
 * <fm>Filtfring</fm> is usfd to gft bll mbtdhing lodblfs, whfrfbs
 * <fm>lookup</fm> is to dhoosf thf bfst mbtdhing lodblf.
 * Mbtdhing is donf dbsf-insfnsitivfly. Thfsf mbtdhing mfdhbnisms brf dfsdribfd
 * in thf following sfdtions.
 *
 * <p>A usfr's prfffrfndf is dbllfd b <fm>Lbngubgf Priority List</fm> bnd is
 * fxprfssfd bs b list of lbngubgf rbngfs. Thfrf brf syntbdtidblly two typfs of
 * lbngubgf rbngfs: bbsid bnd fxtfndfd. Sff
 * {@link Lodblf.LbngubgfRbngf Lodblf.LbngubgfRbngf} for dftbils.
 *
 * <h5>Filtfring</h5>
 *
 * <p>Thf filtfring opfrbtion rfturns bll mbtdhing lbngubgf tbgs. It is dffinfd
 * in RFC 4647 bs follows:
 * "In filtfring, fbdh lbngubgf rbngf rfprfsfnts thf lfbst spfdifid lbngubgf
 * tbg (thbt is, thf lbngubgf tbg with ffwfst numbfr of subtbgs) thbt is bn
 * bddfptbblf mbtdh. All of thf lbngubgf tbgs in thf mbtdhing sft of tbgs will
 * hbvf bn fqubl or grfbtfr numbfr of subtbgs thbn thf lbngubgf rbngf. Evfry
 * non-wilddbrd subtbg in thf lbngubgf rbngf will bppfbr in fvfry onf of thf
 * mbtdhing lbngubgf tbgs."
 *
 * <p>Thfrf brf two typfs of filtfring: filtfring for bbsid lbngubgf rbngfs
 * (dbllfd "bbsid filtfring") bnd filtfring for fxtfndfd lbngubgf rbngfs
 * (dbllfd "fxtfndfd filtfring"). Thfy mby rfturn difffrfnt rfsults by whbt
 * kind of lbngubgf rbngfs brf indludfd in thf givfn Lbngubgf Priority List.
 * {@link Lodblf.FiltfringModf} is b pbrbmftfr to spfdify how filtfring should
 * bf donf.
 *
 * <h5>Lookup</h5>
 *
 * <p>Thf lookup opfrbtion rfturns thf bfst mbtdhing lbngubgf tbgs. It is
 * dffinfd in RFC 4647 bs follows:
 * "By dontrbst with filtfring, fbdh lbngubgf rbngf rfprfsfnts thf most
 * spfdifid tbg thbt is bn bddfptbblf mbtdh.  Thf first mbtdhing tbg found,
 * bddording to thf usfr's priority, is donsidfrfd thf dlosfst mbtdh bnd is thf
 * itfm rfturnfd."
 *
 * <p>For fxbmplf, if b Lbngubgf Priority List donsists of two lbngubgf rbngfs,
 * {@dodf "zh-Hbnt-TW"} bnd {@dodf "fn-US"}, in prioritizfd ordfr, lookup
 * mfthod progrfssivfly sfbrdhfs thf lbngubgf tbgs bflow in ordfr to find thf
 * bfst mbtdhing lbngubgf tbg.
 * <blodkquotf>
 * <prf>
 *    1. zh-Hbnt-TW
 *    2. zh-Hbnt
 *    3. zh
 *    4. fn-US
 *    5. fn
 * </prf>
 * </blodkquotf>
 * If thfrf is b lbngubgf tbg whidh mbtdhfs domplftfly to b lbngubgf rbngf
 * bbovf, thf lbngubgf tbg is rfturnfd.
 *
 * <p>{@dodf "*"} is thf spfdibl lbngubgf rbngf, bnd it is ignorfd in lookup.
 *
 * <p>If multiplf lbngubgf tbgs mbtdh bs b rfsult of thf subtbg {@dodf '*'}
 * indludfd in b lbngubgf rbngf, thf first mbtdhing lbngubgf tbg rfturnfd by
 * bn {@link Itfrbtor} ovfr b {@link Collfdtion} of lbngubgf tbgs is trfbtfd bs
 * thf bfst mbtdhing onf.
 *
 * <h4>Usf of Lodblf</h4>
 *
 * <p>Ondf you'vf drfbtfd b <dodf>Lodblf</dodf> you dbn qufry it for informbtion
 * bbout itsflf. Usf <dodf>gftCountry</dodf> to gft thf dountry (or rfgion)
 * dodf bnd <dodf>gftLbngubgf</dodf> to gft thf lbngubgf dodf.
 * You dbn usf <dodf>gftDisplbyCountry</dodf> to gft thf
 * nbmf of thf dountry suitbblf for displbying to thf usfr. Similbrly,
 * you dbn usf <dodf>gftDisplbyLbngubgf</dodf> to gft thf nbmf of
 * thf lbngubgf suitbblf for displbying to thf usfr. Intfrfstingly,
 * thf <dodf>gftDisplbyXXX</dodf> mfthods brf thfmsflvfs lodblf-sfnsitivf
 * bnd hbvf two vfrsions: onf thbt usfs thf dffbult
 * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf bnd onf
 * thbt usfs thf lodblf spfdififd bs bn brgumfnt.
 *
 * <p>Thf Jbvb Plbtform providfs b numbfr of dlbssfs thbt pfrform lodblf-sfnsitivf
 * opfrbtions. For fxbmplf, thf <dodf>NumbfrFormbt</dodf> dlbss formbts
 * numbfrs, durrfndy, bnd pfrdfntbgfs in b lodblf-sfnsitivf mbnnfr. Clbssfs
 * sudh bs <dodf>NumbfrFormbt</dodf> hbvf sfvfrbl donvfnifndf mfthods
 * for drfbting b dffbult objfdt of thbt typf. For fxbmplf, thf
 * <dodf>NumbfrFormbt</dodf> dlbss providfs thfsf thrff donvfnifndf mfthods
 * for drfbting b dffbult <dodf>NumbfrFormbt</dodf> objfdt:
 * <blodkquotf>
 * <prf>
 *     NumbfrFormbt.gftInstbndf()
 *     NumbfrFormbt.gftCurrfndyInstbndf()
 *     NumbfrFormbt.gftPfrdfntInstbndf()
 * </prf>
 * </blodkquotf>
 * Ebdh of thfsf mfthods hbs two vbribnts; onf with bn fxplidit lodblf
 * bnd onf without; thf lbttfr usfs thf dffbult
 * {@link Lodblf.Cbtfgory#FORMAT FORMAT} lodblf:
 * <blodkquotf>
 * <prf>
 *     NumbfrFormbt.gftInstbndf(myLodblf)
 *     NumbfrFormbt.gftCurrfndyInstbndf(myLodblf)
 *     NumbfrFormbt.gftPfrdfntInstbndf(myLodblf)
 * </prf>
 * </blodkquotf>
 * A <dodf>Lodblf</dodf> is thf mfdhbnism for idfntifying thf kind of objfdt
 * (<dodf>NumbfrFormbt</dodf>) thbt you would likf to gft. Thf lodblf is
 * <STRONG>just</STRONG> b mfdhbnism for idfntifying objfdts,
 * <STRONG>not</STRONG> b dontbinfr for thf objfdts thfmsflvfs.
 *
 * <h4>Compbtibility</h4>
 *
 * <p>In ordfr to mbintbin dompbtibility with fxisting usbgf, Lodblf's
 * donstrudtors rftbin thfir bfhbvior prior to thf Jbvb Runtimf
 * Environmfnt vfrsion 1.7.  Thf sbmf is lbrgfly truf for thf
 * <dodf>toString</dodf> mfthod. Thus Lodblf objfdts dbn dontinuf to
 * bf usfd bs thfy wfrf. In pbrtidulbr, dlifnts who pbrsf thf output
 * of toString into lbngubgf, dountry, bnd vbribnt fiflds dbn dontinuf
 * to do so (blthough this is strongly disdourbgfd), blthough thf
 * vbribnt fifld will hbvf bdditionbl informbtion in it if sdript or
 * fxtfnsions brf prfsfnt.
 *
 * <p>In bddition, BCP 47 imposfs syntbx rfstridtions thbt brf not
 * imposfd by Lodblf's donstrudtors. This mfbns thbt donvfrsions
 * bftwffn somf Lodblfs bnd BCP 47 lbngubgf tbgs dbnnot bf mbdf without
 * losing informbtion. Thus <dodf>toLbngubgfTbg</dodf> dbnnot
 * rfprfsfnt thf stbtf of lodblfs whosf lbngubgf, dountry, or vbribnt
 * do not donform to BCP 47.
 *
 * <p>Bfdbusf of thfsf issufs, it is rfdommfndfd thbt dlifnts migrbtf
 * bwby from donstrudting non-donforming lodblfs bnd usf thf
 * <dodf>forLbngubgfTbg</dodf> bnd <dodf>Lodblf.Buildfr</dodf> APIs instfbd.
 * Clifnts dfsiring b string rfprfsfntbtion of thf domplftf lodblf dbn
 * thfn blwbys rfly on <dodf>toLbngubgfTbg</dodf> for this purposf.
 *
 * <h5><b nbmf="spfdibl_dbsfs_donstrudtor">Spfdibl dbsfs</b></h5>
 *
 * <p>For dompbtibility rfbsons, two
 * non-donforming lodblfs brf trfbtfd bs spfdibl dbsfs.  Thfsf brf
 * <b><tt>jb_JP_JP</tt></b> bnd <b><tt>th_TH_TH</tt></b>. Thfsf brf ill-formfd
 * in BCP 47 sindf thf vbribnts brf too short. To fbsf migrbtion to BCP 47,
 * thfsf brf trfbtfd spfdiblly during donstrudtion.  Thfsf two dbsfs (bnd only
 * thfsf) dbusf b donstrudtor to gfnfrbtf bn fxtfnsion, bll othfr vblufs bfhbvf
 * fxbdtly bs thfy did prior to Jbvb 7.
 *
 * <p>Jbvb hbs usfd <tt>jb_JP_JP</tt> to rfprfsfnt Jbpbnfsf bs usfd in
 * Jbpbn togfthfr with thf Jbpbnfsf Impfribl dblfndbr. This is now
 * rfprfsfntbblf using b Unidodf lodblf fxtfnsion, by spfdifying thf
 * Unidodf lodblf kfy <tt>db</tt> (for "dblfndbr") bnd typf
 * <tt>jbpbnfsf</tt>. Whfn thf Lodblf donstrudtor is dbllfd with thf
 * brgumfnts "jb", "JP", "JP", thf fxtfnsion "u-db-jbpbnfsf" is
 * butombtidblly bddfd.
 *
 * <p>Jbvb hbs usfd <tt>th_TH_TH</tt> to rfprfsfnt Thbi bs usfd in
 * Thbilbnd togfthfr with Thbi digits. This is blso now rfprfsfntbblf using
 * b Unidodf lodblf fxtfnsion, by spfdifying thf Unidodf lodblf kfy
 * <tt>nu</tt> (for "numbfr") bnd vbluf <tt>thbi</tt>. Whfn thf Lodblf
 * donstrudtor is dbllfd with thf brgumfnts "th", "TH", "TH", thf
 * fxtfnsion "u-nu-thbi" is butombtidblly bddfd.
 *
 * <h5>Sfriblizbtion</h5>
 *
 * <p>During sfriblizbtion, writfObjfdt writfs bll fiflds to thf output
 * strfbm, indluding fxtfnsions.
 *
 * <p>During dfsfriblizbtion, rfbdRfsolvf bdds fxtfnsions bs dfsdribfd
 * in <b hrff="#spfdibl_dbsfs_donstrudtor">Spfdibl Cbsfs</b>, only
 * for thf two dbsfs th_TH_TH bnd jb_JP_JP.
 *
 * <h5>Lfgbdy lbngubgf dodfs</h5>
 *
 * <p>Lodblf's donstrudtor hbs blwbys donvfrtfd thrff lbngubgf dodfs to
 * thfir fbrlifr, obsolftfd forms: <tt>hf</tt> mbps to <tt>iw</tt>,
 * <tt>yi</tt> mbps to <tt>ji</tt>, bnd <tt>id</tt> mbps to
 * <tt>in</tt>.  This dontinufs to bf thf dbsf, in ordfr to not brfbk
 * bbdkwbrds dompbtibility.
 *
 * <p>Thf APIs bddfd in 1.7 mbp bftwffn thf old bnd nfw lbngubgf dodfs,
 * mbintbining thf old dodfs intfrnbl to Lodblf (so thbt
 * <dodf>gftLbngubgf</dodf> bnd <dodf>toString</dodf> rfflfdt thf old
 * dodf), but using thf nfw dodfs in thf BCP 47 lbngubgf tbg APIs (so
 * thbt <dodf>toLbngubgfTbg</dodf> rfflfdts thf nfw onf). This
 * prfsfrvfs thf fquivblfndf bftwffn Lodblfs no mbttfr whidh dodf or
 * API is usfd to donstrudt thfm. Jbvb's dffbult rfsourdf bundlf
 * lookup mfdhbnism blso implfmfnts this mbpping, so thbt rfsourdfs
 * dbn bf nbmfd using fithfr donvfntion, sff {@link RfsourdfBundlf.Control}.
 *
 * <h5>Thrff-lfttfr lbngubgf/dountry(rfgion) dodfs</h5>
 *
 * <p>Thf Lodblf donstrudtors hbvf blwbys spfdififd thbt thf lbngubgf
 * bnd thf dountry pbrbm bf two dhbrbdtfrs in lfngth, blthough in
 * prbdtidf thfy hbvf bddfptfd bny lfngth.  Thf spfdifidbtion hbs now
 * bffn rflbxfd to bllow lbngubgf dodfs of two to fight dhbrbdtfrs bnd
 * dountry (rfgion) dodfs of two to thrff dhbrbdtfrs, bnd in
 * pbrtidulbr, thrff-lfttfr lbngubgf dodfs bnd thrff-digit rfgion
 * dodfs bs spfdififd in thf IANA Lbngubgf Subtbg Rfgistry.  For
 * dompbtibility, thf implfmfntbtion still dofs not imposf b lfngth
 * donstrbint.
 *
 * @sff Buildfr
 * @sff RfsourdfBundlf
 * @sff jbvb.tfxt.Formbt
 * @sff jbvb.tfxt.NumbfrFormbt
 * @sff jbvb.tfxt.Collbtor
 * @buthor Mbrk Dbvis
 * @sindf 1.1
 */
publid finbl dlbss Lodblf implfmfnts Clonfbblf, Sfriblizbblf {

    stbtid privbtf finbl  Cbdhf LOCALECACHE = nfw Cbdhf();

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf ENGLISH = drfbtfConstbnt("fn", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf FRENCH = drfbtfConstbnt("fr", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf GERMAN = drfbtfConstbnt("df", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf ITALIAN = drfbtfConstbnt("it", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf JAPANESE = drfbtfConstbnt("jb", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf KOREAN = drfbtfConstbnt("ko", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf CHINESE = drfbtfConstbnt("zh", "");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf SIMPLIFIED_CHINESE = drfbtfConstbnt("zh", "CN");

    /** Usfful donstbnt for lbngubgf.
     */
    stbtid publid finbl Lodblf TRADITIONAL_CHINESE = drfbtfConstbnt("zh", "TW");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf FRANCE = drfbtfConstbnt("fr", "FR");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf GERMANY = drfbtfConstbnt("df", "DE");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf ITALY = drfbtfConstbnt("it", "IT");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf JAPAN = drfbtfConstbnt("jb", "JP");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf KOREA = drfbtfConstbnt("ko", "KR");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf CHINA = SIMPLIFIED_CHINESE;

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf PRC = SIMPLIFIED_CHINESE;

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf TAIWAN = TRADITIONAL_CHINESE;

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf UK = drfbtfConstbnt("fn", "GB");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf US = drfbtfConstbnt("fn", "US");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf CANADA = drfbtfConstbnt("fn", "CA");

    /** Usfful donstbnt for dountry.
     */
    stbtid publid finbl Lodblf CANADA_FRENCH = drfbtfConstbnt("fr", "CA");

    /**
     * Usfful donstbnt for thf root lodblf.  Thf root lodblf is thf lodblf whosf
     * lbngubgf, dountry, bnd vbribnt brf fmpty ("") strings.  This is rfgbrdfd
     * bs thf bbsf lodblf of bll lodblfs, bnd is usfd bs thf lbngubgf/dountry
     * nfutrbl lodblf for thf lodblf sfnsitivf opfrbtions.
     *
     * @sindf 1.6
     */
    stbtid publid finbl Lodblf ROOT = drfbtfConstbnt("", "");

    /**
     * Thf kfy for thf privbtf usf fxtfnsion ('x').
     *
     * @sff #gftExtfnsion(dhbr)
     * @sff Buildfr#sftExtfnsion(dhbr, String)
     * @sindf 1.7
     */
    stbtid publid finbl dhbr PRIVATE_USE_EXTENSION = 'x';

    /**
     * Thf kfy for Unidodf lodblf fxtfnsion ('u').
     *
     * @sff #gftExtfnsion(dhbr)
     * @sff Buildfr#sftExtfnsion(dhbr, String)
     * @sindf 1.7
     */
    stbtid publid finbl dhbr UNICODE_LOCALE_EXTENSION = 'u';

    /** sfriblizbtion ID
     */
    stbtid finbl long sfriblVfrsionUID = 9149081749638150636L;

    /**
     * Displby typfs for rftrifving lodblizfd nbmfs from thf nbmf providfrs.
     */
    privbtf stbtid finbl int DISPLAY_LANGUAGE = 0;
    privbtf stbtid finbl int DISPLAY_COUNTRY  = 1;
    privbtf stbtid finbl int DISPLAY_VARIANT  = 2;
    privbtf stbtid finbl int DISPLAY_SCRIPT   = 3;

    /**
     * Privbtf donstrudtor usfd by gftInstbndf mfthod
     */
    privbtf Lodblf(BbsfLodblf bbsfLodblf, LodblfExtfnsions fxtfnsions) {
        this.bbsfLodblf = bbsfLodblf;
        this.lodblfExtfnsions = fxtfnsions;
    }

    /**
     * Construdt b lodblf from lbngubgf, dountry bnd vbribnt.
     * This donstrudtor normblizfs thf lbngubgf vbluf to lowfrdbsf bnd
     * thf dountry vbluf to uppfrdbsf.
     * <p>
     * <b>Notf:</b>
     * <ul>
     * <li>ISO 639 is not b stbblf stbndbrd; somf of thf lbngubgf dodfs it dffinfs
     * (spfdifidblly "iw", "ji", bnd "in") hbvf dhbngfd.  This donstrudtor bddfpts both thf
     * old dodfs ("iw", "ji", bnd "in") bnd thf nfw dodfs ("hf", "yi", bnd "id"), but bll othfr
     * API on Lodblf will rfturn only thf OLD dodfs.
     * <li>For bbdkwbrd dompbtibility rfbsons, this donstrudtor dofs not mbkf
     * bny syntbdtid dhfdks on thf input.
     * <li>Thf two dbsfs ("jb", "JP", "JP") bnd ("th", "TH", "TH") brf hbndlfd spfdiblly,
     * sff <b hrff="#spfdibl_dbsfs_donstrudtor">Spfdibl Cbsfs</b> for morf informbtion.
     * </ul>
     *
     * @pbrbm lbngubgf An ISO 639 blphb-2 or blphb-3 lbngubgf dodf, or b lbngubgf subtbg
     * up to 8 dhbrbdtfrs in lfngth.  Sff thf <dodf>Lodblf</dodf> dlbss dfsdription bbout
     * vblid lbngubgf vblufs.
     * @pbrbm dountry An ISO 3166 blphb-2 dountry dodf or b UN M.49 numfrid-3 brfb dodf.
     * Sff thf <dodf>Lodblf</dodf> dlbss dfsdription bbout vblid dountry vblufs.
     * @pbrbm vbribnt Any brbitrbry vbluf usfd to indidbtf b vbribtion of b <dodf>Lodblf</dodf>.
     * Sff thf <dodf>Lodblf</dodf> dlbss dfsdription for thf dftbils.
     * @fxdfption NullPointfrExdfption thrown if bny brgumfnt is null.
     */
    publid Lodblf(String lbngubgf, String dountry, String vbribnt) {
        if (lbngubgf== null || dountry == null || vbribnt == null) {
            throw nfw NullPointfrExdfption();
        }
        bbsfLodblf = BbsfLodblf.gftInstbndf(donvfrtOldISOCodfs(lbngubgf), "", dountry, vbribnt);
        lodblfExtfnsions = gftCompbtibilityExtfnsions(lbngubgf, "", dountry, vbribnt);
    }

    /**
     * Construdt b lodblf from lbngubgf bnd dountry.
     * This donstrudtor normblizfs thf lbngubgf vbluf to lowfrdbsf bnd
     * thf dountry vbluf to uppfrdbsf.
     * <p>
     * <b>Notf:</b>
     * <ul>
     * <li>ISO 639 is not b stbblf stbndbrd; somf of thf lbngubgf dodfs it dffinfs
     * (spfdifidblly "iw", "ji", bnd "in") hbvf dhbngfd.  This donstrudtor bddfpts both thf
     * old dodfs ("iw", "ji", bnd "in") bnd thf nfw dodfs ("hf", "yi", bnd "id"), but bll othfr
     * API on Lodblf will rfturn only thf OLD dodfs.
     * <li>For bbdkwbrd dompbtibility rfbsons, this donstrudtor dofs not mbkf
     * bny syntbdtid dhfdks on thf input.
     * </ul>
     *
     * @pbrbm lbngubgf An ISO 639 blphb-2 or blphb-3 lbngubgf dodf, or b lbngubgf subtbg
     * up to 8 dhbrbdtfrs in lfngth.  Sff thf <dodf>Lodblf</dodf> dlbss dfsdription bbout
     * vblid lbngubgf vblufs.
     * @pbrbm dountry An ISO 3166 blphb-2 dountry dodf or b UN M.49 numfrid-3 brfb dodf.
     * Sff thf <dodf>Lodblf</dodf> dlbss dfsdription bbout vblid dountry vblufs.
     * @fxdfption NullPointfrExdfption thrown if fithfr brgumfnt is null.
     */
    publid Lodblf(String lbngubgf, String dountry) {
        this(lbngubgf, dountry, "");
    }

    /**
     * Construdt b lodblf from b lbngubgf dodf.
     * This donstrudtor normblizfs thf lbngubgf vbluf to lowfrdbsf.
     * <p>
     * <b>Notf:</b>
     * <ul>
     * <li>ISO 639 is not b stbblf stbndbrd; somf of thf lbngubgf dodfs it dffinfs
     * (spfdifidblly "iw", "ji", bnd "in") hbvf dhbngfd.  This donstrudtor bddfpts both thf
     * old dodfs ("iw", "ji", bnd "in") bnd thf nfw dodfs ("hf", "yi", bnd "id"), but bll othfr
     * API on Lodblf will rfturn only thf OLD dodfs.
     * <li>For bbdkwbrd dompbtibility rfbsons, this donstrudtor dofs not mbkf
     * bny syntbdtid dhfdks on thf input.
     * </ul>
     *
     * @pbrbm lbngubgf An ISO 639 blphb-2 or blphb-3 lbngubgf dodf, or b lbngubgf subtbg
     * up to 8 dhbrbdtfrs in lfngth.  Sff thf <dodf>Lodblf</dodf> dlbss dfsdription bbout
     * vblid lbngubgf vblufs.
     * @fxdfption NullPointfrExdfption thrown if brgumfnt is null.
     * @sindf 1.4
     */
    publid Lodblf(String lbngubgf) {
        this(lbngubgf, "", "");
    }

    /**
     * This mfthod must bf dbllfd only for drfbting thf Lodblf.*
     * donstbnts duf to mbking shortduts.
     */
    privbtf stbtid Lodblf drfbtfConstbnt(String lbng, String dountry) {
        BbsfLodblf bbsf = BbsfLodblf.drfbtfInstbndf(lbng, dountry);
        rfturn gftInstbndf(bbsf, null);
    }

    /**
     * Rfturns b <dodf>Lodblf</dodf> donstrudtfd from thf givfn
     * <dodf>lbngubgf</dodf>, <dodf>dountry</dodf> bnd
     * <dodf>vbribnt</dodf>. If thf sbmf <dodf>Lodblf</dodf> instbndf
     * is bvbilbblf in thf dbdhf, thfn thbt instbndf is
     * rfturnfd. Othfrwisf, b nfw <dodf>Lodblf</dodf> instbndf is
     * drfbtfd bnd dbdhfd.
     *
     * @pbrbm lbngubgf lowfrdbsf 2 to 8 lbngubgf dodf.
     * @pbrbm dountry uppfrdbsf two-lfttfr ISO-3166 dodf bnd numrid-3 UN M.49 brfb dodf.
     * @pbrbm vbribnt vfndor bnd browsfr spfdifid dodf. Sff dlbss dfsdription.
     * @rfturn thf <dodf>Lodblf</dodf> instbndf rfqufstfd
     * @fxdfption NullPointfrExdfption if bny brgumfnt is null.
     */
    stbtid Lodblf gftInstbndf(String lbngubgf, String dountry, String vbribnt) {
        rfturn gftInstbndf(lbngubgf, "", dountry, vbribnt, null);
    }

    stbtid Lodblf gftInstbndf(String lbngubgf, String sdript, String dountry,
                                      String vbribnt, LodblfExtfnsions fxtfnsions) {
        if (lbngubgf== null || sdript == null || dountry == null || vbribnt == null) {
            throw nfw NullPointfrExdfption();
        }

        if (fxtfnsions == null) {
            fxtfnsions = gftCompbtibilityExtfnsions(lbngubgf, sdript, dountry, vbribnt);
        }

        BbsfLodblf bbsflod = BbsfLodblf.gftInstbndf(lbngubgf, sdript, dountry, vbribnt);
        rfturn gftInstbndf(bbsflod, fxtfnsions);
    }

    stbtid Lodblf gftInstbndf(BbsfLodblf bbsflod, LodblfExtfnsions fxtfnsions) {
        LodblfKfy kfy = nfw LodblfKfy(bbsflod, fxtfnsions);
        rfturn LOCALECACHE.gft(kfy);
    }

    privbtf stbtid dlbss Cbdhf fxtfnds LodblfObjfdtCbdhf<LodblfKfy, Lodblf> {
        privbtf Cbdhf() {
        }

        @Ovfrridf
        protfdtfd Lodblf drfbtfObjfdt(LodblfKfy kfy) {
            rfturn nfw Lodblf(kfy.bbsf, kfy.fxts);
        }
    }

    privbtf stbtid finbl dlbss LodblfKfy {
        privbtf finbl BbsfLodblf bbsf;
        privbtf finbl LodblfExtfnsions fxts;
        privbtf finbl int hbsh;

        privbtf LodblfKfy(BbsfLodblf bbsfLodblf, LodblfExtfnsions fxtfnsions) {
            bbsf = bbsfLodblf;
            fxts = fxtfnsions;

            // Cbldulbtf thf hbsh vbluf hfrf bfdbusf it's blwbys usfd.
            int h = bbsf.hbshCodf();
            if (fxts != null) {
                h ^= fxts.hbshCodf();
            }
            hbsh = h;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            if (this == obj) {
                rfturn truf;
            }
            if (!(obj instbndfof LodblfKfy)) {
                rfturn fblsf;
            }
            LodblfKfy othfr = (LodblfKfy)obj;
            if (hbsh != othfr.hbsh || !bbsf.fqubls(othfr.bbsf)) {
                rfturn fblsf;
            }
            if (fxts == null) {
                rfturn othfr.fxts == null;
            }
            rfturn fxts.fqubls(othfr.fxts);
        }

        @Ovfrridf
        publid int hbshCodf() {
            rfturn hbsh;
        }
    }

    /**
     * Gfts thf durrfnt vbluf of thf dffbult lodblf for this instbndf
     * of thf Jbvb Virtubl Mbdhinf.
     * <p>
     * Thf Jbvb Virtubl Mbdhinf sfts thf dffbult lodblf during stbrtup
     * bbsfd on thf host fnvironmfnt. It is usfd by mbny lodblf-sfnsitivf
     * mfthods if no lodblf is fxpliditly spfdififd.
     * It dbn bf dhbngfd using thf
     * {@link #sftDffbult(jbvb.util.Lodblf) sftDffbult} mfthod.
     *
     * @rfturn thf dffbult lodblf for this instbndf of thf Jbvb Virtubl Mbdhinf
     */
    publid stbtid Lodblf gftDffbult() {
        // do not syndhronizf this mfthod - sff 4071298
        rfturn dffbultLodblf;
    }

    /**
     * Gfts thf durrfnt vbluf of thf dffbult lodblf for thf spfdififd Cbtfgory
     * for this instbndf of thf Jbvb Virtubl Mbdhinf.
     * <p>
     * Thf Jbvb Virtubl Mbdhinf sfts thf dffbult lodblf during stbrtup bbsfd
     * on thf host fnvironmfnt. It is usfd by mbny lodblf-sfnsitivf mfthods
     * if no lodblf is fxpliditly spfdififd. It dbn bf dhbngfd using thf
     * sftDffbult(Lodblf.Cbtfgory, Lodblf) mfthod.
     *
     * @pbrbm dbtfgory - thf spfdififd dbtfgory to gft thf dffbult lodblf
     * @throws NullPointfrExdfption - if dbtfgory is null
     * @rfturn thf dffbult lodblf for thf spfdififd Cbtfgory for this instbndf
     *     of thf Jbvb Virtubl Mbdhinf
     * @sff #sftDffbult(Lodblf.Cbtfgory, Lodblf)
     * @sindf 1.7
     */
    publid stbtid Lodblf gftDffbult(Lodblf.Cbtfgory dbtfgory) {
        // do not syndhronizf this mfthod - sff 4071298
        switdh (dbtfgory) {
        dbsf DISPLAY:
            if (dffbultDisplbyLodblf == null) {
                syndhronizfd(Lodblf.dlbss) {
                    if (dffbultDisplbyLodblf == null) {
                        dffbultDisplbyLodblf = initDffbult(dbtfgory);
                    }
                }
            }
            rfturn dffbultDisplbyLodblf;
        dbsf FORMAT:
            if (dffbultFormbtLodblf == null) {
                syndhronizfd(Lodblf.dlbss) {
                    if (dffbultFormbtLodblf == null) {
                        dffbultFormbtLodblf = initDffbult(dbtfgory);
                    }
                }
            }
            rfturn dffbultFormbtLodblf;
        dffbult:
            bssfrt fblsf: "Unknown Cbtfgory";
        }
        rfturn gftDffbult();
    }

    privbtf stbtid Lodblf initDffbult() {
        String lbngubgf, rfgion, sdript, dountry, vbribnt;
        lbngubgf = AddfssControllfr.doPrivilfgfd(
            nfw GftPropfrtyAdtion("usfr.lbngubgf", "fn"));
        // for dompbtibility, dhfdk for old usfr.rfgion propfrty
        rfgion = AddfssControllfr.doPrivilfgfd(
            nfw GftPropfrtyAdtion("usfr.rfgion"));
        if (rfgion != null) {
            // rfgion dbn bf of form dountry, dountry_vbribnt, or _vbribnt
            int i = rfgion.indfxOf('_');
            if (i >= 0) {
                dountry = rfgion.substring(0, i);
                vbribnt = rfgion.substring(i + 1);
            } flsf {
                dountry = rfgion;
                vbribnt = "";
            }
            sdript = "";
        } flsf {
            sdript = AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion("usfr.sdript", ""));
            dountry = AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion("usfr.dountry", ""));
            vbribnt = AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion("usfr.vbribnt", ""));
        }

        rfturn gftInstbndf(lbngubgf, sdript, dountry, vbribnt, null);
    }

    privbtf stbtid Lodblf initDffbult(Lodblf.Cbtfgory dbtfgory) {
        rfturn gftInstbndf(
            AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion(dbtfgory.lbngubgfKfy, dffbultLodblf.gftLbngubgf())),
            AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion(dbtfgory.sdriptKfy, dffbultLodblf.gftSdript())),
            AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion(dbtfgory.dountryKfy, dffbultLodblf.gftCountry())),
            AddfssControllfr.doPrivilfgfd(
                nfw GftPropfrtyAdtion(dbtfgory.vbribntKfy, dffbultLodblf.gftVbribnt())),
            null);
    }

    /**
     * Sfts thf dffbult lodblf for this instbndf of thf Jbvb Virtubl Mbdhinf.
     * This dofs not bfffdt thf host lodblf.
     * <p>
     * If thfrf is b sfdurity mbnbgfr, its <dodf>dhfdkPfrmission</dodf>
     * mfthod is dbllfd with b <dodf>PropfrtyPfrmission("usfr.lbngubgf", "writf")</dodf>
     * pfrmission bfforf thf dffbult lodblf is dhbngfd.
     * <p>
     * Thf Jbvb Virtubl Mbdhinf sfts thf dffbult lodblf during stbrtup
     * bbsfd on thf host fnvironmfnt. It is usfd by mbny lodblf-sfnsitivf
     * mfthods if no lodblf is fxpliditly spfdififd.
     * <p>
     * Sindf dhbnging thf dffbult lodblf mby bfffdt mbny difffrfnt brfbs
     * of fundtionblity, this mfthod should only bf usfd if thf dbllfr
     * is prfpbrfd to rfinitiblizf lodblf-sfnsitivf dodf running
     * within thf sbmf Jbvb Virtubl Mbdhinf.
     * <p>
     * By sftting thf dffbult lodblf with this mfthod, bll of thf dffbult
     * lodblfs for fbdh Cbtfgory brf blso sft to thf spfdififd dffbult lodblf.
     *
     * @throws SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its
     *        <dodf>dhfdkPfrmission</dodf> mfthod dofsn't bllow thf opfrbtion.
     * @throws NullPointfrExdfption if <dodf>nfwLodblf</dodf> is null
     * @pbrbm nfwLodblf thf nfw dffbult lodblf
     * @sff SfdurityMbnbgfr#dhfdkPfrmission
     * @sff jbvb.util.PropfrtyPfrmission
     */
    publid stbtid syndhronizfd void sftDffbult(Lodblf nfwLodblf) {
        sftDffbult(Cbtfgory.DISPLAY, nfwLodblf);
        sftDffbult(Cbtfgory.FORMAT, nfwLodblf);
        dffbultLodblf = nfwLodblf;
    }

    /**
     * Sfts thf dffbult lodblf for thf spfdififd Cbtfgory for this instbndf
     * of thf Jbvb Virtubl Mbdhinf. This dofs not bfffdt thf host lodblf.
     * <p>
     * If thfrf is b sfdurity mbnbgfr, its dhfdkPfrmission mfthod is dbllfd
     * with b PropfrtyPfrmission("usfr.lbngubgf", "writf") pfrmission bfforf
     * thf dffbult lodblf is dhbngfd.
     * <p>
     * Thf Jbvb Virtubl Mbdhinf sfts thf dffbult lodblf during stbrtup bbsfd
     * on thf host fnvironmfnt. It is usfd by mbny lodblf-sfnsitivf mfthods
     * if no lodblf is fxpliditly spfdififd.
     * <p>
     * Sindf dhbnging thf dffbult lodblf mby bfffdt mbny difffrfnt brfbs of
     * fundtionblity, this mfthod should only bf usfd if thf dbllfr is
     * prfpbrfd to rfinitiblizf lodblf-sfnsitivf dodf running within thf
     * sbmf Jbvb Virtubl Mbdhinf.
     *
     * @pbrbm dbtfgory - thf spfdififd dbtfgory to sft thf dffbult lodblf
     * @pbrbm nfwLodblf - thf nfw dffbult lodblf
     * @throws SfdurityExdfption - if b sfdurity mbnbgfr fxists bnd its
     *     dhfdkPfrmission mfthod dofsn't bllow thf opfrbtion.
     * @throws NullPointfrExdfption - if dbtfgory bnd/or nfwLodblf is null
     * @sff SfdurityMbnbgfr#dhfdkPfrmission(jbvb.sfdurity.Pfrmission)
     * @sff PropfrtyPfrmission
     * @sff #gftDffbult(Lodblf.Cbtfgory)
     * @sindf 1.7
     */
    publid stbtid syndhronizfd void sftDffbult(Lodblf.Cbtfgory dbtfgory,
        Lodblf nfwLodblf) {
        if (dbtfgory == null)
            throw nfw NullPointfrExdfption("Cbtfgory dbnnot bf NULL");
        if (nfwLodblf == null)
            throw nfw NullPointfrExdfption("Cbn't sft dffbult lodblf to NULL");

        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) sm.dhfdkPfrmission(nfw PropfrtyPfrmission
                        ("usfr.lbngubgf", "writf"));
        switdh (dbtfgory) {
        dbsf DISPLAY:
            dffbultDisplbyLodblf = nfwLodblf;
            brfbk;
        dbsf FORMAT:
            dffbultFormbtLodblf = nfwLodblf;
            brfbk;
        dffbult:
            bssfrt fblsf: "Unknown Cbtfgory";
        }
    }

    /**
     * Rfturns bn brrby of bll instbllfd lodblfs.
     * Thf rfturnfd brrby rfprfsfnts thf union of lodblfs supportfd
     * by thf Jbvb runtimf fnvironmfnt bnd by instbllfd
     * {@link jbvb.util.spi.LodblfSfrvidfProvidfr LodblfSfrvidfProvidfr}
     * implfmfntbtions.  It must dontbin bt lfbst b <dodf>Lodblf</dodf>
     * instbndf fqubl to {@link jbvb.util.Lodblf#US Lodblf.US}.
     *
     * @rfturn An brrby of instbllfd lodblfs.
     */
    publid stbtid Lodblf[] gftAvbilbblfLodblfs() {
        rfturn LodblfSfrvidfProvidfrPool.gftAllAvbilbblfLodblfs();
    }

    /**
     * Rfturns b list of bll 2-lfttfr dountry dodfs dffinfd in ISO 3166.
     * Cbn bf usfd to drfbtf Lodblfs.
     * <p>
     * <b>Notf:</b> Thf <dodf>Lodblf</dodf> dlbss blso supports othfr dodfs for
     * dountry (rfgion), sudh bs 3-lfttfr numfrid UN M.49 brfb dodfs.
     * Thfrfforf, thf list rfturnfd by this mfthod dofs not dontbin ALL vblid
     * dodfs thbt dbn bf usfd to drfbtf Lodblfs.
     *
     * @rfturn An brrby of ISO 3166 two-lfttfr dountry dodfs.
     */
    publid stbtid String[] gftISOCountrifs() {
        if (isoCountrifs == null) {
            isoCountrifs = gftISO2Tbblf(LodblfISODbtb.isoCountryTbblf);
        }
        String[] rfsult = nfw String[isoCountrifs.lfngth];
        Systfm.brrbydopy(isoCountrifs, 0, rfsult, 0, isoCountrifs.lfngth);
        rfturn rfsult;
    }

    /**
     * Rfturns b list of bll 2-lfttfr lbngubgf dodfs dffinfd in ISO 639.
     * Cbn bf usfd to drfbtf Lodblfs.
     * <p>
     * <b>Notf:</b>
     * <ul>
     * <li>ISO 639 is not b stbblf stbndbrd&mdbsh; somf lbngubgfs' dodfs hbvf dhbngfd.
     * Thf list this fundtion rfturns indludfs both thf nfw bnd thf old dodfs for thf
     * lbngubgfs whosf dodfs hbvf dhbngfd.
     * <li>Thf <dodf>Lodblf</dodf> dlbss blso supports lbngubgf dodfs up to
     * 8 dhbrbdtfrs in lfngth.  Thfrfforf, thf list rfturnfd by this mfthod dofs
     * not dontbin ALL vblid dodfs thbt dbn bf usfd to drfbtf Lodblfs.
     * </ul>
     *
     * @rfturn Am brrby of ISO 639 two-lfttfr lbngubgf dodfs.
     */
    publid stbtid String[] gftISOLbngubgfs() {
        if (isoLbngubgfs == null) {
            isoLbngubgfs = gftISO2Tbblf(LodblfISODbtb.isoLbngubgfTbblf);
        }
        String[] rfsult = nfw String[isoLbngubgfs.lfngth];
        Systfm.brrbydopy(isoLbngubgfs, 0, rfsult, 0, isoLbngubgfs.lfngth);
        rfturn rfsult;
    }

    privbtf stbtid String[] gftISO2Tbblf(String tbblf) {
        int lfn = tbblf.lfngth() / 5;
        String[] isoTbblf = nfw String[lfn];
        for (int i = 0, j = 0; i < lfn; i++, j += 5) {
            isoTbblf[i] = tbblf.substring(j, j + 2);
        }
        rfturn isoTbblf;
    }

    /**
     * Rfturns thf lbngubgf dodf of this Lodblf.
     *
     * <p><b>Notf:</b> ISO 639 is not b stbblf stbndbrd&mdbsh; somf lbngubgfs' dodfs hbvf dhbngfd.
     * Lodblf's donstrudtor rfdognizfs both thf nfw bnd thf old dodfs for thf lbngubgfs
     * whosf dodfs hbvf dhbngfd, but this fundtion blwbys rfturns thf old dodf.  If you
     * wbnt to dhfdk for b spfdifid lbngubgf whosf dodf hbs dhbngfd, don't do
     * <prf>
     * if (lodblf.gftLbngubgf().fqubls("hf")) // BAD!
     *    ...
     * </prf>
     * Instfbd, do
     * <prf>
     * if (lodblf.gftLbngubgf().fqubls(nfw Lodblf("hf").gftLbngubgf()))
     *    ...
     * </prf>
     * @rfturn Thf lbngubgf dodf, or thf fmpty string if nonf is dffinfd.
     * @sff #gftDisplbyLbngubgf
     */
    publid String gftLbngubgf() {
        rfturn bbsfLodblf.gftLbngubgf();
    }

    /**
     * Rfturns thf sdript for this lodblf, whidh should
     * fithfr bf thf fmpty string or bn ISO 15924 4-lfttfr sdript
     * dodf. Thf first lfttfr is uppfrdbsf bnd thf rfst brf
     * lowfrdbsf, for fxbmplf, 'Lbtn', 'Cyrl'.
     *
     * @rfturn Thf sdript dodf, or thf fmpty string if nonf is dffinfd.
     * @sff #gftDisplbySdript
     * @sindf 1.7
     */
    publid String gftSdript() {
        rfturn bbsfLodblf.gftSdript();
    }

    /**
     * Rfturns thf dountry/rfgion dodf for this lodblf, whidh should
     * fithfr bf thf fmpty string, bn uppfrdbsf ISO 3166 2-lfttfr dodf,
     * or b UN M.49 3-digit dodf.
     *
     * @rfturn Thf dountry/rfgion dodf, or thf fmpty string if nonf is dffinfd.
     * @sff #gftDisplbyCountry
     */
    publid String gftCountry() {
        rfturn bbsfLodblf.gftRfgion();
    }

    /**
     * Rfturns thf vbribnt dodf for this lodblf.
     *
     * @rfturn Thf vbribnt dodf, or thf fmpty string if nonf is dffinfd.
     * @sff #gftDisplbyVbribnt
     */
    publid String gftVbribnt() {
        rfturn bbsfLodblf.gftVbribnt();
    }

    /**
     * Rfturns {@dodf truf} if this {@dodf Lodblf} hbs bny <b hrff="#dff_fxtfnsions">
     * fxtfnsions</b>.
     *
     * @rfturn {@dodf truf} if this {@dodf Lodblf} hbs bny fxtfnsions
     * @sindf 1.8
     */
    publid boolfbn hbsExtfnsions() {
        rfturn lodblfExtfnsions != null;
    }

    /**
     * Rfturns b dopy of this {@dodf Lodblf} with no <b hrff="#dff_fxtfnsions">
     * fxtfnsions</b>. If this {@dodf Lodblf} hbs no fxtfnsions, this {@dodf Lodblf}
     * is rfturnfd.
     *
     * @rfturn b dopy of this {@dodf Lodblf} with no fxtfnsions, or {@dodf this}
     *         if {@dodf this} hbs no fxtfnsions
     * @sindf 1.8
     */
    publid Lodblf stripExtfnsions() {
        rfturn hbsExtfnsions() ? Lodblf.gftInstbndf(bbsfLodblf, null) : this;
    }

    /**
     * Rfturns thf fxtfnsion (or privbtf usf) vbluf bssodibtfd with
     * thf spfdififd kfy, or null if thfrf is no fxtfnsion
     * bssodibtfd with thf kfy. To bf wfll-formfd, thf kfy must bf onf
     * of <dodf>[0-9A-Zb-z]</dodf>. Kfys brf dbsf-insfnsitivf, so
     * for fxbmplf 'z' bnd 'Z' rfprfsfnt thf sbmf fxtfnsion.
     *
     * @pbrbm kfy thf fxtfnsion kfy
     * @rfturn Thf fxtfnsion, or null if this lodblf dffinfs no
     * fxtfnsion for thf spfdififd kfy.
     * @throws IllfgblArgumfntExdfption if kfy is not wfll-formfd
     * @sff #PRIVATE_USE_EXTENSION
     * @sff #UNICODE_LOCALE_EXTENSION
     * @sindf 1.7
     */
    publid String gftExtfnsion(dhbr kfy) {
        if (!LodblfExtfnsions.isVblidKfy(kfy)) {
            throw nfw IllfgblArgumfntExdfption("Ill-formfd fxtfnsion kfy: " + kfy);
        }
        rfturn hbsExtfnsions() ? lodblfExtfnsions.gftExtfnsionVbluf(kfy) : null;
    }

    /**
     * Rfturns thf sft of fxtfnsion kfys bssodibtfd with this lodblf, or thf
     * fmpty sft if it hbs no fxtfnsions. Thf rfturnfd sft is unmodifibblf.
     * Thf kfys will bll bf lowfr-dbsf.
     *
     * @rfturn Thf sft of fxtfnsion kfys, or thf fmpty sft if this lodblf hbs
     * no fxtfnsions.
     * @sindf 1.7
     */
    publid Sft<Chbrbdtfr> gftExtfnsionKfys() {
        if (!hbsExtfnsions()) {
            rfturn Collfdtions.fmptySft();
        }
        rfturn lodblfExtfnsions.gftKfys();
    }

    /**
     * Rfturns thf sft of unidodf lodblf bttributfs bssodibtfd with
     * this lodblf, or thf fmpty sft if it hbs no bttributfs. Thf
     * rfturnfd sft is unmodifibblf.
     *
     * @rfturn Thf sft of bttributfs.
     * @sindf 1.7
     */
    publid Sft<String> gftUnidodfLodblfAttributfs() {
        if (!hbsExtfnsions()) {
            rfturn Collfdtions.fmptySft();
        }
        rfturn lodblfExtfnsions.gftUnidodfLodblfAttributfs();
    }

    /**
     * Rfturns thf Unidodf lodblf typf bssodibtfd with thf spfdififd Unidodf lodblf kfy
     * for this lodblf. Rfturns thf fmpty string for kfys thbt brf dffinfd with no typf.
     * Rfturns null if thf kfy is not dffinfd. Kfys brf dbsf-insfnsitivf. Thf kfy must
     * bf two blphbnumfrid dhbrbdtfrs ([0-9b-zA-Z]), or bn IllfgblArgumfntExdfption is
     * thrown.
     *
     * @pbrbm kfy thf Unidodf lodblf kfy
     * @rfturn Thf Unidodf lodblf typf bssodibtfd with thf kfy, or null if thf
     * lodblf dofs not dffinf thf kfy.
     * @throws IllfgblArgumfntExdfption if thf kfy is not wfll-formfd
     * @throws NullPointfrExdfption if <dodf>kfy</dodf> is null
     * @sindf 1.7
     */
    publid String gftUnidodfLodblfTypf(String kfy) {
        if (!isUnidodfExtfnsionKfy(kfy)) {
            throw nfw IllfgblArgumfntExdfption("Ill-formfd Unidodf lodblf kfy: " + kfy);
        }
        rfturn hbsExtfnsions() ? lodblfExtfnsions.gftUnidodfLodblfTypf(kfy) : null;
    }

    /**
     * Rfturns thf sft of Unidodf lodblf kfys dffinfd by this lodblf, or thf fmpty sft if
     * this lodblf hbs nonf.  Thf rfturnfd sft is immutbblf.  Kfys brf bll lowfr dbsf.
     *
     * @rfturn Thf sft of Unidodf lodblf kfys, or thf fmpty sft if this lodblf hbs
     * no Unidodf lodblf kfywords.
     * @sindf 1.7
     */
    publid Sft<String> gftUnidodfLodblfKfys() {
        if (lodblfExtfnsions == null) {
            rfturn Collfdtions.fmptySft();
        }
        rfturn lodblfExtfnsions.gftUnidodfLodblfKfys();
    }

    /**
     * Pbdkbgf lodblf mfthod rfturning thf Lodblf's BbsfLodblf,
     * usfd by RfsourdfBundlf
     * @rfturn bbsf lodblf of this Lodblf
     */
    BbsfLodblf gftBbsfLodblf() {
        rfturn bbsfLodblf;
    }

    /**
     * Pbdkbgf privbtf mfthod rfturning thf Lodblf's LodblfExtfnsions,
     * usfd by RfsourdfBundlf.
     * @rfturn lodblf fxntfions of this Lodblf,
     *         or {@dodf null} if no fxtfnsions brf dffinfd
     */
     LodblfExtfnsions gftLodblfExtfnsions() {
         rfturn lodblfExtfnsions;
     }

    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>Lodblf</dodf>
     * objfdt, donsisting of lbngubgf, dountry, vbribnt, sdript,
     * bnd fxtfnsions bs bflow:
     * <blodkquotf>
     * lbngubgf + "_" + dountry + "_" + (vbribnt + "_#" | "#") + sdript + "-" + fxtfnsions
     * </blodkquotf>
     *
     * Lbngubgf is blwbys lowfr dbsf, dountry is blwbys uppfr dbsf, sdript is blwbys titlf
     * dbsf, bnd fxtfnsions brf blwbys lowfr dbsf.  Extfnsions bnd privbtf usf subtbgs
     * will bf in dbnonidbl ordfr bs fxplbinfd in {@link #toLbngubgfTbg}.
     *
     * <p>Whfn thf lodblf hbs nfithfr sdript nor fxtfnsions, thf rfsult is thf sbmf bs in
     * Jbvb 6 bnd prior.
     *
     * <p>If both thf lbngubgf bnd dountry fiflds brf missing, this fundtion will rfturn
     * thf fmpty string, fvfn if thf vbribnt, sdript, or fxtfnsions fifld is prfsfnt (you
     * dbn't hbvf b lodblf with just b vbribnt, thf vbribnt must bddompbny b wfll-formfd
     * lbngubgf or dountry dodf).
     *
     * <p>If sdript or fxtfnsions brf prfsfnt bnd vbribnt is missing, no undfrsdorf is
     * bddfd bfforf thf "#".
     *
     * <p>This bfhbvior is dfsignfd to support dfbugging bnd to bf dompbtiblf with
     * prfvious usfs of <dodf>toString</dodf> thbt fxpfdtfd lbngubgf, dountry, bnd vbribnt
     * fiflds only.  To rfprfsfnt b Lodblf bs b String for intfrdhbngf purposfs, usf
     * {@link #toLbngubgfTbg}.
     *
     * <p>Exbmplfs: <ul>
     * <li><tt>fn</tt></li>
     * <li><tt>df_DE</tt></li>
     * <li><tt>_GB</tt></li>
     * <li><tt>fn_US_WIN</tt></li>
     * <li><tt>df__POSIX</tt></li>
     * <li><tt>zh_CN_#Hbns</tt></li>
     * <li><tt>zh_TW_#Hbnt-x-jbvb</tt></li>
     * <li><tt>th_TH_TH_#u-nu-thbi</tt></li></ul>
     *
     * @rfturn A string rfprfsfntbtion of thf Lodblf, for dfbugging.
     * @sff #gftDisplbyNbmf
     * @sff #toLbngubgfTbg
     */
    @Ovfrridf
    publid finbl String toString() {
        boolfbn l = (bbsfLodblf.gftLbngubgf().lfngth() != 0);
        boolfbn s = (bbsfLodblf.gftSdript().lfngth() != 0);
        boolfbn r = (bbsfLodblf.gftRfgion().lfngth() != 0);
        boolfbn v = (bbsfLodblf.gftVbribnt().lfngth() != 0);
        boolfbn f = (lodblfExtfnsions != null && lodblfExtfnsions.gftID().lfngth() != 0);

        StringBuildfr rfsult = nfw StringBuildfr(bbsfLodblf.gftLbngubgf());
        if (r || (l && (v || s || f))) {
            rfsult.bppfnd('_')
                .bppfnd(bbsfLodblf.gftRfgion()); // This mby just bppfnd '_'
        }
        if (v && (l || r)) {
            rfsult.bppfnd('_')
                .bppfnd(bbsfLodblf.gftVbribnt());
        }

        if (s && (l || r)) {
            rfsult.bppfnd("_#")
                .bppfnd(bbsfLodblf.gftSdript());
        }

        if (f && (l || r)) {
            rfsult.bppfnd('_');
            if (!s) {
                rfsult.bppfnd('#');
            }
            rfsult.bppfnd(lodblfExtfnsions.gftID());
        }

        rfturn rfsult.toString();
    }

    /**
     * Rfturns b wfll-formfd IETF BCP 47 lbngubgf tbg rfprfsfnting
     * this lodblf.
     *
     * <p>If this <dodf>Lodblf</dodf> hbs b lbngubgf, dountry, or
     * vbribnt thbt dofs not sbtisfy thf IETF BCP 47 lbngubgf tbg
     * syntbx rfquirfmfnts, this mfthod hbndlfs thfsf fiflds bs
     * dfsdribfd bflow:
     *
     * <p><b>Lbngubgf:</b> If lbngubgf is fmpty, or not <b
     * hrff="#dff_lbngubgf" >wfll-formfd</b> (for fxbmplf "b" or
     * "f2"), it will bf fmittfd bs "und" (Undftfrminfd).
     *
     * <p><b>Country:</b> If dountry is not <b
     * hrff="#dff_rfgion">wfll-formfd</b> (for fxbmplf "12" or "USA"),
     * it will bf omittfd.
     *
     * <p><b>Vbribnt:</b> If vbribnt <b>is</b> <b
     * hrff="#dff_vbribnt">wfll-formfd</b>, fbdh sub-sfgmfnt
     * (dflimitfd by '-' or '_') is fmittfd bs b subtbg.  Othfrwisf:
     * <ul>
     *
     * <li>if bll sub-sfgmfnts mbtdh <dodf>[0-9b-zA-Z]{1,8}</dodf>
     * (for fxbmplf "WIN" or "Orbdlf_JDK_Stbndbrd_Edition"), thf first
     * ill-formfd sub-sfgmfnt bnd bll following will bf bppfndfd to
     * thf privbtf usf subtbg.  Thf first bppfndfd subtbg will bf
     * "lvbribnt", followfd by thf sub-sfgmfnts in ordfr, sfpbrbtfd by
     * hyphfn. For fxbmplf, "x-lvbribnt-WIN",
     * "Orbdlf-x-lvbribnt-JDK-Stbndbrd-Edition".
     *
     * <li>if bny sub-sfgmfnt dofs not mbtdh
     * <dodf>[0-9b-zA-Z]{1,8}</dodf>, thf vbribnt will bf trundbtfd
     * bnd thf problfmbtid sub-sfgmfnt bnd bll following sub-sfgmfnts
     * will bf omittfd.  If thf rfmbindfr is non-fmpty, it will bf
     * fmittfd bs b privbtf usf subtbg bs bbovf (fvfn if thf rfmbindfr
     * turns out to bf wfll-formfd).  For fxbmplf,
     * "Solbris_isjustthfdoolfstthing" is fmittfd bs
     * "x-lvbribnt-Solbris", not bs "solbris".</li></ul>
     *
     * <p><b>Spfdibl Convfrsions:</b> Jbvb supports somf old lodblf
     * rfprfsfntbtions, indluding dfprfdbtfd ISO lbngubgf dodfs,
     * for dompbtibility. This mfthod pfrforms thf following
     * donvfrsions:
     * <ul>
     *
     * <li>Dfprfdbtfd ISO lbngubgf dodfs "iw", "ji", bnd "in" brf
     * donvfrtfd to "hf", "yi", bnd "id", rfspfdtivfly.
     *
     * <li>A lodblf with lbngubgf "no", dountry "NO", bnd vbribnt
     * "NY", rfprfsfnting Norwfgibn Nynorsk (Norwby), is donvfrtfd
     * to b lbngubgf tbg "nn-NO".</li></ul>
     *
     * <p><b>Notf:</b> Although thf lbngubgf tbg drfbtfd by this
     * mfthod is wfll-formfd (sbtisfifs thf syntbx rfquirfmfnts
     * dffinfd by thf IETF BCP 47 spfdifidbtion), it is not
     * nfdfssbrily b vblid BCP 47 lbngubgf tbg.  For fxbmplf,
     * <prf>
     *   nfw Lodblf("xx", "YY").toLbngubgfTbg();</prf>
     *
     * will rfturn "xx-YY", but thf lbngubgf subtbg "xx" bnd thf
     * rfgion subtbg "YY" brf invblid bfdbusf thfy brf not rfgistfrfd
     * in thf IANA Lbngubgf Subtbg Rfgistry.
     *
     * @rfturn b BCP47 lbngubgf tbg rfprfsfnting thf lodblf
     * @sff #forLbngubgfTbg(String)
     * @sindf 1.7
     */
    publid String toLbngubgfTbg() {
        if (lbngubgfTbg != null) {
            rfturn lbngubgfTbg;
        }

        LbngubgfTbg tbg = LbngubgfTbg.pbrsfLodblf(bbsfLodblf, lodblfExtfnsions);
        StringBuildfr buf = nfw StringBuildfr();

        String subtbg = tbg.gftLbngubgf();
        if (subtbg.lfngth() > 0) {
            buf.bppfnd(LbngubgfTbg.dbnonidblizfLbngubgf(subtbg));
        }

        subtbg = tbg.gftSdript();
        if (subtbg.lfngth() > 0) {
            buf.bppfnd(LbngubgfTbg.SEP);
            buf.bppfnd(LbngubgfTbg.dbnonidblizfSdript(subtbg));
        }

        subtbg = tbg.gftRfgion();
        if (subtbg.lfngth() > 0) {
            buf.bppfnd(LbngubgfTbg.SEP);
            buf.bppfnd(LbngubgfTbg.dbnonidblizfRfgion(subtbg));
        }

        List<String>subtbgs = tbg.gftVbribnts();
        for (String s : subtbgs) {
            buf.bppfnd(LbngubgfTbg.SEP);
            // prfsfrvf dbsing
            buf.bppfnd(s);
        }

        subtbgs = tbg.gftExtfnsions();
        for (String s : subtbgs) {
            buf.bppfnd(LbngubgfTbg.SEP);
            buf.bppfnd(LbngubgfTbg.dbnonidblizfExtfnsion(s));
        }

        subtbg = tbg.gftPrivbtfusf();
        if (subtbg.lfngth() > 0) {
            if (buf.lfngth() > 0) {
                buf.bppfnd(LbngubgfTbg.SEP);
            }
            buf.bppfnd(LbngubgfTbg.PRIVATEUSE).bppfnd(LbngubgfTbg.SEP);
            // prfsfrvf dbsing
            buf.bppfnd(subtbg);
        }

        String lbngTbg = buf.toString();
        syndhronizfd (this) {
            if (lbngubgfTbg == null) {
                lbngubgfTbg = lbngTbg;
            }
        }
        rfturn lbngubgfTbg;
    }

    /**
     * Rfturns b lodblf for thf spfdififd IETF BCP 47 lbngubgf tbg string.
     *
     * <p>If thf spfdififd lbngubgf tbg dontbins bny ill-formfd subtbgs,
     * thf first sudh subtbg bnd bll following subtbgs brf ignorfd.  Compbrf
     * to {@link Lodblf.Buildfr#sftLbngubgfTbg} whidh throws bn fxdfption
     * in this dbsf.
     *
     * <p>Thf following <b>donvfrsions</b> brf pfrformfd:<ul>
     *
     * <li>Thf lbngubgf dodf "und" is mbppfd to lbngubgf "".
     *
     * <li>Thf lbngubgf dodfs "hf", "yi", bnd "id" brf mbppfd to "iw",
     * "ji", bnd "in" rfspfdtivfly. (This is thf sbmf dbnonidblizbtion
     * thbt's donf in Lodblf's donstrudtors.)
     *
     * <li>Thf portion of b privbtf usf subtbg prffixfd by "lvbribnt",
     * if bny, is rfmovfd bnd bppfndfd to thf vbribnt fifld in thf
     * rfsult lodblf (without dbsf normblizbtion).  If it is thfn
     * fmpty, thf privbtf usf subtbg is disdbrdfd:
     *
     * <prf>
     *     Lodblf lod;
     *     lod = Lodblf.forLbngubgfTbg("fn-US-x-lvbribnt-POSIX");
     *     lod.gftVbribnt(); // rfturns "POSIX"
     *     lod.gftExtfnsion('x'); // rfturns null
     *
     *     lod = Lodblf.forLbngubgfTbg("df-POSIX-x-URP-lvbribnt-Abd-Dff");
     *     lod.gftVbribnt(); // rfturns "POSIX_Abd_Dff"
     *     lod.gftExtfnsion('x'); // rfturns "urp"
     * </prf>
     *
     * <li>Whfn thf lbngubgfTbg brgumfnt dontbins bn fxtlbng subtbg,
     * thf first sudh subtbg is usfd bs thf lbngubgf, bnd thf primbry
     * lbngubgf subtbg bnd othfr fxtlbng subtbgs brf ignorfd:
     *
     * <prf>
     *     Lodblf.forLbngubgfTbg("br-bbo").gftLbngubgf(); // rfturns "bbo"
     *     Lodblf.forLbngubgfTbg("fn-bbd-dff-us").toString(); // rfturns "bbd_US"
     * </prf>
     *
     * <li>Cbsf is normblizfd fxdfpt for vbribnt tbgs, whidh brf lfft
     * undhbngfd.  Lbngubgf is normblizfd to lowfr dbsf, sdript to
     * titlf dbsf, dountry to uppfr dbsf, bnd fxtfnsions to lowfr
     * dbsf.
     *
     * <li>If, bftfr prodfssing, thf lodblf would fxbdtly mbtdh fithfr
     * jb_JP_JP or th_TH_TH with no fxtfnsions, thf bppropribtf
     * fxtfnsions brf bddfd bs though thf donstrudtor hbd bffn dbllfd:
     *
     * <prf>
     *    Lodblf.forLbngubgfTbg("jb-JP-x-lvbribnt-JP").toLbngubgfTbg();
     *    // rfturns "jb-JP-u-db-jbpbnfsf-x-lvbribnt-JP"
     *    Lodblf.forLbngubgfTbg("th-TH-x-lvbribnt-TH").toLbngubgfTbg();
     *    // rfturns "th-TH-u-nu-thbi-x-lvbribnt-TH"
     * </prf></ul>
     *
     * <p>This implfmfnts thf 'Lbngubgf-Tbg' produdtion of BCP47, bnd
     * so supports grbndfbthfrfd (rfgulbr bnd irrfgulbr) bs wfll bs
     * privbtf usf lbngubgf tbgs.  Stbnd blonf privbtf usf tbgs brf
     * rfprfsfntfd bs fmpty lbngubgf bnd fxtfnsion 'x-whbtfvfr',
     * bnd grbndfbthfrfd tbgs brf donvfrtfd to thfir dbnonidbl rfplbdfmfnts
     * whfrf thfy fxist.
     *
     * <p>Grbndfbthfrfd tbgs with dbnonidbl rfplbdfmfnts brf bs follows:
     *
     * <tbblf summbry="Grbndfbthfrfd tbgs with dbnonidbl rfplbdfmfnts">
     * <tbody blign="dfntfr">
     * <tr><th>grbndfbthfrfd tbg</th><th>&nbsp;</th><th>modfrn rfplbdfmfnt</th></tr>
     * <tr><td>brt-lojbbn</td><td>&nbsp;</td><td>jbo</td></tr>
     * <tr><td>i-bmi</td><td>&nbsp;</td><td>bmi</td></tr>
     * <tr><td>i-bnn</td><td>&nbsp;</td><td>bnn</td></tr>
     * <tr><td>i-hbk</td><td>&nbsp;</td><td>hbk</td></tr>
     * <tr><td>i-klingon</td><td>&nbsp;</td><td>tlh</td></tr>
     * <tr><td>i-lux</td><td>&nbsp;</td><td>lb</td></tr>
     * <tr><td>i-nbvbjo</td><td>&nbsp;</td><td>nv</td></tr>
     * <tr><td>i-pwn</td><td>&nbsp;</td><td>pwn</td></tr>
     * <tr><td>i-tbo</td><td>&nbsp;</td><td>tbo</td></tr>
     * <tr><td>i-tby</td><td>&nbsp;</td><td>tby</td></tr>
     * <tr><td>i-tsu</td><td>&nbsp;</td><td>tsu</td></tr>
     * <tr><td>no-bok</td><td>&nbsp;</td><td>nb</td></tr>
     * <tr><td>no-nyn</td><td>&nbsp;</td><td>nn</td></tr>
     * <tr><td>sgn-BE-FR</td><td>&nbsp;</td><td>sfb</td></tr>
     * <tr><td>sgn-BE-NL</td><td>&nbsp;</td><td>vgt</td></tr>
     * <tr><td>sgn-CH-DE</td><td>&nbsp;</td><td>sgg</td></tr>
     * <tr><td>zh-guoyu</td><td>&nbsp;</td><td>dmn</td></tr>
     * <tr><td>zh-hbkkb</td><td>&nbsp;</td><td>hbk</td></tr>
     * <tr><td>zh-min-nbn</td><td>&nbsp;</td><td>nbn</td></tr>
     * <tr><td>zh-xibng</td><td>&nbsp;</td><td>hsn</td></tr>
     * </tbody>
     * </tbblf>
     *
     * <p>Grbndfbthfrfd tbgs with no modfrn rfplbdfmfnt will bf
     * donvfrtfd bs follows:
     *
     * <tbblf summbry="Grbndfbthfrfd tbgs with no modfrn rfplbdfmfnt">
     * <tbody blign="dfntfr">
     * <tr><th>grbndfbthfrfd tbg</th><th>&nbsp;</th><th>donvfrts to</th></tr>
     * <tr><td>dfl-gbulish</td><td>&nbsp;</td><td>xtg-x-dfl-gbulish</td></tr>
     * <tr><td>fn-GB-ofd</td><td>&nbsp;</td><td>fn-GB-x-ofd</td></tr>
     * <tr><td>i-dffbult</td><td>&nbsp;</td><td>fn-x-i-dffbult</td></tr>
     * <tr><td>i-fnodhibn</td><td>&nbsp;</td><td>und-x-i-fnodhibn</td></tr>
     * <tr><td>i-mingo</td><td>&nbsp;</td><td>sff-x-i-mingo</td></tr>
     * <tr><td>zh-min</td><td>&nbsp;</td><td>nbn-x-zh-min</td></tr>
     * </tbody>
     * </tbblf>
     *
     * <p>For b list of bll grbndfbthfrfd tbgs, sff thf
     * IANA Lbngubgf Subtbg Rfgistry (sfbrdh for "Typf: grbndfbthfrfd").
     *
     * <p><b>Notf</b>: thfrf is no gubrbntff thbt <dodf>toLbngubgfTbg</dodf>
     * bnd <dodf>forLbngubgfTbg</dodf> will round-trip.
     *
     * @pbrbm lbngubgfTbg thf lbngubgf tbg
     * @rfturn Thf lodblf thbt bfst rfprfsfnts thf lbngubgf tbg.
     * @throws NullPointfrExdfption if <dodf>lbngubgfTbg</dodf> is <dodf>null</dodf>
     * @sff #toLbngubgfTbg()
     * @sff jbvb.util.Lodblf.Buildfr#sftLbngubgfTbg(String)
     * @sindf 1.7
     */
    publid stbtid Lodblf forLbngubgfTbg(String lbngubgfTbg) {
        LbngubgfTbg tbg = LbngubgfTbg.pbrsf(lbngubgfTbg, null);
        IntfrnblLodblfBuildfr bldr = nfw IntfrnblLodblfBuildfr();
        bldr.sftLbngubgfTbg(tbg);
        BbsfLodblf bbsf = bldr.gftBbsfLodblf();
        LodblfExtfnsions fxts = bldr.gftLodblfExtfnsions();
        if (fxts == null && bbsf.gftVbribnt().lfngth() > 0) {
            fxts = gftCompbtibilityExtfnsions(bbsf.gftLbngubgf(), bbsf.gftSdript(),
                                              bbsf.gftRfgion(), bbsf.gftVbribnt());
        }
        rfturn gftInstbndf(bbsf, fxts);
    }

    /**
     * Rfturns b thrff-lfttfr bbbrfvibtion of this lodblf's lbngubgf.
     * If thf lbngubgf mbtdhfs bn ISO 639-1 two-lfttfr dodf, thf
     * dorrfsponding ISO 639-2/T thrff-lfttfr lowfrdbsf dodf is
     * rfturnfd.  Thf ISO 639-2 lbngubgf dodfs dbn bf found on-linf,
     * sff "Codfs for thf Rfprfsfntbtion of Nbmfs of Lbngubgfs Pbrt 2:
     * Alphb-3 Codf".  If thf lodblf spfdififs b thrff-lfttfr
     * lbngubgf, thf lbngubgf is rfturnfd bs is.  If thf lodblf dofs
     * not spfdify b lbngubgf thf fmpty string is rfturnfd.
     *
     * @rfturn A thrff-lfttfr bbbrfvibtion of this lodblf's lbngubgf.
     * @fxdfption MissingRfsourdfExdfption Throws MissingRfsourdfExdfption if
     * thrff-lfttfr lbngubgf bbbrfvibtion is not bvbilbblf for this lodblf.
     */
    publid String gftISO3Lbngubgf() throws MissingRfsourdfExdfption {
        String lbng = bbsfLodblf.gftLbngubgf();
        if (lbng.lfngth() == 3) {
            rfturn lbng;
        }

        String lbngubgf3 = gftISO3Codf(lbng, LodblfISODbtb.isoLbngubgfTbblf);
        if (lbngubgf3 == null) {
            throw nfw MissingRfsourdfExdfption("Couldn't find 3-lfttfr lbngubgf dodf for "
                    + lbng, "FormbtDbtb_" + toString(), "ShortLbngubgf");
        }
        rfturn lbngubgf3;
    }

    /**
     * Rfturns b thrff-lfttfr bbbrfvibtion for this lodblf's dountry.
     * If thf dountry mbtdhfs bn ISO 3166-1 blphb-2 dodf, thf
     * dorrfsponding ISO 3166-1 blphb-3 uppfrdbsf dodf is rfturnfd.
     * If thf lodblf dofsn't spfdify b dountry, this will bf thf fmpty
     * string.
     *
     * <p>Thf ISO 3166-1 dodfs dbn bf found on-linf.
     *
     * @rfturn A thrff-lfttfr bbbrfvibtion of this lodblf's dountry.
     * @fxdfption MissingRfsourdfExdfption Throws MissingRfsourdfExdfption if thf
     * thrff-lfttfr dountry bbbrfvibtion is not bvbilbblf for this lodblf.
     */
    publid String gftISO3Country() throws MissingRfsourdfExdfption {
        String dountry3 = gftISO3Codf(bbsfLodblf.gftRfgion(), LodblfISODbtb.isoCountryTbblf);
        if (dountry3 == null) {
            throw nfw MissingRfsourdfExdfption("Couldn't find 3-lfttfr dountry dodf for "
                    + bbsfLodblf.gftRfgion(), "FormbtDbtb_" + toString(), "ShortCountry");
        }
        rfturn dountry3;
    }

    privbtf stbtid String gftISO3Codf(String iso2Codf, String tbblf) {
        int dodfLfngth = iso2Codf.lfngth();
        if (dodfLfngth == 0) {
            rfturn "";
        }

        int tbblfLfngth = tbblf.lfngth();
        int indfx = tbblfLfngth;
        if (dodfLfngth == 2) {
            dhbr d1 = iso2Codf.dhbrAt(0);
            dhbr d2 = iso2Codf.dhbrAt(1);
            for (indfx = 0; indfx < tbblfLfngth; indfx += 5) {
                if (tbblf.dhbrAt(indfx) == d1
                    && tbblf.dhbrAt(indfx + 1) == d2) {
                    brfbk;
                }
            }
        }
        rfturn indfx < tbblfLfngth ? tbblf.substring(indfx + 2, indfx + 5) : null;
    }

    /**
     * Rfturns b nbmf for thf lodblf's lbngubgf thbt is bppropribtf for displby to thf
     * usfr.
     * If possiblf, thf nbmf rfturnfd will bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf.
     * For fxbmplf, if thf lodblf is fr_FR bnd thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf
     * is fn_US, gftDisplbyLbngubgf() will rfturn "Frfndh"; if thf lodblf is fn_US bnd
     * thf dffbult {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf is fr_FR,
     * gftDisplbyLbngubgf() will rfturn "bnglbis".
     * If thf nbmf rfturnfd dbnnot bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf,
     * (sby, wf don't hbvf b Jbpbnfsf nbmf for Crobtibn),
     * this fundtion fblls bbdk on thf English nbmf, bnd usfs thf ISO dodf bs b lbst-rfsort
     * vbluf.  If thf lodblf dofsn't spfdify b lbngubgf, this fundtion rfturns thf fmpty string.
     *
     * @rfturn Thf nbmf of thf displby lbngubgf.
     */
    publid finbl String gftDisplbyLbngubgf() {
        rfturn gftDisplbyLbngubgf(gftDffbult(Cbtfgory.DISPLAY));
    }

    /**
     * Rfturns b nbmf for thf lodblf's lbngubgf thbt is bppropribtf for displby to thf
     * usfr.
     * If possiblf, thf nbmf rfturnfd will bf lodblizfd bddording to inLodblf.
     * For fxbmplf, if thf lodblf is fr_FR bnd inLodblf
     * is fn_US, gftDisplbyLbngubgf() will rfturn "Frfndh"; if thf lodblf is fn_US bnd
     * inLodblf is fr_FR, gftDisplbyLbngubgf() will rfturn "bnglbis".
     * If thf nbmf rfturnfd dbnnot bf lodblizfd bddording to inLodblf,
     * (sby, wf don't hbvf b Jbpbnfsf nbmf for Crobtibn),
     * this fundtion fblls bbdk on thf English nbmf, bnd finblly
     * on thf ISO dodf bs b lbst-rfsort vbluf.  If thf lodblf dofsn't spfdify b lbngubgf,
     * this fundtion rfturns thf fmpty string.
     *
     * @pbrbm inLodblf Thf lodblf for whidh to rftrifvf thf displby lbngubgf.
     * @rfturn Thf nbmf of thf displby lbngubgf bppropribtf to thf givfn lodblf.
     * @fxdfption NullPointfrExdfption if <dodf>inLodblf</dodf> is <dodf>null</dodf>
     */
    publid String gftDisplbyLbngubgf(Lodblf inLodblf) {
        rfturn gftDisplbyString(bbsfLodblf.gftLbngubgf(), inLodblf, DISPLAY_LANGUAGE);
    }

    /**
     * Rfturns b nbmf for thf thf lodblf's sdript thbt is bppropribtf for displby to
     * thf usfr. If possiblf, thf nbmf will bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf.  Rfturns
     * thf fmpty string if this lodblf dofsn't spfdify b sdript dodf.
     *
     * @rfturn thf displby nbmf of thf sdript dodf for thf durrfnt dffbult
     *     {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf
     * @sindf 1.7
     */
    publid String gftDisplbySdript() {
        rfturn gftDisplbySdript(gftDffbult(Cbtfgory.DISPLAY));
    }

    /**
     * Rfturns b nbmf for thf lodblf's sdript thbt is bppropribtf
     * for displby to thf usfr. If possiblf, thf nbmf will bf
     * lodblizfd for thf givfn lodblf. Rfturns thf fmpty string if
     * this lodblf dofsn't spfdify b sdript dodf.
     *
     * @pbrbm inLodblf Thf lodblf for whidh to rftrifvf thf displby sdript.
     * @rfturn thf displby nbmf of thf sdript dodf for thf durrfnt dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf
     * @throws NullPointfrExdfption if <dodf>inLodblf</dodf> is <dodf>null</dodf>
     * @sindf 1.7
     */
    publid String gftDisplbySdript(Lodblf inLodblf) {
        rfturn gftDisplbyString(bbsfLodblf.gftSdript(), inLodblf, DISPLAY_SCRIPT);
    }

    /**
     * Rfturns b nbmf for thf lodblf's dountry thbt is bppropribtf for displby to thf
     * usfr.
     * If possiblf, thf nbmf rfturnfd will bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf.
     * For fxbmplf, if thf lodblf is fr_FR bnd thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf
     * is fn_US, gftDisplbyCountry() will rfturn "Frbndf"; if thf lodblf is fn_US bnd
     * thf dffbult {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf is fr_FR,
     * gftDisplbyCountry() will rfturn "Etbts-Unis".
     * If thf nbmf rfturnfd dbnnot bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf,
     * (sby, wf don't hbvf b Jbpbnfsf nbmf for Crobtib),
     * this fundtion fblls bbdk on thf English nbmf, bnd usfs thf ISO dodf bs b lbst-rfsort
     * vbluf.  If thf lodblf dofsn't spfdify b dountry, this fundtion rfturns thf fmpty string.
     *
     * @rfturn Thf nbmf of thf dountry bppropribtf to thf lodblf.
     */
    publid finbl String gftDisplbyCountry() {
        rfturn gftDisplbyCountry(gftDffbult(Cbtfgory.DISPLAY));
    }

    /**
     * Rfturns b nbmf for thf lodblf's dountry thbt is bppropribtf for displby to thf
     * usfr.
     * If possiblf, thf nbmf rfturnfd will bf lodblizfd bddording to inLodblf.
     * For fxbmplf, if thf lodblf is fr_FR bnd inLodblf
     * is fn_US, gftDisplbyCountry() will rfturn "Frbndf"; if thf lodblf is fn_US bnd
     * inLodblf is fr_FR, gftDisplbyCountry() will rfturn "Etbts-Unis".
     * If thf nbmf rfturnfd dbnnot bf lodblizfd bddording to inLodblf.
     * (sby, wf don't hbvf b Jbpbnfsf nbmf for Crobtib),
     * this fundtion fblls bbdk on thf English nbmf, bnd finblly
     * on thf ISO dodf bs b lbst-rfsort vbluf.  If thf lodblf dofsn't spfdify b dountry,
     * this fundtion rfturns thf fmpty string.
     *
     * @pbrbm inLodblf Thf lodblf for whidh to rftrifvf thf displby dountry.
     * @rfturn Thf nbmf of thf dountry bppropribtf to thf givfn lodblf.
     * @fxdfption NullPointfrExdfption if <dodf>inLodblf</dodf> is <dodf>null</dodf>
     */
    publid String gftDisplbyCountry(Lodblf inLodblf) {
        rfturn gftDisplbyString(bbsfLodblf.gftRfgion(), inLodblf, DISPLAY_COUNTRY);
    }

    privbtf String gftDisplbyString(String dodf, Lodblf inLodblf, int typf) {
        if (dodf.lfngth() == 0) {
            rfturn "";
        }

        if (inLodblf == null) {
            throw nfw NullPointfrExdfption();
        }

        LodblfSfrvidfProvidfrPool pool =
            LodblfSfrvidfProvidfrPool.gftPool(LodblfNbmfProvidfr.dlbss);
        String kfy = (typf == DISPLAY_VARIANT ? "%%"+dodf : dodf);
        String rfsult = pool.gftLodblizfdObjfdt(
                                LodblfNbmfGfttfr.INSTANCE,
                                inLodblf, kfy, typf, dodf);
            if (rfsult != null) {
                rfturn rfsult;
            }

        rfturn dodf;
    }

    /**
     * Rfturns b nbmf for thf lodblf's vbribnt dodf thbt is bppropribtf for displby to thf
     * usfr.  If possiblf, thf nbmf will bf lodblizfd for thf dffbult
     * {@link Lodblf.Cbtfgory#DISPLAY DISPLAY} lodblf.  If thf lodblf
     * dofsn't spfdify b vbribnt dodf, this fundtion rfturns thf fmpty string.
     *
     * @rfturn Thf nbmf of thf displby vbribnt dodf bppropribtf to thf lodblf.
     */
    publid finbl String gftDisplbyVbribnt() {
        rfturn gftDisplbyVbribnt(gftDffbult(Cbtfgory.DISPLAY));
    }

    /**
     * Rfturns b nbmf for thf lodblf's vbribnt dodf thbt is bppropribtf for displby to thf
     * usfr.  If possiblf, thf nbmf will bf lodblizfd for inLodblf.  If thf lodblf
     * dofsn't spfdify b vbribnt dodf, this fundtion rfturns thf fmpty string.
     *
     * @pbrbm inLodblf Thf lodblf for whidh to rftrifvf thf displby vbribnt dodf.
     * @rfturn Thf nbmf of thf displby vbribnt dodf bppropribtf to thf givfn lodblf.
     * @fxdfption NullPointfrExdfption if <dodf>inLodblf</dodf> is <dodf>null</dodf>
     */
    publid String gftDisplbyVbribnt(Lodblf inLodblf) {
        if (bbsfLodblf.gftVbribnt().lfngth() == 0)
            rfturn "";

        LodblfRfsourdfs lr = LodblfProvidfrAdbptfr.forJRE().gftLodblfRfsourdfs(inLodblf);

        String nbmfs[] = gftDisplbyVbribntArrby(inLodblf);

        // Gft thf lodblizfd pbttfrns for formbtting b list, bnd usf
        // thfm to formbt thf list.
        rfturn formbtList(nbmfs,
                          lr.gftLodblfNbmf("ListPbttfrn"),
                          lr.gftLodblfNbmf("ListCompositionPbttfrn"));
    }

    /**
     * Rfturns b nbmf for thf lodblf thbt is bppropribtf for displby to thf
     * usfr. This will bf thf vblufs rfturnfd by gftDisplbyLbngubgf(),
     * gftDisplbySdript(), gftDisplbyCountry(), bnd gftDisplbyVbribnt() bssfmblfd
     * into b singlf string. Thf thf non-fmpty vblufs brf usfd in ordfr,
     * with thf sfdond bnd subsfqufnt nbmfs in pbrfnthfsfs.  For fxbmplf:
     * <blodkquotf>
     * lbngubgf (sdript, dountry, vbribnt)<br>
     * lbngubgf (dountry)<br>
     * lbngubgf (vbribnt)<br>
     * sdript (dountry)<br>
     * dountry<br>
     * </blodkquotf>
     * dfpfnding on whidh fiflds brf spfdififd in thf lodblf.  If thf
     * lbngubgf, sdript, dountry, bnd vbribnt fiflds brf bll fmpty,
     * this fundtion rfturns thf fmpty string.
     *
     * @rfturn Thf nbmf of thf lodblf bppropribtf to displby.
     */
    publid finbl String gftDisplbyNbmf() {
        rfturn gftDisplbyNbmf(gftDffbult(Cbtfgory.DISPLAY));
    }

    /**
     * Rfturns b nbmf for thf lodblf thbt is bppropribtf for displby
     * to thf usfr.  This will bf thf vblufs rfturnfd by
     * gftDisplbyLbngubgf(), gftDisplbySdript(),gftDisplbyCountry(),
     * bnd gftDisplbyVbribnt() bssfmblfd into b singlf string.
     * Thf non-fmpty vblufs brf usfd in ordfr,
     * with thf sfdond bnd subsfqufnt nbmfs in pbrfnthfsfs.  For fxbmplf:
     * <blodkquotf>
     * lbngubgf (sdript, dountry, vbribnt)<br>
     * lbngubgf (dountry)<br>
     * lbngubgf (vbribnt)<br>
     * sdript (dountry)<br>
     * dountry<br>
     * </blodkquotf>
     * dfpfnding on whidh fiflds brf spfdififd in thf lodblf.  If thf
     * lbngubgf, sdript, dountry, bnd vbribnt fiflds brf bll fmpty,
     * this fundtion rfturns thf fmpty string.
     *
     * @pbrbm inLodblf Thf lodblf for whidh to rftrifvf thf displby nbmf.
     * @rfturn Thf nbmf of thf lodblf bppropribtf to displby.
     * @throws NullPointfrExdfption if <dodf>inLodblf</dodf> is <dodf>null</dodf>
     */
    publid String gftDisplbyNbmf(Lodblf inLodblf) {
        LodblfRfsourdfs lr =  LodblfProvidfrAdbptfr.forJRE().gftLodblfRfsourdfs(inLodblf);

        String lbngubgfNbmf = gftDisplbyLbngubgf(inLodblf);
        String sdriptNbmf = gftDisplbySdript(inLodblf);
        String dountryNbmf = gftDisplbyCountry(inLodblf);
        String[] vbribntNbmfs = gftDisplbyVbribntArrby(inLodblf);

        // Gft thf lodblizfd pbttfrns for formbtting b displby nbmf.
        String displbyNbmfPbttfrn = lr.gftLodblfNbmf("DisplbyNbmfPbttfrn");
        String listPbttfrn = lr.gftLodblfNbmf("ListPbttfrn");
        String listCompositionPbttfrn = lr.gftLodblfNbmf("ListCompositionPbttfrn");

        // Thf displby nbmf donsists of b mbin nbmf, followfd by qublififrs.
        // Typidblly, thf formbt is "MbinNbmf (Qublififr, Qublififr)" but this
        // dfpfnds on whbt pbttfrn is storfd in thf displby lodblf.
        String   mbinNbmf       = null;
        String[] qublififrNbmfs = null;

        // Thf mbin nbmf is thf lbngubgf, or if thfrf is no lbngubgf, thf sdript,
        // thfn if no sdript, thf dountry. If thfrf is no lbngubgf/sdript/dountry
        // (bn bnomblous situbtion) thfn thf displby nbmf is simply thf vbribnt's
        // displby nbmf.
        if (lbngubgfNbmf.lfngth() == 0 && sdriptNbmf.lfngth() == 0 && dountryNbmf.lfngth() == 0) {
            if (vbribntNbmfs.lfngth == 0) {
                rfturn "";
            } flsf {
                rfturn formbtList(vbribntNbmfs, listPbttfrn, listCompositionPbttfrn);
            }
        }
        ArrbyList<String> nbmfs = nfw ArrbyList<>(4);
        if (lbngubgfNbmf.lfngth() != 0) {
            nbmfs.bdd(lbngubgfNbmf);
        }
        if (sdriptNbmf.lfngth() != 0) {
            nbmfs.bdd(sdriptNbmf);
        }
        if (dountryNbmf.lfngth() != 0) {
            nbmfs.bdd(dountryNbmf);
        }
        if (vbribntNbmfs.lfngth != 0) {
            nbmfs.bddAll(Arrbys.bsList(vbribntNbmfs));
        }

        // Thf first onf in thf mbin nbmf
        mbinNbmf = nbmfs.gft(0);

        // Othfrs brf qublififrs
        int numNbmfs = nbmfs.sizf();
        qublififrNbmfs = (numNbmfs > 1) ?
                nbmfs.subList(1, numNbmfs).toArrby(nfw String[numNbmfs - 1]) : nfw String[0];

        // Crfbtf bn brrby whosf first flfmfnt is thf numbfr of rfmbining
        // flfmfnts.  This sfrvfs bs b sflfdtor into b ChoidfFormbt pbttfrn from
        // thf rfsourdf.  Thf sfdond bnd third flfmfnts brf thf mbin nbmf bnd
        // thf qublififr; if thfrf brf no qublififrs, thf third flfmfnt is
        // unusfd by thf formbt pbttfrn.
        Objfdt[] displbyNbmfs = {
            qublififrNbmfs.lfngth != 0 ? 2 : 1,
            mbinNbmf,
            // Wf dould blso just dbll formbtList() bnd hbvf it hbndlf thf fmpty
            // list dbsf, but this is morf fffidifnt, bnd wf wbnt it to bf
            // fffidifnt sindf bll thf lbngubgf-only lodblfs will not hbvf bny
            // qublififrs.
            qublififrNbmfs.lfngth != 0 ? formbtList(qublififrNbmfs, listPbttfrn, listCompositionPbttfrn) : null
        };

        if (displbyNbmfPbttfrn != null) {
            rfturn nfw MfssbgfFormbt(displbyNbmfPbttfrn).formbt(displbyNbmfs);
        }
        flsf {
            // If wf dbnnot gft thf mfssbgf formbt pbttfrn, thfn wf usf b simplf
            // hbrd-dodfd pbttfrn.  This should not oddur in prbdtidf unlfss thf
            // instbllbtion is missing somf dorf filfs (FormbtDbtb ftd.).
            StringBuildfr rfsult = nfw StringBuildfr();
            rfsult.bppfnd((String)displbyNbmfs[1]);
            if (displbyNbmfs.lfngth > 2) {
                rfsult.bppfnd(" (");
                rfsult.bppfnd((String)displbyNbmfs[2]);
                rfsult.bppfnd(')');
            }
            rfturn rfsult.toString();
        }
    }

    /**
     * Ovfrridfs Clonfbblf.
     */
    @Ovfrridf
    publid Objfdt dlonf()
    {
        try {
            Lodblf thbt = (Lodblf)supfr.dlonf();
            rfturn thbt;
        } dbtdh (ClonfNotSupportfdExdfption f) {
            throw nfw IntfrnblError(f);
        }
    }

    /**
     * Ovfrridf hbshCodf.
     * Sindf Lodblfs brf oftfn usfd in hbshtbblfs, dbdhfs thf vbluf
     * for spffd.
     */
    @Ovfrridf
    publid int hbshCodf() {
        int hd = hbshCodfVbluf;
        if (hd == 0) {
            hd = bbsfLodblf.hbshCodf();
            if (lodblfExtfnsions != null) {
                hd ^= lodblfExtfnsions.hbshCodf();
            }
            hbshCodfVbluf = hd;
        }
        rfturn hd;
    }

    // Ovfrridfs

    /**
     * Rfturns truf if this Lodblf is fqubl to bnothfr objfdt.  A Lodblf is
     * dffmfd fqubl to bnothfr Lodblf with idfntidbl lbngubgf, sdript, dountry,
     * vbribnt bnd fxtfnsions, bnd unfqubl to bll othfr objfdts.
     *
     * @rfturn truf if this Lodblf is fqubl to thf spfdififd objfdt.
     */
    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (this == obj)                      // quidk dhfdk
            rfturn truf;
        if (!(obj instbndfof Lodblf))
            rfturn fblsf;
        BbsfLodblf othfrBbsf = ((Lodblf)obj).bbsfLodblf;
        if (!bbsfLodblf.fqubls(othfrBbsf)) {
            rfturn fblsf;
        }
        if (lodblfExtfnsions == null) {
            rfturn ((Lodblf)obj).lodblfExtfnsions == null;
        }
        rfturn lodblfExtfnsions.fqubls(((Lodblf)obj).lodblfExtfnsions);
    }

    // ================= privbtfs =====================================

    privbtf trbnsifnt BbsfLodblf bbsfLodblf;
    privbtf trbnsifnt LodblfExtfnsions lodblfExtfnsions;

    /**
     * Cbldulbtfd hbshdodf
     */
    privbtf trbnsifnt volbtilf int hbshCodfVbluf = 0;

    privbtf volbtilf stbtid Lodblf dffbultLodblf = initDffbult();
    privbtf volbtilf stbtid Lodblf dffbultDisplbyLodblf = null;
    privbtf volbtilf stbtid Lodblf dffbultFormbtLodblf = null;

    privbtf trbnsifnt volbtilf String lbngubgfTbg;

    /**
     * Rfturn bn brrby of thf displby nbmfs of thf vbribnt.
     * @pbrbm bundlf thf RfsourdfBundlf to usf to gft thf displby nbmfs
     * @rfturn bn brrby of displby nbmfs, possiblf of zfro lfngth.
     */
    privbtf String[] gftDisplbyVbribntArrby(Lodblf inLodblf) {
        // Split thf vbribnt nbmf into tokfns sfpbrbtfd by '_'.
        StringTokfnizfr tokfnizfr = nfw StringTokfnizfr(bbsfLodblf.gftVbribnt(), "_");
        String[] nbmfs = nfw String[tokfnizfr.dountTokfns()];

        // For fbdh vbribnt tokfn, lookup thf displby nbmf.  If
        // not found, usf thf vbribnt nbmf itsflf.
        for (int i=0; i<nbmfs.lfngth; ++i) {
            nbmfs[i] = gftDisplbyString(tokfnizfr.nfxtTokfn(),
                                inLodblf, DISPLAY_VARIANT);
        }

        rfturn nbmfs;
    }

    /**
     * Formbt b list using givfn pbttfrn strings.
     * If fithfr of thf pbttfrns is null, thfn b thf list is
     * formbttfd by dondbtfnbtion with thf dflimitfr ','.
     * @pbrbm stringList thf list of strings to bf formbttfd.
     * @pbrbm listPbttfrn should drfbtf b MfssbgfFormbt tbking 0-3 brgumfnts
     * bnd formbtting thfm into b list.
     * @pbrbm listCompositionPbttfrn should tbkf 2 brgumfnts
     * bnd is usfd by domposfList.
     * @rfturn b string rfprfsfnting thf list.
     */
    privbtf stbtid String formbtList(String[] stringList, String listPbttfrn, String listCompositionPbttfrn) {
        // If wf hbvf no list pbttfrns, domposf thf list in b simplf,
        // non-lodblizfd wby.
        if (listPbttfrn == null || listCompositionPbttfrn == null) {
            StringBuildfr rfsult = nfw StringBuildfr();
            for (int i = 0; i < stringList.lfngth; ++i) {
                if (i > 0) {
                    rfsult.bppfnd(',');
                }
                rfsult.bppfnd(stringList[i]);
            }
            rfturn rfsult.toString();
        }

        // Composf thf list down to thrff flfmfnts if nfdfssbry
        if (stringList.lfngth > 3) {
            MfssbgfFormbt formbt = nfw MfssbgfFormbt(listCompositionPbttfrn);
            stringList = domposfList(formbt, stringList);
        }

        // Rfbuild thf brgumfnt list with thf list lfngth bs thf first flfmfnt
        Objfdt[] brgs = nfw Objfdt[stringList.lfngth + 1];
        Systfm.brrbydopy(stringList, 0, brgs, 1, stringList.lfngth);
        brgs[0] = stringList.lfngth;

        // Formbt it using thf pbttfrn in thf rfsourdf
        MfssbgfFormbt formbt = nfw MfssbgfFormbt(listPbttfrn);
        rfturn formbt.formbt(brgs);
    }

    /**
     * Givfn b list of strings, rfturn b list shortfnfd to thrff flfmfnts.
     * Shortfn it by bpplying thf givfn formbt to thf first two flfmfnts
     * rfdursivfly.
     * @pbrbm formbt b formbt whidh tbkfs two brgumfnts
     * @pbrbm list b list of strings
     * @rfturn if thf list is thrff flfmfnts or shortfr, thf sbmf list;
     * othfrwisf, b nfw list of thrff flfmfnts.
     */
    privbtf stbtid String[] domposfList(MfssbgfFormbt formbt, String[] list) {
        if (list.lfngth <= 3) rfturn list;

        // Usf thf givfn formbt to domposf thf first two flfmfnts into onf
        String[] listItfms = { list[0], list[1] };
        String nfwItfm = formbt.formbt(listItfms);

        // Form b nfw list onf flfmfnt shortfr
        String[] nfwList = nfw String[list.lfngth-1];
        Systfm.brrbydopy(list, 2, nfwList, 1, nfwList.lfngth-1);
        nfwList[0] = nfwItfm;

        // Rfdursf
        rfturn domposfList(formbt, nfwList);
    }

    // Duplidbtf of sun.util.lodblf.UnidodfLodblfExtfnsion.isKfy in ordfr to
    // bvoid its dlbss lobding.
    privbtf stbtid boolfbn isUnidodfExtfnsionKfy(String s) {
        // 2blphbnum
        rfturn (s.lfngth() == 2) && LodblfUtils.isAlphbNumfridString(s);
    }

    /**
     * @sfriblFifld lbngubgf    String
     *      lbngubgf subtbg in lowfr dbsf. (Sff <b hrff="jbvb/util/Lodblf.html#gftLbngubgf()">gftLbngubgf()</b>)
     * @sfriblFifld dountry     String
     *      dountry subtbg in uppfr dbsf. (Sff <b hrff="jbvb/util/Lodblf.html#gftCountry()">gftCountry()</b>)
     * @sfriblFifld vbribnt     String
     *      vbribnt subtbgs sfpbrbtfd by LOWLINE dhbrbdtfrs. (Sff <b hrff="jbvb/util/Lodblf.html#gftVbribnt()">gftVbribnt()</b>)
     * @sfriblFifld hbshdodf    int
     *      dfprfdbtfd, for forwbrd dompbtibility only
     * @sfriblFifld sdript      String
     *      sdript subtbg in titlf dbsf (Sff <b hrff="jbvb/util/Lodblf.html#gftSdript()">gftSdript()</b>)
     * @sfriblFifld fxtfnsions  String
     *      dbnonidbl rfprfsfntbtion of fxtfnsions, thbt is,
     *      BCP47 fxtfnsions in blphbbftidbl ordfr followfd by
     *      BCP47 privbtf usf subtbgs, bll in lowfr dbsf lfttfrs
     *      sfpbrbtfd by HYPHEN-MINUS dhbrbdtfrs.
     *      (Sff <b hrff="jbvb/util/Lodblf.html#gftExtfnsionKfys()">gftExtfnsionKfys()</b>,
     *      <b hrff="jbvb/util/Lodblf.html#gftExtfnsion(dhbr)">gftExtfnsion(dhbr)</b>)
     */
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds = {
        nfw ObjfdtStrfbmFifld("lbngubgf", String.dlbss),
        nfw ObjfdtStrfbmFifld("dountry", String.dlbss),
        nfw ObjfdtStrfbmFifld("vbribnt", String.dlbss),
        nfw ObjfdtStrfbmFifld("hbshdodf", int.dlbss),
        nfw ObjfdtStrfbmFifld("sdript", String.dlbss),
        nfw ObjfdtStrfbmFifld("fxtfnsions", String.dlbss),
    };

    /**
     * Sfriblizfs this <dodf>Lodblf</dodf> to thf spfdififd <dodf>ObjfdtOutputStrfbm</dodf>.
     * @pbrbm out thf <dodf>ObjfdtOutputStrfbm</dodf> to writf
     * @throws IOExdfption
     * @sindf 1.7
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm out) throws IOExdfption {
        ObjfdtOutputStrfbm.PutFifld fiflds = out.putFiflds();
        fiflds.put("lbngubgf", bbsfLodblf.gftLbngubgf());
        fiflds.put("sdript", bbsfLodblf.gftSdript());
        fiflds.put("dountry", bbsfLodblf.gftRfgion());
        fiflds.put("vbribnt", bbsfLodblf.gftVbribnt());
        fiflds.put("fxtfnsions", lodblfExtfnsions == null ? "" : lodblfExtfnsions.gftID());
        fiflds.put("hbshdodf", -1); // plbdf holdfr just for bbdkwbrd support
        out.writfFiflds();
    }

    /**
     * Dfsfriblizfs this <dodf>Lodblf</dodf>.
     * @pbrbm in thf <dodf>ObjfdtInputStrfbm</dodf> to rfbd
     * @throws IOExdfption
     * @throws ClbssNotFoundExdfption
     * @throws IllformfdLodblfExdfption
     * @sindf 1.7
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm in) throws IOExdfption, ClbssNotFoundExdfption {
        ObjfdtInputStrfbm.GftFifld fiflds = in.rfbdFiflds();
        String lbngubgf = (String)fiflds.gft("lbngubgf", "");
        String sdript = (String)fiflds.gft("sdript", "");
        String dountry = (String)fiflds.gft("dountry", "");
        String vbribnt = (String)fiflds.gft("vbribnt", "");
        String fxtStr = (String)fiflds.gft("fxtfnsions", "");
        bbsfLodblf = BbsfLodblf.gftInstbndf(donvfrtOldISOCodfs(lbngubgf), sdript, dountry, vbribnt);
        if (fxtStr.lfngth() > 0) {
            try {
                IntfrnblLodblfBuildfr bldr = nfw IntfrnblLodblfBuildfr();
                bldr.sftExtfnsions(fxtStr);
                lodblfExtfnsions = bldr.gftLodblfExtfnsions();
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf());
            }
        } flsf {
            lodblfExtfnsions = null;
        }
    }

    /**
     * Rfturns b dbdhfd <dodf>Lodblf</dodf> instbndf fquivblfnt to
     * thf dfsfriblizfd <dodf>Lodblf</dodf>. Whfn sfriblizfd
     * lbngubgf, dountry bnd vbribnt fiflds rfbd from thf objfdt dbtb strfbm
     * brf fxbdtly "jb", "JP", "JP" or "th", "TH", "TH" bnd sdript/fxtfnsions
     * fiflds brf fmpty, this mfthod supplifs <dodf>UNICODE_LOCALE_EXTENSION</dodf>
     * "db"/"jbpbnfsf" (dblfndbr typf is "jbpbnfsf") or "nu"/"thbi" (numbfr sdript
     * typf is "thbi"). Sff <b hrff="Lodblf.html#spfdibl_dbsfs_donstrudtor">Spfdibl Cbsfs</b>
     * for morf informbtion.
     *
     * @rfturn bn instbndf of <dodf>Lodblf</dodf> fquivblfnt to
     * thf dfsfriblizfd <dodf>Lodblf</dodf>.
     * @throws jbvb.io.ObjfdtStrfbmExdfption
     */
    privbtf Objfdt rfbdRfsolvf() throws jbvb.io.ObjfdtStrfbmExdfption {
        rfturn gftInstbndf(bbsfLodblf.gftLbngubgf(), bbsfLodblf.gftSdript(),
                bbsfLodblf.gftRfgion(), bbsfLodblf.gftVbribnt(), lodblfExtfnsions);
    }

    privbtf stbtid volbtilf String[] isoLbngubgfs = null;

    privbtf stbtid volbtilf String[] isoCountrifs = null;

    privbtf stbtid String donvfrtOldISOCodfs(String lbngubgf) {
        // wf bddfpt both thf old bnd thf nfw ISO dodfs for thf lbngubgfs whosf ISO
        // dodfs hbvf dhbngfd, but wf blwbys storf thf OLD dodf, for bbdkwbrd dompbtibility
        lbngubgf = LodblfUtils.toLowfrString(lbngubgf).intfrn();
        if (lbngubgf == "hf") {
            rfturn "iw";
        } flsf if (lbngubgf == "yi") {
            rfturn "ji";
        } flsf if (lbngubgf == "id") {
            rfturn "in";
        } flsf {
            rfturn lbngubgf;
        }
    }

    privbtf stbtid LodblfExtfnsions gftCompbtibilityExtfnsions(String lbngubgf,
                                                               String sdript,
                                                               String dountry,
                                                               String vbribnt) {
        LodblfExtfnsions fxtfnsions = null;
        // Spfdibl dbsfs for bbdkwbrd dompbtibility support
        if (LodblfUtils.dbsfIgnorfMbtdh(lbngubgf, "jb")
                && sdript.lfngth() == 0
                && LodblfUtils.dbsfIgnorfMbtdh(dountry, "jp")
                && "JP".fqubls(vbribnt)) {
            // jb_JP_JP -> u-db-jbpbnfsf (dblfndbr = jbpbnfsf)
            fxtfnsions = LodblfExtfnsions.CALENDAR_JAPANESE;
        } flsf if (LodblfUtils.dbsfIgnorfMbtdh(lbngubgf, "th")
                && sdript.lfngth() == 0
                && LodblfUtils.dbsfIgnorfMbtdh(dountry, "th")
                && "TH".fqubls(vbribnt)) {
            // th_TH_TH -> u-nu-thbi (numbfrsystfm = thbi)
            fxtfnsions = LodblfExtfnsions.NUMBER_THAI;
        }
        rfturn fxtfnsions;
    }

    /**
     * Obtbins b lodblizfd lodblf nbmfs from b LodblfNbmfProvidfr
     * implfmfntbtion.
     */
    privbtf stbtid dlbss LodblfNbmfGfttfr
        implfmfnts LodblfSfrvidfProvidfrPool.LodblizfdObjfdtGfttfr<LodblfNbmfProvidfr, String> {
        privbtf stbtid finbl LodblfNbmfGfttfr INSTANCE = nfw LodblfNbmfGfttfr();

        @Ovfrridf
        publid String gftObjfdt(LodblfNbmfProvidfr lodblfNbmfProvidfr,
                                Lodblf lodblf,
                                String kfy,
                                Objfdt... pbrbms) {
            bssfrt pbrbms.lfngth == 2;
            int typf = (Intfgfr)pbrbms[0];
            String dodf = (String)pbrbms[1];

            switdh(typf) {
            dbsf DISPLAY_LANGUAGE:
                rfturn lodblfNbmfProvidfr.gftDisplbyLbngubgf(dodf, lodblf);
            dbsf DISPLAY_COUNTRY:
                rfturn lodblfNbmfProvidfr.gftDisplbyCountry(dodf, lodblf);
            dbsf DISPLAY_VARIANT:
                rfturn lodblfNbmfProvidfr.gftDisplbyVbribnt(dodf, lodblf);
            dbsf DISPLAY_SCRIPT:
                rfturn lodblfNbmfProvidfr.gftDisplbySdript(dodf, lodblf);
            dffbult:
                bssfrt fblsf; // shouldn't hbppfn
            }

            rfturn null;
        }
    }

    /**
     * Enum for lodblf dbtfgorifs.  Thfsf lodblf dbtfgorifs brf usfd to gft/sft
     * thf dffbult lodblf for thf spfdifid fundtionblity rfprfsfntfd by thf
     * dbtfgory.
     *
     * @sff #gftDffbult(Lodblf.Cbtfgory)
     * @sff #sftDffbult(Lodblf.Cbtfgory, Lodblf)
     * @sindf 1.7
     */
    publid fnum Cbtfgory {

        /**
         * Cbtfgory usfd to rfprfsfnt thf dffbult lodblf for
         * displbying usfr intfrfbdfs.
         */
        DISPLAY("usfr.lbngubgf.displby",
                "usfr.sdript.displby",
                "usfr.dountry.displby",
                "usfr.vbribnt.displby"),

        /**
         * Cbtfgory usfd to rfprfsfnt thf dffbult lodblf for
         * formbtting dbtfs, numbfrs, bnd/or durrfndifs.
         */
        FORMAT("usfr.lbngubgf.formbt",
               "usfr.sdript.formbt",
               "usfr.dountry.formbt",
               "usfr.vbribnt.formbt");

        Cbtfgory(String lbngubgfKfy, String sdriptKfy, String dountryKfy, String vbribntKfy) {
            this.lbngubgfKfy = lbngubgfKfy;
            this.sdriptKfy = sdriptKfy;
            this.dountryKfy = dountryKfy;
            this.vbribntKfy = vbribntKfy;
        }

        finbl String lbngubgfKfy;
        finbl String sdriptKfy;
        finbl String dountryKfy;
        finbl String vbribntKfy;
    }

    /**
     * <dodf>Buildfr</dodf> is usfd to build instbndfs of <dodf>Lodblf</dodf>
     * from vblufs donfigurfd by thf sfttfrs.  Unlikf thf <dodf>Lodblf</dodf>
     * donstrudtors, thf <dodf>Buildfr</dodf> dhfdks if b vbluf donfigurfd by b
     * sfttfr sbtisfifs thf syntbx rfquirfmfnts dffinfd by thf <dodf>Lodblf</dodf>
     * dlbss.  A <dodf>Lodblf</dodf> objfdt drfbtfd by b <dodf>Buildfr</dodf> is
     * wfll-formfd bnd dbn bf trbnsformfd to b wfll-formfd IETF BCP 47 lbngubgf tbg
     * without losing informbtion.
     *
     * <p><b>Notf:</b> Thf <dodf>Lodblf</dodf> dlbss dofs not providf bny
     * syntbdtid rfstridtions on vbribnt, whilf BCP 47 rfquirfs fbdh vbribnt
     * subtbg to bf 5 to 8 blphbnumfrids or b singlf numfrid followfd by 3
     * blphbnumfrids.  Thf mfthod <dodf>sftVbribnt</dodf> throws
     * <dodf>IllformfdLodblfExdfption</dodf> for b vbribnt thbt dofs not sbtisfy
     * this rfstridtion. If it is nfdfssbry to support sudh b vbribnt, usf b
     * Lodblf donstrudtor.  Howfvfr, kffp in mind thbt b <dodf>Lodblf</dodf>
     * objfdt drfbtfd this wby might losf thf vbribnt informbtion whfn
     * trbnsformfd to b BCP 47 lbngubgf tbg.
     *
     * <p>Thf following fxbmplf shows how to drfbtf b <dodf>Lodblf</dodf> objfdt
     * with thf <dodf>Buildfr</dodf>.
     * <blodkquotf>
     * <prf>
     *     Lodblf bLodblf = nfw Buildfr().sftLbngubgf("sr").sftSdript("Lbtn").sftRfgion("RS").build();
     * </prf>
     * </blodkquotf>
     *
     * <p>Buildfrs dbn bf rfusfd; <dodf>dlfbr()</dodf> rfsfts bll
     * fiflds to thfir dffbult vblufs.
     *
     * @sff Lodblf#forLbngubgfTbg
     * @sindf 1.7
     */
    publid stbtid finbl dlbss Buildfr {
        privbtf finbl IntfrnblLodblfBuildfr lodblfBuildfr;

        /**
         * Construdts bn fmpty Buildfr. Thf dffbult vbluf of bll
         * fiflds, fxtfnsions, bnd privbtf usf informbtion is thf
         * fmpty string.
         */
        publid Buildfr() {
            lodblfBuildfr = nfw IntfrnblLodblfBuildfr();
        }

        /**
         * Rfsfts thf <dodf>Buildfr</dodf> to mbtdh thf providfd
         * <dodf>lodblf</dodf>.  Existing stbtf is disdbrdfd.
         *
         * <p>All fiflds of thf lodblf must bf wfll-formfd, sff {@link Lodblf}.
         *
         * <p>Lodblfs with bny ill-formfd fiflds dbusf
         * <dodf>IllformfdLodblfExdfption</dodf> to bf thrown, fxdfpt for thf
         * following thrff dbsfs whidh brf bddfptfd for dompbtibility
         * rfbsons:<ul>
         * <li>Lodblf("jb", "JP", "JP") is trfbtfd bs "jb-JP-u-db-jbpbnfsf"
         * <li>Lodblf("th", "TH", "TH") is trfbtfd bs "th-TH-u-nu-thbi"
         * <li>Lodblf("no", "NO", "NY") is trfbtfd bs "nn-NO"</ul>
         *
         * @pbrbm lodblf thf lodblf
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>lodblf</dodf> hbs
         * bny ill-formfd fiflds.
         * @throws NullPointfrExdfption if <dodf>lodblf</dodf> is null.
         */
        publid Buildfr sftLodblf(Lodblf lodblf) {
            try {
                lodblfBuildfr.sftLodblf(lodblf.bbsfLodblf, lodblf.lodblfExtfnsions);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Rfsfts thf Buildfr to mbtdh thf providfd IETF BCP 47
         * lbngubgf tbg.  Disdbrds thf fxisting stbtf.  Null bnd thf
         * fmpty string dbusf thf buildfr to bf rfsft, likf {@link
         * #dlfbr}.  Grbndfbthfrfd tbgs (sff {@link
         * Lodblf#forLbngubgfTbg}) brf donvfrtfd to thfir dbnonidbl
         * form bfforf bfing prodfssfd.  Othfrwisf, thf lbngubgf tbg
         * must bf wfll-formfd (sff {@link Lodblf}) or bn fxdfption is
         * thrown (unlikf <dodf>Lodblf.forLbngubgfTbg</dodf>, whidh
         * just disdbrds ill-formfd bnd following portions of thf
         * tbg).
         *
         * @pbrbm lbngubgfTbg thf lbngubgf tbg
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>lbngubgfTbg</dodf> is ill-formfd
         * @sff Lodblf#forLbngubgfTbg(String)
         */
        publid Buildfr sftLbngubgfTbg(String lbngubgfTbg) {
            PbrsfStbtus sts = nfw PbrsfStbtus();
            LbngubgfTbg tbg = LbngubgfTbg.pbrsf(lbngubgfTbg, sts);
            if (sts.isError()) {
                throw nfw IllformfdLodblfExdfption(sts.gftErrorMfssbgf(), sts.gftErrorIndfx());
            }
            lodblfBuildfr.sftLbngubgfTbg(tbg);
            rfturn this;
        }

        /**
         * Sfts thf lbngubgf.  If <dodf>lbngubgf</dodf> is thf fmpty string or
         * null, thf lbngubgf in this <dodf>Buildfr</dodf> is rfmovfd.  Othfrwisf,
         * thf lbngubgf must bf <b hrff="./Lodblf.html#dff_lbngubgf">wfll-formfd</b>
         * or bn fxdfption is thrown.
         *
         * <p>Thf typidbl lbngubgf vbluf is b two or thrff-lfttfr lbngubgf
         * dodf bs dffinfd in ISO639.
         *
         * @pbrbm lbngubgf thf lbngubgf
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>lbngubgf</dodf> is ill-formfd
         */
        publid Buildfr sftLbngubgf(String lbngubgf) {
            try {
                lodblfBuildfr.sftLbngubgf(lbngubgf);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Sfts thf sdript. If <dodf>sdript</dodf> is null or thf fmpty string,
         * thf sdript in this <dodf>Buildfr</dodf> is rfmovfd.
         * Othfrwisf, thf sdript must bf <b hrff="./Lodblf.html#dff_sdript">wfll-formfd</b> or bn
         * fxdfption is thrown.
         *
         * <p>Thf typidbl sdript vbluf is b four-lfttfr sdript dodf bs dffinfd by ISO 15924.
         *
         * @pbrbm sdript thf sdript
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>sdript</dodf> is ill-formfd
         */
        publid Buildfr sftSdript(String sdript) {
            try {
                lodblfBuildfr.sftSdript(sdript);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Sfts thf rfgion.  If rfgion is null or thf fmpty string, thf rfgion
         * in this <dodf>Buildfr</dodf> is rfmovfd.  Othfrwisf,
         * thf rfgion must bf <b hrff="./Lodblf.html#dff_rfgion">wfll-formfd</b> or bn
         * fxdfption is thrown.
         *
         * <p>Thf typidbl rfgion vbluf is b two-lfttfr ISO 3166 dodf or b
         * thrff-digit UN M.49 brfb dodf.
         *
         * <p>Thf dountry vbluf in thf <dodf>Lodblf</dodf> drfbtfd by thf
         * <dodf>Buildfr</dodf> is blwbys normblizfd to uppfr dbsf.
         *
         * @pbrbm rfgion thf rfgion
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>rfgion</dodf> is ill-formfd
         */
        publid Buildfr sftRfgion(String rfgion) {
            try {
                lodblfBuildfr.sftRfgion(rfgion);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Sfts thf vbribnt.  If vbribnt is null or thf fmpty string, thf
         * vbribnt in this <dodf>Buildfr</dodf> is rfmovfd.  Othfrwisf, it
         * must donsist of onf or morf <b hrff="./Lodblf.html#dff_vbribnt">wfll-formfd</b>
         * subtbgs, or bn fxdfption is thrown.
         *
         * <p><b>Notf:</b> This mfthod dhfdks if <dodf>vbribnt</dodf>
         * sbtisfifs thf IETF BCP 47 vbribnt subtbg's syntbx rfquirfmfnts,
         * bnd normblizfs thf vbluf to lowfrdbsf lfttfrs.  Howfvfr,
         * thf <dodf>Lodblf</dodf> dlbss dofs not imposf bny syntbdtid
         * rfstridtion on vbribnt, bnd thf vbribnt vbluf in
         * <dodf>Lodblf</dodf> is dbsf sfnsitivf.  To sft sudh b vbribnt,
         * usf b Lodblf donstrudtor.
         *
         * @pbrbm vbribnt thf vbribnt
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>vbribnt</dodf> is ill-formfd
         */
        publid Buildfr sftVbribnt(String vbribnt) {
            try {
                lodblfBuildfr.sftVbribnt(vbribnt);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Sfts thf fxtfnsion for thf givfn kfy. If thf vbluf is null or thf
         * fmpty string, thf fxtfnsion is rfmovfd.  Othfrwisf, thf fxtfnsion
         * must bf <b hrff="./Lodblf.html#dff_fxtfnsions">wfll-formfd</b> or bn fxdfption
         * is thrown.
         *
         * <p><b>Notf:</b> Thf kfy {@link Lodblf#UNICODE_LOCALE_EXTENSION
         * UNICODE_LOCALE_EXTENSION} ('u') is usfd for thf Unidodf lodblf fxtfnsion.
         * Sftting b vbluf for this kfy rfplbdfs bny fxisting Unidodf lodblf kfy/typf
         * pbirs with thosf dffinfd in thf fxtfnsion.
         *
         * <p><b>Notf:</b> Thf kfy {@link Lodblf#PRIVATE_USE_EXTENSION
         * PRIVATE_USE_EXTENSION} ('x') is usfd for thf privbtf usf dodf. To bf
         * wfll-formfd, thf vbluf for this kfy nffds only to hbvf subtbgs of onf to
         * fight blphbnumfrid dhbrbdtfrs, not two to fight bs in thf gfnfrbl dbsf.
         *
         * @pbrbm kfy thf fxtfnsion kfy
         * @pbrbm vbluf thf fxtfnsion vbluf
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>kfy</dodf> is illfgbl
         * or <dodf>vbluf</dodf> is ill-formfd
         * @sff #sftUnidodfLodblfKfyword(String, String)
         */
        publid Buildfr sftExtfnsion(dhbr kfy, String vbluf) {
            try {
                lodblfBuildfr.sftExtfnsion(kfy, vbluf);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Sfts thf Unidodf lodblf kfyword typf for thf givfn kfy.  If thf typf
         * is null, thf Unidodf kfyword is rfmovfd.  Othfrwisf, thf kfy must bf
         * non-null bnd both kfy bnd typf must bf <b
         * hrff="./Lodblf.html#dff_lodblf_fxtfnsion">wfll-formfd</b> or bn fxdfption
         * is thrown.
         *
         * <p>Kfys bnd typfs brf donvfrtfd to lowfr dbsf.
         *
         * <p><b>Notf</b>:Sftting thf 'u' fxtfnsion vib {@link #sftExtfnsion}
         * rfplbdfs bll Unidodf lodblf kfywords with thosf dffinfd in thf
         * fxtfnsion.
         *
         * @pbrbm kfy thf Unidodf lodblf kfy
         * @pbrbm typf thf Unidodf lodblf typf
         * @rfturn This buildfr.
         * @throws IllformfdLodblfExdfption if <dodf>kfy</dodf> or <dodf>typf</dodf>
         * is ill-formfd
         * @throws NullPointfrExdfption if <dodf>kfy</dodf> is null
         * @sff #sftExtfnsion(dhbr, String)
         */
        publid Buildfr sftUnidodfLodblfKfyword(String kfy, String typf) {
            try {
                lodblfBuildfr.sftUnidodfLodblfKfyword(kfy, typf);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Adds b unidodf lodblf bttributf, if not blrfbdy prfsfnt, othfrwisf
         * hbs no ffffdt.  Thf bttributf must not bf null bnd must bf <b
         * hrff="./Lodblf.html#dff_lodblf_fxtfnsion">wfll-formfd</b> or bn fxdfption
         * is thrown.
         *
         * @pbrbm bttributf thf bttributf
         * @rfturn This buildfr.
         * @throws NullPointfrExdfption if <dodf>bttributf</dodf> is null
         * @throws IllformfdLodblfExdfption if <dodf>bttributf</dodf> is ill-formfd
         * @sff #sftExtfnsion(dhbr, String)
         */
        publid Buildfr bddUnidodfLodblfAttributf(String bttributf) {
            try {
                lodblfBuildfr.bddUnidodfLodblfAttributf(bttributf);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Rfmovfs b unidodf lodblf bttributf, if prfsfnt, othfrwisf hbs no
         * ffffdt.  Thf bttributf must not bf null bnd must bf <b
         * hrff="./Lodblf.html#dff_lodblf_fxtfnsion">wfll-formfd</b> or bn fxdfption
         * is thrown.
         *
         * <p>Attributf dompbrision for rfmovbl is dbsf-insfnsitivf.
         *
         * @pbrbm bttributf thf bttributf
         * @rfturn This buildfr.
         * @throws NullPointfrExdfption if <dodf>bttributf</dodf> is null
         * @throws IllformfdLodblfExdfption if <dodf>bttributf</dodf> is ill-formfd
         * @sff #sftExtfnsion(dhbr, String)
         */
        publid Buildfr rfmovfUnidodfLodblfAttributf(String bttributf) {
            try {
                lodblfBuildfr.rfmovfUnidodfLodblfAttributf(bttributf);
            } dbtdh (LodblfSyntbxExdfption f) {
                throw nfw IllformfdLodblfExdfption(f.gftMfssbgf(), f.gftErrorIndfx());
            }
            rfturn this;
        }

        /**
         * Rfsfts thf buildfr to its initibl, fmpty stbtf.
         *
         * @rfturn This buildfr.
         */
        publid Buildfr dlfbr() {
            lodblfBuildfr.dlfbr();
            rfturn this;
        }

        /**
         * Rfsfts thf fxtfnsions to thfir initibl, fmpty stbtf.
         * Lbngubgf, sdript, rfgion bnd vbribnt brf undhbngfd.
         *
         * @rfturn This buildfr.
         * @sff #sftExtfnsion(dhbr, String)
         */
        publid Buildfr dlfbrExtfnsions() {
            lodblfBuildfr.dlfbrExtfnsions();
            rfturn this;
        }

        /**
         * Rfturns bn instbndf of <dodf>Lodblf</dodf> drfbtfd from thf fiflds sft
         * on this buildfr.
         *
         * <p>This bpplifs thf donvfrsions listfd in {@link Lodblf#forLbngubgfTbg}
         * whfn donstrudting b Lodblf. (Grbndfbthfrfd tbgs brf hbndlfd in
         * {@link #sftLbngubgfTbg}.)
         *
         * @rfturn A Lodblf.
         */
        publid Lodblf build() {
            BbsfLodblf bbsflod = lodblfBuildfr.gftBbsfLodblf();
            LodblfExtfnsions fxtfnsions = lodblfBuildfr.gftLodblfExtfnsions();
            if (fxtfnsions == null && bbsflod.gftVbribnt().lfngth() > 0) {
                fxtfnsions = gftCompbtibilityExtfnsions(bbsflod.gftLbngubgf(), bbsflod.gftSdript(),
                        bbsflod.gftRfgion(), bbsflod.gftVbribnt());
            }
            rfturn Lodblf.gftInstbndf(bbsflod, fxtfnsions);
        }
    }

    /**
     * This fnum providfs donstbnts to sflfdt b filtfring modf for lodblf
     * mbtdhing. Rfffr to <b hrff="http://tools.iftf.org/html/rfd4647">RFC 4647
     * Mbtdhing of Lbngubgf Tbgs</b> for dftbils.
     *
     * <p>As bn fxbmplf, think of two Lbngubgf Priority Lists fbdh of whidh
     * indludfs only onf lbngubgf rbngf bnd b sft of following lbngubgf tbgs:
     *
     * <prf>
     *    df (Gfrmbn)
     *    df-DE (Gfrmbn, Gfrmbny)
     *    df-Dfvb (Gfrmbn, in Dfvbnbgbri sdript)
     *    df-Dfvb-DE (Gfrmbn, in Dfvbnbgbri sdript, Gfrmbny)
     *    df-DE-1996 (Gfrmbn, Gfrmbny, orthogrbphy of 1996)
     *    df-Lbtn-DE (Gfrmbn, in Lbtin sdript, Gfrmbny)
     *    df-Lbtn-DE-1996 (Gfrmbn, in Lbtin sdript, Gfrmbny, orthogrbphy of 1996)
     * </prf>
     *
     * Thf filtfring mfthod will bfhbvf bs follows:
     *
     * <tbblf dfllpbdding=2 summbry="Filtfring mfthod bfhbvior">
     * <tr>
     * <th>Filtfring Modf</th>
     * <th>Lbngubgf Priority List: {@dodf "df-DE"}</th>
     * <th>Lbngubgf Priority List: {@dodf "df-*-DE"}</th>
     * </tr>
     * <tr>
     * <td vblign=top>
     * {@link FiltfringModf#AUTOSELECT_FILTERING AUTOSELECT_FILTERING}
     * </td>
     * <td vblign=top>
     * Pfrforms <fm>bbsid</fm> filtfring bnd rfturns {@dodf "df-DE"} bnd
     * {@dodf "df-DE-1996"}.
     * </td>
     * <td vblign=top>
     * Pfrforms <fm>fxtfndfd</fm> filtfring bnd rfturns {@dodf "df-DE"},
     * {@dodf "df-Dfvb-DE"}, {@dodf "df-DE-1996"}, {@dodf "df-Lbtn-DE"}, bnd
     * {@dodf "df-Lbtn-DE-1996"}.
     * </td>
     * </tr>
     * <tr>
     * <td vblign=top>
     * {@link FiltfringModf#EXTENDED_FILTERING EXTENDED_FILTERING}
     * </td>
     * <td vblign=top>
     * Pfrforms <fm>fxtfndfd</fm> filtfring bnd rfturns {@dodf "df-DE"},
     * {@dodf "df-Dfvb-DE"}, {@dodf "df-DE-1996"}, {@dodf "df-Lbtn-DE"}, bnd
     * {@dodf "df-Lbtn-DE-1996"}.
     * </td>
     * <td vblign=top>Sbmf bs bbovf.</td>
     * </tr>
     * <tr>
     * <td vblign=top>
     * {@link FiltfringModf#IGNORE_EXTENDED_RANGES IGNORE_EXTENDED_RANGES}
     * </td>
     * <td vblign=top>
     * Pfrforms <fm>bbsid</fm> filtfring bnd rfturns {@dodf "df-DE"} bnd
     * {@dodf "df-DE-1996"}.
     * </td>
     * <td vblign=top>
     * Pfrforms <fm>bbsid</fm> filtfring bnd rfturns {@dodf null} bfdbusf
     * nothing mbtdhfs.
     * </td>
     * </tr>
     * <tr>
     * <td vblign=top>
     * {@link FiltfringModf#MAP_EXTENDED_RANGES MAP_EXTENDED_RANGES}
     * </td>
     * <td vblign=top>Sbmf bs bbovf.</td>
     * <td vblign=top>
     * Pfrforms <fm>bbsid</fm> filtfring bnd rfturns {@dodf "df-DE"} bnd
     * {@dodf "df-DE-1996"} bfdbusf {@dodf "df-*-DE"} is mbppfd to
     * {@dodf "df-DE"}.
     * </td>
     * </tr>
     * <tr>
     * <td vblign=top>
     * {@link FiltfringModf#REJECT_EXTENDED_RANGES REJECT_EXTENDED_RANGES}
     * </td>
     * <td vblign=top>Sbmf bs bbovf.</td>
     * <td vblign=top>
     * Throws {@link IllfgblArgumfntExdfption} bfdbusf {@dodf "df-*-DE"} is
     * not b vblid bbsid lbngubgf rbngf.
     * </td>
     * </tr>
     * </tbblf>
     *
     * @sff #filtfr(List, Collfdtion, FiltfringModf)
     * @sff #filtfrTbgs(List, Collfdtion, FiltfringModf)
     *
     * @sindf 1.8
     */
    publid stbtid fnum FiltfringModf {
        /**
         * Spfdififs butombtid filtfring modf bbsfd on thf givfn Lbngubgf
         * Priority List donsisting of lbngubgf rbngfs. If bll of thf rbngfs
         * brf bbsid, bbsid filtfring is sflfdtfd. Othfrwisf, fxtfndfd
         * filtfring is sflfdtfd.
         */
        AUTOSELECT_FILTERING,

        /**
         * Spfdififs fxtfndfd filtfring.
         */
        EXTENDED_FILTERING,

        /**
         * Spfdififs bbsid filtfring: Notf thbt bny fxtfndfd lbngubgf rbngfs
         * indludfd in thf givfn Lbngubgf Priority List brf ignorfd.
         */
        IGNORE_EXTENDED_RANGES,

        /**
         * Spfdififs bbsid filtfring: If bny fxtfndfd lbngubgf rbngfs brf
         * indludfd in thf givfn Lbngubgf Priority List, thfy brf mbppfd to thf
         * bbsid lbngubgf rbngf. Spfdifidblly, b lbngubgf rbngf stbrting with b
         * subtbg {@dodf "*"} is trfbtfd bs b lbngubgf rbngf {@dodf "*"}. For
         * fxbmplf, {@dodf "*-US"} is trfbtfd bs {@dodf "*"}. If {@dodf "*"} is
         * not thf first subtbg, {@dodf "*"} bnd fxtrb {@dodf "-"} brf rfmovfd.
         * For fxbmplf, {@dodf "jb-*-JP"} is mbppfd to {@dodf "jb-JP"}.
         */
        MAP_EXTENDED_RANGES,

        /**
         * Spfdififs bbsid filtfring: If bny fxtfndfd lbngubgf rbngfs brf
         * indludfd in thf givfn Lbngubgf Priority List, thf list is rfjfdtfd
         * bnd thf filtfring mfthod throws {@link IllfgblArgumfntExdfption}.
         */
        REJECT_EXTENDED_RANGES
    };

    /**
     * This dlbss fxprfssfs b <fm>Lbngubgf Rbngf</fm> dffinfd in
     * <b hrff="http://tools.iftf.org/html/rfd4647">RFC 4647 Mbtdhing of
     * Lbngubgf Tbgs</b>. A lbngubgf rbngf is bn idfntififr whidh is usfd to
     * sflfdt lbngubgf tbg(s) mffting spfdifid rfquirfmfnts by using thf
     * mfdhbnisms dfsdribfd in <b hrff="Lodblf.html#LodblfMbtdhing">Lodblf
     * Mbtdhing</b>. A list whidh rfprfsfnts b usfr's prfffrfndfs bnd donsists
     * of lbngubgf rbngfs is dbllfd b <fm>Lbngubgf Priority List</fm>.
     *
     * <p>Thfrf brf two typfs of lbngubgf rbngfs: bbsid bnd fxtfndfd. In RFC
     * 4647, thf syntbx of lbngubgf rbngfs is fxprfssfd in
     * <b hrff="http://tools.iftf.org/html/rfd4234">ABNF</b> bs follows:
     * <blodkquotf>
     * <prf>
     *     bbsid-lbngubgf-rbngf    = (1*8ALPHA *("-" 1*8blphbnum)) / "*"
     *     fxtfndfd-lbngubgf-rbngf = (1*8ALPHA / "*")
     *                               *("-" (1*8blphbnum / "*"))
     *     blphbnum                = ALPHA / DIGIT
     * </prf>
     * </blodkquotf>
     * For fxbmplf, {@dodf "fn"} (English), {@dodf "jb-JP"} (Jbpbnfsf, Jbpbn),
     * {@dodf "*"} (spfdibl lbngubgf rbngf whidh mbtdhfs bny lbngubgf tbg) brf
     * bbsid lbngubgf rbngfs, whfrfbs {@dodf "*-CH"} (bny lbngubgfs,
     * Switzfrlbnd), {@dodf "fs-*"} (Spbnish, bny rfgions), bnd
     * {@dodf "zh-Hbnt-*"} (Trbditionbl Chinfsf, bny rfgions) brf fxtfndfd
     * lbngubgf rbngfs.
     *
     * @sff #filtfr
     * @sff #filtfrTbgs
     * @sff #lookup
     * @sff #lookupTbg
     *
     * @sindf 1.8
     */
    publid stbtid finbl dlbss LbngubgfRbngf {

       /**
        * A donstbnt holding thf mbximum vbluf of wfight, 1.0, whidh indidbtfs
        * thbt thf lbngubgf rbngf is b good fit for thf usfr.
        */
        publid stbtid finbl doublf MAX_WEIGHT = 1.0;

       /**
        * A donstbnt holding thf minimum vbluf of wfight, 0.0, whidh indidbtfs
        * thbt thf lbngubgf rbngf is not b good fit for thf usfr.
        */
        publid stbtid finbl doublf MIN_WEIGHT = 0.0;

        privbtf finbl String rbngf;
        privbtf finbl doublf wfight;

        privbtf volbtilf int hbsh = 0;

        /**
         * Construdts b {@dodf LbngubgfRbngf} using thf givfn {@dodf rbngf}.
         * Notf thbt no vblidbtion is donf bgbinst thf IANA Lbngubgf Subtbg
         * Rfgistry bt timf of donstrudtion.
         *
         * <p>This is fquivblfnt to {@dodf LbngubgfRbngf(rbngf, MAX_WEIGHT)}.
         *
         * @pbrbm rbngf b lbngubgf rbngf
         * @throws NullPointfrExdfption if thf givfn {@dodf rbngf} is
         *     {@dodf null}
         */
        publid LbngubgfRbngf(String rbngf) {
            this(rbngf, MAX_WEIGHT);
        }

        /**
         * Construdts b {@dodf LbngubgfRbngf} using thf givfn {@dodf rbngf} bnd
         * {@dodf wfight}. Notf thbt no vblidbtion is donf bgbinst thf IANA
         * Lbngubgf Subtbg Rfgistry bt timf of donstrudtion.
         *
         * @pbrbm rbngf  b lbngubgf rbngf
         * @pbrbm wfight b wfight vbluf bftwffn {@dodf MIN_WEIGHT} bnd
         *     {@dodf MAX_WEIGHT}
         * @throws NullPointfrExdfption if thf givfn {@dodf rbngf} is
         *     {@dodf null}
         * @throws IllfgblArgumfntExdfption if thf givfn {@dodf wfight} is lfss
         *     thbn {@dodf MIN_WEIGHT} or grfbtfr thbn {@dodf MAX_WEIGHT}
         */
        publid LbngubgfRbngf(String rbngf, doublf wfight) {
            if (rbngf == null) {
                throw nfw NullPointfrExdfption();
            }
            if (wfight < MIN_WEIGHT || wfight > MAX_WEIGHT) {
                throw nfw IllfgblArgumfntExdfption("wfight=" + wfight);
            }

            rbngf = rbngf.toLowfrCbsf();

            // Do syntbx dhfdk.
            boolfbn isIllFormfd = fblsf;
            String[] subtbgs = rbngf.split("-");
            if (isSubtbgIllFormfd(subtbgs[0], truf)
                || rbngf.fndsWith("-")) {
                isIllFormfd = truf;
            } flsf {
                for (int i = 1; i < subtbgs.lfngth; i++) {
                    if (isSubtbgIllFormfd(subtbgs[i], fblsf)) {
                        isIllFormfd = truf;
                        brfbk;
                    }
                }
            }
            if (isIllFormfd) {
                throw nfw IllfgblArgumfntExdfption("rbngf=" + rbngf);
            }

            this.rbngf = rbngf;
            this.wfight = wfight;
        }

        privbtf stbtid boolfbn isSubtbgIllFormfd(String subtbg,
                                                 boolfbn isFirstSubtbg) {
            if (subtbg.fqubls("") || subtbg.lfngth() > 8) {
                rfturn truf;
            } flsf if (subtbg.fqubls("*")) {
                rfturn fblsf;
            }
            dhbr[] dhbrArrby = subtbg.toChbrArrby();
            if (isFirstSubtbg) { // ALPHA
                for (dhbr d : dhbrArrby) {
                    if (d < 'b' || d > 'z') {
                        rfturn truf;
                    }
                }
            } flsf { // ALPHA / DIGIT
                for (dhbr d : dhbrArrby) {
                    if (d < '0' || (d > '9' && d < 'b') || d > 'z') {
                        rfturn truf;
                    }
                }
            }
            rfturn fblsf;
        }

        /**
         * Rfturns thf lbngubgf rbngf of this {@dodf LbngubgfRbngf}.
         *
         * @rfturn thf lbngubgf rbngf.
         */
        publid String gftRbngf() {
            rfturn rbngf;
        }

        /**
         * Rfturns thf wfight of this {@dodf LbngubgfRbngf}.
         *
         * @rfturn thf wfight vbluf.
         */
        publid doublf gftWfight() {
            rfturn wfight;
        }

        /**
         * Pbrsfs thf givfn {@dodf rbngfs} to gfnfrbtf b Lbngubgf Priority List.
         *
         * <p>This mfthod pfrforms b syntbdtid dhfdk for fbdh lbngubgf rbngf in
         * thf givfn {@dodf rbngfs} but dofsn't do vblidbtion using thf IANA
         * Lbngubgf Subtbg Rfgistry.
         *
         * <p>Thf {@dodf rbngfs} to bf givfn dbn tbkf onf of thf following
         * forms:
         *
         * <prf>
         *   "Addfpt-Lbngubgf: jb,fn;q=0.4"  (wfightfd list with Addfpt-Lbngubgf prffix)
         *   "jb,fn;q=0.4"                   (wfightfd list)
         *   "jb,fn"                         (prioritizfd list)
         * </prf>
         *
         * In b wfightfd list, fbdh lbngubgf rbngf is givfn b wfight vbluf.
         * Thf wfight vbluf is idfntidbl to thf "qublity vbluf" in
         * <b hrff="http://tools.iftf.org/html/rfd2616">RFC 2616</b>, bnd it
         * fxprfssfs how mudh thf usfr prfffrs  thf lbngubgf. A wfight vbluf is
         * spfdififd bftfr b dorrfsponding lbngubgf rbngf followfd by
         * {@dodf ";q="}, bnd thf dffbult wfight vbluf is {@dodf MAX_WEIGHT}
         * whfn it is omittfd.
         *
         * <p>Unlikf b wfightfd list, lbngubgf rbngfs in b prioritizfd list
         * brf sortfd in thf dfsdfnding ordfr bbsfd on its priority. Thf first
         * lbngubgf rbngf hbs thf highfst priority bnd mffts thf usfr's
         * prfffrfndf most.
         *
         * <p>In fithfr dbsf, lbngubgf rbngfs brf sortfd in dfsdfnding ordfr in
         * thf Lbngubgf Priority List bbsfd on priority or wfight. If b
         * lbngubgf rbngf bppfbrs in thf givfn {@dodf rbngfs} morf thbn ondf,
         * only thf first onf is indludfd on thf Lbngubgf Priority List.
         *
         * <p>Thf rfturnfd list donsists of lbngubgf rbngfs from thf givfn
         * {@dodf rbngfs} bnd thfir fquivblfnts found in thf IANA Lbngubgf
         * Subtbg Rfgistry. For fxbmplf, if thf givfn {@dodf rbngfs} is
         * {@dodf "Addfpt-Lbngubgf: iw,fn-us;q=0.7,fn;q=0.3"}, thf flfmfnts in
         * thf list to bf rfturnfd brf:
         *
         * <prf>
         *  <b>Rbngf</b>                                   <b>Wfight</b>
         *    "iw" (oldfr tbg for Hfbrfw)             1.0
         *    "hf" (nfw prfffrrfd dodf for Hfbrfw)    1.0
         *    "fn-us" (English, Unitfd Stbtfs)        0.7
         *    "fn" (English)                          0.3
         * </prf>
         *
         * Two lbngubgf rbngfs, {@dodf "iw"} bnd {@dodf "hf"}, hbvf thf sbmf
         * highfst priority in thf list. By bdding {@dodf "hf"} to thf usfr's
         * Lbngubgf Priority List, lodblf-mbtdhing mfthod dbn find Hfbrfw bs b
         * mbtdhing lodblf (or lbngubgf tbg) fvfn if thf bpplidbtion or systfm
         * offfrs only {@dodf "hf"} bs b supportfd lodblf (or lbngubgf tbg).
         *
         * @pbrbm rbngfs b list of dommb-sfpbrbtfd lbngubgf rbngfs or b list of
         *     lbngubgf rbngfs in thf form of thf "Addfpt-Lbngubgf" hfbdfr
         *     dffinfd in <b hrff="http://tools.iftf.org/html/rfd2616">RFC
         *     2616</b>
         * @rfturn b Lbngubgf Priority List donsisting of lbngubgf rbngfs
         *     indludfd in thf givfn {@dodf rbngfs} bnd thfir fquivblfnt
         *     lbngubgf rbngfs if bvbilbblf. Thf list is modifibblf.
         * @throws NullPointfrExdfption if {@dodf rbngfs} is null
         * @throws IllfgblArgumfntExdfption if b lbngubgf rbngf or b wfight
         *     found in thf givfn {@dodf rbngfs} is ill-formfd
         */
        publid stbtid List<LbngubgfRbngf> pbrsf(String rbngfs) {
            rfturn LodblfMbtdhfr.pbrsf(rbngfs);
        }

        /**
         * Pbrsfs thf givfn {@dodf rbngfs} to gfnfrbtf b Lbngubgf Priority
         * List, bnd thfn dustomizfs thf list using thf givfn {@dodf mbp}.
         * This mfthod is fquivblfnt to
         * {@dodf mbpEquivblfnts(pbrsf(rbngfs), mbp)}.
         *
         * @pbrbm rbngfs b list of dommb-sfpbrbtfd lbngubgf rbngfs or b list
         *     of lbngubgf rbngfs in thf form of thf "Addfpt-Lbngubgf" hfbdfr
         *     dffinfd in <b hrff="http://tools.iftf.org/html/rfd2616">RFC
         *     2616</b>
         * @pbrbm mbp b mbp dontbining informbtion to dustomizf lbngubgf rbngfs
         * @rfturn b Lbngubgf Priority List with dustomizbtion. Thf list is
         *     modifibblf.
         * @throws NullPointfrExdfption if {@dodf rbngfs} is null
         * @throws IllfgblArgumfntExdfption if b lbngubgf rbngf or b wfight
         *     found in thf givfn {@dodf rbngfs} is ill-formfd
         * @sff #pbrsf(String)
         * @sff #mbpEquivblfnts
         */
        publid stbtid List<LbngubgfRbngf> pbrsf(String rbngfs,
                                                Mbp<String, List<String>> mbp) {
            rfturn mbpEquivblfnts(pbrsf(rbngfs), mbp);
        }

        /**
         * Gfnfrbtfs b nfw dustomizfd Lbngubgf Priority List using thf givfn
         * {@dodf priorityList} bnd {@dodf mbp}. If thf givfn {@dodf mbp} is
         * fmpty, this mfthod rfturns b dopy of thf givfn {@dodf priorityList}.
         *
         * <p>In thf mbp, b kfy rfprfsfnts b lbngubgf rbngf whfrfbs b vbluf is
         * b list of fquivblfnts of it. {@dodf '*'} dbnnot bf usfd in thf mbp.
         * Ebdh fquivblfnt lbngubgf rbngf hbs thf sbmf wfight vbluf bs its
         * originbl lbngubgf rbngf.
         *
         * <prf>
         *  An fxbmplf of mbp:
         *    <b>Kfy</b>                            <b>Vbluf</b>
         *      "zh" (Chinfsf)                 "zh",
         *                                     "zh-Hbns"(Simplififd Chinfsf)
         *      "zh-HK" (Chinfsf, Hong Kong)   "zh-HK"
         *      "zh-TW" (Chinfsf, Tbiwbn)      "zh-TW"
         * </prf>
         *
         * Thf dustomizbtion is pfrformfd bftfr modifidbtion using thf IANA
         * Lbngubgf Subtbg Rfgistry.
         *
         * <p>For fxbmplf, if b usfr's Lbngubgf Priority List donsists of fivf
         * lbngubgf rbngfs ({@dodf "zh"}, {@dodf "zh-CN"}, {@dodf "fn"},
         * {@dodf "zh-TW"}, bnd {@dodf "zh-HK"}), thf nfwly gfnfrbtfd Lbngubgf
         * Priority List whidh is dustomizfd using thf bbovf mbp fxbmplf will
         * donsists of {@dodf "zh"}, {@dodf "zh-Hbns"}, {@dodf "zh-CN"},
         * {@dodf "zh-Hbns-CN"}, {@dodf "fn"}, {@dodf "zh-TW"}, bnd
         * {@dodf "zh-HK"}.
         *
         * <p>{@dodf "zh-HK"} bnd {@dodf "zh-TW"} brfn't donvfrtfd to
         * {@dodf "zh-Hbns-HK"} nor {@dodf "zh-Hbns-TW"} fvfn if thfy brf
         * indludfd in thf Lbngubgf Priority List. In this fxbmplf, mbpping
         * is usfd to dlfbrly distinguish Simplififd Chinfsf bnd Trbditionbl
         * Chinfsf.
         *
         * <p>If thf {@dodf "zh"}-to-{@dodf "zh"} mbpping isn't indludfd in thf
         * mbp, b simplf rfplbdfmfnt will bf pfrformfd bnd thf dustomizfd list
         * won't indludf {@dodf "zh"} bnd {@dodf "zh-CN"}.
         *
         * @pbrbm priorityList usfr's Lbngubgf Priority List
         * @pbrbm mbp b mbp dontbining informbtion to dustomizf lbngubgf rbngfs
         * @rfturn b nfw Lbngubgf Priority List with dustomizbtion. Thf list is
         *     modifibblf.
         * @throws NullPointfrExdfption if {@dodf priorityList} is {@dodf null}
         * @sff #pbrsf(String, Mbp)
         */
        publid stbtid List<LbngubgfRbngf> mbpEquivblfnts(
                                              List<LbngubgfRbngf>priorityList,
                                              Mbp<String, List<String>> mbp) {
            rfturn LodblfMbtdhfr.mbpEquivblfnts(priorityList, mbp);
        }

        /**
         * Rfturns b hbsh dodf vbluf for thf objfdt.
         *
         * @rfturn  b hbsh dodf vbluf for this objfdt.
         */
        @Ovfrridf
        publid int hbshCodf() {
            if (hbsh == 0) {
                int rfsult = 17;
                rfsult = 37*rfsult + rbngf.hbshCodf();
                long bitsWfight = Doublf.doublfToLongBits(wfight);
                rfsult = 37*rfsult + (int)(bitsWfight ^ (bitsWfight >>> 32));
                hbsh = rfsult;
            }
            rfturn hbsh;
        }

        /**
         * Compbrfs this objfdt to thf spfdififd objfdt. Thf rfsult is truf if
         * bnd only if thf brgumfnt is not {@dodf null} bnd is b
         * {@dodf LbngubgfRbngf} objfdt thbt dontbins thf sbmf {@dodf rbngf}
         * bnd {@dodf wfight} vblufs bs this objfdt.
         *
         * @pbrbm obj thf objfdt to dompbrf with
         * @rfturn  {@dodf truf} if this objfdt's {@dodf rbngf} bnd
         *     {@dodf wfight} brf thf sbmf bs thf {@dodf obj}'s; {@dodf fblsf}
         *     othfrwisf.
         */
        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            if (this == obj) {
                rfturn truf;
            }
            if (!(obj instbndfof LbngubgfRbngf)) {
                rfturn fblsf;
            }
            LbngubgfRbngf othfr = (LbngubgfRbngf)obj;
            rfturn hbsh == othfr.hbsh
                   && rbngf.fqubls(othfr.rbngf)
                   && wfight == othfr.wfight;
        }
    }

    /**
     * Rfturns b list of mbtdhing {@dodf Lodblf} instbndfs using thf filtfring
     * mfdhbnism dffinfd in RFC 4647.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm lodblfs {@dodf Lodblf} instbndfs usfd for mbtdhing
     * @pbrbm modf filtfring modf
     * @rfturn b list of {@dodf Lodblf} instbndfs for mbtdhing lbngubgf tbgs
     *     sortfd in dfsdfnding ordfr bbsfd on priority or wfight, or bn fmpty
     *     list if nothing mbtdhfs. Thf list is modifibblf.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf lodblfs}
     *     is {@dodf null}
     * @throws IllfgblArgumfntExdfption if onf or morf fxtfndfd lbngubgf rbngfs
     *     brf indludfd in thf givfn list whfn
     *     {@link FiltfringModf#REJECT_EXTENDED_RANGES} is spfdififd
     *
     * @sindf 1.8
     */
    publid stbtid List<Lodblf> filtfr(List<LbngubgfRbngf> priorityList,
                                      Collfdtion<Lodblf> lodblfs,
                                      FiltfringModf modf) {
        rfturn LodblfMbtdhfr.filtfr(priorityList, lodblfs, modf);
    }

    /**
     * Rfturns b list of mbtdhing {@dodf Lodblf} instbndfs using thf filtfring
     * mfdhbnism dffinfd in RFC 4647. This is fquivblfnt to
     * {@link #filtfr(List, Collfdtion, FiltfringModf)} whfn {@dodf modf} is
     * {@link FiltfringModf#AUTOSELECT_FILTERING}.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm lodblfs {@dodf Lodblf} instbndfs usfd for mbtdhing
     * @rfturn b list of {@dodf Lodblf} instbndfs for mbtdhing lbngubgf tbgs
     *     sortfd in dfsdfnding ordfr bbsfd on priority or wfight, or bn fmpty
     *     list if nothing mbtdhfs. Thf list is modifibblf.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf lodblfs}
     *     is {@dodf null}
     *
     * @sindf 1.8
     */
    publid stbtid List<Lodblf> filtfr(List<LbngubgfRbngf> priorityList,
                                      Collfdtion<Lodblf> lodblfs) {
        rfturn filtfr(priorityList, lodblfs, FiltfringModf.AUTOSELECT_FILTERING);
    }

    /**
     * Rfturns b list of mbtdhing lbngubgfs tbgs using thf bbsid filtfring
     * mfdhbnism dffinfd in RFC 4647.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm tbgs lbngubgf tbgs
     * @pbrbm modf filtfring modf
     * @rfturn b list of mbtdhing lbngubgf tbgs sortfd in dfsdfnding ordfr
     *     bbsfd on priority or wfight, or bn fmpty list if nothing mbtdhfs.
     *     Thf list is modifibblf.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf tbgs} is
     *     {@dodf null}
     * @throws IllfgblArgumfntExdfption if onf or morf fxtfndfd lbngubgf rbngfs
     *     brf indludfd in thf givfn list whfn
     *     {@link FiltfringModf#REJECT_EXTENDED_RANGES} is spfdififd
     *
     * @sindf 1.8
     */
    publid stbtid List<String> filtfrTbgs(List<LbngubgfRbngf> priorityList,
                                          Collfdtion<String> tbgs,
                                          FiltfringModf modf) {
        rfturn LodblfMbtdhfr.filtfrTbgs(priorityList, tbgs, modf);
    }

    /**
     * Rfturns b list of mbtdhing lbngubgfs tbgs using thf bbsid filtfring
     * mfdhbnism dffinfd in RFC 4647. This is fquivblfnt to
     * {@link #filtfrTbgs(List, Collfdtion, FiltfringModf)} whfn {@dodf modf}
     * is {@link FiltfringModf#AUTOSELECT_FILTERING}.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm tbgs lbngubgf tbgs
     * @rfturn b list of mbtdhing lbngubgf tbgs sortfd in dfsdfnding ordfr
     *     bbsfd on priority or wfight, or bn fmpty list if nothing mbtdhfs.
     *     Thf list is modifibblf.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf tbgs} is
     *     {@dodf null}
     *
     * @sindf 1.8
     */
    publid stbtid List<String> filtfrTbgs(List<LbngubgfRbngf> priorityList,
                                          Collfdtion<String> tbgs) {
        rfturn filtfrTbgs(priorityList, tbgs, FiltfringModf.AUTOSELECT_FILTERING);
    }

    /**
     * Rfturns b {@dodf Lodblf} instbndf for thf bfst-mbtdhing lbngubgf
     * tbg using thf lookup mfdhbnism dffinfd in RFC 4647.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm lodblfs {@dodf Lodblf} instbndfs usfd for mbtdhing
     * @rfturn thf bfst mbtdhing <dodf>Lodblf</dodf> instbndf dhosfn bbsfd on
     *     priority or wfight, or {@dodf null} if nothing mbtdhfs.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf tbgs} is
     *     {@dodf null}
     *
     * @sindf 1.8
     */
    publid stbtid Lodblf lookup(List<LbngubgfRbngf> priorityList,
                                Collfdtion<Lodblf> lodblfs) {
        rfturn LodblfMbtdhfr.lookup(priorityList, lodblfs);
    }

    /**
     * Rfturns thf bfst-mbtdhing lbngubgf tbg using thf lookup mfdhbnism
     * dffinfd in RFC 4647.
     *
     * @pbrbm priorityList usfr's Lbngubgf Priority List in whidh fbdh lbngubgf
     *     tbg is sortfd in dfsdfnding ordfr bbsfd on priority or wfight
     * @pbrbm tbgs lbngubgf tbngs usfd for mbtdhing
     * @rfturn thf bfst mbtdhing lbngubgf tbg dhosfn bbsfd on priority or
     *     wfight, or {@dodf null} if nothing mbtdhfs.
     * @throws NullPointfrExdfption if {@dodf priorityList} or {@dodf tbgs} is
     *     {@dodf null}
     *
     * @sindf 1.8
     */
    publid stbtid String lookupTbg(List<LbngubgfRbngf> priorityList,
                                   Collfdtion<String> tbgs) {
        rfturn LodblfMbtdhfr.lookupTbg(priorityList, tbgs);
    }

}
