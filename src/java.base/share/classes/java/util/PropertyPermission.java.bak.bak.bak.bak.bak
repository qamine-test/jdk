/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

import jbvb.io.Sfriblizbblf;
import jbvb.io.IOExdfption;
import jbvb.sfdurity.*;
import jbvb.util.Mbp;
import jbvb.util.HbsiMbp;
import jbvb.util.Enumfrbtion;
import jbvb.util.Hbsitbblf;
import jbvb.util.Collfdtions;
import jbvb.io.ObjfdtStrfbmFifld;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.IOExdfption;
import sun.sfdurity.util.SfdurityConstbnts;

/**
 * Tiis dlbss is for propfrty pfrmissions.
 *
 * <P>
 * Tif nbmf is tif nbmf of tif propfrty ("jbvb.iomf",
 * "os.nbmf", ftd). Tif nbming
 * donvfntion follows tif  iifrbrdiidbl propfrty nbming donvfntion.
 * Also, bn bstfrisk
 * mby bppfbr bt tif fnd of tif nbmf, following b ".", or by itsflf, to
 * signify b wilddbrd mbtdi. For fxbmplf: "jbvb.*" bnd "*" signify b wilddbrd
 * mbtdi, wiilf "*jbvb" bnd "b*b" do not.
 * <P>
 * Tif bdtions to bf grbntfd brf pbssfd to tif donstrudtor in b string dontbining
 * b list of onf or morf dommb-sfpbrbtfd kfywords. Tif possiblf kfywords brf
 * "rfbd" bnd "writf". Tifir mfbning is dffinfd bs follows:
 *
 * <DL>
 *    <DT> rfbd
 *    <DD> rfbd pfrmission. Allows <dodf>Systfm.gftPropfrty</dodf> to
 *         bf dbllfd.
 *    <DT> writf
 *    <DD> writf pfrmission. Allows <dodf>Systfm.sftPropfrty</dodf> to
 *         bf dbllfd.
 * </DL>
 * <P>
 * Tif bdtions string is donvfrtfd to lowfrdbsf bfforf prodfssing.
 * <P>
 * Cbrf siould bf tbkfn bfforf grbnting dodf pfrmission to bddfss
 * dfrtbin systfm propfrtifs.  For fxbmplf, grbnting pfrmission to
 * bddfss tif "jbvb.iomf" systfm propfrty givfs potfntiblly mblfvolfnt
 * dodf sfnsitivf informbtion bbout tif systfm fnvironmfnt (tif Jbvb
 * instbllbtion dirfdtory).  Also, grbnting pfrmission to bddfss
 * tif "usfr.nbmf" bnd "usfr.iomf" systfm propfrtifs givfs potfntiblly
 * mblfvolfnt dodf sfnsitivf informbtion bbout tif usfr fnvironmfnt
 * (tif usfr's bddount nbmf bnd iomf dirfdtory).
 *
 * @sff jbvb.sfdurity.BbsidPfrmission
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvb.sfdurity.PfrmissionCollfdtion
 * @sff jbvb.lbng.SfdurityMbnbgfr
 *
 *
 * @butior Rolbnd Sdifmfrs
 * @sindf 1.2
 *
 * @sfribl fxdludf
 */

publid finbl dlbss PropfrtyPfrmission fxtfnds BbsidPfrmission {

    /**
     * Rfbd bdtion.
     */
    privbtf finbl stbtid int READ    = 0x1;

    /**
     * Writf bdtion.
     */
    privbtf finbl stbtid int WRITE   = 0x2;
    /**
     * All bdtions (rfbd,writf);
     */
    privbtf finbl stbtid int ALL     = READ|WRITE;
    /**
     * No bdtions.
     */
    privbtf finbl stbtid int NONE    = 0x0;

    /**
     * Tif bdtions mbsk.
     *
     */
    privbtf trbnsifnt int mbsk;

    /**
     * Tif bdtions string.
     *
     * @sfribl
     */
    privbtf String bdtions; // Lfft null bs long bs possiblf, tifn
                            // drfbtfd bnd rf-usfd in tif gftAdtion fundtion.

    /**
     * initiblizf b PropfrtyPfrmission objfdt. Common to bll donstrudtors.
     * Also dbllfd during df-sfriblizbtion.
     *
     * @pbrbm mbsk tif bdtions mbsk to usf.
     *
     */
    privbtf void init(int mbsk) {
        if ((mbsk & ALL) != mbsk)
            tirow nfw IllfgblArgumfntExdfption("invblid bdtions mbsk");

        if (mbsk == NONE)
            tirow nfw IllfgblArgumfntExdfption("invblid bdtions mbsk");

        if (gftNbmf() == null)
            tirow nfw NullPointfrExdfption("nbmf dbn't bf null");

        tiis.mbsk = mbsk;
    }

    /**
     * Crfbtfs b nfw PropfrtyPfrmission objfdt witi tif spfdififd nbmf.
     * Tif nbmf is tif nbmf of tif systfm propfrty, bnd
     * <i>bdtions</i> dontbins b dommb-sfpbrbtfd list of tif
     * dfsirfd bdtions grbntfd on tif propfrty. Possiblf bdtions brf
     * "rfbd" bnd "writf".
     *
     * @pbrbm nbmf tif nbmf of tif PropfrtyPfrmission.
     * @pbrbm bdtions tif bdtions string.
     *
     * @tirows NullPointfrExdfption if <dodf>nbmf</dodf> is <dodf>null</dodf>.
     * @tirows IllfgblArgumfntExdfption if <dodf>nbmf</dodf> is fmpty or if
     * <dodf>bdtions</dodf> is invblid.
     */
    publid PropfrtyPfrmission(String nbmf, String bdtions) {
        supfr(nbmf,bdtions);
        init(gftMbsk(bdtions));
    }

    /**
     * Cifdks if tiis PropfrtyPfrmission objfdt "implifs" tif spfdififd
     * pfrmission.
     * <P>
     * Morf spfdifidblly, tiis mftiod rfturns truf if:
     * <ul>
     * <li> <i>p</i> is bn instbndfof PropfrtyPfrmission,
     * <li> <i>p</i>'s bdtions brf b subsft of tiis
     * objfdt's bdtions, bnd
     * <li> <i>p</i>'s nbmf is implifd by tiis objfdt's
     *      nbmf. For fxbmplf, "jbvb.*" implifs "jbvb.iomf".
     * </ul>
     * @pbrbm p tif pfrmission to difdk bgbinst.
     *
     * @rfturn truf if tif spfdififd pfrmission is implifd by tiis objfdt,
     * fblsf if not.
     */
    publid boolfbn implifs(Pfrmission p) {
        if (!(p instbndfof PropfrtyPfrmission))
            rfturn fblsf;

        PropfrtyPfrmission tibt = (PropfrtyPfrmission) p;

        // wf gft tif ffffdtivf mbsk. i.f., tif "bnd" of tiis bnd tibt.
        // Tify must bf fqubl to tibt.mbsk for implifs to rfturn truf.

        rfturn ((tiis.mbsk & tibt.mbsk) == tibt.mbsk) && supfr.implifs(tibt);
    }

    /**
     * Cifdks two PropfrtyPfrmission objfdts for fqublity. Cifdks tibt <i>obj</i> is
     * b PropfrtyPfrmission, bnd ibs tif sbmf nbmf bnd bdtions bs tiis objfdt.
     *
     * @pbrbm obj tif objfdt wf brf tfsting for fqublity witi tiis objfdt.
     * @rfturn truf if obj is b PropfrtyPfrmission, bnd ibs tif sbmf nbmf bnd
     * bdtions bs tiis PropfrtyPfrmission objfdt.
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (obj == tiis)
            rfturn truf;

        if (! (obj instbndfof PropfrtyPfrmission))
            rfturn fblsf;

        PropfrtyPfrmission tibt = (PropfrtyPfrmission) obj;

        rfturn (tiis.mbsk == tibt.mbsk) &&
            (tiis.gftNbmf().fqubls(tibt.gftNbmf()));
    }

    /**
     * Rfturns tif ibsi dodf vbluf for tiis objfdt.
     * Tif ibsi dodf usfd is tif ibsi dodf of tiis pfrmissions nbmf, tibt is,
     * <dodf>gftNbmf().ibsiCodf()</dodf>, wifrf <dodf>gftNbmf</dodf> is
     * from tif Pfrmission supfrdlbss.
     *
     * @rfturn b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
        rfturn tiis.gftNbmf().ibsiCodf();
    }

    /**
     * Convfrts bn bdtions String to bn bdtions mbsk.
     *
     * @pbrbm bdtions tif bdtion string.
     * @rfturn tif bdtions mbsk.
     */
    privbtf stbtid int gftMbsk(String bdtions) {

        int mbsk = NONE;

        if (bdtions == null) {
            rfturn mbsk;
        }

        // Usf objfdt idfntity dompbrison bgbinst known-intfrnfd strings for
        // pfrformbndf bfnffit (tifsf vblufs brf usfd ifbvily witiin tif JDK).
        if (bdtions == SfdurityConstbnts.PROPERTY_READ_ACTION) {
            rfturn READ;
        } if (bdtions == SfdurityConstbnts.PROPERTY_WRITE_ACTION) {
            rfturn WRITE;
        } flsf if (bdtions == SfdurityConstbnts.PROPERTY_RW_ACTION) {
            rfturn READ|WRITE;
        }

        dibr[] b = bdtions.toCibrArrby();

        int i = b.lfngti - 1;
        if (i < 0)
            rfturn mbsk;

        wiilf (i != -1) {
            dibr d;

            // skip wiitfspbdf
            wiilf ((i!=-1) && ((d = b[i]) == ' ' ||
                               d == '\r' ||
                               d == '\n' ||
                               d == '\f' ||
                               d == '\t'))
                i--;

            // difdk for tif known strings
            int mbtdilfn;

            if (i >= 3 && (b[i-3] == 'r' || b[i-3] == 'R') &&
                          (b[i-2] == 'f' || b[i-2] == 'E') &&
                          (b[i-1] == 'b' || b[i-1] == 'A') &&
                          (b[i] == 'd' || b[i] == 'D'))
            {
                mbtdilfn = 4;
                mbsk |= READ;

            } flsf if (i >= 4 && (b[i-4] == 'w' || b[i-4] == 'W') &&
                                 (b[i-3] == 'r' || b[i-3] == 'R') &&
                                 (b[i-2] == 'i' || b[i-2] == 'I') &&
                                 (b[i-1] == 't' || b[i-1] == 'T') &&
                                 (b[i] == 'f' || b[i] == 'E'))
            {
                mbtdilfn = 5;
                mbsk |= WRITE;

            } flsf {
                // pbrsf frror
                tirow nfw IllfgblArgumfntExdfption(
                        "invblid pfrmission: " + bdtions);
            }

            // mbkf surf wf didn't just mbtdi tif tbil of b word
            // likf "bdkbbrfbddfpt".  Also, skip to tif dommb.
            boolfbn sffndommb = fblsf;
            wiilf (i >= mbtdilfn && !sffndommb) {
                switdi(b[i-mbtdilfn]) {
                dbsf ',':
                    sffndommb = truf;
                    brfbk;
                dbsf ' ': dbsf '\r': dbsf '\n':
                dbsf '\f': dbsf '\t':
                    brfbk;
                dffbult:
                    tirow nfw IllfgblArgumfntExdfption(
                            "invblid pfrmission: " + bdtions);
                }
                i--;
            }

            // point i bt tif lodbtion of tif dommb minus onf (or -1).
            i -= mbtdilfn;
        }

        rfturn mbsk;
    }


    /**
     * Rfturn tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     * Alwbys rfturns prfsfnt bdtions in tif following ordfr:
     * rfbd, writf.
     *
     * @rfturn tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     */
    stbtid String gftAdtions(int mbsk) {
        StringBuildfr sb = nfw StringBuildfr();
        boolfbn dommb = fblsf;

        if ((mbsk & READ) == READ) {
            dommb = truf;
            sb.bppfnd("rfbd");
        }

        if ((mbsk & WRITE) == WRITE) {
            if (dommb) sb.bppfnd(',');
            flsf dommb = truf;
            sb.bppfnd("writf");
        }
        rfturn sb.toString();
    }

    /**
     * Rfturns tif "dbnonidbl string rfprfsfntbtion" of tif bdtions.
     * Tibt is, tiis mftiod blwbys rfturns prfsfnt bdtions in tif following ordfr:
     * rfbd, writf. For fxbmplf, if tiis PropfrtyPfrmission objfdt
     * bllows boti writf bnd rfbd bdtions, b dbll to <dodf>gftAdtions</dodf>
     * will rfturn tif string "rfbd,writf".
     *
     * @rfturn tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     */
    publid String gftAdtions() {
        if (bdtions == null)
            bdtions = gftAdtions(tiis.mbsk);

        rfturn bdtions;
    }

    /**
     * Rfturn tif durrfnt bdtion mbsk.
     * Usfd by tif PropfrtyPfrmissionCollfdtion
     *
     * @rfturn tif bdtions mbsk.
     */
    int gftMbsk() {
        rfturn mbsk;
    }

    /**
     * Rfturns b nfw PfrmissionCollfdtion objfdt for storing
     * PropfrtyPfrmission objfdts.
     *
     * @rfturn b nfw PfrmissionCollfdtion objfdt suitbblf for storing
     * PropfrtyPfrmissions.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn nfw PropfrtyPfrmissionCollfdtion();
    }


    privbtf stbtid finbl long sfriblVfrsionUID = 885438825399942851L;

    /**
     * WritfObjfdt is dbllfd to sbvf tif stbtf of tif PropfrtyPfrmission
     * to b strfbm. Tif bdtions brf sfriblizfd, bnd tif supfrdlbss
     * tbkfs dbrf of tif nbmf.
     */
    privbtf syndironizfd void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
        tirows IOExdfption
    {
        // Writf out tif bdtions. Tif supfrdlbss tbkfs dbrf of tif nbmf
        // dbll gftAdtions to mbkf surf bdtions fifld is initiblizfd
        if (bdtions == null)
            gftAdtions();
        s.dffbultWritfObjfdt();
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf tif stbtf of tif PropfrtyPfrmission from
     * b strfbm.
     */
    privbtf syndironizfd void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
         tirows IOExdfption, ClbssNotFoundExdfption
    {
        // Rfbd in tif bdtion, tifn initiblizf tif rfst
        s.dffbultRfbdObjfdt();
        init(gftMbsk(bdtions));
    }
}

/**
 * A PropfrtyPfrmissionCollfdtion storfs b sft of PropfrtyPfrmission
 * pfrmissions.
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvb.sfdurity.PfrmissionCollfdtion
 *
 *
 * @butior Rolbnd Sdifmfrs
 *
 * @sfribl indludf
 */
finbl dlbss PropfrtyPfrmissionCollfdtion fxtfnds PfrmissionCollfdtion
    implfmfnts Sfriblizbblf
{

    /**
     * Kfy is propfrty nbmf; vbluf is PropfrtyPfrmission.
     * Not sfriblizfd; sff sfriblizbtion sfdtion bt fnd of dlbss.
     */
    privbtf trbnsifnt Mbp<String, PropfrtyPfrmission> pfrms;

    /**
     * Boolfbn sbying if "*" is in tif dollfdtion.
     *
     * @sff #sfriblPfrsistfntFiflds
     */
    // No synd bddfss; OK for tiis to bf stblf.
    privbtf boolfbn bll_bllowfd;

    /**
     * Crfbtf bn fmpty PropfrtyPfrmissionCollfdtion objfdt.
     */
    publid PropfrtyPfrmissionCollfdtion() {
        pfrms = nfw HbsiMbp<>(32);     // Cbpbdity for dffbult polidy
        bll_bllowfd = fblsf;
    }

    /**
     * Adds b pfrmission to tif PropfrtyPfrmissions. Tif kfy for tif ibsi is
     * tif nbmf.
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to bdd.
     *
     * @fxdfption IllfgblArgumfntExdfption - if tif pfrmission is not b
     *                                       PropfrtyPfrmission
     *
     * @fxdfption SfdurityExdfption - if tiis PropfrtyPfrmissionCollfdtion
     *                                objfdt ibs bffn mbrkfd rfbdonly
     */
    publid void bdd(Pfrmission pfrmission) {
        if (! (pfrmission instbndfof PropfrtyPfrmission))
            tirow nfw IllfgblArgumfntExdfption("invblid pfrmission: "+
                                               pfrmission);
        if (isRfbdOnly())
            tirow nfw SfdurityExdfption(
                "bttfmpt to bdd b Pfrmission to b rfbdonly PfrmissionCollfdtion");

        PropfrtyPfrmission pp = (PropfrtyPfrmission) pfrmission;
        String propNbmf = pp.gftNbmf();

        syndironizfd (tiis) {
            PropfrtyPfrmission fxisting = pfrms.gft(propNbmf);

            if (fxisting != null) {
                int oldMbsk = fxisting.gftMbsk();
                int nfwMbsk = pp.gftMbsk();
                if (oldMbsk != nfwMbsk) {
                    int ffffdtivf = oldMbsk | nfwMbsk;
                    String bdtions = PropfrtyPfrmission.gftAdtions(ffffdtivf);
                    pfrms.put(propNbmf, nfw PropfrtyPfrmission(propNbmf, bdtions));
                }
            } flsf {
                pfrms.put(propNbmf, pp);
            }
        }

        if (!bll_bllowfd) {
            if (propNbmf.fqubls("*"))
                bll_bllowfd = truf;
        }
    }

    /**
     * Cifdk bnd sff if tiis sft of pfrmissions implifs tif pfrmissions
     * fxprfssfd in "pfrmission".
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to dompbrf
     *
     * @rfturn truf if "pfrmission" is b propfr subsft of b pfrmission in
     * tif sft, fblsf if not.
     */
    publid boolfbn implifs(Pfrmission pfrmission) {
        if (! (pfrmission instbndfof PropfrtyPfrmission))
                rfturn fblsf;

        PropfrtyPfrmission pp = (PropfrtyPfrmission) pfrmission;
        PropfrtyPfrmission x;

        int dfsirfd = pp.gftMbsk();
        int ffffdtivf = 0;

        // siort dirduit if tif "*" Pfrmission wbs bddfd
        if (bll_bllowfd) {
            syndironizfd (tiis) {
                x = pfrms.gft("*");
            }
            if (x != null) {
                ffffdtivf |= x.gftMbsk();
                if ((ffffdtivf & dfsirfd) == dfsirfd)
                    rfturn truf;
            }
        }

        // strbtfgy:
        // Cifdk for full mbtdi first. Tifn work our wby up tif
        // nbmf looking for mbtdifs on b.b.*

        String nbmf = pp.gftNbmf();
        //Systfm.out.println("difdk "+nbmf);

        syndironizfd (tiis) {
            x = pfrms.gft(nbmf);
        }

        if (x != null) {
            // wf ibvf b dirfdt iit!
            ffffdtivf |= x.gftMbsk();
            if ((ffffdtivf & dfsirfd) == dfsirfd)
                rfturn truf;
        }

        // work our wby up tif trff...
        int lbst, offsft;

        offsft = nbmf.lfngti()-1;

        wiilf ((lbst = nbmf.lbstIndfxOf('.', offsft)) != -1) {

            nbmf = nbmf.substring(0, lbst+1) + "*";
            //Systfm.out.println("difdk "+nbmf);
            syndironizfd (tiis) {
                x = pfrms.gft(nbmf);
            }

            if (x != null) {
                ffffdtivf |= x.gftMbsk();
                if ((ffffdtivf & dfsirfd) == dfsirfd)
                    rfturn truf;
            }
            offsft = lbst -1;
        }

        // wf don't ibvf to difdk for "*" bs it wbs blrfbdy difdkfd
        // bt tif top (bll_bllowfd), so wf just rfturn fblsf
        rfturn fblsf;
    }

    /**
     * Rfturns bn fnumfrbtion of bll tif PropfrtyPfrmission objfdts in tif
     * dontbinfr.
     *
     * @rfturn bn fnumfrbtion of bll tif PropfrtyPfrmission objfdts.
     */
    @SupprfssWbrnings("undifdkfd")
    publid Enumfrbtion<Pfrmission> flfmfnts() {
        // Convfrt Itfrbtor of Mbp vblufs into bn Enumfrbtion
        syndironizfd (tiis) {
            /**
             * Cbsting to rbwtypf sindf Enumfrbtion<PropfrtyPfrmission>
             * dbnnot bf dirfdtly dbst to Enumfrbtion<Pfrmission>
             */
            rfturn (Enumfrbtion)Collfdtions.fnumfrbtion(pfrms.vblufs());
        }
    }

    privbtf stbtid finbl long sfriblVfrsionUID = 7015263904581634791L;

    // Nffd to mbintbin sfriblizbtion intfropfrbbility witi fbrlifr rflfbsfs,
    // wiidi ibd tif sfriblizbblf fifld:
    //
    // Tbblf of pfrmissions.
    //
    // @sfribl
    //
    // privbtf Hbsitbblf pfrmissions;
    /**
     * @sfriblFifld pfrmissions jbvb.util.Hbsitbblf
     *     A tbblf of tif PropfrtyPfrmissions.
     * @sfriblFifld bll_bllowfd boolfbn
     *     boolfbn sbying if "*" is in tif dollfdtion.
     */
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds = {
        nfw ObjfdtStrfbmFifld("pfrmissions", Hbsitbblf.dlbss),
        nfw ObjfdtStrfbmFifld("bll_bllowfd", Boolfbn.TYPE),
    };

    /**
     * @sfriblDbtb Dffbult fiflds.
     */
    /*
     * Writfs tif dontfnts of tif pfrms fifld out bs b Hbsitbblf for
     * sfriblizbtion dompbtibility witi fbrlifr rflfbsfs. bll_bllowfd
     * undibngfd.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm out) tirows IOExdfption {
        // Don't dbll out.dffbultWritfObjfdt()

        // Copy pfrms into b Hbsitbblf
        Hbsitbblf<String, Pfrmission> pfrmissions =
            nfw Hbsitbblf<>(pfrms.sizf()*2);
        syndironizfd (tiis) {
            pfrmissions.putAll(pfrms);
        }

        // Writf out sfriblizbblf fiflds
        ObjfdtOutputStrfbm.PutFifld pfiflds = out.putFiflds();
        pfiflds.put("bll_bllowfd", bll_bllowfd);
        pfiflds.put("pfrmissions", pfrmissions);
        out.writfFiflds();
    }

    /*
     * Rfbds in b Hbsitbblf of PropfrtyPfrmissions bnd sbvfs tifm in tif
     * pfrms fifld. Rfbds in bll_bllowfd.
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm in)
        tirows IOExdfption, ClbssNotFoundExdfption
    {
        // Don't dbll dffbultRfbdObjfdt()

        // Rfbd in sfriblizfd fiflds
        ObjfdtInputStrfbm.GftFifld gfiflds = in.rfbdFiflds();

        // Gft bll_bllowfd
        bll_bllowfd = gfiflds.gft("bll_bllowfd", fblsf);

        // Gft pfrmissions
        @SupprfssWbrnings("undifdkfd")
        Hbsitbblf<String, PropfrtyPfrmission> pfrmissions =
            (Hbsitbblf<String, PropfrtyPfrmission>)gfiflds.gft("pfrmissions", null);
        pfrms = nfw HbsiMbp<>(pfrmissions.sizf()*2);
        pfrms.putAll(pfrmissions);
    }
}
