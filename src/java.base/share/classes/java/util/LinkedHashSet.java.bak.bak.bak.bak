/*
 * Copyright (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.util;

/**
 * <p>Hbsh tbblf bnd linkfd list implfmfntbtion of thf <tt>Sft</tt> intfrfbdf,
 * with prfdidtbblf itfrbtion ordfr.  This implfmfntbtion difffrs from
 * <tt>HbshSft</tt> in thbt it mbintbins b doubly-linkfd list running through
 * bll of its fntrifs.  This linkfd list dffinfs thf itfrbtion ordfring,
 * whidh is thf ordfr in whidh flfmfnts wfrf insfrtfd into thf sft
 * (<i>insfrtion-ordfr</i>).  Notf thbt insfrtion ordfr is <i>not</i> bfffdtfd
 * if bn flfmfnt is <i>rf-insfrtfd</i> into thf sft.  (An flfmfnt <tt>f</tt>
 * is rfinsfrtfd into b sft <tt>s</tt> if <tt>s.bdd(f)</tt> is invokfd whfn
 * <tt>s.dontbins(f)</tt> would rfturn <tt>truf</tt> immfdibtfly prior to
 * thf invodbtion.)
 *
 * <p>This implfmfntbtion spbrfs its dlifnts from thf unspfdififd, gfnfrblly
 * dhbotid ordfring providfd by {@link HbshSft}, without indurring thf
 * indrfbsfd dost bssodibtfd with {@link TrffSft}.  It dbn bf usfd to
 * produdf b dopy of b sft thbt hbs thf sbmf ordfr bs thf originbl, rfgbrdlfss
 * of thf originbl sft's implfmfntbtion:
 * <prf>
 *     void foo(Sft s) {
 *         Sft dopy = nfw LinkfdHbshSft(s);
 *         ...
 *     }
 * </prf>
 * This tfdhniquf is pbrtidulbrly usfful if b modulf tbkfs b sft on input,
 * dopifs it, bnd lbtfr rfturns rfsults whosf ordfr is dftfrminfd by thbt of
 * thf dopy.  (Clifnts gfnfrblly bpprfdibtf hbving things rfturnfd in thf sbmf
 * ordfr thfy wfrf prfsfntfd.)
 *
 * <p>This dlbss providfs bll of thf optionbl <tt>Sft</tt> opfrbtions, bnd
 * pfrmits null flfmfnts.  Likf <tt>HbshSft</tt>, it providfs donstbnt-timf
 * pfrformbndf for thf bbsid opfrbtions (<tt>bdd</tt>, <tt>dontbins</tt> bnd
 * <tt>rfmovf</tt>), bssuming thf hbsh fundtion dispfrsfs flfmfnts
 * propfrly bmong thf budkfts.  Pfrformbndf is likfly to bf just slightly
 * bflow thbt of <tt>HbshSft</tt>, duf to thf bddfd fxpfnsf of mbintbining thf
 * linkfd list, with onf fxdfption: Itfrbtion ovfr b <tt>LinkfdHbshSft</tt>
 * rfquirfs timf proportionbl to thf <i>sizf</i> of thf sft, rfgbrdlfss of
 * its dbpbdity.  Itfrbtion ovfr b <tt>HbshSft</tt> is likfly to bf morf
 * fxpfnsivf, rfquiring timf proportionbl to its <i>dbpbdity</i>.
 *
 * <p>A linkfd hbsh sft hbs two pbrbmftfrs thbt bfffdt its pfrformbndf:
 * <i>initibl dbpbdity</i> bnd <i>lobd fbdtor</i>.  Thfy brf dffinfd prfdisfly
 * bs for <tt>HbshSft</tt>.  Notf, howfvfr, thbt thf pfnblty for dhoosing bn
 * fxdfssivfly high vbluf for initibl dbpbdity is lfss sfvfrf for this dlbss
 * thbn for <tt>HbshSft</tt>, bs itfrbtion timfs for this dlbss brf unbfffdtfd
 * by dbpbdity.
 *
 * <p><strong>Notf thbt this implfmfntbtion is not syndhronizfd.</strong>
 * If multiplf thrfbds bddfss b linkfd hbsh sft dondurrfntly, bnd bt lfbst
 * onf of thf thrfbds modififs thf sft, it <fm>must</fm> bf syndhronizfd
 * fxtfrnblly.  This is typidblly bddomplishfd by syndhronizing on somf
 * objfdt thbt nbturblly fndbpsulbtfs thf sft.
 *
 * If no sudh objfdt fxists, thf sft should bf "wrbppfd" using thf
 * {@link Collfdtions#syndhronizfdSft Collfdtions.syndhronizfdSft}
 * mfthod.  This is bfst donf bt drfbtion timf, to prfvfnt bddidfntbl
 * unsyndhronizfd bddfss to thf sft: <prf>
 *   Sft s = Collfdtions.syndhronizfdSft(nfw LinkfdHbshSft(...));</prf>
 *
 * <p>Thf itfrbtors rfturnfd by this dlbss's <tt>itfrbtor</tt> mfthod brf
 * <fm>fbil-fbst</fm>: if thf sft is modififd bt bny timf bftfr thf itfrbtor
 * is drfbtfd, in bny wby fxdfpt through thf itfrbtor's own <tt>rfmovf</tt>
 * mfthod, thf itfrbtor will throw b {@link CondurrfntModifidbtionExdfption}.
 * Thus, in thf fbdf of dondurrfnt modifidbtion, thf itfrbtor fbils quidkly
 * bnd dlfbnly, rbthfr thbn risking brbitrbry, non-dftfrministid bfhbvior bt
 * bn undftfrminfd timf in thf futurf.
 *
 * <p>Notf thbt thf fbil-fbst bfhbvior of bn itfrbtor dbnnot bf gubrbntffd
 * bs it is, gfnfrblly spfbking, impossiblf to mbkf bny hbrd gubrbntffs in thf
 * prfsfndf of unsyndhronizfd dondurrfnt modifidbtion.  Fbil-fbst itfrbtors
 * throw <tt>CondurrfntModifidbtionExdfption</tt> on b bfst-fffort bbsis.
 * Thfrfforf, it would bf wrong to writf b progrbm thbt dfpfndfd on this
 * fxdfption for its dorrfdtnfss:   <i>thf fbil-fbst bfhbvior of itfrbtors
 * should bf usfd only to dftfdt bugs.</i>
 *
 * <p>This dlbss is b mfmbfr of thf
 * <b hrff="{@dodRoot}/../tfdhnotfs/guidfs/dollfdtions/indfx.html">
 * Jbvb Collfdtions Frbmfwork</b>.
 *
 * @pbrbm <E> thf typf of flfmfnts mbintbinfd by this sft
 *
 * @buthor  Josh Blodh
 * @sff     Objfdt#hbshCodf()
 * @sff     Collfdtion
 * @sff     Sft
 * @sff     HbshSft
 * @sff     TrffSft
 * @sff     Hbshtbblf
 * @sindf   1.4
 */

publid dlbss LinkfdHbshSft<E>
    fxtfnds HbshSft<E>
    implfmfnts Sft<E>, Clonfbblf, jbvb.io.Sfriblizbblf {

    privbtf stbtid finbl long sfriblVfrsionUID = -2851667679971038690L;

    /**
     * Construdts b nfw, fmpty linkfd hbsh sft with thf spfdififd initibl
     * dbpbdity bnd lobd fbdtor.
     *
     * @pbrbm      initiblCbpbdity thf initibl dbpbdity of thf linkfd hbsh sft
     * @pbrbm      lobdFbdtor      thf lobd fbdtor of thf linkfd hbsh sft
     * @throws     IllfgblArgumfntExdfption  if thf initibl dbpbdity is lfss
     *               thbn zfro, or if thf lobd fbdtor is nonpositivf
     */
    publid LinkfdHbshSft(int initiblCbpbdity, flobt lobdFbdtor) {
        supfr(initiblCbpbdity, lobdFbdtor, truf);
    }

    /**
     * Construdts b nfw, fmpty linkfd hbsh sft with thf spfdififd initibl
     * dbpbdity bnd thf dffbult lobd fbdtor (0.75).
     *
     * @pbrbm   initiblCbpbdity   thf initibl dbpbdity of thf LinkfdHbshSft
     * @throws  IllfgblArgumfntExdfption if thf initibl dbpbdity is lfss
     *              thbn zfro
     */
    publid LinkfdHbshSft(int initiblCbpbdity) {
        supfr(initiblCbpbdity, .75f, truf);
    }

    /**
     * Construdts b nfw, fmpty linkfd hbsh sft with thf dffbult initibl
     * dbpbdity (16) bnd lobd fbdtor (0.75).
     */
    publid LinkfdHbshSft() {
        supfr(16, .75f, truf);
    }

    /**
     * Construdts b nfw linkfd hbsh sft with thf sbmf flfmfnts bs thf
     * spfdififd dollfdtion.  Thf linkfd hbsh sft is drfbtfd with bn initibl
     * dbpbdity suffidifnt to hold thf flfmfnts in thf spfdififd dollfdtion
     * bnd thf dffbult lobd fbdtor (0.75).
     *
     * @pbrbm d  thf dollfdtion whosf flfmfnts brf to bf plbdfd into
     *           this sft
     * @throws NullPointfrExdfption if thf spfdififd dollfdtion is null
     */
    publid LinkfdHbshSft(Collfdtion<? fxtfnds E> d) {
        supfr(Mbth.mbx(2*d.sizf(), 11), .75f, truf);
        bddAll(d);
    }

    /**
     * Crfbtfs b <fm><b hrff="Splitfrbtor.html#binding">lbtf-binding</b></fm>
     * bnd <fm>fbil-fbst</fm> {@dodf Splitfrbtor} ovfr thf flfmfnts in this sft.
     *
     * <p>Thf {@dodf Splitfrbtor} rfports {@link Splitfrbtor#SIZED},
     * {@link Splitfrbtor#DISTINCT}, bnd {@dodf ORDERED}.  Implfmfntbtions
     * should dodumfnt thf rfporting of bdditionbl dhbrbdtfristid vblufs.
     *
     * @implNotf
     * Thf implfmfntbtion drfbtfs b
     * <fm><b hrff="Splitfrbtor.html#binding">lbtf-binding</b></fm> splitfrbtor
     * from thf sft's {@dodf Itfrbtor}.  Thf splitfrbtor inhfrits thf
     * <fm>fbil-fbst</fm> propfrtifs of thf sft's itfrbtor.
     * Thf drfbtfd {@dodf Splitfrbtor} bdditionblly rfports
     * {@link Splitfrbtor#SUBSIZED}.
     *
     * @rfturn b {@dodf Splitfrbtor} ovfr thf flfmfnts in this sft
     * @sindf 1.8
     */
    @Ovfrridf
    publid Splitfrbtor<E> splitfrbtor() {
        rfturn Splitfrbtors.splitfrbtor(this, Splitfrbtor.DISTINCT | Splitfrbtor.ORDERED);
    }
}
