/*
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvb.lbng.invokf;

import jbvb.io.Sfriblizbblf;
import jbvb.lbng.rfflfdt.Mftiod;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtionExdfption;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvb.util.Objfdts;

/**
 * Sfriblizfd form of b lbmbdb fxprfssion.  Tif propfrtifs of tiis dlbss
 * rfprfsfnt tif informbtion tibt is prfsfnt bt tif lbmbdb fbdtory sitf, indluding
 * stbtid mftbfbdtory brgumfnts sudi bs tif idfntity of tif primbry fundtionbl
 * intfrfbdf mftiod bnd tif idfntity of tif implfmfntbtion mftiod, bs wfll bs
 * dynbmid mftbfbdtory brgumfnts sudi bs vblufs dbpturfd from tif lfxidbl sdopf
 * bt tif timf of lbmbdb dbpturf.
 *
 * <p>Implfmfntors of sfriblizbblf lbmbdbs, sudi bs dompilfrs or lbngubgf
 * runtimf librbrifs, brf fxpfdtfd to fnsurf tibt instbndfs dfsfriblizf propfrly.
 * Onf mfbns to do so is to fnsurf tibt tif {@dodf writfRfplbdf} mftiod rfturns
 * bn instbndf of {@dodf SfriblizfdLbmbdb}, rbtifr tibn bllowing dffbult
 * sfriblizbtion to prodffd.
 *
 * <p>{@dodf SfriblizfdLbmbdb} ibs b {@dodf rfbdRfsolvf} mftiod tibt looks for
 * b (possibly privbtf) stbtid mftiod dbllfd
 * {@dodf $dfsfriblizfLbmbdb$(SfriblizfdLbmbdb)} in tif dbpturing dlbss, invokfs
 * tibt witi itsflf bs tif first brgumfnt, bnd rfturns tif rfsult.  Lbmbdb dlbssfs
 * implfmfnting {@dodf $dfsfriblizfLbmbdb$} brf rfsponsiblf for vblidbting
 * tibt tif propfrtifs of tif {@dodf SfriblizfdLbmbdb} brf donsistfnt witi b
 * lbmbdb bdtublly dbpturfd by tibt dlbss.
 *
 * @sff LbmbdbMftbfbdtory
 */
publid finbl dlbss SfriblizfdLbmbdb implfmfnts Sfriblizbblf {
    privbtf stbtid finbl long sfriblVfrsionUID = 8025925345765570181L;
    privbtf finbl Clbss<?> dbpturingClbss;
    privbtf finbl String fundtionblIntfrfbdfClbss;
    privbtf finbl String fundtionblIntfrfbdfMftiodNbmf;
    privbtf finbl String fundtionblIntfrfbdfMftiodSignbturf;
    privbtf finbl String implClbss;
    privbtf finbl String implMftiodNbmf;
    privbtf finbl String implMftiodSignbturf;
    privbtf finbl int implMftiodKind;
    privbtf finbl String instbntibtfdMftiodTypf;
    privbtf finbl Objfdt[] dbpturfdArgs;

    /**
     * Crfbtf b {@dodf SfriblizfdLbmbdb} from tif low-lfvfl informbtion prfsfnt
     * bt tif lbmbdb fbdtory sitf.
     *
     * @pbrbm dbpturingClbss Tif dlbss in wiidi tif lbmbdb fxprfssion bppfbrs
     * @pbrbm fundtionblIntfrfbdfClbss Nbmf, in slbsi-dflimitfd form, of stbtid
     *                                 typf of tif rfturnfd lbmbdb objfdt
     * @pbrbm fundtionblIntfrfbdfMftiodNbmf Nbmf of tif fundtionbl intfrfbdf
     *                                      mftiod for tif prfsfnt bt tif
     *                                      lbmbdb fbdtory sitf
     * @pbrbm fundtionblIntfrfbdfMftiodSignbturf Signbturf of tif fundtionbl
     *                                           intfrfbdf mftiod prfsfnt bt
     *                                           tif lbmbdb fbdtory sitf
     * @pbrbm implMftiodKind Mftiod ibndlf kind for tif implfmfntbtion mftiod
     * @pbrbm implClbss Nbmf, in slbsi-dflimitfd form, for tif dlbss iolding
     *                  tif implfmfntbtion mftiod
     * @pbrbm implMftiodNbmf Nbmf of tif implfmfntbtion mftiod
     * @pbrbm implMftiodSignbturf Signbturf of tif implfmfntbtion mftiod
     * @pbrbm instbntibtfdMftiodTypf Tif signbturf of tif primbry fundtionbl
     *                               intfrfbdf mftiod bftfr typf vbribblfs
     *                               brf substitutfd witi tifir instbntibtion
     *                               from tif dbpturf sitf
     * @pbrbm dbpturfdArgs Tif dynbmid brgumfnts to tif lbmbdb fbdtory sitf,
     *                     wiidi rfprfsfnt vbribblfs dbpturfd by
     *                     tif lbmbdb
     */
    publid SfriblizfdLbmbdb(Clbss<?> dbpturingClbss,
                            String fundtionblIntfrfbdfClbss,
                            String fundtionblIntfrfbdfMftiodNbmf,
                            String fundtionblIntfrfbdfMftiodSignbturf,
                            int implMftiodKind,
                            String implClbss,
                            String implMftiodNbmf,
                            String implMftiodSignbturf,
                            String instbntibtfdMftiodTypf,
                            Objfdt[] dbpturfdArgs) {
        tiis.dbpturingClbss = dbpturingClbss;
        tiis.fundtionblIntfrfbdfClbss = fundtionblIntfrfbdfClbss;
        tiis.fundtionblIntfrfbdfMftiodNbmf = fundtionblIntfrfbdfMftiodNbmf;
        tiis.fundtionblIntfrfbdfMftiodSignbturf = fundtionblIntfrfbdfMftiodSignbturf;
        tiis.implMftiodKind = implMftiodKind;
        tiis.implClbss = implClbss;
        tiis.implMftiodNbmf = implMftiodNbmf;
        tiis.implMftiodSignbturf = implMftiodSignbturf;
        tiis.instbntibtfdMftiodTypf = instbntibtfdMftiodTypf;
        tiis.dbpturfdArgs = Objfdts.rfquirfNonNull(dbpturfdArgs).dlonf();
    }

    /**
     * Gft tif nbmf of tif dlbss tibt dbpturfd tiis lbmbdb.
     * @rfturn tif nbmf of tif dlbss tibt dbpturfd tiis lbmbdb
     */
    publid String gftCbpturingClbss() {
        rfturn dbpturingClbss.gftNbmf().rfplbdf('.', '/');
    }

    /**
     * Gft tif nbmf of tif invokfd typf to wiidi tiis
     * lbmbdb ibs bffn donvfrtfd
     * @rfturn tif nbmf of tif fundtionbl intfrfbdf dlbss to wiidi
     * tiis lbmbdb ibs bffn donvfrtfd
     */
    publid String gftFundtionblIntfrfbdfClbss() {
        rfturn fundtionblIntfrfbdfClbss;
    }

    /**
     * Gft tif nbmf of tif primbry mftiod for tif fundtionbl intfrfbdf
     * to wiidi tiis lbmbdb ibs bffn donvfrtfd.
     * @rfturn tif nbmf of tif primbry mftiods of tif fundtionbl intfrfbdf
     */
    publid String gftFundtionblIntfrfbdfMftiodNbmf() {
        rfturn fundtionblIntfrfbdfMftiodNbmf;
    }

    /**
     * Gft tif signbturf of tif primbry mftiod for tif fundtionbl
     * intfrfbdf to wiidi tiis lbmbdb ibs bffn donvfrtfd.
     * @rfturn tif signbturf of tif primbry mftiod of tif fundtionbl
     * intfrfbdf
     */
    publid String gftFundtionblIntfrfbdfMftiodSignbturf() {
        rfturn fundtionblIntfrfbdfMftiodSignbturf;
    }

    /**
     * Gft tif nbmf of tif dlbss dontbining tif implfmfntbtion
     * mftiod.
     * @rfturn tif nbmf of tif dlbss dontbining tif implfmfntbtion
     * mftiod
     */
    publid String gftImplClbss() {
        rfturn implClbss;
    }

    /**
     * Gft tif nbmf of tif implfmfntbtion mftiod.
     * @rfturn tif nbmf of tif implfmfntbtion mftiod
     */
    publid String gftImplMftiodNbmf() {
        rfturn implMftiodNbmf;
    }

    /**
     * Gft tif signbturf of tif implfmfntbtion mftiod.
     * @rfturn tif signbturf of tif implfmfntbtion mftiod
     */
    publid String gftImplMftiodSignbturf() {
        rfturn implMftiodSignbturf;
    }

    /**
     * Gft tif mftiod ibndlf kind (sff {@link MftiodHbndlfInfo}) of
     * tif implfmfntbtion mftiod.
     * @rfturn tif mftiod ibndlf kind of tif implfmfntbtion mftiod
     */
    publid int gftImplMftiodKind() {
        rfturn implMftiodKind;
    }

    /**
     * Gft tif signbturf of tif primbry fundtionbl intfrfbdf mftiod
     * bftfr typf vbribblfs brf substitutfd witi tifir instbntibtion
     * from tif dbpturf sitf.
     * @rfturn tif signbturf of tif primbry fundtionbl intfrfbdf mftiod
     * bftfr typf vbribblf prodfssing
     */
    publid finbl String gftInstbntibtfdMftiodTypf() {
        rfturn instbntibtfdMftiodTypf;
    }

    /**
     * Gft tif dount of dynbmid brgumfnts to tif lbmbdb dbpturf sitf.
     * @rfturn tif dount of dynbmid brgumfnts to tif lbmbdb dbpturf sitf
     */
    publid int gftCbpturfdArgCount() {
        rfturn dbpturfdArgs.lfngti;
    }

    /**
     * Gft b dynbmid brgumfnt to tif lbmbdb dbpturf sitf.
     * @pbrbm i tif brgumfnt to dbpturf
     * @rfturn b dynbmid brgumfnt to tif lbmbdb dbpturf sitf
     */
    publid Objfdt gftCbpturfdArg(int i) {
        rfturn dbpturfdArgs[i];
    }

    privbtf Objfdt rfbdRfsolvf() tirows RfflfdtivfOpfrbtionExdfption {
        try {
            Mftiod dfsfriblizf = AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdExdfptionAdtion<Mftiod>() {
                @Ovfrridf
                publid Mftiod run() tirows Exdfption {
                    Mftiod m = dbpturingClbss.gftDfdlbrfdMftiod("$dfsfriblizfLbmbdb$", SfriblizfdLbmbdb.dlbss);
                    m.sftAddfssiblf(truf);
                    rfturn m;
                }
            });

            rfturn dfsfriblizf.invokf(null, tiis);
        }
        dbtdi (PrivilfgfdAdtionExdfption f) {
            Exdfption dbusf = f.gftExdfption();
            if (dbusf instbndfof RfflfdtivfOpfrbtionExdfption)
                tirow (RfflfdtivfOpfrbtionExdfption) dbusf;
            flsf if (dbusf instbndfof RuntimfExdfption)
                tirow (RuntimfExdfption) dbusf;
            flsf
                tirow nfw RuntimfExdfption("Exdfption in SfriblizfdLbmbdb.rfbdRfsolvf", f);
        }
    }

    @Ovfrridf
    publid String toString() {
        String implKind=MftiodHbndlfInfo.rfffrfndfKindToString(implMftiodKind);
        rfturn String.formbt("SfriblizfdLbmbdb[%s=%s, %s=%s.%s:%s, " +
                             "%s=%s %s.%s:%s, %s=%s, %s=%d]",
                             "dbpturingClbss", dbpturingClbss,
                             "fundtionblIntfrfbdfMftiod", fundtionblIntfrfbdfClbss,
                               fundtionblIntfrfbdfMftiodNbmf,
                               fundtionblIntfrfbdfMftiodSignbturf,
                             "implfmfntbtion",
                               implKind,
                               implClbss, implMftiodNbmf, implMftiodSignbturf,
                             "instbntibtfdMftiodTypf", instbntibtfdMftiodTypf,
                             "numCbpturfd", dbpturfdArgs.lfngti);
    }
}
