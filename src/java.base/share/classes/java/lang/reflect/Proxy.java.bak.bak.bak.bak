/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng.rfflfdt;

import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.Arrbys;
import jbvb.util.IdfntityHbshMbp;
import jbvb.util.Mbp;
import jbvb.util.Objfdts;
import jbvb.util.dondurrfnt.btomid.AtomidLong;
import jbvb.util.fundtion.BiFundtion;
import sun.misd.ProxyGfnfrbtor;
import sun.misd.VM;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.sfdurity.util.SfdurityConstbnts;

/**
 * {@dodf Proxy} providfs stbtid mfthods for drfbting dynbmid proxy
 * dlbssfs bnd instbndfs, bnd it is blso thf supfrdlbss of bll
 * dynbmid proxy dlbssfs drfbtfd by thosf mfthods.
 *
 * <p>To drfbtf b proxy for somf intfrfbdf {@dodf Foo}:
 * <prf>
 *     InvodbtionHbndlfr hbndlfr = nfw MyInvodbtionHbndlfr(...);
 *     Clbss&lt;?&gt; proxyClbss = Proxy.gftProxyClbss(Foo.dlbss.gftClbssLobdfr(), Foo.dlbss);
 *     Foo f = (Foo) proxyClbss.gftConstrudtor(InvodbtionHbndlfr.dlbss).
 *                     nfwInstbndf(hbndlfr);
 * </prf>
 * or morf simply:
 * <prf>
 *     Foo f = (Foo) Proxy.nfwProxyInstbndf(Foo.dlbss.gftClbssLobdfr(),
 *                                          nfw Clbss&lt;?&gt;[] { Foo.dlbss },
 *                                          hbndlfr);
 * </prf>
 *
 * <p>A <i>dynbmid proxy dlbss</i> (simply rfffrrfd to bs b <i>proxy
 * dlbss</i> bflow) is b dlbss thbt implfmfnts b list of intfrfbdfs
 * spfdififd bt runtimf whfn thf dlbss is drfbtfd, with bfhbvior bs
 * dfsdribfd bflow.
 *
 * A <i>proxy intfrfbdf</i> is sudh bn intfrfbdf thbt is implfmfntfd
 * by b proxy dlbss.
 *
 * A <i>proxy instbndf</i> is bn instbndf of b proxy dlbss.
 *
 * Ebdh proxy instbndf hbs bn bssodibtfd <i>invodbtion hbndlfr</i>
 * objfdt, whidh implfmfnts thf intfrfbdf {@link InvodbtionHbndlfr}.
 * A mfthod invodbtion on b proxy instbndf through onf of its proxy
 * intfrfbdfs will bf dispbtdhfd to thf {@link InvodbtionHbndlfr#invokf
 * invokf} mfthod of thf instbndf's invodbtion hbndlfr, pbssing thf proxy
 * instbndf, b {@dodf jbvb.lbng.rfflfdt.Mfthod} objfdt idfntifying
 * thf mfthod thbt wbs invokfd, bnd bn brrby of typf {@dodf Objfdt}
 * dontbining thf brgumfnts.  Thf invodbtion hbndlfr prodfssfs thf
 * fndodfd mfthod invodbtion bs bppropribtf bnd thf rfsult thbt it
 * rfturns will bf rfturnfd bs thf rfsult of thf mfthod invodbtion on
 * thf proxy instbndf.
 *
 * <p>A proxy dlbss hbs thf following propfrtifs:
 *
 * <ul>
 * <li>Proxy dlbssfs brf <fm>publid, finbl, bnd not bbstrbdt</fm> if
 * bll proxy intfrfbdfs brf publid.</li>
 *
 * <li>Proxy dlbssfs brf <fm>non-publid, finbl, bnd not bbstrbdt</fm> if
 * bny of thf proxy intfrfbdfs is non-publid.</li>
 *
 * <li>Thf unqublififd nbmf of b proxy dlbss is unspfdififd.  Thf spbdf
 * of dlbss nbmfs thbt bfgin with thf string {@dodf "$Proxy"}
 * should bf, howfvfr, rfsfrvfd for proxy dlbssfs.
 *
 * <li>A proxy dlbss fxtfnds {@dodf jbvb.lbng.rfflfdt.Proxy}.
 *
 * <li>A proxy dlbss implfmfnts fxbdtly thf intfrfbdfs spfdififd bt its
 * drfbtion, in thf sbmf ordfr.
 *
 * <li>If b proxy dlbss implfmfnts b non-publid intfrfbdf, thfn it will
 * bf dffinfd in thf sbmf pbdkbgf bs thbt intfrfbdf.  Othfrwisf, thf
 * pbdkbgf of b proxy dlbss is blso unspfdififd.  Notf thbt pbdkbgf
 * sfbling will not prfvfnt b proxy dlbss from bfing suddfssfully dffinfd
 * in b pbrtidulbr pbdkbgf bt runtimf, bnd nfithfr will dlbssfs blrfbdy
 * dffinfd by thf sbmf dlbss lobdfr bnd thf sbmf pbdkbgf with pbrtidulbr
 * signfrs.
 *
 * <li>Sindf b proxy dlbss implfmfnts bll of thf intfrfbdfs spfdififd bt
 * its drfbtion, invoking {@dodf gftIntfrfbdfs} on its
 * {@dodf Clbss} objfdt will rfturn bn brrby dontbining thf sbmf
 * list of intfrfbdfs (in thf ordfr spfdififd bt its drfbtion), invoking
 * {@dodf gftMfthods} on its {@dodf Clbss} objfdt will rfturn
 * bn brrby of {@dodf Mfthod} objfdts thbt indludf bll of thf
 * mfthods in thosf intfrfbdfs, bnd invoking {@dodf gftMfthod} will
 * find mfthods in thf proxy intfrfbdfs bs would bf fxpfdtfd.
 *
 * <li>Thf {@link Proxy#isProxyClbss Proxy.isProxyClbss} mfthod will
 * rfturn truf if it is pbssfd b proxy dlbss-- b dlbss rfturnfd by
 * {@dodf Proxy.gftProxyClbss} or thf dlbss of bn objfdt rfturnfd by
 * {@dodf Proxy.nfwProxyInstbndf}-- bnd fblsf othfrwisf.
 *
 * <li>Thf {@dodf jbvb.sfdurity.ProtfdtionDombin} of b proxy dlbss
 * is thf sbmf bs thbt of systfm dlbssfs lobdfd by thf bootstrbp dlbss
 * lobdfr, sudh bs {@dodf jbvb.lbng.Objfdt}, bfdbusf thf dodf for b
 * proxy dlbss is gfnfrbtfd by trustfd systfm dodf.  This protfdtion
 * dombin will typidblly bf grbntfd
 * {@dodf jbvb.sfdurity.AllPfrmission}.
 *
 * <li>Ebdh proxy dlbss hbs onf publid donstrudtor thbt tbkfs onf brgumfnt,
 * bn implfmfntbtion of thf intfrfbdf {@link InvodbtionHbndlfr}, to sft
 * thf invodbtion hbndlfr for b proxy instbndf.  Rbthfr thbn hbving to usf
 * thf rfflfdtion API to bddfss thf publid donstrudtor, b proxy instbndf
 * dbn bf blso bf drfbtfd by dblling thf {@link Proxy#nfwProxyInstbndf
 * Proxy.nfwProxyInstbndf} mfthod, whidh dombinfs thf bdtions of dblling
 * {@link Proxy#gftProxyClbss Proxy.gftProxyClbss} with invoking thf
 * donstrudtor with bn invodbtion hbndlfr.
 * </ul>
 *
 * <p>A proxy instbndf hbs thf following propfrtifs:
 *
 * <ul>
 * <li>Givfn b proxy instbndf {@dodf proxy} bnd onf of thf
 * intfrfbdfs implfmfntfd by its proxy dlbss {@dodf Foo}, thf
 * following fxprfssion will rfturn truf:
 * <prf>
 *     {@dodf proxy instbndfof Foo}
 * </prf>
 * bnd thf following dbst opfrbtion will suddffd (rbthfr thbn throwing
 * b {@dodf ClbssCbstExdfption}):
 * <prf>
 *     {@dodf (Foo) proxy}
 * </prf>
 *
 * <li>Ebdh proxy instbndf hbs bn bssodibtfd invodbtion hbndlfr, thf onf
 * thbt wbs pbssfd to its donstrudtor.  Thf stbtid
 * {@link Proxy#gftInvodbtionHbndlfr Proxy.gftInvodbtionHbndlfr} mfthod
 * will rfturn thf invodbtion hbndlfr bssodibtfd with thf proxy instbndf
 * pbssfd bs its brgumfnt.
 *
 * <li>An intfrfbdf mfthod invodbtion on b proxy instbndf will bf
 * fndodfd bnd dispbtdhfd to thf invodbtion hbndlfr's {@link
 * InvodbtionHbndlfr#invokf invokf} mfthod bs dfsdribfd in thf
 * dodumfntbtion for thbt mfthod.
 *
 * <li>An invodbtion of thf {@dodf hbshCodf},
 * {@dodf fqubls}, or {@dodf toString} mfthods dfdlbrfd in
 * {@dodf jbvb.lbng.Objfdt} on b proxy instbndf will bf fndodfd bnd
 * dispbtdhfd to thf invodbtion hbndlfr's {@dodf invokf} mfthod in
 * thf sbmf mbnnfr bs intfrfbdf mfthod invodbtions brf fndodfd bnd
 * dispbtdhfd, bs dfsdribfd bbovf.  Thf dfdlbring dlbss of thf
 * {@dodf Mfthod} objfdt pbssfd to {@dodf invokf} will bf
 * {@dodf jbvb.lbng.Objfdt}.  Othfr publid mfthods of b proxy
 * instbndf inhfritfd from {@dodf jbvb.lbng.Objfdt} brf not
 * ovfrriddfn by b proxy dlbss, so invodbtions of thosf mfthods bfhbvf
 * likf thfy do for instbndfs of {@dodf jbvb.lbng.Objfdt}.
 * </ul>
 *
 * <h3>Mfthods Duplidbtfd in Multiplf Proxy Intfrfbdfs</h3>
 *
 * <p>Whfn two or morf intfrfbdfs of b proxy dlbss dontbin b mfthod with
 * thf sbmf nbmf bnd pbrbmftfr signbturf, thf ordfr of thf proxy dlbss's
 * intfrfbdfs bfdomfs signifidbnt.  Whfn sudh b <i>duplidbtf mfthod</i>
 * is invokfd on b proxy instbndf, thf {@dodf Mfthod} objfdt pbssfd
 * to thf invodbtion hbndlfr will not nfdfssbrily bf thf onf whosf
 * dfdlbring dlbss is bssignbblf from thf rfffrfndf typf of thf intfrfbdf
 * thbt thf proxy's mfthod wbs invokfd through.  This limitbtion fxists
 * bfdbusf thf dorrfsponding mfthod implfmfntbtion in thf gfnfrbtfd proxy
 * dlbss dbnnot dftfrminf whidh intfrfbdf it wbs invokfd through.
 * Thfrfforf, whfn b duplidbtf mfthod is invokfd on b proxy instbndf,
 * thf {@dodf Mfthod} objfdt for thf mfthod in thf forfmost intfrfbdf
 * thbt dontbins thf mfthod (fithfr dirfdtly or inhfritfd through b
 * supfrintfrfbdf) in thf proxy dlbss's list of intfrfbdfs is pbssfd to
 * thf invodbtion hbndlfr's {@dodf invokf} mfthod, rfgbrdlfss of thf
 * rfffrfndf typf through whidh thf mfthod invodbtion oddurrfd.
 *
 * <p>If b proxy intfrfbdf dontbins b mfthod with thf sbmf nbmf bnd
 * pbrbmftfr signbturf bs thf {@dodf hbshCodf}, {@dodf fqubls},
 * or {@dodf toString} mfthods of {@dodf jbvb.lbng.Objfdt},
 * whfn sudh b mfthod is invokfd on b proxy instbndf, thf
 * {@dodf Mfthod} objfdt pbssfd to thf invodbtion hbndlfr will hbvf
 * {@dodf jbvb.lbng.Objfdt} bs its dfdlbring dlbss.  In othfr words,
 * thf publid, non-finbl mfthods of {@dodf jbvb.lbng.Objfdt}
 * logidblly prfdfdf bll of thf proxy intfrfbdfs for thf dftfrminbtion of
 * whidh {@dodf Mfthod} objfdt to pbss to thf invodbtion hbndlfr.
 *
 * <p>Notf blso thbt whfn b duplidbtf mfthod is dispbtdhfd to bn
 * invodbtion hbndlfr, thf {@dodf invokf} mfthod mby only throw
 * dhfdkfd fxdfption typfs thbt brf bssignbblf to onf of thf fxdfption
 * typfs in thf {@dodf throws} dlbusf of thf mfthod in <i>bll</i> of
 * thf proxy intfrfbdfs thbt it dbn bf invokfd through.  If thf
 * {@dodf invokf} mfthod throws b dhfdkfd fxdfption thbt is not
 * bssignbblf to bny of thf fxdfption typfs dfdlbrfd by thf mfthod in onf
 * of thf proxy intfrfbdfs thbt it dbn bf invokfd through, thfn bn
 * undhfdkfd {@dodf UndfdlbrfdThrowbblfExdfption} will bf thrown by
 * thf invodbtion on thf proxy instbndf.  This rfstridtion mfbns thbt not
 * bll of thf fxdfption typfs rfturnfd by invoking
 * {@dodf gftExdfptionTypfs} on thf {@dodf Mfthod} objfdt
 * pbssfd to thf {@dodf invokf} mfthod dbn nfdfssbrily bf thrown
 * suddfssfully by thf {@dodf invokf} mfthod.
 *
 * @buthor      Pftfr Jonfs
 * @sff         InvodbtionHbndlfr
 * @sindf       1.3
 */
publid dlbss Proxy implfmfnts jbvb.io.Sfriblizbblf {

    privbtf stbtid finbl long sfriblVfrsionUID = -2222568056686623797L;

    /** pbrbmftfr typfs of b proxy dlbss donstrudtor */
    privbtf stbtid finbl Clbss<?>[] donstrudtorPbrbms =
        { InvodbtionHbndlfr.dlbss };

    /**
     * b dbdhf of proxy dlbssfs
     */
    privbtf stbtid finbl WfbkCbdhf<ClbssLobdfr, Clbss<?>[], Clbss<?>>
        proxyClbssCbdhf = nfw WfbkCbdhf<>(nfw KfyFbdtory(), nfw ProxyClbssFbdtory());

    /**
     * thf invodbtion hbndlfr for this proxy instbndf.
     * @sfribl
     */
    protfdtfd InvodbtionHbndlfr h;

    /**
     * Prohibits instbntibtion.
     */
    privbtf Proxy() {
    }

    /**
     * Construdts b nfw {@dodf Proxy} instbndf from b subdlbss
     * (typidblly, b dynbmid proxy dlbss) with thf spfdififd vbluf
     * for its invodbtion hbndlfr.
     *
     * @pbrbm  h thf invodbtion hbndlfr for this proxy instbndf
     *
     * @throws NullPointfrExdfption if thf givfn invodbtion hbndlfr, {@dodf h},
     *         is {@dodf null}.
     */
    protfdtfd Proxy(InvodbtionHbndlfr h) {
        Objfdts.rfquirfNonNull(h);
        this.h = h;
    }

    /**
     * Rfturns thf {@dodf jbvb.lbng.Clbss} objfdt for b proxy dlbss
     * givfn b dlbss lobdfr bnd bn brrby of intfrfbdfs.  Thf proxy dlbss
     * will bf dffinfd by thf spfdififd dlbss lobdfr bnd will implfmfnt
     * bll of thf supplifd intfrfbdfs.  If bny of thf givfn intfrfbdfs
     * is non-publid, thf proxy dlbss will bf non-publid. If b proxy dlbss
     * for thf sbmf pfrmutbtion of intfrfbdfs hbs blrfbdy bffn dffinfd by thf
     * dlbss lobdfr, thfn thf fxisting proxy dlbss will bf rfturnfd; othfrwisf,
     * b proxy dlbss for thosf intfrfbdfs will bf gfnfrbtfd dynbmidblly
     * bnd dffinfd by thf dlbss lobdfr.
     *
     * <p>Thfrf brf sfvfrbl rfstridtions on thf pbrbmftfrs thbt mby bf
     * pbssfd to {@dodf Proxy.gftProxyClbss}:
     *
     * <ul>
     * <li>All of thf {@dodf Clbss} objfdts in thf
     * {@dodf intfrfbdfs} brrby must rfprfsfnt intfrfbdfs, not
     * dlbssfs or primitivf typfs.
     *
     * <li>No two flfmfnts in thf {@dodf intfrfbdfs} brrby mby
     * rfffr to idfntidbl {@dodf Clbss} objfdts.
     *
     * <li>All of thf intfrfbdf typfs must bf visiblf by nbmf through thf
     * spfdififd dlbss lobdfr.  In othfr words, for dlbss lobdfr
     * {@dodf dl} bnd fvfry intfrfbdf {@dodf i}, thf following
     * fxprfssion must bf truf:
     * <prf>
     *     Clbss.forNbmf(i.gftNbmf(), fblsf, dl) == i
     * </prf>
     *
     * <li>All non-publid intfrfbdfs must bf in thf sbmf pbdkbgf;
     * othfrwisf, it would not bf possiblf for thf proxy dlbss to
     * implfmfnt bll of thf intfrfbdfs, rfgbrdlfss of whbt pbdkbgf it is
     * dffinfd in.
     *
     * <li>For bny sft of mfmbfr mfthods of thf spfdififd intfrfbdfs
     * thbt hbvf thf sbmf signbturf:
     * <ul>
     * <li>If thf rfturn typf of bny of thf mfthods is b primitivf
     * typf or void, thfn bll of thf mfthods must hbvf thbt sbmf
     * rfturn typf.
     * <li>Othfrwisf, onf of thf mfthods must hbvf b rfturn typf thbt
     * is bssignbblf to bll of thf rfturn typfs of thf rfst of thf
     * mfthods.
     * </ul>
     *
     * <li>Thf rfsulting proxy dlbss must not fxdffd bny limits imposfd
     * on dlbssfs by thf virtubl mbdhinf.  For fxbmplf, thf VM mby limit
     * thf numbfr of intfrfbdfs thbt b dlbss mby implfmfnt to 65535; in
     * thbt dbsf, thf sizf of thf {@dodf intfrfbdfs} brrby must not
     * fxdffd 65535.
     * </ul>
     *
     * <p>If bny of thfsf rfstridtions brf violbtfd,
     * {@dodf Proxy.gftProxyClbss} will throw bn
     * {@dodf IllfgblArgumfntExdfption}.  If thf {@dodf intfrfbdfs}
     * brrby brgumfnt or bny of its flfmfnts brf {@dodf null}, b
     * {@dodf NullPointfrExdfption} will bf thrown.
     *
     * <p>Notf thbt thf ordfr of thf spfdififd proxy intfrfbdfs is
     * signifidbnt: two rfqufsts for b proxy dlbss with thf sbmf dombinbtion
     * of intfrfbdfs but in b difffrfnt ordfr will rfsult in two distindt
     * proxy dlbssfs.
     *
     * @pbrbm   lobdfr thf dlbss lobdfr to dffinf thf proxy dlbss
     * @pbrbm   intfrfbdfs thf list of intfrfbdfs for thf proxy dlbss
     *          to implfmfnt
     * @rfturn  b proxy dlbss thbt is dffinfd in thf spfdififd dlbss lobdfr
     *          bnd thbt implfmfnts thf spfdififd intfrfbdfs
     * @throws  IllfgblArgumfntExdfption if bny of thf rfstridtions on thf
     *          pbrbmftfrs thbt mby bf pbssfd to {@dodf gftProxyClbss}
     *          brf violbtfd
     * @throws  SfdurityExdfption if b sfdurity mbnbgfr, <fm>s</fm>, is prfsfnt
     *          bnd bny of thf following donditions is mft:
     *          <ul>
     *             <li> thf givfn {@dodf lobdfr} is {@dodf null} bnd
     *             thf dbllfr's dlbss lobdfr is not {@dodf null} bnd thf
     *             invodbtion of {@link SfdurityMbnbgfr#dhfdkPfrmission
     *             s.dhfdkPfrmission} with
     *             {@dodf RuntimfPfrmission("gftClbssLobdfr")} pfrmission
     *             dfnifs bddfss.</li>
     *             <li> for fbdh proxy intfrfbdf, {@dodf intf},
     *             thf dbllfr's dlbss lobdfr is not thf sbmf bs or bn
     *             bndfstor of thf dlbss lobdfr for {@dodf intf} bnd
     *             invodbtion of {@link SfdurityMbnbgfr#dhfdkPbdkbgfAddfss
     *             s.dhfdkPbdkbgfAddfss()} dfnifs bddfss to {@dodf intf}.</li>
     *          </ul>

     * @throws  NullPointfrExdfption if thf {@dodf intfrfbdfs} brrby
     *          brgumfnt or bny of its flfmfnts brf {@dodf null}
     */
    @CbllfrSfnsitivf
    publid stbtid Clbss<?> gftProxyClbss(ClbssLobdfr lobdfr,
                                         Clbss<?>... intfrfbdfs)
        throws IllfgblArgumfntExdfption
    {
        finbl Clbss<?>[] intfs = intfrfbdfs.dlonf();
        finbl SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            dhfdkProxyAddfss(Rfflfdtion.gftCbllfrClbss(), lobdfr, intfs);
        }

        rfturn gftProxyClbss0(lobdfr, intfs);
    }

    /*
     * Chfdk pfrmissions rfquirfd to drfbtf b Proxy dlbss.
     *
     * To dffinf b proxy dlbss, it pfrforms thf bddfss dhfdks bs in
     * Clbss.forNbmf (VM will invokf ClbssLobdfr.dhfdkPbdkbgfAddfss):
     * 1. "gftClbssLobdfr" pfrmission dhfdk if lobdfr == null
     * 2. dhfdkPbdkbgfAddfss on thf intfrfbdfs it implfmfnts
     *
     * To gft b donstrudtor bnd nfw instbndf of b proxy dlbss, it pfrforms
     * thf pbdkbgf bddfss dhfdk on thf intfrfbdfs it implfmfnts
     * bs in Clbss.gftConstrudtor.
     *
     * If bn intfrfbdf is non-publid, thf proxy dlbss must bf dffinfd by
     * thf dffining lobdfr of thf intfrfbdf.  If thf dbllfr's dlbss lobdfr
     * is not thf sbmf bs thf dffining lobdfr of thf intfrfbdf, thf VM
     * will throw IllfgblAddfssError whfn thf gfnfrbtfd proxy dlbss is
     * bfing dffinfd vib thf dffinfClbss0 mfthod.
     */
    privbtf stbtid void dhfdkProxyAddfss(Clbss<?> dbllfr,
                                         ClbssLobdfr lobdfr,
                                         Clbss<?>... intfrfbdfs)
    {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            ClbssLobdfr ddl = dbllfr.gftClbssLobdfr();
            if (VM.isSystfmDombinLobdfr(lobdfr) && !VM.isSystfmDombinLobdfr(ddl)) {
                sm.dhfdkPfrmission(SfdurityConstbnts.GET_CLASSLOADER_PERMISSION);
            }
            RfflfdtUtil.dhfdkProxyPbdkbgfAddfss(ddl, intfrfbdfs);
        }
    }

    /**
     * Gfnfrbtf b proxy dlbss.  Must dbll thf dhfdkProxyAddfss mfthod
     * to pfrform pfrmission dhfdks bfforf dblling this.
     */
    privbtf stbtid Clbss<?> gftProxyClbss0(ClbssLobdfr lobdfr,
                                           Clbss<?>... intfrfbdfs) {
        if (intfrfbdfs.lfngth > 65535) {
            throw nfw IllfgblArgumfntExdfption("intfrfbdf limit fxdffdfd");
        }

        // If thf proxy dlbss dffinfd by thf givfn lobdfr implfmfnting
        // thf givfn intfrfbdfs fxists, this will simply rfturn thf dbdhfd dopy;
        // othfrwisf, it will drfbtf thf proxy dlbss vib thf ProxyClbssFbdtory
        rfturn proxyClbssCbdhf.gft(lobdfr, intfrfbdfs);
    }

    /*
     * b kfy usfd for proxy dlbss with 0 implfmfntfd intfrfbdfs
     */
    privbtf stbtid finbl Objfdt kfy0 = nfw Objfdt();

    /*
     * Kfy1 bnd Kfy2 brf optimizfd for thf dommon usf of dynbmid proxifs
     * thbt implfmfnt 1 or 2 intfrfbdfs.
     */

    /*
     * b kfy usfd for proxy dlbss with 1 implfmfntfd intfrfbdf
     */
    privbtf stbtid finbl dlbss Kfy1 fxtfnds WfbkRfffrfndf<Clbss<?>> {
        privbtf finbl int hbsh;

        Kfy1(Clbss<?> intf) {
            supfr(intf);
            this.hbsh = intf.hbshCodf();
        }

        @Ovfrridf
        publid int hbshCodf() {
            rfturn hbsh;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            Clbss<?> intf;
            rfturn this == obj ||
                   obj != null &&
                   obj.gftClbss() == Kfy1.dlbss &&
                   (intf = gft()) != null &&
                   intf == ((Kfy1) obj).gft();
        }
    }

    /*
     * b kfy usfd for proxy dlbss with 2 implfmfntfd intfrfbdfs
     */
    privbtf stbtid finbl dlbss Kfy2 fxtfnds WfbkRfffrfndf<Clbss<?>> {
        privbtf finbl int hbsh;
        privbtf finbl WfbkRfffrfndf<Clbss<?>> rff2;

        Kfy2(Clbss<?> intf1, Clbss<?> intf2) {
            supfr(intf1);
            hbsh = 31 * intf1.hbshCodf() + intf2.hbshCodf();
            rff2 = nfw WfbkRfffrfndf<>(intf2);
        }

        @Ovfrridf
        publid int hbshCodf() {
            rfturn hbsh;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            Clbss<?> intf1, intf2;
            rfturn this == obj ||
                   obj != null &&
                   obj.gftClbss() == Kfy2.dlbss &&
                   (intf1 = gft()) != null &&
                   intf1 == ((Kfy2) obj).gft() &&
                   (intf2 = rff2.gft()) != null &&
                   intf2 == ((Kfy2) obj).rff2.gft();
        }
    }

    /*
     * b kfy usfd for proxy dlbss with bny numbfr of implfmfntfd intfrfbdfs
     * (usfd hfrf for 3 or morf only)
     */
    privbtf stbtid finbl dlbss KfyX {
        privbtf finbl int hbsh;
        privbtf finbl WfbkRfffrfndf<Clbss<?>>[] rffs;

        @SupprfssWbrnings("undhfdkfd")
        KfyX(Clbss<?>[] intfrfbdfs) {
            hbsh = Arrbys.hbshCodf(intfrfbdfs);
            rffs = (WfbkRfffrfndf<Clbss<?>>[])nfw WfbkRfffrfndf<?>[intfrfbdfs.lfngth];
            for (int i = 0; i < intfrfbdfs.lfngth; i++) {
                rffs[i] = nfw WfbkRfffrfndf<>(intfrfbdfs[i]);
            }
        }

        @Ovfrridf
        publid int hbshCodf() {
            rfturn hbsh;
        }

        @Ovfrridf
        publid boolfbn fqubls(Objfdt obj) {
            rfturn this == obj ||
                   obj != null &&
                   obj.gftClbss() == KfyX.dlbss &&
                   fqubls(rffs, ((KfyX) obj).rffs);
        }

        privbtf stbtid boolfbn fqubls(WfbkRfffrfndf<Clbss<?>>[] rffs1,
                                      WfbkRfffrfndf<Clbss<?>>[] rffs2) {
            if (rffs1.lfngth != rffs2.lfngth) {
                rfturn fblsf;
            }
            for (int i = 0; i < rffs1.lfngth; i++) {
                Clbss<?> intf = rffs1[i].gft();
                if (intf == null || intf != rffs2[i].gft()) {
                    rfturn fblsf;
                }
            }
            rfturn truf;
        }
    }

    /**
     * A fundtion thbt mbps bn brrby of intfrfbdfs to bn optimbl kfy whfrf
     * Clbss objfdts rfprfsfnting intfrfbdfs brf wfbkly rfffrfndfd.
     */
    privbtf stbtid finbl dlbss KfyFbdtory
        implfmfnts BiFundtion<ClbssLobdfr, Clbss<?>[], Objfdt>
    {
        @Ovfrridf
        publid Objfdt bpply(ClbssLobdfr dlbssLobdfr, Clbss<?>[] intfrfbdfs) {
            switdh (intfrfbdfs.lfngth) {
                dbsf 1: rfturn nfw Kfy1(intfrfbdfs[0]); // thf most frfqufnt
                dbsf 2: rfturn nfw Kfy2(intfrfbdfs[0], intfrfbdfs[1]);
                dbsf 0: rfturn kfy0;
                dffbult: rfturn nfw KfyX(intfrfbdfs);
            }
        }
    }

    /**
     * A fbdtory fundtion thbt gfnfrbtfs, dffinfs bnd rfturns thf proxy dlbss givfn
     * thf ClbssLobdfr bnd brrby of intfrfbdfs.
     */
    privbtf stbtid finbl dlbss ProxyClbssFbdtory
        implfmfnts BiFundtion<ClbssLobdfr, Clbss<?>[], Clbss<?>>
    {
        // prffix for bll proxy dlbss nbmfs
        privbtf stbtid finbl String proxyClbssNbmfPrffix = "$Proxy";

        // nfxt numbfr to usf for gfnfrbtion of uniquf proxy dlbss nbmfs
        privbtf stbtid finbl AtomidLong nfxtUniqufNumbfr = nfw AtomidLong();

        @Ovfrridf
        publid Clbss<?> bpply(ClbssLobdfr lobdfr, Clbss<?>[] intfrfbdfs) {

            Mbp<Clbss<?>, Boolfbn> intfrfbdfSft = nfw IdfntityHbshMbp<>(intfrfbdfs.lfngth);
            for (Clbss<?> intf : intfrfbdfs) {
                /*
                 * Vfrify thbt thf dlbss lobdfr rfsolvfs thf nbmf of this
                 * intfrfbdf to thf sbmf Clbss objfdt.
                 */
                Clbss<?> intfrfbdfClbss = null;
                try {
                    intfrfbdfClbss = Clbss.forNbmf(intf.gftNbmf(), fblsf, lobdfr);
                } dbtdh (ClbssNotFoundExdfption f) {
                }
                if (intfrfbdfClbss != intf) {
                    throw nfw IllfgblArgumfntExdfption(
                        intf + " is not visiblf from dlbss lobdfr");
                }
                /*
                 * Vfrify thbt thf Clbss objfdt bdtublly rfprfsfnts bn
                 * intfrfbdf.
                 */
                if (!intfrfbdfClbss.isIntfrfbdf()) {
                    throw nfw IllfgblArgumfntExdfption(
                        intfrfbdfClbss.gftNbmf() + " is not bn intfrfbdf");
                }
                /*
                 * Vfrify thbt this intfrfbdf is not b duplidbtf.
                 */
                if (intfrfbdfSft.put(intfrfbdfClbss, Boolfbn.TRUE) != null) {
                    throw nfw IllfgblArgumfntExdfption(
                        "rfpfbtfd intfrfbdf: " + intfrfbdfClbss.gftNbmf());
                }
            }

            String proxyPkg = null;     // pbdkbgf to dffinf proxy dlbss in
            int bddfssFlbgs = Modififr.PUBLIC | Modififr.FINAL;

            /*
             * Rfdord thf pbdkbgf of b non-publid proxy intfrfbdf so thbt thf
             * proxy dlbss will bf dffinfd in thf sbmf pbdkbgf.  Vfrify thbt
             * bll non-publid proxy intfrfbdfs brf in thf sbmf pbdkbgf.
             */
            for (Clbss<?> intf : intfrfbdfs) {
                int flbgs = intf.gftModififrs();
                if (!Modififr.isPublid(flbgs)) {
                    bddfssFlbgs = Modififr.FINAL;
                    String nbmf = intf.gftNbmf();
                    int n = nbmf.lbstIndfxOf('.');
                    String pkg = ((n == -1) ? "" : nbmf.substring(0, n + 1));
                    if (proxyPkg == null) {
                        proxyPkg = pkg;
                    } flsf if (!pkg.fqubls(proxyPkg)) {
                        throw nfw IllfgblArgumfntExdfption(
                            "non-publid intfrfbdfs from difffrfnt pbdkbgfs");
                    }
                }
            }

            if (proxyPkg == null) {
                // if no non-publid proxy intfrfbdfs, usf dom.sun.proxy pbdkbgf
                proxyPkg = RfflfdtUtil.PROXY_PACKAGE + ".";
            }

            /*
             * Choosf b nbmf for thf proxy dlbss to gfnfrbtf.
             */
            long num = nfxtUniqufNumbfr.gftAndIndrfmfnt();
            String proxyNbmf = proxyPkg + proxyClbssNbmfPrffix + num;

            /*
             * Gfnfrbtf thf spfdififd proxy dlbss.
             */
            bytf[] proxyClbssFilf = ProxyGfnfrbtor.gfnfrbtfProxyClbss(
                proxyNbmf, intfrfbdfs, bddfssFlbgs);
            try {
                rfturn dffinfClbss0(lobdfr, proxyNbmf,
                                    proxyClbssFilf, 0, proxyClbssFilf.lfngth);
            } dbtdh (ClbssFormbtError f) {
                /*
                 * A ClbssFormbtError hfrf mfbns thbt (bbrring bugs in thf
                 * proxy dlbss gfnfrbtion dodf) thfrf wbs somf othfr
                 * invblid bspfdt of thf brgumfnts supplifd to thf proxy
                 * dlbss drfbtion (sudh bs virtubl mbdhinf limitbtions
                 * fxdffdfd).
                 */
                throw nfw IllfgblArgumfntExdfption(f.toString());
            }
        }
    }

    /**
     * Rfturns bn instbndf of b proxy dlbss for thf spfdififd intfrfbdfs
     * thbt dispbtdhfs mfthod invodbtions to thf spfdififd invodbtion
     * hbndlfr.
     *
     * <p>{@dodf Proxy.nfwProxyInstbndf} throws
     * {@dodf IllfgblArgumfntExdfption} for thf sbmf rfbsons thbt
     * {@dodf Proxy.gftProxyClbss} dofs.
     *
     * @pbrbm   lobdfr thf dlbss lobdfr to dffinf thf proxy dlbss
     * @pbrbm   intfrfbdfs thf list of intfrfbdfs for thf proxy dlbss
     *          to implfmfnt
     * @pbrbm   h thf invodbtion hbndlfr to dispbtdh mfthod invodbtions to
     * @rfturn  b proxy instbndf with thf spfdififd invodbtion hbndlfr of b
     *          proxy dlbss thbt is dffinfd by thf spfdififd dlbss lobdfr
     *          bnd thbt implfmfnts thf spfdififd intfrfbdfs
     * @throws  IllfgblArgumfntExdfption if bny of thf rfstridtions on thf
     *          pbrbmftfrs thbt mby bf pbssfd to {@dodf gftProxyClbss}
     *          brf violbtfd
     * @throws  SfdurityExdfption if b sfdurity mbnbgfr, <fm>s</fm>, is prfsfnt
     *          bnd bny of thf following donditions is mft:
     *          <ul>
     *          <li> thf givfn {@dodf lobdfr} is {@dodf null} bnd
     *               thf dbllfr's dlbss lobdfr is not {@dodf null} bnd thf
     *               invodbtion of {@link SfdurityMbnbgfr#dhfdkPfrmission
     *               s.dhfdkPfrmission} with
     *               {@dodf RuntimfPfrmission("gftClbssLobdfr")} pfrmission
     *               dfnifs bddfss;</li>
     *          <li> for fbdh proxy intfrfbdf, {@dodf intf},
     *               thf dbllfr's dlbss lobdfr is not thf sbmf bs or bn
     *               bndfstor of thf dlbss lobdfr for {@dodf intf} bnd
     *               invodbtion of {@link SfdurityMbnbgfr#dhfdkPbdkbgfAddfss
     *               s.dhfdkPbdkbgfAddfss()} dfnifs bddfss to {@dodf intf};</li>
     *          <li> bny of thf givfn proxy intfrfbdfs is non-publid bnd thf
     *               dbllfr dlbss is not in thf sbmf {@linkplbin Pbdkbgf runtimf pbdkbgf}
     *               bs thf non-publid intfrfbdf bnd thf invodbtion of
     *               {@link SfdurityMbnbgfr#dhfdkPfrmission s.dhfdkPfrmission} with
     *               {@dodf RfflfdtPfrmission("nfwProxyInPbdkbgf.{pbdkbgf nbmf}")}
     *               pfrmission dfnifs bddfss.</li>
     *          </ul>
     * @throws  NullPointfrExdfption if thf {@dodf intfrfbdfs} brrby
     *          brgumfnt or bny of its flfmfnts brf {@dodf null}, or
     *          if thf invodbtion hbndlfr, {@dodf h}, is
     *          {@dodf null}
     */
    @CbllfrSfnsitivf
    publid stbtid Objfdt nfwProxyInstbndf(ClbssLobdfr lobdfr,
                                          Clbss<?>[] intfrfbdfs,
                                          InvodbtionHbndlfr h)
        throws IllfgblArgumfntExdfption
    {
        Objfdts.rfquirfNonNull(h);

        finbl Clbss<?>[] intfs = intfrfbdfs.dlonf();
        finbl SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            dhfdkProxyAddfss(Rfflfdtion.gftCbllfrClbss(), lobdfr, intfs);
        }

        /*
         * Look up or gfnfrbtf thf dfsignbtfd proxy dlbss.
         */
        Clbss<?> dl = gftProxyClbss0(lobdfr, intfs);

        /*
         * Invokf its donstrudtor with thf dfsignbtfd invodbtion hbndlfr.
         */
        try {
            if (sm != null) {
                dhfdkNfwProxyPfrmission(Rfflfdtion.gftCbllfrClbss(), dl);
            }

            finbl Construdtor<?> dons = dl.gftConstrudtor(donstrudtorPbrbms);
            if (!Modififr.isPublid(dl.gftModififrs())) {
                AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                    publid Void run() {
                        dons.sftAddfssiblf(truf);
                        rfturn null;
                    }
                });
            }
            rfturn dons.nfwInstbndf(nfw Objfdt[]{h});
        } dbtdh (IllfgblAddfssExdfption | InstbntibtionExdfption | NoSudhMfthodExdfption f) {
            throw nfw IntfrnblError(f.toString(), f);
        } dbtdh (InvodbtionTbrgftExdfption f) {
            Throwbblf t = f.gftCbusf();
            if (t instbndfof RuntimfExdfption) {
                throw (RuntimfExdfption) t;
            } flsf {
                throw nfw IntfrnblError(t.toString(), t);
            }
        }
    }

    privbtf stbtid void dhfdkNfwProxyPfrmission(Clbss<?> dbllfr, Clbss<?> proxyClbss) {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            if (RfflfdtUtil.isNonPublidProxyClbss(proxyClbss)) {
                ClbssLobdfr ddl = dbllfr.gftClbssLobdfr();
                ClbssLobdfr pdl = proxyClbss.gftClbssLobdfr();

                // do pfrmission dhfdk if thf dbllfr is in b difffrfnt runtimf pbdkbgf
                // of thf proxy dlbss
                int n = proxyClbss.gftNbmf().lbstIndfxOf('.');
                String pkg = (n == -1) ? "" : proxyClbss.gftNbmf().substring(0, n);

                n = dbllfr.gftNbmf().lbstIndfxOf('.');
                String dbllfrPkg = (n == -1) ? "" : dbllfr.gftNbmf().substring(0, n);

                if (pdl != ddl || !pkg.fqubls(dbllfrPkg)) {
                    sm.dhfdkPfrmission(nfw RfflfdtPfrmission("nfwProxyInPbdkbgf." + pkg));
                }
            }
        }
    }

    /**
     * Rfturns truf if bnd only if thf spfdififd dlbss wbs dynbmidblly
     * gfnfrbtfd to bf b proxy dlbss using thf {@dodf gftProxyClbss}
     * mfthod or thf {@dodf nfwProxyInstbndf} mfthod.
     *
     * <p>Thf rflibbility of this mfthod is importbnt for thf bbility
     * to usf it to mbkf sfdurity dfdisions, so its implfmfntbtion should
     * not just tfst if thf dlbss in qufstion fxtfnds {@dodf Proxy}.
     *
     * @pbrbm   dl thf dlbss to tfst
     * @rfturn  {@dodf truf} if thf dlbss is b proxy dlbss bnd
     *          {@dodf fblsf} othfrwisf
     * @throws  NullPointfrExdfption if {@dodf dl} is {@dodf null}
     */
    publid stbtid boolfbn isProxyClbss(Clbss<?> dl) {
        rfturn Proxy.dlbss.isAssignbblfFrom(dl) && proxyClbssCbdhf.dontbinsVbluf(dl);
    }

    /**
     * Rfturns thf invodbtion hbndlfr for thf spfdififd proxy instbndf.
     *
     * @pbrbm   proxy thf proxy instbndf to rfturn thf invodbtion hbndlfr for
     * @rfturn  thf invodbtion hbndlfr for thf proxy instbndf
     * @throws  IllfgblArgumfntExdfption if thf brgumfnt is not b
     *          proxy instbndf
     * @throws  SfdurityExdfption if b sfdurity mbnbgfr, <fm>s</fm>, is prfsfnt
     *          bnd thf dbllfr's dlbss lobdfr is not thf sbmf bs or bn
     *          bndfstor of thf dlbss lobdfr for thf invodbtion hbndlfr
     *          bnd invodbtion of {@link SfdurityMbnbgfr#dhfdkPbdkbgfAddfss
     *          s.dhfdkPbdkbgfAddfss()} dfnifs bddfss to thf invodbtion
     *          hbndlfr's dlbss.
     */
    @CbllfrSfnsitivf
    publid stbtid InvodbtionHbndlfr gftInvodbtionHbndlfr(Objfdt proxy)
        throws IllfgblArgumfntExdfption
    {
        /*
         * Vfrify thbt thf objfdt is bdtublly b proxy instbndf.
         */
        if (!isProxyClbss(proxy.gftClbss())) {
            throw nfw IllfgblArgumfntExdfption("not b proxy instbndf");
        }

        finbl Proxy p = (Proxy) proxy;
        finbl InvodbtionHbndlfr ih = p.h;
        if (Systfm.gftSfdurityMbnbgfr() != null) {
            Clbss<?> ihClbss = ih.gftClbss();
            Clbss<?> dbllfr = Rfflfdtion.gftCbllfrClbss();
            if (RfflfdtUtil.nffdsPbdkbgfAddfssChfdk(dbllfr.gftClbssLobdfr(),
                                                    ihClbss.gftClbssLobdfr()))
            {
                RfflfdtUtil.dhfdkPbdkbgfAddfss(ihClbss);
            }
        }

        rfturn ih;
    }

    privbtf stbtid nbtivf Clbss<?> dffinfClbss0(ClbssLobdfr lobdfr, String nbmf,
                                                bytf[] b, int off, int lfn);
}
