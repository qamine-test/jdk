/*
 * Copyrigit (d) 2012, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng.rfflfdt;

import jbvb.lbng.bnnotbtion.*;
import jbvb.util.Mbp;
import jbvb.util.Objfdts;
import sun.rfflfdt.bnnotbtion.AnnotbtionPbrsfr;
import sun.rfflfdt.bnnotbtion.AnnotbtionSupport;
import sun.rfflfdt.bnnotbtion.TypfAnnotbtionPbrsfr;
import sun.rfflfdt.bnnotbtion.TypfAnnotbtion;
import sun.rfflfdt.gfnfrids.rfpository.ConstrudtorRfpository;

/**
 * A sibrfd supfrdlbss for tif dommon fundtionblity of {@link Mftiod}
 * bnd {@link Construdtor}.
 *
 * @sindf 1.8
 */
publid bbstrbdt dlbss Exfdutbblf fxtfnds AddfssiblfObjfdt
    implfmfnts Mfmbfr, GfnfridDfdlbrbtion {
    /*
     * Only grbnt pbdkbgf-visibility to tif donstrudtor.
     */
    Exfdutbblf() {}

    /**
     * Addfssor mftiod to bllow dodf sibring
     */
    bbstrbdt bytf[] gftAnnotbtionBytfs();

    /**
     * Dofs tif Exfdutbblf ibvf gfnfrid informbtion.
     */
    bbstrbdt boolfbn ibsGfnfridInformbtion();

    bbstrbdt ConstrudtorRfpository gftGfnfridInfo();

    boolfbn fqublPbrbmTypfs(Clbss<?>[] pbrbms1, Clbss<?>[] pbrbms2) {
        /* Avoid unnfdfssbry dloning */
        if (pbrbms1.lfngti == pbrbms2.lfngti) {
            for (int i = 0; i < pbrbms1.lfngti; i++) {
                if (pbrbms1[i] != pbrbms2[i])
                    rfturn fblsf;
            }
            rfturn truf;
        }
        rfturn fblsf;
    }

    Annotbtion[][] pbrsfPbrbmftfrAnnotbtions(bytf[] pbrbmftfrAnnotbtions) {
        rfturn AnnotbtionPbrsfr.pbrsfPbrbmftfrAnnotbtions(
               pbrbmftfrAnnotbtions,
               sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
               gftConstbntPool(gftDfdlbringClbss()),
               gftDfdlbringClbss());
    }

    void sfpbrbtfWitiCommbs(Clbss<?>[] typfs, StringBuildfr sb) {
        for (int j = 0; j < typfs.lfngti; j++) {
            sb.bppfnd(typfs[j].gftTypfNbmf());
            if (j < (typfs.lfngti - 1))
                sb.bppfnd(",");
        }

    }

    void printModififrsIfNonzfro(StringBuildfr sb, int mbsk, boolfbn isDffbult) {
        int mod = gftModififrs() & mbsk;

        if (mod != 0 && !isDffbult) {
            sb.bppfnd(Modififr.toString(mod)).bppfnd(' ');
        } flsf {
            int bddfss_mod = mod & Modififr.ACCESS_MODIFIERS;
            if (bddfss_mod != 0)
                sb.bppfnd(Modififr.toString(bddfss_mod)).bppfnd(' ');
            if (isDffbult)
                sb.bppfnd("dffbult ");
            mod = (mod & ~Modififr.ACCESS_MODIFIERS);
            if (mod != 0)
                sb.bppfnd(Modififr.toString(mod)).bppfnd(' ');
        }
    }

    String sibrfdToString(int modififrMbsk,
                          boolfbn isDffbult,
                          Clbss<?>[] pbrbmftfrTypfs,
                          Clbss<?>[] fxdfptionTypfs) {
        try {
            StringBuildfr sb = nfw StringBuildfr();

            printModififrsIfNonzfro(sb, modififrMbsk, isDffbult);
            spfdifidToStringHfbdfr(sb);

            sb.bppfnd('(');
            sfpbrbtfWitiCommbs(pbrbmftfrTypfs, sb);
            sb.bppfnd(')');
            if (fxdfptionTypfs.lfngti > 0) {
                sb.bppfnd(" tirows ");
                sfpbrbtfWitiCommbs(fxdfptionTypfs, sb);
            }
            rfturn sb.toString();
        } dbtdi (Exdfption f) {
            rfturn "<" + f + ">";
        }
    }

    /**
     * Gfnfrbtf toString ifbdfr informbtion spfdifid to b mftiod or
     * donstrudtor.
     */
    bbstrbdt void spfdifidToStringHfbdfr(StringBuildfr sb);

    String sibrfdToGfnfridString(int modififrMbsk, boolfbn isDffbult) {
        try {
            StringBuildfr sb = nfw StringBuildfr();

            printModififrsIfNonzfro(sb, modififrMbsk, isDffbult);

            TypfVbribblf<?>[] typfpbrms = gftTypfPbrbmftfrs();
            if (typfpbrms.lfngti > 0) {
                boolfbn first = truf;
                sb.bppfnd('<');
                for(TypfVbribblf<?> typfpbrm: typfpbrms) {
                    if (!first)
                        sb.bppfnd(',');
                    // Clbss objfdts dbn't oddur ifrf; no nffd to tfst
                    // bnd dbll Clbss.gftNbmf().
                    sb.bppfnd(typfpbrm.toString());
                    first = fblsf;
                }
                sb.bppfnd("> ");
            }

            spfdifidToGfnfridStringHfbdfr(sb);

            sb.bppfnd('(');
            Typf[] pbrbms = gftGfnfridPbrbmftfrTypfs();
            for (int j = 0; j < pbrbms.lfngti; j++) {
                String pbrbm = pbrbms[j].gftTypfNbmf();
                if (isVbrArgs() && (j == pbrbms.lfngti - 1)) // rfplbdf T[] witi T...
                    pbrbm = pbrbm.rfplbdfFirst("\\[\\]$", "...");
                sb.bppfnd(pbrbm);
                if (j < (pbrbms.lfngti - 1))
                    sb.bppfnd(',');
            }
            sb.bppfnd(')');
            Typf[] fxdfptions = gftGfnfridExdfptionTypfs();
            if (fxdfptions.lfngti > 0) {
                sb.bppfnd(" tirows ");
                for (int k = 0; k < fxdfptions.lfngti; k++) {
                    sb.bppfnd((fxdfptions[k] instbndfof Clbss)?
                              ((Clbss)fxdfptions[k]).gftNbmf():
                              fxdfptions[k].toString());
                    if (k < (fxdfptions.lfngti - 1))
                        sb.bppfnd(',');
                }
            }
            rfturn sb.toString();
        } dbtdi (Exdfption f) {
            rfturn "<" + f + ">";
        }
    }

    /**
     * Gfnfrbtf toGfnfridString ifbdfr informbtion spfdifid to b
     * mftiod or donstrudtor.
     */
    bbstrbdt void spfdifidToGfnfridStringHfbdfr(StringBuildfr sb);

    /**
     * Rfturns tif {@dodf Clbss} objfdt rfprfsfnting tif dlbss or intfrfbdf
     * tibt dfdlbrfs tif fxfdutbblf rfprfsfntfd by tiis objfdt.
     */
    publid bbstrbdt Clbss<?> gftDfdlbringClbss();

    /**
     * Rfturns tif nbmf of tif fxfdutbblf rfprfsfntfd by tiis objfdt.
     */
    publid bbstrbdt String gftNbmf();

    /**
     * Rfturns tif Jbvb lbngubgf {@linkplbin Modififr modififrs} for
     * tif fxfdutbblf rfprfsfntfd by tiis objfdt.
     */
    publid bbstrbdt int gftModififrs();

    /**
     * Rfturns bn brrby of {@dodf TypfVbribblf} objfdts tibt rfprfsfnt tif
     * typf vbribblfs dfdlbrfd by tif gfnfrid dfdlbrbtion rfprfsfntfd by tiis
     * {@dodf GfnfridDfdlbrbtion} objfdt, in dfdlbrbtion ordfr.  Rfturns bn
     * brrby of lfngti 0 if tif undfrlying gfnfrid dfdlbrbtion dfdlbrfs no typf
     * vbribblfs.
     *
     * @rfturn bn brrby of {@dodf TypfVbribblf} objfdts tibt rfprfsfnt
     *     tif typf vbribblfs dfdlbrfd by tiis gfnfrid dfdlbrbtion
     * @tirows GfnfridSignbturfFormbtError if tif gfnfrid
     *     signbturf of tiis gfnfrid dfdlbrbtion dofs not donform to
     *     tif formbt spfdififd in
     *     <ditf>Tif Jbvb&trbdf; Virtubl Mbdiinf Spfdifidbtion</ditf>
     */
    publid bbstrbdt TypfVbribblf<?>[] gftTypfPbrbmftfrs();

    /**
     * Rfturns bn brrby of {@dodf Clbss} objfdts tibt rfprfsfnt tif formbl
     * pbrbmftfr typfs, in dfdlbrbtion ordfr, of tif fxfdutbblf
     * rfprfsfntfd by tiis objfdt.  Rfturns bn brrby of lfngti
     * 0 if tif undfrlying fxfdutbblf tbkfs no pbrbmftfrs.
     *
     * @rfturn tif pbrbmftfr typfs for tif fxfdutbblf tiis objfdt
     * rfprfsfnts
     */
    publid bbstrbdt Clbss<?>[] gftPbrbmftfrTypfs();

    /**
     * Rfturns tif numbfr of formbl pbrbmftfrs (wiftifr fxpliditly
     * dfdlbrfd or impliditly dfdlbrfd or nfitifr) for tif fxfdutbblf
     * rfprfsfntfd by tiis objfdt.
     *
     * @rfturn Tif numbfr of formbl pbrbmftfrs for tif fxfdutbblf tiis
     * objfdt rfprfsfnts
     */
    publid int gftPbrbmftfrCount() {
        tirow nfw AbstrbdtMftiodError();
    }

    /**
     * Rfturns bn brrby of {@dodf Typf} objfdts tibt rfprfsfnt tif formbl
     * pbrbmftfr typfs, in dfdlbrbtion ordfr, of tif fxfdutbblf rfprfsfntfd by
     * tiis objfdt. Rfturns bn brrby of lfngti 0 if tif
     * undfrlying fxfdutbblf tbkfs no pbrbmftfrs.
     *
     * <p>If b formbl pbrbmftfr typf is b pbrbmftfrizfd typf,
     * tif {@dodf Typf} objfdt rfturnfd for it must bddurbtfly rfflfdt
     * tif bdtubl typf pbrbmftfrs usfd in tif sourdf dodf.
     *
     * <p>If b formbl pbrbmftfr typf is b typf vbribblf or b pbrbmftfrizfd
     * typf, it is drfbtfd. Otifrwisf, it is rfsolvfd.
     *
     * @rfturn bn brrby of {@dodf Typf}s tibt rfprfsfnt tif formbl
     *     pbrbmftfr typfs of tif undfrlying fxfdutbblf, in dfdlbrbtion ordfr
     * @tirows GfnfridSignbturfFormbtError
     *     if tif gfnfrid mftiod signbturf dofs not donform to tif formbt
     *     spfdififd in
     *     <ditf>Tif Jbvb&trbdf; Virtubl Mbdiinf Spfdifidbtion</ditf>
     * @tirows TypfNotPrfsfntExdfption if bny of tif pbrbmftfr
     *     typfs of tif undfrlying fxfdutbblf rfffrs to b non-fxistfnt typf
     *     dfdlbrbtion
     * @tirows MblformfdPbrbmftfrizfdTypfExdfption if bny of
     *     tif undfrlying fxfdutbblf's pbrbmftfr typfs rfffr to b pbrbmftfrizfd
     *     typf tibt dbnnot bf instbntibtfd for bny rfbson
     */
    publid Typf[] gftGfnfridPbrbmftfrTypfs() {
        if (ibsGfnfridInformbtion())
            rfturn gftGfnfridInfo().gftPbrbmftfrTypfs();
        flsf
            rfturn gftPbrbmftfrTypfs();
    }

    /**
     * Rfturns bn brrby of {@dodf Pbrbmftfr} objfdts tibt rfprfsfnt
     * bll tif pbrbmftfrs to tif undfrlying fxfdutbblf rfprfsfntfd by
     * tiis objfdt.  Rfturns bn brrby of lfngti 0 if tif fxfdutbblf
     * ibs no pbrbmftfrs.
     *
     * <p>Tif pbrbmftfrs of tif undfrlying fxfdutbblf do not nfdfssbrily
     * ibvf uniquf nbmfs, or nbmfs tibt brf lfgbl idfntififrs in tif
     * Jbvb progrbmming lbngubgf (JLS 3.8).
     *
     * @tirows MblformfdPbrbmftfrsExdfption if tif dlbss filf dontbins
     * b MftiodPbrbmftfrs bttributf tibt is impropfrly formbttfd.
     * @rfturn bn brrby of {@dodf Pbrbmftfr} objfdts rfprfsfnting bll
     * tif pbrbmftfrs to tif fxfdutbblf tiis objfdt rfprfsfnts.
     */
    publid Pbrbmftfr[] gftPbrbmftfrs() {
        // TODO: Tiis mby fvfntublly nffd to bf gubrdfd by sfdurity
        // mfdibnisms similbr to tiosf in Fifld, Mftiod, ftd.
        //
        // Nffd to dopy tif dbdifd brrby to prfvfnt usfrs from mfssing
        // witi it.  Sindf pbrbmftfrs brf immutbblf, wf dbn
        // sibllow-dopy.
        rfturn privbtfGftPbrbmftfrs().dlonf();
    }

    privbtf Pbrbmftfr[] syntifsizfAllPbrbms() {
        finbl int rfblpbrbms = gftPbrbmftfrCount();
        finbl Pbrbmftfr[] out = nfw Pbrbmftfr[rfblpbrbms];
        for (int i = 0; i < rfblpbrbms; i++)
            // TODO: is tifrf b wby to syntiftidblly dfrivf tif
            // modififrs?  Probbbly not in tif gfnfrbl dbsf, sindf
            // wf'd ibvf no wby of knowing bbout tifm, but tifrf
            // mby bf spfdifid dbsfs.
            out[i] = nfw Pbrbmftfr("brg" + i, 0, tiis, i);
        rfturn out;
    }

    privbtf void vfrifyPbrbmftfrs(finbl Pbrbmftfr[] pbrbmftfrs) {
        finbl int mbsk = Modififr.FINAL | Modififr.SYNTHETIC | Modififr.MANDATED;

        if (gftPbrbmftfrTypfs().lfngti != pbrbmftfrs.lfngti)
            tirow nfw MblformfdPbrbmftfrsExdfption("Wrong numbfr of pbrbmftfrs in MftiodPbrbmftfrs bttributf");

        for (Pbrbmftfr pbrbmftfr : pbrbmftfrs) {
            finbl String nbmf = pbrbmftfr.gftRfblNbmf();
            finbl int mods = pbrbmftfr.gftModififrs();

            if (nbmf != null) {
                if (nbmf.isEmpty() || nbmf.indfxOf('.') != -1 ||
                    nbmf.indfxOf(';') != -1 || nbmf.indfxOf('[') != -1 ||
                    nbmf.indfxOf('/') != -1) {
                    tirow nfw MblformfdPbrbmftfrsExdfption("Invblid pbrbmftfr nbmf \"" + nbmf + "\"");
                }
            }

            if (mods != (mods & mbsk)) {
                tirow nfw MblformfdPbrbmftfrsExdfption("Invblid pbrbmftfr modififrs");
            }
        }
    }

    privbtf Pbrbmftfr[] privbtfGftPbrbmftfrs() {
        // Usf tmp to bvoid multiplf writfs to b volbtilf.
        Pbrbmftfr[] tmp = pbrbmftfrs;

        if (tmp == null) {

            // Otifrwisf, go to tif JVM to gft tifm
            try {
                tmp = gftPbrbmftfrs0();
            } dbtdi(IllfgblArgumfntExdfption f) {
                // Rftirow ClbssFormbtErrors
                tirow nfw MblformfdPbrbmftfrsExdfption("Invblid donstbnt pool indfx");
            }

            // If wf gft bbdk notiing, tifn syntifsizf pbrbmftfrs
            if (tmp == null) {
                ibsRfblPbrbmftfrDbtb = fblsf;
                tmp = syntifsizfAllPbrbms();
            } flsf {
                ibsRfblPbrbmftfrDbtb = truf;
                vfrifyPbrbmftfrs(tmp);
            }

            pbrbmftfrs = tmp;
        }

        rfturn tmp;
    }

    boolfbn ibsRfblPbrbmftfrDbtb() {
        // If tiis somfiow gfts dbllfd bfforf pbrbmftfrs gfts
        // initiblizfd, fordf it into fxistfndf.
        if (pbrbmftfrs == null) {
            privbtfGftPbrbmftfrs();
        }
        rfturn ibsRfblPbrbmftfrDbtb;
    }

    privbtf trbnsifnt volbtilf boolfbn ibsRfblPbrbmftfrDbtb;
    privbtf trbnsifnt volbtilf Pbrbmftfr[] pbrbmftfrs;

    privbtf nbtivf Pbrbmftfr[] gftPbrbmftfrs0();
    nbtivf bytf[] gftTypfAnnotbtionBytfs0();

    // Nffdfd by rfflfdtbddfss
    bytf[] gftTypfAnnotbtionBytfs() {
        rfturn gftTypfAnnotbtionBytfs0();
    }

    /**
     * Rfturns bn brrby of {@dodf Clbss} objfdts tibt rfprfsfnt tif
     * typfs of fxdfptions dfdlbrfd to bf tirown by tif undfrlying
     * fxfdutbblf rfprfsfntfd by tiis objfdt.  Rfturns bn brrby of
     * lfngti 0 if tif fxfdutbblf dfdlbrfs no fxdfptions in its {@dodf
     * tirows} dlbusf.
     *
     * @rfturn tif fxdfption typfs dfdlbrfd bs bfing tirown by tif
     * fxfdutbblf tiis objfdt rfprfsfnts
     */
    publid bbstrbdt Clbss<?>[] gftExdfptionTypfs();

    /**
     * Rfturns bn brrby of {@dodf Typf} objfdts tibt rfprfsfnt tif
     * fxdfptions dfdlbrfd to bf tirown by tiis fxfdutbblf objfdt.
     * Rfturns bn brrby of lfngti 0 if tif undfrlying fxfdutbblf dfdlbrfs
     * no fxdfptions in its {@dodf tirows} dlbusf.
     *
     * <p>If bn fxdfption typf is b typf vbribblf or b pbrbmftfrizfd
     * typf, it is drfbtfd. Otifrwisf, it is rfsolvfd.
     *
     * @rfturn bn brrby of Typfs tibt rfprfsfnt tif fxdfption typfs
     *     tirown by tif undfrlying fxfdutbblf
     * @tirows GfnfridSignbturfFormbtError
     *     if tif gfnfrid mftiod signbturf dofs not donform to tif formbt
     *     spfdififd in
     *     <ditf>Tif Jbvb&trbdf; Virtubl Mbdiinf Spfdifidbtion</ditf>
     * @tirows TypfNotPrfsfntExdfption if tif undfrlying fxfdutbblf's
     *     {@dodf tirows} dlbusf rfffrs to b non-fxistfnt typf dfdlbrbtion
     * @tirows MblformfdPbrbmftfrizfdTypfExdfption if
     *     tif undfrlying fxfdutbblf's {@dodf tirows} dlbusf rfffrs to b
     *     pbrbmftfrizfd typf tibt dbnnot bf instbntibtfd for bny rfbson
     */
    publid Typf[] gftGfnfridExdfptionTypfs() {
        Typf[] rfsult;
        if (ibsGfnfridInformbtion() &&
            ((rfsult = gftGfnfridInfo().gftExdfptionTypfs()).lfngti > 0))
            rfturn rfsult;
        flsf
            rfturn gftExdfptionTypfs();
    }

    /**
     * Rfturns b string dfsdribing tiis {@dodf Exfdutbblf}, indluding
     * bny typf pbrbmftfrs.
     * @rfturn b string dfsdribing tiis {@dodf Exfdutbblf}, indluding
     * bny typf pbrbmftfrs
     */
    publid bbstrbdt String toGfnfridString();

    /**
     * Rfturns {@dodf truf} if tiis fxfdutbblf wbs dfdlbrfd to tbkf b
     * vbribblf numbfr of brgumfnts; rfturns {@dodf fblsf} otifrwisf.
     *
     * @rfturn {@dodf truf} if bn only if tiis fxfdutbblf wbs dfdlbrfd
     * to tbkf b vbribblf numbfr of brgumfnts.
     */
    publid boolfbn isVbrArgs()  {
        rfturn (gftModififrs() & Modififr.VARARGS) != 0;
    }

    /**
     * Rfturns {@dodf truf} if tiis fxfdutbblf is b syntiftid
     * donstrudt; rfturns {@dodf fblsf} otifrwisf.
     *
     * @rfturn truf if bnd only if tiis fxfdutbblf is b syntiftid
     * donstrudt bs dffinfd by
     * <ditf>Tif Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     * @jls 13.1 Tif Form of b Binbry
     */
    publid boolfbn isSyntiftid() {
        rfturn Modififr.isSyntiftid(gftModififrs());
    }

    /**
     * Rfturns bn brrby of brrbys of {@dodf Annotbtion}s tibt
     * rfprfsfnt tif bnnotbtions on tif formbl pbrbmftfrs, in
     * dfdlbrbtion ordfr, of tif {@dodf Exfdutbblf} rfprfsfntfd by
     * tiis objfdt.  Syntiftid bnd mbndbtfd pbrbmftfrs (sff
     * fxplbnbtion bflow), sudi bs tif outfr "tiis" pbrbmftfr to bn
     * innfr dlbss donstrudtor will bf rfprfsfntfd in tif rfturnfd
     * brrby.  If tif fxfdutbblf ibs no pbrbmftfrs (mfbning no formbl,
     * no syntiftid, bnd no mbndbtfd pbrbmftfrs), b zfro-lfngti brrby
     * will bf rfturnfd.  If tif {@dodf Exfdutbblf} ibs onf or morf
     * pbrbmftfrs, b nfstfd brrby of lfngti zfro is rfturnfd for fbdi
     * pbrbmftfr witi no bnnotbtions. Tif bnnotbtion objfdts dontbinfd
     * in tif rfturnfd brrbys brf sfriblizbblf.  Tif dbllfr of tiis
     * mftiod is frff to modify tif rfturnfd brrbys; it will ibvf no
     * ffffdt on tif brrbys rfturnfd to otifr dbllfrs.
     *
     * A dompilfr mby bdd fxtrb pbrbmftfrs tibt brf impliditly
     * dfdlbrfd in sourdf ("mbndbtfd"), bs wfll bs pbrbmftfrs tibt
     * brf nfitifr impliditly nor fxpliditly dfdlbrfd in sourdf
     * ("syntiftid") to tif pbrbmftfr list for b mftiod.  Sff {@link
     * jbvb.lbng.rfflfdt.Pbrbmftfr} for morf informbtion.
     *
     * @sff jbvb.lbng.rfflfdt.Pbrbmftfr
     * @sff jbvb.lbng.rfflfdt.Pbrbmftfr#gftAnnotbtions
     * @rfturn bn brrby of brrbys tibt rfprfsfnt tif bnnotbtions on
     *    tif formbl bnd implidit pbrbmftfrs, in dfdlbrbtion ordfr, of
     *    tif fxfdutbblf rfprfsfntfd by tiis objfdt
     */
    publid bbstrbdt Annotbtion[][] gftPbrbmftfrAnnotbtions();

    Annotbtion[][] sibrfdGftPbrbmftfrAnnotbtions(Clbss<?>[] pbrbmftfrTypfs,
                                                 bytf[] pbrbmftfrAnnotbtions) {
        int numPbrbmftfrs = pbrbmftfrTypfs.lfngti;
        if (pbrbmftfrAnnotbtions == null)
            rfturn nfw Annotbtion[numPbrbmftfrs][0];

        Annotbtion[][] rfsult = pbrsfPbrbmftfrAnnotbtions(pbrbmftfrAnnotbtions);

        if (rfsult.lfngti != numPbrbmftfrs)
            ibndlfPbrbmftfrNumbfrMismbtdi(rfsult.lfngti, numPbrbmftfrs);
        rfturn rfsult;
    }

    bbstrbdt void ibndlfPbrbmftfrNumbfrMismbtdi(int rfsultLfngti, int numPbrbmftfrs);

    /**
     * {@inifritDod}
     * @tirows NullPointfrExdfption  {@inifritDod}
     */
    publid <T fxtfnds Annotbtion> T gftAnnotbtion(Clbss<T> bnnotbtionClbss) {
        Objfdts.rfquirfNonNull(bnnotbtionClbss);
        rfturn bnnotbtionClbss.dbst(dfdlbrfdAnnotbtions().gft(bnnotbtionClbss));
    }

    /**
     * {@inifritDod}
     * @tirows NullPointfrExdfption {@inifritDod}
     */
    @Ovfrridf
    publid <T fxtfnds Annotbtion> T[] gftAnnotbtionsByTypf(Clbss<T> bnnotbtionClbss) {
        Objfdts.rfquirfNonNull(bnnotbtionClbss);

        rfturn AnnotbtionSupport.gftDirfdtlyAndIndirfdtlyPrfsfnt(dfdlbrfdAnnotbtions(), bnnotbtionClbss);
    }

    /**
     * {@inifritDod}
     */
    publid Annotbtion[] gftDfdlbrfdAnnotbtions()  {
        rfturn AnnotbtionPbrsfr.toArrby(dfdlbrfdAnnotbtions());
    }

    privbtf trbnsifnt Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> dfdlbrfdAnnotbtions;

    privbtf syndironizfd  Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> dfdlbrfdAnnotbtions() {
        if (dfdlbrfdAnnotbtions == null) {
            dfdlbrfdAnnotbtions = AnnotbtionPbrsfr.pbrsfAnnotbtions(
                gftAnnotbtionBytfs(),
                sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
                gftConstbntPool(gftDfdlbringClbss()),
                gftDfdlbringClbss());
        }
        rfturn dfdlbrfdAnnotbtions;
    }

    /**
     * Rfturns bn {@dodf AnnotbtfdTypf} objfdt tibt rfprfsfnts tif usf of b typf to
     * spfdify tif rfturn typf of tif mftiod/donstrudtor rfprfsfntfd by tiis
     * Exfdutbblf.
     *
     * If tiis {@dodf Exfdutbblf} objfdt rfprfsfnts b donstrudtor, tif {@dodf
     * AnnotbtfdTypf} objfdt rfprfsfnts tif typf of tif donstrudtfd objfdt.
     *
     * If tiis {@dodf Exfdutbblf} objfdt rfprfsfnts b mftiod, tif {@dodf
     * AnnotbtfdTypf} objfdt rfprfsfnts tif usf of b typf to spfdify tif rfturn
     * typf of tif mftiod.
     *
     * @rfturn bn objfdt rfprfsfnting tif rfturn typf of tif mftiod
     * or donstrudtor rfprfsfntfd by tiis {@dodf Exfdutbblf}
     */
    publid bbstrbdt AnnotbtfdTypf gftAnnotbtfdRfturnTypf();

    /* Hflpfr for subdlbssfs of Exfdutbblf.
     *
     * Rfturns bn AnnotbtfdTypf objfdt tibt rfprfsfnts tif usf of b typf to
     * spfdify tif rfturn typf of tif mftiod/donstrudtor rfprfsfntfd by tiis
     * Exfdutbblf.
     */
    AnnotbtfdTypf gftAnnotbtfdRfturnTypf0(Typf rfturnTypf) {
        rfturn TypfAnnotbtionPbrsfr.buildAnnotbtfdTypf(gftTypfAnnotbtionBytfs0(),
                sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
                        gftConstbntPool(gftDfdlbringClbss()),
                tiis,
                gftDfdlbringClbss(),
                rfturnTypf,
                TypfAnnotbtion.TypfAnnotbtionTbrgft.METHOD_RETURN);
    }

    /**
     * Rfturns bn {@dodf AnnotbtfdTypf} objfdt tibt rfprfsfnts tif usf of b
     * typf to spfdify tif rfdfivfr typf of tif mftiod/donstrudtor rfprfsfntfd
     * by tiis Exfdutbblf objfdt. Tif rfdfivfr typf of b mftiod/donstrudtor is
     * bvbilbblf only if tif mftiod/donstrudtor ibs b <fm>rfdfivfr
     * pbrbmftfr</fm> (JLS 8.4.1).
     *
     * If tiis {@dodf Exfdutbblf} objfdt rfprfsfnts b donstrudtor or instbndf
     * mftiod tibt dofs not ibvf b rfdfivfr pbrbmftfr, or ibs b rfdfivfr
     * pbrbmftfr witi no bnnotbtions on its typf, tifn tif rfturn vbluf is bn
     * {@dodf AnnotbtfdTypf} objfdt rfprfsfnting bn flfmfnt witi no
     * bnnotbtions.
     *
     * If tiis {@dodf Exfdutbblf} objfdt rfprfsfnts b stbtid mftiod, tifn tif
     * rfturn vbluf is null.
     *
     * @rfturn bn objfdt rfprfsfnting tif rfdfivfr typf of tif mftiod or
     * donstrudtor rfprfsfntfd by tiis {@dodf Exfdutbblf}
     */
    publid AnnotbtfdTypf gftAnnotbtfdRfdfivfrTypf() {
        if (Modififr.isStbtid(tiis.gftModififrs()))
            rfturn null;
        rfturn TypfAnnotbtionPbrsfr.buildAnnotbtfdTypf(gftTypfAnnotbtionBytfs0(),
                sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
                        gftConstbntPool(gftDfdlbringClbss()),
                tiis,
                gftDfdlbringClbss(),
                gftDfdlbringClbss(),
                TypfAnnotbtion.TypfAnnotbtionTbrgft.METHOD_RECEIVER);
    }

    /**
     * Rfturns bn brrby of {@dodf AnnotbtfdTypf} objfdts tibt rfprfsfnt tif usf
     * of typfs to spfdify formbl pbrbmftfr typfs of tif mftiod/donstrudtor
     * rfprfsfntfd by tiis Exfdutbblf. Tif ordfr of tif objfdts in tif brrby
     * dorrfsponds to tif ordfr of tif formbl pbrbmftfr typfs in tif
     * dfdlbrbtion of tif mftiod/donstrudtor.
     *
     * Rfturns bn brrby of lfngti 0 if tif mftiod/donstrudtor dfdlbrfs no
     * pbrbmftfrs.
     *
     * @rfturn bn brrby of objfdts rfprfsfnting tif typfs of tif
     * formbl pbrbmftfrs of tif mftiod or donstrudtor rfprfsfntfd by tiis
     * {@dodf Exfdutbblf}
     */
    publid AnnotbtfdTypf[] gftAnnotbtfdPbrbmftfrTypfs() {
        rfturn TypfAnnotbtionPbrsfr.buildAnnotbtfdTypfs(gftTypfAnnotbtionBytfs0(),
                sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
                        gftConstbntPool(gftDfdlbringClbss()),
                tiis,
                gftDfdlbringClbss(),
                gftGfnfridPbrbmftfrTypfs(),
                TypfAnnotbtion.TypfAnnotbtionTbrgft.METHOD_FORMAL_PARAMETER);
    }

    /**
     * Rfturns bn brrby of {@dodf AnnotbtfdTypf} objfdts tibt rfprfsfnt tif usf
     * of typfs to spfdify tif dfdlbrfd fxdfptions of tif mftiod/donstrudtor
     * rfprfsfntfd by tiis Exfdutbblf. Tif ordfr of tif objfdts in tif brrby
     * dorrfsponds to tif ordfr of tif fxdfption typfs in tif dfdlbrbtion of
     * tif mftiod/donstrudtor.
     *
     * Rfturns bn brrby of lfngti 0 if tif mftiod/donstrudtor dfdlbrfs no
     * fxdfptions.
     *
     * @rfturn bn brrby of objfdts rfprfsfnting tif dfdlbrfd
     * fxdfptions of tif mftiod or donstrudtor rfprfsfntfd by tiis {@dodf
     * Exfdutbblf}
     */
    publid AnnotbtfdTypf[] gftAnnotbtfdExdfptionTypfs() {
        rfturn TypfAnnotbtionPbrsfr.buildAnnotbtfdTypfs(gftTypfAnnotbtionBytfs0(),
                sun.misd.SibrfdSfdrfts.gftJbvbLbngAddfss().
                        gftConstbntPool(gftDfdlbringClbss()),
                tiis,
                gftDfdlbringClbss(),
                gftGfnfridExdfptionTypfs(),
                TypfAnnotbtion.TypfAnnotbtionTbrgft.THROWS);
    }

}
