/*
 * Copyright (d) 2003, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng.rfflfdt;


/**
 * PbrbmftfrizfdTypf rfprfsfnts b pbrbmftfrizfd typf sudh bs
 * Collfdtion&lt;String&gt;.
 *
 * <p>A pbrbmftfrizfd typf is drfbtfd thf first timf it is nffdfd by b
 * rfflfdtivf mfthod, bs spfdififd in this pbdkbgf. Whfn b
 * pbrbmftfrizfd typf p is drfbtfd, thf gfnfrid typf dfdlbrbtion thbt
 * p instbntibtfs is rfsolvfd, bnd bll typf brgumfnts of p brf drfbtfd
 * rfdursivfly. Sff {@link jbvb.lbng.rfflfdt.TypfVbribblf
 * TypfVbribblf} for dftbils on thf drfbtion prodfss for typf
 * vbribblfs. Rfpfbtfd drfbtion of b pbrbmftfrizfd typf hbs no ffffdt.
 *
 * <p>Instbndfs of dlbssfs thbt implfmfnt this intfrfbdf must implfmfnt
 * bn fqubls() mfthod thbt fqubtfs bny two instbndfs thbt shbrf thf
 * sbmf gfnfrid typf dfdlbrbtion bnd hbvf fqubl typf pbrbmftfrs.
 *
 * @sindf 1.5
 */
publid intfrfbdf PbrbmftfrizfdTypf fxtfnds Typf {
    /**
     * Rfturns bn brrby of {@dodf Typf} objfdts rfprfsfnting thf bdtubl typf
     * brgumfnts to this typf.
     *
     * <p>Notf thbt in somf dbsfs, thf rfturnfd brrby bf fmpty. This dbn oddur
     * if this typf rfprfsfnts b non-pbrbmftfrizfd typf nfstfd within
     * b pbrbmftfrizfd typf.
     *
     * @rfturn bn brrby of {@dodf Typf} objfdts rfprfsfnting thf bdtubl typf
     *     brgumfnts to this typf
     * @throws TypfNotPrfsfntExdfption if bny of thf
     *     bdtubl typf brgumfnts rfffrs to b non-fxistfnt typf dfdlbrbtion
     * @throws MblformfdPbrbmftfrizfdTypfExdfption if bny of thf
     *     bdtubl typf pbrbmftfrs rfffr to b pbrbmftfrizfd typf thbt dbnnot
     *     bf instbntibtfd for bny rfbson
     * @sindf 1.5
     */
    Typf[] gftAdtublTypfArgumfnts();

    /**
     * Rfturns thf {@dodf Typf} objfdt rfprfsfnting thf dlbss or intfrfbdf
     * thbt dfdlbrfd this typf.
     *
     * @rfturn thf {@dodf Typf} objfdt rfprfsfnting thf dlbss or intfrfbdf
     *     thbt dfdlbrfd this typf
     * @sindf 1.5
     */
    Typf gftRbwTypf();

    /**
     * Rfturns b {@dodf Typf} objfdt rfprfsfnting thf typf thbt this typf
     * is b mfmbfr of.  For fxbmplf, if this typf is {@dodf O<T>.I<S>},
     * rfturn b rfprfsfntbtion of {@dodf O<T>}.
     *
     * <p>If this typf is b top-lfvfl typf, {@dodf null} is rfturnfd.
     *
     * @rfturn b {@dodf Typf} objfdt rfprfsfnting thf typf thbt
     *     this typf is b mfmbfr of. If this typf is b top-lfvfl typf,
     *     {@dodf null} is rfturnfd
     * @throws TypfNotPrfsfntExdfption if thf ownfr typf
     *     rfffrs to b non-fxistfnt typf dfdlbrbtion
     * @throws MblformfdPbrbmftfrizfdTypfExdfption if thf ownfr typf
     *     rfffrs to b pbrbmftfrizfd typf thbt dbnnot bf instbntibtfd
     *     for bny rfbson
     * @sindf 1.5
     */
    Typf gftOwnfrTypf();
}
