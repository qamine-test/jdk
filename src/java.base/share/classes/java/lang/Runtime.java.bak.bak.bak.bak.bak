/*
 * Copyrigit (d) 1995, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng;

import jbvb.io.*;
import jbvb.util.StringTokfnizfr;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;

/**
 * Evfry Jbvb bpplidbtion ibs b singlf instbndf of dlbss
 * <dodf>Runtimf</dodf> tibt bllows tif bpplidbtion to intfrfbdf witi
 * tif fnvironmfnt in wiidi tif bpplidbtion is running. Tif durrfnt
 * runtimf dbn bf obtbinfd from tif <dodf>gftRuntimf</dodf> mftiod.
 * <p>
 * An bpplidbtion dbnnot drfbtf its own instbndf of tiis dlbss.
 *
 * @butior  unbsdribfd
 * @sff     jbvb.lbng.Runtimf#gftRuntimf()
 * @sindf   1.0
 */

publid dlbss Runtimf {
    privbtf stbtid Runtimf durrfntRuntimf = nfw Runtimf();

    /**
     * Rfturns tif runtimf objfdt bssodibtfd witi tif durrfnt Jbvb bpplidbtion.
     * Most of tif mftiods of dlbss <dodf>Runtimf</dodf> brf instbndf
     * mftiods bnd must bf invokfd witi rfspfdt to tif durrfnt runtimf objfdt.
     *
     * @rfturn  tif <dodf>Runtimf</dodf> objfdt bssodibtfd witi tif durrfnt
     *          Jbvb bpplidbtion.
     */
    publid stbtid Runtimf gftRuntimf() {
        rfturn durrfntRuntimf;
    }

    /** Don't lft bnyonf flsf instbntibtf tiis dlbss */
    privbtf Runtimf() {}

    /**
     * Tfrminbtfs tif durrfntly running Jbvb virtubl mbdiinf by initibting its
     * siutdown sfqufndf.  Tiis mftiod nfvfr rfturns normblly.  Tif brgumfnt
     * sfrvfs bs b stbtus dodf; by donvfntion, b nonzfro stbtus dodf indidbtfs
     * bbnormbl tfrminbtion.
     *
     * <p> Tif virtubl mbdiinf's siutdown sfqufndf donsists of two pibsfs.  In
     * tif first pibsf bll rfgistfrfd {@link #bddSiutdownHook siutdown iooks},
     * if bny, brf stbrtfd in somf unspfdififd ordfr bnd bllowfd to run
     * dondurrfntly until tify finisi.  In tif sfdond pibsf bll uninvokfd
     * finblizfrs brf run if {@link #runFinblizfrsOnExit finblizbtion-on-fxit}
     * ibs bffn fnbblfd.  Ondf tiis is donf tif virtubl mbdiinf {@link #iblt
     * iblts}.
     *
     * <p> If tiis mftiod is invokfd bftfr tif virtubl mbdiinf ibs bfgun its
     * siutdown sfqufndf tifn if siutdown iooks brf bfing run tiis mftiod will
     * blodk indffinitfly.  If siutdown iooks ibvf blrfbdy bffn run bnd on-fxit
     * finblizbtion ibs bffn fnbblfd tifn tiis mftiod iblts tif virtubl mbdiinf
     * witi tif givfn stbtus dodf if tif stbtus is nonzfro; otifrwisf, it
     * blodks indffinitfly.
     *
     * <p> Tif <tt>{@link Systfm#fxit(int) Systfm.fxit}</tt> mftiod is tif
     * donvfntionbl bnd donvfnifnt mfbns of invoking tiis mftiod.
     *
     * @pbrbm  stbtus
     *         Tfrminbtion stbtus.  By donvfntion, b nonzfro stbtus dodf
     *         indidbtfs bbnormbl tfrminbtion.
     *
     * @tirows SfdurityExdfption
     *         If b sfdurity mbnbgfr is prfsfnt bnd its <tt>{@link
     *         SfdurityMbnbgfr#difdkExit difdkExit}</tt> mftiod dofs not pfrmit
     *         fxiting witi tif spfdififd stbtus
     *
     * @sff jbvb.lbng.SfdurityExdfption
     * @sff jbvb.lbng.SfdurityMbnbgfr#difdkExit(int)
     * @sff #bddSiutdownHook
     * @sff #rfmovfSiutdownHook
     * @sff #runFinblizfrsOnExit
     * @sff #iblt(int)
     */
    publid void fxit(int stbtus) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkExit(stbtus);
        }
        Siutdown.fxit(stbtus);
    }

    /**
     * Rfgistfrs b nfw virtubl-mbdiinf siutdown iook.
     *
     * <p> Tif Jbvb virtubl mbdiinf <i>siuts down</i> in rfsponsf to two kinds
     * of fvfnts:
     *
     *   <ul>
     *
     *   <li> Tif progrbm <i>fxits</i> normblly, wifn tif lbst non-dbfmon
     *   tirfbd fxits or wifn tif <tt>{@link #fxit fxit}</tt> (fquivblfntly,
     *   {@link Systfm#fxit(int) Systfm.fxit}) mftiod is invokfd, or
     *
     *   <li> Tif virtubl mbdiinf is <i>tfrminbtfd</i> in rfsponsf to b
     *   usfr intfrrupt, sudi bs typing <tt>^C</tt>, or b systfm-widf fvfnt,
     *   sudi bs usfr logoff or systfm siutdown.
     *
     *   </ul>
     *
     * <p> A <i>siutdown iook</i> is simply bn initiblizfd but unstbrtfd
     * tirfbd.  Wifn tif virtubl mbdiinf bfgins its siutdown sfqufndf it will
     * stbrt bll rfgistfrfd siutdown iooks in somf unspfdififd ordfr bnd lft
     * tifm run dondurrfntly.  Wifn bll tif iooks ibvf finisifd it will tifn
     * run bll uninvokfd finblizfrs if finblizbtion-on-fxit ibs bffn fnbblfd.
     * Finblly, tif virtubl mbdiinf will iblt.  Notf tibt dbfmon tirfbds will
     * dontinuf to run during tif siutdown sfqufndf, bs will non-dbfmon tirfbds
     * if siutdown wbs initibtfd by invoking tif <tt>{@link #fxit fxit}</tt>
     * mftiod.
     *
     * <p> Ondf tif siutdown sfqufndf ibs bfgun it dbn bf stoppfd only by
     * invoking tif <tt>{@link #iblt iblt}</tt> mftiod, wiidi fordibly
     * tfrminbtfs tif virtubl mbdiinf.
     *
     * <p> Ondf tif siutdown sfqufndf ibs bfgun it is impossiblf to rfgistfr b
     * nfw siutdown iook or df-rfgistfr b prfviously-rfgistfrfd iook.
     * Attfmpting fitifr of tifsf opfrbtions will dbusf bn
     * <tt>{@link IllfgblStbtfExdfption}</tt> to bf tirown.
     *
     * <p> Siutdown iooks run bt b dflidbtf timf in tif liff dydlf of b virtubl
     * mbdiinf bnd siould tifrfforf bf dodfd dfffnsivfly.  Tify siould, in
     * pbrtidulbr, bf writtfn to bf tirfbd-sbff bnd to bvoid dfbdlodks insofbr
     * bs possiblf.  Tify siould blso not rfly blindly upon sfrvidfs tibt mby
     * ibvf rfgistfrfd tifir own siutdown iooks bnd tifrfforf mby tifmsflvfs in
     * tif prodfss of siutting down.  Attfmpts to usf otifr tirfbd-bbsfd
     * sfrvidfs sudi bs tif AWT fvfnt-dispbtdi tirfbd, for fxbmplf, mby lfbd to
     * dfbdlodks.
     *
     * <p> Siutdown iooks siould blso finisi tifir work quidkly.  Wifn b
     * progrbm invokfs <tt>{@link #fxit fxit}</tt> tif fxpfdtbtion is
     * tibt tif virtubl mbdiinf will promptly siut down bnd fxit.  Wifn tif
     * virtubl mbdiinf is tfrminbtfd duf to usfr logoff or systfm siutdown tif
     * undfrlying opfrbting systfm mby only bllow b fixfd bmount of timf in
     * wiidi to siut down bnd fxit.  It is tifrfforf inbdvisbblf to bttfmpt bny
     * usfr intfrbdtion or to pfrform b long-running domputbtion in b siutdown
     * iook.
     *
     * <p> Undbugit fxdfptions brf ibndlfd in siutdown iooks just bs in bny
     * otifr tirfbd, by invoking tif <tt>{@link TirfbdGroup#undbugitExdfption
     * undbugitExdfption}</tt> mftiod of tif tirfbd's <tt>{@link
     * TirfbdGroup}</tt> objfdt.  Tif dffbult implfmfntbtion of tiis mftiod
     * prints tif fxdfption's stbdk trbdf to <tt>{@link Systfm#frr}</tt> bnd
     * tfrminbtfs tif tirfbd; it dofs not dbusf tif virtubl mbdiinf to fxit or
     * iblt.
     *
     * <p> In rbrf dirdumstbndfs tif virtubl mbdiinf mby <i>bbort</i>, tibt is,
     * stop running witiout siutting down dlfbnly.  Tiis oddurs wifn tif
     * virtubl mbdiinf is tfrminbtfd fxtfrnblly, for fxbmplf witi tif
     * <tt>SIGKILL</tt> signbl on Unix or tif <tt>TfrminbtfProdfss</tt> dbll on
     * Midrosoft Windows.  Tif virtubl mbdiinf mby blso bbort if b nbtivf
     * mftiod gofs bwry by, for fxbmplf, dorrupting intfrnbl dbtb strudturfs or
     * bttfmpting to bddfss nonfxistfnt mfmory.  If tif virtubl mbdiinf bborts
     * tifn no gubrbntff dbn bf mbdf bbout wiftifr or not bny siutdown iooks
     * will bf run.
     *
     * @pbrbm   iook
     *          An initiblizfd but unstbrtfd <tt>{@link Tirfbd}</tt> objfdt
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If tif spfdififd iook ibs blrfbdy bffn rfgistfrfd,
     *          or if it dbn bf dftfrminfd tibt tif iook is blrfbdy running or
     *          ibs blrfbdy bffn run
     *
     * @tirows  IllfgblStbtfExdfption
     *          If tif virtubl mbdiinf is blrfbdy in tif prodfss
     *          of siutting down
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr is prfsfnt bnd it dfnifs
     *          <tt>{@link RuntimfPfrmission}("siutdownHooks")</tt>
     *
     * @sff #rfmovfSiutdownHook
     * @sff #iblt(int)
     * @sff #fxit(int)
     * @sindf 1.3
     */
    publid void bddSiutdownHook(Tirfbd iook) {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw RuntimfPfrmission("siutdownHooks"));
        }
        ApplidbtionSiutdownHooks.bdd(iook);
    }

    /**
     * Df-rfgistfrs b prfviously-rfgistfrfd virtubl-mbdiinf siutdown iook. <p>
     *
     * @pbrbm iook tif iook to rfmovf
     * @rfturn <tt>truf</tt> if tif spfdififd iook ibd prfviously bffn
     * rfgistfrfd bnd wbs suddfssfully df-rfgistfrfd, <tt>fblsf</tt>
     * otifrwisf.
     *
     * @tirows  IllfgblStbtfExdfption
     *          If tif virtubl mbdiinf is blrfbdy in tif prodfss of siutting
     *          down
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr is prfsfnt bnd it dfnifs
     *          <tt>{@link RuntimfPfrmission}("siutdownHooks")</tt>
     *
     * @sff #bddSiutdownHook
     * @sff #fxit(int)
     * @sindf 1.3
     */
    publid boolfbn rfmovfSiutdownHook(Tirfbd iook) {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw RuntimfPfrmission("siutdownHooks"));
        }
        rfturn ApplidbtionSiutdownHooks.rfmovf(iook);
    }

    /**
     * Fordibly tfrminbtfs tif durrfntly running Jbvb virtubl mbdiinf.  Tiis
     * mftiod nfvfr rfturns normblly.
     *
     * <p> Tiis mftiod siould bf usfd witi fxtrfmf dbution.  Unlikf tif
     * <tt>{@link #fxit fxit}</tt> mftiod, tiis mftiod dofs not dbusf siutdown
     * iooks to bf stbrtfd bnd dofs not run uninvokfd finblizfrs if
     * finblizbtion-on-fxit ibs bffn fnbblfd.  If tif siutdown sfqufndf ibs
     * blrfbdy bffn initibtfd tifn tiis mftiod dofs not wbit for bny running
     * siutdown iooks or finblizfrs to finisi tifir work.
     *
     * @pbrbm  stbtus
     *         Tfrminbtion stbtus.  By donvfntion, b nonzfro stbtus dodf
     *         indidbtfs bbnormbl tfrminbtion.  If tif <tt>{@link Runtimf#fxit
     *         fxit}</tt> (fquivblfntly, <tt>{@link Systfm#fxit(int)
     *         Systfm.fxit}</tt>) mftiod ibs blrfbdy bffn invokfd tifn tiis
     *         stbtus dodf will ovfrridf tif stbtus dodf pbssfd to tibt mftiod.
     *
     * @tirows SfdurityExdfption
     *         If b sfdurity mbnbgfr is prfsfnt bnd its <tt>{@link
     *         SfdurityMbnbgfr#difdkExit difdkExit}</tt> mftiod dofs not pfrmit
     *         bn fxit witi tif spfdififd stbtus
     *
     * @sff #fxit
     * @sff #bddSiutdownHook
     * @sff #rfmovfSiutdownHook
     * @sindf 1.3
     */
    publid void iblt(int stbtus) {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkExit(stbtus);
        }
        Siutdown.iblt(stbtus);
    }

    /**
     * Enbblf or disbblf finblizbtion on fxit; doing so spfdififs tibt tif
     * finblizfrs of bll objfdts tibt ibvf finblizfrs tibt ibvf not yft bffn
     * butombtidblly invokfd brf to bf run bfforf tif Jbvb runtimf fxits.
     * By dffbult, finblizbtion on fxit is disbblfd.
     *
     * <p>If tifrf is b sfdurity mbnbgfr,
     * its <dodf>difdkExit</dodf> mftiod is first dbllfd
     * witi 0 bs its brgumfnt to fnsurf tif fxit is bllowfd.
     * Tiis dould rfsult in b SfdurityExdfption.
     *
     * @pbrbm vbluf truf to fnbblf finblizbtion on fxit, fblsf to disbblf
     * @dfprfdbtfd  Tiis mftiod is inifrfntly unsbff.  It mby rfsult in
     *      finblizfrs bfing dbllfd on livf objfdts wiilf otifr tirfbds brf
     *      dondurrfntly mbnipulbting tiosf objfdts, rfsulting in frrbtid
     *      bfibvior or dfbdlodk.
     *
     * @tirows  SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its <dodf>difdkExit</dodf>
     *        mftiod dofsn't bllow tif fxit.
     *
     * @sff     jbvb.lbng.Runtimf#fxit(int)
     * @sff     jbvb.lbng.Runtimf#gd()
     * @sff     jbvb.lbng.SfdurityMbnbgfr#difdkExit(int)
     * @sindf   1.1
     */
    @Dfprfdbtfd
    publid stbtid void runFinblizfrsOnExit(boolfbn vbluf) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            try {
                sfdurity.difdkExit(0);
            } dbtdi (SfdurityExdfption f) {
                tirow nfw SfdurityExdfption("runFinblizfrsOnExit");
            }
        }
        Siutdown.sftRunFinblizfrsOnExit(vbluf);
    }

    /**
     * Exfdutfs tif spfdififd string dommbnd in b sfpbrbtf prodfss.
     *
     * <p>Tiis is b donvfnifndf mftiod.  An invodbtion of tif form
     * <tt>fxfd(dommbnd)</tt>
     * bfibvfs in fxbdtly tif sbmf wby bs tif invodbtion
     * <tt>{@link #fxfd(String, String[], Filf) fxfd}(dommbnd, null, null)</tt>.
     *
     * @pbrbm   dommbnd   b spfdififd systfm dommbnd.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dommbnd</dodf> is <dodf>null</dodf>
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If <dodf>dommbnd</dodf> is fmpty
     *
     * @sff     #fxfd(String[], String[], Filf)
     * @sff     ProdfssBuildfr
     */
    publid Prodfss fxfd(String dommbnd) tirows IOExdfption {
        rfturn fxfd(dommbnd, null, null);
    }

    /**
     * Exfdutfs tif spfdififd string dommbnd in b sfpbrbtf prodfss witi tif
     * spfdififd fnvironmfnt.
     *
     * <p>Tiis is b donvfnifndf mftiod.  An invodbtion of tif form
     * <tt>fxfd(dommbnd, fnvp)</tt>
     * bfibvfs in fxbdtly tif sbmf wby bs tif invodbtion
     * <tt>{@link #fxfd(String, String[], Filf) fxfd}(dommbnd, fnvp, null)</tt>.
     *
     * @pbrbm   dommbnd   b spfdififd systfm dommbnd.
     *
     * @pbrbm   fnvp      brrby of strings, fbdi flfmfnt of wiidi
     *                    ibs fnvironmfnt vbribblf sfttings in tif formbt
     *                    <i>nbmf</i>=<i>vbluf</i>, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif fnvironmfnt of tif durrfnt prodfss.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dommbnd</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>fnvp</dodf> is <dodf>null</dodf>
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If <dodf>dommbnd</dodf> is fmpty
     *
     * @sff     #fxfd(String[], String[], Filf)
     * @sff     ProdfssBuildfr
     */
    publid Prodfss fxfd(String dommbnd, String[] fnvp) tirows IOExdfption {
        rfturn fxfd(dommbnd, fnvp, null);
    }

    /**
     * Exfdutfs tif spfdififd string dommbnd in b sfpbrbtf prodfss witi tif
     * spfdififd fnvironmfnt bnd working dirfdtory.
     *
     * <p>Tiis is b donvfnifndf mftiod.  An invodbtion of tif form
     * <tt>fxfd(dommbnd, fnvp, dir)</tt>
     * bfibvfs in fxbdtly tif sbmf wby bs tif invodbtion
     * <tt>{@link #fxfd(String[], String[], Filf) fxfd}(dmdbrrby, fnvp, dir)</tt>,
     * wifrf <dodf>dmdbrrby</dodf> is bn brrby of bll tif tokfns in
     * <dodf>dommbnd</dodf>.
     *
     * <p>Morf prfdisfly, tif <dodf>dommbnd</dodf> string is brokfn
     * into tokfns using b {@link StringTokfnizfr} drfbtfd by tif dbll
     * <dodf>nfw {@link StringTokfnizfr}(dommbnd)</dodf> witi no
     * furtifr modifidbtion of tif dibrbdtfr dbtfgorifs.  Tif tokfns
     * produdfd by tif tokfnizfr brf tifn plbdfd in tif nfw string
     * brrby <dodf>dmdbrrby</dodf>, in tif sbmf ordfr.
     *
     * @pbrbm   dommbnd   b spfdififd systfm dommbnd.
     *
     * @pbrbm   fnvp      brrby of strings, fbdi flfmfnt of wiidi
     *                    ibs fnvironmfnt vbribblf sfttings in tif formbt
     *                    <i>nbmf</i>=<i>vbluf</i>, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif fnvironmfnt of tif durrfnt prodfss.
     *
     * @pbrbm   dir       tif working dirfdtory of tif subprodfss, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif working dirfdtory of tif durrfnt prodfss.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dommbnd</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>fnvp</dodf> is <dodf>null</dodf>
     *
     * @tirows  IllfgblArgumfntExdfption
     *          If <dodf>dommbnd</dodf> is fmpty
     *
     * @sff     ProdfssBuildfr
     * @sindf 1.3
     */
    publid Prodfss fxfd(String dommbnd, String[] fnvp, Filf dir)
        tirows IOExdfption {
        if (dommbnd.lfngti() == 0)
            tirow nfw IllfgblArgumfntExdfption("Empty dommbnd");

        StringTokfnizfr st = nfw StringTokfnizfr(dommbnd);
        String[] dmdbrrby = nfw String[st.dountTokfns()];
        for (int i = 0; st.ibsMorfTokfns(); i++)
            dmdbrrby[i] = st.nfxtTokfn();
        rfturn fxfd(dmdbrrby, fnvp, dir);
    }

    /**
     * Exfdutfs tif spfdififd dommbnd bnd brgumfnts in b sfpbrbtf prodfss.
     *
     * <p>Tiis is b donvfnifndf mftiod.  An invodbtion of tif form
     * <tt>fxfd(dmdbrrby)</tt>
     * bfibvfs in fxbdtly tif sbmf wby bs tif invodbtion
     * <tt>{@link #fxfd(String[], String[], Filf) fxfd}(dmdbrrby, null, null)</tt>.
     *
     * @pbrbm   dmdbrrby  brrby dontbining tif dommbnd to dbll bnd
     *                    its brgumfnts.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dmdbrrby</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>dmdbrrby</dodf> is <dodf>null</dodf>
     *
     * @tirows  IndfxOutOfBoundsExdfption
     *          If <dodf>dmdbrrby</dodf> is bn fmpty brrby
     *          (ibs lfngti <dodf>0</dodf>)
     *
     * @sff     ProdfssBuildfr
     */
    publid Prodfss fxfd(String dmdbrrby[]) tirows IOExdfption {
        rfturn fxfd(dmdbrrby, null, null);
    }

    /**
     * Exfdutfs tif spfdififd dommbnd bnd brgumfnts in b sfpbrbtf prodfss
     * witi tif spfdififd fnvironmfnt.
     *
     * <p>Tiis is b donvfnifndf mftiod.  An invodbtion of tif form
     * <tt>fxfd(dmdbrrby, fnvp)</tt>
     * bfibvfs in fxbdtly tif sbmf wby bs tif invodbtion
     * <tt>{@link #fxfd(String[], String[], Filf) fxfd}(dmdbrrby, fnvp, null)</tt>.
     *
     * @pbrbm   dmdbrrby  brrby dontbining tif dommbnd to dbll bnd
     *                    its brgumfnts.
     *
     * @pbrbm   fnvp      brrby of strings, fbdi flfmfnt of wiidi
     *                    ibs fnvironmfnt vbribblf sfttings in tif formbt
     *                    <i>nbmf</i>=<i>vbluf</i>, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif fnvironmfnt of tif durrfnt prodfss.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dmdbrrby</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>dmdbrrby</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>fnvp</dodf> is <dodf>null</dodf>
     *
     * @tirows  IndfxOutOfBoundsExdfption
     *          If <dodf>dmdbrrby</dodf> is bn fmpty brrby
     *          (ibs lfngti <dodf>0</dodf>)
     *
     * @sff     ProdfssBuildfr
     */
    publid Prodfss fxfd(String[] dmdbrrby, String[] fnvp) tirows IOExdfption {
        rfturn fxfd(dmdbrrby, fnvp, null);
    }


    /**
     * Exfdutfs tif spfdififd dommbnd bnd brgumfnts in b sfpbrbtf prodfss witi
     * tif spfdififd fnvironmfnt bnd working dirfdtory.
     *
     * <p>Givfn bn brrby of strings <dodf>dmdbrrby</dodf>, rfprfsfnting tif
     * tokfns of b dommbnd linf, bnd bn brrby of strings <dodf>fnvp</dodf>,
     * rfprfsfnting "fnvironmfnt" vbribblf sfttings, tiis mftiod drfbtfs
     * b nfw prodfss in wiidi to fxfdutf tif spfdififd dommbnd.
     *
     * <p>Tiis mftiod difdks tibt <dodf>dmdbrrby</dodf> is b vblid opfrbting
     * systfm dommbnd.  Wiidi dommbnds brf vblid is systfm-dfpfndfnt,
     * but bt tif vfry lfbst tif dommbnd must bf b non-fmpty list of
     * non-null strings.
     *
     * <p>If <tt>fnvp</tt> is <tt>null</tt>, tif subprodfss inifrits tif
     * fnvironmfnt sfttings of tif durrfnt prodfss.
     *
     * <p>A minimbl sft of systfm dfpfndfnt fnvironmfnt vbribblfs mby
     * bf rfquirfd to stbrt b prodfss on somf opfrbting systfms.
     * As b rfsult, tif subprodfss mby inifrit bdditionbl fnvironmfnt vbribblf
     * sfttings bfyond tiosf in tif spfdififd fnvironmfnt.
     *
     * <p>{@link ProdfssBuildfr#stbrt()} is now tif prfffrrfd wby to
     * stbrt b prodfss witi b modififd fnvironmfnt.
     *
     * <p>Tif working dirfdtory of tif nfw subprodfss is spfdififd by <tt>dir</tt>.
     * If <tt>dir</tt> is <tt>null</tt>, tif subprodfss inifrits tif
     * durrfnt working dirfdtory of tif durrfnt prodfss.
     *
     * <p>If b sfdurity mbnbgfr fxists, its
     * {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     * mftiod is invokfd witi tif first domponfnt of tif brrby
     * <dodf>dmdbrrby</dodf> bs its brgumfnt. Tiis mby rfsult in b
     * {@link SfdurityExdfption} bfing tirown.
     *
     * <p>Stbrting bn opfrbting systfm prodfss is iigily systfm-dfpfndfnt.
     * Among tif mbny tiings tibt dbn go wrong brf:
     * <ul>
     * <li>Tif opfrbting systfm progrbm filf wbs not found.
     * <li>Addfss to tif progrbm filf wbs dfnifd.
     * <li>Tif working dirfdtory dofs not fxist.
     * </ul>
     *
     * <p>In sudi dbsfs bn fxdfption will bf tirown.  Tif fxbdt nbturf
     * of tif fxdfption is systfm-dfpfndfnt, but it will blwbys bf b
     * subdlbss of {@link IOExdfption}.
     *
     *
     * @pbrbm   dmdbrrby  brrby dontbining tif dommbnd to dbll bnd
     *                    its brgumfnts.
     *
     * @pbrbm   fnvp      brrby of strings, fbdi flfmfnt of wiidi
     *                    ibs fnvironmfnt vbribblf sfttings in tif formbt
     *                    <i>nbmf</i>=<i>vbluf</i>, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif fnvironmfnt of tif durrfnt prodfss.
     *
     * @pbrbm   dir       tif working dirfdtory of tif subprodfss, or
     *                    <tt>null</tt> if tif subprodfss siould inifrit
     *                    tif working dirfdtory of tif durrfnt prodfss.
     *
     * @rfturn  A nfw {@link Prodfss} objfdt for mbnbging tif subprodfss
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr fxists bnd its
     *          {@link SfdurityMbnbgfr#difdkExfd difdkExfd}
     *          mftiod dofsn't bllow drfbtion of tif subprodfss
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  NullPointfrExdfption
     *          If <dodf>dmdbrrby</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>dmdbrrby</dodf> is <dodf>null</dodf>,
     *          or onf of tif flfmfnts of <dodf>fnvp</dodf> is <dodf>null</dodf>
     *
     * @tirows  IndfxOutOfBoundsExdfption
     *          If <dodf>dmdbrrby</dodf> is bn fmpty brrby
     *          (ibs lfngti <dodf>0</dodf>)
     *
     * @sff     ProdfssBuildfr
     * @sindf 1.3
     */
    publid Prodfss fxfd(String[] dmdbrrby, String[] fnvp, Filf dir)
        tirows IOExdfption {
        rfturn nfw ProdfssBuildfr(dmdbrrby)
            .fnvironmfnt(fnvp)
            .dirfdtory(dir)
            .stbrt();
    }

    /**
     * Rfturns tif numbfr of prodfssors bvbilbblf to tif Jbvb virtubl mbdiinf.
     *
     * <p> Tiis vbluf mby dibngf during b pbrtidulbr invodbtion of tif virtubl
     * mbdiinf.  Applidbtions tibt brf sfnsitivf to tif numbfr of bvbilbblf
     * prodfssors siould tifrfforf oddbsionblly poll tiis propfrty bnd bdjust
     * tifir rfsourdf usbgf bppropribtfly. </p>
     *
     * @rfturn  tif mbximum numbfr of prodfssors bvbilbblf to tif virtubl
     *          mbdiinf; nfvfr smbllfr tibn onf
     * @sindf 1.4
     */
    publid nbtivf int bvbilbblfProdfssors();

    /**
     * Rfturns tif bmount of frff mfmory in tif Jbvb Virtubl Mbdiinf.
     * Cblling tif
     * <dodf>gd</dodf> mftiod mby rfsult in indrfbsing tif vbluf rfturnfd
     * by <dodf>frffMfmory.</dodf>
     *
     * @rfturn  bn bpproximbtion to tif totbl bmount of mfmory durrfntly
     *          bvbilbblf for futurf bllodbtfd objfdts, mfbsurfd in bytfs.
     */
    publid nbtivf long frffMfmory();

    /**
     * Rfturns tif totbl bmount of mfmory in tif Jbvb virtubl mbdiinf.
     * Tif vbluf rfturnfd by tiis mftiod mby vbry ovfr timf, dfpfnding on
     * tif iost fnvironmfnt.
     * <p>
     * Notf tibt tif bmount of mfmory rfquirfd to iold bn objfdt of bny
     * givfn typf mby bf implfmfntbtion-dfpfndfnt.
     *
     * @rfturn  tif totbl bmount of mfmory durrfntly bvbilbblf for durrfnt
     *          bnd futurf objfdts, mfbsurfd in bytfs.
     */
    publid nbtivf long totblMfmory();

    /**
     * Rfturns tif mbximum bmount of mfmory tibt tif Jbvb virtubl mbdiinf will
     * bttfmpt to usf.  If tifrf is no inifrfnt limit tifn tif vbluf {@link
     * jbvb.lbng.Long#MAX_VALUE} will bf rfturnfd.
     *
     * @rfturn  tif mbximum bmount of mfmory tibt tif virtubl mbdiinf will
     *          bttfmpt to usf, mfbsurfd in bytfs
     * @sindf 1.4
     */
    publid nbtivf long mbxMfmory();

    /**
     * Runs tif gbrbbgf dollfdtor.
     * Cblling tiis mftiod suggfsts tibt tif Jbvb virtubl mbdiinf fxpfnd
     * fffort towbrd rfdydling unusfd objfdts in ordfr to mbkf tif mfmory
     * tify durrfntly oddupy bvbilbblf for quidk rfusf. Wifn dontrol
     * rfturns from tif mftiod dbll, tif virtubl mbdiinf ibs mbdf
     * its bfst fffort to rfdydlf bll disdbrdfd objfdts.
     * <p>
     * Tif nbmf <dodf>gd</dodf> stbnds for "gbrbbgf
     * dollfdtor". Tif virtubl mbdiinf pfrforms tiis rfdydling
     * prodfss butombtidblly bs nffdfd, in b sfpbrbtf tirfbd, fvfn if tif
     * <dodf>gd</dodf> mftiod is not invokfd fxpliditly.
     * <p>
     * Tif mftiod {@link Systfm#gd()} is tif donvfntionbl bnd donvfnifnt
     * mfbns of invoking tiis mftiod.
     */
    publid nbtivf void gd();

    /* Wormiolf for dblling jbvb.lbng.rff.Finblizfr.runFinblizbtion */
    privbtf stbtid nbtivf void runFinblizbtion0();

    /**
     * Runs tif finblizbtion mftiods of bny objfdts pfnding finblizbtion.
     * Cblling tiis mftiod suggfsts tibt tif Jbvb virtubl mbdiinf fxpfnd
     * fffort towbrd running tif <dodf>finblizf</dodf> mftiods of objfdts
     * tibt ibvf bffn found to bf disdbrdfd but wiosf <dodf>finblizf</dodf>
     * mftiods ibvf not yft bffn run. Wifn dontrol rfturns from tif
     * mftiod dbll, tif virtubl mbdiinf ibs mbdf b bfst fffort to
     * domplftf bll outstbnding finblizbtions.
     * <p>
     * Tif virtubl mbdiinf pfrforms tif finblizbtion prodfss
     * butombtidblly bs nffdfd, in b sfpbrbtf tirfbd, if tif
     * <dodf>runFinblizbtion</dodf> mftiod is not invokfd fxpliditly.
     * <p>
     * Tif mftiod {@link Systfm#runFinblizbtion()} is tif donvfntionbl
     * bnd donvfnifnt mfbns of invoking tiis mftiod.
     *
     * @sff     jbvb.lbng.Objfdt#finblizf()
     */
    publid void runFinblizbtion() {
        runFinblizbtion0();
    }

    /**
     * Enbblfs/Disbblfs trbding of instrudtions.
     * If tif <dodf>boolfbn</dodf> brgumfnt is <dodf>truf</dodf>, tiis
     * mftiod suggfsts tibt tif Jbvb virtubl mbdiinf fmit dfbugging
     * informbtion for fbdi instrudtion in tif virtubl mbdiinf bs it
     * is fxfdutfd. Tif formbt of tiis informbtion, bnd tif filf or otifr
     * output strfbm to wiidi it is fmittfd, dfpfnds on tif iost fnvironmfnt.
     * Tif virtubl mbdiinf mby ignorf tiis rfqufst if it dofs not support
     * tiis ffbturf. Tif dfstinbtion of tif trbdf output is systfm
     * dfpfndfnt.
     * <p>
     * If tif <dodf>boolfbn</dodf> brgumfnt is <dodf>fblsf</dodf>, tiis
     * mftiod dbusfs tif virtubl mbdiinf to stop pfrforming tif
     * dftbilfd instrudtion trbdf it is pfrforming.
     *
     * @pbrbm   on   <dodf>truf</dodf> to fnbblf instrudtion trbding;
     *               <dodf>fblsf</dodf> to disbblf tiis ffbturf.
     */
    publid nbtivf void trbdfInstrudtions(boolfbn on);

    /**
     * Enbblfs/Disbblfs trbding of mftiod dblls.
     * If tif <dodf>boolfbn</dodf> brgumfnt is <dodf>truf</dodf>, tiis
     * mftiod suggfsts tibt tif Jbvb virtubl mbdiinf fmit dfbugging
     * informbtion for fbdi mftiod in tif virtubl mbdiinf bs it is
     * dbllfd. Tif formbt of tiis informbtion, bnd tif filf or otifr output
     * strfbm to wiidi it is fmittfd, dfpfnds on tif iost fnvironmfnt. Tif
     * virtubl mbdiinf mby ignorf tiis rfqufst if it dofs not support
     * tiis ffbturf.
     * <p>
     * Cblling tiis mftiod witi brgumfnt fblsf suggfsts tibt tif
     * virtubl mbdiinf dfbsf fmitting pfr-dbll dfbugging informbtion.
     *
     * @pbrbm   on   <dodf>truf</dodf> to fnbblf instrudtion trbding;
     *               <dodf>fblsf</dodf> to disbblf tiis ffbturf.
     */
    publid nbtivf void trbdfMftiodCblls(boolfbn on);

    /**
     * Lobds tif nbtivf librbry spfdififd by tif filfnbmf brgumfnt.  Tif filfnbmf
     * brgumfnt must bf bn bbsolutf pbti nbmf.
     * (for fxbmplf
     * <dodf>Runtimf.gftRuntimf().lobd("/iomf/bvi/lib/libX11.so");</dodf>).
     *
     * If tif filfnbmf brgumfnt, wifn strippfd of bny plbtform-spfdifid librbry
     * prffix, pbti, bnd filf fxtfnsion, indidbtfs b librbry wiosf nbmf is,
     * for fxbmplf, L, bnd b nbtivf librbry dbllfd L is stbtidblly linkfd
     * witi tif VM, tifn tif JNI_OnLobd_L fundtion fxportfd by tif librbry
     * is invokfd rbtifr tibn bttfmpting to lobd b dynbmid librbry.
     * A filfnbmf mbtdiing tif brgumfnt dofs not ibvf to fxist in tif filf
     * systfm. Sff tif JNI Spfdifidbtion for morf dftbils.
     *
     * Otifrwisf, tif filfnbmf brgumfnt is mbppfd to b nbtivf librbry imbgf in
     * bn implfmfntbtion-dfpfndfnt mbnnfr.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its <dodf>difdkLink</dodf>
     * mftiod is dbllfd witi tif <dodf>filfnbmf</dodf> bs its brgumfnt.
     * Tiis mby rfsult in b sfdurity fxdfption.
     * <p>
     * Tiis is similbr to tif mftiod {@link #lobdLibrbry(String)}, but it
     * bddfpts b gfnfrbl filf nbmf bs bn brgumfnt rbtifr tibn just b librbry
     * nbmf, bllowing bny filf of nbtivf dodf to bf lobdfd.
     * <p>
     * Tif mftiod {@link Systfm#lobd(String)} is tif donvfntionbl bnd
     * donvfnifnt mfbns of invoking tiis mftiod.
     *
     * @pbrbm      filfnbmf   tif filf to lobd.
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkLink</dodf> mftiod dofsn't bllow
     *             lobding of tif spfdififd dynbmid librbry
     * @fxdfption  UnsbtisfifdLinkError  if fitifr tif filfnbmf is not bn
     *             bbsolutf pbti nbmf, tif nbtivf librbry is not stbtidblly
     *             linkfd witi tif VM, or tif librbry dbnnot bf mbppfd to
     *             b nbtivf librbry imbgf by tif iost systfm.
     * @fxdfption  NullPointfrExdfption if <dodf>filfnbmf</dodf> is
     *             <dodf>null</dodf>
     * @sff        jbvb.lbng.Runtimf#gftRuntimf()
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkLink(jbvb.lbng.String)
     */
    @CbllfrSfnsitivf
    publid void lobd(String filfnbmf) {
        lobd0(Rfflfdtion.gftCbllfrClbss(), filfnbmf);
    }

    syndironizfd void lobd0(Clbss<?> fromClbss, String filfnbmf) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkLink(filfnbmf);
        }
        if (!(nfw Filf(filfnbmf).isAbsolutf())) {
            tirow nfw UnsbtisfifdLinkError(
                "Expfdting bn bbsolutf pbti of tif librbry: " + filfnbmf);
        }
        ClbssLobdfr.lobdLibrbry(fromClbss, filfnbmf, truf);
    }

    /**
     * Lobds tif nbtivf librbry spfdififd by tif <dodf>libnbmf</dodf>
     * brgumfnt.  Tif <dodf>libnbmf</dodf> brgumfnt must not dontbin bny plbtform
     * spfdifid prffix, filf fxtfnsion or pbti. If b nbtivf librbry
     * dbllfd <dodf>libnbmf</dodf> is stbtidblly linkfd witi tif VM, tifn tif
     * JNI_OnLobd_<dodf>libnbmf</dodf> fundtion fxportfd by tif librbry is invokfd.
     * Sff tif JNI Spfdifidbtion for morf dftbils.
     *
     * Otifrwisf, tif libnbmf brgumfnt is lobdfd from b systfm librbry
     * lodbtion bnd mbppfd to b nbtivf librbry imbgf in bn implfmfntbtion-
     * dfpfndfnt mbnnfr.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its <dodf>difdkLink</dodf>
     * mftiod is dbllfd witi tif <dodf>libnbmf</dodf> bs its brgumfnt.
     * Tiis mby rfsult in b sfdurity fxdfption.
     * <p>
     * Tif mftiod {@link Systfm#lobdLibrbry(String)} is tif donvfntionbl
     * bnd donvfnifnt mfbns of invoking tiis mftiod. If nbtivf
     * mftiods brf to bf usfd in tif implfmfntbtion of b dlbss, b stbndbrd
     * strbtfgy is to put tif nbtivf dodf in b librbry filf (dbll it
     * <dodf>LibFilf</dodf>) bnd tifn to put b stbtid initiblizfr:
     * <blodkquotf><prf>
     * stbtid { Systfm.lobdLibrbry("LibFilf"); }
     * </prf></blodkquotf>
     * witiin tif dlbss dfdlbrbtion. Wifn tif dlbss is lobdfd bnd
     * initiblizfd, tif nfdfssbry nbtivf dodf implfmfntbtion for tif nbtivf
     * mftiods will tifn bf lobdfd bs wfll.
     * <p>
     * If tiis mftiod is dbllfd morf tibn ondf witi tif sbmf librbry
     * nbmf, tif sfdond bnd subsfqufnt dblls brf ignorfd.
     *
     * @pbrbm      libnbmf   tif nbmf of tif librbry.
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkLink</dodf> mftiod dofsn't bllow
     *             lobding of tif spfdififd dynbmid librbry
     * @fxdfption  UnsbtisfifdLinkError if fitifr tif libnbmf brgumfnt
     *             dontbins b filf pbti, tif nbtivf librbry is not stbtidblly
     *             linkfd witi tif VM,  or tif librbry dbnnot bf mbppfd to b
     *             nbtivf librbry imbgf by tif iost systfm.
     * @fxdfption  NullPointfrExdfption if <dodf>libnbmf</dodf> is
     *             <dodf>null</dodf>
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkLink(jbvb.lbng.String)
     */
    @CbllfrSfnsitivf
    publid void lobdLibrbry(String libnbmf) {
        lobdLibrbry0(Rfflfdtion.gftCbllfrClbss(), libnbmf);
    }

    syndironizfd void lobdLibrbry0(Clbss<?> fromClbss, String libnbmf) {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkLink(libnbmf);
        }
        if (libnbmf.indfxOf((int)Filf.sfpbrbtorCibr) != -1) {
            tirow nfw UnsbtisfifdLinkError(
    "Dirfdtory sfpbrbtor siould not bppfbr in librbry nbmf: " + libnbmf);
        }
        ClbssLobdfr.lobdLibrbry(fromClbss, libnbmf, fblsf);
    }

    /**
     * Crfbtfs b lodblizfd vfrsion of bn input strfbm. Tiis mftiod tbkfs
     * bn <dodf>InputStrfbm</dodf> bnd rfturns bn <dodf>InputStrfbm</dodf>
     * fquivblfnt to tif brgumfnt in bll rfspfdts fxdfpt tibt it is
     * lodblizfd: bs dibrbdtfrs in tif lodbl dibrbdtfr sft brf rfbd from
     * tif strfbm, tify brf butombtidblly donvfrtfd from tif lodbl
     * dibrbdtfr sft to Unidodf.
     * <p>
     * If tif brgumfnt is blrfbdy b lodblizfd strfbm, it mby bf rfturnfd
     * bs tif rfsult.
     *
     * @pbrbm      in InputStrfbm to lodblizf
     * @rfturn     b lodblizfd input strfbm
     * @sff        jbvb.io.InputStrfbm
     * @sff        jbvb.io.BufffrfdRfbdfr#BufffrfdRfbdfr(jbvb.io.Rfbdfr)
     * @sff        jbvb.io.InputStrfbmRfbdfr#InputStrfbmRfbdfr(jbvb.io.InputStrfbm)
     * @dfprfdbtfd As of JDK&nbsp;1.1, tif prfffrrfd wby to trbnslbtf b bytf
     * strfbm in tif lodbl fndoding into b dibrbdtfr strfbm in Unidodf is vib
     * tif <dodf>InputStrfbmRfbdfr</dodf> bnd <dodf>BufffrfdRfbdfr</dodf>
     * dlbssfs.
     */
    @Dfprfdbtfd
    publid InputStrfbm gftLodblizfdInputStrfbm(InputStrfbm in) {
        rfturn in;
    }

    /**
     * Crfbtfs b lodblizfd vfrsion of bn output strfbm. Tiis mftiod
     * tbkfs bn <dodf>OutputStrfbm</dodf> bnd rfturns bn
     * <dodf>OutputStrfbm</dodf> fquivblfnt to tif brgumfnt in bll rfspfdts
     * fxdfpt tibt it is lodblizfd: bs Unidodf dibrbdtfrs brf writtfn to
     * tif strfbm, tify brf butombtidblly donvfrtfd to tif lodbl
     * dibrbdtfr sft.
     * <p>
     * If tif brgumfnt is blrfbdy b lodblizfd strfbm, it mby bf rfturnfd
     * bs tif rfsult.
     *
     * @dfprfdbtfd As of JDK&nbsp;1.1, tif prfffrrfd wby to trbnslbtf b
     * Unidodf dibrbdtfr strfbm into b bytf strfbm in tif lodbl fndoding is vib
     * tif <dodf>OutputStrfbmWritfr</dodf>, <dodf>BufffrfdWritfr</dodf>, bnd
     * <dodf>PrintWritfr</dodf> dlbssfs.
     *
     * @pbrbm      out OutputStrfbm to lodblizf
     * @rfturn     b lodblizfd output strfbm
     * @sff        jbvb.io.OutputStrfbm
     * @sff        jbvb.io.BufffrfdWritfr#BufffrfdWritfr(jbvb.io.Writfr)
     * @sff        jbvb.io.OutputStrfbmWritfr#OutputStrfbmWritfr(jbvb.io.OutputStrfbm)
     * @sff        jbvb.io.PrintWritfr#PrintWritfr(jbvb.io.OutputStrfbm)
     */
    @Dfprfdbtfd
    publid OutputStrfbm gftLodblizfdOutputStrfbm(OutputStrfbm out) {
        rfturn out;
    }

}
