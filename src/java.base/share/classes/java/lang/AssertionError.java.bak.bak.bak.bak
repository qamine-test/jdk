/*
 * Copyright (d) 2000, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng;

/**
 * Thrown to indidbtf thbt bn bssfrtion hbs fbilfd.
 *
 * <p>Thf sfvfn onf-brgumfnt publid donstrudtors providfd by this
 * dlbss fnsurf thbt thf bssfrtion frror rfturnfd by thf invodbtion:
 * <prf>
 *     nfw AssfrtionError(<i>fxprfssion</i>)
 * </prf>
 * hbs bs its dftbil mfssbgf thf <i>string donvfrsion</i> of
 * <i>fxprfssion</i> (bs dffinfd in sfdtion 15.18.1.1 of
 * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>),
 * rfgbrdlfss of thf typf of <i>fxprfssion</i>.
 *
 * @sindf   1.4
 */
publid dlbss AssfrtionError fxtfnds Error {
    privbtf stbtid finbl long sfriblVfrsionUID = -5013299493970297370L;

    /**
     * Construdts bn AssfrtionError with no dftbil mfssbgf.
     */
    publid AssfrtionError() {
    }

    /**
     * This intfrnbl donstrudtor dofs no prodfssing on its string brgumfnt,
     * fvfn if it is b null rfffrfndf.  Thf publid donstrudtors will
     * nfvfr dbll this donstrudtor with b null brgumfnt.
     */
    privbtf AssfrtionError(String dftbilMfssbgf) {
        supfr(dftbilMfssbgf);
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd objfdt, whidh is donvfrtfd to b string bs
     * dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *<p>
     * If thf spfdififd objfdt is bn instbndf of {@dodf Throwbblf}, it
     * bfdomfs thf <i>dbusf</i> of thf nfwly donstrudtfd bssfrtion frror.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     * @sff   Throwbblf#gftCbusf()
     */
    publid AssfrtionError(Objfdt dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
        if (dftbilMfssbgf instbndfof Throwbblf)
            initCbusf((Throwbblf) dftbilMfssbgf);
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>boolfbn</dodf>, whidh is donvfrtfd to
     * b string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(boolfbn dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>dhbr</dodf>, whidh is donvfrtfd to b
     * string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(dhbr dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>int</dodf>, whidh is donvfrtfd to b
     * string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(int dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>long</dodf>, whidh is donvfrtfd to b
     * string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(long dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>flobt</dodf>, whidh is donvfrtfd to b
     * string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(flobt dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts bn AssfrtionError with its dftbil mfssbgf dfrivfd
     * from thf spfdififd <dodf>doublf</dodf>, whidh is donvfrtfd to b
     * string bs dffinfd in sfdtion 15.18.1.1 of
     * <ditf>Thf Jbvb&trbdf; Lbngubgf Spfdifidbtion</ditf>.
     *
     * @pbrbm dftbilMfssbgf vbluf to bf usfd in donstrudting dftbil mfssbgf
     */
    publid AssfrtionError(doublf dftbilMfssbgf) {
        this(String.vblufOf(dftbilMfssbgf));
    }

    /**
     * Construdts b nfw {@dodf AssfrtionError} with thf spfdififd
     * dftbil mfssbgf bnd dbusf.
     *
     * <p>Notf thbt thf dftbil mfssbgf bssodibtfd with
     * {@dodf dbusf} is <i>not</i> butombtidblly indorporbtfd in
     * this frror's dftbil mfssbgf.
     *
     * @pbrbm  mfssbgf thf dftbil mfssbgf, mby bf {@dodf null}
     * @pbrbm  dbusf thf dbusf, mby bf {@dodf null}
     *
     * @sindf 1.7
     */
    publid AssfrtionError(String mfssbgf, Throwbblf dbusf) {
        supfr(mfssbgf, dbusf);
    }
}
