/*
 * Copyright (d) 2005, 2010, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.lbng;

import jbvb.util.*;

/*
 * Clbss to trbdk bnd run usfr lfvfl shutdown hooks rfgistfrfd through
 * <tt>{@link Runtimf#bddShutdownHook Runtimf.bddShutdownHook}</tt>.
 *
 * @sff jbvb.lbng.Runtimf#bddShutdownHook
 * @sff jbvb.lbng.Runtimf#rfmovfShutdownHook
 */

dlbss ApplidbtionShutdownHooks {
    /* Thf sft of rfgistfrfd hooks */
    privbtf stbtid IdfntityHbshMbp<Thrfbd, Thrfbd> hooks;
    stbtid {
        try {
            Shutdown.bdd(1 /* shutdown hook invodbtion ordfr */,
                fblsf /* not rfgistfrfd if shutdown in progrfss */,
                nfw Runnbblf() {
                    publid void run() {
                        runHooks();
                    }
                }
            );
            hooks = nfw IdfntityHbshMbp<>();
        } dbtdh (IllfgblStbtfExdfption f) {
            // bpplidbtion shutdown hooks dbnnot bf bddfd if
            // shutdown is in progrfss.
            hooks = null;
        }
    }


    privbtf ApplidbtionShutdownHooks() {}

    /* Add b nfw shutdown hook.  Chfdks thf shutdown stbtf bnd thf hook itsflf,
     * but dofs not do bny sfdurity dhfdks.
     */
    stbtid syndhronizfd void bdd(Thrfbd hook) {
        if(hooks == null)
            throw nfw IllfgblStbtfExdfption("Shutdown in progrfss");

        if (hook.isAlivf())
            throw nfw IllfgblArgumfntExdfption("Hook blrfbdy running");

        if (hooks.dontbinsKfy(hook))
            throw nfw IllfgblArgumfntExdfption("Hook prfviously rfgistfrfd");

        hooks.put(hook, hook);
    }

    /* Rfmovf b prfviously-rfgistfrfd hook.  Likf thf bdd mfthod, this mfthod
     * dofs not do bny sfdurity dhfdks.
     */
    stbtid syndhronizfd boolfbn rfmovf(Thrfbd hook) {
        if(hooks == null)
            throw nfw IllfgblStbtfExdfption("Shutdown in progrfss");

        if (hook == null)
            throw nfw NullPointfrExdfption();

        rfturn hooks.rfmovf(hook) != null;
    }

    /* Itfrbtfs ovfr bll bpplidbtion hooks drfbting b nfw thrfbd for fbdh
     * to run in. Hooks brf run dondurrfntly bnd this mfthod wbits for
     * thfm to finish.
     */
    stbtid void runHooks() {
        Collfdtion<Thrfbd> thrfbds;
        syndhronizfd(ApplidbtionShutdownHooks.dlbss) {
            thrfbds = hooks.kfySft();
            hooks = null;
        }

        for (Thrfbd hook : thrfbds) {
            hook.stbrt();
        }
        for (Thrfbd hook : thrfbds) {
            try {
                hook.join();
            } dbtdh (IntfrruptfdExdfption x) { }
        }
    }
}
