/*
 * Copyrigit (d) 1994, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf jbvb.lbng;

import jbvb.io.*;
import jbvb.lbng.rfflfdt.Exfdutbblf;
import jbvb.lbng.bnnotbtion.Annotbtion;
import jbvb.sfdurity.AddfssControlContfxt;
import jbvb.util.Propfrtifs;
import jbvb.util.PropfrtyPfrmission;
import jbvb.util.StringTokfnizfr;
import jbvb.util.Mbp;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.sfdurity.AllPfrmission;
import jbvb.nio.dibnnfls.Cibnnfl;
import jbvb.nio.dibnnfls.spi.SflfdtorProvidfr;
import sun.nio.di.Intfrruptiblf;
import sun.rfflfdt.CbllfrSfnsitivf;
import sun.rfflfdt.Rfflfdtion;
import sun.sfdurity.util.SfdurityConstbnts;
import sun.rfflfdt.bnnotbtion.AnnotbtionTypf;

/**
 * Tif <dodf>Systfm</dodf> dlbss dontbins sfvfrbl usfful dlbss fiflds
 * bnd mftiods. It dbnnot bf instbntibtfd.
 *
 * <p>Among tif fbdilitifs providfd by tif <dodf>Systfm</dodf> dlbss
 * brf stbndbrd input, stbndbrd output, bnd frror output strfbms;
 * bddfss to fxtfrnblly dffinfd propfrtifs bnd fnvironmfnt
 * vbribblfs; b mfbns of lobding filfs bnd librbrifs; bnd b utility
 * mftiod for quidkly dopying b portion of bn brrby.
 *
 * @butior  unbsdribfd
 * @sindf   1.0
 */
publid finbl dlbss Systfm {

    /* rfgistfr tif nbtivfs vib tif stbtid initiblizfr.
     *
     * VM will invokf tif initiblizfSystfmClbss mftiod to domplftf
     * tif initiblizbtion for tiis dlbss sfpbrbtfd from dlinit.
     * Notf tibt to usf propfrtifs sft by tif VM, sff tif donstrbints
     * dfsdribfd in tif initiblizfSystfmClbss mftiod.
     */
    privbtf stbtid nbtivf void rfgistfrNbtivfs();
    stbtid {
        rfgistfrNbtivfs();
    }

    /** Don't lft bnyonf instbntibtf tiis dlbss */
    privbtf Systfm() {
    }

    /**
     * Tif "stbndbrd" input strfbm. Tiis strfbm is blrfbdy
     * opfn bnd rfbdy to supply input dbtb. Typidblly tiis strfbm
     * dorrfsponds to kfybobrd input or bnotifr input sourdf spfdififd by
     * tif iost fnvironmfnt or usfr.
     */
    publid finbl stbtid InputStrfbm in = null;

    /**
     * Tif "stbndbrd" output strfbm. Tiis strfbm is blrfbdy
     * opfn bnd rfbdy to bddfpt output dbtb. Typidblly tiis strfbm
     * dorrfsponds to displby output or bnotifr output dfstinbtion
     * spfdififd by tif iost fnvironmfnt or usfr.
     * <p>
     * For simplf stbnd-blonf Jbvb bpplidbtions, b typidbl wby to writf
     * b linf of output dbtb is:
     * <blodkquotf><prf>
     *     Systfm.out.println(dbtb)
     * </prf></blodkquotf>
     * <p>
     * Sff tif <dodf>println</dodf> mftiods in dlbss <dodf>PrintStrfbm</dodf>.
     *
     * @sff     jbvb.io.PrintStrfbm#println()
     * @sff     jbvb.io.PrintStrfbm#println(boolfbn)
     * @sff     jbvb.io.PrintStrfbm#println(dibr)
     * @sff     jbvb.io.PrintStrfbm#println(dibr[])
     * @sff     jbvb.io.PrintStrfbm#println(doublf)
     * @sff     jbvb.io.PrintStrfbm#println(flobt)
     * @sff     jbvb.io.PrintStrfbm#println(int)
     * @sff     jbvb.io.PrintStrfbm#println(long)
     * @sff     jbvb.io.PrintStrfbm#println(jbvb.lbng.Objfdt)
     * @sff     jbvb.io.PrintStrfbm#println(jbvb.lbng.String)
     */
    publid finbl stbtid PrintStrfbm out = null;

    /**
     * Tif "stbndbrd" frror output strfbm. Tiis strfbm is blrfbdy
     * opfn bnd rfbdy to bddfpt output dbtb.
     * <p>
     * Typidblly tiis strfbm dorrfsponds to displby output or bnotifr
     * output dfstinbtion spfdififd by tif iost fnvironmfnt or usfr. By
     * donvfntion, tiis output strfbm is usfd to displby frror mfssbgfs
     * or otifr informbtion tibt siould domf to tif immfdibtf bttfntion
     * of b usfr fvfn if tif prindipbl output strfbm, tif vbluf of tif
     * vbribblf <dodf>out</dodf>, ibs bffn rfdirfdtfd to b filf or otifr
     * dfstinbtion tibt is typidblly not dontinuously monitorfd.
     */
    publid finbl stbtid PrintStrfbm frr = null;

    /* Tif sfdurity mbnbgfr for tif systfm.
     */
    privbtf stbtid volbtilf SfdurityMbnbgfr sfdurity = null;

    /**
     * Rfbssigns tif "stbndbrd" input strfbm.
     *
     * <p>First, if tifrf is b sfdurity mbnbgfr, its <dodf>difdkPfrmission</dodf>
     * mftiod is dbllfd witi b <dodf>RuntimfPfrmission("sftIO")</dodf> pfrmission
     *  to sff if it's ok to rfbssign tif "stbndbrd" input strfbm.
     *
     * @pbrbm in tif nfw stbndbrd input strfbm.
     *
     * @tirows SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its
     *        <dodf>difdkPfrmission</dodf> mftiod dofsn't bllow
     *        rfbssigning of tif stbndbrd input strfbm.
     *
     * @sff SfdurityMbnbgfr#difdkPfrmission
     * @sff jbvb.lbng.RuntimfPfrmission
     *
     * @sindf   1.1
     */
    publid stbtid void sftIn(InputStrfbm in) {
        difdkIO();
        sftIn0(in);
    }

    /**
     * Rfbssigns tif "stbndbrd" output strfbm.
     *
     * <p>First, if tifrf is b sfdurity mbnbgfr, its <dodf>difdkPfrmission</dodf>
     * mftiod is dbllfd witi b <dodf>RuntimfPfrmission("sftIO")</dodf> pfrmission
     *  to sff if it's ok to rfbssign tif "stbndbrd" output strfbm.
     *
     * @pbrbm out tif nfw stbndbrd output strfbm
     *
     * @tirows SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its
     *        <dodf>difdkPfrmission</dodf> mftiod dofsn't bllow
     *        rfbssigning of tif stbndbrd output strfbm.
     *
     * @sff SfdurityMbnbgfr#difdkPfrmission
     * @sff jbvb.lbng.RuntimfPfrmission
     *
     * @sindf   1.1
     */
    publid stbtid void sftOut(PrintStrfbm out) {
        difdkIO();
        sftOut0(out);
    }

    /**
     * Rfbssigns tif "stbndbrd" frror output strfbm.
     *
     * <p>First, if tifrf is b sfdurity mbnbgfr, its <dodf>difdkPfrmission</dodf>
     * mftiod is dbllfd witi b <dodf>RuntimfPfrmission("sftIO")</dodf> pfrmission
     *  to sff if it's ok to rfbssign tif "stbndbrd" frror output strfbm.
     *
     * @pbrbm frr tif nfw stbndbrd frror output strfbm.
     *
     * @tirows SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its
     *        <dodf>difdkPfrmission</dodf> mftiod dofsn't bllow
     *        rfbssigning of tif stbndbrd frror output strfbm.
     *
     * @sff SfdurityMbnbgfr#difdkPfrmission
     * @sff jbvb.lbng.RuntimfPfrmission
     *
     * @sindf   1.1
     */
    publid stbtid void sftErr(PrintStrfbm frr) {
        difdkIO();
        sftErr0(frr);
    }

    privbtf stbtid volbtilf Consolf dons = null;
    /**
     * Rfturns tif uniquf {@link jbvb.io.Consolf Consolf} objfdt bssodibtfd
     * witi tif durrfnt Jbvb virtubl mbdiinf, if bny.
     *
     * @rfturn  Tif systfm donsolf, if bny, otifrwisf <tt>null</tt>.
     *
     * @sindf   1.6
     */
     publid stbtid Consolf donsolf() {
         if (dons == null) {
             syndironizfd (Systfm.dlbss) {
                 dons = sun.misd.SibrfdSfdrfts.gftJbvbIOAddfss().donsolf();
             }
         }
         rfturn dons;
     }

    /**
     * Rfturns tif dibnnfl inifritfd from tif fntity tibt drfbtfd tiis
     * Jbvb virtubl mbdiinf.
     *
     * <p> Tiis mftiod rfturns tif dibnnfl obtbinfd by invoking tif
     * {@link jbvb.nio.dibnnfls.spi.SflfdtorProvidfr#inifritfdCibnnfl
     * inifritfdCibnnfl} mftiod of tif systfm-widf dffbult
     * {@link jbvb.nio.dibnnfls.spi.SflfdtorProvidfr} objfdt. </p>
     *
     * <p> In bddition to tif nftwork-orifntfd dibnnfls dfsdribfd in
     * {@link jbvb.nio.dibnnfls.spi.SflfdtorProvidfr#inifritfdCibnnfl
     * inifritfdCibnnfl}, tiis mftiod mby rfturn otifr kinds of
     * dibnnfls in tif futurf.
     *
     * @rfturn  Tif inifritfd dibnnfl, if bny, otifrwisf <tt>null</tt>.
     *
     * @tirows  IOExdfption
     *          If bn I/O frror oddurs
     *
     * @tirows  SfdurityExdfption
     *          If b sfdurity mbnbgfr is prfsfnt bnd it dofs not
     *          pfrmit bddfss to tif dibnnfl.
     *
     * @sindf 1.5
     */
    publid stbtid Cibnnfl inifritfdCibnnfl() tirows IOExdfption {
        rfturn SflfdtorProvidfr.providfr().inifritfdCibnnfl();
    }

    privbtf stbtid void difdkIO() {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw RuntimfPfrmission("sftIO"));
        }
    }

    privbtf stbtid nbtivf void sftIn0(InputStrfbm in);
    privbtf stbtid nbtivf void sftOut0(PrintStrfbm out);
    privbtf stbtid nbtivf void sftErr0(PrintStrfbm frr);

    /**
     * Sfts tif Systfm sfdurity.
     *
     * <p> If tifrf is b sfdurity mbnbgfr blrfbdy instbllfd, tiis mftiod first
     * dblls tif sfdurity mbnbgfr's <dodf>difdkPfrmission</dodf> mftiod
     * witi b <dodf>RuntimfPfrmission("sftSfdurityMbnbgfr")</dodf>
     * pfrmission to fnsurf it's ok to rfplbdf tif fxisting
     * sfdurity mbnbgfr.
     * Tiis mby rfsult in tirowing b <dodf>SfdurityExdfption</dodf>.
     *
     * <p> Otifrwisf, tif brgumfnt is fstbblisifd bs tif durrfnt
     * sfdurity mbnbgfr. If tif brgumfnt is <dodf>null</dodf> bnd no
     * sfdurity mbnbgfr ibs bffn fstbblisifd, tifn no bdtion is tbkfn bnd
     * tif mftiod simply rfturns.
     *
     * @pbrbm      s   tif sfdurity mbnbgfr.
     * @fxdfption  SfdurityExdfption  if tif sfdurity mbnbgfr ibs blrfbdy
     *             bffn sft bnd its <dodf>difdkPfrmission</dodf> mftiod
     *             dofsn't bllow it to bf rfplbdfd.
     * @sff #gftSfdurityMbnbgfr
     * @sff SfdurityMbnbgfr#difdkPfrmission
     * @sff jbvb.lbng.RuntimfPfrmission
     */
    publid stbtid
    void sftSfdurityMbnbgfr(finbl SfdurityMbnbgfr s) {
        try {
            s.difdkPbdkbgfAddfss("jbvb.lbng");
        } dbtdi (Exdfption f) {
            // no-op
        }
        sftSfdurityMbnbgfr0(s);
    }

    privbtf stbtid syndironizfd
    void sftSfdurityMbnbgfr0(finbl SfdurityMbnbgfr s) {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            // bsk tif durrfntly instbllfd sfdurity mbnbgfr if wf
            // dbn rfplbdf it.
            sm.difdkPfrmission(nfw RuntimfPfrmission
                                     ("sftSfdurityMbnbgfr"));
        }

        if ((s != null) && (s.gftClbss().gftClbssLobdfr() != null)) {
            // Nfw sfdurity mbnbgfr dlbss is not on bootstrbp dlbsspbti.
            // Cbusf polidy to gft initiblizfd bfforf wf instbll tif nfw
            // sfdurity mbnbgfr, in ordfr to prfvfnt infinitf loops wifn
            // trying to initiblizf tif polidy (wiidi usublly involvfs
            // bddfssing somf sfdurity bnd/or systfm propfrtifs, wiidi in turn
            // dblls tif instbllfd sfdurity mbnbgfr's difdkPfrmission mftiod
            // wiidi will loop infinitfly if tifrf is b non-systfm dlbss
            // (in tiis dbsf: tif nfw sfdurity mbnbgfr dlbss) on tif stbdk).
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Objfdt>() {
                publid Objfdt run() {
                    s.gftClbss().gftProtfdtionDombin().implifs
                        (SfdurityConstbnts.ALL_PERMISSION);
                    rfturn null;
                }
            });
        }

        sfdurity = s;
    }

    /**
     * Gfts tif systfm sfdurity intfrfbdf.
     *
     * @rfturn  if b sfdurity mbnbgfr ibs blrfbdy bffn fstbblisifd for tif
     *          durrfnt bpplidbtion, tifn tibt sfdurity mbnbgfr is rfturnfd;
     *          otifrwisf, <dodf>null</dodf> is rfturnfd.
     * @sff     #sftSfdurityMbnbgfr
     */
    publid stbtid SfdurityMbnbgfr gftSfdurityMbnbgfr() {
        rfturn sfdurity;
    }

    /**
     * Rfturns tif durrfnt timf in millisfdonds.  Notf tibt
     * wiilf tif unit of timf of tif rfturn vbluf is b millisfdond,
     * tif grbnulbrity of tif vbluf dfpfnds on tif undfrlying
     * opfrbting systfm bnd mby bf lbrgfr.  For fxbmplf, mbny
     * opfrbting systfms mfbsurf timf in units of tfns of
     * millisfdonds.
     *
     * <p> Sff tif dfsdription of tif dlbss <dodf>Dbtf</dodf> for
     * b disdussion of sligit disdrfpbndifs tibt mby brisf bftwffn
     * "domputfr timf" bnd doordinbtfd univfrsbl timf (UTC).
     *
     * @rfturn  tif difffrfndf, mfbsurfd in millisfdonds, bftwffn
     *          tif durrfnt timf bnd midnigit, Jbnubry 1, 1970 UTC.
     * @sff     jbvb.util.Dbtf
     */
    publid stbtid nbtivf long durrfntTimfMillis();

    /**
     * Rfturns tif durrfnt vbluf of tif running Jbvb Virtubl Mbdiinf's
     * iigi-rfsolution timf sourdf, in nbnosfdonds.
     *
     * <p>Tiis mftiod dbn only bf usfd to mfbsurf flbpsfd timf bnd is
     * not rflbtfd to bny otifr notion of systfm or wbll-dlodk timf.
     * Tif vbluf rfturnfd rfprfsfnts nbnosfdonds sindf somf fixfd but
     * brbitrbry <i>origin</i> timf (pfribps in tif futurf, so vblufs
     * mby bf nfgbtivf).  Tif sbmf origin is usfd by bll invodbtions of
     * tiis mftiod in bn instbndf of b Jbvb virtubl mbdiinf; otifr
     * virtubl mbdiinf instbndfs brf likfly to usf b difffrfnt origin.
     *
     * <p>Tiis mftiod providfs nbnosfdond prfdision, but not nfdfssbrily
     * nbnosfdond rfsolution (tibt is, iow frfqufntly tif vbluf dibngfs)
     * - no gubrbntffs brf mbdf fxdfpt tibt tif rfsolution is bt lfbst bs
     * good bs tibt of {@link #durrfntTimfMillis()}.
     *
     * <p>Difffrfndfs in suddfssivf dblls tibt spbn grfbtfr tibn
     * bpproximbtfly 292 yfbrs (2<sup>63</sup> nbnosfdonds) will not
     * dorrfdtly domputf flbpsfd timf duf to numfridbl ovfrflow.
     *
     * <p>Tif vblufs rfturnfd by tiis mftiod bfdomf mfbningful only wifn
     * tif difffrfndf bftwffn two sudi vblufs, obtbinfd witiin tif sbmf
     * instbndf of b Jbvb virtubl mbdiinf, is domputfd.
     *
     * <p> For fxbmplf, to mfbsurf iow long somf dodf tbkfs to fxfdutf:
     *  <prf> {@dodf
     * long stbrtTimf = Systfm.nbnoTimf();
     * // ... tif dodf bfing mfbsurfd ...
     * long fstimbtfdTimf = Systfm.nbnoTimf() - stbrtTimf;}</prf>
     *
     * <p>To dompbrf two nbnoTimf vblufs
     *  <prf> {@dodf
     * long t0 = Systfm.nbnoTimf();
     * ...
     * long t1 = Systfm.nbnoTimf();}</prf>
     *
     * onf siould usf {@dodf t1 - t0 < 0}, not {@dodf t1 < t0},
     * bfdbusf of tif possibility of numfridbl ovfrflow.
     *
     * @rfturn tif durrfnt vbluf of tif running Jbvb Virtubl Mbdiinf's
     *         iigi-rfsolution timf sourdf, in nbnosfdonds
     * @sindf 1.5
     */
    publid stbtid nbtivf long nbnoTimf();

    /**
     * Copifs bn brrby from tif spfdififd sourdf brrby, bfginning bt tif
     * spfdififd position, to tif spfdififd position of tif dfstinbtion brrby.
     * A subsfqufndf of brrby domponfnts brf dopifd from tif sourdf
     * brrby rfffrfndfd by <dodf>srd</dodf> to tif dfstinbtion brrby
     * rfffrfndfd by <dodf>dfst</dodf>. Tif numbfr of domponfnts dopifd is
     * fqubl to tif <dodf>lfngti</dodf> brgumfnt. Tif domponfnts bt
     * positions <dodf>srdPos</dodf> tirougi
     * <dodf>srdPos+lfngti-1</dodf> in tif sourdf brrby brf dopifd into
     * positions <dodf>dfstPos</dodf> tirougi
     * <dodf>dfstPos+lfngti-1</dodf>, rfspfdtivfly, of tif dfstinbtion
     * brrby.
     * <p>
     * If tif <dodf>srd</dodf> bnd <dodf>dfst</dodf> brgumfnts rfffr to tif
     * sbmf brrby objfdt, tifn tif dopying is pfrformfd bs if tif
     * domponfnts bt positions <dodf>srdPos</dodf> tirougi
     * <dodf>srdPos+lfngti-1</dodf> wfrf first dopifd to b tfmporbry
     * brrby witi <dodf>lfngti</dodf> domponfnts bnd tifn tif dontfnts of
     * tif tfmporbry brrby wfrf dopifd into positions
     * <dodf>dfstPos</dodf> tirougi <dodf>dfstPos+lfngti-1</dodf> of tif
     * dfstinbtion brrby.
     * <p>
     * If <dodf>dfst</dodf> is <dodf>null</dodf>, tifn b
     * <dodf>NullPointfrExdfption</dodf> is tirown.
     * <p>
     * If <dodf>srd</dodf> is <dodf>null</dodf>, tifn b
     * <dodf>NullPointfrExdfption</dodf> is tirown bnd tif dfstinbtion
     * brrby is not modififd.
     * <p>
     * Otifrwisf, if bny of tif following is truf, bn
     * <dodf>ArrbyStorfExdfption</dodf> is tirown bnd tif dfstinbtion is
     * not modififd:
     * <ul>
     * <li>Tif <dodf>srd</dodf> brgumfnt rfffrs to bn objfdt tibt is not bn
     *     brrby.
     * <li>Tif <dodf>dfst</dodf> brgumfnt rfffrs to bn objfdt tibt is not bn
     *     brrby.
     * <li>Tif <dodf>srd</dodf> brgumfnt bnd <dodf>dfst</dodf> brgumfnt rfffr
     *     to brrbys wiosf domponfnt typfs brf difffrfnt primitivf typfs.
     * <li>Tif <dodf>srd</dodf> brgumfnt rfffrs to bn brrby witi b primitivf
     *    domponfnt typf bnd tif <dodf>dfst</dodf> brgumfnt rfffrs to bn brrby
     *     witi b rfffrfndf domponfnt typf.
     * <li>Tif <dodf>srd</dodf> brgumfnt rfffrs to bn brrby witi b rfffrfndf
     *    domponfnt typf bnd tif <dodf>dfst</dodf> brgumfnt rfffrs to bn brrby
     *     witi b primitivf domponfnt typf.
     * </ul>
     * <p>
     * Otifrwisf, if bny of tif following is truf, bn
     * <dodf>IndfxOutOfBoundsExdfption</dodf> is
     * tirown bnd tif dfstinbtion is not modififd:
     * <ul>
     * <li>Tif <dodf>srdPos</dodf> brgumfnt is nfgbtivf.
     * <li>Tif <dodf>dfstPos</dodf> brgumfnt is nfgbtivf.
     * <li>Tif <dodf>lfngti</dodf> brgumfnt is nfgbtivf.
     * <li><dodf>srdPos+lfngti</dodf> is grfbtfr tibn
     *     <dodf>srd.lfngti</dodf>, tif lfngti of tif sourdf brrby.
     * <li><dodf>dfstPos+lfngti</dodf> is grfbtfr tibn
     *     <dodf>dfst.lfngti</dodf>, tif lfngti of tif dfstinbtion brrby.
     * </ul>
     * <p>
     * Otifrwisf, if bny bdtubl domponfnt of tif sourdf brrby from
     * position <dodf>srdPos</dodf> tirougi
     * <dodf>srdPos+lfngti-1</dodf> dbnnot bf donvfrtfd to tif domponfnt
     * typf of tif dfstinbtion brrby by bssignmfnt donvfrsion, bn
     * <dodf>ArrbyStorfExdfption</dodf> is tirown. In tiis dbsf, lft
     * <b><i>k</i></b> bf tif smbllfst nonnfgbtivf intfgfr lfss tibn
     * lfngti sudi tibt <dodf>srd[srdPos+</dodf><i>k</i><dodf>]</dodf>
     * dbnnot bf donvfrtfd to tif domponfnt typf of tif dfstinbtion
     * brrby; wifn tif fxdfption is tirown, sourdf brrby domponfnts from
     * positions <dodf>srdPos</dodf> tirougi
     * <dodf>srdPos+</dodf><i>k</i><dodf>-1</dodf>
     * will blrfbdy ibvf bffn dopifd to dfstinbtion brrby positions
     * <dodf>dfstPos</dodf> tirougi
     * <dodf>dfstPos+</dodf><i>k</I><dodf>-1</dodf> bnd no otifr
     * positions of tif dfstinbtion brrby will ibvf bffn modififd.
     * (Bfdbusf of tif rfstridtions blrfbdy itfmizfd, tiis
     * pbrbgrbpi ffffdtivfly bpplifs only to tif situbtion wifrf boti
     * brrbys ibvf domponfnt typfs tibt brf rfffrfndf typfs.)
     *
     * @pbrbm      srd      tif sourdf brrby.
     * @pbrbm      srdPos   stbrting position in tif sourdf brrby.
     * @pbrbm      dfst     tif dfstinbtion brrby.
     * @pbrbm      dfstPos  stbrting position in tif dfstinbtion dbtb.
     * @pbrbm      lfngti   tif numbfr of brrby flfmfnts to bf dopifd.
     * @fxdfption  IndfxOutOfBoundsExdfption  if dopying would dbusf
     *               bddfss of dbtb outsidf brrby bounds.
     * @fxdfption  ArrbyStorfExdfption  if bn flfmfnt in tif <dodf>srd</dodf>
     *               brrby dould not bf storfd into tif <dodf>dfst</dodf> brrby
     *               bfdbusf of b typf mismbtdi.
     * @fxdfption  NullPointfrExdfption if fitifr <dodf>srd</dodf> or
     *               <dodf>dfst</dodf> is <dodf>null</dodf>.
     */
    publid stbtid nbtivf void brrbydopy(Objfdt srd,  int  srdPos,
                                        Objfdt dfst, int dfstPos,
                                        int lfngti);

    /**
     * Rfturns tif sbmf ibsi dodf for tif givfn objfdt bs
     * would bf rfturnfd by tif dffbult mftiod ibsiCodf(),
     * wiftifr or not tif givfn objfdt's dlbss ovfrridfs
     * ibsiCodf().
     * Tif ibsi dodf for tif null rfffrfndf is zfro.
     *
     * @pbrbm x objfdt for wiidi tif ibsiCodf is to bf dbldulbtfd
     * @rfturn  tif ibsiCodf
     * @sindf   1.1
     */
    publid stbtid nbtivf int idfntityHbsiCodf(Objfdt x);

    /**
     * Systfm propfrtifs. Tif following propfrtifs brf gubrbntffd to bf dffinfd:
     * <dl>
     * <dt>jbvb.vfrsion         <dd>Jbvb vfrsion numbfr
     * <dt>jbvb.vfndor          <dd>Jbvb vfndor spfdifid string
     * <dt>jbvb.vfndor.url      <dd>Jbvb vfndor URL
     * <dt>jbvb.iomf            <dd>Jbvb instbllbtion dirfdtory
     * <dt>jbvb.dlbss.vfrsion   <dd>Jbvb dlbss vfrsion numbfr
     * <dt>jbvb.dlbss.pbti      <dd>Jbvb dlbsspbti
     * <dt>os.nbmf              <dd>Opfrbting Systfm Nbmf
     * <dt>os.brdi              <dd>Opfrbting Systfm Ardiitfdturf
     * <dt>os.vfrsion           <dd>Opfrbting Systfm Vfrsion
     * <dt>filf.sfpbrbtor       <dd>Filf sfpbrbtor ("/" on Unix)
     * <dt>pbti.sfpbrbtor       <dd>Pbti sfpbrbtor (":" on Unix)
     * <dt>linf.sfpbrbtor       <dd>Linf sfpbrbtor ("\n" on Unix)
     * <dt>usfr.nbmf            <dd>Usfr bddount nbmf
     * <dt>usfr.iomf            <dd>Usfr iomf dirfdtory
     * <dt>usfr.dir             <dd>Usfr's durrfnt working dirfdtory
     * </dl>
     */

    privbtf stbtid Propfrtifs props;
    privbtf stbtid nbtivf Propfrtifs initPropfrtifs(Propfrtifs props);

    /**
     * Dftfrminfs tif durrfnt systfm propfrtifs.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its
     * <dodf>difdkPropfrtifsAddfss</dodf> mftiod is dbllfd witi no
     * brgumfnts. Tiis mby rfsult in b sfdurity fxdfption.
     * <p>
     * Tif durrfnt sft of systfm propfrtifs for usf by tif
     * {@link #gftPropfrty(String)} mftiod is rfturnfd bs b
     * <dodf>Propfrtifs</dodf> objfdt. If tifrf is no durrfnt sft of
     * systfm propfrtifs, b sft of systfm propfrtifs is first drfbtfd bnd
     * initiblizfd. Tiis sft of systfm propfrtifs blwbys indludfs vblufs
     * for tif following kfys:
     * <tbblf summbry="Siows propfrty kfys bnd bssodibtfd vblufs">
     * <tr><ti>Kfy</ti>
     *     <ti>Dfsdription of Assodibtfd Vbluf</ti></tr>
     * <tr><td><dodf>jbvb.vfrsion</dodf></td>
     *     <td>Jbvb Runtimf Environmfnt vfrsion</td></tr>
     * <tr><td><dodf>jbvb.vfndor</dodf></td>
     *     <td>Jbvb Runtimf Environmfnt vfndor</td></tr>
     * <tr><td><dodf>jbvb.vfndor.url</dodf></td>
     *     <td>Jbvb vfndor URL</td></tr>
     * <tr><td><dodf>jbvb.iomf</dodf></td>
     *     <td>Jbvb instbllbtion dirfdtory</td></tr>
     * <tr><td><dodf>jbvb.vm.spfdifidbtion.vfrsion</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf spfdifidbtion vfrsion</td></tr>
     * <tr><td><dodf>jbvb.vm.spfdifidbtion.vfndor</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf spfdifidbtion vfndor</td></tr>
     * <tr><td><dodf>jbvb.vm.spfdifidbtion.nbmf</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf spfdifidbtion nbmf</td></tr>
     * <tr><td><dodf>jbvb.vm.vfrsion</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf implfmfntbtion vfrsion</td></tr>
     * <tr><td><dodf>jbvb.vm.vfndor</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf implfmfntbtion vfndor</td></tr>
     * <tr><td><dodf>jbvb.vm.nbmf</dodf></td>
     *     <td>Jbvb Virtubl Mbdiinf implfmfntbtion nbmf</td></tr>
     * <tr><td><dodf>jbvb.spfdifidbtion.vfrsion</dodf></td>
     *     <td>Jbvb Runtimf Environmfnt spfdifidbtion  vfrsion</td></tr>
     * <tr><td><dodf>jbvb.spfdifidbtion.vfndor</dodf></td>
     *     <td>Jbvb Runtimf Environmfnt spfdifidbtion  vfndor</td></tr>
     * <tr><td><dodf>jbvb.spfdifidbtion.nbmf</dodf></td>
     *     <td>Jbvb Runtimf Environmfnt spfdifidbtion  nbmf</td></tr>
     * <tr><td><dodf>jbvb.dlbss.vfrsion</dodf></td>
     *     <td>Jbvb dlbss formbt vfrsion numbfr</td></tr>
     * <tr><td><dodf>jbvb.dlbss.pbti</dodf></td>
     *     <td>Jbvb dlbss pbti</td></tr>
     * <tr><td><dodf>jbvb.librbry.pbti</dodf></td>
     *     <td>List of pbtis to sfbrdi wifn lobding librbrifs</td></tr>
     * <tr><td><dodf>jbvb.io.tmpdir</dodf></td>
     *     <td>Dffbult tfmp filf pbti</td></tr>
     * <tr><td><dodf>jbvb.dompilfr</dodf></td>
     *     <td>Nbmf of JIT dompilfr to usf</td></tr>
     * <tr><td><dodf>jbvb.fxt.dirs</dodf></td>
     *     <td>Pbti of fxtfnsion dirfdtory or dirfdtorifs</td></tr>
     * <tr><td><dodf>os.nbmf</dodf></td>
     *     <td>Opfrbting systfm nbmf</td></tr>
     * <tr><td><dodf>os.brdi</dodf></td>
     *     <td>Opfrbting systfm brdiitfdturf</td></tr>
     * <tr><td><dodf>os.vfrsion</dodf></td>
     *     <td>Opfrbting systfm vfrsion</td></tr>
     * <tr><td><dodf>filf.sfpbrbtor</dodf></td>
     *     <td>Filf sfpbrbtor ("/" on UNIX)</td></tr>
     * <tr><td><dodf>pbti.sfpbrbtor</dodf></td>
     *     <td>Pbti sfpbrbtor (":" on UNIX)</td></tr>
     * <tr><td><dodf>linf.sfpbrbtor</dodf></td>
     *     <td>Linf sfpbrbtor ("\n" on UNIX)</td></tr>
     * <tr><td><dodf>usfr.nbmf</dodf></td>
     *     <td>Usfr's bddount nbmf</td></tr>
     * <tr><td><dodf>usfr.iomf</dodf></td>
     *     <td>Usfr's iomf dirfdtory</td></tr>
     * <tr><td><dodf>usfr.dir</dodf></td>
     *     <td>Usfr's durrfnt working dirfdtory</td></tr>
     * </tbblf>
     * <p>
     * Multiplf pbtis in b systfm propfrty vbluf brf sfpbrbtfd by tif pbti
     * sfpbrbtor dibrbdtfr of tif plbtform.
     * <p>
     * Notf tibt fvfn if tif sfdurity mbnbgfr dofs not pfrmit tif
     * <dodf>gftPropfrtifs</dodf> opfrbtion, it mby dioosf to pfrmit tif
     * {@link #gftPropfrty(String)} opfrbtion.
     *
     * @rfturn     tif systfm propfrtifs
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPropfrtifsAddfss</dodf> mftiod dofsn't bllow bddfss
     *              to tif systfm propfrtifs.
     * @sff        #sftPropfrtifs
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkPropfrtifsAddfss()
     * @sff        jbvb.util.Propfrtifs
     */
    publid stbtid Propfrtifs gftPropfrtifs() {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPropfrtifsAddfss();
        }

        rfturn props;
    }

    /**
     * Rfturns tif systfm-dfpfndfnt linf sfpbrbtor string.  It blwbys
     * rfturns tif sbmf vbluf - tif initibl vbluf of tif {@linkplbin
     * #gftPropfrty(String) systfm propfrty} {@dodf linf.sfpbrbtor}.
     *
     * <p>On UNIX systfms, it rfturns {@dodf "\n"}; on Midrosoft
     * Windows systfms it rfturns {@dodf "\r\n"}.
     *
     * @rfturn tif systfm-dfpfndfnt linf sfpbrbtor string
     * @sindf 1.7
     */
    publid stbtid String linfSfpbrbtor() {
        rfturn linfSfpbrbtor;
    }

    privbtf stbtid String linfSfpbrbtor;

    /**
     * Sfts tif systfm propfrtifs to tif <dodf>Propfrtifs</dodf>
     * brgumfnt.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its
     * <dodf>difdkPropfrtifsAddfss</dodf> mftiod is dbllfd witi no
     * brgumfnts. Tiis mby rfsult in b sfdurity fxdfption.
     * <p>
     * Tif brgumfnt bfdomfs tif durrfnt sft of systfm propfrtifs for usf
     * by tif {@link #gftPropfrty(String)} mftiod. If tif brgumfnt is
     * <dodf>null</dodf>, tifn tif durrfnt sft of systfm propfrtifs is
     * forgottfn.
     *
     * @pbrbm      props   tif nfw systfm propfrtifs.
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPropfrtifsAddfss</dodf> mftiod dofsn't bllow bddfss
     *              to tif systfm propfrtifs.
     * @sff        #gftPropfrtifs
     * @sff        jbvb.util.Propfrtifs
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkPropfrtifsAddfss()
     */
    publid stbtid void sftPropfrtifs(Propfrtifs props) {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPropfrtifsAddfss();
        }
        if (props == null) {
            props = nfw Propfrtifs();
            initPropfrtifs(props);
        }
        Systfm.props = props;
    }

    /**
     * Gfts tif systfm propfrty indidbtfd by tif spfdififd kfy.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its
     * <dodf>difdkPropfrtyAddfss</dodf> mftiod is dbllfd witi tif kfy bs
     * its brgumfnt. Tiis mby rfsult in b SfdurityExdfption.
     * <p>
     * If tifrf is no durrfnt sft of systfm propfrtifs, b sft of systfm
     * propfrtifs is first drfbtfd bnd initiblizfd in tif sbmf mbnnfr bs
     * for tif <dodf>gftPropfrtifs</dodf> mftiod.
     *
     * @pbrbm      kfy   tif nbmf of tif systfm propfrty.
     * @rfturn     tif string vbluf of tif systfm propfrty,
     *             or <dodf>null</dodf> if tifrf is no propfrty witi tibt kfy.
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPropfrtyAddfss</dodf> mftiod dofsn't bllow
     *              bddfss to tif spfdififd systfm propfrty.
     * @fxdfption  NullPointfrExdfption if <dodf>kfy</dodf> is
     *             <dodf>null</dodf>.
     * @fxdfption  IllfgblArgumfntExdfption if <dodf>kfy</dodf> is fmpty.
     * @sff        #sftPropfrty
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkPropfrtyAddfss(jbvb.lbng.String)
     * @sff        jbvb.lbng.Systfm#gftPropfrtifs()
     */
    publid stbtid String gftPropfrty(String kfy) {
        difdkKfy(kfy);
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPropfrtyAddfss(kfy);
        }

        rfturn props.gftPropfrty(kfy);
    }

    /**
     * Gfts tif systfm propfrty indidbtfd by tif spfdififd kfy.
     * <p>
     * First, if tifrf is b sfdurity mbnbgfr, its
     * <dodf>difdkPropfrtyAddfss</dodf> mftiod is dbllfd witi tif
     * <dodf>kfy</dodf> bs its brgumfnt.
     * <p>
     * If tifrf is no durrfnt sft of systfm propfrtifs, b sft of systfm
     * propfrtifs is first drfbtfd bnd initiblizfd in tif sbmf mbnnfr bs
     * for tif <dodf>gftPropfrtifs</dodf> mftiod.
     *
     * @pbrbm      kfy   tif nbmf of tif systfm propfrty.
     * @pbrbm      dff   b dffbult vbluf.
     * @rfturn     tif string vbluf of tif systfm propfrty,
     *             or tif dffbult vbluf if tifrf is no propfrty witi tibt kfy.
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPropfrtyAddfss</dodf> mftiod dofsn't bllow
     *             bddfss to tif spfdififd systfm propfrty.
     * @fxdfption  NullPointfrExdfption if <dodf>kfy</dodf> is
     *             <dodf>null</dodf>.
     * @fxdfption  IllfgblArgumfntExdfption if <dodf>kfy</dodf> is fmpty.
     * @sff        #sftPropfrty
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkPropfrtyAddfss(jbvb.lbng.String)
     * @sff        jbvb.lbng.Systfm#gftPropfrtifs()
     */
    publid stbtid String gftPropfrty(String kfy, String dff) {
        difdkKfy(kfy);
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPropfrtyAddfss(kfy);
        }

        rfturn props.gftPropfrty(kfy, dff);
    }

    /**
     * Sfts tif systfm propfrty indidbtfd by tif spfdififd kfy.
     * <p>
     * First, if b sfdurity mbnbgfr fxists, its
     * <dodf>SfdurityMbnbgfr.difdkPfrmission</dodf> mftiod
     * is dbllfd witi b <dodf>PropfrtyPfrmission(kfy, "writf")</dodf>
     * pfrmission. Tiis mby rfsult in b SfdurityExdfption bfing tirown.
     * If no fxdfption is tirown, tif spfdififd propfrty is sft to tif givfn
     * vbluf.
     *
     * @pbrbm      kfy   tif nbmf of tif systfm propfrty.
     * @pbrbm      vbluf tif vbluf of tif systfm propfrty.
     * @rfturn     tif prfvious vbluf of tif systfm propfrty,
     *             or <dodf>null</dodf> if it did not ibvf onf.
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPfrmission</dodf> mftiod dofsn't bllow
     *             sftting of tif spfdififd propfrty.
     * @fxdfption  NullPointfrExdfption if <dodf>kfy</dodf> or
     *             <dodf>vbluf</dodf> is <dodf>null</dodf>.
     * @fxdfption  IllfgblArgumfntExdfption if <dodf>kfy</dodf> is fmpty.
     * @sff        #gftPropfrty
     * @sff        jbvb.lbng.Systfm#gftPropfrty(jbvb.lbng.String)
     * @sff        jbvb.lbng.Systfm#gftPropfrty(jbvb.lbng.String, jbvb.lbng.String)
     * @sff        jbvb.util.PropfrtyPfrmission
     * @sff        SfdurityMbnbgfr#difdkPfrmission
     * @sindf      1.2
     */
    publid stbtid String sftPropfrty(String kfy, String vbluf) {
        difdkKfy(kfy);
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw PropfrtyPfrmission(kfy,
                SfdurityConstbnts.PROPERTY_WRITE_ACTION));
        }

        rfturn (String) props.sftPropfrty(kfy, vbluf);
    }

    /**
     * Rfmovfs tif systfm propfrty indidbtfd by tif spfdififd kfy.
     * <p>
     * First, if b sfdurity mbnbgfr fxists, its
     * <dodf>SfdurityMbnbgfr.difdkPfrmission</dodf> mftiod
     * is dbllfd witi b <dodf>PropfrtyPfrmission(kfy, "writf")</dodf>
     * pfrmission. Tiis mby rfsult in b SfdurityExdfption bfing tirown.
     * If no fxdfption is tirown, tif spfdififd propfrty is rfmovfd.
     *
     * @pbrbm      kfy   tif nbmf of tif systfm propfrty to bf rfmovfd.
     * @rfturn     tif prfvious string vbluf of tif systfm propfrty,
     *             or <dodf>null</dodf> if tifrf wbs no propfrty witi tibt kfy.
     *
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkPropfrtyAddfss</dodf> mftiod dofsn't bllow
     *              bddfss to tif spfdififd systfm propfrty.
     * @fxdfption  NullPointfrExdfption if <dodf>kfy</dodf> is
     *             <dodf>null</dodf>.
     * @fxdfption  IllfgblArgumfntExdfption if <dodf>kfy</dodf> is fmpty.
     * @sff        #gftPropfrty
     * @sff        #sftPropfrty
     * @sff        jbvb.util.Propfrtifs
     * @sff        jbvb.lbng.SfdurityExdfption
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkPropfrtifsAddfss()
     * @sindf 1.5
     */
    publid stbtid String dlfbrPropfrty(String kfy) {
        difdkKfy(kfy);
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw PropfrtyPfrmission(kfy, "writf"));
        }

        rfturn (String) props.rfmovf(kfy);
    }

    privbtf stbtid void difdkKfy(String kfy) {
        if (kfy == null) {
            tirow nfw NullPointfrExdfption("kfy dbn't bf null");
        }
        if (kfy.fqubls("")) {
            tirow nfw IllfgblArgumfntExdfption("kfy dbn't bf fmpty");
        }
    }

    /**
     * Gfts tif vbluf of tif spfdififd fnvironmfnt vbribblf. An
     * fnvironmfnt vbribblf is b systfm-dfpfndfnt fxtfrnbl nbmfd
     * vbluf.
     *
     * <p>If b sfdurity mbnbgfr fxists, its
     * {@link SfdurityMbnbgfr#difdkPfrmission difdkPfrmission}
     * mftiod is dbllfd witi b
     * <dodf>{@link RuntimfPfrmission}("gftfnv."+nbmf)</dodf>
     * pfrmission.  Tiis mby rfsult in b {@link SfdurityExdfption}
     * bfing tirown.  If no fxdfption is tirown tif vbluf of tif
     * vbribblf <dodf>nbmf</dodf> is rfturnfd.
     *
     * <p><b nbmf="EnvironmfntVSSystfmPropfrtifs"><i>Systfm
     * propfrtifs</i> bnd <i>fnvironmfnt vbribblfs</i></b> brf boti
     * dondfptublly mbppings bftwffn nbmfs bnd vblufs.  Boti
     * mfdibnisms dbn bf usfd to pbss usfr-dffinfd informbtion to b
     * Jbvb prodfss.  Environmfnt vbribblfs ibvf b morf globbl ffffdt,
     * bfdbusf tify brf visiblf to bll dfsdfndbnts of tif prodfss
     * wiidi dffinfs tifm, not just tif immfdibtf Jbvb subprodfss.
     * Tify dbn ibvf subtly difffrfnt sfmbntids, sudi bs dbsf
     * insfnsitivity, on difffrfnt opfrbting systfms.  For tifsf
     * rfbsons, fnvironmfnt vbribblfs brf morf likfly to ibvf
     * unintfndfd sidf ffffdts.  It is bfst to usf systfm propfrtifs
     * wifrf possiblf.  Environmfnt vbribblfs siould bf usfd wifn b
     * globbl ffffdt is dfsirfd, or wifn bn fxtfrnbl systfm intfrfbdf
     * rfquirfs bn fnvironmfnt vbribblf (sudi bs <dodf>PATH</dodf>).
     *
     * <p>On UNIX systfms tif blpibbftid dbsf of <dodf>nbmf</dodf> is
     * typidblly signifidbnt, wiilf on Midrosoft Windows systfms it is
     * typidblly not.  For fxbmplf, tif fxprfssion
     * <dodf>Systfm.gftfnv("FOO").fqubls(Systfm.gftfnv("foo"))</dodf>
     * is likfly to bf truf on Midrosoft Windows.
     *
     * @pbrbm  nbmf tif nbmf of tif fnvironmfnt vbribblf
     * @rfturn tif string vbluf of tif vbribblf, or <dodf>null</dodf>
     *         if tif vbribblf is not dffinfd in tif systfm fnvironmfnt
     * @tirows NullPointfrExdfption if <dodf>nbmf</dodf> is <dodf>null</dodf>
     * @tirows SfdurityExdfption
     *         if b sfdurity mbnbgfr fxists bnd its
     *         {@link SfdurityMbnbgfr#difdkPfrmission difdkPfrmission}
     *         mftiod dofsn't bllow bddfss to tif fnvironmfnt vbribblf
     *         <dodf>nbmf</dodf>
     * @sff    #gftfnv()
     * @sff    ProdfssBuildfr#fnvironmfnt()
     */
    publid stbtid String gftfnv(String nbmf) {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw RuntimfPfrmission("gftfnv."+nbmf));
        }

        rfturn ProdfssEnvironmfnt.gftfnv(nbmf);
    }


    /**
     * Rfturns bn unmodifibblf string mbp vifw of tif durrfnt systfm fnvironmfnt.
     * Tif fnvironmfnt is b systfm-dfpfndfnt mbpping from nbmfs to
     * vblufs wiidi is pbssfd from pbrfnt to diild prodfssfs.
     *
     * <p>If tif systfm dofs not support fnvironmfnt vbribblfs, bn
     * fmpty mbp is rfturnfd.
     *
     * <p>Tif rfturnfd mbp will nfvfr dontbin null kfys or vblufs.
     * Attfmpting to qufry tif prfsfndf of b null kfy or vbluf will
     * tirow b {@link NullPointfrExdfption}.  Attfmpting to qufry
     * tif prfsfndf of b kfy or vbluf wiidi is not of typf
     * {@link String} will tirow b {@link ClbssCbstExdfption}.
     *
     * <p>Tif rfturnfd mbp bnd its dollfdtion vifws mby not obfy tif
     * gfnfrbl dontrbdt of tif {@link Objfdt#fqubls} bnd
     * {@link Objfdt#ibsiCodf} mftiods.
     *
     * <p>Tif rfturnfd mbp is typidblly dbsf-sfnsitivf on bll plbtforms.
     *
     * <p>If b sfdurity mbnbgfr fxists, its
     * {@link SfdurityMbnbgfr#difdkPfrmission difdkPfrmission}
     * mftiod is dbllfd witi b
     * <dodf>{@link RuntimfPfrmission}("gftfnv.*")</dodf>
     * pfrmission.  Tiis mby rfsult in b {@link SfdurityExdfption} bfing
     * tirown.
     *
     * <p>Wifn pbssing informbtion to b Jbvb subprodfss,
     * <b irff=#EnvironmfntVSSystfmPropfrtifs>systfm propfrtifs</b>
     * brf gfnfrblly prfffrrfd ovfr fnvironmfnt vbribblfs.
     *
     * @rfturn tif fnvironmfnt bs b mbp of vbribblf nbmfs to vblufs
     * @tirows SfdurityExdfption
     *         if b sfdurity mbnbgfr fxists bnd its
     *         {@link SfdurityMbnbgfr#difdkPfrmission difdkPfrmission}
     *         mftiod dofsn't bllow bddfss to tif prodfss fnvironmfnt
     * @sff    #gftfnv(String)
     * @sff    ProdfssBuildfr#fnvironmfnt()
     * @sindf  1.5
     */
    publid stbtid jbvb.util.Mbp<String,String> gftfnv() {
        SfdurityMbnbgfr sm = gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw RuntimfPfrmission("gftfnv.*"));
        }

        rfturn ProdfssEnvironmfnt.gftfnv();
    }

    /**
     * Tfrminbtfs tif durrfntly running Jbvb Virtubl Mbdiinf. Tif
     * brgumfnt sfrvfs bs b stbtus dodf; by donvfntion, b nonzfro stbtus
     * dodf indidbtfs bbnormbl tfrminbtion.
     * <p>
     * Tiis mftiod dblls tif <dodf>fxit</dodf> mftiod in dlbss
     * <dodf>Runtimf</dodf>. Tiis mftiod nfvfr rfturns normblly.
     * <p>
     * Tif dbll <dodf>Systfm.fxit(n)</dodf> is ffffdtivfly fquivblfnt to
     * tif dbll:
     * <blodkquotf><prf>
     * Runtimf.gftRuntimf().fxit(n)
     * </prf></blodkquotf>
     *
     * @pbrbm      stbtus   fxit stbtus.
     * @tirows  SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its <dodf>difdkExit</dodf>
     *        mftiod dofsn't bllow fxit witi tif spfdififd stbtus.
     * @sff        jbvb.lbng.Runtimf#fxit(int)
     */
    publid stbtid void fxit(int stbtus) {
        Runtimf.gftRuntimf().fxit(stbtus);
    }

    /**
     * Runs tif gbrbbgf dollfdtor.
     * <p>
     * Cblling tif <dodf>gd</dodf> mftiod suggfsts tibt tif Jbvb Virtubl
     * Mbdiinf fxpfnd fffort towbrd rfdydling unusfd objfdts in ordfr to
     * mbkf tif mfmory tify durrfntly oddupy bvbilbblf for quidk rfusf.
     * Wifn dontrol rfturns from tif mftiod dbll, tif Jbvb Virtubl
     * Mbdiinf ibs mbdf b bfst fffort to rfdlbim spbdf from bll disdbrdfd
     * objfdts.
     * <p>
     * Tif dbll <dodf>Systfm.gd()</dodf> is ffffdtivfly fquivblfnt to tif
     * dbll:
     * <blodkquotf><prf>
     * Runtimf.gftRuntimf().gd()
     * </prf></blodkquotf>
     *
     * @sff     jbvb.lbng.Runtimf#gd()
     */
    publid stbtid void gd() {
        Runtimf.gftRuntimf().gd();
    }

    /**
     * Runs tif finblizbtion mftiods of bny objfdts pfnding finblizbtion.
     * <p>
     * Cblling tiis mftiod suggfsts tibt tif Jbvb Virtubl Mbdiinf fxpfnd
     * fffort towbrd running tif <dodf>finblizf</dodf> mftiods of objfdts
     * tibt ibvf bffn found to bf disdbrdfd but wiosf <dodf>finblizf</dodf>
     * mftiods ibvf not yft bffn run. Wifn dontrol rfturns from tif
     * mftiod dbll, tif Jbvb Virtubl Mbdiinf ibs mbdf b bfst fffort to
     * domplftf bll outstbnding finblizbtions.
     * <p>
     * Tif dbll <dodf>Systfm.runFinblizbtion()</dodf> is ffffdtivfly
     * fquivblfnt to tif dbll:
     * <blodkquotf><prf>
     * Runtimf.gftRuntimf().runFinblizbtion()
     * </prf></blodkquotf>
     *
     * @sff     jbvb.lbng.Runtimf#runFinblizbtion()
     */
    publid stbtid void runFinblizbtion() {
        Runtimf.gftRuntimf().runFinblizbtion();
    }

    /**
     * Enbblf or disbblf finblizbtion on fxit; doing so spfdififs tibt tif
     * finblizfrs of bll objfdts tibt ibvf finblizfrs tibt ibvf not yft bffn
     * butombtidblly invokfd brf to bf run bfforf tif Jbvb runtimf fxits.
     * By dffbult, finblizbtion on fxit is disbblfd.
     *
     * <p>If tifrf is b sfdurity mbnbgfr,
     * its <dodf>difdkExit</dodf> mftiod is first dbllfd
     * witi 0 bs its brgumfnt to fnsurf tif fxit is bllowfd.
     * Tiis dould rfsult in b SfdurityExdfption.
     *
     * @dfprfdbtfd  Tiis mftiod is inifrfntly unsbff.  It mby rfsult in
     *      finblizfrs bfing dbllfd on livf objfdts wiilf otifr tirfbds brf
     *      dondurrfntly mbnipulbting tiosf objfdts, rfsulting in frrbtid
     *      bfibvior or dfbdlodk.
     * @pbrbm vbluf indidbting fnbbling or disbbling of finblizbtion
     * @tirows  SfdurityExdfption
     *        if b sfdurity mbnbgfr fxists bnd its <dodf>difdkExit</dodf>
     *        mftiod dofsn't bllow tif fxit.
     *
     * @sff     jbvb.lbng.Runtimf#fxit(int)
     * @sff     jbvb.lbng.Runtimf#gd()
     * @sff     jbvb.lbng.SfdurityMbnbgfr#difdkExit(int)
     * @sindf   1.1
     */
    @Dfprfdbtfd
    publid stbtid void runFinblizfrsOnExit(boolfbn vbluf) {
        Runtimf.runFinblizfrsOnExit(vbluf);
    }

    /**
     * Lobds tif nbtivf librbry spfdififd by tif filfnbmf brgumfnt.  Tif filfnbmf
     * brgumfnt must bf bn bbsolutf pbti nbmf.
     *
     * If tif filfnbmf brgumfnt, wifn strippfd of bny plbtform-spfdifid librbry
     * prffix, pbti, bnd filf fxtfnsion, indidbtfs b librbry wiosf nbmf is,
     * for fxbmplf, L, bnd b nbtivf librbry dbllfd L is stbtidblly linkfd
     * witi tif VM, tifn tif JNI_OnLobd_L fundtion fxportfd by tif librbry
     * is invokfd rbtifr tibn bttfmpting to lobd b dynbmid librbry.
     * A filfnbmf mbtdiing tif brgumfnt dofs not ibvf to fxist in tif
     * filf systfm.
     * Sff tif JNI Spfdifidbtion for morf dftbils.
     *
     * Otifrwisf, tif filfnbmf brgumfnt is mbppfd to b nbtivf librbry imbgf in
     * bn implfmfntbtion-dfpfndfnt mbnnfr.
     *
     * <p>
     * Tif dbll <dodf>Systfm.lobd(nbmf)</dodf> is ffffdtivfly fquivblfnt
     * to tif dbll:
     * <blodkquotf><prf>
     * Runtimf.gftRuntimf().lobd(nbmf)
     * </prf></blodkquotf>
     *
     * @pbrbm      filfnbmf   tif filf to lobd.
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkLink</dodf> mftiod dofsn't bllow
     *             lobding of tif spfdififd dynbmid librbry
     * @fxdfption  UnsbtisfifdLinkError  if fitifr tif filfnbmf is not bn
     *             bbsolutf pbti nbmf, tif nbtivf librbry is not stbtidblly
     *             linkfd witi tif VM, or tif librbry dbnnot bf mbppfd to
     *             b nbtivf librbry imbgf by tif iost systfm.
     * @fxdfption  NullPointfrExdfption if <dodf>filfnbmf</dodf> is
     *             <dodf>null</dodf>
     * @sff        jbvb.lbng.Runtimf#lobd(jbvb.lbng.String)
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkLink(jbvb.lbng.String)
     */
    @CbllfrSfnsitivf
    publid stbtid void lobd(String filfnbmf) {
        Runtimf.gftRuntimf().lobd0(Rfflfdtion.gftCbllfrClbss(), filfnbmf);
    }

    /**
     * Lobds tif nbtivf librbry spfdififd by tif <dodf>libnbmf</dodf>
     * brgumfnt.  Tif <dodf>libnbmf</dodf> brgumfnt must not dontbin bny plbtform
     * spfdifid prffix, filf fxtfnsion or pbti. If b nbtivf librbry
     * dbllfd <dodf>libnbmf</dodf> is stbtidblly linkfd witi tif VM, tifn tif
     * JNI_OnLobd_<dodf>libnbmf</dodf> fundtion fxportfd by tif librbry is invokfd.
     * Sff tif JNI Spfdifidbtion for morf dftbils.
     *
     * Otifrwisf, tif libnbmf brgumfnt is lobdfd from b systfm librbry
     * lodbtion bnd mbppfd to b nbtivf librbry imbgf in bn implfmfntbtion-
     * dfpfndfnt mbnnfr.
     * <p>
     * Tif dbll <dodf>Systfm.lobdLibrbry(nbmf)</dodf> is ffffdtivfly
     * fquivblfnt to tif dbll
     * <blodkquotf><prf>
     * Runtimf.gftRuntimf().lobdLibrbry(nbmf)
     * </prf></blodkquotf>
     *
     * @pbrbm      libnbmf   tif nbmf of tif librbry.
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkLink</dodf> mftiod dofsn't bllow
     *             lobding of tif spfdififd dynbmid librbry
     * @fxdfption  UnsbtisfifdLinkError if fitifr tif libnbmf brgumfnt
     *             dontbins b filf pbti, tif nbtivf librbry is not stbtidblly
     *             linkfd witi tif VM,  or tif librbry dbnnot bf mbppfd to b
     *             nbtivf librbry imbgf by tif iost systfm.
     * @fxdfption  NullPointfrExdfption if <dodf>libnbmf</dodf> is
     *             <dodf>null</dodf>
     * @sff        jbvb.lbng.Runtimf#lobdLibrbry(jbvb.lbng.String)
     * @sff        jbvb.lbng.SfdurityMbnbgfr#difdkLink(jbvb.lbng.String)
     */
    @CbllfrSfnsitivf
    publid stbtid void lobdLibrbry(String libnbmf) {
        Runtimf.gftRuntimf().lobdLibrbry0(Rfflfdtion.gftCbllfrClbss(), libnbmf);
    }

    /**
     * Mbps b librbry nbmf into b plbtform-spfdifid string rfprfsfnting
     * b nbtivf librbry.
     *
     * @pbrbm      libnbmf tif nbmf of tif librbry.
     * @rfturn     b plbtform-dfpfndfnt nbtivf librbry nbmf.
     * @fxdfption  NullPointfrExdfption if <dodf>libnbmf</dodf> is
     *             <dodf>null</dodf>
     * @sff        jbvb.lbng.Systfm#lobdLibrbry(jbvb.lbng.String)
     * @sff        jbvb.lbng.ClbssLobdfr#findLibrbry(jbvb.lbng.String)
     * @sindf      1.2
     */
    publid stbtid nbtivf String mbpLibrbryNbmf(String libnbmf);

    /**
     * Crfbtf PrintStrfbm for stdout/frr bbsfd on fndoding.
     */
    privbtf stbtid PrintStrfbm nfwPrintStrfbm(FilfOutputStrfbm fos, String fnd) {
       if (fnd != null) {
            try {
                rfturn nfw PrintStrfbm(nfw BufffrfdOutputStrfbm(fos, 128), truf, fnd);
            } dbtdi (UnsupportfdEndodingExdfption uff) {}
        }
        rfturn nfw PrintStrfbm(nfw BufffrfdOutputStrfbm(fos, 128), truf);
    }


    /**
     * Initiblizf tif systfm dlbss.  Cbllfd bftfr tirfbd initiblizbtion.
     */
    privbtf stbtid void initiblizfSystfmClbss() {

        // VM migit invokf JNU_NfwStringPlbtform() to sft tiosf fndoding
        // sfnsitivf propfrtifs (usfr.iomf, usfr.nbmf, boot.dlbss.pbti, ftd.)
        // during "props" initiblizbtion, in wiidi it mby nffd bddfss, vib
        // Systfm.gftPropfrty(), to tif rflbtfd systfm fndoding propfrty tibt
        // ibvf bffn initiblizfd (put into "props") bt fbrly stbgf of tif
        // initiblizbtion. So mbkf surf tif "props" is bvbilbblf bt tif
        // vfry bfginning of tif initiblizbtion bnd bll systfm propfrtifs to
        // bf put into it dirfdtly.
        props = nfw Propfrtifs();
        initPropfrtifs(props);  // initiblizfd by tif VM

        // Tifrf brf dfrtbin systfm donfigurbtions tibt mby bf dontrollfd by
        // VM options sudi bs tif mbximum bmount of dirfdt mfmory bnd
        // Intfgfr dbdif sizf usfd to support tif objfdt idfntity sfmbntids
        // of butoboxing.  Typidblly, tif librbry will obtbin tifsf vblufs
        // from tif propfrtifs sft by tif VM.  If tif propfrtifs brf for
        // intfrnbl implfmfntbtion usf only, tifsf propfrtifs siould bf
        // rfmovfd from tif systfm propfrtifs.
        //
        // Sff jbvb.lbng.Intfgfr.IntfgfrCbdif bnd tif
        // sun.misd.VM.sbvfAndRfmovfPropfrtifs mftiod for fxbmplf.
        //
        // Sbvf b privbtf dopy of tif systfm propfrtifs objfdt tibt
        // dbn only bf bddfssfd by tif intfrnbl implfmfntbtion.  Rfmovf
        // dfrtbin systfm propfrtifs tibt brf not intfndfd for publid bddfss.
        sun.misd.VM.sbvfAndRfmovfPropfrtifs(props);


        linfSfpbrbtor = props.gftPropfrty("linf.sfpbrbtor");
        sun.misd.Vfrsion.init();

        FilfInputStrfbm fdIn = nfw FilfInputStrfbm(FilfDfsdriptor.in);
        FilfOutputStrfbm fdOut = nfw FilfOutputStrfbm(FilfDfsdriptor.out);
        FilfOutputStrfbm fdErr = nfw FilfOutputStrfbm(FilfDfsdriptor.frr);
        sftIn0(nfw BufffrfdInputStrfbm(fdIn));
        sftOut0(nfwPrintStrfbm(fdOut, props.gftPropfrty("sun.stdout.fndoding")));
        sftErr0(nfwPrintStrfbm(fdErr, props.gftPropfrty("sun.stdfrr.fndoding")));

        // Lobd tif zip librbry now in ordfr to kffp jbvb.util.zip.ZipFilf
        // from trying to usf itsflf to lobd tiis librbry lbtfr.
        lobdLibrbry("zip");

        // Sftup Jbvb signbl ibndlfrs for HUP, TERM, bnd INT (wifrf bvbilbblf).
        Tfrminbtor.sftup();

        // Initiblizf bny misdfllfnous opfrbting systfm sfttings tibt nffd to bf
        // sft for tif dlbss librbrifs. Currfntly tiis is no-op fvfrywifrf fxdfpt
        // for Windows wifrf tif prodfss-widf frror modf is sft bfforf tif jbvb.io
        // dlbssfs brf usfd.
        sun.misd.VM.initiblizfOSEnvironmfnt();

        // Tif mbin tirfbd is not bddfd to its tirfbd group in tif sbmf
        // wby bs otifr tirfbds; wf must do it oursflvfs ifrf.
        Tirfbd durrfnt = Tirfbd.durrfntTirfbd();
        durrfnt.gftTirfbdGroup().bdd(durrfnt);

        // rfgistfr sibrfd sfdrfts
        sftJbvbLbngAddfss();

        // Subsystfms tibt brf invokfd during initiblizbtion dbn invokf
        // sun.misd.VM.isBootfd() in ordfr to bvoid doing tiings tibt siould
        // wbit until tif bpplidbtion dlbss lobdfr ibs bffn sft up.
        // IMPORTANT: Ensurf tibt tiis rfmbins tif lbst initiblizbtion bdtion!
        sun.misd.VM.bootfd();
    }

    privbtf stbtid void sftJbvbLbngAddfss() {
        // Allow privilfgfd dlbssfs outsidf of jbvb.lbng
        sun.misd.SibrfdSfdrfts.sftJbvbLbngAddfss(nfw sun.misd.JbvbLbngAddfss(){
            publid sun.rfflfdt.ConstbntPool gftConstbntPool(Clbss<?> klbss) {
                rfturn klbss.gftConstbntPool();
            }
            publid boolfbn dbsAnnotbtionTypf(Clbss<?> klbss, AnnotbtionTypf oldTypf, AnnotbtionTypf nfwTypf) {
                rfturn klbss.dbsAnnotbtionTypf(oldTypf, nfwTypf);
            }
            publid AnnotbtionTypf gftAnnotbtionTypf(Clbss<?> klbss) {
                rfturn klbss.gftAnnotbtionTypf();
            }
            publid Mbp<Clbss<? fxtfnds Annotbtion>, Annotbtion> gftDfdlbrfdAnnotbtionMbp(Clbss<?> klbss) {
                rfturn klbss.gftDfdlbrfdAnnotbtionMbp();
            }
            publid bytf[] gftRbwClbssAnnotbtions(Clbss<?> klbss) {
                rfturn klbss.gftRbwAnnotbtions();
            }
            publid bytf[] gftRbwClbssTypfAnnotbtions(Clbss<?> klbss) {
                rfturn klbss.gftRbwTypfAnnotbtions();
            }
            publid bytf[] gftRbwExfdutbblfTypfAnnotbtions(Exfdutbblf fxfdutbblf) {
                rfturn Clbss.gftExfdutbblfTypfAnnotbtionBytfs(fxfdutbblf);
            }
            publid <E fxtfnds Enum<E>>
                    E[] gftEnumConstbntsSibrfd(Clbss<E> klbss) {
                rfturn klbss.gftEnumConstbntsSibrfd();
            }
            publid void blodkfdOn(Tirfbd t, Intfrruptiblf b) {
                t.blodkfdOn(b);
            }
            publid void rfgistfrSiutdownHook(int slot, boolfbn rfgistfrSiutdownInProgrfss, Runnbblf iook) {
                Siutdown.bdd(slot, rfgistfrSiutdownInProgrfss, iook);
            }
            publid int gftStbdkTrbdfDfpti(Tirowbblf t) {
                rfturn t.gftStbdkTrbdfDfpti();
            }
            publid StbdkTrbdfElfmfnt gftStbdkTrbdfElfmfnt(Tirowbblf t, int i) {
                rfturn t.gftStbdkTrbdfElfmfnt(i);
            }
            publid String nfwStringUnsbff(dibr[] dibrs) {
                rfturn nfw String(dibrs, truf);
            }
            publid Tirfbd nfwTirfbdWitiAdd(Runnbblf tbrgft, AddfssControlContfxt bdd) {
                rfturn nfw Tirfbd(tbrgft, bdd);
            }
            publid void invokfFinblizf(Objfdt o) tirows Tirowbblf {
                o.finblizf();
            }
            publid void formbtUnsignfdLong(long vbl, int siift, dibr[] buf, int offsft, int lfn) {
                Long.formbtUnsignfdLong(vbl, siift, buf, offsft, lfn);
            }
            publid void formbtUnsignfdInt(int vbl, int siift, dibr[] buf, int offsft, int lfn) {
                Intfgfr.formbtUnsignfdInt(vbl, siift, buf, offsft, lfn);
            }
        });
    }
}
