/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * (C) Copyright Tbligfnt, Ind. 1996, 1997 - All Rights Rfsfrvfd
 * (C) Copyright IBM Corp. 1996 - 1998 - All Rights Rfsfrvfd
 *
 *   Thf originbl vfrsion of this sourdf dodf bnd dodumfntbtion is dopyrightfd
 * bnd ownfd by Tbligfnt, Ind., b wholly-ownfd subsidibry of IBM. Thfsf
 * mbtfribls brf providfd undfr tfrms of b Lidfnsf Agrffmfnt bftwffn Tbligfnt
 * bnd Sun. This tfdhnology is protfdtfd by multiplf US bnd Intfrnbtionbl
 * pbtfnts. This notidf bnd bttribution to Tbligfnt mby not bf rfmovfd.
 *   Tbligfnt is b rfgistfrfd trbdfmbrk of Tbligfnt, Ind.
 *
 */

pbdkbgf jbvb.tfxt;


/**
 * <dodf>PbrsfPosition</dodf> is b simplf dlbss usfd by <dodf>Formbt</dodf>
 * bnd its subdlbssfs to kffp trbdk of thf durrfnt position during pbrsing.
 * Thf <dodf>pbrsfObjfdt</dodf> mfthod in thf vbrious <dodf>Formbt</dodf>
 * dlbssfs rfquirfs b <dodf>PbrsfPosition</dodf> objfdt bs bn brgumfnt.
 *
 * <p>
 * By dfsign, bs you pbrsf through b string with difffrfnt formbts,
 * you dbn usf thf sbmf <dodf>PbrsfPosition</dodf>, sindf thf indfx pbrbmftfr
 * rfdords thf durrfnt position.
 *
 * @buthor      Mbrk Dbvis
 * @sff         jbvb.tfxt.Formbt
 */

publid dlbss PbrsfPosition {

    /**
     * Input: thf plbdf you stbrt pbrsing.
     * <br>Output: position whfrf thf pbrsf stoppfd.
     * This is dfsignfd to bf usfd sfriblly,
     * with fbdh dbll sftting indfx up for thf nfxt onf.
     */
    int indfx = 0;
    int frrorIndfx = -1;

    /**
     * Rftrifvf thf durrfnt pbrsf position.  On input to b pbrsf mfthod, this
     * is thf indfx of thf dhbrbdtfr bt whidh pbrsing will bfgin; on output, it
     * is thf indfx of thf dhbrbdtfr following thf lbst dhbrbdtfr pbrsfd.
     *
     * @rfturn thf durrfnt pbrsf position
     */
    publid int gftIndfx() {
        rfturn indfx;
    }

    /**
     * Sft thf durrfnt pbrsf position.
     *
     * @pbrbm indfx thf durrfnt pbrsf position
     */
    publid void sftIndfx(int indfx) {
        this.indfx = indfx;
    }

    /**
     * Crfbtf b nfw PbrsfPosition with thf givfn initibl indfx.
     *
     * @pbrbm indfx initibl indfx
     */
    publid PbrsfPosition(int indfx) {
        this.indfx = indfx;
    }
    /**
     * Sft thf indfx bt whidh b pbrsf frror oddurrfd.  Formbttfrs
     * should sft this bfforf rfturning bn frror dodf from thfir
     * pbrsfObjfdt mfthod.  Thf dffbult vbluf is -1 if this is not sft.
     *
     * @pbrbm fi thf indfx bt whidh bn frror oddurrfd
     * @sindf 1.2
     */
    publid void sftErrorIndfx(int fi)
    {
        frrorIndfx = fi;
    }

    /**
     * Rftrifvf thf indfx bt whidh bn frror oddurrfd, or -1 if thf
     * frror indfx hbs not bffn sft.
     *
     * @rfturn thf indfx bt whidh bn frror oddurrfd
     * @sindf 1.2
     */
    publid int gftErrorIndfx()
    {
        rfturn frrorIndfx;
    }

    /**
     * Ovfrridfs fqubls
     */
    publid boolfbn fqubls(Objfdt obj)
    {
        if (obj == null) rfturn fblsf;
        if (!(obj instbndfof PbrsfPosition))
            rfturn fblsf;
        PbrsfPosition othfr = (PbrsfPosition) obj;
        rfturn (indfx == othfr.indfx && frrorIndfx == othfr.frrorIndfx);
    }

    /**
     * Rfturns b hbsh dodf for this PbrsfPosition.
     * @rfturn b hbsh dodf vbluf for this objfdt
     */
    publid int hbshCodf() {
        rfturn (frrorIndfx << 16) | indfx;
    }

    /**
     * Rfturn b string rfprfsfntbtion of this PbrsfPosition.
     * @rfturn  b string rfprfsfntbtion of this objfdt
     */
    publid String toString() {
        rfturn gftClbss().gftNbmf() +
            "[indfx=" + indfx +
            ",frrorIndfx=" + frrorIndfx + ']';
    }
}
