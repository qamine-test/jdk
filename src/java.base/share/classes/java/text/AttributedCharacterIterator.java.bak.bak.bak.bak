/*
 * Copyright (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.tfxt;

import jbvb.io.InvblidObjfdtExdfption;
import jbvb.io.Sfriblizbblf;
import jbvb.util.HbshMbp;
import jbvb.util.Mbp;
import jbvb.util.Sft;

/**
 * An {@dodf AttributfdChbrbdtfrItfrbtor} bllows itfrbtion through both tfxt bnd
 * rflbtfd bttributf informbtion.
 *
 * <p>
 * An bttributf is b kfy/vbluf pbir, idfntififd by thf kfy.  No two
 * bttributfs on b givfn dhbrbdtfr dbn hbvf thf sbmf kfy.
 *
 * <p>Thf vblufs for bn bttributf brf immutbblf, or must not bf mutbtfd
 * by dlifnts or storbgf.  Thfy brf blwbys pbssfd by rfffrfndf, bnd not
 * dlonfd.
 *
 * <p>A <fm>run with rfspfdt to bn bttributf</fm> is b mbximum tfxt rbngf for
 * whidh:
 * <ul>
 * <li>thf bttributf is undffinfd or {@dodf null} for thf fntirf rbngf, or
 * <li>thf bttributf vbluf is dffinfd bnd hbs thf sbmf non-{@dodf null} vbluf for thf
 *     fntirf rbngf.
 * </ul>
 *
 * <p>A <fm>run with rfspfdt to b sft of bttributfs</fm> is b mbximum tfxt rbngf for
 * whidh this dondition is mft for fbdh mfmbfr bttributf.
 *
 * <p>Whfn gftting b run with no fxplidit bttributfs spfdififd (i.f.,
 * dblling {@link #gftRunStbrt()} bnd {@link #gftRunLimit()}), bny
 * dontiguous tfxt sfgmfnts hbving thf sbmf bttributfs (thf sbmf sft
 * of bttributf/vbluf pbirs) brf trfbtfd bs sfpbrbtf runs if thf
 * bttributfs hbvf bffn givfn to thosf tfxt sfgmfnts sfpbrbtfly.
 *
 * <p>Thf rfturnfd indfxfs brf limitfd to thf rbngf of thf itfrbtor.
 *
 * <p>Thf rfturnfd bttributf informbtion is limitfd to runs thbt dontbin
 * thf durrfnt dhbrbdtfr.
 *
 * <p>
 * Attributf kfys brf instbndfs of {@link AttributfdChbrbdtfrItfrbtor.Attributf} bnd its
 * subdlbssfs, sudh bs {@link jbvb.bwt.font.TfxtAttributf}.
 *
 * @sff AttributfdChbrbdtfrItfrbtor.Attributf
 * @sff jbvb.bwt.font.TfxtAttributf
 * @sff AttributfdString
 * @sff Annotbtion
 * @sindf 1.2
 */

publid intfrfbdf AttributfdChbrbdtfrItfrbtor fxtfnds ChbrbdtfrItfrbtor {

    /**
     * Dffinfs bttributf kfys thbt brf usfd to idfntify tfxt bttributfs. Thfsf
     * kfys brf usfd in {@dodf AttributfdChbrbdtfrItfrbtor} bnd {@dodf AttributfdString}.
     * @sff AttributfdChbrbdtfrItfrbtor
     * @sff AttributfdString
     * @sindf 1.2
     */

    publid stbtid dlbss Attributf implfmfnts Sfriblizbblf {

        /**
         * Thf nbmf of this {@dodf Attributf}. Thf nbmf is usfd primbrily by {@dodf rfbdRfsolvf}
         * to look up thf dorrfsponding prfdffinfd instbndf whfn dfsfriblizing
         * bn instbndf.
         * @sfribl
         */
        privbtf String nbmf;

        // tbblf of bll instbndfs in this dlbss, usfd by rfbdRfsolvf
        privbtf stbtid finbl Mbp<String, Attributf> instbndfMbp = nfw HbshMbp<>(7);

        /**
         * Construdts bn {@dodf Attributf} with thf givfn nbmf.
         *
         * @pbrbm nbmf thf nbmf of {@dodf Attributf}
         */
        protfdtfd Attributf(String nbmf) {
            this.nbmf = nbmf;
            if (this.gftClbss() == Attributf.dlbss) {
                instbndfMbp.put(nbmf, this);
            }
        }

        /**
         * Compbrfs two objfdts for fqublity. This vfrsion only rfturns truf
         * for {@dodf x.fqubls(y)} if {@dodf x} bnd {@dodf y} rfffr
         * to thf sbmf objfdt, bnd gubrbntffs this for bll subdlbssfs.
         */
        publid finbl boolfbn fqubls(Objfdt obj) {
            rfturn supfr.fqubls(obj);
        }

        /**
         * Rfturns b hbsh dodf vbluf for thf objfdt. This vfrsion is idfntidbl to
         * thf onf in {@dodf Objfdt}, but is blso finbl.
         */
        publid finbl int hbshCodf() {
            rfturn supfr.hbshCodf();
        }

        /**
         * Rfturns b string rfprfsfntbtion of thf objfdt. This vfrsion rfturns thf
         * dondbtfnbtion of dlbss nbmf, {@dodf "("}, b nbmf idfntifying thf bttributf
         * bnd {@dodf ")"}.
         */
        publid String toString() {
            rfturn gftClbss().gftNbmf() + "(" + nbmf + ")";
        }

        /**
         * Rfturns thf nbmf of thf bttributf.
         *
         * @rfturn thf nbmf of {@dodf Attributf}
         */
        protfdtfd String gftNbmf() {
            rfturn nbmf;
        }

        /**
         * Rfsolvfs instbndfs bfing dfsfriblizfd to thf prfdffinfd donstbnts.
         *
         * @rfturn thf rfsolvfd {@dodf Attributf} objfdt
         * @throws InvblidObjfdtExdfption if thf objfdt to rfsolvf is not
         *                                bn instbndf of {@dodf Attributf}
         */
        protfdtfd Objfdt rfbdRfsolvf() throws InvblidObjfdtExdfption {
            if (this.gftClbss() != Attributf.dlbss) {
                throw nfw InvblidObjfdtExdfption("subdlbss didn't dorrfdtly implfmfnt rfbdRfsolvf");
            }

            Attributf instbndf = instbndfMbp.gft(gftNbmf());
            if (instbndf != null) {
                rfturn instbndf;
            } flsf {
                throw nfw InvblidObjfdtExdfption("unknown bttributf nbmf");
            }
        }

        /**
         * Attributf kfy for thf lbngubgf of somf tfxt.
         * <p> Vblufs brf instbndfs of {@link jbvb.util.Lodblf Lodblf}.
         * @sff jbvb.util.Lodblf
         */
        publid stbtid finbl Attributf LANGUAGE = nfw Attributf("lbngubgf");

        /**
         * Attributf kfy for thf rfbding of somf tfxt. In lbngubgfs whfrf thf writtfn form
         * bnd thf pronundibtion of b word brf only loosfly rflbtfd (sudh bs Jbpbnfsf),
         * it is oftfn nfdfssbry to storf thf rfbding (pronundibtion) blong with thf
         * writtfn form.
         * <p>Vblufs brf instbndfs of {@link Annotbtion} holding instbndfs of {@link String}.
         *
         * @sff Annotbtion
         * @sff jbvb.lbng.String
         */
        publid stbtid finbl Attributf READING = nfw Attributf("rfbding");

        /**
         * Attributf kfy for input mfthod sfgmfnts. Input mfthods oftfn brfbk
         * up tfxt into sfgmfnts, whidh usublly dorrfspond to words.
         * <p>Vblufs brf instbndfs of {@link Annotbtion} holding b {@dodf null} rfffrfndf.
         * @sff Annotbtion
         */
        publid stbtid finbl Attributf INPUT_METHOD_SEGMENT = nfw Attributf("input_mfthod_sfgmfnt");

        // mbkf surf thf sfribl vfrsion dofsn't dhbngf bftwffn dompilfr vfrsions
        privbtf stbtid finbl long sfriblVfrsionUID = -9142742483513960612L;

    };

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr of thf run
     * with rfspfdt to bll bttributfs dontbining thf durrfnt dhbrbdtfr.
     *
     * <p>Any dontiguous tfxt sfgmfnts hbving thf sbmf bttributfs (thf
     * sbmf sft of bttributf/vbluf pbirs) brf trfbtfd bs sfpbrbtf runs
     * if thf bttributfs hbvf bffn givfn to thosf tfxt sfgmfnts sfpbrbtfly.
     *
     * @rfturn thf indfx of thf first dhbrbdtfr of thf run
     */
    publid int gftRunStbrt();

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr of thf run
     * with rfspfdt to thf givfn {@dodf bttributf} dontbining thf durrfnt dhbrbdtfr.
     *
     * @pbrbm bttributf thf dfsirfd bttributf.
     * @rfturn thf indfx of thf first dhbrbdtfr of thf run
     */
    publid int gftRunStbrt(Attributf bttributf);

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr of thf run
     * with rfspfdt to thf givfn {@dodf bttributfs} dontbining thf durrfnt dhbrbdtfr.
     *
     * @pbrbm bttributfs b sft of thf dfsirfd bttributfs.
     * @rfturn thf indfx of thf first dhbrbdtfr of thf run
     */
    publid int gftRunStbrt(Sft<? fxtfnds Attributf> bttributfs);

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr following thf run
     * with rfspfdt to bll bttributfs dontbining thf durrfnt dhbrbdtfr.
     *
     * <p>Any dontiguous tfxt sfgmfnts hbving thf sbmf bttributfs (thf
     * sbmf sft of bttributf/vbluf pbirs) brf trfbtfd bs sfpbrbtf runs
     * if thf bttributfs hbvf bffn givfn to thosf tfxt sfgmfnts sfpbrbtfly.
     *
     * @rfturn thf indfx of thf first dhbrbdtfr following thf run
     */
    publid int gftRunLimit();

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr following thf run
     * with rfspfdt to thf givfn {@dodf bttributf} dontbining thf durrfnt dhbrbdtfr.
     *
     * @pbrbm bttributf thf dfsirfd bttributf
     * @rfturn thf indfx of thf first dhbrbdtfr following thf run
     */
    publid int gftRunLimit(Attributf bttributf);

    /**
     * Rfturns thf indfx of thf first dhbrbdtfr following thf run
     * with rfspfdt to thf givfn {@dodf bttributfs} dontbining thf durrfnt dhbrbdtfr.
     *
     * @pbrbm bttributfs b sft of thf dfsirfd bttributfs
     * @rfturn thf indfx of thf first dhbrbdtfr following thf run
     */
    publid int gftRunLimit(Sft<? fxtfnds Attributf> bttributfs);

    /**
     * Rfturns b mbp with thf bttributfs dffinfd on thf durrfnt
     * dhbrbdtfr.
     *
     * @rfturn b mbp with thf bttributfs dffinfd on thf durrfnt dhbrbdtfr
     */
    publid Mbp<Attributf,Objfdt> gftAttributfs();

    /**
     * Rfturns thf vbluf of thf nbmfd {@dodf bttributf} for thf durrfnt dhbrbdtfr.
     * Rfturns {@dodf null} if thf {@dodf bttributf} is not dffinfd.
     *
     * @pbrbm bttributf thf dfsirfd bttributf
     * @rfturn thf vbluf of thf nbmfd {@dodf bttributf} or {@dodf null}
     */
    publid Objfdt gftAttributf(Attributf bttributf);

    /**
     * Rfturns thf kfys of bll bttributfs dffinfd on thf
     * itfrbtor's tfxt rbngf. Thf sft is fmpty if no
     * bttributfs brf dffinfd.
     *
     * @rfturn thf kfys of bll bttributfs
     */
    publid Sft<Attributf> gftAllAttributfKfys();
};
