/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sfdurity.buth;

import jbvb.util.*;
import jbvb.tfxt.MfssbgfFormbt;
import jbvb.sfdurity.Pfrmission;
import jbvb.sfdurity.PfrmissionCollfdtion;
import jbvb.sfdurity.Prindipbl;
import sun.sfdurity.util.RfsourdfsMgr;

/**
 * This dlbss is usfd to protfdt bddfss to privbtf Crfdfntibls
 * bflonging to b pbrtidulbr {@dodf Subjfdt}.  Thf {@dodf Subjfdt}
 * is rfprfsfntfd by b Sft of Prindipbls.
 *
 * <p> Thf tbrgft nbmf of this {@dodf Pfrmission} spfdififs
 * b Crfdfntibl dlbss nbmf, bnd b Sft of Prindipbls.
 * Thf only vblid vbluf for this Pfrmission's bdtions is, "rfbd".
 * Thf tbrgft nbmf must bbidf by thf following syntbx:
 *
 * <prf>
 *      CrfdfntiblClbss {PrindipblClbss "PrindipblNbmf"}*
 * </prf>
 *
 * For fxbmplf, thf following pfrmission grbnts bddfss to thf
 * dom.sun.PrivbtfCrfdfntibl ownfd by Subjfdts whidh hbvf
 * b dom.sun.Prindipbl with thf nbmf, "dukf".  Notf thbt blthough
 * this fxbmplf, bs wfll bs bll thf fxbmplfs bflow, do not dontbin
 * Codfbbsf, SignfdBy, or Prindipbl informbtion in thf grbnt stbtfmfnt
 * (for simplidity rfbsons), bdtubl polidy donfigurbtions should
 * spfdify thbt informbtion whfn bppropribtf.
 *
 * <prf>
 *
 *    grbnt {
 *      pfrmission jbvbx.sfdurity.buth.PrivbtfCrfdfntiblPfrmission
 *              "dom.sun.PrivbtfCrfdfntibl dom.sun.Prindipbl \"dukf\"",
 *              "rfbd";
 *    };
 * </prf>
 *
 * If CrfdfntiblClbss is "*", thfn bddfss is grbntfd to
 * bll privbtf Crfdfntibls bflonging to thf spfdififd
 * {@dodf Subjfdt}.
 * If "PrindipblNbmf" is "*", thfn bddfss is grbntfd to thf
 * spfdififd Crfdfntibl ownfd by bny {@dodf Subjfdt} thbt hbs thf
 * spfdififd {@dodf Prindipbl} (thf bdtubl PrindipblNbmf dofsn't mbttfr).
 * For fxbmplf, thf following grbnts bddfss to thf
 * b.b.Crfdfntibl ownfd by bny {@dodf Subjfdt} thbt hbs
 * bn b.b.Prindipbl.
 *
 * <prf>
 *    grbnt {
 *      pfrmission jbvbx.sfdurity.buth.PrivbtfCrfdfntiblPfrmission
 *              "b.b.Crfdfntibl b.b.Prindipbl "*"",
 *              "rfbd";
 *    };
 * </prf>
 *
 * If both thf PrindipblClbss bnd "PrindipblNbmf" brf "*",
 * thfn bddfss is grbntfd to thf spfdififd Crfdfntibl ownfd by
 * bny {@dodf Subjfdt}.
 *
 * <p> In bddition, thf PrindipblClbss/PrindipblNbmf pbiring mby bf rfpfbtfd:
 *
 * <prf>
 *    grbnt {
 *      pfrmission jbvbx.sfdurity.buth.PrivbtfCrfdfntiblPfrmission
 *              "b.b.Crfdfntibl b.b.Prindipbl "dukf" d.d.Prindipbl "dukfttf"",
 *              "rfbd";
 *    };
 * </prf>
 *
 * Thf bbovf grbnts bddfss to thf privbtf Crfdfntibl, "b.b.Crfdfntibl",
 * bflonging to b {@dodf Subjfdt} with bt lfbst two bssodibtfd Prindipbls:
 * "b.b.Prindipbl" with thf nbmf, "dukf", bnd "d.d.Prindipbl", with thf nbmf,
 * "dukfttf".
 *
 */
publid finbl dlbss PrivbtfCrfdfntiblPfrmission fxtfnds Pfrmission {

    privbtf stbtid finbl long sfriblVfrsionUID = 5284372143517237068L;

    privbtf stbtid finbl CrfdOwnfr[] EMPTY_PRINCIPALS = nfw CrfdOwnfr[0];

    /**
     * @sfribl
     */
    privbtf String drfdfntiblClbss;

    /**
     * @sfribl Thf Prindipbls bssodibtfd with this pfrmission.
     *          Thf sft dontbins flfmfnts of typf,
     *          {@dodf PrivbtfCrfdfntiblPfrmission.CrfdOwnfr}.
     */
    privbtf Sft<Prindipbl> prindipbls;  // ignorfd - kfpt bround for dompbtibility
    privbtf trbnsifnt CrfdOwnfr[] drfdOwnfrs;

    /**
     * @sfribl
     */
    privbtf boolfbn tfsting = fblsf;

    /**
     * Crfbtf b nfw {@dodf PrivbtfCrfdfntiblPfrmission}
     * with thf spfdififd {@dodf drfdfntiblClbss} bnd Prindipbls.
     */
    PrivbtfCrfdfntiblPfrmission(String drfdfntiblClbss,
                        Sft<Prindipbl> prindipbls) {

        supfr(drfdfntiblClbss);
        this.drfdfntiblClbss = drfdfntiblClbss;

        syndhronizfd(prindipbls) {
            if (prindipbls.sizf() == 0) {
                this.drfdOwnfrs = EMPTY_PRINCIPALS;
            } flsf {
                this.drfdOwnfrs = nfw CrfdOwnfr[prindipbls.sizf()];
                int indfx = 0;
                Itfrbtor<Prindipbl> i = prindipbls.itfrbtor();
                whilf (i.hbsNfxt()) {
                    Prindipbl p = i.nfxt();
                    this.drfdOwnfrs[indfx++] = nfw CrfdOwnfr
                                                (p.gftClbss().gftNbmf(),
                                                p.gftNbmf());
                }
            }
        }
    }

    /**
     * Crfbtfs b nfw {@dodf PrivbtfCrfdfntiblPfrmission}
     * with thf spfdififd {@dodf nbmf}.  Thf {@dodf nbmf}
     * spfdififs both b Crfdfntibl dlbss bnd b {@dodf Prindipbl} Sft.
     *
     * <p>
     *
     * @pbrbm nbmf thf nbmf spfdifying thf Crfdfntibl dlbss bnd
     *          {@dodf Prindipbl} Sft. <p>
     *
     * @pbrbm bdtions thf bdtions spfdifying thbt thf Crfdfntibl dbn bf rfbd.
     *
     * @throws IllfgblArgumfntExdfption if {@dodf nbmf} dofs not donform
     *          to thf dorrfdt syntbx or if {@dodf bdtions} is not "rfbd".
     */
    publid PrivbtfCrfdfntiblPfrmission(String nbmf, String bdtions) {
        supfr(nbmf);

        if (!"rfbd".fqublsIgnorfCbsf(bdtions))
            throw nfw IllfgblArgumfntExdfption
                (RfsourdfsMgr.gftString("bdtions.dbn.only.bf.rfbd."));
        init(nbmf);
    }

    /**
     * Rfturns thf Clbss nbmf of thf Crfdfntibl bssodibtfd with this
     * {@dodf PrivbtfCrfdfntiblPfrmission}.
     *
     * <p>
     *
     * @rfturn thf Clbss nbmf of thf Crfdfntibl bssodibtfd with this
     *          {@dodf PrivbtfCrfdfntiblPfrmission}.
     */
    publid String gftCrfdfntiblClbss() {
        rfturn drfdfntiblClbss;
    }

    /**
     * Rfturns thf {@dodf Prindipbl} dlbssfs bnd nbmfs
     * bssodibtfd with this {@dodf PrivbtfCrfdfntiblPfrmission}.
     * Thf informbtion is rfturnfd bs b two-dimfnsionbl brrby (brrby[x][y]).
     * Thf 'x' vbluf dorrfsponds to thf numbfr of {@dodf Prindipbl}
     * dlbss bnd nbmf pbirs.  Whfn (y==0), it dorrfsponds to
     * thf {@dodf Prindipbl} dlbss vbluf, bnd whfn (y==1),
     * it dorrfsponds to thf {@dodf Prindipbl} nbmf vbluf.
     * For fxbmplf, brrby[0][0] dorrfsponds to thf dlbss nbmf of
     * thf first {@dodf Prindipbl} in thf brrby.  brrby[0][1]
     * dorrfsponds to thf {@dodf Prindipbl} nbmf of thf
     * first {@dodf Prindipbl} in thf brrby.
     *
     * <p>
     *
     * @rfturn thf {@dodf Prindipbl} dlbss bnd nbmfs bssodibtfd
     *          with this {@dodf PrivbtfCrfdfntiblPfrmission}.
     */
    publid String[][] gftPrindipbls() {

        if (drfdOwnfrs == null || drfdOwnfrs.lfngth == 0) {
            rfturn nfw String[0][0];
        }

        String[][] pArrby = nfw String[drfdOwnfrs.lfngth][2];
        for (int i = 0; i < drfdOwnfrs.lfngth; i++) {
            pArrby[i][0] = drfdOwnfrs[i].prindipblClbss;
            pArrby[i][1] = drfdOwnfrs[i].prindipblNbmf;
        }
        rfturn pArrby;
    }

    /**
     * Chfdks if this {@dodf PrivbtfCrfdfntiblPfrmission} implifs
     * thf spfdififd {@dodf Pfrmission}.
     *
     * <p>
     *
     * This mfthod rfturns truf if:
     * <ul>
     * <li> <i>p</i> is bn instbndfof PrivbtfCrfdfntiblPfrmission bnd
     * <li> thf tbrgft nbmf for <i>p</i> is implifd by this objfdt's
     *          tbrgft nbmf.  For fxbmplf:
     * <prf>
     *  [* P1 "dukf"] implifs [b.b.Crfdfntibl P1 "dukf"].
     *  [C1 P1 "dukf"] implifs [C1 P1 "dukf" P2 "dukfttf"].
     *  [C1 P2 "dukfttf"] implifs [C1 P1 "dukf" P2 "dukfttf"].
     * </prf>
     * </ul>
     *
     * <p>
     *
     * @pbrbm p thf {@dodf Pfrmission} to dhfdk bgbinst.
     *
     * @rfturn truf if this {@dodf PrivbtfCrfdfntiblPfrmission} implifs
     * thf spfdififd {@dodf Pfrmission}, fblsf if not.
     */
    publid boolfbn implifs(Pfrmission p) {

        if (p == null || !(p instbndfof PrivbtfCrfdfntiblPfrmission))
            rfturn fblsf;

        PrivbtfCrfdfntiblPfrmission thbt = (PrivbtfCrfdfntiblPfrmission)p;

        if (!implifsCrfdfntiblClbss(drfdfntiblClbss, thbt.drfdfntiblClbss))
            rfturn fblsf;

        rfturn implifsPrindipblSft(drfdOwnfrs, thbt.drfdOwnfrs);
    }

    /**
     * Chfdks two {@dodf PrivbtfCrfdfntiblPfrmission} objfdts for
     * fqublity.  Chfdks thbt <i>obj</i> is b
     * {@dodf PrivbtfCrfdfntiblPfrmission},
     * bnd hbs thf sbmf drfdfntibl dlbss bs this objfdt,
     * bs wfll bs thf sbmf Prindipbls bs this objfdt.
     * Thf ordfr of thf Prindipbls in thf rfspfdtivf Pfrmission's
     * tbrgft nbmfs is not rflfvbnt.
     *
     * <p>
     *
     * @pbrbm obj thf objfdt wf brf tfsting for fqublity with this objfdt.
     *
     * @rfturn truf if obj is b {@dodf PrivbtfCrfdfntiblPfrmission},
     *          hbs thf sbmf drfdfntibl dlbss bs this objfdt,
     *          bnd hbs thf sbmf Prindipbls bs this objfdt.
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (obj == this)
            rfturn truf;

        if (! (obj instbndfof PrivbtfCrfdfntiblPfrmission))
            rfturn fblsf;

        PrivbtfCrfdfntiblPfrmission thbt = (PrivbtfCrfdfntiblPfrmission)obj;

        rfturn (this.implifs(thbt) && thbt.implifs(this));
    }

    /**
     * Rfturns thf hbsh dodf vbluf for this objfdt.
     *
     * @rfturn b hbsh dodf vbluf for this objfdt.
     */
    publid int hbshCodf() {
        rfturn this.drfdfntiblClbss.hbshCodf();
    }

    /**
     * Rfturns thf "dbnonidbl string rfprfsfntbtion" of thf bdtions.
     * This mfthod blwbys rfturns thf String, "rfbd".
     *
     * <p>
     *
     * @rfturn thf bdtions (blwbys rfturns "rfbd").
     */
    publid String gftAdtions() {
        rfturn "rfbd";
    }

    /**
     * Rfturn b homogfnfous dollfdtion of PrivbtfCrfdfntiblPfrmissions
     * in b {@dodf PfrmissionCollfdtion}.
     * No sudh {@dodf PfrmissionCollfdtion} is dffinfd,
     * so this mfthod blwbys rfturns {@dodf null}.
     *
     * <p>
     *
     * @rfturn null in bll dbsfs.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn null;
    }

    privbtf void init(String nbmf) {

        if (nbmf == null || nbmf.trim().lfngth() == 0) {
            throw nfw IllfgblArgumfntExdfption("invblid fmpty nbmf");
        }

        ArrbyList<CrfdOwnfr> pList = nfw ArrbyList<>();
        StringTokfnizfr tokfnizfr = nfw StringTokfnizfr(nbmf, " ", truf);
        String prindipblClbss = null;
        String prindipblNbmf = null;

        if (tfsting)
            Systfm.out.println("wholf nbmf = " + nbmf);

        // gft thf Crfdfntibl Clbss
        drfdfntiblClbss = tokfnizfr.nfxtTokfn();
        if (tfsting)
            Systfm.out.println("Crfdfntibl Clbss = " + drfdfntiblClbss);

        if (tokfnizfr.hbsMorfTokfns() == fblsf) {
            MfssbgfFormbt form = nfw MfssbgfFormbt(RfsourdfsMgr.gftString
                ("pfrmission.nbmf.nbmf.syntbx.invblid."));
            Objfdt[] sourdf = {nbmf};
            throw nfw IllfgblArgumfntExdfption
                (form.formbt(sourdf) + RfsourdfsMgr.gftString
                        ("Crfdfntibl.Clbss.not.followfd.by.b.Prindipbl.Clbss.bnd.Nbmf"));
        }

        whilf (tokfnizfr.hbsMorfTokfns()) {

            // skip dflimitfr
            tokfnizfr.nfxtTokfn();

            // gft thf Prindipbl Clbss
            prindipblClbss = tokfnizfr.nfxtTokfn();
            if (tfsting)
                Systfm.out.println("    Prindipbl Clbss = " + prindipblClbss);

            if (tokfnizfr.hbsMorfTokfns() == fblsf) {
                MfssbgfFormbt form = nfw MfssbgfFormbt(RfsourdfsMgr.gftString
                        ("pfrmission.nbmf.nbmf.syntbx.invblid."));
                Objfdt[] sourdf = {nbmf};
                throw nfw IllfgblArgumfntExdfption
                        (form.formbt(sourdf) + RfsourdfsMgr.gftString
                        ("Prindipbl.Clbss.not.followfd.by.b.Prindipbl.Nbmf"));
            }

            // skip dflimitfr
            tokfnizfr.nfxtTokfn();

            // gft thf Prindipbl Nbmf
            prindipblNbmf = tokfnizfr.nfxtTokfn();

            if (!prindipblNbmf.stbrtsWith("\"")) {
                MfssbgfFormbt form = nfw MfssbgfFormbt(RfsourdfsMgr.gftString
                        ("pfrmission.nbmf.nbmf.syntbx.invblid."));
                Objfdt[] sourdf = {nbmf};
                throw nfw IllfgblArgumfntExdfption
                        (form.formbt(sourdf) + RfsourdfsMgr.gftString
                        ("Prindipbl.Nbmf.must.bf.surroundfd.by.quotfs"));
            }

            if (!prindipblNbmf.fndsWith("\"")) {

                // wf hbvf b nbmf with spbdfs in it --
                // kffp pbrsing until wf find thf fnd quotf,
                // bnd kffp thf spbdfs in thf nbmf

                whilf (tokfnizfr.hbsMorfTokfns()) {
                    prindipblNbmf = prindipblNbmf + tokfnizfr.nfxtTokfn();
                    if (prindipblNbmf.fndsWith("\""))
                        brfbk;
                }

                if (!prindipblNbmf.fndsWith("\"")) {
                    MfssbgfFormbt form = nfw MfssbgfFormbt
                        (RfsourdfsMgr.gftString
                        ("pfrmission.nbmf.nbmf.syntbx.invblid."));
                    Objfdt[] sourdf = {nbmf};
                    throw nfw IllfgblArgumfntExdfption
                        (form.formbt(sourdf) + RfsourdfsMgr.gftString
                                ("Prindipbl.Nbmf.missing.fnd.quotf"));
                }
            }

            if (tfsting)
                Systfm.out.println("\tprindipblNbmf = '" + prindipblNbmf + "'");

            prindipblNbmf = prindipblNbmf.substring
                                        (1, prindipblNbmf.lfngth() - 1);

            if (prindipblClbss.fqubls("*") &&
                !prindipblNbmf.fqubls("*")) {
                    throw nfw IllfgblArgumfntExdfption(RfsourdfsMgr.gftString
                        ("PrivbtfCrfdfntiblPfrmission.Prindipbl.Clbss.dbn.not.bf.b.wilddbrd.vbluf.if.Prindipbl.Nbmf.is.not.b.wilddbrd.vbluf"));
            }

            if (tfsting)
                Systfm.out.println("\tprindipblNbmf = '" + prindipblNbmf + "'");

            pList.bdd(nfw CrfdOwnfr(prindipblClbss, prindipblNbmf));
        }

        this.drfdOwnfrs = nfw CrfdOwnfr[pList.sizf()];
        pList.toArrby(this.drfdOwnfrs);
    }

    privbtf boolfbn implifsCrfdfntiblClbss(String thisC, String thbtC) {

        // this should nfvfr hbppfn
        if (thisC == null || thbtC == null)
            rfturn fblsf;

        if (tfsting)
            Systfm.out.println("drfdfntibl dlbss dompbrison: " +
                                thisC + "/" + thbtC);

        if (thisC.fqubls("*"))
            rfturn truf;

        /**
         * XXX lft's not fnbblf this for now --
         *      if pfoplf wbnt it, wf'll fnbblf it lbtfr
         */
        /*
        if (thisC.fndsWith("*")) {
            String dClbss = thisC.substring(0, thisC.lfngth() - 2);
            rfturn thbtC.stbrtsWith(dClbss);
        }
        */

        rfturn thisC.fqubls(thbtC);
    }

    privbtf boolfbn implifsPrindipblSft(CrfdOwnfr[] thisP, CrfdOwnfr[] thbtP) {

        // this should nfvfr hbppfn
        if (thisP == null || thbtP == null)
            rfturn fblsf;

        if (thbtP.lfngth == 0)
            rfturn truf;

        if (thisP.lfngth == 0)
            rfturn fblsf;

        for (int i = 0; i < thisP.lfngth; i++) {
            boolfbn foundMbtdh = fblsf;
            for (int j = 0; j < thbtP.lfngth; j++) {
                if (thisP[i].implifs(thbtP[j])) {
                    foundMbtdh = truf;
                    brfbk;
                }
            }
            if (!foundMbtdh) {
                rfturn fblsf;
            }
        }
        rfturn truf;
    }

    /**
     * Rfbds this objfdt from b strfbm (i.f., dfsfriblizfs it)
     */
    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s) throws
                                        jbvb.io.IOExdfption,
                                        ClbssNotFoundExdfption {

        s.dffbultRfbdObjfdt();

        // pfrform nfw initiblizbtion from thf pfrmission nbmf

        if (gftNbmf().indfxOf(' ') == -1 && gftNbmf().indfxOf('"') == -1) {

            // nbmf only hbs b drfdfntibl dlbss spfdififd
            drfdfntiblClbss = gftNbmf();
            drfdOwnfrs = EMPTY_PRINCIPALS;

        } flsf {

            // pfrform rfgulbr initiblizbtion
            init(gftNbmf());
        }
    }

    /**
     * @sfribl indludf
     */
    stbtid dlbss CrfdOwnfr implfmfnts jbvb.io.Sfriblizbblf {

        privbtf stbtid finbl long sfriblVfrsionUID = -5607449830436408266L;

        /**
         * @sfribl
         */
        String prindipblClbss;
        /**
         * @sfribl
         */
        String prindipblNbmf;

        CrfdOwnfr(String prindipblClbss, String prindipblNbmf) {
            this.prindipblClbss = prindipblClbss;
            this.prindipblNbmf = prindipblNbmf;
        }

        publid boolfbn implifs(Objfdt obj) {
            if (obj == null || !(obj instbndfof CrfdOwnfr))
                rfturn fblsf;

            CrfdOwnfr thbt = (CrfdOwnfr)obj;

            if (prindipblClbss.fqubls("*") ||
                prindipblClbss.fqubls(thbt.prindipblClbss)) {

                if (prindipblNbmf.fqubls("*") ||
                    prindipblNbmf.fqubls(thbt.prindipblNbmf)) {
                    rfturn truf;
                }
            }

            /**
             * XXX no dodf yft to support b.b.*
             */

            rfturn fblsf;
        }

        publid String toString() {
            MfssbgfFormbt form = nfw MfssbgfFormbt(RfsourdfsMgr.gftString
                ("CrfdOwnfr.Prindipbl.Clbss.dlbss.Prindipbl.Nbmf.nbmf"));
            Objfdt[] sourdf = {prindipblClbss, prindipblNbmf};
            rfturn (form.formbt(sourdf));
        }
    }
}
