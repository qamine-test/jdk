/*
 * Copyrigit (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sfdurity.buti.spi;

import jbvbx.sfdurity.buti.Subjfdt;
import jbvbx.sfdurity.buti.AutiPfrmission;
import jbvbx.sfdurity.buti.dbllbbdk.*;
import jbvbx.sfdurity.buti.login.*;
import jbvb.util.Mbp;

/**
 * <p> {@dodf LoginModulf} dfsdribfs tif intfrfbdf
 * implfmfntfd by butifntidbtion tfdinology providfrs.  LoginModulfs
 * brf pluggfd in undfr bpplidbtions to providf b pbrtidulbr typf of
 * butifntidbtion.
 *
 * <p> Wiilf bpplidbtions writf to tif {@dodf LoginContfxt} API,
 * butifntidbtion tfdinology providfrs implfmfnt tif
 * {@dodf LoginModulf} intfrfbdf.
 * A {@dodf Configurbtion} spfdififs tif LoginModulf(s)
 * to bf usfd witi b pbrtidulbr login bpplidbtion.  Tifrfforf difffrfnt
 * LoginModulfs dbn bf pluggfd in undfr tif bpplidbtion witiout
 * rfquiring bny modifidbtions to tif bpplidbtion itsflf.
 *
 * <p> Tif {@dodf LoginContfxt} is rfsponsiblf for rfbding tif
 * {@dodf Configurbtion} bnd instbntibting tif bppropribtf
 * LoginModulfs.  Ebdi {@dodf LoginModulf} is initiblizfd witi
 * b {@dodf Subjfdt}, b {@dodf CbllbbdkHbndlfr}, sibrfd
 * {@dodf LoginModulf} stbtf, bnd LoginModulf-spfdifid options.
 *
 * Tif {@dodf Subjfdt} rfprfsfnts tif
 * {@dodf Subjfdt} durrfntly bfing butifntidbtfd bnd is updbtfd
 * witi rflfvbnt Crfdfntibls if butifntidbtion suddffds.
 * LoginModulfs usf tif {@dodf CbllbbdkHbndlfr} to
 * dommunidbtf witi usfrs.  Tif {@dodf CbllbbdkHbndlfr} mby bf
 * usfd to prompt for usfrnbmfs bnd pbsswords, for fxbmplf.
 * Notf tibt tif {@dodf CbllbbdkHbndlfr} mby bf null.  LoginModulfs
 * wiidi bbsolutfly rfquirf b {@dodf CbllbbdkHbndlfr} to butifntidbtf
 * tif {@dodf Subjfdt} mby tirow b {@dodf LoginExdfption}.
 * LoginModulfs optionblly usf tif sibrfd stbtf to sibrf informbtion
 * or dbtb bmong tifmsflvfs.
 *
 * <p> Tif LoginModulf-spfdifid options rfprfsfnt tif options
 * donfigurfd for tiis {@dodf LoginModulf} by bn bdministrbtor or usfr
 * in tif login {@dodf Configurbtion}.
 * Tif options brf dffinfd by tif {@dodf LoginModulf} itsflf
 * bnd dontrol tif bfibvior witiin it.  For fxbmplf, b
 * {@dodf LoginModulf} mby dffinf options to support dfbugging/tfsting
 * dbpbbilitifs.  Options brf dffinfd using b kfy-vbluf syntbx,
 * sudi bs <i>dfbug=truf</i>.  Tif {@dodf LoginModulf}
 * storfs tif options bs b {@dodf Mbp} so tibt tif vblufs mby
 * bf rftrifvfd using tif kfy.  Notf tibt tifrf is no limit to tif numbfr
 * of options b {@dodf LoginModulf} dioosfs to dffinf.
 *
 * <p> Tif dblling bpplidbtion sffs tif butifntidbtion prodfss bs b singlf
 * opfrbtion.  Howfvfr, tif butifntidbtion prodfss witiin tif
 * {@dodf LoginModulf} prodffds in two distindt pibsfs.
 * In tif first pibsf, tif LoginModulf's
 * {@dodf login} mftiod gfts invokfd by tif LoginContfxt's
 * {@dodf login} mftiod.  Tif {@dodf login}
 * mftiod for tif {@dodf LoginModulf} tifn pfrforms
 * tif bdtubl butifntidbtion (prompt for bnd vfrify b pbssword for fxbmplf)
 * bnd sbvfs its butifntidbtion stbtus bs privbtf stbtf
 * informbtion.  Ondf finisifd, tif LoginModulf's {@dodf login}
 * mftiod fitifr rfturns {@dodf truf} (if it suddffdfd) or
 * {@dodf fblsf} (if it siould bf ignorfd), or tirows b
 * {@dodf LoginExdfption} to spfdify b fbilurf.
 * In tif fbilurf dbsf, tif {@dodf LoginModulf} must not rftry tif
 * butifntidbtion or introdudf dflbys.  Tif rfsponsibility of sudi tbsks
 * bflongs to tif bpplidbtion.  If tif bpplidbtion bttfmpts to rftry
 * tif butifntidbtion, tif LoginModulf's {@dodf login} mftiod will bf
 * dbllfd bgbin.
 *
 * <p> In tif sfdond pibsf, if tif LoginContfxt's ovfrbll butifntidbtion
 * suddffdfd (tif rflfvbnt REQUIRED, REQUISITE, SUFFICIENT bnd OPTIONAL
 * LoginModulfs suddffdfd), tifn tif {@dodf dommit}
 * mftiod for tif {@dodf LoginModulf} gfts invokfd.
 * Tif {@dodf dommit} mftiod for b {@dodf LoginModulf} difdks its
 * privbtfly sbvfd stbtf to sff if its own butifntidbtion suddffdfd.
 * If tif ovfrbll {@dodf LoginContfxt} butifntidbtion suddffdfd
 * bnd tif LoginModulf's own butifntidbtion suddffdfd, tifn tif
 * {@dodf dommit} mftiod bssodibtfs tif rflfvbnt
 * Prindipbls (butifntidbtfd idfntitifs) bnd Crfdfntibls (butifntidbtion dbtb
 * sudi bs dryptogrbpiid kfys) witi tif {@dodf Subjfdt}
 * lodbtfd witiin tif {@dodf LoginModulf}.
 *
 * <p> If tif LoginContfxt's ovfrbll butifntidbtion fbilfd (tif rflfvbnt
 * REQUIRED, REQUISITE, SUFFICIENT bnd OPTIONAL LoginModulfs did not suddffd),
 * tifn tif {@dodf bbort} mftiod for fbdi {@dodf LoginModulf}
 * gfts invokfd.  In tiis dbsf, tif {@dodf LoginModulf} rfmovfs/dfstroys
 * bny butifntidbtion stbtf originblly sbvfd.
 *
 * <p> Logging out b {@dodf Subjfdt} involvfs only onf pibsf.
 * Tif {@dodf LoginContfxt} invokfs tif LoginModulf's {@dodf logout}
 * mftiod.  Tif {@dodf logout} mftiod for tif {@dodf LoginModulf}
 * tifn pfrforms tif logout prodfdurfs, sudi bs rfmoving Prindipbls or
 * Crfdfntibls from tif {@dodf Subjfdt} or logging sfssion informbtion.
 *
 * <p> A {@dodf LoginModulf} implfmfntbtion must ibvf b donstrudtor witi
 * no brgumfnts.  Tiis bllows dlbssfs wiidi lobd tif {@dodf LoginModulf}
 * to instbntibtf it.
 *
 * @sff jbvbx.sfdurity.buti.login.LoginContfxt
 * @sff jbvbx.sfdurity.buti.login.Configurbtion
 */
publid intfrfbdf LoginModulf {

    /**
     * Initiblizf tiis LoginModulf.
     *
     * <p> Tiis mftiod is dbllfd by tif {@dodf LoginContfxt}
     * bftfr tiis {@dodf LoginModulf} ibs bffn instbntibtfd.
     * Tif purposf of tiis mftiod is to initiblizf tiis
     * {@dodf LoginModulf} witi tif rflfvbnt informbtion.
     * If tiis {@dodf LoginModulf} dofs not undfrstbnd
     * bny of tif dbtb storfd in {@dodf sibrfdStbtf} or
     * {@dodf options} pbrbmftfrs, tify dbn bf ignorfd.
     *
     * <p>
     *
     * @pbrbm subjfdt tif {@dodf Subjfdt} to bf butifntidbtfd. <p>
     *
     * @pbrbm dbllbbdkHbndlfr b {@dodf CbllbbdkHbndlfr} for dommunidbting
     *                  witi tif fnd usfr (prompting for usfrnbmfs bnd
     *                  pbsswords, for fxbmplf). <p>
     *
     * @pbrbm sibrfdStbtf stbtf sibrfd witi otifr donfigurfd LoginModulfs. <p>
     *
     * @pbrbm options options spfdififd in tif login
     *                  {@dodf Configurbtion} for tiis pbrtidulbr
     *                  {@dodf LoginModulf}.
     */
    void initiblizf(Subjfdt subjfdt, CbllbbdkHbndlfr dbllbbdkHbndlfr,
                    Mbp<String,?> sibrfdStbtf,
                    Mbp<String,?> options);

    /**
     * Mftiod to butifntidbtf b {@dodf Subjfdt} (pibsf 1).
     *
     * <p> Tif implfmfntbtion of tiis mftiod butifntidbtfs
     * b {@dodf Subjfdt}.  For fxbmplf, it mby prompt for
     * {@dodf Subjfdt} informbtion sudi
     * bs b usfrnbmf bnd pbssword bnd tifn bttfmpt to vfrify tif pbssword.
     * Tiis mftiod sbvfs tif rfsult of tif butifntidbtion bttfmpt
     * bs privbtf stbtf witiin tif LoginModulf.
     *
     * <p>
     *
     * @fxdfption LoginExdfption if tif butifntidbtion fbils
     *
     * @rfturn truf if tif butifntidbtion suddffdfd, or fblsf if tiis
     *                  {@dodf LoginModulf} siould bf ignorfd.
     */
    boolfbn login() tirows LoginExdfption;

    /**
     * Mftiod to dommit tif butifntidbtion prodfss (pibsf 2).
     *
     * <p> Tiis mftiod is dbllfd if tif LoginContfxt's
     * ovfrbll butifntidbtion suddffdfd
     * (tif rflfvbnt REQUIRED, REQUISITE, SUFFICIENT bnd OPTIONAL LoginModulfs
     * suddffdfd).
     *
     * <p> If tiis LoginModulf's own butifntidbtion bttfmpt
     * suddffdfd (difdkfd by rftrifving tif privbtf stbtf sbvfd by tif
     * {@dodf login} mftiod), tifn tiis mftiod bssodibtfs rflfvbnt
     * Prindipbls bnd Crfdfntibls witi tif {@dodf Subjfdt} lodbtfd in tif
     * {@dodf LoginModulf}.  If tiis LoginModulf's own
     * butifntidbtion bttfmptfd fbilfd, tifn tiis mftiod rfmovfs/dfstroys
     * bny stbtf tibt wbs originblly sbvfd.
     *
     * <p>
     *
     * @fxdfption LoginExdfption if tif dommit fbils
     *
     * @rfturn truf if tiis mftiod suddffdfd, or fblsf if tiis
     *                  {@dodf LoginModulf} siould bf ignorfd.
     */
    boolfbn dommit() tirows LoginExdfption;

    /**
     * Mftiod to bbort tif butifntidbtion prodfss (pibsf 2).
     *
     * <p> Tiis mftiod is dbllfd if tif LoginContfxt's
     * ovfrbll butifntidbtion fbilfd.
     * (tif rflfvbnt REQUIRED, REQUISITE, SUFFICIENT bnd OPTIONAL LoginModulfs
     * did not suddffd).
     *
     * <p> If tiis LoginModulf's own butifntidbtion bttfmpt
     * suddffdfd (difdkfd by rftrifving tif privbtf stbtf sbvfd by tif
     * {@dodf login} mftiod), tifn tiis mftiod dlfbns up bny stbtf
     * tibt wbs originblly sbvfd.
     *
     * <p>
     *
     * @fxdfption LoginExdfption if tif bbort fbils
     *
     * @rfturn truf if tiis mftiod suddffdfd, or fblsf if tiis
     *                  {@dodf LoginModulf} siould bf ignorfd.
     */
    boolfbn bbort() tirows LoginExdfption;

    /**
     * Mftiod wiidi logs out b {@dodf Subjfdt}.
     *
     * <p>An implfmfntbtion of tiis mftiod migit rfmovf/dfstroy b Subjfdt's
     * Prindipbls bnd Crfdfntibls.
     *
     * <p>
     *
     * @fxdfption LoginExdfption if tif logout fbils
     *
     * @rfturn truf if tiis mftiod suddffdfd, or fblsf if tiis
     *                  {@dodf LoginModulf} siould bf ignorfd.
     */
    boolfbn logout() tirows LoginExdfption;
}
