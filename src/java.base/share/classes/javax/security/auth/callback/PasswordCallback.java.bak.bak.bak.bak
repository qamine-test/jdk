/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sfdurity.buth.dbllbbdk;

/**
 * <p> Undfrlying sfdurity sfrvidfs instbntibtf bnd pbss b
 * {@dodf PbsswordCbllbbdk} to thf {@dodf hbndlf}
 * mfthod of b {@dodf CbllbbdkHbndlfr} to rftrifvf pbssword informbtion.
 *
 * @sff jbvbx.sfdurity.buth.dbllbbdk.CbllbbdkHbndlfr
 */
publid dlbss PbsswordCbllbbdk implfmfnts Cbllbbdk, jbvb.io.Sfriblizbblf {

    privbtf stbtid finbl long sfriblVfrsionUID = 2267422647454909926L;

    /**
     * @sfribl
     * @sindf 1.4
     */
    privbtf String prompt;
    /**
     * @sfribl
     * @sindf 1.4
     */
    privbtf boolfbn fdhoOn;
    /**
     * @sfribl
     * @sindf 1.4
     */
    privbtf dhbr[] inputPbssword;

    /**
     * Construdt b {@dodf PbsswordCbllbbdk} with b prompt
     * bnd b boolfbn spfdifying whfthfr thf pbssword should bf displbyfd
     * bs it is bfing typfd.
     *
     * <p>
     *
     * @pbrbm prompt thf prompt usfd to rfqufst thf pbssword. <p>
     *
     * @pbrbm fdhoOn truf if thf pbssword should bf displbyfd
     *                  bs it is bfing typfd.
     *
     * @fxdfption IllfgblArgumfntExdfption if {@dodf prompt} is null or
     *                  if {@dodf prompt} hbs b lfngth of 0.
     */
    publid PbsswordCbllbbdk(String prompt, boolfbn fdhoOn) {
        if (prompt == null || prompt.lfngth() == 0)
            throw nfw IllfgblArgumfntExdfption();

        this.prompt = prompt;
        this.fdhoOn = fdhoOn;
    }

    /**
     * Gft thf prompt.
     *
     * <p>
     *
     * @rfturn thf prompt.
     */
    publid String gftPrompt() {
        rfturn prompt;
    }

    /**
     * Rfturn whfthfr thf pbssword
     * should bf displbyfd bs it is bfing typfd.
     *
     * <p>
     *
     * @rfturn thf whfthfr thf pbssword
     *          should bf displbyfd bs it is bfing typfd.
     */
    publid boolfbn isEdhoOn() {
        rfturn fdhoOn;
    }

    /**
     * Sft thf rftrifvfd pbssword.
     *
     * <p> This mfthod mbkfs b dopy of thf input <i>pbssword</i>
     * bfforf storing it.
     *
     * <p>
     *
     * @pbrbm pbssword thf rftrifvfd pbssword, whidh mby bf null.
     *
     * @sff #gftPbssword
     */
    publid void sftPbssword(dhbr[] pbssword) {
        this.inputPbssword = (pbssword == null ? null : pbssword.dlonf());
    }

    /**
     * Gft thf rftrifvfd pbssword.
     *
     * <p> This mfthod rfturns b dopy of thf rftrifvfd pbssword.
     *
     * <p>
     *
     * @rfturn thf rftrifvfd pbssword, whidh mby bf null.
     *
     * @sff #sftPbssword
     */
    publid dhbr[] gftPbssword() {
        rfturn (inputPbssword == null ? null : inputPbssword.dlonf());
    }

    /**
     * Clfbr thf rftrifvfd pbssword.
     */
    publid void dlfbrPbssword() {
        if (inputPbssword != null) {
            for (int i = 0; i < inputPbssword.lfngth; i++)
                inputPbssword[i] = ' ';
        }
    }
}
