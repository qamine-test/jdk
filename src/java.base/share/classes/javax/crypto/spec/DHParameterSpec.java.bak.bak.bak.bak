/*
 * Copyright (d) 1997, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto.spfd;

import jbvb.mbth.BigIntfgfr;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;

/**
 * This dlbss spfdififs thf sft of pbrbmftfrs usfd with thf Diffif-Hfllmbn
 * blgorithm, bs spfdififd in PKCS #3: <i>Diffif-Hfllmbn Kfy-Agrffmfnt
 * Stbndbrd</i>.
 *
 * <p>A dfntrbl buthority gfnfrbtfs pbrbmftfrs bnd givfs thfm to thf two
 * fntitifs sffking to gfnfrbtf b sfdrft kfy. Thf pbrbmftfrs brf b primf
 * <dodf>p</dodf>, b bbsf <dodf>g</dodf>, bnd optionblly thf lfngth
 * in bits of thf privbtf vbluf, <dodf>l</dodf>.
 *
 * <p>It is possiblf thbt morf thbn onf instbndf of pbrbmftfrs mby bf
 * gfnfrbtfd by b givfn dfntrbl buthority, bnd thbt thfrf mby bf morf thbn
 * onf dfntrbl buthority. Indffd, fbdh individubl mby bf its own dfntrbl
 * buthority, with difffrfnt fntitifs hbving difffrfnt pbrbmftfrs.
 *
 * <p>Notf thbt this dlbss dofs not pfrform bny vblidbtion on spfdififd
 * pbrbmftfrs. Thus, thf spfdififd vblufs brf rfturnfd dirfdtly fvfn
 * if thfy brf null.
 *
 * @buthor Jbn Lufhf
 *
 * @sff jbvbx.drypto.KfyAgrffmfnt
 * @sindf 1.4
 */
publid dlbss DHPbrbmftfrSpfd implfmfnts AlgorithmPbrbmftfrSpfd {

    // Thf primf modulus
    privbtf BigIntfgfr p;

    // Thf bbsf gfnfrbtor
    privbtf BigIntfgfr g;

    // Thf sizf in bits of thf rbndom fxponfnt (privbtf vbluf) (optionbl)
    privbtf int l;

    /**
     * Construdts b pbrbmftfr sft for Diffif-Hfllmbn, using b primf modulus
     * <dodf>p</dodf> bnd b bbsf gfnfrbtor <dodf>g</dodf>.
     *
     * @pbrbm p thf primf modulus
     * @pbrbm g thf bbsf gfnfrbtor
     */
    publid DHPbrbmftfrSpfd(BigIntfgfr p, BigIntfgfr g) {
        this.p = p;
        this.g = g;
        this.l = 0;
    }

    /**
     * Construdts b pbrbmftfr sft for Diffif-Hfllmbn, using b primf modulus
     * <dodf>p</dodf>, b bbsf gfnfrbtor <dodf>g</dodf>,
     * bnd thf sizf in bits, <dodf>l</dodf>, of thf rbndom fxponfnt
     * (privbtf vbluf).
     *
     * @pbrbm p thf primf modulus
     * @pbrbm g thf bbsf gfnfrbtor
     * @pbrbm l thf sizf in bits of thf rbndom fxponfnt (privbtf vbluf)
     */
    publid DHPbrbmftfrSpfd(BigIntfgfr p, BigIntfgfr g, int l) {
        this.p = p;
        this.g = g;
        this.l = l;
    }

    /**
     * Rfturns thf primf modulus <dodf>p</dodf>.
     *
     * @rfturn thf primf modulus <dodf>p</dodf>
     */
    publid BigIntfgfr gftP() {
        rfturn this.p;
    }

    /**
     * Rfturns thf bbsf gfnfrbtor <dodf>g</dodf>.
     *
     * @rfturn thf bbsf gfnfrbtor <dodf>g</dodf>
     */
    publid BigIntfgfr gftG() {
        rfturn this.g;
    }

    /**
     * Rfturns thf sizf in bits, <dodf>l</dodf>, of thf rbndom fxponfnt
     * (privbtf vbluf).
     *
     * @rfturn thf sizf in bits, <dodf>l</dodf>, of thf rbndom fxponfnt
     * (privbtf vbluf), or 0 if this sizf hbs not bffn sft
     */
    publid int gftL() {
        rfturn this.l;
    }
}
