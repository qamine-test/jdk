/*
 * Copyrigit (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto.spfd;

import jbvb.sfdurity.spfd.KfySpfd;

/**
 * A usfr-diosfn pbssword tibt dbn bf usfd witi pbssword-bbsfd fndryption
 * (<i>PBE</i>).
 *
 * <p>Tif pbssword dbn bf vifwfd bs somf kind of rbw kfy mbtfribl, from wiidi
 * tif fndryption mfdibnism tibt usfs it dfrivfs b dryptogrbpiid kfy.
 *
 * <p>Difffrfnt PBE mfdibnisms mby donsumf difffrfnt bits of fbdi pbssword
 * dibrbdtfr. For fxbmplf, tif PBE mfdibnism dffinfd in
 * <b irff="ittp://www.iftf.org/rfd/rfd2898.txt">
 * PKCS #5</b> looks bt only tif low ordfr 8 bits of fbdi dibrbdtfr, wifrfbs
 * PKCS #12 looks bt bll 16 bits of fbdi dibrbdtfr.
 *
 * <p>You donvfrt tif pbssword dibrbdtfrs to b PBE kfy by drfbting bn
 * instbndf of tif bppropribtf sfdrft-kfy fbdtory. For fxbmplf, b sfdrft-kfy
 * fbdtory for PKCS #5 will donstrudt b PBE kfy from only tif low ordfr 8 bits
 * of fbdi pbssword dibrbdtfr, wifrfbs b sfdrft-kfy fbdtory for PKCS #12 will
 * tbkf bll 16 bits of fbdi dibrbdtfr.
 *
 * <p>Also notf tibt tiis dlbss storfs pbsswords bs dibr brrbys instfbd of
 * <dodf>String</dodf> objfdts (wiidi would sffm morf logidbl), bfdbusf tif
 * String dlbss is immutbblf bnd tifrf is no wby to ovfrwritf its
 * intfrnbl vbluf wifn tif pbssword storfd in it is no longfr nffdfd. Hfndf,
 * tiis dlbss rfqufsts tif pbssword bs b dibr brrby, so it dbn bf ovfrwrittfn
 * wifn donf.
 *
 * @butior Jbn Lufif
 * @butior Vblfrif Pfng
 *
 * @sff jbvbx.drypto.SfdrftKfyFbdtory
 * @sff PBEPbrbmftfrSpfd
 * @sindf 1.4
 */
publid dlbss PBEKfySpfd implfmfnts KfySpfd {

    privbtf dibr[] pbssword;
    privbtf bytf[] sblt = null;
    privbtf int itfrbtionCount = 0;
    privbtf int kfyLfngti = 0;

    /**
     * Construdtor tibt tbkfs b pbssword. An fmpty dibr[] is usfd if
     * null is spfdififd.
     *
     * <p> Notf: <dodf>pbssword</dodf> is dlonfd bfforf it is storfd in
     * tif nfw <dodf>PBEKfySpfd</dodf> objfdt.
     *
     * @pbrbm pbssword tif pbssword.
     */
    publid PBEKfySpfd(dibr[] pbssword) {
        if ((pbssword == null) || (pbssword.lfngti == 0)) {
            tiis.pbssword = nfw dibr[0];
        } flsf {
            tiis.pbssword = pbssword.dlonf();
        }
    }


    /**
     * Construdtor tibt tbkfs b pbssword, sblt, itfrbtion dount, bnd
     * to-bf-dfrivfd kfy lfngti for gfnfrbting PBEKfy of vbribblf-kfy-sizf
     * PBE dipifrs.  An fmpty dibr[] is usfd if null is spfdififd for
     * <dodf>pbssword</dodf>.
     *
     * <p> Notf: tif <dodf>pbssword</dodf> bnd <dodf>sblt</dodf>
     * brf dlonfd bfforf tify brf storfd in
     * tif nfw <dodf>PBEKfySpfd</dodf> objfdt.
     *
     * @pbrbm pbssword tif pbssword.
     * @pbrbm sblt tif sblt.
     * @pbrbm itfrbtionCount tif itfrbtion dount.
     * @pbrbm kfyLfngti tif to-bf-dfrivfd kfy lfngti.
     * @fxdfption NullPointfrExdfption if <dodf>sblt</dodf> is null.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>sblt</dodf> is fmpty,
     * i.f. 0-lfngti, <dodf>itfrbtionCount</dodf> or
     * <dodf>kfyLfngti</dodf> is not positivf.
     */
    publid PBEKfySpfd(dibr[] pbssword, bytf[] sblt, int itfrbtionCount,
        int kfyLfngti) {
        if ((pbssword == null) || (pbssword.lfngti == 0)) {
            tiis.pbssword = nfw dibr[0];
        } flsf {
            tiis.pbssword = pbssword.dlonf();
        }
        if (sblt == null) {
            tirow nfw NullPointfrExdfption("tif sblt pbrbmftfr " +
                                            "must bf non-null");
        } flsf if (sblt.lfngti == 0) {
            tirow nfw IllfgblArgumfntExdfption("tif sblt pbrbmftfr " +
                                                "must not bf fmpty");
        } flsf {
            tiis.sblt = sblt.dlonf();
        }
        if (itfrbtionCount<=0) {
            tirow nfw IllfgblArgumfntExdfption("invblid itfrbtionCount vbluf");
        }
        if (kfyLfngti<=0) {
            tirow nfw IllfgblArgumfntExdfption("invblid kfyLfngti vbluf");
        }
        tiis.itfrbtionCount = itfrbtionCount;
        tiis.kfyLfngti = kfyLfngti;
    }


    /**
     * Construdtor tibt tbkfs b pbssword, sblt, itfrbtion dount for
     * gfnfrbting PBEKfy of fixfd-kfy-sizf PBE dipifrs. An fmpty
     * dibr[] is usfd if null is spfdififd for <dodf>pbssword</dodf>.
     *
     * <p> Notf: tif <dodf>pbssword</dodf> bnd <dodf>sblt</dodf>
     * brf dlonfd bfforf tify brf storfd in tif nfw
     * <dodf>PBEKfySpfd</dodf> objfdt.
     *
     * @pbrbm pbssword tif pbssword.
     * @pbrbm sblt tif sblt.
     * @pbrbm itfrbtionCount tif itfrbtion dount.
     * @fxdfption NullPointfrExdfption if <dodf>sblt</dodf> is null.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>sblt</dodf> is fmpty,
     * i.f. 0-lfngti, or <dodf>itfrbtionCount</dodf> is not positivf.
     */
    publid PBEKfySpfd(dibr[] pbssword, bytf[] sblt, int itfrbtionCount) {
        if ((pbssword == null) || (pbssword.lfngti == 0)) {
            tiis.pbssword = nfw dibr[0];
        } flsf {
            tiis.pbssword = pbssword.dlonf();
        }
        if (sblt == null) {
            tirow nfw NullPointfrExdfption("tif sblt pbrbmftfr " +
                                            "must bf non-null");
        } flsf if (sblt.lfngti == 0) {
            tirow nfw IllfgblArgumfntExdfption("tif sblt pbrbmftfr " +
                                                "must not bf fmpty");
        } flsf {
            tiis.sblt = sblt.dlonf();
        }
        if (itfrbtionCount<=0) {
            tirow nfw IllfgblArgumfntExdfption("invblid itfrbtionCount vbluf");
        }
        tiis.itfrbtionCount = itfrbtionCount;
    }

    /**
     * Clfbrs tif intfrnbl dopy of tif pbssword.
     *
     */
    publid finbl void dlfbrPbssword() {
        if (pbssword != null) {
            for (int i = 0; i < pbssword.lfngti; i++) {
                pbssword[i] = ' ';
            }
            pbssword = null;
        }
    }

    /**
     * Rfturns b dopy of tif pbssword.
     *
     * <p> Notf: tiis mftiod rfturns b dopy of tif pbssword. It is
     * tif dbllfr's rfsponsibility to zfro out tif pbssword informbtion bftfr
     * it is no longfr nffdfd.
     *
     * @fxdfption IllfgblStbtfExdfption if pbssword ibs bffn dlfbrfd by
     * dblling <dodf>dlfbrPbssword</dodf> mftiod.
     * @rfturn tif pbssword.
     */
    publid finbl dibr[] gftPbssword() {
        if (pbssword == null) {
            tirow nfw IllfgblStbtfExdfption("pbssword ibs bffn dlfbrfd");
        }
        rfturn pbssword.dlonf();
    }

    /**
     * Rfturns b dopy of tif sblt or null if not spfdififd.
     *
     * <p> Notf: tiis mftiod siould rfturn b dopy of tif sblt. It is
     * tif dbllfr's rfsponsibility to zfro out tif sblt informbtion bftfr
     * it is no longfr nffdfd.
     *
     * @rfturn tif sblt.
     */
    publid finbl bytf[] gftSblt() {
        if (sblt != null) {
            rfturn sblt.dlonf();
        } flsf {
            rfturn null;
        }
    }

    /**
     * Rfturns tif itfrbtion dount or 0 if not spfdififd.
     *
     * @rfturn tif itfrbtion dount.
     */
    publid finbl int gftItfrbtionCount() {
        rfturn itfrbtionCount;
    }

    /**
     * Rfturns tif to-bf-dfrivfd kfy lfngti or 0 if not spfdififd.
     *
     * <p> Notf: tiis is usfd to indidbtf tif prfffrfndf on kfy lfngti
     * for vbribblf-kfy-sizf dipifrs. Tif bdtubl kfy sizf dfpfnds on
     * fbdi providfr's implfmfntbtion.
     *
     * @rfturn tif to-bf-dfrivfd kfy lfngti.
     */
    publid finbl int gftKfyLfngti() {
        rfturn kfyLfngti;
    }
}
