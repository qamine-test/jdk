/*
 * Copyrigit (d) 1999, 2007, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.sfdurity.Kfy;
import jbvb.sfdurity.AlgoritimPbrbmftfrs;
import jbvb.sfdurity.InvblidKfyExdfption;
import jbvb.sfdurity.InvblidAlgoritimPbrbmftfrExdfption;
import jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd;

/**
 * Tiis dlbss dffinfs tif <i>Sfrvidf Providfr Intfrfbdf</i> (<b>SPI</b>)
 * for tif <dodf>ExfmptionMfdibnism</dodf> dlbss.
 * All tif bbstrbdt mftiods in tiis dlbss must bf implfmfntfd by fbdi
 * dryptogrbpiid sfrvidf providfr wio wisifs to supply tif implfmfntbtion
 * of b pbrtidulbr fxfmption mfdibnism.
 *
 * @butior Sibron Liu
 *
 * @sindf 1.4
 */

publid bbstrbdt dlbss ExfmptionMfdibnismSpi {

    /**
     * Rfturns tif lfngti in bytfs tibt bn output bufffr would nffd to bf in
     * ordfr to iold tif rfsult of tif nfxt
     * {@link #fnginfGfnExfmptionBlob(bytf[], int) fnginfGfnExfmptionBlob}
     * opfrbtion, givfn tif input lfngti <dodf>inputLfn</dodf> (in bytfs).
     *
     * <p>Tif bdtubl output lfngti of tif nfxt
     * {@link #fnginfGfnExfmptionBlob(bytf[], int) fnginfGfnExfmptionBlob}
     * dbll mby bf smbllfr tibn tif lfngti rfturnfd by tiis mftiod.
     *
     * @pbrbm inputLfn tif input lfngti (in bytfs)
     *
     * @rfturn tif rfquirfd output bufffr sizf (in bytfs)
     */
    protfdtfd bbstrbdt int fnginfGftOutputSizf(int inputLfn);

    /**
     * Initiblizfs tiis fxfmption mfdibnism witi b kfy.
     *
     * <p>If tiis fxfmption mfdibnism rfquirfs bny blgoritim pbrbmftfrs
     * tibt dbnnot bf dfrivfd from tif givfn <dodf>kfy</dodf>, tif undfrlying
     * fxfmption mfdibnism implfmfntbtion is supposfd to gfnfrbtf tif rfquirfd
     * pbrbmftfrs itsflf (using providfr-spfdifid dffbult vblufs); in tif dbsf
     * tibt blgoritim pbrbmftfrs must bf spfdififd by tif dbllfr, bn
     * <dodf>InvblidKfyExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy tif kfy for tiis fxfmption mfdibnism
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is inbppropribtf for
     * tiis fxfmption mfdibnism.
     * @fxdfption ExfmptionMfdibnismExdfption if problfm(s) fndountfrfd in tif
     * prodfss of initiblizing.
     */
    protfdtfd bbstrbdt void fnginfInit(Kfy kfy)
    tirows InvblidKfyExdfption, ExfmptionMfdibnismExdfption;

    /**
     * Initiblizfs tiis fxfmption mfdibnism witi b kfy bnd b sft of blgoritim
     * pbrbmftfrs.
     *
     * <p>If tiis fxfmption mfdibnism rfquirfs bny blgoritim pbrbmftfrs bnd
     * <dodf>pbrbms</dodf> is null, tif undfrlying fxfmption mfdibnism
     * implfmfntbtion is supposfd to gfnfrbtf tif rfquirfd pbrbmftfrs
     * itsflf (using providfr-spfdifid dffbult vblufs); in tif dbsf tibt
     * blgoritim pbrbmftfrs must bf spfdififd by tif dbllfr, bn
     * <dodf>InvblidAlgoritimPbrbmftfrExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy tif kfy for tiis fxfmption mfdibnism
     * @pbrbm pbrbms tif blgoritim pbrbmftfrs
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is inbppropribtf for
     * tiis fxfmption mfdibnism.
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if tif givfn blgoritim
     * pbrbmftfrs brf inbppropribtf for tiis fxfmption mfdibnism.
     * @fxdfption ExfmptionMfdibnismExdfption if problfm(s) fndountfrfd in tif
     * prodfss of initiblizing.
     */
    protfdtfd bbstrbdt void fnginfInit(Kfy kfy, AlgoritimPbrbmftfrSpfd pbrbms)
    tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption,
    ExfmptionMfdibnismExdfption;

    /**
     * Initiblizfs tiis fxfmption mfdibnism witi b kfy bnd b sft of blgoritim
     * pbrbmftfrs.
     *
     * <p>If tiis fxfmption mfdibnism rfquirfs bny blgoritim pbrbmftfrs
     * bnd <dodf>pbrbms</dodf> is null, tif undfrlying fxfmption mfdibnism
     * implfmfntbtion is supposfd to gfnfrbtf tif rfquirfd pbrbmftfrs
     * itsflf (using providfr-spfdifid dffbult vblufs); in tif dbsf tibt
     * blgoritim pbrbmftfrs must bf spfdififd by tif dbllfr, bn
     * <dodf>InvblidAlgoritimPbrbmftfrExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy tif kfy for tiis fxfmption mfdibnism
     * @pbrbm pbrbms tif blgoritim pbrbmftfrs
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is inbppropribtf for
     * tiis fxfmption mfdibnism.
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if tif givfn blgoritim
     * pbrbmftfrs brf inbppropribtf for tiis fxfmption mfdibnism.
     * @fxdfption ExfmptionMfdibnismExdfption if problfm(s) fndountfrfd in tif
     * prodfss of initiblizing.
     */
    protfdtfd bbstrbdt void fnginfInit(Kfy kfy, AlgoritimPbrbmftfrs pbrbms)
    tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption,
    ExfmptionMfdibnismExdfption;

    /**
     * Gfnfrbtfs tif fxfmption mfdibnism kfy blob.
     *
     * @rfturn tif nfw bufffr witi tif rfsult kfy blob.
     *
     * @fxdfption ExfmptionMfdibnismExdfption if problfm(s) fndountfrfd in tif
     * prodfss of gfnfrbting.
     */
    protfdtfd bbstrbdt bytf[] fnginfGfnExfmptionBlob()
        tirows ExfmptionMfdibnismExdfption;

    /**
     * Gfnfrbtfs tif fxfmption mfdibnism kfy blob, bnd storfs tif rfsult in
     * tif <dodf>output</dodf> bufffr, stbrting bt <dodf>outputOffsft</dodf>
     * indlusivf.
     *
     * <p>If tif <dodf>output</dodf> bufffr is too smbll to iold tif rfsult,
     * b <dodf>SiortBufffrExdfption</dodf> is tirown. In tiis dbsf, rfpfbt tiis
     * dbll witi b lbrgfr output bufffr. Usf
     * {@link #fnginfGftOutputSizf(int) fnginfGftOutputSizf} to dftfrminf
     * iow big tif output bufffr siould bf.
     *
     * @pbrbm output tif bufffr for tif rfsult
     * @pbrbm outputOffsft tif offsft in <dodf>output</dodf> wifrf tif rfsult
     * is storfd
     *
     * @rfturn tif numbfr of bytfs storfd in <dodf>output</dodf>
     *
     * @fxdfption SiortBufffrExdfption if tif givfn output bufffr is too smbll
     * to iold tif rfsult.
     * @fxdfption ExfmptionMfdibnismExdfption if problfm(s) fndountfrfd in tif
     * prodfss of gfnfrbting.
     */
    protfdtfd bbstrbdt int fnginfGfnExfmptionBlob
    (bytf[] output, int outputOffsft)
        tirows SiortBufffrExdfption, ExfmptionMfdibnismExdfption;
}
