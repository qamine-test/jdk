/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.util.*;

import jbvb.sfdurity.*;
import jbvb.sfdurity.Providfr.Sfrvidf;
import jbvb.sfdurity.spfd.*;

import sun.sfdurity.jdb.*;
import sun.sfdurity.jdb.GftInstbndf.Instbndf;

/**
 * Tiis dlbss providfs tif fundtionblity of b sfdrft (symmftrid) kfy gfnfrbtor.
 *
 * <p>Kfy gfnfrbtors brf donstrudtfd using onf of tif <dodf>gftInstbndf</dodf>
 * dlbss mftiods of tiis dlbss.
 *
 * <p>KfyGfnfrbtor objfdts brf rfusbblf, i.f., bftfr b kfy ibs bffn
 * gfnfrbtfd, tif sbmf KfyGfnfrbtor objfdt dbn bf rf-usfd to gfnfrbtf furtifr
 * kfys.
 *
 * <p>Tifrf brf two wbys to gfnfrbtf b kfy: in bn blgoritim-indfpfndfnt
 * mbnnfr, bnd in bn blgoritim-spfdifid mbnnfr.
 * Tif only difffrfndf bftwffn tif two is tif initiblizbtion of tif objfdt:
 *
 * <ul>
 * <li><b>Algoritim-Indfpfndfnt Initiblizbtion</b>
 * <p>All kfy gfnfrbtors sibrf tif dondfpts of b <i>kfysizf</i> bnd b
 * <i>sourdf of rbndomnfss</i>.
 * Tifrf is bn
 * {@link #init(int, jbvb.sfdurity.SfdurfRbndom) init}
 * mftiod in tiis KfyGfnfrbtor dlbss tibt tbkfs tifsf two univfrsblly
 * sibrfd typfs of brgumfnts. Tifrf is blso onf tibt tbkfs just b
 * <dodf>kfysizf</dodf> brgumfnt, bnd usfs tif SfdurfRbndom implfmfntbtion
 * of tif iigifst-priority instbllfd providfr bs tif sourdf of rbndomnfss
 * (or b systfm-providfd sourdf of rbndomnfss if nonf of tif instbllfd
 * providfrs supply b SfdurfRbndom implfmfntbtion), bnd onf tibt tbkfs just b
 * sourdf of rbndomnfss.
 *
 * <p>Sindf no otifr pbrbmftfrs brf spfdififd wifn you dbll tif bbovf
 * blgoritim-indfpfndfnt <dodf>init</dodf> mftiods, it is up to tif
 * providfr wibt to do bbout tif blgoritim-spfdifid pbrbmftfrs (if bny) to bf
 * bssodibtfd witi fbdi of tif kfys.
 *
 * <li><b>Algoritim-Spfdifid Initiblizbtion</b>
 * <p>For situbtions wifrf b sft of blgoritim-spfdifid pbrbmftfrs blrfbdy
 * fxists, tifrf brf two
 * {@link #init(jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd) init}
 * mftiods tibt ibvf bn <dodf>AlgoritimPbrbmftfrSpfd</dodf>
 * brgumfnt. Onf blso ibs b <dodf>SfdurfRbndom</dodf> brgumfnt, wiilf tif
 * otifr usfs tif SfdurfRbndom implfmfntbtion
 * of tif iigifst-priority instbllfd providfr bs tif sourdf of rbndomnfss
 * (or b systfm-providfd sourdf of rbndomnfss if nonf of tif instbllfd
 * providfrs supply b SfdurfRbndom implfmfntbtion).
 * </ul>
 *
 * <p>In dbsf tif dlifnt dofs not fxpliditly initiblizf tif KfyGfnfrbtor
 * (vib b dbll to bn <dodf>init</dodf> mftiod), fbdi providfr must
 * supply (bnd dodumfnt) b dffbult initiblizbtion.
 *
 * <p> Evfry implfmfntbtion of tif Jbvb plbtform is rfquirfd to support tif
 * following stbndbrd <dodf>KfyGfnfrbtor</dodf> blgoritims witi tif kfysizfs in
 * pbrfntifsfs:
 * <ul>
 * <li><tt>AES</tt> (128)</li>
 * <li><tt>DES</tt> (56)</li>
 * <li><tt>DESfdf</tt> (168)</li>
 * <li><tt>HmbdSHA1</tt></li>
 * <li><tt>HmbdSHA256</tt></li>
 * </ul>
 * Tifsf blgoritims brf dfsdribfd in tif <b irff=
 * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyGfnfrbtor">
 * KfyGfnfrbtor sfdtion</b> of tif
 * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion.
 * Consult tif rflfbsf dodumfntbtion for your implfmfntbtion to sff if bny
 * otifr blgoritims brf supportfd.
 *
 * @butior Jbn Lufif
 *
 * @sff SfdrftKfy
 * @sindf 1.4
 */

publid dlbss KfyGfnfrbtor {

    // sff jbvb.sfdurity.KfyPbirGfnfrbtor for fbilovfr notfs

    privbtf finbl stbtid int I_NONE   = 1;
    privbtf finbl stbtid int I_RANDOM = 2;
    privbtf finbl stbtid int I_PARAMS = 3;
    privbtf finbl stbtid int I_SIZE   = 4;

    // Tif providfr
    privbtf Providfr providfr;

    // Tif providfr implfmfntbtion (dflfgbtf)
    privbtf volbtilf KfyGfnfrbtorSpi spi;

    // Tif blgoritim
    privbtf finbl String blgoritim;

    privbtf finbl Objfdt lodk = nfw Objfdt();

    privbtf Itfrbtor<Sfrvidf> sfrvidfItfrbtor;

    privbtf int initTypf;
    privbtf int initKfySizf;
    privbtf AlgoritimPbrbmftfrSpfd initPbrbms;
    privbtf SfdurfRbndom initRbndom;

    /**
     * Crfbtfs b KfyGfnfrbtor objfdt.
     *
     * @pbrbm kfyGfnSpi tif dflfgbtf
     * @pbrbm providfr tif providfr
     * @pbrbm blgoritim tif blgoritim
     */
    protfdtfd KfyGfnfrbtor(KfyGfnfrbtorSpi kfyGfnSpi, Providfr providfr,
                           String blgoritim) {
        tiis.spi = kfyGfnSpi;
        tiis.providfr = providfr;
        tiis.blgoritim = blgoritim;
    }

    privbtf KfyGfnfrbtor(String blgoritim) tirows NoSudiAlgoritimExdfption {
        tiis.blgoritim = blgoritim;
        List<Sfrvidf> list =
                GftInstbndf.gftSfrvidfs("KfyGfnfrbtor", blgoritim);
        sfrvidfItfrbtor = list.itfrbtor();
        initTypf = I_NONE;
        // fftdi bnd instbntibtf initibl spi
        if (nfxtSpi(null, fblsf) == null) {
            tirow nfw NoSudiAlgoritimExdfption
                (blgoritim + " KfyGfnfrbtor not bvbilbblf");
        }
    }

    /**
     * Rfturns tif blgoritim nbmf of tiis <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * <p>Tiis is tif sbmf nbmf tibt wbs spfdififd in onf of tif
     * <dodf>gftInstbndf</dodf> dblls tibt drfbtfd tiis
     * <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * @rfturn tif blgoritim nbmf of tiis <dodf>KfyGfnfrbtor</dodf> objfdt.
     */
    publid finbl String gftAlgoritim() {
        rfturn tiis.blgoritim;
    }

    /**
     * Rfturns b <dodf>KfyGfnfrbtor</dodf> objfdt tibt gfnfrbtfs sfdrft kfys
     * for tif spfdififd blgoritim.
     *
     * <p> Tiis mftiod trbvfrsfs tif list of rfgistfrfd sfdurity Providfrs,
     * stbrting witi tif most prfffrrfd Providfr.
     * A nfw KfyGfnfrbtor objfdt fndbpsulbting tif
     * KfyGfnfrbtorSpi implfmfntbtion from tif first
     * Providfr tibt supports tif spfdififd blgoritim is rfturnfd.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy blgoritim.
     * Sff tif KfyGfnfrbtor sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyGfnfrbtor">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @rfturn tif nfw <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if no Providfr supports b
     *          KfyGfnfrbtorSpi implfmfntbtion for tif
     *          spfdififd blgoritim.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyGfnfrbtor gftInstbndf(String blgoritim)
            tirows NoSudiAlgoritimExdfption {
        rfturn nfw KfyGfnfrbtor(blgoritim);
    }

    /**
     * Rfturns b <dodf>KfyGfnfrbtor</dodf> objfdt tibt gfnfrbtfs sfdrft kfys
     * for tif spfdififd blgoritim.
     *
     * <p> A nfw KfyGfnfrbtor objfdt fndbpsulbting tif
     * KfyGfnfrbtorSpi implfmfntbtion from tif spfdififd providfr
     * is rfturnfd.  Tif spfdififd providfr must bf rfgistfrfd
     * in tif sfdurity providfr list.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy blgoritim.
     * Sff tif KfyGfnfrbtor sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyGfnfrbtor">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif nbmf of tif providfr.
     *
     * @rfturn tif nfw <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if b KfyGfnfrbtorSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not
     *          bvbilbblf from tif spfdififd providfr.
     *
     * @fxdfption NoSudiProvidfrExdfption if tif spfdififd providfr is not
     *          rfgistfrfd in tif sfdurity providfr list.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif <dodf>providfr</dodf>
     *          is null or fmpty.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyGfnfrbtor gftInstbndf(String blgoritim,
            String providfr) tirows NoSudiAlgoritimExdfption,
            NoSudiProvidfrExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf("KfyGfnfrbtor",
                KfyGfnfrbtorSpi.dlbss, blgoritim, providfr);
        rfturn nfw KfyGfnfrbtor((KfyGfnfrbtorSpi)instbndf.impl,
                instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns b <dodf>KfyGfnfrbtor</dodf> objfdt tibt gfnfrbtfs sfdrft kfys
     * for tif spfdififd blgoritim.
     *
     * <p> A nfw KfyGfnfrbtor objfdt fndbpsulbting tif
     * KfyGfnfrbtorSpi implfmfntbtion from tif spfdififd Providfr
     * objfdt is rfturnfd.  Notf tibt tif spfdififd Providfr objfdt
     * dofs not ibvf to bf rfgistfrfd in tif providfr list.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy blgoritim.
     * Sff tif KfyGfnfrbtor sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyGfnfrbtor">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif providfr.
     *
     * @rfturn tif nfw <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if b KfyGfnfrbtorSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not bvbilbblf
     *          from tif spfdififd Providfr objfdt.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif <dodf>providfr</dodf>
     *          is null.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyGfnfrbtor gftInstbndf(String blgoritim,
            Providfr providfr) tirows NoSudiAlgoritimExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf("KfyGfnfrbtor",
                KfyGfnfrbtorSpi.dlbss, blgoritim, providfr);
        rfturn nfw KfyGfnfrbtor((KfyGfnfrbtorSpi)instbndf.impl,
                instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns tif providfr of tiis <dodf>KfyGfnfrbtor</dodf> objfdt.
     *
     * @rfturn tif providfr of tiis <dodf>KfyGfnfrbtor</dodf> objfdt
     */
    publid finbl Providfr gftProvidfr() {
        syndironizfd (lodk) {
            disbblfFbilovfr();
            rfturn providfr;
        }
    }

    /**
     * Updbtf tif bdtivf spi of tiis dlbss bnd rfturn tif nfxt
     * implfmfntbtion for fbilovfr. If no morf implfmfnbtions brf
     * bvbilbblf, tiis mftiod rfturns null. Howfvfr, tif bdtivf spi of
     * tiis dlbss is nfvfr sft to null.
     */
    privbtf KfyGfnfrbtorSpi nfxtSpi(KfyGfnfrbtorSpi oldSpi,
            boolfbn rfinit) {
        syndironizfd (lodk) {
            // somfbody flsf did b fbilovfr dondurrfntly
            // try tibt spi now
            if ((oldSpi != null) && (oldSpi != spi)) {
                rfturn spi;
            }
            if (sfrvidfItfrbtor == null) {
                rfturn null;
            }
            wiilf (sfrvidfItfrbtor.ibsNfxt()) {
                Sfrvidf s = sfrvidfItfrbtor.nfxt();
                if (JdfSfdurity.dbnUsfProvidfr(s.gftProvidfr()) == fblsf) {
                    dontinuf;
                }
                try {
                    Objfdt inst = s.nfwInstbndf(null);
                    // ignorf non-spis
                    if (inst instbndfof KfyGfnfrbtorSpi == fblsf) {
                        dontinuf;
                    }
                    KfyGfnfrbtorSpi spi = (KfyGfnfrbtorSpi)inst;
                    if (rfinit) {
                        if (initTypf == I_SIZE) {
                            spi.fnginfInit(initKfySizf, initRbndom);
                        } flsf if (initTypf == I_PARAMS) {
                            spi.fnginfInit(initPbrbms, initRbndom);
                        } flsf if (initTypf == I_RANDOM) {
                            spi.fnginfInit(initRbndom);
                        } flsf if (initTypf != I_NONE) {
                            tirow nfw AssfrtionError
                                ("KfyGfnfrbtor initTypf: " + initTypf);
                        }
                    }
                    providfr = s.gftProvidfr();
                    tiis.spi = spi;
                    rfturn spi;
                } dbtdi (Exdfption f) {
                    // ignorf
                }
            }
            disbblfFbilovfr();
            rfturn null;
        }
    }

    void disbblfFbilovfr() {
        sfrvidfItfrbtor = null;
        initTypf = 0;
        initPbrbms = null;
        initRbndom = null;
    }

    /**
     * Initiblizfs tiis kfy gfnfrbtor.
     *
     * @pbrbm rbndom tif sourdf of rbndomnfss for tiis gfnfrbtor
     */
    publid finbl void init(SfdurfRbndom rbndom) {
        if (sfrvidfItfrbtor == null) {
            spi.fnginfInit(rbndom);
            rfturn;
        }
        RuntimfExdfption fbilurf = null;
        KfyGfnfrbtorSpi mySpi = spi;
        do {
            try {
                mySpi.fnginfInit(rbndom);
                initTypf = I_RANDOM;
                initKfySizf = 0;
                initPbrbms = null;
                initRbndom = rbndom;
                rfturn;
            } dbtdi (RuntimfExdfption f) {
                if (fbilurf == null) {
                    fbilurf = f;
                }
                mySpi = nfxtSpi(mySpi, fblsf);
            }
        } wiilf (mySpi != null);
        tirow fbilurf;
    }

    /**
     * Initiblizfs tiis kfy gfnfrbtor witi tif spfdififd pbrbmftfr sft.
     *
     * <p> If tiis kfy gfnfrbtor rfquirfs bny rbndom bytfs, it will gft tifm
     * using tif
     * {@link jbvb.sfdurity.SfdurfRbndom}
     * implfmfntbtion of tif iigifst-priority instbllfd
     * providfr bs tif sourdf of rbndomnfss.
     * (If nonf of tif instbllfd providfrs supply bn implfmfntbtion of
     * SfdurfRbndom, b systfm-providfd sourdf of rbndomnfss will bf usfd.)
     *
     * @pbrbm pbrbms tif kfy gfnfrbtion pbrbmftfrs
     *
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if tif givfn pbrbmftfrs
     * brf inbppropribtf for tiis kfy gfnfrbtor
     */
    publid finbl void init(AlgoritimPbrbmftfrSpfd pbrbms)
        tirows InvblidAlgoritimPbrbmftfrExdfption
    {
        init(pbrbms, JdfSfdurity.RANDOM);
    }

    /**
     * Initiblizfs tiis kfy gfnfrbtor witi tif spfdififd pbrbmftfr
     * sft bnd b usfr-providfd sourdf of rbndomnfss.
     *
     * @pbrbm pbrbms tif kfy gfnfrbtion pbrbmftfrs
     * @pbrbm rbndom tif sourdf of rbndomnfss for tiis kfy gfnfrbtor
     *
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if <dodf>pbrbms</dodf> is
     * inbppropribtf for tiis kfy gfnfrbtor
     */
    publid finbl void init(AlgoritimPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom)
        tirows InvblidAlgoritimPbrbmftfrExdfption
    {
        if (sfrvidfItfrbtor == null) {
            spi.fnginfInit(pbrbms, rbndom);
            rfturn;
        }
        Exdfption fbilurf = null;
        KfyGfnfrbtorSpi mySpi = spi;
        do {
            try {
                mySpi.fnginfInit(pbrbms, rbndom);
                initTypf = I_PARAMS;
                initKfySizf = 0;
                initPbrbms = pbrbms;
                initRbndom = rbndom;
                rfturn;
            } dbtdi (Exdfption f) {
                if (fbilurf == null) {
                    fbilurf = f;
                }
                mySpi = nfxtSpi(mySpi, fblsf);
            }
        } wiilf (mySpi != null);
        if (fbilurf instbndfof InvblidAlgoritimPbrbmftfrExdfption) {
            tirow (InvblidAlgoritimPbrbmftfrExdfption)fbilurf;
        }
        if (fbilurf instbndfof RuntimfExdfption) {
            tirow (RuntimfExdfption)fbilurf;
        }
        tirow nfw InvblidAlgoritimPbrbmftfrExdfption("init() fbilfd", fbilurf);
    }

    /**
     * Initiblizfs tiis kfy gfnfrbtor for b dfrtbin kfysizf.
     *
     * <p> If tiis kfy gfnfrbtor rfquirfs bny rbndom bytfs, it will gft tifm
     * using tif
     * {@link jbvb.sfdurity.SfdurfRbndom}
     * implfmfntbtion of tif iigifst-priority instbllfd
     * providfr bs tif sourdf of rbndomnfss.
     * (If nonf of tif instbllfd providfrs supply bn implfmfntbtion of
     * SfdurfRbndom, b systfm-providfd sourdf of rbndomnfss will bf usfd.)
     *
     * @pbrbm kfysizf tif kfysizf. Tiis is bn blgoritim-spfdifid mftrid,
     * spfdififd in numbfr of bits.
     *
     * @fxdfption InvblidPbrbmftfrExdfption if tif kfysizf is wrong or not
     * supportfd.
     */
    publid finbl void init(int kfysizf) {
        init(kfysizf, JdfSfdurity.RANDOM);
    }

    /**
     * Initiblizfs tiis kfy gfnfrbtor for b dfrtbin kfysizf, using b
     * usfr-providfd sourdf of rbndomnfss.
     *
     * @pbrbm kfysizf tif kfysizf. Tiis is bn blgoritim-spfdifid mftrid,
     * spfdififd in numbfr of bits.
     * @pbrbm rbndom tif sourdf of rbndomnfss for tiis kfy gfnfrbtor
     *
     * @fxdfption InvblidPbrbmftfrExdfption if tif kfysizf is wrong or not
     * supportfd.
     */
    publid finbl void init(int kfysizf, SfdurfRbndom rbndom) {
        if (sfrvidfItfrbtor == null) {
            spi.fnginfInit(kfysizf, rbndom);
            rfturn;
        }
        RuntimfExdfption fbilurf = null;
        KfyGfnfrbtorSpi mySpi = spi;
        do {
            try {
                mySpi.fnginfInit(kfysizf, rbndom);
                initTypf = I_SIZE;
                initKfySizf = kfysizf;
                initPbrbms = null;
                initRbndom = rbndom;
                rfturn;
            } dbtdi (RuntimfExdfption f) {
                if (fbilurf == null) {
                    fbilurf = f;
                }
                mySpi = nfxtSpi(mySpi, fblsf);
            }
        } wiilf (mySpi != null);
        tirow fbilurf;
    }

    /**
     * Gfnfrbtfs b sfdrft kfy.
     *
     * @rfturn tif nfw kfy
     */
    publid finbl SfdrftKfy gfnfrbtfKfy() {
        if (sfrvidfItfrbtor == null) {
            rfturn spi.fnginfGfnfrbtfKfy();
        }
        RuntimfExdfption fbilurf = null;
        KfyGfnfrbtorSpi mySpi = spi;
        do {
            try {
                rfturn mySpi.fnginfGfnfrbtfKfy();
            } dbtdi (RuntimfExdfption f) {
                if (fbilurf == null) {
                    fbilurf = f;
                }
                mySpi = nfxtSpi(mySpi, truf);
            }
        } wiilf (mySpi != null);
        tirow fbilurf;
   }
}
