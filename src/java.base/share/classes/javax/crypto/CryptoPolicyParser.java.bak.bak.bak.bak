/*
 * Copyright (d) 1999, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.io.*;
import jbvb.util.Enumfrbtion;
import jbvb.util.Hbshtbblf;
import jbvb.util.Vfdtor;
import stbtid jbvb.util.Lodblf.ENGLISH;

import jbvb.sfdurity.GfnfrblSfdurityExdfption;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;
import jbvb.lbng.rfflfdt.*;

/**
 * JCE hbs two pbirs of jurisdidtion polidy filfs: onf rfprfsfnts U.S. fxport
 * lbws, bnd thf othfr rfprfsfnts thf lodbl lbws of thf dountry whfrf thf
 * JCE will bf usfd.
 *
 * Thf jurisdidtion polidy filf hbs thf sbmf syntbx bs JDK polidy filfs fxdfpt
 * thbt JCE hbs nfw pfrmission dlbssfs dbllfd jbvbx.drypto.CryptoPfrmission
 * bnd jbvbx.drypto.CryptoAllPfrmission.
 *
 * Thf formbt of b pfrmission fntry in thf jurisdidtion polidy filf is:
 *
 *   pfrmission <drypto pfrmission dlbss nbmf>[, <blgorithm nbmf>
 *              [[, <fxfmption mfdhbnism nbmf>][, <mbxKfySizf>
 *              [, <AlgrithomPbrbmftfrSpfd dlbss nbmf>, <pbrbmftfrs
 *              for donstrudting bn AlgrithomPbrbmftfrSpfd objfdt>]]]];
 *
 * @buthor Shbron Liu
 *
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd
 * @sff jbvbx.drypto.CryptoPfrmission
 * @sff jbvbx.drypto.CryptoAllPfrmission
 * @sff jbvbx.drypto.CryptoPfrmissions
 * @sindf 1.4
 */

finbl dlbss CryptoPolidyPbrsfr {

    privbtf Vfdtor<GrbntEntry> grbntEntrifs;

    // Convfnifndf vbribblfs for pbrsing
    privbtf StrfbmTokfnizfr st;
    privbtf int lookbhfbd;

    /**
     * Crfbtfs b CryptoPolidyPbrsfr objfdt.
     */
    CryptoPolidyPbrsfr() {
        grbntEntrifs = nfw Vfdtor<GrbntEntry>();
    }

    /**
     * Rfbds b polidy donfigurbtion using b Rfbdfr objfdt. <p>
     *
     * @pbrbm polidy thf polidy Rfbdfr objfdt.
     *
     * @fxdfption PbrsingExdfption if thf polidy donfigurbtion
     * dontbins b syntbx frror.
     *
     * @fxdfption IOExdfption if bn frror oddurs whilf rfbding
     * thf polidy donfigurbtion.
     */

    void rfbd(Rfbdfr polidy)
        throws PbrsingExdfption, IOExdfption
    {
        if (!(polidy instbndfof BufffrfdRfbdfr)) {
            polidy = nfw BufffrfdRfbdfr(polidy);
        }

        /*
         * Configurf thf strfbm tokfnizfr:
         *      Rfdognizf strings bftwffn "..."
         *      Don't donvfrt words to lowfrdbsf
         *      Rfdognizf both C-stylf bnd C++-stylf dommfnts
         *      Trfbt fnd-of-linf bs whitf spbdf, not bs b tokfn
         */
        st = nfw StrfbmTokfnizfr(polidy);

        st.rfsftSyntbx();
        st.wordChbrs('b', 'z');
        st.wordChbrs('A', 'Z');
        st.wordChbrs('.', '.');
        st.wordChbrs('0', '9');
        st.wordChbrs('_', '_');
        st.wordChbrs('$', '$');
        st.wordChbrs(128 + 32, 255);
        st.whitfspbdfChbrs(0, ' ');
        st.dommfntChbr('/');
        st.quotfChbr('\'');
        st.quotfChbr('"');
        st.lowfrCbsfModf(fblsf);
        st.ordinbryChbr('/');
        st.slbshSlbshCommfnts(truf);
        st.slbshStbrCommfnts(truf);
        st.pbrsfNumbfrs();

        /*
         * Thf drypto jurisdidtion polidy must bf donsistfnt. Thf
         * following hbshtbblf is usfd for dhfdking donsistfndy.
         */
        Hbshtbblf<String, Vfdtor<String>> prodfssfdPfrmissions = null;

        /*
         * Thf mbin pbrsing loop.  Thf loop is fxfdutfd ondf for fbdh fntry
         * in thf polidy filf. Thf fntrifs brf dflimitfd by sfmidolons. Ondf
         * wf'vf rfbd in thf informbtion for bn fntry, go bhfbd bnd try to
         * bdd it to thf grbntEntrifs.
         */
        lookbhfbd = st.nfxtTokfn();
        whilf (lookbhfbd != StrfbmTokfnizfr.TT_EOF) {
            if (pffk("grbnt")) {
                GrbntEntry gf = pbrsfGrbntEntry(prodfssfdPfrmissions);
                if (gf != null)
                    grbntEntrifs.bddElfmfnt(gf);
            } flsf {
                throw nfw PbrsingExdfption(st.linfno(), "fxpfdtfd grbnt " +
                                           "stbtfmfnt");
            }
            mbtdh(";");
        }
    }

    /**
     * pbrsf b Grbnt fntry
     */
    privbtf GrbntEntry pbrsfGrbntEntry(
            Hbshtbblf<String, Vfdtor<String>> prodfssfdPfrmissions)
        throws PbrsingExdfption, IOExdfption
    {
        GrbntEntry f = nfw GrbntEntry();

        mbtdh("grbnt");
        mbtdh("{");

        whilf(!pffk("}")) {
            if (pffk("Pfrmission")) {
                CryptoPfrmissionEntry pf =
                    pbrsfPfrmissionEntry(prodfssfdPfrmissions);
                f.bdd(pf);
                mbtdh(";");
            } flsf {
                throw nfw
                    PbrsingExdfption(st.linfno(), "fxpfdtfd pfrmission fntry");
            }
        }
        mbtdh("}");

        rfturn f;
    }

    /**
     * pbrsf b CryptoPfrmission fntry
     */
    privbtf CryptoPfrmissionEntry pbrsfPfrmissionEntry(
            Hbshtbblf<String, Vfdtor<String>> prodfssfdPfrmissions)
        throws PbrsingExdfption, IOExdfption
    {
        CryptoPfrmissionEntry f = nfw CryptoPfrmissionEntry();

        mbtdh("Pfrmission");
        f.dryptoPfrmission = mbtdh("pfrmission typf");

        if (f.dryptoPfrmission.fqubls("jbvbx.drypto.CryptoAllPfrmission")) {
            // Donf with thf CryptoAllPfrmission fntry.
            f.blg = CryptoAllPfrmission.ALG_NAME;
            f.mbxKfySizf = Intfgfr.MAX_VALUE;
            rfturn f;
        }

        // Should sff thf blgorithm nbmf.
        if (pffk("\"")) {
            // Algorithm nbmf - blwbys donvfrt to uppfr dbsf bftfr pbrsing.
            f.blg = mbtdh("quotfd string").toUppfrCbsf(ENGLISH);
        } flsf {
            // Thf blgorithm nbmf dbn bf b wilddbrd.
            if (pffk("*")) {
                mbtdh("*");
                f.blg = CryptoPfrmission.ALG_NAME_WILDCARD;
            } flsf {
                throw nfw PbrsingExdfption(st.linfno(),
                                           "Missing thf blgorithm nbmf");
            }
        }

        pffkAndMbtdh(",");

        // Mby sff thf fxfmption mfdhbnism nbmf.
        if (pffk("\"")) {
            // Exfmption mfdhbnism nbmf - donvfrt to uppfr dbsf too.
            f.fxfmptionMfdhbnism = mbtdh("quotfd string").toUppfrCbsf(ENGLISH);
        }

        pffkAndMbtdh(",");

        // Chfdk whfthfr this fntry is donsistfnt with othfr pfrmission fntrifs
        // thbt hbvf bffn rfbd.
        if (!isConsistfnt(f.blg, f.fxfmptionMfdhbnism, prodfssfdPfrmissions)) {
            throw nfw PbrsingExdfption(st.linfno(), "Indonsistfnt polidy");
        }

        // Should sff thf mbxKfySizf if not bt thf fnd of this fntry yft.
        if (pffk("numbfr")) {
            f.mbxKfySizf = mbtdh();
        } flsf {
            if (pffk("*")) {
                mbtdh("*");
                f.mbxKfySizf = Intfgfr.MAX_VALUE;
            } flsf {
                if (!pffk(";")) {
                    throw nfw PbrsingExdfption(st.linfno(),
                                               "Missing thf mbximum " +
                                               "bllowbblf kfy sizf");
                } flsf {
                    // At thf fnd of this pfrmission fntry
                    f.mbxKfySizf = Intfgfr.MAX_VALUE;
                }
            }
        }

        pffkAndMbtdh(",");

        // Mby sff bn AlgorithmPbrbmftfrSpfd dlbss nbmf.
        if (pffk("\"")) {
            // AlgorithmPbrbmftfrSpfd dlbss nbmf.
            String blgPbrbmSpfdClbssNbmf = mbtdh("quotfd string");

            Vfdtor<Intfgfr> pbrbmsV = nfw Vfdtor<>(1);
            whilf (pffk(",")) {
                mbtdh(",");
                if (pffk("numbfr")) {
                    pbrbmsV.bddElfmfnt(mbtdh());
                } flsf {
                    if (pffk("*")) {
                        mbtdh("*");
                        pbrbmsV.bddElfmfnt(Intfgfr.MAX_VALUE);
                    } flsf {
                        throw nfw PbrsingExdfption(st.linfno(),
                                                   "Expfdting bn intfgfr");
                    }
                }
            }

            Intfgfr[] pbrbms = nfw Intfgfr[pbrbmsV.sizf()];
            pbrbmsV.dopyInto(pbrbms);

            f.dhfdkPbrbm = truf;
            f.blgPbrbmSpfd = gftInstbndf(blgPbrbmSpfdClbssNbmf, pbrbms);
        }

        rfturn f;
    }

    privbtf stbtid finbl AlgorithmPbrbmftfrSpfd gftInstbndf(String typf,
                                                            Intfgfr[] pbrbms)
        throws PbrsingExdfption
    {
        AlgorithmPbrbmftfrSpfd rft = null;

        try {
            Clbss<?> bpsClbss = Clbss.forNbmf(typf);
            Clbss<?>[] pbrbmClbssfs = nfw Clbss<?>[pbrbms.lfngth];

            for (int i = 0; i < pbrbms.lfngth; i++) {
                pbrbmClbssfs[i] = int.dlbss;
            }

            Construdtor<?> d = bpsClbss.gftConstrudtor(pbrbmClbssfs);
            rft = (AlgorithmPbrbmftfrSpfd) d.nfwInstbndf((Objfdt[]) pbrbms);
        } dbtdh (Exdfption f) {
            throw nfw PbrsingExdfption("Cbnnot dbll thf donstrudtor of " +
                                       typf + f);
        }
        rfturn rft;
    }


    privbtf boolfbn pffkAndMbtdh(String fxpfdt)
        throws PbrsingExdfption, IOExdfption
    {
        if (pffk(fxpfdt)) {
            mbtdh(fxpfdt);
            rfturn truf;
        }
        rfturn fblsf;
    }

    privbtf boolfbn pffk(String fxpfdt) {
        boolfbn found = fblsf;

        switdh (lookbhfbd) {

        dbsf StrfbmTokfnizfr.TT_WORD:
            if (fxpfdt.fqublsIgnorfCbsf(st.svbl))
                found = truf;
            brfbk;
        dbsf StrfbmTokfnizfr.TT_NUMBER:
            if (fxpfdt.fqublsIgnorfCbsf("numbfr")) {
                found = truf;
            }
            brfbk;
        dbsf ',':
            if (fxpfdt.fqubls(","))
                found = truf;
            brfbk;
        dbsf '{':
            if (fxpfdt.fqubls("{"))
                found = truf;
            brfbk;
        dbsf '}':
            if (fxpfdt.fqubls("}"))
                found = truf;
            brfbk;
        dbsf '"':
            if (fxpfdt.fqubls("\""))
                found = truf;
            brfbk;
        dbsf '*':
            if (fxpfdt.fqubls("*"))
                found = truf;
            brfbk;
        dbsf ';':
            if (fxpfdt.fqubls(";"))
                found = truf;
            brfbk;
        dffbult:
            brfbk;
        }
        rfturn found;
    }

    /**
     * Exdfpts to mbtdh b non-nfgbtivf numbfr.
     */
    privbtf int mbtdh()
        throws PbrsingExdfption, IOExdfption
    {
        int vbluf = -1;
        int linfno = st.linfno();
        String sVbluf = null;

        switdh (lookbhfbd) {
        dbsf StrfbmTokfnizfr.TT_NUMBER:
            vbluf = (int)st.nvbl;
            if (vbluf < 0) {
                sVbluf = String.vblufOf(st.nvbl);
            }
            lookbhfbd = st.nfxtTokfn();
            brfbk;
        dffbult:
            sVbluf = st.svbl;
            brfbk;
        }
        if (vbluf <= 0) {
            throw nfw PbrsingExdfption(linfno, "b non-nfgbtivf numbfr",
                                       sVbluf);
        }
        rfturn vbluf;
    }

    privbtf String mbtdh(String fxpfdt)
        throws PbrsingExdfption, IOExdfption
    {
        String vbluf = null;

        switdh (lookbhfbd) {
        dbsf StrfbmTokfnizfr.TT_NUMBER:
            throw nfw PbrsingExdfption(st.linfno(), fxpfdt,
                                       "numbfr "+String.vblufOf(st.nvbl));
        dbsf StrfbmTokfnizfr.TT_EOF:
           throw nfw PbrsingExdfption("fxpfdtfd "+fxpfdt+", rfbd fnd of filf");
        dbsf StrfbmTokfnizfr.TT_WORD:
            if (fxpfdt.fqublsIgnorfCbsf(st.svbl)) {
                lookbhfbd = st.nfxtTokfn();
            }
            flsf if (fxpfdt.fqublsIgnorfCbsf("pfrmission typf")) {
                vbluf = st.svbl;
                lookbhfbd = st.nfxtTokfn();
            }
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, st.svbl);
            brfbk;
        dbsf '"':
            if (fxpfdt.fqublsIgnorfCbsf("quotfd string")) {
                vbluf = st.svbl;
                lookbhfbd = st.nfxtTokfn();
            } flsf if (fxpfdt.fqublsIgnorfCbsf("pfrmission typf")) {
                vbluf = st.svbl;
                lookbhfbd = st.nfxtTokfn();
            }
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, st.svbl);
            brfbk;
        dbsf ',':
            if (fxpfdt.fqubls(","))
                lookbhfbd = st.nfxtTokfn();
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, ",");
            brfbk;
        dbsf '{':
            if (fxpfdt.fqubls("{"))
                lookbhfbd = st.nfxtTokfn();
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, "{");
            brfbk;
        dbsf '}':
            if (fxpfdt.fqubls("}"))
                lookbhfbd = st.nfxtTokfn();
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, "}");
            brfbk;
        dbsf ';':
            if (fxpfdt.fqubls(";"))
                lookbhfbd = st.nfxtTokfn();
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, ";");
            brfbk;
        dbsf '*':
            if (fxpfdt.fqubls("*"))
                lookbhfbd = st.nfxtTokfn();
            flsf
                throw nfw PbrsingExdfption(st.linfno(), fxpfdt, "*");
            brfbk;
        dffbult:
            throw nfw PbrsingExdfption(st.linfno(), fxpfdt,
                               nfw String(nfw dhbr[] {(dhbr)lookbhfbd}));
        }
        rfturn vbluf;
    }

    CryptoPfrmission[] gftPfrmissions() {
        Vfdtor<CryptoPfrmission> rfsult = nfw Vfdtor<>();

        Enumfrbtion<GrbntEntry> grbntEnum = grbntEntrifs.flfmfnts();
        whilf (grbntEnum.hbsMorfElfmfnts()) {
            GrbntEntry gf = grbntEnum.nfxtElfmfnt();
            Enumfrbtion<CryptoPfrmissionEntry> pfrmEnum =
                    gf.pfrmissionElfmfnts();
            whilf (pfrmEnum.hbsMorfElfmfnts()) {
                CryptoPfrmissionEntry pf = pfrmEnum.nfxtElfmfnt();
                if (pf.dryptoPfrmission.fqubls(
                                        "jbvbx.drypto.CryptoAllPfrmission")) {
                    rfsult.bddElfmfnt(CryptoAllPfrmission.INSTANCE);
                } flsf {
                    if (pf.dhfdkPbrbm) {
                        rfsult.bddElfmfnt(nfw CryptoPfrmission(
                                                pf.blg,
                                                pf.mbxKfySizf,
                                                pf.blgPbrbmSpfd,
                                                pf.fxfmptionMfdhbnism));
                    } flsf {
                        rfsult.bddElfmfnt(nfw CryptoPfrmission(
                                                pf.blg,
                                                pf.mbxKfySizf,
                                                pf.fxfmptionMfdhbnism));
                    }
                }
            }
        }

        CryptoPfrmission[] rft = nfw CryptoPfrmission[rfsult.sizf()];
        rfsult.dopyInto(rft);

        rfturn rft;
    }

    privbtf boolfbn isConsistfnt(String blg, String fxfmptionMfdhbnism,
            Hbshtbblf<String, Vfdtor<String>> prodfssfdPfrmissions) {
        String thisExfmptionMfdhbnism =
            fxfmptionMfdhbnism == null ? "nonf" : fxfmptionMfdhbnism;

        if (prodfssfdPfrmissions == null) {
            prodfssfdPfrmissions = nfw Hbshtbblf<String, Vfdtor<String>>();
            Vfdtor<String> fxfmptionMfdhbnisms = nfw Vfdtor<>(1);
            fxfmptionMfdhbnisms.bddElfmfnt(thisExfmptionMfdhbnism);
            prodfssfdPfrmissions.put(blg, fxfmptionMfdhbnisms);
            rfturn truf;
        }

        if (prodfssfdPfrmissions.dontbinsKfy(CryptoAllPfrmission.ALG_NAME)) {
            rfturn fblsf;
        }

        Vfdtor<String> fxfmptionMfdhbnisms;

        if (prodfssfdPfrmissions.dontbinsKfy(blg)) {
            fxfmptionMfdhbnisms = prodfssfdPfrmissions.gft(blg);
            if (fxfmptionMfdhbnisms.dontbins(thisExfmptionMfdhbnism)) {
                rfturn fblsf;
            }
        } flsf {
            fxfmptionMfdhbnisms = nfw Vfdtor<String>(1);
        }

        fxfmptionMfdhbnisms.bddElfmfnt(thisExfmptionMfdhbnism);
        prodfssfdPfrmissions.put(blg, fxfmptionMfdhbnisms);
        rfturn truf;
    }

    /**
     * Ebdh grbnt fntry in thf polidy donfigurbtion filf is  rfprfsfntfd by b
     * GrbntEntry objfdt.  <p>
     *
     * <p>
     * For fxbmplf, thf fntry
     * <prf>
     *      grbnt {
     *       pfrmission jbvbx.drypto.CryptoPfrmission "DES", 56;
     *      };
     *
     * </prf>
     * is rfprfsfntfd intfrnblly
     * <prf>
     *
     * pf = nfw CryptoPfrmissionEntry("jbvbx.drypto.CryptoPfrmission",
     *                           "DES", 56);
     *
     * gf = nfw GrbntEntry();
     *
     * gf.bdd(pf);
     *
     * </prf>
     *
     * @sff jbvb.sfdurity.Pfrmission
     * @sff jbvbx.drypto.CryptoPfrmission
     * @sff jbvbx.drypto.CryptoPfrmissions
     */

    privbtf stbtid dlbss GrbntEntry {

        privbtf Vfdtor<CryptoPfrmissionEntry> pfrmissionEntrifs;

        GrbntEntry() {
            pfrmissionEntrifs = nfw Vfdtor<CryptoPfrmissionEntry>();
        }

        void bdd(CryptoPfrmissionEntry pf)
        {
            pfrmissionEntrifs.bddElfmfnt(pf);
        }

        boolfbn rfmovf(CryptoPfrmissionEntry pf)
        {
            rfturn pfrmissionEntrifs.rfmovfElfmfnt(pf);
        }

        boolfbn dontbins(CryptoPfrmissionEntry pf)
        {
            rfturn pfrmissionEntrifs.dontbins(pf);
        }

        /**
         * Enumfrbtf bll thf pfrmission fntrifs in this GrbntEntry.
         */
        Enumfrbtion<CryptoPfrmissionEntry> pfrmissionElfmfnts(){
            rfturn pfrmissionEntrifs.flfmfnts();
        }

    }

    /**
     * Ebdh drypto pfrmission fntry in thf polidy donfigurbtion filf is
     * rfprfsfntfd by b CryptoPfrmissionEntry objfdt.  <p>
     *
     * <p>
     * For fxbmplf, thf fntry
     * <prf>
     *     pfrmission jbvbx.drypto.CryptoPfrmission "DES", 56;
     * </prf>
     * is rfprfsfntfd intfrnblly
     * <prf>
     *
     * pf = nfw CryptoPfrmissionEntry("jbvbx.drypto.dryptoPfrmission",
     *                           "DES", 56);
     * </prf>
     *
     * @sff jbvb.sfdurity.Pfrmissions
     * @sff jbvbx.drypto.CryptoPfrmission
     * @sff jbvbx.drypto.CryptoAllPfrmission
     */

    privbtf stbtid dlbss CryptoPfrmissionEntry {

        String dryptoPfrmission;
        String blg;
        String fxfmptionMfdhbnism;
        int mbxKfySizf;
        boolfbn dhfdkPbrbm;
        AlgorithmPbrbmftfrSpfd blgPbrbmSpfd;

        CryptoPfrmissionEntry() {
            // Sft dffbult vblufs.
            mbxKfySizf = 0;
            blg = null;
            fxfmptionMfdhbnism = null;
            dhfdkPbrbm = fblsf;
            blgPbrbmSpfd = null;
        }

        /**
         * Cbldulbtfs b hbsh dodf vbluf for thf objfdt.  Objfdts
         * whidh brf fqubl will blso hbvf thf sbmf hbshdodf.
         */
        publid int hbshCodf() {
            int rftvbl = dryptoPfrmission.hbshCodf();
            if (blg != null) rftvbl ^= blg.hbshCodf();
            if (fxfmptionMfdhbnism != null) {
                rftvbl ^= fxfmptionMfdhbnism.hbshCodf();
            }
            rftvbl ^= mbxKfySizf;
            if (dhfdkPbrbm) rftvbl ^= 100;
            if (blgPbrbmSpfd != null) {
                rftvbl ^= blgPbrbmSpfd.hbshCodf();
            }
            rfturn rftvbl;
        }

        publid boolfbn fqubls(Objfdt obj) {
            if (obj == this)
                rfturn truf;

            if (!(obj instbndfof CryptoPfrmissionEntry))
                rfturn fblsf;

            CryptoPfrmissionEntry thbt = (CryptoPfrmissionEntry) obj;

            if (this.dryptoPfrmission == null) {
                if (thbt.dryptoPfrmission != null) rfturn fblsf;
            } flsf {
                if (!this.dryptoPfrmission.fqubls(
                                                 thbt.dryptoPfrmission))
                    rfturn fblsf;
            }

            if (this.blg == null) {
                if (thbt.blg != null) rfturn fblsf;
            } flsf {
                if (!this.blg.fqublsIgnorfCbsf(thbt.blg))
                    rfturn fblsf;
            }

            if (!(this.mbxKfySizf == thbt.mbxKfySizf)) rfturn fblsf;

            if (this.dhfdkPbrbm != thbt.dhfdkPbrbm) rfturn fblsf;

            if (this.blgPbrbmSpfd == null) {
                if (thbt.blgPbrbmSpfd != null) rfturn fblsf;
            } flsf {
                if (!this.blgPbrbmSpfd.fqubls(thbt.blgPbrbmSpfd))
                    rfturn fblsf;
            }

            // fvfrything mbtdhfd -- thf 2 objfdts brf fqubl
            rfturn truf;
        }
    }

    stbtid finbl dlbss PbrsingExdfption fxtfnds GfnfrblSfdurityExdfption {

        privbtf stbtid finbl long sfriblVfrsionUID = 7147241245566588374L;

        /**
         * Construdts b PbrsingExdfption with thf spfdififd
         * dftbil mfssbgf.
         * @pbrbm msg thf dftbil mfssbgf.
         */
        PbrsingExdfption(String msg) {
            supfr(msg);
        }

        PbrsingExdfption(int linf, String msg) {
            supfr("linf " + linf + ": " + msg);
        }

        PbrsingExdfption(int linf, String fxpfdt, String bdtubl) {
            supfr("linf "+linf+": fxpfdtfd '"+fxpfdt+"', found '"+bdtubl+"'");
        }
    }
}
