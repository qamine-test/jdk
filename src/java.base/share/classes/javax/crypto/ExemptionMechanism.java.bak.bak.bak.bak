/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.sfdurity.AlgorithmPbrbmftfrs;
import jbvb.sfdurity.Providfr;
import jbvb.sfdurity.Kfy;
import jbvb.sfdurity.Sfdurity;
import jbvb.sfdurity.NoSudhAlgorithmExdfption;
import jbvb.sfdurity.NoSudhProvidfrExdfption;
import jbvb.sfdurity.InvblidKfyExdfption;
import jbvb.sfdurity.InvblidAlgorithmPbrbmftfrExdfption;
import jbvb.sfdurity.spfd.AlgorithmPbrbmftfrSpfd;

import sun.sfdurity.jdb.GftInstbndf.Instbndf;

/**
 * This dlbss providfs thf fundtionblity of bn fxfmption mfdhbnism, fxbmplfs
 * of whidh brf <i>kfy rfdovfry</i>, <i>kfy wfbkfning</i>, bnd
 * <i>kfy fsdrow</i>.
 *
 * <p>Applidbtions or bpplfts thbt usf bn fxfmption mfdhbnism mby bf grbntfd
 * strongfr fndryption dbpbbilitifs thbn thosf whidh don't.
 *
 * @sindf 1.4
 */

publid dlbss ExfmptionMfdhbnism {

    // Thf providfr
    privbtf Providfr providfr;

    // Thf providfr implfmfntbtion (dflfgbtf)
    privbtf ExfmptionMfdhbnismSpi fxmfdhSpi;

    // Thf nbmf of thf fxfmption mfdhbnism.
    privbtf String mfdhbnism;

    // Flbg whidh indidbtfs whfthfr this ExfmptionMfdhbnism
    // rfsult is gfnfrbtfd suddfssfully.
    privbtf boolfbn donf = fblsf;

    // Stbtf informbtion
    privbtf boolfbn initiblizfd = fblsf;

    // Storf bwby thf kfy bt init() timf for lbtfr dompbrison.
    privbtf Kfy kfyStorfd = null;

    /**
     * Crfbtfs b ExfmptionMfdhbnism objfdt.
     *
     * @pbrbm fxmfdhSpi thf dflfgbtf
     * @pbrbm providfr thf providfr
     * @pbrbm mfdhbnism thf fxfmption mfdhbnism
     */
    protfdtfd ExfmptionMfdhbnism(ExfmptionMfdhbnismSpi fxmfdhSpi,
                                 Providfr providfr,
                                 String mfdhbnism) {
        this.fxmfdhSpi = fxmfdhSpi;
        this.providfr = providfr;
        this.mfdhbnism = mfdhbnism;
    }

    /**
     * Rfturns thf fxfmption mfdhbnism nbmf of this
     * <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * <p>This is thf sbmf nbmf thbt wbs spfdififd in onf of thf
     * <dodf>gftInstbndf</dodf> dblls thbt drfbtfd this
     * <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * @rfturn thf fxfmption mfdhbnism nbmf of this
     * <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     */
    publid finbl String gftNbmf() {
        rfturn this.mfdhbnism;
    }

    /**
     * Rfturns bn <dodf>ExfmptionMfdhbnism</dodf> objfdt thbt implfmfnts thf
     * spfdififd fxfmption mfdhbnism blgorithm.
     *
     * <p> This mfthod trbvfrsfs thf list of rfgistfrfd sfdurity Providfrs,
     * stbrting with thf most prfffrrfd Providfr.
     * A nfw ExfmptionMfdhbnism objfdt fndbpsulbting thf
     * ExfmptionMfdhbnismSpi implfmfntbtion from thf first
     * Providfr thbt supports thf spfdififd blgorithm is rfturnfd.
     *
     * <p> Notf thbt thf list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * thf {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mfthod.
     *
     * @pbrbm blgorithm thf stbndbrd nbmf of thf rfqufstfd fxfmption
     * mfdhbnism.
     * Sff thf ExfmptionMfdhbnism sfdtion in thf
     * <b hrff=
     *   "{@dodRoot}/../tfdhnotfs/guidfs/sfdurity/StbndbrdNbmfs.html#Exfmption">
     * Jbvb Cryptogrbphy Ardhitfdturf Stbndbrd Algorithm Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd fxfmption mfdhbnism nbmfs.
     *
     * @rfturn thf nfw <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if <dodf>blgorithm</dodf>
     *          is null.
     *
     * @fxdfption NoSudhAlgorithmExdfption if no Providfr supports bn
     *          ExfmptionMfdhbnismSpi implfmfntbtion for thf
     *          spfdififd blgorithm.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl ExfmptionMfdhbnism gftInstbndf(String blgorithm)
            throws NoSudhAlgorithmExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf("ExfmptionMfdhbnism",
                ExfmptionMfdhbnismSpi.dlbss, blgorithm);
        rfturn nfw ExfmptionMfdhbnism((ExfmptionMfdhbnismSpi)instbndf.impl,
                instbndf.providfr, blgorithm);
    }


    /**
     * Rfturns bn <dodf>ExfmptionMfdhbnism</dodf> objfdt thbt implfmfnts thf
     * spfdififd fxfmption mfdhbnism blgorithm.
     *
     * <p> A nfw ExfmptionMfdhbnism objfdt fndbpsulbting thf
     * ExfmptionMfdhbnismSpi implfmfntbtion from thf spfdififd providfr
     * is rfturnfd.  Thf spfdififd providfr must bf rfgistfrfd
     * in thf sfdurity providfr list.
     *
     * <p> Notf thbt thf list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * thf {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mfthod.

     * @pbrbm blgorithm thf stbndbrd nbmf of thf rfqufstfd fxfmption mfdhbnism.
     * Sff thf ExfmptionMfdhbnism sfdtion in thf
     * <b hrff=
     *   "{@dodRoot}/../tfdhnotfs/guidfs/sfdurity/StbndbrdNbmfs.html#Exfmption">
     * Jbvb Cryptogrbphy Ardhitfdturf Stbndbrd Algorithm Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd fxfmption mfdhbnism nbmfs.
     *
     * @pbrbm providfr thf nbmf of thf providfr.
     *
     * @rfturn thf nfw <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if <dodf>blgorithm</dodf>
     *          is null.
     *
     * @fxdfption NoSudhAlgorithmExdfption if bn ExfmptionMfdhbnismSpi
     *          implfmfntbtion for thf spfdififd blgorithm is not
     *          bvbilbblf from thf spfdififd providfr.
     *
     * @fxdfption NoSudhProvidfrExdfption if thf spfdififd providfr is not
     *          rfgistfrfd in thf sfdurity providfr list.
     *
     * @fxdfption IllfgblArgumfntExdfption if thf <dodf>providfr</dodf>
     *          is null or fmpty.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl ExfmptionMfdhbnism gftInstbndf(String blgorithm,
            String providfr) throws NoSudhAlgorithmExdfption,
            NoSudhProvidfrExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf("ExfmptionMfdhbnism",
                ExfmptionMfdhbnismSpi.dlbss, blgorithm, providfr);
        rfturn nfw ExfmptionMfdhbnism((ExfmptionMfdhbnismSpi)instbndf.impl,
                instbndf.providfr, blgorithm);
    }

    /**
     * Rfturns bn <dodf>ExfmptionMfdhbnism</dodf> objfdt thbt implfmfnts thf
     * spfdififd fxfmption mfdhbnism blgorithm.
     *
     * <p> A nfw ExfmptionMfdhbnism objfdt fndbpsulbting thf
     * ExfmptionMfdhbnismSpi implfmfntbtion from thf spfdififd Providfr
     * objfdt is rfturnfd.  Notf thbt thf spfdififd Providfr objfdt
     * dofs not hbvf to bf rfgistfrfd in thf providfr list.
     *
     * @pbrbm blgorithm thf stbndbrd nbmf of thf rfqufstfd fxfmption mfdhbnism.
     * Sff thf ExfmptionMfdhbnism sfdtion in thf
     * <b hrff=
     *   "{@dodRoot}/../tfdhnotfs/guidfs/sfdurity/StbndbrdNbmfs.html#Exfmption">
     * Jbvb Cryptogrbphy Ardhitfdturf Stbndbrd Algorithm Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd fxfmption mfdhbnism nbmfs.
     *
     * @pbrbm providfr thf providfr.
     *
     * @rfturn thf nfw <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if <dodf>blgorithm</dodf>
     *          is null.
     *
     * @fxdfption NoSudhAlgorithmExdfption if bn ExfmptionMfdhbnismSpi
     *          implfmfntbtion for thf spfdififd blgorithm is not bvbilbblf
     *          from thf spfdififd Providfr objfdt.
     *
     * @fxdfption IllfgblArgumfntExdfption if thf <dodf>providfr</dodf>
     *          is null.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl ExfmptionMfdhbnism gftInstbndf(String blgorithm,
            Providfr providfr) throws NoSudhAlgorithmExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf("ExfmptionMfdhbnism",
                ExfmptionMfdhbnismSpi.dlbss, blgorithm, providfr);
        rfturn nfw ExfmptionMfdhbnism((ExfmptionMfdhbnismSpi)instbndf.impl,
                instbndf.providfr, blgorithm);
    }

    /**
     * Rfturns thf providfr of this <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     *
     * @rfturn thf providfr of this <dodf>ExfmptionMfdhbnism</dodf> objfdt.
     */
    publid finbl Providfr gftProvidfr() {
        rfturn this.providfr;
    }

    /**
     * Rfturns whfthfr thf rfsult blob hbs bffn gfnfrbtfd suddfssfully by this
     * fxfmption mfdhbnism.
     *
     * <p>Thf mfthod blso mbkfs surf thbt thf kfy pbssfd in is thf sbmf bs
     * thf onf this fxfmption mfdhbnism usfd in initiblizing bnd gfnfrbting
     * phbsfs.
     *
     * @pbrbm kfy thf kfy thf drypto is going to usf.
     *
     * @rfturn whfthfr thf rfsult blob of thf sbmf kfy hbs bffn gfnfrbtfd
     * suddfssfully by this fxfmption mfdhbnism; fblsf if <dodf>kfy</dodf>
     * is null.
     *
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd
     * whilf dftfrmining whfthfr thf rfsult blob hbs bffn gfnfrbtfd suddfssfully
     * by this fxfmption mfdhbnism objfdt.
     */
    publid finbl boolfbn isCryptoAllowfd(Kfy kfy)
            throws ExfmptionMfdhbnismExdfption {
        boolfbn rft = fblsf;
        if (donf && (kfy != null)) {
            // Chfdk if thf kfy pbssfd in is thf sbmf bs thf onf
            // this fxfmption mfdhbnism usfd.
            rft = kfyStorfd.fqubls(kfy);
        }
        rfturn rft;
     }

    /**
     * Rfturns thf lfngth in bytfs thbt bn output bufffr would nffd to bf in
     * ordfr to hold thf rfsult of thf nfxt
     * {@link #gfnExfmptionBlob(bytf[]) gfnExfmptionBlob}
     * opfrbtion, givfn thf input lfngth <dodf>inputLfn</dodf> (in bytfs).
     *
     * <p>Thf bdtubl output lfngth of thf nfxt
     * {@link #gfnExfmptionBlob(bytf[]) gfnExfmptionBlob}
     * dbll mby bf smbllfr thbn thf lfngth rfturnfd by this mfthod.
     *
     * @pbrbm inputLfn thf input lfngth (in bytfs)
     *
     * @rfturn thf rfquirfd output bufffr sizf (in bytfs)
     *
     * @fxdfption IllfgblStbtfExdfption if this fxfmption mfdhbnism is in b
     * wrong stbtf (f.g., hbs not yft bffn initiblizfd)
     */
    publid finbl int gftOutputSizf(int inputLfn) throws IllfgblStbtfExdfption {
        if (!initiblizfd) {
            throw nfw IllfgblStbtfExdfption(
                "ExfmptionMfdhbnism not initiblizfd");
        }
        if (inputLfn < 0) {
            throw nfw IllfgblArgumfntExdfption(
                "Input sizf must bf fqubl to " + "or grfbtfr thbn zfro");
        }
        rfturn fxmfdhSpi.fnginfGftOutputSizf(inputLfn);
    }

    /**
     * Initiblizfs this fxfmption mfdhbnism with b kfy.
     *
     * <p>If this fxfmption mfdhbnism rfquirfs bny blgorithm pbrbmftfrs
     * thbt dbnnot bf dfrivfd from thf givfn <dodf>kfy</dodf>, thf
     * undfrlying fxfmption mfdhbnism implfmfntbtion is supposfd to
     * gfnfrbtf thf rfquirfd pbrbmftfrs itsflf (using providfr-spfdifid
     * dffbult vblufs); in thf dbsf thbt blgorithm pbrbmftfrs must bf
     * spfdififd by thf dbllfr, bn <dodf>InvblidKfyExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy thf kfy for this fxfmption mfdhbnism
     *
     * @fxdfption InvblidKfyExdfption if thf givfn kfy is inbppropribtf for
     * this fxfmption mfdhbnism.
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of initiblizing.
     */
    publid finbl void init(Kfy kfy)
            throws InvblidKfyExdfption, ExfmptionMfdhbnismExdfption {
        donf = fblsf;
        initiblizfd = fblsf;

        kfyStorfd = kfy;
        fxmfdhSpi.fnginfInit(kfy);
        initiblizfd = truf;
    }

    /**
     * Initiblizfs this fxfmption mfdhbnism with b kfy bnd b sft of blgorithm
     * pbrbmftfrs.
     *
     * <p>If this fxfmption mfdhbnism rfquirfs bny blgorithm pbrbmftfrs
     * bnd <dodf>pbrbms</dodf> is null, thf undfrlying fxfmption
     * mfdhbnism implfmfntbtion is supposfd to gfnfrbtf thf rfquirfd
     * pbrbmftfrs itsflf (using providfr-spfdifid dffbult vblufs); in thf dbsf
     * thbt blgorithm pbrbmftfrs must bf spfdififd by thf dbllfr, bn
     * <dodf>InvblidAlgorithmPbrbmftfrExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy thf kfy for this fxfmption mfdhbnism
     * @pbrbm pbrbms thf blgorithm pbrbmftfrs
     *
     * @fxdfption InvblidKfyExdfption if thf givfn kfy is inbppropribtf for
     * this fxfmption mfdhbnism.
     * @fxdfption InvblidAlgorithmPbrbmftfrExdfption if thf givfn blgorithm
     * pbrbmftfrs brf inbppropribtf for this fxfmption mfdhbnism.
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of initiblizing.
     */
    publid finbl void init(Kfy kfy, AlgorithmPbrbmftfrSpfd pbrbms)
            throws InvblidKfyExdfption, InvblidAlgorithmPbrbmftfrExdfption,
            ExfmptionMfdhbnismExdfption {
        donf = fblsf;
        initiblizfd = fblsf;

        kfyStorfd = kfy;
        fxmfdhSpi.fnginfInit(kfy, pbrbms);
        initiblizfd = truf;
    }

    /**
     * Initiblizfs this fxfmption mfdhbnism with b kfy bnd b sft of blgorithm
     * pbrbmftfrs.
     *
     * <p>If this fxfmption mfdhbnism rfquirfs bny blgorithm pbrbmftfrs
     * bnd <dodf>pbrbms</dodf> is null, thf undfrlying fxfmption mfdhbnism
     * implfmfntbtion is supposfd to gfnfrbtf thf rfquirfd pbrbmftfrs itsflf
     * (using providfr-spfdifid dffbult vblufs); in thf dbsf thbt blgorithm
     * pbrbmftfrs must bf spfdififd by thf dbllfr, bn
     * <dodf>InvblidAlgorithmPbrbmftfrExdfption</dodf> is rbisfd.
     *
     * @pbrbm kfy thf kfy for this fxfmption mfdhbnism
     * @pbrbm pbrbms thf blgorithm pbrbmftfrs
     *
     * @fxdfption InvblidKfyExdfption if thf givfn kfy is inbppropribtf for
     * this fxfmption mfdhbnism.
     * @fxdfption InvblidAlgorithmPbrbmftfrExdfption if thf givfn blgorithm
     * pbrbmftfrs brf inbppropribtf for this fxfmption mfdhbnism.
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of initiblizing.
     */
    publid finbl void init(Kfy kfy, AlgorithmPbrbmftfrs pbrbms)
            throws InvblidKfyExdfption, InvblidAlgorithmPbrbmftfrExdfption,
            ExfmptionMfdhbnismExdfption {
        donf = fblsf;
        initiblizfd = fblsf;

        kfyStorfd = kfy;
        fxmfdhSpi.fnginfInit(kfy, pbrbms);
        initiblizfd = truf;
    }

    /**
     * Gfnfrbtfs thf fxfmption mfdhbnism kfy blob.
     *
     * @rfturn thf nfw bufffr with thf rfsult kfy blob.
     *
     * @fxdfption IllfgblStbtfExdfption if this fxfmption mfdhbnism is in
     * b wrong stbtf (f.g., hbs not bffn initiblizfd).
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of gfnfrbting.
     */
    publid finbl bytf[] gfnExfmptionBlob() throws IllfgblStbtfExdfption,
            ExfmptionMfdhbnismExdfption {
        if (!initiblizfd) {
            throw nfw IllfgblStbtfExdfption(
                "ExfmptionMfdhbnism not initiblizfd");
        }
        bytf[] blob = fxmfdhSpi.fnginfGfnExfmptionBlob();
        donf = truf;
        rfturn blob;
    }

    /**
     * Gfnfrbtfs thf fxfmption mfdhbnism kfy blob, bnd storfs thf rfsult in
     * thf <dodf>output</dodf> bufffr.
     *
     * <p>If thf <dodf>output</dodf> bufffr is too smbll to hold thf rfsult,
     * b <dodf>ShortBufffrExdfption</dodf> is thrown. In this dbsf, rfpfbt this
     * dbll with b lbrgfr output bufffr. Usf
     * {@link #gftOutputSizf(int) gftOutputSizf} to dftfrminf how big
     * thf output bufffr should bf.
     *
     * @pbrbm output thf bufffr for thf rfsult
     *
     * @rfturn thf numbfr of bytfs storfd in <dodf>output</dodf>
     *
     * @fxdfption IllfgblStbtfExdfption if this fxfmption mfdhbnism is in
     * b wrong stbtf (f.g., hbs not bffn initiblizfd).
     * @fxdfption ShortBufffrExdfption if thf givfn output bufffr is too smbll
     * to hold thf rfsult.
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of gfnfrbting.
     */
    publid finbl int gfnExfmptionBlob(bytf[] output)
            throws IllfgblStbtfExdfption, ShortBufffrExdfption,
            ExfmptionMfdhbnismExdfption {
        if (!initiblizfd) {
            throw nfw IllfgblStbtfExdfption
            ("ExfmptionMfdhbnism not initiblizfd");
        }
        int n = fxmfdhSpi.fnginfGfnExfmptionBlob(output, 0);
        donf = truf;
        rfturn n;
    }

    /**
     * Gfnfrbtfs thf fxfmption mfdhbnism kfy blob, bnd storfs thf rfsult in
     * thf <dodf>output</dodf> bufffr, stbrting bt <dodf>outputOffsft</dodf>
     * indlusivf.
     *
     * <p>If thf <dodf>output</dodf> bufffr is too smbll to hold thf rfsult,
     * b <dodf>ShortBufffrExdfption</dodf> is thrown. In this dbsf, rfpfbt this
     * dbll with b lbrgfr output bufffr. Usf
     * {@link #gftOutputSizf(int) gftOutputSizf} to dftfrminf how big
     * thf output bufffr should bf.
     *
     * @pbrbm output thf bufffr for thf rfsult
     * @pbrbm outputOffsft thf offsft in <dodf>output</dodf> whfrf thf rfsult
     * is storfd
     *
     * @rfturn thf numbfr of bytfs storfd in <dodf>output</dodf>
     *
     * @fxdfption IllfgblStbtfExdfption if this fxfmption mfdhbnism is in
     * b wrong stbtf (f.g., hbs not bffn initiblizfd).
     * @fxdfption ShortBufffrExdfption if thf givfn output bufffr is too smbll
     * to hold thf rfsult.
     * @fxdfption ExfmptionMfdhbnismExdfption if problfm(s) fndountfrfd in thf
     * prodfss of gfnfrbting.
     */
    publid finbl int gfnExfmptionBlob(bytf[] output, int outputOffsft)
            throws IllfgblStbtfExdfption, ShortBufffrExdfption,
            ExfmptionMfdhbnismExdfption {
        if (!initiblizfd) {
            throw nfw IllfgblStbtfExdfption
            ("ExfmptionMfdhbnism not initiblizfd");
        }
        int n = fxmfdhSpi.fnginfGfnExfmptionBlob(output, outputOffsft);
        donf = truf;
        rfturn n;
    }

    /**
     * Ensurfs thbt thf kfy storfd bwby by this ExfmptionMfdhbnism
     * objfdt will bf wipfd out whfn thfrf brf no morf rfffrfndfs to it.
     */
    protfdtfd void finblizf() {
        kfyStorfd = null;
        // Arf thfrf bnything flsf wf dould do?
    }
}
